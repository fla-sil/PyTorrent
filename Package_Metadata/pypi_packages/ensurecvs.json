{"info": {"author": "Konrad Weihmann", "author_email": "kweihmann@outlook.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Bug Tracking", "Topic :: Software Development :: Quality Assurance"], "description": "ensurecvs\n=========\n\n|Build status| |PyPI version| |Python version| |Downloads| |Language\ngrade: Python|\n\nPurpose\n-------\n\nThis tool shall help identify commits in current source tree that are\n\n-  available remote on the same branch\n-  available in the parent branch\n\nand are likely to contain bugfixes.\n\nHistory\n-------\n\nWhen you\u2019re using a 3rd party components in your project it\u2019s hard to\nbalance between keeping it safe and tested against keeping in touch with\nupstream/mainline, especially when you have to decide if the code is as\nsafe as possible.\n\nMost would rely here on CVE-notifications for the used component and the\ncorresponding version.\n\nI was watching the `2019\u2019s keynote of Greg Kroah-Hartman at Embedded\nLinux Conference Europe in\nLyon <https://www.youtube.com/watch?v=fIwr_znLsec&list=PLbzoR-pLrL6pamOj4UifcMJf560Ph6mJp&index=6&t=0s>`__\nwhere he said, that most issues don\u2019t even get a CVE entry anymore, they\nwill just be fixed with a commit in upstream (at least for the kernel).\n\nThis is somehow hard to maintain, as mostly you simply don\u2019t want to\nchange the feature-set (as this has been tested and approved) but need\nthe bug- and issue-fixes from that project.\n\nThat is where this tool comes into play - It performs automatic checks\nif there are upstream fixes available - and if so, if they only contain\nfixes and NOT features.\n\nEnsurecvs, helps you to **ensure** and you\u2019re using the best of the used\n**content versioning system**\n\nWhat it does\n~~~~~~~~~~~~\n\n-  It extracts the currently used commit from the local repository clone\n\n   -  this can be overridden by specifying ``--srcrev`` or ``--srctag``\n      in command line\n\n-  It extracts the currently used branch from the local repository clone\n\n   -  this can be overridden by specifying ``--srcbranch`` in command\n      line\n\n-  It gets all remote available commits in current branch\n-  It gets all commits made to \u2018master\u2019 since current branch has been\n   branched off (an alternative branch to \u2018master\u2019 can be specified by\n   using ``--upstream`` in command line)\n\n   -  it filters all commits out, that might have been cherry-picked in\n      current branch\n\n-  all the remaining commits are classified regarding their commit\n   message\n-  commits that are classified to be likely bugfixes are presented at\n   the console (STDOUT)\n\nUsage\n-----\n\n.. code:: shell\n\n   usage: ensurecsv [-h] [--srcbranch SRCBRANCH]\n                    [--srcrev SRCREV | --srctag SRCTAG] [--upstream UPSTREAM]\n                    localdir\n\n   Ensure that you're using the most secure source code\n\n   positional arguments:\n     localdir              Path to local repo\n\n   optional arguments:\n     -h, --help            show this help message and exit\n     --srcbranch SRCBRANCH\n                           Use explicitly given branch\n     --srcrev SRCREV       Use explicitly given source revision\n     --srctag SRCTAG       Use explicitly given tag\n     --upstream UPSTREAM   Use explicitly given branch as upstream\n\nInstallation\n------------\n\nFrom pypi\n~~~~~~~~~\n\nsimply run\n\n.. code:: sh\n\n   pip3 install ensurecvs\n\nFrom source\n~~~~~~~~~~~\n\n-  git clone this repository\n-  cd to <clone folder>/ensurecvs\n-  Install the needed requirements by running\n   ``pip3 install -r requirements.txt``\n-  run ``python3 setup.py build install`` (possibly \u2018sudo\u2019 is needed)\n\nOutput\n------\n\nThe tool will return\n\n.. code:: sh\n\n   [branch] commit <commit hash>:'<commit message>'  is likely to contain bugfixes\n\ne.g.\n\n.. code:: shell\n\n   [master] commit 173dfc1c07c9fa901a91adbc9bf8fd41961b9837:'Fix compile issue with python-astor' is likely to contain bugfixes\n\nthat means that commit **173dfc1c07c9fa901a91adbc9bf8fd41961b9837**\ncurrently to be found in branch **master** is likely to contain a bugfix\nthat isn\u2019t yet used in the currently selected branch\n\nImplementation notes\n--------------------\n\nCurrently only git-repositories are supported\n\nFuture\n------\n\nIf you have interest in one or more of the following topics, feel free\nto get in contact with me\n\n-  better commit classification (maybe with something like `this\n   here <https://github.com/nxs5899/Multi-Class-Text-Classification----Random-Forest>`__)\n-  better documentation\n-  changeset code analysis for better commit classification\n-  check on out-of-tree patches in local code\n-  compare the changeset diff for cherry-pick analysis\n-  streamline code\n-  svn-repository support\n\nContribution\n------------\n\nFeel free to add issues or pull requests\n\n.. |Build status| image:: https://github.com/priv-kweihmann/ensurecvs/workflows/Build/badge.svg\n.. |PyPI version| image:: https://badge.fury.io/py/ensurecvs.svg\n   :target: https://badge.fury.io/py/ensurecvs\n.. |Python version| image:: https://img.shields.io/pypi/pyversions/ensurecvs\n   :target: https://img.shields.io/pypi/pyversions/ensurecvs\n.. |Downloads| image:: https://img.shields.io/pypi/dm/ensurecvs\n   :target: https://img.shields.io/pypi/dm/ensurecvs\n.. |Language grade: Python| image:: https://img.shields.io/lgtm/grade/python/g/priv-kweihmann/ensurecvs.svg?logo=lgtm&logoWidth=18\n   :target: https://lgtm.com/projects/g/priv-kweihmann/ensurecvs/context:python", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/priv-kweihmann/ensurecvs", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ensurecvs", "package_url": "https://pypi.org/project/ensurecvs/", "platform": "", "project_url": "https://pypi.org/project/ensurecvs/", "project_urls": {"Homepage": "https://github.com/priv-kweihmann/ensurecvs"}, "release_url": "https://pypi.org/project/ensurecvs/1.0.3/", "requires_dist": null, "requires_python": "", "summary": "Find important upstream fixes", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b89917f2832589e8a9caf08d35140ef9c89be55/68747470733a2f2f6769746875622e636f6d2f707269762d6b776569686d616e6e2f656e737572656376732f776f726b666c6f77732f4275696c642f62616467652e737667\"> <a href=\"https://badge.fury.io/py/ensurecvs\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/90ef5e30586fabe02c12c226c882d2d9b9d5d07c/68747470733a2f2f62616467652e667572792e696f2f70792f656e737572656376732e737667\"></a> <a href=\"https://img.shields.io/pypi/pyversions/ensurecvs\" rel=\"nofollow\"><img alt=\"Python version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8827320bd4b276d85e199d5710f1845defb03c34/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f656e73757265637673\"></a> <a href=\"https://img.shields.io/pypi/dm/ensurecvs\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3d153e02941188447502fba27ae53215a27c7a3b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f656e73757265637673\"></a> <a href=\"https://lgtm.com/projects/g/priv-kweihmann/ensurecvs/context:python\" rel=\"nofollow\"><img alt=\"Language grade: Python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b5439fa65e6c31d9ecb4e3fb1fabdaf38803b75a/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f707974686f6e2f672f707269762d6b776569686d616e6e2f656e737572656376732e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138\"></a></p>\n<div id=\"purpose\">\n<h2>Purpose</h2>\n<p>This tool shall help identify commits in current source tree that are</p>\n<ul>\n<li>available remote on the same branch</li>\n<li>available in the parent branch</li>\n</ul>\n<p>and are likely to contain bugfixes.</p>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<p>When you\u2019re using a 3rd party components in your project it\u2019s hard to\nbalance between keeping it safe and tested against keeping in touch with\nupstream/mainline, especially when you have to decide if the code is as\nsafe as possible.</p>\n<p>Most would rely here on CVE-notifications for the used component and the\ncorresponding version.</p>\n<p>I was watching the <a href=\"https://www.youtube.com/watch?v=fIwr_znLsec&amp;list=PLbzoR-pLrL6pamOj4UifcMJf560Ph6mJp&amp;index=6&amp;t=0s\" rel=\"nofollow\">2019\u2019s keynote of Greg Kroah-Hartman at Embedded\nLinux Conference Europe in\nLyon</a>\nwhere he said, that most issues don\u2019t even get a CVE entry anymore, they\nwill just be fixed with a commit in upstream (at least for the kernel).</p>\n<p>This is somehow hard to maintain, as mostly you simply don\u2019t want to\nchange the feature-set (as this has been tested and approved) but need\nthe bug- and issue-fixes from that project.</p>\n<p>That is where this tool comes into play - It performs automatic checks\nif there are upstream fixes available - and if so, if they only contain\nfixes and NOT features.</p>\n<p>Ensurecvs, helps you to <strong>ensure</strong> and you\u2019re using the best of the used\n<strong>content versioning system</strong></p>\n<div id=\"what-it-does\">\n<h3>What it does</h3>\n<ul>\n<li>It extracts the currently used commit from the local repository clone<ul>\n<li>this can be overridden by specifying <tt><span class=\"pre\">--srcrev</span></tt> or <tt><span class=\"pre\">--srctag</span></tt>\nin command line</li>\n</ul>\n</li>\n<li>It extracts the currently used branch from the local repository clone<ul>\n<li>this can be overridden by specifying <tt><span class=\"pre\">--srcbranch</span></tt> in command\nline</li>\n</ul>\n</li>\n<li>It gets all remote available commits in current branch</li>\n<li>It gets all commits made to \u2018master\u2019 since current branch has been\nbranched off (an alternative branch to \u2018master\u2019 can be specified by\nusing <tt><span class=\"pre\">--upstream</span></tt> in command line)<ul>\n<li>it filters all commits out, that might have been cherry-picked in\ncurrent branch</li>\n</ul>\n</li>\n<li>all the remaining commits are classified regarding their commit\nmessage</li>\n<li>commits that are classified to be likely bugfixes are presented at\nthe console (STDOUT)</li>\n</ul>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>usage: ensurecsv <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>--srcbranch SRCBRANCH<span class=\"o\">]</span>\n                 <span class=\"o\">[</span>--srcrev SRCREV <span class=\"p\">|</span> --srctag SRCTAG<span class=\"o\">]</span> <span class=\"o\">[</span>--upstream UPSTREAM<span class=\"o\">]</span>\n                 localdir\n\nEnsure that you<span class=\"err\">'</span>re using the most secure <span class=\"nb\">source</span> code\n\npositional arguments:\n  localdir              Path to <span class=\"nb\">local</span> repo\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --srcbranch SRCBRANCH\n                        Use explicitly given branch\n  --srcrev SRCREV       Use explicitly given <span class=\"nb\">source</span> revision\n  --srctag SRCTAG       Use explicitly given tag\n  --upstream UPSTREAM   Use explicitly given branch as upstream\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"from-pypi\">\n<h3>From pypi</h3>\n<p>simply run</p>\n<pre>pip3 install ensurecvs\n</pre>\n</div>\n<div id=\"from-source\">\n<h3>From source</h3>\n<ul>\n<li>git clone this repository</li>\n<li>cd to &lt;clone folder&gt;/ensurecvs</li>\n<li>Install the needed requirements by running\n<tt>pip3 install <span class=\"pre\">-r</span> requirements.txt</tt></li>\n<li>run <tt>python3 setup.py build install</tt> (possibly \u2018sudo\u2019 is needed)</li>\n</ul>\n</div>\n</div>\n<div id=\"output\">\n<h2>Output</h2>\n<p>The tool will return</p>\n<pre><span class=\"o\">[</span>branch<span class=\"o\">]</span> commit &lt;commit hash&gt;:<span class=\"s1\">'&lt;commit message&gt;'</span>  is likely to contain bugfixes\n</pre>\n<p>e.g.</p>\n<pre><span class=\"o\">[</span>master<span class=\"o\">]</span> commit 173dfc1c07c9fa901a91adbc9bf8fd41961b9837:<span class=\"s1\">'Fix compile issue with python-astor'</span> is likely to contain bugfixes\n</pre>\n<p>that means that commit <strong>173dfc1c07c9fa901a91adbc9bf8fd41961b9837</strong>\ncurrently to be found in branch <strong>master</strong> is likely to contain a bugfix\nthat isn\u2019t yet used in the currently selected branch</p>\n</div>\n<div id=\"implementation-notes\">\n<h2>Implementation notes</h2>\n<p>Currently only git-repositories are supported</p>\n</div>\n<div id=\"future\">\n<h2>Future</h2>\n<p>If you have interest in one or more of the following topics, feel free\nto get in contact with me</p>\n<ul>\n<li>better commit classification (maybe with something like <a href=\"https://github.com/nxs5899/Multi-Class-Text-Classification----Random-Forest\" rel=\"nofollow\">this\nhere</a>)</li>\n<li>better documentation</li>\n<li>changeset code analysis for better commit classification</li>\n<li>check on out-of-tree patches in local code</li>\n<li>compare the changeset diff for cherry-pick analysis</li>\n<li>streamline code</li>\n<li>svn-repository support</li>\n</ul>\n</div>\n<div id=\"contribution\">\n<h2>Contribution</h2>\n<p>Feel free to add issues or pull requests</p>\n</div>\n\n          </div>"}, "last_serial": 6589882, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "abc07051c7e699de6609d5e2d5c961b9", "sha256": "5fcc127951a66cdfad06c10a4481707a9fa02e14c3d8204baf51da03025bd485"}, "downloads": -1, "filename": "ensurecvs-1.0.0-py3.6.egg", "has_sig": false, "md5_digest": "abc07051c7e699de6609d5e2d5c961b9", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 15156, "upload_time": "2019-11-20T19:46:41", "upload_time_iso_8601": "2019-11-20T19:46:41.083668Z", "url": "https://files.pythonhosted.org/packages/3f/30/f27eab0a2830bd37d646e467fb1ef59a0165f929dab3aa5fb22262ebdc9b/ensurecvs-1.0.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "849b55c52212d9e1f456b655157a6cb3", "sha256": "5449e58e04f23f9cf9841316f9363a4e8394d5d31f28cde2977e5226a88dd8c2"}, "downloads": -1, "filename": "ensurecvs-1.0.0.tar.gz", "has_sig": false, "md5_digest": "849b55c52212d9e1f456b655157a6cb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5704, "upload_time": "2019-11-20T19:46:51", "upload_time_iso_8601": "2019-11-20T19:46:51.300811Z", "url": "https://files.pythonhosted.org/packages/83/20/d8e40be21c1c7f20a78f35f1dbc37ef2df2726ee8a0a6f4d223c31a9854a/ensurecvs-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "8cbd732490358866bd16efce8609a9e2", "sha256": "4a145b736ce8612569aaa02d4011f21277577568eb55c657921ad05678e34838"}, "downloads": -1, "filename": "ensurecvs-1.0.1-py3.6.egg", "has_sig": false, "md5_digest": "8cbd732490358866bd16efce8609a9e2", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 16581, "upload_time": "2019-11-20T19:47:56", "upload_time_iso_8601": "2019-11-20T19:47:56.747144Z", "url": "https://files.pythonhosted.org/packages/9d/f8/5f6de754b2b1ba4b47cd68dd325472760a86fc9f2bc986884bc9c848b9ac/ensurecvs-1.0.1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "af5b0ba7f5b2e227ac4ae64d5d8432ba", "sha256": "c64ede79a0c5514833b2786b7b9e83b5659692c44cd2e160f5a912a5d1182090"}, "downloads": -1, "filename": "ensurecvs-1.0.1-py3.7.egg", "has_sig": false, "md5_digest": "af5b0ba7f5b2e227ac4ae64d5d8432ba", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 17376, "upload_time": "2020-01-01T12:32:41", "upload_time_iso_8601": "2020-01-01T12:32:41.850780Z", "url": "https://files.pythonhosted.org/packages/58/8a/6d4fb80ce46396e9c6eb0d88026a981765c63f06beb30dbf826bec25febd/ensurecvs-1.0.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa8b9786c318180ead6ffefafd785b7f", "sha256": "ec45be98cdd3d71255552f58c1b1faad2efd020b0f9414184ff2a515b635275e"}, "downloads": -1, "filename": "ensurecvs-1.0.1.tar.gz", "has_sig": false, "md5_digest": "aa8b9786c318180ead6ffefafd785b7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6268, "upload_time": "2019-11-20T19:48:04", "upload_time_iso_8601": "2019-11-20T19:48:04.818675Z", "url": "https://files.pythonhosted.org/packages/68/c2/35e3081bcb35d144b240cf3692058229f7daeb6e583fbc2ae8b12547f81a/ensurecvs-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "0e5901792c9ed8415880923dece172cd", "sha256": "308e350735e488218cf65b81b6f9c2bd0888280d98b3897587eafcfb56028ae4"}, "downloads": -1, "filename": "ensurecvs-1.0.2.tar.gz", "has_sig": false, "md5_digest": "0e5901792c9ed8415880923dece172cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8408, "upload_time": "2020-01-01T12:34:24", "upload_time_iso_8601": "2020-01-01T12:34:24.003442Z", "url": "https://files.pythonhosted.org/packages/57/5e/1592f19741a0261b05485e5f7a3497fa1ccfd10d4c4306f2e9c4fa707b30/ensurecvs-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "5664c3d6de98cacd01428a19a8f4e609", "sha256": "54f636d5ec6ccd9188561a3ef0a16da758ec75ed0dde973230a8eac220bfe721"}, "downloads": -1, "filename": "ensurecvs-1.0.3.tar.gz", "has_sig": false, "md5_digest": "5664c3d6de98cacd01428a19a8f4e609", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9141, "upload_time": "2020-02-07T18:30:08", "upload_time_iso_8601": "2020-02-07T18:30:08.798066Z", "url": "https://files.pythonhosted.org/packages/39/74/89db89fb71b765c671f7fb33f60e9ef9e2329ea826784816fccd29756cb0/ensurecvs-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5664c3d6de98cacd01428a19a8f4e609", "sha256": "54f636d5ec6ccd9188561a3ef0a16da758ec75ed0dde973230a8eac220bfe721"}, "downloads": -1, "filename": "ensurecvs-1.0.3.tar.gz", "has_sig": false, "md5_digest": "5664c3d6de98cacd01428a19a8f4e609", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9141, "upload_time": "2020-02-07T18:30:08", "upload_time_iso_8601": "2020-02-07T18:30:08.798066Z", "url": "https://files.pythonhosted.org/packages/39/74/89db89fb71b765c671f7fb33f60e9ef9e2329ea826784816fccd29756cb0/ensurecvs-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:15 2020"}