{"info": {"author": "Adam Thompson-Sharpe", "author_email": "adamthompsonsharpe@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6"], "description": "# TTChat\nPeer-to-peer chat software written in Python.\n\n## What is it for?\nTTChat is designed to be a safe chat system that will generate new keys for each session.\nIt's not intended to be used as WhatsApp or a similar chat program, it's for throwaway chats that don't need to/shouldn't be kept.\n\n## How is it secured?\nTTChat uses 4096-bit long RSA keys for every message, other than for the public key exchange, which cannot be encrypted.  \nThis should not be a problem, as no computer can get the private key from the public key, and the keys are recreated for every new chat session.\n\n### How does it work?\nEach machine will set up a server socket, and a client socket. The client will try to connect to a specified target, while the server accepts connections and checks if the origin is the target. If it's not, it'll kill the connection and wait for the target to connect. Once both peers have confirmed the targets, they will exchange public keys and be ready to chat.\n\n## Requirements\n**Python v3.6+**  \nIf you don't already have it, download it [here](https://www.python.org/downloads/).  \n**cryptography>=2.8**  \nDownload it using `pip install \"cryptography>=2.8\"`, or download the wheel [here](https://pypi.org/project/cryptography/2.8/#files) and use `pip install (.whl file)`.\n\n## Usage\nTo get the module through PyPi: `pip install ttchat`.  \nWhile TTChat comes with a fully functional `__main__.py` file, it is mainly meant to demonstrate how TTChat works. You can get the module to build your own UI that will work with any other program that uses TTChat, including the example one.\n\n### The `__main__.py` file\nRun it as any other python script, using `python` or `python3 __main__.py`. It's a very short piece of code, as it just uses functions from `ttchat.p2p`. Simply give it a target machine and it'll start trying to connect.  \nOnce you see `Ready to receive messages.` and/or `Ready to send messages.`, the connection has been completed and messaging is ready.\n\n# Documentation\nTo see how to use the TTChat module yourself, check out the [Documentation](https://github.com/MysteryBlokHed/ttchat/wiki).\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MysteryBlokHed/ttchat", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ttchat", "package_url": "https://pypi.org/project/ttchat/", "platform": "", "project_url": "https://pypi.org/project/ttchat/", "project_urls": {"Homepage": "https://github.com/MysteryBlokHed/ttchat"}, "release_url": "https://pypi.org/project/ttchat/0.1.1/", "requires_dist": ["cryptography (>=2.8)"], "requires_python": ">=3.6", "summary": "RSA-encrypted chat software written in Python.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>TTChat</h1>\n<p>Peer-to-peer chat software written in Python.</p>\n<h2>What is it for?</h2>\n<p>TTChat is designed to be a safe chat system that will generate new keys for each session.\nIt's not intended to be used as WhatsApp or a similar chat program, it's for throwaway chats that don't need to/shouldn't be kept.</p>\n<h2>How is it secured?</h2>\n<p>TTChat uses 4096-bit long RSA keys for every message, other than for the public key exchange, which cannot be encrypted.<br>\nThis should not be a problem, as no computer can get the private key from the public key, and the keys are recreated for every new chat session.</p>\n<h3>How does it work?</h3>\n<p>Each machine will set up a server socket, and a client socket. The client will try to connect to a specified target, while the server accepts connections and checks if the origin is the target. If it's not, it'll kill the connection and wait for the target to connect. Once both peers have confirmed the targets, they will exchange public keys and be ready to chat.</p>\n<h2>Requirements</h2>\n<p><strong>Python v3.6+</strong><br>\nIf you don't already have it, download it <a href=\"https://www.python.org/downloads/\" rel=\"nofollow\">here</a>.<br>\n<strong>cryptography&gt;=2.8</strong><br>\nDownload it using <code>pip install \"cryptography&gt;=2.8\"</code>, or download the wheel <a href=\"https://pypi.org/project/cryptography/2.8/#files\" rel=\"nofollow\">here</a> and use <code>pip install (.whl file)</code>.</p>\n<h2>Usage</h2>\n<p>To get the module through PyPi: <code>pip install ttchat</code>.<br>\nWhile TTChat comes with a fully functional <code>__main__.py</code> file, it is mainly meant to demonstrate how TTChat works. You can get the module to build your own UI that will work with any other program that uses TTChat, including the example one.</p>\n<h3>The <code>__main__.py</code> file</h3>\n<p>Run it as any other python script, using <code>python</code> or <code>python3 __main__.py</code>. It's a very short piece of code, as it just uses functions from <code>ttchat.p2p</code>. Simply give it a target machine and it'll start trying to connect.<br>\nOnce you see <code>Ready to receive messages.</code> and/or <code>Ready to send messages.</code>, the connection has been completed and messaging is ready.</p>\n<h1>Documentation</h1>\n<p>To see how to use the TTChat module yourself, check out the <a href=\"https://github.com/MysteryBlokHed/ttchat/wiki\" rel=\"nofollow\">Documentation</a>.</p>\n\n          </div>"}, "last_serial": 6398107, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a0c0bf75735b5a7df03f34795622df2a", "sha256": "5a196181e6baa9bf1062496196f31a8eaaf7db2c53b1f4fc58bb35bef46d3b52"}, "downloads": -1, "filename": "ttchat-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a0c0bf75735b5a7df03f34795622df2a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8331, "upload_time": "2020-01-05T05:47:22", "upload_time_iso_8601": "2020-01-05T05:47:22.429815Z", "url": "https://files.pythonhosted.org/packages/f3/3d/f6e23d9012723cf0720e0b0e52c029e5ce524007f5fd0e6e7b2f55cac7b4/ttchat-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f496e0f4e35251381920ede9b69a402d", "sha256": "2382a374b43ded204a128aaf7d95603dd2cc6bd4bc3e91df441ae0af602b791b"}, "downloads": -1, "filename": "ttchat-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f496e0f4e35251381920ede9b69a402d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5644, "upload_time": "2020-01-05T05:47:24", "upload_time_iso_8601": "2020-01-05T05:47:24.727257Z", "url": "https://files.pythonhosted.org/packages/c8/45/43da54d8b07a9188a54a3f361917d97f41af440c8e9eb088580ecd14d336/ttchat-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "1c18e1c6ad1a52f43835ebf6162ac7a2", "sha256": "9bfa96b5be602e11471063eedddd6e51a731e42e63b5eb1f80d8efd511109ebd"}, "downloads": -1, "filename": "ttchat-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1c18e1c6ad1a52f43835ebf6162ac7a2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8338, "upload_time": "2020-01-05T14:15:50", "upload_time_iso_8601": "2020-01-05T14:15:50.025873Z", "url": "https://files.pythonhosted.org/packages/ee/2a/101656b99de5a643ff146df8f52c6111a024a2e6cbcfa31387a7989733ea/ttchat-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d5c027e00ec081efcdfc22b6ad5768b", "sha256": "2b14919763cb1457b8732d8ced9aeb408b7d068c7d8abdcc3deb2d5422456c35"}, "downloads": -1, "filename": "ttchat-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1d5c027e00ec081efcdfc22b6ad5768b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5645, "upload_time": "2020-01-05T14:15:51", "upload_time_iso_8601": "2020-01-05T14:15:51.372192Z", "url": "https://files.pythonhosted.org/packages/e3/47/f66bffdbf7c243c3eca5e764af190055f5055b30266769c0eba0c211b8b7/ttchat-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1c18e1c6ad1a52f43835ebf6162ac7a2", "sha256": "9bfa96b5be602e11471063eedddd6e51a731e42e63b5eb1f80d8efd511109ebd"}, "downloads": -1, "filename": "ttchat-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1c18e1c6ad1a52f43835ebf6162ac7a2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8338, "upload_time": "2020-01-05T14:15:50", "upload_time_iso_8601": "2020-01-05T14:15:50.025873Z", "url": "https://files.pythonhosted.org/packages/ee/2a/101656b99de5a643ff146df8f52c6111a024a2e6cbcfa31387a7989733ea/ttchat-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d5c027e00ec081efcdfc22b6ad5768b", "sha256": "2b14919763cb1457b8732d8ced9aeb408b7d068c7d8abdcc3deb2d5422456c35"}, "downloads": -1, "filename": "ttchat-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1d5c027e00ec081efcdfc22b6ad5768b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5645, "upload_time": "2020-01-05T14:15:51", "upload_time_iso_8601": "2020-01-05T14:15:51.372192Z", "url": "https://files.pythonhosted.org/packages/e3/47/f66bffdbf7c243c3eca5e764af190055f5055b30266769c0eba0c211b8b7/ttchat-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:45:05 2020"}