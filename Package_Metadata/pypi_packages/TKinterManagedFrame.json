{"info": {"author": "Christopher \"Arkevorkhat\" Trent", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Topic :: Software Development :: Libraries :: Tcl Extensions"], "description": "# TKinter Managed Frames\n\nAdds a Frame widget with a built in content manager.\n## Installation\nDownload from PYPI.  \n`pip install TKinterManagedFrame`  \nor  \n`python -m pip install TKinterManagedFrame`\n## Methods\n- `__init__()`\n\n  - args\n    - `master`: a tkinter widget that is capable of having children\n      - this includes `Tk`, `Frame`, and `TopLevel`\n    - `nameList`: A list of names that will be associated with empty `Frame` objects.\n    - `initialIndex`: the first `Frame` that will be displayed.\n      - if this is not present in `nameList`, a `Frame` will be created to associate with it.\n    - `options`: takes any number of keyword arguments.\n      - see the documentation for `tkinter.Frame` for the full list of options.\n- `getCurrentFrameKey()`\n  - returns the key of the currently displayed `Frame`.\n- `getCurrentFrame()`\n  - returns a reference to the currently displayed `Frame`\n- `getFrameAtKey()`\n  - args\n    - `key`: the key at which the requested `Frame` is stored\n  - returns a reference to the `Frame` at the given `key`.\n  - `@raises` `KeyError`: if `key` is not being managed\n- `addOption()`\n  - args\n    - `inputFrame`: the `Frame` object to be added\n    - `key`: the location at which `inputFrame' will be stored in the manager.\n  - `@raises KeyError`: if `key` is already being managed\n    - use `updateOption()` to change an already managed frame.\n- `updateOption()`\n  - args\n    - `inputFrame`: the frame to place at `key`\n    - `key`: the location at which to place `inputFrame`\n  - `@raises KeyError`: if `key` is not being managed\n- `changeOption()`\n  - args\n    - `key`: the the key of the desired `Frame`.\n  - `@raises KeyError` if `key` is not being managed.\n- `setOption()`\n  - args\n    - `inputFrame`: the `Frame` to be added\n    - `key`: the key at which to store `inputFrame`\n  - `@raises KeyError` if `key` is already being managed\n- `removeOption()`\n  - args\n    - `key`: the key value at which the `Frame` to be deleted is stored\n    - `default`: (defaults to an arbitrary frame), the key value of the frame that will be displayed if `key` references the currently displayed `Frame`\n  - `@raises KeyError` if either `key` or `default` are not being managed.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ChristopherJTrent/TKinterManagedFrame", "keywords": "", "license": "GNU GPL", "maintainer": "", "maintainer_email": "", "name": "TKinterManagedFrame", "package_url": "https://pypi.org/project/TKinterManagedFrame/", "platform": "", "project_url": "https://pypi.org/project/TKinterManagedFrame/", "project_urls": {"Homepage": "https://github.com/ChristopherJTrent/TKinterManagedFrame"}, "release_url": "https://pypi.org/project/TKinterManagedFrame/0.1.0/", "requires_dist": ["tkinter", "wheel"], "requires_python": ">=3.3", "summary": "Adds a Tkinter Frame class that offers simple update functionality", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>TKinter Managed Frames</h1>\n<p>Adds a Frame widget with a built in content manager.</p>\n<h2>Installation</h2>\n<p>Download from PYPI.<br>\n<code>pip install TKinterManagedFrame</code><br>\nor<br>\n<code>python -m pip install TKinterManagedFrame</code></p>\n<h2>Methods</h2>\n<ul>\n<li>\n<p><code>__init__()</code></p>\n<ul>\n<li>args\n<ul>\n<li><code>master</code>: a tkinter widget that is capable of having children\n<ul>\n<li>this includes <code>Tk</code>, <code>Frame</code>, and <code>TopLevel</code></li>\n</ul>\n</li>\n<li><code>nameList</code>: A list of names that will be associated with empty <code>Frame</code> objects.</li>\n<li><code>initialIndex</code>: the first <code>Frame</code> that will be displayed.\n<ul>\n<li>if this is not present in <code>nameList</code>, a <code>Frame</code> will be created to associate with it.</li>\n</ul>\n</li>\n<li><code>options</code>: takes any number of keyword arguments.\n<ul>\n<li>see the documentation for <code>tkinter.Frame</code> for the full list of options.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><code>getCurrentFrameKey()</code></p>\n<ul>\n<li>returns the key of the currently displayed <code>Frame</code>.</li>\n</ul>\n</li>\n<li>\n<p><code>getCurrentFrame()</code></p>\n<ul>\n<li>returns a reference to the currently displayed <code>Frame</code></li>\n</ul>\n</li>\n<li>\n<p><code>getFrameAtKey()</code></p>\n<ul>\n<li>args\n<ul>\n<li><code>key</code>: the key at which the requested <code>Frame</code> is stored</li>\n</ul>\n</li>\n<li>returns a reference to the <code>Frame</code> at the given <code>key</code>.</li>\n<li><code>@raises</code> <code>KeyError</code>: if <code>key</code> is not being managed</li>\n</ul>\n</li>\n<li>\n<p><code>addOption()</code></p>\n<ul>\n<li>args\n<ul>\n<li><code>inputFrame</code>: the <code>Frame</code> object to be added</li>\n<li><code>key</code>: the location at which `inputFrame' will be stored in the manager.</li>\n</ul>\n</li>\n<li><code>@raises KeyError</code>: if <code>key</code> is already being managed\n<ul>\n<li>use <code>updateOption()</code> to change an already managed frame.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><code>updateOption()</code></p>\n<ul>\n<li>args\n<ul>\n<li><code>inputFrame</code>: the frame to place at <code>key</code></li>\n<li><code>key</code>: the location at which to place <code>inputFrame</code></li>\n</ul>\n</li>\n<li><code>@raises KeyError</code>: if <code>key</code> is not being managed</li>\n</ul>\n</li>\n<li>\n<p><code>changeOption()</code></p>\n<ul>\n<li>args\n<ul>\n<li><code>key</code>: the the key of the desired <code>Frame</code>.</li>\n</ul>\n</li>\n<li><code>@raises KeyError</code> if <code>key</code> is not being managed.</li>\n</ul>\n</li>\n<li>\n<p><code>setOption()</code></p>\n<ul>\n<li>args\n<ul>\n<li><code>inputFrame</code>: the <code>Frame</code> to be added</li>\n<li><code>key</code>: the key at which to store <code>inputFrame</code></li>\n</ul>\n</li>\n<li><code>@raises KeyError</code> if <code>key</code> is already being managed</li>\n</ul>\n</li>\n<li>\n<p><code>removeOption()</code></p>\n<ul>\n<li>args\n<ul>\n<li><code>key</code>: the key value at which the <code>Frame</code> to be deleted is stored</li>\n<li><code>default</code>: (defaults to an arbitrary frame), the key value of the frame that will be displayed if <code>key</code> references the currently displayed <code>Frame</code></li>\n</ul>\n</li>\n<li><code>@raises KeyError</code> if either <code>key</code> or <code>default</code> are not being managed.</li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6766313, "releases": {"0.0.5": [{"comment_text": "", "digests": {"md5": "d4f73ba71f144a1f559eb42e8b8e01a2", "sha256": "cd1ab33fff7ec0ffdcc44fb80beb048ed3ff05991dbcacdb1bc480c1b05d334d"}, "downloads": -1, "filename": "TKinterManagedFrame-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "d4f73ba71f144a1f559eb42e8b8e01a2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13831, "upload_time": "2020-03-05T23:29:14", "upload_time_iso_8601": "2020-03-05T23:29:14.183719Z", "url": "https://files.pythonhosted.org/packages/c3/ab/6a6607f440fd9c3144337f30144a532238420b75d0a2a716a6137c415eb1/TKinterManagedFrame-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d4e19bdd8ad8c9a910e4a02af87fb06", "sha256": "2154cdcb642c74bd44192941c5acb0a3b5a84875aead2537edf156b2807a4bf1"}, "downloads": -1, "filename": "TKinterManagedFrame-0.0.5.tar.gz", "has_sig": false, "md5_digest": "6d4e19bdd8ad8c9a910e4a02af87fb06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2153, "upload_time": "2020-03-05T23:29:16", "upload_time_iso_8601": "2020-03-05T23:29:16.414519Z", "url": "https://files.pythonhosted.org/packages/4b/ef/686855cf70836b9a566c5f6389c45d24361eb6b8e746d4a3d53632a9617b/TKinterManagedFrame-0.0.5.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "2bcf22aef072c6f45c58afa1d6d5737c", "sha256": "6a1574a3c4edf876b264ef801a8664682b8c19f0ef9e2fd86f9b3857c0629a99"}, "downloads": -1, "filename": "TKinterManagedFrame-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2bcf22aef072c6f45c58afa1d6d5737c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.3", "size": 14676, "upload_time": "2020-03-07T02:51:40", "upload_time_iso_8601": "2020-03-07T02:51:40.329663Z", "url": "https://files.pythonhosted.org/packages/7c/bf/7c0ba15bf01781d793934575873e406467d2a8da7c18e5ec8be8c98f0c72/TKinterManagedFrame-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ccf0fc3bb9def0376749594e4d6d2ae5", "sha256": "4df282306733a5bb20c1945530f724e1f194c002ca2ff5e2b164deb389224ec6"}, "downloads": -1, "filename": "TKinterManagedFrame-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ccf0fc3bb9def0376749594e4d6d2ae5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 3213, "upload_time": "2020-03-07T02:51:41", "upload_time_iso_8601": "2020-03-07T02:51:41.663895Z", "url": "https://files.pythonhosted.org/packages/9c/2e/12ef5a6a17109779779b52add046c0f04f2f98f1591a4ff40e93a4e337b2/TKinterManagedFrame-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2bcf22aef072c6f45c58afa1d6d5737c", "sha256": "6a1574a3c4edf876b264ef801a8664682b8c19f0ef9e2fd86f9b3857c0629a99"}, "downloads": -1, "filename": "TKinterManagedFrame-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2bcf22aef072c6f45c58afa1d6d5737c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.3", "size": 14676, "upload_time": "2020-03-07T02:51:40", "upload_time_iso_8601": "2020-03-07T02:51:40.329663Z", "url": "https://files.pythonhosted.org/packages/7c/bf/7c0ba15bf01781d793934575873e406467d2a8da7c18e5ec8be8c98f0c72/TKinterManagedFrame-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ccf0fc3bb9def0376749594e4d6d2ae5", "sha256": "4df282306733a5bb20c1945530f724e1f194c002ca2ff5e2b164deb389224ec6"}, "downloads": -1, "filename": "TKinterManagedFrame-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ccf0fc3bb9def0376749594e4d6d2ae5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 3213, "upload_time": "2020-03-07T02:51:41", "upload_time_iso_8601": "2020-03-07T02:51:41.663895Z", "url": "https://files.pythonhosted.org/packages/9c/2e/12ef5a6a17109779779b52add046c0f04f2f98f1591a4ff40e93a4e337b2/TKinterManagedFrame-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:52:36 2020"}