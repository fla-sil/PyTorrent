{"info": {"author": "Manuel Strehl", "author_email": "boldewyn@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Debuggers", "Topic :: Software Development :: Internationalization", "Topic :: Text Processing :: General"], "description": "A Unicode codepoint dump.\n\n  Think of it as  hexdump(1)  for Unicode.  The command analyses  the input and\n  prints then three columns:  the raw byte count of the first codepoint in this\n  row,  codepoints in their hex notation,  and finally the raw input characters\n  with control and whitespace replaced by a dot.\n\n  Invalid byte sequences are represented with an \u201cX\u201d and with the hex value en-\n  closed in question marks, e.g., \u201c?F5?\u201d.\n\n  You can pipe in  data from stdin,  select several files at once,  or even mix\n  all those input methods together.\n\nExamples:\n\n* Basic usage with stdin:\n\n      echo -n 'ABCDEFGHIJKLMNOP' | unidump -n 4\n            0    0041 0042 0043 0044    ABCD\n            4    0045 0046 0047 0048    EFGH\n            8    0049 004A 004B 004C    IJKL\n           12    004D 004E 004F 0050    MNOP\n\n* Dump the code points translated from another encoding:\n\n      unidump -c latin-1 some-legacy-file\n\n* Dump many files at the same time:\n\n      unidump foo-*.txt\n\n* Control characters and whitespace are safely rendered:\n\n      echo -n -e '\\x01' | unidump -n 1\n           0    0001    .\n\n* Finally learn what your favorite Emoji is composed of:\n\n      ( echo -n -e '\\xf0\\x9f\\xa7\\x9d\\xf0\\x9f\\x8f\\xbd\\xe2' ; \\\n        echo -n -e '\\x80\\x8d\\xe2\\x99\\x82\\xef\\xb8\\x8f' ; ) | \\\n      unidump -n 5\n           0    1F9DD 1F3FD 200D 2642 FE0F    .\ud83c\udffd.\u2642\ufe0f\n\n  See  <http://emojipedia.org/man-elf-medium-skin-tone/> for images.  The \u201celf\u201d\n  emoji (the first character) is replaced with a dot here,  because the current\n  version of Python\u2019s unicodedata doesn\u2019t know of this character yet.\n\n* Use it like strings(1):\n\n      unidump -e '{data}' some-file.bin\n\n  This will replace  every unknown byte from the input file  with \u201cX\u201d and every\n  control and whitespace character with \u201c.\u201d.\n\n* Only print the code points of the input:\n\n      unidump -e '{repr}'$'\\n' -n 1 some-file.txt\n\n  This results in  a stream of codepoints in hex notation,  each on a new line,\n  without byte counter  or rendering of actual data.  You can use this to count\n  the total amount of characters  (as opposed to raw bytes)  in a file,  if you\n  pipe it through `wc -l`.\n\nThis is version 1.1.2 of unidump, using Unicode 8.0.0 data.\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Codepoints/unidump", "keywords": "unicode hexdump codepoint utility", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "unidump", "package_url": "https://pypi.org/project/unidump/", "platform": "", "project_url": "https://pypi.org/project/unidump/", "project_urls": {"Homepage": "https://github.com/Codepoints/unidump"}, "release_url": "https://pypi.org/project/unidump/1.1.2/", "requires_dist": null, "requires_python": "", "summary": "hexdump for your unicode data", "version": "1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            A Unicode codepoint dump.<br><br>  Think of it as  hexdump(1)  for Unicode.  The command analyses  the input and<br>  prints then three columns:  the raw byte count of the first codepoint in this<br>  row,  codepoints in their hex notation,  and finally the raw input characters<br>  with control and whitespace replaced by a dot.<br><br>  Invalid byte sequences are represented with an \u201cX\u201d and with the hex value en-<br>  closed in question marks, e.g., \u201c?F5?\u201d.<br><br>  You can pipe in  data from stdin,  select several files at once,  or even mix<br>  all those input methods together.<br><br>Examples:<br><br>* Basic usage with stdin:<br><br>      echo -n 'ABCDEFGHIJKLMNOP' | unidump -n 4<br>            0    0041 0042 0043 0044    ABCD<br>            4    0045 0046 0047 0048    EFGH<br>            8    0049 004A 004B 004C    IJKL<br>           12    004D 004E 004F 0050    MNOP<br><br>* Dump the code points translated from another encoding:<br><br>      unidump -c latin-1 some-legacy-file<br><br>* Dump many files at the same time:<br><br>      unidump foo-*.txt<br><br>* Control characters and whitespace are safely rendered:<br><br>      echo -n -e '\\x01' | unidump -n 1<br>           0    0001    .<br><br>* Finally learn what your favorite Emoji is composed of:<br><br>      ( echo -n -e '\\xf0\\x9f\\xa7\\x9d\\xf0\\x9f\\x8f\\xbd\\xe2' ; \\<br>        echo -n -e '\\x80\\x8d\\xe2\\x99\\x82\\xef\\xb8\\x8f' ; ) | \\<br>      unidump -n 5<br>           0    1F9DD 1F3FD 200D 2642 FE0F    .\ud83c\udffd.\u2642\ufe0f<br><br>  See  &lt;http://emojipedia.org/man-elf-medium-skin-tone/&gt; for images.  The \u201celf\u201d<br>  emoji (the first character) is replaced with a dot here,  because the current<br>  version of Python\u2019s unicodedata doesn\u2019t know of this character yet.<br><br>* Use it like strings(1):<br><br>      unidump -e '{data}' some-file.bin<br><br>  This will replace  every unknown byte from the input file  with \u201cX\u201d and every<br>  control and whitespace character with \u201c.\u201d.<br><br>* Only print the code points of the input:<br><br>      unidump -e '{repr}'$'\\n' -n 1 some-file.txt<br><br>  This results in  a stream of codepoints in hex notation,  each on a new line,<br>  without byte counter  or rendering of actual data.  You can use this to count<br>  the total amount of characters  (as opposed to raw bytes)  in a file,  if you<br>  pipe it through `wc -l`.<br><br>This is version 1.1.2 of unidump, using Unicode 8.0.0 data.<br><br><br>\n          </div>"}, "last_serial": 2716233, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "6887c3a6a1ef1b66a381466056c3a07f", "sha256": "9e855b826d9ad12709a68f794c53176fbbfeb6d12b03359ec0a079ddb3a0cd6f"}, "downloads": -1, "filename": "unidump-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6887c3a6a1ef1b66a381466056c3a07f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8924, "upload_time": "2017-03-17T20:08:18", "upload_time_iso_8601": "2017-03-17T20:08:18.381380Z", "url": "https://files.pythonhosted.org/packages/ed/7a/26129e5e089b6d735ea55fb96319c486a06dea9bfb0feb2e3f3c34730e3b/unidump-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "555212a0846314a80a2d8060ebfb755c", "sha256": "eb3beec4821ea8f7522e9752047db3e29dd0a900259148913a4d37914a623826"}, "downloads": -1, "filename": "unidump-1.1.0.tar.gz", "has_sig": false, "md5_digest": "555212a0846314a80a2d8060ebfb755c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4757, "upload_time": "2017-03-17T20:08:19", "upload_time_iso_8601": "2017-03-17T20:08:19.767117Z", "url": "https://files.pythonhosted.org/packages/e9/c0/0fd2b097383438c204a14c3f76eddc5848cdfd6623a6e6cc30729e5b8d2e/unidump-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "ddc61c3db2f8cea9e4e7c56a2c8856f1", "sha256": "1bdd0a639d7d40d0b82cdfc1a1f73190c112988293fabe64a620d08e27bd695a"}, "downloads": -1, "filename": "unidump-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ddc61c3db2f8cea9e4e7c56a2c8856f1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8924, "upload_time": "2017-03-18T20:32:32", "upload_time_iso_8601": "2017-03-18T20:32:32.194892Z", "url": "https://files.pythonhosted.org/packages/24/0a/70ed44299c62a8987ed1e6217b10c8402f968d595a54cebda92490cc8470/unidump-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ae7b9e8a03b4356bf92f07606f2d9a5", "sha256": "ace8beab672ba39ca703a4b25ab259e41ded2edf95ada0c9d911aef0ff77272a"}, "downloads": -1, "filename": "unidump-1.1.1.tar.gz", "has_sig": false, "md5_digest": "4ae7b9e8a03b4356bf92f07606f2d9a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4761, "upload_time": "2017-03-18T20:32:34", "upload_time_iso_8601": "2017-03-18T20:32:34.650360Z", "url": "https://files.pythonhosted.org/packages/a7/e4/0f7307c5357b81da4fa5e3f06ad5dc729ab0c57cc174f23a0dd5b784b9f8/unidump-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "107ce9300e9cfa6858cff9578e161270", "sha256": "120e0bc9e33ff1ba316c98fcf76244915bac7eb17ce91c33a8d295c49a151b3c"}, "downloads": -1, "filename": "unidump-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "107ce9300e9cfa6858cff9578e161270", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9024, "upload_time": "2017-03-19T19:48:26", "upload_time_iso_8601": "2017-03-19T19:48:26.098129Z", "url": "https://files.pythonhosted.org/packages/51/ff/250738722804b02620ad8d952bc01f00639d30e95f7f3aaa186ca0a39f38/unidump-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2154603637ddb72ef1b6c4e5d2f143b2", "sha256": "0a1fdc21b2a192575df027ffa4831486e91cba17fa8f8a33db2dde9667daa1e4"}, "downloads": -1, "filename": "unidump-1.1.2.tar.gz", "has_sig": false, "md5_digest": "2154603637ddb72ef1b6c4e5d2f143b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4820, "upload_time": "2017-03-19T19:48:28", "upload_time_iso_8601": "2017-03-19T19:48:28.566393Z", "url": "https://files.pythonhosted.org/packages/92/f5/2bee49dcfa63a0bffb1733e76134b1a1f6de14bf238608c8645d5310a9a6/unidump-1.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "107ce9300e9cfa6858cff9578e161270", "sha256": "120e0bc9e33ff1ba316c98fcf76244915bac7eb17ce91c33a8d295c49a151b3c"}, "downloads": -1, "filename": "unidump-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "107ce9300e9cfa6858cff9578e161270", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9024, "upload_time": "2017-03-19T19:48:26", "upload_time_iso_8601": "2017-03-19T19:48:26.098129Z", "url": "https://files.pythonhosted.org/packages/51/ff/250738722804b02620ad8d952bc01f00639d30e95f7f3aaa186ca0a39f38/unidump-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2154603637ddb72ef1b6c4e5d2f143b2", "sha256": "0a1fdc21b2a192575df027ffa4831486e91cba17fa8f8a33db2dde9667daa1e4"}, "downloads": -1, "filename": "unidump-1.1.2.tar.gz", "has_sig": false, "md5_digest": "2154603637ddb72ef1b6c4e5d2f143b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4820, "upload_time": "2017-03-19T19:48:28", "upload_time_iso_8601": "2017-03-19T19:48:28.566393Z", "url": "https://files.pythonhosted.org/packages/92/f5/2bee49dcfa63a0bffb1733e76134b1a1f6de14bf238608c8645d5310a9a6/unidump-1.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:40:34 2020"}