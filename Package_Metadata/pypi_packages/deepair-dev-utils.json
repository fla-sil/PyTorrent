{"info": {"author": "DeepAir Dev", "author_email": "naman@deepair.io", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "## Deep Developer Utilities\n\nThis package consists of developer utilities specifically used for data operations and handeling within deep air environment.\n\n## Package structure\n\n`deepair_dev_utils`\n.\n\u251c\u2500\u2500 general\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 tools.py\n\u251c\u2500\u2500 __init__.py\n\u2514\u2500\u2500 loader\n    \u251c\u2500\u2500 __init__.py\n    \u2514\u2500\u2500 tools.py\n\n2 directories, 5 files\n\n## Dependencies\n\n**Note**: The following python3 packages are necessary for this package to run:\n\n* numpy\n* scipy\n* pandas\n* sklearn\n* tqdm\n\n## Function Declarations\n\nHere are the signatures for the functions in the package that can be used for deepair-dev.\n\n### general.py\n\nBelow are the functions that can be accessed by importing this module as `from deepair_dev_utils.general.tools import <function_name>`.\n\n`log`:\n```\ndef log(message):\n    '''\n        prints message on console\n        input :\n            message     : msg to print (string)\n    '''\n```\n\n`get_data`:\n```\ndef get_data(path):\n    '''\n        Single file loader function\n        input :\n            path     : abs path to load from (string)\n    '''\n```\n\n`daterange`:\n```\ndef daterange(s_date, e_date):\n    '''\n        To return a list of all the dates from\n        start date to end date (excluding end date)\n        input :\n            s_date     : start date (datetime)\n            e_date     : end date (datetime)\n        returns :\n            list of dates\n    '''\n```\n\n`jsonReader`:\n```\ndef jsonReader(path):\n    '''\n        JSON File Reader (from absolute path).\n        Args:\n            path   : absolute path of json file (string)\n        Return:\n            data   : loaded JSON\n    '''\n```\n\n`jsonWriter`:\n```\ndef jsonWriter(data, path):\n    '''\n        JSON File Writer (to absolute path).\n        Args:\n            data   : data to write (JSON/DICT/STRING)\n            path   : absolute path of json file (string)\n    '''\n```\n\n`ddmmyyyy2datetime`:\n```\ndef ddmmyyyy2datetime(start_date):\n    '''\n        Convert dd-mm-yyyy to std data time format.\n        Args:\n            start_date   : date with dd-mm-yyyy (string)\n        Return:\n            date   : converted format\n    '''\n```\n\nBelow are the decorators that can be accessed by importing this module as `from deepair_dev_utils.general.decorators import <decorator_name>`.\n\n`function_logger`:\n```\ndef function_logger(orig_func):\n    '''\n        Create a file with function.log (if possible)\n        otherwise with unknown_function.log and record\n        the arguments passed for the function\n\n        example:\n        @function_logger\n        def target_function(...):\n            ...\n    '''\n```\n\n`function_timer`:\n```\ndef function_timer(orig_func):\n    '''\n        Displays runtime on console\n\n        example:\n        @function_timer\n        def target_function(...):\n            ...\n    '''\n```\n\n\n### Loader\n\nThis subpackage contains tools for loading data as `Handler`.\n\n#### Handler\n\nBelow are the functions that can be accessed by importing this module as `from deepair_dev_utils.loader.tools import Handler`.\n\nThen create an object to access the fuctions. example `obj = Handler()` and then `obj.<function_name>`\n\n`__init__`:\n```\ndef __init__(self, verbose=True):\n    '''\n        Handlder (class) constructor.\n        inputs:\n            verbose: Indicator for log and progress bar (bool)\n    '''\n```\n\n`loader`:\n```\ndef loader(self, dir_path, start_date, end_date,\n           prefix='', postfix='', ext='.csv'):\n    '''\n        Primary loader function to load the data from start date to\n        end date in concatinated (single dataframe) format.\n        inputs:\n            dir_path    : absolute path to the directory path (series)\n            start_date  : load start date in dd-mm-yyyy format (string)\n            end_date    : load end date in dd-mm-yyyy format (string)\n            prefix      : file prefix [if necessary] (string)\n            postfix     : file postfix [if necessary] (string)\n            ext         : file extension [default is .csv] (string)\n        return:\n            df:  loaded concatenated dataframe (pandas df)\n    '''\n```\n\n`loader_v2`:\n```\ndef loader_v2(self, dir_path, start_date, end_date,\n              prefix='', postfix='', ext='.csv'):\n    '''\n        (VERSION 2)\n        Primary loader function to load the data from start date to\n        end date in concatinated (single dataframe) format.\n        inputs:\n            dir_path    : absolute path to the directory path (series)\n            start_date  : load start date in yyyy-mm-dd format (string)\n            end_date    : load end date in yyyy-mm-dd format (string)\n            prefix      : file prefix [if necessary] (string)\n            postfix     : file postfix [if necessary] (string)\n            ext         : file extension [default is .csv] (string)\n        return:\n            df:  loaded concatenated dataframe (pandas df)\n    '''\n```\n\n`single_loader`:\n```\ndef single_loader(self, dir_path, start_date, end_date,\n                  prefix='', postfix='', ext='.csv'):\n    '''\n        Single loader function to load the data from start date to\n        end date in individual datewise (each dataframe is of one date)\n        format.\n        inputs:\n            dir_path    : absolute path to the directory path (series)\n            start_date  : load start date in dd-mm-yyyy format (string)\n            end_date    : load end date in dd-mm-yyyy format (string)\n            prefix      : file prefix [if necessary] (string)\n            postfix     : file postfix [if necessary] (string)\n            ext         : file extension [default is .csv] (string)\n        return:\n            data:  list of data frames datewise (list)\n    '''\n```\n\n`batch_loader`:\n```\ndef batch_loader(self, dir_path, start_date, end_date,\n                 batch_size=1, prefix='', postfix='', ext='.csv'):\n    '''\n        Batch loader function to load the data from start date to\n        end date in batches (each dataframe is in the form of batch datewise)\n        format.\n        inputs:\n            dir_path    : absolute path to the directory path (series)\n            start_date  : load start date in dd-mm-yyyy format (string)\n            end_date    : load end date in dd-mm-yyyy format (string)\n            batch_size  : batch size (int)\n            prefix      : file prefix [if necessary] (string)\n            postfix     : file postfix [if necessary] (string)\n            ext         : file extension [default is .csv] (string)\n        return:\n            data:  list of data frames datewise (list)\n    '''\n```\n\n`_load_action`:\n```\ndef _load_action(self, df):\n    '''\n        @abstractmethod\n        User defined Bottle neck pipeline within load.\n        NOTE -> Default job of this function is pass i.e. do nothing\n        inputs:\n            df:  Dataframe to apply this method on (pandas df)\n        return:\n            df:  Modified dataframe (pandas df)\n    '''\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/deepair/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "deepair-dev-utils", "package_url": "https://pypi.org/project/deepair-dev-utils/", "platform": "", "project_url": "https://pypi.org/project/deepair-dev-utils/", "project_urls": {"Homepage": "https://bitbucket.org/deepair/"}, "release_url": "https://pypi.org/project/deepair-dev-utils/0.0.7/", "requires_dist": null, "requires_python": "", "summary": "This is a sub modular package for developer utilities", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Deep Developer Utilities</h2>\n<p>This package consists of developer utilities specifically used for data operations and handeling within deep air environment.</p>\n<h2>Package structure</h2>\n<p><code>deepair_dev_utils</code>\n.\n\u251c\u2500\u2500 general\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 <strong>init</strong>.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 tools.py\n\u251c\u2500\u2500 <strong>init</strong>.py\n\u2514\u2500\u2500 loader\n\u251c\u2500\u2500 <strong>init</strong>.py\n\u2514\u2500\u2500 tools.py</p>\n<p>2 directories, 5 files</p>\n<h2>Dependencies</h2>\n<p><strong>Note</strong>: The following python3 packages are necessary for this package to run:</p>\n<ul>\n<li>numpy</li>\n<li>scipy</li>\n<li>pandas</li>\n<li>sklearn</li>\n<li>tqdm</li>\n</ul>\n<h2>Function Declarations</h2>\n<p>Here are the signatures for the functions in the package that can be used for deepair-dev.</p>\n<h3>general.py</h3>\n<p>Below are the functions that can be accessed by importing this module as <code>from deepair_dev_utils.general.tools import &lt;function_name&gt;</code>.</p>\n<p><code>log</code>:</p>\n<pre><code>def log(message):\n    '''\n        prints message on console\n        input :\n            message     : msg to print (string)\n    '''\n</code></pre>\n<p><code>get_data</code>:</p>\n<pre><code>def get_data(path):\n    '''\n        Single file loader function\n        input :\n            path     : abs path to load from (string)\n    '''\n</code></pre>\n<p><code>daterange</code>:</p>\n<pre><code>def daterange(s_date, e_date):\n    '''\n        To return a list of all the dates from\n        start date to end date (excluding end date)\n        input :\n            s_date     : start date (datetime)\n            e_date     : end date (datetime)\n        returns :\n            list of dates\n    '''\n</code></pre>\n<p><code>jsonReader</code>:</p>\n<pre><code>def jsonReader(path):\n    '''\n        JSON File Reader (from absolute path).\n        Args:\n            path   : absolute path of json file (string)\n        Return:\n            data   : loaded JSON\n    '''\n</code></pre>\n<p><code>jsonWriter</code>:</p>\n<pre><code>def jsonWriter(data, path):\n    '''\n        JSON File Writer (to absolute path).\n        Args:\n            data   : data to write (JSON/DICT/STRING)\n            path   : absolute path of json file (string)\n    '''\n</code></pre>\n<p><code>ddmmyyyy2datetime</code>:</p>\n<pre><code>def ddmmyyyy2datetime(start_date):\n    '''\n        Convert dd-mm-yyyy to std data time format.\n        Args:\n            start_date   : date with dd-mm-yyyy (string)\n        Return:\n            date   : converted format\n    '''\n</code></pre>\n<p>Below are the decorators that can be accessed by importing this module as <code>from deepair_dev_utils.general.decorators import &lt;decorator_name&gt;</code>.</p>\n<p><code>function_logger</code>:</p>\n<pre><code>def function_logger(orig_func):\n    '''\n        Create a file with function.log (if possible)\n        otherwise with unknown_function.log and record\n        the arguments passed for the function\n\n        example:\n        @function_logger\n        def target_function(...):\n            ...\n    '''\n</code></pre>\n<p><code>function_timer</code>:</p>\n<pre><code>def function_timer(orig_func):\n    '''\n        Displays runtime on console\n\n        example:\n        @function_timer\n        def target_function(...):\n            ...\n    '''\n</code></pre>\n<h3>Loader</h3>\n<p>This subpackage contains tools for loading data as <code>Handler</code>.</p>\n<h4>Handler</h4>\n<p>Below are the functions that can be accessed by importing this module as <code>from deepair_dev_utils.loader.tools import Handler</code>.</p>\n<p>Then create an object to access the fuctions. example <code>obj = Handler()</code> and then <code>obj.&lt;function_name&gt;</code></p>\n<p><code>__init__</code>:</p>\n<pre><code>def __init__(self, verbose=True):\n    '''\n        Handlder (class) constructor.\n        inputs:\n            verbose: Indicator for log and progress bar (bool)\n    '''\n</code></pre>\n<p><code>loader</code>:</p>\n<pre><code>def loader(self, dir_path, start_date, end_date,\n           prefix='', postfix='', ext='.csv'):\n    '''\n        Primary loader function to load the data from start date to\n        end date in concatinated (single dataframe) format.\n        inputs:\n            dir_path    : absolute path to the directory path (series)\n            start_date  : load start date in dd-mm-yyyy format (string)\n            end_date    : load end date in dd-mm-yyyy format (string)\n            prefix      : file prefix [if necessary] (string)\n            postfix     : file postfix [if necessary] (string)\n            ext         : file extension [default is .csv] (string)\n        return:\n            df:  loaded concatenated dataframe (pandas df)\n    '''\n</code></pre>\n<p><code>loader_v2</code>:</p>\n<pre><code>def loader_v2(self, dir_path, start_date, end_date,\n              prefix='', postfix='', ext='.csv'):\n    '''\n        (VERSION 2)\n        Primary loader function to load the data from start date to\n        end date in concatinated (single dataframe) format.\n        inputs:\n            dir_path    : absolute path to the directory path (series)\n            start_date  : load start date in yyyy-mm-dd format (string)\n            end_date    : load end date in yyyy-mm-dd format (string)\n            prefix      : file prefix [if necessary] (string)\n            postfix     : file postfix [if necessary] (string)\n            ext         : file extension [default is .csv] (string)\n        return:\n            df:  loaded concatenated dataframe (pandas df)\n    '''\n</code></pre>\n<p><code>single_loader</code>:</p>\n<pre><code>def single_loader(self, dir_path, start_date, end_date,\n                  prefix='', postfix='', ext='.csv'):\n    '''\n        Single loader function to load the data from start date to\n        end date in individual datewise (each dataframe is of one date)\n        format.\n        inputs:\n            dir_path    : absolute path to the directory path (series)\n            start_date  : load start date in dd-mm-yyyy format (string)\n            end_date    : load end date in dd-mm-yyyy format (string)\n            prefix      : file prefix [if necessary] (string)\n            postfix     : file postfix [if necessary] (string)\n            ext         : file extension [default is .csv] (string)\n        return:\n            data:  list of data frames datewise (list)\n    '''\n</code></pre>\n<p><code>batch_loader</code>:</p>\n<pre><code>def batch_loader(self, dir_path, start_date, end_date,\n                 batch_size=1, prefix='', postfix='', ext='.csv'):\n    '''\n        Batch loader function to load the data from start date to\n        end date in batches (each dataframe is in the form of batch datewise)\n        format.\n        inputs:\n            dir_path    : absolute path to the directory path (series)\n            start_date  : load start date in dd-mm-yyyy format (string)\n            end_date    : load end date in dd-mm-yyyy format (string)\n            batch_size  : batch size (int)\n            prefix      : file prefix [if necessary] (string)\n            postfix     : file postfix [if necessary] (string)\n            ext         : file extension [default is .csv] (string)\n        return:\n            data:  list of data frames datewise (list)\n    '''\n</code></pre>\n<p><code>_load_action</code>:</p>\n<pre><code>def _load_action(self, df):\n    '''\n        @abstractmethod\n        User defined Bottle neck pipeline within load.\n        NOTE -&gt; Default job of this function is pass i.e. do nothing\n        inputs:\n            df:  Dataframe to apply this method on (pandas df)\n        return:\n            df:  Modified dataframe (pandas df)\n    '''\n</code></pre>\n\n          </div>"}, "last_serial": 4837776, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a4c7a278a1380560d49483e7c0edd74c", "sha256": "67376b8d0b9c587654e4d12151127f4a202cdb497f4be9ea6873ee46728bbb6c"}, "downloads": -1, "filename": "deepair_dev_utils-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a4c7a278a1380560d49483e7c0edd74c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6140, "upload_time": "2018-08-28T17:33:02", "upload_time_iso_8601": "2018-08-28T17:33:02.803365Z", "url": "https://files.pythonhosted.org/packages/1e/70/c7a7939bc2ad16a227cbc7aeeae24bc2ca9b551e2b07956076824bd4a9b8/deepair_dev_utils-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "054639325d23f3a0eef397ba94b13b03", "sha256": "5314449f83f71ad1d8414250b19452ad756a082a71fcfc2e9641015153278df4"}, "downloads": -1, "filename": "deepair_dev_utils-0.0.1.tar.gz", "has_sig": false, "md5_digest": "054639325d23f3a0eef397ba94b13b03", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4361, "upload_time": "2018-08-28T17:33:03", "upload_time_iso_8601": "2018-08-28T17:33:03.919125Z", "url": "https://files.pythonhosted.org/packages/e2/9c/46f17dab12461e26a1a19945ff48c261809b3584d85d4187e0504eb37ae6/deepair_dev_utils-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "9167dbeeeb8deddc58499602db4f8c51", "sha256": "640efefcccfa8e3fa9e255662c31798ed43e225526086fdb5c7bc87f4cdf8ac0"}, "downloads": -1, "filename": "deepair_dev_utils-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9167dbeeeb8deddc58499602db4f8c51", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6146, "upload_time": "2018-08-31T01:39:32", "upload_time_iso_8601": "2018-08-31T01:39:32.687920Z", "url": "https://files.pythonhosted.org/packages/5b/d8/2ff64fd704bf8145f6a5859975ae8192fadc7a7413720b9e6f1379c88ad9/deepair_dev_utils-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "22fd699dccc2aae88efc1d1c58e3ff6c", "sha256": "7d95a772162b55c13ed2df979c96c9e02cfa1a6eaefd6988e276292ba207f9d2"}, "downloads": -1, "filename": "deepair_dev_utils-0.0.2.tar.gz", "has_sig": false, "md5_digest": "22fd699dccc2aae88efc1d1c58e3ff6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4359, "upload_time": "2018-08-31T01:39:33", "upload_time_iso_8601": "2018-08-31T01:39:33.943984Z", "url": "https://files.pythonhosted.org/packages/48/45/ca64fb59ac90f1249993be8c98be8ff929f6587f18fb4d123aa0ece144f3/deepair_dev_utils-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "51d85c514070e0d12ea3dbf9414a5090", "sha256": "d4e9892f1ef0756cc9c0a4775d6037b15ffda70685f70d90106bd5211472ea26"}, "downloads": -1, "filename": "deepair_dev_utils-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "51d85c514070e0d12ea3dbf9414a5090", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6174, "upload_time": "2018-10-01T00:28:11", "upload_time_iso_8601": "2018-10-01T00:28:11.974985Z", "url": "https://files.pythonhosted.org/packages/a3/a5/a658adc4ee930755d4b0b5d9b520409f6b2fca13cb39398400f3a73573fa/deepair_dev_utils-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e601ef7ebe8687e1208e958e4795981", "sha256": "9aafa7d44f7ebac14c8c0545eb1110ec17fa903cef28b8db2b8765c7c0d6a79d"}, "downloads": -1, "filename": "deepair_dev_utils-0.0.3.tar.gz", "has_sig": false, "md5_digest": "3e601ef7ebe8687e1208e958e4795981", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4377, "upload_time": "2018-10-01T00:28:13", "upload_time_iso_8601": "2018-10-01T00:28:13.579712Z", "url": "https://files.pythonhosted.org/packages/3a/4e/8b3f2230dc57e47580722a3a6449306ac5953fa1017f5893510796925a6e/deepair_dev_utils-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "9dda9741c0c7045293dcc0567a4da0be", "sha256": "fe55e5b80b86a78e4168f9fad56d03d9a52286edea37173e58e1ca10d9eb8c58"}, "downloads": -1, "filename": "deepair_dev_utils-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "9dda9741c0c7045293dcc0567a4da0be", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6652, "upload_time": "2018-11-11T03:28:00", "upload_time_iso_8601": "2018-11-11T03:28:00.517109Z", "url": "https://files.pythonhosted.org/packages/07/3b/526adf7ceb88ad9c2245a4cbebfc6dd2889b0309177871d13e219b4e3e46/deepair_dev_utils-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f5baf1cb2f746f54c6ee5924bf41dcdd", "sha256": "a334a9dffc30e2d6f1b0eeddf2caf7dfc4f8c7956380271f3c99170255e9492d"}, "downloads": -1, "filename": "deepair_dev_utils-0.0.4.tar.gz", "has_sig": false, "md5_digest": "f5baf1cb2f746f54c6ee5924bf41dcdd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4741, "upload_time": "2018-11-11T03:28:02", "upload_time_iso_8601": "2018-11-11T03:28:02.139798Z", "url": "https://files.pythonhosted.org/packages/12/24/b552e2144bedd018afacf62aa28b9755bdd45a93f4494017235c690f426a/deepair_dev_utils-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "ce0b457fc360ca8358729ce8f0aec3da", "sha256": "593302fb5a473425084ed461da2bc4060dcf83e082fa2142ead02937d1904c39"}, "downloads": -1, "filename": "deepair_dev_utils-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "ce0b457fc360ca8358729ce8f0aec3da", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8061, "upload_time": "2018-12-28T07:11:40", "upload_time_iso_8601": "2018-12-28T07:11:40.001115Z", "url": "https://files.pythonhosted.org/packages/fb/90/0602cf9de76a43f6067b0eb0587e4d5325d6f407c6122e676ebcf5dc3645/deepair_dev_utils-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0507eba60c8abda3fd0df4184378a77", "sha256": "3ef91e9a195866325b8ec88b1b0a02691a51850609f4053f1c5ab77191b828b6"}, "downloads": -1, "filename": "deepair_dev_utils-0.0.5.tar.gz", "has_sig": false, "md5_digest": "d0507eba60c8abda3fd0df4184378a77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5493, "upload_time": "2018-12-28T07:11:41", "upload_time_iso_8601": "2018-12-28T07:11:41.313163Z", "url": "https://files.pythonhosted.org/packages/60/d9/37ef307940df9518b1fcda1602150aa2c86256d6fa43906eabc1af14a15c/deepair_dev_utils-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "6b5ea73b44b9b85e12dfcb024a4d397d", "sha256": "4f9d4693428b7ba0ea21bde464094821f9c45e97fee1d64227e1c95d29ae3ad9"}, "downloads": -1, "filename": "deepair_dev_utils-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "6b5ea73b44b9b85e12dfcb024a4d397d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8208, "upload_time": "2019-02-19T02:01:58", "upload_time_iso_8601": "2019-02-19T02:01:58.353441Z", "url": "https://files.pythonhosted.org/packages/0c/fb/4ba76022585d816d6d30e10500063cbcd3b951ef2ccce44fa1915e947ea7/deepair_dev_utils-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "485150c66f0535ba9ab6b74693e61f22", "sha256": "e09165ac96732508445a1b8dd0f9713ef352bdd046186fa02828c321ddcddcf9"}, "downloads": -1, "filename": "deepair_dev_utils-0.0.6.tar.gz", "has_sig": false, "md5_digest": "485150c66f0535ba9ab6b74693e61f22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5597, "upload_time": "2019-02-19T02:01:59", "upload_time_iso_8601": "2019-02-19T02:01:59.728783Z", "url": "https://files.pythonhosted.org/packages/83/5d/7e63dbefee6ae12317b9491f60e376cc605d76f68836804310aa30328d7e/deepair_dev_utils-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "4fdb78f309d934b50c19a3b57c40885e", "sha256": "f02b76649ec92dbd6059dbd8b25eb62f249bb5016e4050492f8a8a2d1ee51261"}, "downloads": -1, "filename": "deepair_dev_utils-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "4fdb78f309d934b50c19a3b57c40885e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8210, "upload_time": "2019-02-19T02:29:31", "upload_time_iso_8601": "2019-02-19T02:29:31.169547Z", "url": "https://files.pythonhosted.org/packages/7a/19/9bf3fc2fe8c27af85f9a438697e697590fd2abee6eb090d86239cb7bfe33/deepair_dev_utils-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f102e4ee4e3ebca59dc730d15fb75569", "sha256": "4428c7e09bc9da531bea84f9a64d39c295cc92ec0179997c85684eeb4c6d6c72"}, "downloads": -1, "filename": "deepair_dev_utils-0.0.7.tar.gz", "has_sig": false, "md5_digest": "f102e4ee4e3ebca59dc730d15fb75569", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5596, "upload_time": "2019-02-19T02:29:32", "upload_time_iso_8601": "2019-02-19T02:29:32.516304Z", "url": "https://files.pythonhosted.org/packages/3b/86/b44c5f43d2feab93f675e0bd86bc11d33fea67461eaa445f659fe79687d8/deepair_dev_utils-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4fdb78f309d934b50c19a3b57c40885e", "sha256": "f02b76649ec92dbd6059dbd8b25eb62f249bb5016e4050492f8a8a2d1ee51261"}, "downloads": -1, "filename": "deepair_dev_utils-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "4fdb78f309d934b50c19a3b57c40885e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8210, "upload_time": "2019-02-19T02:29:31", "upload_time_iso_8601": "2019-02-19T02:29:31.169547Z", "url": "https://files.pythonhosted.org/packages/7a/19/9bf3fc2fe8c27af85f9a438697e697590fd2abee6eb090d86239cb7bfe33/deepair_dev_utils-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f102e4ee4e3ebca59dc730d15fb75569", "sha256": "4428c7e09bc9da531bea84f9a64d39c295cc92ec0179997c85684eeb4c6d6c72"}, "downloads": -1, "filename": "deepair_dev_utils-0.0.7.tar.gz", "has_sig": false, "md5_digest": "f102e4ee4e3ebca59dc730d15fb75569", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5596, "upload_time": "2019-02-19T02:29:32", "upload_time_iso_8601": "2019-02-19T02:29:32.516304Z", "url": "https://files.pythonhosted.org/packages/3b/86/b44c5f43d2feab93f675e0bd86bc11d33fea67461eaa445f659fe79687d8/deepair_dev_utils-0.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:30 2020"}