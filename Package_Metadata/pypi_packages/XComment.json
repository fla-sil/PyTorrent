{"info": {"author": "Singapore-Tech-Entrepreneurs", "author_email": "tal@ste.sg", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Natural Language :: English", "Programming Language :: Python :: 3.6", "Topic :: Utilities"], "description": "XComment\n========\n\n\nTable of Contents\n-----------------\n\n* `XComment`_\n\n  * `Table of Contents`\n  * `Installation`_\n  * `Usage`_\n     * `Processing files`_\n     * `Processing directories`_\n     * `Archives`_\n        * `Logging`_\n     * `Get supported language list`_\n     * `To see full CLI specification, run`_\n  * `Development`_\n     * `Getting Up-and-Running Locally`_\n        * `Setting Things Up on Ubuntu`_\n     * `Deployment`_\n        * `Pip registry`_\n           * `Install dependencies`_\n           * `Set pypi credentials`_\n           * `Create distribution`_\n           * `Upload`_\n  * `Tips`_\n\nInstallation\n------------\n\n.. code-block:: shell\n\n    $ pip install XComment\n\nUsage\n-----\n\nUse the project's CLI to interact with the script.\n\n\nProcessing files\n++++++++++++++++\n\nSay, you are working with the file `./tests/sources/HTML/index.html`.\n\nPrecondition: virtualenv is activated (of course).\n\nTo remove comments (output code without comments to output file) invoke\n\n```shell\n$ comments_remover ./tests/sources/HTML/input.html HTML ./\n```\nThis will take `./tests/sources/HTML/input.html`, designated as `HTML` file, and put the copy of the former (with HTML-specific comments removed, obviously) to `./` named `rc.input.html`. The latter is the name of the original file prefixed with `rc.` by default.\n\nTo highlight comments (outputs comments only to output file) invoke\n\n.. code-block:: shell\n\n    $ comments_remover ./tests/sources/HTML/input.html HTML -p ./\n\n\nProcessing directories\n++++++++++++++++++++++\n\nIf on start been specified directory path, script will be processing directory recursively with all subdirs for sources by specified language.\n\n\nArchives\n++++++++\n\nFor processing archived sources use option -a\n\nExamples:\n\n.. code-block:: shell\n\n    $ # remove comments\n    $ comments_remover ./tmp/test.zip -a Python\n\n    $ # highlight comments\n    $ comments_remover ./tmp/test.zip -a -p Python\n\nLogging\n+++++++\n\n-l option enable logging (in stdout by default)\n\n-f < path > specify path to log file\n\nExample:\n\n.. code-block:: shell\n\n    $ comments_remover ./tmp/test.py -l -f ./remove.log Python\n\nGet supported language list\n+++++++++++++++++++++++++++\n\nFor get list supported languages use -i option.\nResult list will returned in json format\n\n\n.. code-block:: shell\n\n    $ comments_remover -i\n\n    [\"PHP\", \"Python\", \"CSS\", \"HTML\", \"JavaScript\", \"ActionScript\", \"Ruby\",\n    \"Assembly\", \"AppleScript\", \"Bash\", \"CSharp\", \"VB\", \"XML\", \"SQL\", \"C\"]\n\n\nTo see full CLI specification, run\n++++++++++++++++++++++++++++++++++\n\n\n.. code-block:: shell\n\n    $ comments_remover\n\n\nDevelopment\n-----------\n\n\nGetting Up-and-Running Locally\n++++++++++++++++++++++++++++++\n\nTested with the following configuration:\n\n* Ubuntu 16.04 / 17\n* Python 3.6.\n\n*Note: the below occurences of `./` refer to the project root unless explicitly stated otherwise*.\n\n\nSetting Things Up on Ubuntu\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n#. Enter the shell.\n\n#. Install `pyenv` via [pyenv-installer](https://github.com/pyenv/pyenv-installer):\n\n    .. code-block:: shell\n\n        $ curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash\n\n    .. image:: ./docs/images/pyenv-installer.png\n\n#. Follow the instructions on how to initialize `pyenv` on shell startup, for instance:\n\n    .. code-block:: shell\n\n        $ echo 'export PATH=\"/root/.pyenv/bin:$PATH\"' >> ~/.bash_profile\n        $ echo 'eval \"$(pyenv init -)\"' >> ~/.bash_profile\n        $ echo 'eval \"$(pyenv virtualenv-init -)\"' >> ~/.bash_profile\n\n    .. image:: ./docs/images/initialize-pyenv-with-shell.png\n\n#. Install Python 3.6.x via `pyenv`, say Python 3.6.2 (latest micro release versions are preferred):\n\n    .. code-block:: shell\n    \n        $ pyenv install 3.6.2\n\n    .. image:: ./docs/images/pyenv-install-3-6-2.png\n\n#. Create a virtualenv for the project:\n\n    .. code-block:: shell\n\n        $ pyenv virtualenv 3.6.2 comments_remover\n\n    .. image:: ./docs/images/pyenv-virtualenv-3.6.2-comments_remover.pngA\n\n#. Switch to whatever directory you wish the project to reside in, say `~`:\n\n    .. code-block:: shell\n\n        $ cd ~\n\n    .. image:: ./docs/images/cd-~.pngA\n\n#. Clone the project from GitHub:\n    * either via SSH (the preferred way):\n\n    .. code-block:: shell\n\n        $ git clone git@github.com:Singapore-Tech-Entrepreneurs/comments_remover.git\n\n    .. image:: ./docs/images/git-clone-gitatgithub-com-singapore-tech-entrepreneurs-comments-remover-git.png\n\n    * or via HTTPS:\n\n    .. code-block:: shell\n\n        $ git clone https://github.com/Singapore-Tech-Entrepreneurs/comments_remover.git\n\n    .. image:: ./docs/images/git-clone-https-github-com-singapore-tech-entrepreneurs-comments-remover-git.png\n\n#. Switch to the project directory:\n\n    .. code-block:: shell\n\n        $ cd comments_remover\n\n    .. image:: ./docs/images/cd-comments_remover.png\n\n#. Activate the virtualenv:\n\n    .. code-block:: shell\n\n        $ pyenv activate comments_remover\n\n    .. image:: ./docs/images/pyenv-activate-comments_remover.png\n\n#. Install project dependencies:\n\n    .. code-block:: shell\n\n        $ pip install -U -r ./requirements.txt\n\n    .. image:: ./docs/images/pip-install-u-r-requirements-txt.png\n\n#. Install dependencies for testing:\n\n    .. code-block:: shell\n\n        $ pip install -U -r ./requirements-test.txt\n\n    .. image:: ./docs/images/pip-install-u-r-requirements-test-txt.png\n\n#. (optional) Install [IPython](https://ipython.org/) interactive shell to speed up development:\n\n    .. code-block:: shell\n\n        $ pip install ipython==6.1.0\n\n    .. image:: ./docs/images/pip-install-ipython-6-1-0.png\n    \nTo run tests, simply\n\n.. code-block:: shell\n\n    $ pytest ./\n\n.. image:: ./docs/images/pytest.png\n\nTo also see coverage report,\n\n.. code-block:: shell\n\n    pytest --cov ./\n\n.. image:: ./docs/images/pytest-cov.png\n\nYou should be good to go now.\n\nDeployment\n++++++++++\n\nPip registry\n~~~~~~~~~~~~\n\nInstall dependencies\n********************\n\n.. code-block:: shell\n\n    $ python install -r requirements-deploy.txt\n\nSet pypi credentials\n********************\n\n.. code-block:: shell\n\n    $ export TWINE_USERNAME=<pypi username>\n    $ export TWINE_PASSWORD=<pypi password>\n\nCreate distribution\n*******************\n\n.. code-block:: shell\n\n    $ python setup.py sdist bdist_wheel\n\n\nUpload\n******\n\n.. code-block:: shell\n\n    $ twine upload dist/XComment-x.y.z.tar.gz\n\nTips\n----\n\nIf you're not using [PyCharm](https://www.jetbrains.com/pycharm/) yet, make sure to at least consider this as an option. \nAlso check out [JetBrains Toolbox](https://www.jetbrains.com/toolbox/), a single tool to rule them all (the JetBrains products). \nTo stay up-to-date, follow [PyCharm Blog](https://blog.jetbrains.com/pycharm/).", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://packages.python.org/XComment", "keywords": "code comments removal xcomment", "license": "", "maintainer": "", "maintainer_email": "", "name": "XComment", "package_url": "https://pypi.org/project/XComment/", "platform": "", "project_url": "https://pypi.org/project/XComment/", "project_urls": {"Homepage": "http://packages.python.org/XComment"}, "release_url": "https://pypi.org/project/XComment/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "A script to remove comments from code.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"table-of-contents\">\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#xcomment\" rel=\"nofollow\">XComment</a><ul>\n<li><cite>Table of Contents</cite></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><dl>\n<dt><a href=\"#usage\" rel=\"nofollow\">Usage</a></dt>\n<dd><ul>\n<li><a href=\"#processing-files\" rel=\"nofollow\">Processing files</a></li>\n<li><a href=\"#processing-directories\" rel=\"nofollow\">Processing directories</a></li>\n<li><dl>\n<dt><a href=\"#archives\" rel=\"nofollow\">Archives</a></dt>\n<dd><ul>\n<li><a href=\"#logging\" rel=\"nofollow\">Logging</a></li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><a href=\"#get-supported-language-list\" rel=\"nofollow\">Get supported language list</a></li>\n<li><a href=\"#to-see-full-cli-specification-run\" rel=\"nofollow\">To see full CLI specification, run</a></li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt><a href=\"#development\" rel=\"nofollow\">Development</a></dt>\n<dd><ul>\n<li><dl>\n<dt><a href=\"#getting-up-and-running-locally\" rel=\"nofollow\">Getting Up-and-Running Locally</a></dt>\n<dd><ul>\n<li><a href=\"#setting-things-up-on-ubuntu\" rel=\"nofollow\">Setting Things Up on Ubuntu</a></li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt><a href=\"#deployment\" rel=\"nofollow\">Deployment</a></dt>\n<dd><ul>\n<li><dl>\n<dt><a href=\"#pip-registry\" rel=\"nofollow\">Pip registry</a></dt>\n<dd><ul>\n<li><a href=\"#install-dependencies\" rel=\"nofollow\">Install dependencies</a></li>\n<li><a href=\"#set-pypi-credentials\" rel=\"nofollow\">Set pypi credentials</a></li>\n<li><a href=\"#create-distribution\" rel=\"nofollow\">Create distribution</a></li>\n<li><a href=\"#upload\" rel=\"nofollow\">Upload</a></li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><a href=\"#tips\" rel=\"nofollow\">Tips</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install XComment\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Use the project\u2019s CLI to interact with the script.</p>\n<div id=\"processing-files\">\n<h3>Processing files</h3>\n<p>Say, you are working with the file <cite>./tests/sources/HTML/index.html</cite>.</p>\n<p>Precondition: virtualenv is activated (of course).</p>\n<p>To remove comments (output code without comments to output file) invoke</p>\n<p><tt>`shell\n$ comments_remover ./tests/sources/HTML/input.html HTML ./\n`</tt>\nThis will take <cite>./tests/sources/HTML/input.html</cite>, designated as <cite>HTML</cite> file, and put the copy of the former (with HTML-specific comments removed, obviously) to <cite>./</cite> named <cite>rc.input.html</cite>. The latter is the name of the original file prefixed with <cite>rc.</cite> by default.</p>\n<p>To highlight comments (outputs comments only to output file) invoke</p>\n<pre>$ comments_remover ./tests/sources/HTML/input.html HTML -p ./\n</pre>\n</div>\n<div id=\"processing-directories\">\n<h3>Processing directories</h3>\n<p>If on start been specified directory path, script will be processing directory recursively with all subdirs for sources by specified language.</p>\n</div>\n<div id=\"archives\">\n<h3>Archives</h3>\n<p>For processing archived sources use option -a</p>\n<p>Examples:</p>\n<pre>$ <span class=\"c1\"># remove comments\n</span>$ comments_remover ./tmp/test.zip -a Python\n\n$ <span class=\"c1\"># highlight comments\n</span>$ comments_remover ./tmp/test.zip -a -p Python\n</pre>\n</div>\n<div id=\"logging\">\n<h3>Logging</h3>\n<p>-l option enable logging (in stdout by default)</p>\n<p>-f &lt; path &gt; specify path to log file</p>\n<p>Example:</p>\n<pre>$ comments_remover ./tmp/test.py -l -f ./remove.log Python\n</pre>\n</div>\n<div id=\"get-supported-language-list\">\n<h3>Get supported language list</h3>\n<p>For get list supported languages use -i option.\nResult list will returned in json format</p>\n<pre>$ comments_remover -i\n\n<span class=\"o\">[</span><span class=\"s2\">\"PHP\"</span>, <span class=\"s2\">\"Python\"</span>, <span class=\"s2\">\"CSS\"</span>, <span class=\"s2\">\"HTML\"</span>, <span class=\"s2\">\"JavaScript\"</span>, <span class=\"s2\">\"ActionScript\"</span>, <span class=\"s2\">\"Ruby\"</span>,\n<span class=\"s2\">\"Assembly\"</span>, <span class=\"s2\">\"AppleScript\"</span>, <span class=\"s2\">\"Bash\"</span>, <span class=\"s2\">\"CSharp\"</span>, <span class=\"s2\">\"VB\"</span>, <span class=\"s2\">\"XML\"</span>, <span class=\"s2\">\"SQL\"</span>, <span class=\"s2\">\"C\"</span><span class=\"o\">]</span>\n</pre>\n</div>\n<div id=\"to-see-full-cli-specification-run\">\n<h3>To see full CLI specification, run</h3>\n<pre>$ comments_remover\n</pre>\n</div>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<div id=\"getting-up-and-running-locally\">\n<h3>Getting Up-and-Running Locally</h3>\n<p>Tested with the following configuration:</p>\n<ul>\n<li>Ubuntu 16.04 / 17</li>\n<li>Python 3.6.</li>\n</ul>\n<p><em>Note: the below occurences of `./` refer to the project root unless explicitly stated otherwise</em>.</p>\n<div id=\"setting-things-up-on-ubuntu\">\n<h4>Setting Things Up on Ubuntu</h4>\n<ol>\n<li><p>Enter the shell.</p>\n</li>\n<li><p>Install <cite>pyenv</cite> via [pyenv-installer](<a href=\"https://github.com/pyenv/pyenv-installer\" rel=\"nofollow\">https://github.com/pyenv/pyenv-installer</a>):</p>\n<blockquote>\n<pre>$ curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer <span class=\"p\">|</span> bash\n</pre>\n<img alt=\"./docs/images/pyenv-installer.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e2736cb19474c29eda5344208cce7f669b14f515/2e2f646f63732f696d616765732f7079656e762d696e7374616c6c65722e706e67\">\n</blockquote>\n</li>\n<li><p>Follow the instructions on how to initialize <cite>pyenv</cite> on shell startup, for instance:</p>\n<blockquote>\n<pre>$ <span class=\"nb\">echo</span> <span class=\"s1\">'export PATH=\"/root/.pyenv/bin:$PATH\"'</span> &gt;&gt; ~/.bash_profile\n$ <span class=\"nb\">echo</span> <span class=\"s1\">'eval \"$(pyenv init -)\"'</span> &gt;&gt; ~/.bash_profile\n$ <span class=\"nb\">echo</span> <span class=\"s1\">'eval \"$(pyenv virtualenv-init -)\"'</span> &gt;&gt; ~/.bash_profile\n</pre>\n<img alt=\"./docs/images/initialize-pyenv-with-shell.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6e8adf2924c27a5bfe01a8cf21ec6995113bb8dc/2e2f646f63732f696d616765732f696e697469616c697a652d7079656e762d776974682d7368656c6c2e706e67\">\n</blockquote>\n</li>\n<li><p>Install Python 3.6.x via <cite>pyenv</cite>, say Python 3.6.2 (latest micro release versions are preferred):</p>\n<blockquote>\n<pre>$ pyenv install <span class=\"m\">3</span>.6.2\n</pre>\n<img alt=\"./docs/images/pyenv-install-3-6-2.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cd919f0f147aeb25b5a2fcefd8823f0967657a5c/2e2f646f63732f696d616765732f7079656e762d696e7374616c6c2d332d362d322e706e67\">\n</blockquote>\n</li>\n<li><p>Create a virtualenv for the project:</p>\n<blockquote>\n<pre>$ pyenv virtualenv <span class=\"m\">3</span>.6.2 comments_remover\n</pre>\n<img alt=\"./docs/images/pyenv-virtualenv-3.6.2-comments_remover.pngA\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/37a8eba1373ddffeb814f1908ea013f0ac78e9c0/2e2f646f63732f696d616765732f7079656e762d7669727475616c656e762d332e362e322d636f6d6d656e74735f72656d6f7665722e706e6741\">\n</blockquote>\n</li>\n<li><p>Switch to whatever directory you wish the project to reside in, say <cite>~</cite>:</p>\n<blockquote>\n<pre>$ <span class=\"nb\">cd</span> ~\n</pre>\n<img alt=\"./docs/images/cd-~.pngA\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cffc72174e9c718e7c3c8d7c353f5ca6ddd4b724/2e2f646f63732f696d616765732f63642d7e2e706e6741\">\n</blockquote>\n</li>\n<li><dl>\n<dt>Clone the project from GitHub:</dt>\n<dd><ul>\n<li>either via SSH (the preferred way):</li>\n</ul>\n<pre>$ git clone git@github.com:Singapore-Tech-Entrepreneurs/comments_remover.git\n</pre>\n<img alt=\"./docs/images/git-clone-gitatgithub-com-singapore-tech-entrepreneurs-comments-remover-git.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e81744f59e6cba05f5f92f0c9eab9670bcfe5801/2e2f646f63732f696d616765732f6769742d636c6f6e652d67697461746769746875622d636f6d2d73696e6761706f72652d746563682d656e7472657072656e657572732d636f6d6d656e74732d72656d6f7665722d6769742e706e67\">\n<ul>\n<li>or via HTTPS:</li>\n</ul>\n<pre>$ git clone https://github.com/Singapore-Tech-Entrepreneurs/comments_remover.git\n</pre>\n<img alt=\"./docs/images/git-clone-https-github-com-singapore-tech-entrepreneurs-comments-remover-git.png\" class=\"last\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3e56234dc0c85e2495f9bff03bcff37c8edbf5a1/2e2f646f63732f696d616765732f6769742d636c6f6e652d68747470732d6769746875622d636f6d2d73696e6761706f72652d746563682d656e7472657072656e657572732d636f6d6d656e74732d72656d6f7665722d6769742e706e67\">\n</dd>\n</dl>\n</li>\n<li><p>Switch to the project directory:</p>\n<blockquote>\n<pre>$ <span class=\"nb\">cd</span> comments_remover\n</pre>\n<img alt=\"./docs/images/cd-comments_remover.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bacbbd01d58781d307325499567b43cb3cbe511d/2e2f646f63732f696d616765732f63642d636f6d6d656e74735f72656d6f7665722e706e67\">\n</blockquote>\n</li>\n<li><p>Activate the virtualenv:</p>\n<blockquote>\n<pre>$ pyenv activate comments_remover\n</pre>\n<img alt=\"./docs/images/pyenv-activate-comments_remover.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8fd63a6c9112f0933ff00dedf0f0ac564e355348/2e2f646f63732f696d616765732f7079656e762d61637469766174652d636f6d6d656e74735f72656d6f7665722e706e67\">\n</blockquote>\n</li>\n<li><p>Install project dependencies:</p>\n<blockquote>\n<pre>$ pip install -U -r ./requirements.txt\n</pre>\n<img alt=\"./docs/images/pip-install-u-r-requirements-txt.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/95bdceba431c2a275adbb5b16c7e4ac5e6e12917/2e2f646f63732f696d616765732f7069702d696e7374616c6c2d752d722d726571756972656d656e74732d7478742e706e67\">\n</blockquote>\n</li>\n<li><p>Install dependencies for testing:</p>\n<blockquote>\n<pre>$ pip install -U -r ./requirements-test.txt\n</pre>\n<img alt=\"./docs/images/pip-install-u-r-requirements-test-txt.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/590f4e5b788fa99c825cc05d5f1c27293152a5e1/2e2f646f63732f696d616765732f7069702d696e7374616c6c2d752d722d726571756972656d656e74732d746573742d7478742e706e67\">\n</blockquote>\n</li>\n<li><p>(optional) Install [IPython](<a href=\"https://ipython.org/\" rel=\"nofollow\">https://ipython.org/</a>) interactive shell to speed up development:</p>\n<blockquote>\n<pre>$ pip install <span class=\"nv\">ipython</span><span class=\"o\">==</span><span class=\"m\">6</span>.1.0\n</pre>\n<img alt=\"./docs/images/pip-install-ipython-6-1-0.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/df75b06e4cb25c7a140b7aeda0401ec310904d3e/2e2f646f63732f696d616765732f7069702d696e7374616c6c2d69707974686f6e2d362d312d302e706e67\">\n</blockquote>\n</li>\n</ol>\n<p>To run tests, simply</p>\n<pre>$ pytest ./\n</pre>\n<img alt=\"./docs/images/pytest.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ef1e6b116bd5ac8e35e4dc59e11f57ed1b2bb5df/2e2f646f63732f696d616765732f7079746573742e706e67\">\n<p>To also see coverage report,</p>\n<pre>pytest --cov ./\n</pre>\n<img alt=\"./docs/images/pytest-cov.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a8215822f7a8ed7c8c61d284c58d2f1cf7af9f33/2e2f646f63732f696d616765732f7079746573742d636f762e706e67\">\n<p>You should be good to go now.</p>\n</div>\n</div>\n<div id=\"deployment\">\n<h3>Deployment</h3>\n<h3 id=\"pip-registry\"><span class=\"section-subtitle\">Pip registry</span></h3>\n<div id=\"install-dependencies\">\n<h4>Install dependencies</h4>\n<pre>$ python install -r requirements-deploy.txt\n</pre>\n</div>\n<div id=\"set-pypi-credentials\">\n<h4>Set pypi credentials</h4>\n<pre>$ <span class=\"nb\">export</span> <span class=\"nv\">TWINE_USERNAME</span><span class=\"o\">=</span>&lt;pypi username&gt;\n$ <span class=\"nb\">export</span> <span class=\"nv\">TWINE_PASSWORD</span><span class=\"o\">=</span>&lt;pypi password&gt;\n</pre>\n</div>\n<div id=\"create-distribution\">\n<h4>Create distribution</h4>\n<pre>$ python setup.py sdist bdist_wheel\n</pre>\n</div>\n<div id=\"upload\">\n<h4>Upload</h4>\n<pre>$ twine upload dist/XComment-x.y.z.tar.gz\n</pre>\n</div>\n</div>\n</div>\n<div id=\"tips\">\n<h2>Tips</h2>\n<p>If you\u2019re not using [PyCharm](<a href=\"https://www.jetbrains.com/pycharm/\" rel=\"nofollow\">https://www.jetbrains.com/pycharm/</a>) yet, make sure to at least consider this as an option.\nAlso check out [JetBrains Toolbox](<a href=\"https://www.jetbrains.com/toolbox/\" rel=\"nofollow\">https://www.jetbrains.com/toolbox/</a>), a single tool to rule them all (the JetBrains products).\nTo stay up-to-date, follow [PyCharm Blog](<a href=\"https://blog.jetbrains.com/pycharm/\" rel=\"nofollow\">https://blog.jetbrains.com/pycharm/</a>).</p>\n</div>\n\n          </div>"}, "last_serial": 3346367, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a1ac5578f9f0ca0f313a5dc97345dcc3", "sha256": "1e16a91cdaa5431266150117c6a4f090a74d9e1030e4fa656e06be337268f5ed"}, "downloads": -1, "filename": "XComment-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a1ac5578f9f0ca0f313a5dc97345dcc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9350, "upload_time": "2017-11-19T12:18:33", "upload_time_iso_8601": "2017-11-19T12:18:33.525194Z", "url": "https://files.pythonhosted.org/packages/ba/b6/9f615338691ff714d41b56700a07f95f2a84657a0fb4c427065c248aed8c/XComment-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "df2d1d45d930aa30e9790f2356417d74", "sha256": "f57bd7c3c89cef8a6a4b1393e6c18b24370b9db8a282659a10d460029e33c0d0"}, "downloads": -1, "filename": "XComment-0.0.2.tar.gz", "has_sig": false, "md5_digest": "df2d1d45d930aa30e9790f2356417d74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9597, "upload_time": "2017-11-19T19:09:52", "upload_time_iso_8601": "2017-11-19T19:09:52.223635Z", "url": "https://files.pythonhosted.org/packages/e8/6a/4adb8946005950baf270e7b86559ea5a847987925596b10490e8692a6fd8/XComment-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "df2d1d45d930aa30e9790f2356417d74", "sha256": "f57bd7c3c89cef8a6a4b1393e6c18b24370b9db8a282659a10d460029e33c0d0"}, "downloads": -1, "filename": "XComment-0.0.2.tar.gz", "has_sig": false, "md5_digest": "df2d1d45d930aa30e9790f2356417d74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9597, "upload_time": "2017-11-19T19:09:52", "upload_time_iso_8601": "2017-11-19T19:09:52.223635Z", "url": "https://files.pythonhosted.org/packages/e8/6a/4adb8946005950baf270e7b86559ea5a847987925596b10490e8692a6fd8/XComment-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:26:00 2020"}