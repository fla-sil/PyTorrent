{"info": {"author": "Terry Cain", "author_email": "terry@terrys-home.co.uk", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Typing :: Typed"], "description": "# aioboto3 Type Hints\n\n[![PyPi Version](https://img.shields.io/pypi/v/aioboto3-hints.svg)](https://pypi.python.org/pypi/aioboto3-hints)\n[![Build Status](https://travis-ci.com/terrycain/aioboto3-hints.svg?branch=master)](https://travis-ci.com/terrycain/aioboto3-hints)\n[![PyUp Updates](https://pyup.io/repos/github/terrycain/aioboto3-hints/shield.svg)](https://pyup.io/repos/github/terrycain/aioboto3-hints/)\n\n\nAll of the credit goes to Allie Fitter who did all of the hard work, I've just repurposed his repo to generate async type hints\n\nUpstream repo - https://github.com/alliefitter/boto3_type_annotations\n\n## With or Without Docstrings\n\nThis package is available both with docstrings, named `aioboto3-hints-docs` on PyPi (which contains the \nsame documentation you'll find online), and without, named `aioboto3-hints` on PyPi. The reason for this is \nthat, for a python package, `aioboto3-hints-docs` is HUGE. `aioboto3-hints` is pretty large itself \nat 2.2 MB, but `aioboto3-hints-with-docs` dwarfs it at 41 MB. Both of the packages contain a module `aioboto3_hints` \nso you can swap out the libraries between local testing and going to production with ease.\n\n## TODO\n\nAm planning to add in work to reflect some work done by vemel here - https://github.com/vemel/mypy_boto3\n\n## Installation\n\nWithout docs:\n```\npip install aioboto3-hints\n```\n\nWith docs:\n```\npip install aioboto3-hints-docs\n```\n\n## Usage\n\nRegardless of which deployment package you install, you'll still import the same package, `aioboto3_hints`.\nIts constituent packages and modules can be used to declare the type of `aioboto3` objects. For instance, everybody's \nfavorite, S3:\n\n```python\nimport asyncio\nimport boto3\nfrom aioboto3_hints.s3 import Client, ServiceResource\nfrom aioboto3_hints.s3.waiter import BucketExists\nfrom aioboto3_hints.s3.paginator import ListObjectsV2\n\n# With type annotations\nasync def main():\n    client: Client = boto3.client('s3')\n    await client.create_bucket(Bucket='foo')  # Not only does your IDE knows the name of this method, \n                                              # it knows the type of the `Bucket` argument too!\n                                              # It also, knows that `Bucket` is required, but `ACL` isn't!\n\n    # Waiters and paginators and defined also...\n    waiter: BucketExists = client.get_waiter('bucket_exists')\n    await waiter.wait('foo')\n\n    paginator: ListObjectsV2 = client.get_paginator('list_objects_v2')\n    async for response in paginator.paginate(Bucket='foo'):\n        print(response)\n\n    await client.close()\n\n    # Along with service resources.\n    resource: ServiceResource = boto3.resource('s3')\n    bucket = resource.Bucket('bar')\n    await bucket.create()\n\n    await resource.close()\n\n    # With type comments\n    async with boto3.client('s3') as client:  # type: Client\n        response = await client.get_object(Bucket='foo', Key='bar')\n\n    # This should also work\n    client: Client\n    async with boto3.client('s3') as client:\n        response = await client.get_object(Bucket='foo', Key='bar')\n\n\nasyncio.run(main())    \n\n# In docstrings\nclass Foo:\n    def __init__(self, client):\n        \"\"\"\n        :param client: It's an S3 Client and the IDE is gonna know what it is!\n        :type client: Client\n        \"\"\"\n        self.client = client\n\n    async def bar(self):\n        \"\"\"\n        :rtype: Client\n        \"\"\"\n        await self.client.delete_object(Bucket='foo', Key='bar')\n        return self.client\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/terrycain/aioboto3-hints", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "aioboto3-hints-docs", "package_url": "https://pypi.org/project/aioboto3-hints-docs/", "platform": "", "project_url": "https://pypi.org/project/aioboto3-hints-docs/", "project_urls": {"Homepage": "https://github.com/terrycain/aioboto3-hints"}, "release_url": "https://pypi.org/project/aioboto3-hints-docs/0.4.0/", "requires_dist": null, "requires_python": "", "summary": "Type annotations for aioboto3. Adds code completion in IDEs such as PyCharm.", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>aioboto3 Type Hints</h1>\n<p><a href=\"https://pypi.python.org/pypi/aioboto3-hints\" rel=\"nofollow\"><img alt=\"PyPi Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac998a43c03d0cafebfca52bfa3ab62134b79e3a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61696f626f746f332d68696e74732e737667\"></a>\n<a href=\"https://travis-ci.com/terrycain/aioboto3-hints\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/21939287831c134e562355473fe59009be8bc3c1/68747470733a2f2f7472617669732d63692e636f6d2f74657272796361696e2f61696f626f746f332d68696e74732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pyup.io/repos/github/terrycain/aioboto3-hints/\" rel=\"nofollow\"><img alt=\"PyUp Updates\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c0b3c976dbd9f6f884505529e3b706c4c2c60b09/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f74657272796361696e2f61696f626f746f332d68696e74732f736869656c642e737667\"></a></p>\n<p>All of the credit goes to Allie Fitter who did all of the hard work, I've just repurposed his repo to generate async type hints</p>\n<p>Upstream repo - <a href=\"https://github.com/alliefitter/boto3_type_annotations\" rel=\"nofollow\">https://github.com/alliefitter/boto3_type_annotations</a></p>\n<h2>With or Without Docstrings</h2>\n<p>This package is available both with docstrings, named <code>aioboto3-hints-docs</code> on PyPi (which contains the\nsame documentation you'll find online), and without, named <code>aioboto3-hints</code> on PyPi. The reason for this is\nthat, for a python package, <code>aioboto3-hints-docs</code> is HUGE. <code>aioboto3-hints</code> is pretty large itself\nat 2.2 MB, but <code>aioboto3-hints-with-docs</code> dwarfs it at 41 MB. Both of the packages contain a module <code>aioboto3_hints</code>\nso you can swap out the libraries between local testing and going to production with ease.</p>\n<h2>TODO</h2>\n<p>Am planning to add in work to reflect some work done by vemel here - <a href=\"https://github.com/vemel/mypy_boto3\" rel=\"nofollow\">https://github.com/vemel/mypy_boto3</a></p>\n<h2>Installation</h2>\n<p>Without docs:</p>\n<pre><code>pip install aioboto3-hints\n</code></pre>\n<p>With docs:</p>\n<pre><code>pip install aioboto3-hints-docs\n</code></pre>\n<h2>Usage</h2>\n<p>Regardless of which deployment package you install, you'll still import the same package, <code>aioboto3_hints</code>.\nIts constituent packages and modules can be used to declare the type of <code>aioboto3</code> objects. For instance, everybody's\nfavorite, S3:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">boto3</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aioboto3_hints.s3</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span><span class=\"p\">,</span> <span class=\"n\">ServiceResource</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aioboto3_hints.s3.waiter</span> <span class=\"kn\">import</span> <span class=\"n\">BucketExists</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aioboto3_hints.s3.paginator</span> <span class=\"kn\">import</span> <span class=\"n\">ListObjectsV2</span>\n\n<span class=\"c1\"># With type annotations</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Client</span> <span class=\"o\">=</span> <span class=\"n\">boto3</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">(</span><span class=\"s1\">'s3'</span><span class=\"p\">)</span>\n    <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">create_bucket</span><span class=\"p\">(</span><span class=\"n\">Bucket</span><span class=\"o\">=</span><span class=\"s1\">'foo'</span><span class=\"p\">)</span>  <span class=\"c1\"># Not only does your IDE knows the name of this method, </span>\n                                              <span class=\"c1\"># it knows the type of the `Bucket` argument too!</span>\n                                              <span class=\"c1\"># It also, knows that `Bucket` is required, but `ACL` isn't!</span>\n\n    <span class=\"c1\"># Waiters and paginators and defined also...</span>\n    <span class=\"n\">waiter</span><span class=\"p\">:</span> <span class=\"n\">BucketExists</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_waiter</span><span class=\"p\">(</span><span class=\"s1\">'bucket_exists'</span><span class=\"p\">)</span>\n    <span class=\"k\">await</span> <span class=\"n\">waiter</span><span class=\"o\">.</span><span class=\"n\">wait</span><span class=\"p\">(</span><span class=\"s1\">'foo'</span><span class=\"p\">)</span>\n\n    <span class=\"n\">paginator</span><span class=\"p\">:</span> <span class=\"n\">ListObjectsV2</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_paginator</span><span class=\"p\">(</span><span class=\"s1\">'list_objects_v2'</span><span class=\"p\">)</span>\n    <span class=\"k\">async</span> <span class=\"k\">for</span> <span class=\"n\">response</span> <span class=\"ow\">in</span> <span class=\"n\">paginator</span><span class=\"o\">.</span><span class=\"n\">paginate</span><span class=\"p\">(</span><span class=\"n\">Bucket</span><span class=\"o\">=</span><span class=\"s1\">'foo'</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">)</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Along with service resources.</span>\n    <span class=\"n\">resource</span><span class=\"p\">:</span> <span class=\"n\">ServiceResource</span> <span class=\"o\">=</span> <span class=\"n\">boto3</span><span class=\"o\">.</span><span class=\"n\">resource</span><span class=\"p\">(</span><span class=\"s1\">'s3'</span><span class=\"p\">)</span>\n    <span class=\"n\">bucket</span> <span class=\"o\">=</span> <span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">Bucket</span><span class=\"p\">(</span><span class=\"s1\">'bar'</span><span class=\"p\">)</span>\n    <span class=\"k\">await</span> <span class=\"n\">bucket</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># With type comments</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">boto3</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">(</span><span class=\"s1\">'s3'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>  <span class=\"c1\"># type: Client</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_object</span><span class=\"p\">(</span><span class=\"n\">Bucket</span><span class=\"o\">=</span><span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"n\">Key</span><span class=\"o\">=</span><span class=\"s1\">'bar'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># This should also work</span>\n    <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Client</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">boto3</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">(</span><span class=\"s1\">'s3'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_object</span><span class=\"p\">(</span><span class=\"n\">Bucket</span><span class=\"o\">=</span><span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"n\">Key</span><span class=\"o\">=</span><span class=\"s1\">'bar'</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>    \n\n<span class=\"c1\"># In docstrings</span>\n<span class=\"k\">class</span> <span class=\"nc\">Foo</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">client</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">        :param client: It's an S3 Client and the IDE is gonna know what it is!</span>\n<span class=\"sd\">        :type client: Client</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">client</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">bar</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">        :rtype: Client</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"k\">await</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">delete_object</span><span class=\"p\">(</span><span class=\"n\">Bucket</span><span class=\"o\">=</span><span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"n\">Key</span><span class=\"o\">=</span><span class=\"s1\">'bar'</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span>\n</pre>\n\n          </div>"}, "last_serial": 6137377, "releases": {"0.2.8": [{"comment_text": "", "digests": {"md5": "42e19b48c465078a86fdfd7833b452c9", "sha256": "57dad7daf176a244d9c75719c6a57c1e816713ded6256a1fef23f859da4f8907"}, "downloads": -1, "filename": "aioboto3_hints_docs-0.2.8-py3-none-any.whl", "has_sig": false, "md5_digest": "42e19b48c465078a86fdfd7833b452c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7414747, "upload_time": "2019-11-14T12:15:31", "upload_time_iso_8601": "2019-11-14T12:15:31.590591Z", "url": "https://files.pythonhosted.org/packages/66/42/4390b10fdd6b756762ce60ae6b053af5fd9a2694e52d81f49fb6327f9c6b/aioboto3_hints_docs-0.2.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "12a377b94e7e73c084ad868de7a38b59", "sha256": "f014adb559f57f5a17682db915ca7766149328cbae78d4508955f75834557347"}, "downloads": -1, "filename": "aioboto3-hints-docs-0.2.8.tar.gz", "has_sig": false, "md5_digest": "12a377b94e7e73c084ad868de7a38b59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6913298, "upload_time": "2019-11-14T12:15:36", "upload_time_iso_8601": "2019-11-14T12:15:36.790624Z", "url": "https://files.pythonhosted.org/packages/d5/99/33b277c64a2f8d7b42af477205f5d71c60f9182b36948d479cde06eddbbd/aioboto3-hints-docs-0.2.8.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "c54733c7ebebdde043e653acb9a8633c", "sha256": "bfb89ed50d22206992f4823a45a37ffef7b7b9d6af25d7c2849dee5655eb780a"}, "downloads": -1, "filename": "aioboto3_hints_docs-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c54733c7ebebdde043e653acb9a8633c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7414872, "upload_time": "2019-11-14T15:08:26", "upload_time_iso_8601": "2019-11-14T15:08:26.838781Z", "url": "https://files.pythonhosted.org/packages/2c/57/54ddffd46ba55d45a66be528334c5d19c46723a554f670bdb97389370311/aioboto3_hints_docs-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a6a062eae8c9ef79d5f76b279d347009", "sha256": "61bf80e890fd05a6fbc281afa33c8ae315e52ad9b0ef7f684a16f75f54a6d96c"}, "downloads": -1, "filename": "aioboto3-hints-docs-0.3.1.tar.gz", "has_sig": false, "md5_digest": "a6a062eae8c9ef79d5f76b279d347009", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6913519, "upload_time": "2019-11-14T15:08:29", "upload_time_iso_8601": "2019-11-14T15:08:29.495238Z", "url": "https://files.pythonhosted.org/packages/85/88/3ebe6d926fbe3eee901abb1dd0e5d6399fb4c5bd5c9d539cc3adf9e8f956/aioboto3-hints-docs-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "a5d2858a6c14a7c6fdde61c5dfce9b3b", "sha256": "89e2c7e821357e18f04b0c43a6620b90b07d701f43b9d64fe4f163057e27e404"}, "downloads": -1, "filename": "aioboto3_hints_docs-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a5d2858a6c14a7c6fdde61c5dfce9b3b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7415067, "upload_time": "2019-11-14T16:07:01", "upload_time_iso_8601": "2019-11-14T16:07:01.770016Z", "url": "https://files.pythonhosted.org/packages/e0/d0/b7f849f43e21e4239ece954795598e26960936612a756a82e8eca96a8cd2/aioboto3_hints_docs-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4439f03afbb23991436b69179eca69db", "sha256": "ad1a3fa81777bd2aec96f86ab9962d353c994b63828972fb187b76b31fd84dd7"}, "downloads": -1, "filename": "aioboto3-hints-docs-0.4.0.tar.gz", "has_sig": false, "md5_digest": "4439f03afbb23991436b69179eca69db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6913732, "upload_time": "2019-11-14T16:07:05", "upload_time_iso_8601": "2019-11-14T16:07:05.297126Z", "url": "https://files.pythonhosted.org/packages/04/6c/a7e4b2eeee6c3b3bd4eb13e50eb89fbd75035fe9d557a68d7c0c554a75ef/aioboto3-hints-docs-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a5d2858a6c14a7c6fdde61c5dfce9b3b", "sha256": "89e2c7e821357e18f04b0c43a6620b90b07d701f43b9d64fe4f163057e27e404"}, "downloads": -1, "filename": "aioboto3_hints_docs-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a5d2858a6c14a7c6fdde61c5dfce9b3b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7415067, "upload_time": "2019-11-14T16:07:01", "upload_time_iso_8601": "2019-11-14T16:07:01.770016Z", "url": "https://files.pythonhosted.org/packages/e0/d0/b7f849f43e21e4239ece954795598e26960936612a756a82e8eca96a8cd2/aioboto3_hints_docs-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4439f03afbb23991436b69179eca69db", "sha256": "ad1a3fa81777bd2aec96f86ab9962d353c994b63828972fb187b76b31fd84dd7"}, "downloads": -1, "filename": "aioboto3-hints-docs-0.4.0.tar.gz", "has_sig": false, "md5_digest": "4439f03afbb23991436b69179eca69db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6913732, "upload_time": "2019-11-14T16:07:05", "upload_time_iso_8601": "2019-11-14T16:07:05.297126Z", "url": "https://files.pythonhosted.org/packages/04/6c/a7e4b2eeee6c3b3bd4eb13e50eb89fbd75035fe9d557a68d7c0c554a75ef/aioboto3-hints-docs-0.4.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:46 2020"}