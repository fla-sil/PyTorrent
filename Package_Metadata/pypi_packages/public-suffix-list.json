{"info": {"author": "Peter Linss", "author_email": "pypi@linss.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# public_suffix_list\n\nThis is a module for querying the Public Suffix List to determine effective top level domains.\n\nIt provides APIs to split domain names into subdomains, registered, and public suffix parts.\n\nNote this module does NOT include a copy of the public suffix list, \nit downloads the list, caches it, and periodically checks for updates automatically.\n\nAs such, internet connectivity is required. \nIf the list is unable to be refreshed,\nit will continue to run with the last cached version.\n\nFor applications that do not have internet connectivity, \nuse an alternate package that includes a copy of the list,\nor pre-populate the cache file through other means.\nNote that without periodic updates the list will get out of date.\n\nCache updates happen on a thread so do not cause processing delays.\n\nSee https://publicsuffix.org/ for details about the list.\n\n## API\n\nThe package provides the following functions which operate on a single, global list instance:\n\n#### public_suffix_list.setup(url: str = None, cache_dir: str = None, refresh_interval: datetime.timedelta = None, log: Logger = None) -> PublicSuffixList: ...\n\nInitialize the global list.\nOnly needs to be called if not using the default values.\n\nAccepts an optional URL to download the list from, the default is: https://publicsuffix.org/list/public_suffix_list.dat\n\nThe list cache will be stored in a file 'public_suffix_list.dat' in the cache_dir, the default cache_dir is '.'.\n\nThe refresh_interval defaults to 24 hours.\n\nAn optional logger will receive debug and error messages.\nIf a logger is not provided, fatal errors will raise exceptions.\n\n\n#### public_suffix_list.split_domain(domain_name: str) -> Tuple[str, str, str]: ...\n\nSplit a domain name into subdomain, registered name, and publix suffix.\n\nReturns a Tuple of (subdomain, registered name, public suffix).\n\ne.g. www.example.com -> (www, example, com)\n\n\n#### public_suffix_list.public_suffix(domain_name: str) -> str: ...\n\nReturn public suffix of domain name.\n\ne.g. www.example.com -> com\n\n\n#### public_suffix_list.registered_name(domain_name: str) -> str: ...\n\nReturn registered name of domain name only.\n\ne.g. www.example.com -> example\n\n\n#### public_suffix_list.registered_domain_name(domain_name: str) -> str: ...\n\nReturn fully qualified registered domain name.\n\ne.g. www.example.com -> example.com\n\n\n#### public_suffix_list.split_registered_domain_name(domain_name: str) -> Tuple[str, str]: ...\n\nSplit a domain name into subdomain and fully qualified registered domain name.\n\ne.g. www.example.com -> (www, example.com)\n\n\n---\n\nAnd the following class:\n\n### public_suffix_list.PublicSuffixList\n\n#### PublicSuffixList(url: str = None, cache_dir: str = None, refresh_interval: datetime.timedelta = None, log: Logger = None) -> None: ...\n\nInstantiate a PublicSuffixList.\n\nAccepts an optional URL to download the list from, the default is: https://publicsuffix.org/list/public_suffix_list.dat\n\nThe list cache will be stored in a file 'public_suffix_list.dat' in the cache_dir, the default cache_dir is '.'.\n\nThe refresh_interval defaults to 24 hours.\n\nAn optional logger will receive debug and error messages.\nIf a logger is not provided, fatal errors will raise exceptions.\n\n\n#### PublicSuffixList.split_domain(self, domain_name: str) -> Tuple[str, str, str]: ...\n\nSplit a domain name into subdomain, registered name, and publix suffix.\n\nReturns a Tuple of (subdomain, registered name, public suffix).\n\ne.g. www.example.com -> (www, example, com)\n\n\n#### PublicSuffixList.public_suffix(self, domain_name: str) -> str:\n\nReturn public suffix of domain name.\n\ne.g. www.example.com -> com\n\n\n#### PublicSuffixList.registered_name(self, domain_name: str) -> str:\n\nReturn registered name of domain name only.\n\ne.g. www.example.com -> example\n\n\n#### PublicSuffixList.registered_domain_name(self, domain_name: str) -> str:\n\nReturn registered domain name.\n\ne.g. www.example.com -> example.com\n\n\n#### PublicSuffixList.split_registered_domain_name(self, domain_name: str) -> Tuple[str, str]:\n\nSplit a domain name into subdomain and registered domain.\n\ne.g. www.example.com -> (www, example.com)\n\n\n---\n\n### pubic_suffix_list.Logger(Protocol)\n\nThe protocol for the optional logger.\n\n#### Logger.detail(self, *args) -> None: ...\n\nPrint detailed debug information.\n\nUsed when downloading the list.\n\n#### Logger.warning(self, *args) -> None: ...\n\nPrint a non-fatal error.\n\nUsed when the list download fails.\n\n#### Logger.error(self, *args) -> None: ...\n\nPrint a fatal error.\n\nUsed when the cache is unavailable and the list is unable to be downloaded or stored.\n\n\n## Installation\n\nInstall with pip:\n\n    pip install public-suffix-list\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/plinss/public_suffix_list/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "public-suffix-list", "package_url": "https://pypi.org/project/public-suffix-list/", "platform": "", "project_url": "https://pypi.org/project/public-suffix-list/", "project_urls": {"Homepage": "https://github.com/plinss/public_suffix_list/"}, "release_url": "https://pypi.org/project/public-suffix-list/1.1.0/", "requires_dist": ["idna", "typing-extensions", "mypy ; extra == 'dev'", "flake8 ; extra == 'dev'", "flake8-import-order ; extra == 'dev'", "flake8-annotations ; extra == 'dev'", "flake8-type-annotations ; extra == 'dev'", "flake8-docstrings ; extra == 'dev'", "pep8-naming ; extra == 'dev'"], "requires_python": ">=3.6", "summary": "Split domain names into subdomain, registered, and public parts per the Public Suffix List", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>public_suffix_list</h1>\n<p>This is a module for querying the Public Suffix List to determine effective top level domains.</p>\n<p>It provides APIs to split domain names into subdomains, registered, and public suffix parts.</p>\n<p>Note this module does NOT include a copy of the public suffix list,\nit downloads the list, caches it, and periodically checks for updates automatically.</p>\n<p>As such, internet connectivity is required.\nIf the list is unable to be refreshed,\nit will continue to run with the last cached version.</p>\n<p>For applications that do not have internet connectivity,\nuse an alternate package that includes a copy of the list,\nor pre-populate the cache file through other means.\nNote that without periodic updates the list will get out of date.</p>\n<p>Cache updates happen on a thread so do not cause processing delays.</p>\n<p>See <a href=\"https://publicsuffix.org/\" rel=\"nofollow\">https://publicsuffix.org/</a> for details about the list.</p>\n<h2>API</h2>\n<p>The package provides the following functions which operate on a single, global list instance:</p>\n<h4>public_suffix_list.setup(url: str = None, cache_dir: str = None, refresh_interval: datetime.timedelta = None, log: Logger = None) -&gt; PublicSuffixList: ...</h4>\n<p>Initialize the global list.\nOnly needs to be called if not using the default values.</p>\n<p>Accepts an optional URL to download the list from, the default is: <a href=\"https://publicsuffix.org/list/public_suffix_list.dat\" rel=\"nofollow\">https://publicsuffix.org/list/public_suffix_list.dat</a></p>\n<p>The list cache will be stored in a file 'public_suffix_list.dat' in the cache_dir, the default cache_dir is '.'.</p>\n<p>The refresh_interval defaults to 24 hours.</p>\n<p>An optional logger will receive debug and error messages.\nIf a logger is not provided, fatal errors will raise exceptions.</p>\n<h4>public_suffix_list.split_domain(domain_name: str) -&gt; Tuple[str, str, str]: ...</h4>\n<p>Split a domain name into subdomain, registered name, and publix suffix.</p>\n<p>Returns a Tuple of (subdomain, registered name, public suffix).</p>\n<p>e.g. <a href=\"http://www.example.com\" rel=\"nofollow\">www.example.com</a> -&gt; (www, example, com)</p>\n<h4>public_suffix_list.public_suffix(domain_name: str) -&gt; str: ...</h4>\n<p>Return public suffix of domain name.</p>\n<p>e.g. <a href=\"http://www.example.com\" rel=\"nofollow\">www.example.com</a> -&gt; com</p>\n<h4>public_suffix_list.registered_name(domain_name: str) -&gt; str: ...</h4>\n<p>Return registered name of domain name only.</p>\n<p>e.g. <a href=\"http://www.example.com\" rel=\"nofollow\">www.example.com</a> -&gt; example</p>\n<h4>public_suffix_list.registered_domain_name(domain_name: str) -&gt; str: ...</h4>\n<p>Return fully qualified registered domain name.</p>\n<p>e.g. <a href=\"http://www.example.com\" rel=\"nofollow\">www.example.com</a> -&gt; example.com</p>\n<h4>public_suffix_list.split_registered_domain_name(domain_name: str) -&gt; Tuple[str, str]: ...</h4>\n<p>Split a domain name into subdomain and fully qualified registered domain name.</p>\n<p>e.g. <a href=\"http://www.example.com\" rel=\"nofollow\">www.example.com</a> -&gt; (www, example.com)</p>\n<hr>\n<p>And the following class:</p>\n<h3>public_suffix_list.PublicSuffixList</h3>\n<h4>PublicSuffixList(url: str = None, cache_dir: str = None, refresh_interval: datetime.timedelta = None, log: Logger = None) -&gt; None: ...</h4>\n<p>Instantiate a PublicSuffixList.</p>\n<p>Accepts an optional URL to download the list from, the default is: <a href=\"https://publicsuffix.org/list/public_suffix_list.dat\" rel=\"nofollow\">https://publicsuffix.org/list/public_suffix_list.dat</a></p>\n<p>The list cache will be stored in a file 'public_suffix_list.dat' in the cache_dir, the default cache_dir is '.'.</p>\n<p>The refresh_interval defaults to 24 hours.</p>\n<p>An optional logger will receive debug and error messages.\nIf a logger is not provided, fatal errors will raise exceptions.</p>\n<h4>PublicSuffixList.split_domain(self, domain_name: str) -&gt; Tuple[str, str, str]: ...</h4>\n<p>Split a domain name into subdomain, registered name, and publix suffix.</p>\n<p>Returns a Tuple of (subdomain, registered name, public suffix).</p>\n<p>e.g. <a href=\"http://www.example.com\" rel=\"nofollow\">www.example.com</a> -&gt; (www, example, com)</p>\n<h4>PublicSuffixList.public_suffix(self, domain_name: str) -&gt; str:</h4>\n<p>Return public suffix of domain name.</p>\n<p>e.g. <a href=\"http://www.example.com\" rel=\"nofollow\">www.example.com</a> -&gt; com</p>\n<h4>PublicSuffixList.registered_name(self, domain_name: str) -&gt; str:</h4>\n<p>Return registered name of domain name only.</p>\n<p>e.g. <a href=\"http://www.example.com\" rel=\"nofollow\">www.example.com</a> -&gt; example</p>\n<h4>PublicSuffixList.registered_domain_name(self, domain_name: str) -&gt; str:</h4>\n<p>Return registered domain name.</p>\n<p>e.g. <a href=\"http://www.example.com\" rel=\"nofollow\">www.example.com</a> -&gt; example.com</p>\n<h4>PublicSuffixList.split_registered_domain_name(self, domain_name: str) -&gt; Tuple[str, str]:</h4>\n<p>Split a domain name into subdomain and registered domain.</p>\n<p>e.g. <a href=\"http://www.example.com\" rel=\"nofollow\">www.example.com</a> -&gt; (www, example.com)</p>\n<hr>\n<h3>pubic_suffix_list.Logger(Protocol)</h3>\n<p>The protocol for the optional logger.</p>\n<h4>Logger.detail(self, *args) -&gt; None: ...</h4>\n<p>Print detailed debug information.</p>\n<p>Used when downloading the list.</p>\n<h4>Logger.warning(self, *args) -&gt; None: ...</h4>\n<p>Print a non-fatal error.</p>\n<p>Used when the list download fails.</p>\n<h4>Logger.error(self, *args) -&gt; None: ...</h4>\n<p>Print a fatal error.</p>\n<p>Used when the cache is unavailable and the list is unable to be downloaded or stored.</p>\n<h2>Installation</h2>\n<p>Install with pip:</p>\n<pre><code>pip install public-suffix-list\n</code></pre>\n\n          </div>"}, "last_serial": 6677005, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "f2dfd565db3ddc5e08a600424d29252c", "sha256": "0b6f5bff41822b3d9c4bf02d7a273fabc65e51e95ae92be18b99419a7fc4c2cb"}, "downloads": -1, "filename": "public_suffix_list-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f2dfd565db3ddc5e08a600424d29252c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7041, "upload_time": "2020-02-15T21:52:17", "upload_time_iso_8601": "2020-02-15T21:52:17.568385Z", "url": "https://files.pythonhosted.org/packages/77/9b/1f7ac39ab16af5dae3f3589cc8caad61c17184a6512fdadd6da0edb3ae32/public_suffix_list-1.0.0-py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "5ae332e337c255215e862de33c080bda", "sha256": "94b16e78cf5da2cb6389a6367500ccaa32da0305d08d63a387f11fcaf49d98fa"}, "downloads": -1, "filename": "public_suffix_list-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5ae332e337c255215e862de33c080bda", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7046, "upload_time": "2020-02-16T23:38:14", "upload_time_iso_8601": "2020-02-16T23:38:14.216953Z", "url": "https://files.pythonhosted.org/packages/11/e3/531ef63d028f682ae77257ed9d67efa2a6254ae43d1591f85f0b651bd7a5/public_suffix_list-1.0.1-py3-none-any.whl", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "d6e6a3f4c25ef77a87fb049295ff79c5", "sha256": "8c7c787f65459f2397d5fb0b6293e0cdcac8378b6cbe2e6e9ec00c1ff7f6b66b"}, "downloads": -1, "filename": "public_suffix_list-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d6e6a3f4c25ef77a87fb049295ff79c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7056, "upload_time": "2020-02-21T18:45:10", "upload_time_iso_8601": "2020-02-21T18:45:10.851269Z", "url": "https://files.pythonhosted.org/packages/a4/d1/a82eba64ea78a10f9877816ecec6b07d1b71ae5febd6b79c1d14b3b5eb67/public_suffix_list-1.1.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d6e6a3f4c25ef77a87fb049295ff79c5", "sha256": "8c7c787f65459f2397d5fb0b6293e0cdcac8378b6cbe2e6e9ec00c1ff7f6b66b"}, "downloads": -1, "filename": "public_suffix_list-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d6e6a3f4c25ef77a87fb049295ff79c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7056, "upload_time": "2020-02-21T18:45:10", "upload_time_iso_8601": "2020-02-21T18:45:10.851269Z", "url": "https://files.pythonhosted.org/packages/a4/d1/a82eba64ea78a10f9877816ecec6b07d1b71ae5febd6b79c1d14b3b5eb67/public_suffix_list-1.1.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:14:49 2020"}