{"info": {"author": "Tommaso Fontana", "author_email": "tommaso.fontana.96@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "cache_decorator\n=========================================================================================\n|travis| |sonar_quality| |sonar_maintainability| |codacy|\n|code_climate_maintainability| |pip| |downloads|\n\nA simple decorator to cache the results of computationally heavy functions.\nThe package automatically serialize and deserialize depending on the format of the save path.\n\nCurrently it supports:\n\n- .json\n- .json.gz\n- .json.bz\n- .json.lzma\n- .pkl\n- .pkl.gz\n- .pkl.bz\n- .pkl.lzma\n- .pkl.zip\n- .npy\n- .npz\n- .csv\n- .csv.gz\n- .csv.bz2\n- .csv.zip\n- .csv.xz\n- .xlsx\n\n\nHow do I install this package?\n----------------------------------------------\nAs usual, just download it using pip:\n\n.. code:: shell\n\n    pip install cache_decorator\n\n\nTests Coverage\n----------------------------------------------\nSince some software handling coverages sometime\nget slightly different results, here's three of them:\n\n|coveralls| |sonar_coverage| |code_climate_coverage|\n\n\n.. |travis| image:: https://travis-ci.org/zommiommy/cache_decorator.png\n   :target: https://travis-ci.org/zommiommy/cache_decorator\n   :alt: Travis CI build\n\n.. |sonar_quality| image:: https://sonarcloud.io/api/project_badges/measure?project=zommiommy_cache_decorator&metric=alert_status\n    :target: https://sonarcloud.io/dashboard/index/zommiommy_cache_decorator\n    :alt: SonarCloud Quality\n\n.. |sonar_maintainability| image:: https://sonarcloud.io/api/project_badges/measure?project=zommiommy_cache_decorator&metric=sqale_rating\n    :target: https://sonarcloud.io/dashboard/index/zommiommy_cache_decorator\n    :alt: SonarCloud Maintainability\n\n.. |sonar_coverage| image:: https://sonarcloud.io/api/project_badges/measure?project=zommiommy_cache_decorator&metric=coverage\n    :target: https://sonarcloud.io/dashboard/index/zommiommy_cache_decorator\n    :alt: SonarCloud Coverage\n\n.. |coveralls| image:: https://coveralls.io/repos/github/zommiommy/cache_decorator/badge.svg?branch=master\n    :target: https://coveralls.io/github/zommiommy/cache_decorator?branch=master\n    :alt: Coveralls Coverage\n\n.. |pip| image:: https://badge.fury.io/py/cache_decorator.svg\n    :target: https://badge.fury.io/py/cache_decorator\n    :alt: Pypi project\n\n.. |downloads| image:: https://pepy.tech/badge/cache_decorator\n    :target: https://pepy.tech/badge/cache_decorator\n    :alt: Pypi total project downloads\n\n.. |codacy| image:: https://api.codacy.com/project/badge/Grade/70b54eb55b1c4d0182fbfbaa4e36b87d\n    :target: https://www.codacy.com/manual/zommiommy/cache_decorat +or?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=zommiommy/cache_decorator&amp;utm_campaign=Badge_Grade\n    :alt: Codacy Maintainability\n\n.. |code_climate_maintainability| image:: https://api.codeclimate.com/v1/badges/888ccd8cdcf5a7b2acca/maintainability\n    :target: https://codeclimate.com/github/zommiommy/cache_decorator/maintainability\n    :alt: Maintainability\n\n.. |code_climate_coverage| image:: https://api.codeclimate.com/v1/badges/888ccd8cdcf5a7b2acca/test_coverage\n    :target: https://codeclimate.com/github/zommiommy/cache_decorator/test_coverage\n    :alt: Code Climate Coverate\n\nExamples of Usage\n----------------------------------------------\nTo cache a function or a method you just have to decorate it with the cache decorator.\n\n.. code:: python\n\n    from time import sleep\n    from cache_decorator import Cache\n\n    @Cache()\n    def x(a, b):\n        sleep(3)\n        return a + b\n\n    class A:\n        @Cache()\n        def x(self, a, b):\n            sleep(3)\n            return a + b\n\n\nBy default the cache is differentiate by the parameters passed to the function.\nOne can specify which parameters should be ignored.\n\n\n.. code:: python\n\n    from time import sleep\n    from cache_decorator import Cache\n\n    @Cache(args_to_ignore=[\"verbose\"])\n    def x(a, verbose=False):\n        sleep(3)\n        if verbose:\n            print(\"HEY\")\n        return a\n\nMultiple arguments can be specified as a list of strings with the name of the arguments to ignore.\n\n.. code:: python\n\n    from time import sleep\n    from cache_decorator import Cache\n\n    @Cache(args_to_ignore=[\"verbose\", \"multiprocessing\"])\n    def x(a, verbose=False, multiprocessing=False):\n        sleep(3)\n        if verbose:\n            print(\"HEY\")\n        return a\n\nThe default cache directory is ./cache but this can be setted by passing the cache_dir parameter to the decorator or by setting the environment variable CACHE_DIR.\nIn the case both are setted, the parameter folder has precedence over the environment one.\n\n\n.. code:: python\n\n    from time import sleep\n    from cache_decorator import Cache\n\n    @Cache(cache_dir=\"/tmp\")\n    def x(a):\n        sleep(3)\n        return a\n\nThe path format can be modified by passing the cache_path parameter.\nThis string will be formatted with infos about the function, its parameters and, if it's a method, the self attributes.\n\nDe default path is:\n\n.. code:: python\n\n    from time import sleep\n    from cache_decorator import Cache\n\n    @Cache(cache_path=\"{cache_dir}/{file_name}_{function_name}/{_hash}.pkl\")\n    def x(a):\n        sleep(3)\n        return a\n\nBut can be modified giving cache a more significative name, for example we can add the value of a into the file name.\n\n.. code:: python\n\n    from time import sleep\n    from cache_decorator import Cache\n\n    @Cache(cache_path=\"{cache_dir}/{file_name}_{function_name}/{a}_{_hash}.pkl\")\n    def x(a):\n        sleep(3)\n        return a\n\nDepending on the extension of the file, different serialization and deserialization dispatcher will be called.\n\n.. code:: python\n\n    from time import sleep\n    from cache_decorator import Cache\n\n    @Cache(cache_path=\"/tmp/{_hash}.pkl.gz\")\n    def x(a):\n        sleep(3)\n        return a\n\n    @Cache(cache_path=\"/tmp/{_hash}.json\")\n    def x(a):\n        sleep(3)\n        return {\"1\":1,\"2\":2}\n\n    @Cache(cache_path=\"/tmp/{_hash}.npy\")\n    def x(a):\n        sleep(3)\n        return np.array([1, 2, 3])\n\n    @Cache(cache_path=\"/tmp/{_hash}.npz\")\n    def x(a):\n        sleep(3)\n        return np.array([1, 2, 3]), np.array([1, 2, 4])\n\nCache also might have a validity duration. \n\n.. code:: python\n\n    from time import sleep\n    from cache_decorator import Cache\n\n    @Cache(\n        cache_path=\"/tmp/{_hash}.pkl.gz\",\n        validity_duration=\"24d\"\n        )\n    def x(a):\n        sleep(3)\n        return a\n\nIn this example the cache will be valid for the next 24 days. and on the 25th day the cache will be rebuilt.\nThe duration can be written as a time in seconds or as a string with unit.\nThe units can be \"s\" seconds, \"m\" minutes, \"h\" hours, \"d\" days, \"w\" weeks.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zommiommy/cache_decorator", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cache-decorator", "package_url": "https://pypi.org/project/cache-decorator/", "platform": "", "project_url": "https://pypi.org/project/cache-decorator/", "project_urls": {"Homepage": "https://github.com/zommiommy/cache_decorator"}, "release_url": "https://pypi.org/project/cache-decorator/1.2.5/", "requires_dist": null, "requires_python": "", "summary": "a simple decorator to cache the results of computationally heavy functions", "version": "1.2.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/zommiommy/cache_decorator\" rel=\"nofollow\"><img alt=\"Travis CI build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bf18794b76dd834572d148996475dee222f64d2c/68747470733a2f2f7472617669732d63692e6f72672f7a6f6d6d696f6d6d792f63616368655f6465636f7261746f722e706e67\"></a> <a href=\"https://sonarcloud.io/dashboard/index/zommiommy_cache_decorator\" rel=\"nofollow\"><img alt=\"SonarCloud Quality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f34a1cc5a44b3563a3ea64ae6431e0147c8afa27/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d7a6f6d6d696f6d6d795f63616368655f6465636f7261746f72266d65747269633d616c6572745f737461747573\"></a> <a href=\"https://sonarcloud.io/dashboard/index/zommiommy_cache_decorator\" rel=\"nofollow\"><img alt=\"SonarCloud Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9a55403a2ccf68d62285aca6efcda8591f53634d/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d7a6f6d6d696f6d6d795f63616368655f6465636f7261746f72266d65747269633d7371616c655f726174696e67\"></a> <a href=\"https://www.codacy.com/manual/zommiommy/cache_decorat+or?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=zommiommy/cache_decorator&amp;amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ed50b5a4ddd1b1483876a2e65746db77bc9b887e/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3730623534656235356231633464303138326662666261613465333662383764\"></a>\n<a href=\"https://codeclimate.com/github/zommiommy/cache_decorator/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/692366a36b47594a4dc60f7adad3695e60272e30/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f38383863636438636463663561376232616363612f6d61696e7461696e6162696c697479\"></a> <a href=\"https://badge.fury.io/py/cache_decorator\" rel=\"nofollow\"><img alt=\"Pypi project\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0a0bc8b06033d52ede7523a9494be5f4094f15e0/68747470733a2f2f62616467652e667572792e696f2f70792f63616368655f6465636f7261746f722e737667\"></a> <a href=\"https://pepy.tech/badge/cache_decorator\" rel=\"nofollow\"><img alt=\"Pypi total project downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/60ab49970a0af5f4c436ccb0ac51b23897397bc3/68747470733a2f2f706570792e746563682f62616467652f63616368655f6465636f7261746f72\"></a></p>\n<p>A simple decorator to cache the results of computationally heavy functions.\nThe package automatically serialize and deserialize depending on the format of the save path.</p>\n<p>Currently it supports:</p>\n<ul>\n<li>.json</li>\n<li>.json.gz</li>\n<li>.json.bz</li>\n<li>.json.lzma</li>\n<li>.pkl</li>\n<li>.pkl.gz</li>\n<li>.pkl.bz</li>\n<li>.pkl.lzma</li>\n<li>.pkl.zip</li>\n<li>.npy</li>\n<li>.npz</li>\n<li>.csv</li>\n<li>.csv.gz</li>\n<li>.csv.bz2</li>\n<li>.csv.zip</li>\n<li>.csv.xz</li>\n<li>.xlsx</li>\n</ul>\n<div id=\"how-do-i-install-this-package\">\n<h2>How do I install this package?</h2>\n<p>As usual, just download it using pip:</p>\n<pre>pip install cache_decorator\n</pre>\n</div>\n<div id=\"tests-coverage\">\n<h2>Tests Coverage</h2>\n<p>Since some software handling coverages sometime\nget slightly different results, here\u2019s three of them:</p>\n<p><a href=\"https://coveralls.io/github/zommiommy/cache_decorator?branch=master\" rel=\"nofollow\"><img alt=\"Coveralls Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b9e7d633f99e0e35b4e1c14d3d82001f8bfd4220/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f7a6f6d6d696f6d6d792f63616368655f6465636f7261746f722f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://sonarcloud.io/dashboard/index/zommiommy_cache_decorator\" rel=\"nofollow\"><img alt=\"SonarCloud Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bbadda0ed41d23f3445368312f91c803e4dee5a6/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d7a6f6d6d696f6d6d795f63616368655f6465636f7261746f72266d65747269633d636f766572616765\"></a> <a href=\"https://codeclimate.com/github/zommiommy/cache_decorator/test_coverage\" rel=\"nofollow\"><img alt=\"Code Climate Coverate\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cb2c327101d522a6ed96b5ee57dac0a1322359cc/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f38383863636438636463663561376232616363612f746573745f636f766572616765\"></a></p>\n</div>\n<div id=\"examples-of-usage\">\n<h2>Examples of Usage</h2>\n<p>To cache a function or a method you just have to decorate it with the cache decorator.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cache_decorator</span> <span class=\"kn\">import</span> <span class=\"n\">Cache</span>\n\n<span class=\"nd\">@Cache</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">x</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">A</span><span class=\"p\">:</span>\n    <span class=\"nd\">@Cache</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">x</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n        <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span>\n</pre>\n<p>By default the cache is differentiate by the parameters passed to the function.\nOne can specify which parameters should be ignored.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cache_decorator</span> <span class=\"kn\">import</span> <span class=\"n\">Cache</span>\n\n<span class=\"nd\">@Cache</span><span class=\"p\">(</span><span class=\"n\">args_to_ignore</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"verbose\"</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">x</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">verbose</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"HEY\"</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span>\n</pre>\n<p>Multiple arguments can be specified as a list of strings with the name of the arguments to ignore.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cache_decorator</span> <span class=\"kn\">import</span> <span class=\"n\">Cache</span>\n\n<span class=\"nd\">@Cache</span><span class=\"p\">(</span><span class=\"n\">args_to_ignore</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"verbose\"</span><span class=\"p\">,</span> <span class=\"s2\">\"multiprocessing\"</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">x</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">multiprocessing</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">verbose</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"HEY\"</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span>\n</pre>\n<p>The default cache directory is ./cache but this can be setted by passing the cache_dir parameter to the decorator or by setting the environment variable CACHE_DIR.\nIn the case both are setted, the parameter folder has precedence over the environment one.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cache_decorator</span> <span class=\"kn\">import</span> <span class=\"n\">Cache</span>\n\n<span class=\"nd\">@Cache</span><span class=\"p\">(</span><span class=\"n\">cache_dir</span><span class=\"o\">=</span><span class=\"s2\">\"/tmp\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">x</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">):</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span>\n</pre>\n<p>The path format can be modified by passing the cache_path parameter.\nThis string will be formatted with infos about the function, its parameters and, if it\u2019s a method, the self attributes.</p>\n<p>De default path is:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cache_decorator</span> <span class=\"kn\">import</span> <span class=\"n\">Cache</span>\n\n<span class=\"nd\">@Cache</span><span class=\"p\">(</span><span class=\"n\">cache_path</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"si\">{cache_dir}</span><span class=\"s2\">/</span><span class=\"si\">{file_name}</span><span class=\"s2\">_</span><span class=\"si\">{function_name}</span><span class=\"s2\">/</span><span class=\"si\">{_hash}</span><span class=\"s2\">.pkl\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">x</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">):</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span>\n</pre>\n<p>But can be modified giving cache a more significative name, for example we can add the value of a into the file name.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cache_decorator</span> <span class=\"kn\">import</span> <span class=\"n\">Cache</span>\n\n<span class=\"nd\">@Cache</span><span class=\"p\">(</span><span class=\"n\">cache_path</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"si\">{cache_dir}</span><span class=\"s2\">/</span><span class=\"si\">{file_name}</span><span class=\"s2\">_</span><span class=\"si\">{function_name}</span><span class=\"s2\">/</span><span class=\"si\">{a}</span><span class=\"s2\">_</span><span class=\"si\">{_hash}</span><span class=\"s2\">.pkl\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">x</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">):</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span>\n</pre>\n<p>Depending on the extension of the file, different serialization and deserialization dispatcher will be called.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cache_decorator</span> <span class=\"kn\">import</span> <span class=\"n\">Cache</span>\n\n<span class=\"nd\">@Cache</span><span class=\"p\">(</span><span class=\"n\">cache_path</span><span class=\"o\">=</span><span class=\"s2\">\"/tmp/</span><span class=\"si\">{_hash}</span><span class=\"s2\">.pkl.gz\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">x</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">):</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span>\n\n<span class=\"nd\">@Cache</span><span class=\"p\">(</span><span class=\"n\">cache_path</span><span class=\"o\">=</span><span class=\"s2\">\"/tmp/</span><span class=\"si\">{_hash}</span><span class=\"s2\">.json\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">x</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">):</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"1\"</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"s2\">\"2\"</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">}</span>\n\n<span class=\"nd\">@Cache</span><span class=\"p\">(</span><span class=\"n\">cache_path</span><span class=\"o\">=</span><span class=\"s2\">\"/tmp/</span><span class=\"si\">{_hash}</span><span class=\"s2\">.npy\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">x</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">):</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n\n<span class=\"nd\">@Cache</span><span class=\"p\">(</span><span class=\"n\">cache_path</span><span class=\"o\">=</span><span class=\"s2\">\"/tmp/</span><span class=\"si\">{_hash}</span><span class=\"s2\">.npz\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">x</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">):</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">])</span>\n</pre>\n<p>Cache also might have a validity duration.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cache_decorator</span> <span class=\"kn\">import</span> <span class=\"n\">Cache</span>\n\n<span class=\"nd\">@Cache</span><span class=\"p\">(</span>\n    <span class=\"n\">cache_path</span><span class=\"o\">=</span><span class=\"s2\">\"/tmp/</span><span class=\"si\">{_hash}</span><span class=\"s2\">.pkl.gz\"</span><span class=\"p\">,</span>\n    <span class=\"n\">validity_duration</span><span class=\"o\">=</span><span class=\"s2\">\"24d\"</span>\n    <span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">x</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">):</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span>\n</pre>\n<p>In this example the cache will be valid for the next 24 days. and on the 25th day the cache will be rebuilt.\nThe duration can be written as a time in seconds or as a string with unit.\nThe units can be \u201cs\u201d seconds, \u201cm\u201d minutes, \u201ch\u201d hours, \u201cd\u201d days, \u201cw\u201d weeks.</p>\n</div>\n\n          </div>"}, "last_serial": 6956772, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "b2058522c357be705ad1b6b445f99e69", "sha256": "c1c7b044859c3487c3353cf21b4148b9211414e08ffc7d2ae465840b8af64835"}, "downloads": -1, "filename": "cache_decorator-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b2058522c357be705ad1b6b445f99e69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6856, "upload_time": "2020-02-24T09:40:39", "upload_time_iso_8601": "2020-02-24T09:40:39.679284Z", "url": "https://files.pythonhosted.org/packages/73/b1/25d1e5b1b97187bbdb4285650847b67dc46d10320b5e105f868aaa756b18/cache_decorator-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "eedbbac8266c259b0d48f4b4738b6cae", "sha256": "49d83785503f0fac01af6a21be3c7ac5fc20776f6a3f0e72e9b703964980de3c"}, "downloads": -1, "filename": "cache_decorator-1.1.0.tar.gz", "has_sig": false, "md5_digest": "eedbbac8266c259b0d48f4b4738b6cae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5964, "upload_time": "2020-02-25T11:12:13", "upload_time_iso_8601": "2020-02-25T11:12:13.841142Z", "url": "https://files.pythonhosted.org/packages/c1/38/b8edb965c40d57dcfedade76185b20bc2461f3a3a2d6eaf242c047c64f14/cache_decorator-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "acba54a3e135b5edb2ff68441df8f6b4", "sha256": "74af316218e8cdb11aeb8930abc5a6a6d7dad8ba286ea5cd965770453f621c03"}, "downloads": -1, "filename": "cache_decorator-1.1.1.tar.gz", "has_sig": false, "md5_digest": "acba54a3e135b5edb2ff68441df8f6b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5989, "upload_time": "2020-02-25T13:59:24", "upload_time_iso_8601": "2020-02-25T13:59:24.300801Z", "url": "https://files.pythonhosted.org/packages/2a/3d/34325200115aff294cd0ad63efcb9496c2e3e42a5fbe1ac610315d390654/cache_decorator-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "425185ad2fd6186b847394a7e5964803", "sha256": "b8cb457efaa98f50e5933e5d4b1267428f86bce95575c5ba7d371c7ddf02daa7"}, "downloads": -1, "filename": "cache_decorator-1.1.2.tar.gz", "has_sig": false, "md5_digest": "425185ad2fd6186b847394a7e5964803", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7599, "upload_time": "2020-02-28T10:10:14", "upload_time_iso_8601": "2020-02-28T10:10:14.486438Z", "url": "https://files.pythonhosted.org/packages/7d/e5/6407a632500c2b99a7c98e6e209e96d25f75c30ad72fbcdc6c62ce21363f/cache_decorator-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "2aa7b8f6522c2ed2f66c87e98edf4d5b", "sha256": "31e11662455cb747c8dd348086d3db0ee97ca5f15cae87ad9f76de569abe3c82"}, "downloads": -1, "filename": "cache_decorator-1.1.3.tar.gz", "has_sig": false, "md5_digest": "2aa7b8f6522c2ed2f66c87e98edf4d5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7684, "upload_time": "2020-03-20T21:21:56", "upload_time_iso_8601": "2020-03-20T21:21:56.039220Z", "url": "https://files.pythonhosted.org/packages/16/28/50e6e6c351e2f0967104941dd1a8053fe0a470e76d130765c6e6ff51a2be/cache_decorator-1.1.3.tar.gz", "yanked": false}], "1.1.5": [{"comment_text": "", "digests": {"md5": "35b3f99ec5d71f861455dbe0f1a43062", "sha256": "eb2a031feb9bf283f78a4bbc98d4b8f6d86bae165ba9efc911c1c6be5c87ac35"}, "downloads": -1, "filename": "cache_decorator-1.1.5.tar.gz", "has_sig": false, "md5_digest": "35b3f99ec5d71f861455dbe0f1a43062", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7674, "upload_time": "2020-03-27T08:38:19", "upload_time_iso_8601": "2020-03-27T08:38:19.547254Z", "url": "https://files.pythonhosted.org/packages/b0/62/5e7707c3fa813c78ef57033158ceb845e739750a7f02cea0e0ada7a1999f/cache_decorator-1.1.5.tar.gz", "yanked": false}], "1.1.6": [{"comment_text": "", "digests": {"md5": "aea8de7777b0e4d65074c40f04906297", "sha256": "96849b15d403549482b9f7a784c27c1843fe17adfb3faa17e9bd15a53b5217e7"}, "downloads": -1, "filename": "cache_decorator-1.1.6.tar.gz", "has_sig": false, "md5_digest": "aea8de7777b0e4d65074c40f04906297", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7668, "upload_time": "2020-03-27T08:43:40", "upload_time_iso_8601": "2020-03-27T08:43:40.068723Z", "url": "https://files.pythonhosted.org/packages/dd/ee/6e2eb0cb09cc665e57a3e5bc8aa94cdcb7d47917a2550ed1ba6f9d90f9d3/cache_decorator-1.1.6.tar.gz", "yanked": false}], "1.1.7": [{"comment_text": "", "digests": {"md5": "bceb327652fe00eb4b38bcfcc7b8c92b", "sha256": "a1ec8788ee2972912146846d5f2b4f40bd1567bbfd4411271ffba332300d558c"}, "downloads": -1, "filename": "cache_decorator-1.1.7.tar.gz", "has_sig": false, "md5_digest": "bceb327652fe00eb4b38bcfcc7b8c92b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7714, "upload_time": "2020-03-27T14:45:41", "upload_time_iso_8601": "2020-03-27T14:45:41.487411Z", "url": "https://files.pythonhosted.org/packages/43/65/e2552388ec95b518ee32f9e9637133847e825f5972c7cef2ff45cbb39a52/cache_decorator-1.1.7.tar.gz", "yanked": false}], "1.1.8": [{"comment_text": "", "digests": {"md5": "90768c7c632e70c54559e53e8bfefc45", "sha256": "30d194c24e637b97a788c89784240d8e5a3b1d34eff0422af11389fefc5ea1a2"}, "downloads": -1, "filename": "cache_decorator-1.1.8.tar.gz", "has_sig": false, "md5_digest": "90768c7c632e70c54559e53e8bfefc45", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7889, "upload_time": "2020-03-27T15:26:22", "upload_time_iso_8601": "2020-03-27T15:26:22.164005Z", "url": "https://files.pythonhosted.org/packages/04/ca/c9bb0cb9fe9f5fa14e89f7e761ab9769020619a23735a470d5753d05d601/cache_decorator-1.1.8.tar.gz", "yanked": false}], "1.1.9": [{"comment_text": "", "digests": {"md5": "9708ec1b4cbe69a038e4ef115b094aeb", "sha256": "8c6738ba6915eb67d7b309217c75b6cdb3132b0559fed0d67da5bf82b38162ba"}, "downloads": -1, "filename": "cache_decorator-1.1.9.tar.gz", "has_sig": false, "md5_digest": "9708ec1b4cbe69a038e4ef115b094aeb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7869, "upload_time": "2020-03-27T15:29:01", "upload_time_iso_8601": "2020-03-27T15:29:01.529018Z", "url": "https://files.pythonhosted.org/packages/00/55/66f542e84165b7dee8cbf6fa54c41dcd530f35c258159af571df732664aa/cache_decorator-1.1.9.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "b9de6ef1bc2c14eaf161a7fbc3578788", "sha256": "b991560ac3269edabb9e9e88b682846327dbd1a5a1650019b2d71db19721799b"}, "downloads": -1, "filename": "cache_decorator-1.2.0.tar.gz", "has_sig": false, "md5_digest": "b9de6ef1bc2c14eaf161a7fbc3578788", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7884, "upload_time": "2020-03-27T15:35:49", "upload_time_iso_8601": "2020-03-27T15:35:49.478945Z", "url": "https://files.pythonhosted.org/packages/03/fc/fd117d80efb2cf61059d015a6a26f4ca53260c8ed0c2499dac9d57328781/cache_decorator-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "533aa983a1e2d22238970138aff18010", "sha256": "87f4b6632390cf6cccbb1c1afe03256d56255dc94e868fd057ecadf6f6acd307"}, "downloads": -1, "filename": "cache_decorator-1.2.1.tar.gz", "has_sig": false, "md5_digest": "533aa983a1e2d22238970138aff18010", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7892, "upload_time": "2020-03-28T17:06:38", "upload_time_iso_8601": "2020-03-28T17:06:38.300967Z", "url": "https://files.pythonhosted.org/packages/eb/9e/72e3e4b4a893ad8b4abf365218c4089bca1e6f2b2db36a49c93f203ceddf/cache_decorator-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "c9e8bb0b6aceee03081a90b31c78885b", "sha256": "a31bd15613581b8fa2e9720e9597d9e59b64b624d73ae58bb9f6c52b38f1db40"}, "downloads": -1, "filename": "cache_decorator-1.2.2.tar.gz", "has_sig": false, "md5_digest": "c9e8bb0b6aceee03081a90b31c78885b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7918, "upload_time": "2020-03-29T10:51:26", "upload_time_iso_8601": "2020-03-29T10:51:26.318773Z", "url": "https://files.pythonhosted.org/packages/e0/df/72a68e18c6d7912d193ae8c3838beb7df6a99a9beafb500267b372d3611f/cache_decorator-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "788e9a471a197f733e6d6575597d5ac8", "sha256": "b1a2833371c1f063dcde58c3a10e02728cc43f294127edccf4984bf6e60a9a77"}, "downloads": -1, "filename": "cache_decorator-1.2.3.tar.gz", "has_sig": false, "md5_digest": "788e9a471a197f733e6d6575597d5ac8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7967, "upload_time": "2020-04-05T16:33:11", "upload_time_iso_8601": "2020-04-05T16:33:11.560580Z", "url": "https://files.pythonhosted.org/packages/55/cd/1ee4a10dfd4ae585302b6818d61b659156a9d6852a31733fe3e576a2753b/cache_decorator-1.2.3.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "f8e72927a5de138fc09cb92c8e41db59", "sha256": "49b5fa0922c8094df25241dbd236be375693388c4d62e33da4ecf0029ab86ea5"}, "downloads": -1, "filename": "cache_decorator-1.2.4.tar.gz", "has_sig": false, "md5_digest": "f8e72927a5de138fc09cb92c8e41db59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7967, "upload_time": "2020-04-05T16:35:52", "upload_time_iso_8601": "2020-04-05T16:35:52.464107Z", "url": "https://files.pythonhosted.org/packages/5a/25/89b7828ac499ea63dc23577f15d9631a3ab8eff0a875622be9e608987661/cache_decorator-1.2.4.tar.gz", "yanked": false}], "1.2.5": [{"comment_text": "", "digests": {"md5": "02cef3311a4f22591afa9b2a5a6a22db", "sha256": "09235f3018aaf97ce6f708735ce43bc33aae424fa2fae5c102572783c07ae2c0"}, "downloads": -1, "filename": "cache_decorator-1.2.5.tar.gz", "has_sig": false, "md5_digest": "02cef3311a4f22591afa9b2a5a6a22db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7964, "upload_time": "2020-04-05T17:08:41", "upload_time_iso_8601": "2020-04-05T17:08:41.060558Z", "url": "https://files.pythonhosted.org/packages/bc/56/8450f22c114e233b56591786d3115c1461b324b2135ad823a3e1f770358c/cache_decorator-1.2.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "02cef3311a4f22591afa9b2a5a6a22db", "sha256": "09235f3018aaf97ce6f708735ce43bc33aae424fa2fae5c102572783c07ae2c0"}, "downloads": -1, "filename": "cache_decorator-1.2.5.tar.gz", "has_sig": false, "md5_digest": "02cef3311a4f22591afa9b2a5a6a22db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7964, "upload_time": "2020-04-05T17:08:41", "upload_time_iso_8601": "2020-04-05T17:08:41.060558Z", "url": "https://files.pythonhosted.org/packages/bc/56/8450f22c114e233b56591786d3115c1461b324b2135ad823a3e1f770358c/cache_decorator-1.2.5.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:44 2020"}