{"info": {"author": "tintinweb", "author_email": "tintinweb@oststrom.com", "bugtrack_url": null, "classifiers": [], "description": "# ethereum-input-decoder\nDecode transaction inputs and constructor arguments based on the ethereum contract ABI. Tries to lookup function\nsignature hashes from 4bytes.directory.\n\n* python3\n* suggested as a PR to [eth-abi #69](https://github.com/ethereum/eth-abi/pull/69)\n* the heavy lifting is done by `eth-abi`\n* utilized in [pyetherchain](https://github.com/tintinweb/pyetherchain) to decode and dump smart contract code with inputs\n\nDecode transaction inputs and constructor arguments to contract at [0xab7c74abc0c4d48d1bdad5dcb26153fc8780f83e](https://etherscan.io/address/0xab7c74abc0c4d48d1bdad5dcb26153fc8780f83e#code) to a more human friendly notation.\n\n#### Example: Decode providing the ABI as .json\n\nUsage:\n\n    python -m ethereum_input_decoder -a ./test/contract_abi_ab7c74abc0c4d48d1bdad5dcb26153fc8780f83e.json -c 000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000002903cadbe271e057edef157340b52a5898d7424f000000000000000000000000ba7ca1bcf210c1b37cf5818816c4a819c3040ea700000000000000000000000014cd6536d449e3f6878f2d6859e1ff92ae0990e60000000000000000000000000c24441e42277445e38e02dfc3494577c05ba46b -t 0x797af62798d790d3133e0049215669e09b55a0b59d586c95f94c2d56b2812040133d7707 -t 0x797af62798d790d3133e0049215669e09b55a0b59d586c95f94c2d56b2812040133d7707\n\nOutput:\n\n    ==[Constructor]==\n      Raw:         '000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000002903cadbe271e057edef157340b52a5898d7424f000000000000000000000000ba7ca1bcf210c1b37cf5818816c4a819c3040ea700000000000000000000000014cd6536d449e3f6878f2d6859e1ff92ae0990e60000000000000000000000000c24441e42277445e38e02dfc3494577c05ba46b'\n      Description: constructor None ((address[]) _owners = ('0x2903cadbe271e057edef157340b52a5898d7424f', '0xba7ca1bcf210c1b37cf5818816c4a819c3040ea7', '0x14cd6536d449e3f6878f2d6859e1ff92ae0990e6', '0x0c24441e42277445e38e02dfc3494577c05ba46b'), (uint256) _required = 2, (uint256) _daylimit = 1000000000000000000) returns ()\n\n    ==[Input]==\n      Raw:         '0x797af62798d790d3133e0049215669e09b55a0b59d586c95f94c2d56b2812040133d7707'\n      Description: function confirm ((bytes32) _h = b'\\x98\\xd7\\x90\\xd3\\x13>\\x00I!Vi\\xe0\\x9bU\\xa0\\xb5\\x9dXl\\x95\\xf9L-V\\xb2\\x81 @\\x13=w\\x07') returns ((bool) )\n\n\n#### Example: Decode without providing the ABI and forcing an online lookup from 4bytes.directory\n\nUsage:\n\n    python -m ethereum_input_decoder -t 0x166eb4cb962ee1f494711b8726972fc3b23519008854ca46e73383da53aea339ee82ee7d0000000000000000000000000000000000000000000000000000000000000000\n\nOutput:\n\n    **online lookup**\n\n\n    ==[Input]==\n      Raw:         '0x166eb4cb962ee1f494711b8726972fc3b23519008854ca46e73383da53aea339ee82ee7d0000000000000000000000000000000000000000000000000000000000000000'\n      Description: function Put ((bytes32) arg0 = b'\\x16n\\xb4\\xcb\\x96.\\xe1\\xf4\\x94q\\x1b\\x87&\\x97/\\xc3\\xb25\\x19\\x00\\x88T\\xcaF\\xe73\\x83\\xdaS\\xae\\xa39', (uint256) arg1 = 107881794066862459943708362605633226548906029344009971714560720257241323667456) returns ()\n\n\n## API\n\n```python\nfrom ethereum_input_decoder import ContractAbi\n\nca = ContractAbi(json.loads(json_abi_str))\nprint(ca.describe_input(b'797aaf...3d7707'))\n# function confirm ((bytes32) _h = b'\\x98\\xd7\\x90\\xd3\\x13>\\x00I!Vi\\xe0\\x9bU\\xa0\\xb5\\x9dXl\\x95\\xf9L-V\\xb2\\x81 @\\x13=w\\x07') returns ((bool) )\nprint(ca.describe_constructor(b'000000...5ba46b\")))\n# constructor None ((address[]) _owners = ('0x2903cadbe271e057edef157340b52a5898d7424f', '0xba7ca1bcf210c1b37cf5818816c4a819c3040ea7', '0x14cd6536d449e3f6878f2d6859e1ff92ae0990e6', '0x0c24441e42277445e38e02dfc3494577c05ba46b'), (uint256) _required = 2, (uint256) _daylimit = 1000000000000000000) returns ()\n```\n```python\n# online lookup without having an ABI ready\nfrom ethereum_input_decoder AbiMethod\n\nprint(AbiMethod.from_input_lookup(Utils.str_to_bytes(txinput)))\n# function Put ((bytes32) arg0 = b'\\x16n\\xb4\\xcb\\x96.\\xe1\\xf4\\x94q\\x1b\\x87&\\x97/\\xc3\\xb25\\x19\\x00\\x88T\\xcaF\\xe73\\x83\\xdaS\\xae\\xa39', (uint256) arg1 = 107881794066862459943708362605633226548906029344009971714560720257241323667456) returns ()\n```\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/tintinweb/ethereum-input-decoder/tarball/v0.2.2", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tintinweb/ethereum-input-decoder/", "keywords": "ethereum", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "ethereum_input_decoder", "package_url": "https://pypi.org/project/ethereum_input_decoder/", "platform": "", "project_url": "https://pypi.org/project/ethereum_input_decoder/", "project_urls": {"Download": "https://github.com/tintinweb/ethereum-input-decoder/tarball/v0.2.2", "Homepage": "https://github.com/tintinweb/ethereum-input-decoder/"}, "release_url": "https://pypi.org/project/ethereum_input_decoder/0.2.2/", "requires_dist": null, "requires_python": "", "summary": "Decode transaction inputs based on the contract ABI", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            # ethereum-input-decoder<br>Decode transaction inputs and constructor arguments based on the ethereum contract ABI. Tries to lookup function<br>signature hashes from 4bytes.directory.<br><br>* python3<br>* suggested as a PR to [eth-abi #69](https://github.com/ethereum/eth-abi/pull/69)<br>* the heavy lifting is done by `eth-abi`<br>* utilized in [pyetherchain](https://github.com/tintinweb/pyetherchain) to decode and dump smart contract code with inputs<br><br>Decode transaction inputs and constructor arguments to contract at [0xab7c74abc0c4d48d1bdad5dcb26153fc8780f83e](https://etherscan.io/address/0xab7c74abc0c4d48d1bdad5dcb26153fc8780f83e#code) to a more human friendly notation.<br><br>#### Example: Decode providing the ABI as .json<br><br>Usage:<br><br>    python -m ethereum_input_decoder -a ./test/contract_abi_ab7c74abc0c4d48d1bdad5dcb26153fc8780f83e.json -c 000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000002903cadbe271e057edef157340b52a5898d7424f000000000000000000000000ba7ca1bcf210c1b37cf5818816c4a819c3040ea700000000000000000000000014cd6536d449e3f6878f2d6859e1ff92ae0990e60000000000000000000000000c24441e42277445e38e02dfc3494577c05ba46b -t 0x797af62798d790d3133e0049215669e09b55a0b59d586c95f94c2d56b2812040133d7707 -t 0x797af62798d790d3133e0049215669e09b55a0b59d586c95f94c2d56b2812040133d7707<br><br>Output:<br><br>    ==[Constructor]==<br>      Raw:         '000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000002903cadbe271e057edef157340b52a5898d7424f000000000000000000000000ba7ca1bcf210c1b37cf5818816c4a819c3040ea700000000000000000000000014cd6536d449e3f6878f2d6859e1ff92ae0990e60000000000000000000000000c24441e42277445e38e02dfc3494577c05ba46b'<br>      Description: constructor None ((address[]) _owners = ('0x2903cadbe271e057edef157340b52a5898d7424f', '0xba7ca1bcf210c1b37cf5818816c4a819c3040ea7', '0x14cd6536d449e3f6878f2d6859e1ff92ae0990e6', '0x0c24441e42277445e38e02dfc3494577c05ba46b'), (uint256) _required = 2, (uint256) _daylimit = 1000000000000000000) returns ()<br><br>    ==[Input]==<br>      Raw:         '0x797af62798d790d3133e0049215669e09b55a0b59d586c95f94c2d56b2812040133d7707'<br>      Description: function confirm ((bytes32) _h = b'\\x98\\xd7\\x90\\xd3\\x13&gt;\\x00I!Vi\\xe0\\x9bU\\xa0\\xb5\\x9dXl\\x95\\xf9L-V\\xb2\\x81 @\\x13=w\\x07') returns ((bool) )<br><br><br>#### Example: Decode without providing the ABI and forcing an online lookup from 4bytes.directory<br><br>Usage:<br><br>    python -m ethereum_input_decoder -t 0x166eb4cb962ee1f494711b8726972fc3b23519008854ca46e73383da53aea339ee82ee7d0000000000000000000000000000000000000000000000000000000000000000<br><br>Output:<br><br>    **online lookup**<br><br><br>    ==[Input]==<br>      Raw:         '0x166eb4cb962ee1f494711b8726972fc3b23519008854ca46e73383da53aea339ee82ee7d0000000000000000000000000000000000000000000000000000000000000000'<br>      Description: function Put ((bytes32) arg0 = b'\\x16n\\xb4\\xcb\\x96.\\xe1\\xf4\\x94q\\x1b\\x87&amp;\\x97/\\xc3\\xb25\\x19\\x00\\x88T\\xcaF\\xe73\\x83\\xdaS\\xae\\xa39', (uint256) arg1 = 107881794066862459943708362605633226548906029344009971714560720257241323667456) returns ()<br><br><br>## API<br><br>```python<br>from ethereum_input_decoder import ContractAbi<br><br>ca = ContractAbi(json.loads(json_abi_str))<br>print(ca.describe_input(b'797aaf...3d7707'))<br># function confirm ((bytes32) _h = b'\\x98\\xd7\\x90\\xd3\\x13&gt;\\x00I!Vi\\xe0\\x9bU\\xa0\\xb5\\x9dXl\\x95\\xf9L-V\\xb2\\x81 @\\x13=w\\x07') returns ((bool) )<br>print(ca.describe_constructor(b'000000...5ba46b\")))<br># constructor None ((address[]) _owners = ('0x2903cadbe271e057edef157340b52a5898d7424f', '0xba7ca1bcf210c1b37cf5818816c4a819c3040ea7', '0x14cd6536d449e3f6878f2d6859e1ff92ae0990e6', '0x0c24441e42277445e38e02dfc3494577c05ba46b'), (uint256) _required = 2, (uint256) _daylimit = 1000000000000000000) returns ()<br>```<br>```python<br># online lookup without having an ABI ready<br>from ethereum_input_decoder AbiMethod<br><br>print(AbiMethod.from_input_lookup(Utils.str_to_bytes(txinput)))<br># function Put ((bytes32) arg0 = b'\\x16n\\xb4\\xcb\\x96.\\xe1\\xf4\\x94q\\x1b\\x87&amp;\\x97/\\xc3\\xb25\\x19\\x00\\x88T\\xcaF\\xe73\\x83\\xdaS\\xae\\xa39', (uint256) arg1 = 107881794066862459943708362605633226548906029344009971714560720257241323667456) returns ()<br>```<br>\n          </div>"}, "last_serial": 4030867, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "792b927670f083d529cc9eecc6fc12d8", "sha256": "2520d1fe778a15c84b64662c9674d697808b2ee28eafbeee90259f4ea01766b4"}, "downloads": -1, "filename": "ethereum_input_decoder-0.1.tar.gz", "has_sig": false, "md5_digest": "792b927670f083d529cc9eecc6fc12d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4086, "upload_time": "2018-05-10T11:49:25", "upload_time_iso_8601": "2018-05-10T11:49:25.255730Z", "url": "https://files.pythonhosted.org/packages/ca/c9/8cb9821221e1cef74d678991a8371e2cefebac54e9618d0a8abf7d22a289/ethereum_input_decoder-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "3f141e6ad3c82c3744bcd8c9bf6d172d", "sha256": "7224c4d9ca8e400ab73f3ca81ba031085d924e55e13607b3946601262cabfc52"}, "downloads": -1, "filename": "ethereum_input_decoder-0.2.tar.gz", "has_sig": false, "md5_digest": "3f141e6ad3c82c3744bcd8c9bf6d172d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5346, "upload_time": "2018-06-11T19:15:22", "upload_time_iso_8601": "2018-06-11T19:15:22.434710Z", "url": "https://files.pythonhosted.org/packages/63/e2/ea16502d6cafdbe0f09c693bcf9a917cbd744ecb0df286d34831d8c0f052/ethereum_input_decoder-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "65b45c74059c6c5ece4ae6eabc15262d", "sha256": "d65db0c14a030827a36b33b7ac02340a903faf97219fe0c72052a20bfb59e946"}, "downloads": -1, "filename": "ethereum_input_decoder-0.2.1.tar.gz", "has_sig": false, "md5_digest": "65b45c74059c6c5ece4ae6eabc15262d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5354, "upload_time": "2018-06-12T19:48:11", "upload_time_iso_8601": "2018-06-12T19:48:11.185373Z", "url": "https://files.pythonhosted.org/packages/f7/8d/d7ac600ef455035662ee8b6934276bf810b9bfded4494686168c34d8ce41/ethereum_input_decoder-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "335a6824d22a1451eec5ae89c4837775", "sha256": "8cf09f22176f82682a25be547e44930e95ef270f3d17df5e7460d651a33c8606"}, "downloads": -1, "filename": "ethereum_input_decoder-0.2.2.tar.gz", "has_sig": false, "md5_digest": "335a6824d22a1451eec5ae89c4837775", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5550, "upload_time": "2018-07-04T18:35:07", "upload_time_iso_8601": "2018-07-04T18:35:07.209082Z", "url": "https://files.pythonhosted.org/packages/88/64/067c42a1d21757ceea7106f5141849f76bcbe2289264a05b700743a7d9e8/ethereum_input_decoder-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "335a6824d22a1451eec5ae89c4837775", "sha256": "8cf09f22176f82682a25be547e44930e95ef270f3d17df5e7460d651a33c8606"}, "downloads": -1, "filename": "ethereum_input_decoder-0.2.2.tar.gz", "has_sig": false, "md5_digest": "335a6824d22a1451eec5ae89c4837775", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5550, "upload_time": "2018-07-04T18:35:07", "upload_time_iso_8601": "2018-07-04T18:35:07.209082Z", "url": "https://files.pythonhosted.org/packages/88/64/067c42a1d21757ceea7106f5141849f76bcbe2289264a05b700743a7d9e8/ethereum_input_decoder-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:29 2020"}