{"info": {"author": "Richard Xue", "author_email": "yueyericardo@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# pkbar\nKeras style progressbar for pytorch (PK Bar)\n\n### 1. show\n- `pkbar.Pbar` (progress bar)\n```\nloading and processing dataset\n10/10  [==============================] - 1.0s\n```\n\n- `pkbar.Kbar` (keras bar)\n```\nEpoch: 1/3\n100/100 [========] - 10s 102ms/step - loss: 3.7782 - rmse: 1.1650 - val_loss: 0.1823 - val_rmse: 0.4269\nEpoch: 2/3\n100/100 [========] - 10s 101ms/step - loss: 0.1819 - rmse: 0.4265 - val_loss: 0.1816 - val_rmse: 0.4261\nEpoch: 3/3\n100/100 [========] - 10s 101ms/step - loss: 0.1813 - rmse: 0.4258 - val_loss: 0.1810 - val_rmse: 0.4254\n```\n\n### 2. Install \n```\npip install pkbar\n```\n\n### 3. Usage\n\n- `pkbar.Pbar` (progress bar)\n```python\nimport pkbar\nimport time\n\npbar = pkbar.Pbar(name='loading and processing dataset', target=10)\n\nfor i in range(10):\n    time.sleep(0.1)\n    pbar.update(i)\n```\n```\nloading and processing dataset\n10/10  [==============================] - 1.0s\n```\n\n- `pkbar.Kbar` (keras bar) [for a concreate example](https://github.com/yueyericardo/pkbar/blob/master/tests/test.py#L16)\n```python\nimport pkbar\nimport torch\n\n# training loop\ntrain_per_epoch = num_of_batches_per_epoch\n\nfor epoch in range(num_epochs):\n\n    print('Epoch: %d/%d' % (epoch + 1, num_epochs))\n    kbar = pkbar.Kbar(target=train_per_epoch, width=8)\n\n    # training\n    for i in range(train_per_epoch):\n        outputs = model(inputs)\n        train_loss = criterion(outputs, targets)\n        train_rmse = torch.sqrt(train_loss)\n        optimizer.zero_grad()\n        train_loss.backward()\n        optimizer.step()\n\n        kbar.update(i, values=[(\"loss\", train_loss), (\"rmse\", train_rmse)])\n\n    # validation\n    outputs = model(inputs)\n    val_loss = criterion(outputs, targets)\n    val_rmse = torch.sqrt(val_loss)\n\n    kbar.add(1, values=[(\"loss\", train_loss), (\"rmse\", train_rmse),\n                        (\"val_loss\", val_loss), (\"val_rmse\", val_rmse)])\n```\n```\nEpoch: 1/3\n100/100 [========] - 10s 102ms/step - loss: 3.7782 - rmse: 1.1650 - val_loss: 0.1823 - val_rmse: 0.4269\nEpoch: 2/3\n100/100 [========] - 10s 101ms/step - loss: 0.1819 - rmse: 0.4265 - val_loss: 0.1816 - val_rmse: 0.4261\nEpoch: 3/3\n100/100 [========] - 10s 101ms/step - loss: 0.1813 - rmse: 0.4258 - val_loss: 0.1810 - val_rmse: 0.4254\n```\n\n### 4. Acknowledge\nKeras progbar's code from [`tf.keras.utils.Progbar`](https://github.com/tensorflow/tensorflow/blob/r1.14/tensorflow/python/keras/utils/generic_utils.py#L313)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yueyericardo/pkbar", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "pkbar", "package_url": "https://pypi.org/project/pkbar/", "platform": "", "project_url": "https://pypi.org/project/pkbar/", "project_urls": {"Homepage": "https://github.com/yueyericardo/pkbar"}, "release_url": "https://pypi.org/project/pkbar/0.4/", "requires_dist": ["numpy"], "requires_python": "", "summary": "Keras Progress Bar for PyTorch", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pkbar</h1>\n<p>Keras style progressbar for pytorch (PK Bar)</p>\n<h3>1. show</h3>\n<ul>\n<li><code>pkbar.Pbar</code> (progress bar)</li>\n</ul>\n<pre><code>loading and processing dataset\n10/10  [==============================] - 1.0s\n</code></pre>\n<ul>\n<li><code>pkbar.Kbar</code> (keras bar)</li>\n</ul>\n<pre><code>Epoch: 1/3\n100/100 [========] - 10s 102ms/step - loss: 3.7782 - rmse: 1.1650 - val_loss: 0.1823 - val_rmse: 0.4269\nEpoch: 2/3\n100/100 [========] - 10s 101ms/step - loss: 0.1819 - rmse: 0.4265 - val_loss: 0.1816 - val_rmse: 0.4261\nEpoch: 3/3\n100/100 [========] - 10s 101ms/step - loss: 0.1813 - rmse: 0.4258 - val_loss: 0.1810 - val_rmse: 0.4254\n</code></pre>\n<h3>2. Install</h3>\n<pre><code>pip install pkbar\n</code></pre>\n<h3>3. Usage</h3>\n<ul>\n<li><code>pkbar.Pbar</code> (progress bar)</li>\n</ul>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pkbar</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"n\">pbar</span> <span class=\"o\">=</span> <span class=\"n\">pkbar</span><span class=\"o\">.</span><span class=\"n\">Pbar</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'loading and processing dataset'</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n    <span class=\"n\">pbar</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n</pre>\n<pre><code>loading and processing dataset\n10/10  [==============================] - 1.0s\n</code></pre>\n<ul>\n<li><code>pkbar.Kbar</code> (keras bar) <a href=\"https://github.com/yueyericardo/pkbar/blob/master/tests/test.py#L16\" rel=\"nofollow\">for a concreate example</a></li>\n</ul>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pkbar</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n\n<span class=\"c1\"># training loop</span>\n<span class=\"n\">train_per_epoch</span> <span class=\"o\">=</span> <span class=\"n\">num_of_batches_per_epoch</span>\n\n<span class=\"k\">for</span> <span class=\"n\">epoch</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_epochs</span><span class=\"p\">):</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Epoch: </span><span class=\"si\">%d</span><span class=\"s1\">/</span><span class=\"si\">%d</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">epoch</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">num_epochs</span><span class=\"p\">))</span>\n    <span class=\"n\">kbar</span> <span class=\"o\">=</span> <span class=\"n\">pkbar</span><span class=\"o\">.</span><span class=\"n\">Kbar</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">train_per_epoch</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># training</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">train_per_epoch</span><span class=\"p\">):</span>\n        <span class=\"n\">outputs</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">inputs</span><span class=\"p\">)</span>\n        <span class=\"n\">train_loss</span> <span class=\"o\">=</span> <span class=\"n\">criterion</span><span class=\"p\">(</span><span class=\"n\">outputs</span><span class=\"p\">,</span> <span class=\"n\">targets</span><span class=\"p\">)</span>\n        <span class=\"n\">train_rmse</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">train_loss</span><span class=\"p\">)</span>\n        <span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">zero_grad</span><span class=\"p\">()</span>\n        <span class=\"n\">train_loss</span><span class=\"o\">.</span><span class=\"n\">backward</span><span class=\"p\">()</span>\n        <span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">()</span>\n\n        <span class=\"n\">kbar</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[(</span><span class=\"s2\">\"loss\"</span><span class=\"p\">,</span> <span class=\"n\">train_loss</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s2\">\"rmse\"</span><span class=\"p\">,</span> <span class=\"n\">train_rmse</span><span class=\"p\">)])</span>\n\n    <span class=\"c1\"># validation</span>\n    <span class=\"n\">outputs</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">inputs</span><span class=\"p\">)</span>\n    <span class=\"n\">val_loss</span> <span class=\"o\">=</span> <span class=\"n\">criterion</span><span class=\"p\">(</span><span class=\"n\">outputs</span><span class=\"p\">,</span> <span class=\"n\">targets</span><span class=\"p\">)</span>\n    <span class=\"n\">val_rmse</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">val_loss</span><span class=\"p\">)</span>\n\n    <span class=\"n\">kbar</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[(</span><span class=\"s2\">\"loss\"</span><span class=\"p\">,</span> <span class=\"n\">train_loss</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s2\">\"rmse\"</span><span class=\"p\">,</span> <span class=\"n\">train_rmse</span><span class=\"p\">),</span>\n                        <span class=\"p\">(</span><span class=\"s2\">\"val_loss\"</span><span class=\"p\">,</span> <span class=\"n\">val_loss</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s2\">\"val_rmse\"</span><span class=\"p\">,</span> <span class=\"n\">val_rmse</span><span class=\"p\">)])</span>\n</pre>\n<pre><code>Epoch: 1/3\n100/100 [========] - 10s 102ms/step - loss: 3.7782 - rmse: 1.1650 - val_loss: 0.1823 - val_rmse: 0.4269\nEpoch: 2/3\n100/100 [========] - 10s 101ms/step - loss: 0.1819 - rmse: 0.4265 - val_loss: 0.1816 - val_rmse: 0.4261\nEpoch: 3/3\n100/100 [========] - 10s 101ms/step - loss: 0.1813 - rmse: 0.4258 - val_loss: 0.1810 - val_rmse: 0.4254\n</code></pre>\n<h3>4. Acknowledge</h3>\n<p>Keras progbar's code from <a href=\"https://github.com/tensorflow/tensorflow/blob/r1.14/tensorflow/python/keras/utils/generic_utils.py#L313\" rel=\"nofollow\"><code>tf.keras.utils.Progbar</code></a></p>\n\n          </div>"}, "last_serial": 6713347, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "a7cd60dcde24867e407080eddb808cd9", "sha256": "4c696cf57e29994776c44265a1f8db1332294ee2240e4e07edb97a6d4ea1b261"}, "downloads": -1, "filename": "pkbar-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a7cd60dcde24867e407080eddb808cd9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7878, "upload_time": "2019-08-09T20:19:27", "upload_time_iso_8601": "2019-08-09T20:19:27.746922Z", "url": "https://files.pythonhosted.org/packages/c6/a4/ce50ced65c1c451bbccb0554ceaa4f6b036e50aabac449c9faebf117074a/pkbar-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "167fc8b17ee7570a64d9b189d3c4b2a5", "sha256": "baa43f91d518255c265657ddbef5ab9531387f3ea76f78f42f3175ee93a8ace6"}, "downloads": -1, "filename": "pkbar-0.2.tar.gz", "has_sig": false, "md5_digest": "167fc8b17ee7570a64d9b189d3c4b2a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8461, "upload_time": "2019-08-09T20:19:29", "upload_time_iso_8601": "2019-08-09T20:19:29.806053Z", "url": "https://files.pythonhosted.org/packages/c6/42/0fe8f36f3290431df507c3218725a4e10b31a21ba195c53e1d6623d3d427/pkbar-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "744489de68b9277d270611e00e7bd4ac", "sha256": "ace674dcb684356c3dba86a5b38745aa040efcc378b750ae31dad388c513409d"}, "downloads": -1, "filename": "pkbar-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "744489de68b9277d270611e00e7bd4ac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8690, "upload_time": "2019-08-09T20:23:51", "upload_time_iso_8601": "2019-08-09T20:23:51.001652Z", "url": "https://files.pythonhosted.org/packages/57/9a/b5839d1f9bbc2c80c3b0241f0ec07ed0455ad73700a9fae42971872090c2/pkbar-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e3821e0988819b723b2db3f41c78fad", "sha256": "830e0b8f65a70a4d8c6903c035d428f81977700fb9ac076e86431cf879f0a70a"}, "downloads": -1, "filename": "pkbar-0.2.1.tar.gz", "has_sig": false, "md5_digest": "0e3821e0988819b723b2db3f41c78fad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8820, "upload_time": "2019-08-09T20:23:52", "upload_time_iso_8601": "2019-08-09T20:23:52.421816Z", "url": "https://files.pythonhosted.org/packages/b2/a7/43cadee460f151d9e7ef9076c9062353fc80d26401d0f2023ee6b7197d34/pkbar-0.2.1.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "409a652fa6888385c3021a258c54f22b", "sha256": "8fce8a11214a3712e8cff2c828caa21525871ee0205a4146b7e2e5696adc3b68"}, "downloads": -1, "filename": "pkbar-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "409a652fa6888385c3021a258c54f22b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8719, "upload_time": "2020-02-27T21:00:32", "upload_time_iso_8601": "2020-02-27T21:00:32.296853Z", "url": "https://files.pythonhosted.org/packages/e3/43/367098af2862f7b4e6aa871494ed3d66c57af849a5962a92baa2dd99b652/pkbar-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1094ed4c1d018e4b05b359c9068ffa05", "sha256": "d6ed0508f130d679814b0ec82a605cf69f1734657133ed350a51cd0a06460840"}, "downloads": -1, "filename": "pkbar-0.4.tar.gz", "has_sig": false, "md5_digest": "1094ed4c1d018e4b05b359c9068ffa05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9113, "upload_time": "2020-02-27T21:00:33", "upload_time_iso_8601": "2020-02-27T21:00:33.250916Z", "url": "https://files.pythonhosted.org/packages/25/f8/46bf2b28d90cd3b3120bb43b8c703c7111c2a60a509ba1978981361bc8c6/pkbar-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "409a652fa6888385c3021a258c54f22b", "sha256": "8fce8a11214a3712e8cff2c828caa21525871ee0205a4146b7e2e5696adc3b68"}, "downloads": -1, "filename": "pkbar-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "409a652fa6888385c3021a258c54f22b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8719, "upload_time": "2020-02-27T21:00:32", "upload_time_iso_8601": "2020-02-27T21:00:32.296853Z", "url": "https://files.pythonhosted.org/packages/e3/43/367098af2862f7b4e6aa871494ed3d66c57af849a5962a92baa2dd99b652/pkbar-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1094ed4c1d018e4b05b359c9068ffa05", "sha256": "d6ed0508f130d679814b0ec82a605cf69f1734657133ed350a51cd0a06460840"}, "downloads": -1, "filename": "pkbar-0.4.tar.gz", "has_sig": false, "md5_digest": "1094ed4c1d018e4b05b359c9068ffa05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9113, "upload_time": "2020-02-27T21:00:33", "upload_time_iso_8601": "2020-02-27T21:00:33.250916Z", "url": "https://files.pythonhosted.org/packages/25/f8/46bf2b28d90cd3b3120bb43b8c703c7111c2a60a509ba1978981361bc8c6/pkbar-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:50 2020"}