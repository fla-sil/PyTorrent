{"info": {"author": "@cefn", "author_email": "github.com@cefn.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Education", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Topic :: Education", "Topic :: Software Development :: Embedded Systems"], "description": "# VGkits' Vanguard Tools\n\nThe vgkits-vanguard package is published via [Pip3](https://vgkits.org/blog/what-is-pip3/) giving users simple short commands for configuring [Vanguard boards](https://vgkits.org/blog/projects/vanguard/) and connecting to a Vanguard board's built-in python shell.\n\nRun this ***pip3*** command from a [terminal](https://vgkits.org/blog/what-is-a-terminal/) to install the tools.\n\n    pip3 install vgkits-vanguard\n\nIf you don't yet have pip3, (which is installed as part of Python3) then [follow these instructions](https://vgkits.org/blog/pip3-howto/) to install it on your laptop.\n\nSee below for the commands you can run after the tools are installed.\n\n## shell : send python commands over USB\n\nConnect to the python shell prompt on the Vanguard board over USB on Windows, MacOS or Linux, by running...\n\n    vanguard shell\n\nThis auto-detects the Vanguard's USB device and your operating system's Terminal configuration. Then it launches [miniterm](http://pyserial.readthedocs.io/en/latest/tools.html#module-serial.tools.miniterm) with the proper parameters to connect your [terminal](https://vgkits.org/blog/what-is-a-terminal/) to the [python\nshell](https://vgkits.org/blog/what-is-the-python-shell/).\n\n## brainwash : upgrade your board\n\nAfter some experiments, you can wipe your Vanguard board to get a clean start by running...\n\n    vanguard brainwash\n\nThis is equivalent to `vanguard brainwash vanguard` to install latest Micropython plus VGkits' pre-installed libraries. However, you can use ***brainwash*** to wipe and install a different 'operating system' on your Vanguard board such as a clean [Micropython](https://micropython.org/download#esp8266) build, [CircuitPython](https://github.com/adafruit/circuitpython), [Espruino](http://www.espruino.com/EspruinoESP8266) (to write code in [Javascript](https://en.wikipedia.org/wiki/JavaScript)) or [Punyforth](https://github.com/zeroflag/punyforth) (to write code in the [Forth](https://en.wikipedia.org/wiki/Forth_(programming_language)) language). \n\nThere are even [Basic](https://www.esp8266basic.com/) and [LISP](http://www.ulisp.com/show?21T5) interpreters designed to run on this processor!\n\n\n`vanguard brainwash python` - installs default *python* firmware (equivalent to `vanguard brainwash micropython`)\n\n`vanguard brainwash javascript` - the default *javascript* firmware (equivalent to `vanguard brainwash espruino`)\n\n`vanguard brainwash lua` - the default *lua* firmware (equivalent to `vanguard brainwash nodemcu`)\n\n`vanguard brainwash basic` - the default *basic* firmware (equivalent to `vanguard brainwash esp8266basic`)\n\n`vanguard brainwash forth` - the default *forth* firmware (equivalent to `vanguard brainwash punyforth`) \n\n`vanguard brainwash micropython` - [latest micropython](https://micropython.org/download#esp8266) release from the firmwares folder\n\n`vanguard brainwash circuitpython` - [latest circuitpython](https://github.com/adafruit/circuitpython/releases/latest) release from the firmwares folder\n\n`vanguard brainwash espruino` - [latest espruino](https://www.espruino.com/binaries/) release from the firmwares folder\n\n`vanguard brainwash esp8266basic` - latest [ESP8266Basic](https://www.esp8266basic.com/) release from the firmwares folder\n\n`vanguard brainwash nodemcu` - latest [NodeMCU](https://github.com/nodemcu/nodemcu-firmware) (eLua) release from the firmwares folder\n\n`vanguard brainwash punyforth` - [latest punyforth](https://github.com/zeroflag/punyforth/tree/master/arch/esp8266/bin) release from the firmwares folder. ***N.B.*** To connect to Punyforth try `vanguard shell --line --echo --eol CRLF` as per [this issue](https://github.com/zeroflag/punyforth/issues/41)\n\n## brainfreeze : back up the board's current configuration\n\nAfter investing time in uploading libraries, writing and testing scripts on your board, you can save an 'image' of your operating system including any installed files by running...\n\n```\nvanguard brainfreeze\n```\n\nThis creates a file ***brainfreeze.bin*** in the current folder. We suggest you rename this file to *somethingelse.bin* to help you remember the configuration you saved. Use that file to restore your board to the same configuration at a later time by running...\n\n```\nvanguard brainwash --input somethingelse.bin\n```\n\n## put : upload main.py or python module\n\nIf there is a main.py file in the current working directory, you can upload it using...\n\n```\nvanguard put\n```\n\nIf you wanted to put a module on the board, for example a the [bmp180.py](https://github.com/cefn/micropython-bmp180/blob/master/bmp180.py) file to module to use a BMP180 pressure sensor, place the file in the current working directory, then run...\n\n```\nvanguard put bmp180.py\n```\n\nYou will then be able to successfully `import bmp180` from the Vanguard board, and [run the example](https://github.com/cefn/micropython-bmp180/blob/master/README.md).\n\n\n## rm : remove main.py or python module\n\nIf you no longer want the main.py startup script, then run...\n\n```\nvanguard rm main.py\n```\n\n...and the Vanguard board will no longer run your script on powerup.\n\n## see : launch a file explorer\n\nEvery terminal has a 'current working directory', the folder it is currently using to create or find files. To see the contents of this folder, run...\n\n```\nvanguard see\n```\n\n...to open a graphical file explorer showing the current directory.\n\nUse the terminal command `cd` (change directory) to change the directory by typing in different paths. For example `cd Desktop` will change the directory to a subfolder called Desktop.\n\n\n## Troubleshooting\n\nThe vgkits-vanguard Pypi package (installed via pip) should install a 'vanguard' command into a local folder, which can be run on Windows, Mac OS or Linux using just **vanguard**.\n\nIf for any reason **vanguard** is not available you can run instead...\n\n    python -m vgkits.vanguard\n\n...or to force the use of Python3...\n\n    python3 -m vgkits.vanguard\n    \nIf you encounter this issue, probably your path is not properly set up to include the files installed by pip3. Try following [these instructions](https://vgkits.org/blog/pip3-config-howto/) to fix it.\n\n\nv0.2.0\n======\n\nOriginal release, restructuring scripts which were originally under\nShrimpingIt/cockle and vgkits/vanguard into\n[click](http://click.pocoo.org/)-controlled command line utilities.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/vgkits/vgkits-vanguard/archive/0.2.0_rc12.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://vgkits.org", "keywords": "vgkits,vanguard,esp8266,micropython,circuitpython,iot,gcse,computer science", "license": "GPL3", "maintainer": "", "maintainer_email": "", "name": "vgkits-vanguard", "package_url": "https://pypi.org/project/vgkits-vanguard/", "platform": "", "project_url": "https://pypi.org/project/vgkits-vanguard/", "project_urls": {"Download": "https://github.com/vgkits/vgkits-vanguard/archive/0.2.0_rc12.tar.gz", "Homepage": "https://vgkits.org"}, "release_url": "https://pypi.org/project/vgkits-vanguard/0.2.0rc12/", "requires_dist": null, "requires_python": "", "summary": "Tools to support VGkits Vanguard ESP8266 python-programmable board.", "version": "0.2.0rc12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>VGkits' Vanguard Tools</h1>\n<p>The vgkits-vanguard package is published via <a href=\"https://vgkits.org/blog/what-is-pip3/\" rel=\"nofollow\">Pip3</a> giving users simple short commands for configuring <a href=\"https://vgkits.org/blog/projects/vanguard/\" rel=\"nofollow\">Vanguard boards</a> and connecting to a Vanguard board's built-in python shell.</p>\n<p>Run this <em><strong>pip3</strong></em> command from a <a href=\"https://vgkits.org/blog/what-is-a-terminal/\" rel=\"nofollow\">terminal</a> to install the tools.</p>\n<pre><code>pip3 install vgkits-vanguard\n</code></pre>\n<p>If you don't yet have pip3, (which is installed as part of Python3) then <a href=\"https://vgkits.org/blog/pip3-howto/\" rel=\"nofollow\">follow these instructions</a> to install it on your laptop.</p>\n<p>See below for the commands you can run after the tools are installed.</p>\n<h2>shell : send python commands over USB</h2>\n<p>Connect to the python shell prompt on the Vanguard board over USB on Windows, MacOS or Linux, by running...</p>\n<pre><code>vanguard shell\n</code></pre>\n<p>This auto-detects the Vanguard's USB device and your operating system's Terminal configuration. Then it launches <a href=\"http://pyserial.readthedocs.io/en/latest/tools.html#module-serial.tools.miniterm\" rel=\"nofollow\">miniterm</a> with the proper parameters to connect your <a href=\"https://vgkits.org/blog/what-is-a-terminal/\" rel=\"nofollow\">terminal</a> to the <a href=\"https://vgkits.org/blog/what-is-the-python-shell/\" rel=\"nofollow\">python\nshell</a>.</p>\n<h2>brainwash : upgrade your board</h2>\n<p>After some experiments, you can wipe your Vanguard board to get a clean start by running...</p>\n<pre><code>vanguard brainwash\n</code></pre>\n<p>This is equivalent to <code>vanguard brainwash vanguard</code> to install latest Micropython plus VGkits' pre-installed libraries. However, you can use <em><strong>brainwash</strong></em> to wipe and install a different 'operating system' on your Vanguard board such as a clean <a href=\"https://micropython.org/download#esp8266\" rel=\"nofollow\">Micropython</a> build, <a href=\"https://github.com/adafruit/circuitpython\" rel=\"nofollow\">CircuitPython</a>, <a href=\"http://www.espruino.com/EspruinoESP8266\" rel=\"nofollow\">Espruino</a> (to write code in <a href=\"https://en.wikipedia.org/wiki/JavaScript\" rel=\"nofollow\">Javascript</a>) or <a href=\"https://github.com/zeroflag/punyforth\" rel=\"nofollow\">Punyforth</a> (to write code in the <a href=\"https://en.wikipedia.org/wiki/Forth_(programming_language)\" rel=\"nofollow\">Forth</a> language).</p>\n<p>There are even <a href=\"https://www.esp8266basic.com/\" rel=\"nofollow\">Basic</a> and <a href=\"http://www.ulisp.com/show?21T5\" rel=\"nofollow\">LISP</a> interpreters designed to run on this processor!</p>\n<p><code>vanguard brainwash python</code> - installs default <em>python</em> firmware (equivalent to <code>vanguard brainwash micropython</code>)</p>\n<p><code>vanguard brainwash javascript</code> - the default <em>javascript</em> firmware (equivalent to <code>vanguard brainwash espruino</code>)</p>\n<p><code>vanguard brainwash lua</code> - the default <em>lua</em> firmware (equivalent to <code>vanguard brainwash nodemcu</code>)</p>\n<p><code>vanguard brainwash basic</code> - the default <em>basic</em> firmware (equivalent to <code>vanguard brainwash esp8266basic</code>)</p>\n<p><code>vanguard brainwash forth</code> - the default <em>forth</em> firmware (equivalent to <code>vanguard brainwash punyforth</code>)</p>\n<p><code>vanguard brainwash micropython</code> - <a href=\"https://micropython.org/download#esp8266\" rel=\"nofollow\">latest micropython</a> release from the firmwares folder</p>\n<p><code>vanguard brainwash circuitpython</code> - <a href=\"https://github.com/adafruit/circuitpython/releases/latest\" rel=\"nofollow\">latest circuitpython</a> release from the firmwares folder</p>\n<p><code>vanguard brainwash espruino</code> - <a href=\"https://www.espruino.com/binaries/\" rel=\"nofollow\">latest espruino</a> release from the firmwares folder</p>\n<p><code>vanguard brainwash esp8266basic</code> - latest <a href=\"https://www.esp8266basic.com/\" rel=\"nofollow\">ESP8266Basic</a> release from the firmwares folder</p>\n<p><code>vanguard brainwash nodemcu</code> - latest <a href=\"https://github.com/nodemcu/nodemcu-firmware\" rel=\"nofollow\">NodeMCU</a> (eLua) release from the firmwares folder</p>\n<p><code>vanguard brainwash punyforth</code> - <a href=\"https://github.com/zeroflag/punyforth/tree/master/arch/esp8266/bin\" rel=\"nofollow\">latest punyforth</a> release from the firmwares folder. <em><strong>N.B.</strong></em> To connect to Punyforth try <code>vanguard shell --line --echo --eol CRLF</code> as per <a href=\"https://github.com/zeroflag/punyforth/issues/41\" rel=\"nofollow\">this issue</a></p>\n<h2>brainfreeze : back up the board's current configuration</h2>\n<p>After investing time in uploading libraries, writing and testing scripts on your board, you can save an 'image' of your operating system including any installed files by running...</p>\n<pre><code>vanguard brainfreeze\n</code></pre>\n<p>This creates a file <em><strong>brainfreeze.bin</strong></em> in the current folder. We suggest you rename this file to <em>somethingelse.bin</em> to help you remember the configuration you saved. Use that file to restore your board to the same configuration at a later time by running...</p>\n<pre><code>vanguard brainwash --input somethingelse.bin\n</code></pre>\n<h2>put : upload main.py or python module</h2>\n<p>If there is a main.py file in the current working directory, you can upload it using...</p>\n<pre><code>vanguard put\n</code></pre>\n<p>If you wanted to put a module on the board, for example a the <a href=\"https://github.com/cefn/micropython-bmp180/blob/master/bmp180.py\" rel=\"nofollow\">bmp180.py</a> file to module to use a BMP180 pressure sensor, place the file in the current working directory, then run...</p>\n<pre><code>vanguard put bmp180.py\n</code></pre>\n<p>You will then be able to successfully <code>import bmp180</code> from the Vanguard board, and <a href=\"https://github.com/cefn/micropython-bmp180/blob/master/README.md\" rel=\"nofollow\">run the example</a>.</p>\n<h2>rm : remove main.py or python module</h2>\n<p>If you no longer want the main.py startup script, then run...</p>\n<pre><code>vanguard rm main.py\n</code></pre>\n<p>...and the Vanguard board will no longer run your script on powerup.</p>\n<h2>see : launch a file explorer</h2>\n<p>Every terminal has a 'current working directory', the folder it is currently using to create or find files. To see the contents of this folder, run...</p>\n<pre><code>vanguard see\n</code></pre>\n<p>...to open a graphical file explorer showing the current directory.</p>\n<p>Use the terminal command <code>cd</code> (change directory) to change the directory by typing in different paths. For example <code>cd Desktop</code> will change the directory to a subfolder called Desktop.</p>\n<h2>Troubleshooting</h2>\n<p>The vgkits-vanguard Pypi package (installed via pip) should install a 'vanguard' command into a local folder, which can be run on Windows, Mac OS or Linux using just <strong>vanguard</strong>.</p>\n<p>If for any reason <strong>vanguard</strong> is not available you can run instead...</p>\n<pre><code>python -m vgkits.vanguard\n</code></pre>\n<p>...or to force the use of Python3...</p>\n<pre><code>python3 -m vgkits.vanguard\n</code></pre>\n<p>If you encounter this issue, probably your path is not properly set up to include the files installed by pip3. Try following <a href=\"https://vgkits.org/blog/pip3-config-howto/\" rel=\"nofollow\">these instructions</a> to fix it.</p>\n<h1>v0.2.0</h1>\n<p>Original release, restructuring scripts which were originally under\nShrimpingIt/cockle and vgkits/vanguard into\n<a href=\"http://click.pocoo.org/\" rel=\"nofollow\">click</a>-controlled command line utilities.</p>\n\n          </div>"}, "last_serial": 4980242, "releases": {"0.2.0rc10": [{"comment_text": "", "digests": {"md5": "944196751dacf379b1541fc3ffe32560", "sha256": "c6e984323c3201ca8d91b8e530e5c4d95affc55143143f67f4d7983498dc2b50"}, "downloads": -1, "filename": "vgkits-vanguard-0.2.0rc10.tar.gz", "has_sig": false, "md5_digest": "944196751dacf379b1541fc3ffe32560", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3747144, "upload_time": "2018-06-11T22:37:09", "upload_time_iso_8601": "2018-06-11T22:37:09.289026Z", "url": "https://files.pythonhosted.org/packages/1c/1f/043e709ae4cadbcbb584476cfc120d04632e260ca279cdf04cd81db7255b/vgkits-vanguard-0.2.0rc10.tar.gz", "yanked": false}], "0.2.0rc11": [{"comment_text": "", "digests": {"md5": "f4aad866ba2f8a8c4ef06cfe9d035bb7", "sha256": "6552c9fac23455e7cdca061433bbbc2f6bc8dd5e2007fa0361ef9aabcf6588c1"}, "downloads": -1, "filename": "vgkits-vanguard-0.2.0rc11.tar.gz", "has_sig": false, "md5_digest": "f4aad866ba2f8a8c4ef06cfe9d035bb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3747262, "upload_time": "2018-06-12T00:41:44", "upload_time_iso_8601": "2018-06-12T00:41:44.720255Z", "url": "https://files.pythonhosted.org/packages/f6/94/cd45b84e511b9277259d0be30c542272820af19a40eb1accbfb6b7469346/vgkits-vanguard-0.2.0rc11.tar.gz", "yanked": false}], "0.2.0rc12": [{"comment_text": "", "digests": {"md5": "5c14aa771542c8b08fb6ee211d5240f3", "sha256": "c93df2a8169819993624b62f1535f66192439bd119b07ef1775ebb205330d955"}, "downloads": -1, "filename": "vgkits-vanguard-0.2.0rc12.tar.gz", "has_sig": false, "md5_digest": "5c14aa771542c8b08fb6ee211d5240f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4146574, "upload_time": "2019-03-24T23:32:42", "upload_time_iso_8601": "2019-03-24T23:32:42.166663Z", "url": "https://files.pythonhosted.org/packages/b2/e3/507be4be65ee5f437c15a925aca023a2d991c9e1a8374d572c3fc493cdc5/vgkits-vanguard-0.2.0rc12.tar.gz", "yanked": false}], "0.2.0rc2": [{"comment_text": "", "digests": {"md5": "fb170e7901effb71c89571103ebe55bb", "sha256": "6cc49a4dae41e5b65393571bffbbe7ef34ee982d3c5ea1ff664989b505a47978"}, "downloads": -1, "filename": "vgkits-vanguard-0.2.0rc2.tar.gz", "has_sig": false, "md5_digest": "fb170e7901effb71c89571103ebe55bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2069051, "upload_time": "2018-06-02T12:29:50", "upload_time_iso_8601": "2018-06-02T12:29:50.233671Z", "url": "https://files.pythonhosted.org/packages/ef/15/8f209c6c9233d90a3566f790d6bab6450e7e66a21ab7669a6faeb71f2ae2/vgkits-vanguard-0.2.0rc2.tar.gz", "yanked": false}], "0.2.0rc4": [{"comment_text": "", "digests": {"md5": "3e0fef89e90c6a77229fc2bf0ca71901", "sha256": "9824aeb22e6df9d55e57a7c299b826c0098fe9f9961a3063f69e2684e24d866f"}, "downloads": -1, "filename": "vgkits-vanguard-0.2.0rc4.tar.gz", "has_sig": false, "md5_digest": "3e0fef89e90c6a77229fc2bf0ca71901", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3299414, "upload_time": "2018-06-04T18:05:02", "upload_time_iso_8601": "2018-06-04T18:05:02.117274Z", "url": "https://files.pythonhosted.org/packages/88/f0/6e2592bea0803328c7399c27d33cadfff8e6009346828cc9d59edded3a89/vgkits-vanguard-0.2.0rc4.tar.gz", "yanked": false}], "0.2.0rc5": [{"comment_text": "", "digests": {"md5": "43c0502971eeb1869e7f5aaa0c2c4388", "sha256": "c6144634fbbf761898c2bda8c93e82b3a00ab7ca61e9499c20f1d066cabf82df"}, "downloads": -1, "filename": "vgkits-vanguard-0.2.0rc5.tar.gz", "has_sig": false, "md5_digest": "43c0502971eeb1869e7f5aaa0c2c4388", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3300079, "upload_time": "2018-06-05T16:13:29", "upload_time_iso_8601": "2018-06-05T16:13:29.688553Z", "url": "https://files.pythonhosted.org/packages/b6/c7/80f701aba365528d5c5239f59d10f085432ae54309ce2c560497df98e63e/vgkits-vanguard-0.2.0rc5.tar.gz", "yanked": false}], "0.2.0rc6": [{"comment_text": "", "digests": {"md5": "d5cf9210e8231b6105d00b4ac8fbe31e", "sha256": "4aee87f67c282c76995040e2426d5ea70365e3d50d7e21d9f49e6c8bf7159f02"}, "downloads": -1, "filename": "vgkits-vanguard-0.2.0rc6.tar.gz", "has_sig": false, "md5_digest": "d5cf9210e8231b6105d00b4ac8fbe31e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3300991, "upload_time": "2018-06-05T16:32:31", "upload_time_iso_8601": "2018-06-05T16:32:31.432224Z", "url": "https://files.pythonhosted.org/packages/49/ae/52eef7f1c5a4b67d7d1c35aeca721ed199df269ab5a1395623e62a985a91/vgkits-vanguard-0.2.0rc6.tar.gz", "yanked": false}], "0.2.0rc9": [{"comment_text": "", "digests": {"md5": "cc3b303ba3b7b2404a5293041dae5c20", "sha256": "baab6e36f15ad10cce86e046e01a7ac9779370102b25ea6068405f12ba114ed7"}, "downloads": -1, "filename": "vgkits-vanguard-0.2.0rc9.tar.gz", "has_sig": false, "md5_digest": "cc3b303ba3b7b2404a5293041dae5c20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3310471, "upload_time": "2018-06-08T11:10:36", "upload_time_iso_8601": "2018-06-08T11:10:36.019025Z", "url": "https://files.pythonhosted.org/packages/df/03/1b02cbffa95282adbfb782457510e0273e0dfc71745a0ac3cd679f849573/vgkits-vanguard-0.2.0rc9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5c14aa771542c8b08fb6ee211d5240f3", "sha256": "c93df2a8169819993624b62f1535f66192439bd119b07ef1775ebb205330d955"}, "downloads": -1, "filename": "vgkits-vanguard-0.2.0rc12.tar.gz", "has_sig": false, "md5_digest": "5c14aa771542c8b08fb6ee211d5240f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4146574, "upload_time": "2019-03-24T23:32:42", "upload_time_iso_8601": "2019-03-24T23:32:42.166663Z", "url": "https://files.pythonhosted.org/packages/b2/e3/507be4be65ee5f437c15a925aca023a2d991c9e1a8374d572c3fc493cdc5/vgkits-vanguard-0.2.0rc12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:36:24 2020"}