{"info": {"author": "Olaf Haag", "author_email": "contact@olafhaag.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "This repository provides *Python3* scripts for manipulating and converting BVH motion capture files.\n\n# Installation\n* To install from PyPi:  \n`pip install bvhtoolbox`\n* To install from github using development mode:  \n`pip install -e git+https://github.com/OlafHaag/bvh-toolbox.git@master#egg=bvhtoolbox`\n* To install latest development version using regular mode (building the package):  \n`pip install https://github.com/OlafHaag/bvh-toolbox/archive/master.zip`\n* The installation creates some console scripts you can use.\n\n# Console scripts\n## Manipulate BVH files\n### Rename joints in bvh files\n* Command: **bvhrenamejoints** \n\n### Remove frames from BVH files\n* Command: **bvhremoveframes**\n\n### Offset joint angles in BVH files\n* Command: **bvhoffsetjointangles**\n* Can be used to additively offset joint angles in the BVH by supplying a csv table containing the mapping of joint names to euler angles.\n  * The angles must be in the same order as the joint's channels in the BVH hierarchy.\n\n## Convert from or to BVH files\n\n### BVH to Cal3D XSF & XAF\n* Command: **bvh2xsf**\n* Command: **bvh2xaf**\n* Converts BVH files to the [Cal3D](https://github.com/mp3butcher/Cal3D/) XML skeleton (XSF) and animation (XAF) file formats.\n* The XAF files rely on the respective skeleton file.\n* XAF files have been tested to work with skeletons that were exported from 3DS Max and Blender.\n* I use the resulting xaf files in [Worldviz' Vizard](https://www.worldviz.com/vizard), so it's only been tested in this context.\n\n### BVH to Panda3D Egg animation file\n* Command: **bvh2egg**\n* Converts BVH files to the [Panda3D](https://panda3d.org/) animation file egg format.\n\n### BVH to CSV tables\n* Command: **bvh2csv**\n* Converts BVH to comma separated values tables.\n* Ouputs one file for hierarchy, one for joint rotations, and one for joint world positions.\n* Use `--hierarchy` to export the respective CSV file.\n* Using only the `--rotation` or the `--position` flag you can output only one of the transform tables.\n* The `--out` parameter only takes a directory path as an argument.\n* With the `--ends` flag the End Sites are included in the *_pos.csv file.\n\n### CSV tables to BVH\n* Command: **csv2bvh**\n* Takes 3 CSV files (hierarchy, rotation, position) previously exported using *bvh2csv* or created otherwise and builds a bvh file from them.\n\nAll converters have a `--scale` parameter taking a float as an argument. You can use it to convert between units for the position and offset values.\n\n# How to run the console batch scripts\n* Open terminal.\n* If you've installed the bvhtoolbox into a conda/virtual environment, you have to activate it first.\n* type `<script_name> -h` (substitute *<script_name>* by one of the commands above) to get more information on the usage.\n\n# Notes\nThis package includes 20tabs' bvh module due to a lack of updates for this module on pypi.org.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/olafhaag/bvh-toolbox", "keywords": "bvh BioVision mocap motion-capture convert animation 3d", "license": "", "maintainer": "", "maintainer_email": "", "name": "bvhtoolbox", "package_url": "https://pypi.org/project/bvhtoolbox/", "platform": "", "project_url": "https://pypi.org/project/bvhtoolbox/", "project_urls": {"Bug Reports": "https://github.com/olafhaag/bvh-toolbox/issues", "Homepage": "https://github.com/olafhaag/bvh-toolbox", "Source": "https://github.com/olafhaag/bvh-toolbox/"}, "release_url": "https://pypi.org/project/bvhtoolbox/0.1.1/", "requires_dist": ["numpy", "transforms3d (>=0.3.1)", "sympy ; extra == 'dev'", "panda3d ; extra == 'dev'", "twine ; extra == 'dev'", "pytest ; extra == 'test'", "hypothesis ; extra == 'test'"], "requires_python": ">=3", "summary": "Python module for reading, manipulating and converting BVH motion capture files.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This repository provides <em>Python3</em> scripts for manipulating and converting BVH motion capture files.</p>\n<h1>Installation</h1>\n<ul>\n<li>To install from PyPi:<br>\n<code>pip install bvhtoolbox</code></li>\n<li>To install from github using development mode:<br>\n<code>pip install -e git+https://github.com/OlafHaag/bvh-toolbox.git@master#egg=bvhtoolbox</code></li>\n<li>To install latest development version using regular mode (building the package):<br>\n<code>pip install https://github.com/OlafHaag/bvh-toolbox/archive/master.zip</code></li>\n<li>The installation creates some console scripts you can use.</li>\n</ul>\n<h1>Console scripts</h1>\n<h2>Manipulate BVH files</h2>\n<h3>Rename joints in bvh files</h3>\n<ul>\n<li>Command: <strong>bvhrenamejoints</strong></li>\n</ul>\n<h3>Remove frames from BVH files</h3>\n<ul>\n<li>Command: <strong>bvhremoveframes</strong></li>\n</ul>\n<h3>Offset joint angles in BVH files</h3>\n<ul>\n<li>Command: <strong>bvhoffsetjointangles</strong></li>\n<li>Can be used to additively offset joint angles in the BVH by supplying a csv table containing the mapping of joint names to euler angles.\n<ul>\n<li>The angles must be in the same order as the joint's channels in the BVH hierarchy.</li>\n</ul>\n</li>\n</ul>\n<h2>Convert from or to BVH files</h2>\n<h3>BVH to Cal3D XSF &amp; XAF</h3>\n<ul>\n<li>Command: <strong>bvh2xsf</strong></li>\n<li>Command: <strong>bvh2xaf</strong></li>\n<li>Converts BVH files to the <a href=\"https://github.com/mp3butcher/Cal3D/\" rel=\"nofollow\">Cal3D</a> XML skeleton (XSF) and animation (XAF) file formats.</li>\n<li>The XAF files rely on the respective skeleton file.</li>\n<li>XAF files have been tested to work with skeletons that were exported from 3DS Max and Blender.</li>\n<li>I use the resulting xaf files in <a href=\"https://www.worldviz.com/vizard\" rel=\"nofollow\">Worldviz' Vizard</a>, so it's only been tested in this context.</li>\n</ul>\n<h3>BVH to Panda3D Egg animation file</h3>\n<ul>\n<li>Command: <strong>bvh2egg</strong></li>\n<li>Converts BVH files to the <a href=\"https://panda3d.org/\" rel=\"nofollow\">Panda3D</a> animation file egg format.</li>\n</ul>\n<h3>BVH to CSV tables</h3>\n<ul>\n<li>Command: <strong>bvh2csv</strong></li>\n<li>Converts BVH to comma separated values tables.</li>\n<li>Ouputs one file for hierarchy, one for joint rotations, and one for joint world positions.</li>\n<li>Use <code>--hierarchy</code> to export the respective CSV file.</li>\n<li>Using only the <code>--rotation</code> or the <code>--position</code> flag you can output only one of the transform tables.</li>\n<li>The <code>--out</code> parameter only takes a directory path as an argument.</li>\n<li>With the <code>--ends</code> flag the End Sites are included in the *_pos.csv file.</li>\n</ul>\n<h3>CSV tables to BVH</h3>\n<ul>\n<li>Command: <strong>csv2bvh</strong></li>\n<li>Takes 3 CSV files (hierarchy, rotation, position) previously exported using <em>bvh2csv</em> or created otherwise and builds a bvh file from them.</li>\n</ul>\n<p>All converters have a <code>--scale</code> parameter taking a float as an argument. You can use it to convert between units for the position and offset values.</p>\n<h1>How to run the console batch scripts</h1>\n<ul>\n<li>Open terminal.</li>\n<li>If you've installed the bvhtoolbox into a conda/virtual environment, you have to activate it first.</li>\n<li>type <code>&lt;script_name&gt; -h</code> (substitute <em>&lt;script_name&gt;</em> by one of the commands above) to get more information on the usage.</li>\n</ul>\n<h1>Notes</h1>\n<p>This package includes 20tabs' bvh module due to a lack of updates for this module on pypi.org.</p>\n\n          </div>"}, "last_serial": 6535004, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "61021888e8816826c8f4ce8ed6e2923e", "sha256": "6961abd7e80ec168f8d848a27d6e5ef198668cb352c99f002b64261443c4429b"}, "downloads": -1, "filename": "bvhtoolbox-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "61021888e8816826c8f4ce8ed6e2923e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3", "size": 49758, "upload_time": "2019-12-09T00:46:32", "upload_time_iso_8601": "2019-12-09T00:46:32.042077Z", "url": "https://files.pythonhosted.org/packages/7f/10/417b8ffccf223eedd6ed23d6aaad69776f29fed4b185bc215f7db8aa60da/bvhtoolbox-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed22d53d1d47c776cb597f8ed1d733f8", "sha256": "68df868e9d0291da1802698cd42b4b66bbf03690ba1ceff00d735f26872502b4"}, "downloads": -1, "filename": "bvhtoolbox-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ed22d53d1d47c776cb597f8ed1d733f8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 112154, "upload_time": "2019-12-09T00:46:34", "upload_time_iso_8601": "2019-12-09T00:46:34.686801Z", "url": "https://files.pythonhosted.org/packages/b4/54/802a48fc9f75e2c1c8cb0c68ff7e29c72b21bc171af561b3e0a04fb2ff0f/bvhtoolbox-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "fb04096f8f8cc3c1064b812640d7e39c", "sha256": "687fd62ee878d28a14b6a0889950c2eb67a93ed11d96602f410ca9dcd4423dab"}, "downloads": -1, "filename": "bvhtoolbox-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fb04096f8f8cc3c1064b812640d7e39c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3", "size": 51581, "upload_time": "2020-01-28T23:02:40", "upload_time_iso_8601": "2020-01-28T23:02:40.722981Z", "url": "https://files.pythonhosted.org/packages/15/6b/10cf4c7417f984736f38dc06d63b4372533dbe0c9934ca8495cace7bdde6/bvhtoolbox-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3bf27022cbe82f99f9f7d631318b7b3b", "sha256": "805215daa4f62369c862145d353d94eb41fac96adc12fb339155b7764d4ed6fc"}, "downloads": -1, "filename": "bvhtoolbox-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3bf27022cbe82f99f9f7d631318b7b3b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 112242, "upload_time": "2020-01-28T23:02:42", "upload_time_iso_8601": "2020-01-28T23:02:42.658852Z", "url": "https://files.pythonhosted.org/packages/6c/b0/649c017521d3c604169a53802fa347c13b8d89bc8d2411fcae67935634fd/bvhtoolbox-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fb04096f8f8cc3c1064b812640d7e39c", "sha256": "687fd62ee878d28a14b6a0889950c2eb67a93ed11d96602f410ca9dcd4423dab"}, "downloads": -1, "filename": "bvhtoolbox-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fb04096f8f8cc3c1064b812640d7e39c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3", "size": 51581, "upload_time": "2020-01-28T23:02:40", "upload_time_iso_8601": "2020-01-28T23:02:40.722981Z", "url": "https://files.pythonhosted.org/packages/15/6b/10cf4c7417f984736f38dc06d63b4372533dbe0c9934ca8495cace7bdde6/bvhtoolbox-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3bf27022cbe82f99f9f7d631318b7b3b", "sha256": "805215daa4f62369c862145d353d94eb41fac96adc12fb339155b7764d4ed6fc"}, "downloads": -1, "filename": "bvhtoolbox-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3bf27022cbe82f99f9f7d631318b7b3b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 112242, "upload_time": "2020-01-28T23:02:42", "upload_time_iso_8601": "2020-01-28T23:02:42.658852Z", "url": "https://files.pythonhosted.org/packages/6c/b0/649c017521d3c604169a53802fa347c13b8d89bc8d2411fcae67935634fd/bvhtoolbox-0.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:54 2020"}