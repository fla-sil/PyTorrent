{"info": {"author": "Carlos Gaete", "author_email": "cdgaete@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Copyright (c) 2019 Carlos Gaete-Morales, Alexander Zerrahn, Wolf-Peter Schill\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\nDescription: # emobpy\n        \n        emobpy is a Python tool that can create battery electric vehicle profiles. Three different time series can be created: Motor electricity consumption time series, grid availability time series and grid electricity demand time series. The electricity consumption time series are created based on mobility statistics.\n        \n        ## Motor electricity consumption time series\n        \n        The motor electricity consumption time series contain the location of a vehicle at each point in time. The locations vary according to the mobility of drivers. Possible locations are at home, workplace, shopping, errands, escort, leisure, or driving. When \"Driving\", the distance travelled is also provided in the time series. The time resolution can be established initially, but in fact, it depends on the available statistics (our examples contains 30 minutes time steps). Two groups of drivers can be distinguished commuters or non-commuters. Commuters perform the same trip to work every weekday and with the same distance home-work-home, in this group can be identified full-time and part-time employed people where the main destination is \"workplace\". While for the non-commuters group, every day a new trip is drawn with different trip purposes. The daily number of trips, the departure time, the trip purpose, and distance travelled are determined based on statistics of mobility surveys. Other considerations can also be set up. For instance, the number of working hours per day, the first and last destination of the day can be established as \"at home\". The \"driving\" condition must always be placed in between of two different locations, that is to say, that a determined destination cannot be followed by another destination in the time series unless a driving option is in between.\n        \n        ## Grid availability time series\n        \n        Grid availability time series can be created. It consists on taking a motor electricity consumption time series and based on the locations, the model assigns charging stations. Different charging stations can be available for a vehicle and they are chosen based on a probability distribution that adds up 100% for each location. The charging stations defined in this tool are \"home\", \"public\", \"maker\", \"workplace\", \"fast\" and \"none\", although more user-defined charging stations can be established. The charging stations have an associated capacity per time interval and \"none\" has zero capacity. Different scenarios of grid availability can be modelled.\n        \n        ## Grid electricity demand time series\n        \n        While a grid availability time series contains at each interval information of the charging stations available, such as the capacity allocated to them. A grid electricity demand time series is the one that indicates the actual consumption of electricity from the grid to charge the battery of a vehicle according to its driving behaviour and grid availability. There are different options available to create a grid electricity demand time series. For example, \"Immediate-Full capacity\" is an option that informs the energy drawn from the grid at a full power rating of a respective charging station until the battery is fully charged, or \"Immediate-Balanced\" option that creates a time series taking into account the duration of a vehicle is connected to a charging station and the energy required to get the battery fully charged, allowing to charge the battery at a lower capacity than the maximum capacity available.\n        \n        ## Instructions\n        \n        This tool has been tested in window 7, Ubuntu 18.04, Ubuntu 19.04 and Suse Linux. It is recomended to install the package in an dedicated Python environment with Python version 3.6 or 3.7.\n        \n        Instalation:\n        \n            pip install emobpy\n        \n        ## Usage\n        \n        Notebooks with examples can be found in https://gitlab.com/diw-evu/emobpy/emobpy_examples\n        \n        Remove library:\n        \n            pip uninstall emobpy\n        \nPlatform: UNKNOWN\nClassifier: Intended Audience :: End Users/Desktop\nClassifier: Intended Audience :: Developers\nClassifier: Intended Audience :: Science/Research\nClassifier: License :: OSI Approved :: BSD License\nClassifier: Operating System :: MacOS :: MacOS X\nClassifier: Operating System :: Microsoft :: Windows\nClassifier: Operating System :: POSIX\nClassifier: Programming Language :: Python\nClassifier: Programming Language :: Python :: 3\nClassifier: Programming Language :: Python :: 3.5\nClassifier: Programming Language :: Python :: 3.6\nClassifier: Programming Language :: Python :: 3.7\nClassifier: Topic :: Scientific/Engineering :: Information Analysis\nClassifier: Topic :: Scientific/Engineering :: Mathematics\nClassifier: Topic :: Scientific/Engineering :: Visualization\nClassifier: Topic :: Scientific/Engineering :: Energy\nClassifier: Topic :: Scientific/Engineering :: Mobility\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/diw-evu/emobpy/emobpy", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "emobpy", "package_url": "https://pypi.org/project/emobpy/", "platform": "", "project_url": "https://pypi.org/project/emobpy/", "project_urls": {"Homepage": "https://gitlab.com/diw-evu/emobpy/emobpy"}, "release_url": "https://pypi.org/project/emobpy/0.1.0/", "requires_dist": ["appdirs", "docopt", "pandas (==0.25.3)", "numpy (==1.18.1)", "numba (==0.48.0)", "plotly (==4.5.0)", "cufflinks (==0.17.0)"], "requires_python": "", "summary": "Time series for battery electric vehicles modeling", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Copyright (c) 2019 Carlos Gaete-Morales, Alexander Zerrahn, Wolf-Peter Schill</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \u201cSoftware\u201d), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.</p>\n<p>Description: # emobpy</p>\n<blockquote>\n<p>emobpy is a Python tool that can create battery electric vehicle profiles. Three different time series can be created: Motor electricity consumption time series, grid availability time series and grid electricity demand time series. The electricity consumption time series are created based on mobility statistics.</p>\n<p>## Motor electricity consumption time series</p>\n<p>The motor electricity consumption time series contain the location of a vehicle at each point in time. The locations vary according to the mobility of drivers. Possible locations are at home, workplace, shopping, errands, escort, leisure, or driving. When \u201cDriving\u201d, the distance travelled is also provided in the time series. The time resolution can be established initially, but in fact, it depends on the available statistics (our examples contains 30 minutes time steps). Two groups of drivers can be distinguished commuters or non-commuters. Commuters perform the same trip to work every weekday and with the same distance home-work-home, in this group can be identified full-time and part-time employed people where the main destination is \u201cworkplace\u201d. While for the non-commuters group, every day a new trip is drawn with different trip purposes. The daily number of trips, the departure time, the trip purpose, and distance travelled are determined based on statistics of mobility surveys. Other considerations can also be set up. For instance, the number of working hours per day, the first and last destination of the day can be established as \u201cat home\u201d. The \u201cdriving\u201d condition must always be placed in between of two different locations, that is to say, that a determined destination cannot be followed by another destination in the time series unless a driving option is in between.</p>\n<p>## Grid availability time series</p>\n<p>Grid availability time series can be created. It consists on taking a motor electricity consumption time series and based on the locations, the model assigns charging stations. Different charging stations can be available for a vehicle and they are chosen based on a probability distribution that adds up 100% for each location. The charging stations defined in this tool are \u201chome\u201d, \u201cpublic\u201d, \u201cmaker\u201d, \u201cworkplace\u201d, \u201cfast\u201d and \u201cnone\u201d, although more user-defined charging stations can be established. The charging stations have an associated capacity per time interval and \u201cnone\u201d has zero capacity. Different scenarios of grid availability can be modelled.</p>\n<p>## Grid electricity demand time series</p>\n<p>While a grid availability time series contains at each interval information of the charging stations available, such as the capacity allocated to them. A grid electricity demand time series is the one that indicates the actual consumption of electricity from the grid to charge the battery of a vehicle according to its driving behaviour and grid availability. There are different options available to create a grid electricity demand time series. For example, \u201cImmediate-Full capacity\u201d is an option that informs the energy drawn from the grid at a full power rating of a respective charging station until the battery is fully charged, or \u201cImmediate-Balanced\u201d option that creates a time series taking into account the duration of a vehicle is connected to a charging station and the energy required to get the battery fully charged, allowing to charge the battery at a lower capacity than the maximum capacity available.</p>\n<p>## Instructions</p>\n<p>This tool has been tested in window 7, Ubuntu 18.04, Ubuntu 19.04 and Suse Linux. It is recomended to install the package in an dedicated Python environment with Python version 3.6 or 3.7.</p>\n<p>Instalation:</p>\n<blockquote>\npip install emobpy</blockquote>\n<p>## Usage</p>\n<p>Notebooks with examples can be found in <a href=\"https://gitlab.com/diw-evu/emobpy/emobpy_examples\" rel=\"nofollow\">https://gitlab.com/diw-evu/emobpy/emobpy_examples</a></p>\n<p>Remove library:</p>\n<blockquote>\npip uninstall emobpy</blockquote>\n</blockquote>\n<p>Platform: UNKNOWN\nClassifier: Intended Audience :: End Users/Desktop\nClassifier: Intended Audience :: Developers\nClassifier: Intended Audience :: Science/Research\nClassifier: License :: OSI Approved :: BSD License\nClassifier: Operating System :: MacOS :: MacOS X\nClassifier: Operating System :: Microsoft :: Windows\nClassifier: Operating System :: POSIX\nClassifier: Programming Language :: Python\nClassifier: Programming Language :: Python :: 3\nClassifier: Programming Language :: Python :: 3.5\nClassifier: Programming Language :: Python :: 3.6\nClassifier: Programming Language :: Python :: 3.7\nClassifier: Topic :: Scientific/Engineering :: Information Analysis\nClassifier: Topic :: Scientific/Engineering :: Mathematics\nClassifier: Topic :: Scientific/Engineering :: Visualization\nClassifier: Topic :: Scientific/Engineering :: Energy\nClassifier: Topic :: Scientific/Engineering :: Mobility</p>\n\n          </div>"}, "last_serial": 6778486, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "bb73f1b395a39d3024b06cfca5554687", "sha256": "58dedd4009df78cc75e13f282d748590777c363da68798ff28179455b28653c9"}, "downloads": -1, "filename": "emobpy-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bb73f1b395a39d3024b06cfca5554687", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23049, "upload_time": "2019-11-28T11:54:49", "upload_time_iso_8601": "2019-11-28T11:54:49.113994Z", "url": "https://files.pythonhosted.org/packages/36/b5/972d0bc8d0d2f7bab8989aa9b168910abbbbdfdf2eea1b2efbce4597a2c7/emobpy-0.0.1-py2.py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "771524360ec560679e6c59b89e3443f9", "sha256": "4399ec1e556842de343a45fc86ff29f9c84428868e0d5c7dbd14f4a4f2feda30"}, "downloads": -1, "filename": "emobpy-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "771524360ec560679e6c59b89e3443f9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25182, "upload_time": "2020-01-14T21:12:52", "upload_time_iso_8601": "2020-01-14T21:12:52.655406Z", "url": "https://files.pythonhosted.org/packages/89/f1/968fede4e8eb095d47c1a9ba7f6b850f032141885ee7d72059e98fa661a9/emobpy-0.0.2-py2.py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "9a7d65120fb2a87435e8eda585a038c9", "sha256": "c6dcece523ca374f0780a91c61bb0cb00544c85cf8d8c02f55ed60150c2b331b"}, "downloads": -1, "filename": "emobpy-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9a7d65120fb2a87435e8eda585a038c9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26815, "upload_time": "2020-02-19T16:13:18", "upload_time_iso_8601": "2020-02-19T16:13:18.955728Z", "url": "https://files.pythonhosted.org/packages/71/85/1c0c6a388b1f3999cf441478172b5e09e297673c75bdf72af5d318d826f1/emobpy-0.0.3-py2.py3-none-any.whl", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "e23c039efaf6384d6578e8470c2d4d04", "sha256": "77260f6997ea0f447fb4e368d8a8c8608a4e466a7d5c6602e13e67662407d56f"}, "downloads": -1, "filename": "emobpy-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e23c039efaf6384d6578e8470c2d4d04", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26625, "upload_time": "2020-03-09T16:54:02", "upload_time_iso_8601": "2020-03-09T16:54:02.982335Z", "url": "https://files.pythonhosted.org/packages/a8/92/398bda5981902595da455778318dd448afbdb6ea396b78dfaafbc41cea25/emobpy-0.1.0-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e23c039efaf6384d6578e8470c2d4d04", "sha256": "77260f6997ea0f447fb4e368d8a8c8608a4e466a7d5c6602e13e67662407d56f"}, "downloads": -1, "filename": "emobpy-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e23c039efaf6384d6578e8470c2d4d04", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26625, "upload_time": "2020-03-09T16:54:02", "upload_time_iso_8601": "2020-03-09T16:54:02.982335Z", "url": "https://files.pythonhosted.org/packages/a8/92/398bda5981902595da455778318dd448afbdb6ea396b78dfaafbc41cea25/emobpy-0.1.0-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:46:35 2020"}