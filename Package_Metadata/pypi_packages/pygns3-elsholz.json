{"info": {"author": "elsholz", "author_email": "maarten@vanderwoord.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries"], "description": "PyGNS3\n======\n\nPython package to interact with `GNS3 <http://gns3.com>`__. Usage\nrequires a single call to initialize the GNS3API object.\n\n::\n\n    $pip install pygns3\n\n    >>> from pygns3 import *\n    >>> GNS3API.load_configuration()\n\nIt leverages the GNS3 built in API and aims to provide some additional\nfunctionality such as custom/bulk interaction with projects and nodes. I\nhave started using GNS3 recently so walking multiple learning curves\nhere. Any ideas / suggestions / constructive criticism is more than\nwelcome.\n\nFor now it is Python 3.6 (I think) only. It is what I use, and it is way\ntoo early to start thinking about compatibility with older versions.\n\nI am using the `API\ndocumentation <https://gns3-server.readthedocs.io/en/latest/endpoints.html#controller-api-endpoints>`__\nas a starting point, and implement the Controller endpoints only (for\nnow). The implemented functionality is shown in an `example Jupyter\nNotebook <https://github.com/mvdwoord/PyGNS3/blob/master/Example.ipynb>`__.\n\n`The package is available on\nPyPi <https://pypi.python.org/pypi/PyGNS3>`__ but right now I am still\ndiscovering and changing a lot. Things change and break fast so Github\nmay be more up to date.\n\nClasses\n-------\n\nA number of classes are available once the GNS3API class has been\ninitialized.\n\nGNS3Controller\n~~~~~~~~~~~~~~\n\nis the main component interacting with GNS3. After a successful\nconnection the controller object holds some basic properties and allows\nfor further inspection and interaction with GNS3.\n\n::\n\n    >>> print(GNS3Controller())\n\n    GNS3 Controller API endpoint\n        Host    http://127.0.0.1:3080\n        Version 2.0.3\n        Running 2 Computes\n\nOther\n~~~~~\n\nfor now, check the Example jupyter notebook..\n\nWhat is the purpose?\n--------------------\n\nAs I am learning and working with GNS3 I'm not sure what exactly this\nshould lead to, but the first thing that comes to mind is parallel\ncommands towards nodes, or other (bulk) manipulations. Not sure what\nother scenario's will look like but I guess being able to interact with\nGNS3 from python could come in handy here or there.\n\nIssues\n------\n\nAt the moment mostly my lack of a complete understanding and familiarity\nwith GNS3. There are some (perceived) inconsistencies in the underlying\nAPI. Once I have implemented all (or most) classes I will dive deeper\nand see if I can clarify.\n\nNext steps\n----------\n\nImplement some sub components and methods on them. Then add some custom\nfunctions which operate on multiple nodes or provide command line\nvisualization. Oh and telnet interaction of course. Perhaps some\nconfiguration diffing or synchronization? who knows.\n\nPlus also perhaps... improvements, error handling, docstrings etc etc\netc... and other yak shaving.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/elsholz/PyGNS3", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pygns3-elsholz", "package_url": "https://pypi.org/project/pygns3-elsholz/", "platform": "", "project_url": "https://pypi.org/project/pygns3-elsholz/", "project_urls": {"Homepage": "https://github.com/elsholz/PyGNS3"}, "release_url": "https://pypi.org/project/pygns3-elsholz/3.11/", "requires_dist": null, "requires_python": "", "summary": "Python implementation of the GNS3 API. Fork by elsholz from mvdwoord/PyGNS3", "version": "3.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python package to interact with <a href=\"http://gns3.com\" rel=\"nofollow\">GNS3</a>. Usage\nrequires a single call to initialize the GNS3API object.</p>\n<pre>$pip install pygns3\n\n&gt;&gt;&gt; from pygns3 import *\n&gt;&gt;&gt; GNS3API.load_configuration()\n</pre>\n<p>It leverages the GNS3 built in API and aims to provide some additional\nfunctionality such as custom/bulk interaction with projects and nodes. I\nhave started using GNS3 recently so walking multiple learning curves\nhere. Any ideas / suggestions / constructive criticism is more than\nwelcome.</p>\n<p>For now it is Python 3.6 (I think) only. It is what I use, and it is way\ntoo early to start thinking about compatibility with older versions.</p>\n<p>I am using the <a href=\"https://gns3-server.readthedocs.io/en/latest/endpoints.html#controller-api-endpoints\" rel=\"nofollow\">API\ndocumentation</a>\nas a starting point, and implement the Controller endpoints only (for\nnow). The implemented functionality is shown in an <a href=\"https://github.com/mvdwoord/PyGNS3/blob/master/Example.ipynb\" rel=\"nofollow\">example Jupyter\nNotebook</a>.</p>\n<p><a href=\"https://pypi.python.org/pypi/PyGNS3\" rel=\"nofollow\">The package is available on\nPyPi</a> but right now I am still\ndiscovering and changing a lot. Things change and break fast so Github\nmay be more up to date.</p>\n<div id=\"classes\">\n<h2>Classes</h2>\n<p>A number of classes are available once the GNS3API class has been\ninitialized.</p>\n<div id=\"gns3controller\">\n<h3>GNS3Controller</h3>\n<p>is the main component interacting with GNS3. After a successful\nconnection the controller object holds some basic properties and allows\nfor further inspection and interaction with GNS3.</p>\n<pre>&gt;&gt;&gt; print(GNS3Controller())\n\nGNS3 Controller API endpoint\n    Host    http://127.0.0.1:3080\n    Version 2.0.3\n    Running 2 Computes\n</pre>\n</div>\n<div id=\"other\">\n<h3>Other</h3>\n<p>for now, check the Example jupyter notebook..</p>\n</div>\n</div>\n<div id=\"what-is-the-purpose\">\n<h2>What is the purpose?</h2>\n<p>As I am learning and working with GNS3 I\u2019m not sure what exactly this\nshould lead to, but the first thing that comes to mind is parallel\ncommands towards nodes, or other (bulk) manipulations. Not sure what\nother scenario\u2019s will look like but I guess being able to interact with\nGNS3 from python could come in handy here or there.</p>\n</div>\n<div id=\"issues\">\n<h2>Issues</h2>\n<p>At the moment mostly my lack of a complete understanding and familiarity\nwith GNS3. There are some (perceived) inconsistencies in the underlying\nAPI. Once I have implemented all (or most) classes I will dive deeper\nand see if I can clarify.</p>\n</div>\n<div id=\"next-steps\">\n<h2>Next steps</h2>\n<p>Implement some sub components and methods on them. Then add some custom\nfunctions which operate on multiple nodes or provide command line\nvisualization. Oh and telnet interaction of course. Perhaps some\nconfiguration diffing or synchronization? who knows.</p>\n<p>Plus also perhaps\u2026 improvements, error handling, docstrings etc etc\netc\u2026 and other yak shaving.</p>\n</div>\n\n          </div>"}, "last_serial": 5707932, "releases": {"3.11": [{"comment_text": "", "digests": {"md5": "2d6a1a81764afbefad56ba9d22f0dba9", "sha256": "83c224f5bcfd790b38ed00b7071a6a185405b2a70441fe810bad20490145c3f1"}, "downloads": -1, "filename": "pygns3-elsholz-3.11.tar.gz", "has_sig": false, "md5_digest": "2d6a1a81764afbefad56ba9d22f0dba9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11737, "upload_time": "2019-08-21T08:44:42", "upload_time_iso_8601": "2019-08-21T08:44:42.032613Z", "url": "https://files.pythonhosted.org/packages/41/7d/7441cfb6fa2d41c4bbd6750d6671f6769c0c772c563404937bdaba030686/pygns3-elsholz-3.11.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2d6a1a81764afbefad56ba9d22f0dba9", "sha256": "83c224f5bcfd790b38ed00b7071a6a185405b2a70441fe810bad20490145c3f1"}, "downloads": -1, "filename": "pygns3-elsholz-3.11.tar.gz", "has_sig": false, "md5_digest": "2d6a1a81764afbefad56ba9d22f0dba9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11737, "upload_time": "2019-08-21T08:44:42", "upload_time_iso_8601": "2019-08-21T08:44:42.032613Z", "url": "https://files.pythonhosted.org/packages/41/7d/7441cfb6fa2d41c4bbd6750d6671f6769c0c772c563404937bdaba030686/pygns3-elsholz-3.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:49 2020"}