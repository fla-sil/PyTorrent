{"info": {"author": "Chad DeRosier", "author_email": "chad.derosier@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8"], "description": "Brilliant Imagery\n=================\n\nA DNG based photo editing package. It can do things such as:\n\n* Decode and render lossless JPG images.\n* Encode lessless JPG images.\n* Render DNG images.\n* Edit DNG metadata.\n* Ramp Adobe Lightroom edits for image sequences.\n* Stabilize shaky image sequences using the Adobe Lightroom crop property.\n\nDocumentation\n-------------\n\nDocs can be found at `brilliantimagery.org/docs <https://www.brilliantimagery.org/docs/>`_\n\nInstallation\n------------\n\nFrom PyPI\n~~~~~~~~~\n\n::\n\n$ pip install brilliantimagery\n\nFrom Source\n~~~~~~~~~~~\n\nThe `Poetry <https://python-poetry.org/>`_ package and dependency manager is used by BrilliantImagery so install it if you haven't already done so. Some of the project files must be compiled. This accomplished within the below instructions.\n\nClone the `git repo <https://github.com/brilliantimagery/brilliantimagery.git>`_.\n\nFrom within the top ``/brilliantimagery`` folder, the one that contains the ``pyproject.toml`` file, install BrilliantImagery:\n\n::\n\n$ poetry install\n\n\nDevelopment\n-----------\n\nTesting\n~~~~~~~\n\nRunning the included tests can be used as a way to ensure that the package has been properly installed.\n\n**Running Tests**\n\nTo run all of the tests:\n\n::\n\n$ poetry run pytest\n\n**Coverage Reports**\n\nTerminal coverage reports can be generated:\n\n::\n\n$ poetry run pytest --cov=brilliantimagery\n\nHTML coverage reports can be generated when tests are run:\n\n::\n\n$ poetry run pytest --cov=brilliantimagery --cov-report=html\n\nDocs\n~~~~\n\nAfter making changes to the docs, to update them, assuming ``./brilliantiamgery`` is the current working directory, activate a poetry shell:\n\n::\n\n$ poetry shell\n\nChange the working directory to the ``/docs`` folder:\n\n::\n\n$ cd docs\n\nAnd then run clean and make the html docs:\n\n::\n\n$ make clean && make html\n\nChangelog\n---------\n\n* 0.2.2: Fixed version bug.\n\n* 0.2.1: Fixed build bug and a test.\n\n* 0.2.0: Enabled saving and loading projects as well as reusing offsets and brightnesses between runs.\n\n* 0.1.1: Fixed bug affecting sequences where multiple images have the same stored capture time.\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.brilliantimagery.org", "keywords": "", "license": "GPL-3.0-only", "maintainer": "", "maintainer_email": "", "name": "brilliantimagery", "package_url": "https://pypi.org/project/brilliantimagery/", "platform": "", "project_url": "https://pypi.org/project/brilliantimagery/", "project_urls": {"Homepage": "https://www.brilliantimagery.org", "Repository": "https://github.com/brilliantimagery/brilliantimagery"}, "release_url": "https://pypi.org/project/brilliantimagery/0.2.2/", "requires_dist": ["cython (>=0.29.15,<0.30.0)", "numpy (>=1.18.1,<2.0.0)", "opencv-contrib-python (>=4.1.2,<5.0.0)", "tqdm (>=4.41.1,<5.0.0)", "toml (>=0.10.0,<0.11.0)"], "requires_python": ">=3.8.0,<4.0.0", "summary": "A python DNG editing package.", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A DNG based photo editing package. It can do things such as:</p>\n<ul>\n<li>Decode and render lossless JPG images.</li>\n<li>Encode lessless JPG images.</li>\n<li>Render DNG images.</li>\n<li>Edit DNG metadata.</li>\n<li>Ramp Adobe Lightroom edits for image sequences.</li>\n<li>Stabilize shaky image sequences using the Adobe Lightroom crop property.</li>\n</ul>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Docs can be found at <a href=\"https://www.brilliantimagery.org/docs/\" rel=\"nofollow\">brilliantimagery.org/docs</a></p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"from-pypi\">\n<h3>From PyPI</h3>\n<pre>$ pip install brilliantimagery\n</pre>\n</div>\n<div id=\"from-source\">\n<h3>From Source</h3>\n<p>The <a href=\"https://python-poetry.org/\" rel=\"nofollow\">Poetry</a> package and dependency manager is used by BrilliantImagery so install it if you haven\u2019t already done so. Some of the project files must be compiled. This accomplished within the below instructions.</p>\n<p>Clone the <a href=\"https://github.com/brilliantimagery/brilliantimagery.git\" rel=\"nofollow\">git repo</a>.</p>\n<p>From within the top <tt>/brilliantimagery</tt> folder, the one that contains the <tt>pyproject.toml</tt> file, install BrilliantImagery:</p>\n<pre>$ poetry install\n</pre>\n</div>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<div id=\"testing\">\n<h3>Testing</h3>\n<p>Running the included tests can be used as a way to ensure that the package has been properly installed.</p>\n<p><strong>Running Tests</strong></p>\n<p>To run all of the tests:</p>\n<pre>$ poetry run pytest\n</pre>\n<p><strong>Coverage Reports</strong></p>\n<p>Terminal coverage reports can be generated:</p>\n<pre>$ poetry run pytest --cov=brilliantimagery\n</pre>\n<p>HTML coverage reports can be generated when tests are run:</p>\n<pre>$ poetry run pytest --cov=brilliantimagery --cov-report=html\n</pre>\n</div>\n<div id=\"docs\">\n<h3>Docs</h3>\n<p>After making changes to the docs, to update them, assuming <tt>./brilliantiamgery</tt> is the current working directory, activate a poetry shell:</p>\n<pre>$ poetry shell\n</pre>\n<p>Change the working directory to the <tt>/docs</tt> folder:</p>\n<pre>$ cd docs\n</pre>\n<p>And then run clean and make the html docs:</p>\n<pre>$ make clean &amp;&amp; make html\n</pre>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<ul>\n<li>0.2.2: Fixed version bug.</li>\n<li>0.2.1: Fixed build bug and a test.</li>\n<li>0.2.0: Enabled saving and loading projects as well as reusing offsets and brightnesses between runs.</li>\n<li>0.1.1: Fixed bug affecting sequences where multiple images have the same stored capture time.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6678990, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "086b4637d41599a85794ba63fcc17071", "sha256": "ed013c1536235f23aee2d47ca49693d7b7bc3f0a07a1ced8053c14e5e98f9d28"}, "downloads": -1, "filename": "brilliantimagery-0.1.0-cp38-cp38m-win32.whl", "has_sig": false, "md5_digest": "086b4637d41599a85794ba63fcc17071", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.8,<4.0", "size": 1204832, "upload_time": "2020-01-20T20:32:34", "upload_time_iso_8601": "2020-01-20T20:32:34.342759Z", "url": "https://files.pythonhosted.org/packages/94/6f/fe7bf6809971957661be2c5a0d5da3ea516bfe81136c37ed725736b38525/brilliantimagery-0.1.0-cp38-cp38m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a5a50d8efccf363778dfe90304dd7d5", "sha256": "fbe20085b17f9abcd9812db7e4b73fec5abfa910ff48789bfeaa8195219586b8"}, "downloads": -1, "filename": "brilliantimagery-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4a5a50d8efccf363778dfe90304dd7d5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 449130, "upload_time": "2020-01-20T20:32:52", "upload_time_iso_8601": "2020-01-20T20:32:52.653705Z", "url": "https://files.pythonhosted.org/packages/59/57/89bc78f856a5c935ec8d13fb1e701c5e89ca7cb7e513af883bf79239334f/brilliantimagery-0.1.0.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e8f57a8fe17d70346f90284b8b40f83", "sha256": "77a5e3fb60abd8727ea236c68a28a1bb1710f0732b580de0ed340c2bbfbf7c87"}, "downloads": -1, "filename": "brilliantimagery1-0.1.0-cp38-cp38m-win32.whl", "has_sig": false, "md5_digest": "3e8f57a8fe17d70346f90284b8b40f83", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.8,<4.0", "size": 1204799, "upload_time": "2020-01-20T20:32:47", "upload_time_iso_8601": "2020-01-20T20:32:47.142166Z", "url": "https://files.pythonhosted.org/packages/19/93/3bdcb5c68ffbc51c7cf5180481e4b2aa03937f78ada3095e341352e7802b/brilliantimagery1-0.1.0-cp38-cp38m-win32.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "16a3fa6baab016137a18c5ab8bfeba67", "sha256": "b5b26e51451983434b51bd785d63d65d4de000f2583dc98d444221991ddc7873"}, "downloads": -1, "filename": "brilliantimagery-0.1.1-cp38-cp38m-win32.whl", "has_sig": false, "md5_digest": "16a3fa6baab016137a18c5ab8bfeba67", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.8,<4.0", "size": 1205247, "upload_time": "2020-01-25T20:27:01", "upload_time_iso_8601": "2020-01-25T20:27:01.015665Z", "url": "https://files.pythonhosted.org/packages/5b/d6/17127656b882f5c77fad89c2a68270f35d0b9b19111eecd0ec073b908c1f/brilliantimagery-0.1.1-cp38-cp38m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "780c7f2f9b092cc4ea35f438a700d8ce", "sha256": "1ea926a34a0f79dd0ade8ecee33f53eec59ed375b7eea3ecda0e126501f0ea7f"}, "downloads": -1, "filename": "brilliantimagery-0.1.1.tar.gz", "has_sig": false, "md5_digest": "780c7f2f9b092cc4ea35f438a700d8ce", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 449293, "upload_time": "2020-01-25T20:27:07", "upload_time_iso_8601": "2020-01-25T20:27:07.199657Z", "url": "https://files.pythonhosted.org/packages/21/2e/dbc7011c21059f7cb945c78f5af57bff1d5fdbf03967131f66022504bef7/brilliantimagery-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "4b37c3db52c8ff3d028b4f390350de65", "sha256": "a07e5b0d36e01529d5d5439c812d7685f93968964be9583dfb3d8d6a269ffcb7"}, "downloads": -1, "filename": "brilliantimagery-0.2.0-cp38-cp38m-win32.whl", "has_sig": false, "md5_digest": "4b37c3db52c8ff3d028b4f390350de65", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.8,<4.0", "size": 1206840, "upload_time": "2020-01-31T03:09:06", "upload_time_iso_8601": "2020-01-31T03:09:06.815954Z", "url": "https://files.pythonhosted.org/packages/c5/12/865ef833694c8bf4baac541639e3585883e5411bbbe9e3a70e74b2b102ed/brilliantimagery-0.2.0-cp38-cp38m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8460541556c8a5781c58bae97d748f53", "sha256": "bcc7bf588219f1f118fb320bbfb36814be6ec43d77444d307076b7c386c8a54e"}, "downloads": -1, "filename": "brilliantimagery-0.2.0-cp38-cp38m-win_amd64.whl", "has_sig": false, "md5_digest": "8460541556c8a5781c58bae97d748f53", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.8,<4.0", "size": 1206966, "upload_time": "2020-02-19T18:53:42", "upload_time_iso_8601": "2020-02-19T18:53:42.431742Z", "url": "https://files.pythonhosted.org/packages/ef/89/7edfcc86e19bb443d6528812f35e99fd921d1f300582159fc10b542bedf6/brilliantimagery-0.2.0-cp38-cp38m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "10463dbc7dc5f20bb947e4b519a48439", "sha256": "cc12362b4afd52dd48d36ff9a972273680c4ef7fb027838ed1d32474f2300ca5"}, "downloads": -1, "filename": "brilliantimagery-0.2.0.tar.gz", "has_sig": false, "md5_digest": "10463dbc7dc5f20bb947e4b519a48439", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 449996, "upload_time": "2020-01-31T03:09:12", "upload_time_iso_8601": "2020-01-31T03:09:12.829141Z", "url": "https://files.pythonhosted.org/packages/72/13/327ed0ee5e4e426ef4f2af6507af492aab883ecc2085c0ed4d89a49c54b7/brilliantimagery-0.2.0.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "2614ab900a601a12060c6829bba2c407", "sha256": "033a40b6d568b91c268980b1fd7dac4b9d1dde57237a0bcbe9da8655cb309338"}, "downloads": -1, "filename": "brilliantimagery-0.2.2-cp38-cp38m-win_amd64.whl", "has_sig": false, "md5_digest": "2614ab900a601a12060c6829bba2c407", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.8.0,<4.0.0", "size": 1281018, "upload_time": "2020-02-22T01:20:22", "upload_time_iso_8601": "2020-02-22T01:20:22.138080Z", "url": "https://files.pythonhosted.org/packages/d2/10/96da01ed2208db9ccc8087e85f78013cd7a927dddfa3d78c6b224af217f5/brilliantimagery-0.2.2-cp38-cp38m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "529e645a46ab6ec1849df781b1f390e9", "sha256": "6bde13db1f08e891fd46912ba36d168a317ffad4217e196789dbd05a2e639edf"}, "downloads": -1, "filename": "brilliantimagery-0.2.2.tar.gz", "has_sig": false, "md5_digest": "529e645a46ab6ec1849df781b1f390e9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8.0,<4.0.0", "size": 450806, "upload_time": "2020-02-22T01:20:27", "upload_time_iso_8601": "2020-02-22T01:20:27.975466Z", "url": "https://files.pythonhosted.org/packages/f8/11/01c6481aa6e16aa3e5e9508e530bd459974b62c29ac778732e72934405b0/brilliantimagery-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2614ab900a601a12060c6829bba2c407", "sha256": "033a40b6d568b91c268980b1fd7dac4b9d1dde57237a0bcbe9da8655cb309338"}, "downloads": -1, "filename": "brilliantimagery-0.2.2-cp38-cp38m-win_amd64.whl", "has_sig": false, "md5_digest": "2614ab900a601a12060c6829bba2c407", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.8.0,<4.0.0", "size": 1281018, "upload_time": "2020-02-22T01:20:22", "upload_time_iso_8601": "2020-02-22T01:20:22.138080Z", "url": "https://files.pythonhosted.org/packages/d2/10/96da01ed2208db9ccc8087e85f78013cd7a927dddfa3d78c6b224af217f5/brilliantimagery-0.2.2-cp38-cp38m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "529e645a46ab6ec1849df781b1f390e9", "sha256": "6bde13db1f08e891fd46912ba36d168a317ffad4217e196789dbd05a2e639edf"}, "downloads": -1, "filename": "brilliantimagery-0.2.2.tar.gz", "has_sig": false, "md5_digest": "529e645a46ab6ec1849df781b1f390e9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8.0,<4.0.0", "size": 450806, "upload_time": "2020-02-22T01:20:27", "upload_time_iso_8601": "2020-02-22T01:20:27.975466Z", "url": "https://files.pythonhosted.org/packages/f8/11/01c6481aa6e16aa3e5e9508e530bd459974b62c29ac778732e72934405b0/brilliantimagery-0.2.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:18 2020"}