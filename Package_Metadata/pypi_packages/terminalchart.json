{"info": {"author": "Muhammad Junaid Raza", "author_email": "strawberriesfrozen@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# TerminalChart\nget charts on terminal\nIt will take x and y values as an input and output a chart on the commandline\nor to a file.\noptional arguments:\n  -h, --help            show this help message and exit\n  -t TERMINAL TERMINAL, --terminal TERMINAL TERMINAL\n                        append x and y values with the command if values are\n                        short. Like -t '1,2,3' '3,2,3' or like -t '1 2 3' '3 2\n                        3'\n  -f FILE, --file FILE  add values in a file. like x: 1 2 3, y:3 2 3 or like\n                        x: 1,2,3, y:3,2,3 and pass the input like: -f\n                        input_file, recommended for large set of values\n  -c CHARACTER, --character CHARACTER\n                        pass the character you want to be displayed on chart,\n                        will default to %& if none given\n  -o OUTPUT, --output OUTPUT\n                        where you want your output to be, -o t for terminal,\n                        -o output_file for file\n\n## Installation\n~~~\npip3 install terminalchart\n~~~\n\n## Usage\n### from commandline\n~~~\npython3 -m terminalchart -f file.txt -o output\n~~~\nwith character\n~~~\npython3 -m terminalchart -f file.txt -o t -c 'c'\n~~~\n\n### from within python\n~~~\nfrom teminalchart import terminalchart as tc\ntc(['-f', 'file.txt', '-o', 'output1'])\ntc(['-f', 'file.txt', '-o', 'output1', '-c', 'c'])\ntc(['-f', 'file.txt', '-o', 't'])\ntc(['-f', 'file.txt', '-o', 't', '-c', 'c'])\n~~~\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/frozenstrawberries/Python/tree/master/terminalchart", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "terminalchart", "package_url": "https://pypi.org/project/terminalchart/", "platform": "", "project_url": "https://pypi.org/project/terminalchart/", "project_urls": {"Homepage": "https://github.com/frozenstrawberries/Python/tree/master/terminalchart"}, "release_url": "https://pypi.org/project/terminalchart/1.0.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Make chart on commanline interface.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>TerminalChart</h1>\n<p>get charts on terminal\nIt will take x and y values as an input and output a chart on the commandline\nor to a file.\noptional arguments:\n-h, --help            show this help message and exit\n-t TERMINAL TERMINAL, --terminal TERMINAL TERMINAL\nappend x and y values with the command if values are\nshort. Like -t '1,2,3' '3,2,3' or like -t '1 2 3' '3 2\n3'\n-f FILE, --file FILE  add values in a file. like x: 1 2 3, y:3 2 3 or like\nx: 1,2,3, y:3,2,3 and pass the input like: -f\ninput_file, recommended for large set of values\n-c CHARACTER, --character CHARACTER\npass the character you want to be displayed on chart,\nwill default to %&amp; if none given\n-o OUTPUT, --output OUTPUT\nwhere you want your output to be, -o t for terminal,\n-o output_file for file</p>\n<h2>Installation</h2>\n<pre><code>pip3 install terminalchart\n</code></pre>\n<h2>Usage</h2>\n<h3>from commandline</h3>\n<pre><code>python3 -m terminalchart -f file.txt -o output\n</code></pre>\n<p>with character</p>\n<pre><code>python3 -m terminalchart -f file.txt -o t -c 'c'\n</code></pre>\n<h3>from within python</h3>\n<pre><code>from teminalchart import terminalchart as tc\ntc(['-f', 'file.txt', '-o', 'output1'])\ntc(['-f', 'file.txt', '-o', 'output1', '-c', 'c'])\ntc(['-f', 'file.txt', '-o', 't'])\ntc(['-f', 'file.txt', '-o', 't', '-c', 'c'])\n</code></pre>\n\n          </div>"}, "last_serial": 6875208, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "b9b0d31e694d66321b7ff5360e8ce623", "sha256": "819e4e84a645d9e11feb5d9a04dacdbb84ae2b72dd0231588a42165fdfa084b5"}, "downloads": -1, "filename": "terminalchart-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b9b0d31e694d66321b7ff5360e8ce623", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4598, "upload_time": "2020-03-24T19:16:59", "upload_time_iso_8601": "2020-03-24T19:16:59.620943Z", "url": "https://files.pythonhosted.org/packages/a4/41/0dc108feac5467efdf7913bbf8d01332469a988664b337a08ba7cfe44776/terminalchart-1.0.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b9b0d31e694d66321b7ff5360e8ce623", "sha256": "819e4e84a645d9e11feb5d9a04dacdbb84ae2b72dd0231588a42165fdfa084b5"}, "downloads": -1, "filename": "terminalchart-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b9b0d31e694d66321b7ff5360e8ce623", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4598, "upload_time": "2020-03-24T19:16:59", "upload_time_iso_8601": "2020-03-24T19:16:59.620943Z", "url": "https://files.pythonhosted.org/packages/a4/41/0dc108feac5467efdf7913bbf8d01332469a988664b337a08ba7cfe44776/terminalchart-1.0.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:55:56 2020"}