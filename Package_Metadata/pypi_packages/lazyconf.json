{"info": {"author": "Fareed Dudhia", "author_email": "fareeddudhia@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "|Build Status| |Coverage Status|\n\nlazyconf\n========\n\nlazyconf is an insultingly simple tool for configuring python\napplications.\n\nDependencies\n------------\n\n-  Python 2.7\n\nUsage\n-----\n\nThe basic idea is that you run ``lazyconf configure`` in your\n**project** directory:\n\n::\n\n    lazyconf configure\n\nFollow the onscreen instructions to do the initial configuration. This\ndoes the following:\n\n-  Creates a ``.lazy/`` directory inside the current directory.\n-  Generates a schema file (``.lazy/lazy.schema.json``), and a data file\n   (``.lazy/lazy.json``).\n-  Creates a ``.gitignore`` file inside ``.lazy/`` so that your\n   configured settings (which may contain sensitive information) are\n   never committed to git.\n\nYou are then safe to commit the .lazy folder to git, which will not\ncontain any sensitive information. The next thing to do is update your\nschema file with all of the settings that you want to include in your\nconfiguration.\n\nSchema Files\n------------\n\nThe schema file located in ``.lazy/lazy.schema.json`` is the way\nlazyconf knows which questions to ask you, and what kind of answers to\nexpect. The schema file follows the following format:\n\n::\n\n    ```\n    {\n        \"example_section\" : {\n            \"example_option\" : \"\",\n            \"string_with_default\" : \"default\",\n            \"example_int\" : 5,\n            \"example_bool\" : false,\n            \"example_select\" : \"\"\n        },\n        \n        \"example_optional_section\" : {\n            \"_enabled\":false,\n            \"optional_option\" : \"foobar\"\n        },\n\n        \"_internal\": {\n            \"labels\": {\n                \"example_section\" : \"Example Section Label\",\n                \"example_section.example_int\" : \"Example suboption label\"\n            }\n            \n            \"selects\": {\n                \"example_section.exmple_select\" : {\n                    \"option1\" : \"value1\",\n                    \"option2\" : \"value2\",\n                    \"option3\" : \"value3\"\n                }\n            }   \n        }   \n    }\n    ```\n\nSections\n~~~~~~~~\n\nAll options to configure are held within sections. A section is a JSON\nobject where the key is the name of the section. In the above example,\nthere are two sections: ``example_section`` and\n``example_optional_section``.\n\nOptional Sections\n^^^^^^^^^^^^^^^^^\n\nTo make a section optional, include a key/value pair inside the section\nwith the key ``\"_enabled\"``, and a default boolean value. This will let\nthe user skip over that section if it is not necessary to be configured.\n\n``\"_internal\"``\n~~~~~~~~~~~~~~~\n\n``\"_internal\"`` is a JSON object that contains the following two JSON\nobjects:\n\n-  ``\"labels\"``: This object consists of key/value pairs which define\n   labels to show the user running the configuration. For example, if\n   you had a section called ``db``, and a string in that section called\n   ``user``, you would use ``\"db.user\" : \"Database User\"`` to assign the\n   label 'Database User' to that string.\n\n-  ``\"selects\"``: This object consists of several objects which define\n   'selects', i.e. a way for the user to only be able to choose from a\n   list of predetermined values. For example, if you had a section\n   called ``db``, and a string in that section called ``engine``, you\n   could use the following object to allow the user to select from a\n   list of values relating to the database engine you might happen to be\n   using:\n\n   ::\n\n       \"db.engine\": {\n           \"postgres\": \"django.db.backends.postgresql_psycopg2\", \n           \"mysql\": \"django.db.backends.mysql\"\n       }\n\nKeywords\n~~~~~~~~\n\n``\"_internal\"`` and ``\"_enabled\"`` are keywords and should not be used\nas option names.\n\nUsing the data\n--------------\n\nTo use the configuration generated by lazyconf, you can either use the\ncommand line tool ``lazyconf``, i.e.\n\n::\n\n    lazyconf get -k db.user\n    >fareed\n\nOr, you can include it in a Python file, and use the 'load' function to\nload any existing configuration:\n\n::\n\n    >>> import lazyconf\n    >>> l = lazyconf.Lazyconf().load()\n    >>> l.get('db.engine')\n    'django.db.backends.postgresql_psycopg2'\n\nIf the python file loading lazyconf is not in the same folder as\n``.lazy/``, you can point it at ``.lazy/`` manually:\n\n::\n\n    >>> import lazyconf\n    >>> l = lazyconf.Lazyconf().load('home/fareed/.lazy/')\n    >>> l.get('db.engine')\n    'django.db.backends.postgresql_psycopg2'\n\n|Bitdeli badge|\n\n.. |Build Status| image:: https://travis-ci.org/fmd/lazyconf.png?branch=master\n   :target: https://travis-ci.org/fmd/lazyconf\n.. |Coverage Status| image:: https://coveralls.io/repos/fmd/lazyconf/badge.png?branch=master\n   :target: https://coveralls.io/r/fmd/lazyconf?branch=master\n.. |Bitdeli badge| image:: https://d2weczhvl823v0.cloudfront.net/fmd/lazyconf/trend.png\n   :target:", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.github.com/fmd/lazyconf", "keywords": null, "license": "LICENSE.rst", "maintainer": null, "maintainer_email": null, "name": "lazyconf", "package_url": "https://pypi.org/project/lazyconf/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/lazyconf/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://www.github.com/fmd/lazyconf"}, "release_url": "https://pypi.org/project/lazyconf/0.5.5/", "requires_dist": null, "requires_python": null, "summary": "Insultingly simple configuration for Python 2.7 applications.", "version": "0.5.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            |Build Status| |Coverage Status|<br><br>lazyconf<br>========<br><br>lazyconf is an insultingly simple tool for configuring python<br>applications.<br><br>Dependencies<br>------------<br><br>-  Python 2.7<br><br>Usage<br>-----<br><br>The basic idea is that you run ``lazyconf configure`` in your<br>**project** directory:<br><br>::<br><br>    lazyconf configure<br><br>Follow the onscreen instructions to do the initial configuration. This<br>does the following:<br><br>-  Creates a ``.lazy/`` directory inside the current directory.<br>-  Generates a schema file (``.lazy/lazy.schema.json``), and a data file<br>   (``.lazy/lazy.json``).<br>-  Creates a ``.gitignore`` file inside ``.lazy/`` so that your<br>   configured settings (which may contain sensitive information) are<br>   never committed to git.<br><br>You are then safe to commit the .lazy folder to git, which will not<br>contain any sensitive information. The next thing to do is update your<br>schema file with all of the settings that you want to include in your<br>configuration.<br><br>Schema Files<br>------------<br><br>The schema file located in ``.lazy/lazy.schema.json`` is the way<br>lazyconf knows which questions to ask you, and what kind of answers to<br>expect. The schema file follows the following format:<br><br>::<br><br>    ```<br>    {<br>        \"example_section\" : {<br>            \"example_option\" : \"\",<br>            \"string_with_default\" : \"default\",<br>            \"example_int\" : 5,<br>            \"example_bool\" : false,<br>            \"example_select\" : \"\"<br>        },<br>        <br>        \"example_optional_section\" : {<br>            \"_enabled\":false,<br>            \"optional_option\" : \"foobar\"<br>        },<br><br>        \"_internal\": {<br>            \"labels\": {<br>                \"example_section\" : \"Example Section Label\",<br>                \"example_section.example_int\" : \"Example suboption label\"<br>            }<br>            <br>            \"selects\": {<br>                \"example_section.exmple_select\" : {<br>                    \"option1\" : \"value1\",<br>                    \"option2\" : \"value2\",<br>                    \"option3\" : \"value3\"<br>                }<br>            }   <br>        }   <br>    }<br>    ```<br><br>Sections<br>~~~~~~~~<br><br>All options to configure are held within sections. A section is a JSON<br>object where the key is the name of the section. In the above example,<br>there are two sections: ``example_section`` and<br>``example_optional_section``.<br><br>Optional Sections<br>^^^^^^^^^^^^^^^^^<br><br>To make a section optional, include a key/value pair inside the section<br>with the key ``\"_enabled\"``, and a default boolean value. This will let<br>the user skip over that section if it is not necessary to be configured.<br><br>``\"_internal\"``<br>~~~~~~~~~~~~~~~<br><br>``\"_internal\"`` is a JSON object that contains the following two JSON<br>objects:<br><br>-  ``\"labels\"``: This object consists of key/value pairs which define<br>   labels to show the user running the configuration. For example, if<br>   you had a section called ``db``, and a string in that section called<br>   ``user``, you would use ``\"db.user\" : \"Database User\"`` to assign the<br>   label 'Database User' to that string.<br><br>-  ``\"selects\"``: This object consists of several objects which define<br>   'selects', i.e. a way for the user to only be able to choose from a<br>   list of predetermined values. For example, if you had a section<br>   called ``db``, and a string in that section called ``engine``, you<br>   could use the following object to allow the user to select from a<br>   list of values relating to the database engine you might happen to be<br>   using:<br><br>   ::<br><br>       \"db.engine\": {<br>           \"postgres\": \"django.db.backends.postgresql_psycopg2\", <br>           \"mysql\": \"django.db.backends.mysql\"<br>       }<br><br>Keywords<br>~~~~~~~~<br><br>``\"_internal\"`` and ``\"_enabled\"`` are keywords and should not be used<br>as option names.<br><br>Using the data<br>--------------<br><br>To use the configuration generated by lazyconf, you can either use the<br>command line tool ``lazyconf``, i.e.<br><br>::<br><br>    lazyconf get -k db.user<br>    &gt;fareed<br><br>Or, you can include it in a Python file, and use the 'load' function to<br>load any existing configuration:<br><br>::<br><br>    &gt;&gt;&gt; import lazyconf<br>    &gt;&gt;&gt; l = lazyconf.Lazyconf().load()<br>    &gt;&gt;&gt; l.get('db.engine')<br>    'django.db.backends.postgresql_psycopg2'<br><br>If the python file loading lazyconf is not in the same folder as<br>``.lazy/``, you can point it at ``.lazy/`` manually:<br><br>::<br><br>    &gt;&gt;&gt; import lazyconf<br>    &gt;&gt;&gt; l = lazyconf.Lazyconf().load('home/fareed/.lazy/')<br>    &gt;&gt;&gt; l.get('db.engine')<br>    'django.db.backends.postgresql_psycopg2'<br><br>|Bitdeli badge|<br><br>.. |Build Status| image:: https://travis-ci.org/fmd/lazyconf.png?branch=master<br>   :target: https://travis-ci.org/fmd/lazyconf<br>.. |Coverage Status| image:: https://coveralls.io/repos/fmd/lazyconf/badge.png?branch=master<br>   :target: https://coveralls.io/r/fmd/lazyconf?branch=master<br>.. |Bitdeli badge| image:: https://d2weczhvl823v0.cloudfront.net/fmd/lazyconf/trend.png<br>   :target:\n          </div>"}, "last_serial": 1003739, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "7f60543c1637f27d85f0124bc3fcbcb9", "sha256": "6df4f2899d267da8979cbbc422d56b4a6a87e3984f029893d32921e85f61b24d"}, "downloads": -1, "filename": "lazyconf-0.1.tar.gz", "has_sig": false, "md5_digest": "7f60543c1637f27d85f0124bc3fcbcb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4679, "upload_time": "2014-02-04T00:41:05", "upload_time_iso_8601": "2014-02-04T00:41:05.955333Z", "url": "https://files.pythonhosted.org/packages/64/64/8b7369b198ae5f85dfe8d3b018c6c971912907f24705f4c54a0cf446566d/lazyconf-0.1.tar.gz", "yanked": false}], "0.3.9": [{"comment_text": "", "digests": {"md5": "758df59198c1d67460f5f5cb26074211", "sha256": "8e556754cb1e1638a894324ce750f6049ea30aef72e020b492d762fb7dc2446e"}, "downloads": -1, "filename": "lazyconf-0.3.9.tar.gz", "has_sig": false, "md5_digest": "758df59198c1d67460f5f5cb26074211", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12015, "upload_time": "2014-02-10T13:38:23", "upload_time_iso_8601": "2014-02-10T13:38:23.578820Z", "url": "https://files.pythonhosted.org/packages/73/98/55f9f1a3dd136264cdb8759b602e0ffdbb91d3ab3e72997e00bea5a61368/lazyconf-0.3.9.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "6985b1bec2d51ddd1293f8d6213bd85f", "sha256": "c6fb73fca4ee4bf37963d4b90f058a76b88d4516be0dfa2592610e809c3aa3b6"}, "downloads": -1, "filename": "lazyconf-0.4.0.tar.gz", "has_sig": false, "md5_digest": "6985b1bec2d51ddd1293f8d6213bd85f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12006, "upload_time": "2014-02-10T13:55:49", "upload_time_iso_8601": "2014-02-10T13:55:49.849093Z", "url": "https://files.pythonhosted.org/packages/7b/44/beb19298749dd44846ff1361117a5afc17f4843752085b1dc8cdf77a41c4/lazyconf-0.4.0.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "e4547e51c721534ac05ab01adb93282c", "sha256": "fa6730bb30798b15f13a5295d467b679c31a4afe16bc7f8abfc297bb135ec103"}, "downloads": -1, "filename": "lazyconf-0.4.2.tar.gz", "has_sig": false, "md5_digest": "e4547e51c721534ac05ab01adb93282c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13512, "upload_time": "2014-02-10T14:24:17", "upload_time_iso_8601": "2014-02-10T14:24:17.075064Z", "url": "https://files.pythonhosted.org/packages/ad/b6/fbccee9ed5085d7b6a664ce9ae753d8c21da9584fd390ded30b0708439af/lazyconf-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "6aa2db1a5da4c881ecb593d7121b42f7", "sha256": "8176e2b45f6ebf4182bdb4caf911f326fcb1eaa4baf48d310102db495b250e9e"}, "downloads": -1, "filename": "lazyconf-0.4.3.tar.gz", "has_sig": false, "md5_digest": "6aa2db1a5da4c881ecb593d7121b42f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13042, "upload_time": "2014-02-10T18:03:36", "upload_time_iso_8601": "2014-02-10T18:03:36.477801Z", "url": "https://files.pythonhosted.org/packages/06/69/3c71c745a17e1c6b90c61aef784bc55497e59d47fd877570bfa1dd15f1e5/lazyconf-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "b6b6ea9e863721ab56e4f1abd6bac912", "sha256": "be060665fc8c5ac42791c326fec26cabcca1baebd2260a6d0284c22d5ed17d65"}, "downloads": -1, "filename": "lazyconf-0.4.4.tar.gz", "has_sig": false, "md5_digest": "b6b6ea9e863721ab56e4f1abd6bac912", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13015, "upload_time": "2014-02-10T18:09:17", "upload_time_iso_8601": "2014-02-10T18:09:17.172726Z", "url": "https://files.pythonhosted.org/packages/d9/28/4dbb5a605c71b8c3d6b6b8ab2c860976d5633ee4a8573a349c368e5226f1/lazyconf-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "a6a6922fdefcb0c8f32d35cba33eae9c", "sha256": "76050c73f8802bf83688ffe0483151337dcadca48e9e9e2d1307497931c38a7c"}, "downloads": -1, "filename": "lazyconf-0.4.5.tar.gz", "has_sig": false, "md5_digest": "a6a6922fdefcb0c8f32d35cba33eae9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13032, "upload_time": "2014-02-10T18:26:19", "upload_time_iso_8601": "2014-02-10T18:26:19.313525Z", "url": "https://files.pythonhosted.org/packages/71/ab/4da781388e695219e5d763db53e650c8ceacd6de3d540e1a03499372208e/lazyconf-0.4.5.tar.gz", "yanked": false}], "0.4.6": [{"comment_text": "", "digests": {"md5": "b1a1e447eb2a952b50af834248a4b620", "sha256": "70785b18d97bc57825e4b629afa7d8d36b9f552ee506bd25ae948ccf0af034ee"}, "downloads": -1, "filename": "lazyconf-0.4.6.tar.gz", "has_sig": false, "md5_digest": "b1a1e447eb2a952b50af834248a4b620", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13093, "upload_time": "2014-02-12T12:33:41", "upload_time_iso_8601": "2014-02-12T12:33:41.572705Z", "url": "https://files.pythonhosted.org/packages/3f/5b/255d271ee959097478fe03b53d3e8a21abda9803bf5d4347fbdd028d1519/lazyconf-0.4.6.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "18b0b4cc645852659bad47ba1fb9f459", "sha256": "ecd45f587af84af556c58147fc97c756c1c19d0703025a3700f1d2493c1a041e"}, "downloads": -1, "filename": "lazyconf-0.5.0.tar.gz", "has_sig": false, "md5_digest": "18b0b4cc645852659bad47ba1fb9f459", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14354, "upload_time": "2014-02-16T15:30:57", "upload_time_iso_8601": "2014-02-16T15:30:57.625831Z", "url": "https://files.pythonhosted.org/packages/95/c7/c77f3225d84a3aad99980d1c7bf6472b6b301874244ac8364340867ee871/lazyconf-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "6664aa05a14506eb2aeab25a61beb776", "sha256": "3f712d069e4e17d6c15b65a89a06c591dfcdaf3f1c99cd6c3527a70b157f8a38"}, "downloads": -1, "filename": "lazyconf-0.5.1.tar.gz", "has_sig": false, "md5_digest": "6664aa05a14506eb2aeab25a61beb776", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13846, "upload_time": "2014-02-16T15:47:26", "upload_time_iso_8601": "2014-02-16T15:47:26.303197Z", "url": "https://files.pythonhosted.org/packages/92/73/bf52249ee45b031c3f0a998cad1198bbda6082341f2a21889cdf4a63bcd4/lazyconf-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "199abf562f9051067b89d11aeb9ae501", "sha256": "06ef31b67e552e34bbd466fa7fa568becbbc7da8c53f788d0decc8aeab7508ff"}, "downloads": -1, "filename": "lazyconf-0.5.2.tar.gz", "has_sig": false, "md5_digest": "199abf562f9051067b89d11aeb9ae501", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13840, "upload_time": "2014-02-16T15:52:58", "upload_time_iso_8601": "2014-02-16T15:52:58.342393Z", "url": "https://files.pythonhosted.org/packages/be/7b/976ee4ca5aab6c56111bef593f718dae86ac87834f97801141ee1a4eaef9/lazyconf-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "0089342edd1e3cd9d0ecc28ec0f79f95", "sha256": "a279022a7cafe60e402574b15fc0fe384a5715c1c717316deab42b74080dc2a5"}, "downloads": -1, "filename": "lazyconf-0.5.3.tar.gz", "has_sig": false, "md5_digest": "0089342edd1e3cd9d0ecc28ec0f79f95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13835, "upload_time": "2014-02-16T15:57:32", "upload_time_iso_8601": "2014-02-16T15:57:32.496853Z", "url": "https://files.pythonhosted.org/packages/ae/54/dbbbf7464b19b9a47540fafba7cabd276fa2c9d01bd97061d666828a919f/lazyconf-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "7e7d913c17e1b4c0012cec1487f8c38e", "sha256": "0a0b32949acfe3abe8a60b177dc6bfbe1e88f15ab2cb5c7f81af21b37a4f02ae"}, "downloads": -1, "filename": "lazyconf-0.5.4.tar.gz", "has_sig": false, "md5_digest": "7e7d913c17e1b4c0012cec1487f8c38e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13872, "upload_time": "2014-02-16T16:10:16", "upload_time_iso_8601": "2014-02-16T16:10:16.339314Z", "url": "https://files.pythonhosted.org/packages/50/8a/7e655376ce587c07820e33036b64979bc641307d0ac4721fd0e25560bbd3/lazyconf-0.5.4.tar.gz", "yanked": false}], "0.5.5": [{"comment_text": "", "digests": {"md5": "7e04e470cdf14be5a21ca45b47d248ac", "sha256": "89e9f9d350c644f6944d9bd64a15aa14aad89c86ccac44c7345925e34b323fbc"}, "downloads": -1, "filename": "lazyconf-0.5.5.tar.gz", "has_sig": false, "md5_digest": "7e04e470cdf14be5a21ca45b47d248ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14268, "upload_time": "2014-02-18T11:50:48", "upload_time_iso_8601": "2014-02-18T11:50:48.528180Z", "url": "https://files.pythonhosted.org/packages/bf/17/84cff42ab8ca34824c5633d77757178f3107f58b2061fee4fdfbc7b286d1/lazyconf-0.5.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7e04e470cdf14be5a21ca45b47d248ac", "sha256": "89e9f9d350c644f6944d9bd64a15aa14aad89c86ccac44c7345925e34b323fbc"}, "downloads": -1, "filename": "lazyconf-0.5.5.tar.gz", "has_sig": false, "md5_digest": "7e04e470cdf14be5a21ca45b47d248ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14268, "upload_time": "2014-02-18T11:50:48", "upload_time_iso_8601": "2014-02-18T11:50:48.528180Z", "url": "https://files.pythonhosted.org/packages/bf/17/84cff42ab8ca34824c5633d77757178f3107f58b2061fee4fdfbc7b286d1/lazyconf-0.5.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:37 2020"}