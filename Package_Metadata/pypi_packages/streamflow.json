{"info": {"author": "Iacopo Colonnelli", "author_email": "iacopo.colonnelli@unito.it", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: System :: Distributed Computing"], "description": "# StreamFlow\n\n[![Build Status](https://travis-ci.com/alpha-unito/streamflow.svg?branch=master)](https://travis-ci.com/alpha-unito/streamflow)\n\nThe StreamFlow framework is a container-native *Workflow Management System (WMS)* written in Python 3.\nIt has been designed around two main principles:\n* Allow the execution of tasks in **multi-container environments**, in order to support concurrent execution\nof multiple communicating tasks in a multi-agent ecosystem.\n* Relax the requirement of a single shared data space, in order to allow for **hybrid workflow** executions on top of\nmulti-cloud or hybrid cloud/HPC infrastructures.\n\n## Use StreamFlow\n\n#### PyPI\n\nThe StreamFlow module is available on [PyPI](https://pypi.org/project/streamflow/), so you can install it using pip.\n\n```bash\npip install streamflow\n```\n\nPlease note that StreamFlow requires `python >= 3.7`. Then you can execute it directly from the CLI\n\n```bash\nstreamflow /path/to/streamflow.yml\n```\n\n#### Docker\n\nStreamFlow Docker images are available on [Docker Hub](https://hub.docker.com/r/alphaunito/streamflow). In order to run\na workflow inside the StreaFlow image\n - A StreamFlow project, containing a `streamflow.yml` file and all the other relevant dependencies (e.g. a CWL\n   description of the workflow steps and a Helm description of the execution environment) need to be mounted as a volume\n   inside the container, for example in the `/streamflow/project` folder\n - Workflow outputs, if any, will be stored in the `/streamflow/results` folder. Therefore, it is necessary to mount\n   such location as a volume in order to persist the results\n - StreamFlow will save all its temporary files inside the `/tmp/streamflow` location. For debugging purposes, or in\n   order to improve I/O performances in case of huge files, it could be useful to mount also such location as a volume\n - The path of the `streamflow.yml` file **inside the container** (e.g. `/streamflow/project/streamflow.yml`) must be\n   passed as an argument to the Docker container\n\nThe script below gives an example of StreamFlow execution in a Docker container\n\n```bash\ndocker run -d \\\n    --mount type=bind,source=\"$(pwd)\"/my-project,target=/streamflow/project \\\n    --mount type=bind,source=\"$(pwd)\"/results,target=/streamflow/results \\\n    --mount type=bind,source=\"$(pwd)\"/tmp,target=/tmp/streamflow \\\n    alphaunito/streamflow \\\n    /streamflow/project/streamflow.yml\n```\n\n#### Kubernetes\n\nIt is also possible to execute the StreamFlow container as a `Job` in [Kubernetes](https://kubernetes.io/).\nIn this case, StreamFlow is able to deploy `Helm` models directly on the parent cluster through the\n`ServiceAccount` credentials. In order to do that, the `inCluster` option must be set to `true` for each\ninvolved module on the `streamflow.yml` file\n\n```yaml\nmodels:\n  helm-model:\n    type: helm\n    config:\n      inCluster: true\n      ...\n```\n\nA `Helm` template of a StreamFlow `Job` can be found in the `helm/chart` folder.\n\nPlease note that, in case [RBAC](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) is active on the\nKubernetes cluster, a proper `RoleBinding` must be attached to the `ServiceAccount` object, in order to give\nStreamFlow the permissions to manage deployments of pods and executions of tasks.\n\n## Contribute to StreamFlow\n\nStreamFlow uses [pipenv](https://pipenv.kennethreitz.org/en/latest/) to guarantee deterministic builds.\nTherefore, the recommended way to manage dependencies is by means of the `pipenv` command.\n\nAs a first step, get StreamFlow from [GitHub](https://github.com/alpha-unito/streamflow) \n```bash\ngit clone git@github.com:alpha-unito/streamflow.git\n```\n\nThen you can install all the requred packages using the `pipenv` command\n```bash\npip install --user pipenv\ncd streamflow\npipenv install\n```\n\nFinally, you can run StreamFlow in the generated virtual environment\n```bash\npipenv run python -m streamflow\n```\n\nStreamFlow relies on [Travis CI](https://travis-ci.com/) for PyPI and Docker Hub distributions. Therefore, in order to publish a\nnew version of the software, you only have to augment the version number in `version.py` file.\n\n## StreamFlow Team\n\nIacopo Colonnelli <iacopo.colonnelli@unito.it> (creator and maintainer)  \nBarbara Cantalupo <barbara.cantalupo@unito.it> (maintainer)  \nMarco Aldinucci <aldinuc@di.unito.it> (maintainer)\n\nGaetano Saitta <gaetano.saitta@edu.unito.it> (contributor)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/alpha-unito/streamflow/releases", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alpha-unito/streamflow", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "streamflow", "package_url": "https://pypi.org/project/streamflow/", "platform": "", "project_url": "https://pypi.org/project/streamflow/", "project_urls": {"Download": "https://github.com/alpha-unito/streamflow/releases", "Homepage": "https://github.com/alpha-unito/streamflow"}, "release_url": "https://pypi.org/project/streamflow/0.0.20/", "requires_dist": ["cwltool", "kubernetes", "jsonschema", "paramiko", "scp"], "requires_python": ">=3.7, <4", "summary": "StreamFlow framework", "version": "0.0.20", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>StreamFlow</h1>\n<p><a href=\"https://travis-ci.com/alpha-unito/streamflow\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fe6ff052ac6c7868cb475163387ade34cb302494/68747470733a2f2f7472617669732d63692e636f6d2f616c7068612d756e69746f2f73747265616d666c6f772e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>The StreamFlow framework is a container-native <em>Workflow Management System (WMS)</em> written in Python 3.\nIt has been designed around two main principles:</p>\n<ul>\n<li>Allow the execution of tasks in <strong>multi-container environments</strong>, in order to support concurrent execution\nof multiple communicating tasks in a multi-agent ecosystem.</li>\n<li>Relax the requirement of a single shared data space, in order to allow for <strong>hybrid workflow</strong> executions on top of\nmulti-cloud or hybrid cloud/HPC infrastructures.</li>\n</ul>\n<h2>Use StreamFlow</h2>\n<h4>PyPI</h4>\n<p>The StreamFlow module is available on <a href=\"https://pypi.org/project/streamflow/\" rel=\"nofollow\">PyPI</a>, so you can install it using pip.</p>\n<pre>pip install streamflow\n</pre>\n<p>Please note that StreamFlow requires <code>python &gt;= 3.7</code>. Then you can execute it directly from the CLI</p>\n<pre>streamflow /path/to/streamflow.yml\n</pre>\n<h4>Docker</h4>\n<p>StreamFlow Docker images are available on <a href=\"https://hub.docker.com/r/alphaunito/streamflow\" rel=\"nofollow\">Docker Hub</a>. In order to run\na workflow inside the StreaFlow image</p>\n<ul>\n<li>A StreamFlow project, containing a <code>streamflow.yml</code> file and all the other relevant dependencies (e.g. a CWL\ndescription of the workflow steps and a Helm description of the execution environment) need to be mounted as a volume\ninside the container, for example in the <code>/streamflow/project</code> folder</li>\n<li>Workflow outputs, if any, will be stored in the <code>/streamflow/results</code> folder. Therefore, it is necessary to mount\nsuch location as a volume in order to persist the results</li>\n<li>StreamFlow will save all its temporary files inside the <code>/tmp/streamflow</code> location. For debugging purposes, or in\norder to improve I/O performances in case of huge files, it could be useful to mount also such location as a volume</li>\n<li>The path of the <code>streamflow.yml</code> file <strong>inside the container</strong> (e.g. <code>/streamflow/project/streamflow.yml</code>) must be\npassed as an argument to the Docker container</li>\n</ul>\n<p>The script below gives an example of StreamFlow execution in a Docker container</p>\n<pre>docker run -d <span class=\"se\">\\</span>\n    --mount <span class=\"nv\">type</span><span class=\"o\">=</span>bind,source<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span><span class=\"s2\">\"</span>/my-project,target<span class=\"o\">=</span>/streamflow/project <span class=\"se\">\\</span>\n    --mount <span class=\"nv\">type</span><span class=\"o\">=</span>bind,source<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span><span class=\"s2\">\"</span>/results,target<span class=\"o\">=</span>/streamflow/results <span class=\"se\">\\</span>\n    --mount <span class=\"nv\">type</span><span class=\"o\">=</span>bind,source<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span><span class=\"s2\">\"</span>/tmp,target<span class=\"o\">=</span>/tmp/streamflow <span class=\"se\">\\</span>\n    alphaunito/streamflow <span class=\"se\">\\</span>\n    /streamflow/project/streamflow.yml\n</pre>\n<h4>Kubernetes</h4>\n<p>It is also possible to execute the StreamFlow container as a <code>Job</code> in <a href=\"https://kubernetes.io/\" rel=\"nofollow\">Kubernetes</a>.\nIn this case, StreamFlow is able to deploy <code>Helm</code> models directly on the parent cluster through the\n<code>ServiceAccount</code> credentials. In order to do that, the <code>inCluster</code> option must be set to <code>true</code> for each\ninvolved module on the <code>streamflow.yml</code> file</p>\n<pre><span class=\"nt\">models</span><span class=\"p\">:</span>\n  <span class=\"nt\">helm-model</span><span class=\"p\">:</span>\n    <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">helm</span>\n    <span class=\"nt\">config</span><span class=\"p\">:</span>\n      <span class=\"nt\">inCluster</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">true</span>\n      <span class=\"l l-Scalar l-Scalar-Plain\">...</span>\n</pre>\n<p>A <code>Helm</code> template of a StreamFlow <code>Job</code> can be found in the <code>helm/chart</code> folder.</p>\n<p>Please note that, in case <a href=\"https://kubernetes.io/docs/reference/access-authn-authz/rbac/\" rel=\"nofollow\">RBAC</a> is active on the\nKubernetes cluster, a proper <code>RoleBinding</code> must be attached to the <code>ServiceAccount</code> object, in order to give\nStreamFlow the permissions to manage deployments of pods and executions of tasks.</p>\n<h2>Contribute to StreamFlow</h2>\n<p>StreamFlow uses <a href=\"https://pipenv.kennethreitz.org/en/latest/\" rel=\"nofollow\">pipenv</a> to guarantee deterministic builds.\nTherefore, the recommended way to manage dependencies is by means of the <code>pipenv</code> command.</p>\n<p>As a first step, get StreamFlow from <a href=\"https://github.com/alpha-unito/streamflow\" rel=\"nofollow\">GitHub</a></p>\n<pre>git clone git@github.com:alpha-unito/streamflow.git\n</pre>\n<p>Then you can install all the requred packages using the <code>pipenv</code> command</p>\n<pre>pip install --user pipenv\n<span class=\"nb\">cd</span> streamflow\npipenv install\n</pre>\n<p>Finally, you can run StreamFlow in the generated virtual environment</p>\n<pre>pipenv run python -m streamflow\n</pre>\n<p>StreamFlow relies on <a href=\"https://travis-ci.com/\" rel=\"nofollow\">Travis CI</a> for PyPI and Docker Hub distributions. Therefore, in order to publish a\nnew version of the software, you only have to augment the version number in <code>version.py</code> file.</p>\n<h2>StreamFlow Team</h2>\n<p>Iacopo Colonnelli <a href=\"mailto:iacopo.colonnelli@unito.it\">iacopo.colonnelli@unito.it</a> (creator and maintainer)<br>\nBarbara Cantalupo <a href=\"mailto:barbara.cantalupo@unito.it\">barbara.cantalupo@unito.it</a> (maintainer)<br>\nMarco Aldinucci <a href=\"mailto:aldinuc@di.unito.it\">aldinuc@di.unito.it</a> (maintainer)</p>\n<p>Gaetano Saitta <a href=\"mailto:gaetano.saitta@edu.unito.it\">gaetano.saitta@edu.unito.it</a> (contributor)</p>\n\n          </div>"}, "last_serial": 6961360, "releases": {"0.0.12": [{"comment_text": "", "digests": {"md5": "21dcea840095a86d60307859cfbf6edd", "sha256": "a10b25111e1fa03d1bb52c5d9592743e9f3237b4f77b3a82c9e0f4a7357d6386"}, "downloads": -1, "filename": "streamflow-0.0.12-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "21dcea840095a86d60307859cfbf6edd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.7, <4", "size": 39537, "upload_time": "2020-03-13T21:15:46", "upload_time_iso_8601": "2020-03-13T21:15:46.341180Z", "url": "https://files.pythonhosted.org/packages/87/6c/abde96e1fbb87e2af0a767fc3ddb9a164716aee5f48a6012dbeae4bb5423/streamflow-0.0.12-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f1f5dd6a070a010e317b40dcf57c0ff5", "sha256": "9ef71460727e23adc36d01c7327f9dae91822768eece6c74dcac3d642a9e1289"}, "downloads": -1, "filename": "streamflow-0.0.12.tar.gz", "has_sig": false, "md5_digest": "f1f5dd6a070a010e317b40dcf57c0ff5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <4", "size": 27266, "upload_time": "2020-03-13T21:15:47", "upload_time_iso_8601": "2020-03-13T21:15:47.192559Z", "url": "https://files.pythonhosted.org/packages/35/be/44208e33a44867bbc07e7713611bb2a6041e6699126283a4405db501d26a/streamflow-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "db69124928efadc79b03f30b6514cb19", "sha256": "08a4b824953708d3e42fc1d6469e07b6abe876d413b9ed15786a37f4db7a60b2"}, "downloads": -1, "filename": "streamflow-0.0.13-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "db69124928efadc79b03f30b6514cb19", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.7, <4", "size": 40955, "upload_time": "2020-03-18T23:30:51", "upload_time_iso_8601": "2020-03-18T23:30:51.966606Z", "url": "https://files.pythonhosted.org/packages/86/67/5a1f64898a3dbed879d623a408679ec2ad61aee9d85f51dc7ecf02262378/streamflow-0.0.13-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb0b0f774fcdc936cbd90c57af30c7dc", "sha256": "0dc6fc103a894efb55834ccf30315df64a21f76538cc714dcca95ad36555e3c4"}, "downloads": -1, "filename": "streamflow-0.0.13.tar.gz", "has_sig": false, "md5_digest": "fb0b0f774fcdc936cbd90c57af30c7dc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <4", "size": 29612, "upload_time": "2020-03-18T23:30:53", "upload_time_iso_8601": "2020-03-18T23:30:53.150050Z", "url": "https://files.pythonhosted.org/packages/c1/80/84fe02392e9c6f14be6442860508895410153a17af59739b309ee97f7ad6/streamflow-0.0.13.tar.gz", "yanked": false}], "0.0.20": [{"comment_text": "", "digests": {"md5": "03d48e41030fb5b00e1d077c7d531c46", "sha256": "1782a882ff3fe481666d6cb44e076e7ff87747e694aa2b7cc9a77bc006a1d8b0"}, "downloads": -1, "filename": "streamflow-0.0.20-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "03d48e41030fb5b00e1d077c7d531c46", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.7, <4", "size": 41251, "upload_time": "2020-04-06T12:46:19", "upload_time_iso_8601": "2020-04-06T12:46:19.354318Z", "url": "https://files.pythonhosted.org/packages/a3/6d/4358400e85edf70b2bcd7b154a9328c9f0a45c7712d65582c6f1d886da53/streamflow-0.0.20-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b293b1b87d4c9bd81f16d60d8312ed59", "sha256": "63e395c1c788ede83f9b42396c5b97c608e0e61009fd754e742d9b57dbb76402"}, "downloads": -1, "filename": "streamflow-0.0.20.tar.gz", "has_sig": false, "md5_digest": "b293b1b87d4c9bd81f16d60d8312ed59", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <4", "size": 29734, "upload_time": "2020-04-06T12:46:20", "upload_time_iso_8601": "2020-04-06T12:46:20.452599Z", "url": "https://files.pythonhosted.org/packages/75/df/bc9ed7a94f16ff355f1b11b1330c2831b8e9c11e97df8dffd7978fd5bc59/streamflow-0.0.20.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "03d48e41030fb5b00e1d077c7d531c46", "sha256": "1782a882ff3fe481666d6cb44e076e7ff87747e694aa2b7cc9a77bc006a1d8b0"}, "downloads": -1, "filename": "streamflow-0.0.20-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "03d48e41030fb5b00e1d077c7d531c46", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.7, <4", "size": 41251, "upload_time": "2020-04-06T12:46:19", "upload_time_iso_8601": "2020-04-06T12:46:19.354318Z", "url": "https://files.pythonhosted.org/packages/a3/6d/4358400e85edf70b2bcd7b154a9328c9f0a45c7712d65582c6f1d886da53/streamflow-0.0.20-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b293b1b87d4c9bd81f16d60d8312ed59", "sha256": "63e395c1c788ede83f9b42396c5b97c608e0e61009fd754e742d9b57dbb76402"}, "downloads": -1, "filename": "streamflow-0.0.20.tar.gz", "has_sig": false, "md5_digest": "b293b1b87d4c9bd81f16d60d8312ed59", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <4", "size": 29734, "upload_time": "2020-04-06T12:46:20", "upload_time_iso_8601": "2020-04-06T12:46:20.452599Z", "url": "https://files.pythonhosted.org/packages/75/df/bc9ed7a94f16ff355f1b11b1330c2831b8e9c11e97df8dffd7978fd5bc59/streamflow-0.0.20.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:22 2020"}