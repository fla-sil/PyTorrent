{"info": {"author": "Seven Bridges Genomics Inc.", "author_email": "filip.tubic@sbgenomics.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: Other/Proprietary License", "Natural Language :: English", "Operating System :: POSIX", "Programming Language :: Python :: 3"], "description": "SevenBridges CWL \n===========================\n\n# Table of contents\n1. [Overview](#overview)\n2. [Install](#install)\n3. [Docs](#docs)\n4. [Run tests](#tests)\n5. [Examples](#examples)\n    - [Run workflow on a SevenBridges platform](#example1)\n\n## <a name=\"overview\">Overview</a>\n\n**SevenBridges CWL** package provides python bindings for \n_Common Workflow Language_. It is intended for developers who want to use \npython code to generate CWL documents. If creating a document through the GUI\nis preferable, then look at the \n[Rabix Composer](https://github.com/rabix/composer).\n\n## <a name=\"install\">Install</a>\n\n### Official releases\nOfficial releases are available via `pip install sevenbridges-cwl` (This is the [pypi entry](https://pypi.org/project/sevenbridges-cwl/) for this project)\n\n### Development versions\nTo obtain unreleased versions: \n\n- `git clone` this repository \n- `cd sevenbridges-cwl && pip install .`\n\nThe `master` branch is for more stable code while `develop` is for cutting edge features being currently worked on\n\n## <a name=\"docs\">Docs</a>\n\nComplete documentation can be found [here](https://sevenbridges-cwl.readthedocs.io/en/latest/quickstart.html).\n\nIf you are interested in reviewing this documentation locally, clone this \nrepository, position yourself in the `docs` directory and after installing \n`requirements-dev.txt`, invoke:\n\n```\nmake html\n```\n\n## <a name=\"tests\">Run Tests</a>\n\nIn order to run tests clone this repository, position yourself in the root of \nthe cloned project and, after installing `requirements-dev.txt`, invoke: \n```\npytest\n```\n\n## <a name=\"examples\">Examples</a>\n\nThe following code will give a brief overview of what this package can offer through \nsimple examples. \n\n**A Complete list of all examples can be found <a href=\"https://github.com/sbg/sevenbridges-cwl/tree/master/docs/examples\">here</a>.**\n\n### <a name=\"example1\">Run workflow on a SevenBridges platform</a>\n\n```python\nfrom sbg import cwl\n\n\n# First node\n@cwl.to_tool(\n    inputs=dict(x=cwl.String()),\n    outputs=dict(out=cwl.Float(required=True)),\n    docker='images.sbgenomics.com/filip_tubic/ubuntu1604py'\n)\ndef to_float(x):\n    return dict(out=float(x))\n\n\n# Second node\n@cwl.to_tool(\n    inputs=dict(x=cwl.Float(), n=cwl.Int()),\n    outputs=dict(out=cwl.Float()),\n    docker='images.sbgenomics.com/filip_tubic/ubuntu1604py'\n)\ndef times_n(x, n=10):\n    return dict(out=x * n)\n\n\nwf = cwl.Workflow()\n\n# create tools\nt1 = to_float()\nt2 = times_n()\n\n# steps\nwf.add_step(t1, expose=['x'])\nwf.add_step(t2, expose=['n', 'out'])\n\n# add connections\nwf.add_connection(f'{t1.id}.out', f'{t2.id}.x')\n\n# Session on a SBG platform\nsession = cwl.Session(profile='<your_profile>')\n\nsession.run('<your_project>', wf, inputs={'x': '10.2'})\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "seven bridges cwl common workflow language", "license": "Copyright (c) 2018 Seven Bridges Genomics", "maintainer": "Seven Bridges Genomics Inc.", "maintainer_email": "filip.tubic@sbgenomics.com", "name": "sevenbridges-cwl", "package_url": "https://pypi.org/project/sevenbridges-cwl/", "platform": "POSIX", "project_url": "https://pypi.org/project/sevenbridges-cwl/", "project_urls": null, "release_url": "https://pypi.org/project/sevenbridges-cwl/1.1.3/", "requires_dist": null, "requires_python": "", "summary": "SBG Python library to create CWL tools and workflows", "version": "1.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SevenBridges CWL</h1>\n<h1>Table of contents</h1>\n<ol>\n<li><a href=\"#overview\" rel=\"nofollow\">Overview</a></li>\n<li><a href=\"#install\" rel=\"nofollow\">Install</a></li>\n<li><a href=\"#docs\" rel=\"nofollow\">Docs</a></li>\n<li><a href=\"#tests\" rel=\"nofollow\">Run tests</a></li>\n<li><a href=\"#examples\" rel=\"nofollow\">Examples</a>\n<ul>\n<li><a href=\"#example1\" rel=\"nofollow\">Run workflow on a SevenBridges platform</a></li>\n</ul>\n</li>\n</ol>\n<h2><a>Overview</a></h2>\n<p><strong>SevenBridges CWL</strong> package provides python bindings for\n<em>Common Workflow Language</em>. It is intended for developers who want to use\npython code to generate CWL documents. If creating a document through the GUI\nis preferable, then look at the\n<a href=\"https://github.com/rabix/composer\" rel=\"nofollow\">Rabix Composer</a>.</p>\n<h2><a>Install</a></h2>\n<h3>Official releases</h3>\n<p>Official releases are available via <code>pip install sevenbridges-cwl</code> (This is the <a href=\"https://pypi.org/project/sevenbridges-cwl/\" rel=\"nofollow\">pypi entry</a> for this project)</p>\n<h3>Development versions</h3>\n<p>To obtain unreleased versions:</p>\n<ul>\n<li><code>git clone</code> this repository</li>\n<li><code>cd sevenbridges-cwl &amp;&amp; pip install .</code></li>\n</ul>\n<p>The <code>master</code> branch is for more stable code while <code>develop</code> is for cutting edge features being currently worked on</p>\n<h2><a>Docs</a></h2>\n<p>Complete documentation can be found <a href=\"https://sevenbridges-cwl.readthedocs.io/en/latest/quickstart.html\" rel=\"nofollow\">here</a>.</p>\n<p>If you are interested in reviewing this documentation locally, clone this\nrepository, position yourself in the <code>docs</code> directory and after installing\n<code>requirements-dev.txt</code>, invoke:</p>\n<pre><code>make html\n</code></pre>\n<h2><a>Run Tests</a></h2>\n<p>In order to run tests clone this repository, position yourself in the root of\nthe cloned project and, after installing <code>requirements-dev.txt</code>, invoke:</p>\n<pre><code>pytest\n</code></pre>\n<h2><a>Examples</a></h2>\n<p>The following code will give a brief overview of what this package can offer through\nsimple examples.</p>\n<p><strong>A Complete list of all examples can be found <a href=\"https://github.com/sbg/sevenbridges-cwl/tree/master/docs/examples\" rel=\"nofollow\">here</a>.</strong></p>\n<h3><a>Run workflow on a SevenBridges platform</a></h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sbg</span> <span class=\"kn\">import</span> <span class=\"n\">cwl</span>\n\n\n<span class=\"c1\"># First node</span>\n<span class=\"nd\">@cwl</span><span class=\"o\">.</span><span class=\"n\">to_tool</span><span class=\"p\">(</span>\n    <span class=\"n\">inputs</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">cwl</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">()),</span>\n    <span class=\"n\">outputs</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"o\">=</span><span class=\"n\">cwl</span><span class=\"o\">.</span><span class=\"n\">Float</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)),</span>\n    <span class=\"n\">docker</span><span class=\"o\">=</span><span class=\"s1\">'images.sbgenomics.com/filip_tubic/ubuntu1604py'</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">to_float</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">))</span>\n\n\n<span class=\"c1\"># Second node</span>\n<span class=\"nd\">@cwl</span><span class=\"o\">.</span><span class=\"n\">to_tool</span><span class=\"p\">(</span>\n    <span class=\"n\">inputs</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">cwl</span><span class=\"o\">.</span><span class=\"n\">Float</span><span class=\"p\">(),</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"n\">cwl</span><span class=\"o\">.</span><span class=\"n\">Int</span><span class=\"p\">()),</span>\n    <span class=\"n\">outputs</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"o\">=</span><span class=\"n\">cwl</span><span class=\"o\">.</span><span class=\"n\">Float</span><span class=\"p\">()),</span>\n    <span class=\"n\">docker</span><span class=\"o\">=</span><span class=\"s1\">'images.sbgenomics.com/filip_tubic/ubuntu1604py'</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">times_n</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"o\">=</span><span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"n\">n</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">wf</span> <span class=\"o\">=</span> <span class=\"n\">cwl</span><span class=\"o\">.</span><span class=\"n\">Workflow</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># create tools</span>\n<span class=\"n\">t1</span> <span class=\"o\">=</span> <span class=\"n\">to_float</span><span class=\"p\">()</span>\n<span class=\"n\">t2</span> <span class=\"o\">=</span> <span class=\"n\">times_n</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># steps</span>\n<span class=\"n\">wf</span><span class=\"o\">.</span><span class=\"n\">add_step</span><span class=\"p\">(</span><span class=\"n\">t1</span><span class=\"p\">,</span> <span class=\"n\">expose</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'x'</span><span class=\"p\">])</span>\n<span class=\"n\">wf</span><span class=\"o\">.</span><span class=\"n\">add_step</span><span class=\"p\">(</span><span class=\"n\">t2</span><span class=\"p\">,</span> <span class=\"n\">expose</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'n'</span><span class=\"p\">,</span> <span class=\"s1\">'out'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># add connections</span>\n<span class=\"n\">wf</span><span class=\"o\">.</span><span class=\"n\">add_connection</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'</span><span class=\"si\">{</span><span class=\"n\">t1</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"si\">}</span><span class=\"s1\">.out'</span><span class=\"p\">,</span> <span class=\"sa\">f</span><span class=\"s1\">'</span><span class=\"si\">{</span><span class=\"n\">t2</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"si\">}</span><span class=\"s1\">.x'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Session on a SBG platform</span>\n<span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">cwl</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">(</span><span class=\"n\">profile</span><span class=\"o\">=</span><span class=\"s1\">'&lt;your_profile&gt;'</span><span class=\"p\">)</span>\n\n<span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">'&lt;your_project&gt;'</span><span class=\"p\">,</span> <span class=\"n\">wf</span><span class=\"p\">,</span> <span class=\"n\">inputs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'x'</span><span class=\"p\">:</span> <span class=\"s1\">'10.2'</span><span class=\"p\">})</span>\n</pre>\n\n          </div>"}, "last_serial": 4520854, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "8e091c39b42ab01f5886ce4b5141a041", "sha256": "5b50a5b7193d01749f41e86e8b8ff83e6fc4a5cee69d8d65a125eeb67fd4d44c"}, "downloads": -1, "filename": "sevenbridges-cwl-1.1.0.tar.gz", "has_sig": false, "md5_digest": "8e091c39b42ab01f5886ce4b5141a041", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61916, "upload_time": "2018-10-16T12:16:11", "upload_time_iso_8601": "2018-10-16T12:16:11.661394Z", "url": "https://files.pythonhosted.org/packages/a2/88/39011c2d6bbefcf1d54385249868c49438f30ca54c6de61475d87f4e98c0/sevenbridges-cwl-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "e37efaff5f977205d2888982df0f3e46", "sha256": "e1ac0b1b8b5e68f188e857fa9d767557e368cb9b05e72b8d7ab07d78176452d5"}, "downloads": -1, "filename": "sevenbridges-cwl-1.1.1.tar.gz", "has_sig": false, "md5_digest": "e37efaff5f977205d2888982df0f3e46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62419, "upload_time": "2018-11-13T11:18:22", "upload_time_iso_8601": "2018-11-13T11:18:22.778538Z", "url": "https://files.pythonhosted.org/packages/11/ef/3a3d39f48cf9af5eb571d4ce27a74ddcfab18fb956f1ce5e82f4ea9e2a62/sevenbridges-cwl-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "f77fb420ac5def19cb62f083bad5e73e", "sha256": "27702cdf5d418e65efdb1af0215aad75408f3f0dff4eea28b24eb93e08d26afd"}, "downloads": -1, "filename": "sevenbridges-cwl-1.1.2.tar.gz", "has_sig": false, "md5_digest": "f77fb420ac5def19cb62f083bad5e73e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62477, "upload_time": "2018-11-20T09:29:50", "upload_time_iso_8601": "2018-11-20T09:29:50.891446Z", "url": "https://files.pythonhosted.org/packages/30/66/824c914a02dfaa140d86da4b7597827156e7f69bb900604be81e769e30a3/sevenbridges-cwl-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "5cc2775c62f24ec232040a399056efd6", "sha256": "d9919c9e3b8eddb86c3d421039db35992479d83b1da9d0f5c9ae5d3beaa9775e"}, "downloads": -1, "filename": "sevenbridges-cwl-1.1.3.tar.gz", "has_sig": false, "md5_digest": "5cc2775c62f24ec232040a399056efd6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62601, "upload_time": "2018-11-23T14:42:39", "upload_time_iso_8601": "2018-11-23T14:42:39.706504Z", "url": "https://files.pythonhosted.org/packages/83/fc/49739b14168d11b9ddc7d41f0c01e3721eef4074f24e1b381642962df8bf/sevenbridges-cwl-1.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5cc2775c62f24ec232040a399056efd6", "sha256": "d9919c9e3b8eddb86c3d421039db35992479d83b1da9d0f5c9ae5d3beaa9775e"}, "downloads": -1, "filename": "sevenbridges-cwl-1.1.3.tar.gz", "has_sig": false, "md5_digest": "5cc2775c62f24ec232040a399056efd6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62601, "upload_time": "2018-11-23T14:42:39", "upload_time_iso_8601": "2018-11-23T14:42:39.706504Z", "url": "https://files.pythonhosted.org/packages/83/fc/49739b14168d11b9ddc7d41f0c01e3721eef4074f24e1b381642962df8bf/sevenbridges-cwl-1.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:21 2020"}