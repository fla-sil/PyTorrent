{"info": {"author": "Bryson Tyrrell", "author_email": "bryson.tyrrell@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7"], "description": "Install Jook\n------------\n\nYou can install Jook from the Pyhon Package Index:\n\n.. code-block:: bash\n\n    $ pip install jook\n\nBasic Usage\n-----------\n\nJook allows you to create Python objects that can fire off HTTP requests that\nmock webhook events from a Jamf Pro server.\n\nGetting started is easy:\n\n.. code-block:: python\n\n    >>> import jook\n    >>> computer = jook.Computer('http://localhost', 'ComputerAdded')\n    >>> computer.fire()\n\n\nJook supports both ``JSON`` and ``XML`` formats for data to send (``JSON`` is the default):\n\n.. code-block:: python\n\n    >>> computer = jook.Computer('http://localhost', 'ComputerCheckIn', mode='xml')\n    >>> computer.to_xml()\n    '<?xml version=\"1.0\" encoding=\"UTF-8\" ?><JSSEvent><webhook><webhookEvent>ComputerCheckIn</webhookEvent>...</JSSEvent>'\n    >>> computer.to_json()\n    '{\"webhook\": {\"webhookEvent\": \"ComputerCheckIn\", \"id\": 1, \"name\": \"\"}, \"event\": {...}'\n\n\nCreate objects in ``randomize`` mode to generate unique data with every ``fire``:\n\n.. code-block:: python\n\n    >>> rand_comp = jook.Computer('http://localhost', 'ComputerInventoryCompleted', randomize=True)\n    >>> rand_comp.data\n    {'webhook': {...}, 'event': {..., 'udid': '0699A579-2835-4E5F-8847-944D9A477DDD', 'serialNumber': 'CPFQ2MXCG5ND', ...}}\n    >>> rand_comp.data\n    {'webhook': {...}, 'event': {..., 'udid': '1ABE2310-4396-4ABC-AAA9-5B48E6CFC7F5', 'serialNumber': 'C1FK9EXSFKQT', ...}}\n\n\nCreate ``DeviceData`` and ``LocationData`` objects to pass into webhooks to control\nthe data sent in the mock events:\n\n.. code-block:: python\n\n    >>> my_device = DeviceData('computer')\n    >>> my_device.serial_number\n    'CPFQMEE3HYFH'\n    >>> comp1 = Computer('http://localhost', 'ComputerAdded', device=my_device)\n    >>> comp1.device.serial_number\n    'CPFQMEE3HYFH'\n    >>> comp2 = Computer('http://localhost', 'ComputerCheckIn', device=my_device)\n    >>> comp1.device.serial_number\n    'CPFQMEE3HYFH'\n\n\nSet events to run in a loop with a set delay. This example sets a timer delay of\nfive seconds and then starts a loop of 10 ``fire`` calls:\n\n.. code-block:: python\n\n    >>> computer = jook.Computer('http://localhost', 'ComputerCheckIn', timer=5)\n    >>> computer.start_timer(repeat=10)", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/brysontyrrell/Jook", "keywords": "jamf webhooks testing development tools", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "jook", "package_url": "https://pypi.org/project/jook/", "platform": "", "project_url": "https://pypi.org/project/jook/", "project_urls": {"Homepage": "https://github.com/brysontyrrell/Jook"}, "release_url": "https://pypi.org/project/jook/0.4.3/", "requires_dist": null, "requires_python": "", "summary": "A Jamf Pro webhook simulator", "version": "0.4.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"install-jook\">\n<h2>Install Jook</h2>\n<p>You can install Jook from the Pyhon Package Index:</p>\n<pre>$ pip install jook\n</pre>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic Usage</h2>\n<p>Jook allows you to create Python objects that can fire off HTTP requests that\nmock webhook events from a Jamf Pro server.</p>\n<p>Getting started is easy:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">jook</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">computer</span> <span class=\"o\">=</span> <span class=\"n\">jook</span><span class=\"o\">.</span><span class=\"n\">Computer</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost'</span><span class=\"p\">,</span> <span class=\"s1\">'ComputerAdded'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">computer</span><span class=\"o\">.</span><span class=\"n\">fire</span><span class=\"p\">()</span>\n</pre>\n<p>Jook supports both <tt>JSON</tt> and <tt>XML</tt> formats for data to send (<tt>JSON</tt> is the default):</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">computer</span> <span class=\"o\">=</span> <span class=\"n\">jook</span><span class=\"o\">.</span><span class=\"n\">Computer</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost'</span><span class=\"p\">,</span> <span class=\"s1\">'ComputerCheckIn'</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">'xml'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">computer</span><span class=\"o\">.</span><span class=\"n\">to_xml</span><span class=\"p\">()</span>\n<span class=\"s1\">'&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;&lt;JSSEvent&gt;&lt;webhook&gt;&lt;webhookEvent&gt;ComputerCheckIn&lt;/webhookEvent&gt;...&lt;/JSSEvent&gt;'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">computer</span><span class=\"o\">.</span><span class=\"n\">to_json</span><span class=\"p\">()</span>\n<span class=\"s1\">'{\"webhook\": {\"webhookEvent\": \"ComputerCheckIn\", \"id\": 1, \"name\": \"\"}, \"event\": {...}'</span>\n</pre>\n<p>Create objects in <tt>randomize</tt> mode to generate unique data with every <tt>fire</tt>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rand_comp</span> <span class=\"o\">=</span> <span class=\"n\">jook</span><span class=\"o\">.</span><span class=\"n\">Computer</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost'</span><span class=\"p\">,</span> <span class=\"s1\">'ComputerInventoryCompleted'</span><span class=\"p\">,</span> <span class=\"n\">randomize</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rand_comp</span><span class=\"o\">.</span><span class=\"n\">data</span>\n<span class=\"p\">{</span><span class=\"s1\">'webhook'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">},</span> <span class=\"s1\">'event'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"s1\">'udid'</span><span class=\"p\">:</span> <span class=\"s1\">'0699A579-2835-4E5F-8847-944D9A477DDD'</span><span class=\"p\">,</span> <span class=\"s1\">'serialNumber'</span><span class=\"p\">:</span> <span class=\"s1\">'CPFQ2MXCG5ND'</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">}}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rand_comp</span><span class=\"o\">.</span><span class=\"n\">data</span>\n<span class=\"p\">{</span><span class=\"s1\">'webhook'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">},</span> <span class=\"s1\">'event'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"s1\">'udid'</span><span class=\"p\">:</span> <span class=\"s1\">'1ABE2310-4396-4ABC-AAA9-5B48E6CFC7F5'</span><span class=\"p\">,</span> <span class=\"s1\">'serialNumber'</span><span class=\"p\">:</span> <span class=\"s1\">'C1FK9EXSFKQT'</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">}}</span>\n</pre>\n<p>Create <tt>DeviceData</tt> and <tt>LocationData</tt> objects to pass into webhooks to control\nthe data sent in the mock events:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">my_device</span> <span class=\"o\">=</span> <span class=\"n\">DeviceData</span><span class=\"p\">(</span><span class=\"s1\">'computer'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">my_device</span><span class=\"o\">.</span><span class=\"n\">serial_number</span>\n<span class=\"s1\">'CPFQMEE3HYFH'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">comp1</span> <span class=\"o\">=</span> <span class=\"n\">Computer</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost'</span><span class=\"p\">,</span> <span class=\"s1\">'ComputerAdded'</span><span class=\"p\">,</span> <span class=\"n\">device</span><span class=\"o\">=</span><span class=\"n\">my_device</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">comp1</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">serial_number</span>\n<span class=\"s1\">'CPFQMEE3HYFH'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">comp2</span> <span class=\"o\">=</span> <span class=\"n\">Computer</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost'</span><span class=\"p\">,</span> <span class=\"s1\">'ComputerCheckIn'</span><span class=\"p\">,</span> <span class=\"n\">device</span><span class=\"o\">=</span><span class=\"n\">my_device</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">comp1</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">serial_number</span>\n<span class=\"s1\">'CPFQMEE3HYFH'</span>\n</pre>\n<p>Set events to run in a loop with a set delay. This example sets a timer delay of\nfive seconds and then starts a loop of 10 <tt>fire</tt> calls:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">computer</span> <span class=\"o\">=</span> <span class=\"n\">jook</span><span class=\"o\">.</span><span class=\"n\">Computer</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost'</span><span class=\"p\">,</span> <span class=\"s1\">'ComputerCheckIn'</span><span class=\"p\">,</span> <span class=\"n\">timer</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">computer</span><span class=\"o\">.</span><span class=\"n\">start_timer</span><span class=\"p\">(</span><span class=\"n\">repeat</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2998055, "releases": {"0.4.3": [{"comment_text": "", "digests": {"md5": "028f3999b8be921475975369b1f18caa", "sha256": "522bebcd8059d1af7d199ed078067586bf621bda2b316b12a63324aea1bbd087"}, "downloads": -1, "filename": "jook-0.4.3.tar.gz", "has_sig": false, "md5_digest": "028f3999b8be921475975369b1f18caa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8578, "upload_time": "2017-07-03T23:40:32", "upload_time_iso_8601": "2017-07-03T23:40:32.422167Z", "url": "https://files.pythonhosted.org/packages/8f/20/c6268871f289ed1aeac241864ad469a599b7239e7aa0b2450c631ecd2d27/jook-0.4.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "028f3999b8be921475975369b1f18caa", "sha256": "522bebcd8059d1af7d199ed078067586bf621bda2b316b12a63324aea1bbd087"}, "downloads": -1, "filename": "jook-0.4.3.tar.gz", "has_sig": false, "md5_digest": "028f3999b8be921475975369b1f18caa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8578, "upload_time": "2017-07-03T23:40:32", "upload_time_iso_8601": "2017-07-03T23:40:32.422167Z", "url": "https://files.pythonhosted.org/packages/8f/20/c6268871f289ed1aeac241864ad469a599b7239e7aa0b2450c631ecd2d27/jook-0.4.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:14 2020"}