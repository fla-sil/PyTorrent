{"info": {"author": "Wolfgang Kopp", "author_email": "wolfgang.kopp@mdc-berlin.de", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Utilities"], "description": "=====================================\nJanggu - Deep learning for Genomics\n=====================================\n\n\n\n.. image:: jangguhex.png\n   :width: 40%\n   :alt: Janggu logo\n   :align: center\n\nJanggu is a python package that facilitates deep learning in the context of\ngenomics. The package is freely available under a GPL-3.0 license.\n\n.. image:: Janggu-visAbstract.png\n   :width: 100%\n   :alt: Janggu visual abstract\n   :align: center\n\n\nIn particular, the package allows for easy access to\ntypical **Genomics data formats**\nand **out-of-the-box evaluation** (for keras models specifically) so that you can concentrate\non designing the neural network architecture for the purpose\nof quickly testing biological hypothesis.\nA comprehensive documentation is available `here <https://janggu.readthedocs.io/en/latest>`_.\n\n\nHallmarks of Janggu:\n---------------------\n\n1. Janggu provides special **Genomics datasets** that allow you to access raw data in FASTA, BAM, BIGWIG, BED and GFF file format.\n2. Various **normalization** procedures are supported for dealing with of the genomics dataset, including 'TPM', 'zscore' or custom normalizers.\n3. Biological features can be represented in terms of higher-order sequence features, e.g. di-nucleotide based features.\n4. The dataset objects are directly consumable with neural networks for example implemented using `keras <https://keras.io>`_ or using `scikit-learn <https://scikit-learn.org/stable/index.html>`_ (see src/examples in this repository).\n5. Numpy format output of a keras model can be converted to represent genomic coverage tracks, which allows exporting the predictions as BIGWIG files and visualization of genome browser-like plots.\n6. Genomic datasets can be stored in various ways, including as numpy array, sparse dataset or in hdf5 format.\n7. Caching of Genomic datasets avoids time consuming preprocessing steps and facilitates fast reloading.\n8. Janggu provides a wrapper for `keras <https://keras.io>`_ models with built-in logging functionality and automatized result evaluation.\n9. Janggu supports input feature importance attribution using the integrated gradients method and variant effect prediction assessment.\n10. Janggu provides a utilities such as keras layer for scanning both DNA strands for motif occurrences.\n\nGetting started\n----------------\n\nJanggu makes it easy to access data from genomic file formats and utilize it for\nmachine learning purposes.\n\n.. code-block:: python\n\n  dna = Bioseq.create_from_genome('dna', refgenome=<refgenome.fa>, roi=<roi.bed>)\n  labels = Cover.create_from_bed('labels', bedfiles=<labels.bed>, roi=<roi.bed>)\n\n  kerasmodel.fit(dna, labels)\n\nA range of examples can be found in './src/examples' of this repository,\nwhich includes jupyter notebooks that illustrate Janggu's functionality\nand how it can be used with popular deep learning frameworks, including\nkeras, sklearn or pytorch.\n\nWhy the name Janggu?\n---------------------\n\n`Janggu <https://en.wikipedia.org/wiki/Janggu>`_ is a Korean percussion\ninstrument that looks like an hourglass.\n\nLike the two ends of the instrument, the philosophy of the\nJanggu package is to help with the two ends of a\ndeep learning application in genomics,\nnamely data acquisition and evaluation.\n\n\n\nInstallation\n============\n\nA list of python dependencies is defined in `setup.py`.\nAdditionally, `bedtools <https://bedtools.readthedocs.io/>`_ is required for `pybedtools` which `janggu` depends on.\n\n\nThe simplest way to install janggu is via the conda package management system.\nAssuming you have already installed conda, create a new environment\nand type\n\n::\n\n   pip install janggu\n\nThe janggu neural network model depends on tensorflow which\nyou have to install depending on whether you want to use GPU\nsupport or CPU only. To install tensorflow type\n\n::\n\n   conda install tensorflow  # or tensorflow-gpu\n\nFurther information regarding the installation of tensorflow can be found on\nthe official `tensorflow webpage <https://www.tensorflow.org>`_\n\nTo verify that the installation works try to run the example contained in the\njanggu package as follows\n\n::\n\n   git clone https://github.com/BIMSBbioinfo/janggu\n   cd janggu\n   python ./src/examples/classify_fasta.py single\n\nA model is then trained to predict the class labels of two sets of toy sequencesby scanning the forward strand for sequence patterns and using an ordinary mono-nucleotide one-hot sequence encoding.\nThe entire training process takes a few minutes on CPU backend.\nEventually, some example prediction scores are shown for Oct4 and Mafk sequences. The accuracy should be around 85% and individual example prediction scores should tend to be higher for Oct4 than for Mafk.\n\nYou may also try to rerun the training by evaluating sequences features on both\nstrands and using higher-order sequence encoding using i.e. the command-line arguments: `dnaconv -order 2`.\nAccuracies and prediction scores for the individual example sequences should improve compared to the previous example.\n\n\n\nChangelog\n=========\n\n0.9.7 (2020-05-07)\n------------------\n\n- Performance improvement for loading BED files.\n- If no binsize is supplied, the binsize is detected automatically as the longest interval in the roi. Previously automatic detection was only offered if all intervals were of equal length, otherwise, a binsize needed to be specified manually.\n\n0.9.6 (2020-02-26)\n------------------\n\n- Retired support for python 2.7\n- RandomShift wrapper for data augmentation applied to DNA/Protein sequences was added by (thanks to @remomomo).\n- Bedgraph files can be read using Cover.create_from_bed\n- Improved efficiency of Cover.export_to_bigwig\n- Improved efficiency of Cover.create_from_bed\n- Internal refactoring\n\n0.9.5 (2019-10-17)\n------------------\n\n- Variant effect prediction: added annotation argument which enables strand-specific variant effect predictions using the strandedness of features in the annotation file.\n- Variant effect prediction: added ignore_reference_match argument which enables ignores mismatching nucleotides between the VCF reference base and the reference genome. By default, variant effects are only evaluated if the nucleotides agree in the reference genome and the VCF file.\n- Added file validity check\n- Added option to control verbosity \n- Improved efficiency for reading BAM and BIGWIG files\n- Create a new cachefile with random_state only for not storing the whole genome\n- Relaxed constraint for using resolution > 1 with ROI intervals. Still the interval starts have to be divisible by the resolution. Otherwise, weird rounding errors might occur.\n- Fixed issue due to different numbers of network output layers.\n- Added seperate dataversion to better control when cache files need to be reloaded from scratch.\n\n0.9.4 (2019-07-15)\n------------------\n\n- Added SqueezeDim wrapper for compatibility with sklearn\n- Added Transpose wrapper, replaces channel_last option of the datasets\n- Loading paired-end bam-files with pairedend='5pend' option counts both ends now.\n- resolution option added to create_from_array\n- Relaxed restriction for sequence feature order\n- Cover access via interval now returns nucleotide-resolution data regardless of the store_whole_genome option to ensure consistency.\n- Refactoring\n\n\n0.9.3 (2019-07-08)\n------------------\n\n- View mechanism added which allows to reuse the same dataset for different purposes, e.g. training set and test set.\n- Added a dataset randomization which allows to internally randomize the data in order to avoid having to use shuffle=True with the fit method. This allows fetch randomized data in coherent chunks from hdf5 format files which improves access time.\n- Added lazy loading mechanism for DNA and BED files, which defer the determination of the genome size to the dataset creation phase, but does not perform it when loading cached files to improve reload time.\n- Caching logic improved in order to maximize the amount of reusability of dataset. For example, when the whole genome is loaded, the data can later be reloaded with different binsizes.\n- Variant effect prediction functionality added.\n- Improved efficiency for loading coverage from an array.\n- Added axis option to ReduceDim\n- Added Track classes to improve flexibility on plotGenomeTrack\n\n0.9.2 (2019-05-04)\n------------------\n\n- Bugfix: Bioseq caching mechanism fixed.\n\n0.9.1 (2019-05-03)\n------------------\n\n- Removed HTSeq dependence in favour of pybedtools for parsing BED, GFF, etc. This also introduces the requirement to have bedtools installed on the system, but it allows to parse BED-like files faster and more conveniently.\n- Internal rearrangements for GenomicArray store_whole_genome=False. Now the data is stored as one array in a dict-like handle with the dummy key 'data' rather than storing the data in a fragmented fashion using as key-values the genomic interval and the respective coverages associated with them. This makes storage and processing more efficient.\n- Bugfix: added conditions property to wrapper datasets.\n\n0.9.0 (2019-03-20)\n------------------\n\nAdded various features and bug fixes:\n\nChanges in janggu.data\n\n- Added new dataset wrapper to remove NaNs: NanToNumConverter\n- Added new dataset wrappers for data augmentation: RandomOrientation, RandomSignalScale\n- Adapted ReduceDim wrapper: added aggregator argument\n- plotGenomeTrack added figsize option\n- plotGenomeTrack added other plot types, including heatmap and seqplot.\n- plotGenomeTrack refactoring of internal code\n- Bioseq bugfix: Fixed issue for reverse complementing N's in the sequence.\n- GenomicArray: condition, order, resolution are not read from the cache anymore, but from the arguments to avoid inconsistencies\n- Normalization of Cover can handle a list of normalizer callables which are applied in turn\n- Normaliation and Transformation: Added PercentileTrimming, RegionLengthNormalization, LogTransform\n- ZScore and ZScoreLog do not apply RegionLengthNormalization by default anymore.\n- janggu.data version-aware caching of datasets included\n- Added copy method for janggu datasets.\n- split_train_test refactored\n- removed obsolete transformations attribute from the datasets\n- Adapted the documentation\n- Refactoring according to suggestions from isort and pylint\n\nChanges in janggu\n\n- Added input_attribution via integrated gradients for feature importance assignment\n- Performance scoring by name for Janggu.evaluate for a number common metrices, including ROC, PRC, correlation, variance explained, etc.\n- training.log is stored by default for each model\n- Added model_from_json, model_from_yaml wrappers\n- inputlayer decorator only instantiates Input layers if inputs == None, which makes the use of inputlayer less restrictive when using nested functions\n- Added create_model method to create a keras model directly\n- Adapted the documentation\n- Refactoring according to suggestions from isort and pylint\n\n\n0.8.6 (2019-03-03)\n------------------\n\n- Bugfix for ROIs that reach beyond the chromosome when loading Bioseq datasets. Now, zero-padding is performed for intervals that stretch over the sequence ends.\n\n0.8.5 (2019-01-09)\n------------------\n\n- Updated abstract, added logo\n- Utility: janggutrim command line tool for cutting bed file regions to avoid unwanted rounding effects. If rounding issues are detected an error is raised.\n- Caching mechanism revisited. Caching of datasets is based on determining the sha256 hash of the dataset. If the data or some parameters change, the files are automatically reloaded. Consequently, the arguments overwrite and datatags become obsolete and have been marked for deprecation.\n- Refactored access of GenomicArray\n- Added ReduceDim wrapper to convert a 4D Cover object to a 2D table-like object.\n\n0.8.4 (2018-12-11)\n------------------\n\n- Updated installation instructions in the readme\n\n0.8.3 (2018-12-05)\n------------------\n\n- Fixed issues for loading SparseGenomicArray\n- Made GenomicIndexer.filter_by_region aware of flank\n- Fixed BedLoader of partially overlapping ROI and bedfiles issue using filter_by_region.\n- Adapted classifier, license and keywords in setup.py\n- Fixed hyperlinks\n\n0.8.2 (2018-12-04)\n------------------\n\n- Bugfix for zero-padding functionality\n- Added ndim for keras compatibility\n\n0.8.1 (2018-12-03)\n------------------\n\n- Bugfix in GenomicIndexer.create_from_region\n\n0.8.0 (2018-12-02)\n------------------\n\n- Improved test coverage\n- Improved linter issues\n- Bugs fixed\n- Improved documentation for scorers\n- Removed kwargs for scorers and exporters\n- Adapted exporters to classes\n\n\n0.7.0 (2018-12-01)\n------------------\n\n- First public version\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/BIMSBbioinfo/janggu", "keywords": "genomics,epigenomics,bioinformatics,deep learning,machine learning", "license": "GPL-3.0", "maintainer": "", "maintainer_email": "", "name": "janggu", "package_url": "https://pypi.org/project/janggu/", "platform": "", "project_url": "https://pypi.org/project/janggu/", "project_urls": {"Homepage": "https://github.com/BIMSBbioinfo/janggu"}, "release_url": "https://pypi.org/project/janggu/0.9.7/", "requires_dist": ["numpy", "pandas", "Biopython", "keras (<2.3.0)", "h5py", "pybedtools", "pydot", "pysam (<=0.15.3)", "pyBigWig", "progress", "matplotlib", "seaborn", "scikit-learn", "scipy", "tensorflow ; extra == 'tf'", "tensorflow-gpu ; extra == 'tf_gpu'"], "requires_python": "", "summary": "Utilities and datasets for deep learning in genomics", "version": "0.9.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"Janggu logo\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d75f1a4e15e2cbb0927ab9c2678310e024bab53d/6a616e6767756865782e706e67\" width=\"40%\">\n<p>Janggu is a python package that facilitates deep learning in the context of\ngenomics. The package is freely available under a GPL-3.0 license.</p>\n<img alt=\"Janggu visual abstract\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1f80dbc96032f496a36695f8d9b4f95bfed51d0a/4a616e6767752d76697341627374726163742e706e67\" width=\"100%\">\n<p>In particular, the package allows for easy access to\ntypical <strong>Genomics data formats</strong>\nand <strong>out-of-the-box evaluation</strong> (for keras models specifically) so that you can concentrate\non designing the neural network architecture for the purpose\nof quickly testing biological hypothesis.\nA comprehensive documentation is available <a href=\"https://janggu.readthedocs.io/en/latest\" rel=\"nofollow\">here</a>.</p>\n<div id=\"hallmarks-of-janggu\">\n<h2>Hallmarks of Janggu:</h2>\n<ol>\n<li>Janggu provides special <strong>Genomics datasets</strong> that allow you to access raw data in FASTA, BAM, BIGWIG, BED and GFF file format.</li>\n<li>Various <strong>normalization</strong> procedures are supported for dealing with of the genomics dataset, including \u2018TPM\u2019, \u2018zscore\u2019 or custom normalizers.</li>\n<li>Biological features can be represented in terms of higher-order sequence features, e.g. di-nucleotide based features.</li>\n<li>The dataset objects are directly consumable with neural networks for example implemented using <a href=\"https://keras.io\" rel=\"nofollow\">keras</a> or using <a href=\"https://scikit-learn.org/stable/index.html\" rel=\"nofollow\">scikit-learn</a> (see src/examples in this repository).</li>\n<li>Numpy format output of a keras model can be converted to represent genomic coverage tracks, which allows exporting the predictions as BIGWIG files and visualization of genome browser-like plots.</li>\n<li>Genomic datasets can be stored in various ways, including as numpy array, sparse dataset or in hdf5 format.</li>\n<li>Caching of Genomic datasets avoids time consuming preprocessing steps and facilitates fast reloading.</li>\n<li>Janggu provides a wrapper for <a href=\"https://keras.io\" rel=\"nofollow\">keras</a> models with built-in logging functionality and automatized result evaluation.</li>\n<li>Janggu supports input feature importance attribution using the integrated gradients method and variant effect prediction assessment.</li>\n<li>Janggu provides a utilities such as keras layer for scanning both DNA strands for motif occurrences.</li>\n</ol>\n</div>\n<div id=\"getting-started\">\n<h2>Getting started</h2>\n<p>Janggu makes it easy to access data from genomic file formats and utilize it for\nmachine learning purposes.</p>\n<pre><span class=\"n\">dna</span> <span class=\"o\">=</span> <span class=\"n\">Bioseq</span><span class=\"o\">.</span><span class=\"n\">create_from_genome</span><span class=\"p\">(</span><span class=\"s1\">'dna'</span><span class=\"p\">,</span> <span class=\"n\">refgenome</span><span class=\"o\">=&lt;</span><span class=\"n\">refgenome</span><span class=\"o\">.</span><span class=\"n\">fa</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"n\">roi</span><span class=\"o\">=&lt;</span><span class=\"n\">roi</span><span class=\"o\">.</span><span class=\"n\">bed</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n<span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">Cover</span><span class=\"o\">.</span><span class=\"n\">create_from_bed</span><span class=\"p\">(</span><span class=\"s1\">'labels'</span><span class=\"p\">,</span> <span class=\"n\">bedfiles</span><span class=\"o\">=&lt;</span><span class=\"n\">labels</span><span class=\"o\">.</span><span class=\"n\">bed</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"n\">roi</span><span class=\"o\">=&lt;</span><span class=\"n\">roi</span><span class=\"o\">.</span><span class=\"n\">bed</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n\n<span class=\"n\">kerasmodel</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">dna</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">)</span>\n</pre>\n<p>A range of examples can be found in \u2018./src/examples\u2019 of this repository,\nwhich includes jupyter notebooks that illustrate Janggu\u2019s functionality\nand how it can be used with popular deep learning frameworks, including\nkeras, sklearn or pytorch.</p>\n</div>\n<div id=\"why-the-name-janggu\">\n<h2>Why the name Janggu?</h2>\n<p><a href=\"https://en.wikipedia.org/wiki/Janggu\" rel=\"nofollow\">Janggu</a> is a Korean percussion\ninstrument that looks like an hourglass.</p>\n<p>Like the two ends of the instrument, the philosophy of the\nJanggu package is to help with the two ends of a\ndeep learning application in genomics,\nnamely data acquisition and evaluation.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>A list of python dependencies is defined in <cite>setup.py</cite>.\nAdditionally, <a href=\"https://bedtools.readthedocs.io/\" rel=\"nofollow\">bedtools</a> is required for <cite>pybedtools</cite> which <cite>janggu</cite> depends on.</p>\n<p>The simplest way to install janggu is via the conda package management system.\nAssuming you have already installed conda, create a new environment\nand type</p>\n<pre>pip install janggu\n</pre>\n<p>The janggu neural network model depends on tensorflow which\nyou have to install depending on whether you want to use GPU\nsupport or CPU only. To install tensorflow type</p>\n<pre>conda install tensorflow  # or tensorflow-gpu\n</pre>\n<p>Further information regarding the installation of tensorflow can be found on\nthe official <a href=\"https://www.tensorflow.org\" rel=\"nofollow\">tensorflow webpage</a></p>\n<p>To verify that the installation works try to run the example contained in the\njanggu package as follows</p>\n<pre>git clone https://github.com/BIMSBbioinfo/janggu\ncd janggu\npython ./src/examples/classify_fasta.py single\n</pre>\n<p>A model is then trained to predict the class labels of two sets of toy sequencesby scanning the forward strand for sequence patterns and using an ordinary mono-nucleotide one-hot sequence encoding.\nThe entire training process takes a few minutes on CPU backend.\nEventually, some example prediction scores are shown for Oct4 and Mafk sequences. The accuracy should be around 85% and individual example prediction scores should tend to be higher for Oct4 than for Mafk.</p>\n<p>You may also try to rerun the training by evaluating sequences features on both\nstrands and using higher-order sequence encoding using i.e. the command-line arguments: <cite>dnaconv -order 2</cite>.\nAccuracies and prediction scores for the individual example sequences should improve compared to the previous example.</p>\n</div>\n<div id=\"changelog\">\n<h3>Changelog</h3>\n</div>\n</div>\n<div id=\"id2\">\n<h2>0.9.7 (2020-05-07)</h2>\n<ul>\n<li>Performance improvement for loading BED files.</li>\n<li>If no binsize is supplied, the binsize is detected automatically as the longest interval in the roi. Previously automatic detection was only offered if all intervals were of equal length, otherwise, a binsize needed to be specified manually.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h2>0.9.6 (2020-02-26)</h2>\n<ul>\n<li>Retired support for python 2.7</li>\n<li>RandomShift wrapper for data augmentation applied to DNA/Protein sequences was added by (thanks to @remomomo).</li>\n<li>Bedgraph files can be read using Cover.create_from_bed</li>\n<li>Improved efficiency of Cover.export_to_bigwig</li>\n<li>Improved efficiency of Cover.create_from_bed</li>\n<li>Internal refactoring</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h2>0.9.5 (2019-10-17)</h2>\n<ul>\n<li>Variant effect prediction: added annotation argument which enables strand-specific variant effect predictions using the strandedness of features in the annotation file.</li>\n<li>Variant effect prediction: added ignore_reference_match argument which enables ignores mismatching nucleotides between the VCF reference base and the reference genome. By default, variant effects are only evaluated if the nucleotides agree in the reference genome and the VCF file.</li>\n<li>Added file validity check</li>\n<li>Added option to control verbosity</li>\n<li>Improved efficiency for reading BAM and BIGWIG files</li>\n<li>Create a new cachefile with random_state only for not storing the whole genome</li>\n<li>Relaxed constraint for using resolution &gt; 1 with ROI intervals. Still the interval starts have to be divisible by the resolution. Otherwise, weird rounding errors might occur.</li>\n<li>Fixed issue due to different numbers of network output layers.</li>\n<li>Added seperate dataversion to better control when cache files need to be reloaded from scratch.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h2>0.9.4 (2019-07-15)</h2>\n<ul>\n<li>Added SqueezeDim wrapper for compatibility with sklearn</li>\n<li>Added Transpose wrapper, replaces channel_last option of the datasets</li>\n<li>Loading paired-end bam-files with pairedend=\u20195pend\u2019 option counts both ends now.</li>\n<li>resolution option added to create_from_array</li>\n<li>Relaxed restriction for sequence feature order</li>\n<li>Cover access via interval now returns nucleotide-resolution data regardless of the store_whole_genome option to ensure consistency.</li>\n<li>Refactoring</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h2>0.9.3 (2019-07-08)</h2>\n<ul>\n<li>View mechanism added which allows to reuse the same dataset for different purposes, e.g. training set and test set.</li>\n<li>Added a dataset randomization which allows to internally randomize the data in order to avoid having to use shuffle=True with the fit method. This allows fetch randomized data in coherent chunks from hdf5 format files which improves access time.</li>\n<li>Added lazy loading mechanism for DNA and BED files, which defer the determination of the genome size to the dataset creation phase, but does not perform it when loading cached files to improve reload time.</li>\n<li>Caching logic improved in order to maximize the amount of reusability of dataset. For example, when the whole genome is loaded, the data can later be reloaded with different binsizes.</li>\n<li>Variant effect prediction functionality added.</li>\n<li>Improved efficiency for loading coverage from an array.</li>\n<li>Added axis option to ReduceDim</li>\n<li>Added Track classes to improve flexibility on plotGenomeTrack</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h2>0.9.2 (2019-05-04)</h2>\n<ul>\n<li>Bugfix: Bioseq caching mechanism fixed.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h2>0.9.1 (2019-05-03)</h2>\n<ul>\n<li>Removed HTSeq dependence in favour of pybedtools for parsing BED, GFF, etc. This also introduces the requirement to have bedtools installed on the system, but it allows to parse BED-like files faster and more conveniently.</li>\n<li>Internal rearrangements for GenomicArray store_whole_genome=False. Now the data is stored as one array in a dict-like handle with the dummy key \u2018data\u2019 rather than storing the data in a fragmented fashion using as key-values the genomic interval and the respective coverages associated with them. This makes storage and processing more efficient.</li>\n<li>Bugfix: added conditions property to wrapper datasets.</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h2>0.9.0 (2019-03-20)</h2>\n<p>Added various features and bug fixes:</p>\n<p>Changes in janggu.data</p>\n<ul>\n<li>Added new dataset wrapper to remove NaNs: NanToNumConverter</li>\n<li>Added new dataset wrappers for data augmentation: RandomOrientation, RandomSignalScale</li>\n<li>Adapted ReduceDim wrapper: added aggregator argument</li>\n<li>plotGenomeTrack added figsize option</li>\n<li>plotGenomeTrack added other plot types, including heatmap and seqplot.</li>\n<li>plotGenomeTrack refactoring of internal code</li>\n<li>Bioseq bugfix: Fixed issue for reverse complementing N\u2019s in the sequence.</li>\n<li>GenomicArray: condition, order, resolution are not read from the cache anymore, but from the arguments to avoid inconsistencies</li>\n<li>Normalization of Cover can handle a list of normalizer callables which are applied in turn</li>\n<li>Normaliation and Transformation: Added PercentileTrimming, RegionLengthNormalization, LogTransform</li>\n<li>ZScore and ZScoreLog do not apply RegionLengthNormalization by default anymore.</li>\n<li>janggu.data version-aware caching of datasets included</li>\n<li>Added copy method for janggu datasets.</li>\n<li>split_train_test refactored</li>\n<li>removed obsolete transformations attribute from the datasets</li>\n<li>Adapted the documentation</li>\n<li>Refactoring according to suggestions from isort and pylint</li>\n</ul>\n<p>Changes in janggu</p>\n<ul>\n<li>Added input_attribution via integrated gradients for feature importance assignment</li>\n<li>Performance scoring by name for Janggu.evaluate for a number common metrices, including ROC, PRC, correlation, variance explained, etc.</li>\n<li>training.log is stored by default for each model</li>\n<li>Added model_from_json, model_from_yaml wrappers</li>\n<li>inputlayer decorator only instantiates Input layers if inputs == None, which makes the use of inputlayer less restrictive when using nested functions</li>\n<li>Added create_model method to create a keras model directly</li>\n<li>Adapted the documentation</li>\n<li>Refactoring according to suggestions from isort and pylint</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h2>0.8.6 (2019-03-03)</h2>\n<ul>\n<li>Bugfix for ROIs that reach beyond the chromosome when loading Bioseq datasets. Now, zero-padding is performed for intervals that stretch over the sequence ends.</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h2>0.8.5 (2019-01-09)</h2>\n<ul>\n<li>Updated abstract, added logo</li>\n<li>Utility: janggutrim command line tool for cutting bed file regions to avoid unwanted rounding effects. If rounding issues are detected an error is raised.</li>\n<li>Caching mechanism revisited. Caching of datasets is based on determining the sha256 hash of the dataset. If the data or some parameters change, the files are automatically reloaded. Consequently, the arguments overwrite and datatags become obsolete and have been marked for deprecation.</li>\n<li>Refactored access of GenomicArray</li>\n<li>Added ReduceDim wrapper to convert a 4D Cover object to a 2D table-like object.</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h2>0.8.4 (2018-12-11)</h2>\n<ul>\n<li>Updated installation instructions in the readme</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h2>0.8.3 (2018-12-05)</h2>\n<ul>\n<li>Fixed issues for loading SparseGenomicArray</li>\n<li>Made GenomicIndexer.filter_by_region aware of flank</li>\n<li>Fixed BedLoader of partially overlapping ROI and bedfiles issue using filter_by_region.</li>\n<li>Adapted classifier, license and keywords in setup.py</li>\n<li>Fixed hyperlinks</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h2>0.8.2 (2018-12-04)</h2>\n<ul>\n<li>Bugfix for zero-padding functionality</li>\n<li>Added ndim for keras compatibility</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h2>0.8.1 (2018-12-03)</h2>\n<ul>\n<li>Bugfix in GenomicIndexer.create_from_region</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h2>0.8.0 (2018-12-02)</h2>\n<ul>\n<li>Improved test coverage</li>\n<li>Improved linter issues</li>\n<li>Bugs fixed</li>\n<li>Improved documentation for scorers</li>\n<li>Removed kwargs for scorers and exporters</li>\n<li>Adapted exporters to classes</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h2>0.7.0 (2018-12-01)</h2>\n<ul>\n<li>First public version</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 7187855, "releases": {"0.8.0": [{"comment_text": "", "digests": {"md5": "c03d41ae75af5722c8fdb99c3dab50b9", "sha256": "47cbe6f2649c55ff3d4ce7d8737943c1d924d9879505af481990eed1fdf8ee9f"}, "downloads": -1, "filename": "janggu-0.8.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "c03d41ae75af5722c8fdb99c3dab50b9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1258294, "upload_time": "2018-12-02T21:47:10", "upload_time_iso_8601": "2018-12-02T21:47:10.444659Z", "url": "https://files.pythonhosted.org/packages/85/9b/9f8854959f566fcdffd2f8bef7d521d0db353458ad6646281082073a71a4/janggu-0.8.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb195d0f4b43d72f6d9f4c4478785c88", "sha256": "bb013eeaafc937c2ff40526868bd1ff5e4e51f0970fc1cec23bae0af14efd1f9"}, "downloads": -1, "filename": "janggu-0.8.0.tar.gz", "has_sig": true, "md5_digest": "fb195d0f4b43d72f6d9f4c4478785c88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1710506, "upload_time": "2018-12-02T21:47:15", "upload_time_iso_8601": "2018-12-02T21:47:15.255329Z", "url": "https://files.pythonhosted.org/packages/51/4d/90a655479d10e1fee5aed78bb5388c0c01cf10be8c468f0f423583576d29/janggu-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "51e41654dadc4bfeffef53ff838998a0", "sha256": "ea08e93846e73432c63e24776e79163969633b4196f5cad66759114f0ebea309"}, "downloads": -1, "filename": "janggu-0.8.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "51e41654dadc4bfeffef53ff838998a0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1258285, "upload_time": "2018-12-03T21:14:44", "upload_time_iso_8601": "2018-12-03T21:14:44.461312Z", "url": "https://files.pythonhosted.org/packages/c4/a3/990ed7d7729c9259ceb5e24a16535a4efe6d744cc10df14fc9a9540bcb28/janggu-0.8.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b557c7d875b9104efdf90d1631e94772", "sha256": "3670431710696d1d00ca1e1e507356989cb5b171e4615e6ba63d2ef6270bccd5"}, "downloads": -1, "filename": "janggu-0.8.1.tar.gz", "has_sig": true, "md5_digest": "b557c7d875b9104efdf90d1631e94772", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1710705, "upload_time": "2018-12-03T21:14:48", "upload_time_iso_8601": "2018-12-03T21:14:48.451495Z", "url": "https://files.pythonhosted.org/packages/00/7f/23d0dc03527ec82d81d3c36b03a10d3c89fc04f016471f306e5e8d920e1e/janggu-0.8.1.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "b4b1cf41b599ed530046369a9937dd34", "sha256": "b1dd680362eb3c656d2362c55a3b2c56e1c3ae76976139d829b25318e985e661"}, "downloads": -1, "filename": "janggu-0.8.3-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "b4b1cf41b599ed530046369a9937dd34", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1258911, "upload_time": "2018-12-05T22:01:45", "upload_time_iso_8601": "2018-12-05T22:01:45.856491Z", "url": "https://files.pythonhosted.org/packages/88/57/98c3fb6b32e8b5310040729754df7c396742b0bded946359121efc79a163/janggu-0.8.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "219d095baf0f9349566469d872e5c9e1", "sha256": "a3e4a1b9b31dc7a86b5f2ad273a52e1173ddb6bd2a273bb3f74b457205935302"}, "downloads": -1, "filename": "janggu-0.8.3.tar.gz", "has_sig": true, "md5_digest": "219d095baf0f9349566469d872e5c9e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1711478, "upload_time": "2018-12-05T22:01:49", "upload_time_iso_8601": "2018-12-05T22:01:49.990571Z", "url": "https://files.pythonhosted.org/packages/a5/67/46e606b0c1106d499bbb95a555867900af09d8517334f8a397ab79806bd2/janggu-0.8.3.tar.gz", "yanked": false}], "0.8.4": [{"comment_text": "", "digests": {"md5": "71b9a23a04eeda5ac8f136de3f78e47c", "sha256": "c4bee3f7bbb45f8bd3d1309002bc0ade0afab8d1726b19e031c82339f3b95471"}, "downloads": -1, "filename": "janggu-0.8.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "71b9a23a04eeda5ac8f136de3f78e47c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1258901, "upload_time": "2018-12-11T15:27:32", "upload_time_iso_8601": "2018-12-11T15:27:32.110453Z", "url": "https://files.pythonhosted.org/packages/72/d4/9d02ac6009bba6cadcdcab1b247f300b95654cba959f6c4c1170121f404b/janggu-0.8.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d871ed3b62c2079293d54b05781b10e", "sha256": "1f87a131436fda7084f13bed865c037480502fcb3604eff79179defb5ae33d1e"}, "downloads": -1, "filename": "janggu-0.8.4.tar.gz", "has_sig": false, "md5_digest": "4d871ed3b62c2079293d54b05781b10e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1717729, "upload_time": "2018-12-11T15:27:37", "upload_time_iso_8601": "2018-12-11T15:27:37.009845Z", "url": "https://files.pythonhosted.org/packages/6f/28/08dde9fa6e28ac42a82bc6cd5779175cbd95893bb9522efdc4ea9692a1bd/janggu-0.8.4.tar.gz", "yanked": false}], "0.8.5": [{"comment_text": "", "digests": {"md5": "415ed31f5e668e4a5e90393c50dba45f", "sha256": "b86ed0db665d7584630743f0537f07c646269054a5ae1208cfe86e3420cffc35"}, "downloads": -1, "filename": "janggu-0.8.5-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "415ed31f5e668e4a5e90393c50dba45f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1252461, "upload_time": "2019-01-09T14:33:36", "upload_time_iso_8601": "2019-01-09T14:33:36.845541Z", "url": "https://files.pythonhosted.org/packages/7d/08/8858b0ccfab6bbb09c2e10f793c4d0c47721caf371e1e2ba034425e7bbc0/janggu-0.8.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5dcef8db6f7c49c6fe02ceff7dc8ab6f", "sha256": "b8ad87f64f0f2679d4cb2c2a66f106b4e19041d314e2a4a01bc50a46921c81b6"}, "downloads": -1, "filename": "janggu-0.8.5.tar.gz", "has_sig": true, "md5_digest": "5dcef8db6f7c49c6fe02ceff7dc8ab6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1809460, "upload_time": "2019-01-09T14:33:41", "upload_time_iso_8601": "2019-01-09T14:33:41.856475Z", "url": "https://files.pythonhosted.org/packages/35/27/98d802aba7590375381ce97944a0cddf019a1ab78266fa16d51289d96b69/janggu-0.8.5.tar.gz", "yanked": false}], "0.8.6": [{"comment_text": "", "digests": {"md5": "cfa9be7a340a2e79e9a9b9d0d4e063f2", "sha256": "f20d75e8ef7692f5eb639157394939af3ab7b3f3923bdcae3ab15b3325b55518"}, "downloads": -1, "filename": "janggu-0.8.6-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "cfa9be7a340a2e79e9a9b9d0d4e063f2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1262620, "upload_time": "2019-03-03T18:59:05", "upload_time_iso_8601": "2019-03-03T18:59:05.651697Z", "url": "https://files.pythonhosted.org/packages/c3/69/138e3752fe32e0a2e42da1459a46fbcb98f3e09c03bc4f67f51a3394dd98/janggu-0.8.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db3d37a62c9b9d7c617f2f3e0bb4ec60", "sha256": "99a8caa3973d9f8cfca79cd2f5a0a78661e9161d9f7972f77d622f10069e67a5"}, "downloads": -1, "filename": "janggu-0.8.6.tar.gz", "has_sig": true, "md5_digest": "db3d37a62c9b9d7c617f2f3e0bb4ec60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1807103, "upload_time": "2019-03-03T18:59:10", "upload_time_iso_8601": "2019-03-03T18:59:10.124491Z", "url": "https://files.pythonhosted.org/packages/f0/45/b422ebe7e84cd3db28e1c8ee7f2f5e1f5306fc1102e94eaebfa7741f8217/janggu-0.8.6.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "559ea8f881b0b8ab8ae4eda280b40d1f", "sha256": "ff72f919053a1f44e6ec1633394369541bd2f562074fffd913cad9f0b4a2da46"}, "downloads": -1, "filename": "janggu-0.9.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "559ea8f881b0b8ab8ae4eda280b40d1f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1260917, "upload_time": "2019-03-20T13:36:40", "upload_time_iso_8601": "2019-03-20T13:36:40.228007Z", "url": "https://files.pythonhosted.org/packages/84/02/7b6a5bc0311e0f08b14e726425969fde8729ec5f6d24be79f4eec92facf3/janggu-0.9.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb04578da6e3232eda4bbcc52b2ceefa", "sha256": "cf41a09edccf929b5d3220bf052d293e8d7a14038e5098924c3be35c2adbaf66"}, "downloads": -1, "filename": "janggu-0.9.0.tar.gz", "has_sig": true, "md5_digest": "eb04578da6e3232eda4bbcc52b2ceefa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1820788, "upload_time": "2019-03-20T13:36:45", "upload_time_iso_8601": "2019-03-20T13:36:45.521245Z", "url": "https://files.pythonhosted.org/packages/6b/99/b9017629ea45e4a3ba4f225eb6def04cc2263a4d1dd93aeeeac2967157b0/janggu-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "fd0c117a27185f6d14af397139273d32", "sha256": "a1748b5e2cd61d64c295a18cfddfbb7c998fab08e60b6d3e7b66f2bdf3f724a0"}, "downloads": -1, "filename": "janggu-0.9.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "fd0c117a27185f6d14af397139273d32", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1270975, "upload_time": "2019-05-03T11:39:40", "upload_time_iso_8601": "2019-05-03T11:39:40.237084Z", "url": "https://files.pythonhosted.org/packages/1d/17/9d6fcfe841bd5b709b010d2cffd7b3b6e31ace7c655c472a6b02e0e5810f/janggu-0.9.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da0086d26f9850369d07b3d431f069db", "sha256": "0993263f5c8adea9de5b5a8ef992e678d7163e08d4ad62408aa6b5dfe500973a"}, "downloads": -1, "filename": "janggu-0.9.1.tar.gz", "has_sig": true, "md5_digest": "da0086d26f9850369d07b3d431f069db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1823488, "upload_time": "2019-05-03T11:39:45", "upload_time_iso_8601": "2019-05-03T11:39:45.468004Z", "url": "https://files.pythonhosted.org/packages/76/33/379cd8f7a5b0d4cdd6f8c6b0a3091362beb73b2cf37f32b235d5eb2729cd/janggu-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "3a58ca5e6fc33ccf5ede764fc981ae68", "sha256": "5a2bcd67512ed2d55423d3dc758e5d0d37945204263fa5542b9df4570cd82a7a"}, "downloads": -1, "filename": "janggu-0.9.2-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "3a58ca5e6fc33ccf5ede764fc981ae68", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1262729, "upload_time": "2019-05-04T21:27:16", "upload_time_iso_8601": "2019-05-04T21:27:16.428153Z", "url": "https://files.pythonhosted.org/packages/c1/4e/556c1921e3462e81a38b70daf8eb677e3f5437da47259c236b7953f0542f/janggu-0.9.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "84300df778c47b9e48f23dc9e1cc2e22", "sha256": "134ce4043773d4b22442522005b7b26f2bf743fe1b69e2f7a73ae865bd7a3fb4"}, "downloads": -1, "filename": "janggu-0.9.2.tar.gz", "has_sig": true, "md5_digest": "84300df778c47b9e48f23dc9e1cc2e22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1823525, "upload_time": "2019-05-04T21:27:33", "upload_time_iso_8601": "2019-05-04T21:27:33.617174Z", "url": "https://files.pythonhosted.org/packages/8f/dc/81d25c9fc35a14f04d078b2308395d3f5ec5dfbaa22b2041970b9272a6e5/janggu-0.9.2.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "ca2ca13023da490285e86fe402363263", "sha256": "ea3a266a157b089adc726244b5094cfac3547c496a94d3aac1a2d6b0b72073f2"}, "downloads": -1, "filename": "janggu-0.9.3-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "ca2ca13023da490285e86fe402363263", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1271974, "upload_time": "2019-07-08T13:07:53", "upload_time_iso_8601": "2019-07-08T13:07:53.344166Z", "url": "https://files.pythonhosted.org/packages/6e/e0/68549e68da9d2a9d7f5ce78f588ca72ac254926bd8b42ef7bbdc88e7c4d6/janggu-0.9.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7bb799e3c80d75c9b28761c53cd8cb62", "sha256": "3c2c69454c16dd454e200ae5622642426c2e4727daab7c8b9d8ffa11e84d834c"}, "downloads": -1, "filename": "janggu-0.9.3.tar.gz", "has_sig": true, "md5_digest": "7bb799e3c80d75c9b28761c53cd8cb62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4629135, "upload_time": "2019-07-08T13:07:59", "upload_time_iso_8601": "2019-07-08T13:07:59.817840Z", "url": "https://files.pythonhosted.org/packages/4d/f3/21a791183e7f49f29f4f4b9bfa74f6bf56b3d74defe333028fc5d808bb37/janggu-0.9.3.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "6bab2e7c2c9f3e3540bb537f4cca6115", "sha256": "a00713551779939007cfcd6b9dd877b1163c2af9ba416fb57fe1f6f7c1367d79"}, "downloads": -1, "filename": "janggu-0.9.4-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "6bab2e7c2c9f3e3540bb537f4cca6115", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1273163, "upload_time": "2019-07-15T19:22:46", "upload_time_iso_8601": "2019-07-15T19:22:46.415791Z", "url": "https://files.pythonhosted.org/packages/95/8e/d806ef23fdd0fa7a0b21953d2f5f620d0d41304713f0d5bfc3cea75ad0fe/janggu-0.9.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "016cf919aee076564da122e46332f6f4", "sha256": "6778cc753bb5e68f133ee7a27b9a1eb6e125c0e35bdb2ffd835b7a9a7ce8dbc5"}, "downloads": -1, "filename": "janggu-0.9.4.tar.gz", "has_sig": true, "md5_digest": "016cf919aee076564da122e46332f6f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4838298, "upload_time": "2019-07-15T19:23:02", "upload_time_iso_8601": "2019-07-15T19:23:02.116463Z", "url": "https://files.pythonhosted.org/packages/a9/dc/63f4d8ebaf0929e35016a13bc8d9c3a53364d79f2b8f8583e92aedcbb785/janggu-0.9.4.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "ead8dacfb3be1430afc97b7aa5cae57b", "sha256": "a856010587e6f3e988033e7e3ae8350f24cb1386b1f852a167b1ff50019604e9"}, "downloads": -1, "filename": "janggu-0.9.5-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "ead8dacfb3be1430afc97b7aa5cae57b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1283461, "upload_time": "2019-10-17T10:09:46", "upload_time_iso_8601": "2019-10-17T10:09:46.721144Z", "url": "https://files.pythonhosted.org/packages/7d/df/c60b5e3992f84f17dfee18bfe7f426664fb0d5e4bbe7598d7f6baa059111/janggu-0.9.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3082ddfa8559703388659e52b6b19719", "sha256": "6f43232c7a73e810fd4bc3845c3f9bedac6e9260c4e2b908ce7b52a8181d1475"}, "downloads": -1, "filename": "janggu-0.9.5.tar.gz", "has_sig": true, "md5_digest": "3082ddfa8559703388659e52b6b19719", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4842837, "upload_time": "2019-10-17T10:09:53", "upload_time_iso_8601": "2019-10-17T10:09:53.181850Z", "url": "https://files.pythonhosted.org/packages/e3/19/98269961729b2285167b5b15be5ec2374107147961a3fa12163a49b42e6f/janggu-0.9.5.tar.gz", "yanked": false}], "0.9.6": [{"comment_text": "", "digests": {"md5": "b15b191736228bb039a6b4ae79a9f464", "sha256": "54b91a486ac8a808b4d45272be8599c36d16eb4b279c1463441ed5d5b5234085"}, "downloads": -1, "filename": "janggu-0.9.6-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "b15b191736228bb039a6b4ae79a9f464", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1284799, "upload_time": "2020-02-26T12:47:02", "upload_time_iso_8601": "2020-02-26T12:47:02.143250Z", "url": "https://files.pythonhosted.org/packages/a1/61/fbe6ef8895838b15a14e4ab4d497a1a75572fc82695b69b1512775626372/janggu-0.9.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b75adc247b343bc467f31afad68af88", "sha256": "d7b5a55b5e0eda461db0b94ef4fb00937dbccd801df0a265e1637c203a9a2d98"}, "downloads": -1, "filename": "janggu-0.9.6.tar.gz", "has_sig": true, "md5_digest": "5b75adc247b343bc467f31afad68af88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4707723, "upload_time": "2020-02-26T12:47:08", "upload_time_iso_8601": "2020-02-26T12:47:08.662001Z", "url": "https://files.pythonhosted.org/packages/10/c6/96dc976fb1088974cd6785450960701853215c3d603e95c469ea61ee564f/janggu-0.9.6.tar.gz", "yanked": false}], "0.9.7": [{"comment_text": "", "digests": {"md5": "d08de4b4072544c8651f76997b270430", "sha256": "a490b0d6d4b1f011605e44b0dc763bf872f0ef99c475480c2f28641ba9c4cf6d"}, "downloads": -1, "filename": "janggu-0.9.7-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "d08de4b4072544c8651f76997b270430", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1284858, "upload_time": "2020-05-07T11:57:50", "upload_time_iso_8601": "2020-05-07T11:57:50.679287Z", "url": "https://files.pythonhosted.org/packages/e5/c5/5e80ed54e1bf0891c23cce82545c2603ccad6066c951b0948a7dfd740f7a/janggu-0.9.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2c4e7d40504a354a7116372eb323b16", "sha256": "aa9380c40d2f11b258f8e3123b5bc660f4c9d0d4dc19c6e0ba49b9ea5bfcb0cf"}, "downloads": -1, "filename": "janggu-0.9.7.tar.gz", "has_sig": true, "md5_digest": "f2c4e7d40504a354a7116372eb323b16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3506149, "upload_time": "2020-05-07T11:57:55", "upload_time_iso_8601": "2020-05-07T11:57:55.791457Z", "url": "https://files.pythonhosted.org/packages/a6/c5/59cba330effde6b06a366ecc0f0663471d27e4314cb5bcbd0ae24791402c/janggu-0.9.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d08de4b4072544c8651f76997b270430", "sha256": "a490b0d6d4b1f011605e44b0dc763bf872f0ef99c475480c2f28641ba9c4cf6d"}, "downloads": -1, "filename": "janggu-0.9.7-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "d08de4b4072544c8651f76997b270430", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1284858, "upload_time": "2020-05-07T11:57:50", "upload_time_iso_8601": "2020-05-07T11:57:50.679287Z", "url": "https://files.pythonhosted.org/packages/e5/c5/5e80ed54e1bf0891c23cce82545c2603ccad6066c951b0948a7dfd740f7a/janggu-0.9.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2c4e7d40504a354a7116372eb323b16", "sha256": "aa9380c40d2f11b258f8e3123b5bc660f4c9d0d4dc19c6e0ba49b9ea5bfcb0cf"}, "downloads": -1, "filename": "janggu-0.9.7.tar.gz", "has_sig": true, "md5_digest": "f2c4e7d40504a354a7116372eb323b16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3506149, "upload_time": "2020-05-07T11:57:55", "upload_time_iso_8601": "2020-05-07T11:57:55.791457Z", "url": "https://files.pythonhosted.org/packages/a6/c5/59cba330effde6b06a366ecc0f0663471d27e4314cb5bcbd0ae24791402c/janggu-0.9.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:16 2020"}