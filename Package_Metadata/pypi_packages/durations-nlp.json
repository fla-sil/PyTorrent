{"info": {"author": "Tim Wedde", "author_email": "timwedde@icloud.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# durations_nlp\n\n[![CircleCI](https://circleci.com/gh/timwedde/durations_nlp.svg?style=svg)](https://circleci.com/gh/timwedde/durations_nlp)\n[![codecov](https://codecov.io/gh/timwedde/durations_nlp/branch/master/graph/badge.svg)](https://codecov.io/gh/timwedde/durations_nlp)\n[![Downloads](https://pepy.tech/badge/durations_nlp)](https://pepy.tech/project/durations_nlp)\n\nA python durations parsing library, providing a straight-forward API to parse duration string representations such as `1d`, `1 day 2 hours` or `2 days 3h 26m 52s` and convert them to numeric values.\n\n## What and Why\nIt's easier and more straight forward to read a duration expressed in natural language (at least for a human), as an expression rather than an amount. When writing configuration files for example:\n\n```yaml\ninterval: 3 hours\n```\n\nis easier to understand for a human than\n\n```yaml\ninterval: 10800  # seconds\n```\n\n## Installation\n\n`durations_nlp` can be installed via pip:\n```bash\n$ pip install durations_nlp\n```\n\n## Usage\nTo parse a duration string representation, just instantiate a Duration object and let it work for you. A Duration representation is composed of as many ``<value><scale>`` pairs as you need to express it:\n* A value is an integer amount.\n* A scale is a duration unit in it's short or long form (both singular and plural).\n* Duration pairs can be separated with sep characters and expressions such as `,` or `and`\n\n### Example Input\n\n* `1d`\n* `2 days`\n* `2 days and 4 hours`\n* `4M, 22d and 6hours`\n\n### Scales Reference\n\n* Century: `c`, `century`, `centuries`\n* Decade: `D`, `decade`, `decades`\n* Year: `y`, `year`, `Year`\n* Month: `M`, `month`, `months`\n* Week: `w`, `week`, `weeks`\n* Day: `d`, `day`, `days`\n* Hour: `h`, `hour`, `hours`\n* Minute:`m`, `minute`, `minutes`\n* Second: `s`, `second`, `seconds`\n* Milisecond: `ms`, `milisecond`, `miliseconds`\n\n### Usage Example\n\n```python\nfrom durations_nlp import Duration\n\none_hour = \"1hour\"\n\none_hour_duration = Duration(one_hour)\none_hour_duration.to_seconds()\n# >>> 3600.0\none_hour_duration.to_minutes()\n# >>> 60.0\n\n# You can even compose durations in their short\n# and long variations\ntwo_days_three_hours = \"2 days, 3h\"\ntwo_days_three_hours_duration = Duration(two_days_three_hours)\ntwo_days_three_hours_duration.to_seconds()\n# >>> 183600.0\ntwo_days_three_hours_duration.to_hours()\n# >>> 51.0\n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/timwedde/durations_nlp", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "durations-nlp", "package_url": "https://pypi.org/project/durations-nlp/", "platform": "", "project_url": "https://pypi.org/project/durations-nlp/", "project_urls": {"Homepage": "https://github.com/timwedde/durations_nlp", "Repository": "https://github.com/timwedde/durations_nlp"}, "release_url": "https://pypi.org/project/durations-nlp/0.4.0/", "requires_dist": null, "requires_python": ">=3.5,<4.0", "summary": "A python durations parsing library.", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>durations_nlp</h1>\n<p><a href=\"https://circleci.com/gh/timwedde/durations_nlp\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9da3f65fe3f742ea325a381860260f678213bb4d/68747470733a2f2f636972636c6563692e636f6d2f67682f74696d77656464652f6475726174696f6e735f6e6c702e7376673f7374796c653d737667\"></a>\n<a href=\"https://codecov.io/gh/timwedde/durations_nlp\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9a73936f904ac883a619ec0e5957f47bc027c549/68747470733a2f2f636f6465636f762e696f2f67682f74696d77656464652f6475726174696f6e735f6e6c702f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pepy.tech/project/durations_nlp\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/38f88174cde87ae81147e4a470af6e7d642a912c/68747470733a2f2f706570792e746563682f62616467652f6475726174696f6e735f6e6c70\"></a></p>\n<p>A python durations parsing library, providing a straight-forward API to parse duration string representations such as <code>1d</code>, <code>1 day 2 hours</code> or <code>2 days 3h 26m 52s</code> and convert them to numeric values.</p>\n<h2>What and Why</h2>\n<p>It's easier and more straight forward to read a duration expressed in natural language (at least for a human), as an expression rather than an amount. When writing configuration files for example:</p>\n<pre><span class=\"nt\">interval</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">3 hours</span>\n</pre>\n<p>is easier to understand for a human than</p>\n<pre><span class=\"nt\">interval</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">10800</span>  <span class=\"c1\"># seconds</span>\n</pre>\n<h2>Installation</h2>\n<p><code>durations_nlp</code> can be installed via pip:</p>\n<pre>$ pip install durations_nlp\n</pre>\n<h2>Usage</h2>\n<p>To parse a duration string representation, just instantiate a Duration object and let it work for you. A Duration representation is composed of as many <code>&lt;value&gt;&lt;scale&gt;</code> pairs as you need to express it:</p>\n<ul>\n<li>A value is an integer amount.</li>\n<li>A scale is a duration unit in it's short or long form (both singular and plural).</li>\n<li>Duration pairs can be separated with sep characters and expressions such as <code>,</code> or <code>and</code></li>\n</ul>\n<h3>Example Input</h3>\n<ul>\n<li><code>1d</code></li>\n<li><code>2 days</code></li>\n<li><code>2 days and 4 hours</code></li>\n<li><code>4M, 22d and 6hours</code></li>\n</ul>\n<h3>Scales Reference</h3>\n<ul>\n<li>Century: <code>c</code>, <code>century</code>, <code>centuries</code></li>\n<li>Decade: <code>D</code>, <code>decade</code>, <code>decades</code></li>\n<li>Year: <code>y</code>, <code>year</code>, <code>Year</code></li>\n<li>Month: <code>M</code>, <code>month</code>, <code>months</code></li>\n<li>Week: <code>w</code>, <code>week</code>, <code>weeks</code></li>\n<li>Day: <code>d</code>, <code>day</code>, <code>days</code></li>\n<li>Hour: <code>h</code>, <code>hour</code>, <code>hours</code></li>\n<li>Minute:<code>m</code>, <code>minute</code>, <code>minutes</code></li>\n<li>Second: <code>s</code>, <code>second</code>, <code>seconds</code></li>\n<li>Milisecond: <code>ms</code>, <code>milisecond</code>, <code>miliseconds</code></li>\n</ul>\n<h3>Usage Example</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">durations_nlp</span> <span class=\"kn\">import</span> <span class=\"n\">Duration</span>\n\n<span class=\"n\">one_hour</span> <span class=\"o\">=</span> <span class=\"s2\">\"1hour\"</span>\n\n<span class=\"n\">one_hour_duration</span> <span class=\"o\">=</span> <span class=\"n\">Duration</span><span class=\"p\">(</span><span class=\"n\">one_hour</span><span class=\"p\">)</span>\n<span class=\"n\">one_hour_duration</span><span class=\"o\">.</span><span class=\"n\">to_seconds</span><span class=\"p\">()</span>\n<span class=\"c1\"># &gt;&gt;&gt; 3600.0</span>\n<span class=\"n\">one_hour_duration</span><span class=\"o\">.</span><span class=\"n\">to_minutes</span><span class=\"p\">()</span>\n<span class=\"c1\"># &gt;&gt;&gt; 60.0</span>\n\n<span class=\"c1\"># You can even compose durations in their short</span>\n<span class=\"c1\"># and long variations</span>\n<span class=\"n\">two_days_three_hours</span> <span class=\"o\">=</span> <span class=\"s2\">\"2 days, 3h\"</span>\n<span class=\"n\">two_days_three_hours_duration</span> <span class=\"o\">=</span> <span class=\"n\">Duration</span><span class=\"p\">(</span><span class=\"n\">two_days_three_hours</span><span class=\"p\">)</span>\n<span class=\"n\">two_days_three_hours_duration</span><span class=\"o\">.</span><span class=\"n\">to_seconds</span><span class=\"p\">()</span>\n<span class=\"c1\"># &gt;&gt;&gt; 183600.0</span>\n<span class=\"n\">two_days_three_hours_duration</span><span class=\"o\">.</span><span class=\"n\">to_hours</span><span class=\"p\">()</span>\n<span class=\"c1\"># &gt;&gt;&gt; 51.0</span>\n</pre>\n\n          </div>"}, "last_serial": 6666847, "releases": {"0.4.0": [{"comment_text": "", "digests": {"md5": "79cdf731265590138aa123cb6e780be4", "sha256": "f9f3ccbdfd7673e673a5b2a86c85d5121a5506d742651d44aac82d98db54bc8e"}, "downloads": -1, "filename": "durations_nlp-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "79cdf731265590138aa123cb6e780be4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 7361, "upload_time": "2020-02-20T09:14:57", "upload_time_iso_8601": "2020-02-20T09:14:57.812442Z", "url": "https://files.pythonhosted.org/packages/7b/d1/2487a04ff0646d57d18bd65c8aaeb0ddb4385aa315df2092a4a8b48d5260/durations_nlp-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b048bfa5a9080070fdc2ebc18642c735", "sha256": "b36cac0e687218db51331b2c8d2d73d73831a4c4c2f137621cc31af3537d71e3"}, "downloads": -1, "filename": "durations_nlp-0.4.0.tar.gz", "has_sig": false, "md5_digest": "b048bfa5a9080070fdc2ebc18642c735", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 6011, "upload_time": "2020-02-20T09:14:59", "upload_time_iso_8601": "2020-02-20T09:14:59.742044Z", "url": "https://files.pythonhosted.org/packages/e3/f1/61790ef9a748fd30a7d3e1eaf6219eebd0aacc4b1533055cf090a43200fb/durations_nlp-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "79cdf731265590138aa123cb6e780be4", "sha256": "f9f3ccbdfd7673e673a5b2a86c85d5121a5506d742651d44aac82d98db54bc8e"}, "downloads": -1, "filename": "durations_nlp-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "79cdf731265590138aa123cb6e780be4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 7361, "upload_time": "2020-02-20T09:14:57", "upload_time_iso_8601": "2020-02-20T09:14:57.812442Z", "url": "https://files.pythonhosted.org/packages/7b/d1/2487a04ff0646d57d18bd65c8aaeb0ddb4385aa315df2092a4a8b48d5260/durations_nlp-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b048bfa5a9080070fdc2ebc18642c735", "sha256": "b36cac0e687218db51331b2c8d2d73d73831a4c4c2f137621cc31af3537d71e3"}, "downloads": -1, "filename": "durations_nlp-0.4.0.tar.gz", "has_sig": false, "md5_digest": "b048bfa5a9080070fdc2ebc18642c735", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 6011, "upload_time": "2020-02-20T09:14:59", "upload_time_iso_8601": "2020-02-20T09:14:59.742044Z", "url": "https://files.pythonhosted.org/packages/e3/f1/61790ef9a748fd30a7d3e1eaf6219eebd0aacc4b1533055cf090a43200fb/durations_nlp-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:59 2020"}