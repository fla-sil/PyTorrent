{"info": {"author": "Brian Wiborg", "author_email": "baccenfutter@c-base.org", "bugtrack_url": null, "classifiers": [], "description": "Neodym\r\n======\r\n\r\nNeodym is a thin message-bus wrapper around asyncore. It includes a client and\r\na server dispatcher, as well as an easily configurable message-bus. Json serves\r\nas the designated transport syntax.\r\n\r\n\r\nExamples\r\n========\r\n\r\nThis is a simple server:\r\n\r\n    import neodym\r\n    import logging\r\n\r\n    neodym.log_level = logging.DEBUG\r\n    baseConfig = neodym.baseConfig()\r\n    logging.basicConfig(**baseConfig)\r\n\r\n    neodym.register('echo', ['cargo'])\r\n    neodym.init()\r\n\r\n    server = neodym.Server(('127.0.0.1', 42742))\r\n    server.server_activate()\r\n\r\n    class EchoHandler(neodym.handler.Handler):\r\n        def handle(self, message, connection):\r\n            cargo = message.get_attr('cargo')\r\n            message.set_attr('cargo', str(cargo).upper())\r\n            connection.put(message)\r\n\r\n\r\n    echo_handler = EchoHandler('echo')\r\n    server.serve_forever()\r\n\r\nThis is a simple client:\r\n\r\n    import neodym\r\n    import logging\r\n    import time\r\n\r\n    neodym.log_level = logging.DEBUG\r\n    baseConfig = neodym.baseConfig()\r\n    logging.basicConfig(**baseConfig)\r\n\r\n    neodym.register('echo', ['cargo'])\r\n    neodym.init()\r\n\r\n    client = neodym.Client('127.0.0.1', 42742)\r\n    client.client_connect()\r\n\r\n    connection = client.connection()\r\n\r\n    message = neodym.message.Message('echo', ['foobar'])\r\n    connection.put(message)\r\n    client.update()\r\n\r\n    time.sleep(0.1)\r\n\r\n    client.update()\r\n\r\n\r\nLicense\r\n=======\r\n\r\nNeodym - A thin message-bus layer around asyncore.\r\nCopyright (C) 2013  Brian Wiborg <baccenfutter@c-base.org>\r\n\r\nThis program is free software: you can redistribute it and/or modify it under\r\nthe terms of the GNU Affero General Public License as published by the Free\r\nSoftware Foundation, either version 3 of the License, or (at your option) any\r\nlater version.\r\n\r\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY\r\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\r\nPARTICULAR PURPOSE.  See the GNU Affero General Public License for more\r\ndetails.\r\n\r\nYou should have received a copy of the GNU Affero General Public License along\r\nwith this program.  If not, see <http://www.gnu.org/licenses/>.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/NeoDym/", "keywords": "", "license": "LICENSE.txt", "maintainer": "", "maintainer_email": "", "name": "NeoDym", "package_url": "https://pypi.org/project/NeoDym/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/NeoDym/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/NeoDym/"}, "release_url": "https://pypi.org/project/NeoDym/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "A thin message-bus wrapper around asyncore.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Neodym\n<br>======\n<br>\n<br>Neodym is a thin message-bus wrapper around asyncore. It includes a client and\n<br>a server dispatcher, as well as an easily configurable message-bus. Json serves\n<br>as the designated transport syntax.\n<br>\n<br>\n<br>Examples\n<br>========\n<br>\n<br>This is a simple server:\n<br>\n<br>    import neodym\n<br>    import logging\n<br>\n<br>    neodym.log_level = logging.DEBUG\n<br>    baseConfig = neodym.baseConfig()\n<br>    logging.basicConfig(**baseConfig)\n<br>\n<br>    neodym.register('echo', ['cargo'])\n<br>    neodym.init()\n<br>\n<br>    server = neodym.Server(('127.0.0.1', 42742))\n<br>    server.server_activate()\n<br>\n<br>    class EchoHandler(neodym.handler.Handler):\n<br>        def handle(self, message, connection):\n<br>            cargo = message.get_attr('cargo')\n<br>            message.set_attr('cargo', str(cargo).upper())\n<br>            connection.put(message)\n<br>\n<br>\n<br>    echo_handler = EchoHandler('echo')\n<br>    server.serve_forever()\n<br>\n<br>This is a simple client:\n<br>\n<br>    import neodym\n<br>    import logging\n<br>    import time\n<br>\n<br>    neodym.log_level = logging.DEBUG\n<br>    baseConfig = neodym.baseConfig()\n<br>    logging.basicConfig(**baseConfig)\n<br>\n<br>    neodym.register('echo', ['cargo'])\n<br>    neodym.init()\n<br>\n<br>    client = neodym.Client('127.0.0.1', 42742)\n<br>    client.client_connect()\n<br>\n<br>    connection = client.connection()\n<br>\n<br>    message = neodym.message.Message('echo', ['foobar'])\n<br>    connection.put(message)\n<br>    client.update()\n<br>\n<br>    time.sleep(0.1)\n<br>\n<br>    client.update()\n<br>\n<br>\n<br>License\n<br>=======\n<br>\n<br>Neodym - A thin message-bus layer around asyncore.\n<br>Copyright (C) 2013  Brian Wiborg &lt;baccenfutter@c-base.org&gt;\n<br>\n<br>This program is free software: you can redistribute it and/or modify it under\n<br>the terms of the GNU Affero General Public License as published by the Free\n<br>Software Foundation, either version 3 of the License, or (at your option) any\n<br>later version.\n<br>\n<br>This program is distributed in the hope that it will be useful, but WITHOUT ANY\n<br>WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n<br>PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\n<br>details.\n<br>\n<br>You should have received a copy of the GNU Affero General Public License along\n<br>with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.\n          </div>"}, "last_serial": 855025, "releases": {"0.1.0": [], "0.2.1": [{"comment_text": "", "digests": {"md5": "e360a6f697cdef5bb1ac32e0e7b4d5f4", "sha256": "4a0ef35366a286797ae1a382b404ef11300c2234add1407cc30aa4553ef82f79"}, "downloads": -1, "filename": "NeoDym-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e360a6f697cdef5bb1ac32e0e7b4d5f4", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 19105, "upload_time": "2013-09-02T17:01:52", "upload_time_iso_8601": "2013-09-02T17:01:52.718426Z", "url": "https://files.pythonhosted.org/packages/ee/5e/475cfab08276733440b3b678b6f4ecd3d66dd6630a161add22606bbd89f8/NeoDym-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e360a6f697cdef5bb1ac32e0e7b4d5f4", "sha256": "4a0ef35366a286797ae1a382b404ef11300c2234add1407cc30aa4553ef82f79"}, "downloads": -1, "filename": "NeoDym-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e360a6f697cdef5bb1ac32e0e7b4d5f4", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 19105, "upload_time": "2013-09-02T17:01:52", "upload_time_iso_8601": "2013-09-02T17:01:52.718426Z", "url": "https://files.pythonhosted.org/packages/ee/5e/475cfab08276733440b3b678b6f4ecd3d66dd6630a161add22606bbd89f8/NeoDym-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:29 2020"}