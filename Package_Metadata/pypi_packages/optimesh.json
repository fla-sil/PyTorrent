{"info": {"author": "Nico Schl\u00f6mer", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering", "Topic :: Utilities"], "description": "<p align=\"center\">\n  <a href=\"https://github.com/nschloe/optimesh\"><img alt=\"optimesh\" src=\"https://nschloe.github.io/optimesh/optimesh-logo.svg\" width=\"60%\"></a>\n  <p align=\"center\">Triangular mesh optimization.</p>\n</p>\n\n[![CircleCI](https://img.shields.io/circleci/project/github/nschloe/optimesh/master.svg?style=flat-square)](https://circleci.com/gh/nschloe/optimesh)\n[![codecov](https://img.shields.io/codecov/c/github/nschloe/optimesh.svg?style=flat-square)](https://codecov.io/gh/nschloe/optimesh)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg?style=flat-square)](https://github.com/psf/black)\n[![smooth](https://img.shields.io/badge/smooth-operator-8209ba.svg?style=flat-square)](https://youtu.be/4TYv2PhG89A)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/optimesh.svg?style=flat-square)](https://pypi.org/pypi/optimesh/)\n[![PyPi Version](https://img.shields.io/pypi/v/optimesh.svg?style=flat-square)](https://pypi.org/project/optimesh)\n[![GitHub stars](https://img.shields.io/github/stars/nschloe/optimesh.svg?style=flat-square&logo=github&label=Stars&logoColor=white)](https://github.com/nschloe/optimesh)\n[![PyPi downloads](https://img.shields.io/pypi/dm/optimesh.svg?style=flat-square)](https://pypistats.org/packages/optimesh)\n\nSeveral mesh smoothing/optimization methods with one simple interface. optimesh\n\n * is fast,\n * preserves submeshes,\n * only works for triangular meshes, flat and on a surface, (for now; upvote [this\n   issue](https://github.com/nschloe/optimesh/issues/17) if you're interested in\n   tetrahedral mesh smoothing), and\n * supports all mesh formats that [meshio](https://github.com/nschloe/meshio) can\n   handle.\n\nInstall with\n```\npip install optimesh\n```\nExample call:\n```\noptimesh in.e out.vtk\n```\nOutput:\n![terminal-screenshot](https://nschloe.github.io/optimesh/term-screenshot.png)\n\nThe left hand-side graph shows the distribution of angles (the grid line is at the\noptimal 60 degrees). The right hand-side graph shows the distribution of simplex\nquality, where quality is twice the ratio of circumcircle and incircle radius.\n\nAll command-line options are documented at\n```\noptimesh -h\n```\n\n### Showcase\n\n![disk-step0](https://nschloe.github.io/optimesh/disk-step0.png)\n\nThe following examples show the various algorithms at work, all starting from the same\nrandomly generated disk mesh above. The cell coloring indicates quality; dark green is\nbad, yellow is good.\n\n\n#### CVT (centroidal Voronoi tesselation)\n\n![cvt-uniform-lloyd2](https://nschloe.github.io/optimesh/lloyd2.webp) |\n![cvt-uniform-qnb](https://nschloe.github.io/optimesh/cvt-uniform-qnb.webp) |\n![cvt-uniform-qnf](https://nschloe.github.io/optimesh/cvt-uniform-qnf.webp) |\n:------------------------:|:---------------------:|:----:|\nuniform-density relaxed [Lloyd's algorithm](https://en.wikipedia.org/wiki/Lloyd%27s_algorithm) (`--method lloyd --omega 2.0`) | uniform-density quasi-Newton iteration (block-diagonal Hessian, `--method cvt-uniform-qnb`) | uniform-density quasi-Newton iteration (default method, full Hessian, `--method cvt-uniform-qnf`) |\n\nCentroidal Voronoi tessellation smoothing ([Du et al.](#relevant-publications)) is one\nof the oldest and most reliable approaches. optimesh provides classical Lloyd smoothing\nas well as several variants that result in better meshes.\n\n\n#### CPT (centroidal patch tesselation)\n\n![cpt-cp](https://nschloe.github.io/optimesh/cpt-dp.png) |\n![cpt-uniform-fp](https://nschloe.github.io/optimesh/cpt-uniform-fp.webp) |\n![cpt-uniform-qn](https://nschloe.github.io/optimesh/cpt-uniform-qn.webp) |\n:-----------------------------------------------------------------------:|:-----------------------------------------------------------------:|:--------------------------------------------------------:|\ndensity-preserving linear solve ([Laplacian smoothing](https://en.wikipedia.org/wiki/Laplacian_smoothing), `--method cpt-dp`) | uniform-density fixed-point iteration (`--method cpt-uniform-fp`) | uniform-density quasi-Newton (`--method cpt-uniform-qn`) |\n\nA smoothing method suggested by [Chen and Holst](#relevant-publications), mimicking CVT\nbut much more easily implemented. The density-preserving variant leads to the exact same\nequation system as Laplacian smoothing, so CPT smoothing can be thought of as a\ngeneralization.\n\nThe uniform-density variants are implemented classically as a fixed-point iteration and\nas a quasi-Newton method. The latter typically converges faster.\n\n\n#### ODT (optimal Delaunay tesselation)\n\n![odt-dp-fp](https://nschloe.github.io/optimesh/odt-dp-fp.webp) |\n![odt-uniform-fp](https://nschloe.github.io/optimesh/odt-uniform-fp.webp) |\n![odt-uniform-bfgs](https://nschloe.github.io/optimesh/odt-uniform-bfgs.webp) |\n:--------------------------------------------------------------:|:-----------------------------------------------------------------:|:------------------------------------------------------------------:|\ndensity-preserving fixed-point iteration (`--method odt-dp-fp`) | uniform-density fixed-point iteration (`--method odt-uniform-fp`) | uniform-density BFGS (`--method odt-uniform-bfgs`) |\n\nOptimal Delaunay Triangulation (ODT) as suggested by [Chen and\nHolst](#relevant-publications). Typically superior to CPT, but also more expensive to\ncompute.\n\nImplemented once classically as a fixed-point iteration, once as a nonlinear\noptimization method. The latter typically leads to better results.\n\n\n### Surface mesh smoothing\n\noptimesh also supports optimization of triangular meshes on surfaces which are defined\nimplicitly by a level set function (e.g., spheres). You'll need to specify the function\nand its gradient, so you'll have to do it in Python:\n```python\nimport meshzoo\nimport optimesh\n\npoints, cells = meshzoo.tetra_sphere(20)\n\nclass Sphere:\n    def f(self, x):\n        return 1.0 - (x[0] ** 2 + x[1] ** 2 + x[2] ** 2)\n\n    def grad(self, x):\n        return -2 * x\n\n# You can use all methods in optimesh:\n# points, cells = optimesh.cpt.fixed_point_uniform(\n# points, cells = optimesh.odt.fixed_point_uniform(\npoints, cells = optimesh.cvt.quasi_newton_uniform_full(\n    points, cells, 1.0e-2, 100, verbose=False,\n    implicit_surface=Sphere(),\n    # step_filename_format=\"out{:03d}.vtk\"\n)\n```\nThis code first generates a mediocre mesh on a sphere using\n[meshzoo](https://github.com/nschloe/meshzoo/),\n\n<img src=\"https://nschloe.github.io/optimesh/tetra-sphere.png\" width=\"20%\">\n\nand then optimizes. Some results:\n\n![odt-dp-fp](https://nschloe.github.io/optimesh/sphere-cpt.webp) |\n![odt-uniform-fp](https://nschloe.github.io/optimesh/sphere-odt.webp) |\n![odt-uniform-bfgs](https://nschloe.github.io/optimesh/sphere-cvt.webp) |\n:------------:|:----------:|:---------------------------------:|\nCPT | ODT | CVT (full Hessian) |\n\n\n### Which method is best?\n\nFrom practical experiments, it seems that the CVT smoothing variants, e.g.,\n```\noptimesh in.vtk out.vtk -m cvt-uniform-qnf\n```\ngive very satisfactory results. (This is also the default method, so you don't need to\nspecify it explicitly.)  Here is a comparison of all uniform-density methods applied to\nthe random circle mesh seen above:\n\n<img src=\"https://nschloe.github.io/optimesh/comparison.svg\" width=\"90%\">\n\n(Mesh quality is twice the ratio of incircle and circumcircle radius, with the maximum\nbeing 1.)\n\n\n### Why optimize?\n\n<img src=\"https://nschloe.github.io/optimesh/gmsh.png\" width=\"80%\"> |\n<img src=\"https://nschloe.github.io/optimesh/gmsh-optimesh.png\" width=\"80%\"> |\n<img src=\"https://nschloe.github.io/optimesh/dmsh.png\" width=\"80%\"> |\n:------------------------:|:---------------------:|:----:|\nGmsh mesh | Gmsh mesh after optimesh | [dmsh](//github.com/nschloe/dmsh) mesh |\n\nLet us compare the properties of the Poisson problem (*\u0394u = f* with Dirichlet boundary\nconditions) when solved on different meshes of the unit circle. The first mesh is the\non generated by [Gmsh](http://gmsh.info/), the second the same mesh but optimized with\noptimesh, the third a very high-quality [dmsh](https://github.com/nschloe/dmsh) mesh.\n\nWe consider meshings of the circle with an increasing number of points:\n\n\n![gmsh-quality](https://nschloe.github.io/optimesh/gmsh-quality.svg) |\n![gmsh-cond](https://nschloe.github.io/optimesh/gmsh-cond.svg) |\n![gmsh-cg](https://nschloe.github.io/optimesh/gmsh-cg.svg) |\n:------------------------:|:---------------------:|:----:|\naverage cell quality | condition number of the Poisson matrix | number of CG steps for Poisson problem |\n\nQuite clearly, the dmsh generator produces the highest-quality meshes (left).\nThe condition number of the corresponding Poisson matrices is lowest for the high\nquality meshes (middle); one would hence suspect faster convergence with Krylov methods.\nIndeed, most CG iterations are necessary on the Gmsh mesh (right). After optimesh, one saves\nbetween 10 and 20 percent of iterations/computing time. The dmsh mesh cuts the number of\niterations in _half_.\n\n\n\n\n### Access from Python\n\nAll optimesh functions can also be accessed from Python directly, for example:\n```python\nimport optimesh\n\nX, cells = optimesh.odt.fixed_point_uniform(X, cells, 1.0e-2, 100, verbose=False)\n```\n\n### Installation\n\noptimesh is [available from the Python Package\nIndex](https://pypi.org/project/optimesh/), so simply do\n```\npip install optimesh\n```\nto install.\n\n### Relevant publications\n\n * [Qiang Du, Vance Faber, and Max Gunzburger, _Centroidal Voronoi Tessellations: Applications and Algorithms_,\n   SIAM Rev., 41(4), 1999, 637\u2013676.](https://doi.org/10.1137/S0036144599352836)\n\n * [Yang Liu et al., _On centroidal Voronoi tessellation\u2014Energy smoothness and fast computation_,\n   ACM Transactions on Graphics, Volume 28, Issue 4, August 2009.](https://dl.acm.org/citation.cfm?id=1559758)\n\n * [Long Chen, Michael Holst, _Efficient mesh optimization schemes based on Optimal Delaunay Triangulations_,\n   Comput. Methods Appl. Mech. Engrg. 200 (2011) 967\u2013984.](https://doi.org/10.1016/j.cma.2010.11.007)\n\n\n### Testing\n\nTo run the optimesh unit tests, check out this repository and type\n```\npytest\n```\n\n### License\n\noptimesh is published under the [MIT license](https://en.wikipedia.org/wiki/MIT_License).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nschloe/optimesh", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "optimesh", "package_url": "https://pypi.org/project/optimesh/", "platform": "any", "project_url": "https://pypi.org/project/optimesh/", "project_urls": {"Code": "https://github.com/nschloe/optimesh", "Homepage": "https://github.com/nschloe/optimesh", "Issues": "https://github.com/nschloe/optimesh/issues"}, "release_url": "https://pypi.org/project/optimesh/0.6.3/", "requires_dist": ["importlib-metadata", "meshio (<5,>=4)", "meshplex (<0.13.0)", "numpy", "quadpy", "termplotlib", "matplotlib ; extra == 'all'", "matplotlib ; extra == 'png'"], "requires_python": ">=3.5", "summary": "Mesh optimization/smoothing", "version": "0.6.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\">\n  <a href=\"https://github.com/nschloe/optimesh\" rel=\"nofollow\"><img alt=\"optimesh\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d9b12a61385e6904b5baca8d5f85caea87f2fdba/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f6f7074696d6573682f6f7074696d6573682d6c6f676f2e737667\" width=\"60%\"></a>\n  </p><p align=\"center\">Triangular mesh optimization.</p>\n<p></p>\n<p><a href=\"https://circleci.com/gh/nschloe/optimesh\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3a2fa21c4c7777db631888b16baeb78fdd7cacc2/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f70726f6a6563742f6769746875622f6e7363686c6f652f6f7074696d6573682f6d61737465722e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://codecov.io/gh/nschloe/optimesh\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b52d092eda8dfc72fa99c8c41957e1211ddea2de/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f6e7363686c6f652f6f7074696d6573682e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1c326c58e924b9f3508f32a8ac6b3ee91f40b090/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://youtu.be/4TYv2PhG89A\" rel=\"nofollow\"><img alt=\"smooth\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/992794b19500666939f1b3f096a5132fd8827ee3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736d6f6f74682d6f70657261746f722d3832303962612e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://pypi.org/pypi/optimesh/\" rel=\"nofollow\"><img alt=\"PyPI pyversions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3abbb029941db5198d8ecafc1aa434c634dfa4d4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6f7074696d6573682e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://pypi.org/project/optimesh\" rel=\"nofollow\"><img alt=\"PyPi Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0bf042e154ebad6bb344308fb102a5339138a1d5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6f7074696d6573682e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://github.com/nschloe/optimesh\" rel=\"nofollow\"><img alt=\"GitHub stars\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bf2f591efc2adca252ce4e4d0ad62ca0d8bc80ae/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6e7363686c6f652f6f7074696d6573682e7376673f7374796c653d666c61742d737175617265266c6f676f3d676974687562266c6162656c3d5374617273266c6f676f436f6c6f723d7768697465\"></a>\n<a href=\"https://pypistats.org/packages/optimesh\" rel=\"nofollow\"><img alt=\"PyPi downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/43e56caffb7310f702bf6112a6fb903c6ec88c74/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f6f7074696d6573682e7376673f7374796c653d666c61742d737175617265\"></a></p>\n<p>Several mesh smoothing/optimization methods with one simple interface. optimesh</p>\n<ul>\n<li>is fast,</li>\n<li>preserves submeshes,</li>\n<li>only works for triangular meshes, flat and on a surface, (for now; upvote <a href=\"https://github.com/nschloe/optimesh/issues/17\" rel=\"nofollow\">this\nissue</a> if you're interested in\ntetrahedral mesh smoothing), and</li>\n<li>supports all mesh formats that <a href=\"https://github.com/nschloe/meshio\" rel=\"nofollow\">meshio</a> can\nhandle.</li>\n</ul>\n<p>Install with</p>\n<pre><code>pip install optimesh\n</code></pre>\n<p>Example call:</p>\n<pre><code>optimesh in.e out.vtk\n</code></pre>\n<p>Output:\n<img alt=\"terminal-screenshot\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1a2fe1844dc386604c808a5df976cdf4fb0cd5f4/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f6f7074696d6573682f7465726d2d73637265656e73686f742e706e67\"></p>\n<p>The left hand-side graph shows the distribution of angles (the grid line is at the\noptimal 60 degrees). The right hand-side graph shows the distribution of simplex\nquality, where quality is twice the ratio of circumcircle and incircle radius.</p>\n<p>All command-line options are documented at</p>\n<pre><code>optimesh -h\n</code></pre>\n<h3>Showcase</h3>\n<p><img alt=\"disk-step0\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/65d3e507194ca10c173ecd8d162cf4b0d7445a0a/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f6f7074696d6573682f6469736b2d73746570302e706e67\"></p>\n<p>The following examples show the various algorithms at work, all starting from the same\nrandomly generated disk mesh above. The cell coloring indicates quality; dark green is\nbad, yellow is good.</p>\n<h4>CVT (centroidal Voronoi tesselation)</h4>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><img alt=\"cvt-uniform-lloyd2\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cf3e958905b8bfdaa320ccd550b391525fa29717/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f6f7074696d6573682f6c6c6f7964322e77656270\"></th>\n<th align=\"center\"><img alt=\"cvt-uniform-qnb\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01eda470e73fd2bc81c979ed1e8a833dedbfc324/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f6f7074696d6573682f6376742d756e69666f726d2d716e622e77656270\"></th>\n<th align=\"center\"><img alt=\"cvt-uniform-qnf\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f87b21a0f6f3e297e536d05d0a7f72c2406d3c95/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f6f7074696d6573682f6376742d756e69666f726d2d716e662e77656270\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">uniform-density relaxed <a href=\"https://en.wikipedia.org/wiki/Lloyd%27s_algorithm\" rel=\"nofollow\">Lloyd's algorithm</a> (<code>--method lloyd --omega 2.0</code>)</td>\n<td align=\"center\">uniform-density quasi-Newton iteration (block-diagonal Hessian, <code>--method cvt-uniform-qnb</code>)</td>\n<td align=\"center\">uniform-density quasi-Newton iteration (default method, full Hessian, <code>--method cvt-uniform-qnf</code>)</td>\n</tr></tbody></table>\n<p>Centroidal Voronoi tessellation smoothing (<a href=\"#relevant-publications\" rel=\"nofollow\">Du et al.</a>) is one\nof the oldest and most reliable approaches. optimesh provides classical Lloyd smoothing\nas well as several variants that result in better meshes.</p>\n<h4>CPT (centroidal patch tesselation)</h4>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><img alt=\"cpt-cp\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c0d83e6fd75e9ef1e61b90b27c33f0d3a21072dd/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f6f7074696d6573682f6370742d64702e706e67\"></th>\n<th align=\"center\"><img alt=\"cpt-uniform-fp\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/edc29dda6833c78a226c17d229a4f55b1eb40d95/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f6f7074696d6573682f6370742d756e69666f726d2d66702e77656270\"></th>\n<th align=\"center\"><img alt=\"cpt-uniform-qn\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6e10f22a544805d781a7945be3b95474613a3793/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f6f7074696d6573682f6370742d756e69666f726d2d716e2e77656270\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">density-preserving linear solve (<a href=\"https://en.wikipedia.org/wiki/Laplacian_smoothing\" rel=\"nofollow\">Laplacian smoothing</a>, <code>--method cpt-dp</code>)</td>\n<td align=\"center\">uniform-density fixed-point iteration (<code>--method cpt-uniform-fp</code>)</td>\n<td align=\"center\">uniform-density quasi-Newton (<code>--method cpt-uniform-qn</code>)</td>\n</tr></tbody></table>\n<p>A smoothing method suggested by <a href=\"#relevant-publications\" rel=\"nofollow\">Chen and Holst</a>, mimicking CVT\nbut much more easily implemented. The density-preserving variant leads to the exact same\nequation system as Laplacian smoothing, so CPT smoothing can be thought of as a\ngeneralization.</p>\n<p>The uniform-density variants are implemented classically as a fixed-point iteration and\nas a quasi-Newton method. The latter typically converges faster.</p>\n<h4>ODT (optimal Delaunay tesselation)</h4>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><img alt=\"odt-dp-fp\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/33b515c21d9898ba0779278927098789893e04e6/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f6f7074696d6573682f6f64742d64702d66702e77656270\"></th>\n<th align=\"center\"><img alt=\"odt-uniform-fp\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3a885a4e177100c0a69a9c10c9de524e78128679/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f6f7074696d6573682f6f64742d756e69666f726d2d66702e77656270\"></th>\n<th align=\"center\"><img alt=\"odt-uniform-bfgs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/09a5c3a4f00cda90da35c8cb64ee27c7a0e6f5e4/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f6f7074696d6573682f6f64742d756e69666f726d2d626667732e77656270\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">density-preserving fixed-point iteration (<code>--method odt-dp-fp</code>)</td>\n<td align=\"center\">uniform-density fixed-point iteration (<code>--method odt-uniform-fp</code>)</td>\n<td align=\"center\">uniform-density BFGS (<code>--method odt-uniform-bfgs</code>)</td>\n</tr></tbody></table>\n<p>Optimal Delaunay Triangulation (ODT) as suggested by <a href=\"#relevant-publications\" rel=\"nofollow\">Chen and\nHolst</a>. Typically superior to CPT, but also more expensive to\ncompute.</p>\n<p>Implemented once classically as a fixed-point iteration, once as a nonlinear\noptimization method. The latter typically leads to better results.</p>\n<h3>Surface mesh smoothing</h3>\n<p>optimesh also supports optimization of triangular meshes on surfaces which are defined\nimplicitly by a level set function (e.g., spheres). You'll need to specify the function\nand its gradient, so you'll have to do it in Python:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">meshzoo</span>\n<span class=\"kn\">import</span> <span class=\"nn\">optimesh</span>\n\n<span class=\"n\">points</span><span class=\"p\">,</span> <span class=\"n\">cells</span> <span class=\"o\">=</span> <span class=\"n\">meshzoo</span><span class=\"o\">.</span><span class=\"n\">tetra_sphere</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Sphere</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"mf\">1.0</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">**</span> <span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">**</span> <span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">**</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">grad</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"o\">-</span><span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">x</span>\n\n<span class=\"c1\"># You can use all methods in optimesh:</span>\n<span class=\"c1\"># points, cells = optimesh.cpt.fixed_point_uniform(</span>\n<span class=\"c1\"># points, cells = optimesh.odt.fixed_point_uniform(</span>\n<span class=\"n\">points</span><span class=\"p\">,</span> <span class=\"n\">cells</span> <span class=\"o\">=</span> <span class=\"n\">optimesh</span><span class=\"o\">.</span><span class=\"n\">cvt</span><span class=\"o\">.</span><span class=\"n\">quasi_newton_uniform_full</span><span class=\"p\">(</span>\n    <span class=\"n\">points</span><span class=\"p\">,</span> <span class=\"n\">cells</span><span class=\"p\">,</span> <span class=\"mf\">1.0e-2</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">implicit_surface</span><span class=\"o\">=</span><span class=\"n\">Sphere</span><span class=\"p\">(),</span>\n    <span class=\"c1\"># step_filename_format=\"out{:03d}.vtk\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>This code first generates a mediocre mesh on a sphere using\n<a href=\"https://github.com/nschloe/meshzoo/\" rel=\"nofollow\">meshzoo</a>,</p>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/239065427ffc5b3e3ac2eb74f8d6fcae5c72f8eb/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f6f7074696d6573682f74657472612d7370686572652e706e67\" width=\"20%\">\n<p>and then optimizes. Some results:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><img alt=\"odt-dp-fp\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/47fdf9bdf180b89b06f2462cd69e18137311c57b/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f6f7074696d6573682f7370686572652d6370742e77656270\"></th>\n<th align=\"center\"><img alt=\"odt-uniform-fp\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eb7de27d84fc37ee2b811b0fd4de244c5e26751f/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f6f7074696d6573682f7370686572652d6f64742e77656270\"></th>\n<th align=\"center\"><img alt=\"odt-uniform-bfgs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fb0cff98a366beffe39246e1a56fd69c00351079/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f6f7074696d6573682f7370686572652d6376742e77656270\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">CPT</td>\n<td align=\"center\">ODT</td>\n<td align=\"center\">CVT (full Hessian)</td>\n</tr></tbody></table>\n<h3>Which method is best?</h3>\n<p>From practical experiments, it seems that the CVT smoothing variants, e.g.,</p>\n<pre><code>optimesh in.vtk out.vtk -m cvt-uniform-qnf\n</code></pre>\n<p>give very satisfactory results. (This is also the default method, so you don't need to\nspecify it explicitly.)  Here is a comparison of all uniform-density methods applied to\nthe random circle mesh seen above:</p>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0b7ee53ded9be57aa87959a20497a2be4b614274/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f6f7074696d6573682f636f6d70617269736f6e2e737667\" width=\"90%\">\n<p>(Mesh quality is twice the ratio of incircle and circumcircle radius, with the maximum\nbeing 1.)</p>\n<h3>Why optimize?</h3>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c543a0b94d604b0942bdf257150fa163bc123e4c/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f6f7074696d6573682f676d73682e706e67\" width=\"80%\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5a1b7999a5a2093ff4269baab8577e568186d420/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f6f7074696d6573682f676d73682d6f7074696d6573682e706e67\" width=\"80%\"></th>\n<th align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c5469982c8193a8c72ae868924b3bd0ad018b371/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f6f7074696d6573682f646d73682e706e67\" width=\"80%\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">Gmsh mesh</td>\n<td align=\"center\">Gmsh mesh after optimesh</td>\n<td align=\"center\"><a href=\"//github.com/nschloe/dmsh\" rel=\"nofollow\">dmsh</a> mesh</td>\n</tr></tbody></table>\n<p>Let us compare the properties of the Poisson problem (<em>\u0394u = f</em> with Dirichlet boundary\nconditions) when solved on different meshes of the unit circle. The first mesh is the\non generated by <a href=\"http://gmsh.info/\" rel=\"nofollow\">Gmsh</a>, the second the same mesh but optimized with\noptimesh, the third a very high-quality <a href=\"https://github.com/nschloe/dmsh\" rel=\"nofollow\">dmsh</a> mesh.</p>\n<p>We consider meshings of the circle with an increasing number of points:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><img alt=\"gmsh-quality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b2c71aac1c5c1206474066064df04a33ca586bcd/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f6f7074696d6573682f676d73682d7175616c6974792e737667\"></th>\n<th align=\"center\"><img alt=\"gmsh-cond\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a4f6c47879830c0250890297d649e38262f135d5/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f6f7074696d6573682f676d73682d636f6e642e737667\"></th>\n<th align=\"center\"><img alt=\"gmsh-cg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a22d40991a5fc637f4f01ab79abe1763ec4f0bf7/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f6f7074696d6573682f676d73682d63672e737667\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">average cell quality</td>\n<td align=\"center\">condition number of the Poisson matrix</td>\n<td align=\"center\">number of CG steps for Poisson problem</td>\n</tr></tbody></table>\n<p>Quite clearly, the dmsh generator produces the highest-quality meshes (left).\nThe condition number of the corresponding Poisson matrices is lowest for the high\nquality meshes (middle); one would hence suspect faster convergence with Krylov methods.\nIndeed, most CG iterations are necessary on the Gmsh mesh (right). After optimesh, one saves\nbetween 10 and 20 percent of iterations/computing time. The dmsh mesh cuts the number of\niterations in <em>half</em>.</p>\n<h3>Access from Python</h3>\n<p>All optimesh functions can also be accessed from Python directly, for example:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">optimesh</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">cells</span> <span class=\"o\">=</span> <span class=\"n\">optimesh</span><span class=\"o\">.</span><span class=\"n\">odt</span><span class=\"o\">.</span><span class=\"n\">fixed_point_uniform</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">cells</span><span class=\"p\">,</span> <span class=\"mf\">1.0e-2</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<h3>Installation</h3>\n<p>optimesh is <a href=\"https://pypi.org/project/optimesh/\" rel=\"nofollow\">available from the Python Package\nIndex</a>, so simply do</p>\n<pre><code>pip install optimesh\n</code></pre>\n<p>to install.</p>\n<h3>Relevant publications</h3>\n<ul>\n<li>\n<p><a href=\"https://doi.org/10.1137/S0036144599352836\" rel=\"nofollow\">Qiang Du, Vance Faber, and Max Gunzburger, <em>Centroidal Voronoi Tessellations: Applications and Algorithms</em>,\nSIAM Rev., 41(4), 1999, 637\u2013676.</a></p>\n</li>\n<li>\n<p><a href=\"https://dl.acm.org/citation.cfm?id=1559758\" rel=\"nofollow\">Yang Liu et al., <em>On centroidal Voronoi tessellation\u2014Energy smoothness and fast computation</em>,\nACM Transactions on Graphics, Volume 28, Issue 4, August 2009.</a></p>\n</li>\n<li>\n<p><a href=\"https://doi.org/10.1016/j.cma.2010.11.007\" rel=\"nofollow\">Long Chen, Michael Holst, <em>Efficient mesh optimization schemes based on Optimal Delaunay Triangulations</em>,\nComput. Methods Appl. Mech. Engrg. 200 (2011) 967\u2013984.</a></p>\n</li>\n</ul>\n<h3>Testing</h3>\n<p>To run the optimesh unit tests, check out this repository and type</p>\n<pre><code>pytest\n</code></pre>\n<h3>License</h3>\n<p>optimesh is published under the <a href=\"https://en.wikipedia.org/wiki/MIT_License\" rel=\"nofollow\">MIT license</a>.</p>\n\n          </div>"}, "last_serial": 6735345, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "890267875893eb93a5ff26ea81dfda51", "sha256": "56b9b9a2439d4c6fc37d9f665311cb04e1681257e1296aa642c9551650f22676"}, "downloads": -1, "filename": "optimesh-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "890267875893eb93a5ff26ea81dfda51", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11802, "upload_time": "2018-07-01T10:31:30", "upload_time_iso_8601": "2018-07-01T10:31:30.361932Z", "url": "https://files.pythonhosted.org/packages/3d/6a/8a768c207620d6fa952ed655e6061195963721fe9221324ec95e876fa011/optimesh-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f0d1bc053a740e9b70abb2b327f24859", "sha256": "010d7a48689a3c625ba464d19ba928188a97aa2f0485dfebcc97c36bf8e55f6f"}, "downloads": -1, "filename": "optimesh-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f0d1bc053a740e9b70abb2b327f24859", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10494, "upload_time": "2018-07-01T10:31:31", "upload_time_iso_8601": "2018-07-01T10:31:31.782619Z", "url": "https://files.pythonhosted.org/packages/19/00/b5a50838172b6ec228c7d790854eefc1509c5d7d9967e8960e671baec082/optimesh-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "1623db21b5d1df41a4ff7adf335fd86a", "sha256": "8516536ad64d61de6398234fa2e666d73d18123e7b449d60803da52164511a6c"}, "downloads": -1, "filename": "optimesh-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1623db21b5d1df41a4ff7adf335fd86a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12626, "upload_time": "2018-07-05T17:50:17", "upload_time_iso_8601": "2018-07-05T17:50:17.681422Z", "url": "https://files.pythonhosted.org/packages/15/79/d7d28c4088f34bf4aad007c4c36d3ca8bc9f8cc37a1f5e65c969299b90b8/optimesh-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "701a6bdaba15a647555c72f95bc1ee1e", "sha256": "194e0156bcbcff6af6675d16a8894718cefc82e7a9ff096c37c771d2d7aad86b"}, "downloads": -1, "filename": "optimesh-0.1.1.tar.gz", "has_sig": false, "md5_digest": "701a6bdaba15a647555c72f95bc1ee1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11640, "upload_time": "2018-07-05T17:50:19", "upload_time_iso_8601": "2018-07-05T17:50:19.092329Z", "url": "https://files.pythonhosted.org/packages/2a/77/55201427c973e07d48beb2cb3bfe8ba74561fd0a651086366882bbdcb169/optimesh-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "8bec9c0b1c2aee3921df77e89266a9a9", "sha256": "49f8503ed61d19968af00584a8a7e78600a56c3f5b94c0dc5000bace35ede3b0"}, "downloads": -1, "filename": "optimesh-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8bec9c0b1c2aee3921df77e89266a9a9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15075, "upload_time": "2018-07-13T21:57:17", "upload_time_iso_8601": "2018-07-13T21:57:17.294958Z", "url": "https://files.pythonhosted.org/packages/04/a5/f687b7edce289b59b75ae4e01249d18efd2b189f59cfaeacbb913b314ad7/optimesh-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e8b4d57f9bcc955c1e238bc3a6ecfc0a", "sha256": "ff5ad158887b9a8ee46fe23e7843662edc8619c6a6588e59f4e07bf26929a0d0"}, "downloads": -1, "filename": "optimesh-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e8b4d57f9bcc955c1e238bc3a6ecfc0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13072, "upload_time": "2018-07-13T21:57:18", "upload_time_iso_8601": "2018-07-13T21:57:18.723135Z", "url": "https://files.pythonhosted.org/packages/fd/b1/cf230f68dbc4cdd0c531a7bef827857be0d54af02b0cff54bd50fe95d6be/optimesh-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "07e8d35ffe9f4fe1454a61a58914a2f1", "sha256": "9a35a982ac7dbdae3e005365c136a011e97dc4fa26cae4e05ca29cbb74e06660"}, "downloads": -1, "filename": "optimesh-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "07e8d35ffe9f4fe1454a61a58914a2f1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15295, "upload_time": "2018-07-16T10:06:11", "upload_time_iso_8601": "2018-07-16T10:06:11.848416Z", "url": "https://files.pythonhosted.org/packages/a9/42/69b0a94cebf61039d449e1b47edb15ce1a05e59ae80a7745e615bfc9b4ad/optimesh-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bace06ba8ef40e9359896f54c1d0f825", "sha256": "1b1a474fc2566ad32336a432015afe47d52e90bbc94189f67e4d47bec95e983c"}, "downloads": -1, "filename": "optimesh-0.2.1.tar.gz", "has_sig": false, "md5_digest": "bace06ba8ef40e9359896f54c1d0f825", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13887, "upload_time": "2018-07-16T10:06:13", "upload_time_iso_8601": "2018-07-16T10:06:13.258544Z", "url": "https://files.pythonhosted.org/packages/b5/a8/61ee54ce7eea337909f4698dae29739432e4c431281c9dd3ecef1df21da9/optimesh-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "17256f53c61ff70437c661386730d5e0", "sha256": "4419274e763cc185820b00be7b8782baba98eab005ea97a77f86e47ec954d798"}, "downloads": -1, "filename": "optimesh-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "17256f53c61ff70437c661386730d5e0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17215, "upload_time": "2018-08-03T08:03:53", "upload_time_iso_8601": "2018-08-03T08:03:53.387817Z", "url": "https://files.pythonhosted.org/packages/d1/be/9f83bcc7ee993682ce081f77f828069a1f5b0bcf86762f26604a401a943f/optimesh-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "93c831a4df0ed1d02b41b5888ef4b05b", "sha256": "a450f42c9bbb5ee97a71d8f7381f792bd4a69179554d70b9a4a975d6f24913c1"}, "downloads": -1, "filename": "optimesh-0.3.0.tar.gz", "has_sig": false, "md5_digest": "93c831a4df0ed1d02b41b5888ef4b05b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15741, "upload_time": "2018-08-03T08:03:54", "upload_time_iso_8601": "2018-08-03T08:03:54.718808Z", "url": "https://files.pythonhosted.org/packages/0b/ab/dcda576b6786e990ddccaabb5c48cb6626037f16832a0bf3b9fd4b741c72/optimesh-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "83e6d75de4ebf3182648b1048913ae30", "sha256": "4cd69efc510070a6853b050ab2a45d259a6726eee6ac9d2fb6e9eab726df897d"}, "downloads": -1, "filename": "optimesh-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "83e6d75de4ebf3182648b1048913ae30", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 24247, "upload_time": "2018-08-09T14:31:56", "upload_time_iso_8601": "2018-08-09T14:31:56.302466Z", "url": "https://files.pythonhosted.org/packages/74/87/7cabc35eb8705711f44a85ca5d6df3bc7a7a271f6b7ac156eb5659d11ead/optimesh-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a048eac8879bb0a6ce35f186f4df5ce4", "sha256": "b0cf311009436fd70a61fbbf7c20a31e4921d11b9faa009406bac059eaecee94"}, "downloads": -1, "filename": "optimesh-0.4.0.tar.gz", "has_sig": false, "md5_digest": "a048eac8879bb0a6ce35f186f4df5ce4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19038, "upload_time": "2018-08-09T14:31:57", "upload_time_iso_8601": "2018-08-09T14:31:57.818058Z", "url": "https://files.pythonhosted.org/packages/c3/7c/aff2019edeaeca7b486b5ce6c13b6f00973c531344710b244d9e82ddd2fe/optimesh-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "645f0f2c08363cd5aa4e196ed36ef143", "sha256": "91e46be4d2ab30c2804e5e827ee92aab562c70076344b2bb09377042f08e2835"}, "downloads": -1, "filename": "optimesh-0.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "645f0f2c08363cd5aa4e196ed36ef143", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 24143, "upload_time": "2018-08-11T12:16:02", "upload_time_iso_8601": "2018-08-11T12:16:02.432581Z", "url": "https://files.pythonhosted.org/packages/ed/86/d9ed09f868a6f80c95069262727637e46430e7e4a594b6aa1564eb931bfd/optimesh-0.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d97e91c61980ea1244b95eb237c5bccf", "sha256": "9fe6b9c51b9ca3c2ab7dbb23c25ea1ba0797a58d22a4ded9404f19695a93808d"}, "downloads": -1, "filename": "optimesh-0.4.1.tar.gz", "has_sig": false, "md5_digest": "d97e91c61980ea1244b95eb237c5bccf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19581, "upload_time": "2018-08-11T12:16:04", "upload_time_iso_8601": "2018-08-11T12:16:04.073422Z", "url": "https://files.pythonhosted.org/packages/91/d4/f1b01024418bf6bb4577f97cee5de7a7446da906d29f42c17ec181a668a1/optimesh-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "6490902dc7eea7c6c97af1e1c6ecc691", "sha256": "519e95c7ec3f139474e04b17cd3ebbdbf7a394bca6d632b9a6906594748f5309"}, "downloads": -1, "filename": "optimesh-0.4.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6490902dc7eea7c6c97af1e1c6ecc691", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21489, "upload_time": "2018-08-11T12:44:15", "upload_time_iso_8601": "2018-08-11T12:44:15.201187Z", "url": "https://files.pythonhosted.org/packages/9b/8c/45623a0e81d4cf5d06a5ff25257f33de69f86831edbe84e21d1289c8cef1/optimesh-0.4.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4dfd086bef6e3bac31bd45a74cf88ad", "sha256": "4e034c09e0c286a9aa265fa348d823dc3a16301930b9ff82b60cf61047811dc9"}, "downloads": -1, "filename": "optimesh-0.4.2.tar.gz", "has_sig": false, "md5_digest": "c4dfd086bef6e3bac31bd45a74cf88ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19290, "upload_time": "2018-08-11T12:44:16", "upload_time_iso_8601": "2018-08-11T12:44:16.667034Z", "url": "https://files.pythonhosted.org/packages/fa/d3/062af95b551af7ed7a8ebd708b3505e05228b634ec7db1972f16a324a971/optimesh-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "deb95d7ba40da1d689e4ad8081710cd6", "sha256": "5172e19d947688d073f89a6956c15250f62a6425bbb57371226b8ec38d7b2cc0"}, "downloads": -1, "filename": "optimesh-0.4.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "deb95d7ba40da1d689e4ad8081710cd6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21557, "upload_time": "2018-08-14T14:14:23", "upload_time_iso_8601": "2018-08-14T14:14:23.970752Z", "url": "https://files.pythonhosted.org/packages/e3/53/62d1ef05f81cbf652316d7f5537c1b767029b02807d0e4c0bbe3986686c9/optimesh-0.4.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d36d2777163387e486e9e2913deccf49", "sha256": "460ea677282db7bc02ad7894e7b26a303e783491d645fb51b7e689000af69526"}, "downloads": -1, "filename": "optimesh-0.4.3.tar.gz", "has_sig": false, "md5_digest": "d36d2777163387e486e9e2913deccf49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19380, "upload_time": "2018-08-14T14:14:27", "upload_time_iso_8601": "2018-08-14T14:14:27.054208Z", "url": "https://files.pythonhosted.org/packages/50/75/c190359b496213dcbc53a62bb004cee38219bb72bcf21284f2d3842c3a5c/optimesh-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "8a922fe794a5ee01f6ffc164f97d8fdb", "sha256": "0918ed5e0f665b051b52cef2bf392d824e9dbf2c19d87b6e7ee5460589690add"}, "downloads": -1, "filename": "optimesh-0.4.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8a922fe794a5ee01f6ffc164f97d8fdb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22366, "upload_time": "2019-03-27T10:10:45", "upload_time_iso_8601": "2019-03-27T10:10:45.165828Z", "url": "https://files.pythonhosted.org/packages/cd/dd/ee023ea35f61f3651883361675c9bc260f44dd11305d38c81b6f0375a860/optimesh-0.4.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d137082a8664e386e40046be37c248d", "sha256": "625cac92531033b42d90b9b9eb1d282b1ee3cf9e5ca6e5c9a088f3ca0ed1ea63"}, "downloads": -1, "filename": "optimesh-0.4.4.tar.gz", "has_sig": false, "md5_digest": "6d137082a8664e386e40046be37c248d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21623, "upload_time": "2019-03-27T10:10:46", "upload_time_iso_8601": "2019-03-27T10:10:46.906802Z", "url": "https://files.pythonhosted.org/packages/0f/c3/2905e973d05235086b4e4a5e56ee5af2c08b95d91a7371d86ded94604eb0/optimesh-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "ab11a89874e6a027813f7555fc392bb8", "sha256": "073eddbcf1cc68cad643200f2e36dd855b69e654d99c8d62603fa8a8c4b50099"}, "downloads": -1, "filename": "optimesh-0.4.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ab11a89874e6a027813f7555fc392bb8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23264, "upload_time": "2019-05-23T16:28:24", "upload_time_iso_8601": "2019-05-23T16:28:24.767459Z", "url": "https://files.pythonhosted.org/packages/1e/a7/712516576bd3535cd41b078b5107c0a6cf68e581a84106ef62e4e74b0ada/optimesh-0.4.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d234fa9aeacb9b14df9fc57becafae2", "sha256": "34bbb37c6a4fc50a66864996ca552d882542734efd17b6db2d72d93a43d37ba9"}, "downloads": -1, "filename": "optimesh-0.4.5.tar.gz", "has_sig": false, "md5_digest": "4d234fa9aeacb9b14df9fc57becafae2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22301, "upload_time": "2019-05-23T16:28:26", "upload_time_iso_8601": "2019-05-23T16:28:26.610212Z", "url": "https://files.pythonhosted.org/packages/66/7a/8be8790e40e2e9a5276863ffb76ea658b0072dc5e26d95f8dbebfd74925f/optimesh-0.4.5.tar.gz", "yanked": false}], "0.4.6": [{"comment_text": "", "digests": {"md5": "fd1a8873ce812f373f52d13ec7fbdfde", "sha256": "2a57e2ec55761ce9d0292fb236e93a2771b7c8714f0e4babbc3fdbf5c1ef4dad"}, "downloads": -1, "filename": "optimesh-0.4.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fd1a8873ce812f373f52d13ec7fbdfde", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23462, "upload_time": "2019-05-27T22:27:03", "upload_time_iso_8601": "2019-05-27T22:27:03.504516Z", "url": "https://files.pythonhosted.org/packages/f6/77/307c851bde148c6faf88f0f7e69f8457795f861c3279411fd72e77132e2e/optimesh-0.4.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16dd62da881dbfdbc0803e6fec793ac6", "sha256": "d5ad831a3879246d011bb5445308dbd5a5d450a2d5fc41b596558a4bdbc774a3"}, "downloads": -1, "filename": "optimesh-0.4.6.tar.gz", "has_sig": false, "md5_digest": "16dd62da881dbfdbc0803e6fec793ac6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22831, "upload_time": "2019-05-27T22:27:05", "upload_time_iso_8601": "2019-05-27T22:27:05.341796Z", "url": "https://files.pythonhosted.org/packages/6b/2c/aa2d1dd0e49a3d39568f4282efd6fe7fe1adbc80c42d7fc17dc53fb54c01/optimesh-0.4.6.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "330c4b136d703977b6d97b75431069bd", "sha256": "74e8cea397e4d45788062f2f3711f3973dd736b085481773d817dd5c4d4ec4e0"}, "downloads": -1, "filename": "optimesh-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "330c4b136d703977b6d97b75431069bd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 28390, "upload_time": "2019-07-29T18:23:11", "upload_time_iso_8601": "2019-07-29T18:23:11.309133Z", "url": "https://files.pythonhosted.org/packages/b3/ce/66e1a32a63f7729487142d5c2c0b9aa4ee50a7fd55028a576fe417fe67c6/optimesh-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c08e4f625b960153a2a77d59ed3e4ff", "sha256": "7509ab6f8cea57e76965a96083f3feba8f6c166d8dfa38c3d85e577d3a2997f1"}, "downloads": -1, "filename": "optimesh-0.5.0.tar.gz", "has_sig": false, "md5_digest": "6c08e4f625b960153a2a77d59ed3e4ff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 22097, "upload_time": "2019-07-29T18:23:13", "upload_time_iso_8601": "2019-07-29T18:23:13.160868Z", "url": "https://files.pythonhosted.org/packages/ec/e0/c395fbb29b9cd08b9c2b37215d4d37b28ebc5dda41de70542144b704489a/optimesh-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "2b1115c7f016c60f1c38db93eba03f7b", "sha256": "1b8e9a31a104bcb80fe12eff3febb9b0555104a96dc3aad63e2b9ebfd0ff95e0"}, "downloads": -1, "filename": "optimesh-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2b1115c7f016c60f1c38db93eba03f7b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 22032, "upload_time": "2019-07-29T20:43:26", "upload_time_iso_8601": "2019-07-29T20:43:26.094817Z", "url": "https://files.pythonhosted.org/packages/6b/b1/5a54c8b27bccbf30f29a9f8fccc25ddae653371cb055e8137e93abecf2ac/optimesh-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6bee614a8ccd44bb37b126ee4c060e8e", "sha256": "ac5846a95654ec0b9682fde0f0585233c9e29188461c7779e219d3292d1ee3ed"}, "downloads": -1, "filename": "optimesh-0.5.1.tar.gz", "has_sig": false, "md5_digest": "6bee614a8ccd44bb37b126ee4c060e8e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 22083, "upload_time": "2019-07-29T20:43:27", "upload_time_iso_8601": "2019-07-29T20:43:27.575714Z", "url": "https://files.pythonhosted.org/packages/ee/0d/2a4f71e1b2e0b2cb745e63bc9a0c585d524c450b2930a6551418ff00b639/optimesh-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "2e77d1abb90195c93f1f1f005b6dc0af", "sha256": "cce9a72abd34bb9d37ee4e75c721719f384dfadbf2a99652aeda8d4e74a98880"}, "downloads": -1, "filename": "optimesh-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2e77d1abb90195c93f1f1f005b6dc0af", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 21990, "upload_time": "2019-07-30T09:46:21", "upload_time_iso_8601": "2019-07-30T09:46:21.269620Z", "url": "https://files.pythonhosted.org/packages/28/70/33d55240171e925408fd6c11d2aa5e13694dccdaac33e6a4153670f11a88/optimesh-0.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c35236244a54e8174ced8d446bc268d", "sha256": "c0ffe7159bd426aa024d8c8b8c22ce0856f2919b4fb7112035e9aaec3d70b107"}, "downloads": -1, "filename": "optimesh-0.5.2.tar.gz", "has_sig": false, "md5_digest": "5c35236244a54e8174ced8d446bc268d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 22058, "upload_time": "2019-07-30T09:46:22", "upload_time_iso_8601": "2019-07-30T09:46:22.799707Z", "url": "https://files.pythonhosted.org/packages/d7/ed/67d2d8778f79e98d0fbf37e6f59faacca226503faf5dd126e736fe7b9d3c/optimesh-0.5.2.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "04670f28e996d6238b039a0fa16d58a4", "sha256": "8d2b3810b60691ea7bdaf4657855ac044a72ad4c91f4655bbac4d04909d65402"}, "downloads": -1, "filename": "optimesh-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "04670f28e996d6238b039a0fa16d58a4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 22650, "upload_time": "2019-10-16T23:00:23", "upload_time_iso_8601": "2019-10-16T23:00:23.946796Z", "url": "https://files.pythonhosted.org/packages/dd/4c/df81b7a7dcaf40f92e9fc6f3d0dc033618d24dda40106be8883c5df6fff5/optimesh-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c7bc8e2646cb0fb583720a771056ebc", "sha256": "4407a3aa7466ad1093583d9843b33cdcde122aa5e6175b08034656a8d6e595d5"}, "downloads": -1, "filename": "optimesh-0.6.0.tar.gz", "has_sig": false, "md5_digest": "0c7bc8e2646cb0fb583720a771056ebc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 23223, "upload_time": "2019-10-16T23:00:26", "upload_time_iso_8601": "2019-10-16T23:00:26.503048Z", "url": "https://files.pythonhosted.org/packages/56/d9/586d8815072fc7dc126cbd17f25aff331e8b4f3477eb809d804c1e5e4ce9/optimesh-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "565259f3a76d58eb87d625c4e311a21a", "sha256": "690479c253ba88afe211f761b262d76ef3ac363d10b0448aceedc3303ff6d1dd"}, "downloads": -1, "filename": "optimesh-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "565259f3a76d58eb87d625c4e311a21a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 22651, "upload_time": "2020-02-24T16:22:39", "upload_time_iso_8601": "2020-02-24T16:22:39.139249Z", "url": "https://files.pythonhosted.org/packages/16/07/b6a8735146fb62677aac2dcbad62d9dbe766d5029a8003a413a6d0e8a5d5/optimesh-0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ab7540bb247edfd9534d184e7bcc5ed", "sha256": "664934b1b3b3252a64d566739833822c4825e7a4e8f6c586d3e79b53b4b7a42b"}, "downloads": -1, "filename": "optimesh-0.6.1.tar.gz", "has_sig": false, "md5_digest": "0ab7540bb247edfd9534d184e7bcc5ed", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 24206, "upload_time": "2020-02-24T16:22:40", "upload_time_iso_8601": "2020-02-24T16:22:40.470802Z", "url": "https://files.pythonhosted.org/packages/dc/51/7492e2367c4f1b1426b0c8233ed27bca7c27ac2efbfb7593c4787a9eb2b8/optimesh-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "e5079151ae25d912b11d158a86027c2d", "sha256": "863c73072f68655ec06b769a5eac5ef44773e66b4e05550b3e609dcc743bd0de"}, "downloads": -1, "filename": "optimesh-0.6.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e5079151ae25d912b11d158a86027c2d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 22578, "upload_time": "2020-02-27T14:15:09", "upload_time_iso_8601": "2020-02-27T14:15:09.854527Z", "url": "https://files.pythonhosted.org/packages/78/8b/65fe0f0a4a53f4aa537ec5e22a21f526b376ca5e2fd20450c5313d0845eb/optimesh-0.6.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "38a9b47cf368c21f343f8cde0ec9c4ef", "sha256": "c09454084dd6759e16a502fdad934f97d195e79726b0307ae86d37e7e25b9a26"}, "downloads": -1, "filename": "optimesh-0.6.2.tar.gz", "has_sig": false, "md5_digest": "38a9b47cf368c21f343f8cde0ec9c4ef", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 84706, "upload_time": "2020-02-27T14:15:11", "upload_time_iso_8601": "2020-02-27T14:15:11.786997Z", "url": "https://files.pythonhosted.org/packages/4c/1e/2101aeb86ceae15050734af5455aab3d1488c366203fe1003f474a596ae9/optimesh-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "0f86d81aecc4654fa62ce69481af0776", "sha256": "bde86bf7a22f431272f33d77d8d778994ce783a0777cf98a1036e864358c5962"}, "downloads": -1, "filename": "optimesh-0.6.3-py3-none-any.whl", "has_sig": false, "md5_digest": "0f86d81aecc4654fa62ce69481af0776", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 23121, "upload_time": "2020-03-02T18:35:08", "upload_time_iso_8601": "2020-03-02T18:35:08.638256Z", "url": "https://files.pythonhosted.org/packages/a7/2b/f2709ee729a6e3027fdf49e897fbad23bd0f404cb3d592789c05c756e6e7/optimesh-0.6.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ebb26475c29cb134a35794bd2802cb2", "sha256": "894979e76da6c4388c7f8e1fff3351bb914aeb864af6aca06cb1c2268c4d6937"}, "downloads": -1, "filename": "optimesh-0.6.3.tar.gz", "has_sig": false, "md5_digest": "7ebb26475c29cb134a35794bd2802cb2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 86493, "upload_time": "2020-03-02T18:35:10", "upload_time_iso_8601": "2020-03-02T18:35:10.588779Z", "url": "https://files.pythonhosted.org/packages/1b/0e/62cb6f05b035ae0e2028dcc490778c01e29b55844d2f240115497ef66832/optimesh-0.6.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0f86d81aecc4654fa62ce69481af0776", "sha256": "bde86bf7a22f431272f33d77d8d778994ce783a0777cf98a1036e864358c5962"}, "downloads": -1, "filename": "optimesh-0.6.3-py3-none-any.whl", "has_sig": false, "md5_digest": "0f86d81aecc4654fa62ce69481af0776", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 23121, "upload_time": "2020-03-02T18:35:08", "upload_time_iso_8601": "2020-03-02T18:35:08.638256Z", "url": "https://files.pythonhosted.org/packages/a7/2b/f2709ee729a6e3027fdf49e897fbad23bd0f404cb3d592789c05c756e6e7/optimesh-0.6.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ebb26475c29cb134a35794bd2802cb2", "sha256": "894979e76da6c4388c7f8e1fff3351bb914aeb864af6aca06cb1c2268c4d6937"}, "downloads": -1, "filename": "optimesh-0.6.3.tar.gz", "has_sig": false, "md5_digest": "7ebb26475c29cb134a35794bd2802cb2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 86493, "upload_time": "2020-03-02T18:35:10", "upload_time_iso_8601": "2020-03-02T18:35:10.588779Z", "url": "https://files.pythonhosted.org/packages/1b/0e/62cb6f05b035ae0e2028dcc490778c01e29b55844d2f240115497ef66832/optimesh-0.6.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:03 2020"}