{"info": {"author": "Emin Martinian", "author_email": "emin.martinian@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Programming Language :: Python :: 3"], "description": "Introduction\n============\n\nThe ``ox_log`` python package is used to do some very simple,\nlightweight log analysis (especially in the flask web framework).\n\nIf you want to do something complicated, there are lots and lots of log\nparsing, sending, and visualization tools. Unfortunately, some of those\nsystems take some time to understand and setup.\n\nIf you just want a very simple, easy to setup system to show some\ninformation from your logs, then ``ox_log`` is for you!\n\nQuickstart\n==========\n\nFirst install ``ox_log`` using something like ``pip install ox_log`` or\nhowever you typically install python packages.\n\nwith flask\n----------\n\nIf you are using flask, you can add ``ox_log`` to your project simply by\ncreating an instance of the ``ox_log`` blueprint and registering. For\nexample, you could do something like\n\n.. code:: python\n\n    from ox_log.ui.flask_web_ui.ox_log import views as ox_log_views\n    from import ox_log.core import loader\n\n    ox_log_views.register(APP, readers={\n        'pickle_reader': loader.PickleReader,\n        'file_reader': loader.FileReader},\n                          topics={\n        '/tmp/log_items.pkl': 'pickle_reader',\n        '/tmp/log.txt': 'file_reader'}\n\nThe first line will import the ``ox_log`` views so routes will be\nregistered correctly. The second line imports the loader. The final line\nregisters the ``ox_log`` blueprint and defines a couple of readers to\nread pickled data and text log files along with some specific topics.\nThe ``APP`` variable is the flask app.\n\nWith the configuration above, you can point your browser to ``/ox_log``\nafter starting your flask app and refresh your data, view your logs, add\nor drop topics and so on.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/emin63/ox_log", "keywords": "lightweight logging visualization", "license": "custom", "maintainer": "", "maintainer_email": "", "name": "ox_log", "package_url": "https://pypi.org/project/ox_log/", "platform": "", "project_url": "https://pypi.org/project/ox_log/", "project_urls": {"Homepage": "http://github.com/emin63/ox_log"}, "release_url": "https://pypi.org/project/ox_log/0.2/", "requires_dist": null, "requires_python": "", "summary": "Lightweight log visualization.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>The <tt>ox_log</tt> python package is used to do some very simple,\nlightweight log analysis (especially in the flask web framework).</p>\n<p>If you want to do something complicated, there are lots and lots of log\nparsing, sending, and visualization tools. Unfortunately, some of those\nsystems take some time to understand and setup.</p>\n<p>If you just want a very simple, easy to setup system to show some\ninformation from your logs, then <tt>ox_log</tt> is for you!</p>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>First install <tt>ox_log</tt> using something like <tt>pip install ox_log</tt> or\nhowever you typically install python packages.</p>\n<div id=\"with-flask\">\n<h3>with flask</h3>\n<p>If you are using flask, you can add <tt>ox_log</tt> to your project simply by\ncreating an instance of the <tt>ox_log</tt> blueprint and registering. For\nexample, you could do something like</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ox_log.ui.flask_web_ui.ox_log</span> <span class=\"kn\">import</span> <span class=\"n\">views</span> <span class=\"k\">as</span> <span class=\"n\">ox_log_views</span>\n<span class=\"kn\">from</span> <span class=\"nn\">import</span> <span class=\"n\">ox_log</span><span class=\"o\">.</span><span class=\"n\">core</span> <span class=\"kn\">import</span> <span class=\"nn\">loader</span>\n\n<span class=\"n\">ox_log_views</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">APP</span><span class=\"p\">,</span> <span class=\"n\">readers</span><span class=\"o\">=</span><span class=\"p\">{</span>\n    <span class=\"s1\">'pickle_reader'</span><span class=\"p\">:</span> <span class=\"n\">loader</span><span class=\"o\">.</span><span class=\"n\">PickleReader</span><span class=\"p\">,</span>\n    <span class=\"s1\">'file_reader'</span><span class=\"p\">:</span> <span class=\"n\">loader</span><span class=\"o\">.</span><span class=\"n\">FileReader</span><span class=\"p\">},</span>\n                      <span class=\"n\">topics</span><span class=\"o\">=</span><span class=\"p\">{</span>\n    <span class=\"s1\">'/tmp/log_items.pkl'</span><span class=\"p\">:</span> <span class=\"s1\">'pickle_reader'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'/tmp/log.txt'</span><span class=\"p\">:</span> <span class=\"s1\">'file_reader'</span><span class=\"p\">}</span>\n</pre>\n<p>The first line will import the <tt>ox_log</tt> views so routes will be\nregistered correctly. The second line imports the loader. The final line\nregisters the <tt>ox_log</tt> blueprint and defines a couple of readers to\nread pickled data and text log files along with some specific topics.\nThe <tt>APP</tt> variable is the flask app.</p>\n<p>With the configuration above, you can point your browser to <tt>/ox_log</tt>\nafter starting your flask app and refresh your data, view your logs, add\nor drop topics and so on.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4802944, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "cbf5edfd5eeb677976e16eaf8effbade", "sha256": "dc780f87f051c83c28f401742565a631457efa24ec387b897edcf9cee4395433"}, "downloads": -1, "filename": "ox_log-0.1.tar.gz", "has_sig": false, "md5_digest": "cbf5edfd5eeb677976e16eaf8effbade", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7293, "upload_time": "2019-02-06T04:04:14", "upload_time_iso_8601": "2019-02-06T04:04:14.657086Z", "url": "https://files.pythonhosted.org/packages/d0/35/1131a22f4eae52a1eb793a523089b2e57bef119e2528e013dba0f98481d4/ox_log-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "b2c7cbcc0ee7d9f99f65a8f1e1e6d4ee", "sha256": "0b36c78f9f46ed7337f91b88cb3bd4a4d1243fd4cf804b9ba520881f33d2d493"}, "downloads": -1, "filename": "ox_log-0.2.tar.gz", "has_sig": false, "md5_digest": "b2c7cbcc0ee7d9f99f65a8f1e1e6d4ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17770, "upload_time": "2019-02-10T18:26:41", "upload_time_iso_8601": "2019-02-10T18:26:41.136159Z", "url": "https://files.pythonhosted.org/packages/5f/d1/c8669ff9b1122e9cb7e6e58124fe4adb01fa9c294c7775442171786fe63f/ox_log-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b2c7cbcc0ee7d9f99f65a8f1e1e6d4ee", "sha256": "0b36c78f9f46ed7337f91b88cb3bd4a4d1243fd4cf804b9ba520881f33d2d493"}, "downloads": -1, "filename": "ox_log-0.2.tar.gz", "has_sig": false, "md5_digest": "b2c7cbcc0ee7d9f99f65a8f1e1e6d4ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17770, "upload_time": "2019-02-10T18:26:41", "upload_time_iso_8601": "2019-02-10T18:26:41.136159Z", "url": "https://files.pythonhosted.org/packages/5f/d1/c8669ff9b1122e9cb7e6e58124fe4adb01fa9c294c7775442171786fe63f/ox_log-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:27 2020"}