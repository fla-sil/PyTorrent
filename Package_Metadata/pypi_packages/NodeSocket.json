{"info": {"author": "Jeremy Kanovsky", "author_email": "kanovsky.jeremy@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "# socket.py\n\n# THIS PROJECT IS DEPRECIATED. USE [SOCKET.ENGINE](https://github.com/0xJeremy/socket.engine) INSTEAD.\n\n## Installation\n\nNode.js installation:\n```\nnpm install socket.py\n```\n\nPython installation:\n```\npip install NodeSocket\n```\n\nThese libraries are developed in parallel, and designed to be used together.\n\n## Features\n\nSocket.py enables real-time bidirectional communication between a Node.js server, and a Python process. It consists of:\n\n- a Node.js server\n- a Python process with NodeSocket\n\nIts main features are:\n\n### Speed\n\nConnections are made using Unix sockets and can pass information from processes extremely quickly and reliably.\n\n### Auto-connection support\n\nUnless specifically disabled, this library will automatically connect the Node.js and Python process to ensure the connection is accessible in all parts of the program. Future versions will support auto-reconnection as well.\n\n### Disconnection detection\n\nAn event is triggered in the Node.js server when a Python process disconnects. The library will also keep track of the state of the socket connection and allow querying of the connection status.\n\n### Easy to use\n\nThis library was designed to lower the barrier to entry as much as possible. As such there are built in functions that can send and receive strings, JSON data, and raw binary data.\n\n## How to use \u2014 Node.js\n\nThe following example imports and creates the data socket in Node.js, and then sets up a listener event.\n```javascript\nconst socket = require('socket.py');\n\nvar channel = 'channel_1';\n\nsocket.write(channel, 'Hello from Node.js!');\n\nsocket.on('channel', (data) => {\n\t/* your code here */\n});\n```\n\nChannels can be written to and read from. Channels do not need to be declared by either Node.js or Python ahead of time.\nChannels do not even need to match between the processes. When the `write` command is called, a channel name and a message must be passed. This message can be of any JSON supported data type. When a message is received from Python, the channel it was passed through will emit the data.\n\nThere are also the following methods exported as part of socket.py:\n```\ngetAddress() => will return the socket address (returns a string)\n\nopenSocket() => will open the data socket (called automatically, not necessary to use unless the connection is interrupted)\n\nisOpen() => will return the state of the socket (returns a boolean)\n\nwrite(channel, msg) => write to Python\n\npipe(msg) => pipe data to python (WARNING: This function is not fully tested)\n\ngetSocket() => returns the socket object itself (for advanced users only)\n\nget(channel) => returns the last piece of data received over the on a specified channel\n```\n\n## How to use \u2014 Python\n\nThe following is a simple example of how to use NodeSocket in Python:\n```python\nfrom NodeSocket import NodeSocket\n\nsocket = NodeSocket.NodeSocket()\n\nchannel = 'channel_1'\n\nsocket.write(channel, 'Hello from Python!')\n\nresponse = socket.get(channel)\n```\n\nHere are the functions accessible from the NodeSocket library:\n```\nopen() => will open the data socket (called by default, do not call unless the connection is interrupted)\n\nclose() => will close the data socket\n\nisOpen() => returns if the socket is open (returns a boolean)\n\nget(channel) => will return the most recent data to a specific channel\n```\n\nThe socket is read from automatically and runs on a separate thread. When the socket is created it will block until the socket is open, but will otherwise not interrupt program flow.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/0xJeremy/socket.py", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "NodeSocket", "package_url": "https://pypi.org/project/NodeSocket/", "platform": "", "project_url": "https://pypi.org/project/NodeSocket/", "project_urls": {"Homepage": "https://github.com/0xJeremy/socket.py"}, "release_url": "https://pypi.org/project/NodeSocket/0.3.2/", "requires_dist": null, "requires_python": "", "summary": "A lightweight Node.js \u2194 Python data socket", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>socket.py</h1>\n<h1>THIS PROJECT IS DEPRECIATED. USE <a href=\"https://github.com/0xJeremy/socket.engine\" rel=\"nofollow\">SOCKET.ENGINE</a> INSTEAD.</h1>\n<h2>Installation</h2>\n<p>Node.js installation:</p>\n<pre><code>npm install socket.py\n</code></pre>\n<p>Python installation:</p>\n<pre><code>pip install NodeSocket\n</code></pre>\n<p>These libraries are developed in parallel, and designed to be used together.</p>\n<h2>Features</h2>\n<p>Socket.py enables real-time bidirectional communication between a Node.js server, and a Python process. It consists of:</p>\n<ul>\n<li>a Node.js server</li>\n<li>a Python process with NodeSocket</li>\n</ul>\n<p>Its main features are:</p>\n<h3>Speed</h3>\n<p>Connections are made using Unix sockets and can pass information from processes extremely quickly and reliably.</p>\n<h3>Auto-connection support</h3>\n<p>Unless specifically disabled, this library will automatically connect the Node.js and Python process to ensure the connection is accessible in all parts of the program. Future versions will support auto-reconnection as well.</p>\n<h3>Disconnection detection</h3>\n<p>An event is triggered in the Node.js server when a Python process disconnects. The library will also keep track of the state of the socket connection and allow querying of the connection status.</p>\n<h3>Easy to use</h3>\n<p>This library was designed to lower the barrier to entry as much as possible. As such there are built in functions that can send and receive strings, JSON data, and raw binary data.</p>\n<h2>How to use \u2014 Node.js</h2>\n<p>The following example imports and creates the data socket in Node.js, and then sets up a listener event.</p>\n<pre><span class=\"kr\">const</span> <span class=\"nx\">socket</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'socket.py'</span><span class=\"p\">);</span>\n\n<span class=\"kd\">var</span> <span class=\"nx\">channel</span> <span class=\"o\">=</span> <span class=\"s1\">'channel_1'</span><span class=\"p\">;</span>\n\n<span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">write</span><span class=\"p\">(</span><span class=\"nx\">channel</span><span class=\"p\">,</span> <span class=\"s1\">'Hello from Node.js!'</span><span class=\"p\">);</span>\n\n<span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s1\">'channel'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n\t<span class=\"cm\">/* your code here */</span>\n<span class=\"p\">});</span>\n</pre>\n<p>Channels can be written to and read from. Channels do not need to be declared by either Node.js or Python ahead of time.\nChannels do not even need to match between the processes. When the <code>write</code> command is called, a channel name and a message must be passed. This message can be of any JSON supported data type. When a message is received from Python, the channel it was passed through will emit the data.</p>\n<p>There are also the following methods exported as part of socket.py:</p>\n<pre><code>getAddress() =&gt; will return the socket address (returns a string)\n\nopenSocket() =&gt; will open the data socket (called automatically, not necessary to use unless the connection is interrupted)\n\nisOpen() =&gt; will return the state of the socket (returns a boolean)\n\nwrite(channel, msg) =&gt; write to Python\n\npipe(msg) =&gt; pipe data to python (WARNING: This function is not fully tested)\n\ngetSocket() =&gt; returns the socket object itself (for advanced users only)\n\nget(channel) =&gt; returns the last piece of data received over the on a specified channel\n</code></pre>\n<h2>How to use \u2014 Python</h2>\n<p>The following is a simple example of how to use NodeSocket in Python:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">NodeSocket</span> <span class=\"kn\">import</span> <span class=\"n\">NodeSocket</span>\n\n<span class=\"n\">socket</span> <span class=\"o\">=</span> <span class=\"n\">NodeSocket</span><span class=\"o\">.</span><span class=\"n\">NodeSocket</span><span class=\"p\">()</span>\n\n<span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"s1\">'channel_1'</span>\n\n<span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">channel</span><span class=\"p\">,</span> <span class=\"s1\">'Hello from Python!'</span><span class=\"p\">)</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">channel</span><span class=\"p\">)</span>\n</pre>\n<p>Here are the functions accessible from the NodeSocket library:</p>\n<pre><code>open() =&gt; will open the data socket (called by default, do not call unless the connection is interrupted)\n\nclose() =&gt; will close the data socket\n\nisOpen() =&gt; returns if the socket is open (returns a boolean)\n\nget(channel) =&gt; will return the most recent data to a specific channel\n</code></pre>\n<p>The socket is read from automatically and runs on a separate thread. When the socket is created it will block until the socket is open, but will otherwise not interrupt program flow.</p>\n\n          </div>"}, "last_serial": 6995090, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "05273311e5d293fa033bc974ae4884a4", "sha256": "9009081ad1aed523990c21cbb7cefe42b11a9ac8cc1518e241f66ad85fe0997e"}, "downloads": -1, "filename": "NodeSocket-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "05273311e5d293fa033bc974ae4884a4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1975, "upload_time": "2019-08-18T04:21:04", "upload_time_iso_8601": "2019-08-18T04:21:04.043126Z", "url": "https://files.pythonhosted.org/packages/b9/df/6e441976ea0382d7f5a735836a402effa0e7275759974b52b4628d5c5204/NodeSocket-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a612ede4dbd9faba3e0ef8e8d1bb087", "sha256": "dbf34b32b4fc4ae3bc69057cf1fcd2605f5d2db1b7b517a092b783447b1e5f7e"}, "downloads": -1, "filename": "NodeSocket-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4a612ede4dbd9faba3e0ef8e8d1bb087", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 769, "upload_time": "2019-08-18T04:21:08", "upload_time_iso_8601": "2019-08-18T04:21:08.258114Z", "url": "https://files.pythonhosted.org/packages/91/05/69d3229f962420869e9bd143e372756735a54380e116b341250cd4f57d20/NodeSocket-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "2411faf1f2deff5731408b5c574b3895", "sha256": "5c3deed308b8b848ad709ac33dfedd940a897f815bd35b97bbf6f546cc00cb8c"}, "downloads": -1, "filename": "NodeSocket-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2411faf1f2deff5731408b5c574b3895", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2847, "upload_time": "2019-08-19T02:57:12", "upload_time_iso_8601": "2019-08-19T02:57:12.678008Z", "url": "https://files.pythonhosted.org/packages/b0/f4/9052ab10b3906c2ea6a523b9527941d909ee2f387dac6460eb449ff6e6be/NodeSocket-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fa57ae2eaf13008d92f7acdda4ff6873", "sha256": "89f88989c008bb913bc302b98cae24100b7786200c594924511a7b6967ab810a"}, "downloads": -1, "filename": "NodeSocket-0.2.0.tar.gz", "has_sig": false, "md5_digest": "fa57ae2eaf13008d92f7acdda4ff6873", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2711, "upload_time": "2019-08-19T02:57:14", "upload_time_iso_8601": "2019-08-19T02:57:14.014631Z", "url": "https://files.pythonhosted.org/packages/a8/fa/480bbcad67881519a11ba2c823ffb8872be664df06597419122d101c00b5/NodeSocket-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "ce3386418f62b3f29bda57b56689dde4", "sha256": "b416281019648c1c92970d4fd4a7eb392cda0f8f9991c4b07ca3e11a1fd13e36"}, "downloads": -1, "filename": "NodeSocket-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ce3386418f62b3f29bda57b56689dde4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4159, "upload_time": "2019-08-19T03:02:57", "upload_time_iso_8601": "2019-08-19T03:02:57.806088Z", "url": "https://files.pythonhosted.org/packages/dd/1d/4583f7fa018bd8abe1520d30400a1ddf8177c094532069488521d53f78d4/NodeSocket-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1bed312f87d571963393e43b5fd4e9d", "sha256": "d77bf9f8b6827401f0dd8cbfcb4ead4e7e0f98e0458fa0daa427354494f772a7"}, "downloads": -1, "filename": "NodeSocket-0.2.1.tar.gz", "has_sig": false, "md5_digest": "c1bed312f87d571963393e43b5fd4e9d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3167, "upload_time": "2019-08-19T03:02:59", "upload_time_iso_8601": "2019-08-19T03:02:59.322470Z", "url": "https://files.pythonhosted.org/packages/65/40/6223b3f1b4961b85e505f818d6c0e652fcb2c96880f86b8f4db719fda3f5/NodeSocket-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "569a2756590d3e7083015295704e502a", "sha256": "c80e3ca7326d13ed7dc582a00e19e292424791dcca0db88ef5fb703fd1dab33f"}, "downloads": -1, "filename": "NodeSocket-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "569a2756590d3e7083015295704e502a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4259, "upload_time": "2019-08-26T23:37:00", "upload_time_iso_8601": "2019-08-26T23:37:00.953702Z", "url": "https://files.pythonhosted.org/packages/86/c7/8211813b9c853caaf776e1b5489173b59076f59b59cb4019c9eba8baa0b4/NodeSocket-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f2959b35c05432da832c4feb14441e4", "sha256": "ec09d1e55f23c1db2e6ae76a993870dd9d9bf371120e70e7aea75f2206575bd5"}, "downloads": -1, "filename": "NodeSocket-0.3.0.tar.gz", "has_sig": false, "md5_digest": "4f2959b35c05432da832c4feb14441e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3236, "upload_time": "2019-08-26T23:37:02", "upload_time_iso_8601": "2019-08-26T23:37:02.609916Z", "url": "https://files.pythonhosted.org/packages/86/cb/a88da56f78d661d1d50b3172c331e23a53fa530429324ce11a57a807968b/NodeSocket-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "0e70c6ed1f0a36768d2a583e21542fb5", "sha256": "6498bfbb44eb0a68bdcec21c87f210040f905a271e3dc64c15854ae31a55a9e6"}, "downloads": -1, "filename": "NodeSocket-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0e70c6ed1f0a36768d2a583e21542fb5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4297, "upload_time": "2019-08-27T01:31:11", "upload_time_iso_8601": "2019-08-27T01:31:11.717508Z", "url": "https://files.pythonhosted.org/packages/3d/ac/e33a0b7529b28713d392cde1b89cf2897a15c435722e598dba660fe6b3b3/NodeSocket-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e25ef5c3e8956800032dafcb2d48c9c", "sha256": "a226756cac8193c4d014ee7bf090ac9ffc7e032a7cafb6f5807de960eb827cd7"}, "downloads": -1, "filename": "NodeSocket-0.3.1.tar.gz", "has_sig": false, "md5_digest": "7e25ef5c3e8956800032dafcb2d48c9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3268, "upload_time": "2019-08-27T01:31:13", "upload_time_iso_8601": "2019-08-27T01:31:13.251434Z", "url": "https://files.pythonhosted.org/packages/b2/b9/85b1ce547620d225ae60e95033e330b4abc8787db4c9bb85a4b6c8bebff2/NodeSocket-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "82f7943b4d6fcb85044c60719c73aa35", "sha256": "cdfdfc84c47ce0348966af0bc413787ffd7e6308c0ca590e2cbd5f9b75bced0f"}, "downloads": -1, "filename": "NodeSocket-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "82f7943b4d6fcb85044c60719c73aa35", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4365, "upload_time": "2020-04-10T17:27:43", "upload_time_iso_8601": "2020-04-10T17:27:43.568444Z", "url": "https://files.pythonhosted.org/packages/2f/55/aec8677b103992b193325cd584e7bfa78ca2e069fe9db4ad871269f59a55/NodeSocket-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2dbb67538033a04fadc69a3863f2329", "sha256": "247442497818f42181a2a4715bade14163ac49c456d8078922dc82c1614dc551"}, "downloads": -1, "filename": "NodeSocket-0.3.2.tar.gz", "has_sig": false, "md5_digest": "c2dbb67538033a04fadc69a3863f2329", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3348, "upload_time": "2020-04-10T17:27:44", "upload_time_iso_8601": "2020-04-10T17:27:44.908995Z", "url": "https://files.pythonhosted.org/packages/ff/10/fafac140282ee9742fdbbb9c82ddaaf345a870cc8bc6ca9128bcff9a9fcc/NodeSocket-0.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "82f7943b4d6fcb85044c60719c73aa35", "sha256": "cdfdfc84c47ce0348966af0bc413787ffd7e6308c0ca590e2cbd5f9b75bced0f"}, "downloads": -1, "filename": "NodeSocket-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "82f7943b4d6fcb85044c60719c73aa35", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4365, "upload_time": "2020-04-10T17:27:43", "upload_time_iso_8601": "2020-04-10T17:27:43.568444Z", "url": "https://files.pythonhosted.org/packages/2f/55/aec8677b103992b193325cd584e7bfa78ca2e069fe9db4ad871269f59a55/NodeSocket-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2dbb67538033a04fadc69a3863f2329", "sha256": "247442497818f42181a2a4715bade14163ac49c456d8078922dc82c1614dc551"}, "downloads": -1, "filename": "NodeSocket-0.3.2.tar.gz", "has_sig": false, "md5_digest": "c2dbb67538033a04fadc69a3863f2329", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3348, "upload_time": "2020-04-10T17:27:44", "upload_time_iso_8601": "2020-04-10T17:27:44.908995Z", "url": "https://files.pythonhosted.org/packages/ff/10/fafac140282ee9742fdbbb9c82ddaaf345a870cc8bc6ca9128bcff9a9fcc/NodeSocket-0.3.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:57 2020"}