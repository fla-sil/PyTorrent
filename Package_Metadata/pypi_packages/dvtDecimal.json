{"info": {"author": "David COBAC", "author_email": "david.cobac@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "## Recent changes\n\n### 1.3.9\n\n1. Fixed some ambiguous sign handling\n\n2. Add difference between `__str__` and `__repr__` outputs:\n\n``` python3\n>>> import dvtDecimal as dD\n>>> f = dD.dvtDecimal(11, 7)\n>>> f\ndvtDecimal(11, 7)\n>>> print(f)\n11/7\n\n```\n\n3. Add some more operations\n\n``` python3\n>>> import dvtDecimal as dD\n>>> f = dD.dvtDecimal(2, 7)\n>>> 1 / f\ndvtDecimal(7, 2)\n>>> 2.5 * f\ndvtDecimal(5, 7)\n>>> 5.7 / f \ndvtDecimal(399, 20)\n>>> f ** -2\ndvtDecimal(49, 4)\n\n```\n\n### 1.3.8 \n\nFixed some bugs in `dotWrite` method and sign handling\n\n### 1.3.6:\n\nAdd some more operations:\n\n``` python3\n>>> import dvtDecimal as dD\n>>> f = dD.dvtDecimal(1, 2)\n>>> 2 + f\n5/2\n>>> 5 * f\n5/2\n>>> f ** 3\n1/8\n\n```\n\n\n# What is `dvtDecimal`\n\nThis package provides a way to access repeating decimals in the\ndecimal representation of rational numbers.\n\n## class object\n\n``` python3\n>>> import dvtDecimal as dD\n\n```\n\n\nOnce package importation completed, you have to create a rational\nnumber using:\n\n* a fraction representation\n\n\n``` python3\n>>> f = dD.dvtDecimal(-604, 260)\n\n```\n\nfor the fraction whose numerator is -604 and denominator is 260.\n\nDecimals ar allowed:\n\n``` python3\n>>> f = dD.dvtDecimal(-1.5, 2.8)\n\n```\n\n* or a decimal representation, it could be an integer\n\n``` python3\n>>> f = dD.dvtDecimal(2.5)\n\n```\n\n* or repeating decimals as a string\n\n``` python3\n>>> f = dD.dvtDecimal('00765')\n\n```\n\nthus creating a number (w/o irregular part) between 0 and 1.\nIn the example, 0.007650076500765... and so on.\n\n\n## object methods and variables\n\nOnce you created the object, you can access to those variables:\n\n\n``` python3\n>>> f.initValues\n[-604, 260]\n>>> f.simpValues\n[-151, 65]\n>>> f.intPart\n-2\n>>> f.repPart\n[2, 3, 0, 7, 6, 9]\n>>> f.sign\n-1\n>>> f.gcd\n4\n\n```\n\nand to those methods:\n\n\n``` python3\n>>> f.fraction()\n-604/260\n>>> f.irrPart()\n0.3\n>>> f.repPartC()\n230769\n>>> f.periodLen()\n6\n>>> f.mixedF()\n[-2, 21, 65]\n>>> f.isDecimal()\nFalse\n>>> f.dotWrite(20)\n-2.32307692307692307692\n>>> f.dispResults()\nFor fraction: -604/260\n    integer   part : -2\n    irregular part : 0.3\n    periodic  part : [2, 3, 0, 7, 6, 9]\n    mixed fraction : [-2, 21, 65]\n    simp. fraction : [-151, 65]\n               gcd : 4\n    Python outputs : -2.3230769230769233\n\n```\n\nEntering via repeating decimals string allows:\n\n``` python3\n>>> f = dD.dvtDecimal('0123456789')\n>>> f.simpValues\n[13717421, 1111111111]\n\n```\n\n\ndvtDecimal also supports minimal operations (+,-,*,/) in between\nelements of the class but also with integers or floats:\n\n\n``` python3\n>>> f = dD.dvtDecimal(1, 5)\n>>> g = dD.dvtDecimal(10, 3)\n>>> h = f + g\n>>> h.mixedF()\n[3, 8, 15]\n>>> i = f / g\n>>> i.mixedF()\n[0, 3, 50]\n\n```\n\n``` python3\n>>> f = dD.dvtDecimal(1, 5)\n>>> g = 5\n>>> h = f * g\n>>> h.isDecimal()\nTrue\n\n```\n\n\n``` python3\n>>> f = dD.dvtDecimal(1, 5)\n>>> g = dD.dvtDecimal(7, 5)\n>>> h = f - g\n>>> h.simpValues\n[-6, 5]\n\n```\n\n\n## egyptian fractions\n\nIMPORTANT 1: Egyptian fractions features are quite slow (could be\nVERY slow) because it uses dvtDecimal representation of numbers\n(unlike previous versions).  As it doesn't use algebraic\ncomputation, you have to untrust some results or at least to verify\nthem with another method...\n\nIMPORTANT 2: This part gives you results for the fractionnal part of\nthe rational number you work with i.e. the last two numbers in the\n`mixedF` list, so that you only get results for <=1 fractions.\n\n\ndvtDecimal provides the method `egyptFractions` to get `all` the\negyptian fractions equal to your current fraction.\n\n`egyptFractions` outputs a list of lists. Each of these lists are\ndenominators (increasing) for unitary fractions whose sum equals to\nyour fraction.\n\nTwo optional arguments:\n* `eF` number of fractions in the sums, default is `3`\n* `lim` max. number of solutions in the results, default is `10`\n* `lim` can be `0` for **all** fractions!\n\n\n\n``` python3\n>>> f = dD.dvtDecimal(18,5)\n>>> f.mixedF()\n[3, 3, 5]\n>>> f.egyptFractions()\n[[2, 11, 110], [2, 12, 60], [2, 14, 35], [2, 15, 30], [2, 20, 20], [3, 4, 60], [3, 5, 15], [3, 6, 10]]\n>>> f.egyptFractions(lim=5)\n[[2, 11, 110], [2, 12, 60], [2, 14, 35], [2, 15, 30], [3, 4, 60]]\n>>> f.egyptFractions(eF=4, lim=1)\n[[2, 11, 111, 12210]]\n>>> f.egyptFractions(eF=4, lim=0)\n[[2, 11, 111, 12210], [2, 11, 112, 6160], [2, 11, 114, 3135], [2, 11, 115, 2530], [2, 11, 120, 1320], [2, 11, 121, 1210], [2, 11, 130, 715], [2, 11, 132, 660], [2, 11, 135, 594], [2, 11, 154, 385], [2, 11, 160, 352], [2, 11, 165, 330], [2, 11, 210, 231], [2, 12, 61, 3660], [2, 12, 62, 1860], [2, 12, 63, 1260], [2, 12, 64, 960], [2, 12, 65, 780], [2, 12, 66, 660], [2, 12, 68, 510], [2, 12, 69, 460], [2, 12, 70, 420], [2, 12, 72, 360], [2, 12, 75, 300], [2, 12, 76, 285], [2, 12, 78, 260], [2, 12, 80, 240], [2, 12, 84, 210], [2, 12, 85, 204], [2, 12, 90, 180], [2, 12, 96, 160], [2, 12, 100, 150], [2, 12, 105, 140], [2, 12, 108, 135], [2, 12, 110, 132], [2, 13, 44, 2860], [2, 13, 45, 1170], [2, 13, 50, 325], [2, 13, 52, 260], [2, 13, 60, 156], [2, 13, 65, 130], [2, 14, 36, 1260], [2, 14, 40, 280], [2, 14, 42, 210], [2, 14, 60, 84], [2, 15, 31, 930], [2, 15, 32, 480], [2, 15, 33, 330], [2, 15, 34, 255], [2, 15, 35, 210], [2, 15, 36, 180], [2, 15, 39, 130], [2, 15, 40, 120], [2, 15, 42, 105], [2, 15, 45, 90], [2, 15, 48, 80], [2, 15, 50, 75], [2, 15, 55, 66], [2, 16, 27, 2160], [2, 16, 28, 560], [2, 16, 30, 240], [2, 16, 32, 160], [2, 16, 35, 112], [2, 16, 40, 80], [2, 16, 48, 60], [2, 17, 25, 850], [2, 17, 34, 85], [2, 18, 23, 1035], [2, 18, 24, 360], [2, 18, 25, 225], [2, 18, 27, 135], [2, 18, 30, 90], [2, 18, 35, 63], [2, 18, 36, 60], [2, 20, 21, 420], [2, 20, 22, 220], [2, 20, 24, 120], [2, 20, 25, 100], [2, 20, 28, 70], [2, 20, 30, 60], [2, 20, 36, 45], [2, 21, 28, 60], [2, 21, 35, 42], [2, 24, 30, 40], [3, 4, 61, 3660], [3, 4, 62, 1860], [3, 4, 63, 1260], [3, 4, 64, 960], [3, 4, 65, 780], [3, 4, 66, 660], [3, 4, 68, 510], [3, 4, 69, 460], [3, 4, 70, 420], [3, 4, 72, 360], [3, 4, 75, 300], [3, 4, 76, 285], [3, 4, 78, 260], [3, 4, 80, 240], [3, 4, 84, 210], [3, 4, 85, 204], [3, 4, 90, 180], [3, 4, 96, 160], [3, 4, 100, 150], [3, 4, 105, 140], [3, 4, 108, 135], [3, 4, 110, 132], [3, 5, 16, 240], [3, 5, 18, 90], [3, 5, 20, 60], [3, 5, 24, 40], [3, 6, 11, 110], [3, 6, 12, 60], [3, 6, 14, 35], [3, 6, 15, 30], [3, 7, 10, 42], [3, 8, 10, 24], [3, 9, 10, 18], [4, 5, 7, 140], [4, 5, 8, 40], [4, 5, 10, 20], [4, 5, 12, 15], [4, 6, 10, 12]]\n\n```\n\nIn the above example, egyptian fractions are thus calculated with\nfraction 3/5.\n\nFirst solution `[2, 11, 111, 12210]` (in the last command result)\nhas to be interpreted as: 3/5 = 1/2 + 1/11 + 1/111 + 1/12210\n\n\ndvtDecimal also provides `egyptG2` method. This gives you a list\nof two denominators of unitary fractions whose sum equals your\nfraction.\n\nThis is an implementation of **the greedy algorithm**. It gives you\nnaturally **matching pairs** for unitary fractions input.\n\nThe result may be an empty list since all numbers cannot be written\nas so.\n\n``` python3\n>>> f = dD.dvtDecimal(18,5)\n>>> f.intPart\n3\n>>> f.egyptG2()\n[2, 10]\n\n```\n\nSo: 18/5 = 3 + 1/2 + 1/10\n\n\n## continued fractions\n\n### what is implemented and what is not\n\nyou can:\n\n* transform a `dvtDecimal` in a (finite) sequence which terms are integers in the continued fraction representation. This is done with the `contFraction` method;\n\n* get successive rational approximations from a list representing a continued fraction. This is done using `ratApp` function on a list. Output of this function is a list of `dvtDecimal` objects.\n\n\nyou cannot:\n\n* thus so far, no periodic continued fraction forms\n\n* transform irrationals...\n\n### some examples\n\n\n* Looking for continued fractions\n\nBelow, search for 634 / 75 and for 3.14159265\n\n\n``` python3\n\n>>> f = dD.dvtDecimal(634, 75)\n>>> f.contFraction()\n[8, 2, 4, 1, 6]\n>>> f = dD.dvtDecimal(3.14159265)\n>>> f.contFraction()\n[3, 7, 15, 1, 288, 1, 2, 1, 3, 1, 7, 4]\n\n```\n\nEvery exact number gives a truthy continued fraction form.\n\nIn the latter example, the continued fraction do not represent &#960; for the decimal 3.14159265 is not &#960;\n\nWe can observe that numbers are quickly false: true continued fraction of &#960; begins with `[3, 7 15, 1, 292, 1, 1, 1, ...]`\n\n\n* Looking for rational approximations\n\n\n``` python3\n\n>>> f = dD.dvtDecimal(634, 75)\n>>> c = f.contFraction()\n>>> print(ratApp(c))\n[<dvtDecimal.dvtDecimal object at 0x7f40b8c9ec18>, <dvtDecimal.dvtDecimal object at 0x7f40b8c9ec50>, <dvtDecimal.dvtDecimal ob\nject at 0x7f40b8c9ec88>, <dvtDecimal.dvtDecimal object at 0x7f40b8c9ecc0>, <dvtDecimal.dvtDecimal object at 0x7f40b8c9ecf8>]\n>>> for d in ratApp(c):\n        print(\"{:<1}+{:>3}/{:<2}  {:<11}\".format(*d.mixedF(), d.dotWrite(10)))\n8+  0/1   8.0000000000\n8+  1/2   8.5000000000\n8+  4/9   8.4444444444\n8+  5/11  8.4545454545\n8+ 34/75  8.4533333333\n>>> f = dD.dvtDecimal(3.14159265)\n>>> c = f.contFraction()\n>>> for d in ratApp(c):\n        print(\"{:<1}+{:>7}/{:<8}  {:<8}\".format(*d.mixedF(), d.dotWrite(15)))\n3+      0/1         3.000000000000000\n3+      1/7         3.142857142857142\n3+     15/106       3.141509433962264\n3+     16/113       3.141592920353982\n3+   4623/32650     3.141592649310872\n3+   4639/32763     3.141592650245703\n3+  13901/98176     3.141592649934810\n3+  18540/130939    3.141592650012601\n3+  69521/490993    3.141592649997046\n3+  88061/621932    3.141592650000321\n3+ 685948/4844517   3.141592649999989\n3+2831853/20000000  3.141592650000000\n\n```\n\n\nThe solar year is approximately 365 days, 5 hours, 48 minutes and 45.198 seconds leading to `365.2421898` days (see [Wikipedia](https://fr.wikipedia.org/wiki/Ann%C3%A9e_tropique#Dur%C3%A9e)).\n\nLet's play with this!\n\nWe are going to round this number with a precision from 1 to 7\ndigits then transform in continued fractions and find all the\nrational approx. given by these numbers using a mixed fraction. As\nsome approx. will be equal, get unique representations and sort\nthen using numerators (in mixed form).\n\n\n``` python3\n\n>>> aS = 365.2421898\n>>> mF = []\n>>> for a in range(7):\n        aaS = round(aS,7-a)\n        f = dD.dvtDecimal(aaS)\n        c = f.contFraction()\n        for d in ratApp(c):\n            mF+=[d.mixedF()]\n\n```\n\nOK! I got all my mixed fractions from all roundings. I, now, create\na list of uniques since a lot of them are equal, for this I've used [this code from StackOverflow](https://stackoverflow.com/questions/3724551/python-uniqueness-for-list-of-lists):\n\n``` python3\n\n>>> mF = [list(x) for x in set(tuple(x) for x in mF)]\n>>> mF.sort(key=lambda l:l[1])\n>>> mF\n[[365, 0, 1], [365, 1, 5], [365, 1, 4], [365, 6, 25], [365, 7, 29], [365, 8, 33], [365, 15, 62], [365, 31, 128], [365, 53, 219\n], [365, 121, 500], [365, 132, 545], [365, 163, 673], [365, 295, 1218], [365, 458, 1891], [365, 752, 3105], [365, 814, 3361], \n[365, 1211, 5000], [365, 2473, 10211], [365, 3287, 13572], [365, 4543, 18758], [365, 5760, 23783], [365, 9838, 40621], [365, 1\n4807, 61138], [365, 20567, 84921], [365, 24219, 100000], [365, 35374, 146059], [365, 126689, 523098], [365, 542130, 2238451], \n[365, 1210949, 5000000]]\n\n```\n\nThis done, it's difficult to use for deciding leap years since\ndenominators are quite maladjusted except for 5, 4, 25, 500, 5000,\n100000, and 5000000. Now looking at numerators for these fractions, we recognize 1 year out of 4 and that's all! Where is 97 out of 400?\n\nActually, we do not use `365.2421898` but `365.2425`, let's see\nwith it:\n\n``` python3\n\n>>> f = dD.dvtDecimal(365.2425)\n>>> c = f.contFraction()\n>>> for d in ratApp(c):\n        print(\"{:<1}+{:>3}/{:<3}  {:<4}\".format(*d.mixedF(), d.dotWrite(4)))\n365+  0/1    365.0000\n365+  1/4    365.2500\n365+  8/33   365.2424\n365+ 97/400  365.2425\n\n```\n\n\n* Continued fraction of a quadratic non rational number\n\n`contFractionQ` function (it's not a method!) provides this:\n\n\n``` python3\n\n>>> import math\n>>> contFractionQ(math.sqrt(2019))\n[44, [1, 13, 1, 88]]\n\n```\n\nThe nested list is the periodic part of the continued fraction.\n\n\n## (La)TeX output\n\nSince 1.3.0 version, `dvtDecimal` offers some (La)TeX output\nfunctions. Actullaly this is native TeX, so that it doesn't require\nany special package.\n\nMY usage is to format continued fractions with `\\displaystyle`, if\nyou don't want them, just search and destroy with your (La)TeX\neditor!\n\n\n* `toTeX` method for `dvtDecimal` objects\n\nOutputs fraction (w/o dps!), mixed fraction and decimal\nrepresentation.\n\n``` python3\n\n>>> f = dD.dvtDecimal(1, 7)\n>>> f.toTeX()\n['{1\\\\over7}', '{0\\\\raise.21em\\\\hbox{$\\\\scriptscriptstyle\\\\frac{1}{7}$}}', '0.\\\\overline{142857}']\n>>> print(f.toTex()[1])\n{0\\raise.21em\\hbox{$\\scriptscriptstyle\\frac{1}{7}$}}\n\n```\n\n* `egToTeX` function\n\nOutputs egyptian fractions sum for list as argument. The list is\ntypically output of the `egyptG2` method.\n\n``` python3\n\n>>> f = dD.dvtDecimal(1, 7)\n>>> f.egyptG2()\n[8, 56]\n>>> egToTeX(f.egyptG2())\n'{1\\\\over8}+{1\\\\over56}'\n>>> print(egToTeX(f.egyptG2()))\n{1\\over8}+{1\\over56}\n\n```\n\n* continued fractions functions: `cfToTeX` and `cfQToTeX`\n\nFirst outputs full continued fraction of a finite (flat)\nlist. Typically to use with `contFraction` method.\n\n``` python3\n\n>>> f = dD.dvtDecimal(123, 43)\n>>> f.contFraction()\n[2, 1, 6, 6]\n>>> cfToTeX(f.contFraction())\n'2+\\\\displaystyle{\\\\strut1\\\\over\\\\displaystyle1+{\\\\strut1\\\\over\\\\displaystyle6+{\\\\strut1\\\\over6}}}'\n>>> print(cfToTeX(f.contFraction()))\n2+\\displaystyle{\\strut1\\over\\displaystyle1+{\\strut1\\over\\displaystyle6+{\\strut1\\over6}}}\n\n```\n\nLast outputs partial continued fraction of a periodic continued\nfraction. Typically to use with `contFractionQ` function.\n\nSo the list to provide contains numbers and a list (see\n`contFractionQ`) and needs an integer as a second argument: this is\nthe index of the end, you'll get `\\dots` in the last unit fraction.\n\n``` python3\n\n>>> import math\n>>> contFractionQ(math.sqrt(23))\n[4, [1, 3, 1, 8]]\n>>> cfQToTex(contFractionQ(math.sqrt(23)), 7)\n[4] [1, 3, 1, 8]\n'4+\\\\displaystyle{\\\\strut1\\\\over\\\\displaystyle1+{\\\\strut1\\\\over\\\\displaystyle3+{\\\\strut1\\\\over\\\\displaystyle1+{\\\\strut1\\\\over\\\\displaystyle8+{\\\\strut1\\\\over\\\\displaystyle1+{\\\\strut1\\\\over\\\\displaystyle3+{\\\\strut1\\\\over\\\\displaystyle\\\\dots}}}}}}}'\n>>> print(cfQToTex(contFractionQ(math.sqrt(23)), 7))\n[4] [1, 3, 1, 8]\n4+\\displaystyle{\\strut1\\over\\displaystyle1+{\\strut1\\over\\displaystyle3+{\\strut1\\over\\displaystyle1+{\\strut1\\over\\displaystyle8+{\\strut1\\over\\displaystyle1+{\\strut1\\over\\displaystyle3+{\\strut1\\over\\displaystyle\\dots}}}}}}}\n\n```\n\n## further\n\nI hope to:\n\n* improve `contFractionQ` function and provide a way to\nget succesive rational approximations ;\n\n* improve egyptian fractions methods to speed up calculations.\n\n\n## about\n\ndvtDecimal is rather an attempt to publish on the `PyPi` packages\nindex than a fully completed python project, I do not recommend\ndvtDecimal usage for professionnal use. You have to consider this\npackage as an experiment.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://twitter.com/david_cobac", "keywords": "rational,numbers,fraction,decimal,nombres,d\u00e9cimaux", "license": "CC-BY-NC-SA", "maintainer": "", "maintainer_email": "", "name": "dvtDecimal", "package_url": "https://pypi.org/project/dvtDecimal/", "platform": "", "project_url": "https://pypi.org/project/dvtDecimal/", "project_urls": {"Homepage": "https://twitter.com/david_cobac"}, "release_url": "https://pypi.org/project/dvtDecimal/1.4.0/", "requires_dist": null, "requires_python": "", "summary": "Repeating digits of rational numbers", "version": "1.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Recent changes</h2>\n<h3>1.3.9</h3>\n<ol>\n<li>\n<p>Fixed some ambiguous sign handling</p>\n</li>\n<li>\n<p>Add difference between <code>__str__</code> and <code>__repr__</code> outputs:</p>\n</li>\n</ol>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">dvtDecimal</span> <span class=\"k\">as</span> <span class=\"nn\">dD</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span>\n<span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n<span class=\"mi\">11</span><span class=\"o\">/</span><span class=\"mi\">7</span>\n</pre>\n<ol>\n<li>Add some more operations</li>\n</ol>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">dvtDecimal</span> <span class=\"k\">as</span> <span class=\"nn\">dD</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">1</span> <span class=\"o\">/</span> <span class=\"n\">f</span>\n<span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mf\">2.5</span> <span class=\"o\">*</span> <span class=\"n\">f</span>\n<span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mf\">5.7</span> <span class=\"o\">/</span> <span class=\"n\">f</span> \n<span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mi\">399</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">**</span> <span class=\"o\">-</span><span class=\"mi\">2</span>\n<span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mi\">49</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n</pre>\n<h3>1.3.8</h3>\n<p>Fixed some bugs in <code>dotWrite</code> method and sign handling</p>\n<h3>1.3.6:</h3>\n<p>Add some more operations:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">dvtDecimal</span> <span class=\"k\">as</span> <span class=\"nn\">dD</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"n\">f</span>\n<span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"mi\">2</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"mi\">5</span> <span class=\"o\">*</span> <span class=\"n\">f</span>\n<span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"mi\">2</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">**</span> <span class=\"mi\">3</span>\n<span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mi\">8</span>\n</pre>\n<h1>What is <code>dvtDecimal</code></h1>\n<p>This package provides a way to access repeating decimals in the\ndecimal representation of rational numbers.</p>\n<h2>class object</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">dvtDecimal</span> <span class=\"k\">as</span> <span class=\"nn\">dD</span>\n</pre>\n<p>Once package importation completed, you have to create a rational\nnumber using:</p>\n<ul>\n<li>a fraction representation</li>\n</ul>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">604</span><span class=\"p\">,</span> <span class=\"mi\">260</span><span class=\"p\">)</span>\n</pre>\n<p>for the fraction whose numerator is -604 and denominator is 260.</p>\n<p>Decimals ar allowed:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">1.5</span><span class=\"p\">,</span> <span class=\"mf\">2.8</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>or a decimal representation, it could be an integer</li>\n</ul>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mf\">2.5</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>or repeating decimals as a string</li>\n</ul>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"s1\">'00765'</span><span class=\"p\">)</span>\n</pre>\n<p>thus creating a number (w/o irregular part) between 0 and 1.\nIn the example, 0.007650076500765... and so on.</p>\n<h2>object methods and variables</h2>\n<p>Once you created the object, you can access to those variables:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">initValues</span>\n<span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">604</span><span class=\"p\">,</span> <span class=\"mi\">260</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">simpValues</span>\n<span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">151</span><span class=\"p\">,</span> <span class=\"mi\">65</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">intPart</span>\n<span class=\"o\">-</span><span class=\"mi\">2</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">repPart</span>\n<span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">sign</span>\n<span class=\"o\">-</span><span class=\"mi\">1</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">gcd</span>\n<span class=\"mi\">4</span>\n</pre>\n<p>and to those methods:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">fraction</span><span class=\"p\">()</span>\n<span class=\"o\">-</span><span class=\"mi\">604</span><span class=\"o\">/</span><span class=\"mi\">260</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">irrPart</span><span class=\"p\">()</span>\n<span class=\"mf\">0.3</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">repPartC</span><span class=\"p\">()</span>\n<span class=\"mi\">230769</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">periodLen</span><span class=\"p\">()</span>\n<span class=\"mi\">6</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">mixedF</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"mi\">65</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">isDecimal</span><span class=\"p\">()</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">dotWrite</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n<span class=\"o\">-</span><span class=\"mf\">2.32307692307692307692</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">dispResults</span><span class=\"p\">()</span>\n<span class=\"n\">For</span> <span class=\"n\">fraction</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">604</span><span class=\"o\">/</span><span class=\"mi\">260</span>\n    <span class=\"n\">integer</span>   <span class=\"n\">part</span> <span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span>\n    <span class=\"n\">irregular</span> <span class=\"n\">part</span> <span class=\"p\">:</span> <span class=\"mf\">0.3</span>\n    <span class=\"n\">periodic</span>  <span class=\"n\">part</span> <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">]</span>\n    <span class=\"n\">mixed</span> <span class=\"n\">fraction</span> <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"mi\">65</span><span class=\"p\">]</span>\n    <span class=\"n\">simp</span><span class=\"o\">.</span> <span class=\"n\">fraction</span> <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">151</span><span class=\"p\">,</span> <span class=\"mi\">65</span><span class=\"p\">]</span>\n               <span class=\"n\">gcd</span> <span class=\"p\">:</span> <span class=\"mi\">4</span>\n    <span class=\"n\">Python</span> <span class=\"n\">outputs</span> <span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mf\">2.3230769230769233</span>\n</pre>\n<p>Entering via repeating decimals string allows:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"s1\">'0123456789'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">simpValues</span>\n<span class=\"p\">[</span><span class=\"mi\">13717421</span><span class=\"p\">,</span> <span class=\"mi\">1111111111</span><span class=\"p\">]</span>\n</pre>\n<p>dvtDecimal also supports minimal operations (+,-,*,/) in between\nelements of the class but also with integers or floats:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">g</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">f</span> <span class=\"o\">+</span> <span class=\"n\">g</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">mixedF</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">f</span> <span class=\"o\">/</span> <span class=\"n\">g</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">mixedF</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">]</span>\n</pre>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">g</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">f</span> <span class=\"o\">*</span> <span class=\"n\">g</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">isDecimal</span><span class=\"p\">()</span>\n<span class=\"kc\">True</span>\n</pre>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">g</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">f</span> <span class=\"o\">-</span> <span class=\"n\">g</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">simpValues</span>\n<span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]</span>\n</pre>\n<h2>egyptian fractions</h2>\n<p>IMPORTANT 1: Egyptian fractions features are quite slow (could be\nVERY slow) because it uses dvtDecimal representation of numbers\n(unlike previous versions).  As it doesn't use algebraic\ncomputation, you have to untrust some results or at least to verify\nthem with another method...</p>\n<p>IMPORTANT 2: This part gives you results for the fractionnal part of\nthe rational number you work with i.e. the last two numbers in the\n<code>mixedF</code> list, so that you only get results for &lt;=1 fractions.</p>\n<p>dvtDecimal provides the method <code>egyptFractions</code> to get <code>all</code> the\negyptian fractions equal to your current fraction.</p>\n<p><code>egyptFractions</code> outputs a list of lists. Each of these lists are\ndenominators (increasing) for unitary fractions whose sum equals to\nyour fraction.</p>\n<p>Two optional arguments:</p>\n<ul>\n<li><code>eF</code> number of fractions in the sums, default is <code>3</code></li>\n<li><code>lim</code> max. number of solutions in the results, default is <code>10</code></li>\n<li><code>lim</code> can be <code>0</code> for <strong>all</strong> fractions!</li>\n</ul>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mi\">18</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">mixedF</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">egyptFractions</span><span class=\"p\">()</span>\n<span class=\"p\">[[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">110</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">35</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">]]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">egyptFractions</span><span class=\"p\">(</span><span class=\"n\">lim</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"p\">[[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">110</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">35</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">]]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">egyptFractions</span><span class=\"p\">(</span><span class=\"n\">eF</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">lim</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"p\">[[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">111</span><span class=\"p\">,</span> <span class=\"mi\">12210</span><span class=\"p\">]]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">egyptFractions</span><span class=\"p\">(</span><span class=\"n\">eF</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">lim</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"p\">[[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">111</span><span class=\"p\">,</span> <span class=\"mi\">12210</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">112</span><span class=\"p\">,</span> <span class=\"mi\">6160</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">114</span><span class=\"p\">,</span> <span class=\"mi\">3135</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">115</span><span class=\"p\">,</span> <span class=\"mi\">2530</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">120</span><span class=\"p\">,</span> <span class=\"mi\">1320</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">121</span><span class=\"p\">,</span> <span class=\"mi\">1210</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">130</span><span class=\"p\">,</span> <span class=\"mi\">715</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">132</span><span class=\"p\">,</span> <span class=\"mi\">660</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">135</span><span class=\"p\">,</span> <span class=\"mi\">594</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">154</span><span class=\"p\">,</span> <span class=\"mi\">385</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">160</span><span class=\"p\">,</span> <span class=\"mi\">352</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">165</span><span class=\"p\">,</span> <span class=\"mi\">330</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">210</span><span class=\"p\">,</span> <span class=\"mi\">231</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">61</span><span class=\"p\">,</span> <span class=\"mi\">3660</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">62</span><span class=\"p\">,</span> <span class=\"mi\">1860</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">63</span><span class=\"p\">,</span> <span class=\"mi\">1260</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"mi\">960</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">65</span><span class=\"p\">,</span> <span class=\"mi\">780</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">66</span><span class=\"p\">,</span> <span class=\"mi\">660</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">68</span><span class=\"p\">,</span> <span class=\"mi\">510</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">69</span><span class=\"p\">,</span> <span class=\"mi\">460</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">70</span><span class=\"p\">,</span> <span class=\"mi\">420</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">72</span><span class=\"p\">,</span> <span class=\"mi\">360</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">76</span><span class=\"p\">,</span> <span class=\"mi\">285</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">78</span><span class=\"p\">,</span> <span class=\"mi\">260</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">80</span><span class=\"p\">,</span> <span class=\"mi\">240</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">84</span><span class=\"p\">,</span> <span class=\"mi\">210</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">85</span><span class=\"p\">,</span> <span class=\"mi\">204</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">180</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">96</span><span class=\"p\">,</span> <span class=\"mi\">160</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">150</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">105</span><span class=\"p\">,</span> <span class=\"mi\">140</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">108</span><span class=\"p\">,</span> <span class=\"mi\">135</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">110</span><span class=\"p\">,</span> <span class=\"mi\">132</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">44</span><span class=\"p\">,</span> <span class=\"mi\">2860</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">45</span><span class=\"p\">,</span> <span class=\"mi\">1170</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">325</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">52</span><span class=\"p\">,</span> <span class=\"mi\">260</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"mi\">156</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">65</span><span class=\"p\">,</span> <span class=\"mi\">130</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">36</span><span class=\"p\">,</span> <span class=\"mi\">1260</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">40</span><span class=\"p\">,</span> <span class=\"mi\">280</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">42</span><span class=\"p\">,</span> <span class=\"mi\">210</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"mi\">84</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">31</span><span class=\"p\">,</span> <span class=\"mi\">930</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"mi\">480</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">33</span><span class=\"p\">,</span> <span class=\"mi\">330</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">34</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">35</span><span class=\"p\">,</span> <span class=\"mi\">210</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">36</span><span class=\"p\">,</span> <span class=\"mi\">180</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">39</span><span class=\"p\">,</span> <span class=\"mi\">130</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">40</span><span class=\"p\">,</span> <span class=\"mi\">120</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">42</span><span class=\"p\">,</span> <span class=\"mi\">105</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">45</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">48</span><span class=\"p\">,</span> <span class=\"mi\">80</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">55</span><span class=\"p\">,</span> <span class=\"mi\">66</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">27</span><span class=\"p\">,</span> <span class=\"mi\">2160</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">28</span><span class=\"p\">,</span> <span class=\"mi\">560</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">240</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"mi\">160</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">35</span><span class=\"p\">,</span> <span class=\"mi\">112</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">40</span><span class=\"p\">,</span> <span class=\"mi\">80</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">48</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"mi\">850</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">34</span><span class=\"p\">,</span> <span class=\"mi\">85</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">1035</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"mi\">24</span><span class=\"p\">,</span> <span class=\"mi\">360</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"mi\">225</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"mi\">27</span><span class=\"p\">,</span> <span class=\"mi\">135</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"mi\">35</span><span class=\"p\">,</span> <span class=\"mi\">63</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"mi\">36</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"mi\">420</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">,</span> <span class=\"mi\">220</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">24</span><span class=\"p\">,</span> <span class=\"mi\">120</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">28</span><span class=\"p\">,</span> <span class=\"mi\">70</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">36</span><span class=\"p\">,</span> <span class=\"mi\">45</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"mi\">28</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"mi\">35</span><span class=\"p\">,</span> <span class=\"mi\">42</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">24</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">40</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">61</span><span class=\"p\">,</span> <span class=\"mi\">3660</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">62</span><span class=\"p\">,</span> <span class=\"mi\">1860</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">63</span><span class=\"p\">,</span> <span class=\"mi\">1260</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"mi\">960</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">65</span><span class=\"p\">,</span> <span class=\"mi\">780</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">66</span><span class=\"p\">,</span> <span class=\"mi\">660</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">68</span><span class=\"p\">,</span> <span class=\"mi\">510</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">69</span><span class=\"p\">,</span> <span class=\"mi\">460</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">70</span><span class=\"p\">,</span> <span class=\"mi\">420</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">72</span><span class=\"p\">,</span> <span class=\"mi\">360</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">76</span><span class=\"p\">,</span> <span class=\"mi\">285</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">78</span><span class=\"p\">,</span> <span class=\"mi\">260</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">80</span><span class=\"p\">,</span> <span class=\"mi\">240</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">84</span><span class=\"p\">,</span> <span class=\"mi\">210</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">85</span><span class=\"p\">,</span> <span class=\"mi\">204</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">180</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">96</span><span class=\"p\">,</span> <span class=\"mi\">160</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">150</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">105</span><span class=\"p\">,</span> <span class=\"mi\">140</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">108</span><span class=\"p\">,</span> <span class=\"mi\">135</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">110</span><span class=\"p\">,</span> <span class=\"mi\">132</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">240</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">24</span><span class=\"p\">,</span> <span class=\"mi\">40</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">110</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">35</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">42</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">24</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">18</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">140</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">40</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">]]</span>\n</pre>\n<p>In the above example, egyptian fractions are thus calculated with\nfraction 3/5.</p>\n<p>First solution <code>[2, 11, 111, 12210]</code> (in the last command result)\nhas to be interpreted as: 3/5 = 1/2 + 1/11 + 1/111 + 1/12210</p>\n<p>dvtDecimal also provides <code>egyptG2</code> method. This gives you a list\nof two denominators of unitary fractions whose sum equals your\nfraction.</p>\n<p>This is an implementation of <strong>the greedy algorithm</strong>. It gives you\nnaturally <strong>matching pairs</strong> for unitary fractions input.</p>\n<p>The result may be an empty list since all numbers cannot be written\nas so.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mi\">18</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">intPart</span>\n<span class=\"mi\">3</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">egyptG2</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">]</span>\n</pre>\n<p>So: 18/5 = 3 + 1/2 + 1/10</p>\n<h2>continued fractions</h2>\n<h3>what is implemented and what is not</h3>\n<p>you can:</p>\n<ul>\n<li>\n<p>transform a <code>dvtDecimal</code> in a (finite) sequence which terms are integers in the continued fraction representation. This is done with the <code>contFraction</code> method;</p>\n</li>\n<li>\n<p>get successive rational approximations from a list representing a continued fraction. This is done using <code>ratApp</code> function on a list. Output of this function is a list of <code>dvtDecimal</code> objects.</p>\n</li>\n</ul>\n<p>you cannot:</p>\n<ul>\n<li>\n<p>thus so far, no periodic continued fraction forms</p>\n</li>\n<li>\n<p>transform irrationals...</p>\n</li>\n</ul>\n<h3>some examples</h3>\n<ul>\n<li>Looking for continued fractions</li>\n</ul>\n<p>Below, search for 634 / 75 and for 3.14159265</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mi\">634</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">contFraction</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mf\">3.14159265</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">contFraction</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">288</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]</span>\n</pre>\n<p>Every exact number gives a truthy continued fraction form.</p>\n<p>In the latter example, the continued fraction do not represent \u03c0 for the decimal 3.14159265 is not \u03c0</p>\n<p>We can observe that numbers are quickly false: true continued fraction of \u03c0 begins with <code>[3, 7 15, 1, 292, 1, 1, 1, ...]</code></p>\n<ul>\n<li>Looking for rational approximations</li>\n</ul>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mi\">634</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">contFraction</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ratApp</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">))</span>\n<span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">dvtDecimal</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7f40b8c9ec18</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">dvtDecimal</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7f40b8c9ec50</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">dvtDecimal</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span> <span class=\"n\">ob</span>\n<span class=\"n\">ject</span> <span class=\"n\">at</span> <span class=\"mh\">0x7f40b8c9ec88</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">dvtDecimal</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7f40b8c9ecc0</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">dvtDecimal</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7f40b8c9ecf8</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">d</span> <span class=\"ow\">in</span> <span class=\"n\">ratApp</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{:&lt;1}</span><span class=\"s2\">+</span><span class=\"si\">{:&gt;3}</span><span class=\"s2\">/</span><span class=\"si\">{:&lt;2}</span><span class=\"s2\">  </span><span class=\"si\">{:&lt;11}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">mixedF</span><span class=\"p\">(),</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">dotWrite</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)))</span>\n<span class=\"mi\">8</span><span class=\"o\">+</span>  <span class=\"mi\">0</span><span class=\"o\">/</span><span class=\"mi\">1</span>   <span class=\"mf\">8.0000000000</span>\n<span class=\"mi\">8</span><span class=\"o\">+</span>  <span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mi\">2</span>   <span class=\"mf\">8.5000000000</span>\n<span class=\"mi\">8</span><span class=\"o\">+</span>  <span class=\"mi\">4</span><span class=\"o\">/</span><span class=\"mi\">9</span>   <span class=\"mf\">8.4444444444</span>\n<span class=\"mi\">8</span><span class=\"o\">+</span>  <span class=\"mi\">5</span><span class=\"o\">/</span><span class=\"mi\">11</span>  <span class=\"mf\">8.4545454545</span>\n<span class=\"mi\">8</span><span class=\"o\">+</span> <span class=\"mi\">34</span><span class=\"o\">/</span><span class=\"mi\">75</span>  <span class=\"mf\">8.4533333333</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mf\">3.14159265</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">contFraction</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">d</span> <span class=\"ow\">in</span> <span class=\"n\">ratApp</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{:&lt;1}</span><span class=\"s2\">+</span><span class=\"si\">{:&gt;7}</span><span class=\"s2\">/</span><span class=\"si\">{:&lt;8}</span><span class=\"s2\">  </span><span class=\"si\">{:&lt;8}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">mixedF</span><span class=\"p\">(),</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">dotWrite</span><span class=\"p\">(</span><span class=\"mi\">15</span><span class=\"p\">)))</span>\n<span class=\"mi\">3</span><span class=\"o\">+</span>      <span class=\"mi\">0</span><span class=\"o\">/</span><span class=\"mi\">1</span>         <span class=\"mf\">3.000000000000000</span>\n<span class=\"mi\">3</span><span class=\"o\">+</span>      <span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mi\">7</span>         <span class=\"mf\">3.142857142857142</span>\n<span class=\"mi\">3</span><span class=\"o\">+</span>     <span class=\"mi\">15</span><span class=\"o\">/</span><span class=\"mi\">106</span>       <span class=\"mf\">3.141509433962264</span>\n<span class=\"mi\">3</span><span class=\"o\">+</span>     <span class=\"mi\">16</span><span class=\"o\">/</span><span class=\"mi\">113</span>       <span class=\"mf\">3.141592920353982</span>\n<span class=\"mi\">3</span><span class=\"o\">+</span>   <span class=\"mi\">4623</span><span class=\"o\">/</span><span class=\"mi\">32650</span>     <span class=\"mf\">3.141592649310872</span>\n<span class=\"mi\">3</span><span class=\"o\">+</span>   <span class=\"mi\">4639</span><span class=\"o\">/</span><span class=\"mi\">32763</span>     <span class=\"mf\">3.141592650245703</span>\n<span class=\"mi\">3</span><span class=\"o\">+</span>  <span class=\"mi\">13901</span><span class=\"o\">/</span><span class=\"mi\">98176</span>     <span class=\"mf\">3.141592649934810</span>\n<span class=\"mi\">3</span><span class=\"o\">+</span>  <span class=\"mi\">18540</span><span class=\"o\">/</span><span class=\"mi\">130939</span>    <span class=\"mf\">3.141592650012601</span>\n<span class=\"mi\">3</span><span class=\"o\">+</span>  <span class=\"mi\">69521</span><span class=\"o\">/</span><span class=\"mi\">490993</span>    <span class=\"mf\">3.141592649997046</span>\n<span class=\"mi\">3</span><span class=\"o\">+</span>  <span class=\"mi\">88061</span><span class=\"o\">/</span><span class=\"mi\">621932</span>    <span class=\"mf\">3.141592650000321</span>\n<span class=\"mi\">3</span><span class=\"o\">+</span> <span class=\"mi\">685948</span><span class=\"o\">/</span><span class=\"mi\">4844517</span>   <span class=\"mf\">3.141592649999989</span>\n<span class=\"mi\">3</span><span class=\"o\">+</span><span class=\"mi\">2831853</span><span class=\"o\">/</span><span class=\"mi\">20000000</span>  <span class=\"mf\">3.141592650000000</span>\n</pre>\n<p>The solar year is approximately 365 days, 5 hours, 48 minutes and 45.198 seconds leading to <code>365.2421898</code> days (see <a href=\"https://fr.wikipedia.org/wiki/Ann%C3%A9e_tropique#Dur%C3%A9e\" rel=\"nofollow\">Wikipedia</a>).</p>\n<p>Let's play with this!</p>\n<p>We are going to round this number with a precision from 1 to 7\ndigits then transform in continued fractions and find all the\nrational approx. given by these numbers using a mixed fraction. As\nsome approx. will be equal, get unique representations and sort\nthen using numerators (in mixed form).</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">aS</span> <span class=\"o\">=</span> <span class=\"mf\">365.2421898</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mF</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">a</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">):</span>\n        <span class=\"n\">aaS</span> <span class=\"o\">=</span> <span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"n\">aS</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"o\">-</span><span class=\"n\">a</span><span class=\"p\">)</span>\n        <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"n\">aaS</span><span class=\"p\">)</span>\n        <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">contFraction</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">d</span> <span class=\"ow\">in</span> <span class=\"n\">ratApp</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">):</span>\n            <span class=\"n\">mF</span><span class=\"o\">+=</span><span class=\"p\">[</span><span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">mixedF</span><span class=\"p\">()]</span>\n</pre>\n<p>OK! I got all my mixed fractions from all roundings. I, now, create\na list of uniques since a lot of them are equal, for this I've used <a href=\"https://stackoverflow.com/questions/3724551/python-uniqueness-for-list-of-lists\" rel=\"nofollow\">this code from StackOverflow</a>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mF</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">mF</span><span class=\"p\">)]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mF</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">l</span><span class=\"p\">:</span><span class=\"n\">l</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mF</span>\n<span class=\"p\">[[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">29</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">33</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">62</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">31</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">53</span><span class=\"p\">,</span> <span class=\"mi\">219</span>\n<span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">121</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">132</span><span class=\"p\">,</span> <span class=\"mi\">545</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">163</span><span class=\"p\">,</span> <span class=\"mi\">673</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">295</span><span class=\"p\">,</span> <span class=\"mi\">1218</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">458</span><span class=\"p\">,</span> <span class=\"mi\">1891</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">752</span><span class=\"p\">,</span> <span class=\"mi\">3105</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">814</span><span class=\"p\">,</span> <span class=\"mi\">3361</span><span class=\"p\">],</span> \n<span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">1211</span><span class=\"p\">,</span> <span class=\"mi\">5000</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">2473</span><span class=\"p\">,</span> <span class=\"mi\">10211</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">3287</span><span class=\"p\">,</span> <span class=\"mi\">13572</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">4543</span><span class=\"p\">,</span> <span class=\"mi\">18758</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">5760</span><span class=\"p\">,</span> <span class=\"mi\">23783</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">9838</span><span class=\"p\">,</span> <span class=\"mi\">40621</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">1</span>\n<span class=\"mi\">4807</span><span class=\"p\">,</span> <span class=\"mi\">61138</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">20567</span><span class=\"p\">,</span> <span class=\"mi\">84921</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">24219</span><span class=\"p\">,</span> <span class=\"mi\">100000</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">35374</span><span class=\"p\">,</span> <span class=\"mi\">146059</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">126689</span><span class=\"p\">,</span> <span class=\"mi\">523098</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">542130</span><span class=\"p\">,</span> <span class=\"mi\">2238451</span><span class=\"p\">],</span> \n<span class=\"p\">[</span><span class=\"mi\">365</span><span class=\"p\">,</span> <span class=\"mi\">1210949</span><span class=\"p\">,</span> <span class=\"mi\">5000000</span><span class=\"p\">]]</span>\n</pre>\n<p>This done, it's difficult to use for deciding leap years since\ndenominators are quite maladjusted except for 5, 4, 25, 500, 5000,\n100000, and 5000000. Now looking at numerators for these fractions, we recognize 1 year out of 4 and that's all! Where is 97 out of 400?</p>\n<p>Actually, we do not use <code>365.2421898</code> but <code>365.2425</code>, let's see\nwith it:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mf\">365.2425</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">contFraction</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">d</span> <span class=\"ow\">in</span> <span class=\"n\">ratApp</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{:&lt;1}</span><span class=\"s2\">+</span><span class=\"si\">{:&gt;3}</span><span class=\"s2\">/</span><span class=\"si\">{:&lt;3}</span><span class=\"s2\">  </span><span class=\"si\">{:&lt;4}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">mixedF</span><span class=\"p\">(),</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">dotWrite</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)))</span>\n<span class=\"mi\">365</span><span class=\"o\">+</span>  <span class=\"mi\">0</span><span class=\"o\">/</span><span class=\"mi\">1</span>    <span class=\"mf\">365.0000</span>\n<span class=\"mi\">365</span><span class=\"o\">+</span>  <span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mi\">4</span>    <span class=\"mf\">365.2500</span>\n<span class=\"mi\">365</span><span class=\"o\">+</span>  <span class=\"mi\">8</span><span class=\"o\">/</span><span class=\"mi\">33</span>   <span class=\"mf\">365.2424</span>\n<span class=\"mi\">365</span><span class=\"o\">+</span> <span class=\"mi\">97</span><span class=\"o\">/</span><span class=\"mi\">400</span>  <span class=\"mf\">365.2425</span>\n</pre>\n<ul>\n<li>Continued fraction of a quadratic non rational number</li>\n</ul>\n<p><code>contFractionQ</code> function (it's not a method!) provides this:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">contFractionQ</span><span class=\"p\">(</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">))</span>\n<span class=\"p\">[</span><span class=\"mi\">44</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">88</span><span class=\"p\">]]</span>\n</pre>\n<p>The nested list is the periodic part of the continued fraction.</p>\n<h2>(La)TeX output</h2>\n<p>Since 1.3.0 version, <code>dvtDecimal</code> offers some (La)TeX output\nfunctions. Actullaly this is native TeX, so that it doesn't require\nany special package.</p>\n<p>MY usage is to format continued fractions with <code>\\displaystyle</code>, if\nyou don't want them, just search and destroy with your (La)TeX\neditor!</p>\n<ul>\n<li><code>toTeX</code> method for <code>dvtDecimal</code> objects</li>\n</ul>\n<p>Outputs fraction (w/o dps!), mixed fraction and decimal\nrepresentation.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">toTeX</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"s1\">'{1</span><span class=\"se\">\\\\</span><span class=\"s1\">over7}'</span><span class=\"p\">,</span> <span class=\"s1\">'{0</span><span class=\"se\">\\\\</span><span class=\"s1\">raise.21em</span><span class=\"se\">\\\\</span><span class=\"s1\">hbox{$</span><span class=\"se\">\\\\</span><span class=\"s1\">scriptscriptstyle</span><span class=\"se\">\\\\</span><span class=\"s1\">frac</span><span class=\"si\">{1}{7}</span><span class=\"s1\">$}}'</span><span class=\"p\">,</span> <span class=\"s1\">'0.</span><span class=\"se\">\\\\</span><span class=\"s1\">overline</span><span class=\"si\">{142857}</span><span class=\"s1\">'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">toTex</span><span class=\"p\">()[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"p\">{</span><span class=\"mi\">0</span>\\<span class=\"k\">raise</span><span class=\"o\">.</span><span class=\"mi\">21</span><span class=\"n\">em</span>\\<span class=\"n\">hbox</span><span class=\"p\">{</span><span class=\"err\">$</span>\\<span class=\"n\">scriptscriptstyle</span>\\<span class=\"n\">frac</span><span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">}{</span><span class=\"mi\">7</span><span class=\"p\">}</span><span class=\"err\">$</span><span class=\"p\">}}</span>\n</pre>\n<ul>\n<li><code>egToTeX</code> function</li>\n</ul>\n<p>Outputs egyptian fractions sum for list as argument. The list is\ntypically output of the <code>egyptG2</code> method.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">egyptG2</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">56</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">egToTeX</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">egyptG2</span><span class=\"p\">())</span>\n<span class=\"s1\">'{1</span><span class=\"se\">\\\\</span><span class=\"s1\">over8}+{1</span><span class=\"se\">\\\\</span><span class=\"s1\">over56}'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">egToTeX</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">egyptG2</span><span class=\"p\">()))</span>\n<span class=\"p\">{</span><span class=\"mi\">1</span>\\<span class=\"n\">over8</span><span class=\"p\">}</span><span class=\"o\">+</span><span class=\"p\">{</span><span class=\"mi\">1</span>\\<span class=\"n\">over56</span><span class=\"p\">}</span>\n</pre>\n<ul>\n<li>continued fractions functions: <code>cfToTeX</code> and <code>cfQToTeX</code></li>\n</ul>\n<p>First outputs full continued fraction of a finite (flat)\nlist. Typically to use with <code>contFraction</code> method.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">dD</span><span class=\"o\">.</span><span class=\"n\">dvtDecimal</span><span class=\"p\">(</span><span class=\"mi\">123</span><span class=\"p\">,</span> <span class=\"mi\">43</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">contFraction</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cfToTeX</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">contFraction</span><span class=\"p\">())</span>\n<span class=\"s1\">'2+</span><span class=\"se\">\\\\</span><span class=\"s1\">displaystyle{</span><span class=\"se\">\\\\</span><span class=\"s1\">strut1</span><span class=\"se\">\\\\</span><span class=\"s1\">over</span><span class=\"se\">\\\\</span><span class=\"s1\">displaystyle1+{</span><span class=\"se\">\\\\</span><span class=\"s1\">strut1</span><span class=\"se\">\\\\</span><span class=\"s1\">over</span><span class=\"se\">\\\\</span><span class=\"s1\">displaystyle6+{</span><span class=\"se\">\\\\</span><span class=\"s1\">strut1</span><span class=\"se\">\\\\</span><span class=\"s1\">over6}}}'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cfToTeX</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">contFraction</span><span class=\"p\">()))</span>\n<span class=\"mi\">2</span><span class=\"o\">+</span>\\<span class=\"n\">displaystyle</span><span class=\"p\">{</span>\\<span class=\"n\">strut1</span>\\<span class=\"n\">over</span>\\<span class=\"n\">displaystyle1</span><span class=\"o\">+</span><span class=\"p\">{</span>\\<span class=\"n\">strut1</span>\\<span class=\"n\">over</span>\\<span class=\"n\">displaystyle6</span><span class=\"o\">+</span><span class=\"p\">{</span>\\<span class=\"n\">strut1</span>\\<span class=\"n\">over6</span><span class=\"p\">}}}</span>\n</pre>\n<p>Last outputs partial continued fraction of a periodic continued\nfraction. Typically to use with <code>contFractionQ</code> function.</p>\n<p>So the list to provide contains numbers and a list (see\n<code>contFractionQ</code>) and needs an integer as a second argument: this is\nthe index of the end, you'll get <code>\\dots</code> in the last unit fraction.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">contFractionQ</span><span class=\"p\">(</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">23</span><span class=\"p\">))</span>\n<span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cfQToTex</span><span class=\"p\">(</span><span class=\"n\">contFractionQ</span><span class=\"p\">(</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">23</span><span class=\"p\">)),</span> <span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]</span>\n<span class=\"s1\">'4+</span><span class=\"se\">\\\\</span><span class=\"s1\">displaystyle{</span><span class=\"se\">\\\\</span><span class=\"s1\">strut1</span><span class=\"se\">\\\\</span><span class=\"s1\">over</span><span class=\"se\">\\\\</span><span class=\"s1\">displaystyle1+{</span><span class=\"se\">\\\\</span><span class=\"s1\">strut1</span><span class=\"se\">\\\\</span><span class=\"s1\">over</span><span class=\"se\">\\\\</span><span class=\"s1\">displaystyle3+{</span><span class=\"se\">\\\\</span><span class=\"s1\">strut1</span><span class=\"se\">\\\\</span><span class=\"s1\">over</span><span class=\"se\">\\\\</span><span class=\"s1\">displaystyle1+{</span><span class=\"se\">\\\\</span><span class=\"s1\">strut1</span><span class=\"se\">\\\\</span><span class=\"s1\">over</span><span class=\"se\">\\\\</span><span class=\"s1\">displaystyle8+{</span><span class=\"se\">\\\\</span><span class=\"s1\">strut1</span><span class=\"se\">\\\\</span><span class=\"s1\">over</span><span class=\"se\">\\\\</span><span class=\"s1\">displaystyle1+{</span><span class=\"se\">\\\\</span><span class=\"s1\">strut1</span><span class=\"se\">\\\\</span><span class=\"s1\">over</span><span class=\"se\">\\\\</span><span class=\"s1\">displaystyle3+{</span><span class=\"se\">\\\\</span><span class=\"s1\">strut1</span><span class=\"se\">\\\\</span><span class=\"s1\">over</span><span class=\"se\">\\\\</span><span class=\"s1\">displaystyle</span><span class=\"se\">\\\\</span><span class=\"s1\">dots}}}}}}}'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cfQToTex</span><span class=\"p\">(</span><span class=\"n\">contFractionQ</span><span class=\"p\">(</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">23</span><span class=\"p\">)),</span> <span class=\"mi\">7</span><span class=\"p\">))</span>\n<span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]</span>\n<span class=\"mi\">4</span><span class=\"o\">+</span>\\<span class=\"n\">displaystyle</span><span class=\"p\">{</span>\\<span class=\"n\">strut1</span>\\<span class=\"n\">over</span>\\<span class=\"n\">displaystyle1</span><span class=\"o\">+</span><span class=\"p\">{</span>\\<span class=\"n\">strut1</span>\\<span class=\"n\">over</span>\\<span class=\"n\">displaystyle3</span><span class=\"o\">+</span><span class=\"p\">{</span>\\<span class=\"n\">strut1</span>\\<span class=\"n\">over</span>\\<span class=\"n\">displaystyle1</span><span class=\"o\">+</span><span class=\"p\">{</span>\\<span class=\"n\">strut1</span>\\<span class=\"n\">over</span>\\<span class=\"n\">displaystyle8</span><span class=\"o\">+</span><span class=\"p\">{</span>\\<span class=\"n\">strut1</span>\\<span class=\"n\">over</span>\\<span class=\"n\">displaystyle1</span><span class=\"o\">+</span><span class=\"p\">{</span>\\<span class=\"n\">strut1</span>\\<span class=\"n\">over</span>\\<span class=\"n\">displaystyle3</span><span class=\"o\">+</span><span class=\"p\">{</span>\\<span class=\"n\">strut1</span>\\<span class=\"n\">over</span>\\<span class=\"n\">displaystyle</span>\\<span class=\"n\">dots</span><span class=\"p\">}}}}}}}</span>\n</pre>\n<h2>further</h2>\n<p>I hope to:</p>\n<ul>\n<li>\n<p>improve <code>contFractionQ</code> function and provide a way to\nget succesive rational approximations ;</p>\n</li>\n<li>\n<p>improve egyptian fractions methods to speed up calculations.</p>\n</li>\n</ul>\n<h2>about</h2>\n<p>dvtDecimal is rather an attempt to publish on the <code>PyPi</code> packages\nindex than a fully completed python project, I do not recommend\ndvtDecimal usage for professionnal use. You have to consider this\npackage as an experiment.</p>\n\n          </div>"}, "last_serial": 6030071, "releases": {"0.8.4": [{"comment_text": "", "digests": {"md5": "d9a72c49582196c283d8ff3ade4c71b7", "sha256": "663aa51ed6778dee2653326774cecd10e34c4d47b2fe28ca3ee0cd7cabcf3b11"}, "downloads": -1, "filename": "dvtDecimal-0.8.4-py3-none-any.whl", "has_sig": false, "md5_digest": "d9a72c49582196c283d8ff3ade4c71b7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3740, "upload_time": "2018-11-26T17:42:53", "upload_time_iso_8601": "2018-11-26T17:42:53.191059Z", "url": "https://files.pythonhosted.org/packages/c7/02/f75582aa1165edfb04bb6721cd2eba5a3f818b5923bd37dd20d8f9d58b7f/dvtDecimal-0.8.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e45830d6f79a6f3ad8269c18b8fc870a", "sha256": "74af72579cfb208a03cda96f2228dc9aa17a3cd573faafe727d73c9b224cfa6b"}, "downloads": -1, "filename": "dvtDecimal-0.8.4.tar.gz", "has_sig": false, "md5_digest": "e45830d6f79a6f3ad8269c18b8fc870a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3546, "upload_time": "2018-11-26T17:42:54", "upload_time_iso_8601": "2018-11-26T17:42:54.259250Z", "url": "https://files.pythonhosted.org/packages/96/41/82746dd98f0d9d6fac34c84c69f21e08902cedd63325c7b50312f426b673/dvtDecimal-0.8.4.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "3bc0577acbb7cff34fa635533abe3e77", "sha256": "3835242950c5801b8da4b9e4613e5a50d6caf47187130271eb911112af5e160e"}, "downloads": -1, "filename": "dvtDecimal-0.9.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3bc0577acbb7cff34fa635533abe3e77", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4842, "upload_time": "2018-11-27T16:58:12", "upload_time_iso_8601": "2018-11-27T16:58:12.155487Z", "url": "https://files.pythonhosted.org/packages/53/63/86f12a6b296bc4e387896c4a82209245081d47672c14064b6d5c167fb40f/dvtDecimal-0.9.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "84d1c83efa54974816fecbb820eaefdb", "sha256": "a4e2c0087a50d7c6da8ac25885f4ec263cbc00f0144411c12d8ae8d84d408418"}, "downloads": -1, "filename": "dvtDecimal-0.9.3.tar.gz", "has_sig": false, "md5_digest": "84d1c83efa54974816fecbb820eaefdb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4536, "upload_time": "2018-11-27T16:58:13", "upload_time_iso_8601": "2018-11-27T16:58:13.181324Z", "url": "https://files.pythonhosted.org/packages/7a/f6/71b09d74d41bf2e5e6713cb399270ef4407b7a0ff6596465307689857c8f/dvtDecimal-0.9.3.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "9153558e4848f34946fb438278b96a11", "sha256": "9af915ebcb769883cb31e10d716fdc63c8888999a1c6c14fa5c27022408b4459"}, "downloads": -1, "filename": "dvtDecimal-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9153558e4848f34946fb438278b96a11", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6241, "upload_time": "2018-12-06T10:06:46", "upload_time_iso_8601": "2018-12-06T10:06:46.671275Z", "url": "https://files.pythonhosted.org/packages/f7/e5/0da747c8fb904f91e89720cd5dc7dc8507a788393612c2c93f037996f9b7/dvtDecimal-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b815ed45668b170d557a5e9575b90acf", "sha256": "95266c3ffd5b46b7e8a64999c6f50235bde3643b9ef01a250547aecc26ee9da6"}, "downloads": -1, "filename": "dvtDecimal-1.0.tar.gz", "has_sig": false, "md5_digest": "b815ed45668b170d557a5e9575b90acf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6079, "upload_time": "2018-12-06T10:06:48", "upload_time_iso_8601": "2018-12-06T10:06:48.302286Z", "url": "https://files.pythonhosted.org/packages/ec/55/a2270dd892bc250ce7687be03b15e2ba5036f261a0cb9e4fde8c7bc0f471/dvtDecimal-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "cd11294745d84d2e9af0caeeaf043f10", "sha256": "ef021819b2a1445b1c0d120500a4c1f981cb89be9fecbf518670368e3f520629"}, "downloads": -1, "filename": "dvtDecimal-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cd11294745d84d2e9af0caeeaf043f10", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6500, "upload_time": "2018-12-06T14:23:39", "upload_time_iso_8601": "2018-12-06T14:23:39.868699Z", "url": "https://files.pythonhosted.org/packages/52/1e/821b0c0c2b01edf1eca56839d7d1c57f484fe9c4b14d800f63b10f8a4f94/dvtDecimal-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01500a87b4e3f091f94c11ef80fbb46c", "sha256": "472b0fff8fba1e4e6b6a36d1ad53391a19d1781659ab4d945cfd1e72dfd4f564"}, "downloads": -1, "filename": "dvtDecimal-1.0.1.tar.gz", "has_sig": false, "md5_digest": "01500a87b4e3f091f94c11ef80fbb46c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6387, "upload_time": "2018-12-06T14:23:41", "upload_time_iso_8601": "2018-12-06T14:23:41.231307Z", "url": "https://files.pythonhosted.org/packages/15/49/5c599dc4e779999fbb7d658b8d7a70e0a53f88ed5fb4eb6658f894b9f3ab/dvtDecimal-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "df001c09b28dd09b868e95ba546cc22a", "sha256": "603b6b3c254b8d2ba7c5626817406b8f067a08758eb466d497e1a3c0c3d6dd94"}, "downloads": -1, "filename": "dvtDecimal-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "df001c09b28dd09b868e95ba546cc22a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6871, "upload_time": "2018-12-06T21:00:57", "upload_time_iso_8601": "2018-12-06T21:00:57.038364Z", "url": "https://files.pythonhosted.org/packages/1a/69/f06867a86be4df0b902678ae5e17428c871641dcc9b8e95489fe8ddee18a/dvtDecimal-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e635e2c9cb44cc7e27a3fccbdc1694e7", "sha256": "cb4fcae28e0c0909e2c5645164f908d8c1d23a6cd949dc8dc44f91ad07bf9150"}, "downloads": -1, "filename": "dvtDecimal-1.0.2.tar.gz", "has_sig": false, "md5_digest": "e635e2c9cb44cc7e27a3fccbdc1694e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6737, "upload_time": "2018-12-06T21:00:58", "upload_time_iso_8601": "2018-12-06T21:00:58.230203Z", "url": "https://files.pythonhosted.org/packages/fd/dc/f50dc44d8a2160984575e7769cd4a4b94bed40bcf3a8d4a8716a1a1a42e6/dvtDecimal-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "f75df6439a3ca28c63385c4d686b38f1", "sha256": "3d7e2f476e6a638a4f94f37169588a28436aa4af0b67ea2cc19395a38c9bde48"}, "downloads": -1, "filename": "dvtDecimal-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f75df6439a3ca28c63385c4d686b38f1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8074, "upload_time": "2018-12-07T19:27:41", "upload_time_iso_8601": "2018-12-07T19:27:41.350950Z", "url": "https://files.pythonhosted.org/packages/5f/61/faebcfbb5c87a65c1a2ba810df04f868b6a666aa6f402e2b8ff263d3a880/dvtDecimal-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b71a2f1a38f4fcef70b824d7ceba0fd7", "sha256": "5bbaa736ae296d893af04792dc651314540185a0643a68f5c0b9699b44798a19"}, "downloads": -1, "filename": "dvtDecimal-1.1.0.tar.gz", "has_sig": false, "md5_digest": "b71a2f1a38f4fcef70b824d7ceba0fd7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8785, "upload_time": "2018-12-07T19:27:42", "upload_time_iso_8601": "2018-12-07T19:27:42.718093Z", "url": "https://files.pythonhosted.org/packages/67/b2/43f27b680606a4a6106478ca9faa424d555cc0c657e9cb3216f42f62b633/dvtDecimal-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "3f228ed46246cd6e94c9573cb00cadea", "sha256": "ff03858ca36c145421571eafd5bae3f316cac7a330d9bdf9da978ee1df4520e5"}, "downloads": -1, "filename": "dvtDecimal-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3f228ed46246cd6e94c9573cb00cadea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10483, "upload_time": "2018-12-26T10:14:59", "upload_time_iso_8601": "2018-12-26T10:14:59.425158Z", "url": "https://files.pythonhosted.org/packages/f3/d3/678beecdaf532aa7279663fd70612e28bc8bec60e917cf790941f1ddf135/dvtDecimal-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c97391b30a87fe43ecccd9037e821dbd", "sha256": "129fbb7edd0cb134b54da058e8a0580d6614aeed4ff813e2db3e8e3dd93a9674"}, "downloads": -1, "filename": "dvtDecimal-1.2.0.tar.gz", "has_sig": false, "md5_digest": "c97391b30a87fe43ecccd9037e821dbd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14634, "upload_time": "2018-12-26T10:15:00", "upload_time_iso_8601": "2018-12-26T10:15:00.849081Z", "url": "https://files.pythonhosted.org/packages/51/80/1afb241ccfe0df5f7a9d09c38d196f8d2ffa43a11643254f4b0d3a2528d8/dvtDecimal-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "2bc18febb8e7e10d761c63781ff25bdf", "sha256": "e447d67a601804d438c7aa208cf0db71d8033d91c6690666525eaaabfcce1944"}, "downloads": -1, "filename": "dvtDecimal-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2bc18febb8e7e10d761c63781ff25bdf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10606, "upload_time": "2018-12-26T15:58:16", "upload_time_iso_8601": "2018-12-26T15:58:16.186878Z", "url": "https://files.pythonhosted.org/packages/2d/15/09b3c2e6aaefcaedc7130254030afe6828a050c2c7805683d750fb8ea9bf/dvtDecimal-1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8fc995f463bccaf1a9f50f6b425fa1fd", "sha256": "33661261e51df4e4f0cacb69543aca7d162ea5713c9a7d3298d7b522a62045fb"}, "downloads": -1, "filename": "dvtDecimal-1.2.1.tar.gz", "has_sig": false, "md5_digest": "8fc995f463bccaf1a9f50f6b425fa1fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14803, "upload_time": "2018-12-26T15:58:17", "upload_time_iso_8601": "2018-12-26T15:58:17.635758Z", "url": "https://files.pythonhosted.org/packages/3f/70/80cdaed4ce9ffee61341de3857f1279cb7d49d33e7cbe065a964422a3c8e/dvtDecimal-1.2.1.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "9c52dc8c922e0e5d3e8a247f0160572d", "sha256": "289126e879807534ac41127a097a4da5ad8624aeaf5bc6dd67733699a0270539"}, "downloads": -1, "filename": "dvtDecimal-1.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "9c52dc8c922e0e5d3e8a247f0160572d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10636, "upload_time": "2018-12-26T16:28:32", "upload_time_iso_8601": "2018-12-26T16:28:32.671505Z", "url": "https://files.pythonhosted.org/packages/89/b7/940b5b11391ef90163fb944b1cfa3595bb43ca3f087b0a9edf5e2f14dbf4/dvtDecimal-1.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9198c7047eb59093949839f1ae2d631b", "sha256": "a1e45cfb8eb99a1d573d3b6ef93a375314549ea8b97f06e19e790071a4a6b1d9"}, "downloads": -1, "filename": "dvtDecimal-1.2.4.tar.gz", "has_sig": false, "md5_digest": "9198c7047eb59093949839f1ae2d631b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14832, "upload_time": "2018-12-26T16:28:34", "upload_time_iso_8601": "2018-12-26T16:28:34.149803Z", "url": "https://files.pythonhosted.org/packages/b2/38/3daa4f19c5213dbe0e275fb9690a26bdbd8c8ea822a2cbc639e09b10d9f7/dvtDecimal-1.2.4.tar.gz", "yanked": false}], "1.2.5": [{"comment_text": "", "digests": {"md5": "d9d8f2f8eb8bc1ffe70b5a81ffa24849", "sha256": "29e24f0654772e494337956254abbef7d5a90bcdeb5e2e6ad213a515e6f070f1"}, "downloads": -1, "filename": "dvtDecimal-1.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "d9d8f2f8eb8bc1ffe70b5a81ffa24849", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11102, "upload_time": "2019-01-01T15:14:18", "upload_time_iso_8601": "2019-01-01T15:14:18.918794Z", "url": "https://files.pythonhosted.org/packages/e0/9c/9f79ab4b36ee2e8371ac30e9e4f73c2141e0acb028b20f074c87571d7eb7/dvtDecimal-1.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd83a852a195715f5a05ef86a57cb1e7", "sha256": "194249cda86631393ca4b4a252737d16a97127581fc63998560482791d20ff4a"}, "downloads": -1, "filename": "dvtDecimal-1.2.5.tar.gz", "has_sig": false, "md5_digest": "cd83a852a195715f5a05ef86a57cb1e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15389, "upload_time": "2019-01-01T15:14:20", "upload_time_iso_8601": "2019-01-01T15:14:20.400504Z", "url": "https://files.pythonhosted.org/packages/c2/dc/c9e894fae88dfac25f51738fb31d10a7e3977865da6637111d53a5842655/dvtDecimal-1.2.5.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "ea8f3d49b454c24f139faf7a221bdf0b", "sha256": "f8a7f9999adc0aac1591836c17d55d71db1ab4abb33371b1462624365f21d616"}, "downloads": -1, "filename": "dvtDecimal-1.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ea8f3d49b454c24f139faf7a221bdf0b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12410, "upload_time": "2019-01-15T13:50:24", "upload_time_iso_8601": "2019-01-15T13:50:24.517852Z", "url": "https://files.pythonhosted.org/packages/81/b2/e4a8a935643e2ae87ce3e0e976132edc30d334176d24ffad4881c428fb72/dvtDecimal-1.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca3d8f8341a4872884113e6256094127", "sha256": "9ef4628c6c2e08220e017b5b3a29063234f84302d8b1363cef9650bef90220cd"}, "downloads": -1, "filename": "dvtDecimal-1.3.0.tar.gz", "has_sig": false, "md5_digest": "ca3d8f8341a4872884113e6256094127", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17629, "upload_time": "2019-01-15T13:50:26", "upload_time_iso_8601": "2019-01-15T13:50:26.802469Z", "url": "https://files.pythonhosted.org/packages/13/ce/182f7473ee8daea5615c6c8bb6d85d12d6f54da52265de95414f742a4f33/dvtDecimal-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "22ffc88f096652d1a6f24eea3925c0b0", "sha256": "53b6f87a3b7720cfc336d701a1af5540cf99355ebab8a927d1b01e4d08c91703"}, "downloads": -1, "filename": "dvtDecimal-1.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "22ffc88f096652d1a6f24eea3925c0b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12407, "upload_time": "2019-01-15T13:59:42", "upload_time_iso_8601": "2019-01-15T13:59:42.272161Z", "url": "https://files.pythonhosted.org/packages/d5/81/6b0127e7aadc68bd1e57cbb6b234f5669952abe8053dc424b3b941724795/dvtDecimal-1.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "46f61416e0e52302d5c6dc32a8c3b22d", "sha256": "d8cf7117b5329abf38f849a61c24e67337d684ed62a03c92f2b5ef5df8cf695b"}, "downloads": -1, "filename": "dvtDecimal-1.3.1.tar.gz", "has_sig": false, "md5_digest": "46f61416e0e52302d5c6dc32a8c3b22d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17620, "upload_time": "2019-01-15T13:59:45", "upload_time_iso_8601": "2019-01-15T13:59:45.306589Z", "url": "https://files.pythonhosted.org/packages/df/5d/e2269c5c3ef58a19f12f0281770c9535591dfe9566275410b4761a9fa918/dvtDecimal-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "90f999e2d6179b65877928eb49e42583", "sha256": "0352af73d2b53e88b489b08be4f890988596cec6e03c4fdd24924b16c16cb7ce"}, "downloads": -1, "filename": "dvtDecimal-1.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "90f999e2d6179b65877928eb49e42583", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12467, "upload_time": "2019-01-30T13:31:49", "upload_time_iso_8601": "2019-01-30T13:31:49.692956Z", "url": "https://files.pythonhosted.org/packages/29/74/3c13aac94fedce2c9b08f34d68652828b479a39158e599cde46b245bdeb8/dvtDecimal-1.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf4153584c7b8d7a027898bf409f733b", "sha256": "a5387d104aed5062e743559566f1377856ffaaeea216400f94ed0bafeeafb806"}, "downloads": -1, "filename": "dvtDecimal-1.3.2.tar.gz", "has_sig": false, "md5_digest": "cf4153584c7b8d7a027898bf409f733b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17744, "upload_time": "2019-01-30T13:31:53", "upload_time_iso_8601": "2019-01-30T13:31:53.250727Z", "url": "https://files.pythonhosted.org/packages/d2/2c/82e51ebfff63bed801e33a15106fa8ca7e8f73049cb734ad207414a7b316/dvtDecimal-1.3.2.tar.gz", "yanked": false}], "1.3.3": [{"comment_text": "", "digests": {"md5": "ffc5aae6cf9b9e987f7f38eeeaeddf9e", "sha256": "66fd201ad9255c777f91c5e66a630cce389723887daca3bb484a19a066417b52"}, "downloads": -1, "filename": "dvtDecimal-1.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "ffc5aae6cf9b9e987f7f38eeeaeddf9e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12846, "upload_time": "2019-02-26T17:51:23", "upload_time_iso_8601": "2019-02-26T17:51:23.718694Z", "url": "https://files.pythonhosted.org/packages/7f/09/556684ce955519ce76728ff887cb93d879a0378e8b46b5ab9b40ed07c87f/dvtDecimal-1.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e24aac468ef22f8a3493cd9c9e9414d", "sha256": "ba181cce9092f6972187afefbffedfbd7e2a385b9e0a3b696cf5d92a52b92941"}, "downloads": -1, "filename": "dvtDecimal-1.3.3.tar.gz", "has_sig": false, "md5_digest": "1e24aac468ef22f8a3493cd9c9e9414d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17781, "upload_time": "2019-02-26T17:51:29", "upload_time_iso_8601": "2019-02-26T17:51:29.804227Z", "url": "https://files.pythonhosted.org/packages/2c/bf/3da2d82a1021944c1e0f2821c4534e240be26b1f984059411f788738bfd0/dvtDecimal-1.3.3.tar.gz", "yanked": false}], "1.3.4": [{"comment_text": "", "digests": {"md5": "f86a8a504bb8df2e73810c25078311e9", "sha256": "5f127625a7c58a3a63e047703fa7a042a5ca29fed0d17ab9d3765fceea9cf70f"}, "downloads": -1, "filename": "dvtDecimal-1.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "f86a8a504bb8df2e73810c25078311e9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12856, "upload_time": "2019-02-26T17:51:25", "upload_time_iso_8601": "2019-02-26T17:51:25.417118Z", "url": "https://files.pythonhosted.org/packages/45/71/068f1d7808914d10cac47b9155cc00f516696f4819d39f45a454fb1f5a60/dvtDecimal-1.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "021ba918f0e2a515fe73f249858e0804", "sha256": "2cab288c8aeab10d40abb11f23187ce04fdb96b71719461f908650f37caa96bf"}, "downloads": -1, "filename": "dvtDecimal-1.3.4.tar.gz", "has_sig": false, "md5_digest": "021ba918f0e2a515fe73f249858e0804", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17789, "upload_time": "2019-02-26T17:51:31", "upload_time_iso_8601": "2019-02-26T17:51:31.580649Z", "url": "https://files.pythonhosted.org/packages/90/f3/20fe2688fc7a124ea0efc98f3cb3ed4f971bba98f10d3d9751349c6bdca5/dvtDecimal-1.3.4.tar.gz", "yanked": false}], "1.3.5": [{"comment_text": "", "digests": {"md5": "c031b9fae7d90ed3ee075e31a9ff8b2f", "sha256": "de98ea054a932b21aaad480aa9109373dd2b8e6f67c85ec6378f442760b9caf7"}, "downloads": -1, "filename": "dvtDecimal-1.3.5-py3-none-any.whl", "has_sig": false, "md5_digest": "c031b9fae7d90ed3ee075e31a9ff8b2f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12851, "upload_time": "2019-08-16T08:46:07", "upload_time_iso_8601": "2019-08-16T08:46:07.327869Z", "url": "https://files.pythonhosted.org/packages/cd/61/3b873c5c206e02ad3ba669696d5e23a4fca380905f5e5b7adb3025a932cc/dvtDecimal-1.3.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "543eb8e1a02fa68d2695c65ae3199926", "sha256": "579de2ed9e26c53852a09d7f2078bb5bfec80f53da0af40ab88fa9ad0b61ffa8"}, "downloads": -1, "filename": "dvtDecimal-1.3.5.tar.gz", "has_sig": false, "md5_digest": "543eb8e1a02fa68d2695c65ae3199926", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17795, "upload_time": "2019-08-16T08:46:17", "upload_time_iso_8601": "2019-08-16T08:46:17.562758Z", "url": "https://files.pythonhosted.org/packages/8f/83/abb63499bd94ecfa6ed0930ce1c7a48d2f3e87de007f82f49965ad6183f9/dvtDecimal-1.3.5.tar.gz", "yanked": false}], "1.3.6": [{"comment_text": "", "digests": {"md5": "e87a6f8874114f0c79cbe6f5249e8266", "sha256": "5a2974a43678a3bbbe79d9c6c9cd70a31fb2b942345e243cc0337418fa70a3b8"}, "downloads": -1, "filename": "dvtDecimal-1.3.6-py3-none-any.whl", "has_sig": false, "md5_digest": "e87a6f8874114f0c79cbe6f5249e8266", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13000, "upload_time": "2019-10-10T14:48:03", "upload_time_iso_8601": "2019-10-10T14:48:03.330880Z", "url": "https://files.pythonhosted.org/packages/6f/3a/638bceb58d860841366a70e4bfe2e3362393d938e4b0e3d40a935044c557/dvtDecimal-1.3.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "27d46747e232e8b23f5a72340c1c0e97", "sha256": "160de35db23fe23c6a156cf291033616825d558cf0b2d5a290e831592f7fd121"}, "downloads": -1, "filename": "dvtDecimal-1.3.6.tar.gz", "has_sig": false, "md5_digest": "27d46747e232e8b23f5a72340c1c0e97", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17946, "upload_time": "2019-10-10T14:48:23", "upload_time_iso_8601": "2019-10-10T14:48:23.254784Z", "url": "https://files.pythonhosted.org/packages/b5/d2/110943b67ec5d8b6ffee45dcd36708ff981291a2bfade1549154340a9779/dvtDecimal-1.3.6.tar.gz", "yanked": false}], "1.3.7": [{"comment_text": "", "digests": {"md5": "ceeb0eb2702659b75fb5b0fb89346dd1", "sha256": "c718c86498bab8f27bea6787da5d0a6675ed08f28a77ec2278d8eec3d84671f7"}, "downloads": -1, "filename": "dvtDecimal-1.3.7-py3-none-any.whl", "has_sig": false, "md5_digest": "ceeb0eb2702659b75fb5b0fb89346dd1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13066, "upload_time": "2019-10-10T15:15:17", "upload_time_iso_8601": "2019-10-10T15:15:17.778780Z", "url": "https://files.pythonhosted.org/packages/99/f2/579acb855bfa9df1148de6793cfafb0f27badf14a8e0e574c462ccbc5fda/dvtDecimal-1.3.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "91a7a06b3a46167b8f557aac20a92cc6", "sha256": "95c1f6a54a24b2b18090405a86c83eaf10b4b2c5d77e89c13709d8a0045cb8d7"}, "downloads": -1, "filename": "dvtDecimal-1.3.7.tar.gz", "has_sig": false, "md5_digest": "91a7a06b3a46167b8f557aac20a92cc6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18049, "upload_time": "2019-10-10T15:15:34", "upload_time_iso_8601": "2019-10-10T15:15:34.791486Z", "url": "https://files.pythonhosted.org/packages/03/79/963872c1b31f5765de7ba3302a56897bbfac61cbc9abd6e7d57732d812db/dvtDecimal-1.3.7.tar.gz", "yanked": false}], "1.3.8": [{"comment_text": "", "digests": {"md5": "798bdfb6f351e51ef5ec7cd156400414", "sha256": "3604aa4ea123b2dc1a5efd7ee8911691630ba6c1ba27ec9204c11e09ccb1958a"}, "downloads": -1, "filename": "dvtDecimal-1.3.8-py3-none-any.whl", "has_sig": false, "md5_digest": "798bdfb6f351e51ef5ec7cd156400414", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13159, "upload_time": "2019-10-11T15:06:49", "upload_time_iso_8601": "2019-10-11T15:06:49.879321Z", "url": "https://files.pythonhosted.org/packages/88/9e/ded5398a56556cf274341c777f64c5b10b92ce046968312c51483cf27b73/dvtDecimal-1.3.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d60f7326c8a0a2cf7f6e8ef61d43e5d", "sha256": "faa8cec09de0312d1a55fcc95b469503dfc78fc805167a2d32e2e16ba67ac220"}, "downloads": -1, "filename": "dvtDecimal-1.3.8.tar.gz", "has_sig": false, "md5_digest": "1d60f7326c8a0a2cf7f6e8ef61d43e5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18147, "upload_time": "2019-10-11T15:07:06", "upload_time_iso_8601": "2019-10-11T15:07:06.978778Z", "url": "https://files.pythonhosted.org/packages/09/0a/3845d2b354ad7c3cfe5579ec91c8235c9c2003df90013ed125bcb0f56463/dvtDecimal-1.3.8.tar.gz", "yanked": false}], "1.3.8.1": [{"comment_text": "", "digests": {"md5": "f30b9718cbecb0bff91f718e88d94500", "sha256": "138b425afbfb691a2f409d716c9702828982334b45bf86f7828cb70c636de360"}, "downloads": -1, "filename": "dvtDecimal-1.3.8.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f30b9718cbecb0bff91f718e88d94500", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13271, "upload_time": "2019-10-11T15:37:26", "upload_time_iso_8601": "2019-10-11T15:37:26.717560Z", "url": "https://files.pythonhosted.org/packages/e2/4a/543795d451ba9caefb59440dc36cc77e4d79949fd2ab5dd28b33a28557d5/dvtDecimal-1.3.8.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f57e98063a8dca4cb8ba4aa8706a6b08", "sha256": "60f9872dd5cccf9055207110ed49deb2c8a0ab3cf90bad713966215b402bb9cb"}, "downloads": -1, "filename": "dvtDecimal-1.3.8.1.tar.gz", "has_sig": false, "md5_digest": "f57e98063a8dca4cb8ba4aa8706a6b08", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18274, "upload_time": "2019-10-11T15:37:46", "upload_time_iso_8601": "2019-10-11T15:37:46.970776Z", "url": "https://files.pythonhosted.org/packages/36/17/eacb849284a708e71b08dee1a1488ac72c0a11e62854dafafe10c5f1d4fb/dvtDecimal-1.3.8.1.tar.gz", "yanked": false}], "1.3.9": [{"comment_text": "", "digests": {"md5": "f9549618c3240c341b99b1728bb0aa76", "sha256": "70b610f69cbae7c29f48c9f7b18e3e00f27c2b35a04f77f161c3f45a74d08b17"}, "downloads": -1, "filename": "dvtDecimal-1.3.9-py3-none-any.whl", "has_sig": false, "md5_digest": "f9549618c3240c341b99b1728bb0aa76", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13171, "upload_time": "2019-10-25T14:51:23", "upload_time_iso_8601": "2019-10-25T14:51:23.222713Z", "url": "https://files.pythonhosted.org/packages/be/d3/3f43bfb6df0cc4c2830b85901941def70756be4a7d49c46634cc765f53bc/dvtDecimal-1.3.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bfad46486bc0cf9ef49b4d87c569e42b", "sha256": "5d209ef1449a9bea95d166eb80c0e4bdccdcd762a93b4d36d2199c084a18af42"}, "downloads": -1, "filename": "dvtDecimal-1.3.9.tar.gz", "has_sig": false, "md5_digest": "bfad46486bc0cf9ef49b4d87c569e42b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18595, "upload_time": "2019-10-25T14:51:43", "upload_time_iso_8601": "2019-10-25T14:51:43.538594Z", "url": "https://files.pythonhosted.org/packages/09/d4/a33e6b0189ac27cb83e48d7d7583becc53e5ec2cc5a1d3d29435d90b5ac6/dvtDecimal-1.3.9.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "f67a47c168c6df7b66d6721b393458a0", "sha256": "601b1c9ab81a7ee4713b3680a3dbb970fb3c51775e668e18065a882580efb59b"}, "downloads": -1, "filename": "dvtDecimal-1.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f67a47c168c6df7b66d6721b393458a0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13171, "upload_time": "2019-10-25T14:51:25", "upload_time_iso_8601": "2019-10-25T14:51:25.209790Z", "url": "https://files.pythonhosted.org/packages/d6/e8/964dfbc0bad2afd01054c880e9eb8144a445357b111c77ed931d2bdffd0d/dvtDecimal-1.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d11cadd16bb7bd44a36cc4106d1baa8", "sha256": "54e9538dd4300f89c697b5982985fee5b2af62b88abb73589e59ea40b0f5bed0"}, "downloads": -1, "filename": "dvtDecimal-1.4.0.tar.gz", "has_sig": false, "md5_digest": "0d11cadd16bb7bd44a36cc4106d1baa8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18594, "upload_time": "2019-10-25T14:51:45", "upload_time_iso_8601": "2019-10-25T14:51:45.525080Z", "url": "https://files.pythonhosted.org/packages/b3/fa/0682303aab9888e47f93982f1cb102ea1f36bcefc600ee60992612748d2e/dvtDecimal-1.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f67a47c168c6df7b66d6721b393458a0", "sha256": "601b1c9ab81a7ee4713b3680a3dbb970fb3c51775e668e18065a882580efb59b"}, "downloads": -1, "filename": "dvtDecimal-1.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f67a47c168c6df7b66d6721b393458a0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13171, "upload_time": "2019-10-25T14:51:25", "upload_time_iso_8601": "2019-10-25T14:51:25.209790Z", "url": "https://files.pythonhosted.org/packages/d6/e8/964dfbc0bad2afd01054c880e9eb8144a445357b111c77ed931d2bdffd0d/dvtDecimal-1.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d11cadd16bb7bd44a36cc4106d1baa8", "sha256": "54e9538dd4300f89c697b5982985fee5b2af62b88abb73589e59ea40b0f5bed0"}, "downloads": -1, "filename": "dvtDecimal-1.4.0.tar.gz", "has_sig": false, "md5_digest": "0d11cadd16bb7bd44a36cc4106d1baa8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18594, "upload_time": "2019-10-25T14:51:45", "upload_time_iso_8601": "2019-10-25T14:51:45.525080Z", "url": "https://files.pythonhosted.org/packages/b3/fa/0682303aab9888e47f93982f1cb102ea1f36bcefc600ee60992612748d2e/dvtDecimal-1.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:54 2020"}