{"info": {"author": "Edward Wells", "author_email": "git@edward.sh", "bugtrack_url": null, "classifiers": [], "description": "ticketpy\n========\n\n**Python wrapper/SDK for Ticketmaster's Discovery API**\n\nMore info:\nhttp://developer.ticketmaster.com/products-and-docs/apis/discovery-api/v2/\n\nRequirements\n------------\n\n-  Python >= 3.5.2 (anything >= 3 is probably OK)\n-  Requests >= 2.13.0\n\nInstallation\n------------\nTo install via *pip*:\n\n.. code-block:: bash\n\n    $ pip install ticketpy\n\nOr, locally from the same directory as ``setup.py``:\n\n.. code-block:: bash\n\n    $ python setup.py install\n\nExample searches\n-------------------\n\nEvents\n^^^^^^\nTo pull all Hip-Hop events in Georgia between May 19th, 2017 and\nMay 21st, 2017:\n\n.. code-block:: python\n\n    import ticketpy\n\n    tm_client = ticketpy.ApiClient('your_api_key')\n\n    pages = tm_client.events.find(\n        classification_name='Hip-Hop',\n        state_code='GA',\n        start_date_time='2017-05-19T20:00:00Z',\n        end_date_time='2017-05-21T20:00:00Z'\n    )\n\n    for page in pages:\n        for event in page:\n            print(event)\n\nOutput::\n\n    Event:        Atlanta Funk Fest 2017 3 Day Ticket\n    Venue(s):     'Wolf Creek Amphitheater' at 3025 Merk Road in Atlanta GA\n    Start date:   2017-05-19\n    Start time:   19:00:00\n    Price ranges: 128.01-424.0\n    Status:       onsale\n    Genres:       R&B\n\n    Event:        Atlanta Funk Fest 2017\n    Venue(s):     'Wolf Creek Amphitheater' at 3025 Merk Road in Atlanta GA\n    Start date:   2017-05-19\n    Start time:   19:00:00\n    Price ranges: 63.0-158.0\n    Status:       onsale\n    Genres:       R&B\n\n    Event:        Atlanta Funk Fest 2017\n    Venue(s):     'Wolf Creek Amphitheater' at 3025 Merk Road in Atlanta GA\n    Start date:   2017-05-20\n    Start time:   17:00:00\n    Price ranges: 63.0-158.0\n    Status:       onsale\n    Genres:       Hip-Hop/Rap\n\n    Event:        NF\n    Venue(s):     'Center Stage Theater' at 1374 W Peachtree St. NW in Atlanta GA\n    Start date:   2017-05-20\n    Start time:   20:00:00\n    Price ranges: 22.0-83.0\n    Status:       onsale\n    Genres:       Hip-Hop/Rap\n\nCalling ``ApiClient.find()`` returns a ``ticketpy.PagedResponse``\nobject, which iterates through API response pages (as ``ticketpy.Page``).\n\nBy default, pages have 20 elements. If there are >20 total elements,\ncalling ``PagedResponse.next()`` will request the next page from the API.\n\nYou can simplify that/do away with the nested loop by using\n``PagedResponse.limit()``. By default, this requests a maximum of 5 pages,\nand returns the elements of each in a flat list.\n\nUse ``PagedResponse.one()`` to return just the list from the first page.\n\nFor example, the previous example could also be written as:\n\n.. code-block:: python\n\n    import ticketpy\n\n    tm_client = ticketpy.ApiClient('your_api_key')\n\n    pages = tm_client.events.find(\n        classification_name='Hip-Hop',\n        state_code='GA',\n        start_date_time='2017-05-19T20:00:00Z',\n        end_date_time='2017-05-21T20:00:00Z'\n    ).limit()\n\n    for event in pages:\n        print(event)\n\nThe output here would be the same as there was <1 page available, however,\nthis can save you some wasted API calls for large result sets. If you\nreally want *every page*, though, use ``all()`` to request every available\npage.\n\nVenues\n^^^^^^\nTo search for all venues based on the string \"*Tabernacle*\":\n\n.. code-block:: python\n\n    import ticketpy\n\n    tm_client = ticketpy.ApiClient(\"your_api_key\")\n    venues = tm_client.venues.find(keyword=\"Tabernacle\").all()\n    for v in venues:\n        print(\"Name: {} / City: {}\".format(v.name, v.city))\n\nOutput::\n\n    Name: Tabernacle / City: London\n    Name: The Tabernacle / City: Atlanta\n    Name: Tabernacle, Notting Hill / City: London\n    Name: Bethel Tabernacle / City: Penticton\n    Name: Revivaltime Tabernacle / City: Toronto\n    Name: Auckland Baptist Tabernacle / City: Auckland\n    Name: Pentecostal Tabernacle / City: Nashville\n    Name: The Tabernacle / City: Oak Bluffs\n    Name: Tabernacle, Shoreditch / City: London\n    Name: Revivaltime Tabernacle / City: Toronto\n    Name: Tabernacle, Notting Hill / City: London\n    Name: The Tabernacle / City: London\n    Name: Tabernacle Junction / City: Yeovil\n    Name: New Tabernacle 4th Baptist Church / City: Charleston\n\nAttractions\n^^^^^^^^^^^\nSearching for attractions works similarly to the above:\n\n.. code-block:: python\n\n    import ticketpy\n\n    tm_client = ticketpy.ApiClient(\"your_api_key\")\n    attractions = tm_client.attractions.find(keyword=\"Yankees\").one()\n    for attr in attractions:\n        print(attr.name)\n\nOutput::\n\n    New York Yankees\n    Scranton Wilkes-Barre RailRiders\n    Staten Island Yankees\n    Yankee Stadium Tours\n    Tampa Yankees\n    New York Yankees  Bomber Bucks\n    Hands On History At Yankee Stadium\n    Damn Yankees\n    Damn Yankees\n    Battle Creek Yankees\n    New York Yankees Parking\n    Offsite Parking at Yankee Stadium\n    Quikpark at Yankee Stadium- NYCFC\n    New York Yankees Fan Fest\n    New York Yankees 3 (Do Not Use)\n    New York Yankees 1 (Do Not Use)\n    New York Yankees 2 (Do Not Use)\n    Behind the Scenes At Yankee Stadium\n\nClassifications\n^^^^^^^^^^^^^^^\nSearching for classifications works similarly to the above:\n\n.. code-block:: python\n\n    import ticketpy\n\n    tm_client = ticketpy.ApiClient(\"your_api_key\")\n    classifications = tm_client.classifications.find(keyword=\"Drama\").one()\n\n    for cl in classifications:\n        print(\"Segment: {}\".format(cl.segment.name))\n        for genre in cl.segment.genres:\n            print(\"--Genre: {}\".format(genre.name))\n\nOutput::\n\n    Segment: Film\n    --Genre: Drama\n    Segment: Arts & Theatre\n    --Genre: Theatre\n\nQuerying details for classifications by ID will return either a ``Segment``,\n``Genre``, or ``SubGenre``, whichever matches the given ID.\n\nFor example,\n\n.. code-block:: python\n\n    import ticketpy\n\n    tm_client = ticketpy.ApiClient(\"your_api_key\")\n    x = tm_client.classifications.by_id('KZFzniwnSyZfZ7v7nJ')\n    y = tm_client.classifications.by_id('KnvZfZ7vAvE')\n    z = tm_client.classifications.by_id('KZazBEonSMnZfZ7vkdl')\n\n    s = \"Name: {} / Type: {}\"\n    print(s.format(x.name, type(x)))\n    print(s.format(y.name, type(y)))\n    print(s.format(z.name, type(z)))\n\nOutput::\n\n    Name: Music / Type: <class 'ticketpy.model.Segment'>\n    Name: Jazz / Type: <class 'ticketpy.model.Genre'>\n    Name: Bebop / Type: <class 'ticketpy.model.SubGenre'>\n\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/arcward/ticketpy", "keywords": "Ticketmaster", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ticketpy", "package_url": "https://pypi.org/project/ticketpy/", "platform": "", "project_url": "https://pypi.org/project/ticketpy/", "project_urls": {"Homepage": "https://github.com/arcward/ticketpy"}, "release_url": "https://pypi.org/project/ticketpy/1.1.2/", "requires_dist": ["requests"], "requires_python": "", "summary": "Python wrapper/SDK for the Ticketmaster Discovery API", "version": "1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>Python wrapper/SDK for Ticketmaster\u2019s Discovery API</strong></p>\n<p>More info:\n<a href=\"http://developer.ticketmaster.com/products-and-docs/apis/discovery-api/v2/\" rel=\"nofollow\">http://developer.ticketmaster.com/products-and-docs/apis/discovery-api/v2/</a></p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python &gt;= 3.5.2 (anything &gt;= 3 is probably OK)</li>\n<li>Requests &gt;= 2.13.0</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install via <em>pip</em>:</p>\n<pre>$ pip install ticketpy\n</pre>\n<p>Or, locally from the same directory as <tt>setup.py</tt>:</p>\n<pre>$ python setup.py install\n</pre>\n</div>\n<div id=\"example-searches\">\n<h2>Example searches</h2>\n<div id=\"events\">\n<h3>Events</h3>\n<p>To pull all Hip-Hop events in Georgia between May 19th, 2017 and\nMay 21st, 2017:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">ticketpy</span>\n\n<span class=\"n\">tm_client</span> <span class=\"o\">=</span> <span class=\"n\">ticketpy</span><span class=\"o\">.</span><span class=\"n\">ApiClient</span><span class=\"p\">(</span><span class=\"s1\">'your_api_key'</span><span class=\"p\">)</span>\n\n<span class=\"n\">pages</span> <span class=\"o\">=</span> <span class=\"n\">tm_client</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span>\n    <span class=\"n\">classification_name</span><span class=\"o\">=</span><span class=\"s1\">'Hip-Hop'</span><span class=\"p\">,</span>\n    <span class=\"n\">state_code</span><span class=\"o\">=</span><span class=\"s1\">'GA'</span><span class=\"p\">,</span>\n    <span class=\"n\">start_date_time</span><span class=\"o\">=</span><span class=\"s1\">'2017-05-19T20:00:00Z'</span><span class=\"p\">,</span>\n    <span class=\"n\">end_date_time</span><span class=\"o\">=</span><span class=\"s1\">'2017-05-21T20:00:00Z'</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">page</span> <span class=\"ow\">in</span> <span class=\"n\">pages</span><span class=\"p\">:</span>\n    <span class=\"k\">for</span> <span class=\"n\">event</span> <span class=\"ow\">in</span> <span class=\"n\">page</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre>Event:        Atlanta Funk Fest 2017 3 Day Ticket\nVenue(s):     'Wolf Creek Amphitheater' at 3025 Merk Road in Atlanta GA\nStart date:   2017-05-19\nStart time:   19:00:00\nPrice ranges: 128.01-424.0\nStatus:       onsale\nGenres:       R&amp;B\n\nEvent:        Atlanta Funk Fest 2017\nVenue(s):     'Wolf Creek Amphitheater' at 3025 Merk Road in Atlanta GA\nStart date:   2017-05-19\nStart time:   19:00:00\nPrice ranges: 63.0-158.0\nStatus:       onsale\nGenres:       R&amp;B\n\nEvent:        Atlanta Funk Fest 2017\nVenue(s):     'Wolf Creek Amphitheater' at 3025 Merk Road in Atlanta GA\nStart date:   2017-05-20\nStart time:   17:00:00\nPrice ranges: 63.0-158.0\nStatus:       onsale\nGenres:       Hip-Hop/Rap\n\nEvent:        NF\nVenue(s):     'Center Stage Theater' at 1374 W Peachtree St. NW in Atlanta GA\nStart date:   2017-05-20\nStart time:   20:00:00\nPrice ranges: 22.0-83.0\nStatus:       onsale\nGenres:       Hip-Hop/Rap\n</pre>\n<p>Calling <tt>ApiClient.find()</tt> returns a <tt>ticketpy.PagedResponse</tt>\nobject, which iterates through API response pages (as <tt>ticketpy.Page</tt>).</p>\n<p>By default, pages have 20 elements. If there are &gt;20 total elements,\ncalling <tt>PagedResponse.next()</tt> will request the next page from the API.</p>\n<p>You can simplify that/do away with the nested loop by using\n<tt>PagedResponse.limit()</tt>. By default, this requests a maximum of 5 pages,\nand returns the elements of each in a flat list.</p>\n<p>Use <tt>PagedResponse.one()</tt> to return just the list from the first page.</p>\n<p>For example, the previous example could also be written as:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">ticketpy</span>\n\n<span class=\"n\">tm_client</span> <span class=\"o\">=</span> <span class=\"n\">ticketpy</span><span class=\"o\">.</span><span class=\"n\">ApiClient</span><span class=\"p\">(</span><span class=\"s1\">'your_api_key'</span><span class=\"p\">)</span>\n\n<span class=\"n\">pages</span> <span class=\"o\">=</span> <span class=\"n\">tm_client</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span>\n    <span class=\"n\">classification_name</span><span class=\"o\">=</span><span class=\"s1\">'Hip-Hop'</span><span class=\"p\">,</span>\n    <span class=\"n\">state_code</span><span class=\"o\">=</span><span class=\"s1\">'GA'</span><span class=\"p\">,</span>\n    <span class=\"n\">start_date_time</span><span class=\"o\">=</span><span class=\"s1\">'2017-05-19T20:00:00Z'</span><span class=\"p\">,</span>\n    <span class=\"n\">end_date_time</span><span class=\"o\">=</span><span class=\"s1\">'2017-05-21T20:00:00Z'</span>\n<span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">limit</span><span class=\"p\">()</span>\n\n<span class=\"k\">for</span> <span class=\"n\">event</span> <span class=\"ow\">in</span> <span class=\"n\">pages</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">)</span>\n</pre>\n<p>The output here would be the same as there was &lt;1 page available, however,\nthis can save you some wasted API calls for large result sets. If you\nreally want <em>every page</em>, though, use <tt>all()</tt> to request every available\npage.</p>\n</div>\n<div id=\"venues\">\n<h3>Venues</h3>\n<p>To search for all venues based on the string \u201c<em>Tabernacle</em>\u201d:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">ticketpy</span>\n\n<span class=\"n\">tm_client</span> <span class=\"o\">=</span> <span class=\"n\">ticketpy</span><span class=\"o\">.</span><span class=\"n\">ApiClient</span><span class=\"p\">(</span><span class=\"s2\">\"your_api_key\"</span><span class=\"p\">)</span>\n<span class=\"n\">venues</span> <span class=\"o\">=</span> <span class=\"n\">tm_client</span><span class=\"o\">.</span><span class=\"n\">venues</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">keyword</span><span class=\"o\">=</span><span class=\"s2\">\"Tabernacle\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">venues</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Name: </span><span class=\"si\">{}</span><span class=\"s2\"> / City: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">city</span><span class=\"p\">))</span>\n</pre>\n<p>Output:</p>\n<pre>Name: Tabernacle / City: London\nName: The Tabernacle / City: Atlanta\nName: Tabernacle, Notting Hill / City: London\nName: Bethel Tabernacle / City: Penticton\nName: Revivaltime Tabernacle / City: Toronto\nName: Auckland Baptist Tabernacle / City: Auckland\nName: Pentecostal Tabernacle / City: Nashville\nName: The Tabernacle / City: Oak Bluffs\nName: Tabernacle, Shoreditch / City: London\nName: Revivaltime Tabernacle / City: Toronto\nName: Tabernacle, Notting Hill / City: London\nName: The Tabernacle / City: London\nName: Tabernacle Junction / City: Yeovil\nName: New Tabernacle 4th Baptist Church / City: Charleston\n</pre>\n</div>\n<div id=\"attractions\">\n<h3>Attractions</h3>\n<p>Searching for attractions works similarly to the above:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">ticketpy</span>\n\n<span class=\"n\">tm_client</span> <span class=\"o\">=</span> <span class=\"n\">ticketpy</span><span class=\"o\">.</span><span class=\"n\">ApiClient</span><span class=\"p\">(</span><span class=\"s2\">\"your_api_key\"</span><span class=\"p\">)</span>\n<span class=\"n\">attractions</span> <span class=\"o\">=</span> <span class=\"n\">tm_client</span><span class=\"o\">.</span><span class=\"n\">attractions</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">keyword</span><span class=\"o\">=</span><span class=\"s2\">\"Yankees\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">one</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">attr</span> <span class=\"ow\">in</span> <span class=\"n\">attractions</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">attr</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre>New York Yankees\nScranton Wilkes-Barre RailRiders\nStaten Island Yankees\nYankee Stadium Tours\nTampa Yankees\nNew York Yankees  Bomber Bucks\nHands On History At Yankee Stadium\nDamn Yankees\nDamn Yankees\nBattle Creek Yankees\nNew York Yankees Parking\nOffsite Parking at Yankee Stadium\nQuikpark at Yankee Stadium- NYCFC\nNew York Yankees Fan Fest\nNew York Yankees 3 (Do Not Use)\nNew York Yankees 1 (Do Not Use)\nNew York Yankees 2 (Do Not Use)\nBehind the Scenes At Yankee Stadium\n</pre>\n</div>\n<div id=\"classifications\">\n<h3>Classifications</h3>\n<p>Searching for classifications works similarly to the above:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">ticketpy</span>\n\n<span class=\"n\">tm_client</span> <span class=\"o\">=</span> <span class=\"n\">ticketpy</span><span class=\"o\">.</span><span class=\"n\">ApiClient</span><span class=\"p\">(</span><span class=\"s2\">\"your_api_key\"</span><span class=\"p\">)</span>\n<span class=\"n\">classifications</span> <span class=\"o\">=</span> <span class=\"n\">tm_client</span><span class=\"o\">.</span><span class=\"n\">classifications</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">keyword</span><span class=\"o\">=</span><span class=\"s2\">\"Drama\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">one</span><span class=\"p\">()</span>\n\n<span class=\"k\">for</span> <span class=\"n\">cl</span> <span class=\"ow\">in</span> <span class=\"n\">classifications</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Segment: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">segment</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">))</span>\n    <span class=\"k\">for</span> <span class=\"n\">genre</span> <span class=\"ow\">in</span> <span class=\"n\">cl</span><span class=\"o\">.</span><span class=\"n\">segment</span><span class=\"o\">.</span><span class=\"n\">genres</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"--Genre: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">genre</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">))</span>\n</pre>\n<p>Output:</p>\n<pre>Segment: Film\n--Genre: Drama\nSegment: Arts &amp; Theatre\n--Genre: Theatre\n</pre>\n<p>Querying details for classifications by ID will return either a <tt>Segment</tt>,\n<tt>Genre</tt>, or <tt>SubGenre</tt>, whichever matches the given ID.</p>\n<p>For example,</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">ticketpy</span>\n\n<span class=\"n\">tm_client</span> <span class=\"o\">=</span> <span class=\"n\">ticketpy</span><span class=\"o\">.</span><span class=\"n\">ApiClient</span><span class=\"p\">(</span><span class=\"s2\">\"your_api_key\"</span><span class=\"p\">)</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">tm_client</span><span class=\"o\">.</span><span class=\"n\">classifications</span><span class=\"o\">.</span><span class=\"n\">by_id</span><span class=\"p\">(</span><span class=\"s1\">'KZFzniwnSyZfZ7v7nJ'</span><span class=\"p\">)</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">tm_client</span><span class=\"o\">.</span><span class=\"n\">classifications</span><span class=\"o\">.</span><span class=\"n\">by_id</span><span class=\"p\">(</span><span class=\"s1\">'KnvZfZ7vAvE'</span><span class=\"p\">)</span>\n<span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">tm_client</span><span class=\"o\">.</span><span class=\"n\">classifications</span><span class=\"o\">.</span><span class=\"n\">by_id</span><span class=\"p\">(</span><span class=\"s1\">'KZazBEonSMnZfZ7vkdl'</span><span class=\"p\">)</span>\n\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"s2\">\"Name: </span><span class=\"si\">{}</span><span class=\"s2\"> / Type: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">)))</span>\n</pre>\n<p>Output:</p>\n<pre>Name: Music / Type: &lt;class 'ticketpy.model.Segment'&gt;\nName: Jazz / Type: &lt;class 'ticketpy.model.Genre'&gt;\nName: Bebop / Type: &lt;class 'ticketpy.model.SubGenre'&gt;\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3269074, "releases": {"1.0.2": [{"comment_text": "", "digests": {"md5": "bb9b8d7793c91c4d46878530b8fae5ef", "sha256": "b59798fdca82e58db3b8d231909d1519e1eb1e39da49e559d81b0907837dcd71"}, "downloads": -1, "filename": "ticketpy-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "bb9b8d7793c91c4d46878530b8fae5ef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11085, "upload_time": "2017-04-10T00:56:08", "upload_time_iso_8601": "2017-04-10T00:56:08.313735Z", "url": "https://files.pythonhosted.org/packages/ce/50/a3af50b346fb89b3c291ac9d7be1c2855003dfe13bcba79615fb4a657196/ticketpy-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "03bf0988d9e1527bb44652382955a7f5", "sha256": "71b3328000c9f3a33892a03aa07b9497b4a3d55347bb539c252b81be25a9192a"}, "downloads": -1, "filename": "ticketpy-1.0.2.tar.gz", "has_sig": false, "md5_digest": "03bf0988d9e1527bb44652382955a7f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10143, "upload_time": "2017-04-10T00:55:50", "upload_time_iso_8601": "2017-04-10T00:55:50.299112Z", "url": "https://files.pythonhosted.org/packages/20/20/4c9dba085dc85f95e80f3e729c9ec10abfae85c4005549a77fb057ccb2a1/ticketpy-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "591cfdac4ba1e47fcefdc9cd5b1b1507", "sha256": "e9e690c282ef0af68f7c0447dbee9ce5ee4d83e21eccce18f701aeb7a41abe3d"}, "downloads": -1, "filename": "ticketpy-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "591cfdac4ba1e47fcefdc9cd5b1b1507", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12215, "upload_time": "2017-04-10T21:13:38", "upload_time_iso_8601": "2017-04-10T21:13:38.946070Z", "url": "https://files.pythonhosted.org/packages/0d/97/4c2d074dcc3f1cf58e093e8294b8eae4fdc49c8384e8486820884ecc9130/ticketpy-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af768f7f72c1adcc4967481fa0cc96a7", "sha256": "f62746d08338407ed9c4f4aeb33b938837a41246cafd45198bc98a1aba510a61"}, "downloads": -1, "filename": "ticketpy-1.0.3.tar.gz", "has_sig": false, "md5_digest": "af768f7f72c1adcc4967481fa0cc96a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11204, "upload_time": "2017-04-10T21:13:21", "upload_time_iso_8601": "2017-04-10T21:13:21.765689Z", "url": "https://files.pythonhosted.org/packages/bf/81/019ca486a8a9a980524d66111db5e67be93ce1685d8285b9785f9e969435/ticketpy-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "4352967c7d6ab266ab4d5382d884e2c6", "sha256": "d4385504d18e7063c25a510e97da641e1cd1f03e69d21eac024b5d89c87fe6c2"}, "downloads": -1, "filename": "ticketpy-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "4352967c7d6ab266ab4d5382d884e2c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15984, "upload_time": "2017-04-14T00:01:52", "upload_time_iso_8601": "2017-04-14T00:01:52.782877Z", "url": "https://files.pythonhosted.org/packages/31/86/cc87d6d364c469b58433cb6018e7e263908d3924ad88a2c40ae948e358c8/ticketpy-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5eace24b7ab600badf0b912cf1120a3", "sha256": "1126e68a4eb72187f7615505888ca7d3b2327083be7d87e281f458084b1caf7b"}, "downloads": -1, "filename": "ticketpy-1.0.4.tar.gz", "has_sig": false, "md5_digest": "b5eace24b7ab600badf0b912cf1120a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15272, "upload_time": "2017-04-14T00:01:34", "upload_time_iso_8601": "2017-04-14T00:01:34.721325Z", "url": "https://files.pythonhosted.org/packages/3a/af/15e166a78edef9c50ff1d5f51049c6ffeeb7bf4ec800ddc52cc88d894432/ticketpy-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "2f598c561b09e0ecb84e587742ca56e9", "sha256": "04e95ea24141a50934fa113920ceb1cb0e74b5f66b3f86cf2bbcece08a1ec237"}, "downloads": -1, "filename": "ticketpy-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "2f598c561b09e0ecb84e587742ca56e9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16010, "upload_time": "2017-04-14T00:10:21", "upload_time_iso_8601": "2017-04-14T00:10:21.700879Z", "url": "https://files.pythonhosted.org/packages/ed/0e/d5745dd95236af7aaf3006913d3e52f23d937c78ebc7c530cb946072d234/ticketpy-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "53bfc5498d653aa0a72971fc8302b097", "sha256": "72c6c419765231a2dfb53a6def091ce1ceb875d4a59f5c43cfc79e5288da789e"}, "downloads": -1, "filename": "ticketpy-1.0.5.tar.gz", "has_sig": false, "md5_digest": "53bfc5498d653aa0a72971fc8302b097", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15299, "upload_time": "2017-04-14T00:10:06", "upload_time_iso_8601": "2017-04-14T00:10:06.919359Z", "url": "https://files.pythonhosted.org/packages/80/36/b959878fa5d03874e92832cf88f28b74ec0d1dcd4719016ac1a1d4379d74/ticketpy-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "cee304077c50b1d6a685090ae3b1041f", "sha256": "aadd892be1cd7b69c48445c9124067c6da228f1a408497803700d31b13bc3832"}, "downloads": -1, "filename": "ticketpy-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "cee304077c50b1d6a685090ae3b1041f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27446, "upload_time": "2017-04-14T01:24:16", "upload_time_iso_8601": "2017-04-14T01:24:16.847195Z", "url": "https://files.pythonhosted.org/packages/23/4c/1cf16fc1222418db5b91ba91291d8fc791715f666bea60458730befa9a8d/ticketpy-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6e6d2a6259f673860b24dd68b5635e2", "sha256": "35657c2bb63eef30342848a273156ea66052e97fe903d1129d472bbe2b067b43"}, "downloads": -1, "filename": "ticketpy-1.0.6.tar.gz", "has_sig": false, "md5_digest": "d6e6d2a6259f673860b24dd68b5635e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15722, "upload_time": "2017-04-14T01:24:01", "upload_time_iso_8601": "2017-04-14T01:24:01.223190Z", "url": "https://files.pythonhosted.org/packages/ef/3f/d0772f63b66069d6d526bbdc53a60832f7c5f5e8d325220b45bd12298f50/ticketpy-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "b51833301944aafe24383c5e5005e10c", "sha256": "45fabd0b85d0b074ed046c5aac8d7d694d8800c4b06e6b5846fe6fcc9cecbd77"}, "downloads": -1, "filename": "ticketpy-1.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "b51833301944aafe24383c5e5005e10c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27304, "upload_time": "2017-04-14T02:26:21", "upload_time_iso_8601": "2017-04-14T02:26:21.384576Z", "url": "https://files.pythonhosted.org/packages/12/99/bd75a4a3e0b4d67f097783317a2fd8ea3fe6c264703d7807be71769c4902/ticketpy-1.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef88addd7e0e96211de1c8ca9d47aa4f", "sha256": "a60c224a9360f8ee42ca0c09556523193091bac0fcceb0842864536f6222a70f"}, "downloads": -1, "filename": "ticketpy-1.0.7.tar.gz", "has_sig": false, "md5_digest": "ef88addd7e0e96211de1c8ca9d47aa4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15625, "upload_time": "2017-04-14T02:26:08", "upload_time_iso_8601": "2017-04-14T02:26:08.428103Z", "url": "https://files.pythonhosted.org/packages/4f/26/47cbf74eab770d27ff0cada02b8f81b94825b6d977be302c3f95fa39157d/ticketpy-1.0.7.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "ac5c8ed9a241f07d6bee0e9bdd105c45", "sha256": "0425be2fff23e1451b8e9e7da9a995d548e3e6a73fc0c79ec8f60beaf20219d2"}, "downloads": -1, "filename": "ticketpy-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ac5c8ed9a241f07d6bee0e9bdd105c45", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26368, "upload_time": "2017-04-15T20:09:49", "upload_time_iso_8601": "2017-04-15T20:09:49.837533Z", "url": "https://files.pythonhosted.org/packages/b8/41/da940a2f2ddc0c4c7934f1b79af143c054f55f94256532a605c93e4a8057/ticketpy-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7cb45f7a14551afc977ee261fe870ea5", "sha256": "dd05e015d29208fa2dbc0787cba9fd4199ec8f05b69c3806451804655531c5d2"}, "downloads": -1, "filename": "ticketpy-1.1.tar.gz", "has_sig": false, "md5_digest": "7cb45f7a14551afc977ee261fe870ea5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14719, "upload_time": "2017-04-15T20:08:55", "upload_time_iso_8601": "2017-04-15T20:08:55.203393Z", "url": "https://files.pythonhosted.org/packages/6c/84/3c36f8ae20ff615f154ea5284ad9ccba28f87b2c3df12fff42246bb20040/ticketpy-1.1.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "b2ddae35f7331da921ad438043df5628", "sha256": "38792e9c55ac9f660f9cc1cdcc008953f56dac92cc8d86a27c42a8e1bea24437"}, "downloads": -1, "filename": "ticketpy-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b2ddae35f7331da921ad438043df5628", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26580, "upload_time": "2017-04-16T21:53:17", "upload_time_iso_8601": "2017-04-16T21:53:17.717385Z", "url": "https://files.pythonhosted.org/packages/a4/79/8c30a33b69330d0e18f8f268f57f482c1b8489f68a3cdc43e3434ea38d2f/ticketpy-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9adfb7c0b174841cf879f8c617737e90", "sha256": "741a430fe5bdb2e80ed24179a2b49068826022558e5b8409fe62e02ef12b1761"}, "downloads": -1, "filename": "ticketpy-1.1.1.tar.gz", "has_sig": false, "md5_digest": "9adfb7c0b174841cf879f8c617737e90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14939, "upload_time": "2017-04-16T21:52:57", "upload_time_iso_8601": "2017-04-16T21:52:57.759811Z", "url": "https://files.pythonhosted.org/packages/3a/b0/9259c8348ade16c0a034c83e984a46868251a0da3f0bb4ef4e5c74bc085f/ticketpy-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "ddad39c72dfc9fff991d7f971ac9db20", "sha256": "a31011460286fe1f3682811a8705346001f2d9874c3dd303d262c23fdb20c244"}, "downloads": -1, "filename": "ticketpy-1.1.2-py3.6.egg", "has_sig": false, "md5_digest": "ddad39c72dfc9fff991d7f971ac9db20", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 29245, "upload_time": "2017-10-21T23:39:45", "upload_time_iso_8601": "2017-10-21T23:39:45.944436Z", "url": "https://files.pythonhosted.org/packages/d3/9f/63c54685df2f2eecfa20e3c08afa58499e0a3fac503253a8e8710be683c7/ticketpy-1.1.2-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "310747e5f2bb100721b9a6e7ef9cb051", "sha256": "7cbf31908284919f5a4399971f6e6f86e60f4b5c2a13ef661c0e88ba21a05bbd"}, "downloads": -1, "filename": "ticketpy-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "310747e5f2bb100721b9a6e7ef9cb051", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16816, "upload_time": "2017-10-21T23:39:44", "upload_time_iso_8601": "2017-10-21T23:39:44.525362Z", "url": "https://files.pythonhosted.org/packages/69/ff/360dc5c7f06268d48161fcb3a8a95060d4aa72661bbdbbb05bb5dbf324a2/ticketpy-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16499cddd37b0b49bd711f9e4f204839", "sha256": "902e848ce5fc8b86e1d7696256754882304052cf44b5f1d69f1ea5ea60827543"}, "downloads": -1, "filename": "ticketpy-1.1.2.win-amd64.zip", "has_sig": false, "md5_digest": "16499cddd37b0b49bd711f9e4f204839", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30038, "upload_time": "2017-10-21T23:39:46", "upload_time_iso_8601": "2017-10-21T23:39:46.908315Z", "url": "https://files.pythonhosted.org/packages/99/9a/abe437e89b9f2a36eeae8ae1d28e12a488190456e363f376370e51c865f7/ticketpy-1.1.2.win-amd64.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ddad39c72dfc9fff991d7f971ac9db20", "sha256": "a31011460286fe1f3682811a8705346001f2d9874c3dd303d262c23fdb20c244"}, "downloads": -1, "filename": "ticketpy-1.1.2-py3.6.egg", "has_sig": false, "md5_digest": "ddad39c72dfc9fff991d7f971ac9db20", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 29245, "upload_time": "2017-10-21T23:39:45", "upload_time_iso_8601": "2017-10-21T23:39:45.944436Z", "url": "https://files.pythonhosted.org/packages/d3/9f/63c54685df2f2eecfa20e3c08afa58499e0a3fac503253a8e8710be683c7/ticketpy-1.1.2-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "310747e5f2bb100721b9a6e7ef9cb051", "sha256": "7cbf31908284919f5a4399971f6e6f86e60f4b5c2a13ef661c0e88ba21a05bbd"}, "downloads": -1, "filename": "ticketpy-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "310747e5f2bb100721b9a6e7ef9cb051", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16816, "upload_time": "2017-10-21T23:39:44", "upload_time_iso_8601": "2017-10-21T23:39:44.525362Z", "url": "https://files.pythonhosted.org/packages/69/ff/360dc5c7f06268d48161fcb3a8a95060d4aa72661bbdbbb05bb5dbf324a2/ticketpy-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16499cddd37b0b49bd711f9e4f204839", "sha256": "902e848ce5fc8b86e1d7696256754882304052cf44b5f1d69f1ea5ea60827543"}, "downloads": -1, "filename": "ticketpy-1.1.2.win-amd64.zip", "has_sig": false, "md5_digest": "16499cddd37b0b49bd711f9e4f204839", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30038, "upload_time": "2017-10-21T23:39:46", "upload_time_iso_8601": "2017-10-21T23:39:46.908315Z", "url": "https://files.pythonhosted.org/packages/99/9a/abe437e89b9f2a36eeae8ae1d28e12a488190456e363f376370e51c865f7/ticketpy-1.1.2.win-amd64.zip", "yanked": false}], "timestamp": "Fri May  8 02:53:31 2020"}