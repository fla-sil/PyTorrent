{"info": {"author": "Eyal Gal, Idan Segev, Michael London", "author_email": "eyalgl@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3.7"], "description": "# netsci\nAnalyzing Complex Networks with Python\n\n\n|    Author    |                 Version                  |                   Demo                   |\n| :----------: | :--------------------------------------: | :--------------------------------------: |\n| Gialdetti | [![PyPI](https://img.shields.io/pypi/v/netsci.svg)](https://pypi.org/project/netsci/) | [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/gialdetti/netsci/master?filepath=examples%2Fnetwork_motifs.ipynb) |\n\n\nnetsci is a python package for efficient statistical analysis of spatially-embedded networks. In addition, it offers efficient implementations of motif counting algorithms.\nFor other models and metrics, we highly recommend using existing and richer tools. Noteworthy packages are the magnificent [NetworkX](https://networkx.github.io), [graph-tool](https://graph-tool.skewed.de) or [Brain Connectivity Toolbox](https://sites.google.com/site/bctnet/).\n\n## Installing\nInstall and update using [pip](https://pip.pypa.io/en/stable/quickstart/):\n```bash\n$ pip install netsci\n```\n\n## A simple example\nAnalyzing a star network (of four nodes)\n\n```python\n>>> import numpy as np\n>>> import netsci.visualization as nsv\n>>> A = np.array([[0,1,1,1], [0,0,0,0], [0,0,0,0], [0,0,0,0]])\n>>> nsv.plot_directed_network(A, pos=[[0,0],[-1,1],[1,1],[0,-np.sqrt(2)]])\n```\n![Alt text](./examples/images/star4_network.png)\n\n\n```python\n>>> import netsci.metrics.motifs as nsm\n>>> f = nsm.motifs(A, algorithm='brute-force')\n>>> print(f)\n[1 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0]\n```\n\n```python\n>>> nsv.bar_motifs(f)\n```\n![Alt text](examples/images/star4_motifs.png)\n\n\n## Testing\nAfter installation, you can launch the test suite:\n```bash\n$ pytest\n```\n\n\n## Help and Support\n\n### Examples\n\n|     Theme    |                 MyBinder                  |\n| ------------ | :---------------------------------------: |\n| Basic network motifs demo | [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/gialdetti/netsci/master?filepath=examples%2Fnetwork_motifs.ipynb) |    \n| Connectomics dataset, and 3-neuron motif embedding | [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/gialdetti/netsci/master?filepath=examples%2Fconnectomics_motif_embedding.ipynb)\n\n\n### Communication\nPlease send any questions you might have about the code and/or the algorithm to <eyal.gal@mail.huji.ac.il>.\n\n\n### Citation\nIf you use `netsci` in a scientific publication, please consider citing the following paper:\n\n> Gal, E., Perin, R., Markram, H., London, M., and Segev, I. (2019). [Neuron Geometry Underlies a Universal Local Architecture in Neuronal Networks.](https://doi.org/10.1101/656058) BioRxiv 656058.\n\nBibtex entry:\n\n    @article {Gal2019\n        author = {Gal, Eyal and Perin, Rodrigo and Markram, Henry and London, Michael and Segev, Idan},\n        title = {Neuron Geometry Underlies a Universal Local Architecture in Neuronal Networks},\n        year = {2019},\n        doi = {10.1101/656058},\n        journal = {bioRxiv}\n    }\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gialdetti/netsci/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "netsci", "package_url": "https://pypi.org/project/netsci/", "platform": "", "project_url": "https://pypi.org/project/netsci/", "project_urls": {"Homepage": "https://github.com/gialdetti/netsci/"}, "release_url": "https://pypi.org/project/netsci/0.0.2.2/", "requires_dist": ["numpy (>=1.16.2)", "pandas (>=0.24.2)", "matplotlib (>=3.0.3)", "seaborn (>=0.9.0)", "networkx (>=2.2)"], "requires_python": "", "summary": "Analyzing Complex Networks with Python", "version": "0.0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>netsci</h1>\n<p>Analyzing Complex Networks with Python</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Author</th>\n<th align=\"center\">Version</th>\n<th align=\"center\">Demo</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">Gialdetti</td>\n<td align=\"center\"><a href=\"https://pypi.org/project/netsci/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c23daeedc9e4a5799e47a1d71c2c2ce7fc149e44/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6e65747363692e737667\"></a></td>\n<td align=\"center\"><a href=\"https://mybinder.org/v2/gh/gialdetti/netsci/master?filepath=examples%2Fnetwork_motifs.ipynb\" rel=\"nofollow\"><img alt=\"Binder\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85e91bbb928104e4ce317951541520c6b9c170e1/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667\"></a></td>\n</tr></tbody></table>\n<p>netsci is a python package for efficient statistical analysis of spatially-embedded networks. In addition, it offers efficient implementations of motif counting algorithms.\nFor other models and metrics, we highly recommend using existing and richer tools. Noteworthy packages are the magnificent <a href=\"https://networkx.github.io\" rel=\"nofollow\">NetworkX</a>, <a href=\"https://graph-tool.skewed.de\" rel=\"nofollow\">graph-tool</a> or <a href=\"https://sites.google.com/site/bctnet/\" rel=\"nofollow\">Brain Connectivity Toolbox</a>.</p>\n<h2>Installing</h2>\n<p>Install and update using <a href=\"https://pip.pypa.io/en/stable/quickstart/\" rel=\"nofollow\">pip</a>:</p>\n<pre>$ pip install netsci\n</pre>\n<h2>A simple example</h2>\n<p>Analyzing a star network (of four nodes)</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">netsci.visualization</span> <span class=\"k\">as</span> <span class=\"nn\">nsv</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">A</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">nsv</span><span class=\"o\">.</span><span class=\"n\">plot_directed_network</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"n\">pos</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)]])</span>\n</pre>\n<p><img alt=\"Alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2f8e7784ac14f420d12a0568b3f0c0e051285749/2e2f6578616d706c65732f696d616765732f73746172345f6e6574776f726b2e706e67\"></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">netsci.metrics.motifs</span> <span class=\"k\">as</span> <span class=\"nn\">nsm</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">nsm</span><span class=\"o\">.</span><span class=\"n\">motifs</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"n\">algorithm</span><span class=\"o\">=</span><span class=\"s1\">'brute-force'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">3</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">nsv</span><span class=\"o\">.</span><span class=\"n\">bar_motifs</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"Alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7c7f519453d2bbdf16a1a331091bc894c7d9df5e/6578616d706c65732f696d616765732f73746172345f6d6f746966732e706e67\"></p>\n<h2>Testing</h2>\n<p>After installation, you can launch the test suite:</p>\n<pre>$ pytest\n</pre>\n<h2>Help and Support</h2>\n<h3>Examples</h3>\n<table>\n<thead>\n<tr>\n<th>Theme</th>\n<th align=\"center\">MyBinder</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Basic network motifs demo</td>\n<td align=\"center\"><a href=\"https://mybinder.org/v2/gh/gialdetti/netsci/master?filepath=examples%2Fnetwork_motifs.ipynb\" rel=\"nofollow\"><img alt=\"Binder\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85e91bbb928104e4ce317951541520c6b9c170e1/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667\"></a></td>\n</tr>\n<tr>\n<td>Connectomics dataset, and 3-neuron motif embedding</td>\n<td align=\"center\"><a href=\"https://mybinder.org/v2/gh/gialdetti/netsci/master?filepath=examples%2Fconnectomics_motif_embedding.ipynb\" rel=\"nofollow\"><img alt=\"Binder\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85e91bbb928104e4ce317951541520c6b9c170e1/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667\"></a></td>\n</tr></tbody></table>\n<h3>Communication</h3>\n<p>Please send any questions you might have about the code and/or the algorithm to <a href=\"mailto:eyal.gal@mail.huji.ac.il\">eyal.gal@mail.huji.ac.il</a>.</p>\n<h3>Citation</h3>\n<p>If you use <code>netsci</code> in a scientific publication, please consider citing the following paper:</p>\n<blockquote>\n<p>Gal, E., Perin, R., Markram, H., London, M., and Segev, I. (2019). <a href=\"https://doi.org/10.1101/656058\" rel=\"nofollow\">Neuron Geometry Underlies a Universal Local Architecture in Neuronal Networks.</a> BioRxiv 656058.</p>\n</blockquote>\n<p>Bibtex entry:</p>\n<pre><code>@article {Gal2019\n    author = {Gal, Eyal and Perin, Rodrigo and Markram, Henry and London, Michael and Segev, Idan},\n    title = {Neuron Geometry Underlies a Universal Local Architecture in Neuronal Networks},\n    year = {2019},\n    doi = {10.1101/656058},\n    journal = {bioRxiv}\n}\n</code></pre>\n\n          </div>"}, "last_serial": 6501177, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "46255afb188d5933b8c82023f51179ec", "sha256": "da19246d5b996a9da0bff6920b7251466a2a8208fd8ba3010d58aa5b71fece25"}, "downloads": -1, "filename": "netsci-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "46255afb188d5933b8c82023f51179ec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26905, "upload_time": "2019-06-27T20:02:30", "upload_time_iso_8601": "2019-06-27T20:02:30.414805Z", "url": "https://files.pythonhosted.org/packages/6f/ef/360881c5701daa7a4f0e3eccc5411906cb806aeba969a868d47a347ed7f3/netsci-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "93da4cfae05b35e00c099dbf5b7460f0", "sha256": "251a339fc28a50553ce4c68c0a9d54e0b60675a3bc17d5b4a2cd01eeec673ee0"}, "downloads": -1, "filename": "netsci-0.0.1.tar.gz", "has_sig": false, "md5_digest": "93da4cfae05b35e00c099dbf5b7460f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11557, "upload_time": "2019-06-27T20:02:32", "upload_time_iso_8601": "2019-06-27T20:02:32.689065Z", "url": "https://files.pythonhosted.org/packages/62/71/82fb27145b05cd492ec33a3b02b989ad7b9e99db5b39594d5d16766a988b/netsci-0.0.1.tar.gz", "yanked": false}], "0.0.2.2": [{"comment_text": "", "digests": {"md5": "844411940ef2e788d2019fc322343da8", "sha256": "f165f7e45285bb2d0e4452effca3c114ff042c16e6128245560ac6f177de35a9"}, "downloads": -1, "filename": "netsci-0.0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "844411940ef2e788d2019fc322343da8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 442169, "upload_time": "2020-01-22T16:16:57", "upload_time_iso_8601": "2020-01-22T16:16:57.391187Z", "url": "https://files.pythonhosted.org/packages/67/2b/2f8cb9c4dac2390b0404fe89b054678ecdfd8894d67ace65714d235b3039/netsci-0.0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2eb26c7c49b2c157bf154ccc7b950903", "sha256": "375cd294141488e97c7c3fe0f5b01bd75343b11361e518352ccfae870d5ba712"}, "downloads": -1, "filename": "netsci-0.0.2.2.tar.gz", "has_sig": false, "md5_digest": "2eb26c7c49b2c157bf154ccc7b950903", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 429076, "upload_time": "2020-01-22T16:17:02", "upload_time_iso_8601": "2020-01-22T16:17:02.561856Z", "url": "https://files.pythonhosted.org/packages/67/c8/f1b5257c675345b77588c563603d7506630ae2f3cfa1aba0a825bde976cc/netsci-0.0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "844411940ef2e788d2019fc322343da8", "sha256": "f165f7e45285bb2d0e4452effca3c114ff042c16e6128245560ac6f177de35a9"}, "downloads": -1, "filename": "netsci-0.0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "844411940ef2e788d2019fc322343da8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 442169, "upload_time": "2020-01-22T16:16:57", "upload_time_iso_8601": "2020-01-22T16:16:57.391187Z", "url": "https://files.pythonhosted.org/packages/67/2b/2f8cb9c4dac2390b0404fe89b054678ecdfd8894d67ace65714d235b3039/netsci-0.0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2eb26c7c49b2c157bf154ccc7b950903", "sha256": "375cd294141488e97c7c3fe0f5b01bd75343b11361e518352ccfae870d5ba712"}, "downloads": -1, "filename": "netsci-0.0.2.2.tar.gz", "has_sig": false, "md5_digest": "2eb26c7c49b2c157bf154ccc7b950903", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 429076, "upload_time": "2020-01-22T16:17:02", "upload_time_iso_8601": "2020-01-22T16:17:02.561856Z", "url": "https://files.pythonhosted.org/packages/67/c8/f1b5257c675345b77588c563603d7506630ae2f3cfa1aba0a825bde976cc/netsci-0.0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:55 2020"}