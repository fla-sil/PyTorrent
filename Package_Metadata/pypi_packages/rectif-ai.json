{"info": {"author": "Sushil Thapa", "author_email": "mailsushilthapa@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Rectif.ai\n\nMaking the world a better place one posture at a time. \n\n## Running the system\n\n- Create and activate a Virtual Environment (preferably Python 3.7)\n- Install dependencies using the `requirements.txt` file or with `setup.py` as `pip install -e .`\n- If you have `git-lfs` installed, models should be automatically downloaded. \n  If it isn't (i.e the sizes aren't ~13MB:posenet and 296KB:posturenet), explicitly download the models from this [drive link](https://drive.google.com/drive/folders/1bdGLkvHFLdwb1hIJ1dMQCjYTDbGsEemF?usp=sharing) to `data/raw/` folder.\n- Run `python -m rectifai.predictors.demo_webcam` to see the demo with realtime pose preview.  \n  or  \n  Run `python -m rectifai.predictors.demo_webcam --no-preview` to see the notifications only when you need to. :)\n\n## Inspiration\n\nIn today\u2019s world, our work requires us to be sitting for a lot of the time. Failing to maintain good posture can thus, cause a variety of health problems related to our lungs, digestion, bones, and so on and so forth. Furthermore, bad posture habits are pretty common and it can be difficult breaking away from them without much deliberate effort. \n\n## What it does\n\nThe app helps develop good posture habits by making people mindful about their postures when they are in front of the screen. \n\n## How We built it\n\nWe used a Pytorch implementation of PoseNet to detect key-points. The points are then passed onto another network that classifies it into good or bad posture. \nBecause of the unavailability of the posture(good/bad) dataset, We had to create our own data.  By sitting in both good and bad postures and generating annotated keypoints co-ordinate dataset with pose estimation model, we were able to collect 150,000 different pose Coordinates. Details on the train-val-test splits is given below. The main benefit of this type of custom dataset is it's ease of data collection. Also because of it's simplicity any simple ML model can give good results with it unlike any expensive - image based dataset.\n\n### Datasets \n- [MPII Human Pose Dataset](http://human-pose.mpi-inf.mpg.de/)\n- Custom Generated Posture Data (Each pose has 17 keypoint Coordinates for each Human landmarks/Joints)\n\n    | Dataset type  | # of pose (Keypoint Co-ordinates) |\n    | --- | --- |\n    | Train  | 100,000  |\n    | Validation  | 30,000 |\n    | Test  | 20,000  |\n\n### Tools\n- Pytorch, Torchvision\n- Opencv\n- Numpy\n- TorchSummary\n\n## Challenges we ran into\n\n- No proper posture detection dataset anywhere, Really expensive to create image based dataset for it. so we tried a different domain problem and hacked it to work for our use case. \n- Infrastructure needed for best results. Didn't have good machines so used mobilenet for the posenet  and Linear neuron networks for detection because of its speed and accuracy compared to size of models and infrastructure required.\n\n## What's next for Rectif.ai\n\n- Training on more data for more accurate results\n- Addition of feature to get analytics for posture over a period of time\n- Monitoring from different angles\n- Add temporal models for posture detection\n\n## Acknowledgements\n1. [AllenNLP](https://allennlp.org/)\n2. [Posenet](http://mi.eng.cam.ac.uk/projects/relocalisation/)-[Pytorch](https://github.com/rwightman/posenet-pytorch.)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Sushil-Thapa/PyTorch-Hackathon-2019.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "rectif-ai", "package_url": "https://pypi.org/project/rectif-ai/", "platform": "", "project_url": "https://pypi.org/project/rectif-ai/", "project_urls": {"Homepage": "https://github.com/Sushil-Thapa/PyTorch-Hackathon-2019.git"}, "release_url": "https://pypi.org/project/rectif-ai/0.1/", "requires_dist": null, "requires_python": "", "summary": "Rectif.ai", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Rectif.ai</h1>\n<p>Making the world a better place one posture at a time.</p>\n<h2>Running the system</h2>\n<ul>\n<li>Create and activate a Virtual Environment (preferably Python 3.7)</li>\n<li>Install dependencies using the <code>requirements.txt</code> file or with <code>setup.py</code> as <code>pip install -e .</code></li>\n<li>If you have <code>git-lfs</code> installed, models should be automatically downloaded.\nIf it isn't (i.e the sizes aren't ~13MB:posenet and 296KB:posturenet), explicitly download the models from this <a href=\"https://drive.google.com/drive/folders/1bdGLkvHFLdwb1hIJ1dMQCjYTDbGsEemF?usp=sharing\" rel=\"nofollow\">drive link</a> to <code>data/raw/</code> folder.</li>\n<li>Run <code>python -m rectifai.predictors.demo_webcam</code> to see the demo with realtime pose preview.<br>\nor<br>\nRun <code>python -m rectifai.predictors.demo_webcam --no-preview</code> to see the notifications only when you need to. :)</li>\n</ul>\n<h2>Inspiration</h2>\n<p>In today\u2019s world, our work requires us to be sitting for a lot of the time. Failing to maintain good posture can thus, cause a variety of health problems related to our lungs, digestion, bones, and so on and so forth. Furthermore, bad posture habits are pretty common and it can be difficult breaking away from them without much deliberate effort.</p>\n<h2>What it does</h2>\n<p>The app helps develop good posture habits by making people mindful about their postures when they are in front of the screen.</p>\n<h2>How We built it</h2>\n<p>We used a Pytorch implementation of PoseNet to detect key-points. The points are then passed onto another network that classifies it into good or bad posture.\nBecause of the unavailability of the posture(good/bad) dataset, We had to create our own data.  By sitting in both good and bad postures and generating annotated keypoints co-ordinate dataset with pose estimation model, we were able to collect 150,000 different pose Coordinates. Details on the train-val-test splits is given below. The main benefit of this type of custom dataset is it's ease of data collection. Also because of it's simplicity any simple ML model can give good results with it unlike any expensive - image based dataset.</p>\n<h3>Datasets</h3>\n<ul>\n<li>\n<p><a href=\"http://human-pose.mpi-inf.mpg.de/\" rel=\"nofollow\">MPII Human Pose Dataset</a></p>\n</li>\n<li>\n<p>Custom Generated Posture Data (Each pose has 17 keypoint Coordinates for each Human landmarks/Joints)</p>\n<table>\n<thead>\n<tr>\n<th>Dataset type</th>\n<th># of pose (Keypoint Co-ordinates)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Train</td>\n<td>100,000</td>\n</tr>\n<tr>\n<td>Validation</td>\n<td>30,000</td>\n</tr>\n<tr>\n<td>Test</td>\n<td>20,000</td>\n</tr></tbody></table>\n</li>\n</ul>\n<h3>Tools</h3>\n<ul>\n<li>Pytorch, Torchvision</li>\n<li>Opencv</li>\n<li>Numpy</li>\n<li>TorchSummary</li>\n</ul>\n<h2>Challenges we ran into</h2>\n<ul>\n<li>No proper posture detection dataset anywhere, Really expensive to create image based dataset for it. so we tried a different domain problem and hacked it to work for our use case.</li>\n<li>Infrastructure needed for best results. Didn't have good machines so used mobilenet for the posenet  and Linear neuron networks for detection because of its speed and accuracy compared to size of models and infrastructure required.</li>\n</ul>\n<h2>What's next for Rectif.ai</h2>\n<ul>\n<li>Training on more data for more accurate results</li>\n<li>Addition of feature to get analytics for posture over a period of time</li>\n<li>Monitoring from different angles</li>\n<li>Add temporal models for posture detection</li>\n</ul>\n<h2>Acknowledgements</h2>\n<ol>\n<li><a href=\"https://allennlp.org/\" rel=\"nofollow\">AllenNLP</a></li>\n<li><a href=\"http://mi.eng.cam.ac.uk/projects/relocalisation/\" rel=\"nofollow\">Posenet</a>-<a href=\"https://github.com/rwightman/posenet-pytorch.\" rel=\"nofollow\">Pytorch</a></li>\n</ol>\n\n          </div>"}, "last_serial": 5847861, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "9b5a7f66a2a31aee2ff254421a2b3f5d", "sha256": "07969fa2cc19a6e291a261976ce7ea537d83c7cd3c0f6acf559a907a66079eb2"}, "downloads": -1, "filename": "rectif-ai-0.1.tar.gz", "has_sig": false, "md5_digest": "9b5a7f66a2a31aee2ff254421a2b3f5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25250, "upload_time": "2019-09-18T05:24:40", "upload_time_iso_8601": "2019-09-18T05:24:40.497167Z", "url": "https://files.pythonhosted.org/packages/e2/1b/d5ab299eff98a02df03830f2c462958588f908840dda4334c619893715a2/rectif-ai-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9b5a7f66a2a31aee2ff254421a2b3f5d", "sha256": "07969fa2cc19a6e291a261976ce7ea537d83c7cd3c0f6acf559a907a66079eb2"}, "downloads": -1, "filename": "rectif-ai-0.1.tar.gz", "has_sig": false, "md5_digest": "9b5a7f66a2a31aee2ff254421a2b3f5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25250, "upload_time": "2019-09-18T05:24:40", "upload_time_iso_8601": "2019-09-18T05:24:40.497167Z", "url": "https://files.pythonhosted.org/packages/e2/1b/d5ab299eff98a02df03830f2c462958588f908840dda4334c619893715a2/rectif-ai-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:05 2020"}