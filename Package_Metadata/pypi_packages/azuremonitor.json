{"info": {"author": "Jeff Mendoza", "author_email": "jeffmendoza@live.com", "bugtrack_url": null, "classifiers": [], "description": "Windows Azure Monitor\n=====================\n\nIntroduction\n------------\n\n\tWindows Azure Monitor includes utilities to monitor different aspects of Windows\n\tAzure. These utilities are designed to be used with Nagios and Zabbix, but could\n\talso be used in other creative ways.\n\nLicense\n-------\n\tApache License, Version 2.0\n\tSee COPYING\n\nInstallation\n------------\n\n\tTwo ways to install:\n\n\t1. Download and extract the source package. Run 'python setup.py install' See \n\t   http://docs.python.org/2.7/install/index.html for additional information\n\n\t2. Install using pip, 'pip install azuremonitor' Some distributions call pip\n\t   pip-python.\n\nDependencies\n------------\n\n\t* Python 2.6 or 2.7\n\t* azure - Window Azure sdk for Python\n\t* argparse - For Python 2.6\n\t* OpenSSL - pyOpenSSL\n\t* pyodbc - Connect to SQL Azure\n\t* FreeTDS - Used by ODBC to connect to SQL Azure\n\nSetup\n-----\n\nNagios\n______\n\n\t1. Create symlinks from your Nagios plugin directory to the Azure monitor utilities.\n\t   Example::\n\n\t\tln -s /usr/bin/check_azure_compute.py /usr/lib64/nagios/plugins\n\t\tln -s /usr/bin/check_azure_ad.py /usr/lib64/nagios/plugins\n\t\tln -s /usr/bin/check_azure_sql.py /usr/lib64/nagios/plugins\n\t\tln -s /usr/bin/check_azure_storage.py /usr/lib64/nagios/plugins\n\t\tln -s /usr/bin/check_azure_paas.py /usr/lib64/nagios/plugins\n\n\t2. Download your .publishsettings file for your Azure account. Something like:\n\t   https://windows.azure.com/download/publishprofile.aspx\n\n\t3. Move your .publishsetttings file to a safe place and protect it. Example::\n\n\t   \tmv azure.publishsettings /etc/nagios/private\n\t   \tchmod 640 /etc/nagios/private/azure.publishsettings\n\t   \tchown root:nagios /etc/nagios/private/azure.publishsettings\n\n\t   Here only root and the nagios group, which nagios runs under, is allowed to\n\t   read the file\n\n\t4. Optionally set a variable in your resource.cfg (usually /etc/nagios/private/resource.cfg)\n\t   To point to your publishsettings file\n\n\t5. Setup a command in a config file as usual for nagios::\n\n\t   \tdefine command{\n\t\t\tcommand_name    check_azure_compute\n\t\t\tcommand_line    $USER1$/check_azure_compute.py $HOSTADDRESS$ -p $PSFILE$\n\t\t}\n\t\tdefine command{\n\t\t\tcommand_name    check_azure_sql\n\t\t\tcommand_line    $USER1$/check_azure_sql.py $HOSTADDRESS$ $ARG1$\n\t\t}\n\n\t\tdefine command{\n\t\t\tcommand_name    check_azure_ad\n\t\t\tcommand_line    $USER1$/check_azure_ad.py $HOSTADDRESS$ $ARG1$\n\t\t}\n\n\t\tdefine command{\n\t\t\tcommand_name    check_azure_paas\n\t\t\tcommand_line    $USER1$/check_azure_paas.py $HOSTADDRESS$ $ARG1$\n\t\t}\n\n\t\tdefine command{\n\t\t\tcommand_name    check_azure_storage\n\t\t\tcommand_line    $USER1$/check_azure_storage.py $HOSTADDRESS$ $ARG1$\n\t\t}\n\n\t6. In the service file setup appropriate parameters. Examples::\n\n\t      check_command       check_azure_sql!-d azuredb -u username -p pwd  -k dbsize -vv!\n\t      check_command       check_azure_ad!-c clientid -s secret -k listusers -vv!\n\t      check_command       check_azure_paas!-p psfile -s storageact -k availmemory -w 3000: -c 2000: -vv!\n\t      check_command       check_azure_storage!-p psfile --table --tx  -k percentsuccess -w 99: -c 95:!\n\n\n\n\nZabbix\n______\n\n\t1. Use these utilities as an external check: https://www.zabbix.com/documentation/1.8/manual/config/items#external_checks\n\n\t2. You may need to increase the timeout for external check in yor zabbix_server.conf::\n\n\t       Timeout=10\n\n\t3. Also in zabbix_server.conf, uncomment the ExternalScripts location, if commented::\n\n\t   \tExternalScripts=/etc/zabbix/externalscripts\n\n\t4. Link the utilities to that location. Example::\n\n\t   \tln -s /usr/bin/check_azure_compute.py /etc/zabbix/externalscripts\n\n \t5. Download your .publishsettings file for your Azure account. Something like:\n\t   https://windows.azure.com/download/publishprofile.aspx\n\n\t6. Move you .publishsetttings file to a safe place and protect it. Example::\n\n\t   \tmv azure.publishsettings /etc/zabbix\n\t   \tchmod 640 /etc/zabbix/azure.publishsettings\n\t   \tchown root:zabbix /etc/zabbix/azure.publishsettings\n\n\t   Here only root and the zabbix group, which zabbix runs under, is allowed to\n\t   read the file\n\n\t7. Use the zabbix interface to setup the external check. Example::\n\n\t       Item\n\t       External check\n\t       Key:\tcheck_azure_compute.py[-p /etc/zabbix/azure.publishsettings]\n\t       Type:\tCharacter\n\n\t8. Use the zabbix interface to setup the trigger. Example::\n\n\t       Trigger\n\t       Expression:\n\t       {<host/template>:check_azure_compute.py[-p /etc/zabbix/azure.publishsettings].str(All cool)}=0\n\nChangelog\n---------\n\n0.1\n___\nInitial Release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.python.org/pypi/azuremonitor/", "keywords": null, "license": "Apache License, Version 2.0", "maintainer": null, "maintainer_email": null, "name": "azuremonitor", "package_url": "https://pypi.org/project/azuremonitor/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/azuremonitor/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://pypi.python.org/pypi/azuremonitor/"}, "release_url": "https://pypi.org/project/azuremonitor/0.1/", "requires_dist": null, "requires_python": null, "summary": "Windows Azure Monitor", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<blockquote>\nWindows Azure Monitor includes utilities to monitor different aspects of Windows\nAzure. These utilities are designed to be used with Nagios and Zabbix, but could\nalso be used in other creative ways.</blockquote>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<blockquote>\nApache License, Version 2.0\nSee COPYING</blockquote>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<blockquote>\n<p>Two ways to install:</p>\n<ol>\n<li>Download and extract the source package. Run \u2018python setup.py install\u2019 See\n<a href=\"http://docs.python.org/2.7/install/index.html\" rel=\"nofollow\">http://docs.python.org/2.7/install/index.html</a> for additional information</li>\n<li>Install using pip, \u2018pip install azuremonitor\u2019 Some distributions call pip\npip-python.</li>\n</ol>\n</blockquote>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<blockquote>\n<ul>\n<li>Python 2.6 or 2.7</li>\n<li>azure - Window Azure sdk for Python</li>\n<li>argparse - For Python 2.6</li>\n<li>OpenSSL - pyOpenSSL</li>\n<li>pyodbc - Connect to SQL Azure</li>\n<li>FreeTDS - Used by ODBC to connect to SQL Azure</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"setup\">\n<h2>Setup</h2>\n<div id=\"nagios\">\n<h3>Nagios</h3>\n<blockquote>\n<ol>\n<li><p>Create symlinks from your Nagios plugin directory to the Azure monitor utilities.\nExample:</p>\n<pre>ln -s /usr/bin/check_azure_compute.py /usr/lib64/nagios/plugins\nln -s /usr/bin/check_azure_ad.py /usr/lib64/nagios/plugins\nln -s /usr/bin/check_azure_sql.py /usr/lib64/nagios/plugins\nln -s /usr/bin/check_azure_storage.py /usr/lib64/nagios/plugins\nln -s /usr/bin/check_azure_paas.py /usr/lib64/nagios/plugins\n</pre>\n</li>\n<li><p>Download your .publishsettings file for your Azure account. Something like:\n<a href=\"https://windows.azure.com/download/publishprofile.aspx\" rel=\"nofollow\">https://windows.azure.com/download/publishprofile.aspx</a></p>\n</li>\n<li><p>Move your .publishsetttings file to a safe place and protect it. Example:</p>\n<pre>mv azure.publishsettings /etc/nagios/private\nchmod 640 /etc/nagios/private/azure.publishsettings\nchown root:nagios /etc/nagios/private/azure.publishsettings\n</pre>\n<p>Here only root and the nagios group, which nagios runs under, is allowed to\nread the file</p>\n</li>\n<li><p>Optionally set a variable in your resource.cfg (usually /etc/nagios/private/resource.cfg)\nTo point to your publishsettings file</p>\n</li>\n<li><p>Setup a command in a config file as usual for nagios:</p>\n<pre>define command{\n        command_name    check_azure_compute\n        command_line    $USER1$/check_azure_compute.py $HOSTADDRESS$ -p $PSFILE$\n}\ndefine command{\n        command_name    check_azure_sql\n        command_line    $USER1$/check_azure_sql.py $HOSTADDRESS$ $ARG1$\n}\n\ndefine command{\n        command_name    check_azure_ad\n        command_line    $USER1$/check_azure_ad.py $HOSTADDRESS$ $ARG1$\n}\n\ndefine command{\n        command_name    check_azure_paas\n        command_line    $USER1$/check_azure_paas.py $HOSTADDRESS$ $ARG1$\n}\n\ndefine command{\n        command_name    check_azure_storage\n        command_line    $USER1$/check_azure_storage.py $HOSTADDRESS$ $ARG1$\n}\n</pre>\n</li>\n<li><p>In the service file setup appropriate parameters. Examples:</p>\n<pre>check_command       check_azure_sql!-d azuredb -u username -p pwd  -k dbsize -vv!\ncheck_command       check_azure_ad!-c clientid -s secret -k listusers -vv!\ncheck_command       check_azure_paas!-p psfile -s storageact -k availmemory -w 3000: -c 2000: -vv!\ncheck_command       check_azure_storage!-p psfile --table --tx  -k percentsuccess -w 99: -c 95:!\n</pre>\n</li>\n</ol>\n</blockquote>\n</div>\n<div id=\"zabbix\">\n<h3>Zabbix</h3>\n<blockquote>\n<ol>\n<li><p>Use these utilities as an external check: <a href=\"https://www.zabbix.com/documentation/1.8/manual/config/items#external_checks\" rel=\"nofollow\">https://www.zabbix.com/documentation/1.8/manual/config/items#external_checks</a></p>\n</li>\n<li><p>You may need to increase the timeout for external check in yor zabbix_server.conf:</p>\n<pre>Timeout=10\n</pre>\n</li>\n<li><p>Also in zabbix_server.conf, uncomment the ExternalScripts location, if commented:</p>\n<pre>ExternalScripts=/etc/zabbix/externalscripts\n</pre>\n</li>\n<li><p>Link the utilities to that location. Example:</p>\n<pre>ln -s /usr/bin/check_azure_compute.py /etc/zabbix/externalscripts\n</pre>\n</li>\n<li><p>Download your .publishsettings file for your Azure account. Something like:\n<a href=\"https://windows.azure.com/download/publishprofile.aspx\" rel=\"nofollow\">https://windows.azure.com/download/publishprofile.aspx</a></p>\n</li>\n<li><p>Move you .publishsetttings file to a safe place and protect it. Example:</p>\n<pre>mv azure.publishsettings /etc/zabbix\nchmod 640 /etc/zabbix/azure.publishsettings\nchown root:zabbix /etc/zabbix/azure.publishsettings\n</pre>\n<p>Here only root and the zabbix group, which zabbix runs under, is allowed to\nread the file</p>\n</li>\n<li><p>Use the zabbix interface to setup the external check. Example:</p>\n<pre>Item\nExternal check\nKey:     check_azure_compute.py[-p /etc/zabbix/azure.publishsettings]\nType:    Character\n</pre>\n</li>\n<li><p>Use the zabbix interface to setup the trigger. Example:</p>\n<pre>Trigger\nExpression:\n{&lt;host/template&gt;:check_azure_compute.py[-p /etc/zabbix/azure.publishsettings].str(All cool)}=0\n</pre>\n</li>\n</ol>\n</blockquote>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1</span></h2>\n<p>Initial Release.</p>\n</div>\n\n          </div>"}, "last_serial": 955639, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "35e91659afa77fd5743f319e355b482c", "sha256": "ba9713f5753d28ed452e9502a55e03aceb9b511dc3bbb201254bca8b383f74a9"}, "downloads": -1, "filename": "azuremonitor-0.1.tar.gz", "has_sig": false, "md5_digest": "35e91659afa77fd5743f319e355b482c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22568, "upload_time": "2013-12-28T00:27:47", "upload_time_iso_8601": "2013-12-28T00:27:47.435508Z", "url": "https://files.pythonhosted.org/packages/62/b5/dfe9150ef88c4fe20f5571500776b50ee2559bdad5636a6bd53e48d17087/azuremonitor-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "35e91659afa77fd5743f319e355b482c", "sha256": "ba9713f5753d28ed452e9502a55e03aceb9b511dc3bbb201254bca8b383f74a9"}, "downloads": -1, "filename": "azuremonitor-0.1.tar.gz", "has_sig": false, "md5_digest": "35e91659afa77fd5743f319e355b482c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22568, "upload_time": "2013-12-28T00:27:47", "upload_time_iso_8601": "2013-12-28T00:27:47.435508Z", "url": "https://files.pythonhosted.org/packages/62/b5/dfe9150ef88c4fe20f5571500776b50ee2559bdad5636a6bd53e48d17087/azuremonitor-0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:14 2020"}