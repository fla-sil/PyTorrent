{"info": {"author": "Les Smithson", "author_email": "lsmithso@hare.demon.co.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: End Users/Desktop", "Topic :: Adaptive Technologies", "Topic :: Communications :: Internet Phone", "Topic :: Communications :: Telephony"], "description": "# skcmd.py0.0.6  - A command line interface to Skype\n##Introduction\n\nskcmd.py is a command line interface to Skype. It is implemented as a\nclient/server pair. It has no GUI components at all and is designed\nfor ease of use by the VI/blind. It offers a reduced set of\nfunctionality, keeping the CLI simple and avoiding bloat.\n\nThe server logs Skype status messages to stdout, and executes Skype\ncommands on behalf of the client. In particular it logs incomming calls, friend  status changes and authz requests.\n\nThe client is a command line program that sends Skype requests to the\nserver for execution .  It is asynchronous and does not block on\noutgoing/incoming/ calls etc.\n\nskcnd.py depends on a running Skype desktop, and the skype4py\npackage. This in turn depends on the availability of the Skype Desktop\nAPI.  See the note below about the likely demise of this interface and\nthe apps that depend on it.\n\n\n\n## Install\n\nskcmd.py will only work with Python 2.x and will not work with Python\n3.  It has been tested on Vinux 4.0, but should work on any modern\nLinux distro. Orca and a TTS are not a requirement, but are of course\nneeded if you're VI/blind.\n\n\nYou may need to apt-get install some prerequisites:\n\n```\nsudo apt-get install python-dev\nsudo apt-get install python-gobject\n\n  ```\n\n\nInstall skcmd:\n\nThe simplest way is to install from the Python Cheeseshop:\n\n    sudo easy_install skcmd\n\n \n\nAlternatively install directly from the github repo:\n\n```\n  git clone http://github.com:/lsmithso/skcmd.git\n  cd skcmd\n  sudo python setup.py install\n```\n\nThis should automatically install  Python package dependancies, including skype4py.\n\n\n## Run\n\n### Starting\n\nStart the Skype desktop program as normal and sign in\n\nOpen a terminal window and startt the skcmd server:\n\n skcmd.py s\n\nThe Skype desktop will prompt for an authorization of this program the first time it is run. I needed sighted help for this step. \n\nWhen the server starts, it logs who you are signed in as, then a list\nof all your contacts. It then blocks, waiting for client commands or\nSkype status changes.   \n\n### Client Commands\n\nAll client commands must be run from a separate terminal window.  The\nnormal Skype desktop continues to run, so you will hear the usual\nringing and contact status change sounds.\n\n\n### Voice calls\n\nTo make a call, run the client call command, using the skype handle:\n\n s    kcmd.py call echo123  \n\nAll being well, This should initiate a call to the Skype call test service.  Look for Skype status messages in the server terminal window.\n\n\nInbound calls are logged by the server. To answer  a call run:\n\n      skcmd.py answer\n\n### Chatting\n\nTo send a chat message:\n\n     skcmd.py chat handle [chat message to send]\n\nSends its arguments as a chat message to the Skype user with\nhandle. If no message argument is given, then stdin is read and sent\nuntil an empty line or EOF is input. The later is useful for sending\nspecial shell characters without quoting.\n\n### Voicemails\n\nVoicemails can be listed, played and deleted. You must enable your\nvoicemail inbox using the Skype GUI.\n\nTo list the contents of your voicemail inbox:\n\n    skcmd.py vms\n\nThis lists each voicemail message as as an index number, the display\nname/handle of the caller, call date/time/ duration. and voicemail\nstatus. The index is a small integer used to refer to the voicemail in\nother vm commands.\n\nPlay a voicemail with:\n\n    skcmd.py vmplay idx\n\nWhere idx the index number of the message displayed by the vms command.\n\nStop the currently playing voicemail with:\n\n    skcmd.py vmstop\n\nDelete a voicemail with:\n\n    skcmd.py vmdelete idx\n\nThe voicemail list is re-indexed after each message is deleted.\n\n### Command List\n\nThe complete list of client commands are:\n\n\nauthz handle 0|1 - Authorize   the contact with handle.\n\ncontacts - Prints a list of all your contacts in the format  handle/display name/full name/status.\n\nauto_answer 0|1 - Turns off/on autoanswer. Default is off.\n\nhangup - Finish the current call.\n\nexit - Terminate the  skcmd server.\n\nanswer - Answer the current inbound call.\n\ncall handle - Place an outbound call to the user with handle. Handle\nis the Skype id printed in the 1st column of the 'contacts' command.\n\ntone tones - send DTMF tones, ie for POTS conferencing.\n\nadd_contact  - Sends an authz requests to handle\n\nsearch = Search for a Skype user\n\nchat - chat to to the user with handle.\n\nstatus  Set your status to DND, INVISIBLE  etc\n\n   mood - set your mood message\n\n  vms - List all voicemails,.\n\n  vmplay idx - Play the voicemail with index number idx\n\n  vmstop - Stop the currently playing voicemail\n\n  vmdelete idx - Delete the voicemail with id idx\n\n  me  - print your skype id/screen name and your current balance.\n\nhelp - A breif help message.\n\n\n## Skype status changes\n\nThe server logs some Skype status messages to stdout, and  signals them on D-Bus.\n\nStatus logged includes inbound/outbound call progress (in particular\ninbound call ringing), contact authorization requests, contact status\nchanges (online, away etc) and chat messages.\n\nThese are plain text messages so a TTS should be able to announce them.\n\nskcmd also signal D-Bus with these status messages. A simple skcmd.el is included that listens for this signal and announces it to emacspeak. \n\n\n\n## Disclaimer\n\nThis software comes with absolutely no warranty whatsoever, and comes\nAS-IS.  Do what you want with itt. I take no responsibility whatsoever\nfor it.\n\n# The Demise of the Skype Desktop API\n\nskcmd.py and all other Skype apps depend on the availability of the\nSkype Desktop API. This is a rich programming interface that makes\njust about all Skype desktop functionality available to apps. It\nallows inventive and powerful 3rd party telephony apps to be built\naround Skype for free. It is a mature and well documented part of the\nSkype ecosystem.\n\nIn July 2013 Microsoft announced that they were killing off this API\nin favour of a new SkypeURI interface.  This interface has vastly\nreduced functionality, to the point where its almost useless.\nSkypeURI is unusable for skcmd, and I suspect for a lot of other apps\ntoo.\n\nThe announcement says that the Desktop API will begin to stop working\nin September 2013, and that apps should start using SkypeURI right\naway.\n\nSkypeURI is not currently available for Linux, so if the Desktop API\ndoes stop working, skcmd.py is sunk. Even when it does become\navailable, it is of no use at all, so skcmd.py is still sunk.\n\nAs of September 3 2013, skcmd.py was still fully functioning, so enjoy\nit while you can!\n\n\n\n\n\n# Significant Changes\n## 0.0.5\nAdd tone command.\nAdd  voicemail list, play, stop , delete commands\nconcat call and tone args into spaceless string.\nAdd multiline chat\n\n##  0.0.6\nAdd 'me' command", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.github.com/lsmithso/skcmd", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "skcmd", "package_url": "https://pypi.org/project/skcmd/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/skcmd/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.github.com/lsmithso/skcmd"}, "release_url": "https://pypi.org/project/skcmd/0.0.7/", "requires_dist": null, "requires_python": null, "summary": "Command line interface to Skype", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            # skcmd.py0.0.6  - A command line interface to Skype<br>##Introduction<br><br>skcmd.py is a command line interface to Skype. It is implemented as a<br>client/server pair. It has no GUI components at all and is designed<br>for ease of use by the VI/blind. It offers a reduced set of<br>functionality, keeping the CLI simple and avoiding bloat.<br><br>The server logs Skype status messages to stdout, and executes Skype<br>commands on behalf of the client. In particular it logs incomming calls, friend  status changes and authz requests.<br><br>The client is a command line program that sends Skype requests to the<br>server for execution .  It is asynchronous and does not block on<br>outgoing/incoming/ calls etc.<br><br>skcnd.py depends on a running Skype desktop, and the skype4py<br>package. This in turn depends on the availability of the Skype Desktop<br>API.  See the note below about the likely demise of this interface and<br>the apps that depend on it.<br><br><br><br>## Install<br><br>skcmd.py will only work with Python 2.x and will not work with Python<br>3.  It has been tested on Vinux 4.0, but should work on any modern<br>Linux distro. Orca and a TTS are not a requirement, but are of course<br>needed if you're VI/blind.<br><br><br>You may need to apt-get install some prerequisites:<br><br>```<br>sudo apt-get install python-dev<br>sudo apt-get install python-gobject<br><br>  ```<br><br><br>Install skcmd:<br><br>The simplest way is to install from the Python Cheeseshop:<br><br>    sudo easy_install skcmd<br><br> <br><br>Alternatively install directly from the github repo:<br><br>```<br>  git clone http://github.com:/lsmithso/skcmd.git<br>  cd skcmd<br>  sudo python setup.py install<br>```<br><br>This should automatically install  Python package dependancies, including skype4py.<br><br><br>## Run<br><br>### Starting<br><br>Start the Skype desktop program as normal and sign in<br><br>Open a terminal window and startt the skcmd server:<br><br> skcmd.py s<br><br>The Skype desktop will prompt for an authorization of this program the first time it is run. I needed sighted help for this step. <br><br>When the server starts, it logs who you are signed in as, then a list<br>of all your contacts. It then blocks, waiting for client commands or<br>Skype status changes.   <br><br>### Client Commands<br><br>All client commands must be run from a separate terminal window.  The<br>normal Skype desktop continues to run, so you will hear the usual<br>ringing and contact status change sounds.<br><br><br>### Voice calls<br><br>To make a call, run the client call command, using the skype handle:<br><br> s    kcmd.py call echo123  <br><br>All being well, This should initiate a call to the Skype call test service.  Look for Skype status messages in the server terminal window.<br><br><br>Inbound calls are logged by the server. To answer  a call run:<br><br>      skcmd.py answer<br><br>### Chatting<br><br>To send a chat message:<br><br>     skcmd.py chat handle [chat message to send]<br><br>Sends its arguments as a chat message to the Skype user with<br>handle. If no message argument is given, then stdin is read and sent<br>until an empty line or EOF is input. The later is useful for sending<br>special shell characters without quoting.<br><br>### Voicemails<br><br>Voicemails can be listed, played and deleted. You must enable your<br>voicemail inbox using the Skype GUI.<br><br>To list the contents of your voicemail inbox:<br><br>    skcmd.py vms<br><br>This lists each voicemail message as as an index number, the display<br>name/handle of the caller, call date/time/ duration. and voicemail<br>status. The index is a small integer used to refer to the voicemail in<br>other vm commands.<br><br>Play a voicemail with:<br><br>    skcmd.py vmplay idx<br><br>Where idx the index number of the message displayed by the vms command.<br><br>Stop the currently playing voicemail with:<br><br>    skcmd.py vmstop<br><br>Delete a voicemail with:<br><br>    skcmd.py vmdelete idx<br><br>The voicemail list is re-indexed after each message is deleted.<br><br>### Command List<br><br>The complete list of client commands are:<br><br><br>authz handle 0|1 - Authorize   the contact with handle.<br><br>contacts - Prints a list of all your contacts in the format  handle/display name/full name/status.<br><br>auto_answer 0|1 - Turns off/on autoanswer. Default is off.<br><br>hangup - Finish the current call.<br><br>exit - Terminate the  skcmd server.<br><br>answer - Answer the current inbound call.<br><br>call handle - Place an outbound call to the user with handle. Handle<br>is the Skype id printed in the 1st column of the 'contacts' command.<br><br>tone tones - send DTMF tones, ie for POTS conferencing.<br><br>add_contact  - Sends an authz requests to handle<br><br>search = Search for a Skype user<br><br>chat - chat to to the user with handle.<br><br>status  Set your status to DND, INVISIBLE  etc<br><br>   mood - set your mood message<br><br>  vms - List all voicemails,.<br><br>  vmplay idx - Play the voicemail with index number idx<br><br>  vmstop - Stop the currently playing voicemail<br><br>  vmdelete idx - Delete the voicemail with id idx<br><br>  me  - print your skype id/screen name and your current balance.<br><br>help - A breif help message.<br><br><br>## Skype status changes<br><br>The server logs some Skype status messages to stdout, and  signals them on D-Bus.<br><br>Status logged includes inbound/outbound call progress (in particular<br>inbound call ringing), contact authorization requests, contact status<br>changes (online, away etc) and chat messages.<br><br>These are plain text messages so a TTS should be able to announce them.<br><br>skcmd also signal D-Bus with these status messages. A simple skcmd.el is included that listens for this signal and announces it to emacspeak. <br><br><br><br>## Disclaimer<br><br>This software comes with absolutely no warranty whatsoever, and comes<br>AS-IS.  Do what you want with itt. I take no responsibility whatsoever<br>for it.<br><br># The Demise of the Skype Desktop API<br><br>skcmd.py and all other Skype apps depend on the availability of the<br>Skype Desktop API. This is a rich programming interface that makes<br>just about all Skype desktop functionality available to apps. It<br>allows inventive and powerful 3rd party telephony apps to be built<br>around Skype for free. It is a mature and well documented part of the<br>Skype ecosystem.<br><br>In July 2013 Microsoft announced that they were killing off this API<br>in favour of a new SkypeURI interface.  This interface has vastly<br>reduced functionality, to the point where its almost useless.<br>SkypeURI is unusable for skcmd, and I suspect for a lot of other apps<br>too.<br><br>The announcement says that the Desktop API will begin to stop working<br>in September 2013, and that apps should start using SkypeURI right<br>away.<br><br>SkypeURI is not currently available for Linux, so if the Desktop API<br>does stop working, skcmd.py is sunk. Even when it does become<br>available, it is of no use at all, so skcmd.py is still sunk.<br><br>As of September 3 2013, skcmd.py was still fully functioning, so enjoy<br>it while you can!<br><br><br><br><br><br># Significant Changes<br>## 0.0.5<br>Add tone command.<br>Add  voicemail list, play, stop , delete commands<br>concat call and tone args into spaceless string.<br>Add multiline chat<br><br>##  0.0.6<br>Add 'me' command\n          </div>"}, "last_serial": 965438, "releases": {"0.0.5": [{"comment_text": "", "digests": {"md5": "9eb454e97376cbe07c5fafc4c7c4dd3c", "sha256": "8615682bb6e5fafd3a7313f21fc04b17fb1651408acae79507257bab0cbb41c1"}, "downloads": -1, "filename": "skcmd-0.0.5.tar.gz", "has_sig": false, "md5_digest": "9eb454e97376cbe07c5fafc4c7c4dd3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6919, "upload_time": "2013-09-03T08:45:52", "upload_time_iso_8601": "2013-09-03T08:45:52.728697Z", "url": "https://files.pythonhosted.org/packages/d8/63/f64660a3460644241f680161e5831b6425ebae19da4aaeb3204875ebbf3e/skcmd-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "92266d6a73416a528f1ea6fabb15b627", "sha256": "33502130f61c6958b13af57eee50dfa79476ebf5a0e9c976cc59437d62ccff34"}, "downloads": -1, "filename": "skcmd-0.0.6.tar.gz", "has_sig": false, "md5_digest": "92266d6a73416a528f1ea6fabb15b627", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7436, "upload_time": "2014-01-10T13:00:00", "upload_time_iso_8601": "2014-01-10T13:00:00.781961Z", "url": "https://files.pythonhosted.org/packages/91/2d/952793c6074577e20148850258219523679eeece3a8079c6fc0d9fe71841/skcmd-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "23a8ad0dbc723f45d9791c9dafae472b", "sha256": "11c5d418b3d1e4fda20d0542eb468cd6152f416282eaea70407e0b7e80292cb4"}, "downloads": -1, "filename": "skcmd-0.0.7.tar.gz", "has_sig": false, "md5_digest": "23a8ad0dbc723f45d9791c9dafae472b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8008, "upload_time": "2014-01-10T13:56:58", "upload_time_iso_8601": "2014-01-10T13:56:58.334531Z", "url": "https://files.pythonhosted.org/packages/ea/6d/d2541f0bf5574cca57e2addd48cbcb6197875d67e1e08f941cf893d15b84/skcmd-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "23a8ad0dbc723f45d9791c9dafae472b", "sha256": "11c5d418b3d1e4fda20d0542eb468cd6152f416282eaea70407e0b7e80292cb4"}, "downloads": -1, "filename": "skcmd-0.0.7.tar.gz", "has_sig": false, "md5_digest": "23a8ad0dbc723f45d9791c9dafae472b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8008, "upload_time": "2014-01-10T13:56:58", "upload_time_iso_8601": "2014-01-10T13:56:58.334531Z", "url": "https://files.pythonhosted.org/packages/ea/6d/d2541f0bf5574cca57e2addd48cbcb6197875d67e1e08f941cf893d15b84/skcmd-0.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:10 2020"}