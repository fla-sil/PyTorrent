{"info": {"author": "Anderson Frailey", "author_email": "andersonfrailey@gmail.org", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# Blackjack\n\n`py21` is a blackjack simulator. Users can run the simulation using the\ndefault rules or specify their own. Additionally, users can test their own\nplaying and betting strategies.\n\n## Installation\n\nRight now `py21` can be installed from source or PyPI.\n\nTo download from source, clone or download this\nrepository, then navigate to the directory you cloned to and run\n`pip install -e .`.\n\nTo download from PyPI, use `pip install py21`\n\n## Using `py21`\n\nTo run the simulator, the user must initiate one instance of the `Game` class\nand at least one instance of the `Player` class.\n\nThe `Player` class requires one input, `bankroll`, and has three optional inputs:\n`strategy_func`, `wager_func`, and `insurance_func`.\n\n`bankroll` should be an numerical value indicating the bankroll\nthe player will be starting with.\n\n`strategy_func` should be a function that will\nreturn what action the player will take in a given situation. This function\ncan take as inputs a number of variables containing information about the game\nsuch as the player's hand, dealer's up card, and the count. It must return one\nof the following: `HIT`, `STAND`, `SPLIT`, `DOUBLE`.\n\n`wager_func` should be a function that will determine how much the player will\nwager in a hand. Like the function used for `strategy_func` it can take as\narguments variables on the status of the game. It must return a number that is\nwithin the minimum and maximum bets allowed, and no more than the player's\nbankroll.\n\n`insurance_func` should be a function that will determine if a player takes\ninsurance when the dealer is showing an ace. It must return `True` or `False`.\n\nThe `Game` class has one required argument and two optional ones. `players`\nis a list of instances of the `Players` class that will be used in the game.\n`rules` can be a dictionary containing changes to the game's default rules to\nrun the simulation under different scenarios. An explanation of how the\ndictionary should be structured is below. Finally, `verbose` is a boolean\nindicator for whether or not you want information printed out as the game is\nplayed.\n\nRunning a simulation can be done in a few lines of code:\n\n```python\nfrom py21 import Game, Player\n\n# initiate Player object\nplayer = Player(100)\n# initiate Game object\ngame = Game([player])\n\n# run simulation 1,000,000 times\ngame.simulate(1000000)\n```\n\n## Updating Game Parameters\n\nTo update a rule in the game, use this dictionary format:\n\n`{param: new_rule}`\n\nFor example, here is how to change the blackjack payout from 3:2 to 6:5:\n\n```python\nfrom py21 import Game, Player\n\nrules = {\"blackjack_payout\": 1.2}\n\nplayer = Player(100)\ngame = Game([player], rules)\n\ngame.simulate(1000000)\n```\n\nA list of the game parameters you can update can be found [here](https://github.com/andersonfrailey/blackjack/blob/master/docs/default_rules.md).\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/andersonfrailey/blackjack", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "py21", "package_url": "https://pypi.org/project/py21/", "platform": "", "project_url": "https://pypi.org/project/py21/", "project_urls": {"Homepage": "https://github.com/andersonfrailey/blackjack"}, "release_url": "https://pypi.org/project/py21/1.4.0/", "requires_dist": ["tqdm", "paramtools", "pandas"], "requires_python": "", "summary": "Library for running blackjack simulations", "version": "1.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Blackjack</h1>\n<p><code>py21</code> is a blackjack simulator. Users can run the simulation using the\ndefault rules or specify their own. Additionally, users can test their own\nplaying and betting strategies.</p>\n<h2>Installation</h2>\n<p>Right now <code>py21</code> can be installed from source or PyPI.</p>\n<p>To download from source, clone or download this\nrepository, then navigate to the directory you cloned to and run\n<code>pip install -e .</code>.</p>\n<p>To download from PyPI, use <code>pip install py21</code></p>\n<h2>Using <code>py21</code></h2>\n<p>To run the simulator, the user must initiate one instance of the <code>Game</code> class\nand at least one instance of the <code>Player</code> class.</p>\n<p>The <code>Player</code> class requires one input, <code>bankroll</code>, and has three optional inputs:\n<code>strategy_func</code>, <code>wager_func</code>, and <code>insurance_func</code>.</p>\n<p><code>bankroll</code> should be an numerical value indicating the bankroll\nthe player will be starting with.</p>\n<p><code>strategy_func</code> should be a function that will\nreturn what action the player will take in a given situation. This function\ncan take as inputs a number of variables containing information about the game\nsuch as the player's hand, dealer's up card, and the count. It must return one\nof the following: <code>HIT</code>, <code>STAND</code>, <code>SPLIT</code>, <code>DOUBLE</code>.</p>\n<p><code>wager_func</code> should be a function that will determine how much the player will\nwager in a hand. Like the function used for <code>strategy_func</code> it can take as\narguments variables on the status of the game. It must return a number that is\nwithin the minimum and maximum bets allowed, and no more than the player's\nbankroll.</p>\n<p><code>insurance_func</code> should be a function that will determine if a player takes\ninsurance when the dealer is showing an ace. It must return <code>True</code> or <code>False</code>.</p>\n<p>The <code>Game</code> class has one required argument and two optional ones. <code>players</code>\nis a list of instances of the <code>Players</code> class that will be used in the game.\n<code>rules</code> can be a dictionary containing changes to the game's default rules to\nrun the simulation under different scenarios. An explanation of how the\ndictionary should be structured is below. Finally, <code>verbose</code> is a boolean\nindicator for whether or not you want information printed out as the game is\nplayed.</p>\n<p>Running a simulation can be done in a few lines of code:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">py21</span> <span class=\"kn\">import</span> <span class=\"n\">Game</span><span class=\"p\">,</span> <span class=\"n\">Player</span>\n\n<span class=\"c1\"># initiate Player object</span>\n<span class=\"n\">player</span> <span class=\"o\">=</span> <span class=\"n\">Player</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"c1\"># initiate Game object</span>\n<span class=\"n\">game</span> <span class=\"o\">=</span> <span class=\"n\">Game</span><span class=\"p\">([</span><span class=\"n\">player</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># run simulation 1,000,000 times</span>\n<span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">simulate</span><span class=\"p\">(</span><span class=\"mi\">1000000</span><span class=\"p\">)</span>\n</pre>\n<h2>Updating Game Parameters</h2>\n<p>To update a rule in the game, use this dictionary format:</p>\n<p><code>{param: new_rule}</code></p>\n<p>For example, here is how to change the blackjack payout from 3:2 to 6:5:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">py21</span> <span class=\"kn\">import</span> <span class=\"n\">Game</span><span class=\"p\">,</span> <span class=\"n\">Player</span>\n\n<span class=\"n\">rules</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"blackjack_payout\"</span><span class=\"p\">:</span> <span class=\"mf\">1.2</span><span class=\"p\">}</span>\n\n<span class=\"n\">player</span> <span class=\"o\">=</span> <span class=\"n\">Player</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"n\">game</span> <span class=\"o\">=</span> <span class=\"n\">Game</span><span class=\"p\">([</span><span class=\"n\">player</span><span class=\"p\">],</span> <span class=\"n\">rules</span><span class=\"p\">)</span>\n\n<span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">simulate</span><span class=\"p\">(</span><span class=\"mi\">1000000</span><span class=\"p\">)</span>\n</pre>\n<p>A list of the game parameters you can update can be found <a href=\"https://github.com/andersonfrailey/blackjack/blob/master/docs/default_rules.md\" rel=\"nofollow\">here</a>.</p>\n\n          </div>"}, "last_serial": 7189821, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "eae2ddd16520e77643af2b8c065ab18b", "sha256": "660584433dbf6689d465e8a4049a1f2f76dfefad1400ea0f6dfbf08f5695210e"}, "downloads": -1, "filename": "py21-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "eae2ddd16520e77643af2b8c065ab18b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17134, "upload_time": "2019-05-12T18:18:04", "upload_time_iso_8601": "2019-05-12T18:18:04.920694Z", "url": "https://files.pythonhosted.org/packages/1b/24/704266adde1704dbfe25628cb879f8924bb9de3ffe366250803f7f7742c9/py21-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6e65847f655593796bd2d96834b2432", "sha256": "c008a4233982fb0178e60707ffa9c0705c4525db2a1d2ee33d09c295e147925e"}, "downloads": -1, "filename": "py21-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c6e65847f655593796bd2d96834b2432", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14536, "upload_time": "2019-05-12T18:18:07", "upload_time_iso_8601": "2019-05-12T18:18:07.751820Z", "url": "https://files.pythonhosted.org/packages/72/bd/f78b4e03b80e958ba15c3d8b99f0eb13df9b87e29d07db99060e6926c10b/py21-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "79ed26d52dc4b3623595bcfaefd85a45", "sha256": "5140f0133e9d2e0aa8bd19398d5f3c673211e97c4c78acdee5264e0d6e3e045b"}, "downloads": -1, "filename": "py21-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "79ed26d52dc4b3623595bcfaefd85a45", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17979, "upload_time": "2019-06-16T21:30:38", "upload_time_iso_8601": "2019-06-16T21:30:38.600339Z", "url": "https://files.pythonhosted.org/packages/c0/db/8a3d15503c7643236053d97a2947514e3469b29f9935ee5a98b71d401f76/py21-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f710491c78e12b079d792ef009a70a5", "sha256": "dba3a2c251d1bd4b633aa0afdf86c7dfeca9046dd92f9dcbd0733e4d7742e7e0"}, "downloads": -1, "filename": "py21-1.1.0.tar.gz", "has_sig": false, "md5_digest": "4f710491c78e12b079d792ef009a70a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15653, "upload_time": "2019-06-16T21:30:41", "upload_time_iso_8601": "2019-06-16T21:30:41.168136Z", "url": "https://files.pythonhosted.org/packages/71/c1/8964001b4e57bb9f363b4fb428f08693635b88bc1dc3897f461f64443c99/py21-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "ad212ad02fc6e8dafc071e7d5a6f3b4c", "sha256": "e71306dde14799357534cf5d3a1aee5e8746cae96d22a583bae3f4cd5a77680b"}, "downloads": -1, "filename": "py21-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ad212ad02fc6e8dafc071e7d5a6f3b4c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18889, "upload_time": "2020-02-22T04:32:01", "upload_time_iso_8601": "2020-02-22T04:32:01.380701Z", "url": "https://files.pythonhosted.org/packages/20/3b/9509ec0b5f88329e6755f09026363f135bd61837a4b923b75d67ec214fac/py21-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f94967255d2db6f6be4fbe6987826123", "sha256": "2af5625c260225b35275f87ad56aa93678fa503d3c4b5990c583a379f74b9d82"}, "downloads": -1, "filename": "py21-1.2.0.tar.gz", "has_sig": false, "md5_digest": "f94967255d2db6f6be4fbe6987826123", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16740, "upload_time": "2020-02-22T04:32:02", "upload_time_iso_8601": "2020-02-22T04:32:02.937629Z", "url": "https://files.pythonhosted.org/packages/c1/1b/ee62ac445996db3da6469b26576084e63dc087c7fe6d5d4439094501830c/py21-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "c4966f83ed459c957b3c2e981ab3f775", "sha256": "22d19724d5a8993887ba72c6aa8ea3ba280746bd2d00d76cea29bb19915599d9"}, "downloads": -1, "filename": "py21-1.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c4966f83ed459c957b3c2e981ab3f775", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20009, "upload_time": "2020-03-20T00:13:45", "upload_time_iso_8601": "2020-03-20T00:13:45.848812Z", "url": "https://files.pythonhosted.org/packages/02/0a/639c0b937d7d54be8cdcf5dad4300bf7546e788764c3749a0caad2a26158/py21-1.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f398a7fbe197eb7cd6de214152b56c3", "sha256": "f7b9536b7d77ebadddcae18f3198d1f224800a3178e52817fb380f477c634c26"}, "downloads": -1, "filename": "py21-1.3.0.tar.gz", "has_sig": false, "md5_digest": "0f398a7fbe197eb7cd6de214152b56c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17728, "upload_time": "2020-03-20T00:13:48", "upload_time_iso_8601": "2020-03-20T00:13:48.598785Z", "url": "https://files.pythonhosted.org/packages/e5/e6/0293e3a4469fb1fdcc6c48742edf19b5a88d38dad57634b5895bc8223810/py21-1.3.0.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "3b9a3c1337ab6b4977cb7770f7174a1a", "sha256": "29819769796aa718c3523a07fbc6b9c7981e8a97c2bd1ec7dced04329e51d6f9"}, "downloads": -1, "filename": "py21-1.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3b9a3c1337ab6b4977cb7770f7174a1a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19188, "upload_time": "2020-05-07T16:14:15", "upload_time_iso_8601": "2020-05-07T16:14:15.478072Z", "url": "https://files.pythonhosted.org/packages/e7/6a/55bea319a97926e6ec1ef28bb90ccd747c521aaea0fa65743cf44fe7f4af/py21-1.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a405a149eedd43e81e85adf2e213fea", "sha256": "02a050026a9a2fb40da2c8dbcb00c50d61dc0940c3c6c0a70c832ffe235753b3"}, "downloads": -1, "filename": "py21-1.4.0.tar.gz", "has_sig": false, "md5_digest": "2a405a149eedd43e81e85adf2e213fea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16260, "upload_time": "2020-05-07T16:14:19", "upload_time_iso_8601": "2020-05-07T16:14:19.308377Z", "url": "https://files.pythonhosted.org/packages/b8/25/0a05a6d8309a107dbed8ab6c4810f5efd770d7a1deb90009e61aef1bd244/py21-1.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3b9a3c1337ab6b4977cb7770f7174a1a", "sha256": "29819769796aa718c3523a07fbc6b9c7981e8a97c2bd1ec7dced04329e51d6f9"}, "downloads": -1, "filename": "py21-1.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3b9a3c1337ab6b4977cb7770f7174a1a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19188, "upload_time": "2020-05-07T16:14:15", "upload_time_iso_8601": "2020-05-07T16:14:15.478072Z", "url": "https://files.pythonhosted.org/packages/e7/6a/55bea319a97926e6ec1ef28bb90ccd747c521aaea0fa65743cf44fe7f4af/py21-1.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a405a149eedd43e81e85adf2e213fea", "sha256": "02a050026a9a2fb40da2c8dbcb00c50d61dc0940c3c6c0a70c832ffe235753b3"}, "downloads": -1, "filename": "py21-1.4.0.tar.gz", "has_sig": false, "md5_digest": "2a405a149eedd43e81e85adf2e213fea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16260, "upload_time": "2020-05-07T16:14:19", "upload_time_iso_8601": "2020-05-07T16:14:19.308377Z", "url": "https://files.pythonhosted.org/packages/b8/25/0a05a6d8309a107dbed8ab6c4810f5efd770d7a1deb90009e61aef1bd244/py21-1.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:37 2020"}