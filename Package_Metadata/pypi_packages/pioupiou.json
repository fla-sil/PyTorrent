{"info": {"author": "Gu\u00e9na\u00ebl Muller", "author_email": "inkey@inkey-art.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# PiouPiou\n![logo](pioupiou.png)\n\n![pipeline_build_status](https://framagit.org/inkhey/pioupiou/badges/master/pipeline.svg)\n![PyPI - License](https://img.shields.io/pypi/l/pioupiou)\n![PyPI - Status](https://img.shields.io/pypi/status/pioupiou)\n[![PyPI](https://img.shields.io/pypi/v/pioupiou) ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pioupiou) ![PyPI](https://img.shields.io/pypi/dm/pioupiou)](https://pypi.org/project/pioupiou/)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n![mypy](https://img.shields.io/badge/mypy-checked-blueviolet)\n\n\nA generator of avatar optimised to generate or random avatars based on multiple image layers, able to return same image  from a string \"seed\".\nHeavily inspired by [David Revoy](http://www.peppercarrot.com)'s [cat avatar generator](https://framagit.org/Deevad/cat-avatar-generator/) and [MonsterID by Andreas Gohr's](https://www.splitbrain.org/blog/2007-01/20_monsterid_as_gravatar_fallback).\n\nThis generator rely on Pillow library to do image processing.\n\n\n[Demo](https://pioupiou.inkey-art.net/) (running this [web site code](https://github.com/buxx/pioupiouweb))https://github.com/buxx/pioupiouweb\n\n## Install\n\n### From pypi\n\n~~~sh\n$ pip install pioupiou\n~~~\n\n### From source\n\n- clone this repository\n- `pip install -e \".\"`\n\n## Usage\n\nEasy way to use it, is to be based on FolderAvatarTheme. To do this, you should create many .png file of same image, all\nwith transparency. You should allow follow similar naming pattern as for sample example.\n\nTo test it, you can simply use sample in example:\n\nCat avatar [by David Revoy](http://www.peppercarrot.com):\n\n~~~python\nfrom pioupiou import FolderAvatarTheme\ntheme = FolderAvatarTheme(folder_path=\"sample/cat_revoy\", layers_name=[\"body\", \"fur\",\"eyes\",\"mouth\",\"accessorie\"])\navatar = theme.generate_avatar(token=\"just a random string\")\ntheme.save_on_disk(avatar, path=\"/tmp/saved_file.png\")\n~~~\n\nBird avatar [by David Revoy](http://www.peppercarrot.com):\n\n~~~python\nfrom pioupiou import FolderAvatarTheme\ntheme = FolderAvatarTheme(\n    \"sample/bird_revoy\",\n    layers_name=[\"tail\", \"hoop\", \"body\", \"wing\", \"eyes\", \"bec\", \"accessorie\"],\n)\navatar = theme.generate_avatar(token=\"just a random string\")\ntheme.save_on_disk(avatar, path=\"/tmp/saved_file.png\")\n~~~\n\nMonster avatar [by Andreas Gohr's](https://www.splitbrain.org/blog/2007-01/20_monsterid_as_gravatar_fallback):\n\n~~~python\nfrom pioupiou import FolderAvatarTheme\ntheme = FolderAvatarTheme(\n    \"sample/monster_id\",\n    layers_name=[\"legs\", \"hair\", \"arms\", \"body\", \"eyes\", \"mouth\"],\n)\navatar = theme.generate_avatar(token=\"just a random string\")\ntheme.save_on_disk(avatar, path=\"/tmp/saved_file.png\")\n~~~\n\n## Configure Chooser\n\nTo generate avatar, pioupiou provide tools to help us use the algorithm you want.\nDefault behaviour is to rely on `random.Random()`, but pioupiou is made to support any type of chooser.\nTo do this you just need to configure chooser in your `AvatarTheme`:\n\n~~~python\nfrom pioupiou import FolderAvatarTheme\nfrom random import Random\ntheme = FolderAvatarTheme(\n  folder_path=\"sample/cat_revoy\",\n  layers_name=[\"body\", \"fur\",\"eyes\",\"mouth\",\"accessorie\"],\n  chooser=Random() # same as default, don't change anything\n)\n~~~\n\nYou can use any hashlib algorithm you want from `hashlib` as chooser, using `pioupiou.chooser.HashLibChooser`.\nIt will do choice using modulo.\n\n~~~python\nfrom pioupiou import FolderAvatarTheme\nimport hashlib\nfrom pioupiou.chooser import HashLibChooser\ntheme = FolderAvatarTheme(\n  folder_path=\"sample/cat_revoy\",\n  layers_name=[\"body\", \"fur\",\"eyes\",\"mouth\",\"accessorie\"],\n  chooser=HashLibChooser(hashlib.sha256()) # hashlib.sha256() is just an example, hashlib.md5() should also work for example.\n)\n~~~\n\nYou can also implement `pioupiou.chooser.Chooser` and use a custom chooser.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://framagit.org/inkhey/pioupiou", "keywords": "avatar", "license": "", "maintainer": "", "maintainer_email": "", "name": "pioupiou", "package_url": "https://pypi.org/project/pioupiou/", "platform": "", "project_url": "https://pypi.org/project/pioupiou/", "project_urls": {"Homepage": "https://framagit.org/inkhey/pioupiou"}, "release_url": "https://pypi.org/project/pioupiou/0.5.2/", "requires_dist": ["Pillow", "pytest ; extra == 'dev'", "flake8 ; extra == 'dev'", "isort ; extra == 'dev'", "mypy ; extra == 'dev'", "pre-commit ; extra == 'dev'", "black ; extra == 'dev'", "pytest ; extra == 'testing'"], "requires_python": ">= 3.5", "summary": "A generator of avatar optimised to generate or random avatars based on multiple image layers", "version": "0.5.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PiouPiou</h1>\n<p><img alt=\"logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b38c43e577778617f64c187690b012bc4fe9a0d9/70696f7570696f752e706e67\"></p>\n<p><img alt=\"pipeline_build_status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/030ca843d6e5016634bd043f5c1738ac094e7883/68747470733a2f2f6672616d616769742e6f72672f696e6b6865792f70696f7570696f752f6261646765732f6d61737465722f706970656c696e652e737667\">\n<img alt=\"PyPI - License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e42aae6dcce67559c6b59c68a1ee199c4703fc01/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f70696f7570696f75\">\n<img alt=\"PyPI - Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4811cc5296a356a8290628a6c3caf879c96da5c6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f70696f7570696f75\">\n<a href=\"https://pypi.org/project/pioupiou/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6e69f1fe424c97d59f3b8cbe2f3f0731f8a8771f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70696f7570696f75\"> <img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3843a295df10b259385f271ca3674281c995be7e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f70696f7570696f75\"> <img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/83045fcb66c8081d53a7740d19acfeeaebfd1ff8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f70696f7570696f75\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<img alt=\"mypy\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9d81b8fd0eca01253d55c5405c258cadd644ec8c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d7970792d636865636b65642d626c756576696f6c6574\"></p>\n<p>A generator of avatar optimised to generate or random avatars based on multiple image layers, able to return same image  from a string \"seed\".\nHeavily inspired by <a href=\"http://www.peppercarrot.com\" rel=\"nofollow\">David Revoy</a>'s <a href=\"https://framagit.org/Deevad/cat-avatar-generator/\" rel=\"nofollow\">cat avatar generator</a> and <a href=\"https://www.splitbrain.org/blog/2007-01/20_monsterid_as_gravatar_fallback\" rel=\"nofollow\">MonsterID by Andreas Gohr's</a>.</p>\n<p>This generator rely on Pillow library to do image processing.</p>\n<p><a href=\"https://pioupiou.inkey-art.net/\" rel=\"nofollow\">Demo</a> (running this <a href=\"https://github.com/buxx/pioupiouweb\" rel=\"nofollow\">web site code</a>)<a href=\"https://github.com/buxx/pioupiouweb\" rel=\"nofollow\">https://github.com/buxx/pioupiouweb</a></p>\n<h2>Install</h2>\n<h3>From pypi</h3>\n<pre>$ pip install pioupiou\n</pre>\n<h3>From source</h3>\n<ul>\n<li>clone this repository</li>\n<li><code>pip install -e \".\"</code></li>\n</ul>\n<h2>Usage</h2>\n<p>Easy way to use it, is to be based on FolderAvatarTheme. To do this, you should create many .png file of same image, all\nwith transparency. You should allow follow similar naming pattern as for sample example.</p>\n<p>To test it, you can simply use sample in example:</p>\n<p>Cat avatar <a href=\"http://www.peppercarrot.com\" rel=\"nofollow\">by David Revoy</a>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pioupiou</span> <span class=\"kn\">import</span> <span class=\"n\">FolderAvatarTheme</span>\n<span class=\"n\">theme</span> <span class=\"o\">=</span> <span class=\"n\">FolderAvatarTheme</span><span class=\"p\">(</span><span class=\"n\">folder_path</span><span class=\"o\">=</span><span class=\"s2\">\"sample/cat_revoy\"</span><span class=\"p\">,</span> <span class=\"n\">layers_name</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"body\"</span><span class=\"p\">,</span> <span class=\"s2\">\"fur\"</span><span class=\"p\">,</span><span class=\"s2\">\"eyes\"</span><span class=\"p\">,</span><span class=\"s2\">\"mouth\"</span><span class=\"p\">,</span><span class=\"s2\">\"accessorie\"</span><span class=\"p\">])</span>\n<span class=\"n\">avatar</span> <span class=\"o\">=</span> <span class=\"n\">theme</span><span class=\"o\">.</span><span class=\"n\">generate_avatar</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"o\">=</span><span class=\"s2\">\"just a random string\"</span><span class=\"p\">)</span>\n<span class=\"n\">theme</span><span class=\"o\">.</span><span class=\"n\">save_on_disk</span><span class=\"p\">(</span><span class=\"n\">avatar</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">\"/tmp/saved_file.png\"</span><span class=\"p\">)</span>\n</pre>\n<p>Bird avatar <a href=\"http://www.peppercarrot.com\" rel=\"nofollow\">by David Revoy</a>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pioupiou</span> <span class=\"kn\">import</span> <span class=\"n\">FolderAvatarTheme</span>\n<span class=\"n\">theme</span> <span class=\"o\">=</span> <span class=\"n\">FolderAvatarTheme</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"sample/bird_revoy\"</span><span class=\"p\">,</span>\n    <span class=\"n\">layers_name</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"tail\"</span><span class=\"p\">,</span> <span class=\"s2\">\"hoop\"</span><span class=\"p\">,</span> <span class=\"s2\">\"body\"</span><span class=\"p\">,</span> <span class=\"s2\">\"wing\"</span><span class=\"p\">,</span> <span class=\"s2\">\"eyes\"</span><span class=\"p\">,</span> <span class=\"s2\">\"bec\"</span><span class=\"p\">,</span> <span class=\"s2\">\"accessorie\"</span><span class=\"p\">],</span>\n<span class=\"p\">)</span>\n<span class=\"n\">avatar</span> <span class=\"o\">=</span> <span class=\"n\">theme</span><span class=\"o\">.</span><span class=\"n\">generate_avatar</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"o\">=</span><span class=\"s2\">\"just a random string\"</span><span class=\"p\">)</span>\n<span class=\"n\">theme</span><span class=\"o\">.</span><span class=\"n\">save_on_disk</span><span class=\"p\">(</span><span class=\"n\">avatar</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">\"/tmp/saved_file.png\"</span><span class=\"p\">)</span>\n</pre>\n<p>Monster avatar <a href=\"https://www.splitbrain.org/blog/2007-01/20_monsterid_as_gravatar_fallback\" rel=\"nofollow\">by Andreas Gohr's</a>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pioupiou</span> <span class=\"kn\">import</span> <span class=\"n\">FolderAvatarTheme</span>\n<span class=\"n\">theme</span> <span class=\"o\">=</span> <span class=\"n\">FolderAvatarTheme</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"sample/monster_id\"</span><span class=\"p\">,</span>\n    <span class=\"n\">layers_name</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"legs\"</span><span class=\"p\">,</span> <span class=\"s2\">\"hair\"</span><span class=\"p\">,</span> <span class=\"s2\">\"arms\"</span><span class=\"p\">,</span> <span class=\"s2\">\"body\"</span><span class=\"p\">,</span> <span class=\"s2\">\"eyes\"</span><span class=\"p\">,</span> <span class=\"s2\">\"mouth\"</span><span class=\"p\">],</span>\n<span class=\"p\">)</span>\n<span class=\"n\">avatar</span> <span class=\"o\">=</span> <span class=\"n\">theme</span><span class=\"o\">.</span><span class=\"n\">generate_avatar</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"o\">=</span><span class=\"s2\">\"just a random string\"</span><span class=\"p\">)</span>\n<span class=\"n\">theme</span><span class=\"o\">.</span><span class=\"n\">save_on_disk</span><span class=\"p\">(</span><span class=\"n\">avatar</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s2\">\"/tmp/saved_file.png\"</span><span class=\"p\">)</span>\n</pre>\n<h2>Configure Chooser</h2>\n<p>To generate avatar, pioupiou provide tools to help us use the algorithm you want.\nDefault behaviour is to rely on <code>random.Random()</code>, but pioupiou is made to support any type of chooser.\nTo do this you just need to configure chooser in your <code>AvatarTheme</code>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pioupiou</span> <span class=\"kn\">import</span> <span class=\"n\">FolderAvatarTheme</span>\n<span class=\"kn\">from</span> <span class=\"nn\">random</span> <span class=\"kn\">import</span> <span class=\"n\">Random</span>\n<span class=\"n\">theme</span> <span class=\"o\">=</span> <span class=\"n\">FolderAvatarTheme</span><span class=\"p\">(</span>\n  <span class=\"n\">folder_path</span><span class=\"o\">=</span><span class=\"s2\">\"sample/cat_revoy\"</span><span class=\"p\">,</span>\n  <span class=\"n\">layers_name</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"body\"</span><span class=\"p\">,</span> <span class=\"s2\">\"fur\"</span><span class=\"p\">,</span><span class=\"s2\">\"eyes\"</span><span class=\"p\">,</span><span class=\"s2\">\"mouth\"</span><span class=\"p\">,</span><span class=\"s2\">\"accessorie\"</span><span class=\"p\">],</span>\n  <span class=\"n\">chooser</span><span class=\"o\">=</span><span class=\"n\">Random</span><span class=\"p\">()</span> <span class=\"c1\"># same as default, don't change anything</span>\n<span class=\"p\">)</span>\n</pre>\n<p>You can use any hashlib algorithm you want from <code>hashlib</code> as chooser, using <code>pioupiou.chooser.HashLibChooser</code>.\nIt will do choice using modulo.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pioupiou</span> <span class=\"kn\">import</span> <span class=\"n\">FolderAvatarTheme</span>\n<span class=\"kn\">import</span> <span class=\"nn\">hashlib</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pioupiou.chooser</span> <span class=\"kn\">import</span> <span class=\"n\">HashLibChooser</span>\n<span class=\"n\">theme</span> <span class=\"o\">=</span> <span class=\"n\">FolderAvatarTheme</span><span class=\"p\">(</span>\n  <span class=\"n\">folder_path</span><span class=\"o\">=</span><span class=\"s2\">\"sample/cat_revoy\"</span><span class=\"p\">,</span>\n  <span class=\"n\">layers_name</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"body\"</span><span class=\"p\">,</span> <span class=\"s2\">\"fur\"</span><span class=\"p\">,</span><span class=\"s2\">\"eyes\"</span><span class=\"p\">,</span><span class=\"s2\">\"mouth\"</span><span class=\"p\">,</span><span class=\"s2\">\"accessorie\"</span><span class=\"p\">],</span>\n  <span class=\"n\">chooser</span><span class=\"o\">=</span><span class=\"n\">HashLibChooser</span><span class=\"p\">(</span><span class=\"n\">hashlib</span><span class=\"o\">.</span><span class=\"n\">sha256</span><span class=\"p\">())</span> <span class=\"c1\"># hashlib.sha256() is just an example, hashlib.md5() should also work for example.</span>\n<span class=\"p\">)</span>\n</pre>\n<p>You can also implement <code>pioupiou.chooser.Chooser</code> and use a custom chooser.</p>\n\n          </div>"}, "last_serial": 6931093, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "d1801b9dd720f5f2321ad837e2d2dcd5", "sha256": "22fac54816aa73a0811344e746ecab04fdbb407dc32334323e3e924daa5bbb0a"}, "downloads": -1, "filename": "pioupiou-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d1801b9dd720f5f2321ad837e2d2dcd5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.5", "size": 8495, "upload_time": "2019-07-04T22:02:47", "upload_time_iso_8601": "2019-07-04T22:02:47.618776Z", "url": "https://files.pythonhosted.org/packages/dd/a4/8827c42e3a3d2c9995b5b2a737d95ae5a397ac0a871239abcbf11f642a1a/pioupiou-0.3.0-py3-none-any.whl", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "a598590e8fa041aa382e06deda198005", "sha256": "13dfd1c2d6626f1e5a41e0afcb65e7fc9b121de02c86b85021b933f389b86c0c"}, "downloads": -1, "filename": "pioupiou-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a598590e8fa041aa382e06deda198005", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.5", "size": 112794, "upload_time": "2019-07-06T18:09:36", "upload_time_iso_8601": "2019-07-06T18:09:36.548453Z", "url": "https://files.pythonhosted.org/packages/df/19/22185802028fb4568e9ee51ea1886c792d9f130bbe5f6c0936412694e3f3/pioupiou-0.4.0-py3-none-any.whl", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "85abe2a6f12d6884fdfab4754114b13c", "sha256": "c3fe1868a35874f46dd25b9cf4d21382cc796e45e0ac042130045b2150c6252e"}, "downloads": -1, "filename": "pioupiou-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "85abe2a6f12d6884fdfab4754114b13c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.5", "size": 221209, "upload_time": "2020-03-31T21:59:50", "upload_time_iso_8601": "2020-03-31T21:59:50.021558Z", "url": "https://files.pythonhosted.org/packages/c0/2a/9c21da2109fcd5b26741c54d1769a4949563a4ebe5d22dcd870b67e02a33/pioupiou-0.5.1-py3-none-any.whl", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "5b8e0405e55eae26a62f15c920fb279e", "sha256": "f6df3abf4643d22596c94fb7262f2e1abc8134bc6746b99823f19f274a819648"}, "downloads": -1, "filename": "pioupiou-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5b8e0405e55eae26a62f15c920fb279e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.5", "size": 221405, "upload_time": "2020-04-01T20:38:17", "upload_time_iso_8601": "2020-04-01T20:38:17.508905Z", "url": "https://files.pythonhosted.org/packages/57/32/2896933f83dae4747312cce6c23fb29d9284fe5362d79346accbb00cc0d1/pioupiou-0.5.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5b8e0405e55eae26a62f15c920fb279e", "sha256": "f6df3abf4643d22596c94fb7262f2e1abc8134bc6746b99823f19f274a819648"}, "downloads": -1, "filename": "pioupiou-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5b8e0405e55eae26a62f15c920fb279e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.5", "size": 221405, "upload_time": "2020-04-01T20:38:17", "upload_time_iso_8601": "2020-04-01T20:38:17.508905Z", "url": "https://files.pythonhosted.org/packages/57/32/2896933f83dae4747312cce6c23fb29d9284fe5362d79346accbb00cc0d1/pioupiou-0.5.2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:54:25 2020"}