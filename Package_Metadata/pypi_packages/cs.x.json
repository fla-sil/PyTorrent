{"info": {"author": "Cameron Simpson", "author_email": "cs@cskk.id.au", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "X(), for low level debugging\n\nX() is my function for low level ad hoc debug messages.\nIt takes a message and optional format arguments for use with `%`.\nIt is presented here in its own module for reuse.\n\nIt normally writes directly to `sys.stderr` but accepts an optional\nkeyword argument `file` to specify a different filelike object.\nIf `file` is not specified, its behaviour is further tweaked with\nthe globals `X_discard`, `X_logger` and `X_via_tty`:\nif X_logger then log a warning to that logger;\notherwise if X_via_tty then open /dev/tty and write the message to it;\notherwise if X_discard then discard the message;\notherwise write the message to sys.stderr.\n`X_discard`'s default value is `not sys.stderr.isatty()`.\n\n## Function `X(msg, *args, **kw)`\n\nUnconditionally write the message `msg`.\n\nIf there are positional arguments after `msg`,\nformat `msg` using %-expansion with those arguments.\n\nKeyword arguments:\n* `file`: optional keyword argument specifying the output file.\n* `colour`: optional text colour.\n  If specified, surround the message with ANSI escape sequences\n  to render the text in that colour.\n\nIf `file` is not None, write to it unconditionally;\notherwise if X_logger then log a warning to that logger;\notherwise if X_via_tty then open /dev/tty and write the message to it;\notherwise if X_discard then discard the message;\notherwise write the message to sys.stderr.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/cameron_simpson/css/commits/all", "keywords": "python2,python3", "license": "", "maintainer": "", "maintainer_email": "", "name": "cs.x", "package_url": "https://pypi.org/project/cs.x/", "platform": "", "project_url": "https://pypi.org/project/cs.x/", "project_urls": {"Homepage": "https://bitbucket.org/cameron_simpson/css/commits/all"}, "release_url": "https://pypi.org/project/cs.x/20181231/", "requires_dist": null, "requires_python": "", "summary": "X(), for low level debugging", "version": "20181231", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>X(), for low level debugging</p>\n<p>X() is my function for low level ad hoc debug messages.\nIt takes a message and optional format arguments for use with <code>%</code>.\nIt is presented here in its own module for reuse.</p>\n<p>It normally writes directly to <code>sys.stderr</code> but accepts an optional\nkeyword argument <code>file</code> to specify a different filelike object.\nIf <code>file</code> is not specified, its behaviour is further tweaked with\nthe globals <code>X_discard</code>, <code>X_logger</code> and <code>X_via_tty</code>:\nif X_logger then log a warning to that logger;\notherwise if X_via_tty then open /dev/tty and write the message to it;\notherwise if X_discard then discard the message;\notherwise write the message to sys.stderr.\n<code>X_discard</code>'s default value is <code>not sys.stderr.isatty()</code>.</p>\n<h2>Function <code>X(msg, *args, **kw)</code></h2>\n<p>Unconditionally write the message <code>msg</code>.</p>\n<p>If there are positional arguments after <code>msg</code>,\nformat <code>msg</code> using %-expansion with those arguments.</p>\n<p>Keyword arguments:</p>\n<ul>\n<li><code>file</code>: optional keyword argument specifying the output file.</li>\n<li><code>colour</code>: optional text colour.\nIf specified, surround the message with ANSI escape sequences\nto render the text in that colour.</li>\n</ul>\n<p>If <code>file</code> is not None, write to it unconditionally;\notherwise if X_logger then log a warning to that logger;\notherwise if X_via_tty then open /dev/tty and write the message to it;\notherwise if X_discard then discard the message;\notherwise write the message to sys.stderr.</p>\n\n          </div>"}, "last_serial": 4647936, "releases": {"20170902": [{"comment_text": "", "digests": {"md5": "00e34442e2a129825b64ac75d5c250e2", "sha256": "bc8c4778df6f4141dac2e6e7e9c368a49ea0fe51a519b8e22240089f4e6c6eac"}, "downloads": -1, "filename": "cs.x-20170902.tar.gz", "has_sig": false, "md5_digest": "00e34442e2a129825b64ac75d5c250e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2172, "upload_time": "2017-09-02T12:29:04", "upload_time_iso_8601": "2017-09-02T12:29:04.238497Z", "url": "https://files.pythonhosted.org/packages/04/90/ea25205c81d8aae4d9721218ada85ed3b0a6b701468e048c3487d2aca400/cs.x-20170902.tar.gz", "yanked": false}], "20180726": [{"comment_text": "", "digests": {"md5": "bc1cf4faa51600652804322515ba6253", "sha256": "0522b26b5d68b1bc246b04555a83b10ecce2ffbbbcc37c7c95ea52d5f050fa54"}, "downloads": -1, "filename": "cs.x-20180726.tar.gz", "has_sig": false, "md5_digest": "bc1cf4faa51600652804322515ba6253", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2272, "upload_time": "2018-07-25T22:34:55", "upload_time_iso_8601": "2018-07-25T22:34:55.992183Z", "url": "https://files.pythonhosted.org/packages/f1/c2/34ebcb0d4cd5a48e9f54a4a1918fee070c63b6fd14bb29c8d926616556e2/cs.x-20180726.tar.gz", "yanked": false}], "20181231": [{"comment_text": "", "digests": {"md5": "9527cf758ef65c435360d59f45bd2995", "sha256": "2152e5db088184f05840554068674c2623df6638af8ed49a2b772a6a2beafff2"}, "downloads": -1, "filename": "cs.x-20181231.tar.gz", "has_sig": false, "md5_digest": "9527cf758ef65c435360d59f45bd2995", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2662, "upload_time": "2018-12-31T10:50:55", "upload_time_iso_8601": "2018-12-31T10:50:55.395701Z", "url": "https://files.pythonhosted.org/packages/33/90/17572123a0381e470986a36bcd87bad8962c8def3505bef58547956ea973/cs.x-20181231.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9527cf758ef65c435360d59f45bd2995", "sha256": "2152e5db088184f05840554068674c2623df6638af8ed49a2b772a6a2beafff2"}, "downloads": -1, "filename": "cs.x-20181231.tar.gz", "has_sig": false, "md5_digest": "9527cf758ef65c435360d59f45bd2995", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2662, "upload_time": "2018-12-31T10:50:55", "upload_time_iso_8601": "2018-12-31T10:50:55.395701Z", "url": "https://files.pythonhosted.org/packages/33/90/17572123a0381e470986a36bcd87bad8962c8def3505bef58547956ea973/cs.x-20181231.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:39 2020"}