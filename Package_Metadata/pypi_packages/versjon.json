{"info": {"author": "Steinwurf ApS", "author_email": "contact@steinwurf.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Documentation", "Topic :: Software Development :: Documentation", "Topic :: Utilities"], "description": "Introduction\n============\n\n.. image:: https://img.shields.io/appveyor/ci/SteinwurfApS/versjon/master.svg?style=flat-square&logo=appveyor\n    :target: https://ci.appveyor.com/project/SteinwurfApS/versjon\n\n.. image:: https://travis-ci.org/steinwurf/versjon.svg?branch=master\n    :target: https://travis-ci.org/steinwurf/versjon\n\nWhat it is:\n\n* A tool for linking multiple versions of your project's Sphinx\n  documentation, without the need for special services such as readthedocs.org.\n* Useful if you build and host your documentation as a static site.\n\nHow it works:\n\n* ``versjon`` works by injecting some basic HTML in to the generated\n  documentation.\n\nDemonstration\n-------------\n\n.. image:: demo.gif\n\nInstallation\n------------\n\n1. Install the ``versjon`` tool using ``pip``::\n\n      python -m pip install versjon\n\nBuilding the docs\n-----------------\n\n1. Build all the different versions of your documentation into a common\n   directory. For example generating all the docs in the ``site`` directory::\n\n       git checkout 2.0.0\n       sphinx-build... -D version=2.0.0 ... site/build_2.0.0\n\n       ...\n\n       git checkout 5.1.1\n       sphinx-build... -D version=5.1.1 ... site/build_5.1.1\n\n\n   ``versjon`` will use whatever ``version`` is specified in the Sphinx\n   configuration: https://www.sphinx-doc.org/en/master/usage/configuration.html\n   If you have the specified the ``version`` number in ``conf.py`` you can omit\n   the ``-D version`` option to Sphinx build.\n\n2. Run ``versjon`` in the common directory - and you are done.\n\nIndex page\n----------\n\nAs default ``versjon`` will generate an ``index.html`` file with a redirect to\nthe latest stable version, or if no semver version exists the first branch,\npresumably the master.\nYou can disable this behavior with ``--no-index`` option.\n\nStable index\n------------\n\nAs default ``versjon`` will generate a folder in the documentation root called\n``stable``. This folder will contain an ``index.html`` with a redirect to the\nlatest stable version. You can disable this behavior with\n``--no-stable-index`` option.\n\nBuilt in templates (injection)\n------------------------------\n\n``versjon`` ships with a couple of built-in templates, that get injected\nin the generated HTML:\n\n* ``head.html``: This template gets injected into the ``<head>`` tag of\n  the generated HTML pages. In this template you have access to the following\n  variables: ``general``, ``build``, ``page``.\n* ``header.html``: This template is inject at the beginning of the ``<body>``\n  tag. In this template you have access to the following variables:\n  ``general``, ``build``, ``page``.\n* ``footer.html``: This template is inject at the end of the ``<body>``\n  tag. In this template you have access to the following variables:\n  ``general``, ``build``, ``page``.\n* ``index.html``: This template is use to generate an ``index.html``\n  in the ``root`` folder.  In this template you have access to the\n  following variables: ``general``, ``page``.\n* ``stable_index.html``: This template is use to generate an ``index.html``\n  in the ``stable`` folder.  In this template you have access to the\n  following variables: ``general``, ``page``.\n\nCustomization\n-------------\nYou can provide you own template for generating the version selector etc.\n\nThe easiest way is probably to copy one of the default HTML templates, e.g.,\n``src/templates/footer.html`` one and adapt it.\n\nIf you want to \"inject\" a custom footer. Create a file called ``footer.html``\nand put it somewhere in your project, e.g., ``mydocs/footer.html`` now invoke\n``versjon`` with the ``--user_templates`` argument, e.g.,::\n\n    ./versjon --user_templates=mydocs\n\n``verjson`` will prioritize finding templates in the users path first. If none\nis found it will fallback to the built-in.\n\nIf you want to disable a built-in template, simply create an empty file with\nthe same name as the template you want to disable e.g. ``header.html`` if\nthe template is empty no content will be injected.\n\nThe ``context``\n---------------\n\nIn the templates you can access the information gathered by versjon. Based on\nthis you can generate the needed HTML.\n\nThe following lists the various variables.\n\nGeneral variables\n.................\n\n* ``semver``: A list of versions with valid sematic version numbers.\n* ``other``: A list of versions with non-semantic version numbers. Typically\n  this list will contain branches etc.\n* ``stable``: If we have any semantic version releases the ``stable`` version\n  will be the newest release in the ``semver`` list.\n* ``docs_path``: Dictionary mapping versions to the build folder for a version\n  relative to the documentation root.\n\nBuild variables\n...............\n\n* ``current``: The current version\n* ``is_semver``: True if the current version follows semantic versioning\n\nPage variables\n..............\n\n* ``page_root``: Relative path to the documentation root from a given HTML\n  page.\n  Concatenating the ``page_root`` with a path in ``docs_path`` will give a\n  valid relative link from one HTML page to the root folder of specific\n  version.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/steinwurf/", "keywords": "versjon", "license": "BSD 3-clause \"New\" or \"Revised\" License", "maintainer": "", "maintainer_email": "", "name": "versjon", "package_url": "https://pypi.org/project/versjon/", "platform": "", "project_url": "https://pypi.org/project/versjon/", "project_urls": {"Homepage": "https://github.com/steinwurf/"}, "release_url": "https://pypi.org/project/versjon/1.1.1/", "requires_dist": ["semantic-version", "click", "colorama", "sphobjinv", "beautifulsoup4"], "requires_python": "", "summary": "Tool for generating a json file with the name and url of versions.", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://ci.appveyor.com/project/SteinwurfApS/versjon\" rel=\"nofollow\"><img alt=\"https://img.shields.io/appveyor/ci/SteinwurfApS/versjon/master.svg?style=flat-square&amp;logo=appveyor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/97b1d718563b8a958a7d0840daa6117b02640d99/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f537465696e777572664170532f766572736a6f6e2f6d61737465722e7376673f7374796c653d666c61742d737175617265266c6f676f3d6170707665796f72\"></a>\n<a href=\"https://travis-ci.org/steinwurf/versjon\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/steinwurf/versjon.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/21dfa468b2f15d0d2e6ca87b4fd6a426be00620e/68747470733a2f2f7472617669732d63692e6f72672f737465696e777572662f766572736a6f6e2e7376673f6272616e63683d6d6173746572\"></a>\n<p>What it is:</p>\n<ul>\n<li>A tool for linking multiple versions of your project\u2019s Sphinx\ndocumentation, without the need for special services such as readthedocs.org.</li>\n<li>Useful if you build and host your documentation as a static site.</li>\n</ul>\n<p>How it works:</p>\n<ul>\n<li><tt>versjon</tt> works by injecting some basic HTML in to the generated\ndocumentation.</li>\n</ul>\n<div id=\"demonstration\">\n<h2>Demonstration</h2>\n<img alt=\"demo.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/145b17e3a6db1b1e1f35780c9ce8033f095769da/64656d6f2e676966\">\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li><p>Install the <tt>versjon</tt> tool using <tt>pip</tt>:</p>\n<pre>python -m pip install versjon\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"building-the-docs\">\n<h2>Building the docs</h2>\n<ol>\n<li><p>Build all the different versions of your documentation into a common\ndirectory. For example generating all the docs in the <tt>site</tt> directory:</p>\n<pre>git checkout 2.0.0\nsphinx-build... -D version=2.0.0 ... site/build_2.0.0\n\n...\n\ngit checkout 5.1.1\nsphinx-build... -D version=5.1.1 ... site/build_5.1.1\n</pre>\n<p><tt>versjon</tt> will use whatever <tt>version</tt> is specified in the Sphinx\nconfiguration: <a href=\"https://www.sphinx-doc.org/en/master/usage/configuration.html\" rel=\"nofollow\">https://www.sphinx-doc.org/en/master/usage/configuration.html</a>\nIf you have the specified the <tt>version</tt> number in <tt>conf.py</tt> you can omit\nthe <tt><span class=\"pre\">-D</span> version</tt> option to Sphinx build.</p>\n</li>\n<li><p>Run <tt>versjon</tt> in the common directory - and you are done.</p>\n</li>\n</ol>\n</div>\n<div id=\"index-page\">\n<h2>Index page</h2>\n<p>As default <tt>versjon</tt> will generate an <tt>index.html</tt> file with a redirect to\nthe latest stable version, or if no semver version exists the first branch,\npresumably the master.\nYou can disable this behavior with <tt><span class=\"pre\">--no-index</span></tt> option.</p>\n</div>\n<div id=\"stable-index\">\n<h2>Stable index</h2>\n<p>As default <tt>versjon</tt> will generate a folder in the documentation root called\n<tt>stable</tt>. This folder will contain an <tt>index.html</tt> with a redirect to the\nlatest stable version. You can disable this behavior with\n<tt><span class=\"pre\">--no-stable-index</span></tt> option.</p>\n</div>\n<div id=\"built-in-templates-injection\">\n<h2>Built in templates (injection)</h2>\n<p><tt>versjon</tt> ships with a couple of built-in templates, that get injected\nin the generated HTML:</p>\n<ul>\n<li><tt>head.html</tt>: This template gets injected into the <tt>&lt;head&gt;</tt> tag of\nthe generated HTML pages. In this template you have access to the following\nvariables: <tt>general</tt>, <tt>build</tt>, <tt>page</tt>.</li>\n<li><tt>header.html</tt>: This template is inject at the beginning of the <tt>&lt;body&gt;</tt>\ntag. In this template you have access to the following variables:\n<tt>general</tt>, <tt>build</tt>, <tt>page</tt>.</li>\n<li><tt>footer.html</tt>: This template is inject at the end of the <tt>&lt;body&gt;</tt>\ntag. In this template you have access to the following variables:\n<tt>general</tt>, <tt>build</tt>, <tt>page</tt>.</li>\n<li><tt>index.html</tt>: This template is use to generate an <tt>index.html</tt>\nin the <tt>root</tt> folder.  In this template you have access to the\nfollowing variables: <tt>general</tt>, <tt>page</tt>.</li>\n<li><tt>stable_index.html</tt>: This template is use to generate an <tt>index.html</tt>\nin the <tt>stable</tt> folder.  In this template you have access to the\nfollowing variables: <tt>general</tt>, <tt>page</tt>.</li>\n</ul>\n</div>\n<div id=\"customization\">\n<h2>Customization</h2>\n<p>You can provide you own template for generating the version selector etc.</p>\n<p>The easiest way is probably to copy one of the default HTML templates, e.g.,\n<tt>src/templates/footer.html</tt> one and adapt it.</p>\n<p>If you want to \u201cinject\u201d a custom footer. Create a file called <tt>footer.html</tt>\nand put it somewhere in your project, e.g., <tt>mydocs/footer.html</tt> now invoke\n<tt>versjon</tt> with the <tt><span class=\"pre\">--user_templates</span></tt> argument, e.g.,:</p>\n<pre>./versjon --user_templates=mydocs\n</pre>\n<p><tt>verjson</tt> will prioritize finding templates in the users path first. If none\nis found it will fallback to the built-in.</p>\n<p>If you want to disable a built-in template, simply create an empty file with\nthe same name as the template you want to disable e.g. <tt>header.html</tt> if\nthe template is empty no content will be injected.</p>\n</div>\n<div id=\"the-context\">\n<h2>The <tt>context</tt></h2>\n<p>In the templates you can access the information gathered by versjon. Based on\nthis you can generate the needed HTML.</p>\n<p>The following lists the various variables.</p>\n<div id=\"general-variables\">\n<h3>General variables</h3>\n<ul>\n<li><tt>semver</tt>: A list of versions with valid sematic version numbers.</li>\n<li><tt>other</tt>: A list of versions with non-semantic version numbers. Typically\nthis list will contain branches etc.</li>\n<li><tt>stable</tt>: If we have any semantic version releases the <tt>stable</tt> version\nwill be the newest release in the <tt>semver</tt> list.</li>\n<li><tt>docs_path</tt>: Dictionary mapping versions to the build folder for a version\nrelative to the documentation root.</li>\n</ul>\n</div>\n<div id=\"build-variables\">\n<h3>Build variables</h3>\n<ul>\n<li><tt>current</tt>: The current version</li>\n<li><tt>is_semver</tt>: True if the current version follows semantic versioning</li>\n</ul>\n</div>\n<div id=\"page-variables\">\n<h3>Page variables</h3>\n<ul>\n<li><tt>page_root</tt>: Relative path to the documentation root from a given HTML\npage.\nConcatenating the <tt>page_root</tt> with a path in <tt>docs_path</tt> will give a\nvalid relative link from one HTML page to the root folder of specific\nversion.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6652883, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "9e2fd841dd3692819d2c0c285b30c722", "sha256": "729cfca50b3016c653f9ad801e351efcea2fec6280cf5acc5bb307c05cd8ca93"}, "downloads": -1, "filename": "versjon-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9e2fd841dd3692819d2c0c285b30c722", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9102, "upload_time": "2020-01-27T13:50:01", "upload_time_iso_8601": "2020-01-27T13:50:01.306459Z", "url": "https://files.pythonhosted.org/packages/15/79/14ca8d360bbde0c7ee24735af9382a5d2d899882cb4bbc126d9702198fb4/versjon-1.0.0-py2.py3-none-any.whl", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "16881abd840d943235095ac06bfde918", "sha256": "0f09b7c04917c2922a27bdeac5c5a6ec8ec31cb8d8627408558b9bb4d6ebf956"}, "downloads": -1, "filename": "versjon-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "16881abd840d943235095ac06bfde918", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9527, "upload_time": "2020-02-17T13:29:40", "upload_time_iso_8601": "2020-02-17T13:29:40.122575Z", "url": "https://files.pythonhosted.org/packages/85/bd/334b3fa1ae5d9367df6d36ab3f61abcc02c7baa7afc08b72978336e74791/versjon-1.1.0-py2.py3-none-any.whl", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "9721ddd38860ac1e180888ce3d9350c6", "sha256": "c00aa0dc5620da5f07b86a7267e1d0aa4e48829e4106cf62f9e578cb9f4c3bc7"}, "downloads": -1, "filename": "versjon-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9721ddd38860ac1e180888ce3d9350c6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9525, "upload_time": "2020-02-18T12:08:04", "upload_time_iso_8601": "2020-02-18T12:08:04.192992Z", "url": "https://files.pythonhosted.org/packages/71/ae/39624f2936d19010784322d91eae4ae50043d522884aa6f14f6097cd7732/versjon-1.1.1-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9721ddd38860ac1e180888ce3d9350c6", "sha256": "c00aa0dc5620da5f07b86a7267e1d0aa4e48829e4106cf62f9e578cb9f4c3bc7"}, "downloads": -1, "filename": "versjon-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9721ddd38860ac1e180888ce3d9350c6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9525, "upload_time": "2020-02-18T12:08:04", "upload_time_iso_8601": "2020-02-18T12:08:04.192992Z", "url": "https://files.pythonhosted.org/packages/71/ae/39624f2936d19010784322d91eae4ae50043d522884aa6f14f6097cd7732/versjon-1.1.1-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:36:37 2020"}