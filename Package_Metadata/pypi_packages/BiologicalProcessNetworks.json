{"info": {"author": "Christopher D. Lasher", "author_email": "chris.lasher@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "==================================\nPython Biological Process Networks\n==================================\n\nPython Biological Process Networks (PyBPN) provides programs to detect\nconnections between biological processes (called \"links\") based on gene\ninteraction, expression, and annotation data. A collection of\nsignificant links and the participating processes forms a biological\nprocess network, or BPN.\n\nPyBPN provides three related programs for finding BPNs, each with\ndifferent objectives:\n\nbpln\n  Determines if processes are generally connected; an implementation of\n  the algorithm described by Dotan-Cohen *et al.* [1]_.\n\ncbpn\n  Determines whether, under a particular comparison of conditions,\n  connections between processes are perturbed; an implementation of the\n  algorithm described by Lasher *et al.* [2]_.\n\nmcmcbpn\n  Similar to ``cbpn``, but attempts to discover the smallest set of\n  connections which describes as much of the perturbation of interacting\n  genes as possible.\n\n\n############\nAvailability\n############\n\nPyBPN releases are available from the `Python Package Index`_ (`PyPI`_)\nat http://pypi.python.org/pypi/BiologicalProcessNetworks\n\nPyBPN's source code is hosted on `GitHub`_ at\nhttps://github.com/gotgenes/BiologicalProcessNetworks\n\n\n############\nInstallation\n############\n\nThe recommended way to install PyBPN is through the Python package\ninstaller pip_, as it helps automagically manage dependencies, however,\nthis document also provides instructions for manual installation.\n\nPyBPN has several third-party `dependencies`_, described below.\n\n\n.. _dependencies:\n\nDependencies\n============\n\nPyBPN depends on the following Python versions and external Python\nPackages (all available from `PyPI`_):\n\n- Python **2.6** or **2.7**. Python 3 is not currently supported;\n  Python 2.5 and lower are unsupported. Check your Python version with\n  ``python --version``. Obtain newer releases of Python from\n  http://python.org/download/\n- ConflictsOptionParser_\n- ConvUtils_ (v.1.1; currently v.2.0 is unsupported)\n- fisher_\n- NetworkX_ (v.1.0 or greater)\n- SciPy_ (which depends on NumPy_)\n\n\nIf you are installing PyBPN via pip, you only need to ensure that you have\nan appropriate version of Python installed on your system. If you are\nmanually installing PyBPN, you will need to obtain and install all\ndependencies through your own means (e.g., via ``apt``, ``yum``, ``.dmg``\ninstalls, or from source, following the package's instructions).\n\n\nInstallation by pip\n===================\n\npip_ will download and install PyBPN, as well as any Python package\ndependencies that are not yet installed on your system or which require\nupgrading.\n\n\nSystem-wide installation for users with administrative access\n-------------------------------------------------------------\n\nIf you have administrative (e.g., sudo) access on your system, you may\ninstall PyBPN system-wide with\n\n::\n\n  sudo pip install BiologicalProcessNetworks\n\nIf you have not installed NumPy before hand, you may encounter an error\n[3]_. In this case, try\n\n::\n\n  pip install numpy\n  pip install BiologicalProcessNetworks\n\n\nLocal installation for non-privileged users\n-------------------------------------------\n\nIf you do not have administrative, or do not wish to make a system-wide\ninstallation of PyBPN, you can still install PyBPN and all its dependencies\nusing the user site-packages installation.\n\n::\n\n  pip install --user BiologicalProcessNetworks\n\nIf you have not installed NumPy before hand, you may encounter an error\n[3]_. In this case, try\n\n::\n\n  pip install --user numpy\n  pip install --user BiologicalProcessNetworks\n\n\nManual Installation\n===================\n\nOnce you have installed all dependencies_ and have obtained and unpacked\nthe source for PyBPN (e.g., by using ``tar``), move into the top level\ndirectory of the unpacked source and run\n\n::\n\n  python setup.py install\n\n\nIf you do not have administrative permissions for your computer, you can\ninstall into the user-specific site-packages location with\n\n::\n\n  python setup.py install --user\n\n\n#####\nUsage\n#####\n\nAll programs accept the ``-h``/``--help`` option. Provide this option to\nget a full usage string from the program, including all available\noptions. Below is a summary of the usage for each program and details of\ncommon options.\n\n\nBPLN\n====\n\nTODO\n\n\nCBPLN\n=====\n\nTODO\n\n\nMCMCBPN\n=======\n\n``mcmcbpn`` calculates a BPN which explains as much gene expression\nperturbation an underlying gene-gene (or protein-protein) response\nnetwork as possible, using as few process-process links as possible.\n``mcmcbpn`` performs `Markov chain Monte Carlo (MCMC)`_ in order to\neffectively consider all possible links simultaneously and select an\noptimal subset of them.\n\n\nBasic Usage\n-----------\n\nThe basic usage of ``mcmcbpn`` is as follows::\n\n  mcmcbpn [OPTIONS] INTERACTIONS_FILE ANNOTATIONS_FILE EXPRESSION_FILE\n\nEach of the files is described below:\n\n- ``INTERACTIONS_FILE``: a CSV file containing interactions. The file\n  should have two columns with headings \"interactor1\" and\n  \"interactor2\". It may have an optional column with the heading\n  \"weight\", whose values will be used as the weight or confidence\n  of the interaction. The file may have additional columns, which\n  will be ignored.\n\n- ``ANNOTATIONS_FILE``: a file containing annotations. The annotations\n  file may be in one of two formats:\n\n  - GMT format: if the file ends with the extension \".gmt\", it is\n    automatically parsed as a GMT-format file. The file is a\n    tab-separated (TSV) format with no headers. The first column\n    contains the annotation term. The second column contains a\n    description. All following columns contain gene IDs for genes\n    annotated by that term. `Full GMT format specification`_ is\n    available from the `MSigDB and GSEA website`_.\n\n  - Two-column format: The file should have a column titled\n    \"gene_id\" which has the gene/gene product ID, and a column\n    titled \"term\" which contains the term with which the\n    gene/product is annotated. The file may have additional\n    columns, which will be ignored.\n\n- ``EXPRESSION_FILE``: a CSV file of gene (or gene product) expression\n  values. The file should have a column titled \"id\" which has the\n  gene (or gene product) ID, and a column titled \"expression\"\n  which gives a value for the expression level, or difference in\n  expression levels.\n\n``mcmcbpn`` has a large number of options which can change its behavior,\neither in terms of the algorithm and parameters used, or in terms of its\noutput. To get a full list of options, run ::\n\n  mcmcbpn --help\n\nBelow are the most important options.\n\n\nAlgorithm and Parameter Options\n-------------------------------\n\nThese are options which affect the algorithmic behavior or starting\nstate of ``mcmcbpn``.\n\n- ``--burn-in=BURN_IN``: the number of steps to take before recording\n  states in the Markov chain [default: ``1000000``]\n\n- ``--steps=STEPS``: the number of steps through the Markov chain to\n  observe [default: ``10000000``]\n\n- ``--activity-threshold=ACTIVITY_THRESHOLD``: set the (differential)\n  expression threshold at which a gene is considered active [default:\n  ``-log10(0.05)``]\n\n- ``--transition-ratio=TRANSITION_RATIO``: The target ratio of proposed\n  link transitions to proposed parameter transitions [default: ``0.9``]\n\n- ``--fixed-distributions``: use fixed distributions for link (and term)\n  prior [implies ``--free-parameters]`` (**highly recommended**)\n\n- ``--free-parameters``: parameters will be adjusted randomly, rather\n  than incrementally (**recommended**)\n\n- ``--disable-swaps``: disables swapping links as an option for\n  transitions (**highly recommended**; will become the default option in\n  future releases)\n\n\nOutput Options\n--------------\n\nThese are options which affect the output file paths and file formats\nfor ``mcmcbpn``.\n\n- ``--links-outfile=LINKS_OUTFILE``: the file to which the links results\n  should be written [default: ``links_results.tsv``]\n\n- ``--parameters-outfile=PARAMETERS_OUTFILE``: the file to which the\n  parameters results should be written [default: parameter_results.tsv]\n\n- ``--terms-outfile=TERMS_OUTFILE``: the file to which the terms results\n  should be written [default: terms_results.tsv]\n\n- ``--transitions-outfile=TRANSITIONS_OUTFILE``: the file to which the\n  transitions data should be written [default: transitions.tsv]\n\n- ``--detailed-transitions``: transitions file includes full information\n  about each step's state (see also ``--bzip2`` below, as this can\n  drastically increase the file size of the transitions outfile)\n\n- ``--bzip2``: compress transitions file using bzip2 (**highly\n  recommended**, the transitions file can consume a large amount of disk\n  space, in proportion to the number of steps)\n\n- ``--record-frequencies``: record the frequency of each state\n\n- ``--frequencies-outfile=FREQUENCIES_OUTFILE``: the file to which\n  frequency information should be written [default:\n  ``state_frequencies.tsv``]\n\n- ``--logfile=LOGFILE``: the file to which information for the run will\n  be logged [default: ``mcmcbpn-TIMESTAMP.log``]\n\n\nOutput\n------\n\nThe two principal files output by ``mcmcbpn`` are the links outfile and\nthe parameters outfile.\n\nLinks File\n  This TSV file contains three columns: ``term1``, ``term2``, and\n  ``probability``. ``term1`` and ``term2`` represent the two biological\n  processes of a given link, and ``probability`` represents the\n  probability that link should exist in the final biological process\n  network (BPN) as determined by a given run of ``mcmcbpn``.\n\nParameters File\n  This TSV file contains three columns: the first column, ``parameter``,\n  represents the name of the given parameter. Names include the\n  following:\n\n  - ``link_false_neg``: proportion of interactions not explained by the\n    BPN that should be\n  - ``link_false_pos``: propotion of interactions explained by the BPN\n    that should not be\n  - ``link_prior``: the prior probability a link would be included in\n    the BPN at all\n\n  The second column, ``value``, shows a particular value for a given\n  parameter. The third column, ``probability``, gives the estimated\n  probability that the given ``parameter`` should assume the respective\n  ``value`` in order to maximize the likelihood of the BPN.\n\n\n.. [1] `Dotan-Cohen, D., *et al.* \"Biological Process Linkage Networks.\"\n   PLoS One. 2009. <http://dx.doi.org/10.1371/journal.pone.0005313>`_\n.. [2] `Lasher, C., *et al.* \"Discovering Networks of Perturbed\n   Biological Processes in Hepatocyte Cultures.\" PLoS One. 2010.\n   <http://dx.doi.org/10.1371/journal.pone.0015247>`_\n.. [3] If your install fails during the installation of SciPy, try\n   running ``pip install numpy`` (or local-install equivalent) prior to\n   installing PyBPN.\n\n.. _PyPI:\n.. _Python Package Index: http://pypi.python.org/\n.. _GitHub: https://github.com/\n.. _pip: http://pypi.python.org/pypi/pip\n.. _virtualenv: http://pypi.python.org/pypi/virtualenv\n.. _virtualenvwrapper: http://www.doughellmann.com/projects/virtualenvwrapper/\n.. _ConflictsOptionParser: http://pypi.python.org/pypi/ConflictsOptionParser/\n.. _ConvUtils: http://pypi.python.org/pypi/ConvUtils/\n.. _fisher: http://pypi.python.org/pypi/fisher/\n.. _NetworkX: http://networkx.lanl.gov/\n.. _NumPy: http://numpy.scipy.org/\n.. _SciPy: http://scipy.org/\n.. _`Markov chain Monte Carlo (MCMC)`: http://en.wikipedia.org/wiki/Markov_chain_Monte_Carlo\n.. _`Full GMT format specification`: http://www.broadinstitute.org/cancer/software/gsea/wiki/index.php/Data_formats#GMT:_Gene_Matrix_Transposed_file_format_.28.2A.gmt.29\n.. _MSigDB and GSEA website: http://www.broadinstitute.org/gsea/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/BiologicalProcessNetworks", "keywords": null, "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "BiologicalProcessNetworks", "package_url": "https://pypi.org/project/BiologicalProcessNetworks/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/BiologicalProcessNetworks/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/BiologicalProcessNetworks"}, "release_url": "https://pypi.org/project/BiologicalProcessNetworks/1.0a5/", "requires_dist": null, "requires_python": null, "summary": "Identify significant connections between biological processes using gene interaction networks.", "version": "1.0a5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python Biological Process Networks (PyBPN) provides programs to detect\nconnections between biological processes (called \u201clinks\u201d) based on gene\ninteraction, expression, and annotation data. A collection of\nsignificant links and the participating processes forms a biological\nprocess network, or BPN.</p>\n<p>PyBPN provides three related programs for finding BPNs, each with\ndifferent objectives:</p>\n<dl>\n<dt>bpln</dt>\n<dd>Determines if processes are generally connected; an implementation of\nthe algorithm described by Dotan-Cohen <em>et al.</em> <a href=\"#id6\" id=\"id1\" rel=\"nofollow\">[1]</a>.</dd>\n<dt>cbpn</dt>\n<dd>Determines whether, under a particular comparison of conditions,\nconnections between processes are perturbed; an implementation of the\nalgorithm described by Lasher <em>et al.</em> <a href=\"#id7\" id=\"id2\" rel=\"nofollow\">[2]</a>.</dd>\n<dt>mcmcbpn</dt>\n<dd>Similar to <tt>cbpn</tt>, but attempts to discover the smallest set of\nconnections which describes as much of the perturbation of interacting\ngenes as possible.</dd>\n</dl>\n<div id=\"availability\">\n<h2>Availability</h2>\n<p>PyBPN releases are available from the <a href=\"http://pypi.python.org/\" rel=\"nofollow\">Python Package Index</a> (<a href=\"http://pypi.python.org/\" rel=\"nofollow\">PyPI</a>)\nat <a href=\"http://pypi.python.org/pypi/BiologicalProcessNetworks\" rel=\"nofollow\">http://pypi.python.org/pypi/BiologicalProcessNetworks</a></p>\n<p>PyBPN\u2019s source code is hosted on <a href=\"https://github.com/\" rel=\"nofollow\">GitHub</a> at\n<a href=\"https://github.com/gotgenes/BiologicalProcessNetworks\" rel=\"nofollow\">https://github.com/gotgenes/BiologicalProcessNetworks</a></p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The recommended way to install PyBPN is through the Python package\ninstaller <a href=\"http://pypi.python.org/pypi/pip\" rel=\"nofollow\">pip</a>, as it helps automagically manage dependencies, however,\nthis document also provides instructions for manual installation.</p>\n<p>PyBPN has several third-party <a href=\"#dependencies\" rel=\"nofollow\">dependencies</a>, described below.</p>\n<div id=\"id3\">\n<span id=\"dependencies\"></span><h3>Dependencies</h3>\n<p>PyBPN depends on the following Python versions and external Python\nPackages (all available from <a href=\"http://pypi.python.org/\" rel=\"nofollow\">PyPI</a>):</p>\n<ul>\n<li>Python <strong>2.6</strong> or <strong>2.7</strong>. Python 3 is not currently supported;\nPython 2.5 and lower are unsupported. Check your Python version with\n<tt>python <span class=\"pre\">--version</span></tt>. Obtain newer releases of Python from\n<a href=\"http://python.org/download/\" rel=\"nofollow\">http://python.org/download/</a></li>\n<li><a href=\"http://pypi.python.org/pypi/ConflictsOptionParser/\" rel=\"nofollow\">ConflictsOptionParser</a></li>\n<li><a href=\"http://pypi.python.org/pypi/ConvUtils/\" rel=\"nofollow\">ConvUtils</a> (v.1.1; currently v.2.0 is unsupported)</li>\n<li><a href=\"http://pypi.python.org/pypi/fisher/\" rel=\"nofollow\">fisher</a></li>\n<li><a href=\"http://networkx.lanl.gov/\" rel=\"nofollow\">NetworkX</a> (v.1.0 or greater)</li>\n<li><a href=\"http://scipy.org/\" rel=\"nofollow\">SciPy</a> (which depends on <a href=\"http://numpy.scipy.org/\" rel=\"nofollow\">NumPy</a>)</li>\n</ul>\n<p>If you are installing PyBPN via pip, you only need to ensure that you have\nan appropriate version of Python installed on your system. If you are\nmanually installing PyBPN, you will need to obtain and install all\ndependencies through your own means (e.g., via <tt>apt</tt>, <tt>yum</tt>, <tt>.dmg</tt>\ninstalls, or from source, following the package\u2019s instructions).</p>\n</div>\n<div id=\"installation-by-pip\">\n<h3>Installation by pip</h3>\n<p><a href=\"http://pypi.python.org/pypi/pip\" rel=\"nofollow\">pip</a> will download and install PyBPN, as well as any Python package\ndependencies that are not yet installed on your system or which require\nupgrading.</p>\n<div id=\"system-wide-installation-for-users-with-administrative-access\">\n<h4>System-wide installation for users with administrative access</h4>\n<p>If you have administrative (e.g., sudo) access on your system, you may\ninstall PyBPN system-wide with</p>\n<pre>sudo pip install BiologicalProcessNetworks\n</pre>\n<p>If you have not installed NumPy before hand, you may encounter an error\n<a href=\"#id8\" id=\"id4\" rel=\"nofollow\">[3]</a>. In this case, try</p>\n<pre>pip install numpy\npip install BiologicalProcessNetworks\n</pre>\n</div>\n<div id=\"local-installation-for-non-privileged-users\">\n<h4>Local installation for non-privileged users</h4>\n<p>If you do not have administrative, or do not wish to make a system-wide\ninstallation of PyBPN, you can still install PyBPN and all its dependencies\nusing the user site-packages installation.</p>\n<pre>pip install --user BiologicalProcessNetworks\n</pre>\n<p>If you have not installed NumPy before hand, you may encounter an error\n<a href=\"#id8\" id=\"id5\" rel=\"nofollow\">[3]</a>. In this case, try</p>\n<pre>pip install --user numpy\npip install --user BiologicalProcessNetworks\n</pre>\n</div>\n</div>\n<div id=\"manual-installation\">\n<h3>Manual Installation</h3>\n<p>Once you have installed all <a href=\"#dependencies\" rel=\"nofollow\">dependencies</a> and have obtained and unpacked\nthe source for PyBPN (e.g., by using <tt>tar</tt>), move into the top level\ndirectory of the unpacked source and run</p>\n<pre>python setup.py install\n</pre>\n<p>If you do not have administrative permissions for your computer, you can\ninstall into the user-specific site-packages location with</p>\n<pre>python setup.py install --user\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>All programs accept the <tt><span class=\"pre\">-h</span></tt>/<tt><span class=\"pre\">--help</span></tt> option. Provide this option to\nget a full usage string from the program, including all available\noptions. Below is a summary of the usage for each program and details of\ncommon options.</p>\n<div id=\"bpln\">\n<h3>BPLN</h3>\n<p>TODO</p>\n</div>\n<div id=\"cbpln\">\n<h3>CBPLN</h3>\n<p>TODO</p>\n</div>\n<div id=\"mcmcbpn\">\n<h3>MCMCBPN</h3>\n<p><tt>mcmcbpn</tt> calculates a BPN which explains as much gene expression\nperturbation an underlying gene-gene (or protein-protein) response\nnetwork as possible, using as few process-process links as possible.\n<tt>mcmcbpn</tt> performs <a href=\"http://en.wikipedia.org/wiki/Markov_chain_Monte_Carlo\" rel=\"nofollow\">Markov chain Monte Carlo (MCMC)</a> in order to\neffectively consider all possible links simultaneously and select an\noptimal subset of them.</p>\n<div id=\"basic-usage\">\n<h4>Basic Usage</h4>\n<p>The basic usage of <tt>mcmcbpn</tt> is as follows:</p>\n<pre>mcmcbpn [OPTIONS] INTERACTIONS_FILE ANNOTATIONS_FILE EXPRESSION_FILE\n</pre>\n<p>Each of the files is described below:</p>\n<ul>\n<li><tt>INTERACTIONS_FILE</tt>: a CSV file containing interactions. The file\nshould have two columns with headings \u201cinteractor1\u201d and\n\u201cinteractor2\u201d. It may have an optional column with the heading\n\u201cweight\u201d, whose values will be used as the weight or confidence\nof the interaction. The file may have additional columns, which\nwill be ignored.</li>\n<li><tt>ANNOTATIONS_FILE</tt>: a file containing annotations. The annotations\nfile may be in one of two formats:<ul>\n<li>GMT format: if the file ends with the extension \u201c.gmt\u201d, it is\nautomatically parsed as a GMT-format file. The file is a\ntab-separated (TSV) format with no headers. The first column\ncontains the annotation term. The second column contains a\ndescription. All following columns contain gene IDs for genes\nannotated by that term. <a href=\"http://www.broadinstitute.org/cancer/software/gsea/wiki/index.php/Data_formats#GMT:_Gene_Matrix_Transposed_file_format_.28.2A.gmt.29\" rel=\"nofollow\">Full GMT format specification</a> is\navailable from the <a href=\"http://www.broadinstitute.org/gsea/\" rel=\"nofollow\">MSigDB and GSEA website</a>.</li>\n<li>Two-column format: The file should have a column titled\n\u201cgene_id\u201d which has the gene/gene product ID, and a column\ntitled \u201cterm\u201d which contains the term with which the\ngene/product is annotated. The file may have additional\ncolumns, which will be ignored.</li>\n</ul>\n</li>\n<li><tt>EXPRESSION_FILE</tt>: a CSV file of gene (or gene product) expression\nvalues. The file should have a column titled \u201cid\u201d which has the\ngene (or gene product) ID, and a column titled \u201cexpression\u201d\nwhich gives a value for the expression level, or difference in\nexpression levels.</li>\n</ul>\n<p><tt>mcmcbpn</tt> has a large number of options which can change its behavior,\neither in terms of the algorithm and parameters used, or in terms of its\noutput. To get a full list of options, run</p>\n<pre>mcmcbpn --help\n</pre>\n<p>Below are the most important options.</p>\n</div>\n<div id=\"algorithm-and-parameter-options\">\n<h4>Algorithm and Parameter Options</h4>\n<p>These are options which affect the algorithmic behavior or starting\nstate of <tt>mcmcbpn</tt>.</p>\n<ul>\n<li><tt><span class=\"pre\">--burn-in=BURN_IN</span></tt>: the number of steps to take before recording\nstates in the Markov chain [default: <tt>1000000</tt>]</li>\n<li><tt><span class=\"pre\">--steps=STEPS</span></tt>: the number of steps through the Markov chain to\nobserve [default: <tt>10000000</tt>]</li>\n<li><tt><span class=\"pre\">--activity-threshold=ACTIVITY_THRESHOLD</span></tt>: set the (differential)\nexpression threshold at which a gene is considered active [default:\n<tt><span class=\"pre\">-log10(0.05)</span></tt>]</li>\n<li><tt><span class=\"pre\">--transition-ratio=TRANSITION_RATIO</span></tt>: The target ratio of proposed\nlink transitions to proposed parameter transitions [default: <tt>0.9</tt>]</li>\n<li><tt><span class=\"pre\">--fixed-distributions</span></tt>: use fixed distributions for link (and term)\nprior [implies <tt><span class=\"pre\">--free-parameters]</span></tt> (<strong>highly recommended</strong>)</li>\n<li><tt><span class=\"pre\">--free-parameters</span></tt>: parameters will be adjusted randomly, rather\nthan incrementally (<strong>recommended</strong>)</li>\n<li><tt><span class=\"pre\">--disable-swaps</span></tt>: disables swapping links as an option for\ntransitions (<strong>highly recommended</strong>; will become the default option in\nfuture releases)</li>\n</ul>\n</div>\n<div id=\"output-options\">\n<h4>Output Options</h4>\n<p>These are options which affect the output file paths and file formats\nfor <tt>mcmcbpn</tt>.</p>\n<ul>\n<li><tt><span class=\"pre\">--links-outfile=LINKS_OUTFILE</span></tt>: the file to which the links results\nshould be written [default: <tt>links_results.tsv</tt>]</li>\n<li><tt><span class=\"pre\">--parameters-outfile=PARAMETERS_OUTFILE</span></tt>: the file to which the\nparameters results should be written [default: parameter_results.tsv]</li>\n<li><tt><span class=\"pre\">--terms-outfile=TERMS_OUTFILE</span></tt>: the file to which the terms results\nshould be written [default: terms_results.tsv]</li>\n<li><tt><span class=\"pre\">--transitions-outfile=TRANSITIONS_OUTFILE</span></tt>: the file to which the\ntransitions data should be written [default: transitions.tsv]</li>\n<li><tt><span class=\"pre\">--detailed-transitions</span></tt>: transitions file includes full information\nabout each step\u2019s state (see also <tt><span class=\"pre\">--bzip2</span></tt> below, as this can\ndrastically increase the file size of the transitions outfile)</li>\n<li><tt><span class=\"pre\">--bzip2</span></tt>: compress transitions file using bzip2 (<strong>highly\nrecommended</strong>, the transitions file can consume a large amount of disk\nspace, in proportion to the number of steps)</li>\n<li><tt><span class=\"pre\">--record-frequencies</span></tt>: record the frequency of each state</li>\n<li><tt><span class=\"pre\">--frequencies-outfile=FREQUENCIES_OUTFILE</span></tt>: the file to which\nfrequency information should be written [default:\n<tt>state_frequencies.tsv</tt>]</li>\n<li><tt><span class=\"pre\">--logfile=LOGFILE</span></tt>: the file to which information for the run will\nbe logged [default: <tt><span class=\"pre\">mcmcbpn-TIMESTAMP.log</span></tt>]</li>\n</ul>\n</div>\n<div id=\"output\">\n<h4>Output</h4>\n<p>The two principal files output by <tt>mcmcbpn</tt> are the links outfile and\nthe parameters outfile.</p>\n<dl>\n<dt>Links File</dt>\n<dd>This TSV file contains three columns: <tt>term1</tt>, <tt>term2</tt>, and\n<tt>probability</tt>. <tt>term1</tt> and <tt>term2</tt> represent the two biological\nprocesses of a given link, and <tt>probability</tt> represents the\nprobability that link should exist in the final biological process\nnetwork (BPN) as determined by a given run of <tt>mcmcbpn</tt>.</dd>\n<dt>Parameters File</dt>\n<dd><p>This TSV file contains three columns: the first column, <tt>parameter</tt>,\nrepresents the name of the given parameter. Names include the\nfollowing:</p>\n<ul>\n<li><tt>link_false_neg</tt>: proportion of interactions not explained by the\nBPN that should be</li>\n<li><tt>link_false_pos</tt>: propotion of interactions explained by the BPN\nthat should not be</li>\n<li><tt>link_prior</tt>: the prior probability a link would be included in\nthe BPN at all</li>\n</ul>\n<p>The second column, <tt>value</tt>, shows a particular value for a given\nparameter. The third column, <tt>probability</tt>, gives the estimated\nprobability that the given <tt>parameter</tt> should assume the respective\n<tt>value</tt> in order to maximize the likelihood of the BPN.</p>\n</dd>\n</dl>\n<table id=\"id6\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id1\" rel=\"nofollow\">[1]</a></td><td><a href=\"http://dx.doi.org/10.1371/journal.pone.0005313\" rel=\"nofollow\">Dotan-Cohen, D., *et al.* \u201cBiological Process Linkage Networks.\u201d\nPLoS One. 2009.</a></td></tr>\n</tbody>\n</table>\n<table id=\"id7\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id2\" rel=\"nofollow\">[2]</a></td><td><a href=\"http://dx.doi.org/10.1371/journal.pone.0015247\" rel=\"nofollow\">Lasher, C., *et al.* \u201cDiscovering Networks of Perturbed\nBiological Processes in Hepatocyte Cultures.\u201d PLoS One. 2010.</a></td></tr>\n</tbody>\n</table>\n<table id=\"id8\">\n<col><col>\n<tbody>\n<tr><td>[3]</td><td><em>(<a href=\"#id4\" rel=\"nofollow\">1</a>, <a href=\"#id5\" rel=\"nofollow\">2</a>)</em> If your install fails during the installation of SciPy, try\nrunning <tt>pip install numpy</tt> (or local-install equivalent) prior to\ninstalling PyBPN.</td></tr>\n</tbody>\n</table>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 783852, "releases": {"1.0a1": [{"comment_text": "", "digests": {"md5": "4e8f4d7273d75ce8e86370270fb4de8d", "sha256": "0efaa7845e98f91c4cb7ce1a37c18aa4d43c1938e17cbfb098c892abea21848b"}, "downloads": -1, "filename": "BiologicalProcessNetworks-1.0a1.tar.gz", "has_sig": true, "md5_digest": "4e8f4d7273d75ce8e86370270fb4de8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65764, "upload_time": "2012-06-25T15:41:48", "upload_time_iso_8601": "2012-06-25T15:41:48.082718Z", "url": "https://files.pythonhosted.org/packages/bc/6d/377a7bfe7007c30b32f009f31e8193ba29580ccb2536b0766922ad37336b/BiologicalProcessNetworks-1.0a1.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "a83583e29076b219fb64fbe1f629ca50", "sha256": "b2c57c59b1131026302e5fff1b7bf199390e5d481e32f6103321ff589b447acb"}, "downloads": -1, "filename": "BiologicalProcessNetworks-1.0a1.zip", "has_sig": true, "md5_digest": "a83583e29076b219fb64fbe1f629ca50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 86946, "upload_time": "2012-06-25T15:41:49", "upload_time_iso_8601": "2012-06-25T15:41:49.282115Z", "url": "https://files.pythonhosted.org/packages/da/cd/4b3b43f83977821c59eaf267ce051db5bccaa12e46281f95c044bfc5c1cf/BiologicalProcessNetworks-1.0a1.zip", "yanked": false}], "1.0a2": [{"comment_text": "", "digests": {"md5": "9af8a6090ce1f7bd98b098d2f6d865d4", "sha256": "e17e9346ecf6cd8e226d9c4d6933bb0d4cb0abf2cecb17e386ecabe4b5b4ec41"}, "downloads": -1, "filename": "BiologicalProcessNetworks-1.0a2.tar.gz", "has_sig": true, "md5_digest": "9af8a6090ce1f7bd98b098d2f6d865d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65766, "upload_time": "2012-07-03T05:23:54", "upload_time_iso_8601": "2012-07-03T05:23:54.511540Z", "url": "https://files.pythonhosted.org/packages/75/6a/4e70b9cc6d4baf999614191e940e9bce469eb5dbde974ba7c6b9eda9ce2d/BiologicalProcessNetworks-1.0a2.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "95c476946309385daf8cbc4636cb82dd", "sha256": "01ee4958280e4f3b3e910a0169a5e048f39f78fed7ff3002b12ff919fe48ac0f"}, "downloads": -1, "filename": "BiologicalProcessNetworks-1.0a2.zip", "has_sig": true, "md5_digest": "95c476946309385daf8cbc4636cb82dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 86946, "upload_time": "2012-07-03T05:23:59", "upload_time_iso_8601": "2012-07-03T05:23:59.330849Z", "url": "https://files.pythonhosted.org/packages/c5/e6/67280a0b2054d3d079794149073dd0fc8670513f627f7fda18974b2600d0/BiologicalProcessNetworks-1.0a2.zip", "yanked": false}], "1.0a3": [{"comment_text": "", "digests": {"md5": "48c9b7d716122ba0d632edf8937c3bd5", "sha256": "971510ad62f9587c5c9a2b6c176671d20ad27684385705cf9dbc55986c74cce6"}, "downloads": -1, "filename": "BiologicalProcessNetworks-1.0a3.tar.gz", "has_sig": true, "md5_digest": "48c9b7d716122ba0d632edf8937c3bd5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65773, "upload_time": "2013-04-22T00:31:29", "upload_time_iso_8601": "2013-04-22T00:31:29.624615Z", "url": "https://files.pythonhosted.org/packages/c6/19/33681f95be781a4777540ec909d1c334ea7d7534ef0ac7841067980fe693/BiologicalProcessNetworks-1.0a3.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "36b9742dfc777016419692d9bd3a18d5", "sha256": "1f480fc4b9139be5abba072c4d3195cc54c4e392f4ede14d6f961a6596c56ec3"}, "downloads": -1, "filename": "BiologicalProcessNetworks-1.0a3.zip", "has_sig": true, "md5_digest": "36b9742dfc777016419692d9bd3a18d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 86953, "upload_time": "2013-04-22T00:31:33", "upload_time_iso_8601": "2013-04-22T00:31:33.808864Z", "url": "https://files.pythonhosted.org/packages/84/1d/fb756f59ce08156314e969d2f25c54c16296eaf635c2f2ede4203361b7f1/BiologicalProcessNetworks-1.0a3.zip", "yanked": false}], "1.0a4": [{"comment_text": "", "digests": {"md5": "f81061fbcd730a9f752c8129ccc7a5a4", "sha256": "78a93e8a38aa048b16a6f96537e51aae6700f76a193ef9bea6868310d1a7943f"}, "downloads": -1, "filename": "BiologicalProcessNetworks-1.0a4.tar.gz", "has_sig": true, "md5_digest": "f81061fbcd730a9f752c8129ccc7a5a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65793, "upload_time": "2013-04-22T01:30:25", "upload_time_iso_8601": "2013-04-22T01:30:25.536690Z", "url": "https://files.pythonhosted.org/packages/4f/fc/60dc081f85cd9282ba081fa0a4e8c6411daac86b89478290b2cc86ed6f78/BiologicalProcessNetworks-1.0a4.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "43418b30128ac42dc7f27c500cff04ce", "sha256": "9522afbdf41da56105686f600eeff70ec276ce0e7b382d72ff3ee06478917858"}, "downloads": -1, "filename": "BiologicalProcessNetworks-1.0a4.zip", "has_sig": true, "md5_digest": "43418b30128ac42dc7f27c500cff04ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 87004, "upload_time": "2013-04-22T01:30:32", "upload_time_iso_8601": "2013-04-22T01:30:32.885446Z", "url": "https://files.pythonhosted.org/packages/cd/46/96189043d8f0bde6e5602733abae4e948d10b9b87018458ca58087420294/BiologicalProcessNetworks-1.0a4.zip", "yanked": false}], "1.0a5": [{"comment_text": "", "digests": {"md5": "d3395bb423aec5470ab073473f8602cf", "sha256": "f9d911bd6817cf6db21558b5b65c049677dc504eae3f77ac1613348f79cbc5d4"}, "downloads": -1, "filename": "BiologicalProcessNetworks-1.0a5.tar.gz", "has_sig": true, "md5_digest": "d3395bb423aec5470ab073473f8602cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 87663, "upload_time": "2013-05-04T16:11:41", "upload_time_iso_8601": "2013-05-04T16:11:41.344096Z", "url": "https://files.pythonhosted.org/packages/c4/c5/0e6f775fb51d95f125accca6f7de89c5e39a6b7739edd3e5090d9ed346f5/BiologicalProcessNetworks-1.0a5.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0ddcc58d154dd1cafb87a17ffa7cf2e", "sha256": "db987a253005bf5c33721d7d8b2a1ec2ea8a8807d7c95d60e16d0ea960f2d452"}, "downloads": -1, "filename": "BiologicalProcessNetworks-1.0a5.zip", "has_sig": true, "md5_digest": "e0ddcc58d154dd1cafb87a17ffa7cf2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110301, "upload_time": "2013-05-04T16:11:45", "upload_time_iso_8601": "2013-05-04T16:11:45.047778Z", "url": "https://files.pythonhosted.org/packages/0e/57/9b977f0abc730342636862ed3db213caed551b4db887627d75faf201ceff/BiologicalProcessNetworks-1.0a5.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d3395bb423aec5470ab073473f8602cf", "sha256": "f9d911bd6817cf6db21558b5b65c049677dc504eae3f77ac1613348f79cbc5d4"}, "downloads": -1, "filename": "BiologicalProcessNetworks-1.0a5.tar.gz", "has_sig": true, "md5_digest": "d3395bb423aec5470ab073473f8602cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 87663, "upload_time": "2013-05-04T16:11:41", "upload_time_iso_8601": "2013-05-04T16:11:41.344096Z", "url": "https://files.pythonhosted.org/packages/c4/c5/0e6f775fb51d95f125accca6f7de89c5e39a6b7739edd3e5090d9ed346f5/BiologicalProcessNetworks-1.0a5.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0ddcc58d154dd1cafb87a17ffa7cf2e", "sha256": "db987a253005bf5c33721d7d8b2a1ec2ea8a8807d7c95d60e16d0ea960f2d452"}, "downloads": -1, "filename": "BiologicalProcessNetworks-1.0a5.zip", "has_sig": true, "md5_digest": "e0ddcc58d154dd1cafb87a17ffa7cf2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110301, "upload_time": "2013-05-04T16:11:45", "upload_time_iso_8601": "2013-05-04T16:11:45.047778Z", "url": "https://files.pythonhosted.org/packages/0e/57/9b977f0abc730342636862ed3db213caed551b4db887627d75faf201ceff/BiologicalProcessNetworks-1.0a5.zip", "yanked": false}], "timestamp": "Thu May  7 22:37:25 2020"}