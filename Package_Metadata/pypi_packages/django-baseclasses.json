{"info": {"author": "Greg Brown", "author_email": "greg@gregbrown.co.nz", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "django-baseclasses is a small set of helpers and abstract base model\nclasses for django.\n\nInstallation\n------------\n\n::\n\n    python ./setup.py install\n\nOr with pip:\n\n::\n\n    pip install django-baseclasses\n\nAbstract classes provided in ``baseclasses.models``\n---------------------------------------------------\n\n``DateAuditModel``\n^^^^^^^^^^^^^^^^^^\n\nStores a record of when the model was created and last changed, in the\n``creation_date`` and ``last_updated`` fields, orders on\n``creation_date``, and provides ``get_next`` and ``get_prev`` methods\nrespecting the ordering.\n\n``BaseContentModel``\n^^^^^^^^^^^^^^^^^^^^\n\nExtends ``DateAuditModel``, adding ``is_live`` and ``pub_date`` fields,\nand provides a ``live`` method on the default manager which returns only\nobjects with ``is_live`` set and a non-future ``pub_date``. Also orders\nby ``pub_date``, and provides ``next_live`` and ``prev_live`` methods\nwhich only cycle through \"live\" objects.\n\n``BaseImageModel``\n^^^^^^^^^^^^^^^^^^\n\nProvides ``caption``, ``image`` and ``sort_order`` fields. Orders on\n``sort_order``.\n\n``BaseModelWithImages``\n^^^^^^^^^^^^^^^^^^^^^^^\n\nParent model for use with a ``BaseImageModel`` with a ForeignKey to this\nmodel. Provides ``primary_image`` property which returns the first\nrelated image object, or ``None``. The ForeignKey's ``related_name``\nmust be \"image\\_set\"\n\n``BaseHierarchyModel``\n^^^^^^^^^^^^^^^^^^^^^^\n\nProvides ``parent`` field to create a simple hierarchy system, i.e.\ncategories and subcategories. Provides get\\_hierarchy method, which\nreturns a list of objects in the tree, from the top level to the\ncurrent.\n\nModel fields\n------------\n\n``baseclasses.fields.ConstrainedImageField``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nResizes the image on upload and overwrites the original. Use\n``max_dimensions`` argument to determine the resize behaviour.\n\nHelpers\n-------\n\n``baseclasses.util.next_or_prev_in_order``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nArguments: ``(instance, prev=False, qs=None, loop=False)``\n\nGet the next (or previous with prev=True) item for an instance, from the\ngiven queryset (which is assumed to contain instance), respecting\nqueryset ordering. If loop is True, return the first/last item when the\nend/start is reached.\n\n``baseclasses.admin.ContentModelAdminMixin``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nEnables (cache-safe) admin preview of non-live objects. Example\n\n::\n\n    @admin.register(MyModel)\n    class MyModelAdmin(ContentModelAdminMixin, admin.ModelAdmin):\n        ...\n\nPass the request to the model's ``live`` manager method to enable\npreview:\n\n::\n\n    def my_model_view(request, slug)\n        instance = get_object_or_404(MyModel.objects.live(request), slug=slug)\n        ...\n\nExample:\n--------\n\n::\n\n    # models.py\n\n    from django.db import models\n    from baseclasses.models import BaseContentModel, BaseModelWithImages, \\\n                                   BaseImageModel\n\n\n    class Article(BaseContentModel, BaseModelWithImages):\n        title = models.CharField(max_length=190) \n        text = models.TextField()\n        \n     \n    class ArticleImage(BaseImageModel):\n        article = models.ForeignKey(Article, related_name='image_set')\n        \n\nWith the above model definition, you can do the following:\n\n::\n\n    articles = Article.objects.live() # get queryset of all live articles\n    article = articles[0]\n    article.primary_image # get primary image (model instance) for the article\n    article.next_live # get next live article\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gregplaysguitar/django-baseclasses", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "django-baseclasses", "package_url": "https://pypi.org/project/django-baseclasses/", "platform": "any", "project_url": "https://pypi.org/project/django-baseclasses/", "project_urls": {"Homepage": "https://github.com/gregplaysguitar/django-baseclasses"}, "release_url": "https://pypi.org/project/django-baseclasses/1.0.9/", "requires_dist": null, "requires_python": "", "summary": "A set of reusable base classes and helpers for django", "version": "1.0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>django-baseclasses is a small set of helpers and abstract base model\nclasses for django.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>python ./setup.py install\n</pre>\n<p>Or with pip:</p>\n<pre>pip install django-baseclasses\n</pre>\n</div>\n<div id=\"abstract-classes-provided-in-baseclasses-models\">\n<h2>Abstract classes provided in <tt>baseclasses.models</tt></h2>\n<div id=\"dateauditmodel\">\n<h3><tt>DateAuditModel</tt></h3>\n<p>Stores a record of when the model was created and last changed, in the\n<tt>creation_date</tt> and <tt>last_updated</tt> fields, orders on\n<tt>creation_date</tt>, and provides <tt>get_next</tt> and <tt>get_prev</tt> methods\nrespecting the ordering.</p>\n</div>\n<div id=\"basecontentmodel\">\n<h3><tt>BaseContentModel</tt></h3>\n<p>Extends <tt>DateAuditModel</tt>, adding <tt>is_live</tt> and <tt>pub_date</tt> fields,\nand provides a <tt>live</tt> method on the default manager which returns only\nobjects with <tt>is_live</tt> set and a non-future <tt>pub_date</tt>. Also orders\nby <tt>pub_date</tt>, and provides <tt>next_live</tt> and <tt>prev_live</tt> methods\nwhich only cycle through \u201clive\u201d objects.</p>\n</div>\n<div id=\"baseimagemodel\">\n<h3><tt>BaseImageModel</tt></h3>\n<p>Provides <tt>caption</tt>, <tt>image</tt> and <tt>sort_order</tt> fields. Orders on\n<tt>sort_order</tt>.</p>\n</div>\n<div id=\"basemodelwithimages\">\n<h3><tt>BaseModelWithImages</tt></h3>\n<p>Parent model for use with a <tt>BaseImageModel</tt> with a ForeignKey to this\nmodel. Provides <tt>primary_image</tt> property which returns the first\nrelated image object, or <tt>None</tt>. The ForeignKey\u2019s <tt>related_name</tt>\nmust be \u201cimage_set\u201d</p>\n</div>\n<div id=\"basehierarchymodel\">\n<h3><tt>BaseHierarchyModel</tt></h3>\n<p>Provides <tt>parent</tt> field to create a simple hierarchy system, i.e.\ncategories and subcategories. Provides get_hierarchy method, which\nreturns a list of objects in the tree, from the top level to the\ncurrent.</p>\n</div>\n</div>\n<div id=\"model-fields\">\n<h2>Model fields</h2>\n<h2 id=\"baseclasses-fields-constrainedimagefield\"><span class=\"section-subtitle\"><tt>baseclasses.fields.ConstrainedImageField</tt></span></h2>\n<p>Resizes the image on upload and overwrites the original. Use\n<tt>max_dimensions</tt> argument to determine the resize behaviour.</p>\n</div>\n<div id=\"helpers\">\n<h2>Helpers</h2>\n<div id=\"baseclasses-util-next-or-prev-in-order\">\n<h3><tt>baseclasses.util.next_or_prev_in_order</tt></h3>\n<p>Arguments: <tt>(instance, prev=False, qs=None, loop=False)</tt></p>\n<p>Get the next (or previous with prev=True) item for an instance, from the\ngiven queryset (which is assumed to contain instance), respecting\nqueryset ordering. If loop is True, return the first/last item when the\nend/start is reached.</p>\n</div>\n<div id=\"baseclasses-admin-contentmodeladminmixin\">\n<h3><tt>baseclasses.admin.ContentModelAdminMixin</tt></h3>\n<p>Enables (cache-safe) admin preview of non-live objects. Example</p>\n<pre>@admin.register(MyModel)\nclass MyModelAdmin(ContentModelAdminMixin, admin.ModelAdmin):\n    ...\n</pre>\n<p>Pass the request to the model\u2019s <tt>live</tt> manager method to enable\npreview:</p>\n<pre>def my_model_view(request, slug)\n    instance = get_object_or_404(MyModel.objects.live(request), slug=slug)\n    ...\n</pre>\n</div>\n</div>\n<div id=\"example\">\n<h2>Example:</h2>\n<pre># models.py\n\nfrom django.db import models\nfrom baseclasses.models import BaseContentModel, BaseModelWithImages, \\\n                               BaseImageModel\n\n\nclass Article(BaseContentModel, BaseModelWithImages):\n    title = models.CharField(max_length=190)\n    text = models.TextField()\n\n\nclass ArticleImage(BaseImageModel):\n    article = models.ForeignKey(Article, related_name='image_set')\n</pre>\n<p>With the above model definition, you can do the following:</p>\n<pre>articles = Article.objects.live() # get queryset of all live articles\narticle = articles[0]\narticle.primary_image # get primary image (model instance) for the article\narticle.next_live # get next live article\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2833289, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "c2b25899f35189de9d0ee9d11dcf534b", "sha256": "3f1eba7306bef5ed4368a4bbf26465eceabfe090f6008e95d638a9e49edade2e"}, "downloads": -1, "filename": "django-baseclasses-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c2b25899f35189de9d0ee9d11dcf534b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5097, "upload_time": "2016-03-15T21:49:26", "upload_time_iso_8601": "2016-03-15T21:49:26.097640Z", "url": "https://files.pythonhosted.org/packages/bf/6a/524047346420d23116e2966c2ac190500515f84e3fd04a568af75e1d77bf/django-baseclasses-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "12b6ee158ceb0303b587e5f618198d0b", "sha256": "a83d69c37bb1ac01babd47c114a662cc069e6d9ed8834630ed1f020b0cf7b1d1"}, "downloads": -1, "filename": "django-baseclasses-1.0.1.tar.gz", "has_sig": false, "md5_digest": "12b6ee158ceb0303b587e5f618198d0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5102, "upload_time": "2016-03-15T21:52:49", "upload_time_iso_8601": "2016-03-15T21:52:49.218359Z", "url": "https://files.pythonhosted.org/packages/fe/46/8a55ced94d02e4b0cd19eea32c010fa2fc140ad15f0c7d7b0fbd0b5ae0a6/django-baseclasses-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "f63cdb528538aa46a95c870efea87307", "sha256": "f70fbc783483308e45283ae03ae7c7a4ceec0cc38ae0e096352fddb4bcfdc7c8"}, "downloads": -1, "filename": "django-baseclasses-1.0.2.tar.gz", "has_sig": false, "md5_digest": "f63cdb528538aa46a95c870efea87307", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5190, "upload_time": "2016-03-15T21:59:29", "upload_time_iso_8601": "2016-03-15T21:59:29.896691Z", "url": "https://files.pythonhosted.org/packages/2b/1b/d9ea84c4db3589a11ba9a58e81316234f0b759601a473b83968f7ff153ec/django-baseclasses-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "47f49df2acaaa47a95f1ff0665bb5808", "sha256": "cbb8bd68b4009fe420fc2afc611ad1e8cb35273a6398f700e58fcc2a5a4818db"}, "downloads": -1, "filename": "django-baseclasses-1.0.3.tar.gz", "has_sig": false, "md5_digest": "47f49df2acaaa47a95f1ff0665bb5808", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6259, "upload_time": "2016-03-15T22:13:30", "upload_time_iso_8601": "2016-03-15T22:13:30.395964Z", "url": "https://files.pythonhosted.org/packages/0b/a6/4c59fd8e1829c6171f93964fabf0a2178ba166ba9c9bf3bd19310fe05de2/django-baseclasses-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "2820cf0d83f03e33861eeb6d72a519ae", "sha256": "4b4293ba04126b240a103b1d54232f712834d3b33e51f0529504011578aef12a"}, "downloads": -1, "filename": "django-baseclasses-1.0.4.tar.gz", "has_sig": false, "md5_digest": "2820cf0d83f03e33861eeb6d72a519ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6517, "upload_time": "2016-09-09T02:43:15", "upload_time_iso_8601": "2016-09-09T02:43:15.124376Z", "url": "https://files.pythonhosted.org/packages/c2/72/a94c782bc0b89bc211202249a068e82d7c7b6fff6ef4cb0ed6fea2214a5b/django-baseclasses-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "411fd990f8880aa53d1e9748fd15404c", "sha256": "faa52518438fd203222d5239bf0553ac0037f318f61cb6c0091721ed1ef31207"}, "downloads": -1, "filename": "django-baseclasses-1.0.5.tar.gz", "has_sig": false, "md5_digest": "411fd990f8880aa53d1e9748fd15404c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6481, "upload_time": "2016-11-30T23:48:55", "upload_time_iso_8601": "2016-11-30T23:48:55.128988Z", "url": "https://files.pythonhosted.org/packages/84/14/3491142e36ad16cda031daf1f13ed7b8d55ca2f2db172f26781607f74f69/django-baseclasses-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "a882281949fb661a22f91c5314909bcc", "sha256": "4d92bc83c5f8874e1dd463882ebbd3711a0f87776475aaafa0a86529e6a2d41a"}, "downloads": -1, "filename": "django-baseclasses-1.0.6.tar.gz", "has_sig": false, "md5_digest": "a882281949fb661a22f91c5314909bcc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6967, "upload_time": "2017-03-01T03:22:05", "upload_time_iso_8601": "2017-03-01T03:22:05.498370Z", "url": "https://files.pythonhosted.org/packages/42/4c/71aa9760edb5972c92161939a509d1e69dbf07e7786d84e07d676054c5de/django-baseclasses-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "0d273d4397d92bb98dd34935f5fe4292", "sha256": "78f08bf3a22d8b711e178c722a2c8e870e8e78dafb97658aed26592a7e543c64"}, "downloads": -1, "filename": "django-baseclasses-1.0.7.tar.gz", "has_sig": false, "md5_digest": "0d273d4397d92bb98dd34935f5fe4292", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7064, "upload_time": "2017-03-08T23:03:19", "upload_time_iso_8601": "2017-03-08T23:03:19.126289Z", "url": "https://files.pythonhosted.org/packages/6d/7f/600a752f8db5c9997c831ab5dd54c7c9dd62fc6dbbe92f9a2f4b4c37516a/django-baseclasses-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "8c59b59a771b3156a059b93cd614fb78", "sha256": "82263f18cb885bdfce6c3914bf28df40aad5462f0e270f2dbba974b78a6be4fa"}, "downloads": -1, "filename": "django-baseclasses-1.0.8.tar.gz", "has_sig": false, "md5_digest": "8c59b59a771b3156a059b93cd614fb78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6485, "upload_time": "2017-04-24T00:09:37", "upload_time_iso_8601": "2017-04-24T00:09:37.228427Z", "url": "https://files.pythonhosted.org/packages/9b/20/08f42fd6f50fed7d8af41f66b7523f3546a014fb1fc74972277937930a1b/django-baseclasses-1.0.8.tar.gz", "yanked": false}], "1.0.9": [{"comment_text": "", "digests": {"md5": "9862f985f65a29404e88d7b4e577e81f", "sha256": "e60f0f30c743c56aec075be443e7f0d08b1b894081cb56534b3fa9712273b4cd"}, "downloads": -1, "filename": "django-baseclasses-1.0.9.tar.gz", "has_sig": false, "md5_digest": "9862f985f65a29404e88d7b4e577e81f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6490, "upload_time": "2017-04-27T00:34:12", "upload_time_iso_8601": "2017-04-27T00:34:12.181729Z", "url": "https://files.pythonhosted.org/packages/4a/37/5db98fad96f0cb7de165d4d185f0c3dc7177c14dcb12a0b3f660af1419cb/django-baseclasses-1.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9862f985f65a29404e88d7b4e577e81f", "sha256": "e60f0f30c743c56aec075be443e7f0d08b1b894081cb56534b3fa9712273b4cd"}, "downloads": -1, "filename": "django-baseclasses-1.0.9.tar.gz", "has_sig": false, "md5_digest": "9862f985f65a29404e88d7b4e577e81f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6490, "upload_time": "2017-04-27T00:34:12", "upload_time_iso_8601": "2017-04-27T00:34:12.181729Z", "url": "https://files.pythonhosted.org/packages/4a/37/5db98fad96f0cb7de165d4d185f0c3dc7177c14dcb12a0b3f660af1419cb/django-baseclasses-1.0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:28 2020"}