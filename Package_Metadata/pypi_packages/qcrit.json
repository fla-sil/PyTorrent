{"info": {"author": "Tim Gianitsos", "author_email": "contact@qcrit.org", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "Easily extract features from texts, and run machine learning algorithms on them. Write your own features, use ours, or do both!\n\nhttps://www.qcrit.org\n\n## Installation\nWith `pip`:\n```bash\npip install qcrit\n```\nWith `pipenv`\n```bash\npipenv install qcrit\n```\n## About\n\nThe qcrit package contains utilities to facilitate processing and analyzing literature.\n\nTo get started, just replace `'your-directory-name'` with the name of a directory of `.txt` files. Everything else is taken care of!\n```python\nfrom qcrit.extract_features import main\nfrom qcrit.textual_feature import setup_tokenizers\nimport qcrit.features.universal_features\nsetup_tokenizers(terminal_punctuation=('.', '!', '?'))\nmain(\n\tcorpus_dir='your-directory-name', file_extension_to_parse_function={'txt': lambda filename: open(filename).read()}\n)\n```\n\n### Writing Your Own Features\n\nA feature is a number that results from processing literature. An example of a feature might be the number of definite articles, the mean sentence length, or the fraction of interrogative sentences. The word \"feature\" can also refer to a python function that computes such a value.\n\nNormally to compute features, you must 1) obtain a corpus of texts, 2) traverse each text in the corpus, 3) parse the text into tokens, 4) write logic to calculate features, and 5) output the results to the console or to a file. Also, this will run slowly unless you 6) cache tokenized text for features that use the same tokens.\n\nWith the `textual_feature` decorator, steps (2), (3), (4), (5), and (6) are abstracted away - you just need (1) to supply the corpus.\n\nOnce you have written a feature as a `python` function, label it with the decorator `textual_feature`. Your feature must have exactly one parameter which is assumed to be the parsed text of a file.\n```python\nfrom qcrit.textual_feature import textual_feature\n@textual_feature()\ndef count_definite_article(text):\n\treturn text.count('the')\n```\n\nThe `textual_feature` decorator takes an argument that represents the type of tokenization.\n\nThere are four supported tokenization_types: `'sentences'`, `'words'`, `'sentence_words'` and `None`. This tells the function in \nwhat format it will receive the `'text'` parameter.\n- If `None`, the function will receive the text parameter as a string. \n- If `'sentences'`, the function will receive the text parameter as a list of sentences, each as a string\n- If `'words'`, the function will receive the text parameter as a list of words\n- If `'sentence_words'`, the function will recieve the text parameter as a list of sentences, each as a list of words\n\n```python\nfrom functools import reduce\n@textual_feature(tokenize_type='sentences')\ndef mean_sentence_len(text):\n\tsen_len = reduce(lambda cur_len, cur_sen: cur_len + len(cur_sen), text, 0)\n\tnum_sentences = len(text)\n\treturn sen_len / num_sentences\n```\n\n### Extracting Features\n\nUse `qcrit.extract_features.main` to run all the functions labeled with the decorators and output results into a file.\n\n`corpus_dir` - the directory to search for files containing texts, this will traverse all sub-directories as well\n\n`file_extension_to_parse_function` - map from file extension (e.g. 'txt', 'tess') of texts that you would like to parse to a function directing how to parse it\n\n`output_file` - the file to output the results into, created to be analyzed during machine learning phase\n\nIn order for sentence tokenization to work correctly, `setup_tokenizers()` must be called with the \nterminal punctuation marks of the language being analyzed. You can also optionally supply the name of the language as well. If data exists about how to parse the language, this may improve sentence tokenization.\n\n```python\nfrom qcrit.extract_features import main, parse_tess\nfrom qcrit.textual_feature import setup_tokenizers\nfrom somewhere_else import count_definite_article, mean_sentence_len\nsetup_tokenizers(terminal_punctuation=('.', '!', '?'), language='greek')\nmain(\n\tcorpus_dir='demo', file_extension_to_parse_function={'tess': parse_tess}, output_file='output.pickle'\n)\n\n```\nOutput:\n```bash\nExtracting features from .tess files in demo/\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 4/4 [00:00<00:00,  8.67it/s]\nFeature mining complete. Attempting to write feature results to \"output.pickle\"...\nSuccess!\n\n\nFeature mining elapsed time: 1.4919 seconds\n\n```\n\n### Analysis\n\nUse the `@model_analyzer()` decorator to label functions that analyze machine learning models\n\nInvoke `analyze_models.main('output.pickle', 'classifications.csv')` to\nrun all functions labeled with the `@model_analyzer()` decorator. To run only one function, include\nthe name of the function as the third parameter to analyze_models.main()\n\noutput.pickle: Now that the features have been extracted and output into output.pickle, we\ncan use machine learning models on them.\n\nclassifications.csv: The file classifications.csv contains the name of the file in the first column\nand the particular classification (prose or verse) in the second column for every file in the corpus.\n\n```python\nimport qcrit.analyze_models\nfrom qcrit.model_analyzer import model_analyzer\nfrom sklearn import ensemble\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\n\n@model_analyzer()\ndef feature_rankings(data, target, file_names, feature_names, labels_key):\n\tprint('-' * 40 + '\\nRandom Forest Classifier feature rankings\\n')\n\tfeatures_train, features_test, labels_train, _ = train_test_split(data, target, test_size=0.5, random_state=0)\n\tclf = ensemble.RandomForestClassifier(random_state=0, n_estimators=10)\n\tclf.fit(features_train, labels_train)\n\tclf.predict(features_test)\n\n\t#Display features in order of importance\n\tprint('Feature importances:')\n\tfor tup in sorted(zip(feature_names, clf.feature_importances_), key=lambda s: -s[1]):\n\t\tprint('\\t%f: %s' % (tup[1], tup[0]))\n\n@model_analyzer()\ndef classifier_accuracy(data, target, file_names, feature_names, labels_key):\n\tprint('-' * 40 + '\\nRandom Forest Classifier accuracy\\n')\n\tfeatures_train, features_test, labels_train, labels_test = train_test_split(\n\t\tdata, target, test_size=0.5, random_state=0\n\t)\n\tclf = ensemble.RandomForestClassifier(random_state=0, n_estimators=10)\n\tclf.fit(features_train, labels_train)\n\tresults = clf.predict(features_test)\n\n\tprint('Stats:')\n\tprint(\n\t\t'\\tNumber correct: ' + str(accuracy_score(labels_test, results, normalize=False)) +\n\t\t' / ' + str(len(results))\n\t)\n\tprint('\\tPercentage correct: ' + str(accuracy_score(labels_test, results) * 100) + '%')\n\n@model_analyzer()\ndef misclassified_texts(data, target, file_names, feature_names, labels_key):\n\tprint('-' * 40 + '\\nRandom Forest Classifier misclassified texts\\n')\n\tfeatures_train, features_test, labels_train, labels_test, idx_train, idx_test = train_test_split(\n\t\tdata, target, range(len(target)), test_size=0.5, random_state=0\n\t)\n\tprint('Train texts:\\n\\t' + '\\n\\t'.join(file_names[i] for i in idx_train) + '\\n')\n\tprint('Test texts:\\n\\t' + '\\n\\t'.join(file_names[i] for i in idx_test) + '\\n')\n\tclf = ensemble.RandomForestClassifier(random_state=0, n_estimators=10)\n\tclf.fit(features_train, labels_train)\n\tresults = clf.predict(features_test)\n\n\tprint('Misclassifications:')\n\tfor i, _ in enumerate(results):\n\t\tif results[i] != labels_test[i]:\n\t\t\tprint('\\t' + file_names[idx_test[i]])\n\nqcrit.analyze_models.main(\n\t'output.pickle', 'classifications.csv'\n)\n```\nOutput:\n```\n----------------------------------------\nRandom Forest Classifier feature rankings\n\nFeature importances:\n\t0.400000: num_conjunctions\n\t0.400000: num_interrogatives\n\t0.200000: mean_sentence_length\n\n\nElapsed time: 0.0122 seconds\n\n----------------------------------------\nRandom Forest Classifier accuracy\n\nStats:\n\tNumber correct: 1 / 2\n\tPercentage correct: 50.0%\n\n\nElapsed time: 0.0085 seconds\n\n----------------------------------------\nRandom Forest Classifier misclassified texts\n\nTrain texts:\n\tdemo/aristotle.poetics.tess\n\tdemo/aristophanes.ecclesiazusae.tess\n\nTest texts:\n\tdemo/euripides.heracles.tess\n\tdemo/plato.respublica.part.1.tess\n\nMisclassifications:\n\tdemo/plato.respublica.part.1.tess\n\n\nElapsed time: 0.0082 seconds\n```\n\n## Development\n1. Ensure that you have `pipenv` installed. Also, ensure that you have a version of `python` installed that matches the version in the `Pipfile`.\n1. Setup a virtual environment and install the necessary dependencies:\n\t```bash\n\tPIPENV_VENV_IN_PROJECT=true pipenv install --dev\n\t```\n1. Activate the virtual environment:\n\t```bash\n\tpipenv shell\n\t```\n\tNow, `python` commands will use the dependencies and `python` version from the virtual environment. Use `exit` to leave the virtual environment, and use `pipenv shell` while in the project directory to activate it again.\n\n### Demo\n```bash\npython demo/demo.py\n```\n\n## Submission\nThe following commands will submit the package to the `Python Package Index`. Before running them, it may be necessary to increment the version number in `__init__.py` and to delete any previously generated `dist/`, `build/`, and `egg-info` directories if they exist.\n```bash\npython setup.py bdist_wheel sdist\ntwine upload dist/*\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.qcrit.org", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "qcrit", "package_url": "https://pypi.org/project/qcrit/", "platform": "", "project_url": "https://pypi.org/project/qcrit/", "project_urls": {"Homepage": "https://www.qcrit.org", "Source Code": "https://github.com/QuantitativeCriticismLab/qcrit"}, "release_url": "https://pypi.org/project/qcrit/0.0.22/", "requires_dist": ["numpy", "nltk", "tqdm"], "requires_python": "", "summary": "Easily extract features from texts, and run machine learning algorithms on them. Write your own features, use ours, or do both!", "version": "0.0.22", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Easily extract features from texts, and run machine learning algorithms on them. Write your own features, use ours, or do both!</p>\n<p><a href=\"https://www.qcrit.org\" rel=\"nofollow\">https://www.qcrit.org</a></p>\n<h2>Installation</h2>\n<p>With <code>pip</code>:</p>\n<pre>pip install qcrit\n</pre>\n<p>With <code>pipenv</code></p>\n<pre>pipenv install qcrit\n</pre>\n<h2>About</h2>\n<p>The qcrit package contains utilities to facilitate processing and analyzing literature.</p>\n<p>To get started, just replace <code>'your-directory-name'</code> with the name of a directory of <code>.txt</code> files. Everything else is taken care of!</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">qcrit.extract_features</span> <span class=\"kn\">import</span> <span class=\"n\">main</span>\n<span class=\"kn\">from</span> <span class=\"nn\">qcrit.textual_feature</span> <span class=\"kn\">import</span> <span class=\"n\">setup_tokenizers</span>\n<span class=\"kn\">import</span> <span class=\"nn\">qcrit.features.universal_features</span>\n<span class=\"n\">setup_tokenizers</span><span class=\"p\">(</span><span class=\"n\">terminal_punctuation</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'.'</span><span class=\"p\">,</span> <span class=\"s1\">'!'</span><span class=\"p\">,</span> <span class=\"s1\">'?'</span><span class=\"p\">))</span>\n<span class=\"n\">main</span><span class=\"p\">(</span>\n\t<span class=\"n\">corpus_dir</span><span class=\"o\">=</span><span class=\"s1\">'your-directory-name'</span><span class=\"p\">,</span> <span class=\"n\">file_extension_to_parse_function</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'txt'</span><span class=\"p\">:</span> <span class=\"k\">lambda</span> <span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()}</span>\n<span class=\"p\">)</span>\n</pre>\n<h3>Writing Your Own Features</h3>\n<p>A feature is a number that results from processing literature. An example of a feature might be the number of definite articles, the mean sentence length, or the fraction of interrogative sentences. The word \"feature\" can also refer to a python function that computes such a value.</p>\n<p>Normally to compute features, you must 1) obtain a corpus of texts, 2) traverse each text in the corpus, 3) parse the text into tokens, 4) write logic to calculate features, and 5) output the results to the console or to a file. Also, this will run slowly unless you 6) cache tokenized text for features that use the same tokens.</p>\n<p>With the <code>textual_feature</code> decorator, steps (2), (3), (4), (5), and (6) are abstracted away - you just need (1) to supply the corpus.</p>\n<p>Once you have written a feature as a <code>python</code> function, label it with the decorator <code>textual_feature</code>. Your feature must have exactly one parameter which is assumed to be the parsed text of a file.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">qcrit.textual_feature</span> <span class=\"kn\">import</span> <span class=\"n\">textual_feature</span>\n<span class=\"nd\">@textual_feature</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">count_definite_article</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">):</span>\n\t<span class=\"k\">return</span> <span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"s1\">'the'</span><span class=\"p\">)</span>\n</pre>\n<p>The <code>textual_feature</code> decorator takes an argument that represents the type of tokenization.</p>\n<p>There are four supported tokenization_types: <code>'sentences'</code>, <code>'words'</code>, <code>'sentence_words'</code> and <code>None</code>. This tells the function in\nwhat format it will receive the <code>'text'</code> parameter.</p>\n<ul>\n<li>If <code>None</code>, the function will receive the text parameter as a string.</li>\n<li>If <code>'sentences'</code>, the function will receive the text parameter as a list of sentences, each as a string</li>\n<li>If <code>'words'</code>, the function will receive the text parameter as a list of words</li>\n<li>If <code>'sentence_words'</code>, the function will recieve the text parameter as a list of sentences, each as a list of words</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">functools</span> <span class=\"kn\">import</span> <span class=\"n\">reduce</span>\n<span class=\"nd\">@textual_feature</span><span class=\"p\">(</span><span class=\"n\">tokenize_type</span><span class=\"o\">=</span><span class=\"s1\">'sentences'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">mean_sentence_len</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">):</span>\n\t<span class=\"n\">sen_len</span> <span class=\"o\">=</span> <span class=\"n\">reduce</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">cur_len</span><span class=\"p\">,</span> <span class=\"n\">cur_sen</span><span class=\"p\">:</span> <span class=\"n\">cur_len</span> <span class=\"o\">+</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">cur_sen</span><span class=\"p\">),</span> <span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\t<span class=\"n\">num_sentences</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span>\n\t<span class=\"k\">return</span> <span class=\"n\">sen_len</span> <span class=\"o\">/</span> <span class=\"n\">num_sentences</span>\n</pre>\n<h3>Extracting Features</h3>\n<p>Use <code>qcrit.extract_features.main</code> to run all the functions labeled with the decorators and output results into a file.</p>\n<p><code>corpus_dir</code> - the directory to search for files containing texts, this will traverse all sub-directories as well</p>\n<p><code>file_extension_to_parse_function</code> - map from file extension (e.g. 'txt', 'tess') of texts that you would like to parse to a function directing how to parse it</p>\n<p><code>output_file</code> - the file to output the results into, created to be analyzed during machine learning phase</p>\n<p>In order for sentence tokenization to work correctly, <code>setup_tokenizers()</code> must be called with the\nterminal punctuation marks of the language being analyzed. You can also optionally supply the name of the language as well. If data exists about how to parse the language, this may improve sentence tokenization.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">qcrit.extract_features</span> <span class=\"kn\">import</span> <span class=\"n\">main</span><span class=\"p\">,</span> <span class=\"n\">parse_tess</span>\n<span class=\"kn\">from</span> <span class=\"nn\">qcrit.textual_feature</span> <span class=\"kn\">import</span> <span class=\"n\">setup_tokenizers</span>\n<span class=\"kn\">from</span> <span class=\"nn\">somewhere_else</span> <span class=\"kn\">import</span> <span class=\"n\">count_definite_article</span><span class=\"p\">,</span> <span class=\"n\">mean_sentence_len</span>\n<span class=\"n\">setup_tokenizers</span><span class=\"p\">(</span><span class=\"n\">terminal_punctuation</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'.'</span><span class=\"p\">,</span> <span class=\"s1\">'!'</span><span class=\"p\">,</span> <span class=\"s1\">'?'</span><span class=\"p\">),</span> <span class=\"n\">language</span><span class=\"o\">=</span><span class=\"s1\">'greek'</span><span class=\"p\">)</span>\n<span class=\"n\">main</span><span class=\"p\">(</span>\n\t<span class=\"n\">corpus_dir</span><span class=\"o\">=</span><span class=\"s1\">'demo'</span><span class=\"p\">,</span> <span class=\"n\">file_extension_to_parse_function</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'tess'</span><span class=\"p\">:</span> <span class=\"n\">parse_tess</span><span class=\"p\">},</span> <span class=\"n\">output_file</span><span class=\"o\">=</span><span class=\"s1\">'output.pickle'</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre>Extracting features from .tess files in demo/\n<span class=\"m\">100</span>%<span class=\"p\">|</span>\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588<span class=\"p\">|</span> <span class=\"m\">4</span>/4 <span class=\"o\">[</span><span class=\"m\">00</span>:00&lt;<span class=\"m\">00</span>:00,  <span class=\"m\">8</span>.67it/s<span class=\"o\">]</span>\nFeature mining complete. Attempting to write feature results to <span class=\"s2\">\"output.pickle\"</span>...\nSuccess!\n\n\nFeature mining elapsed time: <span class=\"m\">1</span>.4919 seconds\n</pre>\n<h3>Analysis</h3>\n<p>Use the <code>@model_analyzer()</code> decorator to label functions that analyze machine learning models</p>\n<p>Invoke <code>analyze_models.main('output.pickle', 'classifications.csv')</code> to\nrun all functions labeled with the <code>@model_analyzer()</code> decorator. To run only one function, include\nthe name of the function as the third parameter to analyze_models.main()</p>\n<p>output.pickle: Now that the features have been extracted and output into output.pickle, we\ncan use machine learning models on them.</p>\n<p>classifications.csv: The file classifications.csv contains the name of the file in the first column\nand the particular classification (prose or verse) in the second column for every file in the corpus.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">qcrit.analyze_models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">qcrit.model_analyzer</span> <span class=\"kn\">import</span> <span class=\"n\">model_analyzer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn</span> <span class=\"kn\">import</span> <span class=\"n\">ensemble</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">train_test_split</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.metrics</span> <span class=\"kn\">import</span> <span class=\"n\">accuracy_score</span>\n\n<span class=\"nd\">@model_analyzer</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">feature_rankings</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">,</span> <span class=\"n\">file_names</span><span class=\"p\">,</span> <span class=\"n\">feature_names</span><span class=\"p\">,</span> <span class=\"n\">labels_key</span><span class=\"p\">):</span>\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'-'</span> <span class=\"o\">*</span> <span class=\"mi\">40</span> <span class=\"o\">+</span> <span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">Random Forest Classifier feature rankings</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\t<span class=\"n\">features_train</span><span class=\"p\">,</span> <span class=\"n\">features_test</span><span class=\"p\">,</span> <span class=\"n\">labels_train</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">train_test_split</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">,</span> <span class=\"n\">test_size</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\t<span class=\"n\">clf</span> <span class=\"o\">=</span> <span class=\"n\">ensemble</span><span class=\"o\">.</span><span class=\"n\">RandomForestClassifier</span><span class=\"p\">(</span><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">n_estimators</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\t<span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">features_train</span><span class=\"p\">,</span> <span class=\"n\">labels_train</span><span class=\"p\">)</span>\n\t<span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">features_test</span><span class=\"p\">)</span>\n\n\t<span class=\"c1\">#Display features in order of importance</span>\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Feature importances:'</span><span class=\"p\">)</span>\n\t<span class=\"k\">for</span> <span class=\"n\">tup</span> <span class=\"ow\">in</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">feature_names</span><span class=\"p\">,</span> <span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">feature_importances_</span><span class=\"p\">),</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"n\">s</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]):</span>\n\t\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"se\">\\t</span><span class=\"si\">%f</span><span class=\"s1\">: </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n\n<span class=\"nd\">@model_analyzer</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">classifier_accuracy</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">,</span> <span class=\"n\">file_names</span><span class=\"p\">,</span> <span class=\"n\">feature_names</span><span class=\"p\">,</span> <span class=\"n\">labels_key</span><span class=\"p\">):</span>\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'-'</span> <span class=\"o\">*</span> <span class=\"mi\">40</span> <span class=\"o\">+</span> <span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">Random Forest Classifier accuracy</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\t<span class=\"n\">features_train</span><span class=\"p\">,</span> <span class=\"n\">features_test</span><span class=\"p\">,</span> <span class=\"n\">labels_train</span><span class=\"p\">,</span> <span class=\"n\">labels_test</span> <span class=\"o\">=</span> <span class=\"n\">train_test_split</span><span class=\"p\">(</span>\n\t\t<span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">,</span> <span class=\"n\">test_size</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n\t<span class=\"p\">)</span>\n\t<span class=\"n\">clf</span> <span class=\"o\">=</span> <span class=\"n\">ensemble</span><span class=\"o\">.</span><span class=\"n\">RandomForestClassifier</span><span class=\"p\">(</span><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">n_estimators</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\t<span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">features_train</span><span class=\"p\">,</span> <span class=\"n\">labels_train</span><span class=\"p\">)</span>\n\t<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">features_test</span><span class=\"p\">)</span>\n\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Stats:'</span><span class=\"p\">)</span>\n\t<span class=\"nb\">print</span><span class=\"p\">(</span>\n\t\t<span class=\"s1\">'</span><span class=\"se\">\\t</span><span class=\"s1\">Number correct: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">accuracy_score</span><span class=\"p\">(</span><span class=\"n\">labels_test</span><span class=\"p\">,</span> <span class=\"n\">results</span><span class=\"p\">,</span> <span class=\"n\">normalize</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">))</span> <span class=\"o\">+</span>\n\t\t<span class=\"s1\">' / '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">))</span>\n\t<span class=\"p\">)</span>\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"se\">\\t</span><span class=\"s1\">Percentage correct: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">accuracy_score</span><span class=\"p\">(</span><span class=\"n\">labels_test</span><span class=\"p\">,</span> <span class=\"n\">results</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">100</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">'%'</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@model_analyzer</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">misclassified_texts</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">,</span> <span class=\"n\">file_names</span><span class=\"p\">,</span> <span class=\"n\">feature_names</span><span class=\"p\">,</span> <span class=\"n\">labels_key</span><span class=\"p\">):</span>\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'-'</span> <span class=\"o\">*</span> <span class=\"mi\">40</span> <span class=\"o\">+</span> <span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">Random Forest Classifier misclassified texts</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\t<span class=\"n\">features_train</span><span class=\"p\">,</span> <span class=\"n\">features_test</span><span class=\"p\">,</span> <span class=\"n\">labels_train</span><span class=\"p\">,</span> <span class=\"n\">labels_test</span><span class=\"p\">,</span> <span class=\"n\">idx_train</span><span class=\"p\">,</span> <span class=\"n\">idx_test</span> <span class=\"o\">=</span> <span class=\"n\">train_test_split</span><span class=\"p\">(</span>\n\t\t<span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">,</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"p\">)),</span> <span class=\"n\">test_size</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n\t<span class=\"p\">)</span>\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Train texts:</span><span class=\"se\">\\n\\t</span><span class=\"s1\">'</span> <span class=\"o\">+</span> <span class=\"s1\">'</span><span class=\"se\">\\n\\t</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">file_names</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">idx_train</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Test texts:</span><span class=\"se\">\\n\\t</span><span class=\"s1\">'</span> <span class=\"o\">+</span> <span class=\"s1\">'</span><span class=\"se\">\\n\\t</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">file_names</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">idx_test</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\t<span class=\"n\">clf</span> <span class=\"o\">=</span> <span class=\"n\">ensemble</span><span class=\"o\">.</span><span class=\"n\">RandomForestClassifier</span><span class=\"p\">(</span><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">n_estimators</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\t<span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">features_train</span><span class=\"p\">,</span> <span class=\"n\">labels_train</span><span class=\"p\">)</span>\n\t<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">features_test</span><span class=\"p\">)</span>\n\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Misclassifications:'</span><span class=\"p\">)</span>\n\t<span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">):</span>\n\t\t<span class=\"k\">if</span> <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">labels_test</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]:</span>\n\t\t\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"se\">\\t</span><span class=\"s1\">'</span> <span class=\"o\">+</span> <span class=\"n\">file_names</span><span class=\"p\">[</span><span class=\"n\">idx_test</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]])</span>\n\n<span class=\"n\">qcrit</span><span class=\"o\">.</span><span class=\"n\">analyze_models</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">(</span>\n\t<span class=\"s1\">'output.pickle'</span><span class=\"p\">,</span> <span class=\"s1\">'classifications.csv'</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre><code>----------------------------------------\nRandom Forest Classifier feature rankings\n\nFeature importances:\n\t0.400000: num_conjunctions\n\t0.400000: num_interrogatives\n\t0.200000: mean_sentence_length\n\n\nElapsed time: 0.0122 seconds\n\n----------------------------------------\nRandom Forest Classifier accuracy\n\nStats:\n\tNumber correct: 1 / 2\n\tPercentage correct: 50.0%\n\n\nElapsed time: 0.0085 seconds\n\n----------------------------------------\nRandom Forest Classifier misclassified texts\n\nTrain texts:\n\tdemo/aristotle.poetics.tess\n\tdemo/aristophanes.ecclesiazusae.tess\n\nTest texts:\n\tdemo/euripides.heracles.tess\n\tdemo/plato.respublica.part.1.tess\n\nMisclassifications:\n\tdemo/plato.respublica.part.1.tess\n\n\nElapsed time: 0.0082 seconds\n</code></pre>\n<h2>Development</h2>\n<ol>\n<li>Ensure that you have <code>pipenv</code> installed. Also, ensure that you have a version of <code>python</code> installed that matches the version in the <code>Pipfile</code>.</li>\n<li>Setup a virtual environment and install the necessary dependencies:\n<pre><span class=\"nv\">PIPENV_VENV_IN_PROJECT</span><span class=\"o\">=</span><span class=\"nb\">true</span> pipenv install --dev\n</pre>\n</li>\n<li>Activate the virtual environment:\n<pre>pipenv shell\n</pre>\nNow, <code>python</code> commands will use the dependencies and <code>python</code> version from the virtual environment. Use <code>exit</code> to leave the virtual environment, and use <code>pipenv shell</code> while in the project directory to activate it again.</li>\n</ol>\n<h3>Demo</h3>\n<pre>python demo/demo.py\n</pre>\n<h2>Submission</h2>\n<p>The following commands will submit the package to the <code>Python Package Index</code>. Before running them, it may be necessary to increment the version number in <code>__init__.py</code> and to delete any previously generated <code>dist/</code>, <code>build/</code>, and <code>egg-info</code> directories if they exist.</p>\n<pre>python setup.py bdist_wheel sdist\ntwine upload dist/*\n</pre>\n\n          </div>"}, "last_serial": 6990563, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a5766cacded63ba7b4e445887b56fc54", "sha256": "7b7677efe3e1b9d47996d0d1b2665f582f8ae972803b3db12357d2181df53a6e"}, "downloads": -1, "filename": "qcrit-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a5766cacded63ba7b4e445887b56fc54", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1911, "upload_time": "2019-07-13T03:06:19", "upload_time_iso_8601": "2019-07-13T03:06:19.504012Z", "url": "https://files.pythonhosted.org/packages/8f/c4/491eba82efe81400635c4055e39b647ecdcbd96ebcebe85858c52bc2fa7e/qcrit-0.0.1-py3-none-any.whl", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "36b615722a271326901ea09ecac13dba", "sha256": "db7556da77eb36305250dbc52cf66c6db0c310863c64c9bf3d466c15042b31a3"}, "downloads": -1, "filename": "qcrit-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "36b615722a271326901ea09ecac13dba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11616, "upload_time": "2019-08-06T15:10:03", "upload_time_iso_8601": "2019-08-06T15:10:03.794924Z", "url": "https://files.pythonhosted.org/packages/3f/b2/7a457e1b30109948a3ab3ca2753cfd6858690821a3f7245f51e3b722baa6/qcrit-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b284a123ff2be85274f6ea41bf0d5d9", "sha256": "133cdb7f13ab7bc4b9c89bbad6a5f68e268056df2976f894fbed023ea049354a"}, "downloads": -1, "filename": "qcrit-0.0.10.tar.gz", "has_sig": false, "md5_digest": "6b284a123ff2be85274f6ea41bf0d5d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12015, "upload_time": "2019-08-06T15:10:05", "upload_time_iso_8601": "2019-08-06T15:10:05.606897Z", "url": "https://files.pythonhosted.org/packages/b5/4f/9cb5df834523cd7341103f2c3f30e03c5aa4c53f810488c0f3beb4f8fcf2/qcrit-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "0ca318cb090ac7a4ce184e535dda131d", "sha256": "271b21c359fe33523a98f8069765e78e824cd72b10679a21f3748534fa95dcd6"}, "downloads": -1, "filename": "qcrit-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "0ca318cb090ac7a4ce184e535dda131d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10757, "upload_time": "2019-08-15T19:27:22", "upload_time_iso_8601": "2019-08-15T19:27:22.451881Z", "url": "https://files.pythonhosted.org/packages/4a/bd/4d40d5a3bb8efe94139aff76cef60963403c6d2d3367fefeb51a27cea9f4/qcrit-0.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89f5a8e269b290e090515a241ffedbae", "sha256": "7dd3af4d507f36accb18a99cfeeedbbf1a832d00e4a3897266e83664c52b699e"}, "downloads": -1, "filename": "qcrit-0.0.11.tar.gz", "has_sig": false, "md5_digest": "89f5a8e269b290e090515a241ffedbae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9608, "upload_time": "2019-08-15T19:27:24", "upload_time_iso_8601": "2019-08-15T19:27:24.696973Z", "url": "https://files.pythonhosted.org/packages/f7/0f/48ca2e728922e47cf9568b012bebffcc3e99485c782d0861cea645592c22/qcrit-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "5adc7064d0544f0acdeda30c23da1b90", "sha256": "077ccde13b3a7f6b8ed075f96f0badb00c91d5c31f89190aa2156e8634d07268"}, "downloads": -1, "filename": "qcrit-0.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "5adc7064d0544f0acdeda30c23da1b90", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10885, "upload_time": "2019-08-25T12:37:58", "upload_time_iso_8601": "2019-08-25T12:37:58.008267Z", "url": "https://files.pythonhosted.org/packages/15/e8/8196aaab78f3aa6879481ee0d90ea4bb68f3a6c9f9d88d83c53fb1f83f1e/qcrit-0.0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6729950c4d8fc627b101f58faa217ae8", "sha256": "dd26733a1c297e15424c76941ee21732e12d95250687d8de6deeff5a1251082c"}, "downloads": -1, "filename": "qcrit-0.0.12.tar.gz", "has_sig": false, "md5_digest": "6729950c4d8fc627b101f58faa217ae8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9744, "upload_time": "2019-08-25T12:38:00", "upload_time_iso_8601": "2019-08-25T12:38:00.949191Z", "url": "https://files.pythonhosted.org/packages/fa/4d/b5d5961bdf6d290deec2a93e5177099dce94d6d50841539ffd0f761f1a38/qcrit-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "76b7a3763ef3a7c35a34d14a6d6ef3e5", "sha256": "d0275302c72ddf339b5ed03ad59c92582002fec1b2e5b3e83b9f6f0a15b92489"}, "downloads": -1, "filename": "qcrit-0.0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "76b7a3763ef3a7c35a34d14a6d6ef3e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11763, "upload_time": "2019-09-15T00:11:53", "upload_time_iso_8601": "2019-09-15T00:11:53.561585Z", "url": "https://files.pythonhosted.org/packages/06/73/428b248714530ba19c1c3b75651c821fce426280f8335f71019e81d1b42d/qcrit-0.0.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ea09e45ac66be87238ee2d235a69ac9", "sha256": "f0ddb114f6cf68527701a529225aea23f196267e8cadbc90238746d6346ba4cd"}, "downloads": -1, "filename": "qcrit-0.0.13.tar.gz", "has_sig": false, "md5_digest": "0ea09e45ac66be87238ee2d235a69ac9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12419, "upload_time": "2019-09-15T00:11:55", "upload_time_iso_8601": "2019-09-15T00:11:55.495801Z", "url": "https://files.pythonhosted.org/packages/e6/75/8ca1fa320b498c1cdd0ecb00d2add42b85309cbec6120da9370dae6d49af/qcrit-0.0.13.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "d04acf1d395b51fce4b8e98cb6ca193c", "sha256": "433ce15b34c7a1f0d92503f6ebc4d0c0a6de0c69f200f42ccd073240afa612de"}, "downloads": -1, "filename": "qcrit-0.0.14-py3-none-any.whl", "has_sig": false, "md5_digest": "d04acf1d395b51fce4b8e98cb6ca193c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11707, "upload_time": "2019-12-27T02:45:21", "upload_time_iso_8601": "2019-12-27T02:45:21.366056Z", "url": "https://files.pythonhosted.org/packages/60/44/12109c1fab78ff85a1bb1281bd9b5463913b0535e70a48c27b023b99cc8d/qcrit-0.0.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "825a265294e7d208f6d0c8d7018b3b0d", "sha256": "b19aae75dbea53b5f974ae34b5036371351e5ff74f1d949797aed47a6c350774"}, "downloads": -1, "filename": "qcrit-0.0.14.tar.gz", "has_sig": false, "md5_digest": "825a265294e7d208f6d0c8d7018b3b0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12387, "upload_time": "2019-12-27T02:45:24", "upload_time_iso_8601": "2019-12-27T02:45:24.087680Z", "url": "https://files.pythonhosted.org/packages/b3/9c/a13b78231cab6a5fd4194bfc6954e7bc125d6ab63812020f02c19a4992fd/qcrit-0.0.14.tar.gz", "yanked": false}], "0.0.15": [{"comment_text": "", "digests": {"md5": "e5c3cfb306761cceb55c2c92bb55e594", "sha256": "efe1ae3580c4d814e642c6819145d422d6943fdad9b55b4c153cfb0bf4efb1eb"}, "downloads": -1, "filename": "qcrit-0.0.15-py3-none-any.whl", "has_sig": false, "md5_digest": "e5c3cfb306761cceb55c2c92bb55e594", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11801, "upload_time": "2019-12-27T06:46:08", "upload_time_iso_8601": "2019-12-27T06:46:08.917721Z", "url": "https://files.pythonhosted.org/packages/2b/04/3e2bb8e6097046f6278ad3c1e36ec2457da4a07b62fa82a897e3e536a3d2/qcrit-0.0.15-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a58b64996e62bd6a114ab0b9975be82a", "sha256": "142782330ad4e400d921ecf270541eae38ee8f91b01e9e69a928a77a83fa02df"}, "downloads": -1, "filename": "qcrit-0.0.15.tar.gz", "has_sig": false, "md5_digest": "a58b64996e62bd6a114ab0b9975be82a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12653, "upload_time": "2019-12-27T06:46:12", "upload_time_iso_8601": "2019-12-27T06:46:12.723796Z", "url": "https://files.pythonhosted.org/packages/60/a6/2bb6623c5f8b6c22eaef4da1dcd22dea3a7256969487bc1f931965c36d7a/qcrit-0.0.15.tar.gz", "yanked": false}], "0.0.16": [{"comment_text": "", "digests": {"md5": "98cc83ce228cca4b85c279b13aca218a", "sha256": "343938df583b8805f5becdf8c6cd634bfb151ad384b1000b7aa485362c0d795a"}, "downloads": -1, "filename": "qcrit-0.0.16-py3-none-any.whl", "has_sig": false, "md5_digest": "98cc83ce228cca4b85c279b13aca218a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12588, "upload_time": "2020-01-09T06:13:36", "upload_time_iso_8601": "2020-01-09T06:13:36.061009Z", "url": "https://files.pythonhosted.org/packages/6b/86/b4c3b12e5c1dcbd526cce5251e6bd665edde643c150f359060075885e00e/qcrit-0.0.16-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d5b43760cd4235319ce5b2d73812cb3", "sha256": "c3c0704de652e6e8299461304d4e2a3f6f0031168fad9fdf79ffb9ee408b7f7a"}, "downloads": -1, "filename": "qcrit-0.0.16.tar.gz", "has_sig": false, "md5_digest": "3d5b43760cd4235319ce5b2d73812cb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13337, "upload_time": "2020-01-09T06:13:37", "upload_time_iso_8601": "2020-01-09T06:13:37.967028Z", "url": "https://files.pythonhosted.org/packages/56/6b/88711f2727755850e986b73233335715469a899bbbdbddb885b9df96e9ea/qcrit-0.0.16.tar.gz", "yanked": false}], "0.0.17": [{"comment_text": "", "digests": {"md5": "7c175c61a74c57d35f311e0ecba28ffa", "sha256": "a397f21fbf90f855865f6ee83e008c776554daa39a50446a114dd7d5c366ccd8"}, "downloads": -1, "filename": "qcrit-0.0.17-py3-none-any.whl", "has_sig": false, "md5_digest": "7c175c61a74c57d35f311e0ecba28ffa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14219, "upload_time": "2020-01-11T07:09:35", "upload_time_iso_8601": "2020-01-11T07:09:35.169953Z", "url": "https://files.pythonhosted.org/packages/50/ef/65a1319b9d6c454f0c9a1975bf43cafa86eecdd8065510aa9fae14e0c10b/qcrit-0.0.17-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "70a4fb9e3ecb27c189c9d6a7d076b4d2", "sha256": "6995e4b5c60aa78455958dc5d597405cc8cb5780481f81e5575bb5617208b79b"}, "downloads": -1, "filename": "qcrit-0.0.17.tar.gz", "has_sig": false, "md5_digest": "70a4fb9e3ecb27c189c9d6a7d076b4d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14665, "upload_time": "2020-01-11T07:09:36", "upload_time_iso_8601": "2020-01-11T07:09:36.827000Z", "url": "https://files.pythonhosted.org/packages/93/0e/aa64c95adce1f27dec7725d1c84e89099e3b114dab3960338f911fe350fb/qcrit-0.0.17.tar.gz", "yanked": false}], "0.0.18": [{"comment_text": "", "digests": {"md5": "bdb36de20ab2d324836ca47896c89386", "sha256": "4df13236874f7ee24a151f6ad91b6defe76e122417b5c84cdade2e7a4aa6c17e"}, "downloads": -1, "filename": "qcrit-0.0.18-py3-none-any.whl", "has_sig": false, "md5_digest": "bdb36de20ab2d324836ca47896c89386", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18205, "upload_time": "2020-01-11T08:32:02", "upload_time_iso_8601": "2020-01-11T08:32:02.945396Z", "url": "https://files.pythonhosted.org/packages/89/8c/c7fb427752fb36a8c3b2f2ba696cee3b787ddf5710e6851ebc00c5a77afd/qcrit-0.0.18-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e3fa0b88d3b115e34ef06ebdc7a6ec4", "sha256": "92f6be7ec40106159b523f50523a19690fb4d86759ccb426d051ebcf63fb1985"}, "downloads": -1, "filename": "qcrit-0.0.18.tar.gz", "has_sig": false, "md5_digest": "1e3fa0b88d3b115e34ef06ebdc7a6ec4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18786, "upload_time": "2020-01-11T08:32:04", "upload_time_iso_8601": "2020-01-11T08:32:04.407414Z", "url": "https://files.pythonhosted.org/packages/e0/78/e07133493e0a94cddfbda5e2ad7b0e6329dc59dd46c9d952066d74eb9e7a/qcrit-0.0.18.tar.gz", "yanked": false}], "0.0.19": [{"comment_text": "", "digests": {"md5": "551d8fdf1560abd9adbd571bf9d11807", "sha256": "9e84747397e523fb8845f37851b25b6f4acf516d3bf67aeaa09ec2ae6a2b9986"}, "downloads": -1, "filename": "qcrit-0.0.19-py3-none-any.whl", "has_sig": false, "md5_digest": "551d8fdf1560abd9adbd571bf9d11807", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22278, "upload_time": "2020-01-11T20:13:14", "upload_time_iso_8601": "2020-01-11T20:13:14.743027Z", "url": "https://files.pythonhosted.org/packages/49/50/9700138454112108a040210953baf869769db816e9cb63d7dd7d29dea8ba/qcrit-0.0.19-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8d605bddd86c6f59e22586f2db71ecd", "sha256": "176c9f1f9da7c4cdead8ffb8a4e759eb154b3ea3d3948bf5ccd2b79246076dd3"}, "downloads": -1, "filename": "qcrit-0.0.19.tar.gz", "has_sig": false, "md5_digest": "d8d605bddd86c6f59e22586f2db71ecd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22655, "upload_time": "2020-01-11T20:13:16", "upload_time_iso_8601": "2020-01-11T20:13:16.399239Z", "url": "https://files.pythonhosted.org/packages/a4/dd/15a521d6d8632fbb08c7198e4ec3399cdacf125078f20efe5bce686cf9cc/qcrit-0.0.19.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "1762f9621e69e103760f55098e0075c2", "sha256": "6730172e6694bc4a8c96aa0dc7bae06fd2ab0e6e5719fb0ad7bc02144cc21285"}, "downloads": -1, "filename": "qcrit-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1762f9621e69e103760f55098e0075c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1990, "upload_time": "2019-07-13T03:17:45", "upload_time_iso_8601": "2019-07-13T03:17:45.475861Z", "url": "https://files.pythonhosted.org/packages/89/1a/a0e00e2e8bf21560e6b492177e5b05ec539e857f661ce9778936dec7d809/qcrit-0.0.2-py3-none-any.whl", "yanked": false}], "0.0.20": [{"comment_text": "", "digests": {"md5": "ec1559e5eb5be53e868796dfdfbb60c0", "sha256": "17a34a3e34a56eb06f985f33e4f825cbb2f2a9d23327f72836cd1e101b7e2603"}, "downloads": -1, "filename": "qcrit-0.0.20-py3-none-any.whl", "has_sig": false, "md5_digest": "ec1559e5eb5be53e868796dfdfbb60c0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22626, "upload_time": "2020-01-20T02:00:20", "upload_time_iso_8601": "2020-01-20T02:00:20.694300Z", "url": "https://files.pythonhosted.org/packages/62/0e/b3f315da13469b6bfa0f9ad3bdcb4951f2c3adf498371b99f94676d1ae67/qcrit-0.0.20-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce3507e71584520ee3752a60b52e55a9", "sha256": "c7731062db6d7f22493beb74c1f6235083a8d130df98edf76f7cf70877d340a3"}, "downloads": -1, "filename": "qcrit-0.0.20.tar.gz", "has_sig": false, "md5_digest": "ce3507e71584520ee3752a60b52e55a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23086, "upload_time": "2020-01-20T02:00:22", "upload_time_iso_8601": "2020-01-20T02:00:22.628432Z", "url": "https://files.pythonhosted.org/packages/85/de/e5c56f872cb99a012ebcaaa6ed6c3f273372c43c04ce45d497a8a1a4676c/qcrit-0.0.20.tar.gz", "yanked": false}], "0.0.21": [{"comment_text": "", "digests": {"md5": "b787dfb601927ec92dbb3b6d5b6b956d", "sha256": "3e65733440ae6d9633144c728aac7717e9dbca89376c6e1ae5387c31e05ca087"}, "downloads": -1, "filename": "qcrit-0.0.21-py3-none-any.whl", "has_sig": false, "md5_digest": "b787dfb601927ec92dbb3b6d5b6b956d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22598, "upload_time": "2020-01-20T08:01:31", "upload_time_iso_8601": "2020-01-20T08:01:31.804657Z", "url": "https://files.pythonhosted.org/packages/c8/03/c0061e996886230a118d1d363a059b378fd764943b29bb663d6957bbaaf8/qcrit-0.0.21-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50c45d200ed6e41dcae79ee1aa5032bd", "sha256": "416c426e9acb5246132e02c5df6e8331dd024bcd45ee0653d0d2d79fbd89f750"}, "downloads": -1, "filename": "qcrit-0.0.21.tar.gz", "has_sig": false, "md5_digest": "50c45d200ed6e41dcae79ee1aa5032bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23074, "upload_time": "2020-01-20T08:01:34", "upload_time_iso_8601": "2020-01-20T08:01:34.045908Z", "url": "https://files.pythonhosted.org/packages/b0/e8/cb85f18b27c5520109726c074b46595c41a73398198d805847ad1769f2e7/qcrit-0.0.21.tar.gz", "yanked": false}], "0.0.22": [{"comment_text": "", "digests": {"md5": "088ab44b9f8e093f21bf2e0c2d810a50", "sha256": "2be1b34aa46af7a7926b99037d8f4756a5ec603996b3398f4cfc5cd227af3d3d"}, "downloads": -1, "filename": "qcrit-0.0.22-py3-none-any.whl", "has_sig": false, "md5_digest": "088ab44b9f8e093f21bf2e0c2d810a50", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24626, "upload_time": "2020-04-10T03:36:42", "upload_time_iso_8601": "2020-04-10T03:36:42.355694Z", "url": "https://files.pythonhosted.org/packages/99/f4/2c7adcf5e4284b53757002c1ac6109cddddf477041ea994b85dbb7a5f629/qcrit-0.0.22-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2538f5a9ce441285f1211792d2710a2", "sha256": "053a9f6e7300c3eabc74668b4324892625eac90543a07d6bab88f7131e575c21"}, "downloads": -1, "filename": "qcrit-0.0.22.tar.gz", "has_sig": false, "md5_digest": "d2538f5a9ce441285f1211792d2710a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24815, "upload_time": "2020-04-10T03:36:44", "upload_time_iso_8601": "2020-04-10T03:36:44.745057Z", "url": "https://files.pythonhosted.org/packages/3a/be/982033c06a1c3244a3c5500c2de9c6834775bd18fa7db3dbdba8b34f7409/qcrit-0.0.22.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "6d007ccd79910df277e23cc235054e2c", "sha256": "2509234fbd6ecf1fe1f8abb868397be6a840f3f1937c52de89d873f5e6a6567e"}, "downloads": -1, "filename": "qcrit-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6d007ccd79910df277e23cc235054e2c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1992, "upload_time": "2019-07-13T03:25:03", "upload_time_iso_8601": "2019-07-13T03:25:03.660969Z", "url": "https://files.pythonhosted.org/packages/e1/22/d1300bc5baea7216910fec64fb65bbaf23cf9426d11b8f84552a5b3453ad/qcrit-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "288dbe48a062b92cacecccdef2806a4e", "sha256": "e5aa82419837cfceaae0e8b625c36e06a229fed74a37d09cf8e6750018e096c4"}, "downloads": -1, "filename": "qcrit-0.0.3.tar.gz", "has_sig": false, "md5_digest": "288dbe48a062b92cacecccdef2806a4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 974, "upload_time": "2019-07-13T03:25:05", "upload_time_iso_8601": "2019-07-13T03:25:05.342150Z", "url": "https://files.pythonhosted.org/packages/63/cf/bc095d0682b6493259e3cc8c757b1d37cfb163d07cb002ba6203fe2cb3cf/qcrit-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "6395fd20d862e7edb49477eaf97e3c03", "sha256": "585f9dfbdc4cdd63aa11aeb21e6ff985f49e5c01cf589eb2b2331f0bda75f9fa"}, "downloads": -1, "filename": "qcrit-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "6395fd20d862e7edb49477eaf97e3c03", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2017, "upload_time": "2019-07-13T03:40:44", "upload_time_iso_8601": "2019-07-13T03:40:44.562283Z", "url": "https://files.pythonhosted.org/packages/9f/51/416cdd1ae25a02bbcd6768d97c4d49f659138971f8a7475dc9d1728f95ef/qcrit-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8f1c15bf2799074a8eadd70f6b0704c", "sha256": "eadac1d66cdc9deafcf22193622663b267429e336dac8cbe9d758788ffb11867"}, "downloads": -1, "filename": "qcrit-0.0.4.tar.gz", "has_sig": false, "md5_digest": "d8f1c15bf2799074a8eadd70f6b0704c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1002, "upload_time": "2019-07-13T03:40:46", "upload_time_iso_8601": "2019-07-13T03:40:46.200139Z", "url": "https://files.pythonhosted.org/packages/6d/10/2275ed58d2e3afc8b6afee32d4c5394d835ab736c492a39e7234fe419e5a/qcrit-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "080cf6279cd0f3c2454c945beca611a1", "sha256": "9f996ec936b27217d48af8ada06e61ce463b23ed213211c0a97e1f2e10ea8d68"}, "downloads": -1, "filename": "qcrit-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "080cf6279cd0f3c2454c945beca611a1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2050, "upload_time": "2019-07-13T04:21:47", "upload_time_iso_8601": "2019-07-13T04:21:47.135829Z", "url": "https://files.pythonhosted.org/packages/f5/69/b90befaf404056aff4638dff70bf4be28c9ab85b64b39d424399ad729d35/qcrit-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4481442038221f2717fc544426091fd", "sha256": "e7fade11a193aa6a84705ffc191e0be46bb4f77f91d6cb3f872822b1dc4469a1"}, "downloads": -1, "filename": "qcrit-0.0.5.tar.gz", "has_sig": false, "md5_digest": "b4481442038221f2717fc544426091fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1061, "upload_time": "2019-07-13T04:21:48", "upload_time_iso_8601": "2019-07-13T04:21:48.834271Z", "url": "https://files.pythonhosted.org/packages/b2/4a/510d959e50c5d83abcceeb6c9d20ac43a615d2803ad61e74697685de4f1c/qcrit-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "41c16c120db59ed193c7c3302230eca3", "sha256": "ad2acaa29b2287e5830c7c454b8a8f1e85d6254023571656a540dc332534f4b9"}, "downloads": -1, "filename": "qcrit-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "41c16c120db59ed193c7c3302230eca3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13930, "upload_time": "2019-07-13T04:31:44", "upload_time_iso_8601": "2019-07-13T04:31:44.941728Z", "url": "https://files.pythonhosted.org/packages/e5/82/6aab0b5e4cd4ee0664d2e9224dc6e021a878863a67d8446d9fbe51c45449/qcrit-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db2822f7b6fba8bf4eab61f1fe5e8863", "sha256": "6f00a45e6fb67fa95ee0efad0d7df77681e275a144123d45474772e97882bbfb"}, "downloads": -1, "filename": "qcrit-0.0.6.tar.gz", "has_sig": false, "md5_digest": "db2822f7b6fba8bf4eab61f1fe5e8863", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10054, "upload_time": "2019-07-13T04:31:46", "upload_time_iso_8601": "2019-07-13T04:31:46.777443Z", "url": "https://files.pythonhosted.org/packages/c8/40/e9a0e096b98a21a130b323e69ee659a48db4ed6b9450491b8d277b4d95e4/qcrit-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "7ea1b17f337e1e29538b8f6f57bc0f29", "sha256": "8a60081bde30b24c00282499f618c7067a7f838126bf50d79e732227a912f1e6"}, "downloads": -1, "filename": "qcrit-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "7ea1b17f337e1e29538b8f6f57bc0f29", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13931, "upload_time": "2019-07-13T04:44:07", "upload_time_iso_8601": "2019-07-13T04:44:07.924661Z", "url": "https://files.pythonhosted.org/packages/3f/e5/6869daeed406d2e26487fa084d326f57478feffcdf0113c939d5263aee6f/qcrit-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3243556bbdd14ec6d6470ff58780864", "sha256": "83ffb95ff292f9fb1cc682b2591f6b92c6fa20296a0937cda37616051d6d304c"}, "downloads": -1, "filename": "qcrit-0.0.7.tar.gz", "has_sig": false, "md5_digest": "a3243556bbdd14ec6d6470ff58780864", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10051, "upload_time": "2019-07-13T04:44:09", "upload_time_iso_8601": "2019-07-13T04:44:09.805114Z", "url": "https://files.pythonhosted.org/packages/3b/fc/929ab3b50624d5fbf87df4a506c6f4919d3ad1d0224e15d31c885101005f/qcrit-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "5f66353080cd57aaf0048e75f71adbc6", "sha256": "9e53a962b9258d81471f2f84752f09f9381c54c627c33fab5f0c3554eab1abc0"}, "downloads": -1, "filename": "qcrit-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "5f66353080cd57aaf0048e75f71adbc6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13972, "upload_time": "2019-07-13T04:49:33", "upload_time_iso_8601": "2019-07-13T04:49:33.582993Z", "url": "https://files.pythonhosted.org/packages/a1/19/8dd72b563a00ebe5089e7480ab694204237d17cf034fe1b6a4fcf06abc08/qcrit-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c0af8971634b135fcafe7b4b125349f", "sha256": "a6a495556be38a357e9022b5f00038faa35bbd4ee0169e4949264473bafbb660"}, "downloads": -1, "filename": "qcrit-0.0.8.tar.gz", "has_sig": false, "md5_digest": "4c0af8971634b135fcafe7b4b125349f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10418, "upload_time": "2019-07-13T04:49:36", "upload_time_iso_8601": "2019-07-13T04:49:36.270954Z", "url": "https://files.pythonhosted.org/packages/07/03/33827edc3d7a1c62f3a612bfee9e2152e713e3ba9f050b0be8aca9815864/qcrit-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "42c020188d0d606b0e6375d2b460f5af", "sha256": "4547eceea9b3667ec63fd6a9ad20004d580801eca6d05e3b872bc792527919cd"}, "downloads": -1, "filename": "qcrit-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "42c020188d0d606b0e6375d2b460f5af", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9035, "upload_time": "2019-07-31T07:36:22", "upload_time_iso_8601": "2019-07-31T07:36:22.303596Z", "url": "https://files.pythonhosted.org/packages/4d/be/be1cc98d44685d0cf2caa985b913629ca07bc95fa332c66485b90cc51d4d/qcrit-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "93a552cb67c1d2de117c82be8cfea89b", "sha256": "2cf310e48f623389cc948668d538c6943d316d4a081d0ec6ef9d459d937e43af"}, "downloads": -1, "filename": "qcrit-0.0.9.tar.gz", "has_sig": false, "md5_digest": "93a552cb67c1d2de117c82be8cfea89b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6635, "upload_time": "2019-07-31T07:36:23", "upload_time_iso_8601": "2019-07-31T07:36:23.501791Z", "url": "https://files.pythonhosted.org/packages/eb/29/082f5f73cb45bce3d12f6fc87aad32a93231719c3a56f5be8da70132bf6d/qcrit-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "088ab44b9f8e093f21bf2e0c2d810a50", "sha256": "2be1b34aa46af7a7926b99037d8f4756a5ec603996b3398f4cfc5cd227af3d3d"}, "downloads": -1, "filename": "qcrit-0.0.22-py3-none-any.whl", "has_sig": false, "md5_digest": "088ab44b9f8e093f21bf2e0c2d810a50", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24626, "upload_time": "2020-04-10T03:36:42", "upload_time_iso_8601": "2020-04-10T03:36:42.355694Z", "url": "https://files.pythonhosted.org/packages/99/f4/2c7adcf5e4284b53757002c1ac6109cddddf477041ea994b85dbb7a5f629/qcrit-0.0.22-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2538f5a9ce441285f1211792d2710a2", "sha256": "053a9f6e7300c3eabc74668b4324892625eac90543a07d6bab88f7131e575c21"}, "downloads": -1, "filename": "qcrit-0.0.22.tar.gz", "has_sig": false, "md5_digest": "d2538f5a9ce441285f1211792d2710a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24815, "upload_time": "2020-04-10T03:36:44", "upload_time_iso_8601": "2020-04-10T03:36:44.745057Z", "url": "https://files.pythonhosted.org/packages/3a/be/982033c06a1c3244a3c5500c2de9c6834775bd18fa7db3dbdba8b34f7409/qcrit-0.0.22.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:56 2020"}