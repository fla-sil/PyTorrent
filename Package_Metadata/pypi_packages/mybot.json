{"info": {"author": "Bart Thate", "author_email": "bthate@dds.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: Public Domain", "Operating System :: Unix", "Programming Language :: Python", "Topic :: Utilities"], "description": "R E A D M E\n###########\n\n\nMYBOT is a IRC bot you can program your own commands for. no copyright, no LICENSE, placed in the public domain.\n\n\n\nI N S T A L L\n\n\n\ndownload the tarball from pypi, https://pypi.org/project/mybot/#files\nuntar the tarball and run this to install the bot daemon on your system.\n\n::\n\n > cd mybot-1\n > sudo python3 setup.py install\n\nyou can also download with pip3 and install globally:\n\n::\n\n > sudo pip3 install mybot --upgrade --force-reinstall\n\n\nif you want mybot to start on boot after install run:\n\n::\n\n > sudo cp files/mybot.service /etc/systemd/system/mybot.service\n > sudo mybot -w /var/lib/mybot cfg <server> <channel> <nick> <owner>\n > sudo myhup\n\n\n\nU S A G E\n\n\n\n::\n\n > mybot <cmd>\t\t- executes a command\n > mybot\t\t- starts a shell\n > myhup\t\t- restarts the botd service\n\nlogfiles can be found in /var/log/mybot if installed globally and\n~/.mybot if run locally. You can use the -w option to set a different\nwork directory.\n\n\n\nC O N F I G U R A T I O N\n\n\n\nuse \"mybot cfg\" (sudo) to edit on the system installed botd service.\nIRC configuration uses the cfg command to edit server/channel/nick/owner:\n\n::\n\n > mybot cfg localhost #dunkbots botje ~bart@127.0.0.1\n\n\n\nR S S\n\n\n\nthe rss plugin uses the feedparser package, you need to install that\nyourself:\n\n::\n\n > pip3 install feedparser\n\nmake sure you have bot.rss added to your cfg.modules:\n\n::\n\n > mybot ed bot.krn.Cfg modules bot.rss\n\n\nadd an url:\n\n::\n\n > mybot rss https://news.ycombinator.com/rss\n ok 1\n\nrun the rss command to see what urls are registered:\n\n::\n\n > mybot rss\n 0 https://news.ycombinator.com/rss\n\nthe fetch command can be used to poll the added feeds:\n\n::\n\n > mybot fetch\n fetched 0\n\n\n\nU D P\n\n\n\nusing udp to relay text into a channel, use the botudp program to send text via the bot \nto the channel on the irc server:\n\n::\n\n > tail -f /var/log/mybot/mybot.log | myudp \n\nto send a message to the IRC channel, send a udp packet to the bot:\n\n::\n\n import socket\n\n def toudp(host, port, txt):\n     sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n     sock.sendto(bytes(txt.strip(), \"utf-8\"), host, port)\n\n\n\nC O D I N G\n\n\n\nif you want to develop on the bot clone the source at bitbucket.org:\n\n::\n\n > git clone https://bitbucket.org/botlib/mybot\n\n\nBOTLIB contains the following modules:\n\n::\n\n    bot.dft             - default\n    bot.flt             - fleet\n    bot.irc             - irc bot\n    bot.krn             - core handler\n    bot.rss             - rss to channel\n    bot.shw             - show runtime\n    bot.udp             - udp to channel\n    bot.usr             - users\n\nBOTLIB uses the LIBOBJ library which gets included in the tarball.\n\n::\n\n    lo.clk              - clock\n    lo.csl              - console \n    lo.hdl              - handler\n    lo.shl              - shell\n    lo.thr              - threads\n    lo.tms              - times\n    lo.trc\t\t- trace\n    lo.typ              - types\n\nYou can add you own modules to the mybot package and if you want you can\ncreate your own package with commands in the mybot namespace.\n\n\nbasic code is a function that gets an event as a argument:\n\n::\n\n def command(event):\n     << your code here >>\n\nto give feedback to the user use the event.reply(txt) method:\n\n::\n\n def command(event):\n     event.reply(\"yooo %s\" % event.origin)\n\n\nhave fun coding ;]\n\n\n\nC O N T A C T\n\n\n\nyou can contact me on IRC/freenode/#dunkbots or email me at bthate@dds.nl\n\n| Bart Thate (bthate@dds.nl, thatebart@gmail.com)\n| botfather on #dunkbots irc.freenode.net", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/botlib/mybot", "keywords": "", "license": "Public Domain", "maintainer": "", "maintainer_email": "", "name": "mybot", "package_url": "https://pypi.org/project/mybot/", "platform": "", "project_url": "https://pypi.org/project/mybot/", "project_urls": {"Homepage": "https://bitbucket.org/botlib/mybot"}, "release_url": "https://pypi.org/project/mybot/2/", "requires_dist": null, "requires_python": "", "summary": "MYBOT is a IRC bot you can program your own commands for. no copyright, noLICENSE, placed in the public domain.", "version": "2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>MYBOT is a IRC bot you can program your own commands for. no copyright, no LICENSE, placed in the public domain.</p>\n<p>I N S T A L L</p>\n<p>download the tarball from pypi, <a href=\"https://pypi.org/project/mybot/#files\" rel=\"nofollow\">https://pypi.org/project/mybot/#files</a>\nuntar the tarball and run this to install the bot daemon on your system.</p>\n<pre>&gt; cd mybot-1\n&gt; sudo python3 setup.py install\n</pre>\n<p>you can also download with pip3 and install globally:</p>\n<pre>&gt; sudo pip3 install mybot --upgrade --force-reinstall\n</pre>\n<p>if you want mybot to start on boot after install run:</p>\n<pre>&gt; sudo cp files/mybot.service /etc/systemd/system/mybot.service\n&gt; sudo mybot -w /var/lib/mybot cfg &lt;server&gt; &lt;channel&gt; &lt;nick&gt; &lt;owner&gt;\n&gt; sudo myhup\n</pre>\n<p>U S A G E</p>\n<pre>&gt; mybot &lt;cmd&gt;          - executes a command\n&gt; mybot                - starts a shell\n&gt; myhup                - restarts the botd service\n</pre>\n<p>logfiles can be found in /var/log/mybot if installed globally and\n~/.mybot if run locally. You can use the -w option to set a different\nwork directory.</p>\n<p>C O N F I G U R A T I O N</p>\n<p>use \u201cmybot cfg\u201d (sudo) to edit on the system installed botd service.\nIRC configuration uses the cfg command to edit server/channel/nick/owner:</p>\n<pre>&gt; mybot cfg localhost #dunkbots botje ~bart@127.0.0.1\n</pre>\n<p>R S S</p>\n<p>the rss plugin uses the feedparser package, you need to install that\nyourself:</p>\n<pre>&gt; pip3 install feedparser\n</pre>\n<p>make sure you have bot.rss added to your cfg.modules:</p>\n<pre>&gt; mybot ed bot.krn.Cfg modules bot.rss\n</pre>\n<p>add an url:</p>\n<pre>&gt; mybot rss https://news.ycombinator.com/rss\nok 1\n</pre>\n<p>run the rss command to see what urls are registered:</p>\n<pre>&gt; mybot rss\n0 https://news.ycombinator.com/rss\n</pre>\n<p>the fetch command can be used to poll the added feeds:</p>\n<pre>&gt; mybot fetch\nfetched 0\n</pre>\n<p>U D P</p>\n<p>using udp to relay text into a channel, use the botudp program to send text via the bot\nto the channel on the irc server:</p>\n<pre>&gt; tail -f /var/log/mybot/mybot.log | myudp\n</pre>\n<p>to send a message to the IRC channel, send a udp packet to the bot:</p>\n<pre>import socket\n\ndef toudp(host, port, txt):\n    sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n    sock.sendto(bytes(txt.strip(), \"utf-8\"), host, port)\n</pre>\n<p>C O D I N G</p>\n<p>if you want to develop on the bot clone the source at bitbucket.org:</p>\n<pre>&gt; git clone https://bitbucket.org/botlib/mybot\n</pre>\n<p>BOTLIB contains the following modules:</p>\n<pre>bot.dft             - default\nbot.flt             - fleet\nbot.irc             - irc bot\nbot.krn             - core handler\nbot.rss             - rss to channel\nbot.shw             - show runtime\nbot.udp             - udp to channel\nbot.usr             - users\n</pre>\n<p>BOTLIB uses the LIBOBJ library which gets included in the tarball.</p>\n<pre>lo.clk              - clock\nlo.csl              - console\nlo.hdl              - handler\nlo.shl              - shell\nlo.thr              - threads\nlo.tms              - times\nlo.trc              - trace\nlo.typ              - types\n</pre>\n<p>You can add you own modules to the mybot package and if you want you can\ncreate your own package with commands in the mybot namespace.</p>\n<p>basic code is a function that gets an event as a argument:</p>\n<pre>def command(event):\n    &lt;&lt; your code here &gt;&gt;\n</pre>\n<p>to give feedback to the user use the event.reply(txt) method:</p>\n<pre>def command(event):\n    event.reply(\"yooo %s\" % event.origin)\n</pre>\n<p>have fun coding ;]</p>\n<p>C O N T A C T</p>\n<p>you can contact me on IRC/freenode/#dunkbots or email me at <a href=\"mailto:bthate%40dds.nl\">bthate<span>@</span>dds<span>.</span>nl</a></p>\n<div>\n<div>Bart Thate (<a href=\"mailto:bthate%40dds.nl\">bthate<span>@</span>dds<span>.</span>nl</a>, <a href=\"mailto:thatebart%40gmail.com\">thatebart<span>@</span>gmail<span>.</span>com</a>)</div>\n<div>botfather on #dunkbots irc.freenode.net</div>\n</div>\n\n          </div>"}, "last_serial": 7150313, "releases": {"1": [{"comment_text": "", "digests": {"md5": "8fde17aa7055950fdaf705274117e9d0", "sha256": "e9366b0d69545ff5e584e996f0eb5e9dc30a1ea1471d082abb0865d3740df36a"}, "downloads": -1, "filename": "mybot-1.tar.gz", "has_sig": false, "md5_digest": "8fde17aa7055950fdaf705274117e9d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21994, "upload_time": "2020-05-01T20:53:11", "upload_time_iso_8601": "2020-05-01T20:53:11.480723Z", "url": "https://files.pythonhosted.org/packages/e5/ec/99b96b6500456c00e3801e904e1b7f137d5be4d587709fe184fdcc0e8707/mybot-1.tar.gz", "yanked": false}], "2": [{"comment_text": "", "digests": {"md5": "4a510946601d806caa7f419056922650", "sha256": "04b2c033ce57690c1eb1b327076beafc9959ff7c159d7c0f337c4db208d4a6cf"}, "downloads": -1, "filename": "mybot-2.tar.gz", "has_sig": false, "md5_digest": "4a510946601d806caa7f419056922650", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25516, "upload_time": "2020-05-02T08:35:43", "upload_time_iso_8601": "2020-05-02T08:35:43.751328Z", "url": "https://files.pythonhosted.org/packages/c3/26/422cd2aa1be0977095c7b8fbdcaeb1835e1d8f8086addb2195b1df6ff636/mybot-2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4a510946601d806caa7f419056922650", "sha256": "04b2c033ce57690c1eb1b327076beafc9959ff7c159d7c0f337c4db208d4a6cf"}, "downloads": -1, "filename": "mybot-2.tar.gz", "has_sig": false, "md5_digest": "4a510946601d806caa7f419056922650", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25516, "upload_time": "2020-05-02T08:35:43", "upload_time_iso_8601": "2020-05-02T08:35:43.751328Z", "url": "https://files.pythonhosted.org/packages/c3/26/422cd2aa1be0977095c7b8fbdcaeb1835e1d8f8086addb2195b1df6ff636/mybot-2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:36 2020"}