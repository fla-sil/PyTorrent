{"info": {"author": "Daniel L. Marino", "author_email": "marinodl@vcu.edu", "bugtrack_url": null, "classifiers": [], "description": "twodlearn\n=========\nA library to develop machine learning models.\n\nA. Installation\n---------------\n\n* 1. Install the desired version of tensorflow (CPU or GPU)\n  ::\n\n    pip install tensorflow        # for CPU\n    pip install tensorflow-gpu    # for GPU\n\n\n* 2. Clone the project\n  ::\n\n    git clone git@github.com:danmar3/twodlearn.git twodlearn\n    cd twodlearn\n\n\n* 3. Install the project\n  ::\n\n    pip install -e .\n\n* 4. Install extras (optional)\n  ::\n\n    pip install -e .[reinforce]\n    pip install -e .[development]\n\n\nB. Run the tests using pytest\n-----------------------------\ninstall pytest ``pip install -U pytest``\n\nrun the unit-tests using pytest:\n::\n\n  cd twodlearn/tests/\n  pytest -ra                # print a short test summary info at the end of the session\n  pytest -x --pdb           # drop to PDB on first failure, then end test session\n  pytest --pdb --maxfail=3  # drop to PDB for first three failures\n  pytest --durations=10     # get the test execution time\n  pytest --lf               # to only re-run the failures.\n  pytest --cache-clear      # clear the cache of failed tests\n\n\n\nRoadmap for v0.6\n----------------\n- [x] migrate to TF 1.14\n- [ ] add documentation\n- [ ] add project to pypi\n- [ ] create LayerNamespace\n- [x] add a shortcut for required and optional input arguments\n- [x] add check_arguments method to Layer and TdlModel\n- [x] get_parameters now supports nested structures and nested SimpleNamespace\n- [ ] deprecate tuple initialization\n- [ ] deprecate optim\n- [ ] move feedforward to dense\n- [ ] cleanup common: clean deprecated descriptors and put them in separate file\n- [ ] remove redundant base classes, such as TdlObject\n- [ ] deprecate templates and design a format for estimators\n- [ ] deprecate options value\n- [ ] deprecate pyfmi and jmodelica\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/danmar3/twodlearn", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "twodlearn", "package_url": "https://pypi.org/project/twodlearn/", "platform": "", "project_url": "https://pypi.org/project/twodlearn/", "project_urls": {"Homepage": "https://github.com/danmar3/twodlearn"}, "release_url": "https://pypi.org/project/twodlearn/0.5.0/", "requires_dist": ["matplotlib", "pandas", "pathlib", "tensorflow", "tensorflow-datasets", "tensorflow-probability", "tqdm", "xarray", "jupyter; extra == 'development'", "line-profiler; extra == 'development'", "pytest; extra == 'development'", "pytest-faulthandler; extra == 'development'", "casadi; extra == 'reinforce'", "gym; extra == 'reinforce'", "pybullet (==2.4.5); extra == 'reinforce'"], "requires_python": ">=3.5.2", "summary": "Easy development of machine learning models", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A library to develop machine learning models.</p>\n<div id=\"a-installation\">\n<h2>A. Installation</h2>\n<ul>\n<li><p>1. Install the desired version of tensorflow (CPU or GPU)</p>\n<pre>pip install tensorflow        # for CPU\npip install tensorflow-gpu    # for GPU\n</pre>\n</li>\n<li><p>2. Clone the project</p>\n<pre>git clone git@github.com:danmar3/twodlearn.git twodlearn\ncd twodlearn\n</pre>\n</li>\n<li><p>3. Install the project</p>\n<pre>pip install -e .\n</pre>\n</li>\n<li><p>4. Install extras (optional)</p>\n<pre>pip install -e .[reinforce]\npip install -e .[development]\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"b-run-the-tests-using-pytest\">\n<h2>B. Run the tests using pytest</h2>\n<p>install pytest <tt>pip install <span class=\"pre\">-U</span> pytest</tt></p>\n<p>run the unit-tests using pytest:</p>\n<pre>cd twodlearn/tests/\npytest -ra                # print a short test summary info at the end of the session\npytest -x --pdb           # drop to PDB on first failure, then end test session\npytest --pdb --maxfail=3  # drop to PDB for first three failures\npytest --durations=10     # get the test execution time\npytest --lf               # to only re-run the failures.\npytest --cache-clear      # clear the cache of failed tests\n</pre>\n</div>\n<div id=\"roadmap-for-v0-6\">\n<h2>Roadmap for v0.6</h2>\n<ul>\n<li>[x] migrate to TF 1.14</li>\n<li>[ ] add documentation</li>\n<li>[ ] add project to pypi</li>\n<li>[ ] create LayerNamespace</li>\n<li>[x] add a shortcut for required and optional input arguments</li>\n<li>[x] add check_arguments method to Layer and TdlModel</li>\n<li>[x] get_parameters now supports nested structures and nested SimpleNamespace</li>\n<li>[ ] deprecate tuple initialization</li>\n<li>[ ] deprecate optim</li>\n<li>[ ] move feedforward to dense</li>\n<li>[ ] cleanup common: clean deprecated descriptors and put them in separate file</li>\n<li>[ ] remove redundant base classes, such as TdlObject</li>\n<li>[ ] deprecate templates and design a format for estimators</li>\n<li>[ ] deprecate options value</li>\n<li>[ ] deprecate pyfmi and jmodelica</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5712040, "releases": {"0.5.0": [{"comment_text": "", "digests": {"md5": "4152da0310190e7bdebf229b9644fb5b", "sha256": "43ebc7538ea0800319c780798810c6d159cfb4bc4e7813b391e4b7e55b5b9841"}, "downloads": -1, "filename": "twodlearn-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4152da0310190e7bdebf229b9644fb5b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.2", "size": 184400, "upload_time": "2019-08-21T22:15:58", "upload_time_iso_8601": "2019-08-21T22:15:58.931486Z", "url": "https://files.pythonhosted.org/packages/61/ee/a734f37a0faf12b7390bc4cacc49f49a871e130ca336b6b17980cab18aba/twodlearn-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3de370346cb109971bf8461ad9b0edb7", "sha256": "1a6979987b92e4846abfb91f04e70805a4e67e53a883c87eeaf4a9e3e2741574"}, "downloads": -1, "filename": "twodlearn-0.5.0.tar.gz", "has_sig": false, "md5_digest": "3de370346cb109971bf8461ad9b0edb7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.2", "size": 146573, "upload_time": "2019-08-21T22:16:01", "upload_time_iso_8601": "2019-08-21T22:16:01.417075Z", "url": "https://files.pythonhosted.org/packages/11/2d/b7a396e2aeb3df3bead2ad6c3bddc5c79b299e54011023ec3ca9344473fe/twodlearn-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4152da0310190e7bdebf229b9644fb5b", "sha256": "43ebc7538ea0800319c780798810c6d159cfb4bc4e7813b391e4b7e55b5b9841"}, "downloads": -1, "filename": "twodlearn-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4152da0310190e7bdebf229b9644fb5b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.2", "size": 184400, "upload_time": "2019-08-21T22:15:58", "upload_time_iso_8601": "2019-08-21T22:15:58.931486Z", "url": "https://files.pythonhosted.org/packages/61/ee/a734f37a0faf12b7390bc4cacc49f49a871e130ca336b6b17980cab18aba/twodlearn-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3de370346cb109971bf8461ad9b0edb7", "sha256": "1a6979987b92e4846abfb91f04e70805a4e67e53a883c87eeaf4a9e3e2741574"}, "downloads": -1, "filename": "twodlearn-0.5.0.tar.gz", "has_sig": false, "md5_digest": "3de370346cb109971bf8461ad9b0edb7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.2", "size": 146573, "upload_time": "2019-08-21T22:16:01", "upload_time_iso_8601": "2019-08-21T22:16:01.417075Z", "url": "https://files.pythonhosted.org/packages/11/2d/b7a396e2aeb3df3bead2ad6c3bddc5c79b299e54011023ec3ca9344473fe/twodlearn-0.5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:43:28 2020"}