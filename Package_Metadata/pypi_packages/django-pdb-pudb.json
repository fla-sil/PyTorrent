{"info": {"author": "Tristram Oaten and Tom Christie", "author_email": "tris@blackgateresearch.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Intended Audience :: Developers", "License :: Public Domain", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "FORK!\n-----\n\nThis is used in exactly the same way as the upstream fork, but it uses the MAGNIFICENT pudb library (https://github.com/inducer/pudb) to do postmortem.\n\n------------------\n\n\n**Status**: I no longer actively use this project, and am only accepting bugfixes and django compatibility pull requests.\n\nDjango PDB\n==========\n\nMake debugging Django easier\n----------------------------\n\nAdding ``pdb.set_trace()`` to your source files every time you want to break into pdb sucks.\n\nDon't do that.\n\nDo this.\n\nInstallation\n------------\n\nInstall using pip::\n\n    pip install django-pdb\n\nAdd it to your settings.py.\n\nFor Django before 1.7 it needs to be added AFTER any apps that override the\n`runserver` or `test` commands (includes south and django.contrib.staticfiles).\n\nFor Django after 1.7 it needs to be added BEFORE them.\n\n.. code:: python\n\n    # Order is important and depends on your Django version.\n    # With Django 1.7+ put it towards the beginning, otherwise towards the end.\n    INSTALLED_APPS = (\n        ...\n        'django_pdb',\n        ...\n    )\n\n    # Make sure to add PdbMiddleware after all other middleware.\n    # PdbMiddleware only activates when settings.DEBUG is True.\n    MIDDLEWARE_CLASSES = (\n        ...\n        'django_pdb.middleware.PdbMiddleware',\n    )\n\nUsage\n-----\n\n``manage.py runserver``\n\nDrops into pdb at the start of a view if the URL includes a `pdb` GET parameter.\n\nDrops into ipdb at the start of a view if the URL includes a `ipdb` GET parameter.\n\nThis behavior is only enabled if ``settings.DEBUG = True``::\n\n    bash: testproject/manage.py runserver\n    Validating models...\n\n    0 errors found\n    Django version 1.3, using settings 'testproject.settings'\n    Development server is running at http://127.0.0.1:8000/\n    Quit the server with CONTROL-C.\n\n    GET /test?pdb\n    function \"myview\" in testapp/views.py:7\n    args: ()\n    kwargs: {}\n\n    > /Users/tom/github/django-pdb/testproject/testapp/views.py(8)myview()\n    -> a = 1\n    (Pdb)\n\n``manage.py runserver --pdb`` **or** ``manage.py runserver --ipdb``\n\nDrops into pdb/ipdb at the start of every view::\n\n    bash: testproject/manage.py runserver --pdb\n    Validating models...\n\n    0 errors found\n    Django version 1.3, using settings 'testproject.settings'\n    Development server is running at http://127.0.0.1:8000/\n    Quit the server with CONTROL-C.\n\n    GET /test\n    function \"myview\" in testapp/views.py:7\n    args: ()\n    kwargs: {}\n\n    > /Users/tom/github/django-pdb/testproject/testapp/views.py(7)myview()\n    -> a = 1\n    (Pdb)\n\n\n``manage.py test --pdb`` **or** ``manage.py test --ipdb``\n\nDrops into pdb/ipdb on test errors/failures::\n\n    bash: testproject/manage.py test testapp --pdb\n    Creating test database for alias 'default'...\n    E\n    ======================================================================\n    >>> test_error (testapp.tests.SimpleTest)\n    ----------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"/Users/tom/github/django-pdb/testproject/testapp/tests.py\", line 16, in test_error\n        one_plus_one = four\n    NameError: global name 'four' is not defined\n    ======================================================================\n\n    > /Users/tom/github/django-pdb/testproject/testapp/tests.py(16)test_error()\n    -> one_plus_one = four\n    (Pdb)\n\n\nPost mortem mode\n----------------\n\n``manage.py runserver --pm``\n\nPost mortem mode, drops into (i)pdb if an exception is raised in a view. This works only if there is\nno other app overriding ``runserver`` command.\n\n``POST_MORTEM = True``\n\nYou can also add ```POST_MORTEM = True``` to your ```settings.py``` to enable this option even if other app overrides ```runserver```.\n\nFilter\n------\n\nYou can also use the template filter ``pdb`` or ``ipdb`` to explore a template variable in (i)pdb this way::\n\n    {% load pdb %}\n\n    {{ variable|pdb }}\n    {{ variable|ipdb }}\n    {{ variable|ipdb|a_filter_to_debug }}\n\nExample::\n\n    bash: testproject/manage.py runserver\n    Validating models...\n\n    0 errors found\n    Django version 1.4, using settings 'testproject.settings'\n    Development server is running at http://127.0.0.1:8000/\n    Quit the server with CONTROL-C.\n    > /Users/tom/github/django-pdb/django_pdb/templatetags/pdb_filters.py(14)pdb()\n    -> return element\n    (Pdb) element\n    \"I'm the variable\"\n    (Pdb) element = \"another value\"\n    (Pdb) c\n    [11/May/2012 11:22:53] \"GET /filter/ HTTP/1.1\" 200 37\n\nThis is useful to inspect a complex object that isn't behaving as expected or debug a filter.\n\nOther apps that override ``test``/``runserver``\n-----------------------------------------------\n\n``manage.py test --pdb`` works if you also have other apps that\noverride the ``test`` command, as long as they use Python's unittest\nframework.\n\nMake sure to put ``django_pdb`` **after** any conflicting apps in\n``INSTALLED_APPS`` so that they have priority.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/0atman/django-pudb", "keywords": null, "license": "Public Domain", "maintainer": null, "maintainer_email": null, "name": "django-pdb-pudb", "package_url": "https://pypi.org/project/django-pdb-pudb/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-pdb-pudb/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/0atman/django-pudb"}, "release_url": "https://pypi.org/project/django-pdb-pudb/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Easier pudb debugging for Django. Fork of django-pdb by Tom Christie.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"fork\">\n<h2>FORK!</h2>\n<p>This is used in exactly the same way as the upstream fork, but it uses the MAGNIFICENT pudb library (<a href=\"https://github.com/inducer/pudb\" rel=\"nofollow\">https://github.com/inducer/pudb</a>) to do postmortem.</p>\n<hr class=\"docutils\">\n<p><strong>Status</strong>: I no longer actively use this project, and am only accepting bugfixes and django compatibility pull requests.</p>\n<div id=\"django-pdb\">\n<h3>Django PDB</h3>\n</div>\n</div>\n<div id=\"make-debugging-django-easier\">\n<h2>Make debugging Django easier</h2>\n<p>Adding <tt>pdb.set_trace()</tt> to your source files every time you want to break into pdb sucks.</p>\n<p>Don\u2019t do that.</p>\n<p>Do this.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install using pip:</p>\n<pre>pip install django-pdb\n</pre>\n<p>Add it to your settings.py.</p>\n<p>For Django before 1.7 it needs to be added AFTER any apps that override the\n<cite>runserver</cite> or <cite>test</cite> commands (includes south and django.contrib.staticfiles).</p>\n<p>For Django after 1.7 it needs to be added BEFORE them.</p>\n<pre><span class=\"c1\"># Order is important and depends on your Django version.</span>\n<span class=\"c1\"># With Django 1.7+ put it towards the beginning, otherwise towards the end.</span>\n<span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'django_pdb'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Make sure to add PdbMiddleware after all other middleware.</span>\n<span class=\"c1\"># PdbMiddleware only activates when settings.DEBUG is True.</span>\n<span class=\"n\">MIDDLEWARE_CLASSES</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'django_pdb.middleware.PdbMiddleware'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p><tt>manage.py runserver</tt></p>\n<p>Drops into pdb at the start of a view if the URL includes a <cite>pdb</cite> GET parameter.</p>\n<p>Drops into ipdb at the start of a view if the URL includes a <cite>ipdb</cite> GET parameter.</p>\n<p>This behavior is only enabled if <tt>settings.DEBUG = True</tt>:</p>\n<pre>bash: testproject/manage.py runserver\nValidating models...\n\n0 errors found\nDjango version 1.3, using settings 'testproject.settings'\nDevelopment server is running at http://127.0.0.1:8000/\nQuit the server with CONTROL-C.\n\nGET /test?pdb\nfunction \"myview\" in testapp/views.py:7\nargs: ()\nkwargs: {}\n\n&gt; /Users/tom/github/django-pdb/testproject/testapp/views.py(8)myview()\n-&gt; a = 1\n(Pdb)\n</pre>\n<p><tt>manage.py runserver <span class=\"pre\">--pdb</span></tt> <strong>or</strong> <tt>manage.py runserver <span class=\"pre\">--ipdb</span></tt></p>\n<p>Drops into pdb/ipdb at the start of every view:</p>\n<pre>bash: testproject/manage.py runserver --pdb\nValidating models...\n\n0 errors found\nDjango version 1.3, using settings 'testproject.settings'\nDevelopment server is running at http://127.0.0.1:8000/\nQuit the server with CONTROL-C.\n\nGET /test\nfunction \"myview\" in testapp/views.py:7\nargs: ()\nkwargs: {}\n\n&gt; /Users/tom/github/django-pdb/testproject/testapp/views.py(7)myview()\n-&gt; a = 1\n(Pdb)\n</pre>\n<p><tt>manage.py test <span class=\"pre\">--pdb</span></tt> <strong>or</strong> <tt>manage.py test <span class=\"pre\">--ipdb</span></tt></p>\n<p>Drops into pdb/ipdb on test errors/failures:</p>\n<pre>bash: testproject/manage.py test testapp --pdb\nCreating test database for alias 'default'...\nE\n======================================================================\n&gt;&gt;&gt; test_error (testapp.tests.SimpleTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/tom/github/django-pdb/testproject/testapp/tests.py\", line 16, in test_error\n    one_plus_one = four\nNameError: global name 'four' is not defined\n======================================================================\n\n&gt; /Users/tom/github/django-pdb/testproject/testapp/tests.py(16)test_error()\n-&gt; one_plus_one = four\n(Pdb)\n</pre>\n</div>\n<div id=\"post-mortem-mode\">\n<h2>Post mortem mode</h2>\n<p><tt>manage.py runserver <span class=\"pre\">--pm</span></tt></p>\n<p>Post mortem mode, drops into (i)pdb if an exception is raised in a view. This works only if there is\nno other app overriding <tt>runserver</tt> command.</p>\n<p><tt>POST_MORTEM = True</tt></p>\n<p>You can also add <tt>`POST_MORTEM = True`</tt> to your <tt>`settings.py`</tt> to enable this option even if other app overrides <tt>`runserver`</tt>.</p>\n</div>\n<div id=\"filter\">\n<h2>Filter</h2>\n<p>You can also use the template filter <tt>pdb</tt> or <tt>ipdb</tt> to explore a template variable in (i)pdb this way:</p>\n<pre>{% load pdb %}\n\n{{ variable|pdb }}\n{{ variable|ipdb }}\n{{ variable|ipdb|a_filter_to_debug }}\n</pre>\n<p>Example:</p>\n<pre>bash: testproject/manage.py runserver\nValidating models...\n\n0 errors found\nDjango version 1.4, using settings 'testproject.settings'\nDevelopment server is running at http://127.0.0.1:8000/\nQuit the server with CONTROL-C.\n&gt; /Users/tom/github/django-pdb/django_pdb/templatetags/pdb_filters.py(14)pdb()\n-&gt; return element\n(Pdb) element\n\"I'm the variable\"\n(Pdb) element = \"another value\"\n(Pdb) c\n[11/May/2012 11:22:53] \"GET /filter/ HTTP/1.1\" 200 37\n</pre>\n<p>This is useful to inspect a complex object that isn\u2019t behaving as expected or debug a filter.</p>\n</div>\n<div id=\"other-apps-that-override-test-runserver\">\n<h2>Other apps that override <tt>test</tt>/<tt>runserver</tt></h2>\n<p><tt>manage.py test <span class=\"pre\">--pdb</span></tt> works if you also have other apps that\noverride the <tt>test</tt> command, as long as they use Python\u2019s unittest\nframework.</p>\n<p>Make sure to put <tt>django_pdb</tt> <strong>after</strong> any conflicting apps in\n<tt>INSTALLED_APPS</tt> so that they have priority.</p>\n</div>\n\n          </div>"}, "last_serial": 1899470, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "3f47bcb45641a293a4f2c90e238c086b", "sha256": "e95b9fab36fed0f6ccfc7d7689194f10629808f927ee26a23919dedc75d75894"}, "downloads": -1, "filename": "django-pdb-pudb-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3f47bcb45641a293a4f2c90e238c086b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7661, "upload_time": "2016-01-11T17:53:21", "upload_time_iso_8601": "2016-01-11T17:53:21.418225Z", "url": "https://files.pythonhosted.org/packages/ae/bc/739ebe66393763cf4687c55d6cc2a3f6b0b5c7336cb9b7a39ecc16c7c968/django-pdb-pudb-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3f47bcb45641a293a4f2c90e238c086b", "sha256": "e95b9fab36fed0f6ccfc7d7689194f10629808f927ee26a23919dedc75d75894"}, "downloads": -1, "filename": "django-pdb-pudb-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3f47bcb45641a293a4f2c90e238c086b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7661, "upload_time": "2016-01-11T17:53:21", "upload_time_iso_8601": "2016-01-11T17:53:21.418225Z", "url": "https://files.pythonhosted.org/packages/ae/bc/739ebe66393763cf4687c55d6cc2a3f6b0b5c7336cb9b7a39ecc16c7c968/django-pdb-pudb-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:10 2020"}