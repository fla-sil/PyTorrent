{"info": {"author": "Bogdan Mustiata", "author_email": "bogdan.mustiata@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Project archer is a program that allows easy switching between different\nthings such as projects, servers, application servers by changing the\ncurrent shell.\n\nInstallation\n============\n\n.. code:: sh\n\n    pip3 install project-archer\n\nConfiguration\n=============\n\nIn order to define a new type of a resource, let\u2019s say a ``project``,\nyou need first to configure in your ``.bashrc`` the following:\n\n.. code:: sh\n\n    eval \"$(archer project)\"\n\nThis defines a new function in the shell called ``project``. Using this\ncommand you\u2019re able to manage the projects, as well as changing to the\ncurrent one.\n\ni.e. on my machine:\n\n.. code:: text\n\n    Available projects:\n     - mopyx.yml: mopyx\n     - gsb.yml: Germanium Selector Builder\n     ...\n     - lic.yml: Germanium Licenses\n     - gsr.yml: Germanium Star - Runner\n    Current project: <none>\n\nIn order to create a new project just run:\n\n.. code:: sh\n\n    project -n test\n\nThis opens the currently configured editor in the ``$EDITOR`` shell\nvariable, and in there define what happens when switching to that\nproject. This file is created in ``~/.archer/projects/test.yml``\n\n.. code:: yaml\n\n    config:\n      name: Some descriptive name of your project\n      layouts:\n      - maven\n      exports:\n        VAR1: value\n      requires:\n      - JAVA_HOME\n      commands:\n        command1: |\n          ls -l ...\n        command2: |\n          # do something else\n          pwd\n      activate: |\n        # this script runs only once after this project is selected\n        ..\n      deactivate: |\n        # this script runs when switching to another project\n        ..\n\nLayouts have the same structure, and hold common ``activate``,\n``deactivate``, ``exports`` and ``commands`` that are used over multiple\nprojects. By just pointing to the ``layout`` all the scripts are being\nmixed into the current project definition. Having a ``requires``\nenforces some environment variables to be present before switching to\nthe other project.\n\nLayouts have the same structure, except they reside in\n``~/.archer/projects/layouts/*.yml``.\n\nThe variables that are exposed into the ``exports`` are exported in the\ncurrent shell.\n\nEach of the ``commands`` is wrapped into a shell function and available\nfor execution.\n\nExample Maven Layout\n====================\n\n.. code:: yaml\n\n    layout:\n        name: maven\n        requires: [ PROJECT_HOME ]\n        exports:\n            PROJECT_BUILD_FOLDER: target/\n            MAVEN_OPTS: -Xmx2048m\n        commands:\n            build: |\n                CURRENT_FOLDER=$(pwd)\n                cd $PROJECT_HOME\n                mvn install $@ $EXTRA_MAVEN_PARAMS\n                cd $CURRENT_FOLDER\n            clean: |\n                CURRENT_FOLDER=$(pwd)\n                cd $PROJECT_HOME\n                mvn clean $@ $EXTRA_MAVEN_PARAMS\n                cd $CURRENT_FOLDER\n            test: |\n                CURRENT_FOLDER=$(pwd)\n                cd $PROJECT_HOME\n                mvn test $@ $EXTRA_MAVEN_PARAMS\n                cd $CURRENT_FOLDER\n            cdproj: |\n                cd $PROJECT_HOME\n            rebuild: |\n                clean && build $@\n\nAnd a sample project let\u2019s say called ``lic.yml``:\n\n.. code:: yaml\n\n    config:\n      name: Germanium Licenses\n      layouts:\n        - maven\n      exports:\n        PROJECT_HOME: /home/raptor/projects/germanium-license\n      activate: |\n        cdproj\n\nWhen calling ``project lic``, the project gets activated, our current\nfolder gets automatically changed to\n``/home/raptor/projects/germanium-license``, and in the current shell we\nhave now defined the commands, ``build``, ``clean``, ``test``,\n``cdproj`` and ``rebuild`` that execute from any folder we\u2019re in the\nmaven builds.\n\nTo have another maven project, means now just having another file\npointing to the different ``PROJECT_HOME``.\n\nThe commands are defined per domain of a problem, and when switching to\nanother project, the old commands, and all associated environment\nvariables are undefined.\n\nThis also makes sense to start combining them, for example having a\n``server`` and a ``project`` definition and testing two projects against\ntow application servers becomes:\n\n.. code:: sh\n\n    project A\n    rebuild\n    serverstop                              # we stop whatever tomcat my be active\n    server tomcat7\n    redeploy && serverstart                 # test on tomcat 7\n    serverstop                              # we stop the current tomcat\n    server tomcat8\n    redeploy && serverstart                 # test on tomcat 8\n    serverstop                              # we stop the current tomcat\n    # we go now on testing project B\n    project B\n    rebuild\n    server tomcat7\n    redeploy && serverstart                 # test on tomcat 7\n    serverstop                              # we stop the current tomcat\n    server tomcat8\n    redeploy && serverstart                 # test on tomcat 8\n\nWhenever in doubt a call to either ``project`` or ``server`` shows the\nlist of available servers, and projects, and the active server and\nproject.\n\nNote that everything becomes far more easier, since we don\u2019t need to\nmove around ``war`` files, search for running tomcats, and restarting\nservices manually, cleaning up old things. etc.\n\nHere\u2019s actual layouts that I use for the\n`tomcat-server <https://raw.githubusercontent.com/bmustiata/dotfiles/master/.archer/servers/layouts/tomcat-server.yml>`__\nand the `maven\nproject <https://raw.githubusercontent.com/bmustiata/dotfiles/master/.archer/projects/layouts/maven.yml>`__.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "project_archer", "package_url": "https://pypi.org/project/project_archer/", "platform": "", "project_url": "https://pypi.org/project/project_archer/", "project_urls": null, "release_url": "https://pypi.org/project/project_archer/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "Switch projects with ease.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Project archer is a program that allows easy switching between different\nthings such as projects, servers, application servers by changing the\ncurrent shell.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip3 install project-archer\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>In order to define a new type of a resource, let\u2019s say a <tt>project</tt>,\nyou need first to configure in your <tt>.bashrc</tt> the following:</p>\n<pre><span class=\"nb\">eval</span> <span class=\"s2\">\"</span><span class=\"k\">$(</span>archer project<span class=\"k\">)</span><span class=\"s2\">\"</span>\n</pre>\n<p>This defines a new function in the shell called <tt>project</tt>. Using this\ncommand you\u2019re able to manage the projects, as well as changing to the\ncurrent one.</p>\n<p>i.e. on my machine:</p>\n<pre>Available projects:\n - mopyx.yml: mopyx\n - gsb.yml: Germanium Selector Builder\n ...\n - lic.yml: Germanium Licenses\n - gsr.yml: Germanium Star - Runner\nCurrent project: &lt;none&gt;\n</pre>\n<p>In order to create a new project just run:</p>\n<pre>project -n <span class=\"nb\">test</span>\n</pre>\n<p>This opens the currently configured editor in the <tt>$EDITOR</tt> shell\nvariable, and in there define what happens when switching to that\nproject. This file is created in <tt><span class=\"pre\">~/.archer/projects/test.yml</span></tt></p>\n<pre><span class=\"nt\">config</span><span class=\"p\">:</span>\n  <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">Some descriptive name of your project</span>\n  <span class=\"nt\">layouts</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">maven</span>\n  <span class=\"nt\">exports</span><span class=\"p\">:</span>\n    <span class=\"nt\">VAR1</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">value</span>\n  <span class=\"nt\">requires</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">JAVA_HOME</span>\n  <span class=\"nt\">commands</span><span class=\"p\">:</span>\n    <span class=\"nt\">command1</span><span class=\"p\">:</span> <span class=\"p-Indicator\">|</span>\n      <span class=\"no\">ls -l ...</span>\n    <span class=\"nt\">command2</span><span class=\"p\">:</span> <span class=\"p-Indicator\">|</span>\n      <span class=\"no\"># do something else</span>\n      <span class=\"no\">pwd</span>\n  <span class=\"nt\">activate</span><span class=\"p\">:</span> <span class=\"p-Indicator\">|</span>\n    <span class=\"no\"># this script runs only once after this project is selected</span>\n    <span class=\"no\">..</span>\n  <span class=\"nt\">deactivate</span><span class=\"p\">:</span> <span class=\"p-Indicator\">|</span>\n    <span class=\"no\"># this script runs when switching to another project</span>\n    <span class=\"no\">..</span>\n</pre>\n<p>Layouts have the same structure, and hold common <tt>activate</tt>,\n<tt>deactivate</tt>, <tt>exports</tt> and <tt>commands</tt> that are used over multiple\nprojects. By just pointing to the <tt>layout</tt> all the scripts are being\nmixed into the current project definition. Having a <tt>requires</tt>\nenforces some environment variables to be present before switching to\nthe other project.</p>\n<p>Layouts have the same structure, except they reside in\n<tt><span class=\"pre\">~/.archer/projects/layouts/*.yml</span></tt>.</p>\n<p>The variables that are exposed into the <tt>exports</tt> are exported in the\ncurrent shell.</p>\n<p>Each of the <tt>commands</tt> is wrapped into a shell function and available\nfor execution.</p>\n</div>\n<div id=\"example-maven-layout\">\n<h2>Example Maven Layout</h2>\n<pre><span class=\"nt\">layout</span><span class=\"p\">:</span>\n    <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">maven</span>\n    <span class=\"nt\">requires</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span> <span class=\"nv\">PROJECT_HOME</span> <span class=\"p-Indicator\">]</span>\n    <span class=\"nt\">exports</span><span class=\"p\">:</span>\n        <span class=\"nt\">PROJECT_BUILD_FOLDER</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">target/</span>\n        <span class=\"nt\">MAVEN_OPTS</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">-Xmx2048m</span>\n    <span class=\"nt\">commands</span><span class=\"p\">:</span>\n        <span class=\"nt\">build</span><span class=\"p\">:</span> <span class=\"p-Indicator\">|</span>\n            <span class=\"no\">CURRENT_FOLDER=$(pwd)</span>\n            <span class=\"no\">cd $PROJECT_HOME</span>\n            <span class=\"no\">mvn install $@ $EXTRA_MAVEN_PARAMS</span>\n            <span class=\"no\">cd $CURRENT_FOLDER</span>\n        <span class=\"nt\">clean</span><span class=\"p\">:</span> <span class=\"p-Indicator\">|</span>\n            <span class=\"no\">CURRENT_FOLDER=$(pwd)</span>\n            <span class=\"no\">cd $PROJECT_HOME</span>\n            <span class=\"no\">mvn clean $@ $EXTRA_MAVEN_PARAMS</span>\n            <span class=\"no\">cd $CURRENT_FOLDER</span>\n        <span class=\"nt\">test</span><span class=\"p\">:</span> <span class=\"p-Indicator\">|</span>\n            <span class=\"no\">CURRENT_FOLDER=$(pwd)</span>\n            <span class=\"no\">cd $PROJECT_HOME</span>\n            <span class=\"no\">mvn test $@ $EXTRA_MAVEN_PARAMS</span>\n            <span class=\"no\">cd $CURRENT_FOLDER</span>\n        <span class=\"nt\">cdproj</span><span class=\"p\">:</span> <span class=\"p-Indicator\">|</span>\n            <span class=\"no\">cd $PROJECT_HOME</span>\n        <span class=\"nt\">rebuild</span><span class=\"p\">:</span> <span class=\"p-Indicator\">|</span>\n            <span class=\"no\">clean &amp;&amp; build $@</span>\n</pre>\n<p>And a sample project let\u2019s say called <tt>lic.yml</tt>:</p>\n<pre><span class=\"nt\">config</span><span class=\"p\">:</span>\n  <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">Germanium Licenses</span>\n  <span class=\"nt\">layouts</span><span class=\"p\">:</span>\n    <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">maven</span>\n  <span class=\"nt\">exports</span><span class=\"p\">:</span>\n    <span class=\"nt\">PROJECT_HOME</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">/home/raptor/projects/germanium-license</span>\n  <span class=\"nt\">activate</span><span class=\"p\">:</span> <span class=\"p-Indicator\">|</span>\n    <span class=\"no\">cdproj</span>\n</pre>\n<p>When calling <tt>project lic</tt>, the project gets activated, our current\nfolder gets automatically changed to\n<tt><span class=\"pre\">/home/raptor/projects/germanium-license</span></tt>, and in the current shell we\nhave now defined the commands, <tt>build</tt>, <tt>clean</tt>, <tt>test</tt>,\n<tt>cdproj</tt> and <tt>rebuild</tt> that execute from any folder we\u2019re in the\nmaven builds.</p>\n<p>To have another maven project, means now just having another file\npointing to the different <tt>PROJECT_HOME</tt>.</p>\n<p>The commands are defined per domain of a problem, and when switching to\nanother project, the old commands, and all associated environment\nvariables are undefined.</p>\n<p>This also makes sense to start combining them, for example having a\n<tt>server</tt> and a <tt>project</tt> definition and testing two projects against\ntow application servers becomes:</p>\n<pre>project A\nrebuild\nserverstop                              <span class=\"c1\"># we stop whatever tomcat my be active\n</span>server tomcat7\nredeploy <span class=\"o\">&amp;&amp;</span> serverstart                 <span class=\"c1\"># test on tomcat 7\n</span>serverstop                              <span class=\"c1\"># we stop the current tomcat\n</span>server tomcat8\nredeploy <span class=\"o\">&amp;&amp;</span> serverstart                 <span class=\"c1\"># test on tomcat 8\n</span>serverstop                              <span class=\"c1\"># we stop the current tomcat\n# we go now on testing project B\n</span>project B\nrebuild\nserver tomcat7\nredeploy <span class=\"o\">&amp;&amp;</span> serverstart                 <span class=\"c1\"># test on tomcat 7\n</span>serverstop                              <span class=\"c1\"># we stop the current tomcat\n</span>server tomcat8\nredeploy <span class=\"o\">&amp;&amp;</span> serverstart                 <span class=\"c1\"># test on tomcat 8</span>\n</pre>\n<p>Whenever in doubt a call to either <tt>project</tt> or <tt>server</tt> shows the\nlist of available servers, and projects, and the active server and\nproject.</p>\n<p>Note that everything becomes far more easier, since we don\u2019t need to\nmove around <tt>war</tt> files, search for running tomcats, and restarting\nservices manually, cleaning up old things. etc.</p>\n<p>Here\u2019s actual layouts that I use for the\n<a href=\"https://raw.githubusercontent.com/bmustiata/dotfiles/master/.archer/servers/layouts/tomcat-server.yml\" rel=\"nofollow\">tomcat-server</a>\nand the <a href=\"https://raw.githubusercontent.com/bmustiata/dotfiles/master/.archer/projects/layouts/maven.yml\" rel=\"nofollow\">maven\nproject</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6231839, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "8b017b4d183011a89542effdf160897f", "sha256": "ae9aa843c0aecf40b6549e09cc87463acf45543756e843f37b7b14d9573c4bf2"}, "downloads": -1, "filename": "project_archer-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8b017b4d183011a89542effdf160897f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4502, "upload_time": "2019-11-08T19:14:00", "upload_time_iso_8601": "2019-11-08T19:14:00.524893Z", "url": "https://files.pythonhosted.org/packages/ed/03/2b120e34e40e37122a973a9810fc1ebd708f9f3c2c063daab20db35c01af/project_archer-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "b6e0129e59e3cee82a3bc8636dfdb860", "sha256": "da7d0f4790fc6e8c29abeb3f64006077e6c4936580fb30edae180aeb838435ad"}, "downloads": -1, "filename": "project_archer-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b6e0129e59e3cee82a3bc8636dfdb860", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4513, "upload_time": "2019-11-09T05:32:59", "upload_time_iso_8601": "2019-11-09T05:32:59.145937Z", "url": "https://files.pythonhosted.org/packages/30/01/6e5bad3f091ac6897b4a71c1f0d03ff79476dd366bc6d2f60ddfcb722e04/project_archer-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "f92d7ee5ed318ce9e8986c6d81eb96ce", "sha256": "7fcd85353b616c77d5f81934ef5e71a2ca9ed5e915a2955c28ed9b7846146f4d"}, "downloads": -1, "filename": "project_archer-0.1.2.tar.gz", "has_sig": false, "md5_digest": "f92d7ee5ed318ce9e8986c6d81eb96ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7523, "upload_time": "2019-11-09T06:53:32", "upload_time_iso_8601": "2019-11-09T06:53:32.909666Z", "url": "https://files.pythonhosted.org/packages/20/2c/5ec675442bd19b0e4dc3f6e2ff91811b604ff29c84e53f6a7a1ac9ec38fd/project_archer-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "aef07653aba46e7fc729e4542186d885", "sha256": "7be9873006ff222f9c9ab18e470ecbc2a9796a33d1c7af0759b6b2769bf37f68"}, "downloads": -1, "filename": "project_archer-0.1.3.tar.gz", "has_sig": false, "md5_digest": "aef07653aba46e7fc729e4542186d885", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7529, "upload_time": "2019-11-12T22:43:34", "upload_time_iso_8601": "2019-11-12T22:43:34.813488Z", "url": "https://files.pythonhosted.org/packages/48/5d/ca68cf7679e34597345229913694cd8fe923010c15586c6608eca31149b9/project_archer-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "cf8bc3e0626249511cb48a1fb83804b9", "sha256": "14dea3bf523f203acf98bcd90aecd356d9f7c59e643eb1386f3d0b22398bee41"}, "downloads": -1, "filename": "project_archer-0.1.4.tar.gz", "has_sig": false, "md5_digest": "cf8bc3e0626249511cb48a1fb83804b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7616, "upload_time": "2019-11-25T21:46:27", "upload_time_iso_8601": "2019-11-25T21:46:27.557983Z", "url": "https://files.pythonhosted.org/packages/2c/e7/47cd710f0ffc41f21a6deab3a9d21b7ea580a535f35031a1267fe4defc88/project_archer-0.1.4.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "1422aa86c649722a5a07119df838a222", "sha256": "2a6c215288e33c10731f4277ee14a16cbda382ed9bcbf59163866f208c5a23c4"}, "downloads": -1, "filename": "project_archer-0.2.0.tar.gz", "has_sig": false, "md5_digest": "1422aa86c649722a5a07119df838a222", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7575, "upload_time": "2019-12-02T03:46:57", "upload_time_iso_8601": "2019-12-02T03:46:57.536698Z", "url": "https://files.pythonhosted.org/packages/cc/65/770c09412c4eb021b59514fd0a9bb7405fc89ebc6606d780bb6854954623/project_archer-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "281bc5537e608973a12288eddafeb391", "sha256": "6837d942f3b0b16c045086dec24c3d71a59cc2a430992ae9bd8a84bb82f20e76"}, "downloads": -1, "filename": "project_archer-0.2.1.tar.gz", "has_sig": false, "md5_digest": "281bc5537e608973a12288eddafeb391", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7658, "upload_time": "2019-12-03T02:18:55", "upload_time_iso_8601": "2019-12-03T02:18:55.386516Z", "url": "https://files.pythonhosted.org/packages/af/18/5103aa682b588336d036bef461a3b0e256689bda3f326143f665b6c916f8/project_archer-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "281bc5537e608973a12288eddafeb391", "sha256": "6837d942f3b0b16c045086dec24c3d71a59cc2a430992ae9bd8a84bb82f20e76"}, "downloads": -1, "filename": "project_archer-0.2.1.tar.gz", "has_sig": false, "md5_digest": "281bc5537e608973a12288eddafeb391", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7658, "upload_time": "2019-12-03T02:18:55", "upload_time_iso_8601": "2019-12-03T02:18:55.386516Z", "url": "https://files.pythonhosted.org/packages/af/18/5103aa682b588336d036bef461a3b0e256689bda3f326143f665b6c916f8/project_archer-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:20 2020"}