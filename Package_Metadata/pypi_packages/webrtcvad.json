{"info": {"author": "John Wiseman", "author_email": "jjwiseman@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Human Machine Interfaces", "Topic :: Scientific/Engineering :: Information Analysis"], "description": ".. image:: https://travis-ci.org/wiseman/py-webrtcvad.svg?branch=master\n    :target: https://travis-ci.org/wiseman/py-webrtcvad\n\npy-webrtcvad\n============\n\nThis is a python interface to the WebRTC Voice Activity Detector\n(VAD).  It is compatible with Python 2 and Python 3.\n\nA `VAD <https://en.wikipedia.org/wiki/Voice_activity_detection>`_\nclassifies a piece of audio data as being voiced or unvoiced. It can\nbe useful for telephony and speech recognition.\n\nThe VAD that Google developed for the `WebRTC <https://webrtc.org/>`_\nproject is reportedly one of the best available, being fast, modern\nand free.\n\nHow to use it\n-------------\n\n0. Install the webrtcvad module::\n\n    pip install webrtcvad\n\n1. Create a ``Vad`` object::\n\n    import webrtcvad\n    vad = webrtcvad.Vad()\n\n2. Optionally, set its aggressiveness mode, which is an integer\n   between 0 and 3. 0 is the least aggressive about filtering out\n   non-speech, 3 is the most aggressive. (You can also set the mode\n   when you create the VAD, e.g. ``vad = webrtcvad.Vad(3)``)::\n\n    vad.set_mode(1)\n\n3. Give it a short segment (\"frame\") of audio. The WebRTC VAD only\n   accepts 16-bit mono PCM audio, sampled at 8000, 16000, or 32000 Hz.\n   A frame must be either 10, 20, or 30 ms in duration::\n\n    # Run the VAD on 10 ms of silence. The result should be False.\n    sample_rate = 16000\n    frame_duration = 10  # ms\n    frame = b'\\x00\\x00' * (sample_rate * frame_duration / 1000)\n    print 'Contains speech: %s' % (vad.is_speech(frame, sample_rate)\n\n\nSee `example.py\n<https://github.com/wiseman/py-webrtcvad/blob/master/example.py>`_ for\na more detailed example that will process a .wav file, find the voiced\nsegments, and write each one as a separate .wav.\n\n\nHow to run unit tests\n---------------------\n\nTo run unit tests::\n\n    pip install -e \".[dev]\"\n    python setup.py test", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wiseman/py-webrtcvad", "keywords": "speechrecognition asr voiceactivitydetection vad webrtc", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "webrtcvad", "package_url": "https://pypi.org/project/webrtcvad/", "platform": "", "project_url": "https://pypi.org/project/webrtcvad/", "project_urls": {"Homepage": "https://github.com/wiseman/py-webrtcvad"}, "release_url": "https://pypi.org/project/webrtcvad/2.0.10/", "requires_dist": null, "requires_python": "", "summary": "Python interface to the Google WebRTC Voice Activity Detector (VAD)", "version": "2.0.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/wiseman/py-webrtcvad\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/wiseman/py-webrtcvad.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e6bcc5b957c0012819d765dc7ca6a5bf501a43ab/68747470733a2f2f7472617669732d63692e6f72672f776973656d616e2f70792d7765627274637661642e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"py-webrtcvad\">\n<h2>py-webrtcvad</h2>\n<p>This is a python interface to the WebRTC Voice Activity Detector\n(VAD).  It is compatible with Python 2 and Python 3.</p>\n<p>A <a href=\"https://en.wikipedia.org/wiki/Voice_activity_detection\" rel=\"nofollow\">VAD</a>\nclassifies a piece of audio data as being voiced or unvoiced. It can\nbe useful for telephony and speech recognition.</p>\n<p>The VAD that Google developed for the <a href=\"https://webrtc.org/\" rel=\"nofollow\">WebRTC</a>\nproject is reportedly one of the best available, being fast, modern\nand free.</p>\n<div id=\"how-to-use-it\">\n<h3>How to use it</h3>\n<ol>\n<li><p>Install the webrtcvad module:</p>\n<pre>pip install webrtcvad\n</pre>\n</li>\n<li><p>Create a <tt>Vad</tt> object:</p>\n<pre>import webrtcvad\nvad = webrtcvad.Vad()\n</pre>\n</li>\n<li><p>Optionally, set its aggressiveness mode, which is an integer\nbetween 0 and 3. 0 is the least aggressive about filtering out\nnon-speech, 3 is the most aggressive. (You can also set the mode\nwhen you create the VAD, e.g. <tt>vad = webrtcvad.Vad(3)</tt>):</p>\n<pre>vad.set_mode(1)\n</pre>\n</li>\n<li><p>Give it a short segment (\u201cframe\u201d) of audio. The WebRTC VAD only\naccepts 16-bit mono PCM audio, sampled at 8000, 16000, or 32000 Hz.\nA frame must be either 10, 20, or 30 ms in duration:</p>\n<pre># Run the VAD on 10 ms of silence. The result should be False.\nsample_rate = 16000\nframe_duration = 10  # ms\nframe = b'\\x00\\x00' * (sample_rate * frame_duration / 1000)\nprint 'Contains speech: %s' % (vad.is_speech(frame, sample_rate)\n</pre>\n</li>\n</ol>\n<p>See <a href=\"https://github.com/wiseman/py-webrtcvad/blob/master/example.py\" rel=\"nofollow\">example.py</a> for\na more detailed example that will process a .wav file, find the voiced\nsegments, and write each one as a separate .wav.</p>\n</div>\n<div id=\"how-to-run-unit-tests\">\n<h3>How to run unit tests</h3>\n<p>To run unit tests:</p>\n<pre>pip install -e \".[dev]\"\npython setup.py test\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2559927, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "f7f43c1cd67f378cbf2b22d9b821fa9d", "sha256": "ce83208fb66bbd568a68f56d78ae46b8c292d95fbd351267effb9c1559795c36"}, "downloads": -1, "filename": "webrtcvad-1.0.tar.gz", "has_sig": false, "md5_digest": "f7f43c1cd67f378cbf2b22d9b821fa9d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64150, "upload_time": "2016-04-24T04:33:30", "upload_time_iso_8601": "2016-04-24T04:33:30.858204Z", "url": "https://files.pythonhosted.org/packages/d7/c7/4b68ff4076fba4b541cb36ffcbdd26e8a8bb5ff58ba818425f030f214070/webrtcvad-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "f21052baf4d3fa805237772f7198fb99", "sha256": "8c5b0ea01a880d50de8eb5f65aefd7dfe00b88ab3dda97923197ade6729f1298"}, "downloads": -1, "filename": "webrtcvad-1.0.1.tar.gz", "has_sig": false, "md5_digest": "f21052baf4d3fa805237772f7198fb99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64162, "upload_time": "2016-04-24T04:35:00", "upload_time_iso_8601": "2016-04-24T04:35:00.788028Z", "url": "https://files.pythonhosted.org/packages/cf/dc/7ed7c5d08d8acf308f3ac13a48d94508660c88c4c92b82003623067019a2/webrtcvad-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "c74e19e016fb7ed291aa2b5f626b1072", "sha256": "1a80e1cb5b5d6b0da3696385d94a2b41adac7c5358c27ba5b8a111c948240ee1"}, "downloads": -1, "filename": "webrtcvad-1.0.2.tar.gz", "has_sig": false, "md5_digest": "c74e19e016fb7ed291aa2b5f626b1072", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64296, "upload_time": "2016-04-24T04:41:47", "upload_time_iso_8601": "2016-04-24T04:41:47.138814Z", "url": "https://files.pythonhosted.org/packages/f0/9f/cc44d790711e4fae1a41337c9a4cdb3f74f59baca640d11aeb7aab716850/webrtcvad-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "8a1c38d0bbbf0b6941bd8ad4d2d7aa41", "sha256": "a4f57d02b0fad4d2a702b89807c06c9267e460b43fce6eb2b300a186c0fcca99"}, "downloads": -1, "filename": "webrtcvad-1.0.3.tar.gz", "has_sig": false, "md5_digest": "8a1c38d0bbbf0b6941bd8ad4d2d7aa41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64327, "upload_time": "2016-04-24T04:43:40", "upload_time_iso_8601": "2016-04-24T04:43:40.385305Z", "url": "https://files.pythonhosted.org/packages/51/05/30b122c54e4afd067f3c7a35f4865337dce37435f1c6876c77492a7a0d84/webrtcvad-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "6c482fe97b5536728490fba5bb0193fb", "sha256": "b8670afb5050c77a02bb1dd04b2ab63d3b375079a7aecdfa01579f9bceffbddb"}, "downloads": -1, "filename": "webrtcvad-1.0.4.tar.gz", "has_sig": false, "md5_digest": "6c482fe97b5536728490fba5bb0193fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64324, "upload_time": "2016-04-24T04:45:25", "upload_time_iso_8601": "2016-04-24T04:45:25.310013Z", "url": "https://files.pythonhosted.org/packages/df/0c/99749f827059dce0686793c05b1a3c4831af98692bf92e9e162ce75adff6/webrtcvad-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "92c070591ed292b47dbdbed50eade45a", "sha256": "fe8aa60b849e133a6fe067b6474e086b5a79b077307e0362b3b09f34984c6387"}, "downloads": -1, "filename": "webrtcvad-1.0.5.tar.gz", "has_sig": false, "md5_digest": "92c070591ed292b47dbdbed50eade45a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64368, "upload_time": "2016-04-24T04:47:57", "upload_time_iso_8601": "2016-04-24T04:47:57.088877Z", "url": "https://files.pythonhosted.org/packages/cb/90/41cac7ae28f1591022503e0b683c017babd925dc247bdfb0cafa39c0a5bf/webrtcvad-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "670d913712b7272fe5107d743cc0a7df", "sha256": "53f63a920a6e4681be760236a3acb165cfe958678e892c776dbefb38e2a7381c"}, "downloads": -1, "filename": "webrtcvad-1.0.6.tar.gz", "has_sig": false, "md5_digest": "670d913712b7272fe5107d743cc0a7df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64344, "upload_time": "2016-04-24T04:50:12", "upload_time_iso_8601": "2016-04-24T04:50:12.761933Z", "url": "https://files.pythonhosted.org/packages/bc/b5/4f75761e33696a518405e863ccabe1ff60ecc602a0cf1773d8a8b8cf4a3f/webrtcvad-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "ebd1fe35276ffc5ae33e15e925c8dc93", "sha256": "efcf407afba6869c949de59ba45127b743bd12e03471ccf16d1780387e3f0d3f"}, "downloads": -1, "filename": "webrtcvad-1.0.7.tar.gz", "has_sig": false, "md5_digest": "ebd1fe35276ffc5ae33e15e925c8dc93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64340, "upload_time": "2016-04-24T04:52:00", "upload_time_iso_8601": "2016-04-24T04:52:00.833144Z", "url": "https://files.pythonhosted.org/packages/21/82/882938ee41cc9440405197bb8d4c1285502141b837ca7b567f8effd7d003/webrtcvad-1.0.7.tar.gz", "yanked": false}], "2.0.10": [{"comment_text": "", "digests": {"md5": "213d2848aeebbbd22485d4ad630b5fdb", "sha256": "f1bed2fb25b63fb7b1a55d64090c993c9c9167b28485ae0bcdd81cf6ede96aea"}, "downloads": -1, "filename": "webrtcvad-2.0.10.tar.gz", "has_sig": false, "md5_digest": "213d2848aeebbbd22485d4ad630b5fdb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66156, "upload_time": "2017-01-07T23:05:18", "upload_time_iso_8601": "2017-01-07T23:05:18.732212Z", "url": "https://files.pythonhosted.org/packages/89/34/e2de2d97f3288512b9ea56f92e7452f8207eb5a0096500badf9dfd48f5e6/webrtcvad-2.0.10.tar.gz", "yanked": false}], "2.0.7": [{"comment_text": "", "digests": {"md5": "54a301b0f15a502f26cffa70882696ac", "sha256": "bea6d0410f8a9461571a7312c641a4e48be39c3939516c1c4c2057676261cc59"}, "downloads": -1, "filename": "webrtcvad-2.0.7.tar.gz", "has_sig": false, "md5_digest": "54a301b0f15a502f26cffa70882696ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64349, "upload_time": "2016-04-27T06:50:24", "upload_time_iso_8601": "2016-04-27T06:50:24.890174Z", "url": "https://files.pythonhosted.org/packages/14/c7/11170cd80c95b4a9e0404004c8c7515c384d8d4f9a483c67304c1f3fe11c/webrtcvad-2.0.7.tar.gz", "yanked": false}], "2.0.8": [{"comment_text": "", "digests": {"md5": "0330228a3f90d52c597efa961465da7e", "sha256": "a293360141a233c9acbb45cb76551fd7958905bc88f9876b381eb67667ce0167"}, "downloads": -1, "filename": "webrtcvad-2.0.8.tar.gz", "has_sig": false, "md5_digest": "0330228a3f90d52c597efa961465da7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64414, "upload_time": "2016-06-19T01:47:12", "upload_time_iso_8601": "2016-06-19T01:47:12.185468Z", "url": "https://files.pythonhosted.org/packages/23/02/16f1db3ada2368397d6d6f64ddfab4988149147cd381cb49db1a5e401f80/webrtcvad-2.0.8.tar.gz", "yanked": false}], "2.0.9": [{"comment_text": "", "digests": {"md5": "a535dc7d7a5a106555dcff200b86ee00", "sha256": "41a37d8421e2feea75515367a603cc468636596652dc140ad07aa99d055a8dc9"}, "downloads": -1, "filename": "webrtcvad-2.0.9.tar.gz", "has_sig": false, "md5_digest": "a535dc7d7a5a106555dcff200b86ee00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65089, "upload_time": "2016-12-16T22:52:11", "upload_time_iso_8601": "2016-12-16T22:52:11.895494Z", "url": "https://files.pythonhosted.org/packages/e4/4e/4c35a957bc78888b6b1fa5b1ff129320c75fb3d15592b7d496a4413a2cd8/webrtcvad-2.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "213d2848aeebbbd22485d4ad630b5fdb", "sha256": "f1bed2fb25b63fb7b1a55d64090c993c9c9167b28485ae0bcdd81cf6ede96aea"}, "downloads": -1, "filename": "webrtcvad-2.0.10.tar.gz", "has_sig": false, "md5_digest": "213d2848aeebbbd22485d4ad630b5fdb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66156, "upload_time": "2017-01-07T23:05:18", "upload_time_iso_8601": "2017-01-07T23:05:18.732212Z", "url": "https://files.pythonhosted.org/packages/89/34/e2de2d97f3288512b9ea56f92e7452f8207eb5a0096500badf9dfd48f5e6/webrtcvad-2.0.10.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:30:51 2020"}