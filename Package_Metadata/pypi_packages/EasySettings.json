{"info": {"author": "Christopher Welborn", "author_email": "cj@welbornprod.com", "bugtrack_url": null, "classifiers": ["Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "EasySettings\n============\n\nEasySettings allows you to easily save and retrieve simple application\nsettings. Handles non-string types like boolean, integer, long, list, as\nwell as normal string settings. No sections needed, just set(), get(),\nand save().\n\nThere are `other ``*Settings``\nobjects <#jsonsettings-tomlsettings-and-yamlsettings>`__ that allow you\nto use a standard format, such as:\n\n-  `JSONSettings <#jsonsettings-example>`__ - ``UserDict`` that has\n   methods to load/save config in JSON format. ``load_json_settings()``\n   is the preferred method for loading config files.\n\n-  `TOMLSettings <#tomlsettings-example>`__ - ``UserDict`` that has\n   methods to load/save config in TOML format. ``load_toml_settings()``\n   is the preferred method for loading config files.\n\n-  `YAMLSettings <#yamlsettings-example>`__ - ``UserDict`` that has\n   methods to load/save config in YAML format. ``load_yaml_settings()``\n   is the preferred method for loading config files.\n\nBug Fixes\n---------\n\n-  Version 4.0.0:\n\nPython 2.7 is no longer supported. If you are using Python 2.7 you will\nneed to be specific when installing EasySettings. Version 3.3.3 was the\nlast version with Python 2.7 support. It will no longer receive bug\nfixes or new features. If the latest version of EasySettings has broken\nyour application, uninstall it and install version 3.3.3:\n\n.. code:: bash\n\n    pip install 'easysettings==3.3.3'\n\n    # Or, with TOML/YAML dependencies:\n    pip install 'easysettings[all]==3.3.3'\n\nYou can use this in your ``requirements.txt``:\n\n::\n\n    easysettings == 3.3.3\n\n-  Version 3.3.3:\n\nExtra ``kwargs`` can be passed to the ``load()``/``from_file()`` methods\non ``YAMLSettings`` and ``TOMLSettings``. You have to use\n``load_kwargs=kwargs`` when instantiating the class directly. It will\nforward the ``kwargs`` to the loader later in this case. This allows a\n``Loader`` to be specified when using the ``yaml`` settings, and\nfuture-proofs EasySettings.\n\n-  Version 3.3.2:\n\nExtra dependencies for ``YAMLSettings``/``TOMLSettings`` can be\ninstalled as extras by specifying them:\n\n.. code:: bash\n\n    pip install --user \"easysettings[all]\"\n\nExamples\n--------\n\nExample of EasySettings basic usage:\n\n.. code:: python\n\n    #!/usr/bin/env python\n    # --------------- Creation ----------------\n\n    from easysettings import EasySettings\n\n    settings = EasySettings(\"myconfigfile.conf\")\n\n    # configfile_exists() checks for existing config, and creates one if needed.\n    # ** this function is called automatically now when a filename is passed to easysettings. **\n    # if you wish to disable it, just do: settings = EasySettings() and set\n    # settings.configfile later.\n\n    # ------------- Basic Functions -----------\n    # set without saving\n    settings.set(\"username\", \"cjw\")\n    settings.set(\"firstrun\", False)\n\n    print settings.get(\"username\")\n    # this results in \"cjw\"\n\n    # check if file is saved\n    if not settings.is_saved():\n        print \"you haven't saved the settings to disk yet.\"\n\n    # ...settings are still available even if they haven't\n    #    been saved to disk\n\n    # save\n    settings.save()\n\n    # you may also set & save in one line...\n    settings.setsave(\"homedir\", \"/myuserdir\")\n\nAdvanced:\n~~~~~~~~~\n\n.. code:: python\n\n        # check if setting exists if you want\n        if settings.has_option('username'):\n            print \"Yes, settings has 'username'\"\n\n        # list settings/options/values\n        mysettings = settings.list_settings()\n        myoptions = settings.list_options()\n        myvalues = settings.list_values()\n\n        # remove setting\n        settings.remove('homedir')\n\n        # clear all option names and values\n        settings.clear()\n\n        # clear all values, leave option names.\n        settings.clear_values()\n\nComparison:\n~~~~~~~~~~~\n\n.. code:: python\n\n    # compare two settings objects\n    settings2 = EasySettings('myconfigfile2.conf')\n\n    if settings.compare_opts(settings2):\n        print \"these have the same exact options, values may differ\"\n    if settings.compare_vals(settings2):\n        print \"these have the exact same values, options may differ\"\n\n    if settings == settings2:\n        print \"these have the exact same settings/values\"\n        # can also be written as settings.compare_settings(settings2)\n        # if you like typing.. :)\n\n    if settings > settings2:\n        print \"settings has more options than settings2\"\n    # all of them work ==, !=, <=, >= , > , <\n    # ... the < > features are based on amount of options.\n    #     the = features are based on option names and values.\n\nFeatures\n--------\n\nEasySettings has the basic features you would expect out of a settings\nmodule, and it's very easy to use. If your project needs to save simple\nsettings without the overhead and complication of other modules then\nthis is for you. Save, load, set, & get are very easy to grasp. The more\nadvanced features are there for you to use, but don't get in the way.\nSettings, options, & values can be listed, searched, detected, removed,\n& cleared.\n\nEasySettings uses a dictionary to store settings before writing to disk,\nso you can also access settings like a dictionary object using\n``easysettings.settings``. The ``setsave()`` function will save every\ntime you set an option, and ``is_saved()`` will tell you whether or not\nthe file has been saved to disk yet. Code is documented for a newbie, so\na ``help('EasySettings')`` in the python console will get you started.\n\nThe search\\_query argument in the list functions lets you find settings,\noptions, and values by search string:\n\n.. code:: python\n\n    mydebugoptions = settings.list_options('debug')\n    # clear all debug values..\n    settings.clear_values(mydebugoptions)\n\nNon-string types were added, so any type that can be pickled can be used\nas an option's value. This includes all the major types like int, long,\nfloat, boolean, and list. All of these values will be retrieved as the\nsame type that was set:\n\n.. code:: python\n\n    es = EasySettings('myconfigfile.conf')\n\n    # Boolean\n    es.set(\"newuser\", True)\n    if es.get('newuser'):\n        print \"now you can use get() as a boolean.\"\n\n    # Integer\n    es.set('maxwidth', 560)\n    halfwidth = es.get('maxwidth') / 2 # this math works.\n\n    # Float\n    es.set('soda', 1.59)\n    f_withtax = es.get('soda') * 1.08\n\n    # List\n    es.set('users', ['cjw', 'joseph', 'amy']) # lists as settings, very convenient\n    for suser in es.get('users'):\n        print \"retrieved user name: \" + suser\n\n    # i won't do them all, but if you can pickle it, you can use it with easysettings.\n\nErrors are more descriptive and can be caught using their proper names:\n\n.. code:: python\n\n    try:\n        es.get('option_with_a_possibly_illegal_value')\n    except easysettings.esGetError as exErr:\n        print \"Error getting option!\"\n    except Exception as exEx:\n        print \"General Error!\"\n\nAutomatic Creation:\n-------------------\n\nIf you pass a file name to EasySettings(), the ``configfile_exists()``\nfunction is called. This function will create a blank config file if the\nfile doesn't exist, otherwise it will return True. To use the 'automatic\ncreation' do this:\n\n.. code:: python\n\n    settings = EasySettings('myconfigfile.conf')\n    # if file exists, all settings were loaded.\n    # if file did not exist, it was created.\n    # No permissions, disk-full, and other errors are still possible of course\n    # depending on the machine, or the current directory permissions.\n\nYou can disable the 'automatic creation' features by not passing a file\nname, and loading seperately like this:\n\n.. code:: python\n\n    settings = EasySettings()\n    settings.configfile = 'myconfigfile.conf'\n    # file has not been created or loaded.\n    # file must exist before calling 'load_file'\n    if settings.load_file():\n        # all settings were loaded.\n    else:\n        # unable to load file for some reason.\n\nThis will work in the same way to disable the automatic creation:\n\n.. code:: python\n\n    settings = EasySettings()\n    # file has not been created or loaded.\n    # file 'myconfigfile.conf' must exist before calling load_file()\n    if settings.load_file('myconfigfile.conf'):\n        # file was loaded.\n        # settings.configfile was set by the load_file() function\n    else:\n        # file could not be loaded.\n\nTo check if the file exists without creating it automatically you can do\nthis:\n\n.. code:: python\n\n    if not settings.configfile_exists(False):\n        print 'config file does not exist, and was not created.'\n    # I actually prefer the os.path.isfile() method if you're not going to automatically\n    # create the file.\n    import os.path\n    if not os.path.isfile(settings.configfile):\n        print 'config file does not exist, and was not created.'\n\nJSONSettings, TOMLSettings, and YAMLSettings:\n=============================================\n\nAll of the ``*Settings`` objects are simple ``UserDict``\\ s that allow\nloading and saving in the specified format. All keys and values must be\nserializable using the specified format. If you don't already have the\n``pyyaml`` and ``toml`` packages (not ``pytoml``), be sure to use\n``pip install \"easysettings[all]\"`` to install those along with\nEasySettings.\n\nJSONSettings Example:\n---------------------\n\n.. code:: python\n\n    from easysettings import JSONSettings\n\n    # Starting from scratch:\n    js = JSONSettings(filename='myfile.json')\n    js['option'] = 'value'\n    js.save()\n\n.. code:: python\n\n    from easysettings import JSONSettings, load_json_settings\n    # Loading settings that may not exist yet:\n    js = load_json_settings('myfile.json', default={'option': 'mydefault'})\n    print(js['option'])\n\n    # Set an item and save the settings.\n    js.setsave('option2', 'value2', sort_keys=True)\n\n    # Alternate load method, may raise FileNotFoundError.\n    js = JSONSettings.from_file('myjsonfile.json')\n\nThe same goes for ``TOMLSettings`` and ``YAMLSettings``.\n\nTOMLSettings Example:\n---------------------\n\n.. code:: python\n\n    # `toml` (not `pytoml`) must be installed, though you don't have to import it.\n    import toml\n\n    from easysettings import TOMLSettings\n\n    # Starting from scratch:\n    ts = TOMLSettings(filename='myfile.toml')\n    ts['option'] = 'value'\n    ts.save()\n\n.. code:: python\n\n    # `toml` (not `pytoml`) must be installed, though you don't have to import it.\n    from easysettings import TOMLSettings, load_toml_settings\n\n    # Loading settings that may not exist yet:\n    ts = load_toml_settings('myfile.toml', default={'option': 'mydefault'})\n    print(ts['option'])\n\n    # Set an item and save the settings.\n    ts.setsave('option2', 'value2')\n\n    # Alternate load method, may raise FileNotFoundError.\n    ts = TOMLSettings.from_file('mytomlfile.toml')\n\nYAMLSettings Example:\n---------------------\n\n.. code:: python\n\n    # `pyyaml` must be installed, though you don't have to import it.\n    from easysettings import YAMLSettings\n\n    # Starting from scratch:\n    ys = YAMLSettings(filename='myfile.yaml')\n    ys['option'] = 'value'\n    ys.save()\n\n.. code:: python\n\n    # `pyyaml` must be installed, though you don't have to import it.\n    from easysettings import YAMLSettings, load_yaml_settings\n\n    # Loading settings that may not exist yet:\n    ys = load_yaml_settings('myfile.yaml', default={'option': 'mydefault'})\n    print(ys['option'])\n\n    # Set an item and save the settings.\n    ys.setsave('option2', 'value2')\n\n    # Alternate load method, may raise FileNotFoundError.\n    ys = YAMLSettings.from_file('myyamlfile.yaml')\n\nPyPi Package\n============\n\nFull PyPi package available at: http://pypi.python.org/pypi/EasySettings\n\nUse pip to install EasySettings to be used globally. Ubuntu instructions\nto install pip:\n\n.. code:: bash\n\n    sudo apt-get install python-pip\n\nAfter that you should be able to install EasySettings by typing:\n\n.. code:: bash\n\n    pip install --user easysettings\n\nExtras\n------\n\nIf you would like to use the opt-in YAML and TOML features, you will\nneed the ``pyyaml`` and ``toml`` packages (not pytoml). These can be\nrequested individually, or together during the EasySettings\ninstallation:\n\n.. code:: bash\n\n    # Install with the yaml dependency to use YAMLSettings:\n    pip install --user \"easysettings[yaml]\"\n\n    # Install with the toml dependency to use TOMLSettings:\n    pip install --user \"easysettings[toml]\"\n\n    # Install with both dependencies to use YAMLSettings and TOMLSettings:\n    pip install --user \"easysettings[all]\"\n\nSource Code\n===========\n\nYou can view the source for this package at:\nhttps://github.com/welbornprod/easysettings\n\nWebsite\n=======\n\nBe sure to visit http://welbornprod.com for more projects and\ninformation from Welborn Productions.\n\nNotes\n=====\n\nSince you've scrolled all the way down here, I thought I would tell you\nthat the ``EasySettings`` class itself was created a long time ago, when\nI was still learning Python. I don't use that specific class anymore for\nnew projects. I prefer to use the other ``*Settings`` classes in the\n``easysettings`` package. I've been fixing bugs and adding features in\nall of the ``easysettings`` code for years now, so I don't want to say\nthat it's \"abandoned\" or \"deprecated\". I'm still using it with some of\nmy projects because there is no real reason to change them.\n\nIt was designed for me at the time (a beginner), so maybe it's still\nuseful for beginners, but the other classes are much cleaner and not so\n\"opinionated\". They're also widely accepted config formats, where the\n``EasySettings`` format (a mix of custom ``INI`` and Python's\n``pickle``) is not. They raise exceptions instead of silently trying to\n\"do the right thing\". If you only ever save string values,\n``EasySettings`` is nice because it looks like an ``INI`` file with\nhelpers for values like ``\"true\"``, ``\"false\"``, ``\"yes\"``, ``\"no\"``,\n``\"1\"``, and ``\"0\"`` (if you use ``get_bool()``).\n\nIf you start saving other types, you may want to switch to\n``JSONSettings``, ``TOMLSettings``, or ``YAMLSettings`` (depending on\nwhat your flavor is).\n\n**It's better to be explicit than implicit.**\n\nThis is much cleaner:\n\n.. code:: python\n\n    from easysettings import load_json_settings\n\n    config = load_json_settings(\n        # File is created if needed.\n        'myconfig.json',\n        # config will have *at least* these keys/values.\n        default={'key1': 'value', 'key2': 2600},\n    )\n    # It's just a dict.\n    config['key3'] = config.get('key3', [1, 2, 3])\n\n    # Next time this code runs you can start where you left off.\n    config.save()\n\nThank you for taking the time to read this. Contributions are welcome in\nall forms. `File an\nissue <https://github.com/welbornprod/easysettings/issues>`__, or create\na `Pull Request <https://github.com/welbornprod/easysettings/pulls>`__\nif you would like to see a new feature in EasySettings.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/welbornprod/easysettings", "keywords": "python module library 3 settings easy config setting configuration applications app json toml yaml pickle ini dict userdict", "license": "LICENSE.txt", "maintainer": "", "maintainer_email": "", "name": "EasySettings", "package_url": "https://pypi.org/project/EasySettings/", "platform": "", "project_url": "https://pypi.org/project/EasySettings/", "project_urls": {"Homepage": "https://github.com/welbornprod/easysettings"}, "release_url": "https://pypi.org/project/EasySettings/4.0.0/", "requires_dist": null, "requires_python": "", "summary": "Easily set and retrieve application settings.\n", "version": "4.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"easysettings\">\n<h2>EasySettings</h2>\n<p>EasySettings allows you to easily save and retrieve simple application\nsettings. Handles non-string types like boolean, integer, long, list, as\nwell as normal string settings. No sections needed, just set(), get(),\nand save().</p>\n<p>There are <cite>other ``*Settings`</cite>\nobjects &lt;#jsonsettings-tomlsettings-and-yamlsettings&gt;`__ that allow you\nto use a standard format, such as:</p>\n<ul>\n<li><a href=\"#jsonsettings-example\" rel=\"nofollow\">JSONSettings</a> - <tt>UserDict</tt> that has\nmethods to load/save config in JSON format. <tt>load_json_settings()</tt>\nis the preferred method for loading config files.</li>\n<li><a href=\"#tomlsettings-example\" rel=\"nofollow\">TOMLSettings</a> - <tt>UserDict</tt> that has\nmethods to load/save config in TOML format. <tt>load_toml_settings()</tt>\nis the preferred method for loading config files.</li>\n<li><a href=\"#yamlsettings-example\" rel=\"nofollow\">YAMLSettings</a> - <tt>UserDict</tt> that has\nmethods to load/save config in YAML format. <tt>load_yaml_settings()</tt>\nis the preferred method for loading config files.</li>\n</ul>\n<div id=\"bug-fixes\">\n<h3>Bug Fixes</h3>\n<ul>\n<li>Version 4.0.0:</li>\n</ul>\n<p>Python 2.7 is no longer supported. If you are using Python 2.7 you will\nneed to be specific when installing EasySettings. Version 3.3.3 was the\nlast version with Python 2.7 support. It will no longer receive bug\nfixes or new features. If the latest version of EasySettings has broken\nyour application, uninstall it and install version 3.3.3:</p>\n<pre>pip install <span class=\"s1\">'easysettings==3.3.3'</span>\n\n<span class=\"c1\"># Or, with TOML/YAML dependencies:\n</span>pip install <span class=\"s1\">'easysettings[all]==3.3.3'</span>\n</pre>\n<p>You can use this in your <tt>requirements.txt</tt>:</p>\n<pre>easysettings == 3.3.3\n</pre>\n<ul>\n<li>Version 3.3.3:</li>\n</ul>\n<p>Extra <tt>kwargs</tt> can be passed to the <tt>load()</tt>/<tt>from_file()</tt> methods\non <tt>YAMLSettings</tt> and <tt>TOMLSettings</tt>. You have to use\n<tt>load_kwargs=kwargs</tt> when instantiating the class directly. It will\nforward the <tt>kwargs</tt> to the loader later in this case. This allows a\n<tt>Loader</tt> to be specified when using the <tt>yaml</tt> settings, and\nfuture-proofs EasySettings.</p>\n<ul>\n<li>Version 3.3.2:</li>\n</ul>\n<p>Extra dependencies for <tt>YAMLSettings</tt>/<tt>TOMLSettings</tt> can be\ninstalled as extras by specifying them:</p>\n<pre>pip install --user <span class=\"s2\">\"easysettings[all]\"</span>\n</pre>\n</div>\n<div id=\"examples\">\n<h3>Examples</h3>\n<p>Example of EasySettings basic usage:</p>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"c1\"># --------------- Creation ----------------</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">easysettings</span> <span class=\"kn\">import</span> <span class=\"n\">EasySettings</span>\n\n<span class=\"n\">settings</span> <span class=\"o\">=</span> <span class=\"n\">EasySettings</span><span class=\"p\">(</span><span class=\"s2\">\"myconfigfile.conf\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># configfile_exists() checks for existing config, and creates one if needed.</span>\n<span class=\"c1\"># ** this function is called automatically now when a filename is passed to easysettings. **</span>\n<span class=\"c1\"># if you wish to disable it, just do: settings = EasySettings() and set</span>\n<span class=\"c1\"># settings.configfile later.</span>\n\n<span class=\"c1\"># ------------- Basic Functions -----------</span>\n<span class=\"c1\"># set without saving</span>\n<span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s2\">\"username\"</span><span class=\"p\">,</span> <span class=\"s2\">\"cjw\"</span><span class=\"p\">)</span>\n<span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s2\">\"firstrun\"</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"username\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># this results in \"cjw\"</span>\n\n<span class=\"c1\"># check if file is saved</span>\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">is_saved</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"you haven't saved the settings to disk yet.\"</span>\n\n<span class=\"c1\"># ...settings are still available even if they haven't</span>\n<span class=\"c1\">#    been saved to disk</span>\n\n<span class=\"c1\"># save</span>\n<span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># you may also set &amp; save in one line...</span>\n<span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">setsave</span><span class=\"p\">(</span><span class=\"s2\">\"homedir\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/myuserdir\"</span><span class=\"p\">)</span>\n</pre>\n<div id=\"advanced\">\n<h4>Advanced:</h4>\n<pre><span class=\"c1\"># check if setting exists if you want</span>\n<span class=\"k\">if</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">has_option</span><span class=\"p\">(</span><span class=\"s1\">'username'</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"Yes, settings has 'username'\"</span>\n\n<span class=\"c1\"># list settings/options/values</span>\n<span class=\"n\">mysettings</span> <span class=\"o\">=</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">list_settings</span><span class=\"p\">()</span>\n<span class=\"n\">myoptions</span> <span class=\"o\">=</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">list_options</span><span class=\"p\">()</span>\n<span class=\"n\">myvalues</span> <span class=\"o\">=</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">list_values</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># remove setting</span>\n<span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"s1\">'homedir'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># clear all option names and values</span>\n<span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># clear all values, leave option names.</span>\n<span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">clear_values</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"comparison\">\n<h4>Comparison:</h4>\n<pre><span class=\"c1\"># compare two settings objects</span>\n<span class=\"n\">settings2</span> <span class=\"o\">=</span> <span class=\"n\">EasySettings</span><span class=\"p\">(</span><span class=\"s1\">'myconfigfile2.conf'</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">compare_opts</span><span class=\"p\">(</span><span class=\"n\">settings2</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"these have the same exact options, values may differ\"</span>\n<span class=\"k\">if</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">compare_vals</span><span class=\"p\">(</span><span class=\"n\">settings2</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"these have the exact same values, options may differ\"</span>\n\n<span class=\"k\">if</span> <span class=\"n\">settings</span> <span class=\"o\">==</span> <span class=\"n\">settings2</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"these have the exact same settings/values\"</span>\n    <span class=\"c1\"># can also be written as settings.compare_settings(settings2)</span>\n    <span class=\"c1\"># if you like typing.. :)</span>\n\n<span class=\"k\">if</span> <span class=\"n\">settings</span> <span class=\"o\">&gt;</span> <span class=\"n\">settings2</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"settings has more options than settings2\"</span>\n<span class=\"c1\"># all of them work ==, !=, &lt;=, &gt;= , &gt; , &lt;</span>\n<span class=\"c1\"># ... the &lt; &gt; features are based on amount of options.</span>\n<span class=\"c1\">#     the = features are based on option names and values.</span>\n</pre>\n</div>\n</div>\n<div id=\"features\">\n<h3>Features</h3>\n<p>EasySettings has the basic features you would expect out of a settings\nmodule, and it\u2019s very easy to use. If your project needs to save simple\nsettings without the overhead and complication of other modules then\nthis is for you. Save, load, set, &amp; get are very easy to grasp. The more\nadvanced features are there for you to use, but don\u2019t get in the way.\nSettings, options, &amp; values can be listed, searched, detected, removed,\n&amp; cleared.</p>\n<p>EasySettings uses a dictionary to store settings before writing to disk,\nso you can also access settings like a dictionary object using\n<tt>easysettings.settings</tt>. The <tt>setsave()</tt> function will save every\ntime you set an option, and <tt>is_saved()</tt> will tell you whether or not\nthe file has been saved to disk yet. Code is documented for a newbie, so\na <tt><span class=\"pre\">help('EasySettings')</span></tt> in the python console will get you started.</p>\n<p>The search_query argument in the list functions lets you find settings,\noptions, and values by search string:</p>\n<pre><span class=\"n\">mydebugoptions</span> <span class=\"o\">=</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">list_options</span><span class=\"p\">(</span><span class=\"s1\">'debug'</span><span class=\"p\">)</span>\n<span class=\"c1\"># clear all debug values..</span>\n<span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">clear_values</span><span class=\"p\">(</span><span class=\"n\">mydebugoptions</span><span class=\"p\">)</span>\n</pre>\n<p>Non-string types were added, so any type that can be pickled can be used\nas an option\u2019s value. This includes all the major types like int, long,\nfloat, boolean, and list. All of these values will be retrieved as the\nsame type that was set:</p>\n<pre><span class=\"n\">es</span> <span class=\"o\">=</span> <span class=\"n\">EasySettings</span><span class=\"p\">(</span><span class=\"s1\">'myconfigfile.conf'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Boolean</span>\n<span class=\"n\">es</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s2\">\"newuser\"</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">es</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'newuser'</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"now you can use get() as a boolean.\"</span>\n\n<span class=\"c1\"># Integer</span>\n<span class=\"n\">es</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'maxwidth'</span><span class=\"p\">,</span> <span class=\"mi\">560</span><span class=\"p\">)</span>\n<span class=\"n\">halfwidth</span> <span class=\"o\">=</span> <span class=\"n\">es</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'maxwidth'</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">2</span> <span class=\"c1\"># this math works.</span>\n\n<span class=\"c1\"># Float</span>\n<span class=\"n\">es</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'soda'</span><span class=\"p\">,</span> <span class=\"mf\">1.59</span><span class=\"p\">)</span>\n<span class=\"n\">f_withtax</span> <span class=\"o\">=</span> <span class=\"n\">es</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'soda'</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mf\">1.08</span>\n\n<span class=\"c1\"># List</span>\n<span class=\"n\">es</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'cjw'</span><span class=\"p\">,</span> <span class=\"s1\">'joseph'</span><span class=\"p\">,</span> <span class=\"s1\">'amy'</span><span class=\"p\">])</span> <span class=\"c1\"># lists as settings, very convenient</span>\n<span class=\"k\">for</span> <span class=\"n\">suser</span> <span class=\"ow\">in</span> <span class=\"n\">es</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"retrieved user name: \"</span> <span class=\"o\">+</span> <span class=\"n\">suser</span>\n\n<span class=\"c1\"># i won't do them all, but if you can pickle it, you can use it with easysettings.</span>\n</pre>\n<p>Errors are more descriptive and can be caught using their proper names:</p>\n<pre><span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">es</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'option_with_a_possibly_illegal_value'</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">easysettings</span><span class=\"o\">.</span><span class=\"n\">esGetError</span> <span class=\"k\">as</span> <span class=\"n\">exErr</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"Error getting option!\"</span>\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">exEx</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"General Error!\"</span>\n</pre>\n</div>\n<div id=\"automatic-creation\">\n<h3>Automatic Creation:</h3>\n<p>If you pass a file name to EasySettings(), the <tt>configfile_exists()</tt>\nfunction is called. This function will create a blank config file if the\nfile doesn\u2019t exist, otherwise it will return True. To use the \u2018automatic\ncreation\u2019 do this:</p>\n<pre><span class=\"n\">settings</span> <span class=\"o\">=</span> <span class=\"n\">EasySettings</span><span class=\"p\">(</span><span class=\"s1\">'myconfigfile.conf'</span><span class=\"p\">)</span>\n<span class=\"c1\"># if file exists, all settings were loaded.</span>\n<span class=\"c1\"># if file did not exist, it was created.</span>\n<span class=\"c1\"># No permissions, disk-full, and other errors are still possible of course</span>\n<span class=\"c1\"># depending on the machine, or the current directory permissions.</span>\n</pre>\n<p>You can disable the \u2018automatic creation\u2019 features by not passing a file\nname, and loading seperately like this:</p>\n<pre><span class=\"n\">settings</span> <span class=\"o\">=</span> <span class=\"n\">EasySettings</span><span class=\"p\">()</span>\n<span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">configfile</span> <span class=\"o\">=</span> <span class=\"s1\">'myconfigfile.conf'</span>\n<span class=\"c1\"># file has not been created or loaded.</span>\n<span class=\"c1\"># file must exist before calling 'load_file'</span>\n<span class=\"k\">if</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">load_file</span><span class=\"p\">():</span>\n    <span class=\"c1\"># all settings were loaded.</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"c1\"># unable to load file for some reason.</span>\n</pre>\n<p>This will work in the same way to disable the automatic creation:</p>\n<pre><span class=\"n\">settings</span> <span class=\"o\">=</span> <span class=\"n\">EasySettings</span><span class=\"p\">()</span>\n<span class=\"c1\"># file has not been created or loaded.</span>\n<span class=\"c1\"># file 'myconfigfile.conf' must exist before calling load_file()</span>\n<span class=\"k\">if</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">load_file</span><span class=\"p\">(</span><span class=\"s1\">'myconfigfile.conf'</span><span class=\"p\">):</span>\n    <span class=\"c1\"># file was loaded.</span>\n    <span class=\"c1\"># settings.configfile was set by the load_file() function</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"c1\"># file could not be loaded.</span>\n</pre>\n<p>To check if the file exists without creating it automatically you can do\nthis:</p>\n<pre><span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">configfile_exists</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span> <span class=\"s1\">'config file does not exist, and was not created.'</span>\n<span class=\"c1\"># I actually prefer the os.path.isfile() method if you're not going to automatically</span>\n<span class=\"c1\"># create the file.</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os.path</span>\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isfile</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">configfile</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span> <span class=\"s1\">'config file does not exist, and was not created.'</span>\n</pre>\n</div>\n</div>\n<div id=\"jsonsettings-tomlsettings-and-yamlsettings\">\n<h2>JSONSettings, TOMLSettings, and YAMLSettings:</h2>\n<p>All of the <tt>*Settings</tt> objects are simple <tt>UserDict</tt>s that allow\nloading and saving in the specified format. All keys and values must be\nserializable using the specified format. If you don\u2019t already have the\n<tt>pyyaml</tt> and <tt>toml</tt> packages (not <tt>pytoml</tt>), be sure to use\n<tt>pip install \"easysettings[all]\"</tt> to install those along with\nEasySettings.</p>\n<div id=\"jsonsettings-example\">\n<h3>JSONSettings Example:</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">easysettings</span> <span class=\"kn\">import</span> <span class=\"n\">JSONSettings</span>\n\n<span class=\"c1\"># Starting from scratch:</span>\n<span class=\"n\">js</span> <span class=\"o\">=</span> <span class=\"n\">JSONSettings</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">'myfile.json'</span><span class=\"p\">)</span>\n<span class=\"n\">js</span><span class=\"p\">[</span><span class=\"s1\">'option'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'value'</span>\n<span class=\"n\">js</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">easysettings</span> <span class=\"kn\">import</span> <span class=\"n\">JSONSettings</span><span class=\"p\">,</span> <span class=\"n\">load_json_settings</span>\n<span class=\"c1\"># Loading settings that may not exist yet:</span>\n<span class=\"n\">js</span> <span class=\"o\">=</span> <span class=\"n\">load_json_settings</span><span class=\"p\">(</span><span class=\"s1\">'myfile.json'</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'option'</span><span class=\"p\">:</span> <span class=\"s1\">'mydefault'</span><span class=\"p\">})</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">js</span><span class=\"p\">[</span><span class=\"s1\">'option'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Set an item and save the settings.</span>\n<span class=\"n\">js</span><span class=\"o\">.</span><span class=\"n\">setsave</span><span class=\"p\">(</span><span class=\"s1\">'option2'</span><span class=\"p\">,</span> <span class=\"s1\">'value2'</span><span class=\"p\">,</span> <span class=\"n\">sort_keys</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Alternate load method, may raise FileNotFoundError.</span>\n<span class=\"n\">js</span> <span class=\"o\">=</span> <span class=\"n\">JSONSettings</span><span class=\"o\">.</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"s1\">'myjsonfile.json'</span><span class=\"p\">)</span>\n</pre>\n<p>The same goes for <tt>TOMLSettings</tt> and <tt>YAMLSettings</tt>.</p>\n</div>\n<div id=\"tomlsettings-example\">\n<h3>TOMLSettings Example:</h3>\n<pre><span class=\"c1\"># `toml` (not `pytoml`) must be installed, though you don't have to import it.</span>\n<span class=\"kn\">import</span> <span class=\"nn\">toml</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">easysettings</span> <span class=\"kn\">import</span> <span class=\"n\">TOMLSettings</span>\n\n<span class=\"c1\"># Starting from scratch:</span>\n<span class=\"n\">ts</span> <span class=\"o\">=</span> <span class=\"n\">TOMLSettings</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">'myfile.toml'</span><span class=\"p\">)</span>\n<span class=\"n\">ts</span><span class=\"p\">[</span><span class=\"s1\">'option'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'value'</span>\n<span class=\"n\">ts</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre>\n<pre><span class=\"c1\"># `toml` (not `pytoml`) must be installed, though you don't have to import it.</span>\n<span class=\"kn\">from</span> <span class=\"nn\">easysettings</span> <span class=\"kn\">import</span> <span class=\"n\">TOMLSettings</span><span class=\"p\">,</span> <span class=\"n\">load_toml_settings</span>\n\n<span class=\"c1\"># Loading settings that may not exist yet:</span>\n<span class=\"n\">ts</span> <span class=\"o\">=</span> <span class=\"n\">load_toml_settings</span><span class=\"p\">(</span><span class=\"s1\">'myfile.toml'</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'option'</span><span class=\"p\">:</span> <span class=\"s1\">'mydefault'</span><span class=\"p\">})</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ts</span><span class=\"p\">[</span><span class=\"s1\">'option'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Set an item and save the settings.</span>\n<span class=\"n\">ts</span><span class=\"o\">.</span><span class=\"n\">setsave</span><span class=\"p\">(</span><span class=\"s1\">'option2'</span><span class=\"p\">,</span> <span class=\"s1\">'value2'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Alternate load method, may raise FileNotFoundError.</span>\n<span class=\"n\">ts</span> <span class=\"o\">=</span> <span class=\"n\">TOMLSettings</span><span class=\"o\">.</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"s1\">'mytomlfile.toml'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"yamlsettings-example\">\n<h3>YAMLSettings Example:</h3>\n<pre><span class=\"c1\"># `pyyaml` must be installed, though you don't have to import it.</span>\n<span class=\"kn\">from</span> <span class=\"nn\">easysettings</span> <span class=\"kn\">import</span> <span class=\"n\">YAMLSettings</span>\n\n<span class=\"c1\"># Starting from scratch:</span>\n<span class=\"n\">ys</span> <span class=\"o\">=</span> <span class=\"n\">YAMLSettings</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">'myfile.yaml'</span><span class=\"p\">)</span>\n<span class=\"n\">ys</span><span class=\"p\">[</span><span class=\"s1\">'option'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'value'</span>\n<span class=\"n\">ys</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre>\n<pre><span class=\"c1\"># `pyyaml` must be installed, though you don't have to import it.</span>\n<span class=\"kn\">from</span> <span class=\"nn\">easysettings</span> <span class=\"kn\">import</span> <span class=\"n\">YAMLSettings</span><span class=\"p\">,</span> <span class=\"n\">load_yaml_settings</span>\n\n<span class=\"c1\"># Loading settings that may not exist yet:</span>\n<span class=\"n\">ys</span> <span class=\"o\">=</span> <span class=\"n\">load_yaml_settings</span><span class=\"p\">(</span><span class=\"s1\">'myfile.yaml'</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'option'</span><span class=\"p\">:</span> <span class=\"s1\">'mydefault'</span><span class=\"p\">})</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ys</span><span class=\"p\">[</span><span class=\"s1\">'option'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Set an item and save the settings.</span>\n<span class=\"n\">ys</span><span class=\"o\">.</span><span class=\"n\">setsave</span><span class=\"p\">(</span><span class=\"s1\">'option2'</span><span class=\"p\">,</span> <span class=\"s1\">'value2'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Alternate load method, may raise FileNotFoundError.</span>\n<span class=\"n\">ys</span> <span class=\"o\">=</span> <span class=\"n\">YAMLSettings</span><span class=\"o\">.</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"s1\">'myyamlfile.yaml'</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"pypi-package\">\n<h2>PyPi Package</h2>\n<p>Full PyPi package available at: <a href=\"http://pypi.python.org/pypi/EasySettings\" rel=\"nofollow\">http://pypi.python.org/pypi/EasySettings</a></p>\n<p>Use pip to install EasySettings to be used globally. Ubuntu instructions\nto install pip:</p>\n<pre>sudo apt-get install python-pip\n</pre>\n<p>After that you should be able to install EasySettings by typing:</p>\n<pre>pip install --user easysettings\n</pre>\n<div id=\"extras\">\n<h3>Extras</h3>\n<p>If you would like to use the opt-in YAML and TOML features, you will\nneed the <tt>pyyaml</tt> and <tt>toml</tt> packages (not pytoml). These can be\nrequested individually, or together during the EasySettings\ninstallation:</p>\n<pre><span class=\"c1\"># Install with the yaml dependency to use YAMLSettings:\n</span>pip install --user <span class=\"s2\">\"easysettings[yaml]\"</span>\n\n<span class=\"c1\"># Install with the toml dependency to use TOMLSettings:\n</span>pip install --user <span class=\"s2\">\"easysettings[toml]\"</span>\n\n<span class=\"c1\"># Install with both dependencies to use YAMLSettings and TOMLSettings:\n</span>pip install --user <span class=\"s2\">\"easysettings[all]\"</span>\n</pre>\n</div>\n</div>\n<div id=\"source-code\">\n<h2>Source Code</h2>\n<p>You can view the source for this package at:\n<a href=\"https://github.com/welbornprod/easysettings\" rel=\"nofollow\">https://github.com/welbornprod/easysettings</a></p>\n</div>\n<div id=\"website\">\n<h2>Website</h2>\n<p>Be sure to visit <a href=\"http://welbornprod.com\" rel=\"nofollow\">http://welbornprod.com</a> for more projects and\ninformation from Welborn Productions.</p>\n</div>\n<div id=\"notes\">\n<h2>Notes</h2>\n<p>Since you\u2019ve scrolled all the way down here, I thought I would tell you\nthat the <tt>EasySettings</tt> class itself was created a long time ago, when\nI was still learning Python. I don\u2019t use that specific class anymore for\nnew projects. I prefer to use the other <tt>*Settings</tt> classes in the\n<tt>easysettings</tt> package. I\u2019ve been fixing bugs and adding features in\nall of the <tt>easysettings</tt> code for years now, so I don\u2019t want to say\nthat it\u2019s \u201cabandoned\u201d or \u201cdeprecated\u201d. I\u2019m still using it with some of\nmy projects because there is no real reason to change them.</p>\n<p>It was designed for me at the time (a beginner), so maybe it\u2019s still\nuseful for beginners, but the other classes are much cleaner and not so\n\u201copinionated\u201d. They\u2019re also widely accepted config formats, where the\n<tt>EasySettings</tt> format (a mix of custom <tt>INI</tt> and Python\u2019s\n<tt>pickle</tt>) is not. They raise exceptions instead of silently trying to\n\u201cdo the right thing\u201d. If you only ever save string values,\n<tt>EasySettings</tt> is nice because it looks like an <tt>INI</tt> file with\nhelpers for values like <tt>\"true\"</tt>, <tt>\"false\"</tt>, <tt>\"yes\"</tt>, <tt>\"no\"</tt>,\n<tt>\"1\"</tt>, and <tt>\"0\"</tt> (if you use <tt>get_bool()</tt>).</p>\n<p>If you start saving other types, you may want to switch to\n<tt>JSONSettings</tt>, <tt>TOMLSettings</tt>, or <tt>YAMLSettings</tt> (depending on\nwhat your flavor is).</p>\n<p><strong>It\u2019s better to be explicit than implicit.</strong></p>\n<p>This is much cleaner:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">easysettings</span> <span class=\"kn\">import</span> <span class=\"n\">load_json_settings</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">load_json_settings</span><span class=\"p\">(</span>\n    <span class=\"c1\"># File is created if needed.</span>\n    <span class=\"s1\">'myconfig.json'</span><span class=\"p\">,</span>\n    <span class=\"c1\"># config will have *at least* these keys/values.</span>\n    <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'key1'</span><span class=\"p\">:</span> <span class=\"s1\">'value'</span><span class=\"p\">,</span> <span class=\"s1\">'key2'</span><span class=\"p\">:</span> <span class=\"mi\">2600</span><span class=\"p\">},</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># It's just a dict.</span>\n<span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'key3'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'key3'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Next time this code runs you can start where you left off.</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre>\n<p>Thank you for taking the time to read this. Contributions are welcome in\nall forms. <a href=\"https://github.com/welbornprod/easysettings/issues\" rel=\"nofollow\">File an\nissue</a>, or create\na <a href=\"https://github.com/welbornprod/easysettings/pulls\" rel=\"nofollow\">Pull Request</a>\nif you would like to see a new feature in EasySettings.</p>\n</div>\n\n          </div>"}, "last_serial": 6952298, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "8216d0353b86cbb81667d13dffe05c9c", "sha256": "3d2502bc275b980f3aafb9bd30e09fe7a3c068abe05234d0f00471addc45a9cf"}, "downloads": -1, "filename": "EasySettings-1.0.0.tar.gz", "has_sig": false, "md5_digest": "8216d0353b86cbb81667d13dffe05c9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15463, "upload_time": "2013-01-23T03:56:38", "upload_time_iso_8601": "2013-01-23T03:56:38.186670Z", "url": "https://files.pythonhosted.org/packages/ab/ad/43fc245df95bebb8a8afb7afbc484250990e4da252e54bb447f40da41c94/EasySettings-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "d08f7c5580d635c4d233334d17e1c3a5", "sha256": "15f7e0854db4f36186538ef9c91c3ffd4ed7826e41370a729601663159f00489"}, "downloads": -1, "filename": "EasySettings-1.0.1.tar.gz", "has_sig": false, "md5_digest": "d08f7c5580d635c4d233334d17e1c3a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15481, "upload_time": "2013-01-23T04:05:43", "upload_time_iso_8601": "2013-01-23T04:05:43.853304Z", "url": "https://files.pythonhosted.org/packages/33/95/1f547687472e38da21532bef14692a5037e9a76a0e4ff898d82d17729acf/EasySettings-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "9e4657cc5587ecc88c6903f54960b2b0", "sha256": "4f94cf6f8d64f59777f14714d185cd1c9fbe26aedea63594f77a0d0fe3dba145"}, "downloads": -1, "filename": "EasySettings-1.0.2.tar.gz", "has_sig": false, "md5_digest": "9e4657cc5587ecc88c6903f54960b2b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15488, "upload_time": "2013-01-23T04:07:27", "upload_time_iso_8601": "2013-01-23T04:07:27.459876Z", "url": "https://files.pythonhosted.org/packages/cc/19/7d631b81efe18d02c4e0bbd2d63b2b4b021b83fd61f29485db54407b2683/EasySettings-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "fa332a00592a7ff76c0c526870558916", "sha256": "263b10882fde7e020455f1ed7072d6a2cc489ba5bfa3f4a33bac81de9e4c447d"}, "downloads": -1, "filename": "EasySettings-1.0.3.tar.gz", "has_sig": false, "md5_digest": "fa332a00592a7ff76c0c526870558916", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15509, "upload_time": "2013-01-23T04:10:15", "upload_time_iso_8601": "2013-01-23T04:10:15.715625Z", "url": "https://files.pythonhosted.org/packages/0d/f4/8b10fa91bea79bd6f9c8d291c230b59c9bb42f82f12c78066a993c4f9634/EasySettings-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "c024a58b01d4389a884274c6c0d4a0ce", "sha256": "82433d017c0113c84159f5c72776cced2de39d84c74b0f8446649f23d4debd86"}, "downloads": -1, "filename": "EasySettings-1.0.4.tar.gz", "has_sig": false, "md5_digest": "c024a58b01d4389a884274c6c0d4a0ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16163, "upload_time": "2013-01-23T05:23:21", "upload_time_iso_8601": "2013-01-23T05:23:21.495427Z", "url": "https://files.pythonhosted.org/packages/8f/66/4fb10c8a5c5468f6c659c18984b42f7662fcd00a79c71f378fe7f3c86f30/EasySettings-1.0.4.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "3c3580ca2660c92e06cac395e421256d", "sha256": "fda34e2cbca640a159308790c79941407537b21956b828b6be9d1664c908d740"}, "downloads": -1, "filename": "EasySettings-1.5.1.tar.gz", "has_sig": false, "md5_digest": "3c3580ca2660c92e06cac395e421256d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18794, "upload_time": "2013-01-24T04:44:39", "upload_time_iso_8601": "2013-01-24T04:44:39.472236Z", "url": "https://files.pythonhosted.org/packages/0f/b2/cb6d4980fa4d4ee93f63b3c1dd2489f6072c64e8b1149dd05e1d621c9b27/EasySettings-1.5.1.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "d002e42a8a5b99f8ae1ce0c3f846b5f4", "sha256": "555da16c2178f62833bd7a526c90a213842ee3d941ef228704b2f765d915b5fb"}, "downloads": -1, "filename": "EasySettings-1.6.0.tar.gz", "has_sig": false, "md5_digest": "d002e42a8a5b99f8ae1ce0c3f846b5f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21905, "upload_time": "2013-01-25T04:10:35", "upload_time_iso_8601": "2013-01-25T04:10:35.568694Z", "url": "https://files.pythonhosted.org/packages/cc/22/03ed48d2ea29f843e077596720ebfdffd85be7a8b668d71bc4d5afe85d33/EasySettings-1.6.0.tar.gz", "yanked": false}], "1.6.1": [{"comment_text": "", "digests": {"md5": "57eaecc43491644a4fbba5973221b647", "sha256": "36a1182d2773f3f1fdd8f7515a54ef7e8c69db0e3f70e7a60930138b7a3b4f3a"}, "downloads": -1, "filename": "EasySettings-1.6.1.tar.gz", "has_sig": false, "md5_digest": "57eaecc43491644a4fbba5973221b647", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22332, "upload_time": "2013-01-30T03:58:42", "upload_time_iso_8601": "2013-01-30T03:58:42.418057Z", "url": "https://files.pythonhosted.org/packages/84/4a/28e11861dec64299ec557d53b9a7a4c18e1b6bf9017a917e540d1b3c1cbd/EasySettings-1.6.1.tar.gz", "yanked": false}], "1.6.2": [{"comment_text": "", "digests": {"md5": "833e23566f961070c2324700bf8b4dd5", "sha256": "aa81d610fff708d3d8d91e0ecd7f4383e3feb7d3fb92337af6d286f8b152de06"}, "downloads": -1, "filename": "EasySettings-1.6.2.tar.gz", "has_sig": false, "md5_digest": "833e23566f961070c2324700bf8b4dd5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22367, "upload_time": "2013-01-30T04:09:20", "upload_time_iso_8601": "2013-01-30T04:09:20.605327Z", "url": "https://files.pythonhosted.org/packages/48/7c/3c097cb5e7492303fe7f0db5f58ceab30861ff127021a315c2876e8d4857/EasySettings-1.6.2.tar.gz", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "20effdaaaea35ea97613e60695f48b7f", "sha256": "a267f9718690e9cdf8450aaeb5ecbe37b888ac03f9d60321ba28be91de8712a2"}, "downloads": -1, "filename": "EasySettings-1.7.0.tar.gz", "has_sig": false, "md5_digest": "20effdaaaea35ea97613e60695f48b7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23713, "upload_time": "2013-01-31T00:17:20", "upload_time_iso_8601": "2013-01-31T00:17:20.523036Z", "url": "https://files.pythonhosted.org/packages/67/c1/00205de01fd2ee60826022c47b941678203724a0a84e9b8145f0879d8396/EasySettings-1.7.0.tar.gz", "yanked": false}], "1.7.1": [{"comment_text": "", "digests": {"md5": "dfe7c909330263b555828e1f38155bf5", "sha256": "81c34982a1aefc422831f23ecf09a30d0021e52484ab6c50a38c9b6b819ef4f0"}, "downloads": -1, "filename": "EasySettings-1.7.1.tar.gz", "has_sig": false, "md5_digest": "dfe7c909330263b555828e1f38155bf5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23733, "upload_time": "2013-01-31T00:26:15", "upload_time_iso_8601": "2013-01-31T00:26:15.796247Z", "url": "https://files.pythonhosted.org/packages/c9/af/d76a97894503ef02c3388651f0705280621e0e3b963d38f234420173367b/EasySettings-1.7.1.tar.gz", "yanked": false}], "1.7.3": [{"comment_text": "", "digests": {"md5": "5e13862f9869607a8e1f4afadc5ed5a1", "sha256": "15470269371021db1aeef3d009fefd5b4918856b5ebeccb1a4fcd3c3e2e9dd21"}, "downloads": -1, "filename": "EasySettings-1.7.3.tar.gz", "has_sig": false, "md5_digest": "5e13862f9869607a8e1f4afadc5ed5a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24542, "upload_time": "2013-02-03T00:16:52", "upload_time_iso_8601": "2013-02-03T00:16:52.154350Z", "url": "https://files.pythonhosted.org/packages/70/3b/fd874e042b3ee5e50778128dd56f6c8dc739621abcd4eff8cdb1df171bc9/EasySettings-1.7.3.tar.gz", "yanked": false}], "1.7.4": [{"comment_text": "", "digests": {"md5": "01831b212b8a1ce6b3591446667106f7", "sha256": "9dcc3ed7849c25b12ef157d1b54d1f7d66e7de6f89d8dd2aebae5f2978b60c48"}, "downloads": -1, "filename": "EasySettings-1.7.4.tar.gz", "has_sig": false, "md5_digest": "01831b212b8a1ce6b3591446667106f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24582, "upload_time": "2013-02-03T00:30:20", "upload_time_iso_8601": "2013-02-03T00:30:20.426753Z", "url": "https://files.pythonhosted.org/packages/e1/fc/3380977d01dca0e6a05276dbc115a9b0d4223dcae8a4ec2a44c0531b39dd/EasySettings-1.7.4.tar.gz", "yanked": false}], "1.7.5": [{"comment_text": "", "digests": {"md5": "0f86bcad3686307d865dc79d60dd358e", "sha256": "40163d1e9a1a9e13f288511223c256737942ecf746b024f8b59feab7c581d6a4"}, "downloads": -1, "filename": "EasySettings-1.7.5.tar.gz", "has_sig": false, "md5_digest": "0f86bcad3686307d865dc79d60dd358e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24623, "upload_time": "2013-02-03T00:38:09", "upload_time_iso_8601": "2013-02-03T00:38:09.160065Z", "url": "https://files.pythonhosted.org/packages/2b/ba/6672cb0feb65ce404deb38a89f46eaa130b9878161e4dada211c6039a4ed/EasySettings-1.7.5.tar.gz", "yanked": false}], "1.7.6": [{"comment_text": "", "digests": {"md5": "fd35c9362a26c2d779e71199a80ba98e", "sha256": "9088332c79e129ea5e175e8c755e887c3e10e05d2fe6ebc56ff84da317c009ea"}, "downloads": -1, "filename": "EasySettings-1.7.6.tar.gz", "has_sig": false, "md5_digest": "fd35c9362a26c2d779e71199a80ba98e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24636, "upload_time": "2013-04-04T02:42:07", "upload_time_iso_8601": "2013-04-04T02:42:07.282783Z", "url": "https://files.pythonhosted.org/packages/78/0e/e2e8805d6597a40ecff33b06c60700773f4cac2dad0aa72d2e53dde81cbf/EasySettings-1.7.6.tar.gz", "yanked": false}], "1.7.9": [{"comment_text": "", "digests": {"md5": "f0f2f1fd8ed1c9819a6a184216c393d6", "sha256": "e4f529cc9c57b027a07fbcc0bd7b273210383502e17a5c211d735b3be7eaa3d6"}, "downloads": -1, "filename": "EasySettings-1.7.9.tar.gz", "has_sig": false, "md5_digest": "f0f2f1fd8ed1c9819a6a184216c393d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24886, "upload_time": "2013-04-04T03:20:03", "upload_time_iso_8601": "2013-04-04T03:20:03.836506Z", "url": "https://files.pythonhosted.org/packages/4c/de/6ea7b078eed9c7caf394ec6d53b96fbf9345b947987078a51b94eb532192/EasySettings-1.7.9.tar.gz", "yanked": false}], "1.8.0": [{"comment_text": "", "digests": {"md5": "c77ad600b6b903099ae289a48de331ae", "sha256": "0a27e98e460ed95a28512176bf00e649c2166509ebaa69e59590bc068977d9a0"}, "downloads": -1, "filename": "EasySettings-1.8.0.tar.gz", "has_sig": false, "md5_digest": "c77ad600b6b903099ae289a48de331ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24879, "upload_time": "2013-04-04T03:31:59", "upload_time_iso_8601": "2013-04-04T03:31:59.882075Z", "url": "https://files.pythonhosted.org/packages/09/0b/4f69193670a4a8b1aeef27672333b7c5a454aa21eb76d025d31a8708dcff/EasySettings-1.8.0.tar.gz", "yanked": false}], "1.8.1": [{"comment_text": "", "digests": {"md5": "1849c5e4a8387db5012bb1c623da69cc", "sha256": "db1f71424fc8bc0f0b009d42c1a82266d147f21c515b518ffe52e98faa1b3248"}, "downloads": -1, "filename": "EasySettings-1.8.1.tar.gz", "has_sig": false, "md5_digest": "1849c5e4a8387db5012bb1c623da69cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24901, "upload_time": "2013-04-04T03:40:40", "upload_time_iso_8601": "2013-04-04T03:40:40.355020Z", "url": "https://files.pythonhosted.org/packages/b2/ed/b56332b9f028b9d7a4cb2e09428f49ce0f077f3811f48a6190fa9b41012f/EasySettings-1.8.1.tar.gz", "yanked": false}], "1.8.2": [{"comment_text": "built for Linux-3.7.0-7-generic-x86_64-with-glibc2.7", "digests": {"md5": "4160f6acda759ded2278c1ce9041eab7", "sha256": "b7524745896d4c141e024924ca96a6ef20fbbf949f305d8f0adfac9a05e6ff3f"}, "downloads": -1, "filename": "EasySettings-1.8.2.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "4160f6acda759ded2278c1ce9041eab7", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 20690, "upload_time": "2013-09-20T00:40:52", "upload_time_iso_8601": "2013-09-20T00:40:52.977142Z", "url": "https://files.pythonhosted.org/packages/7b/76/a358f0de22732a24e717e534d7232943a10f0d5eece44ed1186395edb4b9/EasySettings-1.8.2.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "d142e67388a45405133876257e00b45f", "sha256": "94bc414a7eca5b6bb4ac8acffc61fb50c087ed59eecca31a2a25f4a8a8534bf5"}, "downloads": -1, "filename": "EasySettings-1.8.2.tar.gz", "has_sig": false, "md5_digest": "d142e67388a45405133876257e00b45f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24935, "upload_time": "2013-09-20T00:43:33", "upload_time_iso_8601": "2013-09-20T00:43:33.203923Z", "url": "https://files.pythonhosted.org/packages/92/01/9194b0cde7483f5c0acc8ec06b86afa63e77af98d10b8f63b571cadec895/EasySettings-1.8.2.tar.gz", "yanked": false}], "1.8.4": [{"comment_text": "", "digests": {"md5": "6a1748e5d91bf8af92cdbf9507f9a430", "sha256": "5917d3b40a1008fa8e28d7d6ed2f40e9746122bdf8ceef6b42c6b0acbd8ccbfc"}, "downloads": -1, "filename": "EasySettings-1.8.4.tar.gz", "has_sig": false, "md5_digest": "6a1748e5d91bf8af92cdbf9507f9a430", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24964, "upload_time": "2013-09-20T00:51:25", "upload_time_iso_8601": "2013-09-20T00:51:25.803375Z", "url": "https://files.pythonhosted.org/packages/a4/3b/cc84dfba56b5151279f424127c968690d82a61ee72194cf223774e28a7f6/EasySettings-1.8.4.tar.gz", "yanked": false}], "1.8.5": [{"comment_text": "", "digests": {"md5": "c1997353bf127a2110b0afc2952155c2", "sha256": "4a4495224a32168fe40806e8eaa800a9dff1668b857d394ab76eb9dbc51389a0"}, "downloads": -1, "filename": "EasySettings-1.8.5.tar.gz", "has_sig": false, "md5_digest": "c1997353bf127a2110b0afc2952155c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24971, "upload_time": "2013-09-20T01:04:14", "upload_time_iso_8601": "2013-09-20T01:04:14.339489Z", "url": "https://files.pythonhosted.org/packages/9a/14/b37cf7e10428bdf3884ff05e0377d4a43663fe170d7a5a96e6f02862d5c0/EasySettings-1.8.5.tar.gz", "yanked": false}], "1.8.6": [{"comment_text": "", "digests": {"md5": "a810253194591b92c4daee0586c84c4e", "sha256": "848cbefe090b94c6eb413432e0ce820a3c16a441328794bcc2c0960df93a2c61"}, "downloads": -1, "filename": "EasySettings-1.8.6.tar.gz", "has_sig": false, "md5_digest": "a810253194591b92c4daee0586c84c4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25019, "upload_time": "2013-09-20T01:16:07", "upload_time_iso_8601": "2013-09-20T01:16:07.504729Z", "url": "https://files.pythonhosted.org/packages/14/b8/afee5f13fa495c602c2e260523a600bdfca9d27cae0f729e3e1488af222a/EasySettings-1.8.6.tar.gz", "yanked": false}], "1.8.7": [{"comment_text": "", "digests": {"md5": "9f6a0051141477807544de74b01abea1", "sha256": "d4b023303a37f86353f8fb60b0929a41c07b603d47a7bcf02eaa2468d5b676e3"}, "downloads": -1, "filename": "EasySettings-1.8.7.tar.gz", "has_sig": false, "md5_digest": "9f6a0051141477807544de74b01abea1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25123, "upload_time": "2014-03-16T05:33:48", "upload_time_iso_8601": "2014-03-16T05:33:48.315794Z", "url": "https://files.pythonhosted.org/packages/a5/96/7e95e1b1ce7041fbae7bc0e6a7a59afeba2d06d1dcfe73daf062334bae80/EasySettings-1.8.7.tar.gz", "yanked": false}], "1.8.8": [{"comment_text": "", "digests": {"md5": "7f855e36624bcef9746247b386f5ea4d", "sha256": "7277b87b3e922b9e7c70aa6a747fa73eeebf87480907ca0ac5ca0146df9d4266"}, "downloads": -1, "filename": "EasySettings-1.8.8.tar.gz", "has_sig": false, "md5_digest": "7f855e36624bcef9746247b386f5ea4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25155, "upload_time": "2014-03-16T05:38:56", "upload_time_iso_8601": "2014-03-16T05:38:56.382687Z", "url": "https://files.pythonhosted.org/packages/f2/fb/8c9426ba649b77058c894e4121990297fb98784ac54f2f530dbaefdb3296/EasySettings-1.8.8.tar.gz", "yanked": false}], "1.8.9": [{"comment_text": "", "digests": {"md5": "836616f7260b5008584b45ba3f9793d9", "sha256": "e6982b030248d1100d581a01f63b148f58bbafb3b2b607e96900b210c2fef422"}, "downloads": -1, "filename": "EasySettings-1.8.9.tar.gz", "has_sig": false, "md5_digest": "836616f7260b5008584b45ba3f9793d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25106, "upload_time": "2014-03-16T06:12:56", "upload_time_iso_8601": "2014-03-16T06:12:56.885846Z", "url": "https://files.pythonhosted.org/packages/1c/43/fc8abd324ac5d0338109555161b7e9bcb57c97f1423fd36796f0bd3cb8b8/EasySettings-1.8.9.tar.gz", "yanked": false}], "1.9.0": [{"comment_text": "", "digests": {"md5": "0b259e21968691f96824798a1292d117", "sha256": "b0e64ecaca5d973561f478f37d3c5f205774b9600b75945d01186d5d9c4afca9"}, "downloads": -1, "filename": "EasySettings-1.9.0.tar.gz", "has_sig": false, "md5_digest": "0b259e21968691f96824798a1292d117", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25329, "upload_time": "2014-03-16T06:44:21", "upload_time_iso_8601": "2014-03-16T06:44:21.875840Z", "url": "https://files.pythonhosted.org/packages/01/f1/79d7b3b02e4c339a33b344b9b3ebe37c5ef55399b2d7aa846522273b7a1d/EasySettings-1.9.0.tar.gz", "yanked": false}], "1.9.1": [{"comment_text": "", "digests": {"md5": "68bef7dfc1e3d3592d18f871d5add56b", "sha256": "65470f807838982d72abdb0d1be6d576f9e4be47bf17c7fe60707219492fe0b9"}, "downloads": -1, "filename": "EasySettings-1.9.1.tar.gz", "has_sig": false, "md5_digest": "68bef7dfc1e3d3592d18f871d5add56b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25348, "upload_time": "2014-03-16T06:57:44", "upload_time_iso_8601": "2014-03-16T06:57:44.679024Z", "url": "https://files.pythonhosted.org/packages/dc/2a/301c3bc0f15c0eff67af5ed943ee68035cca80987e4f2e3a33b16396e24e/EasySettings-1.9.1.tar.gz", "yanked": false}], "1.9.2": [{"comment_text": "", "digests": {"md5": "0c0b5ee9eb5b594a9e5de5c284765283", "sha256": "749c230c69ffbd891e1862de13504dff77863f2c22e99b33bf1581baf48c907a"}, "downloads": -1, "filename": "EasySettings-1.9.2.tar.gz", "has_sig": false, "md5_digest": "0c0b5ee9eb5b594a9e5de5c284765283", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26747, "upload_time": "2014-08-22T01:46:08", "upload_time_iso_8601": "2014-08-22T01:46:08.713483Z", "url": "https://files.pythonhosted.org/packages/9e/2a/01299873a5cc80dcf4b1cec0c51634ab931e5ce4a18348700010d094ae24/EasySettings-1.9.2.tar.gz", "yanked": false}], "1.9.3": [{"comment_text": "", "digests": {"md5": "bfddc4cc3bdc671c4b0e6a5cbfb3181a", "sha256": "04a001add28efdbe9ef4801377d2dfc0677a3fe9f59c53027151ca453f07fa19"}, "downloads": -1, "filename": "EasySettings-1.9.3.tar.gz", "has_sig": false, "md5_digest": "bfddc4cc3bdc671c4b0e6a5cbfb3181a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27693, "upload_time": "2014-08-26T16:17:00", "upload_time_iso_8601": "2014-08-26T16:17:00.289773Z", "url": "https://files.pythonhosted.org/packages/58/4d/c160ae3449a5b827a1699eba7dbea191d8db316fbd4f608cdfb006c531d9/EasySettings-1.9.3.tar.gz", "yanked": false}], "1.9.3-2": [{"comment_text": "", "digests": {"md5": "f51da8682c0ec281a69893bd400413ee", "sha256": "4cfb50b785a6ea49783c7b850454681422ff7f4694e4f568298d3571ee1c92a2"}, "downloads": -1, "filename": "EasySettings-1.9.3-2.tar.gz", "has_sig": false, "md5_digest": "f51da8682c0ec281a69893bd400413ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27911, "upload_time": "2014-09-01T05:38:34", "upload_time_iso_8601": "2014-09-01T05:38:34.516227Z", "url": "https://files.pythonhosted.org/packages/a9/3a/11ed8deeb95251982ece332e29eac76c44459a94c2e8d26113a3e576dd7e/EasySettings-1.9.3-2.tar.gz", "yanked": false}], "1.9.3-3": [{"comment_text": "", "digests": {"md5": "5f3aeeebe6b8eb0b5a7be9430932c73e", "sha256": "96c770c5b7effe8a41e0917e3546b5dd11865110376432115031b8959b954f9f"}, "downloads": -1, "filename": "EasySettings-1.9.3-3.tar.gz", "has_sig": false, "md5_digest": "5f3aeeebe6b8eb0b5a7be9430932c73e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29070, "upload_time": "2014-09-20T19:06:25", "upload_time_iso_8601": "2014-09-20T19:06:25.235731Z", "url": "https://files.pythonhosted.org/packages/d4/b5/90934076f8d53d20429fa68ed3ae6576b8e381b4af2275f4e05180af3dc5/EasySettings-1.9.3-3.tar.gz", "yanked": false}], "1.9.3-4": [{"comment_text": "", "digests": {"md5": "a6b0f2c2b77422dbaecbf8916fb72715", "sha256": "d3bc94b726b6fadd09d72913cbdc379d620311970eb453ee0535ef29a80088b0"}, "downloads": -1, "filename": "EasySettings-1.9.3-4.tar.gz", "has_sig": false, "md5_digest": "a6b0f2c2b77422dbaecbf8916fb72715", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29088, "upload_time": "2014-09-20T19:10:30", "upload_time_iso_8601": "2014-09-20T19:10:30.041603Z", "url": "https://files.pythonhosted.org/packages/36/40/fa87edd7236bdcc88056cfbf4e332f5647fe78f7908e285f5d5df85c7b61/EasySettings-1.9.3-4.tar.gz", "yanked": false}], "1.9.3-5": [{"comment_text": "", "digests": {"md5": "2b9d71b0d03b0f37a85c7afdeb9206aa", "sha256": "cb06ca6adbb76906bcdc919aa44460dea42962e73b36b60f52c30e42cd0ff866"}, "downloads": -1, "filename": "EasySettings-1.9.3-5.tar.gz", "has_sig": false, "md5_digest": "2b9d71b0d03b0f37a85c7afdeb9206aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29094, "upload_time": "2014-09-20T19:28:10", "upload_time_iso_8601": "2014-09-20T19:28:10.035309Z", "url": "https://files.pythonhosted.org/packages/78/e3/06c2b93877f60c309fb421b8c9cfbab7575af6cecbab08603a1554233cd7/EasySettings-1.9.3-5.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "2a0a1248327557aac185f17f7046f5a2", "sha256": "76f78765998deb3e780f94b867ee0222d60c440ab7294032d5fed16107b65442"}, "downloads": -1, "filename": "EasySettings-2.0.0.tar.gz", "has_sig": false, "md5_digest": "2a0a1248327557aac185f17f7046f5a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30111, "upload_time": "2015-07-15T02:35:17", "upload_time_iso_8601": "2015-07-15T02:35:17.882634Z", "url": "https://files.pythonhosted.org/packages/6e/fc/d24626f156cccba3de4c6fb45fbec8937c53d39d3301386273fd55390943/EasySettings-2.0.0.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "ec0a33c6e80e1a91df9b4e050a42d1fd", "sha256": "d3da82f6c8a0c1bc0c4f6398bf82c87df20dd13ad68230381dc9a416b8b27451"}, "downloads": -1, "filename": "EasySettings-2.0.2.tar.gz", "has_sig": false, "md5_digest": "ec0a33c6e80e1a91df9b4e050a42d1fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31313, "upload_time": "2015-07-15T03:57:17", "upload_time_iso_8601": "2015-07-15T03:57:17.079460Z", "url": "https://files.pythonhosted.org/packages/a0/36/5bfbc32e37267b70bbc569cfb4ba40ffb6f58499b667c0bd1943d4ca9390/EasySettings-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "bc29d42cfb8381214b7ce5e208b971ad", "sha256": "49925c8bcfdab5c79a49e17aa0c42203da83c6f70f35ff0eca23ed547766db90"}, "downloads": -1, "filename": "EasySettings-2.0.3.tar.gz", "has_sig": false, "md5_digest": "bc29d42cfb8381214b7ce5e208b971ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31365, "upload_time": "2015-07-15T04:19:27", "upload_time_iso_8601": "2015-07-15T04:19:27.393508Z", "url": "https://files.pythonhosted.org/packages/2f/1c/04b70b932a0fc013126bb3241db2a70fc5292a80fbc552fcf437bbef7ab7/EasySettings-2.0.3.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "17bb8ef7f32597f30123d6e96e3fc9c5", "sha256": "209e2895dc2768c241ff46457e1dba7b2c4f0a7c05119e0d80e9e574117f66de"}, "downloads": -1, "filename": "EasySettings-2.0.4.tar.gz", "has_sig": false, "md5_digest": "17bb8ef7f32597f30123d6e96e3fc9c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31883, "upload_time": "2015-07-19T02:42:29", "upload_time_iso_8601": "2015-07-19T02:42:29.945676Z", "url": "https://files.pythonhosted.org/packages/70/4e/3a853600332b1dd7f28be6bf3916ab7628c5f64f1d081904dc88becead0d/EasySettings-2.0.4.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "2813f3a98a4e6a751ed6a7f70385afce", "sha256": "82a2566d6b402a07cc200a4778f934d2e185680cd7cced4b95dbdf5454100735"}, "downloads": -1, "filename": "EasySettings-2.1.0.tar.gz", "has_sig": false, "md5_digest": "2813f3a98a4e6a751ed6a7f70385afce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35562, "upload_time": "2017-02-27T02:16:54", "upload_time_iso_8601": "2017-02-27T02:16:54.412776Z", "url": "https://files.pythonhosted.org/packages/7d/db/5268607d4e7c3f5a05e791e692ccbc20a845ced19534fa999da5ec10d486/EasySettings-2.1.0.tar.gz", "yanked": false}], "2.1.4": [{"comment_text": "", "digests": {"md5": "66624cc3d7dfd676f88603c1d72e7533", "sha256": "17bd569fbf1047a0a1bf4a585d8068e5cd3d83288b06bbc3b5b0de956af26e0f"}, "downloads": -1, "filename": "EasySettings-2.1.4.tar.gz", "has_sig": false, "md5_digest": "66624cc3d7dfd676f88603c1d72e7533", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37231, "upload_time": "2019-01-21T21:39:49", "upload_time_iso_8601": "2019-01-21T21:39:49.562403Z", "url": "https://files.pythonhosted.org/packages/b5/ae/1a4fe345c563701ef48e0971cab2aa6991e7f1498c14efa98dfc341392f8/EasySettings-2.1.4.tar.gz", "yanked": false}], "2.1.5": [{"comment_text": "", "digests": {"md5": "4fb0264fd2b3f3af6698ebb35fb05084", "sha256": "f72ef37ab51199d833358818c2611d00819990171d5df9b2e8e880ea09376861"}, "downloads": -1, "filename": "EasySettings-2.1.5.tar.gz", "has_sig": false, "md5_digest": "4fb0264fd2b3f3af6698ebb35fb05084", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32797, "upload_time": "2019-04-02T23:08:42", "upload_time_iso_8601": "2019-04-02T23:08:42.879946Z", "url": "https://files.pythonhosted.org/packages/14/e7/af8165064c7d8b0553739da67120305eee9a3a1939513efdea754ba4a234/EasySettings-2.1.5.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "32c9dda49f62e160ac6c270bae01fa16", "sha256": "e29c49301b114c02bbfd15ead12ce31c8a8a748f8b7b1ddf76ac868bb119926f"}, "downloads": -1, "filename": "EasySettings-2.2.0.tar.gz", "has_sig": false, "md5_digest": "32c9dda49f62e160ac6c270bae01fa16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37664, "upload_time": "2019-04-17T04:14:34", "upload_time_iso_8601": "2019-04-17T04:14:34.006830Z", "url": "https://files.pythonhosted.org/packages/5c/b0/c5535f227e757ce27419fd78b6ee3c8adfe147d68d8a3f1bf3f1687d13d2/EasySettings-2.2.0.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "5c374adb282a03812d167aa35a33b6c0", "sha256": "e07d5a9561497ea3e40489f027a5ac10fb414b3a204d249b3eb9608e34c96801"}, "downloads": -1, "filename": "EasySettings-3.0.0.tar.gz", "has_sig": false, "md5_digest": "5c374adb282a03812d167aa35a33b6c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35569, "upload_time": "2019-05-06T00:08:58", "upload_time_iso_8601": "2019-05-06T00:08:58.747644Z", "url": "https://files.pythonhosted.org/packages/ad/71/b92b0e09d2f161ed73b06f15615f4d59cf7d76702f2e44ef8b9a6f6c1395/EasySettings-3.0.0.tar.gz", "yanked": false}], "3.2.0": [{"comment_text": "", "digests": {"md5": "01db872403992b5601b0161261a70f18", "sha256": "7c3f5bcfb99580604fddf3824a50cb969ca4867eb3a2035552be1f3db3e0319b"}, "downloads": -1, "filename": "EasySettings-3.2.0.tar.gz", "has_sig": false, "md5_digest": "01db872403992b5601b0161261a70f18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40145, "upload_time": "2019-05-09T04:00:21", "upload_time_iso_8601": "2019-05-09T04:00:21.800432Z", "url": "https://files.pythonhosted.org/packages/20/62/b905b3ff7d209f78b7d41c6af15d113dde0d0301c2fbcd583d1a7a03b6bf/EasySettings-3.2.0.tar.gz", "yanked": false}], "3.2.1": [{"comment_text": "", "digests": {"md5": "a2b07237e73c3b35ca8e43ef1df11724", "sha256": "2300b467d5b6c1b1fb11cab710079f92200e323fd45a6f10fe2935de80718441"}, "downloads": -1, "filename": "EasySettings-3.2.1.tar.gz", "has_sig": false, "md5_digest": "a2b07237e73c3b35ca8e43ef1df11724", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42045, "upload_time": "2019-12-26T01:16:23", "upload_time_iso_8601": "2019-12-26T01:16:23.276474Z", "url": "https://files.pythonhosted.org/packages/a5/e5/ea99dbde13585a787c7047d96f29117e45802f67e3ae25c857fad797f357/EasySettings-3.2.1.tar.gz", "yanked": false}], "3.3.0": [{"comment_text": "", "digests": {"md5": "d6ea1597e90874177c9c7e972edf95fe", "sha256": "1202750f24d5897d6c7125e684c74a255f3d5324f0eb1dba4e86708485e17c74"}, "downloads": -1, "filename": "EasySettings-3.3.0.tar.gz", "has_sig": false, "md5_digest": "d6ea1597e90874177c9c7e972edf95fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42473, "upload_time": "2020-03-25T23:18:57", "upload_time_iso_8601": "2020-03-25T23:18:57.900812Z", "url": "https://files.pythonhosted.org/packages/ea/7e/c1c95e7a939c24877983684d16c2a51dbca88a56108afeafce936932e486/EasySettings-3.3.0.tar.gz", "yanked": false}], "3.3.3": [{"comment_text": "", "digests": {"md5": "2a80e0dfe1eddb30e480d14518ede5a6", "sha256": "f88f4f6eaf139ca27aada407bcaaa3040521b5eedcf3a9fe2debfd81bd4fdfb2"}, "downloads": -1, "filename": "EasySettings-3.3.3.tar.gz", "has_sig": false, "md5_digest": "2a80e0dfe1eddb30e480d14518ede5a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45835, "upload_time": "2020-03-27T03:44:24", "upload_time_iso_8601": "2020-03-27T03:44:24.179413Z", "url": "https://files.pythonhosted.org/packages/ce/61/eb6c2e6611c09551964d046de20f751cf330cfaf506f9c22f1d42591f10f/EasySettings-3.3.3.tar.gz", "yanked": false}], "4.0.0": [{"comment_text": "", "digests": {"md5": "34ec143d90b61de64aa06bc8c60fe64e", "sha256": "93929d61430716ead5f4625bed0b15784be6eb2d0c7175d67e3b4369e64afbd3"}, "downloads": -1, "filename": "EasySettings-4.0.0.tar.gz", "has_sig": false, "md5_digest": "34ec143d90b61de64aa06bc8c60fe64e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45746, "upload_time": "2020-04-04T19:12:55", "upload_time_iso_8601": "2020-04-04T19:12:55.497671Z", "url": "https://files.pythonhosted.org/packages/8b/77/a30c7da349a22f25cf916f011ae853d938819bd385ab529d9aff8dd6c920/EasySettings-4.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "34ec143d90b61de64aa06bc8c60fe64e", "sha256": "93929d61430716ead5f4625bed0b15784be6eb2d0c7175d67e3b4369e64afbd3"}, "downloads": -1, "filename": "EasySettings-4.0.0.tar.gz", "has_sig": false, "md5_digest": "34ec143d90b61de64aa06bc8c60fe64e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45746, "upload_time": "2020-04-04T19:12:55", "upload_time_iso_8601": "2020-04-04T19:12:55.497671Z", "url": "https://files.pythonhosted.org/packages/8b/77/a30c7da349a22f25cf916f011ae853d938819bd385ab529d9aff8dd6c920/EasySettings-4.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:15 2020"}