{"info": {"author": "David Moreno-Garcia", "author_email": "david.mogar@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Information Technology", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries"], "description": "cucco |Build Status| |codecov| |patreon| |gitter|\n=================================================\n\nIs that... is that a cucco? Sure it is!\n\nCucco is here to help you to normalize those nasty texts. Removing extra white spaces is not that hard, right? What about stop words? They're no good... oh, and don't even mention emojis!\n\nThis little friend will do the hard work for you. Just set it up and let it peck all over your text.\n\nOh please, shut up and show me where can I grab a cucco!\n--------------------------------------------------------\n\nThe easiest way to get a cucco is by using pip:\n\n::\n\n    $ pip install cucco\n\nBut sometimes... sometimes you want to go wild and get the biggest... No, the best!... No, THE MIGHTIEST cucco!\n\nTo do so, you may use Git. Clone the repository from Github and do it all the hard way:\n\n::\n\n    $ git clone https://github.com/davidmogar/cucco.git\n    $ cd cucco\n    $ python setup.py install\n\nGot it. How do I use it?\n------------------------\n\nNow that you have a cucco, I'll let it give you all the details.\n\n    Cucuco, cuco cuco cucucuco, CUCCO!\n\n    -- Cucco\n\nSo true... so true...[tears falling down my face]. Just allow me to add some insight.\n\nThere are two ways of using cucco. The first one is through its CLI. You can get more info on this by executing the next command:\n\n::\n\n    $ cucco --help\n\nThe next example code shows how to normalize a short text using cucco inside your code:\n\n.. code:: python\n\n    from cucco import Cucco\n\n    cucco = Cucco()\n    print(cucco.normalize('Who let the cucco out?'))\n\nThis would apply all normalizations to the text ``Who let the cucco out?``. The output for this normalizations would be the next one:\n\n::\n\n    cucco\n\nIt's also possible to send a list of normalizations to apply, which will be executed in order.\n\n.. code:: python\n\n    from cucco import Cucco\n\n    cucco = Cucco()\n\n    normalizations = [\n        'remove_extra_white_spaces',\n        ('replace_punctuation', {'replacement': ' '})\n    ]\n\n    print(cucco.normalize('Who    let   the cucco out?', normalizations))\n\nThis is the output:\n\n::\n\n    Who let the cucco out\n\nFor more information on how to use cucco you can `check its website <cucco.io>`_, which will be ready cucco-soon.\n\nSupported languages\n-------------------\n\nYou never know when a cucco will learn a new trick. Currently, they can remove stop words for 50 languages. The complete list can be `checked here <https://github.com/davidmogar/cucco/tree/master/cucco/data>`_. If you are looking for the source you can find it in this `GitHub repository <https://github.com/6/stopwords-json>`_ which uses `json` for the stop words files.\n\nCan I contribute?\n-----------------\n\nAre you a breeder? No? Don't worry, you can still help.\n\nMaybe you have a good new feature to add. Maybe is not even good. It doesn't matter! It is always good to share ideas, isn't it? Just go for it! Pull requests are warmly welcomed.\n\nNot in the mood to implement it yourself? You can still create an issue and comment about it there. Feedback is always great!\n\n.. |Build Status| image:: https://travis-ci.org/davidmogar/cucco.svg?branch=master\n   :target: https://travis-ci.org/davidmogar/cucco\n.. |codecov| image:: https://codecov.io/gh/davidmogar/cucco/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/davidmogar/cucco\n.. |patreon| image:: https://img.shields.io/badge/support%20on-patreon-red.svg\n   :target: https://www.patreon.com/davidmogar\n.. |gitter| image:: https://img.shields.io/gitter/room/nwjs/nw.js.svg\n    :target: https://gitter.im/davidmogar/cucco\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/davidmogar/cucco/tarball/2.2.1", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/davidmogar/cucco", "keywords": "normalization,language,text,manipulation", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "cucco", "package_url": "https://pypi.org/project/cucco/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/cucco/", "project_urls": {"Download": "https://github.com/davidmogar/cucco/tarball/2.2.1", "Homepage": "https://github.com/davidmogar/cucco"}, "release_url": "https://pypi.org/project/cucco/2.2.1/", "requires_dist": null, "requires_python": null, "summary": "Python library for text normalization", "version": "2.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Is that\u2026 is that a cucco? Sure it is!</p>\n<p>Cucco is here to help you to normalize those nasty texts. Removing extra white spaces is not that hard, right? What about stop words? They\u2019re no good\u2026 oh, and don\u2019t even mention emojis!</p>\n<p>This little friend will do the hard work for you. Just set it up and let it peck all over your text.</p>\n<div id=\"oh-please-shut-up-and-show-me-where-can-i-grab-a-cucco\">\n<h2>Oh please, shut up and show me where can I grab a cucco!</h2>\n<p>The easiest way to get a cucco is by using pip:</p>\n<pre>$ pip install cucco\n</pre>\n<p>But sometimes\u2026 sometimes you want to go wild and get the biggest\u2026 No, the best!\u2026 No, THE MIGHTIEST cucco!</p>\n<p>To do so, you may use Git. Clone the repository from Github and do it all the hard way:</p>\n<pre>$ git clone https://github.com/davidmogar/cucco.git\n$ cd cucco\n$ python setup.py install\n</pre>\n</div>\n<div id=\"got-it-how-do-i-use-it\">\n<h2>Got it. How do I use it?</h2>\n<p>Now that you have a cucco, I\u2019ll let it give you all the details.</p>\n<blockquote>\n<p>Cucuco, cuco cuco cucucuco, CUCCO!</p>\n<p>\u2014Cucco</p>\n</blockquote>\n<p>So true\u2026 so true\u2026[tears falling down my face]. Just allow me to add some insight.</p>\n<p>There are two ways of using cucco. The first one is through its CLI. You can get more info on this by executing the next command:</p>\n<pre>$ cucco --help\n</pre>\n<p>The next example code shows how to normalize a short text using cucco inside your code:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cucco</span> <span class=\"kn\">import</span> <span class=\"n\">Cucco</span>\n\n<span class=\"n\">cucco</span> <span class=\"o\">=</span> <span class=\"n\">Cucco</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cucco</span><span class=\"o\">.</span><span class=\"n\">normalize</span><span class=\"p\">(</span><span class=\"s1\">'Who let the cucco out?'</span><span class=\"p\">))</span>\n</pre>\n<p>This would apply all normalizations to the text <tt>Who let the cucco out?</tt>. The output for this normalizations would be the next one:</p>\n<pre>cucco\n</pre>\n<p>It\u2019s also possible to send a list of normalizations to apply, which will be executed in order.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cucco</span> <span class=\"kn\">import</span> <span class=\"n\">Cucco</span>\n\n<span class=\"n\">cucco</span> <span class=\"o\">=</span> <span class=\"n\">Cucco</span><span class=\"p\">()</span>\n\n<span class=\"n\">normalizations</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s1\">'remove_extra_white_spaces'</span><span class=\"p\">,</span>\n    <span class=\"p\">(</span><span class=\"s1\">'replace_punctuation'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'replacement'</span><span class=\"p\">:</span> <span class=\"s1\">' '</span><span class=\"p\">})</span>\n<span class=\"p\">]</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cucco</span><span class=\"o\">.</span><span class=\"n\">normalize</span><span class=\"p\">(</span><span class=\"s1\">'Who    let   the cucco out?'</span><span class=\"p\">,</span> <span class=\"n\">normalizations</span><span class=\"p\">))</span>\n</pre>\n<p>This is the output:</p>\n<pre>Who let the cucco out\n</pre>\n<p>For more information on how to use cucco you can <a href=\"cucco.io\" rel=\"nofollow\">check its website</a>, which will be ready cucco-soon.</p>\n</div>\n<div id=\"supported-languages\">\n<h2>Supported languages</h2>\n<p>You never know when a cucco will learn a new trick. Currently, they can remove stop words for 50 languages. The complete list can be <a href=\"https://github.com/davidmogar/cucco/tree/master/cucco/data\" rel=\"nofollow\">checked here</a>. If you are looking for the source you can find it in this <a href=\"https://github.com/6/stopwords-json\" rel=\"nofollow\">GitHub repository</a> which uses <cite>json</cite> for the stop words files.</p>\n</div>\n<div id=\"can-i-contribute\">\n<h2>Can I contribute?</h2>\n<p>Are you a breeder? No? Don\u2019t worry, you can still help.</p>\n<p>Maybe you have a good new feature to add. Maybe is not even good. It doesn\u2019t matter! It is always good to share ideas, isn\u2019t it? Just go for it! Pull requests are warmly welcomed.</p>\n<p>Not in the mood to implement it yourself? You can still create an issue and comment about it there. Feedback is always great!</p>\n</div>\n\n          </div>"}, "last_serial": 2983090, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "fc45ac7b5a64fb455e3631a383aaf9c0", "sha256": "a80836ac2b2548dc9a410f4bbb091d4d0cffc1b6c052680256250e3fc4e6c551"}, "downloads": -1, "filename": "cucco-1.0.0.tar.gz", "has_sig": false, "md5_digest": "fc45ac7b5a64fb455e3631a383aaf9c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21546, "upload_time": "2017-03-01T20:55:51", "upload_time_iso_8601": "2017-03-01T20:55:51.887003Z", "url": "https://files.pythonhosted.org/packages/46/a5/e781da5a044971335dd476fca1bde29901118fe52dd0aa880eeb76759f47/cucco-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "655742801a2eab09229a23e899878312", "sha256": "bdb9d55e02e2c47fc145f80420de4d3d0a6addf838a4bd0726d90db5a43d6b1e"}, "downloads": -1, "filename": "cucco-1.1.0.tar.gz", "has_sig": false, "md5_digest": "655742801a2eab09229a23e899878312", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46816, "upload_time": "2017-05-15T11:00:08", "upload_time_iso_8601": "2017-05-15T11:00:08.707341Z", "url": "https://files.pythonhosted.org/packages/58/b3/a68b143146ee1a3d9fa5a16bb8ccdd10bd99af0cede2e782ad4e1faa2fa5/cucco-1.1.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "14186a21719ec2becdec268f28daf5aa", "sha256": "4cbb7eab52f6ddfc711cc01cee6ae9e799fd6685112be7cd396691c93a57d231"}, "downloads": -1, "filename": "cucco-2.0.0.tar.gz", "has_sig": false, "md5_digest": "14186a21719ec2becdec268f28daf5aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50949, "upload_time": "2017-06-04T14:30:28", "upload_time_iso_8601": "2017-06-04T14:30:28.423053Z", "url": "https://files.pythonhosted.org/packages/80/41/ec90796c2b7083bbc0bee02c83384f9ca1699526887b0f3aa556563fdee8/cucco-2.0.0.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "d4ed7937b5c903b62b03f1026dc25171", "sha256": "3b6425e92c881b9c70dfba8ca83b9a9479b29a1f8126379761f2c1e9a9bab3a2"}, "downloads": -1, "filename": "cucco-2.1.0.tar.gz", "has_sig": false, "md5_digest": "d4ed7937b5c903b62b03f1026dc25171", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51239, "upload_time": "2017-06-09T22:21:15", "upload_time_iso_8601": "2017-06-09T22:21:15.125159Z", "url": "https://files.pythonhosted.org/packages/cd/b4/82776e68c8e2e21f14c87bf8f3003a174049eeb616160e9e2b08d223fca3/cucco-2.1.0.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "9e1e2bf3cd7d2b30015d701db374c4a1", "sha256": "35ff1df20793bb73ed7d7776bb698fd07066fea1be5503f9190787780d16cdea"}, "downloads": -1, "filename": "cucco-2.2.0.tar.gz", "has_sig": false, "md5_digest": "9e1e2bf3cd7d2b30015d701db374c4a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51005, "upload_time": "2017-06-27T20:37:53", "upload_time_iso_8601": "2017-06-27T20:37:53.757720Z", "url": "https://files.pythonhosted.org/packages/4e/48/296b8bfdbd45871195bf41ee72745663d4f4d92d85e731f4af6020db8f9a/cucco-2.2.0.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "06ff6eace1ec4204c010a295637cf5f9", "sha256": "4ecec20e2f706ff3c91851741145fe6837a95260d4471327ef2e01e5050c5729"}, "downloads": -1, "filename": "cucco-2.2.1.tar.gz", "has_sig": false, "md5_digest": "06ff6eace1ec4204c010a295637cf5f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51016, "upload_time": "2017-06-27T21:00:25", "upload_time_iso_8601": "2017-06-27T21:00:25.491615Z", "url": "https://files.pythonhosted.org/packages/76/a4/885b87757c0dabb87b6fa7f7ea214f33c03d6159aa4bcd7d7024f07839e5/cucco-2.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "06ff6eace1ec4204c010a295637cf5f9", "sha256": "4ecec20e2f706ff3c91851741145fe6837a95260d4471327ef2e01e5050c5729"}, "downloads": -1, "filename": "cucco-2.2.1.tar.gz", "has_sig": false, "md5_digest": "06ff6eace1ec4204c010a295637cf5f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51016, "upload_time": "2017-06-27T21:00:25", "upload_time_iso_8601": "2017-06-27T21:00:25.491615Z", "url": "https://files.pythonhosted.org/packages/76/a4/885b87757c0dabb87b6fa7f7ea214f33c03d6159aa4bcd7d7024f07839e5/cucco-2.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:27 2020"}