{"info": {"author": "Rogerio Prado de Jesus", "author_email": "rogeriopradoj@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Customer Service", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: End Users/Desktop", "Intended Audience :: Financial and Insurance Industry", "Intended Audience :: Healthcare Industry", "Intended Audience :: Information Technology", "Intended Audience :: Manufacturing", "Intended Audience :: Other Audience", "Intended Audience :: Science/Research", "Intended Audience :: System Administrators", "Intended Audience :: Telecommunications Industry", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: OS Independent", "Operating System :: POSIX :: Linux", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Multimedia", "Topic :: Multimedia :: Graphics", "Topic :: Multimedia :: Graphics :: Presentation", "Topic :: Office/Business", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Visualization"], "description": "@RogerioPradoJ paretochart - rogeriopradoj-paretochart - Fork from @tintrinh\n============================================================================\n\n[Pareto chart](http://en.wikipedia.org/wiki/Pareto_chart) for python 3 (similar to [Matlab](http://www.mathworks.com/help/matlab/ref/pareto.html), but much more flexible) - Fork from @tintrinh.\n\nFeatures\n--------\n\n- **Data labels** for the chart x-axis.\n- **Fully customizable** with unique ``arg`` and ``kwarg`` inputs:\n  - *Bar chart*: follows the inputs of the [matplotlib.pyplot.bar](http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.bar) function (use ``bar_args=(...)`` and ``bar_kw={...}``).\n  - *Cumulative line*: follows the inputs of the [matplotlib.pyplot.plot](http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.plot) function (use ``line_args=(...)`` and ``line_kw={...}``).\n  - *Limit line*: follows the inputs of the [matplotlib.axes.Axes.axhline](http://matplotlib.org/api/axes_api.html#matplotlib.axes.Axes.axhline) function (use ``limit_kw={...}``).\n- Put the chart on **arbitrary axes**.\n\nExamples\n--------\n\nFirst, a simple import::\n\n```python\nfrom paretochart.paretochart import pareto\n```\n\nNow, let's create the numeric data (no pre-sorting necessary)::\n\n```python\ndata = [21, 2, 10, 4, 16]\n```\n\nWe can even assign x-axis labels (in the same order as the data)::\n\n```python\nlabels = ['tom', 'betty', 'alyson', 'john', 'bob']\n```\n\nFor this example, we'll create 4 plots that show the customization \ncapabilities::\n\n```python\nimport matplotlib.pyplot as plt\n\n# create a grid of subplots\nfig, axes = plt.subplots(2, 2)\n```\n\nThe first plot will be the simplest usage, with just the data::\n\n```python\npareto(data, axes=axes[0, 0])\nplt.title('Basic chart without labels', fontsize=10)\n```\n\nIn the second plot, we'll add labels, put a cumulative limit at 0.75 (or 75%) \nand turn the cumulative line green::\n\n```python\npareto(data, labels, axes=axes[0, 1], limit=0.75, line_args=('g',))\nplt.title('Data with labels, green cum. line, limit=0.75', fontsize=10)\n```\n\nIn the third plot, we'll remove the cumulative line and limit line, make the\nbars green and resize them to a width of 0.5::\n\n```python\npareto(data, labels, cumplot=False, axes=axes[1, 0], data_kw={'width': 0.5,\n    'color': 'g'})\nplt.title('Data without cum. line, green bar width=0.5', fontsize=10)\n```\n\nIn the fourth plot, let's put the cumulative limit at 95% and make that line\nyellow::\n\n```python\npareto(data, labels, limit=0.95, axes=axes[1, 1], limit_kw={'color': 'y'})\nplt.title('Data trimmed at 95%, yellow limit line', fontsize=10)\n```\n\nAnd last, but not least, let's show the image::\n\n```python\nfig.canvas.set_window_title('Pareto Plot Test Figure')\nplt.show()\n```\n\nThis should result in the following image ([click here](https://raw.githubusercontent.com/rogeriopradoj/rogeriopradoj-paretochart/2.0.0/pareto_plot_test_figure.png) if the image doesn't \nshow up):\n\n![pareto_plot_test_figure](https://raw.githubusercontent.com/rogeriopradoj/rogeriopradoj-paretochart/2.0.0/pareto_plot_test_figure.png)\n\nInstallation\n------------\n\nSince this is really a single python file, you can simply go to the \nGitHub_ page, simply download `paretochart.py` and put it in \na directory that python can find it.\n\nAlternatively, the file can be installed using::\n\n```shell\npip install --upgrade rogeriopradoj-paretochart\n```\n\nIf you are using Python2, you can use original @tintrinh's project::\n\n```shell\npip install --upgrade paretochart\n```\n\nDevelopment and Publishing New Versions\n---------------------------------------\n\n*Using knowledge from <https://medium.com/@joel.barmettler/how-to-upload-your-python-package-to-pypi-65edc5fe9c56>*.\n\n- define next version number (try to follow [semver 2](https://semver.org/spec/v2.0.0.html)\n- make the changes in codebase\n- update `setup.py`:\n  - version\n  - download_url\n- update `README.md`:\n  - pareto_plot_test_figure url\n- commit, tag, and push to git central repo\n- create a source distribution, and validate it:\n  - `python setup.py sdist`\n  - `twine check dist/*`\n- upload the source to PyPi:\n  - `twine upload dist/*`", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/rogeriopradoj/rogeriopradoj-paretochart/archive/2.0.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rogeriopradoj/rogeriopradoj-paretochart", "keywords": "rogeriopradoj,matplotlib,pareto,chart,plot,quality,economics,manufacturing", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "rogeriopradoj-paretochart", "package_url": "https://pypi.org/project/rogeriopradoj-paretochart/", "platform": "", "project_url": "https://pypi.org/project/rogeriopradoj-paretochart/", "project_urls": {"Download": "https://github.com/rogeriopradoj/rogeriopradoj-paretochart/archive/2.0.0.tar.gz", "Homepage": "https://github.com/rogeriopradoj/rogeriopradoj-paretochart"}, "release_url": "https://pypi.org/project/rogeriopradoj-paretochart/2.0.0/", "requires_dist": null, "requires_python": "", "summary": "Pareto chart for python (similar to Matlab's, but much more flexible)  - Fork from @tintrinh", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>@RogerioPradoJ paretochart - rogeriopradoj-paretochart - Fork from @tintrinh</h1>\n<p><a href=\"http://en.wikipedia.org/wiki/Pareto_chart\" rel=\"nofollow\">Pareto chart</a> for python 3 (similar to <a href=\"http://www.mathworks.com/help/matlab/ref/pareto.html\" rel=\"nofollow\">Matlab</a>, but much more flexible) - Fork from @tintrinh.</p>\n<h2>Features</h2>\n<ul>\n<li><strong>Data labels</strong> for the chart x-axis.</li>\n<li><strong>Fully customizable</strong> with unique <code>arg</code> and <code>kwarg</code> inputs:\n<ul>\n<li><em>Bar chart</em>: follows the inputs of the <a href=\"http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.bar\" rel=\"nofollow\">matplotlib.pyplot.bar</a> function (use <code>bar_args=(...)</code> and <code>bar_kw={...}</code>).</li>\n<li><em>Cumulative line</em>: follows the inputs of the <a href=\"http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.plot\" rel=\"nofollow\">matplotlib.pyplot.plot</a> function (use <code>line_args=(...)</code> and <code>line_kw={...}</code>).</li>\n<li><em>Limit line</em>: follows the inputs of the <a href=\"http://matplotlib.org/api/axes_api.html#matplotlib.axes.Axes.axhline\" rel=\"nofollow\">matplotlib.axes.Axes.axhline</a> function (use <code>limit_kw={...}</code>).</li>\n</ul>\n</li>\n<li>Put the chart on <strong>arbitrary axes</strong>.</li>\n</ul>\n<h2>Examples</h2>\n<p>First, a simple import::</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paretochart.paretochart</span> <span class=\"kn\">import</span> <span class=\"n\">pareto</span>\n</pre>\n<p>Now, let's create the numeric data (no pre-sorting necessary)::</p>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">]</span>\n</pre>\n<p>We can even assign x-axis labels (in the same order as the data)::</p>\n<pre><span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'tom'</span><span class=\"p\">,</span> <span class=\"s1\">'betty'</span><span class=\"p\">,</span> <span class=\"s1\">'alyson'</span><span class=\"p\">,</span> <span class=\"s1\">'john'</span><span class=\"p\">,</span> <span class=\"s1\">'bob'</span><span class=\"p\">]</span>\n</pre>\n<p>For this example, we'll create 4 plots that show the customization\ncapabilities::</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"c1\"># create a grid of subplots</span>\n<span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">axes</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n</pre>\n<p>The first plot will be the simplest usage, with just the data::</p>\n<pre><span class=\"n\">pareto</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">axes</span><span class=\"o\">=</span><span class=\"n\">axes</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'Basic chart without labels'</span><span class=\"p\">,</span> <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<p>In the second plot, we'll add labels, put a cumulative limit at 0.75 (or 75%)\nand turn the cumulative line green::</p>\n<pre><span class=\"n\">pareto</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">axes</span><span class=\"o\">=</span><span class=\"n\">axes</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mf\">0.75</span><span class=\"p\">,</span> <span class=\"n\">line_args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'g'</span><span class=\"p\">,))</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'Data with labels, green cum. line, limit=0.75'</span><span class=\"p\">,</span> <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<p>In the third plot, we'll remove the cumulative line and limit line, make the\nbars green and resize them to a width of 0.5::</p>\n<pre><span class=\"n\">pareto</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">cumplot</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">axes</span><span class=\"o\">=</span><span class=\"n\">axes</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">data_kw</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'width'</span><span class=\"p\">:</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span>\n    <span class=\"s1\">'color'</span><span class=\"p\">:</span> <span class=\"s1\">'g'</span><span class=\"p\">})</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'Data without cum. line, green bar width=0.5'</span><span class=\"p\">,</span> <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<p>In the fourth plot, let's put the cumulative limit at 95% and make that line\nyellow::</p>\n<pre><span class=\"n\">pareto</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mf\">0.95</span><span class=\"p\">,</span> <span class=\"n\">axes</span><span class=\"o\">=</span><span class=\"n\">axes</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">limit_kw</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'color'</span><span class=\"p\">:</span> <span class=\"s1\">'y'</span><span class=\"p\">})</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'Data trimmed at 95%, yellow limit line'</span><span class=\"p\">,</span> <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<p>And last, but not least, let's show the image::</p>\n<pre><span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"n\">set_window_title</span><span class=\"p\">(</span><span class=\"s1\">'Pareto Plot Test Figure'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p>This should result in the following image (<a href=\"https://raw.githubusercontent.com/rogeriopradoj/rogeriopradoj-paretochart/2.0.0/pareto_plot_test_figure.png\" rel=\"nofollow\">click here</a> if the image doesn't\nshow up):</p>\n<p><img alt=\"pareto_plot_test_figure\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/28069a6603a0f20502d256519f8ee7b56e1844d4/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f726f676572696f707261646f6a2f726f676572696f707261646f6a2d70617265746f63686172742f322e302e302f70617265746f5f706c6f745f746573745f6669677572652e706e67\"></p>\n<h2>Installation</h2>\n<p>Since this is really a single python file, you can simply go to the\nGitHub_ page, simply download <code>paretochart.py</code> and put it in\na directory that python can find it.</p>\n<p>Alternatively, the file can be installed using::</p>\n<pre>pip install --upgrade rogeriopradoj-paretochart\n</pre>\n<p>If you are using Python2, you can use original @tintrinh's project::</p>\n<pre>pip install --upgrade paretochart\n</pre>\n<h2>Development and Publishing New Versions</h2>\n<p><em>Using knowledge from <a href=\"https://medium.com/@joel.barmettler/how-to-upload-your-python-package-to-pypi-65edc5fe9c56\" rel=\"nofollow\">https://medium.com/@joel.barmettler/how-to-upload-your-python-package-to-pypi-65edc5fe9c56</a></em>.</p>\n<ul>\n<li>define next version number (try to follow <a href=\"https://semver.org/spec/v2.0.0.html\" rel=\"nofollow\">semver 2</a></li>\n<li>make the changes in codebase</li>\n<li>update <code>setup.py</code>:\n<ul>\n<li>version</li>\n<li>download_url</li>\n</ul>\n</li>\n<li>update <code>README.md</code>:\n<ul>\n<li>pareto_plot_test_figure url</li>\n</ul>\n</li>\n<li>commit, tag, and push to git central repo</li>\n<li>create a source distribution, and validate it:\n<ul>\n<li><code>python setup.py sdist</code></li>\n<li><code>twine check dist/*</code></li>\n</ul>\n</li>\n<li>upload the source to PyPi:\n<ul>\n<li><code>twine upload dist/*</code></li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 5407605, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "92abfb837f0dd754cdba89123192231c", "sha256": "e88f4c24a0e4cfa3c69001e22f510c731b5887a58b0b6f668ae4eb11c4a01c0e"}, "downloads": -1, "filename": "rogeriopradoj-paretochart-2.0.0.tar.gz", "has_sig": false, "md5_digest": "92abfb837f0dd754cdba89123192231c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5977, "upload_time": "2019-06-16T13:15:34", "upload_time_iso_8601": "2019-06-16T13:15:34.022288Z", "url": "https://files.pythonhosted.org/packages/d0/58/060b8fd07cdabf3d090df6f6f18f420a27601d183377d2f7012bfaf3465b/rogeriopradoj-paretochart-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "92abfb837f0dd754cdba89123192231c", "sha256": "e88f4c24a0e4cfa3c69001e22f510c731b5887a58b0b6f668ae4eb11c4a01c0e"}, "downloads": -1, "filename": "rogeriopradoj-paretochart-2.0.0.tar.gz", "has_sig": false, "md5_digest": "92abfb837f0dd754cdba89123192231c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5977, "upload_time": "2019-06-16T13:15:34", "upload_time_iso_8601": "2019-06-16T13:15:34.022288Z", "url": "https://files.pythonhosted.org/packages/d0/58/060b8fd07cdabf3d090df6f6f18f420a27601d183377d2f7012bfaf3465b/rogeriopradoj-paretochart-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:30 2020"}