{"info": {"author": "Quantextive", "author_email": "api@quantextive.com", "bugtrack_url": null, "classifiers": [], "description": "## Quantextive AEX API Client\n\n#### Dependencies\n\n - [**Requests: HTTP for Humans**](http://docs.python-requests.org/en/master/)\n \t- install it using **pip** \n \t\n \t  ```python\n \t  pip install request\n \t  ```\n - [**Pandas**](http://pandas.pydata.org/)\n \t- install it using **pip** \n \t\n \t  ```python\n \t  pip install pandas\n \t  ```\n\n#### How to make an API request?\n\nclass `ApiClient` in [`qtx.py`](qtx.py) is provisioned to make API requests. In the constructor of the `ApiClient` class, a dictionary of default headers for all requests can be supplied so that headers need not be supplied with each request.\n\n```python\ndefault_headers = { 'x-api-key' : '<token>' }\nclient = ApiClient(default_headers)\n``` \n\nTo make a GET request, `ApiClient.get()` method is used with following params\n\n- **`api_key`**: API key required for authenticating the requests\n- **`name`**: `string` api name which will be appended to base_url\n- **`params`**: `dict` of url params\n \n**EXAMPLE**\n\n```python\nimport qtx\n\napi = \"market-data-eod\"\nparams = { \n    'securityId': 'NSE:NNFM',\n    'startDate': '2017-02-08',\n    'endDate': '2017-02-10'\n}\napi_key = '<token>'\n\nclient = api_client.ApiClient()\nprint client.get(api_key, api, params).data_frame()\n```\n\nThe `get()` method returns a `Response` object from which below methods can be used to get response data as **json** or **Pandas DataFrame**.\n\n - `client.get(api_key, name, queryparams).json()` will return response data as **json**, and\n - `client.get(api_key, name, queryparams).data_frame()` will return response data as pandas **DataFrame**\n\n##### Running the test script\n\n```python\npython tests/test.py\n```", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/quantextive/qtx/archive/0.2.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/quantextive/qtx", "keywords": "africa,finance,quantextive", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "qtx", "package_url": "https://pypi.org/project/qtx/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/qtx/", "project_urls": {"Download": "https://github.com/quantextive/qtx/archive/0.2.tar.gz", "Homepage": "https://github.com/quantextive/qtx"}, "release_url": "https://pypi.org/project/qtx/0.2/", "requires_dist": null, "requires_python": null, "summary": "API client for Quantextive AEX Data Platform", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            ## Quantextive AEX API Client<br><br>#### Dependencies<br><br> - [**Requests: HTTP for Humans**](http://docs.python-requests.org/en/master/)<br> \t- install it using **pip** <br> \t<br> \t  ```python<br> \t  pip install request<br> \t  ```<br> - [**Pandas**](http://pandas.pydata.org/)<br> \t- install it using **pip** <br> \t<br> \t  ```python<br> \t  pip install pandas<br> \t  ```<br><br>#### How to make an API request?<br><br>class `ApiClient` in [`qtx.py`](qtx.py) is provisioned to make API requests. In the constructor of the `ApiClient` class, a dictionary of default headers for all requests can be supplied so that headers need not be supplied with each request.<br><br>```python<br>default_headers = { 'x-api-key' : '&lt;token&gt;' }<br>client = ApiClient(default_headers)<br>``` <br><br>To make a GET request, `ApiClient.get()` method is used with following params<br><br>- **`api_key`**: API key required for authenticating the requests<br>- **`name`**: `string` api name which will be appended to base_url<br>- **`params`**: `dict` of url params<br> <br>**EXAMPLE**<br><br>```python<br>import qtx<br><br>api = \"market-data-eod\"<br>params = { <br>    'securityId': 'NSE:NNFM',<br>    'startDate': '2017-02-08',<br>    'endDate': '2017-02-10'<br>}<br>api_key = '&lt;token&gt;'<br><br>client = api_client.ApiClient()<br>print client.get(api_key, api, params).data_frame()<br>```<br><br>The `get()` method returns a `Response` object from which below methods can be used to get response data as **json** or **Pandas DataFrame**.<br><br> - `client.get(api_key, name, queryparams).json()` will return response data as **json**, and<br> - `client.get(api_key, name, queryparams).data_frame()` will return response data as pandas **DataFrame**<br><br>##### Running the test script<br><br>```python<br>python tests/test.py<br>```\n          </div>"}, "last_serial": 2961289, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "415467b9fa72f32d194920dd4471eae1", "sha256": "1a963fa0b001f59570c5ad97572a3ea3020fa0ba0a6e3b9c0b69e07b280a7cc2"}, "downloads": -1, "filename": "qtx-0.1.tar.gz", "has_sig": false, "md5_digest": "415467b9fa72f32d194920dd4471eae1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2644, "upload_time": "2017-06-20T03:59:28", "upload_time_iso_8601": "2017-06-20T03:59:28.422828Z", "url": "https://files.pythonhosted.org/packages/3c/a0/aa202986cd2ca12f3854f0e009c1f4468130d1b1704da29a6501239f1d14/qtx-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "a25a7ed12e9ded1fd2eebeea599f2a28", "sha256": "4a52bbcb08b50102342592572b590df9f07f4b35b45812413a106c8744f86468"}, "downloads": -1, "filename": "qtx-0.2.tar.gz", "has_sig": false, "md5_digest": "a25a7ed12e9ded1fd2eebeea599f2a28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2647, "upload_time": "2017-06-20T04:34:10", "upload_time_iso_8601": "2017-06-20T04:34:10.502813Z", "url": "https://files.pythonhosted.org/packages/a7/e2/07254c844ae8732beb3121127dce41f604daa7c517a8cf77479db25faf6c/qtx-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a25a7ed12e9ded1fd2eebeea599f2a28", "sha256": "4a52bbcb08b50102342592572b590df9f07f4b35b45812413a106c8744f86468"}, "downloads": -1, "filename": "qtx-0.2.tar.gz", "has_sig": false, "md5_digest": "a25a7ed12e9ded1fd2eebeea599f2a28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2647, "upload_time": "2017-06-20T04:34:10", "upload_time_iso_8601": "2017-06-20T04:34:10.502813Z", "url": "https://files.pythonhosted.org/packages/a7/e2/07254c844ae8732beb3121127dce41f604daa7c517a8cf77479db25faf6c/qtx-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:04 2020"}