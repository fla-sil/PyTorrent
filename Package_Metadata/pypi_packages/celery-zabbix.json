{"info": {"author": "Zeit Online", "author_email": "zon-backend@zeit.de", "bugtrack_url": null, "classifiers": [], "description": "=============\ncelery_zabbix\n=============\n\nSends task execution metrics to Zabbix: how many tasks were started and have\ncompleted successfully or with failure, and how many tasks are still in the\nqueues (supported only for broker redis). Tested against Zabbix-3.0.\n\nInspired by https://gitlab.com/kalibrr/celery-prometheus\n\n\nUsage\n=====\n\n* Run ``bin/celery zabbix --zabbix-nodename myhost.example.com --zabbix-server zabbix.example.com``.\n  (Alternatively you can pass ``--zabbix-agent-config=/etc/zabbix/zabbix_agentd.conf``, then the values for server+nodename will be read from there.)\n* Import the corresponding `Zabbix Template`_ to set up the matching items.\n\n.. _`Zabbix Template`: https://github.com/ZeitOnline/celery_zabbix/blob/master/zbx_template_celery.xml\n\n\nItems\n=====\n\nThe following items will be sent every 60 seconds (pass ``--dump-interval=x`` to configure):\n\n* celery.task.started\n* celery.task.succeeded (with trigger > ``{$WARN_TASKS_FAILED}``)\n* celery.task.failed\n* celery.task.retried\n\nThese are counted from the time the monitoring process started,\nso you'll need to process them as delta on the Zabbix server.\n\n* celery.task.queuetime (only if ``task_send_sent_event`` is enabled)\n* celery.task.runtime\n\nThese are the median values and use the item type \"Numeric (float)\".\n\n\nQueue lengths\n=============\n\nIf you pass ``--queuelength-interval=x`` then every x seconds the queue lengths will be checked (NOTE: this only works with redis as the broker), and the following items will also be sent:\n\n* celery.queue[myqueuename]\n\nThese are gauge values, i.e. they contain the length as it was retrieved each\ntime, so they can go up and down.\n\n* celery.discover.queues\n\nThis is an auto-discovery item, together with the `Zabbix Template`_ this will create an item and trigger for each queue. On your host, create macros of the form ``{$WARN_QUEUE_LENGTH:myqueuename}`` to determine the trigger threshold.\n\n\nRun tests\n=========\n\nUsing `tox`_ and `py.test`_. Maybe install ``tox`` (e.g. via ``pip install tox``)\nand then simply run ``tox``.\n\n.. _`tox`: http://tox.readthedocs.io/\n.. _`py.test`: http://pytest.org/\n\n\ncelery_zabbix changes\n=====================\n\n1.1.0 (2019-11-28)\n------------------\n\n- Make Python-3 compatible.\n  You'll need a version of `zbxsend` that is py3 compatible as well,\n  e.g. from https://github.com/pistolero/zbxsend/pull/9\n\n\n1.0.4 (2019-06-26)\n------------------\n\n- Allow using agent config file and still overriding values on the commandline\n  (Patch by Peter Radcliffe)\n\n\n1.0.3 (2018-03-23)\n------------------\n\n- Close redis connection we use for queue length checking after use\n\n- Catch exceptions in the dump_stats and check_queue_length threads\n\n\n1.0.2 (2018-03-21)\n------------------\n\n- Be defensive about missing `task.runtime`\n\n\n1.0.1 (2018-03-09)\n------------------\n\n- Fix typo in agent config parsing\n\n\n1.0.0 (2018-03-06)\n------------------\n\n- Initial release", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zeitonline/celery_zabbix", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "celery-zabbix", "package_url": "https://pypi.org/project/celery-zabbix/", "platform": "", "project_url": "https://pypi.org/project/celery-zabbix/", "project_urls": {"Homepage": "https://github.com/zeitonline/celery_zabbix"}, "release_url": "https://pypi.org/project/celery-zabbix/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "Sends task execution metrics to Zabbix", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Sends task execution metrics to Zabbix: how many tasks were started and have\ncompleted successfully or with failure, and how many tasks are still in the\nqueues (supported only for broker redis). Tested against Zabbix-3.0.</p>\n<p>Inspired by <a href=\"https://gitlab.com/kalibrr/celery-prometheus\" rel=\"nofollow\">https://gitlab.com/kalibrr/celery-prometheus</a></p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<ul>\n<li>Run <tt>bin/celery zabbix <span class=\"pre\">--zabbix-nodename</span> myhost.example.com <span class=\"pre\">--zabbix-server</span> zabbix.example.com</tt>.\n(Alternatively you can pass <tt><span class=\"pre\">--zabbix-agent-config=/etc/zabbix/zabbix_agentd.conf</span></tt>, then the values for server+nodename will be read from there.)</li>\n<li>Import the corresponding <a href=\"https://github.com/ZeitOnline/celery_zabbix/blob/master/zbx_template_celery.xml\" rel=\"nofollow\">Zabbix Template</a> to set up the matching items.</li>\n</ul>\n</div>\n<div id=\"items\">\n<h2>Items</h2>\n<p>The following items will be sent every 60 seconds (pass <tt><span class=\"pre\">--dump-interval=x</span></tt> to configure):</p>\n<ul>\n<li>celery.task.started</li>\n<li>celery.task.succeeded (with trigger &gt; <tt>{$WARN_TASKS_FAILED}</tt>)</li>\n<li>celery.task.failed</li>\n<li>celery.task.retried</li>\n</ul>\n<p>These are counted from the time the monitoring process started,\nso you\u2019ll need to process them as delta on the Zabbix server.</p>\n<ul>\n<li>celery.task.queuetime (only if <tt>task_send_sent_event</tt> is enabled)</li>\n<li>celery.task.runtime</li>\n</ul>\n<p>These are the median values and use the item type \u201cNumeric (float)\u201d.</p>\n</div>\n<div id=\"queue-lengths\">\n<h2>Queue lengths</h2>\n<p>If you pass <tt><span class=\"pre\">--queuelength-interval=x</span></tt> then every x seconds the queue lengths will be checked (NOTE: this only works with redis as the broker), and the following items will also be sent:</p>\n<ul>\n<li>celery.queue[myqueuename]</li>\n</ul>\n<p>These are gauge values, i.e. they contain the length as it was retrieved each\ntime, so they can go up and down.</p>\n<ul>\n<li>celery.discover.queues</li>\n</ul>\n<p>This is an auto-discovery item, together with the <a href=\"https://github.com/ZeitOnline/celery_zabbix/blob/master/zbx_template_celery.xml\" rel=\"nofollow\">Zabbix Template</a> this will create an item and trigger for each queue. On your host, create macros of the form <tt>{$WARN_QUEUE_LENGTH:myqueuename}</tt> to determine the trigger threshold.</p>\n</div>\n<div id=\"run-tests\">\n<h2>Run tests</h2>\n<p>Using <a href=\"http://tox.readthedocs.io/\" rel=\"nofollow\">tox</a> and <a href=\"http://pytest.org/\" rel=\"nofollow\">py.test</a>. Maybe install <tt>tox</tt> (e.g. via <tt>pip install tox</tt>)\nand then simply run <tt>tox</tt>.</p>\n</div>\n<div id=\"celery-zabbix-changes\">\n<h2>celery_zabbix changes</h2>\n<div id=\"id1\">\n<h3>1.1.0 (2019-11-28)</h3>\n<ul>\n<li>Make Python-3 compatible.\nYou\u2019ll need a version of <cite>zbxsend</cite> that is py3 compatible as well,\ne.g. from <a href=\"https://github.com/pistolero/zbxsend/pull/9\" rel=\"nofollow\">https://github.com/pistolero/zbxsend/pull/9</a></li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.0.4 (2019-06-26)</h3>\n<ul>\n<li>Allow using agent config file and still overriding values on the commandline\n(Patch by Peter Radcliffe)</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.0.3 (2018-03-23)</h3>\n<ul>\n<li>Close redis connection we use for queue length checking after use</li>\n<li>Catch exceptions in the dump_stats and check_queue_length threads</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.0.2 (2018-03-21)</h3>\n<ul>\n<li>Be defensive about missing <cite>task.runtime</cite></li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.0.1 (2018-03-09)</h3>\n<ul>\n<li>Fix typo in agent config parsing</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>1.0.0 (2018-03-06)</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6214677, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "671c853cfa9e51214792810d9a0dc52b", "sha256": "38cff44e83cbf74648910b56d22841124332a76b65de4075a6101cee92152ee4"}, "downloads": -1, "filename": "celery_zabbix-1.0.0.tar.gz", "has_sig": false, "md5_digest": "671c853cfa9e51214792810d9a0dc52b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8082, "upload_time": "2018-03-06T14:13:29", "upload_time_iso_8601": "2018-03-06T14:13:29.528119Z", "url": "https://files.pythonhosted.org/packages/fe/56/ada771428376ed588265a49b1be8b5e50abee5d3a9394241fd7f8214bef4/celery_zabbix-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "af13837e102d7e74395d6b2fcd277347", "sha256": "916d40bae6824864b2907492d546c8de6f909bdb6f62c2b0d7996ef0860a9527"}, "downloads": -1, "filename": "celery_zabbix-1.0.1.tar.gz", "has_sig": false, "md5_digest": "af13837e102d7e74395d6b2fcd277347", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8110, "upload_time": "2018-03-09T09:30:05", "upload_time_iso_8601": "2018-03-09T09:30:05.887609Z", "url": "https://files.pythonhosted.org/packages/b1/fc/e6a8f25b656fbc5b80d76a304670f2794ce5863976e12b93ca2ba04ff382/celery_zabbix-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "4a6b4f26f76018cd5c37d468d6b3d7eb", "sha256": "317ed859dc2f40b9f42716f58309ccebf932e07b58a123e8da6302c45a571e96"}, "downloads": -1, "filename": "celery_zabbix-1.0.2.tar.gz", "has_sig": false, "md5_digest": "4a6b4f26f76018cd5c37d468d6b3d7eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8221, "upload_time": "2018-03-21T14:16:52", "upload_time_iso_8601": "2018-03-21T14:16:52.739340Z", "url": "https://files.pythonhosted.org/packages/1c/55/e399060488cfae976b42db57623e5c545b9d669bc1691da60a7c55ddf939/celery_zabbix-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "70224f7fd3495cd2bd8e94935e67034d", "sha256": "b93317947e770279dca96dc5a9d7c69f35ca1ac556b45af7998907faafe3f4e5"}, "downloads": -1, "filename": "celery_zabbix-1.0.3.tar.gz", "has_sig": false, "md5_digest": "70224f7fd3495cd2bd8e94935e67034d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8341, "upload_time": "2018-03-23T12:02:41", "upload_time_iso_8601": "2018-03-23T12:02:41.345786Z", "url": "https://files.pythonhosted.org/packages/48/fc/e6943563c374d3b195ab72997b18745143259c80f3b5861461b39fd48173/celery_zabbix-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "4a1ae95b2e55a5f2a5283adbbbcb52ef", "sha256": "b035c58013ffec0ea4ea3e9c14701eba2d1b75e588ab7cfd6b3a7a6c4477b62d"}, "downloads": -1, "filename": "celery_zabbix-1.0.4.tar.gz", "has_sig": false, "md5_digest": "4a1ae95b2e55a5f2a5283adbbbcb52ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8536, "upload_time": "2019-06-26T12:57:19", "upload_time_iso_8601": "2019-06-26T12:57:19.268303Z", "url": "https://files.pythonhosted.org/packages/4d/f2/6e1b3a0b0b285f9fb9fcd7f16fec4232c4d41a937fa23f197ba530c004f9/celery_zabbix-1.0.4.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "38bdfe0ba31ec69c3592d35f6ca75f7f", "sha256": "19cf6c7de8ddd59834ced689a6cf84bbd322daabb3bab12a2a24fe94a9b57e98"}, "downloads": -1, "filename": "celery_zabbix-1.1.0.tar.gz", "has_sig": false, "md5_digest": "38bdfe0ba31ec69c3592d35f6ca75f7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8733, "upload_time": "2019-11-28T15:24:11", "upload_time_iso_8601": "2019-11-28T15:24:11.493967Z", "url": "https://files.pythonhosted.org/packages/e1/fe/e2652ef4291eaee635f94f4f9dd78a45e5de4e47410a131879b01c30d423/celery_zabbix-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "38bdfe0ba31ec69c3592d35f6ca75f7f", "sha256": "19cf6c7de8ddd59834ced689a6cf84bbd322daabb3bab12a2a24fe94a9b57e98"}, "downloads": -1, "filename": "celery_zabbix-1.1.0.tar.gz", "has_sig": false, "md5_digest": "38bdfe0ba31ec69c3592d35f6ca75f7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8733, "upload_time": "2019-11-28T15:24:11", "upload_time_iso_8601": "2019-11-28T15:24:11.493967Z", "url": "https://files.pythonhosted.org/packages/e1/fe/e2652ef4291eaee635f94f4f9dd78a45e5de4e47410a131879b01c30d423/celery_zabbix-1.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:51 2020"}