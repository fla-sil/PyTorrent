{"info": {"author": "Sequoia Ploeg", "author_email": "sequoia.ploeg@ieee.org", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Simphony\nA Simulator for Photonic circuits\n\n![Text](./docs/source/_static/images/simphony_logo.jpg)\n\nAuthors: [Sequoia Ploeg](https://github.com/sequoiap), \n[Hyrum Gunther](https://github.com/rumbonium/)\n\nDeveloped by [CamachoLab](https://camacholab.byu.edu/) at \n[Brigham Young University](https://www.byu.edu/).\n\n# About this branch\n\nPrevious development branches required the component models (from which instances\nare created) to be instantiated first. This attempt tries to keep them as simple\nclasses, removing the requirement to instantiate. It also tries to keep the\ns-parameters with the classes, without so many file i/o and parsing algorithms.\n\n# Description\n\nThis package is still under development. It initially began as an extension to\n[SiEPIC-Tools](https://github.com/lukasc-ubc/SiEPIC-Tools), but was ported here\nonce it became large enough to be considered its own stand-alone project. There\nis a repository forked from lukasc-ubc/SiEPIC-Tools, \n[SiEPIC-Tools](https://github.com/sequoiap/SiEPIC-Tools),\nthat integrates Simphony with SiEPIC-Tools and KLayout in order to perform \nphotonic circuit simulations using a layout-driven design methodology.\n\nSimphony can be installed via pip using Python 3:\n\n```\npip install simphony\n```\n\nPlease note that Python 2 is not supported. With the looming deprecation of\nPython 2 (January 1, 2020), no future compatability is planned.\n\n## Documentation\n\nDocumentation is built on Sphinx. They can be built using the default files by \nnavigating to the docs directory and running:\n\n```\nmake html\n```\n\nThe docs are written in reST. There is a nice syntax guide with guidelines that\nwe follow in the documentation \n[here](https://thomas-cokelaer.info/tutorials/sphinx/rest_syntax.html). The \nmajority of the documentation is generated from python docstrings written using\nthe NumPy documentation format.\n\nChangelogs can be found in docs/changelog/. There is a changelog file for \neach released version of the software.\n\n## Tests\n\nSimphony uses the [pytest](https://docs.pytest.org/en/latest/) testing \nframework. To run all tests, simply execute\n\n```\npytest\n```\n\nfrom the toplevel directory.\n\n## Developers\n\nThis package is available on PyPI and updates are regularly pushed as \"minor\" \nor \"micro\" (patch) versions. Before submitting any pull requests, however, you should \nensure that a pip installation of your updated package installs and functions \nproperly. To test this, try installing your package locally by removing all \ninstalled versions of Simphony (by running ```pip uninstall simphony``` \nrepeatedly until no installations remain) and running the following commands \n(from Simphony's toplevel directory):\n\n```\npython3 setup.py sdist bdist_wheel\npip install dist/simphony-[VERSION].tar.gz\n```\n## Contributing\n\nAll contributions and new features or bug fixes should be worked on in forks\nor branches of the repository. Issues should be opened, and pull requests\nshould reference and [close those issues](https://help.github.com/en/articles/closing-issues-using-keywords).\nThis is good versioning and documentation practice.\n\n## Maintainers\n\nRemember that all changes are to be integrated through pull requests. Development\nwork should be done in branches or forks of the repository. Once implemented \n(and tested on their own), these pull requests should be merged into the \n\"master\" branch for full testing with the whole program. Each time the package\nis released on PyPI, the package should have a pull request opened to its \ncorresponding release branch (release-MAJOR.MINOR.x). The hierarchy is then\nas follows:\n\n- release-*.*.x (stable branch)\n- master (integration and final testing)\n- feature-name (feature development and bug fixes)\n\nEven if you are the lone developer, we follow the methodology [here](https://softwareengineering.stackexchange.com/a/294048).\n\nBe sure to update the version number manually before pushing each new version \nto PyPI. Also be sure to amend the changelog. Versions can be pushed to PyPI \nusing the commands:\n\n```\npython3 setup.py sdist bdist_wheel\npython3 -m twine upload dist/*\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sequoiap/simphony", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "simphony", "package_url": "https://pypi.org/project/simphony/", "platform": "", "project_url": "https://pypi.org/project/simphony/", "project_urls": {"Homepage": "https://github.com/sequoiap/simphony"}, "release_url": "https://pypi.org/project/simphony/0.2.0/", "requires_dist": ["scipy (>=1.2.1)", "numpy"], "requires_python": "", "summary": "Simphony: A Simulator for Photonic circuits", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Simphony</h1>\n<p>A Simulator for Photonic circuits</p>\n<p><img alt=\"Text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/59b1beb5a95a0dd6f17ddedb6e81b53c11a44cf6/2e2f646f63732f736f757263652f5f7374617469632f696d616765732f73696d70686f6e795f6c6f676f2e6a7067\"></p>\n<p>Authors: <a href=\"https://github.com/sequoiap\" rel=\"nofollow\">Sequoia Ploeg</a>,\n<a href=\"https://github.com/rumbonium/\" rel=\"nofollow\">Hyrum Gunther</a></p>\n<p>Developed by <a href=\"https://camacholab.byu.edu/\" rel=\"nofollow\">CamachoLab</a> at\n<a href=\"https://www.byu.edu/\" rel=\"nofollow\">Brigham Young University</a>.</p>\n<h1>About this branch</h1>\n<p>Previous development branches required the component models (from which instances\nare created) to be instantiated first. This attempt tries to keep them as simple\nclasses, removing the requirement to instantiate. It also tries to keep the\ns-parameters with the classes, without so many file i/o and parsing algorithms.</p>\n<h1>Description</h1>\n<p>This package is still under development. It initially began as an extension to\n<a href=\"https://github.com/lukasc-ubc/SiEPIC-Tools\" rel=\"nofollow\">SiEPIC-Tools</a>, but was ported here\nonce it became large enough to be considered its own stand-alone project. There\nis a repository forked from lukasc-ubc/SiEPIC-Tools,\n<a href=\"https://github.com/sequoiap/SiEPIC-Tools\" rel=\"nofollow\">SiEPIC-Tools</a>,\nthat integrates Simphony with SiEPIC-Tools and KLayout in order to perform\nphotonic circuit simulations using a layout-driven design methodology.</p>\n<p>Simphony can be installed via pip using Python 3:</p>\n<pre><code>pip install simphony\n</code></pre>\n<p>Please note that Python 2 is not supported. With the looming deprecation of\nPython 2 (January 1, 2020), no future compatability is planned.</p>\n<h2>Documentation</h2>\n<p>Documentation is built on Sphinx. They can be built using the default files by\nnavigating to the docs directory and running:</p>\n<pre><code>make html\n</code></pre>\n<p>The docs are written in reST. There is a nice syntax guide with guidelines that\nwe follow in the documentation\n<a href=\"https://thomas-cokelaer.info/tutorials/sphinx/rest_syntax.html\" rel=\"nofollow\">here</a>. The\nmajority of the documentation is generated from python docstrings written using\nthe NumPy documentation format.</p>\n<p>Changelogs can be found in docs/changelog/. There is a changelog file for\neach released version of the software.</p>\n<h2>Tests</h2>\n<p>Simphony uses the <a href=\"https://docs.pytest.org/en/latest/\" rel=\"nofollow\">pytest</a> testing\nframework. To run all tests, simply execute</p>\n<pre><code>pytest\n</code></pre>\n<p>from the toplevel directory.</p>\n<h2>Developers</h2>\n<p>This package is available on PyPI and updates are regularly pushed as \"minor\"\nor \"micro\" (patch) versions. Before submitting any pull requests, however, you should\nensure that a pip installation of your updated package installs and functions\nproperly. To test this, try installing your package locally by removing all\ninstalled versions of Simphony (by running <code>pip uninstall simphony</code>\nrepeatedly until no installations remain) and running the following commands\n(from Simphony's toplevel directory):</p>\n<pre><code>python3 setup.py sdist bdist_wheel\npip install dist/simphony-[VERSION].tar.gz\n</code></pre>\n<h2>Contributing</h2>\n<p>All contributions and new features or bug fixes should be worked on in forks\nor branches of the repository. Issues should be opened, and pull requests\nshould reference and <a href=\"https://help.github.com/en/articles/closing-issues-using-keywords\" rel=\"nofollow\">close those issues</a>.\nThis is good versioning and documentation practice.</p>\n<h2>Maintainers</h2>\n<p>Remember that all changes are to be integrated through pull requests. Development\nwork should be done in branches or forks of the repository. Once implemented\n(and tested on their own), these pull requests should be merged into the\n\"master\" branch for full testing with the whole program. Each time the package\nis released on PyPI, the package should have a pull request opened to its\ncorresponding release branch (release-MAJOR.MINOR.x). The hierarchy is then\nas follows:</p>\n<ul>\n<li>release-<em>.</em>.x (stable branch)</li>\n<li>master (integration and final testing)</li>\n<li>feature-name (feature development and bug fixes)</li>\n</ul>\n<p>Even if you are the lone developer, we follow the methodology <a href=\"https://softwareengineering.stackexchange.com/a/294048\" rel=\"nofollow\">here</a>.</p>\n<p>Be sure to update the version number manually before pushing each new version\nto PyPI. Also be sure to amend the changelog. Versions can be pushed to PyPI\nusing the commands:</p>\n<pre><code>python3 setup.py sdist bdist_wheel\npython3 -m twine upload dist/*\n</code></pre>\n\n          </div>"}, "last_serial": 5646112, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "af262987e72057bc0926d7ff59a96972", "sha256": "d05a1b853a24219c2739cf4cfa63bbee283e3264e3abde2adee6b37470c9fabc"}, "downloads": -1, "filename": "simphony-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "af262987e72057bc0926d7ff59a96972", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 229051, "upload_time": "2019-05-31T00:03:40", "upload_time_iso_8601": "2019-05-31T00:03:40.883063Z", "url": "https://files.pythonhosted.org/packages/f9/b1/651276105d3ea242287b49b7e2cbf507cdde4282eeee82e630c754f4c6e2/simphony-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd5977bd244dd13da03b596324a63fdc", "sha256": "83f06837564061fe02bd73c9af585801d76f8cff1e9ab46560ce6831836917ff"}, "downloads": -1, "filename": "simphony-0.1.2.tar.gz", "has_sig": false, "md5_digest": "fd5977bd244dd13da03b596324a63fdc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 222383, "upload_time": "2019-05-31T00:03:42", "upload_time_iso_8601": "2019-05-31T00:03:42.671120Z", "url": "https://files.pythonhosted.org/packages/2c/9e/24f081bca4ff0301eff7502112608d96ce6587cfe083b6f0993ec1d05e63/simphony-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "596794b3c55735a550fff852e6615c35", "sha256": "237f617f7cb90bec811a294b025970178a6eef3cbc6435cd7ea26c78da3a85a1"}, "downloads": -1, "filename": "simphony-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "596794b3c55735a550fff852e6615c35", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 223834, "upload_time": "2019-05-31T21:34:33", "upload_time_iso_8601": "2019-05-31T21:34:33.540261Z", "url": "https://files.pythonhosted.org/packages/69/50/863f9759a4e241b37d895745c7dd6a31a146d49fb0071313562b3392df62/simphony-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cbd112e4748badebf069b0994690cecc", "sha256": "4fcf269241b65c5956a011367d35493ede1cdb5a6ecac86f73bb2febaaec47e3"}, "downloads": -1, "filename": "simphony-0.1.3.tar.gz", "has_sig": false, "md5_digest": "cbd112e4748badebf069b0994690cecc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 218697, "upload_time": "2019-05-31T21:34:35", "upload_time_iso_8601": "2019-05-31T21:34:35.357190Z", "url": "https://files.pythonhosted.org/packages/35/08/537e2cf80d903b6680fdb6bac5e4adad8cc131ec8718b7bf4b64a5fa9560/simphony-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "2f37cba2589291f2e3b10fc378964e74", "sha256": "b86e9d3ce1c8c9a385d0576f68bfc785dd7d71d1279eea468842b356c7b95eac"}, "downloads": -1, "filename": "simphony-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "2f37cba2589291f2e3b10fc378964e74", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 223832, "upload_time": "2019-05-31T21:36:40", "upload_time_iso_8601": "2019-05-31T21:36:40.950025Z", "url": "https://files.pythonhosted.org/packages/26/d9/1052c136990d6aa75634641c85be8676c9cfb6925ea72e134bb9e5176659/simphony-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "593c32e2e354f75d9c5924cdd5a2e111", "sha256": "1bd5964be130d3cb145800c482728111b1fd229562f03d3936ee71b6750be26d"}, "downloads": -1, "filename": "simphony-0.1.4.tar.gz", "has_sig": false, "md5_digest": "593c32e2e354f75d9c5924cdd5a2e111", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 218685, "upload_time": "2019-05-31T21:36:42", "upload_time_iso_8601": "2019-05-31T21:36:42.853454Z", "url": "https://files.pythonhosted.org/packages/65/5d/85756a0febcd78d4f25a9f176bc142d6f0d1fcd36690e39fc8b9523dd084/simphony-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "b84ec663898f9c31a4dc3343792b1d9f", "sha256": "4d2eb98d9e13496622eb57e044c705169e0ed686d959b1e061207fa5f98e0fb2"}, "downloads": -1, "filename": "simphony-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "b84ec663898f9c31a4dc3343792b1d9f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 97458, "upload_time": "2019-06-07T21:06:37", "upload_time_iso_8601": "2019-06-07T21:06:37.816677Z", "url": "https://files.pythonhosted.org/packages/6c/c3/00eef33f856bc9bbd19fbdcc411b54e0ef97074af046110d803a0c76aaf2/simphony-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31c5c84648b9dede82ef07e18788f8df", "sha256": "0f558894636a5fa5bd8cc17e047b81f04ad660d907db97efe3614712ea48eb2e"}, "downloads": -1, "filename": "simphony-0.1.5.tar.gz", "has_sig": false, "md5_digest": "31c5c84648b9dede82ef07e18788f8df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93131, "upload_time": "2019-06-07T21:06:39", "upload_time_iso_8601": "2019-06-07T21:06:39.245603Z", "url": "https://files.pythonhosted.org/packages/90/44/1da8f6231023e93edffe6b50880af376baca0778d6bd52a6fbf53692a287/simphony-0.1.5.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "ff22947313e1860795c60d12b977b853", "sha256": "737f05d2d6c45abffccb3ad255a562672e9473b3106084c4e95c3295db506c79"}, "downloads": -1, "filename": "simphony-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ff22947313e1860795c60d12b977b853", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 150304, "upload_time": "2019-08-07T17:23:04", "upload_time_iso_8601": "2019-08-07T17:23:04.330814Z", "url": "https://files.pythonhosted.org/packages/5a/3f/1a703e7071c3bdb26e23686593cc6e44dbc74b007fc6983a3470c5057480/simphony-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49cb29eac8c37d6cf807999aecefc08c", "sha256": "d41d6b380fa315f531c6073ec182201d71b89f69075b01c1639c637d7786cea5"}, "downloads": -1, "filename": "simphony-0.2.0.tar.gz", "has_sig": false, "md5_digest": "49cb29eac8c37d6cf807999aecefc08c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 144596, "upload_time": "2019-08-07T17:23:06", "upload_time_iso_8601": "2019-08-07T17:23:06.357160Z", "url": "https://files.pythonhosted.org/packages/ee/cc/95de95326978cea968cffdc21bb8e2c42994191a9e36417fbaaa1635c541/simphony-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ff22947313e1860795c60d12b977b853", "sha256": "737f05d2d6c45abffccb3ad255a562672e9473b3106084c4e95c3295db506c79"}, "downloads": -1, "filename": "simphony-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ff22947313e1860795c60d12b977b853", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 150304, "upload_time": "2019-08-07T17:23:04", "upload_time_iso_8601": "2019-08-07T17:23:04.330814Z", "url": "https://files.pythonhosted.org/packages/5a/3f/1a703e7071c3bdb26e23686593cc6e44dbc74b007fc6983a3470c5057480/simphony-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49cb29eac8c37d6cf807999aecefc08c", "sha256": "d41d6b380fa315f531c6073ec182201d71b89f69075b01c1639c637d7786cea5"}, "downloads": -1, "filename": "simphony-0.2.0.tar.gz", "has_sig": false, "md5_digest": "49cb29eac8c37d6cf807999aecefc08c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 144596, "upload_time": "2019-08-07T17:23:06", "upload_time_iso_8601": "2019-08-07T17:23:06.357160Z", "url": "https://files.pythonhosted.org/packages/ee/cc/95de95326978cea968cffdc21bb8e2c42994191a9e36417fbaaa1635c541/simphony-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:06 2020"}