{"info": {"author": "Chris Medway", "author_email": "josephhalstead89@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# CoverageCalculatorPy\n\nGiven i) a tabix indexed per-base 'depth of coverage' file (similar to generated in GATK3) and , ii) a bed file CoverageCalculatorPy will generate four text reports:\n\n - *.coverage* file containing the mean depth of coverage across each interval in the bedfile, and the percentage of bases which meet a given depth (default is 100x) across each interval.\n - *.totalcoverage* file containing the the same metrics above summerised over all intervals in the given bedfile. Summeries of adittional subsets of the input bedfile can be included using --groups (see below)\n - *.gaps* file contains intervals which do not meet the given depth of coverage threshold\n - *.missing* file contains intervals which do not have a corresponding coordinate in the 'depth of coverage' file, and therefore cannot be evaluated.\n\n### Input Arguments\n\n-D/--depthfile  \npath to tabix indexed depth-of-coverage file\n\n-B/--bedfile  \npath to bedfile. Chromosomes must not be prefixed with 'chr'\n\n-d/--depth  \n  depth threshold for precentage horizontal coverage calculation (default: 100)\n\n-o/--outname  \noutput name to prefix on text reports (default: output)\n\n-O/--outdir  \ndirectory to save output files to (default: current)\n\n-g/--groupfile  \npath to groupfile (see below)\n\n\n### Tabix indexing a GATK3 DepthOfCoverage file\n\nThe 'depth of coverage' file must be tabix indexed. The first three columns of the depthfile must be; chromosome, coordinate and depth. A file generated in GATK3 can be indexed as follows:\n\n```\nsed 's/:/\\t/g' <GATK depthOfCoverage file> | grep -v 'Locus' | sort -k1,1 -k2,2n | bgzip > <filename.gz>\n\n(on macOS)\nsed \"s/:/$(printf '\\t')/g\" <GATK depthOfCoverage file>  |  grep -v 'Locus' | sort -k1,1 -k2,2n | bgzip > <filename.gz>\n\ntabix -b 2 -e 2 -s 1 <filename.gz> \n```\n### Adding a groupfile\n\nThe groupfile is a way of generating combined metrics across a number of intervals (i.e. combined across all exons in a gene). These metrics will appear in the *.totalcoverage* file. The groupfile must have a header (this will be included in the output), be a single column containing the same number of rows as the bedfile it will be analysed with.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AWGL/CoverageCalculatorPy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "CoverageCalculatorPy", "package_url": "https://pypi.org/project/CoverageCalculatorPy/", "platform": "", "project_url": "https://pypi.org/project/CoverageCalculatorPy/", "project_urls": {"Homepage": "https://github.com/AWGL/CoverageCalculatorPy"}, "release_url": "https://pypi.org/project/CoverageCalculatorPy/1.0.1/", "requires_dist": ["pytabix (>=0.1)"], "requires_python": "", "summary": "Calculated coverage metrics from a GATK3 Depth Of Coverage file and a bedfile", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>CoverageCalculatorPy</h1>\n<p>Given i) a tabix indexed per-base 'depth of coverage' file (similar to generated in GATK3) and , ii) a bed file CoverageCalculatorPy will generate four text reports:</p>\n<ul>\n<li><em>.coverage</em> file containing the mean depth of coverage across each interval in the bedfile, and the percentage of bases which meet a given depth (default is 100x) across each interval.</li>\n<li><em>.totalcoverage</em> file containing the the same metrics above summerised over all intervals in the given bedfile. Summeries of adittional subsets of the input bedfile can be included using --groups (see below)</li>\n<li><em>.gaps</em> file contains intervals which do not meet the given depth of coverage threshold</li>\n<li><em>.missing</em> file contains intervals which do not have a corresponding coordinate in the 'depth of coverage' file, and therefore cannot be evaluated.</li>\n</ul>\n<h3>Input Arguments</h3>\n<p>-D/--depthfile<br>\npath to tabix indexed depth-of-coverage file</p>\n<p>-B/--bedfile<br>\npath to bedfile. Chromosomes must not be prefixed with 'chr'</p>\n<p>-d/--depth<br>\ndepth threshold for precentage horizontal coverage calculation (default: 100)</p>\n<p>-o/--outname<br>\noutput name to prefix on text reports (default: output)</p>\n<p>-O/--outdir<br>\ndirectory to save output files to (default: current)</p>\n<p>-g/--groupfile<br>\npath to groupfile (see below)</p>\n<h3>Tabix indexing a GATK3 DepthOfCoverage file</h3>\n<p>The 'depth of coverage' file must be tabix indexed. The first three columns of the depthfile must be; chromosome, coordinate and depth. A file generated in GATK3 can be indexed as follows:</p>\n<pre><code>sed 's/:/\\t/g' &lt;GATK depthOfCoverage file&gt; | grep -v 'Locus' | sort -k1,1 -k2,2n | bgzip &gt; &lt;filename.gz&gt;\n\n(on macOS)\nsed \"s/:/$(printf '\\t')/g\" &lt;GATK depthOfCoverage file&gt;  |  grep -v 'Locus' | sort -k1,1 -k2,2n | bgzip &gt; &lt;filename.gz&gt;\n\ntabix -b 2 -e 2 -s 1 &lt;filename.gz&gt; \n</code></pre>\n<h3>Adding a groupfile</h3>\n<p>The groupfile is a way of generating combined metrics across a number of intervals (i.e. combined across all exons in a gene). These metrics will appear in the <em>.totalcoverage</em> file. The groupfile must have a header (this will be included in the output), be a single column containing the same number of rows as the bedfile it will be analysed with.</p>\n\n          </div>"}, "last_serial": 6175911, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "ea76eeb817df74ad74cf0828cd49ad6f", "sha256": "952817cee36330a72194bf5608de7e1849f103d93b43893185561258f645f814"}, "downloads": -1, "filename": "CoverageCalculatorPy-1.0.0-py3.7.egg", "has_sig": false, "md5_digest": "ea76eeb817df74ad74cf0828cd49ad6f", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 5617, "upload_time": "2019-11-21T14:21:15", "upload_time_iso_8601": "2019-11-21T14:21:15.027459Z", "url": "https://files.pythonhosted.org/packages/d8/79/225c81bf75f0b01d55730aec2292344893d076e7b95df1e1873aa5e9c037/CoverageCalculatorPy-1.0.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec27b5ab9045c9590b58993e228c0fbd", "sha256": "0124e65ed823c0727b4832f29cd91bbbd32d30b9b382f480f08143d9ab0d3464"}, "downloads": -1, "filename": "CoverageCalculatorPy-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ec27b5ab9045c9590b58993e228c0fbd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5834, "upload_time": "2019-11-21T14:21:12", "upload_time_iso_8601": "2019-11-21T14:21:12.445227Z", "url": "https://files.pythonhosted.org/packages/e5/66/2040547e289113aced04e459f89e908a7d944299067f6391952724e63fd5/CoverageCalculatorPy-1.0.0-py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "6f4d3e7cc0d29ad549432694b911c95d", "sha256": "498913f2ab7853b654a9f2c9de14ea3d6902bcd7e119dae7676cad5bb3022244"}, "downloads": -1, "filename": "CoverageCalculatorPy-1.0.1-py3.7.egg", "has_sig": false, "md5_digest": "6f4d3e7cc0d29ad549432694b911c95d", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 5644, "upload_time": "2019-11-21T16:00:33", "upload_time_iso_8601": "2019-11-21T16:00:33.348065Z", "url": "https://files.pythonhosted.org/packages/64/29/3afbde540f1ec7fe55a45f2e661d5cb8629b90d4392b809d1492736b9985/CoverageCalculatorPy-1.0.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "9bc825a6610259a951b5d64c02c252f8", "sha256": "eedcaa17446cfa418be4df55714ac32b655d52b912917a09f0c8fdc0073e0784"}, "downloads": -1, "filename": "CoverageCalculatorPy-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9bc825a6610259a951b5d64c02c252f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5862, "upload_time": "2019-11-21T16:00:31", "upload_time_iso_8601": "2019-11-21T16:00:31.844030Z", "url": "https://files.pythonhosted.org/packages/cf/e6/89d7628d0b6eee8843e3a681f1b880b0690d45a8c379caa14318b2302982/CoverageCalculatorPy-1.0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6f4d3e7cc0d29ad549432694b911c95d", "sha256": "498913f2ab7853b654a9f2c9de14ea3d6902bcd7e119dae7676cad5bb3022244"}, "downloads": -1, "filename": "CoverageCalculatorPy-1.0.1-py3.7.egg", "has_sig": false, "md5_digest": "6f4d3e7cc0d29ad549432694b911c95d", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 5644, "upload_time": "2019-11-21T16:00:33", "upload_time_iso_8601": "2019-11-21T16:00:33.348065Z", "url": "https://files.pythonhosted.org/packages/64/29/3afbde540f1ec7fe55a45f2e661d5cb8629b90d4392b809d1492736b9985/CoverageCalculatorPy-1.0.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "9bc825a6610259a951b5d64c02c252f8", "sha256": "eedcaa17446cfa418be4df55714ac32b655d52b912917a09f0c8fdc0073e0784"}, "downloads": -1, "filename": "CoverageCalculatorPy-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9bc825a6610259a951b5d64c02c252f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5862, "upload_time": "2019-11-21T16:00:31", "upload_time_iso_8601": "2019-11-21T16:00:31.844030Z", "url": "https://files.pythonhosted.org/packages/cf/e6/89d7628d0b6eee8843e3a681f1b880b0690d45a8c379caa14318b2302982/CoverageCalculatorPy-1.0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:42:47 2020"}