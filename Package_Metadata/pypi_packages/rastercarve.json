{"info": {"author": "Franklin Wei", "author_email": "franklin@rockbox.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)", "Topic :: Utilities"], "description": "# RasterCarve\n\n[![PyPI version](https://badge.fury.io/py/rastercarve.svg)](https://badge.fury.io/py/rastercarve) [![PyPI license](https://img.shields.io/pypi/l/rastercarve.svg)](https://pypi.python.org/pypi/rastercarve/) [![PyPI status](https://img.shields.io/pypi/status/rastercarve.svg)](https://pypi.python.org/pypi/rastercarve/)\n\nThis is a little Python script I wrote to generate G-code toolpaths to\nengrave raster images.\n\nA hosted version of the script is available at\nhttps://rastercarve.live\n([Github](https://github.com/built1n/rastercarve-live)). There is also\na standalone custom G-code previewer available at\nhttps://github.com/built1n/rastercarve-preview.\n\nIt takes bitmap images and produces commands (G-code) for a CNC\nmachine to engrave that image onto a piece of material. For the\nuninitiated, a CNC machine is essentially a robotic carving machine --\nthink *robot drill*: you 1) put in a piece of wood/foam/aluminum\nstock; 2) program the machine; and 3) out comes a finished piece with\nthe right patterns cut into it.\n\nThis program comes in during step 2 -- it takes an image and outputs\nthe right sequence of commands for your machine to engrave it. This is\nnot the first program that can do this, but existing solutions are\nunsuitable due to their high cost.\n\nExamples below:\n\n<img src=\"https://www.fwei.tk/blog/d-day.jpg\" width=\"100%\">\n<img src=\"https://www.fwei.tk/blog/baby-yoda.png\" width=\"100%\">\n\n# Installation\n\n`$ pip install rastercarve`\n\nRunning straight from the source tree works fine, too:\n\n`$ python -m rastercarve -h`\n\n# Usage\n\n```\n$ rastercarve --width 10 examples/test.png > out.nc\nGenerating G-code: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 278/278 [00:04<00:00, 57.10 lines/s]\n=== Statistics ===\nInput resolution: 512x512 px\nOutput dimensions: 10.00\" wide by 10.00\" tall = 100.0 in^2\nMax line depth: 0.080 in\nMax line width: 0.043 in (30.0 deg V-bit)\nLine spacing: 0.047 in (110% stepover)\nLine angle: 22.5 deg\nNumber of lines: 277\nInput resolution:  51.2 PPI\nOutput resolution: 100.0 PPI\nScaled image by f=3.91 (200.0 PPI)\nTotal toolpath length: 2202.6 in\n - Rapids:  34.6 in (8.6 s)\n - Plunges: 29.8 in (59.6 s)\n - Moves:   2138.2 in (1282.9 s)\nFeed rate: 100.0 in/min\nPlunge rate: 30.0 in/min\nEstimated machining time: 1351.2 sec\n1 suppressed debug message(s).\n```\n\nThis command generates G-code to engrave `examples/test.png` into an\npiece of material 10 inches wide. Exactly one of the `--width` or\n`--height` parameters must be specified on the command line; the other\nwill be calculated automatically.\n\nThe engraving parameters can be safely left at their defaults, though\nfine-tuning is possible depending on material and machine\ncharacteristics.\n\nThe output G-code will be piped to `out.nc`, which any CNC machine\nshould accept as input.\n\n# Machining Process\n\nWith the toolpath generated, it is time to run the job. Presumably you\nknow the specifics of your particular machine, so I'll only outline\nthe high-level steps here:\n\n1. Load the right tool. An engraving bit is best, though ordinary\nV-bits give acceptable results. Make sure that the tool angle matches\nthat used to generate the toolpath (30 degrees is the default --\nchange this if needed).\n\n2. Load the material. MDF seems to work best; plywood and ordinary\nlumber are too prone to chipping. Plastics have a tendency to melt and\nstick to the bit.\n\n3. Zero X and Y axes at the top left corner of the eventual image\nlocation. Double check that the bottom right corner is in bounds.\n\n4. Zero the Z axis to the top surface of the material.\n\n5. Load and run the toolpath. The engraving will begin in the top\nright corner and work its way down to the bottom right in a serpentine\nfashion.\n\nThe program's output has been tested on a ShopBot Desktop MAX, which\nproduced the results shown earlier.\n\n# Advanced\n\n```\nusage: rastercarve [-h] (--width WIDTH | --height HEIGHT) [-f FEED_RATE]\n                   [-p PLUNGE_RATE] [--rapid RAPID_RATE] [-z SAFE_Z]\n                   [--end-z TRAVERSE_Z] [-t TOOL_ANGLE] [-d MAX_DEPTH]\n                   [-a LINE_ANGLE] [-s STEPOVER] [-r LINEAR_RESOLUTION]\n                   [--dots] [--no-line-numbers]\n                   [--preamble PREAMBLE | --preamble-file PREAMBLE_FILE]\n                   [--epilogue EPILOGUE | --epilogue-file EPILOGUE_FILE]\n                   [--json JSON_DEST] [--debug] [-q] [--version]\n                   filename\n\nGenerate G-code to engrave raster images.\n\npositional arguments:\n  filename              input image (any OpenCV-supported format)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --json JSON_DEST      dump statistics in JSON format\n  --debug               print debug messages\n  -q                    disable progress and statistics\n  --version             show program's version number and exit\n\noutput dimensions:\n  Exactly one required. Image will be scaled while maintaining aspect ratio.\n\n  --width WIDTH         output width (in)\n  --height HEIGHT       output height (in)\n\nmachine configuration:\n  -f FEED_RATE          engraving feed rate (in/min) (default: 100)\n  -p PLUNGE_RATE        engraving plunge rate (in/min) (default: 30)\n  --rapid RAPID_RATE    rapid traverse rate (for time estimation only)\n                        (default: 240)\n  -z SAFE_Z             rapid traverse height (in) (default: 0.1)\n  --end-z TRAVERSE_Z    Z height of final traverse (in) (default: 2)\n  -t TOOL_ANGLE         included angle of tool (deg) (default: 30)\n\nengraving parameters:\n  -d MAX_DEPTH          maximum engraving depth (in) (default: 0.08)\n  -a LINE_ANGLE         angle of grooves from horizontal (deg) (default: 22.5)\n  -s STEPOVER           stepover percentage (affects spacing between lines)\n                        (default: 110)\n  -r LINEAR_RESOLUTION  distance between successive G-code points (in)\n                        (default: 0.01)\n  --dots                engrave using dots instead of lines (experimental)\n\nG-code parameters:\n  --no-line-numbers     suppress G-code line numbers (dangerous on ShopBot!)\n  --preamble PREAMBLE   override the default G-code preamble; to specify\n                        multiple lines on the command line, use $'' strings\n                        with \\n; each line of the preamble will be prepended\n                        with a line number, except when used with --no-line-\n                        numbers\n  --preamble-file PREAMBLE_FILE\n                        like --preamble, but read from a file\n  --epilogue EPILOGUE   override the default G-code epilogue; see above notes\n                        for --preamble\n  --epilogue-file EPILOGUE_FILE\n                        like --epilogue, but read from a file\n\nThe default feeds have been found to be safe values for medium-density\nfiberboard (MDF). Experimenting with the STEPOVER, LINE_ANGLE, and\nLINEAR_RESOLUTION may yield improvements in engraving quality at the cost of\nincreased machining time. On ShopBot machines, the --no-line-numbers flag must\nnot be used, since the spindle will fail to start and damage the material. Use\nthis flag with caution on other machines.\n```\n\n# Related\n\n[Vectric PhotoVCarve](https://www.vectric.com/products/photovcarve) -\na similar commercial solution. This program is not derived from\nPhotoVCarve.\n\n[My blog post](https://www.fwei.tk/blog/opening-black-boxes.html) -\nwriteup on the development process.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/built1n/rastercarve", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "rastercarve", "package_url": "https://pypi.org/project/rastercarve/", "platform": "", "project_url": "https://pypi.org/project/rastercarve/", "project_urls": {"Homepage": "https://github.com/built1n/rastercarve"}, "release_url": "https://pypi.org/project/rastercarve/1.0.8/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Generate G-code to engrave raster images", "version": "1.0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>RasterCarve</h1>\n<p><a href=\"https://badge.fury.io/py/rastercarve\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8a5c5e4f46da90db3bf277b897686bbea87f4df3/68747470733a2f2f62616467652e667572792e696f2f70792f72617374657263617276652e737667\"></a> <a href=\"https://pypi.python.org/pypi/rastercarve/\" rel=\"nofollow\"><img alt=\"PyPI license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bf3ab7eefb6b32fb47c4e2b9a0c719694d882e94/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f72617374657263617276652e737667\"></a> <a href=\"https://pypi.python.org/pypi/rastercarve/\" rel=\"nofollow\"><img alt=\"PyPI status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6cf6bfafdf18625107bc8a0f180e651d5cd6853f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f72617374657263617276652e737667\"></a></p>\n<p>This is a little Python script I wrote to generate G-code toolpaths to\nengrave raster images.</p>\n<p>A hosted version of the script is available at\n<a href=\"https://rastercarve.live\" rel=\"nofollow\">https://rastercarve.live</a>\n(<a href=\"https://github.com/built1n/rastercarve-live\" rel=\"nofollow\">Github</a>). There is also\na standalone custom G-code previewer available at\n<a href=\"https://github.com/built1n/rastercarve-preview\" rel=\"nofollow\">https://github.com/built1n/rastercarve-preview</a>.</p>\n<p>It takes bitmap images and produces commands (G-code) for a CNC\nmachine to engrave that image onto a piece of material. For the\nuninitiated, a CNC machine is essentially a robotic carving machine --\nthink <em>robot drill</em>: you 1) put in a piece of wood/foam/aluminum\nstock; 2) program the machine; and 3) out comes a finished piece with\nthe right patterns cut into it.</p>\n<p>This program comes in during step 2 -- it takes an image and outputs\nthe right sequence of commands for your machine to engrave it. This is\nnot the first program that can do this, but existing solutions are\nunsuitable due to their high cost.</p>\n<p>Examples below:</p>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4a80fd69d8ed5ec89a417f4ac6d886a3bcdd465c/68747470733a2f2f7777772e667765692e746b2f626c6f672f642d6461792e6a7067\" width=\"100%\">\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6e4f532fe4ba9ef759729d51a675a66853726f28/68747470733a2f2f7777772e667765692e746b2f626c6f672f626162792d796f64612e706e67\" width=\"100%\">\n<h1>Installation</h1>\n<p><code>$ pip install rastercarve</code></p>\n<p>Running straight from the source tree works fine, too:</p>\n<p><code>$ python -m rastercarve -h</code></p>\n<h1>Usage</h1>\n<pre><code>$ rastercarve --width 10 examples/test.png &gt; out.nc\nGenerating G-code: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 278/278 [00:04&lt;00:00, 57.10 lines/s]\n=== Statistics ===\nInput resolution: 512x512 px\nOutput dimensions: 10.00\" wide by 10.00\" tall = 100.0 in^2\nMax line depth: 0.080 in\nMax line width: 0.043 in (30.0 deg V-bit)\nLine spacing: 0.047 in (110% stepover)\nLine angle: 22.5 deg\nNumber of lines: 277\nInput resolution:  51.2 PPI\nOutput resolution: 100.0 PPI\nScaled image by f=3.91 (200.0 PPI)\nTotal toolpath length: 2202.6 in\n - Rapids:  34.6 in (8.6 s)\n - Plunges: 29.8 in (59.6 s)\n - Moves:   2138.2 in (1282.9 s)\nFeed rate: 100.0 in/min\nPlunge rate: 30.0 in/min\nEstimated machining time: 1351.2 sec\n1 suppressed debug message(s).\n</code></pre>\n<p>This command generates G-code to engrave <code>examples/test.png</code> into an\npiece of material 10 inches wide. Exactly one of the <code>--width</code> or\n<code>--height</code> parameters must be specified on the command line; the other\nwill be calculated automatically.</p>\n<p>The engraving parameters can be safely left at their defaults, though\nfine-tuning is possible depending on material and machine\ncharacteristics.</p>\n<p>The output G-code will be piped to <code>out.nc</code>, which any CNC machine\nshould accept as input.</p>\n<h1>Machining Process</h1>\n<p>With the toolpath generated, it is time to run the job. Presumably you\nknow the specifics of your particular machine, so I'll only outline\nthe high-level steps here:</p>\n<ol>\n<li>\n<p>Load the right tool. An engraving bit is best, though ordinary\nV-bits give acceptable results. Make sure that the tool angle matches\nthat used to generate the toolpath (30 degrees is the default --\nchange this if needed).</p>\n</li>\n<li>\n<p>Load the material. MDF seems to work best; plywood and ordinary\nlumber are too prone to chipping. Plastics have a tendency to melt and\nstick to the bit.</p>\n</li>\n<li>\n<p>Zero X and Y axes at the top left corner of the eventual image\nlocation. Double check that the bottom right corner is in bounds.</p>\n</li>\n<li>\n<p>Zero the Z axis to the top surface of the material.</p>\n</li>\n<li>\n<p>Load and run the toolpath. The engraving will begin in the top\nright corner and work its way down to the bottom right in a serpentine\nfashion.</p>\n</li>\n</ol>\n<p>The program's output has been tested on a ShopBot Desktop MAX, which\nproduced the results shown earlier.</p>\n<h1>Advanced</h1>\n<pre><code>usage: rastercarve [-h] (--width WIDTH | --height HEIGHT) [-f FEED_RATE]\n                   [-p PLUNGE_RATE] [--rapid RAPID_RATE] [-z SAFE_Z]\n                   [--end-z TRAVERSE_Z] [-t TOOL_ANGLE] [-d MAX_DEPTH]\n                   [-a LINE_ANGLE] [-s STEPOVER] [-r LINEAR_RESOLUTION]\n                   [--dots] [--no-line-numbers]\n                   [--preamble PREAMBLE | --preamble-file PREAMBLE_FILE]\n                   [--epilogue EPILOGUE | --epilogue-file EPILOGUE_FILE]\n                   [--json JSON_DEST] [--debug] [-q] [--version]\n                   filename\n\nGenerate G-code to engrave raster images.\n\npositional arguments:\n  filename              input image (any OpenCV-supported format)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --json JSON_DEST      dump statistics in JSON format\n  --debug               print debug messages\n  -q                    disable progress and statistics\n  --version             show program's version number and exit\n\noutput dimensions:\n  Exactly one required. Image will be scaled while maintaining aspect ratio.\n\n  --width WIDTH         output width (in)\n  --height HEIGHT       output height (in)\n\nmachine configuration:\n  -f FEED_RATE          engraving feed rate (in/min) (default: 100)\n  -p PLUNGE_RATE        engraving plunge rate (in/min) (default: 30)\n  --rapid RAPID_RATE    rapid traverse rate (for time estimation only)\n                        (default: 240)\n  -z SAFE_Z             rapid traverse height (in) (default: 0.1)\n  --end-z TRAVERSE_Z    Z height of final traverse (in) (default: 2)\n  -t TOOL_ANGLE         included angle of tool (deg) (default: 30)\n\nengraving parameters:\n  -d MAX_DEPTH          maximum engraving depth (in) (default: 0.08)\n  -a LINE_ANGLE         angle of grooves from horizontal (deg) (default: 22.5)\n  -s STEPOVER           stepover percentage (affects spacing between lines)\n                        (default: 110)\n  -r LINEAR_RESOLUTION  distance between successive G-code points (in)\n                        (default: 0.01)\n  --dots                engrave using dots instead of lines (experimental)\n\nG-code parameters:\n  --no-line-numbers     suppress G-code line numbers (dangerous on ShopBot!)\n  --preamble PREAMBLE   override the default G-code preamble; to specify\n                        multiple lines on the command line, use $'' strings\n                        with \\n; each line of the preamble will be prepended\n                        with a line number, except when used with --no-line-\n                        numbers\n  --preamble-file PREAMBLE_FILE\n                        like --preamble, but read from a file\n  --epilogue EPILOGUE   override the default G-code epilogue; see above notes\n                        for --preamble\n  --epilogue-file EPILOGUE_FILE\n                        like --epilogue, but read from a file\n\nThe default feeds have been found to be safe values for medium-density\nfiberboard (MDF). Experimenting with the STEPOVER, LINE_ANGLE, and\nLINEAR_RESOLUTION may yield improvements in engraving quality at the cost of\nincreased machining time. On ShopBot machines, the --no-line-numbers flag must\nnot be used, since the spindle will fail to start and damage the material. Use\nthis flag with caution on other machines.\n</code></pre>\n<h1>Related</h1>\n<p><a href=\"https://www.vectric.com/products/photovcarve\" rel=\"nofollow\">Vectric PhotoVCarve</a> -\na similar commercial solution. This program is not derived from\nPhotoVCarve.</p>\n<p><a href=\"https://www.fwei.tk/blog/opening-black-boxes.html\" rel=\"nofollow\">My blog post</a> -\nwriteup on the development process.</p>\n\n          </div>"}, "last_serial": 6881951, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "b77966b1adc6c859bf771241a7178fd1", "sha256": "45db7f049baff068e947d3b06cff06ba85062ff38a09b99513d133b04e7ea6a3"}, "downloads": -1, "filename": "rastercarve-1.0.1.tar.gz", "has_sig": false, "md5_digest": "b77966b1adc6c859bf771241a7178fd1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7109, "upload_time": "2019-12-26T03:32:34", "upload_time_iso_8601": "2019-12-26T03:32:34.457893Z", "url": "https://files.pythonhosted.org/packages/52/6f/4c27dc34e44713580f8e4817af23945af3bafb18b2c6842a7088c2e28a6c/rastercarve-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "824bf7c2044295659986e72eeaf1e373", "sha256": "d5e0db76676610a4631ad6bc7ae8c621be6893daebd16016d1f85990bc1ceaca"}, "downloads": -1, "filename": "rastercarve-1.0.2-py3.8.egg", "has_sig": false, "md5_digest": "824bf7c2044295659986e72eeaf1e373", "packagetype": "bdist_egg", "python_version": "3.8", "requires_python": ">=3.6", "size": 13278, "upload_time": "2019-12-26T03:54:20", "upload_time_iso_8601": "2019-12-26T03:54:20.649908Z", "url": "https://files.pythonhosted.org/packages/e1/ee/e7d2ff29c749564de101867f7a636e7f6226e591027eb989f6e00b852c17/rastercarve-1.0.2-py3.8.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c3b66aeaedd603839aeea66158a36ac", "sha256": "f900749bb6f10b5a9f3ca0707a1bb040146e4f5301bd3b8d0b1b21492281c0ad"}, "downloads": -1, "filename": "rastercarve-1.0.2.tar.gz", "has_sig": false, "md5_digest": "0c3b66aeaedd603839aeea66158a36ac", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7222, "upload_time": "2019-12-26T03:54:23", "upload_time_iso_8601": "2019-12-26T03:54:23.024201Z", "url": "https://files.pythonhosted.org/packages/db/4c/f0ab9a27084a2cc4526156fa84dc7565c6ad3127804bfee9d1dbe53aacaa/rastercarve-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "ff835fe2580496df5919886d79fa6989", "sha256": "f0c504683db353ec6367b091e4a2a2fbc4617589631aabe8237cc1e202a4d087"}, "downloads": -1, "filename": "rastercarve-1.0.3-py3.8.egg", "has_sig": false, "md5_digest": "ff835fe2580496df5919886d79fa6989", "packagetype": "bdist_egg", "python_version": "3.8", "requires_python": ">=3.6", "size": 15381, "upload_time": "2019-12-26T07:08:00", "upload_time_iso_8601": "2019-12-26T07:08:00.749722Z", "url": "https://files.pythonhosted.org/packages/9d/95/d761a313384ecfb60057757d200d16e67bfb9370d3e414eda20b41ec130b/rastercarve-1.0.3-py3.8.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c17b8e05600a9435cde36d6bc5d9d237", "sha256": "d4ca3d3cb48940a7062ff36df749d0b626f1b529776877199ffe52d8a4066ff6"}, "downloads": -1, "filename": "rastercarve-1.0.3.tar.gz", "has_sig": false, "md5_digest": "c17b8e05600a9435cde36d6bc5d9d237", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10037, "upload_time": "2019-12-26T07:08:02", "upload_time_iso_8601": "2019-12-26T07:08:02.885551Z", "url": "https://files.pythonhosted.org/packages/7f/28/ac05cfdf1ef5c4f9d895a37a070b59487dfd76a7f81a1a6505a27fff169e/rastercarve-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "7b1c526604fa0db79b26e620efc9f70f", "sha256": "21ff10fd93951ea1a2f41f710ad6447324d1225baed5399973bbe7b32dc7fa73"}, "downloads": -1, "filename": "rastercarve-1.0.4-py3.8.egg", "has_sig": false, "md5_digest": "7b1c526604fa0db79b26e620efc9f70f", "packagetype": "bdist_egg", "python_version": "3.8", "requires_python": ">=3.6", "size": 15696, "upload_time": "2019-12-30T21:39:16", "upload_time_iso_8601": "2019-12-30T21:39:16.205643Z", "url": "https://files.pythonhosted.org/packages/47/0e/5857a5e07067d169d8d087d11dc676c91c8032713b6218e3e977d8d85d1b/rastercarve-1.0.4-py3.8.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ffa02581c823ca1b34f296cbd9648a6e", "sha256": "deac1b6ccae501a71803828765e4572c7e8fc32ab1c2b75f6c68cb8ab899afa4"}, "downloads": -1, "filename": "rastercarve-1.0.4.tar.gz", "has_sig": false, "md5_digest": "ffa02581c823ca1b34f296cbd9648a6e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10270, "upload_time": "2019-12-30T21:39:19", "upload_time_iso_8601": "2019-12-30T21:39:19.201931Z", "url": "https://files.pythonhosted.org/packages/a4/99/478a9b9aa6597d89c1ae711d4288c9d35a6bb5f44563eaa7dc1c338c3aef/rastercarve-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "440746b7005eb72ca26f6131d451ae68", "sha256": "77cea7b4fcaf01bf61a6cd5efa4310ff9b6ad2f36c14475fcf7d796a8bc59b3e"}, "downloads": -1, "filename": "rastercarve-1.0.5-py3.8.egg", "has_sig": false, "md5_digest": "440746b7005eb72ca26f6131d451ae68", "packagetype": "bdist_egg", "python_version": "3.8", "requires_python": ">=3.6", "size": 15820, "upload_time": "2020-01-02T03:24:22", "upload_time_iso_8601": "2020-01-02T03:24:22.193868Z", "url": "https://files.pythonhosted.org/packages/15/24/e2582c1de07a9ff4389f182529ea6c8f8584196fcc564ef2b993958045ee/rastercarve-1.0.5-py3.8.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "333a3c78f8c71af1cfe4881a0a14cc31", "sha256": "f4c8b3ec08e798f0f0c7468a4550092428110206a593e1b07ff63a8088b2f7c0"}, "downloads": -1, "filename": "rastercarve-1.0.5.tar.gz", "has_sig": false, "md5_digest": "333a3c78f8c71af1cfe4881a0a14cc31", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10409, "upload_time": "2020-01-02T03:24:23", "upload_time_iso_8601": "2020-01-02T03:24:23.516192Z", "url": "https://files.pythonhosted.org/packages/cd/a0/3fd100d8be5f8424c8cbffbe2df1760cb93dd763edcebbcc5c7c7802eae6/rastercarve-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "65a40998d7186e2a495e1f3a117fffc2", "sha256": "db06a54c4c8cadf87c6ddbc7803c3f2cc1c1f39f9b57db0b371217484b63eb8b"}, "downloads": -1, "filename": "rastercarve-1.0.6-py3.8.egg", "has_sig": false, "md5_digest": "65a40998d7186e2a495e1f3a117fffc2", "packagetype": "bdist_egg", "python_version": "3.8", "requires_python": ">=3.6", "size": 16474, "upload_time": "2020-01-12T14:19:18", "upload_time_iso_8601": "2020-01-12T14:19:18.572704Z", "url": "https://files.pythonhosted.org/packages/45/47/f32f3b0b5979e130f30cf2e31c5b2325c0bc13cab28ebadadd070c3026a5/rastercarve-1.0.6-py3.8.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "156649499214997b6bed9db24b111324", "sha256": "6aabfe6ae4ba3b36ec60f682337074fc652cdead147a446719c33e37a169a6c2"}, "downloads": -1, "filename": "rastercarve-1.0.6.tar.gz", "has_sig": false, "md5_digest": "156649499214997b6bed9db24b111324", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10903, "upload_time": "2020-01-12T14:19:19", "upload_time_iso_8601": "2020-01-12T14:19:19.863998Z", "url": "https://files.pythonhosted.org/packages/91/49/a5bdfabe3aa11b2a3f3e47c3caee1b147730c5ca743bcd0bc4f225e30dc6/rastercarve-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "87cddbcaf0b7407fafd5d1506e814bdb", "sha256": "cca6f4fac4a39627bf94921b32c05c1a578d6e3c4ebfbbeb42dbe44ee601ab9b"}, "downloads": -1, "filename": "rastercarve-1.0.7-py3.8.egg", "has_sig": false, "md5_digest": "87cddbcaf0b7407fafd5d1506e814bdb", "packagetype": "bdist_egg", "python_version": "3.8", "requires_python": ">=3.6", "size": 17728, "upload_time": "2020-01-31T05:34:45", "upload_time_iso_8601": "2020-01-31T05:34:45.068189Z", "url": "https://files.pythonhosted.org/packages/34/eb/d88eb6d7388c2331ad81088e8a6edb2d9e1eada8920c1e42fae130fbf900/rastercarve-1.0.7-py3.8.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c49229ca12ef11aca2242b31299498d4", "sha256": "9a14b1d6d0b2e42430c730f1d45cc0f665b67af2fd075f2c500b05cf9f02c098"}, "downloads": -1, "filename": "rastercarve-1.0.7.tar.gz", "has_sig": false, "md5_digest": "c49229ca12ef11aca2242b31299498d4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12967, "upload_time": "2020-01-31T05:34:46", "upload_time_iso_8601": "2020-01-31T05:34:46.703802Z", "url": "https://files.pythonhosted.org/packages/35/76/8386d0a58c6a2e3b18ba9133eaea413cdcf5fa1f96ac177bd0b74e32d1b7/rastercarve-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "6925b4bd48ed9c71ebac7a697b6f3a0b", "sha256": "317fecf1963d8208570068ade35d8bf172a93caa22f469ddbaf35db6ca69f44e"}, "downloads": -1, "filename": "rastercarve-1.0.8.tar.gz", "has_sig": false, "md5_digest": "6925b4bd48ed9c71ebac7a697b6f3a0b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13156, "upload_time": "2020-03-25T16:26:38", "upload_time_iso_8601": "2020-03-25T16:26:38.272321Z", "url": "https://files.pythonhosted.org/packages/5d/e6/92e02e5435769823523d815602e09240dbab23fde2ab7fd57fe89e039024/rastercarve-1.0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6925b4bd48ed9c71ebac7a697b6f3a0b", "sha256": "317fecf1963d8208570068ade35d8bf172a93caa22f469ddbaf35db6ca69f44e"}, "downloads": -1, "filename": "rastercarve-1.0.8.tar.gz", "has_sig": false, "md5_digest": "6925b4bd48ed9c71ebac7a697b6f3a0b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13156, "upload_time": "2020-03-25T16:26:38", "upload_time_iso_8601": "2020-03-25T16:26:38.272321Z", "url": "https://files.pythonhosted.org/packages/5d/e6/92e02e5435769823523d815602e09240dbab23fde2ab7fd57fe89e039024/rastercarve-1.0.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:11 2020"}