{"info": {"author": "FadeOut Software", "author_email": "info@fadeout.biz", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: GIS", "Topic :: Software Development :: Libraries"], "description": "# WASDI Python Library\r\n\r\nWASDI is the Web Advanced Space Developer Interface. This software is a **preliminary version** of the Python Library you can use to access the [WASDI](http://www.wasdi.net) platform functionalities from your Python code.\r\n\r\nVisit us at [http://www.wasdi.net](http://www.wasdi.net)\r\n\r\nThe source code can be found [here](https://github.com/fadeoutsoftware/WASDI/tree/develop/libraries/waspy)\r\n\r\n----\r\n\r\n\r\n## Python tutorial\r\n\r\nWASPY is the **WAS**DI **Py**thon Library. \r\n\r\n### Prerequisites:\r\n\r\nmandatory:\r\n\r\n- a [WASDI](http://www.wasdi.net) registered user (with a username/password, google users are not supported yet)\r\n- at least one workspace\r\n- some EO products in your workspace\r\n\r\nOptional:\r\n\r\n- [SNAP Python (snappy) interface](https://senbox.atlassian.net/wiki/spaces/SNAP/pages/50855941/Configure+Python+to+use+the+SNAP-Python+snappy+interface): this is not necessary but you may find these useful, especially for reading and writing images locally ([howto](https://senbox.atlassian.net/wiki/spaces/SNAP/pages/19300362/How+to+use+the+SNAP+API+from+Python)). Anyway, most of the SNAP functionalities are wrapped by WASDI, so don't worry.\r\n\r\n### Installation\r\n\r\nTo start working with WASPY, just install the library using:\r\n\r\n```bash\r\npip install wasdi\r\n```\r\n\r\nTo quickly check if the installation worked correctly, try running the following code:\r\n\r\n\r\n```python\r\nimport wasdi\r\nprint(wasdi.hello())\r\n```\r\n\r\nYou should see this kind of output:\r\n\r\n\r\n```json\r\n{\"boolValue\":null,\"doubleValue\":null,\"intValue\":null,\"stringValue\":\"Hello Wasdi!!\"}\r\n```\r\n\r\n\r\n### Configuration\r\n\r\nCreate a `config.json` file. It is a standard json file, which is used to store the credentials of the user and some other settings. The syntax is:\r\n\r\n```json\r\n\u201cVARIABLE_NAME\u201d: value\r\n```\r\n\r\nHint: exploit an editor which can check the syntax (there are many which can be accessed online for free)\r\n\r\nThe minimal configuration to begin working with WASPY is:\r\n\r\n```json\r\n{\r\n  \"USER\": \"yourUser@wasdi.net\",\r\n  \"PASSWORD\": \"yourPasswordHere\",\r\n  \"WORKSPACE\": \"nameOfTheWorkspaceYouWantToUse\"\r\n}\r\n```\r\n\r\n\r\nFor the other available parameters please refer to the Documentation.\r\n\r\n\r\n### Start WASPY\r\n\r\nTo start WASPY and check if everything is working, run the following code:\r\n\r\n\r\n```python\r\nwasdi.init('./config.json')\r\n```\r\n\r\n(Adapt the path if the file is not located in your working directory)\r\n\r\nThe Lib will read the configuration file, load the user and password, log the user in, and then open the workspace specified in the configuration file. To check if everything is working, try to get the list of workspaces available for the user:\r\n\r\n\r\n```python\r\nwasdi.getWorkspaces()\r\n```\r\n\r\nYou should be able to see a result similar to the following one:\r\n\r\n```python\r\n[{u'ownerUserId': u'yourUser@wasdi.net',\r\n  u'sharedUsers': [],\r\n  u'workspaceId': u'23ab54f3-b453-2b3e-284a-b6a4243f0f2c',\r\n  u'workspaceName': u'nameOfTheWorkspaceYouWantToUse'},\r\n {u'ownerUserId': u'yourUser@wasdi.net',\r\n  u'sharedUsers': [],\r\n  u'workspaceId': u'103fbf01-2e68-22d3-bd45-2cf95665dac2',\r\n  u'workspaceName': u'theNameOfAnotherWorkspace'}]\r\n```\r\n\r\nThe configured Workspace is already opened.  The use can open another workspace using:\r\n\r\n```python\r\nwasdi.openWorkspace('theNameOfAnotherWorkspace')\r\n```\r\n\r\nand the lib replies showing the workspace unique id:\r\n\r\n```python\r\nu'9ce787d4-1d59-4146-8df7-3fc9516d4eb3'\r\n```\r\n\r\nTo get the list of the products available in the workspace, call\r\n\r\n```python\r\nwasdi.getProductsByWorkspace('nameOfTheWorkspaceYouWantToUse')\r\n```\r\n\r\nand the lib returns a list of the products in the given workspace:\r\n\r\n```python\r\n[u'S1A_IW_GRDH_1SDV_20190517T053543_20190517T053608_027263_0312F1_F071.zip',\r\nu'S1B_IW_RAW__0SDV_20190506T052631_20190506T052703_016119_01E53A_D2AD.zip', u'S1A_IW_GRDH_1SDV_20190517T053608_20190517T053633_027263_0312F1_3382.zip']\r\n```\r\n\r\nNow try something more, let's search for some Sentinel 1 images. Let's assume we are interested in images taken from \"2018-09-01\" to \"2018-09-02\". Also, we'd better specify a bounding box. Assume we're interested in images with *latitude* in `[43, 44]` and *longitude* in `[11, 12]`. We can think of these coordinates as a rectangle limited by the upper left corner `(44, 11)` and the lower right corner`(43, 12)`. \r\n The corresponding code is:\r\n\r\n```python\r\nwasdi.wasdiLog('Let\\'s search some images')\r\naoImages = wasdi.searchEOImages(\"S1\", \"2018-09-01\", \"2018-09-02\", 44, 11, 43, 12, None, None, None, None)\r\nwasdi.wasdiLog('Found ' + str(len(aoImages)))\r\n```\r\n\r\nThe output should be similar to this:\r\n\r\n```\r\n Let's search some images\r\n[INFO] waspy.searchEOImages: search results:\r\n[{\r\n\t\t'footprint': 'POLYGON ((8.8724 45.3272, 8.4505 43.3746, 11.4656 43.0981, 11.9901 45.0472, 8.8724 45.3272, 8.8724 45.3272))',\r\n\t\t'id': 'cba6c104-3006-4af7-a2d1-cbd55f58b939',\r\n\t\t'link': 'https://catalogue.onda-dias.eu/dias-catalogue/Products(cba6c104-3006-4af7-a2d1-cbd55f58b939)/$value',\r\n\t\t'preview': None,\r\n\t\t'properties': {\r\n\t\t\t'offline': 'false',\r\n\t\t\t'downloadable': '',\r\n\t\t\t'filename': 'S1A_IW_RAW__0SDV_20180902T052727_20180902T052759_023515_028F75_7325.zip',\r\n\t\t\t'size': '1.54 GB',\r\n\t\t\t'pseudopath': 'RADAR/LEVEL-0/2018/09/02, S1/1A/SAR-C/LEVEL-0/IW_RAW__0S/2018/09/02, S1/1A/LEVEL-0/IW_RAW__0S/2018/09/02, S1/SAR-C/LEVEL-0/IW_RAW__0S/2018/09/02, S1/LEVEL-0/IW_RAW__0S/2018/09/02, 2014-016A/SAR-C/LEVEL-0/IW_RAW__0S/2018/09/02, 2014-016A/LEVEL-0/IW_RAW__0S/2018/09/02',\r\n\t\t\t'link': 'https://catalogue.onda-dias.eu/dias-catalogue/Products(cba6c104-3006-4af7-a2d1-cbd55f58b939)/$value',\r\n\t\t\t'format': 'application/zip',\r\n\t\t\t'creationDate': '2018-09-03T05:12:37.000Z'\r\n\t\t},\r\n\t\t'provider': 'ONDA',\r\n\t\t'summary': 'Date: 2018-09-03T05:12:37.000Z, Instrument: null, Mode: null, Satellite: null, Size: 1.54 GB',\r\n\t\t'title': 'S1A_IW_RAW__0SDV_20180902T052727_20180902T052759_023515_028F75_7325'\r\n},\r\n{'(...7 more results similar to this one, omitted for brevity)'}]\r\nFound 8\r\n```\r\n\r\nNow we can import one of those products in WASDI: let's download the first one:\r\n\r\n```python\r\nsImportWithDict = wasdi.importProduct(None, None, aoImages[0])\r\n```\r\n\r\nWe can see a list of the products in the workspace as follows:\r\n\r\n```python\r\nasProducts = wasdi.getProductsByActiveWorkspace()\r\nwasdi.wasdiLog(asProducts)\r\n```\r\n\r\nThe second line logs the list of products\r\n\r\n### Running an existing workflow\r\n\r\nIf you wish to run an existing SNAP workflow you can use `wasdi.executeWorkflow`. For example, if you wish to execute a workflow that calibrates and corrects the georeference of a Sentinel 1 image, you may use the workflow called `LISTSinglePreproc` in this way:\r\n\r\n```python\r\nasProducts = wasdi.getProductsByActiveWorkspace()\r\nsStatus = wasdi.executeWorkflow([asProducts[0]], ['lovelyOutput'], 'LISTSinglePreproc')\r\n```\r\n\r\nHere the first line gets the list of products and the second calls the workflow `LISTSinglePreproc` on the first product of the workspace and creates another product called `lovelyOutput`.\r\n\r\n### A more complete example\r\n\r\nNow put everything back together. Create a file called [`myProcessor.py`](https://github.com/fadeoutsoftware/WASDI/blob/develop/libraries/waspy/examples/myProcessor.py) (follow the link to download the file) with the following content:\r\n\r\n```python\r\nimport wasdi\r\n\r\n\r\ndef run(parameters, processId):\r\n    wasdi.wasdiLog('Here\\'s the list of your workspaces:')\r\n    aoWorkspaces = wasdi.getWorkspaces()\r\n    wasdi.wasdiLog(aoWorkspaces)\r\n    wasdi.wasdiLog('The ID of currently selected workspace is:')\r\n    sActiveWorkspace = wasdi.getActiveWorkspaceId()\r\n    wasdi.wasdiLog(sActiveWorkspace)\r\n\r\n    wasdi.wasdiLog('Let\\'s search some images...')\r\n    aoImages = wasdi.searchEOImages(\"S1\", \"2018-09-01\", \"2018-09-02\", 44, 11, 43, 12, sProductType='GRD')\r\n    wasdi.wasdiLog('Found ' + str(len(aoImages)) + ' images')\r\n\r\n    wasdi.wasdiLog('Download the first one passing the dictionary...')\r\n    sImportWithDict = wasdi.importProduct(None, None, aoImages[0])\r\n    wasdi.wasdiLog('Import with dict returned: ' + sImportWithDict)\r\n\r\n    wasdi.wasdiLog('Now, these are the products in your workspace: ')\r\n    asProducts = wasdi.getProductsByActiveWorkspace()\r\n    wasdi.wasdiLog(asProducts)\r\n\r\n    wasdi.wasdiLog('Let\\'s run a workflow on the first image to rectify its georeference...')\r\n    sStatus = wasdi.executeWorkflow([asProducts[0]], ['lovelyOutput'], 'LISTSinglePreproc')\r\n    if sStatus == 'DONE':\r\n        wasdi.wasdiLog('The product is now in your workspace, look at it on the website')\r\n\r\n    wasdi.wasdiLog('It\\'s over!')\r\n\r\ndef WasdiHelp():\r\n    sHelp = \"Wasdi Tutorial\"\r\n    return sHelp\r\n```\r\n\r\nThen create another file to start the processor. Let's call it [`tutorial.py`](https://github.com/fadeoutsoftware/WASDI/blob/develop/libraries/waspy/examples/tutorial.py) (follow the link to download the file), with the following content:\r\n\r\n```python\r\nimport myProcessor\r\nimport wasdi\r\n\r\nbInitResult = wasdi.init('config.json')\r\nif bInitResult:\r\n    myProcessor.run(wasdi.getParametersDict(), '')\r\n\r\n```\r\n\r\nNow, if you run `tutorial.py`, it will call `myProcessor.py`, which will go through the instructions we saw above. Pro tip: keep the browser open in wasdi.net (make sure you are logged in) and open the workspace you are using, to see the evolution of the script in real time.\r\n\r\n### Deploy your processor on WASDI\r\n\r\nFinally, to deply our processor on WASDI, you need first to create a text file called [`pip.txt`](https://github.com/fadeoutsoftware/WASDI/blob/develop/libraries/waspy/examples/pip.txt) (follow the link to download the file) containg the packages we imported in `myProcessor.py`, one per line. Since we just imported `wasdi`, it should look like this:\r\n\r\n```\r\nwasdi\r\n```\r\n\r\nNow, create a zip file containing these two files:\r\n\r\n- `myProcessor.py`\r\n- `pip.txt`\r\n\r\nYou can now upload the zip file on wasdi.net from *Edit* -> *Processor* -> *New WASDI App* by giving it a name and completing the other details. You will need to do this just once.\r\nTo run it, go to *WADI Apps* -> (select yours) -> no parameters are needed, so just enter `{}` and clic *run*.\r\n\r\n----\r\n\r\n### More to include WASDI in a custom Processor\r\n\r\nLet\u2019s assume that the developer has his own EO Product Manipulation Code. At some point, the developer wishes to read his own input file, then make elaborations and finally save an output file. \r\n\r\nLet\u2019s imagine a pseudo-code like this.\r\n\r\n```python\r\n# Input and output file name\r\nfilename = '~wasdiUser/EO/myfile.zip'\r\noutputfilename = \"~wasdiUser/EO/myoutput.tiff\"\r\n\r\n# Read the file\r\nEOimage = multibandRead(filename, size, precision, offset, interleave, byteorder)\r\n\r\n# Elaborate the image somehow\r\nEOimage *= 2\r\n\r\n# Save the output\r\nimwrite(EOimage, outputfilename)\r\n```\r\n\r\nTo port the code onto WASDI, the pseudo-code has to be integrated like this:\r\n\r\n```python\r\nimport wasdi\r\nimport os\r\n\r\nfilename = 'myfile.zip'\r\noutputFileName = 'myoutput.tiff'\r\n\r\nfullInputPath = wasdi.getFullProductPath(filename)\r\n\r\n# Read the file\r\nEOproduct = multibandRead(fullInputPath, size, precision, offset, interleave, byteorder)\r\n\r\n# Elaborate the image\r\nEOproduct *= 2\r\n\r\n# Save the output\r\n# Get The Path\r\noutputPath = wasdi.getSavePath()\r\nfullOutputPath = os.path.join(outputPath, outputFileName)\r\n\r\n# Use the save path\r\nimwrite(EOproduct, fullOutputPath)\r\n\r\n# Ingest in WASDI\r\nwasdi.addFileToWASDI(outputFileName)\r\n```\r\n\r\nWe modified the code to start the library and then to receive from WASDI the paths to use. \r\n\r\nThe input files are supposed to be in the workspace. In order for this to happen, the user can go the wasdi web application, open the workspace, search the needed image and add it to the workspace.\r\n\r\nThe `wasdi.getFullProductPath` method has a double goal:\r\n\r\n1. as the name suggests, it returns the local path to use back to the developer\r\n2. if the code is running on the client PC, the Wasdi Lib will checks if the file is available locally: in case this checks fails, the lib will automatically download the file from the WASDI cloud to the local PC. \\\r\nTo disable the auto download feature, is possible to add this parameter to the `config.json` file:\\\r\n```json\r\n\"DOWNLOADACTIVE\":0\r\n```\r\n\r\nThe choice of a name for the output file is left to the user,  WASPY just provides the folder to use (`wasdi.GetSavePath`). So to save the file we need to get the path and then concatenate the custom file name (`fullOutputPath = os.path.join(outputPath, outputFileName)`).\r\n\r\nThe last call, `AddFileToWASDI`, has the goal to add the product to the workspace. It takes in input only the file name, without the full path.\r\n\r\nWhen used on the local PC, it will automatically upload the file after writing it on local file system. To inhibit this behavior, just add the following to the `config.json`:\\\r\n```json\r\n\"UPLOADACTIVE\":0\r\n```\r\n\r\n### Use Custom parameters\r\n\r\nEvery processor usually has its own parameters. A typical example can be the name of a file in input, a threshold, the coordinates of an area of interest and so on. To let the developer work with her/his own parameters, WASPY implements an automatic file read. \r\n\r\nAdd this line to the configuration file `config.json`:\r\n\r\n```json\r\n\"PARAMETERSFILEPATH\": \"<path to a similar file for own parameters>\"\r\n```\r\n\r\ne.g.\r\n\r\n```json\r\n\"PARAMETERSFILEPATH\": \"c:/temp/myparameters.txt\"\r\n```\r\n\r\nThen create the same file in the right folder and fill it with all the needed parameters, using the same syntax used for `config.json`; e.g.:\r\n\r\n```json\r\n\"INPUTFILE\": \"S1A_imported_file.zip\",\r\n\"THRESHOLD\": 5,\r\n\"POINT\": [44.2, 23.4]\r\n```\r\n\r\nThe decision about how to encode these parameters is left to the developer. For WASDI these are all strings. In the example above, the developers may know that THRESHOLD is a number, and POINT is couple of coordinates that must to be splitted.\r\n\r\nThe only limit is that each parameter has to be written in one line.\r\n\r\nIn WASPY there are these three methods available:\r\n\r\n-   `wasdi.getParameter(sKey)`: return the value of the sKey Parameter\r\n-   `wasdi.addParameter(sKey, sValue)`: updates the value of a Parameter (ONLY in memory NOT in the file)\r\n-   `wasdi.refreshParameters()`: reads the parameter file from disk again\r\n\r\nLet\u2019s update the code above to use the parameters file. First of all create a parameter file and set the name and path in the `config.json` file. The file (i.e., `parameters.json`) might look like this:\r\n\r\n```json\r\n{\r\n  \"INPUT_FILE\": \"S1A_imported_file.zip\",\r\n  \"OUTPUT_FILE\": \"FloodedArea.tif\"\r\n}\r\n```\r\n\r\nThen modify the code to read the parameters without using hard-coded input:\r\n\r\n```python\r\nimport wasdi\r\nimport os\r\n\r\n# The input file is supposed to be in the workspace\r\n# Read the file from parameters\r\nfilename = wasdi.getParameter(\"INPUT_FILE\")\r\noutputfilename = wasdi.getParameter(\"OUTPUT_FILE\")\r\n\r\nfullInputPath = wasdi.getFullProductPath(filename)\r\n\r\n# Read the file\r\nEOproduct = multibandRead(fullInputPath, size, precision, offset, interleave, byteorder)\r\n\r\n# Elaborate the image\r\nEOproduct  *= 2\r\n\r\n# Save the output\r\n# Get The Path\r\noutputPath = wasdi.getSavePath()\r\nfullOutputPath = os.path.join(outputPath, outputFileName)\r\n\r\n# Use the save path\r\nimwrite(EOproduct, fullOutputPath)\r\n\r\n# Ingest in WASDI\r\nwasdi.addFileToWASDI(outputFileName)\r\n```\r\n\r\n\r\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.wasdi.net", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "wasdi", "package_url": "https://pypi.org/project/wasdi/", "platform": "", "project_url": "https://pypi.org/project/wasdi/", "project_urls": {"Homepage": "http://www.wasdi.net", "Source": "https://github.com/fadeoutsoftware/WASDI/tree/develop/libraries/waspy", "Tracker": "https://github.com/fadeoutsoftware/WASDI/issues"}, "release_url": "https://pypi.org/project/wasdi/0.4.1/", "requires_dist": ["requests"], "requires_python": "", "summary": "The Wasdi Python library", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>WASDI Python Library</h1>\n<p>WASDI is the Web Advanced Space Developer Interface. This software is a <strong>preliminary version</strong> of the Python Library you can use to access the <a href=\"http://www.wasdi.net\" rel=\"nofollow\">WASDI</a> platform functionalities from your Python code.</p>\n<p>Visit us at <a href=\"http://www.wasdi.net\" rel=\"nofollow\">http://www.wasdi.net</a></p>\n<p>The source code can be found <a href=\"https://github.com/fadeoutsoftware/WASDI/tree/develop/libraries/waspy\" rel=\"nofollow\">here</a></p>\n<hr>\n<h2>Python tutorial</h2>\n<p>WASPY is the <strong>WAS</strong>DI <strong>Py</strong>thon Library.</p>\n<h3>Prerequisites:</h3>\n<p>mandatory:</p>\n<ul>\n<li>a <a href=\"http://www.wasdi.net\" rel=\"nofollow\">WASDI</a> registered user (with a username/password, google users are not supported yet)</li>\n<li>at least one workspace</li>\n<li>some EO products in your workspace</li>\n</ul>\n<p>Optional:</p>\n<ul>\n<li><a href=\"https://senbox.atlassian.net/wiki/spaces/SNAP/pages/50855941/Configure+Python+to+use+the+SNAP-Python+snappy+interface\" rel=\"nofollow\">SNAP Python (snappy) interface</a>: this is not necessary but you may find these useful, especially for reading and writing images locally (<a href=\"https://senbox.atlassian.net/wiki/spaces/SNAP/pages/19300362/How+to+use+the+SNAP+API+from+Python\" rel=\"nofollow\">howto</a>). Anyway, most of the SNAP functionalities are wrapped by WASDI, so don't worry.</li>\n</ul>\n<h3>Installation</h3>\n<p>To start working with WASPY, just install the library using:</p>\n<pre>pip install wasdi\n</pre>\n<p>To quickly check if the installation worked correctly, try running the following code:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">wasdi</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">hello</span><span class=\"p\">())</span>\n</pre>\n<p>You should see this kind of output:</p>\n<pre><span class=\"p\">{</span><span class=\"nt\">\"boolValue\"</span><span class=\"p\">:</span><span class=\"kc\">null</span><span class=\"p\">,</span><span class=\"nt\">\"doubleValue\"</span><span class=\"p\">:</span><span class=\"kc\">null</span><span class=\"p\">,</span><span class=\"nt\">\"intValue\"</span><span class=\"p\">:</span><span class=\"kc\">null</span><span class=\"p\">,</span><span class=\"nt\">\"stringValue\"</span><span class=\"p\">:</span><span class=\"s2\">\"Hello Wasdi!!\"</span><span class=\"p\">}</span>\n</pre>\n<h3>Configuration</h3>\n<p>Create a <code>config.json</code> file. It is a standard json file, which is used to store the credentials of the user and some other settings. The syntax is:</p>\n<pre><span class=\"err\">\u201cVARIABLE_NAME\u201d:</span> <span class=\"err\">value</span>\n</pre>\n<p>Hint: exploit an editor which can check the syntax (there are many which can be accessed online for free)</p>\n<p>The minimal configuration to begin working with WASPY is:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"USER\"</span><span class=\"p\">:</span> <span class=\"s2\">\"yourUser@wasdi.net\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"PASSWORD\"</span><span class=\"p\">:</span> <span class=\"s2\">\"yourPasswordHere\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"WORKSPACE\"</span><span class=\"p\">:</span> <span class=\"s2\">\"nameOfTheWorkspaceYouWantToUse\"</span>\n<span class=\"p\">}</span>\n</pre>\n<p>For the other available parameters please refer to the Documentation.</p>\n<h3>Start WASPY</h3>\n<p>To start WASPY and check if everything is working, run the following code:</p>\n<pre><span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"s1\">'./config.json'</span><span class=\"p\">)</span>\n</pre>\n<p>(Adapt the path if the file is not located in your working directory)</p>\n<p>The Lib will read the configuration file, load the user and password, log the user in, and then open the workspace specified in the configuration file. To check if everything is working, try to get the list of workspaces available for the user:</p>\n<pre><span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">getWorkspaces</span><span class=\"p\">()</span>\n</pre>\n<p>You should be able to see a result similar to the following one:</p>\n<pre><span class=\"p\">[{</span><span class=\"sa\">u</span><span class=\"s1\">'ownerUserId'</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s1\">'yourUser@wasdi.net'</span><span class=\"p\">,</span>\n  <span class=\"sa\">u</span><span class=\"s1\">'sharedUsers'</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n  <span class=\"sa\">u</span><span class=\"s1\">'workspaceId'</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s1\">'23ab54f3-b453-2b3e-284a-b6a4243f0f2c'</span><span class=\"p\">,</span>\n  <span class=\"sa\">u</span><span class=\"s1\">'workspaceName'</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s1\">'nameOfTheWorkspaceYouWantToUse'</span><span class=\"p\">},</span>\n <span class=\"p\">{</span><span class=\"sa\">u</span><span class=\"s1\">'ownerUserId'</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s1\">'yourUser@wasdi.net'</span><span class=\"p\">,</span>\n  <span class=\"sa\">u</span><span class=\"s1\">'sharedUsers'</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n  <span class=\"sa\">u</span><span class=\"s1\">'workspaceId'</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s1\">'103fbf01-2e68-22d3-bd45-2cf95665dac2'</span><span class=\"p\">,</span>\n  <span class=\"sa\">u</span><span class=\"s1\">'workspaceName'</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s1\">'theNameOfAnotherWorkspace'</span><span class=\"p\">}]</span>\n</pre>\n<p>The configured Workspace is already opened.  The use can open another workspace using:</p>\n<pre><span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">openWorkspace</span><span class=\"p\">(</span><span class=\"s1\">'theNameOfAnotherWorkspace'</span><span class=\"p\">)</span>\n</pre>\n<p>and the lib replies showing the workspace unique id:</p>\n<pre><span class=\"sa\">u</span><span class=\"s1\">'9ce787d4-1d59-4146-8df7-3fc9516d4eb3'</span>\n</pre>\n<p>To get the list of the products available in the workspace, call</p>\n<pre><span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">getProductsByWorkspace</span><span class=\"p\">(</span><span class=\"s1\">'nameOfTheWorkspaceYouWantToUse'</span><span class=\"p\">)</span>\n</pre>\n<p>and the lib returns a list of the products in the given workspace:</p>\n<pre><span class=\"p\">[</span><span class=\"sa\">u</span><span class=\"s1\">'S1A_IW_GRDH_1SDV_20190517T053543_20190517T053608_027263_0312F1_F071.zip'</span><span class=\"p\">,</span>\n<span class=\"sa\">u</span><span class=\"s1\">'S1B_IW_RAW__0SDV_20190506T052631_20190506T052703_016119_01E53A_D2AD.zip'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'S1A_IW_GRDH_1SDV_20190517T053608_20190517T053633_027263_0312F1_3382.zip'</span><span class=\"p\">]</span>\n</pre>\n<p>Now try something more, let's search for some Sentinel 1 images. Let's assume we are interested in images taken from \"2018-09-01\" to \"2018-09-02\". Also, we'd better specify a bounding box. Assume we're interested in images with <em>latitude</em> in <code>[43, 44]</code> and <em>longitude</em> in <code>[11, 12]</code>. We can think of these coordinates as a rectangle limited by the upper left corner <code>(44, 11)</code> and the lower right corner<code>(43, 12)</code>.\nThe corresponding code is:</p>\n<pre><span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">wasdiLog</span><span class=\"p\">(</span><span class=\"s1\">'Let</span><span class=\"se\">\\'</span><span class=\"s1\">s search some images'</span><span class=\"p\">)</span>\n<span class=\"n\">aoImages</span> <span class=\"o\">=</span> <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">searchEOImages</span><span class=\"p\">(</span><span class=\"s2\">\"S1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"2018-09-01\"</span><span class=\"p\">,</span> <span class=\"s2\">\"2018-09-02\"</span><span class=\"p\">,</span> <span class=\"mi\">44</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">43</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">wasdiLog</span><span class=\"p\">(</span><span class=\"s1\">'Found '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">aoImages</span><span class=\"p\">)))</span>\n</pre>\n<p>The output should be similar to this:</p>\n<pre><code> Let's search some images\n[INFO] waspy.searchEOImages: search results:\n[{\n\t\t'footprint': 'POLYGON ((8.8724 45.3272, 8.4505 43.3746, 11.4656 43.0981, 11.9901 45.0472, 8.8724 45.3272, 8.8724 45.3272))',\n\t\t'id': 'cba6c104-3006-4af7-a2d1-cbd55f58b939',\n\t\t'link': 'https://catalogue.onda-dias.eu/dias-catalogue/Products(cba6c104-3006-4af7-a2d1-cbd55f58b939)/$value',\n\t\t'preview': None,\n\t\t'properties': {\n\t\t\t'offline': 'false',\n\t\t\t'downloadable': '',\n\t\t\t'filename': 'S1A_IW_RAW__0SDV_20180902T052727_20180902T052759_023515_028F75_7325.zip',\n\t\t\t'size': '1.54 GB',\n\t\t\t'pseudopath': 'RADAR/LEVEL-0/2018/09/02, S1/1A/SAR-C/LEVEL-0/IW_RAW__0S/2018/09/02, S1/1A/LEVEL-0/IW_RAW__0S/2018/09/02, S1/SAR-C/LEVEL-0/IW_RAW__0S/2018/09/02, S1/LEVEL-0/IW_RAW__0S/2018/09/02, 2014-016A/SAR-C/LEVEL-0/IW_RAW__0S/2018/09/02, 2014-016A/LEVEL-0/IW_RAW__0S/2018/09/02',\n\t\t\t'link': 'https://catalogue.onda-dias.eu/dias-catalogue/Products(cba6c104-3006-4af7-a2d1-cbd55f58b939)/$value',\n\t\t\t'format': 'application/zip',\n\t\t\t'creationDate': '2018-09-03T05:12:37.000Z'\n\t\t},\n\t\t'provider': 'ONDA',\n\t\t'summary': 'Date: 2018-09-03T05:12:37.000Z, Instrument: null, Mode: null, Satellite: null, Size: 1.54 GB',\n\t\t'title': 'S1A_IW_RAW__0SDV_20180902T052727_20180902T052759_023515_028F75_7325'\n},\n{'(...7 more results similar to this one, omitted for brevity)'}]\nFound 8\n</code></pre>\n<p>Now we can import one of those products in WASDI: let's download the first one:</p>\n<pre><span class=\"n\">sImportWithDict</span> <span class=\"o\">=</span> <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">importProduct</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">aoImages</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n</pre>\n<p>We can see a list of the products in the workspace as follows:</p>\n<pre><span class=\"n\">asProducts</span> <span class=\"o\">=</span> <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">getProductsByActiveWorkspace</span><span class=\"p\">()</span>\n<span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">wasdiLog</span><span class=\"p\">(</span><span class=\"n\">asProducts</span><span class=\"p\">)</span>\n</pre>\n<p>The second line logs the list of products</p>\n<h3>Running an existing workflow</h3>\n<p>If you wish to run an existing SNAP workflow you can use <code>wasdi.executeWorkflow</code>. For example, if you wish to execute a workflow that calibrates and corrects the georeference of a Sentinel 1 image, you may use the workflow called <code>LISTSinglePreproc</code> in this way:</p>\n<pre><span class=\"n\">asProducts</span> <span class=\"o\">=</span> <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">getProductsByActiveWorkspace</span><span class=\"p\">()</span>\n<span class=\"n\">sStatus</span> <span class=\"o\">=</span> <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">executeWorkflow</span><span class=\"p\">([</span><span class=\"n\">asProducts</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]],</span> <span class=\"p\">[</span><span class=\"s1\">'lovelyOutput'</span><span class=\"p\">],</span> <span class=\"s1\">'LISTSinglePreproc'</span><span class=\"p\">)</span>\n</pre>\n<p>Here the first line gets the list of products and the second calls the workflow <code>LISTSinglePreproc</code> on the first product of the workspace and creates another product called <code>lovelyOutput</code>.</p>\n<h3>A more complete example</h3>\n<p>Now put everything back together. Create a file called <a href=\"https://github.com/fadeoutsoftware/WASDI/blob/develop/libraries/waspy/examples/myProcessor.py\" rel=\"nofollow\"><code>myProcessor.py</code></a> (follow the link to download the file) with the following content:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">wasdi</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"n\">parameters</span><span class=\"p\">,</span> <span class=\"n\">processId</span><span class=\"p\">):</span>\n    <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">wasdiLog</span><span class=\"p\">(</span><span class=\"s1\">'Here</span><span class=\"se\">\\'</span><span class=\"s1\">s the list of your workspaces:'</span><span class=\"p\">)</span>\n    <span class=\"n\">aoWorkspaces</span> <span class=\"o\">=</span> <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">getWorkspaces</span><span class=\"p\">()</span>\n    <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">wasdiLog</span><span class=\"p\">(</span><span class=\"n\">aoWorkspaces</span><span class=\"p\">)</span>\n    <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">wasdiLog</span><span class=\"p\">(</span><span class=\"s1\">'The ID of currently selected workspace is:'</span><span class=\"p\">)</span>\n    <span class=\"n\">sActiveWorkspace</span> <span class=\"o\">=</span> <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">getActiveWorkspaceId</span><span class=\"p\">()</span>\n    <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">wasdiLog</span><span class=\"p\">(</span><span class=\"n\">sActiveWorkspace</span><span class=\"p\">)</span>\n\n    <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">wasdiLog</span><span class=\"p\">(</span><span class=\"s1\">'Let</span><span class=\"se\">\\'</span><span class=\"s1\">s search some images...'</span><span class=\"p\">)</span>\n    <span class=\"n\">aoImages</span> <span class=\"o\">=</span> <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">searchEOImages</span><span class=\"p\">(</span><span class=\"s2\">\"S1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"2018-09-01\"</span><span class=\"p\">,</span> <span class=\"s2\">\"2018-09-02\"</span><span class=\"p\">,</span> <span class=\"mi\">44</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">43</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"n\">sProductType</span><span class=\"o\">=</span><span class=\"s1\">'GRD'</span><span class=\"p\">)</span>\n    <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">wasdiLog</span><span class=\"p\">(</span><span class=\"s1\">'Found '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">aoImages</span><span class=\"p\">))</span> <span class=\"o\">+</span> <span class=\"s1\">' images'</span><span class=\"p\">)</span>\n\n    <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">wasdiLog</span><span class=\"p\">(</span><span class=\"s1\">'Download the first one passing the dictionary...'</span><span class=\"p\">)</span>\n    <span class=\"n\">sImportWithDict</span> <span class=\"o\">=</span> <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">importProduct</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">aoImages</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n    <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">wasdiLog</span><span class=\"p\">(</span><span class=\"s1\">'Import with dict returned: '</span> <span class=\"o\">+</span> <span class=\"n\">sImportWithDict</span><span class=\"p\">)</span>\n\n    <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">wasdiLog</span><span class=\"p\">(</span><span class=\"s1\">'Now, these are the products in your workspace: '</span><span class=\"p\">)</span>\n    <span class=\"n\">asProducts</span> <span class=\"o\">=</span> <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">getProductsByActiveWorkspace</span><span class=\"p\">()</span>\n    <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">wasdiLog</span><span class=\"p\">(</span><span class=\"n\">asProducts</span><span class=\"p\">)</span>\n\n    <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">wasdiLog</span><span class=\"p\">(</span><span class=\"s1\">'Let</span><span class=\"se\">\\'</span><span class=\"s1\">s run a workflow on the first image to rectify its georeference...'</span><span class=\"p\">)</span>\n    <span class=\"n\">sStatus</span> <span class=\"o\">=</span> <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">executeWorkflow</span><span class=\"p\">([</span><span class=\"n\">asProducts</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]],</span> <span class=\"p\">[</span><span class=\"s1\">'lovelyOutput'</span><span class=\"p\">],</span> <span class=\"s1\">'LISTSinglePreproc'</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">sStatus</span> <span class=\"o\">==</span> <span class=\"s1\">'DONE'</span><span class=\"p\">:</span>\n        <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">wasdiLog</span><span class=\"p\">(</span><span class=\"s1\">'The product is now in your workspace, look at it on the website'</span><span class=\"p\">)</span>\n\n    <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">wasdiLog</span><span class=\"p\">(</span><span class=\"s1\">'It</span><span class=\"se\">\\'</span><span class=\"s1\">s over!'</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">WasdiHelp</span><span class=\"p\">():</span>\n    <span class=\"n\">sHelp</span> <span class=\"o\">=</span> <span class=\"s2\">\"Wasdi Tutorial\"</span>\n    <span class=\"k\">return</span> <span class=\"n\">sHelp</span>\n</pre>\n<p>Then create another file to start the processor. Let's call it <a href=\"https://github.com/fadeoutsoftware/WASDI/blob/develop/libraries/waspy/examples/tutorial.py\" rel=\"nofollow\"><code>tutorial.py</code></a> (follow the link to download the file), with the following content:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">myProcessor</span>\n<span class=\"kn\">import</span> <span class=\"nn\">wasdi</span>\n\n<span class=\"n\">bInitResult</span> <span class=\"o\">=</span> <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"s1\">'config.json'</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">bInitResult</span><span class=\"p\">:</span>\n    <span class=\"n\">myProcessor</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">getParametersDict</span><span class=\"p\">(),</span> <span class=\"s1\">''</span><span class=\"p\">)</span>\n</pre>\n<p>Now, if you run <code>tutorial.py</code>, it will call <code>myProcessor.py</code>, which will go through the instructions we saw above. Pro tip: keep the browser open in wasdi.net (make sure you are logged in) and open the workspace you are using, to see the evolution of the script in real time.</p>\n<h3>Deploy your processor on WASDI</h3>\n<p>Finally, to deply our processor on WASDI, you need first to create a text file called <a href=\"https://github.com/fadeoutsoftware/WASDI/blob/develop/libraries/waspy/examples/pip.txt\" rel=\"nofollow\"><code>pip.txt</code></a> (follow the link to download the file) containg the packages we imported in <code>myProcessor.py</code>, one per line. Since we just imported <code>wasdi</code>, it should look like this:</p>\n<pre><code>wasdi\n</code></pre>\n<p>Now, create a zip file containing these two files:</p>\n<ul>\n<li><code>myProcessor.py</code></li>\n<li><code>pip.txt</code></li>\n</ul>\n<p>You can now upload the zip file on wasdi.net from <em>Edit</em> -&gt; <em>Processor</em> -&gt; <em>New WASDI App</em> by giving it a name and completing the other details. You will need to do this just once.\nTo run it, go to <em>WADI Apps</em> -&gt; (select yours) -&gt; no parameters are needed, so just enter <code>{}</code> and clic <em>run</em>.</p>\n<hr>\n<h3>More to include WASDI in a custom Processor</h3>\n<p>Let\u2019s assume that the developer has his own EO Product Manipulation Code. At some point, the developer wishes to read his own input file, then make elaborations and finally save an output file.</p>\n<p>Let\u2019s imagine a pseudo-code like this.</p>\n<pre><span class=\"c1\"># Input and output file name</span>\n<span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"s1\">'~wasdiUser/EO/myfile.zip'</span>\n<span class=\"n\">outputfilename</span> <span class=\"o\">=</span> <span class=\"s2\">\"~wasdiUser/EO/myoutput.tiff\"</span>\n\n<span class=\"c1\"># Read the file</span>\n<span class=\"n\">EOimage</span> <span class=\"o\">=</span> <span class=\"n\">multibandRead</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">,</span> <span class=\"n\">precision</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"p\">,</span> <span class=\"n\">interleave</span><span class=\"p\">,</span> <span class=\"n\">byteorder</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Elaborate the image somehow</span>\n<span class=\"n\">EOimage</span> <span class=\"o\">*=</span> <span class=\"mi\">2</span>\n\n<span class=\"c1\"># Save the output</span>\n<span class=\"n\">imwrite</span><span class=\"p\">(</span><span class=\"n\">EOimage</span><span class=\"p\">,</span> <span class=\"n\">outputfilename</span><span class=\"p\">)</span>\n</pre>\n<p>To port the code onto WASDI, the pseudo-code has to be integrated like this:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">wasdi</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"s1\">'myfile.zip'</span>\n<span class=\"n\">outputFileName</span> <span class=\"o\">=</span> <span class=\"s1\">'myoutput.tiff'</span>\n\n<span class=\"n\">fullInputPath</span> <span class=\"o\">=</span> <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">getFullProductPath</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Read the file</span>\n<span class=\"n\">EOproduct</span> <span class=\"o\">=</span> <span class=\"n\">multibandRead</span><span class=\"p\">(</span><span class=\"n\">fullInputPath</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">,</span> <span class=\"n\">precision</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"p\">,</span> <span class=\"n\">interleave</span><span class=\"p\">,</span> <span class=\"n\">byteorder</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Elaborate the image</span>\n<span class=\"n\">EOproduct</span> <span class=\"o\">*=</span> <span class=\"mi\">2</span>\n\n<span class=\"c1\"># Save the output</span>\n<span class=\"c1\"># Get The Path</span>\n<span class=\"n\">outputPath</span> <span class=\"o\">=</span> <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">getSavePath</span><span class=\"p\">()</span>\n<span class=\"n\">fullOutputPath</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">outputPath</span><span class=\"p\">,</span> <span class=\"n\">outputFileName</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Use the save path</span>\n<span class=\"n\">imwrite</span><span class=\"p\">(</span><span class=\"n\">EOproduct</span><span class=\"p\">,</span> <span class=\"n\">fullOutputPath</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Ingest in WASDI</span>\n<span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">addFileToWASDI</span><span class=\"p\">(</span><span class=\"n\">outputFileName</span><span class=\"p\">)</span>\n</pre>\n<p>We modified the code to start the library and then to receive from WASDI the paths to use.</p>\n<p>The input files are supposed to be in the workspace. In order for this to happen, the user can go the wasdi web application, open the workspace, search the needed image and add it to the workspace.</p>\n<p>The <code>wasdi.getFullProductPath</code> method has a double goal:</p>\n<ol>\n<li>as the name suggests, it returns the local path to use back to the developer</li>\n<li>if the code is running on the client PC, the Wasdi Lib will checks if the file is available locally: in case this checks fails, the lib will automatically download the file from the WASDI cloud to the local PC. <br>\nTo disable the auto download feature, is possible to add this parameter to the <code>config.json</code> file:\\</li>\n</ol>\n<pre><span class=\"s2\">\"DOWNLOADACTIVE\"</span><span class=\"err\">:</span><span class=\"mi\">0</span>\n</pre>\n<p>The choice of a name for the output file is left to the user,  WASPY just provides the folder to use (<code>wasdi.GetSavePath</code>). So to save the file we need to get the path and then concatenate the custom file name (<code>fullOutputPath = os.path.join(outputPath, outputFileName)</code>).</p>\n<p>The last call, <code>AddFileToWASDI</code>, has the goal to add the product to the workspace. It takes in input only the file name, without the full path.</p>\n<p>When used on the local PC, it will automatically upload the file after writing it on local file system. To inhibit this behavior, just add the following to the <code>config.json</code>:\\</p>\n<pre><span class=\"s2\">\"UPLOADACTIVE\"</span><span class=\"err\">:</span><span class=\"mi\">0</span>\n</pre>\n<h3>Use Custom parameters</h3>\n<p>Every processor usually has its own parameters. A typical example can be the name of a file in input, a threshold, the coordinates of an area of interest and so on. To let the developer work with her/his own parameters, WASPY implements an automatic file read.</p>\n<p>Add this line to the configuration file <code>config.json</code>:</p>\n<pre><span class=\"s2\">\"PARAMETERSFILEPATH\"</span><span class=\"err\">:</span> <span class=\"s2\">\"&lt;path to a similar file for own parameters&gt;\"</span>\n</pre>\n<p>e.g.</p>\n<pre><span class=\"s2\">\"PARAMETERSFILEPATH\"</span><span class=\"err\">:</span> <span class=\"s2\">\"c:/temp/myparameters.txt\"</span>\n</pre>\n<p>Then create the same file in the right folder and fill it with all the needed parameters, using the same syntax used for <code>config.json</code>; e.g.:</p>\n<pre><span class=\"s2\">\"INPUTFILE\"</span><span class=\"err\">:</span> <span class=\"s2\">\"S1A_imported_file.zip\"</span><span class=\"err\">,</span>\n<span class=\"s2\">\"THRESHOLD\"</span><span class=\"err\">:</span> <span class=\"mi\">5</span><span class=\"err\">,</span>\n<span class=\"s2\">\"POINT\"</span><span class=\"err\">:</span> <span class=\"p\">[</span><span class=\"mf\">44.2</span><span class=\"p\">,</span> <span class=\"mf\">23.4</span><span class=\"p\">]</span>\n</pre>\n<p>The decision about how to encode these parameters is left to the developer. For WASDI these are all strings. In the example above, the developers may know that THRESHOLD is a number, and POINT is couple of coordinates that must to be splitted.</p>\n<p>The only limit is that each parameter has to be written in one line.</p>\n<p>In WASPY there are these three methods available:</p>\n<ul>\n<li><code>wasdi.getParameter(sKey)</code>: return the value of the sKey Parameter</li>\n<li><code>wasdi.addParameter(sKey, sValue)</code>: updates the value of a Parameter (ONLY in memory NOT in the file)</li>\n<li><code>wasdi.refreshParameters()</code>: reads the parameter file from disk again</li>\n</ul>\n<p>Let\u2019s update the code above to use the parameters file. First of all create a parameter file and set the name and path in the <code>config.json</code> file. The file (i.e., <code>parameters.json</code>) might look like this:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"INPUT_FILE\"</span><span class=\"p\">:</span> <span class=\"s2\">\"S1A_imported_file.zip\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"OUTPUT_FILE\"</span><span class=\"p\">:</span> <span class=\"s2\">\"FloodedArea.tif\"</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Then modify the code to read the parameters without using hard-coded input:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">wasdi</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"c1\"># The input file is supposed to be in the workspace</span>\n<span class=\"c1\"># Read the file from parameters</span>\n<span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">getParameter</span><span class=\"p\">(</span><span class=\"s2\">\"INPUT_FILE\"</span><span class=\"p\">)</span>\n<span class=\"n\">outputfilename</span> <span class=\"o\">=</span> <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">getParameter</span><span class=\"p\">(</span><span class=\"s2\">\"OUTPUT_FILE\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">fullInputPath</span> <span class=\"o\">=</span> <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">getFullProductPath</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Read the file</span>\n<span class=\"n\">EOproduct</span> <span class=\"o\">=</span> <span class=\"n\">multibandRead</span><span class=\"p\">(</span><span class=\"n\">fullInputPath</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">,</span> <span class=\"n\">precision</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"p\">,</span> <span class=\"n\">interleave</span><span class=\"p\">,</span> <span class=\"n\">byteorder</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Elaborate the image</span>\n<span class=\"n\">EOproduct</span>  <span class=\"o\">*=</span> <span class=\"mi\">2</span>\n\n<span class=\"c1\"># Save the output</span>\n<span class=\"c1\"># Get The Path</span>\n<span class=\"n\">outputPath</span> <span class=\"o\">=</span> <span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">getSavePath</span><span class=\"p\">()</span>\n<span class=\"n\">fullOutputPath</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">outputPath</span><span class=\"p\">,</span> <span class=\"n\">outputFileName</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Use the save path</span>\n<span class=\"n\">imwrite</span><span class=\"p\">(</span><span class=\"n\">EOproduct</span><span class=\"p\">,</span> <span class=\"n\">fullOutputPath</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Ingest in WASDI</span>\n<span class=\"n\">wasdi</span><span class=\"o\">.</span><span class=\"n\">addFileToWASDI</span><span class=\"p\">(</span><span class=\"n\">outputFileName</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 7077597, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "5aac7ea19854deaac5252c9240675a1b", "sha256": "0648a6a73343168346f56eee2e625f69738e038fb31e36ed1e1b1d0fc90647b8"}, "downloads": -1, "filename": "wasdi-0.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "5aac7ea19854deaac5252c9240675a1b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 13847, "upload_time": "2019-06-17T15:52:53", "upload_time_iso_8601": "2019-06-17T15:52:53.239392Z", "url": "https://files.pythonhosted.org/packages/ff/93/9a62618f1190baf9b8bf9597b231175c4de038d2ce167fc23feadefefae9/wasdi-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "57e114b592dc04fc05aa47fbfcecf220", "sha256": "4ad4012f4975f7280c4295de107eaac0871ab70e712b3707c2863726c01ec79c"}, "downloads": -1, "filename": "wasdi-0.1.1.tar.gz", "has_sig": false, "md5_digest": "57e114b592dc04fc05aa47fbfcecf220", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12920, "upload_time": "2019-06-17T15:52:57", "upload_time_iso_8601": "2019-06-17T15:52:57.023022Z", "url": "https://files.pythonhosted.org/packages/8a/17/24896d50e40d0c00242407e21fb6e30de3823cc06e92f8fd45f500209946/wasdi-0.1.1.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "1820f52f05d01757eaece77bae75597b", "sha256": "f7f5b8fd9f19565ebac4eb6225b8104399b018c7fece34178ebb57be8ab031d1"}, "downloads": -1, "filename": "wasdi-0.1.11-py2-none-any.whl", "has_sig": false, "md5_digest": "1820f52f05d01757eaece77bae75597b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 19969, "upload_time": "2019-07-10T15:09:16", "upload_time_iso_8601": "2019-07-10T15:09:16.225766Z", "url": "https://files.pythonhosted.org/packages/d0/46/959c7fff99f3d1d093c7ca933720d09a892a8a7c69e5fe6a83e3733b0c06/wasdi-0.1.11-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "03a7032563a3830a06dbcdaf8ab7f255", "sha256": "c9bab64225882e7726772461e97898f90f9ac9e7bc1297d0ae338bf82a5a316c"}, "downloads": -1, "filename": "wasdi-0.1.11.tar.gz", "has_sig": false, "md5_digest": "03a7032563a3830a06dbcdaf8ab7f255", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25382, "upload_time": "2019-07-10T15:09:27", "upload_time_iso_8601": "2019-07-10T15:09:27.068712Z", "url": "https://files.pythonhosted.org/packages/e0/7a/75ba8d1829d47bbd432569db302f5aab22b0f26c70a93ee79dbf8b1f1262/wasdi-0.1.11.tar.gz", "yanked": false}], "0.1.12": [{"comment_text": "", "digests": {"md5": "c9da62ec50a3eeabc1913c9fc796970e", "sha256": "6203728b1a79f1559cc7525311491358e69bcc799772681939150e705510f2bb"}, "downloads": -1, "filename": "wasdi-0.1.12.tar.gz", "has_sig": false, "md5_digest": "c9da62ec50a3eeabc1913c9fc796970e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18776, "upload_time": "2019-07-10T18:17:37", "upload_time_iso_8601": "2019-07-10T18:17:37.626781Z", "url": "https://files.pythonhosted.org/packages/27/5f/008f9933248ed20b24b825cfa076640d8a4e5d9df8eb9af13021d4a61911/wasdi-0.1.12.tar.gz", "yanked": false}], "0.1.13": [{"comment_text": "", "digests": {"md5": "20504ceaac245c3a34f8f5c4cc193cd7", "sha256": "5f2b3be2e33e30ccbafe77f92ffac27eb8e8d1a40119c2fddd91807fa2d373a1"}, "downloads": -1, "filename": "wasdi-0.1.13-py3-none-any.whl", "has_sig": false, "md5_digest": "20504ceaac245c3a34f8f5c4cc193cd7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19901, "upload_time": "2019-09-04T09:43:10", "upload_time_iso_8601": "2019-09-04T09:43:10.617559Z", "url": "https://files.pythonhosted.org/packages/31/33/b9aafc8d8c885ec07da5405a3ab43cd944f75490d03e7960c107a53453f7/wasdi-0.1.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4445911c243410f57fe9b17ac4591ec", "sha256": "0608b25b5f967d705a678f537754ac4a12c3c1f8d88c3592dccd0ab8b4ed54fa"}, "downloads": -1, "filename": "wasdi-0.1.13.tar.gz", "has_sig": false, "md5_digest": "a4445911c243410f57fe9b17ac4591ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25369, "upload_time": "2019-09-04T09:43:13", "upload_time_iso_8601": "2019-09-04T09:43:13.619342Z", "url": "https://files.pythonhosted.org/packages/13/09/9c9019e5d938ea2fd510599565e3d576779f68756a4bf8803f0eccfade82/wasdi-0.1.13.tar.gz", "yanked": false}], "0.1.14": [{"comment_text": "", "digests": {"md5": "ec036d6c17cf306b6854f8c97af8f645", "sha256": "6ea19db8a1a8cef614098d74aa386085678149abeb9a48fa523b857ed7365816"}, "downloads": -1, "filename": "wasdi-0.1.14-py3-none-any.whl", "has_sig": false, "md5_digest": "ec036d6c17cf306b6854f8c97af8f645", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19919, "upload_time": "2019-09-04T12:12:10", "upload_time_iso_8601": "2019-09-04T12:12:10.478783Z", "url": "https://files.pythonhosted.org/packages/e5/fc/c451aa56cc3324dac23a93bed11defa879879fdf8ef53ee689b819e8bfc0/wasdi-0.1.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "813cdccd14647ade9b44a0c7fd33c4cf", "sha256": "1bcc26b9e619c5624f01a686f8004a036bcd79f2a9e89444c181a806be6ae736"}, "downloads": -1, "filename": "wasdi-0.1.14.tar.gz", "has_sig": false, "md5_digest": "813cdccd14647ade9b44a0c7fd33c4cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25391, "upload_time": "2019-09-04T12:12:14", "upload_time_iso_8601": "2019-09-04T12:12:14.905307Z", "url": "https://files.pythonhosted.org/packages/7b/6e/7a416d093c9f64d28a365c9bce1ac1bc43dc2d86c2f6da1ca80ea935f37b/wasdi-0.1.14.tar.gz", "yanked": false}], "0.1.15": [{"comment_text": "", "digests": {"md5": "161f728bfb4435e798b0ceac387ce7a0", "sha256": "a0f81a9df1920e53d6cbcfcc06a274a85f20851fb37c8d1738be2a9166566047"}, "downloads": -1, "filename": "wasdi-0.1.15-py3-none-any.whl", "has_sig": false, "md5_digest": "161f728bfb4435e798b0ceac387ce7a0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20055, "upload_time": "2019-09-06T19:45:26", "upload_time_iso_8601": "2019-09-06T19:45:26.129619Z", "url": "https://files.pythonhosted.org/packages/e9/ab/a91c2585e1f82f92b43eebb58446e4b4ddca872628809fdb93c451335427/wasdi-0.1.15-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "63f411c1729928d4f75d55d62aa929af", "sha256": "268dae84cdaa9bf79504a4f2dd7b7f8966b80ea3abca9da793e45ab371ea11d5"}, "downloads": -1, "filename": "wasdi-0.1.15.tar.gz", "has_sig": false, "md5_digest": "63f411c1729928d4f75d55d62aa929af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25563, "upload_time": "2019-09-06T19:45:28", "upload_time_iso_8601": "2019-09-06T19:45:28.574409Z", "url": "https://files.pythonhosted.org/packages/e4/30/5a05509b0660eeaa56a249a62c68a24c76e365059d8942e913c05d965c50/wasdi-0.1.15.tar.gz", "yanked": false}], "0.1.16": [{"comment_text": "", "digests": {"md5": "a00d12c5cde3359a7100b4b836830ba8", "sha256": "c0ac01a203b7b58da43a915ea03d1ad4f3027bc6f122a5c524da8484f885dc93"}, "downloads": -1, "filename": "wasdi-0.1.16-py3-none-any.whl", "has_sig": false, "md5_digest": "a00d12c5cde3359a7100b4b836830ba8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20342, "upload_time": "2019-09-16T14:48:06", "upload_time_iso_8601": "2019-09-16T14:48:06.730395Z", "url": "https://files.pythonhosted.org/packages/94/c7/203bb0daec50156e41ff0b2496b7378acd424f0b9b6347ff1d151e937c1d/wasdi-0.1.16-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "756625d8cd90e8e6ce2e5864332ffc4e", "sha256": "f85e2402341e3f5889a7418f366c939781cab04fa57c88f5976d651f8b8afeca"}, "downloads": -1, "filename": "wasdi-0.1.16.tar.gz", "has_sig": false, "md5_digest": "756625d8cd90e8e6ce2e5864332ffc4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25814, "upload_time": "2019-09-16T14:48:08", "upload_time_iso_8601": "2019-09-16T14:48:08.860757Z", "url": "https://files.pythonhosted.org/packages/93/0f/a6c4dd1a496de871a715ae1f848ede6d5b88ec426032829c1350ef990fc3/wasdi-0.1.16.tar.gz", "yanked": false}], "0.1.17": [{"comment_text": "", "digests": {"md5": "dd3e7ec362923aefc37369a85f8d15be", "sha256": "5cb3b624fc6c804081d86f3afa3500941aa3c60e79fa75c2e49efea39c210c71"}, "downloads": -1, "filename": "wasdi-0.1.17-py3-none-any.whl", "has_sig": false, "md5_digest": "dd3e7ec362923aefc37369a85f8d15be", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21298, "upload_time": "2019-10-15T16:22:39", "upload_time_iso_8601": "2019-10-15T16:22:39.168375Z", "url": "https://files.pythonhosted.org/packages/18/68/b069538e9b25aa9321ad1a5c4a289c6064f3d84bce54d836dae8a341cbc2/wasdi-0.1.17-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "458e2d4395d88e03b5be1d270bc71051", "sha256": "3d4bb1afac03a5ab0430fc59e3be3cc04f0ac530ddf2fe06db030539ccfaa9e4"}, "downloads": -1, "filename": "wasdi-0.1.17.tar.gz", "has_sig": false, "md5_digest": "458e2d4395d88e03b5be1d270bc71051", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26720, "upload_time": "2019-10-15T16:22:41", "upload_time_iso_8601": "2019-10-15T16:22:41.559330Z", "url": "https://files.pythonhosted.org/packages/df/b8/cb5f851bf2ab181db61c9dc9194471c086b05b7d43bed3b051fd9c440856/wasdi-0.1.17.tar.gz", "yanked": false}], "0.1.18": [{"comment_text": "", "digests": {"md5": "ebb1a48412556ce98585c163917c9c37", "sha256": "2a975812455a117ad57e0778baa236a06783db5bef855260fb848ab0521beae3"}, "downloads": -1, "filename": "wasdi-0.1.18-py3-none-any.whl", "has_sig": false, "md5_digest": "ebb1a48412556ce98585c163917c9c37", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21441, "upload_time": "2019-10-15T16:39:49", "upload_time_iso_8601": "2019-10-15T16:39:49.339523Z", "url": "https://files.pythonhosted.org/packages/98/35/d3ba405d6388e73335dedcf6f70e1dd2caaddcc38a92b938a23d9cc3e790/wasdi-0.1.18-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d5597f80c55c6ccf744b1f7287b654ab", "sha256": "69ecd1af5bb1debb3c369ebd58427f0c687d237aa8e7ecfbe5033861276ee5c5"}, "downloads": -1, "filename": "wasdi-0.1.18.tar.gz", "has_sig": false, "md5_digest": "d5597f80c55c6ccf744b1f7287b654ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26862, "upload_time": "2019-10-15T16:39:51", "upload_time_iso_8601": "2019-10-15T16:39:51.309541Z", "url": "https://files.pythonhosted.org/packages/ca/1d/8c690b124d463342c3e8d10c7e04f352b977b27c4601dc70b2dd292a9178/wasdi-0.1.18.tar.gz", "yanked": false}], "0.1.19": [{"comment_text": "", "digests": {"md5": "2aee2239975e22fb3a92e1bff57136a1", "sha256": "93d6aa27df0a41bc7f654c344d68d187e768eb8770351cfa353f360497fb68d9"}, "downloads": -1, "filename": "wasdi-0.1.19-py3-none-any.whl", "has_sig": false, "md5_digest": "2aee2239975e22fb3a92e1bff57136a1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21417, "upload_time": "2019-10-15T16:45:38", "upload_time_iso_8601": "2019-10-15T16:45:38.278222Z", "url": "https://files.pythonhosted.org/packages/a5/bf/a67d3982c33c8ac540ad77bb0f15f8f83500d767f8c5bc7fd542c3f83b3a/wasdi-0.1.19-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d63732bdce991a5c330cfcbffcc78e2", "sha256": "39ab2a64922adfb06e4779bed46c3a9f8200a874591c750553a608ae4ea95b0c"}, "downloads": -1, "filename": "wasdi-0.1.19.tar.gz", "has_sig": false, "md5_digest": "0d63732bdce991a5c330cfcbffcc78e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26845, "upload_time": "2019-10-15T16:45:40", "upload_time_iso_8601": "2019-10-15T16:45:40.142781Z", "url": "https://files.pythonhosted.org/packages/68/63/daaeef63f047007691efe5c1ef9df4f4de9bd2e5b28cf75beb4e066122cf/wasdi-0.1.19.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "5427da604193fd9f6c8ef1846973715b", "sha256": "9284bb22f29565eee11dcaa6e214eace07430ee6af6c2e087bfb2baf46a75965"}, "downloads": -1, "filename": "wasdi-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5427da604193fd9f6c8ef1846973715b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13839, "upload_time": "2019-06-17T15:52:55", "upload_time_iso_8601": "2019-06-17T15:52:55.669338Z", "url": "https://files.pythonhosted.org/packages/29/08/1288fa71d55f96b9ccec83da92a4fc0a59a1af6a9aa4e46483169e4cef1e/wasdi-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "27fa939b8e167ddab4e2b0f2fa100b51", "sha256": "58a37cf6369825eeac942f2ecef7a2fd4829b132dbd8e8d1135bca116f82bf4c"}, "downloads": -1, "filename": "wasdi-0.1.2.tar.gz", "has_sig": false, "md5_digest": "27fa939b8e167ddab4e2b0f2fa100b51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12914, "upload_time": "2019-06-17T15:52:58", "upload_time_iso_8601": "2019-06-17T15:52:58.308429Z", "url": "https://files.pythonhosted.org/packages/2f/6a/aa404e8d6184d14f7fa061ca878f37ce803899ffda82e96dc5eeda2c93d8/wasdi-0.1.2.tar.gz", "yanked": false}], "0.1.20": [{"comment_text": "", "digests": {"md5": "bbd83a48981b953c5910da0668303664", "sha256": "8178f4d7eda9fc67b8f29ed80177154d93f660d197797c1b39eb4d5b12b50c91"}, "downloads": -1, "filename": "wasdi-0.1.20-py3-none-any.whl", "has_sig": false, "md5_digest": "bbd83a48981b953c5910da0668303664", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21634, "upload_time": "2019-10-15T17:08:06", "upload_time_iso_8601": "2019-10-15T17:08:06.989925Z", "url": "https://files.pythonhosted.org/packages/b2/d0/444cfaa679dd9e826e48e90623016cdcc65cd0300576093dfae647ee1cdc/wasdi-0.1.20-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "130c2cba78dedc1e7ccc99564d8a8c36", "sha256": "d18cc5a8c1e0f5e3048f709d39652d828ff26b4b526cc7eda2c4acf5a0c7bf23"}, "downloads": -1, "filename": "wasdi-0.1.20.tar.gz", "has_sig": false, "md5_digest": "130c2cba78dedc1e7ccc99564d8a8c36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27032, "upload_time": "2019-10-15T17:08:09", "upload_time_iso_8601": "2019-10-15T17:08:09.329703Z", "url": "https://files.pythonhosted.org/packages/39/62/0b99f771b58b7ce0cb6a43d4ae6f021b504e67fd2e26d19b6a5488891fc2/wasdi-0.1.20.tar.gz", "yanked": false}], "0.1.21": [{"comment_text": "", "digests": {"md5": "bf08274e85f167d738525292276e0246", "sha256": "1e27df13f578bfd5c3ffddba6bc197d50d9858251612a9ff359fd424bca6d0cc"}, "downloads": -1, "filename": "wasdi-0.1.21-py3-none-any.whl", "has_sig": false, "md5_digest": "bf08274e85f167d738525292276e0246", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21659, "upload_time": "2019-10-15T17:11:07", "upload_time_iso_8601": "2019-10-15T17:11:07.472345Z", "url": "https://files.pythonhosted.org/packages/30/a7/39bbcc3dd66e989e8c0edc68756cfe35f833464815291255db1156d487e3/wasdi-0.1.21-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17fb9739318281cffdd683f9892cf4c4", "sha256": "ff5d8751b7cea60a2849d67e3e93dccba6a373cc0d5f9f15d48f948ae67ef33d"}, "downloads": -1, "filename": "wasdi-0.1.21.tar.gz", "has_sig": false, "md5_digest": "17fb9739318281cffdd683f9892cf4c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27056, "upload_time": "2019-10-15T17:11:09", "upload_time_iso_8601": "2019-10-15T17:11:09.640088Z", "url": "https://files.pythonhosted.org/packages/5f/39/128b45dbca30ed82257e298142d1da6d077e60529be82c4af894e8cf14ef/wasdi-0.1.21.tar.gz", "yanked": false}], "0.1.22": [{"comment_text": "", "digests": {"md5": "38dbb3116bf447b163027b215ee21644", "sha256": "e315405a3e09b0742c3f36a4fdd83d2702a0b8cf4d86001b5494b22c2253f81e"}, "downloads": -1, "filename": "wasdi-0.1.22-py3-none-any.whl", "has_sig": false, "md5_digest": "38dbb3116bf447b163027b215ee21644", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21592, "upload_time": "2019-10-16T14:06:41", "upload_time_iso_8601": "2019-10-16T14:06:41.326797Z", "url": "https://files.pythonhosted.org/packages/41/b2/819ff84e6884f15f8ab557f7b53f7070d22021d2e64c0f5186045cf03f98/wasdi-0.1.22-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "18d5e0c61ded99ac8abd2b901fe6dc1b", "sha256": "3239480fe9931f105539e491b0698085d83eb9ac53b37414af88764b63efb836"}, "downloads": -1, "filename": "wasdi-0.1.22.tar.gz", "has_sig": false, "md5_digest": "18d5e0c61ded99ac8abd2b901fe6dc1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26993, "upload_time": "2019-10-16T14:06:52", "upload_time_iso_8601": "2019-10-16T14:06:52.834867Z", "url": "https://files.pythonhosted.org/packages/8f/e8/474fee0a8214886c3b33eac5b3635b4e3e5dc45a30308cb47778515d1a31/wasdi-0.1.22.tar.gz", "yanked": false}], "0.1.23": [{"comment_text": "", "digests": {"md5": "20af7c9ef4a846942f05ead8767b1a54", "sha256": "0cfd8d1cc3d32c908852f3b994e2527379aa7a877124d1f91e3c18f4e96bb5ba"}, "downloads": -1, "filename": "wasdi-0.1.23-py2-none-any.whl", "has_sig": false, "md5_digest": "20af7c9ef4a846942f05ead8767b1a54", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 21685, "upload_time": "2019-10-23T19:05:42", "upload_time_iso_8601": "2019-10-23T19:05:42.732232Z", "url": "https://files.pythonhosted.org/packages/11/70/e94cfb77e2ede28b4dc58293ecfe11c5755dc742db021ea5bc41e2a5434f/wasdi-0.1.23-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5160643aa36a20c552e670a4fd55e088", "sha256": "1ece179b7e14f7854e59dcb4a906e0e089ea3700faf2cb054f90ea2aa1c9cbae"}, "downloads": -1, "filename": "wasdi-0.1.23.tar.gz", "has_sig": false, "md5_digest": "5160643aa36a20c552e670a4fd55e088", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27047, "upload_time": "2019-10-23T19:05:44", "upload_time_iso_8601": "2019-10-23T19:05:44.427588Z", "url": "https://files.pythonhosted.org/packages/8d/49/ac03a6f9c74449e9583e91805bc426141691ac6eaaa7b4f17a480756cad0/wasdi-0.1.23.tar.gz", "yanked": false}], "0.1.24": [{"comment_text": "", "digests": {"md5": "2ef1a5d33df26d61d4c68f0fb5e94057", "sha256": "04c6dda899f708a3c8992cf2d0f8ac68953abd768c49256aac235ab74dbf6244"}, "downloads": -1, "filename": "wasdi-0.1.24-py2-none-any.whl", "has_sig": false, "md5_digest": "2ef1a5d33df26d61d4c68f0fb5e94057", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 21871, "upload_time": "2019-10-24T10:44:24", "upload_time_iso_8601": "2019-10-24T10:44:24.287604Z", "url": "https://files.pythonhosted.org/packages/6c/9c/c2ee57e7da8bb5d11a1f722ac6361a7214437a6a62b0114f82cbdb152bac/wasdi-0.1.24-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "07ee2e15ac0e836fd8d925706ff86a2a", "sha256": "868e07bb522f8505955a02583472d2d3d09cea6c6be2daabd9109cf880101350"}, "downloads": -1, "filename": "wasdi-0.1.24.tar.gz", "has_sig": false, "md5_digest": "07ee2e15ac0e836fd8d925706ff86a2a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27202, "upload_time": "2019-10-24T10:44:26", "upload_time_iso_8601": "2019-10-24T10:44:26.231561Z", "url": "https://files.pythonhosted.org/packages/f5/4c/05506eadd143dae4d162b4c8fa65fcc68c36d1d33550fbb0a8851a3c6e27/wasdi-0.1.24.tar.gz", "yanked": false}], "0.1.25": [{"comment_text": "", "digests": {"md5": "134141fd76757799870b440a8ab7b969", "sha256": "9f80110b1b1a211317cf8578bb7f0f25447920ab8b8bc53dc5deb39af3cabf64"}, "downloads": -1, "filename": "wasdi-0.1.25-py2-none-any.whl", "has_sig": false, "md5_digest": "134141fd76757799870b440a8ab7b969", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 21871, "upload_time": "2019-10-24T10:50:32", "upload_time_iso_8601": "2019-10-24T10:50:32.955796Z", "url": "https://files.pythonhosted.org/packages/0e/ff/7754957a090f47ee8060f84715604042bbd86a8a4d9d7e20d7ff692a9bf3/wasdi-0.1.25-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a94e48ef3ef04b39c1e6070a6700e1d5", "sha256": "4037234e80259c2ef211809ae591e751745227591620182bf4c44f1dacec109b"}, "downloads": -1, "filename": "wasdi-0.1.25.tar.gz", "has_sig": false, "md5_digest": "a94e48ef3ef04b39c1e6070a6700e1d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27207, "upload_time": "2019-10-24T10:50:34", "upload_time_iso_8601": "2019-10-24T10:50:34.851184Z", "url": "https://files.pythonhosted.org/packages/8c/6b/d7cb3eb2deb61e74f845e9f9a0e22326dcc9c744bbd72622b2ee4b895908/wasdi-0.1.25.tar.gz", "yanked": false}], "0.1.26": [{"comment_text": "", "digests": {"md5": "64c6960f58819b6c9b9def6f8119005f", "sha256": "8cebdac6bc87e0a21006b42673448bcc7b6cf446c0b1c6c2aec9b2c48120c0a2"}, "downloads": -1, "filename": "wasdi-0.1.26-py2-none-any.whl", "has_sig": false, "md5_digest": "64c6960f58819b6c9b9def6f8119005f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 21977, "upload_time": "2019-10-24T11:07:40", "upload_time_iso_8601": "2019-10-24T11:07:40.764874Z", "url": "https://files.pythonhosted.org/packages/df/b5/be780273bd551989d9739c957b17d48d55934dc36e1a12f3e5e7eb77ced0/wasdi-0.1.26-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "625ff7e05f82a42f8a32281b52c84f41", "sha256": "beee4058476e1611d65c762826d16d33de4ac31f9cffe577b8a2e03b8a5a02fd"}, "downloads": -1, "filename": "wasdi-0.1.26.tar.gz", "has_sig": false, "md5_digest": "625ff7e05f82a42f8a32281b52c84f41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27376, "upload_time": "2019-10-24T11:07:42", "upload_time_iso_8601": "2019-10-24T11:07:42.701184Z", "url": "https://files.pythonhosted.org/packages/e4/21/69ee90ec4fe6fa5f245ad9f5ab535c6bbe9c40799641b666ef0be74f1022/wasdi-0.1.26.tar.gz", "yanked": false}], "0.1.27": [{"comment_text": "", "digests": {"md5": "e30d5288b331073a57e9914a15e1db16", "sha256": "11ba36ec3ad6c985211a9c986088a997b27d65f0feabb49338b6c56cdd7e8297"}, "downloads": -1, "filename": "wasdi-0.1.27-py2-none-any.whl", "has_sig": false, "md5_digest": "e30d5288b331073a57e9914a15e1db16", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 22018, "upload_time": "2019-10-28T14:42:39", "upload_time_iso_8601": "2019-10-28T14:42:39.160232Z", "url": "https://files.pythonhosted.org/packages/c1/0b/d961d776a695ff80e162c21871ef4bb3702d15b3c883403defbb391a59df/wasdi-0.1.27-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f3961af978126a1dc2c2f7bf7f33905", "sha256": "66d13b372f2c2ff6642014d85acfb59da9a3608a90ac377e03da85b1f8cb276e"}, "downloads": -1, "filename": "wasdi-0.1.27.tar.gz", "has_sig": false, "md5_digest": "3f3961af978126a1dc2c2f7bf7f33905", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27425, "upload_time": "2019-10-28T14:42:41", "upload_time_iso_8601": "2019-10-28T14:42:41.714782Z", "url": "https://files.pythonhosted.org/packages/f5/bd/8df58401079f2eea309e92a31a8e1cc9fdb6fe9a958163207cb6d5b17617/wasdi-0.1.27.tar.gz", "yanked": false}], "0.1.28": [{"comment_text": "", "digests": {"md5": "150bc72767b7472327442041bd4074dc", "sha256": "e809b9470e1388e3b39cca6d1f3b439c949e329cbc86dc4149849a62b17af3f1"}, "downloads": -1, "filename": "wasdi-0.1.28-py2-none-any.whl", "has_sig": false, "md5_digest": "150bc72767b7472327442041bd4074dc", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 22013, "upload_time": "2019-10-28T16:52:12", "upload_time_iso_8601": "2019-10-28T16:52:12.378689Z", "url": "https://files.pythonhosted.org/packages/2e/f2/991c9629d4247423f563e0405e95fd92ec54a04794ce21548fdba40c25bc/wasdi-0.1.28-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3de31016ef16abcc2100fab867156e3b", "sha256": "cf1527d527d841993bcbb4cbb9360b28ff307f9fd722c3a87007c6b6400dbeca"}, "downloads": -1, "filename": "wasdi-0.1.28.tar.gz", "has_sig": false, "md5_digest": "3de31016ef16abcc2100fab867156e3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27426, "upload_time": "2019-10-28T16:52:15", "upload_time_iso_8601": "2019-10-28T16:52:15.374853Z", "url": "https://files.pythonhosted.org/packages/fe/00/f61ece3237194f7176172f0be2c8e677f77eaa900b65cb20dd633d247cfe/wasdi-0.1.28.tar.gz", "yanked": false}], "0.1.29": [{"comment_text": "", "digests": {"md5": "b282162364e672ee359fa3b094bbf9cc", "sha256": "279083d6749f0b6325498215a3c450a99a6d364cbcbac768458c33ff9a89bad9"}, "downloads": -1, "filename": "wasdi-0.1.29-py2-none-any.whl", "has_sig": false, "md5_digest": "b282162364e672ee359fa3b094bbf9cc", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 22102, "upload_time": "2019-11-05T17:51:42", "upload_time_iso_8601": "2019-11-05T17:51:42.525104Z", "url": "https://files.pythonhosted.org/packages/8d/51/985c2eb5cc439b38dda818442d3c606332a99f5decd03b425a3ed4a7676b/wasdi-0.1.29-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d4e2feaa3a5b7ff3fac1b5ba9cfc69b3", "sha256": "d4d62a1b53c17a0dcf58674a527e5d75dac75ee0925b6d32eabac25a212cba44"}, "downloads": -1, "filename": "wasdi-0.1.29.tar.gz", "has_sig": false, "md5_digest": "d4e2feaa3a5b7ff3fac1b5ba9cfc69b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27503, "upload_time": "2019-11-05T17:51:44", "upload_time_iso_8601": "2019-11-05T17:51:44.773920Z", "url": "https://files.pythonhosted.org/packages/91/21/1c11b3443c7858cabf416471cc28ff4a4c79ebd1439f5140a1da9d9e1eea/wasdi-0.1.29.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "3644d9c110a0c3e79787704b98e025d9", "sha256": "e2a440acdff8b5d8a9797b595f007bc71ab5a30dd83e645583a8672939be533d"}, "downloads": -1, "filename": "wasdi-0.1.3-py2-none-any.whl", "has_sig": false, "md5_digest": "3644d9c110a0c3e79787704b98e025d9", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 13889, "upload_time": "2019-06-25T15:17:28", "upload_time_iso_8601": "2019-06-25T15:17:28.810779Z", "url": "https://files.pythonhosted.org/packages/c5/60/20872f148aca2d0f3dfeea89bf796d4504d6be575dfd668f84589fbd44cb/wasdi-0.1.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16fe67d6093412825e887333881ba079", "sha256": "a0b23b09aaf595a837c6807ca906f3dabf7c4230969316cbb66c87ee0adf319a"}, "downloads": -1, "filename": "wasdi-0.1.3.tar.gz", "has_sig": false, "md5_digest": "16fe67d6093412825e887333881ba079", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12955, "upload_time": "2019-06-25T15:17:33", "upload_time_iso_8601": "2019-06-25T15:17:33.570788Z", "url": "https://files.pythonhosted.org/packages/8a/4a/e4a430a2c8a15019477b4881c8370c28e6fc99075258e61f58ac6ff89b6f/wasdi-0.1.3.tar.gz", "yanked": false}], "0.1.30": [{"comment_text": "", "digests": {"md5": "650608e00de2fdd573b8434beb7194cd", "sha256": "3f1359cd4d72724a0f6df0c475f421f5bebb4e0f9469ee7fd603e4f7f17510c8"}, "downloads": -1, "filename": "wasdi-0.1.30-py2-none-any.whl", "has_sig": false, "md5_digest": "650608e00de2fdd573b8434beb7194cd", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 23320, "upload_time": "2019-12-10T17:20:36", "upload_time_iso_8601": "2019-12-10T17:20:36.886354Z", "url": "https://files.pythonhosted.org/packages/2f/f7/022cce820b5144166a83435086f18e35c38deecf2a864007d1c387d1a8da/wasdi-0.1.30-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cdb97a682b56ad8d9a18e076068287a2", "sha256": "6edd58d6eed00aaaa8796e80c5f83301c2da94557c08242915e977dfc728daa9"}, "downloads": -1, "filename": "wasdi-0.1.30.tar.gz", "has_sig": false, "md5_digest": "cdb97a682b56ad8d9a18e076068287a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28669, "upload_time": "2019-12-10T17:20:38", "upload_time_iso_8601": "2019-12-10T17:20:38.920209Z", "url": "https://files.pythonhosted.org/packages/69/d9/77af8370ee660b6b864e3dbd6c3288044557c48620791c1ec1259575c7bc/wasdi-0.1.30.tar.gz", "yanked": false}], "0.1.31": [{"comment_text": "", "digests": {"md5": "bf7338c09959edf4e0d7e7e904bd0ea9", "sha256": "72800940a4165f945876aa18378616bd549051026d7d66db3547d2203a82ebe4"}, "downloads": -1, "filename": "wasdi-0.1.31-py2-none-any.whl", "has_sig": false, "md5_digest": "bf7338c09959edf4e0d7e7e904bd0ea9", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 23747, "upload_time": "2019-12-19T15:57:16", "upload_time_iso_8601": "2019-12-19T15:57:16.733915Z", "url": "https://files.pythonhosted.org/packages/bd/83/43a0eac68c536cb98a9182baf24e4a68d02f88a1754b642c54f7b575085c/wasdi-0.1.31-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "412d8a5b9467ed031b2e64ec9bce3d4f", "sha256": "ddb470d2fbdc87b7c3a170d37dc56febcb3eae8c3d2699f270e0ba3a16422906"}, "downloads": -1, "filename": "wasdi-0.1.31.tar.gz", "has_sig": false, "md5_digest": "412d8a5b9467ed031b2e64ec9bce3d4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29167, "upload_time": "2019-12-19T15:57:18", "upload_time_iso_8601": "2019-12-19T15:57:18.426853Z", "url": "https://files.pythonhosted.org/packages/3b/95/4413c9de2679319b28c89861b245f110c84f055e9d10f37e354848b08fb1/wasdi-0.1.31.tar.gz", "yanked": false}], "0.1.32": [{"comment_text": "", "digests": {"md5": "c9492381a34a65ae1777bbed45a0d024", "sha256": "4a401b726e12a2a947f07a2cdedeb72263a59d3ccecf5368f3ebf8acc033c484"}, "downloads": -1, "filename": "wasdi-0.1.32-py2-none-any.whl", "has_sig": false, "md5_digest": "c9492381a34a65ae1777bbed45a0d024", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 23750, "upload_time": "2019-12-19T18:32:33", "upload_time_iso_8601": "2019-12-19T18:32:33.569938Z", "url": "https://files.pythonhosted.org/packages/8e/01/506b68a6d5dc5c8fe39a72f725075f975e7858b5385f450a8f53595e1674/wasdi-0.1.32-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f950fa335a9f85d8ba1f40544a717dc4", "sha256": "017ae9733e9b814e166b23a2c67fd17faac1aaed399050e748ff6836f5974e78"}, "downloads": -1, "filename": "wasdi-0.1.32.tar.gz", "has_sig": false, "md5_digest": "f950fa335a9f85d8ba1f40544a717dc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29164, "upload_time": "2019-12-19T18:32:35", "upload_time_iso_8601": "2019-12-19T18:32:35.689306Z", "url": "https://files.pythonhosted.org/packages/05/68/37f8cae2c0b38533549d313e36d1351d069f391a78a875b31e0e83d46c4f/wasdi-0.1.32.tar.gz", "yanked": false}], "0.1.33": [{"comment_text": "", "digests": {"md5": "dd7058ddf377c13ab2f0eb5da1b605e7", "sha256": "7b5f9eb6b02938ec4235b87eb9f1976414503824ffc2dfe9d5e46691fd8e70d6"}, "downloads": -1, "filename": "wasdi-0.1.33-py2-none-any.whl", "has_sig": false, "md5_digest": "dd7058ddf377c13ab2f0eb5da1b605e7", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 25251, "upload_time": "2019-12-20T19:16:41", "upload_time_iso_8601": "2019-12-20T19:16:41.957133Z", "url": "https://files.pythonhosted.org/packages/0e/1a/66afb0f22a43a2f4fac50cac2fcd31a7dcc8b64f874089d6fb024bbebc89/wasdi-0.1.33-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "938c84f9577111840fe5e6fdefa472ac", "sha256": "5ee6add91402a3dbe0159b9d14c2bd9fe1cda3b42195db7b4967ff414be2ca76"}, "downloads": -1, "filename": "wasdi-0.1.33.tar.gz", "has_sig": false, "md5_digest": "938c84f9577111840fe5e6fdefa472ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30644, "upload_time": "2019-12-20T19:16:44", "upload_time_iso_8601": "2019-12-20T19:16:44.066769Z", "url": "https://files.pythonhosted.org/packages/69/6a/bd05f4fd25f97fa13b5743b7f35b9636cfeb4a90d5100c4e5d4881a63e76/wasdi-0.1.33.tar.gz", "yanked": false}], "0.1.34": [{"comment_text": "", "digests": {"md5": "a7ee46b226dd50ed01ee9c19d11ab98f", "sha256": "63dce5dda2e82bb2222ca081ee1a6697b4c6b4115256d6e66e4768ff30f00f9f"}, "downloads": -1, "filename": "wasdi-0.1.34-py2-none-any.whl", "has_sig": false, "md5_digest": "a7ee46b226dd50ed01ee9c19d11ab98f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 25260, "upload_time": "2019-12-20T19:25:03", "upload_time_iso_8601": "2019-12-20T19:25:03.104904Z", "url": "https://files.pythonhosted.org/packages/30/26/5bbf5c5e9527e7dda554f824c04c9ad2da8fddcc53d28072d4d83b40e219/wasdi-0.1.34-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f37501ebc2cdcacee4b9414777a90888", "sha256": "49d4e728b4de5e9c2341436f958e63eb814282aac2f9be80b8388f08457f2c4a"}, "downloads": -1, "filename": "wasdi-0.1.34.tar.gz", "has_sig": false, "md5_digest": "f37501ebc2cdcacee4b9414777a90888", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30636, "upload_time": "2019-12-20T19:25:05", "upload_time_iso_8601": "2019-12-20T19:25:05.146809Z", "url": "https://files.pythonhosted.org/packages/32/ba/145d9037557ff2a87c9c6749680536c97f089cf611331f305bcbb5f8a46b/wasdi-0.1.34.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "884802319eb9aa7b56302fd1d02b713c", "sha256": "712a6707428c66e8d66740df5857a7635626c3a7457bdeb9abf443e9fff22b2d"}, "downloads": -1, "filename": "wasdi-0.1.4-py2-none-any.whl", "has_sig": false, "md5_digest": "884802319eb9aa7b56302fd1d02b713c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 13910, "upload_time": "2019-06-25T15:21:21", "upload_time_iso_8601": "2019-06-25T15:21:21.961954Z", "url": "https://files.pythonhosted.org/packages/72/7b/48012021c2d302219359c54278ede82dd7d62a9b30c58d1218a4eefa3740/wasdi-0.1.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "280badeb4c322ebd38fc9a009a32779a", "sha256": "02604c43c4a3c3e6756492e29d5c044e4eb1f9b5a59f1877bef091e8f0dc37cc"}, "downloads": -1, "filename": "wasdi-0.1.4.tar.gz", "has_sig": false, "md5_digest": "280badeb4c322ebd38fc9a009a32779a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12976, "upload_time": "2019-06-25T15:21:25", "upload_time_iso_8601": "2019-06-25T15:21:25.764176Z", "url": "https://files.pythonhosted.org/packages/66/e7/b117375c731017c13c50a678a0a24f91d335e4e9bb35c64c359b4dd0cf6c/wasdi-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "7b7f9ebc90dec9d0e9bb879e020707ea", "sha256": "01ae08c581c11f9e03b08d0b3de49f1dc773d2a1754aac35edbcdce63ed602a4"}, "downloads": -1, "filename": "wasdi-0.1.5-py2-none-any.whl", "has_sig": false, "md5_digest": "7b7f9ebc90dec9d0e9bb879e020707ea", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 13939, "upload_time": "2019-06-25T16:16:30", "upload_time_iso_8601": "2019-06-25T16:16:30.398805Z", "url": "https://files.pythonhosted.org/packages/f6/98/c7cc7e6b56dfa941340c2de2cd8718dc913fe767a8bec96b5aa03791cd3a/wasdi-0.1.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c0bd17e266900f11c0fb78f0cd24223", "sha256": "3756b350494148087b2e0eda659dff73d6dcf3ac83c8e8d6e622dd6c9dda70e4"}, "downloads": -1, "filename": "wasdi-0.1.5.tar.gz", "has_sig": false, "md5_digest": "6c0bd17e266900f11c0fb78f0cd24223", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13019, "upload_time": "2019-06-25T16:16:35", "upload_time_iso_8601": "2019-06-25T16:16:35.182762Z", "url": "https://files.pythonhosted.org/packages/cb/b8/1cc7fffcbc9e030dc1673471bed913dbcdd446fe9e28f87e9aea0572d2fc/wasdi-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "1e1844b2f227d78718e8c7a4983eeae6", "sha256": "c030a3dde7752fa159982ed022e39b4a2594c4464292c788c99bf5299cf89fa8"}, "downloads": -1, "filename": "wasdi-0.1.6-py2-none-any.whl", "has_sig": false, "md5_digest": "1e1844b2f227d78718e8c7a4983eeae6", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 16758, "upload_time": "2019-06-25T16:39:29", "upload_time_iso_8601": "2019-06-25T16:39:29.994433Z", "url": "https://files.pythonhosted.org/packages/13/22/df1d3c35bd0fb56ea28f77c52737ff34c94218a42d30885eb3f7d213c72e/wasdi-0.1.6-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0972488eb5114d5fb8eba4af4d9d7f4e", "sha256": "12eb10f637b33d833d2e65291f24f0f90337dc6c307c33c81501af55a330a9bd"}, "downloads": -1, "filename": "wasdi-0.1.6.tar.gz", "has_sig": false, "md5_digest": "0972488eb5114d5fb8eba4af4d9d7f4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18994, "upload_time": "2019-06-25T16:39:36", "upload_time_iso_8601": "2019-06-25T16:39:36.399007Z", "url": "https://files.pythonhosted.org/packages/fc/af/db5abd4005a7c43af344f1b998920582aac8f680f2c7534810a007078f17/wasdi-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "513a164aee74d6e4d4765f2cab1e672d", "sha256": "c008fd67ad227158793a398e57438812b3165a9569fe9a9b7728b3cb96a504d4"}, "downloads": -1, "filename": "wasdi-0.1.7-py2-none-any.whl", "has_sig": false, "md5_digest": "513a164aee74d6e4d4765f2cab1e672d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 17023, "upload_time": "2019-06-26T07:53:09", "upload_time_iso_8601": "2019-06-26T07:53:09.891654Z", "url": "https://files.pythonhosted.org/packages/8d/ea/b676fe910d96887f5bcd88d1e95fca0b5f6a5244b10fe7f948057e50318b/wasdi-0.1.7-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8700bdb26a6a17819fc283afbd57944", "sha256": "f3b00578d01f9ffb0707e640d65466de4c9b9c74382b8cb572e1df2a8dbd4d5a"}, "downloads": -1, "filename": "wasdi-0.1.7.tar.gz", "has_sig": false, "md5_digest": "d8700bdb26a6a17819fc283afbd57944", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19537, "upload_time": "2019-06-26T07:53:16", "upload_time_iso_8601": "2019-06-26T07:53:16.688337Z", "url": "https://files.pythonhosted.org/packages/10/01/004db860d073fe7aa9344bedb5dac06157afa19711a0db3456553f55c0fc/wasdi-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "8f371a25b2f4ecdbcabe058b4cdbdbd8", "sha256": "305fee26de7721a47630c174e2a59f2d8006f35b02f6c02f006cd0453b980b40"}, "downloads": -1, "filename": "wasdi-0.1.8-py2-none-any.whl", "has_sig": false, "md5_digest": "8f371a25b2f4ecdbcabe058b4cdbdbd8", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 18592, "upload_time": "2019-06-27T14:44:52", "upload_time_iso_8601": "2019-06-27T14:44:52.551105Z", "url": "https://files.pythonhosted.org/packages/59/e6/336688b0c53613efdcacf9fe2182f490389db638755dcf1b4c3469465edd/wasdi-0.1.8-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "efd46e65738d6938ae8021be7b724aff", "sha256": "5d1691b50f7eb89fa1798f81b0c1963366fbf16ce9c0b93e6bc3152a8aa196d2"}, "downloads": -1, "filename": "wasdi-0.1.8.tar.gz", "has_sig": false, "md5_digest": "efd46e65738d6938ae8021be7b724aff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22461, "upload_time": "2019-06-27T14:45:01", "upload_time_iso_8601": "2019-06-27T14:45:01.454789Z", "url": "https://files.pythonhosted.org/packages/c4/d6/71927bcadeffdd05a29d319dc42bbed43ecab5f70953791ab7e3829e9857/wasdi-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "831927c193071da7fc821b9bfc81683d", "sha256": "ce4beee90855c775b1bc441b8adf8a546549e75de3788b217cd37575091aca82"}, "downloads": -1, "filename": "wasdi-0.1.9-py2-none-any.whl", "has_sig": false, "md5_digest": "831927c193071da7fc821b9bfc81683d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 19685, "upload_time": "2019-06-27T17:06:59", "upload_time_iso_8601": "2019-06-27T17:06:59.216509Z", "url": "https://files.pythonhosted.org/packages/3a/d6/6c1bb06b28c950037c1109b3983f82aa1c7e4cdbb993317aab184fa64731/wasdi-0.1.9-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "42ae9bcdbabdb32d9cd72ebe47563499", "sha256": "a6158a4e08b90cce72794054f710bdcaa594c4ae5cebf5230db5d68d4cdc2aec"}, "downloads": -1, "filename": "wasdi-0.1.9.tar.gz", "has_sig": false, "md5_digest": "42ae9bcdbabdb32d9cd72ebe47563499", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24919, "upload_time": "2019-06-27T17:07:08", "upload_time_iso_8601": "2019-06-27T17:07:08.490912Z", "url": "https://files.pythonhosted.org/packages/65/b1/161898d8245b9ce3a543a2fac0a5a90357e32380539e42f494a5b1fb83e8/wasdi-0.1.9.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "258d5a6364afff8a14740d406ca7070c", "sha256": "fcf56f4f68ecc288abe01fddcea416afee01d0a32eb89bd88015d336c35894f4"}, "downloads": -1, "filename": "wasdi-0.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "258d5a6364afff8a14740d406ca7070c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 25608, "upload_time": "2020-01-23T11:10:47", "upload_time_iso_8601": "2020-01-23T11:10:47.328569Z", "url": "https://files.pythonhosted.org/packages/42/8f/97dd3c4a1a46f949b07313bd0d5dc1de2d96e69116ca719c791fecbfa619/wasdi-0.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "051fd031796e0bac57ad0a5402b8de22", "sha256": "268e9800e94d64db1f84b94cd99435cca21657bb4a3e58d0925194a17c54c168"}, "downloads": -1, "filename": "wasdi-0.2.0.tar.gz", "has_sig": false, "md5_digest": "051fd031796e0bac57ad0a5402b8de22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31053, "upload_time": "2020-01-23T11:10:50", "upload_time_iso_8601": "2020-01-23T11:10:50.875924Z", "url": "https://files.pythonhosted.org/packages/24/60/836e1a1859a77bb8ab26e5043fb95530931837f93cdf8331c548e6eb15c9/wasdi-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "0d21f4c9bb8a37bd77b186fe9278d431", "sha256": "a6d8271f7289ca343696e6136b531aa7c21d0f26b69230a7b384f7e05932beb3"}, "downloads": -1, "filename": "wasdi-0.2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "0d21f4c9bb8a37bd77b186fe9278d431", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 25636, "upload_time": "2020-01-23T17:42:06", "upload_time_iso_8601": "2020-01-23T17:42:06.490289Z", "url": "https://files.pythonhosted.org/packages/dd/ad/c9330ea03e252659dc487e6d8989e9286ac71bb2152a22a2d735d955f326/wasdi-0.2.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2ba09108b604b34a616e6b0dd5f030c", "sha256": "14ecc14227bdc4dd66d76ca8bb9b083abb778630dcb274704dd1589a6dd4a3ab"}, "downloads": -1, "filename": "wasdi-0.2.1.tar.gz", "has_sig": false, "md5_digest": "d2ba09108b604b34a616e6b0dd5f030c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31087, "upload_time": "2020-01-23T17:42:08", "upload_time_iso_8601": "2020-01-23T17:42:08.141480Z", "url": "https://files.pythonhosted.org/packages/dc/ec/029029ca1f403fd721fe8d46374d9b26e15d6106a51655b79c6c35435d45/wasdi-0.2.1.tar.gz", "yanked": false}], "0.2.11": [{"comment_text": "", "digests": {"md5": "bac0e78d82a7ddcb347d869d34868742", "sha256": "50b5a3a8b588649541a50ea313b9064c9a216e2551ff69cd26d0bda612db1f53"}, "downloads": -1, "filename": "wasdi-0.2.11-py3-none-any.whl", "has_sig": false, "md5_digest": "bac0e78d82a7ddcb347d869d34868742", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28633, "upload_time": "2020-04-22T10:11:13", "upload_time_iso_8601": "2020-04-22T10:11:13.856966Z", "url": "https://files.pythonhosted.org/packages/69/71/a06e87b71b8b2d026ab7cfd5cb4efe4482dc0e0ecf69b13538639317cb8a/wasdi-0.2.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7905a56d3643fc7fd96b6e4d64357854", "sha256": "fc0c7388ae8df7eff5d62f403e7fe11956d244bda2a5c9bcb3581b3a7cefe4d6"}, "downloads": -1, "filename": "wasdi-0.2.11.tar.gz", "has_sig": false, "md5_digest": "7905a56d3643fc7fd96b6e4d64357854", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33646, "upload_time": "2020-04-22T10:11:25", "upload_time_iso_8601": "2020-04-22T10:11:25.027005Z", "url": "https://files.pythonhosted.org/packages/eb/12/950fa3e402acb231703e6668ac6712835ca95c957fff429b214b70efbc5c/wasdi-0.2.11.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "de9e9199e898dd8e3a879cdd04a3e3fc", "sha256": "ff6bf8ca280f0a5b04145aeef9720ed5f2105c3a3dd29b55223e68512c4f2389"}, "downloads": -1, "filename": "wasdi-0.2.2-py2-none-any.whl", "has_sig": false, "md5_digest": "de9e9199e898dd8e3a879cdd04a3e3fc", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 25650, "upload_time": "2020-01-23T18:08:22", "upload_time_iso_8601": "2020-01-23T18:08:22.552876Z", "url": "https://files.pythonhosted.org/packages/b6/75/ab2d8c57b953b95009654ad3d0b64bdcc52f19c5199c4b56573b427e50e6/wasdi-0.2.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "913d6e299f1e23feeb80d80711e4b4ce", "sha256": "11c141d72bfb4bf6a90e6550973411910ee6964f8df02ba282750fee799b2c82"}, "downloads": -1, "filename": "wasdi-0.2.2.tar.gz", "has_sig": false, "md5_digest": "913d6e299f1e23feeb80d80711e4b4ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31091, "upload_time": "2020-01-23T18:08:24", "upload_time_iso_8601": "2020-01-23T18:08:24.358248Z", "url": "https://files.pythonhosted.org/packages/1f/6a/284ce0e2d84d29f8001a0656ff8becc03c73a18e92943d5cd81f404de95b/wasdi-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "ede65938149906e01e1f81b5e21702ba", "sha256": "304266180744b29eec0d3cfe5869823bc47384cfa5570b511301ac7497e99664"}, "downloads": -1, "filename": "wasdi-0.2.3-py2-none-any.whl", "has_sig": false, "md5_digest": "ede65938149906e01e1f81b5e21702ba", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 25659, "upload_time": "2020-01-23T18:30:03", "upload_time_iso_8601": "2020-01-23T18:30:03.484932Z", "url": "https://files.pythonhosted.org/packages/e8/4e/65d20696eaba9ff2de4bde1e7aa334b949083eea9e7908b88ce276deda75/wasdi-0.2.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ec301335a9e23b6c311eb940e549967", "sha256": "a4153fe9ee4d4a2409c0f1b1d8235e5be971a7188bf3032a68342d0721349a4c"}, "downloads": -1, "filename": "wasdi-0.2.3.tar.gz", "has_sig": false, "md5_digest": "3ec301335a9e23b6c311eb940e549967", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31103, "upload_time": "2020-01-23T18:30:05", "upload_time_iso_8601": "2020-01-23T18:30:05.722717Z", "url": "https://files.pythonhosted.org/packages/ed/d1/28470450698b0f5d34b24b245b38b22c96ca630dea1f34e72edbc6b65e88/wasdi-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "6afbdac043c40a74002b09f91f495faf", "sha256": "46a9f2a9706158929827462c4cd7476b37405bdb2af26a3a1ea0edc1044b6dbd"}, "downloads": -1, "filename": "wasdi-0.2.4-py2-none-any.whl", "has_sig": false, "md5_digest": "6afbdac043c40a74002b09f91f495faf", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 26132, "upload_time": "2020-01-24T13:25:09", "upload_time_iso_8601": "2020-01-24T13:25:09.431010Z", "url": "https://files.pythonhosted.org/packages/25/15/bb0b9a926539aa135a2f3c925a229f36222d2fd5c328c7e278ebe9bdf6f1/wasdi-0.2.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a3af1061f991bc884484bd8b57e07f4", "sha256": "8da3d311ffc292ec3b5f1349418bc808951ecdc61010aa5ba7e1290824084795"}, "downloads": -1, "filename": "wasdi-0.2.4.tar.gz", "has_sig": false, "md5_digest": "5a3af1061f991bc884484bd8b57e07f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31547, "upload_time": "2020-01-24T13:25:10", "upload_time_iso_8601": "2020-01-24T13:25:10.935850Z", "url": "https://files.pythonhosted.org/packages/11/b6/ac935bb4345b550c5a9ca9ab0bdfbae85734fe03eafb7dcd351d43c0db93/wasdi-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "fa546d1bab4723b43d7958167afdd710", "sha256": "1a95c453a7b19fb6dedb19e71c426b0a73092950de6693e234f5bf3e742e7ba4"}, "downloads": -1, "filename": "wasdi-0.2.5-py2-none-any.whl", "has_sig": false, "md5_digest": "fa546d1bab4723b43d7958167afdd710", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 26133, "upload_time": "2020-01-24T16:43:10", "upload_time_iso_8601": "2020-01-24T16:43:10.046049Z", "url": "https://files.pythonhosted.org/packages/6d/fe/0835c3fc05cac4e081513726fcee90c1a160e140113ba614dc84c5b419ca/wasdi-0.2.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "20a479a3f751fcc0ab492345053b7c7a", "sha256": "ee54528be1b1f227da752f6151f96cde176e8fe0decf9a6c1f915d2b20cc7a75"}, "downloads": -1, "filename": "wasdi-0.2.5.tar.gz", "has_sig": false, "md5_digest": "20a479a3f751fcc0ab492345053b7c7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31545, "upload_time": "2020-01-24T16:43:11", "upload_time_iso_8601": "2020-01-24T16:43:11.770540Z", "url": "https://files.pythonhosted.org/packages/b7/c0/64897db5f5938d089f3cc8bed4d320d7ad50b0461ca630efb641f1aa388e/wasdi-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "c2a041f63d0f4cc7e69ff4014eb9771f", "sha256": "40c9ddf2124bae841ac6cd779631c2d34576f667d75d8639f002efea63fa54f9"}, "downloads": -1, "filename": "wasdi-0.2.6-py2-none-any.whl", "has_sig": false, "md5_digest": "c2a041f63d0f4cc7e69ff4014eb9771f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 26161, "upload_time": "2020-01-24T19:03:30", "upload_time_iso_8601": "2020-01-24T19:03:30.284443Z", "url": "https://files.pythonhosted.org/packages/4e/1e/67dcb50336e03322b7c8f9689ce41d1bfac42d1bf9f8656bda9436c1daf8/wasdi-0.2.6-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef61f7143582fed161811951f3035cc6", "sha256": "0f6062660ded7fac256bce25a617232bb26cbbd14337afdc98240c496d2d7cd5"}, "downloads": -1, "filename": "wasdi-0.2.6.tar.gz", "has_sig": false, "md5_digest": "ef61f7143582fed161811951f3035cc6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31584, "upload_time": "2020-01-24T19:03:31", "upload_time_iso_8601": "2020-01-24T19:03:31.874049Z", "url": "https://files.pythonhosted.org/packages/2d/a9/0a508916bc056ffcbc8dfb53a98e63edbd771c4459827f753735fc485926/wasdi-0.2.6.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "f0110a73070e751da83b8d50f26bf5a0", "sha256": "ef96c43c5090f4ccf4f4d03aeeded311f4647cb49236c508c35863d7c0c187c5"}, "downloads": -1, "filename": "wasdi-0.2.8-py2-none-any.whl", "has_sig": false, "md5_digest": "f0110a73070e751da83b8d50f26bf5a0", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 26281, "upload_time": "2020-02-05T16:43:51", "upload_time_iso_8601": "2020-02-05T16:43:51.054001Z", "url": "https://files.pythonhosted.org/packages/0d/80/c5fd85070bb4a03c44c0426f2d948b760430b1a5bb248796198f02c400b0/wasdi-0.2.8-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1588b0db4be2cb949b9e86cfb9b5b114", "sha256": "524becb2548106b616ebe54cf65faad0b5dcd6f6861cb3477f80a2594c26d512"}, "downloads": -1, "filename": "wasdi-0.2.8.tar.gz", "has_sig": false, "md5_digest": "1588b0db4be2cb949b9e86cfb9b5b114", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31708, "upload_time": "2020-02-05T16:43:52", "upload_time_iso_8601": "2020-02-05T16:43:52.930697Z", "url": "https://files.pythonhosted.org/packages/b1/ab/9b34982620fde787f0014b9851f8ed3903e983dc3de790f2ed62d9bdaf9e/wasdi-0.2.8.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "d77bc279dc2d03bcb8d25b39aa4722bd", "sha256": "8ef0d4b55421a11a21e42237a79b718aca57b2f804b3088b08cfec8968adaa89"}, "downloads": -1, "filename": "wasdi-0.3.0-py2-none-any.whl", "has_sig": false, "md5_digest": "d77bc279dc2d03bcb8d25b39aa4722bd", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 25789, "upload_time": "2020-03-20T12:24:53", "upload_time_iso_8601": "2020-03-20T12:24:53.075482Z", "url": "https://files.pythonhosted.org/packages/ef/c4/395042b1bb86a1d98bcb8751bd464c4977c94baecab80a012ddc85dfe3f6/wasdi-0.3.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c7b074db3357ce7fe80bdda724a1b81", "sha256": "7e903836e7d671807898b55dbaa2a40ab0450aaa99e5b842c0c1f941880c4343"}, "downloads": -1, "filename": "wasdi-0.3.0.tar.gz", "has_sig": false, "md5_digest": "9c7b074db3357ce7fe80bdda724a1b81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31248, "upload_time": "2020-03-20T12:24:54", "upload_time_iso_8601": "2020-03-20T12:24:54.895006Z", "url": "https://files.pythonhosted.org/packages/d1/b1/34ccc06d0a8003108abf2daaae0ebce445752c380e5b6bce17dd5245908b/wasdi-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "1934eb3c21b3713469922ee35c3dea27", "sha256": "a01886e5c9d53d1927f0a81ea67f26ae5476471ed47459856b23259f6edfe1d2"}, "downloads": -1, "filename": "wasdi-0.3.1-py2-none-any.whl", "has_sig": false, "md5_digest": "1934eb3c21b3713469922ee35c3dea27", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 25993, "upload_time": "2020-03-26T13:38:34", "upload_time_iso_8601": "2020-03-26T13:38:34.250058Z", "url": "https://files.pythonhosted.org/packages/bb/4d/ec724d35da2049f3eca5e04fad524277ff14b8902159b00f66252f785aa0/wasdi-0.3.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dc8b451092c024f342b1ff4fae23d715", "sha256": "5a644a68b8ca1b86c9b1df562d19e4b2bd8f7a790823c0227c85b4f0bef00edd"}, "downloads": -1, "filename": "wasdi-0.3.1.tar.gz", "has_sig": false, "md5_digest": "dc8b451092c024f342b1ff4fae23d715", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31429, "upload_time": "2020-03-26T13:38:36", "upload_time_iso_8601": "2020-03-26T13:38:36.059619Z", "url": "https://files.pythonhosted.org/packages/84/66/d7bed3500c723bab4300f4294a1aab782c2cf1fda1dcb7b930003707c3a1/wasdi-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "c2d037915a6557aa1c8ecc759e8ca490", "sha256": "8fd4548591e4f4988df630d03056c9aa26325d951f3d57f030c2abdeae9c262c"}, "downloads": -1, "filename": "wasdi-0.3.2-py2-none-any.whl", "has_sig": false, "md5_digest": "c2d037915a6557aa1c8ecc759e8ca490", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 27523, "upload_time": "2020-04-02T14:30:47", "upload_time_iso_8601": "2020-04-02T14:30:47.794168Z", "url": "https://files.pythonhosted.org/packages/12/b1/455b6758ed36f40bc5c875e3b6ce061364ee011b3fbc69d8ede1f3ba8295/wasdi-0.3.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2e4be9d8e72a4f360d483fe6683da895", "sha256": "2c078c06f0fb26398aeb47b178b26f92e631a58fd977d529a5c3fc377024f20c"}, "downloads": -1, "filename": "wasdi-0.3.2.tar.gz", "has_sig": false, "md5_digest": "2e4be9d8e72a4f360d483fe6683da895", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32905, "upload_time": "2020-04-02T14:30:49", "upload_time_iso_8601": "2020-04-02T14:30:49.692817Z", "url": "https://files.pythonhosted.org/packages/18/45/accc6b84372ac4da0909264f6bd529b4bdd27bd63cce50201aa2567b9614/wasdi-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "2e2ea3bb293bbc93452ae80eb6399ee9", "sha256": "c2a419f6fb142838f0b5dac69f1d65dc338c495d5f1903aa7f4e31e465ccdb4f"}, "downloads": -1, "filename": "wasdi-0.3.3-py2-none-any.whl", "has_sig": false, "md5_digest": "2e2ea3bb293bbc93452ae80eb6399ee9", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 27835, "upload_time": "2020-04-10T11:48:33", "upload_time_iso_8601": "2020-04-10T11:48:33.909312Z", "url": "https://files.pythonhosted.org/packages/c9/22/9236e0242e075a9476147569454695a64be8182fbb6266efe4fcf1f35aba/wasdi-0.3.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ee959dea55a9e1210a6fcca04045bd8", "sha256": "39065aaec2c71542087735a340a67f7ba477191020b7b9d910f8183ca1bcd704"}, "downloads": -1, "filename": "wasdi-0.3.3.tar.gz", "has_sig": false, "md5_digest": "7ee959dea55a9e1210a6fcca04045bd8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33169, "upload_time": "2020-04-10T11:48:35", "upload_time_iso_8601": "2020-04-10T11:48:35.717622Z", "url": "https://files.pythonhosted.org/packages/85/b8/b293cdadcbfc46dda66e4ab43fc4a71162b26cbea343ae2ad89c6c85d572/wasdi-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "cf46c9a190b3092c310b2ee993e81591", "sha256": "64b836b148aefc321d15022fb1b94b045d85b92569d973096e1e0513d984a1ef"}, "downloads": -1, "filename": "wasdi-0.3.4-py2-none-any.whl", "has_sig": false, "md5_digest": "cf46c9a190b3092c310b2ee993e81591", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 28553, "upload_time": "2020-04-21T15:18:31", "upload_time_iso_8601": "2020-04-21T15:18:31.203840Z", "url": "https://files.pythonhosted.org/packages/3c/81/ddca5cfb0840ea4a7af696c58abe3dfe97f59319cf67fd56881efaea30df/wasdi-0.3.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4397da98af540fdc3d1857d60722580b", "sha256": "fc5792739967f77e0cfdf8e31f109b27587077a03c4726cf42a69c29064fe26a"}, "downloads": -1, "filename": "wasdi-0.3.4.tar.gz", "has_sig": false, "md5_digest": "4397da98af540fdc3d1857d60722580b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33852, "upload_time": "2020-04-21T15:18:32", "upload_time_iso_8601": "2020-04-21T15:18:32.846674Z", "url": "https://files.pythonhosted.org/packages/41/3a/89d8f5c53e2bf2aa30ff5af07d46c480dc4c339dec39aa38a9a4081982e7/wasdi-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "b5540865bef52af8a9881d60721a4db6", "sha256": "47e77493f4d80443417614057746d082d3b946a81ec02ff7aa77e4e2a4b5ef16"}, "downloads": -1, "filename": "wasdi-0.3.5-py2-none-any.whl", "has_sig": false, "md5_digest": "b5540865bef52af8a9881d60721a4db6", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 28552, "upload_time": "2020-04-21T15:42:05", "upload_time_iso_8601": "2020-04-21T15:42:05.212296Z", "url": "https://files.pythonhosted.org/packages/44/5d/eea782c2c429954e0ef2044c4acaa77d46b267617c167973eefbff143e76/wasdi-0.3.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0620450ba50a14cdeabfdb10f3958171", "sha256": "8e6c9b24f5b934c8e06716f250edac7f994991ffc53f43514525285345fc4864"}, "downloads": -1, "filename": "wasdi-0.3.5.tar.gz", "has_sig": false, "md5_digest": "0620450ba50a14cdeabfdb10f3958171", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33849, "upload_time": "2020-04-21T15:42:07", "upload_time_iso_8601": "2020-04-21T15:42:07.078387Z", "url": "https://files.pythonhosted.org/packages/12/54/083229e476a4268608d84724ac424fc1f3c4b63e1822a93525661da435da/wasdi-0.3.5.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "c0027c4b5e5590fc5ddd661f2b83edd1", "sha256": "a884ac3be62f03da5eaab8ac4a89162b19838c368d9b9a3610582b0c7468a348"}, "downloads": -1, "filename": "wasdi-0.3.6-py3-none-any.whl", "has_sig": false, "md5_digest": "c0027c4b5e5590fc5ddd661f2b83edd1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29866, "upload_time": "2020-04-22T10:11:15", "upload_time_iso_8601": "2020-04-22T10:11:15.252358Z", "url": "https://files.pythonhosted.org/packages/5a/23/905e2362a92edee31ce86a67d51af6a582d216d4c7b090eb65f9c3c8db5b/wasdi-0.3.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7533328eb4377f01a96b9dae0aca2d36", "sha256": "a9b4c606191c7b0a69bb76fb2b085d03f877ee124ebb8aa61aced59a6d8956d8"}, "downloads": -1, "filename": "wasdi-0.3.6.tar.gz", "has_sig": false, "md5_digest": "7533328eb4377f01a96b9dae0aca2d36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34551, "upload_time": "2020-04-22T10:11:26", "upload_time_iso_8601": "2020-04-22T10:11:26.256487Z", "url": "https://files.pythonhosted.org/packages/20/6b/68c0ab8a0b2cb1a80b383d8ea562efba59715cb709609b244ff978377957/wasdi-0.3.6.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "eebed1172ee634a16d6e8fbc60192ebc", "sha256": "39b622b79bf087778827acc1d1564a1a542232baa6ac5d2616c9182eac31a0ed"}, "downloads": -1, "filename": "wasdi-0.4.0-py2-none-any.whl", "has_sig": false, "md5_digest": "eebed1172ee634a16d6e8fbc60192ebc", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 28751, "upload_time": "2020-04-22T13:26:24", "upload_time_iso_8601": "2020-04-22T13:26:24.480893Z", "url": "https://files.pythonhosted.org/packages/cb/79/2250c043d7dc3d13160873558aed8ab4b9d7895dad77b333f2acc577f927/wasdi-0.4.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "43214f547a91984cde2ebf554275a563", "sha256": "86b02446e421f9519380a9f0c1f45626a160d8a9a49f07e7ff3cb8ca4ac5f29f"}, "downloads": -1, "filename": "wasdi-0.4.0.tar.gz", "has_sig": false, "md5_digest": "43214f547a91984cde2ebf554275a563", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34088, "upload_time": "2020-04-22T13:26:26", "upload_time_iso_8601": "2020-04-22T13:26:26.333638Z", "url": "https://files.pythonhosted.org/packages/b6/ca/b7db1695e3d95ff39ba23986dd02d9cd63876e61321269761e60b99a5aa7/wasdi-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "fddd8ea02c6ec67193bb6e8d4ba3cbd4", "sha256": "cd84235ed0fd9da756288040f18976a6b8fb7c47b295a5da55220d728283ecb7"}, "downloads": -1, "filename": "wasdi-0.4.1-py2-none-any.whl", "has_sig": false, "md5_digest": "fddd8ea02c6ec67193bb6e8d4ba3cbd4", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 28790, "upload_time": "2020-04-22T15:55:37", "upload_time_iso_8601": "2020-04-22T15:55:37.910414Z", "url": "https://files.pythonhosted.org/packages/aa/74/2201235e1d9c9f00d26e85a17002ad7b34666cb56ccefd91da04302c4b76/wasdi-0.4.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a273ee2655fc2f1b57c37e220a15056f", "sha256": "1988bc0d455aad70cbf5140a1a2c0042d6af8b4fbc24e9772e43eae6ae634d35"}, "downloads": -1, "filename": "wasdi-0.4.1.tar.gz", "has_sig": false, "md5_digest": "a273ee2655fc2f1b57c37e220a15056f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34117, "upload_time": "2020-04-22T15:55:39", "upload_time_iso_8601": "2020-04-22T15:55:39.561263Z", "url": "https://files.pythonhosted.org/packages/66/cb/fff3026aabf6a580e05e1a4e66f2c9abae7340f9b0dc787ed999245b609c/wasdi-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fddd8ea02c6ec67193bb6e8d4ba3cbd4", "sha256": "cd84235ed0fd9da756288040f18976a6b8fb7c47b295a5da55220d728283ecb7"}, "downloads": -1, "filename": "wasdi-0.4.1-py2-none-any.whl", "has_sig": false, "md5_digest": "fddd8ea02c6ec67193bb6e8d4ba3cbd4", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 28790, "upload_time": "2020-04-22T15:55:37", "upload_time_iso_8601": "2020-04-22T15:55:37.910414Z", "url": "https://files.pythonhosted.org/packages/aa/74/2201235e1d9c9f00d26e85a17002ad7b34666cb56ccefd91da04302c4b76/wasdi-0.4.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a273ee2655fc2f1b57c37e220a15056f", "sha256": "1988bc0d455aad70cbf5140a1a2c0042d6af8b4fbc24e9772e43eae6ae634d35"}, "downloads": -1, "filename": "wasdi-0.4.1.tar.gz", "has_sig": false, "md5_digest": "a273ee2655fc2f1b57c37e220a15056f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34117, "upload_time": "2020-04-22T15:55:39", "upload_time_iso_8601": "2020-04-22T15:55:39.561263Z", "url": "https://files.pythonhosted.org/packages/66/cb/fff3026aabf6a580e05e1a4e66f2c9abae7340f9b0dc787ed999245b609c/wasdi-0.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:32:19 2020"}