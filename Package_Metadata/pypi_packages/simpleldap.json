{"info": {"author": "Gary Wilson Jr.", "author_email": "gary@thegarywilson.com", "bugtrack_url": null, "classifiers": [], "description": "==============\n``simpleldap``\n==============\n\n\nAbout\n=====\n\nA small wrapper around the python-ldap library that provides a more Pythonic\ninterface for LDAP server connections, LDAP objects, and the common get and\nsearch operations.\n\n\nInstallation\n============\n\nInstall using pip::\n\n    pip install simpleldap\n\n\nExamples\n========\n\nA quick and easy example using ``simpleldap``::\n\n    >>> import simpleldap\n    >>> conn = simpleldap.Connection('directory.example.com')\n    >>> user = conn.get(\"uid=myuser\")\n    >>> user.dn\n    'uid=myuser,dc=directory,dc=example,dc=com'\n    >>> user['cn']\n    ['Joe Smith', 'Joe M. Smith']\n    >>> user.first('cn')\n    'Joe Smith'\n    >>> conn.close()\n\nThe ``Connection`` object can also be used as a context manager, e.g.::\n\n    with simpleldap.Connection('directory.example.com') as conn:\n        users = conn.search(\"(&(givenName=Joe)(sn=Smith))\")\n\nA common method for authenticating users is to connect to an LDAP server using\na service user/account and then attempt a bind operation using the user's\ncredentials (i.e. DN and password).  The ``authenticate`` method makes this\nsimple::\n\n    with simpleldap.Connection('directory.example.com') as conn:\n        is_valid = conn.authenticate('uid=myuser,dc=directory,dc=example,dc=com', 'password')\n\n.. note::\n    The ``authentication`` method does not perform an unbind and does not bind again\n    using the original connection's credentials; therefore, any further\n    actions following a successful ``authenticate`` call will be performed as\n    the authenticated user.\n\nLDAP also offers a feature to compare an attribute's value with a given string.\nThis can occasionally be more efficient and expressive than grabbing an entire\nobject from the LDAP store. ``simpleldap`` offers a ``compare`` method for this\nfeature::\n\n    >>> conn = simpleldap.Connection('directory.example.com')\n    >>> user_dn = 'uid=myuser,dc=directory,dc=example,dc=com'\n    >>> conn.compare(user_dn, 'cn', 'Joe Smith')\n    True", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gdub/python-simpleldap", "keywords": "ldap simple simpleldap", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "simpleldap", "package_url": "https://pypi.org/project/simpleldap/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/simpleldap/", "project_urls": {"Homepage": "https://github.com/gdub/python-simpleldap"}, "release_url": "https://pypi.org/project/simpleldap/0.8/", "requires_dist": null, "requires_python": null, "summary": "A module that makes simple LDAP usage simple.", "version": "0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about\">\n<h2>About</h2>\n<p>A small wrapper around the python-ldap library that provides a more Pythonic\ninterface for LDAP server connections, LDAP objects, and the common get and\nsearch operations.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install using pip:</p>\n<pre>pip install simpleldap\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>A quick and easy example using <tt>simpleldap</tt>:</p>\n<pre>&gt;&gt;&gt; import simpleldap\n&gt;&gt;&gt; conn = simpleldap.Connection('directory.example.com')\n&gt;&gt;&gt; user = conn.get(\"uid=myuser\")\n&gt;&gt;&gt; user.dn\n'uid=myuser,dc=directory,dc=example,dc=com'\n&gt;&gt;&gt; user['cn']\n['Joe Smith', 'Joe M. Smith']\n&gt;&gt;&gt; user.first('cn')\n'Joe Smith'\n&gt;&gt;&gt; conn.close()\n</pre>\n<p>The <tt>Connection</tt> object can also be used as a context manager, e.g.:</p>\n<pre>with simpleldap.Connection('directory.example.com') as conn:\n    users = conn.search(\"(&amp;(givenName=Joe)(sn=Smith))\")\n</pre>\n<p>A common method for authenticating users is to connect to an LDAP server using\na service user/account and then attempt a bind operation using the user\u2019s\ncredentials (i.e. DN and password).  The <tt>authenticate</tt> method makes this\nsimple:</p>\n<pre>with simpleldap.Connection('directory.example.com') as conn:\n    is_valid = conn.authenticate('uid=myuser,dc=directory,dc=example,dc=com', 'password')\n</pre>\n<div>\n<p>Note</p>\n<p>The <tt>authentication</tt> method does not perform an unbind and does not bind again\nusing the original connection\u2019s credentials; therefore, any further\nactions following a successful <tt>authenticate</tt> call will be performed as\nthe authenticated user.</p>\n</div>\n<p>LDAP also offers a feature to compare an attribute\u2019s value with a given string.\nThis can occasionally be more efficient and expressive than grabbing an entire\nobject from the LDAP store. <tt>simpleldap</tt> offers a <tt>compare</tt> method for this\nfeature:</p>\n<pre>&gt;&gt;&gt; conn = simpleldap.Connection('directory.example.com')\n&gt;&gt;&gt; user_dn = 'uid=myuser,dc=directory,dc=example,dc=com'\n&gt;&gt;&gt; conn.compare(user_dn, 'cn', 'Joe Smith')\nTrue\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1107352, "releases": {"0.7": [{"comment_text": "", "digests": {"md5": "9041fbfeda984f1a5a29b036aea1bcaa", "sha256": "986c582ad8f6ffdb79944fca311eff98afebb611790d43bc4050ce44c9308dc8"}, "downloads": -1, "filename": "simpleldap-0.7.tar.gz", "has_sig": false, "md5_digest": "9041fbfeda984f1a5a29b036aea1bcaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9087, "upload_time": "2011-07-10T10:37:27", "upload_time_iso_8601": "2011-07-10T10:37:27.257876Z", "url": "https://files.pythonhosted.org/packages/20/ed/58670d9cf6424edf4947c1c302f7e3c1c44e71c4f2fc406964d06045ccbb/simpleldap-0.7.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "df2f1f104cda1f492e2b7fa69593378b", "sha256": "a73a25f4cb1845a0f13d627d256266b0058376c0716786201075b0af4c4a6173"}, "downloads": -1, "filename": "simpleldap-0.7.1.tar.gz", "has_sig": false, "md5_digest": "df2f1f104cda1f492e2b7fa69593378b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9491, "upload_time": "2012-07-19T07:01:36", "upload_time_iso_8601": "2012-07-19T07:01:36.334880Z", "url": "https://files.pythonhosted.org/packages/61/7e/36e2509a42f4d9ca604f7ae82e749cadfa99bef566ce22755eb58fe3f611/simpleldap-0.7.1.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "f8a95b24895596338032ca4b4450f1de", "sha256": "a5916680a7fe1b2c5d74dc76351be2941d03b7b94a50d8520280e3f588a84e61"}, "downloads": -1, "filename": "simpleldap-0.8.tar.gz", "has_sig": false, "md5_digest": "f8a95b24895596338032ca4b4450f1de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8896, "upload_time": "2014-05-29T01:56:56", "upload_time_iso_8601": "2014-05-29T01:56:56.240150Z", "url": "https://files.pythonhosted.org/packages/0c/5b/65ba72ba47a0bc636175635eadd3dce438df949232b7ed561af44e30be3c/simpleldap-0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f8a95b24895596338032ca4b4450f1de", "sha256": "a5916680a7fe1b2c5d74dc76351be2941d03b7b94a50d8520280e3f588a84e61"}, "downloads": -1, "filename": "simpleldap-0.8.tar.gz", "has_sig": false, "md5_digest": "f8a95b24895596338032ca4b4450f1de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8896, "upload_time": "2014-05-29T01:56:56", "upload_time_iso_8601": "2014-05-29T01:56:56.240150Z", "url": "https://files.pythonhosted.org/packages/0c/5b/65ba72ba47a0bc636175635eadd3dce438df949232b7ed561af44e30be3c/simpleldap-0.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:33 2020"}