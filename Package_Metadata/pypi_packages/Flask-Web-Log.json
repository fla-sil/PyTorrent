{"info": {"author": "Nethunters Dev", "author_email": "dev@nethunters.co.uk", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Flask", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Flask-Web-Log\nFlask-Web-Log enables request logging for your flask app. It has support for multiple\n\n\n## Features\nThe following useful request data is logged (full explanations are in the [Flask docs](https://flask.palletsprojects.com/en/1.0.x/api/#flask.Request)):\n- time: Date and Time in ISO 8601 format\n- src_ip: Source IP, has support for 'X-Forwarded-For'\n- useragent: Client UserAgent\n- connection: Connection Type e.g. keep-alive, close\n- http_method: HTTP method e.g. GET, POST OPTIONS\n- request_scheme: URL scheme (http or https).\n- http_status: HTTP status code e.g. 200, 301, 404\n- dest_ip: Destination host IP\n- dest_port: Destination host port\n- url: URL requested\n- url_path: URL path requested\n- content_type: indicates the media type of the entity-body\n- mimetype: similar to content type but without parameters e.g. if the content type is text/HTML; charset=utf-8 the mimetype would be 'text/html'.\n- url_query: raw URL query string\n- cookies: A dictionary with the contents of all cookies transmitted with the request.\n- data: Contains the incoming request data as string in case it came with a mimetype Werkzeug does not handle.\n- content_md5: MD5 digest of the entity-body for the purpose of providing an end-to-end message integrity check (MIC) of the entity-body.\n- referrer: URL referrer\n- authorisation: HTTP basic/digest authorization header\n- duration - Request duration from the time the request was received to the time the request was replied to\n- request_id: Correlates HTTP requests between the client and server.\n- user(remote_user): If the server supports user authentication, and the script is protected, this attribute contains the username the user has authenticated as.\n\n\nFlask-Web-Log can log requests to the following formats:\n- CSV\n- JSON\n- SQLITE DB\n- STDOUT\n\n## Installation\n\nYou can install Flask-Web-Log using pip:\n```bash\npip install flask_web_log\n```\nor directly from source:\n```bash\ngit clone git@github.com:nethunters/flask-web-log.git\ncd flask-web-log\npython setup.py install\n```\n\n## Quickstart\nImport flask_web_log and initialise.\n```python\nfrom flask_web_log import Log\nLog(app)\n```\n\n## Example App\n```python\nfrom flask import Flask, request, Response\nfrom flask_web_log import Log\n\napp = Flask(__name__)\napp.config[\"LOG_TYPE\"] = \"CSV\"\nLog(app)\n\n\n@app.route('/', methods=[\"GET\", \"POST\"])\ndef hello():\n    return \"lets test this log!\"\n\n\nif __name__ == '__main__':\n    app.run(debug=True)\n\n```\n\n## Configuration\nThe following configuration values are used by Flask-Web-Log:\n\n| Config Value  \t| Description                                                                                            \t|\n|---------------\t|--------------------------------------------------------------------------------------------------------\t|\n| LOG_TYPE      \t| Format to log out to. Currently supported log formats are: CSV, JSON, STDOUT and SQLITE DB. Defaults to `CSV`. \t|                                                       \t|\n| LOG_FILENAME  \t| The filename, without the file extension, for the log. Defaults to `flask-web-log`.                        \t|\n| LOG_LOCATION  \t| The directory to log to. Defaults to the current directory.                                            \t|\n\n## License\nFlask-Web-Log is licensed under the Apache2.0 license. See [License](https://github.com/nethunterslabs/flask-web-log/blob/master/LICENSE).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/nethunterslabs/flask-web-log/archive/0.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nethunterslabs/flask-web-log", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "Flask-Web-Log", "package_url": "https://pypi.org/project/Flask-Web-Log/", "platform": "any", "project_url": "https://pypi.org/project/Flask-Web-Log/", "project_urls": {"Download": "https://github.com/nethunterslabs/flask-web-log/archive/0.1.tar.gz", "Homepage": "https://github.com/nethunterslabs/flask-web-log"}, "release_url": "https://pypi.org/project/Flask-Web-Log/0.1/", "requires_dist": null, "requires_python": "", "summary": "Enables web traffic and request logs for your Flask app.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Flask-Web-Log</h1>\n<p>Flask-Web-Log enables request logging for your flask app. It has support for multiple</p>\n<h2>Features</h2>\n<p>The following useful request data is logged (full explanations are in the <a href=\"https://flask.palletsprojects.com/en/1.0.x/api/#flask.Request\" rel=\"nofollow\">Flask docs</a>):</p>\n<ul>\n<li>time: Date and Time in ISO 8601 format</li>\n<li>src_ip: Source IP, has support for 'X-Forwarded-For'</li>\n<li>useragent: Client UserAgent</li>\n<li>connection: Connection Type e.g. keep-alive, close</li>\n<li>http_method: HTTP method e.g. GET, POST OPTIONS</li>\n<li>request_scheme: URL scheme (http or https).</li>\n<li>http_status: HTTP status code e.g. 200, 301, 404</li>\n<li>dest_ip: Destination host IP</li>\n<li>dest_port: Destination host port</li>\n<li>url: URL requested</li>\n<li>url_path: URL path requested</li>\n<li>content_type: indicates the media type of the entity-body</li>\n<li>mimetype: similar to content type but without parameters e.g. if the content type is text/HTML; charset=utf-8 the mimetype would be 'text/html'.</li>\n<li>url_query: raw URL query string</li>\n<li>cookies: A dictionary with the contents of all cookies transmitted with the request.</li>\n<li>data: Contains the incoming request data as string in case it came with a mimetype Werkzeug does not handle.</li>\n<li>content_md5: MD5 digest of the entity-body for the purpose of providing an end-to-end message integrity check (MIC) of the entity-body.</li>\n<li>referrer: URL referrer</li>\n<li>authorisation: HTTP basic/digest authorization header</li>\n<li>duration - Request duration from the time the request was received to the time the request was replied to</li>\n<li>request_id: Correlates HTTP requests between the client and server.</li>\n<li>user(remote_user): If the server supports user authentication, and the script is protected, this attribute contains the username the user has authenticated as.</li>\n</ul>\n<p>Flask-Web-Log can log requests to the following formats:</p>\n<ul>\n<li>CSV</li>\n<li>JSON</li>\n<li>SQLITE DB</li>\n<li>STDOUT</li>\n</ul>\n<h2>Installation</h2>\n<p>You can install Flask-Web-Log using pip:</p>\n<pre>pip install flask_web_log\n</pre>\n<p>or directly from source:</p>\n<pre>git clone git@github.com:nethunters/flask-web-log.git\n<span class=\"nb\">cd</span> flask-web-log\npython setup.py install\n</pre>\n<h2>Quickstart</h2>\n<p>Import flask_web_log and initialise.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask_web_log</span> <span class=\"kn\">import</span> <span class=\"n\">Log</span>\n<span class=\"n\">Log</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n</pre>\n<h2>Example App</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">Response</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_web_log</span> <span class=\"kn\">import</span> <span class=\"n\">Log</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">\"LOG_TYPE\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"CSV\"</span>\n<span class=\"n\">Log</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"GET\"</span><span class=\"p\">,</span> <span class=\"s2\">\"POST\"</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"s2\">\"lets test this log!\"</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h2>Configuration</h2>\n<p>The following configuration values are used by Flask-Web-Log:</p>\n<table>\n<thead>\n<tr>\n<th>Config Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>LOG_TYPE</td>\n<td>Format to log out to. Currently supported log formats are: CSV, JSON, STDOUT and SQLITE DB. Defaults to <code>CSV</code>.</td>\n</tr>\n<tr>\n<td>LOG_FILENAME</td>\n<td>The filename, without the file extension, for the log. Defaults to <code>flask-web-log</code>.</td>\n</tr>\n<tr>\n<td>LOG_LOCATION</td>\n<td>The directory to log to. Defaults to the current directory.</td>\n</tr></tbody></table>\n<h2>License</h2>\n<p>Flask-Web-Log is licensed under the Apache2.0 license. See <a href=\"https://github.com/nethunterslabs/flask-web-log/blob/master/LICENSE\" rel=\"nofollow\">License</a>.</p>\n\n          </div>"}, "last_serial": 5564284, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "483394fd5aedd217791fbd8bc4d93870", "sha256": "af57fdbb1d95111110d797660baf8fa15f2a2d2e409b521840998892cd438fc5"}, "downloads": -1, "filename": "Flask-Web-Log-0.1.tar.gz", "has_sig": false, "md5_digest": "483394fd5aedd217791fbd8bc4d93870", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4793, "upload_time": "2019-07-21T19:23:48", "upload_time_iso_8601": "2019-07-21T19:23:48.336173Z", "url": "https://files.pythonhosted.org/packages/75/0c/fdf82cfa6734834356785ebe0a46287e6cf9c883230395731a24d8287297/Flask-Web-Log-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "483394fd5aedd217791fbd8bc4d93870", "sha256": "af57fdbb1d95111110d797660baf8fa15f2a2d2e409b521840998892cd438fc5"}, "downloads": -1, "filename": "Flask-Web-Log-0.1.tar.gz", "has_sig": false, "md5_digest": "483394fd5aedd217791fbd8bc4d93870", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4793, "upload_time": "2019-07-21T19:23:48", "upload_time_iso_8601": "2019-07-21T19:23:48.336173Z", "url": "https://files.pythonhosted.org/packages/75/0c/fdf82cfa6734834356785ebe0a46287e6cf9c883230395731a24d8287297/Flask-Web-Log-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:08 2020"}