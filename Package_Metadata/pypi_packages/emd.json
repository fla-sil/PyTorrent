{"info": {"author": "Andrew Quinn <andrew.quinn@psych.ox.ac.uk>", "author_email": "andrew.quinn@psych.ox.ac.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Mathematics"], "description": "A python package for Empirical Mode Decomposition and related spectral analyses.\n\nPlease note that this project is in active development for the moment - the API may change relatively quickly between releases!\n\n# Installation\n\nYou can install the latest stable release from the PyPI repository\n\n```\npip install emd\n```\n\nor clone and install the source code.\n\n```\ngit clone https://gitlab.com/emd-dev/emd.git\ncd emd\npip install .\n```\n\nRequirements are specified in requirements.txt. Main functionality only depends\non numpy and scipy for computation and matplotlib for visualisation.\n\n# Quick Start\n\nFull documentation can be found at https://emd.readthedocs.org and development/issue tracking at gitlab.com/emd-dev/emd\n\nImport emd\n\n```python\nimport emd\n```\n\nDefine a simulated waveform containing a non-linear wave at 5Hz and a sinusoid at 1Hz.\n\n```python\nsample_rate = 1000\nseconds = 10\nnum_samples = sample_rate*seconds\n\nimport numpy as np\ntime_vect = np.linspace(0, seconds, num_samples)\n\nfreq = 5\nnonlinearity_deg = .25 # change extent of deformation from sinusoidal shape [-1 to 1]\nnonlinearity_phi = -np.pi/4 # change left-right skew of deformation [-pi to pi]\nx = emd.utils.abreu2010( freq, nonlinearity_deg, nonlinearity_phi, sample_rate, seconds )\nx += np.cos( 2*np.pi*1*time_vect )\n```\n\nEstimate IMFs\n\n```python\nimf = emd.sift.sift( x )\n```\n\nCompute instantaneous frequency, phase and amplitude using the Normalised Hilbert Transform Method.\n\n```python\nIP,IF,IA = emd.spectra.frequency_stats( imf, sample_rate, 'nht' )\n```\nCompute Hilbert-Huang spectrum\n\n```python\nfreq_edges,freq_bins = emd.spectra.define_hist_bins(0,10,100)\nhht = emd.spectra.hilberthuang( IF, IA, freq_edges )\n```\nMake a summary plot\n\n```python\nimport matplotlib.pyplot as plt\nplt.figure( figsize=(16,8) )\nplt.subplot(211,frameon=False)\nplt.plot(time_vect,x,'k')\nplt.plot(time_vect,imf[:,0]-4,'r')\nplt.plot(time_vect,imf[:,1]-8,'g')\nplt.plot(time_vect,imf[:,2]-12,'b')\nplt.xlim(time_vect[0], time_vect[-1])\nplt.grid(True)\nplt.subplot(2,1,2)\nplt.pcolormesh( time_vect, freq_bins, hht, cmap='ocean_r' )\nplt.ylabel('Frequency (Hz)')\nplt.xlabel('Time (secs)')\nplt.grid(True)\nplt.show()\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "EMD Spectrum Frequency Non-Linear Holospectrum Hilbert-Huang", "license": "", "maintainer": "", "maintainer_email": "", "name": "emd", "package_url": "https://pypi.org/project/emd/", "platform": "", "project_url": "https://pypi.org/project/emd/", "project_urls": null, "release_url": "https://pypi.org/project/emd/0.2.0/", "requires_dist": ["numpy", "scipy", "matplotlib", "numpydoc", "sphinx-rtd-theme", "coverage ; extra == 'test'"], "requires_python": ">3.4", "summary": "Empirical Mode Decomposition", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A python package for Empirical Mode Decomposition and related spectral analyses.</p>\n<p>Please note that this project is in active development for the moment - the API may change relatively quickly between releases!</p>\n<h1>Installation</h1>\n<p>You can install the latest stable release from the PyPI repository</p>\n<pre><code>pip install emd\n</code></pre>\n<p>or clone and install the source code.</p>\n<pre><code>git clone https://gitlab.com/emd-dev/emd.git\ncd emd\npip install .\n</code></pre>\n<p>Requirements are specified in requirements.txt. Main functionality only depends\non numpy and scipy for computation and matplotlib for visualisation.</p>\n<h1>Quick Start</h1>\n<p>Full documentation can be found at <a href=\"https://emd.readthedocs.org\" rel=\"nofollow\">https://emd.readthedocs.org</a> and development/issue tracking at gitlab.com/emd-dev/emd</p>\n<p>Import emd</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">emd</span>\n</pre>\n<p>Define a simulated waveform containing a non-linear wave at 5Hz and a sinusoid at 1Hz.</p>\n<pre><span class=\"n\">sample_rate</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>\n<span class=\"n\">seconds</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n<span class=\"n\">num_samples</span> <span class=\"o\">=</span> <span class=\"n\">sample_rate</span><span class=\"o\">*</span><span class=\"n\">seconds</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"n\">time_vect</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">seconds</span><span class=\"p\">,</span> <span class=\"n\">num_samples</span><span class=\"p\">)</span>\n\n<span class=\"n\">freq</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n<span class=\"n\">nonlinearity_deg</span> <span class=\"o\">=</span> <span class=\"o\">.</span><span class=\"mi\">25</span> <span class=\"c1\"># change extent of deformation from sinusoidal shape [-1 to 1]</span>\n<span class=\"n\">nonlinearity_phi</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"o\">/</span><span class=\"mi\">4</span> <span class=\"c1\"># change left-right skew of deformation [-pi to pi]</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">emd</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">abreu2010</span><span class=\"p\">(</span> <span class=\"n\">freq</span><span class=\"p\">,</span> <span class=\"n\">nonlinearity_deg</span><span class=\"p\">,</span> <span class=\"n\">nonlinearity_phi</span><span class=\"p\">,</span> <span class=\"n\">sample_rate</span><span class=\"p\">,</span> <span class=\"n\">seconds</span> <span class=\"p\">)</span>\n<span class=\"n\">x</span> <span class=\"o\">+=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"o\">*</span><span class=\"mi\">1</span><span class=\"o\">*</span><span class=\"n\">time_vect</span> <span class=\"p\">)</span>\n</pre>\n<p>Estimate IMFs</p>\n<pre><span class=\"n\">imf</span> <span class=\"o\">=</span> <span class=\"n\">emd</span><span class=\"o\">.</span><span class=\"n\">sift</span><span class=\"o\">.</span><span class=\"n\">sift</span><span class=\"p\">(</span> <span class=\"n\">x</span> <span class=\"p\">)</span>\n</pre>\n<p>Compute instantaneous frequency, phase and amplitude using the Normalised Hilbert Transform Method.</p>\n<pre><span class=\"n\">IP</span><span class=\"p\">,</span><span class=\"n\">IF</span><span class=\"p\">,</span><span class=\"n\">IA</span> <span class=\"o\">=</span> <span class=\"n\">emd</span><span class=\"o\">.</span><span class=\"n\">spectra</span><span class=\"o\">.</span><span class=\"n\">frequency_stats</span><span class=\"p\">(</span> <span class=\"n\">imf</span><span class=\"p\">,</span> <span class=\"n\">sample_rate</span><span class=\"p\">,</span> <span class=\"s1\">'nht'</span> <span class=\"p\">)</span>\n</pre>\n<p>Compute Hilbert-Huang spectrum</p>\n<pre><span class=\"n\">freq_edges</span><span class=\"p\">,</span><span class=\"n\">freq_bins</span> <span class=\"o\">=</span> <span class=\"n\">emd</span><span class=\"o\">.</span><span class=\"n\">spectra</span><span class=\"o\">.</span><span class=\"n\">define_hist_bins</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"n\">hht</span> <span class=\"o\">=</span> <span class=\"n\">emd</span><span class=\"o\">.</span><span class=\"n\">spectra</span><span class=\"o\">.</span><span class=\"n\">hilberthuang</span><span class=\"p\">(</span> <span class=\"n\">IF</span><span class=\"p\">,</span> <span class=\"n\">IA</span><span class=\"p\">,</span> <span class=\"n\">freq_edges</span> <span class=\"p\">)</span>\n</pre>\n<p>Make a summary plot</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">(</span> <span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">16</span><span class=\"p\">,</span><span class=\"mi\">8</span><span class=\"p\">)</span> <span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplot</span><span class=\"p\">(</span><span class=\"mi\">211</span><span class=\"p\">,</span><span class=\"n\">frameon</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">time_vect</span><span class=\"p\">,</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"s1\">'k'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">time_vect</span><span class=\"p\">,</span><span class=\"n\">imf</span><span class=\"p\">[:,</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"s1\">'r'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">time_vect</span><span class=\"p\">,</span><span class=\"n\">imf</span><span class=\"p\">[:,</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">-</span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"s1\">'g'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">time_vect</span><span class=\"p\">,</span><span class=\"n\">imf</span><span class=\"p\">[:,</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"p\">,</span><span class=\"s1\">'b'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">xlim</span><span class=\"p\">(</span><span class=\"n\">time_vect</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">time_vect</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplot</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">pcolormesh</span><span class=\"p\">(</span> <span class=\"n\">time_vect</span><span class=\"p\">,</span> <span class=\"n\">freq_bins</span><span class=\"p\">,</span> <span class=\"n\">hht</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">'ocean_r'</span> <span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">ylabel</span><span class=\"p\">(</span><span class=\"s1\">'Frequency (Hz)'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">xlabel</span><span class=\"p\">(</span><span class=\"s1\">'Time (secs)'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 6889536, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "be384117c112f8a263b3ce4346d06389", "sha256": "fad931195ee6c82569c14bb0082332fecc33aea5220f956882b1b9d743615dbe"}, "downloads": -1, "filename": "emd-0.1.0-py3.6.egg", "has_sig": false, "md5_digest": "be384117c112f8a263b3ce4346d06389", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 53199, "upload_time": "2019-12-10T11:20:14", "upload_time_iso_8601": "2019-12-10T11:20:14.915649Z", "url": "https://files.pythonhosted.org/packages/12/f5/aed297e7b3d9959fb5f4a26a23bf6b33c9140928be4cc30e006d37e8b962/emd-0.1.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8752bb87d6f3177fd884d8209528f71", "sha256": "9c02d348925a887d9aa477afe42150d94854e2784c9d7ce79919935928117df7"}, "downloads": -1, "filename": "emd-0.1.0-py3.7.egg", "has_sig": false, "md5_digest": "d8752bb87d6f3177fd884d8209528f71", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 55714, "upload_time": "2019-12-10T11:20:17", "upload_time_iso_8601": "2019-12-10T11:20:17.477785Z", "url": "https://files.pythonhosted.org/packages/09/35/646ffbcfa27c0f77719bbee2297e225588886b95d240678eabe22ce3f02c/emd-0.1.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "8571eff4447ec4c56428acc06c93ea29", "sha256": "ce1eb60c4b1950de38c038dc17ccdd73d244cdcd94fb1ef0a72bd07faeea84e3"}, "downloads": -1, "filename": "emd-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8571eff4447ec4c56428acc06c93ea29", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38469, "upload_time": "2019-12-10T11:20:12", "upload_time_iso_8601": "2019-12-10T11:20:12.208314Z", "url": "https://files.pythonhosted.org/packages/57/8f/2eb232a01fc8b63673982dd7e6e6654fe6e7313b03c4a0a0a4f24a4233d2/emd-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3147fdd3fa68b7e417f90430c822c3e", "sha256": "d42fabe3f85c59f89fb3247d8b11cb402c4af0299719ce8a5e6df8d656a08c92"}, "downloads": -1, "filename": "emd-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a3147fdd3fa68b7e417f90430c822c3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23627, "upload_time": "2019-12-10T11:20:19", "upload_time_iso_8601": "2019-12-10T11:20:19.067944Z", "url": "https://files.pythonhosted.org/packages/ce/24/d2c180c1aa42118eb261f1d25e997d198d12ac4479318e7dc864830fc4a5/emd-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "2c9a019c15c1ed401fb6a9ebd28dde39", "sha256": "b12d5d33b842bb5dfb2bd8876e08341857df37ee94a50cf1270cf294233e44b1"}, "downloads": -1, "filename": "emd-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2c9a019c15c1ed401fb6a9ebd28dde39", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.4", "size": 42878, "upload_time": "2020-03-26T16:49:30", "upload_time_iso_8601": "2020-03-26T16:49:30.230780Z", "url": "https://files.pythonhosted.org/packages/a7/ee/09aa92e019f1b0c828af6907b9cce057c50fe50a459ecf174937d05f73cb/emd-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04d66f91f80bf1ff1f83a688840d983b", "sha256": "3f6e9492587a4ccc024cf506328b632b20dce3fc238ccac498d40e96827ab83d"}, "downloads": -1, "filename": "emd-0.2.0.tar.gz", "has_sig": false, "md5_digest": "04d66f91f80bf1ff1f83a688840d983b", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.4", "size": 28439, "upload_time": "2020-03-26T16:49:33", "upload_time_iso_8601": "2020-03-26T16:49:33.057305Z", "url": "https://files.pythonhosted.org/packages/1a/bf/ab932c46d3d25922e131d8bd7f964207bcb2e76010ef19b3012974e5b0af/emd-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2c9a019c15c1ed401fb6a9ebd28dde39", "sha256": "b12d5d33b842bb5dfb2bd8876e08341857df37ee94a50cf1270cf294233e44b1"}, "downloads": -1, "filename": "emd-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2c9a019c15c1ed401fb6a9ebd28dde39", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.4", "size": 42878, "upload_time": "2020-03-26T16:49:30", "upload_time_iso_8601": "2020-03-26T16:49:30.230780Z", "url": "https://files.pythonhosted.org/packages/a7/ee/09aa92e019f1b0c828af6907b9cce057c50fe50a459ecf174937d05f73cb/emd-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04d66f91f80bf1ff1f83a688840d983b", "sha256": "3f6e9492587a4ccc024cf506328b632b20dce3fc238ccac498d40e96827ab83d"}, "downloads": -1, "filename": "emd-0.2.0.tar.gz", "has_sig": false, "md5_digest": "04d66f91f80bf1ff1f83a688840d983b", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.4", "size": 28439, "upload_time": "2020-03-26T16:49:33", "upload_time_iso_8601": "2020-03-26T16:49:33.057305Z", "url": "https://files.pythonhosted.org/packages/1a/bf/ab932c46d3d25922e131d8bd7f964207bcb2e76010ef19b3012974e5b0af/emd-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:39 2020"}