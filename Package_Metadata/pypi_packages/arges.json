{"info": {"author": "Adrian Deccico", "author_email": "deccico@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Interpreters", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Quality Assurance", "Topic :: Software Development :: Testing"], "description": "===========\nArges\n===========\n\nArges scripts are very simple and emulate a very high level language from where you call the testing/execution actions. Arges provides a set of utilities for\nrapid automated testing to interact with any kind of interfaces including the web ui side (by using Selenium) and the server side / command line testing.\n\nIt supports handling parameters, which are totally separated from the scripts.\n\nWithin the test scripts you call the actions which by now, are divides into three main categories:\n\n-Web handling. From where you can interact with any web site. Selenium 1.0.1 library is used internally.\n\n-Command line executions. To execute any kind of command and check the return code or its output.\n\n-Parameters handling. \n\n\nQuick installation and use\n-----------------------------\nJust type:\n\npip install arges\n\nAnd you are ready to go. Arges will interpret .tcase (test case files) and \n.tsuite (test suite files) in your command line. \n\nThis files are high level testing files which are used to launch your testing \ncommands. Within the .tdata files you can put the parameters so your scripts \ncould be generic. .tsuite are used to group .tcase and other .tsuite files.\n\nThe metaphor of the system is a high level interpreter of a simple \"testing\" \nlanguage that a business analyst or qa guy could read without messing with \nthe code. Your tests could be grouped in tcases, so in this way you will \nbuild reusable, testing \"bricks\", such as a login module. \n\nThere is an example in the same program. For the sake of testing arges you \ncan try this: \n\nsudo arges <your_python_dir>/dist-packages/arges/data/dummy_test_dir/dummy_app/tcase/goodbye_cruel_world.tcase \n\nIn case you don't know, the sudo command is just to get administrative rights. \nThis is so in Ubuntu and other \\*nix systems.\n\nYou don't need to be administrator to run arges, but as the report file will be \ncreated in a \"reports\" directory within the .tcase dir, you will need some \nadministrative rights. You could avoid this, just by copying the dummy dir to \na home folder. Report file will contain the results of your testing.\n\n\nAdding your own commands.\n-----------------------------\nArges is extensible! \n\nJust add your own module within argestools/api with a \"runCommand\" method. \nYou will also need to declare it in the \"__all__\" list of the same package, \njust by editing argestools/api/__init__.py and adding your modules's name to \nthe list present within the firsts lines. \n \n\nWeb testing.\n-----------------------------\nSelenium in included within the system and you could invoke its commands within \nyour testing scripts. hello_world.tcase is a simple example. In order to get \nSelenium commands workingm you will need to start Selenium which is present in \ndata/thirdparty/selenium-server-1.0.1\n\nSelenium will let you send commands and get information from any web.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://code.google.com/p/arges/", "keywords": "automated testing,qa,selenium,testing,bdd,tdd", "license": "Apache License 2.0", "maintainer": null, "maintainer_email": null, "name": "arges", "package_url": "https://pypi.org/project/arges/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/arges/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://code.google.com/p/arges/"}, "release_url": "https://pypi.org/project/arges/0.8.9/", "requires_dist": null, "requires_python": null, "summary": "Simple and multi platform automated testing and tasks execution tool, that can be used straight from the command line.", "version": "0.8.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Arges scripts are very simple and emulate a very high level language from where you call the testing/execution actions. Arges provides a set of utilities for\nrapid automated testing to interact with any kind of interfaces including the web ui side (by using Selenium) and the server side / command line testing.</p>\n<p>It supports handling parameters, which are totally separated from the scripts.</p>\n<p>Within the test scripts you call the actions which by now, are divides into three main categories:</p>\n<p>-Web handling. From where you can interact with any web site. Selenium 1.0.1 library is used internally.</p>\n<p>-Command line executions. To execute any kind of command and check the return code or its output.</p>\n<p>-Parameters handling.</p>\n<div id=\"quick-installation-and-use\">\n<h2>Quick installation and use</h2>\n<p>Just type:</p>\n<p>pip install arges</p>\n<p>And you are ready to go. Arges will interpret .tcase (test case files) and\n.tsuite (test suite files) in your command line.</p>\n<p>This files are high level testing files which are used to launch your testing\ncommands. Within the .tdata files you can put the parameters so your scripts\ncould be generic. .tsuite are used to group .tcase and other .tsuite files.</p>\n<p>The metaphor of the system is a high level interpreter of a simple \u201ctesting\u201d\nlanguage that a business analyst or qa guy could read without messing with\nthe code. Your tests could be grouped in tcases, so in this way you will\nbuild reusable, testing \u201cbricks\u201d, such as a login module.</p>\n<p>There is an example in the same program. For the sake of testing arges you\ncan try this:</p>\n<p>sudo arges &lt;your_python_dir&gt;/dist-packages/arges/data/dummy_test_dir/dummy_app/tcase/goodbye_cruel_world.tcase</p>\n<p>In case you don\u2019t know, the sudo command is just to get administrative rights.\nThis is so in Ubuntu and other *nix systems.</p>\n<p>You don\u2019t need to be administrator to run arges, but as the report file will be\ncreated in a \u201creports\u201d directory within the .tcase dir, you will need some\nadministrative rights. You could avoid this, just by copying the dummy dir to\na home folder. Report file will contain the results of your testing.</p>\n</div>\n<div id=\"adding-your-own-commands\">\n<h2>Adding your own commands.</h2>\n<p>Arges is extensible!</p>\n<p>Just add your own module within argestools/api with a \u201crunCommand\u201d method.\nYou will also need to declare it in the \u201c__all__\u201d list of the same package,\njust by editing argestools/api/__init__.py and adding your modules\u2019s name to\nthe list present within the firsts lines.</p>\n</div>\n<div id=\"web-testing\">\n<h2>Web testing.</h2>\n<p>Selenium in included within the system and you could invoke its commands within\nyour testing scripts. hello_world.tcase is a simple example. In order to get\nSelenium commands workingm you will need to start Selenium which is present in\ndata/thirdparty/selenium-server-1.0.1</p>\n<p>Selenium will let you send commands and get information from any web.</p>\n</div>\n\n          </div>"}, "last_serial": 786420, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "497ca29c789b7e3fb326d041cfdef5e0", "sha256": "763b3c1ac7d53ac463254abde0d87e3c3b21f6f45686016ffeaee184c2e49893"}, "downloads": -1, "filename": "arges-0.1.tar.gz", "has_sig": false, "md5_digest": "497ca29c789b7e3fb326d041cfdef5e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61392, "upload_time": "2010-09-29T03:06:18", "upload_time_iso_8601": "2010-09-29T03:06:18.958016Z", "url": "https://files.pythonhosted.org/packages/01/7d/188f95fbfd643e1cef10a3a9655ea8d2071ef6cff84e6fde1957e48b4277/arges-0.1.tar.gz", "yanked": false}], "0.1dev": [{"comment_text": "", "digests": {"md5": "f8de8af5e18e8dc265595f49a0da1755", "sha256": "033e910609331b232a16757fe66e37986083ed927605f4b145e61aa5dab70c9f"}, "downloads": -1, "filename": "arges-0.1dev.tar.gz", "has_sig": false, "md5_digest": "f8de8af5e18e8dc265595f49a0da1755", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 971, "upload_time": "2010-09-29T02:41:12", "upload_time_iso_8601": "2010-09-29T02:41:12.503541Z", "url": "https://files.pythonhosted.org/packages/84/4b/5d37936c9134fb9bed8eb68e4691fbc1a0eb787a3e73dcdfa7469186748c/arges-0.1dev.tar.gz", "yanked": false}], "0.8.2dev": [{"comment_text": "", "digests": {"md5": "aba8b565822dd43750a73bbd877a250c", "sha256": "696fc41e2df3762573b13e5a910cec446ba464d21acc805f5642902e5dd36d2b"}, "downloads": -1, "filename": "arges-0.8.2dev.tar.gz", "has_sig": false, "md5_digest": "aba8b565822dd43750a73bbd877a250c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1163, "upload_time": "2010-09-12T13:42:17", "upload_time_iso_8601": "2010-09-12T13:42:17.613118Z", "url": "https://files.pythonhosted.org/packages/89/9a/9884173215b6ca0c1cb5f688552c9b8dcacf22c5ccb850b4f3d9ec6dc597/arges-0.8.2dev.tar.gz", "yanked": false}], "0.8.4dev": [{"comment_text": "", "digests": {"md5": "a5ebbf3fb07b48ced30aec1624e866a6", "sha256": "e29b881655b9c4bdb6d0860661cd764237ce0fb182b184908da07654382ceda2"}, "downloads": -1, "filename": "arges-0.8.4dev.tar.gz", "has_sig": false, "md5_digest": "a5ebbf3fb07b48ced30aec1624e866a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61403, "upload_time": "2010-09-29T03:07:29", "upload_time_iso_8601": "2010-09-29T03:07:29.184346Z", "url": "https://files.pythonhosted.org/packages/6a/90/ccce6394091edaf52cbf4f91c11bbb0ffa5676ef6771591ad34a67d28b9e/arges-0.8.4dev.tar.gz", "yanked": false}], "0.8.5dev": [{"comment_text": "", "digests": {"md5": "9dc9c444743defdf0c70eb189969d9a5", "sha256": "a71a45304d0de79249db980aa54540bcc0c9476f2281117603fe8fda10193292"}, "downloads": -1, "filename": "arges-0.8.5dev.tar.gz", "has_sig": false, "md5_digest": "9dc9c444743defdf0c70eb189969d9a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5499594, "upload_time": "2010-09-29T03:09:58", "upload_time_iso_8601": "2010-09-29T03:09:58.608325Z", "url": "https://files.pythonhosted.org/packages/2b/56/1aa6b4a40da17c3deefd2fdd8e1f69e8b0775182df8098d48785765c67f2/arges-0.8.5dev.tar.gz", "yanked": false}], "0.8.6dev": [{"comment_text": "", "digests": {"md5": "37f1f8a7684af5dc012a170aca0f7423", "sha256": "e90e1314470b67bac1f6273c1996c876bdd50b2c6634dcbf7f77f6ec3db29dc5"}, "downloads": -1, "filename": "arges-0.8.6dev.tar.gz", "has_sig": false, "md5_digest": "37f1f8a7684af5dc012a170aca0f7423", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5500288, "upload_time": "2010-09-29T03:17:14", "upload_time_iso_8601": "2010-09-29T03:17:14.603129Z", "url": "https://files.pythonhosted.org/packages/ef/77/0b3abda0703418dfe65eb31fedd9b6ed48478a8de2baea0edf1e6f146ee6/arges-0.8.6dev.tar.gz", "yanked": false}], "0.8.8": [{"comment_text": "", "digests": {"md5": "602994b9eb157a633757d3ee64e827f8", "sha256": "04b0449d91ccbe0b68170eef6643fdb74aaeb8e5b11ad647bf53794dd0a656ff"}, "downloads": -1, "filename": "arges-0.8.8.tar.gz", "has_sig": false, "md5_digest": "602994b9eb157a633757d3ee64e827f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5501662, "upload_time": "2010-10-11T01:50:59", "upload_time_iso_8601": "2010-10-11T01:50:59.023333Z", "url": "https://files.pythonhosted.org/packages/cc/cc/613e525ef8eb4298b3be5d2268c6f6867786e2903ac7183ee6d23cba53f4/arges-0.8.8.tar.gz", "yanked": false}], "0.8.9": [{"comment_text": "", "digests": {"md5": "c915a4563960e00ede15f4b59a8fd6d2", "sha256": "46c61d1dd1f56833f3edebd5bd0e5fe170d94370b124d745ac8f442c3ab784a4"}, "downloads": -1, "filename": "arges-0.8.9.tar.gz", "has_sig": false, "md5_digest": "c915a4563960e00ede15f4b59a8fd6d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5501831, "upload_time": "2010-10-11T02:15:25", "upload_time_iso_8601": "2010-10-11T02:15:25.193759Z", "url": "https://files.pythonhosted.org/packages/39/45/2dfe8e8821b9d669e7287c59b51faea5bd808818a9eeb0fe97ddd431a9fe/arges-0.8.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c915a4563960e00ede15f4b59a8fd6d2", "sha256": "46c61d1dd1f56833f3edebd5bd0e5fe170d94370b124d745ac8f442c3ab784a4"}, "downloads": -1, "filename": "arges-0.8.9.tar.gz", "has_sig": false, "md5_digest": "c915a4563960e00ede15f4b59a8fd6d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5501831, "upload_time": "2010-10-11T02:15:25", "upload_time_iso_8601": "2010-10-11T02:15:25.193759Z", "url": "https://files.pythonhosted.org/packages/39/45/2dfe8e8821b9d669e7287c59b51faea5bd808818a9eeb0fe97ddd431a9fe/arges-0.8.9.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:19 2020"}