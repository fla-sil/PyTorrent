{"info": {"author": "Christopher Flynn", "author_email": "crf204@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "soh (sleight-of-hand)\n=====================\n\n|travis| |codecov| |pypi| |pyversions|\n\n\n.. |travis| image:: https://img.shields.io/travis/crflynn/soh.svg\n    :target: https://travis-ci.org/crflynn/soh\n\n.. |codecov| image:: https://codecov.io/gh/crflynn/soh/branch/master/graphs/badge.svg\n    :target: https://codecov.io/gh/crflynn/soh\n\n.. |pypi| image:: https://img.shields.io/pypi/v/soh.svg\n    :target: https://pypi.python.org/pypi/soh\n\n.. |pyversions| image:: https://img.shields.io/pypi/pyversions/soh.svg\n    :target: https://pypi.python.org/pypi/soh\n\nSleight of hand, or ``soh``, is a command line tool that handles a lot of common tasks for developers. For the most part, it offers a convenient command line interface to a lot of standard library operations, such as base64 encoding, creating datetime strings, fetching system information, uuid generation, etc.\n\n\nInstallation\n------------\n\nTo install ``soh`` use ``pip``.\n\n.. code-block:: shell\n\n    pip install soh\n\n\n\nUsage\n-----\n\nThe entry point for all commands is\n\n.. code-block:: shell\n\n    $ soh\n    Usage: soh [OPTIONS] COMMAND [ARGS]...\n\n      Sleight of hand CLI commands.\n\n      (+) indicates command group. Use the -c flag on most commands to copy\n      output to clipboard\n\n    Options:\n      -h, --help  Show this message and exit.\n\n    Commands:\n      b64      + Base64 operations\n      create   + Create files\n      dt       + Datetimes\n      epoch    + Epoch times\n      json     JSON printing\n      jwt      Display JWT contents\n      secret   + Secrets generators\n      serve    Simple http server at current directory\n      sys      + System information\n      uuid     Generate UUIDs\n      version  soh CLI version\n\n\n\nTo get help on any command use the ``-h`` or ``--help`` flag.\n\n\n.. code-block:: shell\n\n    $ soh uuid -h\n    Usage: soh uuid [OPTIONS]\n\n      Generate UUIDs.\n\n    Options:\n      -v, --version INTEGER  uuid version  [default: 4]\n      -ns, --namespace TEXT  namespace (v3, v5) {dns, url, oid, x500}\n      -n, --name TEXT        name (v3, v5)\n      -u, --upper            use upper case\n      -c, --clip             copy to clipboard\n      -h, --help             Show this message and exit.\n\n\nTo copy the execution output of most commands to clipboard, use the ``-c`` or ``--clip`` command.\n\n.. code-block:: shell\n\n    $ soh uuid -c\n    c64af300-8895-4dff-b005-15dcd4c72f24 (copied to clipboard \ud83d\udccb)\n\n\n\n\n\nDeveloper Setup\n---------------\n\nTo set up a local development environment follow these (or portions of these) steps.\n\n.. code-block:: shell\n\n    # clone\n    git clone git@github.com:crflynn/soh.git\n    cd soh\n\n    # setup pre-commit\n    brew install pre-commit\n    pre-commit install\n\n    # setup pyenv and python 3\n    brew install pyenv\n    pyenv install 3.7.3\n    pyenv local 3.7.3\n\n    # setup poetry and install deps\n    curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python\n    poetry install\n    poetry install --develop soh\n\n\n``pre-commit`` will enforce ``black`` code formatting to pass before committing. The configuration for ``black`` is in the ``pyproject.toml`` file.\n\nTo run tests,\n\n.. code-block:: shell\n\n    pytest\n\n\nThe testing configuration is found in ``pytest.ini``.\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/crflynn/soh", "keywords": "soh cli tool", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "soh", "package_url": "https://pypi.org/project/soh/", "platform": "", "project_url": "https://pypi.org/project/soh/", "project_urls": {"Homepage": "https://github.com/crflynn/soh"}, "release_url": "https://pypi.org/project/soh/0.1.1/", "requires_dist": ["arrow", "click", "pyperclip", "requests"], "requires_python": "", "summary": "Sleight of hand (soh) CLI tool.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/crflynn/soh\" rel=\"nofollow\"><img alt=\"travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/312c33f3734f00df93eb5aa5993ba0f9a8276970/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6372666c796e6e2f736f682e737667\"></a> <a href=\"https://codecov.io/gh/crflynn/soh\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e8c34153d9d29d46be23c05e1caa8c94b0cd338c/68747470733a2f2f636f6465636f762e696f2f67682f6372666c796e6e2f736f682f6272616e63682f6d61737465722f6772617068732f62616467652e737667\"></a> <a href=\"https://pypi.python.org/pypi/soh\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/222364569ea3bc5f7a34f9d2f8ae6504cb577c7d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f736f682e737667\"></a> <a href=\"https://pypi.python.org/pypi/soh\" rel=\"nofollow\"><img alt=\"pyversions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fba07119c1245b1007f5f0d56929dc89862f22a1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f736f682e737667\"></a></p>\n<p>Sleight of hand, or <tt>soh</tt>, is a command line tool that handles a lot of common tasks for developers. For the most part, it offers a convenient command line interface to a lot of standard library operations, such as base64 encoding, creating datetime strings, fetching system information, uuid generation, etc.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install <tt>soh</tt> use <tt>pip</tt>.</p>\n<pre>pip install soh\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The entry point for all commands is</p>\n<pre>$ soh\nUsage: soh <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> COMMAND <span class=\"o\">[</span>ARGS<span class=\"o\">]</span>...\n\n  Sleight of hand CLI commands.\n\n  <span class=\"o\">(</span>+<span class=\"o\">)</span> indicates <span class=\"nb\">command</span> group. Use the -c flag on most commands to copy\n  output to clipboard\n\nOptions:\n  -h, --help  Show this message and exit.\n\nCommands:\n  b64      + Base64 operations\n  create   + Create files\n  dt       + Datetimes\n  epoch    + Epoch <span class=\"nb\">times</span>\n  json     JSON printing\n  jwt      Display JWT contents\n  secret   + Secrets generators\n  serve    Simple http server at current directory\n  sys      + System information\n  uuid     Generate UUIDs\n  version  soh CLI version\n</pre>\n<p>To get help on any command use the <tt><span class=\"pre\">-h</span></tt> or <tt><span class=\"pre\">--help</span></tt> flag.</p>\n<pre>$ soh uuid -h\nUsage: soh uuid <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n\n  Generate UUIDs.\n\nOptions:\n  -v, --version INTEGER  uuid version  <span class=\"o\">[</span>default: <span class=\"m\">4</span><span class=\"o\">]</span>\n  -ns, --namespace TEXT  namespace <span class=\"o\">(</span>v3, v5<span class=\"o\">)</span> <span class=\"o\">{</span>dns, url, oid, x500<span class=\"o\">}</span>\n  -n, --name TEXT        name <span class=\"o\">(</span>v3, v5<span class=\"o\">)</span>\n  -u, --upper            use upper <span class=\"k\">case</span>\n  -c, --clip             copy to clipboard\n  -h, --help             Show this message and exit.\n</pre>\n<p>To copy the execution output of most commands to clipboard, use the <tt><span class=\"pre\">-c</span></tt> or <tt><span class=\"pre\">--clip</span></tt> command.</p>\n<pre>$ soh uuid -c\nc64af300-8895-4dff-b005-15dcd4c72f24 <span class=\"o\">(</span>copied to clipboard \ud83d\udccb<span class=\"o\">)</span>\n</pre>\n</div>\n<div id=\"developer-setup\">\n<h2>Developer Setup</h2>\n<p>To set up a local development environment follow these (or portions of these) steps.</p>\n<pre><span class=\"c1\"># clone\n</span>git clone git@github.com:crflynn/soh.git\n<span class=\"nb\">cd</span> soh\n\n<span class=\"c1\"># setup pre-commit\n</span>brew install pre-commit\npre-commit install\n\n<span class=\"c1\"># setup pyenv and python 3\n</span>brew install pyenv\npyenv install <span class=\"m\">3</span>.7.3\npyenv <span class=\"nb\">local</span> <span class=\"m\">3</span>.7.3\n\n<span class=\"c1\"># setup poetry and install deps\n</span>curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py <span class=\"p\">|</span> python\npoetry install\npoetry install --develop soh\n</pre>\n<p><tt><span class=\"pre\">pre-commit</span></tt> will enforce <tt>black</tt> code formatting to pass before committing. The configuration for <tt>black</tt> is in the <tt>pyproject.toml</tt> file.</p>\n<p>To run tests,</p>\n<pre>pytest\n</pre>\n<p>The testing configuration is found in <tt>pytest.ini</tt>.</p>\n</div>\n\n          </div>"}, "last_serial": 5319930, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "c7e6a0df88386242c98e01f7ff6b5b2f", "sha256": "1b78029ab69d4a1ec41d8b29a932df3a1e9b13e95f539a2f957a474b12c313bb"}, "downloads": -1, "filename": "soh-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c7e6a0df88386242c98e01f7ff6b5b2f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23015, "upload_time": "2019-05-26T20:48:16", "upload_time_iso_8601": "2019-05-26T20:48:16.646638Z", "url": "https://files.pythonhosted.org/packages/7e/c4/d2d92410b57f56d9a56c58d68df00a068c36dbc45c1314904b6989fa7f6c/soh-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5fadc6852748dea52d9d96938e7f8900", "sha256": "0ace552a61c42a6db5a451112d338fdb829ff56332bb3191d136ca062298a47d"}, "downloads": -1, "filename": "soh-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5fadc6852748dea52d9d96938e7f8900", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14627, "upload_time": "2019-05-26T20:48:19", "upload_time_iso_8601": "2019-05-26T20:48:19.774621Z", "url": "https://files.pythonhosted.org/packages/f6/ed/aad7e541e64bff5fdb2a31b3cf6cee1a214ce7cbd9b5152c5d74874f284e/soh-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ab338a3abcc4752cdb1be5c9c9e2b064", "sha256": "9179ef8940f2dbb2ef300bbf1bc7b5d008ca204e3068e76d1a6c666318b0e60d"}, "downloads": -1, "filename": "soh-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ab338a3abcc4752cdb1be5c9c9e2b064", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23337, "upload_time": "2019-05-26T22:15:11", "upload_time_iso_8601": "2019-05-26T22:15:11.002431Z", "url": "https://files.pythonhosted.org/packages/ee/3e/3ea206439b401b9191789895a4e8c3d93fe371afe5ba50513bf745b95ad7/soh-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "566175dd5da3895e08b38c1e2f89e3d3", "sha256": "fbb97b4fd8e04c88bd0ca94bf64a6252c800cff40f566e5d693b97a4a30adce8"}, "downloads": -1, "filename": "soh-0.1.1.tar.gz", "has_sig": false, "md5_digest": "566175dd5da3895e08b38c1e2f89e3d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15113, "upload_time": "2019-05-26T22:15:12", "upload_time_iso_8601": "2019-05-26T22:15:12.632631Z", "url": "https://files.pythonhosted.org/packages/f4/5b/f6cb545ad3311d91db5645cfeb90ece48224954f7085056e97ae279473b7/soh-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ab338a3abcc4752cdb1be5c9c9e2b064", "sha256": "9179ef8940f2dbb2ef300bbf1bc7b5d008ca204e3068e76d1a6c666318b0e60d"}, "downloads": -1, "filename": "soh-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ab338a3abcc4752cdb1be5c9c9e2b064", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23337, "upload_time": "2019-05-26T22:15:11", "upload_time_iso_8601": "2019-05-26T22:15:11.002431Z", "url": "https://files.pythonhosted.org/packages/ee/3e/3ea206439b401b9191789895a4e8c3d93fe371afe5ba50513bf745b95ad7/soh-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "566175dd5da3895e08b38c1e2f89e3d3", "sha256": "fbb97b4fd8e04c88bd0ca94bf64a6252c800cff40f566e5d693b97a4a30adce8"}, "downloads": -1, "filename": "soh-0.1.1.tar.gz", "has_sig": false, "md5_digest": "566175dd5da3895e08b38c1e2f89e3d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15113, "upload_time": "2019-05-26T22:15:12", "upload_time_iso_8601": "2019-05-26T22:15:12.632631Z", "url": "https://files.pythonhosted.org/packages/f4/5b/f6cb545ad3311d91db5645cfeb90ece48224954f7085056e97ae279473b7/soh-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:52 2020"}