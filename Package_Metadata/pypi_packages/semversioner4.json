{"info": {"author": "Raul Gomis", "author_email": "raulgomis@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "# Semversioner\nThe easiest way to manage [semantic versioning](https://semver.org/) in your project and generate CHANGELOG.md file automatically. \n\nSemversioner will provide the tooling to automate semver release process for libraries, docker images, etc. \n\nThis project was inspired by the way AWS manages their versioning for [AWS-cli](https://github.com/aws/aws-cli/).\n\n## Semantic Versioning\nThe [semantic versioning](https://semver.org/) spec involves several possible variations, but to simplify, in _Semversioner_ we are using the three-part version number:\n\n`<major>.<minor>.<patch>`\n\nConstructed with the following guidelines:\n- Breaking backward compatibility or major features bumps the major (and resets the minor and patch).\n- New additions without breaking backward compatibility bumps the minor (and resets the patch).\n- Bug fixes and misc changes bumps the patch.\n\nAn example would be 1.0.0\n\n## How it works\n\nAt any given time, the ``.semversioner/`` directory looks like:\n\n    .semversioner\n    \u2514\u2500\u2500 next-release\n        \u251c\u2500\u2500 minor-20181227010225.json\n        \u2514\u2500\u2500 major-20181228010225.json\n    \u251c\u2500\u2500 1.1.0.json\n    \u251c\u2500\u2500 1.1.1.json\n    \u251c\u2500\u2500 1.1.2.json\n\nThe release process takes everything in ``next-release`` and aggregates them all together in a single JSON file for that release (e.g ``1.12.0.json``).  This\nJSON file is a list of all the individual JSON files from ``next-release``.\n\n## Install\n\n```shell\n$ pip install semversioner\n```\n\n## Usage\n\n### Bumping the version\n\nIn your local environment your will use the CLI to create the different changeset files that will be committed with your code. For example:\n```shell\n$ semversioner add-change --type patch --description \"Fix security vulnerability with authentication.\"\n```\n\nThen, in your CI/CD tool you will need to release (generating automatically version number) and creating the the changelog file. \n```shell\n$ semversioner release\n```\n\n### Generating Changelog\n\nAs a part of your CI/CD workflow, you will be able to generate the Changelog file with all changes.\n\n```shell\n$ semversioner changelog > CHANGELOG.md\n```\n\n## License\nCopyright (c) 2020 Raul Gomis.\nMIT licensed, see [LICENSE](LICENSE) file.\n\n---\nMade with \u2665 by `Raul Gomis <https://twitter.com/rgomis>`.\n\n\n# Changelog\nNote: version releases in the 0.x.y range may introduce breaking changes.\n\n## 0.8.2\n\n- patch: Minor improvements\n\n## 0.8.1\n\n- patch: Fix installer error when referencing to LICENSE file\n\n## 0.8.0\n\n- minor: Enabled autocompletion by default\n\n## 0.7.1\n\n- patch: Improve docs for open source\n\n## 0.7.0\n\n- minor: Fail with error code when no changes are provided in the release command\n\n## 0.6.16\n\n- patch: Fix bug: add require module in setup.py\n\n## 0.6.15\n\n- patch: Fix packaging for LICENSE\n- patch: Improve README.md documentation\n- patch: Use jinja2 template engine internally to generate the changelog\n\n## 0.6.14\n\n- patch: Update docs\n\n## 0.6.13\n\n- patch: Fix README.md\n\n## 0.6.12\n\n- patch: Fix long description content type\n\n## 0.6.11\n\n- patch: Add README.md file\n\n## 0.6.10\n\n- patch: Fix code consistency\n\n## 0.6.9\n\n- patch: Fix packaging\n\n## 0.6.8\n\n- patch: Tag the repository when releasing\n\n## 0.6.7\n\n- patch: Fix tests and improve coverage\n\n## 0.6.6\n\n- minor: Initial version\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/raulgomis/semversioner", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "semversioner4", "package_url": "https://pypi.org/project/semversioner4/", "platform": "", "project_url": "https://pypi.org/project/semversioner4/", "project_urls": {"Homepage": "https://github.com/raulgomis/semversioner"}, "release_url": "https://pypi.org/project/semversioner4/0.8.2/", "requires_dist": ["click", "jinja2", "colorama"], "requires_python": ">=3.1.0", "summary": "Manage properly semver in your repository", "version": "0.8.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Semversioner</h1>\n<p>The easiest way to manage <a href=\"https://semver.org/\" rel=\"nofollow\">semantic versioning</a> in your project and generate CHANGELOG.md file automatically.</p>\n<p>Semversioner will provide the tooling to automate semver release process for libraries, docker images, etc.</p>\n<p>This project was inspired by the way AWS manages their versioning for <a href=\"https://github.com/aws/aws-cli/\" rel=\"nofollow\">AWS-cli</a>.</p>\n<h2>Semantic Versioning</h2>\n<p>The <a href=\"https://semver.org/\" rel=\"nofollow\">semantic versioning</a> spec involves several possible variations, but to simplify, in <em>Semversioner</em> we are using the three-part version number:</p>\n<p><code>&lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</code></p>\n<p>Constructed with the following guidelines:</p>\n<ul>\n<li>Breaking backward compatibility or major features bumps the major (and resets the minor and patch).</li>\n<li>New additions without breaking backward compatibility bumps the minor (and resets the patch).</li>\n<li>Bug fixes and misc changes bumps the patch.</li>\n</ul>\n<p>An example would be 1.0.0</p>\n<h2>How it works</h2>\n<p>At any given time, the <code>.semversioner/</code> directory looks like:</p>\n<pre><code>.semversioner\n\u2514\u2500\u2500 next-release\n    \u251c\u2500\u2500 minor-20181227010225.json\n    \u2514\u2500\u2500 major-20181228010225.json\n\u251c\u2500\u2500 1.1.0.json\n\u251c\u2500\u2500 1.1.1.json\n\u251c\u2500\u2500 1.1.2.json\n</code></pre>\n<p>The release process takes everything in <code>next-release</code> and aggregates them all together in a single JSON file for that release (e.g <code>1.12.0.json</code>).  This\nJSON file is a list of all the individual JSON files from <code>next-release</code>.</p>\n<h2>Install</h2>\n<pre>$ pip install semversioner\n</pre>\n<h2>Usage</h2>\n<h3>Bumping the version</h3>\n<p>In your local environment your will use the CLI to create the different changeset files that will be committed with your code. For example:</p>\n<pre>$ semversioner add-change --type patch --description <span class=\"s2\">\"Fix security vulnerability with authentication.\"</span>\n</pre>\n<p>Then, in your CI/CD tool you will need to release (generating automatically version number) and creating the the changelog file.</p>\n<pre>$ semversioner release\n</pre>\n<h3>Generating Changelog</h3>\n<p>As a part of your CI/CD workflow, you will be able to generate the Changelog file with all changes.</p>\n<pre>$ semversioner changelog &gt; CHANGELOG.md\n</pre>\n<h2>License</h2>\n<p>Copyright (c) 2020 Raul Gomis.\nMIT licensed, see <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> file.</p>\n<hr>\n<p>Made with \u2665 by <code>Raul Gomis &lt;https://twitter.com/rgomis&gt;</code>.</p>\n<h1>Changelog</h1>\n<p>Note: version releases in the 0.x.y range may introduce breaking changes.</p>\n<h2>0.8.2</h2>\n<ul>\n<li>patch: Minor improvements</li>\n</ul>\n<h2>0.8.1</h2>\n<ul>\n<li>patch: Fix installer error when referencing to LICENSE file</li>\n</ul>\n<h2>0.8.0</h2>\n<ul>\n<li>minor: Enabled autocompletion by default</li>\n</ul>\n<h2>0.7.1</h2>\n<ul>\n<li>patch: Improve docs for open source</li>\n</ul>\n<h2>0.7.0</h2>\n<ul>\n<li>minor: Fail with error code when no changes are provided in the release command</li>\n</ul>\n<h2>0.6.16</h2>\n<ul>\n<li>patch: Fix bug: add require module in setup.py</li>\n</ul>\n<h2>0.6.15</h2>\n<ul>\n<li>patch: Fix packaging for LICENSE</li>\n<li>patch: Improve README.md documentation</li>\n<li>patch: Use jinja2 template engine internally to generate the changelog</li>\n</ul>\n<h2>0.6.14</h2>\n<ul>\n<li>patch: Update docs</li>\n</ul>\n<h2>0.6.13</h2>\n<ul>\n<li>patch: Fix README.md</li>\n</ul>\n<h2>0.6.12</h2>\n<ul>\n<li>patch: Fix long description content type</li>\n</ul>\n<h2>0.6.11</h2>\n<ul>\n<li>patch: Add README.md file</li>\n</ul>\n<h2>0.6.10</h2>\n<ul>\n<li>patch: Fix code consistency</li>\n</ul>\n<h2>0.6.9</h2>\n<ul>\n<li>patch: Fix packaging</li>\n</ul>\n<h2>0.6.8</h2>\n<ul>\n<li>patch: Tag the repository when releasing</li>\n</ul>\n<h2>0.6.7</h2>\n<ul>\n<li>patch: Fix tests and improve coverage</li>\n</ul>\n<h2>0.6.6</h2>\n<ul>\n<li>minor: Initial version</li>\n</ul>\n\n          </div>"}, "last_serial": 6835869, "releases": {"0.8.2": [{"comment_text": "", "digests": {"md5": "0d8dfcb405e6f960d2253b28b0c28b2e", "sha256": "01f4452c5a601e477485870a462ded49c424c61bb743c11c5846f8c5f7689447"}, "downloads": -1, "filename": "semversioner4-0.8.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0d8dfcb405e6f960d2253b28b0c28b2e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.1.0", "size": 7190, "upload_time": "2020-03-18T12:22:21", "upload_time_iso_8601": "2020-03-18T12:22:21.865202Z", "url": "https://files.pythonhosted.org/packages/34/c6/6bd2be8f6d453658d6810b9c126b42fb0142a94245e6fe02c1f8d452c0b4/semversioner4-0.8.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21d9d9f5a026f31152f75c2ec6f5f292", "sha256": "63213fc3733658ac58d931a0e3016adc6baf458054e87a76dd9547998fcfe95f"}, "downloads": -1, "filename": "semversioner4-0.8.2.tar.gz", "has_sig": false, "md5_digest": "21d9d9f5a026f31152f75c2ec6f5f292", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.1.0", "size": 7145, "upload_time": "2020-03-18T12:22:24", "upload_time_iso_8601": "2020-03-18T12:22:24.118342Z", "url": "https://files.pythonhosted.org/packages/7b/05/aa4cfcee2c53aff15fcd7306945a8668de9f2a8f30fae2411d0a4be98fa6/semversioner4-0.8.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0d8dfcb405e6f960d2253b28b0c28b2e", "sha256": "01f4452c5a601e477485870a462ded49c424c61bb743c11c5846f8c5f7689447"}, "downloads": -1, "filename": "semversioner4-0.8.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0d8dfcb405e6f960d2253b28b0c28b2e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.1.0", "size": 7190, "upload_time": "2020-03-18T12:22:21", "upload_time_iso_8601": "2020-03-18T12:22:21.865202Z", "url": "https://files.pythonhosted.org/packages/34/c6/6bd2be8f6d453658d6810b9c126b42fb0142a94245e6fe02c1f8d452c0b4/semversioner4-0.8.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21d9d9f5a026f31152f75c2ec6f5f292", "sha256": "63213fc3733658ac58d931a0e3016adc6baf458054e87a76dd9547998fcfe95f"}, "downloads": -1, "filename": "semversioner4-0.8.2.tar.gz", "has_sig": false, "md5_digest": "21d9d9f5a026f31152f75c2ec6f5f292", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.1.0", "size": 7145, "upload_time": "2020-03-18T12:22:24", "upload_time_iso_8601": "2020-03-18T12:22:24.118342Z", "url": "https://files.pythonhosted.org/packages/7b/05/aa4cfcee2c53aff15fcd7306945a8668de9f2a8f30fae2411d0a4be98fa6/semversioner4-0.8.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:20 2020"}