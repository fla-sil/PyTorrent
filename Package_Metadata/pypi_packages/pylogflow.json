{"info": {"author": "Jacob Maldonado", "author_email": "jacobmaldonado99@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Pylogflow\n\nPython library for Dialogflow webhook. / Biblioteca de python para webhooks en Dialogflow \n\n## Content Table / Tabla de contenido \n\n- Language / Idioma\n  - English\n    - Description\n    - Requirements\n    - Installation\n    - Usage\n    - Support me\n  - Espa\u00c3\u00b1ol  \n    - Descripcion\n    - Requisitos\n    - Instalaci\u00c3\u00b3n\n    - Uso\n    - Apoyar\n\n## English documentation\n\n### Description\n\nThe purpouse of pylogflow is allow people to do chatbots easier without knowing how dialogflow works, and let proggrammer just focus on the process that they want to do (I think that their javascript library is complex in further level and i love python).\n\nThis library can manage responses(messages) and intents in this version, in next versions i'll add context management and easy parameters management (just i make it for Actions on Google, i have to do for generic responses).\n\n### Requirements\n\n- Python 3\n- Python pip\n\n### Installation\n\n`pip install pylogflow`\n\n### Usage\n\n#### Before start\n\nTo start using pylogflow you must know how to setup a web server with python, read this if you dont know how to start\n\nIn examples below i'll use flask that is a web framework on python, it's really easy to use, you can learn more about it here.\n\n#### Intent Handling\n\nIf you have some intents in your Dialogflow agent that points to webhook you have to manage them, so pylogflow includes intent handling that makes it easy.\n\nSuppose that you have an intent named \"Test\" and you want to handle in webhook, you will do something like this.\n\n```Python\nfrom pylogflow import IntentMap\nfrom flask import request, jsonify\n\napp = flask.Flask(__name__)\n\n# We will receive POST request when webhook is called\n@app.route('/', methods=['POST'])\ndef webhook():\n    # Send request as a json dictionary, result must be a dictionary\n    result = intentMap.execute_intent(request.json)\n    # Parse result into json response format\n    return jsonify(result)\n\n# Intent 'Test' function\n# They must receive a request in dictionary format.\ndef intentTest(req):\n    # Simpliest dialogflow response\n    return {'fulfillmentText': 'This is a response from webhook'}\n\n# Intent Map for handle intents, this can be inside your request function (webhook)\n# or here, in this way you only setup once\nintentMap = IntentMap()\n# add method appends new intent with their function\n# first parameter must be the Dialogflow intent name, second is the function name\nintentMap.add('Test', intentTest)\n\n# flask run configuration\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000)\n\n```\n\nThe code above it's the simpliest way to handle an intent in webhook, i just send request in dictionary format to intentMap with 'execute_intent' function, and then get response with 'get_response' function and return as json with jsonify feature from flask, the rest of the code is to make a function that build response and then return it, below of all must create intentMap object and then add respective intent with their respective name(must be same as we set in Dialogflow).\n\n#### Responses (messages)\n\nThere are some responses that we can send to dilogflow, this version can make Generic responses and Google Assistant responses.\n\n##### Agent Responses\n\nAgent class can handle generic text and card responses( i don't recomend card responses for now, i'm searching why Google Assistant doesn't handle that cards and get error, if you want to add cards for Google, use GoogleResponse instead).\n\nBelow i'll use same example to explain agent usage, we have to focus on 'intentTest' function, and remember to import Agent.\n\n```Python\nfrom pylogflow import IntentMap, Agent\nfrom flask import request, jsonify\n\napp = flask.Flask(__name__)\n\n# Main Webhook route\n@app.route('/', methods=['POST'])\ndef webhook():\n    result = intentMap.execute_intent(request.json)\n    return jsonify(result)\n\ndef intentTest(req):\n    # We create an Agent object\n    agent = Agent()\n    # We can add messages\n    agent.add_message(\"Hi\")\n    agent.add_message(\"How are you?\")\n    # Or cards (just one recommended)\n    agent.add_card(\"title\",\"subtitle\",\"imageURL\",\"buttonName\", \"buttonURL\")\n    # Then, we return the response in dictionary format\n    return agent.get_response()\n\n# Intent Map for handle intents\nintentMap = IntentMap()\nintentMap.add('Test', intentTest)\n\n# flask run configuration\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000)\n\n```\n\nIn this case, in 'intentTest' function we have to create agent, after that, we can add messages, cards and then send response back, it's really easy.\n\n##### Google Assistant\n\nGoogle Assistant Works in a similar way, you have to test responses in Gogle Assistant Test Sandbox, because inside dialogflow test tool responses aren't showed, we are working on this issue, but works fine in production.\n\n###### Simple Response\n\nAdd simple responses to Google Assistant as follows:\n\n```Python\nimport flask\nfrom flask import request, jsonify\n# Import GoogleResponse\nfrom pylogflow import IntentMap, GoogleResponse, Agent\n\napp = flask.Flask(__name__)\n\n@app.route('/', methods=['POST'])\ndef home():\n    result = intentMap.execute_intent(request.json)\n    return jsonify(result)\n\n# Intent Multiple simple response\ndef intentSimpleResponse(req):\n    agent = Agent()\n    # Instantiate a GoogleResponse Object, you can optionaly \n    # send a boolean if google must expect response, by default\n    # is \"True\"\n    gResponse = GoogleResponse()\n    # Add simple response, Maximum 2 simple responses\n    gResponse.add_simple_response(\"This is a message\")\n    gResponse.add_simple_response(\"This is another message\")\n    # Add google message to your agent\n    agent.add_custom_payload(gResponse.get_response())\n    # Return agent in same way\n    return agent.get_response()\n\n# Set up intent map\nintentMap = IntentMap()\nintentMap.add(\"Simple Response\", intentSimpleResponse)\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000)\n```\n\n###### Card\n\n###### Sugestion Chips\n\n```Python\nimport flask\nfrom flask import request, jsonify\n# Import GoogleResponse\nfrom pylogflow import IntentMap, GoogleResponse, Agent\n\napp = flask.Flask(__name__)\n\n@app.route('/', methods=['POST'])\ndef home():\n    result = intentMap.execute_intent(request.json)\n    return jsonify(result)\n\n# Intent Multiple simple response\ndef intentSuggestionChips(req):\n    agent = Agent()\n    # Instantiate a GoogleResponse Object, you can optionaly \n    # send a boolean if google must expect response, by default\n    # is \"True\"\n    gResponse = GoogleResponse()\n    # Add suggestion chips, max 5\n    gResponse.add_suggestion_chips(\"flask\", \"algo\")\n    # Add google message to your agent\n    agent.add_custom_payload(gResponse.get_response())\n    return agent.get_response()\n\n# Set up intent map\nintentMap = IntentMap()\nintentMap.add(\"Suggestion Chips\", intentSuggestionChips)\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000)\n```\n###### List\n\n```Python\nimport flask\nfrom flask import request, jsonify\n# Import GoogleResponse\nfrom pylogflow import IntentMap, GoogleResponse, Agent\n\napp = flask.Flask(__name__)\n\n@app.route('/', methods=['POST'])\ndef home():\n    result = intentMap.execute_intent(request.json)\n    return jsonify(result)\n\n# Intent Multiple simple response\ndef intentList(req):\n    agent = Agent()\n    gResponse = GoogleResponse()\n    gResponse.add_list(\n        gResponse.generate_list_item(\n            \"Elemento 1\",\n            \"ELEMENTO_1\",\n            [\"cosa 1\", \"objeto 1\"],\n            \"descripcion corta\",\n            \"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"\n        ),\n        gResponse.generate_list_item(\n            \"Elemento 2\",\n            \"ELEMENTO_2\",\n            [\"cosa 2\", \"objeto 2\"],\n            \"descripcion corta\",\n            \"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"\n        ),\n        gResponse.generate_list_item(\n            \"Elemento 3\",\n            \"ELEMENTO_#\",\n            [\"cosa 3\", \"objeto 3\"],\n            \"descripcion corta\",\n            \"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"\n        ),\n        title=\"Titulo de la lista\"\n    )\n    agent.add_custom_payload(gResponse.get_response())\n    return agent.get_response()\n\n# Set up intent map\nintentMap = IntentMap()\nintentMap.add(\"List\", intentList)\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000)\n```\n\n###### Carrousel\n\n```Python\n\nimport flask\nfrom flask import request, jsonify\n# Import GoogleResponse\nfrom pylogflow import IntentMap, GoogleResponse, Agent\n\napp = flask.Flask(__name__)\n\n@app.route('/', methods=['POST'])\ndef home():\n    result = intentMap.execute_intent(request.json)\n    return jsonify(result)\n\ndef intentCarrousel(req):\n    agent = Agent()\n    gResponse = GoogleResponse()\n    gResponse.add_carrousel(\n        gResponse.generate_carrousel_item(\n            \"Elemento 1\",\n            \"ELEMENTO_1\",\n            [\"cosa 1\", \"objeto 1\"],\n            \"descripcion corta\",\n            \"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"\n        ),\n        gResponse.generate_carrousel_item(\n            \"Elemento 2\",\n            \"ELEMENTO_2\",\n            [\"cosa 2\", \"objeto 2\"],\n            \"descripcion corta\",\n            \"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"\n        ),\n        gResponse.generate_carrousel_item(\n            \"Elemento 3\",\n            \"ELEMENTO_#\",\n            [\"cosa 3\", \"objeto 3\"],\n            \"descripcion corta\",\n            \"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"\n        )\n    )\n    agent.add_custom_payload(gResponse.get_response())\n    return agent.get_response()\n\n# Set up intent map\nintentMap = IntentMap()\nintentMap.add(\"Carrousel\", intentCarrousel)\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000)\n```\n\n###### Handle List and Carrousel options\n\nList and Carrousel use options in Google Assistant, we can handle this options easy by importing GoogleRequest, generaly this options prompts to another intent, this is an example that can handle any option.\n\n\n```Python\n# Intent function\ndef intentOption(req):\n    agent = Agent()\n    print(req)\n    gResponse = GoogleResponse()\n    # Instantiate a GoogleRequest object sending request received in this intent function\n    gRequest = GoogleRequest(req)\n    # This is the option selected obtained from request\n    selection = gRequest.get_option_arguments()\n    # It comes as a list, generally is only 1 element\n    for option in selection:\n        gResponse.add_simple_response(\"selected : \" + option)\n    agent.add_custom_payload(gResponse.get_response())\n    return agent.get_response()\n\n```\n\n###### Browse Carrousel\n\n```Python\n\ndef intentBrowseCarrousel(req):\n    # Set agent \n    agent = Agent()\n    gResponse = GoogleResponse()\n    # You can make a list of items\n    items = []\n    # Append every item to list\n    items.append(gResponse.generate_browse_carrousel_item(\n            \"titulo1\",\n            \"descripcion 1\", \n            \"piesillo 1\", \n            \"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\", \n            \"hola\", \n            \"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"))\n    items.append(gResponse.generate_browse_carrousel_item(\n            \"titulo2\",\n            \"descripcion 2\", \n            \"piesillo 2\", \n            \"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\", \n            \"hola\", \n            \"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"))\n    # Send list as arguments with * operator\n    gResponse.add_browse_carrousel(*items)\n    agent.add_custom_payload(gResponse.get_response())\n    return agent.get_response()\n```\n###### Table\n\n```Python\n\ndef intentTable(req):\n    agent = Agent()\n    gResponse = GoogleResponse()\n    gResponse.add_table(\n        # First parameter is Header Row\n        gResponse.generate_table_header_row(\n            # Necesary Table headers, you can add as list with * if you want\n            gResponse.generate_table_header(\"Titulo 1\"),\n            gResponse.generate_table_header(\"Titulo 2\"),\n            gResponse.generate_table_header(\"Titulo 3\")\n        ),\n        # Then add rows as arguments, or a list of table rows with * \n        gResponse.generate_table_row(\n            \"texto1\",\n            \"texto2\",\n            \"texto3\"\n        ),\n        gResponse.generate_table_row(\n            \"texto1\",\n            \"texto2\",\n            \"texto3\"\n        ),\n        # KWargs\n        title=\"Titulo Prueba\",\n        subtitle=\"prueba subtitulo\", # this needs a title to be placed\n        imageUrl=\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\",\n        buttonText=\"Hola soy un boton\",\n        buttonUrl=\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\",\n    )\n    agent.add_custom_payload(gResponse.get_response())\n    return agent.get_response()\n```\n\n###### Media Response\n\nThis is an audio response.\n\n```Python\n    def intentMedia(req):\n    # Set agent \n    agent = Agent()\n    # agent.add_Message(\"ayuda respondiendo\")\n    gResponse = GoogleResponse()\n    gResponse.add_media_response(\n        \"nombre\",\n        \"descripcion\",\n        \"https://storage.googleapis.com/automotive-media/album_art.jpg\",\n        \"Album cover of an ccean view\",\n        \"https://storage.googleapis.com/automotive-media/Jazz_In_Paris.mp3\"\n    )\n    agent.add_custom_payload(gResponse.get_response())\n    # this return a dictionary format\n    return agent.get_response()\n\n```\n\n\n```Python\nimport flask\nfrom flask import request, jsonify\nfrom pylogflow import IntentMap, GoogleResponse, GoogleRequest, Agent\n\napp = flask.Flask(__name__)\n\n@app.route('/', methods=['POST'])\ndef home():\n    # Send request as a json, result must be a dictionary\n    result = intentMap.execute_intent(request.json)\n    # Parse result into json format\n    return jsonify(result)\n\n# Intent Multiple simple response\ndef intentSimpleResponse(req):\n    agent = Agent()\n    gResponse = GoogleResponse()\n    gResponse.add_simple_response(\"Hey\")\n    gResponse.add_simple_response(\"You\")\n    agent.add_custom_payload(gResponse.get_response())\n    return agent.get_response()\n\n\n# Intent ayuda\ndef intentAyuda(req):\n    # Set agent \n    agent = Agent()\n    # agent.add_Message(\"ayuda respondiendo\")\n    gResponse = GoogleResponse()\n    gResponse.add_media_response(\n        \"nombre\",\n        \"descripcion\",\n        \"https://storage.googleapis.com/automotive-media/album_art.jpg\",\n        \"Album cover of an ccean view\",\n        \"https://storage.googleapis.com/automotive-media/Jazz_In_Paris.mp3\"\n    )\n    gResponse.add_simple_response(\"Hola, esto es una prueba\")\n    gResponse.add_suggestion_chips(\"flask\", \"algo\")\n    agent.add_custom_payload(gResponse.get_response())\n    # this return a dictionary format\n    return agent.get_response()\n\n\n# Intent request\ndef intentRequest(req):\n    # Set agent \n    agent = Agent()\n    gResponse = GoogleResponse()\n    gResponse.add_browse_carrousel(\n        gResponse.generate_browse_carrousel_item(\n            \"titulo1\",\n            \"descripcion 1\", \n            \"piesillo 1\", \n            \"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\", \n            \"hola\", \n            \"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"),\n        gResponse.generate_browse_carrousel_item(\n            \"titulo2\",\n            \"descripcion 2\", \n            \"piesillo 2\", \n            \"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\", \n            \"hola\", \n            \"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\")\n    )\n    agent.add_custom_payload(gResponse.get_response())\n    return agent.get_response()\n\n# Intent algo\ndef intentAlgo(req):\n    agent = Agent()\n    gResponse = GoogleResponse()\n    gResponse.add_table(\n        gResponse.generate_table_header_row(\n            gResponse.generate_table_header(\"Titulo 1\"),\n            gResponse.generate_table_header(\"Titulo 2\"),\n            gResponse.generate_table_header(\"Titulo 3\")\n        ),\n        gResponse.generate_table_row(\n            \"texto1\",\n            \"texto2\",\n            \"texto3\"\n        ),\n        gResponse.generate_table_row(\n            \"texto1\",\n            \"texto2\",\n            \"texto3\"\n        ),\n        title=\"Titulo Prueba\",\n        subtitle=\"prueba subtitulo\",\n        imageUrl=\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\",\n        buttonText=\"Hola soy un boton\",\n        buttonUrl=\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\",\n    )\n    agent.add_custom_payload(gResponse.get_response())\n    return agent.get_response()\n\n# intent lista\ndef intentLista(req):\n    agent = Agent()\n    gResponse = GoogleResponse()\n    gResponse.add_list(\n        gResponse.generate_list_item(\n            \"Elemento 1\",\n            \"ELEMENTO_1\",\n            [\"cosa 1\", \"objeto 1\"],\n            \"descripcion corta\",\n            \"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"\n        ),\n        gResponse.generate_list_item(\n            \"Elemento 2\",\n            \"ELEMENTO_2\",\n            [\"cosa 2\", \"objeto 2\"],\n            \"descripcion corta\",\n            \"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"\n        ),\n        gResponse.generate_list_item(\n            \"Elemento 3\",\n            \"ELEMENTO_#\",\n            [\"cosa 3\", \"objeto 3\"],\n            \"descripcion corta\",\n            \"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"\n        ),\n        title=\"Titulo de la lista\"\n    )\n    agent.add_custom_payload(gResponse.get_response())\n    return agent.get_response()\n\n#Intent opcion lista\ndef intentOpcionLista(req):\n    agent = Agent()\n    print(req)\n    gResponse = GoogleResponse()\n    gRequest = GoogleRequest(req)\n    selection = gRequest.get_option_arguments()\n    for option in selection:\n        gResponse.add_simple_response(\"selected : \" + option)\n    capabilities = gRequest.get_capabilities()\n    msg = \"\"\n    for cap in capabilities:\n        msg += cap[\"name\"]\n    gResponse.add_simple_response(msg)\n    agent.add_custom_payload(gResponse.get_response())\n    return agent.get_response()\n\n# Intent carrousel\ndef intentCarrousel(req):\n    agent = Agent()\n    gResponse = GoogleResponse()\n    gResponse.add_carrousel(\n        gResponse.generate_carrousel_item(\n            \"Elemento 1\",\n            \"ELEMENTO_1\",\n            [\"cosa 1\", \"objeto 1\"],\n            \"descripcion corta\",\n            \"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"\n        ),\n        gResponse.generate_carrousel_item(\n            \"Elemento 2\",\n            \"ELEMENTO_2\",\n            [\"cosa 2\", \"objeto 2\"],\n            \"descripcion corta\",\n            \"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"\n        ),\n        gResponse.generate_carrousel_item(\n            \"Elemento 3\",\n            \"ELEMENTO_#\",\n            [\"cosa 3\", \"objeto 3\"],\n            \"descripcion corta\",\n            \"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"\n        )\n    )\n    agent.add_custom_payload(gResponse.get_response())\n    return agent.get_response()\n\n\n# Default fallback intent\ndef fallback(req):\n    agent = Agent()\n    agent.add_message(\"default fallback\")\n    print(jsonify(req))\n    return agent.get_response()\n\n# Set up intent map\nintentMap = IntentMap()\nintentMap.add(\"request\", intentRequest)\nintentMap.add(\"Simple Response\", intentSimpleResponse)\nintentMap.add(\"ayuda\", intentAyuda)\nintentMap.add(\"algo\", intentAlgo)\nintentMap.add(\"lista\", intentLista)\nintentMap.add(\"Default Fallback Intent\", fallback)\nintentMap.add(\"opcion lista\", intentOpcionLista)\nintentMap.add(\"carrousel\", intentCarrousel)\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000)\n\n```\n\n#### Advice\n\nMy english is not good at all, if i got an error correct me please.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/JacobMaldonado/pylogflow.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pylogflow", "package_url": "https://pypi.org/project/pylogflow/", "platform": "", "project_url": "https://pypi.org/project/pylogflow/", "project_urls": {"Homepage": "https://github.com/JacobMaldonado/pylogflow.git"}, "release_url": "https://pypi.org/project/pylogflow/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Dialogflow Webhook utility package", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Pylogflow</h1>\n<p>Python library for Dialogflow webhook. / Biblioteca de python para webhooks en Dialogflow</p>\n<h2>Content Table / Tabla de contenido</h2>\n<ul>\n<li>Language / Idioma\n<ul>\n<li>English\n<ul>\n<li>Description</li>\n<li>Requirements</li>\n<li>Installation</li>\n<li>Usage</li>\n<li>Support me</li>\n</ul>\n</li>\n<li>Espa\u00c3\u00b1ol\n<ul>\n<li>Descripcion</li>\n<li>Requisitos</li>\n<li>Instalaci\u00c3\u00b3n</li>\n<li>Uso</li>\n<li>Apoyar</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2>English documentation</h2>\n<h3>Description</h3>\n<p>The purpouse of pylogflow is allow people to do chatbots easier without knowing how dialogflow works, and let proggrammer just focus on the process that they want to do (I think that their javascript library is complex in further level and i love python).</p>\n<p>This library can manage responses(messages) and intents in this version, in next versions i'll add context management and easy parameters management (just i make it for Actions on Google, i have to do for generic responses).</p>\n<h3>Requirements</h3>\n<ul>\n<li>Python 3</li>\n<li>Python pip</li>\n</ul>\n<h3>Installation</h3>\n<p><code>pip install pylogflow</code></p>\n<h3>Usage</h3>\n<h4>Before start</h4>\n<p>To start using pylogflow you must know how to setup a web server with python, read this if you dont know how to start</p>\n<p>In examples below i'll use flask that is a web framework on python, it's really easy to use, you can learn more about it here.</p>\n<h4>Intent Handling</h4>\n<p>If you have some intents in your Dialogflow agent that points to webhook you have to manage them, so pylogflow includes intent handling that makes it easy.</p>\n<p>Suppose that you have an intent named \"Test\" and you want to handle in webhook, you will do something like this.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pylogflow</span> <span class=\"kn\">import</span> <span class=\"n\">IntentMap</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">jsonify</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">flask</span><span class=\"o\">.</span><span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># We will receive POST request when webhook is called</span>\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">webhook</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Send request as a json dictionary, result must be a dictionary</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">intentMap</span><span class=\"o\">.</span><span class=\"n\">execute_intent</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Parse result into json response format</span>\n    <span class=\"k\">return</span> <span class=\"n\">jsonify</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Intent 'Test' function</span>\n<span class=\"c1\"># They must receive a request in dictionary format.</span>\n<span class=\"k\">def</span> <span class=\"nf\">intentTest</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Simpliest dialogflow response</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">'fulfillmentText'</span><span class=\"p\">:</span> <span class=\"s1\">'This is a response from webhook'</span><span class=\"p\">}</span>\n\n<span class=\"c1\"># Intent Map for handle intents, this can be inside your request function (webhook)</span>\n<span class=\"c1\"># or here, in this way you only setup once</span>\n<span class=\"n\">intentMap</span> <span class=\"o\">=</span> <span class=\"n\">IntentMap</span><span class=\"p\">()</span>\n<span class=\"c1\"># add method appends new intent with their function</span>\n<span class=\"c1\"># first parameter must be the Dialogflow intent name, second is the function name</span>\n<span class=\"n\">intentMap</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s1\">'Test'</span><span class=\"p\">,</span> <span class=\"n\">intentTest</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># flask run configuration</span>\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'0.0.0.0'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">5000</span><span class=\"p\">)</span>\n</pre>\n<p>The code above it's the simpliest way to handle an intent in webhook, i just send request in dictionary format to intentMap with 'execute_intent' function, and then get response with 'get_response' function and return as json with jsonify feature from flask, the rest of the code is to make a function that build response and then return it, below of all must create intentMap object and then add respective intent with their respective name(must be same as we set in Dialogflow).</p>\n<h4>Responses (messages)</h4>\n<p>There are some responses that we can send to dilogflow, this version can make Generic responses and Google Assistant responses.</p>\n<h5>Agent Responses</h5>\n<p>Agent class can handle generic text and card responses( i don't recomend card responses for now, i'm searching why Google Assistant doesn't handle that cards and get error, if you want to add cards for Google, use GoogleResponse instead).</p>\n<p>Below i'll use same example to explain agent usage, we have to focus on 'intentTest' function, and remember to import Agent.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pylogflow</span> <span class=\"kn\">import</span> <span class=\"n\">IntentMap</span><span class=\"p\">,</span> <span class=\"n\">Agent</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">jsonify</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">flask</span><span class=\"o\">.</span><span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Main Webhook route</span>\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">webhook</span><span class=\"p\">():</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">intentMap</span><span class=\"o\">.</span><span class=\"n\">execute_intent</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">jsonify</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">intentTest</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">):</span>\n    <span class=\"c1\"># We create an Agent object</span>\n    <span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"n\">Agent</span><span class=\"p\">()</span>\n    <span class=\"c1\"># We can add messages</span>\n    <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">add_message</span><span class=\"p\">(</span><span class=\"s2\">\"Hi\"</span><span class=\"p\">)</span>\n    <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">add_message</span><span class=\"p\">(</span><span class=\"s2\">\"How are you?\"</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Or cards (just one recommended)</span>\n    <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">add_card</span><span class=\"p\">(</span><span class=\"s2\">\"title\"</span><span class=\"p\">,</span><span class=\"s2\">\"subtitle\"</span><span class=\"p\">,</span><span class=\"s2\">\"imageURL\"</span><span class=\"p\">,</span><span class=\"s2\">\"buttonName\"</span><span class=\"p\">,</span> <span class=\"s2\">\"buttonURL\"</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Then, we return the response in dictionary format</span>\n    <span class=\"k\">return</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Intent Map for handle intents</span>\n<span class=\"n\">intentMap</span> <span class=\"o\">=</span> <span class=\"n\">IntentMap</span><span class=\"p\">()</span>\n<span class=\"n\">intentMap</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s1\">'Test'</span><span class=\"p\">,</span> <span class=\"n\">intentTest</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># flask run configuration</span>\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'0.0.0.0'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">5000</span><span class=\"p\">)</span>\n</pre>\n<p>In this case, in 'intentTest' function we have to create agent, after that, we can add messages, cards and then send response back, it's really easy.</p>\n<h5>Google Assistant</h5>\n<p>Google Assistant Works in a similar way, you have to test responses in Gogle Assistant Test Sandbox, because inside dialogflow test tool responses aren't showed, we are working on this issue, but works fine in production.</p>\n<h6>Simple Response</h6>\n<p>Add simple responses to Google Assistant as follows:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">jsonify</span>\n<span class=\"c1\"># Import GoogleResponse</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pylogflow</span> <span class=\"kn\">import</span> <span class=\"n\">IntentMap</span><span class=\"p\">,</span> <span class=\"n\">GoogleResponse</span><span class=\"p\">,</span> <span class=\"n\">Agent</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">flask</span><span class=\"o\">.</span><span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">home</span><span class=\"p\">():</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">intentMap</span><span class=\"o\">.</span><span class=\"n\">execute_intent</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">jsonify</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Intent Multiple simple response</span>\n<span class=\"k\">def</span> <span class=\"nf\">intentSimpleResponse</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">):</span>\n    <span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"n\">Agent</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Instantiate a GoogleResponse Object, you can optionaly </span>\n    <span class=\"c1\"># send a boolean if google must expect response, by default</span>\n    <span class=\"c1\"># is \"True\"</span>\n    <span class=\"n\">gResponse</span> <span class=\"o\">=</span> <span class=\"n\">GoogleResponse</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Add simple response, Maximum 2 simple responses</span>\n    <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">add_simple_response</span><span class=\"p\">(</span><span class=\"s2\">\"This is a message\"</span><span class=\"p\">)</span>\n    <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">add_simple_response</span><span class=\"p\">(</span><span class=\"s2\">\"This is another message\"</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Add google message to your agent</span>\n    <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">add_custom_payload</span><span class=\"p\">(</span><span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">())</span>\n    <span class=\"c1\"># Return agent in same way</span>\n    <span class=\"k\">return</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Set up intent map</span>\n<span class=\"n\">intentMap</span> <span class=\"o\">=</span> <span class=\"n\">IntentMap</span><span class=\"p\">()</span>\n<span class=\"n\">intentMap</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">\"Simple Response\"</span><span class=\"p\">,</span> <span class=\"n\">intentSimpleResponse</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'0.0.0.0'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">5000</span><span class=\"p\">)</span>\n</pre>\n<h6>Card</h6>\n<h6>Sugestion Chips</h6>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">jsonify</span>\n<span class=\"c1\"># Import GoogleResponse</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pylogflow</span> <span class=\"kn\">import</span> <span class=\"n\">IntentMap</span><span class=\"p\">,</span> <span class=\"n\">GoogleResponse</span><span class=\"p\">,</span> <span class=\"n\">Agent</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">flask</span><span class=\"o\">.</span><span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">home</span><span class=\"p\">():</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">intentMap</span><span class=\"o\">.</span><span class=\"n\">execute_intent</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">jsonify</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Intent Multiple simple response</span>\n<span class=\"k\">def</span> <span class=\"nf\">intentSuggestionChips</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">):</span>\n    <span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"n\">Agent</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Instantiate a GoogleResponse Object, you can optionaly </span>\n    <span class=\"c1\"># send a boolean if google must expect response, by default</span>\n    <span class=\"c1\"># is \"True\"</span>\n    <span class=\"n\">gResponse</span> <span class=\"o\">=</span> <span class=\"n\">GoogleResponse</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Add suggestion chips, max 5</span>\n    <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">add_suggestion_chips</span><span class=\"p\">(</span><span class=\"s2\">\"flask\"</span><span class=\"p\">,</span> <span class=\"s2\">\"algo\"</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Add google message to your agent</span>\n    <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">add_custom_payload</span><span class=\"p\">(</span><span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">())</span>\n    <span class=\"k\">return</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Set up intent map</span>\n<span class=\"n\">intentMap</span> <span class=\"o\">=</span> <span class=\"n\">IntentMap</span><span class=\"p\">()</span>\n<span class=\"n\">intentMap</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">\"Suggestion Chips\"</span><span class=\"p\">,</span> <span class=\"n\">intentSuggestionChips</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'0.0.0.0'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">5000</span><span class=\"p\">)</span>\n</pre>\n<h6>List</h6>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">jsonify</span>\n<span class=\"c1\"># Import GoogleResponse</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pylogflow</span> <span class=\"kn\">import</span> <span class=\"n\">IntentMap</span><span class=\"p\">,</span> <span class=\"n\">GoogleResponse</span><span class=\"p\">,</span> <span class=\"n\">Agent</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">flask</span><span class=\"o\">.</span><span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">home</span><span class=\"p\">():</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">intentMap</span><span class=\"o\">.</span><span class=\"n\">execute_intent</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">jsonify</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Intent Multiple simple response</span>\n<span class=\"k\">def</span> <span class=\"nf\">intentList</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">):</span>\n    <span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"n\">Agent</span><span class=\"p\">()</span>\n    <span class=\"n\">gResponse</span> <span class=\"o\">=</span> <span class=\"n\">GoogleResponse</span><span class=\"p\">()</span>\n    <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">add_list</span><span class=\"p\">(</span>\n        <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_list_item</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"Elemento 1\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"ELEMENTO_1\"</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"s2\">\"cosa 1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"objeto 1\"</span><span class=\"p\">],</span>\n            <span class=\"s2\">\"descripcion corta\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_list_item</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"Elemento 2\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"ELEMENTO_2\"</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"s2\">\"cosa 2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"objeto 2\"</span><span class=\"p\">],</span>\n            <span class=\"s2\">\"descripcion corta\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_list_item</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"Elemento 3\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"ELEMENTO_#\"</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"s2\">\"cosa 3\"</span><span class=\"p\">,</span> <span class=\"s2\">\"objeto 3\"</span><span class=\"p\">],</span>\n            <span class=\"s2\">\"descripcion corta\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"Titulo de la lista\"</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">add_custom_payload</span><span class=\"p\">(</span><span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">())</span>\n    <span class=\"k\">return</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Set up intent map</span>\n<span class=\"n\">intentMap</span> <span class=\"o\">=</span> <span class=\"n\">IntentMap</span><span class=\"p\">()</span>\n<span class=\"n\">intentMap</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">\"List\"</span><span class=\"p\">,</span> <span class=\"n\">intentList</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'0.0.0.0'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">5000</span><span class=\"p\">)</span>\n</pre>\n<h6>Carrousel</h6>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">jsonify</span>\n<span class=\"c1\"># Import GoogleResponse</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pylogflow</span> <span class=\"kn\">import</span> <span class=\"n\">IntentMap</span><span class=\"p\">,</span> <span class=\"n\">GoogleResponse</span><span class=\"p\">,</span> <span class=\"n\">Agent</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">flask</span><span class=\"o\">.</span><span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">home</span><span class=\"p\">():</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">intentMap</span><span class=\"o\">.</span><span class=\"n\">execute_intent</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">jsonify</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">intentCarrousel</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">):</span>\n    <span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"n\">Agent</span><span class=\"p\">()</span>\n    <span class=\"n\">gResponse</span> <span class=\"o\">=</span> <span class=\"n\">GoogleResponse</span><span class=\"p\">()</span>\n    <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">add_carrousel</span><span class=\"p\">(</span>\n        <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_carrousel_item</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"Elemento 1\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"ELEMENTO_1\"</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"s2\">\"cosa 1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"objeto 1\"</span><span class=\"p\">],</span>\n            <span class=\"s2\">\"descripcion corta\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_carrousel_item</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"Elemento 2\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"ELEMENTO_2\"</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"s2\">\"cosa 2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"objeto 2\"</span><span class=\"p\">],</span>\n            <span class=\"s2\">\"descripcion corta\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_carrousel_item</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"Elemento 3\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"ELEMENTO_#\"</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"s2\">\"cosa 3\"</span><span class=\"p\">,</span> <span class=\"s2\">\"objeto 3\"</span><span class=\"p\">],</span>\n            <span class=\"s2\">\"descripcion corta\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">add_custom_payload</span><span class=\"p\">(</span><span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">())</span>\n    <span class=\"k\">return</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Set up intent map</span>\n<span class=\"n\">intentMap</span> <span class=\"o\">=</span> <span class=\"n\">IntentMap</span><span class=\"p\">()</span>\n<span class=\"n\">intentMap</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">\"Carrousel\"</span><span class=\"p\">,</span> <span class=\"n\">intentCarrousel</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'0.0.0.0'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">5000</span><span class=\"p\">)</span>\n</pre>\n<h6>Handle List and Carrousel options</h6>\n<p>List and Carrousel use options in Google Assistant, we can handle this options easy by importing GoogleRequest, generaly this options prompts to another intent, this is an example that can handle any option.</p>\n<pre><span class=\"c1\"># Intent function</span>\n<span class=\"k\">def</span> <span class=\"nf\">intentOption</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">):</span>\n    <span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"n\">Agent</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">)</span>\n    <span class=\"n\">gResponse</span> <span class=\"o\">=</span> <span class=\"n\">GoogleResponse</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Instantiate a GoogleRequest object sending request received in this intent function</span>\n    <span class=\"n\">gRequest</span> <span class=\"o\">=</span> <span class=\"n\">GoogleRequest</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">)</span>\n    <span class=\"c1\"># This is the option selected obtained from request</span>\n    <span class=\"n\">selection</span> <span class=\"o\">=</span> <span class=\"n\">gRequest</span><span class=\"o\">.</span><span class=\"n\">get_option_arguments</span><span class=\"p\">()</span>\n    <span class=\"c1\"># It comes as a list, generally is only 1 element</span>\n    <span class=\"k\">for</span> <span class=\"n\">option</span> <span class=\"ow\">in</span> <span class=\"n\">selection</span><span class=\"p\">:</span>\n        <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">add_simple_response</span><span class=\"p\">(</span><span class=\"s2\">\"selected : \"</span> <span class=\"o\">+</span> <span class=\"n\">option</span><span class=\"p\">)</span>\n    <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">add_custom_payload</span><span class=\"p\">(</span><span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">())</span>\n    <span class=\"k\">return</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">()</span>\n</pre>\n<h6>Browse Carrousel</h6>\n<pre><span class=\"k\">def</span> <span class=\"nf\">intentBrowseCarrousel</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Set agent </span>\n    <span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"n\">Agent</span><span class=\"p\">()</span>\n    <span class=\"n\">gResponse</span> <span class=\"o\">=</span> <span class=\"n\">GoogleResponse</span><span class=\"p\">()</span>\n    <span class=\"c1\"># You can make a list of items</span>\n    <span class=\"n\">items</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"c1\"># Append every item to list</span>\n    <span class=\"n\">items</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_browse_carrousel_item</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"titulo1\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"descripcion 1\"</span><span class=\"p\">,</span> \n            <span class=\"s2\">\"piesillo 1\"</span><span class=\"p\">,</span> \n            <span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span><span class=\"p\">,</span> \n            <span class=\"s2\">\"hola\"</span><span class=\"p\">,</span> \n            <span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span><span class=\"p\">))</span>\n    <span class=\"n\">items</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_browse_carrousel_item</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"titulo2\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"descripcion 2\"</span><span class=\"p\">,</span> \n            <span class=\"s2\">\"piesillo 2\"</span><span class=\"p\">,</span> \n            <span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span><span class=\"p\">,</span> \n            <span class=\"s2\">\"hola\"</span><span class=\"p\">,</span> \n            <span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span><span class=\"p\">))</span>\n    <span class=\"c1\"># Send list as arguments with * operator</span>\n    <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">add_browse_carrousel</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">items</span><span class=\"p\">)</span>\n    <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">add_custom_payload</span><span class=\"p\">(</span><span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">())</span>\n    <span class=\"k\">return</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">()</span>\n</pre>\n<h6>Table</h6>\n<pre><span class=\"k\">def</span> <span class=\"nf\">intentTable</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">):</span>\n    <span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"n\">Agent</span><span class=\"p\">()</span>\n    <span class=\"n\">gResponse</span> <span class=\"o\">=</span> <span class=\"n\">GoogleResponse</span><span class=\"p\">()</span>\n    <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">add_table</span><span class=\"p\">(</span>\n        <span class=\"c1\"># First parameter is Header Row</span>\n        <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_table_header_row</span><span class=\"p\">(</span>\n            <span class=\"c1\"># Necesary Table headers, you can add as list with * if you want</span>\n            <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_table_header</span><span class=\"p\">(</span><span class=\"s2\">\"Titulo 1\"</span><span class=\"p\">),</span>\n            <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_table_header</span><span class=\"p\">(</span><span class=\"s2\">\"Titulo 2\"</span><span class=\"p\">),</span>\n            <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_table_header</span><span class=\"p\">(</span><span class=\"s2\">\"Titulo 3\"</span><span class=\"p\">)</span>\n        <span class=\"p\">),</span>\n        <span class=\"c1\"># Then add rows as arguments, or a list of table rows with * </span>\n        <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_table_row</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"texto1\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"texto2\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"texto3\"</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_table_row</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"texto1\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"texto2\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"texto3\"</span>\n        <span class=\"p\">),</span>\n        <span class=\"c1\"># KWargs</span>\n        <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"Titulo Prueba\"</span><span class=\"p\">,</span>\n        <span class=\"n\">subtitle</span><span class=\"o\">=</span><span class=\"s2\">\"prueba subtitulo\"</span><span class=\"p\">,</span> <span class=\"c1\"># this needs a title to be placed</span>\n        <span class=\"n\">imageUrl</span><span class=\"o\">=</span><span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span><span class=\"p\">,</span>\n        <span class=\"n\">buttonText</span><span class=\"o\">=</span><span class=\"s2\">\"Hola soy un boton\"</span><span class=\"p\">,</span>\n        <span class=\"n\">buttonUrl</span><span class=\"o\">=</span><span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">add_custom_payload</span><span class=\"p\">(</span><span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">())</span>\n    <span class=\"k\">return</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">()</span>\n</pre>\n<h6>Media Response</h6>\n<p>This is an audio response.</p>\n<pre>    <span class=\"k\">def</span> <span class=\"nf\">intentMedia</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Set agent </span>\n    <span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"n\">Agent</span><span class=\"p\">()</span>\n    <span class=\"c1\"># agent.add_Message(\"ayuda respondiendo\")</span>\n    <span class=\"n\">gResponse</span> <span class=\"o\">=</span> <span class=\"n\">GoogleResponse</span><span class=\"p\">()</span>\n    <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">add_media_response</span><span class=\"p\">(</span>\n        <span class=\"s2\">\"nombre\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"descripcion\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"https://storage.googleapis.com/automotive-media/album_art.jpg\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"Album cover of an ccean view\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"https://storage.googleapis.com/automotive-media/Jazz_In_Paris.mp3\"</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">add_custom_payload</span><span class=\"p\">(</span><span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">())</span>\n    <span class=\"c1\"># this return a dictionary format</span>\n    <span class=\"k\">return</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">()</span>\n</pre>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">jsonify</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pylogflow</span> <span class=\"kn\">import</span> <span class=\"n\">IntentMap</span><span class=\"p\">,</span> <span class=\"n\">GoogleResponse</span><span class=\"p\">,</span> <span class=\"n\">GoogleRequest</span><span class=\"p\">,</span> <span class=\"n\">Agent</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">flask</span><span class=\"o\">.</span><span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">home</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Send request as a json, result must be a dictionary</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">intentMap</span><span class=\"o\">.</span><span class=\"n\">execute_intent</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Parse result into json format</span>\n    <span class=\"k\">return</span> <span class=\"n\">jsonify</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Intent Multiple simple response</span>\n<span class=\"k\">def</span> <span class=\"nf\">intentSimpleResponse</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">):</span>\n    <span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"n\">Agent</span><span class=\"p\">()</span>\n    <span class=\"n\">gResponse</span> <span class=\"o\">=</span> <span class=\"n\">GoogleResponse</span><span class=\"p\">()</span>\n    <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">add_simple_response</span><span class=\"p\">(</span><span class=\"s2\">\"Hey\"</span><span class=\"p\">)</span>\n    <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">add_simple_response</span><span class=\"p\">(</span><span class=\"s2\">\"You\"</span><span class=\"p\">)</span>\n    <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">add_custom_payload</span><span class=\"p\">(</span><span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">())</span>\n    <span class=\"k\">return</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">()</span>\n\n\n<span class=\"c1\"># Intent ayuda</span>\n<span class=\"k\">def</span> <span class=\"nf\">intentAyuda</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Set agent </span>\n    <span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"n\">Agent</span><span class=\"p\">()</span>\n    <span class=\"c1\"># agent.add_Message(\"ayuda respondiendo\")</span>\n    <span class=\"n\">gResponse</span> <span class=\"o\">=</span> <span class=\"n\">GoogleResponse</span><span class=\"p\">()</span>\n    <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">add_media_response</span><span class=\"p\">(</span>\n        <span class=\"s2\">\"nombre\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"descripcion\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"https://storage.googleapis.com/automotive-media/album_art.jpg\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"Album cover of an ccean view\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"https://storage.googleapis.com/automotive-media/Jazz_In_Paris.mp3\"</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">add_simple_response</span><span class=\"p\">(</span><span class=\"s2\">\"Hola, esto es una prueba\"</span><span class=\"p\">)</span>\n    <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">add_suggestion_chips</span><span class=\"p\">(</span><span class=\"s2\">\"flask\"</span><span class=\"p\">,</span> <span class=\"s2\">\"algo\"</span><span class=\"p\">)</span>\n    <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">add_custom_payload</span><span class=\"p\">(</span><span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">())</span>\n    <span class=\"c1\"># this return a dictionary format</span>\n    <span class=\"k\">return</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">()</span>\n\n\n<span class=\"c1\"># Intent request</span>\n<span class=\"k\">def</span> <span class=\"nf\">intentRequest</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Set agent </span>\n    <span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"n\">Agent</span><span class=\"p\">()</span>\n    <span class=\"n\">gResponse</span> <span class=\"o\">=</span> <span class=\"n\">GoogleResponse</span><span class=\"p\">()</span>\n    <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">add_browse_carrousel</span><span class=\"p\">(</span>\n        <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_browse_carrousel_item</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"titulo1\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"descripcion 1\"</span><span class=\"p\">,</span> \n            <span class=\"s2\">\"piesillo 1\"</span><span class=\"p\">,</span> \n            <span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span><span class=\"p\">,</span> \n            <span class=\"s2\">\"hola\"</span><span class=\"p\">,</span> \n            <span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span><span class=\"p\">),</span>\n        <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_browse_carrousel_item</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"titulo2\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"descripcion 2\"</span><span class=\"p\">,</span> \n            <span class=\"s2\">\"piesillo 2\"</span><span class=\"p\">,</span> \n            <span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span><span class=\"p\">,</span> \n            <span class=\"s2\">\"hola\"</span><span class=\"p\">,</span> \n            <span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">add_custom_payload</span><span class=\"p\">(</span><span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">())</span>\n    <span class=\"k\">return</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Intent algo</span>\n<span class=\"k\">def</span> <span class=\"nf\">intentAlgo</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">):</span>\n    <span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"n\">Agent</span><span class=\"p\">()</span>\n    <span class=\"n\">gResponse</span> <span class=\"o\">=</span> <span class=\"n\">GoogleResponse</span><span class=\"p\">()</span>\n    <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">add_table</span><span class=\"p\">(</span>\n        <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_table_header_row</span><span class=\"p\">(</span>\n            <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_table_header</span><span class=\"p\">(</span><span class=\"s2\">\"Titulo 1\"</span><span class=\"p\">),</span>\n            <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_table_header</span><span class=\"p\">(</span><span class=\"s2\">\"Titulo 2\"</span><span class=\"p\">),</span>\n            <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_table_header</span><span class=\"p\">(</span><span class=\"s2\">\"Titulo 3\"</span><span class=\"p\">)</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_table_row</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"texto1\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"texto2\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"texto3\"</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_table_row</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"texto1\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"texto2\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"texto3\"</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"Titulo Prueba\"</span><span class=\"p\">,</span>\n        <span class=\"n\">subtitle</span><span class=\"o\">=</span><span class=\"s2\">\"prueba subtitulo\"</span><span class=\"p\">,</span>\n        <span class=\"n\">imageUrl</span><span class=\"o\">=</span><span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span><span class=\"p\">,</span>\n        <span class=\"n\">buttonText</span><span class=\"o\">=</span><span class=\"s2\">\"Hola soy un boton\"</span><span class=\"p\">,</span>\n        <span class=\"n\">buttonUrl</span><span class=\"o\">=</span><span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">add_custom_payload</span><span class=\"p\">(</span><span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">())</span>\n    <span class=\"k\">return</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># intent lista</span>\n<span class=\"k\">def</span> <span class=\"nf\">intentLista</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">):</span>\n    <span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"n\">Agent</span><span class=\"p\">()</span>\n    <span class=\"n\">gResponse</span> <span class=\"o\">=</span> <span class=\"n\">GoogleResponse</span><span class=\"p\">()</span>\n    <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">add_list</span><span class=\"p\">(</span>\n        <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_list_item</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"Elemento 1\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"ELEMENTO_1\"</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"s2\">\"cosa 1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"objeto 1\"</span><span class=\"p\">],</span>\n            <span class=\"s2\">\"descripcion corta\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_list_item</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"Elemento 2\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"ELEMENTO_2\"</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"s2\">\"cosa 2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"objeto 2\"</span><span class=\"p\">],</span>\n            <span class=\"s2\">\"descripcion corta\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_list_item</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"Elemento 3\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"ELEMENTO_#\"</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"s2\">\"cosa 3\"</span><span class=\"p\">,</span> <span class=\"s2\">\"objeto 3\"</span><span class=\"p\">],</span>\n            <span class=\"s2\">\"descripcion corta\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"Titulo de la lista\"</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">add_custom_payload</span><span class=\"p\">(</span><span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">())</span>\n    <span class=\"k\">return</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">()</span>\n\n<span class=\"c1\">#Intent opcion lista</span>\n<span class=\"k\">def</span> <span class=\"nf\">intentOpcionLista</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">):</span>\n    <span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"n\">Agent</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">)</span>\n    <span class=\"n\">gResponse</span> <span class=\"o\">=</span> <span class=\"n\">GoogleResponse</span><span class=\"p\">()</span>\n    <span class=\"n\">gRequest</span> <span class=\"o\">=</span> <span class=\"n\">GoogleRequest</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">)</span>\n    <span class=\"n\">selection</span> <span class=\"o\">=</span> <span class=\"n\">gRequest</span><span class=\"o\">.</span><span class=\"n\">get_option_arguments</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span> <span class=\"n\">option</span> <span class=\"ow\">in</span> <span class=\"n\">selection</span><span class=\"p\">:</span>\n        <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">add_simple_response</span><span class=\"p\">(</span><span class=\"s2\">\"selected : \"</span> <span class=\"o\">+</span> <span class=\"n\">option</span><span class=\"p\">)</span>\n    <span class=\"n\">capabilities</span> <span class=\"o\">=</span> <span class=\"n\">gRequest</span><span class=\"o\">.</span><span class=\"n\">get_capabilities</span><span class=\"p\">()</span>\n    <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span>\n    <span class=\"k\">for</span> <span class=\"n\">cap</span> <span class=\"ow\">in</span> <span class=\"n\">capabilities</span><span class=\"p\">:</span>\n        <span class=\"n\">msg</span> <span class=\"o\">+=</span> <span class=\"n\">cap</span><span class=\"p\">[</span><span class=\"s2\">\"name\"</span><span class=\"p\">]</span>\n    <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">add_simple_response</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n    <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">add_custom_payload</span><span class=\"p\">(</span><span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">())</span>\n    <span class=\"k\">return</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Intent carrousel</span>\n<span class=\"k\">def</span> <span class=\"nf\">intentCarrousel</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">):</span>\n    <span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"n\">Agent</span><span class=\"p\">()</span>\n    <span class=\"n\">gResponse</span> <span class=\"o\">=</span> <span class=\"n\">GoogleResponse</span><span class=\"p\">()</span>\n    <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">add_carrousel</span><span class=\"p\">(</span>\n        <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_carrousel_item</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"Elemento 1\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"ELEMENTO_1\"</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"s2\">\"cosa 1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"objeto 1\"</span><span class=\"p\">],</span>\n            <span class=\"s2\">\"descripcion corta\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_carrousel_item</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"Elemento 2\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"ELEMENTO_2\"</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"s2\">\"cosa 2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"objeto 2\"</span><span class=\"p\">],</span>\n            <span class=\"s2\">\"descripcion corta\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">generate_carrousel_item</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"Elemento 3\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"ELEMENTO_#\"</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"s2\">\"cosa 3\"</span><span class=\"p\">,</span> <span class=\"s2\">\"objeto 3\"</span><span class=\"p\">],</span>\n            <span class=\"s2\">\"descripcion corta\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg\"</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">add_custom_payload</span><span class=\"p\">(</span><span class=\"n\">gResponse</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">())</span>\n    <span class=\"k\">return</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">()</span>\n\n\n<span class=\"c1\"># Default fallback intent</span>\n<span class=\"k\">def</span> <span class=\"nf\">fallback</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">):</span>\n    <span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"n\">Agent</span><span class=\"p\">()</span>\n    <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">add_message</span><span class=\"p\">(</span><span class=\"s2\">\"default fallback\"</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">jsonify</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">get_response</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Set up intent map</span>\n<span class=\"n\">intentMap</span> <span class=\"o\">=</span> <span class=\"n\">IntentMap</span><span class=\"p\">()</span>\n<span class=\"n\">intentMap</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">\"request\"</span><span class=\"p\">,</span> <span class=\"n\">intentRequest</span><span class=\"p\">)</span>\n<span class=\"n\">intentMap</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">\"Simple Response\"</span><span class=\"p\">,</span> <span class=\"n\">intentSimpleResponse</span><span class=\"p\">)</span>\n<span class=\"n\">intentMap</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">\"ayuda\"</span><span class=\"p\">,</span> <span class=\"n\">intentAyuda</span><span class=\"p\">)</span>\n<span class=\"n\">intentMap</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">\"algo\"</span><span class=\"p\">,</span> <span class=\"n\">intentAlgo</span><span class=\"p\">)</span>\n<span class=\"n\">intentMap</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">\"lista\"</span><span class=\"p\">,</span> <span class=\"n\">intentLista</span><span class=\"p\">)</span>\n<span class=\"n\">intentMap</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">\"Default Fallback Intent\"</span><span class=\"p\">,</span> <span class=\"n\">fallback</span><span class=\"p\">)</span>\n<span class=\"n\">intentMap</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">\"opcion lista\"</span><span class=\"p\">,</span> <span class=\"n\">intentOpcionLista</span><span class=\"p\">)</span>\n<span class=\"n\">intentMap</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">\"carrousel\"</span><span class=\"p\">,</span> <span class=\"n\">intentCarrousel</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'0.0.0.0'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">5000</span><span class=\"p\">)</span>\n</pre>\n<h4>Advice</h4>\n<p>My english is not good at all, if i got an error correct me please.</p>\n\n          </div>"}, "last_serial": 6889609, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "ca8674396a5ad985a3dba0c135a9309b", "sha256": "2cb8085af7b8ddcd4399e3f9c7fa270a0fd2dbc2efc7a77af8f5c7dd6d4f59a0"}, "downloads": -1, "filename": "pylogflow-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ca8674396a5ad985a3dba0c135a9309b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7539, "upload_time": "2020-03-19T19:48:01", "upload_time_iso_8601": "2020-03-19T19:48:01.253514Z", "url": "https://files.pythonhosted.org/packages/55/40/64bcb0510489db342f0c1a6802e6759f33d5eabc6a6f0e127027529ea8b8/pylogflow-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4815af9948903ccfeed2792e66ca5e1", "sha256": "7320339012ca52341da1094e0c5545c98e99929ac933f864307864629dd84895"}, "downloads": -1, "filename": "pylogflow-0.1.tar.gz", "has_sig": false, "md5_digest": "a4815af9948903ccfeed2792e66ca5e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6561, "upload_time": "2020-03-19T19:48:03", "upload_time_iso_8601": "2020-03-19T19:48:03.401746Z", "url": "https://files.pythonhosted.org/packages/64/95/dbf093ef628ea71feeef4da8d0d2b7e039677da8b48f1baf4a502649215c/pylogflow-0.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "af7a47591d1c42c4395c988a118e4863", "sha256": "df0d360c32eaab028784f9ed56c966e034521a18310cb4247394b4549e37657e"}, "downloads": -1, "filename": "pylogflow-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "af7a47591d1c42c4395c988a118e4863", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9873, "upload_time": "2020-03-26T17:06:59", "upload_time_iso_8601": "2020-03-26T17:06:59.158236Z", "url": "https://files.pythonhosted.org/packages/c8/69/991479fa2bf35bc0a9552ba9fba9600013087a66b0eb256926a201493ff7/pylogflow-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e275f9ebe0f308f8adcacd1d417f7d55", "sha256": "36ddd5b8a5ea6304a55207e6b2b9693c785bb0fe5b70b58a212407abf61295f1"}, "downloads": -1, "filename": "pylogflow-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e275f9ebe0f308f8adcacd1d417f7d55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13378, "upload_time": "2020-03-26T17:07:01", "upload_time_iso_8601": "2020-03-26T17:07:01.807148Z", "url": "https://files.pythonhosted.org/packages/47/f3/3664f3eb3e88779e5b7237bfb9067aff7c42ea54d56a0653edc96fc3ff7f/pylogflow-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "af7a47591d1c42c4395c988a118e4863", "sha256": "df0d360c32eaab028784f9ed56c966e034521a18310cb4247394b4549e37657e"}, "downloads": -1, "filename": "pylogflow-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "af7a47591d1c42c4395c988a118e4863", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9873, "upload_time": "2020-03-26T17:06:59", "upload_time_iso_8601": "2020-03-26T17:06:59.158236Z", "url": "https://files.pythonhosted.org/packages/c8/69/991479fa2bf35bc0a9552ba9fba9600013087a66b0eb256926a201493ff7/pylogflow-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e275f9ebe0f308f8adcacd1d417f7d55", "sha256": "36ddd5b8a5ea6304a55207e6b2b9693c785bb0fe5b70b58a212407abf61295f1"}, "downloads": -1, "filename": "pylogflow-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e275f9ebe0f308f8adcacd1d417f7d55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13378, "upload_time": "2020-03-26T17:07:01", "upload_time_iso_8601": "2020-03-26T17:07:01.807148Z", "url": "https://files.pythonhosted.org/packages/47/f3/3664f3eb3e88779e5b7237bfb9067aff7c42ea54d56a0653edc96fc3ff7f/pylogflow-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:51 2020"}