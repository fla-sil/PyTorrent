{"info": {"author": "Christopher S. Corley", "author_email": "cscorley@crimson.ua.edu", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Topic :: Software Development :: Version Control", "Topic :: Text Processing"], "description": "gitbuglink\n==========\n\nThe stupid commit-bug traceability linker for the stupid content tracker\n\nThe aim for gitbuglink is to be as stupid as possible. Other\nmulti-layered approaches exist (e.g.,\n[MLink](http://home.engineering.iastate.edu/~anhnt/Research/MLink/index.php)),\nbut gitbuglink is not meant to replace those. At the moment, gitbuglink\nwill only use a series of regular expressions to determine the link.\n\nInitial support for link finding will work for Bugzilla bug\nrepositories. Additional repository types (e.g., JIRA, github issues)\nshould be able to be easily added (it may find a few accidentally).\n\nIf you find a commit message that was not linked, please send a pull\nrequest with the appropriate test case. Please include a project repo\nurl and commit id in the comment of the test.\n\nUsage\n=====\n\nFor input, gitbuglink accepts a file path to a local git repository. It\nuses the `dulwich` Python module to access the repository log. Output is\na couple CSV files:\n\n1. `links.csv` -- a CSV of `(commit id, bug id)` for confirmed links\n2. `humans.csv` -- a CSV of `(commit id, bug id_1, bug id_2, ..., bug\n   id_n)` for links that require some form of human knowledge to\n   establish the correct link(s). The tool makes no assumptions about a\n   commit when it finds multiple links. You should investigate the\n   commit message yourself to confirm or correct the output.\n\n\nBut my subject system uses CVS/Subversion/...\n=============================================\n\n1. I don't care. Send a pull request when you get it working.\n2. Search for an (un)official project git mirror of the repository\n3. [Use a conversion tool](http://lmgtfy.com/?q=cvs+to+git):\n    1. [cvs2git](http://cvs2svn.tigris.org/cvs2git.html)\n    2. [svn2git](https://github.com/nirvdrum/svn2git)\n    3. (Send pull request for links to other tools you can recommend)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cscorley/gitbuglink", "keywords": null, "license": "The MIT License (MIT)\n\nCopyright (c) 2012 -- 2015 Christopher S. Corley\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.", "maintainer": null, "maintainer_email": null, "name": "gitbuglink", "package_url": "https://pypi.org/project/gitbuglink/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/gitbuglink/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/cscorley/gitbuglink"}, "release_url": "https://pypi.org/project/gitbuglink/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "The stupid commit-bug traceability linker for the stupid content tracker", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"gitbuglink\">\n<h2>gitbuglink</h2>\n<p>The stupid commit-bug traceability linker for the stupid content tracker</p>\n<p>The aim for gitbuglink is to be as stupid as possible. Other\nmulti-layered approaches exist (e.g.,\n[MLink](<a href=\"http://home.engineering.iastate.edu/~anhnt/Research/MLink/index.php\" rel=\"nofollow\">http://home.engineering.iastate.edu/~anhnt/Research/MLink/index.php</a>)),\nbut gitbuglink is not meant to replace those. At the moment, gitbuglink\nwill only use a series of regular expressions to determine the link.</p>\n<p>Initial support for link finding will work for Bugzilla bug\nrepositories. Additional repository types (e.g., JIRA, github issues)\nshould be able to be easily added (it may find a few accidentally).</p>\n<p>If you find a commit message that was not linked, please send a pull\nrequest with the appropriate test case. Please include a project repo\nurl and commit id in the comment of the test.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>For input, gitbuglink accepts a file path to a local git repository. It\nuses the <cite>dulwich</cite> Python module to access the repository log. Output is\na couple CSV files:</p>\n<ol>\n<li><cite>links.csv</cite> \u2013 a CSV of <cite>(commit id, bug id)</cite> for confirmed links</li>\n<li><cite>humans.csv</cite> \u2013 a CSV of <cite>(commit id, bug id_1, bug id_2, \u2026, bug\nid_n)</cite> for links that require some form of human knowledge to\nestablish the correct link(s). The tool makes no assumptions about a\ncommit when it finds multiple links. You should investigate the\ncommit message yourself to confirm or correct the output.</li>\n</ol>\n</div>\n<div id=\"but-my-subject-system-uses-cvs-subversion\">\n<h2>But my subject system uses CVS/Subversion/\u2026</h2>\n<ol>\n<li>I don\u2019t care. Send a pull request when you get it working.</li>\n<li>Search for an (un)official project git mirror of the repository</li>\n<li><dl>\n<dt>[Use a conversion tool](<a href=\"http://lmgtfy.com/?q=cvs+to+git\" rel=\"nofollow\">http://lmgtfy.com/?q=cvs+to+git</a>):</dt>\n<dd><ol>\n<li>[cvs2git](<a href=\"http://cvs2svn.tigris.org/cvs2git.html\" rel=\"nofollow\">http://cvs2svn.tigris.org/cvs2git.html</a>)</li>\n<li>[svn2git](<a href=\"https://github.com/nirvdrum/svn2git\" rel=\"nofollow\">https://github.com/nirvdrum/svn2git</a>)</li>\n<li>(Send pull request for links to other tools you can recommend)</li>\n</ol>\n</dd>\n</dl>\n</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 1530482, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "1c2557b8ef79770d91c9171dff3a47f3", "sha256": "acacd6448f70abeaee4aea9aebf1ea1e94dd00a44a5e59691ad8975cfc937642"}, "downloads": -1, "filename": "gitbuglink-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1c2557b8ef79770d91c9171dff3a47f3", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7500, "upload_time": "2015-05-02T16:44:21", "upload_time_iso_8601": "2015-05-02T16:44:21.641147Z", "url": "https://files.pythonhosted.org/packages/e5/5c/eb8b8fd99e5d8014184b56fec07f126fe37ef33498f59b5e06463cb07572/gitbuglink-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c522157c2d2a9e8d3ab6904321edebeb", "sha256": "c15dc3cc15bd3a3beac413ef0816434dc10c3eff2cefa77e8c7f14b3c16f1647"}, "downloads": -1, "filename": "gitbuglink-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c522157c2d2a9e8d3ab6904321edebeb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4567, "upload_time": "2015-05-02T16:44:19", "upload_time_iso_8601": "2015-05-02T16:44:19.027918Z", "url": "https://files.pythonhosted.org/packages/d0/2a/c6d36694ab329b6c2d889ca9d23f424b0b104c8a5ee73f10626d877f956f/gitbuglink-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1c2557b8ef79770d91c9171dff3a47f3", "sha256": "acacd6448f70abeaee4aea9aebf1ea1e94dd00a44a5e59691ad8975cfc937642"}, "downloads": -1, "filename": "gitbuglink-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1c2557b8ef79770d91c9171dff3a47f3", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7500, "upload_time": "2015-05-02T16:44:21", "upload_time_iso_8601": "2015-05-02T16:44:21.641147Z", "url": "https://files.pythonhosted.org/packages/e5/5c/eb8b8fd99e5d8014184b56fec07f126fe37ef33498f59b5e06463cb07572/gitbuglink-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c522157c2d2a9e8d3ab6904321edebeb", "sha256": "c15dc3cc15bd3a3beac413ef0816434dc10c3eff2cefa77e8c7f14b3c16f1647"}, "downloads": -1, "filename": "gitbuglink-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c522157c2d2a9e8d3ab6904321edebeb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4567, "upload_time": "2015-05-02T16:44:19", "upload_time_iso_8601": "2015-05-02T16:44:19.027918Z", "url": "https://files.pythonhosted.org/packages/d0/2a/c6d36694ab329b6c2d889ca9d23f424b0b104c8a5ee73f10626d877f956f/gitbuglink-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:09 2020"}