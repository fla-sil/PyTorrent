{"info": {"author": "Microsoft Corporation", "author_email": "azurekeyvault@microsoft.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Azure Key Vault Certificates client library for Python\nAzure Key Vault helps solve the following problems:\n- Certificate management (this library) - create, manage, and deploy public and private SSL/TLS certificates\n- Cryptographic key management\n([azure-keyvault-keys](https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-keys)) - create, store, and control access to the keys used to encrypt your data\n- Secrets management\n([azure-keyvault-secrets](https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-secrets)) -\nsecurely store and control access to tokens, passwords, certificates, API keys,\nand other secrets\n\n[Source code][certificates_client_src] | [Package (PyPI)][pypi_package_certificates] | [API reference documentation][reference_docs] | [Product documentation][keyvault_docs] | [Samples][certificates_samples]\n\n## Getting started\n### Install the package\nInstall [azure-keyvault-certificates][pypi_package_certificates] and\n[azure-identity][azure_identity_pypi] with [pip][pip]:\n```Bash\npip install azure-keyvault-certificates azure-identity\n```\n[azure-identity][azure_identity] is used for Azure Active Directory\nauthentication as demonstrated below.\n\n### Prerequisites\n* An [Azure subscription][azure_sub]\n* Python 2.7, 3.5.3, or later\n* A Key Vault. If you need to create one, you can use the\n[Azure Cloud Shell][azure_cloud_shell] to create one with these commands\n(replace `\"my-resource-group\"` and `\"my-key-vault\"` with your own, unique\nnames):\n\n  (Optional) if you want a new resource group to hold the Key Vault:\n  ```sh\n  az group create --name my-resource-group --location westus2\n  ```\n\n  Create the Key Vault:\n  ```Bash\n  az keyvault create --resource-group my-resource-group --name my-key-vault\n  ```\n\n  Output:\n  ```json\n  {\n      \"id\": \"...\",\n      \"location\": \"westus2\",\n      \"name\": \"my-key-vault\",\n      \"properties\": {\n          \"accessPolicies\": [...],\n          \"createMode\": null,\n          \"enablePurgeProtection\": null,\n          \"enableSoftDelete\": null,\n          \"enabledForDeployment\": false,\n          \"enabledForDiskEncryption\": null,\n          \"enabledForTemplateDeployment\": null,\n          \"networkAcls\": null,\n          \"provisioningState\": \"Succeeded\",\n          \"sku\": { \"name\": \"standard\" },\n          \"tenantId\": \"...\",\n          \"vaultUri\": \"https://my-key-vault.vault.azure.net/\"\n      },\n      \"resourceGroup\": \"my-resource-group\",\n      \"type\": \"Microsoft.KeyVault/vaults\"\n  }\n  ```\n\n  > The `\"vaultUri\"` property is the `vault_url` used by [CertificateClient][certificate_client_docs]\n\n### Authenticate the client\nThis document demonstrates using [DefaultAzureCredential][default_cred_ref]\nto authenticate as a service principal. However, [CertificateClient][certificate_client_docs]\naccepts any [azure-identity][azure_identity] credential. See the\n[azure-identity][azure_identity] documentation for more information about other\ncredentials.\n\n#### Create a service principal (optional)\nThis [Azure Cloud Shell][azure_cloud_shell] snippet shows how to create a\nnew service principal. Before using it, replace \"your-application-name\" with\na more appropriate name for your service principal.\n\nCreate a service principal:\n```Bash\naz ad sp create-for-rbac --name http://my-application --skip-assignment\n```\n\n> Output:\n> ```json\n> {\n>     \"appId\": \"generated app id\",\n>     \"displayName\": \"my-application\",\n>     \"name\": \"http://my-application\",\n>     \"password\": \"random password\",\n>     \"tenant\": \"tenant id\"\n> }\n> ```\n\nUse the output to set **AZURE_CLIENT_ID** (\"appId\" above), **AZURE_CLIENT_SECRET**\n(\"password\" above) and **AZURE_TENANT_ID** (\"tenant\" above) environment variables.\nThe following example shows a way to do this in Bash:\n```Bash\nexport AZURE_CLIENT_ID=\"generated app id\"\nexport AZURE_CLIENT_SECRET=\"random password\"\nexport AZURE_TENANT_ID=\"tenant id\"\n```\n\nAuthorize the service principal to perform certificate operations in your Key Vault:\n```Bash\naz keyvault set-policy --name my-key-vault --spn $AZURE_CLIENT_ID --certificate-permissions backup create delete get import list purge recover restore update\n```\n> Possible certificate permissions: backup, create, delete, deleteissuers, get, getissuers, import, list, listissuers, managecontacts, manageissuers, purge, recover, restore, setissuers, update\n\n#### Create a client\nOnce the **AZURE_CLIENT_ID**, **AZURE_CLIENT_SECRET** and\n**AZURE_TENANT_ID** environment variables are set,\n[DefaultAzureCredential][default_cred_ref] will be able to authenticate the\n[CertificateClient][certificate_client_docs].\n\nConstructing the client also requires your vault's URL, which you can\nget from the Azure CLI or the Azure Portal. In the Azure Portal, this URL is\nthe vault's \"DNS Name\".\n\n```python\nfrom azure.identity import DefaultAzureCredential\nfrom azure.keyvault.certificates import CertificateClient\n\ncredential = DefaultAzureCredential()\n\ncertificate_client = CertificateClient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\n```\n\n## Key concepts\n### Certificate Client\nWith a [CertificateClient][certificate_client_docs] you can get certificates from the vault, create new certificates and\nnew versions of existing certificates, update certificate metadata, and delete certificates. You\ncan also manage certificate issuers, contacts, and management policies of certificates. This is\nillustrated in the [examples](#examples) below.\n\n## Examples\nThis section contains code snippets covering common tasks:\n* [Create a Certificate](#create-a-certificate \"Create a Certificate\")\n* [Retrieve a Certificate](#retrieve-a-certificate \"Retrieve a Certificate\")\n* [Update Properties of an existing Certificate](#update-properties-of-an-existing-certificate \"Update Properties of an existing Certificate\")\n* [Delete a Certificate](#delete-a-certificate \"Delete a Certificate\")\n* [List Properites of Certificates](#list-properties-of-certificates \"List Properties of Certificates\")\n* [Asynchronously create a Certificate](#asynchronously-create-a-certificate \"Asynchronously create a Certificate\")\n* [Asynchronously list properties of Certificates](#asynchronously-list-properties-of-certificates \"Asynchronously list properties of Certificates\")\n\n### Create a Certificate\n[begin_create_certificate](https://aka.ms/azsdk-python-keyvault-certificates-begincreatecert-ref) creates a certificate to be stored in the Azure Key Vault.\nIf a certificate with the same name already exists, then a new version of the certificate is created.\nBefore creating a certificate, a management policy for the certificate can be created or our default\npolicy will be used. The [begin_create_certificate](https://aka.ms/azsdk-python-keyvault-certificates-begincreatecert-ref) operation returns a long running operation poller.\n```python\nfrom azure.identity import DefaultAzureCredential\nfrom azure.keyvault.certificates import CertificateClient, CertificatePolicy\n\ncredential = DefaultAzureCredential()\n\ncertificate_client = CertificateClient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\n\ncreate_certificate_poller = certificate_client.begin_create_certificate(\n    certificate_name=\"cert-name\", policy=CertificatePolicy.get_default()\n)\nprint(create_certificate_poller.result())\n```\nIf you would like to check the status of your certificate creation, you can call `status()` on the poller or\n[get_certificate_operation](https://aka.ms/azsdk-python-keyvault-certificates-getcertop-ref) with the name of the certificate.\n\n### Retrieve a Certificate\n[get_certificate](https://aka.ms/azsdk-python-keyvault-certificates-getcert-ref) retrieves a certificate previously stored in the Key Vault without\nhaving to specify version.\n```python\nfrom azure.identity import DefaultAzureCredential\nfrom azure.keyvault.certificates import CertificateClient\n\ncredential = DefaultAzureCredential()\n\ncertificate_client = CertificateClient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\n\ncertificate = certificate_client.get_certificate(\"cert-name\")\n\nprint(certificate.name)\nprint(certificate.properties.version)\nprint(certificate.policy.issuer_name)\n```\n\n[get_certificate_version](https://aka.ms/azsdk-python-keyvault-certificates-getcertversion-ref) retrieves a certificate based on the certificate name and the version of the certificate.\nVersion is required.\n```python\nfrom azure.identity import DefaultAzureCredential\nfrom azure.keyvault.certificates import CertificateClient\n\ncredential = DefaultAzureCredential()\n\ncertificate_client = CertificateClient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\ncertificate = certificate_client.get_certificate_version(certificate_name=\"cert-name\", version=\"cert-version\")\n\nprint(certificate.name)\nprint(certificate.properties.version)\n```\n\n### Update properties of an existing Certificate\n[update_certificate_properties](https://aka.ms/azsdk-python-keyvault-certificates-updatecertprops-ref) updates a certificate previously stored in the Key Vault.\n```python\nfrom azure.identity import DefaultAzureCredential\nfrom azure.keyvault.certificates import CertificateClient\n\ncredential = DefaultAzureCredential()\n\ncertificate_client = CertificateClient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\n\n# we will now disable the certificate for further use\nupdated_certificate= certificate_client.update_certificate_properties(\n    certificate_name=\"cert-name\", enabled=False\n)\n\nprint(updated_certificate.name)\nprint(updated_certificate.properties.enabled)\n```\n\n### Delete a Certificate\n[begin_delete_certificate](https://aka.ms/azsdk-python-keyvault-certs-deletecert-ref) requests Key Vault delete a certificate, returning a poller which allows you to\nwait for the deletion to finish. Waiting is helpful when the vault has [soft-delete][soft_delete]\nenabled, and you want to purge (permanently delete) the certificate as soon as possible.\nWhen [soft-delete][soft_delete] is disabled, [begin_delete_certificate](https://aka.ms/azsdk-python-keyvault-certs-deletecert-ref) itself is permanent.\n\n```python\nfrom azure.identity import DefaultAzureCredential\nfrom azure.keyvault.certificates import CertificateClient\n\ncredential = DefaultAzureCredential()\n\ncertificate_client = CertificateClient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\n\ndeleted_certificate = certificate_client.begin_delete_certificate(\"cert-name\")\n\nprint(deleted_certificate.name)\nprint(deleted_certificate.deleted_on)\n```\n### List properties of Certificates\n[list_properties_of_certificates](https://aka.ms/azsdk-python-keyvault-certs-listcerts-ref) lists the properties of all certificates in the specified Key Vault.\n```python\nfrom azure.identity import DefaultAzureCredential\nfrom azure.keyvault.certificates import CertificateClient\n\ncredential = DefaultAzureCredential()\n\ncertificate_client = CertificateClient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\n\ncertificates = certificate_client.list_properties_of_certificates()\n\nfor certificate in certificates:\n    # this list doesn't include versions of the certificates\n    print(certificate.name)\n```\n\n### Async operations\nThis library includes a complete async API supported on Python 3.5+. To use it, you must\nfirst install an async transport, such as [aiohttp](https://pypi.org/project/aiohttp/).\nSee\n[azure-core documentation](https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/core/azure-core/README.md#transport)\nfor more information.\n\nAsync clients should be closed when they're no longer needed. Each async\nclient is an async context manager and defines an async `close` method. For\nexample:\n\n```py\nfrom azure.keyvault.certificates import CertificateClient\n\n# call close when the client is no longer needed\nclient = CertificateClient()\n...\nawait client.close()\n\n# alternatively, use the client as an async context manager\nclient = CertificateClient()\nasync with client:\n  ...\n```\n\n### Asynchronously create a Certificate\n[create_certificate](https://aka.ms/azsdk-python-keyvault-certs-async-createcert) creates a certificate to be stored in the Azure Key Vault. If a certificate with the\nsame name already exists, then a new version of the certificate is created.\nBefore creating a certificate, a management policy for the certificate can be created or our default policy\nwill be used. Awaiting the call to [create_certificate](https://aka.ms/azsdk-python-keyvault-certs-async-createcert) returns your created certificate if creation is successful,\nand a [CertificateOperation](https://aka.ms/azsdk-python-keyvault-certs-models-certop-ref) if creation is not.\n```python\nfrom azure.identity.aio import DefaultAzureCredential\nfrom azure.keyvault.certificates.aio import CertificateClient\nfrom azure.keyvault.certificates import CertificatePolicy\n\ncredential = DefaultAzureCredential()\n\ncertificate_client = CertificateClient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\n\ncreate_certificate_result = await certificate_client.create_certificate(\n    certificate_name=\"cert-name\", policy=CertificatePolicy.get_default()\n)\nprint(create_certificate_result)\n```\n\n### Asynchronously list properties of Certificates\n[list_properties_of_certificates](https://aka.ms/azsdk-python-keyvault-certs-async-listcerts-ref) lists all the\nproperties of the certificates in the client's vault:\n```python\nfrom azure.identity.aio import DefaultAzureCredential\nfrom azure.keyvault.certificates.aio import CertificateClient\n\ncredential = DefaultAzureCredential()\n\ncertificate_client = CertificateClient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\n\ncertificates = certificate_client.list_properties_of_certificates()\nasync for certificate in certificates:\n    print(certificate.name)\n```\n\n## Troubleshooting\n### General\nKey Vault clients raise exceptions defined in [azure-core][azure_core_exceptions].\nFor example, if you try to get a key that doesn't exist in the vault, [CertificateClient][certificate_client_docs]\nraises [ResourceNotFoundError](https://aka.ms/azsdk-python-core-exceptions-resource-not-found-error):\n```python\nfrom azure.identity import DefaultAzureCredential\nfrom azure.keyvault.certificates import CertificateClient\nfrom azure.core.exceptions import ResourceNotFoundError\n\ncredential = DefaultAzureCredential()\ncertificate_client = CertificateClient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential)\n\ntry:\n    certificate_client.get_certificate(\"which-does-not-exist\")\nexcept ResourceNotFoundError as e:\n    print(e.message)\n```\n### Logging\nThis library uses the standard\n[logging](https://docs.python.org/3.5/library/logging.html) library for logging.\nBasic information about HTTP sessions (URLs, headers, etc.) is logged at INFO\nlevel.\n\nDetailed DEBUG level logging, including request/response bodies and unredacted\nheaders, can be enabled on a client with the `logging_enable` argument:\n```py\nfrom azure.identity import DefaultAzureCredential\nfrom azure.keyvault.certificates import CertificateClient\nimport sys\nimport logging\n\n# Create a logger for the 'azure' SDK\nlogger = logging.getLogger('azure')\nlogger.setLevel(logging.DEBUG)\n\n# Configure a console output\nhandler = logging.StreamHandler(stream=sys.stdout)\nlogger.addHandler(handler)\n\ncredential = DefaultAzureCredential()\n\n# This client will log detailed information about its HTTP sessions, at DEBUG level\nclient = CertificateClient(vault_url=\"https://my-key-vault.vault.azure.net/\", credential=credential, logging_enable=True)\n```\n\nNetwork trace logging can also be enabled for any single operation:\n ```python\ncertificate = certificate_client.get_certificate(certificate_name=\"cert-name\", logging_enable=True)\n```\n\n## Next steps\nSeveral samples are available in the Azure SDK for Python GitHub repository. These samples provide example code for additional Key Vault scenarios:\n* [hello_world.py][hello_world_sample] and [hello_world_async.py][hello_world_async_sample] - create/get/update/delete certificates\n* [backup_restore_operations.py][backup_operations_sample] and [backup_restore_operations_async.py][backup_operations_async_sample] - backup and\nrecover certificates\n* [list_operations.py][list_operations_sample] and [list_operations_async.py][list_operations_async_sample] - list certificates\n* [recover_purge_operations.py][recover_purge_operations_sample] and [recover_purge_operations_async.py][recover_purge_operations_async_sample] - recover and purge certificates\n* [issuers.py][issuers_sample] and [issuers_async.py][issuers_async_sample] - manage certificate issuers\n* [contacts.py][contacts_sample] and [contacts_async.py][contacts_async_sample] - manage certificate contacts\n\n###  Additional Documentation\nFor more extensive documentation on Azure Key Vault, see the [API reference documentation][reference_docs].\n\n## Contributing\nThis project welcomes contributions and suggestions. Most contributions require\nyou to agree to a Contributor License Agreement (CLA) declaring that you have\nthe right to, and actually do, grant us the rights to use your contribution.\nFor details, visit https://cla.microsoft.com.\n\nWhen you submit a pull request, a CLA-bot will automatically determine whether\nyou need to provide a CLA and decorate the PR appropriately (e.g., label,\ncomment). Simply follow the instructions provided by the bot. You will only\nneed to do this once across all repos using our CLA.\n\nThis project has adopted the\n[Microsoft Open Source Code of Conduct][code_of_conduct]. For more information,\nsee the Code of Conduct FAQ or contact opencode@microsoft.com with any\nadditional questions or comments.\n\n[asyncio_package]: https://docs.python.org/3/library/asyncio.html\n[default_cred_ref]: https://aka.ms/azsdk-python-identity-default-cred-ref\n[azure_cloud_shell]: https://shell.azure.com/bash\n[azure_core_exceptions]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/core/azure-core#azure-core-library-exceptions\n[azure_identity]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/identity/azure-identity\n[azure_identity_pypi]: https://pypi.org/project/azure-identity/\n[azure_sub]: https://azure.microsoft.com/free/\n[code_of_conduct]: https://opensource.microsoft.com/codeofconduct/\n[backup_operations_sample]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/backup_restore_operations.py\n[backup_operations_async_sample]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/backup_restore_operations_async.py\n[hello_world_sample]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/hello_world.py\n[hello_world_async_sample]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/hello_world_async.py\n[keyvault_docs]: https://docs.microsoft.com/en-us/azure/key-vault/\n[list_operations_sample]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/list_operations.py\n[list_operations_async_sample]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/list_operations_async.py\n[recover_purge_operations_sample]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/recover_purge_operations.py\n[recover_purge_operations_async_sample]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/recover_purge_operations_async.py\n[contacts_sample]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/contacts.py\n[contacts_async_sample]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/contacts_async.py\n[issuers_sample]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/issuers.py\n[issuers_async_sample]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/issuers_async.py\n[pip]: https://pypi.org/project/pip/\n[pypi_package_certificates]: https://pypi.org/project/azure-keyvault-certificates/\n[certificate_client_docs]: https://aka.ms/azsdk-python-keyvault-certificates-certificateclient-ref\n[reference_docs]: https://aka.ms/azsdk-python-keyvault-certificates-docs\n[certificates_client_src]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-certificates/azure/keyvault/certificates\n[certificates_samples]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-certificates/samples\n[soft_delete]: https://docs.microsoft.com/en-us/azure/key-vault/key-vault-ovw-soft-delete\n[test_example_certificates]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/tests/test_examples_certificates.py\n[test_example_certificates_async]: https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/tests/test_examples_certificates_async.py\n\n![Impressions](https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-python%2Fsdk%2Fkeyvault%2Fazure-keyvault-certificates%2FFREADME.png)\n\n\n# Release History\n\n## 4.1.0 (2020-03-10)\n- `CertificateClient` instances have a `close` method which closes opened\nsockets. Used as a context manager, a `CertificateClient` closes opened sockets\non exit. ([#9906](https://github.com/Azure/azure-sdk-for-python/pull/9906))\n- Pollers no longer sleep after operation completion\n([#9991](https://github.com/Azure/azure-sdk-for-python/pull/9991))\n\n## 4.0.1 (2020-02-11)\n- `azure.keyvault.certificates` defines `__version__`\n- Updated `msrest` requirement to >=0.6.0\n- Challenge authentication policy requires TLS\n([#9457](https://github.com/Azure/azure-sdk-for-python/pull/9457))\n- Methods no longer raise the internal error `KeyVaultErrorException`\n([#9690](https://github.com/Azure/azure-sdk-for-python/issues/9690))\n\n## 4.0.0 (2020-01-08)\n- First GA release\n\n## 4.0.0b7 (2019-12-17)\n- Challenge authentication policy preserves request options\n([#8999](https://github.com/Azure/azure-sdk-for-python/pull/8999))\n- Added `vault_url` property to `CertificateOperation`\n- Removed `id`, `expires_on`, `not_before`, and `recover_level` properties from `CertificatePolicy`\n- Removed `vault_url` property from `CertificateIssuer`\n- Removed `vault_url` property from `IssuerProperties`\n\n\n## 4.0.0b6 (2019-12-04)\n- Updated `msrest` requirement to >=0.6.0\n- Renamed `get_policy` to `get_certificate_policy`\n- Renamed `update_policy` to `update_certificate_policy`\n- Renamed `create_contacts` to `set_contacts`\n- Renamed parameter `admin_details` of `create_issuer` and `update_issuer` to `admin_contacts`\n- Renamed all `name` parameters to include the name of the object whose name we are referring to.\nFor example, the `name` parameter of `get_certificate` is now `certificate_name`\n- Renamed `AdministratorDetails` to `AdministratorContact`\n- Renamed the `ekus` property of `CertificatePolicy` to `enhanced_key_usage`\n- Renamed the `curve` property of `CertificatePolicy` to `key_curve_name`\n- Renamed the `san_upns` property of `CertificatePolicy` to `san_user_principal_names`\n- Made the `subject_name` property of `CertificatePolicy` a kwarg and renamed it to `subject`\n- Renamed the `deleted_date` property of `DeletedCertificate` to `deleted_on`\n- Removed the `issuer_properties` property from `CertificateIssuer` and added the `provider` property\ndirectly onto `CertificateIssuer`\n- Renamed property `admin_details` of `CertificateIssuer` to `admin_contacts`\n- Renamed the `thumbprint` property of `CertificateProperties` to `x509_thumbprint`\n- Added `WellKnownIssuerNames` enum class that holds popular issuer names\n- Renamed `SecretContentType` enum class to `CertificateContentType`\n\n\n## 4.0.0b5 (2019-11-01)\n- Removed redundant method `get_pending_certificate_signing_request()`. A pending CSR can be retrieved via `get_certificate_operation()`.\n- Renamed the sync method `create_certificate` to `begin_create_certificate`\n- Renamed `restore_certificate` to `restore_certificate_backup`\n- Renamed `get_certificate` to `get_certificate_version`\n- Renamed `get_certificate_with_policy` to `get_certificate`\n- Renamed `list_certificates` to `list_properties_of_certificates`\n- Renamed `list_properties_of_issuers` to `list_properties_of_issuers`\n- Renamed `list_certificate_versions` to `list_properties_of_certificate_versions`\n- `create_certificate` now has policy as a required parameter\n- All optional positional parameters besides `version` have been moved to kwargs\n- Renamed sync method `delete_certificate` to `begin_delete_certificate`\n- Renamed sync method `recover_certificate` to `begin_recover_deleted_certificate`\n- Renamed async method `recover_certificate` to `recover_deleted_certificate`\n- The sync method `begin_delete_certificate` and async `delete_certificate` now return pollers that return a `DeletedCertificate`\n- The sync method `begin_recover_deleted_certificate` and async `recover_deleted_certificate` now return pollers that return a `KeyVaultCertificate`\n\n- Renamed enum `ActionType` to `CertificatePolicyAction`\n- Renamed `Certificate` to `KeyVaultCertificate`\n- Renamed `Contact` to `CertificateContact`\n- Renamed `Issuer` to `CertificateIssuer`\n- Renamed `CertificateError` to `CertificateOperationError`\n- Renamed `expires` property of `CertificateProperties` and `CertificatePolicy` to `expires_on`\n- Renamed `created` property of `CertificateProperties`, `CertificatePolicy`, and `CertificateIssuer` to `created_on`\n- Renamed `updated` property of `CertificateProperties`, `CertificatePolicy`, and `CertificateIssuer` to `updated_on`\n- The `vault_endpoint` parameter of `CertificateClient` has been renamed to `vault_url`\n- The property `vault_endpoint` has been renamed to `vault_url` in all models\n- `CertificatePolicy` now has a public class method `get_default` allowing users to get the default `CertificatePolicy`\n- Logging can now be enabled properly on the client level\n\n## 4.0.0b4 (2019-10-08)\n- Enums `JsonWebKeyCurveName` and `JsonWebKeyType` have been renamed to `KeyCurveName` and `KeyType`, respectively.\n- Both async and sync versions of `create_certificate` now return pollers that return the created `Certificate` if creation is successful,\nand a `CertificateOperation` if not.\n- `Certificate` now has attribute `properties`, which holds certain properties of the\ncertificate, such as `version`. This changes the shape of the `Certificate` type,\nas certain properties of `Certificate` (such as `version`) have to be accessed\nthrough the `properties` property. See the updated [docs](https://azure.github.io/azure-sdk-for-python/ref/azure.keyvault.certificates.html)\nfor details.\n- `update_certificate` has been renamed to `update_certificate_properties`\n- The `vault_url` parameter of `CertificateClient` has been renamed to `vault_endpoint`\n- The property `vault_url` has been renamed to `vault_endpoint` in all models\n\n## 4.0.0b3 (2019-09-11)\nVersion 4.0.0b3 is the first preview of our efforts to create a user-friendly and Pythonic client library for Azure Key Vault's certificates.\n\n This library is not a direct replacement for `azure-keyvault`. Applications\nusing that library would require code changes to use `azure-keyvault-certificates`.\nThis package's\n[documentation](https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-certificates/README.md)\nand\n[samples](https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-certificates/samples)\ndemonstrate the new API.\n\n### Breaking changes from `azure-keyvault`:\n- Packages scoped by functionality\n    - `azure-keyvault-certificates` contains a client for certificate operations\n- Client instances are scoped to vaults (an instance interacts with one vault\nonly)\n- Authentication using `azure-identity` credentials\n  - see this package's\n  [documentation](https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-keys/README.md)\n  , and the\n  [Azure Identity documentation](https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/identity/azure-identity/README.md)\n  for more information\n\n### New Features:\n- Distributed tracing framework OpenCensus is now supported\n- Asynchronous API supported on Python 3.5.3+\n    - the `azure.keyvault.certificates.aio` namespace contains an async equivalent of\n    the synchronous client in `azure.keyvault.certificates`\n    - Async clients use [aiohttp](https://pypi.org/project/aiohttp/) for transport\n    by default. See [azure-core documentation](https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/core/azure-core/README.md/#transport)\n    for more information about using other transports.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-certificates", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "azure-keyvault-certificates", "package_url": "https://pypi.org/project/azure-keyvault-certificates/", "platform": "", "project_url": "https://pypi.org/project/azure-keyvault-certificates/", "project_urls": {"Homepage": "https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-certificates"}, "release_url": "https://pypi.org/project/azure-keyvault-certificates/4.1.0/", "requires_dist": ["azure-core (<2.0.0,>=1.2.1)", "msrest (>=0.6.0)", "azure-keyvault-nspkg ; python_version<'3.0'", "enum34 (>=1.0.4) ; python_version<'3.4'", "typing ; python_version<'3.5'"], "requires_python": "", "summary": "Microsoft Azure Key Vault Certificates Client Library for Python", "version": "4.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Azure Key Vault Certificates client library for Python</h1>\n<p>Azure Key Vault helps solve the following problems:</p>\n<ul>\n<li>Certificate management (this library) - create, manage, and deploy public and private SSL/TLS certificates</li>\n<li>Cryptographic key management\n(<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-keys\" rel=\"nofollow\">azure-keyvault-keys</a>) - create, store, and control access to the keys used to encrypt your data</li>\n<li>Secrets management\n(<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-secrets\" rel=\"nofollow\">azure-keyvault-secrets</a>) -\nsecurely store and control access to tokens, passwords, certificates, API keys,\nand other secrets</li>\n</ul>\n<p><a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-certificates/azure/keyvault/certificates\" rel=\"nofollow\">Source code</a> | <a href=\"https://pypi.org/project/azure-keyvault-certificates/\" rel=\"nofollow\">Package (PyPI)</a> | <a href=\"https://aka.ms/azsdk-python-keyvault-certificates-docs\" rel=\"nofollow\">API reference documentation</a> | <a href=\"https://docs.microsoft.com/en-us/azure/key-vault/\" rel=\"nofollow\">Product documentation</a> | <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-certificates/samples\" rel=\"nofollow\">Samples</a></p>\n<h2>Getting started</h2>\n<h3>Install the package</h3>\n<p>Install <a href=\"https://pypi.org/project/azure-keyvault-certificates/\" rel=\"nofollow\">azure-keyvault-certificates</a> and\n<a href=\"https://pypi.org/project/azure-identity/\" rel=\"nofollow\">azure-identity</a> with <a href=\"https://pypi.org/project/pip/\" rel=\"nofollow\">pip</a>:</p>\n<pre>pip install azure-keyvault-certificates azure-identity\n</pre>\n<p><a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/identity/azure-identity\" rel=\"nofollow\">azure-identity</a> is used for Azure Active Directory\nauthentication as demonstrated below.</p>\n<h3>Prerequisites</h3>\n<ul>\n<li>\n<p>An <a href=\"https://azure.microsoft.com/free/\" rel=\"nofollow\">Azure subscription</a></p>\n</li>\n<li>\n<p>Python 2.7, 3.5.3, or later</p>\n</li>\n<li>\n<p>A Key Vault. If you need to create one, you can use the\n<a href=\"https://shell.azure.com/bash\" rel=\"nofollow\">Azure Cloud Shell</a> to create one with these commands\n(replace <code>\"my-resource-group\"</code> and <code>\"my-key-vault\"</code> with your own, unique\nnames):</p>\n<p>(Optional) if you want a new resource group to hold the Key Vault:</p>\n<pre>az group create --name my-resource-group --location westus2\n</pre>\n<p>Create the Key Vault:</p>\n<pre>az keyvault create --resource-group my-resource-group --name my-key-vault\n</pre>\n<p>Output:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"...\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"location\"</span><span class=\"p\">:</span> <span class=\"s2\">\"westus2\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"my-key-vault\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"properties\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"accessPolicies\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"err\">...</span><span class=\"p\">],</span>\n        <span class=\"nt\">\"createMode\"</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"enablePurgeProtection\"</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"enableSoftDelete\"</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"enabledForDeployment\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"enabledForDiskEncryption\"</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"enabledForTemplateDeployment\"</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"networkAcls\"</span><span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"provisioningState\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Succeeded\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"sku\"</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"standard\"</span> <span class=\"p\">},</span>\n        <span class=\"nt\">\"tenantId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"...\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"vaultUri\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://my-key-vault.vault.azure.net/\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"resourceGroup\"</span><span class=\"p\">:</span> <span class=\"s2\">\"my-resource-group\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Microsoft.KeyVault/vaults\"</span>\n<span class=\"p\">}</span>\n</pre>\n<blockquote>\n<p>The <code>\"vaultUri\"</code> property is the <code>vault_url</code> used by <a href=\"https://aka.ms/azsdk-python-keyvault-certificates-certificateclient-ref\" rel=\"nofollow\">CertificateClient</a></p>\n</blockquote>\n</li>\n</ul>\n<h3>Authenticate the client</h3>\n<p>This document demonstrates using <a href=\"https://aka.ms/azsdk-python-identity-default-cred-ref\" rel=\"nofollow\">DefaultAzureCredential</a>\nto authenticate as a service principal. However, <a href=\"https://aka.ms/azsdk-python-keyvault-certificates-certificateclient-ref\" rel=\"nofollow\">CertificateClient</a>\naccepts any <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/identity/azure-identity\" rel=\"nofollow\">azure-identity</a> credential. See the\n<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/identity/azure-identity\" rel=\"nofollow\">azure-identity</a> documentation for more information about other\ncredentials.</p>\n<h4>Create a service principal (optional)</h4>\n<p>This <a href=\"https://shell.azure.com/bash\" rel=\"nofollow\">Azure Cloud Shell</a> snippet shows how to create a\nnew service principal. Before using it, replace \"your-application-name\" with\na more appropriate name for your service principal.</p>\n<p>Create a service principal:</p>\n<pre>az ad sp create-for-rbac --name http://my-application --skip-assignment\n</pre>\n<blockquote>\n<p>Output:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"appId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"generated app id\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"displayName\"</span><span class=\"p\">:</span> <span class=\"s2\">\"my-application\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://my-application\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"password\"</span><span class=\"p\">:</span> <span class=\"s2\">\"random password\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"tenant\"</span><span class=\"p\">:</span> <span class=\"s2\">\"tenant id\"</span>\n<span class=\"p\">}</span>\n</pre>\n</blockquote>\n<p>Use the output to set <strong>AZURE_CLIENT_ID</strong> (\"appId\" above), <strong>AZURE_CLIENT_SECRET</strong>\n(\"password\" above) and <strong>AZURE_TENANT_ID</strong> (\"tenant\" above) environment variables.\nThe following example shows a way to do this in Bash:</p>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">AZURE_CLIENT_ID</span><span class=\"o\">=</span><span class=\"s2\">\"generated app id\"</span>\n<span class=\"nb\">export</span> <span class=\"nv\">AZURE_CLIENT_SECRET</span><span class=\"o\">=</span><span class=\"s2\">\"random password\"</span>\n<span class=\"nb\">export</span> <span class=\"nv\">AZURE_TENANT_ID</span><span class=\"o\">=</span><span class=\"s2\">\"tenant id\"</span>\n</pre>\n<p>Authorize the service principal to perform certificate operations in your Key Vault:</p>\n<pre>az keyvault set-policy --name my-key-vault --spn <span class=\"nv\">$AZURE_CLIENT_ID</span> --certificate-permissions backup create delete get import list purge recover restore update\n</pre>\n<blockquote>\n<p>Possible certificate permissions: backup, create, delete, deleteissuers, get, getissuers, import, list, listissuers, managecontacts, manageissuers, purge, recover, restore, setissuers, update</p>\n</blockquote>\n<h4>Create a client</h4>\n<p>Once the <strong>AZURE_CLIENT_ID</strong>, <strong>AZURE_CLIENT_SECRET</strong> and\n<strong>AZURE_TENANT_ID</strong> environment variables are set,\n<a href=\"https://aka.ms/azsdk-python-identity-default-cred-ref\" rel=\"nofollow\">DefaultAzureCredential</a> will be able to authenticate the\n<a href=\"https://aka.ms/azsdk-python-keyvault-certificates-certificateclient-ref\" rel=\"nofollow\">CertificateClient</a>.</p>\n<p>Constructing the client also requires your vault's URL, which you can\nget from the Azure CLI or the Azure Portal. In the Azure Portal, this URL is\nthe vault's \"DNS Name\".</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.identity</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultAzureCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.certificates</span> <span class=\"kn\">import</span> <span class=\"n\">CertificateClient</span>\n\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">DefaultAzureCredential</span><span class=\"p\">()</span>\n\n<span class=\"n\">certificate_client</span> <span class=\"o\">=</span> <span class=\"n\">CertificateClient</span><span class=\"p\">(</span><span class=\"n\">vault_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://my-key-vault.vault.azure.net/\"</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">credential</span><span class=\"p\">)</span>\n</pre>\n<h2>Key concepts</h2>\n<h3>Certificate Client</h3>\n<p>With a <a href=\"https://aka.ms/azsdk-python-keyvault-certificates-certificateclient-ref\" rel=\"nofollow\">CertificateClient</a> you can get certificates from the vault, create new certificates and\nnew versions of existing certificates, update certificate metadata, and delete certificates. You\ncan also manage certificate issuers, contacts, and management policies of certificates. This is\nillustrated in the <a href=\"#examples\" rel=\"nofollow\">examples</a> below.</p>\n<h2>Examples</h2>\n<p>This section contains code snippets covering common tasks:</p>\n<ul>\n<li><a href=\"#create-a-certificate\" rel=\"nofollow\" title=\"Create a Certificate\">Create a Certificate</a></li>\n<li><a href=\"#retrieve-a-certificate\" rel=\"nofollow\" title=\"Retrieve a Certificate\">Retrieve a Certificate</a></li>\n<li><a href=\"#update-properties-of-an-existing-certificate\" rel=\"nofollow\" title=\"Update Properties of an existing Certificate\">Update Properties of an existing Certificate</a></li>\n<li><a href=\"#delete-a-certificate\" rel=\"nofollow\" title=\"Delete a Certificate\">Delete a Certificate</a></li>\n<li><a href=\"#list-properties-of-certificates\" rel=\"nofollow\" title=\"List Properties of Certificates\">List Properites of Certificates</a></li>\n<li><a href=\"#asynchronously-create-a-certificate\" rel=\"nofollow\" title=\"Asynchronously create a Certificate\">Asynchronously create a Certificate</a></li>\n<li><a href=\"#asynchronously-list-properties-of-certificates\" rel=\"nofollow\" title=\"Asynchronously list properties of Certificates\">Asynchronously list properties of Certificates</a></li>\n</ul>\n<h3>Create a Certificate</h3>\n<p><a href=\"https://aka.ms/azsdk-python-keyvault-certificates-begincreatecert-ref\" rel=\"nofollow\">begin_create_certificate</a> creates a certificate to be stored in the Azure Key Vault.\nIf a certificate with the same name already exists, then a new version of the certificate is created.\nBefore creating a certificate, a management policy for the certificate can be created or our default\npolicy will be used. The <a href=\"https://aka.ms/azsdk-python-keyvault-certificates-begincreatecert-ref\" rel=\"nofollow\">begin_create_certificate</a> operation returns a long running operation poller.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.identity</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultAzureCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.certificates</span> <span class=\"kn\">import</span> <span class=\"n\">CertificateClient</span><span class=\"p\">,</span> <span class=\"n\">CertificatePolicy</span>\n\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">DefaultAzureCredential</span><span class=\"p\">()</span>\n\n<span class=\"n\">certificate_client</span> <span class=\"o\">=</span> <span class=\"n\">CertificateClient</span><span class=\"p\">(</span><span class=\"n\">vault_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://my-key-vault.vault.azure.net/\"</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">credential</span><span class=\"p\">)</span>\n\n<span class=\"n\">create_certificate_poller</span> <span class=\"o\">=</span> <span class=\"n\">certificate_client</span><span class=\"o\">.</span><span class=\"n\">begin_create_certificate</span><span class=\"p\">(</span>\n    <span class=\"n\">certificate_name</span><span class=\"o\">=</span><span class=\"s2\">\"cert-name\"</span><span class=\"p\">,</span> <span class=\"n\">policy</span><span class=\"o\">=</span><span class=\"n\">CertificatePolicy</span><span class=\"o\">.</span><span class=\"n\">get_default</span><span class=\"p\">()</span>\n<span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">create_certificate_poller</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">())</span>\n</pre>\n<p>If you would like to check the status of your certificate creation, you can call <code>status()</code> on the poller or\n<a href=\"https://aka.ms/azsdk-python-keyvault-certificates-getcertop-ref\" rel=\"nofollow\">get_certificate_operation</a> with the name of the certificate.</p>\n<h3>Retrieve a Certificate</h3>\n<p><a href=\"https://aka.ms/azsdk-python-keyvault-certificates-getcert-ref\" rel=\"nofollow\">get_certificate</a> retrieves a certificate previously stored in the Key Vault without\nhaving to specify version.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.identity</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultAzureCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.certificates</span> <span class=\"kn\">import</span> <span class=\"n\">CertificateClient</span>\n\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">DefaultAzureCredential</span><span class=\"p\">()</span>\n\n<span class=\"n\">certificate_client</span> <span class=\"o\">=</span> <span class=\"n\">CertificateClient</span><span class=\"p\">(</span><span class=\"n\">vault_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://my-key-vault.vault.azure.net/\"</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">credential</span><span class=\"p\">)</span>\n\n<span class=\"n\">certificate</span> <span class=\"o\">=</span> <span class=\"n\">certificate_client</span><span class=\"o\">.</span><span class=\"n\">get_certificate</span><span class=\"p\">(</span><span class=\"s2\">\"cert-name\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">certificate</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">certificate</span><span class=\"o\">.</span><span class=\"n\">properties</span><span class=\"o\">.</span><span class=\"n\">version</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">certificate</span><span class=\"o\">.</span><span class=\"n\">policy</span><span class=\"o\">.</span><span class=\"n\">issuer_name</span><span class=\"p\">)</span>\n</pre>\n<p><a href=\"https://aka.ms/azsdk-python-keyvault-certificates-getcertversion-ref\" rel=\"nofollow\">get_certificate_version</a> retrieves a certificate based on the certificate name and the version of the certificate.\nVersion is required.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.identity</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultAzureCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.certificates</span> <span class=\"kn\">import</span> <span class=\"n\">CertificateClient</span>\n\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">DefaultAzureCredential</span><span class=\"p\">()</span>\n\n<span class=\"n\">certificate_client</span> <span class=\"o\">=</span> <span class=\"n\">CertificateClient</span><span class=\"p\">(</span><span class=\"n\">vault_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://my-key-vault.vault.azure.net/\"</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">credential</span><span class=\"p\">)</span>\n<span class=\"n\">certificate</span> <span class=\"o\">=</span> <span class=\"n\">certificate_client</span><span class=\"o\">.</span><span class=\"n\">get_certificate_version</span><span class=\"p\">(</span><span class=\"n\">certificate_name</span><span class=\"o\">=</span><span class=\"s2\">\"cert-name\"</span><span class=\"p\">,</span> <span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s2\">\"cert-version\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">certificate</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">certificate</span><span class=\"o\">.</span><span class=\"n\">properties</span><span class=\"o\">.</span><span class=\"n\">version</span><span class=\"p\">)</span>\n</pre>\n<h3>Update properties of an existing Certificate</h3>\n<p><a href=\"https://aka.ms/azsdk-python-keyvault-certificates-updatecertprops-ref\" rel=\"nofollow\">update_certificate_properties</a> updates a certificate previously stored in the Key Vault.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.identity</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultAzureCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.certificates</span> <span class=\"kn\">import</span> <span class=\"n\">CertificateClient</span>\n\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">DefaultAzureCredential</span><span class=\"p\">()</span>\n\n<span class=\"n\">certificate_client</span> <span class=\"o\">=</span> <span class=\"n\">CertificateClient</span><span class=\"p\">(</span><span class=\"n\">vault_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://my-key-vault.vault.azure.net/\"</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">credential</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># we will now disable the certificate for further use</span>\n<span class=\"n\">updated_certificate</span><span class=\"o\">=</span> <span class=\"n\">certificate_client</span><span class=\"o\">.</span><span class=\"n\">update_certificate_properties</span><span class=\"p\">(</span>\n    <span class=\"n\">certificate_name</span><span class=\"o\">=</span><span class=\"s2\">\"cert-name\"</span><span class=\"p\">,</span> <span class=\"n\">enabled</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n<span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">updated_certificate</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">updated_certificate</span><span class=\"o\">.</span><span class=\"n\">properties</span><span class=\"o\">.</span><span class=\"n\">enabled</span><span class=\"p\">)</span>\n</pre>\n<h3>Delete a Certificate</h3>\n<p><a href=\"https://aka.ms/azsdk-python-keyvault-certs-deletecert-ref\" rel=\"nofollow\">begin_delete_certificate</a> requests Key Vault delete a certificate, returning a poller which allows you to\nwait for the deletion to finish. Waiting is helpful when the vault has <a href=\"https://docs.microsoft.com/en-us/azure/key-vault/key-vault-ovw-soft-delete\" rel=\"nofollow\">soft-delete</a>\nenabled, and you want to purge (permanently delete) the certificate as soon as possible.\nWhen <a href=\"https://docs.microsoft.com/en-us/azure/key-vault/key-vault-ovw-soft-delete\" rel=\"nofollow\">soft-delete</a> is disabled, <a href=\"https://aka.ms/azsdk-python-keyvault-certs-deletecert-ref\" rel=\"nofollow\">begin_delete_certificate</a> itself is permanent.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.identity</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultAzureCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.certificates</span> <span class=\"kn\">import</span> <span class=\"n\">CertificateClient</span>\n\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">DefaultAzureCredential</span><span class=\"p\">()</span>\n\n<span class=\"n\">certificate_client</span> <span class=\"o\">=</span> <span class=\"n\">CertificateClient</span><span class=\"p\">(</span><span class=\"n\">vault_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://my-key-vault.vault.azure.net/\"</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">credential</span><span class=\"p\">)</span>\n\n<span class=\"n\">deleted_certificate</span> <span class=\"o\">=</span> <span class=\"n\">certificate_client</span><span class=\"o\">.</span><span class=\"n\">begin_delete_certificate</span><span class=\"p\">(</span><span class=\"s2\">\"cert-name\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">deleted_certificate</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">deleted_certificate</span><span class=\"o\">.</span><span class=\"n\">deleted_on</span><span class=\"p\">)</span>\n</pre>\n<h3>List properties of Certificates</h3>\n<p><a href=\"https://aka.ms/azsdk-python-keyvault-certs-listcerts-ref\" rel=\"nofollow\">list_properties_of_certificates</a> lists the properties of all certificates in the specified Key Vault.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.identity</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultAzureCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.certificates</span> <span class=\"kn\">import</span> <span class=\"n\">CertificateClient</span>\n\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">DefaultAzureCredential</span><span class=\"p\">()</span>\n\n<span class=\"n\">certificate_client</span> <span class=\"o\">=</span> <span class=\"n\">CertificateClient</span><span class=\"p\">(</span><span class=\"n\">vault_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://my-key-vault.vault.azure.net/\"</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">credential</span><span class=\"p\">)</span>\n\n<span class=\"n\">certificates</span> <span class=\"o\">=</span> <span class=\"n\">certificate_client</span><span class=\"o\">.</span><span class=\"n\">list_properties_of_certificates</span><span class=\"p\">()</span>\n\n<span class=\"k\">for</span> <span class=\"n\">certificate</span> <span class=\"ow\">in</span> <span class=\"n\">certificates</span><span class=\"p\">:</span>\n    <span class=\"c1\"># this list doesn't include versions of the certificates</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">certificate</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</pre>\n<h3>Async operations</h3>\n<p>This library includes a complete async API supported on Python 3.5+. To use it, you must\nfirst install an async transport, such as <a href=\"https://pypi.org/project/aiohttp/\" rel=\"nofollow\">aiohttp</a>.\nSee\n<a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/core/azure-core/README.md#transport\" rel=\"nofollow\">azure-core documentation</a>\nfor more information.</p>\n<p>Async clients should be closed when they're no longer needed. Each async\nclient is an async context manager and defines an async <code>close</code> method. For\nexample:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.certificates</span> <span class=\"kn\">import</span> <span class=\"n\">CertificateClient</span>\n\n<span class=\"c1\"># call close when the client is no longer needed</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">CertificateClient</span><span class=\"p\">()</span>\n<span class=\"o\">...</span>\n<span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># alternatively, use the client as an async context manager</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">CertificateClient</span><span class=\"p\">()</span>\n<span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n  <span class=\"o\">...</span>\n</pre>\n<h3>Asynchronously create a Certificate</h3>\n<p><a href=\"https://aka.ms/azsdk-python-keyvault-certs-async-createcert\" rel=\"nofollow\">create_certificate</a> creates a certificate to be stored in the Azure Key Vault. If a certificate with the\nsame name already exists, then a new version of the certificate is created.\nBefore creating a certificate, a management policy for the certificate can be created or our default policy\nwill be used. Awaiting the call to <a href=\"https://aka.ms/azsdk-python-keyvault-certs-async-createcert\" rel=\"nofollow\">create_certificate</a> returns your created certificate if creation is successful,\nand a <a href=\"https://aka.ms/azsdk-python-keyvault-certs-models-certop-ref\" rel=\"nofollow\">CertificateOperation</a> if creation is not.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.identity.aio</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultAzureCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.certificates.aio</span> <span class=\"kn\">import</span> <span class=\"n\">CertificateClient</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.certificates</span> <span class=\"kn\">import</span> <span class=\"n\">CertificatePolicy</span>\n\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">DefaultAzureCredential</span><span class=\"p\">()</span>\n\n<span class=\"n\">certificate_client</span> <span class=\"o\">=</span> <span class=\"n\">CertificateClient</span><span class=\"p\">(</span><span class=\"n\">vault_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://my-key-vault.vault.azure.net/\"</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">credential</span><span class=\"p\">)</span>\n\n<span class=\"n\">create_certificate_result</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">certificate_client</span><span class=\"o\">.</span><span class=\"n\">create_certificate</span><span class=\"p\">(</span>\n    <span class=\"n\">certificate_name</span><span class=\"o\">=</span><span class=\"s2\">\"cert-name\"</span><span class=\"p\">,</span> <span class=\"n\">policy</span><span class=\"o\">=</span><span class=\"n\">CertificatePolicy</span><span class=\"o\">.</span><span class=\"n\">get_default</span><span class=\"p\">()</span>\n<span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">create_certificate_result</span><span class=\"p\">)</span>\n</pre>\n<h3>Asynchronously list properties of Certificates</h3>\n<p><a href=\"https://aka.ms/azsdk-python-keyvault-certs-async-listcerts-ref\" rel=\"nofollow\">list_properties_of_certificates</a> lists all the\nproperties of the certificates in the client's vault:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.identity.aio</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultAzureCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.certificates.aio</span> <span class=\"kn\">import</span> <span class=\"n\">CertificateClient</span>\n\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">DefaultAzureCredential</span><span class=\"p\">()</span>\n\n<span class=\"n\">certificate_client</span> <span class=\"o\">=</span> <span class=\"n\">CertificateClient</span><span class=\"p\">(</span><span class=\"n\">vault_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://my-key-vault.vault.azure.net/\"</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">credential</span><span class=\"p\">)</span>\n\n<span class=\"n\">certificates</span> <span class=\"o\">=</span> <span class=\"n\">certificate_client</span><span class=\"o\">.</span><span class=\"n\">list_properties_of_certificates</span><span class=\"p\">()</span>\n<span class=\"k\">async</span> <span class=\"k\">for</span> <span class=\"n\">certificate</span> <span class=\"ow\">in</span> <span class=\"n\">certificates</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">certificate</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</pre>\n<h2>Troubleshooting</h2>\n<h3>General</h3>\n<p>Key Vault clients raise exceptions defined in <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/core/azure-core#azure-core-library-exceptions\" rel=\"nofollow\">azure-core</a>.\nFor example, if you try to get a key that doesn't exist in the vault, <a href=\"https://aka.ms/azsdk-python-keyvault-certificates-certificateclient-ref\" rel=\"nofollow\">CertificateClient</a>\nraises <a href=\"https://aka.ms/azsdk-python-core-exceptions-resource-not-found-error\" rel=\"nofollow\">ResourceNotFoundError</a>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.identity</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultAzureCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.certificates</span> <span class=\"kn\">import</span> <span class=\"n\">CertificateClient</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.core.exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">ResourceNotFoundError</span>\n\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">DefaultAzureCredential</span><span class=\"p\">()</span>\n<span class=\"n\">certificate_client</span> <span class=\"o\">=</span> <span class=\"n\">CertificateClient</span><span class=\"p\">(</span><span class=\"n\">vault_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://my-key-vault.vault.azure.net/\"</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">credential</span><span class=\"p\">)</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">certificate_client</span><span class=\"o\">.</span><span class=\"n\">get_certificate</span><span class=\"p\">(</span><span class=\"s2\">\"which-does-not-exist\"</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">ResourceNotFoundError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">)</span>\n</pre>\n<h3>Logging</h3>\n<p>This library uses the standard\n<a href=\"https://docs.python.org/3.5/library/logging.html\" rel=\"nofollow\">logging</a> library for logging.\nBasic information about HTTP sessions (URLs, headers, etc.) is logged at INFO\nlevel.</p>\n<p>Detailed DEBUG level logging, including request/response bodies and unredacted\nheaders, can be enabled on a client with the <code>logging_enable</code> argument:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.identity</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultAzureCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.keyvault.certificates</span> <span class=\"kn\">import</span> <span class=\"n\">CertificateClient</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n\n<span class=\"c1\"># Create a logger for the 'azure' SDK</span>\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s1\">'azure'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Configure a console output</span>\n<span class=\"n\">handler</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">StreamHandler</span><span class=\"p\">(</span><span class=\"n\">stream</span><span class=\"o\">=</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">addHandler</span><span class=\"p\">(</span><span class=\"n\">handler</span><span class=\"p\">)</span>\n\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">DefaultAzureCredential</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># This client will log detailed information about its HTTP sessions, at DEBUG level</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">CertificateClient</span><span class=\"p\">(</span><span class=\"n\">vault_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://my-key-vault.vault.azure.net/\"</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">credential</span><span class=\"p\">,</span> <span class=\"n\">logging_enable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Network trace logging can also be enabled for any single operation:</p>\n<pre><span class=\"n\">certificate</span> <span class=\"o\">=</span> <span class=\"n\">certificate_client</span><span class=\"o\">.</span><span class=\"n\">get_certificate</span><span class=\"p\">(</span><span class=\"n\">certificate_name</span><span class=\"o\">=</span><span class=\"s2\">\"cert-name\"</span><span class=\"p\">,</span> <span class=\"n\">logging_enable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h2>Next steps</h2>\n<p>Several samples are available in the Azure SDK for Python GitHub repository. These samples provide example code for additional Key Vault scenarios:</p>\n<ul>\n<li><a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/hello_world.py\" rel=\"nofollow\">hello_world.py</a> and <a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/hello_world_async.py\" rel=\"nofollow\">hello_world_async.py</a> - create/get/update/delete certificates</li>\n<li><a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/backup_restore_operations.py\" rel=\"nofollow\">backup_restore_operations.py</a> and <a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/backup_restore_operations_async.py\" rel=\"nofollow\">backup_restore_operations_async.py</a> - backup and\nrecover certificates</li>\n<li><a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/list_operations.py\" rel=\"nofollow\">list_operations.py</a> and <a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/list_operations_async.py\" rel=\"nofollow\">list_operations_async.py</a> - list certificates</li>\n<li><a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/recover_purge_operations.py\" rel=\"nofollow\">recover_purge_operations.py</a> and <a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/recover_purge_operations_async.py\" rel=\"nofollow\">recover_purge_operations_async.py</a> - recover and purge certificates</li>\n<li><a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/issuers.py\" rel=\"nofollow\">issuers.py</a> and <a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/issuers_async.py\" rel=\"nofollow\">issuers_async.py</a> - manage certificate issuers</li>\n<li><a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/contacts.py\" rel=\"nofollow\">contacts.py</a> and <a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/keyvault/azure-keyvault-certificates/samples/contacts_async.py\" rel=\"nofollow\">contacts_async.py</a> - manage certificate contacts</li>\n</ul>\n<h3>Additional Documentation</h3>\n<p>For more extensive documentation on Azure Key Vault, see the <a href=\"https://aka.ms/azsdk-python-keyvault-certificates-docs\" rel=\"nofollow\">API reference documentation</a>.</p>\n<h2>Contributing</h2>\n<p>This project welcomes contributions and suggestions. Most contributions require\nyou to agree to a Contributor License Agreement (CLA) declaring that you have\nthe right to, and actually do, grant us the rights to use your contribution.\nFor details, visit <a href=\"https://cla.microsoft.com\" rel=\"nofollow\">https://cla.microsoft.com</a>.</p>\n<p>When you submit a pull request, a CLA-bot will automatically determine whether\nyou need to provide a CLA and decorate the PR appropriately (e.g., label,\ncomment). Simply follow the instructions provided by the bot. You will only\nneed to do this once across all repos using our CLA.</p>\n<p>This project has adopted the\n<a href=\"https://opensource.microsoft.com/codeofconduct/\" rel=\"nofollow\">Microsoft Open Source Code of Conduct</a>. For more information,\nsee the Code of Conduct FAQ or contact <a href=\"mailto:opencode@microsoft.com\">opencode@microsoft.com</a> with any\nadditional questions or comments.</p>\n<p><img alt=\"Impressions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e6f7d12c5bb00ec1b0276ea4f4c9c3a6d444a1de/68747470733a2f2f617a7572652d73646b2d696d7072657373696f6e732e617a75726577656273697465732e6e65742f6170692f696d7072657373696f6e732f617a7572652d73646b2d666f722d707974686f6e25324673646b2532466b65797661756c74253246617a7572652d6b65797661756c742d63657274696669636174657325324646524541444d452e706e67\"></p>\n<h1>Release History</h1>\n<h2>4.1.0 (2020-03-10)</h2>\n<ul>\n<li><code>CertificateClient</code> instances have a <code>close</code> method which closes opened\nsockets. Used as a context manager, a <code>CertificateClient</code> closes opened sockets\non exit. (<a href=\"https://github.com/Azure/azure-sdk-for-python/pull/9906\" rel=\"nofollow\">#9906</a>)</li>\n<li>Pollers no longer sleep after operation completion\n(<a href=\"https://github.com/Azure/azure-sdk-for-python/pull/9991\" rel=\"nofollow\">#9991</a>)</li>\n</ul>\n<h2>4.0.1 (2020-02-11)</h2>\n<ul>\n<li><code>azure.keyvault.certificates</code> defines <code>__version__</code></li>\n<li>Updated <code>msrest</code> requirement to &gt;=0.6.0</li>\n<li>Challenge authentication policy requires TLS\n(<a href=\"https://github.com/Azure/azure-sdk-for-python/pull/9457\" rel=\"nofollow\">#9457</a>)</li>\n<li>Methods no longer raise the internal error <code>KeyVaultErrorException</code>\n(<a href=\"https://github.com/Azure/azure-sdk-for-python/issues/9690\" rel=\"nofollow\">#9690</a>)</li>\n</ul>\n<h2>4.0.0 (2020-01-08)</h2>\n<ul>\n<li>First GA release</li>\n</ul>\n<h2>4.0.0b7 (2019-12-17)</h2>\n<ul>\n<li>Challenge authentication policy preserves request options\n(<a href=\"https://github.com/Azure/azure-sdk-for-python/pull/8999\" rel=\"nofollow\">#8999</a>)</li>\n<li>Added <code>vault_url</code> property to <code>CertificateOperation</code></li>\n<li>Removed <code>id</code>, <code>expires_on</code>, <code>not_before</code>, and <code>recover_level</code> properties from <code>CertificatePolicy</code></li>\n<li>Removed <code>vault_url</code> property from <code>CertificateIssuer</code></li>\n<li>Removed <code>vault_url</code> property from <code>IssuerProperties</code></li>\n</ul>\n<h2>4.0.0b6 (2019-12-04)</h2>\n<ul>\n<li>Updated <code>msrest</code> requirement to &gt;=0.6.0</li>\n<li>Renamed <code>get_policy</code> to <code>get_certificate_policy</code></li>\n<li>Renamed <code>update_policy</code> to <code>update_certificate_policy</code></li>\n<li>Renamed <code>create_contacts</code> to <code>set_contacts</code></li>\n<li>Renamed parameter <code>admin_details</code> of <code>create_issuer</code> and <code>update_issuer</code> to <code>admin_contacts</code></li>\n<li>Renamed all <code>name</code> parameters to include the name of the object whose name we are referring to.\nFor example, the <code>name</code> parameter of <code>get_certificate</code> is now <code>certificate_name</code></li>\n<li>Renamed <code>AdministratorDetails</code> to <code>AdministratorContact</code></li>\n<li>Renamed the <code>ekus</code> property of <code>CertificatePolicy</code> to <code>enhanced_key_usage</code></li>\n<li>Renamed the <code>curve</code> property of <code>CertificatePolicy</code> to <code>key_curve_name</code></li>\n<li>Renamed the <code>san_upns</code> property of <code>CertificatePolicy</code> to <code>san_user_principal_names</code></li>\n<li>Made the <code>subject_name</code> property of <code>CertificatePolicy</code> a kwarg and renamed it to <code>subject</code></li>\n<li>Renamed the <code>deleted_date</code> property of <code>DeletedCertificate</code> to <code>deleted_on</code></li>\n<li>Removed the <code>issuer_properties</code> property from <code>CertificateIssuer</code> and added the <code>provider</code> property\ndirectly onto <code>CertificateIssuer</code></li>\n<li>Renamed property <code>admin_details</code> of <code>CertificateIssuer</code> to <code>admin_contacts</code></li>\n<li>Renamed the <code>thumbprint</code> property of <code>CertificateProperties</code> to <code>x509_thumbprint</code></li>\n<li>Added <code>WellKnownIssuerNames</code> enum class that holds popular issuer names</li>\n<li>Renamed <code>SecretContentType</code> enum class to <code>CertificateContentType</code></li>\n</ul>\n<h2>4.0.0b5 (2019-11-01)</h2>\n<ul>\n<li>\n<p>Removed redundant method <code>get_pending_certificate_signing_request()</code>. A pending CSR can be retrieved via <code>get_certificate_operation()</code>.</p>\n</li>\n<li>\n<p>Renamed the sync method <code>create_certificate</code> to <code>begin_create_certificate</code></p>\n</li>\n<li>\n<p>Renamed <code>restore_certificate</code> to <code>restore_certificate_backup</code></p>\n</li>\n<li>\n<p>Renamed <code>get_certificate</code> to <code>get_certificate_version</code></p>\n</li>\n<li>\n<p>Renamed <code>get_certificate_with_policy</code> to <code>get_certificate</code></p>\n</li>\n<li>\n<p>Renamed <code>list_certificates</code> to <code>list_properties_of_certificates</code></p>\n</li>\n<li>\n<p>Renamed <code>list_properties_of_issuers</code> to <code>list_properties_of_issuers</code></p>\n</li>\n<li>\n<p>Renamed <code>list_certificate_versions</code> to <code>list_properties_of_certificate_versions</code></p>\n</li>\n<li>\n<p><code>create_certificate</code> now has policy as a required parameter</p>\n</li>\n<li>\n<p>All optional positional parameters besides <code>version</code> have been moved to kwargs</p>\n</li>\n<li>\n<p>Renamed sync method <code>delete_certificate</code> to <code>begin_delete_certificate</code></p>\n</li>\n<li>\n<p>Renamed sync method <code>recover_certificate</code> to <code>begin_recover_deleted_certificate</code></p>\n</li>\n<li>\n<p>Renamed async method <code>recover_certificate</code> to <code>recover_deleted_certificate</code></p>\n</li>\n<li>\n<p>The sync method <code>begin_delete_certificate</code> and async <code>delete_certificate</code> now return pollers that return a <code>DeletedCertificate</code></p>\n</li>\n<li>\n<p>The sync method <code>begin_recover_deleted_certificate</code> and async <code>recover_deleted_certificate</code> now return pollers that return a <code>KeyVaultCertificate</code></p>\n</li>\n<li>\n<p>Renamed enum <code>ActionType</code> to <code>CertificatePolicyAction</code></p>\n</li>\n<li>\n<p>Renamed <code>Certificate</code> to <code>KeyVaultCertificate</code></p>\n</li>\n<li>\n<p>Renamed <code>Contact</code> to <code>CertificateContact</code></p>\n</li>\n<li>\n<p>Renamed <code>Issuer</code> to <code>CertificateIssuer</code></p>\n</li>\n<li>\n<p>Renamed <code>CertificateError</code> to <code>CertificateOperationError</code></p>\n</li>\n<li>\n<p>Renamed <code>expires</code> property of <code>CertificateProperties</code> and <code>CertificatePolicy</code> to <code>expires_on</code></p>\n</li>\n<li>\n<p>Renamed <code>created</code> property of <code>CertificateProperties</code>, <code>CertificatePolicy</code>, and <code>CertificateIssuer</code> to <code>created_on</code></p>\n</li>\n<li>\n<p>Renamed <code>updated</code> property of <code>CertificateProperties</code>, <code>CertificatePolicy</code>, and <code>CertificateIssuer</code> to <code>updated_on</code></p>\n</li>\n<li>\n<p>The <code>vault_endpoint</code> parameter of <code>CertificateClient</code> has been renamed to <code>vault_url</code></p>\n</li>\n<li>\n<p>The property <code>vault_endpoint</code> has been renamed to <code>vault_url</code> in all models</p>\n</li>\n<li>\n<p><code>CertificatePolicy</code> now has a public class method <code>get_default</code> allowing users to get the default <code>CertificatePolicy</code></p>\n</li>\n<li>\n<p>Logging can now be enabled properly on the client level</p>\n</li>\n</ul>\n<h2>4.0.0b4 (2019-10-08)</h2>\n<ul>\n<li>Enums <code>JsonWebKeyCurveName</code> and <code>JsonWebKeyType</code> have been renamed to <code>KeyCurveName</code> and <code>KeyType</code>, respectively.</li>\n<li>Both async and sync versions of <code>create_certificate</code> now return pollers that return the created <code>Certificate</code> if creation is successful,\nand a <code>CertificateOperation</code> if not.</li>\n<li><code>Certificate</code> now has attribute <code>properties</code>, which holds certain properties of the\ncertificate, such as <code>version</code>. This changes the shape of the <code>Certificate</code> type,\nas certain properties of <code>Certificate</code> (such as <code>version</code>) have to be accessed\nthrough the <code>properties</code> property. See the updated <a href=\"https://azure.github.io/azure-sdk-for-python/ref/azure.keyvault.certificates.html\" rel=\"nofollow\">docs</a>\nfor details.</li>\n<li><code>update_certificate</code> has been renamed to <code>update_certificate_properties</code></li>\n<li>The <code>vault_url</code> parameter of <code>CertificateClient</code> has been renamed to <code>vault_endpoint</code></li>\n<li>The property <code>vault_url</code> has been renamed to <code>vault_endpoint</code> in all models</li>\n</ul>\n<h2>4.0.0b3 (2019-09-11)</h2>\n<p>Version 4.0.0b3 is the first preview of our efforts to create a user-friendly and Pythonic client library for Azure Key Vault's certificates.</p>\n<p>This library is not a direct replacement for <code>azure-keyvault</code>. Applications\nusing that library would require code changes to use <code>azure-keyvault-certificates</code>.\nThis package's\n<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-certificates/README.md\" rel=\"nofollow\">documentation</a>\nand\n<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-certificates/samples\" rel=\"nofollow\">samples</a>\ndemonstrate the new API.</p>\n<h3>Breaking changes from <code>azure-keyvault</code>:</h3>\n<ul>\n<li>Packages scoped by functionality\n<ul>\n<li><code>azure-keyvault-certificates</code> contains a client for certificate operations</li>\n</ul>\n</li>\n<li>Client instances are scoped to vaults (an instance interacts with one vault\nonly)</li>\n<li>Authentication using <code>azure-identity</code> credentials\n<ul>\n<li>see this package's\n<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/keyvault/azure-keyvault-keys/README.md\" rel=\"nofollow\">documentation</a>\n, and the\n<a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/identity/azure-identity/README.md\" rel=\"nofollow\">Azure Identity documentation</a>\nfor more information</li>\n</ul>\n</li>\n</ul>\n<h3>New Features:</h3>\n<ul>\n<li>Distributed tracing framework OpenCensus is now supported</li>\n<li>Asynchronous API supported on Python 3.5.3+\n<ul>\n<li>the <code>azure.keyvault.certificates.aio</code> namespace contains an async equivalent of\nthe synchronous client in <code>azure.keyvault.certificates</code></li>\n<li>Async clients use <a href=\"https://pypi.org/project/aiohttp/\" rel=\"nofollow\">aiohttp</a> for transport\nby default. See <a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/core/azure-core/README.md/#transport\" rel=\"nofollow\">azure-core documentation</a>\nfor more information about using other transports.</li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6786154, "releases": {"4.0.0": [{"comment_text": "", "digests": {"md5": "bf73d77c7d543c984493ecdb949ebdf3", "sha256": "c73dbc24c4d2949c3b6935df00741558584679537f017b55ef0a756f28ee9d87"}, "downloads": -1, "filename": "azure_keyvault_certificates-4.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bf73d77c7d543c984493ecdb949ebdf3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 172944, "upload_time": "2020-01-09T02:22:39", "upload_time_iso_8601": "2020-01-09T02:22:39.216651Z", "url": "https://files.pythonhosted.org/packages/c5/3b/d2d18ab6201f9ab00d9bb2295959d86951ae2fc48b6e0ad544e918501430/azure_keyvault_certificates-4.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c37cba131b314b5dff46996f0fd01c88", "sha256": "632c8e5867b71c855b609b1b3c6c02640f65c0b36a724d04ffeb00bb62a6eac2"}, "downloads": -1, "filename": "azure-keyvault-certificates-4.0.0.zip", "has_sig": false, "md5_digest": "c37cba131b314b5dff46996f0fd01c88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 246151, "upload_time": "2020-01-09T02:22:41", "upload_time_iso_8601": "2020-01-09T02:22:41.741269Z", "url": "https://files.pythonhosted.org/packages/ce/bc/f73337a9d866ee7cb19572c1ca8c0575939fd1041ee599b5588c5687d2f7/azure-keyvault-certificates-4.0.0.zip", "yanked": false}], "4.0.0b3": [{"comment_text": "", "digests": {"md5": "c2415f410ab9c508fe8864f145c401df", "sha256": "8160706a6d1fd1cc1146ccafbe5d7d72b5c69d9ed6fc33564620c5320da5d626"}, "downloads": -1, "filename": "azure_keyvault_certificates-4.0.0b3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c2415f410ab9c508fe8864f145c401df", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 167075, "upload_time": "2019-09-11T17:53:34", "upload_time_iso_8601": "2019-09-11T17:53:34.213776Z", "url": "https://files.pythonhosted.org/packages/d1/1e/793db0593d11fd594127ac2c43cab31173c1c588f476e4e8bf13cf59f151/azure_keyvault_certificates-4.0.0b3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e51d153d2e9854ecb1e689f0521d2db2", "sha256": "cceb84c7d2976a180cfdd82cce6da2fac0e7da892a391cc5aa90882979993824"}, "downloads": -1, "filename": "azure-keyvault-certificates-4.0.0b3.zip", "has_sig": false, "md5_digest": "e51d153d2e9854ecb1e689f0521d2db2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 188000, "upload_time": "2019-09-11T17:53:37", "upload_time_iso_8601": "2019-09-11T17:53:37.267815Z", "url": "https://files.pythonhosted.org/packages/d4/94/fdd24f930a030f3d9af801de5b64fed318465869435da7986d3a729117c6/azure-keyvault-certificates-4.0.0b3.zip", "yanked": false}], "4.0.0b4": [{"comment_text": "", "digests": {"md5": "a52100b9617aa570cc5d76db5cf091df", "sha256": "c2e62cd288eaec067d8b0671cba01be4c7f89b661f9886226b975a9ecba898b8"}, "downloads": -1, "filename": "azure_keyvault_certificates-4.0.0b4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a52100b9617aa570cc5d76db5cf091df", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 167950, "upload_time": "2019-10-08T20:17:00", "upload_time_iso_8601": "2019-10-08T20:17:00.446776Z", "url": "https://files.pythonhosted.org/packages/0e/0f/4696b44ec8936f2bea5654b85bccf51210374d35a207814676d8f6daecc4/azure_keyvault_certificates-4.0.0b4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ea3470ee8dcfdc32718efef7dbbc805", "sha256": "6efdcc43909d78d264bbcc60b3307e0647e8af1ad9bb798161cbcb00e4fe24d5"}, "downloads": -1, "filename": "azure-keyvault-certificates-4.0.0b4.zip", "has_sig": false, "md5_digest": "0ea3470ee8dcfdc32718efef7dbbc805", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 655833, "upload_time": "2019-10-08T20:17:02", "upload_time_iso_8601": "2019-10-08T20:17:02.438785Z", "url": "https://files.pythonhosted.org/packages/25/12/d7987d4a17d1cccb5a608d8d1f615962eff3998a91c77a1063845fe54792/azure-keyvault-certificates-4.0.0b4.zip", "yanked": false}], "4.0.0b5": [{"comment_text": "", "digests": {"md5": "aeb2da576972632d91a4f6fe4bd6d6cc", "sha256": "688dee555ff783491ce1ae36dbdd006570152f4db9115f42138e6ecfb03ae699"}, "downloads": -1, "filename": "azure_keyvault_certificates-4.0.0b5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aeb2da576972632d91a4f6fe4bd6d6cc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 170405, "upload_time": "2019-11-02T00:33:10", "upload_time_iso_8601": "2019-11-02T00:33:10.533332Z", "url": "https://files.pythonhosted.org/packages/1a/86/c48998a1014f1c0f997414a60e189005d5236f2432f70b5092b10d13deed/azure_keyvault_certificates-4.0.0b5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "52810e54ef2a2d6d2d993f6efb730819", "sha256": "1f662702aaf34a587b883ba3a1c5a2905a0789a3f35a8eb7c833823d073ca700"}, "downloads": -1, "filename": "azure-keyvault-certificates-4.0.0b5.zip", "has_sig": false, "md5_digest": "52810e54ef2a2d6d2d993f6efb730819", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 667141, "upload_time": "2019-11-02T00:33:12", "upload_time_iso_8601": "2019-11-02T00:33:12.537230Z", "url": "https://files.pythonhosted.org/packages/e2/33/b1b4038e5b97e173633110d2059a09c376587c1fc1eda8e7ac957d3a1783/azure-keyvault-certificates-4.0.0b5.zip", "yanked": false}], "4.0.0b6": [{"comment_text": "", "digests": {"md5": "336ed0ca4d817786b73a5ec4140089ce", "sha256": "a436a0a5d69784d081122b9b47eef3a3d08af1921299c04a658425201ea8dfd7"}, "downloads": -1, "filename": "azure_keyvault_certificates-4.0.0b6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "336ed0ca4d817786b73a5ec4140089ce", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 171738, "upload_time": "2019-12-05T01:12:29", "upload_time_iso_8601": "2019-12-05T01:12:29.357119Z", "url": "https://files.pythonhosted.org/packages/99/dd/ebd679b2e2bbbfddf768fe06693f9552e3ae8c8a5fdb4119050068bac606/azure_keyvault_certificates-4.0.0b6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ffd74e41cb701e3bd7781d4ce60b92be", "sha256": "f6248df97aecd9776479512f9473e5cc8383e211bd378b579b945fb5ac9d4d65"}, "downloads": -1, "filename": "azure-keyvault-certificates-4.0.0b6.zip", "has_sig": false, "md5_digest": "ffd74e41cb701e3bd7781d4ce60b92be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 250179, "upload_time": "2019-12-05T01:12:31", "upload_time_iso_8601": "2019-12-05T01:12:31.530663Z", "url": "https://files.pythonhosted.org/packages/13/41/971c9598ff65a73f62430e746ea1b45dff27ad1f9c2f1097e51809aaf5c3/azure-keyvault-certificates-4.0.0b6.zip", "yanked": false}], "4.0.0b7": [{"comment_text": "", "digests": {"md5": "2e7efb9c3745c3f7bbbd46106f9e9852", "sha256": "f3e0a94cc746d3b92576cc6d6a4308a1fd8f8967b4fa45e96962ae8743a0c876"}, "downloads": -1, "filename": "azure_keyvault_certificates-4.0.0b7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2e7efb9c3745c3f7bbbd46106f9e9852", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 172783, "upload_time": "2019-12-17T22:01:26", "upload_time_iso_8601": "2019-12-17T22:01:26.060280Z", "url": "https://files.pythonhosted.org/packages/e1/61/ec324055198abf628dce145f535a0ca2748c207a0df04f869eda8b668f0e/azure_keyvault_certificates-4.0.0b7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1275ac85ad2ba3903adde597280ce4a2", "sha256": "43e16e8ef99443615324ba58cefff17d144f3680aac5e39d149d3e7daa88e07d"}, "downloads": -1, "filename": "azure-keyvault-certificates-4.0.0b7.zip", "has_sig": false, "md5_digest": "1275ac85ad2ba3903adde597280ce4a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 246046, "upload_time": "2019-12-17T22:01:28", "upload_time_iso_8601": "2019-12-17T22:01:28.656592Z", "url": "https://files.pythonhosted.org/packages/ed/53/9034baf99078dbbd4ff16ad31d786a7e13241106a1a7ec8bb2805530ad29/azure-keyvault-certificates-4.0.0b7.zip", "yanked": false}], "4.0.1": [{"comment_text": "", "digests": {"md5": "54f34d9a29e2b62ed7e16ad827d032a6", "sha256": "97b59e0a4310fdfb0eab201269bbcb0bd49c6e4dc505fa8420274879ddb8b1d3"}, "downloads": -1, "filename": "azure_keyvault_certificates-4.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "54f34d9a29e2b62ed7e16ad827d032a6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 173692, "upload_time": "2020-02-11T20:08:40", "upload_time_iso_8601": "2020-02-11T20:08:40.868591Z", "url": "https://files.pythonhosted.org/packages/5f/d0/c74dbe3be1fc5b97396fb947c28ebc42aca0f88e97a7738a2a0a60578ffd/azure_keyvault_certificates-4.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8c68d76d4ea08c88208a7fc8aff9151", "sha256": "6709ab5280a2ea0a65e570af961960e61d5217b3c1e1af0ee2a7b167d7202ad9"}, "downloads": -1, "filename": "azure-keyvault-certificates-4.0.1.zip", "has_sig": false, "md5_digest": "b8c68d76d4ea08c88208a7fc8aff9151", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 247301, "upload_time": "2020-02-11T20:08:43", "upload_time_iso_8601": "2020-02-11T20:08:43.051147Z", "url": "https://files.pythonhosted.org/packages/9f/cd/9f5b41299b6b120bbf61a6ae2a0470614f5c362775a5ad35ec1441bbe213/azure-keyvault-certificates-4.0.1.zip", "yanked": false}], "4.1.0": [{"comment_text": "", "digests": {"md5": "2ad002d2ef731c20ca830f379154ac8b", "sha256": "763f4db3cfa4e1ae86d05812276fa50c6d67269eb77926b8367c09c669f5df79"}, "downloads": -1, "filename": "azure_keyvault_certificates-4.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2ad002d2ef731c20ca830f379154ac8b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 172469, "upload_time": "2020-03-10T14:41:30", "upload_time_iso_8601": "2020-03-10T14:41:30.381914Z", "url": "https://files.pythonhosted.org/packages/4c/98/d557642c6a2f610475edae7a772eeffcfb4bf02f690994e2fba502176fab/azure_keyvault_certificates-4.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9c588058977218359c5223f06d3218f", "sha256": "544f56480619e1db350f2e7b117b22af778e02174bd6bcb0af9ae00c50353419"}, "downloads": -1, "filename": "azure-keyvault-certificates-4.1.0.zip", "has_sig": false, "md5_digest": "e9c588058977218359c5223f06d3218f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 249446, "upload_time": "2020-03-10T14:41:32", "upload_time_iso_8601": "2020-03-10T14:41:32.581962Z", "url": "https://files.pythonhosted.org/packages/91/ed/7fe3194cfd4bc7b6beccdc19cc5a1486c36451500b2671045ec44023f031/azure-keyvault-certificates-4.1.0.zip", "yanked": false}], "4.2.0b1": [{"comment_text": "", "digests": {"md5": "70316e1d3c8e68e09ad3ac4f09b3f984", "sha256": "9fb2ef44cfe5930188e48a0a4094e4e181057319db074ec6a88c974c29a3c5f0"}, "downloads": -1, "filename": "azure_keyvault_certificates-4.2.0b1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "70316e1d3c8e68e09ad3ac4f09b3f984", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 239718, "upload_time": "2020-03-10T16:22:41", "upload_time_iso_8601": "2020-03-10T16:22:41.437775Z", "url": "https://files.pythonhosted.org/packages/c0/a5/fd345b6a243b09900e416a6c450617a4dd11d149fbc9305f97f94fb9a349/azure_keyvault_certificates-4.2.0b1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fa3da7fef8f39e4fb32c1c1c06aeef88", "sha256": "eacc72956e613786e373c9ddcd3dd15af745c18ee43b90069fff127f0cc4c2f8"}, "downloads": -1, "filename": "azure-keyvault-certificates-4.2.0b1.zip", "has_sig": false, "md5_digest": "fa3da7fef8f39e4fb32c1c1c06aeef88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 320070, "upload_time": "2020-03-10T16:22:43", "upload_time_iso_8601": "2020-03-10T16:22:43.984423Z", "url": "https://files.pythonhosted.org/packages/50/ab/77a0d2deb69e6596b19acf157969dcfc02ad1b0229402bf380a0cf1fd20b/azure-keyvault-certificates-4.2.0b1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2ad002d2ef731c20ca830f379154ac8b", "sha256": "763f4db3cfa4e1ae86d05812276fa50c6d67269eb77926b8367c09c669f5df79"}, "downloads": -1, "filename": "azure_keyvault_certificates-4.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2ad002d2ef731c20ca830f379154ac8b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 172469, "upload_time": "2020-03-10T14:41:30", "upload_time_iso_8601": "2020-03-10T14:41:30.381914Z", "url": "https://files.pythonhosted.org/packages/4c/98/d557642c6a2f610475edae7a772eeffcfb4bf02f690994e2fba502176fab/azure_keyvault_certificates-4.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9c588058977218359c5223f06d3218f", "sha256": "544f56480619e1db350f2e7b117b22af778e02174bd6bcb0af9ae00c50353419"}, "downloads": -1, "filename": "azure-keyvault-certificates-4.1.0.zip", "has_sig": false, "md5_digest": "e9c588058977218359c5223f06d3218f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 249446, "upload_time": "2020-03-10T14:41:32", "upload_time_iso_8601": "2020-03-10T14:41:32.581962Z", "url": "https://files.pythonhosted.org/packages/91/ed/7fe3194cfd4bc7b6beccdc19cc5a1486c36451500b2671045ec44023f031/azure-keyvault-certificates-4.1.0.zip", "yanked": false}], "timestamp": "Thu May  7 18:15:20 2020"}