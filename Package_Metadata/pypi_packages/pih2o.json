{"info": {"author": "Antoine Rousseaux", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Other Environment", "Framework :: Flask", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Home Automation", "Topic :: Scientific/Engineering :: Atmospheric Science"], "description": ".. image:: https://raw.githubusercontent.com/anxuae/piH2O/master/templates/pih2o.png\n   :align: center\n   :alt: PiH2O\n\n\nThe ``pih2o`` project attempts to provide an automatic plant watering application *out-of-the-box*\nin pure Python for Raspberry Pi. The watering is triggered for all plants depending on the number\nof plants which need water.\n\nRequirements\n------------\n\nThe requirements listed below are the one used for the development of ``pih2o``, but other\nconfiguration may work fine.\n\nThe **pump** can be replaced by an electro valve if the tank water is upper than the plants\n(watering by gravity). The number of **soil moisture sensors** can be easily adapted from 1 to 4.\nThe **transistor** is optional, the sensors can be directly connected to the 5V pin in order\nto power them continuously (but it accelerate their corrosion).\n\nHardware\n^^^^^^^^\n\n* 1 Raspberry Pi 2 Model B (or higher)\n* 1 pump and its power supply 12V DC (or electro valve)\n* 1 to 4 soil moisture sensors (Arduino TE215)\n* 1 Analog-to-Digital Converter (ADS1015 or ADS1115 4 Channel I2C)\n* 2 transistors NPN (type BC237B)\n* 1 transistor PNP high power switch (type BDX34)\n* 1 zener diode (type 1N4007)\n* 2 resistors of 1.5k Ohm\n* 1 resistor of 10k Ohm\n\nSoftware\n^^^^^^^^\n\n* Python ``3.5.3``\n* RPi.GPIO ``0.6.3``\n* adafruit-ads1x15 ``1.0.2``\n* croniter ``0.3.23``\n* blinker ``1.4``\n* flask ``1.0.2``\n* flask-restful ``0.3.6``\n* flask-sqlalchemy ``2.3.2``\n\nInstall\n-------\n\nA brief description on how to set-up a Raspberry Pi to use this software.\n\n1. Download latest Raspbian image and set-up an SD-card. You can follow\n   `these instructions <https://www.raspberrypi.org/documentation/installation/installing-images/README.md>`_ .\n\n2. Insert the SD-card into the Raspberry Pi and fire it up. Use the raspi-config tool that is shown\n   automatically on the first boot to configure your system (e.g., expand partition, change hostname,\n   password, enable SSH, configure to boot into GUI, etc.).\n\n   .. hint:: Don't forget to enable the I2C in raspi-config.\n\n3. Reboot and open a terminal. Install the latest firmware version:\n\n   ::\n\n        $ sudo rpi-update\n\n4. Upgrade all installed software:\n\n   ::\n\n        $ sudo apt-get update\n        $ sudo apt-get upgrade\n\n5. Install ``pih2o`` from the `pypi repository <https://pypi.org/project/pih2o/>`_:\n\n   ::\n\n        $ sudo pip3 install pih2o\n\nRun\n---\n\nStart the automatic plant watering application using the command::\n\n    $ pih2o\n\nThe application acts as a daemon running on the Raspberry Pi. It can be controlled thanks\nto an `RESTful API <https://github.com/anxuae/pih2o/blob/master/docs/api.rst>`_.\n\nThe ``pih2o`` is scheduled to wake up every given interval, power the soil moisture\nsensors and take humidity measurement (or threshold if no analog input available).\nFinally the sensors are powered off to extend their lifespan.\n\n.. warning:: Running pih2o in that way use the development server of\n    `flask <http://flask.pocoo.org>`_ which is `not suitable in a production\n    environment <http://flask.pocoo.org/docs/deploying>`_\n\nDefine the record interval\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe record interval (i.e. time between each humidity measurement) is defined\nin the `Configuration`_ using the `crontab syntax <https://fr.wikipedia.org/wiki/Cron>`_\nwhich is summarized here::\n\n                      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 minute (0 - 59)\n                      \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 hour (0 - 23)\n                      \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 day of month (1 - 31)\n                      \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 month (1 - 12)\n                      \u2502 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 day of week (0 - 6) (Sunday to Saturday)\n                      \u2502 \u2502 \u2502 \u2502 \u2502\n                      \u2502 \u2502 \u2502 \u2502 \u2502\n    record_interval = * * * * *\n\nPump triggering strategy\n^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe watering time is defined in the `Configuration`_. The rational to dissociate the pump stop\nfrom the humidity level measured is the soil slow absorption and we want to avoid floor flooding.\n\nThree strategies are defined to detect if watering is required by your plants depending on your\nconfiguration and the number of sensors connected.\n\n* ``[GENERAL][watering_strategy] = majority`` means the pump is triggered if half of sensors\n  are triggered.\n* ``[GENERAL][watering_strategy] = first`` means the pump is triggered if at least one sensor\n  is triggered.\n* ``[GENERAL][watering_strategy] = last`` means the pump is triggered if all sensors are\n  triggered.\n\n.. note:: if analog channels are available: the sensor is triggered when the humidity read from the AO\n          goes below the defined threshold (in %) else if digital channels are available: the sensor\n          is triggered if the corresponding DO is set to 1.\n\nInstall developing version\n--------------------------\n\nIf you want to use an unofficial version of the ``pih2o`` application, you need to work from a\nclone of this ``git`` repository. Replace the step 5. of the `Install`_ procedure above by the\nfollowing actions:\n\n- clone from github ::\n\n   $ git clone https://github.com/anxuae/piH2O.git\n\n- go in the cloned directory ::\n\n   $ cd pih2o\n\n- install ``pih2o`` in editable mode ::\n\n   $ sudo pip3 install -e .\n\n- start the application exactly in the same way as installed from pypi. All modifications performed\n  in the cloned repository are taken into account when the application starts.\n\nConfiguration\n-------------\n\nAt the first run, a configuration file is generated in ``~/.config/pih2o/pih2o.cfg``\nwhich permits to configure the behavior of the application. The configuration can be\neasily edited using the command::\n\n \u00a0  $ pih2o --config\n\nThe default configuration can be restored with the command (strongly recommended when\nupgrading ``pih2o``)::\n\n \u00a0 \u00a0$ pih2o --reset\n\nSee the `default configuration file <https://github.com/anxuae/pih2o/blob/master/docs/config.rst>`_\nfor further details.\n\nCircuit diagram\n---------------\n\nSoil moisture sensor specification used for this project (the number is up to you but the following\ndiagram is for up to 4 max):\n\n==================== ==================================\nParameter            Value\n==================== ==================================\nInput Voltage        3.3 \u2013 5V\nOutput Voltage       0 \u2013 4.2V\nInput Current        35mA\nOutput Signal        Both Analog (A0) and Digital (D0)\n==================== ==================================\n\nDigital sensors\n^^^^^^^^^^^^^^^\n\nHere is the diagram for digital sensors (rise to high on dry soil). Depending on the sensor type,\nan signal amplifier may be necessary (not represented on this diagram).\n\n.. image:: https://raw.githubusercontent.com/anxuae/pih2o/master/templates/sketch_digital.png\n   :align: center\n   :alt: Electronic sketch for digital sensors\n\nAnalog sensors\n^^^^^^^^^^^^^^\n\nHere is the diagram for analog sensors connected to an ADC1115 to measure humidity level.\n\n.. image:: https://raw.githubusercontent.com/anxuae/pih2o/master/templates/sketch_analog.png\n  :align: center\n  :alt: Electronic sketch for analog sensors\n\nPump\n^^^^\n\nHere is the diagram for the pump (or electro valve). For better understanding the sensors\nare not represented here.\n\n.. image:: https://raw.githubusercontent.com/anxuae/pih2o/master/templates/sketch_pump.png\n  :align: center\n  :alt: Electronic sketch for pump\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/anxuae/piH2O.git", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/anxuae/piH2O", "keywords": "Raspberry Pi,Plant,Watering", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "pih2o", "package_url": "https://pypi.org/project/pih2o/", "platform": "unix", "project_url": "https://pypi.org/project/pih2o/", "project_urls": {"Download": "https://github.com/anxuae/piH2O.git", "Homepage": "https://github.com/anxuae/piH2O"}, "release_url": "https://pypi.org/project/pih2o/1.0.3/", "requires_dist": ["RPi.GPIO", "adafruit-ads1x15", "blinker", "croniter", "flask", "flask-restful", "flask-sqlalchemy"], "requires_python": "", "summary": "An automatic plant watering application in pure Python for the Raspberry Pi.", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"PiH2O\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ba7bfe68909c743db0d371ba6ca487ec3fd0db9b/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f616e787561652f706948324f2f6d61737465722f74656d706c617465732f706968326f2e706e67\">\n<p>The <tt>pih2o</tt> project attempts to provide an automatic plant watering application <em>out-of-the-box</em>\nin pure Python for Raspberry Pi. The watering is triggered for all plants depending on the number\nof plants which need water.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>The requirements listed below are the one used for the development of <tt>pih2o</tt>, but other\nconfiguration may work fine.</p>\n<p>The <strong>pump</strong> can be replaced by an electro valve if the tank water is upper than the plants\n(watering by gravity). The number of <strong>soil moisture sensors</strong> can be easily adapted from 1 to 4.\nThe <strong>transistor</strong> is optional, the sensors can be directly connected to the 5V pin in order\nto power them continuously (but it accelerate their corrosion).</p>\n<div id=\"hardware\">\n<h3>Hardware</h3>\n<ul>\n<li>1 Raspberry Pi 2 Model B (or higher)</li>\n<li>1 pump and its power supply 12V DC (or electro valve)</li>\n<li>1 to 4 soil moisture sensors (Arduino TE215)</li>\n<li>1 Analog-to-Digital Converter (ADS1015 or ADS1115 4 Channel I2C)</li>\n<li>2 transistors NPN (type BC237B)</li>\n<li>1 transistor PNP high power switch (type BDX34)</li>\n<li>1 zener diode (type 1N4007)</li>\n<li>2 resistors of 1.5k Ohm</li>\n<li>1 resistor of 10k Ohm</li>\n</ul>\n</div>\n<div id=\"software\">\n<h3>Software</h3>\n<ul>\n<li>Python <tt>3.5.3</tt></li>\n<li>RPi.GPIO <tt>0.6.3</tt></li>\n<li>adafruit-ads1x15 <tt>1.0.2</tt></li>\n<li>croniter <tt>0.3.23</tt></li>\n<li>blinker <tt>1.4</tt></li>\n<li>flask <tt>1.0.2</tt></li>\n<li>flask-restful <tt>0.3.6</tt></li>\n<li>flask-sqlalchemy <tt>2.3.2</tt></li>\n</ul>\n</div>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>A brief description on how to set-up a Raspberry Pi to use this software.</p>\n<ol>\n<li><p>Download latest Raspbian image and set-up an SD-card. You can follow\n<a href=\"https://www.raspberrypi.org/documentation/installation/installing-images/README.md\" rel=\"nofollow\">these instructions</a> .</p>\n</li>\n<li><p>Insert the SD-card into the Raspberry Pi and fire it up. Use the raspi-config tool that is shown\nautomatically on the first boot to configure your system (e.g., expand partition, change hostname,\npassword, enable SSH, configure to boot into GUI, etc.).</p>\n<div>\n<p>Hint</p>\n<p>Don\u2019t forget to enable the I2C in raspi-config.</p>\n</div>\n</li>\n<li><p>Reboot and open a terminal. Install the latest firmware version:</p>\n<pre>$ sudo rpi-update\n</pre>\n</li>\n<li><p>Upgrade all installed software:</p>\n<pre>$ sudo apt-get update\n$ sudo apt-get upgrade\n</pre>\n</li>\n<li><p>Install <tt>pih2o</tt> from the <a href=\"https://pypi.org/project/pih2o/\" rel=\"nofollow\">pypi repository</a>:</p>\n<pre>$ sudo pip3 install pih2o\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"run\">\n<h2>Run</h2>\n<p>Start the automatic plant watering application using the command:</p>\n<pre>$ pih2o\n</pre>\n<p>The application acts as a daemon running on the Raspberry Pi. It can be controlled thanks\nto an <a href=\"https://github.com/anxuae/pih2o/blob/master/docs/api.rst\" rel=\"nofollow\">RESTful API</a>.</p>\n<p>The <tt>pih2o</tt> is scheduled to wake up every given interval, power the soil moisture\nsensors and take humidity measurement (or threshold if no analog input available).\nFinally the sensors are powered off to extend their lifespan.</p>\n<div>\n<p>Warning</p>\n<p>Running pih2o in that way use the development server of\n<a href=\"http://flask.pocoo.org\" rel=\"nofollow\">flask</a> which is <a href=\"http://flask.pocoo.org/docs/deploying\" rel=\"nofollow\">not suitable in a production\nenvironment</a></p>\n</div>\n<div id=\"define-the-record-interval\">\n<h3>Define the record interval</h3>\n<p>The record interval (i.e. time between each humidity measurement) is defined\nin the <a href=\"#configuration\" rel=\"nofollow\">Configuration</a> using the <a href=\"https://fr.wikipedia.org/wiki/Cron\" rel=\"nofollow\">crontab syntax</a>\nwhich is summarized here:</p>\n<pre>                  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 minute (0 - 59)\n                  \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 hour (0 - 23)\n                  \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 day of month (1 - 31)\n                  \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 month (1 - 12)\n                  \u2502 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 day of week (0 - 6) (Sunday to Saturday)\n                  \u2502 \u2502 \u2502 \u2502 \u2502\n                  \u2502 \u2502 \u2502 \u2502 \u2502\nrecord_interval = * * * * *\n</pre>\n</div>\n<div id=\"pump-triggering-strategy\">\n<h3>Pump triggering strategy</h3>\n<p>The watering time is defined in the <a href=\"#configuration\" rel=\"nofollow\">Configuration</a>. The rational to dissociate the pump stop\nfrom the humidity level measured is the soil slow absorption and we want to avoid floor flooding.</p>\n<p>Three strategies are defined to detect if watering is required by your plants depending on your\nconfiguration and the number of sensors connected.</p>\n<ul>\n<li><tt><span class=\"pre\">[GENERAL][watering_strategy]</span> = majority</tt> means the pump is triggered if half of sensors\nare triggered.</li>\n<li><tt><span class=\"pre\">[GENERAL][watering_strategy]</span> = first</tt> means the pump is triggered if at least one sensor\nis triggered.</li>\n<li><tt><span class=\"pre\">[GENERAL][watering_strategy]</span> = last</tt> means the pump is triggered if all sensors are\ntriggered.</li>\n</ul>\n<div>\n<p>Note</p>\n<p>if analog channels are available: the sensor is triggered when the humidity read from the AO\ngoes below the defined threshold (in %) else if digital channels are available: the sensor\nis triggered if the corresponding DO is set to 1.</p>\n</div>\n</div>\n</div>\n<div id=\"install-developing-version\">\n<h2>Install developing version</h2>\n<p>If you want to use an unofficial version of the <tt>pih2o</tt> application, you need to work from a\nclone of this <tt>git</tt> repository. Replace the step 5. of the <a href=\"#install\" rel=\"nofollow\">Install</a> procedure above by the\nfollowing actions:</p>\n<ul>\n<li><p>clone from github</p>\n<pre>$ git clone https://github.com/anxuae/piH2O.git\n</pre>\n</li>\n<li><p>go in the cloned directory</p>\n<pre>$ cd pih2o\n</pre>\n</li>\n<li><p>install <tt>pih2o</tt> in editable mode</p>\n<pre>$ sudo pip3 install -e .\n</pre>\n</li>\n<li><p>start the application exactly in the same way as installed from pypi. All modifications performed\nin the cloned repository are taken into account when the application starts.</p>\n</li>\n</ul>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>At the first run, a configuration file is generated in <tt><span class=\"pre\">~/.config/pih2o/pih2o.cfg</span></tt>\nwhich permits to configure the behavior of the application. The configuration can be\neasily edited using the command:</p>\n<pre>$ pih2o --config\n</pre>\n<p>The default configuration can be restored with the command (strongly recommended when\nupgrading <tt>pih2o</tt>):</p>\n<pre>$ pih2o --reset\n</pre>\n<p>See the <a href=\"https://github.com/anxuae/pih2o/blob/master/docs/config.rst\" rel=\"nofollow\">default configuration file</a>\nfor further details.</p>\n</div>\n<div id=\"circuit-diagram\">\n<h2>Circuit diagram</h2>\n<p>Soil moisture sensor specification used for this project (the number is up to you but the following\ndiagram is for up to 4 max):</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Parameter</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Input Voltage</td>\n<td>3.3 \u2013 5V</td>\n</tr>\n<tr><td>Output Voltage</td>\n<td>0 \u2013 4.2V</td>\n</tr>\n<tr><td>Input Current</td>\n<td>35mA</td>\n</tr>\n<tr><td>Output Signal</td>\n<td>Both Analog (A0) and Digital (D0)</td>\n</tr>\n</tbody>\n</table>\n<div id=\"digital-sensors\">\n<h3>Digital sensors</h3>\n<p>Here is the diagram for digital sensors (rise to high on dry soil). Depending on the sensor type,\nan signal amplifier may be necessary (not represented on this diagram).</p>\n<img alt=\"Electronic sketch for digital sensors\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/24f84b10358881ddadcc82dc8098f873eebeca0a/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f616e787561652f706968326f2f6d61737465722f74656d706c617465732f736b657463685f6469676974616c2e706e67\">\n</div>\n<div id=\"analog-sensors\">\n<h3>Analog sensors</h3>\n<p>Here is the diagram for analog sensors connected to an ADC1115 to measure humidity level.</p>\n<img alt=\"Electronic sketch for analog sensors\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4d24f6008357f90fcbd91e3707dad5aed1e4f6c0/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f616e787561652f706968326f2f6d61737465722f74656d706c617465732f736b657463685f616e616c6f672e706e67\">\n</div>\n<div id=\"pump\">\n<h3>Pump</h3>\n<p>Here is the diagram for the pump (or electro valve). For better understanding the sensors\nare not represented here.</p>\n<img alt=\"Electronic sketch for pump\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/38a090f3a8970f4f2e367be411c787b4059420ca/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f616e787561652f706968326f2f6d61737465722f74656d706c617465732f736b657463685f70756d702e706e67\">\n</div>\n</div>\n\n          </div>"}, "last_serial": 5379004, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b69316e96d01e37bd90fcb74fdc80bf9", "sha256": "30ffe9a69d9c518a19237a95fc6f6c57b4b17259bbe47c103b4ebf36861847e1"}, "downloads": -1, "filename": "pih2o-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b69316e96d01e37bd90fcb74fdc80bf9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16691, "upload_time": "2018-05-26T17:50:25", "upload_time_iso_8601": "2018-05-26T17:50:25.239484Z", "url": "https://files.pythonhosted.org/packages/9d/d9/72b41c9b71e538472b061ffa599d7e2cf4a1f1398457b926398f4c892188/pih2o-0.0.1-py2.py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "2a3afa3f4e21885997f4b19bc94d9c88", "sha256": "19514ad42ec33ae2c6762914b67f0afc88118184a9597848d508866b85bc874f"}, "downloads": -1, "filename": "pih2o-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2a3afa3f4e21885997f4b19bc94d9c88", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17784, "upload_time": "2018-05-27T19:05:30", "upload_time_iso_8601": "2018-05-27T19:05:30.146593Z", "url": "https://files.pythonhosted.org/packages/6b/61/95fcf7b7262c93ca41158f5fcc9bf7cfd60384e2901bfff091499fb71f95/pih2o-0.0.2-py2.py3-none-any.whl", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "18e18ee2870014b2c2feb62f84097dcd", "sha256": "ea4865ad4ceaac7124698f1c1f9e6297a0c50375daf5488580610053e8aff1d6"}, "downloads": -1, "filename": "pih2o-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "18e18ee2870014b2c2feb62f84097dcd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18360, "upload_time": "2018-06-24T21:09:38", "upload_time_iso_8601": "2018-06-24T21:09:38.669266Z", "url": "https://files.pythonhosted.org/packages/ee/3f/ce7ee73f9b86d5ce41aa79576278dce8aaf3fbc3215b13fad5df5936c12c/pih2o-1.0.0-py2.py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "4f8e17a85e7a3f58ea8392fe73509909", "sha256": "0255822ccd20ed3822e6988ae0060f4fbb6eabbb9d901f9434cb11603827dd0c"}, "downloads": -1, "filename": "pih2o-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4f8e17a85e7a3f58ea8392fe73509909", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18416, "upload_time": "2018-09-25T21:54:37", "upload_time_iso_8601": "2018-09-25T21:54:37.142884Z", "url": "https://files.pythonhosted.org/packages/c0/bc/29ff9e03aab49f0daded6a991f53a7fc963e9fab61b730ed26607fc2615d/pih2o-1.0.1-py2.py3-none-any.whl", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "6b0c236f0d3247cb15668beadd3695e7", "sha256": "14b94abb5aec74a80d1d5266fe17be46b7e9342eb87d9fd916650109b948b7f6"}, "downloads": -1, "filename": "pih2o-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6b0c236f0d3247cb15668beadd3695e7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18474, "upload_time": "2018-09-26T19:33:53", "upload_time_iso_8601": "2018-09-26T19:33:53.350417Z", "url": "https://files.pythonhosted.org/packages/2b/a4/1606e69e63246ef2456ce117d140135afa3e974127b3ae8d4d9100c35308/pih2o-1.0.2-py2.py3-none-any.whl", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "6972ef3c2cc912d20109fb05cd8d2105", "sha256": "c738b757217d0037618e3ec4bc1792ec2e1ff27fb8329940d90e0831725c7942"}, "downloads": -1, "filename": "pih2o-1.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6972ef3c2cc912d20109fb05cd8d2105", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18575, "upload_time": "2019-06-09T22:40:18", "upload_time_iso_8601": "2019-06-09T22:40:18.019780Z", "url": "https://files.pythonhosted.org/packages/ea/3c/48dc9ae48e818dcbdc699dd8fc1686d180d374c7978427a11e99488a6161/pih2o-1.0.3-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6972ef3c2cc912d20109fb05cd8d2105", "sha256": "c738b757217d0037618e3ec4bc1792ec2e1ff27fb8329940d90e0831725c7942"}, "downloads": -1, "filename": "pih2o-1.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6972ef3c2cc912d20109fb05cd8d2105", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18575, "upload_time": "2019-06-09T22:40:18", "upload_time_iso_8601": "2019-06-09T22:40:18.019780Z", "url": "https://files.pythonhosted.org/packages/ea/3c/48dc9ae48e818dcbdc699dd8fc1686d180d374c7978427a11e99488a6161/pih2o-1.0.3-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:54:50 2020"}