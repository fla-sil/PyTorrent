{"info": {"author": "Ghislain Picard", "author_email": "ghislain.picard@univ-grenoble-alpes.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "=========\npynodered\n=========\n\n\n.. image:: https://img.shields.io/pypi/v/pynodered.svg\n        :target: https://pypi.python.org/pypi/pynodered\n\n.. image:: https://img.shields.io/travis/ghislainp/pynodered.svg\n        :target: https://travis-ci.org/ghislainp/pynodered\n\n.. image:: https://readthedocs.org/projects/pynodered/badge/?version=latest\n        :target: https://pynodered.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\nAbout\n--------\n\nMake your python functions available in Node-RED using a simple decorator.\n\npynodered is a server communicating with Node-RED to make available your python functions as blocks in Node-RED. pynodered reads modules and python files containing functions decorated with 'node_red', register them as blocks in Node-RED. pynodred then handles communications between Node-RED (in javascript) to run your function whenever the block receives a message.\n\nQuick Start\n------------\n\nRequires python>=3.5\n\n.. code-block:: console\n\n    $ pip install pynodered\n    # Install node dependencies\n    $ npm install follow-redirects url querystring\n\nExamples\n------------\n\nA simple example to lowercase the payload of the messages:\n\n.. code-block:: python\n\n    from pynodered import node_red\n\n    @node_red(category=\"pyfuncs\")\n    def lower_case(node, msg):\n\n        msg['payload'] = str(msg['payload']).lower()\n        return msg\n\nPut this snippet is in a file \"example.py\", run the pynodered server with:\n\n.. code-block:: console\n\n    $ pynodered example.py\n\nand in another console:\n\n.. code-block:: console\n\n    $ node-red\n\nIn Node-RED, you now have a new category \"pyfuncs\" with a function lower_case. It can be used in a flow as any other blocks:\n\n.. image:: images/lower-case-flow.png\n\n\nIt is possible to add block properties (constant arguments provided by the user in Node-RED) by defining a property in the decorator:\n\n.. code-block:: python\n\n    from pynodered import node_red, NodeProperty\n\n    @node_red(category=\"pyfuncs\",\n              properties=dict(number=NodeProperty(\"Number\", value=\"1\")))\n    \n    def repeat(node, msg):\n\n        msg['payload'] = msg['payload'] * int(node.number.value)\n        return msg\n\nDon't forget to restart the pynodered server everytime your python files change. Node-RED also needs to be restarted but only when the function name or properties change or a new function is added. Refreshing the browser is then necessary.\n\nBy default pynodered exports the functions in the Node-RED package 'pynodered' and the category 'default'. The category name can be changed with the decorator optional argument. For the package name and information, the python module containing the functions can declare a 'package' dictonary like this:\n\n.. code-block:: python\n\n    package = {\n        \"name\" : \"FFT filters\",\n        \"version\" : \"0.01\",\n        \"description\"  : \"Nodes written in Python for signal processing\",\n    }\n\nWarning\n----------\n\npynodered is not ready for production use yet. On a multi-user computer, be aware that pynodered server will respond to anyone request and will execute code under the account that launched the server. NODE-Red has a similar issue (https://nodered.org/docs/security)\n\n\nLicense\n----------\n\nCopyright (C) 2019 Ghislain Picard\n\nFree software: GNU General Public License v3\n\n\nThis package is a rewrite and extension of the code intially written by Toma\u017e \u0160olc for sigfox-toolbox\nhttps://github.com/sensorlab/sigfox-toolbox/tree/master/node-red-python.\nCopyright (2017) SensorLab, Jo\u017eef Stefan Institute http://sensorlab.ijs.si and licensed under GPL version 3", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ghislainp/pynodered", "keywords": "pynodered", "license": "GNU General Public License v3", "maintainer": "", "maintainer_email": "", "name": "pynodered", "package_url": "https://pypi.org/project/pynodered/", "platform": "", "project_url": "https://pypi.org/project/pynodered/", "project_urls": {"Homepage": "https://github.com/ghislainp/pynodered"}, "release_url": "https://pypi.org/project/pynodered/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "make python function easily accessible from Node-RED", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/pynodered\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/pynodered.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/da3c490922a102d345835408ec98269d18ea3ad8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796e6f64657265642e737667\"></a>\n<a href=\"https://travis-ci.org/ghislainp/pynodered\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/ghislainp/pynodered.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/29cc856082124391ce8c229bdfdb256198247bbe/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f676869736c61696e702f70796e6f64657265642e737667\"></a>\n<a href=\"https://pynodered.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b31719f46b85ad6272ef7b6566e1dcc45c3bce75/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f70796e6f64657265642f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<div id=\"about\">\n<h2>About</h2>\n<p>Make your python functions available in Node-RED using a simple decorator.</p>\n<p>pynodered is a server communicating with Node-RED to make available your python functions as blocks in Node-RED. pynodered reads modules and python files containing functions decorated with \u2018node_red\u2019, register them as blocks in Node-RED. pynodred then handles communications between Node-RED (in javascript) to run your function whenever the block receives a message.</p>\n</div>\n<div id=\"quick-start\">\n<h2>Quick Start</h2>\n<p>Requires python&gt;=3.5</p>\n<pre><span class=\"gp\">$</span> pip install pynodered\n<span class=\"gp\">#</span> Install node dependencies\n<span class=\"gp\">$</span> npm install follow-redirects url querystring\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>A simple example to lowercase the payload of the messages:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pynodered</span> <span class=\"kn\">import</span> <span class=\"n\">node_red</span>\n\n<span class=\"nd\">@node_red</span><span class=\"p\">(</span><span class=\"n\">category</span><span class=\"o\">=</span><span class=\"s2\">\"pyfuncs\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">lower_case</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"p\">):</span>\n\n    <span class=\"n\">msg</span><span class=\"p\">[</span><span class=\"s1\">'payload'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">[</span><span class=\"s1\">'payload'</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">msg</span>\n</pre>\n<p>Put this snippet is in a file \u201cexample.py\u201d, run the pynodered server with:</p>\n<pre><span class=\"gp\">$</span> pynodered example.py\n</pre>\n<p>and in another console:</p>\n<pre><span class=\"gp\">$</span> node-red\n</pre>\n<p>In Node-RED, you now have a new category \u201cpyfuncs\u201d with a function lower_case. It can be used in a flow as any other blocks:</p>\n<img alt=\"images/lower-case-flow.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c7c09f721580928139b050c2563ba9c2e944ae09/696d616765732f6c6f7765722d636173652d666c6f772e706e67\">\n<p>It is possible to add block properties (constant arguments provided by the user in Node-RED) by defining a property in the decorator:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pynodered</span> <span class=\"kn\">import</span> <span class=\"n\">node_red</span><span class=\"p\">,</span> <span class=\"n\">NodeProperty</span>\n\n<span class=\"nd\">@node_red</span><span class=\"p\">(</span><span class=\"n\">category</span><span class=\"o\">=</span><span class=\"s2\">\"pyfuncs\"</span><span class=\"p\">,</span>\n          <span class=\"n\">properties</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"o\">=</span><span class=\"n\">NodeProperty</span><span class=\"p\">(</span><span class=\"s2\">\"Number\"</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s2\">\"1\"</span><span class=\"p\">)))</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">repeat</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"p\">):</span>\n\n    <span class=\"n\">msg</span><span class=\"p\">[</span><span class=\"s1\">'payload'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">msg</span><span class=\"p\">[</span><span class=\"s1\">'payload'</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">msg</span>\n</pre>\n<p>Don\u2019t forget to restart the pynodered server everytime your python files change. Node-RED also needs to be restarted but only when the function name or properties change or a new function is added. Refreshing the browser is then necessary.</p>\n<p>By default pynodered exports the functions in the Node-RED package \u2018pynodered\u2019 and the category \u2018default\u2019. The category name can be changed with the decorator optional argument. For the package name and information, the python module containing the functions can declare a \u2018package\u2019 dictonary like this:</p>\n<pre><span class=\"n\">package</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"name\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"FFT filters\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"version\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"0.01\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"description\"</span>  <span class=\"p\">:</span> <span class=\"s2\">\"Nodes written in Python for signal processing\"</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"warning\">\n<h2>Warning</h2>\n<p>pynodered is not ready for production use yet. On a multi-user computer, be aware that pynodered server will respond to anyone request and will execute code under the account that launched the server. NODE-Red has a similar issue (<a href=\"https://nodered.org/docs/security\" rel=\"nofollow\">https://nodered.org/docs/security</a>)</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright (C) 2019 Ghislain Picard</p>\n<p>Free software: GNU General Public License v3</p>\n<p>This package is a rewrite and extension of the code intially written by Toma\u017e \u0160olc for sigfox-toolbox\n<a href=\"https://github.com/sensorlab/sigfox-toolbox/tree/master/node-red-python\" rel=\"nofollow\">https://github.com/sensorlab/sigfox-toolbox/tree/master/node-red-python</a>.\nCopyright (2017) SensorLab, Jo\u017eef Stefan Institute <a href=\"http://sensorlab.ijs.si\" rel=\"nofollow\">http://sensorlab.ijs.si</a> and licensed under GPL version 3</p>\n</div>\n\n          </div>"}, "last_serial": 7070738, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4dfc84622cd2d91ab8addc639033ab23", "sha256": "077d63edeea16d1f291e3218e4a9b6ef668ba8f7569e8feaa72b5e02d7371ee5"}, "downloads": -1, "filename": "pynodered-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4dfc84622cd2d91ab8addc639033ab23", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13641, "upload_time": "2019-01-18T22:00:12", "upload_time_iso_8601": "2019-01-18T22:00:12.549603Z", "url": "https://files.pythonhosted.org/packages/1a/e6/3d6c765d3c6698b0b8bcaee59c0867112424350f3f608968eeaedb4cde48/pynodered-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74c27dda871c66327d71a5154d393fde", "sha256": "a5fd9cc46c4760578bd696335c08466f7596e4ebf0b238cc64e7869e5fef6802"}, "downloads": -1, "filename": "pynodered-0.1.0.tar.gz", "has_sig": false, "md5_digest": "74c27dda871c66327d71a5154d393fde", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16196, "upload_time": "2019-01-18T22:00:14", "upload_time_iso_8601": "2019-01-18T22:00:14.790695Z", "url": "https://files.pythonhosted.org/packages/85/f6/1af9af4fed7452920b91f12a9215e6d0f044e3d5d14e17d2d9f23283ee5a/pynodered-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "8ebe4e61de56659421c102980d76a6c7", "sha256": "30654e8c5e044b1819858e8c310f9aa2449d3ab939d233c2d8a7850b68860ed8"}, "downloads": -1, "filename": "pynodered-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8ebe4e61de56659421c102980d76a6c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16993, "upload_time": "2020-04-21T19:39:51", "upload_time_iso_8601": "2020-04-21T19:39:51.003573Z", "url": "https://files.pythonhosted.org/packages/b8/0e/e7dc632620cca30311f203c957660fcc504d28583d68628b7d1c9edc20aa/pynodered-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8ebe4e61de56659421c102980d76a6c7", "sha256": "30654e8c5e044b1819858e8c310f9aa2449d3ab939d233c2d8a7850b68860ed8"}, "downloads": -1, "filename": "pynodered-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8ebe4e61de56659421c102980d76a6c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16993, "upload_time": "2020-04-21T19:39:51", "upload_time_iso_8601": "2020-04-21T19:39:51.003573Z", "url": "https://files.pythonhosted.org/packages/b8/0e/e7dc632620cca30311f203c957660fcc504d28583d68628b7d1c9edc20aa/pynodered-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:06 2020"}