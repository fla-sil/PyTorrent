{"info": {"author": "Alejandro Rodr\u00edguez D\u00edaz", "author_email": "jancho@usal.es", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "Wespipeline\n===========\nAn implementation of a whole exome analysis pipeline using `Luigi <https://github.com/spotify/luigi/>`_ for workflow management.\n\n.. figure:: https://raw.githubusercontent.com/janchorizo/wespipeline/master/docs/steps.png\n   :alt: Steps Logo\n   :align: center\n\nThis package provides with the implementation of tasks for executing partial or complete variant calling \nanalysis with the advantages of having a workflow manager: dependency resolution, execution planner,\nmodularity, monitoring and historic.\n\nDocumentation for the latest version is being hosted by `readthedocs <https://wespipeline.readthedocs.io/en/latest/>`_\n\nInstallation\n^^^^^^^^^^^^\nWespipeline is available through pip, conda and manual installation. Install it from the package repositories\n``pip3 install wespipeline`` ``conda install -c jancho wespipeline``, or download the project and build from source:\n``git clone https://github.com/Janchorizo/wespipeline.git && cd wespipeline && python3 setup.py install``.\n\nNotice that executing the analysis will involve different additional dependencies depending on the steps that executed and the \nparameters set for these. All possible are cited below and can be downloaded with the Anaconda distribution:\n\n* Secuence retrieval : Sra Toolkit, Fastqc\n* Reference genome retrieval : No needed dependency\n* Secuence alignment : Bwa\n* Alignment processing : Bwa Samtools, \n* Variant calling : Freebayes, Varscan, Gatk, Deepvariant\n* Variant calling evaluation : Vcf tools\n\nIn addition to the dependencies, conda can be used for installing the *wespipeline* package. An example for\ninstalling the miniconda distribution, the package and the dependencies is:\n\n.. code-block:: bash\n\n   wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh\n   bash ~/miniconda.sh -b -p $HOME/miniconda\n   export PATH=\"$HOME/miniconda/bin:$PATH\"\n   source $HOME/miniconda/bin/activate && \\\n       conda config --add channels bioconda && \\\n       conda config --add channels conda-forge && \\\n       conda config --add channels jancho && \\\n       conda install -y samtools && \\\n       conda install -y bwa && \\\n       conda install -y picard && \\\n       conda install -y platypus-variant && \\\n       conda install -y varscan && \\\n       conda install -y freebayes && \\\n       conda install -y fastqc && \\\n       conda install -y sra-tools && \\\n       conda install -y wespipeline\n\n   rm ~/miniconda.sh\n\nGetting started\n^^^^^^^^^^^^^^^\n\nInstalling or downloading the package will provide with a higher level task per step of the\nanalysis, each of which can be executed in a similar fashion to other Luigi tasks.\n\nEach of the six steps have a higher level task that can be scheduled in a similar fashion\nto other Luigi tasks:\n\n.. code-block:: bash\n\n\tpython3 -m luigi --module wespipeline.<module> <Taskname> --<Taskname>-param value\n\nDownload the sequences using the NCBI accession number.\n\n.. code-block:: bash \n\n\tpython3 -m luigi --module wespipeline.fastq FastqRetrieval \\\n\t\t--FastqRetrieval-paired-end true \\\n\t\t--FastqRetrieval-accession-number SRR9209557 \\\n\t\t--FastqRetrieval-create-report true\n\nOr an external url.\n\n.. code-block:: bash\n\n\tpython3 -m luigi --module wespipeline.fastq FastqRetrieval \\\n\t\t--FastqRetrieval-paired-end true \\\n\t\t--FastqRetrieval-compressed false \\\n\t\t--FastqRetrieval-accession-number SRR9209557 \\\n\t\t--FastqRetrieval-create-report true\n\nDownload the reference genome and create a report using FastqC.\n\n.. code-block:: bash\n\n\tpython3.6 -m luigi --module tasks.reference ReferenceRetrieval \n\t\t--workers 3 \\\n\t\t--ReferenceGenome-ref-url ftp://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/hg19.2bit \\\n\t\t--ReferenceGenome-from2bit True \\\n\t\t--GlobalParams-base-dir ./tfm_experiment \\\n\t\t--GlobalParams-log-dir .logs \\\n\t\t--GlobalParams-exp-name hg19\n\nOr run the whole analysis, specifying the parameters for each of the steps.\n\n.. code-block:: bash\n\n\tpython3 -m luigi --module tasks.vcf VariantCalling \n\t\t--workers 3 \n\t\t--VariantCalling-use-platypus true \n\t\t--VariantCalling-use-freebayes true \n\t\t--VariantCalling-use-samtools false \n\t\t--VariantCalling-use-gatk false \n\t\t--VariantCalling-use-deepcalling false \n\t\t--AlignProcessing-cpus 6 \n\t\t--FastqAlign-cpus 6 \n\t\t--FastqAlign-create-report True \n\t\t--GetFastq-gz-compressed True \n\t\t--GetFastq-fastq1-url ftp://ftp-trace.ncbi.nih.gov/giab/ftp/data/NA12878/Garvan_NA12878_HG001_HiSeq_Exome/NIST7035_TAAGGCGA_L001_R1_001.fastq.gz \n\t\t--GetFastq-fastq2-url ftp://ftp-trace.ncbi.nih.gov/giab/ftp/data/NA12878/Garvan_NA12878_HG001_HiSeq_Exome/NIST7035_TAAGGCGA_L001_R2_001.fastq.gz \n\t\t--GetFastq-from-ebi False \n\t\t--GetFastq-paired-end True \n\t\t--ReferenceGenomeRetrieval-ref-url ftp://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/hg19.2bit --ReferenceGenomeRetrieval-from2bit True \n\t\t--GlobalParams-base-dir ./tfm_experiment \n\t\t--GlobalParams-log-dir .logs \n\t\t--GlobalParams-exp-name hg19 \n\nTasks implemented\n^^^^^^^^^^^^^^^^^\n\n+-----------------+----------------------------+\n| Module          | Task                       |\n+=================+============================+\n| reference       | ReferenceGenomeRetrieval   |\n+-----------------+----------------------------+\n| fastq           | FastqRetrieval             |\n+-----------------+----------------------------+\n| align           | FastqAlignment             |\n+-----------------+----------------------------+\n| processalign    | FastqProcessing            |\n+-----------------+----------------------------+\n| variantcalling  | VariantCalling             |\n+-----------------+----------------------------+\n| processalign    |  VariantProcessing         |\n+-----------------+----------------------------+\n\nAcknowledgements\n^^^^^^^^^^^^^^^^\n\nSpecial thanks to professor Luis Antonio Miguel Quintales for all the guidance and help provided during the\ndevelopment of this project.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "wespipeline", "package_url": "https://pypi.org/project/wespipeline/", "platform": "", "project_url": "https://pypi.org/project/wespipeline/", "project_urls": {"Documentation": "https://wespipeline.readthedocs.io/en/latest/index.html", "Source": "https://github.com/Janchorizo/wespipeline", "Tracker": "https://github.com/Janchorizo/wespipeline/issues"}, "release_url": "https://pypi.org/project/wespipeline/1.0.1/", "requires_dist": ["luigi", "docker", "python-daemon"], "requires_python": ">=3.6", "summary": "An implementation of a whole exome analysis pipeline using the library Luigi for workflow management.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Wespipeline</h1>\n<p>An implementation of a whole exome analysis pipeline using <code>Luigi &lt;https://github.com/spotify/luigi/&gt;</code>_ for workflow management.</p>\n<p>.. figure:: <a href=\"https://raw.githubusercontent.com/janchorizo/wespipeline/master/docs/steps.png\" rel=\"nofollow\">https://raw.githubusercontent.com/janchorizo/wespipeline/master/docs/steps.png</a>\n:alt: Steps Logo\n:align: center</p>\n<p>This package provides with the implementation of tasks for executing partial or complete variant calling\nanalysis with the advantages of having a workflow manager: dependency resolution, execution planner,\nmodularity, monitoring and historic.</p>\n<p>Documentation for the latest version is being hosted by <code>readthedocs &lt;https://wespipeline.readthedocs.io/en/latest/&gt;</code>_</p>\n<p>Installation\n^^^^^^^^^^^^\nWespipeline is available through pip, conda and manual installation. Install it from the package repositories\n<code>pip3 install wespipeline</code> <code>conda install -c jancho wespipeline</code>, or download the project and build from source:\n<code>git clone https://github.com/Janchorizo/wespipeline.git &amp;&amp; cd wespipeline &amp;&amp; python3 setup.py install</code>.</p>\n<p>Notice that executing the analysis will involve different additional dependencies depending on the steps that executed and the\nparameters set for these. All possible are cited below and can be downloaded with the Anaconda distribution:</p>\n<ul>\n<li>Secuence retrieval : Sra Toolkit, Fastqc</li>\n<li>Reference genome retrieval : No needed dependency</li>\n<li>Secuence alignment : Bwa</li>\n<li>Alignment processing : Bwa Samtools,</li>\n<li>Variant calling : Freebayes, Varscan, Gatk, Deepvariant</li>\n<li>Variant calling evaluation : Vcf tools</li>\n</ul>\n<p>In addition to the dependencies, conda can be used for installing the <em>wespipeline</em> package. An example for\ninstalling the miniconda distribution, the package and the dependencies is:</p>\n<p>.. code-block:: bash</p>\n<p>wget <a href=\"https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\" rel=\"nofollow\">https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</a> -O ~/miniconda.sh\nbash ~/miniconda.sh -b -p $HOME/miniconda\nexport PATH=\"$HOME/miniconda/bin:$PATH\"\nsource $HOME/miniconda/bin/activate &amp;&amp; <br>\nconda config --add channels bioconda &amp;&amp; <br>\nconda config --add channels conda-forge &amp;&amp; <br>\nconda config --add channels jancho &amp;&amp; <br>\nconda install -y samtools &amp;&amp; <br>\nconda install -y bwa &amp;&amp; <br>\nconda install -y picard &amp;&amp; <br>\nconda install -y platypus-variant &amp;&amp; <br>\nconda install -y varscan &amp;&amp; <br>\nconda install -y freebayes &amp;&amp; <br>\nconda install -y fastqc &amp;&amp; <br>\nconda install -y sra-tools &amp;&amp; <br>\nconda install -y wespipeline</p>\n<p>rm ~/miniconda.sh</p>\n<p>Getting started\n^^^^^^^^^^^^^^^</p>\n<p>Installing or downloading the package will provide with a higher level task per step of the\nanalysis, each of which can be executed in a similar fashion to other Luigi tasks.</p>\n<p>Each of the six steps have a higher level task that can be scheduled in a similar fashion\nto other Luigi tasks:</p>\n<p>.. code-block:: bash</p>\n<pre><code>python3 -m luigi --module wespipeline.&lt;module&gt; &lt;Taskname&gt; --&lt;Taskname&gt;-param value\n</code></pre>\n<p>Download the sequences using the NCBI accession number.</p>\n<p>.. code-block:: bash</p>\n<pre><code>python3 -m luigi --module wespipeline.fastq FastqRetrieval \\\n\t--FastqRetrieval-paired-end true \\\n\t--FastqRetrieval-accession-number SRR9209557 \\\n\t--FastqRetrieval-create-report true\n</code></pre>\n<p>Or an external url.</p>\n<p>.. code-block:: bash</p>\n<pre><code>python3 -m luigi --module wespipeline.fastq FastqRetrieval \\\n\t--FastqRetrieval-paired-end true \\\n\t--FastqRetrieval-compressed false \\\n\t--FastqRetrieval-accession-number SRR9209557 \\\n\t--FastqRetrieval-create-report true\n</code></pre>\n<p>Download the reference genome and create a report using FastqC.</p>\n<p>.. code-block:: bash</p>\n<pre><code>python3.6 -m luigi --module tasks.reference ReferenceRetrieval \n\t--workers 3 \\\n\t--ReferenceGenome-ref-url ftp://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/hg19.2bit \\\n\t--ReferenceGenome-from2bit True \\\n\t--GlobalParams-base-dir ./tfm_experiment \\\n\t--GlobalParams-log-dir .logs \\\n\t--GlobalParams-exp-name hg19\n</code></pre>\n<p>Or run the whole analysis, specifying the parameters for each of the steps.</p>\n<p>.. code-block:: bash</p>\n<pre><code>python3 -m luigi --module tasks.vcf VariantCalling \n\t--workers 3 \n\t--VariantCalling-use-platypus true \n\t--VariantCalling-use-freebayes true \n\t--VariantCalling-use-samtools false \n\t--VariantCalling-use-gatk false \n\t--VariantCalling-use-deepcalling false \n\t--AlignProcessing-cpus 6 \n\t--FastqAlign-cpus 6 \n\t--FastqAlign-create-report True \n\t--GetFastq-gz-compressed True \n\t--GetFastq-fastq1-url ftp://ftp-trace.ncbi.nih.gov/giab/ftp/data/NA12878/Garvan_NA12878_HG001_HiSeq_Exome/NIST7035_TAAGGCGA_L001_R1_001.fastq.gz \n\t--GetFastq-fastq2-url ftp://ftp-trace.ncbi.nih.gov/giab/ftp/data/NA12878/Garvan_NA12878_HG001_HiSeq_Exome/NIST7035_TAAGGCGA_L001_R2_001.fastq.gz \n\t--GetFastq-from-ebi False \n\t--GetFastq-paired-end True \n\t--ReferenceGenomeRetrieval-ref-url ftp://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/hg19.2bit --ReferenceGenomeRetrieval-from2bit True \n\t--GlobalParams-base-dir ./tfm_experiment \n\t--GlobalParams-log-dir .logs \n\t--GlobalParams-exp-name hg19 \n</code></pre>\n<p>Tasks implemented\n^^^^^^^^^^^^^^^^^</p>\n<p>+-----------------+----------------------------+\n| Module          | Task                       |\n+=================+============================+\n| reference       | ReferenceGenomeRetrieval   |\n+-----------------+----------------------------+\n| fastq           | FastqRetrieval             |\n+-----------------+----------------------------+\n| align           | FastqAlignment             |\n+-----------------+----------------------------+\n| processalign    | FastqProcessing            |\n+-----------------+----------------------------+\n| variantcalling  | VariantCalling             |\n+-----------------+----------------------------+\n| processalign    |  VariantProcessing         |\n+-----------------+----------------------------+</p>\n<p>Acknowledgements\n^^^^^^^^^^^^^^^^</p>\n<p>Special thanks to professor Luis Antonio Miguel Quintales for all the guidance and help provided during the\ndevelopment of this project.</p>\n\n          </div>"}, "last_serial": 5485463, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "828b2df066e5d2c5e716479d8bd6cd5a", "sha256": "a42be5a3dc580a9f24badb1eb36c83e9246cb1e79dc5c4ee382e322c14512a80"}, "downloads": -1, "filename": "wespipeline-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "828b2df066e5d2c5e716479d8bd6cd5a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 21947, "upload_time": "2019-06-29T11:36:28", "upload_time_iso_8601": "2019-06-29T11:36:28.412169Z", "url": "https://files.pythonhosted.org/packages/53/0e/71a9eb21295ad7d41c30e41fa6a2b7921f38e1555d9a81cc82adc7b58a98/wespipeline-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "995568f8282b30e47200ff7e629585ac", "sha256": "ac91f805515279c47a1a8d21911a4b770e5584d5f44325c6305132947050550f"}, "downloads": -1, "filename": "wespipeline-0.1.0.tar.gz", "has_sig": false, "md5_digest": "995568f8282b30e47200ff7e629585ac", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14537, "upload_time": "2019-06-29T11:36:34", "upload_time_iso_8601": "2019-06-29T11:36:34.645688Z", "url": "https://files.pythonhosted.org/packages/54/a4/f199eec005d3994c80b9a43cedf7f6895e3a545f0df6241e3cdf7ca08204/wespipeline-0.1.0.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "ad5e09dadfb4a74f8f203832f3b84436", "sha256": "8bfdcf40c6ed4a6b5088cfa8c7aeeb4c2d8ec0913fa69450f93fe763c597eba1"}, "downloads": -1, "filename": "wespipeline-0.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ad5e09dadfb4a74f8f203832f3b84436", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19820, "upload_time": "2019-06-23T14:26:01", "upload_time_iso_8601": "2019-06-23T14:26:01.911921Z", "url": "https://files.pythonhosted.org/packages/e2/12/05414dbd7726974bbd090b55c998f34b66b79d3e561b306f31d8db703f09/wespipeline-0.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "206e54e8e68998ae4fff844fdd514c4f", "sha256": "533af7bb126613441ff65c5efc93d3aa9d9aaa784ab28271c6f1910a1382dc43"}, "downloads": -1, "filename": "wespipeline-0.9.0.tar.gz", "has_sig": false, "md5_digest": "206e54e8e68998ae4fff844fdd514c4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12644, "upload_time": "2019-06-23T14:26:04", "upload_time_iso_8601": "2019-06-23T14:26:04.468154Z", "url": "https://files.pythonhosted.org/packages/86/68/cf4d37afda448fc9afebda0e830edc1de13330c545376821fc2d440b44f2/wespipeline-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "5e7421e2c81ffaf695ec956550c8a958", "sha256": "f0e9917bc14d513f33796fd52b995b76322e7ee39ea548ac5b4ca8173a865a49"}, "downloads": -1, "filename": "wespipeline-0.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5e7421e2c81ffaf695ec956550c8a958", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19830, "upload_time": "2019-06-23T15:00:31", "upload_time_iso_8601": "2019-06-23T15:00:31.441974Z", "url": "https://files.pythonhosted.org/packages/37/56/a391683e339a64a2021a4750d0543131824fb6f84e83516f5df9e00a5821/wespipeline-0.9.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db9a8e20ffe893fcc3ebbcc355d100d0", "sha256": "033a6f868306fce2081f950c773e2d76c5a774345ce974b0d385429f52c2f03a"}, "downloads": -1, "filename": "wespipeline-0.9.1.tar.gz", "has_sig": false, "md5_digest": "db9a8e20ffe893fcc3ebbcc355d100d0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12685, "upload_time": "2019-06-23T15:00:34", "upload_time_iso_8601": "2019-06-23T15:00:34.408394Z", "url": "https://files.pythonhosted.org/packages/34/d1/93a1e0405bb9d47b39ef9949a3224f4857e1812c26c6fe3d80600f451c6e/wespipeline-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "aff7dd41c538d45c809aa3b92ca01fa3", "sha256": "3a3380f1ae4587cb0863bfdae7867e2485b682645fc2d2073b34a5c6597c4a1a"}, "downloads": -1, "filename": "wespipeline-0.9.2-py3-none-any.whl", "has_sig": false, "md5_digest": "aff7dd41c538d45c809aa3b92ca01fa3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19832, "upload_time": "2019-06-23T15:30:28", "upload_time_iso_8601": "2019-06-23T15:30:28.564090Z", "url": "https://files.pythonhosted.org/packages/60/85/ccd9c4be3639f14b2e66d1fbeada2863e315a17064730f687fcf352a1c57/wespipeline-0.9.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a02756ecbe7bcf6b922a717811c35ca4", "sha256": "d46ae8a0b855bbdeb8d255fea4e9b3d00c06b495b7caf138a27f7b4f5b83b693"}, "downloads": -1, "filename": "wespipeline-0.9.2.tar.gz", "has_sig": false, "md5_digest": "a02756ecbe7bcf6b922a717811c35ca4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12699, "upload_time": "2019-06-23T15:30:32", "upload_time_iso_8601": "2019-06-23T15:30:32.353696Z", "url": "https://files.pythonhosted.org/packages/85/ec/03328f728b3c964ab9454d524b3f523c354e9395efe8a968d322a6faeaae/wespipeline-0.9.2.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "91307262a7b4f68b002cac0c33e4bdc2", "sha256": "16054ed2e20bb43f97a4c0e6b74c8765b8e1d30622823fa1d8e7b6c71c35c8ff"}, "downloads": -1, "filename": "wespipeline-0.9.3-py3-none-any.whl", "has_sig": false, "md5_digest": "91307262a7b4f68b002cac0c33e4bdc2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20584, "upload_time": "2019-06-24T14:10:39", "upload_time_iso_8601": "2019-06-24T14:10:39.038777Z", "url": "https://files.pythonhosted.org/packages/51/24/8b2b25ef828f49b8c4a7f11451619f7e65d9256079374489fce0d96e3c0d/wespipeline-0.9.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0c0376e167b768ebee8e71630d21ce8", "sha256": "74d264d641b6621840ef4c91a59c488ddeb7c2a1c7d232f37eab72ab75aec4a3"}, "downloads": -1, "filename": "wespipeline-0.9.3.tar.gz", "has_sig": false, "md5_digest": "c0c0376e167b768ebee8e71630d21ce8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13596, "upload_time": "2019-06-24T14:10:45", "upload_time_iso_8601": "2019-06-24T14:10:45.046712Z", "url": "https://files.pythonhosted.org/packages/ad/24/089f03f1b5676d13549834c3da2914f57bc7a3051eb7d32c9a4fdf917ab4/wespipeline-0.9.3.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "0843d958df7d40bc2ffc8d8654c1c38f", "sha256": "ab6167fb15d8be9c8cc293648338874f5a97a29165a868cb8d7f164d7f612e4a"}, "downloads": -1, "filename": "wespipeline-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0843d958df7d40bc2ffc8d8654c1c38f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 21948, "upload_time": "2019-06-29T11:40:08", "upload_time_iso_8601": "2019-06-29T11:40:08.670724Z", "url": "https://files.pythonhosted.org/packages/70/50/6812090eb9c6cbb397b3f61a9c54c0dda213e46acede50469ff8f481db1e/wespipeline-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14b8b4e62c1ee57bb307abf8ff8510fb", "sha256": "d4a11bbed25732198831e5bc830efaf284d2286b9c959aa737fba92c11fe8042"}, "downloads": -1, "filename": "wespipeline-1.0.0.tar.gz", "has_sig": false, "md5_digest": "14b8b4e62c1ee57bb307abf8ff8510fb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14541, "upload_time": "2019-06-29T11:40:15", "upload_time_iso_8601": "2019-06-29T11:40:15.325099Z", "url": "https://files.pythonhosted.org/packages/a8/a3/718a8d57fed41d34e25240f7c0486027ab76a78c85ba9a377bedefd298bf/wespipeline-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "c9f6b20c2475a813594e905ca9b9f984", "sha256": "ed9d033aaf3418cb658177d122563ac2a0239130b0a9d26d98d1843878176170"}, "downloads": -1, "filename": "wespipeline-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c9f6b20c2475a813594e905ca9b9f984", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 22038, "upload_time": "2019-07-04T08:11:34", "upload_time_iso_8601": "2019-07-04T08:11:34.604552Z", "url": "https://files.pythonhosted.org/packages/2d/41/74e38def44c06c3c266dc5f3e1e59779e6ef7a815a9ca6b00a63dc0ad6dd/wespipeline-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc80a241113bc76f04d493543c8f97ad", "sha256": "f76d6ae98df5b02cf8e0f9b0d3b7ed70f6937971ebea52d9203f59b4a695de23"}, "downloads": -1, "filename": "wespipeline-1.0.1.tar.gz", "has_sig": false, "md5_digest": "bc80a241113bc76f04d493543c8f97ad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14637, "upload_time": "2019-07-04T08:11:36", "upload_time_iso_8601": "2019-07-04T08:11:36.031269Z", "url": "https://files.pythonhosted.org/packages/b3/b0/ed376e1c7c595d211833ce152a8b1bbb63154274f526b45114c20e730f9a/wespipeline-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c9f6b20c2475a813594e905ca9b9f984", "sha256": "ed9d033aaf3418cb658177d122563ac2a0239130b0a9d26d98d1843878176170"}, "downloads": -1, "filename": "wespipeline-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c9f6b20c2475a813594e905ca9b9f984", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 22038, "upload_time": "2019-07-04T08:11:34", "upload_time_iso_8601": "2019-07-04T08:11:34.604552Z", "url": "https://files.pythonhosted.org/packages/2d/41/74e38def44c06c3c266dc5f3e1e59779e6ef7a815a9ca6b00a63dc0ad6dd/wespipeline-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc80a241113bc76f04d493543c8f97ad", "sha256": "f76d6ae98df5b02cf8e0f9b0d3b7ed70f6937971ebea52d9203f59b4a695de23"}, "downloads": -1, "filename": "wespipeline-1.0.1.tar.gz", "has_sig": false, "md5_digest": "bc80a241113bc76f04d493543c8f97ad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14637, "upload_time": "2019-07-04T08:11:36", "upload_time_iso_8601": "2019-07-04T08:11:36.031269Z", "url": "https://files.pythonhosted.org/packages/b3/b0/ed376e1c7c595d211833ce152a8b1bbb63154274f526b45114c20e730f9a/wespipeline-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:30:11 2020"}