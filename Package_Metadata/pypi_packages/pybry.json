{"info": {"author": "Oleg Silkin", "author_email": "o.silkin98@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# PyBRY, a Python API Wrapper for lbry & lbrycrd\n\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![Language grade: Python](https://img.shields.io/lgtm/grade/python/b/osilkin98/pybry.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/osilkin98/pybry/context:python)\n\nPyBry is a wrapper for the [lbry daemon](https://github.com/lbryio/lbry) and \n[lbrycrd daemon](https://github.com/lbryio/lbrycrd) API for Python 3.x\n\n(Python 2 support will be added very soon)\n\n## Installation\n\n### With pip\n\nSimply run the following\n\n```bash\n$ pip install pybry\n```\n\nAnd you're done!\n\n### Manually Cloning the Repository\n\nYou can either clone this repository or get a tarball from PyPI's \nwebsite for whatever version you want. Simply download it and\n\n\n```bash\n# Simply clone the repository somewhere\n$ git clone https://github.com/osilkin98/pybry\n\n# Or obtain a release from PyPI's site.\n$ wget <extremely long link generated by PyPI> \n\n$ tar -xzf pybry-x.x.x.tar.gz PyBRY/\n\n# Change directories into the newly created repository\n$ cd PyBRY/\n\n# Now you simply run the setup.py file:\n$ python3 setup.py build_py install\n\n```\n\n\n\n## Usage\n\n### Using the API\n\n0. Make sure that `lbry-daemon` is up and running, as you will not be able to \n    do anything without it. \n\n1. First, import `LbrydApi` or `LbrycrdApi` from `pybry` into your project.\n\n\n### API for LBRYD\n\n#### Using the Generated Code\n\nThe API generates all the functions from the `lbryd` documentation, and translates\nit into tangible, documented code. \n\n```python\n[1] from pybry import LbrydApi\n\n# Initialize the API\n[2] lbry = LbrydApi()\n\n# Just call the method as documented in the LBRYD API\n[3] response = lbry.claim_list(name=\"bellflower\")\n```\n\nSince all the code is properly documented, if you ask for its documentation in an IDE,\nor if you go to read it for yourself, it'll appear like this:\n\n```python\n[4] response = lbry.account_balance()\n\n    Return the balance of an account\n    Params:\n    account_id \u2013 If provided only the balance for this account will be given (Optional)\n    address \u2013 If provided only the balance for this address will be given (Optional)\n    include_unconfirmed \u2013 Include unconfirmed (Optional)\n    Returns:\n    (decimal) amount of lbry credits in wallet(decimal) amount of lbry credits in wallet\n\n```\n#### Calling the API Manually\nSince all the code does is make requests to the lbry daemon, you can also \nuse it as you would with cURL on the commandline. In fact, this is \nactually what the bodies of generated code do. \n```python\n# You can also use the traditional method of making requests \n# if you prefer the cURL commandline syntax, works the same.\nresponse = lbry.call(\"claim_list\", {\"name\": \"bellflower\"})\n\n```\n\n\n### API For LbryCRD\n```python\nfrom pybry import LbrycrdApi\n\n# Provide the username and password\nlbrycrd = LbrycrdApi(\"username\", \"password\")\n\n# Just specify the method and the parameters\nresponse = lbrycrd.call(\"wallet_unlock\", {\"wallet_username\", \"wallet_password\"})\n\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/osilkin98/pybry", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "pybry", "package_url": "https://pypi.org/project/pybry/", "platform": "", "project_url": "https://pypi.org/project/pybry/", "project_urls": {"Homepage": "https://github.com/osilkin98/pybry"}, "release_url": "https://pypi.org/project/pybry/1.6.4/", "requires_dist": null, "requires_python": ">=3", "summary": "A Binded Python API for the LBRYD and LBRYCRD network", "version": "1.6.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyBRY, a Python API Wrapper for lbry &amp; lbrycrd</h1>\n<p><a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a>\n<a href=\"https://lgtm.com/projects/b/osilkin98/pybry/context:python\" rel=\"nofollow\"><img alt=\"Language grade: Python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a8254e2bf0e67f4eb33a1ec25dca82e7038ef226/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f707974686f6e2f622f6f73696c6b696e39382f70796272792e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138\"></a></p>\n<p>PyBry is a wrapper for the <a href=\"https://github.com/lbryio/lbry\" rel=\"nofollow\">lbry daemon</a> and\n<a href=\"https://github.com/lbryio/lbrycrd\" rel=\"nofollow\">lbrycrd daemon</a> API for Python 3.x</p>\n<p>(Python 2 support will be added very soon)</p>\n<h2>Installation</h2>\n<h3>With pip</h3>\n<p>Simply run the following</p>\n<pre>$ pip install pybry\n</pre>\n<p>And you're done!</p>\n<h3>Manually Cloning the Repository</h3>\n<p>You can either clone this repository or get a tarball from PyPI's\nwebsite for whatever version you want. Simply download it and</p>\n<pre><span class=\"c1\"># Simply clone the repository somewhere</span>\n$ git clone https://github.com/osilkin98/pybry\n\n<span class=\"c1\"># Or obtain a release from PyPI's site.</span>\n$ wget &lt;extremely long link generated by PyPI&gt; \n\n$ tar -xzf pybry-x.x.x.tar.gz PyBRY/\n\n<span class=\"c1\"># Change directories into the newly created repository</span>\n$ <span class=\"nb\">cd</span> PyBRY/\n\n<span class=\"c1\"># Now you simply run the setup.py file:</span>\n$ python3 setup.py build_py install\n</pre>\n<h2>Usage</h2>\n<h3>Using the API</h3>\n<ol>\n<li>\n<p>Make sure that <code>lbry-daemon</code> is up and running, as you will not be able to\ndo anything without it.</p>\n</li>\n<li>\n<p>First, import <code>LbrydApi</code> or <code>LbrycrdApi</code> from <code>pybry</code> into your project.</p>\n</li>\n</ol>\n<h3>API for LBRYD</h3>\n<h4>Using the Generated Code</h4>\n<p>The API generates all the functions from the <code>lbryd</code> documentation, and translates\nit into tangible, documented code.</p>\n<pre><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"kn\">from</span> <span class=\"nn\">pybry</span> <span class=\"kn\">import</span> <span class=\"n\">LbrydApi</span>\n\n<span class=\"c1\"># Initialize the API</span>\n<span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"n\">lbry</span> <span class=\"o\">=</span> <span class=\"n\">LbrydApi</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Just call the method as documented in the LBRYD API</span>\n<span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">lbry</span><span class=\"o\">.</span><span class=\"n\">claim_list</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"bellflower\"</span><span class=\"p\">)</span>\n</pre>\n<p>Since all the code is properly documented, if you ask for its documentation in an IDE,\nor if you go to read it for yourself, it'll appear like this:</p>\n<pre><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">lbry</span><span class=\"o\">.</span><span class=\"n\">account_balance</span><span class=\"p\">()</span>\n\n    <span class=\"n\">Return</span> <span class=\"n\">the</span> <span class=\"n\">balance</span> <span class=\"n\">of</span> <span class=\"n\">an</span> <span class=\"n\">account</span>\n    <span class=\"n\">Params</span><span class=\"p\">:</span>\n    <span class=\"n\">account_id</span> <span class=\"err\">\u2013</span> <span class=\"n\">If</span> <span class=\"n\">provided</span> <span class=\"n\">only</span> <span class=\"n\">the</span> <span class=\"n\">balance</span> <span class=\"k\">for</span> <span class=\"n\">this</span> <span class=\"n\">account</span> <span class=\"n\">will</span> <span class=\"n\">be</span> <span class=\"n\">given</span> <span class=\"p\">(</span><span class=\"n\">Optional</span><span class=\"p\">)</span>\n    <span class=\"n\">address</span> <span class=\"err\">\u2013</span> <span class=\"n\">If</span> <span class=\"n\">provided</span> <span class=\"n\">only</span> <span class=\"n\">the</span> <span class=\"n\">balance</span> <span class=\"k\">for</span> <span class=\"n\">this</span> <span class=\"n\">address</span> <span class=\"n\">will</span> <span class=\"n\">be</span> <span class=\"n\">given</span> <span class=\"p\">(</span><span class=\"n\">Optional</span><span class=\"p\">)</span>\n    <span class=\"n\">include_unconfirmed</span> <span class=\"err\">\u2013</span> <span class=\"n\">Include</span> <span class=\"n\">unconfirmed</span> <span class=\"p\">(</span><span class=\"n\">Optional</span><span class=\"p\">)</span>\n    <span class=\"n\">Returns</span><span class=\"p\">:</span>\n    <span class=\"p\">(</span><span class=\"n\">decimal</span><span class=\"p\">)</span> <span class=\"n\">amount</span> <span class=\"n\">of</span> <span class=\"n\">lbry</span> <span class=\"n\">credits</span> <span class=\"ow\">in</span> <span class=\"n\">wallet</span><span class=\"p\">(</span><span class=\"n\">decimal</span><span class=\"p\">)</span> <span class=\"n\">amount</span> <span class=\"n\">of</span> <span class=\"n\">lbry</span> <span class=\"n\">credits</span> <span class=\"ow\">in</span> <span class=\"n\">wallet</span>\n</pre>\n<h4>Calling the API Manually</h4>\n<p>Since all the code does is make requests to the lbry daemon, you can also\nuse it as you would with cURL on the commandline. In fact, this is\nactually what the bodies of generated code do.</p>\n<pre><span class=\"c1\"># You can also use the traditional method of making requests </span>\n<span class=\"c1\"># if you prefer the cURL commandline syntax, works the same.</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">lbry</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"s2\">\"claim_list\"</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"bellflower\"</span><span class=\"p\">})</span>\n</pre>\n<h3>API For LbryCRD</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pybry</span> <span class=\"kn\">import</span> <span class=\"n\">LbrycrdApi</span>\n\n<span class=\"c1\"># Provide the username and password</span>\n<span class=\"n\">lbrycrd</span> <span class=\"o\">=</span> <span class=\"n\">LbrycrdApi</span><span class=\"p\">(</span><span class=\"s2\">\"username\"</span><span class=\"p\">,</span> <span class=\"s2\">\"password\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Just specify the method and the parameters</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">lbrycrd</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"s2\">\"wallet_unlock\"</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s2\">\"wallet_username\"</span><span class=\"p\">,</span> <span class=\"s2\">\"wallet_password\"</span><span class=\"p\">})</span>\n</pre>\n\n          </div>"}, "last_serial": 4388667, "releases": {"1.3.9": [{"comment_text": "", "digests": {"md5": "4c7cf0c4736ee9e51cdf143ef611c459", "sha256": "7230b7f4187d7c6d9a6412e5014df03c98ba21cc700907ae07423ce7a2e1ae0c"}, "downloads": -1, "filename": "pybry-1.3.9.tar.gz", "has_sig": false, "md5_digest": "4c7cf0c4736ee9e51cdf143ef611c459", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 6544, "upload_time": "2018-10-17T11:20:39", "upload_time_iso_8601": "2018-10-17T11:20:39.238995Z", "url": "https://files.pythonhosted.org/packages/b2/0f/6df34cadd00ecec29739b08f6212e8d2e81fb71befc66e747d1481bc5d35/pybry-1.3.9.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "c4f429fe238b50fac9b3ac425d32f5ab", "sha256": "48c39181cee15585b414f9beba109b50b2f0b7d5489e5e020708fd592f96b65c"}, "downloads": -1, "filename": "pybry-1.5.0.tar.gz", "has_sig": false, "md5_digest": "c4f429fe238b50fac9b3ac425d32f5ab", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 20996, "upload_time": "2018-10-17T11:50:12", "upload_time_iso_8601": "2018-10-17T11:50:12.438188Z", "url": "https://files.pythonhosted.org/packages/5d/0e/64d875f7f45f2734f9953f69b95d4cea423fc27094f5f81f1b7325c44865/pybry-1.5.0.tar.gz", "yanked": false}], "1.6.1": [{"comment_text": "", "digests": {"md5": "ae1b27fd7a8fff983abe5d7a3119deb2", "sha256": "d40974773005c60967dfb0d735a81314d9d3a2d2d8e9f1bc27ebde316705ac3e"}, "downloads": -1, "filename": "pybry-1.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ae1b27fd7a8fff983abe5d7a3119deb2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 37662, "upload_time": "2018-10-18T02:09:10", "upload_time_iso_8601": "2018-10-18T02:09:10.685879Z", "url": "https://files.pythonhosted.org/packages/2c/e9/458f93381fa951b38f798ef90b2ffc7607e9b3d51b810c6fe5dcd4bb0bbb/pybry-1.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a514ad00c98317018ba5eb489c6e5ebc", "sha256": "9e3dab3d49af10bbbb49fafb7f6780e109f9587d937e00f3aa9547e87dc249a8"}, "downloads": -1, "filename": "pybry-1.6.1.tar.gz", "has_sig": false, "md5_digest": "a514ad00c98317018ba5eb489c6e5ebc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 33248, "upload_time": "2018-10-18T02:09:12", "upload_time_iso_8601": "2018-10-18T02:09:12.043384Z", "url": "https://files.pythonhosted.org/packages/24/57/a3ad1b9ae68438ffc792d7397e502400d8ed1e91cebb370aaed21ca4fc6e/pybry-1.6.1.tar.gz", "yanked": false}], "1.6.2": [{"comment_text": "", "digests": {"md5": "57446f37d71a9d6a04bf966df3169792", "sha256": "5ba6385d42e0e9645d252fb7810088de1351a7d8cfadc09ee63775b826b6341e"}, "downloads": -1, "filename": "pybry-1.6.2-py3-none-any.whl", "has_sig": false, "md5_digest": "57446f37d71a9d6a04bf966df3169792", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 37804, "upload_time": "2018-10-18T02:38:34", "upload_time_iso_8601": "2018-10-18T02:38:34.080909Z", "url": "https://files.pythonhosted.org/packages/75/1f/f857868d66ee17684d849310508c16105a38753d52e7ea21f8d033b41c38/pybry-1.6.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f65fff80a4858bcdf6ae2257159eb55", "sha256": "08820f59eaf03cd7c0dd2417a6ad6349dbc572ae8f296281d76705682e461f2b"}, "downloads": -1, "filename": "pybry-1.6.2.tar.gz", "has_sig": false, "md5_digest": "4f65fff80a4858bcdf6ae2257159eb55", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 33564, "upload_time": "2018-10-18T02:38:35", "upload_time_iso_8601": "2018-10-18T02:38:35.396741Z", "url": "https://files.pythonhosted.org/packages/73/f9/d4de6b930ba18d3e435a259465b4d19062f7433acb7193278274cd4e4c99/pybry-1.6.2.tar.gz", "yanked": false}], "1.6.3": [{"comment_text": "", "digests": {"md5": "8be737d799320024f9fae7d8d9db0fa7", "sha256": "2b25040a249030b0adb02e6db3008878639cc3d473795e150cb5ec52dce5c8a9"}, "downloads": -1, "filename": "pybry-1.6.3-py3-none-any.whl", "has_sig": false, "md5_digest": "8be737d799320024f9fae7d8d9db0fa7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 37801, "upload_time": "2018-10-18T02:44:50", "upload_time_iso_8601": "2018-10-18T02:44:50.844416Z", "url": "https://files.pythonhosted.org/packages/51/87/4240632e9b3ce23aabc70a2a43d7cd6707a46b1e291984b788f3f6ee4d0d/pybry-1.6.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ec58071add54fb7e6ef9ff7e50e45a6", "sha256": "e7e9878ec2aa67f9725867feb8f396aa04cc44a0853652d59e811e8ea1bff706"}, "downloads": -1, "filename": "pybry-1.6.3.tar.gz", "has_sig": false, "md5_digest": "3ec58071add54fb7e6ef9ff7e50e45a6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 33570, "upload_time": "2018-10-18T02:44:51", "upload_time_iso_8601": "2018-10-18T02:44:51.959804Z", "url": "https://files.pythonhosted.org/packages/15/85/0c3e6d928829393cd52e330167eb4603983042d3b8539824d9d367140ca2/pybry-1.6.3.tar.gz", "yanked": false}], "1.6.4": [{"comment_text": "", "digests": {"md5": "087564337b591d310bd54a7199d74fce", "sha256": "1a9231c9bb9a3a23f47260981539cfc5df6b472803ac45a5ea41828ac6483985"}, "downloads": -1, "filename": "pybry-1.6.4-py3-none-any.whl", "has_sig": false, "md5_digest": "087564337b591d310bd54a7199d74fce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 37824, "upload_time": "2018-10-18T02:47:33", "upload_time_iso_8601": "2018-10-18T02:47:33.615788Z", "url": "https://files.pythonhosted.org/packages/c6/f9/39d20e6eb47f0f3cfd001322f37e77027a7362ffc9d478f56e95a561f7d9/pybry-1.6.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c361faa9aab93fdfea0e01f0bb132af6", "sha256": "90973dec1abdb67fad2d813db684bc92a5731417b7c9f4d90e9bd1d6e999e2f8"}, "downloads": -1, "filename": "pybry-1.6.4.tar.gz", "has_sig": false, "md5_digest": "c361faa9aab93fdfea0e01f0bb132af6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 33623, "upload_time": "2018-10-18T02:47:34", "upload_time_iso_8601": "2018-10-18T02:47:34.837725Z", "url": "https://files.pythonhosted.org/packages/54/a5/ca381e18d3921cc76299cb3b0b0ea2f75d3f6c6333dd321d8cddcaac0c3a/pybry-1.6.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "087564337b591d310bd54a7199d74fce", "sha256": "1a9231c9bb9a3a23f47260981539cfc5df6b472803ac45a5ea41828ac6483985"}, "downloads": -1, "filename": "pybry-1.6.4-py3-none-any.whl", "has_sig": false, "md5_digest": "087564337b591d310bd54a7199d74fce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 37824, "upload_time": "2018-10-18T02:47:33", "upload_time_iso_8601": "2018-10-18T02:47:33.615788Z", "url": "https://files.pythonhosted.org/packages/c6/f9/39d20e6eb47f0f3cfd001322f37e77027a7362ffc9d478f56e95a561f7d9/pybry-1.6.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c361faa9aab93fdfea0e01f0bb132af6", "sha256": "90973dec1abdb67fad2d813db684bc92a5731417b7c9f4d90e9bd1d6e999e2f8"}, "downloads": -1, "filename": "pybry-1.6.4.tar.gz", "has_sig": false, "md5_digest": "c361faa9aab93fdfea0e01f0bb132af6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 33623, "upload_time": "2018-10-18T02:47:34", "upload_time_iso_8601": "2018-10-18T02:47:34.837725Z", "url": "https://files.pythonhosted.org/packages/54/a5/ca381e18d3921cc76299cb3b0b0ea2f75d3f6c6333dd321d8cddcaac0c3a/pybry-1.6.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:59 2020"}