{"info": {"author": "Miko\u0142aj Kuranowski", "author_email": "mkuranowski@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3 :: Only"], "description": "dictondisk\n==========\n\nIt's a thing that implements a dictionary, but in a temporary directory.\n\nWhy?\n---\n\nI had a machine with not a lot of RAM and a script that was RAM-hungry.\nInstead of optimizing the script i did _this_ montrostity.\n\nShould you use it?\n------------------\n\nProbably not. It's slow. I'm almost certain there are many security flaws in this approach.  \n\nHow to use dictondisk?\n----------------------\n\n```python\nfrom dictondisk import DictOnDisk\n\nsome_dict = DictOnDisk()\n\nsome_dict[1] = \"One\"\nsome_dict[2] = \"Two\"\nsome_dict[3] = \"Three\"\n\ndel some_dict[1]\n\nfor key, value in some_dict.items():\n    print(key, value)\n\n```\n\nComparison to the vanilla dict\n------------------------------\n\n|            Action            | dict() | DictOnDisk() |\n|------------------------------|--------|--------------|\n| Preserve insertion order     |   \u2714\ufe0f    |      \u274c      |\n| len(d)                       |   \u2714\ufe0f    |      \u2714\ufe0f       |\n| d[key]                       |   \u2714\ufe0f    |      \u2714\ufe0f       |\n| d[key] = value               |   \u2714\ufe0f    |      \u2714\ufe0f       |\n| del d[key]                   |   \u2714\ufe0f    |      \u2714\ufe0f       |\n| key in d                     |   \u2714\ufe0f    |      \u2714\ufe0f       |\n| key not in d                 |   \u2714\ufe0f    |      \u2714\ufe0f       |\n| iter(d)                      |   \u2714\ufe0f    |      \u2714\ufe0f       |\n| d.clear()                    |   \u2714\ufe0f    |      \u2714\ufe0f       |\n| d.copy()                     |   \u2714\ufe0f    |      \u2714\ufe0f       |\n| d.fromkeys()                 |   \u2714\ufe0f    |      \u2714\ufe0f       |\n| d.get(key[, default])        |   \u2714\ufe0f    |      \u2714\ufe0f       |\n| d.items()                    |   \u2714\ufe0f    |      \u2714\ufe0f       |\n| d.keys()                     |   \u2714\ufe0f    |      \u2714\ufe0f       |\n| d.pop(key[, default])        |   \u2714\ufe0f    |      \u2714\ufe0f       |\n| d.popitem()                  |   \u2714\ufe0f    |      \u2714\ufe0f       |\n| d.setdefault(key[, default]) |   \u2714\ufe0f    |      \u2714\ufe0f       |\n| d.update([other])            |   \u2714\ufe0f    |      \u2714\ufe0f       |\n| d.values()                   |   \u2714\ufe0f    |      \u2714\ufe0f       |\n| bool(d)                      |   \u2714\ufe0f    |      \u2714\ufe0f       |\n| d1 == d2                     |   \u2714\ufe0f    |      \u2714\ufe0f       |\n| d1 != d2                     |   \u2714\ufe0f    |      \u2714\ufe0f       |", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MKuranowski/dictondisk", "keywords": "dictionary dict disk pickle", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "dictondisk", "package_url": "https://pypi.org/project/dictondisk/", "platform": "", "project_url": "https://pypi.org/project/dictondisk/", "project_urls": {"Homepage": "https://github.com/MKuranowski/dictondisk"}, "release_url": "https://pypi.org/project/dictondisk/1.3/", "requires_dist": null, "requires_python": "", "summary": "Implementation of a dictionary in a temporary directory", "version": "1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>dictondisk</h1>\n<p>It's a thing that implements a dictionary, but in a temporary directory.</p>\n<h2>Why?</h2>\n<p>I had a machine with not a lot of RAM and a script that was RAM-hungry.\nInstead of optimizing the script i did <em>this</em> montrostity.</p>\n<h2>Should you use it?</h2>\n<p>Probably not. It's slow. I'm almost certain there are many security flaws in this approach.</p>\n<h2>How to use dictondisk?</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dictondisk</span> <span class=\"kn\">import</span> <span class=\"n\">DictOnDisk</span>\n\n<span class=\"n\">some_dict</span> <span class=\"o\">=</span> <span class=\"n\">DictOnDisk</span><span class=\"p\">()</span>\n\n<span class=\"n\">some_dict</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"One\"</span>\n<span class=\"n\">some_dict</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"Two\"</span>\n<span class=\"n\">some_dict</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"Three\"</span>\n\n<span class=\"k\">del</span> <span class=\"n\">some_dict</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n\n<span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">some_dict</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n</pre>\n<h2>Comparison to the vanilla dict</h2>\n<table>\n<thead>\n<tr>\n<th>Action</th>\n<th>dict()</th>\n<th>DictOnDisk()</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Preserve insertion order</td>\n<td>\u2714\ufe0f</td>\n<td>\u274c</td>\n</tr>\n<tr>\n<td>len(d)</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>d[key]</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>d[key] = value</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>del d[key]</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>key in d</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>key not in d</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>iter(d)</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>d.clear()</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>d.copy()</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>d.fromkeys()</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>d.get(key[, default])</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>d.items()</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>d.keys()</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>d.pop(key[, default])</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>d.popitem()</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>d.setdefault(key[, default])</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>d.update([other])</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>d.values()</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>bool(d)</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>d1 == d2</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n</tr>\n<tr>\n<td>d1 != d2</td>\n<td>\u2714\ufe0f</td>\n<td>\u2714\ufe0f</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 5832398, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "b44f3bfcc32bba5fa1e30c285862440a", "sha256": "85483ffbcd70af85206d74559f75d90eb7134465cb9ceedecb8f5b24dfa1304a"}, "downloads": -1, "filename": "dictondisk-1.0.tar.gz", "has_sig": false, "md5_digest": "b44f3bfcc32bba5fa1e30c285862440a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4538, "upload_time": "2019-08-25T13:46:35", "upload_time_iso_8601": "2019-08-25T13:46:35.949386Z", "url": "https://files.pythonhosted.org/packages/64/aa/cd9dfb6cd15dbaab54a8af9ea1c6b70ebe198e651b922818d13fec1b9665/dictondisk-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "1ca86a4c2682b5a9c6c3070b9351f057", "sha256": "27c5a0cd89df0611e4742e1b53ed1cd64935fc3174b08f60f42043392abe1c60"}, "downloads": -1, "filename": "dictondisk-1.1.tar.gz", "has_sig": false, "md5_digest": "1ca86a4c2682b5a9c6c3070b9351f057", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5100, "upload_time": "2019-09-10T18:41:13", "upload_time_iso_8601": "2019-09-10T18:41:13.958907Z", "url": "https://files.pythonhosted.org/packages/a8/65/c4679391e2a745243d5d67a0c6bcc04180fb66ddddcd453cebab6c014deb/dictondisk-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "c6b58cee6856d1e55b941bf8ee5ef66c", "sha256": "54d074b137fff8c5537b4e4ed490c5244b8dba534db8628e32ca1bb1bbd3d6ee"}, "downloads": -1, "filename": "dictondisk-1.2.tar.gz", "has_sig": false, "md5_digest": "c6b58cee6856d1e55b941bf8ee5ef66c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5232, "upload_time": "2019-09-13T20:06:23", "upload_time_iso_8601": "2019-09-13T20:06:23.148272Z", "url": "https://files.pythonhosted.org/packages/1b/b7/2fd96ecc857328295b48444a6c61bd88e3bd754198cbbfa7dd8530d2818e/dictondisk-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "c09e4e20bb5abda2e15a699d91d41fbd", "sha256": "6cefdf20bb7b77b037c23dc3acd6514fccc82dbd1b79c82fcc25f235cbeb3410"}, "downloads": -1, "filename": "dictondisk-1.3.tar.gz", "has_sig": false, "md5_digest": "c09e4e20bb5abda2e15a699d91d41fbd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5304, "upload_time": "2019-09-15T15:55:43", "upload_time_iso_8601": "2019-09-15T15:55:43.417190Z", "url": "https://files.pythonhosted.org/packages/74/ee/c0386fee9b1a8e7267eff4945a2daeeea07cdeb6b403ba621e33cebd31a5/dictondisk-1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c09e4e20bb5abda2e15a699d91d41fbd", "sha256": "6cefdf20bb7b77b037c23dc3acd6514fccc82dbd1b79c82fcc25f235cbeb3410"}, "downloads": -1, "filename": "dictondisk-1.3.tar.gz", "has_sig": false, "md5_digest": "c09e4e20bb5abda2e15a699d91d41fbd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5304, "upload_time": "2019-09-15T15:55:43", "upload_time_iso_8601": "2019-09-15T15:55:43.417190Z", "url": "https://files.pythonhosted.org/packages/74/ee/c0386fee9b1a8e7267eff4945a2daeeea07cdeb6b403ba621e33cebd31a5/dictondisk-1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:32 2020"}