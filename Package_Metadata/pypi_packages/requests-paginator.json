{"info": {"author": "chris48s", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3"], "description": "# requests-paginator\n\n![PyPI Version](https://img.shields.io/pypi/v/requests-paginator.svg)\n![License](https://img.shields.io/pypi/l/requests-paginator.svg)\n\nA generator for iterating over paginated API responses\n\n## Installation\n\n```\npip install requests-paginator\n```\n\n## Usage\n\nInstantiate `RequestsPaginator` with:\n\n* A URL to page 1 of the API output\n* A function (or lambda) `get_nextpage(page)` which describes how to get the next page:\n    * Return `None` to stop iteration.\n    * `page` is an instance of [`requests.models.Response`](http://docs.python-requests.org/en/master/user/quickstart/#response-content)\n\nExamples:\n\n```py\nfrom requests_paginator import RequestsPaginator\n\nBASE = 'https://galaxy.ansible.com'\n\ndef get_next_page(page):\n    body = page.json()\n    if body['next_link']:\n        return BASE +  body['next_link']\n    return None\n\n# instantiate the paginator\npages = RequestsPaginator(\n    BASE + '/api/v1/categories/?page=1',\n    get_next_page\n)\n\n# iterate over the pages\nfor page in pages:\n    print(\"calling %s\" % (page.url))\n    page.raise_for_status()\n    print(\"found %s results\" % (len(page.json()['results'])))\n```\n\n```py\nfrom requests_paginator import RequestsPaginator\n\ndef get_next_page(page):\n    links = {}\n    if \"Link\" in page.headers:\n        linkHeaders = page.headers[\"Link\"].split(\", \")\n        for linkHeader in linkHeaders:\n            (url, rel) = linkHeader.split(\"; \")\n            url = url[1:-1]\n            rel = rel[5:-1]\n            if rel == 'next':\n                return url\n    return None\n\n# instantiate the paginator\npages = RequestsPaginator(\n    'https://api.github.com/users/github/repos?page=1',\n    get_next_page\n)\n\n# iterate over the pages\nfor page in pages:\n    print(\"calling %s\" % (page.url))\n    page.raise_for_status()\n    print(\"found %s results\" % (len(page.json())))\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/chris48s/requests-paginator", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "requests-paginator", "package_url": "https://pypi.org/project/requests-paginator/", "platform": "", "project_url": "https://pypi.org/project/requests-paginator/", "project_urls": {"Homepage": "https://github.com/chris48s/requests-paginator"}, "release_url": "https://pypi.org/project/requests-paginator/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "A generator for iterating over paginated API responses", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>requests-paginator</h1>\n<p><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7efebe94050d2d4061962b710200e94bc7f9e70a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f72657175657374732d706167696e61746f722e737667\">\n<img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/316cddab4403b1e3d4a1cdeb91d8c5ae98e5423b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f72657175657374732d706167696e61746f722e737667\"></p>\n<p>A generator for iterating over paginated API responses</p>\n<h2>Installation</h2>\n<pre><code>pip install requests-paginator\n</code></pre>\n<h2>Usage</h2>\n<p>Instantiate <code>RequestsPaginator</code> with:</p>\n<ul>\n<li>A URL to page 1 of the API output</li>\n<li>A function (or lambda) <code>get_nextpage(page)</code> which describes how to get the next page:\n<ul>\n<li>Return <code>None</code> to stop iteration.</li>\n<li><code>page</code> is an instance of <a href=\"http://docs.python-requests.org/en/master/user/quickstart/#response-content\" rel=\"nofollow\"><code>requests.models.Response</code></a></li>\n</ul>\n</li>\n</ul>\n<p>Examples:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">requests_paginator</span> <span class=\"kn\">import</span> <span class=\"n\">RequestsPaginator</span>\n\n<span class=\"n\">BASE</span> <span class=\"o\">=</span> <span class=\"s1\">'https://galaxy.ansible.com'</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">get_next_page</span><span class=\"p\">(</span><span class=\"n\">page</span><span class=\"p\">):</span>\n    <span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">body</span><span class=\"p\">[</span><span class=\"s1\">'next_link'</span><span class=\"p\">]:</span>\n        <span class=\"k\">return</span> <span class=\"n\">BASE</span> <span class=\"o\">+</span>  <span class=\"n\">body</span><span class=\"p\">[</span><span class=\"s1\">'next_link'</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n<span class=\"c1\"># instantiate the paginator</span>\n<span class=\"n\">pages</span> <span class=\"o\">=</span> <span class=\"n\">RequestsPaginator</span><span class=\"p\">(</span>\n    <span class=\"n\">BASE</span> <span class=\"o\">+</span> <span class=\"s1\">'/api/v1/categories/?page=1'</span><span class=\"p\">,</span>\n    <span class=\"n\">get_next_page</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># iterate over the pages</span>\n<span class=\"k\">for</span> <span class=\"n\">page</span> <span class=\"ow\">in</span> <span class=\"n\">pages</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"calling </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">))</span>\n    <span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">raise_for_status</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"found </span><span class=\"si\">%s</span><span class=\"s2\"> results\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()[</span><span class=\"s1\">'results'</span><span class=\"p\">])))</span>\n</pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">requests_paginator</span> <span class=\"kn\">import</span> <span class=\"n\">RequestsPaginator</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">get_next_page</span><span class=\"p\">(</span><span class=\"n\">page</span><span class=\"p\">):</span>\n    <span class=\"n\">links</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n    <span class=\"k\">if</span> <span class=\"s2\">\"Link\"</span> <span class=\"ow\">in</span> <span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">:</span>\n        <span class=\"n\">linkHeaders</span> <span class=\"o\">=</span> <span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">[</span><span class=\"s2\">\"Link\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">\", \"</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">linkHeader</span> <span class=\"ow\">in</span> <span class=\"n\">linkHeaders</span><span class=\"p\">:</span>\n            <span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">rel</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">linkHeader</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">\"; \"</span><span class=\"p\">)</span>\n            <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">url</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n            <span class=\"n\">rel</span> <span class=\"o\">=</span> <span class=\"n\">rel</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"n\">rel</span> <span class=\"o\">==</span> <span class=\"s1\">'next'</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">url</span>\n    <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n<span class=\"c1\"># instantiate the paginator</span>\n<span class=\"n\">pages</span> <span class=\"o\">=</span> <span class=\"n\">RequestsPaginator</span><span class=\"p\">(</span>\n    <span class=\"s1\">'https://api.github.com/users/github/repos?page=1'</span><span class=\"p\">,</span>\n    <span class=\"n\">get_next_page</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># iterate over the pages</span>\n<span class=\"k\">for</span> <span class=\"n\">page</span> <span class=\"ow\">in</span> <span class=\"n\">pages</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"calling </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">))</span>\n    <span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">raise_for_status</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"found </span><span class=\"si\">%s</span><span class=\"s2\"> results\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">())))</span>\n</pre>\n\n          </div>"}, "last_serial": 4666082, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "73609b7b19d591cd18b14e89abe8923f", "sha256": "3ca5709e8c6249f805a00850d0ae10e3d163c51ec5af1fc0f75ba32a0a9cc490"}, "downloads": -1, "filename": "requests-paginator-0.2.0.tar.gz", "has_sig": false, "md5_digest": "73609b7b19d591cd18b14e89abe8923f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2102, "upload_time": "2019-01-06T17:07:21", "upload_time_iso_8601": "2019-01-06T17:07:21.401635Z", "url": "https://files.pythonhosted.org/packages/cf/32/a08732040bf2184ba6d44ef48a0b016544dae7c0117784245800347a4fea/requests-paginator-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "73609b7b19d591cd18b14e89abe8923f", "sha256": "3ca5709e8c6249f805a00850d0ae10e3d163c51ec5af1fc0f75ba32a0a9cc490"}, "downloads": -1, "filename": "requests-paginator-0.2.0.tar.gz", "has_sig": false, "md5_digest": "73609b7b19d591cd18b14e89abe8923f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2102, "upload_time": "2019-01-06T17:07:21", "upload_time_iso_8601": "2019-01-06T17:07:21.401635Z", "url": "https://files.pythonhosted.org/packages/cf/32/a08732040bf2184ba6d44ef48a0b016544dae7c0117784245800347a4fea/requests-paginator-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:02 2020"}