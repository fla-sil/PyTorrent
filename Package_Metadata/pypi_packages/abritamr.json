{"info": {"author": "Kristy Horan", "author_email": "kristyhoran15@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "# abriTAMR\n\n[![CircleCI](https://circleci.com/gh/MDU-PHL/abritamr.svg?style=svg&circle-token=a54d59b013a30a507621695e738f0a72e47d6969)](https://circleci.com/gh/MDU-PHL/abritamr)\n\nabriTAMR is an AMR gene detection pipeline that runs AMRFinderPlus on a list of given isolates and collates the results into a table, separating genes identified into functionally relevant groups.\n\n\n## Command-line tool\n\n`abritamr`:\n\n```bash\nabritamr --help\nusage: abritamr [-h] [--mduqc] [--qc QC] [--positive_control POSITIVE_CONTROL]\n                [--Singularity] [--singularity_path SINGULARITY_PATH]\n                [--contigs CONTIGS] [--amrfinder_output AMRFINDER_OUTPUT]\n                [--workdir WORKDIR] [--resources RESOURCES]\n                [--drug_classes DRUG_CLASSES] [--jobs JOBS] [--keep]\n\nMDU AMR gene detection pipeline\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --mduqc, -m           Set if running on MDU QC data. If set please provide\n                        the MDU QC .csv as further input and an additional\n                        output suitable for lims input will be provided.\n                        (default: False)\n  --qc QC, -q QC        Name of checked MDU QC file. (default:\n                        mdu_qc_checked.csv)\n  --positive_control POSITIVE_CONTROL, -p POSITIVE_CONTROL\n                        Path to positive control sequence - must be set if\n                        using -m (default: )\n  --Singularity, -S     If using singularity container for AMRfinderplus\n                        (default: False)\n  --singularity_path SINGULARITY_PATH, -s SINGULARITY_PATH\n                        Path to the singularity container for AMRfinderplus,\n                        if empty will defualt to shub://phgenomics-\n                        singularity/amrfinderplus (default: )\n  --contigs CONTIGS, -c CONTIGS\n                        Tab-delimited file with sample ID as column 1 and path\n                        to assemblies as column 2 (default: )\n  --amrfinder_output AMRFINDER_OUTPUT, -o AMRFINDER_OUTPUT\n                        Tab-delimited file with sample ID as column 1 and path\n                        to amr_finder output files as column 2 (default: )\n  --workdir WORKDIR, -w WORKDIR\n                        Working directory, default is current directory\n                        (default: /home/khhor/MDU/JOBS/ad_hoc/abritamr_in_para\n                        llel/20191206)\n  --resources RESOURCES, -r RESOURCES\n                        Directory where templates are stored (default: /home/k\n                        hhor/miniconda3/envs/abritamr/lib/python3.7/site-\n                        packages/abritamr)\n  --drug_classes DRUG_CLASSES, -d DRUG_CLASSES\n                        Path to file (default: /home/khhor/miniconda3/envs/abr\n                        itamr/lib/python3.7/site-\n                        packages/abritamr/db/refgenes.csv)\n  --jobs JOBS, -j JOBS  Number of AMR finder jobs to run in parallel.\n                        (default: 16)\n  --keep, -k            If you would like to keep intermediate files and\n                        snakemake log. Default is to remove (default: False)\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MDU-PHL/abritamr", "keywords": "", "license": "", "maintainer": "Kristy Horan", "maintainer_email": "kristyhoran15@gmail.com", "name": "abritamr", "package_url": "https://pypi.org/project/abritamr/", "platform": "", "project_url": "https://pypi.org/project/abritamr/", "project_urls": {"Homepage": "https://github.com/MDU-PHL/abritamr"}, "release_url": "https://pypi.org/project/abritamr/0.2.0/", "requires_dist": ["snakemake", "pandas", "click", "jinja2", "toml", "xlsxwriter"], "requires_python": ">=3.7, <4", "summary": "Running AMRFinderPlus for MDU", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>abriTAMR</h1>\n<p><a href=\"https://circleci.com/gh/MDU-PHL/abritamr\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c8ee64ba518f26795ca793ec3ee9641178157c05/68747470733a2f2f636972636c6563692e636f6d2f67682f4d44552d50484c2f6162726974616d722e7376673f7374796c653d73766726636972636c652d746f6b656e3d61353464353962303133613330613530373632313639356537333866306137326534376436393639\"></a></p>\n<p>abriTAMR is an AMR gene detection pipeline that runs AMRFinderPlus on a list of given isolates and collates the results into a table, separating genes identified into functionally relevant groups.</p>\n<h2>Command-line tool</h2>\n<p><code>abritamr</code>:</p>\n<pre>abritamr --help\nusage: abritamr <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>--mduqc<span class=\"o\">]</span> <span class=\"o\">[</span>--qc QC<span class=\"o\">]</span> <span class=\"o\">[</span>--positive_control POSITIVE_CONTROL<span class=\"o\">]</span>\n                <span class=\"o\">[</span>--Singularity<span class=\"o\">]</span> <span class=\"o\">[</span>--singularity_path SINGULARITY_PATH<span class=\"o\">]</span>\n                <span class=\"o\">[</span>--contigs CONTIGS<span class=\"o\">]</span> <span class=\"o\">[</span>--amrfinder_output AMRFINDER_OUTPUT<span class=\"o\">]</span>\n                <span class=\"o\">[</span>--workdir WORKDIR<span class=\"o\">]</span> <span class=\"o\">[</span>--resources RESOURCES<span class=\"o\">]</span>\n                <span class=\"o\">[</span>--drug_classes DRUG_CLASSES<span class=\"o\">]</span> <span class=\"o\">[</span>--jobs JOBS<span class=\"o\">]</span> <span class=\"o\">[</span>--keep<span class=\"o\">]</span>\n\nMDU AMR gene detection pipeline\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --mduqc, -m           Set <span class=\"k\">if</span> running on MDU QC data. If <span class=\"nb\">set</span> please provide\n                        the MDU QC .csv as further input and an additional\n                        output suitable <span class=\"k\">for</span> lims input will be provided.\n                        <span class=\"o\">(</span>default: False<span class=\"o\">)</span>\n  --qc QC, -q QC        Name of checked MDU QC file. <span class=\"o\">(</span>default:\n                        mdu_qc_checked.csv<span class=\"o\">)</span>\n  --positive_control POSITIVE_CONTROL, -p POSITIVE_CONTROL\n                        Path to positive control sequence - must be <span class=\"nb\">set</span> <span class=\"k\">if</span>\n                        using -m <span class=\"o\">(</span>default: <span class=\"o\">)</span>\n  --Singularity, -S     If using singularity container <span class=\"k\">for</span> AMRfinderplus\n                        <span class=\"o\">(</span>default: False<span class=\"o\">)</span>\n  --singularity_path SINGULARITY_PATH, -s SINGULARITY_PATH\n                        Path to the singularity container <span class=\"k\">for</span> AMRfinderplus,\n                        <span class=\"k\">if</span> empty will defualt to shub://phgenomics-\n                        singularity/amrfinderplus <span class=\"o\">(</span>default: <span class=\"o\">)</span>\n  --contigs CONTIGS, -c CONTIGS\n                        Tab-delimited file with sample ID as column <span class=\"m\">1</span> and path\n                        to assemblies as column <span class=\"m\">2</span> <span class=\"o\">(</span>default: <span class=\"o\">)</span>\n  --amrfinder_output AMRFINDER_OUTPUT, -o AMRFINDER_OUTPUT\n                        Tab-delimited file with sample ID as column <span class=\"m\">1</span> and path\n                        to amr_finder output files as column <span class=\"m\">2</span> <span class=\"o\">(</span>default: <span class=\"o\">)</span>\n  --workdir WORKDIR, -w WORKDIR\n                        Working directory, default is current directory\n                        <span class=\"o\">(</span>default: /home/khhor/MDU/JOBS/ad_hoc/abritamr_in_para\n                        llel/20191206<span class=\"o\">)</span>\n  --resources RESOURCES, -r RESOURCES\n                        Directory where templates are stored <span class=\"o\">(</span>default: /home/k\n                        hhor/miniconda3/envs/abritamr/lib/python3.7/site-\n                        packages/abritamr<span class=\"o\">)</span>\n  --drug_classes DRUG_CLASSES, -d DRUG_CLASSES\n                        Path to file <span class=\"o\">(</span>default: /home/khhor/miniconda3/envs/abr\n                        itamr/lib/python3.7/site-\n                        packages/abritamr/db/refgenes.csv<span class=\"o\">)</span>\n  --jobs JOBS, -j JOBS  Number of AMR finder <span class=\"nb\">jobs</span> to run in parallel.\n                        <span class=\"o\">(</span>default: <span class=\"m\">16</span><span class=\"o\">)</span>\n  --keep, -k            If you would like to keep intermediate files and\n                        snakemake log. Default is to remove <span class=\"o\">(</span>default: False<span class=\"o\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6448516, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "64e0caee0cffc2d6186b6ac1c938b33d", "sha256": "6fc9f484e4bc71782512e4813802775ac6a5220623e664077cc3062e0dbe2534"}, "downloads": -1, "filename": "abritamr-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "64e0caee0cffc2d6186b6ac1c938b33d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7, <4", "size": 317511, "upload_time": "2019-12-08T23:29:56", "upload_time_iso_8601": "2019-12-08T23:29:56.541437Z", "url": "https://files.pythonhosted.org/packages/44/e8/8c8a956c00ad20a9b70e2e2df29ef205c086f68093341a5dcc18308e83e0/abritamr-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9644fddbc70ea3f4c9431446985d16a8", "sha256": "27d767ea45635e83eb015db2c6ddffed1cd68d0cec905c1eee53dcf73270f57e"}, "downloads": -1, "filename": "abritamr-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9644fddbc70ea3f4c9431446985d16a8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <4", "size": 304335, "upload_time": "2019-12-08T23:30:00", "upload_time_iso_8601": "2019-12-08T23:30:00.093128Z", "url": "https://files.pythonhosted.org/packages/6d/1f/ec9fe5986578121d2faa58e6fae36a9d5bc898367464f6c04fe4f0087123/abritamr-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "3119d3f2cc79423f59ebbbd8b161683e", "sha256": "26e1386bc0e8cbe41019f18c32ba1a470572f93ad38021beb8b7f4ba9880cf6d"}, "downloads": -1, "filename": "abritamr-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3119d3f2cc79423f59ebbbd8b161683e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7, <4", "size": 476525, "upload_time": "2020-01-14T02:17:12", "upload_time_iso_8601": "2020-01-14T02:17:12.179118Z", "url": "https://files.pythonhosted.org/packages/f8/c2/e3d7bd8af02cbfd1f7ee26765ee02bb77b69702aa7aa20fd032afb651e89/abritamr-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "40cdc07651afbf233059c779046f3d35", "sha256": "067a1fdd17ed24b0b031c7e5a00619049c1e3e0cf724b3bc1d8c20b8c372c34b"}, "downloads": -1, "filename": "abritamr-0.2.0.tar.gz", "has_sig": false, "md5_digest": "40cdc07651afbf233059c779046f3d35", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <4", "size": 454644, "upload_time": "2020-01-14T02:17:14", "upload_time_iso_8601": "2020-01-14T02:17:14.894070Z", "url": "https://files.pythonhosted.org/packages/cf/c2/70e02f1acae8e610fce562c7276e02621d862c76ec147d7ad5cbca29c74d/abritamr-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3119d3f2cc79423f59ebbbd8b161683e", "sha256": "26e1386bc0e8cbe41019f18c32ba1a470572f93ad38021beb8b7f4ba9880cf6d"}, "downloads": -1, "filename": "abritamr-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3119d3f2cc79423f59ebbbd8b161683e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7, <4", "size": 476525, "upload_time": "2020-01-14T02:17:12", "upload_time_iso_8601": "2020-01-14T02:17:12.179118Z", "url": "https://files.pythonhosted.org/packages/f8/c2/e3d7bd8af02cbfd1f7ee26765ee02bb77b69702aa7aa20fd032afb651e89/abritamr-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "40cdc07651afbf233059c779046f3d35", "sha256": "067a1fdd17ed24b0b031c7e5a00619049c1e3e0cf724b3bc1d8c20b8c372c34b"}, "downloads": -1, "filename": "abritamr-0.2.0.tar.gz", "has_sig": false, "md5_digest": "40cdc07651afbf233059c779046f3d35", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <4", "size": 454644, "upload_time": "2020-01-14T02:17:14", "upload_time_iso_8601": "2020-01-14T02:17:14.894070Z", "url": "https://files.pythonhosted.org/packages/cf/c2/70e02f1acae8e610fce562c7276e02621d862c76ec147d7ad5cbca29c74d/abritamr-0.2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:24:58 2020"}