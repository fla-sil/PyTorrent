{"info": {"author": "Dan Colish", "author_email": "dcolish@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Work\n====\n\nStupid simple time tracking\n\nTracking time for your agile work shouldn't be hard. Work is here to help keep\nit that way. Starting tasks starts the timer. Starting another stops any which\nare in progress. You can also manually stop. Listing shows a nice chart of what\nyou've done and gives me detail only when you ask for it.\n\nUsage\n=====\n\nEventually the recorded time spans will be shown to the user to give insite into\nwork habits. For now the cummulative is the only user facing data show and can\nbe reset to only track the most relevent time span for an event.\n\n\nThe command interface for work is terminal based. To start a task::\n\n    $ work start mytask\n\nTo stop a task::\n   \n    $ work stop\n\nThis will stop the currently active task. To start that same task again::\n\n    $ work start\n\nTo get the status on what job is currently running::\n    \n    $ work status\n\nTo see all the tasks with their cummulative time::\n\n    $ work list\n\nTo reset the cummulative time, this will not delete all the recorded timespans::\n\n    $ work reset\n\n\nAvailability\n============\n\nThe git `work HEAD`_ can be installed via ``pip install work==dev``.\n\n.. _work HEAD: https://github.com/dcolish/work/tarball/master#egg=work-dev", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "GPLv3", "maintainer": null, "maintainer_email": null, "name": "Work", "package_url": "https://pypi.org/project/Work/", "platform": "any", "project_url": "https://pypi.org/project/Work/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/Work/dev/", "requires_dist": null, "requires_python": null, "summary": "Agile work time tracker", "version": "dev", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"work\">\n<h2>Work</h2>\n<p>Stupid simple time tracking</p>\n<p>Tracking time for your agile work shouldn\u2019t be hard. Work is here to help keep\nit that way. Starting tasks starts the timer. Starting another stops any which\nare in progress. You can also manually stop. Listing shows a nice chart of what\nyou\u2019ve done and gives me detail only when you ask for it.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Eventually the recorded time spans will be shown to the user to give insite into\nwork habits. For now the cummulative is the only user facing data show and can\nbe reset to only track the most relevent time span for an event.</p>\n<p>The command interface for work is terminal based. To start a task:</p>\n<pre>$ work start mytask\n</pre>\n<p>To stop a task:</p>\n<pre>$ work stop\n</pre>\n<p>This will stop the currently active task. To start that same task again:</p>\n<pre>$ work start\n</pre>\n<p>To get the status on what job is currently running:</p>\n<pre>$ work status\n</pre>\n<p>To see all the tasks with their cummulative time:</p>\n<pre>$ work list\n</pre>\n<p>To reset the cummulative time, this will not delete all the recorded timespans:</p>\n<pre>$ work reset\n</pre>\n</div>\n<div id=\"availability\">\n<h2>Availability</h2>\n<p>The git <a href=\"https://github.com/dcolish/work/tarball/master#egg=work-dev\" rel=\"nofollow\">work HEAD</a> can be installed via <tt>pip install <span class=\"pre\">work==dev</span></tt>.</p>\n</div>\n\n          </div>"}, "last_serial": 802748, "releases": {"dev": []}, "urls": [], "timestamp": "Fri May  8 03:27:56 2020"}