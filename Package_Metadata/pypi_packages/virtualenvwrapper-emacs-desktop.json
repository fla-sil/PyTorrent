{"info": {"author": "Doug Hellmann", "author_email": "doug.hellmann@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python"], "description": "=================================================\n Using Emacs Desktop Mode with Virtualenvwrapper\n=================================================\n\nEmacs desktop-mode_ lets you save the state of emacs (open buffers,\nkill rings, buffer positions, etc.) between sessions.  It can also be\nused as a project file similar to other IDEs.  This virtualenvwrapper_\nplugin adds a trigger to save the current desktop file and load a new\none when activating a new virtualenv using ``workon``.\n\nInstallation\n============\n\nInstall this plugin with pip::\n\n  $ pip install virtualenvwrapper-emacs-desktop\n\nOr by unpacking the source distribution and running ``setup.py`` directly::\n\n  $ tar zxvf virtualenvwrapper-emacs-desktop-X.Y.tar.gz\n  $ cd virtualenvwrapper-emacs-desktop-X.Y\n  $ python setup.py install\n\nYou may need administrator privileges to install to a global location.\n\nConfiguring Desktop Mode in Emacs\n=================================\n\nSetup of desktop-mode is straightforward:\n\n1. Run ``customize-group`` on the \"desktop\" group.\n\n2. Turn ``desktop-save-mode`` **on** to enable the minor mode.\n\n3. Optionally change the base name for desktop files in\n   ``desktop-base-file-name``. For example, using \"emacs.desktop\"\n   means the file will not be hidden.\n\n4. Set a default search path for the desktop file in ``desktop-path``.\n   Use your home directory, or the directory where you keep your emacs\n   configuration files (``~/emacs.d`` or ``~/emacs``).  This value is\n   the *default*.  Your real desktop files will be saved into the\n   virtualenv directories.\n\n5. Set ``desktop-save`` to **Always save**. There are other values\n   that work, but some require interaction with the editor during the\n   context move to confirm file saves.\n\nThere are a few other options that may be useful to tweak, depending\non the other features of emacs you use. For example,\n``desktop-clear-preserve-buffers`` lets you control which buffers are\nsaved when the desktop is cleared on a reload.  It may be useful to\nsave the ``*Messages*``, ``*Org Agenda*``, and ``*scratch*`` buffers,\nsince those are related to emacs operation and not limited to any one\nproject.\n\nVIRTUALENVWRAPPER_EMACSCLIENT\n-----------------------------\n\nIf the ``emacsclient`` binary visible on your ``$PATH`` does not match\nthe version of emacs you are using, set\n``VIRTUALENVWRAPPER_EMACSCLIENT`` to the full path of the version to\nuse instead.\n\n::\n\n    export VIRTUALENVWRAPPER_EMACSCLIENT=/Applications/Emacs.app/Contents/MacOS/bin/emacsclient\n\nEnabling the Plugin\n===================\n\nSwitching desktop sessions every time ``workon`` is used would make it\nimpossible to have two shells open and working on separate projects at\nthe same time.  Therefore, the plugin must be explicitly enabled in\nthe shell where it should control the emacs session.\n\nTwo shell functions (``emacs_desktop_controller_on`` and\n``emacs_desktop_controller_off``) are provided to switch the plugin on\nand off.  They do this by changing the variable\n``DESKTOP_CONTROLLER``, which the plugin examines before taking any\naction.  If the variable is not set, or is defined but empty, the\nplugin makes no changes.  If the variable is set to any value, the\nsession is changed.\n\nMost modern terminal programs make it easy to create custom\nconfigurations with specific settings.  Use your terminal's\ncustomization feature to create a \"desktop controller\" configuration\nwith ``DESKTOP_CONTROLLER`` set, then control\nvirtualenvwrapper-emacs-desktop from a terminal using that\nconfiguration.\n\nTerminal.app\n------------\n\nThe default OS X terminal emulator Terminal.app lets you set up\nprofiles with custom configurations, including running a command when\nthe new window is opened.  Create a new profile, then under the\n**Shell** tab, set:\n\n :Run command: emacs_desktop_controller_on\n :Run inside shell: Enabled\n\n\niTerm\n-----\n\nThe third-party OS X terminal emulator iTerm_ lets you set up\n\"bookmarks\" with custom configurations, including the \"Working Dir\".\nOne way to use this to control the plugin is to set up a special\nbookmark with a working directory set to ``$WORKON_HOME``, then add a\ncheck to ``~/.bashrc`` to check for that condition.\n\n :Name: emacs-control\n :Command: ``bash -l``\n :Working Dir: ``/Users/username/.virtualenvs``\n :Terminal: Default\n :Keyboard: Global\n :Display: Default\n\n~/.bashrc settings::\n\n    if [ \"$(pwd)\" = \"$WORKON_HOME\" ]\n    then\n        emacs_desktop_controller_on\n    else\n        emacs_desktop_controller_off\n    fi\n\n.. _iTerm: http://iterm.sourceforge.net/\n\nemacs shell\n-----------\n\nshell-mode in emacs sets ``EMACS`` and ``INSIDE_EMACS``, so you can\ntest for those environment variables.\n\nGnome Terminal\n--------------\n\n?\n\nKDE\n---\n\n?\n\n.. note::\n\n   If you have suggested configuration mechanisms for other terminal\n   emulators or other platforms, please post them in the comments and I\n   will add them to this README file.\n\nReferences\n==========\n\n* `Saving Emacs Sessions <http://www.gnu.org/software/emacs/manual/html_node/emacs/Saving-Emacs-Sessions.html>`__\n* `Desktop Save Mode <http://www.gnu.org/s/emacs/manual/html_node/elisp/Desktop-Save-Mode.html>`__\n* desktop-mode_\n* virtualenvwrapper_\n\n.. _desktop-mode: http://www.emacswiki.org/emacs/DeskTop\n\n.. _virtualenvwrapper: http://www.doughellmann.com/projects/virtualenvwrapper/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.doughellmann.com/projects/virtualenvwrapper-emacs-desktop/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "virtualenvwrapper-emacs-desktop", "package_url": "https://pypi.org/project/virtualenvwrapper-emacs-desktop/", "platform": "Any", "project_url": "https://pypi.org/project/virtualenvwrapper-emacs-desktop/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.doughellmann.com/projects/virtualenvwrapper-emacs-desktop/"}, "release_url": "https://pypi.org/project/virtualenvwrapper-emacs-desktop/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "virtualenvwrapper plugin to control emacs desktop mode", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Emacs <a href=\"http://www.emacswiki.org/emacs/DeskTop\" rel=\"nofollow\">desktop-mode</a> lets you save the state of emacs (open buffers,\nkill rings, buffer positions, etc.) between sessions.  It can also be\nused as a project file similar to other IDEs.  This <a href=\"http://www.doughellmann.com/projects/virtualenvwrapper/\" rel=\"nofollow\">virtualenvwrapper</a>\nplugin adds a trigger to save the current desktop file and load a new\none when activating a new virtualenv using <tt>workon</tt>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install this plugin with pip:</p>\n<pre>$ pip install virtualenvwrapper-emacs-desktop\n</pre>\n<p>Or by unpacking the source distribution and running <tt>setup.py</tt> directly:</p>\n<pre>$ tar zxvf virtualenvwrapper-emacs-desktop-X.Y.tar.gz\n$ cd virtualenvwrapper-emacs-desktop-X.Y\n$ python setup.py install\n</pre>\n<p>You may need administrator privileges to install to a global location.</p>\n</div>\n<div id=\"configuring-desktop-mode-in-emacs\">\n<h2>Configuring Desktop Mode in Emacs</h2>\n<p>Setup of desktop-mode is straightforward:</p>\n<ol>\n<li>Run <tt><span class=\"pre\">customize-group</span></tt> on the \u201cdesktop\u201d group.</li>\n<li>Turn <tt><span class=\"pre\">desktop-save-mode</span></tt> <strong>on</strong> to enable the minor mode.</li>\n<li>Optionally change the base name for desktop files in\n<tt><span class=\"pre\">desktop-base-file-name</span></tt>. For example, using \u201cemacs.desktop\u201d\nmeans the file will not be hidden.</li>\n<li>Set a default search path for the desktop file in <tt><span class=\"pre\">desktop-path</span></tt>.\nUse your home directory, or the directory where you keep your emacs\nconfiguration files (<tt>~/emacs.d</tt> or <tt>~/emacs</tt>).  This value is\nthe <em>default</em>.  Your real desktop files will be saved into the\nvirtualenv directories.</li>\n<li>Set <tt><span class=\"pre\">desktop-save</span></tt> to <strong>Always save</strong>. There are other values\nthat work, but some require interaction with the editor during the\ncontext move to confirm file saves.</li>\n</ol>\n<p>There are a few other options that may be useful to tweak, depending\non the other features of emacs you use. For example,\n<tt><span class=\"pre\">desktop-clear-preserve-buffers</span></tt> lets you control which buffers are\nsaved when the desktop is cleared on a reload.  It may be useful to\nsave the <tt>*Messages*</tt>, <tt>*Org Agenda*</tt>, and <tt>*scratch*</tt> buffers,\nsince those are related to emacs operation and not limited to any one\nproject.</p>\n<div id=\"virtualenvwrapper-emacsclient\">\n<h3>VIRTUALENVWRAPPER_EMACSCLIENT</h3>\n<p>If the <tt>emacsclient</tt> binary visible on your <tt>$PATH</tt> does not match\nthe version of emacs you are using, set\n<tt>VIRTUALENVWRAPPER_EMACSCLIENT</tt> to the full path of the version to\nuse instead.</p>\n<pre>export VIRTUALENVWRAPPER_EMACSCLIENT=/Applications/Emacs.app/Contents/MacOS/bin/emacsclient\n</pre>\n</div>\n</div>\n<div id=\"enabling-the-plugin\">\n<h2>Enabling the Plugin</h2>\n<p>Switching desktop sessions every time <tt>workon</tt> is used would make it\nimpossible to have two shells open and working on separate projects at\nthe same time.  Therefore, the plugin must be explicitly enabled in\nthe shell where it should control the emacs session.</p>\n<p>Two shell functions (<tt>emacs_desktop_controller_on</tt> and\n<tt>emacs_desktop_controller_off</tt>) are provided to switch the plugin on\nand off.  They do this by changing the variable\n<tt>DESKTOP_CONTROLLER</tt>, which the plugin examines before taking any\naction.  If the variable is not set, or is defined but empty, the\nplugin makes no changes.  If the variable is set to any value, the\nsession is changed.</p>\n<p>Most modern terminal programs make it easy to create custom\nconfigurations with specific settings.  Use your terminal\u2019s\ncustomization feature to create a \u201cdesktop controller\u201d configuration\nwith <tt>DESKTOP_CONTROLLER</tt> set, then control\nvirtualenvwrapper-emacs-desktop from a terminal using that\nconfiguration.</p>\n<div id=\"terminal-app\">\n<h3>Terminal.app</h3>\n<p>The default OS X terminal emulator Terminal.app lets you set up\nprofiles with custom configurations, including running a command when\nthe new window is opened.  Create a new profile, then under the\n<strong>Shell</strong> tab, set:</p>\n<blockquote>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Run command:</th><td>emacs_desktop_controller_on</td>\n</tr>\n<tr><th>Run inside shell:</th></tr>\n<tr><td>\u00a0</td><td>Enabled</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n</div>\n<div id=\"iterm\">\n<h3>iTerm</h3>\n<p>The third-party OS X terminal emulator <a href=\"http://iterm.sourceforge.net/\" rel=\"nofollow\">iTerm</a> lets you set up\n\u201cbookmarks\u201d with custom configurations, including the \u201cWorking Dir\u201d.\nOne way to use this to control the plugin is to set up a special\nbookmark with a working directory set to <tt>$WORKON_HOME</tt>, then add a\ncheck to <tt><span class=\"pre\">~/.bashrc</span></tt> to check for that condition.</p>\n<blockquote>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Name:</th><td>emacs-control</td>\n</tr>\n<tr><th>Command:</th><td><tt>bash <span class=\"pre\">-l</span></tt></td>\n</tr>\n<tr><th>Working Dir:</th><td><tt><span class=\"pre\">/Users/username/.virtualenvs</span></tt></td>\n</tr>\n<tr><th>Terminal:</th><td>Default</td>\n</tr>\n<tr><th>Keyboard:</th><td>Global</td>\n</tr>\n<tr><th>Display:</th><td>Default</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<p>~/.bashrc settings:</p>\n<pre>if [ \"$(pwd)\" = \"$WORKON_HOME\" ]\nthen\n    emacs_desktop_controller_on\nelse\n    emacs_desktop_controller_off\nfi\n</pre>\n</div>\n<div id=\"emacs-shell\">\n<h3>emacs shell</h3>\n<p>shell-mode in emacs sets <tt>EMACS</tt> and <tt>INSIDE_EMACS</tt>, so you can\ntest for those environment variables.</p>\n</div>\n<div id=\"gnome-terminal\">\n<h3>Gnome Terminal</h3>\n<p>?</p>\n</div>\n<div id=\"kde\">\n<h3>KDE</h3>\n<p>?</p>\n<div>\n<p>Note</p>\n<p>If you have suggested configuration mechanisms for other terminal\nemulators or other platforms, please post them in the comments and I\nwill add them to this README file.</p>\n</div>\n</div>\n</div>\n<div id=\"references\">\n<h2>References</h2>\n<ul>\n<li><a href=\"http://www.gnu.org/software/emacs/manual/html_node/emacs/Saving-Emacs-Sessions.html\" rel=\"nofollow\">Saving Emacs Sessions</a></li>\n<li><a href=\"http://www.gnu.org/s/emacs/manual/html_node/elisp/Desktop-Save-Mode.html\" rel=\"nofollow\">Desktop Save Mode</a></li>\n<li><a href=\"http://www.emacswiki.org/emacs/DeskTop\" rel=\"nofollow\">desktop-mode</a></li>\n<li><a href=\"http://www.doughellmann.com/projects/virtualenvwrapper/\" rel=\"nofollow\">virtualenvwrapper</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 801417, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "e1901addaec140fc426b68c90cff7aa4", "sha256": "02a1eecf818b330e533f0d362a27c9a0b5631f845a8ace953df63b194e2473f0"}, "downloads": -1, "filename": "virtualenvwrapper-emacs-desktop-1.0.tar.gz", "has_sig": false, "md5_digest": "e1901addaec140fc426b68c90cff7aa4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5958, "upload_time": "2011-04-24T18:24:14", "upload_time_iso_8601": "2011-04-24T18:24:14.282654Z", "url": "https://files.pythonhosted.org/packages/9c/54/5023cc9f19338bc2db4d0fd83a800d24737b836755ea46bfe34410a81f3f/virtualenvwrapper-emacs-desktop-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "63a8b380fe3b3521243dae470e00d018", "sha256": "86c18361effad5f04d676bdcbc1d5f1fa2bf44787070587b0425531a3089ff15"}, "downloads": -1, "filename": "virtualenvwrapper-emacs-desktop-1.0.1.tar.gz", "has_sig": false, "md5_digest": "63a8b380fe3b3521243dae470e00d018", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10206, "upload_time": "2012-02-26T21:09:21", "upload_time_iso_8601": "2012-02-26T21:09:21.905142Z", "url": "https://files.pythonhosted.org/packages/85/22/25f22f785066ca9b5eed6f1fdcdedc292d16efd89a6108338dd7d3db52b6/virtualenvwrapper-emacs-desktop-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "63a8b380fe3b3521243dae470e00d018", "sha256": "86c18361effad5f04d676bdcbc1d5f1fa2bf44787070587b0425531a3089ff15"}, "downloads": -1, "filename": "virtualenvwrapper-emacs-desktop-1.0.1.tar.gz", "has_sig": false, "md5_digest": "63a8b380fe3b3521243dae470e00d018", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10206, "upload_time": "2012-02-26T21:09:21", "upload_time_iso_8601": "2012-02-26T21:09:21.905142Z", "url": "https://files.pythonhosted.org/packages/85/22/25f22f785066ca9b5eed6f1fdcdedc292d16efd89a6108338dd7d3db52b6/virtualenvwrapper-emacs-desktop-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:35:27 2020"}