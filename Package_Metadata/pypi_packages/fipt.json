{"info": {"author": "Deniz Bozyigit", "author_email": "deniz195@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6"], "description": "# FIPT: Fast impedance tortuosity \n\nFIPT is a measurement technique that allows a fast determination of the ionic resistance for battery electrodes. The technique is based on the work by J. Landesfeind ([DOI: 10.1149/issn.1945-7111](https://dx.doi.org/10.1149/2.1141607jes)) and then optimized for execution speed at Battrion.\n\nThe measurement setup can be built based on [https://github.com/deniz195/fipt](https://github.com/deniz195/fipt)\n\nThe data aquired in an FIPT measurement can be analyzed by the code in this repository. The code fits an analytical model to the data to determine the relevant parameters of the measurement:\n```\nr_ion - Ionic resistance\nr_sep - Seperator resistance\nchisqr - \u03c72 as quality of fit\ngamma - Phase exponent\nq_s   - Capacitance factor\n```\n\nThe ionic resistance can be used to calculate the MacMullin number (and the tortuosity), which are important performance parameters of battery electrodes.\n\n## Quick analysis\nIf you want to quickly analyze your impedance data:\n\nInstall fipt-analysis:\n```bash\npip install fipt\n```\n\nPut the test data `test_data_001.csv` from the `examples` folder in your current folder. Analyze the data:\n\n```bash\npython -m fipt ./my_fipt_data_1234.csv\n```\n\nTo analyze your own data, put it in a file with the same format as `test_data_001.csv`, which is:\n```\nFormat: CSV\n1st column, Frequency in [Hz]\n2nd column, Z' in [Ohm] \n3rd column, Z'' in [Ohm]\n(Name of columns is not important)\n```\n\n## Examples \nTo see how to analyze fipt data in your own python code, refer to the jupyter notebook `demo_fipt.ipyn` in the examples folder.\n\n## Features and known issues\nThe code was optimized to allow the fitting and analysis of large numbers of data files, with minimum user intervention. The key features of the code are:\n\n- Robust estimation of starting parameters from raw data\n- Resistance to outlier data points through use of Student-T likelihood function\n- Ability to verify each fit, through automatic generation of result files (plots, statistics, etc.)\n\nKnown issues:\n- The code is currently provided with a minimum of documentation.\n- Calculation of MacMullin number and tortuosity not yet included\n\n## Requirements\nRequired packages are `numpy`, `scipy` for data and statistical models and `lmfit` to perform the model fitting.\n\nIt is recommended (but not necessary) to install matplotlib installed, so that fipt-analysis will be able to create plots of the fitting.\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nPlease make sure to update tests as appropriate.\n\nFor questions please feel free to reach out to Deniz Bozyigit ([dbozyigit@battrion.com](mailto:dbozyigit@battrion.com))\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/deniz195/fipt-analysis", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "fipt", "package_url": "https://pypi.org/project/fipt/", "platform": "", "project_url": "https://pypi.org/project/fipt/", "project_urls": {"Homepage": "https://github.com/deniz195/fipt-analysis"}, "release_url": "https://pypi.org/project/fipt/0.1.1/", "requires_dist": ["lmfit", "numpy", "scipy", "pandas; extra == 'dev'", "pytest; extra == 'dev'"], "requires_python": "", "summary": "A python module to analyze fast impedance tortuosity measurements.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>FIPT: Fast impedance tortuosity</h1>\n<p>FIPT is a measurement technique that allows a fast determination of the ionic resistance for battery electrodes. The technique is based on the work by J. Landesfeind (<a href=\"https://dx.doi.org/10.1149/2.1141607jes\" rel=\"nofollow\">DOI: 10.1149/issn.1945-7111</a>) and then optimized for execution speed at Battrion.</p>\n<p>The measurement setup can be built based on <a href=\"https://github.com/deniz195/fipt\" rel=\"nofollow\">https://github.com/deniz195/fipt</a></p>\n<p>The data aquired in an FIPT measurement can be analyzed by the code in this repository. The code fits an analytical model to the data to determine the relevant parameters of the measurement:</p>\n<pre><code>r_ion - Ionic resistance\nr_sep - Seperator resistance\nchisqr - \u03c72 as quality of fit\ngamma - Phase exponent\nq_s   - Capacitance factor\n</code></pre>\n<p>The ionic resistance can be used to calculate the MacMullin number (and the tortuosity), which are important performance parameters of battery electrodes.</p>\n<h2>Quick analysis</h2>\n<p>If you want to quickly analyze your impedance data:</p>\n<p>Install fipt-analysis:</p>\n<pre>pip install fipt\n</pre>\n<p>Put the test data <code>test_data_001.csv</code> from the <code>examples</code> folder in your current folder. Analyze the data:</p>\n<pre>python -m fipt ./my_fipt_data_1234.csv\n</pre>\n<p>To analyze your own data, put it in a file with the same format as <code>test_data_001.csv</code>, which is:</p>\n<pre><code>Format: CSV\n1st column, Frequency in [Hz]\n2nd column, Z' in [Ohm] \n3rd column, Z'' in [Ohm]\n(Name of columns is not important)\n</code></pre>\n<h2>Examples</h2>\n<p>To see how to analyze fipt data in your own python code, refer to the jupyter notebook <code>demo_fipt.ipyn</code> in the examples folder.</p>\n<h2>Features and known issues</h2>\n<p>The code was optimized to allow the fitting and analysis of large numbers of data files, with minimum user intervention. The key features of the code are:</p>\n<ul>\n<li>Robust estimation of starting parameters from raw data</li>\n<li>Resistance to outlier data points through use of Student-T likelihood function</li>\n<li>Ability to verify each fit, through automatic generation of result files (plots, statistics, etc.)</li>\n</ul>\n<p>Known issues:</p>\n<ul>\n<li>The code is currently provided with a minimum of documentation.</li>\n<li>Calculation of MacMullin number and tortuosity not yet included</li>\n</ul>\n<h2>Requirements</h2>\n<p>Required packages are <code>numpy</code>, <code>scipy</code> for data and statistical models and <code>lmfit</code> to perform the model fitting.</p>\n<p>It is recommended (but not necessary) to install matplotlib installed, so that fipt-analysis will be able to create plots of the fitting.</p>\n<h2>Contributing</h2>\n<p>Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.</p>\n<p>Please make sure to update tests as appropriate.</p>\n<p>For questions please feel free to reach out to Deniz Bozyigit (<a href=\"mailto:dbozyigit@battrion.com\">dbozyigit@battrion.com</a>)</p>\n<h2>License</h2>\n<p><a href=\"https://choosealicense.com/licenses/mit/\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 6817065, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "ed7eba59b8d9c031586bd5931260455c", "sha256": "b7fc285f47202a93ca9dc5fe932aa1d20962ea0f8485a047f1659606766c1db6"}, "downloads": -1, "filename": "fipt-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ed7eba59b8d9c031586bd5931260455c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12646, "upload_time": "2020-03-15T19:45:07", "upload_time_iso_8601": "2020-03-15T19:45:07.057119Z", "url": "https://files.pythonhosted.org/packages/5e/8f/721339bfd33524d34f4b1dfb475db7e97bd664e05a8bb6b120bde17c05ec/fipt-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cbfb75a1da95d6439776843d2e1f5e6e", "sha256": "2bcf4bc9cbd2883d2423c1aec06c82cd4d256062cf52c875255c1b19ed3caa3c"}, "downloads": -1, "filename": "fipt-0.1.0.tar.gz", "has_sig": false, "md5_digest": "cbfb75a1da95d6439776843d2e1f5e6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11191, "upload_time": "2020-03-15T19:45:09", "upload_time_iso_8601": "2020-03-15T19:45:09.395674Z", "url": "https://files.pythonhosted.org/packages/b3/c7/e8647ef1db810e7422ddbee0e2f8b78f118d6d135fc69193a873ba6c0ffc/fipt-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "5adf894ffccaedcfb9398ed24450c820", "sha256": "803a6458a79b9c3c9b2bbe421df160ac5d1a5b22fef7e521629ee120112f411f"}, "downloads": -1, "filename": "fipt-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5adf894ffccaedcfb9398ed24450c820", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13157, "upload_time": "2020-03-15T20:53:27", "upload_time_iso_8601": "2020-03-15T20:53:27.373639Z", "url": "https://files.pythonhosted.org/packages/2f/b6/4359cae6750ac40b3b8d8aface7b7f5f9871282aacb958137842e8cc4de6/fipt-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14ffc16ae544b06e9313da137c9817a5", "sha256": "6a85d3ee0f58e660445c50a6bfdd4f36e76c227a6d5086ea8e494e7bf20a0eb0"}, "downloads": -1, "filename": "fipt-0.1.1.tar.gz", "has_sig": false, "md5_digest": "14ffc16ae544b06e9313da137c9817a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11729, "upload_time": "2020-03-15T20:53:29", "upload_time_iso_8601": "2020-03-15T20:53:29.715228Z", "url": "https://files.pythonhosted.org/packages/40/d5/2e3d290b2619ccfd0d99d3f3d1a4b673d88fd005dc18473e482ff1c9c39b/fipt-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5adf894ffccaedcfb9398ed24450c820", "sha256": "803a6458a79b9c3c9b2bbe421df160ac5d1a5b22fef7e521629ee120112f411f"}, "downloads": -1, "filename": "fipt-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5adf894ffccaedcfb9398ed24450c820", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13157, "upload_time": "2020-03-15T20:53:27", "upload_time_iso_8601": "2020-03-15T20:53:27.373639Z", "url": "https://files.pythonhosted.org/packages/2f/b6/4359cae6750ac40b3b8d8aface7b7f5f9871282aacb958137842e8cc4de6/fipt-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14ffc16ae544b06e9313da137c9817a5", "sha256": "6a85d3ee0f58e660445c50a6bfdd4f36e76c227a6d5086ea8e494e7bf20a0eb0"}, "downloads": -1, "filename": "fipt-0.1.1.tar.gz", "has_sig": false, "md5_digest": "14ffc16ae544b06e9313da137c9817a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11729, "upload_time": "2020-03-15T20:53:29", "upload_time_iso_8601": "2020-03-15T20:53:29.715228Z", "url": "https://files.pythonhosted.org/packages/40/d5/2e3d290b2619ccfd0d99d3f3d1a4b673d88fd005dc18473e482ff1c9c39b/fipt-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:15 2020"}