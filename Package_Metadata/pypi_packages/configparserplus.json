{"info": {"author": "Filipe Waitman", "author_email": "filwaitman@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "configparserplus (a.k.a. \".ini is boring.\")\n============================================\n\nIf you have to use .ini files on your projects you probably realized that the lack of a decent hierarchy between settings files just sucks.\n\n**configparserplus allows you to use Jinja2 templating language on your .ini files** so you don't need to ctrl-C, ctrl-V your settings in your N config files. Seriously, never do it again. Just. Never.\n\n\nInstallation:\n-------------\n.. code:: bash\n\n    pip install configparserplus\n\n\nUsage:\n-------------\n\nJust replace your boring:\n\n.. code:: python\n\n    from ConfigParser import ConfigParser  # Python 2\n    from configparser import ConfigParser  # Python 3\n\n    config = ConfigParser()\n    # ...\n\n\nWith a super cool:\n\n.. code:: python\n\n    from configparserplus import ConfigParserPlus  # Python 2 and Python 3 _o/\n\n    config = ConfigParserPlus()\n    # ...\n\n\n* Please note that configparserplus **works nicely on both Python 2 and Python 3**. Also, it **works normally on non-jinja** (boring, regular) .ini files - so you can just replace it and refactor bit by bit.\n* Ah! If you just want to **generate** (not **read/parse**) .ini files using Jinja2 engine I would recommend using `jinja2-standalone-compiler <https://github.com/filwaitman/jinja2-standalone-compiler>`_\n\n\nContribute\n----------\nDid you think in some interesting feature, or have you found a bug? Please let me know!\n\nOf course you can also download the project and send me some `pull requests <https://github.com/filwaitman/configparserplus/pulls>`_.\n\n\nYou can send your suggestions by `opening issues <https://github.com/filwaitman/configparserplus/issues>`_.\n\nYou can contact me directly as well. Take a look at my contact information at `http://filwaitman.github.io/ <http://filwaitman.github.io/>`_ (email is preferred rather than mobile phone).\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/filwaitman/configparserplus/tarball/0.0.5", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/filwaitman/configparserplus", "keywords": "ConfigParser,Jinja,INI", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "configparserplus", "package_url": "https://pypi.org/project/configparserplus/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/configparserplus/", "project_urls": {"Download": "https://github.com/filwaitman/configparserplus/tarball/0.0.5", "Homepage": "https://github.com/filwaitman/configparserplus"}, "release_url": "https://pypi.org/project/configparserplus/0.0.5/", "requires_dist": null, "requires_python": null, "summary": "UNKNOWN", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>If you have to use .ini files on your projects you probably realized that the lack of a decent hierarchy between settings files just sucks.</p>\n<p><strong>configparserplus allows you to use Jinja2 templating language on your .ini files</strong> so you don\u2019t need to ctrl-C, ctrl-V your settings in your N config files. Seriously, never do it again. Just. Never.</p>\n<div id=\"installation\">\n<h2>Installation:</h2>\n<pre>pip install configparserplus\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage:</h2>\n<p>Just replace your boring:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ConfigParser</span> <span class=\"kn\">import</span> <span class=\"n\">ConfigParser</span>  <span class=\"c1\"># Python 2</span>\n<span class=\"kn\">from</span> <span class=\"nn\">configparser</span> <span class=\"kn\">import</span> <span class=\"n\">ConfigParser</span>  <span class=\"c1\"># Python 3</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">ConfigParser</span><span class=\"p\">()</span>\n<span class=\"c1\"># ...</span>\n</pre>\n<p>With a super cool:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">configparserplus</span> <span class=\"kn\">import</span> <span class=\"n\">ConfigParserPlus</span>  <span class=\"c1\"># Python 2 and Python 3 _o/</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">ConfigParserPlus</span><span class=\"p\">()</span>\n<span class=\"c1\"># ...</span>\n</pre>\n<ul>\n<li>Please note that configparserplus <strong>works nicely on both Python 2 and Python 3</strong>. Also, it <strong>works normally on non-jinja</strong> (boring, regular) .ini files - so you can just replace it and refactor bit by bit.</li>\n<li>Ah! If you just want to <strong>generate</strong> (not <strong>read/parse</strong>) .ini files using Jinja2 engine I would recommend using <a href=\"https://github.com/filwaitman/jinja2-standalone-compiler\" rel=\"nofollow\">jinja2-standalone-compiler</a></li>\n</ul>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<p>Did you think in some interesting feature, or have you found a bug? Please let me know!</p>\n<p>Of course you can also download the project and send me some <a href=\"https://github.com/filwaitman/configparserplus/pulls\" rel=\"nofollow\">pull requests</a>.</p>\n<p>You can send your suggestions by <a href=\"https://github.com/filwaitman/configparserplus/issues\" rel=\"nofollow\">opening issues</a>.</p>\n<p>You can contact me directly as well. Take a look at my contact information at <a href=\"http://filwaitman.github.io/\" rel=\"nofollow\">http://filwaitman.github.io/</a> (email is preferred rather than mobile phone).</p>\n</div>\n\n          </div>"}, "last_serial": 2326526, "releases": {"0.0.4": [{"comment_text": "", "digests": {"md5": "1b6cacc11db283499d34ce341d51c75e", "sha256": "4e20485f384a406898b431280fcfc8ece7c4867fa65fe3baabbf7825cea3f0c8"}, "downloads": -1, "filename": "configparserplus-0.0.4.tar.gz", "has_sig": false, "md5_digest": "1b6cacc11db283499d34ce341d51c75e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3309, "upload_time": "2016-09-06T02:11:20", "upload_time_iso_8601": "2016-09-06T02:11:20.049266Z", "url": "https://files.pythonhosted.org/packages/be/b5/69dad42a349662f648790257f11380e0a838167f95f9df13202718d06862/configparserplus-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "9292f1c5a2b338a999a74e7621e46751", "sha256": "20252bef8165140888ff0143bdf4dd24130353e2e8ec5590e6a84e5c7ee0d46b"}, "downloads": -1, "filename": "configparserplus-0.0.5.tar.gz", "has_sig": false, "md5_digest": "9292f1c5a2b338a999a74e7621e46751", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3298, "upload_time": "2016-09-06T02:15:32", "upload_time_iso_8601": "2016-09-06T02:15:32.468946Z", "url": "https://files.pythonhosted.org/packages/8c/0d/088d6810c5a535f9298e88c07f5bca4d8b8c20aad5c58de71f23e26f0685/configparserplus-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9292f1c5a2b338a999a74e7621e46751", "sha256": "20252bef8165140888ff0143bdf4dd24130353e2e8ec5590e6a84e5c7ee0d46b"}, "downloads": -1, "filename": "configparserplus-0.0.5.tar.gz", "has_sig": false, "md5_digest": "9292f1c5a2b338a999a74e7621e46751", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3298, "upload_time": "2016-09-06T02:15:32", "upload_time_iso_8601": "2016-09-06T02:15:32.468946Z", "url": "https://files.pythonhosted.org/packages/8c/0d/088d6810c5a535f9298e88c07f5bca4d8b8c20aad5c58de71f23e26f0685/configparserplus-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:54 2020"}