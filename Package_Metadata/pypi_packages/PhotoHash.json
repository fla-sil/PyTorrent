{"info": {"author": "Chris Pickett", "author_email": "chris.pickett@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Image Recognition"], "description": "=========\nPhotoHash\n=========\n\n.. image:: https://travis-ci.org/bunchesofdonald/django-hermes.svg?branch=master\n    :target: https://travis-ci.org/bunchesofdonald/photohash\n\nThis was mainly created just for my own use and education. It's a perceptual\nhash algorithm, used to find if two images are similar.\n\nInstallation\n============\n\n::\n\n    pip install PhotoHash\n\n\nUsage\n=====\n\naverage_hash\n------------\nReturns the hash of the image using an average hash algorithm. This algorithm\ncompares each pixel in the image to the average value of all the pixels.::\n\n    import photohash\n    hash = photohash.average_hash('/path/to/myimage.jpg')\n\ndistance\n--------\nReturns the hamming distance between the average_hash of the given images.::\n\n    import photohash\n    distance = photohash.distance('/path/to/myimage.jpg', '/path/to/myotherimage.jpg')\n\nis_look_alike\n-------------\nReturns a boolean of whether or not the photos look similar.::\n\n    import photohash\n    similar = photohash.is_look_alike('/path/to/myimage.jpg', '/path/to/myotherimage.jpg')\n\nis_look_alike also takes an optional tolerance argument that defines how strict\nthe comparison should be.::\n\n    import photohash\n    similar = photohash.is_look_alike('/path/to/myimage.jpg', '/path/to/myimage.jpg', tolerance=3)\n\nhash_distance\n-------------\nReturns the hamming distance between two hashes of the same length::\n\n    import photohash\n    hash_one = average_hash('/path/to/myimage.jpg')\n    hash_two = average_hash('/path/to/myotherimage.jpg')\n    distance = photohash.hash_distance(hash_one, hash_two)\n\nhashes_are_similar\n------------------\nReturns a boolean of whether or not the two hashes are within the given tolerance. Same as\nis_look_alike, but takes hashes instead of image paths::\n\n    import photohash\n    hash_one = average_hash('/path/to/myimage.jpg')\n    hash_two = average_hash('/path/to/myotherimage.jpg')\n    similar = photohash.hashes_are_similar(hash_one, hash_two)\n\nhashes_are_similar also takes the same optional tolerance argument that is_look_alike does.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bunchesofdonald/photohash", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "PhotoHash", "package_url": "https://pypi.org/project/PhotoHash/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/PhotoHash/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/bunchesofdonald/photohash"}, "release_url": "https://pypi.org/project/PhotoHash/0.4.1/", "requires_dist": null, "requires_python": null, "summary": "A Python Perceptual Image Hashing Module", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/bunchesofdonald/photohash\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/bunchesofdonald/django-hermes.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4848dfbcd8184f91acc76f9d8103d30318207fe0/68747470733a2f2f7472617669732d63692e6f72672f62756e636865736f66646f6e616c642f646a616e676f2d6865726d65732e7376673f6272616e63683d6d6173746572\"></a>\n<p>This was mainly created just for my own use and education. It\u2019s a perceptual\nhash algorithm, used to find if two images are similar.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install PhotoHash\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"average-hash\">\n<h3>average_hash</h3>\n<p>Returns the hash of the image using an average hash algorithm. This algorithm\ncompares each pixel in the image to the average value of all the pixels.:</p>\n<pre>import photohash\nhash = photohash.average_hash('/path/to/myimage.jpg')\n</pre>\n</div>\n<div id=\"distance\">\n<h3>distance</h3>\n<p>Returns the hamming distance between the average_hash of the given images.:</p>\n<pre>import photohash\ndistance = photohash.distance('/path/to/myimage.jpg', '/path/to/myotherimage.jpg')\n</pre>\n</div>\n<div id=\"is-look-alike\">\n<h3>is_look_alike</h3>\n<p>Returns a boolean of whether or not the photos look similar.:</p>\n<pre>import photohash\nsimilar = photohash.is_look_alike('/path/to/myimage.jpg', '/path/to/myotherimage.jpg')\n</pre>\n<p>is_look_alike also takes an optional tolerance argument that defines how strict\nthe comparison should be.:</p>\n<pre>import photohash\nsimilar = photohash.is_look_alike('/path/to/myimage.jpg', '/path/to/myimage.jpg', tolerance=3)\n</pre>\n</div>\n<div id=\"hash-distance\">\n<h3>hash_distance</h3>\n<p>Returns the hamming distance between two hashes of the same length:</p>\n<pre>import photohash\nhash_one = average_hash('/path/to/myimage.jpg')\nhash_two = average_hash('/path/to/myotherimage.jpg')\ndistance = photohash.hash_distance(hash_one, hash_two)\n</pre>\n</div>\n<div id=\"hashes-are-similar\">\n<h3>hashes_are_similar</h3>\n<p>Returns a boolean of whether or not the two hashes are within the given tolerance. Same as\nis_look_alike, but takes hashes instead of image paths:</p>\n<pre>import photohash\nhash_one = average_hash('/path/to/myimage.jpg')\nhash_two = average_hash('/path/to/myotherimage.jpg')\nsimilar = photohash.hashes_are_similar(hash_one, hash_two)\n</pre>\n<p>hashes_are_similar also takes the same optional tolerance argument that is_look_alike does.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2361464, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "3ede5cb9c8b2a1711c970c2faf03beff", "sha256": "52bd2d78b1c22f73b09b66cfb8431d1826358dbd28f8cfe120df1e8b1585d015"}, "downloads": -1, "filename": "PhotoHash-0.1.0.tar.gz", "has_sig": false, "md5_digest": "3ede5cb9c8b2a1711c970c2faf03beff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2537, "upload_time": "2013-08-16T00:02:16", "upload_time_iso_8601": "2013-08-16T00:02:16.753274Z", "url": "https://files.pythonhosted.org/packages/49/ff/39757481b6afda241048c6f4e1ffdc4e015bc3b35739cc04b88a3983cb27/PhotoHash-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "f2330df57e482c7f6acc0154fdfbcf67", "sha256": "7daa5c20d08094f6bb9201986e1a497bd06377cee7e4963318dfc56a1c546ce8"}, "downloads": -1, "filename": "PhotoHash-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f2330df57e482c7f6acc0154fdfbcf67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2657, "upload_time": "2013-11-27T16:47:46", "upload_time_iso_8601": "2013-11-27T16:47:46.665160Z", "url": "https://files.pythonhosted.org/packages/02/6f/aae30fa6935524235b3c3725448c1d25e5fd5185e987f8d68a1b9d9d88ed/PhotoHash-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "81760b7bbd9b1a3411416ad29ccac5d1", "sha256": "6eb1bec0cdf80408e469c7e4463043388cb265d7a2c3c6ad562c40b626936b36"}, "downloads": -1, "filename": "PhotoHash-0.2.1.tar.gz", "has_sig": false, "md5_digest": "81760b7bbd9b1a3411416ad29ccac5d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2672, "upload_time": "2013-11-27T16:50:54", "upload_time_iso_8601": "2013-11-27T16:50:54.261262Z", "url": "https://files.pythonhosted.org/packages/6d/ba/2e7d1c483e6f26471f3571f0b07e3a37d7296b196c720db027f42547e2d0/PhotoHash-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "550f88e9dbbf5d39d3dff39f6a988d88", "sha256": "1cc9a7e61eec20f9f8eb3d7fce2a65b047e5a6cede34a714e76aee0968af7725"}, "downloads": -1, "filename": "PhotoHash-0.3.0.tar.gz", "has_sig": false, "md5_digest": "550f88e9dbbf5d39d3dff39f6a988d88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2671, "upload_time": "2014-11-23T02:11:30", "upload_time_iso_8601": "2014-11-23T02:11:30.145182Z", "url": "https://files.pythonhosted.org/packages/e7/72/ac434e056c527403b4f1f12d1e9b4b54893e9a66f40f7154b82d55d62594/PhotoHash-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "a75a1898cd95202884394261350418e6", "sha256": "90f9bf452ad0d0343fefba2da7078f7511f7980aa103a4717e573afe3f8526cc"}, "downloads": -1, "filename": "Photohash-0.3.1.tar.gz", "has_sig": false, "md5_digest": "a75a1898cd95202884394261350418e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4077, "upload_time": "2015-07-25T14:13:58", "upload_time_iso_8601": "2015-07-25T14:13:58.323535Z", "url": "https://files.pythonhosted.org/packages/b5/20/a7a99326d68ce0819c35d863f1ccb934b1fd36b91adcfecdcd8ef94a637a/Photohash-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "5b38706a152cb73cc51c4662c9bd5d66", "sha256": "909876d53eb03ad5d094a118f190060e0b2dc642b26d31a9da630ec554146027"}, "downloads": -1, "filename": "Photohash-0.3.2.tar.gz", "has_sig": false, "md5_digest": "5b38706a152cb73cc51c4662c9bd5d66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4244, "upload_time": "2015-08-01T16:06:03", "upload_time_iso_8601": "2015-08-01T16:06:03.382112Z", "url": "https://files.pythonhosted.org/packages/30/97/3dc90c671e91542a8b694ae092be89c242801fdd36cfe775792a98af50a9/Photohash-0.3.2.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "c92f75e8eacc2f751905bd9821c2440e", "sha256": "7d7c5a2b95bac4124f025ea98bce74cf0d397d1d7193bf4736f93e48add9abd7"}, "downloads": -1, "filename": "Photohash-0.4.0.tar.gz", "has_sig": false, "md5_digest": "c92f75e8eacc2f751905bd9821c2440e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4484, "upload_time": "2016-01-25T16:32:18", "upload_time_iso_8601": "2016-01-25T16:32:18.893831Z", "url": "https://files.pythonhosted.org/packages/2f/12/421563c9ca08cc123a2a9f86374eebbd5c370bd1e4ddf68d23776f1b2d2d/Photohash-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "12c1abbc282d92d60aa12547b08e1a3b", "sha256": "2338cd2c6fba9a099b423c54c556491122d46a70cbf08bc517b8d88f2c708635"}, "downloads": -1, "filename": "Photohash-0.4.1.tar.gz", "has_sig": false, "md5_digest": "12c1abbc282d92d60aa12547b08e1a3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4519, "upload_time": "2016-09-24T16:11:22", "upload_time_iso_8601": "2016-09-24T16:11:22.817687Z", "url": "https://files.pythonhosted.org/packages/cc/ac/37fb0c9d9bf94854d087a9808a5d952308897ab2dc64430f8eac1c2f7dd7/Photohash-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "12c1abbc282d92d60aa12547b08e1a3b", "sha256": "2338cd2c6fba9a099b423c54c556491122d46a70cbf08bc517b8d88f2c708635"}, "downloads": -1, "filename": "Photohash-0.4.1.tar.gz", "has_sig": false, "md5_digest": "12c1abbc282d92d60aa12547b08e1a3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4519, "upload_time": "2016-09-24T16:11:22", "upload_time_iso_8601": "2016-09-24T16:11:22.817687Z", "url": "https://files.pythonhosted.org/packages/cc/ac/37fb0c9d9bf94854d087a9808a5d952308897ab2dc64430f8eac1c2f7dd7/Photohash-0.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:22 2020"}