{"info": {"author": "Dan Root", "author_email": "rootdan+pypi@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "****************************************************************\nevirons-serviceurl: Add service URL parsing support for environs\n****************************************************************\n\n.. image:: https://travis-ci.org/flowroute/environs-serviceurl.svg?branch=master\n    :target: https://travis-ci.org/flowroute/environs-serviceurl\n    :alt: Travis-CI\n\nenvirons-serviceurl is a Python library that extends the\n`environs <https://github.com/sloria/environs>`_ library with support for\nturning service urls like ``postgres://user:pass@host:port/database`` into\nPython dictionaries.\n\n\nInstall\n-------\n::\n\n   $ pip install environs-serviceurl\n\nUsage\n-----\n\n.. code-block:: python\n\n    # export DATABASE_URL=postgres://me:sekrit@postgres.example.com:5432/catpics\n    # export REDIS_URL=redis://redis.example.com?dbid=3\n\n    from environs import Env\n    from environs_serviceurl import service_url\n\n    env = Env()\n    env.add_parser('service_url', service_url)\n\n    # Parse a service url.\n    postgres_config = env.service_url('DATABASE_URL')\n    # {'host': 'postgres.example.com',\n    #  'port': 5432,\n    #  'user': 'me',\n    #  'password': 'sekrit',\n    #  'extras': 'catpics'}\n\n    # Give the extras a specific name\n    postgres_config = env.service_url('DATABASE_URL', extras_name='database')\n    # {'host': 'postgres.example.com',\n    #  'port': 5432,\n    #  'user': 'me',\n    #  'password': 'sekrit',\n    #  'database': 'catpics'}\n\n    # Parse a service url with defaults, using query params for extra values.\n    redis_config = env.service_url('REDIS_URL', 'redis://localhost/', defaults={\n        'host': 'service.example.com', 'port': 6379, 'dbid': 0})\n    # {'host': 'redis.example.com',\n    #  'port': 6379,\n    #  'user': None,\n    #  'password': None,\n    #  'extras': None,\n    #  'dbid': '3'}\n\n\n\nLimitations\n-----------\n\nThere's currently no way to do casting on any extras or query string paramaters.\nThey will always be returned as string types.\n\n\nLicense\n-------\n\nMIT.  See the `LICENSE <https://github.com/flowroute/environs-serviceurl/blob/master/LICENSE>`_ file for details.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/flowroute/environs-serviceurl", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "environs-serviceurl", "package_url": "https://pypi.org/project/environs-serviceurl/", "platform": "any", "project_url": "https://pypi.org/project/environs-serviceurl/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/flowroute/environs-serviceurl"}, "release_url": "https://pypi.org/project/environs-serviceurl/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "Add service URL parsing support for environs", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/flowroute/environs-serviceurl\" rel=\"nofollow\"><img alt=\"Travis-CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ffe6c2ff4b0afc781752b6c71ef7b864e18ef063/68747470733a2f2f7472617669732d63692e6f72672f666c6f77726f7574652f656e7669726f6e732d7365727669636575726c2e7376673f6272616e63683d6d6173746572\"></a>\n<p>environs-serviceurl is a Python library that extends the\n<a href=\"https://github.com/sloria/environs\" rel=\"nofollow\">environs</a> library with support for\nturning service urls like <tt><span class=\"pre\">postgres://user:pass@host:port/database</span></tt> into\nPython dictionaries.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>$ pip install environs-serviceurl\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"c1\"># export DATABASE_URL=postgres://me:sekrit@postgres.example.com:5432/catpics</span>\n<span class=\"c1\"># export REDIS_URL=redis://redis.example.com?dbid=3</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">environs</span> <span class=\"kn\">import</span> <span class=\"n\">Env</span>\n<span class=\"kn\">from</span> <span class=\"nn\">environs_serviceurl</span> <span class=\"kn\">import</span> <span class=\"n\">service_url</span>\n\n<span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">Env</span><span class=\"p\">()</span>\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">add_parser</span><span class=\"p\">(</span><span class=\"s1\">'service_url'</span><span class=\"p\">,</span> <span class=\"n\">service_url</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Parse a service url.</span>\n<span class=\"n\">postgres_config</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">service_url</span><span class=\"p\">(</span><span class=\"s1\">'DATABASE_URL'</span><span class=\"p\">)</span>\n<span class=\"c1\"># {'host': 'postgres.example.com',</span>\n<span class=\"c1\">#  'port': 5432,</span>\n<span class=\"c1\">#  'user': 'me',</span>\n<span class=\"c1\">#  'password': 'sekrit',</span>\n<span class=\"c1\">#  'extras': 'catpics'}</span>\n\n<span class=\"c1\"># Give the extras a specific name</span>\n<span class=\"n\">postgres_config</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">service_url</span><span class=\"p\">(</span><span class=\"s1\">'DATABASE_URL'</span><span class=\"p\">,</span> <span class=\"n\">extras_name</span><span class=\"o\">=</span><span class=\"s1\">'database'</span><span class=\"p\">)</span>\n<span class=\"c1\"># {'host': 'postgres.example.com',</span>\n<span class=\"c1\">#  'port': 5432,</span>\n<span class=\"c1\">#  'user': 'me',</span>\n<span class=\"c1\">#  'password': 'sekrit',</span>\n<span class=\"c1\">#  'database': 'catpics'}</span>\n\n<span class=\"c1\"># Parse a service url with defaults, using query params for extra values.</span>\n<span class=\"n\">redis_config</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">service_url</span><span class=\"p\">(</span><span class=\"s1\">'REDIS_URL'</span><span class=\"p\">,</span> <span class=\"s1\">'redis://localhost/'</span><span class=\"p\">,</span> <span class=\"n\">defaults</span><span class=\"o\">=</span><span class=\"p\">{</span>\n    <span class=\"s1\">'host'</span><span class=\"p\">:</span> <span class=\"s1\">'service.example.com'</span><span class=\"p\">,</span> <span class=\"s1\">'port'</span><span class=\"p\">:</span> <span class=\"mi\">6379</span><span class=\"p\">,</span> <span class=\"s1\">'dbid'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">})</span>\n<span class=\"c1\"># {'host': 'redis.example.com',</span>\n<span class=\"c1\">#  'port': 6379,</span>\n<span class=\"c1\">#  'user': None,</span>\n<span class=\"c1\">#  'password': None,</span>\n<span class=\"c1\">#  'extras': None,</span>\n<span class=\"c1\">#  'dbid': '3'}</span>\n</pre>\n</div>\n<div id=\"limitations\">\n<h2>Limitations</h2>\n<p>There\u2019s currently no way to do casting on any extras or query string paramaters.\nThey will always be returned as string types.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>MIT.  See the <a href=\"https://github.com/flowroute/environs-serviceurl/blob/master/LICENSE\" rel=\"nofollow\">LICENSE</a> file for details.</p>\n</div>\n\n          </div>"}, "last_serial": 2233762, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "3146c0a17ec9f265a22dd057c5efdd0a", "sha256": "840849a6b3557c880c5dcbeee77010a1425e2a5fcc5eb1fe09e924f4a2d9f419"}, "downloads": -1, "filename": "environs_serviceurl-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3146c0a17ec9f265a22dd057c5efdd0a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 4907, "upload_time": "2016-07-20T19:55:06", "upload_time_iso_8601": "2016-07-20T19:55:06.201451Z", "url": "https://files.pythonhosted.org/packages/e9/dd/cd034dbfb594c7ba57f6339aa6b7ecf64108b9031d0bb016bae64b2020f1/environs_serviceurl-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8bf86e8408b951a82f3b30a6d5da876", "sha256": "e324784ae9932d17bdd58a032e04dce8e891fad3ebca1f9d43110dcee76bb5cb"}, "downloads": -1, "filename": "environs-serviceurl-1.0.1.tar.gz", "has_sig": false, "md5_digest": "d8bf86e8408b951a82f3b30a6d5da876", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4655, "upload_time": "2016-07-20T19:55:03", "upload_time_iso_8601": "2016-07-20T19:55:03.240796Z", "url": "https://files.pythonhosted.org/packages/a7/28/7c8be86279abb7c0a3d6372916879ccecac88da1c1b018838aa67ed83a36/environs-serviceurl-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3146c0a17ec9f265a22dd057c5efdd0a", "sha256": "840849a6b3557c880c5dcbeee77010a1425e2a5fcc5eb1fe09e924f4a2d9f419"}, "downloads": -1, "filename": "environs_serviceurl-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3146c0a17ec9f265a22dd057c5efdd0a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 4907, "upload_time": "2016-07-20T19:55:06", "upload_time_iso_8601": "2016-07-20T19:55:06.201451Z", "url": "https://files.pythonhosted.org/packages/e9/dd/cd034dbfb594c7ba57f6339aa6b7ecf64108b9031d0bb016bae64b2020f1/environs_serviceurl-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8bf86e8408b951a82f3b30a6d5da876", "sha256": "e324784ae9932d17bdd58a032e04dce8e891fad3ebca1f9d43110dcee76bb5cb"}, "downloads": -1, "filename": "environs-serviceurl-1.0.1.tar.gz", "has_sig": false, "md5_digest": "d8bf86e8408b951a82f3b30a6d5da876", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4655, "upload_time": "2016-07-20T19:55:03", "upload_time_iso_8601": "2016-07-20T19:55:03.240796Z", "url": "https://files.pythonhosted.org/packages/a7/28/7c8be86279abb7c0a3d6372916879ccecac88da1c1b018838aa67ed83a36/environs-serviceurl-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:08 2020"}