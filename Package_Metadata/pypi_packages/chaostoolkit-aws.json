{"info": {"author": "chaostoolkit Team", "author_email": "contact@chaostoolkit.org", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: Freely Distributable", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation", "Programming Language :: Python :: Implementation :: CPython"], "description": "# Chaos Toolkit Extension for AWS\n\n[![Build Status](https://travis-ci.org/chaostoolkit-incubator/chaostoolkit-aws.svg?branch=master)](https://travis-ci.org/chaostoolkit-incubator/chaostoolkit-aws)\n[![Python versions](https://img.shields.io/pypi/pyversions/chaostoolkit-aws.svg)](https://www.python.org/)\n\nThis project is a collection of [actions][] and [probes][], gathered as an\nextension to the [Chaos Toolkit][chaostoolkit].\n\n[actions]: http://chaostoolkit.org/reference/api/experiment/#action\n[probes]: http://chaostoolkit.org/reference/api/experiment/#probe\n[chaostoolkit]: http://chaostoolkit.org\n\n## Install\n\nThis package requires Python 3.5+\n\nTo be used from your experiment, this package must be installed in the Python\nenvironment where [chaostoolkit][] already lives.\n\n```\n$ pip install -U chaostoolkit-aws\n```\n\n## Usage\n\nTo use the probes and actions from this package, add the following to your\nexperiment file:\n\n```json\n{\n    \"name\": \"stop-an-ec2-instance\",\n    \"provider\": {\n        \"type\": \"python\",\n        \"module\": \"chaosaws.ec2.actions\",\n        \"func\": \"stop_instance\",\n        \"arguments\": {\n            \"instance_id\": \"i-123456\"\n        }\n    }\n},\n{\n    \"name\": \"create-a-new-policy\",\n    \"provider\": {\n        \"type\": \"python\",\n        \"module\": \"chaosaws.iam.actions\",\n        \"func\": \"create_policy\",\n        \"arguments\": {\n            \"name\": \"mypolicy\",\n            \"path\": \"user/Jane\",\n            \"policy\": {\n                \"Version\": \"2012-10-17\",\n                \"Statement\": [\n                    {\n                        \"Effect\": \"Allow\",\n                        \"Action\": [\n                            \"s3:ListAllMyBuckets\",\n                            \"s3:GetBucketLocation\"\n                        ],\n                        \"Resource\": \"arn:aws:s3:::*\"\n                    }\n                ]\n            }\n        }\n    }\n}\n```\n\nOr select one at random from an AZ:\n\n\n```json\n{\n    \"name\": \"stop-an-ec2-instance-in-az-at-random\",\n    \"provider\": {\n        \"type\": \"python\",\n        \"module\": \"chaosaws.ec2.actions\",\n        \"func\": \"stop_instance\",\n        \"arguments\": {\n            \"az\": \"us-west-1\"\n        }\n    }\n}\n```\n\nThat's it!\n\nPlease explore the code to see existing probes and actions.\n\n## Configuration\n\n### Credentials\n\nThis extension uses the [boto3][] library under the hood. This library expects\nthat you have properly [configured][creds] your environment to connect and\nauthenticate with the AWS services.\n\n[boto3]: https://boto3.readthedocs.io\n[creds]: https://boto3.readthedocs.io/en/latest/guide/configuration.html\n\n#### Use default profile from `~/.aws/credentials` or `~/.aws/config`\n\nThis is the most basic case, assuming your `default` profile is properly\n[configured][default] in `~/.aws/credentials` (or `~/.aws/config`),\nthen you do not need to pass any specific credentials to the experiment.\n\n[default]: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/configuration.html#shared-credentials-file\n\n#### Use a non-default profile from `~/.aws/credentials` or `~/.aws/config`\n\nAssuming you have configure a profile in your `~/.aws/credentials`\n(or `~/.aws/config`) file, you may declare it in your experiment as follows:\n\n```json\n{\n    \"configuration\": {\n        \"aws_profile_name\": \"dev\"\n    }\n}\n```\n\nYour `~/.aws/credentials` should look like this:\n\n```\n[dev]\naws_access_key_id = XYZ\naws_secret_access_key = UIOPIY\n```\n\nOr, your `~/.aws/config` should look like this:\n\n```\n[profile dev]\noutput = json\naws_access_key_id = XYZ\naws_secret_access_key = UIOPIY\n```\n\n#### Assume an ARN role from a non-default profile\n\nAssuming you have configure a profile in your `~/.aws/config` file with\na specific [ARN role][role] you want to assume during the run:\n\n[role]: https://boto3.readthedocs.io/en/latest/guide/configuration.html#aws-config-file\n\n```json\n{\n    \"configuration\": {\n        \"aws_profile_name\": \"dev\"\n    }\n}\n```\n\nYour `~/.aws/config` should look like this:\n\n```\n[default]\noutput = json\n\n[profile dev]\nrole_arn = arn:aws:iam::XXXXXXX:role/role-name\nsource_profile = default\n```\n\n#### Assume an ARN role from within the experiment\n\nYou mays also assume a role by declaring the role ARN in the experiment\ndirectly. In that case, the profile has no impact if you also set it.\n\n```json\n    \"configuration\": {\n        \"aws_assume_role_arn\": \"arn:aws:iam::XXXXXXX:role/role-name\",\n        \"aws_assume_role_session_name\": \"my-chaos\"\n    }\n```\n\nThe `aws_assume_role_session_name` key is optional and will be set to\n`\"ChaosToolkit\"` when not provided.\n\nWhen this approach is used, the extension performs a [assume role][assumerole]\ncall against the [AWS STS][sts] service to fetch credentials dynamically.\n\n[assumerole]: https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/sts.html#STS.Client.assume_role\n[sts]: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\n\n#### Pass credentials explicitely\n\nYou can pass the credentials as a secret to the experiment definition as\nfollows:\n\n```json\n{\n    \"secrets\": {\n        \"aws\": {\n            \"aws_access_key_id\": \"your key\",\n            \"aws_secret_access_key\": \"access key\",\n            \"aws_session_token\": \"token\",\n        }\n    }\n}\n```\nNote that the token is optional.\n\nThen, use it as follows:\n\n```json\n{\n    \"name\": \"stop-an-ec2-instance\",\n    \"provider\": {\n        \"type\": \"python\",\n        \"module\": \"chaosaws.ec2.actions\",\n        \"func\": \"stop_instance\",\n        \"secrets\": [\"aws\"],\n        \"arguments\": {\n            \"instance_id\": \"i-123456\"\n        }\n    }\n}\n```\n\n[sources]: https://boto3.readthedocs.io/en/latest/guide/configuration.html#configuring-credentials\n\n### Setting the region\n\nIn additon to the authentication credentials, you must configure the region\nagainst which you want to use.\n\nYou can either declare it at the top level of the experiment, add:\n\n```json\n{\n    \"configuration\": {\n        \"aws_region\": \"us-east-1\"\n    }\n}\n```\n\nor\n\n```json\n{\n    \"configuration\": {\n        \"aws_region\": {\n            \"env\": \"type\",\n            \"key\": \"AWS_REGION\"\n        }\n    }\n}\n```\n\nBut you can also simply set either `AWS_REGION` or `AWS_DEFAULT_REGION` in\nyour terminal session without declaring anything in the experiment.\n\nIf none of these are set, your experiment will likely fail.\n\n## Contribute\n\nIf you wish to contribute more functions to this package, you are more than\nwelcome to do so. Please, fork this project, make your changes following the\nusual [PEP 8][pep8] code style, sprinkling with tests and submit a PR for\nreview.\n\n[pep8]: https://pycodestyle.readthedocs.io/en/latest/\n\nThe Chaos Toolkit projects require all contributors must sign a\n[Developer Certificate of Origin][dco] on each commit they would like to merge\ninto the master branch of the repository. Please, make sure you can abide by\nthe rules of the DCO before submitting a PR.\n\n[dco]: https://github.com/probot/dco#how-it-works\n\n### Develop\n\nIf you wish to develop on this project, make sure to install the development\ndependencies. But first, [create a virtual environment][venv] and then install\nthose dependencies.\n\n[venv]: http://chaostoolkit.org/reference/usage/install/#create-a-virtual-environment\n\n```console\n$ pip install -r requirements-dev.txt -r requirements.txt \n```\n\nThen, point your environment to this directory:\n\n```console\n$ python setup.py develop\n```\n\nNow, you can edit the files and they will be automatically be seen by your\nenvironment, even when running from the `chaos` command locally.\n\n### Test\n\nTo run the tests for the project execute the following:\n\n```\n$ pytest\n```\n\n### Add new AWS API Support\n\nOnce you have setup your environment, you can start adding new\n[AWS API support][awsapi] by adding new actions, probes and entire sub-packages\nfor those.\n\n[awsapi]: https://boto3.readthedocs.io/en/latest/reference/services/index.html\n\n#### Services supported by boto\n\nThis package relies on [boto3][] to wrap the API calls into a fluent Python\nAPI. Some newer AWS services are not yet available in boto3, in that case,\nyou should read the next section.\n\n[boto3]: https://boto3.readthedocs.io/en/latest/reference/services/index.html\n\nLet's say you want to support a new action in the EC2 sub-package.\n\nStart by creating a new function in `ec2/actions.py`:\n\n```python\nfrom chaoslib.types import Configuration, Secrets\n\nfrom chaosaws import aws_client\nfrom chaosaws.types import AWSResponse\n\ndef reboot_instance(instance_id: str, dry_run: bool=False,\n                    configuration: Configuration=None,\n                    secrets: Secrets=None) -> AWSResponse:\n    \"\"\"\n    Reboot a given EC2 instance.\n    \"\"\"\n    client = aws_client('ec2', configuration, secrets)\n    return client.reboot_instances(InstanceIds=[instance_id], DryRun=dry_run)\n```\n\nAs you can see, the actual code is straightforward. You first create a\n[EC2 client][ec2client] and simply call the appropriate method on that client\nwith the expected arguments. We return the action as-is so that it can be\nlogged by the chaostoolkit, or even be used as part of a steady-state\nhypothesis probe (if this was a probe, not action that is).\n\nYou could decide to make more than one AWS API call but, it is better to keep\nit simple so that composition is easier from the experiment. Nonetheless,\nyou may also compose those directly into a single action as well for specific\nuse-cases.\n\nPlease refer to the Chaos Toolkit documentation to learn more about the\n[configuration][] and [secrets][] objects.\n\n[ec2client]: https://boto3.readthedocs.io/en/latest/reference/services/ec2.html#client\n[configuration]: http://chaostoolkit.org/reference/api/experiment/#configuration\n[secrets]: http://chaostoolkit.org/reference/api/experiment/#secrets\n\nOnce you have implemented that action, you must create at least one unit test\nfor it in the `tests/ec2/test_ec2_actions.py` test module. For example:\n\n```python\nfrom chaosaws.ec2.actions import reboot_instancex\n\n@patch('chaosaws.ec2.actions.aws_client', autospec=True)\ndef test_reboot_instance(aws_client):\n    client = MagicMock()\n    aws_client.return_value = client\n    inst_id = \"i-1234567890abcdef0\"\n    response = reboot_instance(inst_id)\n    client.reboot_instances.assert_called_with(\n        InstanceIds=[inst_id], DryRun=False)\n```\n\nBy using the [built-in Python module to mock objects][pymock], we can mock the\nEC2 client and assert we edo indeed call the appropriate method with the right\narguments. You are encouraged to write more than a single test for various\nconditions.\n\n[pymock]: https://docs.python.org/3/library/unittest.mock.html#module-unittest.mock\n\nFinally, should you choose to add support for a new AWS API resource altogether,\nyou should create the according sub-package.\n\n#### Services not supported by boto (new AWS features)\n\nIf the support you want to provide is for a new AWS service that [boto][] does\nnot support yet, this requires direct call to the API endpoint via the\n[requests][] package. Say we have a new service, not yet supported by boto3\n\n[eks]: https://aws.amazon.com/eks/\n[boto]: https://boto3.readthedocs.io/en/latest/index.html\n[requests]: http://docs.python-requests.org/en/master/\n\n```python\nfrom chaoslib.types import Configuration, Secrets\n\nfrom chaosaws import signed_api_call\nfrom chaosaws.types import AWSResponse\n\ndef terminate_worker_node(worker_node_id: str,\n                          configuration: Configuration=None,\n                          secrets: Secrets=None) -> AWSResponse:\n    \"\"\"\n    Terminate a worker node.\n    \"\"\"\n    params = {\n        \"DryRun\": True,\n        \"WorkerNodeId.1\": worker_node_id\n    }\n    response = signed_api_call(\n        'some-new-service-name', path='/2018-01-01/worker/terminate',\n        method='POST', params=params,\n        configuration=configuration, secrets=secrets)\n    return response.json()\n```\n\nHere is an example on existing API call (as a more concrete snippet):\n\n```python\nfrom chaoslib.types import Configuration, Secrets\n\nfrom chaosaws import signed_api_call\n\ndef stop_instance(instance_id: str, configuration: Configuration=None,\n                  secrets: Secrets=None) -> str:\n    response = signed_api_call(\n        'ec2',\n        configuration=configuration,\n        secrets=secrets,\n        params={\n            \"Action\": \"StopInstances\",\n            \"InstanceId.1\": instance_id,\n            \"Version\": \"2013-06-15\"\n        }\n    )\n\n    # this API returns XML, not JSON\n    return response.text\n```\n\nWhen using the `signed_api_call`, you are responsible for the right way of\npassing the parameters. Basically, look at the AWS documentation for each\nAPI call.\n\n**WARNING:** It should be noted that, whenever boto3 implements an API, this\npackage should be updated accordingly, as boto3 is much more versatile and\nsolid.\n\n#### Make your new sub-package discoverable\n\nFinally, if you have created a new sub-package entirely, you need to make its\ncapability discoverable by the chaos toolkit. Simply amend the `discover`\nfunction in the `chaosaws/__init__.py`. For example, assuming a new `eks`\nsub-package, with actions and probes:\n\n```python\n    activities.extend(discover_actions(\"chaosaws.eks.actions\"))\n    activities.extend(discover_probes(\"chaosaws.eks.probes\"))\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://chaostoolkit.org", "keywords": "", "license": "Apache License Version 2.0", "maintainer": "", "maintainer_email": "", "name": "chaostoolkit-aws", "package_url": "https://pypi.org/project/chaostoolkit-aws/", "platform": "", "project_url": "https://pypi.org/project/chaostoolkit-aws/", "project_urls": {"Homepage": "http://chaostoolkit.org"}, "release_url": "https://pypi.org/project/chaostoolkit-aws/0.13.0/", "requires_dist": ["aws-requests-auth", "boto3", "chaostoolkit-lib (>=0.13.0)", "requests"], "requires_python": ">=3.5.*", "summary": "Chaos Toolkit Extension for AWS", "version": "0.13.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Chaos Toolkit Extension for AWS</h1>\n<p><a href=\"https://travis-ci.org/chaostoolkit-incubator/chaostoolkit-aws\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6ec0be9039d12bb71c9aaa69e2fbc59d02ff7d31/68747470733a2f2f7472617669732d63692e6f72672f6368616f73746f6f6c6b69742d696e63756261746f722f6368616f73746f6f6c6b69742d6177732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://www.python.org/\" rel=\"nofollow\"><img alt=\"Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a430d0a6d358b6cf7d8e90db6839b3c66ce0e804/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6368616f73746f6f6c6b69742d6177732e737667\"></a></p>\n<p>This project is a collection of <a href=\"http://chaostoolkit.org/reference/api/experiment/#action\" rel=\"nofollow\">actions</a> and <a href=\"http://chaostoolkit.org/reference/api/experiment/#probe\" rel=\"nofollow\">probes</a>, gathered as an\nextension to the <a href=\"http://chaostoolkit.org\" rel=\"nofollow\">Chaos Toolkit</a>.</p>\n<h2>Install</h2>\n<p>This package requires Python 3.5+</p>\n<p>To be used from your experiment, this package must be installed in the Python\nenvironment where <a href=\"http://chaostoolkit.org\" rel=\"nofollow\">chaostoolkit</a> already lives.</p>\n<pre><code>$ pip install -U chaostoolkit-aws\n</code></pre>\n<h2>Usage</h2>\n<p>To use the probes and actions from this package, add the following to your\nexperiment file:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"stop-an-ec2-instance\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"provider\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"python\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"module\"</span><span class=\"p\">:</span> <span class=\"s2\">\"chaosaws.ec2.actions\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"func\"</span><span class=\"p\">:</span> <span class=\"s2\">\"stop_instance\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"arguments\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"instance_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"i-123456\"</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span><span class=\"err\">,</span>\n<span class=\"p\">{</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"create-a-new-policy\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"provider\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"python\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"module\"</span><span class=\"p\">:</span> <span class=\"s2\">\"chaosaws.iam.actions\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"func\"</span><span class=\"p\">:</span> <span class=\"s2\">\"create_policy\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"arguments\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"mypolicy\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"path\"</span><span class=\"p\">:</span> <span class=\"s2\">\"user/Jane\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"policy\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"nt\">\"Version\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2012-10-17\"</span><span class=\"p\">,</span>\n                <span class=\"nt\">\"Statement\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"nt\">\"Effect\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Allow\"</span><span class=\"p\">,</span>\n                        <span class=\"nt\">\"Action\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                            <span class=\"s2\">\"s3:ListAllMyBuckets\"</span><span class=\"p\">,</span>\n                            <span class=\"s2\">\"s3:GetBucketLocation\"</span>\n                        <span class=\"p\">],</span>\n                        <span class=\"nt\">\"Resource\"</span><span class=\"p\">:</span> <span class=\"s2\">\"arn:aws:s3:::*\"</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Or select one at random from an AZ:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"stop-an-ec2-instance-in-az-at-random\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"provider\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"python\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"module\"</span><span class=\"p\">:</span> <span class=\"s2\">\"chaosaws.ec2.actions\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"func\"</span><span class=\"p\">:</span> <span class=\"s2\">\"stop_instance\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"arguments\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"az\"</span><span class=\"p\">:</span> <span class=\"s2\">\"us-west-1\"</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>That's it!</p>\n<p>Please explore the code to see existing probes and actions.</p>\n<h2>Configuration</h2>\n<h3>Credentials</h3>\n<p>This extension uses the <a href=\"https://boto3.readthedocs.io\" rel=\"nofollow\">boto3</a> library under the hood. This library expects\nthat you have properly <a href=\"https://boto3.readthedocs.io/en/latest/guide/configuration.html\" rel=\"nofollow\">configured</a> your environment to connect and\nauthenticate with the AWS services.</p>\n<h4>Use default profile from <code>~/.aws/credentials</code> or <code>~/.aws/config</code></h4>\n<p>This is the most basic case, assuming your <code>default</code> profile is properly\n<a href=\"https://boto3.amazonaws.com/v1/documentation/api/latest/guide/configuration.html#shared-credentials-file\" rel=\"nofollow\">configured</a> in <code>~/.aws/credentials</code> (or <code>~/.aws/config</code>),\nthen you do not need to pass any specific credentials to the experiment.</p>\n<h4>Use a non-default profile from <code>~/.aws/credentials</code> or <code>~/.aws/config</code></h4>\n<p>Assuming you have configure a profile in your <code>~/.aws/credentials</code>\n(or <code>~/.aws/config</code>) file, you may declare it in your experiment as follows:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"configuration\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"aws_profile_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"dev\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Your <code>~/.aws/credentials</code> should look like this:</p>\n<pre><code>[dev]\naws_access_key_id = XYZ\naws_secret_access_key = UIOPIY\n</code></pre>\n<p>Or, your <code>~/.aws/config</code> should look like this:</p>\n<pre><code>[profile dev]\noutput = json\naws_access_key_id = XYZ\naws_secret_access_key = UIOPIY\n</code></pre>\n<h4>Assume an ARN role from a non-default profile</h4>\n<p>Assuming you have configure a profile in your <code>~/.aws/config</code> file with\na specific <a href=\"https://boto3.readthedocs.io/en/latest/guide/configuration.html#aws-config-file\" rel=\"nofollow\">ARN role</a> you want to assume during the run:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"configuration\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"aws_profile_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"dev\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Your <code>~/.aws/config</code> should look like this:</p>\n<pre><code>[default]\noutput = json\n\n[profile dev]\nrole_arn = arn:aws:iam::XXXXXXX:role/role-name\nsource_profile = default\n</code></pre>\n<h4>Assume an ARN role from within the experiment</h4>\n<p>You mays also assume a role by declaring the role ARN in the experiment\ndirectly. In that case, the profile has no impact if you also set it.</p>\n<pre>    <span class=\"s2\">\"configuration\"</span><span class=\"err\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"aws_assume_role_arn\"</span><span class=\"p\">:</span> <span class=\"s2\">\"arn:aws:iam::XXXXXXX:role/role-name\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"aws_assume_role_session_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"my-chaos\"</span>\n    <span class=\"p\">}</span>\n</pre>\n<p>The <code>aws_assume_role_session_name</code> key is optional and will be set to\n<code>\"ChaosToolkit\"</code> when not provided.</p>\n<p>When this approach is used, the extension performs a <a href=\"https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/sts.html#STS.Client.assume_role\" rel=\"nofollow\">assume role</a>\ncall against the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\" rel=\"nofollow\">AWS STS</a> service to fetch credentials dynamically.</p>\n<h4>Pass credentials explicitely</h4>\n<p>You can pass the credentials as a secret to the experiment definition as\nfollows:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"secrets\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"aws\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"aws_access_key_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"your key\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"aws_secret_access_key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"access key\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"aws_session_token\"</span><span class=\"p\">:</span> <span class=\"s2\">\"token\"</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Note that the token is optional.</p>\n<p>Then, use it as follows:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"stop-an-ec2-instance\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"provider\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"python\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"module\"</span><span class=\"p\">:</span> <span class=\"s2\">\"chaosaws.ec2.actions\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"func\"</span><span class=\"p\">:</span> <span class=\"s2\">\"stop_instance\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"secrets\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"aws\"</span><span class=\"p\">],</span>\n        <span class=\"nt\">\"arguments\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"instance_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"i-123456\"</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>Setting the region</h3>\n<p>In additon to the authentication credentials, you must configure the region\nagainst which you want to use.</p>\n<p>You can either declare it at the top level of the experiment, add:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"configuration\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"aws_region\"</span><span class=\"p\">:</span> <span class=\"s2\">\"us-east-1\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>or</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"configuration\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"aws_region\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"env\"</span><span class=\"p\">:</span> <span class=\"s2\">\"type\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"AWS_REGION\"</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>But you can also simply set either <code>AWS_REGION</code> or <code>AWS_DEFAULT_REGION</code> in\nyour terminal session without declaring anything in the experiment.</p>\n<p>If none of these are set, your experiment will likely fail.</p>\n<h2>Contribute</h2>\n<p>If you wish to contribute more functions to this package, you are more than\nwelcome to do so. Please, fork this project, make your changes following the\nusual <a href=\"https://pycodestyle.readthedocs.io/en/latest/\" rel=\"nofollow\">PEP 8</a> code style, sprinkling with tests and submit a PR for\nreview.</p>\n<p>The Chaos Toolkit projects require all contributors must sign a\n<a href=\"https://github.com/probot/dco#how-it-works\" rel=\"nofollow\">Developer Certificate of Origin</a> on each commit they would like to merge\ninto the master branch of the repository. Please, make sure you can abide by\nthe rules of the DCO before submitting a PR.</p>\n<h3>Develop</h3>\n<p>If you wish to develop on this project, make sure to install the development\ndependencies. But first, <a href=\"http://chaostoolkit.org/reference/usage/install/#create-a-virtual-environment\" rel=\"nofollow\">create a virtual environment</a> and then install\nthose dependencies.</p>\n<pre><span class=\"gp\">$</span> pip install -r requirements-dev.txt -r requirements.txt \n</pre>\n<p>Then, point your environment to this directory:</p>\n<pre><span class=\"gp\">$</span> python setup.py develop\n</pre>\n<p>Now, you can edit the files and they will be automatically be seen by your\nenvironment, even when running from the <code>chaos</code> command locally.</p>\n<h3>Test</h3>\n<p>To run the tests for the project execute the following:</p>\n<pre><code>$ pytest\n</code></pre>\n<h3>Add new AWS API Support</h3>\n<p>Once you have setup your environment, you can start adding new\n<a href=\"https://boto3.readthedocs.io/en/latest/reference/services/index.html\" rel=\"nofollow\">AWS API support</a> by adding new actions, probes and entire sub-packages\nfor those.</p>\n<h4>Services supported by boto</h4>\n<p>This package relies on <a href=\"https://boto3.readthedocs.io\" rel=\"nofollow\">boto3</a> to wrap the API calls into a fluent Python\nAPI. Some newer AWS services are not yet available in boto3, in that case,\nyou should read the next section.</p>\n<p>Let's say you want to support a new action in the EC2 sub-package.</p>\n<p>Start by creating a new function in <code>ec2/actions.py</code>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">chaoslib.types</span> <span class=\"kn\">import</span> <span class=\"n\">Configuration</span><span class=\"p\">,</span> <span class=\"n\">Secrets</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">chaosaws</span> <span class=\"kn\">import</span> <span class=\"n\">aws_client</span>\n<span class=\"kn\">from</span> <span class=\"nn\">chaosaws.types</span> <span class=\"kn\">import</span> <span class=\"n\">AWSResponse</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">reboot_instance</span><span class=\"p\">(</span><span class=\"n\">instance_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">dry_run</span><span class=\"p\">:</span> <span class=\"nb\">bool</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                    <span class=\"n\">configuration</span><span class=\"p\">:</span> <span class=\"n\">Configuration</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                    <span class=\"n\">secrets</span><span class=\"p\">:</span> <span class=\"n\">Secrets</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">AWSResponse</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Reboot a given EC2 instance.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">aws_client</span><span class=\"p\">(</span><span class=\"s1\">'ec2'</span><span class=\"p\">,</span> <span class=\"n\">configuration</span><span class=\"p\">,</span> <span class=\"n\">secrets</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">reboot_instances</span><span class=\"p\">(</span><span class=\"n\">InstanceIds</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">instance_id</span><span class=\"p\">],</span> <span class=\"n\">DryRun</span><span class=\"o\">=</span><span class=\"n\">dry_run</span><span class=\"p\">)</span>\n</pre>\n<p>As you can see, the actual code is straightforward. You first create a\n<a href=\"https://boto3.readthedocs.io/en/latest/reference/services/ec2.html#client\" rel=\"nofollow\">EC2 client</a> and simply call the appropriate method on that client\nwith the expected arguments. We return the action as-is so that it can be\nlogged by the chaostoolkit, or even be used as part of a steady-state\nhypothesis probe (if this was a probe, not action that is).</p>\n<p>You could decide to make more than one AWS API call but, it is better to keep\nit simple so that composition is easier from the experiment. Nonetheless,\nyou may also compose those directly into a single action as well for specific\nuse-cases.</p>\n<p>Please refer to the Chaos Toolkit documentation to learn more about the\n<a href=\"http://chaostoolkit.org/reference/api/experiment/#configuration\" rel=\"nofollow\">configuration</a> and <a href=\"http://chaostoolkit.org/reference/api/experiment/#secrets\" rel=\"nofollow\">secrets</a> objects.</p>\n<p>Once you have implemented that action, you must create at least one unit test\nfor it in the <code>tests/ec2/test_ec2_actions.py</code> test module. For example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">chaosaws.ec2.actions</span> <span class=\"kn\">import</span> <span class=\"n\">reboot_instancex</span>\n\n<span class=\"nd\">@patch</span><span class=\"p\">(</span><span class=\"s1\">'chaosaws.ec2.actions.aws_client'</span><span class=\"p\">,</span> <span class=\"n\">autospec</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_reboot_instance</span><span class=\"p\">(</span><span class=\"n\">aws_client</span><span class=\"p\">):</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">MagicMock</span><span class=\"p\">()</span>\n    <span class=\"n\">aws_client</span><span class=\"o\">.</span><span class=\"n\">return_value</span> <span class=\"o\">=</span> <span class=\"n\">client</span>\n    <span class=\"n\">inst_id</span> <span class=\"o\">=</span> <span class=\"s2\">\"i-1234567890abcdef0\"</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">reboot_instance</span><span class=\"p\">(</span><span class=\"n\">inst_id</span><span class=\"p\">)</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">reboot_instances</span><span class=\"o\">.</span><span class=\"n\">assert_called_with</span><span class=\"p\">(</span>\n        <span class=\"n\">InstanceIds</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">inst_id</span><span class=\"p\">],</span> <span class=\"n\">DryRun</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>By using the <a href=\"https://docs.python.org/3/library/unittest.mock.html#module-unittest.mock\" rel=\"nofollow\">built-in Python module to mock objects</a>, we can mock the\nEC2 client and assert we edo indeed call the appropriate method with the right\narguments. You are encouraged to write more than a single test for various\nconditions.</p>\n<p>Finally, should you choose to add support for a new AWS API resource altogether,\nyou should create the according sub-package.</p>\n<h4>Services not supported by boto (new AWS features)</h4>\n<p>If the support you want to provide is for a new AWS service that <a href=\"https://boto3.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">boto</a> does\nnot support yet, this requires direct call to the API endpoint via the\n<a href=\"http://docs.python-requests.org/en/master/\" rel=\"nofollow\">requests</a> package. Say we have a new service, not yet supported by boto3</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">chaoslib.types</span> <span class=\"kn\">import</span> <span class=\"n\">Configuration</span><span class=\"p\">,</span> <span class=\"n\">Secrets</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">chaosaws</span> <span class=\"kn\">import</span> <span class=\"n\">signed_api_call</span>\n<span class=\"kn\">from</span> <span class=\"nn\">chaosaws.types</span> <span class=\"kn\">import</span> <span class=\"n\">AWSResponse</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">terminate_worker_node</span><span class=\"p\">(</span><span class=\"n\">worker_node_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n                          <span class=\"n\">configuration</span><span class=\"p\">:</span> <span class=\"n\">Configuration</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                          <span class=\"n\">secrets</span><span class=\"p\">:</span> <span class=\"n\">Secrets</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">AWSResponse</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Terminate a worker node.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"DryRun\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"WorkerNodeId.1\"</span><span class=\"p\">:</span> <span class=\"n\">worker_node_id</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">signed_api_call</span><span class=\"p\">(</span>\n        <span class=\"s1\">'some-new-service-name'</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s1\">'/2018-01-01/worker/terminate'</span><span class=\"p\">,</span>\n        <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'POST'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">params</span><span class=\"p\">,</span>\n        <span class=\"n\">configuration</span><span class=\"o\">=</span><span class=\"n\">configuration</span><span class=\"p\">,</span> <span class=\"n\">secrets</span><span class=\"o\">=</span><span class=\"n\">secrets</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\n</pre>\n<p>Here is an example on existing API call (as a more concrete snippet):</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">chaoslib.types</span> <span class=\"kn\">import</span> <span class=\"n\">Configuration</span><span class=\"p\">,</span> <span class=\"n\">Secrets</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">chaosaws</span> <span class=\"kn\">import</span> <span class=\"n\">signed_api_call</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">stop_instance</span><span class=\"p\">(</span><span class=\"n\">instance_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">configuration</span><span class=\"p\">:</span> <span class=\"n\">Configuration</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                  <span class=\"n\">secrets</span><span class=\"p\">:</span> <span class=\"n\">Secrets</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">signed_api_call</span><span class=\"p\">(</span>\n        <span class=\"s1\">'ec2'</span><span class=\"p\">,</span>\n        <span class=\"n\">configuration</span><span class=\"o\">=</span><span class=\"n\">configuration</span><span class=\"p\">,</span>\n        <span class=\"n\">secrets</span><span class=\"o\">=</span><span class=\"n\">secrets</span><span class=\"p\">,</span>\n        <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">\"Action\"</span><span class=\"p\">:</span> <span class=\"s2\">\"StopInstances\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"InstanceId.1\"</span><span class=\"p\">:</span> <span class=\"n\">instance_id</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"Version\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2013-06-15\"</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"c1\"># this API returns XML, not JSON</span>\n    <span class=\"k\">return</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">text</span>\n</pre>\n<p>When using the <code>signed_api_call</code>, you are responsible for the right way of\npassing the parameters. Basically, look at the AWS documentation for each\nAPI call.</p>\n<p><strong>WARNING:</strong> It should be noted that, whenever boto3 implements an API, this\npackage should be updated accordingly, as boto3 is much more versatile and\nsolid.</p>\n<h4>Make your new sub-package discoverable</h4>\n<p>Finally, if you have created a new sub-package entirely, you need to make its\ncapability discoverable by the chaos toolkit. Simply amend the <code>discover</code>\nfunction in the <code>chaosaws/__init__.py</code>. For example, assuming a new <code>eks</code>\nsub-package, with actions and probes:</p>\n<pre>    <span class=\"n\">activities</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">discover_actions</span><span class=\"p\">(</span><span class=\"s2\">\"chaosaws.eks.actions\"</span><span class=\"p\">))</span>\n    <span class=\"n\">activities</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">discover_probes</span><span class=\"p\">(</span><span class=\"s2\">\"chaosaws.eks.probes\"</span><span class=\"p\">))</span>\n</pre>\n\n          </div>"}, "last_serial": 6888314, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "cad274b188e1dc462981f61cf08646be", "sha256": "4d4e6e69e5d296aa39f5cf500095b8e66660578bfb1d9ee8c5bd7c5f740f50de"}, "downloads": -1, "filename": "chaostoolkit_aws-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cad274b188e1dc462981f61cf08646be", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 8148, "upload_time": "2018-03-09T11:16:58", "upload_time_iso_8601": "2018-03-09T11:16:58.343536Z", "url": "https://files.pythonhosted.org/packages/46/65/3f2d097027ba0ca45ce8f7fbe4290d48825e31ddb8f37fd4aee02a84f021/chaostoolkit_aws-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "244d70fe885363f372b9e9e24581bba5", "sha256": "16562a1fb12d95a70b8a2a8ba7cbe8841e60fc87b02259d9ac361b65866abfc3"}, "downloads": -1, "filename": "chaostoolkit-aws-0.1.0.tar.gz", "has_sig": false, "md5_digest": "244d70fe885363f372b9e9e24581bba5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 4767, "upload_time": "2018-03-09T11:17:00", "upload_time_iso_8601": "2018-03-09T11:17:00.299434Z", "url": "https://files.pythonhosted.org/packages/e4/a5/1308fb66302f7edab60448233e606452e50a218fe3cd2d2e941a0af232f4/chaostoolkit-aws-0.1.0.tar.gz", "yanked": false}], "0.10.0": [{"comment_text": "", "digests": {"md5": "ba345924c1f0b69a1e383bac3210a8fa", "sha256": "61f4bffbfa419cbaf046c7a8dbedab7fdf12ea0bd9fc69d715c6a5f4afbef8e7"}, "downloads": -1, "filename": "chaostoolkit_aws-0.10.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ba345924c1f0b69a1e383bac3210a8fa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 31309, "upload_time": "2019-03-08T09:00:58", "upload_time_iso_8601": "2019-03-08T09:00:58.105183Z", "url": "https://files.pythonhosted.org/packages/fe/8b/a604345c57e4c8d8bdb04f56be9c05ca0bfff907c0a941f29d7f287a96c6/chaostoolkit_aws-0.10.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c38a4118e7b2edf2ffce61060a10aaa", "sha256": "f91a9c1fd1b4d9f6fae4a26fddd4755056e43ba853bfa62b39dada04938cf686"}, "downloads": -1, "filename": "chaostoolkit-aws-0.10.0.tar.gz", "has_sig": false, "md5_digest": "2c38a4118e7b2edf2ffce61060a10aaa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 30110, "upload_time": "2019-03-08T09:00:59", "upload_time_iso_8601": "2019-03-08T09:00:59.416033Z", "url": "https://files.pythonhosted.org/packages/e1/2e/57dc980317e89d5fc6d96ab681b99a9a038a07e44fc82d7f5b283d468cb4/chaostoolkit-aws-0.10.0.tar.gz", "yanked": false}], "0.11.1": [{"comment_text": "", "digests": {"md5": "644c5d9f33bad1099b5fde6e1841944e", "sha256": "2cbd353025468d721098bcf1b66de4c9a15df0d869c4d72b8f870527a2781603"}, "downloads": -1, "filename": "chaostoolkit_aws-0.11.1-py3-none-any.whl", "has_sig": false, "md5_digest": "644c5d9f33bad1099b5fde6e1841944e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 35981, "upload_time": "2019-06-03T19:14:07", "upload_time_iso_8601": "2019-06-03T19:14:07.020327Z", "url": "https://files.pythonhosted.org/packages/a1/af/fb405e49464a8b695ba3f09d69c8019a152a5186a1191789b5df7cc7d3db/chaostoolkit_aws-0.11.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0e3b21d07213191450350dcb53b383a", "sha256": "3de1a4b00c79b8708f9876dad5110c8f4de9f51ae8ffd20ba6b7290ab2e83016"}, "downloads": -1, "filename": "chaostoolkit-aws-0.11.1.tar.gz", "has_sig": false, "md5_digest": "c0e3b21d07213191450350dcb53b383a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 34699, "upload_time": "2019-06-03T19:14:09", "upload_time_iso_8601": "2019-06-03T19:14:09.040176Z", "url": "https://files.pythonhosted.org/packages/92/8b/67569ee6afc601b2acc532ecf8e1c79ef51a877d1058716a2c3db71c7e3f/chaostoolkit-aws-0.11.1.tar.gz", "yanked": false}], "0.11.2": [{"comment_text": "", "digests": {"md5": "ad56043b99b70c57ba0b31c1bd6ed8d0", "sha256": "b2cfefb72d7e6ec140edd11b8e2f9f200b51159137397c392f3147c370700b24"}, "downloads": -1, "filename": "chaostoolkit_aws-0.11.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ad56043b99b70c57ba0b31c1bd6ed8d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 35983, "upload_time": "2019-06-03T19:52:15", "upload_time_iso_8601": "2019-06-03T19:52:15.897037Z", "url": "https://files.pythonhosted.org/packages/bb/b2/46be7cef5672d71208a147cba8b950fbc581ac29ab9508f095bc86d5c975/chaostoolkit_aws-0.11.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1ec06387cc0d24783c3c4fd9b03162e", "sha256": "9095f4a5baa024eb511b7af10a9f5e09eaec424bb0ae5344268ebb843b0edd41"}, "downloads": -1, "filename": "chaostoolkit-aws-0.11.2.tar.gz", "has_sig": false, "md5_digest": "c1ec06387cc0d24783c3c4fd9b03162e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 34744, "upload_time": "2019-06-03T19:52:17", "upload_time_iso_8601": "2019-06-03T19:52:17.585107Z", "url": "https://files.pythonhosted.org/packages/33/31/8d4d8e56cea06f0dc00f5ca7c0b0dd36d2582c8cea8e6459d8c606c662db/chaostoolkit-aws-0.11.2.tar.gz", "yanked": false}], "0.12.0": [{"comment_text": "", "digests": {"md5": "c33ab8644524f6e77c7ae83c3bd4d93c", "sha256": "c212e78673fe8b375439d77dd0bc88957a2788cd0b1b4180ff5053635b416dcf"}, "downloads": -1, "filename": "chaostoolkit_aws-0.12.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c33ab8644524f6e77c7ae83c3bd4d93c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 42416, "upload_time": "2019-10-16T19:04:12", "upload_time_iso_8601": "2019-10-16T19:04:12.431728Z", "url": "https://files.pythonhosted.org/packages/90/bb/c0e5ec0e5ca547481e290c6af4e2cdafe7cb8f8b7018b390db0cbe070e60/chaostoolkit_aws-0.12.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1a4283b4083a0b7c6447c6af06402f0", "sha256": "bdcf3116d7b435e0742120437f95de1e250510fc557703ca1c692ae5dbc0bddb"}, "downloads": -1, "filename": "chaostoolkit-aws-0.12.0.tar.gz", "has_sig": false, "md5_digest": "c1a4283b4083a0b7c6447c6af06402f0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 38158, "upload_time": "2019-10-16T19:04:14", "upload_time_iso_8601": "2019-10-16T19:04:14.446778Z", "url": "https://files.pythonhosted.org/packages/39/ee/f6428e6fc7c4c2301fc0c54876c7ea17772ae16df42a3a62ab56124abf86/chaostoolkit-aws-0.12.0.tar.gz", "yanked": false}], "0.13.0": [{"comment_text": "", "digests": {"md5": "38bdb41f54d912194dc6d095d708aa80", "sha256": "dd657e80dc4a086c4956b6bb1ea2737ab709ba605e624426b0703cecdc071f53"}, "downloads": -1, "filename": "chaostoolkit_aws-0.13.0-py3-none-any.whl", "has_sig": false, "md5_digest": "38bdb41f54d912194dc6d095d708aa80", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 44371, "upload_time": "2020-03-26T14:06:27", "upload_time_iso_8601": "2020-03-26T14:06:27.233195Z", "url": "https://files.pythonhosted.org/packages/47/fa/2dbebc7518c37f873ad5a32ca176ddca132dc43ad2e785d770900e8a39c0/chaostoolkit_aws-0.13.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1cf6eafd1b57808f09ebdca59629b97", "sha256": "af1ad7564e37ea542a37b55ea73c3aafc77d08f468743b8fd0538f179c97d952"}, "downloads": -1, "filename": "chaostoolkit-aws-0.13.0.tar.gz", "has_sig": false, "md5_digest": "c1cf6eafd1b57808f09ebdca59629b97", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 39644, "upload_time": "2020-03-26T14:06:28", "upload_time_iso_8601": "2020-03-26T14:06:28.973860Z", "url": "https://files.pythonhosted.org/packages/86/7f/9a2bfa1a88d46f4eb750ee9b8b1031d13723942690a849622c2ed0139373/chaostoolkit-aws-0.13.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "1ae1a22a88c2e7755ad17f0e14465af9", "sha256": "3df03024db4394c0a22932b6860a4454d7bd1b34ab96dfbf68ea086ba1a104a4"}, "downloads": -1, "filename": "chaostoolkit_aws-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1ae1a22a88c2e7755ad17f0e14465af9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 13997, "upload_time": "2018-04-03T13:08:07", "upload_time_iso_8601": "2018-04-03T13:08:07.300784Z", "url": "https://files.pythonhosted.org/packages/81/56/f58fb51fdf83fac0e4c108d01ce6c9b05f5a49ff1f54b215f54aaa7ed2bf/chaostoolkit_aws-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "007163cd8e1ff27b7a8fecb208a1276f", "sha256": "f81f835211b2b4dd4e6bde3deda762a7e76b5092dd33ee284830696922974cf8"}, "downloads": -1, "filename": "chaostoolkit-aws-0.2.0.tar.gz", "has_sig": false, "md5_digest": "007163cd8e1ff27b7a8fecb208a1276f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 8525, "upload_time": "2018-04-03T13:08:08", "upload_time_iso_8601": "2018-04-03T13:08:08.217210Z", "url": "https://files.pythonhosted.org/packages/e1/b5/c0a4b53ba7e3c126f3d200887bf6b9f53c950b47070d5d70f7ad0948b614/chaostoolkit-aws-0.2.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "83dbf95fd34b9092155f5ef4f23ddbd4", "sha256": "63bb73f4c602ff9d740514fc9b4b1810c6e2c8f7d9a0f8374fed1964389d5b68"}, "downloads": -1, "filename": "chaostoolkit_aws-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "83dbf95fd34b9092155f5ef4f23ddbd4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 18263, "upload_time": "2018-05-09T12:28:38", "upload_time_iso_8601": "2018-05-09T12:28:38.875401Z", "url": "https://files.pythonhosted.org/packages/2f/74/8e2ddaffcaf20f34cba7de0f0f137c6ca57bb132eceaa9e452844778927b/chaostoolkit_aws-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4a4f4818094dc34b43c2e2933f8e4d6", "sha256": "abb8f7006093a9b8067c942863d9c5ec5f3adf791e5080f7f213e8efbef414d1"}, "downloads": -1, "filename": "chaostoolkit-aws-0.4.0.tar.gz", "has_sig": false, "md5_digest": "a4a4f4818094dc34b43c2e2933f8e4d6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 12317, "upload_time": "2018-05-09T12:28:40", "upload_time_iso_8601": "2018-05-09T12:28:40.074490Z", "url": "https://files.pythonhosted.org/packages/ad/54/aa456cbdc825262f39d4196740e8d0975d5ede6cab0e6cacce850829aafe/chaostoolkit-aws-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "86afc47dbeb77eb4e018b7032882fa4b", "sha256": "6ec37beb1ee936a8dc7b1ac95b40eb5f4b58c778ead0c0d82d6c73c34ab7804f"}, "downloads": -1, "filename": "chaostoolkit_aws-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "86afc47dbeb77eb4e018b7032882fa4b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 18263, "upload_time": "2018-05-14T12:16:31", "upload_time_iso_8601": "2018-05-14T12:16:31.509196Z", "url": "https://files.pythonhosted.org/packages/45/fe/0e0cab7a0543bb54ac3675ff14855ba1d4b6fdd082ebf91ac381b1d4388d/chaostoolkit_aws-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "019eeeb284388e58c2f1b644b29cc716", "sha256": "6b1e38eccdbc9863cb2ab665032913b0cd62eaa4cab36035ed0656f00056b168"}, "downloads": -1, "filename": "chaostoolkit-aws-0.4.1.tar.gz", "has_sig": false, "md5_digest": "019eeeb284388e58c2f1b644b29cc716", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 19388, "upload_time": "2018-05-14T12:16:32", "upload_time_iso_8601": "2018-05-14T12:16:32.717353Z", "url": "https://files.pythonhosted.org/packages/74/ea/ad36a8939a44ac531c8487852bbce450bd432b58c891b22bf85bf8761a90/chaostoolkit-aws-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "c3aad839fee90221c5debca329fc126a", "sha256": "418d9e94a0fb67ae49cbc101fef8a13abc5936a65e96a00fbaa49f42b9ac9a33"}, "downloads": -1, "filename": "chaostoolkit_aws-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c3aad839fee90221c5debca329fc126a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 18264, "upload_time": "2018-05-14T12:41:22", "upload_time_iso_8601": "2018-05-14T12:41:22.504710Z", "url": "https://files.pythonhosted.org/packages/d3/bd/b72edfd815d4c5ebdeb9df9b6f33c24f1b129141bd1af403307f696ce878/chaostoolkit_aws-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ce2606e69ce4f69c1bedd35c602b8a5", "sha256": "84008b2cf400f4c0ab03b5086967d2be5463bf4e179095563180fa9527422e81"}, "downloads": -1, "filename": "chaostoolkit-aws-0.4.2.tar.gz", "has_sig": false, "md5_digest": "5ce2606e69ce4f69c1bedd35c602b8a5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 19631, "upload_time": "2018-05-14T12:41:25", "upload_time_iso_8601": "2018-05-14T12:41:25.297598Z", "url": "https://files.pythonhosted.org/packages/63/a6/37d815f6a5b384f5a13603f2452a4ff72c266a31a402fdc8b6ce3e036684/chaostoolkit-aws-0.4.2.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "235931be110a6f6bf55780d8a3242da3", "sha256": "1b5d839ff59551108eab66f18d0a718ee86964db8cd950a99dfb8fd35cba3bd7"}, "downloads": -1, "filename": "chaostoolkit_aws-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "235931be110a6f6bf55780d8a3242da3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 19742, "upload_time": "2018-06-06T13:42:54", "upload_time_iso_8601": "2018-06-06T13:42:54.027765Z", "url": "https://files.pythonhosted.org/packages/8a/ff/08d32fa11eb44a081e161d3373483bd727ec1521384b10f15cdb49f27f6b/chaostoolkit_aws-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b518a459a95d31bcfa37af37f7ffe3d", "sha256": "f579aa8d3872075ae6474b39cac63f714d01184a3ca366db47b8c4b50ab9fdd6"}, "downloads": -1, "filename": "chaostoolkit-aws-0.5.1.tar.gz", "has_sig": false, "md5_digest": "3b518a459a95d31bcfa37af37f7ffe3d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 20244, "upload_time": "2018-06-06T13:42:55", "upload_time_iso_8601": "2018-06-06T13:42:55.407150Z", "url": "https://files.pythonhosted.org/packages/f7/3f/349ee1c82b1f2f5ea26ccc21109566b6a8875f3fb46ae9c4016811e50760/chaostoolkit-aws-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "415c106d715989f5f7759996e4a5f909", "sha256": "dd4cad872cd7c0556715e7f93cf2b58326cc2f4beec59f1b2b87b814ec199637"}, "downloads": -1, "filename": "chaostoolkit_aws-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "415c106d715989f5f7759996e4a5f909", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 19723, "upload_time": "2018-06-13T18:33:31", "upload_time_iso_8601": "2018-06-13T18:33:31.727969Z", "url": "https://files.pythonhosted.org/packages/32/02/8464928fcc504ae6bb8b0ab510bc203f6956fb2d26a79514a82816c8206e/chaostoolkit_aws-0.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a42721f91e3bb3eb159cd2178d7add2c", "sha256": "465b721b133af141d056d1fe6efaaf7829a2d7a88a985bbe136f157ba980eb3d"}, "downloads": -1, "filename": "chaostoolkit-aws-0.5.2.tar.gz", "has_sig": false, "md5_digest": "a42721f91e3bb3eb159cd2178d7add2c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 20316, "upload_time": "2018-06-13T18:33:32", "upload_time_iso_8601": "2018-06-13T18:33:32.944230Z", "url": "https://files.pythonhosted.org/packages/f6/54/ace84ee45f52ed37b71726dad4e522d2bc4db4d44f9ea679c8e3102593bf/chaostoolkit-aws-0.5.2.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "518212805fb90b1aaeafd1534f9bad20", "sha256": "cdf66ad60021502b0b5950d8a39a54220f0895452e4314cd5a45306fa34323ef"}, "downloads": -1, "filename": "chaostoolkit_aws-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "518212805fb90b1aaeafd1534f9bad20", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 19909, "upload_time": "2018-07-09T11:44:42", "upload_time_iso_8601": "2018-07-09T11:44:42.433702Z", "url": "https://files.pythonhosted.org/packages/d6/70/74018668b2f17bc1c3093271ef4c8ffe1da72a95147378cd039a3176c2ea/chaostoolkit_aws-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3fc03d87545a9f26f4521be76d5b0e09", "sha256": "25a818f1417d9ef63bee9b3ac5a5d7d08678daf86bb0ce69db849740c64c54e2"}, "downloads": -1, "filename": "chaostoolkit-aws-0.6.0.tar.gz", "has_sig": false, "md5_digest": "3fc03d87545a9f26f4521be76d5b0e09", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 20495, "upload_time": "2018-07-09T11:44:43", "upload_time_iso_8601": "2018-07-09T11:44:43.674417Z", "url": "https://files.pythonhosted.org/packages/31/76/e0088ceddceabe81581f19ded83fd6045c16a3ed351514bec0480ebdfcab/chaostoolkit-aws-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "41fd1853e5ea239ede792654c3ce00cd", "sha256": "01215cd0e02cb1db86a719e5b1abe1d9e3d53ca2fd5d93444a8df76749351a29"}, "downloads": -1, "filename": "chaostoolkit_aws-0.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "41fd1853e5ea239ede792654c3ce00cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 15869, "upload_time": "2018-08-31T13:36:21", "upload_time_iso_8601": "2018-08-31T13:36:21.468910Z", "url": "https://files.pythonhosted.org/packages/e9/90/f0ebb34ca9614375039cefeaf533572f3a34c2fee4d43886c01443e6428f/chaostoolkit_aws-0.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ce71d6196b078b99134947afdd8ec85", "sha256": "54ed87011a00c2a0687a85f588c9519454a4f16db75e74e79ee04c7fe9ebffff"}, "downloads": -1, "filename": "chaostoolkit-aws-0.7.0.tar.gz", "has_sig": false, "md5_digest": "1ce71d6196b078b99134947afdd8ec85", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 21509, "upload_time": "2018-08-31T13:36:22", "upload_time_iso_8601": "2018-08-31T13:36:22.624857Z", "url": "https://files.pythonhosted.org/packages/57/51/f418782b584ad68728eaf9713cd6346d007fb98d31ec2608b9874679ce2c/chaostoolkit-aws-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "ea0299771bd9779df203654cb0391763", "sha256": "25655b1bebf17c0027b5886ce5f27c7f6331f8bc88cb5e0aa77970f002a93bf9"}, "downloads": -1, "filename": "chaostoolkit_aws-0.7.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ea0299771bd9779df203654cb0391763", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 20834, "upload_time": "2018-09-07T13:00:51", "upload_time_iso_8601": "2018-09-07T13:00:51.164456Z", "url": "https://files.pythonhosted.org/packages/63/e5/714a52b6075b8cf487f49c27838576db41e1f6a82c540145ace05a9d5a6f/chaostoolkit_aws-0.7.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "38de2f8b5fbacfc9b664c969fc2f8385", "sha256": "a9858f1c7386e2f2516c588d5369e593df0c7e02393b48a387a075035fd85048"}, "downloads": -1, "filename": "chaostoolkit-aws-0.7.1.tar.gz", "has_sig": false, "md5_digest": "38de2f8b5fbacfc9b664c969fc2f8385", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 23896, "upload_time": "2018-09-07T13:00:52", "upload_time_iso_8601": "2018-09-07T13:00:52.133074Z", "url": "https://files.pythonhosted.org/packages/21/e3/2fad47daf2fd1ef730009b297355baadfab5439a41c99b1f433b95c2f4e3/chaostoolkit-aws-0.7.1.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "a06af0910f19934e0654df0a93a8ab71", "sha256": "817b06950e4c602cf92f0713692717b4919cd1536a97c7ed0c637d8260b2f352"}, "downloads": -1, "filename": "chaostoolkit_aws-0.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a06af0910f19934e0654df0a93a8ab71", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 21512, "upload_time": "2018-10-06T12:06:37", "upload_time_iso_8601": "2018-10-06T12:06:37.632100Z", "url": "https://files.pythonhosted.org/packages/c9/c3/a6a354891074621a0162d7c67106f241b9de75886f99169aad6affd7b604/chaostoolkit_aws-0.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "75799ae87472bec234177e5853bb3acd", "sha256": "05088ca217de3c587ad364a33517b65b64464e4b876663dee1d93b6d4fa18dec"}, "downloads": -1, "filename": "chaostoolkit-aws-0.8.0.tar.gz", "has_sig": false, "md5_digest": "75799ae87472bec234177e5853bb3acd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 21942, "upload_time": "2018-10-06T12:06:38", "upload_time_iso_8601": "2018-10-06T12:06:38.662102Z", "url": "https://files.pythonhosted.org/packages/e2/7b/7eb83c378abbab4c2ca6180f5f50563387c04e79a0c28e999cae7bf28002/chaostoolkit-aws-0.8.0.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "a9856e78d1e65cf3f1d281ba51aed336", "sha256": "2947b2bf22c3ce68d9cd4120720b353b1970c663428abd0e9947feefbef59ab5"}, "downloads": -1, "filename": "chaostoolkit_aws-0.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a9856e78d1e65cf3f1d281ba51aed336", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 25594, "upload_time": "2018-11-20T15:02:03", "upload_time_iso_8601": "2018-11-20T15:02:03.988279Z", "url": "https://files.pythonhosted.org/packages/2f/cc/a4a15f827554717c4825ae162ece63b3aa6f4011fef7099c6b6848b75a69/chaostoolkit_aws-0.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4b625c74b916500c21a14acd59ff743", "sha256": "4c7e8c515239c100b9b60c153b429b035169f3c6cba64780bf68e4dceb637cfa"}, "downloads": -1, "filename": "chaostoolkit-aws-0.9.0.tar.gz", "has_sig": false, "md5_digest": "e4b625c74b916500c21a14acd59ff743", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 24836, "upload_time": "2018-11-20T15:02:05", "upload_time_iso_8601": "2018-11-20T15:02:05.435518Z", "url": "https://files.pythonhosted.org/packages/62/e8/f39e9b372bcedb56388f91bf120a18b5182ef380a7c6bd4f8423d124c544/chaostoolkit-aws-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "38bdb41f54d912194dc6d095d708aa80", "sha256": "dd657e80dc4a086c4956b6bb1ea2737ab709ba605e624426b0703cecdc071f53"}, "downloads": -1, "filename": "chaostoolkit_aws-0.13.0-py3-none-any.whl", "has_sig": false, "md5_digest": "38bdb41f54d912194dc6d095d708aa80", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*", "size": 44371, "upload_time": "2020-03-26T14:06:27", "upload_time_iso_8601": "2020-03-26T14:06:27.233195Z", "url": "https://files.pythonhosted.org/packages/47/fa/2dbebc7518c37f873ad5a32ca176ddca132dc43ad2e785d770900e8a39c0/chaostoolkit_aws-0.13.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1cf6eafd1b57808f09ebdca59629b97", "sha256": "af1ad7564e37ea542a37b55ea73c3aafc77d08f468743b8fd0538f179c97d952"}, "downloads": -1, "filename": "chaostoolkit-aws-0.13.0.tar.gz", "has_sig": false, "md5_digest": "c1cf6eafd1b57808f09ebdca59629b97", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 39644, "upload_time": "2020-03-26T14:06:28", "upload_time_iso_8601": "2020-03-26T14:06:28.973860Z", "url": "https://files.pythonhosted.org/packages/86/7f/9a2bfa1a88d46f4eb750ee9b8b1031d13723942690a849622c2ed0139373/chaostoolkit-aws-0.13.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:27 2020"}