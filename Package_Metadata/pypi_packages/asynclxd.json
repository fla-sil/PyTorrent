{"info": {"author": "Alberto Donato", "author_email": "alberto.donato@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)", "Programming Language :: Python :: 3"], "description": "======================================================\nasyncLXD - Asynchronous client library for the LXD API\n======================================================\n\n|Latest Version| |Build Status| |Coverage Status|\n\nasyncLXD is an asyncio-based client library for the the LXD_ REST API.\n\nIt provides an high level API to interact with resources on LXD servers, such\nas containers, images, networks, profiles and storage.\n\nLXD servers are accessible through the `asynclxd.remote.Remote` class, which\nexposes server details and configuration, as well as access to resource\ncollections.\n\nCollections (such as `containers`, `images`, `profiles`, `networks`, ...) allow\ncreating and fetching resources, which can be modified, updated or deleted.\n\nFor example:\n\n.. code:: python\n\n    from pprint import pprint\n\n    from asynclxd import lxc\n\n    # get all remotes defined in the client config\n    remotes = lxc.get_remotes()\n    async with remotes['local'] as remote:\n        # fetch all images and print their details\n        resp = await remote.images.read()\n        for image in resp:\n            resp = await image.read()\n            pprint(resp.metadata)\n            # image details have been read, now they're also cached (same\n            # output as above)\n            pprint(image.details())\n\n        # fetch a single container by name\n        container = await remote.containers.get('c')\n        pprint(container.details())\n        # rename it\n        await container.rename('new-c')\n        # change some details\n        await container.update({'description': 'foo'})\n        # and now delete it\n        await container.delete()\n\n\n.. _LXD: https://linuxcontainers.org/lxd/\n\n.. |Latest Version| image:: https://img.shields.io/pypi/v/asynclxd.svg\n   :target: https://pypi.python.org/pypi/asynclxd\n.. |Build Status| image:: https://img.shields.io/travis/albertodonato/asynclxd.svg\n   :target: https://travis-ci.org/albertodonato/asynclxd\n.. |Coverage Status| image:: https://img.shields.io/codecov/c/github/albertodonato/asynclxd/master.svg\n   :target: https://codecov.io/gh/albertodonato/asynclxd\n.. |Documentation Status| image:: https://readthedocs.org/projects/asynclxd/badge/?version=stable\n   :target: https://asynclxd.readthedocs.io/en/stable/?badge=stable", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/albertodonato/asynclxd", "keywords": "asyncio LXD REST API", "license": "LGPLv3+", "maintainer": "Alberto Donato", "maintainer_email": "alberto.donato@gmail.com", "name": "asynclxd", "package_url": "https://pypi.org/project/asynclxd/", "platform": "", "project_url": "https://pypi.org/project/asynclxd/", "project_urls": {"Homepage": "https://github.com/albertodonato/asynclxd"}, "release_url": "https://pypi.org/project/asynclxd/0.0.1/", "requires_dist": null, "requires_python": ">= 3.6", "summary": "Asynchronous client library for LXD REST API", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/asynclxd\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/784609cdeab16aa498007fd8a05c886905923482/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6173796e636c78642e737667\"></a> <a href=\"https://travis-ci.org/albertodonato/asynclxd\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b47368a08edce9bd7616bf8ab664ed10e97ec963/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f616c626572746f646f6e61746f2f6173796e636c78642e737667\"></a> <a href=\"https://codecov.io/gh/albertodonato/asynclxd\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c68ea50447ed1305adff99fdaac7a4f054191d2f/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f616c626572746f646f6e61746f2f6173796e636c78642f6d61737465722e737667\"></a></p>\n<p>asyncLXD is an asyncio-based client library for the the <a href=\"https://linuxcontainers.org/lxd/\" rel=\"nofollow\">LXD</a> REST API.</p>\n<p>It provides an high level API to interact with resources on LXD servers, such\nas containers, images, networks, profiles and storage.</p>\n<p>LXD servers are accessible through the <cite>asynclxd.remote.Remote</cite> class, which\nexposes server details and configuration, as well as access to resource\ncollections.</p>\n<p>Collections (such as <cite>containers</cite>, <cite>images</cite>, <cite>profiles</cite>, <cite>networks</cite>, \u2026) allow\ncreating and fetching resources, which can be modified, updated or deleted.</p>\n<p>For example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pprint</span> <span class=\"kn\">import</span> <span class=\"n\">pprint</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">asynclxd</span> <span class=\"kn\">import</span> <span class=\"n\">lxc</span>\n\n<span class=\"c1\"># get all remotes defined in the client config</span>\n<span class=\"n\">remotes</span> <span class=\"o\">=</span> <span class=\"n\">lxc</span><span class=\"o\">.</span><span class=\"n\">get_remotes</span><span class=\"p\">()</span>\n<span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">remotes</span><span class=\"p\">[</span><span class=\"s1\">'local'</span><span class=\"p\">]</span> <span class=\"k\">as</span> <span class=\"n\">remote</span><span class=\"p\">:</span>\n    <span class=\"c1\"># fetch all images and print their details</span>\n    <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">remote</span><span class=\"o\">.</span><span class=\"n\">images</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span> <span class=\"n\">image</span> <span class=\"ow\">in</span> <span class=\"n\">resp</span><span class=\"p\">:</span>\n        <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n        <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">metadata</span><span class=\"p\">)</span>\n        <span class=\"c1\"># image details have been read, now they're also cached (same</span>\n        <span class=\"c1\"># output as above)</span>\n        <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">details</span><span class=\"p\">())</span>\n\n    <span class=\"c1\"># fetch a single container by name</span>\n    <span class=\"n\">container</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">remote</span><span class=\"o\">.</span><span class=\"n\">containers</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'c'</span><span class=\"p\">)</span>\n    <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">container</span><span class=\"o\">.</span><span class=\"n\">details</span><span class=\"p\">())</span>\n    <span class=\"c1\"># rename it</span>\n    <span class=\"k\">await</span> <span class=\"n\">container</span><span class=\"o\">.</span><span class=\"n\">rename</span><span class=\"p\">(</span><span class=\"s1\">'new-c'</span><span class=\"p\">)</span>\n    <span class=\"c1\"># change some details</span>\n    <span class=\"k\">await</span> <span class=\"n\">container</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span><span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"s1\">'foo'</span><span class=\"p\">})</span>\n    <span class=\"c1\"># and now delete it</span>\n    <span class=\"k\">await</span> <span class=\"n\">container</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 6662843, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "8587d36264ae5c78f54e76f8f01b62a4", "sha256": "2ecf222ee2195f2141e505194fb07f852ad9729b6f9b1def8425bd382d01b3d5"}, "downloads": -1, "filename": "asynclxd-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8587d36264ae5c78f54e76f8f01b62a4", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 27568, "upload_time": "2020-02-19T19:22:20", "upload_time_iso_8601": "2020-02-19T19:22:20.042530Z", "url": "https://files.pythonhosted.org/packages/a1/be/53515721003c9fe718c4090734adb0a0cb93eacffa5cb4196d118db80f46/asynclxd-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8587d36264ae5c78f54e76f8f01b62a4", "sha256": "2ecf222ee2195f2141e505194fb07f852ad9729b6f9b1def8425bd382d01b3d5"}, "downloads": -1, "filename": "asynclxd-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8587d36264ae5c78f54e76f8f01b62a4", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 27568, "upload_time": "2020-02-19T19:22:20", "upload_time_iso_8601": "2020-02-19T19:22:20.042530Z", "url": "https://files.pythonhosted.org/packages/a1/be/53515721003c9fe718c4090734adb0a0cb93eacffa5cb4196d118db80f46/asynclxd-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:43 2020"}