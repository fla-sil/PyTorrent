{"info": {"author": "Lucas Sinclair", "author_email": "lucas.sinclair@me.com", "bugtrack_url": null, "classifiers": ["Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "[![changelog](http://allmychanges.com/p/python/seqenv/badge/)](http://allmychanges.com/p/python/seqenv/?utm_source=badge) [![PyPI version](https://badge.fury.io/py/seqenv.svg)](https://badge.fury.io/py/seqenv)\n\n# `seqenv` version 1.3.0\n* Assign environment ontology (EnvO) terms to short DNA sequences.\n* All code written by [Lucas Sinclair](http://envonautics.com/#lucas).\n* Publication at: https://peerj.com/articles/2690/\n\n### Dependencies\n* You need to have a copy of the NCBI nucleotide data base (called `nt`) installed locally as well as the `blastn` executable in your `$PATH`. So that BLAST finds the NT database, you can edit your `~/.ncbirc` file. The `blastn` executable should be in your `$PATH`.\n* You need to have `graphviz` installed and the C libraries should be accessible. This is usually resolved by typing `apt-get install libgraphviz-dev`. The `dot` executable should be in your `$PATH`.\n* The project also depends on some other python modules such as `biopython` and `pandas`. Happily, these will be installed automatically when calling the `pip` command below.\n\n### Installing\nTo install `seqenv` onto your machine, use the python package manager:\n\n    $ pip install seqenv\n\nYou might be installing this onto a computer server which you don't own and thus don't have sufficient privileges. In that case you can install everything in your home directory like this:\n\n    $ pip install --user seqenv\n\nIf this still doesn't work, you might be missing the `pip` program on your system or the correct version of Python (any version `2.7.x`). You can get both of these things by using using this little project: https://github.com/yyuu/pyenv\n\n### Usage\nOnce that is done, you can start processing FASTA files from the command line. For using the default parameters you can just type:\n\n    $ seqenv sequences.fasta\n\nWe will then assume that you have inputed 16S sequences. To modify the database or input a different type of sequences:\n\n    $ seqenv sequences.fasta --seqtype prot --search_db nr\n\nTo modify the minimum identity in the similarity search, use the following:\n\n    $ seqenv sequences.fasta --min_identity 0.97\n\nIf you have abundance data you would like to add to your analysis you can specify it like this in a TSV file:\n\n    $ seqenv sequences.fasta --abundances counts.tsv\n\n### All parameters\nSeveral other options are possible. Here is a list describing them all:\n\n   * `--seq_type`: Sequence type `nucl` or `prot`, for nucleotides or amino acids respectively (Default: `nucl`).\n   * `--search_algo`: Search algorithm. Either `blast` or `vsearch` (Default: `blast`).\n   * `--search_db`: The database to search against (Default: `nt`). You can specify the full path or make a `~/.ncbirc` file.\n   * `--normalization`: Can be either of `flat`, `ui` or `upui`. This option defaults to `flat`.\n     * If you choose `flat`, we will count every isolation source independently,\n       even if the same text appears several times for the same input sequence.\n     * If you choose `ui`, standing for unique isolation, we will count every\n       identical isolation source only once within the same input sequence.\n     * If you choose `upui`, standing for unique isolation and unique pubmed-ID,\n       we will uniquify the counts based on the text entry of the isolation\n       sources as well as on the pubmed identifiers from which the GI obtained.\n   * `--proportional`: Should we divide the counts of every input sequence by the number of envo terms that were associated to it. Defaults to `True`.\n   * `--backtracking`: For every term identified by the tagger, we will propagate frequency counts up the acyclic directed graph described by the ontology. Defaults to `False`.\n   * `--restrict`: Restrict the output to the descendants of just one ENVO term. This removes all other terms that are not reachable through the given node. For instance you could specify: `ENVO:00010483` (Disabled by default)\n   * `--num_threads`: Number of cores to use (Defaults to the total number of cores). Use `1` for non-parallel processing.\n   * `--out_dir`: The output directory in which to store the result and intermediary files. Defaults to the same directory as the input file.\n   * `--min_identity`: Minimum identity in similarity search (Default: `0.97`). Note: not available when using `blastp`.\n   * `--e_value`: Minimum e-value in similarity search (Default: `0.0001`).\n   * `--max_targets`: Maximum number of reference matches in the similarity search (Default: `10`).\n   * `--min_coverage`: Minimum query coverage in similarity search (Default: `0.97`).\n   * `--abundances`: Abundances file as TSV with OTUs as rows and sample names as columns (Default: None).\n   * `--N`: If abundances are given, pick only the top N sequences (Disabled by default).\n\n### Why make this ?\nThe continuous drop in the associated costs combined with the increased efficiency of the latest high-throughput sequencing technologies has resulted in an unprecedented growth in sequencing projects. Ongoing endeavors such as the [Earth Microbiome Project](http://www.earthmicrobiome.org) and the [Ocean Sampling Day](http://www.microb3.eu/osd) are transcending national boundaries and are attempting to characterize the global microbial taxonomic and functional diversity for the benefit of mankind. The collection of sequencing information generated by such efforts is vital to shed light on the ecological features and the processes characterizing different ecosystems, yet, the full knowledge discovery potential can only be unleashed if the associated meta data is also exploited to extract hidden patterns. For example, with the majority of genomes submitted to NCBI, there is an associated PubMed publication and in some cases there is a GenBank field called \"isolation sources\" that contains rich environmental information.\n\nWith the advances in community-generated standards and the adherence to recommended annotation guidelines such as those of [MIxS](http://gensc.org/gc_wiki/index.php/MIxS) of the Genomics Standards Consortium, it is now feasible to support intelligent queries and automated inference on such text resources.\n\nThe [Environmental Ontology](http://environmentontology.org/) (or EnvO) will be a critical part of this approach as it gives the ontology for the concise, controlled description of environments. It thus provides structured and controlled vocabulary for the unified meta data annotation, and also serves as a source for naming environmental information. Thus, we have developed the `seqenv` pipeline capable of annotating sequences with environment descriptive terms occurring within their records and/or in relevant literature.\n\nThe `seqenv` pipeline can be applied to any set of nucleotide or protein sequences. Annotation of metagenomic samples, in particular 16S rRNA sequences is also supported.\n\nThe pipeline has already been applied to a range of datasets (e.g Greek lagoon, Swedish lake/river, African and Asian pitlatrine datasets, Black Sea sediment sample datasets have been processed).\n\n### What does it do exactly ?\n Given a set of DNA sequences, `seqenv` first retrieves highly similar sequences from public repositories (e.g. NCBI GenBank) using BLAST or similar algorithm. Subsequently, from each of these homologous records, text fields carrying environmental context information such as the reference title and the **isolation source** field found in the metadata are extracted. Once the relevant pieces of text from each matching sequence have been gathered, they are processed by a text mining module capable of identifying any EnvO terms they contain (e.g. the word \"glacier\", or \"pelagic\", \"forest\", etc.). The identified EnvO terms along with their frequencies of occurrence are then subjected to multivariate statistics, producing matrices relating your samples to their putative sources as well as other useful outputs.\n\n### Pipeline overview\nThe publication contains more information of course, but here is a schematic overview of what happens inside `seqenv`:\n\n[![seqenv](documentation/frequencies.png)](documentation/frequencies.png)\n\n### Tutorial\nWe will first run `seqenv` on a 16S rRNA dataset using ***isolation sources*** as a text source. Here, `abundance.tsv` is a species abundance file (97% OTUs) processed through [`illumitag`](https://github.com/limno/illumitag) software and `centers.fasta` contains the corresponding sequences for the OTUs.\n\n~~~\n$ ls\nabundance.tsv\ncenters.fasta\n\n$ seqenv centers.fasta --abundances abundance.tsv --seq_type nucl --out_dir output --N 1000 --min_identity 0.99\n~~~\n\nThe output you will receive should look something like this:\n\n~~~\nseqenv version 1.2.0 (pid 52169)\nStart at: 2016-03-02 00:22:09.727377\n--> STEP 1: Parse the input FASTA file.\nElapsed time: 0:00:00.005811\nUsing: output/renamed.fasta\n--> STEP 2: Similarity search against the 'nt' database with 5 processes\nElapsed time: 0:02:11.215829\n--> STEP 3: Filter out bad hits from the search results\nElapsed time: 0:00:00.002071\n--> STEP 4: Parsing the search results\nElapsed time: 0:00:00.002099\n--> STEP 5: Setting up the SQLite3 database connection.\nElapsed time: 0:00:00.054077\nGot 81 GI hits and 65 of them had one for more EnvO terms associated.\n--> STEP 6: Computing EnvO term frequencies.\nElapsed time: 0:00:00.721455\n------------\nSuccess. Outputs are in 'output/'\nEnd at: 2016-03-02 00:24:22.504485\nTotal elapsed time: 0:02:12.777297\n~~~\n\nOnce the pipeline has finished processing, you will have the following contents in the output folder:\n\n~~~\n$ ls output/\nlist_concepts_found.tsv  samples_to_names.tsv  seq_to_names.tsv   top_seqs.fasta.parts\nrenamed.fasta            seq_to_concepts.tsv   top_seqs.blastout\nsamples.biom             seq_to_gis.pickle     top_seqs.fasta\n~~~\n\nThe most interesting files are probably:\n\n* `list_concepts_found.tsv` links every OTU to all its relevant BLAST hits and linked ENVO terms.\n* `seq_to_names.tsv` a matrix linking every OTU to its \"composition\" in terms of ENVO identifiers translated to readable names.\n* `samples_to_names.tsv` if an abundance file was provided, this is a a matrix linking every one of your samples to its \"composition\" in terms of ENVO identifiers translated to readable names.\n* `graphviz/` directory containing ontology graphs for everyone of the inputed sequences, such as in the following example:\n\n[![seqenv](documentation/ontology_graph.png)](documentation/ontology_graph.png)\n\n### Acknowledgments\n`seqenv` was originally conceived in the following hackathons supported by European Union's Earth System Science and Environmental Management ES1103 COST Action (\"[Microbial ecology & the earth system: collaborating for insight and success with the new generation of sequencing tools](http://www.cost.eu/domains_actions/essem/Actions/ES1103)\"):\n\n- **From Signals to Environmentally Tagged Sequences** (Ref: ECOST-MEETING-ES1103-050912-018418), September 27th-29th 2012, Hellenic Center for Marine Research, Crete, Greece.\n- **From Signals to Environmentally Tagged Sequences II** (Ref: ECOST-MEETING-ES1103-100613-031037), June 10th-13th 2013, Hellenic Center for Marine Research, Crete, Greece.\n- **From Signals to Environmentally Tagged Sequences III** (Ref: ECOST-MEETING-ES1103-220914-047036), September 22nd-25th 2014, Hellenic Center for Marine Research, Crete, Greece.\n\nThis work would not have been possible without the advice and support of many people who attended the hackathons, in alphabetical order:\n\n- Simon Berger (simon.berger@h-its.org)\n- Alica Chro\u0148\u00e1kov\u00e1 (alicach@upb.cas.cz)\n- Lars Juhl Jensen (lars.juhl.jensen@cpr.ku.dk)\n- Anastasis Oulas (oulas@hcmr.gr)\n- [Evangelos Pafilis](http://epafilis.info/) (pafilis@hcmr.gr) [2]\n- Christina Pavloudi (cpavloud@hcmr.gr)\n- [Chris Quince](http://www2.warwick.ac.uk/fac/med/staff/cquince/) (c.quince@warwick.ac.uk) [3]\n- Julia Schnetzer (jschnetz@mpi-bremen.de)\n- [Lucas Sinclair](http://envonautics.com/#lucas) (lucas.sinclair@me.com) [1]\n- Aaron Weimann (aaron.weimann@uni-duesseldorf.de)\n- Ali Zeeshan Ijaz (alizeeshanijaz@gmail.com)\n- [Umer Zeeshan Ijaz](http://userweb.eng.gla.ac.uk/umer.ijaz/) (umer.ijaz@glasgow.ac.uk) [3]\n\n[1] Main developer\n[2] Contact for correspondence\n[3] Original idea\n\n### News\n* **August 2013**: Chris Quince presented a talk on `seqenv` at [STAMPS2013](https://stamps.mbl.edu/index.php/Main_Page). You can download the PDF of the presentation: [C Quince et. al., SeqEnv: Annotating sequences with environments (STAMPS 2013)](https://stamps.mbl.edu/images/4/44/Quince_SeqEnvSTAMPS2013.pdf)\n\n### Publications that have used `seqenv`\n* Bacterial diversity along a 2600 km river continuum. `doi:10.1111/1462-2920.12886`\n* Can marine bacteria be recruited from freshwater sources and the air? `doi:10.1038/ismej.2014.89`\n\n### Development installation\nThis chapter shows you how to get a development install that makes it easier to contribute to and to change `seqenv` to suit your needs. If you cannot get a functional installation set up, feel free to contact the authors.\n\n##### Step 1: Cloning the repository\nHere you will download a copy of the code and place it somewhere in your home directory.\n\n    $ cd ~\n    $ mkdir repos\n    $ cd repos\n    $ git clone https://github.com/xapple/seqenv.git\n\n##### Step 2: Modify your search paths\nHere you will edit your ``~/.bashrc`` or ``~/.bash_profile`` to add a reference to the code you just downloaded. You need to add these two lines:\n\n    $ vim ~/.bash_profile\n    export PYTHONPATH=\"$HOME/repos/seqenv/\":$PYTHONPATH\n    export PATH=\"$HOME/repos/seqenv/seqenv\":$PATH\n\nAnd finally source your profile file if you haven't already.\n\n##### Step 3 (optional): Install your own version of python\nYour system probably comes with a version of python installed. But the variations from system to system are too great to rely on any available python. We suggest to just install our own version in your home directory. Otherwise, make sure that you are using version 2.7.x of python.\n\n##### Step 4: Check you have all the required executables\n`seqenv` will search for several different binaries as it processes your data. Please check all of these are available in your `$PATH`:\n\n    $ which blastn\n\n##### Step 5: Get a local copy of the NT database\nYou can choose the database you want to BLAST against. By default we will search against `nt`. So check your `~/.ncbirc` file for the adequate references. If you don't have a copy of such a database, you need to download one to your machine.\n\n##### Step 6: Install all required python packages\n`seqenv` uses several third party python libraries. You can get them by running these commands:\n\n    $ pip install biopython\n    $ pip install sh\n    $ pip install pandas\n    $ pip install tqdm\n    $ pip install biom-format\n    $ pip install requests\n    $ pip install pygraphviz\n    $ pip install networkx\n    $ pip install Orange-Bioinformatics\n\nIf you are on a machine that does not authorize you to install packages like that you can try to install them by adding the `--user` option.\n\nIf you are using a python manager such as pyenv, don't forget to rehash the binary links at the end:\n\n    $ pyenv rehash\n\nNow, you can check that it all works like this:\n\n    $ python -c \"import seqenv\"\n\n### Further documentation\nThe code is written in a clean, object-oriented, and pythonic way. It is also carries a fair deal of documentation. You can see this within the code itself or by going here: http://xapple.github.io/seqenv", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/xapple/seqenv/tarball/1.2.9", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/xapple/seqenv", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "seqenv", "package_url": "https://pypi.org/project/seqenv/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/seqenv/", "project_urls": {"Download": "https://github.com/xapple/seqenv/tarball/1.2.9", "Homepage": "https://github.com/xapple/seqenv"}, "release_url": "https://pypi.org/project/seqenv/1.3.0/", "requires_dist": null, "requires_python": null, "summary": "Assign environment ontology (EnvO) terms to DNA sequences", "version": "1.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            [![changelog](http://allmychanges.com/p/python/seqenv/badge/)](http://allmychanges.com/p/python/seqenv/?utm_source=badge) [![PyPI version](https://badge.fury.io/py/seqenv.svg)](https://badge.fury.io/py/seqenv)<br><br># `seqenv` version 1.3.0<br>* Assign environment ontology (EnvO) terms to short DNA sequences.<br>* All code written by [Lucas Sinclair](http://envonautics.com/#lucas).<br>* Publication at: https://peerj.com/articles/2690/<br><br>### Dependencies<br>* You need to have a copy of the NCBI nucleotide data base (called `nt`) installed locally as well as the `blastn` executable in your `$PATH`. So that BLAST finds the NT database, you can edit your `~/.ncbirc` file. The `blastn` executable should be in your `$PATH`.<br>* You need to have `graphviz` installed and the C libraries should be accessible. This is usually resolved by typing `apt-get install libgraphviz-dev`. The `dot` executable should be in your `$PATH`.<br>* The project also depends on some other python modules such as `biopython` and `pandas`. Happily, these will be installed automatically when calling the `pip` command below.<br><br>### Installing<br>To install `seqenv` onto your machine, use the python package manager:<br><br>    $ pip install seqenv<br><br>You might be installing this onto a computer server which you don't own and thus don't have sufficient privileges. In that case you can install everything in your home directory like this:<br><br>    $ pip install --user seqenv<br><br>If this still doesn't work, you might be missing the `pip` program on your system or the correct version of Python (any version `2.7.x`). You can get both of these things by using using this little project: https://github.com/yyuu/pyenv<br><br>### Usage<br>Once that is done, you can start processing FASTA files from the command line. For using the default parameters you can just type:<br><br>    $ seqenv sequences.fasta<br><br>We will then assume that you have inputed 16S sequences. To modify the database or input a different type of sequences:<br><br>    $ seqenv sequences.fasta --seqtype prot --search_db nr<br><br>To modify the minimum identity in the similarity search, use the following:<br><br>    $ seqenv sequences.fasta --min_identity 0.97<br><br>If you have abundance data you would like to add to your analysis you can specify it like this in a TSV file:<br><br>    $ seqenv sequences.fasta --abundances counts.tsv<br><br>### All parameters<br>Several other options are possible. Here is a list describing them all:<br><br>   * `--seq_type`: Sequence type `nucl` or `prot`, for nucleotides or amino acids respectively (Default: `nucl`).<br>   * `--search_algo`: Search algorithm. Either `blast` or `vsearch` (Default: `blast`).<br>   * `--search_db`: The database to search against (Default: `nt`). You can specify the full path or make a `~/.ncbirc` file.<br>   * `--normalization`: Can be either of `flat`, `ui` or `upui`. This option defaults to `flat`.<br>     * If you choose `flat`, we will count every isolation source independently,<br>       even if the same text appears several times for the same input sequence.<br>     * If you choose `ui`, standing for unique isolation, we will count every<br>       identical isolation source only once within the same input sequence.<br>     * If you choose `upui`, standing for unique isolation and unique pubmed-ID,<br>       we will uniquify the counts based on the text entry of the isolation<br>       sources as well as on the pubmed identifiers from which the GI obtained.<br>   * `--proportional`: Should we divide the counts of every input sequence by the number of envo terms that were associated to it. Defaults to `True`.<br>   * `--backtracking`: For every term identified by the tagger, we will propagate frequency counts up the acyclic directed graph described by the ontology. Defaults to `False`.<br>   * `--restrict`: Restrict the output to the descendants of just one ENVO term. This removes all other terms that are not reachable through the given node. For instance you could specify: `ENVO:00010483` (Disabled by default)<br>   * `--num_threads`: Number of cores to use (Defaults to the total number of cores). Use `1` for non-parallel processing.<br>   * `--out_dir`: The output directory in which to store the result and intermediary files. Defaults to the same directory as the input file.<br>   * `--min_identity`: Minimum identity in similarity search (Default: `0.97`). Note: not available when using `blastp`.<br>   * `--e_value`: Minimum e-value in similarity search (Default: `0.0001`).<br>   * `--max_targets`: Maximum number of reference matches in the similarity search (Default: `10`).<br>   * `--min_coverage`: Minimum query coverage in similarity search (Default: `0.97`).<br>   * `--abundances`: Abundances file as TSV with OTUs as rows and sample names as columns (Default: None).<br>   * `--N`: If abundances are given, pick only the top N sequences (Disabled by default).<br><br>### Why make this ?<br>The continuous drop in the associated costs combined with the increased efficiency of the latest high-throughput sequencing technologies has resulted in an unprecedented growth in sequencing projects. Ongoing endeavors such as the [Earth Microbiome Project](http://www.earthmicrobiome.org) and the [Ocean Sampling Day](http://www.microb3.eu/osd) are transcending national boundaries and are attempting to characterize the global microbial taxonomic and functional diversity for the benefit of mankind. The collection of sequencing information generated by such efforts is vital to shed light on the ecological features and the processes characterizing different ecosystems, yet, the full knowledge discovery potential can only be unleashed if the associated meta data is also exploited to extract hidden patterns. For example, with the majority of genomes submitted to NCBI, there is an associated PubMed publication and in some cases there is a GenBank field called \"isolation sources\" that contains rich environmental information.<br><br>With the advances in community-generated standards and the adherence to recommended annotation guidelines such as those of [MIxS](http://gensc.org/gc_wiki/index.php/MIxS) of the Genomics Standards Consortium, it is now feasible to support intelligent queries and automated inference on such text resources.<br><br>The [Environmental Ontology](http://environmentontology.org/) (or EnvO) will be a critical part of this approach as it gives the ontology for the concise, controlled description of environments. It thus provides structured and controlled vocabulary for the unified meta data annotation, and also serves as a source for naming environmental information. Thus, we have developed the `seqenv` pipeline capable of annotating sequences with environment descriptive terms occurring within their records and/or in relevant literature.<br><br>The `seqenv` pipeline can be applied to any set of nucleotide or protein sequences. Annotation of metagenomic samples, in particular 16S rRNA sequences is also supported.<br><br>The pipeline has already been applied to a range of datasets (e.g Greek lagoon, Swedish lake/river, African and Asian pitlatrine datasets, Black Sea sediment sample datasets have been processed).<br><br>### What does it do exactly ?<br> Given a set of DNA sequences, `seqenv` first retrieves highly similar sequences from public repositories (e.g. NCBI GenBank) using BLAST or similar algorithm. Subsequently, from each of these homologous records, text fields carrying environmental context information such as the reference title and the **isolation source** field found in the metadata are extracted. Once the relevant pieces of text from each matching sequence have been gathered, they are processed by a text mining module capable of identifying any EnvO terms they contain (e.g. the word \"glacier\", or \"pelagic\", \"forest\", etc.). The identified EnvO terms along with their frequencies of occurrence are then subjected to multivariate statistics, producing matrices relating your samples to their putative sources as well as other useful outputs.<br><br>### Pipeline overview<br>The publication contains more information of course, but here is a schematic overview of what happens inside `seqenv`:<br><br>[![seqenv](documentation/frequencies.png)](documentation/frequencies.png)<br><br>### Tutorial<br>We will first run `seqenv` on a 16S rRNA dataset using ***isolation sources*** as a text source. Here, `abundance.tsv` is a species abundance file (97% OTUs) processed through [`illumitag`](https://github.com/limno/illumitag) software and `centers.fasta` contains the corresponding sequences for the OTUs.<br><br>~~~<br>$ ls<br>abundance.tsv<br>centers.fasta<br><br>$ seqenv centers.fasta --abundances abundance.tsv --seq_type nucl --out_dir output --N 1000 --min_identity 0.99<br>~~~<br><br>The output you will receive should look something like this:<br><br>~~~<br>seqenv version 1.2.0 (pid 52169)<br>Start at: 2016-03-02 00:22:09.727377<br>--&gt; STEP 1: Parse the input FASTA file.<br>Elapsed time: 0:00:00.005811<br>Using: output/renamed.fasta<br>--&gt; STEP 2: Similarity search against the 'nt' database with 5 processes<br>Elapsed time: 0:02:11.215829<br>--&gt; STEP 3: Filter out bad hits from the search results<br>Elapsed time: 0:00:00.002071<br>--&gt; STEP 4: Parsing the search results<br>Elapsed time: 0:00:00.002099<br>--&gt; STEP 5: Setting up the SQLite3 database connection.<br>Elapsed time: 0:00:00.054077<br>Got 81 GI hits and 65 of them had one for more EnvO terms associated.<br>--&gt; STEP 6: Computing EnvO term frequencies.<br>Elapsed time: 0:00:00.721455<br>------------<br>Success. Outputs are in 'output/'<br>End at: 2016-03-02 00:24:22.504485<br>Total elapsed time: 0:02:12.777297<br>~~~<br><br>Once the pipeline has finished processing, you will have the following contents in the output folder:<br><br>~~~<br>$ ls output/<br>list_concepts_found.tsv  samples_to_names.tsv  seq_to_names.tsv   top_seqs.fasta.parts<br>renamed.fasta            seq_to_concepts.tsv   top_seqs.blastout<br>samples.biom             seq_to_gis.pickle     top_seqs.fasta<br>~~~<br><br>The most interesting files are probably:<br><br>* `list_concepts_found.tsv` links every OTU to all its relevant BLAST hits and linked ENVO terms.<br>* `seq_to_names.tsv` a matrix linking every OTU to its \"composition\" in terms of ENVO identifiers translated to readable names.<br>* `samples_to_names.tsv` if an abundance file was provided, this is a a matrix linking every one of your samples to its \"composition\" in terms of ENVO identifiers translated to readable names.<br>* `graphviz/` directory containing ontology graphs for everyone of the inputed sequences, such as in the following example:<br><br>[![seqenv](documentation/ontology_graph.png)](documentation/ontology_graph.png)<br><br>### Acknowledgments<br>`seqenv` was originally conceived in the following hackathons supported by European Union's Earth System Science and Environmental Management ES1103 COST Action (\"[Microbial ecology &amp; the earth system: collaborating for insight and success with the new generation of sequencing tools](http://www.cost.eu/domains_actions/essem/Actions/ES1103)\"):<br><br>- **From Signals to Environmentally Tagged Sequences** (Ref: ECOST-MEETING-ES1103-050912-018418), September 27th-29th 2012, Hellenic Center for Marine Research, Crete, Greece.<br>- **From Signals to Environmentally Tagged Sequences II** (Ref: ECOST-MEETING-ES1103-100613-031037), June 10th-13th 2013, Hellenic Center for Marine Research, Crete, Greece.<br>- **From Signals to Environmentally Tagged Sequences III** (Ref: ECOST-MEETING-ES1103-220914-047036), September 22nd-25th 2014, Hellenic Center for Marine Research, Crete, Greece.<br><br>This work would not have been possible without the advice and support of many people who attended the hackathons, in alphabetical order:<br><br>- Simon Berger (simon.berger@h-its.org)<br>- Alica Chro\u0148\u00e1kov\u00e1 (alicach@upb.cas.cz)<br>- Lars Juhl Jensen (lars.juhl.jensen@cpr.ku.dk)<br>- Anastasis Oulas (oulas@hcmr.gr)<br>- [Evangelos Pafilis](http://epafilis.info/) (pafilis@hcmr.gr) [2]<br>- Christina Pavloudi (cpavloud@hcmr.gr)<br>- [Chris Quince](http://www2.warwick.ac.uk/fac/med/staff/cquince/) (c.quince@warwick.ac.uk) [3]<br>- Julia Schnetzer (jschnetz@mpi-bremen.de)<br>- [Lucas Sinclair](http://envonautics.com/#lucas) (lucas.sinclair@me.com) [1]<br>- Aaron Weimann (aaron.weimann@uni-duesseldorf.de)<br>- Ali Zeeshan Ijaz (alizeeshanijaz@gmail.com)<br>- [Umer Zeeshan Ijaz](http://userweb.eng.gla.ac.uk/umer.ijaz/) (umer.ijaz@glasgow.ac.uk) [3]<br><br>[1] Main developer<br>[2] Contact for correspondence<br>[3] Original idea<br><br>### News<br>* **August 2013**: Chris Quince presented a talk on `seqenv` at [STAMPS2013](https://stamps.mbl.edu/index.php/Main_Page). You can download the PDF of the presentation: [C Quince et. al., SeqEnv: Annotating sequences with environments (STAMPS 2013)](https://stamps.mbl.edu/images/4/44/Quince_SeqEnvSTAMPS2013.pdf)<br><br>### Publications that have used `seqenv`<br>* Bacterial diversity along a 2600 km river continuum. `doi:10.1111/1462-2920.12886`<br>* Can marine bacteria be recruited from freshwater sources and the air? `doi:10.1038/ismej.2014.89`<br><br>### Development installation<br>This chapter shows you how to get a development install that makes it easier to contribute to and to change `seqenv` to suit your needs. If you cannot get a functional installation set up, feel free to contact the authors.<br><br>##### Step 1: Cloning the repository<br>Here you will download a copy of the code and place it somewhere in your home directory.<br><br>    $ cd ~<br>    $ mkdir repos<br>    $ cd repos<br>    $ git clone https://github.com/xapple/seqenv.git<br><br>##### Step 2: Modify your search paths<br>Here you will edit your ``~/.bashrc`` or ``~/.bash_profile`` to add a reference to the code you just downloaded. You need to add these two lines:<br><br>    $ vim ~/.bash_profile<br>    export PYTHONPATH=\"$HOME/repos/seqenv/\":$PYTHONPATH<br>    export PATH=\"$HOME/repos/seqenv/seqenv\":$PATH<br><br>And finally source your profile file if you haven't already.<br><br>##### Step 3 (optional): Install your own version of python<br>Your system probably comes with a version of python installed. But the variations from system to system are too great to rely on any available python. We suggest to just install our own version in your home directory. Otherwise, make sure that you are using version 2.7.x of python.<br><br>##### Step 4: Check you have all the required executables<br>`seqenv` will search for several different binaries as it processes your data. Please check all of these are available in your `$PATH`:<br><br>    $ which blastn<br><br>##### Step 5: Get a local copy of the NT database<br>You can choose the database you want to BLAST against. By default we will search against `nt`. So check your `~/.ncbirc` file for the adequate references. If you don't have a copy of such a database, you need to download one to your machine.<br><br>##### Step 6: Install all required python packages<br>`seqenv` uses several third party python libraries. You can get them by running these commands:<br><br>    $ pip install biopython<br>    $ pip install sh<br>    $ pip install pandas<br>    $ pip install tqdm<br>    $ pip install biom-format<br>    $ pip install requests<br>    $ pip install pygraphviz<br>    $ pip install networkx<br>    $ pip install Orange-Bioinformatics<br><br>If you are on a machine that does not authorize you to install packages like that you can try to install them by adding the `--user` option.<br><br>If you are using a python manager such as pyenv, don't forget to rehash the binary links at the end:<br><br>    $ pyenv rehash<br><br>Now, you can check that it all works like this:<br><br>    $ python -c \"import seqenv\"<br><br>### Further documentation<br>The code is written in a clean, object-oriented, and pythonic way. It is also carries a fair deal of documentation. You can see this within the code itself or by going here: http://xapple.github.io/seqenv\n          </div>"}, "last_serial": 2665350, "releases": {"1.0.7": [{"comment_text": "", "digests": {"md5": "cfb371a6652f922a48167fc9c747466b", "sha256": "4b86882ad5a6d1e36c2dc1c23e35975beaeffe1ac3d22e913d9a4fe3b8da91f6"}, "downloads": -1, "filename": "seqenv-1.0.7.tar.gz", "has_sig": false, "md5_digest": "cfb371a6652f922a48167fc9c747466b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 230787, "upload_time": "2016-03-16T15:44:25", "upload_time_iso_8601": "2016-03-16T15:44:25.056281Z", "url": "https://files.pythonhosted.org/packages/69/4b/befad85aad695887f413c65924d24a491bebfe884b2e1e799c07e90c8408/seqenv-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "50a9df258aef2122417e763d6dd0c55c", "sha256": "c749f26dacc948fe68a2b9dccc11c16c2294f1d28bfed2a8be12027467a92292"}, "downloads": -1, "filename": "seqenv-1.0.8.tar.gz", "has_sig": false, "md5_digest": "50a9df258aef2122417e763d6dd0c55c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 230852, "upload_time": "2016-03-16T15:59:11", "upload_time_iso_8601": "2016-03-16T15:59:11.886218Z", "url": "https://files.pythonhosted.org/packages/83/3d/51030584171d7d26be2eb2c4a5f15e25be702fcb9fb1af58309467b71397/seqenv-1.0.8.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "d11a4ea825573e847d7d9db6c5fff938", "sha256": "35af488c88254a48b3dd7694efc6ad5b41803e674c33fee0408bdc28e53e1f37"}, "downloads": -1, "filename": "seqenv-1.1.0.tar.gz", "has_sig": false, "md5_digest": "d11a4ea825573e847d7d9db6c5fff938", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 231161, "upload_time": "2016-03-18T14:31:31", "upload_time_iso_8601": "2016-03-18T14:31:31.362620Z", "url": "https://files.pythonhosted.org/packages/d8/05/4cb1decfcceb317797c803f6594df54f28253730e37a4c0e0fa23d73ba6e/seqenv-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "1096a11a6cb951182697649d810e8f7f", "sha256": "85b26e2801e4c564958708fdbec1c3f65db5e8ab4eaed7c6a97d964c198d76fa"}, "downloads": -1, "filename": "seqenv-1.1.1.tar.gz", "has_sig": false, "md5_digest": "1096a11a6cb951182697649d810e8f7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 234002, "upload_time": "2016-04-23T14:20:35", "upload_time_iso_8601": "2016-04-23T14:20:35.670904Z", "url": "https://files.pythonhosted.org/packages/31/2a/cd7132267d74e13c32c608ad05cf7e853506dfda899ff84ce1b0d2b7c6b3/seqenv-1.1.1.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "85fd4c098b01aa7b28b1d2a6ef5e341d", "sha256": "a4763038c869524ec7d8db330ebd91122d7afd1db56035a2f33faedd6680ce1d"}, "downloads": -1, "filename": "seqenv-1.1.3.tar.gz", "has_sig": false, "md5_digest": "85fd4c098b01aa7b28b1d2a6ef5e341d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 234498, "upload_time": "2016-04-25T11:47:10", "upload_time_iso_8601": "2016-04-25T11:47:10.245885Z", "url": "https://files.pythonhosted.org/packages/09/4a/a922bae30b4d5ea9e01fb77d10dfbcf012cc4e3b90ebdb5bd48d039cabab/seqenv-1.1.3.tar.gz", "yanked": false}], "1.1.5": [{"comment_text": "", "digests": {"md5": "504531e37efb77f2c35808fde786a300", "sha256": "26f8b24d23162bd092b54b3fd9eb43fbe7dcdcb38f0a15dac42813e3ac1b8259"}, "downloads": -1, "filename": "seqenv-1.1.5.tar.gz", "has_sig": false, "md5_digest": "504531e37efb77f2c35808fde786a300", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 234996, "upload_time": "2016-05-03T15:18:19", "upload_time_iso_8601": "2016-05-03T15:18:19.043868Z", "url": "https://files.pythonhosted.org/packages/c9/fb/166ad6e174f1d55b138d2ca06a8fe17095b17d2d6889fd68e8bec0a86e44/seqenv-1.1.5.tar.gz", "yanked": false}], "1.1.7": [{"comment_text": "", "digests": {"md5": "b3b6cba0fcff4de5c14f6023a93d60a7", "sha256": "6dbb03378e9a0186182c949365e1fb4971a0bb4145450b5b08edfb8f7c8b1f10"}, "downloads": -1, "filename": "seqenv-1.1.7.tar.gz", "has_sig": false, "md5_digest": "b3b6cba0fcff4de5c14f6023a93d60a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 235316, "upload_time": "2016-06-17T16:06:53", "upload_time_iso_8601": "2016-06-17T16:06:53.285447Z", "url": "https://files.pythonhosted.org/packages/df/7d/72578067000206c6794946faacb9c8af6d8a5a7cea921d615b9cac83793f/seqenv-1.1.7.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "1c7039bb9a6e735d46eb5e7cc9c548ac", "sha256": "02ae5d5f845e8247f303b3036deeb0d02f0e0058e89f5badf5518d73ed635a33"}, "downloads": -1, "filename": "seqenv-1.2.1.tar.gz", "has_sig": false, "md5_digest": "1c7039bb9a6e735d46eb5e7cc9c548ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 235299, "upload_time": "2016-06-17T16:51:40", "upload_time_iso_8601": "2016-06-17T16:51:40.367455Z", "url": "https://files.pythonhosted.org/packages/d0/72/13eb8a18147418470d42cd00d7b611e64d13702b0c4be22edb91d4714d12/seqenv-1.2.1.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "7e4bac8b5e96f0f69f5121aea4fafcec", "sha256": "c6bab449d418c77553d11521a14b301f512bbbc54e33e952d9f5faa5e6a7c357"}, "downloads": -1, "filename": "seqenv-1.2.3.tar.gz", "has_sig": false, "md5_digest": "7e4bac8b5e96f0f69f5121aea4fafcec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 235277, "upload_time": "2016-06-26T12:01:42", "upload_time_iso_8601": "2016-06-26T12:01:42.948090Z", "url": "https://files.pythonhosted.org/packages/d2/db/ef93cf575c4dd9243a03448ae02226d508b28ddd9797e8bb4c42a81fa28e/seqenv-1.2.3.tar.gz", "yanked": false}], "1.2.5": [{"comment_text": "", "digests": {"md5": "6cd6f0c2bf245e681efbd4c2c598d8c7", "sha256": "759c69af808746e1abdddf1ef08605937e8731d10ccab8a6551cda7cc873ea04"}, "downloads": -1, "filename": "seqenv-1.2.5.tar.gz", "has_sig": false, "md5_digest": "6cd6f0c2bf245e681efbd4c2c598d8c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 235337, "upload_time": "2016-07-25T16:54:47", "upload_time_iso_8601": "2016-07-25T16:54:47.815674Z", "url": "https://files.pythonhosted.org/packages/fe/d2/69ef540c3c87cb5be7cce7fa42f2e2d1b624e44ba054fbdca1889f6243b0/seqenv-1.2.5.tar.gz", "yanked": false}], "1.2.7": [{"comment_text": "", "digests": {"md5": "6713f317604442c242218feefc7a6632", "sha256": "c31660daaa43477414b5c1ecf0c5516f2994d8e844d8b55aa3b5226457bfc517"}, "downloads": -1, "filename": "seqenv-1.2.7.tar.gz", "has_sig": false, "md5_digest": "6713f317604442c242218feefc7a6632", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 235355, "upload_time": "2016-07-28T14:00:16", "upload_time_iso_8601": "2016-07-28T14:00:16.923139Z", "url": "https://files.pythonhosted.org/packages/0b/27/a43e1eb80a9931a075b6424842f7ac35c7e61ee8cd525e95e4afc58555e6/seqenv-1.2.7.tar.gz", "yanked": false}], "1.2.9": [{"comment_text": "", "digests": {"md5": "ded3be219102671e0809507fdc4c5f0c", "sha256": "2cb9075209826883b39a434d4e2c9cfdf2f5d918172ade7a214eaacd64b427c5"}, "downloads": -1, "filename": "seqenv-1.2.9.tar.gz", "has_sig": false, "md5_digest": "ded3be219102671e0809507fdc4c5f0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 242025, "upload_time": "2016-07-28T14:30:55", "upload_time_iso_8601": "2016-07-28T14:30:55.598252Z", "url": "https://files.pythonhosted.org/packages/93/9a/2fa0a6c53c44cabc3826857ba5bbdde604fd08ebd2e2f345318299650eca/seqenv-1.2.9.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "d266c9d0e631dd18621b6ececf0b660d", "sha256": "133028c369d5782df76ba8d080138706d61f5995d7709fa2b2e663813af5ef46"}, "downloads": -1, "filename": "seqenv-1.3.0.tar.gz", "has_sig": false, "md5_digest": "d266c9d0e631dd18621b6ececf0b660d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 241908, "upload_time": "2017-02-24T11:16:10", "upload_time_iso_8601": "2017-02-24T11:16:10.622829Z", "url": "https://files.pythonhosted.org/packages/a1/6e/fe99323cf81f6ae083ce022d56d9bee2666dea73f0042694d36d3dc80ca7/seqenv-1.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d266c9d0e631dd18621b6ececf0b660d", "sha256": "133028c369d5782df76ba8d080138706d61f5995d7709fa2b2e663813af5ef46"}, "downloads": -1, "filename": "seqenv-1.3.0.tar.gz", "has_sig": false, "md5_digest": "d266c9d0e631dd18621b6ececf0b660d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 241908, "upload_time": "2017-02-24T11:16:10", "upload_time_iso_8601": "2017-02-24T11:16:10.622829Z", "url": "https://files.pythonhosted.org/packages/a1/6e/fe99323cf81f6ae083ce022d56d9bee2666dea73f0042694d36d3dc80ca7/seqenv-1.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:52 2020"}