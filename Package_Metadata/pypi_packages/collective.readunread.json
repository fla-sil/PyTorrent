{"info": {"author": "Simone Orsi", "author_email": "simahawk@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Programming Language :: Python"], "description": "collective.readunread\r\n=====================\r\n\r\nIntroduction\r\n============\r\n\r\nThis package provides read/unread status for Plone objects.\r\n\r\nIt adds a \"readBy\" field and a proper index to any object marked with IReadByProvider interface.\r\n\r\n\r\nHow to use it\r\n=============\r\n\r\nIn order to activate read/unread feature the target object must implement::\r\n\r\n    collective.readunread.interfaces.IReadByProvider\r\n\r\n\r\nYou can add a ZCML slug in your package like::\r\n\r\n    <five:implements\r\n      class=\"Products.ATContentTypes.content.document.ATDocument\"\r\n      interface=\"collective.readunread.interfaces.IReadByProvider\"\r\n      />\r\n\r\n\r\nHow it works\r\n============\r\n\r\nFor testing purpose we'll assign it to the Document content type\r\n\r\n>>> from zope import interface\r\n>>> from Products.ATContentTypes.content.document import ATDocument\r\n>>> from collective.readunread.interfaces import IReadByProvider\r\n>>> interface.classImplements(ATDocument,IReadByProvider)\r\n\r\nand create a Document\r\n\r\n>>> self.setRoles(('Manager',))\r\n>>> docid = self.folder.invokeFactory('Document', 'document')\r\n>>> doc = self.folder[docid]\r\n\r\nWe must trigger IObjectInitializedEvent on it since we have a subcriber that\r\nwill take care of pushing the userid of the creator into 'readBy' field\r\n\r\n>>> from Products.Archetypes.event import ObjectInitializedEvent\r\n>>> from zope.event import notify\r\n>>> notify(ObjectInitializedEvent(doc))\r\n\r\nWe can use the manager adapter for handling readby status\r\n\r\n>>> from collective.readunread.interfaces import IReadByManager\r\n>>> manager = IReadByManager(doc)\r\n\r\nSince the doc is new we should get only creator's ID\r\n\r\n>>> len(manager.get_readby()) == 1\r\nTrue\r\n>>> manager.get_readby()\r\n('test_user_1_',)\r\n\r\nLet's read the doc as other users. The following will create 3 new users\r\n\r\n>>> from collective.readunread.tests.tests import setupMembers\r\n>>> setupMembers(self.portal, n=3)\r\n\r\nWe have two ways for setting the doc as 'read' by a user. First, we can trigger\r\nthe PostValidationHook event with the user (that simulates viewing the doc)\r\n\r\n>>> from collective.readunread.tests.tests import fireViewEvent\r\n>>> fireViewEvent(doc,'user1')\r\n>>> fireViewEvent(doc,'user2')\r\n\r\nLet's see who read the doc\r\n\r\n>>> 'user1' in manager.get_readby()\r\nTrue\r\n>>> 'user2' in manager.get_readby()\r\nTrue\r\n>>> 'user3' in manager.get_readby()\r\nFalse\r\n\r\nThe second way is to set it trough the manager\r\n\r\n>>> manager.set_readby(['user3',])\r\n>>> 'user3' in manager.get_readby()\r\nTrue\r\n\r\nWe can check the status of a user\r\n\r\n>>> manager.get_status('user3')\r\n'read'\r\n\r\nWe can also set a user as unread\r\n\r\n>>> manager.set_unreadby(['user3',])\r\n>>> 'user3' not in manager.get_readby()\r\nTrue\r\n>>> manager.get_status('user3')\r\n'unread'\r\n\r\n\r\nTODO\r\n====\r\n\r\n- document & test buttons macro\r\n- document & test helper views\r\n\r\nChangelog\r\n=========\r\n\r\n1.0b6\r\n-----\r\n- fix missing import browser package\r\n\r\n1.0b5\r\n-----\r\n- update docs\r\n- added doctest for manager\r\n- fixed adapter\r\n- improved utils\r\n\r\n1.0b4\r\n-----\r\n- fix profile name\r\n- add .gitignore\r\n\r\n1.0b3\r\n-----\r\n- missing HISTORY update (experimenting w/ jarn.mkrelease)\r\n\r\n1.0b2\r\n-----\r\n- updated docs\r\n\r\n\r\n1.0b1dev (unreleased)\r\n---------------------\r\n- Initial release\r\n\r\n\r\nCredits\r\n=======\r\n\r\nDeveloped with the support of `International Traning Center of the ILO`__.\r\n\r\n.. image:: http://www.itcilo.org/logo_en.jpg\r\n   :alt: ITCILO - Logo\r\n   :target: http://www.itcilo.org/\r\n\r\n__ http://www.itcilo.org/\r\n\r\n\r\nAuthors\r\n=======\r\n\r\nThis product was developed by Domsense.\r\n\r\n.. image:: http://domsense.com/logo-txt.png\r\n   :alt: Domsense Website\r\n   :target: http://www.domsense.com/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/collective/collective.readunread", "keywords": "Plone", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "collective.readunread", "package_url": "https://pypi.org/project/collective.readunread/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.readunread/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/collective/collective.readunread"}, "release_url": "https://pypi.org/project/collective.readunread/1.0b6/", "requires_dist": null, "requires_python": null, "summary": "read/unread status for Plone contents", "version": "1.0b6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"collective-readunread\">\n<h2>collective.readunread</h2>\n</div>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>This package provides read/unread status for Plone objects.</p>\n<p>It adds a \u201creadBy\u201d field and a proper index to any object marked with IReadByProvider interface.</p>\n</div>\n<div id=\"how-to-use-it\">\n<h2>How to use it</h2>\n<p>In order to activate read/unread feature the target object must implement:</p>\n<pre>collective.readunread.interfaces.IReadByProvider\n</pre>\n<p>You can add a ZCML slug in your package like:</p>\n<pre>&lt;five:implements\n  class=\"Products.ATContentTypes.content.document.ATDocument\"\n  interface=\"collective.readunread.interfaces.IReadByProvider\"\n  /&gt;\n</pre>\n</div>\n<div id=\"how-it-works\">\n<h2>How it works</h2>\n<p>For testing purpose we\u2019ll assign it to the Document content type</p>\n<pre>&gt;&gt;&gt; from zope import interface\n&gt;&gt;&gt; from Products.ATContentTypes.content.document import ATDocument\n&gt;&gt;&gt; from collective.readunread.interfaces import IReadByProvider\n&gt;&gt;&gt; interface.classImplements(ATDocument,IReadByProvider)\n</pre>\n<p>and create a Document</p>\n<pre>&gt;&gt;&gt; self.setRoles(('Manager',))\n&gt;&gt;&gt; docid = self.folder.invokeFactory('Document', 'document')\n&gt;&gt;&gt; doc = self.folder[docid]\n</pre>\n<p>We must trigger IObjectInitializedEvent on it since we have a subcriber that\nwill take care of pushing the userid of the creator into \u2018readBy\u2019 field</p>\n<pre>&gt;&gt;&gt; from Products.Archetypes.event import ObjectInitializedEvent\n&gt;&gt;&gt; from zope.event import notify\n&gt;&gt;&gt; notify(ObjectInitializedEvent(doc))\n</pre>\n<p>We can use the manager adapter for handling readby status</p>\n<pre>&gt;&gt;&gt; from collective.readunread.interfaces import IReadByManager\n&gt;&gt;&gt; manager = IReadByManager(doc)\n</pre>\n<p>Since the doc is new we should get only creator\u2019s ID</p>\n<pre>&gt;&gt;&gt; len(manager.get_readby()) == 1\nTrue\n&gt;&gt;&gt; manager.get_readby()\n('test_user_1_',)\n</pre>\n<p>Let\u2019s read the doc as other users. The following will create 3 new users</p>\n<pre>&gt;&gt;&gt; from collective.readunread.tests.tests import setupMembers\n&gt;&gt;&gt; setupMembers(self.portal, n=3)\n</pre>\n<p>We have two ways for setting the doc as \u2018read\u2019 by a user. First, we can trigger\nthe PostValidationHook event with the user (that simulates viewing the doc)</p>\n<pre>&gt;&gt;&gt; from collective.readunread.tests.tests import fireViewEvent\n&gt;&gt;&gt; fireViewEvent(doc,'user1')\n&gt;&gt;&gt; fireViewEvent(doc,'user2')\n</pre>\n<p>Let\u2019s see who read the doc</p>\n<pre>&gt;&gt;&gt; 'user1' in manager.get_readby()\nTrue\n&gt;&gt;&gt; 'user2' in manager.get_readby()\nTrue\n&gt;&gt;&gt; 'user3' in manager.get_readby()\nFalse\n</pre>\n<p>The second way is to set it trough the manager</p>\n<pre>&gt;&gt;&gt; manager.set_readby(['user3',])\n&gt;&gt;&gt; 'user3' in manager.get_readby()\nTrue\n</pre>\n<p>We can check the status of a user</p>\n<pre>&gt;&gt;&gt; manager.get_status('user3')\n'read'\n</pre>\n<p>We can also set a user as unread</p>\n<pre>&gt;&gt;&gt; manager.set_unreadby(['user3',])\n&gt;&gt;&gt; 'user3' not in manager.get_readby()\nTrue\n&gt;&gt;&gt; manager.get_status('user3')\n'unread'\n</pre>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>document &amp; test buttons macro</li>\n<li>document &amp; test helper views</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"b6\">\n<h3>1.0b6</h3>\n<ul>\n<li>fix missing import browser package</li>\n</ul>\n</div>\n<div id=\"b5\">\n<h3>1.0b5</h3>\n<ul>\n<li>update docs</li>\n<li>added doctest for manager</li>\n<li>fixed adapter</li>\n<li>improved utils</li>\n</ul>\n</div>\n<div id=\"b4\">\n<h3>1.0b4</h3>\n<ul>\n<li>fix profile name</li>\n<li>add .gitignore</li>\n</ul>\n</div>\n<div id=\"b3\">\n<h3>1.0b3</h3>\n<ul>\n<li>missing HISTORY update (experimenting w/ jarn.mkrelease)</li>\n</ul>\n</div>\n<div id=\"b2\">\n<h3>1.0b2</h3>\n<ul>\n<li>updated docs</li>\n</ul>\n</div>\n<div id=\"b1dev-unreleased\">\n<h3>1.0b1dev (unreleased)</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Developed with the support of <a href=\"http://www.itcilo.org/\" rel=\"nofollow\">International Traning Center of the ILO</a>.</p>\n<a href=\"http://www.itcilo.org/\" rel=\"nofollow\"><img alt=\"ITCILO - Logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/26670ea5513811bb3c5017c3cb515c306e1029d5/687474703a2f2f7777772e697463696c6f2e6f72672f6c6f676f5f656e2e6a7067\"></a>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<p>This product was developed by Domsense.</p>\n<a href=\"http://www.domsense.com/\" rel=\"nofollow\"><img alt=\"Domsense Website\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a923c8bd1fae2b3570d12480e33d8ed26d251955/687474703a2f2f646f6d73656e73652e636f6d2f6c6f676f2d7478742e706e67\"></a>\n</div>\n\n          </div>"}, "last_serial": 3158831, "releases": {"1.0b1": [{"comment_text": "", "digests": {"md5": "0f5e6e89a610fab54491a192ded93944", "sha256": "bb1da467d76f7312642624cc4e71bed575ff85d82e9954d534fe1cc95b7c37dc"}, "downloads": -1, "filename": "collective.readunread-1.0b1.zip", "has_sig": false, "md5_digest": "0f5e6e89a610fab54491a192ded93944", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37954, "upload_time": "2012-01-23T16:12:03", "upload_time_iso_8601": "2012-01-23T16:12:03.201731Z", "url": "https://files.pythonhosted.org/packages/54/64/b96a209d10392d3bfad2342bc9e55141e7fcd0df67aa4d9629c6af0e6e21/collective.readunread-1.0b1.zip", "yanked": false}], "1.0b2": [{"comment_text": "", "digests": {"md5": "e9b9d88c241168abd96b9f7f34b67fad", "sha256": "95707cdb6cf5ec0ec85d2d030d361e59a4b922ccb8df65848abb3c0b97dc5c29"}, "downloads": -1, "filename": "collective.readunread-1.0b2.zip", "has_sig": false, "md5_digest": "e9b9d88c241168abd96b9f7f34b67fad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38043, "upload_time": "2012-01-23T16:16:45", "upload_time_iso_8601": "2012-01-23T16:16:45.628715Z", "url": "https://files.pythonhosted.org/packages/32/e3/d575c91754e047525f83524332ebdcc6a2fc5b6fb6fb5e03d4ab5e965cdc/collective.readunread-1.0b2.zip", "yanked": false}], "1.0b3": [{"comment_text": "", "digests": {"md5": "5de719e5ec43e9e4b9486a0539b565ce", "sha256": "7fb4aa3fef4f167ed589369f8b2c370f3c29063cd8bc00ee27dcfef70987f626"}, "downloads": -1, "filename": "collective.readunread-1.0b3.zip", "has_sig": false, "md5_digest": "5de719e5ec43e9e4b9486a0539b565ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38222, "upload_time": "2012-01-23T16:25:56", "upload_time_iso_8601": "2012-01-23T16:25:56.181491Z", "url": "https://files.pythonhosted.org/packages/01/b8/3ea3dd9f6ff680a5fcc7f579e4923c069066fedc7428c45880d46cc5af1b/collective.readunread-1.0b3.zip", "yanked": false}], "1.0b4": [{"comment_text": "", "digests": {"md5": "a68c36242af663394d06372b25467bbc", "sha256": "239288ec37919124130addf0ac4c64b5233ff86788d7b808675f95302dead36e"}, "downloads": -1, "filename": "collective.readunread-1.0b4-py2.6.egg", "has_sig": false, "md5_digest": "a68c36242af663394d06372b25467bbc", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 16729, "upload_time": "2012-01-23T17:29:22", "upload_time_iso_8601": "2012-01-23T17:29:22.243761Z", "url": "https://files.pythonhosted.org/packages/ba/3d/34706643658de5ec5a000c543a217b7cf7d4ec8720793f24b147d05f50bd/collective.readunread-1.0b4-py2.6.egg", "yanked": false}], "1.0b5": [{"comment_text": "", "digests": {"md5": "57c014d50fb6513b205266005027ef10", "sha256": "17c2040fba4cd4437b003bfb3b553186455f815bb2266ed89364bff97ba8de4c"}, "downloads": -1, "filename": "collective.readunread-1.0b5.zip", "has_sig": false, "md5_digest": "57c014d50fb6513b205266005027ef10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42087, "upload_time": "2012-01-24T15:08:49", "upload_time_iso_8601": "2012-01-24T15:08:49.253660Z", "url": "https://files.pythonhosted.org/packages/a2/16/0083fcc298d2e0d81d43f846ffc631a312d8380bb68873d2cc1e7d3a84c1/collective.readunread-1.0b5.zip", "yanked": false}], "1.0b6": [{"comment_text": "", "digests": {"md5": "46a45775f0449e2a7bfa3cb78a268f47", "sha256": "9b27e73fe79bbde15b462d665faca2dd6682870476bdd95f6bfca83cf69d3fc3"}, "downloads": -1, "filename": "collective.readunread-1.0b6.zip", "has_sig": false, "md5_digest": "46a45775f0449e2a7bfa3cb78a268f47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42148, "upload_time": "2012-01-27T11:47:30", "upload_time_iso_8601": "2012-01-27T11:47:30.451684Z", "url": "https://files.pythonhosted.org/packages/6b/05/09aff2458bafbae414a2578a5a76dc39eaa019d2db283cb14c585f408481/collective.readunread-1.0b6.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "46a45775f0449e2a7bfa3cb78a268f47", "sha256": "9b27e73fe79bbde15b462d665faca2dd6682870476bdd95f6bfca83cf69d3fc3"}, "downloads": -1, "filename": "collective.readunread-1.0b6.zip", "has_sig": false, "md5_digest": "46a45775f0449e2a7bfa3cb78a268f47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42148, "upload_time": "2012-01-27T11:47:30", "upload_time_iso_8601": "2012-01-27T11:47:30.451684Z", "url": "https://files.pythonhosted.org/packages/6b/05/09aff2458bafbae414a2578a5a76dc39eaa019d2db283cb14c585f408481/collective.readunread-1.0b6.zip", "yanked": false}], "timestamp": "Fri May  8 00:44:57 2020"}