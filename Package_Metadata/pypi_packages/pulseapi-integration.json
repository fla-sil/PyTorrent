{"info": {"author": "Ostapets Vladislav", "author_email": "vlad12344444@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.8"], "description": "# Wrapper around RobotPulse version >= 1.6.0\n\n**Latest PulseApi version: pip3 install pulse-api -i https://pip.rozum.com/simple**\n\n## Connect to robot:\n\n                from pulseapi_integration import *\n                host = '127.0.0.0:8081'\n                robot = NewRobotPulse(host)\n\n\n## New function:\n\n***set_reference_frame(robot_position)***\n\nSet reference frame in the respect to the robot base,\nfurther robot works relative it.\n\n                robot.set_reference_frame(position([x,y,z],[r,p,w]))\n\n***get_reference_frame()***\n\nReturn a dict with keys 'point' and 'rotation'\n\n                robot.get_reference_frame()\n\n                >>> {'point': {'x': 0.0, 'y': 0.0, 'z': 0.0},\n                     'rotation': {'roll': 0.0, 'pitch': 0.0, 'yaw': 0.0}}\n\n***- run_positions(\n            target_positions,\n            speed=None,\n            velocity=None,\n            acceleration=None,\n            tcp_max_velocity=None,\n            motion_type=MT_JOINT\n)***\n\nStarts the list of points recalculated relative to the reference coordinate system.\n\n\n                target_positions = [\n                    position([x, y, z], [r, p, w]),\n                    position([x, y, z], [r, p, w])\n                ]\n\n                robot.run_positions(target_positions, speed=5)\n\n***- set_position(\n            target_position,\n            speed=None,\n            velocity=None,\n            acceleration=None,\n            tcp_max_velocity=None,\n            motion_type=MT_JOINT\n    )***\n\nSet the robot in the given position. If an reference frame is specified,\nthe robot moves relative to it.\n\n                 set_position(position([x, y, z], [r, p, w]), speed=5)\n\n***untwist()***\n\nAllows the robot exit from TWISTED state, after the rotors were manually rotated into ~correct place\n\n                robot.untwist()\n\n                >>> <Response [503]>  (if all is OK)\n\n***move_along_axis(axis, distance, velocity)***\n\nAllows to move along one of each axis: 'x', 'y', 'z', 'roll', 'pitch', 'yaw'\nat a given distance, at a specified speed\n\n                axis = 'x'\n                distance = 0.1\n                velocity = 1\n\n                robot.move_along_axis(axis, distance, velocity)\n\n***stop_by_digital_input(number_of_input)***\n\nStop the robot from the Digital Input\n\n                number_of_DI = 1\n                robot.stop_by_digital_input(number_of_DI)\n\n***- sensing(\n        axis,\n        detect_distance,\n        velocity,\n        retract_distance=0.01,\n        retract_velocity=0.3,\n        number_of_input=1\n)***\n\nMini case.\n\n                axis = 'x'\n                detect_distance = 0.1\n                velocity = 1\n\n                robot.sensing(axis, detect_distance, velocity)\n\n***get_position_rel_base()***\n\nReturns the position relative to the base, even if an reference frame is specified.\n\n                robot.get_position_rel_base()\n\n                >>> {'point': {'x': -0.09161, 'y': -0.2911, 'z': 1.07063},\n                     'rotation': {'roll': 3.08421, 'pitch': 0.72008, 'yaw':0.17362}}\n\n***- go_home(\n        speed=None,\n        velocity=None,\n        acceleration=None,\n        tcp_max_velocity=None,\n        motion_type=MT_JOINT\n)***\n\nReturn the robot on home position ***pose[0, -90, 0, -90, -90, 0]***\n\n                robot.go_home()\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pulseapi-integration", "package_url": "https://pypi.org/project/pulseapi-integration/", "platform": "", "project_url": "https://pypi.org/project/pulseapi-integration/", "project_urls": null, "release_url": "https://pypi.org/project/pulseapi-integration/0.1.3/", "requires_dist": ["numpy (==1.18.1)", "requests (==2.22.0)"], "requires_python": ">=3.6", "summary": "Wrapper around pulseapi", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Wrapper around RobotPulse version &gt;= 1.6.0</h1>\n<p><strong>Latest PulseApi version: pip3 install pulse-api -i <a href=\"https://pip.rozum.com/simple\" rel=\"nofollow\">https://pip.rozum.com/simple</a></strong></p>\n<h2>Connect to robot:</h2>\n<pre><code>            from pulseapi_integration import *\n            host = '127.0.0.0:8081'\n            robot = NewRobotPulse(host)\n</code></pre>\n<h2>New function:</h2>\n<p><em><strong>set_reference_frame(robot_position)</strong></em></p>\n<p>Set reference frame in the respect to the robot base,\nfurther robot works relative it.</p>\n<pre><code>            robot.set_reference_frame(position([x,y,z],[r,p,w]))\n</code></pre>\n<p><em><strong>get_reference_frame()</strong></em></p>\n<p>Return a dict with keys 'point' and 'rotation'</p>\n<pre><code>            robot.get_reference_frame()\n\n            &gt;&gt;&gt; {'point': {'x': 0.0, 'y': 0.0, 'z': 0.0},\n                 'rotation': {'roll': 0.0, 'pitch': 0.0, 'yaw': 0.0}}\n</code></pre>\n<p><em><strong>- run_positions(\ntarget_positions,\nspeed=None,\nvelocity=None,\nacceleration=None,\ntcp_max_velocity=None,\nmotion_type=MT_JOINT\n)</strong></em></p>\n<p>Starts the list of points recalculated relative to the reference coordinate system.</p>\n<pre><code>            target_positions = [\n                position([x, y, z], [r, p, w]),\n                position([x, y, z], [r, p, w])\n            ]\n\n            robot.run_positions(target_positions, speed=5)\n</code></pre>\n<p><em><strong>- set_position(\ntarget_position,\nspeed=None,\nvelocity=None,\nacceleration=None,\ntcp_max_velocity=None,\nmotion_type=MT_JOINT\n)</strong></em></p>\n<p>Set the robot in the given position. If an reference frame is specified,\nthe robot moves relative to it.</p>\n<pre><code>             set_position(position([x, y, z], [r, p, w]), speed=5)\n</code></pre>\n<p><em><strong>untwist()</strong></em></p>\n<p>Allows the robot exit from TWISTED state, after the rotors were manually rotated into ~correct place</p>\n<pre><code>            robot.untwist()\n\n            &gt;&gt;&gt; &lt;Response [503]&gt;  (if all is OK)\n</code></pre>\n<p><em><strong>move_along_axis(axis, distance, velocity)</strong></em></p>\n<p>Allows to move along one of each axis: 'x', 'y', 'z', 'roll', 'pitch', 'yaw'\nat a given distance, at a specified speed</p>\n<pre><code>            axis = 'x'\n            distance = 0.1\n            velocity = 1\n\n            robot.move_along_axis(axis, distance, velocity)\n</code></pre>\n<p><em><strong>stop_by_digital_input(number_of_input)</strong></em></p>\n<p>Stop the robot from the Digital Input</p>\n<pre><code>            number_of_DI = 1\n            robot.stop_by_digital_input(number_of_DI)\n</code></pre>\n<p><em><strong>- sensing(\naxis,\ndetect_distance,\nvelocity,\nretract_distance=0.01,\nretract_velocity=0.3,\nnumber_of_input=1\n)</strong></em></p>\n<p>Mini case.</p>\n<pre><code>            axis = 'x'\n            detect_distance = 0.1\n            velocity = 1\n\n            robot.sensing(axis, detect_distance, velocity)\n</code></pre>\n<p><em><strong>get_position_rel_base()</strong></em></p>\n<p>Returns the position relative to the base, even if an reference frame is specified.</p>\n<pre><code>            robot.get_position_rel_base()\n\n            &gt;&gt;&gt; {'point': {'x': -0.09161, 'y': -0.2911, 'z': 1.07063},\n                 'rotation': {'roll': 3.08421, 'pitch': 0.72008, 'yaw':0.17362}}\n</code></pre>\n<p><em><strong>- go_home(\nspeed=None,\nvelocity=None,\nacceleration=None,\ntcp_max_velocity=None,\nmotion_type=MT_JOINT\n)</strong></em></p>\n<p>Return the robot on home position <em><strong>pose[0, -90, 0, -90, -90, 0]</strong></em></p>\n<pre><code>            robot.go_home()\n</code></pre>\n\n          </div>"}, "last_serial": 6985057, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "9640708f8308effe351faff3728bb6b0", "sha256": "65f8c3bfd4a0d9e89e72d9ae680f56bd8aafcb58df01e0f6357c90e028e93ce8"}, "downloads": -1, "filename": "pulseapi_integration-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9640708f8308effe351faff3728bb6b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13142, "upload_time": "2020-02-21T15:38:04", "upload_time_iso_8601": "2020-02-21T15:38:04.882394Z", "url": "https://files.pythonhosted.org/packages/0f/92/eca42cf8a1e4d2030bd4d17fc21a30ec817175f58baa9ab1a57bbf151b72/pulseapi_integration-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "365333b18c1556ba2fedb755e6c5bfed", "sha256": "0c83d78c8f383261f9187440fced07432b867b1f0668d4466061c2e2306f2a37"}, "downloads": -1, "filename": "pulseapi_integration-0.1.0.tar.gz", "has_sig": false, "md5_digest": "365333b18c1556ba2fedb755e6c5bfed", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11553, "upload_time": "2020-02-21T15:38:06", "upload_time_iso_8601": "2020-02-21T15:38:06.143989Z", "url": "https://files.pythonhosted.org/packages/3d/79/f6610f88bb9d28284e0694076713235efeaf4e67aed40f47959827b224fc/pulseapi_integration-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "813f0dbe5134df713e3d100c03806dc0", "sha256": "07a3e9c0dbd3cbbc534b2348da821b93bb8d10e900564dafb6fff1b5539fcc1e"}, "downloads": -1, "filename": "pulseapi_integration-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "813f0dbe5134df713e3d100c03806dc0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12959, "upload_time": "2020-02-22T07:16:30", "upload_time_iso_8601": "2020-02-22T07:16:30.535957Z", "url": "https://files.pythonhosted.org/packages/e4/f9/fcb8665defea619ac8e4335dbbe4c4b30e2ae2e86631df76d66fd56c4707/pulseapi_integration-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab86e6010dc49d664d9327da3957b2c2", "sha256": "7908aa2edba5020c51b2a0043aa2f321b76fa4c3969b6d6cc219a33af2b292b7"}, "downloads": -1, "filename": "pulseapi_integration-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ab86e6010dc49d664d9327da3957b2c2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11406, "upload_time": "2020-02-22T07:16:31", "upload_time_iso_8601": "2020-02-22T07:16:31.874590Z", "url": "https://files.pythonhosted.org/packages/ec/05/2b6c986fc36d95edbe6273d3cc6f4f22dcffa2eca23e5b4fcb547d58883b/pulseapi_integration-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "9bd1c5d37e42f87049998a6d6e5dafff", "sha256": "c1de7645176cde510c852ca71d84300f927bcc57e0cdc16cab84b2642b2c1267"}, "downloads": -1, "filename": "pulseapi_integration-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9bd1c5d37e42f87049998a6d6e5dafff", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8455, "upload_time": "2020-04-08T06:28:57", "upload_time_iso_8601": "2020-04-08T06:28:57.384661Z", "url": "https://files.pythonhosted.org/packages/9c/ee/5f6c89fbd8014d2eaa944b10e9ba192c1d09e7dbf5fe1690b6d0682f8f25/pulseapi_integration-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f19d3be86d7d0c7d68cfff39dfc87898", "sha256": "f74425bdc9be2f7b6ea1f48cd2ea34a9e19007d6c56976151f9fc67530557640"}, "downloads": -1, "filename": "pulseapi_integration-0.1.2.tar.gz", "has_sig": false, "md5_digest": "f19d3be86d7d0c7d68cfff39dfc87898", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7232, "upload_time": "2020-04-08T06:28:58", "upload_time_iso_8601": "2020-04-08T06:28:58.795443Z", "url": "https://files.pythonhosted.org/packages/f3/b4/340e24162245f890e3cb277d16ea22f93f4e5a803f12e3a41f08037ad91d/pulseapi_integration-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "6cb3424fb5afd7efa5f9996fdf9d37d8", "sha256": "e902145f9b606cf21c66d0a8d9ce9bc80af98734307af6fb2714e35ad445be71"}, "downloads": -1, "filename": "pulseapi_integration-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6cb3424fb5afd7efa5f9996fdf9d37d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8678, "upload_time": "2020-04-09T10:59:31", "upload_time_iso_8601": "2020-04-09T10:59:31.241939Z", "url": "https://files.pythonhosted.org/packages/1d/6f/9713e9f800e18b4510f7c6ac671bd2b6335078f24919422047f200ca4be2/pulseapi_integration-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b561a9c46995b7c884a8f7ddb2df158", "sha256": "a18702c57fc43d5f4d73970440c55db4bf0a2b8fb4a30620fcb29554d5d9580e"}, "downloads": -1, "filename": "pulseapi_integration-0.1.3.tar.gz", "has_sig": false, "md5_digest": "6b561a9c46995b7c884a8f7ddb2df158", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7557, "upload_time": "2020-04-09T10:59:33", "upload_time_iso_8601": "2020-04-09T10:59:33.604817Z", "url": "https://files.pythonhosted.org/packages/9e/7e/3e1565a599f6fcb19796e220f8cea925d4a58d71626d3e7524b23d1f47a7/pulseapi_integration-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6cb3424fb5afd7efa5f9996fdf9d37d8", "sha256": "e902145f9b606cf21c66d0a8d9ce9bc80af98734307af6fb2714e35ad445be71"}, "downloads": -1, "filename": "pulseapi_integration-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6cb3424fb5afd7efa5f9996fdf9d37d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8678, "upload_time": "2020-04-09T10:59:31", "upload_time_iso_8601": "2020-04-09T10:59:31.241939Z", "url": "https://files.pythonhosted.org/packages/1d/6f/9713e9f800e18b4510f7c6ac671bd2b6335078f24919422047f200ca4be2/pulseapi_integration-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b561a9c46995b7c884a8f7ddb2df158", "sha256": "a18702c57fc43d5f4d73970440c55db4bf0a2b8fb4a30620fcb29554d5d9580e"}, "downloads": -1, "filename": "pulseapi_integration-0.1.3.tar.gz", "has_sig": false, "md5_digest": "6b561a9c46995b7c884a8f7ddb2df158", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7557, "upload_time": "2020-04-09T10:59:33", "upload_time_iso_8601": "2020-04-09T10:59:33.604817Z", "url": "https://files.pythonhosted.org/packages/9e/7e/3e1565a599f6fcb19796e220f8cea925d4a58d71626d3e7524b23d1f47a7/pulseapi_integration-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:06 2020"}