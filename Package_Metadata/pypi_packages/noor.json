{"info": {"author": "Ali Gholami Rudi", "author_email": "aligrudi@users.sourceforge.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Environment :: X11 Applications :: GTK", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU General Public License (GPL)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Religion"], "description": "=============================\n Noor, A python Quran viewer\n=============================\n\n\nOverview\n========\n\nNoor_ is a small Quran viewer written in Python_.  It shows the\ntranslation of each aya, if specified, right after it.  These are the\ninterfaces that come with noor:\n\n===========   ===================================================\nInterface     Description\n===========   ===================================================\nnoorgtk       Uses PyGtk_ library\nnoorhtmls     Outputs quran in html files in the output directory\nnoorcgi       Can be used as a CGI script in web servers\nnoortxt       Outputs a sura to a text file\n===========   ===================================================\n\n.. _Noor: http://noor.sf.net/\n.. _PyGTK: http://www.pygtk.org/\n.. _Python: http://www.python.org/\n\n\nNew Features\n============\n\n* copy current aya/translation to clipboard\n* support for vi-like marks\n\nGetting Started\n===============\n\nnoorgtk\n-------\n\nFor using the GTK interface you need to install Python_ and PyGTK_\n(they are installed by default in some linux distributions like\nUbuntu).  You can start it by running ``noorgtk.pyw`` script either\nfrom the command line or by double clicking it in the extracted\nfolder.  That is, no installation is necessary.\n\nBut if you like, you can run ``python setup.py install`` to install\nNoor.  After that you'll be able to run ``noorgtk.pyw`` in the terminal\nfrom any location.\n\nnoorhtmls\n---------\n\nThe noorhtmls interface can be used to output quran in html files in a\ndirectory.  All you should do is to run::\n\n  noorhtmls.py output_folder\n\nThe ``index.html`` file will contain the list of suras and\n``001.html`` through ``114.html`` files will contain the suras.  Note\nthat the configuration specified in the ``~/.noor`` file is considered\nwhen generating the pages.\n\nnoorcgi\n-------\n\nInstalling the CGI script, ``noorcgi.py``, is like installing any\nother CGI script.  You probably have to copy it to the ``cgi-bin``\ndirectory of your web server.  But before that you should either\ninstall noor as described in the noorgtk_ section or change the line\nin ``noorcgi.py`` file which looks like::\n\n  # Add noor to the python path if its not installed:\n  sys.path.append('/noor/extracted/folder/')\n\nto point to the folder in which you've extracted noor.  Note that if\nyou want to use the CGI interface you no longer need to install\nPyGTK_.\n\n\nNoorgtk Tutorial\n================\n\nAfter starting ``noorgtk`` as described above, you'll be asked to\nselect a sura to view.  (Use ``gtk.ask_sura_at_start`` config or give\na command line argument to skip that).\n\nNow you see the sura you've chosen.  Use up and down keys to move the\ntext.  Press ``a`` key; you'll be asked to enter an aya number.  After\npressing enter you'll be moved to that aya.\n\nNow press ``c``.  A dialog pops up in which you can select a sura.\n\nPress ``s`` this time; Noor will ask you to insert a sura number to\ngo to.  Also ``J`` (that is capital j) moves you to the start of a\njuz.\n\nNow press ``C-M-n`` or ``C-j`` (whichever you're most comfortable\nwith).  Noor will show the next sura.  Likewise ``C-M-p`` or ``C-k``\ncan be used for previous sura.\n\nSome commands need an integer argument, such as goto aya, goto the\npage before aya, goto sura and goto juz.  If you type a number before\nusing these commands, that number will be assumed to be the argument\nand Noor *won't* ask the number in a dialog.\n\nNote that many of Noor commands can be done in more than one way and\nhave more than one key-binding.  See the `noorgtk keys`_ and try its\ncommands.\n\nAlso you can tell noorgtk to start from a sura and aya using command\nline arguments.  For instance ``noorgtk.pyw 100 3`` goes to the third\naya of the 100th sura.\n\n\nAdding Translations\n===================\n\nYou can edit the ``~/.noor`` file::\n\n  [common]\n  translation = /path/to/translation/file\n\nThe translation file can be in two formats.  It can be either a zip\nfile in the same format as Zekr_ translation files which can be\nobtained from http://siahe.com/zekr/resources.html or it can be a\nutf-8 text file with translation of each aya in one line.\n\n.. _Zekr: http://siahe.com/zekr\n\n\nChanging Font\n=============\n\nYou can change the GTK or html fonts in ``~/.noor`` file::\n\n  [gtk]\n  font = me_quran 23\n  translation_font = Dejavu Sans Mono size:14 fgcolor:#001100 fgcolor:#DDDDFF\n\n  [html]\n  font = me_quran 6 fgcolor:554444\n  translation_font = Dejavu Sans Mono 4 fgcolor:444455\n\nA font has face, size, fgcolor and bgcolor attributes.  These\nattributes can be set using ``attr:value`` format where ``attr`` is\nattribute name.  The old format still works; that is ``myfont 16`` is\nthe same as ``myfont size:16`` and also the same as ``face:myfont\nsize:16``.\n\n\nNotes\n=====\n\nYou can add notes to suras and ayas.  You can use ``gtk.show_notes``\nvariable to enable this feature; add this to your ``~/.noor``::\n\n  [gtk]\n  show_notes = 1\n\nWhen enabled, notes panel is shown right above the status bar.\n\nUsing ``A`` key (that is ``shift-a``), moves the focus to ``notes``\npanel (you can also use the mouse).  You can use ``N`` to toggle note\npanel visibility.\n\nNotes are saved in ``gtk.notes_dir`` directory (``~/.noornotes``, by\ndefault) when either the focus moves out of notes panel or when you\npress ``C-s``.  Notes are saved in:\n\n* notes for kth sura will be written in ``k.txt``\n* notes for the kth aya of jth sura will be written in ``j-k.txt``\n\n\nChanging The Language\n=====================\n\nYou can change the language of noorgtk dialogs and noorhtmls pages;\nfor instance::\n\n  [common]\n  lang = en\n\nwill use English.  The value of ``common.lang`` config should be a two\nletter symbol of a language.  Currently Arabic (``ar``), English\n(``en``), Farsi (``fa``) and Pashto (``ps``) are supported.  If you\nlike, you can translate noor to other languages (ask the mailing list\nif you need help).\n\n\nPlaying Recitation\n==================\n\nYou can use ``gtk.play_aya`` and ``gtk.play_sura`` to play sura and\naya recitation.  For instance::\n\n  [gtk]\n  play_aya = mplayer -noconsolecontrols /path/to/folder/${sura}${aya}.mp3\n\n``${sura}`` and ``${aya}`` are replaced with zero filled sura and aya\nnumber.\n\nYou can also ask noor to follow ayas; that is when the player finishes\nwith zero return value noor goes to the next aya.  For this to work\nyou need to set the ``gtk.follow_ayas`` option::\n\n  [gtk]\n  follow_ayas = 1\n\nYou can use the ``K`` key to stop following ayas.\n\n\nHiding Noorgtk Parts\n====================\n\nYou can hide most GUI parts of noorgtk.  For instance::\n\n  [gtk]\n  menu_bar = 0\n  status_bar = 0\n  toolbar = 0\n  scrollbar = 0\n  task_pane = 0\n  show_notes = 0\n  hide_buttons = 1\n\nWill hide things like menu bar, status bar and toolbar.\n\n\nNoorgtk Keys\n============\n\nThese keys can be used in the GTK interface.  Note that ``C-`` stands\nfor control key, ``M-`` for alt key, ``S-`` for shift key and ``C-M``\nfor control and alt key pressed together.  For instance ``C-n`` means\npressing ``n`` key while holding the control key.\n\n=============================  ============================\nAction                         Keys\n=============================  ============================\nmove down                      down, j, C-n, C-f, C-d\nmove up                        up, k, C-p, C-b, C-d\nnext page                      page-down, space, C-v\nprevious page                  page-up, S-space, M-v\nsura start                     home, C-a\nsura end                       end, C-e\n\nnext sura                      C-M-n, C-j\nchoose sura                    c\nprevious sura                  C-M-p, C-k\n\nnext aya                       n\nprevious aya                   p\ncurrent aya                    .\n\ncopy aya                       y\ncopy aya translation           Y\n\nappend digit to number         digits; [0-9]\nclear number                   escape, C-g\ngoto n-th aya                  a, return, M-g, G\ngoto the page before n-th aya  b, S-return, M-G\ngoto n-th sura                 s, C-return, C-M-g, s\ngoto n-th juz start            J, C-M-return, C-M-G\n\nback                           C-[, M-left\nforward                        C-], M-right\n\nadd bookmark                   B\njump to bookmark               M\n\nadd mark                       m\njump to mark                   ', `\n\nfullscreen                     f, F11\nsearch forward                 /, C-s\nsearch backwards               ?, C-r\n\nstop the player                K\n\ntoggle notes                   N\nwrite note                     A\n\nabout                          r\nquit                           q\n=============================  ============================\n\nNote ``n`` here means the number typed so far.  Actually by pressing\ndigits you prefix commands.  For instance pressing ``2`` followed by\n``1`` and followed by ``C-M-return``, you tell noor to go to the start\nof the 21st juz.\n\nIf no prefix is typed for prefixed commands, noor will ask it in a\ndialog.\n\n\nConfiguration File\n==================\n\nYou can specify configuration options in ``~/.noor`` file.  See the\nend of ``noor/uihelpers.py`` file for the default contents of\n``~/.noor`` file (the default ``~/.noor`` will be created if it does\nnot exist).\n\nNote that ``html`` section of the config file is applied to both\n*noorcgi* and *noorhtmls* interfaces.\n\n\nBookmarks\n=========\n\nNoor supports aya bookmarks.  When you add a bookmark, the location\nand its name is saved so that you can jump to that location from the\n``list bookmarks`` dialog.\n\nNoor saves bookmarks in a ``~/.noor.bmk`` by default.  You can change\nthat by using ``gtk.bookmark_file`` option.  Each line of this file\ncan contain a bookmark like::\n\n  sura_number:aya_number bookmark_name\n\nYou can edit this file manually to change them.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://noor.sf.net/", "keywords": null, "license": "GNU GPL", "maintainer": null, "maintainer_email": null, "name": "noor", "package_url": "https://pypi.org/project/noor/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/noor/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://noor.sf.net/"}, "release_url": "https://pypi.org/project/noor/1.2/", "requires_dist": null, "requires_python": null, "summary": "A python Quran viewer", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p><a href=\"http://noor.sf.net/\" rel=\"nofollow\">Noor</a> is a small Quran viewer written in <a href=\"http://www.python.org/\" rel=\"nofollow\">Python</a>.  It shows the\ntranslation of each aya, if specified, right after it.  These are the\ninterfaces that come with noor:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Interface</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>noorgtk</td>\n<td>Uses <a href=\"http://www.pygtk.org/\" rel=\"nofollow\">PyGtk</a> library</td>\n</tr>\n<tr><td>noorhtmls</td>\n<td>Outputs quran in html files in the output directory</td>\n</tr>\n<tr><td>noorcgi</td>\n<td>Can be used as a CGI script in web servers</td>\n</tr>\n<tr><td>noortxt</td>\n<td>Outputs a sura to a text file</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"new-features\">\n<h2>New Features</h2>\n<ul>\n<li>copy current aya/translation to clipboard</li>\n<li>support for vi-like marks</li>\n</ul>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<div id=\"noorgtk\">\n<h3>noorgtk</h3>\n<p>For using the GTK interface you need to install <a href=\"http://www.python.org/\" rel=\"nofollow\">Python</a> and <a href=\"http://www.pygtk.org/\" rel=\"nofollow\">PyGTK</a>\n(they are installed by default in some linux distributions like\nUbuntu).  You can start it by running <tt>noorgtk.pyw</tt> script either\nfrom the command line or by double clicking it in the extracted\nfolder.  That is, no installation is necessary.</p>\n<p>But if you like, you can run <tt>python setup.py install</tt> to install\nNoor.  After that you\u2019ll be able to run <tt>noorgtk.pyw</tt> in the terminal\nfrom any location.</p>\n</div>\n<div id=\"noorhtmls\">\n<h3>noorhtmls</h3>\n<p>The noorhtmls interface can be used to output quran in html files in a\ndirectory.  All you should do is to run:</p>\n<pre>noorhtmls.py output_folder\n</pre>\n<p>The <tt>index.html</tt> file will contain the list of suras and\n<tt>001.html</tt> through <tt>114.html</tt> files will contain the suras.  Note\nthat the configuration specified in the <tt><span class=\"pre\">~/.noor</span></tt> file is considered\nwhen generating the pages.</p>\n</div>\n<div id=\"noorcgi\">\n<h3>noorcgi</h3>\n<p>Installing the CGI script, <tt>noorcgi.py</tt>, is like installing any\nother CGI script.  You probably have to copy it to the <tt><span class=\"pre\">cgi-bin</span></tt>\ndirectory of your web server.  But before that you should either\ninstall noor as described in the <a href=\"#noorgtk\" rel=\"nofollow\">noorgtk</a> section or change the line\nin <tt>noorcgi.py</tt> file which looks like:</p>\n<pre># Add noor to the python path if its not installed:\nsys.path.append('/noor/extracted/folder/')\n</pre>\n<p>to point to the folder in which you\u2019ve extracted noor.  Note that if\nyou want to use the CGI interface you no longer need to install\n<a href=\"http://www.pygtk.org/\" rel=\"nofollow\">PyGTK</a>.</p>\n</div>\n</div>\n<div id=\"noorgtk-tutorial\">\n<h2>Noorgtk Tutorial</h2>\n<p>After starting <tt>noorgtk</tt> as described above, you\u2019ll be asked to\nselect a sura to view.  (Use <tt>gtk.ask_sura_at_start</tt> config or give\na command line argument to skip that).</p>\n<p>Now you see the sura you\u2019ve chosen.  Use up and down keys to move the\ntext.  Press <tt>a</tt> key; you\u2019ll be asked to enter an aya number.  After\npressing enter you\u2019ll be moved to that aya.</p>\n<p>Now press <tt>c</tt>.  A dialog pops up in which you can select a sura.</p>\n<p>Press <tt>s</tt> this time; Noor will ask you to insert a sura number to\ngo to.  Also <tt>J</tt> (that is capital j) moves you to the start of a\njuz.</p>\n<p>Now press <tt><span class=\"pre\">C-M-n</span></tt> or <tt><span class=\"pre\">C-j</span></tt> (whichever you\u2019re most comfortable\nwith).  Noor will show the next sura.  Likewise <tt><span class=\"pre\">C-M-p</span></tt> or <tt><span class=\"pre\">C-k</span></tt>\ncan be used for previous sura.</p>\n<p>Some commands need an integer argument, such as goto aya, goto the\npage before aya, goto sura and goto juz.  If you type a number before\nusing these commands, that number will be assumed to be the argument\nand Noor <em>won\u2019t</em> ask the number in a dialog.</p>\n<p>Note that many of Noor commands can be done in more than one way and\nhave more than one key-binding.  See the <a href=\"#noorgtk-keys\" rel=\"nofollow\">noorgtk keys</a> and try its\ncommands.</p>\n<p>Also you can tell noorgtk to start from a sura and aya using command\nline arguments.  For instance <tt>noorgtk.pyw 100 3</tt> goes to the third\naya of the 100th sura.</p>\n</div>\n<div id=\"adding-translations\">\n<h2>Adding Translations</h2>\n<p>You can edit the <tt><span class=\"pre\">~/.noor</span></tt> file:</p>\n<pre>[common]\ntranslation = /path/to/translation/file\n</pre>\n<p>The translation file can be in two formats.  It can be either a zip\nfile in the same format as <a href=\"http://siahe.com/zekr\" rel=\"nofollow\">Zekr</a> translation files which can be\nobtained from <a href=\"http://siahe.com/zekr/resources.html\" rel=\"nofollow\">http://siahe.com/zekr/resources.html</a> or it can be a\nutf-8 text file with translation of each aya in one line.</p>\n</div>\n<div id=\"changing-font\">\n<h2>Changing Font</h2>\n<p>You can change the GTK or html fonts in <tt><span class=\"pre\">~/.noor</span></tt> file:</p>\n<pre>[gtk]\nfont = me_quran 23\ntranslation_font = Dejavu Sans Mono size:14 fgcolor:#001100 fgcolor:#DDDDFF\n\n[html]\nfont = me_quran 6 fgcolor:554444\ntranslation_font = Dejavu Sans Mono 4 fgcolor:444455\n</pre>\n<p>A font has face, size, fgcolor and bgcolor attributes.  These\nattributes can be set using <tt>attr:value</tt> format where <tt>attr</tt> is\nattribute name.  The old format still works; that is <tt>myfont 16</tt> is\nthe same as <tt>myfont size:16</tt> and also the same as <tt>face:myfont\nsize:16</tt>.</p>\n</div>\n<div id=\"notes\">\n<h2>Notes</h2>\n<p>You can add notes to suras and ayas.  You can use <tt>gtk.show_notes</tt>\nvariable to enable this feature; add this to your <tt><span class=\"pre\">~/.noor</span></tt>:</p>\n<pre>[gtk]\nshow_notes = 1\n</pre>\n<p>When enabled, notes panel is shown right above the status bar.</p>\n<p>Using <tt>A</tt> key (that is <tt><span class=\"pre\">shift-a</span></tt>), moves the focus to <tt>notes</tt>\npanel (you can also use the mouse).  You can use <tt>N</tt> to toggle note\npanel visibility.</p>\n<p>Notes are saved in <tt>gtk.notes_dir</tt> directory (<tt><span class=\"pre\">~/.noornotes</span></tt>, by\ndefault) when either the focus moves out of notes panel or when you\npress <tt><span class=\"pre\">C-s</span></tt>.  Notes are saved in:</p>\n<ul>\n<li>notes for kth sura will be written in <tt>k.txt</tt></li>\n<li>notes for the kth aya of jth sura will be written in <tt><span class=\"pre\">j-k.txt</span></tt></li>\n</ul>\n</div>\n<div id=\"changing-the-language\">\n<h2>Changing The Language</h2>\n<p>You can change the language of noorgtk dialogs and noorhtmls pages;\nfor instance:</p>\n<pre>[common]\nlang = en\n</pre>\n<p>will use English.  The value of <tt>common.lang</tt> config should be a two\nletter symbol of a language.  Currently Arabic (<tt>ar</tt>), English\n(<tt>en</tt>), Farsi (<tt>fa</tt>) and Pashto (<tt>ps</tt>) are supported.  If you\nlike, you can translate noor to other languages (ask the mailing list\nif you need help).</p>\n</div>\n<div id=\"playing-recitation\">\n<h2>Playing Recitation</h2>\n<p>You can use <tt>gtk.play_aya</tt> and <tt>gtk.play_sura</tt> to play sura and\naya recitation.  For instance:</p>\n<pre>[gtk]\nplay_aya = mplayer -noconsolecontrols /path/to/folder/${sura}${aya}.mp3\n</pre>\n<p><tt>${sura}</tt> and <tt>${aya}</tt> are replaced with zero filled sura and aya\nnumber.</p>\n<p>You can also ask noor to follow ayas; that is when the player finishes\nwith zero return value noor goes to the next aya.  For this to work\nyou need to set the <tt>gtk.follow_ayas</tt> option:</p>\n<pre>[gtk]\nfollow_ayas = 1\n</pre>\n<p>You can use the <tt>K</tt> key to stop following ayas.</p>\n</div>\n<div id=\"hiding-noorgtk-parts\">\n<h2>Hiding Noorgtk Parts</h2>\n<p>You can hide most GUI parts of noorgtk.  For instance:</p>\n<pre>[gtk]\nmenu_bar = 0\nstatus_bar = 0\ntoolbar = 0\nscrollbar = 0\ntask_pane = 0\nshow_notes = 0\nhide_buttons = 1\n</pre>\n<p>Will hide things like menu bar, status bar and toolbar.</p>\n</div>\n<div id=\"noorgtk-keys\">\n<h2>Noorgtk Keys</h2>\n<p>These keys can be used in the GTK interface.  Note that <tt>C-</tt> stands\nfor control key, <tt>M-</tt> for alt key, <tt>S-</tt> for shift key and <tt><span class=\"pre\">C-M</span></tt>\nfor control and alt key pressed together.  For instance <tt><span class=\"pre\">C-n</span></tt> means\npressing <tt>n</tt> key while holding the control key.</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Action</th>\n<th>Keys</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>move down</td>\n<td>down, j, C-n, C-f, C-d</td>\n</tr>\n<tr><td>move up</td>\n<td>up, k, C-p, C-b, C-d</td>\n</tr>\n<tr><td>next page</td>\n<td>page-down, space, C-v</td>\n</tr>\n<tr><td>previous page</td>\n<td>page-up, S-space, M-v</td>\n</tr>\n<tr><td>sura start</td>\n<td>home, C-a</td>\n</tr>\n<tr><td>sura end</td>\n<td>end, C-e</td>\n</tr>\n<tr><td>next sura</td>\n<td>C-M-n, C-j</td>\n</tr>\n<tr><td>choose sura</td>\n<td>c</td>\n</tr>\n<tr><td>previous sura</td>\n<td>C-M-p, C-k</td>\n</tr>\n<tr><td>next aya</td>\n<td>n</td>\n</tr>\n<tr><td>previous aya</td>\n<td>p</td>\n</tr>\n<tr><td>current aya</td>\n<td>.</td>\n</tr>\n<tr><td>copy aya</td>\n<td>y</td>\n</tr>\n<tr><td>copy aya translation</td>\n<td>Y</td>\n</tr>\n<tr><td>append digit to number</td>\n<td>digits; [0-9]</td>\n</tr>\n<tr><td>clear number</td>\n<td>escape, C-g</td>\n</tr>\n<tr><td>goto n-th aya</td>\n<td>a, return, M-g, G</td>\n</tr>\n<tr><td>goto the page before n-th aya</td>\n<td>b, S-return, M-G</td>\n</tr>\n<tr><td>goto n-th sura</td>\n<td>s, C-return, C-M-g, s</td>\n</tr>\n<tr><td>goto n-th juz start</td>\n<td>J, C-M-return, C-M-G</td>\n</tr>\n<tr><td>back</td>\n<td>C-[, M-left</td>\n</tr>\n<tr><td>forward</td>\n<td>C-], M-right</td>\n</tr>\n<tr><td>add bookmark</td>\n<td>B</td>\n</tr>\n<tr><td>jump to bookmark</td>\n<td>M</td>\n</tr>\n<tr><td>add mark</td>\n<td>m</td>\n</tr>\n<tr><td>jump to mark</td>\n<td>\u2018, `</td>\n</tr>\n<tr><td>fullscreen</td>\n<td>f, F11</td>\n</tr>\n<tr><td>search forward</td>\n<td>/, C-s</td>\n</tr>\n<tr><td>search backwards</td>\n<td>?, C-r</td>\n</tr>\n<tr><td>stop the player</td>\n<td>K</td>\n</tr>\n<tr><td>toggle notes</td>\n<td>N</td>\n</tr>\n<tr><td>write note</td>\n<td>A</td>\n</tr>\n<tr><td>about</td>\n<td>r</td>\n</tr>\n<tr><td>quit</td>\n<td>q</td>\n</tr>\n</tbody>\n</table>\n<p>Note <tt>n</tt> here means the number typed so far.  Actually by pressing\ndigits you prefix commands.  For instance pressing <tt>2</tt> followed by\n<tt>1</tt> and followed by <tt><span class=\"pre\">C-M-return</span></tt>, you tell noor to go to the start\nof the 21st juz.</p>\n<p>If no prefix is typed for prefixed commands, noor will ask it in a\ndialog.</p>\n</div>\n<div id=\"configuration-file\">\n<h2>Configuration File</h2>\n<p>You can specify configuration options in <tt><span class=\"pre\">~/.noor</span></tt> file.  See the\nend of <tt>noor/uihelpers.py</tt> file for the default contents of\n<tt><span class=\"pre\">~/.noor</span></tt> file (the default <tt><span class=\"pre\">~/.noor</span></tt> will be created if it does\nnot exist).</p>\n<p>Note that <tt>html</tt> section of the config file is applied to both\n<em>noorcgi</em> and <em>noorhtmls</em> interfaces.</p>\n</div>\n<div id=\"bookmarks\">\n<h2>Bookmarks</h2>\n<p>Noor supports aya bookmarks.  When you add a bookmark, the location\nand its name is saved so that you can jump to that location from the\n<tt>list bookmarks</tt> dialog.</p>\n<p>Noor saves bookmarks in a <tt><span class=\"pre\">~/.noor.bmk</span></tt> by default.  You can change\nthat by using <tt>gtk.bookmark_file</tt> option.  Each line of this file\ncan contain a bookmark like:</p>\n<pre>sura_number:aya_number bookmark_name\n</pre>\n<p>You can edit this file manually to change them.</p>\n</div>\n\n          </div>"}, "last_serial": 92412, "releases": {"0.1": [], "0.2": [], "0.3": [], "0.4": [], "0.5": [], "0.6": [], "0.7": [], "0.8": [], "0.8.1": [], "0.8.2": [], "0.9": [], "1.0": [], "1.1": [], "1.2": []}, "urls": [], "timestamp": "Fri May  8 00:44:51 2020"}