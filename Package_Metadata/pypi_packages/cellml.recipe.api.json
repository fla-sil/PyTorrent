{"info": {"author": "Tommy Yu", "author_email": "tommy.yu@auckland.ac.nz", "bugtrack_url": null, "classifiers": ["Framework :: Buildout :: Recipe", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)", "License :: OSI Approved :: Mozilla Public License 1.1 (MPL 1.1)", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Overview\n========\n\nThis is the recipe that will build the CellML API Python bindings with\nall options enabled by default.  Currently, there are some limitations,\nsuch as all dependencies required to build the CellML API must be\ninstalled before this recipe can be used, and I don't think this will\nwork under Windows at the moment.\n\n\nSupported options\n=================\n\nThe recipe supports the following options:\n\napi-version\n    CellML API version to build.  Valid versions any versions that build\n    via CMake and has Python bindings (>1.10), and must be present in\n    the list of valid versions.\n\ncmake-generator\n    The generator to use.  Only the default option ``Unix Makefiles`` is\n    supported, as this recipe is built on top of ``zc.recipe.cmmi`` \n    which will make use of ``make`` and ``make install``.\n\ncheck-build\n    Whether to check build time dependencies.  Default is off because it\n    didn't detect GSL libraries even though it was installed for me.\n    Same as passing ``-DCHECK_BUILD:BOOL=OFF`` to ``cmake``.\n\nOther supported options:\n\n    - enable-examples\n    - enable-annotools\n    - enable-ccgs\n    - enable-celeds\n    - enable-celeds-exporter\n    - enable-cevas\n    - enable-cis\n    - enable-cuses\n    - enable-gsl-integrators\n    - enable-malaes\n    - enable-python\n    - enable-rdf\n    - enable-spros\n    - enable-srus\n    - enable-telicems\n    - enable-vacss\n\nPlease refer to the `CellML API Documentations`_ for what these options\ndo.\n\n.. _CellML API Documentations: http://cellml-api.sourceforge.net/\n\n\nUsage\n=====\n\nAs this egg is published on `pypi`_, this recipe can be used right away\nby including a new part inside a ``buildout.cfg``.  The following is an\nexample configuration:\n\n.. _pypi: http://pypi.python.org/\n\n::\n\n    [buildout]\n    parts = \n        ...\n        cellml-api\n        cellmlpy\n\n    [cellml-api]\n    recipe = cellml.recipe.api\n    api-version = 1.10   \n\n    [cellmlpy]\n    recipe = zc.recipe.egg\n    eggs = \n    interpreter = cellmlpy\n    scripts = cellmlpy\n    extra-paths = ${cellml-api:location}/lib/python\n\nThis example ``buildout.cfg`` will build the CellML API v1.10 with all\nthe supported options enabled, and a script will be generated in\n``bin/cellmlpy`` which will allow the bindings to be imported without\nsetting ``PYTHONPATH`` and other related environmental variables.\nPlease refer to the examples directory for more detailed instructions\nand other example usages of this recipe.\n\n\nCopyright/License information\n=============================\n\nThis software is released under the MPL/GPL/LGPL licenses.\n\nPlease refer to the file ``COPYING.txt`` for detailed copyright\ninformation, and ``docs`` directory for specific licenses that this\nsoftware is released under.\n\nChange history\n**************\n\n0.7 (2019-01-23)\n================\n\n- Update distribution location.\n\n0.6 (2018-07-31)\n================\n\n- Python 3 compatibility.\n\n0.5 (2018-01-23)\n================\n\n- Added latest version of CellML API on github.\n- Added RUNPATH into place.\n\n0.4 (2012-11-05)\n================\n\n- Added CellML API 1.12.\n\n0.3 (2012-10-03)\n================\n\n- Corrected typo for the TeLICeM flag.\n- Added CellML API 1.11.\n\n0.2 (2011-09-21)\n================\n\n- Fixed the issue where all the expected keys are assigned with an\n  empty string even if unassigned; this caused various unwanted side\n  effects.\n- Fixed the issue where the location of this buildout recipe is \n  undefined.\n\n\n0.1 (2011-09-21)\n================\n\n- Initial release of the CellML API Python bindings buildout.\n\n\n\nDetailed Documentation\n**********************\n\nDemonstration\n=============\n\nThis recipe extends on the ``zc.recipe.cmmi`` with the caveat where\ncmake is called instead of the ``./configure`` scripts, yet have cmake\ngenerate ``Unix Makefiles`` such that the ``make``/``make install`` that\ncmmi calls will proceed as normal.\n\nFor the demonstration, instead of download/building the entire API, we\nare going to make use of the mock-ups (which is previous setup).\n::\n\n    >>> ls(distros)\n    -  cellml-api-0.0fake.tgz\n\n    >>> distros_url = start_server(distros)\n    >>> archive_url = '%scellml-api-0.0fake.tgz' % distros_url\n\nLet's create our buildout, but modified so that we use our fake archive.\n::\n\n    >>> write('buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = cellml-api\n    ...\n    ... [cellml-api]\n    ... recipe = cellml.recipe.api\n    ... api-version = 0.0fake\n    ... \"\"\")\n\nAs our mocked up api version is not listed as an available version, \nbuildout will die.\n::\n\n    >>> print('start ' + system(buildout))\n    start...\n      Installing.\n      Getting ... cellml-api.\n      Initializing ... cellml-api.\n    ...\n    Traceback (most recent call last):\n    ...\n    ValueError: api-version `0.0fake` is not a supported version of...\n    <BLANKLINE>\n\nWell, since our fake version is obviously not going to be added into the\nlisting of supported APIs, we can still provide our url and md5sum, as\nthe original function provided by ``zc.recipe.cmmi`` is still in effect.\nRewrite buildout.cfg with the desired attributes.\n::\n\n    >>> try: from hashlib import md5\n    ... except ImportError: from md5 import new as md5\n    >>> m = md5(open(join(distros, 'cellml-api-0.0fake.tgz'), 'rb'\n    ...             ).read()).hexdigest()\n    >>> write('buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = cellml-api\n    ...\n    ... [cellml-api]\n    ... recipe = cellml.recipe.api\n    ... url = %s\n    ... md5sum = %s\n    ... \"\"\" % (archive_url, m))\n\n    >>> print('start ' + system(buildout))\n    start...\n    ...\n    CMake Warning:\n      Manually-specified variables were not used by the project:\n    <BLANKLINE>\n        CHECK_BUILD\n        ENABLE_ANNOTOOLS\n        ENABLE_CCGS\n        ENABLE_CELEDS\n        ENABLE_CELEDS_EXPORTER\n        ENABLE_CEVAS\n        ENABLE_CGRS\n        ENABLE_CIS\n        ENABLE_CUSES\n        ENABLE_EXAMPLES\n        ENABLE_GSL_INTEGRATORS\n        ENABLE_MALAES\n        ENABLE_PYTHON\n        ENABLE_RDF\n        ENABLE_SPROS\n        ENABLE_SRUS\n        ENABLE_TELICEMS\n        ENABLE_VACSS\n    <BLANKLINE>\n    <BLANKLINE>\n    <BLANKLINE>\n\n\nContributors\n************\n\nTommy Yu, Author\n\n\nDownload\n********\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.cellml.org/tools/api/", "keywords": "cellml", "license": "GPL/LGPL/MPL", "maintainer": "", "maintainer_email": "", "name": "cellml.recipe.api", "package_url": "https://pypi.org/project/cellml.recipe.api/", "platform": "", "project_url": "https://pypi.org/project/cellml.recipe.api/", "project_urls": {"Homepage": "http://www.cellml.org/tools/api/"}, "release_url": "https://pypi.org/project/cellml.recipe.api/0.7/", "requires_dist": ["setuptools", "zc.buildout", "zc.recipe.cmmi", "zope.testing; extra == 'tests'", "zc.buildout; extra == 'tests'"], "requires_python": "", "summary": "Recipe to call CMake to build CellML API and Python bindings", "version": "0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p>This is the recipe that will build the CellML API Python bindings with\nall options enabled by default.  Currently, there are some limitations,\nsuch as all dependencies required to build the CellML API must be\ninstalled before this recipe can be used, and I don\u2019t think this will\nwork under Windows at the moment.</p>\n</div>\n<div id=\"supported-options\">\n<h2>Supported options</h2>\n<p>The recipe supports the following options:</p>\n<dl>\n<dt>api-version</dt>\n<dd>CellML API version to build.  Valid versions any versions that build\nvia CMake and has Python bindings (&gt;1.10), and must be present in\nthe list of valid versions.</dd>\n<dt>cmake-generator</dt>\n<dd>The generator to use.  Only the default option <tt>Unix Makefiles</tt> is\nsupported, as this recipe is built on top of <tt>zc.recipe.cmmi</tt>\nwhich will make use of <tt>make</tt> and <tt>make install</tt>.</dd>\n<dt>check-build</dt>\n<dd>Whether to check build time dependencies.  Default is off because it\ndidn\u2019t detect GSL libraries even though it was installed for me.\nSame as passing <tt><span class=\"pre\">-DCHECK_BUILD:BOOL=OFF</span></tt> to <tt>cmake</tt>.</dd>\n</dl>\n<p>Other supported options:</p>\n<blockquote>\n<ul>\n<li>enable-examples</li>\n<li>enable-annotools</li>\n<li>enable-ccgs</li>\n<li>enable-celeds</li>\n<li>enable-celeds-exporter</li>\n<li>enable-cevas</li>\n<li>enable-cis</li>\n<li>enable-cuses</li>\n<li>enable-gsl-integrators</li>\n<li>enable-malaes</li>\n<li>enable-python</li>\n<li>enable-rdf</li>\n<li>enable-spros</li>\n<li>enable-srus</li>\n<li>enable-telicems</li>\n<li>enable-vacss</li>\n</ul>\n</blockquote>\n<p>Please refer to the <a href=\"http://cellml-api.sourceforge.net/\" rel=\"nofollow\">CellML API Documentations</a> for what these options\ndo.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>As this egg is published on <a href=\"http://pypi.python.org/\" rel=\"nofollow\">pypi</a>, this recipe can be used right away\nby including a new part inside a <tt>buildout.cfg</tt>.  The following is an\nexample configuration:</p>\n<pre>[buildout]\nparts =\n    ...\n    cellml-api\n    cellmlpy\n\n[cellml-api]\nrecipe = cellml.recipe.api\napi-version = 1.10\n\n[cellmlpy]\nrecipe = zc.recipe.egg\neggs =\ninterpreter = cellmlpy\nscripts = cellmlpy\nextra-paths = ${cellml-api:location}/lib/python\n</pre>\n<p>This example <tt>buildout.cfg</tt> will build the CellML API v1.10 with all\nthe supported options enabled, and a script will be generated in\n<tt>bin/cellmlpy</tt> which will allow the bindings to be imported without\nsetting <tt>PYTHONPATH</tt> and other related environmental variables.\nPlease refer to the examples directory for more detailed instructions\nand other example usages of this recipe.</p>\n</div>\n<div id=\"copyright-license-information\">\n<h2>Copyright/License information</h2>\n<p>This software is released under the MPL/GPL/LGPL licenses.</p>\n<p>Please refer to the file <tt>COPYING.txt</tt> for detailed copyright\ninformation, and <tt>docs</tt> directory for specific licenses that this\nsoftware is released under.</p>\n<div id=\"change-history\">\n<h3>Change history</h3>\n</div>\n</div>\n<div id=\"id1\">\n<h2>0.7 (2019-01-23)</h2>\n<ul>\n<li>Update distribution location.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h2>0.6 (2018-07-31)</h2>\n<ul>\n<li>Python 3 compatibility.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h2>0.5 (2018-01-23)</h2>\n<ul>\n<li>Added latest version of CellML API on github.</li>\n<li>Added RUNPATH into place.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h2>0.4 (2012-11-05)</h2>\n<ul>\n<li>Added CellML API 1.12.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h2>0.3 (2012-10-03)</h2>\n<ul>\n<li>Corrected typo for the TeLICeM flag.</li>\n<li>Added CellML API 1.11.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h2>0.2 (2011-09-21)</h2>\n<ul>\n<li>Fixed the issue where all the expected keys are assigned with an\nempty string even if unassigned; this caused various unwanted side\neffects.</li>\n<li>Fixed the issue where the location of this buildout recipe is\nundefined.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h2>0.1 (2011-09-21)</h2>\n<ul>\n<li>Initial release of the CellML API Python bindings buildout.</li>\n</ul>\n<div id=\"detailed-documentation\">\n<h3>Detailed Documentation</h3>\n</div>\n</div>\n<div id=\"demonstration\">\n<h2>Demonstration</h2>\n<p>This recipe extends on the <tt>zc.recipe.cmmi</tt> with the caveat where\ncmake is called instead of the <tt>./configure</tt> scripts, yet have cmake\ngenerate <tt>Unix Makefiles</tt> such that the <tt>make</tt>/<tt>make install</tt> that\ncmmi calls will proceed as normal.</p>\n<p>For the demonstration, instead of download/building the entire API, we\nare going to make use of the mock-ups (which is previous setup).</p>\n<pre>&gt;&gt;&gt; ls(distros)\n-  cellml-api-0.0fake.tgz\n\n&gt;&gt;&gt; distros_url = start_server(distros)\n&gt;&gt;&gt; archive_url = '%scellml-api-0.0fake.tgz' % distros_url\n</pre>\n<p>Let\u2019s create our buildout, but modified so that we use our fake archive.</p>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = cellml-api\n...\n... [cellml-api]\n... recipe = cellml.recipe.api\n... api-version = 0.0fake\n... \"\"\")\n</pre>\n<p>As our mocked up api version is not listed as an available version,\nbuildout will die.</p>\n<pre>&gt;&gt;&gt; print('start ' + system(buildout))\nstart...\n  Installing.\n  Getting ... cellml-api.\n  Initializing ... cellml-api.\n...\nTraceback (most recent call last):\n...\nValueError: api-version `0.0fake` is not a supported version of...\n&lt;BLANKLINE&gt;\n</pre>\n<p>Well, since our fake version is obviously not going to be added into the\nlisting of supported APIs, we can still provide our url and md5sum, as\nthe original function provided by <tt>zc.recipe.cmmi</tt> is still in effect.\nRewrite buildout.cfg with the desired attributes.</p>\n<pre>&gt;&gt;&gt; try: from hashlib import md5\n... except ImportError: from md5 import new as md5\n&gt;&gt;&gt; m = md5(open(join(distros, 'cellml-api-0.0fake.tgz'), 'rb'\n...             ).read()).hexdigest()\n&gt;&gt;&gt; write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = cellml-api\n...\n... [cellml-api]\n... recipe = cellml.recipe.api\n... url = %s\n... md5sum = %s\n... \"\"\" % (archive_url, m))\n\n&gt;&gt;&gt; print('start ' + system(buildout))\nstart...\n...\nCMake Warning:\n  Manually-specified variables were not used by the project:\n&lt;BLANKLINE&gt;\n    CHECK_BUILD\n    ENABLE_ANNOTOOLS\n    ENABLE_CCGS\n    ENABLE_CELEDS\n    ENABLE_CELEDS_EXPORTER\n    ENABLE_CEVAS\n    ENABLE_CGRS\n    ENABLE_CIS\n    ENABLE_CUSES\n    ENABLE_EXAMPLES\n    ENABLE_GSL_INTEGRATORS\n    ENABLE_MALAES\n    ENABLE_PYTHON\n    ENABLE_RDF\n    ENABLE_SPROS\n    ENABLE_SRUS\n    ENABLE_TELICEMS\n    ENABLE_VACSS\n&lt;BLANKLINE&gt;\n&lt;BLANKLINE&gt;\n&lt;BLANKLINE&gt;\n</pre>\n<div id=\"contributors\">\n<h3>Contributors</h3>\n<p>Tommy Yu, Author</p>\n</div>\n<div id=\"download\">\n<h3>Download</h3>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4723880, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "2cc8d5e45fc9dce9191ef522a7c7aa32", "sha256": "32291a6a7e1c13dd5ab7ac33d066bf3b4aa666719341afd3d730bdfc19e0ae47"}, "downloads": -1, "filename": "cellml.recipe.api-0.1.tar.gz", "has_sig": false, "md5_digest": "2cc8d5e45fc9dce9191ef522a7c7aa32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30368, "upload_time": "2011-09-21T11:19:40", "upload_time_iso_8601": "2011-09-21T11:19:40.472286Z", "url": "https://files.pythonhosted.org/packages/30/b4/09a68209742e1381565d400d87fb6ac40755d125cfd6d801a0814e6668e8/cellml.recipe.api-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "89e49e89f4d4561780fbdc3b635cb03d", "sha256": "40c4cd5890bbf6f370e001ecc6924d1ea65e85c945e1fdddc8e70652c522a63e"}, "downloads": -1, "filename": "cellml.recipe.api-0.2.tar.gz", "has_sig": false, "md5_digest": "89e49e89f4d4561780fbdc3b635cb03d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30612, "upload_time": "2011-09-21T11:57:16", "upload_time_iso_8601": "2011-09-21T11:57:16.644815Z", "url": "https://files.pythonhosted.org/packages/f3/06/bcb4d37ca667a77b2ae7fbcba5e754ca4789e74f0ed2ef96141a941b5d9a/cellml.recipe.api-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "e679f06b3d39b4468e0b35d14ca03be6", "sha256": "d3aa40efc218c3e0a8c491cded15197c2d29cfe8e7dd71e8346dcadea3cf0ef1"}, "downloads": -1, "filename": "cellml.recipe.api-0.3.tar.gz", "has_sig": false, "md5_digest": "e679f06b3d39b4468e0b35d14ca03be6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31280, "upload_time": "2012-10-03T22:52:37", "upload_time_iso_8601": "2012-10-03T22:52:37.630235Z", "url": "https://files.pythonhosted.org/packages/41/9a/da75246fe5de45a12b0170d0f019581f095d77b157cc249eecaf0c6fc000/cellml.recipe.api-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "47495a34c190939b5ac405bf655519fb", "sha256": "c9e853029ebc9d5c45b8ac0e835779ca022cdb7e4cd2235fbf88bb2082070d0f"}, "downloads": -1, "filename": "cellml.recipe.api-0.4.tar.gz", "has_sig": false, "md5_digest": "47495a34c190939b5ac405bf655519fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29309, "upload_time": "2014-08-28T00:38:09", "upload_time_iso_8601": "2014-08-28T00:38:09.361862Z", "url": "https://files.pythonhosted.org/packages/b3/b0/130695e7f99b57c2a4bc7af72d3a8ed7f46488547c14048a57d5ac5c8d89/cellml.recipe.api-0.4.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "51bef21af8a42c0eee557cdca6fe69d5", "sha256": "0ebfe2cc2cc898ba6d81d57d3de35b6314dbae3d4b837fb0bcc3a519b0eca61a"}, "downloads": -1, "filename": "cellml.recipe.api-0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "51bef21af8a42c0eee557cdca6fe69d5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9205, "upload_time": "2018-07-31T02:17:31", "upload_time_iso_8601": "2018-07-31T02:17:31.956667Z", "url": "https://files.pythonhosted.org/packages/6f/26/ebb21625540201eefa08ce2f8a35b96549b47b856a3b17b1725ef842fbf7/cellml.recipe.api-0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0848d00c83b939754ef5fdd1b318bdac", "sha256": "98118c7184948cb213a65d35a9265c6bd28df2feb2831452a1533e2650ae0c15"}, "downloads": -1, "filename": "cellml.recipe.api-0.6.zip", "has_sig": false, "md5_digest": "0848d00c83b939754ef5fdd1b318bdac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42662, "upload_time": "2018-07-31T02:17:33", "upload_time_iso_8601": "2018-07-31T02:17:33.517247Z", "url": "https://files.pythonhosted.org/packages/f4/bd/9f32937b08cbe4471032af0e65128aef2151397990d734c1d37ce5552c9e/cellml.recipe.api-0.6.zip", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "cf7569fdc1fc5086a4a26b19c9409f19", "sha256": "45c3c3efde911ea4875c0e6cd1e7f2c0590feb85f58f6edd853b047f270fa115"}, "downloads": -1, "filename": "cellml.recipe.api-0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cf7569fdc1fc5086a4a26b19c9409f19", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9225, "upload_time": "2019-01-22T00:20:26", "upload_time_iso_8601": "2019-01-22T00:20:26.962912Z", "url": "https://files.pythonhosted.org/packages/3c/ea/3d01cbb34082a6bf947f33921bfc3071996f84463aa93ae31811af828c81/cellml.recipe.api-0.7-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cf7569fdc1fc5086a4a26b19c9409f19", "sha256": "45c3c3efde911ea4875c0e6cd1e7f2c0590feb85f58f6edd853b047f270fa115"}, "downloads": -1, "filename": "cellml.recipe.api-0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cf7569fdc1fc5086a4a26b19c9409f19", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9225, "upload_time": "2019-01-22T00:20:26", "upload_time_iso_8601": "2019-01-22T00:20:26.962912Z", "url": "https://files.pythonhosted.org/packages/3c/ea/3d01cbb34082a6bf947f33921bfc3071996f84463aa93ae31811af828c81/cellml.recipe.api-0.7-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 22:34:50 2020"}