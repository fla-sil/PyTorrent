{"info": {"author": "Fabian Peter Hammerle", "author_email": "fabian@hammerle.me", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Healthcare Industry", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Medical Science Apps.", "Topic :: Utilities"], "description": "freesurfer-stats\n================\n\n.. image:: https://travis-ci.org/fphammerle/freesurfer-stats.svg?branch=master\n   :target: https://travis-ci.org/fphammerle/freesurfer-stats\n.. image:: https://coveralls.io/repos/github/fphammerle/freesurfer-stats/badge.svg?branch=master\n   :target: https://coveralls.io/github/fphammerle/freesurfer-stats?branch=master\n.. image:: https://img.shields.io/pypi/v/freesurfer-stats.svg\n   :target: https://pypi.org/project/freesurfer-stats/#history\n.. image:: https://img.shields.io/pypi/pyversions/freesurfer-stats.svg\n   :target: https://pypi.org/project/freesurfer-stats/\n.. image:: https://zenodo.org/badge/194054168.svg\n   :target: https://zenodo.org/badge/latestdoi/194054168\n\nPython Library to Read FreeSurfer's Cortical Parcellation Anatomical Statistics\n`subject/stats/[rl]h.aparc.*.stats`\n\nFreesurfer https://surfer.nmr.mgh.harvard.edu/\n\nInstall\n-------\n\n.. code:: sh\n\n    pip3 install --user freesurfer-stats\n\nReleases follow the `semantic versioning <https://semver.org/>` scheme.\n\nUsage\n-----\n\n.. code:: python\n\n    >>> from freesurfer_stats import CorticalParcellationStats\n    >>> stats = CorticalParcellationStats.read('tests/subjects/fabian/stats/lh.aparc.DKTatlas.stats')\n    >>> stats.headers['subjectname']\n    'fabian'\n    >>> stats.headers['CreationTime'].isoformat()\n    '2019-05-09T21:05:54+00:00'\n    >>> stats.headers['cvs_version']\n    'Id: mris_anatomical_stats.c,v 1.79 2016/03/14 15:15:34 greve Exp'\n    >>> stats.headers['cmdline'][:64]\n    'mris_anatomical_stats -th3 -mgz -cortex ../label/lh.cortex.label'\n    >>> stats.hemisphere\n    'left'\n    >>> stats.whole_brain_measurements['estimated_total_intracranial_volume_mm^3']\n    0    1.670487e+06\n    Name: estimated_total_intracranial_volume_mm^3, dtype: float64\n    >>> stats.whole_brain_measurements['white_surface_total_area_mm^2']\n    0    98553\n    Name: white_surface_total_area_mm^2, dtype: int64\n    >>> stats.structural_measurements[['structure_name', 'surface_area_mm^2',\n    ...                                'gray_matter_volume_mm^3']].head()\n                structure_name  surface_area_mm^2  gray_matter_volume_mm^3\n    0  caudalanteriorcingulate               1472                     4258\n    1      caudalmiddlefrontal               3039                     8239\n    2                   cuneus               2597                     6722\n    3               entorhinal                499                     2379\n    4                 fusiform               3079                     9064\n\nLoad Multiple Stats Files\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    >>> import glob, pandas\n    >>> from freesurfer_stats import CorticalParcellationStats\n    >>> def load_whole_brain_measurements(stats_path) -> pandas.DataFrame:\n    ...     stats = CorticalParcellationStats.read(stats_path)\n    ...     stats.whole_brain_measurements['subject'] = stats.headers['subjectname']\n    ...     stats.whole_brain_measurements['source_basename'] = os.path.basename(stats_path)\n    ...     stats.whole_brain_measurements['hemisphere'] = stats.hemisphere\n    ...     return stats.whole_brain_measurements\n    ...\n    >>> whole_brain_measurements = pandas.concat(\n    ...     map(load_whole_brain_measurements, glob.glob('tests/subjects/fabian/stats/*h.aparc*.stats')),\n    ...     sort=False)\n    >>> whole_brain_measurements.reset_index(drop=True, inplace=True)\n    >>> whole_brain_measurements[['subject', 'source_basename', 'hemisphere',\n    ...                           'white_surface_total_area_mm^2', 'pial_surface_total_area_mm^2']]\n      subject          source_basename hemisphere  white_surface_total_area_mm^2  pial_surface_total_area_mm^2\n    0  fabian  lh.aparc.DKTatlas.stats       left                        98553.0                           NaN\n    1  fabian           rh.aparc.stats      right                        99468.9                           NaN\n    2  fabian    rh.aparc.a2009s.stats      right                        99494.9                           NaN\n    3  fabian  rh.aparc.DKTatlas.stats      right                        99494.9                           NaN\n    4  fabian           lh.aparc.stats       left                        98536.5                           NaN\n    5  fabian      lh.aparc.pial.stats       left                            NaN                      118601.0\n    6  fabian      rh.aparc.pial.stats      right                            NaN                      121260.0\n    7  fabian    lh.aparc.a2009s.stats       left                        98553.0                           NaN\n\nTests\n-----\n\n.. code:: sh\n\n    pip3 install --user pipenv\n    git clone https://github.com/fphammerle/freesurfer-stats.git\n    cd freesurfer-stats\n    pipenv sync --dev\n    pipenv run pylint freesurfer_stats\n    pipenv run pytest\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fphammerle/freesurfer-stats", "keywords": "anatomy,aparc,area,brain,cortex,dataframe,freesurfer,mris_anatomical_stats,neuroimaging,pandas,parcellation,reader,statistics,surface,volume", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "freesurfer-stats", "package_url": "https://pypi.org/project/freesurfer-stats/", "platform": "", "project_url": "https://pypi.org/project/freesurfer-stats/", "project_urls": {"Homepage": "https://github.com/fphammerle/freesurfer-stats"}, "release_url": "https://pypi.org/project/freesurfer-stats/1.1.1/", "requires_dist": ["pandas (<2,>=0.21)"], "requires_python": "", "summary": "Python Library to Read FreeSurfer's cortical parcellation anatomical statistics", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/fphammerle/freesurfer-stats\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/fphammerle/freesurfer-stats.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/237a9f6807f6f75797b86cf62c5b26b3ed0d1d45/68747470733a2f2f7472617669732d63692e6f72672f667068616d6d65726c652f667265657375726665722d73746174732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/fphammerle/freesurfer-stats?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/fphammerle/freesurfer-stats/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8158559b2d65b003329505d06b9181197b2ce406/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f667068616d6d65726c652f667265657375726665722d73746174732f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/freesurfer-stats/#history\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/freesurfer-stats.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/017f9fc5dd082ca6a999616ec70c8823b29c437f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f667265657375726665722d73746174732e737667\"></a>\n<a href=\"https://pypi.org/project/freesurfer-stats/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/freesurfer-stats.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b11915adc3064d4df15421bc49513843697896b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f667265657375726665722d73746174732e737667\"></a>\n<a href=\"https://zenodo.org/badge/latestdoi/194054168\" rel=\"nofollow\"><img alt=\"https://zenodo.org/badge/194054168.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b7e3e35e3f566b1ead2b8ab43accc981fbc56262/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3139343035343136382e737667\"></a>\n<p>Python Library to Read FreeSurfer\u2019s Cortical Parcellation Anatomical Statistics\n<cite>subject/stats/[rl]h.aparc.*.stats</cite></p>\n<p>Freesurfer <a href=\"https://surfer.nmr.mgh.harvard.edu/\" rel=\"nofollow\">https://surfer.nmr.mgh.harvard.edu/</a></p>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>pip3 install --user freesurfer-stats\n</pre>\n<p>Releases follow the <cite>semantic versioning &lt;https://semver.org/&gt;</cite> scheme.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">freesurfer_stats</span> <span class=\"kn\">import</span> <span class=\"n\">CorticalParcellationStats</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">stats</span> <span class=\"o\">=</span> <span class=\"n\">CorticalParcellationStats</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"s1\">'tests/subjects/fabian/stats/lh.aparc.DKTatlas.stats'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">[</span><span class=\"s1\">'subjectname'</span><span class=\"p\">]</span>\n<span class=\"s1\">'fabian'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">[</span><span class=\"s1\">'CreationTime'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">()</span>\n<span class=\"s1\">'2019-05-09T21:05:54+00:00'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">[</span><span class=\"s1\">'cvs_version'</span><span class=\"p\">]</span>\n<span class=\"s1\">'Id: mris_anatomical_stats.c,v 1.79 2016/03/14 15:15:34 greve Exp'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">[</span><span class=\"s1\">'cmdline'</span><span class=\"p\">][:</span><span class=\"mi\">64</span><span class=\"p\">]</span>\n<span class=\"s1\">'mris_anatomical_stats -th3 -mgz -cortex ../label/lh.cortex.label'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">hemisphere</span>\n<span class=\"s1\">'left'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">whole_brain_measurements</span><span class=\"p\">[</span><span class=\"s1\">'estimated_total_intracranial_volume_mm^3'</span><span class=\"p\">]</span>\n<span class=\"mi\">0</span>    <span class=\"mf\">1.670487e+06</span>\n<span class=\"n\">Name</span><span class=\"p\">:</span> <span class=\"n\">estimated_total_intracranial_volume_mm</span><span class=\"o\">^</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">float64</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">whole_brain_measurements</span><span class=\"p\">[</span><span class=\"s1\">'white_surface_total_area_mm^2'</span><span class=\"p\">]</span>\n<span class=\"mi\">0</span>    <span class=\"mi\">98553</span>\n<span class=\"n\">Name</span><span class=\"p\">:</span> <span class=\"n\">white_surface_total_area_mm</span><span class=\"o\">^</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">int64</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">structural_measurements</span><span class=\"p\">[[</span><span class=\"s1\">'structure_name'</span><span class=\"p\">,</span> <span class=\"s1\">'surface_area_mm^2'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                                <span class=\"s1\">'gray_matter_volume_mm^3'</span><span class=\"p\">]]</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">()</span>\n            <span class=\"n\">structure_name</span>  <span class=\"n\">surface_area_mm</span><span class=\"o\">^</span><span class=\"mi\">2</span>  <span class=\"n\">gray_matter_volume_mm</span><span class=\"o\">^</span><span class=\"mi\">3</span>\n<span class=\"mi\">0</span>  <span class=\"n\">caudalanteriorcingulate</span>               <span class=\"mi\">1472</span>                     <span class=\"mi\">4258</span>\n<span class=\"mi\">1</span>      <span class=\"n\">caudalmiddlefrontal</span>               <span class=\"mi\">3039</span>                     <span class=\"mi\">8239</span>\n<span class=\"mi\">2</span>                   <span class=\"n\">cuneus</span>               <span class=\"mi\">2597</span>                     <span class=\"mi\">6722</span>\n<span class=\"mi\">3</span>               <span class=\"n\">entorhinal</span>                <span class=\"mi\">499</span>                     <span class=\"mi\">2379</span>\n<span class=\"mi\">4</span>                 <span class=\"n\">fusiform</span>               <span class=\"mi\">3079</span>                     <span class=\"mi\">9064</span>\n</pre>\n<div id=\"load-multiple-stats-files\">\n<h3>Load Multiple Stats Files</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">glob</span><span class=\"o\">,</span> <span class=\"nn\">pandas</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">freesurfer_stats</span> <span class=\"kn\">import</span> <span class=\"n\">CorticalParcellationStats</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">load_whole_brain_measurements</span><span class=\"p\">(</span><span class=\"n\">stats_path</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"n\">stats</span> <span class=\"o\">=</span> <span class=\"n\">CorticalParcellationStats</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">stats_path</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>     <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">whole_brain_measurements</span><span class=\"p\">[</span><span class=\"s1\">'subject'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">[</span><span class=\"s1\">'subjectname'</span><span class=\"p\">]</span>\n<span class=\"o\">...</span>     <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">whole_brain_measurements</span><span class=\"p\">[</span><span class=\"s1\">'source_basename'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">stats_path</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>     <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">whole_brain_measurements</span><span class=\"p\">[</span><span class=\"s1\">'hemisphere'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">hemisphere</span>\n<span class=\"o\">...</span>     <span class=\"k\">return</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">whole_brain_measurements</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">whole_brain_measurements</span> <span class=\"o\">=</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">concat</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">load_whole_brain_measurements</span><span class=\"p\">,</span> <span class=\"n\">glob</span><span class=\"o\">.</span><span class=\"n\">glob</span><span class=\"p\">(</span><span class=\"s1\">'tests/subjects/fabian/stats/*h.aparc*.stats'</span><span class=\"p\">)),</span>\n<span class=\"o\">...</span>     <span class=\"n\">sort</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">whole_brain_measurements</span><span class=\"o\">.</span><span class=\"n\">reset_index</span><span class=\"p\">(</span><span class=\"n\">drop</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">whole_brain_measurements</span><span class=\"p\">[[</span><span class=\"s1\">'subject'</span><span class=\"p\">,</span> <span class=\"s1\">'source_basename'</span><span class=\"p\">,</span> <span class=\"s1\">'hemisphere'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                           <span class=\"s1\">'white_surface_total_area_mm^2'</span><span class=\"p\">,</span> <span class=\"s1\">'pial_surface_total_area_mm^2'</span><span class=\"p\">]]</span>\n  <span class=\"n\">subject</span>          <span class=\"n\">source_basename</span> <span class=\"n\">hemisphere</span>  <span class=\"n\">white_surface_total_area_mm</span><span class=\"o\">^</span><span class=\"mi\">2</span>  <span class=\"n\">pial_surface_total_area_mm</span><span class=\"o\">^</span><span class=\"mi\">2</span>\n<span class=\"mi\">0</span>  <span class=\"n\">fabian</span>  <span class=\"n\">lh</span><span class=\"o\">.</span><span class=\"n\">aparc</span><span class=\"o\">.</span><span class=\"n\">DKTatlas</span><span class=\"o\">.</span><span class=\"n\">stats</span>       <span class=\"n\">left</span>                        <span class=\"mf\">98553.0</span>                           <span class=\"n\">NaN</span>\n<span class=\"mi\">1</span>  <span class=\"n\">fabian</span>           <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">aparc</span><span class=\"o\">.</span><span class=\"n\">stats</span>      <span class=\"n\">right</span>                        <span class=\"mf\">99468.9</span>                           <span class=\"n\">NaN</span>\n<span class=\"mi\">2</span>  <span class=\"n\">fabian</span>    <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">aparc</span><span class=\"o\">.</span><span class=\"n\">a2009s</span><span class=\"o\">.</span><span class=\"n\">stats</span>      <span class=\"n\">right</span>                        <span class=\"mf\">99494.9</span>                           <span class=\"n\">NaN</span>\n<span class=\"mi\">3</span>  <span class=\"n\">fabian</span>  <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">aparc</span><span class=\"o\">.</span><span class=\"n\">DKTatlas</span><span class=\"o\">.</span><span class=\"n\">stats</span>      <span class=\"n\">right</span>                        <span class=\"mf\">99494.9</span>                           <span class=\"n\">NaN</span>\n<span class=\"mi\">4</span>  <span class=\"n\">fabian</span>           <span class=\"n\">lh</span><span class=\"o\">.</span><span class=\"n\">aparc</span><span class=\"o\">.</span><span class=\"n\">stats</span>       <span class=\"n\">left</span>                        <span class=\"mf\">98536.5</span>                           <span class=\"n\">NaN</span>\n<span class=\"mi\">5</span>  <span class=\"n\">fabian</span>      <span class=\"n\">lh</span><span class=\"o\">.</span><span class=\"n\">aparc</span><span class=\"o\">.</span><span class=\"n\">pial</span><span class=\"o\">.</span><span class=\"n\">stats</span>       <span class=\"n\">left</span>                            <span class=\"n\">NaN</span>                      <span class=\"mf\">118601.0</span>\n<span class=\"mi\">6</span>  <span class=\"n\">fabian</span>      <span class=\"n\">rh</span><span class=\"o\">.</span><span class=\"n\">aparc</span><span class=\"o\">.</span><span class=\"n\">pial</span><span class=\"o\">.</span><span class=\"n\">stats</span>      <span class=\"n\">right</span>                            <span class=\"n\">NaN</span>                      <span class=\"mf\">121260.0</span>\n<span class=\"mi\">7</span>  <span class=\"n\">fabian</span>    <span class=\"n\">lh</span><span class=\"o\">.</span><span class=\"n\">aparc</span><span class=\"o\">.</span><span class=\"n\">a2009s</span><span class=\"o\">.</span><span class=\"n\">stats</span>       <span class=\"n\">left</span>                        <span class=\"mf\">98553.0</span>                           <span class=\"n\">NaN</span>\n</pre>\n</div>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<pre>pip3 install --user pipenv\ngit clone https://github.com/fphammerle/freesurfer-stats.git\n<span class=\"nb\">cd</span> freesurfer-stats\npipenv sync --dev\npipenv run pylint freesurfer_stats\npipenv run pytest\n</pre>\n</div>\n\n          </div>"}, "last_serial": 7183903, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0855335b1846e999de4b312ab289a072", "sha256": "504d94ac321ac151a0f252c556317a2924409abaf1904791e7fb0dba7741d31f"}, "downloads": -1, "filename": "freesurfer_stats-1.0.0-py3-none-any.whl", "has_sig": true, "md5_digest": "0855335b1846e999de4b312ab289a072", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7520, "upload_time": "2019-06-27T08:33:02", "upload_time_iso_8601": "2019-06-27T08:33:02.837015Z", "url": "https://files.pythonhosted.org/packages/fb/06/77efcb9901f51ddba9b564cf121bce910e4ad3db097c93a4a6d4b72a622b/freesurfer_stats-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "533c613ee686bbd908e8b9f988f4a63d", "sha256": "285d7247b39ea1d7dbc566746d2016432b97dad031aa6c28b2181775177e3a76"}, "downloads": -1, "filename": "freesurfer-stats-1.0.0.tar.gz", "has_sig": true, "md5_digest": "533c613ee686bbd908e8b9f988f4a63d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26434, "upload_time": "2019-06-27T08:33:07", "upload_time_iso_8601": "2019-06-27T08:33:07.475586Z", "url": "https://files.pythonhosted.org/packages/ce/0e/1e65e066f898c86c9d51a88a9d243d530ab9decf4784d176c55edfe9f35d/freesurfer-stats-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "a12a40ecadfabf93ab16ee2e2df13537", "sha256": "cb0d9ef36bc4366bb2735e94d9b80543fa841e562e34b1b0f62ea4179607b9c0"}, "downloads": -1, "filename": "freesurfer_stats-1.1.0-py3-none-any.whl", "has_sig": true, "md5_digest": "a12a40ecadfabf93ab16ee2e2df13537", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17997, "upload_time": "2020-05-06T16:24:22", "upload_time_iso_8601": "2020-05-06T16:24:22.687751Z", "url": "https://files.pythonhosted.org/packages/c2/33/73a88be5ea52707b8df82b76fc66895620c47fc2d779911f7df64ab74b37/freesurfer_stats-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "776679384194217ac0043ceeb0f82e3e", "sha256": "238b9e447351d244193bc815f9a20f110e46b7081dc45748b11dbfbdc8df8afc"}, "downloads": -1, "filename": "freesurfer-stats-1.1.0.tar.gz", "has_sig": true, "md5_digest": "776679384194217ac0043ceeb0f82e3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40594, "upload_time": "2020-05-06T16:24:27", "upload_time_iso_8601": "2020-05-06T16:24:27.653334Z", "url": "https://files.pythonhosted.org/packages/f9/e0/738636eb1d04ef580ed817417c12bd0a5f3f79890a60d0b63facc8de0a3d/freesurfer-stats-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "5bd6c8aa57f62c2ed275986e8f998834", "sha256": "ea0f64ba5bb23b79160e6d7a140fde5e7b078dd8269a30805fadd8a48416198c"}, "downloads": -1, "filename": "freesurfer_stats-1.1.1-py3-none-any.whl", "has_sig": true, "md5_digest": "5bd6c8aa57f62c2ed275986e8f998834", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18205, "upload_time": "2020-05-06T22:22:05", "upload_time_iso_8601": "2020-05-06T22:22:05.571660Z", "url": "https://files.pythonhosted.org/packages/1e/94/75e7aa75408dd7bc805af51803b512592c9d3350710bf460f7ff56515680/freesurfer_stats-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd7f9d558251889437619e0fa272149f", "sha256": "5e87e703bbf7e6ad161d292f31ce437438a572abb76cd03664294b91334cfe0f"}, "downloads": -1, "filename": "freesurfer-stats-1.1.1.tar.gz", "has_sig": true, "md5_digest": "bd7f9d558251889437619e0fa272149f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69862, "upload_time": "2020-05-06T22:22:09", "upload_time_iso_8601": "2020-05-06T22:22:09.810755Z", "url": "https://files.pythonhosted.org/packages/90/28/c66a1eb27d4d02965a27d6cc478dfa71604a10429b432e26556701921be4/freesurfer-stats-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5bd6c8aa57f62c2ed275986e8f998834", "sha256": "ea0f64ba5bb23b79160e6d7a140fde5e7b078dd8269a30805fadd8a48416198c"}, "downloads": -1, "filename": "freesurfer_stats-1.1.1-py3-none-any.whl", "has_sig": true, "md5_digest": "5bd6c8aa57f62c2ed275986e8f998834", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18205, "upload_time": "2020-05-06T22:22:05", "upload_time_iso_8601": "2020-05-06T22:22:05.571660Z", "url": "https://files.pythonhosted.org/packages/1e/94/75e7aa75408dd7bc805af51803b512592c9d3350710bf460f7ff56515680/freesurfer_stats-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd7f9d558251889437619e0fa272149f", "sha256": "5e87e703bbf7e6ad161d292f31ce437438a572abb76cd03664294b91334cfe0f"}, "downloads": -1, "filename": "freesurfer-stats-1.1.1.tar.gz", "has_sig": true, "md5_digest": "bd7f9d558251889437619e0fa272149f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69862, "upload_time": "2020-05-06T22:22:09", "upload_time_iso_8601": "2020-05-06T22:22:09.810755Z", "url": "https://files.pythonhosted.org/packages/90/28/c66a1eb27d4d02965a27d6cc478dfa71604a10429b432e26556701921be4/freesurfer-stats-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:27 2020"}