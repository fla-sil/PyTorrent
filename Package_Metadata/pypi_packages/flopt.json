{"info": {"author": "nariaki tateiwa", "author_email": "nariaki3551@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7"], "description": "# flopt\n\nA python Non-Linear Programming API with Heuristic approach.\n\n<br>\n\n## Install\n\n```\ngit clone https://github.com/flab-coder/flopt.git\n```\n\n<br>\n\n## Formulatable problems in flopt\n\n- Non-Linear problem (has no constrainets)\n\n  ```\n  minimize  2*(3*a+b)*c**2 + 3\n  s.t       0 <= a <= 1\n            1 <= b <= 2\n            1 <= c <= 3\n  ```\n\n- BlackBox problem\n\n  ```\n  minimize  simulator(a, b, c)\n  s.t       0 <= a <= 1\n            1 <= b <= 2\n            1 <= c <= 3\n  ```\n\n- Finding the best permutation problem ( including TSP)\n\n- Satisfiability problem (including MAX-SAT)\n\n<br>\n\n## Heuristic Algorithms\n\n- Random Search\n- 2-Opt\n- Swarm Intelligence Search\n- Other applications\n\n<br>\n\n## Simple Example\n\nYou  can write codes like PuLP application.\n\n```python\nfrom flopt import Variable, Problem, Solver\n\n# Variables\na = Variable('a', lowBound=0, upBound=1, cat='Integer')\nb = Variable('b', lowBound=1, upBound=2, cat='Continuous')\nc = Variable('c', lowBound=1, upBound=3, cat='Continuous')\n\n# Problem\nprob = Problem()\nprob += 2*(3*a+b)*c**2+3   # set the objective function\n\n# Solver\nsolver = Solver(algo='RandomSearch')  # select the heuristic algorithm\nsolver.setParams(n_trial=1000)  # setting of the hyper parameters\nprob.solve(solver, msg=True)    # run solver to solve the problem\n\n# display the result, incumbent solution\nprint('obj value', prob.getObjectiveValue())\nprint('a', a.value())\nprint('b', b.value())\nprint('c', c.value())\n```\n\n<br>\n\nIn addition, you can represent any objective function by *CustomObject*\n\n```python\nfrom flopt import CustomObject\n\nfrom math import sin, cos\ndef user_func(a, b, c):\n    return (0.7*a + 0.3*cos(b)**2 + 0.1*sin(c))*abs(c)\n\ncustom_obj = CustomObject(func=user_func, variables=[a, b, c])\n\nprob = Problem(name='CustomObject')\nprob += custom_obj\n```\n\n<br>\n\nIn the case you solve TSP, *Permutation Variable* is useful.\n\n```python\n# Variables\nperm = Variable('perm', lowBound=0, upBound=N-1, cat='Permutation')\n\n# Object\ndef tsp_dist(perm):\n    distance = 0\n    for head, tail in zip(perm, perm[1:]+[perm[0]]):\n        distance += D[head][tail]  # D is the distance matrix\n    return distance\ntsp_obj = CustomObject(func=tsp_dist, variables=[perm])\n\n# Problem\nprob = Problem(name='TSP')\nprob += tsp_obj\n```\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://flopt.readthedocs.io/en/latest/index.html", "keywords": "optimization nonliear search heuristics algorithm", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "flopt", "package_url": "https://pypi.org/project/flopt/", "platform": "", "project_url": "https://pypi.org/project/flopt/", "project_urls": {"Homepage": "https://flopt.readthedocs.io/en/latest/index.html"}, "release_url": "https://pypi.org/project/flopt/0.1.1.2/", "requires_dist": ["numpy", "matplotlib", "pulp", "optuna", "hyperopt", "sphinx", "sphinx-autobuild", "sphinx-rtd-theme", "recommonmark", "pytest"], "requires_python": "", "summary": "A python Non-Linear Programming API with Heuristic approach", "version": "0.1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>flopt</h1>\n<p>A python Non-Linear Programming API with Heuristic approach.</p>\n<br>\n<h2>Install</h2>\n<pre><code>git clone https://github.com/flab-coder/flopt.git\n</code></pre>\n<br>\n<h2>Formulatable problems in flopt</h2>\n<ul>\n<li>\n<p>Non-Linear problem (has no constrainets)</p>\n<pre><code>minimize  2*(3*a+b)*c**2 + 3\ns.t       0 &lt;= a &lt;= 1\n          1 &lt;= b &lt;= 2\n          1 &lt;= c &lt;= 3\n</code></pre>\n</li>\n<li>\n<p>BlackBox problem</p>\n<pre><code>minimize  simulator(a, b, c)\ns.t       0 &lt;= a &lt;= 1\n          1 &lt;= b &lt;= 2\n          1 &lt;= c &lt;= 3\n</code></pre>\n</li>\n<li>\n<p>Finding the best permutation problem ( including TSP)</p>\n</li>\n<li>\n<p>Satisfiability problem (including MAX-SAT)</p>\n</li>\n</ul>\n<br>\n<h2>Heuristic Algorithms</h2>\n<ul>\n<li>Random Search</li>\n<li>2-Opt</li>\n<li>Swarm Intelligence Search</li>\n<li>Other applications</li>\n</ul>\n<br>\n<h2>Simple Example</h2>\n<p>You  can write codes like PuLP application.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flopt</span> <span class=\"kn\">import</span> <span class=\"n\">Variable</span><span class=\"p\">,</span> <span class=\"n\">Problem</span><span class=\"p\">,</span> <span class=\"n\">Solver</span>\n\n<span class=\"c1\"># Variables</span>\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"n\">lowBound</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">upBound</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">cat</span><span class=\"o\">=</span><span class=\"s1\">'Integer'</span><span class=\"p\">)</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"s1\">'b'</span><span class=\"p\">,</span> <span class=\"n\">lowBound</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">upBound</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">cat</span><span class=\"o\">=</span><span class=\"s1\">'Continuous'</span><span class=\"p\">)</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"s1\">'c'</span><span class=\"p\">,</span> <span class=\"n\">lowBound</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">upBound</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">cat</span><span class=\"o\">=</span><span class=\"s1\">'Continuous'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Problem</span>\n<span class=\"n\">prob</span> <span class=\"o\">=</span> <span class=\"n\">Problem</span><span class=\"p\">()</span>\n<span class=\"n\">prob</span> <span class=\"o\">+=</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"n\">a</span><span class=\"o\">+</span><span class=\"n\">b</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"n\">c</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"o\">+</span><span class=\"mi\">3</span>   <span class=\"c1\"># set the objective function</span>\n\n<span class=\"c1\"># Solver</span>\n<span class=\"n\">solver</span> <span class=\"o\">=</span> <span class=\"n\">Solver</span><span class=\"p\">(</span><span class=\"n\">algo</span><span class=\"o\">=</span><span class=\"s1\">'RandomSearch'</span><span class=\"p\">)</span>  <span class=\"c1\"># select the heuristic algorithm</span>\n<span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">setParams</span><span class=\"p\">(</span><span class=\"n\">n_trial</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>  <span class=\"c1\"># setting of the hyper parameters</span>\n<span class=\"n\">prob</span><span class=\"o\">.</span><span class=\"n\">solve</span><span class=\"p\">(</span><span class=\"n\">solver</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>    <span class=\"c1\"># run solver to solve the problem</span>\n\n<span class=\"c1\"># display the result, incumbent solution</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'obj value'</span><span class=\"p\">,</span> <span class=\"n\">prob</span><span class=\"o\">.</span><span class=\"n\">getObjectiveValue</span><span class=\"p\">())</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">())</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'b'</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">())</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'c'</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">())</span>\n</pre>\n<br>\n<p>In addition, you can represent any objective function by <em>CustomObject</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flopt</span> <span class=\"kn\">import</span> <span class=\"n\">CustomObject</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">math</span> <span class=\"kn\">import</span> <span class=\"n\">sin</span><span class=\"p\">,</span> <span class=\"n\">cos</span>\n<span class=\"k\">def</span> <span class=\"nf\">user_func</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"mf\">0.7</span><span class=\"o\">*</span><span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"mf\">0.3</span><span class=\"o\">*</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"mf\">0.1</span><span class=\"o\">*</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">))</span><span class=\"o\">*</span><span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n\n<span class=\"n\">custom_obj</span> <span class=\"o\">=</span> <span class=\"n\">CustomObject</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">user_func</span><span class=\"p\">,</span> <span class=\"n\">variables</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">])</span>\n\n<span class=\"n\">prob</span> <span class=\"o\">=</span> <span class=\"n\">Problem</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'CustomObject'</span><span class=\"p\">)</span>\n<span class=\"n\">prob</span> <span class=\"o\">+=</span> <span class=\"n\">custom_obj</span>\n</pre>\n<br>\n<p>In the case you solve TSP, <em>Permutation Variable</em> is useful.</p>\n<pre><span class=\"c1\"># Variables</span>\n<span class=\"n\">perm</span> <span class=\"o\">=</span> <span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"s1\">'perm'</span><span class=\"p\">,</span> <span class=\"n\">lowBound</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">upBound</span><span class=\"o\">=</span><span class=\"n\">N</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">cat</span><span class=\"o\">=</span><span class=\"s1\">'Permutation'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Object</span>\n<span class=\"k\">def</span> <span class=\"nf\">tsp_dist</span><span class=\"p\">(</span><span class=\"n\">perm</span><span class=\"p\">):</span>\n    <span class=\"n\">distance</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"k\">for</span> <span class=\"n\">head</span><span class=\"p\">,</span> <span class=\"n\">tail</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">perm</span><span class=\"p\">,</span> <span class=\"n\">perm</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]</span><span class=\"o\">+</span><span class=\"p\">[</span><span class=\"n\">perm</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]]):</span>\n        <span class=\"n\">distance</span> <span class=\"o\">+=</span> <span class=\"n\">D</span><span class=\"p\">[</span><span class=\"n\">head</span><span class=\"p\">][</span><span class=\"n\">tail</span><span class=\"p\">]</span>  <span class=\"c1\"># D is the distance matrix</span>\n    <span class=\"k\">return</span> <span class=\"n\">distance</span>\n<span class=\"n\">tsp_obj</span> <span class=\"o\">=</span> <span class=\"n\">CustomObject</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">tsp_dist</span><span class=\"p\">,</span> <span class=\"n\">variables</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">perm</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Problem</span>\n<span class=\"n\">prob</span> <span class=\"o\">=</span> <span class=\"n\">Problem</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'TSP'</span><span class=\"p\">)</span>\n<span class=\"n\">prob</span> <span class=\"o\">+=</span> <span class=\"n\">tsp_obj</span>\n</pre>\n\n          </div>"}, "last_serial": 7137742, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "a798a39aebde74a011c8c83f4fa4adee", "sha256": "e411cc19121a26a6ccf3820a501594c70483036bf3e4fbc527aa2eeacb16203c"}, "downloads": -1, "filename": "flopt-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a798a39aebde74a011c8c83f4fa4adee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 40144, "upload_time": "2020-04-30T13:14:02", "upload_time_iso_8601": "2020-04-30T13:14:02.808892Z", "url": "https://files.pythonhosted.org/packages/7a/fd/ec63a830179ea7a0dcfd86671ca38e730fe5b2714ebf4f8d5dae025bc705/flopt-0.1.1-py3-none-any.whl", "yanked": false}], "0.1.1.1": [{"comment_text": "", "digests": {"md5": "9e471b5ddd1ff5a15a6471010cb26fd3", "sha256": "1cb159373d5041e475532179bceb889cb03ad3f8ef0cd96a40548700596dabff"}, "downloads": -1, "filename": "flopt-0.1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9e471b5ddd1ff5a15a6471010cb26fd3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 40167, "upload_time": "2020-04-30T13:24:50", "upload_time_iso_8601": "2020-04-30T13:24:50.750862Z", "url": "https://files.pythonhosted.org/packages/b3/24/28dd4f9f0e20e2660718589320efa43f7148ecb7c6b888a996ca4d8bf94c/flopt-0.1.1.1-py3-none-any.whl", "yanked": false}], "0.1.1.2": [{"comment_text": "", "digests": {"md5": "65a11b4bf981f79fe3b079547a7fb644", "sha256": "d5917a3a0be6a8c1dd4e0152d71ecc163d3960731f08879ad027d1bca5c1bdc5"}, "downloads": -1, "filename": "flopt-0.1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "65a11b4bf981f79fe3b079547a7fb644", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2883490, "upload_time": "2020-04-30T14:19:19", "upload_time_iso_8601": "2020-04-30T14:19:19.446604Z", "url": "https://files.pythonhosted.org/packages/03/5f/e2431bbf646cedc8e523bbe3a48849ec2d0d3152d3e22005fd55733ad340/flopt-0.1.1.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "65a11b4bf981f79fe3b079547a7fb644", "sha256": "d5917a3a0be6a8c1dd4e0152d71ecc163d3960731f08879ad027d1bca5c1bdc5"}, "downloads": -1, "filename": "flopt-0.1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "65a11b4bf981f79fe3b079547a7fb644", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2883490, "upload_time": "2020-04-30T14:19:19", "upload_time_iso_8601": "2020-04-30T14:19:19.446604Z", "url": "https://files.pythonhosted.org/packages/03/5f/e2431bbf646cedc8e523bbe3a48849ec2d0d3152d3e22005fd55733ad340/flopt-0.1.1.2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 01:01:46 2020"}