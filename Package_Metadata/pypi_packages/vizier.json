{"info": {"author": "Cameron Gorrie", "author_email": "sastraxi@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "==================================\n        Vizier: a python reporting library\n        ==================================\n        \n        Originally intended to be a fork of cairoplot to add new reporting functionality,\n        vizier has been completely re-written and re-imagined to provide a dead-easy\n        reporting and graphing alternative for python using cairo.\n        \n        Notable features include::\n        \n        * the creation and management of multi-page documents (\"books\"); and\n        * different types of plots (e.g. bar, line, scatter) on one graph\n        \n        Vizier was inspired by the fine work of the contributors and maintainers of\n        the CairoPlot project, who sadly have not had time to continue their work. See\n        `CairoPlot's project page on Launchpad <https://launchpad.net/cairoplot>`_.\n        \n        Note: libcairo >= 1.10.1 recommended, to fix a bug with multi-page PDF clipping.\n        https://bugs.freedesktop.org/show_bug.cgi?id=24691\n        \n        Installing on Windows\n        =====================\n        \n        Grab a recent version of GTK+, which includes Cairo. You can download an installer here:\n        http://sourceforge.net/projects/gtk-win/files/GTK%2B%20Runtime%20Environment/GTK%2B%202.22/\n        \n        Now, get vizier. In the root vizier directory, run::\n        \n            python setup.py install\n        \n        You should now be able to run one of the examples. Try::\n        \n            python examples/test1.py\n        \n        If abc.pdf is created and looks relatively sane, you're ready to go.\n        \n        Quick Example\n        =============\n        \n        A multi-page PDF could be created as follows::\n        \n            #!/usr/bin/env python\n        \n            from vizier.book import PDFBook, SimplePage, GridPage, Inch, TextSpace, LEFT, BOTTOM\n            from vizier.plot import BarGraph, Graph, BarPlot, LinePlot\n            book = PDFBook(units=Inch)\n        \n            bar_graph = BarGraph([1, 2, 3, 4, 5, 6, 7])\n            page = SimplePage(width=11, height=8.5, margin=0.5, spacing=0.5)\n            page[0] = bar_graph\n            book.append(page)\n            \n            complex_graph = ContinuousPlot(legend=True, x_grid=(0, 0.2), y_grid=(0, 0.5))\n            complex_graph.add_series(\n        \n                # each tuple in the data is (x, y, y-error)\n                LineSeries(\"Raw Observations\", [(0, 0.03, 0.016), (1, 0.18, 0.034), (2, 0.176, 0.016)]),\n        \n                # each tuple in the data is (x[start, end], y, y-error)\n                AreaSeries(\"Other Things\", [((-0.5, 0.5), 1.03, 0.016), ((0.5, 1.5), 1.21, 0.034), ((1.5, 2.5), 1.386, 0.034)]),\n                \n                # show a threshold at y=4.25\n                Threshold(\"Warning\", \"Imminent Catastrophic Destruction\", 4.25)\n            )\n            \n            vlayout = VerticalLayout(0.1, 0.6) # splits a space vertically into 3.\n            vlayout[0] = TextSpace(\"This layout\", halign=LEFT)\n            vlayout[1] = TextSpace(\"is split up into 3\")\n            vlayout[2] = TextSpace(\"non-uniformly!\", valign=BOTTOM)\n            \n            page = GridPage(2, 2, width=11, height=8.5)\n            page[0, 0] = TextSpace(\"This happens to be a graph.\") \n            page[0, 1] = complex_graph\n            page[1, 0] = complex_graph\n            page[1, 1] = vlayout\n            book.append(page)\n            \n            fp = open(\"abc.pdf\", 'wb')\n            book.compile(fp)    \n            fp.close()", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sastraxi/vizier", "keywords": null, "license": "GNU LGPL 2.1", "maintainer": null, "maintainer_email": null, "name": "vizier", "package_url": "https://pypi.org/project/vizier/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/vizier/", "project_urls": {"Homepage": "https://github.com/sastraxi/vizier"}, "release_url": "https://pypi.org/project/vizier/0.1dev/", "requires_dist": null, "requires_python": null, "summary": "UNKNOWN", "version": "0.1dev", "yanked": false, "html_description": "<div class=\"project-description\">\n            ==================================<br>        Vizier: a python reporting library<br>        ==================================<br>        <br>        Originally intended to be a fork of cairoplot to add new reporting functionality,<br>        vizier has been completely re-written and re-imagined to provide a dead-easy<br>        reporting and graphing alternative for python using cairo.<br>        <br>        Notable features include::<br>        <br>        * the creation and management of multi-page documents (\"books\"); and<br>        * different types of plots (e.g. bar, line, scatter) on one graph<br>        <br>        Vizier was inspired by the fine work of the contributors and maintainers of<br>        the CairoPlot project, who sadly have not had time to continue their work. See<br>        `CairoPlot's project page on Launchpad &lt;https://launchpad.net/cairoplot&gt;`_.<br>        <br>        Note: libcairo &gt;= 1.10.1 recommended, to fix a bug with multi-page PDF clipping.<br>        https://bugs.freedesktop.org/show_bug.cgi?id=24691<br>        <br>        Installing on Windows<br>        =====================<br>        <br>        Grab a recent version of GTK+, which includes Cairo. You can download an installer here:<br>        http://sourceforge.net/projects/gtk-win/files/GTK%2B%20Runtime%20Environment/GTK%2B%202.22/<br>        <br>        Now, get vizier. In the root vizier directory, run::<br>        <br>            python setup.py install<br>        <br>        You should now be able to run one of the examples. Try::<br>        <br>            python examples/test1.py<br>        <br>        If abc.pdf is created and looks relatively sane, you're ready to go.<br>        <br>        Quick Example<br>        =============<br>        <br>        A multi-page PDF could be created as follows::<br>        <br>            #!/usr/bin/env python<br>        <br>            from vizier.book import PDFBook, SimplePage, GridPage, Inch, TextSpace, LEFT, BOTTOM<br>            from vizier.plot import BarGraph, Graph, BarPlot, LinePlot<br>            book = PDFBook(units=Inch)<br>        <br>            bar_graph = BarGraph([1, 2, 3, 4, 5, 6, 7])<br>            page = SimplePage(width=11, height=8.5, margin=0.5, spacing=0.5)<br>            page[0] = bar_graph<br>            book.append(page)<br>            <br>            complex_graph = ContinuousPlot(legend=True, x_grid=(0, 0.2), y_grid=(0, 0.5))<br>            complex_graph.add_series(<br>        <br>                # each tuple in the data is (x, y, y-error)<br>                LineSeries(\"Raw Observations\", [(0, 0.03, 0.016), (1, 0.18, 0.034), (2, 0.176, 0.016)]),<br>        <br>                # each tuple in the data is (x[start, end], y, y-error)<br>                AreaSeries(\"Other Things\", [((-0.5, 0.5), 1.03, 0.016), ((0.5, 1.5), 1.21, 0.034), ((1.5, 2.5), 1.386, 0.034)]),<br>                <br>                # show a threshold at y=4.25<br>                Threshold(\"Warning\", \"Imminent Catastrophic Destruction\", 4.25)<br>            )<br>            <br>            vlayout = VerticalLayout(0.1, 0.6) # splits a space vertically into 3.<br>            vlayout[0] = TextSpace(\"This layout\", halign=LEFT)<br>            vlayout[1] = TextSpace(\"is split up into 3\")<br>            vlayout[2] = TextSpace(\"non-uniformly!\", valign=BOTTOM)<br>            <br>            page = GridPage(2, 2, width=11, height=8.5)<br>            page[0, 0] = TextSpace(\"This happens to be a graph.\") <br>            page[0, 1] = complex_graph<br>            page[1, 0] = complex_graph<br>            page[1, 1] = vlayout<br>            book.append(page)<br>            <br>            fp = open(\"abc.pdf\", 'wb')<br>            book.compile(fp)    <br>            fp.close()\n          </div>"}, "last_serial": 801433, "releases": {"0.1dev": [{"comment_text": "", "digests": {"md5": "3d8c8443885985d113b4ada3085d3a8c", "sha256": "daa994782bf7f5b4548b424d75680a80069334332d0f191ba2c661e675a97522"}, "downloads": -1, "filename": "vizier-0.1dev.tar.gz", "has_sig": false, "md5_digest": "3d8c8443885985d113b4ada3085d3a8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18327, "upload_time": "2011-10-21T17:50:41", "upload_time_iso_8601": "2011-10-21T17:50:41.120221Z", "url": "https://files.pythonhosted.org/packages/0e/7a/cf2078af618cabcce4410e6d682c329122d24c68be9ac66114f3ca11c4e0/vizier-0.1dev.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3d8c8443885985d113b4ada3085d3a8c", "sha256": "daa994782bf7f5b4548b424d75680a80069334332d0f191ba2c661e675a97522"}, "downloads": -1, "filename": "vizier-0.1dev.tar.gz", "has_sig": false, "md5_digest": "3d8c8443885985d113b4ada3085d3a8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18327, "upload_time": "2011-10-21T17:50:41", "upload_time_iso_8601": "2011-10-21T17:50:41.120221Z", "url": "https://files.pythonhosted.org/packages/0e/7a/cf2078af618cabcce4410e6d682c329122d24c68be9ac66114f3ca11c4e0/vizier-0.1dev.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:35:03 2020"}