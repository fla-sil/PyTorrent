{"info": {"author": "Shubham Dalvi", "author_email": "shubham.dalvi97@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# \u2115\ud835\udd56\ud835\udd64\ud835\udd65\ud835\udd56\ud835\udd55\ud835\udd3d\ud835\udd56\ud835\udd65\ud835\udd54\ud835\udd59\n[![Build Status](https://travis-ci.org/saintlyzero/NestedFetch.svg?branch=master)](https://travis-ci.org/saintlyzero/NestedFetch)  ![GitHub](https://img.shields.io/github/license/saintlyzero/NestedFetch?color=light%20green) ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/nestedfetch?color=blue)\n\n## Outline\n\n1. [Overview](#overview)\n2. [Installation](#installation)\n3. [Usage](#usage)\n4. [Examples](#examples)\n    1. [Fetch Value](#fetch-data)\n    2. [Set Value](#set--update--data)\n    3. [Flatten Nested Lists](#flatten-nested-lists)\n5. [How to Contribute](#how-to-contribute)\n\n## Overview\n- **NestedFetch** provides syntactic sugar \ud83c\udf6c to deal with a nested python `dictionary` or a nested `list` \ud83d\udc0d\n- You can `get`, `set`, `update` and `flatten` values from a deeply nested dictionary or a list with a more concise, easier and a `KeyError`, `IndexError` free way \ud83d\ude0c\n\n```python\ndata = {\n        \"league\": \"Champions League\",\n        \"matches\": [\n            {\n                \"match_id\": \"match_1\",\n                \"goals\": [\n                {\n                    \"time\": 13,\n                    \"scorrer\": \"Lionel Messi\",\n                    \"assist\": \"Luis Suarez\"\n                },\n                {\n                    \"time\": 78,\n                    \"scorrer\": \"Luis Suarez\",\n                    \"assist\": \"Ivan Rakitic\"\n                }]\n            },\n            {\n                \"match_id\": \"match_2\",\n                \"goals\": [\n                {\n                    \"time\": 36,\n                    \"scorrer\": \"C. Ronaldo\",\n                    \"assist\": \"Luka Modric\"\n                }]\n            }]\n        }\n```\n\n| ![No Face](https://github.com/saintlyzero/NestedFetch/raw/development/asset/no.jpg) | ![normal code](https://github.com/saintlyzero/NestedFetch/raw/master/asset/normal.png) |\n|--|--|\n| ![Yes Face](https://github.com/saintlyzero/NestedFetch/raw/master/asset/yes.jpg) |![NestedFetch code](https://github.com/saintlyzero/NestedFetch/raw/master/asset/nested_get.png)\n## Installation\n\n**NestedFetch** works with Python3. <br>You can directly install it via **pip**<br>\n\n```sh\n$ pip3 install nestedfetch\n```\n\n## Usage\n\nImport the methods from the package. \n\n```python3\nfrom nestedfetch import nested_get, nested_set\n```\n\nNo need to instantiate any object, just use the methods specifying valid parameters.\n\n## Examples\n\n### Fetch Data\n\n```python\nnested_get(data, keys, default=None, flatten=False)\n\n@Arguments\ndata : dict / list\nkeys => List of sequential keys leading to the desired value to fetch\ndefault => Specifies the default value to be returned if any specified key is not present. If not specified, it will be None\nflatten => Specifies whether to flatten the returned value\n\n@Return\nReturns the fetched value if it exists, or returns specified default value\n```\n\n- **Fetch** simple nested data :\n\n```python\ndata = {\n            'name': 'Jesse Pinkman',\n            'details': {\n                'address':{\n                    'city': 'Albuquerque'\n                }\n            }\n        }\nres = nested_get(data,['details','address','city'])\n# res = Albuquerque\n```\n\n- **Fetch** simple nested data with `default` value:\n\n```python\ndata = {\n            'name': 'Jesse Pinkman',\n            'details': {\n                'address':{\n                    'city': 'Albuquerque'\n                }\n            }\n        }\nres = nested_get(data,['details','address','state'], default=-1)\n# res = -1\n```\n\n- **Fetch** nested data:\n\n```python\ndata = {\n            'name': 'Jesse Pinkman',\n            'details': {\n                'address':[{\n                    'city': 'Albuquerque'\n                },{\n                    'city': 'El Paso'\n                }]\n            }\n        }\nres = nested_get(data,['details','address','city'])\n# res = ['Albuquerque','El Paso']\n```\n\n- **Fetch** nested data with `default` value:\n\n```python\ndata = {\n            'name': 'Jesse Pinkman',\n            'details': {\n                'address':[{\n                    'city': 'Albuquerque'\n                },{\n                    'city': 'El Paso'\n                },{\n                    'state': 'New Mexico'\n                }]\n            }\n        }\nres = nested_get(data,['details','address','city'], default= None)\n# res = ['Albuquerque','El Paso', None]\n```\n\n- **Fetch** nested data by specifing `index`:\n\n```python\ndata = {\n            'name': 'Walter White',\n            'details': {\n                'address':[{\n                    'city': 'Albuquerque'\n                },{\n                    'city': 'El Paso'\n                }]\n            }\n        }\nres = nested_get(data,['details','address','city', 0])\n# res = Albuquerque\n```\n\n- **Fetch** nested data without `flatten`:\n\n```python\ndata = {\n        \"league\": \"Champions League\",\n        \"matches\": [\n            {\n                \"match_id\": \"match_1\",\n                \"goals\": [\n                {\n                    \"time\": 13,\n                    \"scorrer\": \"Lionel Messi\",\n                    \"assist\": \"Luis Suarez\"\n                },\n                {\n                    \"time\": 78,\n                    \"scorrer\": \"Luis Suarez\",\n                    \"assist\": \"Ivan Rakitic\"\n                }]\n            },\n            {\n                \"match_id\": \"match_2\",\n                \"goals\": [\n                {\n                    \"time\": 36,\n                    \"scorrer\": \"C. Ronaldo\",\n                    \"assist\": \"Luka Modric\"\n                }]\n            }]\n        }\nres = nested_get(data,['matches','goals','scorrer'])\n# res = [['Lionel Messi', 'Luis Suarez'], ['C. Ronaldo']]\n```\n\n- **Fetch** nested data with `flatten`:\n\n```python\ndata = {\n        \"league\": \"Champions League\",\n        \"matches\": [\n            {\n                \"match_id\": \"match_1\",\n                \"goals\": [\n                {\n                    \"time\": 13,\n                    \"scorrer\": \"Lionel Messi\",\n                    \"assist\": \"Luis Suarez\"\n                },\n                {\n                    \"time\": 78,\n                    \"scorrer\": \"Luis Suarez\",\n                    \"assist\": \"Ivan Rakitic\"\n                }]\n            },\n            {\n                \"match_id\": \"match_2\",\n                \"goals\": [\n                {\n                    \"time\": 36,\n                    \"scorrer\": \"C. Ronaldo\",\n                    \"assist\": \"Luka Modric\"\n                }]\n            }]\n        }\nres = nested_get(data,['matches','goals','scorrer'], flatten=True)\n# res = ['Lionel Messi', 'Luis Suarez', 'C. Ronaldo']\n```\n\n### Set / Update  Data\n\n```python\nnested_set(data, keys, value, create_missing=False):\n\n@Arguments\ndata => dict / list\nkeys => List of sequential keys leading to the desired value to set / update\nvalue => Specifies the value to set / update\ncreate_missing => Specifies whether to create new key while building up if the specified key does not exists\n\n@Return\nReturns the number of values updated\n```\n\n\n- **Update** value of simple nested data :\n\n```python\ndata = {\n            'name': 'Jesse Pinkman',\n            'details': {\n                'address':{\n                    'city': 'Albuquerque'\n                }\n            }\n        }\nres = nested_set(data,['details','address','city'], \"Denver\")\n# res = 1\n\n# data = {\n#             'name': 'Jesse Pinkman',\n#             'details': {\n#                 'address':{\n#                     'city': 'Denver'\n#                 }\n#             }\n#         }\n\n```\n\n- **Update** nested data:\n\n```python\ndata = {\n            'name': 'Jesse Pinkman',\n            'details': {\n                'address':[{\n                    'city': 'Albuquerque'\n                },{\n                    'city': 'El Paso'\n                }]\n            }\n        }\nres = nested_set(data,['details','address','city'], \"Denver\")\n# res = 2\n\n# data = {\n#     'name': 'Jesse Pinkman',\n#     'details': {\n#         'address':[{\n#             'city': 'Denver'\n#         },{\n#             'city': 'Denver'\n#         }]\n#     }\n# }\n```\n\n- **Update** nested data with `index`:\n\n```python\ndata = {\n            'name': 'Jesse Pinkman',\n            'details': {\n                'address':[{\n                    'city': 'Albuquerque'\n                },{\n                    'city': 'El Paso'\n                }]\n            }\n        }\nres = nested_set(data,['details','address',0,'city'], \"Denver\")\n# res = 1\n\n# data = {\n#     'name': 'Jesse Pinkman',\n#     'details': {\n#         'address':[{\n#             'city': 'Denver'\n#         },{\n#             'city': 'El Paso'\n#         }]\n#     }\n# }\n```\n\n- **Set** nested data with `create_missing` :\n\n```python\ndata = {\n            'name': 'Jesse Pinkman',\n            'details': {\n                'address':{\n                    'city': 'Albuquerque'\n                }\n            }\n        }\nres = nested_set(data,['details','address','state'], \"New Mexico\", create_missing=True)\n# res = 1\n\n# data = {\n#             'name': 'Jesse Pinkman',\n#             'details': {\n#                 'address':{\n#                     'city': 'Denver',\n#                     'state': 'New Mexico'\n#                 }\n#             }\n#         }\n\n```\n\n### Flatten Nested Lists\n\n```python\nflatten_data(data):\n\n@Arguments\ndata => list of list\n\n@Return\nReturns the flattened list\n```\n\n- **Flatten** List of Lists\n\n```python\ndata = [[\n    ['This','is'],\n    ['flattened', 'data']\n]]\n\nres = flatten_data(data)\n# res = ['This','is','flattened','data']\n```\n\n## How to contribute\n\nContributions are welcome \ud83d\ude07.<br>Feel free to submit a patch, report a bug \ud83d\udc1b or ask for a feature \ud83d\udc23. <br>Please open an issue first to encourage and keep track of potential discussions \ud83d\udcdd.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/saintlyzero/NestedFetch/archive/v_012.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/saintlyzero/NestedFetch", "keywords": "dict,nested dictionary,nested list,list,flatten,scalpl,nestedfetch,addict,box,Nested Fetch", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "nestedfetch", "package_url": "https://pypi.org/project/nestedfetch/", "platform": "", "project_url": "https://pypi.org/project/nestedfetch/", "project_urls": {"Download": "https://github.com/saintlyzero/NestedFetch/archive/v_012.tar.gz", "Homepage": "https://github.com/saintlyzero/NestedFetch"}, "release_url": "https://pypi.org/project/nestedfetch/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "Syntactic sugar to GET, SET, UPDATE and FLATTEN values from nested dictionaries and nested lists.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>\u2115\ud835\udd56\ud835\udd64\ud835\udd65\ud835\udd56\ud835\udd55\ud835\udd3d\ud835\udd56\ud835\udd65\ud835\udd54\ud835\udd59</h1>\n<p><a href=\"https://travis-ci.org/saintlyzero/NestedFetch\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6a64719045d56733ee64ef5f05bc8e5495eb5b55/68747470733a2f2f7472617669732d63692e6f72672f7361696e746c797a65726f2f4e657374656446657463682e7376673f6272616e63683d6d6173746572\"></a>  <img alt=\"GitHub\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/669354f5788ba04bba9db0159d44a68f180613f3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f7361696e746c797a65726f2f4e657374656446657463683f636f6c6f723d6c69676874253230677265656e\"> <img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4bdac2164d459b1b2b97b293e30721cc5af5a147/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6e657374656466657463683f636f6c6f723d626c7565\"></p>\n<h2>Outline</h2>\n<ol>\n<li><a href=\"#overview\" rel=\"nofollow\">Overview</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#examples\" rel=\"nofollow\">Examples</a>\n<ol>\n<li><a href=\"#fetch-data\" rel=\"nofollow\">Fetch Value</a></li>\n<li><a href=\"#set--update--data\" rel=\"nofollow\">Set Value</a></li>\n<li><a href=\"#flatten-nested-lists\" rel=\"nofollow\">Flatten Nested Lists</a></li>\n</ol>\n</li>\n<li><a href=\"#how-to-contribute\" rel=\"nofollow\">How to Contribute</a></li>\n</ol>\n<h2>Overview</h2>\n<ul>\n<li><strong>NestedFetch</strong> provides syntactic sugar \ud83c\udf6c to deal with a nested python <code>dictionary</code> or a nested <code>list</code> \ud83d\udc0d</li>\n<li>You can <code>get</code>, <code>set</code>, <code>update</code> and <code>flatten</code> values from a deeply nested dictionary or a list with a more concise, easier and a <code>KeyError</code>, <code>IndexError</code> free way \ud83d\ude0c</li>\n</ul>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"league\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Champions League\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"matches\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">\"match_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"match_1\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"goals\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">\"time\"</span><span class=\"p\">:</span> <span class=\"mi\">13</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"scorrer\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Lionel Messi\"</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"assist\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Luis Suarez\"</span>\n                <span class=\"p\">},</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">\"time\"</span><span class=\"p\">:</span> <span class=\"mi\">78</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"scorrer\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Luis Suarez\"</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"assist\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Ivan Rakitic\"</span>\n                <span class=\"p\">}]</span>\n            <span class=\"p\">},</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">\"match_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"match_2\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"goals\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">\"time\"</span><span class=\"p\">:</span> <span class=\"mi\">36</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"scorrer\"</span><span class=\"p\">:</span> <span class=\"s2\">\"C. Ronaldo\"</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"assist\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Luka Modric\"</span>\n                <span class=\"p\">}]</span>\n            <span class=\"p\">}]</span>\n        <span class=\"p\">}</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th><img alt=\"No Face\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5f94b89c7fde8433409d24718ea24f0c7e9d5306/68747470733a2f2f6769746875622e636f6d2f7361696e746c797a65726f2f4e657374656446657463682f7261772f646576656c6f706d656e742f61737365742f6e6f2e6a7067\"></th>\n<th><img alt=\"normal code\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e5784ed27f2d5c6b5767f627f67696f37cd8fb97/68747470733a2f2f6769746875622e636f6d2f7361696e746c797a65726f2f4e657374656446657463682f7261772f6d61737465722f61737365742f6e6f726d616c2e706e67\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img alt=\"Yes Face\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5d658e5e8ddb86dc1b84999a9b30dead3e14ac30/68747470733a2f2f6769746875622e636f6d2f7361696e746c797a65726f2f4e657374656446657463682f7261772f6d61737465722f61737365742f7965732e6a7067\"></td>\n<td><img alt=\"NestedFetch code\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb6f6e02e2bc36d7e59dd0c814ae36a05d4f9cd3/68747470733a2f2f6769746875622e636f6d2f7361696e746c797a65726f2f4e657374656446657463682f7261772f6d61737465722f61737365742f6e65737465645f6765742e706e67\"></td>\n</tr></tbody></table>\n<h2>Installation</h2>\n<p><strong>NestedFetch</strong> works with Python3. <br>You can directly install it via <strong>pip</strong><br></p>\n<pre>$ pip3 install nestedfetch\n</pre>\n<h2>Usage</h2>\n<p>Import the methods from the package.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nestedfetch</span> <span class=\"kn\">import</span> <span class=\"n\">nested_get</span><span class=\"p\">,</span> <span class=\"n\">nested_set</span>\n</pre>\n<p>No need to instantiate any object, just use the methods specifying valid parameters.</p>\n<h2>Examples</h2>\n<h3>Fetch Data</h3>\n<pre><span class=\"n\">nested_get</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">keys</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">flatten</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@Arguments</span>\n<span class=\"n\">data</span> <span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">/</span> <span class=\"nb\">list</span>\n<span class=\"n\">keys</span> <span class=\"o\">=&gt;</span> <span class=\"n\">List</span> <span class=\"n\">of</span> <span class=\"n\">sequential</span> <span class=\"n\">keys</span> <span class=\"n\">leading</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">desired</span> <span class=\"n\">value</span> <span class=\"n\">to</span> <span class=\"n\">fetch</span>\n<span class=\"n\">default</span> <span class=\"o\">=&gt;</span> <span class=\"n\">Specifies</span> <span class=\"n\">the</span> <span class=\"n\">default</span> <span class=\"n\">value</span> <span class=\"n\">to</span> <span class=\"n\">be</span> <span class=\"n\">returned</span> <span class=\"k\">if</span> <span class=\"nb\">any</span> <span class=\"n\">specified</span> <span class=\"n\">key</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"n\">present</span><span class=\"o\">.</span> <span class=\"n\">If</span> <span class=\"ow\">not</span> <span class=\"n\">specified</span><span class=\"p\">,</span> <span class=\"n\">it</span> <span class=\"n\">will</span> <span class=\"n\">be</span> <span class=\"kc\">None</span>\n<span class=\"n\">flatten</span> <span class=\"o\">=&gt;</span> <span class=\"n\">Specifies</span> <span class=\"n\">whether</span> <span class=\"n\">to</span> <span class=\"n\">flatten</span> <span class=\"n\">the</span> <span class=\"n\">returned</span> <span class=\"n\">value</span>\n\n<span class=\"nd\">@Return</span>\n<span class=\"n\">Returns</span> <span class=\"n\">the</span> <span class=\"n\">fetched</span> <span class=\"n\">value</span> <span class=\"k\">if</span> <span class=\"n\">it</span> <span class=\"n\">exists</span><span class=\"p\">,</span> <span class=\"ow\">or</span> <span class=\"n\">returns</span> <span class=\"n\">specified</span> <span class=\"n\">default</span> <span class=\"n\">value</span>\n</pre>\n<ul>\n<li><strong>Fetch</strong> simple nested data :</li>\n</ul>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Jesse Pinkman'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'details'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'address'</span><span class=\"p\">:{</span>\n                    <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Albuquerque'</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">nested_get</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,[</span><span class=\"s1\">'details'</span><span class=\"p\">,</span><span class=\"s1\">'address'</span><span class=\"p\">,</span><span class=\"s1\">'city'</span><span class=\"p\">])</span>\n<span class=\"c1\"># res = Albuquerque</span>\n</pre>\n<ul>\n<li><strong>Fetch</strong> simple nested data with <code>default</code> value:</li>\n</ul>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Jesse Pinkman'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'details'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'address'</span><span class=\"p\">:{</span>\n                    <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Albuquerque'</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">nested_get</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,[</span><span class=\"s1\">'details'</span><span class=\"p\">,</span><span class=\"s1\">'address'</span><span class=\"p\">,</span><span class=\"s1\">'state'</span><span class=\"p\">],</span> <span class=\"n\">default</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"c1\"># res = -1</span>\n</pre>\n<ul>\n<li><strong>Fetch</strong> nested data:</li>\n</ul>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Jesse Pinkman'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'details'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'address'</span><span class=\"p\">:[{</span>\n                    <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Albuquerque'</span>\n                <span class=\"p\">},{</span>\n                    <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'El Paso'</span>\n                <span class=\"p\">}]</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">nested_get</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,[</span><span class=\"s1\">'details'</span><span class=\"p\">,</span><span class=\"s1\">'address'</span><span class=\"p\">,</span><span class=\"s1\">'city'</span><span class=\"p\">])</span>\n<span class=\"c1\"># res = ['Albuquerque','El Paso']</span>\n</pre>\n<ul>\n<li><strong>Fetch</strong> nested data with <code>default</code> value:</li>\n</ul>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Jesse Pinkman'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'details'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'address'</span><span class=\"p\">:[{</span>\n                    <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Albuquerque'</span>\n                <span class=\"p\">},{</span>\n                    <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'El Paso'</span>\n                <span class=\"p\">},{</span>\n                    <span class=\"s1\">'state'</span><span class=\"p\">:</span> <span class=\"s1\">'New Mexico'</span>\n                <span class=\"p\">}]</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">nested_get</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,[</span><span class=\"s1\">'details'</span><span class=\"p\">,</span><span class=\"s1\">'address'</span><span class=\"p\">,</span><span class=\"s1\">'city'</span><span class=\"p\">],</span> <span class=\"n\">default</span><span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"c1\"># res = ['Albuquerque','El Paso', None]</span>\n</pre>\n<ul>\n<li><strong>Fetch</strong> nested data by specifing <code>index</code>:</li>\n</ul>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Walter White'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'details'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'address'</span><span class=\"p\">:[{</span>\n                    <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Albuquerque'</span>\n                <span class=\"p\">},{</span>\n                    <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'El Paso'</span>\n                <span class=\"p\">}]</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">nested_get</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,[</span><span class=\"s1\">'details'</span><span class=\"p\">,</span><span class=\"s1\">'address'</span><span class=\"p\">,</span><span class=\"s1\">'city'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"c1\"># res = Albuquerque</span>\n</pre>\n<ul>\n<li><strong>Fetch</strong> nested data without <code>flatten</code>:</li>\n</ul>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"league\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Champions League\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"matches\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">\"match_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"match_1\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"goals\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">\"time\"</span><span class=\"p\">:</span> <span class=\"mi\">13</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"scorrer\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Lionel Messi\"</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"assist\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Luis Suarez\"</span>\n                <span class=\"p\">},</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">\"time\"</span><span class=\"p\">:</span> <span class=\"mi\">78</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"scorrer\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Luis Suarez\"</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"assist\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Ivan Rakitic\"</span>\n                <span class=\"p\">}]</span>\n            <span class=\"p\">},</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">\"match_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"match_2\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"goals\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">\"time\"</span><span class=\"p\">:</span> <span class=\"mi\">36</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"scorrer\"</span><span class=\"p\">:</span> <span class=\"s2\">\"C. Ronaldo\"</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"assist\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Luka Modric\"</span>\n                <span class=\"p\">}]</span>\n            <span class=\"p\">}]</span>\n        <span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">nested_get</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,[</span><span class=\"s1\">'matches'</span><span class=\"p\">,</span><span class=\"s1\">'goals'</span><span class=\"p\">,</span><span class=\"s1\">'scorrer'</span><span class=\"p\">])</span>\n<span class=\"c1\"># res = [['Lionel Messi', 'Luis Suarez'], ['C. Ronaldo']]</span>\n</pre>\n<ul>\n<li><strong>Fetch</strong> nested data with <code>flatten</code>:</li>\n</ul>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"league\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Champions League\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"matches\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">\"match_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"match_1\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"goals\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">\"time\"</span><span class=\"p\">:</span> <span class=\"mi\">13</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"scorrer\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Lionel Messi\"</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"assist\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Luis Suarez\"</span>\n                <span class=\"p\">},</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">\"time\"</span><span class=\"p\">:</span> <span class=\"mi\">78</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"scorrer\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Luis Suarez\"</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"assist\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Ivan Rakitic\"</span>\n                <span class=\"p\">}]</span>\n            <span class=\"p\">},</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">\"match_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"match_2\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"goals\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">\"time\"</span><span class=\"p\">:</span> <span class=\"mi\">36</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"scorrer\"</span><span class=\"p\">:</span> <span class=\"s2\">\"C. Ronaldo\"</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"assist\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Luka Modric\"</span>\n                <span class=\"p\">}]</span>\n            <span class=\"p\">}]</span>\n        <span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">nested_get</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,[</span><span class=\"s1\">'matches'</span><span class=\"p\">,</span><span class=\"s1\">'goals'</span><span class=\"p\">,</span><span class=\"s1\">'scorrer'</span><span class=\"p\">],</span> <span class=\"n\">flatten</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># res = ['Lionel Messi', 'Luis Suarez', 'C. Ronaldo']</span>\n</pre>\n<h3>Set / Update  Data</h3>\n<pre><span class=\"n\">nested_set</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">keys</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">create_missing</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n\n<span class=\"nd\">@Arguments</span>\n<span class=\"n\">data</span> <span class=\"o\">=&gt;</span> <span class=\"nb\">dict</span> <span class=\"o\">/</span> <span class=\"nb\">list</span>\n<span class=\"n\">keys</span> <span class=\"o\">=&gt;</span> <span class=\"n\">List</span> <span class=\"n\">of</span> <span class=\"n\">sequential</span> <span class=\"n\">keys</span> <span class=\"n\">leading</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">desired</span> <span class=\"n\">value</span> <span class=\"n\">to</span> <span class=\"nb\">set</span> <span class=\"o\">/</span> <span class=\"n\">update</span>\n<span class=\"n\">value</span> <span class=\"o\">=&gt;</span> <span class=\"n\">Specifies</span> <span class=\"n\">the</span> <span class=\"n\">value</span> <span class=\"n\">to</span> <span class=\"nb\">set</span> <span class=\"o\">/</span> <span class=\"n\">update</span>\n<span class=\"n\">create_missing</span> <span class=\"o\">=&gt;</span> <span class=\"n\">Specifies</span> <span class=\"n\">whether</span> <span class=\"n\">to</span> <span class=\"n\">create</span> <span class=\"n\">new</span> <span class=\"n\">key</span> <span class=\"k\">while</span> <span class=\"n\">building</span> <span class=\"n\">up</span> <span class=\"k\">if</span> <span class=\"n\">the</span> <span class=\"n\">specified</span> <span class=\"n\">key</span> <span class=\"n\">does</span> <span class=\"ow\">not</span> <span class=\"n\">exists</span>\n\n<span class=\"nd\">@Return</span>\n<span class=\"n\">Returns</span> <span class=\"n\">the</span> <span class=\"n\">number</span> <span class=\"n\">of</span> <span class=\"n\">values</span> <span class=\"n\">updated</span>\n</pre>\n<ul>\n<li><strong>Update</strong> value of simple nested data :</li>\n</ul>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Jesse Pinkman'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'details'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'address'</span><span class=\"p\">:{</span>\n                    <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Albuquerque'</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">nested_set</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,[</span><span class=\"s1\">'details'</span><span class=\"p\">,</span><span class=\"s1\">'address'</span><span class=\"p\">,</span><span class=\"s1\">'city'</span><span class=\"p\">],</span> <span class=\"s2\">\"Denver\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># res = 1</span>\n\n<span class=\"c1\"># data = {</span>\n<span class=\"c1\">#             'name': 'Jesse Pinkman',</span>\n<span class=\"c1\">#             'details': {</span>\n<span class=\"c1\">#                 'address':{</span>\n<span class=\"c1\">#                     'city': 'Denver'</span>\n<span class=\"c1\">#                 }</span>\n<span class=\"c1\">#             }</span>\n<span class=\"c1\">#         }</span>\n</pre>\n<ul>\n<li><strong>Update</strong> nested data:</li>\n</ul>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Jesse Pinkman'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'details'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'address'</span><span class=\"p\">:[{</span>\n                    <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Albuquerque'</span>\n                <span class=\"p\">},{</span>\n                    <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'El Paso'</span>\n                <span class=\"p\">}]</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">nested_set</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,[</span><span class=\"s1\">'details'</span><span class=\"p\">,</span><span class=\"s1\">'address'</span><span class=\"p\">,</span><span class=\"s1\">'city'</span><span class=\"p\">],</span> <span class=\"s2\">\"Denver\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># res = 2</span>\n\n<span class=\"c1\"># data = {</span>\n<span class=\"c1\">#     'name': 'Jesse Pinkman',</span>\n<span class=\"c1\">#     'details': {</span>\n<span class=\"c1\">#         'address':[{</span>\n<span class=\"c1\">#             'city': 'Denver'</span>\n<span class=\"c1\">#         },{</span>\n<span class=\"c1\">#             'city': 'Denver'</span>\n<span class=\"c1\">#         }]</span>\n<span class=\"c1\">#     }</span>\n<span class=\"c1\"># }</span>\n</pre>\n<ul>\n<li><strong>Update</strong> nested data with <code>index</code>:</li>\n</ul>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Jesse Pinkman'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'details'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'address'</span><span class=\"p\">:[{</span>\n                    <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Albuquerque'</span>\n                <span class=\"p\">},{</span>\n                    <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'El Paso'</span>\n                <span class=\"p\">}]</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">nested_set</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,[</span><span class=\"s1\">'details'</span><span class=\"p\">,</span><span class=\"s1\">'address'</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"s1\">'city'</span><span class=\"p\">],</span> <span class=\"s2\">\"Denver\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># res = 1</span>\n\n<span class=\"c1\"># data = {</span>\n<span class=\"c1\">#     'name': 'Jesse Pinkman',</span>\n<span class=\"c1\">#     'details': {</span>\n<span class=\"c1\">#         'address':[{</span>\n<span class=\"c1\">#             'city': 'Denver'</span>\n<span class=\"c1\">#         },{</span>\n<span class=\"c1\">#             'city': 'El Paso'</span>\n<span class=\"c1\">#         }]</span>\n<span class=\"c1\">#     }</span>\n<span class=\"c1\"># }</span>\n</pre>\n<ul>\n<li><strong>Set</strong> nested data with <code>create_missing</code> :</li>\n</ul>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Jesse Pinkman'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'details'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'address'</span><span class=\"p\">:{</span>\n                    <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Albuquerque'</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">nested_set</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,[</span><span class=\"s1\">'details'</span><span class=\"p\">,</span><span class=\"s1\">'address'</span><span class=\"p\">,</span><span class=\"s1\">'state'</span><span class=\"p\">],</span> <span class=\"s2\">\"New Mexico\"</span><span class=\"p\">,</span> <span class=\"n\">create_missing</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># res = 1</span>\n\n<span class=\"c1\"># data = {</span>\n<span class=\"c1\">#             'name': 'Jesse Pinkman',</span>\n<span class=\"c1\">#             'details': {</span>\n<span class=\"c1\">#                 'address':{</span>\n<span class=\"c1\">#                     'city': 'Denver',</span>\n<span class=\"c1\">#                     'state': 'New Mexico'</span>\n<span class=\"c1\">#                 }</span>\n<span class=\"c1\">#             }</span>\n<span class=\"c1\">#         }</span>\n</pre>\n<h3>Flatten Nested Lists</h3>\n<pre><span class=\"n\">flatten_data</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n\n<span class=\"nd\">@Arguments</span>\n<span class=\"n\">data</span> <span class=\"o\">=&gt;</span> <span class=\"nb\">list</span> <span class=\"n\">of</span> <span class=\"nb\">list</span>\n\n<span class=\"nd\">@Return</span>\n<span class=\"n\">Returns</span> <span class=\"n\">the</span> <span class=\"n\">flattened</span> <span class=\"nb\">list</span>\n</pre>\n<ul>\n<li><strong>Flatten</strong> List of Lists</li>\n</ul>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">[[</span>\n    <span class=\"p\">[</span><span class=\"s1\">'This'</span><span class=\"p\">,</span><span class=\"s1\">'is'</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"s1\">'flattened'</span><span class=\"p\">,</span> <span class=\"s1\">'data'</span><span class=\"p\">]</span>\n<span class=\"p\">]]</span>\n\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">flatten_data</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"c1\"># res = ['This','is','flattened','data']</span>\n</pre>\n<h2>How to contribute</h2>\n<p>Contributions are welcome \ud83d\ude07.<br>Feel free to submit a patch, report a bug \ud83d\udc1b or ask for a feature \ud83d\udc23. <br>Please open an issue first to encourage and keep track of potential discussions \ud83d\udcdd.</p>\n\n          </div>"}, "last_serial": 6036827, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "d193472fc208af425b8e45134b8d933e", "sha256": "db5dd4071541b970c27b034451dce97a062246d106821ff42696275940704fc5"}, "downloads": -1, "filename": "nestedfetch-0.1.tar.gz", "has_sig": false, "md5_digest": "d193472fc208af425b8e45134b8d933e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4909, "upload_time": "2019-10-26T20:33:03", "upload_time_iso_8601": "2019-10-26T20:33:03.720162Z", "url": "https://files.pythonhosted.org/packages/7b/c2/2af0adb00c8c6fd62d28b863b532d40eb8d17128ce4f4e716b4129230882/nestedfetch-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "3932b135366a4bb6dd19b64d205f2bec", "sha256": "df6c905fb2fc865dafcbcdd01d4ec556b495db696ee813d88d0ea522f3ce5d6a"}, "downloads": -1, "filename": "nestedfetch-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3932b135366a4bb6dd19b64d205f2bec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4990, "upload_time": "2019-10-27T12:17:49", "upload_time_iso_8601": "2019-10-27T12:17:49.521682Z", "url": "https://files.pythonhosted.org/packages/dd/67/e7fddf33eaa1ce74b57822a48ccf7c65e30a4a7d2233bdad3f0a8abc6d1c/nestedfetch-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "8ec1fd9f84367658ad86b8721fc62569", "sha256": "19c4b16602965f57f27231350ea3f26822621e8d75a7dcfe1dcedc59666bab7c"}, "downloads": -1, "filename": "nestedfetch-0.1.2.tar.gz", "has_sig": false, "md5_digest": "8ec1fd9f84367658ad86b8721fc62569", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4902, "upload_time": "2019-10-27T12:34:26", "upload_time_iso_8601": "2019-10-27T12:34:26.019252Z", "url": "https://files.pythonhosted.org/packages/74/cc/5b1db68f0d012401e01546c61d29b0638ca40133bec0b7109fda2f998af6/nestedfetch-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8ec1fd9f84367658ad86b8721fc62569", "sha256": "19c4b16602965f57f27231350ea3f26822621e8d75a7dcfe1dcedc59666bab7c"}, "downloads": -1, "filename": "nestedfetch-0.1.2.tar.gz", "has_sig": false, "md5_digest": "8ec1fd9f84367658ad86b8721fc62569", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4902, "upload_time": "2019-10-27T12:34:26", "upload_time_iso_8601": "2019-10-27T12:34:26.019252Z", "url": "https://files.pythonhosted.org/packages/74/cc/5b1db68f0d012401e01546c61d29b0638ca40133bec0b7109fda2f998af6/nestedfetch-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:23 2020"}