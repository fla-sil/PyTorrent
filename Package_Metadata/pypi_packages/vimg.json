{"info": {"author": "Johannes Hansen", "author_email": "johannes.niklas.hansen@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Environment :: Console :: Curses", "Environment :: MacOS X", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Topic :: Multimedia :: Graphics", "Topic :: Multimedia :: Graphics :: Viewers", "Topic :: Utilities"], "description": "vimg: A CLI image viewer.\n#########################\n\nAuthor: Johannes Hansen\n\nWhy?\n====\nIf you are like me, you spend a lot of time in command line environments. One of the few things that\nare hard to deal with in such an environment is images.\n\nThis little tool is meant to allow for quick viewing of image files in the command line.\n\nThe image is rendered using a combination of background color, foreground color and unicode character\nfor each character cell to optimally represent the original pixels. The challenge is the limited\ncolor palette of 256 colors.\n\nIn the simplest case, each character cell represents one pixel. However, the resolution can be\nincreased by printing unicode characters that better capture the structure of the image.\nAlternatively, the color accuracy can be improved by mixing two available colors in foreground and\nbackground, thus losing the gained resolution.\n\nThe default mode attempts to optimize the rendering by optimizing resolution in areas of high\ndetail, and optimizing color accuracy in areas of low detail.\n\nInstallation\n============\n.. code-block:: bash\n\n   $ pip install vimg\n\n\nRequirements\n------------\nA terminal that supports 256 colors.\n\nThe script is based on ``curses`` and ``opencv`` for Python.\n\nUsage\n=====\n.. code-block:: bash\n\n    $ vimg path/to/image\n\n\nGUI modes\n=========\nOnce in the GUI, you can change between different viewing modes:\n\n+--------------------------+---------+-------------------------------------------------------------+\n| Key shortcut             |  Mode   |  Description                                                |\n+==========================+=========+=============================================================+\n| ``c``                    | color   | (default) display optimal representation of image           |\n+--------------------------+---------+-------------------------------------------------------------+\n| ``f``                    | fast    | display image in fast mode (reduced resolution)             |\n+--------------------------+---------+-------------------------------------------------------------+\n| ``a``                    | ascii   | display a black-and-white representation of the image       |\n+--------------------------+---------+-------------------------------------------------------------+\n| ``e``                    | edge    | (experimental) edge detection based rendering               |\n+--------------------------+---------+-------------------------------------------------------------+\n| ``+``/``-``              | --      | zoom in/out (by 30%)                                        |\n+--------------------------+---------+-------------------------------------------------------------+\n| | ``h`` ``j`` ``k`` ``l``| --      | move view (by 10%)                                          |\n| | or arrow keys          |         |                                                             |\n+--------------------------+---------+-------------------------------------------------------------+\n| ``0``                    | --      | reset zoom                                                  |\n+--------------------------+---------+-------------------------------------------------------------+\n| ``r``                    | --      | refresh the screen                                          |\n+--------------------------+---------+-------------------------------------------------------------+\n| ``q``                    | --      | quit                                                        |\n+--------------------------+---------+-------------------------------------------------------------+\n\n\nNotes\n=====\nThe results will be better if you use a font that correctly displays unicode block element characters\nwith the full line height, such as DejaVu Sans.\n\nLimitations\n===========\nThe script currently only supports image files that are natively supported by OpenCV (``.jpg``,\n``.png``, ``.bmp``).\n\n\nTo Do\n=====\nFuture plans include:\n\n* Support for more image file types, e.g. ``.gif``\n* Improvement of the edge detection mode\n* Make ``opencv`` dependency optional\n* Improve color gradients at contrast-rich edges\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/jnhansen/vimg", "keywords": "cli terminal console image picture graphics viewer preview", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "vimg", "package_url": "https://pypi.org/project/vimg/", "platform": "", "project_url": "https://pypi.org/project/vimg/", "project_urls": {"Homepage": "http://github.com/jnhansen/vimg"}, "release_url": "https://pypi.org/project/vimg/0.4.3/", "requires_dist": null, "requires_python": "", "summary": "An image viewer for the command line", "version": "0.4.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Author: Johannes Hansen</p>\n<div id=\"why\">\n<h2>Why?</h2>\n<p>If you are like me, you spend a lot of time in command line environments. One of the few things that\nare hard to deal with in such an environment is images.</p>\n<p>This little tool is meant to allow for quick viewing of image files in the command line.</p>\n<p>The image is rendered using a combination of background color, foreground color and unicode character\nfor each character cell to optimally represent the original pixels. The challenge is the limited\ncolor palette of 256 colors.</p>\n<p>In the simplest case, each character cell represents one pixel. However, the resolution can be\nincreased by printing unicode characters that better capture the structure of the image.\nAlternatively, the color accuracy can be improved by mixing two available colors in foreground and\nbackground, thus losing the gained resolution.</p>\n<p>The default mode attempts to optimize the rendering by optimizing resolution in areas of high\ndetail, and optimizing color accuracy in areas of low detail.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install vimg\n</pre>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<p>A terminal that supports 256 colors.</p>\n<p>The script is based on <tt>curses</tt> and <tt>opencv</tt> for Python.</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>$ vimg path/to/image\n</pre>\n</div>\n<div id=\"gui-modes\">\n<h2>GUI modes</h2>\n<p>Once in the GUI, you can change between different viewing modes:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Key shortcut</th>\n<th>Mode</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>c</tt></td>\n<td>color</td>\n<td>(default) display optimal representation of image</td>\n</tr>\n<tr><td><tt>f</tt></td>\n<td>fast</td>\n<td>display image in fast mode (reduced resolution)</td>\n</tr>\n<tr><td><tt>a</tt></td>\n<td>ascii</td>\n<td>display a black-and-white representation of the image</td>\n</tr>\n<tr><td><tt>e</tt></td>\n<td>edge</td>\n<td>(experimental) edge detection based rendering</td>\n</tr>\n<tr><td><tt>+</tt>/<tt>-</tt></td>\n<td>\u2013</td>\n<td>zoom in/out (by 30%)</td>\n</tr>\n<tr><td><div>\n<div><tt>h</tt> <tt>j</tt> <tt>k</tt> <tt>l</tt></div>\n<div>or arrow keys</div>\n</div>\n</td>\n<td>\u2013</td>\n<td>move view (by 10%)</td>\n</tr>\n<tr><td><tt>0</tt></td>\n<td>\u2013</td>\n<td>reset zoom</td>\n</tr>\n<tr><td><tt>r</tt></td>\n<td>\u2013</td>\n<td>refresh the screen</td>\n</tr>\n<tr><td><tt>q</tt></td>\n<td>\u2013</td>\n<td>quit</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"notes\">\n<h2>Notes</h2>\n<p>The results will be better if you use a font that correctly displays unicode block element characters\nwith the full line height, such as DejaVu Sans.</p>\n</div>\n<div id=\"limitations\">\n<h2>Limitations</h2>\n<p>The script currently only supports image files that are natively supported by OpenCV (<tt>.jpg</tt>,\n<tt>.png</tt>, <tt>.bmp</tt>).</p>\n</div>\n<div id=\"to-do\">\n<h2>To Do</h2>\n<p>Future plans include:</p>\n<ul>\n<li>Support for more image file types, e.g. <tt>.gif</tt></li>\n<li>Improvement of the edge detection mode</li>\n<li>Make <tt>opencv</tt> dependency optional</li>\n<li>Improve color gradients at contrast-rich edges</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 3286510, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "88cbcfc9cfc3a6d510e48257000484f6", "sha256": "4d90fd63a8d2cf10cb8e8f8f4548518519c59d56d591fefb4bb8e3b142dee56d"}, "downloads": -1, "filename": "vimg-0.2.tar.gz", "has_sig": false, "md5_digest": "88cbcfc9cfc3a6d510e48257000484f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10620, "upload_time": "2017-10-20T15:07:59", "upload_time_iso_8601": "2017-10-20T15:07:59.242121Z", "url": "https://files.pythonhosted.org/packages/47/d0/bca245f2ef337bb49673e7a60a986f0092f91f6770b56a3301b0bfb8e41c/vimg-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "f19e7d71457e91b5bd8a8f85b291207e", "sha256": "c6e754668d8e821c5f0f1e3b95d78bc03486f1a7bb4ca82fe0afe9589b8c85e8"}, "downloads": -1, "filename": "vimg-0.2.1.tar.gz", "has_sig": false, "md5_digest": "f19e7d71457e91b5bd8a8f85b291207e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10631, "upload_time": "2017-10-20T15:12:29", "upload_time_iso_8601": "2017-10-20T15:12:29.574872Z", "url": "https://files.pythonhosted.org/packages/01/d4/38a5433d78aa3815b02c743585f4ff58b47e44eceb68fcba6c0ac5435c83/vimg-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "93a36ed3dff8aea409db51e55762d9a6", "sha256": "5b76fdb730bfce8c3f5ad40ae568294806e262700220762d7d25a589bca48b58"}, "downloads": -1, "filename": "vimg-0.2.2.tar.gz", "has_sig": false, "md5_digest": "93a36ed3dff8aea409db51e55762d9a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10627, "upload_time": "2017-10-20T15:14:23", "upload_time_iso_8601": "2017-10-20T15:14:23.244400Z", "url": "https://files.pythonhosted.org/packages/f3/7c/e94d0b48761802995bb065076609fd079eaf923ae90568e8999cd1071ec9/vimg-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "8414e8086c0e0e9fa1d9f831ad6f649e", "sha256": "eba04d1c8fc7ff53cb5da8f26afc2b27e8dc6267a480cb7729e60a28d5d728c0"}, "downloads": -1, "filename": "vimg-0.3.0.tar.gz", "has_sig": false, "md5_digest": "8414e8086c0e0e9fa1d9f831ad6f649e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12512, "upload_time": "2017-10-25T15:10:58", "upload_time_iso_8601": "2017-10-25T15:10:58.280298Z", "url": "https://files.pythonhosted.org/packages/94/67/5b69db523c8dddd3574788d44aa5f859162bf91975bfe3c5b6c5e390905e/vimg-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "b72bacb80816af7d1b6d31ebafcf2199", "sha256": "a65cfe6a366821bfedcc48d1c81ec071979fd16d8976e3bc1375a52543fe4e64"}, "downloads": -1, "filename": "vimg-0.4.0.tar.gz", "has_sig": false, "md5_digest": "b72bacb80816af7d1b6d31ebafcf2199", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14605, "upload_time": "2017-10-26T15:50:59", "upload_time_iso_8601": "2017-10-26T15:50:59.039220Z", "url": "https://files.pythonhosted.org/packages/3d/89/f907ec7e73ca14c638ab651d66cf27bfafae1b572cbf162c4f0b7ac632d8/vimg-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "194fcd2fe97d799c95382239cf0fd597", "sha256": "1854a475053444b3200c77b5afbb18d9e1967a38d34b6f150d468127a94820bb"}, "downloads": -1, "filename": "vimg-0.4.1.tar.gz", "has_sig": false, "md5_digest": "194fcd2fe97d799c95382239cf0fd597", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14626, "upload_time": "2017-10-27T09:57:48", "upload_time_iso_8601": "2017-10-27T09:57:48.400970Z", "url": "https://files.pythonhosted.org/packages/04/b5/e61a148e6995baf0849c12497b9f5465e004891959e542488d8341da68f9/vimg-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "9705ee4942753b6b4e1931eea46fda69", "sha256": "b803696ec1983c61de3a8264fc624b2a6148613190feb17725cb1222154a01ea"}, "downloads": -1, "filename": "vimg-0.4.2.tar.gz", "has_sig": false, "md5_digest": "9705ee4942753b6b4e1931eea46fda69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15310, "upload_time": "2017-10-28T16:35:10", "upload_time_iso_8601": "2017-10-28T16:35:10.308651Z", "url": "https://files.pythonhosted.org/packages/22/03/b63a5d5377d7c2f9c29ff94c3008b31fcc4ffae3927ae441efdfc6d8a1cf/vimg-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "bc4bd456b45a4e79f382a54c790fd30d", "sha256": "6e050a2a31f6534a4828a8a82f16db481574c6bb9cb16f0182ddcd2258a84b0a"}, "downloads": -1, "filename": "vimg-0.4.3.tar.gz", "has_sig": false, "md5_digest": "bc4bd456b45a4e79f382a54c790fd30d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15326, "upload_time": "2017-10-28T16:50:09", "upload_time_iso_8601": "2017-10-28T16:50:09.163348Z", "url": "https://files.pythonhosted.org/packages/bd/72/47a805904c0338b8529e84682223452a3c2321a16067f229157ef86de5a8/vimg-0.4.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bc4bd456b45a4e79f382a54c790fd30d", "sha256": "6e050a2a31f6534a4828a8a82f16db481574c6bb9cb16f0182ddcd2258a84b0a"}, "downloads": -1, "filename": "vimg-0.4.3.tar.gz", "has_sig": false, "md5_digest": "bc4bd456b45a4e79f382a54c790fd30d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15326, "upload_time": "2017-10-28T16:50:09", "upload_time_iso_8601": "2017-10-28T16:50:09.163348Z", "url": "https://files.pythonhosted.org/packages/bd/72/47a805904c0338b8529e84682223452a3c2321a16067f229157ef86de5a8/vimg-0.4.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:36:01 2020"}