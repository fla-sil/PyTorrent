{"info": {"author": "Seoul AI", "author_email": "m.kersner@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Seoul AI Gym\n\n**Seoul AI Gym is a toolkit for developing AI algorithms.**\nThis `gym` simulates environments and enables you to apply any teaching technique on agent.\n\n[![Build Status](https://api.travis-ci.com/seoulai/gym.svg?branch=master)](https://travis-ci.com/seoulai/gym)\n\nSeoul AI Gym was inspired by [OpenAI gym](https://github.com/openai/gym) and tries to follow its API very closely.\n\n\n### Contents\n* [Basics](https://github.com/seoulai/gym#basics)\n* [Installation](https://github.com/seoulai/gym#installation)\n  * [`pip3`](https://github.com/seoulai/gym#pip3)\n  * [From source](https://github.com/seoulai/gym#from-source)\n* [Environments](https://github.com/seoulai/gym#environments)\n* [Examples](https://github.com/seoulai/gym#examples)\n* [Testing](https://github.com/seoulai/gym#testing)\n\n## Basics\nThere are two terms that are important to understand: *Environment* and *Agent*.\n\nAn environment is a world (simulation) with which an agent can interact.\nAn agent can observe a world and act based on its decision.\n\n`seoulai-gym` provides environments.\nAn example of creating environment:\n\n```python\nimport seoulai_gym as gym\nenv = gym.make(\"Checkers\")\n```\n\nEvery environment has three important methods: `reset`, `step` and `render`.\n\n##### `reset(self) -> observation`\nReset an environment to default state and return `observation` of default state.\n`observation` data structure depends on environment and is described separately for each environment.\n\n##### `step(self, agent, action) -> observation, reward, done, info`\nPerform an `action` on behalf of `agent` in environment lastly observed by either `reset` or `step`.\nAn `action` can differ among different environments but the return value of `step` method is always same.\nA `reward` is given to an agent when action that was done in the current step or some of the previous steps have led to a positive outcome for an agent (e.g winning a game).\nAn `info` is a dictionary containing extra information about performed `action`.\n\n##### `render(self) -> None`\nDisplay state of game on a screen.\n\n\n## Installation\nThere are two ways to install `seoulai-gym`.\n\n#### `pip3`\nThe recommended way for developers creating an agent is to install `seoulai-gym` using `pip3`.\n```\npip3 install seoulai-gym\n```\n\n#### From source\nYou can also clone and install `seoulai-gym` from source.\nThis option is for developers that want to create new environments or modify existing ones.\n\n```shell\ngit clone https://github.com/seoulai/gym.git\ncd gym\npip3 install -e .\n```\n\n#### Supported systems\n`seoulai-gym` requires to have at least Python 3.6 and was tested on Arch Linux, macOS High Sierra and Windows 10.\n\n## Environments\nCurrently, environment simulating game of [Checkers](https://en.wikipedia.org/wiki/Draughts), [Mighty] (https://en.wikipedia.org/wiki/Mighty_(card_game)), and Market are provided.\n\n* Checkers\n  ```python\n  import seoulai_gym as gym\n  env = gym.make(\"Checkers\")\n  env.reset()\n  env.render()\n  ```\n\n* Mighty\n  ```python\n  import seoulai_gym as gym\n  from seoulai_gym.envs.mighty.agent.RandomAgent import RandomAgent\n\n  env = gym.make(\"Mighty\")\n  players = [RandomAgent(\"Agent 1\", 0),\n              RandomAgent(\"Agent 2\", 1),\n              RandomAgent(\"Agent 3\", 2),\n              RandomAgent(\"Agent 4\", 3),\n              RandomAgent(\"Agent 5\", 4)]\n  obs = env.reset()\n  obs[\"game\"].players = [\n    players[0]._name,\n    players[1]._name,\n    players[2]._name,\n    players[3]._name,\n    players[4]._name,\n    ]\n  env.render()\n\n* Market\n\n  ```python\n  import seoulai_gym as gym\n  from seoulai_gym.envs.traders.agents import RandomAgentBuffett\n\n  # make enviroment\n  env = gym.make(\"Market\")\n\n  # select exchange\n  env.select(\"upbit\")\n\n  init_cash = 100000000  # KRW\n  a1 = RandomAgentBuffett(\"Buffett\", init_cash)\n  current_agent = a1\n\n  env.reset()\n  env.render()\n  ```\n\n## Examples\n\n* Checkers\n  * https://github.com/seoulai/gym/blob/master/examples/checkers_example.py\n\n    [![Watch the video](https://i.ytimg.com/vi/O-Q9hg7Vng8/hqdefault.jpg)](https://youtu.be/O-Q9hg7Vng8)\n\n* Mighty\n  * https://github.com/seoulai/gym/blob/master/examples/mighty_example.py\n\n    [![Watch the video](http://img.youtube.com/vi/M3GCt8evGkQ/0.jpg)](https://youtu.be/M3GCt8evGkQ?t=0s)\n\n* Market\n  * https://github.com/seoulai/gym/blob/master/examples/trader_example.py\n\n\n## Testing\nAll test are written using [pytest](http://doc.pytest.org/).\nYou can run them via:\n\n```\npytest\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/seoulai/gym", "keywords": "gym,ai,machine-learning,artificial-intelligence", "license": "The MIT License", "maintainer": "", "maintainer_email": "", "name": "seoulai-gym", "package_url": "https://pypi.org/project/seoulai-gym/", "platform": "", "project_url": "https://pypi.org/project/seoulai-gym/", "project_urls": {"Homepage": "https://github.com/seoulai/gym"}, "release_url": "https://pypi.org/project/seoulai-gym/0.1.2/", "requires_dist": ["pygame (>=1.9.3)", "numpy (>=1.14.2)", "pytest (>=3.6.0)", "flake8 (>=3.5.0)", "PyQt5 (>=5)", "pandas (>=0.23.4)", "matplotlib (>=2.2.3)", "flake8-quotes (>=1.0.0)"], "requires_python": "", "summary": "The Seoul AI Gym: Seoul AI Gym is a toolkit for developing AI algorithms.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Seoul AI Gym</h1>\n<p><strong>Seoul AI Gym is a toolkit for developing AI algorithms.</strong>\nThis <code>gym</code> simulates environments and enables you to apply any teaching technique on agent.</p>\n<p><a href=\"https://travis-ci.com/seoulai/gym\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6b2f7680d755e2069e83fba4284cf40e5e984e3e/68747470733a2f2f6170692e7472617669732d63692e636f6d2f73656f756c61692f67796d2e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Seoul AI Gym was inspired by <a href=\"https://github.com/openai/gym\" rel=\"nofollow\">OpenAI gym</a> and tries to follow its API very closely.</p>\n<h3>Contents</h3>\n<ul>\n<li><a href=\"https://github.com/seoulai/gym#basics\" rel=\"nofollow\">Basics</a></li>\n<li><a href=\"https://github.com/seoulai/gym#installation\" rel=\"nofollow\">Installation</a>\n<ul>\n<li><a href=\"https://github.com/seoulai/gym#pip3\" rel=\"nofollow\"><code>pip3</code></a></li>\n<li><a href=\"https://github.com/seoulai/gym#from-source\" rel=\"nofollow\">From source</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/seoulai/gym#environments\" rel=\"nofollow\">Environments</a></li>\n<li><a href=\"https://github.com/seoulai/gym#examples\" rel=\"nofollow\">Examples</a></li>\n<li><a href=\"https://github.com/seoulai/gym#testing\" rel=\"nofollow\">Testing</a></li>\n</ul>\n<h2>Basics</h2>\n<p>There are two terms that are important to understand: <em>Environment</em> and <em>Agent</em>.</p>\n<p>An environment is a world (simulation) with which an agent can interact.\nAn agent can observe a world and act based on its decision.</p>\n<p><code>seoulai-gym</code> provides environments.\nAn example of creating environment:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">seoulai_gym</span> <span class=\"k\">as</span> <span class=\"nn\">gym</span>\n<span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">gym</span><span class=\"o\">.</span><span class=\"n\">make</span><span class=\"p\">(</span><span class=\"s2\">\"Checkers\"</span><span class=\"p\">)</span>\n</pre>\n<p>Every environment has three important methods: <code>reset</code>, <code>step</code> and <code>render</code>.</p>\n<h5><code>reset(self) -&gt; observation</code></h5>\n<p>Reset an environment to default state and return <code>observation</code> of default state.\n<code>observation</code> data structure depends on environment and is described separately for each environment.</p>\n<h5><code>step(self, agent, action) -&gt; observation, reward, done, info</code></h5>\n<p>Perform an <code>action</code> on behalf of <code>agent</code> in environment lastly observed by either <code>reset</code> or <code>step</code>.\nAn <code>action</code> can differ among different environments but the return value of <code>step</code> method is always same.\nA <code>reward</code> is given to an agent when action that was done in the current step or some of the previous steps have led to a positive outcome for an agent (e.g winning a game).\nAn <code>info</code> is a dictionary containing extra information about performed <code>action</code>.</p>\n<h5><code>render(self) -&gt; None</code></h5>\n<p>Display state of game on a screen.</p>\n<h2>Installation</h2>\n<p>There are two ways to install <code>seoulai-gym</code>.</p>\n<h4><code>pip3</code></h4>\n<p>The recommended way for developers creating an agent is to install <code>seoulai-gym</code> using <code>pip3</code>.</p>\n<pre><code>pip3 install seoulai-gym\n</code></pre>\n<h4>From source</h4>\n<p>You can also clone and install <code>seoulai-gym</code> from source.\nThis option is for developers that want to create new environments or modify existing ones.</p>\n<pre>git clone https://github.com/seoulai/gym.git\n<span class=\"nb\">cd</span> gym\npip3 install -e .\n</pre>\n<h4>Supported systems</h4>\n<p><code>seoulai-gym</code> requires to have at least Python 3.6 and was tested on Arch Linux, macOS High Sierra and Windows 10.</p>\n<h2>Environments</h2>\n<p>Currently, environment simulating game of <a href=\"https://en.wikipedia.org/wiki/Draughts\" rel=\"nofollow\">Checkers</a>, [Mighty] (<a href=\"https://en.wikipedia.org/wiki/Mighty_(card_game)\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Mighty_(card_game)</a>), and Market are provided.</p>\n<ul>\n<li>\n<p>Checkers</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">seoulai_gym</span> <span class=\"k\">as</span> <span class=\"nn\">gym</span>\n<span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">gym</span><span class=\"o\">.</span><span class=\"n\">make</span><span class=\"p\">(</span><span class=\"s2\">\"Checkers\"</span><span class=\"p\">)</span>\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">reset</span><span class=\"p\">()</span>\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>\n<p>Mighty</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">seoulai_gym</span> <span class=\"k\">as</span> <span class=\"nn\">gym</span>\n<span class=\"kn\">from</span> <span class=\"nn\">seoulai_gym.envs.mighty.agent.RandomAgent</span> <span class=\"kn\">import</span> <span class=\"n\">RandomAgent</span>\n\n<span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">gym</span><span class=\"o\">.</span><span class=\"n\">make</span><span class=\"p\">(</span><span class=\"s2\">\"Mighty\"</span><span class=\"p\">)</span>\n<span class=\"n\">players</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">RandomAgent</span><span class=\"p\">(</span><span class=\"s2\">\"Agent 1\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span>\n            <span class=\"n\">RandomAgent</span><span class=\"p\">(</span><span class=\"s2\">\"Agent 2\"</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span>\n            <span class=\"n\">RandomAgent</span><span class=\"p\">(</span><span class=\"s2\">\"Agent 3\"</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span>\n            <span class=\"n\">RandomAgent</span><span class=\"p\">(</span><span class=\"s2\">\"Agent 4\"</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span>\n            <span class=\"n\">RandomAgent</span><span class=\"p\">(</span><span class=\"s2\">\"Agent 5\"</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)]</span>\n<span class=\"n\">obs</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">reset</span><span class=\"p\">()</span>\n<span class=\"n\">obs</span><span class=\"p\">[</span><span class=\"s2\">\"game\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">players</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n  <span class=\"n\">players</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_name</span><span class=\"p\">,</span>\n  <span class=\"n\">players</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_name</span><span class=\"p\">,</span>\n  <span class=\"n\">players</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_name</span><span class=\"p\">,</span>\n  <span class=\"n\">players</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_name</span><span class=\"p\">,</span>\n  <span class=\"n\">players</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_name</span><span class=\"p\">,</span>\n  <span class=\"p\">]</span>\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>\n<p>Market</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">seoulai_gym</span> <span class=\"k\">as</span> <span class=\"nn\">gym</span>\n<span class=\"kn\">from</span> <span class=\"nn\">seoulai_gym.envs.traders.agents</span> <span class=\"kn\">import</span> <span class=\"n\">RandomAgentBuffett</span>\n\n<span class=\"c1\"># make enviroment</span>\n<span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">gym</span><span class=\"o\">.</span><span class=\"n\">make</span><span class=\"p\">(</span><span class=\"s2\">\"Market\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># select exchange</span>\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"s2\">\"upbit\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">init_cash</span> <span class=\"o\">=</span> <span class=\"mi\">100000000</span>  <span class=\"c1\"># KRW</span>\n<span class=\"n\">a1</span> <span class=\"o\">=</span> <span class=\"n\">RandomAgentBuffett</span><span class=\"p\">(</span><span class=\"s2\">\"Buffett\"</span><span class=\"p\">,</span> <span class=\"n\">init_cash</span><span class=\"p\">)</span>\n<span class=\"n\">current_agent</span> <span class=\"o\">=</span> <span class=\"n\">a1</span>\n\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">reset</span><span class=\"p\">()</span>\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">()</span>\n</pre>\n</li>\n</ul>\n<h2>Examples</h2>\n<ul>\n<li>\n<p>Checkers</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/seoulai/gym/blob/master/examples/checkers_example.py\" rel=\"nofollow\">https://github.com/seoulai/gym/blob/master/examples/checkers_example.py</a></p>\n<p><a href=\"https://youtu.be/O-Q9hg7Vng8\" rel=\"nofollow\"><img alt=\"Watch the video\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ceb9e6fd6713c5cd1341560e6c4cc09ac8900e67/68747470733a2f2f692e7974696d672e636f6d2f76692f4f2d5139686737566e67382f687164656661756c742e6a7067\"></a></p>\n</li>\n</ul>\n</li>\n<li>\n<p>Mighty</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/seoulai/gym/blob/master/examples/mighty_example.py\" rel=\"nofollow\">https://github.com/seoulai/gym/blob/master/examples/mighty_example.py</a></p>\n<p><a href=\"https://youtu.be/M3GCt8evGkQ?t=0s\" rel=\"nofollow\"><img alt=\"Watch the video\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3923e4653800e8e08673acdab7f7e5d69220acbf/687474703a2f2f696d672e796f75747562652e636f6d2f76692f4d33474374386576476b512f302e6a7067\"></a></p>\n</li>\n</ul>\n</li>\n<li>\n<p>Market</p>\n<ul>\n<li><a href=\"https://github.com/seoulai/gym/blob/master/examples/trader_example.py\" rel=\"nofollow\">https://github.com/seoulai/gym/blob/master/examples/trader_example.py</a></li>\n</ul>\n</li>\n</ul>\n<h2>Testing</h2>\n<p>All test are written using <a href=\"http://doc.pytest.org/\" rel=\"nofollow\">pytest</a>.\nYou can run them via:</p>\n<pre><code>pytest\n</code></pre>\n\n          </div>"}, "last_serial": 4370742, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "e38a3be568378ff4b6e7369692394c7a", "sha256": "1218897ebdcc2c8975af178e101966032d9a026b3c6dcde686a7d38f090313fa"}, "downloads": -1, "filename": "seoulai_gym-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e38a3be568378ff4b6e7369692394c7a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22170, "upload_time": "2018-06-06T08:44:11", "upload_time_iso_8601": "2018-06-06T08:44:11.766513Z", "url": "https://files.pythonhosted.org/packages/95/71/745d312e18279c63a5fc753d508d6bb6ecfbc7ebfd6ec1b5771a2c4defcd/seoulai_gym-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e5d5d0652d3140f97311d3e83e1b02b8", "sha256": "c41ec0c88f19b44a245a16d4a5b09740bfdf648b954ea0fa05c6cf09845ab01b"}, "downloads": -1, "filename": "seoulai-gym-0.1.tar.gz", "has_sig": false, "md5_digest": "e5d5d0652d3140f97311d3e83e1b02b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20617, "upload_time": "2018-06-06T08:44:13", "upload_time_iso_8601": "2018-06-06T08:44:13.796681Z", "url": "https://files.pythonhosted.org/packages/4c/7e/73e0b2bc784c525cdf4c311e9d54f77904f1d82b6171788039cb2c8685fa/seoulai-gym-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "233ab0566129b8ff16712f022f8e06b4", "sha256": "33e6c37380ca985847cc59e074ad8dbc8f200fb6f3cd91119d9ff2987a71241a"}, "downloads": -1, "filename": "seoulai_gym-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "233ab0566129b8ff16712f022f8e06b4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1648463, "upload_time": "2018-09-10T13:01:45", "upload_time_iso_8601": "2018-09-10T13:01:45.188520Z", "url": "https://files.pythonhosted.org/packages/2e/8a/18c152c10e85098f30978cf4d999ba8e076f13f11b2815990eb43f728235/seoulai_gym-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c6d5b6575fa1c5ca30bc452a938d440", "sha256": "238c575a7c7a9eec7c63c6891a627ea643e61470b7b17cdd5f038c48d7e734cc"}, "downloads": -1, "filename": "seoulai-gym-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2c6d5b6575fa1c5ca30bc452a938d440", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1631459, "upload_time": "2018-09-10T13:01:49", "upload_time_iso_8601": "2018-09-10T13:01:49.588636Z", "url": "https://files.pythonhosted.org/packages/38/11/00e0af80ddc2a26e5e9524b81b71d5afe5e4245fd5a2088ca00ca5f2614b/seoulai-gym-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "d721da4e251b8135aa661490d44e5c71", "sha256": "23135845981244199b8239f74be898c697c3c2ee3ef83e2b2529d5e148d5869d"}, "downloads": -1, "filename": "seoulai_gym-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d721da4e251b8135aa661490d44e5c71", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1642489, "upload_time": "2018-10-13T02:20:59", "upload_time_iso_8601": "2018-10-13T02:20:59.407828Z", "url": "https://files.pythonhosted.org/packages/b1/75/4af010c197c74435db5ec780cd081d9fae912c5402aff7f988a5134668db/seoulai_gym-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d226d14c8e1c2e0012e71788a0bc35f", "sha256": "dd3135bc12cda0a40eac69d9eab459fb2e9b6d60217f6230f7230e127f16c405"}, "downloads": -1, "filename": "seoulai-gym-0.1.2.tar.gz", "has_sig": false, "md5_digest": "9d226d14c8e1c2e0012e71788a0bc35f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1624885, "upload_time": "2018-10-13T02:21:02", "upload_time_iso_8601": "2018-10-13T02:21:02.589294Z", "url": "https://files.pythonhosted.org/packages/5b/bf/854799ed30b8a989ee7c3d53578d8fa1b413295425f67379bcff821a25ba/seoulai-gym-0.1.2.tar.gz", "yanked": false}], "0.1.2.1.dev0": [{"comment_text": "", "digests": {"md5": "d66ce4e6b655bf9e8c7ac3aedd252298", "sha256": "2edb56cf0c8ab016ee9c04eb15ba8c1db4ca6942864db2015e000e6c9411c348"}, "downloads": -1, "filename": "seoulai_gym-0.1.2.1.dev0-py3-none-any.whl", "has_sig": false, "md5_digest": "d66ce4e6b655bf9e8c7ac3aedd252298", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1642556, "upload_time": "2018-10-13T02:20:33", "upload_time_iso_8601": "2018-10-13T02:20:33.330434Z", "url": "https://files.pythonhosted.org/packages/b8/7a/f939ec8236f7dc2fac1c49359cd2c9581f1a2fb3431e86226ce01c923017/seoulai_gym-0.1.2.1.dev0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d721da4e251b8135aa661490d44e5c71", "sha256": "23135845981244199b8239f74be898c697c3c2ee3ef83e2b2529d5e148d5869d"}, "downloads": -1, "filename": "seoulai_gym-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d721da4e251b8135aa661490d44e5c71", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1642489, "upload_time": "2018-10-13T02:20:59", "upload_time_iso_8601": "2018-10-13T02:20:59.407828Z", "url": "https://files.pythonhosted.org/packages/b1/75/4af010c197c74435db5ec780cd081d9fae912c5402aff7f988a5134668db/seoulai_gym-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d226d14c8e1c2e0012e71788a0bc35f", "sha256": "dd3135bc12cda0a40eac69d9eab459fb2e9b6d60217f6230f7230e127f16c405"}, "downloads": -1, "filename": "seoulai-gym-0.1.2.tar.gz", "has_sig": false, "md5_digest": "9d226d14c8e1c2e0012e71788a0bc35f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1624885, "upload_time": "2018-10-13T02:21:02", "upload_time_iso_8601": "2018-10-13T02:21:02.589294Z", "url": "https://files.pythonhosted.org/packages/5b/bf/854799ed30b8a989ee7c3d53578d8fa1b413295425f67379bcff821a25ba/seoulai-gym-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:56 2020"}