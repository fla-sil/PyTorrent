{"info": {"author": "Payson Wallach", "author_email": "payson@fourpeaksstudios.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "<div align=\"center\">\n  <h1>Carte</h1>\n  <a href=https://github.com/fourpeaksstudios/carte/releases/latest>\n    <img src=https://img.shields.io/github/v/release/fourpeaksstudios/carte?style=flat-square>\n  </a>\n  <a href=https://github.com/fourpeaksstudios/carte/blob/master/LICENSE>\n    <img src=https://img.shields.io/github/license/fourpeaksstudios/carte?style=flat-square>\n  </a>\n  <br>\n  <br>\n  <br>\n</div>\n\n[Carte](https://github.com/fourpeaksstudios/carte) is a flexible, extensible reverse-geocode library implemented in Python.\n\n## Installation\n\n### From [PyPI](https://pypi.org/) via `pip`\n\n[Carte](https://github.com/fourpeaksstudios/carte) is available from PyPI via [pip](https://pypi.org/project/carte/).\n\n```sh\npip install carte\n```\n\n### From source using [`poetry`](https://github.com/sdispater/poetry)\n\n__Note:__ It is recommended to build `carte` in a virtual environment due to dependency version requirements.\n\nFrom the root of the repository, install the necessary dependencies via `poetry`:\n\n```sh\npoetry install\n```\n\nThen, build the wheel:\n\n```sh\npoetry build\n```\n\nFinally, outside of your virtual environment, install the wheel using `pip`:\n\n```sh\npip install dist/carte-<version>-py3-none-any.whl\n```\n\n## Usage\n\nCarte is built using resources which inherit from the `Resource` class. A `Carte` instance is instantiated with a list of the `Resource` types it will query:\n\n```python\nimport carte\n\ncarte_instance = carte.Carte([my_resource_type])\n\nresults = carte_instance.query(List of coordinates as tuples...)\n```\n\nMultiple `Carte` instances may be created, and resources will be shared between them by a backing `ResourceStore`.\n\n### Custom Resources\n\nThe flexibility of Carte lies in the `Resource` class, which queries are passed to sequentially via the `query` method. The results of each resource query are aggregated and passed to the next, allowing the creation of resources that mutate previous resources' results, such as translating a country's ISO 3166-1 identifier code into a full name.\n\nFor examples of `Resource` classes, see the `resources` submodule.\n\nDefining your own `Resource` is as simple as inheriting from the `Resource` superclass, and implementing the `load` and `query` methods.\n\n```python\nfrom carte.resources import resource\n\nclass MyCustomResource(resource.Resource):\n    def load(self):\n        # do stuff...\n\n    def query(self, coordinates, results) -> dict:\n        # do other stuff...\n        return results\n```\n\n## Testing\n\nTo run tests, execute the following from the root of the project:\n\n```sh\npoetry run pytest tests/\n```\n\n## License\n\n[Carte](https://github.com/fourpeaksstudios/carte) is licensed under the [GNU Lesser General Public License](https://github.com/fourpeaksstudios/carte/blob/master/LICENSE).\n\n## Attribution\n\n[Carte](https://github.com/fourpeaksstudios/carte) is inspired by [reverse-geocode](https://bitbucket.org/richardpenman/reverse_geocode).\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "LGPL-2.1-or-later", "maintainer": "", "maintainer_email": "", "name": "carte", "package_url": "https://pypi.org/project/carte/", "platform": "", "project_url": "https://pypi.org/project/carte/", "project_urls": null, "release_url": "https://pypi.org/project/carte/0.2.2/", "requires_dist": ["appdirs (>=1.4.3,<2.0.0)", "initable (>=0.2.0,<0.3.0)", "scipy (>=1.4.1,<2.0.0)"], "requires_python": ">=3.7,<4.0", "summary": "Carte is a flexible, extensible reverse-geocode library.", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n  <h1>Carte</h1>\n  <a href=\"https://github.com/fourpeaksstudios/carte/releases/latest\" rel=\"nofollow\">\n    <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/899a7495a6ea6d2206499a01a640830abeed46f8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f666f75727065616b7373747564696f732f63617274653f7374796c653d666c61742d737175617265\">\n  </a>\n  <a href=\"https://github.com/fourpeaksstudios/carte/blob/master/LICENSE\" rel=\"nofollow\">\n    <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/68778e448f960e77710e6870805f5e8a431ec952/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f666f75727065616b7373747564696f732f63617274653f7374796c653d666c61742d737175617265\">\n  </a>\n  <br>\n  <br>\n  <br>\n</div>\n<p><a href=\"https://github.com/fourpeaksstudios/carte\" rel=\"nofollow\">Carte</a> is a flexible, extensible reverse-geocode library implemented in Python.</p>\n<h2>Installation</h2>\n<h3>From <a href=\"https://pypi.org/\" rel=\"nofollow\">PyPI</a> via <code>pip</code></h3>\n<p><a href=\"https://github.com/fourpeaksstudios/carte\" rel=\"nofollow\">Carte</a> is available from PyPI via <a href=\"https://pypi.org/project/carte/\" rel=\"nofollow\">pip</a>.</p>\n<pre>pip install carte\n</pre>\n<h3>From source using <a href=\"https://github.com/sdispater/poetry\" rel=\"nofollow\"><code>poetry</code></a></h3>\n<p><strong>Note:</strong> It is recommended to build <code>carte</code> in a virtual environment due to dependency version requirements.</p>\n<p>From the root of the repository, install the necessary dependencies via <code>poetry</code>:</p>\n<pre>poetry install\n</pre>\n<p>Then, build the wheel:</p>\n<pre>poetry build\n</pre>\n<p>Finally, outside of your virtual environment, install the wheel using <code>pip</code>:</p>\n<pre>pip install dist/carte-&lt;version&gt;-py3-none-any.whl\n</pre>\n<h2>Usage</h2>\n<p>Carte is built using resources which inherit from the <code>Resource</code> class. A <code>Carte</code> instance is instantiated with a list of the <code>Resource</code> types it will query:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">carte</span>\n\n<span class=\"n\">carte_instance</span> <span class=\"o\">=</span> <span class=\"n\">carte</span><span class=\"o\">.</span><span class=\"n\">Carte</span><span class=\"p\">([</span><span class=\"n\">my_resource_type</span><span class=\"p\">])</span>\n\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">carte_instance</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">List</span> <span class=\"n\">of</span> <span class=\"n\">coordinates</span> <span class=\"k\">as</span> <span class=\"n\">tuples</span><span class=\"o\">...</span><span class=\"p\">)</span>\n</pre>\n<p>Multiple <code>Carte</code> instances may be created, and resources will be shared between them by a backing <code>ResourceStore</code>.</p>\n<h3>Custom Resources</h3>\n<p>The flexibility of Carte lies in the <code>Resource</code> class, which queries are passed to sequentially via the <code>query</code> method. The results of each resource query are aggregated and passed to the next, allowing the creation of resources that mutate previous resources' results, such as translating a country's ISO 3166-1 identifier code into a full name.</p>\n<p>For examples of <code>Resource</code> classes, see the <code>resources</code> submodule.</p>\n<p>Defining your own <code>Resource</code> is as simple as inheriting from the <code>Resource</code> superclass, and implementing the <code>load</code> and <code>query</code> methods.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">carte.resources</span> <span class=\"kn\">import</span> <span class=\"n\">resource</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyCustomResource</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">Resource</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">load</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># do stuff...</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">query</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">coordinates</span><span class=\"p\">,</span> <span class=\"n\">results</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">dict</span><span class=\"p\">:</span>\n        <span class=\"c1\"># do other stuff...</span>\n        <span class=\"k\">return</span> <span class=\"n\">results</span>\n</pre>\n<h2>Testing</h2>\n<p>To run tests, execute the following from the root of the project:</p>\n<pre>poetry run pytest tests/\n</pre>\n<h2>License</h2>\n<p><a href=\"https://github.com/fourpeaksstudios/carte\" rel=\"nofollow\">Carte</a> is licensed under the <a href=\"https://github.com/fourpeaksstudios/carte/blob/master/LICENSE\" rel=\"nofollow\">GNU Lesser General Public License</a>.</p>\n<h2>Attribution</h2>\n<p><a href=\"https://github.com/fourpeaksstudios/carte\" rel=\"nofollow\">Carte</a> is inspired by <a href=\"https://bitbucket.org/richardpenman/reverse_geocode\" rel=\"nofollow\">reverse-geocode</a>.</p>\n\n          </div>"}, "last_serial": 6516862, "releases": {"0.2.2": [{"comment_text": "", "digests": {"md5": "52d609f848d850516ceeee6f4915d557", "sha256": "12474c409084e113e205ec097ab686e0e8de9dbcbc5900399144389ff18f97ee"}, "downloads": -1, "filename": "carte-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "52d609f848d850516ceeee6f4915d557", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 23298, "upload_time": "2020-01-24T23:39:32", "upload_time_iso_8601": "2020-01-24T23:39:32.630298Z", "url": "https://files.pythonhosted.org/packages/74/d8/72e9cca5a2aecdcffc994c5b1fc36df042bc5fd755a10242438706efdd53/carte-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c7309967eb93a9d28617e881fa60e28d", "sha256": "67c0ebbf75954c5a952e256729fe3d128e06916bd4731fdb7c121c8a227269f5"}, "downloads": -1, "filename": "carte-0.2.2.tar.gz", "has_sig": false, "md5_digest": "c7309967eb93a9d28617e881fa60e28d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 21536, "upload_time": "2020-01-24T23:39:34", "upload_time_iso_8601": "2020-01-24T23:39:34.418060Z", "url": "https://files.pythonhosted.org/packages/89/1d/bf7b118aa1d6be7e6fd8b388d1894a13a29ab1077f1d48e5a69d9c784df9/carte-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "52d609f848d850516ceeee6f4915d557", "sha256": "12474c409084e113e205ec097ab686e0e8de9dbcbc5900399144389ff18f97ee"}, "downloads": -1, "filename": "carte-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "52d609f848d850516ceeee6f4915d557", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 23298, "upload_time": "2020-01-24T23:39:32", "upload_time_iso_8601": "2020-01-24T23:39:32.630298Z", "url": "https://files.pythonhosted.org/packages/74/d8/72e9cca5a2aecdcffc994c5b1fc36df042bc5fd755a10242438706efdd53/carte-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c7309967eb93a9d28617e881fa60e28d", "sha256": "67c0ebbf75954c5a952e256729fe3d128e06916bd4731fdb7c121c8a227269f5"}, "downloads": -1, "filename": "carte-0.2.2.tar.gz", "has_sig": false, "md5_digest": "c7309967eb93a9d28617e881fa60e28d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 21536, "upload_time": "2020-01-24T23:39:34", "upload_time_iso_8601": "2020-01-24T23:39:34.418060Z", "url": "https://files.pythonhosted.org/packages/89/1d/bf7b118aa1d6be7e6fd8b388d1894a13a29ab1077f1d48e5a69d9c784df9/carte-0.2.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:23 2020"}