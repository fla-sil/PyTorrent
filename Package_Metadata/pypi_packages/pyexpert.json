{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# PyExpert 0.0.1\n\nThis is a small embeddable Prolog interpreter in Python3, designed primarily for\nimplementing explainable expert systems.\n\n\n\nUsage:\n\n```python\n\n# Imports\nfrom weak.prolog import prolog_driver,prolog_default_env,prolog_next_solution,prolog_core_library\n\n# Initialise environment\nenv = prolog_default_env()\n\n# Execute query\nret,vars = prolog_driver(env, '? append(A, B, [x,y]).')\nprint(vars)\n\n# Inspect all the remaining solutions\nwhile prolog_next_solution(env):\n    print(vars)\n\n```\n\n# Weak sets\n\nThe main feature of this implementation is a `weak set` - a value that unifies\nwith any other weak set, resulting in a new set containing elements of both\nsets. This is useful for implementing certain kinds of type systems and for\nhigher level hacks, such as tracing a Prolog execution (e.g., for a\nhuman-readable narration of an expert system decision), implementing\nconstraints, etc.\n\nFor example:\n\n```prolog\n? weak(a,W1), weak(b,W1), weak(c,W2), W1=W2.\n```\n\nresults in `W1=W2=[a,b,c]`\n\nSee `weak/narrate.py` for an example of an instrumentation of a Prolog code for\nproducing execution traces, or a \"narration\", which can then be used to\ngenerate, for example, a plain English narration of the expert system thought\nprocess.\n\nSee `tests/demo.py` for an example of constructing an explainable expert system.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "prolog", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyexpert", "package_url": "https://pypi.org/project/pyexpert/", "platform": "", "project_url": "https://pypi.org/project/pyexpert/", "project_urls": null, "release_url": "https://pypi.org/project/pyexpert/0.0.1/", "requires_dist": ["arpeggio"], "requires_python": "", "summary": "A small prolog implementation for embedded expert systems", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # PyExpert 0.0.1<br><br>This is a small embeddable Prolog interpreter in Python3, designed primarily for<br>implementing explainable expert systems.<br><br><br><br>Usage:<br><br>```python<br><br># Imports<br>from weak.prolog import prolog_driver,prolog_default_env,prolog_next_solution,prolog_core_library<br><br># Initialise environment<br>env = prolog_default_env()<br><br># Execute query<br>ret,vars = prolog_driver(env, '? append(A, B, [x,y]).')<br>print(vars)<br><br># Inspect all the remaining solutions<br>while prolog_next_solution(env):<br>    print(vars)<br><br>```<br><br># Weak sets<br><br>The main feature of this implementation is a `weak set` - a value that unifies<br>with any other weak set, resulting in a new set containing elements of both<br>sets. This is useful for implementing certain kinds of type systems and for<br>higher level hacks, such as tracing a Prolog execution (e.g., for a<br>human-readable narration of an expert system decision), implementing<br>constraints, etc.<br><br>For example:<br><br>```prolog<br>? weak(a,W1), weak(b,W1), weak(c,W2), W1=W2.<br>```<br><br>results in `W1=W2=[a,b,c]`<br><br>See `weak/narrate.py` for an example of an instrumentation of a Prolog code for<br>producing execution traces, or a \"narration\", which can then be used to<br>generate, for example, a plain English narration of the expert system thought<br>process.<br><br>See `tests/demo.py` for an example of constructing an explainable expert system.<br><br><br>\n          </div>"}, "last_serial": 3811656, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "adf369e763c1569eaa6714ee2cbb5002", "sha256": "2a4fd56728f96c4c37e0bc729b1f0c926cbb253e6c560015684e8c1c73120108"}, "downloads": -1, "filename": "pyexpert-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "adf369e763c1569eaa6714ee2cbb5002", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18397, "upload_time": "2018-04-26T19:49:06", "upload_time_iso_8601": "2018-04-26T19:49:06.682065Z", "url": "https://files.pythonhosted.org/packages/af/a1/3db7eca4c4e54acf8adb0720f084bcd21aa297bd5f4319f8dfdec1007219/pyexpert-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "267a554816d6fa231300b50b2a208bea", "sha256": "886b0c65017931e61104b0c6b01a85a43283d538b2dc26f8718283342fa24f6e"}, "downloads": -1, "filename": "pyexpert-0.0.1.tar.gz", "has_sig": false, "md5_digest": "267a554816d6fa231300b50b2a208bea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16288, "upload_time": "2018-04-26T19:49:08", "upload_time_iso_8601": "2018-04-26T19:49:08.010664Z", "url": "https://files.pythonhosted.org/packages/c7/d4/1bd024ae9479b562b64052de3691c6b6c7f919e55866a22800ed293defa7/pyexpert-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "adf369e763c1569eaa6714ee2cbb5002", "sha256": "2a4fd56728f96c4c37e0bc729b1f0c926cbb253e6c560015684e8c1c73120108"}, "downloads": -1, "filename": "pyexpert-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "adf369e763c1569eaa6714ee2cbb5002", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18397, "upload_time": "2018-04-26T19:49:06", "upload_time_iso_8601": "2018-04-26T19:49:06.682065Z", "url": "https://files.pythonhosted.org/packages/af/a1/3db7eca4c4e54acf8adb0720f084bcd21aa297bd5f4319f8dfdec1007219/pyexpert-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "267a554816d6fa231300b50b2a208bea", "sha256": "886b0c65017931e61104b0c6b01a85a43283d538b2dc26f8718283342fa24f6e"}, "downloads": -1, "filename": "pyexpert-0.0.1.tar.gz", "has_sig": false, "md5_digest": "267a554816d6fa231300b50b2a208bea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16288, "upload_time": "2018-04-26T19:49:08", "upload_time_iso_8601": "2018-04-26T19:49:08.010664Z", "url": "https://files.pythonhosted.org/packages/c7/d4/1bd024ae9479b562b64052de3691c6b6c7f919e55866a22800ed293defa7/pyexpert-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:06 2020"}