{"info": {"author": "Nail Ibragimov", "author_email": "ibragwork@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Real-time captcha-to-text decodings for asyncio\n===============================================\n.. image:: https://travis-ci.org/nibrag/aio_anticaptcha.svg?branch=master\n   :target: https://travis-ci.org/nibrag/aio_anticaptcha\n   :align: right\n\n.. image:: https://coveralls.io/repos/github/nibrag/aio_anticaptcha/badge.svg?branch=master\n   :target: https://coveralls.io/github/nibrag/aio_anticaptcha?branch=master\n   :align: right\n\nAPI documentation\n-----------------\n- https://anti-captcha.com/apidoc\n- http://antigate.com/?action=api#algo\n\nInstallation\n------------\nYou can install it using Pip:\n\n.. code-block::\n\n    pip install aio_anticaptcha\n\nIf you want the latest development version, you can install it from source:\n\n.. code-block::\n\n    git clone git@github.com:nibrag/aio_anticaptcha.git\n    cd aio_anticaptcha\n    python setup.py install\n\n**Requirements:**\n\n.. code-block::\n\n    python 3.4+\n    aiohttp\n\nUsage\n-----\nWith context manager\n\n.. code-block:: python\n\n    import asyncio\n    from aio_anticaptcha import AntiCaptcha, ServiceError\n\n    async def run(loop):\n        try:\n            with AntiCaptcha('API-KEY', loop=loop) as ac:\n                # io.IOBase\n                fh = open('captcha.jpg')\n                resolved, captcha_id = await ac.resolve(fh)\n\n                # or bytes, bytearray\n                bytes_buff = open('captcha.jpg', 'rb').read()\n                resolved, captcha_id = await ac.resolved(bytes_buff)\n        except ZeroBalanceError:\n            print('Zero balance')\n        except UserKeyError:\n            print('Invalid api key...')\n        except ServiceError as e:\n            print('Something else', str(e))\n\n    if __name__ == '__main__':\n        loop = asyncio.get_event_loop()\n        loop.run_until_complete(run(loop))\n        loop.close()\n\nWithout context manager\n\n.. code-block:: python\n\n    import asyncio\n    from aio_anticaptcha import AntiCaptcha, ServiceError\n\n    async def run(loop):\n        ac = AntiCaptcha('API-KEY', loop=loop)\n        try:\n            # io.IOBase\n            resolved, captcha_id = await ac.resolve(open('captcha.jpg'))\n\n            # or bytes, bytearray\n            bytes_buff = open('captcha.jpg', 'rb').read()\n            resolved, captcha_id = await ac.resolved(bytes_buff)\n        except ServiceError as e:\n            print(e)\n        finally:\n            # do'nt forget call close method\n            ac.close()\n\n    if __name__ == '__main__':\n        loop = asyncio.get_event_loop()\n        loop.run_until_complete(run(loop))\n        loop.close()\n\nIf you wish to complain about a mismatch results, use ``abuse`` method:\n\n.. code-block:: python\n\n    import asyncio\n    from aio_anticaptcha import AntiCaptcha\n\n    async def run(loop):\n        with AntiCaptcha('API-KEY', loop=loop) as ac:\n            resolved, captcha_id = await ac.resolve(open('captcha.jpg'))\n            await ac.abuse(captcha_id)\n\n    if __name__ == '__main__':\n        loop = asyncio.get_event_loop()\n        loop.run_until_complete(run(loop))\n        loop.close()\n\nAfter all manipulations, you can get your account balance:\n\n.. code-block:: python\n\n    import asyncio\n    from aio_anticaptcha import AntiCaptcha\n\n    async def run(loop):\n        with AntiCaptcha('API-KEY', loop=loop) as ac:\n            balance = await ac.get_balance()\n\n    if __name__ == '__main__':\n        loop = asyncio.get_event_loop()\n        loop.run_until_complete(run(loop))\n        loop.close()\n\nAdditional options for sending Captcha:\n---------------------------------------\n\nRead documentation about all available options:\nhttps://anti-captcha.com/apidoc\n\n.. code-block:: python\n\n    import asyncio\n    from aio_anticaptcha import AntiCaptcha\n\n    async def run(loop):\n        with AntiCaptcha('API-KEY', loop=loop) as ac:\n            resolved, captcha_id = await ac.resolve(open('captcha.jpg'), max_len=5, is_russian=True)\n\n    if __name__ == '__main__':\n        loop = asyncio.get_event_loop()\n        loop.run_until_complete(run(loop))\n        loop.close()\n\nCustomizing anticaptcha service\n-------------------------------\n\n.. code-block:: python\n\n    import asyncio\n    from aio_anticaptcha import AntiCaptcha\n\n    async def run(loop):\n        with AntiCaptcha('API-KEY', loop=loop, domain='antigate.com', port=80) as ac:\n            balance = await ac.get_balance()\n\n    if __name__ == '__main__':\n        loop = asyncio.get_event_loop()\n        loop.run_until_complete(run(loop))\n        loop.close()\n\nAntiGate.com supported\n----------------------\n\n.. code-block:: python\n\n    import asyncio\n    from aio_anticaptcha import AntiGate\n\n    async def run(loop):\n        with AntiGate('API-KEY', loop=loop) as ag:\n            balance = await ag.get_balance()\n\n    if __name__ == '__main__':\n        loop = asyncio.get_event_loop()\n        loop.run_until_complete(run(loop))\n        loop.close()", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nibrag/aio_anticaptcha", "keywords": "antigate captcha anticaptcha", "license": "Apache 2", "maintainer": null, "maintainer_email": null, "name": "aio_anticaptcha", "package_url": "https://pypi.org/project/aio_anticaptcha/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/aio_anticaptcha/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/nibrag/aio_anticaptcha"}, "release_url": "https://pypi.org/project/aio_anticaptcha/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Real-time captcha-to-text decodings", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/nibrag/aio_anticaptcha\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/nibrag/aio_anticaptcha.svg?branch=master\" class=\"align-right\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/14a90d02ebb75b1701ee29c4ca60810f857e229f/68747470733a2f2f7472617669732d63692e6f72672f6e69627261672f61696f5f616e7469636170746368612e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/nibrag/aio_anticaptcha?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/nibrag/aio_anticaptcha/badge.svg?branch=master\" class=\"align-right\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/86cb38672e0b833a4f737cec16df56a6c162ebef/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6e69627261672f61696f5f616e7469636170746368612f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"api-documentation\">\n<h2>API documentation</h2>\n<ul>\n<li><a href=\"https://anti-captcha.com/apidoc\" rel=\"nofollow\">https://anti-captcha.com/apidoc</a></li>\n<li><a href=\"http://antigate.com/?action=api#algo\" rel=\"nofollow\">http://antigate.com/?action=api#algo</a></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install it using Pip:</p>\n<pre>pip install aio_anticaptcha\n</pre>\n<p>If you want the latest development version, you can install it from source:</p>\n<pre>git clone git@github.com:nibrag/aio_anticaptcha.git\ncd aio_anticaptcha\npython setup.py install\n</pre>\n<p><strong>Requirements:</strong></p>\n<pre>python 3.4+\naiohttp\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>With context manager</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aio_anticaptcha</span> <span class=\"kn\">import</span> <span class=\"n\">AntiCaptcha</span><span class=\"p\">,</span> <span class=\"n\">ServiceError</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">):</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">with</span> <span class=\"n\">AntiCaptcha</span><span class=\"p\">(</span><span class=\"s1\">'API-KEY'</span><span class=\"p\">,</span> <span class=\"n\">loop</span><span class=\"o\">=</span><span class=\"n\">loop</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">ac</span><span class=\"p\">:</span>\n            <span class=\"c1\"># io.IOBase</span>\n            <span class=\"n\">fh</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'captcha.jpg'</span><span class=\"p\">)</span>\n            <span class=\"n\">resolved</span><span class=\"p\">,</span> <span class=\"n\">captcha_id</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">ac</span><span class=\"o\">.</span><span class=\"n\">resolve</span><span class=\"p\">(</span><span class=\"n\">fh</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># or bytes, bytearray</span>\n            <span class=\"n\">bytes_buff</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'captcha.jpg'</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n            <span class=\"n\">resolved</span><span class=\"p\">,</span> <span class=\"n\">captcha_id</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">ac</span><span class=\"o\">.</span><span class=\"n\">resolved</span><span class=\"p\">(</span><span class=\"n\">bytes_buff</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"n\">ZeroBalanceError</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Zero balance'</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"n\">UserKeyError</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Invalid api key...'</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"n\">ServiceError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Something else'</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">))</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">))</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<p>Without context manager</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aio_anticaptcha</span> <span class=\"kn\">import</span> <span class=\"n\">AntiCaptcha</span><span class=\"p\">,</span> <span class=\"n\">ServiceError</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">):</span>\n    <span class=\"n\">ac</span> <span class=\"o\">=</span> <span class=\"n\">AntiCaptcha</span><span class=\"p\">(</span><span class=\"s1\">'API-KEY'</span><span class=\"p\">,</span> <span class=\"n\">loop</span><span class=\"o\">=</span><span class=\"n\">loop</span><span class=\"p\">)</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"c1\"># io.IOBase</span>\n        <span class=\"n\">resolved</span><span class=\"p\">,</span> <span class=\"n\">captcha_id</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">ac</span><span class=\"o\">.</span><span class=\"n\">resolve</span><span class=\"p\">(</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'captcha.jpg'</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># or bytes, bytearray</span>\n        <span class=\"n\">bytes_buff</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'captcha.jpg'</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n        <span class=\"n\">resolved</span><span class=\"p\">,</span> <span class=\"n\">captcha_id</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">ac</span><span class=\"o\">.</span><span class=\"n\">resolved</span><span class=\"p\">(</span><span class=\"n\">bytes_buff</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"n\">ServiceError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span>\n    <span class=\"k\">finally</span><span class=\"p\">:</span>\n        <span class=\"c1\"># do'nt forget call close method</span>\n        <span class=\"n\">ac</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">))</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<p>If you wish to complain about a mismatch results, use <tt>abuse</tt> method:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aio_anticaptcha</span> <span class=\"kn\">import</span> <span class=\"n\">AntiCaptcha</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"n\">AntiCaptcha</span><span class=\"p\">(</span><span class=\"s1\">'API-KEY'</span><span class=\"p\">,</span> <span class=\"n\">loop</span><span class=\"o\">=</span><span class=\"n\">loop</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">ac</span><span class=\"p\">:</span>\n        <span class=\"n\">resolved</span><span class=\"p\">,</span> <span class=\"n\">captcha_id</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">ac</span><span class=\"o\">.</span><span class=\"n\">resolve</span><span class=\"p\">(</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'captcha.jpg'</span><span class=\"p\">))</span>\n        <span class=\"k\">await</span> <span class=\"n\">ac</span><span class=\"o\">.</span><span class=\"n\">abuse</span><span class=\"p\">(</span><span class=\"n\">captcha_id</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">))</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<p>After all manipulations, you can get your account balance:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aio_anticaptcha</span> <span class=\"kn\">import</span> <span class=\"n\">AntiCaptcha</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"n\">AntiCaptcha</span><span class=\"p\">(</span><span class=\"s1\">'API-KEY'</span><span class=\"p\">,</span> <span class=\"n\">loop</span><span class=\"o\">=</span><span class=\"n\">loop</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">ac</span><span class=\"p\">:</span>\n        <span class=\"n\">balance</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">ac</span><span class=\"o\">.</span><span class=\"n\">get_balance</span><span class=\"p\">()</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">))</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"additional-options-for-sending-captcha\">\n<h2>Additional options for sending Captcha:</h2>\n<p>Read documentation about all available options:\n<a href=\"https://anti-captcha.com/apidoc\" rel=\"nofollow\">https://anti-captcha.com/apidoc</a></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aio_anticaptcha</span> <span class=\"kn\">import</span> <span class=\"n\">AntiCaptcha</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"n\">AntiCaptcha</span><span class=\"p\">(</span><span class=\"s1\">'API-KEY'</span><span class=\"p\">,</span> <span class=\"n\">loop</span><span class=\"o\">=</span><span class=\"n\">loop</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">ac</span><span class=\"p\">:</span>\n        <span class=\"n\">resolved</span><span class=\"p\">,</span> <span class=\"n\">captcha_id</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">ac</span><span class=\"o\">.</span><span class=\"n\">resolve</span><span class=\"p\">(</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'captcha.jpg'</span><span class=\"p\">),</span> <span class=\"n\">max_len</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">is_russian</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">))</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"customizing-anticaptcha-service\">\n<h2>Customizing anticaptcha service</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aio_anticaptcha</span> <span class=\"kn\">import</span> <span class=\"n\">AntiCaptcha</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"n\">AntiCaptcha</span><span class=\"p\">(</span><span class=\"s1\">'API-KEY'</span><span class=\"p\">,</span> <span class=\"n\">loop</span><span class=\"o\">=</span><span class=\"n\">loop</span><span class=\"p\">,</span> <span class=\"n\">domain</span><span class=\"o\">=</span><span class=\"s1\">'antigate.com'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">80</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">ac</span><span class=\"p\">:</span>\n        <span class=\"n\">balance</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">ac</span><span class=\"o\">.</span><span class=\"n\">get_balance</span><span class=\"p\">()</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">))</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"antigate-com-supported\">\n<h2>AntiGate.com supported</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aio_anticaptcha</span> <span class=\"kn\">import</span> <span class=\"n\">AntiGate</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"n\">AntiGate</span><span class=\"p\">(</span><span class=\"s1\">'API-KEY'</span><span class=\"p\">,</span> <span class=\"n\">loop</span><span class=\"o\">=</span><span class=\"n\">loop</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">ag</span><span class=\"p\">:</span>\n        <span class=\"n\">balance</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">ag</span><span class=\"o\">.</span><span class=\"n\">get_balance</span><span class=\"p\">()</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">))</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2159464, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "383b41d35e7e14d4e7520c356b5176cd", "sha256": "c1e486d6a02cf6f9a9f2999a334a9c0ade4b9b812f127c1eacf3a1c0dbd92867"}, "downloads": -1, "filename": "aio_anticaptcha-0.1.0.zip", "has_sig": false, "md5_digest": "383b41d35e7e14d4e7520c356b5176cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7879, "upload_time": "2016-06-09T21:09:03", "upload_time_iso_8601": "2016-06-09T21:09:03.567028Z", "url": "https://files.pythonhosted.org/packages/d1/97/57dac0c4a9eb8f23e80292a089da2f0386fbd366a158867fceb324cf3239/aio_anticaptcha-0.1.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "383b41d35e7e14d4e7520c356b5176cd", "sha256": "c1e486d6a02cf6f9a9f2999a334a9c0ade4b9b812f127c1eacf3a1c0dbd92867"}, "downloads": -1, "filename": "aio_anticaptcha-0.1.0.zip", "has_sig": false, "md5_digest": "383b41d35e7e14d4e7520c356b5176cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7879, "upload_time": "2016-06-09T21:09:03", "upload_time_iso_8601": "2016-06-09T21:09:03.567028Z", "url": "https://files.pythonhosted.org/packages/d1/97/57dac0c4a9eb8f23e80292a089da2f0386fbd366a158867fceb324cf3239/aio_anticaptcha-0.1.0.zip", "yanked": false}], "timestamp": "Thu May  7 16:21:49 2020"}