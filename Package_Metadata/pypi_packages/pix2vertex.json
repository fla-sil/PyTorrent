{"info": {"author": "Elad Richardson, Matan Sela", "author_email": "elad.richardson@gmail.com, matansel@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Unrestricted Facial Geometry Reconstruction Using Image-to-Image Translation - Official PyTorch Implementation\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/eladrich/pix2vertex.pytorch/mybinder-test?filepath=reconstruct_pipeline.ipynb)\n[![PyPI version](https://badge.fury.io/py/pix2vertex.svg)](https://badge.fury.io/py/pix2vertex)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\n\n[[Arxiv]](https://arxiv.org/pdf/1703.10131.pdf) [[Video]](https://www.youtube.com/watch?v=6lUdSVcBB-k)\n\n\nEvaluation code for Unrestricted Facial Geometry Reconstruction Using Image-to-Image Translation. Finally ported to PyTorch!\n\n<img src=\"examples/jupyter_gif.gif\" width=\"900px\"/>\n\n\n## Recent Updates\n\n\n**`2020.05.07`**: Added a wheel package!\n\n**`2020.05.06`**: Added [myBinder](https://mybinder.org/v2/gh/eladrich/pix2vertex.pytorch/mybinder-test?filepath=reconstruct_pipeline.ipynb) version for quick testing of the model\n\n**`2020.04.30`**: Initial pyTorch release\n\n# What's in this release?\n\nThe [original pix2vertex repo](https://github.com/matansel/pix2vertex) was composed of three parts\n - A network to perform the image to depth + correspondence maps trained on synthetic facial data\n - A non-rigid ICP scheme for converting the output maps to a full 3D Mesh  \n - A shape-from-shading scheme for adding fine mesoscopic details\n\n\n This repo currently contains our image-to-image network with weights and model ported from the `lua` version and a simple `python` postprocessing scheme.\n - The released network was trained on a combination of synthetic images and unlabeled real images for some extra robustness :)\n\n## Installation\nInstallation from PyPi\n```bash\n    $ pip install pix2vertex\n```\nInstallation from source\n```bash\n    $ git clone https://github.com/eladrich/pix2vertex.pytorch.git\n    $ cd pix2vertex.pytorch\n    $ python setup.py install\n```\n## Usage\nThe quickest way to try `p2v` is using the `reconstruct` method over an input image.\n```\n import pix2vertex as p2v\n from imageio import imread\n image = imread(<some image file>)\n\n result, crop = p2v.reconstruct(image)\n\n p2v.vis_depth_interactive(result['Z_surface'])\n```\nFor a more complete example see the `reconstruct_pipeline` notebook. You can give it a try without any installations using our [binder port](https://mybinder.org/v2/gh/eladrich/pix2vertex.pytorch/mybinder-test?filepath=reconstruct_pipeline.ipynb).\n\n### Pretrained Model\nModels can be downloaded from these links:\n- [pix2vertex model](https://drive.google.com/open?id=1op5_zyH4CWm_JFDdCUPZM4X-A045ETex)\n- [dlib landmark predictor](http://dlib.net/files/shape_predictor_68_face_landmarks.dat.bz2) - note that the dlib model has its own license.\n\nIf no model path is specified the package automagically downloads the required models.\n\n\n## TODOs\n- [x] Port Torch model to pyTorch\n- [x] Release an inference notebook (using [K3D](https://github.com/K3D-tools/K3D-jupyter))\n- [x] Add requirements\n- [x] Pack as wheel\n- [x] Ported to MyBinder\n- [ ] Port the Shape-from-Shading method used in our matlab paper\n- [ ] Write a short blog about the revised training scheme\n\n## Citation\nIf you use this code for your research, please cite our paper <a href=\"https://arxiv.org/pdf/1703.10131.pdf\">Unrestricted Facial Geometry Reconstruction Using Image-to-Image Translation</a>:\n\n```\n@article{sela2017unrestricted,\n  title={Unrestricted Facial Geometry Reconstruction Using Image-to-Image Translation},\n  author={Sela, Matan and Richardson, Elad and Kimmel, Ron},\n  journal={arxiv},\n  year={2017}\n}\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/eladrich/pix2vertex.pytorch", "keywords": "pix2vertex face reconstruction 3d pytorch pip package", "license": "", "maintainer": "", "maintainer_email": "", "name": "pix2vertex", "package_url": "https://pypi.org/project/pix2vertex/", "platform": "", "project_url": "https://pypi.org/project/pix2vertex/", "project_urls": {"Homepage": "https://github.com/eladrich/pix2vertex.pytorch"}, "release_url": "https://pypi.org/project/pix2vertex/1.0.3/", "requires_dist": null, "requires_python": ">=3.4", "summary": "3D face reconstruction from a single image", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Unrestricted Facial Geometry Reconstruction Using Image-to-Image Translation - Official PyTorch Implementation</h1>\n<p><a href=\"https://mybinder.org/v2/gh/eladrich/pix2vertex.pytorch/mybinder-test?filepath=reconstruct_pipeline.ipynb\" rel=\"nofollow\"><img alt=\"Binder\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85e91bbb928104e4ce317951541520c6b9c170e1/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667\"></a>\n<a href=\"https://badge.fury.io/py/pix2vertex\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6c0c7042f65549a34b4b955a6f8d413c89867784/68747470733a2f2f62616467652e667572792e696f2f70792f706978327665727465782e737667\"></a>\n<a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a></p>\n<p><a href=\"https://arxiv.org/pdf/1703.10131.pdf\" rel=\"nofollow\">[Arxiv]</a> <a href=\"https://www.youtube.com/watch?v=6lUdSVcBB-k\" rel=\"nofollow\">[Video]</a></p>\n<p>Evaluation code for Unrestricted Facial Geometry Reconstruction Using Image-to-Image Translation. Finally ported to PyTorch!</p>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3f64c68c6724d281a6ab9c6c15eff8a753d84998/6578616d706c65732f6a7570797465725f6769662e676966\" width=\"900px\">\n<h2>Recent Updates</h2>\n<p><strong><code>2020.05.07</code></strong>: Added a wheel package!</p>\n<p><strong><code>2020.05.06</code></strong>: Added <a href=\"https://mybinder.org/v2/gh/eladrich/pix2vertex.pytorch/mybinder-test?filepath=reconstruct_pipeline.ipynb\" rel=\"nofollow\">myBinder</a> version for quick testing of the model</p>\n<p><strong><code>2020.04.30</code></strong>: Initial pyTorch release</p>\n<h1>What's in this release?</h1>\n<p>The <a href=\"https://github.com/matansel/pix2vertex\" rel=\"nofollow\">original pix2vertex repo</a> was composed of three parts</p>\n<ul>\n<li>A network to perform the image to depth + correspondence maps trained on synthetic facial data</li>\n<li>A non-rigid ICP scheme for converting the output maps to a full 3D Mesh</li>\n<li>A shape-from-shading scheme for adding fine mesoscopic details</li>\n</ul>\n<p>This repo currently contains our image-to-image network with weights and model ported from the <code>lua</code> version and a simple <code>python</code> postprocessing scheme.</p>\n<ul>\n<li>The released network was trained on a combination of synthetic images and unlabeled real images for some extra robustness :)</li>\n</ul>\n<h2>Installation</h2>\n<p>Installation from PyPi</p>\n<pre>    $ pip install pix2vertex\n</pre>\n<p>Installation from source</p>\n<pre>    $ git clone https://github.com/eladrich/pix2vertex.pytorch.git\n    $ <span class=\"nb\">cd</span> pix2vertex.pytorch\n    $ python setup.py install\n</pre>\n<h2>Usage</h2>\n<p>The quickest way to try <code>p2v</code> is using the <code>reconstruct</code> method over an input image.</p>\n<pre><code> import pix2vertex as p2v\n from imageio import imread\n image = imread(&lt;some image file&gt;)\n\n result, crop = p2v.reconstruct(image)\n\n p2v.vis_depth_interactive(result['Z_surface'])\n</code></pre>\n<p>For a more complete example see the <code>reconstruct_pipeline</code> notebook. You can give it a try without any installations using our <a href=\"https://mybinder.org/v2/gh/eladrich/pix2vertex.pytorch/mybinder-test?filepath=reconstruct_pipeline.ipynb\" rel=\"nofollow\">binder port</a>.</p>\n<h3>Pretrained Model</h3>\n<p>Models can be downloaded from these links:</p>\n<ul>\n<li><a href=\"https://drive.google.com/open?id=1op5_zyH4CWm_JFDdCUPZM4X-A045ETex\" rel=\"nofollow\">pix2vertex model</a></li>\n<li><a href=\"http://dlib.net/files/shape_predictor_68_face_landmarks.dat.bz2\" rel=\"nofollow\">dlib landmark predictor</a> - note that the dlib model has its own license.</li>\n</ul>\n<p>If no model path is specified the package automagically downloads the required models.</p>\n<h2>TODOs</h2>\n<ul>\n<li>[x] Port Torch model to pyTorch</li>\n<li>[x] Release an inference notebook (using <a href=\"https://github.com/K3D-tools/K3D-jupyter\" rel=\"nofollow\">K3D</a>)</li>\n<li>[x] Add requirements</li>\n<li>[x] Pack as wheel</li>\n<li>[x] Ported to MyBinder</li>\n<li>[ ] Port the Shape-from-Shading method used in our matlab paper</li>\n<li>[ ] Write a short blog about the revised training scheme</li>\n</ul>\n<h2>Citation</h2>\n<p>If you use this code for your research, please cite our paper <a href=\"https://arxiv.org/pdf/1703.10131.pdf\" rel=\"nofollow\">Unrestricted Facial Geometry Reconstruction Using Image-to-Image Translation</a>:</p>\n<pre><code>@article{sela2017unrestricted,\n  title={Unrestricted Facial Geometry Reconstruction Using Image-to-Image Translation},\n  author={Sela, Matan and Richardson, Elad and Kimmel, Ron},\n  journal={arxiv},\n  year={2017}\n}\n</code></pre>\n\n          </div>"}, "last_serial": 7183622, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "a8bd504d59b0a304bdcb17d334d7fb0c", "sha256": "5e0adb6404655a4d35c4bedc81fc4b955e6ee5feffd3c3e18e0c82a2e01d2a8c"}, "downloads": -1, "filename": "pix2vertex-1.0.0-py3.7.egg", "has_sig": false, "md5_digest": "a8bd504d59b0a304bdcb17d334d7fb0c", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.6", "size": 19679, "upload_time": "2020-05-06T16:59:42", "upload_time_iso_8601": "2020-05-06T16:59:42.205794Z", "url": "https://files.pythonhosted.org/packages/39/da/c1159217f5001812f4eca8271ae71c020b191c942c0d5a4e45d1455a42ce/pix2vertex-1.0.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "93e3b5d567e1768d8d84a0d68ff946de", "sha256": "335e77528ada54a5fccc131f120068b0cab6e397ed13999d15baea5b64d1fad2"}, "downloads": -1, "filename": "pix2vertex-1.0.0.tar.gz", "has_sig": false, "md5_digest": "93e3b5d567e1768d8d84a0d68ff946de", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8946, "upload_time": "2020-05-06T16:55:43", "upload_time_iso_8601": "2020-05-06T16:55:43.756643Z", "url": "https://files.pythonhosted.org/packages/1e/34/a668dfe73a75ddb094507f1d74c3230ce57c7e790ffc483edeb0f7578dce/pix2vertex-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "76ed28716cd0bdf0b9e4990c5320fb65", "sha256": "34fc36fd8ac2107373e7acaf03a7edd4c51647fe709f713350f394f78cffb170"}, "downloads": -1, "filename": "pix2vertex-1.0.1.tar.gz", "has_sig": false, "md5_digest": "76ed28716cd0bdf0b9e4990c5320fb65", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8957, "upload_time": "2020-05-06T17:03:22", "upload_time_iso_8601": "2020-05-06T17:03:22.975421Z", "url": "https://files.pythonhosted.org/packages/c5/f9/ac19e29d49a5acb695d49bb8677585235ada0730ecc2d5532013d46056f1/pix2vertex-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "85db54390e64472c93b409c74af9b5d7", "sha256": "00c0421d2b5ad705255605d26df63b7539afc4f637955d0c3d37cf81864df526"}, "downloads": -1, "filename": "pix2vertex-1.0.2.tar.gz", "has_sig": false, "md5_digest": "85db54390e64472c93b409c74af9b5d7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9041, "upload_time": "2020-05-06T17:07:45", "upload_time_iso_8601": "2020-05-06T17:07:45.048872Z", "url": "https://files.pythonhosted.org/packages/ad/04/b27602e3ea1f815fd5f0c62f8390fcc929e2414dfa983f35ed4e32d612fc/pix2vertex-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "5f7bee71d29179b5312764feebad602a", "sha256": "fba56921e77401ed903e3861da3ae66784fdbfcbe4713495b5aebb57d5b6c330"}, "downloads": -1, "filename": "pix2vertex-1.0.3.tar.gz", "has_sig": false, "md5_digest": "5f7bee71d29179b5312764feebad602a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 11326, "upload_time": "2020-05-06T21:31:15", "upload_time_iso_8601": "2020-05-06T21:31:15.439576Z", "url": "https://files.pythonhosted.org/packages/0f/4b/32c0fb595527fd78adfb405a116e31c28330c88f702fcedc477cf2209598/pix2vertex-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5f7bee71d29179b5312764feebad602a", "sha256": "fba56921e77401ed903e3861da3ae66784fdbfcbe4713495b5aebb57d5b6c330"}, "downloads": -1, "filename": "pix2vertex-1.0.3.tar.gz", "has_sig": false, "md5_digest": "5f7bee71d29179b5312764feebad602a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 11326, "upload_time": "2020-05-06T21:31:15", "upload_time_iso_8601": "2020-05-06T21:31:15.439576Z", "url": "https://files.pythonhosted.org/packages/0f/4b/32c0fb595527fd78adfb405a116e31c28330c88f702fcedc477cf2209598/pix2vertex-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:56 2020"}