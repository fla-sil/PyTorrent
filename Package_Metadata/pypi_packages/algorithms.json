{"info": {"author": "Algorithms Team & Contributors", "author_email": "kwk236@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "<p align=\"center\"><img width=\"40%\" src=\"https://github.com/keon/algorithms/docs/source/_static/algorithms_logo.png\" /></p>\n\nEnglish | [\u7b80\u4f53\u4e2d\u6587](README_CN.md) | [Deutsch](README_GE.md) | [\u65e5\u672c\u8a9e](README_JP.md) | [\ud55c\uad6d\uc5b4](README_KR.md)\n\n[![Open Source Helpers](https://www.codetriage.com/keon/algorithms/badges/users.svg)](https://www.codetriage.com/keon/algorithms)\n[![Build Status](https://travis-ci.org/keon/algorithms.svg?branch=master)](https://travis-ci.org/keon/algorithms)\n[![Coverage Status](https://coveralls.io/repos/github/keon/algorithms/badge.svg?branch=master)](https://coveralls.io/github/keon/algorithms?branch=master)\n\nPythonic Data Structures and Algorithms\n=========================================\n\nMinimal and clean example implementations of data structures and algorithms in Python 3.\n\n## Contributing\nThanks for your interest in contributing! There are many ways to contribute to this project. [Get started here](CONTRIBUTING.md)\n\n\n## Tests\n\n### Use unittest\nFor running all tests write down:\n\n    $ python3 -m unittest discover tests\n\nFor running some specific tests you can do this as following (Ex: sort):\n\n    $ python3 -m unittest tests.test_sort\n\n### Use pytest\nFor running all tests write down:\n\n    $ python3 -m pytest tests\n\n## Install\nIf you want to use the API algorithms in your code, it is as simple as:\n\n    $ pip3 install algorithms\n\nYou can test by creating a python file: (Ex: use `merge_sort` in `sort`)\n\n```python3\nfrom algorithms.sort import merge_sort\n\nif __name__ == \"__main__\":\n    my_list = [1, 8, 3, 5, 6]\n    my_list = merge_sort(my_list)\n    print(my_list)\n```\n\n## Uninstall\nIf you want to uninstall algorithms, it is as simple as:\n\n    $ pip3 uninstall -y algorithms\n\n## List of Implementations\n\n- [arrays](algorithms/arrays)\n    - [delete_nth](algorithms/arrays/delete_nth.py)\n    - [flatten](algorithms/arrays/flatten.py)\n    - [garage](algorithms/arrays/garage.py)\n    - [josephus_problem](algorithms/arrays/josephus.py)\n    - [longest_non_repeat](algorithms/arrays/longest_non_repeat.py/)\n    - [max_ones_index](algorithms/arrays/max_ones_index.py)\n    - [merge_intervals](algorithms/arrays/merge_intervals.py)\n    - [missing_ranges](algorithms/arrays/missing_ranges.py)\n    - [plus_one](algorithms/arrays/plus_one.py)\n \u00a0 \u00a0- [rotate](algorithms/arrays/rotate.py)\n    - [summarize_ranges](algorithms/arrays/summarize_ranges.py)\n    - [three_sum](algorithms/arrays/three_sum.py)\n    - [two_sum](algorithms/arrays/two_sum.py)\n    - [move_zeros](algorithms/arrays/move_zeros.py)\n- [backtrack](algorithms/backtrack)\n    - [general_solution.md](algorithms/backtrack/)\n    - [anagram](algorithms/backtrack/anagram.py)\n    - [array_sum_combinations](algorithms/backtrack/array_sum_combinations.py)\n    - [combination_sum](algorithms/backtrack/combination_sum.py)\n    - [expression_add_operators](algorithms/backtrack/expression_add_operators.py)\n    - [factor_combinations](algorithms/backtrack/factor_combinations.py)\n    - [generate_abbreviations](algorithms/backtrack/generate_abbreviations.py)\n    - [generate_parenthesis](algorithms/backtrack/generate_parenthesis.py)\n    - [letter_combination](algorithms/backtrack/letter_combination.py)\n    - [palindrome_partitioning](algorithms/backtrack/palindrome_partitioning.py)\n    - [pattern_match](algorithms/backtrack/pattern_match.py)\n    - [permute](algorithms/backtrack/permute.py)\n    - [permute_unique](algorithms/backtrack/permute_unique.py)\n    - [subsets](algorithms/backtrack/subsets.py)\n    - [subsets_unique](algorithms/backtrack/subsets_unique.py)\n- [bfs](algorithms/bfs)\n    - [shortest_distance_from_all_buildings](algorithms/bfs/shortest_distance_from_all_buildings.py)\n    - [word_ladder](algorithms/bfs/word_ladder.py)\n- [bit](algorithms/bit)\n    - [add_bitwise_operator](algorithms/bit/add_bitwise_operator.py)\n    - [bit_operation](algorithms/bit/bit_operation.py)\n    - [bytes_int_conversion](algorithms/bit/bytes_int_conversion.py)\n    - [count_flips_to_convert](algorithms/bit/count_flips_to_convert.py)\n    - [count_ones](algorithms/bit/count_ones.py)\n    - [find_difference](algorithms/bit/find_difference.py)\n    - [find_missing_number](algorithms/bit/find_missing_number.py)\n    - [flip_bit_longest_sequence](algorithms/bit/flip_bit_longest_sequence.py)\n    - [power_of_two](algorithms/bit/power_of_two.py)\n    - [reverse_bits](algorithms/bit/reverse_bits.py)\n    - [single_number](algorithms/bit/single_number.py)\n    - [single_number2](algorithms/bit/single_number2.py)\n    - [single_number3](algorithms/bit/single_number3.py)\n    - [subsets](algorithms/bit/subsets.py)\n    - [swap_pair](algorithms/bit/swap_pair.py)\n    - [has_alternative_bit](algorithms/bit/has_alternative_bit.py)\n    - [insert_bit](algorithms/bit/insert_bit.py)\n    - [remove_bit](algorithms/bit/remove_bit.py)\n- [calculator](algorithms/calculator)\n    - [math_parser](algorithms/calculator/math_parser.py)\n- [dfs](algorithms/dfs)\n    - [all_factors](algorithms/dfs/all_factors.py)\n    - [count_islands](algorithms/dfs/count_islands.py)\n    - [pacific_atlantic](algorithms/dfs/pacific_atlantic.py)\n    - [sudoku_solver](algorithms/dfs/sudoku_solver.py)\n    - [walls_and_gates](algorithms/dfs/walls_and_gates.py)\n- [dp](algorithms/dp)\n    - [buy_sell_stock](algorithms/dp/buy_sell_stock.py)\n    - [climbing_stairs](algorithms/dp/climbing_stairs.py)\n    - [coin_change](algorithms/dp/coin_change.py)\n    - [combination_sum](algorithms/dp/combination_sum.py)\n    - [egg_drop](algorithms/dp/egg_drop.py)\n    - [house_robber](algorithms/dp/house_robber.py)\n    - [job_scheduling](algorithms/dp/job_scheduling.py)\n    - [knapsack](algorithms/dp/knapsack.py)\n    - [longest_increasing](algorithms/dp/longest_increasing.py)\n    - [matrix_chain_order](algorithms/dp/matrix_chain_order.py)\n    - [max_product_subarray](algorithms/dp/max_product_subarray.py)\n    - [max_subarray](algorithms/dp/max_subarray.py)\n    - [min_cost_path](algorithms/dp/min_cost_path.py)\n    - [num_decodings](algorithms/dp/num_decodings.py)\n    - [regex_matching](algorithms/dp/regex_matching.py)\n    - [rod_cut](algorithms/dp/rod_cut.py)\n    - [word_break](algorithms/dp/word_break.py)\n    - [fibonacci](algorithms/dp/fib.py)\n- [graph](algorithms/graph)\n    - [strongly_connected](algorithms/graph/checkDiGraphStronglyConnected.py)\n    - [clone_graph](algorithms/graph/clone_graph.py)\n    - [cycle_detection](algorithms/graph/cycle_detection.py)\n    - [find_all_cliques](algorithms/graph/find_all_cliques.py)\n    - [find_path](algorithms/graph/find_path.py)\n    - [graph](algorithms/graph/graph.py)\n    - [markov_chain](algorithms/graph/markov_chain.py)\n    - [minimum_spanning_tree](algorithms/graph/minimum_spanning_tree.py)\n    - [satisfiability](algorithms/graph/satisfiability.py)\n    - [tarjan](algorithms/graph/tarjan.py)\n    - [traversal](algorithms/graph/traversal.py)\n- [heap](algorithms/heap)\n    - [merge_sorted_k_lists](algorithms/heap/merge_sorted_k_lists.py)\n    - [skyline](algorithms/heap/skyline.py)\n    - [sliding_window_max](algorithms/heap/sliding_window_max.py)\n    - [binary_heap](algorithms/heap/binary_heap.py)\n- [linkedlist](algorithms/linkedlist)\n    - [add_two_numbers](algorithms/linkedlist/add_two_numbers.py)\n    - [copy_random_pointer](algorithms/linkedlist/copy_random_pointer.py)\n    - [delete_node](algorithms/linkedlist/delete_node.py)\n    - [first_cyclic_node](algorithms/linkedlist/first_cyclic_node.py)\n    - [is_cyclic](algorithms/linkedlist/is_cyclic.py)\n    - [is_palindrome](algorithms/linkedlist/is_palindrome.py)\n    - [kth_to_last](algorithms/linkedlist/kth_to_last.py)\n    - [linkedlist](algorithms/linkedlist/linkedlist.py)\n    - [remove_duplicates](algorithms/linkedlist/remove_duplicates.py)\n    - [reverse](algorithms/linkedlist/reverse.py)\n    - [rotate_list](algorithms/linkedlist/rotate_list.py)\n    - [swap_in_pairs](algorithms/linkedlist/swap_in_pairs.py)\n    - [is_sorted](algorithms/linkedlist/is_sorted.py)\n    - [remove_range](algorithms/linkedlist/remove_range.py)\n- [map](algorithms/map)\n    - [hashtable](algorithms/map/hashtable.py)\n    - [separate_chaining_hashtable](algorithms/map/separate_chaining_hashtable.py)\n    - [longest_common_subsequence](algorithms/map/longest_common_subsequence.py)\n    - [randomized_set](algorithms/map/randomized_set.py)\n    - [valid_sudoku](algorithms/map/valid_sudoku.py)\n- [maths](algorithms/maths)\n    - [base_conversion](algorithms/maths/base_conversion.py)\n    - [combination](algorithms/maths/combination.py)\n    - [extended_gcd](algorithms/maths/extended_gcd.py)\n    - [factorial](algorithms/maths/factorial.py)    \n    - [gcd/lcm](algorithms/maths/gcd.py)\n    - [generate_strobogrammtic](algorithms/maths/generate_strobogrammtic.py)\n    - [is_strobogrammatic](algorithms/maths/is_strobogrammatic.py)\n    - [next_bigger](algorithms/maths/next_bigger.py)\n    - [next_perfect_square](algorithms/maths/next_perfect_square.py)\n    - [nth_digit](algorithms/maths/nth_digit.py)\n    - [prime_check](algorithms/maths/prime_check.py)\n    - [primes_sieve_of_eratosthenes](algorithms/maths/primes_sieve_of_eratosthenes.py)\n    - [pythagoras](algorithms/maths/pythagoras.py)\n    - [rabin_miller](algorithms/maths/rabin_miller.py)\n    - [rsa](algorithms/maths/rsa.py)\n    - [sqrt_precision_factor](algorithms/maths/sqrt_precision_factor.py)\n    - [summing_digits](algorithms/maths/summing_digits.py)\n- [matrix](algorithms/matrix)\n    - [sudoku_validator](algorithms/matrix/sudoku_validator.py)\n    - [bomb_enemy](algorithms/matrix/bomb_enemy.py)\n    - [copy_transform](algorithms/matrix/copy_transform.py)\n    - [count_paths](algorithms/matrix/count_paths.py)\n    - [matrix_rotation.txt](algorithms/matrix/matrix_rotation.txt)\n    - [rotate_image](algorithms/matrix/rotate_image.py)\n    - [search_in_sorted_matrix](algorithms/matrix/search_in_sorted_matrix.py)\n    - [sparse_dot_vector](algorithms/matrix/sparse_dot_vector.py)\n    - [sparse_mul](algorithms/matrix/sparse_mul.py)\n    - [spiral_traversal](algorithms/matrix/spiral_traversal.py)\n- [queues](algorithms/queues)\n    - [max_sliding_window](algorithms/queues/max_sliding_window.py)\n    - [moving_average](algorithms/queues/moving_average.py)\n    - [queue](algorithms/queues/queue.py)\n    - [reconstruct_queue](algorithms/queues/reconstruct_queue.py)\n    - [zigzagiterator](algorithms/queues/zigzagiterator.py)\n- [search](algorithms/search)\n    - [binary_search](algorithms/search/binary_search.py)\n    - [first_occurance](algorithms/search/first_occurance.py)\n    - [last_occurance](algorithms/search/last_occurance.py)\n    - [linear_search](algorithms/search/linear_search.py)\n    - [search_insert](algorithms/search/search_insert.py)\n    - [two_sum](algorithms/search/two_sum.py)\n    - [search_range](algorithms/search/search_range.py)\n    - [find_min_rotate](algorithms/search/find_min_rotate.py)\n    - [search_rotate](algorithms/search/search_rotate.py)\n    - [jump_search](algorithms/search/jump_search.py)\n- [set](algorithms/set)\n    - [randomized_set](algorithms/set/randomized_set.py)\n    - [set_covering](algorithms/set/set_covering.py)\n- [sort](algorithms/sort)\n    - [bogo_sort](algorithms/sort/bogo_sort.py)\n    - [bubble_sort](algorithms/sort/bubble_sort.py)\n    - [bucket_sort](algorithms/sort/bucket_sort.py)\n    - [cocktail_shaker_sort](algorithms/sort/cocktail_shaker_sort.py)\n    - [comb_sort](algorithms/sort/comb_sort.py)\n    - [counting_sort](algorithms/sort/counting_sort.py)\n    - [gnome_sort](algorithms/sort/gnome_sort.py)\n    - [heap_sort](algorithms/sort/heap_sort.py)\n    - [insertion_sort](algorithms/sort/insertion_sort.py)\n    - [meeting_rooms](algorithms/sort/meeting_rooms.py)\n    - [merge_sort](algorithms/sort/merge_sort.py)\n    - [quick_sort](algorithms/sort/quick_sort.py)\n    - [radix_sort](algorithms/sort/radix_sort.py)\n    - [selection_sort](algorithms/sort/selection_sort.py)\n    - [shell_sort](algorithms/sort/shell_sort.py)\n    - [sort_colors](algorithms/sort/sort_colors.py)\n    - [top_sort](algorithms/sort/top_sort.py)\n    - [wiggle_sort](algorithms/sort/wiggle_sort.py)\n- [stack](algorithms/stack)\n    - [longest_abs_path](algorithms/stack/longest_abs_path.py)\n    - [simplify_path](algorithms/stack/simplify_path.py)\n    - [stack](algorithms/stack/stack.py)\n    - [valid_parenthesis](algorithms/stack/valid_parenthesis.py)\n    - [stutter](algorithms/stack/stutter.py)\n    - [switch_pairs](algorithms/stack/switch_pairs.py)\n    - [is_consecutive](algorithms/stack/is_consecutive.py)\n    - [remove_min](algorithms/stack/remove_min.py)\n    - [is_sorted](algorithms/stack/is_sorted.py)\n- [strings](algorithms/strings)\n    - [fizzbuzz](algorithms/strings/fizzbuzz.py)\n    - [delete_reoccurring_characters](algorithms/strings/delete_reoccurring_characters.py)\n    - [strip_url_params](algorithms/strings/strip_url_params.py)\n    - [validate_coordinates](algorithms/strings/validate_coordinates.py)\n    - [domain_extractor](algorithms/strings/domain_extractor.py)\n    - [merge_string_checker](algorithms/strings/merge_string_checker.py)\n    - [add_binary](algorithms/strings/add_binary.py)\n    - [breaking_bad](algorithms/strings/breaking_bad.py)\n    - [decode_string](algorithms/strings/decode_string.py)\n    - [encode_decode](algorithms/strings/encode_decode.py)\n    - [group_anagrams](algorithms/strings/group_anagrams.py)\n    - [int_to_roman](algorithms/strings/int_to_roman.py)\n    - [is_palindrome](algorithms/strings/is_palindrome.py)\n    - [license_number](algorithms/strings/license_number.py)\n    - [make_sentence](algorithms/strings/make_sentence.py)\n    - [multiply_strings](algorithms/strings/multiply_strings.py)\n    - [one_edit_distance](algorithms/strings/one_edit_distance.py)\n    - [rabin_karp](algorithms/strings/rabin_karp.py)\n    - [reverse_string](algorithms/strings/reverse_string.py)\n    - [reverse_vowel](algorithms/strings/reverse_vowel.py)\n    - [reverse_words](algorithms/strings/reverse_words.py)\n    - [roman_to_int](algorithms/strings/roman_to_int.py)\n    - [word_squares](algorithms/strings/word_squares.py)\n- [tree](algorithms/tree)\n    - [bst](algorithms/tree/tree/bst)\n        - [array2bst](algorithms/tree/bst/array2bst.py)\n        - [bst_closest_value](algorithms/tree/bst/bst_closest_value.py)\n        - [BSTIterator](algorithms/tree/bst/BSTIterator.py)\n        - [delete_node](algorithms/tree/bst/delete_node.py)\n        - [is_bst](algorithms/tree/bst/is_bst.py)\n        - [kth_smallest](algorithms/tree/bst/kth_smallest.py)\n        - [lowest_common_ancestor](algorithms/tree/bst/lowest_common_ancestor.py)\n        - [predecessor](algorithms/tree/bst/predecessor.py)\n        - [serialize_deserialize](algorithms/tree/bst/serialize_deserialize.py)\n        - [successor](algorithms/tree/bst/successor.py)\n        - [unique_bst](algorithms/tree/bst/unique_bst.py)\n        - [depth_sum](algorithms/tree/bst/depth_sum.py)\n        - [count_left_node](algorithms/tree/bst/count_left_node.py)\n        - [num_empty](algorithms/tree/bst/num_empty.py)\n        - [height](algorithms/tree/bst/height.py)\n    - [red_black_tree](algorithms/tree/red_black_tree)\n        - [red_black_tree](algorithms/tree/red_black_tree/red_black_tree.py)\n    - [segment_tree](algorithms/tree/segment_tree)\n        - [segment_tree](algorithms/tree/segment_tree/segment_tree.py)\n    - [traversal](algorithms/tree/traversal)\n        - [inorder](algorithms/tree/traversal/inorder.py)\n        - [level_order](algorithms/tree/traversal/level_order.py)\n        - [zigzag](algorithms/tree/traversal/zigzag.py)\n    - [trie](algorithms/tree/trie)\n        - [add_and_search](algorithms/tree/trie/add_and_search.py)\n        - [trie](algorithms/tree/trie/trie.py)\n    - [binary_tree_paths](algorithms/tree/binary_tree_paths.py)\n    - [bintree2list](algorithms/tree/bintree2list.py)\n    - [deepest_left](algorithms/tree/deepest_left.py)\n    - [invert_tree](algorithms/tree/invert_tree.py)\n    - [is_balanced](algorithms/tree/is_balanced.py)\n    - [is_subtree](algorithms/tree/is_subtree.py)\n    - [is_symmetric](algorithms/tree/is_symmetric.py)\n    - [longest_consecutive](algorithms/tree/longest_consecutive.py)\n    - [lowest_common_ancestor](algorithms/tree/lowest_common_ancestor.py)\n    - [max_height](algorithms/tree/max_height.py)\n    - [max_path_sum](algorithms/tree/max_path_sum.py)\n    - [min_height](algorithms/tree/min_height.py)\n    - [path_sum](algorithms/tree/path_sum.py)\n    - [path_sum2](algorithms/tree/path_sum2.py)\n    - [pretty_print](algorithms/tree/pretty_print.py)\n    - [same_tree](algorithms/tree/same_tree.py)\n    - [tree](algorithms/tree/tree.py)\n- [union-find](algorithms/union-find)\n    - [count_islands](algorithms/union-find/count_islands.py)\n\n## Contributors\nThe repo is maintained by\n\n* [Keon Kim](https://github.com/keon)\n* [Rahul Goswami](https://github.com/goswami-rahul)\n* [Christian Bender](https://github.com/christianbender)\n* [Ankit Agarwal](https://github.com/ankit167)\n* [Hai Hoang Dang](https://github.com/danghai)\n* [Saad](https://github.com/SaadBenn)\n\nAnd thanks to [all the contributors](https://github.com/keon/algorithms/graphs/contributors)\nwho helped in building the repo.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/keon/algorithms", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "algorithms", "package_url": "https://pypi.org/project/algorithms/", "platform": "", "project_url": "https://pypi.org/project/algorithms/", "project_urls": {"Homepage": "https://github.com/keon/algorithms"}, "release_url": "https://pypi.org/project/algorithms/0.1.3/", "requires_dist": null, "requires_python": "", "summary": "Pythonic Data Structures and Algorithms", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b3e975e05f1d8501e3104023571cc830134890b8/68747470733a2f2f6769746875622e636f6d2f6b656f6e2f616c676f726974686d732f646f63732f736f757263652f5f7374617469632f616c676f726974686d735f6c6f676f2e706e67\" width=\"40%\"></p>\n<p>English | <a href=\"README_CN.md\" rel=\"nofollow\">\u7b80\u4f53\u4e2d\u6587</a> | <a href=\"README_GE.md\" rel=\"nofollow\">Deutsch</a> | <a href=\"README_JP.md\" rel=\"nofollow\">\u65e5\u672c\u8a9e</a> | <a href=\"README_KR.md\" rel=\"nofollow\">\ud55c\uad6d\uc5b4</a></p>\n<p><a href=\"https://www.codetriage.com/keon/algorithms\" rel=\"nofollow\"><img alt=\"Open Source Helpers\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/046b6ed7c85b25d62dd97b69a8b3b314283234d7/68747470733a2f2f7777772e636f64657472696167652e636f6d2f6b656f6e2f616c676f726974686d732f6261646765732f75736572732e737667\"></a>\n<a href=\"https://travis-ci.org/keon/algorithms\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/21139f552fd8e973741f89df092dfb21bd27edbc/68747470733a2f2f7472617669732d63692e6f72672f6b656f6e2f616c676f726974686d732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/keon/algorithms?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5eb725921ab24520c9c05777d975c33622bc8861/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6b656f6e2f616c676f726974686d732f62616467652e7376673f6272616e63683d6d6173746572\"></a></p>\n<h1>Pythonic Data Structures and Algorithms</h1>\n<p>Minimal and clean example implementations of data structures and algorithms in Python 3.</p>\n<h2>Contributing</h2>\n<p>Thanks for your interest in contributing! There are many ways to contribute to this project. <a href=\"CONTRIBUTING.md\" rel=\"nofollow\">Get started here</a></p>\n<h2>Tests</h2>\n<h3>Use unittest</h3>\n<p>For running all tests write down:</p>\n<pre><code>$ python3 -m unittest discover tests\n</code></pre>\n<p>For running some specific tests you can do this as following (Ex: sort):</p>\n<pre><code>$ python3 -m unittest tests.test_sort\n</code></pre>\n<h3>Use pytest</h3>\n<p>For running all tests write down:</p>\n<pre><code>$ python3 -m pytest tests\n</code></pre>\n<h2>Install</h2>\n<p>If you want to use the API algorithms in your code, it is as simple as:</p>\n<pre><code>$ pip3 install algorithms\n</code></pre>\n<p>You can test by creating a python file: (Ex: use <code>merge_sort</code> in <code>sort</code>)</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">algorithms.sort</span> <span class=\"kn\">import</span> <span class=\"n\">merge_sort</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">my_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]</span>\n    <span class=\"n\">my_list</span> <span class=\"o\">=</span> <span class=\"n\">merge_sort</span><span class=\"p\">(</span><span class=\"n\">my_list</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_list</span><span class=\"p\">)</span>\n</pre>\n<h2>Uninstall</h2>\n<p>If you want to uninstall algorithms, it is as simple as:</p>\n<pre><code>$ pip3 uninstall -y algorithms\n</code></pre>\n<h2>List of Implementations</h2>\n<ul>\n<li><a href=\"algorithms/arrays\" rel=\"nofollow\">arrays</a>\n<ul>\n<li><a href=\"algorithms/arrays/delete_nth.py\" rel=\"nofollow\">delete_nth</a></li>\n<li><a href=\"algorithms/arrays/flatten.py\" rel=\"nofollow\">flatten</a></li>\n<li><a href=\"algorithms/arrays/garage.py\" rel=\"nofollow\">garage</a></li>\n<li><a href=\"algorithms/arrays/josephus.py\" rel=\"nofollow\">josephus_problem</a></li>\n<li><a href=\"algorithms/arrays/longest_non_repeat.py/\" rel=\"nofollow\">longest_non_repeat</a></li>\n<li><a href=\"algorithms/arrays/max_ones_index.py\" rel=\"nofollow\">max_ones_index</a></li>\n<li><a href=\"algorithms/arrays/merge_intervals.py\" rel=\"nofollow\">merge_intervals</a></li>\n<li><a href=\"algorithms/arrays/missing_ranges.py\" rel=\"nofollow\">missing_ranges</a></li>\n<li><a href=\"algorithms/arrays/plus_one.py\" rel=\"nofollow\">plus_one</a>\n\u00a0 \u00a0- <a href=\"algorithms/arrays/rotate.py\" rel=\"nofollow\">rotate</a></li>\n<li><a href=\"algorithms/arrays/summarize_ranges.py\" rel=\"nofollow\">summarize_ranges</a></li>\n<li><a href=\"algorithms/arrays/three_sum.py\" rel=\"nofollow\">three_sum</a></li>\n<li><a href=\"algorithms/arrays/two_sum.py\" rel=\"nofollow\">two_sum</a></li>\n<li><a href=\"algorithms/arrays/move_zeros.py\" rel=\"nofollow\">move_zeros</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/backtrack\" rel=\"nofollow\">backtrack</a>\n<ul>\n<li><a href=\"algorithms/backtrack/\" rel=\"nofollow\">general_solution.md</a></li>\n<li><a href=\"algorithms/backtrack/anagram.py\" rel=\"nofollow\">anagram</a></li>\n<li><a href=\"algorithms/backtrack/array_sum_combinations.py\" rel=\"nofollow\">array_sum_combinations</a></li>\n<li><a href=\"algorithms/backtrack/combination_sum.py\" rel=\"nofollow\">combination_sum</a></li>\n<li><a href=\"algorithms/backtrack/expression_add_operators.py\" rel=\"nofollow\">expression_add_operators</a></li>\n<li><a href=\"algorithms/backtrack/factor_combinations.py\" rel=\"nofollow\">factor_combinations</a></li>\n<li><a href=\"algorithms/backtrack/generate_abbreviations.py\" rel=\"nofollow\">generate_abbreviations</a></li>\n<li><a href=\"algorithms/backtrack/generate_parenthesis.py\" rel=\"nofollow\">generate_parenthesis</a></li>\n<li><a href=\"algorithms/backtrack/letter_combination.py\" rel=\"nofollow\">letter_combination</a></li>\n<li><a href=\"algorithms/backtrack/palindrome_partitioning.py\" rel=\"nofollow\">palindrome_partitioning</a></li>\n<li><a href=\"algorithms/backtrack/pattern_match.py\" rel=\"nofollow\">pattern_match</a></li>\n<li><a href=\"algorithms/backtrack/permute.py\" rel=\"nofollow\">permute</a></li>\n<li><a href=\"algorithms/backtrack/permute_unique.py\" rel=\"nofollow\">permute_unique</a></li>\n<li><a href=\"algorithms/backtrack/subsets.py\" rel=\"nofollow\">subsets</a></li>\n<li><a href=\"algorithms/backtrack/subsets_unique.py\" rel=\"nofollow\">subsets_unique</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/bfs\" rel=\"nofollow\">bfs</a>\n<ul>\n<li><a href=\"algorithms/bfs/shortest_distance_from_all_buildings.py\" rel=\"nofollow\">shortest_distance_from_all_buildings</a></li>\n<li><a href=\"algorithms/bfs/word_ladder.py\" rel=\"nofollow\">word_ladder</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/bit\" rel=\"nofollow\">bit</a>\n<ul>\n<li><a href=\"algorithms/bit/add_bitwise_operator.py\" rel=\"nofollow\">add_bitwise_operator</a></li>\n<li><a href=\"algorithms/bit/bit_operation.py\" rel=\"nofollow\">bit_operation</a></li>\n<li><a href=\"algorithms/bit/bytes_int_conversion.py\" rel=\"nofollow\">bytes_int_conversion</a></li>\n<li><a href=\"algorithms/bit/count_flips_to_convert.py\" rel=\"nofollow\">count_flips_to_convert</a></li>\n<li><a href=\"algorithms/bit/count_ones.py\" rel=\"nofollow\">count_ones</a></li>\n<li><a href=\"algorithms/bit/find_difference.py\" rel=\"nofollow\">find_difference</a></li>\n<li><a href=\"algorithms/bit/find_missing_number.py\" rel=\"nofollow\">find_missing_number</a></li>\n<li><a href=\"algorithms/bit/flip_bit_longest_sequence.py\" rel=\"nofollow\">flip_bit_longest_sequence</a></li>\n<li><a href=\"algorithms/bit/power_of_two.py\" rel=\"nofollow\">power_of_two</a></li>\n<li><a href=\"algorithms/bit/reverse_bits.py\" rel=\"nofollow\">reverse_bits</a></li>\n<li><a href=\"algorithms/bit/single_number.py\" rel=\"nofollow\">single_number</a></li>\n<li><a href=\"algorithms/bit/single_number2.py\" rel=\"nofollow\">single_number2</a></li>\n<li><a href=\"algorithms/bit/single_number3.py\" rel=\"nofollow\">single_number3</a></li>\n<li><a href=\"algorithms/bit/subsets.py\" rel=\"nofollow\">subsets</a></li>\n<li><a href=\"algorithms/bit/swap_pair.py\" rel=\"nofollow\">swap_pair</a></li>\n<li><a href=\"algorithms/bit/has_alternative_bit.py\" rel=\"nofollow\">has_alternative_bit</a></li>\n<li><a href=\"algorithms/bit/insert_bit.py\" rel=\"nofollow\">insert_bit</a></li>\n<li><a href=\"algorithms/bit/remove_bit.py\" rel=\"nofollow\">remove_bit</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/calculator\" rel=\"nofollow\">calculator</a>\n<ul>\n<li><a href=\"algorithms/calculator/math_parser.py\" rel=\"nofollow\">math_parser</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/dfs\" rel=\"nofollow\">dfs</a>\n<ul>\n<li><a href=\"algorithms/dfs/all_factors.py\" rel=\"nofollow\">all_factors</a></li>\n<li><a href=\"algorithms/dfs/count_islands.py\" rel=\"nofollow\">count_islands</a></li>\n<li><a href=\"algorithms/dfs/pacific_atlantic.py\" rel=\"nofollow\">pacific_atlantic</a></li>\n<li><a href=\"algorithms/dfs/sudoku_solver.py\" rel=\"nofollow\">sudoku_solver</a></li>\n<li><a href=\"algorithms/dfs/walls_and_gates.py\" rel=\"nofollow\">walls_and_gates</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/dp\" rel=\"nofollow\">dp</a>\n<ul>\n<li><a href=\"algorithms/dp/buy_sell_stock.py\" rel=\"nofollow\">buy_sell_stock</a></li>\n<li><a href=\"algorithms/dp/climbing_stairs.py\" rel=\"nofollow\">climbing_stairs</a></li>\n<li><a href=\"algorithms/dp/coin_change.py\" rel=\"nofollow\">coin_change</a></li>\n<li><a href=\"algorithms/dp/combination_sum.py\" rel=\"nofollow\">combination_sum</a></li>\n<li><a href=\"algorithms/dp/egg_drop.py\" rel=\"nofollow\">egg_drop</a></li>\n<li><a href=\"algorithms/dp/house_robber.py\" rel=\"nofollow\">house_robber</a></li>\n<li><a href=\"algorithms/dp/job_scheduling.py\" rel=\"nofollow\">job_scheduling</a></li>\n<li><a href=\"algorithms/dp/knapsack.py\" rel=\"nofollow\">knapsack</a></li>\n<li><a href=\"algorithms/dp/longest_increasing.py\" rel=\"nofollow\">longest_increasing</a></li>\n<li><a href=\"algorithms/dp/matrix_chain_order.py\" rel=\"nofollow\">matrix_chain_order</a></li>\n<li><a href=\"algorithms/dp/max_product_subarray.py\" rel=\"nofollow\">max_product_subarray</a></li>\n<li><a href=\"algorithms/dp/max_subarray.py\" rel=\"nofollow\">max_subarray</a></li>\n<li><a href=\"algorithms/dp/min_cost_path.py\" rel=\"nofollow\">min_cost_path</a></li>\n<li><a href=\"algorithms/dp/num_decodings.py\" rel=\"nofollow\">num_decodings</a></li>\n<li><a href=\"algorithms/dp/regex_matching.py\" rel=\"nofollow\">regex_matching</a></li>\n<li><a href=\"algorithms/dp/rod_cut.py\" rel=\"nofollow\">rod_cut</a></li>\n<li><a href=\"algorithms/dp/word_break.py\" rel=\"nofollow\">word_break</a></li>\n<li><a href=\"algorithms/dp/fib.py\" rel=\"nofollow\">fibonacci</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/graph\" rel=\"nofollow\">graph</a>\n<ul>\n<li><a href=\"algorithms/graph/checkDiGraphStronglyConnected.py\" rel=\"nofollow\">strongly_connected</a></li>\n<li><a href=\"algorithms/graph/clone_graph.py\" rel=\"nofollow\">clone_graph</a></li>\n<li><a href=\"algorithms/graph/cycle_detection.py\" rel=\"nofollow\">cycle_detection</a></li>\n<li><a href=\"algorithms/graph/find_all_cliques.py\" rel=\"nofollow\">find_all_cliques</a></li>\n<li><a href=\"algorithms/graph/find_path.py\" rel=\"nofollow\">find_path</a></li>\n<li><a href=\"algorithms/graph/graph.py\" rel=\"nofollow\">graph</a></li>\n<li><a href=\"algorithms/graph/markov_chain.py\" rel=\"nofollow\">markov_chain</a></li>\n<li><a href=\"algorithms/graph/minimum_spanning_tree.py\" rel=\"nofollow\">minimum_spanning_tree</a></li>\n<li><a href=\"algorithms/graph/satisfiability.py\" rel=\"nofollow\">satisfiability</a></li>\n<li><a href=\"algorithms/graph/tarjan.py\" rel=\"nofollow\">tarjan</a></li>\n<li><a href=\"algorithms/graph/traversal.py\" rel=\"nofollow\">traversal</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/heap\" rel=\"nofollow\">heap</a>\n<ul>\n<li><a href=\"algorithms/heap/merge_sorted_k_lists.py\" rel=\"nofollow\">merge_sorted_k_lists</a></li>\n<li><a href=\"algorithms/heap/skyline.py\" rel=\"nofollow\">skyline</a></li>\n<li><a href=\"algorithms/heap/sliding_window_max.py\" rel=\"nofollow\">sliding_window_max</a></li>\n<li><a href=\"algorithms/heap/binary_heap.py\" rel=\"nofollow\">binary_heap</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/linkedlist\" rel=\"nofollow\">linkedlist</a>\n<ul>\n<li><a href=\"algorithms/linkedlist/add_two_numbers.py\" rel=\"nofollow\">add_two_numbers</a></li>\n<li><a href=\"algorithms/linkedlist/copy_random_pointer.py\" rel=\"nofollow\">copy_random_pointer</a></li>\n<li><a href=\"algorithms/linkedlist/delete_node.py\" rel=\"nofollow\">delete_node</a></li>\n<li><a href=\"algorithms/linkedlist/first_cyclic_node.py\" rel=\"nofollow\">first_cyclic_node</a></li>\n<li><a href=\"algorithms/linkedlist/is_cyclic.py\" rel=\"nofollow\">is_cyclic</a></li>\n<li><a href=\"algorithms/linkedlist/is_palindrome.py\" rel=\"nofollow\">is_palindrome</a></li>\n<li><a href=\"algorithms/linkedlist/kth_to_last.py\" rel=\"nofollow\">kth_to_last</a></li>\n<li><a href=\"algorithms/linkedlist/linkedlist.py\" rel=\"nofollow\">linkedlist</a></li>\n<li><a href=\"algorithms/linkedlist/remove_duplicates.py\" rel=\"nofollow\">remove_duplicates</a></li>\n<li><a href=\"algorithms/linkedlist/reverse.py\" rel=\"nofollow\">reverse</a></li>\n<li><a href=\"algorithms/linkedlist/rotate_list.py\" rel=\"nofollow\">rotate_list</a></li>\n<li><a href=\"algorithms/linkedlist/swap_in_pairs.py\" rel=\"nofollow\">swap_in_pairs</a></li>\n<li><a href=\"algorithms/linkedlist/is_sorted.py\" rel=\"nofollow\">is_sorted</a></li>\n<li><a href=\"algorithms/linkedlist/remove_range.py\" rel=\"nofollow\">remove_range</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/map\" rel=\"nofollow\">map</a>\n<ul>\n<li><a href=\"algorithms/map/hashtable.py\" rel=\"nofollow\">hashtable</a></li>\n<li><a href=\"algorithms/map/separate_chaining_hashtable.py\" rel=\"nofollow\">separate_chaining_hashtable</a></li>\n<li><a href=\"algorithms/map/longest_common_subsequence.py\" rel=\"nofollow\">longest_common_subsequence</a></li>\n<li><a href=\"algorithms/map/randomized_set.py\" rel=\"nofollow\">randomized_set</a></li>\n<li><a href=\"algorithms/map/valid_sudoku.py\" rel=\"nofollow\">valid_sudoku</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/maths\" rel=\"nofollow\">maths</a>\n<ul>\n<li><a href=\"algorithms/maths/base_conversion.py\" rel=\"nofollow\">base_conversion</a></li>\n<li><a href=\"algorithms/maths/combination.py\" rel=\"nofollow\">combination</a></li>\n<li><a href=\"algorithms/maths/extended_gcd.py\" rel=\"nofollow\">extended_gcd</a></li>\n<li><a href=\"algorithms/maths/factorial.py\" rel=\"nofollow\">factorial</a></li>\n<li><a href=\"algorithms/maths/gcd.py\" rel=\"nofollow\">gcd/lcm</a></li>\n<li><a href=\"algorithms/maths/generate_strobogrammtic.py\" rel=\"nofollow\">generate_strobogrammtic</a></li>\n<li><a href=\"algorithms/maths/is_strobogrammatic.py\" rel=\"nofollow\">is_strobogrammatic</a></li>\n<li><a href=\"algorithms/maths/next_bigger.py\" rel=\"nofollow\">next_bigger</a></li>\n<li><a href=\"algorithms/maths/next_perfect_square.py\" rel=\"nofollow\">next_perfect_square</a></li>\n<li><a href=\"algorithms/maths/nth_digit.py\" rel=\"nofollow\">nth_digit</a></li>\n<li><a href=\"algorithms/maths/prime_check.py\" rel=\"nofollow\">prime_check</a></li>\n<li><a href=\"algorithms/maths/primes_sieve_of_eratosthenes.py\" rel=\"nofollow\">primes_sieve_of_eratosthenes</a></li>\n<li><a href=\"algorithms/maths/pythagoras.py\" rel=\"nofollow\">pythagoras</a></li>\n<li><a href=\"algorithms/maths/rabin_miller.py\" rel=\"nofollow\">rabin_miller</a></li>\n<li><a href=\"algorithms/maths/rsa.py\" rel=\"nofollow\">rsa</a></li>\n<li><a href=\"algorithms/maths/sqrt_precision_factor.py\" rel=\"nofollow\">sqrt_precision_factor</a></li>\n<li><a href=\"algorithms/maths/summing_digits.py\" rel=\"nofollow\">summing_digits</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/matrix\" rel=\"nofollow\">matrix</a>\n<ul>\n<li><a href=\"algorithms/matrix/sudoku_validator.py\" rel=\"nofollow\">sudoku_validator</a></li>\n<li><a href=\"algorithms/matrix/bomb_enemy.py\" rel=\"nofollow\">bomb_enemy</a></li>\n<li><a href=\"algorithms/matrix/copy_transform.py\" rel=\"nofollow\">copy_transform</a></li>\n<li><a href=\"algorithms/matrix/count_paths.py\" rel=\"nofollow\">count_paths</a></li>\n<li><a href=\"algorithms/matrix/matrix_rotation.txt\" rel=\"nofollow\">matrix_rotation.txt</a></li>\n<li><a href=\"algorithms/matrix/rotate_image.py\" rel=\"nofollow\">rotate_image</a></li>\n<li><a href=\"algorithms/matrix/search_in_sorted_matrix.py\" rel=\"nofollow\">search_in_sorted_matrix</a></li>\n<li><a href=\"algorithms/matrix/sparse_dot_vector.py\" rel=\"nofollow\">sparse_dot_vector</a></li>\n<li><a href=\"algorithms/matrix/sparse_mul.py\" rel=\"nofollow\">sparse_mul</a></li>\n<li><a href=\"algorithms/matrix/spiral_traversal.py\" rel=\"nofollow\">spiral_traversal</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/queues\" rel=\"nofollow\">queues</a>\n<ul>\n<li><a href=\"algorithms/queues/max_sliding_window.py\" rel=\"nofollow\">max_sliding_window</a></li>\n<li><a href=\"algorithms/queues/moving_average.py\" rel=\"nofollow\">moving_average</a></li>\n<li><a href=\"algorithms/queues/queue.py\" rel=\"nofollow\">queue</a></li>\n<li><a href=\"algorithms/queues/reconstruct_queue.py\" rel=\"nofollow\">reconstruct_queue</a></li>\n<li><a href=\"algorithms/queues/zigzagiterator.py\" rel=\"nofollow\">zigzagiterator</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/search\" rel=\"nofollow\">search</a>\n<ul>\n<li><a href=\"algorithms/search/binary_search.py\" rel=\"nofollow\">binary_search</a></li>\n<li><a href=\"algorithms/search/first_occurance.py\" rel=\"nofollow\">first_occurance</a></li>\n<li><a href=\"algorithms/search/last_occurance.py\" rel=\"nofollow\">last_occurance</a></li>\n<li><a href=\"algorithms/search/linear_search.py\" rel=\"nofollow\">linear_search</a></li>\n<li><a href=\"algorithms/search/search_insert.py\" rel=\"nofollow\">search_insert</a></li>\n<li><a href=\"algorithms/search/two_sum.py\" rel=\"nofollow\">two_sum</a></li>\n<li><a href=\"algorithms/search/search_range.py\" rel=\"nofollow\">search_range</a></li>\n<li><a href=\"algorithms/search/find_min_rotate.py\" rel=\"nofollow\">find_min_rotate</a></li>\n<li><a href=\"algorithms/search/search_rotate.py\" rel=\"nofollow\">search_rotate</a></li>\n<li><a href=\"algorithms/search/jump_search.py\" rel=\"nofollow\">jump_search</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/set\" rel=\"nofollow\">set</a>\n<ul>\n<li><a href=\"algorithms/set/randomized_set.py\" rel=\"nofollow\">randomized_set</a></li>\n<li><a href=\"algorithms/set/set_covering.py\" rel=\"nofollow\">set_covering</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/sort\" rel=\"nofollow\">sort</a>\n<ul>\n<li><a href=\"algorithms/sort/bogo_sort.py\" rel=\"nofollow\">bogo_sort</a></li>\n<li><a href=\"algorithms/sort/bubble_sort.py\" rel=\"nofollow\">bubble_sort</a></li>\n<li><a href=\"algorithms/sort/bucket_sort.py\" rel=\"nofollow\">bucket_sort</a></li>\n<li><a href=\"algorithms/sort/cocktail_shaker_sort.py\" rel=\"nofollow\">cocktail_shaker_sort</a></li>\n<li><a href=\"algorithms/sort/comb_sort.py\" rel=\"nofollow\">comb_sort</a></li>\n<li><a href=\"algorithms/sort/counting_sort.py\" rel=\"nofollow\">counting_sort</a></li>\n<li><a href=\"algorithms/sort/gnome_sort.py\" rel=\"nofollow\">gnome_sort</a></li>\n<li><a href=\"algorithms/sort/heap_sort.py\" rel=\"nofollow\">heap_sort</a></li>\n<li><a href=\"algorithms/sort/insertion_sort.py\" rel=\"nofollow\">insertion_sort</a></li>\n<li><a href=\"algorithms/sort/meeting_rooms.py\" rel=\"nofollow\">meeting_rooms</a></li>\n<li><a href=\"algorithms/sort/merge_sort.py\" rel=\"nofollow\">merge_sort</a></li>\n<li><a href=\"algorithms/sort/quick_sort.py\" rel=\"nofollow\">quick_sort</a></li>\n<li><a href=\"algorithms/sort/radix_sort.py\" rel=\"nofollow\">radix_sort</a></li>\n<li><a href=\"algorithms/sort/selection_sort.py\" rel=\"nofollow\">selection_sort</a></li>\n<li><a href=\"algorithms/sort/shell_sort.py\" rel=\"nofollow\">shell_sort</a></li>\n<li><a href=\"algorithms/sort/sort_colors.py\" rel=\"nofollow\">sort_colors</a></li>\n<li><a href=\"algorithms/sort/top_sort.py\" rel=\"nofollow\">top_sort</a></li>\n<li><a href=\"algorithms/sort/wiggle_sort.py\" rel=\"nofollow\">wiggle_sort</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/stack\" rel=\"nofollow\">stack</a>\n<ul>\n<li><a href=\"algorithms/stack/longest_abs_path.py\" rel=\"nofollow\">longest_abs_path</a></li>\n<li><a href=\"algorithms/stack/simplify_path.py\" rel=\"nofollow\">simplify_path</a></li>\n<li><a href=\"algorithms/stack/stack.py\" rel=\"nofollow\">stack</a></li>\n<li><a href=\"algorithms/stack/valid_parenthesis.py\" rel=\"nofollow\">valid_parenthesis</a></li>\n<li><a href=\"algorithms/stack/stutter.py\" rel=\"nofollow\">stutter</a></li>\n<li><a href=\"algorithms/stack/switch_pairs.py\" rel=\"nofollow\">switch_pairs</a></li>\n<li><a href=\"algorithms/stack/is_consecutive.py\" rel=\"nofollow\">is_consecutive</a></li>\n<li><a href=\"algorithms/stack/remove_min.py\" rel=\"nofollow\">remove_min</a></li>\n<li><a href=\"algorithms/stack/is_sorted.py\" rel=\"nofollow\">is_sorted</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/strings\" rel=\"nofollow\">strings</a>\n<ul>\n<li><a href=\"algorithms/strings/fizzbuzz.py\" rel=\"nofollow\">fizzbuzz</a></li>\n<li><a href=\"algorithms/strings/delete_reoccurring_characters.py\" rel=\"nofollow\">delete_reoccurring_characters</a></li>\n<li><a href=\"algorithms/strings/strip_url_params.py\" rel=\"nofollow\">strip_url_params</a></li>\n<li><a href=\"algorithms/strings/validate_coordinates.py\" rel=\"nofollow\">validate_coordinates</a></li>\n<li><a href=\"algorithms/strings/domain_extractor.py\" rel=\"nofollow\">domain_extractor</a></li>\n<li><a href=\"algorithms/strings/merge_string_checker.py\" rel=\"nofollow\">merge_string_checker</a></li>\n<li><a href=\"algorithms/strings/add_binary.py\" rel=\"nofollow\">add_binary</a></li>\n<li><a href=\"algorithms/strings/breaking_bad.py\" rel=\"nofollow\">breaking_bad</a></li>\n<li><a href=\"algorithms/strings/decode_string.py\" rel=\"nofollow\">decode_string</a></li>\n<li><a href=\"algorithms/strings/encode_decode.py\" rel=\"nofollow\">encode_decode</a></li>\n<li><a href=\"algorithms/strings/group_anagrams.py\" rel=\"nofollow\">group_anagrams</a></li>\n<li><a href=\"algorithms/strings/int_to_roman.py\" rel=\"nofollow\">int_to_roman</a></li>\n<li><a href=\"algorithms/strings/is_palindrome.py\" rel=\"nofollow\">is_palindrome</a></li>\n<li><a href=\"algorithms/strings/license_number.py\" rel=\"nofollow\">license_number</a></li>\n<li><a href=\"algorithms/strings/make_sentence.py\" rel=\"nofollow\">make_sentence</a></li>\n<li><a href=\"algorithms/strings/multiply_strings.py\" rel=\"nofollow\">multiply_strings</a></li>\n<li><a href=\"algorithms/strings/one_edit_distance.py\" rel=\"nofollow\">one_edit_distance</a></li>\n<li><a href=\"algorithms/strings/rabin_karp.py\" rel=\"nofollow\">rabin_karp</a></li>\n<li><a href=\"algorithms/strings/reverse_string.py\" rel=\"nofollow\">reverse_string</a></li>\n<li><a href=\"algorithms/strings/reverse_vowel.py\" rel=\"nofollow\">reverse_vowel</a></li>\n<li><a href=\"algorithms/strings/reverse_words.py\" rel=\"nofollow\">reverse_words</a></li>\n<li><a href=\"algorithms/strings/roman_to_int.py\" rel=\"nofollow\">roman_to_int</a></li>\n<li><a href=\"algorithms/strings/word_squares.py\" rel=\"nofollow\">word_squares</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/tree\" rel=\"nofollow\">tree</a>\n<ul>\n<li><a href=\"algorithms/tree/tree/bst\" rel=\"nofollow\">bst</a>\n<ul>\n<li><a href=\"algorithms/tree/bst/array2bst.py\" rel=\"nofollow\">array2bst</a></li>\n<li><a href=\"algorithms/tree/bst/bst_closest_value.py\" rel=\"nofollow\">bst_closest_value</a></li>\n<li><a href=\"algorithms/tree/bst/BSTIterator.py\" rel=\"nofollow\">BSTIterator</a></li>\n<li><a href=\"algorithms/tree/bst/delete_node.py\" rel=\"nofollow\">delete_node</a></li>\n<li><a href=\"algorithms/tree/bst/is_bst.py\" rel=\"nofollow\">is_bst</a></li>\n<li><a href=\"algorithms/tree/bst/kth_smallest.py\" rel=\"nofollow\">kth_smallest</a></li>\n<li><a href=\"algorithms/tree/bst/lowest_common_ancestor.py\" rel=\"nofollow\">lowest_common_ancestor</a></li>\n<li><a href=\"algorithms/tree/bst/predecessor.py\" rel=\"nofollow\">predecessor</a></li>\n<li><a href=\"algorithms/tree/bst/serialize_deserialize.py\" rel=\"nofollow\">serialize_deserialize</a></li>\n<li><a href=\"algorithms/tree/bst/successor.py\" rel=\"nofollow\">successor</a></li>\n<li><a href=\"algorithms/tree/bst/unique_bst.py\" rel=\"nofollow\">unique_bst</a></li>\n<li><a href=\"algorithms/tree/bst/depth_sum.py\" rel=\"nofollow\">depth_sum</a></li>\n<li><a href=\"algorithms/tree/bst/count_left_node.py\" rel=\"nofollow\">count_left_node</a></li>\n<li><a href=\"algorithms/tree/bst/num_empty.py\" rel=\"nofollow\">num_empty</a></li>\n<li><a href=\"algorithms/tree/bst/height.py\" rel=\"nofollow\">height</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/tree/red_black_tree\" rel=\"nofollow\">red_black_tree</a>\n<ul>\n<li><a href=\"algorithms/tree/red_black_tree/red_black_tree.py\" rel=\"nofollow\">red_black_tree</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/tree/segment_tree\" rel=\"nofollow\">segment_tree</a>\n<ul>\n<li><a href=\"algorithms/tree/segment_tree/segment_tree.py\" rel=\"nofollow\">segment_tree</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/tree/traversal\" rel=\"nofollow\">traversal</a>\n<ul>\n<li><a href=\"algorithms/tree/traversal/inorder.py\" rel=\"nofollow\">inorder</a></li>\n<li><a href=\"algorithms/tree/traversal/level_order.py\" rel=\"nofollow\">level_order</a></li>\n<li><a href=\"algorithms/tree/traversal/zigzag.py\" rel=\"nofollow\">zigzag</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/tree/trie\" rel=\"nofollow\">trie</a>\n<ul>\n<li><a href=\"algorithms/tree/trie/add_and_search.py\" rel=\"nofollow\">add_and_search</a></li>\n<li><a href=\"algorithms/tree/trie/trie.py\" rel=\"nofollow\">trie</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/tree/binary_tree_paths.py\" rel=\"nofollow\">binary_tree_paths</a></li>\n<li><a href=\"algorithms/tree/bintree2list.py\" rel=\"nofollow\">bintree2list</a></li>\n<li><a href=\"algorithms/tree/deepest_left.py\" rel=\"nofollow\">deepest_left</a></li>\n<li><a href=\"algorithms/tree/invert_tree.py\" rel=\"nofollow\">invert_tree</a></li>\n<li><a href=\"algorithms/tree/is_balanced.py\" rel=\"nofollow\">is_balanced</a></li>\n<li><a href=\"algorithms/tree/is_subtree.py\" rel=\"nofollow\">is_subtree</a></li>\n<li><a href=\"algorithms/tree/is_symmetric.py\" rel=\"nofollow\">is_symmetric</a></li>\n<li><a href=\"algorithms/tree/longest_consecutive.py\" rel=\"nofollow\">longest_consecutive</a></li>\n<li><a href=\"algorithms/tree/lowest_common_ancestor.py\" rel=\"nofollow\">lowest_common_ancestor</a></li>\n<li><a href=\"algorithms/tree/max_height.py\" rel=\"nofollow\">max_height</a></li>\n<li><a href=\"algorithms/tree/max_path_sum.py\" rel=\"nofollow\">max_path_sum</a></li>\n<li><a href=\"algorithms/tree/min_height.py\" rel=\"nofollow\">min_height</a></li>\n<li><a href=\"algorithms/tree/path_sum.py\" rel=\"nofollow\">path_sum</a></li>\n<li><a href=\"algorithms/tree/path_sum2.py\" rel=\"nofollow\">path_sum2</a></li>\n<li><a href=\"algorithms/tree/pretty_print.py\" rel=\"nofollow\">pretty_print</a></li>\n<li><a href=\"algorithms/tree/same_tree.py\" rel=\"nofollow\">same_tree</a></li>\n<li><a href=\"algorithms/tree/tree.py\" rel=\"nofollow\">tree</a></li>\n</ul>\n</li>\n<li><a href=\"algorithms/union-find\" rel=\"nofollow\">union-find</a>\n<ul>\n<li><a href=\"algorithms/union-find/count_islands.py\" rel=\"nofollow\">count_islands</a></li>\n</ul>\n</li>\n</ul>\n<h2>Contributors</h2>\n<p>The repo is maintained by</p>\n<ul>\n<li><a href=\"https://github.com/keon\" rel=\"nofollow\">Keon Kim</a></li>\n<li><a href=\"https://github.com/goswami-rahul\" rel=\"nofollow\">Rahul Goswami</a></li>\n<li><a href=\"https://github.com/christianbender\" rel=\"nofollow\">Christian Bender</a></li>\n<li><a href=\"https://github.com/ankit167\" rel=\"nofollow\">Ankit Agarwal</a></li>\n<li><a href=\"https://github.com/danghai\" rel=\"nofollow\">Hai Hoang Dang</a></li>\n<li><a href=\"https://github.com/SaadBenn\" rel=\"nofollow\">Saad</a></li>\n</ul>\n<p>And thanks to <a href=\"https://github.com/keon/algorithms/graphs/contributors\" rel=\"nofollow\">all the contributors</a>\nwho helped in building the repo.</p>\n\n          </div>"}, "last_serial": 3958361, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "e8f42faec4a8fdbb43fc56da181a0815", "sha256": "def0ade2295d0756e4182ac59cdde5afe4e604c10553e3f1ce3999054dd04b72"}, "downloads": -1, "filename": "algorithms-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e8f42faec4a8fdbb43fc56da181a0815", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 132526, "upload_time": "2018-06-06T11:20:50", "upload_time_iso_8601": "2018-06-06T11:20:50.405111Z", "url": "https://files.pythonhosted.org/packages/62/fb/18fb2a9b79bac5e59a863baba4f09ac4cfffd3ae527fc2cd97aa59e8437d/algorithms-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5cc08bdf2f77a53638d07004e6e631ef", "sha256": "bf99d89b6156fa34a9d4d3d39bcc4b211f588e8401640a49e4f68893ba0a5c23"}, "downloads": -1, "filename": "algorithms-0.1.2.tar.gz", "has_sig": false, "md5_digest": "5cc08bdf2f77a53638d07004e6e631ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 82967, "upload_time": "2018-06-06T11:20:51", "upload_time_iso_8601": "2018-06-06T11:20:51.956502Z", "url": "https://files.pythonhosted.org/packages/9d/8e/1324087fcbd34ddbbcba0e68b7bc7b29e9ea318da89db59d4b891471741c/algorithms-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "4c2361cc5922548804ec2d2282f37930", "sha256": "2536c801fda4eb8bd41283be954612945a46225bdbda9306d4be3481d34dc786"}, "downloads": -1, "filename": "algorithms-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4c2361cc5922548804ec2d2282f37930", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 132528, "upload_time": "2018-06-06T11:23:25", "upload_time_iso_8601": "2018-06-06T11:23:25.461393Z", "url": "https://files.pythonhosted.org/packages/5c/b9/aed4e46602c56bc6021e29af5fb543af7bfe52599482ce786e538453c1e5/algorithms-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0bae4d841aa6ff3477c03663cbe5344d", "sha256": "9b329416df45e34b1acca59e427aee6416c60781eea255efcbc569a3b3e01672"}, "downloads": -1, "filename": "algorithms-0.1.3.tar.gz", "has_sig": false, "md5_digest": "0bae4d841aa6ff3477c03663cbe5344d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 82960, "upload_time": "2018-06-06T11:23:27", "upload_time_iso_8601": "2018-06-06T11:23:27.053926Z", "url": "https://files.pythonhosted.org/packages/c8/db/11836c7c9f49074ae157dd3dfb1dd6b4bef6cb65add48ea29d1f25b80d2d/algorithms-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4c2361cc5922548804ec2d2282f37930", "sha256": "2536c801fda4eb8bd41283be954612945a46225bdbda9306d4be3481d34dc786"}, "downloads": -1, "filename": "algorithms-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4c2361cc5922548804ec2d2282f37930", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 132528, "upload_time": "2018-06-06T11:23:25", "upload_time_iso_8601": "2018-06-06T11:23:25.461393Z", "url": "https://files.pythonhosted.org/packages/5c/b9/aed4e46602c56bc6021e29af5fb543af7bfe52599482ce786e538453c1e5/algorithms-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0bae4d841aa6ff3477c03663cbe5344d", "sha256": "9b329416df45e34b1acca59e427aee6416c60781eea255efcbc569a3b3e01672"}, "downloads": -1, "filename": "algorithms-0.1.3.tar.gz", "has_sig": false, "md5_digest": "0bae4d841aa6ff3477c03663cbe5344d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 82960, "upload_time": "2018-06-06T11:23:27", "upload_time_iso_8601": "2018-06-06T11:23:27.053926Z", "url": "https://files.pythonhosted.org/packages/c8/db/11836c7c9f49074ae157dd3dfb1dd6b4bef6cb65add48ea29d1f25b80d2d/algorithms-0.1.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:19:50 2020"}