{"info": {"author": "mbello", "author_email": "mbello@users.noreply.github.com", "bugtrack_url": null, "classifiers": ["License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "## Base functions to pilot Odoo's jsonrpc API (aio-odoorpc-base)\n\n### Description:\nThis python package implements a **complete** set of methods to access  \nOdoo's external API (using jsonrpc rather than xmlrpc).\n\nIt offers an almost-exact mirror of Odoo's external API, even parameter names are the same.\nIt is 'almost-exact' because 'execute' is skipped in favor of 'execute_kw' only and the \nIt is 'almost-exact' because 'execute' is skipped in favor of 'execute_kw' only and the \nAPI methods from the 'db' service: 'list', 'drop', 'dump', 'rename', 'restore' are here \nimplemented with names 'list_databases', 'drop_database', 'dump_database', 'rename_database'\nand 'restore_database' respectively.  \n\nThe 'documentation' offered by this package is mostly in the form of proper type \nannotations so that you have a better idea of what kind of data each API method expects. \nOther than that, developers are recommended to go study Odoo's external API by reading the\nsource code at (https://github.com/odoo/odoo/tree/master/odoo/service). The three API services\n'object', 'common' and 'db' are implemented there in files model.py, common.py and db.py \nrespectively. On each of these python files, a 'dispatch' method is implemented for the service\nin question. The methods available on the external service api are usually those prefixed with \n'exp_' in the method name, with the exception of the 'object' service which only exposes \n'execute' and 'execute_kw'.\n\nAll functions offered by this package are available in both async and sync versions.\n\nOdoo's API methods implemented:\n- about\n- authenticate\n- change_admin_password\n- create_database\n- db_exist\n- drop_database\n- dump_database\n- duplicate_database\n- execute_kw\n- list_countries\n- list_databases\n- list_lang\n- login\n- migrate_databases\n- rename_database\n- restore_database\n- server_version\n- version\n\nAll methods take as first 2 parameters:\n- **http_client**: a callable or an instance of a compatible http_client (it must implement a 'post'\n  method that accepts a 'url' and a 'json' parameter. Packages 'requests', 'httpx' and 'aiohttp' are \n  compatible).\n  If http_client is a callable, it will be called with a dict as the post payload and must return a \n  response object with a '.json()' method that may be synchronous or asynchronous (when using the async\n  functions). It must return a dict or dict-like object representing the reponse.\n\n- **url**: the complete URL of your Odoo's jsonrpc endpoint. Usually something like\n  'https://odoo.acme.com/jsonrpc' or 'https://odoo.acme.com:8443/jsonrpc'. \n\nRemaining parameters on each method are those expected by Odoo's external API, with identical names\nas you will find on Odoo's source code. The method 'jsonrpc' is the low-level method in this package that\nactually does all the HTTP calls for all implemented methods.\n\nBy default, when you issue 'from aio_odoorpc_base import ...' you will be importing the async methods.\nIf you want the sync methods you must import from 'aio_odoorpc_base.sync'. You may also use \n'aio_odoorpc_base.aio' if you prefer to be explicit on whether you are importing sync or async code.\n\n\n### aio-odoorpc: a higher-level API\n\nIn practice, you may notice that 99% of the time you will be calling the 'execute_kw' method\nwhich is what allows you to deal with Odoo's models, reading and writing actual business data \nvia the model methods 'search', 'read', 'search_read', 'search_count', 'write', 'create', etc.\nWhile this package only offers you a bare 'execute_kw' method and a helper 'execute_kwargs', \nthe higher-level package 'aio-odoorpc' expands over this one adding higher-level objects and methods\n(such as 'search', 'read', 'search_read', 'search_count', 'write', 'create', etc) to consume those \nmodel methods through calls to 'execute_kw' external API method. \n\n\n### No dependencies:\nNo dependency is not a promise, just a preference. It may change in the future, but only if for very\ngood reason. Here, are free to use whatever HTTP Client library you want.\n\nI am willing to make modifications in the code in order to support other http client solutions, \njust get in touch (use the project's github repository for that).\n\nWhile it would be easier if this package shipped with a specific http client dependency, it should be\nnoted that having the possibility to reuse HTTP sessions is a great opportunity to improve the \nspeed of your running code. Also, it is possible that your project is already using some http client\nlibrary and here you have the opportunity to use it. \n\nRemember that you must use an async http client library if you are going to use the async functions,\nor use a synchronous http client library if you are going to use the sync function.\n\n### Python HTTP Client packages known to be compatible:\n- sync-only: 'requests'\n- async-only: 'aiohttp'\n- sync and async: 'httpx'\n\n### Motivation:\nThe package 'odoorpc' is the most used and better maintained package to let you easily consume Odoo's\nexternal API. It has lots of functionality, good documentation, a large user base and was developed\nby people that are very experienced with Odoo in general and big contributors to the Odoo Community.  \nIn other words, if you are taking your first steps and do not need an async interface now, start with\nodoorpc.\n\nHowever, for my needs, once I was developing Odoo integrations that needed to make hundreds of calls\nto the Odoo API to complete a single job, I began to sorely miss an async interface as well as more\ncontrol over the HTTP client used (I wished for HTTP2 support and connection polling/reuse).\n\nAlso, as I understood Odoo's external API, it started to sound like 'odoorpc' was too big for a task\ntoo simple. For instance, most of the time (like 99,99% of the time), you will be calling to a single\njsonrpc method called 'execute_kw'. It is the same call over and over just changing the payload which \nitself is a simple json. \n\nSo I decided to develop a new package myself, made it async-first and tryed to keep it as simple as\npossible. Also, I decided to split it in two, a very simple base package (this one) with only methods\nthat mirror those in Odoo's external API and another one 'aio-odoorpc' that adds another layer to\nimplement Odoo's model methods like 'search', 'search_read', 'read', etc. as well as an object model\nto instantiate a class once and then make simple method invocation with few parameters to access \nwhat you need.  \n\n\n### Useful tips about Odoo's external API:\n\n- The 'login' call is really only a lookup of the user_id (an int) of a user given a\n  database name, user/login name and password. If you are using this RPC client over and over in your \n  code, maybe even calling from a stateless cloud service, you should consider finding out the \n  user id (uid) of the user and pass the uid instead of the username to the constructor of AsyncOdooRPC.\n  This way, you do not need to call the login() RPC method to retrieve the uid, saving a RPC call;\n\n- The uid mentioned above is not a session-like id. It is really only the database id of the user\n  and it never expires. There is really no 'login' or 'session initiation' step required to access \n  Odoo's external API if you know the uid from the beginning;\n\n\n### Other things to know about this module:\n- It ships will a good suite of tests that run against an OCA runbot instance;\n\n- Asyncio is a python3 thing, so no python2 support;\n\n- Type hints are used everywhere;\n\n- This package uses jsonrpc only (no xmlrpc). There is a lack of async xmlrpc tooling and\n  jsonrpc is considered the best RPC protocol in Odoo (faster, more widely used);\n  \n- The synchronous version of the code is generated automatically from the asynchronous code, so at\n  least for now the effort to maintain both is minimal.\n\n- I am willing to take patches and to add other contributors to this project. Feel free to get in touch,\n  the github page is the best place to interact with the project and the project's author;\n\n- I only develop and run code in Linux environments, if you find a bug under other OS I am happy\n  to take patches but I will not myself spend time looking into these eventual bugs;\n\n\n### Usage\n\nOk, so let's start with some examples. I will omit the event_loop logic, I assume that if you want\nto use an async module you already have that sorted out yourself or through a framework like FastAPI.\n\nAll examples below could also be called using the synchronous OdooRPC object, but without the\n'await' syntax.\n\nI recommend that you check the tests folder for many more examples. Also, the codebase is very very short,\ndo refer to it as well.\n\n```\nfrom aio_odoorpc_base.aio import login, execute_kw \nfrom aio_odoorpc_base.helpers import execute_kwargs\nimport httpx\n\nurl = 'https://odoo.acme.com/jsonrpc'\n\nasync with httpx.AsyncClient() as client:\n    uid = await login(http_client=client, url=url, db='acme', login='demo', password='demo')\n    kwargs = execute_kwargs(fields=['partner_id', 'date_order', 'amount_total'],\n                            limit=1000, offset=0, order='amount_total DESC')\n    data = await execute_kw(http_client=client,\n                            url=url,\n                            db='acme',\n                            uid=uid,\n                            password='demo',\n                            obj='sale.order',\n                            method='search_read',\n                            args=[],\n                            kw=kwargs)\n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mbello/aio-odoorpc-base", "keywords": "odoo,odoorpc,asyncio,aio-odoorpc", "license": "CC0-1.0", "maintainer": "", "maintainer_email": "", "name": "aio-odoorpc-base", "package_url": "https://pypi.org/project/aio-odoorpc-base/", "platform": "", "project_url": "https://pypi.org/project/aio-odoorpc-base/", "project_urls": {"Homepage": "https://github.com/mbello/aio-odoorpc-base", "Repository": "https://github.com/mbello/aio-odoorpc-base"}, "release_url": "https://pypi.org/project/aio-odoorpc-base/3.0.4/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Fast, simple Odoo RPC package with sync and async functions to pilot Odoo's jsonrpc API. Check aio-odoorpc for a higher-level, friendlier interface.", "version": "3.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Base functions to pilot Odoo's jsonrpc API (aio-odoorpc-base)</h2>\n<h3>Description:</h3>\n<p>This python package implements a <strong>complete</strong> set of methods to access<br>\nOdoo's external API (using jsonrpc rather than xmlrpc).</p>\n<p>It offers an almost-exact mirror of Odoo's external API, even parameter names are the same.\nIt is 'almost-exact' because 'execute' is skipped in favor of 'execute_kw' only and the\nIt is 'almost-exact' because 'execute' is skipped in favor of 'execute_kw' only and the\nAPI methods from the 'db' service: 'list', 'drop', 'dump', 'rename', 'restore' are here\nimplemented with names 'list_databases', 'drop_database', 'dump_database', 'rename_database'\nand 'restore_database' respectively.</p>\n<p>The 'documentation' offered by this package is mostly in the form of proper type\nannotations so that you have a better idea of what kind of data each API method expects.\nOther than that, developers are recommended to go study Odoo's external API by reading the\nsource code at (<a href=\"https://github.com/odoo/odoo/tree/master/odoo/service\" rel=\"nofollow\">https://github.com/odoo/odoo/tree/master/odoo/service</a>). The three API services\n'object', 'common' and 'db' are implemented there in files model.py, common.py and db.py\nrespectively. On each of these python files, a 'dispatch' method is implemented for the service\nin question. The methods available on the external service api are usually those prefixed with\n'exp_' in the method name, with the exception of the 'object' service which only exposes\n'execute' and 'execute_kw'.</p>\n<p>All functions offered by this package are available in both async and sync versions.</p>\n<p>Odoo's API methods implemented:</p>\n<ul>\n<li>about</li>\n<li>authenticate</li>\n<li>change_admin_password</li>\n<li>create_database</li>\n<li>db_exist</li>\n<li>drop_database</li>\n<li>dump_database</li>\n<li>duplicate_database</li>\n<li>execute_kw</li>\n<li>list_countries</li>\n<li>list_databases</li>\n<li>list_lang</li>\n<li>login</li>\n<li>migrate_databases</li>\n<li>rename_database</li>\n<li>restore_database</li>\n<li>server_version</li>\n<li>version</li>\n</ul>\n<p>All methods take as first 2 parameters:</p>\n<ul>\n<li>\n<p><strong>http_client</strong>: a callable or an instance of a compatible http_client (it must implement a 'post'\nmethod that accepts a 'url' and a 'json' parameter. Packages 'requests', 'httpx' and 'aiohttp' are\ncompatible).\nIf http_client is a callable, it will be called with a dict as the post payload and must return a\nresponse object with a '.json()' method that may be synchronous or asynchronous (when using the async\nfunctions). It must return a dict or dict-like object representing the reponse.</p>\n</li>\n<li>\n<p><strong>url</strong>: the complete URL of your Odoo's jsonrpc endpoint. Usually something like\n'<a href=\"https://odoo.acme.com/jsonrpc\" rel=\"nofollow\">https://odoo.acme.com/jsonrpc</a>' or '<a href=\"https://odoo.acme.com:8443/jsonrpc\" rel=\"nofollow\">https://odoo.acme.com:8443/jsonrpc</a>'.</p>\n</li>\n</ul>\n<p>Remaining parameters on each method are those expected by Odoo's external API, with identical names\nas you will find on Odoo's source code. The method 'jsonrpc' is the low-level method in this package that\nactually does all the HTTP calls for all implemented methods.</p>\n<p>By default, when you issue 'from aio_odoorpc_base import ...' you will be importing the async methods.\nIf you want the sync methods you must import from 'aio_odoorpc_base.sync'. You may also use\n'aio_odoorpc_base.aio' if you prefer to be explicit on whether you are importing sync or async code.</p>\n<h3>aio-odoorpc: a higher-level API</h3>\n<p>In practice, you may notice that 99% of the time you will be calling the 'execute_kw' method\nwhich is what allows you to deal with Odoo's models, reading and writing actual business data\nvia the model methods 'search', 'read', 'search_read', 'search_count', 'write', 'create', etc.\nWhile this package only offers you a bare 'execute_kw' method and a helper 'execute_kwargs',\nthe higher-level package 'aio-odoorpc' expands over this one adding higher-level objects and methods\n(such as 'search', 'read', 'search_read', 'search_count', 'write', 'create', etc) to consume those\nmodel methods through calls to 'execute_kw' external API method.</p>\n<h3>No dependencies:</h3>\n<p>No dependency is not a promise, just a preference. It may change in the future, but only if for very\ngood reason. Here, are free to use whatever HTTP Client library you want.</p>\n<p>I am willing to make modifications in the code in order to support other http client solutions,\njust get in touch (use the project's github repository for that).</p>\n<p>While it would be easier if this package shipped with a specific http client dependency, it should be\nnoted that having the possibility to reuse HTTP sessions is a great opportunity to improve the\nspeed of your running code. Also, it is possible that your project is already using some http client\nlibrary and here you have the opportunity to use it.</p>\n<p>Remember that you must use an async http client library if you are going to use the async functions,\nor use a synchronous http client library if you are going to use the sync function.</p>\n<h3>Python HTTP Client packages known to be compatible:</h3>\n<ul>\n<li>sync-only: 'requests'</li>\n<li>async-only: 'aiohttp'</li>\n<li>sync and async: 'httpx'</li>\n</ul>\n<h3>Motivation:</h3>\n<p>The package 'odoorpc' is the most used and better maintained package to let you easily consume Odoo's\nexternal API. It has lots of functionality, good documentation, a large user base and was developed\nby people that are very experienced with Odoo in general and big contributors to the Odoo Community.<br>\nIn other words, if you are taking your first steps and do not need an async interface now, start with\nodoorpc.</p>\n<p>However, for my needs, once I was developing Odoo integrations that needed to make hundreds of calls\nto the Odoo API to complete a single job, I began to sorely miss an async interface as well as more\ncontrol over the HTTP client used (I wished for HTTP2 support and connection polling/reuse).</p>\n<p>Also, as I understood Odoo's external API, it started to sound like 'odoorpc' was too big for a task\ntoo simple. For instance, most of the time (like 99,99% of the time), you will be calling to a single\njsonrpc method called 'execute_kw'. It is the same call over and over just changing the payload which\nitself is a simple json.</p>\n<p>So I decided to develop a new package myself, made it async-first and tryed to keep it as simple as\npossible. Also, I decided to split it in two, a very simple base package (this one) with only methods\nthat mirror those in Odoo's external API and another one 'aio-odoorpc' that adds another layer to\nimplement Odoo's model methods like 'search', 'search_read', 'read', etc. as well as an object model\nto instantiate a class once and then make simple method invocation with few parameters to access\nwhat you need.</p>\n<h3>Useful tips about Odoo's external API:</h3>\n<ul>\n<li>\n<p>The 'login' call is really only a lookup of the user_id (an int) of a user given a\ndatabase name, user/login name and password. If you are using this RPC client over and over in your\ncode, maybe even calling from a stateless cloud service, you should consider finding out the\nuser id (uid) of the user and pass the uid instead of the username to the constructor of AsyncOdooRPC.\nThis way, you do not need to call the login() RPC method to retrieve the uid, saving a RPC call;</p>\n</li>\n<li>\n<p>The uid mentioned above is not a session-like id. It is really only the database id of the user\nand it never expires. There is really no 'login' or 'session initiation' step required to access\nOdoo's external API if you know the uid from the beginning;</p>\n</li>\n</ul>\n<h3>Other things to know about this module:</h3>\n<ul>\n<li>\n<p>It ships will a good suite of tests that run against an OCA runbot instance;</p>\n</li>\n<li>\n<p>Asyncio is a python3 thing, so no python2 support;</p>\n</li>\n<li>\n<p>Type hints are used everywhere;</p>\n</li>\n<li>\n<p>This package uses jsonrpc only (no xmlrpc). There is a lack of async xmlrpc tooling and\njsonrpc is considered the best RPC protocol in Odoo (faster, more widely used);</p>\n</li>\n<li>\n<p>The synchronous version of the code is generated automatically from the asynchronous code, so at\nleast for now the effort to maintain both is minimal.</p>\n</li>\n<li>\n<p>I am willing to take patches and to add other contributors to this project. Feel free to get in touch,\nthe github page is the best place to interact with the project and the project's author;</p>\n</li>\n<li>\n<p>I only develop and run code in Linux environments, if you find a bug under other OS I am happy\nto take patches but I will not myself spend time looking into these eventual bugs;</p>\n</li>\n</ul>\n<h3>Usage</h3>\n<p>Ok, so let's start with some examples. I will omit the event_loop logic, I assume that if you want\nto use an async module you already have that sorted out yourself or through a framework like FastAPI.</p>\n<p>All examples below could also be called using the synchronous OdooRPC object, but without the\n'await' syntax.</p>\n<p>I recommend that you check the tests folder for many more examples. Also, the codebase is very very short,\ndo refer to it as well.</p>\n<pre><code>from aio_odoorpc_base.aio import login, execute_kw \nfrom aio_odoorpc_base.helpers import execute_kwargs\nimport httpx\n\nurl = 'https://odoo.acme.com/jsonrpc'\n\nasync with httpx.AsyncClient() as client:\n    uid = await login(http_client=client, url=url, db='acme', login='demo', password='demo')\n    kwargs = execute_kwargs(fields=['partner_id', 'date_order', 'amount_total'],\n                            limit=1000, offset=0, order='amount_total DESC')\n    data = await execute_kw(http_client=client,\n                            url=url,\n                            db='acme',\n                            uid=uid,\n                            password='demo',\n                            obj='sale.order',\n                            method='search_read',\n                            args=[],\n                            kw=kwargs)\n</code></pre>\n\n          </div>"}, "last_serial": 6781218, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "75aaba3256f73bb7823de5ebd8b688bf", "sha256": "546fb2c044232fe938816b3a1cfa5474c7491625adb27c9665600ef1904ef736"}, "downloads": -1, "filename": "aio_odoorpc_base-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "75aaba3256f73bb7823de5ebd8b688bf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 4941, "upload_time": "2020-01-17T03:50:27", "upload_time_iso_8601": "2020-01-17T03:50:27.524142Z", "url": "https://files.pythonhosted.org/packages/f8/85/6f4ade54d38c6c8166145d0ce885d6434d6baee28a171c12dd62db06a361/aio_odoorpc_base-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c863c87922ff3e3d829c5a7c13997a3c", "sha256": "5eb5a16c8f44daa2aa565537b68159df8f8d9c58c0cba29bd6977d7cdb20d610"}, "downloads": -1, "filename": "aio-odoorpc-base-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c863c87922ff3e3d829c5a7c13997a3c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 3211, "upload_time": "2020-01-17T03:50:25", "upload_time_iso_8601": "2020-01-17T03:50:25.077347Z", "url": "https://files.pythonhosted.org/packages/ea/c0/f733b299cb6105b32eb1356605e5287bf2bf0e0d39cec5155202120c773d/aio-odoorpc-base-0.1.0.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "5c2cbb4420343ef9524f72c53a36495e", "sha256": "c04a50fc6ea50eeb7418653ec890815f15206d621da8a38e73af7d5b42ec3ce6"}, "downloads": -1, "filename": "aio_odoorpc_base-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5c2cbb4420343ef9524f72c53a36495e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 5224, "upload_time": "2020-01-18T03:48:20", "upload_time_iso_8601": "2020-01-18T03:48:20.808778Z", "url": "https://files.pythonhosted.org/packages/9a/40/08fc815459b7b7e7df50331a012839561477bbc50f6f24ffda0cae8cf5f0/aio_odoorpc_base-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a11893eb2aeb3ef87f0f82b4053c1cc", "sha256": "3e6c5830380a1abdcab2c1f93886e1acf9a1a543553c63299184c41bab6a46e4"}, "downloads": -1, "filename": "aio-odoorpc-base-1.0.3.tar.gz", "has_sig": false, "md5_digest": "6a11893eb2aeb3ef87f0f82b4053c1cc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 3430, "upload_time": "2020-01-18T03:48:19", "upload_time_iso_8601": "2020-01-18T03:48:19.690180Z", "url": "https://files.pythonhosted.org/packages/8b/6b/308ecd44e216b01fa462e7291f669ccb772ca2476918fa640ab3aa8dfeeb/aio-odoorpc-base-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "d32d444ff043de666a868c501afd658b", "sha256": "d0b996d46b80d1f2bb10bfd4ce1ebb466deaa43dc6e6e68b37acf4a6bca7479d"}, "downloads": -1, "filename": "aio_odoorpc_base-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "d32d444ff043de666a868c501afd658b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 5224, "upload_time": "2020-01-18T03:50:51", "upload_time_iso_8601": "2020-01-18T03:50:51.104142Z", "url": "https://files.pythonhosted.org/packages/32/17/0fff9aedfd317c4820b7a730f71489659ea700d1940686b7830a64cd7497/aio_odoorpc_base-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "98bf0763084bb3ef4fef937859220757", "sha256": "974b921fa29af8308aaec174bae34483f9a6e93cfb29fb480f0b40215970d45c"}, "downloads": -1, "filename": "aio-odoorpc-base-1.0.4.tar.gz", "has_sig": false, "md5_digest": "98bf0763084bb3ef4fef937859220757", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 3438, "upload_time": "2020-01-18T03:50:49", "upload_time_iso_8601": "2020-01-18T03:50:49.785703Z", "url": "https://files.pythonhosted.org/packages/0e/5f/b57e50cf7b05b734d7d568906fd0e65771dfdd8dbe97b77f62dcb058dada/aio-odoorpc-base-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "65ae311dee6a892b2ea17071d4740516", "sha256": "18431ac5c8714d3602026da500e7742e82020d8e5eba0e5abfa162888ce24f7c"}, "downloads": -1, "filename": "aio_odoorpc_base-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "65ae311dee6a892b2ea17071d4740516", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 5224, "upload_time": "2020-01-18T13:42:54", "upload_time_iso_8601": "2020-01-18T13:42:54.182221Z", "url": "https://files.pythonhosted.org/packages/7b/1c/6034a9c56f5d953e50a349efee593ae62958e256c096152cfbdba3e85314/aio_odoorpc_base-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2efbef2b2ec0f4bd53397dbb9522f10", "sha256": "987d79d93f991d325d8d21cff7fa6a1499aa3ee49585ae23b44403f061e83534"}, "downloads": -1, "filename": "aio-odoorpc-base-1.0.5.tar.gz", "has_sig": false, "md5_digest": "a2efbef2b2ec0f4bd53397dbb9522f10", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 3431, "upload_time": "2020-01-18T13:42:52", "upload_time_iso_8601": "2020-01-18T13:42:52.657211Z", "url": "https://files.pythonhosted.org/packages/8a/0e/f04e2a2b0a4c6d0b98fa052b032d462c7a87033b699cd99463f9247ad4df/aio-odoorpc-base-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "96b75fcb1074ce2b8e6d612074ab5679", "sha256": "33531d78a45a8ebde76918a1f84fee35836de12fb09f22b7b105b3d4404e4399"}, "downloads": -1, "filename": "aio_odoorpc_base-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "96b75fcb1074ce2b8e6d612074ab5679", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 5225, "upload_time": "2020-01-18T14:29:30", "upload_time_iso_8601": "2020-01-18T14:29:30.208956Z", "url": "https://files.pythonhosted.org/packages/0e/2b/a143f3f967b6df93acc15d31592ff49219efffd4aa3802220be06bcc0c48/aio_odoorpc_base-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62b4519bb927216aa8bf5ae6277dc3f6", "sha256": "1e108425ae0da68b5aec7846435b706c5ba6b3df94998c324cb363394de3430b"}, "downloads": -1, "filename": "aio-odoorpc-base-1.0.6.tar.gz", "has_sig": false, "md5_digest": "62b4519bb927216aa8bf5ae6277dc3f6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 3429, "upload_time": "2020-01-18T14:29:28", "upload_time_iso_8601": "2020-01-18T14:29:28.678166Z", "url": "https://files.pythonhosted.org/packages/01/6e/f75d6d74a5572f000397fe5b7cbbb78df3a485ab595e3989bc9ed26b37a0/aio-odoorpc-base-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "56b537cc98e0028bfcca960bf3d7f952", "sha256": "785bf9fe65ba2546ec9d4095506f73bd465959b6c6bf58278dade1d93c2c2390"}, "downloads": -1, "filename": "aio_odoorpc_base-1.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "56b537cc98e0028bfcca960bf3d7f952", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 5222, "upload_time": "2020-01-20T13:46:29", "upload_time_iso_8601": "2020-01-20T13:46:29.570783Z", "url": "https://files.pythonhosted.org/packages/3c/c0/53e52624498a3b3748167e041c2009a72ca99a4c8ac05168398331148dfd/aio_odoorpc_base-1.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b324a7c4a332a1b1f54bcd89db63f797", "sha256": "f505cf4871ae09a218eb25ac254f5ef701daa317c9edafd54adce7763fb667f9"}, "downloads": -1, "filename": "aio-odoorpc-base-1.0.7.tar.gz", "has_sig": false, "md5_digest": "b324a7c4a332a1b1f54bcd89db63f797", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 3428, "upload_time": "2020-01-20T13:46:27", "upload_time_iso_8601": "2020-01-20T13:46:27.906352Z", "url": "https://files.pythonhosted.org/packages/8e/1e/85cc73e89e6ef6eb2eaf8a93f563648fb1388bcadfe6ef9503af06f0bbd0/aio-odoorpc-base-1.0.7.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "36801f640c0a62832731162eabdebdc4", "sha256": "e6ad64a19fe79aa15016fddc8a08a32c46066711d8a67ca8c39bbc23c0e31998"}, "downloads": -1, "filename": "aio_odoorpc_base-2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "36801f640c0a62832731162eabdebdc4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 5213, "upload_time": "2020-01-21T01:24:42", "upload_time_iso_8601": "2020-01-21T01:24:42.233538Z", "url": "https://files.pythonhosted.org/packages/8b/92/7fc0b19d690d4ec7dbbd18d4644663932b6cd48519ecb5001aa95431e2b7/aio_odoorpc_base-2.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb560a97403739ba8db514bec7c64e50", "sha256": "f0f0b92befd185e23581a2bc74fb3402092cf3c67fa5103fb12e787ea4c332e6"}, "downloads": -1, "filename": "aio-odoorpc-base-2.0.1.tar.gz", "has_sig": false, "md5_digest": "fb560a97403739ba8db514bec7c64e50", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 3413, "upload_time": "2020-01-21T01:24:40", "upload_time_iso_8601": "2020-01-21T01:24:40.795735Z", "url": "https://files.pythonhosted.org/packages/a9/f8/39e7cd66b2ad9b73ca2d09ab87fd641150578b1f78e0119281de5c84a2ad/aio-odoorpc-base-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "767a397dbd53fc3b414be60902eefdb3", "sha256": "9de9e23620ae6ae0a8dff9f7a37e0da263a3409b1f88837d34d33325e2b12570"}, "downloads": -1, "filename": "aio_odoorpc_base-2.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "767a397dbd53fc3b414be60902eefdb3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 7962, "upload_time": "2020-01-21T17:37:31", "upload_time_iso_8601": "2020-01-21T17:37:31.310633Z", "url": "https://files.pythonhosted.org/packages/91/9c/616d3753310c792bc61c1d20eb84e43aee7c3684f5ffafb03db8acfd7c61/aio_odoorpc_base-2.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3698a7fd6f49ff089daffbbe1d7c47e", "sha256": "01ec6b1cab0710b4237f83450bec9b6c2978303c2c1dcd5a3d9931e02a553cc3"}, "downloads": -1, "filename": "aio-odoorpc-base-2.0.2.tar.gz", "has_sig": false, "md5_digest": "c3698a7fd6f49ff089daffbbe1d7c47e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 7132, "upload_time": "2020-01-21T17:37:29", "upload_time_iso_8601": "2020-01-21T17:37:29.365471Z", "url": "https://files.pythonhosted.org/packages/c0/87/ccd529b57bec9f5eb1652637de58755a8828c82291d24477bd48fdecc6aa/aio-odoorpc-base-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "ecc703ccb9cce9caecc1545c3a1f69b3", "sha256": "d9452322c08008b79a7dacd6d64cc166ec22a7e3f6e7073798f97bdbbd66056b"}, "downloads": -1, "filename": "aio_odoorpc_base-2.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "ecc703ccb9cce9caecc1545c3a1f69b3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 7963, "upload_time": "2020-01-28T23:42:53", "upload_time_iso_8601": "2020-01-28T23:42:53.810780Z", "url": "https://files.pythonhosted.org/packages/ef/f5/ff28184a71afced17addff27b78c2a8a33d734b55dc21117a9c32d9fbb6e/aio_odoorpc_base-2.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a94f83cc5f322a35a53c108e77314900", "sha256": "7487c99483450214cd375d736854f60f5549b66503884505d410f60685c43854"}, "downloads": -1, "filename": "aio-odoorpc-base-2.0.3.tar.gz", "has_sig": false, "md5_digest": "a94f83cc5f322a35a53c108e77314900", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 7134, "upload_time": "2020-01-28T23:42:51", "upload_time_iso_8601": "2020-01-28T23:42:51.962701Z", "url": "https://files.pythonhosted.org/packages/94/dd/9bc0d41b6caf1075d8f70238e659fb2bd02e1071fae9a0720ed1433e84b0/aio-odoorpc-base-2.0.3.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "335279f6562f386c5d42221bc4f1b438", "sha256": "da99cdedc97e181e766ec6c41e90c1d337f602c74923082dfd944c9f2d453462"}, "downloads": -1, "filename": "aio_odoorpc_base-2.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "335279f6562f386c5d42221bc4f1b438", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 7952, "upload_time": "2020-03-05T16:19:57", "upload_time_iso_8601": "2020-03-05T16:19:57.113886Z", "url": "https://files.pythonhosted.org/packages/b4/b7/145d25be38ff5557106152c1d31d799e0e95310c404ade8d0c702b0dd9f4/aio_odoorpc_base-2.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9262aa993a0010aed3d6e3a11c241ca7", "sha256": "f19bb3f5ca24e176ffbd986730259a010398a5a003f670973d61d28a799ca009"}, "downloads": -1, "filename": "aio-odoorpc-base-2.0.4.tar.gz", "has_sig": false, "md5_digest": "9262aa993a0010aed3d6e3a11c241ca7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 7130, "upload_time": "2020-03-05T16:19:55", "upload_time_iso_8601": "2020-03-05T16:19:55.586873Z", "url": "https://files.pythonhosted.org/packages/4b/1c/c0c17d62f178b4e97850c4231a5d58dc006d79a2e19a5f55653fcc23c8f1/aio-odoorpc-base-2.0.4.tar.gz", "yanked": false}], "2.0.5": [{"comment_text": "", "digests": {"md5": "0008c61f1669b60888b713b932205c75", "sha256": "80a1e73b46f127d28f0f157f236d431cc72d5f6309f7c8673def394c286f1a61"}, "downloads": -1, "filename": "aio_odoorpc_base-2.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "0008c61f1669b60888b713b932205c75", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 11014, "upload_time": "2020-03-08T00:12:05", "upload_time_iso_8601": "2020-03-08T00:12:05.655735Z", "url": "https://files.pythonhosted.org/packages/e6/dd/dd051e6c0538923653ad67c8bfb7449e1232bcf79f5cae253ed711554cfb/aio_odoorpc_base-2.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "771ee8f41b0e4c80765f15806b149f10", "sha256": "ceb1b1811cd63969ab55b3650acf0f68e326b5ac321bfc1a39827ec3a3a5854b"}, "downloads": -1, "filename": "aio-odoorpc-base-2.0.5.tar.gz", "has_sig": false, "md5_digest": "771ee8f41b0e4c80765f15806b149f10", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 10266, "upload_time": "2020-03-08T00:12:03", "upload_time_iso_8601": "2020-03-08T00:12:03.826532Z", "url": "https://files.pythonhosted.org/packages/72/4f/dbb3b399252483c2a267c19a73e8e1bc4aa61fb890c856869fb1c1b05c6b/aio-odoorpc-base-2.0.5.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "bc5d1c4b51c36aa59bf3b23e08ba3438", "sha256": "c246e3e0c081760b2f302b98e8b0f7674718d20ab8c2bfd58be4b50ae3edfde6"}, "downloads": -1, "filename": "aio_odoorpc_base-3.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bc5d1c4b51c36aa59bf3b23e08ba3438", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 17413, "upload_time": "2020-03-09T16:28:33", "upload_time_iso_8601": "2020-03-09T16:28:33.452663Z", "url": "https://files.pythonhosted.org/packages/0d/6a/abab15ebed57a7b3e74436f491023a47d55b6844b3c41939132bb32600e4/aio_odoorpc_base-3.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ed39c844be4e993a2842ee4ec4dfa80", "sha256": "66d77fb7f5b9dc9b69d0ec2bc247d375fc20c7ef667e11537930ac7f92ef34fe"}, "downloads": -1, "filename": "aio-odoorpc-base-3.0.0.tar.gz", "has_sig": false, "md5_digest": "5ed39c844be4e993a2842ee4ec4dfa80", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 16234, "upload_time": "2020-03-09T16:28:31", "upload_time_iso_8601": "2020-03-09T16:28:31.912337Z", "url": "https://files.pythonhosted.org/packages/cb/a8/cc86ae745316817e990742d32f1e6f8bb385e5469e080c511dff6728f6c8/aio-odoorpc-base-3.0.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "7720a926a864a8720c591c87d525dde0", "sha256": "c69c68e42965b30c4e7a52972bfc4fcf63a6624caffe809707ab822df98ac625"}, "downloads": -1, "filename": "aio_odoorpc_base-3.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7720a926a864a8720c591c87d525dde0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 17406, "upload_time": "2020-03-09T17:19:34", "upload_time_iso_8601": "2020-03-09T17:19:34.818046Z", "url": "https://files.pythonhosted.org/packages/58/91/947913df77eb28ee2472af1c32a9537380bd7bdf1ebef27d6861c10b5d10/aio_odoorpc_base-3.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1384605a61cabfb5fcf1c98ca2d766de", "sha256": "468ae1d516b2202d04b7340cf1135dfdf5b2c28783b9ce2231becc6baef8b79b"}, "downloads": -1, "filename": "aio-odoorpc-base-3.0.1.tar.gz", "has_sig": false, "md5_digest": "1384605a61cabfb5fcf1c98ca2d766de", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 16222, "upload_time": "2020-03-09T17:19:32", "upload_time_iso_8601": "2020-03-09T17:19:32.971584Z", "url": "https://files.pythonhosted.org/packages/30/f6/755e596eebc4e86966128d38e6948c98de1ff9b598694274a6ba7c7e2e46/aio-odoorpc-base-3.0.1.tar.gz", "yanked": false}], "3.0.2": [{"comment_text": "", "digests": {"md5": "52b51382cd0d8867136415af6212ac52", "sha256": "fac2a6d0b44345bd212e2457f335c67eec0120da6670d20c242160dfc7d54774"}, "downloads": -1, "filename": "aio_odoorpc_base-3.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "52b51382cd0d8867136415af6212ac52", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17391, "upload_time": "2020-03-09T17:41:21", "upload_time_iso_8601": "2020-03-09T17:41:21.557727Z", "url": "https://files.pythonhosted.org/packages/4a/c5/486137c6aef1a19d3cf190c0d516e76996819f1dedb28cd7da95f7d3df34/aio_odoorpc_base-3.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "85db65173a208ba36161befd991d6a93", "sha256": "54c41aa3e64956df57243d34927913973560ee238affc621750ce81cf9d2e8b1"}, "downloads": -1, "filename": "aio-odoorpc-base-3.0.2.tar.gz", "has_sig": false, "md5_digest": "85db65173a208ba36161befd991d6a93", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16190, "upload_time": "2020-03-09T17:41:20", "upload_time_iso_8601": "2020-03-09T17:41:20.016058Z", "url": "https://files.pythonhosted.org/packages/1c/03/711246e086120910d8ee007cf88b1d7783b3a649dd6c39cc6c6658832745/aio-odoorpc-base-3.0.2.tar.gz", "yanked": false}], "3.0.3": [{"comment_text": "", "digests": {"md5": "8fb5817614488b0f0c5463f6c95ed50f", "sha256": "6c2945f2a7a97d2b44122405a7350b1e06d8383779ee10a5cec75d6ee805ad15"}, "downloads": -1, "filename": "aio_odoorpc_base-3.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "8fb5817614488b0f0c5463f6c95ed50f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17426, "upload_time": "2020-03-09T23:35:38", "upload_time_iso_8601": "2020-03-09T23:35:38.394980Z", "url": "https://files.pythonhosted.org/packages/15/75/9457052c6599e5556ac80587417c75c68cb4db42a51b19055b77e7c77370/aio_odoorpc_base-3.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be5a3e624a220516b07b3b0ef930638d", "sha256": "8753cb6d50b77f97bc9213302d280dc59ee44018161e82b51338b6714c5dff42"}, "downloads": -1, "filename": "aio-odoorpc-base-3.0.3.tar.gz", "has_sig": false, "md5_digest": "be5a3e624a220516b07b3b0ef930638d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16232, "upload_time": "2020-03-09T23:35:36", "upload_time_iso_8601": "2020-03-09T23:35:36.560409Z", "url": "https://files.pythonhosted.org/packages/e2/ea/97c3570230026561c88a475f2257b2f8593055c5a88ee20a116be9e71a56/aio-odoorpc-base-3.0.3.tar.gz", "yanked": false}], "3.0.4": [{"comment_text": "", "digests": {"md5": "db4423b0f4950b5263dc01d3ba4e4a0c", "sha256": "0a2048bfa815f0f370b89d9281c05940934896e24818e7d100f911dd7a865d2a"}, "downloads": -1, "filename": "aio_odoorpc_base-3.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "db4423b0f4950b5263dc01d3ba4e4a0c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17426, "upload_time": "2020-03-09T23:41:32", "upload_time_iso_8601": "2020-03-09T23:41:32.534854Z", "url": "https://files.pythonhosted.org/packages/05/2b/561a1e390796a058cae5075a3f1b07308d4edb4ef26231b18a7d7a7f4a0a/aio_odoorpc_base-3.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f0e44408fd0e4ffccbf306ab24b12ac", "sha256": "dc04505154217107c9fadb67a362a80d78519dcac637022d329d5e40e326b41a"}, "downloads": -1, "filename": "aio-odoorpc-base-3.0.4.tar.gz", "has_sig": false, "md5_digest": "6f0e44408fd0e4ffccbf306ab24b12ac", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16224, "upload_time": "2020-03-09T23:41:30", "upload_time_iso_8601": "2020-03-09T23:41:30.734275Z", "url": "https://files.pythonhosted.org/packages/43/ab/0b47d94fb35e08d96dc17b6b29cfff056361650d3cf8477eff885b16b425/aio-odoorpc-base-3.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "db4423b0f4950b5263dc01d3ba4e4a0c", "sha256": "0a2048bfa815f0f370b89d9281c05940934896e24818e7d100f911dd7a865d2a"}, "downloads": -1, "filename": "aio_odoorpc_base-3.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "db4423b0f4950b5263dc01d3ba4e4a0c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17426, "upload_time": "2020-03-09T23:41:32", "upload_time_iso_8601": "2020-03-09T23:41:32.534854Z", "url": "https://files.pythonhosted.org/packages/05/2b/561a1e390796a058cae5075a3f1b07308d4edb4ef26231b18a7d7a7f4a0a/aio_odoorpc_base-3.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f0e44408fd0e4ffccbf306ab24b12ac", "sha256": "dc04505154217107c9fadb67a362a80d78519dcac637022d329d5e40e326b41a"}, "downloads": -1, "filename": "aio-odoorpc-base-3.0.4.tar.gz", "has_sig": false, "md5_digest": "6f0e44408fd0e4ffccbf306ab24b12ac", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16224, "upload_time": "2020-03-09T23:41:30", "upload_time_iso_8601": "2020-03-09T23:41:30.734275Z", "url": "https://files.pythonhosted.org/packages/43/ab/0b47d94fb35e08d96dc17b6b29cfff056361650d3cf8477eff885b16b425/aio-odoorpc-base-3.0.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:00 2020"}