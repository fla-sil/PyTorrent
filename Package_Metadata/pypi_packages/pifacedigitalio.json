{"info": {"author": "Thomas Preston", "author_email": "thomas.preston@openlx.org.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "pifacedigitalio\n===============\nThe PiFace Digital Input/Output module ([PyPI](https://pypi.python.org/pypi/pifacedigitalio/)).\n\n\nDocumentation\n=============\n\n[http://piface.github.io/pifacedigitalio/](http://piface.github.io/pifacedigitalio/)\n\nYou can also find the documentation and some examples installed at:\n\n    /usr/share/doc/python3-pifacedigitalio/\n\nInstall\n=======\n\nMake sure you are using the lastest version of Raspbian:\n\n    $ sudo apt-get update\n    $ sudo apt-get upgrade\n\nInstall `pifacedigitalio` (for Python 3 and 2) with the following command:\n\n    $ sudo apt-get install python{,3}-pifacedigitalio\n\nTest by running the `blink.py` program:\n\n    $ python3 /usr/share/doc/python3-pifacedigitalio/examples/blink.py\nChange Log\n==========\n\nv3.0.5\n------\n- Added PiFace Digital Emulator installation instructions to the docs.\n\nv3.0.4\n------\n- Added deinit_board method to PiFace Digital.\n- Fixed bug where digital_read and digital_write would not close SPI file\n  descriptor.\n\nv3.0.3\n------\n- Added documentation for simplewebcontrol.py.\n\nv3.0.2\n------\n- Added bus and chip_select to deinit.\n\nv3.0.1\n------\n- Fixed deinit bug (fixes GitHub pifacecommon issue #6).\n\nv3.0.0\n------\n- Updated for compatibility with pifacecommon v4.0.0 (which uses the MCP23S17\n  class).\n- All occurrences of `board_num` have been replaced with `hardware_addr` which\n  is more appropriate.\n- PiFace Digital is initialised when you instantiate the object. **You do not\n  need to call pifacedigitalio.init() any more unless you're using digital_read\n  or digital_write.**\n- PiFaceDigital inherits registers from MCP23S17 so you can access all the\n  registers on the chip. For example GPPUP:\n\n      >>> pfd = PiFaceDigital()\n      >>> pfd.gppub.value = 0xff\n      >>> pfd.gppub.bits[4].value = 1\n\n- InputEventListener now requires that you provide a chip object, not\n  a hardware_addr (board_num). This defaults to PiFaceDigital(hardware_addr=0).\n- Interrupt events contain a chip object representing the calling chip instead\n  of the hardware_addr (board_num). You can still access the\n  hardware_addr (board_num) like so:\n\n      >>> def my_callback(event):\n      ...     print(event.chip.hardware_addr)\n\n- Removed LED, Relay and Switch classes. They added arbitrary restrictions and\n  were not very useful. `pifacecommon.mcp23s17.MCP23S17RegisterBit` is more\n  appropriate.\n- Updated examples to reflect new changes.\n- See the docs (particularly the examples) for more information.\n\nv2.1.0\n------\n- Added IODIR_FALLING_EDGE and IODIR_RISING_EDGE (pifacecommon v3.1.1).\n- Added `bus` and `chip_select` optional arguments to init.\n\nv2.0.3\n------\n- Interrupts now work for multiple boards.\n\nv2.0.2\n------\n- Using package structure for version number file and consistency with\n  other PiFace modules.\n- Updated docs with new install instructions.\n\nv2.0.1\n------\n- Added version number to source.\n\nv2.0.0\n------\n- Using new interrupt API (check the docs).\n\nv1.2.1\n------\n- Supports Python 2.\n- Started using semantic versioning http://semver.org/.\n\nv1.2\n------\n- Started using a change log!\n- Removed install.sh, everything is now handled by setup.py.\n- Updated docs.\n- Added some examples.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://piface.github.io/pifacedigitalio/", "keywords": "piface digital raspberrypi openlx", "license": "GPLv3+", "maintainer": null, "maintainer_email": null, "name": "pifacedigitalio", "package_url": "https://pypi.org/project/pifacedigitalio/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pifacedigitalio/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://piface.github.io/pifacedigitalio/"}, "release_url": "https://pypi.org/project/pifacedigitalio/3.0.5/", "requires_dist": null, "requires_python": null, "summary": "The PiFace Digital I/O module.", "version": "3.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            pifacedigitalio<br>===============<br>The PiFace Digital Input/Output module ([PyPI](https://pypi.python.org/pypi/pifacedigitalio/)).<br><br><br>Documentation<br>=============<br><br>[http://piface.github.io/pifacedigitalio/](http://piface.github.io/pifacedigitalio/)<br><br>You can also find the documentation and some examples installed at:<br><br>    /usr/share/doc/python3-pifacedigitalio/<br><br>Install<br>=======<br><br>Make sure you are using the lastest version of Raspbian:<br><br>    $ sudo apt-get update<br>    $ sudo apt-get upgrade<br><br>Install `pifacedigitalio` (for Python 3 and 2) with the following command:<br><br>    $ sudo apt-get install python{,3}-pifacedigitalio<br><br>Test by running the `blink.py` program:<br><br>    $ python3 /usr/share/doc/python3-pifacedigitalio/examples/blink.py<br>Change Log<br>==========<br><br>v3.0.5<br>------<br>- Added PiFace Digital Emulator installation instructions to the docs.<br><br>v3.0.4<br>------<br>- Added deinit_board method to PiFace Digital.<br>- Fixed bug where digital_read and digital_write would not close SPI file<br>  descriptor.<br><br>v3.0.3<br>------<br>- Added documentation for simplewebcontrol.py.<br><br>v3.0.2<br>------<br>- Added bus and chip_select to deinit.<br><br>v3.0.1<br>------<br>- Fixed deinit bug (fixes GitHub pifacecommon issue #6).<br><br>v3.0.0<br>------<br>- Updated for compatibility with pifacecommon v4.0.0 (which uses the MCP23S17<br>  class).<br>- All occurrences of `board_num` have been replaced with `hardware_addr` which<br>  is more appropriate.<br>- PiFace Digital is initialised when you instantiate the object. **You do not<br>  need to call pifacedigitalio.init() any more unless you're using digital_read<br>  or digital_write.**<br>- PiFaceDigital inherits registers from MCP23S17 so you can access all the<br>  registers on the chip. For example GPPUP:<br><br>      &gt;&gt;&gt; pfd = PiFaceDigital()<br>      &gt;&gt;&gt; pfd.gppub.value = 0xff<br>      &gt;&gt;&gt; pfd.gppub.bits[4].value = 1<br><br>- InputEventListener now requires that you provide a chip object, not<br>  a hardware_addr (board_num). This defaults to PiFaceDigital(hardware_addr=0).<br>- Interrupt events contain a chip object representing the calling chip instead<br>  of the hardware_addr (board_num). You can still access the<br>  hardware_addr (board_num) like so:<br><br>      &gt;&gt;&gt; def my_callback(event):<br>      ...     print(event.chip.hardware_addr)<br><br>- Removed LED, Relay and Switch classes. They added arbitrary restrictions and<br>  were not very useful. `pifacecommon.mcp23s17.MCP23S17RegisterBit` is more<br>  appropriate.<br>- Updated examples to reflect new changes.<br>- See the docs (particularly the examples) for more information.<br><br>v2.1.0<br>------<br>- Added IODIR_FALLING_EDGE and IODIR_RISING_EDGE (pifacecommon v3.1.1).<br>- Added `bus` and `chip_select` optional arguments to init.<br><br>v2.0.3<br>------<br>- Interrupts now work for multiple boards.<br><br>v2.0.2<br>------<br>- Using package structure for version number file and consistency with<br>  other PiFace modules.<br>- Updated docs with new install instructions.<br><br>v2.0.1<br>------<br>- Added version number to source.<br><br>v2.0.0<br>------<br>- Using new interrupt API (check the docs).<br><br>v1.2.1<br>------<br>- Supports Python 2.<br>- Started using semantic versioning http://semver.org/.<br><br>v1.2<br>------<br>- Started using a change log!<br>- Removed install.sh, everything is now handled by setup.py.<br>- Updated docs.<br>- Added some examples.\n          </div>"}, "last_serial": 1032142, "releases": {"1.2": [{"comment_text": "built for Linux-3.2.0-4-amd64-x86_64-with-glibc2.9", "digests": {"md5": "26201817dd212ba0f87c9921423cdb11", "sha256": "ac9d84478f1cd29d7b05d63f8712ecdd330a1552ec31430e45e1b39f93cf2fcb"}, "downloads": -1, "filename": "pifacedigitalio-1.2.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "26201817dd212ba0f87c9921423cdb11", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 4830, "upload_time": "2013-06-28T13:52:26", "upload_time_iso_8601": "2013-06-28T13:52:26.185543Z", "url": "https://files.pythonhosted.org/packages/ac/c3/f7071a39d75db81bbc1cdccff3e076de8e0a367ec2a761199d847a9e1825/pifacedigitalio-1.2.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "dfa80139fbfa50d059a1aec95b775d13", "sha256": "73184b00e5d119dcbd33909e726d1f45653b064348c1117b6c768f45f2500bf8"}, "downloads": -1, "filename": "pifacedigitalio-1.2.tar.gz", "has_sig": false, "md5_digest": "dfa80139fbfa50d059a1aec95b775d13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3366, "upload_time": "2013-06-28T13:52:20", "upload_time_iso_8601": "2013-06-28T13:52:20.582210Z", "url": "https://files.pythonhosted.org/packages/60/c2/73731a771bc95200c9179bdf2fa48df0184e896c2a8f2707e1437d954923/pifacedigitalio-1.2.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "built for Linux-3.2.0-4-amd64-x86_64-with-glibc2.9", "digests": {"md5": "d4c4f8b5f816ce48d5c7070e3f98da1f", "sha256": "ac19a1063272d50f8cd784b448222298993d20790489c8fe5ad1b31fa8fe7c49"}, "downloads": -1, "filename": "pifacedigitalio-1.2.1.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "d4c4f8b5f816ce48d5c7070e3f98da1f", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 5152, "upload_time": "2013-07-05T11:08:37", "upload_time_iso_8601": "2013-07-05T11:08:37.288531Z", "url": "https://files.pythonhosted.org/packages/9b/5e/2feee6405ffa337653f81f071b63aa8b783d88d1bf88d5c0fd2ce5904c08/pifacedigitalio-1.2.1.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "25a55a8e88a5ec1b2faebf4b66df3ef8", "sha256": "52d190d2dca75bbc97da507c19d4ec011e1bea0bdaf413b1a476d2dac057c7f6"}, "downloads": -1, "filename": "pifacedigitalio-1.2.1.tar.gz", "has_sig": false, "md5_digest": "25a55a8e88a5ec1b2faebf4b66df3ef8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3730, "upload_time": "2013-07-05T11:08:27", "upload_time_iso_8601": "2013-07-05T11:08:27.562255Z", "url": "https://files.pythonhosted.org/packages/e0/2e/f25c862eb9ca1f1b54273c65ba154af4fcbf7427df0e49507ad880c580e7/pifacedigitalio-1.2.1.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "built for Linux-3.2.0-4-amd64-x86_64-with-glibc2.9", "digests": {"md5": "a8745c914926b56bc209c8c8522c879e", "sha256": "1c5c1d9335d412bddbcf0d6dbd4547e7962bd0e4615e60db8f1b1614ecba4de0"}, "downloads": -1, "filename": "pifacedigitalio-2.0.0.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "a8745c914926b56bc209c8c8522c879e", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 5336, "upload_time": "2013-07-10T14:22:07", "upload_time_iso_8601": "2013-07-10T14:22:07.440235Z", "url": "https://files.pythonhosted.org/packages/71/70/099f9c50910daf0f134f772e974253c2dc87425de20302e58559d6921419/pifacedigitalio-2.0.0.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0e94c5a4140e92687eefc0f400a70fa", "sha256": "88932f5bac148a4f4fb3b30f5c403a888a56953439870a47bee452a7b897ea31"}, "downloads": -1, "filename": "pifacedigitalio-2.0.0.tar.gz", "has_sig": false, "md5_digest": "c0e94c5a4140e92687eefc0f400a70fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3727, "upload_time": "2013-07-10T14:21:49", "upload_time_iso_8601": "2013-07-10T14:21:49.891966Z", "url": "https://files.pythonhosted.org/packages/f9/64/33fef241710a0a7028dadb0a94c3b0dda3e9b52ac194119df30219b419c6/pifacedigitalio-2.0.0.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "51062860917e54159aa38c93ee083931", "sha256": "b72ba96d8c8e44383a535c27f40f5480b4d4c75838cf0830a6dbcbcff0503897"}, "downloads": -1, "filename": "pifacedigitalio-3.0.0.tar.gz", "has_sig": false, "md5_digest": "51062860917e54159aa38c93ee083931", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4428, "upload_time": "2013-10-15T09:26:32", "upload_time_iso_8601": "2013-10-15T09:26:32.197302Z", "url": "https://files.pythonhosted.org/packages/46/08/ea1f184cba551ff7bb7ae332ef10dc84a81951fce9bab208f57e937997a9/pifacedigitalio-3.0.0.tar.gz", "yanked": false}], "3.0.5": [{"comment_text": "", "digests": {"md5": "217b75fe8867e80e5c3883474c277251", "sha256": "3de827cbc58df1799d464ab3dc92a2ba99c9b521dce6aa633db21d7e015d55ed"}, "downloads": -1, "filename": "pifacedigitalio-3.0.5.tar.gz", "has_sig": false, "md5_digest": "217b75fe8867e80e5c3883474c277251", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17644, "upload_time": "2014-03-17T10:51:41", "upload_time_iso_8601": "2014-03-17T10:51:41.750491Z", "url": "https://files.pythonhosted.org/packages/06/33/38ff94cd74442da0f2d18241b88ebd3c8a89489ddb1d880d72a67306569c/pifacedigitalio-3.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "217b75fe8867e80e5c3883474c277251", "sha256": "3de827cbc58df1799d464ab3dc92a2ba99c9b521dce6aa633db21d7e015d55ed"}, "downloads": -1, "filename": "pifacedigitalio-3.0.5.tar.gz", "has_sig": false, "md5_digest": "217b75fe8867e80e5c3883474c277251", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17644, "upload_time": "2014-03-17T10:51:41", "upload_time_iso_8601": "2014-03-17T10:51:41.750491Z", "url": "https://files.pythonhosted.org/packages/06/33/38ff94cd74442da0f2d18241b88ebd3c8a89489ddb1d880d72a67306569c/pifacedigitalio-3.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:53 2020"}