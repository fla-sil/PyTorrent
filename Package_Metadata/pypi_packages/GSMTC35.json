{"info": {"author": "Quentin Comte-Gaz", "author_email": "quentin@comte-gaz.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Communications :: Telephony", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Terminals :: Serial"], "description": "# GSM TC35 Python library\n[![Build Status](https://travis-ci.org/QuentinCG/GSM-TC35-Python-Library.svg?branch=master)](https://travis-ci.org/QuentinCG/GSM-TC35-Python-Library) [![codecov](https://codecov.io/gh/QuentinCG/GSM-TC35-Python-Library/branch/master/graph/badge.svg)](https://codecov.io/gh/QuentinCG/GSM-TC35-Python-Library) [![Codacy Badge](https://api.codacy.com/project/badge/Grade/7a2104d9938a493a8d1d4896e2bb0fe2)](https://www.codacy.com/manual/QuentinCG/GSM-TC35-Python-Library?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=QuentinCG/GSM-TC35-Python-Library&amp;utm_campaign=Badge_Grade) [![License: MIT](https://img.shields.io/badge/License-MIT-brightgreen.svg)](https://github.com/QuentinCG/GSM-TC35-Python-Library/blob/master/LICENSE.md) [![Donate](https://img.shields.io/badge/Donate-PayPal-blue.svg)](https://paypal.me/QuentinCG)\n\n## What is it\n\nThis python library is designed to be integrated in python or shell projects using TC35 module.\nIt is multi-platform and compatible with python 3+.\n\nMost functionalities should work with other GSM module using AT commands.\n\n<img src=\"https://github.com/QuentinCG/GSM-TC35-Python-Library/raw/master/TC35_module.jpg\" width=\"800\">\n\n## Functionalities\n\nNon-exhaustive list of GSMTC35 class functionalities:\n  - Check/Enter PIN/PUK\n  - Lock/Unlock/Change PIN\n  - Send/Receive/Delete SMS/MMS\n  - Call/Re-call (possible to hide phone number)\n  - Hang-up/Pick-up call\n  - Enable/disable/check Call/SMS/Fax forwarding\n  - Get/Add/Delete phonebook entries (phone numbers + contact names)\n  - Sleep with wake up possibilities (Low power consumption)\n  - Check if someone is calling\n  - Check if there is a call in progress\n  - Check call status (call/ringing/...) and get the associated phone number\n  - Get last call duration\n  - Check if module is alive\n  - Switch off\n  - Reboot\n  - Check sleep mode status\n  - Get IDs (manufacturer, model, revision, IMEI, IMSI)\n  - Set module to manufacturer state\n  - Get the current used operator\n  - Get the signal strength (in dBm)\n  - Set and get the date from the module internal clock\n  - Get list of operators\n  - Get list of neighbour cells\n  - Get accumulated call meter and accumulated call meter max (in home units)\n  - Get temperature status\n  - Change the baudrate mode\n\nNon-exhaustive list of shell commands:\n  - Send/Receive/Delete SMS/MMS\n  - Call\n  - Hang-up/Pick-up call\n  - Show information (PIN status, operator, signal strength, last call duration, manufacturer/model/revision ID, IMEI, IMSI, date from internal clock, call status and associated phone number, operator list, neighbour cells, accumulated call meter (max), temperature status, sleep mode status)\n\n## How to install (python script and shell)\n\n  - Install package calling `python setup.py install` from the root of this repository\n  - Connect your GSM module to a serial port\n  - Get the port name (you can find it out by calling `python GSMTC35/GSMTC35.py --help` from the root of this repository)\n  - Load your shell or python script\n\nNote: If you want to install test dependency and execute the library test, the command is `python setup.py test`\n\n## How to use in shell\n\n```shell\n# Get help\npython GSMTC35.py --help\n\n# Send SMS or MMS (in UTF-8, using PDU mode)\npython GSMTC35.py --serialPort COM4 --pin 1234 --sendSMS +33601234567 \"Hello from shell! \u4f60\u597d\uff0c\u4f60\u662f\uff1f\"\n\n# Send SMS/MMS (encoded in UTF-8 hexadecimal, using PDU mode)\npython GSMTC35.py --serialPort COM4 --pin 1234 --sendEncodedSMS +33601234567 48656C6C6F2066726F6D207368656C6C2120E4BDA0E5A5BDEFBC8CE4BDA0E698AFEFBC9F\n\n# Send (multiple) SMS (in UTF-8, using 'Text Mode', NOT RECOMMENDED)\npython GSMTC35.py --serialPort COM4 --pin 1234 --sendTextModeSMS +33601234567 \"Hello from shell!\"\n\n# Get SMS/MMS (decoded, in plain text)\npython GSMTC35.py --serialPort COM4 --pin 1234 --getSMS \"ALL\"\n\n# Get SMS/MMS (encoded, in hexadecimal, charset specified in response)\npython GSMTC35.py --serialPort COM4 --pin 1234 --getEncodedSMS \"ALL\"\n\n# Get SMS (decoded by TC35 using 'Text Mode', NOT RECOMMENDED)\npython GSMTC35.py --serialPort COM4 --pin 1234 --getTextModeSMS \"ALL\"\n\n# Delete SMS\npython GSMTC35.py --serialPort COM4 --pin 1234 --deleteSMS \"ALL\"\n\n# Call\npython GSMTC35.py --serialPort COM4 --pin 1234 --call +33601234567\n\n# Call in hidden mode\npython GSMTC35.py --serialPort COM4 --pin 1234 --call +33601234567 True\n\n# Hang up call\npython GSMTC35.py --serialPort COM4 --pin 1234 --hangUpCall\n\n# Pick up call\npython GSMTC35.py --serialPort COM4 --pin 1234 --pickUpCall\n\n# Show GSM module and network information\npython GSMTC35.py --serialPort COM4 --pin 1234 --information\n\n# Use \"--debug\" to show more information during command\n# Use \"--nodebug\" to not show any warning information during command\n```\n\n## How to use in python script\n\nExample of python script using this library:\n\n```python\nimport sys\nfrom GSMTC35.GSMTC35 import GSMTC35\n\ngsm = GSMTC35()\npin = \"1234\"\npuk = \"12345678\"\npin2 = \"4321\"\npuk2 = \"87654321\"\n\n# Mandatory step (PIN/PUK/PIN2/PUK2 will be entered if required, not needed to specify them)\nif not gsm.setup(_port=\"COM3\", _pin=pin, _puk=puk, _pin2=pin2, _puk2=puk2):\n  print(\"Setup error\")\n  sys.exit(2)\n\nif not gsm.isAlive():\n  print(\"The GSM module is not responding...\")\n  sys.exit(2)\n\n# Send SMS or MMS (if > 140 normal char or > 70 unicode char)\nprint(\"SMS sent: \"+str(gsm.sendSMS(\"+33601234567\", u'Hello from python script!!! \u4f60\u597d\uff0c\u4f60\u662f\uff1f')))\n\n# Send (multiple) SMS (encoded by TC35 using 'Text Mode', NOT RECOMMENDED)\nprint(\"SMS Text Mode sent: \"+str(gsm.sendSMS(\"+33601234567\", 'Hello from python script!!!', True)))\n\n# Show all received SMS/MMS (decoded)\nrx_sms = gsm.getSMS(GSMTC35.eSMS.ALL_SMS)\nprint(\"List of SMS (decoded):\")\nfor sms in rx_sms:\n  print(str(sms[\"phone_number\"])+\" (id \" +str(sms[\"index\"])+\", \"\n        +str(sms[\"status\"])+\", \"+str(sms[\"date\"])+\" \"+str(sms[\"time\"])\n        +\"): \"+str(sms[\"sms\"]))\n\n# Show all received SMS/MMS (encoded)\nrx_encoded_sms = gsm.getSMS(GSMTC35.eSMS.ALL_SMS, False)\nprint(\"List of SMS (encoded):\")\nfor sms in rx_encoded_sms:\n  print(str(sms[\"phone_number\"])+\" (id \" +str(sms[\"index\"])+\", \"\n        +str(sms[\"status\"])+\", \"+str(sms[\"charset\"])+\", \"\n        +str(sms[\"date\"])+\" \"+str(sms[\"time\"])+\"): \"+str(sms[\"sms\"]))\n\n# Show all received SMS (using text mode, NOT RECOMMENDED)\nrx_text_mode_sms = gsm.getSMS(GSMTC35.eSMS.ALL_SMS, False, True)\nprint(\"List of SMS (using text mode, NOT RECOMMENDED):\")\nfor sms in rx_text_mode_sms:\n  print(str(sms[\"phone_number\"])+\" (id \" +str(sms[\"index\"])+\", \"\n        +str(sms[\"status\"])+\", \"+str(sms[\"date\"])+\" \"+str(sms[\"time\"])\n        +\"): \"+str(sms[\"sms\"]))\n\n# Delete all received SMS\nprint(\"Delete all SMS: \"+str(gsm.deleteSMS(GSMTC35.eSMS.ALL_SMS)))\n\n# Call\nprint(\"Called: \"+str(gsm.call(phone_number=\"0601234567\", hide_phone_number=False)))\n\n# Re-call same number\nprint(\"Re-called: \"+str(gsm.reCall()))\n\n# Last call duration\nprint(\"Last call duration: \"+str(gsm.getLastCallDuration())+\"sec\")\n\n# Pick up call\nprint(\"Picked up: \"+str(gsm.pickUpCall()))\n\n# Hang up call\nprint(\"Hanged up: \"+str(gsm.hangUpCall()))\n\n# Check Call/SMS/Fax/Data forwarding\nprint(\"Call/SMS/Fax/Data forwarding status: \"+str(gsm.getForwardStatus()))\n\n# Enable/disable Call/SMS/Fax/Data forwarding\nprint(\"Enable call forwarding: \"+str(gsm.setForwardStatus(GSMTC35.eForwardReason.UNCONDITIONAL, GSMTC35.eForwardClass.VOICE, True, \"+33601020304\")))\nprint(\"Disable call forwarding: \"+str(gsm.setForwardStatus(GSMTC35.eForwardReason.UNCONDITIONAL, GSMTC35.eForwardClass.VOICE, False)))\n\n# Add entry in GSM module phonebook\nprint(\"Added contact to GSM module phonebook: \"\n      +str(gsm.addEntryToPhonebook(\"0600000000\", \"Dummy contact\",\n                                   GSMTC35.ePhonebookType.GSM_MODULE)))\n\n# Get entry list in GSM module phonebook:\nentries = gsm.getPhonebookEntries(GSMTC35.ePhonebookType.GSM_MODULE)\nprint(\"List of stored contacts:\")\nfor entry in entries:\n  print(str(entry['index'])+\": \"+str(entry['contact_name'])+\" -> \"+str(entry['phone_number']))\n\n# Delete all GSM phonebook entries:\nprint(\"Deleted all contact from GSM module phonebook: \"\n      +str(gsm.deleteAllEntriesFromPhonebook(GSMTC35.ePhonebookType.GSM_MODULE)))\n\n# Check if someone is calling\nprint(\"Incoming call: \"+str(gsm.isSomeoneCalling()))\n\n# Check if there is a call in progress\nprint(\"Call in progress: \"+str(gsm.isCallInProgress()))\n\n# Check if someone is calling, if a call is in progress, dialing and the associated phone number\ncall_state, phone_number = gsm.getCurrentCallState()\nprint(\"Call status: \"+str(call_state)+\" (associated phone number: \"+str(phone_number)+\")\")\nprint(\"(-1=No call, 0=Call active, 1=Held, 2=Dialing, 3=Alerting, 4=Incoming, 5=Waiting)\")\n\n# Edit SIM Pin\nprint(\"SIM Locked: \"+str(gsm.lockSimPin(pin)))\nprint(\"SIM Unlocked: \"+str(gsm.unlockSimPin(pin)))\nnew_pin = pin # (Just for test)\nprint(\"SIM Pin changed: \"+str(gsm.changePin(pin, new_pin)))\n\n# Set module clock to current date\nprint(\"Clock set: \"+str(gsm.setInternalClockToCurrentDate()))\n\n# Show additional information\nprint(\"GSM module Manufacturer ID: \"+str(gsm.getManufacturerId()))\nprint(\"GSM module Model ID: \"+str(gsm.getModelId()))\nprint(\"GSM module Revision ID: \"+str(gsm.getRevisionId()))\nprint(\"Product serial number ID (IMEI): \"+str(gsm.getIMEI()))\nprint(\"International Mobile Subscriber Identity (IMSI): \"+str(gsm.getIMSI()))\nprint(\"Current operator: \"+str(gsm.getOperatorName()))\nsig_strength = gsm.getSignalStrength()\nif sig_strength != -1:\n  print(\"Signal strength: \"+str(sig_strength)+\"dBm\")\nelse:\n  print(\"Signal strength: Wrong value\")\nprint(\"Date from internal clock: \"+str(gsm.getDateFromInternalClock()))\nprint(\"List of operators: \"+str(gsm.getOperatorNames()))\nprint(\"Neighbour cells: \"+str(gsm.getNeighbourCells()))\nprint(\"Accumulated call meter: \"+str(gsm.getAccumulatedCallMeter())+\" home units\")\nprint(\"Accumulated call meter max: \"+str(gsm.getAccumulatedCallMeterMaximum())+\" home units\")\nprint(\"Is temperature critical: \"+str(gsm.isTemperatureCritical()))\nprint(\"Is in sleep mode: \"+str(gsm.isInSleepMode()))\n\n# Make the GSM module sleep for 20sec (may be wake up by received call or SMS)\nsleep_ok, timer_wake, call_wake, sms_wake, temp_wake = \\\n  gsm.sleep(wake_up_with_timer_in_sec=20, wake_up_with_call=True,\n            wake_up_with_sms=True)\nprint(\"GSM was in sleep mode (\"+str(sleep_ok)+\"), wake-up by: Timer (\"\n      +str(timer_wake)+\") or a call (\"+str(call_wake)+\") or a SMS (\"+str(sms_wake)+\")\")\n\n# Reboot (an init is needed to use gsm functions after such a call)\nprint(\"Reboot: \"+str(gsm.reboot()))\n\n# Switch off device (gsm will not respond after such a call)\nprint(\"Switched off: \"+str(gsm.switchOff()))\n\n# At the end, close connection with GSM module\ngsm.close()\n```\n\n## Examples\n\nList of examples:\n  - <a target=\"_blank\" href=\"https://github.com/QuentinCG/GSM-TC35-Python-Library/blob/master/examples/rest_api/rest_api.py\">Expose GSM module to REST-API</a>\n\n## License\n\nThis project is under MIT license. This means you can use it as you want (just don't delete the library header).\n\n## Contribute\n\nIf you want to add more examples or improve the library, just create a pull request with proper commit message and right wrapping.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/QuentinCG/GSM-TC35-Python-Library", "keywords": "gsm pdu tc35 mc35 at sms mms call phone pin puk phonebook imei imsi ucs2 7bit forward unlock lock", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "GSMTC35", "package_url": "https://pypi.org/project/GSMTC35/", "platform": "any", "project_url": "https://pypi.org/project/GSMTC35/", "project_urls": {"Homepage": "https://github.com/QuentinCG/GSM-TC35-Python-Library"}, "release_url": "https://pypi.org/project/GSMTC35/2.1/", "requires_dist": ["pyserial", "flask ; extra == 'restapi'", "flask-restful ; extra == 'restapi'", "flask-httpauth ; extra == 'restapi'", "pyopenssl ; extra == 'restapi'"], "requires_python": "", "summary": "GSM TC35/MC35 controller (Send/Receive SMS/MMS/Call and a lot more!)", "version": "2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>GSM TC35 Python library</h1>\n<p><a href=\"https://travis-ci.org/QuentinCG/GSM-TC35-Python-Library\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/48933365dbaeec44769fbf6ae6cf80f5c4e1a0eb/68747470733a2f2f7472617669732d63692e6f72672f5175656e74696e43472f47534d2d544333352d507974686f6e2d4c6962726172792e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://codecov.io/gh/QuentinCG/GSM-TC35-Python-Library\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/64537a2ab79d87956f8faa19af91304c8261d145/68747470733a2f2f636f6465636f762e696f2f67682f5175656e74696e43472f47534d2d544333352d507974686f6e2d4c6962726172792f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a> <a href=\"https://www.codacy.com/manual/QuentinCG/GSM-TC35-Python-Library?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=QuentinCG/GSM-TC35-Python-Library&amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d1d15a87e4a8d82483f16e50513be6160ae88c95/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3761323130346439393338613439336138643164343839366532626230666532\"></a> <a href=\"https://github.com/QuentinCG/GSM-TC35-Python-Library/blob/master/LICENSE.md\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/13402995be86cde517cc34ba2cc02d3de74b86c4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d627269676874677265656e2e737667\"></a> <a href=\"https://paypal.me/QuentinCG\" rel=\"nofollow\"><img alt=\"Donate\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f9533238827d7b7cb1f6e1b7e4d1519338484861/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f6e6174652d50617950616c2d626c75652e737667\"></a></p>\n<h2>What is it</h2>\n<p>This python library is designed to be integrated in python or shell projects using TC35 module.\nIt is multi-platform and compatible with python 3+.</p>\n<p>Most functionalities should work with other GSM module using AT commands.</p>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1dd89ae6bfd4906a091bf73182ce4e143dd9f895/68747470733a2f2f6769746875622e636f6d2f5175656e74696e43472f47534d2d544333352d507974686f6e2d4c6962726172792f7261772f6d61737465722f544333355f6d6f64756c652e6a7067\" width=\"800\">\n<h2>Functionalities</h2>\n<p>Non-exhaustive list of GSMTC35 class functionalities:</p>\n<ul>\n<li>Check/Enter PIN/PUK</li>\n<li>Lock/Unlock/Change PIN</li>\n<li>Send/Receive/Delete SMS/MMS</li>\n<li>Call/Re-call (possible to hide phone number)</li>\n<li>Hang-up/Pick-up call</li>\n<li>Enable/disable/check Call/SMS/Fax forwarding</li>\n<li>Get/Add/Delete phonebook entries (phone numbers + contact names)</li>\n<li>Sleep with wake up possibilities (Low power consumption)</li>\n<li>Check if someone is calling</li>\n<li>Check if there is a call in progress</li>\n<li>Check call status (call/ringing/...) and get the associated phone number</li>\n<li>Get last call duration</li>\n<li>Check if module is alive</li>\n<li>Switch off</li>\n<li>Reboot</li>\n<li>Check sleep mode status</li>\n<li>Get IDs (manufacturer, model, revision, IMEI, IMSI)</li>\n<li>Set module to manufacturer state</li>\n<li>Get the current used operator</li>\n<li>Get the signal strength (in dBm)</li>\n<li>Set and get the date from the module internal clock</li>\n<li>Get list of operators</li>\n<li>Get list of neighbour cells</li>\n<li>Get accumulated call meter and accumulated call meter max (in home units)</li>\n<li>Get temperature status</li>\n<li>Change the baudrate mode</li>\n</ul>\n<p>Non-exhaustive list of shell commands:</p>\n<ul>\n<li>Send/Receive/Delete SMS/MMS</li>\n<li>Call</li>\n<li>Hang-up/Pick-up call</li>\n<li>Show information (PIN status, operator, signal strength, last call duration, manufacturer/model/revision ID, IMEI, IMSI, date from internal clock, call status and associated phone number, operator list, neighbour cells, accumulated call meter (max), temperature status, sleep mode status)</li>\n</ul>\n<h2>How to install (python script and shell)</h2>\n<ul>\n<li>Install package calling <code>python setup.py install</code> from the root of this repository</li>\n<li>Connect your GSM module to a serial port</li>\n<li>Get the port name (you can find it out by calling <code>python GSMTC35/GSMTC35.py --help</code> from the root of this repository)</li>\n<li>Load your shell or python script</li>\n</ul>\n<p>Note: If you want to install test dependency and execute the library test, the command is <code>python setup.py test</code></p>\n<h2>How to use in shell</h2>\n<pre><span class=\"c1\"># Get help</span>\npython GSMTC35.py --help\n\n<span class=\"c1\"># Send SMS or MMS (in UTF-8, using PDU mode)</span>\npython GSMTC35.py --serialPort COM4 --pin <span class=\"m\">1234</span> --sendSMS +33601234567 <span class=\"s2\">\"Hello from shell! \u4f60\u597d\uff0c\u4f60\u662f\uff1f\"</span>\n\n<span class=\"c1\"># Send SMS/MMS (encoded in UTF-8 hexadecimal, using PDU mode)</span>\npython GSMTC35.py --serialPort COM4 --pin <span class=\"m\">1234</span> --sendEncodedSMS +33601234567 48656C6C6F2066726F6D207368656C6C2120E4BDA0E5A5BDEFBC8CE4BDA0E698AFEFBC9F\n\n<span class=\"c1\"># Send (multiple) SMS (in UTF-8, using 'Text Mode', NOT RECOMMENDED)</span>\npython GSMTC35.py --serialPort COM4 --pin <span class=\"m\">1234</span> --sendTextModeSMS +33601234567 <span class=\"s2\">\"Hello from shell!\"</span>\n\n<span class=\"c1\"># Get SMS/MMS (decoded, in plain text)</span>\npython GSMTC35.py --serialPort COM4 --pin <span class=\"m\">1234</span> --getSMS <span class=\"s2\">\"ALL\"</span>\n\n<span class=\"c1\"># Get SMS/MMS (encoded, in hexadecimal, charset specified in response)</span>\npython GSMTC35.py --serialPort COM4 --pin <span class=\"m\">1234</span> --getEncodedSMS <span class=\"s2\">\"ALL\"</span>\n\n<span class=\"c1\"># Get SMS (decoded by TC35 using 'Text Mode', NOT RECOMMENDED)</span>\npython GSMTC35.py --serialPort COM4 --pin <span class=\"m\">1234</span> --getTextModeSMS <span class=\"s2\">\"ALL\"</span>\n\n<span class=\"c1\"># Delete SMS</span>\npython GSMTC35.py --serialPort COM4 --pin <span class=\"m\">1234</span> --deleteSMS <span class=\"s2\">\"ALL\"</span>\n\n<span class=\"c1\"># Call</span>\npython GSMTC35.py --serialPort COM4 --pin <span class=\"m\">1234</span> --call +33601234567\n\n<span class=\"c1\"># Call in hidden mode</span>\npython GSMTC35.py --serialPort COM4 --pin <span class=\"m\">1234</span> --call +33601234567 True\n\n<span class=\"c1\"># Hang up call</span>\npython GSMTC35.py --serialPort COM4 --pin <span class=\"m\">1234</span> --hangUpCall\n\n<span class=\"c1\"># Pick up call</span>\npython GSMTC35.py --serialPort COM4 --pin <span class=\"m\">1234</span> --pickUpCall\n\n<span class=\"c1\"># Show GSM module and network information</span>\npython GSMTC35.py --serialPort COM4 --pin <span class=\"m\">1234</span> --information\n\n<span class=\"c1\"># Use \"--debug\" to show more information during command</span>\n<span class=\"c1\"># Use \"--nodebug\" to not show any warning information during command</span>\n</pre>\n<h2>How to use in python script</h2>\n<p>Example of python script using this library:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">from</span> <span class=\"nn\">GSMTC35.GSMTC35</span> <span class=\"kn\">import</span> <span class=\"n\">GSMTC35</span>\n\n<span class=\"n\">gsm</span> <span class=\"o\">=</span> <span class=\"n\">GSMTC35</span><span class=\"p\">()</span>\n<span class=\"n\">pin</span> <span class=\"o\">=</span> <span class=\"s2\">\"1234\"</span>\n<span class=\"n\">puk</span> <span class=\"o\">=</span> <span class=\"s2\">\"12345678\"</span>\n<span class=\"n\">pin2</span> <span class=\"o\">=</span> <span class=\"s2\">\"4321\"</span>\n<span class=\"n\">puk2</span> <span class=\"o\">=</span> <span class=\"s2\">\"87654321\"</span>\n\n<span class=\"c1\"># Mandatory step (PIN/PUK/PIN2/PUK2 will be entered if required, not needed to specify them)</span>\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">(</span><span class=\"n\">_port</span><span class=\"o\">=</span><span class=\"s2\">\"COM3\"</span><span class=\"p\">,</span> <span class=\"n\">_pin</span><span class=\"o\">=</span><span class=\"n\">pin</span><span class=\"p\">,</span> <span class=\"n\">_puk</span><span class=\"o\">=</span><span class=\"n\">puk</span><span class=\"p\">,</span> <span class=\"n\">_pin2</span><span class=\"o\">=</span><span class=\"n\">pin2</span><span class=\"p\">,</span> <span class=\"n\">_puk2</span><span class=\"o\">=</span><span class=\"n\">puk2</span><span class=\"p\">):</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Setup error\"</span><span class=\"p\">)</span>\n  <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">isAlive</span><span class=\"p\">():</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"The GSM module is not responding...\"</span><span class=\"p\">)</span>\n  <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Send SMS or MMS (if &gt; 140 normal char or &gt; 70 unicode char)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"SMS sent: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">sendSMS</span><span class=\"p\">(</span><span class=\"s2\">\"+33601234567\"</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'Hello from python script!!! \u4f60\u597d\uff0c\u4f60\u662f\uff1f'</span><span class=\"p\">)))</span>\n\n<span class=\"c1\"># Send (multiple) SMS (encoded by TC35 using 'Text Mode', NOT RECOMMENDED)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"SMS Text Mode sent: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">sendSMS</span><span class=\"p\">(</span><span class=\"s2\">\"+33601234567\"</span><span class=\"p\">,</span> <span class=\"s1\">'Hello from python script!!!'</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)))</span>\n\n<span class=\"c1\"># Show all received SMS/MMS (decoded)</span>\n<span class=\"n\">rx_sms</span> <span class=\"o\">=</span> <span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">getSMS</span><span class=\"p\">(</span><span class=\"n\">GSMTC35</span><span class=\"o\">.</span><span class=\"n\">eSMS</span><span class=\"o\">.</span><span class=\"n\">ALL_SMS</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"List of SMS (decoded):\"</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">sms</span> <span class=\"ow\">in</span> <span class=\"n\">rx_sms</span><span class=\"p\">:</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">sms</span><span class=\"p\">[</span><span class=\"s2\">\"phone_number\"</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"s2\">\" (id \"</span> <span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">sms</span><span class=\"p\">[</span><span class=\"s2\">\"index\"</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"s2\">\", \"</span>\n        <span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">sms</span><span class=\"p\">[</span><span class=\"s2\">\"status\"</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"s2\">\", \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">sms</span><span class=\"p\">[</span><span class=\"s2\">\"date\"</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"s2\">\" \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">sms</span><span class=\"p\">[</span><span class=\"s2\">\"time\"</span><span class=\"p\">])</span>\n        <span class=\"o\">+</span><span class=\"s2\">\"): \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">sms</span><span class=\"p\">[</span><span class=\"s2\">\"sms\"</span><span class=\"p\">]))</span>\n\n<span class=\"c1\"># Show all received SMS/MMS (encoded)</span>\n<span class=\"n\">rx_encoded_sms</span> <span class=\"o\">=</span> <span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">getSMS</span><span class=\"p\">(</span><span class=\"n\">GSMTC35</span><span class=\"o\">.</span><span class=\"n\">eSMS</span><span class=\"o\">.</span><span class=\"n\">ALL_SMS</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"List of SMS (encoded):\"</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">sms</span> <span class=\"ow\">in</span> <span class=\"n\">rx_encoded_sms</span><span class=\"p\">:</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">sms</span><span class=\"p\">[</span><span class=\"s2\">\"phone_number\"</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"s2\">\" (id \"</span> <span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">sms</span><span class=\"p\">[</span><span class=\"s2\">\"index\"</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"s2\">\", \"</span>\n        <span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">sms</span><span class=\"p\">[</span><span class=\"s2\">\"status\"</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"s2\">\", \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">sms</span><span class=\"p\">[</span><span class=\"s2\">\"charset\"</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"s2\">\", \"</span>\n        <span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">sms</span><span class=\"p\">[</span><span class=\"s2\">\"date\"</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"s2\">\" \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">sms</span><span class=\"p\">[</span><span class=\"s2\">\"time\"</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"s2\">\"): \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">sms</span><span class=\"p\">[</span><span class=\"s2\">\"sms\"</span><span class=\"p\">]))</span>\n\n<span class=\"c1\"># Show all received SMS (using text mode, NOT RECOMMENDED)</span>\n<span class=\"n\">rx_text_mode_sms</span> <span class=\"o\">=</span> <span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">getSMS</span><span class=\"p\">(</span><span class=\"n\">GSMTC35</span><span class=\"o\">.</span><span class=\"n\">eSMS</span><span class=\"o\">.</span><span class=\"n\">ALL_SMS</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"List of SMS (using text mode, NOT RECOMMENDED):\"</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">sms</span> <span class=\"ow\">in</span> <span class=\"n\">rx_text_mode_sms</span><span class=\"p\">:</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">sms</span><span class=\"p\">[</span><span class=\"s2\">\"phone_number\"</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"s2\">\" (id \"</span> <span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">sms</span><span class=\"p\">[</span><span class=\"s2\">\"index\"</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"s2\">\", \"</span>\n        <span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">sms</span><span class=\"p\">[</span><span class=\"s2\">\"status\"</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"s2\">\", \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">sms</span><span class=\"p\">[</span><span class=\"s2\">\"date\"</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"s2\">\" \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">sms</span><span class=\"p\">[</span><span class=\"s2\">\"time\"</span><span class=\"p\">])</span>\n        <span class=\"o\">+</span><span class=\"s2\">\"): \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">sms</span><span class=\"p\">[</span><span class=\"s2\">\"sms\"</span><span class=\"p\">]))</span>\n\n<span class=\"c1\"># Delete all received SMS</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Delete all SMS: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">deleteSMS</span><span class=\"p\">(</span><span class=\"n\">GSMTC35</span><span class=\"o\">.</span><span class=\"n\">eSMS</span><span class=\"o\">.</span><span class=\"n\">ALL_SMS</span><span class=\"p\">)))</span>\n\n<span class=\"c1\"># Call</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Called: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"n\">phone_number</span><span class=\"o\">=</span><span class=\"s2\">\"0601234567\"</span><span class=\"p\">,</span> <span class=\"n\">hide_phone_number</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)))</span>\n\n<span class=\"c1\"># Re-call same number</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Re-called: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">reCall</span><span class=\"p\">()))</span>\n\n<span class=\"c1\"># Last call duration</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Last call duration: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">getLastCallDuration</span><span class=\"p\">())</span><span class=\"o\">+</span><span class=\"s2\">\"sec\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Pick up call</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Picked up: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">pickUpCall</span><span class=\"p\">()))</span>\n\n<span class=\"c1\"># Hang up call</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Hanged up: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">hangUpCall</span><span class=\"p\">()))</span>\n\n<span class=\"c1\"># Check Call/SMS/Fax/Data forwarding</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Call/SMS/Fax/Data forwarding status: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">getForwardStatus</span><span class=\"p\">()))</span>\n\n<span class=\"c1\"># Enable/disable Call/SMS/Fax/Data forwarding</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Enable call forwarding: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">setForwardStatus</span><span class=\"p\">(</span><span class=\"n\">GSMTC35</span><span class=\"o\">.</span><span class=\"n\">eForwardReason</span><span class=\"o\">.</span><span class=\"n\">UNCONDITIONAL</span><span class=\"p\">,</span> <span class=\"n\">GSMTC35</span><span class=\"o\">.</span><span class=\"n\">eForwardClass</span><span class=\"o\">.</span><span class=\"n\">VOICE</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s2\">\"+33601020304\"</span><span class=\"p\">)))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Disable call forwarding: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">setForwardStatus</span><span class=\"p\">(</span><span class=\"n\">GSMTC35</span><span class=\"o\">.</span><span class=\"n\">eForwardReason</span><span class=\"o\">.</span><span class=\"n\">UNCONDITIONAL</span><span class=\"p\">,</span> <span class=\"n\">GSMTC35</span><span class=\"o\">.</span><span class=\"n\">eForwardClass</span><span class=\"o\">.</span><span class=\"n\">VOICE</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)))</span>\n\n<span class=\"c1\"># Add entry in GSM module phonebook</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Added contact to GSM module phonebook: \"</span>\n      <span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">addEntryToPhonebook</span><span class=\"p\">(</span><span class=\"s2\">\"0600000000\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Dummy contact\"</span><span class=\"p\">,</span>\n                                   <span class=\"n\">GSMTC35</span><span class=\"o\">.</span><span class=\"n\">ePhonebookType</span><span class=\"o\">.</span><span class=\"n\">GSM_MODULE</span><span class=\"p\">)))</span>\n\n<span class=\"c1\"># Get entry list in GSM module phonebook:</span>\n<span class=\"n\">entries</span> <span class=\"o\">=</span> <span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">getPhonebookEntries</span><span class=\"p\">(</span><span class=\"n\">GSMTC35</span><span class=\"o\">.</span><span class=\"n\">ePhonebookType</span><span class=\"o\">.</span><span class=\"n\">GSM_MODULE</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"List of stored contacts:\"</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">entry</span> <span class=\"ow\">in</span> <span class=\"n\">entries</span><span class=\"p\">:</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">entry</span><span class=\"p\">[</span><span class=\"s1\">'index'</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"s2\">\": \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">entry</span><span class=\"p\">[</span><span class=\"s1\">'contact_name'</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"s2\">\" -&gt; \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">entry</span><span class=\"p\">[</span><span class=\"s1\">'phone_number'</span><span class=\"p\">]))</span>\n\n<span class=\"c1\"># Delete all GSM phonebook entries:</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Deleted all contact from GSM module phonebook: \"</span>\n      <span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">deleteAllEntriesFromPhonebook</span><span class=\"p\">(</span><span class=\"n\">GSMTC35</span><span class=\"o\">.</span><span class=\"n\">ePhonebookType</span><span class=\"o\">.</span><span class=\"n\">GSM_MODULE</span><span class=\"p\">)))</span>\n\n<span class=\"c1\"># Check if someone is calling</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Incoming call: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">isSomeoneCalling</span><span class=\"p\">()))</span>\n\n<span class=\"c1\"># Check if there is a call in progress</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Call in progress: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">isCallInProgress</span><span class=\"p\">()))</span>\n\n<span class=\"c1\"># Check if someone is calling, if a call is in progress, dialing and the associated phone number</span>\n<span class=\"n\">call_state</span><span class=\"p\">,</span> <span class=\"n\">phone_number</span> <span class=\"o\">=</span> <span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">getCurrentCallState</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Call status: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">call_state</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"s2\">\" (associated phone number: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">phone_number</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"s2\">\")\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"(-1=No call, 0=Call active, 1=Held, 2=Dialing, 3=Alerting, 4=Incoming, 5=Waiting)\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Edit SIM Pin</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"SIM Locked: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">lockSimPin</span><span class=\"p\">(</span><span class=\"n\">pin</span><span class=\"p\">)))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"SIM Unlocked: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">unlockSimPin</span><span class=\"p\">(</span><span class=\"n\">pin</span><span class=\"p\">)))</span>\n<span class=\"n\">new_pin</span> <span class=\"o\">=</span> <span class=\"n\">pin</span> <span class=\"c1\"># (Just for test)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"SIM Pin changed: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">changePin</span><span class=\"p\">(</span><span class=\"n\">pin</span><span class=\"p\">,</span> <span class=\"n\">new_pin</span><span class=\"p\">)))</span>\n\n<span class=\"c1\"># Set module clock to current date</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Clock set: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">setInternalClockToCurrentDate</span><span class=\"p\">()))</span>\n\n<span class=\"c1\"># Show additional information</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"GSM module Manufacturer ID: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">getManufacturerId</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"GSM module Model ID: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">getModelId</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"GSM module Revision ID: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">getRevisionId</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Product serial number ID (IMEI): \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">getIMEI</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"International Mobile Subscriber Identity (IMSI): \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">getIMSI</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Current operator: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">getOperatorName</span><span class=\"p\">()))</span>\n<span class=\"n\">sig_strength</span> <span class=\"o\">=</span> <span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">getSignalStrength</span><span class=\"p\">()</span>\n<span class=\"k\">if</span> <span class=\"n\">sig_strength</span> <span class=\"o\">!=</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Signal strength: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">sig_strength</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"s2\">\"dBm\"</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Signal strength: Wrong value\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Date from internal clock: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">getDateFromInternalClock</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"List of operators: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">getOperatorNames</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Neighbour cells: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">getNeighbourCells</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Accumulated call meter: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">getAccumulatedCallMeter</span><span class=\"p\">())</span><span class=\"o\">+</span><span class=\"s2\">\" home units\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Accumulated call meter max: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">getAccumulatedCallMeterMaximum</span><span class=\"p\">())</span><span class=\"o\">+</span><span class=\"s2\">\" home units\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Is temperature critical: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">isTemperatureCritical</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Is in sleep mode: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">isInSleepMode</span><span class=\"p\">()))</span>\n\n<span class=\"c1\"># Make the GSM module sleep for 20sec (may be wake up by received call or SMS)</span>\n<span class=\"n\">sleep_ok</span><span class=\"p\">,</span> <span class=\"n\">timer_wake</span><span class=\"p\">,</span> <span class=\"n\">call_wake</span><span class=\"p\">,</span> <span class=\"n\">sms_wake</span><span class=\"p\">,</span> <span class=\"n\">temp_wake</span> <span class=\"o\">=</span> \\\n  <span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"n\">wake_up_with_timer_in_sec</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">wake_up_with_call</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">wake_up_with_sms</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"GSM was in sleep mode (\"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">sleep_ok</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"s2\">\"), wake-up by: Timer (\"</span>\n      <span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">timer_wake</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"s2\">\") or a call (\"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">call_wake</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"s2\">\") or a SMS (\"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">sms_wake</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"s2\">\")\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Reboot (an init is needed to use gsm functions after such a call)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Reboot: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">reboot</span><span class=\"p\">()))</span>\n\n<span class=\"c1\"># Switch off device (gsm will not respond after such a call)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Switched off: \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">switchOff</span><span class=\"p\">()))</span>\n\n<span class=\"c1\"># At the end, close connection with GSM module</span>\n<span class=\"n\">gsm</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<h2>Examples</h2>\n<p>List of examples:</p>\n<ul>\n<li><a href=\"https://github.com/QuentinCG/GSM-TC35-Python-Library/blob/master/examples/rest_api/rest_api.py\" rel=\"nofollow\">Expose GSM module to REST-API</a></li>\n</ul>\n<h2>License</h2>\n<p>This project is under MIT license. This means you can use it as you want (just don't delete the library header).</p>\n<h2>Contribute</h2>\n<p>If you want to add more examples or improve the library, just create a pull request with proper commit message and right wrapping.</p>\n\n          </div>"}, "last_serial": 6108084, "releases": {"2.1": [{"comment_text": "", "digests": {"md5": "a9a2c696b89eda7878a5ad17792afc3e", "sha256": "48786d03610604aae5fa9fe4842dff5d0963411aebe433d93ebffc9b685ab0ef"}, "downloads": -1, "filename": "GSMTC35-2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a9a2c696b89eda7878a5ad17792afc3e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33793, "upload_time": "2019-11-09T18:33:56", "upload_time_iso_8601": "2019-11-09T18:33:56.615155Z", "url": "https://files.pythonhosted.org/packages/7e/5e/33fdb139b4c0c070ab71d120dbc73dc561385c40599d284f5fbe7c28fd0f/GSMTC35-2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "660448958c1727ca5c59103d28fc4f05", "sha256": "738206c3b7e15666b2bb5b9b0bb8d08f79e1f5337ebc449bb2f59d6aa8a4f52b"}, "downloads": -1, "filename": "GSMTC35-2.1.tar.gz", "has_sig": false, "md5_digest": "660448958c1727ca5c59103d28fc4f05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32899, "upload_time": "2019-11-09T18:33:59", "upload_time_iso_8601": "2019-11-09T18:33:59.249077Z", "url": "https://files.pythonhosted.org/packages/b7/76/8d8d19e493a8c49269d55155d5c577cd3c5f7505b378699eb6408be98e49/GSMTC35-2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a9a2c696b89eda7878a5ad17792afc3e", "sha256": "48786d03610604aae5fa9fe4842dff5d0963411aebe433d93ebffc9b685ab0ef"}, "downloads": -1, "filename": "GSMTC35-2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a9a2c696b89eda7878a5ad17792afc3e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33793, "upload_time": "2019-11-09T18:33:56", "upload_time_iso_8601": "2019-11-09T18:33:56.615155Z", "url": "https://files.pythonhosted.org/packages/7e/5e/33fdb139b4c0c070ab71d120dbc73dc561385c40599d284f5fbe7c28fd0f/GSMTC35-2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "660448958c1727ca5c59103d28fc4f05", "sha256": "738206c3b7e15666b2bb5b9b0bb8d08f79e1f5337ebc449bb2f59d6aa8a4f52b"}, "downloads": -1, "filename": "GSMTC35-2.1.tar.gz", "has_sig": false, "md5_digest": "660448958c1727ca5c59103d28fc4f05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32899, "upload_time": "2019-11-09T18:33:59", "upload_time_iso_8601": "2019-11-09T18:33:59.249077Z", "url": "https://files.pythonhosted.org/packages/b7/76/8d8d19e493a8c49269d55155d5c577cd3c5f7505b378699eb6408be98e49/GSMTC35-2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:39 2020"}