{"info": {"author": "Benno Meier", "author_email": "meier.benno@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Topic :: Scientific/Engineering :: Physics"], "description": "lecroyparser\n============\n\n\nleCroyParser.py parses binary files as written by LeCroy scopes.\n\nleCroyParser.py is derived from the matlab program\nReadLeCroyBinaryWaveform.m, available at\n<https://www.mathworks.com/matlabcentral/fileexchange/26375-readlecroybinarywaveform-m>,\nOriginal version (c)2001 Hochschule fr Technik+Architektur Luzern\nFachstelle Elektronik 6048 Horw, Switzerland Slightly modified by Alan\nBlankman, LeCroy Corporation, 2006\n\nFurther elements for the code were taken from pylecroy, written by Steve Bian\n\nA useful resource for modifications is the LeCroy Remote Control Manual\navailable at\n<http://cdn.teledynelecroy.com/files/manuals/dda-rcm-e10.pdf>\n\nLecroyparser has been tested with Python 2.7 and Python 3.6\n\nInstallation\n------------\n\nlecroyparser is available at pip. It may be installed\nwith\n\n>>> pip install lecroyparser\n\nor with\n\n\n>>> easy_install lecroyparser\n\nUsage\n-----\n\nTo import a single trace, instantiate a ScopeData object by passing it a\npath, i.e.\n\n>>> import lecroyparser\n>>> path = \"/home/benno/Dropbox/RESEARCH/bullet/experiments/scopeTraces/201804/C1180421_typicalShot00000.trc\"\n>>> data = lecroyparser.ScopeData(path)\n\n\nThe x and y data are stored as numpy arrays in data.x and data.y\n\nAlternatively, to parse several channels set the optional keyword\nargument parseAll to True, i.e.\n\n>>> data = lecroyparser.ScopeData(path, parseAll = True)\n\nThis will parse all files in the specified folder with a matching\nfilename. I.e., if the provided path is as above, then the files\n\n.. code-block:: console\n   C2180421_typicalShot00000.trc\n   C3180421_typicalShot00000.trc\n   C4180421_typicalShot00000.trc\n\n\nwill pe parsed as well.\n\nAdditionally, it is possible to limit the number of samples in the output array, by overwritting the sparse keyword:\n\n>>> data = lecroyparser.ScopeData(path, parseAll = True, sparse = 1000)\n\nwill limit the samples in the x and y dimensions to 1000.\n\nInformation about the file can be obtained by calling print(data)\n\n.. code-block:: console\n    >>> print(data)\n\n    Le Croy Scope Data\n    Path: /Users/benno/Dropbox/RESEARCH/bullet/experiments/scopeTraces/201804/C1180421\\_typicalShot00000.trc\n    Endianness: <\n    Instrument: LECROYHDO4104\n    Instrunemt Number: 19359\n    Template Name: LECROY\\_2\\_3\n    Channel: Channel 4\n    Vertical Coupling: DC1M\n    Bandwidth Limit: on\n    Record Type: single\\_sweep\n    Processing: No Processing &gt;&gt;&gt; TimeBase: 200 ms/div\n    TriggerTime: 2018-04-21 11:50:45.76\n\n\n\nLicense\n-------\n\nMIT License\n\nCopyright (c) 2018 Benno Meier\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/bennomeier/lecroyparser", "keywords": "LeCroy Binary Scope Parse", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "lecroyparser", "package_url": "https://pypi.org/project/lecroyparser/", "platform": "", "project_url": "https://pypi.org/project/lecroyparser/", "project_urls": {"Homepage": "http://github.com/bennomeier/lecroyparser"}, "release_url": "https://pypi.org/project/lecroyparser/1.4/", "requires_dist": ["numpy"], "requires_python": "", "summary": "Parse LeCroy Binary Files.", "version": "1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>lecroyparser</h1>\n<p>leCroyParser.py parses binary files as written by LeCroy scopes.</p>\n<p>leCroyParser.py is derived from the matlab program\nReadLeCroyBinaryWaveform.m, available at\n<a href=\"https://www.mathworks.com/matlabcentral/fileexchange/26375-readlecroybinarywaveform-m\" rel=\"nofollow\">https://www.mathworks.com/matlabcentral/fileexchange/26375-readlecroybinarywaveform-m</a>,\nOriginal version (c)2001 Hochschule fr Technik+Architektur Luzern\nFachstelle Elektronik 6048 Horw, Switzerland Slightly modified by Alan\nBlankman, LeCroy Corporation, 2006</p>\n<p>Further elements for the code were taken from pylecroy, written by Steve Bian</p>\n<p>A useful resource for modifications is the LeCroy Remote Control Manual\navailable at\n<a href=\"http://cdn.teledynelecroy.com/files/manuals/dda-rcm-e10.pdf\" rel=\"nofollow\">http://cdn.teledynelecroy.com/files/manuals/dda-rcm-e10.pdf</a></p>\n<p>Lecroyparser has been tested with Python 2.7 and Python 3.6</p>\n<h2>Installation</h2>\n<p>lecroyparser is available at pip. It may be installed\nwith</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>pip install lecroyparser</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>or with</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>easy_install lecroyparser</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<h2>Usage</h2>\n<p>To import a single trace, instantiate a ScopeData object by passing it a\npath, i.e.</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>import lecroyparser\npath = \"/home/benno/Dropbox/RESEARCH/bullet/experiments/scopeTraces/201804/C1180421_typicalShot00000.trc\"\ndata = lecroyparser.ScopeData(path)</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>The x and y data are stored as numpy arrays in data.x and data.y</p>\n<p>Alternatively, to parse several channels set the optional keyword\nargument parseAll to True, i.e.</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>data = lecroyparser.ScopeData(path, parseAll = True)</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>This will parse all files in the specified folder with a matching\nfilename. I.e., if the provided path is as above, then the files</p>\n<p>.. code-block:: console\nC2180421_typicalShot00000.trc\nC3180421_typicalShot00000.trc\nC4180421_typicalShot00000.trc</p>\n<p>will pe parsed as well.</p>\n<p>Additionally, it is possible to limit the number of samples in the output array, by overwritting the sparse keyword:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>data = lecroyparser.ScopeData(path, parseAll = True, sparse = 1000)</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>will limit the samples in the x and y dimensions to 1000.</p>\n<p>Information about the file can be obtained by calling print(data)</p>\n<p>.. code-block:: console\n&gt;&gt;&gt; print(data)</p>\n<pre><code>Le Croy Scope Data\nPath: /Users/benno/Dropbox/RESEARCH/bullet/experiments/scopeTraces/201804/C1180421\\_typicalShot00000.trc\nEndianness: &lt;\nInstrument: LECROYHDO4104\nInstrunemt Number: 19359\nTemplate Name: LECROY\\_2\\_3\nChannel: Channel 4\nVertical Coupling: DC1M\nBandwidth Limit: on\nRecord Type: single\\_sweep\nProcessing: No Processing &amp;gt;&amp;gt;&amp;gt; TimeBase: 200 ms/div\nTriggerTime: 2018-04-21 11:50:45.76\n</code></pre>\n<h2>License</h2>\n<p>MIT License</p>\n<p>Copyright (c) 2018 Benno Meier</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>\n\n          </div>"}, "last_serial": 6478180, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "57d03a150b599603f1f06a619a04c11f", "sha256": "7db9ca30e37611875ca300c67cacd19ecb6386a35de3b3ff22be8a7a8f92562c"}, "downloads": -1, "filename": "lecroyparser-1.0.tar.gz", "has_sig": false, "md5_digest": "57d03a150b599603f1f06a619a04c11f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4853, "upload_time": "2018-04-28T16:10:28", "upload_time_iso_8601": "2018-04-28T16:10:28.902771Z", "url": "https://files.pythonhosted.org/packages/4d/ef/bd4e8edf8b235b15fe81367f212b6fa30c26277b88cf7e67f64cc25c7b0a/lecroyparser-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "5b51466c7ab8d44f7405ce7ed8c8540a", "sha256": "544bf77bf8d882d592c742c8be4288ab2411da261a5d292c9b583a1847360128"}, "downloads": -1, "filename": "lecroyparser-1.1.tar.gz", "has_sig": false, "md5_digest": "5b51466c7ab8d44f7405ce7ed8c8540a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4964, "upload_time": "2018-04-29T10:24:56", "upload_time_iso_8601": "2018-04-29T10:24:56.743759Z", "url": "https://files.pythonhosted.org/packages/64/84/99d667b6f31520fab39c13c02abbf987c3e54eee817584d80e4fef37b7d0/lecroyparser-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "831cfbc9aca9a48bc37c5db1193e344f", "sha256": "40c34885dd0a0abee97a61bd51ccf9656ab1550ede4cf26318b2e300f4492055"}, "downloads": -1, "filename": "lecroyparser-1.2.tar.gz", "has_sig": false, "md5_digest": "831cfbc9aca9a48bc37c5db1193e344f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5333, "upload_time": "2018-04-29T10:37:20", "upload_time_iso_8601": "2018-04-29T10:37:20.879036Z", "url": "https://files.pythonhosted.org/packages/32/3e/766056cb3dc07e39dbd6a205cc05ab3add79bdc94d289c179ea373d4068f/lecroyparser-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "92f8e1aeb2b6ea87728f2afdae7e3b0f", "sha256": "1aae892a5bbf0d337fb50c92d604dc941b151aa838630c71ab18ac6df20b1deb"}, "downloads": -1, "filename": "lecroyparser-1.3.tar.gz", "has_sig": false, "md5_digest": "92f8e1aeb2b6ea87728f2afdae7e3b0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5868, "upload_time": "2018-05-03T11:29:05", "upload_time_iso_8601": "2018-05-03T11:29:05.234034Z", "url": "https://files.pythonhosted.org/packages/65/8d/db43f5610634832a932a5a04322faea6f7f6445e37d14116881e760d18ea/lecroyparser-1.3.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "513907c83b689a2df0d939e3d906e608", "sha256": "6cc427ee6b0db4335f10f06030f0d8b6d6ee9f94a5a08c871caa5e3a74b64f3c"}, "downloads": -1, "filename": "lecroyparser-1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "513907c83b689a2df0d939e3d906e608", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6831, "upload_time": "2020-01-18T13:38:23", "upload_time_iso_8601": "2020-01-18T13:38:23.807657Z", "url": "https://files.pythonhosted.org/packages/ec/08/519f75a3d3f63b51c0fbb0a482f5a059d69bc4a464a880e5d7608e6b1a0b/lecroyparser-1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b93c25fbdc368b2a812bd55250a8708", "sha256": "370d4290f72b0d2840a30623d6b0ddb9aecc2a6dd9dec350bc33be0e30df0d3f"}, "downloads": -1, "filename": "lecroyparser-1.4.tar.gz", "has_sig": false, "md5_digest": "7b93c25fbdc368b2a812bd55250a8708", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6026, "upload_time": "2020-01-18T13:38:25", "upload_time_iso_8601": "2020-01-18T13:38:25.289703Z", "url": "https://files.pythonhosted.org/packages/b2/16/69980520c6433c22a580aa71feaf24c46ad672490468738b958af26c05ff/lecroyparser-1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "513907c83b689a2df0d939e3d906e608", "sha256": "6cc427ee6b0db4335f10f06030f0d8b6d6ee9f94a5a08c871caa5e3a74b64f3c"}, "downloads": -1, "filename": "lecroyparser-1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "513907c83b689a2df0d939e3d906e608", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6831, "upload_time": "2020-01-18T13:38:23", "upload_time_iso_8601": "2020-01-18T13:38:23.807657Z", "url": "https://files.pythonhosted.org/packages/ec/08/519f75a3d3f63b51c0fbb0a482f5a059d69bc4a464a880e5d7608e6b1a0b/lecroyparser-1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b93c25fbdc368b2a812bd55250a8708", "sha256": "370d4290f72b0d2840a30623d6b0ddb9aecc2a6dd9dec350bc33be0e30df0d3f"}, "downloads": -1, "filename": "lecroyparser-1.4.tar.gz", "has_sig": false, "md5_digest": "7b93c25fbdc368b2a812bd55250a8708", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6026, "upload_time": "2020-01-18T13:38:25", "upload_time_iso_8601": "2020-01-18T13:38:25.289703Z", "url": "https://files.pythonhosted.org/packages/b2/16/69980520c6433c22a580aa71feaf24c46ad672490468738b958af26c05ff/lecroyparser-1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:15 2020"}