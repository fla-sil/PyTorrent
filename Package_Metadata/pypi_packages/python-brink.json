{"info": {"author": "Kevin Carwile", "author_email": "kevin@miller-media.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "Python Brink API Wrapper\n========================\n\nInstall the Python Package\n-------------------------\n\n::\n\n    $ pip install python-brink\n\n\nUsing the API\n--------------\n\n1. Login to the api to receive a jwt token that can be used in future requests without the need to reauthenticate\n\n.. code-block:: python\n\n    from brink.client import BrinkAPI\n    from brink.exceptions import BrinkAPIException\n\n    api = BrinkAPI()\n\n    try: \n       # Login to the api via username and password\n       access = api.login( 'username', 'password' )\n       \n    except BrinkApiException, e:\n    \n       # Login error\n       exit()\n\n    jwt_token = access['jwt_token']\n    \n    # After logging in using the api.login() method, the token is already set so additional\n    # requests can be handled correctly\n    flights = api.getFlights()\n    \n2. If you already have a jwt token prepared, you can use it when creating the api instance and bypass logging in.\n\n.. code-block:: python\n\n    from brink.client import BrinkAPI\n    \n    token='eyJ0eXAiOiJKV1QiLCJhbGc...'\n    api = BrinkAPI(token)\n    \n    # Get flights\n    flights = api.getFlights()\n    \n    # Get details for a specific flights\n    flight = api.getFlight(10)\n    \n    # Get data points for a specific flight\n    params = { 'page': 1, 'per_page': 50 }\n    flight_data = api.getFlightData(10,params)", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Miller-Media/python-brink", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "python-brink", "package_url": "https://pypi.org/project/python-brink/", "platform": "", "project_url": "https://pypi.org/project/python-brink/", "project_urls": {"Homepage": "https://github.com/Miller-Media/python-brink"}, "release_url": "https://pypi.org/project/python-brink/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "A python wrapper to the brink api", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Python Brink API Wrapper<br>========================<br><br>Install the Python Package<br>-------------------------<br><br>::<br><br>    $ pip install python-brink<br><br><br>Using the API<br>--------------<br><br>1. Login to the api to receive a jwt token that can be used in future requests without the need to reauthenticate<br><br>.. code-block:: python<br><br>    from brink.client import BrinkAPI<br>    from brink.exceptions import BrinkAPIException<br><br>    api = BrinkAPI()<br><br>    try: <br>       # Login to the api via username and password<br>       access = api.login( 'username', 'password' )<br>       <br>    except BrinkApiException, e:<br>    <br>       # Login error<br>       exit()<br><br>    jwt_token = access['jwt_token']<br>    <br>    # After logging in using the api.login() method, the token is already set so additional<br>    # requests can be handled correctly<br>    flights = api.getFlights()<br>    <br>2. If you already have a jwt token prepared, you can use it when creating the api instance and bypass logging in.<br><br>.. code-block:: python<br><br>    from brink.client import BrinkAPI<br>    <br>    token='eyJ0eXAiOiJKV1QiLCJhbGc...'<br>    api = BrinkAPI(token)<br>    <br>    # Get flights<br>    flights = api.getFlights()<br>    <br>    # Get details for a specific flights<br>    flight = api.getFlight(10)<br>    <br>    # Get data points for a specific flight<br>    params = { 'page': 1, 'per_page': 50 }<br>    flight_data = api.getFlightData(10,params)\n          </div>"}, "last_serial": 3205161, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "9136fc17fb45d366d818b9fd37491600", "sha256": "364e53961d64d311fdb63868e789d6422d7b0348470d430306ee5919601b9e44"}, "downloads": -1, "filename": "python-brink-0.0.1.zip", "has_sig": false, "md5_digest": "9136fc17fb45d366d818b9fd37491600", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6662, "upload_time": "2017-09-26T21:10:37", "upload_time_iso_8601": "2017-09-26T21:10:37.054153Z", "url": "https://files.pythonhosted.org/packages/a9/90/44f8176bfa74c736a6155e642f7a9d2d37e743bf9fcf62edfa9f895f6fb4/python-brink-0.0.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9136fc17fb45d366d818b9fd37491600", "sha256": "364e53961d64d311fdb63868e789d6422d7b0348470d430306ee5919601b9e44"}, "downloads": -1, "filename": "python-brink-0.0.1.zip", "has_sig": false, "md5_digest": "9136fc17fb45d366d818b9fd37491600", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6662, "upload_time": "2017-09-26T21:10:37", "upload_time_iso_8601": "2017-09-26T21:10:37.054153Z", "url": "https://files.pythonhosted.org/packages/a9/90/44f8176bfa74c736a6155e642f7a9d2d37e743bf9fcf62edfa9f895f6fb4/python-brink-0.0.1.zip", "yanked": false}], "timestamp": "Fri May  8 03:18:35 2020"}