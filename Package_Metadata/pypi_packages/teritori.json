{"info": {"author": "Wiktor Gustafsson, Joakim Lindstrom, Ina Oden Osterbo", "author_email": "teritori.team@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "============\n**terITori**\n============\n\nIntroduction\n------------\n\nFinding the origin (ORI) and terminus (TER) of replication is important for all research involving sequencing of genomic data, mainly because it gives clearly defined start and end points for a sequence, and enables comparison and analysis of different samples. Knowing these locations also provides verification that the sequences are correctly assembled. As it currently stands there are no one-stop software solutions for ORI and TER identification in bacteria; researchers have to rely on a combination of different tools and manual inspection of results.\n\nTo solve this, we developed **terITori**, an automatic tool for identifying origin and terminus of replication in bacterial genomes, which combines different key genomic features into a single final reliable prediction. The result is also statistically tested, which gives the user an idea about how accurate the prediction is. In terITori we believe we have created a useful program which will fill a gap in the available software of today, and make replication-related research simpler, faster and more accurate.\n\nThe three features that are included calculated in terITori are genomic skews (GC and TA), gene strand orientation, and conserved motifs (specifically dnaA boxes, dif motifs and rRNAs). terITori takes a FASTA file of the query bacterial genome as input, and allows the user to specify which features to include in the analysis (one, a combination of two, or all three). It also provides a file predicted genes in the bacteria, which have been predicted by the prokaryotic prediction program Prodigal. If a Prodigal gene prediction is already available, the user can specify this as an input.\n\nThe program is still in a very early stage, and the results might not always be fully accurate. The execution time could also be very long at times (up to several hours).\n\nDescription\n----------------\n\nThe terITori script combines the three genomic feature scripts (skew, gene orientation, conserved motifs) and produces a final prediction of the ORI and TER positions. The results are combined in the following way:\n\n* Run Prodigal if the all features, skew or gene orientation are included and no GFF file with already predict genes is entered. Save the predicted genes in a FASTA file.\n\n* Predict ORI and TER using...\n\n * Identified rRNAs, DnaA boxes and dif motifs. Produces ORI and TER intervals, if possible.\n\n * Gene orientation data provided by the Prodigal output. Produces ORI and TER intervals and a significance estimation (p-value), through bootstrapping, for each.\n\n * Skew calculations. Produces predicted ORI and TER positions, along with p-values for each.\n\n* Use the final prediction script to combine results and p-values.\n\n* Save the predictions and p-values from all used methods in a results CSV file.\n\n* Create and save an illustration as a PNG file (if the user has specified to do so). This will contain the cumulative GC and TA skew plots (if that script is included), the location and direction of conserved motifs (if the motifs calculation was included), and/or (if skew is not included but gene orientation is) the plot of the calculated statistic from the gene orientation script. Both gene orientation and skew plots cannot be included in the same figure as they have considerably different scales.\n\nThe results will be located in a directory terITori/Results/ located in the directory where the program is run. A log with timestamps for each step in the program is also produced and saved in the same location as the results.\n\nInstallation\n------------\n\nterITori can be installed via pip::\n\n    $ pip install teritori\n\nIf the bin location is added to PATH it can then be run by typing::\n\n   $ terITori\n\nDependencies\n^^^^^^^^^^^^\n\nPython (>=3.5)\n\nRequired Packages\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n- Biopython (``$ pip install biopython``)\n\n- Numpy (``$ pip install numpy``)\n\n- Matplotlib (``$ pip install matplotlib``)\n\n- Scipy (``$ pip install scipy``)\n\n- scikit-learn (``$ pip install scikit-learn``)\n\n- bcbio-gff (``$pip install bcbio-gff``)\n\nExternal Software\n^^^^^^^^^^^^^^^^^^^^^\n\nExecutables should be in user's ``$PATH`` if nothing else specified.\n\nProdigal\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nA prokaryotic gene prediction software by Doug Hyatt. Tested with v. 2.6.2. Can be installed via apt::\n\n $ sudo apt install prodigal\n\nor downloaded at `https://github.com/hyattpd/Prodigal <https://github.com/hyattpd/Prodigal>`_.\n\nHMMER3\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nHMMER: biosequence analysis using profile hidden Markov models, by Sean Eddy and coworkers. Tested with v. 3.1b2. Can be installed via apt::\n\n $ sudo apt install hmmer\n\nor downloaded at `http://hmmer.org/ <http://hmmer.org/>`_.\n\nRNAmmer and HMMER2\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nRNAmmer uses and depends on Perl, install it in an appropriate way (e.g. ``sudo apt install perl``) and make sure it on the ``$PATH`` and can be run by typing ``$ perl``.\n\nYou can find RNAmmer and instructions at `http://www.cbs.dtu.dk/services/doc/rnammer-1.2.readme <http://www.cbs.dtu.dk/services/doc/rnammer-1.2.readme>`_. Put all RNAMMER files in a directory ``rnammer-1.2`` apart from the script file ``rnammer``; put the directory and the script separately in ``*python package path*/teritori/conserved_motifs`` (usually ``/home/*username*/.local/lib/python3.x/site-packages/teritori/conserved_motifs``).\n\nRNAmmer specifically requires HMMER version 2.2g to run, so you will need to download this in addition to HMMER3 (can be found `here <http://eddylab.org/software/hmmer/hmmer-2.2g.tar.gz>`_). Unzip the program and put the whole ``hmmer-2.2`` directory in the same directory as RNAmmer (``conserved_motifs``). Then follow the installation instructions in the ``INSTALL`` file in the directory. You may need ro run with superuser rights. Also, every component might not install properly; this is fine as long as ``hmmsearch`` is available in the ``binaries`` directory after installing.\n\nNow, open the ``rnammer`` file and modify the following:\n\n- ``my $INSTALL_PATH``: set this to the **absolute** path of the ``rnammer-1.2`` directory (``your/path/to/rnammer-1.2``).\n\n- ``$HMMSEARCH_BINARY``: set this to the **absolute** path of ``binaries/hmmsearch`` which can be found in the ``hmmer-2.2g`` directory (``your/path/to/hmmer-2.2g/binaries/hmmsearch``).\n\n- Make sure that ``$PERL`` points to the correct bin path for the Perl executable.\n\nNOTE: RNAmmer and HMMER 2.2g do **not** need to be executable or accessible from the ``$PATH``.\n\nUsage\n^^^^^^^^^^^^^^^^^^^^^\n\nArguments\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n -h                          show help message and exit\n -i I, --input I             **Required**. FASTA file with the bacterial genome to analyze.\n\n                             Must contain exactly one sequence\n --genes GENES               GFF file containing all genes of the genome as predicted by Prodigal.\n\n                             Must be on the exact format of a Prodigal prediction\n -o O, --output O            Output name format O. Output files will have this name.\n\n                             If nothing specified, name will be parsed from input.\n -a                          Include all three genomic features in prediction.\n                             Default mode if nothing specified\n --gc                        Include skew calculations in the prediction\n --go                        Include gene orientation in the prediction\n --cm                        Include conserved motifs in the prediction\n -l                          The genome is linear (default is circular)\n --graph                     Output graph of results in PNG file\n\nExamples\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\nComing soon\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/evolegiolab/findingori2", "keywords": "bioinformatics genomics replication", "license": "GNU General Public License v3 or later (G  PLv3+)", "maintainer": "", "maintainer_email": "", "name": "teritori", "package_url": "https://pypi.org/project/teritori/", "platform": "", "project_url": "https://pypi.org/project/teritori/", "project_urls": {"Homepage": "https://github.com/evolegiolab/findingori2"}, "release_url": "https://pypi.org/project/teritori/0.1.3/", "requires_dist": ["biopython", "numpy", "matplotlib", "scipy", "scikit-learn", "bcbio-gff"], "requires_python": "", "summary": "Replications origin and terminus prediction in bacterial genomes", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>Finding the origin (ORI) and terminus (TER) of replication is important for all research involving sequencing of genomic data, mainly because it gives clearly defined start and end points for a sequence, and enables comparison and analysis of different samples. Knowing these locations also provides verification that the sequences are correctly assembled. As it currently stands there are no one-stop software solutions for ORI and TER identification in bacteria; researchers have to rely on a combination of different tools and manual inspection of results.</p>\n<p>To solve this, we developed <strong>terITori</strong>, an automatic tool for identifying origin and terminus of replication in bacterial genomes, which combines different key genomic features into a single final reliable prediction. The result is also statistically tested, which gives the user an idea about how accurate the prediction is. In terITori we believe we have created a useful program which will fill a gap in the available software of today, and make replication-related research simpler, faster and more accurate.</p>\n<p>The three features that are included calculated in terITori are genomic skews (GC and TA), gene strand orientation, and conserved motifs (specifically dnaA boxes, dif motifs and rRNAs). terITori takes a FASTA file of the query bacterial genome as input, and allows the user to specify which features to include in the analysis (one, a combination of two, or all three). It also provides a file predicted genes in the bacteria, which have been predicted by the prokaryotic prediction program Prodigal. If a Prodigal gene prediction is already available, the user can specify this as an input.</p>\n<p>The program is still in a very early stage, and the results might not always be fully accurate. The execution time could also be very long at times (up to several hours).</p>\n</div>\n<div id=\"description\">\n<h2>Description</h2>\n<p>The terITori script combines the three genomic feature scripts (skew, gene orientation, conserved motifs) and produces a final prediction of the ORI and TER positions. The results are combined in the following way:</p>\n<ul>\n<li>Run Prodigal if the all features, skew or gene orientation are included and no GFF file with already predict genes is entered. Save the predicted genes in a FASTA file.</li>\n<li>Predict ORI and TER using\u2026</li>\n</ul>\n<blockquote>\n<ul>\n<li>Identified rRNAs, DnaA boxes and dif motifs. Produces ORI and TER intervals, if possible.</li>\n<li>Gene orientation data provided by the Prodigal output. Produces ORI and TER intervals and a significance estimation (p-value), through bootstrapping, for each.</li>\n<li>Skew calculations. Produces predicted ORI and TER positions, along with p-values for each.</li>\n</ul>\n</blockquote>\n<ul>\n<li>Use the final prediction script to combine results and p-values.</li>\n<li>Save the predictions and p-values from all used methods in a results CSV file.</li>\n<li>Create and save an illustration as a PNG file (if the user has specified to do so). This will contain the cumulative GC and TA skew plots (if that script is included), the location and direction of conserved motifs (if the motifs calculation was included), and/or (if skew is not included but gene orientation is) the plot of the calculated statistic from the gene orientation script. Both gene orientation and skew plots cannot be included in the same figure as they have considerably different scales.</li>\n</ul>\n<p>The results will be located in a directory terITori/Results/ located in the directory where the program is run. A log with timestamps for each step in the program is also produced and saved in the same location as the results.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>terITori can be installed via pip:</p>\n<pre>$ pip install teritori\n</pre>\n<p>If the bin location is added to PATH it can then be run by typing:</p>\n<pre>$ terITori\n</pre>\n<div id=\"dependencies\">\n<h3>Dependencies</h3>\n<p>Python (&gt;=3.5)</p>\n<div id=\"required-packages\">\n<h4>Required Packages</h4>\n<ul>\n<li>Biopython (<tt>$ pip install biopython</tt>)</li>\n<li>Numpy (<tt>$ pip install numpy</tt>)</li>\n<li>Matplotlib (<tt>$ pip install matplotlib</tt>)</li>\n<li>Scipy (<tt>$ pip install scipy</tt>)</li>\n<li>scikit-learn (<tt>$ pip install <span class=\"pre\">scikit-learn</span></tt>)</li>\n<li>bcbio-gff (<tt>$pip install <span class=\"pre\">bcbio-gff</span></tt>)</li>\n</ul>\n</div>\n</div>\n<div id=\"external-software\">\n<h3>External Software</h3>\n<p>Executables should be in user\u2019s <tt>$PATH</tt> if nothing else specified.</p>\n<div id=\"prodigal\">\n<h4>Prodigal</h4>\n<p>A prokaryotic gene prediction software by Doug Hyatt. Tested with v. 2.6.2. Can be installed via apt:</p>\n<pre>$ sudo apt install prodigal\n</pre>\n<p>or downloaded at <a href=\"https://github.com/hyattpd/Prodigal\" rel=\"nofollow\">https://github.com/hyattpd/Prodigal</a>.</p>\n</div>\n<div id=\"hmmer3\">\n<h4>HMMER3</h4>\n<p>HMMER: biosequence analysis using profile hidden Markov models, by Sean Eddy and coworkers. Tested with v. 3.1b2. Can be installed via apt:</p>\n<pre>$ sudo apt install hmmer\n</pre>\n<p>or downloaded at <a href=\"http://hmmer.org/\" rel=\"nofollow\">http://hmmer.org/</a>.</p>\n</div>\n<div id=\"rnammer-and-hmmer2\">\n<h4>RNAmmer and HMMER2</h4>\n<p>RNAmmer uses and depends on Perl, install it in an appropriate way (e.g. <tt>sudo apt install perl</tt>) and make sure it on the <tt>$PATH</tt> and can be run by typing <tt>$ perl</tt>.</p>\n<p>You can find RNAmmer and instructions at <a href=\"http://www.cbs.dtu.dk/services/doc/rnammer-1.2.readme\" rel=\"nofollow\">http://www.cbs.dtu.dk/services/doc/rnammer-1.2.readme</a>. Put all RNAMMER files in a directory <tt><span class=\"pre\">rnammer-1.2</span></tt> apart from the script file <tt>rnammer</tt>; put the directory and the script separately in <tt>*python package <span class=\"pre\">path*/teritori/conserved_motifs</span></tt> (usually <tt><span class=\"pre\">/home/*username*/.local/lib/python3.x/site-packages/teritori/conserved_motifs</span></tt>).</p>\n<p>RNAmmer specifically requires HMMER version 2.2g to run, so you will need to download this in addition to HMMER3 (can be found <a href=\"http://eddylab.org/software/hmmer/hmmer-2.2g.tar.gz\" rel=\"nofollow\">here</a>). Unzip the program and put the whole <tt><span class=\"pre\">hmmer-2.2</span></tt> directory in the same directory as RNAmmer (<tt>conserved_motifs</tt>). Then follow the installation instructions in the <tt>INSTALL</tt> file in the directory. You may need ro run with superuser rights. Also, every component might not install properly; this is fine as long as <tt>hmmsearch</tt> is available in the <tt>binaries</tt> directory after installing.</p>\n<p>Now, open the <tt>rnammer</tt> file and modify the following:</p>\n<ul>\n<li><tt>my $INSTALL_PATH</tt>: set this to the <strong>absolute</strong> path of the <tt><span class=\"pre\">rnammer-1.2</span></tt> directory (<tt><span class=\"pre\">your/path/to/rnammer-1.2</span></tt>).</li>\n<li><tt>$HMMSEARCH_BINARY</tt>: set this to the <strong>absolute</strong> path of <tt>binaries/hmmsearch</tt> which can be found in the <tt><span class=\"pre\">hmmer-2.2g</span></tt> directory (<tt><span class=\"pre\">your/path/to/hmmer-2.2g/binaries/hmmsearch</span></tt>).</li>\n<li>Make sure that <tt>$PERL</tt> points to the correct bin path for the Perl executable.</li>\n</ul>\n<p>NOTE: RNAmmer and HMMER 2.2g do <strong>not</strong> need to be executable or accessible from the <tt>$PATH</tt>.</p>\n</div>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<div id=\"arguments\">\n<h4>Arguments</h4>\n<blockquote>\n<table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">-h</span></kbd></td>\n<td>show help message and exit</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-i <var>I</var></span>, <span class=\"option\">--input <var>I</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td><p><strong>Required</strong>. FASTA file with the bacterial genome to analyze.</p>\n<p>Must contain exactly one sequence</p>\n</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--genes <var>GENES</var></span></kbd></td>\n<td><p>GFF file containing all genes of the genome as predicted by Prodigal.</p>\n<p>Must be on the exact format of a Prodigal prediction</p>\n</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-o <var>O</var></span>, <span class=\"option\">--output <var>O</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td><p>Output name format O. Output files will have this name.</p>\n<p>If nothing specified, name will be parsed from input.</p>\n</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-a</span></kbd></td>\n<td>Include all three genomic features in prediction.\nDefault mode if nothing specified</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--gc</span></kbd></td>\n<td>Include skew calculations in the prediction</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--go</span></kbd></td>\n<td>Include gene orientation in the prediction</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--cm</span></kbd></td>\n<td>Include conserved motifs in the prediction</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-l</span></kbd></td>\n<td>The genome is linear (default is circular)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--graph</span></kbd></td>\n<td>Output graph of results in PNG file</td></tr>\n</tbody>\n</table>\n</blockquote>\n</div>\n<div id=\"examples\">\n<h4>Examples</h4>\n<p>Coming soon</p>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4751530, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "300df297696973b29d5f09093423648a", "sha256": "0cd67b252da2195481b8ad83740178571d8383ea55efb6944b5b345dacc0f813"}, "downloads": -1, "filename": "teritori-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "300df297696973b29d5f09093423648a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 40772, "upload_time": "2019-01-25T13:46:58", "upload_time_iso_8601": "2019-01-25T13:46:58.812590Z", "url": "https://files.pythonhosted.org/packages/cd/c8/252e676caadd746663e8e2a5e40b88ce1d94445666de889864f5576a1886/teritori-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49984d7d7a85000cc00f6abe5e462c85", "sha256": "d6fea3d8142f24cc17af7b74a273e5fcb6efefa8250e660d86ef3c9f1536a320"}, "downloads": -1, "filename": "teritori-0.1.tar.gz", "has_sig": false, "md5_digest": "49984d7d7a85000cc00f6abe5e462c85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37732, "upload_time": "2019-01-25T13:47:00", "upload_time_iso_8601": "2019-01-25T13:47:00.953810Z", "url": "https://files.pythonhosted.org/packages/f8/47/ebdf60c9e622e976e938e0d8edee5d0a33df7088d2276c7a0a2b6cfc9f16/teritori-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "3f913a036f06d80ca438f7eb1201b801", "sha256": "d8e191b538b5fa73e8c4762b70e86c02f750c9d0b6bc0c0f9cb860ee2833ffe6"}, "downloads": -1, "filename": "teritori-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3f913a036f06d80ca438f7eb1201b801", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49563, "upload_time": "2019-01-28T11:10:31", "upload_time_iso_8601": "2019-01-28T11:10:31.870952Z", "url": "https://files.pythonhosted.org/packages/81/92/73a8b1f4bcf0a2ca315cc62b44e2077deda875d4f666a5176a4f8cc4a354/teritori-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fa0a7fa8fac705dcb19fe6d500889715", "sha256": "8eb548cf45d52b383d2ec49a4ce848528320f66024f2928d7973045861ad5626"}, "downloads": -1, "filename": "teritori-0.1.1.tar.gz", "has_sig": false, "md5_digest": "fa0a7fa8fac705dcb19fe6d500889715", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38321, "upload_time": "2019-01-28T11:10:34", "upload_time_iso_8601": "2019-01-28T11:10:34.086909Z", "url": "https://files.pythonhosted.org/packages/6d/36/ddf2908cf60da186b316ff600d4649154abfa7c7c94d75e3f09b5081fea9/teritori-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "c5ba53ebbe90201e681e3181e8bcc7ce", "sha256": "6753db60b7489d6e5e5f4611087cdafba6ae5de75943e6ddde887a477142a93d"}, "downloads": -1, "filename": "teritori-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c5ba53ebbe90201e681e3181e8bcc7ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49446, "upload_time": "2019-01-28T13:55:17", "upload_time_iso_8601": "2019-01-28T13:55:17.137890Z", "url": "https://files.pythonhosted.org/packages/53/39/cdd7adc1ac7f1740bda66c9d89dee106cd0bd2c911696101c1dcc2e62310/teritori-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "42c9561c69dd30388033963aef9291d8", "sha256": "cd7185c933926b4725065a3fa5fecdf765ee45ead3d9df0844e2d3de8d9d786c"}, "downloads": -1, "filename": "teritori-0.1.2.tar.gz", "has_sig": false, "md5_digest": "42c9561c69dd30388033963aef9291d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38243, "upload_time": "2019-01-28T13:55:18", "upload_time_iso_8601": "2019-01-28T13:55:18.894779Z", "url": "https://files.pythonhosted.org/packages/ca/b7/3ab32168c71479bf6890e6dbf4c675f59d4d257522e2a586a8fa243ffc92/teritori-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "d9cb3c4e5ea67b96255d914794d80416", "sha256": "eaeb0c0e3d63b3435d3087e3e0fa822050d0a5bc3b63b64c6f5956a1d5df6279"}, "downloads": -1, "filename": "teritori-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d9cb3c4e5ea67b96255d914794d80416", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49477, "upload_time": "2019-01-28T19:26:33", "upload_time_iso_8601": "2019-01-28T19:26:33.436350Z", "url": "https://files.pythonhosted.org/packages/46/3e/5a1e913ea01e39fd24ff63f416aae469bdc1c63fb2da62817a72773a5720/teritori-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "67b58b36b1175c1c0c86bc1a4aa988cb", "sha256": "308da3a69330cbbae851af0c0bc97bae4d85719434cfa6a3431cbe84076920d2"}, "downloads": -1, "filename": "teritori-0.1.3.tar.gz", "has_sig": false, "md5_digest": "67b58b36b1175c1c0c86bc1a4aa988cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38297, "upload_time": "2019-01-28T19:26:35", "upload_time_iso_8601": "2019-01-28T19:26:35.058210Z", "url": "https://files.pythonhosted.org/packages/4a/60/ac850b21157dc7e483685f3a646690b33dacdfcc5ab6e1df1b5aac36902a/teritori-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d9cb3c4e5ea67b96255d914794d80416", "sha256": "eaeb0c0e3d63b3435d3087e3e0fa822050d0a5bc3b63b64c6f5956a1d5df6279"}, "downloads": -1, "filename": "teritori-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d9cb3c4e5ea67b96255d914794d80416", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49477, "upload_time": "2019-01-28T19:26:33", "upload_time_iso_8601": "2019-01-28T19:26:33.436350Z", "url": "https://files.pythonhosted.org/packages/46/3e/5a1e913ea01e39fd24ff63f416aae469bdc1c63fb2da62817a72773a5720/teritori-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "67b58b36b1175c1c0c86bc1a4aa988cb", "sha256": "308da3a69330cbbae851af0c0bc97bae4d85719434cfa6a3431cbe84076920d2"}, "downloads": -1, "filename": "teritori-0.1.3.tar.gz", "has_sig": false, "md5_digest": "67b58b36b1175c1c0c86bc1a4aa988cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38297, "upload_time": "2019-01-28T19:26:35", "upload_time_iso_8601": "2019-01-28T19:26:35.058210Z", "url": "https://files.pythonhosted.org/packages/4a/60/ac850b21157dc7e483685f3a646690b33dacdfcc5ab6e1df1b5aac36902a/teritori-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:58 2020"}