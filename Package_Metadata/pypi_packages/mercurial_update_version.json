{"info": {"author": "Marcin Kasperski", "author_email": "Marcin.Kasperski@mekk.waw.pl", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: DFSG approved", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Version Control"], "description": ".. -*- mode: rst; compile-command: \"rst2html README.txt README.html\" -*-\n\n=========================\nMercurial Update Version\n=========================\n\nNo more manual version number editing.\n\nWhenever you issue ``hg tag``, this extension scans your repository\nfor files containing various kinds of ``VERSION =`` lines, updates\nthose constants appropriately, commits the change, and only then tags\nthe release.\n\nFunctionality can be enabled per-repository or (via ``~/.hgrc``) for\nmany repositories at once (so you don't need to remember about\nactivating it on every created, or cloned repository).\n\n.. contents::\n   :local:\n   :depth: 2\n\n.. sectnum::\n\nEnabling the extension\n==========================\n\nInstall the extension as described below. Then either enable it\nper-repository, or enable for many repositories at once.\n\nEnabling per-repository\n---------------------------\n\nIn repository ``.hg/hgrc`` write::\n\n    [update_version]\n    active = true\n    language = python\n    tagfmt = dotted\n\n(of course using appropriate settings). Here:\n\n- ``language`` implies version constants syntax, and sometimes\n  restricts list of files scanned,\n\n- ``tagfmt`` describes expected tag syntax (and how to extract\n  actual version number from the tag).\n\nFor example, ``language = python`` means looking for ``setup.py``,\n``__init__.py`` and ``version.py`` files anywhere inside the\nrepository, and updating lines looking like ``VERSION = \"1.2.3\"``,\nwhile ``tagfmt = dotted`` means simple dotted numbers are used as\ntags (``hg tag 1.0.9``).\n\nBoth languages and tag formats are configurable, extension brings\nsome sane defaults but they can be overridden, and new styles\ncan be defined. See below.\n\nIt is also possible to enable more than one language. For example,\nto update numbers in both python, and javascript files, \none can write in ``.hg/hgrc``::\n\n    [update_version]\n    py.active = true\n    py.language = python\n    py.tagfmt = dotted\n    js.active = true\n    js.language = javascript\n    js.tagfmt = dotted\n\nName prefixes (``py`` and ``js`` in the sample above) are used only\nto group the settings and are not important (use any name you like).\nThe ``tagfmt`` setting should usually be the same in all entries.\n\n\nEnabling for many repositories at once\n------------------------------------------------------\n\nIn ``~/.hgrc`` write something like::\n\n    [update_version]\n    pydev.active_on = ~/sources/pymodules, ~/work/python \n    pydev.language = python\n    pydev.tagfmt = dotted\n    myperl.active_on = ~/scripts, ~/work/scripts \n    myperl.language = perl\n    myperl.tagfmt = dashed\n    excvs.active_on = ~/legacy\n    excvs.expand_keywords = 1\n\nName prefixes (``pydev`` and ``myperl``) are used only to group\nthree settings together (use any names you like).\n\nIn both cases:\n\n- ``.active_on`` lists directory trees to which given rule can be applied\n  (absolute paths, ``~`` and ``~user`` are allowed), \n\n- ``.language`` and ``.tagfmt`` define which language settings and which tag\n  format to use for those directories.\n\n- ``.expand_keywords`` enables CVS keyword expansion (replacement of ``$Name$`` and similar constructs). Note that it works differently than keyword extension, replacements are commited (so will always be present in the checked out code).\n\nIn case multiple directives match the same repo, all are processed, for example with::\n\n    [update_version]\n    pydev.active_on = ~/sources\n    pydev.language = python\n    pydev.tagfmt = dotted\n    jsdev.active_on = ~/sources\n    jsdev.language = javascript\n    jsdev.tagfmt = dotted\n\nin repo ``~/sources/myweb`` both python, and javascript files, will be processed.\n\nEnabling for use in TortoiseHg\n----------------------------------------------------\n\nThe setup above is not sufficient for tags created from TortoiseHg GUI\n(via ``thg tag`` or tagging dialog of main TortoiseHg window). To get\nthose working, you must manually enable the update version hook. Add\nto your ``~/.hgrc``::\n\n   [hooks]\n   pre-tag.update_version = python:mercurial_update_version.pre_tag_hook\n  \nPlease, use exactly that name and value (it will be used by extension\nto detect that you enabled the hook, so it need not be enabled again\nunder bare Mercurial).\n\nThe rest of the configuration remains the same.\n\n.. note::\n\n   Technical details: ``mercurial_update_version`` usually enables\n   that hook by itself. Unfortunately under TortoiseHg dynamic hook\n   activation does not work (THG has it's own command processing chain\n   different from Mercurial core, and hook list is effectively frozen\n   before extensions are able to impact it).\n\n\nUsing\n============================================\n\nAfter enabling the extension:\n\n- ensure your code have some initial version variables\n  (put sth. like ``VERSION = \"0.0.0\"`` in appropriate place(s))\n\n- simply ``hg tag \u00abappropriate-tag\u00bb``.\n\nand your version constants will be updated, the change commited, and\nonly the resulting changeset tagged.\n\nVersion numbers are not updated when tag is placed by revision (``hg\ntag -r \u00abversion-no\u00bb \u00abtag\u00bb``), unless specified revision matches\ncurrently checked out revision.\n\nTags not matching the expected pattern are ignored, just like local\ntags (rarely used Mercurial feature).\n\nThe extension notifies you whether and what it does, for example::\n\n  $ hg tag 2.0\n  update_version: Version number in src/version.py set to 2.0. List of changes:\n      Line 2\n      < VERSION = \"1.0\"\n      > VERSION = \"2.0\"\n\nor::\n\n  $ hg tag -r 2 0.5.0\n  update_version: ignoring tag placed -r revision (tag is placed, but version number not updated)\n\nPredefined languages\n=============================================\n\nThe ``language`` setting defines:\n\n- which files to check and patch (by filename patterns)\n\n- what is the appropriate constant format and name\n\nThe following languages are currently supported:\n\nPython (``language=python``)\n----------------------------\n\nLook for files named ``setup.py``, ``__init__.py`` or\n``version.py`` (anywhere inside repository). In those files,\nupdate lines looking like::\n\n    VERSION = '1.2.3'\n\n(at least one dot - but can be more, both single and double-quotes\nare supported, just like various spacing and indentation).\n\nInserted version number is formatted in the same way (as\ndot-separated list of numbers).  Tag being placed should contain\nat least two-part version number to be used.\n\nPerl (``language=perl``)\n-------------------------\n\nLook for files named ``*.pl``, ``*.pm`` and ``*.pod`` around\nrepository. If found, look for lines like::\n\n    our $VERSION = '1.00';\n    my $VERSION = '11.72';\n    use constant VERSION => '21.3374';\n\n(exactly one dot expected, various spacing and indentation\nallowed, double quotes allowed) and also::\n\n    Version 1.23\n\n(usually met in POD sections).\n\nAlso, look for ``dist.ini`` and if found, fix lines like::\n\n    version = 0.02\n\nTwo kinds of tags numbers are supported. If tag contains two-item\nversion, it is left as is (tag ``1.0`` results in version ``1.0``,\ndashed tag ``1-03`` brings ``1.03``). If tag has three parts,\nfirst is left before the dot while second and third each get two\ndigits after the dot (tag ``1.7.2`` is translated into version\n``1.0702``, tag ``17-0-9`` into ``17.0009``). Other tags are\ninvalid.\n\nJavaScript (``language=javascript``)\n-------------------------------------\n\nLook for files named ``version.js``, ``version.jsx``, ``*_version.js``\nand ``*_version.jsx``. In any of those, look for lines like::\n\n     var VERSION = \"1.2.3\";\n     const VERSION = \"1.2.3\";\n     let VERSION = \"1.2.3\";\n\n(final semicolons being optional).\n\nAlso look for ``package.json`` file(s) and if found, update line like::\n\n    \"version\": \"1.0.0\",\n\n(with or without semicolon, and with or without indentation). Note: this\nis currently expected to be the sole item on the line, without other\nkeys.\n\nJSON (``language=json``)\n-------------------------------------\n\nCheck files named ``*.json`` for lines like::\n\n    \"version\": \"1.0.0\",\n\n(with or without semicolon, with or without indentation, with single or double quotes,\nwithout other keys on the same line).\n\nContrary to most other languages, there are additional restrictions:\n\n- checking is limited to first 30 lines of the file,\n\n- only one (first) line of such form is modified.\n\n\n\nLogstash (``language=logstash``)\n---------------------------------------\n\nCheck files named ``*version*.conf`` (``conf`` extension and word\n``version`` anywhere inside basename) for lines like::\n\n    add_field => { \"[version]\" => \"1.0.2\" }\n\nor mayhaps::\n\n    add_field => { \"[some][prefix][version]\" => \"1.0.2\" }\n\n(last - or only - part of the key must be ``[version]``, whitespace can be flexible\nbut whole line as such must be constructed as above).\n\nI recommend using file like ``01-version.conf`` (named so it is\nprocessed early), with content like::\n\n    filter {\n        mutate {\n            add_field => { \"[@metadata][myapp][version]\" => \"1.0.2\" }\n        }\n    }\n\nand then referring to this field (copying it, using inside formatted\nstrings) wherever needed in filters and outputs.\n\n\nC++ (``language=c++``)\n--------------------------\n\nLook for files named ``version.hxx``, ``version.cxx``,\n``version.hpp``, ``version.cpp``. Look for and update lines like::\n\n      const string VERSION = \"1.2.3\";\n      const char* VERSION = \"1.2.3\";\n      const char VERSION[] = \"1.2.3\";\n      string VERSION = \"1.2.3\";\n\n*Support for further languages is planned, feel free to suggest them.*\n\nPredefined tag formats\n=============================\n\nThe following tag formats are supported.\n\nDot-separated numbers (``tagfmt=dotted``)\n-----------------------------------------------\n\nTags like ``1.0``, ``1.0.3``, ``11.17.34``.\n\nDash-separated numbers (``tagfmt=dashed``)\n-----------------------------------------------\n\nTags like ``1-0``, ``1-0-3``, ``11-17-34``.\n\nDotted with text prefix (``tagfmt=pfx-dotted``)\n-------------------------------------------------\n\nTags like ``mylib-1.0`` or ``sth_11.3.17``:\nalphanumeric string, dash or underscore,\nthen actual version as in ``dotted``.\n\nDashed with text prefix (``tagfmt=pfx-dashed``)\n-------------------------------------------------\n\nTags like ``mylib-1-0`` or ``sth_11-3-17``:\nalphanumeric string, dash or underscore,\nthen actual version as in ``dashed``. leading\npart must not end with digit.\n\nKeyword expansion\n=======================\n\nSetting ``expand_keywords=1`` enables CVS keyword expansion.  Source\nwill be scanned for CVS keywords like ``$Name$`` (or ``$Name: mytag_0.7.0 $``), ``$Revision$``, etc, and those will be appropriately updated. This change will be commited, making those changes permanent\n(until they are replaced by newer tag). \n\nThis is an alternative to standard keyword extension, which updates\nthose keywords on update (and causes various problems with merges,\nedits, extension configuration, etc). With ``update_version``\napproach, proper keyword values will be simply commited just before\ntagging, so they will always be present in the checkout.\n\nNote that the replacement is somewhat simplistic: the main purpose is\nto get proper ``$Name$``, everything else (``$Revision$``, ``$Header$``\netc) gets populated with the data of last pre-tag changeset (calculating\ntrue date or revision of last change per each file is possible, but would\nbe fairly costly).\n\nExample configuration (``~/.hgrc``)::\n\n   [update_version]\n   cvsconverts.active_on = ~/devel/legacy ~/devel/libs\n   cvsconverts.expand_keywords = 1\n\nCustom languages\n=============================\n\nNot yet supported, but planned (defining new language by configuration\nsettings, or overriding some default language characteristics). The\ngeneral idea is to have some reasonable defaults built-in, but allow\nreconfiguration.\n\n\nCustom tag formats\n=============================\n\nNot yet supported, but planned (defining new tag format by\nconfiguration settings).\n\n\nCommands\n=====================\n\n``hg tag``\n-----------\n\nExtension mainly work by augmenting ``hg tag``, as described\nabove.\n\n\n``hg tag_version_test``\n------------------------\n\nThis is *dry run* check. The command::\n\n    hg tag_version_test 1.0\n\nlists which files would be checked, whether version lines were found\nin them, and how would they be changed, but does not change anything.\n\n\nInstallation\n==================\n\nLinux/Unix (from PyPI)\n---------------------------------------------\n\nIf you have working ``pip`` or ``easy_install``::\n\n    pip install --user mercurial_update_version\n\nor maybe::\n\n    sudo pip install mercurial_update_version\n\n(or use ``easy_install`` instead of ``pip``). Then activate by::\n\n    [extensions]\n    mercurial_update_version =\n\nTo upgrade, repeat the same command with ``--upgrade`` option, for\nexample::\n\n    pip install --user --upgrade mercurial_update_version\n\nLinux/Unix (from source)\n---------------------------------------------\n\nIf you don't have ``pip``, or wish to follow development more closely:\n\n- clone both this repository and `mercurial_extension_utils`_ and put\n  them in the same directory, for example::\n\n    cd ~/sources\n    hg clone https://bitbucket.org/Mekk/mercurial-extension_utils/\n    hg clone https://bitbucket.org/Mekk/mercurial-update_version/\n\n- update to newest tags,\n\n- activate by::\n\n    [extensions]\n    mercurial_update_version = ~/sources/mercurial-update_version/mercurial_update_version.py\n\nTo upgrade, pull and update.\n\nSee `mercurial_extension_utils`_ for longer description of this kind\nof installation.\n\nWindows\n---------------------------------------------\n\nIf you have any Python installed, you may install with ``pip``::\n\n    pip install mercurial_update_version\n\nStill, as Mercurial (whether taken from TortoiseHg_, or own package)\nuses it's own bundled Python, you must activate by specifying the path::\n\n    [extensions]\n    mercurial_update_version = C:/Python27/Lib/site-packages/mercurial_update_version.py\n    ;; Or wherever pip installed it, depending on the version it can also be\n    ;; sth like (replace john with proper username and 37 with proper version)\n    ;; mercurial_update_version =  C:\\Users\\john\\AppData\\Local\\Programs\\Python\\Python37\\Lib\\site-packages\\mercurial_update_version.py\n\nTo upgrade to new version::\n\n    pip install --upgrade mercurial_update_version\n\nIf you don't have any Python, clone repositories::\n\n    cd c:\\hgplugins\n    hg clone https://bitbucket.org/Mekk/mercurial-extension_utils/\n    hg clone https://bitbucket.org/Mekk/mercurial-update_version/\n\nupdate to tagged versions and activate by path::\n\n    [extensions]\n    mercurial_update_version = C:/hgplugins/mercurial-update_version/mercurial_update_version.py\n    ;; Or wherever you cloned\n\nSee `mercurial_extension_utils`_ documentation for more details on\nWindows installation. \n\n\nHistory\n==================================================\n\nSee `HISTORY.txt`_\n\n\nDevelopment, bug reports, enhancement suggestions\n===================================================\n\nDevelopment is tracked on BitBucket, see \nhttp://bitbucket.org/Mekk/mercurial-update_version/\n\nUse BitBucket issue tracker for bug reports and enhancement\nsuggestions.\n\nAdditional notes\n================\n\nInformation about this extension is also available\non Mercurial Wiki: http://mercurial.selenic.com/wiki/UpdateVersionExtension\n\nCheck also `other Mercurial extensions I wrote`_.\n\n.. _other Mercurial extensions I wrote: http://mekk.bitbucket.io/mercurial.html\n\n.. _Mercurial: http://mercurial.selenic.com\n.. _HISTORY.txt: http://bitbucket.org/Mekk/mercurial-update_version/src/tip/HISTORY.txt\n.. _mercurial_extension_utils: https://bitbucket.org/Mekk/mercurial-extension_utils/\n.. _TortoiseHg: http://tortoisehg.bitbucket.org/\n\n.. |drone-badge| \n    image:: https://drone.io/bitbucket.org/Mekk/mercurial-update_version/status.png\n     :target: https://drone.io/bitbucket.org/Mekk/mercurial-update_version/latest\n     :align: middle\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://bitbucket.org/Mekk/mercurial-update_version", "keywords": "mercurial hg version auto-update tag", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "mercurial_update_version", "package_url": "https://pypi.org/project/mercurial_update_version/", "platform": "", "project_url": "https://pypi.org/project/mercurial_update_version/", "project_urls": {"Homepage": "http://bitbucket.org/Mekk/mercurial-update_version"}, "release_url": "https://pypi.org/project/mercurial_update_version/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "Mercurial Update Version Extension", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>No more manual version number editing.</p>\n<p>Whenever you issue <tt>hg tag</tt>, this extension scans your repository\nfor files containing various kinds of <tt>VERSION =</tt> lines, updates\nthose constants appropriately, commits the change, and only then tags\nthe release.</p>\n<p>Functionality can be enabled per-repository or (via <tt><span class=\"pre\">~/.hgrc</span></tt>) for\nmany repositories at once (so you don\u2019t need to remember about\nactivating it on every created, or cloned repository).</p>\n<div id=\"contents\">\n<ul>\n<li><a href=\"#enabling-the-extension\" id=\"id1\" rel=\"nofollow\">1\u00a0\u00a0\u00a0Enabling the extension</a><ul>\n<li><a href=\"#enabling-per-repository\" id=\"id2\" rel=\"nofollow\">1.1\u00a0\u00a0\u00a0Enabling per-repository</a></li>\n<li><a href=\"#enabling-for-many-repositories-at-once\" id=\"id3\" rel=\"nofollow\">1.2\u00a0\u00a0\u00a0Enabling for many repositories at once</a></li>\n<li><a href=\"#enabling-for-use-in-tortoisehg\" id=\"id4\" rel=\"nofollow\">1.3\u00a0\u00a0\u00a0Enabling for use in TortoiseHg</a></li>\n</ul>\n</li>\n<li><a href=\"#using\" id=\"id5\" rel=\"nofollow\">2\u00a0\u00a0\u00a0Using</a></li>\n<li><a href=\"#predefined-languages\" id=\"id6\" rel=\"nofollow\">3\u00a0\u00a0\u00a0Predefined languages</a><ul>\n<li><a href=\"#python-language-python\" id=\"id7\" rel=\"nofollow\">3.1\u00a0\u00a0\u00a0Python (<tt>language=python</tt>)</a></li>\n<li><a href=\"#perl-language-perl\" id=\"id8\" rel=\"nofollow\">3.2\u00a0\u00a0\u00a0Perl (<tt>language=perl</tt>)</a></li>\n<li><a href=\"#javascript-language-javascript\" id=\"id9\" rel=\"nofollow\">3.3\u00a0\u00a0\u00a0JavaScript (<tt>language=javascript</tt>)</a></li>\n<li><a href=\"#json-language-json\" id=\"id10\" rel=\"nofollow\">3.4\u00a0\u00a0\u00a0JSON (<tt>language=json</tt>)</a></li>\n<li><a href=\"#logstash-language-logstash\" id=\"id11\" rel=\"nofollow\">3.5\u00a0\u00a0\u00a0Logstash (<tt>language=logstash</tt>)</a></li>\n<li><a href=\"#c-language-c\" id=\"id12\" rel=\"nofollow\">3.6\u00a0\u00a0\u00a0C++ (<tt>language=c++</tt>)</a></li>\n</ul>\n</li>\n<li><a href=\"#predefined-tag-formats\" id=\"id13\" rel=\"nofollow\">4\u00a0\u00a0\u00a0Predefined tag formats</a><ul>\n<li><a href=\"#dot-separated-numbers-tagfmt-dotted\" id=\"id14\" rel=\"nofollow\">4.1\u00a0\u00a0\u00a0Dot-separated numbers (<tt>tagfmt=dotted</tt>)</a></li>\n<li><a href=\"#dash-separated-numbers-tagfmt-dashed\" id=\"id15\" rel=\"nofollow\">4.2\u00a0\u00a0\u00a0Dash-separated numbers (<tt>tagfmt=dashed</tt>)</a></li>\n<li><a href=\"#dotted-with-text-prefix-tagfmt-pfx-dotted\" id=\"id16\" rel=\"nofollow\">4.3\u00a0\u00a0\u00a0Dotted with text prefix (<tt><span class=\"pre\">tagfmt=pfx-dotted</span></tt>)</a></li>\n<li><a href=\"#dashed-with-text-prefix-tagfmt-pfx-dashed\" id=\"id17\" rel=\"nofollow\">4.4\u00a0\u00a0\u00a0Dashed with text prefix (<tt><span class=\"pre\">tagfmt=pfx-dashed</span></tt>)</a></li>\n</ul>\n</li>\n<li><a href=\"#keyword-expansion\" id=\"id18\" rel=\"nofollow\">5\u00a0\u00a0\u00a0Keyword expansion</a></li>\n<li><a href=\"#custom-languages\" id=\"id19\" rel=\"nofollow\">6\u00a0\u00a0\u00a0Custom languages</a></li>\n<li><a href=\"#custom-tag-formats\" id=\"id20\" rel=\"nofollow\">7\u00a0\u00a0\u00a0Custom tag formats</a></li>\n<li><a href=\"#commands\" id=\"id21\" rel=\"nofollow\">8\u00a0\u00a0\u00a0Commands</a><ul>\n<li><a href=\"#hg-tag\" id=\"id22\" rel=\"nofollow\">8.1\u00a0\u00a0\u00a0<tt>hg tag</tt></a></li>\n<li><a href=\"#hg-tag-version-test\" id=\"id23\" rel=\"nofollow\">8.2\u00a0\u00a0\u00a0<tt>hg tag_version_test</tt></a></li>\n</ul>\n</li>\n<li><a href=\"#installation\" id=\"id24\" rel=\"nofollow\">9\u00a0\u00a0\u00a0Installation</a><ul>\n<li><a href=\"#linux-unix-from-pypi\" id=\"id25\" rel=\"nofollow\">9.1\u00a0\u00a0\u00a0Linux/Unix (from PyPI)</a></li>\n<li><a href=\"#linux-unix-from-source\" id=\"id26\" rel=\"nofollow\">9.2\u00a0\u00a0\u00a0Linux/Unix (from source)</a></li>\n<li><a href=\"#windows\" id=\"id27\" rel=\"nofollow\">9.3\u00a0\u00a0\u00a0Windows</a></li>\n</ul>\n</li>\n<li><a href=\"#history\" id=\"id28\" rel=\"nofollow\">10\u00a0\u00a0\u00a0History</a></li>\n<li><a href=\"#development-bug-reports-enhancement-suggestions\" id=\"id29\" rel=\"nofollow\">11\u00a0\u00a0\u00a0Development, bug reports, enhancement suggestions</a></li>\n<li><a href=\"#additional-notes\" id=\"id30\" rel=\"nofollow\">12\u00a0\u00a0\u00a0Additional notes</a></li>\n</ul>\n</div>\n<div id=\"enabling-the-extension\">\n<h2><a href=\"#id1\" rel=\"nofollow\">1\u00a0\u00a0\u00a0Enabling the extension</a></h2>\n<p>Install the extension as described below. Then either enable it\nper-repository, or enable for many repositories at once.</p>\n<div id=\"enabling-per-repository\">\n<h3><a href=\"#id2\" rel=\"nofollow\">1.1\u00a0\u00a0\u00a0Enabling per-repository</a></h3>\n<p>In repository <tt>.hg/hgrc</tt> write:</p>\n<pre>[update_version]\nactive = true\nlanguage = python\ntagfmt = dotted\n</pre>\n<p>(of course using appropriate settings). Here:</p>\n<ul>\n<li><tt>language</tt> implies version constants syntax, and sometimes\nrestricts list of files scanned,</li>\n<li><tt>tagfmt</tt> describes expected tag syntax (and how to extract\nactual version number from the tag).</li>\n</ul>\n<p>For example, <tt>language = python</tt> means looking for <tt>setup.py</tt>,\n<tt>__init__.py</tt> and <tt>version.py</tt> files anywhere inside the\nrepository, and updating lines looking like <tt>VERSION = \"1.2.3\"</tt>,\nwhile <tt>tagfmt = dotted</tt> means simple dotted numbers are used as\ntags (<tt>hg tag 1.0.9</tt>).</p>\n<p>Both languages and tag formats are configurable, extension brings\nsome sane defaults but they can be overridden, and new styles\ncan be defined. See below.</p>\n<p>It is also possible to enable more than one language. For example,\nto update numbers in both python, and javascript files,\none can write in <tt>.hg/hgrc</tt>:</p>\n<pre>[update_version]\npy.active = true\npy.language = python\npy.tagfmt = dotted\njs.active = true\njs.language = javascript\njs.tagfmt = dotted\n</pre>\n<p>Name prefixes (<tt>py</tt> and <tt>js</tt> in the sample above) are used only\nto group the settings and are not important (use any name you like).\nThe <tt>tagfmt</tt> setting should usually be the same in all entries.</p>\n</div>\n<div id=\"enabling-for-many-repositories-at-once\">\n<h3><a href=\"#id3\" rel=\"nofollow\">1.2\u00a0\u00a0\u00a0Enabling for many repositories at once</a></h3>\n<p>In <tt><span class=\"pre\">~/.hgrc</span></tt> write something like:</p>\n<pre>[update_version]\npydev.active_on = ~/sources/pymodules, ~/work/python\npydev.language = python\npydev.tagfmt = dotted\nmyperl.active_on = ~/scripts, ~/work/scripts\nmyperl.language = perl\nmyperl.tagfmt = dashed\nexcvs.active_on = ~/legacy\nexcvs.expand_keywords = 1\n</pre>\n<p>Name prefixes (<tt>pydev</tt> and <tt>myperl</tt>) are used only to group\nthree settings together (use any names you like).</p>\n<p>In both cases:</p>\n<ul>\n<li><tt>.active_on</tt> lists directory trees to which given rule can be applied\n(absolute paths, <tt>~</tt> and <tt>~user</tt> are allowed),</li>\n<li><tt>.language</tt> and <tt>.tagfmt</tt> define which language settings and which tag\nformat to use for those directories.</li>\n<li><tt>.expand_keywords</tt> enables CVS keyword expansion (replacement of <tt>$Name$</tt> and similar constructs). Note that it works differently than keyword extension, replacements are commited (so will always be present in the checked out code).</li>\n</ul>\n<p>In case multiple directives match the same repo, all are processed, for example with:</p>\n<pre>[update_version]\npydev.active_on = ~/sources\npydev.language = python\npydev.tagfmt = dotted\njsdev.active_on = ~/sources\njsdev.language = javascript\njsdev.tagfmt = dotted\n</pre>\n<p>in repo <tt>~/sources/myweb</tt> both python, and javascript files, will be processed.</p>\n</div>\n<div id=\"enabling-for-use-in-tortoisehg\">\n<h3><a href=\"#id4\" rel=\"nofollow\">1.3\u00a0\u00a0\u00a0Enabling for use in TortoiseHg</a></h3>\n<p>The setup above is not sufficient for tags created from TortoiseHg GUI\n(via <tt>thg tag</tt> or tagging dialog of main TortoiseHg window). To get\nthose working, you must manually enable the update version hook. Add\nto your <tt><span class=\"pre\">~/.hgrc</span></tt>:</p>\n<pre>[hooks]\npre-tag.update_version = python:mercurial_update_version.pre_tag_hook\n</pre>\n<p>Please, use exactly that name and value (it will be used by extension\nto detect that you enabled the hook, so it need not be enabled again\nunder bare Mercurial).</p>\n<p>The rest of the configuration remains the same.</p>\n<div>\n<p>Note</p>\n<p>Technical details: <tt>mercurial_update_version</tt> usually enables\nthat hook by itself. Unfortunately under TortoiseHg dynamic hook\nactivation does not work (THG has it\u2019s own command processing chain\ndifferent from Mercurial core, and hook list is effectively frozen\nbefore extensions are able to impact it).</p>\n</div>\n</div>\n</div>\n<div id=\"using\">\n<h2><a href=\"#id5\" rel=\"nofollow\">2\u00a0\u00a0\u00a0Using</a></h2>\n<p>After enabling the extension:</p>\n<ul>\n<li>ensure your code have some initial version variables\n(put sth. like <tt>VERSION = \"0.0.0\"</tt> in appropriate place(s))</li>\n<li>simply <tt>hg tag <span class=\"pre\">\u00abappropriate-tag\u00bb</span></tt>.</li>\n</ul>\n<p>and your version constants will be updated, the change commited, and\nonly the resulting changeset tagged.</p>\n<p>Version numbers are not updated when tag is placed by revision (<tt>hg\ntag <span class=\"pre\">-r</span> <span class=\"pre\">\u00abversion-no\u00bb</span> \u00abtag\u00bb</tt>), unless specified revision matches\ncurrently checked out revision.</p>\n<p>Tags not matching the expected pattern are ignored, just like local\ntags (rarely used Mercurial feature).</p>\n<p>The extension notifies you whether and what it does, for example:</p>\n<pre>$ hg tag 2.0\nupdate_version: Version number in src/version.py set to 2.0. List of changes:\n    Line 2\n    &lt; VERSION = \"1.0\"\n    &gt; VERSION = \"2.0\"\n</pre>\n<p>or:</p>\n<pre>$ hg tag -r 2 0.5.0\nupdate_version: ignoring tag placed -r revision (tag is placed, but version number not updated)\n</pre>\n</div>\n<div id=\"predefined-languages\">\n<h2><a href=\"#id6\" rel=\"nofollow\">3\u00a0\u00a0\u00a0Predefined languages</a></h2>\n<p>The <tt>language</tt> setting defines:</p>\n<ul>\n<li>which files to check and patch (by filename patterns)</li>\n<li>what is the appropriate constant format and name</li>\n</ul>\n<p>The following languages are currently supported:</p>\n<div id=\"python-language-python\">\n<h3><a href=\"#id7\" rel=\"nofollow\">3.1\u00a0\u00a0\u00a0Python (<tt>language=python</tt>)</a></h3>\n<p>Look for files named <tt>setup.py</tt>, <tt>__init__.py</tt> or\n<tt>version.py</tt> (anywhere inside repository). In those files,\nupdate lines looking like:</p>\n<pre>VERSION = '1.2.3'\n</pre>\n<p>(at least one dot - but can be more, both single and double-quotes\nare supported, just like various spacing and indentation).</p>\n<p>Inserted version number is formatted in the same way (as\ndot-separated list of numbers).  Tag being placed should contain\nat least two-part version number to be used.</p>\n</div>\n<div id=\"perl-language-perl\">\n<h3><a href=\"#id8\" rel=\"nofollow\">3.2\u00a0\u00a0\u00a0Perl (<tt>language=perl</tt>)</a></h3>\n<p>Look for files named <tt>*.pl</tt>, <tt>*.pm</tt> and <tt>*.pod</tt> around\nrepository. If found, look for lines like:</p>\n<pre>our $VERSION = '1.00';\nmy $VERSION = '11.72';\nuse constant VERSION =&gt; '21.3374';\n</pre>\n<p>(exactly one dot expected, various spacing and indentation\nallowed, double quotes allowed) and also:</p>\n<pre>Version 1.23\n</pre>\n<p>(usually met in POD sections).</p>\n<p>Also, look for <tt>dist.ini</tt> and if found, fix lines like:</p>\n<pre>version = 0.02\n</pre>\n<p>Two kinds of tags numbers are supported. If tag contains two-item\nversion, it is left as is (tag <tt>1.0</tt> results in version <tt>1.0</tt>,\ndashed tag <tt><span class=\"pre\">1-03</span></tt> brings <tt>1.03</tt>). If tag has three parts,\nfirst is left before the dot while second and third each get two\ndigits after the dot (tag <tt>1.7.2</tt> is translated into version\n<tt>1.0702</tt>, tag <tt><span class=\"pre\">17-0-9</span></tt> into <tt>17.0009</tt>). Other tags are\ninvalid.</p>\n</div>\n<div id=\"javascript-language-javascript\">\n<h3><a href=\"#id9\" rel=\"nofollow\">3.3\u00a0\u00a0\u00a0JavaScript (<tt>language=javascript</tt>)</a></h3>\n<p>Look for files named <tt>version.js</tt>, <tt>version.jsx</tt>, <tt>*_version.js</tt>\nand <tt>*_version.jsx</tt>. In any of those, look for lines like:</p>\n<pre>var VERSION = \"1.2.3\";\nconst VERSION = \"1.2.3\";\nlet VERSION = \"1.2.3\";\n</pre>\n<p>(final semicolons being optional).</p>\n<p>Also look for <tt>package.json</tt> file(s) and if found, update line like:</p>\n<pre>\"version\": \"1.0.0\",\n</pre>\n<p>(with or without semicolon, and with or without indentation). Note: this\nis currently expected to be the sole item on the line, without other\nkeys.</p>\n</div>\n<div id=\"json-language-json\">\n<h3><a href=\"#id10\" rel=\"nofollow\">3.4\u00a0\u00a0\u00a0JSON (<tt>language=json</tt>)</a></h3>\n<p>Check files named <tt>*.json</tt> for lines like:</p>\n<pre>\"version\": \"1.0.0\",\n</pre>\n<p>(with or without semicolon, with or without indentation, with single or double quotes,\nwithout other keys on the same line).</p>\n<p>Contrary to most other languages, there are additional restrictions:</p>\n<ul>\n<li>checking is limited to first 30 lines of the file,</li>\n<li>only one (first) line of such form is modified.</li>\n</ul>\n</div>\n<div id=\"logstash-language-logstash\">\n<h3><a href=\"#id11\" rel=\"nofollow\">3.5\u00a0\u00a0\u00a0Logstash (<tt>language=logstash</tt>)</a></h3>\n<p>Check files named <tt><span class=\"pre\">*version*.conf</span></tt> (<tt>conf</tt> extension and word\n<tt>version</tt> anywhere inside basename) for lines like:</p>\n<pre>add_field =&gt; { \"[version]\" =&gt; \"1.0.2\" }\n</pre>\n<p>or mayhaps:</p>\n<pre>add_field =&gt; { \"[some][prefix][version]\" =&gt; \"1.0.2\" }\n</pre>\n<p>(last - or only - part of the key must be <tt>[version]</tt>, whitespace can be flexible\nbut whole line as such must be constructed as above).</p>\n<p>I recommend using file like <tt><span class=\"pre\">01-version.conf</span></tt> (named so it is\nprocessed early), with content like:</p>\n<pre>filter {\n    mutate {\n        add_field =&gt; { \"[@metadata][myapp][version]\" =&gt; \"1.0.2\" }\n    }\n}\n</pre>\n<p>and then referring to this field (copying it, using inside formatted\nstrings) wherever needed in filters and outputs.</p>\n</div>\n<div id=\"c-language-c\">\n<h3><a href=\"#id12\" rel=\"nofollow\">3.6\u00a0\u00a0\u00a0C++ (<tt>language=c++</tt>)</a></h3>\n<p>Look for files named <tt>version.hxx</tt>, <tt>version.cxx</tt>,\n<tt>version.hpp</tt>, <tt>version.cpp</tt>. Look for and update lines like:</p>\n<pre>const string VERSION = \"1.2.3\";\nconst char* VERSION = \"1.2.3\";\nconst char VERSION[] = \"1.2.3\";\nstring VERSION = \"1.2.3\";\n</pre>\n<p><em>Support for further languages is planned, feel free to suggest them.</em></p>\n</div>\n</div>\n<div id=\"predefined-tag-formats\">\n<h2><a href=\"#id13\" rel=\"nofollow\">4\u00a0\u00a0\u00a0Predefined tag formats</a></h2>\n<p>The following tag formats are supported.</p>\n<div id=\"dot-separated-numbers-tagfmt-dotted\">\n<h3><a href=\"#id14\" rel=\"nofollow\">4.1\u00a0\u00a0\u00a0Dot-separated numbers (<tt>tagfmt=dotted</tt>)</a></h3>\n<p>Tags like <tt>1.0</tt>, <tt>1.0.3</tt>, <tt>11.17.34</tt>.</p>\n</div>\n<div id=\"dash-separated-numbers-tagfmt-dashed\">\n<h3><a href=\"#id15\" rel=\"nofollow\">4.2\u00a0\u00a0\u00a0Dash-separated numbers (<tt>tagfmt=dashed</tt>)</a></h3>\n<p>Tags like <tt><span class=\"pre\">1-0</span></tt>, <tt><span class=\"pre\">1-0-3</span></tt>, <tt><span class=\"pre\">11-17-34</span></tt>.</p>\n</div>\n<div id=\"dotted-with-text-prefix-tagfmt-pfx-dotted\">\n<h3><a href=\"#id16\" rel=\"nofollow\">4.3\u00a0\u00a0\u00a0Dotted with text prefix (<tt><span class=\"pre\">tagfmt=pfx-dotted</span></tt>)</a></h3>\n<p>Tags like <tt><span class=\"pre\">mylib-1.0</span></tt> or <tt>sth_11.3.17</tt>:\nalphanumeric string, dash or underscore,\nthen actual version as in <tt>dotted</tt>.</p>\n</div>\n<div id=\"dashed-with-text-prefix-tagfmt-pfx-dashed\">\n<h3><a href=\"#id17\" rel=\"nofollow\">4.4\u00a0\u00a0\u00a0Dashed with text prefix (<tt><span class=\"pre\">tagfmt=pfx-dashed</span></tt>)</a></h3>\n<p>Tags like <tt><span class=\"pre\">mylib-1-0</span></tt> or <tt><span class=\"pre\">sth_11-3-17</span></tt>:\nalphanumeric string, dash or underscore,\nthen actual version as in <tt>dashed</tt>. leading\npart must not end with digit.</p>\n</div>\n</div>\n<div id=\"keyword-expansion\">\n<h2><a href=\"#id18\" rel=\"nofollow\">5\u00a0\u00a0\u00a0Keyword expansion</a></h2>\n<p>Setting <tt>expand_keywords=1</tt> enables CVS keyword expansion.  Source\nwill be scanned for CVS keywords like <tt>$Name$</tt> (or <tt>$Name: mytag_0.7.0 $</tt>), <tt>$Revision$</tt>, etc, and those will be appropriately updated. This change will be commited, making those changes permanent\n(until they are replaced by newer tag).</p>\n<p>This is an alternative to standard keyword extension, which updates\nthose keywords on update (and causes various problems with merges,\nedits, extension configuration, etc). With <tt>update_version</tt>\napproach, proper keyword values will be simply commited just before\ntagging, so they will always be present in the checkout.</p>\n<p>Note that the replacement is somewhat simplistic: the main purpose is\nto get proper <tt>$Name$</tt>, everything else (<tt>$Revision$</tt>, <tt>$Header$</tt>\netc) gets populated with the data of last pre-tag changeset (calculating\ntrue date or revision of last change per each file is possible, but would\nbe fairly costly).</p>\n<p>Example configuration (<tt><span class=\"pre\">~/.hgrc</span></tt>):</p>\n<pre>[update_version]\ncvsconverts.active_on = ~/devel/legacy ~/devel/libs\ncvsconverts.expand_keywords = 1\n</pre>\n</div>\n<div id=\"custom-languages\">\n<h2><a href=\"#id19\" rel=\"nofollow\">6\u00a0\u00a0\u00a0Custom languages</a></h2>\n<p>Not yet supported, but planned (defining new language by configuration\nsettings, or overriding some default language characteristics). The\ngeneral idea is to have some reasonable defaults built-in, but allow\nreconfiguration.</p>\n</div>\n<div id=\"custom-tag-formats\">\n<h2><a href=\"#id20\" rel=\"nofollow\">7\u00a0\u00a0\u00a0Custom tag formats</a></h2>\n<p>Not yet supported, but planned (defining new tag format by\nconfiguration settings).</p>\n</div>\n<div id=\"commands\">\n<h2><a href=\"#id21\" rel=\"nofollow\">8\u00a0\u00a0\u00a0Commands</a></h2>\n<div id=\"hg-tag\">\n<h3><a href=\"#id22\" rel=\"nofollow\">8.1\u00a0\u00a0\u00a0<tt>hg tag</tt></a></h3>\n<p>Extension mainly work by augmenting <tt>hg tag</tt>, as described\nabove.</p>\n</div>\n<div id=\"hg-tag-version-test\">\n<h3><a href=\"#id23\" rel=\"nofollow\">8.2\u00a0\u00a0\u00a0<tt>hg tag_version_test</tt></a></h3>\n<p>This is <em>dry run</em> check. The command:</p>\n<pre>hg tag_version_test 1.0\n</pre>\n<p>lists which files would be checked, whether version lines were found\nin them, and how would they be changed, but does not change anything.</p>\n</div>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id24\" rel=\"nofollow\">9\u00a0\u00a0\u00a0Installation</a></h2>\n<div id=\"linux-unix-from-pypi\">\n<h3><a href=\"#id25\" rel=\"nofollow\">9.1\u00a0\u00a0\u00a0Linux/Unix (from PyPI)</a></h3>\n<p>If you have working <tt>pip</tt> or <tt>easy_install</tt>:</p>\n<pre>pip install --user mercurial_update_version\n</pre>\n<p>or maybe:</p>\n<pre>sudo pip install mercurial_update_version\n</pre>\n<p>(or use <tt>easy_install</tt> instead of <tt>pip</tt>). Then activate by:</p>\n<pre>[extensions]\nmercurial_update_version =\n</pre>\n<p>To upgrade, repeat the same command with <tt><span class=\"pre\">--upgrade</span></tt> option, for\nexample:</p>\n<pre>pip install --user --upgrade mercurial_update_version\n</pre>\n</div>\n<div id=\"linux-unix-from-source\">\n<h3><a href=\"#id26\" rel=\"nofollow\">9.2\u00a0\u00a0\u00a0Linux/Unix (from source)</a></h3>\n<p>If you don\u2019t have <tt>pip</tt>, or wish to follow development more closely:</p>\n<ul>\n<li><p>clone both this repository and <a href=\"https://bitbucket.org/Mekk/mercurial-extension_utils/\" rel=\"nofollow\">mercurial_extension_utils</a> and put\nthem in the same directory, for example:</p>\n<pre>cd ~/sources\nhg clone https://bitbucket.org/Mekk/mercurial-extension_utils/\nhg clone https://bitbucket.org/Mekk/mercurial-update_version/\n</pre>\n</li>\n<li><p>update to newest tags,</p>\n</li>\n<li><p>activate by:</p>\n<pre>[extensions]\nmercurial_update_version = ~/sources/mercurial-update_version/mercurial_update_version.py\n</pre>\n</li>\n</ul>\n<p>To upgrade, pull and update.</p>\n<p>See <a href=\"https://bitbucket.org/Mekk/mercurial-extension_utils/\" rel=\"nofollow\">mercurial_extension_utils</a> for longer description of this kind\nof installation.</p>\n</div>\n<div id=\"windows\">\n<h3><a href=\"#id27\" rel=\"nofollow\">9.3\u00a0\u00a0\u00a0Windows</a></h3>\n<p>If you have any Python installed, you may install with <tt>pip</tt>:</p>\n<pre>pip install mercurial_update_version\n</pre>\n<p>Still, as Mercurial (whether taken from <a href=\"http://tortoisehg.bitbucket.org/\" rel=\"nofollow\">TortoiseHg</a>, or own package)\nuses it\u2019s own bundled Python, you must activate by specifying the path:</p>\n<pre>[extensions]\nmercurial_update_version = C:/Python27/Lib/site-packages/mercurial_update_version.py\n;; Or wherever pip installed it, depending on the version it can also be\n;; sth like (replace john with proper username and 37 with proper version)\n;; mercurial_update_version =  C:\\Users\\john\\AppData\\Local\\Programs\\Python\\Python37\\Lib\\site-packages\\mercurial_update_version.py\n</pre>\n<p>To upgrade to new version:</p>\n<pre>pip install --upgrade mercurial_update_version\n</pre>\n<p>If you don\u2019t have any Python, clone repositories:</p>\n<pre>cd c:\\hgplugins\nhg clone https://bitbucket.org/Mekk/mercurial-extension_utils/\nhg clone https://bitbucket.org/Mekk/mercurial-update_version/\n</pre>\n<p>update to tagged versions and activate by path:</p>\n<pre>[extensions]\nmercurial_update_version = C:/hgplugins/mercurial-update_version/mercurial_update_version.py\n;; Or wherever you cloned\n</pre>\n<p>See <a href=\"https://bitbucket.org/Mekk/mercurial-extension_utils/\" rel=\"nofollow\">mercurial_extension_utils</a> documentation for more details on\nWindows installation.</p>\n</div>\n</div>\n<div id=\"history\">\n<h2><a href=\"#id28\" rel=\"nofollow\">10\u00a0\u00a0\u00a0History</a></h2>\n<p>See <a href=\"http://bitbucket.org/Mekk/mercurial-update_version/src/tip/HISTORY.txt\" rel=\"nofollow\">HISTORY.txt</a></p>\n</div>\n<div id=\"development-bug-reports-enhancement-suggestions\">\n<h2><a href=\"#id29\" rel=\"nofollow\">11\u00a0\u00a0\u00a0Development, bug reports, enhancement suggestions</a></h2>\n<p>Development is tracked on BitBucket, see\n<a href=\"http://bitbucket.org/Mekk/mercurial-update_version/\" rel=\"nofollow\">http://bitbucket.org/Mekk/mercurial-update_version/</a></p>\n<p>Use BitBucket issue tracker for bug reports and enhancement\nsuggestions.</p>\n</div>\n<div id=\"additional-notes\">\n<h2><a href=\"#id30\" rel=\"nofollow\">12\u00a0\u00a0\u00a0Additional notes</a></h2>\n<p>Information about this extension is also available\non Mercurial Wiki: <a href=\"http://mercurial.selenic.com/wiki/UpdateVersionExtension\" rel=\"nofollow\">http://mercurial.selenic.com/wiki/UpdateVersionExtension</a></p>\n<p>Check also <a href=\"http://mekk.bitbucket.io/mercurial.html\" rel=\"nofollow\">other Mercurial extensions I wrote</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6191451, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "2782c8808d0e4b4e290ffc36493207bc", "sha256": "321c0b6fb62576097d8521ad94cc2ff2bc0f10fe3de51a7f698f2bd994ccfc1e"}, "downloads": -1, "filename": "mercurial_update_version-0.3.0.tar.gz", "has_sig": false, "md5_digest": "2782c8808d0e4b4e290ffc36493207bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10602, "upload_time": "2015-10-17T12:00:55", "upload_time_iso_8601": "2015-10-17T12:00:55.472818Z", "url": "https://files.pythonhosted.org/packages/b3/d0/2e8d709198d002862e988503be8004356598c88dc501211150aad3da0c7f/mercurial_update_version-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "4a06761034d216530508e9f5ab6cf9b7", "sha256": "a5bc5354e7030ce795714280c7f94554e040ff8d32959ec531d4996826e56627"}, "downloads": -1, "filename": "mercurial_update_version-0.3.1.tar.gz", "has_sig": false, "md5_digest": "4a06761034d216530508e9f5ab6cf9b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10602, "upload_time": "2015-10-17T12:03:28", "upload_time_iso_8601": "2015-10-17T12:03:28.050567Z", "url": "https://files.pythonhosted.org/packages/b1/58/9010711ab5914744c377f15eab06541b184a52e5174002e7e00925360484/mercurial_update_version-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "16ee156249f887c3ddfe07de2e5ed9da", "sha256": "39c0d643cce8661df354e68e2c38fb55135d5bd7029a5c0194666162116e0f90"}, "downloads": -1, "filename": "mercurial_update_version-0.3.2.tar.gz", "has_sig": false, "md5_digest": "16ee156249f887c3ddfe07de2e5ed9da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11121, "upload_time": "2015-10-17T20:17:28", "upload_time_iso_8601": "2015-10-17T20:17:28.042156Z", "url": "https://files.pythonhosted.org/packages/57/ac/75623180575c6375017673177d4409396f9d6c80f34efd45954d8c3af9dd/mercurial_update_version-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "bcd2916bca387d27fe564e8c9a966b1c", "sha256": "1bcc25bdcd6bf797be4d1abbdc537d3b65281461dc4e06178574b53c2e3f2e3b"}, "downloads": -1, "filename": "mercurial_update_version-0.3.3.tar.gz", "has_sig": false, "md5_digest": "bcd2916bca387d27fe564e8c9a966b1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12044, "upload_time": "2015-10-20T07:08:12", "upload_time_iso_8601": "2015-10-20T07:08:12.996376Z", "url": "https://files.pythonhosted.org/packages/2c/eb/65cc3b7afc7205ee7d0a43e1b6cd5cf5cf1118396f28a3fbdc9ed72c8e07/mercurial_update_version-0.3.3.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "4c1b6343be4f5b227ad3dc877ba13b15", "sha256": "a46fe423d8bb6d5244bea0849f750a5306594fce19a0052bf1f2eacb30217bfd"}, "downloads": -1, "filename": "mercurial_update_version-0.4.0.tar.gz", "has_sig": false, "md5_digest": "4c1b6343be4f5b227ad3dc877ba13b15", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5762, "upload_time": "2015-10-28T22:59:36", "upload_time_iso_8601": "2015-10-28T22:59:36.490548Z", "url": "https://files.pythonhosted.org/packages/90/14/8e66804cadf2704497f1be3ccbb72a5abce73254eb4bc07cf3574ad72f84/mercurial_update_version-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "16485414c111258fc6f4e5e11fd417e9", "sha256": "2b3e7deae7d6c6da1d2eee9279e7007372f073bcf70966ef72e982c0c8dd1911"}, "downloads": -1, "filename": "mercurial_update_version-0.4.1.tar.gz", "has_sig": false, "md5_digest": "16485414c111258fc6f4e5e11fd417e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12945, "upload_time": "2015-11-08T07:13:34", "upload_time_iso_8601": "2015-11-08T07:13:34.055981Z", "url": "https://files.pythonhosted.org/packages/b0/a8/c2c2898243c1106f26a64c20001a2fbb9e7784d12e0a9e002ff01dcf9336/mercurial_update_version-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "aa5d87e9e961df6c76f101b30e106672", "sha256": "69069a6546d45e4b6c55eb0f379ae71820a0b11be42c7c0bb37e7fc69054fede"}, "downloads": -1, "filename": "mercurial_update_version-0.4.2.tar.gz", "has_sig": false, "md5_digest": "aa5d87e9e961df6c76f101b30e106672", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13137, "upload_time": "2015-11-25T21:58:46", "upload_time_iso_8601": "2015-11-25T21:58:46.247371Z", "url": "https://files.pythonhosted.org/packages/5e/60/afb89fc6bde760d6306e14777eb47d4d1f8f4dbc9ca852838553170e7867/mercurial_update_version-0.4.2.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "731a9ef3e3dd022552fe6132adfe8f3f", "sha256": "20ca50f272c20967fe528c6f6c22e5a965978b97d30436a915b752bdb8354e99"}, "downloads": -1, "filename": "mercurial_update_version-0.5.0.tar.gz", "has_sig": false, "md5_digest": "731a9ef3e3dd022552fe6132adfe8f3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13751, "upload_time": "2015-11-28T21:42:37", "upload_time_iso_8601": "2015-11-28T21:42:37.426265Z", "url": "https://files.pythonhosted.org/packages/a6/56/340fd6e8cc7fa4afbb22df39936dfaa8efce9dbf7450e63886b7608deeb0/mercurial_update_version-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "429feb9ada3d72588d3fca8c8854dabb", "sha256": "d47eb91894b08e4ac5004859ef83cdcb912367f3a036107a01bcb9d89d508aa3"}, "downloads": -1, "filename": "mercurial_update_version-0.5.1.tar.gz", "has_sig": false, "md5_digest": "429feb9ada3d72588d3fca8c8854dabb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13897, "upload_time": "2015-12-03T19:27:27", "upload_time_iso_8601": "2015-12-03T19:27:27.901307Z", "url": "https://files.pythonhosted.org/packages/e0/94/6c5a57288294d73cf2a7760e9f1c2b08a92c56c6910a4b50aaaa86ef5bce/mercurial_update_version-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "72d304cc3e0cbe0310f57a10aa5ce79e", "sha256": "62568b0346a1a780aa35b07b9f16b93b11553a7cbd79b4a41f8d44ca7c15d5a5"}, "downloads": -1, "filename": "mercurial_update_version-0.5.2.tar.gz", "has_sig": false, "md5_digest": "72d304cc3e0cbe0310f57a10aa5ce79e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13765, "upload_time": "2015-12-05T20:17:49", "upload_time_iso_8601": "2015-12-05T20:17:49.729506Z", "url": "https://files.pythonhosted.org/packages/20/0e/a62ddbd6781601261ca08976760e1ff7dfcd5abfb5294fb08b4366f9d1e8/mercurial_update_version-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "6db11ac1754364a3a46fed5781c81657", "sha256": "3a6b51abd85fc29cfeed6c2ae022330d8751fa5c8dd95d6877d2b931cb9eb2d5"}, "downloads": -1, "filename": "mercurial_update_version-0.5.3.tar.gz", "has_sig": false, "md5_digest": "6db11ac1754364a3a46fed5781c81657", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13783, "upload_time": "2016-03-10T22:42:36", "upload_time_iso_8601": "2016-03-10T22:42:36.219014Z", "url": "https://files.pythonhosted.org/packages/28/0f/244ec85345d542fe70c12b1a47d2e80121ad2147d5a69ec62114058b387d/mercurial_update_version-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "4f117a22297a63a620679ceb1c2eea3f", "sha256": "35f8ba0f9b61e7f71620964348c2ede1335c6b4428ea0134f716917446d13f62"}, "downloads": -1, "filename": "mercurial_update_version-0.5.4.tar.gz", "has_sig": false, "md5_digest": "4f117a22297a63a620679ceb1c2eea3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14200, "upload_time": "2016-04-19T22:18:49", "upload_time_iso_8601": "2016-04-19T22:18:49.204842Z", "url": "https://files.pythonhosted.org/packages/7f/8c/eda0cab3b5d637fea626cb19d258d5a8969af0af5372cb0ea284f784fa1e/mercurial_update_version-0.5.4.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "7ba611c392234d61f07078de433905ea", "sha256": "92266cbcd29f2bea252175cd2ed46e177d230c3be768d7e402867a2a54bc64dc"}, "downloads": -1, "filename": "mercurial_update_version-0.6.0.tar.gz", "has_sig": false, "md5_digest": "7ba611c392234d61f07078de433905ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14970, "upload_time": "2016-04-30T10:14:25", "upload_time_iso_8601": "2016-04-30T10:14:25.082161Z", "url": "https://files.pythonhosted.org/packages/71/e2/38a9e683171dc6d37ee3aab0e5b7b22bf6ae57e9eb2ca5689f407ea7152d/mercurial_update_version-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "0a56fde9ea16606c1d8ce1de3bd226b6", "sha256": "5ef8d0a9266f06920c7c77bc330afa56bc0457afecbab03d3f3a874b46b93bfc"}, "downloads": -1, "filename": "mercurial_update_version-0.6.1.tar.gz", "has_sig": false, "md5_digest": "0a56fde9ea16606c1d8ce1de3bd226b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16373, "upload_time": "2016-05-05T16:28:29", "upload_time_iso_8601": "2016-05-05T16:28:29.296254Z", "url": "https://files.pythonhosted.org/packages/18/65/3550d5351d5c6236b2b1943c4d74a48a656ccafff7e80bd7f307aed45e1a/mercurial_update_version-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "1e9ff6201076bb0c17f18ff6331bc14d", "sha256": "6752b6c2b5fea31518e1bd5a0a5c28028b8020f28817f4d0a94053f4e95c78dc"}, "downloads": -1, "filename": "mercurial_update_version-0.6.2.tar.gz", "has_sig": false, "md5_digest": "1e9ff6201076bb0c17f18ff6331bc14d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14993, "upload_time": "2016-11-13T11:24:42", "upload_time_iso_8601": "2016-11-13T11:24:42.865436Z", "url": "https://files.pythonhosted.org/packages/ba/83/910531221429ad56de9551818ee35eac64c058c09f5646532d708f53b35d/mercurial_update_version-0.6.2.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "932fe684c349de218a960f4cee136029", "sha256": "795e92289ff939c445dcc9b80f534468d8b1cba30e3308135ccc4d915ede5be9"}, "downloads": -1, "filename": "mercurial_update_version-0.7.0.tar.gz", "has_sig": false, "md5_digest": "932fe684c349de218a960f4cee136029", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17562, "upload_time": "2017-01-08T23:13:25", "upload_time_iso_8601": "2017-01-08T23:13:25.581564Z", "url": "https://files.pythonhosted.org/packages/54/77/de16dcdbcfb67345d7cb8e850d8d5bde28723bb92dcc16ba29d9ba89ef58/mercurial_update_version-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "ef0a02071b9bb8f84aebb98a11bd94fe", "sha256": "de288db32b88fbf1e26f949e350b053bd4f16559a215c97216750075870874b3"}, "downloads": -1, "filename": "mercurial_update_version-0.7.1.tar.gz", "has_sig": false, "md5_digest": "ef0a02071b9bb8f84aebb98a11bd94fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19177, "upload_time": "2017-01-09T07:56:37", "upload_time_iso_8601": "2017-01-09T07:56:37.547925Z", "url": "https://files.pythonhosted.org/packages/dd/be/09f3c867e959e96666e5df1137fac46bb5a3c3b7695df15370e2cb8145f4/mercurial_update_version-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "3f1920e6d6dcde5f588627f78140be52", "sha256": "efde424344cd9db8fef9fad9042a41a406a39e33783635ce3fd207863a5f14f0"}, "downloads": -1, "filename": "mercurial_update_version-0.7.2.tar.gz", "has_sig": false, "md5_digest": "3f1920e6d6dcde5f588627f78140be52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18043, "upload_time": "2017-01-09T21:40:12", "upload_time_iso_8601": "2017-01-09T21:40:12.612510Z", "url": "https://files.pythonhosted.org/packages/97/16/80c764ae71a227489182f96e1996b215f92e5379d892fb870db20a00fb05/mercurial_update_version-0.7.2.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "af5a68736e1ffc8fef3399137467a334", "sha256": "93dccda2af6674a9a9947222f72a0b7a1556c0015d338752419c0958762023e5"}, "downloads": -1, "filename": "mercurial_update_version-0.7.3.tar.gz", "has_sig": false, "md5_digest": "af5a68736e1ffc8fef3399137467a334", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18256, "upload_time": "2017-01-09T21:49:30", "upload_time_iso_8601": "2017-01-09T21:49:30.668066Z", "url": "https://files.pythonhosted.org/packages/dd/7e/15d0d6cbf5502ac98437ba8125964189b2d4ba3e8b9b47e9432b1fb69a16/mercurial_update_version-0.7.3.tar.gz", "yanked": false}], "0.7.4": [{"comment_text": "", "digests": {"md5": "a2bd5f98cfc0d9586d02bf8cd1361dac", "sha256": "e76fb2f34c41c4ee4f9966dcfe8cac282d9186bd4d0573ba4faf866457237d20"}, "downloads": -1, "filename": "mercurial_update_version-0.7.4.tar.gz", "has_sig": false, "md5_digest": "a2bd5f98cfc0d9586d02bf8cd1361dac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19906, "upload_time": "2017-05-18T15:00:43", "upload_time_iso_8601": "2017-05-18T15:00:43.760672Z", "url": "https://files.pythonhosted.org/packages/55/80/25b758dd592b60122a721f0796a60f4ce97f23465a9c9a63968dfe65862f/mercurial_update_version-0.7.4.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "c19393b72e17148df000b6986492c40d", "sha256": "9ff531fa3f1189d20987dc7fa811b31aaf586af5b5522306d837c62f5cd049dc"}, "downloads": -1, "filename": "mercurial_update_version-0.8.0.tar.gz", "has_sig": false, "md5_digest": "c19393b72e17148df000b6986492c40d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20051, "upload_time": "2017-06-12T20:09:42", "upload_time_iso_8601": "2017-06-12T20:09:42.259437Z", "url": "https://files.pythonhosted.org/packages/16/9e/915b1867c61a1a88bc647a55663ec8af2cd1e3bbfbb02e650f2463752e75/mercurial_update_version-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "32a7dabdc7f466a501567bb661891a86", "sha256": "e8c90a81ab4513d7f8af778576d9dddfff3e365f77aef01e42c084a3c114bd4f"}, "downloads": -1, "filename": "mercurial_update_version-0.8.1.tar.gz", "has_sig": false, "md5_digest": "32a7dabdc7f466a501567bb661891a86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20056, "upload_time": "2018-05-25T23:15:51", "upload_time_iso_8601": "2018-05-25T23:15:51.394557Z", "url": "https://files.pythonhosted.org/packages/20/1d/cf5cf37b91fd798ad5792340755b3694158c0fabde7ab86c468a42c54b0f/mercurial_update_version-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "42e6d14652c55d3875caaec7fb260766", "sha256": "71aefbf5ea2d63e59e203ad241287d51bb041ae57cdd83600275c83ca8eaa646"}, "downloads": -1, "filename": "mercurial_update_version-0.8.2.tar.gz", "has_sig": false, "md5_digest": "42e6d14652c55d3875caaec7fb260766", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20061, "upload_time": "2018-05-26T00:02:44", "upload_time_iso_8601": "2018-05-26T00:02:44.694284Z", "url": "https://files.pythonhosted.org/packages/17/a3/2b4f32deca6f3a125286a70bb1e9052085afac2160a604fcc6f18bd55198/mercurial_update_version-0.8.2.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "6c17f2f54c47e84721529f6e06def14e", "sha256": "9b6f5cdec4464a99e7cb2b8fcb84fa230c27504df837cefef7f3ac82f5df78bc"}, "downloads": -1, "filename": "mercurial_update_version-0.8.3.tar.gz", "has_sig": false, "md5_digest": "6c17f2f54c47e84721529f6e06def14e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20125, "upload_time": "2018-08-03T21:35:47", "upload_time_iso_8601": "2018-08-03T21:35:47.626514Z", "url": "https://files.pythonhosted.org/packages/b2/7b/984ec698529d591feef010346c446d0b8b88f39ee3bdd02743c80221e2d4/mercurial_update_version-0.8.3.tar.gz", "yanked": false}], "0.8.4": [{"comment_text": "", "digests": {"md5": "1e988cc07ea14b569993a4a2df272ce7", "sha256": "726db7a4987bf9ceb8b9d2633440363a13690e834ce5d9f64e02eb12f00fb74a"}, "downloads": -1, "filename": "mercurial_update_version-0.8.4.tar.gz", "has_sig": false, "md5_digest": "1e988cc07ea14b569993a4a2df272ce7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20547, "upload_time": "2018-11-05T14:01:36", "upload_time_iso_8601": "2018-11-05T14:01:36.009407Z", "url": "https://files.pythonhosted.org/packages/ba/51/fc6ee9525de5d3fc2d4d0c96130cfe1ee8c32622eac7dec65e7218f1195a/mercurial_update_version-0.8.4.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "7cc0b6a3ef89259f9bdf6b7b78441285", "sha256": "5705ab4ea1ecbbbd227eee41477e3ba5925666bcfe1709cb47af6ea37ae18149"}, "downloads": -1, "filename": "mercurial_update_version-1.0.0.tar.gz", "has_sig": false, "md5_digest": "7cc0b6a3ef89259f9bdf6b7b78441285", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22893, "upload_time": "2019-04-23T12:33:32", "upload_time_iso_8601": "2019-04-23T12:33:32.827912Z", "url": "https://files.pythonhosted.org/packages/f5/4f/ac9ab6c5c9425900b2ec875f8ecad4305cf362cb3ad4920557ae6e622533/mercurial_update_version-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "6b5dc8030b3b6dbc492fb3ee9ff6d6fc", "sha256": "2a5f189f9023c0ff822c26082c2d8199947a8da9ad270655042e74a8adc66728"}, "downloads": -1, "filename": "mercurial_update_version-1.1.0.tar.gz", "has_sig": false, "md5_digest": "6b5dc8030b3b6dbc492fb3ee9ff6d6fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38320, "upload_time": "2019-11-24T23:15:28", "upload_time_iso_8601": "2019-11-24T23:15:28.340855Z", "url": "https://files.pythonhosted.org/packages/0c/3a/dfdc37db5f7fd156463d11b0c78ff2d1767b8e41112f774eb4926b924633/mercurial_update_version-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6b5dc8030b3b6dbc492fb3ee9ff6d6fc", "sha256": "2a5f189f9023c0ff822c26082c2d8199947a8da9ad270655042e74a8adc66728"}, "downloads": -1, "filename": "mercurial_update_version-1.1.0.tar.gz", "has_sig": false, "md5_digest": "6b5dc8030b3b6dbc492fb3ee9ff6d6fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38320, "upload_time": "2019-11-24T23:15:28", "upload_time_iso_8601": "2019-11-24T23:15:28.340855Z", "url": "https://files.pythonhosted.org/packages/0c/3a/dfdc37db5f7fd156463d11b0c78ff2d1767b8e41112f774eb4926b924633/mercurial_update_version-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:11 2020"}