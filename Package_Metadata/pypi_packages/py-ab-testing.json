{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Py AB Testing\n\nAB testing library supporting multi-variance testing with a deterministic algorithm not requiring any complex backend or database.\n\nThe segmentation logic is maintained in the AB testing client and based itself on a centralized configuration. The cohort assignment logic is deterministic and follows a simple hash pattern based on the `crc32c` algorithm (`crc32c(userId, crc32c(experimentName)) % 100`)\n\n# Installation\n\n```sh\npip install py-ab-testing\n# or\npipenv install py-ab-testing\n```\n\n# Usage\n\nNote: The `config` variable holds an `dict` with [configuration file format that documented here](../../README.md).\n\n```python\nfrom ABTesting import ABTestingController\n\nuser_profile = {\n    'persona': user.persona,\n    'employee': user.isEmployee,\n}\n\ncontroller = ABTestingController(config, user.id, user_profile)\ncohort = controller.get_cohort('experiment-name')\n\nif cohort == 'blue':\n    do_something()\nelif cohort == 'red':\n    do_something_else()\nelse:\n    do_default_behavior()\n```\n\n# Protecting Private Information\n\nSimilar to the Javascript SDKs, the package comes with an optional util for hashing private information with `sha256`.\n\n## Prepare config file BEFORE make it public\n\n```python\nfrom ABTesting.utils import hash_dict\n\nconfig['salt'] = salt\nfor experiment in config['experiments']:\n    for cohort in experiment['cohorts']:\n        cohort['force_include'] = hash_dict(cohort['force_include'], salt)\n```\n\n## In runtime\n\n```python\nfrom ABTesting.utils import hash_dict\n\nhashed_user_profile = hash_dict(\n    {\n        'persona': user.persona,\n        'employee': user.isEmployee,\n    },\n    salt\n)\n\n# Make sure config is hashed with the same salt\ncontroller = ABTestingController(config, user.id, hashed_user_profile)\n```\n\n# Credits\n\nMade with \u2764\ufe0f by [Zhang Tao](https://github.com/BananaWanted) and [Simon Boudrias](https://github.com/SBoudrias) from the App Annie Beijing office.\n\nAvailable for public use under the MIT license.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/appannie/ab-testing", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "py-ab-testing", "package_url": "https://pypi.org/project/py-ab-testing/", "platform": "", "project_url": "https://pypi.org/project/py-ab-testing/", "project_urls": {"Homepage": "https://github.com/appannie/ab-testing"}, "release_url": "https://pypi.org/project/py-ab-testing/1.1.1/", "requires_dist": ["crc32c (<=3.0,>=2.0)", "typing"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "summary": "", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Py AB Testing</h1>\n<p>AB testing library supporting multi-variance testing with a deterministic algorithm not requiring any complex backend or database.</p>\n<p>The segmentation logic is maintained in the AB testing client and based itself on a centralized configuration. The cohort assignment logic is deterministic and follows a simple hash pattern based on the <code>crc32c</code> algorithm (<code>crc32c(userId, crc32c(experimentName)) % 100</code>)</p>\n<h1>Installation</h1>\n<pre>pip install py-ab-testing\n<span class=\"c1\"># or</span>\npipenv install py-ab-testing\n</pre>\n<h1>Usage</h1>\n<p>Note: The <code>config</code> variable holds an <code>dict</code> with <a href=\"../../README.md\" rel=\"nofollow\">configuration file format that documented here</a>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ABTesting</span> <span class=\"kn\">import</span> <span class=\"n\">ABTestingController</span>\n\n<span class=\"n\">user_profile</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'persona'</span><span class=\"p\">:</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">persona</span><span class=\"p\">,</span>\n    <span class=\"s1\">'employee'</span><span class=\"p\">:</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">isEmployee</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">controller</span> <span class=\"o\">=</span> <span class=\"n\">ABTestingController</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">user_profile</span><span class=\"p\">)</span>\n<span class=\"n\">cohort</span> <span class=\"o\">=</span> <span class=\"n\">controller</span><span class=\"o\">.</span><span class=\"n\">get_cohort</span><span class=\"p\">(</span><span class=\"s1\">'experiment-name'</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"n\">cohort</span> <span class=\"o\">==</span> <span class=\"s1\">'blue'</span><span class=\"p\">:</span>\n    <span class=\"n\">do_something</span><span class=\"p\">()</span>\n<span class=\"k\">elif</span> <span class=\"n\">cohort</span> <span class=\"o\">==</span> <span class=\"s1\">'red'</span><span class=\"p\">:</span>\n    <span class=\"n\">do_something_else</span><span class=\"p\">()</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"n\">do_default_behavior</span><span class=\"p\">()</span>\n</pre>\n<h1>Protecting Private Information</h1>\n<p>Similar to the Javascript SDKs, the package comes with an optional util for hashing private information with <code>sha256</code>.</p>\n<h2>Prepare config file BEFORE make it public</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ABTesting.utils</span> <span class=\"kn\">import</span> <span class=\"n\">hash_dict</span>\n\n<span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'salt'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">salt</span>\n<span class=\"k\">for</span> <span class=\"n\">experiment</span> <span class=\"ow\">in</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'experiments'</span><span class=\"p\">]:</span>\n    <span class=\"k\">for</span> <span class=\"n\">cohort</span> <span class=\"ow\">in</span> <span class=\"n\">experiment</span><span class=\"p\">[</span><span class=\"s1\">'cohorts'</span><span class=\"p\">]:</span>\n        <span class=\"n\">cohort</span><span class=\"p\">[</span><span class=\"s1\">'force_include'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">hash_dict</span><span class=\"p\">(</span><span class=\"n\">cohort</span><span class=\"p\">[</span><span class=\"s1\">'force_include'</span><span class=\"p\">],</span> <span class=\"n\">salt</span><span class=\"p\">)</span>\n</pre>\n<h2>In runtime</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ABTesting.utils</span> <span class=\"kn\">import</span> <span class=\"n\">hash_dict</span>\n\n<span class=\"n\">hashed_user_profile</span> <span class=\"o\">=</span> <span class=\"n\">hash_dict</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'persona'</span><span class=\"p\">:</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">persona</span><span class=\"p\">,</span>\n        <span class=\"s1\">'employee'</span><span class=\"p\">:</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">isEmployee</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"n\">salt</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Make sure config is hashed with the same salt</span>\n<span class=\"n\">controller</span> <span class=\"o\">=</span> <span class=\"n\">ABTestingController</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">hashed_user_profile</span><span class=\"p\">)</span>\n</pre>\n<h1>Credits</h1>\n<p>Made with \u2764\ufe0f by <a href=\"https://github.com/BananaWanted\" rel=\"nofollow\">Zhang Tao</a> and <a href=\"https://github.com/SBoudrias\" rel=\"nofollow\">Simon Boudrias</a> from the App Annie Beijing office.</p>\n<p>Available for public use under the MIT license.</p>\n\n          </div>"}, "last_serial": 6832615, "releases": {"1.0.6": [{"comment_text": "", "digests": {"md5": "1dcbf88c2ba81c27be0eca1b97fef777", "sha256": "0a14035734610c7b757652f14cd2ef14c03c8bed414b21b7326952daa294b58e"}, "downloads": -1, "filename": "py_ab_testing-1.0.6-py2-none-any.whl", "has_sig": false, "md5_digest": "1dcbf88c2ba81c27be0eca1b97fef777", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 2622, "upload_time": "2020-03-06T10:56:44", "upload_time_iso_8601": "2020-03-06T10:56:44.527437Z", "url": "https://files.pythonhosted.org/packages/39/41/4ad52f31b4148207ca969edebc67aa6ded5734c06b3b44c61d0a2e19ee29/py_ab_testing-1.0.6-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "371bfb96431008ee4373e43e8d159101", "sha256": "88a0ebc2d6776f5cec741341d1e2ecdea34929bca0ccc4414844cc405dcb097d"}, "downloads": -1, "filename": "py_ab_testing-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "371bfb96431008ee4373e43e8d159101", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 2620, "upload_time": "2020-03-06T10:56:46", "upload_time_iso_8601": "2020-03-06T10:56:46.992130Z", "url": "https://files.pythonhosted.org/packages/a3/aa/31b5d8d5258533ee90b8da09ae5b5bde5d051b51437af3f2940b9f6c2d0c/py_ab_testing-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec1b210663ca6ae7a7e81aa49997785e", "sha256": "b2f099022ef9d7676f92cac1c4ff7c82f51e4084efacde5702331e9704e867e3"}, "downloads": -1, "filename": "py-ab-testing-1.0.6.tar.gz", "has_sig": false, "md5_digest": "ec1b210663ca6ae7a7e81aa49997785e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 2034, "upload_time": "2020-03-06T10:56:48", "upload_time_iso_8601": "2020-03-06T10:56:48.162599Z", "url": "https://files.pythonhosted.org/packages/e2/94/ddc75b9db166fb75acf3c78ae51b6ce2000c167883b81434cdf2ddda6655/py-ab-testing-1.0.6.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "c8547419a91a2b1c813fc2d225281d75", "sha256": "0434b38dd10baf5a52307d6c940ff41ed005e1692d4e6943c6b6046ec8e86134"}, "downloads": -1, "filename": "py_ab_testing-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c8547419a91a2b1c813fc2d225281d75", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 2747, "upload_time": "2020-03-11T09:26:06", "upload_time_iso_8601": "2020-03-11T09:26:06.223425Z", "url": "https://files.pythonhosted.org/packages/7d/6a/f6353465bf477297ed505956da4c5b11c274cdb5f189c906b08cdb3b01a6/py_ab_testing-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b519a10f91a55c342365336355dabc4", "sha256": "e14e1fbf2b5a2e4fcc6525cbbfe8ccef26911e575eb9201c6db5f88b4b8507d4"}, "downloads": -1, "filename": "py-ab-testing-1.1.0.tar.gz", "has_sig": false, "md5_digest": "8b519a10f91a55c342365336355dabc4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 2424, "upload_time": "2020-03-11T09:26:07", "upload_time_iso_8601": "2020-03-11T09:26:07.419822Z", "url": "https://files.pythonhosted.org/packages/ad/f3/d788fc80b65eda44b9679053bfab25e315b49933bd1ef757d91b1a0e81bd/py-ab-testing-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "65ff4dccbfca0bfc8c968de102cb6a71", "sha256": "19e4438aebef6e0fad700f5e288fe4aa7e3c9abc1f44bc19dc2512d55734f08c"}, "downloads": -1, "filename": "py_ab_testing-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "65ff4dccbfca0bfc8c968de102cb6a71", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 3619, "upload_time": "2020-03-18T00:59:20", "upload_time_iso_8601": "2020-03-18T00:59:20.326239Z", "url": "https://files.pythonhosted.org/packages/16/09/52e839bc1c7072c391640a8cfe683c4b2ebdb73b166ceda606cd08f915a7/py_ab_testing-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6eec1f3d23182bf521907ab0cf697e84", "sha256": "689d79ffce08d7121aee31a13557f07c5af46fb68d9230175df914fde338b1fc"}, "downloads": -1, "filename": "py-ab-testing-1.1.1.tar.gz", "has_sig": false, "md5_digest": "6eec1f3d23182bf521907ab0cf697e84", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 3488, "upload_time": "2020-03-18T00:59:21", "upload_time_iso_8601": "2020-03-18T00:59:21.282783Z", "url": "https://files.pythonhosted.org/packages/7b/e9/3caafa2f94ba783da060e9f4ec38e98f5d3958f88a84457618b3a920b149/py-ab-testing-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "65ff4dccbfca0bfc8c968de102cb6a71", "sha256": "19e4438aebef6e0fad700f5e288fe4aa7e3c9abc1f44bc19dc2512d55734f08c"}, "downloads": -1, "filename": "py_ab_testing-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "65ff4dccbfca0bfc8c968de102cb6a71", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 3619, "upload_time": "2020-03-18T00:59:20", "upload_time_iso_8601": "2020-03-18T00:59:20.326239Z", "url": "https://files.pythonhosted.org/packages/16/09/52e839bc1c7072c391640a8cfe683c4b2ebdb73b166ceda606cd08f915a7/py_ab_testing-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6eec1f3d23182bf521907ab0cf697e84", "sha256": "689d79ffce08d7121aee31a13557f07c5af46fb68d9230175df914fde338b1fc"}, "downloads": -1, "filename": "py-ab-testing-1.1.1.tar.gz", "has_sig": false, "md5_digest": "6eec1f3d23182bf521907ab0cf697e84", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 3488, "upload_time": "2020-03-18T00:59:21", "upload_time_iso_8601": "2020-03-18T00:59:21.282783Z", "url": "https://files.pythonhosted.org/packages/7b/e9/3caafa2f94ba783da060e9f4ec38e98f5d3958f88a84457618b3a920b149/py-ab-testing-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:05 2020"}