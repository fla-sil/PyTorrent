{"info": {"author": "Edwin H. Gibb and Travis J. Lawrence", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "# INTRODUCTION\n\nWe have developed The Algorithm for Simplified Metabolic ANalysIs by Altering Networks and Deducing flux Estimates for VIsuaLization (TASMANIAN DEVIL). There are four separate commands that comprise this software package: gene activity determination, genome-scale metabolic model importation and simplification to reduce network complexity, robust heuristic model building and metabolic flux prediction, and flux visualization from a reference network topology. All modules can be utilized independently or in conjunction with one another. TASMANIAN DEVIL has the potential to be adopted by a wide spectrum of researchers using Linux or macOSX platforms. More information for the individual modules can be found at https://tlawrence3.github.io/Tasmanian-Devil.\n\n# INSTALLATION\n\nWe use Gurobi as our mathematical programming solver. Because of this, TASMANIAN DEVIL requires Python 2.7 or Python 3.6. Currently, we only support and strongly recommend installing TASMANIAN DEVIL using Anaconda.\n\n* Install the current version of Gurobi\n\t* http://www.gurobi.com/downloads/gurobi-optimizer\n\n* Obtain a Gurobi license (free academic licenses are available)\n\t* http://www.gurobi.com/downloads/licenses/license-center\n\n* Install Anaconda with Python 2.7 or Python 3.6:\n\t* https://www.anaconda.com/download/\n\n* After installing Anaconda open a terminal window (we will be using the terminal for the remainder of the installation process) and run the following commands to set up additional channels:\n```bash\nconda config --add channels defaults\nconda config --add channels conda-forge\nconda config --add channels bioconda\nconda config --add channels http://conda.anaconda.org/gurobi\n```\n\n* Create and activate a new Anaconda environment. Note that you must activate your conda environment every time you want to use TASMANIAN DEVIL:\n```bash\nconda create -n tas python=3.6 scipy=0.19.1 gurobi glpk\nsource activate tas\n```\n\n* Activate your Gurobi installations using your license key (obtained through Gurobi's website) using the command below:\n```bash\ngrbketkey <your-license-key>\n```\n\n* Clone TASMANIAN DEVIL from GitHub and install using setup script:\n```bash\ngit clone https://github.com/tlawrence3/Tasmanian-Devil\ncd Tasmanian-Devil\npython setup.py install\n```\n\n# TUTORIAL\n\nEach module's help page contains documentation about usage. The following are test examples and general advice for using each module.\n\n**model module**:\n\nSimplest command for yeast metabolism:\n```bash\ntas model test_data/iMM904_NADcorrected_1127_MTHFDi.xml _e \\\n-s > test_iMM904_1.txt\n```\nAdjusting for lower boundaries, gene2rxn mappings, and 1st attempt at adding adaptations to test fixing the biomass reaction for yeast metabolism:\n```bash\ntas model test_data/iMM904_NADcorrected_1127_MTHFDi.xml _e \\\n-l test_data/YPD_lb.csv \\\n-g test_data/iMM904_NADcorrected_1127_MTHFDi_genes_genes2rxns.csv \\\n-a test_data/iMM904_NADcorrected_1127_MTHFDi_adaptations_V1.csv \\\n-d test_data/iMM904_NADcorrected_1127_MTHFDi_metabolite_dict.csv \\\n-s > test_iMM904_2.txt\n```\nAfter inspecting output for which reactions are unbalanced, try a 2nd adaptation to correct for these reactions. <br />\nAdjusting for lower boundaries, gene2rxn mapings, and 2nd attempt at adding adaptations to test fixing unbalanced reactions for yeast metabolism:\n```bash\ntas model test_data/iMM904_NADcorrected_1127_MTHFDi.xml _e \\\n-l test_data/YPD_lb.csv \\\n-g test_data/iMM904_NADcorrected_1127_MTHFDi_genes_genes2rxns.csv \\\n-a test_data/iMM904_NADcorrected_1127_MTHFDi_adaptations_V2.csv \\\n-d test_data/iMM904_NADcorrected_1127_MTHFDi_metabolite_dict.csv \\\n-s > test_iMM904_3.txt\n```\nAfter inspecting output for which reactions are unbalanced still after the adapations, force the model to be carbon balanced. The algorithm will identify any metabolites to be removed from the biomass reaction as needed.\n\nAdjusting for lower boundaries, gene2rxn mapings, adding adaptations to fix unbalanced reactions, accounting for nucleoside conversions and metabolite mapping complexes, removing metabolites without carbons, and remove inactive reactions and carbon balance the model for yeast metabolism:\n```bash\ntas model test_data/iMM904_NADcorrected_1127_MTHFDi.xml _e \\ \n-l test_data/YPD_lb.csv \\ \n-g test_data/iMM904_NADcorrected_1127_MTHFDi_genes_genes2rxns.csv \\ \n-a test_data/iMM904_NADcorrected_1127_MTHFDi_adaptations_V2.csv \\ \n-m test_data/150723_iMM904_NADcorrected_1127_MTHFDi_metabolite_mappings.csv \\ \n-n test_data/150723_iMM904_NADcorrected_1127_MTHFDi_nucleotide_conversions.csv \\ \n-d test_data/iMM904_NADcorrected_1127_MTHFDi_metabolite_dict.csv \\\n-s -z -r > test_iMM904_4.txt\n```\nSimplest command for human metabolism:\n```bash\ntas model test_data/Recon2_v04.xml _e -s > test_Recon2_1.txt\n```\nModel for human metabolism accounting for nucleoside conversions and metabolite mapping complexes, removing metabolites without carbons, and removing inactive reactions and carbon balancing the model:\n```bash\ntas model test_data/Recon2_v04.xml _e \\ \n-m test_data/150722_Recon2.v04_metabolite_mappings.csv \\ \n-n test_data/150721_Recon2.v04_nucleotide_conversions.csv \\ \n-d test_data/Recon2_metabolite_carbon_dict4.csv -s -z -r > test_Recon2_2.txt\n```\n**gene module**:\n\n```bash\ntas gene test_data/151012_Gasch_glucose.txt \\ \n-m test_data/lgmncmodiMM904_NADcorrected_1127_MTHFDi.mat \\ \n-o test_data/151012_glucose_0.25.csv -c\n```\n**flux module**:\n\nsimplest command:\n```bash\ntas flux test_data/lgmncmodiMM904_NADcorrected_1127_MTHFDi.mat \\ \ntest_data/151012_ethanol_0.25.csv _e 1 1 1 -c\n```\nFor multiple concurrent processes, repetitions of concurrent processes and repetitions with pruning reactions in a desired order by compartment:\n```bash\ntas flux test_data/lgmncmodiMM904_NADcorrected_1127_MTHFDi.mat \\ \ntest_data/151012_ethanol_0.25.csv _e 2 2 2 -c -b 0.2879 \\ \n-EXrxns test_data/EXrxns.csv \\ \n-EXtrrxns test_data/EXtrrxns.csv \\ \n-Othertrrxns test_data/Othertrrxns.csv\n```\n**visualization module**:\n\nVisualizing 1 condition\n```bash\ntas visualization test_data/lgmncmodiMM904_NADcorrected_1127_MTHFDi.mat \\ \ntest_data/151012_glucose_0.25.csv \\ \ntest_data/metabolicState_151012_glucose_0.25_lgmncmodiMM904_NADcorrected_1127_MTHFDi Glycolysis_PPP_Serine_Alanine_shortened \\ \n1 _e -c \\ \n-c1 test_data/RxnsClassifiedByExpression_151012_glucose_0.25_lgmncmodiMM904_NADcorrected_1127_MTHFDi.pkl \\\n-b1 test_data/freqBasedRxns_151012_glucose_0.25_lgmncmodiMM904_NADcorrected_1127_MTHFDi.pkl\n```\nComparing 2 conditions\n```bash\ntas visualization test_data/lgmncmodiMM904_NADcorrected_1127_MTHFDi.mat \\ \ntest_data/151012_glucose_0.25.csv \\ \ntest_data/metabolicState_151012_glucose_0.25_lgmncmodiMM904_NADcorrected_1127_MTHFDi Glycolysis_PPP_Serine_Alanine_shortened \\ \n1 _e -c \\\n-c1 test_data/RxnsClassifiedByExpression_151012_glucose_0.25_lgmncmodiMM904_NADcorrected_1127_MTHFDi.pkl \\\n-b1 test_data/freqBasedRxns_151012_glucose_0.25_lgmncmodiMM904_NADcorrected_1127_MTHFDi.pkl \\ \n-c2 test_data/RxnsClassifiedByExpression_151012_ethanol_0.25_lgmncmodiMM904_NADcorrected_1127_MTHFDi.pkl \\\n-b2 test_data/freqBasedRxns_151012_ethanol_0.25_lgmncmodiMM904_NADcorrected_1127_MTHFDi.pkl \\ \n-m2 test_data/lgmncmodiMM904_NADcorrected_1127_MTHFDi.mat \\ \n-g2 test_data/151012_ethanol_0.25.csv \\ \n-f2 test_data/metabolicState_151012_ethanol_0.25_lgmncmodiMM904_NADcorrected_1127_MTHFDi\n```\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://tlawrence3.github.io/Tasmanian-Devil", "keywords": "", "license": "LGPLv3", "maintainer": "", "maintainer_email": "", "name": "TASMANIAN-DEVIL", "package_url": "https://pypi.org/project/TASMANIAN-DEVIL/", "platform": "", "project_url": "https://pypi.org/project/TASMANIAN-DEVIL/", "project_urls": {"Homepage": "https://tlawrence3.github.io/Tasmanian-Devil"}, "release_url": "https://pypi.org/project/TASMANIAN-DEVIL/0.1.0/", "requires_dist": ["numpy", "scipy (<1.0)", "pandas", "pycrypto", "argparse", "cobra (==0.8.2)", "sympy", "python-libsbml"], "requires_python": "", "summary": "TASMANIAN DEVIL: a software package for classifying gene activity from omics data sets, simplifying metabolic networks, and visualizing the estimated phenotypic fluxes of nutrients", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # INTRODUCTION<br><br>We have developed The Algorithm for Simplified Metabolic ANalysIs by Altering Networks and Deducing flux Estimates for VIsuaLization (TASMANIAN DEVIL). There are four separate commands that comprise this software package: gene activity determination, genome-scale metabolic model importation and simplification to reduce network complexity, robust heuristic model building and metabolic flux prediction, and flux visualization from a reference network topology. All modules can be utilized independently or in conjunction with one another. TASMANIAN DEVIL has the potential to be adopted by a wide spectrum of researchers using Linux or macOSX platforms. More information for the individual modules can be found at https://tlawrence3.github.io/Tasmanian-Devil.<br><br># INSTALLATION<br><br>We use Gurobi as our mathematical programming solver. Because of this, TASMANIAN DEVIL requires Python 2.7 or Python 3.6. Currently, we only support and strongly recommend installing TASMANIAN DEVIL using Anaconda.<br><br>* Install the current version of Gurobi<br>\t* http://www.gurobi.com/downloads/gurobi-optimizer<br><br>* Obtain a Gurobi license (free academic licenses are available)<br>\t* http://www.gurobi.com/downloads/licenses/license-center<br><br>* Install Anaconda with Python 2.7 or Python 3.6:<br>\t* https://www.anaconda.com/download/<br><br>* After installing Anaconda open a terminal window (we will be using the terminal for the remainder of the installation process) and run the following commands to set up additional channels:<br>```bash<br>conda config --add channels defaults<br>conda config --add channels conda-forge<br>conda config --add channels bioconda<br>conda config --add channels http://conda.anaconda.org/gurobi<br>```<br><br>* Create and activate a new Anaconda environment. Note that you must activate your conda environment every time you want to use TASMANIAN DEVIL:<br>```bash<br>conda create -n tas python=3.6 scipy=0.19.1 gurobi glpk<br>source activate tas<br>```<br><br>* Activate your Gurobi installations using your license key (obtained through Gurobi's website) using the command below:<br>```bash<br>grbketkey &lt;your-license-key&gt;<br>```<br><br>* Clone TASMANIAN DEVIL from GitHub and install using setup script:<br>```bash<br>git clone https://github.com/tlawrence3/Tasmanian-Devil<br>cd Tasmanian-Devil<br>python setup.py install<br>```<br><br># TUTORIAL<br><br>Each module's help page contains documentation about usage. The following are test examples and general advice for using each module.<br><br>**model module**:<br><br>Simplest command for yeast metabolism:<br>```bash<br>tas model test_data/iMM904_NADcorrected_1127_MTHFDi.xml _e \\<br>-s &gt; test_iMM904_1.txt<br>```<br>Adjusting for lower boundaries, gene2rxn mappings, and 1st attempt at adding adaptations to test fixing the biomass reaction for yeast metabolism:<br>```bash<br>tas model test_data/iMM904_NADcorrected_1127_MTHFDi.xml _e \\<br>-l test_data/YPD_lb.csv \\<br>-g test_data/iMM904_NADcorrected_1127_MTHFDi_genes_genes2rxns.csv \\<br>-a test_data/iMM904_NADcorrected_1127_MTHFDi_adaptations_V1.csv \\<br>-d test_data/iMM904_NADcorrected_1127_MTHFDi_metabolite_dict.csv \\<br>-s &gt; test_iMM904_2.txt<br>```<br>After inspecting output for which reactions are unbalanced, try a 2nd adaptation to correct for these reactions. &lt;br /&gt;<br>Adjusting for lower boundaries, gene2rxn mapings, and 2nd attempt at adding adaptations to test fixing unbalanced reactions for yeast metabolism:<br>```bash<br>tas model test_data/iMM904_NADcorrected_1127_MTHFDi.xml _e \\<br>-l test_data/YPD_lb.csv \\<br>-g test_data/iMM904_NADcorrected_1127_MTHFDi_genes_genes2rxns.csv \\<br>-a test_data/iMM904_NADcorrected_1127_MTHFDi_adaptations_V2.csv \\<br>-d test_data/iMM904_NADcorrected_1127_MTHFDi_metabolite_dict.csv \\<br>-s &gt; test_iMM904_3.txt<br>```<br>After inspecting output for which reactions are unbalanced still after the adapations, force the model to be carbon balanced. The algorithm will identify any metabolites to be removed from the biomass reaction as needed.<br><br>Adjusting for lower boundaries, gene2rxn mapings, adding adaptations to fix unbalanced reactions, accounting for nucleoside conversions and metabolite mapping complexes, removing metabolites without carbons, and remove inactive reactions and carbon balance the model for yeast metabolism:<br>```bash<br>tas model test_data/iMM904_NADcorrected_1127_MTHFDi.xml _e \\ <br>-l test_data/YPD_lb.csv \\ <br>-g test_data/iMM904_NADcorrected_1127_MTHFDi_genes_genes2rxns.csv \\ <br>-a test_data/iMM904_NADcorrected_1127_MTHFDi_adaptations_V2.csv \\ <br>-m test_data/150723_iMM904_NADcorrected_1127_MTHFDi_metabolite_mappings.csv \\ <br>-n test_data/150723_iMM904_NADcorrected_1127_MTHFDi_nucleotide_conversions.csv \\ <br>-d test_data/iMM904_NADcorrected_1127_MTHFDi_metabolite_dict.csv \\<br>-s -z -r &gt; test_iMM904_4.txt<br>```<br>Simplest command for human metabolism:<br>```bash<br>tas model test_data/Recon2_v04.xml _e -s &gt; test_Recon2_1.txt<br>```<br>Model for human metabolism accounting for nucleoside conversions and metabolite mapping complexes, removing metabolites without carbons, and removing inactive reactions and carbon balancing the model:<br>```bash<br>tas model test_data/Recon2_v04.xml _e \\ <br>-m test_data/150722_Recon2.v04_metabolite_mappings.csv \\ <br>-n test_data/150721_Recon2.v04_nucleotide_conversions.csv \\ <br>-d test_data/Recon2_metabolite_carbon_dict4.csv -s -z -r &gt; test_Recon2_2.txt<br>```<br>**gene module**:<br><br>```bash<br>tas gene test_data/151012_Gasch_glucose.txt \\ <br>-m test_data/lgmncmodiMM904_NADcorrected_1127_MTHFDi.mat \\ <br>-o test_data/151012_glucose_0.25.csv -c<br>```<br>**flux module**:<br><br>simplest command:<br>```bash<br>tas flux test_data/lgmncmodiMM904_NADcorrected_1127_MTHFDi.mat \\ <br>test_data/151012_ethanol_0.25.csv _e 1 1 1 -c<br>```<br>For multiple concurrent processes, repetitions of concurrent processes and repetitions with pruning reactions in a desired order by compartment:<br>```bash<br>tas flux test_data/lgmncmodiMM904_NADcorrected_1127_MTHFDi.mat \\ <br>test_data/151012_ethanol_0.25.csv _e 2 2 2 -c -b 0.2879 \\ <br>-EXrxns test_data/EXrxns.csv \\ <br>-EXtrrxns test_data/EXtrrxns.csv \\ <br>-Othertrrxns test_data/Othertrrxns.csv<br>```<br>**visualization module**:<br><br>Visualizing 1 condition<br>```bash<br>tas visualization test_data/lgmncmodiMM904_NADcorrected_1127_MTHFDi.mat \\ <br>test_data/151012_glucose_0.25.csv \\ <br>test_data/metabolicState_151012_glucose_0.25_lgmncmodiMM904_NADcorrected_1127_MTHFDi Glycolysis_PPP_Serine_Alanine_shortened \\ <br>1 _e -c \\ <br>-c1 test_data/RxnsClassifiedByExpression_151012_glucose_0.25_lgmncmodiMM904_NADcorrected_1127_MTHFDi.pkl \\<br>-b1 test_data/freqBasedRxns_151012_glucose_0.25_lgmncmodiMM904_NADcorrected_1127_MTHFDi.pkl<br>```<br>Comparing 2 conditions<br>```bash<br>tas visualization test_data/lgmncmodiMM904_NADcorrected_1127_MTHFDi.mat \\ <br>test_data/151012_glucose_0.25.csv \\ <br>test_data/metabolicState_151012_glucose_0.25_lgmncmodiMM904_NADcorrected_1127_MTHFDi Glycolysis_PPP_Serine_Alanine_shortened \\ <br>1 _e -c \\<br>-c1 test_data/RxnsClassifiedByExpression_151012_glucose_0.25_lgmncmodiMM904_NADcorrected_1127_MTHFDi.pkl \\<br>-b1 test_data/freqBasedRxns_151012_glucose_0.25_lgmncmodiMM904_NADcorrected_1127_MTHFDi.pkl \\ <br>-c2 test_data/RxnsClassifiedByExpression_151012_ethanol_0.25_lgmncmodiMM904_NADcorrected_1127_MTHFDi.pkl \\<br>-b2 test_data/freqBasedRxns_151012_ethanol_0.25_lgmncmodiMM904_NADcorrected_1127_MTHFDi.pkl \\ <br>-m2 test_data/lgmncmodiMM904_NADcorrected_1127_MTHFDi.mat \\ <br>-g2 test_data/151012_ethanol_0.25.csv \\ <br>-f2 test_data/metabolicState_151012_ethanol_0.25_lgmncmodiMM904_NADcorrected_1127_MTHFDi<br>```<br><br><br>\n          </div>"}, "last_serial": 3822517, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "c01b8e4ffe4893f728355fc8b25497d8", "sha256": "c78ff30fc815063e2aa635a074036877890e26e0f5896b8ce2eb1ca1730985cf"}, "downloads": -1, "filename": "TASMANIAN_DEVIL-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c01b8e4ffe4893f728355fc8b25497d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38199, "upload_time": "2018-04-30T23:53:48", "upload_time_iso_8601": "2018-04-30T23:53:48.182040Z", "url": "https://files.pythonhosted.org/packages/74/a5/1448deaf1f315c8fecfa9c8cc619217899974e5fd06095fc3ae37cdf86f9/TASMANIAN_DEVIL-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2196a5081fe56e8b589d6ed63e2c40b", "sha256": "938032d2376054f6b8995344d09e4916de557dc68b79b28a2d14bedd3994534a"}, "downloads": -1, "filename": "TASMANIAN_DEVIL-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a2196a5081fe56e8b589d6ed63e2c40b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33118, "upload_time": "2018-04-30T23:53:49", "upload_time_iso_8601": "2018-04-30T23:53:49.536043Z", "url": "https://files.pythonhosted.org/packages/b0/f3/4bfad3fa9500fd185f6c23b69287ebda46726cb6214c85616c0ab6f79cb8/TASMANIAN_DEVIL-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c01b8e4ffe4893f728355fc8b25497d8", "sha256": "c78ff30fc815063e2aa635a074036877890e26e0f5896b8ce2eb1ca1730985cf"}, "downloads": -1, "filename": "TASMANIAN_DEVIL-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c01b8e4ffe4893f728355fc8b25497d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38199, "upload_time": "2018-04-30T23:53:48", "upload_time_iso_8601": "2018-04-30T23:53:48.182040Z", "url": "https://files.pythonhosted.org/packages/74/a5/1448deaf1f315c8fecfa9c8cc619217899974e5fd06095fc3ae37cdf86f9/TASMANIAN_DEVIL-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2196a5081fe56e8b589d6ed63e2c40b", "sha256": "938032d2376054f6b8995344d09e4916de557dc68b79b28a2d14bedd3994534a"}, "downloads": -1, "filename": "TASMANIAN_DEVIL-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a2196a5081fe56e8b589d6ed63e2c40b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33118, "upload_time": "2018-04-30T23:53:49", "upload_time_iso_8601": "2018-04-30T23:53:49.536043Z", "url": "https://files.pythonhosted.org/packages/b0/f3/4bfad3fa9500fd185f6c23b69287ebda46726cb6214c85616c0ab6f79cb8/TASMANIAN_DEVIL-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:42 2020"}