{"info": {"author": "Mike Nacey", "author_email": "nobody@teletracking.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "[![Build Status](https://travis-ci.com/TeleTrackingTechnologies/jwt_authenticator.svg?branch=master)](https://travis-ci.com/TeleTrackingTechnologies/jwt_authenticator)\n# jwt_authenticator\n\njwt_authenticator is a simply python library for adding JWT token authentication/authorization in flask web sites/services. It controls access either by checking for just a validated token, or optionally, a single role claim from the token. Access is controlled by decorating the endpoint functions with an attribute.\n\n## Installation\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install jwt_authenticator.\n\n```bash\npip install jwt_authenticator\n```\n\n## Usage\nIn the main application initialization area\n\n```python\nfrom Flask import Flask\nfrom jwt_authenticator import AuthenticationHandler\n\nAPP = Flask(__name__)\nAuthenticationHandler.load_configuration()\n```\nIn the endpoints\n\n```python\nfrom jwt_authenticator import AuthenticationHandler, AuthError\n\n@api.route('/<name>', methods=['GET'])\n@AuthenticationHandler.requires_auth(\"admin\")\ndef get_one(name):\n    return f\"Hello {name}\"\n\n@api.route('/<name>', methods=['GET'])\n@AuthenticationHandler.requires_auth()\ndef get_one(name):\n    return f\"Hello {name}\"\n```\n\n## Configuration\njwt_authenticator requires two configuration values to work. These can be specified either in the normal Flask application configuration or as environment variables. Environment variable values will override application configuration values, when\n\n```python\nAuthenticationHanlder.load_configuration()\n```\nis called.\n\n### APP.config (i.e. flask application configuration)\n\n* SECRET - the key used to sign the JWT token\n* AUDIENCE - the audience claim used in the JWT token\n\n### Environment Variables\n\n* JWT_SECRET - will override SECRET\n* JWT_AUDIENCE - will override AUDIENCE\n\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nPlease make sure to update tests as appropriate.\n\n## Building\n* Requires 'make'\n\n```bash\nmake init\nmake test\nmake package\n```\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/TeleTrackingTechnologies/jwt_authenticator", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "jwt-authenticator", "package_url": "https://pypi.org/project/jwt-authenticator/", "platform": "", "project_url": "https://pypi.org/project/jwt-authenticator/", "project_urls": {"Homepage": "https://github.com/TeleTrackingTechnologies/jwt_authenticator"}, "release_url": "https://pypi.org/project/jwt-authenticator/1.0.0/", "requires_dist": ["Flask", "python-jose"], "requires_python": "", "summary": "Simple JWT token flask service security library.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.com/TeleTrackingTechnologies/jwt_authenticator\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/60e9e6c97923081ce8fc74f6727df872dc6f1a97/68747470733a2f2f7472617669732d63692e636f6d2f54656c65547261636b696e67546563686e6f6c6f676965732f6a77745f61757468656e74696361746f722e7376673f6272616e63683d6d6173746572\"></a></p>\n<h1>jwt_authenticator</h1>\n<p>jwt_authenticator is a simply python library for adding JWT token authentication/authorization in flask web sites/services. It controls access either by checking for just a validated token, or optionally, a single role claim from the token. Access is controlled by decorating the endpoint functions with an attribute.</p>\n<h2>Installation</h2>\n<p>Use the package manager <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a> to install jwt_authenticator.</p>\n<pre>pip install jwt_authenticator\n</pre>\n<h2>Usage</h2>\n<p>In the main application initialization area</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">Flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">jwt_authenticator</span> <span class=\"kn\">import</span> <span class=\"n\">AuthenticationHandler</span>\n\n<span class=\"n\">APP</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">AuthenticationHandler</span><span class=\"o\">.</span><span class=\"n\">load_configuration</span><span class=\"p\">()</span>\n</pre>\n<p>In the endpoints</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">jwt_authenticator</span> <span class=\"kn\">import</span> <span class=\"n\">AuthenticationHandler</span><span class=\"p\">,</span> <span class=\"n\">AuthError</span>\n\n<span class=\"nd\">@api</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/&lt;name&gt;'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'GET'</span><span class=\"p\">])</span>\n<span class=\"nd\">@AuthenticationHandler</span><span class=\"o\">.</span><span class=\"n\">requires_auth</span><span class=\"p\">(</span><span class=\"s2\">\"admin\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_one</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">\"Hello </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n\n<span class=\"nd\">@api</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/&lt;name&gt;'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'GET'</span><span class=\"p\">])</span>\n<span class=\"nd\">@AuthenticationHandler</span><span class=\"o\">.</span><span class=\"n\">requires_auth</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_one</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">\"Hello </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n</pre>\n<h2>Configuration</h2>\n<p>jwt_authenticator requires two configuration values to work. These can be specified either in the normal Flask application configuration or as environment variables. Environment variable values will override application configuration values, when</p>\n<pre><span class=\"n\">AuthenticationHanlder</span><span class=\"o\">.</span><span class=\"n\">load_configuration</span><span class=\"p\">()</span>\n</pre>\n<p>is called.</p>\n<h3>APP.config (i.e. flask application configuration)</h3>\n<ul>\n<li>SECRET - the key used to sign the JWT token</li>\n<li>AUDIENCE - the audience claim used in the JWT token</li>\n</ul>\n<h3>Environment Variables</h3>\n<ul>\n<li>JWT_SECRET - will override SECRET</li>\n<li>JWT_AUDIENCE - will override AUDIENCE</li>\n</ul>\n<h2>Contributing</h2>\n<p>Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.</p>\n<p>Please make sure to update tests as appropriate.</p>\n<h2>Building</h2>\n<ul>\n<li>Requires 'make'</li>\n</ul>\n<pre>make init\nmake <span class=\"nb\">test</span>\nmake package\n</pre>\n<h2>License</h2>\n<p><a href=\"https://choosealicense.com/licenses/mit/\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 4741803, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "dc7e64daff6ad884b72451fd413a40ee", "sha256": "a9d396c22fc6d5e0d1488f46edda8c4cb788aea188b50f9f2ec86b31762f2011"}, "downloads": -1, "filename": "jwt_authenticator-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "dc7e64daff6ad884b72451fd413a40ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4663, "upload_time": "2019-01-25T21:15:27", "upload_time_iso_8601": "2019-01-25T21:15:27.999771Z", "url": "https://files.pythonhosted.org/packages/ee/4a/be93b8f343951ac082dc146d0af945a43ab118dad3c44451d30dacf8f238/jwt_authenticator-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e0260fb8aafd0ecc38dcc3725b2455a", "sha256": "b882c19105bf5d50450953a6770a88b69c215cf628eae3bc548412fcc68bfc58"}, "downloads": -1, "filename": "jwt_authenticator-1.0.0.tar.gz", "has_sig": false, "md5_digest": "1e0260fb8aafd0ecc38dcc3725b2455a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3306, "upload_time": "2019-01-25T21:15:30", "upload_time_iso_8601": "2019-01-25T21:15:30.363582Z", "url": "https://files.pythonhosted.org/packages/ce/51/3f608946894e28502dde81f620c94fa44d4fdc4b5f200905c6219a10b3e2/jwt_authenticator-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dc7e64daff6ad884b72451fd413a40ee", "sha256": "a9d396c22fc6d5e0d1488f46edda8c4cb788aea188b50f9f2ec86b31762f2011"}, "downloads": -1, "filename": "jwt_authenticator-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "dc7e64daff6ad884b72451fd413a40ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4663, "upload_time": "2019-01-25T21:15:27", "upload_time_iso_8601": "2019-01-25T21:15:27.999771Z", "url": "https://files.pythonhosted.org/packages/ee/4a/be93b8f343951ac082dc146d0af945a43ab118dad3c44451d30dacf8f238/jwt_authenticator-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e0260fb8aafd0ecc38dcc3725b2455a", "sha256": "b882c19105bf5d50450953a6770a88b69c215cf628eae3bc548412fcc68bfc58"}, "downloads": -1, "filename": "jwt_authenticator-1.0.0.tar.gz", "has_sig": false, "md5_digest": "1e0260fb8aafd0ecc38dcc3725b2455a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3306, "upload_time": "2019-01-25T21:15:30", "upload_time_iso_8601": "2019-01-25T21:15:30.363582Z", "url": "https://files.pythonhosted.org/packages/ce/51/3f608946894e28502dde81f620c94fa44d4fdc4b5f200905c6219a10b3e2/jwt_authenticator-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:59 2020"}