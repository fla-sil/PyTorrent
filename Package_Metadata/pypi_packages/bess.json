{"info": {"author": "Kangkang Jiang, Jin Zhu, Yanhang Zhang, Shiyun Lin, Shijie Quan, Xueqin Wang", "author_email": "jiangkk3@mail2.sysu.edu.cn", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# bess: An python Package for Best Subset Selection\n\n\n## Introduction\n\nOne of the main tasks of statistical modeling is to exploit the association between\na response variable and multiple predictors. Linear model (LM), as a simple parametric\nregression model, is often used to capture linear dependence between response and\npredictors. Generalized linear model (GLM) can be considered as\nthe extensions of linear model, depending on the types of responses. Parameter estimation in these models\ncan be computationally intensive when the number of predictors is large. Meanwhile,\nOccam's razor is widely accepted as a heuristic rule for statistical modeling,\nwhich balances goodness of fit and model complexity. This rule leads to a relative \nsmall subset of important predictors. \n\n**bess** package provides solutions for best subset selection problem for sparse LM,\nand GLM models.\n\nWe consider a primal-dual active set (PDAS) approach to exactly solve the best subset\nselection problem for sparse LM and GLM models. The PDAS algorithm for linear \nleast squares problems was first introduced by [Ito and Kunisch (2013)](https://iopscience.iop.org/article/10.1088/0266-5611/30/1/015001)\nand later discussed by [Jiao, Jin, and Lu (2015)](https://arxiv.org/abs/1403.0515) and [Huang, Jiao, Liu, and Lu (2017)](https://arxiv.org/abs/1701.05128). \nIt utilizes an active set updating strategy and fits the sub-models through use of\ncomplementary primal and dual variables. We generalize the PDAS algorithm for \ngeneral convex loss functions with the best subset constraint, and further \nextend it to support both sequential and golden section search strategies\nfor optimal k determination. \n\n\n## Install\n\nPython Version\n- python >= 3.5\n\nModules needed\n- numpy \n\nThe package has been publish in PyPI. You can easy install by:\n```sh\n$ pip install bess\n```\n\n## Example\n```python\n### PdasLm sample\nfrom bess.linear import *\nimport numpy as np\n\nnp.random.seed(12345)   # fix seed to get the same result\nx = np.random.normal(0, 1, 100 * 150).reshape((100, 150))\nbeta = np.hstack((np.array([1, 1, -1, -1, -1]), np.zeros(145)))\nnoise = np.random.normal(0, 1, 100)\ny = np.matmul(x, beta) + noise\n\n### Sparsity known\nmodel = PdasLm(path_type=\"seq\", sequence=[5])\nmodel.fit(X=x, y=y)\nmodel.predict(x)\n\n### Sparsity unknown\n# path_type=\"seq\", Default:sequence=[1,2,...,min(x.shape[0], x.shape[1])]\nmodel = PdasLm(path_type=\"seq\", sequence=range(1,10))\nmodel.fit(X=x, y=y)\nmodel.predict(x)\n\n# path_type=\"pgs\", Default:s_min=1, s_max=X.shape[1], K_max = int(math.log(p, 2/(math.sqrt(5) - 1)))\nmodel = PdasLm(path_type=\"pgs\", s_max=20)\nmodel.fit(X=x, y=y)\nmodel.predict(x)\n\n\n### PdasLogistic sample\nnp.random.seed(12345)\nx = np.random.normal(0, 1, 100 * 150).reshape((100, 150))\nbeta = np.hstack((np.array([1, 1, -1, -1, -1]), np.zeros(145)))\nxbeta = np.matmul(x, beta)\np = np.exp(xbeta)/(1+np.exp(xbeta))\ny = np.random.binomial(1, p)\n\n### Sparsity known\nmodel = PdasLogistic(path_type=\"seq\", sequence=[5])\nmodel.fit(X=x, y=y)\nmodel.predict(x)\n\n### Sparsity unknown\n# path_type=\"seq\", Default:sequence=[1,2,...,min(x.shape[0], x.shape[1])]\nmodel = PdasLogistic(path_type=\"seq\", sequence=range(1,10))\nmodel.fit(X=x, y=y)\nmodel.predict(x)\n\n# path_type=\"pgs\", Default:s_min=1, s_max=X.shape[1], K_max = int(math.log(p, 2/(math.sqrt(5) - 1)))\nmodel = PdasLogistic(path_type=\"pgs\")\nmodel.fit(X=x, y=y)\nmodel.predict(x)\n\n\n### PdasPoisson sample\nnp.random.seed(12345)\nx = np.random.normal(0, 1, 100 * 150).reshape((100, 150))\nbeta = np.hstack((np.array([1, 1, -1, -1, -1]), np.zeros(145)))\nlam = np.exp(np.matmul(x, beta))\ny = np.random.poisson(lam=lam)\n\n### Sparsity known\nmodel = PdasPoisson(path_type=\"seq\", sequence=[5])\nmodel.fit(X=x, y=y)\nmodel.predict(x)\n\n### Sparsity unknown\n# path_type=\"seq\", Default:sequence=[1,2,...,min(x.shape[0], x.shape[1])]\nmodel = PdasPoisson(path_type=\"seq\", sequence=range(1,10))\nmodel.fit(X=x, y=y)\nmodel.predict(x)\n\n# path_type=\"pgs\", Default:s_min=1, s_max=X.shape[1], K_max = int(math.log(p, 2/(math.sqrt(5) - 1)))\nmodel = PdasPoisson(path_type=\"pgs\")\nmodel.fit(X=x, y=y)\nmodel.predict(x)\n\n\n### PdasCox sample\nfrom bess.gen_data import gen_data\nnp.random.seed(12345)\ndata = gen_data(100, 200, family=\"cox\", k=5, rho=0, sigma=1, c=10)\n\n### Sparsity known\nmodel = PdasCox(path_type=\"seq\", sequence=[5])\nmodel.fit(data.x, data.y, is_normal=True)\nmodel.predict(data.x)\n\n### Sparsity unknown\n# path_type=\"seq\", Default:sequence=[1,2,...,min(x.shape[0], x.shape[1])]\nmodel = PdasCox(path_type=\"seq\", sequence=range(1,10))\nmodel.fit(data.x, data.y)\nmodel.predict(data.x)\n\n# path_type=\"pgs\", Default:s_min=1, s_max=X.shape[1], K_max = int(math.log(p, 2/(math.sqrt(5) - 1)))\nmodel = PdasCox(path_type=\"pgs\")\nmodel.fit(data.x, data.y)\nmodel.predict(data.x)\n\n```\n\n## Reference\n\n- Wen, C. , Zhang, A. , Quan, S. , & Wang, X. . (2017). [Bess: an r package for best subset selection in linear, logistic and coxph models](https://arxiv.org/pdf/1709.06254.pdf)\n\n\n## Bug report\n\nConnect to [@Jiang-Kangkang](https://github.com/Jiang-Kangkang), or send an email to Jiang Kangkang(jiangkk3@mail2.sysu.edu.cn)\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Mamba413/bess", "keywords": "", "license": "GPL-3", "maintainer": "Kangkang Jiang", "maintainer_email": "jiangkk3@mail2.sysu.edu.cn", "name": "bess", "package_url": "https://pypi.org/project/bess/", "platform": "", "project_url": "https://pypi.org/project/bess/", "project_urls": {"Homepage": "https://github.com/Mamba413/bess"}, "release_url": "https://pypi.org/project/bess/0.0.10/", "requires_dist": ["numpy"], "requires_python": ">=3.5", "summary": "bess Python Package", "version": "0.0.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>bess: An python Package for Best Subset Selection</h1>\n<h2>Introduction</h2>\n<p>One of the main tasks of statistical modeling is to exploit the association between\na response variable and multiple predictors. Linear model (LM), as a simple parametric\nregression model, is often used to capture linear dependence between response and\npredictors. Generalized linear model (GLM) can be considered as\nthe extensions of linear model, depending on the types of responses. Parameter estimation in these models\ncan be computationally intensive when the number of predictors is large. Meanwhile,\nOccam's razor is widely accepted as a heuristic rule for statistical modeling,\nwhich balances goodness of fit and model complexity. This rule leads to a relative\nsmall subset of important predictors.</p>\n<p><strong>bess</strong> package provides solutions for best subset selection problem for sparse LM,\nand GLM models.</p>\n<p>We consider a primal-dual active set (PDAS) approach to exactly solve the best subset\nselection problem for sparse LM and GLM models. The PDAS algorithm for linear\nleast squares problems was first introduced by <a href=\"https://iopscience.iop.org/article/10.1088/0266-5611/30/1/015001\" rel=\"nofollow\">Ito and Kunisch (2013)</a>\nand later discussed by <a href=\"https://arxiv.org/abs/1403.0515\" rel=\"nofollow\">Jiao, Jin, and Lu (2015)</a> and <a href=\"https://arxiv.org/abs/1701.05128\" rel=\"nofollow\">Huang, Jiao, Liu, and Lu (2017)</a>.\nIt utilizes an active set updating strategy and fits the sub-models through use of\ncomplementary primal and dual variables. We generalize the PDAS algorithm for\ngeneral convex loss functions with the best subset constraint, and further\nextend it to support both sequential and golden section search strategies\nfor optimal k determination.</p>\n<h2>Install</h2>\n<p>Python Version</p>\n<ul>\n<li>python &gt;= 3.5</li>\n</ul>\n<p>Modules needed</p>\n<ul>\n<li>numpy</li>\n</ul>\n<p>The package has been publish in PyPI. You can easy install by:</p>\n<pre>$ pip install bess\n</pre>\n<h2>Example</h2>\n<pre><span class=\"c1\">### PdasLm sample</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bess.linear</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">seed</span><span class=\"p\">(</span><span class=\"mi\">12345</span><span class=\"p\">)</span>   <span class=\"c1\"># fix seed to get the same result</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">100</span> <span class=\"o\">*</span> <span class=\"mi\">150</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">150</span><span class=\"p\">))</span>\n<span class=\"n\">beta</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">hstack</span><span class=\"p\">((</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"mi\">145</span><span class=\"p\">)))</span>\n<span class=\"n\">noise</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">matmul</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">beta</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">noise</span>\n\n<span class=\"c1\">### Sparsity known</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">PdasLm</span><span class=\"p\">(</span><span class=\"n\">path_type</span><span class=\"o\">=</span><span class=\"s2\">\"seq\"</span><span class=\"p\">,</span> <span class=\"n\">sequence</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">])</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n<span class=\"c1\">### Sparsity unknown</span>\n<span class=\"c1\"># path_type=\"seq\", Default:sequence=[1,2,...,min(x.shape[0], x.shape[1])]</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">PdasLm</span><span class=\"p\">(</span><span class=\"n\">path_type</span><span class=\"o\">=</span><span class=\"s2\">\"seq\"</span><span class=\"p\">,</span> <span class=\"n\">sequence</span><span class=\"o\">=</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">))</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># path_type=\"pgs\", Default:s_min=1, s_max=X.shape[1], K_max = int(math.log(p, 2/(math.sqrt(5) - 1)))</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">PdasLm</span><span class=\"p\">(</span><span class=\"n\">path_type</span><span class=\"o\">=</span><span class=\"s2\">\"pgs\"</span><span class=\"p\">,</span> <span class=\"n\">s_max</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\">### PdasLogistic sample</span>\n<span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">seed</span><span class=\"p\">(</span><span class=\"mi\">12345</span><span class=\"p\">)</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">100</span> <span class=\"o\">*</span> <span class=\"mi\">150</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">150</span><span class=\"p\">))</span>\n<span class=\"n\">beta</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">hstack</span><span class=\"p\">((</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"mi\">145</span><span class=\"p\">)))</span>\n<span class=\"n\">xbeta</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">matmul</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">beta</span><span class=\"p\">)</span>\n<span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"n\">xbeta</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">+</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"n\">xbeta</span><span class=\"p\">))</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">binomial</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"p\">)</span>\n\n<span class=\"c1\">### Sparsity known</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">PdasLogistic</span><span class=\"p\">(</span><span class=\"n\">path_type</span><span class=\"o\">=</span><span class=\"s2\">\"seq\"</span><span class=\"p\">,</span> <span class=\"n\">sequence</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">])</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n<span class=\"c1\">### Sparsity unknown</span>\n<span class=\"c1\"># path_type=\"seq\", Default:sequence=[1,2,...,min(x.shape[0], x.shape[1])]</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">PdasLogistic</span><span class=\"p\">(</span><span class=\"n\">path_type</span><span class=\"o\">=</span><span class=\"s2\">\"seq\"</span><span class=\"p\">,</span> <span class=\"n\">sequence</span><span class=\"o\">=</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">))</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># path_type=\"pgs\", Default:s_min=1, s_max=X.shape[1], K_max = int(math.log(p, 2/(math.sqrt(5) - 1)))</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">PdasLogistic</span><span class=\"p\">(</span><span class=\"n\">path_type</span><span class=\"o\">=</span><span class=\"s2\">\"pgs\"</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\">### PdasPoisson sample</span>\n<span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">seed</span><span class=\"p\">(</span><span class=\"mi\">12345</span><span class=\"p\">)</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">100</span> <span class=\"o\">*</span> <span class=\"mi\">150</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">150</span><span class=\"p\">))</span>\n<span class=\"n\">beta</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">hstack</span><span class=\"p\">((</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"mi\">145</span><span class=\"p\">)))</span>\n<span class=\"n\">lam</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">matmul</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">beta</span><span class=\"p\">))</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">poisson</span><span class=\"p\">(</span><span class=\"n\">lam</span><span class=\"o\">=</span><span class=\"n\">lam</span><span class=\"p\">)</span>\n\n<span class=\"c1\">### Sparsity known</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">PdasPoisson</span><span class=\"p\">(</span><span class=\"n\">path_type</span><span class=\"o\">=</span><span class=\"s2\">\"seq\"</span><span class=\"p\">,</span> <span class=\"n\">sequence</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">])</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n<span class=\"c1\">### Sparsity unknown</span>\n<span class=\"c1\"># path_type=\"seq\", Default:sequence=[1,2,...,min(x.shape[0], x.shape[1])]</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">PdasPoisson</span><span class=\"p\">(</span><span class=\"n\">path_type</span><span class=\"o\">=</span><span class=\"s2\">\"seq\"</span><span class=\"p\">,</span> <span class=\"n\">sequence</span><span class=\"o\">=</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">))</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># path_type=\"pgs\", Default:s_min=1, s_max=X.shape[1], K_max = int(math.log(p, 2/(math.sqrt(5) - 1)))</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">PdasPoisson</span><span class=\"p\">(</span><span class=\"n\">path_type</span><span class=\"o\">=</span><span class=\"s2\">\"pgs\"</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\">### PdasCox sample</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bess.gen_data</span> <span class=\"kn\">import</span> <span class=\"n\">gen_data</span>\n<span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">seed</span><span class=\"p\">(</span><span class=\"mi\">12345</span><span class=\"p\">)</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">gen_data</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"n\">family</span><span class=\"o\">=</span><span class=\"s2\">\"cox\"</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">rho</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">sigma</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"c1\">### Sparsity known</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">PdasCox</span><span class=\"p\">(</span><span class=\"n\">path_type</span><span class=\"o\">=</span><span class=\"s2\">\"seq\"</span><span class=\"p\">,</span> <span class=\"n\">sequence</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">])</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">is_normal</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n<span class=\"c1\">### Sparsity unknown</span>\n<span class=\"c1\"># path_type=\"seq\", Default:sequence=[1,2,...,min(x.shape[0], x.shape[1])]</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">PdasCox</span><span class=\"p\">(</span><span class=\"n\">path_type</span><span class=\"o\">=</span><span class=\"s2\">\"seq\"</span><span class=\"p\">,</span> <span class=\"n\">sequence</span><span class=\"o\">=</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">))</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># path_type=\"pgs\", Default:s_min=1, s_max=X.shape[1], K_max = int(math.log(p, 2/(math.sqrt(5) - 1)))</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">PdasCox</span><span class=\"p\">(</span><span class=\"n\">path_type</span><span class=\"o\">=</span><span class=\"s2\">\"pgs\"</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">)</span>\n</pre>\n<h2>Reference</h2>\n<ul>\n<li>Wen, C. , Zhang, A. , Quan, S. , &amp; Wang, X. . (2017). <a href=\"https://arxiv.org/pdf/1709.06254.pdf\" rel=\"nofollow\">Bess: an r package for best subset selection in linear, logistic and coxph models</a></li>\n</ul>\n<h2>Bug report</h2>\n<p>Connect to <a href=\"https://github.com/Jiang-Kangkang\" rel=\"nofollow\">@Jiang-Kangkang</a>, or send an email to Jiang Kangkang(<a href=\"mailto:jiangkk3@mail2.sysu.edu.cn\">jiangkk3@mail2.sysu.edu.cn</a>)</p>\n\n          </div>"}, "last_serial": 7051743, "releases": {"0.0.10": [{"comment_text": "", "digests": {"md5": "2b2999d2ee61a7f9a6f674d300d5cd34", "sha256": "3e7e1149a26dd9e55124d2ab9573bcda83e3ba5d826350c1fd2c3835effb7524"}, "downloads": -1, "filename": "bess-0.0.10-cp35-cp35m-win_amd64.whl", "has_sig": false, "md5_digest": "2b2999d2ee61a7f9a6f674d300d5cd34", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=3.5", "size": 392795, "upload_time": "2020-04-19T06:37:50", "upload_time_iso_8601": "2020-04-19T06:37:50.277822Z", "url": "https://files.pythonhosted.org/packages/32/8b/8ad3bddb29202dc714e563519b95d81481c0dd0141ea47bf08fdfb793ec0/bess-0.0.10-cp35-cp35m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8bbeb6538b846d5a93cad286571dfc90", "sha256": "f44d5a6895ecdf6370e52f6f3906b00e0bad55dfceda7f92fb9530dfeabf0d7d"}, "downloads": -1, "filename": "bess-0.0.10-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "8bbeb6538b846d5a93cad286571dfc90", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.5", "size": 392793, "upload_time": "2020-04-19T06:37:52", "upload_time_iso_8601": "2020-04-19T06:37:52.529834Z", "url": "https://files.pythonhosted.org/packages/91/e5/e8ba9d10789e6701824f3037abbcfcc6a2ab7ff7082e33ebc2cbd242031e/bess-0.0.10-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da8ec92c4fe0ca7c3b0324af1963672b", "sha256": "d7ffd283571b96059de98ed45368fba9665ce46021670a273ad6bcfceb73079e"}, "downloads": -1, "filename": "bess-0.0.10-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "da8ec92c4fe0ca7c3b0324af1963672b", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.5", "size": 392787, "upload_time": "2020-04-19T06:37:54", "upload_time_iso_8601": "2020-04-19T06:37:54.738317Z", "url": "https://files.pythonhosted.org/packages/f7/27/857666ee8689ccae2da62c0110699eb957f5af5e4f5c2d9434aa8b96cc71/bess-0.0.10-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89b0167c26a8e025cc066954856b9ea6", "sha256": "821524e182eca76debfd7e6fc00c125c6c73655a43eb66dad289366cdd0c10f2"}, "downloads": -1, "filename": "bess-0.0.10-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "89b0167c26a8e025cc066954856b9ea6", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.5", "size": 392807, "upload_time": "2020-04-19T06:37:57", "upload_time_iso_8601": "2020-04-19T06:37:57.245332Z", "url": "https://files.pythonhosted.org/packages/62/53/b00d1b487996c68cb8899c36c9c7f7e344ba18614f9fafa2809e7d84e100/bess-0.0.10-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b379d66019126d03060eaa0b8d193a22", "sha256": "716af05939da3070ce7f838f9a0ad695efcbc1013b1101743790a57a9dd3d156"}, "downloads": -1, "filename": "bess-0.0.10.tar.gz", "has_sig": false, "md5_digest": "b379d66019126d03060eaa0b8d193a22", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 932057, "upload_time": "2020-04-19T06:38:02", "upload_time_iso_8601": "2020-04-19T06:38:02.219901Z", "url": "https://files.pythonhosted.org/packages/af/85/cc27799e9783771d7a0e8101cccb67673d1e9123189fe40cba85bc15a0f5/bess-0.0.10.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "19838aab7e19562629a4cf6d5a64ba47", "sha256": "f99cc0496344bb00c1a6e536826ca2c32460c3d9dc61b4e5b57023679117a914"}, "downloads": -1, "filename": "bess-0.0.2-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "19838aab7e19562629a4cf6d5a64ba47", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.5", "size": 350831, "upload_time": "2020-03-16T03:54:57", "upload_time_iso_8601": "2020-03-16T03:54:57.710800Z", "url": "https://files.pythonhosted.org/packages/5b/ea/468d3d779e9b4f6e8cb6d4c5f4b6e03016483ecabdc51efaab95927d8472/bess-0.0.2-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f01f4c9df89c4f8ff809bb458a5016c", "sha256": "e27e24f7daab02ef48a9c2e05beecb8838e94068142f7ed7280e9742ec847336"}, "downloads": -1, "filename": "bess-0.0.2-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "2f01f4c9df89c4f8ff809bb458a5016c", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.5", "size": 350831, "upload_time": "2020-03-16T03:55:04", "upload_time_iso_8601": "2020-03-16T03:55:04.916851Z", "url": "https://files.pythonhosted.org/packages/2e/4f/43dd4c9cc0b57be45788616c30fe9be0ed3584ee3a4f23fc03f7a5f05701/bess-0.0.2-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db84e7ea0d34daebde1f9ff3d192aa6e", "sha256": "cacd7629f11199459746ba708e233e6ebbdf02de7fa6491265cf50a6f96564db"}, "downloads": -1, "filename": "bess-0.0.2-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "db84e7ea0d34daebde1f9ff3d192aa6e", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.5", "size": 350837, "upload_time": "2020-03-16T03:55:09", "upload_time_iso_8601": "2020-03-16T03:55:09.125567Z", "url": "https://files.pythonhosted.org/packages/12/3f/ad0afbef875cc9e2aa18d620282e1077490aad27fbb7aecdf4e0d7c481c5/bess-0.0.2-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9056997413a2e90d48359f73f72f7e5", "sha256": "51df3f6dfc2a7427067f9010f8936e9763a82c5add695f3f63ba152e2735ef3a"}, "downloads": -1, "filename": "bess-0.0.2.win-amd64.zip", "has_sig": false, "md5_digest": "e9056997413a2e90d48359f73f72f7e5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 348122, "upload_time": "2020-03-16T03:55:13", "upload_time_iso_8601": "2020-03-16T03:55:13.113207Z", "url": "https://files.pythonhosted.org/packages/10/79/008d3577f40cfacfd170c53eb96ec37738cc23e04d9187944358f5626b9c/bess-0.0.2.win-amd64.zip", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "a40be7756efa2112b6a855edd5948d91", "sha256": "f9f59c8f9c596d9b13a965129d123d7e033d53bd53ec2a196f5f02ca1f424731"}, "downloads": -1, "filename": "bess-0.0.3-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "a40be7756efa2112b6a855edd5948d91", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.6", "size": 350628, "upload_time": "2020-03-16T05:00:08", "upload_time_iso_8601": "2020-03-16T05:00:08.292561Z", "url": "https://files.pythonhosted.org/packages/4d/d5/7fc7f3e076f2cc0a1d2c7cf49cd037e7766f71f1fd2e580975730856cd72/bess-0.0.3-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "506c00ed3006a1ee2f3395b7c1e2b77e", "sha256": "e3f5cf7256c43f17d3328bf0d1ebc246dc4f92e9a3e4270757572283cd94cab3"}, "downloads": -1, "filename": "bess-0.0.3.tar.gz", "has_sig": false, "md5_digest": "506c00ed3006a1ee2f3395b7c1e2b77e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 923786, "upload_time": "2020-03-16T05:00:43", "upload_time_iso_8601": "2020-03-16T05:00:43.206000Z", "url": "https://files.pythonhosted.org/packages/65/c8/4cb8b0d4f562acf6b24c418776075a73b4bb2f1f3d4e8f27160f29c95813/bess-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "ffbb8e5237375ec344f10f35a8536ca5", "sha256": "151aa03ab2a3c7514b9c68eb704c71b93da5ae4475ca7131a4a9c951b881e786"}, "downloads": -1, "filename": "bess-0.0.4-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "ffbb8e5237375ec344f10f35a8536ca5", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.6", "size": 350590, "upload_time": "2020-03-16T05:21:28", "upload_time_iso_8601": "2020-03-16T05:21:28.697314Z", "url": "https://files.pythonhosted.org/packages/d0/67/f90dbe13e338befb7b46c44dd0893067a94a4305a28b6038e4d84d791a36/bess-0.0.4-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "907940e12306d3b8a372200eadb33ee0", "sha256": "8fb3470e2fd629bb3910409c3bd39444bb4ae1737f0c4b2ace0df4722b0f3a04"}, "downloads": -1, "filename": "bess-0.0.4-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "907940e12306d3b8a372200eadb33ee0", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6", "size": 350588, "upload_time": "2020-03-16T05:21:34", "upload_time_iso_8601": "2020-03-16T05:21:34.413006Z", "url": "https://files.pythonhosted.org/packages/a2/3b/a847ca2c133be4f89a2e86fd1d5db7b4b5a28ed38f03b485a8befad86298/bess-0.0.4-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c12a691cf0a9f80276b03693a1c63e76", "sha256": "e5877f9a1506ce601a3edec36f6d0a7e47437eee06fa1f3513cf576fb5e4774f"}, "downloads": -1, "filename": "bess-0.0.4-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "c12a691cf0a9f80276b03693a1c63e76", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.6", "size": 350596, "upload_time": "2020-03-16T05:22:06", "upload_time_iso_8601": "2020-03-16T05:22:06.999728Z", "url": "https://files.pythonhosted.org/packages/96/e2/52e57083a4a4e8a32b44b76ea278e15c45f895159d67a23bf01989d02a07/bess-0.0.4-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "819d3d971ace133006876ca1019fdc4a", "sha256": "bbebc9d0e4206eab588c5a2045509f47f32d31db1e982839bacc2e30dcd71094"}, "downloads": -1, "filename": "bess-0.0.4.tar.gz", "has_sig": false, "md5_digest": "819d3d971ace133006876ca1019fdc4a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 923710, "upload_time": "2020-03-16T05:22:30", "upload_time_iso_8601": "2020-03-16T05:22:30.030062Z", "url": "https://files.pythonhosted.org/packages/61/f8/49a927495f901a85fd32290234f2fe07615ae4bb240d0900d04d80b88631/bess-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "06f0582e200c6a547381492b3257f69a", "sha256": "97c287c97b77b09a9f11ee0a058abe3268b7ca5b439719eb5b0b9a6c0222e597"}, "downloads": -1, "filename": "bess-0.0.5-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "06f0582e200c6a547381492b3257f69a", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.6", "size": 350686, "upload_time": "2020-03-17T07:47:20", "upload_time_iso_8601": "2020-03-17T07:47:20.847676Z", "url": "https://files.pythonhosted.org/packages/48/9b/6ec684a3e4c7f5281c79352f63a666896b833737d69b95b632486b649d5b/bess-0.0.5-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5131eec971fa1d63f6d7467f7b69f663", "sha256": "130271c61f15dd3d5104bcb7fc21eee7bd79f86e253988538b6fc0e6a181f453"}, "downloads": -1, "filename": "bess-0.0.5-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "5131eec971fa1d63f6d7467f7b69f663", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6", "size": 350685, "upload_time": "2020-03-17T07:47:25", "upload_time_iso_8601": "2020-03-17T07:47:25.049612Z", "url": "https://files.pythonhosted.org/packages/a7/4f/d09126516bd157d1369a8898693e6186472f176d87e7c415b6350d594a81/bess-0.0.5-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29751158b539e8a823a918d9bbece097", "sha256": "00644ff1063a66c6a5960b389dd6b1c9eea88b4c600b75ff149c0f235a6dddea"}, "downloads": -1, "filename": "bess-0.0.5-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "29751158b539e8a823a918d9bbece097", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.6", "size": 350692, "upload_time": "2020-03-17T07:47:30", "upload_time_iso_8601": "2020-03-17T07:47:30.043847Z", "url": "https://files.pythonhosted.org/packages/b6/30/40394ea9a1849f7cc2f041fba72a4070c8dc6d6d6b611c005ae6f0b3ab67/bess-0.0.5-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3cd724b63aefe9c5659d747a80e3dd95", "sha256": "31005d71620060f594018079dff467859d2358d38ecac2bfca7f22a4b7ee9cf4"}, "downloads": -1, "filename": "bess-0.0.5.tar.gz", "has_sig": false, "md5_digest": "3cd724b63aefe9c5659d747a80e3dd95", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 923949, "upload_time": "2020-03-17T07:48:32", "upload_time_iso_8601": "2020-03-17T07:48:32.007599Z", "url": "https://files.pythonhosted.org/packages/06/69/10d69edbeb84b2ed26f577e855aaab7a0226fb95ab0951f71ce8635bde6f/bess-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "96124b671aac3c1fd5905c492b05c47b", "sha256": "5eecea454eafbe1ff2569e45731337edb538ad342331530e1899eb642482307b"}, "downloads": -1, "filename": "bess-0.0.6-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "96124b671aac3c1fd5905c492b05c47b", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.6", "size": 351830, "upload_time": "2020-03-19T09:00:10", "upload_time_iso_8601": "2020-03-19T09:00:10.767830Z", "url": "https://files.pythonhosted.org/packages/e4/0b/c5aa8537867d8373ff9ce6ccfca7bb86d8a2b1b71a82def0eb62e326d2b9/bess-0.0.6-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "25af345518b0009ecc0dc52cdf2cf735", "sha256": "ee332e14888211ff44aaaab0d0fff9d96a1b1150f0cfeceb12591b6d0c7f30d0"}, "downloads": -1, "filename": "bess-0.0.6-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "25af345518b0009ecc0dc52cdf2cf735", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6", "size": 351819, "upload_time": "2020-03-19T09:13:33", "upload_time_iso_8601": "2020-03-19T09:13:33.090287Z", "url": "https://files.pythonhosted.org/packages/2c/9a/487c1540efe343db5bf6939072134784771e25e941bfa32406661f605c93/bess-0.0.6-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "972b27a4761952fa915f9a82f63a5d2b", "sha256": "5b6fa54bcb6bc862ff065ff12acb2ff6999696b6757c9ac884a9aa45729702d8"}, "downloads": -1, "filename": "bess-0.0.6-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "972b27a4761952fa915f9a82f63a5d2b", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.6", "size": 351858, "upload_time": "2020-03-19T09:13:40", "upload_time_iso_8601": "2020-03-19T09:13:40.582654Z", "url": "https://files.pythonhosted.org/packages/10/5c/f2989ac28ca016b6e8f1147347dd671b21a6aaacf19895404ed33a7b146c/bess-0.0.6-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "600b105540b0f34bf48768cb54776113", "sha256": "f62ec2b8264fc3783ecc5c0a98fe3a5764d6caadd0e11e5c7855a9dbf54f7133"}, "downloads": -1, "filename": "bess-0.0.6.tar.gz", "has_sig": false, "md5_digest": "600b105540b0f34bf48768cb54776113", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 924321, "upload_time": "2020-03-19T09:14:10", "upload_time_iso_8601": "2020-03-19T09:14:10.183582Z", "url": "https://files.pythonhosted.org/packages/90/ae/226aa3d87680c6c4b4ac1b5f90d7ea9d453f9923dcef938163c6d78438ca/bess-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "65e0640719cca91702b4522ad7d40bcb", "sha256": "deec5c26a24e094aa46519c5ee580e0a820c351b276d4cc60848162aa6a8b0d0"}, "downloads": -1, "filename": "bess-0.0.7-cp35-cp35m-win_amd64.whl", "has_sig": false, "md5_digest": "65e0640719cca91702b4522ad7d40bcb", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=3.6", "size": 371081, "upload_time": "2020-03-22T08:29:51", "upload_time_iso_8601": "2020-03-22T08:29:51.967532Z", "url": "https://files.pythonhosted.org/packages/2e/40/aa77b9201be72547c7755f32d78c8552fc594385c678b3850c90ca4574ce/bess-0.0.7-cp35-cp35m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9268b3f27bfbe900fe5adf132691531", "sha256": "60699b227b94a9744b2bc28da7d4ae4bf5a69128b2699d6d8fee27fb733bdccc"}, "downloads": -1, "filename": "bess-0.0.7-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "e9268b3f27bfbe900fe5adf132691531", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.6", "size": 350970, "upload_time": "2020-03-19T09:13:49", "upload_time_iso_8601": "2020-03-19T09:13:49.262852Z", "url": "https://files.pythonhosted.org/packages/cb/23/3ed612126b2345d641ce3b383f93adc688f0f8ad015600e607753f922e4c/bess-0.0.7-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3915b7bddd9a29a284c7edf9f8673ad6", "sha256": "add8c82e8363c77bcbb6249ca33cd18cffd40c57dcd8523d06e792ce3bac5c94"}, "downloads": -1, "filename": "bess-0.0.7-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "3915b7bddd9a29a284c7edf9f8673ad6", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6", "size": 350960, "upload_time": "2020-03-19T09:13:53", "upload_time_iso_8601": "2020-03-19T09:13:53.273467Z", "url": "https://files.pythonhosted.org/packages/e5/60/f6ad64452a945134701fff094215f64ed2ec121db92684bb4b7bcb4095a0/bess-0.0.7-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4d21399f99e79aeea7bedac4d4d5360", "sha256": "d54b0d2c9d3424d4039c07ce563b07063cecce71bf954203f1429e5ad08341d1"}, "downloads": -1, "filename": "bess-0.0.7-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "a4d21399f99e79aeea7bedac4d4d5360", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.6", "size": 350984, "upload_time": "2020-03-19T09:13:57", "upload_time_iso_8601": "2020-03-19T09:13:57.984983Z", "url": "https://files.pythonhosted.org/packages/9c/6d/0a362a0ddd9ef8612ccfd82d957ecbd3ac0366c69e7eb31356cb5df8005b/bess-0.0.7-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6155cfecb6c3a1c322a01c382fb923d4", "sha256": "343f9c6f189844d44bd87625a7c32ee84a4fa5b6be3a2044ec45edda5e40ab3a"}, "downloads": -1, "filename": "bess-0.0.7.tar.gz", "has_sig": false, "md5_digest": "6155cfecb6c3a1c322a01c382fb923d4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 924422, "upload_time": "2020-03-19T09:14:28", "upload_time_iso_8601": "2020-03-19T09:14:28.791302Z", "url": "https://files.pythonhosted.org/packages/8f/26/fb26391d401bd3d0d08f7157a5190a1b87a7ed34048fc343f11fbcd648e2/bess-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "e3ebfaab12458289d253a88bec963309", "sha256": "c7e39c97c83b7542fdf7993ec89d320603b767298619fd01c812a05cb8456c71"}, "downloads": -1, "filename": "bess-0.0.8-cp35-cp35m-win_amd64.whl", "has_sig": false, "md5_digest": "e3ebfaab12458289d253a88bec963309", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=3.5", "size": 371102, "upload_time": "2020-03-23T03:27:54", "upload_time_iso_8601": "2020-03-23T03:27:54.130530Z", "url": "https://files.pythonhosted.org/packages/0a/f8/e333c290b4010736d507ea48a53bc147f32fd9c5a302bfa111ebf64afbfe/bess-0.0.8-cp35-cp35m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a5d98562198f2c4291e518164915783", "sha256": "c9ac445dbcde1bd2761b5a1d43154f3fa87cdddaa2d2264a3165a12a3ce6c9c6"}, "downloads": -1, "filename": "bess-0.0.8-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "5a5d98562198f2c4291e518164915783", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.5", "size": 371092, "upload_time": "2020-03-23T03:27:57", "upload_time_iso_8601": "2020-03-23T03:27:57.928767Z", "url": "https://files.pythonhosted.org/packages/0a/bf/6d537730a6913802a3f1bb6bb137d4e20d177748369e965876ae95ef199d/bess-0.0.8-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "03eb58b472aee142ce80cf3823e46ba0", "sha256": "7bfd54279461dd768e6205eb33edc1e0c757229b6987fbd9348ac5f86e66d41a"}, "downloads": -1, "filename": "bess-0.0.8-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "03eb58b472aee142ce80cf3823e46ba0", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.5", "size": 374259, "upload_time": "2020-03-23T03:28:02", "upload_time_iso_8601": "2020-03-23T03:28:02.127576Z", "url": "https://files.pythonhosted.org/packages/8d/bc/d8ac6e6cc5b21d9c8089007d889f8e3947f05645390d5ed20f4fb3b8df07/bess-0.0.8-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c055a177f83b6a0a6eb453721143790d", "sha256": "3044a8ab172ea97c6875c49fa8ea38c663177a7f5d21d9d5adaeb77abc3f9e16"}, "downloads": -1, "filename": "bess-0.0.8-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "c055a177f83b6a0a6eb453721143790d", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.5", "size": 371159, "upload_time": "2020-03-23T03:28:07", "upload_time_iso_8601": "2020-03-23T03:28:07.031115Z", "url": "https://files.pythonhosted.org/packages/38/c5/2f0126b98f97108538489938faed25c9fd6985f8237eef157eec97405973/bess-0.0.8-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d31de0a0b31d63d7bd19ec9ebec9b25", "sha256": "6ba3877fa9b4eb42ec3b8a70c4ec1ac923d573b22d6ecb7d34f939745c717590"}, "downloads": -1, "filename": "bess-0.0.8.tar.gz", "has_sig": false, "md5_digest": "6d31de0a0b31d63d7bd19ec9ebec9b25", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 926665, "upload_time": "2020-03-23T03:28:17", "upload_time_iso_8601": "2020-03-23T03:28:17.198829Z", "url": "https://files.pythonhosted.org/packages/01/8a/543e46e503e21a612088808644c14d2869c9a380a1ea74e68cfe9eb75342/bess-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "da08204a5aedae661f8f8f0de7991e61", "sha256": "7afc786672004db5131861f808ed9b9d947dffa05449002f493cd64eec6cb392"}, "downloads": -1, "filename": "bess-0.0.9-cp35-cp35m-win_amd64.whl", "has_sig": false, "md5_digest": "da08204a5aedae661f8f8f0de7991e61", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=3.5", "size": 392607, "upload_time": "2020-04-17T07:49:48", "upload_time_iso_8601": "2020-04-17T07:49:48.057705Z", "url": "https://files.pythonhosted.org/packages/26/86/0e1daaf301d0fb387b232c5dab936e0dc45bbd70af6f2e8c2e9581343664/bess-0.0.9-cp35-cp35m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "245200e04017de7e6eaf7afd6ed1a972", "sha256": "68c29a682f921bcf0698409d661e0b0d75c085934483d81327628b80db72dbb8"}, "downloads": -1, "filename": "bess-0.0.9-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "245200e04017de7e6eaf7afd6ed1a972", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.5", "size": 392601, "upload_time": "2020-04-17T07:49:49", "upload_time_iso_8601": "2020-04-17T07:49:49.707024Z", "url": "https://files.pythonhosted.org/packages/f3/72/5198655397a72cf172ae1d193dabc9e1ceb870bbec87c1d1f70cf5ab22a1/bess-0.0.9-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3f2f43538e7c4ea3b2f12d899d5f79d", "sha256": "5e3c1459f08754edeec44ac1127e1a673b814c1b3c2aba6618ed49b5466b19f6"}, "downloads": -1, "filename": "bess-0.0.9-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "b3f2f43538e7c4ea3b2f12d899d5f79d", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.5", "size": 392603, "upload_time": "2020-04-17T07:49:51", "upload_time_iso_8601": "2020-04-17T07:49:51.430525Z", "url": "https://files.pythonhosted.org/packages/11/81/b68866ba7854b8c4db342de7a0d039fee0be56111f33cac4d40e0d53ca03/bess-0.0.9-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0602b8b7e5edf984b7aa070bcd856038", "sha256": "6ac5662cc01ef5a9e47f9de8f3adeef7bf2f98965c70ef92c2e6edeab08778f4"}, "downloads": -1, "filename": "bess-0.0.9-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "0602b8b7e5edf984b7aa070bcd856038", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.5", "size": 392633, "upload_time": "2020-04-17T07:49:52", "upload_time_iso_8601": "2020-04-17T07:49:52.741168Z", "url": "https://files.pythonhosted.org/packages/66/ec/4daf0718a6ac0c4aff43817f5f79cf71f346db4106bbeba6c88497d5bd6c/bess-0.0.9-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "57a2b95da08415fe1cdff681fb1bbc34", "sha256": "fe81a8c494f0b6ad58bb42bcc0ee0127df371de4b00dee4d28ae3552bfe94067"}, "downloads": -1, "filename": "bess-0.0.9.tar.gz", "has_sig": false, "md5_digest": "57a2b95da08415fe1cdff681fb1bbc34", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 931413, "upload_time": "2020-04-17T07:49:54", "upload_time_iso_8601": "2020-04-17T07:49:54.430697Z", "url": "https://files.pythonhosted.org/packages/4d/bf/b453c1abc769d3811694cfa8884b3debfec90a7d57bedb0f05b0d86c47b0/bess-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2b2999d2ee61a7f9a6f674d300d5cd34", "sha256": "3e7e1149a26dd9e55124d2ab9573bcda83e3ba5d826350c1fd2c3835effb7524"}, "downloads": -1, "filename": "bess-0.0.10-cp35-cp35m-win_amd64.whl", "has_sig": false, "md5_digest": "2b2999d2ee61a7f9a6f674d300d5cd34", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=3.5", "size": 392795, "upload_time": "2020-04-19T06:37:50", "upload_time_iso_8601": "2020-04-19T06:37:50.277822Z", "url": "https://files.pythonhosted.org/packages/32/8b/8ad3bddb29202dc714e563519b95d81481c0dd0141ea47bf08fdfb793ec0/bess-0.0.10-cp35-cp35m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8bbeb6538b846d5a93cad286571dfc90", "sha256": "f44d5a6895ecdf6370e52f6f3906b00e0bad55dfceda7f92fb9530dfeabf0d7d"}, "downloads": -1, "filename": "bess-0.0.10-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "8bbeb6538b846d5a93cad286571dfc90", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.5", "size": 392793, "upload_time": "2020-04-19T06:37:52", "upload_time_iso_8601": "2020-04-19T06:37:52.529834Z", "url": "https://files.pythonhosted.org/packages/91/e5/e8ba9d10789e6701824f3037abbcfcc6a2ab7ff7082e33ebc2cbd242031e/bess-0.0.10-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da8ec92c4fe0ca7c3b0324af1963672b", "sha256": "d7ffd283571b96059de98ed45368fba9665ce46021670a273ad6bcfceb73079e"}, "downloads": -1, "filename": "bess-0.0.10-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "da8ec92c4fe0ca7c3b0324af1963672b", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.5", "size": 392787, "upload_time": "2020-04-19T06:37:54", "upload_time_iso_8601": "2020-04-19T06:37:54.738317Z", "url": "https://files.pythonhosted.org/packages/f7/27/857666ee8689ccae2da62c0110699eb957f5af5e4f5c2d9434aa8b96cc71/bess-0.0.10-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89b0167c26a8e025cc066954856b9ea6", "sha256": "821524e182eca76debfd7e6fc00c125c6c73655a43eb66dad289366cdd0c10f2"}, "downloads": -1, "filename": "bess-0.0.10-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "89b0167c26a8e025cc066954856b9ea6", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.5", "size": 392807, "upload_time": "2020-04-19T06:37:57", "upload_time_iso_8601": "2020-04-19T06:37:57.245332Z", "url": "https://files.pythonhosted.org/packages/62/53/b00d1b487996c68cb8899c36c9c7f7e344ba18614f9fafa2809e7d84e100/bess-0.0.10-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b379d66019126d03060eaa0b8d193a22", "sha256": "716af05939da3070ce7f838f9a0ad695efcbc1013b1101743790a57a9dd3d156"}, "downloads": -1, "filename": "bess-0.0.10.tar.gz", "has_sig": false, "md5_digest": "b379d66019126d03060eaa0b8d193a22", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 932057, "upload_time": "2020-04-19T06:38:02", "upload_time_iso_8601": "2020-04-19T06:38:02.219901Z", "url": "https://files.pythonhosted.org/packages/af/85/cc27799e9783771d7a0e8101cccb67673d1e9123189fe40cba85bc15a0f5/bess-0.0.10.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:44 2020"}