{"info": {"author": "Siyu Song", "author_email": "siyu@mapbox.com", "bugtrack_url": null, "classifiers": [], "description": "tilecontrol\n===========\n\n|Build Status| |PyPI|\n\nTilecontrol contains utilities for Satellite basemap quality control. We\nuse it catch Nodata and HTTP errors in our tilesets.\n\nInstallation\n------------\n\n::\n\n    pip install tilecontrol\n\nRequirements\n------------\n\nA scene cache\n^^^^^^^^^^^^^\n\nAn update-to-date list of the contents of ``s3://mapbox-pxm/scenes`` is\nrequired to run accurate QC work. Generating that list can be be quite\ntime consuming, on the order of multiple hours.\n\nAlternatively, use an existing cache.\n\n::\n\n    $ aws s3 ls mapbox/playground/satellite-qc/scene_caches/\n    2015-11-03 10:13:21 2864329827 2015-10-11.log\n    2015-10-27 10:33:36 4712506108 2015-10-26.log\n    2015-11-04 11:51:02 6533519570 2015-11-04.log\n\nAn API Token\n^^^^^^^^^^^^\n\nYour own token should be sufficient for public datasets. For private\nmosaics (like DG), we use the token at\nhttps://github.com/mapbox/dg-utils/issues/140.\n\nCommand Line Interface\n----------------------\n\n::\n\n    $ tlc\n    Usage: tlc [OPTIONS] COMMAND [ARGS]...\n\n      Utilities for Satellite basemap quality control\n\n    Options:\n      --help  Show this message and exit.\n\n    Commands:\n      check                  Catch HTTP and Nodata errors.\n      edges                  Finds the edges of a set of tiles.\n      init                   Bootstrap the QC process.\n      parse_checker_results  Legacy - Parse `checker` output.\n\n``init``\n^^^^^^^^\n\n``tlc init`` bootstraps the QC process. With the exception of the *s3\nscene cache*, it creates the files upon which the remainder of the QC\nprocess operates on.\n\nIt takes the following arguments: - ``source_id`` of the mosaic as found\nin `pxm-sources <https://github.com/mapbox/pxm-sources>`__. -\n``layer_id`` of the mosaic, such as ``mapbox.satellite-test``. -\n``cache`` refers to the ``s3 scene list``, and is expected to be a local\nfile. - ``destination`` refers to where you'd like the output files to\nbe stored.\n\n``tlc init`` takes an important option, ``--token``, which let's you\nspecify the ``$MapboxAccessToken`` you'd like to use for the query. Your\npersonal key may work well for public tilesets, but private tilesets\nwill often require use of a special key. For example, DG QC work\nrequires use of the token found at\nhttps://github.com/mapbox/dg-utils/issues/140.\n\nFor example:\n\n::\n\n    tlc init dg_vivid_latam_caribbean digitalglobe.vivid-latam-caribbean 2015-10-11.log output --token $token\n\nWould yield the following files:\n\n::\n\n    dg_vivid_latam_caribbean_awsparse_outputs.json\n    dg_vivid_latam_caribbean_edges_2015_11_09\n    dg_vivid_latam_caribbean_geojsons_2015_11_09\n    dg_vivid_latam_caribbean_sourceimgGeojsons_2015_11_09\n    dg_vivid_latam_caribbean_sourceimgnames_2015_11_09\n    dg_vivid_latam_caribbean_zxy_2015_11_09\n\n``edges``\n^^^^^^^^^\n\n``tlc edges`` is typically called as a part of the ``init`` subcommand.\nFor a mosaic of any shape, it will identify those tiles which exist on\nthe periphery of the mosaic.\n\n-  Input is a list of ZXY's\n-  Output is a list of ZXY's\n\n``check``\n^^^^^^^^^\n\n``tlc check`` performs the QC process, which consists of checking for\nHTTP or Nodata errors for the URL's we expect to exist.\n\nIt takes the following arguments: - ``layer_id`` of the mosaic, such as\n``mapbox.satellite-test``. - ``inzxy`` a list of ZXY's to check. -\n``edges`` a list of the ZXY's of the edges of the mosaic. - ``geojsons``\na list of the filename's we expect to find in the *scene cache*.\n\nAdditionally, it takes a ``--token`` option as described for\n``tlc init``.\n\nFor example:\n\n::\n\n    tlc check dg_vivid_eastern_europe dg_vivid_eastern_europe_zxy_2015_10_27 dg_vivid_eastern_europe_edges_2015_10_27 dg_vivid_eastern_europe_geojsons_2015_10_27 --token $token\n\nWould yield the following files:\n\n::\n\n    dg_vivid_eastern_europe_missing_and_nodata_zxy\n    dg_vivid_eastern_europe_missing_and_nodata_sourceimgs\n\nContributing\n------------\n\nTo develop against ``tilecontrol``:\n\n::\n\n    git clone git@github.com:mapbox/tilecontrol.git\n    cd tilecontrol\n    pip install -e \".[test]\"\n\nTests can be run with ``py.test``\n\n.. |Build Status| image:: https://magnum.travis-ci.com/mapbox/tilecontrol.svg?token=5hEJ9x9Ljj2yfkNFpMu5&branch=master\n   :target: https://magnum.travis-ci.com/mapbox/tilecontrol\n.. |PyPI| image:: https://img.shields.io/pypi/v/tilecontrol.svg\n   :target: https://pypi.python.org/pypi/tilecontrol", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mapbox/tilecontrol", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "tilecontrol", "package_url": "https://pypi.org/project/tilecontrol/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tilecontrol/", "project_urls": {"Homepage": "https://github.com/mapbox/tilecontrol"}, "release_url": "https://pypi.org/project/tilecontrol/0.1.6/", "requires_dist": null, "requires_python": "", "summary": "PXM ingest quality control", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://magnum.travis-ci.com/mapbox/tilecontrol\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/824262ddcfdeb7cbb545f413acf427b5de5c4521/68747470733a2f2f6d61676e756d2e7472617669732d63692e636f6d2f6d6170626f782f74696c65636f6e74726f6c2e7376673f746f6b656e3d3568454a3978394c6a6a3279666b4e46704d7535266272616e63683d6d6173746572\"></a> <a href=\"https://pypi.python.org/pypi/tilecontrol\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fcf4358448caadfebe1715c140295ca9a9fb55ff/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f74696c65636f6e74726f6c2e737667\"></a></p>\n<p>Tilecontrol contains utilities for Satellite basemap quality control. We\nuse it catch Nodata and HTTP errors in our tilesets.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install tilecontrol\n</pre>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<div id=\"a-scene-cache\">\n<h3>A scene cache</h3>\n<p>An update-to-date list of the contents of <tt><span class=\"pre\">s3://mapbox-pxm/scenes</span></tt> is\nrequired to run accurate QC work. Generating that list can be be quite\ntime consuming, on the order of multiple hours.</p>\n<p>Alternatively, use an existing cache.</p>\n<pre>$ aws s3 ls mapbox/playground/satellite-qc/scene_caches/\n2015-11-03 10:13:21 2864329827 2015-10-11.log\n2015-10-27 10:33:36 4712506108 2015-10-26.log\n2015-11-04 11:51:02 6533519570 2015-11-04.log\n</pre>\n</div>\n<div id=\"an-api-token\">\n<h3>An API Token</h3>\n<p>Your own token should be sufficient for public datasets. For private\nmosaics (like DG), we use the token at\n<a href=\"https://github.com/mapbox/dg-utils/issues/140\" rel=\"nofollow\">https://github.com/mapbox/dg-utils/issues/140</a>.</p>\n</div>\n</div>\n<div id=\"command-line-interface\">\n<h2>Command Line Interface</h2>\n<pre>$ tlc\nUsage: tlc [OPTIONS] COMMAND [ARGS]...\n\n  Utilities for Satellite basemap quality control\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  check                  Catch HTTP and Nodata errors.\n  edges                  Finds the edges of a set of tiles.\n  init                   Bootstrap the QC process.\n  parse_checker_results  Legacy - Parse `checker` output.\n</pre>\n<div id=\"init\">\n<h3><tt>init</tt></h3>\n<p><tt>tlc init</tt> bootstraps the QC process. With the exception of the <em>s3\nscene cache</em>, it creates the files upon which the remainder of the QC\nprocess operates on.</p>\n<p>It takes the following arguments: - <tt>source_id</tt> of the mosaic as found\nin <a href=\"https://github.com/mapbox/pxm-sources\" rel=\"nofollow\">pxm-sources</a>. -\n<tt>layer_id</tt> of the mosaic, such as <tt><span class=\"pre\">mapbox.satellite-test</span></tt>. -\n<tt>cache</tt> refers to the <tt>s3 scene list</tt>, and is expected to be a local\nfile. - <tt>destination</tt> refers to where you\u2019d like the output files to\nbe stored.</p>\n<p><tt>tlc init</tt> takes an important option, <tt><span class=\"pre\">--token</span></tt>, which let\u2019s you\nspecify the <tt>$MapboxAccessToken</tt> you\u2019d like to use for the query. Your\npersonal key may work well for public tilesets, but private tilesets\nwill often require use of a special key. For example, DG QC work\nrequires use of the token found at\n<a href=\"https://github.com/mapbox/dg-utils/issues/140\" rel=\"nofollow\">https://github.com/mapbox/dg-utils/issues/140</a>.</p>\n<p>For example:</p>\n<pre>tlc init dg_vivid_latam_caribbean digitalglobe.vivid-latam-caribbean 2015-10-11.log output --token $token\n</pre>\n<p>Would yield the following files:</p>\n<pre>dg_vivid_latam_caribbean_awsparse_outputs.json\ndg_vivid_latam_caribbean_edges_2015_11_09\ndg_vivid_latam_caribbean_geojsons_2015_11_09\ndg_vivid_latam_caribbean_sourceimgGeojsons_2015_11_09\ndg_vivid_latam_caribbean_sourceimgnames_2015_11_09\ndg_vivid_latam_caribbean_zxy_2015_11_09\n</pre>\n</div>\n<div id=\"edges\">\n<h3><tt>edges</tt></h3>\n<p><tt>tlc edges</tt> is typically called as a part of the <tt>init</tt> subcommand.\nFor a mosaic of any shape, it will identify those tiles which exist on\nthe periphery of the mosaic.</p>\n<ul>\n<li>Input is a list of ZXY\u2019s</li>\n<li>Output is a list of ZXY\u2019s</li>\n</ul>\n</div>\n<div id=\"check\">\n<h3><tt>check</tt></h3>\n<p><tt>tlc check</tt> performs the QC process, which consists of checking for\nHTTP or Nodata errors for the URL\u2019s we expect to exist.</p>\n<p>It takes the following arguments: - <tt>layer_id</tt> of the mosaic, such as\n<tt><span class=\"pre\">mapbox.satellite-test</span></tt>. - <tt>inzxy</tt> a list of ZXY\u2019s to check. -\n<tt>edges</tt> a list of the ZXY\u2019s of the edges of the mosaic. - <tt>geojsons</tt>\na list of the filename\u2019s we expect to find in the <em>scene cache</em>.</p>\n<p>Additionally, it takes a <tt><span class=\"pre\">--token</span></tt> option as described for\n<tt>tlc init</tt>.</p>\n<p>For example:</p>\n<pre>tlc check dg_vivid_eastern_europe dg_vivid_eastern_europe_zxy_2015_10_27 dg_vivid_eastern_europe_edges_2015_10_27 dg_vivid_eastern_europe_geojsons_2015_10_27 --token $token\n</pre>\n<p>Would yield the following files:</p>\n<pre>dg_vivid_eastern_europe_missing_and_nodata_zxy\ndg_vivid_eastern_europe_missing_and_nodata_sourceimgs\n</pre>\n</div>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>To develop against <tt>tilecontrol</tt>:</p>\n<pre>git clone git@github.com:mapbox/tilecontrol.git\ncd tilecontrol\npip install -e \".[test]\"\n</pre>\n<p>Tests can be run with <tt>py.test</tt></p>\n</div>\n\n          </div>"}, "last_serial": 1813590, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "f59cb77e9c444cbd64f61d3b757091ab", "sha256": "5f76c33d2414612e673185f1da9d19a6c4347b9f7329334759a6ac596e06df3c"}, "downloads": -1, "filename": "tilecontrol-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f59cb77e9c444cbd64f61d3b757091ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8348, "upload_time": "2015-10-12T22:05:30", "upload_time_iso_8601": "2015-10-12T22:05:30.615728Z", "url": "https://files.pythonhosted.org/packages/cb/af/c6803ea8f0865fdb4deefa06952417928626994708795d0e10000f38edd3/tilecontrol-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "41e27755db553376a66e7f7744af8933", "sha256": "988148e7f337207e77b0a3ecb80e2020932b1dc22452ce6ebec31ceeb2b321b8"}, "downloads": -1, "filename": "tilecontrol-0.0.2.tar.gz", "has_sig": false, "md5_digest": "41e27755db553376a66e7f7744af8933", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9424, "upload_time": "2015-10-12T23:19:46", "upload_time_iso_8601": "2015-10-12T23:19:46.947124Z", "url": "https://files.pythonhosted.org/packages/0f/1d/532d5f5ec832bf65673f35242d093c8227f35fe0e688bea51434f7b82b04/tilecontrol-0.0.2.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "8b55715bc9336ee2485a903d3da1b336", "sha256": "3b9c63ebe3c686fe1d728a946501e86b4b683d7be3dd219bff563ec6528664d7"}, "downloads": -1, "filename": "tilecontrol-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8b55715bc9336ee2485a903d3da1b336", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10113, "upload_time": "2015-10-23T22:08:04", "upload_time_iso_8601": "2015-10-23T22:08:04.514595Z", "url": "https://files.pythonhosted.org/packages/5e/85/fa87c0917497b4ac9c162ca1e3fdef0e604a31fb53362dfe828e6d44b51e/tilecontrol-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "2d22d377ddb7e40e628f4294673a7eab", "sha256": "78254099405e46d58d076002463d19b8a6020f1465f20d9cff601081693360a5"}, "downloads": -1, "filename": "tilecontrol-0.1.2.tar.gz", "has_sig": false, "md5_digest": "2d22d377ddb7e40e628f4294673a7eab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9861, "upload_time": "2015-10-23T22:40:34", "upload_time_iso_8601": "2015-10-23T22:40:34.679629Z", "url": "https://files.pythonhosted.org/packages/e1/33/f8bb39979a10733c93354d9cf370c44a2880e877645fd13920d55c7e1709/tilecontrol-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "a6cce207d06ec52784ca5657189d0fac", "sha256": "ab782208a3b406ba8ae1d5642e76c8204ce9089babc5f504b3fc84cdb0ecccd2"}, "downloads": -1, "filename": "tilecontrol-0.1.3.tar.gz", "has_sig": false, "md5_digest": "a6cce207d06ec52784ca5657189d0fac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10365, "upload_time": "2015-10-28T18:43:17", "upload_time_iso_8601": "2015-10-28T18:43:17.646160Z", "url": "https://files.pythonhosted.org/packages/ef/53/ac3113cc70c572a9f0bbb2778309aa845d4da60812cdcaa501fdea4e27a0/tilecontrol-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "0d6c06c5634a08f21e2d45ac0a5c1b16", "sha256": "3282ee8993f229b8e83bbc88a1a4668655f00bfd4a1a20e191124f550654f139"}, "downloads": -1, "filename": "tilecontrol-0.1.4.tar.gz", "has_sig": false, "md5_digest": "0d6c06c5634a08f21e2d45ac0a5c1b16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10613, "upload_time": "2015-10-30T19:44:02", "upload_time_iso_8601": "2015-10-30T19:44:02.483665Z", "url": "https://files.pythonhosted.org/packages/4d/f5/fe47f850d75d72b200076dcd2f473c43979ccf1820a9fa4ab1ffdf9b2846/tilecontrol-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "30154ac8d399965b39d48843f1966682", "sha256": "2fdc604d1726430e22fb42c0a8d22be91f67801f4b4a54e3a7971c7785625ecb"}, "downloads": -1, "filename": "tilecontrol-0.1.5.tar.gz", "has_sig": false, "md5_digest": "30154ac8d399965b39d48843f1966682", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12100, "upload_time": "2015-11-10T19:52:04", "upload_time_iso_8601": "2015-11-10T19:52:04.632001Z", "url": "https://files.pythonhosted.org/packages/24/79/7c7d8042042593b667cd1f223ce92e6fcb78a6163962d444a95085994391/tilecontrol-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "11b6a854330fa03751e960dae943ea47", "sha256": "5cfcb09c128d4bcdc0b6dd85d33772a0c36110e69bde2d0131b6698428b50a81"}, "downloads": -1, "filename": "tilecontrol-0.1.6.tar.gz", "has_sig": false, "md5_digest": "11b6a854330fa03751e960dae943ea47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12075, "upload_time": "2015-11-12T19:21:23", "upload_time_iso_8601": "2015-11-12T19:21:23.417536Z", "url": "https://files.pythonhosted.org/packages/8b/9a/c9c0b0097c9d9ff167c16edb788948f57b44fcea52778068247c5a25dd1d/tilecontrol-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "11b6a854330fa03751e960dae943ea47", "sha256": "5cfcb09c128d4bcdc0b6dd85d33772a0c36110e69bde2d0131b6698428b50a81"}, "downloads": -1, "filename": "tilecontrol-0.1.6.tar.gz", "has_sig": false, "md5_digest": "11b6a854330fa03751e960dae943ea47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12075, "upload_time": "2015-11-12T19:21:23", "upload_time_iso_8601": "2015-11-12T19:21:23.417536Z", "url": "https://files.pythonhosted.org/packages/8b/9a/c9c0b0097c9d9ff167c16edb788948f57b44fcea52778068247c5a25dd1d/tilecontrol-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:53:43 2020"}