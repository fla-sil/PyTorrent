{"info": {"author": "Tomas Beuzen", "author_email": "tomas.beuzen@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "[![Project Status: Active \u2013 The project has reached a stable, usable state and is being actively developed.](https://www.repostatus.org/badges/latest/active.svg)](https://www.repostatus.org/#active)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![Build Status](https://travis-ci.org/TomasBeuzen/pybeach.svg?branch=master)](https://travis-ci.org/TomasBeuzen/pybeach)\n[![Documentation Status](https://readthedocs.org/projects/pybeach/badge/?version=latest)](https://pybeach.readthedocs.io/en/latest/?badge=latest)\n[![Coverage Status](https://coveralls.io/repos/github/TomasBeuzen/pybeach/badge.svg?branch=master&service=github)](https://coveralls.io/github/TomasBeuzen/pybeach?branch=master)\n\n# **pybeach**: A Python package for locating the dune toe on cross-shore beach profile transects.\n\n<div align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/TomasBeuzen/pybeach/master/docs/img/figure_1.png\" alt=\"pybeach-example\" width=\"700\"/>\n</div>\n\n## Background\n**pybeach** is a python package for identifying dune toes on 2D beach profile transects. It includes the following methods:\n  - Machine learning; \n  - Maximum curvature (Stockdon et al, 2007); \n  - Relative relief (Wernette et al, 2016); and,\n  - Perpendicular distance.\n  \nIn addition, **pybeach** contains methods for identifying the shoreline position and dune crest position on 2D beach profile transects. See the [*pybeach* paper](paper.md) for more details about **pybeach**.\n\n## Usage\n```python\nfrom pybeach.beach import Profile\n\n# example data\nx = np.arange(0, 80, 0.5)\nz = np.concatenate((np.linspace(4, 5, 40),\n                    np.linspace(5, 2, 10),\n                    np.linspace(2, 0, 91)[1:],\n                    np.linspace(0, -1, 20)))\n\n# instantiate\np = Profile(x, z)\n\n# predict dune toe, dune crest, shoreline location\ntoe_ml, prob_ml = p.predict_dunetoe_ml('wave_embayed_clf')  # predict toe using machine learning model\ntoe_mc = p.predict_dunetoe_mc()    # predict toe using maximum curvature method (Stockdon et al, 2007)\ntoe_rr = p.predict_dunetoe_rr()    # predict toe using relative relief method (Wernette et al, 2016)\ntoe_pd = p.predict_dunetoe_pd()    # predict toe using perpendicular distance method\ncrest = p.predict_dunecrest()      # predict dune crest\nshoreline = p.predict_shoreline()  # predict shoreline\n```\n\nSee the [example notebook](https://github.com/TomasBeuzen/pybeach/blob/master/example.ipynb) for more details.\n\n## Documentation\nRead the **pybeach** documentation [here](https://pybeach-tomasbeuzen.readthedocs.io/en/latest/?badge=latest).\n\n## Questions, Comments, Suggestions\nDo you have a question that needs answering? Have you found an issue with the code and need to get it fixed? Or perhaps you're looking to contribute to the code and have ideas for how it could be improved. In all cases, please see the [Issues](https://github.com/TomasBeuzen/pybeach/issues) page.\n\n## References\nStockdon, H. F., Sallenger Jr, A. H., Holman, R. A., & Howd, P. A. (2007). A simple model for the spatially-variable coastal response to hurricanes. Marine Geology, 238, 1-20. https://doi.org/10.1016/j.margeo.2006.11.004\n\nWernette, P., Houser, C., & Bishop, M. P. (2016). An automated approach for extracting Barrier Island morphology from digital elevation models. Geomorphology, 262, 1-7. https://doi.org/10.1016/j.geomorph.2016.02.024\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/TomasBeuzen/pybeach", "keywords": "coastal,dune,dune toe,beach,machine learning", "license": "MIT", "maintainer": "Tomas Beuzen", "maintainer_email": "tomas.beuzen@gmail.com", "name": "pybeach", "package_url": "https://pypi.org/project/pybeach/", "platform": "", "project_url": "https://pypi.org/project/pybeach/", "project_urls": {"Documentation": "https://pybeach.readthedocs.io", "Homepage": "https://github.com/TomasBeuzen/pybeach", "Repository": "https://github.com/TomasBeuzen/pybeach"}, "release_url": "https://pypi.org/project/pybeach/0.1.1/", "requires_dist": ["numpy (==1.17.2)", "scipy (==1.3.1)", "pandas (==0.25.1)", "scikit-learn (==0.21.2)", "joblib (==0.13.2)"], "requires_python": ">=3.7,<4.0", "summary": "A Python package for locating the dune toe on cross-shore beach profile transects.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://www.repostatus.org/#active\" rel=\"nofollow\"><img alt=\"Project Status: Active \u2013 The project has reached a stable, usable state and is being actively developed.\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cbb8ab8ca3109b443de9728eb9fc0fa6113fe21f/68747470733a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f6163746976652e737667\"></a>\n<a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a>\n<a href=\"https://travis-ci.org/TomasBeuzen/pybeach\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ba0b14a4b2b81bf9f183d9b010c40cf47486ea85/68747470733a2f2f7472617669732d63692e6f72672f546f6d61734265757a656e2f707962656163682e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pybeach.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/42a9f5ee15421149f5bce5f71845fd855669ab3d/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f707962656163682f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://coveralls.io/github/TomasBeuzen/pybeach?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d28125e165dbff5dd62169fdc2e4c81d4bcb4164/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f546f6d61734265757a656e2f707962656163682f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562\"></a></p>\n<h1><strong>pybeach</strong>: A Python package for locating the dune toe on cross-shore beach profile transects.</h1>\n<div>\n  <img alt=\"pybeach-example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bfebc8df74c63eacb6fce5d684fe838f303a1b63/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f546f6d61734265757a656e2f707962656163682f6d61737465722f646f63732f696d672f6669677572655f312e706e67\" width=\"700\">\n</div>\n<h2>Background</h2>\n<p><strong>pybeach</strong> is a python package for identifying dune toes on 2D beach profile transects. It includes the following methods:</p>\n<ul>\n<li>Machine learning;</li>\n<li>Maximum curvature (Stockdon et al, 2007);</li>\n<li>Relative relief (Wernette et al, 2016); and,</li>\n<li>Perpendicular distance.</li>\n</ul>\n<p>In addition, <strong>pybeach</strong> contains methods for identifying the shoreline position and dune crest position on 2D beach profile transects. See the <a href=\"paper.md\" rel=\"nofollow\"><em>pybeach</em> paper</a> for more details about <strong>pybeach</strong>.</p>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pybeach.beach</span> <span class=\"kn\">import</span> <span class=\"n\">Profile</span>\n\n<span class=\"c1\"># example data</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">80</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">)</span>\n<span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">concatenate</span><span class=\"p\">((</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">40</span><span class=\"p\">),</span>\n                    <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">),</span>\n                    <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">91</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">:],</span>\n                    <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">)))</span>\n\n<span class=\"c1\"># instantiate</span>\n<span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">Profile</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># predict dune toe, dune crest, shoreline location</span>\n<span class=\"n\">toe_ml</span><span class=\"p\">,</span> <span class=\"n\">prob_ml</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">predict_dunetoe_ml</span><span class=\"p\">(</span><span class=\"s1\">'wave_embayed_clf'</span><span class=\"p\">)</span>  <span class=\"c1\"># predict toe using machine learning model</span>\n<span class=\"n\">toe_mc</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">predict_dunetoe_mc</span><span class=\"p\">()</span>    <span class=\"c1\"># predict toe using maximum curvature method (Stockdon et al, 2007)</span>\n<span class=\"n\">toe_rr</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">predict_dunetoe_rr</span><span class=\"p\">()</span>    <span class=\"c1\"># predict toe using relative relief method (Wernette et al, 2016)</span>\n<span class=\"n\">toe_pd</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">predict_dunetoe_pd</span><span class=\"p\">()</span>    <span class=\"c1\"># predict toe using perpendicular distance method</span>\n<span class=\"n\">crest</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">predict_dunecrest</span><span class=\"p\">()</span>      <span class=\"c1\"># predict dune crest</span>\n<span class=\"n\">shoreline</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">predict_shoreline</span><span class=\"p\">()</span>  <span class=\"c1\"># predict shoreline</span>\n</pre>\n<p>See the <a href=\"https://github.com/TomasBeuzen/pybeach/blob/master/example.ipynb\" rel=\"nofollow\">example notebook</a> for more details.</p>\n<h2>Documentation</h2>\n<p>Read the <strong>pybeach</strong> documentation <a href=\"https://pybeach-tomasbeuzen.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\">here</a>.</p>\n<h2>Questions, Comments, Suggestions</h2>\n<p>Do you have a question that needs answering? Have you found an issue with the code and need to get it fixed? Or perhaps you're looking to contribute to the code and have ideas for how it could be improved. In all cases, please see the <a href=\"https://github.com/TomasBeuzen/pybeach/issues\" rel=\"nofollow\">Issues</a> page.</p>\n<h2>References</h2>\n<p>Stockdon, H. F., Sallenger Jr, A. H., Holman, R. A., &amp; Howd, P. A. (2007). A simple model for the spatially-variable coastal response to hurricanes. Marine Geology, 238, 1-20. <a href=\"https://doi.org/10.1016/j.margeo.2006.11.004\" rel=\"nofollow\">https://doi.org/10.1016/j.margeo.2006.11.004</a></p>\n<p>Wernette, P., Houser, C., &amp; Bishop, M. P. (2016). An automated approach for extracting Barrier Island morphology from digital elevation models. Geomorphology, 262, 1-7. <a href=\"https://doi.org/10.1016/j.geomorph.2016.02.024\" rel=\"nofollow\">https://doi.org/10.1016/j.geomorph.2016.02.024</a></p>\n\n          </div>"}, "last_serial": 6113470, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "a969314387b6365988860e8856c4a0e1", "sha256": "bb33fa2606168b59cf88a44ec744ed819d56c97781ee168f868f535ac7b48d13"}, "downloads": -1, "filename": "pybeach-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a969314387b6365988860e8856c4a0e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 989975, "upload_time": "2019-11-11T01:22:52", "upload_time_iso_8601": "2019-11-11T01:22:52.111390Z", "url": "https://files.pythonhosted.org/packages/99/9b/3621e680f6a24d302776406c955be1390381f1903bcb5a829ece65a4435f/pybeach-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "926dd67768502a73608521ec53941e6d", "sha256": "cc88d3236615238c27bef2cc9d13e351bdfb782b69605008d5480f19df4058c4"}, "downloads": -1, "filename": "pybeach-0.1.1.tar.gz", "has_sig": false, "md5_digest": "926dd67768502a73608521ec53941e6d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 948989, "upload_time": "2019-11-11T01:22:55", "upload_time_iso_8601": "2019-11-11T01:22:55.093628Z", "url": "https://files.pythonhosted.org/packages/98/b4/5ef9c73cceac67c21c07d3167bfdbd1a94696fe51cee4b2ac1652603bfe1/pybeach-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a969314387b6365988860e8856c4a0e1", "sha256": "bb33fa2606168b59cf88a44ec744ed819d56c97781ee168f868f535ac7b48d13"}, "downloads": -1, "filename": "pybeach-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a969314387b6365988860e8856c4a0e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 989975, "upload_time": "2019-11-11T01:22:52", "upload_time_iso_8601": "2019-11-11T01:22:52.111390Z", "url": "https://files.pythonhosted.org/packages/99/9b/3621e680f6a24d302776406c955be1390381f1903bcb5a829ece65a4435f/pybeach-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "926dd67768502a73608521ec53941e6d", "sha256": "cc88d3236615238c27bef2cc9d13e351bdfb782b69605008d5480f19df4058c4"}, "downloads": -1, "filename": "pybeach-0.1.1.tar.gz", "has_sig": false, "md5_digest": "926dd67768502a73608521ec53941e6d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 948989, "upload_time": "2019-11-11T01:22:55", "upload_time_iso_8601": "2019-11-11T01:22:55.093628Z", "url": "https://files.pythonhosted.org/packages/98/b4/5ef9c73cceac67c21c07d3167bfdbd1a94696fe51cee4b2ac1652603bfe1/pybeach-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:20 2020"}