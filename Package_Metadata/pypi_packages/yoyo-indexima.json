{"info": {"author": "Jerome Guibert", "author_email": "jguibert@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules", "Typing :: Typed"], "description": "# yoyo-indexima\n\n\n[![Unix Build Status](https://img.shields.io/travis/geronimo-iia/yoyo-indexima/master.svg?label=unix)](https://travis-ci.org/geronimo-iia/yoyo-indexima)\n[![PyPI Version](https://img.shields.io/pypi/v/yoyo-indexima.svg)](https://pypi.org/project/yoyo-indexima)\n[![PyPI License](https://img.shields.io/pypi/l/yoyo-indexima.svg)](https://pypi.org/project/yoyo-indexima)\n\nVersions following [Semantic Versioning](https://semver.org/)\n\n## Overview\n\n[Indexima](https://indexima.com/) migration schema based on [yoyo](https://ollycope.com/software/yoyo/latest/) and [pyhive](https://pypi.org/project/PyHive/).\n\n\n> The little story\n>\n>In the land of database migration tool, i have tried:\n>\n>- flyway\n>- liquidbase with hive extention\n>\n>Both either did not support hive (as flyway), or indexima did not fully compliant with hive (wich cause probleme with liquidbase)\n>\n>So I try to found a module not too complex in order to migrate our indexima schema in a safe way.\n>\n>In this early release, I just trying to do the job.\n\n\n## Setup\n\n### Requirements\n\n* Python 3.7+\n\n### Installation\n\nInstall this library directly into an activated virtual environment:\n\n```text\n$ pip install yoyo-indexima\n```\n\nor add it to your [Poetry](https://poetry.eustace.io/) project:\n\n```text\n$ poetry add yoyo-indexima\n```\n\n## Usage\n\n### Hive connection\n\n1. backend ui must start with ```indexima://```\n2. If you have trouble to obtain an hive connection, please read http://dwgeek.com/guide-connecting-hiveserver2-using-python-pyhive.html/\n\nNote: \nIf you using python in docker, you should install :\n```\napt-get update -qq\napt-get install -qqy gcc libsasl2-dev libsasl2-2 libsasl2-modules-gssapi-mit \n```\n\n## Migration\n\nYou could see a complete sample under 'example' folder.\n\n\n### using python client\n\n```\nyoyo_indexima\nusage: yoyo_indexima [-h] [-s SOURCE] -u URI {show,apply}\n```\n\nexample:\n\n```\nyoyo_indexima  apply  -s $(pwd)/example/migrations/ -u \"indexima://admin:super_password@localhost:10000/default\"\n```\n\nCommands:\n\n- show                Show migrations\n- apply               Apply migrations\n- reapply             Reapply migrations\n- rollback            Rollback migrations\n- mark                Mark migrations as applied, without running them\n- unmark              Unmark applied migrations, without rolling them back\n- break-lock          Break migration locks\n\n\nHelp for apply:\n\n```bash\n> yoyo_indexima  apply -h\nusage: yoyo_indexima apply [-h] [-s SOURCE] -u URI [-f] [-a] [-r REVISION]\n                           [-d]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SOURCE, --source SOURCE\n                        source path of migration script (default ./migrations)\n  -u URI, --uri URI     backend uri\n  -f, --force           Force apply/rollback of steps even if previous steps\n                        have failed\n  -a, --all             Select all migrations, regardless of whether they have\n                        been previously applied\n  -r REVISION, --revision REVISION\n                        Apply/rollback migration with id REVISION\n  -d, --dry-run         Dry run: no modification will be applied\n```\n\n### within python code\n\nIf your migrations script are under directory ```migration``` folder\n\n```python\nimport os\n\nfrom yoyo_indexima import get_backend, read_migrations\n\n\nif __name__ == \"__main__\":\n\n    # obtain IndeximaBackend\n    backend = get_backend('indexima://admin:super_password@localhost:10000/default?auth=CUSTOM')\n\n    # Read migrations folder\n    migrations = read_migrations(os.path.join(os.getcwd(), 'migrations/**/*'))\n    print(f'migrations: {migrations}')\n    if migrations:\n        # apply migration\n        with backend.lock():\n            backend.apply_migrations(backend.to_apply(migrations))\n```\n\n### Management table\n\nThis tool create in your `default` schema:\n\n- a log table: 'yoyo_log'\n- a lock_table: 'yoyo_lock'\n- a version table: 'yoyo_version'\n- a migration table: 'yoyo_migration'\n\n### Migration script template\n\n```python\n\"\"\"\n{message}\n\"\"\"\n\nfrom yoyo import step\n\n__depends__ = {{{depends}}}\n\nsteps = [\n    step(\"create ...\", \"drop ...\")\n]\n```\n\n### Configure hive connection\n\nIn python script, on ``IndeximaBackend``instance, you could use:\n\n - ```set_hive_configuration```: A dictionary of Hive settings (functionally same as the `set` command)\n - ```set_hive_thrift_transport```: an instance of TSaslClientTransport\n\nAs see in https://github.com/dropbox/PyHive/issues/162, you could do things like that:\n\n```python\nimport sasl\nfrom thrift_sasl import TSaslClientTransport\nfrom thrift.transport.TSocket import TSocket\n\n\ndef create_hive_plain_transport(host, port, username, password, timeout=60):\n    socket = TSocket(host, port)\n    socket.setTimeout(timeout * 1000)\n\n    sasl_auth = 'PLAIN'\n\n    def sasl_factory():\n        sasl_client = sasl.Client()\n        sasl_client.setAttr('host', host)\n        sasl_client.setAttr('username', username)\n        sasl_client.setAttr('password', password)\n        sasl_client.init()\n        return sasl_client\n\n    return TSaslClientTransport(sasl_factory, sasl_auth, socket)\n\n\nbackend = get_backend('indexima://admin:super_password@localhost:10000/default?auth=CUSTOM')\nbackend.set_hive_thrift_transport(create_hive_plain_transport(...))\n\n```\n\n### Extends IndeximaBackend\n\nIf you extends ```IndeximaBackend``` you could register your classes, in the function:\n```get_backend(uri: str, backend=IndeximaBackend) -> DatabaseBackend:```\n\nTODO: add a client parameter to specify full class name in cli.\n\n\n## License\n\n[The MIT License (MIT)](https://geronimo-iia.github.io/yoyo-indexima/license)\n\n\n## Contributing\n\nSee [Contributing](https://geronimo-iia.github.io/yoyo-indexima/contributing)\n\n## Next step\n\n- production usage in order to see how this tool made the job\n- more documentation in code\n- purpose few change in 'yoyo' like set all SQL command on Backend class\n- ...\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.org/project/yoyo_indexima", "keywords": "", "license": "MIT", "maintainer": "Jerome Guibert", "maintainer_email": "jguibert@gmail.com", "name": "yoyo-indexima", "package_url": "https://pypi.org/project/yoyo-indexima/", "platform": "", "project_url": "https://pypi.org/project/yoyo-indexima/", "project_urls": {"Documentation": "https://geronimo-iia.github.io/yoyo-indexima/", "Homepage": "https://pypi.org/project/yoyo_indexima", "Repository": "https://github.com/geronimo-iia/yoyo-indexima"}, "release_url": "https://pypi.org/project/yoyo-indexima/0.1.3/", "requires_dist": ["yoyo-migrations (>=6.1.0,<6.2.0)", "PyHive (==0.6.1)", "thrift (==0.13.0)", "thrift-sasl", "crayons (==0.3.0)"], "requires_python": ">=3.7,<4.0", "summary": "Indexima migration schema based on yoyo", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>yoyo-indexima</h1>\n<p><a href=\"https://travis-ci.org/geronimo-iia/yoyo-indexima\" rel=\"nofollow\"><img alt=\"Unix Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/757e3b234c0bfb56f100fe252d4a616de8026b0b/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6765726f6e696d6f2d6969612f796f796f2d696e646578696d612f6d61737465722e7376673f6c6162656c3d756e6978\"></a>\n<a href=\"https://pypi.org/project/yoyo-indexima\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d1c6d1acffd0cb1351bd05d3517491457ca2a147/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f796f796f2d696e646578696d612e737667\"></a>\n<a href=\"https://pypi.org/project/yoyo-indexima\" rel=\"nofollow\"><img alt=\"PyPI License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1d2157cc0f68856809d82e5c8100d6003d5d1c97/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f796f796f2d696e646578696d612e737667\"></a></p>\n<p>Versions following <a href=\"https://semver.org/\" rel=\"nofollow\">Semantic Versioning</a></p>\n<h2>Overview</h2>\n<p><a href=\"https://indexima.com/\" rel=\"nofollow\">Indexima</a> migration schema based on <a href=\"https://ollycope.com/software/yoyo/latest/\" rel=\"nofollow\">yoyo</a> and <a href=\"https://pypi.org/project/PyHive/\" rel=\"nofollow\">pyhive</a>.</p>\n<blockquote>\n<p>The little story</p>\n<p>In the land of database migration tool, i have tried:</p>\n<ul>\n<li>flyway</li>\n<li>liquidbase with hive extention</li>\n</ul>\n<p>Both either did not support hive (as flyway), or indexima did not fully compliant with hive (wich cause probleme with liquidbase)</p>\n<p>So I try to found a module not too complex in order to migrate our indexima schema in a safe way.</p>\n<p>In this early release, I just trying to do the job.</p>\n</blockquote>\n<h2>Setup</h2>\n<h3>Requirements</h3>\n<ul>\n<li>Python 3.7+</li>\n</ul>\n<h3>Installation</h3>\n<p>Install this library directly into an activated virtual environment:</p>\n<pre>$ pip install yoyo-indexima\n</pre>\n<p>or add it to your <a href=\"https://poetry.eustace.io/\" rel=\"nofollow\">Poetry</a> project:</p>\n<pre>$ poetry add yoyo-indexima\n</pre>\n<h2>Usage</h2>\n<h3>Hive connection</h3>\n<ol>\n<li>backend ui must start with <code>indexima://</code></li>\n<li>If you have trouble to obtain an hive connection, please read <a href=\"http://dwgeek.com/guide-connecting-hiveserver2-using-python-pyhive.html/\" rel=\"nofollow\">http://dwgeek.com/guide-connecting-hiveserver2-using-python-pyhive.html/</a></li>\n</ol>\n<p>Note:\nIf you using python in docker, you should install :</p>\n<pre><code>apt-get update -qq\napt-get install -qqy gcc libsasl2-dev libsasl2-2 libsasl2-modules-gssapi-mit \n</code></pre>\n<h2>Migration</h2>\n<p>You could see a complete sample under 'example' folder.</p>\n<h3>using python client</h3>\n<pre><code>yoyo_indexima\nusage: yoyo_indexima [-h] [-s SOURCE] -u URI {show,apply}\n</code></pre>\n<p>example:</p>\n<pre><code>yoyo_indexima  apply  -s $(pwd)/example/migrations/ -u \"indexima://admin:super_password@localhost:10000/default\"\n</code></pre>\n<p>Commands:</p>\n<ul>\n<li>show                Show migrations</li>\n<li>apply               Apply migrations</li>\n<li>reapply             Reapply migrations</li>\n<li>rollback            Rollback migrations</li>\n<li>mark                Mark migrations as applied, without running them</li>\n<li>unmark              Unmark applied migrations, without rolling them back</li>\n<li>break-lock          Break migration locks</li>\n</ul>\n<p>Help for apply:</p>\n<pre>&gt; yoyo_indexima  apply -h\nusage: yoyo_indexima apply <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>-s SOURCE<span class=\"o\">]</span> -u URI <span class=\"o\">[</span>-f<span class=\"o\">]</span> <span class=\"o\">[</span>-a<span class=\"o\">]</span> <span class=\"o\">[</span>-r REVISION<span class=\"o\">]</span>\n                           <span class=\"o\">[</span>-d<span class=\"o\">]</span>\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -s SOURCE, --source SOURCE\n                        <span class=\"nb\">source</span> path of migration script <span class=\"o\">(</span>default ./migrations<span class=\"o\">)</span>\n  -u URI, --uri URI     backend uri\n  -f, --force           Force apply/rollback of steps even <span class=\"k\">if</span> previous steps\n                        have failed\n  -a, --all             Select all migrations, regardless of whether they have\n                        been previously applied\n  -r REVISION, --revision REVISION\n                        Apply/rollback migration with id REVISION\n  -d, --dry-run         Dry run: no modification will be applied\n</pre>\n<h3>within python code</h3>\n<p>If your migrations script are under directory <code>migration</code> folder</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">yoyo_indexima</span> <span class=\"kn\">import</span> <span class=\"n\">get_backend</span><span class=\"p\">,</span> <span class=\"n\">read_migrations</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># obtain IndeximaBackend</span>\n    <span class=\"n\">backend</span> <span class=\"o\">=</span> <span class=\"n\">get_backend</span><span class=\"p\">(</span><span class=\"s1\">'indexima://admin:super_password@localhost:10000/default?auth=CUSTOM'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Read migrations folder</span>\n    <span class=\"n\">migrations</span> <span class=\"o\">=</span> <span class=\"n\">read_migrations</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span> <span class=\"s1\">'migrations/**/*'</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'migrations: </span><span class=\"si\">{</span><span class=\"n\">migrations</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">migrations</span><span class=\"p\">:</span>\n        <span class=\"c1\"># apply migration</span>\n        <span class=\"k\">with</span> <span class=\"n\">backend</span><span class=\"o\">.</span><span class=\"n\">lock</span><span class=\"p\">():</span>\n            <span class=\"n\">backend</span><span class=\"o\">.</span><span class=\"n\">apply_migrations</span><span class=\"p\">(</span><span class=\"n\">backend</span><span class=\"o\">.</span><span class=\"n\">to_apply</span><span class=\"p\">(</span><span class=\"n\">migrations</span><span class=\"p\">))</span>\n</pre>\n<h3>Management table</h3>\n<p>This tool create in your <code>default</code> schema:</p>\n<ul>\n<li>a log table: 'yoyo_log'</li>\n<li>a lock_table: 'yoyo_lock'</li>\n<li>a version table: 'yoyo_version'</li>\n<li>a migration table: 'yoyo_migration'</li>\n</ul>\n<h3>Migration script template</h3>\n<pre><span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">{message}</span>\n<span class=\"sd\">\"\"\"</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">yoyo</span> <span class=\"kn\">import</span> <span class=\"n\">step</span>\n\n<span class=\"n\">__depends__</span> <span class=\"o\">=</span> <span class=\"p\">{{{</span><span class=\"n\">depends</span><span class=\"p\">}}}</span>\n\n<span class=\"n\">steps</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">step</span><span class=\"p\">(</span><span class=\"s2\">\"create ...\"</span><span class=\"p\">,</span> <span class=\"s2\">\"drop ...\"</span><span class=\"p\">)</span>\n<span class=\"p\">]</span>\n</pre>\n<h3>Configure hive connection</h3>\n<p>In python script, on <code>IndeximaBackend</code>instance, you could use:</p>\n<ul>\n<li><code>set_hive_configuration</code>: A dictionary of Hive settings (functionally same as the <code>set</code> command)</li>\n<li><code>set_hive_thrift_transport</code>: an instance of TSaslClientTransport</li>\n</ul>\n<p>As see in <a href=\"https://github.com/dropbox/PyHive/issues/162\" rel=\"nofollow\">https://github.com/dropbox/PyHive/issues/162</a>, you could do things like that:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sasl</span>\n<span class=\"kn\">from</span> <span class=\"nn\">thrift_sasl</span> <span class=\"kn\">import</span> <span class=\"n\">TSaslClientTransport</span>\n<span class=\"kn\">from</span> <span class=\"nn\">thrift.transport.TSocket</span> <span class=\"kn\">import</span> <span class=\"n\">TSocket</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">create_hive_plain_transport</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">):</span>\n    <span class=\"n\">socket</span> <span class=\"o\">=</span> <span class=\"n\">TSocket</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">)</span>\n    <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">setTimeout</span><span class=\"p\">(</span><span class=\"n\">timeout</span> <span class=\"o\">*</span> <span class=\"mi\">1000</span><span class=\"p\">)</span>\n\n    <span class=\"n\">sasl_auth</span> <span class=\"o\">=</span> <span class=\"s1\">'PLAIN'</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">sasl_factory</span><span class=\"p\">():</span>\n        <span class=\"n\">sasl_client</span> <span class=\"o\">=</span> <span class=\"n\">sasl</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">()</span>\n        <span class=\"n\">sasl_client</span><span class=\"o\">.</span><span class=\"n\">setAttr</span><span class=\"p\">(</span><span class=\"s1\">'host'</span><span class=\"p\">,</span> <span class=\"n\">host</span><span class=\"p\">)</span>\n        <span class=\"n\">sasl_client</span><span class=\"o\">.</span><span class=\"n\">setAttr</span><span class=\"p\">(</span><span class=\"s1\">'username'</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"p\">)</span>\n        <span class=\"n\">sasl_client</span><span class=\"o\">.</span><span class=\"n\">setAttr</span><span class=\"p\">(</span><span class=\"s1\">'password'</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">)</span>\n        <span class=\"n\">sasl_client</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"n\">sasl_client</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">TSaslClientTransport</span><span class=\"p\">(</span><span class=\"n\">sasl_factory</span><span class=\"p\">,</span> <span class=\"n\">sasl_auth</span><span class=\"p\">,</span> <span class=\"n\">socket</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">backend</span> <span class=\"o\">=</span> <span class=\"n\">get_backend</span><span class=\"p\">(</span><span class=\"s1\">'indexima://admin:super_password@localhost:10000/default?auth=CUSTOM'</span><span class=\"p\">)</span>\n<span class=\"n\">backend</span><span class=\"o\">.</span><span class=\"n\">set_hive_thrift_transport</span><span class=\"p\">(</span><span class=\"n\">create_hive_plain_transport</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">))</span>\n</pre>\n<h3>Extends IndeximaBackend</h3>\n<p>If you extends <code>IndeximaBackend</code> you could register your classes, in the function:\n<code>get_backend(uri: str, backend=IndeximaBackend) -&gt; DatabaseBackend:</code></p>\n<p>TODO: add a client parameter to specify full class name in cli.</p>\n<h2>License</h2>\n<p><a href=\"https://geronimo-iia.github.io/yoyo-indexima/license\" rel=\"nofollow\">The MIT License (MIT)</a></p>\n<h2>Contributing</h2>\n<p>See <a href=\"https://geronimo-iia.github.io/yoyo-indexima/contributing\" rel=\"nofollow\">Contributing</a></p>\n<h2>Next step</h2>\n<ul>\n<li>production usage in order to see how this tool made the job</li>\n<li>more documentation in code</li>\n<li>purpose few change in 'yoyo' like set all SQL command on Backend class</li>\n<li>...</li>\n</ul>\n\n          </div>"}, "last_serial": 6280243, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "63a9ceb6d2140f8e5b6fb8d30d095602", "sha256": "9b7eed561195c092e1bb753153005f37283f74534127afb92eb12506303019df"}, "downloads": -1, "filename": "yoyo_indexima-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "63a9ceb6d2140f8e5b6fb8d30d095602", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 8999, "upload_time": "2019-11-20T12:57:24", "upload_time_iso_8601": "2019-11-20T12:57:24.669425Z", "url": "https://files.pythonhosted.org/packages/ce/63/abffec94195221749c104967d82853dc4dfa12ec85cf7509f5e66cf36edb/yoyo_indexima-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec7e75655afcc7b17243c599670ce4b0", "sha256": "a36a31b8220ae92217253994b20c4d161f45d9ef3c0e5e2fadb1bd71407003fa"}, "downloads": -1, "filename": "yoyo_indexima-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ec7e75655afcc7b17243c599670ce4b0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 8696, "upload_time": "2019-11-20T12:57:27", "upload_time_iso_8601": "2019-11-20T12:57:27.290213Z", "url": "https://files.pythonhosted.org/packages/b4/4d/44dd691518e7377b081627c088baf1f145da7964e782f902ee96d24c01dd/yoyo_indexima-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "71fb3f5fed162a7baed41d4b632bb18a", "sha256": "3de9c40c9189db1b8e2d2ab892f8d452181b96e994d20d2b91e9c67ecf9702a7"}, "downloads": -1, "filename": "yoyo_indexima-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "71fb3f5fed162a7baed41d4b632bb18a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 15327, "upload_time": "2019-12-02T14:35:58", "upload_time_iso_8601": "2019-12-02T14:35:58.064036Z", "url": "https://files.pythonhosted.org/packages/10/b5/3129ce1c66e8d3df023685569032df574e5b1a810bdf81efba979331b34b/yoyo_indexima-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c0d22810bcf491715dcbac2bb9cdb10", "sha256": "deafc6d92e56b48f7455084be4d2d893d094e24d7cab6f1ddfaeebf107324a60"}, "downloads": -1, "filename": "yoyo_indexima-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6c0d22810bcf491715dcbac2bb9cdb10", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 13985, "upload_time": "2019-12-02T14:35:59", "upload_time_iso_8601": "2019-12-02T14:35:59.558708Z", "url": "https://files.pythonhosted.org/packages/3f/70/db45373769d80b6e5d27ed1e0438a790460032f2b2280f1af56ad5dcd3f0/yoyo_indexima-0.1.0.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "d72f06dc7a594eaf4e25cf2f0afa06ea", "sha256": "3c33d940763f92f24bb7df8ca6f8c0b028f090435f846c05961e127e6d2a4909"}, "downloads": -1, "filename": "yoyo_indexima-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d72f06dc7a594eaf4e25cf2f0afa06ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 15993, "upload_time": "2019-12-11T17:21:52", "upload_time_iso_8601": "2019-12-11T17:21:52.647355Z", "url": "https://files.pythonhosted.org/packages/bd/0a/316212aa387559d1920542b43db45d55feaa6b937f974363b72dac567109/yoyo_indexima-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58dafc9f33c443ffede96c76d06dc9eb", "sha256": "7924ca75934089fdfa278ef13d2f6b6270999aecc6ef3227e75e07d8735ee29d"}, "downloads": -1, "filename": "yoyo_indexima-0.1.2.tar.gz", "has_sig": false, "md5_digest": "58dafc9f33c443ffede96c76d06dc9eb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 15221, "upload_time": "2019-12-11T17:21:54", "upload_time_iso_8601": "2019-12-11T17:21:54.408762Z", "url": "https://files.pythonhosted.org/packages/9e/8b/230f42cddf45940ca5f343dccc1b2797d1e6ca1d76ea762020a800d73c28/yoyo_indexima-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "d31de469f64655c1197483c2637a9879", "sha256": "0f15b0f3c7b5e863b1a5991c38021791bf8132364d6a28593ef3183e482b999e"}, "downloads": -1, "filename": "yoyo_indexima-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d31de469f64655c1197483c2637a9879", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 15991, "upload_time": "2019-12-11T17:27:39", "upload_time_iso_8601": "2019-12-11T17:27:39.803260Z", "url": "https://files.pythonhosted.org/packages/c2/ef/304362fe869d4c41e078bb54482a50ea6eaf63834736389a9c10088313a5/yoyo_indexima-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b0acc72a7620ea60d8f2f08abca377b9", "sha256": "5cee9b5ac3d4b51a397eb40d15ea515e5760bba6623e56cc21e3077c61b633d6"}, "downloads": -1, "filename": "yoyo_indexima-0.1.3.tar.gz", "has_sig": false, "md5_digest": "b0acc72a7620ea60d8f2f08abca377b9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 15225, "upload_time": "2019-12-11T17:27:41", "upload_time_iso_8601": "2019-12-11T17:27:41.518856Z", "url": "https://files.pythonhosted.org/packages/f8/8d/16041cec567b05103c2d4e4c0fa8929ddb0fa21807eec163db11896834af/yoyo_indexima-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d31de469f64655c1197483c2637a9879", "sha256": "0f15b0f3c7b5e863b1a5991c38021791bf8132364d6a28593ef3183e482b999e"}, "downloads": -1, "filename": "yoyo_indexima-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d31de469f64655c1197483c2637a9879", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 15991, "upload_time": "2019-12-11T17:27:39", "upload_time_iso_8601": "2019-12-11T17:27:39.803260Z", "url": "https://files.pythonhosted.org/packages/c2/ef/304362fe869d4c41e078bb54482a50ea6eaf63834736389a9c10088313a5/yoyo_indexima-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b0acc72a7620ea60d8f2f08abca377b9", "sha256": "5cee9b5ac3d4b51a397eb40d15ea515e5760bba6623e56cc21e3077c61b633d6"}, "downloads": -1, "filename": "yoyo_indexima-0.1.3.tar.gz", "has_sig": false, "md5_digest": "b0acc72a7620ea60d8f2f08abca377b9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 15225, "upload_time": "2019-12-11T17:27:41", "upload_time_iso_8601": "2019-12-11T17:27:41.518856Z", "url": "https://files.pythonhosted.org/packages/f8/8d/16041cec567b05103c2d4e4c0fa8929ddb0fa21807eec163db11896834af/yoyo_indexima-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:21:39 2020"}