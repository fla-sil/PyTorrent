{"info": {"author": "NoRestLabs", "author_email": "galen@norestlabs.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "# Layernode\n\nLayernode is a peer-managed node that extends the functionality of the Layer Protocol and the LRX token. It caches data from the Layer network, performs computations, handles LRX token staking and more.\n\n## Local MySQL server\n\n- Install mysql server\n\n```\nsudo apt-get update\nsudo apt-get install mysql-server\nmysql_secure_installation\n```\n\n- Logon to MySQL using root user, and run the following sql\n\n```\nCREATE DATABASE layernode;\nCREATE USER 'layer_user'@'%' IDENTIFIED BY 'layer_password';  \nGRANT ALL PRIVILEGES ON layernode.* TO 'layer_user'@'%';\nFLUSH PRIVILEGES;\n```\n\n## IPFS setup\n\n- ipfs setup\n\n```\nsudo apt-get update\nsudo apt-get install golang-go -y\nwget https://dist.ipfs.io/go-ipfs/v0.4.10/go-ipfs_v0.4.10_linux-386.tar.gz\ntar xvfz go-ipfs_v0.4.10_linux-386.tar.gz\nsudo mv go-ipfs/ipfs /usr/local/bin/ipfs\n```\n\n- ipfs config creation\n\n```\nipfs init\nipfs daemon\n```\n\n- ipfs service\n\n```\ncp ./ipfs.service /etc/systemd/system/ipfs.service\nsystemctl daemon-reload\nsystemctl enable ipfs.service\nsystemctl start ipfs\nservice ipfs status\n```\n\n## Install dependency and create python3 virtual environment\n\nLayernode only works and tested on Python 3 and above.\n\n```\nsudo apt-get install build-essential\nsudo apt-get install python3-dev\nsudo apt-get install python3-setuptools\n\ngit clone https://github.com/LayerProtocol/layernode\ncd layernode\nvirtualenv venv -p python3\nsource venv/bin/activate\npip install layernode\n```\n\n## Create and update config\n\n- create config to ~/.layernode\n```\nlayernode -h\n```\n\n- update config\n> my_ip  \n> geth_rpc_host  \n> signer_endpoint  \n> ipfs\n\n## How to run\n\n```cli.py``` module offers a cool CLI to interact with the blockchain engine. When you install this package, you can call this module by 'layernode' executable.\n\nYou can start the client by running\n\n```\nlayernode start\n```\n\nEvery service associated with blockchain runs at startup. This implies that your client will immediately start synchronizing with p2p network.\nInitial peer list is hard-coded into client but you can update this list by updating your config file. Config file can be specified at startup or can be edited manually after first start.\nDefault data folder is inside your home directory and named ```.layernode```.\n\n## run layernode service on terminal\n\n- run layernode on console\n\n```\nlayernode start\n```\n\n- show layernode commands\n\n```\nlayernode -h\n```\n\n- stop layernode service\n\n```\nlayernode stop\n```\n\n## run layernode service by daemon\n\nThis daemonize will be updated later just like bitcoind.\n```\nlayernode start > /dev/null 2>&1 &\n```\n\nThis project is maintained by the @LayerProtocol team, with specific development inquiries directed to:\n\n- @gedanziger\n- @oleg-baturov\n- @ohtayoshida\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LayerProtocol/layernode.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "Layernode", "package_url": "https://pypi.org/project/Layernode/", "platform": "", "project_url": "https://pypi.org/project/Layernode/", "project_urls": {"Homepage": "https://github.com/LayerProtocol/layernode.git"}, "release_url": "https://pypi.org/project/Layernode/0.0.3/", "requires_dist": ["altgraph", "dnspython", "wheel", "pyyaml", "flask", "flask-socketio", "m3-cdecimal", "pyopenssl", "werkzeug", "tabulate", "ecdsa", "plyvel", "layer-py", "enum-compat", "eventlet", "future", "greenlet", "ipfsapi", "macholib", "pefile", "psutil", "PyInstaller", "PyMySQL", "python-slugify", "requests-toolbelt", "simplekv", "SQLAlchemy", "Unidecode", "websocket-client"], "requires_python": "", "summary": "LayerProtocol blockchain", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Layernode</h1>\n<p>Layernode is a peer-managed node that extends the functionality of the Layer Protocol and the LRX token. It caches data from the Layer network, performs computations, handles LRX token staking and more.</p>\n<h2>Local MySQL server</h2>\n<ul>\n<li>Install mysql server</li>\n</ul>\n<pre><code>sudo apt-get update\nsudo apt-get install mysql-server\nmysql_secure_installation\n</code></pre>\n<ul>\n<li>Logon to MySQL using root user, and run the following sql</li>\n</ul>\n<pre><code>CREATE DATABASE layernode;\nCREATE USER 'layer_user'@'%' IDENTIFIED BY 'layer_password';  \nGRANT ALL PRIVILEGES ON layernode.* TO 'layer_user'@'%';\nFLUSH PRIVILEGES;\n</code></pre>\n<h2>IPFS setup</h2>\n<ul>\n<li>ipfs setup</li>\n</ul>\n<pre><code>sudo apt-get update\nsudo apt-get install golang-go -y\nwget https://dist.ipfs.io/go-ipfs/v0.4.10/go-ipfs_v0.4.10_linux-386.tar.gz\ntar xvfz go-ipfs_v0.4.10_linux-386.tar.gz\nsudo mv go-ipfs/ipfs /usr/local/bin/ipfs\n</code></pre>\n<ul>\n<li>ipfs config creation</li>\n</ul>\n<pre><code>ipfs init\nipfs daemon\n</code></pre>\n<ul>\n<li>ipfs service</li>\n</ul>\n<pre><code>cp ./ipfs.service /etc/systemd/system/ipfs.service\nsystemctl daemon-reload\nsystemctl enable ipfs.service\nsystemctl start ipfs\nservice ipfs status\n</code></pre>\n<h2>Install dependency and create python3 virtual environment</h2>\n<p>Layernode only works and tested on Python 3 and above.</p>\n<pre><code>sudo apt-get install build-essential\nsudo apt-get install python3-dev\nsudo apt-get install python3-setuptools\n\ngit clone https://github.com/LayerProtocol/layernode\ncd layernode\nvirtualenv venv -p python3\nsource venv/bin/activate\npip install layernode\n</code></pre>\n<h2>Create and update config</h2>\n<ul>\n<li>create config to ~/.layernode</li>\n</ul>\n<pre><code>layernode -h\n</code></pre>\n<ul>\n<li>update config</li>\n</ul>\n<blockquote>\n<p>my_ip<br>\ngeth_rpc_host<br>\nsigner_endpoint<br>\nipfs</p>\n</blockquote>\n<h2>How to run</h2>\n<p><code>cli.py</code> module offers a cool CLI to interact with the blockchain engine. When you install this package, you can call this module by 'layernode' executable.</p>\n<p>You can start the client by running</p>\n<pre><code>layernode start\n</code></pre>\n<p>Every service associated with blockchain runs at startup. This implies that your client will immediately start synchronizing with p2p network.\nInitial peer list is hard-coded into client but you can update this list by updating your config file. Config file can be specified at startup or can be edited manually after first start.\nDefault data folder is inside your home directory and named <code>.layernode</code>.</p>\n<h2>run layernode service on terminal</h2>\n<ul>\n<li>run layernode on console</li>\n</ul>\n<pre><code>layernode start\n</code></pre>\n<ul>\n<li>show layernode commands</li>\n</ul>\n<pre><code>layernode -h\n</code></pre>\n<ul>\n<li>stop layernode service</li>\n</ul>\n<pre><code>layernode stop\n</code></pre>\n<h2>run layernode service by daemon</h2>\n<p>This daemonize will be updated later just like bitcoind.</p>\n<pre><code>layernode start &gt; /dev/null 2&gt;&amp;1 &amp;\n</code></pre>\n<p>This project is maintained by the @LayerProtocol team, with specific development inquiries directed to:</p>\n<ul>\n<li>@gedanziger</li>\n<li>@oleg-baturov</li>\n<li>@ohtayoshida</li>\n</ul>\n\n          </div>"}, "last_serial": 4407905, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d10ae384a8ce786f09c075b1f42845ad", "sha256": "5a14966851f8d8e8e3e6db21006f38a06651fd8793c4a71f4b00037e5cd61703"}, "downloads": -1, "filename": "Layernode-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d10ae384a8ce786f09c075b1f42845ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32851, "upload_time": "2018-10-23T19:25:34", "upload_time_iso_8601": "2018-10-23T19:25:34.434114Z", "url": "https://files.pythonhosted.org/packages/49/fd/f65d79087fc3c1090c496f300c2e7e4f0f9b1089b3c7c7c54caf1421fa96/Layernode-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29b63c8a40355fae3c026f239c6f3275", "sha256": "04e05439e3629228dff91ee33c1b9d286785b2fb6aa8abb9c3f08e6cded38fe5"}, "downloads": -1, "filename": "Layernode-0.0.1.tar.gz", "has_sig": false, "md5_digest": "29b63c8a40355fae3c026f239c6f3275", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26993, "upload_time": "2018-10-23T19:25:36", "upload_time_iso_8601": "2018-10-23T19:25:36.505548Z", "url": "https://files.pythonhosted.org/packages/33/35/81585c211e68dc9326ceeb59740db6460a705f6fcb678a64289d5703ccac/Layernode-0.0.1.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "3c57e1582146aaac100de73a80dab287", "sha256": "5d8bd84f3685d50351aef00bc300558218703dccfcea206c234113982137f706"}, "downloads": -1, "filename": "Layernode-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3c57e1582146aaac100de73a80dab287", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 34216, "upload_time": "2018-10-23T19:59:32", "upload_time_iso_8601": "2018-10-23T19:59:32.464497Z", "url": "https://files.pythonhosted.org/packages/a3/bc/227795d3a32df5c4a3b251794f20ec2b7b5cda276febbf97f5745882b84a/Layernode-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2b09f45a561b9196d7fc132d3e66c76", "sha256": "be5a288018b5069f5a3533ee5146d4a1bbd5adc8e370fb74fdcd08130358ab64"}, "downloads": -1, "filename": "Layernode-0.0.3.tar.gz", "has_sig": false, "md5_digest": "a2b09f45a561b9196d7fc132d3e66c76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27797, "upload_time": "2018-10-23T19:59:34", "upload_time_iso_8601": "2018-10-23T19:59:34.216981Z", "url": "https://files.pythonhosted.org/packages/8c/d0/96cf7b900212909deef420a96ca9afdcc8409b88efe10f724d9cb725d171/Layernode-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3c57e1582146aaac100de73a80dab287", "sha256": "5d8bd84f3685d50351aef00bc300558218703dccfcea206c234113982137f706"}, "downloads": -1, "filename": "Layernode-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3c57e1582146aaac100de73a80dab287", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 34216, "upload_time": "2018-10-23T19:59:32", "upload_time_iso_8601": "2018-10-23T19:59:32.464497Z", "url": "https://files.pythonhosted.org/packages/a3/bc/227795d3a32df5c4a3b251794f20ec2b7b5cda276febbf97f5745882b84a/Layernode-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2b09f45a561b9196d7fc132d3e66c76", "sha256": "be5a288018b5069f5a3533ee5146d4a1bbd5adc8e370fb74fdcd08130358ab64"}, "downloads": -1, "filename": "Layernode-0.0.3.tar.gz", "has_sig": false, "md5_digest": "a2b09f45a561b9196d7fc132d3e66c76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27797, "upload_time": "2018-10-23T19:59:34", "upload_time_iso_8601": "2018-10-23T19:59:34.216981Z", "url": "https://files.pythonhosted.org/packages/8c/d0/96cf7b900212909deef420a96ca9afdcc8409b88efe10f724d9cb725d171/Layernode-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:39 2020"}