{"info": {"author": "Peter Gardfj\u00e4ll", "author_email": "peter.gardfjall.work@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "[![Build Status](https://travis-ci.org/petergardfjall/garminexport.svg?branch=master)](https://travis-ci.org/petergardfjall/garminexport)\n\n# About\n`garminexport` is both a library and a utility script for downloading/backing up\n[Garmin Connect](http://connect.garmin.com/) activities to a local disk.\n\nThe main utility script is called `garmin-backup` and performs incremental\nbackups of your Garmin account to a local directory. The first time\n`garmin-backup` is run, it will download *all* activities. After that, it will\ndo incremental backups of your account. That is, the script will only download\nactivities that haven't already been downloaded to the backup directory.\n\n\n# Installation\n`garminexport` is available on [PyPi](https://pypi.org/) and can be installed\nwith [pip](http://pip.readthedocs.org):\n\n    pip install garminexport\n\nIt requires Python 3.5+.\n\n\n# Usage\n\n\n## Prerequisites\nTo be of any use you need to register an account at [Garmin\nConnect](http://connect.garmin.com/) and populate it with some activities.\n\n\n## As a command-line tool (garmin-backup)\n\nThe backup program is run as follows (use the `--help` flag for a full list of\navailable options):\n\n    garmin-backup --backup-dir=activities <username or email>\n\nOnce started, the program will prompt you for your account password and then log\nin to your Garmin Connect account to download activities to the specified backup\ndirectory on your machine. The program will only download activities that aren't\nalready in the backup directory.\n\nActivities can be exported in any of the formats outlined below. Note that\nby default, the program downloads all formats for every activity. Use the\n`--format` option to narrow the selection.\n\nSupported export formats:\n\n\n  -   `gpx`: activity GPX file (XML).\n\n      <sub>[GPX](https://en.wikipedia.org/wiki/GPS_Exchange_Format) is an open\n      format, mainly for storing GPS routes/tracks. It does support extensions\n      and Garmin appears to annotate the GPS data with, for example, heart-rate\n      and cadence, when available on your device.</sub>\n\n  -   `tcx`: an activity TCX file (XML).\n      *Note: a `.tcx` file may not always be possible to export, for example\n      if an activity was uploaded in gpx format. In that case, Garmin won't try\n      to synthesize a tcx file.*\n\n      <sub>[TCX](https://en.wikipedia.org/wiki/Training_Center_XML) (Training\n      Center XML) is Garmin's own XML format. It is, essentially, an extension\n      of GPX which includes more metrics and divides the GPS track into \"laps\"\n      as recorded by your device (with \"lap summaries\" for each metric).</sub>\n\n  -   `fit`: activity FIT file (binary format).\n      *Note: a `.fit` file may not always be possible to export, for example\n      if an activity was entered manually rather than imported from a Garmin device.*\n\n      <sub>The [FIT](https://www.thisisant.com/resources/fit/) format is the\n      \"raw data type\" stored in your Garmin device and should contain all\n      metrics your device is capable of tracking (GPS, heart rate, cadence,\n      etc). It's a binary format, so tools are needed to read its content.</sub>\n\n  -   `json_summary`: activity summary file (JSON).\n\n      <sub>Provides summary data for an activity. Seems to lack a formal schema\n      and should not be counted on as a stable data format (it may change at any\n      time). Only included since it *may* contain additional data that could be\n      useful for developers of analysis tools.</sub>\n\n  -   `json_details`: activity details file (JSON).\n\n      <sub>Provides detailed activity data in a JSON format. Seems to lack a\n      formal schema and should not be counted on as a stable data format (it may\n      change at any time). Only included since it *may* contain additional data\n      that could be useful for developers of analysis tools.</sub>\n\nAll files are written to the same directory (`activities/` by default).  Each\nactivity file is prefixed by its upload timestamp and its activity id.\n\n\n`garminexport` also contains a few smaller utility programs:\n\n- `garmin-get-activity`: download a single Garmin Connect activity. Run with\n  `--help`for more details.\n- `garmin-upload-activity`: uplad a single Garmin Connect activity file (`.fit`,\n  `.gpx`, or `.tcx`). Run with `--help`for more details.\n\n\n## As a library\n\nTo build your own tools around the Garmin Connect API you can import the\n`garminclient` module. It handles authentication to establish a secure session\nwith Garmin Connect. For example use, have a look at the command-line tools\nunder [garminexport/cli](garminexport/cli).\n\n\n# Contribute\n\nTo work on the code base you need (besides the basic prerequisites outlined\nabove) to have [pipenv](https://github.com/pypa/pipenv) installed.  Create a\n`virtualenv` (an isolated development environment) and install the required\ndependencies like so:\n\n\n    make venv\n    # or similarly: pipenv install\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/petergardfjall/garminexport", "keywords": "garmin export backup", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "garminexport", "package_url": "https://pypi.org/project/garminexport/", "platform": "", "project_url": "https://pypi.org/project/garminexport/", "project_urls": {"Homepage": "https://github.com/petergardfjall/garminexport", "Source": "https://github.com/petergardfjall/garminexport.git", "Tracker": "https://github.com/petergardfjall/garminexport/issues"}, "release_url": "https://pypi.org/project/garminexport/0.1.0/", "requires_dist": ["requests (<3,>=2.0)", "python-dateutil (~=2.4)"], "requires_python": ">=3.5.*, <4", "summary": "Garmin Connect activity exporter and backup tool", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/petergardfjall/garminexport\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9792d8a2a3c7a62497d20a321f008c6c567eecfd/68747470733a2f2f7472617669732d63692e6f72672f706574657267617264666a616c6c2f6761726d696e6578706f72742e7376673f6272616e63683d6d6173746572\"></a></p>\n<h1>About</h1>\n<p><code>garminexport</code> is both a library and a utility script for downloading/backing up\n<a href=\"http://connect.garmin.com/\" rel=\"nofollow\">Garmin Connect</a> activities to a local disk.</p>\n<p>The main utility script is called <code>garmin-backup</code> and performs incremental\nbackups of your Garmin account to a local directory. The first time\n<code>garmin-backup</code> is run, it will download <em>all</em> activities. After that, it will\ndo incremental backups of your account. That is, the script will only download\nactivities that haven't already been downloaded to the backup directory.</p>\n<h1>Installation</h1>\n<p><code>garminexport</code> is available on <a href=\"https://pypi.org/\" rel=\"nofollow\">PyPi</a> and can be installed\nwith <a href=\"http://pip.readthedocs.org\" rel=\"nofollow\">pip</a>:</p>\n<pre><code>pip install garminexport\n</code></pre>\n<p>It requires Python 3.5+.</p>\n<h1>Usage</h1>\n<h2>Prerequisites</h2>\n<p>To be of any use you need to register an account at <a href=\"http://connect.garmin.com/\" rel=\"nofollow\">Garmin\nConnect</a> and populate it with some activities.</p>\n<h2>As a command-line tool (garmin-backup)</h2>\n<p>The backup program is run as follows (use the <code>--help</code> flag for a full list of\navailable options):</p>\n<pre><code>garmin-backup --backup-dir=activities &lt;username or email&gt;\n</code></pre>\n<p>Once started, the program will prompt you for your account password and then log\nin to your Garmin Connect account to download activities to the specified backup\ndirectory on your machine. The program will only download activities that aren't\nalready in the backup directory.</p>\n<p>Activities can be exported in any of the formats outlined below. Note that\nby default, the program downloads all formats for every activity. Use the\n<code>--format</code> option to narrow the selection.</p>\n<p>Supported export formats:</p>\n<ul>\n<li>\n<p><code>gpx</code>: activity GPX file (XML).</p>\n<p><sub><a href=\"https://en.wikipedia.org/wiki/GPS_Exchange_Format\" rel=\"nofollow\">GPX</a> is an open\nformat, mainly for storing GPS routes/tracks. It does support extensions\nand Garmin appears to annotate the GPS data with, for example, heart-rate\nand cadence, when available on your device.</sub></p>\n</li>\n<li>\n<p><code>tcx</code>: an activity TCX file (XML).\n<em>Note: a <code>.tcx</code> file may not always be possible to export, for example\nif an activity was uploaded in gpx format. In that case, Garmin won't try\nto synthesize a tcx file.</em></p>\n<p><sub><a href=\"https://en.wikipedia.org/wiki/Training_Center_XML\" rel=\"nofollow\">TCX</a> (Training\nCenter XML) is Garmin's own XML format. It is, essentially, an extension\nof GPX which includes more metrics and divides the GPS track into \"laps\"\nas recorded by your device (with \"lap summaries\" for each metric).</sub></p>\n</li>\n<li>\n<p><code>fit</code>: activity FIT file (binary format).\n<em>Note: a <code>.fit</code> file may not always be possible to export, for example\nif an activity was entered manually rather than imported from a Garmin device.</em></p>\n<p><sub>The <a href=\"https://www.thisisant.com/resources/fit/\" rel=\"nofollow\">FIT</a> format is the\n\"raw data type\" stored in your Garmin device and should contain all\nmetrics your device is capable of tracking (GPS, heart rate, cadence,\netc). It's a binary format, so tools are needed to read its content.</sub></p>\n</li>\n<li>\n<p><code>json_summary</code>: activity summary file (JSON).</p>\n<p><sub>Provides summary data for an activity. Seems to lack a formal schema\nand should not be counted on as a stable data format (it may change at any\ntime). Only included since it <em>may</em> contain additional data that could be\nuseful for developers of analysis tools.</sub></p>\n</li>\n<li>\n<p><code>json_details</code>: activity details file (JSON).</p>\n<p><sub>Provides detailed activity data in a JSON format. Seems to lack a\nformal schema and should not be counted on as a stable data format (it may\nchange at any time). Only included since it <em>may</em> contain additional data\nthat could be useful for developers of analysis tools.</sub></p>\n</li>\n</ul>\n<p>All files are written to the same directory (<code>activities/</code> by default).  Each\nactivity file is prefixed by its upload timestamp and its activity id.</p>\n<p><code>garminexport</code> also contains a few smaller utility programs:</p>\n<ul>\n<li><code>garmin-get-activity</code>: download a single Garmin Connect activity. Run with\n<code>--help</code>for more details.</li>\n<li><code>garmin-upload-activity</code>: uplad a single Garmin Connect activity file (<code>.fit</code>,\n<code>.gpx</code>, or <code>.tcx</code>). Run with <code>--help</code>for more details.</li>\n</ul>\n<h2>As a library</h2>\n<p>To build your own tools around the Garmin Connect API you can import the\n<code>garminclient</code> module. It handles authentication to establish a secure session\nwith Garmin Connect. For example use, have a look at the command-line tools\nunder <a href=\"garminexport/cli\" rel=\"nofollow\">garminexport/cli</a>.</p>\n<h1>Contribute</h1>\n<p>To work on the code base you need (besides the basic prerequisites outlined\nabove) to have <a href=\"https://github.com/pypa/pipenv\" rel=\"nofollow\">pipenv</a> installed.  Create a\n<code>virtualenv</code> (an isolated development environment) and install the required\ndependencies like so:</p>\n<pre><code>make venv\n# or similarly: pipenv install\n</code></pre>\n\n          </div>"}, "last_serial": 6979795, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e6a8023e6aa0341ee8bb918b694beb2f", "sha256": "892760cf08b93b50ce54f9dea2d4b3723fc809acd6ae705aa50db892fb73ce80"}, "downloads": -1, "filename": "garminexport-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e6a8023e6aa0341ee8bb918b694beb2f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*, <4", "size": 23886, "upload_time": "2020-04-08T18:43:14", "upload_time_iso_8601": "2020-04-08T18:43:14.043046Z", "url": "https://files.pythonhosted.org/packages/8d/10/90ec57eae9e785d68d41bb6adccb45cb2ad3dd6aec133e31137e53f057d7/garminexport-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d057f94e954fa1a80affb7233baa3c2", "sha256": "a7a06bff65637f8aa11a323478340c0537dc386e7c62b44cee328c2196801db1"}, "downloads": -1, "filename": "garminexport-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2d057f94e954fa1a80affb7233baa3c2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*, <4", "size": 17761, "upload_time": "2020-04-08T18:43:16", "upload_time_iso_8601": "2020-04-08T18:43:16.437206Z", "url": "https://files.pythonhosted.org/packages/c4/e9/082050f0428ca1043229ae86d493a3c22fd00e70c8ae5916e37ccbeeac12/garminexport-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e6a8023e6aa0341ee8bb918b694beb2f", "sha256": "892760cf08b93b50ce54f9dea2d4b3723fc809acd6ae705aa50db892fb73ce80"}, "downloads": -1, "filename": "garminexport-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e6a8023e6aa0341ee8bb918b694beb2f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.*, <4", "size": 23886, "upload_time": "2020-04-08T18:43:14", "upload_time_iso_8601": "2020-04-08T18:43:14.043046Z", "url": "https://files.pythonhosted.org/packages/8d/10/90ec57eae9e785d68d41bb6adccb45cb2ad3dd6aec133e31137e53f057d7/garminexport-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d057f94e954fa1a80affb7233baa3c2", "sha256": "a7a06bff65637f8aa11a323478340c0537dc386e7c62b44cee328c2196801db1"}, "downloads": -1, "filename": "garminexport-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2d057f94e954fa1a80affb7233baa3c2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*, <4", "size": 17761, "upload_time": "2020-04-08T18:43:16", "upload_time_iso_8601": "2020-04-08T18:43:16.437206Z", "url": "https://files.pythonhosted.org/packages/c4/e9/082050f0428ca1043229ae86d493a3c22fd00e70c8ae5916e37ccbeeac12/garminexport-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:59:02 2020"}