{"info": {"author": "Daniel Grie\u00dfhaber", "author_email": "dangrie158@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "License :: OSI Approved :: MIT License", "Topic :: Utilities"], "description": "############\nEEPROgraMmer\n############\n\n*************************\nArduino EEPROM Programmer\n*************************\n\nUniversal Programmer for parallel EEPROMS using a python CLI and\na simple Arduino with 2 shift-registers to interface the EEPROM.\n\nBased on the [Arduino Code](https://github.com/beneater/eeprom-programmer) written by [Ben Eater](https://eater.net).\n\nInstall\n-------\n\n1. ``pip install eepro``\n2. Flash an Arduino with the sketch in ``Arduino/EEPROgraMmer``\n3. Connect the Arduino to the external components following the schematic.\n\n*********\nSchematic\n*********\n\ncheck out the [original project](https://github.com/beneater/eeprom-programmer)\n\n********\nSynopsys\n********\n\n.. code::\n\n    usage: eepro [-h] -p PORT [-f FILE] [-b BAUD] [-s SIZE] [-w | -r] [-v] [-c]\n                [--check-empty]\n\n    Write to or read from an EEPROM\n\n    optional arguments:\n    -h, --help            show this help message and exit\n    -p PORT, --port PORT  serial port to the programmer\n    -f FILE, --file FILE  binary file to write\n    -b BAUD, --baud BAUD  baudrate for communication with the programmer\n    -s SIZE, --size SIZE  size of the EEPROM in bytes\n    -w                    write <file> to the EEPROM\n    -r                    read the contents of the EEPROM into file\n    -v                    verify file contents after writing\n    -c                    clear the EEPROM (with 0xff bytes) before writing or\n                            reading\n    --check-empty         make sure the EEPROM is empty (filled with 0xff)\n\n********\nExamples\n********\n\nClear an EEPROM\n---------------\n\nClear the first 2048 bytes of the EEPROM and read back to make\nsure they are set accordingly\n\n.. code::\n\n    ./eepro --port /dev/tty.wchusbserial1440 -c --check-empty -s=2048\n\nWrite a binary file to the EEPROM\n---------------------------------\n\nThe following command will clear the EEPROM, write the contents\nof ``firmware.bin`` and reads back the content\n\n.. code::\n\n    ./eepro --port /dev/tty.wchusbserial1440 -cvwf firmware.bin -s=2048\n\nDump EEPROM Contents\n--------------------\n\nRead the first 2048 bytes of the EEPROM and write the result into\n``firmware.bin``. The content is then read again to check against errors.\n\n.. code::\n\n    ./eepro --port /dev/tty.wchusbserial1440 -vrf firmware.bin -s=2048\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dangrie158/EEPROgraMmer", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "eepro", "package_url": "https://pypi.org/project/eepro/", "platform": "", "project_url": "https://pypi.org/project/eepro/", "project_urls": {"Homepage": "https://github.com/dangrie158/EEPROgraMmer"}, "release_url": "https://pypi.org/project/eepro/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Arduino based EEPROM Programmer for parallel EEPROMS", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"arduino-eeprom-programmer\">\n<h2>Arduino EEPROM Programmer</h2>\n<p>Universal Programmer for parallel EEPROMS using a python CLI and\na simple Arduino with 2 shift-registers to interface the EEPROM.</p>\n<p>Based on the [Arduino Code](<a href=\"https://github.com/beneater/eeprom-programmer\" rel=\"nofollow\">https://github.com/beneater/eeprom-programmer</a>) written by [Ben Eater](<a href=\"https://eater.net\" rel=\"nofollow\">https://eater.net</a>).</p>\n<div id=\"install\">\n<h3>Install</h3>\n<ol>\n<li><tt>pip install eepro</tt></li>\n<li>Flash an Arduino with the sketch in <tt>Arduino/EEPROgraMmer</tt></li>\n<li>Connect the Arduino to the external components following the schematic.</li>\n</ol>\n</div>\n</div>\n<div id=\"schematic\">\n<h2>Schematic</h2>\n<p>check out the [original project](<a href=\"https://github.com/beneater/eeprom-programmer\" rel=\"nofollow\">https://github.com/beneater/eeprom-programmer</a>)</p>\n</div>\n<div id=\"synopsys\">\n<h2>Synopsys</h2>\n<pre>usage: eepro [-h] -p PORT [-f FILE] [-b BAUD] [-s SIZE] [-w | -r] [-v] [-c]\n            [--check-empty]\n\nWrite to or read from an EEPROM\n\noptional arguments:\n-h, --help            show this help message and exit\n-p PORT, --port PORT  serial port to the programmer\n-f FILE, --file FILE  binary file to write\n-b BAUD, --baud BAUD  baudrate for communication with the programmer\n-s SIZE, --size SIZE  size of the EEPROM in bytes\n-w                    write &lt;file&gt; to the EEPROM\n-r                    read the contents of the EEPROM into file\n-v                    verify file contents after writing\n-c                    clear the EEPROM (with 0xff bytes) before writing or\n                        reading\n--check-empty         make sure the EEPROM is empty (filled with 0xff)\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<div id=\"clear-an-eeprom\">\n<h3>Clear an EEPROM</h3>\n<p>Clear the first 2048 bytes of the EEPROM and read back to make\nsure they are set accordingly</p>\n<pre>./eepro --port /dev/tty.wchusbserial1440 -c --check-empty -s=2048\n</pre>\n</div>\n<div id=\"write-a-binary-file-to-the-eeprom\">\n<h3>Write a binary file to the EEPROM</h3>\n<p>The following command will clear the EEPROM, write the contents\nof <tt>firmware.bin</tt> and reads back the content</p>\n<pre>./eepro --port /dev/tty.wchusbserial1440 -cvwf firmware.bin -s=2048\n</pre>\n</div>\n<div id=\"dump-eeprom-contents\">\n<h3>Dump EEPROM Contents</h3>\n<p>Read the first 2048 bytes of the EEPROM and write the result into\n<tt>firmware.bin</tt>. The content is then read again to check against errors.</p>\n<pre>./eepro --port /dev/tty.wchusbserial1440 -vrf firmware.bin -s=2048\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5630094, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "28de24f9cc03fe1077fa01d73ebb4c02", "sha256": "398eaad4eb4694bfef652acf0a799f8aea1eac4958f42f7c563bb10dd485f8df"}, "downloads": -1, "filename": "eepro-0.1.0.tar.gz", "has_sig": false, "md5_digest": "28de24f9cc03fe1077fa01d73ebb4c02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5565, "upload_time": "2019-08-04T04:29:31", "upload_time_iso_8601": "2019-08-04T04:29:31.163640Z", "url": "https://files.pythonhosted.org/packages/c2/47/94788a5165bda3a8579c3e20806aaa933f890cdfdaa0eb44d6dd65ec307e/eepro-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "039d02602c76969be2371ab2bda66cda", "sha256": "4f45e591b5c2bd1fc32131104e3a1ee5ee397c73fb936b75c0687649bd7a3562"}, "downloads": -1, "filename": "eepro-0.1.1.tar.gz", "has_sig": false, "md5_digest": "039d02602c76969be2371ab2bda66cda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5628, "upload_time": "2019-08-04T06:38:15", "upload_time_iso_8601": "2019-08-04T06:38:15.906142Z", "url": "https://files.pythonhosted.org/packages/f5/36/029367ac51a17f1497169dd7b035f703e53779390cf1bea3477be9dbdb24/eepro-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "d3c5fb539b85ed4e0408c9dd196fe5c4", "sha256": "eea45850d7dd941c88d91afa0c814b437f397158d6415430c3f54ce0abd4adfd"}, "downloads": -1, "filename": "eepro-0.1.2.tar.gz", "has_sig": false, "md5_digest": "d3c5fb539b85ed4e0408c9dd196fe5c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6460, "upload_time": "2019-08-04T06:46:05", "upload_time_iso_8601": "2019-08-04T06:46:05.825134Z", "url": "https://files.pythonhosted.org/packages/3c/4a/a883e710035901006531b48a083cff447a410134f8880098c4b003f14959/eepro-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "9d1ab0ad3411ea107985c064dec0f43e", "sha256": "5a87c57c1bc8f3b4d474710ee9cf4d65120e9328656c401b2fe1799f1cb8b0eb"}, "downloads": -1, "filename": "eepro-0.2.0.tar.gz", "has_sig": false, "md5_digest": "9d1ab0ad3411ea107985c064dec0f43e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6568, "upload_time": "2019-08-04T07:59:42", "upload_time_iso_8601": "2019-08-04T07:59:42.630647Z", "url": "https://files.pythonhosted.org/packages/44/3f/2e05e401fe4094024d9e197bd075e14b7da00002dea07d09c59b5884dbdd/eepro-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9d1ab0ad3411ea107985c064dec0f43e", "sha256": "5a87c57c1bc8f3b4d474710ee9cf4d65120e9328656c401b2fe1799f1cb8b0eb"}, "downloads": -1, "filename": "eepro-0.2.0.tar.gz", "has_sig": false, "md5_digest": "9d1ab0ad3411ea107985c064dec0f43e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6568, "upload_time": "2019-08-04T07:59:42", "upload_time_iso_8601": "2019-08-04T07:59:42.630647Z", "url": "https://files.pythonhosted.org/packages/44/3f/2e05e401fe4094024d9e197bd075e14b7da00002dea07d09c59b5884dbdd/eepro-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:24 2020"}