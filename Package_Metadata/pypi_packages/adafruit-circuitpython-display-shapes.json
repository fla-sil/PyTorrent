{"info": {"author": "Adafruit Industries", "author_email": "circuitpython@adafruit.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries", "Topic :: System :: Hardware"], "description": "Introduction\n============\n\n.. image:: https://readthedocs.org/projects/adafruit-circuitpython-display-shapes/badge/?version=latest\n    :target: https://circuitpython.readthedocs.io/projects/display-shapes/en/latest/\n    :alt: Documentation Status\n\n.. image:: https://img.shields.io/discord/327254708534116352.svg\n    :target: https://discord.gg/nBQh6qu\n    :alt: Discord\n\n.. image:: https://github.com/adafruit/Adafruit_CircuitPython_Display_Shapes/workflows/Build%20CI/badge.svg\n    :target: https://github.com/adafruit/Adafruit_CircuitPython_Display_Shapes/actions\n    :alt: Build Status\n\nVarious common shapes for use with displayio\n\n\nDependencies\n=============\nThis driver depends on:\n\n* `Adafruit CircuitPython <https://github.com/adafruit/circuitpython>`_\n\nPlease ensure all dependencies are available on the CircuitPython filesystem.\nThis is easily achieved by downloading\n`the Adafruit library and driver bundle <https://github.com/adafruit/Adafruit_CircuitPython_Bundle>`_.\n\nInstalling from PyPI\n--------------------\nOn supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally `from\nPyPI <https://pypi.org/project/adafruit-circuitpython-display_shapes/>`_. To install for current user:\n\n.. code-block:: shell\n\n    pip3 install adafruit-circuitpython-display_shapes\n\nTo install system-wide (this may be required in some cases):\n\n.. code-block:: shell\n\n    sudo pip3 install adafruit-circuitpython-display_shapes\n\nTo install in a virtual environment in your current project:\n\n.. code-block:: shell\n\n    mkdir project-name && cd project-name\n    python3 -m venv .env\n    source .env/bin/activate\n    pip3 install adafruit-circuitpython-display_shapes\n\nUsage Example\n=============\n\n..code-block:: python\n\n    import board\n    import displayio\n    from adafruit_display_shapes.rect import Rect\n    from adafruit_display_shapes.circle import Circle\n    from adafruit_display_shapes.roundrect import RoundRect\n\n    splash = displayio.Group(max_size=10)\n    board.DISPLAY.show(splash)\n\n    color_bitmap = displayio.Bitmap(320, 240, 1)\n    color_palette = displayio.Palette(1)\n    color_palette[0] = 0xFFFFFF\n    bg_sprite = displayio.TileGrid(color_bitmap, pixel_shader=color_palette, position=(0, 0))\n    print(bg_sprite.position)\n    splash.append(bg_sprite)\n\n    triangle = Triangle(170, 50, 120, 140, 210, 160, fill=0x00FF00, outline=0xFF00FF)\n    splash.append(triangle)\n\n    rect = Rect(80, 20, 41, 41, fill=0x0)\n    splash.append(rect)\n\n    circle = Circle(100, 100, 20, fill=0x00FF00, outline=0xFF00FF)\n    splash.append(circle)\n\n    rect2 = Rect(50, 100, 61, 81, outline=0x0, stroke=3)\n    splash.append(rect2)\n\n    roundrect = RoundRect(10, 10, 61, 81, 10, fill=0x0, outline=0xFF00FF, stroke=6)\n    splash.append(roundrect)\n\n    while True:\n        pass\n\n\nContributing\n============\n\nContributions are welcome! Please read our `Code of Conduct\n<https://github.com/adafruit/Adafruit_CircuitPython_Display_Shapes/blob/master/CODE_OF_CONDUCT.md>`_\nbefore contributing to help this project stay welcoming.\n\nBuilding locally\n================\n\nZip release files\n-----------------\n\nTo build this library locally you'll need to install the\n`circuitpython-build-tools <https://github.com/adafruit/circuitpython-build-tools>`_ package.\n\n.. code-block:: shell\n\n    python3 -m venv .env\n    source .env/bin/activate\n    pip install circuitpython-build-tools\n\nOnce installed, make sure you are in the virtual environment:\n\n.. code-block:: shell\n\n    source .env/bin/activate\n\nThen run the build:\n\n.. code-block:: shell\n\n    circuitpython-build-bundles --filename_prefix adafruit-circuitpython-display_shapes --library_location .\n\nSphinx documentation\n-----------------------\n\nSphinx is used to build the documentation based on rST files and comments in the code. First,\ninstall dependencies (feel free to reuse the virtual environment from above):\n\n.. code-block:: shell\n\n    python3 -m venv .env\n    source .env/bin/activate\n    pip install Sphinx sphinx-rtd-theme\n\nNow, once you have the virtual environment activated:\n\n.. code-block:: shell\n\n    cd docs\n    sphinx-build -E -W -b html . _build/html\n\nThis will output the documentation to ``docs/_build/html``. Open the index.html in your browser to\nview them. It will also (due to -W) error out on any warning like Travis will. This is a good way to\nlocally verify it will pass.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/adafruit/Adafruit_CircuitPython_Display_Shapes", "keywords": "adafruit blinka circuitpython micropython display_shapes shapes displayio drawing", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "adafruit-circuitpython-display-shapes", "package_url": "https://pypi.org/project/adafruit-circuitpython-display-shapes/", "platform": "", "project_url": "https://pypi.org/project/adafruit-circuitpython-display-shapes/", "project_urls": {"Homepage": "https://github.com/adafruit/Adafruit_CircuitPython_Display_Shapes"}, "release_url": "https://pypi.org/project/adafruit-circuitpython-display-shapes/1.3.1/", "requires_dist": null, "requires_python": "", "summary": "Various common shapes for use with displayio", "version": "1.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<a href=\"https://circuitpython.readthedocs.io/projects/display-shapes/en/latest/\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/382a7b5e65d842b116f18d2450037541b826cd78/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f61646166727569742d63697263756974707974686f6e2d646973706c61792d7368617065732f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://discord.gg/nBQh6qu\" rel=\"nofollow\"><img alt=\"Discord\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e2973e7de9caf359680953316fa3b541f702086c/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3332373235343730383533343131363335322e737667\"></a>\n<a href=\"https://github.com/adafruit/Adafruit_CircuitPython_Display_Shapes/actions\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aa6b87d09d5c728bce88de49f10973ad61dadb04/68747470733a2f2f6769746875622e636f6d2f61646166727569742f41646166727569745f43697263756974507974686f6e5f446973706c61795f5368617065732f776f726b666c6f77732f4275696c6425323043492f62616467652e737667\"></a>\n<p>Various common shapes for use with displayio</p>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>This driver depends on:</p>\n<ul>\n<li><a href=\"https://github.com/adafruit/circuitpython\" rel=\"nofollow\">Adafruit CircuitPython</a></li>\n</ul>\n<p>Please ensure all dependencies are available on the CircuitPython filesystem.\nThis is easily achieved by downloading\n<a href=\"https://github.com/adafruit/Adafruit_CircuitPython_Bundle\" rel=\"nofollow\">the Adafruit library and driver bundle</a>.</p>\n<div id=\"installing-from-pypi\">\n<h3>Installing from PyPI</h3>\n<p>On supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally <a href=\"https://pypi.org/project/adafruit-circuitpython-display_shapes/\" rel=\"nofollow\">from\nPyPI</a>. To install for current user:</p>\n<pre>pip3 install adafruit-circuitpython-display_shapes\n</pre>\n<p>To install system-wide (this may be required in some cases):</p>\n<pre>sudo pip3 install adafruit-circuitpython-display_shapes\n</pre>\n<p>To install in a virtual environment in your current project:</p>\n<pre>mkdir project-name <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">cd</span> project-name\npython3 -m venv .env\n<span class=\"nb\">source</span> .env/bin/activate\npip3 install adafruit-circuitpython-display_shapes\n</pre>\n</div>\n</div>\n<div id=\"usage-example\">\n<h2>Usage Example</h2>\n<p>..code-block:: python</p>\n<blockquote>\n<p>import board\nimport displayio\nfrom adafruit_display_shapes.rect import Rect\nfrom adafruit_display_shapes.circle import Circle\nfrom adafruit_display_shapes.roundrect import RoundRect</p>\n<p>splash = displayio.Group(max_size=10)\nboard.DISPLAY.show(splash)</p>\n<p>color_bitmap = displayio.Bitmap(320, 240, 1)\ncolor_palette = displayio.Palette(1)\ncolor_palette[0] = 0xFFFFFF\nbg_sprite = displayio.TileGrid(color_bitmap, pixel_shader=color_palette, position=(0, 0))\nprint(bg_sprite.position)\nsplash.append(bg_sprite)</p>\n<p>triangle = Triangle(170, 50, 120, 140, 210, 160, fill=0x00FF00, outline=0xFF00FF)\nsplash.append(triangle)</p>\n<p>rect = Rect(80, 20, 41, 41, fill=0x0)\nsplash.append(rect)</p>\n<p>circle = Circle(100, 100, 20, fill=0x00FF00, outline=0xFF00FF)\nsplash.append(circle)</p>\n<p>rect2 = Rect(50, 100, 61, 81, outline=0x0, stroke=3)\nsplash.append(rect2)</p>\n<p>roundrect = RoundRect(10, 10, 61, 81, 10, fill=0x0, outline=0xFF00FF, stroke=6)\nsplash.append(roundrect)</p>\n<dl>\n<dt>while True:</dt>\n<dd>pass</dd>\n</dl>\n</blockquote>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Contributions are welcome! Please read our <a href=\"https://github.com/adafruit/Adafruit_CircuitPython_Display_Shapes/blob/master/CODE_OF_CONDUCT.md\" rel=\"nofollow\">Code of Conduct</a>\nbefore contributing to help this project stay welcoming.</p>\n</div>\n<div id=\"building-locally\">\n<h2>Building locally</h2>\n<div id=\"zip-release-files\">\n<h3>Zip release files</h3>\n<p>To build this library locally you\u2019ll need to install the\n<a href=\"https://github.com/adafruit/circuitpython-build-tools\" rel=\"nofollow\">circuitpython-build-tools</a> package.</p>\n<pre>python3 -m venv .env\n<span class=\"nb\">source</span> .env/bin/activate\npip install circuitpython-build-tools\n</pre>\n<p>Once installed, make sure you are in the virtual environment:</p>\n<pre><span class=\"nb\">source</span> .env/bin/activate\n</pre>\n<p>Then run the build:</p>\n<pre>circuitpython-build-bundles --filename_prefix adafruit-circuitpython-display_shapes --library_location .\n</pre>\n</div>\n<div id=\"sphinx-documentation\">\n<h3>Sphinx documentation</h3>\n<p>Sphinx is used to build the documentation based on rST files and comments in the code. First,\ninstall dependencies (feel free to reuse the virtual environment from above):</p>\n<pre>python3 -m venv .env\n<span class=\"nb\">source</span> .env/bin/activate\npip install Sphinx sphinx-rtd-theme\n</pre>\n<p>Now, once you have the virtual environment activated:</p>\n<pre><span class=\"nb\">cd</span> docs\nsphinx-build -E -W -b html . _build/html\n</pre>\n<p>This will output the documentation to <tt>docs/_build/html</tt>. Open the index.html in your browser to\nview them. It will also (due to -W) error out on any warning like Travis will. This is a good way to\nlocally verify it will pass.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6995578, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "29cc1fd7c4a9dbad900a3269cd5aef32", "sha256": "b2d754bbe97044e409ea072b6af1e55b65fdbde6b1400634097426a8551cadc9"}, "downloads": -1, "filename": "adafruit-circuitpython-display_shapes-1.0.1.tar.gz", "has_sig": false, "md5_digest": "29cc1fd7c4a9dbad900a3269cd5aef32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21173, "upload_time": "2019-03-26T16:45:14", "upload_time_iso_8601": "2019-03-26T16:45:14.758442Z", "url": "https://files.pythonhosted.org/packages/23/33/7e51f31320197f870e4cb9f6bdb07293eb5e5360708c1aaff5800be89535/adafruit-circuitpython-display_shapes-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "5a73a5b26664aaefd58c0acc1cde8c5b", "sha256": "1e585fd039109584429ce6375ae223c34c4a9d3123e4ef75db56cedf4a016769"}, "downloads": -1, "filename": "adafruit-circuitpython-display_shapes-1.1.0.tar.gz", "has_sig": false, "md5_digest": "5a73a5b26664aaefd58c0acc1cde8c5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22193, "upload_time": "2019-08-06T00:43:39", "upload_time_iso_8601": "2019-08-06T00:43:39.986436Z", "url": "https://files.pythonhosted.org/packages/fc/af/6c246119aad9013326b39c9f579daddb3b1bd62456db6ad1c02e7882e8dc/adafruit-circuitpython-display_shapes-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "f21134978a7e9f89857166ffa0fe57b3", "sha256": "4d6358493151741bad5d6b565dee0a2b7b1270227f370d6e260d532997bb8c6a"}, "downloads": -1, "filename": "adafruit-circuitpython-display_shapes-1.1.1.tar.gz", "has_sig": false, "md5_digest": "f21134978a7e9f89857166ffa0fe57b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22197, "upload_time": "2019-08-06T19:05:27", "upload_time_iso_8601": "2019-08-06T19:05:27.171891Z", "url": "https://files.pythonhosted.org/packages/bf/eb/33c10b4f22e300765d5f34ea07416f8019abf19de1c8d91313b6c4dce001/adafruit-circuitpython-display_shapes-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "4e2c82cc11e7f87f1a8649c0bd6fe648", "sha256": "bfd35dcb551a081b3edf689b5ef96a7c3a2662e85e284676288b67f7bf083954"}, "downloads": -1, "filename": "adafruit-circuitpython-display_shapes-1.1.2.tar.gz", "has_sig": false, "md5_digest": "4e2c82cc11e7f87f1a8649c0bd6fe648", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22246, "upload_time": "2019-08-06T20:41:06", "upload_time_iso_8601": "2019-08-06T20:41:06.884973Z", "url": "https://files.pythonhosted.org/packages/fe/17/d14f7ed58a40a9bf88b1d6b1ee821cf4c60c53bee2ba35218197af6a0a81/adafruit-circuitpython-display_shapes-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "755b381f8c859830b6606fbec3f4890d", "sha256": "ebfa6ce378ee770a998ed00c0320f36b5b9e649869dfe161acf420c240a3b713"}, "downloads": -1, "filename": "adafruit-circuitpython-display_shapes-1.1.3.tar.gz", "has_sig": false, "md5_digest": "755b381f8c859830b6606fbec3f4890d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22347, "upload_time": "2019-11-01T00:12:30", "upload_time_iso_8601": "2019-11-01T00:12:30.134977Z", "url": "https://files.pythonhosted.org/packages/ce/44/996525dec0e143afb546c43b8e606f4fd25d5c0f8614abee02f0efcd91d3/adafruit-circuitpython-display_shapes-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "3f1724f97e1f3093e5e0672daa5c0fca", "sha256": "e11b3e468940ebd791db2a9d1958eb609cf08f02c4dc7d7060c6267fda3eaeb4"}, "downloads": -1, "filename": "adafruit-circuitpython-display_shapes-1.1.4.tar.gz", "has_sig": false, "md5_digest": "3f1724f97e1f3093e5e0672daa5c0fca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22584, "upload_time": "2020-01-23T15:54:20", "upload_time_iso_8601": "2020-01-23T15:54:20.094232Z", "url": "https://files.pythonhosted.org/packages/cc/64/11edd97aee6d172de66025a6bb7a948a9499d913a8e3eeb2c0d3e929f032/adafruit-circuitpython-display_shapes-1.1.4.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "4d9fbb350c305b9d9c76c071eabe390f", "sha256": "88aea27f5ad7798de5f389c57b2a442f5b5accd51c31b8536c91afa7a917532e"}, "downloads": -1, "filename": "adafruit-circuitpython-display_shapes-1.2.0.tar.gz", "has_sig": false, "md5_digest": "4d9fbb350c305b9d9c76c071eabe390f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23267, "upload_time": "2020-02-12T23:05:03", "upload_time_iso_8601": "2020-02-12T23:05:03.911005Z", "url": "https://files.pythonhosted.org/packages/c6/64/f57d5c99ebb910fe057d9c6dedd38eb6e873cf2cec09ce208786ec4237c8/adafruit-circuitpython-display_shapes-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "054347316f9c6c0d8bb3823ea47941f8", "sha256": "40a447b3d1b21993c57a78f9f2e2966e8b259035f3d04cadbdabf27e18f5265f"}, "downloads": -1, "filename": "adafruit-circuitpython-display_shapes-1.3.0.tar.gz", "has_sig": false, "md5_digest": "054347316f9c6c0d8bb3823ea47941f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23502, "upload_time": "2020-03-23T20:57:53", "upload_time_iso_8601": "2020-03-23T20:57:53.655197Z", "url": "https://files.pythonhosted.org/packages/69/6d/385f2e07bafa62de1d2ce99b399537e8ca6facfb2efe958014db69419ca1/adafruit-circuitpython-display_shapes-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "4b114c9e041f57ad94fb4f476b86a7b2", "sha256": "2c6790ef39da3d805733a2482e8a4d0b4da599ca11bad04581fd4f0b39048f23"}, "downloads": -1, "filename": "adafruit-circuitpython-display_shapes-1.3.1.tar.gz", "has_sig": false, "md5_digest": "4b114c9e041f57ad94fb4f476b86a7b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23564, "upload_time": "2020-04-10T18:27:27", "upload_time_iso_8601": "2020-04-10T18:27:27.029821Z", "url": "https://files.pythonhosted.org/packages/84/59/3210582fef7a7321d742a3ce47d288e66d55a233cc801e773d1ae8aed04c/adafruit-circuitpython-display_shapes-1.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4b114c9e041f57ad94fb4f476b86a7b2", "sha256": "2c6790ef39da3d805733a2482e8a4d0b4da599ca11bad04581fd4f0b39048f23"}, "downloads": -1, "filename": "adafruit-circuitpython-display_shapes-1.3.1.tar.gz", "has_sig": false, "md5_digest": "4b114c9e041f57ad94fb4f476b86a7b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23564, "upload_time": "2020-04-10T18:27:27", "upload_time_iso_8601": "2020-04-10T18:27:27.029821Z", "url": "https://files.pythonhosted.org/packages/84/59/3210582fef7a7321d742a3ce47d288e66d55a233cc801e773d1ae8aed04c/adafruit-circuitpython-display_shapes-1.3.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:24:04 2020"}