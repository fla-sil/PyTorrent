{"info": {"author": "Peter Wunderlich", "author_email": "frederic.sureau@veo-labs.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "python-engineio-client\n======================\n\nPython implementation of the engine.io client.\n\nDesign & goals\n--------------\n\nThis implementation is inspired by the JavaScript `engine.io-client`_\nimplementation.\n\nProtocol parser is copied in parts and at least largely inspired from the\npackage `python-engineio`_ written by `Miguel Grinberg`_.\n\nThis engine.io client is using `Gevent`_ for now. This is not a strict design\nchoice but a simplification for this first implementaion. Other asynchronous\nframeworks are welcome for future versions.\n\nExample\n-------\n\n::\n\n    from engineio_client.client import Client\n\n    import gevent\n    import gevent.monkey\n    gevent.monkey.patch_all()\n\n    eio = Client('localhost', 8000)\n\n    @eio.on('message')\n    def on_message(message):\n        print message\n        eio.close()\n\n    @eio.on('open')\n    def on_open():\n        eio.send(\"Hello\")\n\n    eio.open()\n    gevent.wait()\n\n\nLinks\n-----\n\nAnother engine.io/socket.io client: `socketIO_client`_\n\n.. _engine.io-client: https://github.com/socketio/engine.io-client\n.. _python-engineio: https://github.com/miguelgrinberg/python-engineio\n.. _Miguel Grinberg: https://github.com/miguelgrinberg\n.. _gevent: http://gevent.org/\n.. _socketIO_client: https://github.com/invisibleroads/socketIO-client", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/PeterWunderlich/python-engineio-client/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "engineio-client", "package_url": "https://pypi.org/project/engineio-client/", "platform": "any", "project_url": "https://pypi.org/project/engineio-client/", "project_urls": {"Homepage": "http://github.com/PeterWunderlich/python-engineio-client/"}, "release_url": "https://pypi.org/project/engineio-client/0.2/", "requires_dist": null, "requires_python": "", "summary": "Engine.IO client", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python implementation of the engine.io client.</p>\n<div id=\"design-goals\">\n<h2>Design &amp; goals</h2>\n<p>This implementation is inspired by the JavaScript <a href=\"https://github.com/socketio/engine.io-client\" rel=\"nofollow\">engine.io-client</a>\nimplementation.</p>\n<p>Protocol parser is copied in parts and at least largely inspired from the\npackage <a href=\"https://github.com/miguelgrinberg/python-engineio\" rel=\"nofollow\">python-engineio</a> written by <a href=\"https://github.com/miguelgrinberg\" rel=\"nofollow\">Miguel Grinberg</a>.</p>\n<p>This engine.io client is using <a href=\"http://gevent.org/\" rel=\"nofollow\">Gevent</a> for now. This is not a strict design\nchoice but a simplification for this first implementaion. Other asynchronous\nframeworks are welcome for future versions.</p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<pre>from engineio_client.client import Client\n\nimport gevent\nimport gevent.monkey\ngevent.monkey.patch_all()\n\neio = Client('localhost', 8000)\n\n@eio.on('message')\ndef on_message(message):\n    print message\n    eio.close()\n\n@eio.on('open')\ndef on_open():\n    eio.send(\"Hello\")\n\neio.open()\ngevent.wait()\n</pre>\n</div>\n<div id=\"links\">\n<h2>Links</h2>\n<p>Another engine.io/socket.io client: <a href=\"https://github.com/invisibleroads/socketIO-client\" rel=\"nofollow\">socketIO_client</a></p>\n</div>\n\n          </div>"}, "last_serial": 4691301, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "eb4413d528fe2ca8ebf95c0253c0e2c0", "sha256": "0cb5cde3a103db851412e75c093ed2271da46d8d25eff95f8b0c643f04bc7808"}, "downloads": -1, "filename": "engineio-client-0.2.tar.gz", "has_sig": false, "md5_digest": "eb4413d528fe2ca8ebf95c0253c0e2c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7123, "upload_time": "2019-01-13T17:31:50", "upload_time_iso_8601": "2019-01-13T17:31:50.734472Z", "url": "https://files.pythonhosted.org/packages/b7/d5/6b9b500ae84d2c32d7a23dfd1195681a25f38917c52e910158426f104427/engineio-client-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eb4413d528fe2ca8ebf95c0253c0e2c0", "sha256": "0cb5cde3a103db851412e75c093ed2271da46d8d25eff95f8b0c643f04bc7808"}, "downloads": -1, "filename": "engineio-client-0.2.tar.gz", "has_sig": false, "md5_digest": "eb4413d528fe2ca8ebf95c0253c0e2c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7123, "upload_time": "2019-01-13T17:31:50", "upload_time_iso_8601": "2019-01-13T17:31:50.734472Z", "url": "https://files.pythonhosted.org/packages/b7/d5/6b9b500ae84d2c32d7a23dfd1195681a25f38917c52e910158426f104427/engineio-client-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:21 2020"}