{"info": {"author": "Igor Lysenko", "author_email": "wishyoumarryfriday@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Django Telegram Error Notifications\n\nAt first you have to register your bot first before using it. \nGo to the [BotFather](https://telegram.me/BotFather) or find it in telegram, \nthen create new bot by sending the `/newbot` command. \nFollow the steps until you get the username and token for your bot.\n\nTo install app perform the command:\n```shell script\npip install django-telegram-error-notifications\n```\n\nAdd application to your `INSTALLED_APPS`:\n```python\nINSTALLED_APPS = [\n    ...,\n    'telegram_error_notifications.apps.TelegramErrorNotificationsConfig'\n]\n```\n\nAfter this you should apply migrations:\n```bash\npython manage.py migrate\n```\nBy this action you will add two new models `Telegram Bot` and `Error Messages`.\n\nThen add to the `settings.py` settings for your telegram bot:\n```python\nTELEGRAM_BOT_NAME = '<Your Bot Name>'\nTELEGRAM_BOT_TOKEN = '<Your Bot Token>'\n# If you override BotView and set up another URL provide your URL\n# Also you can use ngrok utility when you work on local server. \n# Perform `ngrok http 8000` and take URL with https. For example:\n# TELEGRAM_BOT_WEBHOOK_URL = https://0adb2add.ngrok.io/bot/web-hook/\n# Whenever you change this variable don't forget to perform \n# `python manage.py create_telegram_bot` to reassign a webhook\nTELEGRAM_BOT_WEBHOOK_URL = 'https://<your-domain>/bot/web-hook/'\nTELEGRAM_BOT_PROJECT_NAME = '<Name of the current project>'\nTELEGRAM_BOT_ALLOW_SEND_IN_DEBUG_MODE = False\n```\n- `TELEGRAM_BOT_NAME` - Name of your bot that will be used for creating it into a database\n- `TELEGRAM_BOT_TOKEN` - Token that was given to you when you created your bot\n- `TELEGRAM_BOT_WEBHOOK_URL` - This url will receive requests from your bot\n- `TELEGRAM_BOT_PROJECT_NAME` - This variable is necessary to provide your project name when the error will be sent to your bot\n- `TELEGRAM_BOT_ALLOW_SEND_IN_DEBUG_MODE` - If you want to send errors to your bot in `DEBUG` mode switch this variable to `True`\n\nThen you should specify url in your `urls.py`:\n```python\nfrom django.urls import path, include\n\nurlpatterns = [\n    ...,\n    path('bot/', include('telegram_error_notifications.urls')),\n]\n```\n\nTo create a bot into a database and create a webhook for it just use the management command:\n```bash\npython manage.py create_telegram_bot\n```\nThis command will use `TELEGRAM_BOT_NAME` variable to create a bot\n\n**You should necessarily send from your bot any command. \nIt's necessary for getting `chat_id` and saving it to database.\nMake sure you did it.**\nFor example you can send `/start` command. You will get `I don't know this command`.\nDon't worry. After this command your bot chat_id will be saved into a database.\n\nYou can add new commands for your bot. For example, you want to add `/start` command.\nYour view that will be responsible for handling telegram commands can be like this:\n```python\nfrom telegram_error_notifications.utils import send_message\nfrom telegram_error_notifications.views import BotView\n\n\nclass MyBotView(BotView):\n    def handle_command_start(self):\n        if self.bot and self.bot.chat_id:\n            message = \"<b>I started working</b>\"\n            return send_message(message, self.bot.chat_id)\n```\nTo handle your own command you should create `handle_command_<command>` method.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nocl1p/django-telegram-error-notifications", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-telegram-error-notifications", "package_url": "https://pypi.org/project/django-telegram-error-notifications/", "platform": "", "project_url": "https://pypi.org/project/django-telegram-error-notifications/", "project_urls": {"Homepage": "https://github.com/nocl1p/django-telegram-error-notifications"}, "release_url": "https://pypi.org/project/django-telegram-error-notifications/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "A Django app to send errors to telegram bot.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Django Telegram Error Notifications</h1>\n<p>At first you have to register your bot first before using it.\nGo to the <a href=\"https://telegram.me/BotFather\" rel=\"nofollow\">BotFather</a> or find it in telegram,\nthen create new bot by sending the <code>/newbot</code> command.\nFollow the steps until you get the username and token for your bot.</p>\n<p>To install app perform the command:</p>\n<pre>pip install django-telegram-error-notifications\n</pre>\n<p>Add application to your <code>INSTALLED_APPS</code>:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span><span class=\"p\">,</span>\n    <span class=\"s1\">'telegram_error_notifications.apps.TelegramErrorNotificationsConfig'</span>\n<span class=\"p\">]</span>\n</pre>\n<p>After this you should apply migrations:</p>\n<pre>python manage.py migrate\n</pre>\n<p>By this action you will add two new models <code>Telegram Bot</code> and <code>Error Messages</code>.</p>\n<p>Then add to the <code>settings.py</code> settings for your telegram bot:</p>\n<pre><span class=\"n\">TELEGRAM_BOT_NAME</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;Your Bot Name&gt;'</span>\n<span class=\"n\">TELEGRAM_BOT_TOKEN</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;Your Bot Token&gt;'</span>\n<span class=\"c1\"># If you override BotView and set up another URL provide your URL</span>\n<span class=\"c1\"># Also you can use ngrok utility when you work on local server. </span>\n<span class=\"c1\"># Perform `ngrok http 8000` and take URL with https. For example:</span>\n<span class=\"c1\"># TELEGRAM_BOT_WEBHOOK_URL = https://0adb2add.ngrok.io/bot/web-hook/</span>\n<span class=\"c1\"># Whenever you change this variable don't forget to perform </span>\n<span class=\"c1\"># `python manage.py create_telegram_bot` to reassign a webhook</span>\n<span class=\"n\">TELEGRAM_BOT_WEBHOOK_URL</span> <span class=\"o\">=</span> <span class=\"s1\">'https://&lt;your-domain&gt;/bot/web-hook/'</span>\n<span class=\"n\">TELEGRAM_BOT_PROJECT_NAME</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;Name of the current project&gt;'</span>\n<span class=\"n\">TELEGRAM_BOT_ALLOW_SEND_IN_DEBUG_MODE</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n</pre>\n<ul>\n<li><code>TELEGRAM_BOT_NAME</code> - Name of your bot that will be used for creating it into a database</li>\n<li><code>TELEGRAM_BOT_TOKEN</code> - Token that was given to you when you created your bot</li>\n<li><code>TELEGRAM_BOT_WEBHOOK_URL</code> - This url will receive requests from your bot</li>\n<li><code>TELEGRAM_BOT_PROJECT_NAME</code> - This variable is necessary to provide your project name when the error will be sent to your bot</li>\n<li><code>TELEGRAM_BOT_ALLOW_SEND_IN_DEBUG_MODE</code> - If you want to send errors to your bot in <code>DEBUG</code> mode switch this variable to <code>True</code></li>\n</ul>\n<p>Then you should specify url in your <code>urls.py</code>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">include</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span><span class=\"p\">,</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s1\">'bot/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'telegram_error_notifications.urls'</span><span class=\"p\">)),</span>\n<span class=\"p\">]</span>\n</pre>\n<p>To create a bot into a database and create a webhook for it just use the management command:</p>\n<pre>python manage.py create_telegram_bot\n</pre>\n<p>This command will use <code>TELEGRAM_BOT_NAME</code> variable to create a bot</p>\n<p><strong>You should necessarily send from your bot any command.\nIt's necessary for getting <code>chat_id</code> and saving it to database.\nMake sure you did it.</strong>\nFor example you can send <code>/start</code> command. You will get <code>I don't know this command</code>.\nDon't worry. After this command your bot chat_id will be saved into a database.</p>\n<p>You can add new commands for your bot. For example, you want to add <code>/start</code> command.\nYour view that will be responsible for handling telegram commands can be like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">telegram_error_notifications.utils</span> <span class=\"kn\">import</span> <span class=\"n\">send_message</span>\n<span class=\"kn\">from</span> <span class=\"nn\">telegram_error_notifications.views</span> <span class=\"kn\">import</span> <span class=\"n\">BotView</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyBotView</span><span class=\"p\">(</span><span class=\"n\">BotView</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">handle_command_start</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bot</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bot</span><span class=\"o\">.</span><span class=\"n\">chat_id</span><span class=\"p\">:</span>\n            <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"s2\">\"&lt;b&gt;I started working&lt;/b&gt;\"</span>\n            <span class=\"k\">return</span> <span class=\"n\">send_message</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bot</span><span class=\"o\">.</span><span class=\"n\">chat_id</span><span class=\"p\">)</span>\n</pre>\n<p>To handle your own command you should create <code>handle_command_&lt;command&gt;</code> method.</p>\n\n          </div>"}, "last_serial": 6306363, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "441839b20c3122aae39b3349c1a7dd31", "sha256": "40ba0074c959f018b63874a9f72b6c0d5cb99e9b5c77f355b06b0fa3feecbb42"}, "downloads": -1, "filename": "django_telegram_error_notifications-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "441839b20c3122aae39b3349c1a7dd31", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12029, "upload_time": "2019-12-14T22:53:10", "upload_time_iso_8601": "2019-12-14T22:53:10.742354Z", "url": "https://files.pythonhosted.org/packages/68/96/d09dfae88cf465d33262c7dcb6af3306c59a26b4563efd5c7b27cdf76652/django_telegram_error_notifications-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e20e8337d7cf33ab9462b00c06d290f9", "sha256": "0918181b5200f52d0cced6e3952fb3eb99552faa4567e618bf60441f9c49aa12"}, "downloads": -1, "filename": "django-telegram-error-notifications-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e20e8337d7cf33ab9462b00c06d290f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7721, "upload_time": "2019-12-14T22:53:13", "upload_time_iso_8601": "2019-12-14T22:53:13.309001Z", "url": "https://files.pythonhosted.org/packages/d1/5d/c12d20b9dd4c15244f38b95b4f3ead1d97bb2f4aac5cf0cd91d2bdb7ac5c/django-telegram-error-notifications-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "4089f33d0b89504d1ad08ca7f622c86a", "sha256": "c5d0a65096039b82d049d97263192a28cbc1a877f80ef45aeafb19d477a9e180"}, "downloads": -1, "filename": "django_telegram_error_notifications-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4089f33d0b89504d1ad08ca7f622c86a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12083, "upload_time": "2019-12-15T12:19:44", "upload_time_iso_8601": "2019-12-15T12:19:44.166639Z", "url": "https://files.pythonhosted.org/packages/85/b9/0fe600a17aada9d4973530a58a92989b59eccba08b2d441dacb0cb17bda5/django_telegram_error_notifications-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "88e43178ae6563f5c051a27a3f6069e8", "sha256": "bdb549de65a98e6cb7e6fd007743f5de4709395d560fae00258294e559dbdb4d"}, "downloads": -1, "filename": "django-telegram-error-notifications-0.0.2.tar.gz", "has_sig": false, "md5_digest": "88e43178ae6563f5c051a27a3f6069e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7779, "upload_time": "2019-12-15T12:19:46", "upload_time_iso_8601": "2019-12-15T12:19:46.112025Z", "url": "https://files.pythonhosted.org/packages/59/d0/1caa8a4486811157e7a65da10cafa2dc17c6a45e01d5099f30900d6699a1/django-telegram-error-notifications-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4089f33d0b89504d1ad08ca7f622c86a", "sha256": "c5d0a65096039b82d049d97263192a28cbc1a877f80ef45aeafb19d477a9e180"}, "downloads": -1, "filename": "django_telegram_error_notifications-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4089f33d0b89504d1ad08ca7f622c86a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12083, "upload_time": "2019-12-15T12:19:44", "upload_time_iso_8601": "2019-12-15T12:19:44.166639Z", "url": "https://files.pythonhosted.org/packages/85/b9/0fe600a17aada9d4973530a58a92989b59eccba08b2d441dacb0cb17bda5/django_telegram_error_notifications-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "88e43178ae6563f5c051a27a3f6069e8", "sha256": "bdb549de65a98e6cb7e6fd007743f5de4709395d560fae00258294e559dbdb4d"}, "downloads": -1, "filename": "django-telegram-error-notifications-0.0.2.tar.gz", "has_sig": false, "md5_digest": "88e43178ae6563f5c051a27a3f6069e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7779, "upload_time": "2019-12-15T12:19:46", "upload_time_iso_8601": "2019-12-15T12:19:46.112025Z", "url": "https://files.pythonhosted.org/packages/59/d0/1caa8a4486811157e7a65da10cafa2dc17c6a45e01d5099f30900d6699a1/django-telegram-error-notifications-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:39 2020"}