{"info": {"author": "C\u00e9sar L\u00f3pez Ram\u00edrez", "author_email": "cesar.lopez@somenergia.coop", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# somenergia-utils\n\nThis module includes different Python modules and scripts\nubiquiously used on scripts in SomEnergia cooperative\nbut with no entity by themselves to have their own repository.\n\n\n- `venv`: run a command under a Python virtual enviroment\n- `sql2csv.py`: script to run parametrized sql queries and get the result as (tab separated) csv.\n- `dbutils.py`: module with db related functions\n\t- `fetchNs`: a generator that wraps db cursors to fetch objects with attributes instead of psycopg arrays\n\t- `nsList`: uses the former to build a list of such object (slower but maybe convinient)\n\t- `csvTable`: turns the results of a query into a tab separated table with proper header names\n- `sheetfetcher.py`: convenience class to retrieve data from gdrive spreadshets\n- `trace`: quickly enable and disable tracing function calling by decorating them with `@trace`\n- `testutils`: module with common test utilities\n\t- `testutils.assertNsEqual`: structure equality assertion using sorted key yaml dumps\n\t- `testutils.destructiveTest`: decorator to avoid running destructive tests in production\n\n## `venv` script\n\nThis script is useful to run Python scripts under a given virtual environment.\nIt is specially useful to run Python scripts from crontab lines.\n\n```bash\nusage: venv /PATH/TO/PYTHON/VIRTUALENV COMMAND [PARAM1 [PARAM2...]]\n```\n\n## `sql2csv.py` script\n\nRuns an SQL file and outputs the result of the query as tabulator separated csv.a\n\nYou can provide query parameters either as yamlfile or as commandline options.\n\n```bash\n sql2csv.py <sqlfile> [<yamlfile>] [--<var1> <value1> [--<var2> <value2> ..] ]\n```\n\n## `dbutils` Python module\n\nConvenient cursor wrappers to make the database access code more readable.\n\nExample:\n\n```python\nimport psycopg2, dbutils\ndb = psycopg2.connect(**dbconfiguration)\nwith db.cursor() as cursor :\n\tcursor.execute(\"SELECT name, age FROM people\")\n\tfor person as dbutils.fetchNs(cursor):\n\t\tif person.age < 21: continue\n\t\tprint(\"{name} is {age} years old\".format(person))\n```\n\n## `sheetfetcher` Python module\n\nConvenient wraper for gdrive.\n\n```python\nfrom sheetfetcher import SheetFetcher\n\nfetcher = SheetFetcher(\n\tdocumentName='My Document',\n\tcredentialFilename='drive-certificate.json',\n\t)\ntable = fetcher.get_range(\"My Sheet\", \"A2:F12\")\nfulltable = fetcher.get_fullsheet(\"My Sheet\")\n```\n\n- Document selectors can be either an uri or the title\n- Sheet selectors can be either an index, a name or an id.\n- Range selectors can be either a named range, index tuple or a \"A2:F5\" coordinates.\n- You should [Create a certificate and grant it access to the document](http://gspread.readthedocs.org/en/latest/oauth2.html)\n\n## trace\n\nThis decorator is a fast helper to trace calls to functions and methods.\nIt will show the name of the functions the values of the parameters and the returned values.\n\n```python\nfrom trace import trace\n\n@trace\ndef factorial(n):\n    if n<1: return 1\n    return n*factorial(n-1)\n\nfactorial(8)\n\n('> factorial', (8,))\n('> factorial', (7,))\n('> factorial', (6,))\n('> factorial', (5,))\n('> factorial', (4,))\n('> factorial', (3,))\n('> factorial', (2,))\n('> factorial', (1,))\n('> factorial', (0,))\n('< factorial', (0,), '->', 1)\n('< factorial', (1,), '->', 1)\n('< factorial', (2,), '->', 2)\n('< factorial', (3,), '->', 6)\n('< factorial', (4,), '->', 24)\n('< factorial', (5,), '->', 120)\n('< factorial', (6,), '->', 720)\n('< factorial', (7,), '->', 5040)\n('< factorial', (8,), '->', 40320)\n\n```\n\n## `testutils.assertNsEqual`\n\nAllows to assert equality on json/yaml like structures combining\ndicts, lists, numbers, strings, dates...\nThe comparision is done on the YAML output so that differences are\nspoted as text diffs.\nAlso keys in dicts are alphabetically sorted.\n\n\n## `testutils.destructiveTest`\n\nAn utility to avoid running destrutive tests in production.\nIt is a decorator that checks wheter the erp configured in `dbconfig`\nhas the testing flag and skips the test if it doesn't.\n\nThe script `enable_destructive_test.py` is also provided to set/unset\nthat testing flag which is not defined by default.\n\n## `isodates`\n\nModule for simplified isodate parsing and timezone handling.\n\n\n## `sequence`\n\nInterprets strings like the ones the standard Print Dialog\nuses to specify pages to be printed.\nie. \"2,4,6-9,13\" means \"2, 4, from 6 to 9 and 13\"", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Som-Energia/somenergia-utils", "keywords": "", "license": "GNU General Public License v3 or later (GPLv3+)", "maintainer": "", "maintainer_email": "", "name": "somutils", "package_url": "https://pypi.org/project/somutils/", "platform": "", "project_url": "https://pypi.org/project/somutils/", "project_urls": {"Homepage": "https://github.com/Som-Energia/somenergia-utils"}, "release_url": "https://pypi.org/project/somutils/1.6.0/", "requires_dist": null, "requires_python": "", "summary": "Tools we use at Somenergia and can be useful", "version": "1.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>somenergia-utils</h1>\n<p>This module includes different Python modules and scripts\nubiquiously used on scripts in SomEnergia cooperative\nbut with no entity by themselves to have their own repository.</p>\n<ul>\n<li><code>venv</code>: run a command under a Python virtual enviroment</li>\n<li><code>sql2csv.py</code>: script to run parametrized sql queries and get the result as (tab separated) csv.</li>\n<li><code>dbutils.py</code>: module with db related functions\n<ul>\n<li><code>fetchNs</code>: a generator that wraps db cursors to fetch objects with attributes instead of psycopg arrays</li>\n<li><code>nsList</code>: uses the former to build a list of such object (slower but maybe convinient)</li>\n<li><code>csvTable</code>: turns the results of a query into a tab separated table with proper header names</li>\n</ul>\n</li>\n<li><code>sheetfetcher.py</code>: convenience class to retrieve data from gdrive spreadshets</li>\n<li><code>trace</code>: quickly enable and disable tracing function calling by decorating them with <code>@trace</code></li>\n<li><code>testutils</code>: module with common test utilities\n<ul>\n<li><code>testutils.assertNsEqual</code>: structure equality assertion using sorted key yaml dumps</li>\n<li><code>testutils.destructiveTest</code>: decorator to avoid running destructive tests in production</li>\n</ul>\n</li>\n</ul>\n<h2><code>venv</code> script</h2>\n<p>This script is useful to run Python scripts under a given virtual environment.\nIt is specially useful to run Python scripts from crontab lines.</p>\n<pre>usage: venv /PATH/TO/PYTHON/VIRTUALENV COMMAND <span class=\"o\">[</span>PARAM1 <span class=\"o\">[</span>PARAM2...<span class=\"o\">]]</span>\n</pre>\n<h2><code>sql2csv.py</code> script</h2>\n<p>Runs an SQL file and outputs the result of the query as tabulator separated csv.a</p>\n<p>You can provide query parameters either as yamlfile or as commandline options.</p>\n<pre> sql2csv.py &lt;sqlfile&gt; <span class=\"o\">[</span>&lt;yamlfile&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--&lt;var1&gt; &lt;value1&gt; <span class=\"o\">[</span>--&lt;var2&gt; &lt;value2&gt; ..<span class=\"o\">]</span> <span class=\"o\">]</span>\n</pre>\n<h2><code>dbutils</code> Python module</h2>\n<p>Convenient cursor wrappers to make the database access code more readable.</p>\n<p>Example:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">psycopg2</span><span class=\"o\">,</span> <span class=\"nn\">dbutils</span>\n<span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">psycopg2</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">dbconfiguration</span><span class=\"p\">)</span>\n<span class=\"k\">with</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">cursor</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">cursor</span> <span class=\"p\">:</span>\n\t<span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"s2\">\"SELECT name, age FROM people\"</span><span class=\"p\">)</span>\n\t<span class=\"k\">for</span> <span class=\"n\">person</span> <span class=\"k\">as</span> <span class=\"n\">dbutils</span><span class=\"o\">.</span><span class=\"n\">fetchNs</span><span class=\"p\">(</span><span class=\"n\">cursor</span><span class=\"p\">):</span>\n\t\t<span class=\"k\">if</span> <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">age</span> <span class=\"o\">&lt;</span> <span class=\"mi\">21</span><span class=\"p\">:</span> <span class=\"k\">continue</span>\n\t\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{name}</span><span class=\"s2\"> is </span><span class=\"si\">{age}</span><span class=\"s2\"> years old\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">person</span><span class=\"p\">))</span>\n</pre>\n<h2><code>sheetfetcher</code> Python module</h2>\n<p>Convenient wraper for gdrive.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sheetfetcher</span> <span class=\"kn\">import</span> <span class=\"n\">SheetFetcher</span>\n\n<span class=\"n\">fetcher</span> <span class=\"o\">=</span> <span class=\"n\">SheetFetcher</span><span class=\"p\">(</span>\n\t<span class=\"n\">documentName</span><span class=\"o\">=</span><span class=\"s1\">'My Document'</span><span class=\"p\">,</span>\n\t<span class=\"n\">credentialFilename</span><span class=\"o\">=</span><span class=\"s1\">'drive-certificate.json'</span><span class=\"p\">,</span>\n\t<span class=\"p\">)</span>\n<span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"n\">fetcher</span><span class=\"o\">.</span><span class=\"n\">get_range</span><span class=\"p\">(</span><span class=\"s2\">\"My Sheet\"</span><span class=\"p\">,</span> <span class=\"s2\">\"A2:F12\"</span><span class=\"p\">)</span>\n<span class=\"n\">fulltable</span> <span class=\"o\">=</span> <span class=\"n\">fetcher</span><span class=\"o\">.</span><span class=\"n\">get_fullsheet</span><span class=\"p\">(</span><span class=\"s2\">\"My Sheet\"</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Document selectors can be either an uri or the title</li>\n<li>Sheet selectors can be either an index, a name or an id.</li>\n<li>Range selectors can be either a named range, index tuple or a \"A2:F5\" coordinates.</li>\n<li>You should <a href=\"http://gspread.readthedocs.org/en/latest/oauth2.html\" rel=\"nofollow\">Create a certificate and grant it access to the document</a></li>\n</ul>\n<h2>trace</h2>\n<p>This decorator is a fast helper to trace calls to functions and methods.\nIt will show the name of the functions the values of the parameters and the returned values.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">trace</span> <span class=\"kn\">import</span> <span class=\"n\">trace</span>\n\n<span class=\"nd\">@trace</span>\n<span class=\"k\">def</span> <span class=\"nf\">factorial</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">n</span><span class=\"o\">&lt;</span><span class=\"mi\">1</span><span class=\"p\">:</span> <span class=\"k\">return</span> <span class=\"mi\">1</span>\n    <span class=\"k\">return</span> <span class=\"n\">n</span><span class=\"o\">*</span><span class=\"n\">factorial</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">factorial</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">)</span>\n\n<span class=\"p\">(</span><span class=\"s1\">'&gt; factorial'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">,))</span>\n<span class=\"p\">(</span><span class=\"s1\">'&gt; factorial'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">,))</span>\n<span class=\"p\">(</span><span class=\"s1\">'&gt; factorial'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">,))</span>\n<span class=\"p\">(</span><span class=\"s1\">'&gt; factorial'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,))</span>\n<span class=\"p\">(</span><span class=\"s1\">'&gt; factorial'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,))</span>\n<span class=\"p\">(</span><span class=\"s1\">'&gt; factorial'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,))</span>\n<span class=\"p\">(</span><span class=\"s1\">'&gt; factorial'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,))</span>\n<span class=\"p\">(</span><span class=\"s1\">'&gt; factorial'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,))</span>\n<span class=\"p\">(</span><span class=\"s1\">'&gt; factorial'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,))</span>\n<span class=\"p\">(</span><span class=\"s1\">'&lt; factorial'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,),</span> <span class=\"s1\">'-&gt;'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"s1\">'&lt; factorial'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,),</span> <span class=\"s1\">'-&gt;'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"s1\">'&lt; factorial'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,),</span> <span class=\"s1\">'-&gt;'</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"s1\">'&lt; factorial'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,),</span> <span class=\"s1\">'-&gt;'</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"s1\">'&lt; factorial'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,),</span> <span class=\"s1\">'-&gt;'</span><span class=\"p\">,</span> <span class=\"mi\">24</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"s1\">'&lt; factorial'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,),</span> <span class=\"s1\">'-&gt;'</span><span class=\"p\">,</span> <span class=\"mi\">120</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"s1\">'&lt; factorial'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">,),</span> <span class=\"s1\">'-&gt;'</span><span class=\"p\">,</span> <span class=\"mi\">720</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"s1\">'&lt; factorial'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">,),</span> <span class=\"s1\">'-&gt;'</span><span class=\"p\">,</span> <span class=\"mi\">5040</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"s1\">'&lt; factorial'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">,),</span> <span class=\"s1\">'-&gt;'</span><span class=\"p\">,</span> <span class=\"mi\">40320</span><span class=\"p\">)</span>\n</pre>\n<h2><code>testutils.assertNsEqual</code></h2>\n<p>Allows to assert equality on json/yaml like structures combining\ndicts, lists, numbers, strings, dates...\nThe comparision is done on the YAML output so that differences are\nspoted as text diffs.\nAlso keys in dicts are alphabetically sorted.</p>\n<h2><code>testutils.destructiveTest</code></h2>\n<p>An utility to avoid running destrutive tests in production.\nIt is a decorator that checks wheter the erp configured in <code>dbconfig</code>\nhas the testing flag and skips the test if it doesn't.</p>\n<p>The script <code>enable_destructive_test.py</code> is also provided to set/unset\nthat testing flag which is not defined by default.</p>\n<h2><code>isodates</code></h2>\n<p>Module for simplified isodate parsing and timezone handling.</p>\n<h2><code>sequence</code></h2>\n<p>Interprets strings like the ones the standard Print Dialog\nuses to specify pages to be printed.\nie. \"2,4,6-9,13\" means \"2, 4, from 6 to 9 and 13\"</p>\n\n          </div>"}, "last_serial": 6096723, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "b59dc6734c09b79722888c72a282f3e0", "sha256": "5e5914c16a3688b5d2206fe095bd520e8fe639acee9250fe58f842ef25d72a9d"}, "downloads": -1, "filename": "somutils-1.0.tar.gz", "has_sig": false, "md5_digest": "b59dc6734c09b79722888c72a282f3e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3727, "upload_time": "2016-04-12T15:56:39", "upload_time_iso_8601": "2016-04-12T15:56:39.062058Z", "url": "https://files.pythonhosted.org/packages/0f/fa/815d8798a9b825b4e3728126505b4814eacab4118f6c674c86eaa4c8981d/somutils-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "e28b30a784f654f6a7f0a3ff781a512a", "sha256": "2d5f72975e51c294373ecf92897b352c9982eb580c269686223c734e693b7316"}, "downloads": -1, "filename": "somutils-1.1.tar.gz", "has_sig": false, "md5_digest": "e28b30a784f654f6a7f0a3ff781a512a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4439, "upload_time": "2016-04-19T07:47:47", "upload_time_iso_8601": "2016-04-19T07:47:47.714243Z", "url": "https://files.pythonhosted.org/packages/c1/2c/0a04b6a3c261961201a9053699444e502882ca4f3237ce02e3b1df86a312/somutils-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "396d439ba30a8903e19e8cb0002c29a9", "sha256": "e35784b40a29014767f3b19ac584eceb3983b17e395e9bbe6aae397d3c04c2b2"}, "downloads": -1, "filename": "somutils-1.2.tar.gz", "has_sig": false, "md5_digest": "396d439ba30a8903e19e8cb0002c29a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4561, "upload_time": "2016-04-29T08:13:14", "upload_time_iso_8601": "2016-04-29T08:13:14.905566Z", "url": "https://files.pythonhosted.org/packages/f5/ef/a5738a4da94ccb8c562ec22a593a54298db67de031adee49267362a04ef5/somutils-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "67f5d1022e44e4b6fb7e292bb13beb1f", "sha256": "bdf853f64e22d942f61406ff297dd03b16a21b9d7f59df17655e04d1d2d711ef"}, "downloads": -1, "filename": "somutils-1.3.tar.gz", "has_sig": false, "md5_digest": "67f5d1022e44e4b6fb7e292bb13beb1f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4542, "upload_time": "2016-06-09T16:18:16", "upload_time_iso_8601": "2016-06-09T16:18:16.077799Z", "url": "https://files.pythonhosted.org/packages/e9/ca/a0ba5c9bf59d5d390f0275b8ca49edd50662ce29b38b75fa265e8b889cd8/somutils-1.3.tar.gz", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "025273907532590200ca41ab23c25f9b", "sha256": "b822d7fe8362ae27b5f1cb9df45e2f0a0ebf5e304dec5eb9b164ab6a6a36b90c"}, "downloads": -1, "filename": "somutils-1.5.tar.gz", "has_sig": false, "md5_digest": "025273907532590200ca41ab23c25f9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6517, "upload_time": "2019-09-06T07:32:25", "upload_time_iso_8601": "2019-09-06T07:32:25.438508Z", "url": "https://files.pythonhosted.org/packages/23/0d/698b315f5686c16bb65377088263a376aa9c8e20f2e2694348da44ba796b/somutils-1.5.tar.gz", "yanked": false}], "1.5.2": [{"comment_text": "", "digests": {"md5": "202e0cff3a0f3976cb6d5915beb40e3d", "sha256": "18a5dd7fedf8e6532806486a74fc4023eb50971c10550785276cf4494c7db7d8"}, "downloads": -1, "filename": "somutils-1.5.2.tar.gz", "has_sig": false, "md5_digest": "202e0cff3a0f3976cb6d5915beb40e3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7004, "upload_time": "2019-10-03T13:56:15", "upload_time_iso_8601": "2019-10-03T13:56:15.366669Z", "url": "https://files.pythonhosted.org/packages/4a/b6/fd616edb7f22643bac46fc5c218f64fe3328f8fbb7a443cd27246077f30e/somutils-1.5.2.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "72dd386d1c30a3e6e30f4159bd352b71", "sha256": "d53a58814cbc0112ba32988872ae3d883b2ac8a73645c0ce9cc648a77f204bca"}, "downloads": -1, "filename": "somutils-1.6.0.tar.gz", "has_sig": false, "md5_digest": "72dd386d1c30a3e6e30f4159bd352b71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11301, "upload_time": "2019-11-08T01:24:14", "upload_time_iso_8601": "2019-11-08T01:24:14.794594Z", "url": "https://files.pythonhosted.org/packages/09/23/5781d14db1c7ef8ac5e9c9f75f0f032a45cc1c066f9e161ea25d8d4e647c/somutils-1.6.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "72dd386d1c30a3e6e30f4159bd352b71", "sha256": "d53a58814cbc0112ba32988872ae3d883b2ac8a73645c0ce9cc648a77f204bca"}, "downloads": -1, "filename": "somutils-1.6.0.tar.gz", "has_sig": false, "md5_digest": "72dd386d1c30a3e6e30f4159bd352b71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11301, "upload_time": "2019-11-08T01:24:14", "upload_time_iso_8601": "2019-11-08T01:24:14.794594Z", "url": "https://files.pythonhosted.org/packages/09/23/5781d14db1c7ef8ac5e9c9f75f0f032a45cc1c066f9e161ea25d8d4e647c/somutils-1.6.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:40 2020"}