{"info": {"author": "Ikusaba-san", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "# discord.py UI\n\nAn extension package for anything relating to user input and interactions.\n\nEver wanted to make a prompt for your users? Maybe a cool paginator? `dpy-ui`\nwill make it all happen in simple, easy to remember functions and classes.\n\n## Installation\n\n**Requires Python 3.6+**\n\n```\npip install -U dpy-ui\n```\n\n### Development version\n\n```\npip install -U git+https://github.com/Ikusaba-san/discord.py-ui.git\n```\nor\n```\ngit clone git+https://github.com/Ikusaba-san/discord.py-ui.git\ncd discord.py-ui\npip install -U .[voice]\n```\n\nThen once it's installed, you can import it via\n```py\nfrom discord.ext import ui\n```\n\n## Quick Examples\n\n### Prompt the user for some input\n```py\nname = await ui.prompt(ctx, 'What is your name?')\nawait ctx.send(f'Ok, your name is {name}')\n```\n\n### Choose between a list of choices\n```py\nchoices = ['red', 'blue', 'green', 'yellow']\ncolour = await ui.select(ctx, 'What is your favo(u)rite colo(u)r?', choices)\n\n# Want buttons instead of text? No problem.\n\nchoices = [\n    ui.Choice('Very Happy', button='\ud83d\ude04'),\n    ui.Choice('Happy', button='\ud83d\ude42'),\n    ui.Choice('Neutral', button='\ud83d\ude10'),\n    ui.Choice('Sad', button='\ud83d\ude26'),\n    ui.Choice('Very Sad', button='\ud83d\ude22'),\n]\nfeeling = await ui.select(ctx, 'How are you feeling today?', choices)\n```\n\n### Make a simple paginator\n```py\ndef some_statements():\n    for i in range(20):\n        yield f'This is sentence {i}'\n\ndef format_page(page):\n    return f'This is a page\\n{page}'\n\npaginator = ui.Paginator(some_statements(), page_formatter=format_page)\nawait paginator.start(ctx)\n\n# And to chunk it:\n\ndef format_chunk(chunk):\n    # Formatters can return embeds too\n    return discord.Embed(description='\\n'.join(chunk))\n\npaginator = ui.Paginator.chunked(some_statements(), 10, page_formatter=format_chunk)\nawait paginator.start(ctx)\n```\n\n### Make a custom session\n```py\nclass MySession(ui.Session):\n    async def send_initial_message(self):\n        return await self.context.send('Say hi or click the thinking face.')\n\n    @ui.button('\ud83e\udd14')\n    async def think(self, payload):\n        await self.context.send('Thinking a lot...')\n\n    @ui.button('\u23f9')\n    async def quit(self, payload):\n        await self.stop()\n\n    @ui.command('hello|hi')\n    async def say_hello(self, message):\n        await self.context.send(f'Hello, {message.author.mention}!')\n\nsession = MySession(timeout=120)\nawait session.start(ctx)\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Ikusaba-san/dpy-ui", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "dpy-ui", "package_url": "https://pypi.org/project/dpy-ui/", "platform": "", "project_url": "https://pypi.org/project/dpy-ui/", "project_urls": {"Homepage": "https://github.com/Ikusaba-san/dpy-ui"}, "release_url": "https://pypi.org/project/dpy-ui/0.2.1/", "requires_dist": ["dataclasses ; python_version < \"3.7\""], "requires_python": ">=3.6", "summary": "User interaction utilities for discord.py.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>discord.py UI</h1>\n<p>An extension package for anything relating to user input and interactions.</p>\n<p>Ever wanted to make a prompt for your users? Maybe a cool paginator? <code>dpy-ui</code>\nwill make it all happen in simple, easy to remember functions and classes.</p>\n<h2>Installation</h2>\n<p><strong>Requires Python 3.6+</strong></p>\n<pre><code>pip install -U dpy-ui\n</code></pre>\n<h3>Development version</h3>\n<pre><code>pip install -U git+https://github.com/Ikusaba-san/discord.py-ui.git\n</code></pre>\n<p>or</p>\n<pre><code>git clone git+https://github.com/Ikusaba-san/discord.py-ui.git\ncd discord.py-ui\npip install -U .[voice]\n</code></pre>\n<p>Then once it's installed, you can import it via</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">discord.ext</span> <span class=\"kn\">import</span> <span class=\"n\">ui</span>\n</pre>\n<h2>Quick Examples</h2>\n<h3>Prompt the user for some input</h3>\n<pre><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">prompt</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">,</span> <span class=\"s1\">'What is your name?'</span><span class=\"p\">)</span>\n<span class=\"k\">await</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Ok, your name is </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre>\n<h3>Choose between a list of choices</h3>\n<pre><span class=\"n\">choices</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'red'</span><span class=\"p\">,</span> <span class=\"s1\">'blue'</span><span class=\"p\">,</span> <span class=\"s1\">'green'</span><span class=\"p\">,</span> <span class=\"s1\">'yellow'</span><span class=\"p\">]</span>\n<span class=\"n\">colour</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">,</span> <span class=\"s1\">'What is your favo(u)rite colo(u)r?'</span><span class=\"p\">,</span> <span class=\"n\">choices</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Want buttons instead of text? No problem.</span>\n\n<span class=\"n\">choices</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">Choice</span><span class=\"p\">(</span><span class=\"s1\">'Very Happy'</span><span class=\"p\">,</span> <span class=\"n\">button</span><span class=\"o\">=</span><span class=\"s1\">'\ud83d\ude04'</span><span class=\"p\">),</span>\n    <span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">Choice</span><span class=\"p\">(</span><span class=\"s1\">'Happy'</span><span class=\"p\">,</span> <span class=\"n\">button</span><span class=\"o\">=</span><span class=\"s1\">'\ud83d\ude42'</span><span class=\"p\">),</span>\n    <span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">Choice</span><span class=\"p\">(</span><span class=\"s1\">'Neutral'</span><span class=\"p\">,</span> <span class=\"n\">button</span><span class=\"o\">=</span><span class=\"s1\">'\ud83d\ude10'</span><span class=\"p\">),</span>\n    <span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">Choice</span><span class=\"p\">(</span><span class=\"s1\">'Sad'</span><span class=\"p\">,</span> <span class=\"n\">button</span><span class=\"o\">=</span><span class=\"s1\">'\ud83d\ude26'</span><span class=\"p\">),</span>\n    <span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">Choice</span><span class=\"p\">(</span><span class=\"s1\">'Very Sad'</span><span class=\"p\">,</span> <span class=\"n\">button</span><span class=\"o\">=</span><span class=\"s1\">'\ud83d\ude22'</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n<span class=\"n\">feeling</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">,</span> <span class=\"s1\">'How are you feeling today?'</span><span class=\"p\">,</span> <span class=\"n\">choices</span><span class=\"p\">)</span>\n</pre>\n<h3>Make a simple paginator</h3>\n<pre><span class=\"k\">def</span> <span class=\"nf\">some_statements</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">):</span>\n        <span class=\"k\">yield</span> <span class=\"sa\">f</span><span class=\"s1\">'This is sentence </span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s1\">'</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">format_page</span><span class=\"p\">(</span><span class=\"n\">page</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s1\">'This is a page</span><span class=\"se\">\\n</span><span class=\"si\">{</span><span class=\"n\">page</span><span class=\"si\">}</span><span class=\"s1\">'</span>\n\n<span class=\"n\">paginator</span> <span class=\"o\">=</span> <span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">Paginator</span><span class=\"p\">(</span><span class=\"n\">some_statements</span><span class=\"p\">(),</span> <span class=\"n\">page_formatter</span><span class=\"o\">=</span><span class=\"n\">format_page</span><span class=\"p\">)</span>\n<span class=\"k\">await</span> <span class=\"n\">paginator</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># And to chunk it:</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">format_chunk</span><span class=\"p\">(</span><span class=\"n\">chunk</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Formatters can return embeds too</span>\n    <span class=\"k\">return</span> <span class=\"n\">discord</span><span class=\"o\">.</span><span class=\"n\">Embed</span><span class=\"p\">(</span><span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">chunk</span><span class=\"p\">))</span>\n\n<span class=\"n\">paginator</span> <span class=\"o\">=</span> <span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">Paginator</span><span class=\"o\">.</span><span class=\"n\">chunked</span><span class=\"p\">(</span><span class=\"n\">some_statements</span><span class=\"p\">(),</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">page_formatter</span><span class=\"o\">=</span><span class=\"n\">format_chunk</span><span class=\"p\">)</span>\n<span class=\"k\">await</span> <span class=\"n\">paginator</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">)</span>\n</pre>\n<h3>Make a custom session</h3>\n<pre><span class=\"k\">class</span> <span class=\"nc\">MySession</span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">):</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">send_initial_message</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"k\">await</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"s1\">'Say hi or click the thinking face.'</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@ui</span><span class=\"o\">.</span><span class=\"n\">button</span><span class=\"p\">(</span><span class=\"s1\">'\ud83e\udd14'</span><span class=\"p\">)</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">think</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"p\">):</span>\n        <span class=\"k\">await</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"s1\">'Thinking a lot...'</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@ui</span><span class=\"o\">.</span><span class=\"n\">button</span><span class=\"p\">(</span><span class=\"s1\">'\u23f9'</span><span class=\"p\">)</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">quit</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"p\">):</span>\n        <span class=\"k\">await</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@ui</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">(</span><span class=\"s1\">'hello|hi'</span><span class=\"p\">)</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">say_hello</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">):</span>\n        <span class=\"k\">await</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Hello, </span><span class=\"si\">{</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">author</span><span class=\"o\">.</span><span class=\"n\">mention</span><span class=\"si\">}</span><span class=\"s1\">!'</span><span class=\"p\">)</span>\n\n<span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">MySession</span><span class=\"p\">(</span><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">120</span><span class=\"p\">)</span>\n<span class=\"k\">await</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 5453298, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6ec2aed6d6abd491d7525ed955f3a233", "sha256": "42cc735c5852365e3d25aea12f0e205d43639068cb23a57f03219e60132443a2"}, "downloads": -1, "filename": "dpy_ui-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6ec2aed6d6abd491d7525ed955f3a233", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10498, "upload_time": "2019-05-15T23:52:11", "upload_time_iso_8601": "2019-05-15T23:52:11.460431Z", "url": "https://files.pythonhosted.org/packages/63/13/cc2be0e9c063f6101b451fe55913540a49af4a4b0685d99d27e540001b42/dpy_ui-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d4e2594676cac27a4dce6abb1e6864f", "sha256": "fe7473dd69a99dd9256c0150bcf26930ebf2e2c476a67adae6173ebc11b56207"}, "downloads": -1, "filename": "dpy-ui-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6d4e2594676cac27a4dce6abb1e6864f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8725, "upload_time": "2019-05-15T23:52:13", "upload_time_iso_8601": "2019-05-15T23:52:13.702225Z", "url": "https://files.pythonhosted.org/packages/1d/25/ede61534ee6fbf701197263ac16b8273ba9f93f8b2e134bdd5829813bea2/dpy-ui-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "8f80018bdd7201f97a01b75fecef5988", "sha256": "ef4057153e6f77b65e8212637e99ed805b247dc585b39c8162da5b7049bb275c"}, "downloads": -1, "filename": "dpy_ui-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8f80018bdd7201f97a01b75fecef5988", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12012, "upload_time": "2019-05-27T06:23:36", "upload_time_iso_8601": "2019-05-27T06:23:36.472527Z", "url": "https://files.pythonhosted.org/packages/66/ef/3a22bfd0b9a27a6d3128d9bdcf9437eb6fdacc3db0292d2cd2ba88342e72/dpy_ui-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "617c2750df9063d034b133dc3d30fbda", "sha256": "36f1f13e922476917c027736d098219e1c94614109c6c47acc5cde279a6508c3"}, "downloads": -1, "filename": "dpy-ui-0.2.0.tar.gz", "has_sig": false, "md5_digest": "617c2750df9063d034b133dc3d30fbda", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10774, "upload_time": "2019-05-27T06:23:37", "upload_time_iso_8601": "2019-05-27T06:23:37.978248Z", "url": "https://files.pythonhosted.org/packages/44/8f/135ca0bfc299f73455fda009c73edec1fb6a9bf7e04e77d0c09e7092d4cf/dpy-ui-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "e8c072f6138b250dfde0041978c81701", "sha256": "14c9a0ff1f9314107a1d7b3bef29f5b3b7324c74ef7540323b9e37ba075b8403"}, "downloads": -1, "filename": "dpy_ui-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e8c072f6138b250dfde0041978c81701", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12047, "upload_time": "2019-06-26T19:09:54", "upload_time_iso_8601": "2019-06-26T19:09:54.734869Z", "url": "https://files.pythonhosted.org/packages/7d/a8/3eb443891c8322c496b642b746e78cfca164ac8fa2fedded6cc8300181f2/dpy_ui-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b79500f4dbd9825510538af10102dd7", "sha256": "396a01c463341cd47c694ad5d393486480a0cbeb8a9375af6f43f3a401e4689d"}, "downloads": -1, "filename": "dpy-ui-0.2.1.tar.gz", "has_sig": false, "md5_digest": "6b79500f4dbd9825510538af10102dd7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10815, "upload_time": "2019-06-26T19:09:56", "upload_time_iso_8601": "2019-06-26T19:09:56.332791Z", "url": "https://files.pythonhosted.org/packages/07/dd/06f39f08379ae0e3b855065ea968d0fea35d3af8d735d671797b3b239a55/dpy-ui-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e8c072f6138b250dfde0041978c81701", "sha256": "14c9a0ff1f9314107a1d7b3bef29f5b3b7324c74ef7540323b9e37ba075b8403"}, "downloads": -1, "filename": "dpy_ui-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e8c072f6138b250dfde0041978c81701", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12047, "upload_time": "2019-06-26T19:09:54", "upload_time_iso_8601": "2019-06-26T19:09:54.734869Z", "url": "https://files.pythonhosted.org/packages/7d/a8/3eb443891c8322c496b642b746e78cfca164ac8fa2fedded6cc8300181f2/dpy_ui-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b79500f4dbd9825510538af10102dd7", "sha256": "396a01c463341cd47c694ad5d393486480a0cbeb8a9375af6f43f3a401e4689d"}, "downloads": -1, "filename": "dpy-ui-0.2.1.tar.gz", "has_sig": false, "md5_digest": "6b79500f4dbd9825510538af10102dd7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10815, "upload_time": "2019-06-26T19:09:56", "upload_time_iso_8601": "2019-06-26T19:09:56.332791Z", "url": "https://files.pythonhosted.org/packages/07/dd/06f39f08379ae0e3b855065ea968d0fea35d3af8d735d671797b3b239a55/dpy-ui-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:58 2020"}