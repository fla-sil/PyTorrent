{"info": {"author": "Hannah White", "author_email": "hnnh.v.wht@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering"], "description": "<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/hnnhvwht/coin-seer/master/docs/img/coin-seer-logo.png\">\n</p>\n\n<h2 align=\"center\">Automatic Cryptocurrency Forecasting</h2>\n\nCoin Seer is a Python package that provides a predictive modelling pipeline for cryptocurrencies. It automatically preprocesses time series, computes descriptive statistics, fits models, makes forecasts, generates evaluation metrics, and creates plots. Coin Seer adopts an analyst-in-the-loop approach by providing extensive logging capabilities and emphasizes statistical robustness.\n\nCoin Seer is presently in the alpha stage and more features and tests are being developed actively. Please send bug reports and feature requests to the [author](mailto:hnnh.v.wht@gmail.com) or post them as [issues](https://github.com/hnnhvwht/coin-seer/issues).\n\n## Quick Start\n\nInstall Coin Seer, e.g., from PyPI:\n\n```bash\n$ pip install coin-seer\n```\n\nThe `CoinSeer` class provides an API for predictive modelling. Instantiate it using a datetime-indexed time series in `pandas.Series` format and a currency pair, e.g.,\n\n```python\n>>> from coinseer.api import CoinSeer\n>>> cs = CoinSeer(ts, 'btc-eth')\n```\n\nBy default, Coin Seer preprocesses the time series and converts it to its 1-step log returns. You can control this behaviour by passing in keyword arguments.\n\nExplore the data by calling `cs.dashboard()` and `cs.describe()`. When ready, select a model and prepare forecasts:\n\n```python\n>>> cs.select('arima', logging=True)\n>>> cs.run(20)\n```\n\nThis code will automatically select a best autoregressive integrated moving average (ARIMA) model, fitted to the whole time series. It will then generate 20 point forecasts off the end of the time series. Analyze the results using the following methods:\n\n- `cs.log()`, to output the model selection log (only available if model created with `logging=True`);\n- `cs.evaluate()`, to display any evaluation metrics;\n- `cs.display_results()`, to plot the forecasts along with any diagnostic information; and\n- `cs.forecasts()`, to get the forecast values directly.\n\nFor more information about the API and the available models, [read the docs!](https://coin-seer.readthedocs.io/en/latest/)\n\n## Possible updates\n\n- Improve support for prediction intervals and add density forecasting capabilities\n- Incorporate GARCH and LSTM models\n- Improve plotting (legend placement, themes, tick counts, etc.)\n- Update `arima.Rolling` class to handle logging using `pandas.DataFrame`, not `dict`\n- Add/improve functions for saving and loading models, logs (as CSV), and plots (as SVG) to disk\n- General refactoring, particularly of `chart` and `models.arima` modules\n\n## Authors\n\nCoin Seer is written and maintained by [Hannah White](mailto:hnnh.v.wht@gmail.com).\n\n## Acknowledgements\n\nThe Coin Seer logo is set in Indestructible Type's [Bodoni*](https://indestructibletype.com/Bodoni.html).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hnnhvwht/coin-seer", "keywords": "cryptocurrency forecasting", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "coin-seer", "package_url": "https://pypi.org/project/coin-seer/", "platform": "", "project_url": "https://pypi.org/project/coin-seer/", "project_urls": {"Documentation": "https://coin-seer.readthedocs.io", "Homepage": "https://github.com/hnnhvwht/coin-seer", "Source": "https://github.com/hnnhvwht/coin-seer"}, "release_url": "https://pypi.org/project/coin-seer/0.1.1/", "requires_dist": ["numpy (>=1.18.1)", "scipy (>=1.4.1)", "statsmodels (>=0.11.0)", "matplotlib (>=3.1.3)", "pandas (>=1.0.1)"], "requires_python": ">=3.8", "summary": "Automatic cryptocurrency forecasting", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\">\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d6b6628ee006e78fdd1f9de6cb316c27a5677aa4/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f686e6e68767768742f636f696e2d736565722f6d61737465722f646f63732f696d672f636f696e2d736565722d6c6f676f2e706e67\">\n</p>\n<h2>Automatic Cryptocurrency Forecasting</h2>\n<p>Coin Seer is a Python package that provides a predictive modelling pipeline for cryptocurrencies. It automatically preprocesses time series, computes descriptive statistics, fits models, makes forecasts, generates evaluation metrics, and creates plots. Coin Seer adopts an analyst-in-the-loop approach by providing extensive logging capabilities and emphasizes statistical robustness.</p>\n<p>Coin Seer is presently in the alpha stage and more features and tests are being developed actively. Please send bug reports and feature requests to the <a href=\"mailto:hnnh.v.wht@gmail.com\">author</a> or post them as <a href=\"https://github.com/hnnhvwht/coin-seer/issues\" rel=\"nofollow\">issues</a>.</p>\n<h2>Quick Start</h2>\n<p>Install Coin Seer, e.g., from PyPI:</p>\n<pre>$ pip install coin-seer\n</pre>\n<p>The <code>CoinSeer</code> class provides an API for predictive modelling. Instantiate it using a datetime-indexed time series in <code>pandas.Series</code> format and a currency pair, e.g.,</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">coinseer.api</span> <span class=\"kn\">import</span> <span class=\"n\">CoinSeer</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cs</span> <span class=\"o\">=</span> <span class=\"n\">CoinSeer</span><span class=\"p\">(</span><span class=\"n\">ts</span><span class=\"p\">,</span> <span class=\"s1\">'btc-eth'</span><span class=\"p\">)</span>\n</pre>\n<p>By default, Coin Seer preprocesses the time series and converts it to its 1-step log returns. You can control this behaviour by passing in keyword arguments.</p>\n<p>Explore the data by calling <code>cs.dashboard()</code> and <code>cs.describe()</code>. When ready, select a model and prepare forecasts:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cs</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"s1\">'arima'</span><span class=\"p\">,</span> <span class=\"n\">logging</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cs</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n</pre>\n<p>This code will automatically select a best autoregressive integrated moving average (ARIMA) model, fitted to the whole time series. It will then generate 20 point forecasts off the end of the time series. Analyze the results using the following methods:</p>\n<ul>\n<li><code>cs.log()</code>, to output the model selection log (only available if model created with <code>logging=True</code>);</li>\n<li><code>cs.evaluate()</code>, to display any evaluation metrics;</li>\n<li><code>cs.display_results()</code>, to plot the forecasts along with any diagnostic information; and</li>\n<li><code>cs.forecasts()</code>, to get the forecast values directly.</li>\n</ul>\n<p>For more information about the API and the available models, <a href=\"https://coin-seer.readthedocs.io/en/latest/\" rel=\"nofollow\">read the docs!</a></p>\n<h2>Possible updates</h2>\n<ul>\n<li>Improve support for prediction intervals and add density forecasting capabilities</li>\n<li>Incorporate GARCH and LSTM models</li>\n<li>Improve plotting (legend placement, themes, tick counts, etc.)</li>\n<li>Update <code>arima.Rolling</code> class to handle logging using <code>pandas.DataFrame</code>, not <code>dict</code></li>\n<li>Add/improve functions for saving and loading models, logs (as CSV), and plots (as SVG) to disk</li>\n<li>General refactoring, particularly of <code>chart</code> and <code>models.arima</code> modules</li>\n</ul>\n<h2>Authors</h2>\n<p>Coin Seer is written and maintained by <a href=\"mailto:hnnh.v.wht@gmail.com\">Hannah White</a>.</p>\n<h2>Acknowledgements</h2>\n<p>The Coin Seer logo is set in Indestructible Type's <a href=\"https://indestructibletype.com/Bodoni.html\" rel=\"nofollow\">Bodoni*</a>.</p>\n\n          </div>"}, "last_serial": 7080011, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "144158ab64ff8994853ee9883b64ad20", "sha256": "ab17c33e35d5845ece53ecd5978db5b5cf393e7c5db5ea6e1cc5523f997befaa"}, "downloads": -1, "filename": "coin_seer-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "144158ab64ff8994853ee9883b64ad20", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 20787, "upload_time": "2020-04-17T19:01:57", "upload_time_iso_8601": "2020-04-17T19:01:57.554843Z", "url": "https://files.pythonhosted.org/packages/1a/01/f7baa5bfe4d4ed24e00b9001710ff6c26118de53e567908435a9a372fddc/coin_seer-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1384dfeae0da15f26fe95a1f44c1dd9d", "sha256": "9895ccde2ce36cd0911895cef5169f8c658045394ade2dff041d0142067adf5c"}, "downloads": -1, "filename": "coin-seer-0.1.tar.gz", "has_sig": false, "md5_digest": "1384dfeae0da15f26fe95a1f44c1dd9d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 16814, "upload_time": "2020-04-17T19:01:59", "upload_time_iso_8601": "2020-04-17T19:01:59.843317Z", "url": "https://files.pythonhosted.org/packages/6f/50/de626113237fde344bb96e158f21bc6d42e428b41e8cadd243e647ad5364/coin-seer-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e5f3e1374ba76b644292bc9ad015e5b7", "sha256": "a39c992e799fb629e576d639e5e9b16e0f3772ba27872bc526bf870fa63181a3"}, "downloads": -1, "filename": "coin_seer-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e5f3e1374ba76b644292bc9ad015e5b7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 20256, "upload_time": "2020-04-22T21:13:34", "upload_time_iso_8601": "2020-04-22T21:13:34.041932Z", "url": "https://files.pythonhosted.org/packages/d9/fa/e7a890d2580bf289c0c28c2fe71d9a582b3b34d0ac1154f06dbd6fda6bb1/coin_seer-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "418aaba9388e0b9e5ccdff9776c619e1", "sha256": "8bead4a3e94d16b126ad9278558eb187dd2a8a11964e307ca311cf4ab7b710bd"}, "downloads": -1, "filename": "coin-seer-0.1.1.tar.gz", "has_sig": false, "md5_digest": "418aaba9388e0b9e5ccdff9776c619e1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 17110, "upload_time": "2020-04-22T21:13:35", "upload_time_iso_8601": "2020-04-22T21:13:35.846762Z", "url": "https://files.pythonhosted.org/packages/6b/07/dce8b4ba3b84e2e09b380d4b564360aa8865f21014b6b4adf27b67038a14/coin-seer-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e5f3e1374ba76b644292bc9ad015e5b7", "sha256": "a39c992e799fb629e576d639e5e9b16e0f3772ba27872bc526bf870fa63181a3"}, "downloads": -1, "filename": "coin_seer-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e5f3e1374ba76b644292bc9ad015e5b7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 20256, "upload_time": "2020-04-22T21:13:34", "upload_time_iso_8601": "2020-04-22T21:13:34.041932Z", "url": "https://files.pythonhosted.org/packages/d9/fa/e7a890d2580bf289c0c28c2fe71d9a582b3b34d0ac1154f06dbd6fda6bb1/coin_seer-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "418aaba9388e0b9e5ccdff9776c619e1", "sha256": "8bead4a3e94d16b126ad9278558eb187dd2a8a11964e307ca311cf4ab7b710bd"}, "downloads": -1, "filename": "coin-seer-0.1.1.tar.gz", "has_sig": false, "md5_digest": "418aaba9388e0b9e5ccdff9776c619e1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 17110, "upload_time": "2020-04-22T21:13:35", "upload_time_iso_8601": "2020-04-22T21:13:35.846762Z", "url": "https://files.pythonhosted.org/packages/6b/07/dce8b4ba3b84e2e09b380d4b564360aa8865f21014b6b4adf27b67038a14/coin-seer-0.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:06 2020"}