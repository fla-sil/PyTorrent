{"info": {"author": "Stephen Fuhry", "author_email": "fuhrysteve@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "marshmallow-jsonschema: JSON Schema formatting with marshmallow\n---------------------------------------------------------------\n\n|Build Status| |Coverage Status| |Code style: black|\n\nmarshmallow-jsonschema translates marshmallow schemas into JSON Schema\nDraft v7 compliant jsonschema. See http://json-schema.org/\n\nWhy would I want my schema translated to JSON?\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWhat are the use cases for this? Let's say you have a marshmallow schema\nin python, but you want to render your schema as a form in another\nsystem (for example: a web browser or mobile device).\n\nInstallation\n^^^^^^^^^^^^\n\n::\n\n    pip install marshmallow-jsonschema\n\nSome Client tools can render forms using JSON Schema\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n-  `react-jsonschema-form <https://github.com/mozilla-services/react-jsonschema-form>`__\n   (recommended)\n-  See below extension for this excellent library!\n-  https://github.com/brutusin/json-forms\n-  https://github.com/jdorn/json-editor\n-  https://github.com/ulion/jsonform\n\nExamples\n~~~~~~~~\n\nNote that while these examples are using marshmallow v3 API, marshmallow\nv2 is also still supported and part of the build. Support will be\ndropped for v2 in a future release.\n\nSimple Example\n^^^^^^^^^^^^^^\n\n.. code:: python\n\n    from marshmallow import Schema, fields\n    from marshmallow_jsonschema import JSONSchema\n\n    class UserSchema(Schema):\n        username = fields.String()\n        age = fields.Integer()\n        birthday = fields.Date()\n\n    user_schema = UserSchema()\n\n    json_schema = JSONSchema()\n    json_schema.dump(user_schema)\n\nYields:\n\n.. code:: python\n\n    {'properties': {'age': {'format': 'integer',\n                            'title': 'age',\n                            'type': 'number'},\n                    'birthday': {'format': 'date',\n                                 'title': 'birthday',\n                                 'type': 'string'},\n                    'username': {'title': 'username', 'type': 'string'}},\n     'required': [],\n     'type': 'object'}\n\nNested Example\n^^^^^^^^^^^^^^\n\n.. code:: python\n\n    from marshmallow import Schema, fields\n    from marshmallow_jsonschema import JSONSchema\n    from tests import UserSchema\n\n\n    class Athlete(object):\n        user_schema = UserSchema()\n\n        def __init__(self):\n            self.name = 'sam'\n\n\n    class AthleteSchema(Schema):\n        user_schema = fields.Nested(JSONSchema)\n        name = fields.String()\n\n        \n    athlete = Athlete()\n    athlete_schema = AthleteSchema()\n\n    athlete_schema.dump(athlete)\n\nComplete example Flask application using brutisin/json-forms\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. figure:: http://i.imgur.com/jJv1wFk.png\n   :alt: Screenshot\n\n   Screenshot\n\nThis example renders a form not dissimilar to how\n`wtforms <https://github.com/wtforms/wtforms>`__ might render a form.\n\nHowever rather than rendering the form in python, the JSON Schema is\nrendered using the javascript library\n`brutusin/json-forms <https://github.com/brutusin/json-forms>`__.\n\n.. code:: python\n\n    from flask import Flask, jsonify\n    from marshmallow import Schema, fields\n    from marshmallow_jsonschema import JSONSchema\n\n    app = Flask(__name__)\n\n\n    class UserSchema(Schema):\n        name = fields.String()\n        address = fields.String()\n\n\n    @app.route('/schema')\n    def schema():\n        schema = UserSchema()\n        return jsonify(JSONSchema().dump(schema))\n\n\n    @app.route('/')\n    def home():\n        return '''<!DOCTYPE html>\n    <head>\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/brutusin.json-forms/1.3.0/css/brutusin-json-forms.css\"><Paste>\n    <script src=\"https://code.jquery.com/jquery-1.12.1.min.js\" integrity=\"sha256-I1nTg78tSrZev3kjvfdM5A5Ak/blglGzlaZANLPDl3I=\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/underscore.string/3.3.4/underscore.string.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/brutusin.json-forms/1.3.0/js/brutusin-json-forms.min.js\"></script>\n    <script>\n    $(document).ready(function() {\n        $.ajax({\n            url: '/schema'\n            , success: function(data) {\n                var container = document.getElementById('myform');\n                var BrutusinForms = brutusin[\"json-forms\"];\n                var bf = BrutusinForms.create(data);\n                bf.render(container);\n            }\n        });\n    });\n    </script>\n    </head>\n    <body>\n    <div id=\"myform\"></div>\n    </body>\n    </html>\n    '''\n\n\n    if __name__ == '__main__':\n        app.run(host='0.0.0.0', debug=True)\n\nAdvanced usage\n~~~~~~~~~~~~~~\n\nCustom Type support\n^^^^^^^^^^^^^^^^^^^\n\nSimply add a ``_jsonschema_type_mapping`` method to your field so we\nknow how it ought to get serialized to JSON Schema.\n\nA common use case for this is creating a dropdown menu using enum (see\nGender below).\n\n.. code:: python\n\n    class Colour(fields.Field):\n\n        def _jsonschema_type_mapping(self):\n            return {\n                'type': 'string',\n            }\n\n        def _serialize(self, value, attr, obj):\n            r, g, b = value\n            r = hex(r)[2:]\n            g = hex(g)[2:]\n            b = hex(b)[2:]\n            return '#' + r + g + b \n\n    class Gender(fields.String):\n        def _jsonschema_type_mapping(self):\n            return {\n                'type': 'string',\n                'enum': ['Male', 'Female']\n            }\n\n\n    class UserSchema(Schema):\n        name = fields.String(required=True)\n        favourite_colour = Colour()\n        gender = Gender()\n\n    schema = UserSchema()\n    json_schema = JSONSchema()\n    json_schema.dump(schema)\n\nReact-JSONSchema-Form Extension\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n`react-jsonschema-form <https://react-jsonschema-form.readthedocs.io/en/latest/>`__\nis a library for rendering jsonschemas as a form using React. It is very\npowerful and full featured.. the catch is that it requires a proprietary\n```uiSchema`` <https://react-jsonschema-form.readthedocs.io/en/latest/form-customization/#the-uischema-object>`__\nto provide advanced control how the form is rendered. `Here's a live\nplayground <https://rjsf-team.github.io/react-jsonschema-form/>`__\n\n*(new in version 0.10.0)*\n\n.. code:: python\n\n    from marshmallow_jsonschema.extensions import ReactJsonSchemaFormJSONSchema\n\n    class MySchema(Schema):\n        first_name = fields.String(\n            metadata={\n                'ui:autofocus': True,\n            }\n        )\n        last_name = fields.String()\n\n        class Meta:\n            react_uischema_extra = {\n                'ui:order': [\n                    'first_name',\n                    'last_name',\n                ]\n            }\n\n\n    json_schema_obj = ReactJsonSchemaFormJSONSchema()\n    schema = MySchema()\n\n    # here's your jsonschema\n    data = json_schema_obj.dump(schema)\n\n    # ..and here's your uiSchema!\n    ui_schema_json = json_schema_obj.dump_uischema(schema)\n\n.. |Build Status| image:: https://travis-ci.org/fuhrysteve/marshmallow-jsonschema.svg?branch=master\n   :target: https://travis-ci.org/fuhrysteve/marshmallow-jsonschema\n.. |Coverage Status| image:: https://coveralls.io/repos/github/fuhrysteve/marshmallow-jsonschema/badge.svg?branch=master\n   :target: https://coveralls.io/github/fuhrysteve/marshmallow-jsonschema?branch=master\n.. |Code style: black| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/python/black\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fuhrysteve/marshmallow-jsonschema", "keywords": "marshmallow-jsonschema marshmallow schema serialization jsonschema validation", "license": "The MIT License (MIT)\n\nCopyright (c) 2016 Stephen J. Fuhry\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n", "maintainer": "", "maintainer_email": "", "name": "marshmallow-jsonschema", "package_url": "https://pypi.org/project/marshmallow-jsonschema/", "platform": "", "project_url": "https://pypi.org/project/marshmallow-jsonschema/", "project_urls": {"Homepage": "https://github.com/fuhrysteve/marshmallow-jsonschema"}, "release_url": "https://pypi.org/project/marshmallow-jsonschema/0.10.0/", "requires_dist": null, "requires_python": "", "summary": "JSON Schema Draft v4 (http://json-schema.org/) formatting with marshmallow", "version": "0.10.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/fuhrysteve/marshmallow-jsonschema\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/edc5248d1d322cc938451e5bef4b18cffad0f67f/68747470733a2f2f7472617669732d63692e6f72672f667568727973746576652f6d617273686d616c6c6f772d6a736f6e736368656d612e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/github/fuhrysteve/marshmallow-jsonschema?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b972c0525190eafcd5ee6b5a5b3c563c90e960d2/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f667568727973746576652f6d617273686d616c6c6f772d6a736f6e736368656d612f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://github.com/python/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p>marshmallow-jsonschema translates marshmallow schemas into JSON Schema\nDraft v7 compliant jsonschema. See <a href=\"http://json-schema.org/\" rel=\"nofollow\">http://json-schema.org/</a></p>\n<div id=\"why-would-i-want-my-schema-translated-to-json\">\n<h2>Why would I want my schema translated to JSON?</h2>\n<p>What are the use cases for this? Let\u2019s say you have a marshmallow schema\nin python, but you want to render your schema as a form in another\nsystem (for example: a web browser or mobile device).</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install marshmallow-jsonschema\n</pre>\n</div>\n<div id=\"some-client-tools-can-render-forms-using-json-schema\">\n<h2>Some Client tools can render forms using JSON Schema</h2>\n<ul>\n<li><a href=\"https://github.com/mozilla-services/react-jsonschema-form\" rel=\"nofollow\">react-jsonschema-form</a>\n(recommended)</li>\n<li>See below extension for this excellent library!</li>\n<li><a href=\"https://github.com/brutusin/json-forms\" rel=\"nofollow\">https://github.com/brutusin/json-forms</a></li>\n<li><a href=\"https://github.com/jdorn/json-editor\" rel=\"nofollow\">https://github.com/jdorn/json-editor</a></li>\n<li><a href=\"https://github.com/ulion/jsonform\" rel=\"nofollow\">https://github.com/ulion/jsonform</a></li>\n</ul>\n<div id=\"examples\">\n<h3>Examples</h3>\n<p>Note that while these examples are using marshmallow v3 API, marshmallow\nv2 is also still supported and part of the build. Support will be\ndropped for v2 in a future release.</p>\n</div>\n</div>\n<div id=\"simple-example\">\n<h2>Simple Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">marshmallow</span> <span class=\"kn\">import</span> <span class=\"n\">Schema</span><span class=\"p\">,</span> <span class=\"n\">fields</span>\n<span class=\"kn\">from</span> <span class=\"nn\">marshmallow_jsonschema</span> <span class=\"kn\">import</span> <span class=\"n\">JSONSchema</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">UserSchema</span><span class=\"p\">(</span><span class=\"n\">Schema</span><span class=\"p\">):</span>\n    <span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">()</span>\n    <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">Integer</span><span class=\"p\">()</span>\n    <span class=\"n\">birthday</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">Date</span><span class=\"p\">()</span>\n\n<span class=\"n\">user_schema</span> <span class=\"o\">=</span> <span class=\"n\">UserSchema</span><span class=\"p\">()</span>\n\n<span class=\"n\">json_schema</span> <span class=\"o\">=</span> <span class=\"n\">JSONSchema</span><span class=\"p\">()</span>\n<span class=\"n\">json_schema</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">user_schema</span><span class=\"p\">)</span>\n</pre>\n<p>Yields:</p>\n<pre><span class=\"p\">{</span><span class=\"s1\">'properties'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'format'</span><span class=\"p\">:</span> <span class=\"s1\">'integer'</span><span class=\"p\">,</span>\n                        <span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'age'</span><span class=\"p\">,</span>\n                        <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'number'</span><span class=\"p\">},</span>\n                <span class=\"s1\">'birthday'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'format'</span><span class=\"p\">:</span> <span class=\"s1\">'date'</span><span class=\"p\">,</span>\n                             <span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'birthday'</span><span class=\"p\">,</span>\n                             <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'string'</span><span class=\"p\">},</span>\n                <span class=\"s1\">'username'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'username'</span><span class=\"p\">,</span> <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'string'</span><span class=\"p\">}},</span>\n <span class=\"s1\">'required'</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'object'</span><span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"nested-example\">\n<h2>Nested Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">marshmallow</span> <span class=\"kn\">import</span> <span class=\"n\">Schema</span><span class=\"p\">,</span> <span class=\"n\">fields</span>\n<span class=\"kn\">from</span> <span class=\"nn\">marshmallow_jsonschema</span> <span class=\"kn\">import</span> <span class=\"n\">JSONSchema</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tests</span> <span class=\"kn\">import</span> <span class=\"n\">UserSchema</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Athlete</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"n\">user_schema</span> <span class=\"o\">=</span> <span class=\"n\">UserSchema</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">'sam'</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">AthleteSchema</span><span class=\"p\">(</span><span class=\"n\">Schema</span><span class=\"p\">):</span>\n    <span class=\"n\">user_schema</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">Nested</span><span class=\"p\">(</span><span class=\"n\">JSONSchema</span><span class=\"p\">)</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">athlete</span> <span class=\"o\">=</span> <span class=\"n\">Athlete</span><span class=\"p\">()</span>\n<span class=\"n\">athlete_schema</span> <span class=\"o\">=</span> <span class=\"n\">AthleteSchema</span><span class=\"p\">()</span>\n\n<span class=\"n\">athlete_schema</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">athlete</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"complete-example-flask-application-using-brutisin-json-forms\">\n<h2>Complete example Flask application using brutisin/json-forms</h2>\n<div>\n<img alt=\"Screenshot\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c4879c4b11ab864b2ef46822d0cc2dfc9601a4c3/687474703a2f2f692e696d6775722e636f6d2f6a4a763177466b2e706e67\">\n<p>Screenshot</p>\n</div>\n<p>This example renders a form not dissimilar to how\n<a href=\"https://github.com/wtforms/wtforms\" rel=\"nofollow\">wtforms</a> might render a form.</p>\n<p>However rather than rendering the form in python, the JSON Schema is\nrendered using the javascript library\n<a href=\"https://github.com/brutusin/json-forms\" rel=\"nofollow\">brutusin/json-forms</a>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span><span class=\"p\">,</span> <span class=\"n\">jsonify</span>\n<span class=\"kn\">from</span> <span class=\"nn\">marshmallow</span> <span class=\"kn\">import</span> <span class=\"n\">Schema</span><span class=\"p\">,</span> <span class=\"n\">fields</span>\n<span class=\"kn\">from</span> <span class=\"nn\">marshmallow_jsonschema</span> <span class=\"kn\">import</span> <span class=\"n\">JSONSchema</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">UserSchema</span><span class=\"p\">(</span><span class=\"n\">Schema</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">()</span>\n    <span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">()</span>\n\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/schema'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">schema</span><span class=\"p\">():</span>\n    <span class=\"n\">schema</span> <span class=\"o\">=</span> <span class=\"n\">UserSchema</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">jsonify</span><span class=\"p\">(</span><span class=\"n\">JSONSchema</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">schema</span><span class=\"p\">))</span>\n\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">home</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'''&lt;!DOCTYPE html&gt;\n&lt;head&gt;\n&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/brutusin.json-forms/1.3.0/css/brutusin-json-forms.css\"&gt;&lt;Paste&gt;\n&lt;script src=\"https://code.jquery.com/jquery-1.12.1.min.js\" integrity=\"sha256-I1nTg78tSrZev3kjvfdM5A5Ak/blglGzlaZANLPDl3I=\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;\n&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/underscore.string/3.3.4/underscore.string.min.js\"&gt;&lt;/script&gt;\n&lt;script src=\"https://cdn.jsdelivr.net/brutusin.json-forms/1.3.0/js/brutusin-json-forms.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n$(document).ready(function() {\n    $.ajax({\n        url: '/schema'\n        , success: function(data) {\n            var container = document.getElementById('myform');\n            var BrutusinForms = brutusin[\"json-forms\"];\n            var bf = BrutusinForms.create(data);\n            bf.render(container);\n        }\n    });\n});\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id=\"myform\"&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n'''</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'0.0.0.0'</span><span class=\"p\">,</span> <span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<div id=\"advanced-usage\">\n<h3>Advanced usage</h3>\n</div>\n</div>\n<div id=\"custom-type-support\">\n<h2>Custom Type support</h2>\n<p>Simply add a <tt>_jsonschema_type_mapping</tt> method to your field so we\nknow how it ought to get serialized to JSON Schema.</p>\n<p>A common use case for this is creating a dropdown menu using enum (see\nGender below).</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Colour</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">Field</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_jsonschema_type_mapping</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'string'</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_serialize</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">attr</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n        <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"nb\">hex</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)[</span><span class=\"mi\">2</span><span class=\"p\">:]</span>\n        <span class=\"n\">g</span> <span class=\"o\">=</span> <span class=\"nb\">hex</span><span class=\"p\">(</span><span class=\"n\">g</span><span class=\"p\">)[</span><span class=\"mi\">2</span><span class=\"p\">:]</span>\n        <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"nb\">hex</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)[</span><span class=\"mi\">2</span><span class=\"p\">:]</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'#'</span> <span class=\"o\">+</span> <span class=\"n\">r</span> <span class=\"o\">+</span> <span class=\"n\">g</span> <span class=\"o\">+</span> <span class=\"n\">b</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Gender</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_jsonschema_type_mapping</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'string'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'enum'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'Male'</span><span class=\"p\">,</span> <span class=\"s1\">'Female'</span><span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">UserSchema</span><span class=\"p\">(</span><span class=\"n\">Schema</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">favourite_colour</span> <span class=\"o\">=</span> <span class=\"n\">Colour</span><span class=\"p\">()</span>\n    <span class=\"n\">gender</span> <span class=\"o\">=</span> <span class=\"n\">Gender</span><span class=\"p\">()</span>\n\n<span class=\"n\">schema</span> <span class=\"o\">=</span> <span class=\"n\">UserSchema</span><span class=\"p\">()</span>\n<span class=\"n\">json_schema</span> <span class=\"o\">=</span> <span class=\"n\">JSONSchema</span><span class=\"p\">()</span>\n<span class=\"n\">json_schema</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">schema</span><span class=\"p\">)</span>\n</pre>\n<div id=\"react-jsonschema-form-extension\">\n<h3>React-JSONSchema-Form Extension</h3>\n<p><a href=\"https://react-jsonschema-form.readthedocs.io/en/latest/\" rel=\"nofollow\">react-jsonschema-form</a>\nis a library for rendering jsonschemas as a form using React. It is very\npowerful and full featured.. the catch is that it requires a proprietary\n<tt>`uiSchema</tt> &lt;<a href=\"https://react-jsonschema-form.readthedocs.io/en/latest/form-customization/#the-uischema-object\" rel=\"nofollow\">https://react-jsonschema-form.readthedocs.io/en/latest/form-customization/#the-uischema-object</a>&gt;`__\nto provide advanced control how the form is rendered. <a href=\"https://rjsf-team.github.io/react-jsonschema-form/\" rel=\"nofollow\">Here\u2019s a live\nplayground</a></p>\n<p><em>(new in version 0.10.0)</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">marshmallow_jsonschema.extensions</span> <span class=\"kn\">import</span> <span class=\"n\">ReactJsonSchemaFormJSONSchema</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MySchema</span><span class=\"p\">(</span><span class=\"n\">Schema</span><span class=\"p\">):</span>\n    <span class=\"n\">first_name</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span>\n        <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s1\">'ui:autofocus'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">last_name</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">()</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">react_uischema_extra</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'ui:order'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"s1\">'first_name'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'last_name'</span><span class=\"p\">,</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n\n\n<span class=\"n\">json_schema_obj</span> <span class=\"o\">=</span> <span class=\"n\">ReactJsonSchemaFormJSONSchema</span><span class=\"p\">()</span>\n<span class=\"n\">schema</span> <span class=\"o\">=</span> <span class=\"n\">MySchema</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># here's your jsonschema</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">json_schema_obj</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">schema</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># ..and here's your uiSchema!</span>\n<span class=\"n\">ui_schema_json</span> <span class=\"o\">=</span> <span class=\"n\">json_schema_obj</span><span class=\"o\">.</span><span class=\"n\">dump_uischema</span><span class=\"p\">(</span><span class=\"n\">schema</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6742730, "releases": {"0.1.0": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "938cec38892129a07a9c0d1d8f528dd3", "sha256": "6f9b2d961a895b84d93e7675705a7a0bc6f14e0842770ab9c44a3d1c61f05c5f"}, "downloads": -1, "filename": "marshmallow-jsonschema-0.1.1.tar.gz", "has_sig": false, "md5_digest": "938cec38892129a07a9c0d1d8f528dd3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3988, "upload_time": "2016-03-16T00:05:11", "upload_time_iso_8601": "2016-03-16T00:05:11.622469Z", "url": "https://files.pythonhosted.org/packages/a6/53/1236a9a2fff48a5cb97fb6b6f42becfadead6f175d1ce31e7c0c1c214ed2/marshmallow-jsonschema-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "31a489a27a205e1024373a6cb1c29555", "sha256": "4a19531e5a7f71fda942707fa23d3fa4b87455f9b688aed9d9f2544020e7d213"}, "downloads": -1, "filename": "marshmallow-jsonschema-0.1.2.tar.gz", "has_sig": false, "md5_digest": "31a489a27a205e1024373a6cb1c29555", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4001, "upload_time": "2016-03-16T00:05:55", "upload_time_iso_8601": "2016-03-16T00:05:55.316006Z", "url": "https://files.pythonhosted.org/packages/55/82/7d669591d08eecb7ac98caf0070bb7e2d2032f9fc9066d372656c4c4ea00/marshmallow-jsonschema-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "aa66dd1a8b24ba5f0d890940cee329b3", "sha256": "d7e6f1f7e01e305e5e0ff94a2325cf8a6fa428b29e27b027312a2f23fb214f81"}, "downloads": -1, "filename": "marshmallow-jsonschema-0.1.3.tar.gz", "has_sig": false, "md5_digest": "aa66dd1a8b24ba5f0d890940cee329b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4013, "upload_time": "2016-03-16T00:08:30", "upload_time_iso_8601": "2016-03-16T00:08:30.093316Z", "url": "https://files.pythonhosted.org/packages/85/6b/c44b886af1e85dcd6db8a95700362c1f451500872c2a3f8310b23e4c969c/marshmallow-jsonschema-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "5a1e0642d55667d4bc5cb3eaa92a030e", "sha256": "27710e2e39ce2f243bf688e4dd12164b1e88694fbbcd1079322e0bd96fd937e1"}, "downloads": -1, "filename": "marshmallow-jsonschema-0.1.4.tar.gz", "has_sig": false, "md5_digest": "5a1e0642d55667d4bc5cb3eaa92a030e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4453, "upload_time": "2016-03-16T00:11:15", "upload_time_iso_8601": "2016-03-16T00:11:15.794010Z", "url": "https://files.pythonhosted.org/packages/41/8b/a04dd51432f7d26190f1272742aabd652165db3d0aa7cc8de8fda44c7f24/marshmallow-jsonschema-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "009f57b0b05a0a57746a96577b898289", "sha256": "167928c313fc77d28da04e7d1ca6fd78444016c00fe063f1ed318187614cf048"}, "downloads": -1, "filename": "marshmallow-jsonschema-0.1.5.tar.gz", "has_sig": false, "md5_digest": "009f57b0b05a0a57746a96577b898289", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4682, "upload_time": "2016-03-16T16:04:51", "upload_time_iso_8601": "2016-03-16T16:04:51.092743Z", "url": "https://files.pythonhosted.org/packages/bd/f3/4f78384b3cba91278aed5776ee056aee57b1603f2e1f386c45a7c9c203b7/marshmallow-jsonschema-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "7996286ffd29132b4be45d0762688002", "sha256": "b30bc8d7e826e20484d608e1afd2dccd58c21a64efa0c86afbd012e6b5d0d8f1"}, "downloads": -1, "filename": "marshmallow-jsonschema-0.1.6.tar.gz", "has_sig": false, "md5_digest": "7996286ffd29132b4be45d0762688002", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4691, "upload_time": "2016-03-16T16:13:41", "upload_time_iso_8601": "2016-03-16T16:13:41.318036Z", "url": "https://files.pythonhosted.org/packages/93/1e/55e4937bc5ef1029b982f823345a42936b208a310b2cef6851cea6d8ce1f/marshmallow-jsonschema-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "7fa971514592dfd7ce241e8a015ef1a0", "sha256": "c1945ef66153b63f431645801a643832d1f2d8e67a17039d9131f138376e54f0"}, "downloads": -1, "filename": "marshmallow-jsonschema-0.1.7.tar.gz", "has_sig": false, "md5_digest": "7fa971514592dfd7ce241e8a015ef1a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5476, "upload_time": "2016-03-16T20:01:31", "upload_time_iso_8601": "2016-03-16T20:01:31.102216Z", "url": "https://files.pythonhosted.org/packages/e0/c6/30be53866793aafec95108f6f3ad083f412e15cdf70df1984f4c2c01afc9/marshmallow-jsonschema-0.1.7.tar.gz", "yanked": false}], "0.10.0": [{"comment_text": "", "digests": {"md5": "3c966a04009165907febf3d7f0d6839e", "sha256": "97b4720b719195007bb73550f4a68a6a4fa30ff160057b33997b8c76996259f0"}, "downloads": -1, "filename": "marshmallow-jsonschema-0.10.0.tar.gz", "has_sig": false, "md5_digest": "3c966a04009165907febf3d7f0d6839e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13679, "upload_time": "2020-03-03T18:50:26", "upload_time_iso_8601": "2020-03-03T18:50:26.286515Z", "url": "https://files.pythonhosted.org/packages/4f/ac/6f566459ab5e2e574c5670f4ab1d0e4aea265cf11f9539369dd0bb7063ef/marshmallow-jsonschema-0.10.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "766a407ee2c0172c91a6c0b9788de089", "sha256": "7055ef9d27afad09e499a15ce63f8e766bfabc3ea763e0e6afa33162b40b34ff"}, "downloads": -1, "filename": "marshmallow-jsonschema-0.2.0.tar.gz", "has_sig": false, "md5_digest": "766a407ee2c0172c91a6c0b9788de089", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5563, "upload_time": "2016-05-25T11:52:32", "upload_time_iso_8601": "2016-05-25T11:52:32.592061Z", "url": "https://files.pythonhosted.org/packages/93/db/2ead5c1a4e11ec037f934afcd15744b493ef548e2accaee3d61b604a4c58/marshmallow-jsonschema-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "b9a226edb165c242a0148b9e89152d94", "sha256": "18124d438379262915ad56040b182fcbbdaf0fa13d26cc3f60d4befe0fc5bfed"}, "downloads": -1, "filename": "marshmallow-jsonschema-0.2.1.tar.gz", "has_sig": false, "md5_digest": "b9a226edb165c242a0148b9e89152d94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5716, "upload_time": "2016-05-25T11:58:42", "upload_time_iso_8601": "2016-05-25T11:58:42.234161Z", "url": "https://files.pythonhosted.org/packages/dd/17/9598a788ca919aa79ae8f24aa184fb458bc1f98669db4b1ebd56ff32bfe8/marshmallow-jsonschema-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "aac2eefdff2d7b7c2ab97145b3a573cf", "sha256": "5d33f961b8e682730ec6e12edb4fe19dddd9655051ad01eb5912e232f0635ef3"}, "downloads": -1, "filename": "marshmallow-jsonschema-0.3.0.tar.gz", "has_sig": false, "md5_digest": "aac2eefdff2d7b7c2ab97145b3a573cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6632, "upload_time": "2016-07-12T18:32:50", "upload_time_iso_8601": "2016-07-12T18:32:50.507422Z", "url": "https://files.pythonhosted.org/packages/e3/67/1e8fb6a1f2a49d09817a3487c832a31e25628ddf70fe0a5fb945b36e83b2/marshmallow-jsonschema-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "59f305de7bc4601ccfe4c668a1ba4688", "sha256": "43b5881671b60bcff7d3bd64cc864d17b3cc69c8f193ac0a6d2f4e21737ad295"}, "downloads": -1, "filename": "marshmallow-jsonschema-0.4.0.tar.gz", "has_sig": false, "md5_digest": "59f305de7bc4601ccfe4c668a1ba4688", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6615, "upload_time": "2017-07-13T19:23:28", "upload_time_iso_8601": "2017-07-13T19:23:28.947048Z", "url": "https://files.pythonhosted.org/packages/4e/07/148e94b8d68c5822b02735bb9e302051c72f8cb21edbd0534b11326a8e90/marshmallow-jsonschema-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "ed89dd25b7fd5da99fbc55efa09306ce", "sha256": "dfe081f1a43c2bbd2a0a999f98c79f98f465fb8c896ab3f44717cda829b71ead"}, "downloads": -1, "filename": "marshmallow-jsonschema-0.5.0.tar.gz", "has_sig": false, "md5_digest": "ed89dd25b7fd5da99fbc55efa09306ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7380, "upload_time": "2017-12-13T16:27:27", "upload_time_iso_8601": "2017-12-13T16:27:27.718351Z", "url": "https://files.pythonhosted.org/packages/0f/f5/f72f87b4ec56fef840b7cd14527f6c659cd9e9e35148ffc9f5da3f3f3e14/marshmallow-jsonschema-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "3878471004729d1d598788408477a831", "sha256": "9b49820535e9c50877053793bc18ed16a7d75b00edacc62f5075e30e9e111788"}, "downloads": -1, "filename": "marshmallow-jsonschema-0.6.0.tar.gz", "has_sig": false, "md5_digest": "3878471004729d1d598788408477a831", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8050, "upload_time": "2019-06-16T16:51:33", "upload_time_iso_8601": "2019-06-16T16:51:33.073644Z", "url": "https://files.pythonhosted.org/packages/91/91/99efb319fb70f9037108fbe98c3d433c30a7da4f882822ca0657fef104ae/marshmallow-jsonschema-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "726cf6e0687ab3aecfd9102db267bb3e", "sha256": "24ffa544af45f4c116fc1e61a29fc1f70ae8ed480c19c7bef35070bbb89135a1"}, "downloads": -1, "filename": "marshmallow-jsonschema-0.7.0.tar.gz", "has_sig": false, "md5_digest": "726cf6e0687ab3aecfd9102db267bb3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9900, "upload_time": "2019-08-11T14:59:15", "upload_time_iso_8601": "2019-08-11T14:59:15.865305Z", "url": "https://files.pythonhosted.org/packages/72/74/9e9676159e1b2e71498639500db58db924b537694ee38b2dbba30079e45b/marshmallow-jsonschema-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "0fb1fcebea16aa30772b0ef3a491e77e", "sha256": "c8fb576a8262f771322d412e39fc59ada10b62f158590127a7ddd82644e4862b"}, "downloads": -1, "filename": "marshmallow-jsonschema-0.8.0.tar.gz", "has_sig": false, "md5_digest": "0fb1fcebea16aa30772b0ef3a491e77e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9908, "upload_time": "2019-10-08T13:59:37", "upload_time_iso_8601": "2019-10-08T13:59:37.986784Z", "url": "https://files.pythonhosted.org/packages/b6/a3/5ddcbd3b1dc24f5d08b119678d02483dd52770161fc825a8d17ceb3f08d4/marshmallow-jsonschema-0.8.0.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "81c39cd984540f2a653bf2cc3664ad5a", "sha256": "f3265e0b36b51934cbed67363c079caaf3f9bd43eccecdf8ce3cd8025d10c133"}, "downloads": -1, "filename": "marshmallow-jsonschema-0.9.0.tar.gz", "has_sig": false, "md5_digest": "81c39cd984540f2a653bf2cc3664ad5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11195, "upload_time": "2020-01-18T17:44:44", "upload_time_iso_8601": "2020-01-18T17:44:44.158694Z", "url": "https://files.pythonhosted.org/packages/7c/aa/71032cebd10a22951b46f05b69ca19f461d620e685b11c4673b8dbf89018/marshmallow-jsonschema-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3c966a04009165907febf3d7f0d6839e", "sha256": "97b4720b719195007bb73550f4a68a6a4fa30ff160057b33997b8c76996259f0"}, "downloads": -1, "filename": "marshmallow-jsonschema-0.10.0.tar.gz", "has_sig": false, "md5_digest": "3c966a04009165907febf3d7f0d6839e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13679, "upload_time": "2020-03-03T18:50:26", "upload_time_iso_8601": "2020-03-03T18:50:26.286515Z", "url": "https://files.pythonhosted.org/packages/4f/ac/6f566459ab5e2e574c5670f4ab1d0e4aea265cf11f9539369dd0bb7063ef/marshmallow-jsonschema-0.10.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:35 2020"}