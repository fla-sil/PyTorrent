{"info": {"author": "Josh VanderLinden", "author_email": "codekoala at gmail dot com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: Log Analysis", "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: Page Counters", "Topic :: Internet :: WWW/HTTP :: WSGI :: Middleware", "Topic :: Security", "Topic :: System :: Monitoring", "Topic :: Utilities"], "description": "``django-tracking`` is a simple attempt at keeping track of visitors to\nDjango-powered Web sites.  It also offers basic blacklisting capabilities.\n\nThe offial repository for ``django-tracking`` is at\nhttp://bitbucket.org/codekoala/django-tracking.  Please file any tickets there.\n\nFeatures\n========\n\n* Tracks the following information about your visitors:\n\n    * Session key\n    * IP address\n    * User agent\n    * Whether or not they are a registered user and logged in\n    * Where they came from (http-referer)\n    * What page on your site they last visited\n    * How many pages on your site they have visited\n\n* Allows user-agent filtering for visitor tracking\n* Automatic clean-up of old visitor records\n* Can ban certain IP addresses, rendering the site useless to visitors from\n  those IP's (great for stopping spam)\n* The ability to have a live feed of active users on your website\n* Template tags to:\n\n    * display how many active users there are on your site\n    * determine how many active users are on the same page within your site\n\n* Optional \"Active Visitors Map\" to see where visitors are in the world\n\nRequirements\n============\n\nAs far as I am aware, the only requirement for django-tracking to work is a\nmodern version of Django.  I developed the project on Django 1.0 alpha 2 and\nbeta 1.  It is designed to work with the newforms-admin functionality.\n\nIf you wish to use a Google Map to display where your visitors are probably at,\nyou must have a `Google Maps API key\n<http://code.google.com/intl/ro/apis/maps/signup.html>`_, which is free.  You\nare required to have the `GeoIP C API library\n<http://geolite.maxmind.com/download/geoip/api/c/GeoIP.tar.gz>`_ installed.\nYou might want to grab the `GeoLite City binary\n<http://www.maxmind.com/app/geolitecity>`_ unless you are a paying MaxMind\ncustomer.  This is the data file that ``django-tracking`` uses to translate an\nIP into a location on the planet.  Configuring this feature is discussed later.\n\nInstallation\n============\n\nDownload ``django-tracking`` using *one* of the following methods:\n\npip\n---\n\nYou can download the package from the `CheeseShop\n<http://pypi.python.org/pypi/django-tracking/>`_ or use::\n\n    pip install django-tracking\n\nto download and install ``django-tracking``.\n\neasy_install\n------------\n\nYou can download the package from the `CheeseShop <http://pypi.python.org/pypi/django-tracking/>`_ or use::\n\n    easy_install django-tracking\n\nto download and install ``django-tracking``.\n\nCheckout from BitBucket/GitHub/Google Code\n------------------------------------------\n\nUse one of the following commands::\n\n    hg clone http://bitbucket.org/codekoala/django-tracking\n    git clone http://github.com/codekoala/django-tracking.git\n    hg clone http://django-tracking.googlecode.com/hg/ django-tracking\n\nPackage Download\n================\n\nDownload the latest ``.tar.gz`` file from the downloads section and extract it\nsomewhere you'll remember.\n\nConfiguration\n=============\n\nFirst of all, you must add this project to your list of ``INSTALLED_APPS`` in\n``settings.py``::\n\n    INSTALLED_APPS = (\n        'django.contrib.admin',\n        'django.contrib.auth',\n        'django.contrib.contenttypes',\n        'django.contrib.sessions',\n        'django.contrib.sites',\n        ...\n        'tracking',\n        ...\n    )\n\nRun ``manage.py syncdb``.  This creates a few tables in your database that are\nnecessary for operation.\n\nDepending on how you wish to use this application, you have a few options:\n\nVisitor Tracking\n----------------\n\nAdd ``tracking.middleware.VisitorTrackingMiddleware`` to your\n``MIDDLEWARE_CLASSES`` in ``settings.py``.  It must be underneath the\n``AuthenticationMiddleware``, so that ``request.user`` exists.\n\nAutomatic Visitor Clean-Up\n++++++++++++++++++++++++++\n\nIf you want to have Django automatically clean past visitor information out\nyour database, put ``tracking.middleware.VisitorCleanUpMiddleware`` in your\n``MIDDLEWARE_CLASSES``.\n\nIP Banning\n----------\n\nAdd ``tracking.middleware.BannedIPMiddleware`` to your ``MIDDLEWARE_CLASSES``\nin ``settings.py``.  I would recommend making this the very first item in\n``MIDDLEWARE_CLASSES`` so your banned users do not have to drill through any\nother middleware before Django realizes they don't belong on your site.\n\nVisitors on Page (template tag)\n-------------------------------\n\nMake sure that ``django.core.context_processors.request`` is somewhere in your\n``TEMPLATE_CONTEXT_PROCESSORS`` tuple.  This context processor makes the\n``request`` object accessible to your templates.  This application uses the\n``request`` object to determine what page the user is looking at in a template\ntag.\n\nActive Visitors Map\n===================\n\nIf you're interested in seeing where your visitors are at a given point in\ntime, you might enjoy the active visitor map feature.  Be sure you have added a\nline to your main URLconf, as follows::\n\n    from django.conf.urls.defaults import *\n\n    urlpatterns = patterns('',\n        ....\n        (r'^tracking/', include('tracking.urls')),\n        ....\n    )\n\nNext, set a couple of settings in your ``settings.py``:\n\n* ``GOOGLE_MAPS_KEY``: Your very own Google Maps API key\n* ``TRACKING_USE_GEOIP``: set this to ``True`` if you want to see markers on\n  the map\n* ``GEOIP_PATH``: set this to the absolute path on the filesystem of your\n  ``GeoIP.dat`` or ``GeoIPCity.dat`` or whatever file.  It's usually something\n  like ``/usr/local/share/GeoIP.dat`` or ``/usr/share/GeoIP/GeoIP.dat``.\n* ``GEOIP_CACHE_TYPE``: The type of caching to use when dealing with GeoIP data:\n\n    * ``0``: read database from filesystem, uses least memory.\n    * ``1``: load database into memory, faster performance but uses more\n      memory.\n    * ``2``: check for updated database.  If database has been updated, reload\n      filehandle and/or memory cache.\n    * ``4``: just cache the most frequently accessed index portion of the\n      database, resulting in faster lookups than ``GEOIP_STANDARD``, but less\n      memory usage than ``GEOIP_MEMORY_CACHE`` - useful for larger databases\n      such as GeoIP Organization and GeoIP City.  Note, for GeoIP Country,\n      Region and Netspeed databases, ``GEOIP_INDEX_CACHE`` is equivalent to\n      ``GEOIP_MEMORY_CACHE``. *default*\n\n* ``DEFAULT_TRACKING_TEMPLATE``: The template to use when generating the\n  visitor map.  Defaults to ``tracking/visitor_map.html``.\n\nWhen that's done, you should be able to go to ``/tracking/map/`` on your site\n(replacing ``tracking`` with whatever prefix you chose to use in your URLconf,\nobviously).  The default template relies upon jQuery for its awesomeness, but\nyou're free to use whatever you would like.\n\nUsage\n=====\n\nTo display the number of active users there are in one of your templates, make\nsure you have ``{% load tracking_tags %}`` somewhere in your template and do\nsomething like this::\n\n    {% visitors_on_site as visitors %}\n    <p>\n        {{ visitors }} active user{{ visitors|pluralize }}\n    </p>\n\nIf you also want to show how many people are looking at the same page::\n\n    {% visitors_on_page as same_page %}\n    <p>\n        {{ same_page }} of {{ visitors }} active user{{ visitors|pluralize }}\n        {% ifequal same_page 1 %}is{% else %}are{% endifequal %} reading this page\n    </p>\n\nIf you don't want particular areas of your site to be tracked, you may define a\nlist of prefixes in your ``settings.py`` using the ``NO_TRACKING_PREFIXES``.  For\nexample, if you didn't want visits to the ``/family/`` section of your website,\nset ``NO_TRACKING_PREFIXES`` to ``['/family/']``.\n\nIf you don't want to count certain user-agents, such as Yahoo!'s Slurp and\nGoogle's Googlebot, you may add keywords to your visitor tracking in your\nDjango administration interface.  Look for \"Untracked User-Agents\" and add a\nkeyword that distinguishes a particular user-agent.  Any visitors with the\nkeyword in their user-agent string will not be tracked.\n\nBy default, active users include any visitors within the last 10 minutes.  If\nyou would like to override that setting, just set ``TRACKING_TIMEOUT`` to however\nmany minutes you want in your ``settings.py``.\n\nFor automatic visitor clean-up, any records older than 24 hours are removed by\ndefault.  If you would like to override that setting, set\n``TRACKING_CLEANUP_TIMEOUT`` to however many hours you want in your\n``settings.py``.\n\nGood luck!  Please contact me with any questions or concerns you have with the\nproject!", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://bitbucket.org/codekoala/django-tracking", "keywords": "django,tracking,visitors", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-tracking", "package_url": "https://pypi.org/project/django-tracking/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-tracking/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://bitbucket.org/codekoala/django-tracking"}, "release_url": "https://pypi.org/project/django-tracking/0.4.1/", "requires_dist": null, "requires_python": null, "summary": "Basic visitor tracking and blacklisting for Django", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt><span class=\"pre\">django-tracking</span></tt> is a simple attempt at keeping track of visitors to\nDjango-powered Web sites.  It also offers basic blacklisting capabilities.</p>\n<p>The offial repository for <tt><span class=\"pre\">django-tracking</span></tt> is at\n<a href=\"http://bitbucket.org/codekoala/django-tracking\" rel=\"nofollow\">http://bitbucket.org/codekoala/django-tracking</a>.  Please file any tickets there.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li><p>Tracks the following information about your visitors:</p>\n<blockquote>\n<ul>\n<li>Session key</li>\n<li>IP address</li>\n<li>User agent</li>\n<li>Whether or not they are a registered user and logged in</li>\n<li>Where they came from (http-referer)</li>\n<li>What page on your site they last visited</li>\n<li>How many pages on your site they have visited</li>\n</ul>\n</blockquote>\n</li>\n<li><p>Allows user-agent filtering for visitor tracking</p>\n</li>\n<li><p>Automatic clean-up of old visitor records</p>\n</li>\n<li><p>Can ban certain IP addresses, rendering the site useless to visitors from\nthose IP\u2019s (great for stopping spam)</p>\n</li>\n<li><p>The ability to have a live feed of active users on your website</p>\n</li>\n<li><p>Template tags to:</p>\n<blockquote>\n<ul>\n<li>display how many active users there are on your site</li>\n<li>determine how many active users are on the same page within your site</li>\n</ul>\n</blockquote>\n</li>\n<li><p>Optional \u201cActive Visitors Map\u201d to see where visitors are in the world</p>\n</li>\n</ul>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>As far as I am aware, the only requirement for django-tracking to work is a\nmodern version of Django.  I developed the project on Django 1.0 alpha 2 and\nbeta 1.  It is designed to work with the newforms-admin functionality.</p>\n<p>If you wish to use a Google Map to display where your visitors are probably at,\nyou must have a <a href=\"http://code.google.com/intl/ro/apis/maps/signup.html\" rel=\"nofollow\">Google Maps API key</a>, which is free.  You\nare required to have the <a href=\"http://geolite.maxmind.com/download/geoip/api/c/GeoIP.tar.gz\" rel=\"nofollow\">GeoIP C API library</a> installed.\nYou might want to grab the <a href=\"http://www.maxmind.com/app/geolitecity\" rel=\"nofollow\">GeoLite City binary</a> unless you are a paying MaxMind\ncustomer.  This is the data file that <tt><span class=\"pre\">django-tracking</span></tt> uses to translate an\nIP into a location on the planet.  Configuring this feature is discussed later.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Download <tt><span class=\"pre\">django-tracking</span></tt> using <em>one</em> of the following methods:</p>\n<div id=\"pip\">\n<h3>pip</h3>\n<p>You can download the package from the <a href=\"http://pypi.python.org/pypi/django-tracking/\" rel=\"nofollow\">CheeseShop</a> or use:</p>\n<pre>pip install django-tracking\n</pre>\n<p>to download and install <tt><span class=\"pre\">django-tracking</span></tt>.</p>\n</div>\n<div id=\"easy-install\">\n<h3>easy_install</h3>\n<p>You can download the package from the <a href=\"http://pypi.python.org/pypi/django-tracking/\" rel=\"nofollow\">CheeseShop</a> or use:</p>\n<pre>easy_install django-tracking\n</pre>\n<p>to download and install <tt><span class=\"pre\">django-tracking</span></tt>.</p>\n</div>\n<div id=\"checkout-from-bitbucket-github-google-code\">\n<h3>Checkout from BitBucket/GitHub/Google Code</h3>\n<p>Use one of the following commands:</p>\n<pre>hg clone http://bitbucket.org/codekoala/django-tracking\ngit clone http://github.com/codekoala/django-tracking.git\nhg clone http://django-tracking.googlecode.com/hg/ django-tracking\n</pre>\n</div>\n</div>\n<div id=\"package-download\">\n<h2>Package Download</h2>\n<p>Download the latest <tt>.tar.gz</tt> file from the downloads section and extract it\nsomewhere you\u2019ll remember.</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>First of all, you must add this project to your list of <tt>INSTALLED_APPS</tt> in\n<tt>settings.py</tt>:</p>\n<pre>INSTALLED_APPS = (\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.sites',\n    ...\n    'tracking',\n    ...\n)\n</pre>\n<p>Run <tt>manage.py syncdb</tt>.  This creates a few tables in your database that are\nnecessary for operation.</p>\n<p>Depending on how you wish to use this application, you have a few options:</p>\n<div id=\"visitor-tracking\">\n<h3>Visitor Tracking</h3>\n<p>Add <tt>tracking.middleware.VisitorTrackingMiddleware</tt> to your\n<tt>MIDDLEWARE_CLASSES</tt> in <tt>settings.py</tt>.  It must be underneath the\n<tt>AuthenticationMiddleware</tt>, so that <tt>request.user</tt> exists.</p>\n<div id=\"automatic-visitor-clean-up\">\n<h4>Automatic Visitor Clean-Up</h4>\n<p>If you want to have Django automatically clean past visitor information out\nyour database, put <tt>tracking.middleware.VisitorCleanUpMiddleware</tt> in your\n<tt>MIDDLEWARE_CLASSES</tt>.</p>\n</div>\n</div>\n<div id=\"ip-banning\">\n<h3>IP Banning</h3>\n<p>Add <tt>tracking.middleware.BannedIPMiddleware</tt> to your <tt>MIDDLEWARE_CLASSES</tt>\nin <tt>settings.py</tt>.  I would recommend making this the very first item in\n<tt>MIDDLEWARE_CLASSES</tt> so your banned users do not have to drill through any\nother middleware before Django realizes they don\u2019t belong on your site.</p>\n</div>\n<div id=\"visitors-on-page-template-tag\">\n<h3>Visitors on Page (template tag)</h3>\n<p>Make sure that <tt>django.core.context_processors.request</tt> is somewhere in your\n<tt>TEMPLATE_CONTEXT_PROCESSORS</tt> tuple.  This context processor makes the\n<tt>request</tt> object accessible to your templates.  This application uses the\n<tt>request</tt> object to determine what page the user is looking at in a template\ntag.</p>\n</div>\n</div>\n<div id=\"active-visitors-map\">\n<h2>Active Visitors Map</h2>\n<p>If you\u2019re interested in seeing where your visitors are at a given point in\ntime, you might enjoy the active visitor map feature.  Be sure you have added a\nline to your main URLconf, as follows:</p>\n<pre>from django.conf.urls.defaults import *\n\nurlpatterns = patterns('',\n    ....\n    (r'^tracking/', include('tracking.urls')),\n    ....\n)\n</pre>\n<p>Next, set a couple of settings in your <tt>settings.py</tt>:</p>\n<ul>\n<li><p><tt>GOOGLE_MAPS_KEY</tt>: Your very own Google Maps API key</p>\n</li>\n<li><p><tt>TRACKING_USE_GEOIP</tt>: set this to <tt>True</tt> if you want to see markers on\nthe map</p>\n</li>\n<li><p><tt>GEOIP_PATH</tt>: set this to the absolute path on the filesystem of your\n<tt>GeoIP.dat</tt> or <tt>GeoIPCity.dat</tt> or whatever file.  It\u2019s usually something\nlike <tt>/usr/local/share/GeoIP.dat</tt> or <tt>/usr/share/GeoIP/GeoIP.dat</tt>.</p>\n</li>\n<li><p><tt>GEOIP_CACHE_TYPE</tt>: The type of caching to use when dealing with GeoIP data:</p>\n<blockquote>\n<ul>\n<li><tt>0</tt>: read database from filesystem, uses least memory.</li>\n<li><tt>1</tt>: load database into memory, faster performance but uses more\nmemory.</li>\n<li><tt>2</tt>: check for updated database.  If database has been updated, reload\nfilehandle and/or memory cache.</li>\n<li><tt>4</tt>: just cache the most frequently accessed index portion of the\ndatabase, resulting in faster lookups than <tt>GEOIP_STANDARD</tt>, but less\nmemory usage than <tt>GEOIP_MEMORY_CACHE</tt> - useful for larger databases\nsuch as GeoIP Organization and GeoIP City.  Note, for GeoIP Country,\nRegion and Netspeed databases, <tt>GEOIP_INDEX_CACHE</tt> is equivalent to\n<tt>GEOIP_MEMORY_CACHE</tt>. <em>default</em></li>\n</ul>\n</blockquote>\n</li>\n<li><p><tt>DEFAULT_TRACKING_TEMPLATE</tt>: The template to use when generating the\nvisitor map.  Defaults to <tt>tracking/visitor_map.html</tt>.</p>\n</li>\n</ul>\n<p>When that\u2019s done, you should be able to go to <tt>/tracking/map/</tt> on your site\n(replacing <tt>tracking</tt> with whatever prefix you chose to use in your URLconf,\nobviously).  The default template relies upon jQuery for its awesomeness, but\nyou\u2019re free to use whatever you would like.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To display the number of active users there are in one of your templates, make\nsure you have <tt>{% load tracking_tags %}</tt> somewhere in your template and do\nsomething like this:</p>\n<pre>{% visitors_on_site as visitors %}\n&lt;p&gt;\n    {{ visitors }} active user{{ visitors|pluralize }}\n&lt;/p&gt;\n</pre>\n<p>If you also want to show how many people are looking at the same page:</p>\n<pre>{% visitors_on_page as same_page %}\n&lt;p&gt;\n    {{ same_page }} of {{ visitors }} active user{{ visitors|pluralize }}\n    {% ifequal same_page 1 %}is{% else %}are{% endifequal %} reading this page\n&lt;/p&gt;\n</pre>\n<p>If you don\u2019t want particular areas of your site to be tracked, you may define a\nlist of prefixes in your <tt>settings.py</tt> using the <tt>NO_TRACKING_PREFIXES</tt>.  For\nexample, if you didn\u2019t want visits to the <tt>/family/</tt> section of your website,\nset <tt>NO_TRACKING_PREFIXES</tt> to <tt><span class=\"pre\">['/family/']</span></tt>.</p>\n<p>If you don\u2019t want to count certain user-agents, such as Yahoo!\u2019s Slurp and\nGoogle\u2019s Googlebot, you may add keywords to your visitor tracking in your\nDjango administration interface.  Look for \u201cUntracked User-Agents\u201d and add a\nkeyword that distinguishes a particular user-agent.  Any visitors with the\nkeyword in their user-agent string will not be tracked.</p>\n<p>By default, active users include any visitors within the last 10 minutes.  If\nyou would like to override that setting, just set <tt>TRACKING_TIMEOUT</tt> to however\nmany minutes you want in your <tt>settings.py</tt>.</p>\n<p>For automatic visitor clean-up, any records older than 24 hours are removed by\ndefault.  If you would like to override that setting, set\n<tt>TRACKING_CLEANUP_TIMEOUT</tt> to however many hours you want in your\n<tt>settings.py</tt>.</p>\n<p>Good luck!  Please contact me with any questions or concerns you have with the\nproject!</p>\n</div>\n\n          </div>"}, "last_serial": 512219, "releases": {"0.2.5": [{"comment_text": "", "digests": {"md5": "e1dacf3850a556436bb46e351c49ab12", "sha256": "2350b79c5285b0050c2fa55cd7a28f65b6787f0ca2022f73bb650ca598ea9b73"}, "downloads": -1, "filename": "django-tracking-0.2.5.tar.bz2", "has_sig": true, "md5_digest": "e1dacf3850a556436bb46e351c49ab12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29367, "upload_time": "2009-01-24T10:19:44", "upload_time_iso_8601": "2009-01-24T10:19:44Z", "url": "https://files.pythonhosted.org/packages/63/4c/8127dd439bcab748e3bb346961e93dc9c2c5e1734f4411952303848fe0e9/django-tracking-0.2.5.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5ae7b4a56fa12d29b947e806542ccb0", "sha256": "b9dff3b0b2f84985c4f551e228aadf075b1137420f13ae999b820e1d6dfe3b7b"}, "downloads": -1, "filename": "django-tracking-0.2.5.tar.gz", "has_sig": true, "md5_digest": "a5ae7b4a56fa12d29b947e806542ccb0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31766, "upload_time": "2009-01-24T10:19:38", "upload_time_iso_8601": "2009-01-24T10:19:38Z", "url": "https://files.pythonhosted.org/packages/b7/dd/3db459a40108d1eec82e977c6253daf448a4eee28c855093b9f402d4e7bd/django-tracking-0.2.5.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "448d728c01eb88548ad807c857cf324b", "sha256": "5918d095d85d9764559be1baac5c27aedf1cb3503ef791cc08c4b70446c75ebe"}, "downloads": -1, "filename": "django-tracking-0.2.5.zip", "has_sig": true, "md5_digest": "448d728c01eb88548ad807c857cf324b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36632, "upload_time": "2009-01-24T10:19:50", "upload_time_iso_8601": "2009-01-24T10:19:50Z", "url": "https://files.pythonhosted.org/packages/b3/d1/702d148df5a8cc2f5a9fa30b1b8dc3c6b95ab6bb623e9cf0da8fb6e8f3d2/django-tracking-0.2.5.zip", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "5dea056da3d41ed93a4061b2b1148dea", "sha256": "6c84610222a4321d50780b62136569355ae914bc3bf09d5fb2e58446a6778b41"}, "downloads": -1, "filename": "django-tracking-0.2.6.tar.bz2", "has_sig": true, "md5_digest": "5dea056da3d41ed93a4061b2b1148dea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29416, "upload_time": "2009-01-24T10:36:52", "upload_time_iso_8601": "2009-01-24T10:36:52Z", "url": "https://files.pythonhosted.org/packages/f5/a3/8866ebab39954a5e63e3e0072d6a6e20524866f56e7cd4c5efa4e9f69e3c/django-tracking-0.2.6.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8d7b7ed5944662897f946576d7121f9", "sha256": "e13b3ce2e4147bf4bee759eedac654349cf0286545a07ae414e4135e2a79aee6"}, "downloads": -1, "filename": "django-tracking-0.2.6.tar.gz", "has_sig": true, "md5_digest": "c8d7b7ed5944662897f946576d7121f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31806, "upload_time": "2009-01-24T10:36:40", "upload_time_iso_8601": "2009-01-24T10:36:40Z", "url": "https://files.pythonhosted.org/packages/ae/0c/2158194fc217838c10cbbc0bfdafa99dce3ad1b8bca24b62eb46d38947d5/django-tracking-0.2.6.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd64beb0a74d3ff1f2ce3690df8f904f", "sha256": "26571c13f29a42e2fb71353eac34dc0e22ee91f549c99d4d9d6361afda803234"}, "downloads": -1, "filename": "django-tracking-0.2.6.zip", "has_sig": true, "md5_digest": "fd64beb0a74d3ff1f2ce3690df8f904f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36670, "upload_time": "2009-01-24T10:37:01", "upload_time_iso_8601": "2009-01-24T10:37:01Z", "url": "https://files.pythonhosted.org/packages/aa/72/0b654ad4b1232f63f99fb7c1f445dfc7bff310bbd44d9f45dba958ff3d70/django-tracking-0.2.6.zip", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "77f2df970ca34a8ebf3801ab7924d83e", "sha256": "f1c45cb860ba70626a79e42d0c787ab86850f65221aed9627c8806e8c9accc25"}, "downloads": -1, "filename": "django-tracking-0.2.7.tar.bz2", "has_sig": true, "md5_digest": "77f2df970ca34a8ebf3801ab7924d83e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29807, "upload_time": "2009-01-24T22:28:34", "upload_time_iso_8601": "2009-01-24T22:28:34Z", "url": "https://files.pythonhosted.org/packages/01/75/804a77aa3945d78f771c5ac7dc025451c4983f3cc272484bac868cd23e9c/django-tracking-0.2.7.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd76e8a67c5fd8550736650e5af1dac6", "sha256": "49ec524ebdb97e6a097a3a647d331ec763e202e25d77a148868deaf751cca39e"}, "downloads": -1, "filename": "django-tracking-0.2.7.tar.gz", "has_sig": true, "md5_digest": "fd76e8a67c5fd8550736650e5af1dac6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32255, "upload_time": "2009-01-24T22:28:29", "upload_time_iso_8601": "2009-01-24T22:28:29Z", "url": "https://files.pythonhosted.org/packages/96/57/94603f002ec58d117e4dc4313941481089900ec29e5e77a44b36c607c37c/django-tracking-0.2.7.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "255409fa0063631c1b5c944ef3417156", "sha256": "61a5e778820f3792356c3c8a4df976dca08df4c152481b023c28d605979a5f5d"}, "downloads": -1, "filename": "django-tracking-0.2.7.zip", "has_sig": true, "md5_digest": "255409fa0063631c1b5c944ef3417156", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37213, "upload_time": "2009-01-24T22:28:38", "upload_time_iso_8601": "2009-01-24T22:28:38Z", "url": "https://files.pythonhosted.org/packages/d6/31/b2a69e7d5d815448eadf9bcd034ee81597a3dd7b6a254c12e127e725c079/django-tracking-0.2.7.zip", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "816d604c21338eab12fb0741baed96f1", "sha256": "f6d08434932eee8522f92de820659fe49eb28c55492585a325903ea16060778c"}, "downloads": -1, "filename": "django-tracking-0.3.5.tar.gz", "has_sig": false, "md5_digest": "816d604c21338eab12fb0741baed96f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1908729, "upload_time": "2010-12-27T10:00:41", "upload_time_iso_8601": "2010-12-27T10:00:41.734912Z", "url": "https://files.pythonhosted.org/packages/57/e8/04c22219c2f8019e9e229dc4ace960b4af63267a5e8f23f0302a495283c0/django-tracking-0.3.5.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "acbc9c6918b434a9212a4c98417d8db7", "sha256": "0193e4fe3b20c9816da2600c97879591a69dfb30010a684e6722dc0d072d4bfe"}, "downloads": -1, "filename": "django-tracking-0.4.1.tar.gz", "has_sig": false, "md5_digest": "acbc9c6918b434a9212a4c98417d8db7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1916841, "upload_time": "2012-11-19T16:14:54", "upload_time_iso_8601": "2012-11-19T16:14:54.704184Z", "url": "https://files.pythonhosted.org/packages/70/ad/eddc3d307f82b874c0c8215200cfdd2ce60c6ee2e26dd0e9cedf5c761f7c/django-tracking-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "acbc9c6918b434a9212a4c98417d8db7", "sha256": "0193e4fe3b20c9816da2600c97879591a69dfb30010a684e6722dc0d072d4bfe"}, "downloads": -1, "filename": "django-tracking-0.4.1.tar.gz", "has_sig": false, "md5_digest": "acbc9c6918b434a9212a4c98417d8db7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1916841, "upload_time": "2012-11-19T16:14:54", "upload_time_iso_8601": "2012-11-19T16:14:54.704184Z", "url": "https://files.pythonhosted.org/packages/70/ad/eddc3d307f82b874c0c8215200cfdd2ce60c6ee2e26dd0e9cedf5c761f7c/django-tracking-0.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:22 2020"}