{"info": {"author": "Kyubyong Park", "author_email": "kbpark.linguist@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# KoParadigm: Korean Inflectional Paradigm Generator\n\n(Inflectional) paradigm means the set of all the inflected forms of a word. For example, English verb \"look\" has inflected forms like \"look\", \"look-s\", \"look-ed\", and \"look-ing\", as all of you know.\n Paradigms are widely used in corpus linguistics or search engines.\nTo create the full paradigm set of a language is sometimes tricky. It is particularly so when we deal with a morphologically rich language like Korean.\nInflection of Korean verbs is notorisouly complicated. Typically, a Korean verb can combine with more than 100 endings. What is worse, the combination rules are not simple at all.\n They are determined by the sound of the verb/ending, and the part-of-speech of the verb (action / descriptive). That's why so far there's no open sources of Korean paradigm generator, I think.\n Here's the first one. With KoParadigm, you can easily get the full paradigm of a Korean verb. \n\n## Dependencies\n* python >=3.6\n* jamo >=0.4.1\n* xlrd > 1.2.0\n\n## Installation\n```\npip install koparadigm\n```\n\n## Usage\n```\n>>> from koparadigm import Paradigm, prettify\n>>> p = Paradigm()\n>>> verb = \"\uacf1\" # Note that you must drop the final ending \ub2e4\n>>> paradigms = p.conjugate(verb) # this returns list of lists\n>>> print(paradigms)\n[['Action Verb', [('\uac70\ub098', '\uacf1\uac70\ub098'), ('\uac70\ub298', '\uacf1\uac70\ub298'), ('\uac70\ub2c8', '\uacf1\uac70\ub2c8') ...]]]\n>>> prettify(paradigms)\nPOS = Action Verb\n\u2022 ending = \uac70\ub098 form = \uacf1\uac70\ub098\n\u2022 ending = \uac70\ub298 form = \uacf1\uac70\ub298\n\u2022 ending = \uac70\ub2c8 form = \uacf1\uac70\ub2c8\n...\n==================== 2 ====================\nPOS = Descriptive Verb\n\u2022 ending = \uac70\ub098 form = \uacf1\uac70\ub098\n\u2022 ending = \uac70\ub298 form = \uacf1\uac70\ub298\n\u2022 ending = \uac70\ub2c8 form = \uacf1\uac70\ub2c8\n\u2022 ending = \uac70\ub2c8\uc640 form = \uacf1\uac70\ub2c8\uc640\n...\n\n```\n## References\nIf you use our software for research, please cite:\n\n```\n@misc{KoParadigm2019,\n  author = {Park, Kyubyong },\n  title = {KoParadigm},\n  year = {2019},\n  publisher = {GitHub},\n  journal = {GitHub repository},\n  howpublished = {\\url{https://github.com/Kyubyong/paradigm}}\n}\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Kyubyong/paradigm", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "koparadigm", "package_url": "https://pypi.org/project/koparadigm/", "platform": "", "project_url": "https://pypi.org/project/koparadigm/", "project_urls": {"Homepage": "https://github.com/Kyubyong/paradigm"}, "release_url": "https://pypi.org/project/koparadigm/0.9.9/", "requires_dist": ["jamo", "xlrd"], "requires_python": ">=3.6", "summary": "Korean Conjugation Paradigm Generator", "version": "0.9.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>KoParadigm: Korean Inflectional Paradigm Generator</h1>\n<p>(Inflectional) paradigm means the set of all the inflected forms of a word. For example, English verb \"look\" has inflected forms like \"look\", \"look-s\", \"look-ed\", and \"look-ing\", as all of you know.\nParadigms are widely used in corpus linguistics or search engines.\nTo create the full paradigm set of a language is sometimes tricky. It is particularly so when we deal with a morphologically rich language like Korean.\nInflection of Korean verbs is notorisouly complicated. Typically, a Korean verb can combine with more than 100 endings. What is worse, the combination rules are not simple at all.\nThey are determined by the sound of the verb/ending, and the part-of-speech of the verb (action / descriptive). That's why so far there's no open sources of Korean paradigm generator, I think.\nHere's the first one. With KoParadigm, you can easily get the full paradigm of a Korean verb.</p>\n<h2>Dependencies</h2>\n<ul>\n<li>python &gt;=3.6</li>\n<li>jamo &gt;=0.4.1</li>\n<li>xlrd &gt; 1.2.0</li>\n</ul>\n<h2>Installation</h2>\n<pre><code>pip install koparadigm\n</code></pre>\n<h2>Usage</h2>\n<pre><code>&gt;&gt;&gt; from koparadigm import Paradigm, prettify\n&gt;&gt;&gt; p = Paradigm()\n&gt;&gt;&gt; verb = \"\uacf1\" # Note that you must drop the final ending \ub2e4\n&gt;&gt;&gt; paradigms = p.conjugate(verb) # this returns list of lists\n&gt;&gt;&gt; print(paradigms)\n[['Action Verb', [('\uac70\ub098', '\uacf1\uac70\ub098'), ('\uac70\ub298', '\uacf1\uac70\ub298'), ('\uac70\ub2c8', '\uacf1\uac70\ub2c8') ...]]]\n&gt;&gt;&gt; prettify(paradigms)\nPOS = Action Verb\n\u2022 ending = \uac70\ub098 form = \uacf1\uac70\ub098\n\u2022 ending = \uac70\ub298 form = \uacf1\uac70\ub298\n\u2022 ending = \uac70\ub2c8 form = \uacf1\uac70\ub2c8\n...\n==================== 2 ====================\nPOS = Descriptive Verb\n\u2022 ending = \uac70\ub098 form = \uacf1\uac70\ub098\n\u2022 ending = \uac70\ub298 form = \uacf1\uac70\ub298\n\u2022 ending = \uac70\ub2c8 form = \uacf1\uac70\ub2c8\n\u2022 ending = \uac70\ub2c8\uc640 form = \uacf1\uac70\ub2c8\uc640\n...\n\n</code></pre>\n<h2>References</h2>\n<p>If you use our software for research, please cite:</p>\n<pre><code>@misc{KoParadigm2019,\n  author = {Park, Kyubyong },\n  title = {KoParadigm},\n  year = {2019},\n  publisher = {GitHub},\n  journal = {GitHub repository},\n  howpublished = {\\url{https://github.com/Kyubyong/paradigm}}\n}\n</code></pre>\n\n          </div>"}, "last_serial": 7057524, "releases": {"0.9.3": [{"comment_text": "", "digests": {"md5": "30542bf7b380d022bf54fd5396733ef4", "sha256": "9988b49c4a0b07bfd2389ef15d63ad96dcc07b5b9cab2bbeea7de60549cfd462"}, "downloads": -1, "filename": "koparadigm-0.9.3-py3-none-any.whl", "has_sig": false, "md5_digest": "30542bf7b380d022bf54fd5396733ef4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 1233227, "upload_time": "2019-06-27T08:06:48", "upload_time_iso_8601": "2019-06-27T08:06:48.855805Z", "url": "https://files.pythonhosted.org/packages/b4/27/f797fbf699a4e73f1b998446a39c04261c4a8f213eb7506d7cdf40953276/koparadigm-0.9.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5943a315b0b15be06543e3f8e3b57e50", "sha256": "dd4158032e283115bb40e90067eeb7c5ff0f6d4c7be62c0e7a9893005cc5c8a9"}, "downloads": -1, "filename": "koparadigm-0.9.3.tar.gz", "has_sig": false, "md5_digest": "5943a315b0b15be06543e3f8e3b57e50", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1231052, "upload_time": "2019-06-27T08:07:38", "upload_time_iso_8601": "2019-06-27T08:07:38.157384Z", "url": "https://files.pythonhosted.org/packages/dd/b3/b5a948a279e6b34cb76889c61195aebd69cc6f09b8655a8bef4aacb78c29/koparadigm-0.9.3.tar.gz", "yanked": false}], "0.9.9": [{"comment_text": "", "digests": {"md5": "1c719e7d33fd25394fffbb7fe24a5b5a", "sha256": "a68c0b5c66fe9416c1162066b098112c158558dc3a12bcab0fcfb8e1cf5504fd"}, "downloads": -1, "filename": "koparadigm-0.9.9-py3-none-any.whl", "has_sig": false, "md5_digest": "1c719e7d33fd25394fffbb7fe24a5b5a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 1600779, "upload_time": "2020-04-20T04:44:16", "upload_time_iso_8601": "2020-04-20T04:44:16.702698Z", "url": "https://files.pythonhosted.org/packages/82/d4/0a054ce4f83bd091e99989fa161e306261b1a0b8b9a446439d14c5164dcb/koparadigm-0.9.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "20aa31f074714978c4eb7e9dec569c79", "sha256": "30840cf1493c289c396667b463e1cc457eec83bed6ecf81968d380ba8155c59c"}, "downloads": -1, "filename": "koparadigm-0.9.9.tar.gz", "has_sig": false, "md5_digest": "20aa31f074714978c4eb7e9dec569c79", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1598528, "upload_time": "2020-04-20T04:44:27", "upload_time_iso_8601": "2020-04-20T04:44:27.824143Z", "url": "https://files.pythonhosted.org/packages/ec/fd/a09a1269979e9dac527e8c4bc4d853680cb4653b199247b809004bb93c90/koparadigm-0.9.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1c719e7d33fd25394fffbb7fe24a5b5a", "sha256": "a68c0b5c66fe9416c1162066b098112c158558dc3a12bcab0fcfb8e1cf5504fd"}, "downloads": -1, "filename": "koparadigm-0.9.9-py3-none-any.whl", "has_sig": false, "md5_digest": "1c719e7d33fd25394fffbb7fe24a5b5a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 1600779, "upload_time": "2020-04-20T04:44:16", "upload_time_iso_8601": "2020-04-20T04:44:16.702698Z", "url": "https://files.pythonhosted.org/packages/82/d4/0a054ce4f83bd091e99989fa161e306261b1a0b8b9a446439d14c5164dcb/koparadigm-0.9.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "20aa31f074714978c4eb7e9dec569c79", "sha256": "30840cf1493c289c396667b463e1cc457eec83bed6ecf81968d380ba8155c59c"}, "downloads": -1, "filename": "koparadigm-0.9.9.tar.gz", "has_sig": false, "md5_digest": "20aa31f074714978c4eb7e9dec569c79", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1598528, "upload_time": "2020-04-20T04:44:27", "upload_time_iso_8601": "2020-04-20T04:44:27.824143Z", "url": "https://files.pythonhosted.org/packages/ec/fd/a09a1269979e9dac527e8c4bc4d853680cb4653b199247b809004bb93c90/koparadigm-0.9.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:59 2020"}