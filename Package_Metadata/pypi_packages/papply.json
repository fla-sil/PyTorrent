{"info": {"author": "Sacha Hony", "author_email": "sachahony@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# PAPPLY\nPython wrapper to execute command line programs in parallel using multiprocessing.Pool\n\n# Description\nA very simple wrapper around python's multiprocessing to be able to\neasily execute command line programs in parallel.\nIt's implementation is inspired by [GNU\nParallel](https://www.gnu.org/software/parallel/) and\n[Apply](http://maverick.inria.fr/~Gilles.Debunne/Code/Apply).\n\nThe basic idea is that one does not have to change much to the original\ncommand line to run tasks in parallel.\n\nThe first argument is interpreted as the command to execute multiple\ntimes, all other arguments are used as the inputs to the command.\n\n# Example usage\nhello world: **papply echo \\\"Hello World\" \"Hello Papply\\\"**\n\ncompressing files with [GNU gzip](https://www.gnu.org/software/gzip/):\n\n**gzip \\*.txt**\n\nbecomes:\n\n**papply gzip \\*.txt**\n\nconverting images to jpg using [ImageMagick's](https://imagemagick.org/index.php) convert:\n\n**convert 1.png 1.jpg**, **convert 2.png 2.jpg**, **convert 2.png 2.jpg**, ...\n\nbecomes:\n\n**papply \\\"convert %F %n.jpg\\\" \\*.png**\n\n# Features\n## Template replacements\nThe following strings can appear in the command string (the first\nargument to *papply*). They will be replaced by:\n\n* %F: Full original input\n* %d: directory name (no trailing slash)\n* %f: file name with extension\n* %n: file name without extension\n* %e: extension (with leading .)\n* %z: empty string\n\n## Configuration\nThe basic configuration should work for most use-cases. I have not\nimplemented command line options to *papply* itself on purpose. This is\na choice to keep the interface as simple as possible.\n\nIf you want to override the default values you can create a\n*papply.ini* file. This file will be looked for first in the directory\nwhere you execute the command and second in your home directory. The\nfollowing parameters can be changed:\n\n* **num_cores**: number of cores to use, default all available cores\n* **overcommit_factor**: how many threads per core to request, default 1\n* **show_progress**: print progress of the running jobs (yes, no, IfLong), default show progress if running a long time\n* **long_duration**: time in seconds to be considered long after which progress is shown, default 60\n\nAny values that are not set explicitly will default to the standard\nvalue. There is an example ini file included in the distribution\n(*papply.ini.example*).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zazaho/PAPPLY", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "papply", "package_url": "https://pypi.org/project/papply/", "platform": "", "project_url": "https://pypi.org/project/papply/", "project_urls": {"Homepage": "https://github.com/zazaho/PAPPLY"}, "release_url": "https://pypi.org/project/papply/0.1.1/", "requires_dist": null, "requires_python": ">=3", "summary": "Script to run command line programs in parallel", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PAPPLY</h1>\n<p>Python wrapper to execute command line programs in parallel using multiprocessing.Pool</p>\n<h1>Description</h1>\n<p>A very simple wrapper around python's multiprocessing to be able to\neasily execute command line programs in parallel.\nIt's implementation is inspired by <a href=\"https://www.gnu.org/software/parallel/\" rel=\"nofollow\">GNU\nParallel</a> and\n<a href=\"http://maverick.inria.fr/%7EGilles.Debunne/Code/Apply\" rel=\"nofollow\">Apply</a>.</p>\n<p>The basic idea is that one does not have to change much to the original\ncommand line to run tasks in parallel.</p>\n<p>The first argument is interpreted as the command to execute multiple\ntimes, all other arguments are used as the inputs to the command.</p>\n<h1>Example usage</h1>\n<p>hello world: <strong>papply echo \"Hello World\" \"Hello Papply\"</strong></p>\n<p>compressing files with <a href=\"https://www.gnu.org/software/gzip/\" rel=\"nofollow\">GNU gzip</a>:</p>\n<p><strong>gzip *.txt</strong></p>\n<p>becomes:</p>\n<p><strong>papply gzip *.txt</strong></p>\n<p>converting images to jpg using <a href=\"https://imagemagick.org/index.php\" rel=\"nofollow\">ImageMagick's</a> convert:</p>\n<p><strong>convert 1.png 1.jpg</strong>, <strong>convert 2.png 2.jpg</strong>, <strong>convert 2.png 2.jpg</strong>, ...</p>\n<p>becomes:</p>\n<p><strong>papply \"convert %F %n.jpg\" *.png</strong></p>\n<h1>Features</h1>\n<h2>Template replacements</h2>\n<p>The following strings can appear in the command string (the first\nargument to <em>papply</em>). They will be replaced by:</p>\n<ul>\n<li>%F: Full original input</li>\n<li>%d: directory name (no trailing slash)</li>\n<li>%f: file name with extension</li>\n<li>%n: file name without extension</li>\n<li>%e: extension (with leading .)</li>\n<li>%z: empty string</li>\n</ul>\n<h2>Configuration</h2>\n<p>The basic configuration should work for most use-cases. I have not\nimplemented command line options to <em>papply</em> itself on purpose. This is\na choice to keep the interface as simple as possible.</p>\n<p>If you want to override the default values you can create a\n<em>papply.ini</em> file. This file will be looked for first in the directory\nwhere you execute the command and second in your home directory. The\nfollowing parameters can be changed:</p>\n<ul>\n<li><strong>num_cores</strong>: number of cores to use, default all available cores</li>\n<li><strong>overcommit_factor</strong>: how many threads per core to request, default 1</li>\n<li><strong>show_progress</strong>: print progress of the running jobs (yes, no, IfLong), default show progress if running a long time</li>\n<li><strong>long_duration</strong>: time in seconds to be considered long after which progress is shown, default 60</li>\n</ul>\n<p>Any values that are not set explicitly will default to the standard\nvalue. There is an example ini file included in the distribution\n(<em>papply.ini.example</em>).</p>\n\n          </div>"}, "last_serial": 6117727, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "3a6323fe51adad0fb3f3ccc3604b5af2", "sha256": "f4c3607cf4238a291e05341e45ec4b3f5dd788827462a3893eabaae1aee0b2f7"}, "downloads": -1, "filename": "papply-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3a6323fe51adad0fb3f3ccc3604b5af2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 5497, "upload_time": "2019-11-11T15:57:48", "upload_time_iso_8601": "2019-11-11T15:57:48.999115Z", "url": "https://files.pythonhosted.org/packages/d3/bb/a04e51f3b5272d373c68679e5456b5f2016e9b2303ab571e85867d20854c/papply-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2655a89a4f818daa6887295afe7fb04a", "sha256": "710290f22550a9edd564504299c17081203c40b1525052cd713ee4dd185455f1"}, "downloads": -1, "filename": "papply-0.1.tar.gz", "has_sig": false, "md5_digest": "2655a89a4f818daa6887295afe7fb04a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 4363, "upload_time": "2019-11-11T15:57:51", "upload_time_iso_8601": "2019-11-11T15:57:51.195259Z", "url": "https://files.pythonhosted.org/packages/23/6a/20085fc026a22612f31d4793c958b963ed6e397313014cc3078987cd03a9/papply-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "d96bf5eaee5298506eee2f3d0bc8e2f0", "sha256": "5c7fc2212cc0fdad9a42f5ac520bd83b881b209b68466af78303d32f56bb8be4"}, "downloads": -1, "filename": "papply-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d96bf5eaee5298506eee2f3d0bc8e2f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 5528, "upload_time": "2019-11-11T16:02:01", "upload_time_iso_8601": "2019-11-11T16:02:01.887317Z", "url": "https://files.pythonhosted.org/packages/4a/d1/e624376591deaa13486ae871071679624827454e553c1a02bd1bb2766b14/papply-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0aad5e2dfe99a9cc3b5ea1c98fc2f836", "sha256": "dd88e6d7421555d569d5f4d318a09914536b678012dff39cfcca9281a001cdd3"}, "downloads": -1, "filename": "papply-0.1.1.tar.gz", "has_sig": false, "md5_digest": "0aad5e2dfe99a9cc3b5ea1c98fc2f836", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 4367, "upload_time": "2019-11-11T16:02:03", "upload_time_iso_8601": "2019-11-11T16:02:03.929335Z", "url": "https://files.pythonhosted.org/packages/8c/4a/fccc5ba0237a5cb9ffe949a87ec2ec3fda87b41ae81ea20a7c90c68b0e04/papply-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d96bf5eaee5298506eee2f3d0bc8e2f0", "sha256": "5c7fc2212cc0fdad9a42f5ac520bd83b881b209b68466af78303d32f56bb8be4"}, "downloads": -1, "filename": "papply-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d96bf5eaee5298506eee2f3d0bc8e2f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 5528, "upload_time": "2019-11-11T16:02:01", "upload_time_iso_8601": "2019-11-11T16:02:01.887317Z", "url": "https://files.pythonhosted.org/packages/4a/d1/e624376591deaa13486ae871071679624827454e553c1a02bd1bb2766b14/papply-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0aad5e2dfe99a9cc3b5ea1c98fc2f836", "sha256": "dd88e6d7421555d569d5f4d318a09914536b678012dff39cfcca9281a001cdd3"}, "downloads": -1, "filename": "papply-0.1.1.tar.gz", "has_sig": false, "md5_digest": "0aad5e2dfe99a9cc3b5ea1c98fc2f836", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 4367, "upload_time": "2019-11-11T16:02:03", "upload_time_iso_8601": "2019-11-11T16:02:03.929335Z", "url": "https://files.pythonhosted.org/packages/8c/4a/fccc5ba0237a5cb9ffe949a87ec2ec3fda87b41ae81ea20a7c90c68b0e04/papply-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:44 2020"}