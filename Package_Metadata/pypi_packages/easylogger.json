{"info": {"author": "AARMN", "author_email": "aarmn80@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# easylogger\neasylogger is the most simple way to write your logs . just make a **logs** object , we can handle session counting and count logs and 6 level of importance for logs (0,5).\n\n## logs\nthe main method just write easylogger.logs(\"your file dest (default is ./log.txt)\",\"your log name\",\"your log details\")\nfor example\na=easylogger.logs(\"./click.log\",\"clicks log\",\"here we have log of clicks from 2012\")\n## logwrite\nogger.logs.logwrite is the only function have three parameters title ,message and degree (0,5)\nfor example\na.logwrite(\"file IO\",\"all of sdcard files are corrupted\")\n## degree\n0>>trace\n1>>debug\n2>>info\n3>>warn\n4>>err\n5>>fatal\n\n## Sample Code\n\n    import easylogger\n\n    a=easylogger.logs(\"./xapp.log\",\"X app log\",\"all of things happening in X app is written here\")\n    a.logwrite(\"mouse move\",\"127*148 RU\",0)\n    a.logwrite(\"hello\",\"127*148 RU\",0)\n\n    a=None #simulating when app is closed\n\n    a=easylogger.logs(\"./xapp.log\",\"X app log\",\"all of things happening in X app is written here\")\n    a.logwrite(\"mouse move\",\"127*148 RU\",0)\n    a.logwrite(\"hello\",\"127*148 RU\",0)\n\n## Sample Output\n**xapp.log:**\n\n    **************** X app log ****************\n    ----------------\n    all of things happening in X app is written here\n    ----------------\n    ================ Session:0[2018-06-15 04:00:05.612757] ================\n    [(0,{2018-06-15 04:00:05.612954}) trace >>> mouse move : \"127*148 RU\"]\n    [(1,{2018-06-15 04:00:05.613090}) trace >>> hello : \"127*148 RU\"]\n    ================ Session:1[2018-06-15 04:00:05.613332] ================\n    [(0,{2018-06-15 04:00:05.613445}) trace >>> mouse move : \"127*148 RU\"]\n    [(1,{2018-06-15 04:00:05.613564}) trace >>> hello : \"127*148 RU\"]\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/public-aarmn-simple/easylogger", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "easylogger", "package_url": "https://pypi.org/project/easylogger/", "platform": "", "project_url": "https://pypi.org/project/easylogger/", "project_urls": {"Homepage": "https://gitlab.com/public-aarmn-simple/easylogger"}, "release_url": "https://pypi.org/project/easylogger/2.1.0/", "requires_dist": null, "requires_python": "", "summary": "A tiny logger , make life a little easier", "version": "2.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>easylogger</h1>\n<p>easylogger is the most simple way to write your logs . just make a <strong>logs</strong> object , we can handle session counting and count logs and 6 level of importance for logs (0,5).</p>\n<h2>logs</h2>\n<p>the main method just write easylogger.logs(\"your file dest (default is ./log.txt)\",\"your log name\",\"your log details\")\nfor example\na=easylogger.logs(\"./click.log\",\"clicks log\",\"here we have log of clicks from 2012\")</p>\n<h2>logwrite</h2>\n<p>ogger.logs.logwrite is the only function have three parameters title ,message and degree (0,5)\nfor example\na.logwrite(\"file IO\",\"all of sdcard files are corrupted\")</p>\n<h2>degree</h2>\n<p>0&gt;&gt;trace\n1&gt;&gt;debug\n2&gt;&gt;info\n3&gt;&gt;warn\n4&gt;&gt;err\n5&gt;&gt;fatal</p>\n<h2>Sample Code</h2>\n<pre><code>import easylogger\n\na=easylogger.logs(\"./xapp.log\",\"X app log\",\"all of things happening in X app is written here\")\na.logwrite(\"mouse move\",\"127*148 RU\",0)\na.logwrite(\"hello\",\"127*148 RU\",0)\n\na=None #simulating when app is closed\n\na=easylogger.logs(\"./xapp.log\",\"X app log\",\"all of things happening in X app is written here\")\na.logwrite(\"mouse move\",\"127*148 RU\",0)\na.logwrite(\"hello\",\"127*148 RU\",0)\n</code></pre>\n<h2>Sample Output</h2>\n<p><strong>xapp.log:</strong></p>\n<pre><code>**************** X app log ****************\n----------------\nall of things happening in X app is written here\n----------------\n================ Session:0[2018-06-15 04:00:05.612757] ================\n[(0,{2018-06-15 04:00:05.612954}) trace &gt;&gt;&gt; mouse move : \"127*148 RU\"]\n[(1,{2018-06-15 04:00:05.613090}) trace &gt;&gt;&gt; hello : \"127*148 RU\"]\n================ Session:1[2018-06-15 04:00:05.613332] ================\n[(0,{2018-06-15 04:00:05.613445}) trace &gt;&gt;&gt; mouse move : \"127*148 RU\"]\n[(1,{2018-06-15 04:00:05.613564}) trace &gt;&gt;&gt; hello : \"127*148 RU\"]\n</code></pre>\n\n          </div>"}, "last_serial": 3965944, "releases": {"2.1.0": [{"comment_text": "", "digests": {"md5": "0b95b885c20be40a0b4870a91ddbf08f", "sha256": "395790b296beafc656ce3a861414249143d4785dfc02671655b9fb5b875474c2"}, "downloads": -1, "filename": "easylogger-2.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0b95b885c20be40a0b4870a91ddbf08f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3921, "upload_time": "2018-06-15T19:57:15", "upload_time_iso_8601": "2018-06-15T19:57:15.226016Z", "url": "https://files.pythonhosted.org/packages/2c/4a/ef85a40d5e2f99bf2eb05827d1d03689fa3959be892420d7e4afe854bfd2/easylogger-2.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0e26899bd0d1eca75978dfa2eeb81d4", "sha256": "b0a39b40a1ee5084f96afecea5afb8575be40e6aa94bdb8cd64c5a1a4ae1e63f"}, "downloads": -1, "filename": "easylogger-2.1.0.tar.gz", "has_sig": false, "md5_digest": "d0e26899bd0d1eca75978dfa2eeb81d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3255, "upload_time": "2018-06-15T19:57:16", "upload_time_iso_8601": "2018-06-15T19:57:16.566907Z", "url": "https://files.pythonhosted.org/packages/8c/3b/56b3ad734a04e7bc1986134174e9dee87991b1bd40d8128afb4037f13583/easylogger-2.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0b95b885c20be40a0b4870a91ddbf08f", "sha256": "395790b296beafc656ce3a861414249143d4785dfc02671655b9fb5b875474c2"}, "downloads": -1, "filename": "easylogger-2.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0b95b885c20be40a0b4870a91ddbf08f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3921, "upload_time": "2018-06-15T19:57:15", "upload_time_iso_8601": "2018-06-15T19:57:15.226016Z", "url": "https://files.pythonhosted.org/packages/2c/4a/ef85a40d5e2f99bf2eb05827d1d03689fa3959be892420d7e4afe854bfd2/easylogger-2.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0e26899bd0d1eca75978dfa2eeb81d4", "sha256": "b0a39b40a1ee5084f96afecea5afb8575be40e6aa94bdb8cd64c5a1a4ae1e63f"}, "downloads": -1, "filename": "easylogger-2.1.0.tar.gz", "has_sig": false, "md5_digest": "d0e26899bd0d1eca75978dfa2eeb81d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3255, "upload_time": "2018-06-15T19:57:16", "upload_time_iso_8601": "2018-06-15T19:57:16.566907Z", "url": "https://files.pythonhosted.org/packages/8c/3b/56b3ad734a04e7bc1986134174e9dee87991b1bd40d8128afb4037f13583/easylogger-2.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:20 2020"}