{"info": {"author": "Giorgio Giuffr\u00e8", "author_email": "giorgiogiuffre23@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Text Processing"], "description": "# tflyrics\n<a href=\"https://codeclimate.com/github/ggiuffre/tf-lyrics/maintainability\"><img src=\"https://api.codeclimate.com/v1/badges/b0845d2d158fc06c1677/maintainability\" /></a>\n\nGenerate intriguing lyrics with TensorFlow and an internet connection.\n\n`tflyrics` is a Python package that allows you to easily select lyrics of\nspecific artists from [genius.com](https://genius.com/), and train a deep\nneural network to generate text that sounds similar to those lyrics. This\nwork was inspired from [The Unreasonable Effectiveness of Recurrent Neural\nNetworks](http://karpathy.github.io/2015/05/21/rnn-effectiveness/) and\n[Text generation with an\nRNN](https://www.tensorflow.org/tutorials/text/text_generation).\n\nExample:\n\n```python\nfrom tflyrics import Poet, LyricsGenerator\n\nartists = ['Bob Dylan', 'Tim Buckley', 'The Beatles']\ngen = LyricsGenerator(artists, per_artist=5)\nds = gen.as_dataset(batch_size=16)\n\np = Poet()\np.train_on(ds, n_epochs=10)\npoem = p.generate(start_string='Hey ', n_gen_chars=1000)\nprint(poem)\n```\n\nQuick paraphrase: a `LyricsGenerator` object makes it easy for you to create a\ndata pipeline that feeds from the Genius API directly into a recurrent neural\nnetwork; a `Poet` object is a wrapper around a recurrent neural network.\n\nNote that the Genius API requires you to have an **access token**. Without\nthat, `tflyrics` won't be able to get lyrics for you. You can get an access\ntoken for free at [docs.genius.com](https://docs.genius.com/). Once you have\nit you can either pass it under the `token` argument of a `LyricsGenerator`\nconstructor, or store it as en environment variable (with `export\nGENIUS_ACCESS_TOKEN='<your token here>'`). `tflyrics` will detect this\nenvironment variable automatically, if it exists.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ggiuffre/tf-lyrics", "keywords": "genius tensorflow lyrics scraper tflyrics", "license": "", "maintainer": "", "maintainer_email": "", "name": "tflyrics", "package_url": "https://pypi.org/project/tflyrics/", "platform": "", "project_url": "https://pypi.org/project/tflyrics/", "project_urls": {"Documentation": "https://ggiuffre.github.io/tf-lyrics", "Homepage": "https://github.com/ggiuffre/tf-lyrics", "Source": "https://github.com/ggiuffre/tf-lyrics/", "Tracker": "https://github.com/ggiuffre/tf-lyrics/issues"}, "release_url": "https://pypi.org/project/tflyrics/0.2.1/", "requires_dist": ["beautifulsoup4", "tensorflow (>=2.0)"], "requires_python": ">=3.6", "summary": "Generate lyrics with TensorFlow and the Genius API", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>tflyrics</h1>\n<p><a href=\"https://codeclimate.com/github/ggiuffre/tf-lyrics/maintainability\" rel=\"nofollow\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/040162edc64c120593b78e36aeb4766e54f71a7a/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f62303834356432643135386663303663313637372f6d61696e7461696e6162696c697479\"></a></p>\n<p>Generate intriguing lyrics with TensorFlow and an internet connection.</p>\n<p><code>tflyrics</code> is a Python package that allows you to easily select lyrics of\nspecific artists from <a href=\"https://genius.com/\" rel=\"nofollow\">genius.com</a>, and train a deep\nneural network to generate text that sounds similar to those lyrics. This\nwork was inspired from <a href=\"http://karpathy.github.io/2015/05/21/rnn-effectiveness/\" rel=\"nofollow\">The Unreasonable Effectiveness of Recurrent Neural\nNetworks</a> and\n<a href=\"https://www.tensorflow.org/tutorials/text/text_generation\" rel=\"nofollow\">Text generation with an\nRNN</a>.</p>\n<p>Example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tflyrics</span> <span class=\"kn\">import</span> <span class=\"n\">Poet</span><span class=\"p\">,</span> <span class=\"n\">LyricsGenerator</span>\n\n<span class=\"n\">artists</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'Bob Dylan'</span><span class=\"p\">,</span> <span class=\"s1\">'Tim Buckley'</span><span class=\"p\">,</span> <span class=\"s1\">'The Beatles'</span><span class=\"p\">]</span>\n<span class=\"n\">gen</span> <span class=\"o\">=</span> <span class=\"n\">LyricsGenerator</span><span class=\"p\">(</span><span class=\"n\">artists</span><span class=\"p\">,</span> <span class=\"n\">per_artist</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">gen</span><span class=\"o\">.</span><span class=\"n\">as_dataset</span><span class=\"p\">(</span><span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">16</span><span class=\"p\">)</span>\n\n<span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">Poet</span><span class=\"p\">()</span>\n<span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">train_on</span><span class=\"p\">(</span><span class=\"n\">ds</span><span class=\"p\">,</span> <span class=\"n\">n_epochs</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">poem</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">start_string</span><span class=\"o\">=</span><span class=\"s1\">'Hey '</span><span class=\"p\">,</span> <span class=\"n\">n_gen_chars</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">poem</span><span class=\"p\">)</span>\n</pre>\n<p>Quick paraphrase: a <code>LyricsGenerator</code> object makes it easy for you to create a\ndata pipeline that feeds from the Genius API directly into a recurrent neural\nnetwork; a <code>Poet</code> object is a wrapper around a recurrent neural network.</p>\n<p>Note that the Genius API requires you to have an <strong>access token</strong>. Without\nthat, <code>tflyrics</code> won't be able to get lyrics for you. You can get an access\ntoken for free at <a href=\"https://docs.genius.com/\" rel=\"nofollow\">docs.genius.com</a>. Once you have\nit you can either pass it under the <code>token</code> argument of a <code>LyricsGenerator</code>\nconstructor, or store it as en environment variable (with <code>export GENIUS_ACCESS_TOKEN='&lt;your token here&gt;'</code>). <code>tflyrics</code> will detect this\nenvironment variable automatically, if it exists.</p>\n\n          </div>"}, "last_serial": 6914387, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "8ab929a91a36e205e6e9583a3ebb4248", "sha256": "89527c4d3e896a610bd3172105c44c62cd2f7b37b3fb30e60ad71540d077d2bf"}, "downloads": -1, "filename": "tflyrics-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8ab929a91a36e205e6e9583a3ebb4248", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11209, "upload_time": "2020-03-25T14:35:57", "upload_time_iso_8601": "2020-03-25T14:35:57.697557Z", "url": "https://files.pythonhosted.org/packages/fa/14/7da5d112e2b54d1fc89060a4e7cb12c3037488e848253fb701dfa971afec/tflyrics-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9b455ee47320ff8a4e3d23c4dafb76b", "sha256": "8786f3bf5d7ed8e7bea44bd03a9a62ea7c31bd56336c7e33b872e03d76d805fc"}, "downloads": -1, "filename": "tflyrics-0.1.tar.gz", "has_sig": false, "md5_digest": "a9b455ee47320ff8a4e3d23c4dafb76b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10076, "upload_time": "2020-03-25T14:35:59", "upload_time_iso_8601": "2020-03-25T14:35:59.748433Z", "url": "https://files.pythonhosted.org/packages/e1/a2/34c07879b39a6c548bea03f1f16074782e6762ccc0ed31a72db5671d9d63/tflyrics-0.1.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "a6af8fa838180d6398aedb217fa52d3f", "sha256": "15e381e84dd55c9c2955b37a9b617d9f058a7093dad423405b00050f96766cee"}, "downloads": -1, "filename": "tflyrics-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a6af8fa838180d6398aedb217fa52d3f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11268, "upload_time": "2020-03-30T17:08:58", "upload_time_iso_8601": "2020-03-30T17:08:58.102980Z", "url": "https://files.pythonhosted.org/packages/90/58/befd06829a3c392e7195094ca7e8df07b775ba82589adca5bf7c06c63601/tflyrics-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae31cd418daf365b5ad7c885f31b80f6", "sha256": "0224133fb80ef1d1c5c25eee0085b7efbf6288dd10b546a9ec607597d48f1dff"}, "downloads": -1, "filename": "tflyrics-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ae31cd418daf365b5ad7c885f31b80f6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10130, "upload_time": "2020-03-30T17:09:00", "upload_time_iso_8601": "2020-03-30T17:09:00.000236Z", "url": "https://files.pythonhosted.org/packages/04/f2/c1d00054462c2b01fc585ebd93edc10ad3d16babf9174a2972b7b72824da/tflyrics-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a6af8fa838180d6398aedb217fa52d3f", "sha256": "15e381e84dd55c9c2955b37a9b617d9f058a7093dad423405b00050f96766cee"}, "downloads": -1, "filename": "tflyrics-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a6af8fa838180d6398aedb217fa52d3f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11268, "upload_time": "2020-03-30T17:08:58", "upload_time_iso_8601": "2020-03-30T17:08:58.102980Z", "url": "https://files.pythonhosted.org/packages/90/58/befd06829a3c392e7195094ca7e8df07b775ba82589adca5bf7c06c63601/tflyrics-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae31cd418daf365b5ad7c885f31b80f6", "sha256": "0224133fb80ef1d1c5c25eee0085b7efbf6288dd10b546a9ec607597d48f1dff"}, "downloads": -1, "filename": "tflyrics-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ae31cd418daf365b5ad7c885f31b80f6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10130, "upload_time": "2020-03-30T17:09:00", "upload_time_iso_8601": "2020-03-30T17:09:00.000236Z", "url": "https://files.pythonhosted.org/packages/04/f2/c1d00054462c2b01fc585ebd93edc10ad3d16babf9174a2972b7b72824da/tflyrics-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:31 2020"}