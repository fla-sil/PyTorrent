{"info": {"author": "Ryan Avery", "author_email": "ravery@ucsb.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: GIS", "Topic :: Scientific/Engineering :: Image Recognition", "Topic :: Scientific/Engineering :: Visualization"], "description": "[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\nCropMask is a project to train and deploy instance segmentation models for mapping center pivot agriculture from multispectral satellite imagery. It extends [matterport's module](https://github.com/matterport/Mask_RCNN) , which is an implementation of [Mask R-CNN](https://arxiv.org/abs/1703.06870) on Python 3, Keras, and TensorFlow. CropMask work with multispectral satellite imagery, contains infrastructure-as-code via terraform to provision a testing cluster on Azure, and will eventually contain a Leaflet or OpenLayers web app to expose maps of crop water use in drylands across the globe. \n\nSee [matterport's mrcnn repo](https://github.com/matterport/Mask_RCNN) for an explanation of the Mask R-CNN architecture and a general guide to notebook tutorials and notebooks for inspecting model inputs and outputs.\n\nFor an overview of the project in poster form, see this poster I presented at the Fall 2018 Meeting on [Center Pivot Crop Water Use](assets/cropmask_agu2018.pdf). \n\nBelow are Preliminary results from test on 2004 Landsat SR scene over western Nebraska. Detections are in Red, Targets from the Nebraska Department of Agriculture are in Green. Metrics are (probability score)/(intersection over union)\n![Center Pivot Detections](assets/cp_detection.png)\n\n## Local Installation of cropmask dependencies, see `terraform/` folder for instructions to set up azure components.\n1. Install dependencies and install the package\n   ```bash\n   conda env create -f cropmask-env.yml\n   python setup.py install # use develop instead of install for editable mode\n   ```\n2. Create a file called `.lsru` at `~` and fill in your NASA Earth Explorer Login credentials\n   ```\n   [usgs]\n   username=\n   password=\n   ```\n3. Copy the `azure_configs_template.yaml`, name it `azure_configs.yaml` and place it outside of the git repository (so you don't accidently commit it). Fill it in according to the comments int he template.\n4. Download the [National WBD Dataset](http://prd-tnm.s3-website-us-west-2.amazonaws.com/?prefix=StagedProducts/Hydrography/WBD/National/GDB/)\n5. Find the watershed you'd like to get Landsat imagery for with this [tool](https://water.usgs.gov/wsc/map_index.html). Make note of the HUC ID and the HUC level (the number of digits in the HUC ID) and put these in your azure_config.yaml file\n5. Download pre-trained COCO weights (mask_rcnn_coco.h5) from the [releases page](https://github.com/matterport/Mask_RCNN/releases).\n6. (Optional) To train or test on MS COCO install `pycocotools` from one of these repos. They are forks of the original pycocotools with fixes for Python3 and Windows (the official repo doesn't seem to be active anymore).\n\n    * Linux: https://github.com/waleedka/coco\n    * Windows: https://github.com/philferriere/cocoapi.\n    You must have the Visual C++ 2015 build tools on your path (see the repo for additional details)\n7. To train using labels from the [Nebraska 2005 Center Pivots Dataset](https://calmit.unl.edu/data/2005_NE_Center_Pivots.zip) and define the projection as Nebraska State Plane NAD 1983 in US Feet, which is EPSG code 102704\n\n### This setup will allow you to run the parts of the project that don't require Azure, like locally downloading Landsat products according to watershed boundaries. For instructions on setting up the entire project on Azure, see the README in the terraform folder\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ecohydro/CropMask_RCNN", "keywords": "segmentation keras landsat agriculture", "license": "", "maintainer": "", "maintainer_email": "", "name": "cropmask", "package_url": "https://pypi.org/project/cropmask/", "platform": "", "project_url": "https://pypi.org/project/cropmask/", "project_urls": {"Homepage": "https://github.com/ecohydro/CropMask_RCNN"}, "release_url": "https://pypi.org/project/cropmask/0.1/", "requires_dist": null, "requires_python": "", "summary": "AI for Earth project to map center pivots and monitor crop water use.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p>CropMask is a project to train and deploy instance segmentation models for mapping center pivot agriculture from multispectral satellite imagery. It extends <a href=\"https://github.com/matterport/Mask_RCNN\" rel=\"nofollow\">matterport's module</a> , which is an implementation of <a href=\"https://arxiv.org/abs/1703.06870\" rel=\"nofollow\">Mask R-CNN</a> on Python 3, Keras, and TensorFlow. CropMask work with multispectral satellite imagery, contains infrastructure-as-code via terraform to provision a testing cluster on Azure, and will eventually contain a Leaflet or OpenLayers web app to expose maps of crop water use in drylands across the globe.</p>\n<p>See <a href=\"https://github.com/matterport/Mask_RCNN\" rel=\"nofollow\">matterport's mrcnn repo</a> for an explanation of the Mask R-CNN architecture and a general guide to notebook tutorials and notebooks for inspecting model inputs and outputs.</p>\n<p>For an overview of the project in poster form, see this poster I presented at the Fall 2018 Meeting on <a href=\"assets/cropmask_agu2018.pdf\" rel=\"nofollow\">Center Pivot Crop Water Use</a>.</p>\n<p>Below are Preliminary results from test on 2004 Landsat SR scene over western Nebraska. Detections are in Red, Targets from the Nebraska Department of Agriculture are in Green. Metrics are (probability score)/(intersection over union)\n<img alt=\"Center Pivot Detections\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3aa2e30a7f3a5f58fe90ebd3a3cb2e55bd61f0d1/6173736574732f63705f646574656374696f6e2e706e67\"></p>\n<h2>Local Installation of cropmask dependencies, see <code>terraform/</code> folder for instructions to set up azure components.</h2>\n<ol>\n<li>\n<p>Install dependencies and install the package</p>\n<pre>conda env create -f cropmask-env.yml\npython setup.py install <span class=\"c1\"># use develop instead of install for editable mode</span>\n</pre>\n</li>\n<li>\n<p>Create a file called <code>.lsru</code> at <code>~</code> and fill in your NASA Earth Explorer Login credentials</p>\n<pre><code>[usgs]\nusername=\npassword=\n</code></pre>\n</li>\n<li>\n<p>Copy the <code>azure_configs_template.yaml</code>, name it <code>azure_configs.yaml</code> and place it outside of the git repository (so you don't accidently commit it). Fill it in according to the comments int he template.</p>\n</li>\n<li>\n<p>Download the <a href=\"http://prd-tnm.s3-website-us-west-2.amazonaws.com/?prefix=StagedProducts/Hydrography/WBD/National/GDB/\" rel=\"nofollow\">National WBD Dataset</a></p>\n</li>\n<li>\n<p>Find the watershed you'd like to get Landsat imagery for with this <a href=\"https://water.usgs.gov/wsc/map_index.html\" rel=\"nofollow\">tool</a>. Make note of the HUC ID and the HUC level (the number of digits in the HUC ID) and put these in your azure_config.yaml file</p>\n</li>\n<li>\n<p>Download pre-trained COCO weights (mask_rcnn_coco.h5) from the <a href=\"https://github.com/matterport/Mask_RCNN/releases\" rel=\"nofollow\">releases page</a>.</p>\n</li>\n<li>\n<p>(Optional) To train or test on MS COCO install <code>pycocotools</code> from one of these repos. They are forks of the original pycocotools with fixes for Python3 and Windows (the official repo doesn't seem to be active anymore).</p>\n<ul>\n<li>Linux: <a href=\"https://github.com/waleedka/coco\" rel=\"nofollow\">https://github.com/waleedka/coco</a></li>\n<li>Windows: <a href=\"https://github.com/philferriere/cocoapi\" rel=\"nofollow\">https://github.com/philferriere/cocoapi</a>.\nYou must have the Visual C++ 2015 build tools on your path (see the repo for additional details)</li>\n</ul>\n</li>\n<li>\n<p>To train using labels from the <a href=\"https://calmit.unl.edu/data/2005_NE_Center_Pivots.zip\" rel=\"nofollow\">Nebraska 2005 Center Pivots Dataset</a> and define the projection as Nebraska State Plane NAD 1983 in US Feet, which is EPSG code 102704</p>\n</li>\n</ol>\n<h3>This setup will allow you to run the parts of the project that don't require Azure, like locally downloading Landsat products according to watershed boundaries. For instructions on setting up the entire project on Azure, see the README in the terraform folder</h3>\n\n          </div>"}, "last_serial": 5601698, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "e4e83364580f9b9b73a741a355406ca6", "sha256": "f196d8520cec961375172d4b9dc19773df207c681542932514fcff7e75d02c04"}, "downloads": -1, "filename": "cropmask-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e4e83364580f9b9b73a741a355406ca6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 291696, "upload_time": "2019-07-29T20:22:55", "upload_time_iso_8601": "2019-07-29T20:22:55.144833Z", "url": "https://files.pythonhosted.org/packages/14/11/93b686fb899fd80c296f9f93f168776564b6858044c0039ff2d5a45b0649/cropmask-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bb73db1052c60d3b3171f8134e61bc2e", "sha256": "e5fdca49aa731a06dfb33a6db42550128f97a9573413f738d0e90dcba821b726"}, "downloads": -1, "filename": "cropmask-0.1.tar.gz", "has_sig": false, "md5_digest": "bb73db1052c60d3b3171f8134e61bc2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25318769, "upload_time": "2019-07-29T20:23:21", "upload_time_iso_8601": "2019-07-29T20:23:21.422278Z", "url": "https://files.pythonhosted.org/packages/7c/e5/ee15c4dbbf374dcd61a52493f2b1dd16cdbd8b630b5898258a6edf05908a/cropmask-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e4e83364580f9b9b73a741a355406ca6", "sha256": "f196d8520cec961375172d4b9dc19773df207c681542932514fcff7e75d02c04"}, "downloads": -1, "filename": "cropmask-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e4e83364580f9b9b73a741a355406ca6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 291696, "upload_time": "2019-07-29T20:22:55", "upload_time_iso_8601": "2019-07-29T20:22:55.144833Z", "url": "https://files.pythonhosted.org/packages/14/11/93b686fb899fd80c296f9f93f168776564b6858044c0039ff2d5a45b0649/cropmask-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bb73db1052c60d3b3171f8134e61bc2e", "sha256": "e5fdca49aa731a06dfb33a6db42550128f97a9573413f738d0e90dcba821b726"}, "downloads": -1, "filename": "cropmask-0.1.tar.gz", "has_sig": false, "md5_digest": "bb73db1052c60d3b3171f8134e61bc2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25318769, "upload_time": "2019-07-29T20:23:21", "upload_time_iso_8601": "2019-07-29T20:23:21.422278Z", "url": "https://files.pythonhosted.org/packages/7c/e5/ee15c4dbbf374dcd61a52493f2b1dd16cdbd8b630b5898258a6edf05908a/cropmask-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:13 2020"}