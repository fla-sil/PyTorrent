{"info": {"author": "Dan Watson", "author_email": "watsond@imsweb.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3"], "description": "# django-graylog\n\nA Django middleware for logging requests to [Graylog](https://www.graylog.org).\n\n\n## Installation\n\n`pip install django-graylog`\n\n\n## Configuration\n\nSimply add `django_graylog.GraylogMiddleware` to your `MIDDLEWARE` setting, after\n`django.middleware.common.CommonMiddleware`. By default, the middleware does nothing unless `GRAYLOG_ENDPOINT` is set\n(see below).\n\n\n### Settings\n\n* `GRAYLOG_ENDPOINT` - An HTTP/HTTPS/UDP endpoint to send GELF logs to. For example, `http://yourserver:12201/gelf` or\n  `udp://yourserver:12201`.\n* `GRAYLOG_NODE` - The middleware sends a `_node` field that defaults to `socket.gethostname`. Set this to override it.\n* `GRAYLOG_LEVEL` - The default `level` to send for log entries. Defaults to 6 (INFO).\n* `GRAYLOG_TIMEOUT` - Timeout for sending log entries to Graylog. Defaults to `0.25` seconds.\n* `GRAYLOG_FIELDS` - Extra fields to send for each request (not prefixed with underscores). Defaults to `{}`.\n\n\n## Advanced Usage\n\nIn addition to the standard logging middleware, `django_graylog` installs an object on your request objects\n(`request.graylog`) that has standard logging methods for recording per-request logs. You may also set custom keys on\nthis object (`request.graylog[\"key\"] = \"value\"`) that will be included in log entries. For example:\n\n```python\ndef homepage(request):\n    request.graylog[\"user\"] = request.user.user_name\n    request.graylog.info(\"Rendered the homepage for {user}\", user=request.user.user_name)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/imsweb/django-graylog", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-graylog", "package_url": "https://pypi.org/project/django-graylog/", "platform": "", "project_url": "https://pypi.org/project/django-graylog/", "project_urls": {"Homepage": "https://github.com/imsweb/django-graylog"}, "release_url": "https://pypi.org/project/django-graylog/0.3.0/", "requires_dist": ["requests", "ua-parser"], "requires_python": "", "summary": "Graylog middleware for Django.", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>django-graylog</h1>\n<p>A Django middleware for logging requests to <a href=\"https://www.graylog.org\" rel=\"nofollow\">Graylog</a>.</p>\n<h2>Installation</h2>\n<p><code>pip install django-graylog</code></p>\n<h2>Configuration</h2>\n<p>Simply add <code>django_graylog.GraylogMiddleware</code> to your <code>MIDDLEWARE</code> setting, after\n<code>django.middleware.common.CommonMiddleware</code>. By default, the middleware does nothing unless <code>GRAYLOG_ENDPOINT</code> is set\n(see below).</p>\n<h3>Settings</h3>\n<ul>\n<li><code>GRAYLOG_ENDPOINT</code> - An HTTP/HTTPS/UDP endpoint to send GELF logs to. For example, <code>http://yourserver:12201/gelf</code> or\n<code>udp://yourserver:12201</code>.</li>\n<li><code>GRAYLOG_NODE</code> - The middleware sends a <code>_node</code> field that defaults to <code>socket.gethostname</code>. Set this to override it.</li>\n<li><code>GRAYLOG_LEVEL</code> - The default <code>level</code> to send for log entries. Defaults to 6 (INFO).</li>\n<li><code>GRAYLOG_TIMEOUT</code> - Timeout for sending log entries to Graylog. Defaults to <code>0.25</code> seconds.</li>\n<li><code>GRAYLOG_FIELDS</code> - Extra fields to send for each request (not prefixed with underscores). Defaults to <code>{}</code>.</li>\n</ul>\n<h2>Advanced Usage</h2>\n<p>In addition to the standard logging middleware, <code>django_graylog</code> installs an object on your request objects\n(<code>request.graylog</code>) that has standard logging methods for recording per-request logs. You may also set custom keys on\nthis object (<code>request.graylog[\"key\"] = \"value\"</code>) that will be included in log entries. For example:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">homepage</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">graylog</span><span class=\"p\">[</span><span class=\"s2\">\"user\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">user_name</span>\n    <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">graylog</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"Rendered the homepage for </span><span class=\"si\">{user}</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">user_name</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6990320, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "c60094239d72c374cd92dfc938041002", "sha256": "e7c5b4990d7a833da88d422c484bfaa06b1b0221ac487d23506f060cc5cb8f85"}, "downloads": -1, "filename": "django_graylog-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c60094239d72c374cd92dfc938041002", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3630, "upload_time": "2020-04-09T18:01:33", "upload_time_iso_8601": "2020-04-09T18:01:33.642865Z", "url": "https://files.pythonhosted.org/packages/5c/6d/3c62a336ec52f85dfd8eb6da3e98f5e3ba9b8d0412813d2299004310b7c4/django_graylog-0.1.0-py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "56de6dace0cb45a2b85c4b71aa1f6f33", "sha256": "1a3a668e226eae2dc1b1a159b0e459de5a4289d6d3e43d6b55565fbf6bc47955"}, "downloads": -1, "filename": "django_graylog-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "56de6dace0cb45a2b85c4b71aa1f6f33", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3826, "upload_time": "2020-04-09T18:19:06", "upload_time_iso_8601": "2020-04-09T18:19:06.890016Z", "url": "https://files.pythonhosted.org/packages/20/b2/5a8b7793cda64d5821385b0fdd5dbbf90173807c68a124cd81f9fafb6807/django_graylog-0.2.0-py3-none-any.whl", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "ee8325a2d4f686ea93fa46602a8eb9b4", "sha256": "edac635404877c4a3a1999fdae3699f3cb0974f8e4d25e149780c0a9e2399403"}, "downloads": -1, "filename": "django_graylog-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ee8325a2d4f686ea93fa46602a8eb9b4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3839, "upload_time": "2020-04-09T18:21:07", "upload_time_iso_8601": "2020-04-09T18:21:07.480464Z", "url": "https://files.pythonhosted.org/packages/d6/74/b4f3efc459211355bfeb66cf6228a166e38648a3c110f68cab84eb544778/django_graylog-0.2.1-py3-none-any.whl", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "be761369eb47f72196938fd7379f1e64", "sha256": "6910b86e93226d6f459014356d90a9e7b61d6007e7d16009bab93ac1d75e1862"}, "downloads": -1, "filename": "django_graylog-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "be761369eb47f72196938fd7379f1e64", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5229, "upload_time": "2020-04-10T02:28:32", "upload_time_iso_8601": "2020-04-10T02:28:32.042412Z", "url": "https://files.pythonhosted.org/packages/f3/ab/bd47fe5aac77daf42d7c9b45d4371810d8a38ce84d6c2066966399723ce7/django_graylog-0.3.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "be761369eb47f72196938fd7379f1e64", "sha256": "6910b86e93226d6f459014356d90a9e7b61d6007e7d16009bab93ac1d75e1862"}, "downloads": -1, "filename": "django_graylog-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "be761369eb47f72196938fd7379f1e64", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5229, "upload_time": "2020-04-10T02:28:32", "upload_time_iso_8601": "2020-04-10T02:28:32.042412Z", "url": "https://files.pythonhosted.org/packages/f3/ab/bd47fe5aac77daf42d7c9b45d4371810d8a38ce84d6c2066966399723ce7/django_graylog-0.3.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:35:47 2020"}