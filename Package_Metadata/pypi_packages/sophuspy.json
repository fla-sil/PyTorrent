{"info": {"author": "Craigstar", "author_email": "work.craigzhang@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# SophusPy\nA python binding using pybind11 for Sophus which is a C++ Lie library.(SO3 && SE3)\n\n## installation:\n```bash\npip install sophuspy\n```\n\n## Examples\n### 1. create SO3 and SE3\n```py\nimport numpy as np\nimport sophus as sp\n\n# 1. default constructor of SO3\nsp.SO3()\n'''\nSO3([[1, 0, 0],\n     [0, 1, 0],\n     [0, 0, 1]])\n'''\n\n# 2. constructor of SO3, accepts numpy and list\nsp.SO3([[1, 0, 0],\n        [0, 1, 0],\n        [0, 0, 1]])\n\n# 3. default constructor of SE3\nsp.SE3()\n'''\nSE3([[1, 0, 0, 0],\n     [0, 1, 0, 0],\n     [0, 0, 1, 0],\n     [0, 0, 0, 1]])\n'''\n\n# 4. constructor of SE3, accepts numpy and list\nsp.SE3(np.eye(4))\n\n# 5. R, t constructor of SE3\nsp.SE3(np.eye(3), np.ones(3)) # R, t\n'''\nSE3([[1, 0, 0, 1],\n     [0, 1, 0, 1],\n     [0, 0, 1, 1],\n     [0, 0, 0, 1]])\n'''\n```\n\n### 2. multiplication\n```py\nR = sp.SO3()\nR1 = sp.SO3([[0, 1, 0],\n             [0, 0, 1],\n             [1, 0, 0]])\n# 1. SO3 * SO3\nR * R1\n'''\nSO3([[0, 1, 0],\n     [0, 0, 1],\n     [1, 0, 0]])\n'''\n\n# 2.\nR1 *= R\n\n\nT = sp.SE3()\nT1 = sp.SE3(R1.matrix(), np.ones(3))\n\n# 3. SE3 * SE3\nT * T1\n'''\nSE3([[0, 1, 0, 1],\n     [0, 0, 1, 1],\n     [1, 0, 0, 1],\n     [0, 0, 0, 1]])\n'''\n\n# 4.\nT1 *= T\n```\n\n### 3. rotate and translate points\n```py\nR = sp.SO3([[0, 1, 0],\n            [0, 0, 1],\n            [1, 0, 0]])\nT = sp.SE3(R.matrix(), np.ones(3))\n\npt = np.array([1, 2, 3])\npts = np.array([[1, 2, 3],\n                [4, 5, 6]])\n\n# 1. single point\nR * pt  # array([2., 3., 1.])\n\n# 2. N points\nR * pts # array([[2., 3., 1.],\n        #        [5., 6., 4.]])\n\n# 3. single point\nT * pt  # array([3., 4., 2.])\n\n# 4. N points\nT * pts # array([[3., 4., 2.],\n        #        [6., 7., 5.]])\n```\n\n### 4. interfaces\n```py\nR = sp.SO3([[0, 1, 0],\n            [0, 0, 1],\n            [1, 0, 0]])\nT = sp.SE3(R.matrix(), np.ones(3))\n\n# 1. \nR.matrix()\n'''\narray([[0., 1., 0.],\n       [0., 0., 1.],\n       [1., 0., 0.]])\n'''\n\n# 2.\nR.log() # array([-1.20919958, -1.20919958, -1.20919958])\n\n# 3.\nR.inverse()\n'''\nSO3([[0, 0, 1],\n     [1, 0, 0],\n     [0, 1, 0]])\n'''\n\n# 4.\nR.copy()\n\n# 5.\nT.matrix()\n'''\narray([[0., 1., 0., 1.],\n       [0., 0., 1., 1.],\n       [1., 0., 0., 1.],\n       [0., 0., 0., 1.]])\n'''\n\n# 6.\nT.matrix3x4()\n'''\narray([[0., 1., 0., 1.],\n       [0., 0., 1., 1.],\n       [1., 0., 0., 1.]])\n'''\n\n# 7.\nT.so3()\n'''\nSO3([[0, 1, 0],\n     [0, 0, 1],\n     [1, 0, 0]])\n'''\n\n# 8.\nT.log() # array([1., 1., 1., -1.20919958, -1.20919958, -1.20919958])\n\n# 9.\nT.inverse()\n'''\nSE3([[ 0,  0,  1, -1],\n     [ 1,  0,  0, -1],\n     [ 0,  1,  0, -1],\n     [ 0,  0,  0,  1]])\n'''\n\n# 10.\nT.copy()\n\n# 11.\nT.translation() # array([1., 1., 1.])\n\n# 12.\nT.rotationMatrix()\n'''\narray([[0., 1., 0.],\n       [0., 0., 1.],\n       [1., 0., 0.]])\n'''\n\n# 13.\nT.setRotationMatrix(np.eye(3))  # set SO3 matrix\n\n# 14.\nT.setTranslation(np.zeros(3))   # set translation\n```\n\n### 5. static methods\n```py\n# 1.\nsp.SO3.hat(np.ones(3))\n'''\narray([[ 0., -1.,  1.],\n       [ 1.,  0., -1.],\n       [-1.,  1.,  0.]])\n'''\n\n# 2.\nsp.SO3.exp(np.ones(3))\n'''\narray([[ 0.22629564, -0.18300792,  0.95671228],\n       [ 0.95671228,  0.22629564, -0.18300792],\n       [-0.18300792,  0.95671228,  0.22629564]])\n'''\n\n# 3.\nsp.SE3.hat(np.ones(6))\n'''\narray([[ 0., -1.,  1.,  1.],\n       [ 1.,  0., -1.,  1.],\n       [-1.,  1.,  0.,  1.],\n       [ 0.,  0.,  0.,  0.]])\n'''\n\n# 4.\nsp.SE3.exp(np.ones(6))\n'''\narray([[ 0.22629564, -0.18300792,  0.95671228,  1.        ],\n       [ 0.95671228,  0.22629564, -0.18300792,  1.        ],\n       [-0.18300792,  0.95671228,  0.22629564,  1.        ],\n       [ 0.        ,  0.        ,  0.        ,  1.        ]])\n'''\n```\n\n### 6. others functions\n```py\n# 1. copy SO3\nsp.copyto(R, R1) # copytoSO3(SO3d &dst, const SO3d &src)\n\n# 2. copy SE3\nsp.copyto(T, T1) # copytoSE3(SE3d &dst, const SE3d &src)\n\n\n# 3.if R is not a strict rotation matrix, normalize it. Uses Eigen3 \n# Eigen::Quaterniond q(R);\n# q.normalized().toRotationMatrix();\nR_matrix = np.array([[1.   , 0.001, 0.   ],\n                     [0.   , 1.   , 0.   ],\n                     [0.   , 0.   , 1.   ]])\n\nsp.to_orthogonal(R_matrix)\n'''\narray([[ 9.99999875e-01,  4.99999969e-04,  0.00000000e+00],\n       [-4.99999969e-04,  9.99999875e-01, -0.00000000e+00],\n       [-0.00000000e+00,  0.00000000e+00,  1.00000000e+00]])\n'''\n\n# 4. invert N poses in a row\npose = T.matrix3x4().ravel()    # array([1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0.])\nsp.invert_poses(pose)           # array([1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0.]) identity matrix returns the same\n\nposes = np.array([[1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0.],\n                  [0., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1.]])\nsp.invert_poses(poses)\n'''\narray([[ 1.,  0.,  0., -0.,  0.,  1.,  0., -0.,  0.,  0.,  1., -0.],\n       [ 0.,  0.,  1., -1.,  1.,  0.,  0., -1.,  0.,  1.,  0., -1.]])\n'''\n\n# 6. transform N points by M poses to form N * M points\npoints = np.array([[1., 2., 3.],\n                   [4., 5., 6.],\n                   [7., 8., 9.]])\nsp.transform_points_by_poses(poses, points)\n'''\narray([[ 1.,  2.,  3.],\n       [ 4.,  5.,  6.],\n       [ 7.,  8.,  9.],\n       [ 3.,  4.,  2.],\n       [ 6.,  7.,  5.],\n       [ 9., 10.,  8.]])\n'''\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/craigstar/SophusPy", "keywords": "Lie Group", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "sophuspy", "package_url": "https://pypi.org/project/sophuspy/", "platform": "all", "project_url": "https://pypi.org/project/sophuspy/", "project_urls": {"Homepage": "https://github.com/craigstar/SophusPy"}, "release_url": "https://pypi.org/project/sophuspy/0.0.8/", "requires_dist": null, "requires_python": "", "summary": "A python binding using pybind11 for Sophus which is a C++ Lie library.(SO3 && SE3)", "version": "0.0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SophusPy</h1>\n<p>A python binding using pybind11 for Sophus which is a C++ Lie library.(SO3 &amp;&amp; SE3)</p>\n<h2>installation:</h2>\n<pre>pip install sophuspy\n</pre>\n<h2>Examples</h2>\n<h3>1. create SO3 and SE3</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sophus</span> <span class=\"k\">as</span> <span class=\"nn\">sp</span>\n\n<span class=\"c1\"># 1. default constructor of SO3</span>\n<span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">SO3</span><span class=\"p\">()</span>\n<span class=\"sd\">'''</span>\n<span class=\"sd\">SO3([[1, 0, 0],</span>\n<span class=\"sd\">     [0, 1, 0],</span>\n<span class=\"sd\">     [0, 0, 1]])</span>\n<span class=\"sd\">'''</span>\n\n<span class=\"c1\"># 2. constructor of SO3, accepts numpy and list</span>\n<span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">SO3</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n        <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n        <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]])</span>\n\n<span class=\"c1\"># 3. default constructor of SE3</span>\n<span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">SE3</span><span class=\"p\">()</span>\n<span class=\"sd\">'''</span>\n<span class=\"sd\">SE3([[1, 0, 0, 0],</span>\n<span class=\"sd\">     [0, 1, 0, 0],</span>\n<span class=\"sd\">     [0, 0, 1, 0],</span>\n<span class=\"sd\">     [0, 0, 0, 1]])</span>\n<span class=\"sd\">'''</span>\n\n<span class=\"c1\"># 4. constructor of SE3, accepts numpy and list</span>\n<span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">SE3</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># 5. R, t constructor of SE3</span>\n<span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">SE3</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span> <span class=\"c1\"># R, t</span>\n<span class=\"sd\">'''</span>\n<span class=\"sd\">SE3([[1, 0, 0, 1],</span>\n<span class=\"sd\">     [0, 1, 0, 1],</span>\n<span class=\"sd\">     [0, 0, 1, 1],</span>\n<span class=\"sd\">     [0, 0, 0, 1]])</span>\n<span class=\"sd\">'''</span>\n</pre>\n<h3>2. multiplication</h3>\n<pre><span class=\"n\">R</span> <span class=\"o\">=</span> <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">SO3</span><span class=\"p\">()</span>\n<span class=\"n\">R1</span> <span class=\"o\">=</span> <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">SO3</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n             <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n             <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"c1\"># 1. SO3 * SO3</span>\n<span class=\"n\">R</span> <span class=\"o\">*</span> <span class=\"n\">R1</span>\n<span class=\"sd\">'''</span>\n<span class=\"sd\">SO3([[0, 1, 0],</span>\n<span class=\"sd\">     [0, 0, 1],</span>\n<span class=\"sd\">     [1, 0, 0]])</span>\n<span class=\"sd\">'''</span>\n\n<span class=\"c1\"># 2.</span>\n<span class=\"n\">R1</span> <span class=\"o\">*=</span> <span class=\"n\">R</span>\n\n\n<span class=\"n\">T</span> <span class=\"o\">=</span> <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">SE3</span><span class=\"p\">()</span>\n<span class=\"n\">T1</span> <span class=\"o\">=</span> <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">SE3</span><span class=\"p\">(</span><span class=\"n\">R1</span><span class=\"o\">.</span><span class=\"n\">matrix</span><span class=\"p\">(),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># 3. SE3 * SE3</span>\n<span class=\"n\">T</span> <span class=\"o\">*</span> <span class=\"n\">T1</span>\n<span class=\"sd\">'''</span>\n<span class=\"sd\">SE3([[0, 1, 0, 1],</span>\n<span class=\"sd\">     [0, 0, 1, 1],</span>\n<span class=\"sd\">     [1, 0, 0, 1],</span>\n<span class=\"sd\">     [0, 0, 0, 1]])</span>\n<span class=\"sd\">'''</span>\n\n<span class=\"c1\"># 4.</span>\n<span class=\"n\">T1</span> <span class=\"o\">*=</span> <span class=\"n\">T</span>\n</pre>\n<h3>3. rotate and translate points</h3>\n<pre><span class=\"n\">R</span> <span class=\"o\">=</span> <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">SO3</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n            <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n            <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"n\">T</span> <span class=\"o\">=</span> <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">SE3</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"o\">.</span><span class=\"n\">matrix</span><span class=\"p\">(),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n\n<span class=\"n\">pt</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"n\">pts</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span>\n                <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]])</span>\n\n<span class=\"c1\"># 1. single point</span>\n<span class=\"n\">R</span> <span class=\"o\">*</span> <span class=\"n\">pt</span>  <span class=\"c1\"># array([2., 3., 1.])</span>\n\n<span class=\"c1\"># 2. N points</span>\n<span class=\"n\">R</span> <span class=\"o\">*</span> <span class=\"n\">pts</span> <span class=\"c1\"># array([[2., 3., 1.],</span>\n        <span class=\"c1\">#        [5., 6., 4.]])</span>\n\n<span class=\"c1\"># 3. single point</span>\n<span class=\"n\">T</span> <span class=\"o\">*</span> <span class=\"n\">pt</span>  <span class=\"c1\"># array([3., 4., 2.])</span>\n\n<span class=\"c1\"># 4. N points</span>\n<span class=\"n\">T</span> <span class=\"o\">*</span> <span class=\"n\">pts</span> <span class=\"c1\"># array([[3., 4., 2.],</span>\n        <span class=\"c1\">#        [6., 7., 5.]])</span>\n</pre>\n<h3>4. interfaces</h3>\n<pre><span class=\"n\">R</span> <span class=\"o\">=</span> <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">SO3</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n            <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n            <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"n\">T</span> <span class=\"o\">=</span> <span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">SE3</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"o\">.</span><span class=\"n\">matrix</span><span class=\"p\">(),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># 1. </span>\n<span class=\"n\">R</span><span class=\"o\">.</span><span class=\"n\">matrix</span><span class=\"p\">()</span>\n<span class=\"sd\">'''</span>\n<span class=\"sd\">array([[0., 1., 0.],</span>\n<span class=\"sd\">       [0., 0., 1.],</span>\n<span class=\"sd\">       [1., 0., 0.]])</span>\n<span class=\"sd\">'''</span>\n\n<span class=\"c1\"># 2.</span>\n<span class=\"n\">R</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">()</span> <span class=\"c1\"># array([-1.20919958, -1.20919958, -1.20919958])</span>\n\n<span class=\"c1\"># 3.</span>\n<span class=\"n\">R</span><span class=\"o\">.</span><span class=\"n\">inverse</span><span class=\"p\">()</span>\n<span class=\"sd\">'''</span>\n<span class=\"sd\">SO3([[0, 0, 1],</span>\n<span class=\"sd\">     [1, 0, 0],</span>\n<span class=\"sd\">     [0, 1, 0]])</span>\n<span class=\"sd\">'''</span>\n\n<span class=\"c1\"># 4.</span>\n<span class=\"n\">R</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># 5.</span>\n<span class=\"n\">T</span><span class=\"o\">.</span><span class=\"n\">matrix</span><span class=\"p\">()</span>\n<span class=\"sd\">'''</span>\n<span class=\"sd\">array([[0., 1., 0., 1.],</span>\n<span class=\"sd\">       [0., 0., 1., 1.],</span>\n<span class=\"sd\">       [1., 0., 0., 1.],</span>\n<span class=\"sd\">       [0., 0., 0., 1.]])</span>\n<span class=\"sd\">'''</span>\n\n<span class=\"c1\"># 6.</span>\n<span class=\"n\">T</span><span class=\"o\">.</span><span class=\"n\">matrix3x4</span><span class=\"p\">()</span>\n<span class=\"sd\">'''</span>\n<span class=\"sd\">array([[0., 1., 0., 1.],</span>\n<span class=\"sd\">       [0., 0., 1., 1.],</span>\n<span class=\"sd\">       [1., 0., 0., 1.]])</span>\n<span class=\"sd\">'''</span>\n\n<span class=\"c1\"># 7.</span>\n<span class=\"n\">T</span><span class=\"o\">.</span><span class=\"n\">so3</span><span class=\"p\">()</span>\n<span class=\"sd\">'''</span>\n<span class=\"sd\">SO3([[0, 1, 0],</span>\n<span class=\"sd\">     [0, 0, 1],</span>\n<span class=\"sd\">     [1, 0, 0]])</span>\n<span class=\"sd\">'''</span>\n\n<span class=\"c1\"># 8.</span>\n<span class=\"n\">T</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">()</span> <span class=\"c1\"># array([1., 1., 1., -1.20919958, -1.20919958, -1.20919958])</span>\n\n<span class=\"c1\"># 9.</span>\n<span class=\"n\">T</span><span class=\"o\">.</span><span class=\"n\">inverse</span><span class=\"p\">()</span>\n<span class=\"sd\">'''</span>\n<span class=\"sd\">SE3([[ 0,  0,  1, -1],</span>\n<span class=\"sd\">     [ 1,  0,  0, -1],</span>\n<span class=\"sd\">     [ 0,  1,  0, -1],</span>\n<span class=\"sd\">     [ 0,  0,  0,  1]])</span>\n<span class=\"sd\">'''</span>\n\n<span class=\"c1\"># 10.</span>\n<span class=\"n\">T</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># 11.</span>\n<span class=\"n\">T</span><span class=\"o\">.</span><span class=\"n\">translation</span><span class=\"p\">()</span> <span class=\"c1\"># array([1., 1., 1.])</span>\n\n<span class=\"c1\"># 12.</span>\n<span class=\"n\">T</span><span class=\"o\">.</span><span class=\"n\">rotationMatrix</span><span class=\"p\">()</span>\n<span class=\"sd\">'''</span>\n<span class=\"sd\">array([[0., 1., 0.],</span>\n<span class=\"sd\">       [0., 0., 1.],</span>\n<span class=\"sd\">       [1., 0., 0.]])</span>\n<span class=\"sd\">'''</span>\n\n<span class=\"c1\"># 13.</span>\n<span class=\"n\">T</span><span class=\"o\">.</span><span class=\"n\">setRotationMatrix</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span>  <span class=\"c1\"># set SO3 matrix</span>\n\n<span class=\"c1\"># 14.</span>\n<span class=\"n\">T</span><span class=\"o\">.</span><span class=\"n\">setTranslation</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span>   <span class=\"c1\"># set translation</span>\n</pre>\n<h3>5. static methods</h3>\n<pre><span class=\"c1\"># 1.</span>\n<span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">SO3</span><span class=\"o\">.</span><span class=\"n\">hat</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"sd\">'''</span>\n<span class=\"sd\">array([[ 0., -1.,  1.],</span>\n<span class=\"sd\">       [ 1.,  0., -1.],</span>\n<span class=\"sd\">       [-1.,  1.,  0.]])</span>\n<span class=\"sd\">'''</span>\n\n<span class=\"c1\"># 2.</span>\n<span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">SO3</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"sd\">'''</span>\n<span class=\"sd\">array([[ 0.22629564, -0.18300792,  0.95671228],</span>\n<span class=\"sd\">       [ 0.95671228,  0.22629564, -0.18300792],</span>\n<span class=\"sd\">       [-0.18300792,  0.95671228,  0.22629564]])</span>\n<span class=\"sd\">'''</span>\n\n<span class=\"c1\"># 3.</span>\n<span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">SE3</span><span class=\"o\">.</span><span class=\"n\">hat</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">))</span>\n<span class=\"sd\">'''</span>\n<span class=\"sd\">array([[ 0., -1.,  1.,  1.],</span>\n<span class=\"sd\">       [ 1.,  0., -1.,  1.],</span>\n<span class=\"sd\">       [-1.,  1.,  0.,  1.],</span>\n<span class=\"sd\">       [ 0.,  0.,  0.,  0.]])</span>\n<span class=\"sd\">'''</span>\n\n<span class=\"c1\"># 4.</span>\n<span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">SE3</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">))</span>\n<span class=\"sd\">'''</span>\n<span class=\"sd\">array([[ 0.22629564, -0.18300792,  0.95671228,  1.        ],</span>\n<span class=\"sd\">       [ 0.95671228,  0.22629564, -0.18300792,  1.        ],</span>\n<span class=\"sd\">       [-0.18300792,  0.95671228,  0.22629564,  1.        ],</span>\n<span class=\"sd\">       [ 0.        ,  0.        ,  0.        ,  1.        ]])</span>\n<span class=\"sd\">'''</span>\n</pre>\n<h3>6. others functions</h3>\n<pre><span class=\"c1\"># 1. copy SO3</span>\n<span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">copyto</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">,</span> <span class=\"n\">R1</span><span class=\"p\">)</span> <span class=\"c1\"># copytoSO3(SO3d &amp;dst, const SO3d &amp;src)</span>\n\n<span class=\"c1\"># 2. copy SE3</span>\n<span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">copyto</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">T1</span><span class=\"p\">)</span> <span class=\"c1\"># copytoSE3(SE3d &amp;dst, const SE3d &amp;src)</span>\n\n\n<span class=\"c1\"># 3.if R is not a strict rotation matrix, normalize it. Uses Eigen3 </span>\n<span class=\"c1\"># Eigen::Quaterniond q(R);</span>\n<span class=\"c1\"># q.normalized().toRotationMatrix();</span>\n<span class=\"n\">R_matrix</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mf\">1.</span>   <span class=\"p\">,</span> <span class=\"mf\">0.001</span><span class=\"p\">,</span> <span class=\"mf\">0.</span>   <span class=\"p\">],</span>\n                     <span class=\"p\">[</span><span class=\"mf\">0.</span>   <span class=\"p\">,</span> <span class=\"mf\">1.</span>   <span class=\"p\">,</span> <span class=\"mf\">0.</span>   <span class=\"p\">],</span>\n                     <span class=\"p\">[</span><span class=\"mf\">0.</span>   <span class=\"p\">,</span> <span class=\"mf\">0.</span>   <span class=\"p\">,</span> <span class=\"mf\">1.</span>   <span class=\"p\">]])</span>\n\n<span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">to_orthogonal</span><span class=\"p\">(</span><span class=\"n\">R_matrix</span><span class=\"p\">)</span>\n<span class=\"sd\">'''</span>\n<span class=\"sd\">array([[ 9.99999875e-01,  4.99999969e-04,  0.00000000e+00],</span>\n<span class=\"sd\">       [-4.99999969e-04,  9.99999875e-01, -0.00000000e+00],</span>\n<span class=\"sd\">       [-0.00000000e+00,  0.00000000e+00,  1.00000000e+00]])</span>\n<span class=\"sd\">'''</span>\n\n<span class=\"c1\"># 4. invert N poses in a row</span>\n<span class=\"n\">pose</span> <span class=\"o\">=</span> <span class=\"n\">T</span><span class=\"o\">.</span><span class=\"n\">matrix3x4</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">()</span>    <span class=\"c1\"># array([1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0.])</span>\n<span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">invert_poses</span><span class=\"p\">(</span><span class=\"n\">pose</span><span class=\"p\">)</span>           <span class=\"c1\"># array([1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0.]) identity matrix returns the same</span>\n\n<span class=\"n\">poses</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">],</span>\n                  <span class=\"p\">[</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">]])</span>\n<span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">invert_poses</span><span class=\"p\">(</span><span class=\"n\">poses</span><span class=\"p\">)</span>\n<span class=\"sd\">'''</span>\n<span class=\"sd\">array([[ 1.,  0.,  0., -0.,  0.,  1.,  0., -0.,  0.,  0.,  1., -0.],</span>\n<span class=\"sd\">       [ 0.,  0.,  1., -1.,  1.,  0.,  0., -1.,  0.,  1.,  0., -1.]])</span>\n<span class=\"sd\">'''</span>\n\n<span class=\"c1\"># 6. transform N points by M poses to form N * M points</span>\n<span class=\"n\">points</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">2.</span><span class=\"p\">,</span> <span class=\"mf\">3.</span><span class=\"p\">],</span>\n                   <span class=\"p\">[</span><span class=\"mf\">4.</span><span class=\"p\">,</span> <span class=\"mf\">5.</span><span class=\"p\">,</span> <span class=\"mf\">6.</span><span class=\"p\">],</span>\n                   <span class=\"p\">[</span><span class=\"mf\">7.</span><span class=\"p\">,</span> <span class=\"mf\">8.</span><span class=\"p\">,</span> <span class=\"mf\">9.</span><span class=\"p\">]])</span>\n<span class=\"n\">sp</span><span class=\"o\">.</span><span class=\"n\">transform_points_by_poses</span><span class=\"p\">(</span><span class=\"n\">poses</span><span class=\"p\">,</span> <span class=\"n\">points</span><span class=\"p\">)</span>\n<span class=\"sd\">'''</span>\n<span class=\"sd\">array([[ 1.,  2.,  3.],</span>\n<span class=\"sd\">       [ 4.,  5.,  6.],</span>\n<span class=\"sd\">       [ 7.,  8.,  9.],</span>\n<span class=\"sd\">       [ 3.,  4.,  2.],</span>\n<span class=\"sd\">       [ 6.,  7.,  5.],</span>\n<span class=\"sd\">       [ 9., 10.,  8.]])</span>\n<span class=\"sd\">'''</span>\n</pre>\n\n          </div>"}, "last_serial": 5465630, "releases": {"0.0.8": [{"comment_text": "", "digests": {"md5": "9dc3ab98b847098d8d91972a32d45dd3", "sha256": "830d2c95d5500dedb738ed8ed4677aa38b5a3fcb09cd81061847828e09f429b4"}, "downloads": -1, "filename": "sophuspy-0.0.8.tar.gz", "has_sig": false, "md5_digest": "9dc3ab98b847098d8d91972a32d45dd3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1163054, "upload_time": "2019-06-29T15:02:38", "upload_time_iso_8601": "2019-06-29T15:02:38.850374Z", "url": "https://files.pythonhosted.org/packages/dc/a1/afa83127d473c3d5eb0633b137154f80c9a7759fbadabc02af1eac453865/sophuspy-0.0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9dc3ab98b847098d8d91972a32d45dd3", "sha256": "830d2c95d5500dedb738ed8ed4677aa38b5a3fcb09cd81061847828e09f429b4"}, "downloads": -1, "filename": "sophuspy-0.0.8.tar.gz", "has_sig": false, "md5_digest": "9dc3ab98b847098d8d91972a32d45dd3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1163054, "upload_time": "2019-06-29T15:02:38", "upload_time_iso_8601": "2019-06-29T15:02:38.850374Z", "url": "https://files.pythonhosted.org/packages/dc/a1/afa83127d473c3d5eb0633b137154f80c9a7759fbadabc02af1eac453865/sophuspy-0.0.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:33 2020"}