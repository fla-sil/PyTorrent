{"info": {"author": "ArangoDB", "author_email": "joerg@arangodb.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "# ArangoML Pipeline\n\nArangoML Pipeline is a common and extensible Metadata Layer for Machine Learning Pipelines which allows Data Scientists and [DataOps](https://en.wikipedia.org/wiki/DataOps) to manage all information related to their ML pipeline in one place.\n\n## Introduction\nWhen productizing Machine Learning Pipelines (e.g., [TensorFlow Extended](https://www.tensorflow.org/tfx/guide) or [Kubeflow](https://www.kubeflow.org/))\nthe capture (and access to) of metadata across the pipeline is a vital. Typically, each of the  components of such ML pipeline produces/requires Metadata, for example:\n* Data storage: size, location, creation date, checksum, ...\n* Feature Store (processed dataset): transformation, version, base datasets ...\n* Model Training: training/validation performance, training duration, ...\n* Model Serving: model linage, serving performance, ...\n\nInstead of each component storing its own metadata, a common Metadata Layer allows for queries across the entire pipeline and more efficient management.\n[**ArangoDB**](https://www.arangodb.com) being a multi model database supporting both efficient document and graph data models within a single database engine is a great fit for such kind of common metadata layer for the following reasons:\n* The metadata produced by each component is typically unstructured (e.g., TensorFlow's training metadata is different from PyTorch's metadata) and hence a great fit for document databases\n* The relationship between the different entities (i.e., metadata) can be neatly expressed as graphs (e.g., this model has been trained by *run_34* on *dataset_y*)\n* Querying the metadata can be easily expressed as a graph traversal (e.g., all models which have been derived from *dataset_y*)\n\n## Use Cases\nArangoML Pipeline benefits many different scenarios including:\n* Capture of Lineage Information (e.g., Which dataset influences which Model?)\n* Capture of Audit Information (e.g, A given model was training two month ago with the following training/validation performance)\n* Reproducible Model Training\n* Model Serving Policy (e.g., Which model should be deployed in production based on training statistics)\n* Extension of existing ML pipelines through simple python/HTTP API\n\n\n## Overview\nArangopipe is a ArangoDB API component for tracing meta-data about machine learning projects. Tracking details of machine learning experiments, like hyper-parameters, or details of optimization techniques, etc., are of explicit concern to data scientists. This need is well served by most machine learning frameworks that are currently around. For example,  [**Tensorboard**](https://www.tensorflow.org/guide/summaries_and_tensorboard), can be useful for this purpose for data scientists using Tensorflow. Analyzing modeling results in the aggregate, rather than focusing on a small set of experiments is equally important to data scientists. For example, data scientists may be interested in:\n\n1.  Finding out the range of modeling techniques that have been used for a particular modeling task.\n2.  Finding out the range of feature engineering techniques that have been used for a particular modeling task.\n3.  What feature selection or feature extraction methods are useful for a particular modeling task?\n4.  Did adding a particular attribute to a dataset result in consistent performance gains?\n5.  How many datasets have been used for a particular modeling task last year?\n\nMachine learning tools and libraries focus on solving machine learning problems and are not explicitly concerned with tracking information to answer questions such as the above. This is the need  **Arangopipe**  fulfills.  **Arangopipe**  tracks the following data from machine learning experiments:\n\n1.  Data for Model Building: Data that goes into the model building activity is tracked. This includes meta-data about the model, the hyper-parameters associated with the model, the featureset used for model building and the dataset used to generate the featureset.\n2.  Data from Model Building: Data from the model building activity is tracked. This includes data about the model parameters (post optimization) and optimization parameters (learning rates, batch-sizes, optimization technique etc.)\n3.  Data from Model Performance: Data about the model performance is tracked. This includes performance observed in development and deployed model performance.\n\n##  Usage\nArangopipe has two components:\n1. **Arangopipe**\n2. **ArangopipeAdmin**\n\n**ArangopipeAdmin** is an administrative component. It is meant to provision projects and users into **Arangopipe**. When projects and users have been provisioned in **Arangopipe**, they can start using **Arangopipe** to track data from their machine learning experiments. To begin with, data scientists can *register* entities like datasets, featuresets and model meta-data with **Arangopipe**. Registration yields an identifier for the entity that they can use to reference the entity in their subsequent interaction with **Arangopipe**. Information provided during registration includes a component name that they can use to *lookup* the identifier for the entity using the lookup API.\nWhen data scientists have refined their models to a point where they are ready to track it and log its performance during model development, they can do so with a simple API call. If the model is deployment ready, they can indicate this by adding a deployment tag as part of the data provided to the model tracking API.  When models have been deployed, **Arangopipe** administrators provision a *deployment* entity in **Arangopipe** to start tracking the serving performance of the deployed model. As serving performance becomes available, it can be recorded against this deployed entity.\n\n## Getting Started\n\nTo facilitate an easy start, docker containers for *torch* and *tensorflow* are provided. These containers have all components of the **ArangoML Pipeline** (Arangopipe, ArangoDB and the Arangopipe user interface). To get started:\n\n### Prerequisites\n* Install [_docker_](https://docs.docker.com/install/)\n\n\n## Start the container of your choice:\n\n - [Torch](#torch)\n - [Tensorflow](#tensorflow)\n\n\n### Torch\n\n1. Start the container:\n\n    ` docker run -p 6529:8529 -p 8888:8888 -p 3000:3000 -it arangopipe/ap_torch`\n\n\n\n2. Running an example in the *torch* container: The _pytorch_ example is a python script. To run it:\n    * Run the `docker ps` command to get the `CONTAINER ID` of the _pytorch_ container.\n    * Run the command ` docker exec -it [ CONTAINER ID ] /bin/bash ` where  `CONTAINER ID` is obtained from the previous step.\n\nChange directory to the `examples/pytorch` directory. The *torch* container provides an example of a linear regression model that uses **Arangopipe** to log experiment metadata. The experiment meta data includes information about the dataset, featureset and optimization settings used to run the *pytorch* model. To run the example, launch an `ipython` shell. In the shell, execute the following:\n    1. `from ch_torch_linear_regression_driver import run_driver`\n    2. `run_driver()`\n\nThe details are shown in the figure below.\n\n<img src=\"assets/run_torch_driver.png\" height=\"400\">\n\n3. Execute this step after the model development step above has completed. Point your browser http:localhost:3000. Login to the Arangopipe user interface with username  `root` and password  `open sesame`. Select `Models` in the `Search Metadata` content pane. You should see the model you developed in the previous step. The details are shown in the figure below.\n\n\n    <img src=\"assets/pytorch_model_FE.png\" height=\"400\">\n\n4. Explore Arangopipe [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/arangoml/arangopipe/0.1?filepath=arangopipe%2Farangopipe_examples_torch.ipynb). Examples that show **Arangopipe** can be used with *hyperopt*, *sklearn* and *mlfow* are provided. To get the details of where these examples are located in the container, use the binder link above. To access the notebook examples provided with the docker container, point your browser to [http://localhost:8888](http://localhost:8888) to get to a **Jupyter** notebook. The default notebook password is _root_\n\n5. Point your browser to [http://localhost:6529](http://localhost:6529) to get to the **ArangoDB** web user interface. The `root` password is `open sesame`.\n\n### Tensorflow\n\n1. Start the container:\n\n    ` docker run -p 6529:8529 -p 8888:8888 -p 3000:3000 -it arangopipe/ap_tensor_flow`\n\n\n2. Running an example in the *tensorflow* container: Run the tensorflow container. Point your browser to http://localhost:8888. You will be prompted for a password. Use `root` for the password. In the file browser that is presented in the Jupyter notebook, open the `examples` directory and then open the  `TFX` directory. Open the notebook `tfx_metadata_integration.ipynb`. Read the description of the notebook. This notebook provides an example of how **Arangopipe** can be used with *tensorflow*. The utility of the multi-model feature of **ArangoDB** is leveraged in this example. [Tensorflow Data Validation](https://www.tensorflow.org/tfx/data_validation/get_started) is used to generate the summary statistics for a dataset. This *tensorflow* artifact can be stored in **Arangopipe** and reused as needed. This capability is illustrated in this notebook.\n\n3.  Execute this step after you have executed all the cells in the notebook discussed in the previous step. Point your browser to http://localhost:3000. Login to the Arangopipe user interface with username  root and password  `open sesame`. Select `Featursets` in the `Search Metadata` content pane. You should see the featureset logged with **Arangopipe** resulting from executing the notebook discussed in the previous step.\n\n    <img src=\"assets/tensorflow_example.png\" height=\"400\">\n\n4. Explore Arangopipe [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/arangoml/arangopipe/0.1?filepath=arangopipe%2Farangopipe_examples.ipynb). Examples that show **Arangopipe** can be used with *hyperopt*, *sklearn* and *mlfow* are provided. To get the details of where these examples are located in the container, use the binder link above. To access the notebook examples provided with the docker container, point your browser to:  `http://localhost:8888` to get to a **Jupyter** notebook. The default notebook password is _root_\n\n5. Point your browser to: `http://localhost:6529` to get to the **ArangoDB** web user interface. The `root` password is `open sesame`.\n\n\n\n## Arangopipe Graph Model\n![Graph representation of Arangopipe entities](assets/arangopipe_schema.png)\n\n### Data Dictionary\n\nArangopipe represents metadata as a graph. The nodes of the graph above are the principal elements about which metadata is gathered. These elements are high level abstractions that are encountered in any machine learning pipeline. A brief description of each of these elements is provided. Elements of the data model are either nodes or edges.\n\n1. Dataset: This node captures metadata about datasets. Examples of attributes could be the storage location (URL), source system, creation date, summary statistics etc. .\n2. Featureset: This node captures metadata about the features in the dataset. A featureset is obtained by applying a transformation to a dataset.\n3. (Edge) Featureset - Dataset: Captures the dataset the associated featureset was generated from. Details of the transformation, for example the jupyter notebook that performs the transformation could be captured as part of the edge data.\n4. Run: Captures metadata about the execution of a pipeline, for example the start time and the end time, status of execution (errors encountered) etc. .\n5. Project: Captures metadata about the project associated with a pipeline. This is created with **ArangopipeAdmin**\n6. Model: Captures metadata about the model. JSON serialized representations of model metadata can be stored if desiered. For example, if the model is used for hyper-parameter optimization. The hyper-parameter space can be stored in JSON serialized format.\n7. DevPerf: Captures metadata about the performance metrics gathered during execution of the pipeline. The metric captured depends on the purpose of the model. It could be the root mean square error (RMSE) for a regression model or the best performing model and associated hyper-parameters for a hyper-parameter optimization model.\n8. Deployment: Captures metadata about a particular production deployment. This could include details like the scheduled date, current status (scheduled, active, archived )etc.\n9. ServingPerf: Captures the serving performance for a particular period. This is associated with a deployment and could include a collection of metrics, for example model performance metrics, average response time etc. .\n10. (Edge) Deployment - Model: Captures the model associated with a deployment\n11. (Edge) Deployment - SevPerf: Captures the serving performance associated with a deployment.\n12. (Edge) Run - Model: Captures the model associated with a pipeline execution\n13. (Edge) Run - DevPerf: Captures the model performance observed in development\n14. (Edge) Run - Dataset: Captures the dataset associated with a pipeline execution\n15. (Edge) Run - Featureset: Captures the featureset associated with a pipeline execution.\n16. Model Params: This captures the hyper-parameters and the parameters associated with model development.\n17. (Edge) Run - Model Params: This captures the model parameters obtained with a pipeline execution.\n18. (Edge) Deployment - Featureset: This captures the featureset associated with a deployment.\n19. (Edge) Deployment - ModelParams: This captures the model parameters used with a deployment.\n20. (Edge) Project - Models: This captures the models associated with a project.\n\nThe data associated with the nodes and edges of the graph are stored as documents. The documents do not have a fixed structure and represent data using key-value pairs. This offers flexibility and permits users to decide the metadata elements that they would like to store. This also permits users to store metadata from any machine learning tech stack in Arangopipe.\n\n## Installing Arangopipe API\nIf you would like to use **Arangopipe** with your pipelines, you would need to do the following:\n\n1. `pip install sklearn`\n\n2. `pip install python-arango`\n\n\n3. `pip install arangopipe`\n\n\n## Arangopipe User Interface Application\nMachine learning pipelines can use the **Arangopipe** API to update the **Arangopipe** database as they progress through their execution. Data scientists and ops personel, can use the **Arangopipe** UI to obtain information about deployed pipelines, trace the lineage of a deployment or track the details of a deployed asset (models, featuresets etc.). The **Arangopipe** UI offers a summary view of assets for each project tracked by **Arangopipe**. The summary view (content under \"ML Projects Summary\") is presented in the left navigation bar of the landing page of the user interface application. The administration features (associated with the \"User\", \"Deployment\" and \"Project\" links in the left navigation pane) are not available at this time and will be available shortly. The search feature, which can be used to track assets and view lineage information, is available at this time. The search feature can be accessed from the right hand pane of the landing page. This is shown below.\n\n\n<img src=\"assets/search_deployments.png\" height=\"600\">\n<figcaption> Figure 1: Arangopipe User Interface Application</figcaption>\n\n\n### Searching for an Asset\nAssets (Featuresets, Datasets and Models) can be searched by the value of a property, for example the name, tag or deployment tag. An example of searching for a dataset by name is shown in the figure below.\n\n<img src=\"assets/search_datasets.png\" height=\"600\">\n<figcaption> Figure 2: Search for a dataset by name</figcaption>\n\n### Tracing Asset Lineage\nTo trace the lineage of a deployment, the user can make use of the search feature. Searching for deployments with no property value filter provides a list of all deployments for the project (see Figure 1).  After having selected the deployment of interest, if we are interested in a particualr asset, for example, the model associated with the deployment. We can search for models with the particular deployment tag. This is shown in the figure below.\n\n <img src=\"assets/model_for_deployment.png\" height=\"600\">\n<figcaption> Figure 3: Search the model for a deployment</figcaption>\n\nIf we are interested in the complete lineage, the graph representation of the lineage can be generated by clicking on the blue button with the graph icon (in the graph column of Figure 3). The graph is generated with the `graphviz` tool. This is illustrated in the figure below. You will have to click on the `Generate` button to generate the graph representation of the lineage.\n\n <img src=\"assets/graph_representation.png\" height=\"600\">\n<figcaption> Figure 4: Search the model for a deployment</figcaption>\n\nIn Figure 4, the dataset, featureset, model, model parameters, model performance in development, and most recent serving performance, is shown for the deployment of interest.\n\n### Adhoc Queries\nTo execute adhoc queries against **Arangopipe** use the *Query* feature from the left navigation bar. The details of using the query feature to submit a query to **Arangopipe** is shown in the figure below.\n <img src=\"assets/adhoc_query.png\" height=\"600\">\n<figcaption> Figure 4: Submit an adhoc query </figcaption>\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/arangoml/arangopipe", "keywords": "", "license": "Apache", "maintainer": "", "maintainer_email": "", "name": "arangopipe", "package_url": "https://pypi.org/project/arangopipe/", "platform": "", "project_url": "https://pypi.org/project/arangopipe/", "project_urls": {"Homepage": "https://github.com/arangoml/arangopipe"}, "release_url": "https://pypi.org/project/arangopipe/0.0.47.4.2/", "requires_dist": null, "requires_python": "", "summary": "package for machine learning meta-data management and analysis", "version": "0.0.47.4.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ArangoML Pipeline</h1>\n<p>ArangoML Pipeline is a common and extensible Metadata Layer for Machine Learning Pipelines which allows Data Scientists and <a href=\"https://en.wikipedia.org/wiki/DataOps\" rel=\"nofollow\">DataOps</a> to manage all information related to their ML pipeline in one place.</p>\n<h2>Introduction</h2>\n<p>When productizing Machine Learning Pipelines (e.g., <a href=\"https://www.tensorflow.org/tfx/guide\" rel=\"nofollow\">TensorFlow Extended</a> or <a href=\"https://www.kubeflow.org/\" rel=\"nofollow\">Kubeflow</a>)\nthe capture (and access to) of metadata across the pipeline is a vital. Typically, each of the  components of such ML pipeline produces/requires Metadata, for example:</p>\n<ul>\n<li>Data storage: size, location, creation date, checksum, ...</li>\n<li>Feature Store (processed dataset): transformation, version, base datasets ...</li>\n<li>Model Training: training/validation performance, training duration, ...</li>\n<li>Model Serving: model linage, serving performance, ...</li>\n</ul>\n<p>Instead of each component storing its own metadata, a common Metadata Layer allows for queries across the entire pipeline and more efficient management.\n<a href=\"https://www.arangodb.com\" rel=\"nofollow\"><strong>ArangoDB</strong></a> being a multi model database supporting both efficient document and graph data models within a single database engine is a great fit for such kind of common metadata layer for the following reasons:</p>\n<ul>\n<li>The metadata produced by each component is typically unstructured (e.g., TensorFlow's training metadata is different from PyTorch's metadata) and hence a great fit for document databases</li>\n<li>The relationship between the different entities (i.e., metadata) can be neatly expressed as graphs (e.g., this model has been trained by <em>run_34</em> on <em>dataset_y</em>)</li>\n<li>Querying the metadata can be easily expressed as a graph traversal (e.g., all models which have been derived from <em>dataset_y</em>)</li>\n</ul>\n<h2>Use Cases</h2>\n<p>ArangoML Pipeline benefits many different scenarios including:</p>\n<ul>\n<li>Capture of Lineage Information (e.g., Which dataset influences which Model?)</li>\n<li>Capture of Audit Information (e.g, A given model was training two month ago with the following training/validation performance)</li>\n<li>Reproducible Model Training</li>\n<li>Model Serving Policy (e.g., Which model should be deployed in production based on training statistics)</li>\n<li>Extension of existing ML pipelines through simple python/HTTP API</li>\n</ul>\n<h2>Overview</h2>\n<p>Arangopipe is a ArangoDB API component for tracing meta-data about machine learning projects. Tracking details of machine learning experiments, like hyper-parameters, or details of optimization techniques, etc., are of explicit concern to data scientists. This need is well served by most machine learning frameworks that are currently around. For example,  <a href=\"https://www.tensorflow.org/guide/summaries_and_tensorboard\" rel=\"nofollow\"><strong>Tensorboard</strong></a>, can be useful for this purpose for data scientists using Tensorflow. Analyzing modeling results in the aggregate, rather than focusing on a small set of experiments is equally important to data scientists. For example, data scientists may be interested in:</p>\n<ol>\n<li>Finding out the range of modeling techniques that have been used for a particular modeling task.</li>\n<li>Finding out the range of feature engineering techniques that have been used for a particular modeling task.</li>\n<li>What feature selection or feature extraction methods are useful for a particular modeling task?</li>\n<li>Did adding a particular attribute to a dataset result in consistent performance gains?</li>\n<li>How many datasets have been used for a particular modeling task last year?</li>\n</ol>\n<p>Machine learning tools and libraries focus on solving machine learning problems and are not explicitly concerned with tracking information to answer questions such as the above. This is the need  <strong>Arangopipe</strong>  fulfills.  <strong>Arangopipe</strong>  tracks the following data from machine learning experiments:</p>\n<ol>\n<li>Data for Model Building: Data that goes into the model building activity is tracked. This includes meta-data about the model, the hyper-parameters associated with the model, the featureset used for model building and the dataset used to generate the featureset.</li>\n<li>Data from Model Building: Data from the model building activity is tracked. This includes data about the model parameters (post optimization) and optimization parameters (learning rates, batch-sizes, optimization technique etc.)</li>\n<li>Data from Model Performance: Data about the model performance is tracked. This includes performance observed in development and deployed model performance.</li>\n</ol>\n<h2>Usage</h2>\n<p>Arangopipe has two components:</p>\n<ol>\n<li><strong>Arangopipe</strong></li>\n<li><strong>ArangopipeAdmin</strong></li>\n</ol>\n<p><strong>ArangopipeAdmin</strong> is an administrative component. It is meant to provision projects and users into <strong>Arangopipe</strong>. When projects and users have been provisioned in <strong>Arangopipe</strong>, they can start using <strong>Arangopipe</strong> to track data from their machine learning experiments. To begin with, data scientists can <em>register</em> entities like datasets, featuresets and model meta-data with <strong>Arangopipe</strong>. Registration yields an identifier for the entity that they can use to reference the entity in their subsequent interaction with <strong>Arangopipe</strong>. Information provided during registration includes a component name that they can use to <em>lookup</em> the identifier for the entity using the lookup API.\nWhen data scientists have refined their models to a point where they are ready to track it and log its performance during model development, they can do so with a simple API call. If the model is deployment ready, they can indicate this by adding a deployment tag as part of the data provided to the model tracking API.  When models have been deployed, <strong>Arangopipe</strong> administrators provision a <em>deployment</em> entity in <strong>Arangopipe</strong> to start tracking the serving performance of the deployed model. As serving performance becomes available, it can be recorded against this deployed entity.</p>\n<h2>Getting Started</h2>\n<p>To facilitate an easy start, docker containers for <em>torch</em> and <em>tensorflow</em> are provided. These containers have all components of the <strong>ArangoML Pipeline</strong> (Arangopipe, ArangoDB and the Arangopipe user interface). To get started:</p>\n<h3>Prerequisites</h3>\n<ul>\n<li>Install <a href=\"https://docs.docker.com/install/\" rel=\"nofollow\"><em>docker</em></a></li>\n</ul>\n<h2>Start the container of your choice:</h2>\n<ul>\n<li><a href=\"#torch\" rel=\"nofollow\">Torch</a></li>\n<li><a href=\"#tensorflow\" rel=\"nofollow\">Tensorflow</a></li>\n</ul>\n<h3>Torch</h3>\n<ol>\n<li>\n<p>Start the container:</p>\n<p><code>docker run -p 6529:8529 -p 8888:8888 -p 3000:3000 -it arangopipe/ap_torch</code></p>\n</li>\n<li>\n<p>Running an example in the <em>torch</em> container: The <em>pytorch</em> example is a python script. To run it:</p>\n<ul>\n<li>Run the <code>docker ps</code> command to get the <code>CONTAINER ID</code> of the <em>pytorch</em> container.</li>\n<li>Run the command <code>docker exec -it [ CONTAINER ID ] /bin/bash</code> where  <code>CONTAINER ID</code> is obtained from the previous step.</li>\n</ul>\n</li>\n</ol>\n<p>Change directory to the <code>examples/pytorch</code> directory. The <em>torch</em> container provides an example of a linear regression model that uses <strong>Arangopipe</strong> to log experiment metadata. The experiment meta data includes information about the dataset, featureset and optimization settings used to run the <em>pytorch</em> model. To run the example, launch an <code>ipython</code> shell. In the shell, execute the following:\n1. <code>from ch_torch_linear_regression_driver import run_driver</code>\n2. <code>run_driver()</code></p>\n<p>The details are shown in the figure below.</p>\n<img height=\"400\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e1f48d475053c83f4fc7fa620843da081a1b3e89/6173736574732f72756e5f746f7263685f6472697665722e706e67\">\n<ol>\n<li>\n<p>Execute this step after the model development step above has completed. Point your browser http:localhost:3000. Login to the Arangopipe user interface with username  <code>root</code> and password  <code>open sesame</code>. Select <code>Models</code> in the <code>Search Metadata</code> content pane. You should see the model you developed in the previous step. The details are shown in the figure below.</p>\n <img height=\"400\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3fbd9a7c1c3424945880755d6c12bc67c6f10910/6173736574732f7079746f7263685f6d6f64656c5f46452e706e67\">\n</li>\n<li>\n<p>Explore Arangopipe <a href=\"https://mybinder.org/v2/gh/arangoml/arangopipe/0.1?filepath=arangopipe%2Farangopipe_examples_torch.ipynb\" rel=\"nofollow\"><img alt=\"Binder\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85e91bbb928104e4ce317951541520c6b9c170e1/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667\"></a>. Examples that show <strong>Arangopipe</strong> can be used with <em>hyperopt</em>, <em>sklearn</em> and <em>mlfow</em> are provided. To get the details of where these examples are located in the container, use the binder link above. To access the notebook examples provided with the docker container, point your browser to <a href=\"http://localhost:8888\" rel=\"nofollow\">http://localhost:8888</a> to get to a <strong>Jupyter</strong> notebook. The default notebook password is <em>root</em></p>\n</li>\n<li>\n<p>Point your browser to <a href=\"http://localhost:6529\" rel=\"nofollow\">http://localhost:6529</a> to get to the <strong>ArangoDB</strong> web user interface. The <code>root</code> password is <code>open sesame</code>.</p>\n</li>\n</ol>\n<h3>Tensorflow</h3>\n<ol>\n<li>\n<p>Start the container:</p>\n<p><code>docker run -p 6529:8529 -p 8888:8888 -p 3000:3000 -it arangopipe/ap_tensor_flow</code></p>\n</li>\n<li>\n<p>Running an example in the <em>tensorflow</em> container: Run the tensorflow container. Point your browser to <a href=\"http://localhost:8888\" rel=\"nofollow\">http://localhost:8888</a>. You will be prompted for a password. Use <code>root</code> for the password. In the file browser that is presented in the Jupyter notebook, open the <code>examples</code> directory and then open the  <code>TFX</code> directory. Open the notebook <code>tfx_metadata_integration.ipynb</code>. Read the description of the notebook. This notebook provides an example of how <strong>Arangopipe</strong> can be used with <em>tensorflow</em>. The utility of the multi-model feature of <strong>ArangoDB</strong> is leveraged in this example. <a href=\"https://www.tensorflow.org/tfx/data_validation/get_started\" rel=\"nofollow\">Tensorflow Data Validation</a> is used to generate the summary statistics for a dataset. This <em>tensorflow</em> artifact can be stored in <strong>Arangopipe</strong> and reused as needed. This capability is illustrated in this notebook.</p>\n</li>\n<li>\n<p>Execute this step after you have executed all the cells in the notebook discussed in the previous step. Point your browser to <a href=\"http://localhost:3000\" rel=\"nofollow\">http://localhost:3000</a>. Login to the Arangopipe user interface with username  root and password  <code>open sesame</code>. Select <code>Featursets</code> in the <code>Search Metadata</code> content pane. You should see the featureset logged with <strong>Arangopipe</strong> resulting from executing the notebook discussed in the previous step.</p>\n<img height=\"400\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5b4b1de5930b33adb5ab4ae06d6d1567421d1cc3/6173736574732f74656e736f72666c6f775f6578616d706c652e706e67\">\n</li>\n<li>\n<p>Explore Arangopipe <a href=\"https://mybinder.org/v2/gh/arangoml/arangopipe/0.1?filepath=arangopipe%2Farangopipe_examples.ipynb\" rel=\"nofollow\"><img alt=\"Binder\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85e91bbb928104e4ce317951541520c6b9c170e1/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667\"></a>. Examples that show <strong>Arangopipe</strong> can be used with <em>hyperopt</em>, <em>sklearn</em> and <em>mlfow</em> are provided. To get the details of where these examples are located in the container, use the binder link above. To access the notebook examples provided with the docker container, point your browser to:  <code>http://localhost:8888</code> to get to a <strong>Jupyter</strong> notebook. The default notebook password is <em>root</em></p>\n</li>\n<li>\n<p>Point your browser to: <code>http://localhost:6529</code> to get to the <strong>ArangoDB</strong> web user interface. The <code>root</code> password is <code>open sesame</code>.</p>\n</li>\n</ol>\n<h2>Arangopipe Graph Model</h2>\n<p><img alt=\"Graph representation of Arangopipe entities\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0895c5198a7dde8737437db64aa111a04df7fa08/6173736574732f6172616e676f706970655f736368656d612e706e67\"></p>\n<h3>Data Dictionary</h3>\n<p>Arangopipe represents metadata as a graph. The nodes of the graph above are the principal elements about which metadata is gathered. These elements are high level abstractions that are encountered in any machine learning pipeline. A brief description of each of these elements is provided. Elements of the data model are either nodes or edges.</p>\n<ol>\n<li>Dataset: This node captures metadata about datasets. Examples of attributes could be the storage location (URL), source system, creation date, summary statistics etc. .</li>\n<li>Featureset: This node captures metadata about the features in the dataset. A featureset is obtained by applying a transformation to a dataset.</li>\n<li>(Edge) Featureset - Dataset: Captures the dataset the associated featureset was generated from. Details of the transformation, for example the jupyter notebook that performs the transformation could be captured as part of the edge data.</li>\n<li>Run: Captures metadata about the execution of a pipeline, for example the start time and the end time, status of execution (errors encountered) etc. .</li>\n<li>Project: Captures metadata about the project associated with a pipeline. This is created with <strong>ArangopipeAdmin</strong></li>\n<li>Model: Captures metadata about the model. JSON serialized representations of model metadata can be stored if desiered. For example, if the model is used for hyper-parameter optimization. The hyper-parameter space can be stored in JSON serialized format.</li>\n<li>DevPerf: Captures metadata about the performance metrics gathered during execution of the pipeline. The metric captured depends on the purpose of the model. It could be the root mean square error (RMSE) for a regression model or the best performing model and associated hyper-parameters for a hyper-parameter optimization model.</li>\n<li>Deployment: Captures metadata about a particular production deployment. This could include details like the scheduled date, current status (scheduled, active, archived )etc.</li>\n<li>ServingPerf: Captures the serving performance for a particular period. This is associated with a deployment and could include a collection of metrics, for example model performance metrics, average response time etc. .</li>\n<li>(Edge) Deployment - Model: Captures the model associated with a deployment</li>\n<li>(Edge) Deployment - SevPerf: Captures the serving performance associated with a deployment.</li>\n<li>(Edge) Run - Model: Captures the model associated with a pipeline execution</li>\n<li>(Edge) Run - DevPerf: Captures the model performance observed in development</li>\n<li>(Edge) Run - Dataset: Captures the dataset associated with a pipeline execution</li>\n<li>(Edge) Run - Featureset: Captures the featureset associated with a pipeline execution.</li>\n<li>Model Params: This captures the hyper-parameters and the parameters associated with model development.</li>\n<li>(Edge) Run - Model Params: This captures the model parameters obtained with a pipeline execution.</li>\n<li>(Edge) Deployment - Featureset: This captures the featureset associated with a deployment.</li>\n<li>(Edge) Deployment - ModelParams: This captures the model parameters used with a deployment.</li>\n<li>(Edge) Project - Models: This captures the models associated with a project.</li>\n</ol>\n<p>The data associated with the nodes and edges of the graph are stored as documents. The documents do not have a fixed structure and represent data using key-value pairs. This offers flexibility and permits users to decide the metadata elements that they would like to store. This also permits users to store metadata from any machine learning tech stack in Arangopipe.</p>\n<h2>Installing Arangopipe API</h2>\n<p>If you would like to use <strong>Arangopipe</strong> with your pipelines, you would need to do the following:</p>\n<ol>\n<li>\n<p><code>pip install sklearn</code></p>\n</li>\n<li>\n<p><code>pip install python-arango</code></p>\n</li>\n<li>\n<p><code>pip install arangopipe</code></p>\n</li>\n</ol>\n<h2>Arangopipe User Interface Application</h2>\n<p>Machine learning pipelines can use the <strong>Arangopipe</strong> API to update the <strong>Arangopipe</strong> database as they progress through their execution. Data scientists and ops personel, can use the <strong>Arangopipe</strong> UI to obtain information about deployed pipelines, trace the lineage of a deployment or track the details of a deployed asset (models, featuresets etc.). The <strong>Arangopipe</strong> UI offers a summary view of assets for each project tracked by <strong>Arangopipe</strong>. The summary view (content under \"ML Projects Summary\") is presented in the left navigation bar of the landing page of the user interface application. The administration features (associated with the \"User\", \"Deployment\" and \"Project\" links in the left navigation pane) are not available at this time and will be available shortly. The search feature, which can be used to track assets and view lineage information, is available at this time. The search feature can be accessed from the right hand pane of the landing page. This is shown below.</p>\n<img height=\"600\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8a1fa7f5ec2d1124c600b09106eef17dffd80886/6173736574732f7365617263685f6465706c6f796d656e74732e706e67\">\n&lt;figcaption&gt; Figure 1: Arangopipe User Interface Application&lt;/figcaption&gt;\n<h3>Searching for an Asset</h3>\n<p>Assets (Featuresets, Datasets and Models) can be searched by the value of a property, for example the name, tag or deployment tag. An example of searching for a dataset by name is shown in the figure below.</p>\n<img height=\"600\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7d602ed9b10aaf6fc561ea22234e310a7446db14/6173736574732f7365617263685f64617461736574732e706e67\">\n&lt;figcaption&gt; Figure 2: Search for a dataset by name&lt;/figcaption&gt;\n<h3>Tracing Asset Lineage</h3>\n<p>To trace the lineage of a deployment, the user can make use of the search feature. Searching for deployments with no property value filter provides a list of all deployments for the project (see Figure 1).  After having selected the deployment of interest, if we are interested in a particualr asset, for example, the model associated with the deployment. We can search for models with the particular deployment tag. This is shown in the figure below.</p>\n <img height=\"600\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dc286e199b2903a0edc2973e3a67724e081f3770/6173736574732f6d6f64656c5f666f725f6465706c6f796d656e742e706e67\">\n&lt;figcaption&gt; Figure 3: Search the model for a deployment&lt;/figcaption&gt;\n<p>If we are interested in the complete lineage, the graph representation of the lineage can be generated by clicking on the blue button with the graph icon (in the graph column of Figure 3). The graph is generated with the <code>graphviz</code> tool. This is illustrated in the figure below. You will have to click on the <code>Generate</code> button to generate the graph representation of the lineage.</p>\n <img height=\"600\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/40b93c724cf0ac41a9e3b0ccc4ab63e0aa44120d/6173736574732f67726170685f726570726573656e746174696f6e2e706e67\">\n&lt;figcaption&gt; Figure 4: Search the model for a deployment&lt;/figcaption&gt;\n<p>In Figure 4, the dataset, featureset, model, model parameters, model performance in development, and most recent serving performance, is shown for the deployment of interest.</p>\n<h3>Adhoc Queries</h3>\n<p>To execute adhoc queries against <strong>Arangopipe</strong> use the <em>Query</em> feature from the left navigation bar. The details of using the query feature to submit a query to <strong>Arangopipe</strong> is shown in the figure below.\n<img height=\"600\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/64b6ce38138c9db242dd06d77acce828734fb07e/6173736574732f6164686f635f71756572792e706e67\"></p>\n&lt;figcaption&gt; Figure 4: Submit an adhoc query &lt;/figcaption&gt;\n\n          </div>"}, "last_serial": 7144346, "releases": {"0.0.40": [{"comment_text": "", "digests": {"md5": "eea40cb4761629b7d19110199a2efe88", "sha256": "60abbed625b17fbe196dd5fde94c450671a11484499ae22120802feeda1f6f33"}, "downloads": -1, "filename": "arangopipe-0.0.40-py3-none-any.whl", "has_sig": false, "md5_digest": "eea40cb4761629b7d19110199a2efe88", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12817, "upload_time": "2019-09-24T00:36:49", "upload_time_iso_8601": "2019-09-24T00:36:49.038272Z", "url": "https://files.pythonhosted.org/packages/8b/29/d7677c7de723f59dc65697351d630e700162ca366ed3d8cd231099c9264b/arangopipe-0.0.40-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa5c21abd9e14fe4d556079a36c84441", "sha256": "56c993ee4f0c70ec456edf77ce3546784eb4172245ba8081eb5f8e0f2b21c199"}, "downloads": -1, "filename": "arangopipe-0.0.40.tar.gz", "has_sig": false, "md5_digest": "aa5c21abd9e14fe4d556079a36c84441", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14251, "upload_time": "2019-09-24T00:36:55", "upload_time_iso_8601": "2019-09-24T00:36:55.526780Z", "url": "https://files.pythonhosted.org/packages/05/53/7de5063fbae85f619944b71bb66a2d3ba07b961fd29f1cd2700fbedc2b70/arangopipe-0.0.40.tar.gz", "yanked": false}], "0.0.41": [{"comment_text": "", "digests": {"md5": "13ccb4ee6a4abb5e6098b6a246ffced9", "sha256": "47c07d515c0f9c778c65b98c21677853c653e35abfba6f77de906564533d8264"}, "downloads": -1, "filename": "arangopipe-0.0.41-py3-none-any.whl", "has_sig": false, "md5_digest": "13ccb4ee6a4abb5e6098b6a246ffced9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15500, "upload_time": "2019-09-24T17:04:51", "upload_time_iso_8601": "2019-09-24T17:04:51.850719Z", "url": "https://files.pythonhosted.org/packages/92/45/bb3b55a800ce9ed0861bce842288c86e3e0a2edf889456d86da3f4991e0c/arangopipe-0.0.41-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b75253a7165f8f7b42b0b5783b774c8", "sha256": "77331f33b19b3474c84e7db75f819f2db4f2c628c28f841adb4e7d9a92f693e1"}, "downloads": -1, "filename": "arangopipe-0.0.41.tar.gz", "has_sig": false, "md5_digest": "7b75253a7165f8f7b42b0b5783b774c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18384, "upload_time": "2019-09-24T17:04:54", "upload_time_iso_8601": "2019-09-24T17:04:54.652779Z", "url": "https://files.pythonhosted.org/packages/b8/59/5dce40986be95fda61b00ccb2df01e35f2e4e21364f16121081683a06e20/arangopipe-0.0.41.tar.gz", "yanked": false}], "0.0.42": [{"comment_text": "", "digests": {"md5": "deb7c1a175823e59a98eebe4db2ebbf2", "sha256": "498b0091fc5a078ff5ded0341b6e4fec5d4c2d5e0fbbb7fbc4d6d8941f5474c2"}, "downloads": -1, "filename": "arangopipe-0.0.42-py3-none-any.whl", "has_sig": false, "md5_digest": "deb7c1a175823e59a98eebe4db2ebbf2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15502, "upload_time": "2019-09-24T18:00:38", "upload_time_iso_8601": "2019-09-24T18:00:38.805253Z", "url": "https://files.pythonhosted.org/packages/25/ea/2dacef5d09c7cfcf6086e1d3ba73bb1a752b2d75881bc4f90820e13f0f74/arangopipe-0.0.42-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8715260a7860e240035a92e95eaff8de", "sha256": "528be4a64194c48bd7866a175074904a825a458a42c5a587a19e0f250941c659"}, "downloads": -1, "filename": "arangopipe-0.0.42.tar.gz", "has_sig": false, "md5_digest": "8715260a7860e240035a92e95eaff8de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18393, "upload_time": "2019-09-24T18:00:44", "upload_time_iso_8601": "2019-09-24T18:00:44.534499Z", "url": "https://files.pythonhosted.org/packages/aa/80/6c4904dcf32bb27348a13d4d4a9e1a191d008cab9f1b0aefe6cbe1251d27/arangopipe-0.0.42.tar.gz", "yanked": false}], "0.0.43": [{"comment_text": "", "digests": {"md5": "4497e639be20d7f52319f8117b6549e0", "sha256": "ce2bc91fffe78461e39f36496db54b2816232786413852a12841eb259529e545"}, "downloads": -1, "filename": "arangopipe-0.0.43-py3-none-any.whl", "has_sig": false, "md5_digest": "4497e639be20d7f52319f8117b6549e0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15773, "upload_time": "2019-10-08T03:35:36", "upload_time_iso_8601": "2019-10-08T03:35:36.501017Z", "url": "https://files.pythonhosted.org/packages/49/3a/4d85a7566a5e162764dbbd84f3d84be3485e7b4820582916257490d873d5/arangopipe-0.0.43-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a94ebd0504fd4d687eaf2da4b842d19a", "sha256": "636991f025817a4b57807bf0a8d46825451501c8f73bfbd907bf426057b92380"}, "downloads": -1, "filename": "arangopipe-0.0.43.tar.gz", "has_sig": false, "md5_digest": "a94ebd0504fd4d687eaf2da4b842d19a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18534, "upload_time": "2019-10-08T03:35:38", "upload_time_iso_8601": "2019-10-08T03:35:38.545327Z", "url": "https://files.pythonhosted.org/packages/08/3f/df0c2a95ea3a381d6fb84151cbd7d0eed6ed5e5f6db964b15306a6bfeda6/arangopipe-0.0.43.tar.gz", "yanked": false}], "0.0.44": [{"comment_text": "", "digests": {"md5": "ae5d4f9978cb15ef3a22123f0698aa2d", "sha256": "9caea5b0d25f3a225479876e0762a249e52a072569736732d068f0e445239fe2"}, "downloads": -1, "filename": "arangopipe-0.0.44-py3-none-any.whl", "has_sig": false, "md5_digest": "ae5d4f9978cb15ef3a22123f0698aa2d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16675, "upload_time": "2019-10-08T07:08:13", "upload_time_iso_8601": "2019-10-08T07:08:13.621708Z", "url": "https://files.pythonhosted.org/packages/1d/80/d9c5a4e57b3d2a1a622a76ae9baf856ed903be5dbaf96e74e892d3cac650/arangopipe-0.0.44-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4cf7b42f9133a7ba4bd9cffed46475e7", "sha256": "2811e92675c44379f8cfde984aff9163493ee52b38cd5c5c8155cd982bcd5456"}, "downloads": -1, "filename": "arangopipe-0.0.44.tar.gz", "has_sig": false, "md5_digest": "4cf7b42f9133a7ba4bd9cffed46475e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19063, "upload_time": "2019-10-08T07:08:15", "upload_time_iso_8601": "2019-10-08T07:08:15.306881Z", "url": "https://files.pythonhosted.org/packages/60/17/d41e2d8c9e1e828a3b56aad3e6e8039ec41ca180c4c096db2ba780549bb6/arangopipe-0.0.44.tar.gz", "yanked": false}], "0.0.45": [{"comment_text": "", "digests": {"md5": "eee4a61442215ed295534f35dc940f1f", "sha256": "732e968b157e9437aeb4c4e2d001a9bd6df154f38b43fca4b88cc0248fd45c78"}, "downloads": -1, "filename": "arangopipe-0.0.45-py3-none-any.whl", "has_sig": false, "md5_digest": "eee4a61442215ed295534f35dc940f1f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16103, "upload_time": "2019-10-09T14:11:19", "upload_time_iso_8601": "2019-10-09T14:11:19.054261Z", "url": "https://files.pythonhosted.org/packages/0a/b4/8e7c32d529de75352cf42f665b3a9bd16da7d6b690db184c9bc551c9c56c/arangopipe-0.0.45-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "12b6fdb341ef44357a0694304cc3e710", "sha256": "9bc22dcd3e8637e639a1fd67ed9e700eef6f8b2953a173a9b9285931d20a2f8e"}, "downloads": -1, "filename": "arangopipe-0.0.45.tar.gz", "has_sig": false, "md5_digest": "12b6fdb341ef44357a0694304cc3e710", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18848, "upload_time": "2019-10-09T14:11:21", "upload_time_iso_8601": "2019-10-09T14:11:21.199849Z", "url": "https://files.pythonhosted.org/packages/b6/f2/2cde8deacdf1a717246681f20fd579d367b0b08cc34dd2f7b7402959dc37/arangopipe-0.0.45.tar.gz", "yanked": false}], "0.0.46": [{"comment_text": "", "digests": {"md5": "db743e0e424091ffdabc7785492b8aca", "sha256": "f54c54fc2d6ecfbaa3ad9c9444c14d2a9ae82586017472e4dbbaf495a0ceb622"}, "downloads": -1, "filename": "arangopipe-0.0.46-py3-none-any.whl", "has_sig": false, "md5_digest": "db743e0e424091ffdabc7785492b8aca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16132, "upload_time": "2019-10-11T02:43:16", "upload_time_iso_8601": "2019-10-11T02:43:16.343538Z", "url": "https://files.pythonhosted.org/packages/3a/9e/06fbba34f9891e105e65e279ec4031b364090f6bc0a6db48c4360ea95d83/arangopipe-0.0.46-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "260a11f9caed0ceeb53f52c8bb6a1e22", "sha256": "332d632eed773a8874579a7e159704ad945d9045dc010179704946c4727ebd92"}, "downloads": -1, "filename": "arangopipe-0.0.46.tar.gz", "has_sig": false, "md5_digest": "260a11f9caed0ceeb53f52c8bb6a1e22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18867, "upload_time": "2019-10-11T02:43:19", "upload_time_iso_8601": "2019-10-11T02:43:19.725772Z", "url": "https://files.pythonhosted.org/packages/ed/4f/7ecd71c21b5b6b8f2503e6f9611e95a223477255136d72a373b9c070f997/arangopipe-0.0.46.tar.gz", "yanked": false}], "0.0.47": [{"comment_text": "", "digests": {"md5": "ce178c9f461a06e18de4e0b384943205", "sha256": "8918c0db061279520a53f114b7fa413945accfca5fccf8812b6f43d70aa0677e"}, "downloads": -1, "filename": "arangopipe-0.0.47-py3-none-any.whl", "has_sig": false, "md5_digest": "ce178c9f461a06e18de4e0b384943205", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16291, "upload_time": "2019-10-14T12:29:24", "upload_time_iso_8601": "2019-10-14T12:29:24.037401Z", "url": "https://files.pythonhosted.org/packages/1d/e3/8532cf2636c0ebdfa82b1d60c886ec66c24bd6cbf0fd1f96a292190e5d30/arangopipe-0.0.47-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6bea4a8af570d75a05e949aa88f7848", "sha256": "3fd98ca5d6beba348044e57ee90a2d2e2f97964faf4425db89fa955c6ddaf030"}, "downloads": -1, "filename": "arangopipe-0.0.47.tar.gz", "has_sig": false, "md5_digest": "b6bea4a8af570d75a05e949aa88f7848", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19017, "upload_time": "2019-10-14T12:29:26", "upload_time_iso_8601": "2019-10-14T12:29:26.391085Z", "url": "https://files.pythonhosted.org/packages/55/82/e806678e5d99dd78e89e955241bddbcbb8310817413d9f373e0643876c27/arangopipe-0.0.47.tar.gz", "yanked": false}], "0.0.47.1": [{"comment_text": "", "digests": {"md5": "03bd9493a0846914e101e1878acb0dbd", "sha256": "74c169472ba9e405003ef5ea5129e2763813ea2b620b06671e5f44b2bbcdd2c7"}, "downloads": -1, "filename": "arangopipe-0.0.47.1-py3-none-any.whl", "has_sig": false, "md5_digest": "03bd9493a0846914e101e1878acb0dbd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16314, "upload_time": "2019-10-21T05:40:59", "upload_time_iso_8601": "2019-10-21T05:40:59.307748Z", "url": "https://files.pythonhosted.org/packages/85/26/b593fb630ab1b0fd3ebd40f9108d3c0ee3efa2d69a8ac40f2658324426b6/arangopipe-0.0.47.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ab7e34e7fa6954fb2192f0cf39ed617", "sha256": "046c585c3cb7f653e69758a9f3629a421e73f580f278c6a11eea5f33f10d1f67"}, "downloads": -1, "filename": "arangopipe-0.0.47.1.tar.gz", "has_sig": false, "md5_digest": "5ab7e34e7fa6954fb2192f0cf39ed617", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19033, "upload_time": "2019-10-21T05:41:01", "upload_time_iso_8601": "2019-10-21T05:41:01.522315Z", "url": "https://files.pythonhosted.org/packages/d6/fc/fb6413131342cca4bf883c0a01f9ba4c6038ff504f65b16542eadaa26523/arangopipe-0.0.47.1.tar.gz", "yanked": false}], "0.0.47.4.2": [{"comment_text": "", "digests": {"md5": "1746894819d3771296ce8dbdb9ceeb87", "sha256": "7ed7c34fdad2114ce4423a4050e56d8a1eb3baf3f3d9cbefcd738ba41f070977"}, "downloads": -1, "filename": "arangopipe-0.0.47.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1746894819d3771296ce8dbdb9ceeb87", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16929, "upload_time": "2019-10-23T05:22:46", "upload_time_iso_8601": "2019-10-23T05:22:46.084076Z", "url": "https://files.pythonhosted.org/packages/31/9c/563dbcb5e1f8b4db5a43666a1b4de452cb9b71f57b88263e15f09460e4a9/arangopipe-0.0.47.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4a815de51461e3e97ddd41e33ade23a", "sha256": "5a240513d56f75c5656423d10400cc26a22bebcc592c69f13a27375b4f3b444b"}, "downloads": -1, "filename": "arangopipe-0.0.47.4.2.tar.gz", "has_sig": false, "md5_digest": "a4a815de51461e3e97ddd41e33ade23a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19068, "upload_time": "2019-10-23T05:22:47", "upload_time_iso_8601": "2019-10-23T05:22:47.763637Z", "url": "https://files.pythonhosted.org/packages/aa/80/f0aecc0ccd69b787e8d9261e9169f34467f230e88ee330dba423d601254f/arangopipe-0.0.47.4.2.tar.gz", "yanked": false}], "0.0.5.8": [{"comment_text": "", "digests": {"md5": "f9ec5656cdbf0810a07d35b4e73e6fc9", "sha256": "1df4de4f4137891c7c631157f041a6be873ee55a380619bcc41297035c14b485"}, "downloads": -1, "filename": "arangopipe-0.0.5.8-py3-none-any.whl", "has_sig": false, "md5_digest": "f9ec5656cdbf0810a07d35b4e73e6fc9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19586, "upload_time": "2019-12-23T11:42:33", "upload_time_iso_8601": "2019-12-23T11:42:33.447619Z", "url": "https://files.pythonhosted.org/packages/f7/f3/007c0be4dd89c9524b2790c07a36c2a88acf18cef8c3ea0223b4b0e80d7e/arangopipe-0.0.5.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9fe07721c1f282dc9c1a03cd5d088525", "sha256": "fddb8a98d507a6cd288fe93f52f7114004dd1224a74701ab8bf8db188257d342"}, "downloads": -1, "filename": "arangopipe-0.0.5.8.tar.gz", "has_sig": false, "md5_digest": "9fe07721c1f282dc9c1a03cd5d088525", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21590, "upload_time": "2019-12-23T11:42:36", "upload_time_iso_8601": "2019-12-23T11:42:36.218781Z", "url": "https://files.pythonhosted.org/packages/ef/72/f57c82b1e790a8b15f34760e77602733b17b893755a0c6e3e04318094691/arangopipe-0.0.5.8.tar.gz", "yanked": false}], "0.0.6.1": [{"comment_text": "", "digests": {"md5": "4b94c6e42aad9d45c48b4b48eedd6ce2", "sha256": "eb2daa0480600f512a2bcd69a98535d1f2c2ffad74e6421d4f27414eb35d8e9f"}, "downloads": -1, "filename": "arangopipe-0.0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4b94c6e42aad9d45c48b4b48eedd6ce2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20026, "upload_time": "2020-02-03T05:07:53", "upload_time_iso_8601": "2020-02-03T05:07:53.547209Z", "url": "https://files.pythonhosted.org/packages/28/80/0eacb60d4699a87c81632bfa1d16c0dff87c1a736c2f091324b47ae081dd/arangopipe-0.0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b2432fc2ef564bba7a57ad206142c5b", "sha256": "e64f81cd4ac0575f96af018e56830e7c804805cd26c02a7b51117febf5f3562f"}, "downloads": -1, "filename": "arangopipe-0.0.6.1.tar.gz", "has_sig": false, "md5_digest": "4b2432fc2ef564bba7a57ad206142c5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21971, "upload_time": "2020-02-03T05:07:55", "upload_time_iso_8601": "2020-02-03T05:07:55.466782Z", "url": "https://files.pythonhosted.org/packages/f3/76/d8f77f7fd45adc21e20477eb78e4af0bc49130e307ab34e6ae8925736f6f/arangopipe-0.0.6.1.tar.gz", "yanked": false}], "0.0.6.8.5": [{"comment_text": "", "digests": {"md5": "761becd5e36ec6ea9f14df8eef1ebc93", "sha256": "7f6bcb3a2b67396c56c39e3e23c2ba26648bb050562f4c3320c65dd4e452e01d"}, "downloads": -1, "filename": "arangopipe-0.0.6.8.5-py3-none-any.whl", "has_sig": false, "md5_digest": "761becd5e36ec6ea9f14df8eef1ebc93", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20071, "upload_time": "2020-02-13T01:24:00", "upload_time_iso_8601": "2020-02-13T01:24:00.641951Z", "url": "https://files.pythonhosted.org/packages/22/e0/2233fbcdbdff355c0c6152ae6422c4bca965896c0d21f406ae50d4c82a5d/arangopipe-0.0.6.8.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd0b85475c5c379bce68a4d4af4c78aa", "sha256": "2a83bceb57752807d36747555bf4aa6c50a52a2f466ff12d35a8675a14232c39"}, "downloads": -1, "filename": "arangopipe-0.0.6.8.5.tar.gz", "has_sig": false, "md5_digest": "dd0b85475c5c379bce68a4d4af4c78aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22336, "upload_time": "2020-02-13T01:24:02", "upload_time_iso_8601": "2020-02-13T01:24:02.780178Z", "url": "https://files.pythonhosted.org/packages/90/ca/0e13bed4cb3d80377f8b9f5c93e050ad817147f741423b8e63899a9eb236/arangopipe-0.0.6.8.5.tar.gz", "yanked": false}], "0.0.6.8.6": [{"comment_text": "", "digests": {"md5": "79b8a1c80f3772e99664deb34b80292b", "sha256": "ab6b6fcbf1aa050b7fe893795e3ed91772a81af5fd5d155f632d3103412c0337"}, "downloads": -1, "filename": "arangopipe-0.0.6.8.6-py3-none-any.whl", "has_sig": false, "md5_digest": "79b8a1c80f3772e99664deb34b80292b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23917, "upload_time": "2020-02-13T03:05:30", "upload_time_iso_8601": "2020-02-13T03:05:30.432695Z", "url": "https://files.pythonhosted.org/packages/e3/7c/d197bfcc7fb4ac1a3af1ffafe2652da81a88674bbf7275666c11c35d25a6/arangopipe-0.0.6.8.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9b11919b598d1bccb23e72a16708e41", "sha256": "5f0e0cd684b805410a16682db0400bc445ad3c39c19f7aeab50d7b5b0fbcd8e2"}, "downloads": -1, "filename": "arangopipe-0.0.6.8.6.tar.gz", "has_sig": false, "md5_digest": "d9b11919b598d1bccb23e72a16708e41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26476, "upload_time": "2020-02-13T03:05:32", "upload_time_iso_8601": "2020-02-13T03:05:32.588371Z", "url": "https://files.pythonhosted.org/packages/cd/68/15c0d42f8e023904e4c6097c1bc1e1bc22b57969f541505bd134bed4d646/arangopipe-0.0.6.8.6.tar.gz", "yanked": false}], "0.0.6.8.9": [{"comment_text": "", "digests": {"md5": "19ef923ca86c04829c343d3ab7154e24", "sha256": "76999cd11ac840501898e78291fff2aebbce09da784ac6bc96a1020cd836ab3b"}, "downloads": -1, "filename": "arangopipe-0.0.6.8.9-py3-none-any.whl", "has_sig": false, "md5_digest": "19ef923ca86c04829c343d3ab7154e24", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23925, "upload_time": "2020-02-20T11:03:43", "upload_time_iso_8601": "2020-02-20T11:03:43.797400Z", "url": "https://files.pythonhosted.org/packages/ed/92/d06857dc6d6a62e8f314f3b923e30361ac64e07537c56352140cbfec4c38/arangopipe-0.0.6.8.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7c34bc75a311c8998568f63db9e01fb", "sha256": "c9716a50908bc8ec9a020db8f5d59702bb872d11738c13a904deecc7dce887ad"}, "downloads": -1, "filename": "arangopipe-0.0.6.8.9.tar.gz", "has_sig": false, "md5_digest": "a7c34bc75a311c8998568f63db9e01fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26498, "upload_time": "2020-02-20T11:03:46", "upload_time_iso_8601": "2020-02-20T11:03:46.274551Z", "url": "https://files.pythonhosted.org/packages/bb/4a/94b7363fe3bcf1b1e0cfc8e047d76f27b02831f8377b5e7fffce36682b19/arangopipe-0.0.6.8.9.tar.gz", "yanked": false}], "0.0.6.9.0": [{"comment_text": "", "digests": {"md5": "e50b955d11df9c78d91f9011c866c5bb", "sha256": "c3ee729bcd360fa3a7bb580134ec9535c64d45bfe44f86f16711a03a85629397"}, "downloads": -1, "filename": "arangopipe-0.0.6.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e50b955d11df9c78d91f9011c866c5bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23401, "upload_time": "2020-02-28T07:29:13", "upload_time_iso_8601": "2020-02-28T07:29:13.795073Z", "url": "https://files.pythonhosted.org/packages/cc/dd/69a971d4fd14bf335812811cc9a302c0754c10dcb9b816b1c057e9420014/arangopipe-0.0.6.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "42bf63eab13ee97adbd14550eae7d0f7", "sha256": "873f4ac55e77440ee34adabe753893fc23c2085456eb84266f486beb533cb233"}, "downloads": -1, "filename": "arangopipe-0.0.6.9.0.tar.gz", "has_sig": false, "md5_digest": "42bf63eab13ee97adbd14550eae7d0f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25142, "upload_time": "2020-02-28T07:29:16", "upload_time_iso_8601": "2020-02-28T07:29:16.279207Z", "url": "https://files.pythonhosted.org/packages/be/aa/f64697642f0b2db7038e539bee33557dfecba52e9b694768d2221688aa85/arangopipe-0.0.6.9.0.tar.gz", "yanked": false}], "0.0.6.9.1": [{"comment_text": "", "digests": {"md5": "f9284c248cb750e2817f390dacf7f6c2", "sha256": "35a94d778e9c3bfdb84f95659a0fc940f4fb94c41219a6b71e77423ed68b26fc"}, "downloads": -1, "filename": "arangopipe-0.0.6.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f9284c248cb750e2817f390dacf7f6c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23401, "upload_time": "2020-03-02T09:43:06", "upload_time_iso_8601": "2020-03-02T09:43:06.942710Z", "url": "https://files.pythonhosted.org/packages/7d/2c/7d3698ee3a7644b5773482c4b8c91790a8b0417816d6c9c7c7f483989264/arangopipe-0.0.6.9.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1e6e5022d22dc7a70d737a3495a4060", "sha256": "f2a40fc553d4a74a3ab373727b61c8fb738e0473c808c73fe73ce292da62ef44"}, "downloads": -1, "filename": "arangopipe-0.0.6.9.1.tar.gz", "has_sig": false, "md5_digest": "e1e6e5022d22dc7a70d737a3495a4060", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25143, "upload_time": "2020-03-02T09:43:09", "upload_time_iso_8601": "2020-03-02T09:43:09.451665Z", "url": "https://files.pythonhosted.org/packages/65/76/34ba6a4a74108dea1530dbf73df6782dc266876a6fa502fcfc0981c6aa8b/arangopipe-0.0.6.9.1.tar.gz", "yanked": false}], "0.0.6.9.3": [{"comment_text": "", "digests": {"md5": "90303667679ce6bb54338be654f516e3", "sha256": "9b7f54ebdb82a0b64bd83cffa92d3374ece73c74b4112fca5ed02ed6ce4417c0"}, "downloads": -1, "filename": "arangopipe-0.0.6.9.3-py3-none-any.whl", "has_sig": false, "md5_digest": "90303667679ce6bb54338be654f516e3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23795, "upload_time": "2020-03-03T08:42:52", "upload_time_iso_8601": "2020-03-03T08:42:52.798380Z", "url": "https://files.pythonhosted.org/packages/d1/4e/66db7a9b1bf11bb996c0e62f1c2409e04eec0c1ee38bd80b69ac9b2d9613/arangopipe-0.0.6.9.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "532de38e28a7dafc5e8aa612b398cf38", "sha256": "752ccb658c34ff44cf388936c7d5896764ff1fc36d4f513ea88bde7a51bf3ddd"}, "downloads": -1, "filename": "arangopipe-0.0.6.9.3.tar.gz", "has_sig": false, "md5_digest": "532de38e28a7dafc5e8aa612b398cf38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25574, "upload_time": "2020-03-03T08:42:54", "upload_time_iso_8601": "2020-03-03T08:42:54.847484Z", "url": "https://files.pythonhosted.org/packages/be/41/10f0b7eacb7819feb115090714076d2228161044472096fef2aee27c40b9/arangopipe-0.0.6.9.3.tar.gz", "yanked": false}], "0.0.6.9.4": [{"comment_text": "", "digests": {"md5": "20317d717fddab97ddc465de836b33e8", "sha256": "ef0840d5ce80dc0d0e327ef33f36e83cfee38670f63127114f04b80d844addc3"}, "downloads": -1, "filename": "arangopipe-0.0.6.9.4-py3-none-any.whl", "has_sig": false, "md5_digest": "20317d717fddab97ddc465de836b33e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24144, "upload_time": "2020-04-17T05:04:43", "upload_time_iso_8601": "2020-04-17T05:04:43.954270Z", "url": "https://files.pythonhosted.org/packages/5f/bf/978b75ed0c66c4290a254781182523618d2b9bc9c8b8d74ced1457c3bcb4/arangopipe-0.0.6.9.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14a8f20f2c03f0465af47b6d31920d5b", "sha256": "4fc9b81db775e3a8f5f5c157d1b5e82dfc43a8662aa7f6319c4377934ab8d1a9"}, "downloads": -1, "filename": "arangopipe-0.0.6.9.4.tar.gz", "has_sig": false, "md5_digest": "14a8f20f2c03f0465af47b6d31920d5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26156, "upload_time": "2020-04-17T05:04:45", "upload_time_iso_8601": "2020-04-17T05:04:45.976497Z", "url": "https://files.pythonhosted.org/packages/7f/16/2faef958a61dd7fc8f509e5a5ee80d721e1eb7c4a80d0357ef7d4c3454ab/arangopipe-0.0.6.9.4.tar.gz", "yanked": false}], "0.0.6.90": [{"comment_text": "", "digests": {"md5": "14dc32c45fea5361e46631cf8dc004d0", "sha256": "4c71e63fcdc558c2517129139b2cdee44db0cb2f67bda45e9672b347b9d53cdf"}, "downloads": -1, "filename": "arangopipe-0.0.6.90-py3-none-any.whl", "has_sig": false, "md5_digest": "14dc32c45fea5361e46631cf8dc004d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23391, "upload_time": "2020-02-28T07:17:31", "upload_time_iso_8601": "2020-02-28T07:17:31.769464Z", "url": "https://files.pythonhosted.org/packages/b5/87/a7c45d875d0a5431d9d75e18766f07625bf28649820895bee25d0c7594e1/arangopipe-0.0.6.90-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d1d637289c79771e655704ce0cba0e9", "sha256": "eb87afdc03ed7fad99d53579409506b7f50ad7014e3e64116b37ac8df05b084b"}, "downloads": -1, "filename": "arangopipe-0.0.6.90.tar.gz", "has_sig": false, "md5_digest": "3d1d637289c79771e655704ce0cba0e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25146, "upload_time": "2020-02-28T07:17:34", "upload_time_iso_8601": "2020-02-28T07:17:34.320529Z", "url": "https://files.pythonhosted.org/packages/2a/17/68c82d44eb0029a7aa647e69a89d2ddb3b7c5c3eeaed674fb9f8b994cd22/arangopipe-0.0.6.90.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1746894819d3771296ce8dbdb9ceeb87", "sha256": "7ed7c34fdad2114ce4423a4050e56d8a1eb3baf3f3d9cbefcd738ba41f070977"}, "downloads": -1, "filename": "arangopipe-0.0.47.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1746894819d3771296ce8dbdb9ceeb87", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16929, "upload_time": "2019-10-23T05:22:46", "upload_time_iso_8601": "2019-10-23T05:22:46.084076Z", "url": "https://files.pythonhosted.org/packages/31/9c/563dbcb5e1f8b4db5a43666a1b4de452cb9b71f57b88263e15f09460e4a9/arangopipe-0.0.47.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4a815de51461e3e97ddd41e33ade23a", "sha256": "5a240513d56f75c5656423d10400cc26a22bebcc592c69f13a27375b4f3b444b"}, "downloads": -1, "filename": "arangopipe-0.0.47.4.2.tar.gz", "has_sig": false, "md5_digest": "a4a815de51461e3e97ddd41e33ade23a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19068, "upload_time": "2019-10-23T05:22:47", "upload_time_iso_8601": "2019-10-23T05:22:47.763637Z", "url": "https://files.pythonhosted.org/packages/aa/80/f0aecc0ccd69b787e8d9261e9169f34467f230e88ee330dba423d601254f/arangopipe-0.0.47.4.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:27 2020"}