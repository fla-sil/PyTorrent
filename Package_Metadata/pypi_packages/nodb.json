{"info": {"author": "Rich Jones", "author_email": "rich@openwatch.net", "bugtrack_url": null, "classifiers": ["Environment :: Console", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "NoDB\n====\n\n|Build Status| |Coverage| |PyPI| |Slack| |Gun.io| |Patreon|\n\n*NoDB isn't a database.. but it sort of looks like one!*\n\n**NoDB** an incredibly simple, Pythonic object store based on Amazon's\nS3 static file storage.\n\nIt's useful for **prototyping**, **casual hacking**, and (maybe) even\nlow-traffic **server-less backends** for\n**`Zappa <https://github.com/Miserlou/Zappa>`__ apps**!\n\nFeatures\n--------\n\n-  Schema-less!\n-  Server-less!\n-  Uses S3 as a datastore.\n-  Loads to native Python objects with ``cPickle``\n-  Can use JSON as a serialization format for untrusted data\n-  Local filestore based caching\n-  Cheap(ish)!\n-  Fast(ish)! (Especially from Lambda)\n\nPerformance\n-----------\n\nInitial load test with `Goad <https://goad.io/>`__ of 10,000 requests\n(500 concurrent) with a write and subsequent read of the same index\nshowed an average time of 400ms. This should be more than acceptable for\nmany applications, even those which don't have sparse data, although\nthat is preferred.\n\nInstallation\n------------\n\n**NoDB** can be installed easily via ``pip``, like so:\n\n::\n\n    $ pip install nodb\n\nWarning!\n--------\n\n**NoDB** is **insecure by default**! Do not use it for untrusted data\nbefore setting ``serializer`` to ``\"json\"``!\n\nUsage\n-----\n\n**NoDB** is super easy to use!\n\nYou simply make a NoDB object, point it to your bucket and tell it what\nfield you want to index on.\n\n.. code:: python\n\n    from nodb import NoDB\n\n    nodb = NoDB()\n    nodb.bucket = \"my-s3-bucket\"\n    nodb.index = \"name\"\n\nAfter that, you can save and load literally anything you want, whenever\nyou want!\n\n.. code:: python\n\n    # Save an object!\n    user = {\"name\": \"Jeff\", \"age\": 19}\n    nodb.save(user) # True\n\n    # Load our object!\n    user = nodb.load(\"Jeff\")\n    print user['age'] # 19\n\n    # Delete our object\n    nodb.delete(\"Jeff\") # True\n\nBy default, you can save and load any Python object.\n\nHere's the same example, but with a class. Note the import and\nconfiguration is the same!\n\n.. code:: python\n\n    class User(object):\n        name = None\n        age = None\n\n        def print_name(self):\n            print \"Hi, I'm \" + self.name + \"!\"\n\n    new_user = User()\n    new_user.name = \"Jeff\"\n    new_user.age = 19\n    nodb.save(new_user) # True\n\n    jeff = nodb.load(\"Jeff\")\n    jeff.print_name() # Hi, I'm Jeff!\n\nAdvanced Usage\n--------------\n\nDifferent Serializers\n~~~~~~~~~~~~~~~~~~~~~\n\nTo use a safer, non-Pickle serializer, just set JSON as your serializer:\n\n.. code:: python\n\n    nodb = NoDB()\n    nodb.serializer = \"json\"\n\nNote that for this to work, your object must be JSON-serializable.\n\nObject Metadata\n~~~~~~~~~~~~~~~\n\nYou can get metainfo (datetime and UUID) for a given object by passing\n``metainfo=True`` to ``load``, like so:\n\n.. code:: python\n\n    # Load our object and metainfo!\n    user, datetime, uuid = nodb.load(\"Jeff\", metainfo=True)\n\nYou can also pass in a ``default`` argument for non-existent values.\n\n.. code:: python\n\n    user = nodb.load(\"Jeff\", default={}) # {}\n\nHuman Readable Indexes\n~~~~~~~~~~~~~~~~~~~~~~\n\nBy default, the indexes are hashed. If you want to be able to debug\nthrough the AWS console, set ``human_readable_indexes`` to True:\n\n.. code:: python\n\n    nodb.human_readable_indexes = True\n\nCaching\n~~~~~~~\n\nYou can enable local file caching, which will store previously retrieved\nvalues in the local rather than remote filestore.\n\n.. code:: python\n\n    nodb.cache = True\n\nTODO (Maybe?)\n-------------\n\n-  **Tests** with Placebo\n-  **Python3** support\n-  Local file storage\n-  Quering ranges (numberic IDs only), etc.\n-  Different serializers\n-  Custom serializers\n-  Multiple indexes\n-  Compression\n-  Bucket management\n-  Pseudo-locking\n-  Performance/load testing\n\nRelated Projects\n----------------\n\n-  `Zappa <https://github.com/Miserlou/Zappa>`__ - Python's server-less\n   framework!\n-  `K.E.V. <https://github.com/capless/kev>`__ - a Python ORM for\n   key-value stores based on Redis, S3, and a S3/Redis hybrid backend.\n\nContributing\n------------\n\nThis project is still young, so there is still plenty to be done.\nContributions are more than welcome!\n\nPlease file tickets for discussion before submitting patches. Pull\nrequests should target ``master`` and should leave NoDB in a \"shippable\"\nstate if merged.\n\nIf you are adding a non-trivial amount of new code, please include a\nfunctioning test in your PR. For AWS calls, we use the ``placebo``\nlibrary, which you can learn to use `in their\nREADME <https://github.com/garnaat/placebo#usage-as-a-decorator>`__. The\ntest suite will be run by `Travis\nCI <https://travis-ci.org/Miserlou/NoDB>`__ once you open a pull\nrequest.\n\nPlease include the GitHub issue or pull request URL that has discussion\nrelated to your changes as a comment in the code\n(`example <https://github.com/Miserlou/Zappa/blob/fae2925431b820eaedf088a632022e4120a29f89/zappa/zappa.py#L241-L243>`__).\nThis greatly helps for project maintainability, as it allows us to trace\nback use cases and explain decision making.\n\nLicense\n-------\n\n(C) Rich Jones 2017, MIT License.\n\n.. raw:: html\n\n   <p align=\"center\">\n\n.. raw:: html\n\n   </p>\n\n.. |Build Status| image:: https://travis-ci.org/Miserlou/NoDB.svg\n   :target: https://travis-ci.org/Miserlou/NoDB\n.. |Coverage| image:: https://img.shields.io/coveralls/Miserlou/NoDB.svg\n   :target: https://coveralls.io/github/Miserlou/NoDB\n.. |PyPI| image:: https://img.shields.io/pypi/v/NoDB.svg\n   :target: https://pypi.python.org/pypi/nodb\n.. |Slack| image:: https://img.shields.io/badge/chat-slack-ff69b4.svg\n   :target: https://slack.zappa.io/\n.. |Gun.io| image:: https://img.shields.io/badge/made%20by-gun.io-blue.svg\n   :target: https://gun.io/\n.. |Patreon| image:: https://img.shields.io/badge/support-patreon-brightgreen.svg\n   :target: https://patreon.com/zappa\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Miserlou/NoDB", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "nodb", "package_url": "https://pypi.org/project/nodb/", "platform": "", "project_url": "https://pypi.org/project/nodb/", "project_urls": {"Homepage": "https://github.com/Miserlou/NoDB"}, "release_url": "https://pypi.org/project/nodb/0.3.2/", "requires_dist": null, "requires_python": "", "summary": "NoDB isn't a database.. but it sort of looks like one.", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            NoDB<br>====<br><br>|Build Status| |Coverage| |PyPI| |Slack| |Gun.io| |Patreon|<br><br>*NoDB isn't a database.. but it sort of looks like one!*<br><br>**NoDB** an incredibly simple, Pythonic object store based on Amazon's<br>S3 static file storage.<br><br>It's useful for **prototyping**, **casual hacking**, and (maybe) even<br>low-traffic **server-less backends** for<br>**`Zappa &lt;https://github.com/Miserlou/Zappa&gt;`__ apps**!<br><br>Features<br>--------<br><br>-  Schema-less!<br>-  Server-less!<br>-  Uses S3 as a datastore.<br>-  Loads to native Python objects with ``cPickle``<br>-  Can use JSON as a serialization format for untrusted data<br>-  Local filestore based caching<br>-  Cheap(ish)!<br>-  Fast(ish)! (Especially from Lambda)<br><br>Performance<br>-----------<br><br>Initial load test with `Goad &lt;https://goad.io/&gt;`__ of 10,000 requests<br>(500 concurrent) with a write and subsequent read of the same index<br>showed an average time of 400ms. This should be more than acceptable for<br>many applications, even those which don't have sparse data, although<br>that is preferred.<br><br>Installation<br>------------<br><br>**NoDB** can be installed easily via ``pip``, like so:<br><br>::<br><br>    $ pip install nodb<br><br>Warning!<br>--------<br><br>**NoDB** is **insecure by default**! Do not use it for untrusted data<br>before setting ``serializer`` to ``\"json\"``!<br><br>Usage<br>-----<br><br>**NoDB** is super easy to use!<br><br>You simply make a NoDB object, point it to your bucket and tell it what<br>field you want to index on.<br><br>.. code:: python<br><br>    from nodb import NoDB<br><br>    nodb = NoDB()<br>    nodb.bucket = \"my-s3-bucket\"<br>    nodb.index = \"name\"<br><br>After that, you can save and load literally anything you want, whenever<br>you want!<br><br>.. code:: python<br><br>    # Save an object!<br>    user = {\"name\": \"Jeff\", \"age\": 19}<br>    nodb.save(user) # True<br><br>    # Load our object!<br>    user = nodb.load(\"Jeff\")<br>    print user['age'] # 19<br><br>    # Delete our object<br>    nodb.delete(\"Jeff\") # True<br><br>By default, you can save and load any Python object.<br><br>Here's the same example, but with a class. Note the import and<br>configuration is the same!<br><br>.. code:: python<br><br>    class User(object):<br>        name = None<br>        age = None<br><br>        def print_name(self):<br>            print \"Hi, I'm \" + self.name + \"!\"<br><br>    new_user = User()<br>    new_user.name = \"Jeff\"<br>    new_user.age = 19<br>    nodb.save(new_user) # True<br><br>    jeff = nodb.load(\"Jeff\")<br>    jeff.print_name() # Hi, I'm Jeff!<br><br>Advanced Usage<br>--------------<br><br>Different Serializers<br>~~~~~~~~~~~~~~~~~~~~~<br><br>To use a safer, non-Pickle serializer, just set JSON as your serializer:<br><br>.. code:: python<br><br>    nodb = NoDB()<br>    nodb.serializer = \"json\"<br><br>Note that for this to work, your object must be JSON-serializable.<br><br>Object Metadata<br>~~~~~~~~~~~~~~~<br><br>You can get metainfo (datetime and UUID) for a given object by passing<br>``metainfo=True`` to ``load``, like so:<br><br>.. code:: python<br><br>    # Load our object and metainfo!<br>    user, datetime, uuid = nodb.load(\"Jeff\", metainfo=True)<br><br>You can also pass in a ``default`` argument for non-existent values.<br><br>.. code:: python<br><br>    user = nodb.load(\"Jeff\", default={}) # {}<br><br>Human Readable Indexes<br>~~~~~~~~~~~~~~~~~~~~~~<br><br>By default, the indexes are hashed. If you want to be able to debug<br>through the AWS console, set ``human_readable_indexes`` to True:<br><br>.. code:: python<br><br>    nodb.human_readable_indexes = True<br><br>Caching<br>~~~~~~~<br><br>You can enable local file caching, which will store previously retrieved<br>values in the local rather than remote filestore.<br><br>.. code:: python<br><br>    nodb.cache = True<br><br>TODO (Maybe?)<br>-------------<br><br>-  **Tests** with Placebo<br>-  **Python3** support<br>-  Local file storage<br>-  Quering ranges (numberic IDs only), etc.<br>-  Different serializers<br>-  Custom serializers<br>-  Multiple indexes<br>-  Compression<br>-  Bucket management<br>-  Pseudo-locking<br>-  Performance/load testing<br><br>Related Projects<br>----------------<br><br>-  `Zappa &lt;https://github.com/Miserlou/Zappa&gt;`__ - Python's server-less<br>   framework!<br>-  `K.E.V. &lt;https://github.com/capless/kev&gt;`__ - a Python ORM for<br>   key-value stores based on Redis, S3, and a S3/Redis hybrid backend.<br><br>Contributing<br>------------<br><br>This project is still young, so there is still plenty to be done.<br>Contributions are more than welcome!<br><br>Please file tickets for discussion before submitting patches. Pull<br>requests should target ``master`` and should leave NoDB in a \"shippable\"<br>state if merged.<br><br>If you are adding a non-trivial amount of new code, please include a<br>functioning test in your PR. For AWS calls, we use the ``placebo``<br>library, which you can learn to use `in their<br>README &lt;https://github.com/garnaat/placebo#usage-as-a-decorator&gt;`__. The<br>test suite will be run by `Travis<br>CI &lt;https://travis-ci.org/Miserlou/NoDB&gt;`__ once you open a pull<br>request.<br><br>Please include the GitHub issue or pull request URL that has discussion<br>related to your changes as a comment in the code<br>(`example &lt;https://github.com/Miserlou/Zappa/blob/fae2925431b820eaedf088a632022e4120a29f89/zappa/zappa.py#L241-L243&gt;`__).<br>This greatly helps for project maintainability, as it allows us to trace<br>back use cases and explain decision making.<br><br>License<br>-------<br><br>(C) Rich Jones 2017, MIT License.<br><br>.. raw:: html<br><br>   &lt;p align=\"center\"&gt;<br><br>.. raw:: html<br><br>   &lt;/p&gt;<br><br>.. |Build Status| image:: https://travis-ci.org/Miserlou/NoDB.svg<br>   :target: https://travis-ci.org/Miserlou/NoDB<br>.. |Coverage| image:: https://img.shields.io/coveralls/Miserlou/NoDB.svg<br>   :target: https://coveralls.io/github/Miserlou/NoDB<br>.. |PyPI| image:: https://img.shields.io/pypi/v/NoDB.svg<br>   :target: https://pypi.python.org/pypi/nodb<br>.. |Slack| image:: https://img.shields.io/badge/chat-slack-ff69b4.svg<br>   :target: https://slack.zappa.io/<br>.. |Gun.io| image:: https://img.shields.io/badge/made%20by-gun.io-blue.svg<br>   :target: https://gun.io/<br>.. |Patreon| image:: https://img.shields.io/badge/support-patreon-brightgreen.svg<br>   :target: https://patreon.com/zappa<br>\n          </div>"}, "last_serial": 3203733, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "8c7068d69d034fda22039ca21c26e2fb", "sha256": "e6b6996107e2670364018b51fcb9de588fbfcd492d597fc7c234aab703ce82fd"}, "downloads": -1, "filename": "nodb-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "8c7068d69d034fda22039ca21c26e2fb", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7864, "upload_time": "2017-04-09T22:31:19", "upload_time_iso_8601": "2017-04-09T22:31:19.588553Z", "url": "https://files.pythonhosted.org/packages/68/ca/79687f8516109a1793dec783ae3acc74e236d7f31fcbca17db03c88f200d/nodb-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1660d3ed52055912d8d063513f3bf68", "sha256": "d0c125d652b5c0c6eacac3d7778eac062ba7c8ca7c64d324971faa3f325c5073"}, "downloads": -1, "filename": "nodb-0.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "c1660d3ed52055912d8d063513f3bf68", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7959, "upload_time": "2017-04-09T23:02:41", "upload_time_iso_8601": "2017-04-09T23:02:41.222776Z", "url": "https://files.pythonhosted.org/packages/64/7c/7e6e77249561775d3d1c3e7c8ce55a1518e32a87383d51408f05ec735d05/nodb-0.1.1-py2-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "50148f64aed02e8ee7c57615adb28f06", "sha256": "aa41e226177c1e99c7839c2f85ad9c9a2d61f2661e570d10d63efebc134c78c4"}, "downloads": -1, "filename": "nodb-0.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "50148f64aed02e8ee7c57615adb28f06", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 8238, "upload_time": "2017-04-10T02:13:31", "upload_time_iso_8601": "2017-04-10T02:13:31.218418Z", "url": "https://files.pythonhosted.org/packages/9c/ad/6fee583208357bcb6bb6c15dabeec5d91567613b90d3dee20ac69990c35a/nodb-0.2.0-py2-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "d15e1dd78a85ecb7714f0bdc6231749f", "sha256": "a2ddb64e82eec3879bb6ac54abb6c4a4fc5d6ae54aaa0a2809ba7e59687d85cf"}, "downloads": -1, "filename": "nodb-0.2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "d15e1dd78a85ecb7714f0bdc6231749f", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 8591, "upload_time": "2017-04-10T04:26:00", "upload_time_iso_8601": "2017-04-10T04:26:00.244855Z", "url": "https://files.pythonhosted.org/packages/95/98/a183b6d755f69a6f826bd9c07c01e08fa35f6fbaf29352437dba1097768e/nodb-0.2.1-py2-none-any.whl", "yanked": false}], "0.2.1": [], "0.2.2": [{"comment_text": "", "digests": {"md5": "1ca32496fd0e5508c5ad772ae79aad9c", "sha256": "441ceec36a60255e7c09d33063ee550e33c9f9d7c528ddd7bc824e2842c6efca"}, "downloads": -1, "filename": "nodb-0.2.2-py2-none-any.whl", "has_sig": false, "md5_digest": "1ca32496fd0e5508c5ad772ae79aad9c", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 8751, "upload_time": "2017-08-24T15:20:16", "upload_time_iso_8601": "2017-08-24T15:20:16.909321Z", "url": "https://files.pythonhosted.org/packages/5b/38/46c9f755c927571a5ee24e8e9dd298d7a1b7d05ba8ad5e2c3bd7122963c5/nodb-0.2.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "efcb4ebca57b06c05dc8b84da4b9c022", "sha256": "a0c89768ef41696f0ae9d2e36105de17e44dcd4e02bc83d53dfecea483de07c0"}, "downloads": -1, "filename": "nodb-0.2.2.tar.gz", "has_sig": false, "md5_digest": "efcb4ebca57b06c05dc8b84da4b9c022", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6324, "upload_time": "2017-08-24T15:20:15", "upload_time_iso_8601": "2017-08-24T15:20:15.560363Z", "url": "https://files.pythonhosted.org/packages/d2/7c/124645e27bf051878efc5619eb20774a74d8416baeb219ecf91119faeb43/nodb-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "aac9ef2a4e8aed17ef40b136b48ea735", "sha256": "64bd97cc5d2b4b1980906dac5a79acf9a33445a0e6d13073ac0a2956713ce24b"}, "downloads": -1, "filename": "nodb-0.3.0-py2-none-any.whl", "has_sig": false, "md5_digest": "aac9ef2a4e8aed17ef40b136b48ea735", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9604, "upload_time": "2017-09-20T11:08:49", "upload_time_iso_8601": "2017-09-20T11:08:49.693004Z", "url": "https://files.pythonhosted.org/packages/e6/21/58594beeee144d3bd82a72cd08ffd769f1fa8b6d319ea4f6d236a689552e/nodb-0.3.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e62da28ab2ce212f625d7daf2234489", "sha256": "b537d359f38dca9a90b11b6cd81a1c791f1ddf371b28dcac12bffcf29ee7281d"}, "downloads": -1, "filename": "nodb-0.3.0.tar.gz", "has_sig": false, "md5_digest": "3e62da28ab2ce212f625d7daf2234489", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6968, "upload_time": "2017-09-20T11:08:47", "upload_time_iso_8601": "2017-09-20T11:08:47.697079Z", "url": "https://files.pythonhosted.org/packages/6f/35/55ac326f28ef76c04846573a10b16af34431a7cf41d9c3e32733bae6b234/nodb-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "2cbbcb43c52447a38e98322656b4937e", "sha256": "13ebc6367888cb83d35b2f51c876ff7d569031c64caff6b054d705bc85a3671e"}, "downloads": -1, "filename": "nodb-0.3.1-py2-none-any.whl", "has_sig": false, "md5_digest": "2cbbcb43c52447a38e98322656b4937e", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9711, "upload_time": "2017-09-20T13:34:01", "upload_time_iso_8601": "2017-09-20T13:34:01.503281Z", "url": "https://files.pythonhosted.org/packages/ae/94/bc56e2972362a53e58dab6f1c413b8344a2dcabea22e4e19ceeb823fbb09/nodb-0.3.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b363bc5eb671071a0b8c406c1f129e7c", "sha256": "f43f216a68ba4a76c6013d35def4ff383c051925b36927d94030c12dea15355d"}, "downloads": -1, "filename": "nodb-0.3.1.tar.gz", "has_sig": false, "md5_digest": "b363bc5eb671071a0b8c406c1f129e7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7035, "upload_time": "2017-09-20T13:33:58", "upload_time_iso_8601": "2017-09-20T13:33:58.623478Z", "url": "https://files.pythonhosted.org/packages/63/78/88a525b9f116c6b906884345c02b7897aa4ddaa27f1846f834cd34179729/nodb-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "ec6c078be307d692e3b95d718de46d6b", "sha256": "35b083833df961df2d15e614fa5f918da5ba967c52047843a048dcf0fc607f68"}, "downloads": -1, "filename": "nodb-0.3.2-py2-none-any.whl", "has_sig": false, "md5_digest": "ec6c078be307d692e3b95d718de46d6b", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9886, "upload_time": "2017-09-26T11:41:29", "upload_time_iso_8601": "2017-09-26T11:41:29.646061Z", "url": "https://files.pythonhosted.org/packages/80/29/4dcf89acecac031767a1e46f4527153d306643fbd30d0305da4a4dbd1813/nodb-0.3.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d7fc3a5f16d53c8a214094337941fc07", "sha256": "b34839673f19dbf3eed1ef5d42f326aae9388f77dd965630b80bf90555ed6705"}, "downloads": -1, "filename": "nodb-0.3.2.tar.gz", "has_sig": false, "md5_digest": "d7fc3a5f16d53c8a214094337941fc07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7167, "upload_time": "2017-09-26T11:41:27", "upload_time_iso_8601": "2017-09-26T11:41:27.935430Z", "url": "https://files.pythonhosted.org/packages/62/4c/2d778cdab279e89291a9769feed61a2b6d6eb52fccba334bb6357300f394/nodb-0.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ec6c078be307d692e3b95d718de46d6b", "sha256": "35b083833df961df2d15e614fa5f918da5ba967c52047843a048dcf0fc607f68"}, "downloads": -1, "filename": "nodb-0.3.2-py2-none-any.whl", "has_sig": false, "md5_digest": "ec6c078be307d692e3b95d718de46d6b", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9886, "upload_time": "2017-09-26T11:41:29", "upload_time_iso_8601": "2017-09-26T11:41:29.646061Z", "url": "https://files.pythonhosted.org/packages/80/29/4dcf89acecac031767a1e46f4527153d306643fbd30d0305da4a4dbd1813/nodb-0.3.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d7fc3a5f16d53c8a214094337941fc07", "sha256": "b34839673f19dbf3eed1ef5d42f326aae9388f77dd965630b80bf90555ed6705"}, "downloads": -1, "filename": "nodb-0.3.2.tar.gz", "has_sig": false, "md5_digest": "d7fc3a5f16d53c8a214094337941fc07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7167, "upload_time": "2017-09-26T11:41:27", "upload_time_iso_8601": "2017-09-26T11:41:27.935430Z", "url": "https://files.pythonhosted.org/packages/62/4c/2d778cdab279e89291a9769feed61a2b6d6eb52fccba334bb6357300f394/nodb-0.3.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:00 2020"}