{"info": {"author": "Stanislaw Bogatkin", "author_email": "sbog@sbog.ru", "bugtrack_url": null, "classifiers": ["Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3"], "description": "# Keefind\n\n## What it is\n\nKeefind is a simple utility to search in keepass database. I wrote it to be\nable to easy search for password and copy it to clipboard.\n\n## Installation\n\nJust install latest version from PyPi:\n\n```\n> pip install keefind\n```\n\n## Usage\n\nTo use keefind you need to export couple environment variables:\n\n```\n> export KP_DATABASE=/path/to/keepass/database\n> export KP_PASSWORD_FILE=/path/to/file/with/password/to/database\n```\n\nLatter variable is a path to file which has to have one line with password\nto according keepass database.\n\nAfter that you can just start to use keefind.\n\n## Examples\n\nIf you need just get a password and more or less remember the structure of\nyour database, you can search for exact variable. Let's say you have group\nnamed 'Personal' which consist of groups 'Sites' and 'Banking'. Group 'Sites'\nhas entry named 'github.com' in it with user 'xxx' and password 'yyy'. To get\nthe password you can call any of next commands\n\n```\n> kf pers gith\nyyy\n\n> kf sit xxx\nyyy\n\n> kf pers sit github.com xxx\nyyy\n\n> kf pers yy\nyyy\n\n> kf xxx\nyyy\n```\n\nSo basically under the hood keefind will get all arguments you passed to\nit and will try to find an entry which has all of these arguments in path,\nname, site, username or password fields. So in case you pass 'xxx' as an\nargument, it will show you all found results which have 'xxx' in them. If\nyou will pass 'xxx zzz', it will show you all found results which have\n**both** xxx **and*** zzz in them.\n\nThere is just one available option you can use - '-v' to get more verbose\noutput. Here is how to use it:\n\n```\n> kf -v xxx\nPersonal/Sites - github.com\nyyy\n\n> kf -v xxx | xsel -b -i\nPersonal/Sites - github.com\n\n> # Now your password for github is copied to clipboard. That's the trick,\n> # cause in case of single '-v' option passwords copied to stdout but all\n> # other info - to stderr, which allows you to pipe output with password(s)\n\n> kf -vv xxx\n{'group': 'Personal/Sites',\n 'password': 'yyy',\n 'username': 'xxx'}\n\n> kf -vvv xxx\n{'group': 'Personal/Sites',\n 'password': 'yyy',\n 'title': 'github.com',\n 'url': None,\n 'username': 'xxx'}\n ```\n\nThat's mostly it, nothing more. Improvements and bugfixes are welcomed.\n\n## Author\n\nStanislaw Bogatkin (https://sbog.ru).", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "keefind", "package_url": "https://pypi.org/project/keefind/", "platform": "", "project_url": "https://pypi.org/project/keefind/", "project_urls": null, "release_url": "https://pypi.org/project/keefind/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Utility to easy find in keepass database", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Keefind<br><br>## What it is<br><br>Keefind is a simple utility to search in keepass database. I wrote it to be<br>able to easy search for password and copy it to clipboard.<br><br>## Installation<br><br>Just install latest version from PyPi:<br><br>```<br>&gt; pip install keefind<br>```<br><br>## Usage<br><br>To use keefind you need to export couple environment variables:<br><br>```<br>&gt; export KP_DATABASE=/path/to/keepass/database<br>&gt; export KP_PASSWORD_FILE=/path/to/file/with/password/to/database<br>```<br><br>Latter variable is a path to file which has to have one line with password<br>to according keepass database.<br><br>After that you can just start to use keefind.<br><br>## Examples<br><br>If you need just get a password and more or less remember the structure of<br>your database, you can search for exact variable. Let's say you have group<br>named 'Personal' which consist of groups 'Sites' and 'Banking'. Group 'Sites'<br>has entry named 'github.com' in it with user 'xxx' and password 'yyy'. To get<br>the password you can call any of next commands<br><br>```<br>&gt; kf pers gith<br>yyy<br><br>&gt; kf sit xxx<br>yyy<br><br>&gt; kf pers sit github.com xxx<br>yyy<br><br>&gt; kf pers yy<br>yyy<br><br>&gt; kf xxx<br>yyy<br>```<br><br>So basically under the hood keefind will get all arguments you passed to<br>it and will try to find an entry which has all of these arguments in path,<br>name, site, username or password fields. So in case you pass 'xxx' as an<br>argument, it will show you all found results which have 'xxx' in them. If<br>you will pass 'xxx zzz', it will show you all found results which have<br>**both** xxx **and*** zzz in them.<br><br>There is just one available option you can use - '-v' to get more verbose<br>output. Here is how to use it:<br><br>```<br>&gt; kf -v xxx<br>Personal/Sites - github.com<br>yyy<br><br>&gt; kf -v xxx | xsel -b -i<br>Personal/Sites - github.com<br><br>&gt; # Now your password for github is copied to clipboard. That's the trick,<br>&gt; # cause in case of single '-v' option passwords copied to stdout but all<br>&gt; # other info - to stderr, which allows you to pipe output with password(s)<br><br>&gt; kf -vv xxx<br>{'group': 'Personal/Sites',<br> 'password': 'yyy',<br> 'username': 'xxx'}<br><br>&gt; kf -vvv xxx<br>{'group': 'Personal/Sites',<br> 'password': 'yyy',<br> 'title': 'github.com',<br> 'url': None,<br> 'username': 'xxx'}<br> ```<br><br>That's mostly it, nothing more. Improvements and bugfixes are welcomed.<br><br>## Author<br><br>Stanislaw Bogatkin (https://sbog.ru).\n          </div>"}, "last_serial": 4941584, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "37675ecbee0a5e7c8b4431ac6dcae03f", "sha256": "e346d0dd3d236e20937218dad7bf04c8da1c0833ddb8aa9de38a5ece2fbb56b3"}, "downloads": -1, "filename": "keefind-0.1.0.tar.gz", "has_sig": false, "md5_digest": "37675ecbee0a5e7c8b4431ac6dcae03f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4773, "upload_time": "2019-03-14T20:55:13", "upload_time_iso_8601": "2019-03-14T20:55:13.834744Z", "url": "https://files.pythonhosted.org/packages/20/9b/3a9923e561581aa9a71cec1d6213a443534f23ec9fda79c6e3ee05291d0a/keefind-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "37675ecbee0a5e7c8b4431ac6dcae03f", "sha256": "e346d0dd3d236e20937218dad7bf04c8da1c0833ddb8aa9de38a5ece2fbb56b3"}, "downloads": -1, "filename": "keefind-0.1.0.tar.gz", "has_sig": false, "md5_digest": "37675ecbee0a5e7c8b4431ac6dcae03f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4773, "upload_time": "2019-03-14T20:55:13", "upload_time_iso_8601": "2019-03-14T20:55:13.834744Z", "url": "https://files.pythonhosted.org/packages/20/9b/3a9923e561581aa9a71cec1d6213a443534f23ec9fda79c6e3ee05291d0a/keefind-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:23 2020"}