{"info": {"author": "Oleksandr Sakhnevych", "author_email": "o.sakhnevych@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "=============\nCalendar View\n=============\n\nLibrary provides a graphical view of the calendar. View, title and events can be easily configured.\n\nThe output in ``*.png`` file.\n\n\nInput parameters\n================\n\nConfiguration\n-------------\n\nConfiguration for the all view can be done using ``CalendarConfig`` class.\n\n.. csv-table::\n   :header: \"Parameter\", \"Type\", \"Description\"\n   :widths: 17, 10, 73\n\n   ``lang``, str, \"Language, which is used for name of the weekday. Supported values: en, ru, ua. Default value: **en**\"\n   ``title``, str, \"Title of the view. Can be empty\"\n   ``dates``, str, \"The range of the days to show. Default value: **'Mo - Su'**\"\n   ``days``, int, \"If ``dates`` does not exist, the number of days to display can be configured starting from Monday. For example, '4' means ``dates='Mo - Th'``\"\n   ``hours``, str, \"Hour range to display\"\n   ``mode``, str, \"Mode will override some parameters. Available modes:\n    - 'week' - show current week\n    - 'day_hours' - show hours range '8:00 - 22:00'\n    - 'working_hours' - show hours range '8:00 - 19:00'\n    - 'auto' - modes 'week' + 'day_hours'\"\n   ``show_date``, bool, \"Defines is the date has to be shown. Format: ``'dd.mm'`` or ``'dd.mm.YYYY'`` if ``show_year=True``. Default value: **True**\"\n   ``show_year``, bool, \"Defines is the year has to be added to the date format. Omitted if ``show_date=False``. Default value: **False**\"\n   ``legend``, bool, \"If ``False`` - draw the name of the event inside the block. If ``True`` - draw the name in the legend. If not defined, will be chosen automatically.\"\n\nExample:\n\n.. code-block:: python\n\n    config = CalendarConfig(\n        lang='en',\n        title='Yoga Class Schedule',\n        dates='Mo - Fr',\n        hours='8 - 22',\n        mode=None,\n        show_date=True,\n        show_year=False,\n        legend=True,\n    )\n\n    # you can validate your config\n    validate_config(config)\n\n\nEvent\n-----\n\n.. csv-table::\n   :header: \"Parameter\", \"Type\", \"Description\"\n   :widths: 20, 10, 70\n\n   ``name``, str, \"Language, which is used for name of the weekday. Supported values: en, ru, ua\"\n   ``day``, str, \"Title of the view. Can be empty\"\n   ``day_of_week``, int, \"The range of the days to show.\"\n   ``start_time``, str, \"Start of the event in format **HH:mm** or **HH**. Can't be used together with ``interval``.\"\n   ``end_time``, str, \"End of the event in format **HH:mm** or **HH**. Can't be used together with ``interval``.\"\n   ``interval``, str, \"Start and end of the event in format **HH:mm - HH:mm** or **HH - HH**. Can't be used together with ``start_time`` and ``end_time``.\"\n\n\nDates\n-----\n\nThe date can be defines using next rules.\n\n1. Allowed year range: [1900, 2100]\n\n2. Any delimiter from the list can be used:\n\n    * ``-``\n\n    * ``.``\n\n    * ``/``\n\n3. Allowed formats:\n\n    * ``YYYY.mm.dd``\n\n    * ``dd.mm.YYYY``\n\n    * ``dd.mm.YY`` - will use 20th century\n\n    * ``dd.mm`` - for the current year\n\n\nAs an example, let's look for example at the same data in all formats (assume, that current year is 2019):\n\n* 2019-06-21\n* 21.06.2019\n* 21/06/19\n* 21/06\n\n\nExamples\n========\n\n1. Basic usage\n--------------\n\nMost basic and simplest usage. Doesn't have configuration.\n\nCode:\n\n.. code-block:: python\n\n    from calendar_view.core import data\n    from calendar_view.calendar import Calendar\n\n    calendar = Calendar.build()\n    calendar.add_event(data.event(day_of_week=0, interval='08:00 - 17:00'))\n    calendar.add_event(data.event(day_of_week=5, interval='10:00 - 13:00'))\n    calendar.add_event(data.event(day_of_week=6, interval='15:00 - 18:00'))\n    calendar.save(\"simple_view.png\")\n\nOutput:\n\n.. image:: https://raw.githubusercontent.com/sakhnevych/CalendarView/master/docs/simple_view.png\n    :target: https://raw.githubusercontent.com/sakhnevych/CalendarView/master/docs/simple_view.png\n    :width: 600 px\n    :align: center\n\n2. Configuration and specific dates\n-----------------------------------\n\nView for one script. Configuration object and events with specific dates are used.\n\nCode:\n\n.. code-block:: python\n\n    from calendar_view.core import data\n    from calendar_view.calendar import Calendar\n\n    config = data.CalendarConfig(\n        lang='en',\n        title='Sprint 23',\n        dates='2019-09-23 - 2019-09-27',\n        show_year=True,\n        mode='working_hours',\n        legend=False,\n    )\n    events = [\n        data.event('Planning', date='2019-09-23', interval='11:00 - 13:00'),\n        data.event('Demo', date='2019-09-27', interval='15:00 - 16:00'),\n        data.event('Retrospective', date='2019-09-27', interval='17:00 - 18:00'),\n    ]\n\n    data.validate_config(config)\n    data.validate_events(events, config)\n\n    calendar = Calendar.build(config)\n    calendar.add_events(events)\n    calendar.save(\"sprint_23.png\")\n\n\nOutput:\n\n.. image:: https://raw.githubusercontent.com/sakhnevych/CalendarView/master/docs/sprint_23.png\n    :target: https://raw.githubusercontent.com/sakhnevych/CalendarView/master/docs/sprint_23.png\n    :width: 600 px\n    :align: center\n\n\n3. Legend view\n--------------\n\nIf the name of event is too long, it can ee printed in the legend.\n\nCode::\n\n    from calendar_view.core import data\n    from calendar_view.core.config import CalendarConfig\n    from calendar_view.core.data import event\n    from calendar_view.calendar import Calendar\n\n    config = CalendarConfig(\n        lang='en',\n        title='Yoga Class Schedule',\n        dates='Mo - Su',\n        hours='8 - 22',\n        show_date=False,\n        legend=True,\n    )\n    events = [\n        event(day_of_week=0, interval='11:00 - 12:30', name='Ashtanga, 90 mins, with Gina'),\n        event(day_of_week=1, interval='18:00 - 19:15', name='HOT Core Yoga, 75 mins, with David'),\n        event(day_of_week=2, interval='09:00 - 10:00', name='Meditation - Yoga Nidra, 60 mins, with Heena'),\n        event(day_of_week=2, interval='19:00 - 20:15', name='Hatha Yoga, 75 mins, with Jo'),\n        event(day_of_week=3, interval='19:00 - 20:00', name='Pilates, 60 mins, with Erika'),\n        event(day_of_week=4, interval='18:30 - 20:00', name='Kundalini Yoga, 90 mins, with Dan'),\n        event(day_of_week=5, interval='10:00 - 11:15', name='Hatha Yoga, 75 mins, with Amelia'),\n        event(day_of_week=6, interval='10:00 - 11:15', name='Yoga Open, 75 mins, with Klaudia'),\n        event(day_of_week=6, interval='14:00 - 15:15', name='Hatha Yoga, 75 mins, with Vick'),\n    ]\n\n    data.validate_config(config)\n    data.validate_events(events, config)\n\n    calendar = Calendar.build(config)\n    calendar.add_events(events)\n    calendar.save(\"yoga_class.png\")\n\n\nOutput:\n\n.. image:: https://raw.githubusercontent.com/sakhnevych/CalendarView/master/docs/yoga_class.png\n    :target: https://raw.githubusercontent.com/sakhnevych/CalendarView/master/docs/yoga_class.png\n    :width: 600 px\n    :align: center\n\n\nLicense\n=======\n\nCalendarView is licensed under a MIT license. Please see the `LICENSE <LICENSE.rst>`_ file for details.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sakhnevych/CalendarView", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "calendar-view", "package_url": "https://pypi.org/project/calendar-view/", "platform": "", "project_url": "https://pypi.org/project/calendar-view/", "project_urls": {"Homepage": "https://github.com/sakhnevych/CalendarView"}, "release_url": "https://pypi.org/project/calendar-view/1.0.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Library provides a graphical view of the calendar.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Library provides a graphical view of the calendar. View, title and events can be easily configured.</p>\n<p>The output in <tt>*.png</tt> file.</p>\n<div id=\"input-parameters\">\n<h2>Input parameters</h2>\n<div id=\"configuration\">\n<h3>Configuration</h3>\n<p>Configuration for the all view can be done using <tt>CalendarConfig</tt> class.</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Parameter</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>lang</tt></td>\n<td>str</td>\n<td>Language, which is used for name of the weekday. Supported values: en, ru, ua. Default value: <strong>en</strong></td>\n</tr>\n<tr><td><tt>title</tt></td>\n<td>str</td>\n<td>Title of the view. Can be empty</td>\n</tr>\n<tr><td><tt>dates</tt></td>\n<td>str</td>\n<td>The range of the days to show. Default value: <strong>\u2018Mo - Su\u2019</strong></td>\n</tr>\n<tr><td><tt>days</tt></td>\n<td>int</td>\n<td>If <tt>dates</tt> does not exist, the number of days to display can be configured starting from Monday. For example, \u20184\u2019 means <tt><span class=\"pre\">dates='Mo</span> - Th'</tt></td>\n</tr>\n<tr><td><tt>hours</tt></td>\n<td>str</td>\n<td>Hour range to display</td>\n</tr>\n<tr><td><tt>mode</tt></td>\n<td>str</td>\n<td><dl>\n<dt>Mode will override some parameters. Available modes:</dt>\n<dd><ul>\n<li>\u2018week\u2019 - show current week</li>\n<li>\u2018day_hours\u2019 - show hours range \u20188:00 - 22:00\u2019</li>\n<li>\u2018working_hours\u2019 - show hours range \u20188:00 - 19:00\u2019</li>\n<li>\u2018auto\u2019 - modes \u2018week\u2019 + \u2018day_hours\u2019</li>\n</ul>\n</dd>\n</dl>\n</td>\n</tr>\n<tr><td><tt>show_date</tt></td>\n<td>bool</td>\n<td>Defines is the date has to be shown. Format: <tt>'dd.mm'</tt> or <tt>'dd.mm.YYYY'</tt> if <tt>show_year=True</tt>. Default value: <strong>True</strong></td>\n</tr>\n<tr><td><tt>show_year</tt></td>\n<td>bool</td>\n<td>Defines is the year has to be added to the date format. Omitted if <tt>show_date=False</tt>. Default value: <strong>False</strong></td>\n</tr>\n<tr><td><tt>legend</tt></td>\n<td>bool</td>\n<td>If <tt>False</tt> - draw the name of the event inside the block. If <tt>True</tt> - draw the name in the legend. If not defined, will be chosen automatically.</td>\n</tr>\n</tbody>\n</table>\n<p>Example:</p>\n<pre><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">CalendarConfig</span><span class=\"p\">(</span>\n    <span class=\"n\">lang</span><span class=\"o\">=</span><span class=\"s1\">'en'</span><span class=\"p\">,</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">'Yoga Class Schedule'</span><span class=\"p\">,</span>\n    <span class=\"n\">dates</span><span class=\"o\">=</span><span class=\"s1\">'Mo - Fr'</span><span class=\"p\">,</span>\n    <span class=\"n\">hours</span><span class=\"o\">=</span><span class=\"s1\">'8 - 22'</span><span class=\"p\">,</span>\n    <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">show_date</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">show_year</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">legend</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># you can validate your config</span>\n<span class=\"n\">validate_config</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"event\">\n<h3>Event</h3>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Parameter</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>name</tt></td>\n<td>str</td>\n<td>Language, which is used for name of the weekday. Supported values: en, ru, ua</td>\n</tr>\n<tr><td><tt>day</tt></td>\n<td>str</td>\n<td>Title of the view. Can be empty</td>\n</tr>\n<tr><td><tt>day_of_week</tt></td>\n<td>int</td>\n<td>The range of the days to show.</td>\n</tr>\n<tr><td><tt>start_time</tt></td>\n<td>str</td>\n<td>Start of the event in format <strong>HH:mm</strong> or <strong>HH</strong>. Can\u2019t be used together with <tt>interval</tt>.</td>\n</tr>\n<tr><td><tt>end_time</tt></td>\n<td>str</td>\n<td>End of the event in format <strong>HH:mm</strong> or <strong>HH</strong>. Can\u2019t be used together with <tt>interval</tt>.</td>\n</tr>\n<tr><td><tt>interval</tt></td>\n<td>str</td>\n<td>Start and end of the event in format <strong>HH:mm - HH:mm</strong> or <strong>HH - HH</strong>. Can\u2019t be used together with <tt>start_time</tt> and <tt>end_time</tt>.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"dates\">\n<h3>Dates</h3>\n<p>The date can be defines using next rules.</p>\n<ol>\n<li><p>Allowed year range: [1900, 2100]</p>\n</li>\n<li><p>Any delimiter from the list can be used:</p>\n<blockquote>\n<ul>\n<li><tt>-</tt></li>\n<li><tt>.</tt></li>\n<li><tt>/</tt></li>\n</ul>\n</blockquote>\n</li>\n<li><p>Allowed formats:</p>\n<blockquote>\n<ul>\n<li><tt>YYYY.mm.dd</tt></li>\n<li><tt>dd.mm.YYYY</tt></li>\n<li><tt>dd.mm.YY</tt> - will use 20th century</li>\n<li><tt>dd.mm</tt> - for the current year</li>\n</ul>\n</blockquote>\n</li>\n</ol>\n<p>As an example, let\u2019s look for example at the same data in all formats (assume, that current year is 2019):</p>\n<ul>\n<li>2019-06-21</li>\n<li>21.06.2019</li>\n<li>21/06/19</li>\n<li>21/06</li>\n</ul>\n</div>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<div id=\"basic-usage\">\n<h3>1. Basic usage</h3>\n<p>Most basic and simplest usage. Doesn\u2019t have configuration.</p>\n<p>Code:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">calendar_view.core</span> <span class=\"kn\">import</span> <span class=\"n\">data</span>\n<span class=\"kn\">from</span> <span class=\"nn\">calendar_view.calendar</span> <span class=\"kn\">import</span> <span class=\"n\">Calendar</span>\n\n<span class=\"n\">calendar</span> <span class=\"o\">=</span> <span class=\"n\">Calendar</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n<span class=\"n\">calendar</span><span class=\"o\">.</span><span class=\"n\">add_event</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"p\">(</span><span class=\"n\">day_of_week</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s1\">'08:00 - 17:00'</span><span class=\"p\">))</span>\n<span class=\"n\">calendar</span><span class=\"o\">.</span><span class=\"n\">add_event</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"p\">(</span><span class=\"n\">day_of_week</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s1\">'10:00 - 13:00'</span><span class=\"p\">))</span>\n<span class=\"n\">calendar</span><span class=\"o\">.</span><span class=\"n\">add_event</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"p\">(</span><span class=\"n\">day_of_week</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s1\">'15:00 - 18:00'</span><span class=\"p\">))</span>\n<span class=\"n\">calendar</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s2\">\"simple_view.png\"</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<a href=\"https://raw.githubusercontent.com/sakhnevych/CalendarView/master/docs/simple_view.png\" rel=\"nofollow\"><img alt=\"https://raw.githubusercontent.com/sakhnevych/CalendarView/master/docs/simple_view.png\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f00e4f94466e2da346208ab3f61a1fab6eac4c83/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f73616b686e65767963682f43616c656e646172566965772f6d61737465722f646f63732f73696d706c655f766965772e706e67\" width=\"600px\"></a>\n</div>\n<div id=\"configuration-and-specific-dates\">\n<h3>2. Configuration and specific dates</h3>\n<p>View for one script. Configuration object and events with specific dates are used.</p>\n<p>Code:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">calendar_view.core</span> <span class=\"kn\">import</span> <span class=\"n\">data</span>\n<span class=\"kn\">from</span> <span class=\"nn\">calendar_view.calendar</span> <span class=\"kn\">import</span> <span class=\"n\">Calendar</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">CalendarConfig</span><span class=\"p\">(</span>\n    <span class=\"n\">lang</span><span class=\"o\">=</span><span class=\"s1\">'en'</span><span class=\"p\">,</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">'Sprint 23'</span><span class=\"p\">,</span>\n    <span class=\"n\">dates</span><span class=\"o\">=</span><span class=\"s1\">'2019-09-23 - 2019-09-27'</span><span class=\"p\">,</span>\n    <span class=\"n\">show_year</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">'working_hours'</span><span class=\"p\">,</span>\n    <span class=\"n\">legend</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">events</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"p\">(</span><span class=\"s1\">'Planning'</span><span class=\"p\">,</span> <span class=\"n\">date</span><span class=\"o\">=</span><span class=\"s1\">'2019-09-23'</span><span class=\"p\">,</span> <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s1\">'11:00 - 13:00'</span><span class=\"p\">),</span>\n    <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"p\">(</span><span class=\"s1\">'Demo'</span><span class=\"p\">,</span> <span class=\"n\">date</span><span class=\"o\">=</span><span class=\"s1\">'2019-09-27'</span><span class=\"p\">,</span> <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s1\">'15:00 - 16:00'</span><span class=\"p\">),</span>\n    <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"p\">(</span><span class=\"s1\">'Retrospective'</span><span class=\"p\">,</span> <span class=\"n\">date</span><span class=\"o\">=</span><span class=\"s1\">'2019-09-27'</span><span class=\"p\">,</span> <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s1\">'17:00 - 18:00'</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">validate_config</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">validate_events</span><span class=\"p\">(</span><span class=\"n\">events</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">)</span>\n\n<span class=\"n\">calendar</span> <span class=\"o\">=</span> <span class=\"n\">Calendar</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"n\">calendar</span><span class=\"o\">.</span><span class=\"n\">add_events</span><span class=\"p\">(</span><span class=\"n\">events</span><span class=\"p\">)</span>\n<span class=\"n\">calendar</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s2\">\"sprint_23.png\"</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<a href=\"https://raw.githubusercontent.com/sakhnevych/CalendarView/master/docs/sprint_23.png\" rel=\"nofollow\"><img alt=\"https://raw.githubusercontent.com/sakhnevych/CalendarView/master/docs/sprint_23.png\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b9cb63bb5666bbbd14b552a22cf99beee518e8fc/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f73616b686e65767963682f43616c656e646172566965772f6d61737465722f646f63732f737072696e745f32332e706e67\" width=\"600px\"></a>\n</div>\n<div id=\"legend-view\">\n<h3>3. Legend view</h3>\n<p>If the name of event is too long, it can ee printed in the legend.</p>\n<p>Code:</p>\n<pre>from calendar_view.core import data\nfrom calendar_view.core.config import CalendarConfig\nfrom calendar_view.core.data import event\nfrom calendar_view.calendar import Calendar\n\nconfig = CalendarConfig(\n    lang='en',\n    title='Yoga Class Schedule',\n    dates='Mo - Su',\n    hours='8 - 22',\n    show_date=False,\n    legend=True,\n)\nevents = [\n    event(day_of_week=0, interval='11:00 - 12:30', name='Ashtanga, 90 mins, with Gina'),\n    event(day_of_week=1, interval='18:00 - 19:15', name='HOT Core Yoga, 75 mins, with David'),\n    event(day_of_week=2, interval='09:00 - 10:00', name='Meditation - Yoga Nidra, 60 mins, with Heena'),\n    event(day_of_week=2, interval='19:00 - 20:15', name='Hatha Yoga, 75 mins, with Jo'),\n    event(day_of_week=3, interval='19:00 - 20:00', name='Pilates, 60 mins, with Erika'),\n    event(day_of_week=4, interval='18:30 - 20:00', name='Kundalini Yoga, 90 mins, with Dan'),\n    event(day_of_week=5, interval='10:00 - 11:15', name='Hatha Yoga, 75 mins, with Amelia'),\n    event(day_of_week=6, interval='10:00 - 11:15', name='Yoga Open, 75 mins, with Klaudia'),\n    event(day_of_week=6, interval='14:00 - 15:15', name='Hatha Yoga, 75 mins, with Vick'),\n]\n\ndata.validate_config(config)\ndata.validate_events(events, config)\n\ncalendar = Calendar.build(config)\ncalendar.add_events(events)\ncalendar.save(\"yoga_class.png\")\n</pre>\n<p>Output:</p>\n<a href=\"https://raw.githubusercontent.com/sakhnevych/CalendarView/master/docs/yoga_class.png\" rel=\"nofollow\"><img alt=\"https://raw.githubusercontent.com/sakhnevych/CalendarView/master/docs/yoga_class.png\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2ccf1fd755cb53c3b3ec293f6a0b2ee87b6ea828/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f73616b686e65767963682f43616c656e646172566965772f6d61737465722f646f63732f796f67615f636c6173732e706e67\" width=\"600px\"></a>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>CalendarView is licensed under a MIT license. Please see the <a href=\"LICENSE.rst\" rel=\"nofollow\">LICENSE</a> file for details.</p>\n</div>\n\n          </div>"}, "last_serial": 6021555, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "18422371c6f68d4b9ce9cb9b7347d9fc", "sha256": "b8c94e5e94fc5076d2ef10f9e5ea8d5acb0290cd0440c2678f4299112ccc1327"}, "downloads": -1, "filename": "calendar_view-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "18422371c6f68d4b9ce9cb9b7347d9fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13795, "upload_time": "2019-10-24T04:19:46", "upload_time_iso_8601": "2019-10-24T04:19:46.990306Z", "url": "https://files.pythonhosted.org/packages/92/4a/762b5a8ccea7c8c7843a2870285b8f17f319df2a945e8c72807fe721cba5/calendar_view-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c362b0afc202cbfba5e392712191aea", "sha256": "89e0bf1f00986b9774e53133279bd8320f78e1ef6d7b4933654eb0a6ca57e247"}, "downloads": -1, "filename": "calendar-view-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9c362b0afc202cbfba5e392712191aea", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 170521, "upload_time": "2019-10-24T04:19:49", "upload_time_iso_8601": "2019-10-24T04:19:49.553292Z", "url": "https://files.pythonhosted.org/packages/af/ac/359b21e2e2b10f4fa36c936cf99a38cebc084e97c778c392efa751be3a62/calendar-view-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "18422371c6f68d4b9ce9cb9b7347d9fc", "sha256": "b8c94e5e94fc5076d2ef10f9e5ea8d5acb0290cd0440c2678f4299112ccc1327"}, "downloads": -1, "filename": "calendar_view-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "18422371c6f68d4b9ce9cb9b7347d9fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13795, "upload_time": "2019-10-24T04:19:46", "upload_time_iso_8601": "2019-10-24T04:19:46.990306Z", "url": "https://files.pythonhosted.org/packages/92/4a/762b5a8ccea7c8c7843a2870285b8f17f319df2a945e8c72807fe721cba5/calendar_view-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c362b0afc202cbfba5e392712191aea", "sha256": "89e0bf1f00986b9774e53133279bd8320f78e1ef6d7b4933654eb0a6ca57e247"}, "downloads": -1, "filename": "calendar-view-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9c362b0afc202cbfba5e392712191aea", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 170521, "upload_time": "2019-10-24T04:19:49", "upload_time_iso_8601": "2019-10-24T04:19:49.553292Z", "url": "https://files.pythonhosted.org/packages/af/ac/359b21e2e2b10f4fa36c936cf99a38cebc084e97c778c392efa751be3a62/calendar-view-1.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:38 2020"}