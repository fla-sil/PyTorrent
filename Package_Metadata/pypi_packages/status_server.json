{"info": {"author": "Charles Thomas", "author_email": "ch@rlesthom.as", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Topic :: Internet :: WWW/HTTP :: HTTP Servers", "Topic :: Software Development :: Quality Assurance", "Topic :: Software Development :: Testing :: Traffic Generation"], "description": "=============\nstatus_server\n=============\n\nServe HTTP Status by URL\n\nQuickstart\n----------\n1. ``pip install status_server``\n2. ``status_server``\n3. ``curl -i http://localhost:8888/200``\n\nWhat is status_server?\n----------------------\nI was playing around with a load testing tool, and I wanted to generate more\nthan one HTTP response type, so I hacked this together.\n\nstatus_server returns the status code in the request URI. Want a 200?\n``curl http://localhost:8888/200``\n\nWant a 404?\n``curl http://localhost:8888/404``\n\nWhat if you want a randomly chosen value from a list of possible return types?\n``curl http://localhost:8888/200/404/503``\n\nThe above has an equal chance of returning either of the three HTTP status\ncodes. (1/3: 200, 1/3: 404, 1/3: 503)\n\nstatus_server supports all standard methods for requests:\n\n``curl -iX POST http://localhost:8888/200``\n\n``curl -iX DELETE http://localhost:8888/200``\n\nKnown Issue\n-----------\n304 (Not Modified) does **not** work. ``curl http://localhost:8888/304`` will\nthrow an exception and return a 500, not a 304.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/charlesthomas/status_server", "keywords": null, "license": "The MIT License (MIT)\n\nCopyright (c) 2014 Charles Thomas\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.", "maintainer": null, "maintainer_email": null, "name": "status_server", "package_url": "https://pypi.org/project/status_server/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/status_server/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/charlesthomas/status_server"}, "release_url": "https://pypi.org/project/status_server/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Serve HTTP statuses by URL", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Serve HTTP Status by URL</p>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<ol>\n<li><tt>pip install status_server</tt></li>\n<li><tt>status_server</tt></li>\n<li><tt>curl <span class=\"pre\">-i</span> <span class=\"pre\">http://localhost:8888/200</span></tt></li>\n</ol>\n</div>\n<div id=\"what-is-status-server\">\n<h2>What is status_server?</h2>\n<p>I was playing around with a load testing tool, and I wanted to generate more\nthan one HTTP response type, so I hacked this together.</p>\n<p>status_server returns the status code in the request URI. Want a 200?\n<tt>curl <span class=\"pre\">http://localhost:8888/200</span></tt></p>\n<p>Want a 404?\n<tt>curl <span class=\"pre\">http://localhost:8888/404</span></tt></p>\n<p>What if you want a randomly chosen value from a list of possible return types?\n<tt>curl <span class=\"pre\">http://localhost:8888/200/404/503</span></tt></p>\n<p>The above has an equal chance of returning either of the three HTTP status\ncodes. (1/3: 200, 1/3: 404, 1/3: 503)</p>\n<p>status_server supports all standard methods for requests:</p>\n<p><tt>curl <span class=\"pre\">-iX</span> POST <span class=\"pre\">http://localhost:8888/200</span></tt></p>\n<p><tt>curl <span class=\"pre\">-iX</span> DELETE <span class=\"pre\">http://localhost:8888/200</span></tt></p>\n</div>\n<div id=\"known-issue\">\n<h2>Known Issue</h2>\n<p>304 (Not Modified) does <strong>not</strong> work. <tt>curl <span class=\"pre\">http://localhost:8888/304</span></tt> will\nthrow an exception and return a 500, not a 304.</p>\n</div>\n\n          </div>"}, "last_serial": 1078710, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "5dae1e7a775fbce8216afd79cbbbef4e", "sha256": "4463a2da164350a7d1b4da5d7bdbf61f64709daf70fe5ddade74e101922169a2"}, "downloads": -1, "filename": "status_server-0.0.0.tar.gz", "has_sig": false, "md5_digest": "5dae1e7a775fbce8216afd79cbbbef4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2903, "upload_time": "2014-05-01T20:58:05", "upload_time_iso_8601": "2014-05-01T20:58:05.280216Z", "url": "https://files.pythonhosted.org/packages/51/6c/62c3ab5705d8643e9537d735f4285b9c6539cba679e5d7707ae26473d5fc/status_server-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "876513de3a6311f1f6cab38c61cff51e", "sha256": "277fe685a6fe3f8db8fbb3aa90ffc34221f9591bc5135594d84c279b4a879761"}, "downloads": -1, "filename": "status_server-0.0.1.tar.gz", "has_sig": false, "md5_digest": "876513de3a6311f1f6cab38c61cff51e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3059, "upload_time": "2014-05-02T15:28:33", "upload_time_iso_8601": "2014-05-02T15:28:33.651376Z", "url": "https://files.pythonhosted.org/packages/ed/e8/78d19b9b9629f87fa9efe12971c7497a0bbaa9c3665004c06c74422c65d8/status_server-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "876513de3a6311f1f6cab38c61cff51e", "sha256": "277fe685a6fe3f8db8fbb3aa90ffc34221f9591bc5135594d84c279b4a879761"}, "downloads": -1, "filename": "status_server-0.0.1.tar.gz", "has_sig": false, "md5_digest": "876513de3a6311f1f6cab38c61cff51e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3059, "upload_time": "2014-05-02T15:28:33", "upload_time_iso_8601": "2014-05-02T15:28:33.651376Z", "url": "https://files.pythonhosted.org/packages/ed/e8/78d19b9b9629f87fa9efe12971c7497a0bbaa9c3665004c06c74422c65d8/status_server-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:18 2020"}