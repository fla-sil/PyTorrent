{"info": {"author": "Dany Lewin", "author_email": "danyglewin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Interpreters"], "description": "# Pikachu Interpreter\n\nThis is an interpreter for Pikachu for Python 2.7.x\n\nThe definition of the esoteric programming language named 'pikachu' can be found [here](http://trove42.com/introducing-pikachu-programming-language/). This is built as a cleaner version of https://github.com/joelsmithjohnson/pikachu-interpreter.\n\n### Installation:\n\n1. Run `$ pip install pikapy`\n2. Go to your Sublime Packages folder, which defaults to `~/Library/Application Support/Sublime Text 3/Packages` on Mac OSX and ` ` on Windows, create a new folder called Pikachu, and copy pikachu.sublime-syntax to there.\n\n3. In the same Packages folder, find `Color Scheme - Default`, and copy `pikachu.sublime-color-scheme` there.\n\n4. In Sublime Text, go to Preferences \u2192 Color Scheme, and select Pikachu.\n\n\n### Usage\n\nIn the command line, go to the installation directory, and run:\n\n```bash\n$ pikachu <pikachu filename> [arguments*]\n```\n\n\n### Pikachu Language\n\nIn Pikachu, you have two Pikachus (i.e. stacks): `pi pikachu` and `pika pikachu`. Upon starting a Pikachu script, the arguments are pushed into `pi pikachu` in the order they're given.\n\n#### Pikachu Syntax\n\n##### Arithmetic Operations\n\n - `pi pika <PIKACHU>` - add the top two values in the given Pikachu, and push the sum to the same Pikachu\n - `pika pi <PIKACHU>` - subtract the top value in the Pikachu from the second top, then push the difference\n - `pi pikachu <PIKACHU>` - multiply the top two values in the Pikachu, and push the product\n - `pikachu <PIKACHU>` - divide the second-from-the-top value in the Pikachu by the top value, then push the product\n\n##### Stack Operations\n\n - `pika pikachu <PIKACHU>` - pop the top value from the Pikachu, and print as a number\n - `pikachu pikachu <PIKACHU>` - pop the top value from the Pikachu, and print as ASCII\n - `<PIKACHU>` - pop the top value from the Pikachu\n - `<n terms> <PIKACHU>` - push `n` into the PIkachu\n - `<pi pika>` - push the top value of `pika pikachu` into `pi pikachu`\n - `<pika pi>` - push the top value of `pi pikachu` into `pika pikachu`\n\n##### Control Operations\n\n - `pikachu pikachu` - if the top values of both Pikachus are equal, goto line `n`, where `n` is the number of terms in the following line\n - `pika pika` - if the top values of both Pikachus are not equal, goto line `n`, where `n` is the number of terms in the following line\n\n*Note: Pikachus start counting lines from 1, not 0*\n\n##### Other Options\n\n - `pi pi` - push to `pika pikachu` a random number between `1` and `n`, where `n` is the top value in `pika pikachu`\n - `chu` - anything that comes after a `chu`, is treated as a comment, and will be ignored by the interpreter. This includes any line beginning with the word `chu`.\n\n*Note: Things in this section are not part of the original definition of the language, rather features added for the convenience of the programming Pikachus*\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/DanyGLewin/pykachu/archive/V0.5.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/DanyGLewin/pykachu", "keywords": "Esolang,Esoteric,Language,Pokemon,Pikachu,Interpreter", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pikapy", "package_url": "https://pypi.org/project/pikapy/", "platform": "", "project_url": "https://pypi.org/project/pikapy/", "project_urls": {"Download": "https://github.com/DanyGLewin/pykachu/archive/V0.5.tar.gz", "Homepage": "https://github.com/DanyGLewin/pykachu"}, "release_url": "https://pypi.org/project/pikapy/0.5/", "requires_dist": ["click"], "requires_python": "", "summary": "Pikachu interpreter written in Python", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Pikachu Interpreter</h1>\n<p>This is an interpreter for Pikachu for Python 2.7.x</p>\n<p>The definition of the esoteric programming language named 'pikachu' can be found <a href=\"http://trove42.com/introducing-pikachu-programming-language/\" rel=\"nofollow\">here</a>. This is built as a cleaner version of <a href=\"https://github.com/joelsmithjohnson/pikachu-interpreter\" rel=\"nofollow\">https://github.com/joelsmithjohnson/pikachu-interpreter</a>.</p>\n<h3>Installation:</h3>\n<ol>\n<li>\n<p>Run <code>$ pip install pikapy</code></p>\n</li>\n<li>\n<p>Go to your Sublime Packages folder, which defaults to <code>~/Library/Application Support/Sublime Text 3/Packages</code> on Mac OSX and <code></code> on Windows, create a new folder called Pikachu, and copy pikachu.sublime-syntax to there.</p>\n</li>\n<li>\n<p>In the same Packages folder, find <code>Color Scheme - Default</code>, and copy <code>pikachu.sublime-color-scheme</code> there.</p>\n</li>\n<li>\n<p>In Sublime Text, go to Preferences \u2192 Color Scheme, and select Pikachu.</p>\n</li>\n</ol>\n<h3>Usage</h3>\n<p>In the command line, go to the installation directory, and run:</p>\n<pre>$ pikachu &lt;pikachu filename&gt; <span class=\"o\">[</span>arguments*<span class=\"o\">]</span>\n</pre>\n<h3>Pikachu Language</h3>\n<p>In Pikachu, you have two Pikachus (i.e. stacks): <code>pi pikachu</code> and <code>pika pikachu</code>. Upon starting a Pikachu script, the arguments are pushed into <code>pi pikachu</code> in the order they're given.</p>\n<h4>Pikachu Syntax</h4>\n<h5>Arithmetic Operations</h5>\n<ul>\n<li><code>pi pika &lt;PIKACHU&gt;</code> - add the top two values in the given Pikachu, and push the sum to the same Pikachu</li>\n<li><code>pika pi &lt;PIKACHU&gt;</code> - subtract the top value in the Pikachu from the second top, then push the difference</li>\n<li><code>pi pikachu &lt;PIKACHU&gt;</code> - multiply the top two values in the Pikachu, and push the product</li>\n<li><code>pikachu &lt;PIKACHU&gt;</code> - divide the second-from-the-top value in the Pikachu by the top value, then push the product</li>\n</ul>\n<h5>Stack Operations</h5>\n<ul>\n<li><code>pika pikachu &lt;PIKACHU&gt;</code> - pop the top value from the Pikachu, and print as a number</li>\n<li><code>pikachu pikachu &lt;PIKACHU&gt;</code> - pop the top value from the Pikachu, and print as ASCII</li>\n<li><code>&lt;PIKACHU&gt;</code> - pop the top value from the Pikachu</li>\n<li><code>&lt;n terms&gt; &lt;PIKACHU&gt;</code> - push <code>n</code> into the PIkachu</li>\n<li><code>&lt;pi pika&gt;</code> - push the top value of <code>pika pikachu</code> into <code>pi pikachu</code></li>\n<li><code>&lt;pika pi&gt;</code> - push the top value of <code>pi pikachu</code> into <code>pika pikachu</code></li>\n</ul>\n<h5>Control Operations</h5>\n<ul>\n<li><code>pikachu pikachu</code> - if the top values of both Pikachus are equal, goto line <code>n</code>, where <code>n</code> is the number of terms in the following line</li>\n<li><code>pika pika</code> - if the top values of both Pikachus are not equal, goto line <code>n</code>, where <code>n</code> is the number of terms in the following line</li>\n</ul>\n<p><em>Note: Pikachus start counting lines from 1, not 0</em></p>\n<h5>Other Options</h5>\n<ul>\n<li><code>pi pi</code> - push to <code>pika pikachu</code> a random number between <code>1</code> and <code>n</code>, where <code>n</code> is the top value in <code>pika pikachu</code></li>\n<li><code>chu</code> - anything that comes after a <code>chu</code>, is treated as a comment, and will be ignored by the interpreter. This includes any line beginning with the word <code>chu</code>.</li>\n</ul>\n<p><em>Note: Things in this section are not part of the original definition of the language, rather features added for the convenience of the programming Pikachus</em></p>\n\n          </div>"}, "last_serial": 5467684, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "8fcd8ccc802bab0d5550eea06e8d286f", "sha256": "ec040b46847c5695d8a7524b1738f46f474de90093483e5ad57cca015c38140c"}, "downloads": -1, "filename": "pikapy-0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "8fcd8ccc802bab0d5550eea06e8d286f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6435, "upload_time": "2019-06-21T14:32:32", "upload_time_iso_8601": "2019-06-21T14:32:32.048621Z", "url": "https://files.pythonhosted.org/packages/e2/4d/5a99453a18db1e0c72396b8cadd750d65574146c31ed4df62f2b08dacd51/pikapy-0.3-py2-none-any.whl", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "8c769876ffcf4358b76b4da0c7463513", "sha256": "2781485661e1f2bc49b734f30c158fe5254e3210b82913e0058e6b8e8bc2457c"}, "downloads": -1, "filename": "pikapy-0.4-py2-none-any.whl", "has_sig": false, "md5_digest": "8c769876ffcf4358b76b4da0c7463513", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 7534, "upload_time": "2019-06-21T14:42:26", "upload_time_iso_8601": "2019-06-21T14:42:26.980497Z", "url": "https://files.pythonhosted.org/packages/be/14/f57817c931d561e6725def367558cb6f53cea0bb404219bd6586709daa16/pikapy-0.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eeeadb470d0b61445f80abcfe587ca5c", "sha256": "0eb46021c1538ec16505cf377b39aa3f785751b4ec6ac88a4df9b63036637219"}, "downloads": -1, "filename": "pikapy-0.4.tar.gz", "has_sig": false, "md5_digest": "eeeadb470d0b61445f80abcfe587ca5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5936, "upload_time": "2019-06-30T11:29:21", "upload_time_iso_8601": "2019-06-30T11:29:21.497833Z", "url": "https://files.pythonhosted.org/packages/e4/c8/83ef173e940a0fac21ec2766d0ee5e0f9d011c35147c7a4cb3342d1c07a7/pikapy-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "58c8d65bc5072b8321ee96da2303e164", "sha256": "6b15c73a425b89ab96f9cc7dd1b39ae896aa5c174859f8b581b4a958fb96400f"}, "downloads": -1, "filename": "pikapy-0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "58c8d65bc5072b8321ee96da2303e164", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 7533, "upload_time": "2019-06-30T11:31:24", "upload_time_iso_8601": "2019-06-30T11:31:24.876493Z", "url": "https://files.pythonhosted.org/packages/99/00/1ceb5831d7a4f8cbbb83aec8425de46fe9c9b8e13c8c2aa56c5c1382cb26/pikapy-0.5-py2-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "58c8d65bc5072b8321ee96da2303e164", "sha256": "6b15c73a425b89ab96f9cc7dd1b39ae896aa5c174859f8b581b4a958fb96400f"}, "downloads": -1, "filename": "pikapy-0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "58c8d65bc5072b8321ee96da2303e164", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 7533, "upload_time": "2019-06-30T11:31:24", "upload_time_iso_8601": "2019-06-30T11:31:24.876493Z", "url": "https://files.pythonhosted.org/packages/99/00/1ceb5831d7a4f8cbbb83aec8425de46fe9c9b8e13c8c2aa56c5c1382cb26/pikapy-0.5-py2-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:54:48 2020"}