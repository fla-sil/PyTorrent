{"info": {"author": "Simon Kagwi", "author_email": "simonkagwe@yahoo.com", "bugtrack_url": null, "classifiers": [], "description": "===========================================\r\nAn Amazon Payments package for django-oscar\r\n===========================================\r\n\r\nThis package provides integration between `django-oscar`_ and `Amazon Payments (Login and Pay with Amazon)`_.\r\n\r\n.. _django-oscar: https://github.com/django-oscar/django-oscar\r\n.. _`Amazon Payments (Login and Pay with Amazon)`: https://payments.amazon.com\r\n\r\nTested with **Python 2.7**, **Django 1.6** and **django-oscar 0.7.3**.\r\n\r\nSetup\r\n-----\r\nFollow the instructions on configuring your website for Login and Pay with Amazon under\r\nhttp://docs.developer.amazonservices.com/en_US/apa_guide/APAGuide_GettingStarted.html.\r\nNote that the website setup requires the \"Allowed JavaScript origin\" to be a HTTPS\r\nURL, so you won't be able to test Amazon Payments integration with a site run using\r\nthe Django runserver command.\r\n\r\nYou will also need an Amazon MWS API key and secret key. These are used to \r\ninteract with the Amazon MWS Off-Amazon Payments API to actually process the\r\npayments. See http://docs.developer.amazonservices.com/en_US/off_amazon_payments/OffAmazonPayments_Overview.html\r\n\r\nAdd 'amazon_payments' to your INSTALLED_APPS, and also add the following settings in your django settings:\r\n\r\n* AMAZON_PAYMENTS_ACCESS_KEY\r\n* AMAZON_PAYMENTS_SECRET_KEY\r\n* AMAZON_PAYMENTS_SELLER_ID\r\n* AMAZON_PAYMENTS_CLIENT_ID\r\n* AMAZON_PAYMENTS_CURRENCY\r\n\r\nOther settings:\r\n\r\n* AMAZON_PAYMENTS_API_ENDPOINT: defaults to \"https://mws.amazonservices.com/OffAmazonPayments_Sandbox/2013-01-01\"\r\n* AMAZON_PAYMENTS_API_VERSION: defaults to \"2013-01-01\".\r\n* AMAZON_PAYMENTS_IS_LIVE: defaults to False. Set True to enable live payments.\r\n\r\nSandbox site\r\n------------\r\nThe sandbox site demonstrates how you can set up 2 different Amazon Payments\r\ncheckout procedures:\r\n\r\n1. **One-step checkout**: User selects the shipping address and payment method \r\n   in one step. Clicking the \"Place order\" button will immediately attempt to\r\n   charge the user's Amazon account and takes them to the confirmation / thank you\r\n   page if successful. Assumes there is one shipping method.\r\n2. **Multi-step checkout**: The default oscar checkout process.\r\n\r\nAutomatic Payments\r\n------------------\r\nFrom http://docs.developer.amazonservices.com/en_US/pay_with_amazon_automatic_payments/APAGuide_Introduction.html:\r\n\r\n*With the automatic payments feature, buyers can pre-authorize payments for \r\nfuture purchases. This enables you to charge a buyer\u2019s Amazon Payments account \r\non a regular basis for subscriptions and usage based billing without requiring \r\nthe buyer to authorize a payment each time.*\r\n\r\nAutomatic payments are disabled by default. To enable such payments, override \r\nthe Basket model in your oscar project to add a \"has_subscriptions\" property \r\nthat returns True where appropriate. This has been done in the sandbox site, so\r\nyou will see the \"Automatic payments\" widget during checkout.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/simonkagwe/django-oscar-amazon-payments", "keywords": "", "license": "The MIT License (MIT)", "maintainer": "", "maintainer_email": "", "name": "django-oscar-amazon-payments", "package_url": "https://pypi.org/project/django-oscar-amazon-payments/", "platform": "", "project_url": "https://pypi.org/project/django-oscar-amazon-payments/", "project_urls": {"Homepage": "https://github.com/simonkagwe/django-oscar-amazon-payments"}, "release_url": "https://pypi.org/project/django-oscar-amazon-payments/0.1/", "requires_dist": null, "requires_python": null, "summary": "This package provides integration between django-oscar and Amazon Payments (Login and Pay with Amazon).", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package provides integration between <a href=\"https://github.com/django-oscar/django-oscar\" rel=\"nofollow\">django-oscar</a> and <a href=\"https://payments.amazon.com\" rel=\"nofollow\">Amazon Payments (Login and Pay with Amazon)</a>.</p>\n<p>Tested with <strong>Python 2.7</strong>, <strong>Django 1.6</strong> and <strong>django-oscar 0.7.3</strong>.</p>\n<div id=\"setup\">\n<h2>Setup</h2>\n<p>Follow the instructions on configuring your website for Login and Pay with Amazon under\n<a href=\"http://docs.developer.amazonservices.com/en_US/apa_guide/APAGuide_GettingStarted.html\" rel=\"nofollow\">http://docs.developer.amazonservices.com/en_US/apa_guide/APAGuide_GettingStarted.html</a>.\nNote that the website setup requires the \u201cAllowed JavaScript origin\u201d to be a HTTPS\nURL, so you won\u2019t be able to test Amazon Payments integration with a site run using\nthe Django runserver command.</p>\n<p>You will also need an Amazon MWS API key and secret key. These are used to\ninteract with the Amazon MWS Off-Amazon Payments API to actually process the\npayments. See <a href=\"http://docs.developer.amazonservices.com/en_US/off_amazon_payments/OffAmazonPayments_Overview.html\" rel=\"nofollow\">http://docs.developer.amazonservices.com/en_US/off_amazon_payments/OffAmazonPayments_Overview.html</a></p>\n<p>Add \u2018amazon_payments\u2019 to your INSTALLED_APPS, and also add the following settings in your django settings:</p>\n<ul>\n<li>AMAZON_PAYMENTS_ACCESS_KEY</li>\n<li>AMAZON_PAYMENTS_SECRET_KEY</li>\n<li>AMAZON_PAYMENTS_SELLER_ID</li>\n<li>AMAZON_PAYMENTS_CLIENT_ID</li>\n<li>AMAZON_PAYMENTS_CURRENCY</li>\n</ul>\n<p>Other settings:</p>\n<ul>\n<li>AMAZON_PAYMENTS_API_ENDPOINT: defaults to \u201c<a href=\"https://mws.amazonservices.com/OffAmazonPayments_Sandbox/2013-01-01\" rel=\"nofollow\">https://mws.amazonservices.com/OffAmazonPayments_Sandbox/2013-01-01</a>\u201d</li>\n<li>AMAZON_PAYMENTS_API_VERSION: defaults to \u201c2013-01-01\u201d.</li>\n<li>AMAZON_PAYMENTS_IS_LIVE: defaults to False. Set True to enable live payments.</li>\n</ul>\n</div>\n<div id=\"sandbox-site\">\n<h2>Sandbox site</h2>\n<p>The sandbox site demonstrates how you can set up 2 different Amazon Payments\ncheckout procedures:</p>\n<ol>\n<li><strong>One-step checkout</strong>: User selects the shipping address and payment method\nin one step. Clicking the \u201cPlace order\u201d button will immediately attempt to\ncharge the user\u2019s Amazon account and takes them to the confirmation / thank you\npage if successful. Assumes there is one shipping method.</li>\n<li><strong>Multi-step checkout</strong>: The default oscar checkout process.</li>\n</ol>\n</div>\n<div id=\"automatic-payments\">\n<h2>Automatic Payments</h2>\n<p>From <a href=\"http://docs.developer.amazonservices.com/en_US/pay_with_amazon_automatic_payments/APAGuide_Introduction.html\" rel=\"nofollow\">http://docs.developer.amazonservices.com/en_US/pay_with_amazon_automatic_payments/APAGuide_Introduction.html</a>:</p>\n<p><em>With the automatic payments feature, buyers can pre-authorize payments for\nfuture purchases. This enables you to charge a buyer\u2019s Amazon Payments account\non a regular basis for subscriptions and usage based billing without requiring\nthe buyer to authorize a payment each time.</em></p>\n<p>Automatic payments are disabled by default. To enable such payments, override\nthe Basket model in your oscar project to add a \u201chas_subscriptions\u201d property\nthat returns True where appropriate. This has been done in the sandbox site, so\nyou will see the \u201cAutomatic payments\u201d widget during checkout.</p>\n</div>\n\n          </div>"}, "last_serial": 2465842, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "5b5dfe41066c0c9e71b0edace4a94b56", "sha256": "c1cfd1ac04cf8be6ee3ec253e8b21b35bf72f5582a6f747d50b41b841717bd6d"}, "downloads": -1, "filename": "django_oscar_amazon_payments-0.1-py2.7.egg", "has_sig": false, "md5_digest": "5b5dfe41066c0c9e71b0edace4a94b56", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 21200, "upload_time": "2016-11-17T08:21:29", "upload_time_iso_8601": "2016-11-17T08:21:29.817009Z", "url": "https://files.pythonhosted.org/packages/aa/11/72a0448687950b2b32ed4167569b7a02793ed40e46bcb13cf0f6bea4fe84/django_oscar_amazon_payments-0.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "36f106330698e24d828e6536898f4029", "sha256": "b0bfc0c7984ed005ceb5fdc17f61f7510158c46048913c404e2de15cb6fcdfa1"}, "downloads": -1, "filename": "django-oscar-amazon-payments-0.1.tar.gz", "has_sig": false, "md5_digest": "36f106330698e24d828e6536898f4029", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16665, "upload_time": "2015-04-29T10:04:09", "upload_time_iso_8601": "2015-04-29T10:04:09.330807Z", "url": "https://files.pythonhosted.org/packages/0c/38/c783b351fcd2bf1e6c780c0a8e8d355015a3db208d082e89cde9c56d5922/django-oscar-amazon-payments-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5b5dfe41066c0c9e71b0edace4a94b56", "sha256": "c1cfd1ac04cf8be6ee3ec253e8b21b35bf72f5582a6f747d50b41b841717bd6d"}, "downloads": -1, "filename": "django_oscar_amazon_payments-0.1-py2.7.egg", "has_sig": false, "md5_digest": "5b5dfe41066c0c9e71b0edace4a94b56", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 21200, "upload_time": "2016-11-17T08:21:29", "upload_time_iso_8601": "2016-11-17T08:21:29.817009Z", "url": "https://files.pythonhosted.org/packages/aa/11/72a0448687950b2b32ed4167569b7a02793ed40e46bcb13cf0f6bea4fe84/django_oscar_amazon_payments-0.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "36f106330698e24d828e6536898f4029", "sha256": "b0bfc0c7984ed005ceb5fdc17f61f7510158c46048913c404e2de15cb6fcdfa1"}, "downloads": -1, "filename": "django-oscar-amazon-payments-0.1.tar.gz", "has_sig": false, "md5_digest": "36f106330698e24d828e6536898f4029", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16665, "upload_time": "2015-04-29T10:04:09", "upload_time_iso_8601": "2015-04-29T10:04:09.330807Z", "url": "https://files.pythonhosted.org/packages/0c/38/c783b351fcd2bf1e6c780c0a8e8d355015a3db208d082e89cde9c56d5922/django-oscar-amazon-payments-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:25 2020"}