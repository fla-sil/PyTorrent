{"info": {"author": "Glenn H. Tarbox", "author_email": "glenn@tarbox.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: X11 Applications :: Qt", "Framework :: Twisted", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Qt4Reactor\n        \n        Using the QtReactor\n        -------------------\n        \n        Before running / importing any other Twisted code, invoke:\n        \n        ::\n        \n            app = QApplication(sys.argv) # your code to init QtCore\n            from twisted.application import reactors\n            reactors.installReactor('pyqt4')\n        \n        or\n        \n        ::\n        \n            app = QApplication(sys.argv) # your code to init QtCore\n            from twisted.application import reactors\n            reactors.installReactor('pyside4')\n        \n        alternatively (gui example):\n        \n        ::\n        \n            app = PyQt4.QtGui(sys.argv) # your code to init QtGui\n            from qtreactor import pyqt4reactor\n            pyqt4reactor.install()\n        \n        Testing\n        ~~~~~~~\n        \n        ::\n        \n           trial --reactor=pyqt4 [twisted] [twisted.test] [twisted.test.test_internet]\n        \n        Testing with a Gui\n        ~~~~~~~~~~~~~~~~~~\n        \n        Twisted trial can be run for a Gui test using gtrial. Run Trial in the\n        same directory as bin/gtrial and it pops up a trivial gui... hit the\n        buton and it all runs the same... don't use the --reactor option when\n        calling gtrial... but all the other options appear to work.\n        \n        ::\n        \n            cp gtrial <test-directory>\n        \n            cd <test-directory> && trial\n        \n        If you're writing a conventional Qt application and just want twisted as\n        an addon, you can get that by calling reactor.runReturn() instead of\n        run(). This call needs to occur after your installation of of the\n        reactor and after QApplication.exec\\_() (or QCoreApplication.exec\\_()\n        whichever you are using.\n        \n        reactor.run() will also work as expected in a typical twisted\n        application\n        \n        Note that if a QApplication or QCoreApplication instance isn't\n        constructed prior to calling reactor run, an internally owned\n        QCoreApplication is created and destroyed. This won't work if you call\n        runReturn instead of run unless you take responsibility for destroying\n        QCoreApplication yourself...\n        \n        However, most users want this reactor to do gui stuff so this shouldn't\n        be an issue.\n        \n        Performance impact of Qt has been reduced by minimizing use of signaling\n        which is expensive.\n        \n        Examples / tests in ghtTests", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/ghtdak/qtreactor/tarball/master/#egg-qt4reactor.1.6", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ghtdak/qtreactor", "keywords": "Qt,twisted", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "qt4reactor", "package_url": "https://pypi.org/project/qt4reactor/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/qt4reactor/", "project_urls": {"Download": "https://github.com/ghtdak/qtreactor/tarball/master/#egg-qt4reactor.1.6", "Homepage": "https://github.com/ghtdak/qtreactor"}, "release_url": "https://pypi.org/project/qt4reactor/1.6/", "requires_dist": null, "requires_python": null, "summary": "Twisted Qt Integration", "version": "1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            Qt4Reactor<br>        <br>        Using the QtReactor<br>        -------------------<br>        <br>        Before running / importing any other Twisted code, invoke:<br>        <br>        ::<br>        <br>            app = QApplication(sys.argv) # your code to init QtCore<br>            from twisted.application import reactors<br>            reactors.installReactor('pyqt4')<br>        <br>        or<br>        <br>        ::<br>        <br>            app = QApplication(sys.argv) # your code to init QtCore<br>            from twisted.application import reactors<br>            reactors.installReactor('pyside4')<br>        <br>        alternatively (gui example):<br>        <br>        ::<br>        <br>            app = PyQt4.QtGui(sys.argv) # your code to init QtGui<br>            from qtreactor import pyqt4reactor<br>            pyqt4reactor.install()<br>        <br>        Testing<br>        ~~~~~~~<br>        <br>        ::<br>        <br>           trial --reactor=pyqt4 [twisted] [twisted.test] [twisted.test.test_internet]<br>        <br>        Testing with a Gui<br>        ~~~~~~~~~~~~~~~~~~<br>        <br>        Twisted trial can be run for a Gui test using gtrial. Run Trial in the<br>        same directory as bin/gtrial and it pops up a trivial gui... hit the<br>        buton and it all runs the same... don't use the --reactor option when<br>        calling gtrial... but all the other options appear to work.<br>        <br>        ::<br>        <br>            cp gtrial &lt;test-directory&gt;<br>        <br>            cd &lt;test-directory&gt; &amp;&amp; trial<br>        <br>        If you're writing a conventional Qt application and just want twisted as<br>        an addon, you can get that by calling reactor.runReturn() instead of<br>        run(). This call needs to occur after your installation of of the<br>        reactor and after QApplication.exec\\_() (or QCoreApplication.exec\\_()<br>        whichever you are using.<br>        <br>        reactor.run() will also work as expected in a typical twisted<br>        application<br>        <br>        Note that if a QApplication or QCoreApplication instance isn't<br>        constructed prior to calling reactor run, an internally owned<br>        QCoreApplication is created and destroyed. This won't work if you call<br>        runReturn instead of run unless you take responsibility for destroying<br>        QCoreApplication yourself...<br>        <br>        However, most users want this reactor to do gui stuff so this shouldn't<br>        be an issue.<br>        <br>        Performance impact of Qt has been reduced by minimizing use of signaling<br>        which is expensive.<br>        <br>        Examples / tests in ghtTests\n          </div>"}, "last_serial": 1236876, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "bf9f747ed9455e9f1cb6761da508f71d", "sha256": "966ba00b137b3aebbea458a92704d6296b66f7ee2eb4bf2829546f771f71c486"}, "downloads": -1, "filename": "qt4reactor-1.0.tar.gz", "has_sig": false, "md5_digest": "bf9f747ed9455e9f1cb6761da508f71d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8145, "upload_time": "2014-09-22T19:02:55", "upload_time_iso_8601": "2014-09-22T19:02:55.990984Z", "url": "https://files.pythonhosted.org/packages/de/72/323ff618b4f75978dab61aadff5df0231dba353aec47645bbff6130c76cc/qt4reactor-1.0.tar.gz", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "689f367aa3cf100ab8b1acac77a42111", "sha256": "11f0a1c8c0ccdaf2d809b03c0b5e3ad2e4b64e73a659ffa76d7991bbf5427be0"}, "downloads": -1, "filename": "qt4reactor-1.5.tar.gz", "has_sig": false, "md5_digest": "689f367aa3cf100ab8b1acac77a42111", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15499, "upload_time": "2014-09-24T19:38:37", "upload_time_iso_8601": "2014-09-24T19:38:37.003692Z", "url": "https://files.pythonhosted.org/packages/0f/22/910585de74e3f7588d8cda3d009b59f4ed886162bfe5f4a4bdc937ad3e88/qt4reactor-1.5.tar.gz", "yanked": false}], "1.6": [{"comment_text": "", "digests": {"md5": "0a1531e265a5b7a524852b712b89ba1d", "sha256": "43d44d6d96c6f6a76184db1f0e3138c1e25875bc3557a661e728c0e8f419b616"}, "downloads": -1, "filename": "qt4reactor-1.6.tar.gz", "has_sig": false, "md5_digest": "0a1531e265a5b7a524852b712b89ba1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15616, "upload_time": "2014-09-24T19:38:02", "upload_time_iso_8601": "2014-09-24T19:38:02.853639Z", "url": "https://files.pythonhosted.org/packages/c7/7b/3433ca2a74fa31d7dd5f455ee6ff8ee772bef433c950e1e24c7f057c03a4/qt4reactor-1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0a1531e265a5b7a524852b712b89ba1d", "sha256": "43d44d6d96c6f6a76184db1f0e3138c1e25875bc3557a661e728c0e8f419b616"}, "downloads": -1, "filename": "qt4reactor-1.6.tar.gz", "has_sig": false, "md5_digest": "0a1531e265a5b7a524852b712b89ba1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15616, "upload_time": "2014-09-24T19:38:02", "upload_time_iso_8601": "2014-09-24T19:38:02.853639Z", "url": "https://files.pythonhosted.org/packages/c7/7b/3433ca2a74fa31d7dd5f455ee6ff8ee772bef433c950e1e24c7f057c03a4/qt4reactor-1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:11 2020"}