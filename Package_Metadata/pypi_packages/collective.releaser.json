{"info": {"author": "Ingeniweb", "author_email": "support@ingeniweb.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "===========================\ncollective.releaser package\n===========================\n\nReport any bug or feature requests to : http://trac.ingeniweb.com\n\n.. contents::\n\n\n\nWhat is collective.releaser ?\n=============================\n\ncollective.releaser provides command line utilities to make it easier to release\nand deploy zc.buildout/subversion based projects.\n\nIt provides:\n\n- new setuptools commands \n\n - `release`: used to release an egg-based package\n - `build_mo`: used to search and compile .po file\n\n- console scripts\n\n - `project_release`: used to release a buildout based project\n - `project_deploy`: used to deploy a buildout based project\n - `project_copy_eggs`: used to collect all eggs used in a project\n - `project_md5`: used to compute the MD5 hash of a buildout project\n - `package_svn_prepare`: to restructure a new created package to be svn ready\n\n- a hook to be able to launch actions when a package is released, \n  with a default one that sends an email on each release.\n\n- a paste template to create a project structure, called `releaser_project`.\n\nHow to install collective.releaser ?\n====================================\n\nTo install `collective.releaser`, you just need to run easy_install::\n\n    $ easy_install collective.releaser\n\nor you can launch its setup if you have downloaded it::\n\n    $ python setup.py install\n\nHow to use collective.releaser ?\n================================\n\nTo work with collective.releaser, let's do a small tutorial on how to create\na buildbout-based project. This is done in a few steps:\n\n- setting up your environment\n- creating the project structure\n- creating egg-based packages \n- releasing eggs\n- releasing the buildout\n- upgrading an existing buildout\n\nSetting up your environement\n-----------------------------\n\nThe first thing to do to work smoothly with zc.buildout is to set up a\nfew things on your environment that apply globally to any Buildout-based\napplications.\n\nPut two files in your home directory:\n\n- `HOME/.buildout/.httpauth`: this file will contain the authentication\n  information if the system tries to reach a http(s) ressource which is\n  password protected (like a svn server or a private web site). \n  It is a text file where each line is: realm,url,user,password\n\n  For example::\n\n    trac,https://svn.ingeniweb.com,user,password\n    pypi,http://products.ingeniweb.com,user,password\n\n  This is used by `lovely.buildouthttp`.\n\n- `HOME/.buildout/default.cfg`: This file set some defaults values, so \n  Buildout can cache and spare downloaded eggs. \n  \n  For example::\n\n    [buildout]\n    download-cache = /home/tarek/.buildout/downloads\n    eggs-directory = /home/tarek/.buildout/eggs\n\nNext, you need to make sure you can release your eggs to several \ntargets, because you may want some private eggs not to be published on\nPyPI. At this time, the only software that provides the same\nweb services than PyPI is Plone Software Center >= 1.5.\n\nTo make it possible to handle several PyPI-like servers, \nwe need to install a small add-on, called `collective.dist`::\n\n    $ easy_install collective.dist\n\nThis will allow you to define several servers in your ~/.pypirc file.\nFor instance if you are working with a private PyPI-like server you can\ndefine it like this in HOME/.pypirc ::\n\n    [distutils]\n    index-servers =\n        pypi\n        ingeniweb-public\n\n    [pypi]\n    username:ingeniweb\n    password:secret\n\n    [ingeniweb-public]\n    repository:http://products.ingeniweb.com/catalog\n    username:ingeniweb\n    password:secret\n\nLast, you need to define the release strategy configuration, that\nwill define for each target server the list of packages that must be released\nthere (regular expressions) and the command sequence that is used\nwith setup.py. Here's a default example, that can be added in your `.pypirc`\nas well, by completing the sections with `release-command` and\n`release-packages` variables::\n    \n    ...\n\n    [ingeniweb-public]\n    ...\n    release-command = mregister sdist build_mo bdist_egg mupload\n    release-packages =\n        ^iw\\..*\n\n    [pypi]\n    ...\n    release-command = mregister sdist build_mo bdist_egg mupload\n    release-packages =\n        ^plone\\..*\n        ^collective\\..*\n\nThis will push all eggs that starts with `plone.` or `collective.` \nto PyPI and all eggs that starts with `iw.` to ingeniweb-public.\nThe command used to push the packages are defined by `command`.\n\nCreating the project structure\n-------------------------------\n\nEvery project must be structured the same way::\n    \n    $ paster create -t releaser_project my_project\n\nThis will ask you for a few values:\n\n- project_name: the name of the project\n- project_repo: the root of the subversion repository\n- some more values that can be left to default.\n\nThis will generate a set of folders in `my_project`::\n\n    $ ls my_project\n    ./buildout\n    ./bundles\n    ./docs\n    ./packages\n    ./releases\n\nEach folder has a role:\n\n- buildout: contains the buildout configuration files\n- bundles: contains the bundle used to work in develop mode\n- docs: contains the documentation about the project\n- packages: contains the egg-based package(s)\n- releases: contains the releases of the buildout\n\nThis structure must be commited in subversion::\n    \n    $ svn import my_project http://some.svn/my_project -m \"initial commit\"\n\nYou will then be able to work in your buildout.\n\nCreating egg-based package\n---------------------------\n\nFrom there you can add some packages into the project, by putting them\nin the `packages` folder, by using any template available in ZopeSkel.\n\n**Be carefull though, you must use a trunk/tags/branches structure in\npackages for each project.**\n\n::\n\n    $ cd my_projet/packages    \n    $ paster create -t plone plone.example\n    $ package_svn_prepare plone.example\n\nThe last command just does the following::\n\n    $ mv plone.example plone.example_md5_of_plone.example\n    $ mkdir plone.example\n    $ mkdir plone.example/tags plone.example/branches\n    $ mv plone.example_md5_of_plone.example plone.example/trunk\n    $ svn add plone.example\n    $ svn ci -m \"initial import of  plone.example\"\n\n**Do not use trunk as a package name with paster, as this will generate\nbad metadata in the package.**\n\nA special section can be added into `setup.cfg`, in order\nto send a mail everytime the package is released::\n\n    [mail_hook]\n    hook = collective.releaser:mail\n    from = support@ingeniweb.com\n    emails =\n         trac@lists.ingeniweb.com\n\nIf your system does not have a SMTP server, you will need to add \nthe name of a SMTP server, and its port in your .pypirc file,\nin a `mail_hook` section::\n\n    [mail_hook]\n    host = smtp.neuf.fr\n    port = 25\n    \nFrom there you can bind the package to your buildout, with a develop \nvariable, in your `my_project/buildout folder`::\n\n    [buildout]\n    ...\n    develop=\n        .../packages/monprojet.reports/trunk\n\nThe `bundle` folder can also be used to set svn:externals to make it\nsimpler to work in the buildout.\n\nReleasing eggs \n----------------\n\nReleasing eggs is done by calling `release` from a package::\n\n    $ python setup.py release\n    running release\n    This package is version 0.1.2\n    Do you want to run tests before releasing ? [y/N]: N\n    Do you want to create the release ? If no, you will just be able to deploy again the current release [y/N]: Y\n    Enter a version [0.1.2]: 0.1.2\n    Commiting changes...\n    Creating branches...\n    ...\n\nThis will take care of:\n\n- upgrading the setup.py version\n- creating a branch and a tag in svn\n- pushing the package to the various PyPI-like servers\n- sending a mail with the changes, if the mail_hook section was provided in setup.cfg\n\nIf you want to release a package from a non-svn folder then use this command to disable specific svn hooks::\n\n    $ python setup.py release --pre-hook --post-hook\n\nYou can also use some parameters to avoid command line prompt::\n\n    $ python setup.py release -a --version=0.1.3\n\n\nReleasing the project \n----------------------\n\nReleasing the project consists of calling `project_release` then\n`project_deploy`.\n\n`project_release` will just create a new branch in subversion::\n\n    $ cd my_project/buildout\n    $ project_release --no-archive --version=0.1\n\nThis will copy `my_project/buildout` to `my_project/releases/0.1` in \nsubversion. You can then work in this release, to pinpoint the versions\nin your buildout. A good practice is to create a dedicated cfg file\nfor deployment.\n\nThe next step is to generate a tarball with `project_deploy`::\n\n    $ cd /tmp\n    $ svn co http://somesvn/my_projet/releases/0.1 my_project\n    $ cd my_project\n    $ project_deploy prod.cfg\n\nThis will build a tarball in `/tmp` using VirtualEnv, and set everything up\nso the buildout can be reinstalled offline anywhere with this archive.\n\nThe resulting release can be installed with two lines::\n\n    $ python boostrap.py\n    $ bin/buildout\n\nUpgrading an existing buildout\n-------------------------------\n\nTo upgrade an existing buildout, you can use the `project_release` command.\nIt will create a tarball with all eggs needed to run the project and the \n.cfg files.\n\nRun it in your buildout, by pointing the .cfg and by providing a name of\nthe archive::\n\n    $ cd my_project/buildout\n    $ project_release --version=0.2\n\nThis will release all develop eggs found in `dev.cfg`. If your `dev.cfg` look like::\n\n    [buildout]\n    parts = eggs\n    develop =\n      ../my.package\n      ../my.other\n\n    [eggs]\n    recipe = zc.recipe.egg\n    eggs =\n      my.package\n      my.other\n\nThen `my.package` and `my.other` will be released and then added to an archive\nwith all .cfg files.\n\nIf you have a static version in your `prod.cfg`::\n\n    [buildout]\n    parts = eggs\n    versions = versions\n\n    [versions]\n    my.package = 0.1\n\n    [eggs]\n    recipe = zc.recipe.egg\n    eggs =\n      my.package\n      my.other\n\nThen only `my.other` will be released but both added to the archive.\n\n\nThe default config file of the archive (eg: `buildout.cfg`) will look like\nthis::\n\n  [buildout]\n  extends = prod.cfg\n  versions = versions\n\n  [versions]\n  my.package=0.1\n  my.other=0.2\n\nSo you can just run `./bin/buildout` on your production server to use the\ncorrect packages versions.\n\n\n0.7.1 (2010-12-08)\n==================\n\n  - Fixed issue with mingw32 not working inside the virtualenv,\n    by making sure we copy the distutils.cfg file.\n    [deo]\n\n\n0.7.0 (2010-09-30)\n==================\n\n  - Added some fixes to make (most) tests pass on Windows.\n    [dreamcatcher]\n\n  - Fixed issue with broken target file on project_deploy.\n    [dreamcatcher]\n\n  - Changed to only upgrade setuptools/zc.buildout if requested.\n    [deo]\n\n  - Added a dependency on virtualenv instead of shipping with an\n    outdated version which potentially can damage your development\n    environment.\n    [deo]\n\n\n0.6.6 (2009-09-17)\n==================\n\n  - Made sure to resolve the filename to use an absolute path.\n    [gawel]\n\n  - Made sure that our package is in sys.path before releasing.\n    [gawel]\n\n  - Fixed ReST formatting issue.\n    [gawel]\n\n\n0.6.5 (2009-08-31)\n==================\n\n  - Fixed NameError introduced here (https://dev.plone.org/collective/changeset/85145/collective.releaser/branches/refactor/collective/releaser/project.py)\n    [glenfant]\n\n  - Made tests smile\n    [glenfant]\n\n0.6.4 (2009-08-18)\n==================\n\n  - More docs and sphinxifying docs.\n    [gawel]\n\n0.6.3 (2009-08-18)\n==================\n\n  - project_release improvement (see http://www.gawel.org/weblog/en/2009/05/collective.releaser_rocks) [gawel]\n\n  - removed the long_description checker (belongs to collective.dist now)\n    [tarek]\n\n0.6.2 (2008-04-09)\n==================\n\n  - make sure the bootstrap.py works offline [tarek]\n  - fixed build_mo command for Django eggs [b_mathieu]\n\n0.6.1 (2008-07-16)\n==================\n\n  - adding a buildbot folder, with a pre-generated\n    collective.buildbot environment [tarek]\n\n  - prefacing all svn commit messages [tarek]\n\n  - better tarball naming [tarek]\n\n  - introduced glob-style option to be able to do\n    glob-style patterns\n    [tarek]\n\n  - removed branch creation\n    [tarek]\n\n0.6.0 (2008-07-16)\n==================\n\n  - fixed `project_deploy` so\n    it supports non buildout.cfg buildouts\n    Thanks to Hans-Peter Locher for feedback\n    [tarek]\n\n  - using Popen to read metadata [tarek]\n\n0.5.2 (2008-06-19)\n==================\n\n  - now checking the long_description field to make sure\n    it is reST compliant [tarek]\n\n  - backported Python 2.5 tarfile module [tarek]\n\n  - fixed #66 [tarek]\n\n0.5.1 (2008-06-10)\n==================\n\n  - emptied parts section in the template/\n    [tarek]\n\n  - os.rename -> shutil.move\n    [tarek]\n\n  - added paster() in testing to ease tests\n    [tarek]\n\n  - Fix empty or missing parts under windows when the recipe use subversion\n    [encolpe]\n\n0.5.0 (2008-05-21)\n==================\n\n  - moved to collective\n    [tarek]\n\n  - added package_svn_prepare command to restructure a new created package with\n    trunk, tags and branches then add it to the current working copy and ci it\n    to svn as 'initial import' if the current directory is a working copy.\n    [mustapha]\n\n0.4.1 (2008-04-29)\n==================\n\n  - now `release` can be driven from .pypirc as well\n    [tarek]\n\n  - We are not removing setup.cfg in releases anymore,\n    because it can have elements. We just remove the dev tag.\n    [tarek]\n\n0.3.6 (2008-04-29)\n==================\n\n  - wrote the documentation\n    [tarek]\n\n  - added the iw_plone_project template\n    [tarek]\n\n  - release command take care of version.txt if any\n    [gawel]\n\n  - add release hook\n    [gawel]\n\n0.3.5 (2008-04-22)\n==================\n\n  - added the project_eggs command\n    [tarek]\n\n  - now adding a MD5 file in the tarball released\n    [tarek]\n\n  - added project_md5\n    [tarek]\n\n0.3.4 (2008-04-17)\n==================\n\n  - added project_copy_eggs\n    [tarek]\n\n0.3.3 (2008-04-17)\n==================\n\n  - Excluding Scripts, Lib and downloads/dist\n    [tarek]\n\n0.3.2 (2008-04-17)\n==================\n\n  - protecting  shutil.rmtree call\n    [tarek]\n\n  - make the python prompt generation smarter\n    [tarek]\n\n  - remove stale bytecode by default. (This mean --keepbytecode has to be used\n    in order for the test to work)\n    [tarek]\n\n0.3.0\n=====\n\n  - fixed os.curdir misusage\n\n  - fixed build_mo (indent error)\n\n  - fixed over simple build_mo tests by adding garbage files\n\n0.2.9\n=====\n\n  - fixed a missing import\n\n0.2.8\n=====\n\n  - removed parts, bin, lib and other folders\n    from the release. We will have a special\n    mode later to provide them when a pre-built\n    is needed.\n\n  - fixed the project_diff target location\n\n0.2.7\n=====\n\n  - now has a config file to target the pypi servers\n\n  - project_release was not working with svn:// repositories\n\n0.2.6\n=====\n\n  - copying the libpython*.a file into buildout's libs folder, so virtualenv\n    works with MinGW under windows.\n\n  - added a version.txt file in the releases.\n\n0.2.5\n=====\n\n  - making sure we get virtualenv python2.4.*\n\n  - cleaned up tarball content\n\n  - making project_deploy work within the same folder\n\n0.2.4\n=====\n\n  - removed extra questions in project_release\n\n  - fixed release name\n\n  - fixed checkouts\n\n0.2.3\n=====\n\n  - added project_diff\n\n0.2.2\n=====\n\n  - make sure virtualenv (some version under win32) work with Scripts/python\n\n0.2.1\n=====\n\n  - make sure virtualenv work with 'python' or 'python2.4'\n\n  - the auto mode for package release is not launching the tests anymore\n\n  - fixed msgfmt type comparison\n\n0.2.0\n=====\n\n  - making sure the right cfg file is called with project_deploy\n\n0.1.9\n=====\n\n  - added 'build_mo' command for setuptools\n\n  - fix project_release relative paths\n\n  - explicitely uses ingeniweb-private to release\n    package\n\n0.1.8\n=====\n\n  - fix CR/LF\n\n0.1.7\n=====\n\n  - fix multiple upload\n\n0.1.6\n=====\n\n  - removing eggchecker\n\n0.1.5\n=====\n\n  - make sure we don't release by accident on unwanted server\n\n0.1.4\n=====\n\n  - fixed the caller\n\n  - using virtualenv to isolate egg on project_deploy step\n\n0.1.3\n=====\n\n  - added command line options\n\n0.1.2\n=====\n\n  - making sure download-cache is present\n\n  - added a snapshot file that is commited in the buildout\n    that is beeing released\n\n  - now tarball can contain only diffs from snapshots\n\n  - added iw.dist support\n\n0.1d\n====\n\n  - release step is not mandatory anymore\n\n0.1c\n====\n\n  - removed eggchecker dependency\n\n0.1b\n====\n\n  - renamed release module to packet module\n\n  - implemented a project release-r\n\n0.1\n===\n\n - initial version created by IngeniSkel", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/collective.releaser", "keywords": "egg setuptools extension", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "collective.releaser", "package_url": "https://pypi.org/project/collective.releaser/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.releaser/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/collective.releaser"}, "release_url": "https://pypi.org/project/collective.releaser/0.7.1/", "requires_dist": null, "requires_python": null, "summary": "Setuptools extension to release an egg", "version": "0.7.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Report any bug or feature requests to : <a href=\"http://trac.ingeniweb.com\" rel=\"nofollow\">http://trac.ingeniweb.com</a></p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#what-is-collective-releaser\" id=\"id39\" rel=\"nofollow\">What is collective.releaser ?</a></li>\n<li><a href=\"#how-to-install-collective-releaser\" id=\"id40\" rel=\"nofollow\">How to install collective.releaser ?</a></li>\n<li><a href=\"#how-to-use-collective-releaser\" id=\"id41\" rel=\"nofollow\">How to use collective.releaser ?</a><ul>\n<li><a href=\"#setting-up-your-environement\" id=\"id42\" rel=\"nofollow\">Setting up your environement</a></li>\n<li><a href=\"#creating-the-project-structure\" id=\"id43\" rel=\"nofollow\">Creating the project structure</a></li>\n<li><a href=\"#creating-egg-based-package\" id=\"id44\" rel=\"nofollow\">Creating egg-based package</a></li>\n<li><a href=\"#releasing-eggs\" id=\"id45\" rel=\"nofollow\">Releasing eggs</a></li>\n<li><a href=\"#releasing-the-project\" id=\"id46\" rel=\"nofollow\">Releasing the project</a></li>\n<li><a href=\"#upgrading-an-existing-buildout\" id=\"id47\" rel=\"nofollow\">Upgrading an existing buildout</a></li>\n</ul>\n</li>\n<li><a href=\"#id1\" id=\"id48\" rel=\"nofollow\">0.7.1 (2010-12-08)</a></li>\n<li><a href=\"#id2\" id=\"id49\" rel=\"nofollow\">0.7.0 (2010-09-30)</a></li>\n<li><a href=\"#id3\" id=\"id50\" rel=\"nofollow\">0.6.6 (2009-09-17)</a></li>\n<li><a href=\"#id4\" id=\"id51\" rel=\"nofollow\">0.6.5 (2009-08-31)</a></li>\n<li><a href=\"#id5\" id=\"id52\" rel=\"nofollow\">0.6.4 (2009-08-18)</a></li>\n<li><a href=\"#id6\" id=\"id53\" rel=\"nofollow\">0.6.3 (2009-08-18)</a></li>\n<li><a href=\"#id7\" id=\"id54\" rel=\"nofollow\">0.6.2 (2008-04-09)</a></li>\n<li><a href=\"#id8\" id=\"id55\" rel=\"nofollow\">0.6.1 (2008-07-16)</a></li>\n<li><a href=\"#id9\" id=\"id56\" rel=\"nofollow\">0.6.0 (2008-07-16)</a></li>\n<li><a href=\"#id10\" id=\"id57\" rel=\"nofollow\">0.5.2 (2008-06-19)</a></li>\n<li><a href=\"#id11\" id=\"id58\" rel=\"nofollow\">0.5.1 (2008-06-10)</a></li>\n<li><a href=\"#id12\" id=\"id59\" rel=\"nofollow\">0.5.0 (2008-05-21)</a></li>\n<li><a href=\"#id13\" id=\"id60\" rel=\"nofollow\">0.4.1 (2008-04-29)</a></li>\n<li><a href=\"#id14\" id=\"id61\" rel=\"nofollow\">0.3.6 (2008-04-29)</a></li>\n<li><a href=\"#id15\" id=\"id62\" rel=\"nofollow\">0.3.5 (2008-04-22)</a></li>\n<li><a href=\"#id16\" id=\"id63\" rel=\"nofollow\">0.3.4 (2008-04-17)</a></li>\n<li><a href=\"#id17\" id=\"id64\" rel=\"nofollow\">0.3.3 (2008-04-17)</a></li>\n<li><a href=\"#id18\" id=\"id65\" rel=\"nofollow\">0.3.2 (2008-04-17)</a></li>\n<li><a href=\"#id19\" id=\"id66\" rel=\"nofollow\">0.3.0</a></li>\n<li><a href=\"#id20\" id=\"id67\" rel=\"nofollow\">0.2.9</a></li>\n<li><a href=\"#id21\" id=\"id68\" rel=\"nofollow\">0.2.8</a></li>\n<li><a href=\"#id22\" id=\"id69\" rel=\"nofollow\">0.2.7</a></li>\n<li><a href=\"#id23\" id=\"id70\" rel=\"nofollow\">0.2.6</a></li>\n<li><a href=\"#id24\" id=\"id71\" rel=\"nofollow\">0.2.5</a></li>\n<li><a href=\"#id25\" id=\"id72\" rel=\"nofollow\">0.2.4</a></li>\n<li><a href=\"#id26\" id=\"id73\" rel=\"nofollow\">0.2.3</a></li>\n<li><a href=\"#id27\" id=\"id74\" rel=\"nofollow\">0.2.2</a></li>\n<li><a href=\"#id28\" id=\"id75\" rel=\"nofollow\">0.2.1</a></li>\n<li><a href=\"#id29\" id=\"id76\" rel=\"nofollow\">0.2.0</a></li>\n<li><a href=\"#id30\" id=\"id77\" rel=\"nofollow\">0.1.9</a></li>\n<li><a href=\"#id31\" id=\"id78\" rel=\"nofollow\">0.1.8</a></li>\n<li><a href=\"#id32\" id=\"id79\" rel=\"nofollow\">0.1.7</a></li>\n<li><a href=\"#id33\" id=\"id80\" rel=\"nofollow\">0.1.6</a></li>\n<li><a href=\"#id34\" id=\"id81\" rel=\"nofollow\">0.1.5</a></li>\n<li><a href=\"#id35\" id=\"id82\" rel=\"nofollow\">0.1.4</a></li>\n<li><a href=\"#id36\" id=\"id83\" rel=\"nofollow\">0.1.3</a></li>\n<li><a href=\"#id37\" id=\"id84\" rel=\"nofollow\">0.1.2</a></li>\n<li><a href=\"#d\" id=\"id85\" rel=\"nofollow\">0.1d</a></li>\n<li><a href=\"#c\" id=\"id86\" rel=\"nofollow\">0.1c</a></li>\n<li><a href=\"#b\" id=\"id87\" rel=\"nofollow\">0.1b</a></li>\n<li><a href=\"#id38\" id=\"id88\" rel=\"nofollow\">0.1</a></li>\n</ul>\n</div>\n<div id=\"what-is-collective-releaser\">\n<h2><a href=\"#id39\" rel=\"nofollow\">What is collective.releaser ?</a></h2>\n<p>collective.releaser provides command line utilities to make it easier to release\nand deploy zc.buildout/subversion based projects.</p>\n<p>It provides:</p>\n<ul>\n<li>new setuptools commands</li>\n</ul>\n<blockquote>\n<ul>\n<li><cite>release</cite>: used to release an egg-based package</li>\n<li><cite>build_mo</cite>: used to search and compile .po file</li>\n</ul>\n</blockquote>\n<ul>\n<li>console scripts</li>\n</ul>\n<blockquote>\n<ul>\n<li><cite>project_release</cite>: used to release a buildout based project</li>\n<li><cite>project_deploy</cite>: used to deploy a buildout based project</li>\n<li><cite>project_copy_eggs</cite>: used to collect all eggs used in a project</li>\n<li><cite>project_md5</cite>: used to compute the MD5 hash of a buildout project</li>\n<li><cite>package_svn_prepare</cite>: to restructure a new created package to be svn ready</li>\n</ul>\n</blockquote>\n<ul>\n<li>a hook to be able to launch actions when a package is released,\nwith a default one that sends an email on each release.</li>\n<li>a paste template to create a project structure, called <cite>releaser_project</cite>.</li>\n</ul>\n</div>\n<div id=\"how-to-install-collective-releaser\">\n<h2><a href=\"#id40\" rel=\"nofollow\">How to install collective.releaser ?</a></h2>\n<p>To install <cite>collective.releaser</cite>, you just need to run easy_install:</p>\n<pre>$ easy_install collective.releaser\n</pre>\n<p>or you can launch its setup if you have downloaded it:</p>\n<pre>$ python setup.py install\n</pre>\n</div>\n<div id=\"how-to-use-collective-releaser\">\n<h2><a href=\"#id41\" rel=\"nofollow\">How to use collective.releaser ?</a></h2>\n<p>To work with collective.releaser, let\u2019s do a small tutorial on how to create\na buildbout-based project. This is done in a few steps:</p>\n<ul>\n<li>setting up your environment</li>\n<li>creating the project structure</li>\n<li>creating egg-based packages</li>\n<li>releasing eggs</li>\n<li>releasing the buildout</li>\n<li>upgrading an existing buildout</li>\n</ul>\n<div id=\"setting-up-your-environement\">\n<h3><a href=\"#id42\" rel=\"nofollow\">Setting up your environement</a></h3>\n<p>The first thing to do to work smoothly with zc.buildout is to set up a\nfew things on your environment that apply globally to any Buildout-based\napplications.</p>\n<p>Put two files in your home directory:</p>\n<ul>\n<li><p><cite>HOME/.buildout/.httpauth</cite>: this file will contain the authentication\ninformation if the system tries to reach a http(s) ressource which is\npassword protected (like a svn server or a private web site).\nIt is a text file where each line is: realm,url,user,password</p>\n<p>For example:</p>\n<pre>trac,https://svn.ingeniweb.com,user,password\npypi,http://products.ingeniweb.com,user,password\n</pre>\n<p>This is used by <cite>lovely.buildouthttp</cite>.</p>\n</li>\n<li><p><cite>HOME/.buildout/default.cfg</cite>: This file set some defaults values, so\nBuildout can cache and spare downloaded eggs.</p>\n<p>For example:</p>\n<pre>[buildout]\ndownload-cache = /home/tarek/.buildout/downloads\neggs-directory = /home/tarek/.buildout/eggs\n</pre>\n</li>\n</ul>\n<p>Next, you need to make sure you can release your eggs to several\ntargets, because you may want some private eggs not to be published on\nPyPI. At this time, the only software that provides the same\nweb services than PyPI is Plone Software Center &gt;= 1.5.</p>\n<p>To make it possible to handle several PyPI-like servers,\nwe need to install a small add-on, called <cite>collective.dist</cite>:</p>\n<pre>$ easy_install collective.dist\n</pre>\n<p>This will allow you to define several servers in your ~/.pypirc file.\nFor instance if you are working with a private PyPI-like server you can\ndefine it like this in HOME/.pypirc</p>\n<pre>[distutils]\nindex-servers =\n    pypi\n    ingeniweb-public\n\n[pypi]\nusername:ingeniweb\npassword:secret\n\n[ingeniweb-public]\nrepository:http://products.ingeniweb.com/catalog\nusername:ingeniweb\npassword:secret\n</pre>\n<p>Last, you need to define the release strategy configuration, that\nwill define for each target server the list of packages that must be released\nthere (regular expressions) and the command sequence that is used\nwith setup.py. Here\u2019s a default example, that can be added in your <cite>.pypirc</cite>\nas well, by completing the sections with <cite>release-command</cite> and\n<cite>release-packages</cite> variables:</p>\n<pre>...\n\n[ingeniweb-public]\n...\nrelease-command = mregister sdist build_mo bdist_egg mupload\nrelease-packages =\n    ^iw\\..*\n\n[pypi]\n...\nrelease-command = mregister sdist build_mo bdist_egg mupload\nrelease-packages =\n    ^plone\\..*\n    ^collective\\..*\n</pre>\n<p>This will push all eggs that starts with <cite>plone.</cite> or <cite>collective.</cite>\nto PyPI and all eggs that starts with <cite>iw.</cite> to ingeniweb-public.\nThe command used to push the packages are defined by <cite>command</cite>.</p>\n</div>\n<div id=\"creating-the-project-structure\">\n<h3><a href=\"#id43\" rel=\"nofollow\">Creating the project structure</a></h3>\n<p>Every project must be structured the same way:</p>\n<pre>$ paster create -t releaser_project my_project\n</pre>\n<p>This will ask you for a few values:</p>\n<ul>\n<li>project_name: the name of the project</li>\n<li>project_repo: the root of the subversion repository</li>\n<li>some more values that can be left to default.</li>\n</ul>\n<p>This will generate a set of folders in <cite>my_project</cite>:</p>\n<pre>$ ls my_project\n./buildout\n./bundles\n./docs\n./packages\n./releases\n</pre>\n<p>Each folder has a role:</p>\n<ul>\n<li>buildout: contains the buildout configuration files</li>\n<li>bundles: contains the bundle used to work in develop mode</li>\n<li>docs: contains the documentation about the project</li>\n<li>packages: contains the egg-based package(s)</li>\n<li>releases: contains the releases of the buildout</li>\n</ul>\n<p>This structure must be commited in subversion:</p>\n<pre>$ svn import my_project http://some.svn/my_project -m \"initial commit\"\n</pre>\n<p>You will then be able to work in your buildout.</p>\n</div>\n<div id=\"creating-egg-based-package\">\n<h3><a href=\"#id44\" rel=\"nofollow\">Creating egg-based package</a></h3>\n<p>From there you can add some packages into the project, by putting them\nin the <cite>packages</cite> folder, by using any template available in ZopeSkel.</p>\n<p><strong>Be carefull though, you must use a trunk/tags/branches structure in\npackages for each project.</strong></p>\n<pre>$ cd my_projet/packages\n$ paster create -t plone plone.example\n$ package_svn_prepare plone.example\n</pre>\n<p>The last command just does the following:</p>\n<pre>$ mv plone.example plone.example_md5_of_plone.example\n$ mkdir plone.example\n$ mkdir plone.example/tags plone.example/branches\n$ mv plone.example_md5_of_plone.example plone.example/trunk\n$ svn add plone.example\n$ svn ci -m \"initial import of  plone.example\"\n</pre>\n<p><strong>Do not use trunk as a package name with paster, as this will generate\nbad metadata in the package.</strong></p>\n<p>A special section can be added into <cite>setup.cfg</cite>, in order\nto send a mail everytime the package is released:</p>\n<pre>[mail_hook]\nhook = collective.releaser:mail\nfrom = support@ingeniweb.com\nemails =\n     trac@lists.ingeniweb.com\n</pre>\n<p>If your system does not have a SMTP server, you will need to add\nthe name of a SMTP server, and its port in your .pypirc file,\nin a <cite>mail_hook</cite> section:</p>\n<pre>[mail_hook]\nhost = smtp.neuf.fr\nport = 25\n</pre>\n<p>From there you can bind the package to your buildout, with a develop\nvariable, in your <cite>my_project/buildout folder</cite>:</p>\n<pre>[buildout]\n...\ndevelop=\n    .../packages/monprojet.reports/trunk\n</pre>\n<p>The <cite>bundle</cite> folder can also be used to set svn:externals to make it\nsimpler to work in the buildout.</p>\n</div>\n<div id=\"releasing-eggs\">\n<h3><a href=\"#id45\" rel=\"nofollow\">Releasing eggs</a></h3>\n<p>Releasing eggs is done by calling <cite>release</cite> from a package:</p>\n<pre>$ python setup.py release\nrunning release\nThis package is version 0.1.2\nDo you want to run tests before releasing ? [y/N]: N\nDo you want to create the release ? If no, you will just be able to deploy again the current release [y/N]: Y\nEnter a version [0.1.2]: 0.1.2\nCommiting changes...\nCreating branches...\n...\n</pre>\n<p>This will take care of:</p>\n<ul>\n<li>upgrading the setup.py version</li>\n<li>creating a branch and a tag in svn</li>\n<li>pushing the package to the various PyPI-like servers</li>\n<li>sending a mail with the changes, if the mail_hook section was provided in setup.cfg</li>\n</ul>\n<p>If you want to release a package from a non-svn folder then use this command to disable specific svn hooks:</p>\n<pre>$ python setup.py release --pre-hook --post-hook\n</pre>\n<p>You can also use some parameters to avoid command line prompt:</p>\n<pre>$ python setup.py release -a --version=0.1.3\n</pre>\n</div>\n<div id=\"releasing-the-project\">\n<h3><a href=\"#id46\" rel=\"nofollow\">Releasing the project</a></h3>\n<p>Releasing the project consists of calling <cite>project_release</cite> then\n<cite>project_deploy</cite>.</p>\n<p><cite>project_release</cite> will just create a new branch in subversion:</p>\n<pre>$ cd my_project/buildout\n$ project_release --no-archive --version=0.1\n</pre>\n<p>This will copy <cite>my_project/buildout</cite> to <cite>my_project/releases/0.1</cite> in\nsubversion. You can then work in this release, to pinpoint the versions\nin your buildout. A good practice is to create a dedicated cfg file\nfor deployment.</p>\n<p>The next step is to generate a tarball with <cite>project_deploy</cite>:</p>\n<pre>$ cd /tmp\n$ svn co http://somesvn/my_projet/releases/0.1 my_project\n$ cd my_project\n$ project_deploy prod.cfg\n</pre>\n<p>This will build a tarball in <cite>/tmp</cite> using VirtualEnv, and set everything up\nso the buildout can be reinstalled offline anywhere with this archive.</p>\n<p>The resulting release can be installed with two lines:</p>\n<pre>$ python boostrap.py\n$ bin/buildout\n</pre>\n</div>\n<div id=\"upgrading-an-existing-buildout\">\n<h3><a href=\"#id47\" rel=\"nofollow\">Upgrading an existing buildout</a></h3>\n<p>To upgrade an existing buildout, you can use the <cite>project_release</cite> command.\nIt will create a tarball with all eggs needed to run the project and the\n.cfg files.</p>\n<p>Run it in your buildout, by pointing the .cfg and by providing a name of\nthe archive:</p>\n<pre>$ cd my_project/buildout\n$ project_release --version=0.2\n</pre>\n<p>This will release all develop eggs found in <cite>dev.cfg</cite>. If your <cite>dev.cfg</cite> look like:</p>\n<pre>[buildout]\nparts = eggs\ndevelop =\n  ../my.package\n  ../my.other\n\n[eggs]\nrecipe = zc.recipe.egg\neggs =\n  my.package\n  my.other\n</pre>\n<p>Then <cite>my.package</cite> and <cite>my.other</cite> will be released and then added to an archive\nwith all .cfg files.</p>\n<p>If you have a static version in your <cite>prod.cfg</cite>:</p>\n<pre>[buildout]\nparts = eggs\nversions = versions\n\n[versions]\nmy.package = 0.1\n\n[eggs]\nrecipe = zc.recipe.egg\neggs =\n  my.package\n  my.other\n</pre>\n<p>Then only <cite>my.other</cite> will be released but both added to the archive.</p>\n<p>The default config file of the archive (eg: <cite>buildout.cfg</cite>) will look like\nthis:</p>\n<pre>[buildout]\nextends = prod.cfg\nversions = versions\n\n[versions]\nmy.package=0.1\nmy.other=0.2\n</pre>\n<p>So you can just run <cite>./bin/buildout</cite> on your production server to use the\ncorrect packages versions.</p>\n</div>\n</div>\n<div id=\"id1\">\n<h2><a href=\"#id48\" rel=\"nofollow\">0.7.1 (2010-12-08)</a></h2>\n<blockquote>\n<ul>\n<li>Fixed issue with mingw32 not working inside the virtualenv,\nby making sure we copy the distutils.cfg file.\n[deo]</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id2\">\n<h2><a href=\"#id49\" rel=\"nofollow\">0.7.0 (2010-09-30)</a></h2>\n<blockquote>\n<ul>\n<li>Added some fixes to make (most) tests pass on Windows.\n[dreamcatcher]</li>\n<li>Fixed issue with broken target file on project_deploy.\n[dreamcatcher]</li>\n<li>Changed to only upgrade setuptools/zc.buildout if requested.\n[deo]</li>\n<li>Added a dependency on virtualenv instead of shipping with an\noutdated version which potentially can damage your development\nenvironment.\n[deo]</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id3\">\n<h2><a href=\"#id50\" rel=\"nofollow\">0.6.6 (2009-09-17)</a></h2>\n<blockquote>\n<ul>\n<li>Made sure to resolve the filename to use an absolute path.\n[gawel]</li>\n<li>Made sure that our package is in sys.path before releasing.\n[gawel]</li>\n<li>Fixed ReST formatting issue.\n[gawel]</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id4\">\n<h2><a href=\"#id51\" rel=\"nofollow\">0.6.5 (2009-08-31)</a></h2>\n<blockquote>\n<ul>\n<li>Fixed NameError introduced here (<a href=\"https://dev.plone.org/collective/changeset/85145/collective.releaser/branches/refactor/collective/releaser/project.py\" rel=\"nofollow\">https://dev.plone.org/collective/changeset/85145/collective.releaser/branches/refactor/collective/releaser/project.py</a>)\n[glenfant]</li>\n<li>Made tests smile\n[glenfant]</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id5\">\n<h2><a href=\"#id52\" rel=\"nofollow\">0.6.4 (2009-08-18)</a></h2>\n<blockquote>\n<ul>\n<li>More docs and sphinxifying docs.\n[gawel]</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id6\">\n<h2><a href=\"#id53\" rel=\"nofollow\">0.6.3 (2009-08-18)</a></h2>\n<blockquote>\n<ul>\n<li>project_release improvement (see <a href=\"http://www.gawel.org/weblog/en/2009/05/collective.releaser_rocks\" rel=\"nofollow\">http://www.gawel.org/weblog/en/2009/05/collective.releaser_rocks</a>) [gawel]</li>\n<li>removed the long_description checker (belongs to collective.dist now)\n[tarek]</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id7\">\n<h2><a href=\"#id54\" rel=\"nofollow\">0.6.2 (2008-04-09)</a></h2>\n<blockquote>\n<ul>\n<li>make sure the bootstrap.py works offline [tarek]</li>\n<li>fixed build_mo command for Django eggs [b_mathieu]</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id8\">\n<h2><a href=\"#id55\" rel=\"nofollow\">0.6.1 (2008-07-16)</a></h2>\n<blockquote>\n<ul>\n<li>adding a buildbot folder, with a pre-generated\ncollective.buildbot environment [tarek]</li>\n<li>prefacing all svn commit messages [tarek]</li>\n<li>better tarball naming [tarek]</li>\n<li>introduced glob-style option to be able to do\nglob-style patterns\n[tarek]</li>\n<li>removed branch creation\n[tarek]</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id9\">\n<h2><a href=\"#id56\" rel=\"nofollow\">0.6.0 (2008-07-16)</a></h2>\n<blockquote>\n<ul>\n<li>fixed <cite>project_deploy</cite> so\nit supports non buildout.cfg buildouts\nThanks to Hans-Peter Locher for feedback\n[tarek]</li>\n<li>using Popen to read metadata [tarek]</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id10\">\n<h2><a href=\"#id57\" rel=\"nofollow\">0.5.2 (2008-06-19)</a></h2>\n<blockquote>\n<ul>\n<li>now checking the long_description field to make sure\nit is reST compliant [tarek]</li>\n<li>backported Python 2.5 tarfile module [tarek]</li>\n<li>fixed #66 [tarek]</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id11\">\n<h2><a href=\"#id58\" rel=\"nofollow\">0.5.1 (2008-06-10)</a></h2>\n<blockquote>\n<ul>\n<li>emptied parts section in the template/\n[tarek]</li>\n<li>os.rename -&gt; shutil.move\n[tarek]</li>\n<li>added paster() in testing to ease tests\n[tarek]</li>\n<li>Fix empty or missing parts under windows when the recipe use subversion\n[encolpe]</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id12\">\n<h2><a href=\"#id59\" rel=\"nofollow\">0.5.0 (2008-05-21)</a></h2>\n<blockquote>\n<ul>\n<li>moved to collective\n[tarek]</li>\n<li>added package_svn_prepare command to restructure a new created package with\ntrunk, tags and branches then add it to the current working copy and ci it\nto svn as \u2018initial import\u2019 if the current directory is a working copy.\n[mustapha]</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id13\">\n<h2><a href=\"#id60\" rel=\"nofollow\">0.4.1 (2008-04-29)</a></h2>\n<blockquote>\n<ul>\n<li>now <cite>release</cite> can be driven from .pypirc as well\n[tarek]</li>\n<li>We are not removing setup.cfg in releases anymore,\nbecause it can have elements. We just remove the dev tag.\n[tarek]</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id14\">\n<h2><a href=\"#id61\" rel=\"nofollow\">0.3.6 (2008-04-29)</a></h2>\n<blockquote>\n<ul>\n<li>wrote the documentation\n[tarek]</li>\n<li>added the iw_plone_project template\n[tarek]</li>\n<li>release command take care of version.txt if any\n[gawel]</li>\n<li>add release hook\n[gawel]</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id15\">\n<h2><a href=\"#id62\" rel=\"nofollow\">0.3.5 (2008-04-22)</a></h2>\n<blockquote>\n<ul>\n<li>added the project_eggs command\n[tarek]</li>\n<li>now adding a MD5 file in the tarball released\n[tarek]</li>\n<li>added project_md5\n[tarek]</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id16\">\n<h2><a href=\"#id63\" rel=\"nofollow\">0.3.4 (2008-04-17)</a></h2>\n<blockquote>\n<ul>\n<li>added project_copy_eggs\n[tarek]</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id17\">\n<h2><a href=\"#id64\" rel=\"nofollow\">0.3.3 (2008-04-17)</a></h2>\n<blockquote>\n<ul>\n<li>Excluding Scripts, Lib and downloads/dist\n[tarek]</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id18\">\n<h2><a href=\"#id65\" rel=\"nofollow\">0.3.2 (2008-04-17)</a></h2>\n<blockquote>\n<ul>\n<li>protecting  shutil.rmtree call\n[tarek]</li>\n<li>make the python prompt generation smarter\n[tarek]</li>\n<li>remove stale bytecode by default. (This mean \u2013keepbytecode has to be used\nin order for the test to work)\n[tarek]</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id19\">\n<h2><a href=\"#id66\" rel=\"nofollow\">0.3.0</a></h2>\n<blockquote>\n<ul>\n<li>fixed os.curdir misusage</li>\n<li>fixed build_mo (indent error)</li>\n<li>fixed over simple build_mo tests by adding garbage files</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id20\">\n<h2><a href=\"#id67\" rel=\"nofollow\">0.2.9</a></h2>\n<blockquote>\n<ul>\n<li>fixed a missing import</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id21\">\n<h2><a href=\"#id68\" rel=\"nofollow\">0.2.8</a></h2>\n<blockquote>\n<ul>\n<li>removed parts, bin, lib and other folders\nfrom the release. We will have a special\nmode later to provide them when a pre-built\nis needed.</li>\n<li>fixed the project_diff target location</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id22\">\n<h2><a href=\"#id69\" rel=\"nofollow\">0.2.7</a></h2>\n<blockquote>\n<ul>\n<li>now has a config file to target the pypi servers</li>\n<li>project_release was not working with svn:// repositories</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id23\">\n<h2><a href=\"#id70\" rel=\"nofollow\">0.2.6</a></h2>\n<blockquote>\n<ul>\n<li>copying the libpython*.a file into buildout\u2019s libs folder, so virtualenv\nworks with MinGW under windows.</li>\n<li>added a version.txt file in the releases.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id24\">\n<h2><a href=\"#id71\" rel=\"nofollow\">0.2.5</a></h2>\n<blockquote>\n<ul>\n<li>making sure we get virtualenv python2.4.*</li>\n<li>cleaned up tarball content</li>\n<li>making project_deploy work within the same folder</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id25\">\n<h2><a href=\"#id72\" rel=\"nofollow\">0.2.4</a></h2>\n<blockquote>\n<ul>\n<li>removed extra questions in project_release</li>\n<li>fixed release name</li>\n<li>fixed checkouts</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id26\">\n<h2><a href=\"#id73\" rel=\"nofollow\">0.2.3</a></h2>\n<blockquote>\n<ul>\n<li>added project_diff</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id27\">\n<h2><a href=\"#id74\" rel=\"nofollow\">0.2.2</a></h2>\n<blockquote>\n<ul>\n<li>make sure virtualenv (some version under win32) work with Scripts/python</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id28\">\n<h2><a href=\"#id75\" rel=\"nofollow\">0.2.1</a></h2>\n<blockquote>\n<ul>\n<li>make sure virtualenv work with \u2018python\u2019 or \u2018python2.4\u2019</li>\n<li>the auto mode for package release is not launching the tests anymore</li>\n<li>fixed msgfmt type comparison</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id29\">\n<h2><a href=\"#id76\" rel=\"nofollow\">0.2.0</a></h2>\n<blockquote>\n<ul>\n<li>making sure the right cfg file is called with project_deploy</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id30\">\n<h2><a href=\"#id77\" rel=\"nofollow\">0.1.9</a></h2>\n<blockquote>\n<ul>\n<li>added \u2018build_mo\u2019 command for setuptools</li>\n<li>fix project_release relative paths</li>\n<li>explicitely uses ingeniweb-private to release\npackage</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id31\">\n<h2><a href=\"#id78\" rel=\"nofollow\">0.1.8</a></h2>\n<blockquote>\n<ul>\n<li>fix CR/LF</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id32\">\n<h2><a href=\"#id79\" rel=\"nofollow\">0.1.7</a></h2>\n<blockquote>\n<ul>\n<li>fix multiple upload</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id33\">\n<h2><a href=\"#id80\" rel=\"nofollow\">0.1.6</a></h2>\n<blockquote>\n<ul>\n<li>removing eggchecker</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id34\">\n<h2><a href=\"#id81\" rel=\"nofollow\">0.1.5</a></h2>\n<blockquote>\n<ul>\n<li>make sure we don\u2019t release by accident on unwanted server</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id35\">\n<h2><a href=\"#id82\" rel=\"nofollow\">0.1.4</a></h2>\n<blockquote>\n<ul>\n<li>fixed the caller</li>\n<li>using virtualenv to isolate egg on project_deploy step</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id36\">\n<h2><a href=\"#id83\" rel=\"nofollow\">0.1.3</a></h2>\n<blockquote>\n<ul>\n<li>added command line options</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id37\">\n<h2><a href=\"#id84\" rel=\"nofollow\">0.1.2</a></h2>\n<blockquote>\n<ul>\n<li>making sure download-cache is present</li>\n<li>added a snapshot file that is commited in the buildout\nthat is beeing released</li>\n<li>now tarball can contain only diffs from snapshots</li>\n<li>added iw.dist support</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"d\">\n<h2><a href=\"#id85\" rel=\"nofollow\">0.1d</a></h2>\n<blockquote>\n<ul>\n<li>release step is not mandatory anymore</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"c\">\n<h2><a href=\"#id86\" rel=\"nofollow\">0.1c</a></h2>\n<blockquote>\n<ul>\n<li>removed eggchecker dependency</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"b\">\n<h2><a href=\"#id87\" rel=\"nofollow\">0.1b</a></h2>\n<blockquote>\n<ul>\n<li>renamed release module to packet module</li>\n<li>implemented a project release-r</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id38\">\n<h2><a href=\"#id88\" rel=\"nofollow\">0.1</a></h2>\n<blockquote>\n<ul>\n<li>initial version created by IngeniSkel</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 755030, "releases": {"0.5.0": [{"comment_text": "", "digests": {"md5": "56075c0b829d550e5dc8d4df0be3db63", "sha256": "de2e02f4fcc462fe3c84fec6bdd0e07eacbe182daf3fc4589c065558b4d5c994"}, "downloads": -1, "filename": "collective.releaser-0.5.0-py2.4.egg", "has_sig": false, "md5_digest": "56075c0b829d550e5dc8d4df0be3db63", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 166967, "upload_time": "2008-05-21T11:31:34", "upload_time_iso_8601": "2008-05-21T11:31:34Z", "url": "https://files.pythonhosted.org/packages/d7/b9/d4b70e0e2d9964f755cecdf12f20f72d2f3d7e9fce21b6ddc709cfe78548/collective.releaser-0.5.0-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f00fe03bef0e419f6daf0476f4b07eca", "sha256": "9d9c2469684415fe3a1d32a3148c3bda24a758cbb4edd5f88966716b2b2014c7"}, "downloads": -1, "filename": "collective.releaser-0.5.0.tar.gz", "has_sig": false, "md5_digest": "f00fe03bef0e419f6daf0476f4b07eca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78365, "upload_time": "2008-05-21T11:31:32", "upload_time_iso_8601": "2008-05-21T11:31:32Z", "url": "https://files.pythonhosted.org/packages/f3/6d/3579fedb0704ecf16547d5ccd65255fc00bb4ca2be5478703a65f4785ab8/collective.releaser-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "7ee1a4c13ba9183e513b75ce5c8cf16d", "sha256": "9f286d567d70a40ff1eb3b746a08cd46ecc82e5947596275273cc94d53f96f3d"}, "downloads": -1, "filename": "collective.releaser-0.5.1-py2.4.egg", "has_sig": false, "md5_digest": "7ee1a4c13ba9183e513b75ce5c8cf16d", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 168798, "upload_time": "2008-06-10T16:47:27", "upload_time_iso_8601": "2008-06-10T16:47:27Z", "url": "https://files.pythonhosted.org/packages/4a/06/b148f13c7dc380396549c7341541f567154c13dfdf0613551d837600d0dc/collective.releaser-0.5.1-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "659a536b49a16797a095507385d7aa6e", "sha256": "4a410357e17f005ebd8cb938bcc14f08406410227e270727d094475ea8557ed8"}, "downloads": -1, "filename": "collective.releaser-0.5.1.tar.gz", "has_sig": false, "md5_digest": "659a536b49a16797a095507385d7aa6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79339, "upload_time": "2008-06-10T16:47:23", "upload_time_iso_8601": "2008-06-10T16:47:23Z", "url": "https://files.pythonhosted.org/packages/fe/41/b94cb075737ce69a53aee5d9903a07cbc6cb1c2fd16df89278696301e324/collective.releaser-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "14012fe70a4f5bd9dc19e6f7262e36cc", "sha256": "7eb9a43ab0155675c6c0d92503ae76a500b48f77e5db8af7470d44917b80ac55"}, "downloads": -1, "filename": "collective.releaser-0.5.2-py2.4.egg", "has_sig": false, "md5_digest": "14012fe70a4f5bd9dc19e6f7262e36cc", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 212115, "upload_time": "2008-06-19T14:36:30", "upload_time_iso_8601": "2008-06-19T14:36:30Z", "url": "https://files.pythonhosted.org/packages/25/73/1d5e90c018b4b59d718fc07785dd1c4f813b9731e968bb85f94994879286/collective.releaser-0.5.2-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "2db794f4bcfec0967979615560ee2f7f", "sha256": "80ea62981841edf7b44e7288d1d9783081f4569bf3c9018e71080d06756bc166"}, "downloads": -1, "filename": "collective.releaser-0.5.2.tar.gz", "has_sig": false, "md5_digest": "2db794f4bcfec0967979615560ee2f7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 97414, "upload_time": "2008-06-19T14:36:27", "upload_time_iso_8601": "2008-06-19T14:36:27Z", "url": "https://files.pythonhosted.org/packages/1a/f7/0f656d9a4cb8b430566ca0716109d085d29f79cc1d72b31eba6521519918/collective.releaser-0.5.2.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "4a97a6c094e382b12e41ce4d8af0c968", "sha256": "a4ec67232e4919f538ee1b302f287ce5aaddbca9b266d1eeab0ef5a208f2f6cf"}, "downloads": -1, "filename": "collective.releaser-0.6.0-py2.4.egg", "has_sig": false, "md5_digest": "4a97a6c094e382b12e41ce4d8af0c968", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 215293, "upload_time": "2008-07-16T13:20:13", "upload_time_iso_8601": "2008-07-16T13:20:13Z", "url": "https://files.pythonhosted.org/packages/07/b5/1a229bb0699fe4a16c20123b80b02e690275511932e8f844abfe6bb28594/collective.releaser-0.6.0-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "a183165edc499339315bd4e0cdd6233a", "sha256": "584d8d5db18cc296308a00889b610086817f85a08b23a631ec33d709800f43c4"}, "downloads": -1, "filename": "collective.releaser-0.6.0.tar.gz", "has_sig": false, "md5_digest": "a183165edc499339315bd4e0cdd6233a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 97737, "upload_time": "2008-07-16T13:20:10", "upload_time_iso_8601": "2008-07-16T13:20:10Z", "url": "https://files.pythonhosted.org/packages/45/dd/06c654cebd0f2f06463657520e10933220efdced98266cda4bfefccaf45f/collective.releaser-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "f89f3417d7a14e22170e85ed6ae9ce48", "sha256": "dba3efd8391689e9f208a73ad9181baa14bad8559d6cf96f027cd547790ff47a"}, "downloads": -1, "filename": "collective.releaser-0.6.1.tar.gz", "has_sig": false, "md5_digest": "f89f3417d7a14e22170e85ed6ae9ce48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 99978, "upload_time": "2009-05-04T15:08:57", "upload_time_iso_8601": "2009-05-04T15:08:57.591770Z", "url": "https://files.pythonhosted.org/packages/eb/ca/a5672df95f6552710bbe48c842ea94c34ae2ea81965ab418afdc36f6b670/collective.releaser-0.6.1.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "83c03e129976dc3791a2d6d7d0bd8d85", "sha256": "c8bad3c1ac62aeed6c182e0d5cb03027b679e38c20cfc5d4c0a1b1679fbc0e61"}, "downloads": -1, "filename": "collective.releaser-0.6.3.tar.gz", "has_sig": false, "md5_digest": "83c03e129976dc3791a2d6d7d0bd8d85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 108204, "upload_time": "2009-08-18T10:54:59", "upload_time_iso_8601": "2009-08-18T10:54:59.774756Z", "url": "https://files.pythonhosted.org/packages/f9/cb/419303abe7f900b84a1d74bf568116dfc001771645c5264178aee7828e38/collective.releaser-0.6.3.tar.gz", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "c7aa407b152fb130059edcf04e52d05b", "sha256": "c392a72a713d623f5c2115b3fbfab1beab09317f733ec6f7f68a3835f400f5e4"}, "downloads": -1, "filename": "collective.releaser-0.6.4.tar.gz", "has_sig": false, "md5_digest": "c7aa407b152fb130059edcf04e52d05b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 109246, "upload_time": "2009-08-18T14:44:02", "upload_time_iso_8601": "2009-08-18T14:44:02.000283Z", "url": "https://files.pythonhosted.org/packages/88/50/238e6984e9328a388349ab15cbf356d33c7fc6430748037fa40b201bac19/collective.releaser-0.6.4.tar.gz", "yanked": false}], "0.6.5": [{"comment_text": "", "digests": {"md5": "e54558d0d8cfacf7990782ff355a64f4", "sha256": "ef29ac70efdf40b4ac2ca7cb63df8f82cfee434ec51657fbba1914b83bf9b1de"}, "downloads": -1, "filename": "collective.releaser-0.6.5.tar.gz", "has_sig": false, "md5_digest": "e54558d0d8cfacf7990782ff355a64f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 115650, "upload_time": "2009-08-31T13:32:50", "upload_time_iso_8601": "2009-08-31T13:32:50.900032Z", "url": "https://files.pythonhosted.org/packages/16/84/d8b11d6620d16ccf8c4fc4c88bd8c457975373444da525531401d68eff04/collective.releaser-0.6.5.tar.gz", "yanked": false}], "0.6.5dev-r96234": [{"comment_text": "", "digests": {"md5": "7ee7ea71cbb04d6b391f3db110d9c4f3", "sha256": "107e59145c9ade3e31009ee96646ed183412f4bb63b2bfc04c77cdfe1a72111f"}, "downloads": -1, "filename": "collective.releaser-0.6.5dev_r96234-py2.4.egg", "has_sig": false, "md5_digest": "7ee7ea71cbb04d6b391f3db110d9c4f3", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 238119, "upload_time": "2009-08-31T13:28:45", "upload_time_iso_8601": "2009-08-31T13:28:45.389912Z", "url": "https://files.pythonhosted.org/packages/47/6d/25564c8d084f0587f257b1ce37ca03e9cb2a5195a43e3a04b00e27ce7fc9/collective.releaser-0.6.5dev_r96234-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "710b7ac462f47889e305640260bb6b13", "sha256": "9ef0381cf97dd3f6c07640a0368197ddb92526af869dada0ac3405843a7ae7fe"}, "downloads": -1, "filename": "collective.releaser-0.6.5dev-r96234.tar.gz", "has_sig": false, "md5_digest": "710b7ac462f47889e305640260bb6b13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 115501, "upload_time": "2009-08-31T13:28:41", "upload_time_iso_8601": "2009-08-31T13:28:41.996910Z", "url": "https://files.pythonhosted.org/packages/46/b5/d91091f1799480c94586e67f5d2b9c075a4d9ed8940f0e9f6db07c2a8552/collective.releaser-0.6.5dev-r96234.tar.gz", "yanked": false}], "0.6.6": [{"comment_text": "", "digests": {"md5": "15f763e174743d49fa6ee06553a5e4bc", "sha256": "d17c4dfeb31ad9d5da7e1d4a159c543956137815c0e51b954ca9b243696dbd82"}, "downloads": -1, "filename": "collective.releaser-0.6.6.tar.gz", "has_sig": false, "md5_digest": "15f763e174743d49fa6ee06553a5e4bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 114080, "upload_time": "2009-09-17T15:36:19", "upload_time_iso_8601": "2009-09-17T15:36:19.432869Z", "url": "https://files.pythonhosted.org/packages/80/4a/07e846acbf9a65b45d81da4440164e7b3a8c5ca6d090b04ba551cab534e3/collective.releaser-0.6.6.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "88c7d8a2f52c2438cfb3c145791aafe0", "sha256": "ff1664b1bb48157dc1969f8b4dc776e6795b68282314f31f63bb6d89d848a991"}, "downloads": -1, "filename": "collective.releaser-0.7.0.tar.gz", "has_sig": false, "md5_digest": "88c7d8a2f52c2438cfb3c145791aafe0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 95696, "upload_time": "2010-09-30T19:22:44", "upload_time_iso_8601": "2010-09-30T19:22:44.092611Z", "url": "https://files.pythonhosted.org/packages/80/b8/91aa0745be73b3eb641d428c4016fa652d5498af13a14aea461a25b43ca6/collective.releaser-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "de114c4b6805af55cc5d46f8d3bfa613", "sha256": "10f6a969f8527acfc428c0f001ad025ba73884040dd72f557014ac64b8efe25e"}, "downloads": -1, "filename": "collective.releaser-0.7.1.tar.gz", "has_sig": false, "md5_digest": "de114c4b6805af55cc5d46f8d3bfa613", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 96071, "upload_time": "2010-12-08T05:58:56", "upload_time_iso_8601": "2010-12-08T05:58:56.977691Z", "url": "https://files.pythonhosted.org/packages/1a/79/04f6f17b63682e610c9ec798be84921c71119242631ecff5a486022a5084/collective.releaser-0.7.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "de114c4b6805af55cc5d46f8d3bfa613", "sha256": "10f6a969f8527acfc428c0f001ad025ba73884040dd72f557014ac64b8efe25e"}, "downloads": -1, "filename": "collective.releaser-0.7.1.tar.gz", "has_sig": false, "md5_digest": "de114c4b6805af55cc5d46f8d3bfa613", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 96071, "upload_time": "2010-12-08T05:58:56", "upload_time_iso_8601": "2010-12-08T05:58:56.977691Z", "url": "https://files.pythonhosted.org/packages/1a/79/04f6f17b63682e610c9ec798be84921c71119242631ecff5a486022a5084/collective.releaser-0.7.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:52 2020"}