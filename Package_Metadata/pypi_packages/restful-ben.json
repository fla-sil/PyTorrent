{"info": {"author": "Andrew Madonna", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# RESTful Ben\n\nBen's had a nap, he's feeling RESTful and ready to go.\n\nA libray to assist creating [SQLAlchemy](https://www.sqlalchemy.org/), [Flask](http://flask.pocoo.org/), and [flask-restful](https://flask-restful.readthedocs.io/en/0.3.5/) based APIs.\n\n### Features\n\n- RESTful resources\n\t- Generates POST, GET (individual and list), PUT, and DELETE endpoints based on a SQLAlchemy model and a [Marshmallow](https://marshmallow.readthedocs.io/en/latest/) schema.\n\t- Query engine\n\t\t- Field selection\n\t\t- Filtering\n\t\t- Sorting\n\t\t- Pagination\n- Authentication\n\t- Username and password based sessions\n\t- CSRF\n\t- Session endpoint - login (POST) and logout (DELETE)\n- Authorization\n   - Basic role based authorization\n   - Roles map to HTTP verbs (GET, POST, etc)\n\n## Usage\n\n### Basic API\n\nCreate a model\n\n```py\nclass Cat(BaseModel):\n    __tablename__ = 'cats'\n\n    id = Column(Integer, primary_key=True)\n    name = Column(String, nullable=False)\n    pattern = Column(String)\n    age = Column(Integer)\n    created_at = Column(DateTime,\n                        nullable=False,\n                        server_default=func.now())\n    updated_at = Column(DateTime,\n                        nullable=False,\n                        server_default=func.now(),\n                        onupdate=func.now())\n```\n\nCreate a [Marshmallow](https://marshmallow.readthedocs.io/en/latest/) schema to map a model to a JSON representation. This uses [Marshmallow SQLAlchemy](https://marshmallow-sqlalchemy.readthedocs.io/en/latest/) to generate the schema automatically.\n\n```py\nclass CatSchema(ModelSchema):\n    class Meta:\n        model = Cat\n\n    id = field_for(Cat, 'id', dump_only=True)\n    created_at = field_for(Cat, 'created_at', dump_only=True)\n    updated_at = field_for(Cat, 'updated_at', dump_only=True)\n\ncat_schema = CatSchema()\ncats_schema = CatSchema(many=True)\n```\n\nCreate a resource for single Cat access, eg `/cats/:id`\n\n```py\nclass CatResource(RetrieveUpdateDeleteResource):\n    single_schema = cat_schema\n    model = Cat\n    session = db.session\n```\n\nCreate a resource for listing Cats, eg `/cats`.\n\n```py\nclass CatListResource(QueryEngineMixin, CreateListResource):\n    single_schema = cat_schema\n    many_schema = cats_schema\n    model = Cat\n    session = db.session\n```\n\nSetup your flask app:\n\n```py\nimport flask\nfrom flask_sqlalchemy import SQLAlchemy\nfrom flask_restful import Api\n\nfrom .routes import CatListResource, CatResource\n\ndb = SQLAlchemy()\n\napp = flask.Flask(__name__)\napp.config['SQLALCHEMY_DATABASE_URI'] = 'some db'\n\ndb.init_app(app)\napi = Api(app)\n\nwith app.app_context():\n    db.create_all()\n\n    api.add_resource(CatListResource, '/cats')\n    api.add_resource(CatResource, '/cats/<int:instance_id>')\n```\n\n### Query Engine\n\n#### Filtering\n\nTo filter based on equality simple use the field name plus filter value for one or more fields, ex `/cats?pattern=Tabby`. Other operations are available by adding an operator at the end of the field name separated by two underscores, ex `/cats?pattern__contains=Tabby`.\n\nOperators\n\n| Operator | Description | Notes / Example |\n| ------ | ------ | ------ |\n| eq | Equals - default | `/cats?pattern=Tabby` or `/cats?pattern__eq=Tabby` |\n| ne  | Not Equals (!=) | `/cats?pattern__ne=Tabby` |\n| lt | Less Than (<) | |\n| lte | Less Than or Equal To (<=) | |\n| gt | Greater Than (>) | |\n| gte | Greater Than or Equal To (>=) | |\n| contains | Contains | |\n| like | Like | |\n| ilike | Case Insensitive Like | |\n| notlike | Not Like ||\n| notilike | Case Insensitive Not Like | |\n| startswith | Starts With | |\n| endswith | Ends With | |\n| in | In | `/cats?name__in=Ada&name__in=Leo` |\n| notin | Not In | `/cats?name__notin=Ada&name__notin=Leo` |\n| is | IS - Helper for `null` and `true`/`false` | `/cats?age__is=null` or `/users?active__is=true` or `/users?active__is=false` |\n| isnot | IS NOT - Helper for `null` and `true`/`false` | `/cats?age__isnot=null` |\n\n#### Ordering\n\nUse the `$order_by` query parameter to set ordering by one or more fields. Fields are separated by a comma (,) and are ascending by default. Add a minus to the beginning of the field to order by descending.\n\nExamples\n\n`/cats?$order_by=name`\n\n`/cats?$order_by=pattern,-updated_at`\n\n#### Field selection\n\nUse the `$fields` query parameter to select a subset of fields. Fields are comma (,) separated.\n\nExamples\n\n`/cats?$fields=id`\n\n`/cats?$fields=id,name`\n\n#### Pagination\n\nUse the `$page` and `$page_size` query parameters to paginate. `$page_size` is not required and is 100 by default.\n\nExamples\n\n`/cats?$page=2`\n\n`/cats?$page=2&$page_size=10`\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/awm33/restful-ben", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "restful-ben", "package_url": "https://pypi.org/project/restful-ben/", "platform": "", "project_url": "https://pypi.org/project/restful-ben/", "project_urls": {"Homepage": "https://github.com/awm33/restful-ben"}, "release_url": "https://pypi.org/project/restful-ben/0.4.2/", "requires_dist": ["argon2-cffi (==16.3.0)", "cryptography (==2.3)", "Flask (==0.12.2)", "Flask-Login (==0.4.0)", "Flask-RESTful (==0.3.6)", "Flask-SQLAlchemy (==2.2)", "marshmallow (==2.13.5)", "marshmallow-sqlalchemy (==0.13.1)", "passlib (==1.7.1)", "psycopg2 (==2.7.1)", "python-dateutil (==2.6.0)"], "requires_python": "", "summary": "A composable SQLAlchemy based RESTful API library.", "version": "0.4.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>RESTful Ben</h1>\n<p>Ben's had a nap, he's feeling RESTful and ready to go.</p>\n<p>A libray to assist creating <a href=\"https://www.sqlalchemy.org/\" rel=\"nofollow\">SQLAlchemy</a>, <a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">Flask</a>, and <a href=\"https://flask-restful.readthedocs.io/en/0.3.5/\" rel=\"nofollow\">flask-restful</a> based APIs.</p>\n<h3>Features</h3>\n<ul>\n<li>RESTful resources\n<ul>\n<li>Generates POST, GET (individual and list), PUT, and DELETE endpoints based on a SQLAlchemy model and a <a href=\"https://marshmallow.readthedocs.io/en/latest/\" rel=\"nofollow\">Marshmallow</a> schema.</li>\n<li>Query engine\n<ul>\n<li>Field selection</li>\n<li>Filtering</li>\n<li>Sorting</li>\n<li>Pagination</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Authentication\n<ul>\n<li>Username and password based sessions</li>\n<li>CSRF</li>\n<li>Session endpoint - login (POST) and logout (DELETE)</li>\n</ul>\n</li>\n<li>Authorization\n<ul>\n<li>Basic role based authorization</li>\n<li>Roles map to HTTP verbs (GET, POST, etc)</li>\n</ul>\n</li>\n</ul>\n<h2>Usage</h2>\n<h3>Basic API</h3>\n<p>Create a model</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Cat</span><span class=\"p\">(</span><span class=\"n\">BaseModel</span><span class=\"p\">):</span>\n    <span class=\"n\">__tablename__</span> <span class=\"o\">=</span> <span class=\"s1\">'cats'</span>\n\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">,</span> <span class=\"n\">nullable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">pattern</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">)</span>\n    <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">Integer</span><span class=\"p\">)</span>\n    <span class=\"n\">created_at</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">DateTime</span><span class=\"p\">,</span>\n                        <span class=\"n\">nullable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                        <span class=\"n\">server_default</span><span class=\"o\">=</span><span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">())</span>\n    <span class=\"n\">updated_at</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">DateTime</span><span class=\"p\">,</span>\n                        <span class=\"n\">nullable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                        <span class=\"n\">server_default</span><span class=\"o\">=</span><span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">(),</span>\n                        <span class=\"n\">onupdate</span><span class=\"o\">=</span><span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">())</span>\n</pre>\n<p>Create a <a href=\"https://marshmallow.readthedocs.io/en/latest/\" rel=\"nofollow\">Marshmallow</a> schema to map a model to a JSON representation. This uses <a href=\"https://marshmallow-sqlalchemy.readthedocs.io/en/latest/\" rel=\"nofollow\">Marshmallow SQLAlchemy</a> to generate the schema automatically.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">CatSchema</span><span class=\"p\">(</span><span class=\"n\">ModelSchema</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Cat</span>\n\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">field_for</span><span class=\"p\">(</span><span class=\"n\">Cat</span><span class=\"p\">,</span> <span class=\"s1\">'id'</span><span class=\"p\">,</span> <span class=\"n\">dump_only</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">created_at</span> <span class=\"o\">=</span> <span class=\"n\">field_for</span><span class=\"p\">(</span><span class=\"n\">Cat</span><span class=\"p\">,</span> <span class=\"s1\">'created_at'</span><span class=\"p\">,</span> <span class=\"n\">dump_only</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">updated_at</span> <span class=\"o\">=</span> <span class=\"n\">field_for</span><span class=\"p\">(</span><span class=\"n\">Cat</span><span class=\"p\">,</span> <span class=\"s1\">'updated_at'</span><span class=\"p\">,</span> <span class=\"n\">dump_only</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">cat_schema</span> <span class=\"o\">=</span> <span class=\"n\">CatSchema</span><span class=\"p\">()</span>\n<span class=\"n\">cats_schema</span> <span class=\"o\">=</span> <span class=\"n\">CatSchema</span><span class=\"p\">(</span><span class=\"n\">many</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Create a resource for single Cat access, eg <code>/cats/:id</code></p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">CatResource</span><span class=\"p\">(</span><span class=\"n\">RetrieveUpdateDeleteResource</span><span class=\"p\">):</span>\n    <span class=\"n\">single_schema</span> <span class=\"o\">=</span> <span class=\"n\">cat_schema</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Cat</span>\n    <span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">session</span>\n</pre>\n<p>Create a resource for listing Cats, eg <code>/cats</code>.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">CatListResource</span><span class=\"p\">(</span><span class=\"n\">QueryEngineMixin</span><span class=\"p\">,</span> <span class=\"n\">CreateListResource</span><span class=\"p\">):</span>\n    <span class=\"n\">single_schema</span> <span class=\"o\">=</span> <span class=\"n\">cat_schema</span>\n    <span class=\"n\">many_schema</span> <span class=\"o\">=</span> <span class=\"n\">cats_schema</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Cat</span>\n    <span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">session</span>\n</pre>\n<p>Setup your flask app:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_sqlalchemy</span> <span class=\"kn\">import</span> <span class=\"n\">SQLAlchemy</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_restful</span> <span class=\"kn\">import</span> <span class=\"n\">Api</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.routes</span> <span class=\"kn\">import</span> <span class=\"n\">CatListResource</span><span class=\"p\">,</span> <span class=\"n\">CatResource</span>\n\n<span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">SQLAlchemy</span><span class=\"p\">()</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">flask</span><span class=\"o\">.</span><span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'SQLALCHEMY_DATABASE_URI'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'some db'</span>\n\n<span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">init_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">Api</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">app_context</span><span class=\"p\">():</span>\n    <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">create_all</span><span class=\"p\">()</span>\n\n    <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">add_resource</span><span class=\"p\">(</span><span class=\"n\">CatListResource</span><span class=\"p\">,</span> <span class=\"s1\">'/cats'</span><span class=\"p\">)</span>\n    <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">add_resource</span><span class=\"p\">(</span><span class=\"n\">CatResource</span><span class=\"p\">,</span> <span class=\"s1\">'/cats/&lt;int:instance_id&gt;'</span><span class=\"p\">)</span>\n</pre>\n<h3>Query Engine</h3>\n<h4>Filtering</h4>\n<p>To filter based on equality simple use the field name plus filter value for one or more fields, ex <code>/cats?pattern=Tabby</code>. Other operations are available by adding an operator at the end of the field name separated by two underscores, ex <code>/cats?pattern__contains=Tabby</code>.</p>\n<p>Operators</p>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Description</th>\n<th>Notes / Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>eq</td>\n<td>Equals - default</td>\n<td><code>/cats?pattern=Tabby</code> or <code>/cats?pattern__eq=Tabby</code></td>\n</tr>\n<tr>\n<td>ne</td>\n<td>Not Equals (!=)</td>\n<td><code>/cats?pattern__ne=Tabby</code></td>\n</tr>\n<tr>\n<td>lt</td>\n<td>Less Than (&lt;)</td>\n<td></td>\n</tr>\n<tr>\n<td>lte</td>\n<td>Less Than or Equal To (&lt;=)</td>\n<td></td>\n</tr>\n<tr>\n<td>gt</td>\n<td>Greater Than (&gt;)</td>\n<td></td>\n</tr>\n<tr>\n<td>gte</td>\n<td>Greater Than or Equal To (&gt;=)</td>\n<td></td>\n</tr>\n<tr>\n<td>contains</td>\n<td>Contains</td>\n<td></td>\n</tr>\n<tr>\n<td>like</td>\n<td>Like</td>\n<td></td>\n</tr>\n<tr>\n<td>ilike</td>\n<td>Case Insensitive Like</td>\n<td></td>\n</tr>\n<tr>\n<td>notlike</td>\n<td>Not Like</td>\n<td></td>\n</tr>\n<tr>\n<td>notilike</td>\n<td>Case Insensitive Not Like</td>\n<td></td>\n</tr>\n<tr>\n<td>startswith</td>\n<td>Starts With</td>\n<td></td>\n</tr>\n<tr>\n<td>endswith</td>\n<td>Ends With</td>\n<td></td>\n</tr>\n<tr>\n<td>in</td>\n<td>In</td>\n<td><code>/cats?name__in=Ada&amp;name__in=Leo</code></td>\n</tr>\n<tr>\n<td>notin</td>\n<td>Not In</td>\n<td><code>/cats?name__notin=Ada&amp;name__notin=Leo</code></td>\n</tr>\n<tr>\n<td>is</td>\n<td>IS - Helper for <code>null</code> and <code>true</code>/<code>false</code></td>\n<td><code>/cats?age__is=null</code> or <code>/users?active__is=true</code> or <code>/users?active__is=false</code></td>\n</tr>\n<tr>\n<td>isnot</td>\n<td>IS NOT - Helper for <code>null</code> and <code>true</code>/<code>false</code></td>\n<td><code>/cats?age__isnot=null</code></td>\n</tr></tbody></table>\n<h4>Ordering</h4>\n<p>Use the <code>$order_by</code> query parameter to set ordering by one or more fields. Fields are separated by a comma (,) and are ascending by default. Add a minus to the beginning of the field to order by descending.</p>\n<p>Examples</p>\n<p><code>/cats?$order_by=name</code></p>\n<p><code>/cats?$order_by=pattern,-updated_at</code></p>\n<h4>Field selection</h4>\n<p>Use the <code>$fields</code> query parameter to select a subset of fields. Fields are comma (,) separated.</p>\n<p>Examples</p>\n<p><code>/cats?$fields=id</code></p>\n<p><code>/cats?$fields=id,name</code></p>\n<h4>Pagination</h4>\n<p>Use the <code>$page</code> and <code>$page_size</code> query parameters to paginate. <code>$page_size</code> is not required and is 100 by default.</p>\n<p>Examples</p>\n<p><code>/cats?$page=2</code></p>\n<p><code>/cats?$page=2&amp;$page_size=10</code></p>\n\n          </div>"}, "last_serial": 4162128, "releases": {"0.4.2": [{"comment_text": "", "digests": {"md5": "323ef3fd9c68901c68d86dc55694f101", "sha256": "d3600a32d680acb28d1433caac93eeb0e9cb34b8169c737b8aac70f436af98cc"}, "downloads": -1, "filename": "restful_ben-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "323ef3fd9c68901c68d86dc55694f101", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11233, "upload_time": "2018-08-12T17:40:43", "upload_time_iso_8601": "2018-08-12T17:40:43.279517Z", "url": "https://files.pythonhosted.org/packages/61/1f/10bcec919bf8858bbe2c23dfd39bd28406a282ce4bced0563b33c0f22cd4/restful_ben-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "67812a4d654404391db62bd17e35fb16", "sha256": "668fc528f3b0ca82ab3df23e40c2272e5ea882ecba77df2f5d49691c05c1bd24"}, "downloads": -1, "filename": "restful-ben-0.4.2.tar.gz", "has_sig": false, "md5_digest": "67812a4d654404391db62bd17e35fb16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12114, "upload_time": "2018-08-12T17:40:44", "upload_time_iso_8601": "2018-08-12T17:40:44.584961Z", "url": "https://files.pythonhosted.org/packages/31/53/d45396c090496cd9d85da0a00257a82edfa994c82a38c54062a9edf8facb/restful-ben-0.4.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "323ef3fd9c68901c68d86dc55694f101", "sha256": "d3600a32d680acb28d1433caac93eeb0e9cb34b8169c737b8aac70f436af98cc"}, "downloads": -1, "filename": "restful_ben-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "323ef3fd9c68901c68d86dc55694f101", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11233, "upload_time": "2018-08-12T17:40:43", "upload_time_iso_8601": "2018-08-12T17:40:43.279517Z", "url": "https://files.pythonhosted.org/packages/61/1f/10bcec919bf8858bbe2c23dfd39bd28406a282ce4bced0563b33c0f22cd4/restful_ben-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "67812a4d654404391db62bd17e35fb16", "sha256": "668fc528f3b0ca82ab3df23e40c2272e5ea882ecba77df2f5d49691c05c1bd24"}, "downloads": -1, "filename": "restful-ben-0.4.2.tar.gz", "has_sig": false, "md5_digest": "67812a4d654404391db62bd17e35fb16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12114, "upload_time": "2018-08-12T17:40:44", "upload_time_iso_8601": "2018-08-12T17:40:44.584961Z", "url": "https://files.pythonhosted.org/packages/31/53/d45396c090496cd9d85da0a00257a82edfa994c82a38c54062a9edf8facb/restful-ben-0.4.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:39 2020"}