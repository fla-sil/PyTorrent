{"info": {"author": "Hypothesis Engineering Team", "author_email": "eng@list.hypothes.is", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Programming Language :: Python :: 3.6"], "description": "# h-matchers\n\nTest objects which pass equality checks with other objects\n\nUsage\n-----\n\n```python\nfrom h_matchers import Any\nimport re\n\nassert [1, 2, ValueError(), print, print] == [\n        Any(),\n        Any.int(),\n        Any.instance_of(ValueError),\n        Any.function(),\n        Any.callable()\n    ]\n\nassert [\"easy\", \"string\", \"matching\"] == [\n        Any.string(),\n        Any.string.containing(\"in\"),\n        Any.string.matching('^.*CHING!', re.IGNORECASE)\n    ]\n\nassert \"http://www.example.com?a=3&b=2\" == Any.url(\n    host='www.example.com', query=Any.mapping.containing({'a': 3}))\n\nassert 5 == Any.of([5, None])\n\nassert \"foo bar\" == All.of([\n    AnyString.containing('foo'), \n    AnyString.containing('bar')\n])\n```\n\n### Comparing to collections\nYou can make basic comparisons to collections as follows:\n\n```python\nAny.iterable()\nAny.list()\nAny.set()\n```\n\nYou can specify a custom class with:\n\n```python\nAny.iterable.of_type(MyCustomList)\n```\n\n#### Specifying size\n\nYou can also chain on to add requirements for the size.\n\n```python\nAny.iterable.of_size(4)\nAny.list.of_size(at_least=3)\nAny.set.of_size(at_most=5)\nAny.set.of_size(at_least=3, at_most=5)\n```\n\n#### Specifying specific content\n\nYou can require an iterable to have a minimum number of items, with repetitions\n, optionally in order:\n\n```python\nAny.iterable.containing([1])\nAny.list.containing([1, 2, 2])\nAny.list.containing([1, 2, 2]).in_order()\n```\n\nThis will match if the sequence is found any where in the iterable.\n\nYou can also say that there cannot be any extra items in the iterable:\n\n```python\nAny.set.containing({2, 3, 4}).only()\nAny.list.containing([1, 2, 2, 3]).only().in_order()\n```\n\nAll of this should work with non-hashable items too as long as the items test\nas equal:\n\n```python\nAny.set.containing([{'a': 1}, {'b': 2}])\n```\n\n#### Specifying every item must match something\n\nYou can specify that every item in the collection must match a certain item.\nYou can also pass matchers to this:\n\n```python\nAny.list.comprised_of(Any.string).of_size(6)\nAny.iterable.comprised_of(True)\n```\n\n### Comparing to dicts\n\nBasic comparisons are available:\n\n```python\nAny.iterable()\nAny.mapping()\nAny.dict()\n```\n\n### Most things for collections go for dicts too\n\n```python\nAny.dict.of_size(at_most=4)\nAny.dict.containing(['key_1', 'key_2']).only()\n```\n\n### You can test for key value pairs\n\n```python\nAny.dict.containing({'a': 5, 'b': 6})\nAny.dict.containing({'a': 5, 'b': 6}).only()\n```\n\n### You can compare against any mappable including multi-value dicts\n\nThis is useful for dict-like objects which may have different behavior and\nsemantics to regular dicts. For example: objects which support multiple values\nfor the same key.\n\n```python\nAny.mapping.containing(MultiDict(['a', 1], ['a', 2]))\n```\n\n### Comparing with simple objects\n\n```python\nAny.object.of_type(User).with_attrs({\"username\": \"name\", \"id\": 4})\nAny.object(User, {\"username\": \"name\", \"id\": 4})\n```\n\n### Comparing to URLs\n\nThe URL matcher provides a both a kwargs interface and a fluent style interface which is a little\nmore verbose but provides more readable results.\n\nYou can construct matchers directly from URLs:\n\n```python\nAny.url(\"http://example.com/path?a=b#anchor\")\nAny.url.matching(\"http://example.com/path?a=b#anchor\")\n```\n\nYou can also construct URL matchers manually:\n\n```python\nAny.url(host='www.example.com', path='/path')\nAny.url.matching('www.example.com').with_path('/path')\n\nAny.url(scheme=Any.string.containing('http'), query={'a': 'b'}, fragment='anchor')\nAny.url.with_scheme(Any.string.containing('http')).with_query({'a': 'b'}).with_fragment('anchor')\n```\n\nOr mix and match, here the separate `host=Any()` argument overrides the `example.com` in the URL and allows URLs with any host to match:\n```python\nAny.url(\"http://example.com/path?a=b#anchor\", host=Any())  \nAny.url.matching(\"http://example.com/path?a=b#anchor\").with_host(Any()) \n```\n\n#### Matching URL queries\n\nYou can specify the query in a number of different ways:\n\n```python\nAny.url(query='a=1&a=2&b=2')\nAny.url.with_query('a=1&a=2&b=2')\n\nAny.url(query={'a': '1', 'b': '2'})\nAny.url.with_query({'a': '1', 'b': '2'})\n\nAny.url(query=[('a', '1'), ('a', '2'), ('b', '2')])\nAny.url.with_query([('a', '1'), ('a', '2'), ('b', '2')])\n\nAny.url(query=Any.mapping.containing({'a': '1'}))\nAny.url.containing_query({'a': '1'})\n```\n\n#### Specify that a component must be present\n\nWith the fluent interface you can specify that a URL must contain a certain \npart without specifying what that part has to be:\n\n```python\nAnyURL.with_scheme()\nAnyURL.with_host()\nAnyURL.with_path()\nAnyURL.with_query()\nAnyURL.with_fragment()\n```\n\nHacking\n-------\n\n### Installing h-matchers in a development environment\n\n#### You will need\n\n* [Git](https://git-scm.com/)\n\n* [pyenv](https://github.com/pyenv/pyenv)\n  Follow the instructions in the pyenv README to install it.\n  The Homebrew method works best on macOS.\n  On Ubuntu follow the Basic GitHub Checkout method.\n\n#### Clone the git repo\n\n```terminal\ngit clone https://github.com/hypothesis/h-matchers.git\n```\n\nThis will download the code into a `h-matchers` directory\nin your current working directory. You need to be in the\n`h-matchers` directory for the rest of the installation\nprocess:\n\n```terminal\ncd h-matchers\n```\n\n#### Run the tests\n\n```terminal\nmake test\n```\n\n**That's it!** You\u2019ve finished setting up your h-matchers\ndevelopment environment. Run `make help` to see all the commands that're\navailable for linting, code formatting, packaging, etc.\n\n### Updating the Cookiecutter scaffolding\n\nThis project was created from the\nhttps://github.com/hypothesis/h-cookiecutter-pypackage/ template.\nIf h-cookiecutter-pypackage itself has changed since this project was created, and\nyou want to update this project with the latest changes, you can \"replay\" the\ncookiecutter over this project. Run:\n\n```terminal\nmake template\n```\n\n**This will change the files in your working tree**, applying the latest\nupdates from the h-cookiecutter-pypackage template. Inspect and test the\nchanges, do any fixups that are needed, and then commit them to git and send a\npull request.\n\nIf you want `make template` to skip certain files, never changing them, add\nthese files to `\"options.disable_replay\"` in\n[`.cookiecutter.json`](.cookiecutter.json) and commit that to git.\n\nIf you want `make template` to update a file that's listed in `disable_replay`\nsimply delete that file and then run `make template`, it'll recreate the file\nfor you.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://web.hypothes.is/", "keywords": "", "license": "License :: OSI Approved :: BSD License", "maintainer": "Hypothesis Engineering Team", "maintainer_email": "eng@list.hypothes.is", "name": "h-matchers", "package_url": "https://pypi.org/project/h-matchers/", "platform": "Operating System :: OS Independent", "project_url": "https://pypi.org/project/h-matchers/", "project_urls": {"Homepage": "https://web.hypothes.is/", "Source": "https://github.com/hypothesis/h-matchers"}, "release_url": "https://pypi.org/project/h-matchers/1.2.5/", "requires_dist": ["pytest ; extra == 'tests'", "coverage ; extra == 'tests'"], "requires_python": "", "summary": "Test objects which pass equality checks with other objects", "version": "1.2.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>h-matchers</h1>\n<p>Test objects which pass equality checks with other objects</p>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">h_matchers</span> <span class=\"kn\">import</span> <span class=\"n\">Any</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n\n<span class=\"k\">assert</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"ne\">ValueError</span><span class=\"p\">(),</span> <span class=\"nb\">print</span><span class=\"p\">,</span> <span class=\"nb\">print</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"p\">[</span>\n        <span class=\"n\">Any</span><span class=\"p\">(),</span>\n        <span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">int</span><span class=\"p\">(),</span>\n        <span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">instance_of</span><span class=\"p\">(</span><span class=\"ne\">ValueError</span><span class=\"p\">),</span>\n        <span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(),</span>\n        <span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">callable</span><span class=\"p\">()</span>\n    <span class=\"p\">]</span>\n\n<span class=\"k\">assert</span> <span class=\"p\">[</span><span class=\"s2\">\"easy\"</span><span class=\"p\">,</span> <span class=\"s2\">\"string\"</span><span class=\"p\">,</span> <span class=\"s2\">\"matching\"</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"p\">[</span>\n        <span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">string</span><span class=\"p\">(),</span>\n        <span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">string</span><span class=\"o\">.</span><span class=\"n\">containing</span><span class=\"p\">(</span><span class=\"s2\">\"in\"</span><span class=\"p\">),</span>\n        <span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">string</span><span class=\"o\">.</span><span class=\"n\">matching</span><span class=\"p\">(</span><span class=\"s1\">'^.*CHING!'</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">IGNORECASE</span><span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n\n<span class=\"k\">assert</span> <span class=\"s2\">\"http://www.example.com?a=3&amp;b=2\"</span> <span class=\"o\">==</span> <span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">(</span>\n    <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'www.example.com'</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">mapping</span><span class=\"o\">.</span><span class=\"n\">containing</span><span class=\"p\">({</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">}))</span>\n\n<span class=\"k\">assert</span> <span class=\"mi\">5</span> <span class=\"o\">==</span> <span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">of</span><span class=\"p\">([</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">])</span>\n\n<span class=\"k\">assert</span> <span class=\"s2\">\"foo bar\"</span> <span class=\"o\">==</span> <span class=\"n\">All</span><span class=\"o\">.</span><span class=\"n\">of</span><span class=\"p\">([</span>\n    <span class=\"n\">AnyString</span><span class=\"o\">.</span><span class=\"n\">containing</span><span class=\"p\">(</span><span class=\"s1\">'foo'</span><span class=\"p\">),</span> \n    <span class=\"n\">AnyString</span><span class=\"o\">.</span><span class=\"n\">containing</span><span class=\"p\">(</span><span class=\"s1\">'bar'</span><span class=\"p\">)</span>\n<span class=\"p\">])</span>\n</pre>\n<h3>Comparing to collections</h3>\n<p>You can make basic comparisons to collections as follows:</p>\n<pre><span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">iterable</span><span class=\"p\">()</span>\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">()</span>\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">()</span>\n</pre>\n<p>You can specify a custom class with:</p>\n<pre><span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">iterable</span><span class=\"o\">.</span><span class=\"n\">of_type</span><span class=\"p\">(</span><span class=\"n\">MyCustomList</span><span class=\"p\">)</span>\n</pre>\n<h4>Specifying size</h4>\n<p>You can also chain on to add requirements for the size.</p>\n<pre><span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">iterable</span><span class=\"o\">.</span><span class=\"n\">of_size</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"o\">.</span><span class=\"n\">of_size</span><span class=\"p\">(</span><span class=\"n\">at_least</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"o\">.</span><span class=\"n\">of_size</span><span class=\"p\">(</span><span class=\"n\">at_most</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"o\">.</span><span class=\"n\">of_size</span><span class=\"p\">(</span><span class=\"n\">at_least</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">at_most</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<h4>Specifying specific content</h4>\n<p>You can require an iterable to have a minimum number of items, with repetitions\n, optionally in order:</p>\n<pre><span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">iterable</span><span class=\"o\">.</span><span class=\"n\">containing</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"o\">.</span><span class=\"n\">containing</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"o\">.</span><span class=\"n\">containing</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">in_order</span><span class=\"p\">()</span>\n</pre>\n<p>This will match if the sequence is found any where in the iterable.</p>\n<p>You can also say that there cannot be any extra items in the iterable:</p>\n<pre><span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"o\">.</span><span class=\"n\">containing</span><span class=\"p\">({</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">only</span><span class=\"p\">()</span>\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"o\">.</span><span class=\"n\">containing</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">only</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">in_order</span><span class=\"p\">()</span>\n</pre>\n<p>All of this should work with non-hashable items too as long as the items test\nas equal:</p>\n<pre><span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"o\">.</span><span class=\"n\">containing</span><span class=\"p\">([{</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">}])</span>\n</pre>\n<h4>Specifying every item must match something</h4>\n<p>You can specify that every item in the collection must match a certain item.\nYou can also pass matchers to this:</p>\n<pre><span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"o\">.</span><span class=\"n\">comprised_of</span><span class=\"p\">(</span><span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">string</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">of_size</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">iterable</span><span class=\"o\">.</span><span class=\"n\">comprised_of</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h3>Comparing to dicts</h3>\n<p>Basic comparisons are available:</p>\n<pre><span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">iterable</span><span class=\"p\">()</span>\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">mapping</span><span class=\"p\">()</span>\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">dict</span><span class=\"p\">()</span>\n</pre>\n<h3>Most things for collections go for dicts too</h3>\n<pre><span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">dict</span><span class=\"o\">.</span><span class=\"n\">of_size</span><span class=\"p\">(</span><span class=\"n\">at_most</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">dict</span><span class=\"o\">.</span><span class=\"n\">containing</span><span class=\"p\">([</span><span class=\"s1\">'key_1'</span><span class=\"p\">,</span> <span class=\"s1\">'key_2'</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">only</span><span class=\"p\">()</span>\n</pre>\n<h3>You can test for key value pairs</h3>\n<pre><span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">dict</span><span class=\"o\">.</span><span class=\"n\">containing</span><span class=\"p\">({</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">})</span>\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">dict</span><span class=\"o\">.</span><span class=\"n\">containing</span><span class=\"p\">({</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">only</span><span class=\"p\">()</span>\n</pre>\n<h3>You can compare against any mappable including multi-value dicts</h3>\n<p>This is useful for dict-like objects which may have different behavior and\nsemantics to regular dicts. For example: objects which support multiple values\nfor the same key.</p>\n<pre><span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">mapping</span><span class=\"o\">.</span><span class=\"n\">containing</span><span class=\"p\">(</span><span class=\"n\">MultiDict</span><span class=\"p\">([</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]))</span>\n</pre>\n<h3>Comparing with simple objects</h3>\n<pre><span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"o\">.</span><span class=\"n\">of_type</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">with_attrs</span><span class=\"p\">({</span><span class=\"s2\">\"username\"</span><span class=\"p\">:</span> <span class=\"s2\">\"name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">})</span>\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s2\">\"username\"</span><span class=\"p\">:</span> <span class=\"s2\">\"name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">})</span>\n</pre>\n<h3>Comparing to URLs</h3>\n<p>The URL matcher provides a both a kwargs interface and a fluent style interface which is a little\nmore verbose but provides more readable results.</p>\n<p>You can construct matchers directly from URLs:</p>\n<pre><span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">(</span><span class=\"s2\">\"http://example.com/path?a=b#anchor\"</span><span class=\"p\">)</span>\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"o\">.</span><span class=\"n\">matching</span><span class=\"p\">(</span><span class=\"s2\">\"http://example.com/path?a=b#anchor\"</span><span class=\"p\">)</span>\n</pre>\n<p>You can also construct URL matchers manually:</p>\n<pre><span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'www.example.com'</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s1\">'/path'</span><span class=\"p\">)</span>\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"o\">.</span><span class=\"n\">matching</span><span class=\"p\">(</span><span class=\"s1\">'www.example.com'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">with_path</span><span class=\"p\">(</span><span class=\"s1\">'/path'</span><span class=\"p\">)</span>\n\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">(</span><span class=\"n\">scheme</span><span class=\"o\">=</span><span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">string</span><span class=\"o\">.</span><span class=\"n\">containing</span><span class=\"p\">(</span><span class=\"s1\">'http'</span><span class=\"p\">),</span> <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"s1\">'b'</span><span class=\"p\">},</span> <span class=\"n\">fragment</span><span class=\"o\">=</span><span class=\"s1\">'anchor'</span><span class=\"p\">)</span>\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"o\">.</span><span class=\"n\">with_scheme</span><span class=\"p\">(</span><span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">string</span><span class=\"o\">.</span><span class=\"n\">containing</span><span class=\"p\">(</span><span class=\"s1\">'http'</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">with_query</span><span class=\"p\">({</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"s1\">'b'</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">with_fragment</span><span class=\"p\">(</span><span class=\"s1\">'anchor'</span><span class=\"p\">)</span>\n</pre>\n<p>Or mix and match, here the separate <code>host=Any()</code> argument overrides the <code>example.com</code> in the URL and allows URLs with any host to match:</p>\n<pre><span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">(</span><span class=\"s2\">\"http://example.com/path?a=b#anchor\"</span><span class=\"p\">,</span> <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"n\">Any</span><span class=\"p\">())</span>  \n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"o\">.</span><span class=\"n\">matching</span><span class=\"p\">(</span><span class=\"s2\">\"http://example.com/path?a=b#anchor\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">with_host</span><span class=\"p\">(</span><span class=\"n\">Any</span><span class=\"p\">())</span> \n</pre>\n<h4>Matching URL queries</h4>\n<p>You can specify the query in a number of different ways:</p>\n<pre><span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"o\">=</span><span class=\"s1\">'a=1&amp;a=2&amp;b=2'</span><span class=\"p\">)</span>\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"o\">.</span><span class=\"n\">with_query</span><span class=\"p\">(</span><span class=\"s1\">'a=1&amp;a=2&amp;b=2'</span><span class=\"p\">)</span>\n\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"s1\">'1'</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"s1\">'2'</span><span class=\"p\">})</span>\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"o\">.</span><span class=\"n\">with_query</span><span class=\"p\">({</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"s1\">'1'</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"s1\">'2'</span><span class=\"p\">})</span>\n\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"o\">=</span><span class=\"p\">[(</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"s1\">'1'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"s1\">'2'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'b'</span><span class=\"p\">,</span> <span class=\"s1\">'2'</span><span class=\"p\">)])</span>\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"o\">.</span><span class=\"n\">with_query</span><span class=\"p\">([(</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"s1\">'1'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"s1\">'2'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'b'</span><span class=\"p\">,</span> <span class=\"s1\">'2'</span><span class=\"p\">)])</span>\n\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"o\">=</span><span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">mapping</span><span class=\"o\">.</span><span class=\"n\">containing</span><span class=\"p\">({</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"s1\">'1'</span><span class=\"p\">}))</span>\n<span class=\"n\">Any</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"o\">.</span><span class=\"n\">containing_query</span><span class=\"p\">({</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"s1\">'1'</span><span class=\"p\">})</span>\n</pre>\n<h4>Specify that a component must be present</h4>\n<p>With the fluent interface you can specify that a URL must contain a certain\npart without specifying what that part has to be:</p>\n<pre><span class=\"n\">AnyURL</span><span class=\"o\">.</span><span class=\"n\">with_scheme</span><span class=\"p\">()</span>\n<span class=\"n\">AnyURL</span><span class=\"o\">.</span><span class=\"n\">with_host</span><span class=\"p\">()</span>\n<span class=\"n\">AnyURL</span><span class=\"o\">.</span><span class=\"n\">with_path</span><span class=\"p\">()</span>\n<span class=\"n\">AnyURL</span><span class=\"o\">.</span><span class=\"n\">with_query</span><span class=\"p\">()</span>\n<span class=\"n\">AnyURL</span><span class=\"o\">.</span><span class=\"n\">with_fragment</span><span class=\"p\">()</span>\n</pre>\n<h2>Hacking</h2>\n<h3>Installing h-matchers in a development environment</h3>\n<h4>You will need</h4>\n<ul>\n<li>\n<p><a href=\"https://git-scm.com/\" rel=\"nofollow\">Git</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/pyenv/pyenv\" rel=\"nofollow\">pyenv</a>\nFollow the instructions in the pyenv README to install it.\nThe Homebrew method works best on macOS.\nOn Ubuntu follow the Basic GitHub Checkout method.</p>\n</li>\n</ul>\n<h4>Clone the git repo</h4>\n<pre>git clone https://github.com/hypothesis/h-matchers.git\n</pre>\n<p>This will download the code into a <code>h-matchers</code> directory\nin your current working directory. You need to be in the\n<code>h-matchers</code> directory for the rest of the installation\nprocess:</p>\n<pre>cd h-matchers\n</pre>\n<h4>Run the tests</h4>\n<pre>make test\n</pre>\n<p><strong>That's it!</strong> You\u2019ve finished setting up your h-matchers\ndevelopment environment. Run <code>make help</code> to see all the commands that're\navailable for linting, code formatting, packaging, etc.</p>\n<h3>Updating the Cookiecutter scaffolding</h3>\n<p>This project was created from the\n<a href=\"https://github.com/hypothesis/h-cookiecutter-pypackage/\" rel=\"nofollow\">https://github.com/hypothesis/h-cookiecutter-pypackage/</a> template.\nIf h-cookiecutter-pypackage itself has changed since this project was created, and\nyou want to update this project with the latest changes, you can \"replay\" the\ncookiecutter over this project. Run:</p>\n<pre>make template\n</pre>\n<p><strong>This will change the files in your working tree</strong>, applying the latest\nupdates from the h-cookiecutter-pypackage template. Inspect and test the\nchanges, do any fixups that are needed, and then commit them to git and send a\npull request.</p>\n<p>If you want <code>make template</code> to skip certain files, never changing them, add\nthese files to <code>\"options.disable_replay\"</code> in\n<a href=\".cookiecutter.json\" rel=\"nofollow\"><code>.cookiecutter.json</code></a> and commit that to git.</p>\n<p>If you want <code>make template</code> to update a file that's listed in <code>disable_replay</code>\nsimply delete that file and then run <code>make template</code>, it'll recreate the file\nfor you.</p>\n\n          </div>"}, "last_serial": 7067665, "releases": {"1.0.20191025.185835": [{"comment_text": "", "digests": {"md5": "09fdc0125b2e95b981d87ea651abbb98", "sha256": "c769cde18ba97e0a2ad59eaf4e85a5f6ce307a5986f4d8eedf39815717f66ca3"}, "downloads": -1, "filename": "h_matchers-1.0.20191025.185835-py3-none-any.whl", "has_sig": false, "md5_digest": "09fdc0125b2e95b981d87ea651abbb98", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5339, "upload_time": "2019-10-25T18:59:04", "upload_time_iso_8601": "2019-10-25T18:59:04.041348Z", "url": "https://files.pythonhosted.org/packages/c2/d8/9855e7d13ec97ce35f57a66f7c8230d433576ce1d062513cff332c897198/h_matchers-1.0.20191025.185835-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c629ff651941a97f286faae587a27af", "sha256": "244384ec7e5b2707d76b57949ef8a194db59fbd37936a54da5b7364a8985c440"}, "downloads": -1, "filename": "h_matchers-1.0.20191025.185835.tar.gz", "has_sig": false, "md5_digest": "9c629ff651941a97f286faae587a27af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5034, "upload_time": "2019-10-25T18:59:05", "upload_time_iso_8601": "2019-10-25T18:59:05.293736Z", "url": "https://files.pythonhosted.org/packages/39/bb/2c20abb1220921aee91b5eddc43ce1eef9c26873afee13c884e091c711c5/h_matchers-1.0.20191025.185835.tar.gz", "yanked": false}], "1.0.20191030.155750": [{"comment_text": "", "digests": {"md5": "875c2bf413931fa75075f70f9d524613", "sha256": "4cebf172e3e0091e653cba2821c71111d5e86c1aa34190c0a05d68f1605f2a65"}, "downloads": -1, "filename": "h_matchers-1.0.20191030.155750-py3-none-any.whl", "has_sig": false, "md5_digest": "875c2bf413931fa75075f70f9d524613", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5350, "upload_time": "2019-10-30T15:58:51", "upload_time_iso_8601": "2019-10-30T15:58:51.438960Z", "url": "https://files.pythonhosted.org/packages/ee/0e/b86ddbd37a6ef6338b6c74d31c821eeb0abcb6da081253ae520d75542352/h_matchers-1.0.20191030.155750-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cca9efd9a8ef7ff4217a55d33e70e26b", "sha256": "7cf7ede51392c79324f221a802034cf9f3e5d09198f7d91f9ec9899824c38f19"}, "downloads": -1, "filename": "h_matchers-1.0.20191030.155750.tar.gz", "has_sig": false, "md5_digest": "cca9efd9a8ef7ff4217a55d33e70e26b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5105, "upload_time": "2019-10-30T15:58:52", "upload_time_iso_8601": "2019-10-30T15:58:52.417975Z", "url": "https://files.pythonhosted.org/packages/84/5b/b525e554f5dc132ccb95aa61a4a13c6820d51dbf24ca0c219e77fc001023/h_matchers-1.0.20191030.155750.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "483d341b4fc141e14dfb465ff6f505eb", "sha256": "33ddd0f40e92c5d7b1cbc9f4d2c42977338fa836e1d521204adfc66418f842b9"}, "downloads": -1, "filename": "h_matchers-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "483d341b4fc141e14dfb465ff6f505eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5180, "upload_time": "2019-11-01T18:03:21", "upload_time_iso_8601": "2019-11-01T18:03:21.675143Z", "url": "https://files.pythonhosted.org/packages/86/1d/f1d0fcd25564471e2993d85ac8a357f2bcbab5827b18ff35f4fd1b79b666/h_matchers-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec7d230094ff78278ab244030946710a", "sha256": "5272a8ee63b2e02f6502e9843bcd20221f4605bf5f21f532c002c419bdd184f1"}, "downloads": -1, "filename": "h_matchers-1.1.0.tar.gz", "has_sig": false, "md5_digest": "ec7d230094ff78278ab244030946710a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5501, "upload_time": "2019-11-01T18:03:22", "upload_time_iso_8601": "2019-11-01T18:03:22.922735Z", "url": "https://files.pythonhosted.org/packages/ca/54/a036c0f36b544cbfb01a9ff8363bd8964d6e1e042dd4fc26482c4108758a/h_matchers-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "ed376f8d1adbe5e2641a521bf0050b2c", "sha256": "9950e3a2624257d878b82dba2404b58e2532c8dfc6c87c13b540d29d2da2f027"}, "downloads": -1, "filename": "h_matchers-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ed376f8d1adbe5e2641a521bf0050b2c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14000, "upload_time": "2019-11-08T18:08:00", "upload_time_iso_8601": "2019-11-08T18:08:00.086721Z", "url": "https://files.pythonhosted.org/packages/96/00/78f7ea26ac67e8d70379bc3014503d5293116d1f9aacffcef0fa9146b26f/h_matchers-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b0f05774b66d1d50ff9262b4a6a09525", "sha256": "2c468385f839bd88adb7b2e85b64f403da299c8748f70a570523ded9a8756521"}, "downloads": -1, "filename": "h_matchers-1.2.0.tar.gz", "has_sig": false, "md5_digest": "b0f05774b66d1d50ff9262b4a6a09525", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10492, "upload_time": "2019-11-08T18:08:01", "upload_time_iso_8601": "2019-11-08T18:08:01.554627Z", "url": "https://files.pythonhosted.org/packages/f1/91/c0b8256fc205ecaab643d8497fdf3927522bdc6ce9f970b234b3e0a12480/h_matchers-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "9b4dc9a651811ad036f4ec39591bae4d", "sha256": "112f9c4282f06c3b838c14667b9c3e06364ce542cad3f49524b60ba6c4502055"}, "downloads": -1, "filename": "h_matchers-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9b4dc9a651811ad036f4ec39591bae4d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14477, "upload_time": "2020-01-30T12:22:03", "upload_time_iso_8601": "2020-01-30T12:22:03.587037Z", "url": "https://files.pythonhosted.org/packages/f5/18/ddc17284ac29e7ec80f99bb5db36e7d2daf9926a9780269af2f9ed66dd1f/h_matchers-1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "504719d6432a4677b621d74f1ba5b843", "sha256": "b4aef8f677ae1105dcf178d8197f983f16aef9af4e557573baaaccebbab61cfc"}, "downloads": -1, "filename": "h_matchers-1.2.1.tar.gz", "has_sig": false, "md5_digest": "504719d6432a4677b621d74f1ba5b843", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12720, "upload_time": "2020-01-30T12:22:04", "upload_time_iso_8601": "2020-01-30T12:22:04.984745Z", "url": "https://files.pythonhosted.org/packages/01/37/b161c11ee0948c26fb1da063e2c55b997acf302fbffa3790e473cbee8ae1/h_matchers-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "fdda2678107d8f2e8dd93655eccb85a8", "sha256": "d518535f1f77c4016b3539cad037abb0f40ddbbd6158295f411f48826ee7c387"}, "downloads": -1, "filename": "h_matchers-1.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "fdda2678107d8f2e8dd93655eccb85a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21244, "upload_time": "2020-02-20T18:31:12", "upload_time_iso_8601": "2020-02-20T18:31:12.973780Z", "url": "https://files.pythonhosted.org/packages/a4/75/61cdfa4cfc17617eacab7dc754985b98bdb553187282c18718e619ff5ebf/h_matchers-1.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebd2948afe05432a40cc323c77ad1e6a", "sha256": "30b6072f74d73d018e80067bba603599ccd2f2f097c38efb9563cb63c921f634"}, "downloads": -1, "filename": "h_matchers-1.2.2.tar.gz", "has_sig": false, "md5_digest": "ebd2948afe05432a40cc323c77ad1e6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18100, "upload_time": "2020-02-20T18:31:14", "upload_time_iso_8601": "2020-02-20T18:31:14.595917Z", "url": "https://files.pythonhosted.org/packages/15/ce/651e33a6e4ea0284e68ac640f7982b9f9734d39a5f4524b53eed368cccaf/h_matchers-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "bef9044feef5094907ff0df823284746", "sha256": "9de3adbb412e4f1b686b79492b385703959a167eea729dedba4dfec8c3591bb4"}, "downloads": -1, "filename": "h_matchers-1.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "bef9044feef5094907ff0df823284746", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21249, "upload_time": "2020-02-20T18:48:56", "upload_time_iso_8601": "2020-02-20T18:48:56.027893Z", "url": "https://files.pythonhosted.org/packages/23/c8/dc89e769953f7858bf1078f089cff9db7efb4898c2f1fad912a8ca508cbc/h_matchers-1.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a46e9aa7917b172164029ed45916ae5a", "sha256": "18afd252d11ba1092778417a7706e34ad50a9bfde6b90a48be9d69e63b092b8b"}, "downloads": -1, "filename": "h_matchers-1.2.3.tar.gz", "has_sig": false, "md5_digest": "a46e9aa7917b172164029ed45916ae5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18105, "upload_time": "2020-02-20T18:48:57", "upload_time_iso_8601": "2020-02-20T18:48:57.070697Z", "url": "https://files.pythonhosted.org/packages/7b/9a/54cf1cc4f195978db0b7a48e401a4be1cf803d7edfcfdee379a3bffbac97/h_matchers-1.2.3.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "b3d860e241768854462d4da0dd3b21aa", "sha256": "f397a1999c7f9c123fbcfd195a7d0170782c56737217b7572d7f1089ad7df6a1"}, "downloads": -1, "filename": "h_matchers-1.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "b3d860e241768854462d4da0dd3b21aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21285, "upload_time": "2020-02-21T13:38:32", "upload_time_iso_8601": "2020-02-21T13:38:32.477344Z", "url": "https://files.pythonhosted.org/packages/81/ad/a2ddbe17bf53a9ac5262ca10c8b209ff238473b86113934f0feb7eb4995e/h_matchers-1.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb3ef9a4c76d9e26a4dc9050b6be2963", "sha256": "d0dddfb0922fd444a350017c245f55064ff760997d5650a580d88b67ab3cbc0e"}, "downloads": -1, "filename": "h_matchers-1.2.4.tar.gz", "has_sig": false, "md5_digest": "cb3ef9a4c76d9e26a4dc9050b6be2963", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18127, "upload_time": "2020-02-21T13:38:33", "upload_time_iso_8601": "2020-02-21T13:38:33.619354Z", "url": "https://files.pythonhosted.org/packages/2a/a7/b055f6cb08d83bb56f70f04092b86876d12063ba83cd81a54a93ba2d7cc3/h_matchers-1.2.4.tar.gz", "yanked": false}], "1.2.5": [{"comment_text": "", "digests": {"md5": "96466a80deac613843fb6892ec45af7d", "sha256": "bd5a2c8bccaf2ac5bb3832aae1dbb1b61172d974d3e66c49273cc2fb226a5c37"}, "downloads": -1, "filename": "h_matchers-1.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "96466a80deac613843fb6892ec45af7d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22730, "upload_time": "2020-04-21T12:38:35", "upload_time_iso_8601": "2020-04-21T12:38:35.547376Z", "url": "https://files.pythonhosted.org/packages/d7/ee/f31c9fb3c42e7fae84923c48b32d68613c6f19c3e59b68f420d12fdbeb68/h_matchers-1.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a56771eb208c4f0de8190224fa336b91", "sha256": "cbe02e97729dd85cbcd4149a42ca03d24edcef8ba6e6db5530ef9775c3ed8f8e"}, "downloads": -1, "filename": "h_matchers-1.2.5.tar.gz", "has_sig": false, "md5_digest": "a56771eb208c4f0de8190224fa336b91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19158, "upload_time": "2020-04-21T12:38:36", "upload_time_iso_8601": "2020-04-21T12:38:36.924748Z", "url": "https://files.pythonhosted.org/packages/e2/3c/4280974f180e3f06cc6ed97e41a88cd2115881f218e1e417dd7d3d9057bd/h_matchers-1.2.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "96466a80deac613843fb6892ec45af7d", "sha256": "bd5a2c8bccaf2ac5bb3832aae1dbb1b61172d974d3e66c49273cc2fb226a5c37"}, "downloads": -1, "filename": "h_matchers-1.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "96466a80deac613843fb6892ec45af7d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22730, "upload_time": "2020-04-21T12:38:35", "upload_time_iso_8601": "2020-04-21T12:38:35.547376Z", "url": "https://files.pythonhosted.org/packages/d7/ee/f31c9fb3c42e7fae84923c48b32d68613c6f19c3e59b68f420d12fdbeb68/h_matchers-1.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a56771eb208c4f0de8190224fa336b91", "sha256": "cbe02e97729dd85cbcd4149a42ca03d24edcef8ba6e6db5530ef9775c3ed8f8e"}, "downloads": -1, "filename": "h_matchers-1.2.5.tar.gz", "has_sig": false, "md5_digest": "a56771eb208c4f0de8190224fa336b91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19158, "upload_time": "2020-04-21T12:38:36", "upload_time_iso_8601": "2020-04-21T12:38:36.924748Z", "url": "https://files.pythonhosted.org/packages/e2/3c/4280974f180e3f06cc6ed97e41a88cd2115881f218e1e417dd7d3d9057bd/h_matchers-1.2.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:56 2020"}