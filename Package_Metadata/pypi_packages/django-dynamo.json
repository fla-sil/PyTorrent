{"info": {"author": "Juergen Schackmann", "author_email": "juergen.schackmann@googlemail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Internet :: WWW/HTTP :: WSGI", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Django-Dynamo\r\n=============\r\nDynamo let users and admins create and mantain their Django **DYNA** mic **MO** dels dynamically at runtime.\r\nFor details on setup and usage, please read the `documentation <http://django-dynamo.readthedocs.org/en/latest/>`_ on Readthedocs.\r\n\r\n***********************************\r\nWhy would you need a dynamic model?\r\n***********************************\r\nDynamic models are beneficial for applications that need data structures, which are only known at runtime, but not when the application is coded. Or when existing models need to be extended at runtime by additional fields. Typical use cases are:\r\n\r\n#. *CMS:* In content management systems, users often need to maintain content that is unique for their specific website. The required data structures to store and maintain this content is therefore not known to the developers beforehand. \r\n#. *Web Shop:* The owner of a web shop has highly customized products, with very special product attributes. The shop developers want the web shop owner to define these attributes herself.\r\n#. *Survey:* If you have an application to create and maintain online surveys, you do neither know the questions nor the possible answers at runtime, but let your users define these, as they implement their surveys.\r\n\r\nDynamo supports the three of these use cases - and many more!\r\n\r\n*********************\r\nHow does Dynamo work?\r\n*********************\r\nDynamo lets you define the meta data for your models their fields. This metadata definition is stored in \"real\" Django models. The defined model is then created at runtime. And of course, you can also modify the models later on, e.g. adding, renaming or deleting fields; or changing model attributes. It will also automatically manage your admin and app cache for the dynamic models. The meta data maintenance can be done via the Django Admin or via the provided API.\r\n\r\n*********************\r\nWhat else is there?\r\n*********************\r\nThere are various approaches and implemenations available for Django developers:\r\n\r\n* The most straight forward approach is to use the Django internals and its DB API to create and maintain models at runtime. Numerous authors have elaborated this option in the `Django Wiki <http://code.djangoproject.com/wiki/DynamicModels>`_ . Michael Hall has created an `app <https://bitbucket.org/mhall119/dynamo>`_ following this approach; he has also called in dynamo, I hope this does not cause too much confusion.\r\n* `Entity-Attribute-Value <http://en.wikipedia.org/wiki/Entity-attribute-value_model>`_ / **EAV** Model is the traditioal computer science approach to tackle this kind of problem, and there are also django implementations for that available like `django-eav <https://github.com/mvpdev/django-eav>`_ or `eav-django <https://bitbucket.org/neithere/eav-django/>`_.\r\n* Finally, Will Hardy has introduced a `South <http://south.aeracode.org/>`_ -based concept, that he has presented and discussed at the `DjangoCon Europe 2011 <http://2011.djangocon.eu/talks/22/>`_ . Following this concept, he has implemented `dynamic-models <https://github.com/willhardy/dynamic-models>`_ \r\n\r\nThe South based approach seems to be the cleanest and clearly follows the DRY approach: all database handling, maintenance and transactions are left to the excellent South API.\r\n\r\n*********************************\r\nWho else gets credits for Dynamo?\r\n*********************************\r\nDynamo is inspired by the excellent work of Will Hardy's `dynamic-models <https://github.com/willhardy/dynamic-models>`_ and this `Django Wiki Article <http://code.djangoproject.com/wiki/DynamicModels>`_. It also re-uses parts of their concepts and coding.\r\nFurthermore, South is used to maintain the Dyanmo related database objects.\r\n\r\n****************************************\r\nUnder which license is Dynamo available?\r\n****************************************\r\nDynamo is available under the `BSD license <http://www.opensource.org/licenses/BSD-3-Clause>`_.\r\n\r\n********************\r\nHow do I get suport?\r\n********************\r\nThe online `documentation <http://django-dynamo.readthedocs.org/en/latest/>`_  on ReadtheDocs is a great place to start. If you have any further questions, issues or would like to contribute, please let us know at the `Dynamo Google Group <http://groups.google.com/group/django-dynamo>`_", "description_content_type": null, "docs_url": null, "download_url": "https://bitbucket.org/schacki/django-dynamo/downloads", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/schacki/django-dynamo/overview", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "django-dynamo", "package_url": "https://pypi.org/project/django-dynamo/", "platform": "any", "project_url": "https://pypi.org/project/django-dynamo/", "project_urls": {"Download": "https://bitbucket.org/schacki/django-dynamo/downloads", "Homepage": "https://bitbucket.org/schacki/django-dynamo/overview"}, "release_url": "https://pypi.org/project/django-dynamo/0.25/", "requires_dist": null, "requires_python": null, "summary": "Dynamo let users and admins create and mantain their Django DYNAmic MOdels dynamically at runtime.", "version": "0.25", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Dynamo let users and admins create and mantain their Django <strong>DYNA</strong> mic <strong>MO</strong> dels dynamically at runtime.\nFor details on setup and usage, please read the <a href=\"http://django-dynamo.readthedocs.org/en/latest/\" rel=\"nofollow\">documentation</a> on Readthedocs.</p>\n<div id=\"why-would-you-need-a-dynamic-model\">\n<h2>Why would you need a dynamic model?</h2>\n<p>Dynamic models are beneficial for applications that need data structures, which are only known at runtime, but not when the application is coded. Or when existing models need to be extended at runtime by additional fields. Typical use cases are:</p>\n<ol>\n<li><em>CMS:</em> In content management systems, users often need to maintain content that is unique for their specific website. The required data structures to store and maintain this content is therefore not known to the developers beforehand.</li>\n<li><em>Web Shop:</em> The owner of a web shop has highly customized products, with very special product attributes. The shop developers want the web shop owner to define these attributes herself.</li>\n<li><em>Survey:</em> If you have an application to create and maintain online surveys, you do neither know the questions nor the possible answers at runtime, but let your users define these, as they implement their surveys.</li>\n</ol>\n<p>Dynamo supports the three of these use cases - and many more!</p>\n</div>\n<div id=\"how-does-dynamo-work\">\n<h2>How does Dynamo work?</h2>\n<p>Dynamo lets you define the meta data for your models their fields. This metadata definition is stored in \u201creal\u201d Django models. The defined model is then created at runtime. And of course, you can also modify the models later on, e.g. adding, renaming or deleting fields; or changing model attributes. It will also automatically manage your admin and app cache for the dynamic models. The meta data maintenance can be done via the Django Admin or via the provided API.</p>\n</div>\n<div id=\"what-else-is-there\">\n<h2>What else is there?</h2>\n<p>There are various approaches and implemenations available for Django developers:</p>\n<ul>\n<li>The most straight forward approach is to use the Django internals and its DB API to create and maintain models at runtime. Numerous authors have elaborated this option in the <a href=\"http://code.djangoproject.com/wiki/DynamicModels\" rel=\"nofollow\">Django Wiki</a> . Michael Hall has created an <a href=\"https://bitbucket.org/mhall119/dynamo\" rel=\"nofollow\">app</a> following this approach; he has also called in dynamo, I hope this does not cause too much confusion.</li>\n<li><a href=\"http://en.wikipedia.org/wiki/Entity-attribute-value_model\" rel=\"nofollow\">Entity-Attribute-Value</a> / <strong>EAV</strong> Model is the traditioal computer science approach to tackle this kind of problem, and there are also django implementations for that available like <a href=\"https://github.com/mvpdev/django-eav\" rel=\"nofollow\">django-eav</a> or <a href=\"https://bitbucket.org/neithere/eav-django/\" rel=\"nofollow\">eav-django</a>.</li>\n<li>Finally, Will Hardy has introduced a <a href=\"http://south.aeracode.org/\" rel=\"nofollow\">South</a> -based concept, that he has presented and discussed at the <a href=\"http://2011.djangocon.eu/talks/22/\" rel=\"nofollow\">DjangoCon Europe 2011</a> . Following this concept, he has implemented <a href=\"https://github.com/willhardy/dynamic-models\" rel=\"nofollow\">dynamic-models</a></li>\n</ul>\n<p>The South based approach seems to be the cleanest and clearly follows the DRY approach: all database handling, maintenance and transactions are left to the excellent South API.</p>\n</div>\n<div id=\"who-else-gets-credits-for-dynamo\">\n<h2>Who else gets credits for Dynamo?</h2>\n<p>Dynamo is inspired by the excellent work of Will Hardy\u2019s <a href=\"https://github.com/willhardy/dynamic-models\" rel=\"nofollow\">dynamic-models</a> and this <a href=\"http://code.djangoproject.com/wiki/DynamicModels\" rel=\"nofollow\">Django Wiki Article</a>. It also re-uses parts of their concepts and coding.\nFurthermore, South is used to maintain the Dyanmo related database objects.</p>\n</div>\n<div id=\"under-which-license-is-dynamo-available\">\n<h2>Under which license is Dynamo available?</h2>\n<p>Dynamo is available under the <a href=\"http://www.opensource.org/licenses/BSD-3-Clause\" rel=\"nofollow\">BSD license</a>.</p>\n</div>\n<div id=\"how-do-i-get-suport\">\n<h2>How do I get suport?</h2>\n<p>The online <a href=\"http://django-dynamo.readthedocs.org/en/latest/\" rel=\"nofollow\">documentation</a>  on ReadtheDocs is a great place to start. If you have any further questions, issues or would like to contribute, please let us know at the <a href=\"http://groups.google.com/group/django-dynamo\" rel=\"nofollow\">Dynamo Google Group</a></p>\n</div>\n\n          </div>"}, "last_serial": 312094, "releases": {"0.25": [{"comment_text": "", "digests": {"md5": "d331758140dcd070c06fba1717dfb1e4", "sha256": "56307e25bf55f7f58bff16b0b6a7a93ddd792f9aa7d6949c9287bfd911636804"}, "downloads": -1, "filename": "django_dynamo-0.25-py2.7.egg", "has_sig": false, "md5_digest": "d331758140dcd070c06fba1717dfb1e4", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 46159, "upload_time": "2011-08-05T00:04:41", "upload_time_iso_8601": "2011-08-05T00:04:41.309862Z", "url": "https://files.pythonhosted.org/packages/16/33/3a173d4beeae2fb8988d7bb8f9702012b6607ce2ca24c9ca046a90faf329/django_dynamo-0.25-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "597f4e96437b71e55f69d0e142642894", "sha256": "48375618dd66897c59ea718f1fce1a9ca4807e7140fc2297adea63ef89204545"}, "downloads": -1, "filename": "django-dynamo-0.25.win32.exe", "has_sig": false, "md5_digest": "597f4e96437b71e55f69d0e142642894", "packagetype": "bdist_wininst", "python_version": "2.7", "requires_python": null, "size": 225464, "upload_time": "2011-08-05T00:01:09", "upload_time_iso_8601": "2011-08-05T00:01:09.595900Z", "url": "https://files.pythonhosted.org/packages/ff/c5/b271077fd5dad9014cee71366ad27f0dd879c5752e463d561891a498c366/django-dynamo-0.25.win32.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5b9e236ebe8201ccf1a90f3d0622935", "sha256": "8d8553ceb380f184aeec4bfb07c42d8483726f6a252e80eeee2c7f14991dc7ae"}, "downloads": -1, "filename": "django-dynamo-0.25.zip", "has_sig": false, "md5_digest": "c5b9e236ebe8201ccf1a90f3d0622935", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28088, "upload_time": "2011-08-04T23:59:25", "upload_time_iso_8601": "2011-08-04T23:59:25.088472Z", "url": "https://files.pythonhosted.org/packages/5d/eb/4fa2443823ac8f19b321ce1977b5c4907ee8c726f54c3871d1883daeff98/django-dynamo-0.25.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d331758140dcd070c06fba1717dfb1e4", "sha256": "56307e25bf55f7f58bff16b0b6a7a93ddd792f9aa7d6949c9287bfd911636804"}, "downloads": -1, "filename": "django_dynamo-0.25-py2.7.egg", "has_sig": false, "md5_digest": "d331758140dcd070c06fba1717dfb1e4", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 46159, "upload_time": "2011-08-05T00:04:41", "upload_time_iso_8601": "2011-08-05T00:04:41.309862Z", "url": "https://files.pythonhosted.org/packages/16/33/3a173d4beeae2fb8988d7bb8f9702012b6607ce2ca24c9ca046a90faf329/django_dynamo-0.25-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "597f4e96437b71e55f69d0e142642894", "sha256": "48375618dd66897c59ea718f1fce1a9ca4807e7140fc2297adea63ef89204545"}, "downloads": -1, "filename": "django-dynamo-0.25.win32.exe", "has_sig": false, "md5_digest": "597f4e96437b71e55f69d0e142642894", "packagetype": "bdist_wininst", "python_version": "2.7", "requires_python": null, "size": 225464, "upload_time": "2011-08-05T00:01:09", "upload_time_iso_8601": "2011-08-05T00:01:09.595900Z", "url": "https://files.pythonhosted.org/packages/ff/c5/b271077fd5dad9014cee71366ad27f0dd879c5752e463d561891a498c366/django-dynamo-0.25.win32.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5b9e236ebe8201ccf1a90f3d0622935", "sha256": "8d8553ceb380f184aeec4bfb07c42d8483726f6a252e80eeee2c7f14991dc7ae"}, "downloads": -1, "filename": "django-dynamo-0.25.zip", "has_sig": false, "md5_digest": "c5b9e236ebe8201ccf1a90f3d0622935", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28088, "upload_time": "2011-08-04T23:59:25", "upload_time_iso_8601": "2011-08-04T23:59:25.088472Z", "url": "https://files.pythonhosted.org/packages/5d/eb/4fa2443823ac8f19b321ce1977b5c4907ee8c726f54c3871d1883daeff98/django-dynamo-0.25.zip", "yanked": false}], "timestamp": "Fri May  8 00:36:28 2020"}