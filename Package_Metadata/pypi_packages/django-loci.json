{"info": {"author": "Federico Capoano", "author_email": "nemesis@ninux.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP", "Topic :: Scientific/Engineering :: GIS"], "description": "django-loci\n===========\n\n.. image:: https://travis-ci.org/openwisp/django-loci.svg\n   :target: https://travis-ci.org/openwisp/django-loci\n\n.. image:: https://coveralls.io/repos/openwisp/django-loci/badge.svg\n  :target: https://coveralls.io/r/openwisp/django-loci\n\n.. image:: https://requires.io/github/openwisp/django-loci/requirements.svg?branch=master\n   :target: https://requires.io/github/openwisp/django-loci/requirements/?branch=master\n   :alt: Requirements Status\n\n.. image:: https://badge.fury.io/py/django-loci.svg\n   :target: http://badge.fury.io/py/django-loci\n\n------------\n\nReusable django-app for storing GIS and indoor coordinates of objects.\n\n------------\n\n.. contents:: **Table of Contents**:\n   :backlinks: none\n   :depth: 3\n\n------------\n\nDependencies\n------------\n\n* Python >= 3.5\n* GeoDjango (`see GeoDjango Install Instructions <https://docs.djangoproject.com/en/dev/ref/contrib/gis/install/#requirements>`_)\n* One of the databases supported by GeoDjango\n\n\nCompatibility Table\n-------------------\n\n===============  ==================================\ndjango-loci      Python version\n0.2              2.7 or >=3.4\n0.3              >=3.5\n===============  ==================================\n\n\nInstall stable version from pypi\n--------------------------------\n\nInstall from pypi:\n\n.. code-block:: shell\n\n    pip install django-loci\n\nInstall development version\n---------------------------\n\nFirst of all, install the dependencies of `GeoDjango <https://docs.djangoproject.com/en/2.1/ref/contrib/gis/>`_:\n\n- `Geospatial libraries <https://docs.djangoproject.com/en/2.1/ref/contrib/gis/install/geolibs/>`_\n- `Spatial database <https://docs.djangoproject.com/en/2.1/ref/contrib/gis/install/spatialite/>`_,\n  for development we use Spatialite, a spatial extension of `sqlite <https://www.sqlite.org/index.html>`_\n\nInstall tarball:\n\n.. code-block:: shell\n\n    pip install https://github.com/openwisp/django-loci/tarball/master\n\nAlternatively you can install via pip using git:\n\n.. code-block:: shell\n\n    pip install -e git+git://github.com/openwisp/django-loci#egg=django_loci\n\nIf you want to contribute, install your cloned fork:\n\n.. code-block:: shell\n\n    git clone git@github.com:<your_fork>/django-loci.git\n    cd django_loci\n    python setup.py develop\n\nSetup (integrate in an existing django project)\n-----------------------------------------------\n\nFirst of all, set up your database engine to `one of the spatial databases suppported\nby GeoDjango <https://docs.djangoproject.com/en/2.1/ref/contrib/gis/db-api/#spatial-backends>`_.\n\nAdd ``django_loci`` and its dependencies to ``INSTALLED_APPS`` in the following order:\n\n.. code-block:: python\n\n    INSTALLED_APPS = [\n        # ...\n        'django.contrib.gis',\n        'django_loci',\n        'django.contrib.admin',\n        'leaflet',\n        'channels'\n        # ...\n    ]\n\nConfigure ``CHANNEL_LAYERS`` according to your needs, a sample configuration can be:\n\n.. code-block:: python\n\n    ASGI_APPLICATION = \"django_loci.channels.routing.channel_routing\"\n    CHANNEL_LAYERS = {\n        \"default\": {\n            \"BACKEND\": \"channels.layers.InMemoryChannelLayer\",\n        },\n    }\n\nNow run migrations:\n\n.. code-block:: shell\n\n    ./manage.py migrate\n\nTroubleshooting\n---------------\n\nCommon issues and solutions when installing GeoDjango.\n\nUnable to load the SpatiaLite library extension\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you get the following exception::\n\n    django.core.exceptions.ImproperlyConfigured: Unable to load the SpatiaLite library extension\n\nYou need to specify the ``SPATIALITE_LIBRARY_PATH`` in your ``settings.py`` as explained\nin the `django documentation regarding how to install and configure spatialte\n<https://docs.djangoproject.com/en/2.1/ref/contrib/gis/install/spatialite/>`_.\n\nIssues with other geospatial libraries\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nPlease refer to the `geodjango documentation on troubleshooting issues related to\ngeospatial libraries <https://docs.djangoproject.com/en/2.1/ref/contrib/gis/install/#library-environment-settings>`_.\n\nSettings\n--------\n\n``LOCI_FLOORPLAN_STORAGE``\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n+--------------+-------------------------------------------+\n| **type**:    | ``str``                                   |\n+--------------+-------------------------------------------+\n| **default**: | ``django_loci.storage.OverwriteStorage``  |\n+--------------+-------------------------------------------+\n\nThe django file storage class used for uploading floorplan images.\n\nThe filestorage can be changed to a different one as long as it has an\n``upload_to`` class method which will be passed to ``FloorPlan.image.upload_to``.\n\nTo understand the details of this statement, take a look at the code of\n`django_loci.storage.OverwriteStorage\n<https://github.com/openwisp/django-loci/blob/master/django_loci/storage.py>`_.\n\nExtending django-loci\n---------------------\n\n*django-loci* provides a set of models and admin classes which can be imported,\nextended and reused by third party apps.\n\nTo extend *django-loci*, **you MUST NOT** add it to ``settings.INSTALLED_APPS``,\nbut you must create your own app (which goes into ``settings.INSTALLED_APPS``),\nimport the base classes of django-loci and add your customizations.\n\nExtending models\n~~~~~~~~~~~~~~~~\n\nThis example provides an example of how to extend the base models of\n*django-loci* by adding a relation to another django model named `Organization`.\n\n.. code-block:: python\n\n    # models.py of your app\n    from django.db import models\n    from django_loci.base.models import (AbstractFloorPlan,\n                                         AbstractLocation,\n                                         AbstractObjectLocation)\n\n    # the model ``organizations.Organization`` is omitted for brevity\n    # if you are curious to see a real implementation, check out django-organizations\n\n\n    class OrganizationMixin(models.Model):\n        organization = models.ForeignKey('organizations.Organization')\n\n        class Meta:\n            abstract = True\n\n\n    class Location(OrganizationMixin, AbstractLocation):\n        class Meta(AbstractLocation.Meta):\n            abstract = False\n\n        def clean(self):\n            # your own validation logic here...\n            pass\n\n\n    class FloorPlan(OrganizationMixin, AbstractFloorPlan):\n        location = models.ForeignKey(Location)\n\n        class Meta(AbstractFloorPlan.Meta):\n            abstract = False\n\n        def clean(self):\n            # your own validation logic here...\n            pass\n\n\n    class ObjectLocation(OrganizationMixin, AbstractObjectLocation):\n        location = models.ForeignKey(Location, models.PROTECT,\n                                     blank=True, null=True)\n        floorplan = models.ForeignKey(FloorPlan, models.PROTECT,\n                                      blank=True, null=True)\n\n        class Meta(AbstractObjectLocation.Meta):\n            abstract = False\n\n        def clean(self):\n            # your own validation logic here...\n            pass\n\nExtending the admin\n~~~~~~~~~~~~~~~~~~~\n\nFollowing the previous `Organization` example, you can avoid duplicating the admin\ncode by importing the base admin classes and registering your models with them.\n\nBut first you have to change a few settings in your ``settings.py``, these are needed in\norder to load the admin templates and static files of *django-loci* even if it's not\nlisted in ``settings.INSTALLED_APPS``.\n\nAdd ``django.forms`` to ``INSTALLED_APPS``, now it should look like the following:\n\n.. code-block:: python\n\n    INSTALLED_APPS = [\n        # ...\n        'django.contrib.gis',\n        'django_loci',\n        'django.contrib.admin',\n        #      \u2193\n        'django.forms', # <-- add this\n        #      \u2191\n        'leaflet',\n        'channels'\n        # ...\n    ]\n\nNow add ``EXTENDED_APPS`` after ``INSTALLED_APPS``:\n\n.. code-block:: python\n\n    INSTALLED_APPS = [\n        # ...\n    ]\n\n    EXTENDED_APPS = ('django_loci',)\n\nAdd ``openwisp_utils.staticfiles.DependencyFinder`` to ``STATICFILES_FINDERS``:\n\n.. code-block:: python\n\n    STATICFILES_FINDERS = [\n        'django.contrib.staticfiles.finders.FileSystemFinder',\n        'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n        'openwisp_utils.staticfiles.DependencyFinder',\n    ]\n\nAdd ``openwisp_utils.loaders.DependencyLoader`` to ``TEMPLATES``:\n\n.. code-block:: python\n\n    TEMPLATES = [\n        {\n            'BACKEND': 'django.template.backends.django.DjangoTemplates',\n            'DIRS': [],\n            'OPTIONS': {\n                'loaders': [\n                    'django.template.loaders.filesystem.Loader',\n                    'django.template.loaders.app_directories.Loader',\n                    # add the following line\n                    'openwisp_utils.loaders.DependencyLoader'\n                ],\n                'context_processors': [\n                    'django.template.context_processors.debug',\n                    'django.template.context_processors.request',\n                    'django.contrib.auth.context_processors.auth',\n                    'django.contrib.messages.context_processors.messages',\n                ],\n            },\n        }\n    ]\n\nLast step, add ``FORM_RENDERER``:\n\n.. code-block:: python\n\n    FORM_RENDERER = 'django.forms.renderers.TemplatesSetting'\n\nThen you can go ahead and create your ``admin.py`` file following the example below:\n\n.. code-block:: python\n\n    # admin.py of your app\n    from django.contrib import admin\n\n    from django_loci.base.admin import (AbstractFloorPlanAdmin, AbstractFloorPlanForm,\n                                        AbstractFloorPlanInline, AbstractLocationAdmin,\n                                        AbstractLocationForm, AbstractObjectLocationForm,\n                                        AbstractObjectLocationInline)\n    from django_loci.models import FloorPlan, Location, ObjectLocation\n\n\n    class FloorPlanForm(AbstractFloorPlanForm):\n        class Meta(AbstractFloorPlanForm.Meta):\n            model = FloorPlan\n\n\n    class FloorPlanAdmin(AbstractFloorPlanAdmin):\n        form = FloorPlanForm\n\n\n    class LocationForm(AbstractLocationForm):\n        class Meta(AbstractLocationForm.Meta):\n            model = Location\n\n\n    class FloorPlanInline(AbstractFloorPlanInline):\n        form = FloorPlanForm\n        model = FloorPlan\n\n\n    class LocationAdmin(AbstractLocationAdmin):\n        form = LocationForm\n        inlines = [FloorPlanInline]\n\n\n    class ObjectLocationForm(AbstractObjectLocationForm):\n        class Meta(AbstractObjectLocationForm.Meta):\n            model = ObjectLocation\n\n\n    class ObjectLocationInline(AbstractObjectLocationInline):\n        model = ObjectLocation\n        form = ObjectLocationForm\n\n\n    admin.site.register(FloorPlan, FloorPlanAdmin)\n    admin.site.register(Location, LocationAdmin)\n\nExtending channel consumers\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nExtend the channel consumer of django-loci in this way:\n\n.. code-block:: python\n\n    from django_loci.channels.base import BaseLocationBroadcast\n    from ..models import Location  # your own location model\n\n\n    class LocationBroadcast(BaseLocationBroadcast):\n        model = Location\n\nExtending AppConfig\n~~~~~~~~~~~~~~~~~~~\n\nYou may want to reuse the ``AppConfig`` class of *django-loci* too:\n\n.. code-block:: python\n\n    from django_loci.apps import LociConfig\n\n\n    class MyConfig(LociConfig):\n        name = 'myapp'\n        verbose_name = _('My custom app')\n\n        def __setmodels__(self):\n            from .models import Location\n            self.location_model = Location\n\nInstalling for development\n--------------------------\n\nInstall sqlite:\n\n.. code-block:: shell\n\n    sudo apt-get install sqlite3 libsqlite3-dev libsqlite3-mod-spatialite gdal-bin\n\nInstall your forked repo:\n\n.. code-block:: shell\n\n    git clone git://github.com/<your_fork>/django-loci\n    cd django-loci/\n    python setup.py develop\n\nInstall test requirements:\n\n.. code-block:: shell\n\n    pip install -r requirements-test.txt\n\nCreate database:\n\n.. code-block:: shell\n\n    cd tests/\n    ./manage.py migrate\n    ./manage.py createsuperuser\n\nLaunch development server and SMTP debugging server:\n\n.. code-block:: shell\n\n    ./manage.py runserver\n\nYou can access the admin interface at http://127.0.0.1:8000/admin/.\n\nRun tests with:\n\n.. code-block:: shell\n\n    # pytests is used to test django-channels\n    ./runtests.py && pytest\n\nContributing\n------------\n\n1. Announce your intentions in the `OpenWISP Mailing List <https://groups.google.com/d/forum/openwisp>`_\n2. Fork this repo and install it\n3. Follow `PEP8, Style Guide for Python Code`_\n4. Write code\n5. Write tests for your code\n6. Ensure all tests pass\n7. Ensure test coverage does not decrease\n8. Document your changes\n9. Send pull request\n\n.. _PEP8, Style Guide for Python Code: http://www.python.org/dev/peps/pep-0008/\n\nChangelog\n---------\n\nSee `CHANGES <https://github.com/openwisp/django-loci/blob/master/CHANGES.rst>`_.\n\nLicense\n-------\n\nSee `LICENSE <https://github.com/openwisp/django-loci/blob/master/LICENSE>`_.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/openwisp/django-loci/releases", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://openwisp.org", "keywords": "django,gis", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "django-loci", "package_url": "https://pypi.org/project/django-loci/", "platform": "Platform Indipendent", "project_url": "https://pypi.org/project/django-loci/", "project_urls": {"Download": "https://github.com/openwisp/django-loci/releases", "Homepage": "http://openwisp.org"}, "release_url": "https://pypi.org/project/django-loci/0.3.1/", "requires_dist": ["Pillow (<=7.1.0,>=6.2.0)", "channels (<2.5.0,>=2.1.3)", "django-leaflet (<0.27,>=0.23)", "django (<3.1,>=2.2)", "openwisp-utils (<0.5.0,>=0.4.0)"], "requires_python": "", "summary": "Reusable django-app for outdoor and indoor mapping", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/openwisp/django-loci\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/openwisp/django-loci.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2dbc976a0c75877aff33a99af76402c4f8269945/68747470733a2f2f7472617669732d63692e6f72672f6f70656e776973702f646a616e676f2d6c6f63692e737667\"></a>\n<a href=\"https://coveralls.io/r/openwisp/django-loci\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/openwisp/django-loci/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/021f4798f35f07b9a16f1735a6c8f7fafade979f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6f70656e776973702f646a616e676f2d6c6f63692f62616467652e737667\"></a>\n<a href=\"https://requires.io/github/openwisp/django-loci/requirements/?branch=master\" rel=\"nofollow\"><img alt=\"Requirements Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/744100327c628281a38d8a1755b5ae0f5a952e5a/68747470733a2f2f72657175697265732e696f2f6769746875622f6f70656e776973702f646a616e676f2d6c6f63692f726571756972656d656e74732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://badge.fury.io/py/django-loci\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/django-loci.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/87c2ffdbad96a7c34cd3fdd386dab69665adb56c/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d6c6f63692e737667\"></a>\n<hr class=\"docutils\">\n<p>Reusable django-app for storing GIS and indoor coordinates of objects.</p>\n<hr class=\"docutils\">\n<div id=\"table-of-contents\">\n<p><strong>Table of Contents</strong>:</p>\n<ul>\n<li><a href=\"#dependencies\" id=\"id2\" rel=\"nofollow\">Dependencies</a></li>\n<li><a href=\"#compatibility-table\" id=\"id3\" rel=\"nofollow\">Compatibility Table</a></li>\n<li><a href=\"#install-stable-version-from-pypi\" id=\"id4\" rel=\"nofollow\">Install stable version from pypi</a></li>\n<li><a href=\"#install-development-version\" id=\"id5\" rel=\"nofollow\">Install development version</a></li>\n<li><a href=\"#setup-integrate-in-an-existing-django-project\" id=\"id6\" rel=\"nofollow\">Setup (integrate in an existing django project)</a></li>\n<li><a href=\"#troubleshooting\" id=\"id7\" rel=\"nofollow\">Troubleshooting</a><ul>\n<li><a href=\"#unable-to-load-the-spatialite-library-extension\" id=\"id8\" rel=\"nofollow\">Unable to load the SpatiaLite library extension</a></li>\n<li><a href=\"#issues-with-other-geospatial-libraries\" id=\"id9\" rel=\"nofollow\">Issues with other geospatial libraries</a></li>\n</ul>\n</li>\n<li><a href=\"#settings\" id=\"id10\" rel=\"nofollow\">Settings</a></li>\n<li><a href=\"#extending-django-loci\" id=\"id11\" rel=\"nofollow\">Extending django-loci</a><ul>\n<li><a href=\"#extending-models\" id=\"id12\" rel=\"nofollow\">Extending models</a></li>\n<li><a href=\"#extending-the-admin\" id=\"id13\" rel=\"nofollow\">Extending the admin</a></li>\n<li><a href=\"#extending-channel-consumers\" id=\"id14\" rel=\"nofollow\">Extending channel consumers</a></li>\n<li><a href=\"#extending-appconfig\" id=\"id15\" rel=\"nofollow\">Extending AppConfig</a></li>\n</ul>\n</li>\n<li><a href=\"#installing-for-development\" id=\"id16\" rel=\"nofollow\">Installing for development</a></li>\n<li><a href=\"#contributing\" id=\"id17\" rel=\"nofollow\">Contributing</a></li>\n<li><a href=\"#changelog\" id=\"id18\" rel=\"nofollow\">Changelog</a></li>\n<li><a href=\"#license\" id=\"id19\" rel=\"nofollow\">License</a></li>\n</ul>\n</div>\n<hr class=\"docutils\">\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li>Python &gt;= 3.5</li>\n<li>GeoDjango (<a href=\"https://docs.djangoproject.com/en/dev/ref/contrib/gis/install/#requirements\" rel=\"nofollow\">see GeoDjango Install Instructions</a>)</li>\n<li>One of the databases supported by GeoDjango</li>\n</ul>\n</div>\n<div id=\"compatibility-table\">\n<h2>Compatibility Table</h2>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td>django-loci</td>\n<td>Python version</td>\n</tr>\n<tr><td>0.2</td>\n<td>2.7 or &gt;=3.4</td>\n</tr>\n<tr><td>0.3</td>\n<td>&gt;=3.5</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"install-stable-version-from-pypi\">\n<h2>Install stable version from pypi</h2>\n<p>Install from pypi:</p>\n<pre>pip install django-loci\n</pre>\n</div>\n<div id=\"install-development-version\">\n<h2>Install development version</h2>\n<p>First of all, install the dependencies of <a href=\"https://docs.djangoproject.com/en/2.1/ref/contrib/gis/\" rel=\"nofollow\">GeoDjango</a>:</p>\n<ul>\n<li><a href=\"https://docs.djangoproject.com/en/2.1/ref/contrib/gis/install/geolibs/\" rel=\"nofollow\">Geospatial libraries</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/2.1/ref/contrib/gis/install/spatialite/\" rel=\"nofollow\">Spatial database</a>,\nfor development we use Spatialite, a spatial extension of <a href=\"https://www.sqlite.org/index.html\" rel=\"nofollow\">sqlite</a></li>\n</ul>\n<p>Install tarball:</p>\n<pre>pip install https://github.com/openwisp/django-loci/tarball/master\n</pre>\n<p>Alternatively you can install via pip using git:</p>\n<pre>pip install -e git+git://github.com/openwisp/django-loci#egg<span class=\"o\">=</span>django_loci\n</pre>\n<p>If you want to contribute, install your cloned fork:</p>\n<pre>git clone git@github.com:&lt;your_fork&gt;/django-loci.git\n<span class=\"nb\">cd</span> django_loci\npython setup.py develop\n</pre>\n</div>\n<div id=\"setup-integrate-in-an-existing-django-project\">\n<h2>Setup (integrate in an existing django project)</h2>\n<p>First of all, set up your database engine to <a href=\"https://docs.djangoproject.com/en/2.1/ref/contrib/gis/db-api/#spatial-backends\" rel=\"nofollow\">one of the spatial databases suppported\nby GeoDjango</a>.</p>\n<p>Add <tt>django_loci</tt> and its dependencies to <tt>INSTALLED_APPS</tt> in the following order:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"s1\">'django.contrib.gis'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django_loci'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.contrib.admin'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'leaflet'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'channels'</span>\n    <span class=\"c1\"># ...</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Configure <tt>CHANNEL_LAYERS</tt> according to your needs, a sample configuration can be:</p>\n<pre><span class=\"n\">ASGI_APPLICATION</span> <span class=\"o\">=</span> <span class=\"s2\">\"django_loci.channels.routing.channel_routing\"</span>\n<span class=\"n\">CHANNEL_LAYERS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"default\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"BACKEND\"</span><span class=\"p\">:</span> <span class=\"s2\">\"channels.layers.InMemoryChannelLayer\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Now run migrations:</p>\n<pre>./manage.py migrate\n</pre>\n</div>\n<div id=\"troubleshooting\">\n<h2>Troubleshooting</h2>\n<p>Common issues and solutions when installing GeoDjango.</p>\n<div id=\"unable-to-load-the-spatialite-library-extension\">\n<h3>Unable to load the SpatiaLite library extension</h3>\n<p>If you get the following exception:</p>\n<pre>django.core.exceptions.ImproperlyConfigured: Unable to load the SpatiaLite library extension\n</pre>\n<p>You need to specify the <tt>SPATIALITE_LIBRARY_PATH</tt> in your <tt>settings.py</tt> as explained\nin the <a href=\"https://docs.djangoproject.com/en/2.1/ref/contrib/gis/install/spatialite/\" rel=\"nofollow\">django documentation regarding how to install and configure spatialte</a>.</p>\n</div>\n<div id=\"issues-with-other-geospatial-libraries\">\n<h3>Issues with other geospatial libraries</h3>\n<p>Please refer to the <a href=\"https://docs.djangoproject.com/en/2.1/ref/contrib/gis/install/#library-environment-settings\" rel=\"nofollow\">geodjango documentation on troubleshooting issues related to\ngeospatial libraries</a>.</p>\n</div>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<h2 id=\"loci-floorplan-storage\"><span class=\"section-subtitle\"><tt>LOCI_FLOORPLAN_STORAGE</tt></span></h2>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td><strong>type</strong>:</td>\n<td><tt>str</tt></td>\n</tr>\n<tr><td><strong>default</strong>:</td>\n<td><tt>django_loci.storage.OverwriteStorage</tt></td>\n</tr>\n</tbody>\n</table>\n<p>The django file storage class used for uploading floorplan images.</p>\n<p>The filestorage can be changed to a different one as long as it has an\n<tt>upload_to</tt> class method which will be passed to <tt>FloorPlan.image.upload_to</tt>.</p>\n<p>To understand the details of this statement, take a look at the code of\n<a href=\"https://github.com/openwisp/django-loci/blob/master/django_loci/storage.py\" rel=\"nofollow\">django_loci.storage.OverwriteStorage</a>.</p>\n</div>\n<div id=\"extending-django-loci\">\n<h2>Extending django-loci</h2>\n<p><em>django-loci</em> provides a set of models and admin classes which can be imported,\nextended and reused by third party apps.</p>\n<p>To extend <em>django-loci</em>, <strong>you MUST NOT</strong> add it to <tt>settings.INSTALLED_APPS</tt>,\nbut you must create your own app (which goes into <tt>settings.INSTALLED_APPS</tt>),\nimport the base classes of django-loci and add your customizations.</p>\n<div id=\"extending-models\">\n<h3>Extending models</h3>\n<p>This example provides an example of how to extend the base models of\n<em>django-loci</em> by adding a relation to another django model named <cite>Organization</cite>.</p>\n<pre><span class=\"c1\"># models.py of your app</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_loci.base.models</span> <span class=\"kn\">import</span> <span class=\"p\">(</span><span class=\"n\">AbstractFloorPlan</span><span class=\"p\">,</span>\n                                     <span class=\"n\">AbstractLocation</span><span class=\"p\">,</span>\n                                     <span class=\"n\">AbstractObjectLocation</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># the model ``organizations.Organization`` is omitted for brevity</span>\n<span class=\"c1\"># if you are curious to see a real implementation, check out django-organizations</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">OrganizationMixin</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">organization</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"s1\">'organizations.Organization'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">abstract</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Location</span><span class=\"p\">(</span><span class=\"n\">OrganizationMixin</span><span class=\"p\">,</span> <span class=\"n\">AbstractLocation</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">(</span><span class=\"n\">AbstractLocation</span><span class=\"o\">.</span><span class=\"n\">Meta</span><span class=\"p\">):</span>\n        <span class=\"n\">abstract</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">clean</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># your own validation logic here...</span>\n        <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">FloorPlan</span><span class=\"p\">(</span><span class=\"n\">OrganizationMixin</span><span class=\"p\">,</span> <span class=\"n\">AbstractFloorPlan</span><span class=\"p\">):</span>\n    <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Location</span><span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">(</span><span class=\"n\">AbstractFloorPlan</span><span class=\"o\">.</span><span class=\"n\">Meta</span><span class=\"p\">):</span>\n        <span class=\"n\">abstract</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">clean</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># your own validation logic here...</span>\n        <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ObjectLocation</span><span class=\"p\">(</span><span class=\"n\">OrganizationMixin</span><span class=\"p\">,</span> <span class=\"n\">AbstractObjectLocation</span><span class=\"p\">):</span>\n    <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Location</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">PROTECT</span><span class=\"p\">,</span>\n                                 <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">floorplan</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">FloorPlan</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">PROTECT</span><span class=\"p\">,</span>\n                                  <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">(</span><span class=\"n\">AbstractObjectLocation</span><span class=\"o\">.</span><span class=\"n\">Meta</span><span class=\"p\">):</span>\n        <span class=\"n\">abstract</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">clean</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># your own validation logic here...</span>\n        <span class=\"k\">pass</span>\n</pre>\n</div>\n<div id=\"extending-the-admin\">\n<h3>Extending the admin</h3>\n<p>Following the previous <cite>Organization</cite> example, you can avoid duplicating the admin\ncode by importing the base admin classes and registering your models with them.</p>\n<p>But first you have to change a few settings in your <tt>settings.py</tt>, these are needed in\norder to load the admin templates and static files of <em>django-loci</em> even if it\u2019s not\nlisted in <tt>settings.INSTALLED_APPS</tt>.</p>\n<p>Add <tt>django.forms</tt> to <tt>INSTALLED_APPS</tt>, now it should look like the following:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"s1\">'django.contrib.gis'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django_loci'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.contrib.admin'</span><span class=\"p\">,</span>\n    <span class=\"c1\">#      \u2193</span>\n    <span class=\"s1\">'django.forms'</span><span class=\"p\">,</span> <span class=\"c1\"># &lt;-- add this</span>\n    <span class=\"c1\">#      \u2191</span>\n    <span class=\"s1\">'leaflet'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'channels'</span>\n    <span class=\"c1\"># ...</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Now add <tt>EXTENDED_APPS</tt> after <tt>INSTALLED_APPS</tt>:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"c1\"># ...</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">EXTENDED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'django_loci'</span><span class=\"p\">,)</span>\n</pre>\n<p>Add <tt>openwisp_utils.staticfiles.DependencyFinder</tt> to <tt>STATICFILES_FINDERS</tt>:</p>\n<pre><span class=\"n\">STATICFILES_FINDERS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s1\">'django.contrib.staticfiles.finders.FileSystemFinder'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.contrib.staticfiles.finders.AppDirectoriesFinder'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'openwisp_utils.staticfiles.DependencyFinder'</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Add <tt>openwisp_utils.loaders.DependencyLoader</tt> to <tt>TEMPLATES</tt>:</p>\n<pre><span class=\"n\">TEMPLATES</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'BACKEND'</span><span class=\"p\">:</span> <span class=\"s1\">'django.template.backends.django.DjangoTemplates'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'DIRS'</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n        <span class=\"s1\">'OPTIONS'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'loaders'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"s1\">'django.template.loaders.filesystem.Loader'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'django.template.loaders.app_directories.Loader'</span><span class=\"p\">,</span>\n                <span class=\"c1\"># add the following line</span>\n                <span class=\"s1\">'openwisp_utils.loaders.DependencyLoader'</span>\n            <span class=\"p\">],</span>\n            <span class=\"s1\">'context_processors'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"s1\">'django.template.context_processors.debug'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'django.template.context_processors.request'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'django.contrib.auth.context_processors.auth'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'django.contrib.messages.context_processors.messages'</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Last step, add <tt>FORM_RENDERER</tt>:</p>\n<pre><span class=\"n\">FORM_RENDERER</span> <span class=\"o\">=</span> <span class=\"s1\">'django.forms.renderers.TemplatesSetting'</span>\n</pre>\n<p>Then you can go ahead and create your <tt>admin.py</tt> file following the example below:</p>\n<pre><span class=\"c1\"># admin.py of your app</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django_loci.base.admin</span> <span class=\"kn\">import</span> <span class=\"p\">(</span><span class=\"n\">AbstractFloorPlanAdmin</span><span class=\"p\">,</span> <span class=\"n\">AbstractFloorPlanForm</span><span class=\"p\">,</span>\n                                    <span class=\"n\">AbstractFloorPlanInline</span><span class=\"p\">,</span> <span class=\"n\">AbstractLocationAdmin</span><span class=\"p\">,</span>\n                                    <span class=\"n\">AbstractLocationForm</span><span class=\"p\">,</span> <span class=\"n\">AbstractObjectLocationForm</span><span class=\"p\">,</span>\n                                    <span class=\"n\">AbstractObjectLocationInline</span><span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_loci.models</span> <span class=\"kn\">import</span> <span class=\"n\">FloorPlan</span><span class=\"p\">,</span> <span class=\"n\">Location</span><span class=\"p\">,</span> <span class=\"n\">ObjectLocation</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">FloorPlanForm</span><span class=\"p\">(</span><span class=\"n\">AbstractFloorPlanForm</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">(</span><span class=\"n\">AbstractFloorPlanForm</span><span class=\"o\">.</span><span class=\"n\">Meta</span><span class=\"p\">):</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">FloorPlan</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">FloorPlanAdmin</span><span class=\"p\">(</span><span class=\"n\">AbstractFloorPlanAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">FloorPlanForm</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">LocationForm</span><span class=\"p\">(</span><span class=\"n\">AbstractLocationForm</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">(</span><span class=\"n\">AbstractLocationForm</span><span class=\"o\">.</span><span class=\"n\">Meta</span><span class=\"p\">):</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Location</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">FloorPlanInline</span><span class=\"p\">(</span><span class=\"n\">AbstractFloorPlanInline</span><span class=\"p\">):</span>\n    <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">FloorPlanForm</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">FloorPlan</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">LocationAdmin</span><span class=\"p\">(</span><span class=\"n\">AbstractLocationAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">LocationForm</span>\n    <span class=\"n\">inlines</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">FloorPlanInline</span><span class=\"p\">]</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ObjectLocationForm</span><span class=\"p\">(</span><span class=\"n\">AbstractObjectLocationForm</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">(</span><span class=\"n\">AbstractObjectLocationForm</span><span class=\"o\">.</span><span class=\"n\">Meta</span><span class=\"p\">):</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">ObjectLocation</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ObjectLocationInline</span><span class=\"p\">(</span><span class=\"n\">AbstractObjectLocationInline</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">ObjectLocation</span>\n    <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">ObjectLocationForm</span>\n\n\n<span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">site</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">FloorPlan</span><span class=\"p\">,</span> <span class=\"n\">FloorPlanAdmin</span><span class=\"p\">)</span>\n<span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">site</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">Location</span><span class=\"p\">,</span> <span class=\"n\">LocationAdmin</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"extending-channel-consumers\">\n<h3>Extending channel consumers</h3>\n<p>Extend the channel consumer of django-loci in this way:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_loci.channels.base</span> <span class=\"kn\">import</span> <span class=\"n\">BaseLocationBroadcast</span>\n<span class=\"kn\">from</span> <span class=\"nn\">..models</span> <span class=\"kn\">import</span> <span class=\"n\">Location</span>  <span class=\"c1\"># your own location model</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">LocationBroadcast</span><span class=\"p\">(</span><span class=\"n\">BaseLocationBroadcast</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Location</span>\n</pre>\n</div>\n<div id=\"extending-appconfig\">\n<h3>Extending AppConfig</h3>\n<p>You may want to reuse the <tt>AppConfig</tt> class of <em>django-loci</em> too:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_loci.apps</span> <span class=\"kn\">import</span> <span class=\"n\">LociConfig</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyConfig</span><span class=\"p\">(</span><span class=\"n\">LociConfig</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">'myapp'</span>\n    <span class=\"n\">verbose_name</span> <span class=\"o\">=</span> <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s1\">'My custom app'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__setmodels__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">Location</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">location_model</span> <span class=\"o\">=</span> <span class=\"n\">Location</span>\n</pre>\n</div>\n</div>\n<div id=\"installing-for-development\">\n<h2>Installing for development</h2>\n<p>Install sqlite:</p>\n<pre>sudo apt-get install sqlite3 libsqlite3-dev libsqlite3-mod-spatialite gdal-bin\n</pre>\n<p>Install your forked repo:</p>\n<pre>git clone git://github.com/&lt;your_fork&gt;/django-loci\n<span class=\"nb\">cd</span> django-loci/\npython setup.py develop\n</pre>\n<p>Install test requirements:</p>\n<pre>pip install -r requirements-test.txt\n</pre>\n<p>Create database:</p>\n<pre><span class=\"nb\">cd</span> tests/\n./manage.py migrate\n./manage.py createsuperuser\n</pre>\n<p>Launch development server and SMTP debugging server:</p>\n<pre>./manage.py runserver\n</pre>\n<p>You can access the admin interface at <a href=\"http://127.0.0.1:8000/admin/\" rel=\"nofollow\">http://127.0.0.1:8000/admin/</a>.</p>\n<p>Run tests with:</p>\n<pre><span class=\"c1\"># pytests is used to test django-channels\n</span>./runtests.py <span class=\"o\">&amp;&amp;</span> pytest\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<ol>\n<li>Announce your intentions in the <a href=\"https://groups.google.com/d/forum/openwisp\" rel=\"nofollow\">OpenWISP Mailing List</a></li>\n<li>Fork this repo and install it</li>\n<li>Follow <a href=\"http://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\">PEP8, Style Guide for Python Code</a></li>\n<li>Write code</li>\n<li>Write tests for your code</li>\n<li>Ensure all tests pass</li>\n<li>Ensure test coverage does not decrease</li>\n<li>Document your changes</li>\n<li>Send pull request</li>\n</ol>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<p>See <a href=\"https://github.com/openwisp/django-loci/blob/master/CHANGES.rst\" rel=\"nofollow\">CHANGES</a>.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>See <a href=\"https://github.com/openwisp/django-loci/blob/master/LICENSE\" rel=\"nofollow\">LICENSE</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6493745, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "0a8209ee188c4bc3796ad751a9537d07", "sha256": "9a37cd95c754ceb7a993160407f55358d0bce1fcae65c7b2d3d22e956fcda995"}, "downloads": -1, "filename": "django_loci-0.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "0a8209ee188c4bc3796ad751a9537d07", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 39482, "upload_time": "2017-12-02T20:09:11", "upload_time_iso_8601": "2017-12-02T20:09:11.542399Z", "url": "https://files.pythonhosted.org/packages/61/81/0cbfe419f73b45078cbd9fefdb02db47812f33598865baf22e28b7488160/django_loci-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "23469f8390a10ef43b6a464f1b136c87", "sha256": "3b2ef6c6745beb6e109cbb88253cf0fc307117c8dbbd3c3c94bc9091629203d6"}, "downloads": -1, "filename": "django-loci-0.1.tar.gz", "has_sig": true, "md5_digest": "23469f8390a10ef43b6a464f1b136c87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28551, "upload_time": "2017-12-02T20:09:09", "upload_time_iso_8601": "2017-12-02T20:09:09.002930Z", "url": "https://files.pythonhosted.org/packages/2c/5a/5f4df57ddff79a0926bb681c8c3ae8f4e10b2e2e62117a59c63d06bf9d0c/django-loci-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "b2451c915d7b8448899009d10ca0e54d", "sha256": "e91dc92b55aade343c439357bbadb36450fdedf25e6c0bc3de80ec0e565e4848"}, "downloads": -1, "filename": "django_loci-0.1.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "b2451c915d7b8448899009d10ca0e54d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 40052, "upload_time": "2017-12-06T17:01:13", "upload_time_iso_8601": "2017-12-06T17:01:13.648065Z", "url": "https://files.pythonhosted.org/packages/f2/4d/850d73742375888cb699229a25844e1b821ec73cc886542c5380fb9280c3/django_loci-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cfd3b0f8c7e5e2ecd2514e18997e50e0", "sha256": "dbbb5775a5aa54027ed233d30971c91e0acc54781b765c24fb56f2f36f4a013a"}, "downloads": -1, "filename": "django-loci-0.1.1.tar.gz", "has_sig": true, "md5_digest": "cfd3b0f8c7e5e2ecd2514e18997e50e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29008, "upload_time": "2017-12-06T17:01:11", "upload_time_iso_8601": "2017-12-06T17:01:11.759065Z", "url": "https://files.pythonhosted.org/packages/42/f8/072df0fcfbe26fa9b28d30378039041b5b5f5f8af0b52f06b67db90b39cf/django-loci-0.1.1.tar.gz", "yanked": false}], "0.1a0": [{"comment_text": "", "digests": {"md5": "08a9e69f99d30e019f1aad397d740e03", "sha256": "f6cf04536647ab5486634cb1eb6abbfb75af2e97ff98c856e45d061ba83ac327"}, "downloads": -1, "filename": "django_loci-0.1a0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "08a9e69f99d30e019f1aad397d740e03", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 37830, "upload_time": "2017-11-26T18:13:17", "upload_time_iso_8601": "2017-11-26T18:13:17.363981Z", "url": "https://files.pythonhosted.org/packages/2d/c9/ea295303278c1358fb3644eb04f54d43ef6d4daa774fc68d104ea066f77c/django_loci-0.1a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a443f63407bb3a062026ece847e4c1f9", "sha256": "5b53e2bf8433f74309671ed7bc595947e2ed525710ab023111134269786c6e91"}, "downloads": -1, "filename": "django-loci-0.1a0.tar.gz", "has_sig": true, "md5_digest": "a443f63407bb3a062026ece847e4c1f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26892, "upload_time": "2017-11-26T18:13:14", "upload_time_iso_8601": "2017-11-26T18:13:14.769510Z", "url": "https://files.pythonhosted.org/packages/0e/70/6870de9567762e6083b5e8712214a16fa708704446b15cacac26218f9238/django-loci-0.1a0.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "a4112a52e657a1b36c23541e79ea9dec", "sha256": "10fdc02dd932f28f2f2c3bbc811904753510d52d5d53a434bbacc62a75461c31"}, "downloads": -1, "filename": "django_loci-0.2-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "a4112a52e657a1b36c23541e79ea9dec", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 40045, "upload_time": "2018-02-19T12:30:25", "upload_time_iso_8601": "2018-02-19T12:30:25.220439Z", "url": "https://files.pythonhosted.org/packages/a5/81/fcfb58745a7b58401a0419672d56cb5cfd6cb84ab3a7374d071cb6b80833/django_loci-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5a66d04d42896fa12ae65733d69f201", "sha256": "7db3576480475b703e5cd1bd28faae09a7945d35ebd250115e015090bcf019ca"}, "downloads": -1, "filename": "django-loci-0.2.tar.gz", "has_sig": true, "md5_digest": "c5a66d04d42896fa12ae65733d69f201", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27059, "upload_time": "2018-02-19T12:30:28", "upload_time_iso_8601": "2018-02-19T12:30:28.033737Z", "url": "https://files.pythonhosted.org/packages/34/2e/ae5172b4c9699a5b9d758a9eea1157395645da0994787bdb2c4df7cbca35/django-loci-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "4be61650fe4b3f4cc990c8316b1ebc68", "sha256": "39c19ec883cf72416e949400963061d848a9a2877f2588200dcf90eedf6873b7"}, "downloads": -1, "filename": "django_loci-0.2.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "4be61650fe4b3f4cc990c8316b1ebc68", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 36396, "upload_time": "2018-09-26T16:41:06", "upload_time_iso_8601": "2018-09-26T16:41:06.364812Z", "url": "https://files.pythonhosted.org/packages/51/69/d17944618397d46405f45faf1e052b4cd475a9003b4d529560b6ad7b095e/django_loci-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d7658a5ac9412a25849d4892d9f0121", "sha256": "123cb9b9fa5691c8d6ec73abf3f5d58514430cb69f8169378afa208bbd9e7336"}, "downloads": -1, "filename": "django-loci-0.2.1.tar.gz", "has_sig": true, "md5_digest": "7d7658a5ac9412a25849d4892d9f0121", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27664, "upload_time": "2018-09-26T16:41:08", "upload_time_iso_8601": "2018-09-26T16:41:08.283490Z", "url": "https://files.pythonhosted.org/packages/6a/2c/f8b74c1defb063a5b5ed3ae4acebed612a87f025f559abf6069798fcf382/django-loci-0.2.1.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "131dbc584104ba2e9ec941cefd8ea01b", "sha256": "da2a034017239b7a1f1ab0b459062802ec7b7add8f945017047182bf4cdfe22a"}, "downloads": -1, "filename": "django_loci-0.3-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "131dbc584104ba2e9ec941cefd8ea01b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 38243, "upload_time": "2020-01-13T17:06:02", "upload_time_iso_8601": "2020-01-13T17:06:02.190869Z", "url": "https://files.pythonhosted.org/packages/f8/73/d76ff3e460df14e017ffb10429dd848a641a59fecb21d8be1b7f6006bea0/django_loci-0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a46f24b67c2ea974718153251495246f", "sha256": "03717324d1c301c9a61714680c701c3563971eecb6b421d1c8c877aa5f167ebd"}, "downloads": -1, "filename": "django-loci-0.3.tar.gz", "has_sig": true, "md5_digest": "a46f24b67c2ea974718153251495246f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32545, "upload_time": "2020-01-13T17:06:09", "upload_time_iso_8601": "2020-01-13T17:06:09.269434Z", "url": "https://files.pythonhosted.org/packages/fd/5b/a8fe210f1d9c9f07c51bce120294912894596f06c0575369158c21c9a605/django-loci-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "3484665b255dc91bd4e92de354258cc6", "sha256": "3142d0f1a66791f8417b30e655c3580ff427f0c8c071f90578d0b81d20a0af5a"}, "downloads": -1, "filename": "django_loci-0.3.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "3484665b255dc91bd4e92de354258cc6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 38130, "upload_time": "2020-01-21T12:35:59", "upload_time_iso_8601": "2020-01-21T12:35:59.398474Z", "url": "https://files.pythonhosted.org/packages/f8/5b/dd8259f89cc088c1dd81c78eb403c596ccb59e204b26cac5fa1989ac5ffc/django_loci-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c9fd4edeb0c98e673af108ca94d6571", "sha256": "58a7f8900a4c157460756c1e6b2c395fea3473913588bbff112afe98bcffba59"}, "downloads": -1, "filename": "django-loci-0.3.1.tar.gz", "has_sig": true, "md5_digest": "9c9fd4edeb0c98e673af108ca94d6571", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32468, "upload_time": "2020-01-21T12:36:02", "upload_time_iso_8601": "2020-01-21T12:36:02.480045Z", "url": "https://files.pythonhosted.org/packages/57/08/e4e1514ac78c2a0ed828b0ceb8bf75dcc18519aa68e999c6d9417206dfd1/django-loci-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3484665b255dc91bd4e92de354258cc6", "sha256": "3142d0f1a66791f8417b30e655c3580ff427f0c8c071f90578d0b81d20a0af5a"}, "downloads": -1, "filename": "django_loci-0.3.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "3484665b255dc91bd4e92de354258cc6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 38130, "upload_time": "2020-01-21T12:35:59", "upload_time_iso_8601": "2020-01-21T12:35:59.398474Z", "url": "https://files.pythonhosted.org/packages/f8/5b/dd8259f89cc088c1dd81c78eb403c596ccb59e204b26cac5fa1989ac5ffc/django_loci-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c9fd4edeb0c98e673af108ca94d6571", "sha256": "58a7f8900a4c157460756c1e6b2c395fea3473913588bbff112afe98bcffba59"}, "downloads": -1, "filename": "django-loci-0.3.1.tar.gz", "has_sig": true, "md5_digest": "9c9fd4edeb0c98e673af108ca94d6571", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32468, "upload_time": "2020-01-21T12:36:02", "upload_time_iso_8601": "2020-01-21T12:36:02.480045Z", "url": "https://files.pythonhosted.org/packages/57/08/e4e1514ac78c2a0ed828b0ceb8bf75dcc18519aa68e999c6d9417206dfd1/django-loci-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:17 2020"}