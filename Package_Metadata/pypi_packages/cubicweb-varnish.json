{"info": {"author": "LOGILAB S.A. (Paris, FRANCE)", "author_email": "contact@logilab.fr", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: CubicWeb", "Programming Language :: JavaScript", "Programming Language :: Python"], "description": "Summary\n-------\n\nThis cubes enables a purge mechanism for a cubicweb website that is\nsitting behind a varnish cache.\n\nInternals\n---------\n\nThe purge mechanism consists of sending purge commands to the\nadministration backend of varnish (by default\nlocalhost:6082). Generally it is recommended to protect this\nmanagement port with a secret file which can be configured in this\ncube. Multiple backends can be controlled in this manner in a\ndistributed setup.\n\nOut of the box, this cube will not purge any URLs. The logic of which\npages should be \"purged\" has to be implemented in content cubes.\n\nTo configure which urls to purge, you have to implement an\n`IVarnishAdapter`, for example ::\n\n.. sourcecode:: python\n\n   from cubes.varnish.entities import IVarnishAdapter\n\n   class BlogEntryVarnishAdapter(IVarnishAdapter):\n     __select__ = is_instance('BlogEntry')\n\n     def urls_to_purge(self):\n         return ('/', #frontpage\n                 self.entity.absolute_url(), #URL of blog post\n                 '/BlogEntry' # list of blog entries)\n\nDebugging : cubicweb-varnish will not crash when it cannot connect to\nthe administrative port, it will silently log an error in the log.\n\nDependencies\n------------\n\nhttp://www.varnish-cache.org/\n\nor apt-get install varnish (for debian derived distributions)", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.cubicweb.org/project/cubicweb-varnish", "keywords": "", "license": "LGPL-2.1", "maintainer": "", "maintainer_email": "", "name": "cubicweb-varnish", "package_url": "https://pypi.org/project/cubicweb-varnish/", "platform": "", "project_url": "https://pypi.org/project/cubicweb-varnish/", "project_urls": {"Homepage": "http://www.cubicweb.org/project/cubicweb-varnish"}, "release_url": "https://pypi.org/project/cubicweb-varnish/0.5.1/", "requires_dist": null, "requires_python": "", "summary": "cubicweb varnish helper", "version": "0.5.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"summary\">\n<h2>Summary</h2>\n<p>This cubes enables a purge mechanism for a cubicweb website that is\nsitting behind a varnish cache.</p>\n</div>\n<div id=\"internals\">\n<h2>Internals</h2>\n<p>The purge mechanism consists of sending purge commands to the\nadministration backend of varnish (by default\nlocalhost:6082). Generally it is recommended to protect this\nmanagement port with a secret file which can be configured in this\ncube. Multiple backends can be controlled in this manner in a\ndistributed setup.</p>\n<p>Out of the box, this cube will not purge any URLs. The logic of which\npages should be \u201cpurged\u201d has to be implemented in content cubes.</p>\n<p>To configure which urls to purge, you have to implement an\n<cite>IVarnishAdapter</cite>, for example</p>\n<pre>.. sourcecode:: python\n</pre>\n<blockquote>\n<p>from cubes.varnish.entities import IVarnishAdapter</p>\n<dl>\n<dt>class BlogEntryVarnishAdapter(IVarnishAdapter):</dt>\n<dd><p>__select__ = is_instance(\u2018BlogEntry\u2019)</p>\n<dl>\n<dt>def urls_to_purge(self):</dt>\n<dd><dl>\n<dt>return (\u2018/\u2019, #frontpage</dt>\n<dd>self.entity.absolute_url(), #URL of blog post\n\u2018/BlogEntry\u2019 # list of blog entries)</dd>\n</dl>\n</dd>\n</dl>\n</dd>\n</dl>\n</blockquote>\n<p>Debugging : cubicweb-varnish will not crash when it cannot connect to\nthe administrative port, it will silently log an error in the log.</p>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p><a href=\"http://www.varnish-cache.org/\" rel=\"nofollow\">http://www.varnish-cache.org/</a></p>\n<p>or apt-get install varnish (for debian derived distributions)</p>\n</div>\n\n          </div>"}, "last_serial": 5181319, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "dc429a1fc178192eaeb67b201df1862c", "sha256": "097679d9962facadcd0a4c0448fdd0cf3c4fb593e57b0efc2d554fff0853145c"}, "downloads": -1, "filename": "cubicweb-varnish-0.3.0.tar.gz", "has_sig": false, "md5_digest": "dc429a1fc178192eaeb67b201df1862c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8118, "upload_time": "2015-02-05T10:49:45", "upload_time_iso_8601": "2015-02-05T10:49:45.602253Z", "url": "https://files.pythonhosted.org/packages/cd/d7/14ec37562bd631c9347d3d077a5ca3237376b20a73e2a5aa4cf2f730d7bb/cubicweb-varnish-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "96711cc48520035f983b8d31980b21d6", "sha256": "ec375181988d6c4ab0b8678d6be9888c70b82485f8646953ed12efdcc1f99055"}, "downloads": -1, "filename": "cubicweb-varnish-0.4.0-2.tar.gz", "has_sig": false, "md5_digest": "96711cc48520035f983b8d31980b21d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6688, "upload_time": "2017-06-27T17:00:28", "upload_time_iso_8601": "2017-06-27T17:00:28.126614Z", "url": "https://files.pythonhosted.org/packages/41/e3/2bae15300f4a10b6d9ba903f4b54003b6395b91d092bf77da78634ee4940/cubicweb-varnish-0.4.0-2.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "3f5e0bc7bbe7376f2141f08a232e33ca", "sha256": "e57426a16da3ac4cde78acec43f0e0efea331c90dc5d5b427520f1b3eaec9912"}, "downloads": -1, "filename": "cubicweb-varnish-0.4.1.tar.gz", "has_sig": false, "md5_digest": "3f5e0bc7bbe7376f2141f08a232e33ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6644, "upload_time": "2018-08-03T08:56:13", "upload_time_iso_8601": "2018-08-03T08:56:13.538072Z", "url": "https://files.pythonhosted.org/packages/30/4e/31480a29e42fdbdd60e08ea22b807d4917b34db63a6b7763777a58a59409/cubicweb-varnish-0.4.1.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "9732980351526ce1fe094460262533ec", "sha256": "1b1498501965bf34d87d88fcd9a16e64622e34664b22bc9ac39c8c8769eeaaa2"}, "downloads": -1, "filename": "cubicweb-varnish-0.5.1.tar.gz", "has_sig": false, "md5_digest": "9732980351526ce1fe094460262533ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6670, "upload_time": "2019-04-24T10:05:37", "upload_time_iso_8601": "2019-04-24T10:05:37.554782Z", "url": "https://files.pythonhosted.org/packages/ae/89/9753b505360a8522e1ce9bc929110fafc88fe5c86b39fe100b8713c45fc2/cubicweb-varnish-0.5.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9732980351526ce1fe094460262533ec", "sha256": "1b1498501965bf34d87d88fcd9a16e64622e34664b22bc9ac39c8c8769eeaaa2"}, "downloads": -1, "filename": "cubicweb-varnish-0.5.1.tar.gz", "has_sig": false, "md5_digest": "9732980351526ce1fe094460262533ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6670, "upload_time": "2019-04-24T10:05:37", "upload_time_iso_8601": "2019-04-24T10:05:37.554782Z", "url": "https://files.pythonhosted.org/packages/ae/89/9753b505360a8522e1ce9bc929110fafc88fe5c86b39fe100b8713c45fc2/cubicweb-varnish-0.5.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:27 2020"}