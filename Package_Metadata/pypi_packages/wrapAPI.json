{"info": {"author": "Denis Korytkin", "author_email": "dkorytkin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6"], "description": "\n# wrapAPI\n\nRequests wrapper for API testing\n\n\n## Usage\n\n### conftest\nconftest.py\n```python\nimport pytest\n\nfrom wrapapi import Application, Settings\n\n\n@pytest.fixture(scope='session')\ndef settings() -> Settings:\n    config = Settings()\n    config.base_url = 'http://localhost:5555'\n    config.headers['Autorization'] = 'Basic secret'\n    return config\n\n\n@pytest.fixture(scope='session')\ndef client(settings) -> Application:\n    app = Application(settings)\n    client = app.create()\n    yield client\n    client.close()\n\n\n@pytest.fixture(scope='function')\ndef app(client) -> Application:\n    yield client\n    client.report.build()\n\n```\ntests with pytest fixture\n```python\ndef test_main(app):\n    response = app.get('/api/main', status=200)\n    response.json.should.be.is_instance(list)\n\n\ndef test_main_item(app):\n    response = app.get('/api/main/666', status=200)\n    response.json.should.be.equal({'id': 666, 'name': 'test'})\n\n```\n\n### TestCase\n\nwith TestSuite\n```python\nfrom wrapapi import TestSuite\n\n\nclass TestExample(TestSuite):\n\n    def test_main(self):\n        response = self.app.get('/api/main', status=200)\n        response.json.should.be.is_instance(list)\n\n    def test_main_item(self):\n        response = self.app.get('/api/main/666', status=200)\n        response.json.should.be.equal({'id': 666, 'name': 'test'})\n\n```\n\n### AssertionErrors\nIf we have any errors, raise exception with full request data:\n```bash\nE           AssertionError: \nE           ===========================================================\nE           GET: http://localhost:5555/api/main/666\nE           -----------------------------------------------------------\nE               Status: 200\nE               Body: None\nE               Headers: {'Date': 'Wed, 27 Mar 2019 12:17:48 GMT', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '51'....}\nE           ===========================================================\nE           Not equal: {'id': 666, 'name': 'test'} == {'id': 1, 'name': 'test'}\nE                -> expected: {'id': 666, 'name': 'test'}\nE                -> current: {'id': 1, 'name': 'test'}\n\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "API,API testing,requests testing,requests wrapper", "license": "", "maintainer": "", "maintainer_email": "", "name": "wrapAPI", "package_url": "https://pypi.org/project/wrapAPI/", "platform": "", "project_url": "https://pypi.org/project/wrapAPI/", "project_urls": null, "release_url": "https://pypi.org/project/wrapAPI/0.0.1/", "requires_dist": ["requests", "pytest ; extra == 'test'"], "requires_python": "", "summary": "Requests wrapper for API testing", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>wrapAPI</h1>\n<p>Requests wrapper for API testing</p>\n<h2>Usage</h2>\n<h3>conftest</h3>\n<p>conftest.py</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pytest</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">wrapapi</span> <span class=\"kn\">import</span> <span class=\"n\">Application</span><span class=\"p\">,</span> <span class=\"n\">Settings</span>\n\n\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">fixture</span><span class=\"p\">(</span><span class=\"n\">scope</span><span class=\"o\">=</span><span class=\"s1\">'session'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">settings</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Settings</span><span class=\"p\">:</span>\n    <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">Settings</span><span class=\"p\">()</span>\n    <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">base_url</span> <span class=\"o\">=</span> <span class=\"s1\">'http://localhost:5555'</span>\n    <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">[</span><span class=\"s1\">'Autorization'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'Basic secret'</span>\n    <span class=\"k\">return</span> <span class=\"n\">config</span>\n\n\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">fixture</span><span class=\"p\">(</span><span class=\"n\">scope</span><span class=\"o\">=</span><span class=\"s1\">'session'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">client</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Application</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Application</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"p\">)</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span>\n    <span class=\"k\">yield</span> <span class=\"n\">client</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">fixture</span><span class=\"p\">(</span><span class=\"n\">scope</span><span class=\"o\">=</span><span class=\"s1\">'function'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">app</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Application</span><span class=\"p\">:</span>\n    <span class=\"k\">yield</span> <span class=\"n\">client</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">report</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n</pre>\n<p>tests with pytest fixture</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">test_main</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">):</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/api/main'</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n    <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">should</span><span class=\"o\">.</span><span class=\"n\">be</span><span class=\"o\">.</span><span class=\"n\">is_instance</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">test_main_item</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">):</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/api/main/666'</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n    <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">should</span><span class=\"o\">.</span><span class=\"n\">be</span><span class=\"o\">.</span><span class=\"n\">equal</span><span class=\"p\">({</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">666</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'test'</span><span class=\"p\">})</span>\n</pre>\n<h3>TestCase</h3>\n<p>with TestSuite</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">wrapapi</span> <span class=\"kn\">import</span> <span class=\"n\">TestSuite</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">TestExample</span><span class=\"p\">(</span><span class=\"n\">TestSuite</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">test_main</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/api/main'</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n        <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">should</span><span class=\"o\">.</span><span class=\"n\">be</span><span class=\"o\">.</span><span class=\"n\">is_instance</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">test_main_item</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/api/main/666'</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n        <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">should</span><span class=\"o\">.</span><span class=\"n\">be</span><span class=\"o\">.</span><span class=\"n\">equal</span><span class=\"p\">({</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">666</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'test'</span><span class=\"p\">})</span>\n</pre>\n<h3>AssertionErrors</h3>\n<p>If we have any errors, raise exception with full request data:</p>\n<pre>E           AssertionError: \n<span class=\"nv\">E</span>           <span class=\"o\">===========================================================</span>\nE           GET: http://localhost:5555/api/main/666\nE           -----------------------------------------------------------\nE               Status: <span class=\"m\">200</span>\nE               Body: None\nE               Headers: <span class=\"o\">{</span><span class=\"s1\">'Date'</span>: <span class=\"s1\">'Wed, 27 Mar 2019 12:17:48 GMT'</span>, <span class=\"s1\">'Connection'</span>: <span class=\"s1\">'keep-alive'</span>, <span class=\"s1\">'Content-Type'</span>: <span class=\"s1\">'application/json'</span>, <span class=\"s1\">'Content-Length'</span>: <span class=\"s1\">'51'</span>....<span class=\"o\">}</span>\n<span class=\"nv\">E</span>           <span class=\"o\">===========================================================</span>\nE           Not equal: <span class=\"o\">{</span><span class=\"s1\">'id'</span>: <span class=\"m\">666</span>, <span class=\"s1\">'name'</span>: <span class=\"s1\">'test'</span><span class=\"o\">}</span> <span class=\"o\">==</span> <span class=\"o\">{</span><span class=\"s1\">'id'</span>: <span class=\"m\">1</span>, <span class=\"s1\">'name'</span>: <span class=\"s1\">'test'</span><span class=\"o\">}</span>\nE                -&gt; expected: <span class=\"o\">{</span><span class=\"s1\">'id'</span>: <span class=\"m\">666</span>, <span class=\"s1\">'name'</span>: <span class=\"s1\">'test'</span><span class=\"o\">}</span>\nE                -&gt; current: <span class=\"o\">{</span><span class=\"s1\">'id'</span>: <span class=\"m\">1</span>, <span class=\"s1\">'name'</span>: <span class=\"s1\">'test'</span><span class=\"o\">}</span>\n</pre>\n\n          </div>"}, "last_serial": 4992764, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7bcf8cf9b6fdc90b0e67f1a55e66a3d8", "sha256": "30566d70b37a29e089636016e304dc4f6669704d616c21feaba3eb474fcbbbd7"}, "downloads": -1, "filename": "wrapAPI-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7bcf8cf9b6fdc90b0e67f1a55e66a3d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9148, "upload_time": "2019-03-27T13:21:10", "upload_time_iso_8601": "2019-03-27T13:21:10.967222Z", "url": "https://files.pythonhosted.org/packages/ca/84/bf5ef92950b84cfc344b0c50e5cc56a11e1e8a3deb0b3707187ca9527b6e/wrapAPI-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97afbb6005906fca6cf7f69e2c1846a6", "sha256": "fac82fae31a38df6d21d4b403188918a107d9a6c395e71c9ee165e620e04a369"}, "downloads": -1, "filename": "wrapAPI-0.0.1.tar.gz", "has_sig": false, "md5_digest": "97afbb6005906fca6cf7f69e2c1846a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6705, "upload_time": "2019-03-27T13:21:13", "upload_time_iso_8601": "2019-03-27T13:21:13.193737Z", "url": "https://files.pythonhosted.org/packages/a5/05/19a251c4fbfee36323cd958ab17849eb6545bd91941ace946030589c2611/wrapAPI-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7bcf8cf9b6fdc90b0e67f1a55e66a3d8", "sha256": "30566d70b37a29e089636016e304dc4f6669704d616c21feaba3eb474fcbbbd7"}, "downloads": -1, "filename": "wrapAPI-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7bcf8cf9b6fdc90b0e67f1a55e66a3d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9148, "upload_time": "2019-03-27T13:21:10", "upload_time_iso_8601": "2019-03-27T13:21:10.967222Z", "url": "https://files.pythonhosted.org/packages/ca/84/bf5ef92950b84cfc344b0c50e5cc56a11e1e8a3deb0b3707187ca9527b6e/wrapAPI-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97afbb6005906fca6cf7f69e2c1846a6", "sha256": "fac82fae31a38df6d21d4b403188918a107d9a6c395e71c9ee165e620e04a369"}, "downloads": -1, "filename": "wrapAPI-0.0.1.tar.gz", "has_sig": false, "md5_digest": "97afbb6005906fca6cf7f69e2c1846a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6705, "upload_time": "2019-03-27T13:21:13", "upload_time_iso_8601": "2019-03-27T13:21:13.193737Z", "url": "https://files.pythonhosted.org/packages/a5/05/19a251c4fbfee36323cd958ab17849eb6545bd91941ace946030589c2611/wrapAPI-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:27:22 2020"}