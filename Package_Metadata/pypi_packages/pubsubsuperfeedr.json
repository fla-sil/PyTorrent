{"info": {"author": "Urban Airship", "author_email": "web-team@urbanairship.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development"], "description": "pubsubsuperfeedr\n================\n\nA simple library designed to make it easy to add and remove feeds from\nSuperfeedr's PubSubHubbub API.  Includes support for hub.secret.\n\nCredits\n-------\n\nDeveloped and used at `Urban Airship <http://urbanairship.com/>`_ and\nreleased under the MIT License.\n\n`Harper Reed's gae-superfeedr-shell\n<http://github.com/harperreed/gae-superfeedr-shell/>`_ provided inspiration\nfor part of this code. Thanks Harper!\n\nExample Usage\n-------------\n\nSetting up pubsubsuperfeedr:\n\n    >>> import pubsubsuperfeedr\n    >>> sf = pubsubsuperfeedr.Superfeedr(settings.SUPERFEEDR_USERNAME, settings.SUPERFEEDR_PASSWORD)\n\nValidating a feed to make sure that it has at least one readable entry:\n\n    >>> sf.verify_feed_url(\"http://blog.urbanairship.com/feed/\")\n    True\n\nNote that this is just a really simple wrapper around feedparser and sometimes\nfeedparser can read things that Superfeedr can't.\n\nAdding a feed:\n\n    >>> sf.add_feed(\"http://blog.urbanairship.com/feed/\", \"http://example.com/your_callback_url\", \"some_verify_token\", \"some_secret\")\n\nadd_feed expects the feed you're wanting to watch, then the callback URL, and\noptionally a verify token and feed secret.\n\nRemoving a feed:\n\n    >>> sf.remove_feed(\"http://blog.urbanairship.com/feed/\", \"http://example.com/your_callback_url\", \"some_secret\")\n\nRemoving a feed is basically the same as adding a feed.\n\nVerifying a secret (in Django):\n\n    >>> sf.verify_secret(\"some_secret\", request.raw_post_data, request.META.get(\"HTTP_X_HUB_SIGNATURE\", \"\"))\n    True\n\nTesting\n-------\n\nTo run the tests, first make sure that `nose\n<http://code.google.com/p/python-nose/>`_ and\n`mox <http://code.google.com/p/pymox/>`_ are installed. Then:\n\n    $ nosetests\n\nAnd you're off an running.\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/urbanairship/pubsubsuperfeedr/", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "pubsubsuperfeedr", "package_url": "https://pypi.org/project/pubsubsuperfeedr/", "platform": "", "project_url": "https://pypi.org/project/pubsubsuperfeedr/", "project_urls": {"Homepage": "http://github.com/urbanairship/pubsubsuperfeedr/"}, "release_url": "https://pypi.org/project/pubsubsuperfeedr/0.4.0/", "requires_dist": ["feedparser", "python-dateutil", "six"], "requires_python": "", "summary": "Library for working with Superfeedr's PubSubHubbub API", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A simple library designed to make it easy to add and remove feeds from\nSuperfeedr\u2019s PubSubHubbub API.  Includes support for hub.secret.</p>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Developed and used at <a href=\"http://urbanairship.com/\" rel=\"nofollow\">Urban Airship</a> and\nreleased under the MIT License.</p>\n<p><a href=\"http://github.com/harperreed/gae-superfeedr-shell/\" rel=\"nofollow\">Harper Reed\u2019s gae-superfeedr-shell</a> provided inspiration\nfor part of this code. Thanks Harper!</p>\n</div>\n<div id=\"example-usage\">\n<h2>Example Usage</h2>\n<p>Setting up pubsubsuperfeedr:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import pubsubsuperfeedr\n&gt;&gt;&gt; sf = pubsubsuperfeedr.Superfeedr(settings.SUPERFEEDR_USERNAME, settings.SUPERFEEDR_PASSWORD)\n</pre>\n</blockquote>\n<p>Validating a feed to make sure that it has at least one readable entry:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; sf.verify_feed_url(\"http://blog.urbanairship.com/feed/\")\nTrue\n</pre>\n</blockquote>\n<p>Note that this is just a really simple wrapper around feedparser and sometimes\nfeedparser can read things that Superfeedr can\u2019t.</p>\n<p>Adding a feed:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; sf.add_feed(\"http://blog.urbanairship.com/feed/\", \"http://example.com/your_callback_url\", \"some_verify_token\", \"some_secret\")\n</pre>\n</blockquote>\n<p>add_feed expects the feed you\u2019re wanting to watch, then the callback URL, and\noptionally a verify token and feed secret.</p>\n<p>Removing a feed:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; sf.remove_feed(\"http://blog.urbanairship.com/feed/\", \"http://example.com/your_callback_url\", \"some_secret\")\n</pre>\n</blockquote>\n<p>Removing a feed is basically the same as adding a feed.</p>\n<p>Verifying a secret (in Django):</p>\n<blockquote>\n<pre>&gt;&gt;&gt; sf.verify_secret(\"some_secret\", request.raw_post_data, request.META.get(\"HTTP_X_HUB_SIGNATURE\", \"\"))\nTrue\n</pre>\n</blockquote>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>To run the tests, first make sure that <a href=\"http://code.google.com/p/python-nose/\" rel=\"nofollow\">nose</a> and\n<a href=\"http://code.google.com/p/pymox/\" rel=\"nofollow\">mox</a> are installed. Then:</p>\n<blockquote>\n$ nosetests</blockquote>\n<p>And you\u2019re off an running.</p>\n</div>\n\n          </div>"}, "last_serial": 3965492, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "03803306023597dccc4d1b0505c534af", "sha256": "bfed1b5aa04a221966426513a8c97ec93373ac555b6001aa7b8186b674862098"}, "downloads": -1, "filename": "pubsubsuperfeedr-0.1.tar.gz", "has_sig": false, "md5_digest": "03803306023597dccc4d1b0505c534af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1557, "upload_time": "2010-01-29T00:37:13", "upload_time_iso_8601": "2010-01-29T00:37:13.736603Z", "url": "https://files.pythonhosted.org/packages/a2/c4/d391027b459d39dcb5b1ccbd76a875466f87fec26086b2b6d84b06e55fe7/pubsubsuperfeedr-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "fb67a973dc2a4293ed520987c4561dba", "sha256": "ea42bc489a3c4010542ad5e388d6fec256fcbd5e2d723fae91cb053f5d921980"}, "downloads": -1, "filename": "pubsubsuperfeedr-0.2.tar.gz", "has_sig": false, "md5_digest": "fb67a973dc2a4293ed520987c4561dba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1671, "upload_time": "2010-02-22T20:36:28", "upload_time_iso_8601": "2010-02-22T20:36:28.512752Z", "url": "https://files.pythonhosted.org/packages/b2/22/000e596730c05cbf961210d512cd050d9444f3c5ea2b60ffc8d1da7b4d48/pubsubsuperfeedr-0.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "4d2a761fb2755e467ee1df0cb00a4c03", "sha256": "9faa22426d2612d8c448629e164ca9a8ec24101405ca0b01bf00a31cf7f0938a"}, "downloads": -1, "filename": "pubsubsuperfeedr-0.3.0.tar.gz", "has_sig": false, "md5_digest": "4d2a761fb2755e467ee1df0cb00a4c03", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2293, "upload_time": "2010-10-14T02:32:27", "upload_time_iso_8601": "2010-10-14T02:32:27.399958Z", "url": "https://files.pythonhosted.org/packages/4d/ca/6e73ffbf9f31a9475fd52be08470be813e2fc4a6d25b0712a71e649a279d/pubsubsuperfeedr-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "23e7be70dcc1ffe420e396297f720e46", "sha256": "e1cacd3c8491a63ced401c03e3bc23b1351847427c282abbb90d864109f2c9ca"}, "downloads": -1, "filename": "pubsubsuperfeedr-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "23e7be70dcc1ffe420e396297f720e46", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3689, "upload_time": "2018-06-15T16:56:11", "upload_time_iso_8601": "2018-06-15T16:56:11.082703Z", "url": "https://files.pythonhosted.org/packages/fa/9b/c36efdb195912d5dee7a5a2357b5979d3b9642835d994250b773ceb9c48e/pubsubsuperfeedr-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50183912702ae6b136c50bed656bc67d", "sha256": "35a6544bb8ac5d63fc05ba32e90949444ac86e58dd03186b193d45414cbfabdd"}, "downloads": -1, "filename": "pubsubsuperfeedr-0.4.0.tar.gz", "has_sig": false, "md5_digest": "50183912702ae6b136c50bed656bc67d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3453, "upload_time": "2018-06-15T16:56:11", "upload_time_iso_8601": "2018-06-15T16:56:11.964995Z", "url": "https://files.pythonhosted.org/packages/80/e5/01448eed01e2353ce532f8a351101d0fe02874777765091f9e7b08332d3b/pubsubsuperfeedr-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "23e7be70dcc1ffe420e396297f720e46", "sha256": "e1cacd3c8491a63ced401c03e3bc23b1351847427c282abbb90d864109f2c9ca"}, "downloads": -1, "filename": "pubsubsuperfeedr-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "23e7be70dcc1ffe420e396297f720e46", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3689, "upload_time": "2018-06-15T16:56:11", "upload_time_iso_8601": "2018-06-15T16:56:11.082703Z", "url": "https://files.pythonhosted.org/packages/fa/9b/c36efdb195912d5dee7a5a2357b5979d3b9642835d994250b773ceb9c48e/pubsubsuperfeedr-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50183912702ae6b136c50bed656bc67d", "sha256": "35a6544bb8ac5d63fc05ba32e90949444ac86e58dd03186b193d45414cbfabdd"}, "downloads": -1, "filename": "pubsubsuperfeedr-0.4.0.tar.gz", "has_sig": false, "md5_digest": "50183912702ae6b136c50bed656bc67d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3453, "upload_time": "2018-06-15T16:56:11", "upload_time_iso_8601": "2018-06-15T16:56:11.964995Z", "url": "https://files.pythonhosted.org/packages/80/e5/01448eed01e2353ce532f8a351101d0fe02874777765091f9e7b08332d3b/pubsubsuperfeedr-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:45 2020"}