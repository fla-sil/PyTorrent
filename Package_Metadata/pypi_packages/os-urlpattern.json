{"info": {"author": "Ozzy", "author_email": "cfhamlet@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "=============\nos-urlpattern\n=============\n\n.. image:: https://travis-ci.org/cfhamlet/os-urlpattern.svg?branch=master\n   :target: https://travis-ci.org/cfhamlet/os-urlpattern\n\n.. image:: https://codecov.io/gh/cfhamlet/os-urlpattern/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/cfhamlet/os-urlpattern\n\n.. image:: https://img.shields.io/pypi/pyversions/os-urlpattern.svg\n   :alt: PyPI - Python Version\n   :target: https://pypi.python.org/pypi/os-urlpattern\n  \n.. image:: https://img.shields.io/pypi/v/os-urlpattern.svg\n   :alt: PyPI\n   :target: https://pypi.python.org/pypi/os-urlpattern\n\n\nThis package is used for unsupervised URLs clustering. Furthermore, it generate URL patterns(RegEx) \nfrom clusters for matching purpose. It is a pure python package tested under python2.7 python3.6, \n`pypy <http://pypy.org/>`_ can also be used for performance(4x-8x). Command line tools are provided \nfor standalone clustering and matching, APIs are also convenient. Several extra packages can be \ninstalled for additional features. Under CPython 1cpu, 100 thousand URLs clustering cost almost 1min \nand 200M memory. Built-in matching strategy is efficient enough in most use cases(4k/s, depend on \npatterns complexity).\n\n.. code:: console\n\n  $ pip install -U os-urlpattern\n  $ wget -qO- 'https://git.io/f4QlP' | pattern-make\n  /[0-9]{2}[\\.]html\n        http://example.com/01.html\n        http://example.com/02.html\n        http://example.com/03.html\n  /[0-9]{3}/test[0-9]{2}[\\.]html\n        http://example.com/123/test01.html\n        http://example.com/456/test02.html\n        http://example.com/789/test03.html\n\n\n==============\nAknowledgement\n==============\n\nSimilar URLs\n=============\n  \n* URLs with the same **URL structure**.\n\n* Components of the parsed URLs at the same position are in the same **character space**.\n\n* Different types of charactors may be in the same order in most cases.\n\n\nURL structure\n==============\n\nTypically, URL can be parsed into 6 components:\n\n``<scheme>://<netloc>/<path>;<params>?<query>#<fragment>``\n\nBecause different sites may have similar URLs structure and <params> is rare, so <schema> \n<netloc> and <params> are ignored, <path> <query> <fragment> are used to define URL structure.\n\nIf the URLs have the same path levels, same query keys(also keys order) and with the same \nfragment existence, their URL structure should be the same. \n\n::\n    \n  http://example.com/p1/p2?k1=v1&k2=v2#pos\n\n  URL structure:\n  path levels: 2\n  query keys: k1, k2\n  have fragment: True\n\nCharacter space\n===============\n\nConsider `RFC 3986 (Section 2: Characters) <https://tools.ietf.org/html/rfc3986#section-2>`_,\nURL with the following characters would be legal:\n\n``ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~:/?#[]@!$&'()*+,;=%<>\\\"{}^|``\n\nThere are three major character space: lower-case letters(a-z), upper-case letters(A-Z), \nnumber letters(0-9). Other symbols are in their own character space.\n  \n::\n\n  HeLlOwoRd666!\n\n  character space: a-z A-Z 0-9 !\n      \nOrder consideration\n=====================\n\nSplit a string by character, consecutive character space can be joined. In most cases, order is a \ndistinguished feature.\n\n::\n\n  HELLOword666!\n\n  split into: HELLO word 666 !\n\n  character space order: A-Z a-z 0-9 !\n\n\nMix\n=====================\nComplex consecutive major character space can be mixed, order is less important.\n\n::\n\n  HellWorld666!\n\n  split into: H ell W orld 666 !\n\n  major join: HellWorld666 !\n\n  character space order: A-Za-z0-9 !\n\nBecause of URL quote, '%' can be mixed with major character space.\n\n::\n\n  %E4%BD%A0%E5%A5%BD!\n\n  split into: % E 4 % BD % A 0 % E 5 % A 5 % BD !\n\n  major join: %E4%BD%A0%E5%A5%BD !\n\n  character space order: A-Z0-9% !\n\n\nURL pattern\n============\n\nURL pattern is used to express each cluster. It is normal regex string. Each URL in \nthe same cluster can be matched with the pattern.\n\n::\n\n  pattern examples:\n\n  /news/[0-9]{8}/[a-z]+[\\\\.]html\n  /newsShow[\\\\.]asp[\\\\?]dataID=[0-9]+\n  /thread[\\\\-][0-9]+[\\\\-][0-9][\\\\-]1[\\\\.]html\n\nThe built-in matching strategy is strict, it can't tolerate incomplet matching.\n  \n::\n\n  letter: helloword\n\n  pattern01: [a-z0-9]+  # not match, because no number in the letter\n  pattern02: [a-z]+ # match\n\n\n========\nInstall\n========\n\nInstall with pip\n\n``$ pip install os-urlpattern``\n\nInstall extra packages\n\n.. list-table::\n  :header-rows: 1\n    \n  * - subpackage \n    - install command\n    - enables\n  * - memory\n    - ``pip install os-urlpattern[memroy]``\n    - Show memory useage\n  * - ete-tree\n    - ``pip install os-urlpattern[ete-tree]``\n    - Enable `ete <https://github.com/etetoolkit/ete>`_ pattern tree formatter\n\n========\nUsage\n========\n\nCommand line\n=============\n\n* **pattern-make**\n    \n  Load urls, cluster and dump patterns.\n\n  .. code:: console\n    \n    $ pattern-make -h\n    usage: pattern-make [-h] [-v] [-i INPUTS [INPUTS ...]]\n                        [-l {NOTSET,DEBUG,INFO,WARN,ERROR,FATAL}] [-c CONFIG]\n                        [-f {PATTERN,CLUSTER,JSON,ETE,INLINE,NULL}]\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -v, --version         show program's version number and exit\n      -i INPUTS [INPUTS ...], --inputs INPUTS [INPUTS ...]\n                            input files to be processed (default: stdin)\n      -l {NOTSET,DEBUG,INFO,WARN,ERROR,FATAL}, --loglevel {NOTSET,DEBUG,INFO,WARN,ERROR,FATAL}\n                            log level (default: NOTSET)\n      -c CONFIG, --config CONFIG\n                            config file\n      -f {PATTERN,CLUSTER,JSON,ETE,INLINE,NULL}, --formatter {PATTERN,CLUSTER,JSON,ETE,INLINE,NULL}\n                            output formatter (default: CLUSTER)\n  \n  Dump clustered URLs with patterns:\n\n  .. code:: console\n  \n    $ cat urls.txt | pattern-make -L debug > clustered.txt\n\n  Only generate URL patterns:\n\n  .. code:: console\n  \n    $ cat urls.txt | pattern-make -L debug -F pattern > patterns.txt\n  \n  Generate pattern tree from URLs(`ete <https://github.com/etetoolkit/ete>`_ installed):\n\n  .. code:: console\n    \n    $ cat urls.txt | pattern-make -L debug -F ete\n\n* **pattern-match**\n\n  Load patterns, dump URLs matched results.\n\n  .. code:: console\n    \n    $ pattern-match -h\n    usage: pattern-match [-h] [-v] [-i INPUTS [INPUTS ...]]\n                         [-l {NOTSET,DEBUG,INFO,WARN,ERROR,FATAL}] -p\n                         PATTERN_FILES [PATTERN_FILES ...] [-a]\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -v, --version         show program's version number and exit\n      -i INPUTS [INPUTS ...], --inputs INPUTS [INPUTS ...]\n                            input files to be processed (default: stdin)\n      -l {NOTSET,DEBUG,INFO,WARN,ERROR,FATAL}, --loglevel {NOTSET,DEBUG,INFO,WARN,ERROR,FATAL}\n                            log level (default: NOTSET)\n      -p PATTERN_FILES [PATTERN_FILES ...], --pattern-files PATTERN_FILES [PATTERN_FILES ...]\n                            pattern files to be loaded\n      -a, --all-matched     all matched patterns\n\n\n  Match URLs:\n\n  .. code:: console\n  \n    $ cat urls.txt | pattern-match -L debug -p patterns.txt\n\nAPIs\n=====\n\n* Cluster and generate URL patterns:\n\n  .. code:: python \n\n    from os_urlpattern.formatter import pformat\n    from os_urlpattern.pattern_maker import PatternMaker\n\n    pattern_maker = PatternMaker()\n\n    # load URLs(unicode)\n    for url in urls:\n        pattern_maker.load(url)\n\n    # cluster and print pattern\n    for url_meta, clustered in pattern_maker.make():\n        for pattern in pformat('pattern', url_meta, clustered):\n            # do whatever you want\n            pass\n\n\n* Match URLs:\n\n  .. code:: python \n  \n    from os_urlpattern.pattern_matcher import PatternMatcher\n\n    pattern_matcher = PatternMatcher()\n\n    # load url_pattern(unicode)\n    for url_pattern in url_patterns:\n        # meta will bind to matched result\n        pattern_matcher.load(url_pattern, meta=url_pattern)\n\n    # match URL(unicode)\n    for url in urls:\n        matched_results = patterm_matcher.match(url)\n        # the best matched result:\n        # sorted(matched_results, reverse=True)[0]\n        patterns = [n.meta for n in matched_results]\n\n\n* Low-level APIs:\n\n  It is necessary to use low-level APIs for customizing processing procdure,\n  especially for parallel computing or working on an distributed cluster(hadoop).\n\n  **Key points: same fuzzy-digest same maker and same matcher.**\n\n  Use ``os_urlpattern.parser.fuzzy_digest`` to get fuzzy digest from URL,\n  URL pattern or URLMeta and parsed pieces/patterns.\n\n  A brief All-In-One example:\n\n  .. code:: python \n  \n    from __future__ import print_function, unicode_literals\n    from os_urlpattern.formatter import pformat\n    from os_urlpattern.parser import fuzzy_digest, parse\n    from os_urlpattern.pattern_maker import Maker\n    from os_urlpattern.pattern_matcher import Matcher\n\n    urls = ['http://t.com/%02d.html' % i for i in xrange(0,10)]\n    makers = {}\n    matchers = {}\n\n    # Init makers from URLs(unicode).\n    for url in urls:\n        url_meta, parsed_pieces = parse(url)\n        \n        # same digest same maker\n        digest = fuzzy_digest(url_meta, parsed_pieces)\n        if digest not in makers:\n            makers[digest] = Maker(url_meta)\n        makers[digest].load(parsed_pieces)\n\n    # Iterate makers, do clustering, generate URL pattern and init matchers.\n    for maker in makers.values():\n        for clustered in maker.make():\n            for pattern in pformat('pattern', maker.url_meta, clustered):\n                # init matchers\n                url_meta, parsed_patterns = parse(pattern)\n                digest = fuzzy_digest(url_meta, parsed_patterns)\n                if digest not in matchers:\n                    matchers[digest] = Matcher(url_meta)\n                matchers[digest].load(parsed_patterns, pattern)\n    \n    # Match URLs(unicode).\n    for url in urls:\n        url_meta, parsed_pieces = parse(url)\n\n        # same digest same matcher\n        digest = fuzzy_digest(url_meta, parsed_pieces)\n        if digest in matchers:\n            matched = [n.meta for n in matchers[digest].match(parsed_pieces)]\n            print(url, *matched, sep=\"\\t\")        \n        else: # no matched at all\n            pass\n\n\n\n============\nUnit Tests\n============\n\n``$ tox``\n\n============\nLicense\n============\n\nMIT licensed.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cfhamlet/os-urlpattern", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "os-urlpattern", "package_url": "https://pypi.org/project/os-urlpattern/", "platform": "", "project_url": "https://pypi.org/project/os-urlpattern/", "project_urls": {"Homepage": "https://github.com/cfhamlet/os-urlpattern"}, "release_url": "https://pypi.org/project/os-urlpattern/0.1.11/", "requires_dist": null, "requires_python": "", "summary": "Cluster url pattern automatically.", "version": "0.1.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"os-urlpattern\">\n<h2>os-urlpattern</h2>\n<a href=\"https://travis-ci.org/cfhamlet/os-urlpattern\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/cfhamlet/os-urlpattern.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7328470a77ad4ada2ca4cac54c4788b936811233/68747470733a2f2f7472617669732d63692e6f72672f636668616d6c65742f6f732d75726c7061747465726e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/cfhamlet/os-urlpattern\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/cfhamlet/os-urlpattern/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bbb4466c64387455445fd00527f214fa92e666f9/68747470733a2f2f636f6465636f762e696f2f67682f636668616d6c65742f6f732d75726c7061747465726e2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/os-urlpattern\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4b6cfe429a60ea388f5fd404392f9b1b80f4393b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6f732d75726c7061747465726e2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/os-urlpattern\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ba24fb8410b1b0f19b420d4db222cd4b3d78c43c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6f732d75726c7061747465726e2e737667\"></a>\n<p>This package is used for unsupervised URLs clustering. Furthermore, it generate URL patterns(RegEx)\nfrom clusters for matching purpose. It is a pure python package tested under python2.7 python3.6,\n<a href=\"http://pypy.org/\" rel=\"nofollow\">pypy</a> can also be used for performance(4x-8x). Command line tools are provided\nfor standalone clustering and matching, APIs are also convenient. Several extra packages can be\ninstalled for additional features. Under CPython 1cpu, 100 thousand URLs clustering cost almost 1min\nand 200M memory. Built-in matching strategy is efficient enough in most use cases(4k/s, depend on\npatterns complexity).</p>\n<pre><span class=\"gp\">$</span> pip install -U os-urlpattern\n<span class=\"gp\">$</span> wget -qO- <span class=\"s1\">'https://git.io/f4QlP'</span> <span class=\"p\">|</span> pattern-make\n<span class=\"go\">/[0-9]{2}[\\.]html\n      http://example.com/01.html\n      http://example.com/02.html\n      http://example.com/03.html\n/[0-9]{3}/test[0-9]{2}[\\.]html\n      http://example.com/123/test01.html\n      http://example.com/456/test02.html\n      http://example.com/789/test03.html</span>\n</pre>\n</div>\n<div id=\"aknowledgement\">\n<h2>Aknowledgement</h2>\n<div id=\"similar-urls\">\n<h3>Similar URLs</h3>\n<ul>\n<li>URLs with the same <strong>URL structure</strong>.</li>\n<li>Components of the parsed URLs at the same position are in the same <strong>character space</strong>.</li>\n<li>Different types of charactors may be in the same order in most cases.</li>\n</ul>\n</div>\n<div id=\"url-structure\">\n<h3>URL structure</h3>\n<p>Typically, URL can be parsed into 6 components:</p>\n<p><tt><span class=\"pre\">&lt;scheme&gt;://&lt;netloc&gt;/&lt;path&gt;;&lt;params&gt;?&lt;query&gt;#&lt;fragment&gt;</span></tt></p>\n<p>Because different sites may have similar URLs structure and &lt;params&gt; is rare, so &lt;schema&gt;\n&lt;netloc&gt; and &lt;params&gt; are ignored, &lt;path&gt; &lt;query&gt; &lt;fragment&gt; are used to define URL structure.</p>\n<p>If the URLs have the same path levels, same query keys(also keys order) and with the same\nfragment existence, their URL structure should be the same.</p>\n<pre>http://example.com/p1/p2?k1=v1&amp;k2=v2#pos\n\nURL structure:\npath levels: 2\nquery keys: k1, k2\nhave fragment: True\n</pre>\n</div>\n<div id=\"character-space\">\n<h3>Character space</h3>\n<p>Consider <a href=\"https://tools.ietf.org/html/rfc3986#section-2\" rel=\"nofollow\">RFC 3986 (Section 2: Characters)</a>,\nURL with the following characters would be legal:</p>\n<p><tt><span class=\"pre\">ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~:/?#[]@!$&amp;'()*+,;=%&lt;&gt;\\\"{}^|</span></tt></p>\n<p>There are three major character space: lower-case letters(a-z), upper-case letters(A-Z),\nnumber letters(0-9). Other symbols are in their own character space.</p>\n<pre>HeLlOwoRd666!\n\ncharacter space: a-z A-Z 0-9 !\n</pre>\n</div>\n<div id=\"order-consideration\">\n<h3>Order consideration</h3>\n<p>Split a string by character, consecutive character space can be joined. In most cases, order is a\ndistinguished feature.</p>\n<pre>HELLOword666!\n\nsplit into: HELLO word 666 !\n\ncharacter space order: A-Z a-z 0-9 !\n</pre>\n</div>\n<div id=\"mix\">\n<h3>Mix</h3>\n<p>Complex consecutive major character space can be mixed, order is less important.</p>\n<pre>HellWorld666!\n\nsplit into: H ell W orld 666 !\n\nmajor join: HellWorld666 !\n\ncharacter space order: A-Za-z0-9 !\n</pre>\n<p>Because of URL quote, \u2018%\u2019 can be mixed with major character space.</p>\n<pre>%E4%BD%A0%E5%A5%BD!\n\nsplit into: % E 4 % BD % A 0 % E 5 % A 5 % BD !\n\nmajor join: %E4%BD%A0%E5%A5%BD !\n\ncharacter space order: A-Z0-9% !\n</pre>\n</div>\n<div id=\"url-pattern\">\n<h3>URL pattern</h3>\n<p>URL pattern is used to express each cluster. It is normal regex string. Each URL in\nthe same cluster can be matched with the pattern.</p>\n<pre>pattern examples:\n\n/news/[0-9]{8}/[a-z]+[\\\\.]html\n/newsShow[\\\\.]asp[\\\\?]dataID=[0-9]+\n/thread[\\\\-][0-9]+[\\\\-][0-9][\\\\-]1[\\\\.]html\n</pre>\n<p>The built-in matching strategy is strict, it can\u2019t tolerate incomplet matching.</p>\n<pre>letter: helloword\n\npattern01: [a-z0-9]+  # not match, because no number in the letter\npattern02: [a-z]+ # match\n</pre>\n</div>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Install with pip</p>\n<p><tt>$ pip install <span class=\"pre\">os-urlpattern</span></tt></p>\n<p>Install extra packages</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>subpackage</th>\n<th>install command</th>\n<th>enables</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>memory</td>\n<td><tt>pip install <span class=\"pre\">os-urlpattern[memroy]</span></tt></td>\n<td>Show memory useage</td>\n</tr>\n<tr><td>ete-tree</td>\n<td><tt>pip install <span class=\"pre\">os-urlpattern[ete-tree]</span></tt></td>\n<td>Enable <a href=\"https://github.com/etetoolkit/ete\" rel=\"nofollow\">ete</a> pattern tree formatter</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"command-line\">\n<h3>Command line</h3>\n<ul>\n<li><p><strong>pattern-make</strong></p>\n<p>Load urls, cluster and dump patterns.</p>\n<pre><span class=\"gp\">$</span> pattern-make -h\n<span class=\"go\">usage: pattern-make [-h] [-v] [-i INPUTS [INPUTS ...]]\n                    [-l {NOTSET,DEBUG,INFO,WARN,ERROR,FATAL}] [-c CONFIG]\n                    [-f {PATTERN,CLUSTER,JSON,ETE,INLINE,NULL}]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         show program's version number and exit\n  -i INPUTS [INPUTS ...], --inputs INPUTS [INPUTS ...]\n                        input files to be processed (default: stdin)\n  -l {NOTSET,DEBUG,INFO,WARN,ERROR,FATAL}, --loglevel {NOTSET,DEBUG,INFO,WARN,ERROR,FATAL}\n                        log level (default: NOTSET)\n  -c CONFIG, --config CONFIG\n                        config file\n  -f {PATTERN,CLUSTER,JSON,ETE,INLINE,NULL}, --formatter {PATTERN,CLUSTER,JSON,ETE,INLINE,NULL}\n                        output formatter (default: CLUSTER)</span>\n</pre>\n<p>Dump clustered URLs with patterns:</p>\n<pre><span class=\"gp\">$</span> cat urls.txt <span class=\"p\">|</span> pattern-make -L debug &gt; clustered.txt\n</pre>\n<p>Only generate URL patterns:</p>\n<pre><span class=\"gp\">$</span> cat urls.txt <span class=\"p\">|</span> pattern-make -L debug -F pattern &gt; patterns.txt\n</pre>\n<p>Generate pattern tree from URLs(<a href=\"https://github.com/etetoolkit/ete\" rel=\"nofollow\">ete</a> installed):</p>\n<pre><span class=\"gp\">$</span> cat urls.txt <span class=\"p\">|</span> pattern-make -L debug -F ete\n</pre>\n</li>\n<li><p><strong>pattern-match</strong></p>\n<p>Load patterns, dump URLs matched results.</p>\n<pre><span class=\"gp\">$</span> pattern-match -h\n<span class=\"go\">usage: pattern-match [-h] [-v] [-i INPUTS [INPUTS ...]]\n                     [-l {NOTSET,DEBUG,INFO,WARN,ERROR,FATAL}] -p\n                     PATTERN_FILES [PATTERN_FILES ...] [-a]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         show program's version number and exit\n  -i INPUTS [INPUTS ...], --inputs INPUTS [INPUTS ...]\n                        input files to be processed (default: stdin)\n  -l {NOTSET,DEBUG,INFO,WARN,ERROR,FATAL}, --loglevel {NOTSET,DEBUG,INFO,WARN,ERROR,FATAL}\n                        log level (default: NOTSET)\n  -p PATTERN_FILES [PATTERN_FILES ...], --pattern-files PATTERN_FILES [PATTERN_FILES ...]\n                        pattern files to be loaded\n  -a, --all-matched     all matched patterns</span>\n</pre>\n<p>Match URLs:</p>\n<pre><span class=\"gp\">$</span> cat urls.txt <span class=\"p\">|</span> pattern-match -L debug -p patterns.txt\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"apis\">\n<h3>APIs</h3>\n<ul>\n<li><p>Cluster and generate URL patterns:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">os_urlpattern.formatter</span> <span class=\"kn\">import</span> <span class=\"n\">pformat</span>\n<span class=\"kn\">from</span> <span class=\"nn\">os_urlpattern.pattern_maker</span> <span class=\"kn\">import</span> <span class=\"n\">PatternMaker</span>\n\n<span class=\"n\">pattern_maker</span> <span class=\"o\">=</span> <span class=\"n\">PatternMaker</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># load URLs(unicode)</span>\n<span class=\"k\">for</span> <span class=\"n\">url</span> <span class=\"ow\">in</span> <span class=\"n\">urls</span><span class=\"p\">:</span>\n    <span class=\"n\">pattern_maker</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># cluster and print pattern</span>\n<span class=\"k\">for</span> <span class=\"n\">url_meta</span><span class=\"p\">,</span> <span class=\"n\">clustered</span> <span class=\"ow\">in</span> <span class=\"n\">pattern_maker</span><span class=\"o\">.</span><span class=\"n\">make</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">pattern</span> <span class=\"ow\">in</span> <span class=\"n\">pformat</span><span class=\"p\">(</span><span class=\"s1\">'pattern'</span><span class=\"p\">,</span> <span class=\"n\">url_meta</span><span class=\"p\">,</span> <span class=\"n\">clustered</span><span class=\"p\">):</span>\n        <span class=\"c1\"># do whatever you want</span>\n        <span class=\"k\">pass</span>\n</pre>\n</li>\n<li><p>Match URLs:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">os_urlpattern.pattern_matcher</span> <span class=\"kn\">import</span> <span class=\"n\">PatternMatcher</span>\n\n<span class=\"n\">pattern_matcher</span> <span class=\"o\">=</span> <span class=\"n\">PatternMatcher</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># load url_pattern(unicode)</span>\n<span class=\"k\">for</span> <span class=\"n\">url_pattern</span> <span class=\"ow\">in</span> <span class=\"n\">url_patterns</span><span class=\"p\">:</span>\n    <span class=\"c1\"># meta will bind to matched result</span>\n    <span class=\"n\">pattern_matcher</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">url_pattern</span><span class=\"p\">,</span> <span class=\"n\">meta</span><span class=\"o\">=</span><span class=\"n\">url_pattern</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># match URL(unicode)</span>\n<span class=\"k\">for</span> <span class=\"n\">url</span> <span class=\"ow\">in</span> <span class=\"n\">urls</span><span class=\"p\">:</span>\n    <span class=\"n\">matched_results</span> <span class=\"o\">=</span> <span class=\"n\">patterm_matcher</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n    <span class=\"c1\"># the best matched result:</span>\n    <span class=\"c1\"># sorted(matched_results, reverse=True)[0]</span>\n    <span class=\"n\">patterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">meta</span> <span class=\"k\">for</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"n\">matched_results</span><span class=\"p\">]</span>\n</pre>\n</li>\n<li><p>Low-level APIs:</p>\n<p>It is necessary to use low-level APIs for customizing processing procdure,\nespecially for parallel computing or working on an distributed cluster(hadoop).</p>\n<p><strong>Key points: same fuzzy-digest same maker and same matcher.</strong></p>\n<p>Use <tt>os_urlpattern.parser.fuzzy_digest</tt> to get fuzzy digest from URL,\nURL pattern or URLMeta and parsed pieces/patterns.</p>\n<p>A brief All-In-One example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">print_function</span><span class=\"p\">,</span> <span class=\"n\">unicode_literals</span>\n<span class=\"kn\">from</span> <span class=\"nn\">os_urlpattern.formatter</span> <span class=\"kn\">import</span> <span class=\"n\">pformat</span>\n<span class=\"kn\">from</span> <span class=\"nn\">os_urlpattern.parser</span> <span class=\"kn\">import</span> <span class=\"n\">fuzzy_digest</span><span class=\"p\">,</span> <span class=\"n\">parse</span>\n<span class=\"kn\">from</span> <span class=\"nn\">os_urlpattern.pattern_maker</span> <span class=\"kn\">import</span> <span class=\"n\">Maker</span>\n<span class=\"kn\">from</span> <span class=\"nn\">os_urlpattern.pattern_matcher</span> <span class=\"kn\">import</span> <span class=\"n\">Matcher</span>\n\n<span class=\"n\">urls</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'http://t.com/</span><span class=\"si\">%02d</span><span class=\"s1\">.html'</span> <span class=\"o\">%</span> <span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">xrange</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">)]</span>\n<span class=\"n\">makers</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n<span class=\"n\">matchers</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n<span class=\"c1\"># Init makers from URLs(unicode).</span>\n<span class=\"k\">for</span> <span class=\"n\">url</span> <span class=\"ow\">in</span> <span class=\"n\">urls</span><span class=\"p\">:</span>\n    <span class=\"n\">url_meta</span><span class=\"p\">,</span> <span class=\"n\">parsed_pieces</span> <span class=\"o\">=</span> <span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># same digest same maker</span>\n    <span class=\"n\">digest</span> <span class=\"o\">=</span> <span class=\"n\">fuzzy_digest</span><span class=\"p\">(</span><span class=\"n\">url_meta</span><span class=\"p\">,</span> <span class=\"n\">parsed_pieces</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">digest</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">makers</span><span class=\"p\">:</span>\n        <span class=\"n\">makers</span><span class=\"p\">[</span><span class=\"n\">digest</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Maker</span><span class=\"p\">(</span><span class=\"n\">url_meta</span><span class=\"p\">)</span>\n    <span class=\"n\">makers</span><span class=\"p\">[</span><span class=\"n\">digest</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">parsed_pieces</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Iterate makers, do clustering, generate URL pattern and init matchers.</span>\n<span class=\"k\">for</span> <span class=\"n\">maker</span> <span class=\"ow\">in</span> <span class=\"n\">makers</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">clustered</span> <span class=\"ow\">in</span> <span class=\"n\">maker</span><span class=\"o\">.</span><span class=\"n\">make</span><span class=\"p\">():</span>\n        <span class=\"k\">for</span> <span class=\"n\">pattern</span> <span class=\"ow\">in</span> <span class=\"n\">pformat</span><span class=\"p\">(</span><span class=\"s1\">'pattern'</span><span class=\"p\">,</span> <span class=\"n\">maker</span><span class=\"o\">.</span><span class=\"n\">url_meta</span><span class=\"p\">,</span> <span class=\"n\">clustered</span><span class=\"p\">):</span>\n            <span class=\"c1\"># init matchers</span>\n            <span class=\"n\">url_meta</span><span class=\"p\">,</span> <span class=\"n\">parsed_patterns</span> <span class=\"o\">=</span> <span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"p\">)</span>\n            <span class=\"n\">digest</span> <span class=\"o\">=</span> <span class=\"n\">fuzzy_digest</span><span class=\"p\">(</span><span class=\"n\">url_meta</span><span class=\"p\">,</span> <span class=\"n\">parsed_patterns</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">digest</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">matchers</span><span class=\"p\">:</span>\n                <span class=\"n\">matchers</span><span class=\"p\">[</span><span class=\"n\">digest</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Matcher</span><span class=\"p\">(</span><span class=\"n\">url_meta</span><span class=\"p\">)</span>\n            <span class=\"n\">matchers</span><span class=\"p\">[</span><span class=\"n\">digest</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">parsed_patterns</span><span class=\"p\">,</span> <span class=\"n\">pattern</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Match URLs(unicode).</span>\n<span class=\"k\">for</span> <span class=\"n\">url</span> <span class=\"ow\">in</span> <span class=\"n\">urls</span><span class=\"p\">:</span>\n    <span class=\"n\">url_meta</span><span class=\"p\">,</span> <span class=\"n\">parsed_pieces</span> <span class=\"o\">=</span> <span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># same digest same matcher</span>\n    <span class=\"n\">digest</span> <span class=\"o\">=</span> <span class=\"n\">fuzzy_digest</span><span class=\"p\">(</span><span class=\"n\">url_meta</span><span class=\"p\">,</span> <span class=\"n\">parsed_pieces</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">digest</span> <span class=\"ow\">in</span> <span class=\"n\">matchers</span><span class=\"p\">:</span>\n        <span class=\"n\">matched</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">meta</span> <span class=\"k\">for</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"n\">matchers</span><span class=\"p\">[</span><span class=\"n\">digest</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">(</span><span class=\"n\">parsed_pieces</span><span class=\"p\">)]</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">matched</span><span class=\"p\">,</span> <span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span> <span class=\"c1\"># no matched at all</span>\n        <span class=\"k\">pass</span>\n</pre>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"unit-tests\">\n<h2>Unit Tests</h2>\n<p><tt>$ tox</tt></p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>MIT licensed.</p>\n</div>\n\n          </div>"}, "last_serial": 4684656, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6816379fd32ae76d2624d96eb8e0af19", "sha256": "552b4bce43eb6e2167e84d0b4475625c4b349b219d1322fa454668e3d43fa823"}, "downloads": -1, "filename": "os_urlpattern-0.1.0-py2.7.egg", "has_sig": false, "md5_digest": "6816379fd32ae76d2624d96eb8e0af19", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 72910, "upload_time": "2018-06-01T14:07:53", "upload_time_iso_8601": "2018-06-01T14:07:53.403344Z", "url": "https://files.pythonhosted.org/packages/3d/9a/ddda060cdcf8ff92b7f09ef83114906988db8ae4ec0728faff8dcc4697bb/os_urlpattern-0.1.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "17bcd0a0b0c01ed63d504a773c5837dc", "sha256": "287b74d3a99449eb8e7396c157f041d340ff31cb13b57ac74fd638e3e59c724b"}, "downloads": -1, "filename": "os-urlpattern-0.1.0.tar.gz", "has_sig": false, "md5_digest": "17bcd0a0b0c01ed63d504a773c5837dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19445, "upload_time": "2018-06-01T14:07:54", "upload_time_iso_8601": "2018-06-01T14:07:54.912424Z", "url": "https://files.pythonhosted.org/packages/8d/34/2d8bf9e05371bdc768c42c2c756ea05adf5fd35dada53eb3e0f34d5402c6/os-urlpattern-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "b7c3dcc5583062de0c1555a474404b60", "sha256": "0c9b4a59a21f1e370d5439527dcd65b8f919a4b86aa37db595ac56d245b0b4f0"}, "downloads": -1, "filename": "os-urlpattern-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b7c3dcc5583062de0c1555a474404b60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19698, "upload_time": "2018-06-06T07:16:10", "upload_time_iso_8601": "2018-06-06T07:16:10.313577Z", "url": "https://files.pythonhosted.org/packages/7a/7b/caaa955f6a4ccfe311d05220891cd0f4212b7f047578af8966a1bab26349/os-urlpattern-0.1.1.tar.gz", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "29a3bc204920aa48492aff3bf1c62e5e", "sha256": "ef32e2ec83a14e517a886baccbdc6030133cd2e7468d0afae943781b721895e9"}, "downloads": -1, "filename": "os-urlpattern-0.1.10.tar.gz", "has_sig": false, "md5_digest": "29a3bc204920aa48492aff3bf1c62e5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37031, "upload_time": "2018-07-04T13:01:39", "upload_time_iso_8601": "2018-07-04T13:01:39.306848Z", "url": "https://files.pythonhosted.org/packages/92/41/e9b80fe47b9e279f405d613b3eb6a2d15d92bd9d66549f875b21ab32455e/os-urlpattern-0.1.10.tar.gz", "yanked": false}], "0.1.10.1": [{"comment_text": "", "digests": {"md5": "02a592310240336b6caf97046e527921", "sha256": "1b764863af4753312f8135fa3699f3cc643e7ed78c7ae965bcca16162d0ef474"}, "downloads": -1, "filename": "os-urlpattern-0.1.10.1.tar.gz", "has_sig": false, "md5_digest": "02a592310240336b6caf97046e527921", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37162, "upload_time": "2018-07-06T03:49:20", "upload_time_iso_8601": "2018-07-06T03:49:20.844417Z", "url": "https://files.pythonhosted.org/packages/41/b7/adc6bcbb2a220da98205d86af9bbf76b05e23eccd1536fd075ab89e919e9/os-urlpattern-0.1.10.1.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "fda51d6e9871777216c125d4a61424fc", "sha256": "292f9c62b36cbcdbb663113bf561593dba7d5ce1b4eff90743abfdb496000289"}, "downloads": -1, "filename": "os-urlpattern-0.1.11.tar.gz", "has_sig": false, "md5_digest": "fda51d6e9871777216c125d4a61424fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36708, "upload_time": "2019-01-11T09:53:33", "upload_time_iso_8601": "2019-01-11T09:53:33.389255Z", "url": "https://files.pythonhosted.org/packages/74/ae/357c0f662ef83bc730ed66723d402a55ff6871a5b5be06e329d9de023c0d/os-urlpattern-0.1.11.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "32a1b1c72a59bf1b6d2e198793a491e7", "sha256": "4c8d6b0ac1a1e443c3aa038363a01d188d1f464c62008deb209c016eb72111de"}, "downloads": -1, "filename": "os-urlpattern-0.1.2.tar.gz", "has_sig": false, "md5_digest": "32a1b1c72a59bf1b6d2e198793a491e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22045, "upload_time": "2018-06-12T12:49:02", "upload_time_iso_8601": "2018-06-12T12:49:02.363281Z", "url": "https://files.pythonhosted.org/packages/47/69/47aba8504bb2b643916c20c334be0b54e2c0b18d1ebf72d91dd714b535f5/os-urlpattern-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "c841bbf9f7d6a2ac86987716c867035b", "sha256": "2b55ef169f8de01548602dbd0c88b66b2e266bac5b5917629c1261baae5c6fed"}, "downloads": -1, "filename": "os-urlpattern-0.1.3.tar.gz", "has_sig": false, "md5_digest": "c841bbf9f7d6a2ac86987716c867035b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22497, "upload_time": "2018-06-13T09:20:23", "upload_time_iso_8601": "2018-06-13T09:20:23.029854Z", "url": "https://files.pythonhosted.org/packages/11/96/60a07f13f2fbbf03aa5ea25a98d39450ba33833ec968889bd3e321f04c2d/os-urlpattern-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "bfff090dd22c5729548cfb0cee1ba0a6", "sha256": "9dae9b016b0f7623fbe506572978cf112befe1a12b0af44c4c772a4397a04e12"}, "downloads": -1, "filename": "os-urlpattern-0.1.4.tar.gz", "has_sig": false, "md5_digest": "bfff090dd22c5729548cfb0cee1ba0a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26154, "upload_time": "2018-06-14T11:08:24", "upload_time_iso_8601": "2018-06-14T11:08:24.060248Z", "url": "https://files.pythonhosted.org/packages/86/e5/8c0835419c5c32fc357a98ed75594b10b2d03a57535b62d95ea04c1842eb/os-urlpattern-0.1.4.tar.gz", "yanked": false}], "0.1.4.1": [{"comment_text": "", "digests": {"md5": "d5b260503d357ceba8ff2f80299de0fc", "sha256": "3acee22924fef5f7e71d27648fdb2e8b7cd9ae14bd175cb7f087218a4bd99e3e"}, "downloads": -1, "filename": "os-urlpattern-0.1.4.1.tar.gz", "has_sig": false, "md5_digest": "d5b260503d357ceba8ff2f80299de0fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26145, "upload_time": "2018-06-15T02:23:31", "upload_time_iso_8601": "2018-06-15T02:23:31.023539Z", "url": "https://files.pythonhosted.org/packages/38/b1/42e451bbbb0c96b29571c3f340f7fd4bf3e5c9e7848f1dfc85359c7ed4b9/os-urlpattern-0.1.4.1.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "f0532ca48bda0be0d87dcd8c23c8d040", "sha256": "8fc437e78c975ead1b19e28f72971ef4f16ea1b0179105e8edb20370500429e1"}, "downloads": -1, "filename": "os-urlpattern-0.1.5.tar.gz", "has_sig": false, "md5_digest": "f0532ca48bda0be0d87dcd8c23c8d040", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26202, "upload_time": "2018-06-15T08:21:29", "upload_time_iso_8601": "2018-06-15T08:21:29.195027Z", "url": "https://files.pythonhosted.org/packages/d1/89/f17480331d4bb87deb2312c23e174ec77ecaafa77f35bd49986af5fed02f/os-urlpattern-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "4088bf06dffd4c4bc3d9a28490be2c6f", "sha256": "f64220a9a5f22c852ee5726c0c76f3e17bb1c073f9a3a3ff11f1eaa556bdb466"}, "downloads": -1, "filename": "os-urlpattern-0.1.6.tar.gz", "has_sig": false, "md5_digest": "4088bf06dffd4c4bc3d9a28490be2c6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26212, "upload_time": "2018-06-15T09:49:33", "upload_time_iso_8601": "2018-06-15T09:49:33.560749Z", "url": "https://files.pythonhosted.org/packages/ff/82/1822d214c51ae3f76352492968c25e3230559c1dd65df2d2ed3f28b3e3af/os-urlpattern-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "662fe9e9250a82779cb9bf31b4150b0c", "sha256": "6eac7b0cf1651064a094fbccc37b49870eb53acfdf14bc0ee44f608dbd5449ff"}, "downloads": -1, "filename": "os-urlpattern-0.1.7.tar.gz", "has_sig": false, "md5_digest": "662fe9e9250a82779cb9bf31b4150b0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26433, "upload_time": "2018-06-19T11:30:01", "upload_time_iso_8601": "2018-06-19T11:30:01.156846Z", "url": "https://files.pythonhosted.org/packages/24/75/6ea36c2a6a01e4f505f2183c4ca20a27429b7b99cd59693a2bb0a29bb843/os-urlpattern-0.1.7.tar.gz", "yanked": false}], "0.1.7.1": [{"comment_text": "", "digests": {"md5": "a19f892cc7afac853e0a219235445a5c", "sha256": "9299f0863bb32dfc1a635f28c6d1d4d496ac1528d01c75a0befee80dc46caf91"}, "downloads": -1, "filename": "os-urlpattern-0.1.7.1.tar.gz", "has_sig": false, "md5_digest": "a19f892cc7afac853e0a219235445a5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26474, "upload_time": "2018-06-19T12:01:16", "upload_time_iso_8601": "2018-06-19T12:01:16.039858Z", "url": "https://files.pythonhosted.org/packages/45/30/c691d6d33514207c09597d19b014ac640f218349090857858bd64c59387a/os-urlpattern-0.1.7.1.tar.gz", "yanked": false}], "0.1.7.10": [{"comment_text": "", "digests": {"md5": "7815d9657f591c758291e19d79952f69", "sha256": "94848a15503a0b92ba4f7c52903868f5b060a43da2a6d1c645d62bfc373fa022"}, "downloads": -1, "filename": "os-urlpattern-0.1.7.10.tar.gz", "has_sig": false, "md5_digest": "7815d9657f591c758291e19d79952f69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32193, "upload_time": "2018-06-26T04:22:53", "upload_time_iso_8601": "2018-06-26T04:22:53.704896Z", "url": "https://files.pythonhosted.org/packages/f1/64/13906ab9aad781418d0e1f3925681e36b7a4885f14aa562c47894b34f8fc/os-urlpattern-0.1.7.10.tar.gz", "yanked": false}], "0.1.7.11": [{"comment_text": "", "digests": {"md5": "f9836f0ddaf64d06c37f42449679b4f3", "sha256": "6da0811c41a0f6ceaa1e0fd3f5787a5d18189e89a74aca3a3a353c04c7e46f8c"}, "downloads": -1, "filename": "os-urlpattern-0.1.7.11.tar.gz", "has_sig": false, "md5_digest": "f9836f0ddaf64d06c37f42449679b4f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32504, "upload_time": "2018-06-26T09:13:13", "upload_time_iso_8601": "2018-06-26T09:13:13.033794Z", "url": "https://files.pythonhosted.org/packages/e6/8b/28106da39ebdcd2119abd9b0fb5909f07afd48e164178269b850d3433232/os-urlpattern-0.1.7.11.tar.gz", "yanked": false}], "0.1.7.2": [{"comment_text": "", "digests": {"md5": "d4501264d7b0b595e9dc669ea41a868c", "sha256": "00163bd63de20af4b38bc74f277c0c1324ea741c9066d93b189cc50888b1cd8a"}, "downloads": -1, "filename": "os-urlpattern-0.1.7.2.tar.gz", "has_sig": false, "md5_digest": "d4501264d7b0b595e9dc669ea41a868c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29279, "upload_time": "2018-06-20T11:21:23", "upload_time_iso_8601": "2018-06-20T11:21:23.482717Z", "url": "https://files.pythonhosted.org/packages/77/6a/5ae4326dfdf7170d05884db00eb7c74351de7098c70778ab77419b455384/os-urlpattern-0.1.7.2.tar.gz", "yanked": false}], "0.1.7.3": [{"comment_text": "", "digests": {"md5": "1b0ef7b15b26cdb443f313ed438a3a36", "sha256": "27b6281ea7eb318919e1e3eb27db33fe9c747e0edd75933c15463f0c78cdce93"}, "downloads": -1, "filename": "os-urlpattern-0.1.7.3.tar.gz", "has_sig": false, "md5_digest": "1b0ef7b15b26cdb443f313ed438a3a36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29279, "upload_time": "2018-06-20T11:51:01", "upload_time_iso_8601": "2018-06-20T11:51:01.598342Z", "url": "https://files.pythonhosted.org/packages/bb/c7/3e808ca1b18223d0078c1b28fbe4a322526e120850909a38beb79eda2812/os-urlpattern-0.1.7.3.tar.gz", "yanked": false}], "0.1.7.4": [{"comment_text": "", "digests": {"md5": "7a8c5d777c549175474e6e1a763985e5", "sha256": "90b6f7be6e38ce2541c8b1baf3ade09c0c0c152d7ad92c476d2288882291cff7"}, "downloads": -1, "filename": "os-urlpattern-0.1.7.4.tar.gz", "has_sig": false, "md5_digest": "7a8c5d777c549175474e6e1a763985e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29265, "upload_time": "2018-06-20T14:54:00", "upload_time_iso_8601": "2018-06-20T14:54:00.109414Z", "url": "https://files.pythonhosted.org/packages/9c/fe/c93b93f88c5b37218e94fe59080a42456ce26074ddc2adad060e7d4b4aea/os-urlpattern-0.1.7.4.tar.gz", "yanked": false}], "0.1.7.5": [{"comment_text": "", "digests": {"md5": "5accbda2f1cdcee55766a8b96d8191fd", "sha256": "34e13d401b72fac07db76dc77f39230ca6424045adf3f453698c4c885b20a3a9"}, "downloads": -1, "filename": "os-urlpattern-0.1.7.5.tar.gz", "has_sig": false, "md5_digest": "5accbda2f1cdcee55766a8b96d8191fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29405, "upload_time": "2018-06-22T05:12:46", "upload_time_iso_8601": "2018-06-22T05:12:46.287080Z", "url": "https://files.pythonhosted.org/packages/87/32/ce96994145c6e2a87bfd19482933dda2ac763d263d62177b2bf01c5a2805/os-urlpattern-0.1.7.5.tar.gz", "yanked": false}], "0.1.7.6": [{"comment_text": "", "digests": {"md5": "31b4401a6cb36ff00097225ea5b7c915", "sha256": "990d8c38007f53079df3f4c03566607cba428aa72e323a5cc1b1b86760133f71"}, "downloads": -1, "filename": "os-urlpattern-0.1.7.6.tar.gz", "has_sig": false, "md5_digest": "31b4401a6cb36ff00097225ea5b7c915", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30202, "upload_time": "2018-06-22T13:11:08", "upload_time_iso_8601": "2018-06-22T13:11:08.245742Z", "url": "https://files.pythonhosted.org/packages/5c/e7/386be4154dc362aa189e81d3012d34b07233986ba176043d73688705a8ff/os-urlpattern-0.1.7.6.tar.gz", "yanked": false}], "0.1.7.7": [{"comment_text": "", "digests": {"md5": "18fe034d09d69157386bd4622b48dc3c", "sha256": "fd5b4962bd3f4dd6aaabc5e4d1091758a43590f3a6300f37c3b6bc6939c1d53a"}, "downloads": -1, "filename": "os-urlpattern-0.1.7.7.tar.gz", "has_sig": false, "md5_digest": "18fe034d09d69157386bd4622b48dc3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30245, "upload_time": "2018-06-23T11:57:00", "upload_time_iso_8601": "2018-06-23T11:57:00.028342Z", "url": "https://files.pythonhosted.org/packages/61/c8/775bd234db14b858be5db4bec22260761f20671c42cb479b2a223fa325ca/os-urlpattern-0.1.7.7.tar.gz", "yanked": false}], "0.1.7.8": [{"comment_text": "", "digests": {"md5": "c37ed7fe2edcd811d828084e4e7e038b", "sha256": "bfb8e393ee24d25943b80daa61a32c9c3f7a67f0a41b19a44a272f509576ed4d"}, "downloads": -1, "filename": "os-urlpattern-0.1.7.8.tar.gz", "has_sig": false, "md5_digest": "c37ed7fe2edcd811d828084e4e7e038b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32022, "upload_time": "2018-06-25T13:13:14", "upload_time_iso_8601": "2018-06-25T13:13:14.820301Z", "url": "https://files.pythonhosted.org/packages/4c/d6/20751c75574927da7ff075628a43cd81699289a492e17e56c56ab83d1869/os-urlpattern-0.1.7.8.tar.gz", "yanked": false}], "0.1.7.9": [{"comment_text": "", "digests": {"md5": "286544873f39ac45addb1458d9535574", "sha256": "e6442440c6788a917d1876a9f6a64d7604ce506e2d7e3ecd5fd49587d25d990a"}, "downloads": -1, "filename": "os-urlpattern-0.1.7.9.tar.gz", "has_sig": false, "md5_digest": "286544873f39ac45addb1458d9535574", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32139, "upload_time": "2018-06-26T03:30:43", "upload_time_iso_8601": "2018-06-26T03:30:43.079328Z", "url": "https://files.pythonhosted.org/packages/61/df/a6d8f0341ef345cd4ab5d3eff18b00a73ee5bfdaa5938a40683832c8ec18/os-urlpattern-0.1.7.9.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "d66eebc94055d1e41528aa595648320f", "sha256": "3560beb2eeab6e810bf6dc750e0a8769c7eeb9bf3216bbd3612e720d253f16dd"}, "downloads": -1, "filename": "os-urlpattern-0.1.8.tar.gz", "has_sig": false, "md5_digest": "d66eebc94055d1e41528aa595648320f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32801, "upload_time": "2018-06-26T16:38:51", "upload_time_iso_8601": "2018-06-26T16:38:51.981250Z", "url": "https://files.pythonhosted.org/packages/08/88/424173892e38a2ae96fcb52fa9ad4ec8a010425959834cee7db2e77212ca/os-urlpattern-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "e7d9d4cdfd8e0d80cf24f794cdbad669", "sha256": "bb5ae4fe0749d999bfd2f5371132cf4ca59e64b4e2654b6fc79d030971d1f110"}, "downloads": -1, "filename": "os-urlpattern-0.1.9.tar.gz", "has_sig": false, "md5_digest": "e7d9d4cdfd8e0d80cf24f794cdbad669", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34732, "upload_time": "2018-06-27T12:36:49", "upload_time_iso_8601": "2018-06-27T12:36:49.621395Z", "url": "https://files.pythonhosted.org/packages/09/6d/1e97ff02790e2288cd8e7ce8eecab42fc4b1ee3acc09b21bc5b2587a35ed/os-urlpattern-0.1.9.tar.gz", "yanked": false}], "0.1.9.1": [{"comment_text": "", "digests": {"md5": "ce277a40d80baf9a3b5dbe6585c1f6db", "sha256": "95822226ed8d548edd2e12f35f8474fd38dbd0ef1534f30232bb17041394d11f"}, "downloads": -1, "filename": "os-urlpattern-0.1.9.1.tar.gz", "has_sig": false, "md5_digest": "ce277a40d80baf9a3b5dbe6585c1f6db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34941, "upload_time": "2018-06-28T08:06:31", "upload_time_iso_8601": "2018-06-28T08:06:31.128293Z", "url": "https://files.pythonhosted.org/packages/b6/06/0ffce0924297924a2e7cacc67ba73fa74ddfd10ab71cdfe91eccdad05685/os-urlpattern-0.1.9.1.tar.gz", "yanked": false}], "0.1.9.2": [{"comment_text": "", "digests": {"md5": "6271b61c1406dc5cb786fcfaacda532c", "sha256": "2719b58d640a7aaaf9b79881e00a0e2c990872005cc9b5cc3e32ca4711985dfe"}, "downloads": -1, "filename": "os-urlpattern-0.1.9.2.tar.gz", "has_sig": false, "md5_digest": "6271b61c1406dc5cb786fcfaacda532c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35232, "upload_time": "2018-06-28T12:03:38", "upload_time_iso_8601": "2018-06-28T12:03:38.912715Z", "url": "https://files.pythonhosted.org/packages/b9/6c/db7e461024a1ecb5b66c6e8ea4080b8dec1fac80090a718311ab79bf7f7a/os-urlpattern-0.1.9.2.tar.gz", "yanked": false}], "0.1.9.3": [{"comment_text": "", "digests": {"md5": "22c0e11bbee7aa4d851f14090be10112", "sha256": "d84a7c7849ba02017636f696c103afceb0b5f9f8b7e6055db58e1af65ef2bd1b"}, "downloads": -1, "filename": "os-urlpattern-0.1.9.3.tar.gz", "has_sig": false, "md5_digest": "22c0e11bbee7aa4d851f14090be10112", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35296, "upload_time": "2018-06-28T13:47:46", "upload_time_iso_8601": "2018-06-28T13:47:46.451842Z", "url": "https://files.pythonhosted.org/packages/19/64/a119a7f0c5b5d0325e7cab513aa69cea9ed470afe81ccc8402b0bf9abe7b/os-urlpattern-0.1.9.3.tar.gz", "yanked": false}], "0.1.9.4": [{"comment_text": "", "digests": {"md5": "83fc1a9efd03f8311c0b99249c8a500d", "sha256": "8de5abe8ef7ed860542e09e7d497ee1125f6884c65eaa710729f3b14d6c5d618"}, "downloads": -1, "filename": "os-urlpattern-0.1.9.4.tar.gz", "has_sig": false, "md5_digest": "83fc1a9efd03f8311c0b99249c8a500d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35646, "upload_time": "2018-06-29T08:31:02", "upload_time_iso_8601": "2018-06-29T08:31:02.100169Z", "url": "https://files.pythonhosted.org/packages/6c/15/c6f552756059cfd71fab2655efd4e1667ec442510c07bdc3cd243a59864c/os-urlpattern-0.1.9.4.tar.gz", "yanked": false}], "0.1.9.5": [{"comment_text": "", "digests": {"md5": "b4a8f2a8c1d5f2465e5e186fdecd5cc3", "sha256": "bb82d4138f9b88ef9187b88fa7451c1f962b27ac7997443bfd3d13cc5db40a5f"}, "downloads": -1, "filename": "os-urlpattern-0.1.9.5.tar.gz", "has_sig": false, "md5_digest": "b4a8f2a8c1d5f2465e5e186fdecd5cc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36403, "upload_time": "2018-07-02T09:56:06", "upload_time_iso_8601": "2018-07-02T09:56:06.809619Z", "url": "https://files.pythonhosted.org/packages/42/74/6993ae9804d0e2621ea2cc5f45101eae122772487011d9a1550dcf54e8aa/os-urlpattern-0.1.9.5.tar.gz", "yanked": false}], "0.1.9.6": [{"comment_text": "", "digests": {"md5": "1cefeaa518346aead82e92fe8d1ce9f6", "sha256": "c2cd5e98b1aef78fea1bf0d36b897ea27cbc6154444f8612ca4f06e3897e7bcd"}, "downloads": -1, "filename": "os-urlpattern-0.1.9.6.tar.gz", "has_sig": false, "md5_digest": "1cefeaa518346aead82e92fe8d1ce9f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36714, "upload_time": "2018-07-03T07:44:25", "upload_time_iso_8601": "2018-07-03T07:44:25.120971Z", "url": "https://files.pythonhosted.org/packages/84/46/e791a106d006a2cb8f2c9fe4fa63f96352dc578c5493b56e83baa56a5db9/os-urlpattern-0.1.9.6.tar.gz", "yanked": false}], "0.1.9.7": [{"comment_text": "", "digests": {"md5": "6a942d01df2717f3d1b64f55f6f7ab4f", "sha256": "20544a3a417a8f58b003665529b37e0bdf94be339d7ad96605b65b4decf71be2"}, "downloads": -1, "filename": "os-urlpattern-0.1.9.7.tar.gz", "has_sig": false, "md5_digest": "6a942d01df2717f3d1b64f55f6f7ab4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36706, "upload_time": "2018-07-03T11:52:11", "upload_time_iso_8601": "2018-07-03T11:52:11.726980Z", "url": "https://files.pythonhosted.org/packages/c9/4c/45c3aeb2d823f8435e4b0083df7b78c10333c2621d689ac690e2fccffb73/os-urlpattern-0.1.9.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fda51d6e9871777216c125d4a61424fc", "sha256": "292f9c62b36cbcdbb663113bf561593dba7d5ce1b4eff90743abfdb496000289"}, "downloads": -1, "filename": "os-urlpattern-0.1.11.tar.gz", "has_sig": false, "md5_digest": "fda51d6e9871777216c125d4a61424fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36708, "upload_time": "2019-01-11T09:53:33", "upload_time_iso_8601": "2019-01-11T09:53:33.389255Z", "url": "https://files.pythonhosted.org/packages/74/ae/357c0f662ef83bc730ed66723d402a55ff6871a5b5be06e329d9de023c0d/os-urlpattern-0.1.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:55 2020"}