{"info": {"author": "Joerg Breitbart", "author_email": "j.breitbart@netzkolchose.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Topic :: Database", "Topic :: Database :: Front-Ends", "Topic :: Software Development :: Libraries"], "description": "treewidget for Django\n---------------------\n\nProvides the model fields TreeForeignKey, TreeOneToOneField,\nTreeManyToManyField for tree models with a tree widget for django. Uses\n``jstree`` (thanks to vakata).\n\nTested with django-mptt and django-treebeard with Django 1.11 & 2.0.2.\nIt will not work with Django <1.11.\n\nInstallation\n~~~~~~~~~~~~\n\n-  ``pip install django-treewidget``\n-  place ``'treewidget'`` in ``INSTALLED_APPS``\n-  for AJAX tree updates add the routes to your urls.py, e.g.\n   ``url(r'^treewidget/', include('treewidget.urls'))``\n\nUsage\n~~~~~\n\nJust replace any foreign key, m2m or one2one tree model field with the\nprovided counterpart.\n\nCustomization\n~~~~~~~~~~~~~\n\nThe fields understand two additional arguments:\n\n-  **settings**: Dictionary containing the optional boolean values for\n   'show\\_buttons' (shows \"Expand\", \"Collapse\" and \"Selected\" buttons),\n   'search' (for in-tree search), 'dnd' (drag and drop support) and\n   'sort' (apply tree order in frontend). Defaults to ``{}``.\n-  **treeoptions**: Settings directly applied to ``jstree``. Must be a\n   JSON string, if given as argument to a field, otherwise a python\n   dictionary. Defaults to ``treewidget.fields.TREEOPTIONS``. Note that\n   some widget settings will override treeoptions to keep working.\n\nBoth settings can be provided project wide in settings.py as\n``TREEWIDGET_SETTINGS`` and ``TREEWIDGET_TREEOPTIONS``.\n\nIt is possible to render a deeper nested branch (subtree) by overriding\nthe default formatter. Just set the parent id to '#' for the branch's\ntop level entries in the formatter's ``render`` method.\n\n**NOTE**: If you use a prefiltered queryset which data does not form a\nsubtree containing all parents up to the top level, jstree cannot render\nit correctly. With 'filtered' in settings set to ``True`` those\nquerysets will be rendered by adding missing nodes as not selectable.\n\nExample\n~~~~~~~\n\n.. code:: python\n\n    from django.db import models\n    from mptt.models import MPTTModel\n    from treewidget.fields import TreeForeignKey\n\n    class Mptt(MPTTModel):\n        name = models.CharField(max_length=32)\n        parent = TreeForeignKey('self', blank=True, null=True, on_delete=models.CASCADE)\n\n        def __str__(self):\n            return self.name\n\nRenders like this:\n\n.. figure:: https://github.com/jerch/django-treewidget/raw/master/screenshot.png\n   :alt: screenshot\n\n   screenshot", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/jerch/django-treewidget/archive/0.3.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jerch/django-treewidget", "keywords": "django,widget,admin,tree", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-treewidget", "package_url": "https://pypi.org/project/django-treewidget/", "platform": "", "project_url": "https://pypi.org/project/django-treewidget/", "project_urls": {"Download": "https://github.com/jerch/django-treewidget/archive/0.3.1.tar.gz", "Homepage": "https://github.com/jerch/django-treewidget"}, "release_url": "https://pypi.org/project/django-treewidget/0.3.1/", "requires_dist": null, "requires_python": "", "summary": "treewidget for django admin", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Provides the model fields TreeForeignKey, TreeOneToOneField,\nTreeManyToManyField for tree models with a tree widget for django. Uses\n<tt>jstree</tt> (thanks to vakata).</p>\n<p>Tested with django-mptt and django-treebeard with Django 1.11 &amp; 2.0.2.\nIt will not work with Django &lt;1.11.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ul>\n<li><tt>pip install <span class=\"pre\">django-treewidget</span></tt></li>\n<li>place <tt>'treewidget'</tt> in <tt>INSTALLED_APPS</tt></li>\n<li>for AJAX tree updates add the routes to your urls.py, e.g.\n<tt><span class=\"pre\">url(r'^treewidget/',</span> <span class=\"pre\">include('treewidget.urls'))</span></tt></li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Just replace any foreign key, m2m or one2one tree model field with the\nprovided counterpart.</p>\n</div>\n<div id=\"customization\">\n<h2>Customization</h2>\n<p>The fields understand two additional arguments:</p>\n<ul>\n<li><strong>settings</strong>: Dictionary containing the optional boolean values for\n\u2018show_buttons\u2019 (shows \u201cExpand\u201d, \u201cCollapse\u201d and \u201cSelected\u201d buttons),\n\u2018search\u2019 (for in-tree search), \u2018dnd\u2019 (drag and drop support) and\n\u2018sort\u2019 (apply tree order in frontend). Defaults to <tt>{}</tt>.</li>\n<li><strong>treeoptions</strong>: Settings directly applied to <tt>jstree</tt>. Must be a\nJSON string, if given as argument to a field, otherwise a python\ndictionary. Defaults to <tt>treewidget.fields.TREEOPTIONS</tt>. Note that\nsome widget settings will override treeoptions to keep working.</li>\n</ul>\n<p>Both settings can be provided project wide in settings.py as\n<tt>TREEWIDGET_SETTINGS</tt> and <tt>TREEWIDGET_TREEOPTIONS</tt>.</p>\n<p>It is possible to render a deeper nested branch (subtree) by overriding\nthe default formatter. Just set the parent id to \u2018#\u2019 for the branch\u2019s\ntop level entries in the formatter\u2019s <tt>render</tt> method.</p>\n<p><strong>NOTE</strong>: If you use a prefiltered queryset which data does not form a\nsubtree containing all parents up to the top level, jstree cannot render\nit correctly. With \u2018filtered\u2019 in settings set to <tt>True</tt> those\nquerysets will be rendered by adding missing nodes as not selectable.</p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mptt.models</span> <span class=\"kn\">import</span> <span class=\"n\">MPTTModel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">treewidget.fields</span> <span class=\"kn\">import</span> <span class=\"n\">TreeForeignKey</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Mptt</span><span class=\"p\">(</span><span class=\"n\">MPTTModel</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">)</span>\n    <span class=\"n\">parent</span> <span class=\"o\">=</span> <span class=\"n\">TreeForeignKey</span><span class=\"p\">(</span><span class=\"s1\">'self'</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">on_delete</span><span class=\"o\">=</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CASCADE</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n</pre>\n<p>Renders like this:</p>\n<div>\n<img alt=\"screenshot\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7f3c37b1606e1ecdb891d0f78bdbd0398d9c847b/68747470733a2f2f6769746875622e636f6d2f6a657263682f646a616e676f2d747265657769646765742f7261772f6d61737465722f73637265656e73686f742e706e67\">\n<p>screenshot</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3679841, "releases": {"0.2.2": [{"comment_text": "", "digests": {"md5": "c5f9fd750526c08564fe0c111a50b5a3", "sha256": "e075a373020b155c6e19fa2710eec2829c51258f317789d60bbcd819b0d59f9b"}, "downloads": -1, "filename": "django-treewidget-0.2.2.tar.gz", "has_sig": false, "md5_digest": "c5f9fd750526c08564fe0c111a50b5a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 135518, "upload_time": "2018-02-21T18:43:18", "upload_time_iso_8601": "2018-02-21T18:43:18.643480Z", "url": "https://files.pythonhosted.org/packages/99/e7/e47d7518d2bb418250905128a85bc1063aeb17da5bcb5ad5dd31107750e2/django-treewidget-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "df34de2cd52d34f10aa172f6cbba3c05", "sha256": "599221d6129f1dde94b94b44aea6d0e223257f8f96c0121927862e85034db8f4"}, "downloads": -1, "filename": "django-treewidget-0.2.3.tar.gz", "has_sig": false, "md5_digest": "df34de2cd52d34f10aa172f6cbba3c05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 135590, "upload_time": "2018-02-28T00:08:36", "upload_time_iso_8601": "2018-02-28T00:08:36.715802Z", "url": "https://files.pythonhosted.org/packages/30/6e/90747385f31be65b50e8e22043f96f8fff9b0d6be0cee8874b1df869f752/django-treewidget-0.2.3.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "9f38f372079307f165b605bb162b6a98", "sha256": "4c40d3d01cd591b8280cdc6b141e9d1eb1a6fb750f918ef71be8c7963a25548d"}, "downloads": -1, "filename": "django-treewidget-0.3.0.tar.gz", "has_sig": false, "md5_digest": "9f38f372079307f165b605bb162b6a98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 137240, "upload_time": "2018-03-17T21:42:46", "upload_time_iso_8601": "2018-03-17T21:42:46.523834Z", "url": "https://files.pythonhosted.org/packages/bf/b4/b6b1a8fda43d558d1ec0f5e108dc390ee0530b44ec752c52b5c680f795e5/django-treewidget-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "e4e46ca655a1d3406ff3c5a8177a60ea", "sha256": "581bfd40fef60cd71d639306de21010e3e93cdcf4f447a0f7d72472946ac216c"}, "downloads": -1, "filename": "django-treewidget-0.3.1.tar.gz", "has_sig": false, "md5_digest": "e4e46ca655a1d3406ff3c5a8177a60ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 137280, "upload_time": "2018-03-17T23:12:50", "upload_time_iso_8601": "2018-03-17T23:12:50.259300Z", "url": "https://files.pythonhosted.org/packages/fb/23/cb1c88733c82fc2524cb8a7727af7125b6e3d68b96fc41145b1f42c34ddc/django-treewidget-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e4e46ca655a1d3406ff3c5a8177a60ea", "sha256": "581bfd40fef60cd71d639306de21010e3e93cdcf4f447a0f7d72472946ac216c"}, "downloads": -1, "filename": "django-treewidget-0.3.1.tar.gz", "has_sig": false, "md5_digest": "e4e46ca655a1d3406ff3c5a8177a60ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 137280, "upload_time": "2018-03-17T23:12:50", "upload_time_iso_8601": "2018-03-17T23:12:50.259300Z", "url": "https://files.pythonhosted.org/packages/fb/23/cb1c88733c82fc2524cb8a7727af7125b6e3d68b96fc41145b1f42c34ddc/django-treewidget-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:19 2020"}