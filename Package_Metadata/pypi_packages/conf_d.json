{"info": {"author": "Jose Diaz-Gonzalez", "author_email": "conf_d@josediazgonzalez.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "======\nconf_d\n======\n\nread configuration files, conf.d style\n\nRequirements\n============\n\n* Python 2.6+ or Python 3.4+\n\nInstallation\n============\n\nUsing PIP:\n\nFrom Github::\n\n    pip install git+git://github.com/josegonzalez/conf_d.git#egg=conf_d\n\nFrom PyPI::\n\n    pip install conf_d==0.1.0\n\nUsage\n=====\n\nusage::\n\n    # in your /etc/derp/conf file\n    [derp]\n    no: sleep\n    til: brooklyn\n\n    [herp]\n    sleep: 1\n    wait: 5.0\n    timeout: seventy\n\n    # From your fictional derp module\n    from conf_d import Configuration\n\n    def digitize(config):\n        for key in config:\n            if not config[key].isdigit():\n                try:\n                    config[key] = float(config[key])\n                except ValueError:\n                    pass\n            else:\n                try:\n                    config[key] = int(config[key])\n                except ValueError:\n                    pass\n\n            return config\n\n    # All defaults must be strings\n    conf = Configuration(\n        name=\"derp\",\n        path=\"/etc/derp/conf\",\n        main_defaults={\n            \"no\": \"one\",\n            \"expected\": \"the spanish inquisition\",\n            \"cats\": \"1\",\n        },\n        section_parser=digitize\n    )\n\n    what_not_to_do = conf.get(section='derp', key='no', default=\"jumping\")\n    # \"sleep\"\n\n    until_when = conf.get(section='derp', key='til')\n    # \"brooklyn\"\n\n    cats = conf.get(section='derp', key='cats')\n    # \"1\"\n\n    dogs = conf.get(section='derp', key='dogs')\n    # None\n\n    sleep = conf.get(section='herp', key='sleep')\n    # 1\n\n    wait = conf.get(section='herp', key='wait')\n    # 5.0\n\n    timeout = conf.get(section='herp', key='timeout')\n    # \"seventy\"\n\n    section_exists = conf.has(section='derp')\n    # True\n\n    section_exists = conf.has(section='derp', key='no')\n    # True\n\n    raw_data = conf.raw()\n    # {\n    #    'sections': {\n    #       'herp': {\n    #          'sleep': 1,\n    #          'wait': 5.0,\n    #          'timeout': 'seventy'\n    #       }\n    #    },\n    #    'derp': {\n    #       'expected': 'the spanish inquisition',\n    #       'til': 'brooklyn',\n    #       'cats': '1',\n    #       'no': 'sleep'\n    #    }\n    # }\n\n\nChangelog\n=========\n\n0.1.0 (2018-12-12)\n------------------\n\n- Feat: add release script. [Jose Diaz-Gonzalez]\n\n- Add support for Python 3 (up to Python 3.7) [Xavier Hardy]\n\n  Add tox.ini file\n  Add gitignore\n\n\n0.0.4 (2013-12-13)\n------------------\n\n- Change assertDictEquals to assertEquals. [Clay Pence]\n\n- Allow using custom config parser. [Clay Pence]\n\n  Instead of using ConfigParser.ConfigParser, let the user pass\n  in a parser.\n\n\n0.0.3 (2013-05-23)\n------------------\n\n- Allow overriding the confd_path from an entry in the main config.\n  [Jose Diaz-Gonzalez]\n\n0.0.2 (2013-04-18)\n------------------\n\n- Fix issue where main section was not always created. [Jose Diaz-\n  Gonzalez]\n\n0.0.1 (2013-04-14)\n------------------\n\n- Initial commit. [Jose Diaz-Gonzalez]\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/josegonzalez/conf_d", "keywords": "", "license": "LICENSE.txt", "maintainer": "", "maintainer_email": "", "name": "conf_d", "package_url": "https://pypi.org/project/conf_d/", "platform": "", "project_url": "https://pypi.org/project/conf_d/", "project_urls": {"Homepage": "http://github.com/josegonzalez/conf_d"}, "release_url": "https://pypi.org/project/conf_d/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "read configuration files, conf.d style", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>read configuration files, conf.d style</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python 2.6+ or Python 3.4+</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Using PIP:</p>\n<p>From Github:</p>\n<pre>pip install git+git://github.com/josegonzalez/conf_d.git#egg=conf_d\n</pre>\n<p>From PyPI:</p>\n<pre>pip install conf_d==0.1.0\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>usage:</p>\n<pre># in your /etc/derp/conf file\n[derp]\nno: sleep\ntil: brooklyn\n\n[herp]\nsleep: 1\nwait: 5.0\ntimeout: seventy\n\n# From your fictional derp module\nfrom conf_d import Configuration\n\ndef digitize(config):\n    for key in config:\n        if not config[key].isdigit():\n            try:\n                config[key] = float(config[key])\n            except ValueError:\n                pass\n        else:\n            try:\n                config[key] = int(config[key])\n            except ValueError:\n                pass\n\n        return config\n\n# All defaults must be strings\nconf = Configuration(\n    name=\"derp\",\n    path=\"/etc/derp/conf\",\n    main_defaults={\n        \"no\": \"one\",\n        \"expected\": \"the spanish inquisition\",\n        \"cats\": \"1\",\n    },\n    section_parser=digitize\n)\n\nwhat_not_to_do = conf.get(section='derp', key='no', default=\"jumping\")\n# \"sleep\"\n\nuntil_when = conf.get(section='derp', key='til')\n# \"brooklyn\"\n\ncats = conf.get(section='derp', key='cats')\n# \"1\"\n\ndogs = conf.get(section='derp', key='dogs')\n# None\n\nsleep = conf.get(section='herp', key='sleep')\n# 1\n\nwait = conf.get(section='herp', key='wait')\n# 5.0\n\ntimeout = conf.get(section='herp', key='timeout')\n# \"seventy\"\n\nsection_exists = conf.has(section='derp')\n# True\n\nsection_exists = conf.has(section='derp', key='no')\n# True\n\nraw_data = conf.raw()\n# {\n#    'sections': {\n#       'herp': {\n#          'sleep': 1,\n#          'wait': 5.0,\n#          'timeout': 'seventy'\n#       }\n#    },\n#    'derp': {\n#       'expected': 'the spanish inquisition',\n#       'til': 'brooklyn',\n#       'cats': '1',\n#       'no': 'sleep'\n#    }\n# }\n</pre>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.1.0 (2018-12-12)</h3>\n<ul>\n<li><p>Feat: add release script. [Jose Diaz-Gonzalez]</p>\n</li>\n<li><p>Add support for Python 3 (up to Python 3.7) [Xavier Hardy]</p>\n<p>Add tox.ini file\nAdd gitignore</p>\n</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.0.4 (2013-12-13)</h3>\n<ul>\n<li><p>Change assertDictEquals to assertEquals. [Clay Pence]</p>\n</li>\n<li><p>Allow using custom config parser. [Clay Pence]</p>\n<p>Instead of using ConfigParser.ConfigParser, let the user pass\nin a parser.</p>\n</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.0.3 (2013-05-23)</h3>\n<ul>\n<li>Allow overriding the confd_path from an entry in the main config.\n[Jose Diaz-Gonzalez]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.0.2 (2013-04-18)</h3>\n<ul>\n<li>Fix issue where main section was not always created. [Jose Diaz-\nGonzalez]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.0.1 (2013-04-14)</h3>\n<ul>\n<li>Initial commit. [Jose Diaz-Gonzalez]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4588921, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "9234edc830599dc3022ee9c6f31ebc9b", "sha256": "ade4ad94f3ac62f7680da983075770cba40acc94967bf00fe974bf991cf633d8"}, "downloads": -1, "filename": "conf_d-0.0.1.tar.gz", "has_sig": false, "md5_digest": "9234edc830599dc3022ee9c6f31ebc9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4078, "upload_time": "2013-04-14T23:23:44", "upload_time_iso_8601": "2013-04-14T23:23:44.493063Z", "url": "https://files.pythonhosted.org/packages/16/d3/7872bca43c1ad3ac32346d1935d742d91d138c06f5e5b33620bb785b7b6d/conf_d-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "96908c83cb9d9ad2c9cd3381801df98d", "sha256": "f361f86ac382f9c1c47115aeb5fc484adf42f6e0505c003bc5129af6d2305332"}, "downloads": -1, "filename": "conf_d-0.0.2.tar.gz", "has_sig": false, "md5_digest": "96908c83cb9d9ad2c9cd3381801df98d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4110, "upload_time": "2013-04-18T19:34:51", "upload_time_iso_8601": "2013-04-18T19:34:51.504393Z", "url": "https://files.pythonhosted.org/packages/58/8d/5b30823d182606d651013ed14854cb980b1c0dc8b9bad63b42430ba58860/conf_d-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "9c29596f90d6ae9dd681d73ca8b791c3", "sha256": "6161516013aa0580fcfeb7fd221222e68f9e562f7876ff56d3447ffb66645ab0"}, "downloads": -1, "filename": "conf_d-0.0.3.tar.gz", "has_sig": false, "md5_digest": "9c29596f90d6ae9dd681d73ca8b791c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4279, "upload_time": "2013-05-23T03:55:49", "upload_time_iso_8601": "2013-05-23T03:55:49.739778Z", "url": "https://files.pythonhosted.org/packages/d6/79/9cd2ea495cc89e3c8c6b3f8e6cc873d8c10544ecb512556d4d03688e4285/conf_d-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "ad5cf83efe0559eabe869063be8bc184", "sha256": "f8bab3775b34ad9dfd7c1cb9e66eeb861b479ae60842006ab4582df39b95d8af"}, "downloads": -1, "filename": "conf_d-0.0.4.tar.gz", "has_sig": false, "md5_digest": "ad5cf83efe0559eabe869063be8bc184", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4266, "upload_time": "2013-12-13T12:47:56", "upload_time_iso_8601": "2013-12-13T12:47:56.983115Z", "url": "https://files.pythonhosted.org/packages/c2/f0/05b8933c7a5130edd9acc74b62be300f8d71d75c06489de72f52665d2ae2/conf_d-0.0.4.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "8caab3218422c0dfa97f71f39d12d08e", "sha256": "fe44e8b00b1acca59956949e2fbd83629550e6fbfb55b70106ba07b1451751b7"}, "downloads": -1, "filename": "conf_d-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "8caab3218422c0dfa97f71f39d12d08e", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 4464, "upload_time": "2018-12-12T05:46:17", "upload_time_iso_8601": "2018-12-12T05:46:17.341894Z", "url": "https://files.pythonhosted.org/packages/99/08/bbe0de699a79fb1a10c108556cf9b936cb8673e15949ea6ba6fc45069786/conf_d-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "53248fda747faf589d6936791988847a", "sha256": "6230053efae4631350ef7892e6145d7d967bdb7e6e8ca74251a828ecbc5645c6"}, "downloads": -1, "filename": "conf_d-0.1.0.tar.gz", "has_sig": false, "md5_digest": "53248fda747faf589d6936791988847a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4605, "upload_time": "2018-12-12T05:46:15", "upload_time_iso_8601": "2018-12-12T05:46:15.671829Z", "url": "https://files.pythonhosted.org/packages/78/b8/f096e604ae7d2e1116891d83bda96de3f9e68003c5a443216011d8c32038/conf_d-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8caab3218422c0dfa97f71f39d12d08e", "sha256": "fe44e8b00b1acca59956949e2fbd83629550e6fbfb55b70106ba07b1451751b7"}, "downloads": -1, "filename": "conf_d-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "8caab3218422c0dfa97f71f39d12d08e", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 4464, "upload_time": "2018-12-12T05:46:17", "upload_time_iso_8601": "2018-12-12T05:46:17.341894Z", "url": "https://files.pythonhosted.org/packages/99/08/bbe0de699a79fb1a10c108556cf9b936cb8673e15949ea6ba6fc45069786/conf_d-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "53248fda747faf589d6936791988847a", "sha256": "6230053efae4631350ef7892e6145d7d967bdb7e6e8ca74251a828ecbc5645c6"}, "downloads": -1, "filename": "conf_d-0.1.0.tar.gz", "has_sig": false, "md5_digest": "53248fda747faf589d6936791988847a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4605, "upload_time": "2018-12-12T05:46:15", "upload_time_iso_8601": "2018-12-12T05:46:15.671829Z", "url": "https://files.pythonhosted.org/packages/78/b8/f096e604ae7d2e1116891d83bda96de3f9e68003c5a443216011d8c32038/conf_d-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:00 2020"}