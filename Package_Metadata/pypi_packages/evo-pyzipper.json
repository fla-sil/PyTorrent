{"info": {"author": "Justin Davis", "author_email": "evotodi@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: OS Independent", "Operating System :: POSIX", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: System :: Archiving :: Compression"], "description": ".. image:: https://img.shields.io/pypi/v/pyzipper.svg\n        :target: https://pypi.org/project/pyzipper/\n        :alt: Current Version on PyPi\n\n.. image:: https://img.shields.io/pypi/pyversions/pyzipper.svg\n        :target: https://pypi.org/project/pyzipper/\n        :alt: Supported Python Versions\n\n.. image:: https://img.shields.io/travis/danifus/pyzipper.svg\n        :target: https://travis-ci.org/danifus/pyzipper\n        :alt: Travis build (Linux/OsX)\n\n\npyzipper\n========\n\nA 100% API compatible replacement for Python's ``zipfile`` that can read and write AES encrypted zip files.\nCallback function added to extracting zipfiles\n\nInstallation\n------------\n\n.. code-block:: bash\n\n   pip install pyzipper\n\n\nUsage\n-----\n\n.. code-block:: python\n\n   import pyzipper\n\n   secret_password = b'lost art of keeping a secret'\n\n   with pyzipper.AESZipFile('new_test.zip',\n                            'w',\n                            compression=pyzipper.ZIP_LZMA,\n                            encryption=pyzipper.WZ_AES) as zf:\n       zf.setpassword(secret_password)\n       zf.writestr('test.txt', \"What ever you do, don't tell anyone!\")\n\n   with pyzipper.AESZipFile('new_test.zip') as zf:\n       zf.setpassword(secret_password)\n       my_secrets = zf.read('test.txt')\n\n\nAES Strength\n------------\n\nThe strength of the AES encryption can be configure to be 128, 192 or 256 bits.\nBy default it is 256 bits. Use the ``setencryption()`` method to specify the\nencryption kwargs:\n\n.. code-block:: python\n\n   import pyzipper\n\n   secret_password = b'lost art of keeping a secret'\n\n   with pyzipper.AESZipFile('new_test.zip',\n                            'w',\n                            compression=pyzipper.ZIP_LZMA) as zf:\n       zf.setpassword(secret_password)\n       zf.setencryption(pyzipper.WZ_AES, nbits=128)\n       zf.writestr('test.txt', \"What ever you do, don't tell anyone!\")\n\n   with pyzipper.AESZipFile('new_test.zip') as zf:\n       zf.setpassword(secret_password)\n       my_secrets = zf.read('test.txt')\n\nDocumentation\n-------------\n\nOfficial Python ZipFile documentation is available here: https://docs.python.org/3/library/zipfile.html\n\nCredits\n-------\n\nThe docs skeleton was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/evotodi/pyzipper", "keywords": "zip aes encrypt decrypt", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "evo-pyzipper", "package_url": "https://pypi.org/project/evo-pyzipper/", "platform": "", "project_url": "https://pypi.org/project/evo-pyzipper/", "project_urls": {"Homepage": "https://github.com/evotodi/pyzipper"}, "release_url": "https://pypi.org/project/evo-pyzipper/0.3.2/", "requires_dist": null, "requires_python": ">=3.4", "summary": "AES encryption for zipfile. Including Callback.", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.org/project/pyzipper/\" rel=\"nofollow\"><img alt=\"Current Version on PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c76bb3dac7a0de84aa63c4e3c543e24ac2002c40/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70797a69707065722e737667\"></a>\n<a href=\"https://pypi.org/project/pyzipper/\" rel=\"nofollow\"><img alt=\"Supported Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c084d0a3a10b77485b3172f35a5ca019427208d5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f70797a69707065722e737667\"></a>\n<a href=\"https://travis-ci.org/danifus/pyzipper\" rel=\"nofollow\"><img alt=\"Travis build (Linux/OsX)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f9df5ef8187f4dd1468e8784ec10302f034256ec/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f64616e696675732f70797a69707065722e737667\"></a>\n<div id=\"pyzipper\">\n<h2>pyzipper</h2>\n<p>A 100% API compatible replacement for Python\u2019s <tt>zipfile</tt> that can read and write AES encrypted zip files.\nCallback function added to extracting zipfiles</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>pip install pyzipper\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyzipper</span>\n\n<span class=\"n\">secret_password</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"s1\">'lost art of keeping a secret'</span>\n\n<span class=\"k\">with</span> <span class=\"n\">pyzipper</span><span class=\"o\">.</span><span class=\"n\">AESZipFile</span><span class=\"p\">(</span><span class=\"s1\">'new_test.zip'</span><span class=\"p\">,</span>\n                         <span class=\"s1\">'w'</span><span class=\"p\">,</span>\n                         <span class=\"n\">compression</span><span class=\"o\">=</span><span class=\"n\">pyzipper</span><span class=\"o\">.</span><span class=\"n\">ZIP_LZMA</span><span class=\"p\">,</span>\n                         <span class=\"n\">encryption</span><span class=\"o\">=</span><span class=\"n\">pyzipper</span><span class=\"o\">.</span><span class=\"n\">WZ_AES</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">zf</span><span class=\"p\">:</span>\n    <span class=\"n\">zf</span><span class=\"o\">.</span><span class=\"n\">setpassword</span><span class=\"p\">(</span><span class=\"n\">secret_password</span><span class=\"p\">)</span>\n    <span class=\"n\">zf</span><span class=\"o\">.</span><span class=\"n\">writestr</span><span class=\"p\">(</span><span class=\"s1\">'test.txt'</span><span class=\"p\">,</span> <span class=\"s2\">\"What ever you do, don't tell anyone!\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">pyzipper</span><span class=\"o\">.</span><span class=\"n\">AESZipFile</span><span class=\"p\">(</span><span class=\"s1\">'new_test.zip'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">zf</span><span class=\"p\">:</span>\n    <span class=\"n\">zf</span><span class=\"o\">.</span><span class=\"n\">setpassword</span><span class=\"p\">(</span><span class=\"n\">secret_password</span><span class=\"p\">)</span>\n    <span class=\"n\">my_secrets</span> <span class=\"o\">=</span> <span class=\"n\">zf</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"s1\">'test.txt'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"aes-strength\">\n<h3>AES Strength</h3>\n<p>The strength of the AES encryption can be configure to be 128, 192 or 256 bits.\nBy default it is 256 bits. Use the <tt>setencryption()</tt> method to specify the\nencryption kwargs:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyzipper</span>\n\n<span class=\"n\">secret_password</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"s1\">'lost art of keeping a secret'</span>\n\n<span class=\"k\">with</span> <span class=\"n\">pyzipper</span><span class=\"o\">.</span><span class=\"n\">AESZipFile</span><span class=\"p\">(</span><span class=\"s1\">'new_test.zip'</span><span class=\"p\">,</span>\n                         <span class=\"s1\">'w'</span><span class=\"p\">,</span>\n                         <span class=\"n\">compression</span><span class=\"o\">=</span><span class=\"n\">pyzipper</span><span class=\"o\">.</span><span class=\"n\">ZIP_LZMA</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">zf</span><span class=\"p\">:</span>\n    <span class=\"n\">zf</span><span class=\"o\">.</span><span class=\"n\">setpassword</span><span class=\"p\">(</span><span class=\"n\">secret_password</span><span class=\"p\">)</span>\n    <span class=\"n\">zf</span><span class=\"o\">.</span><span class=\"n\">setencryption</span><span class=\"p\">(</span><span class=\"n\">pyzipper</span><span class=\"o\">.</span><span class=\"n\">WZ_AES</span><span class=\"p\">,</span> <span class=\"n\">nbits</span><span class=\"o\">=</span><span class=\"mi\">128</span><span class=\"p\">)</span>\n    <span class=\"n\">zf</span><span class=\"o\">.</span><span class=\"n\">writestr</span><span class=\"p\">(</span><span class=\"s1\">'test.txt'</span><span class=\"p\">,</span> <span class=\"s2\">\"What ever you do, don't tell anyone!\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">pyzipper</span><span class=\"o\">.</span><span class=\"n\">AESZipFile</span><span class=\"p\">(</span><span class=\"s1\">'new_test.zip'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">zf</span><span class=\"p\">:</span>\n    <span class=\"n\">zf</span><span class=\"o\">.</span><span class=\"n\">setpassword</span><span class=\"p\">(</span><span class=\"n\">secret_password</span><span class=\"p\">)</span>\n    <span class=\"n\">my_secrets</span> <span class=\"o\">=</span> <span class=\"n\">zf</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"s1\">'test.txt'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p>Official Python ZipFile documentation is available here: <a href=\"https://docs.python.org/3/library/zipfile.html\" rel=\"nofollow\">https://docs.python.org/3/library/zipfile.html</a></p>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<p>The docs skeleton was created with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> and the <a href=\"https://github.com/audreyr/cookiecutter-pypackage\" rel=\"nofollow\">audreyr/cookiecutter-pypackage</a> project template.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5569431, "releases": {"0.3.2": [{"comment_text": "", "digests": {"md5": "a6c77e2af9dead042636012483f07df4", "sha256": "4ab7a226620cb76367633314fae179ac2ad2be6d7a5fab64f1a1024e59b90731"}, "downloads": -1, "filename": "evo-pyzipper-0.3.2.tar.gz", "has_sig": false, "md5_digest": "a6c77e2af9dead042636012483f07df4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 107985, "upload_time": "2019-07-22T22:28:45", "upload_time_iso_8601": "2019-07-22T22:28:45.107122Z", "url": "https://files.pythonhosted.org/packages/62/5b/37fa6150c7dc3d070a80038865a073845c03a87d121edb39dc2b388d2fc4/evo-pyzipper-0.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a6c77e2af9dead042636012483f07df4", "sha256": "4ab7a226620cb76367633314fae179ac2ad2be6d7a5fab64f1a1024e59b90731"}, "downloads": -1, "filename": "evo-pyzipper-0.3.2.tar.gz", "has_sig": false, "md5_digest": "a6c77e2af9dead042636012483f07df4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 107985, "upload_time": "2019-07-22T22:28:45", "upload_time_iso_8601": "2019-07-22T22:28:45.107122Z", "url": "https://files.pythonhosted.org/packages/62/5b/37fa6150c7dc3d070a80038865a073845c03a87d121edb39dc2b388d2fc4/evo-pyzipper-0.3.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:05 2020"}