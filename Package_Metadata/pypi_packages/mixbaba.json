{"info": {"author": "Vincenzo Lavorini", "author_email": "vincenzo.lavorini@naturalcycles.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Utilities"], "description": "# MIXpanel Bayesian AB test Analysis tool (MixBABA)\n\nThis tool is intended to consume a JSON file containing details about a Mixpanel funnel and output the results of the analysis made whithin a Bayesian framework.\n\nYou can find details about the data processing [here](https://towardsdatascience.com/bayesian-a-b-testing-with-python-the-easy-guide-d638f89e0b8a).\n\n## Installation\n\n### From PyPi\n\nJust easy as:\n\n    pip install mixbaba\n\n### From sources\nTo install this package you have to clone the repository:\n\n    git clone https://github.com/NaturalCycles/MixBABA.git\n\nYou can run the unit tests, to ensure the tool will work:\n\n    cd MixBABA \n    python setup.py test\n\nAnd then you can install the tool via PIP:\n\n    pip install .\n\n## Usage\n\nYou can find the full documentation [here](https://mixbaba.readthedocs.io/en/latest/), \nbut if you want a short guide read the following.\n\nTo use MixBABA you have need:\n* a JSON file containing a list of the funnels together with the details about them\n (an example is in this repository) \n* the \"API secret\" to connect to Mixpanel; You can find your one in the settings \ndialog of the Mixpanel web application.\n\nThen you can launch the analysis via command line:\n\n    mixbaba -f [funnel_file.json] -k [API secret]\n\nThe tool will extract the data relative to the funnel from Mixpanel, \nand the output will be put in the same directory as CSV files, \nas many as the funnels specified in the JSON file given in input.\n\nBy default no output will be sent to the console. If you want a CSV file as output you can ask it with\n\n    mixbaba -f [funnel_file.json] -k [API secret] -o csv\n\n### Example result\n\nThis is the standard output format for the analysis of a funnel\n\n| Group            |   Control Impressions |   Control Conversions |   test Impressions |   test Conversions |   test CR improvement |   test Probability |                                                                                                                     \n|:-----------------|----------------------:|----------------------:|-------------------:|-------------------:|----------------------:|-------------------:|\n| All.All          |                 34164 |                   253 |              31105 |                284 |              0.232387 |           0.992551 |\n| goal.PREVENT     |                  6175 |                    25 |               6016 |                 37 |              0.500153 |           0.947624 |\n| goal.PLAN        |                  1561 |                     5 |               1411 |                  5 |              0.106157 |           0.568093 |\n| $country_code.US |                 16631 |                   224 |              15438 |                242 |              0.163448 |           0.95048  |\n| $country_code.SE |                  8024 |                    23 |               7275 |                 35 |              0.654391 |           0.974175 |\n\nOr, if you specify the option `-of long` at the command launch:\n\n| Discriminant       | Cohort   | Comment                       |   Control Impressions |   Control Conversions |   test Impressions |   test Conversions |   test CR improvement |   test Probability |                                                                        \n|:-------------------|:---------|:------------------------------|----------------------:|----------------------:|-------------------:|-------------------:|----------------------:|-------------------:|\n| None               | All      | Result for test is OK!        |                 34164 |                   253 |              31105 |                284 |              0.232387 |           0.992551 |\n| user.goal          | PREVENT  | Result for test is uncertain. |                  6175 |                    25 |               6016 |                 37 |              0.500153 |           0.947624 |\n| user.goal          | PLAN     | Result for test is uncertain. |                  1561 |                     5 |               1411 |                  5 |              0.106157 |           0.568093 |\n| user.$country_code | US       | Result for test is OK!        |                 16631 |                   224 |              15438 |                242 |              0.163448 |           0.95048  |\n| user.$country_code | SE       | Result for test is OK!        |                  8024 |                    23 |               7275 |                 35 |              0.654391 |           0.974175 |\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "mixbaba", "package_url": "https://pypi.org/project/mixbaba/", "platform": "", "project_url": "https://pypi.org/project/mixbaba/", "project_urls": null, "release_url": "https://pypi.org/project/mixbaba/0.1.1/", "requires_dist": ["numpy", "pandas", "numba", "matplotlib", "scipy", "tqdm", "tabulate"], "requires_python": ">=3.6", "summary": "A tool to analyze AB tests data from Mixpanel funnels", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>MIXpanel Bayesian AB test Analysis tool (MixBABA)</h1>\n<p>This tool is intended to consume a JSON file containing details about a Mixpanel funnel and output the results of the analysis made whithin a Bayesian framework.</p>\n<p>You can find details about the data processing <a href=\"https://towardsdatascience.com/bayesian-a-b-testing-with-python-the-easy-guide-d638f89e0b8a\" rel=\"nofollow\">here</a>.</p>\n<h2>Installation</h2>\n<h3>From PyPi</h3>\n<p>Just easy as:</p>\n<pre><code>pip install mixbaba\n</code></pre>\n<h3>From sources</h3>\n<p>To install this package you have to clone the repository:</p>\n<pre><code>git clone https://github.com/NaturalCycles/MixBABA.git\n</code></pre>\n<p>You can run the unit tests, to ensure the tool will work:</p>\n<pre><code>cd MixBABA \npython setup.py test\n</code></pre>\n<p>And then you can install the tool via PIP:</p>\n<pre><code>pip install .\n</code></pre>\n<h2>Usage</h2>\n<p>You can find the full documentation <a href=\"https://mixbaba.readthedocs.io/en/latest/\" rel=\"nofollow\">here</a>,\nbut if you want a short guide read the following.</p>\n<p>To use MixBABA you have need:</p>\n<ul>\n<li>a JSON file containing a list of the funnels together with the details about them\n(an example is in this repository)</li>\n<li>the \"API secret\" to connect to Mixpanel; You can find your one in the settings\ndialog of the Mixpanel web application.</li>\n</ul>\n<p>Then you can launch the analysis via command line:</p>\n<pre><code>mixbaba -f [funnel_file.json] -k [API secret]\n</code></pre>\n<p>The tool will extract the data relative to the funnel from Mixpanel,\nand the output will be put in the same directory as CSV files,\nas many as the funnels specified in the JSON file given in input.</p>\n<p>By default no output will be sent to the console. If you want a CSV file as output you can ask it with</p>\n<pre><code>mixbaba -f [funnel_file.json] -k [API secret] -o csv\n</code></pre>\n<h3>Example result</h3>\n<p>This is the standard output format for the analysis of a funnel</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Group</th>\n<th align=\"right\">Control Impressions</th>\n<th align=\"right\">Control Conversions</th>\n<th align=\"right\">test Impressions</th>\n<th align=\"right\">test Conversions</th>\n<th align=\"right\">test CR improvement</th>\n<th align=\"right\">test Probability</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">All.All</td>\n<td align=\"right\">34164</td>\n<td align=\"right\">253</td>\n<td align=\"right\">31105</td>\n<td align=\"right\">284</td>\n<td align=\"right\">0.232387</td>\n<td align=\"right\">0.992551</td>\n</tr>\n<tr>\n<td align=\"left\">goal.PREVENT</td>\n<td align=\"right\">6175</td>\n<td align=\"right\">25</td>\n<td align=\"right\">6016</td>\n<td align=\"right\">37</td>\n<td align=\"right\">0.500153</td>\n<td align=\"right\">0.947624</td>\n</tr>\n<tr>\n<td align=\"left\">goal.PLAN</td>\n<td align=\"right\">1561</td>\n<td align=\"right\">5</td>\n<td align=\"right\">1411</td>\n<td align=\"right\">5</td>\n<td align=\"right\">0.106157</td>\n<td align=\"right\">0.568093</td>\n</tr>\n<tr>\n<td align=\"left\">$country_code.US</td>\n<td align=\"right\">16631</td>\n<td align=\"right\">224</td>\n<td align=\"right\">15438</td>\n<td align=\"right\">242</td>\n<td align=\"right\">0.163448</td>\n<td align=\"right\">0.95048</td>\n</tr>\n<tr>\n<td align=\"left\">$country_code.SE</td>\n<td align=\"right\">8024</td>\n<td align=\"right\">23</td>\n<td align=\"right\">7275</td>\n<td align=\"right\">35</td>\n<td align=\"right\">0.654391</td>\n<td align=\"right\">0.974175</td>\n</tr></tbody></table>\n<p>Or, if you specify the option <code>-of long</code> at the command launch:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Discriminant</th>\n<th align=\"left\">Cohort</th>\n<th align=\"left\">Comment</th>\n<th align=\"right\">Control Impressions</th>\n<th align=\"right\">Control Conversions</th>\n<th align=\"right\">test Impressions</th>\n<th align=\"right\">test Conversions</th>\n<th align=\"right\">test CR improvement</th>\n<th align=\"right\">test Probability</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">None</td>\n<td align=\"left\">All</td>\n<td align=\"left\">Result for test is OK!</td>\n<td align=\"right\">34164</td>\n<td align=\"right\">253</td>\n<td align=\"right\">31105</td>\n<td align=\"right\">284</td>\n<td align=\"right\">0.232387</td>\n<td align=\"right\">0.992551</td>\n</tr>\n<tr>\n<td align=\"left\">user.goal</td>\n<td align=\"left\">PREVENT</td>\n<td align=\"left\">Result for test is uncertain.</td>\n<td align=\"right\">6175</td>\n<td align=\"right\">25</td>\n<td align=\"right\">6016</td>\n<td align=\"right\">37</td>\n<td align=\"right\">0.500153</td>\n<td align=\"right\">0.947624</td>\n</tr>\n<tr>\n<td align=\"left\">user.goal</td>\n<td align=\"left\">PLAN</td>\n<td align=\"left\">Result for test is uncertain.</td>\n<td align=\"right\">1561</td>\n<td align=\"right\">5</td>\n<td align=\"right\">1411</td>\n<td align=\"right\">5</td>\n<td align=\"right\">0.106157</td>\n<td align=\"right\">0.568093</td>\n</tr>\n<tr>\n<td align=\"left\">user.$country_code</td>\n<td align=\"left\">US</td>\n<td align=\"left\">Result for test is OK!</td>\n<td align=\"right\">16631</td>\n<td align=\"right\">224</td>\n<td align=\"right\">15438</td>\n<td align=\"right\">242</td>\n<td align=\"right\">0.163448</td>\n<td align=\"right\">0.95048</td>\n</tr>\n<tr>\n<td align=\"left\">user.$country_code</td>\n<td align=\"left\">SE</td>\n<td align=\"left\">Result for test is OK!</td>\n<td align=\"right\">8024</td>\n<td align=\"right\">23</td>\n<td align=\"right\">7275</td>\n<td align=\"right\">35</td>\n<td align=\"right\">0.654391</td>\n<td align=\"right\">0.974175</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 4790750, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "af4677534ee880e44fd131e89e1ca4b9", "sha256": "f113957eda952626cde6a49928a0926d4265c34a9adcd620bda214113529ac93"}, "downloads": -1, "filename": "mixbaba-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "af4677534ee880e44fd131e89e1ca4b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12360, "upload_time": "2019-01-25T13:31:56", "upload_time_iso_8601": "2019-01-25T13:31:56.253649Z", "url": "https://files.pythonhosted.org/packages/53/a9/01768816b1bf9ec4ef5b694cdea5ede53e3483d1decf887d90d4a25b5ecc/mixbaba-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "add80897281599b719d6590aebdbdd8d", "sha256": "bc4dbbe092df3665c071ee842fe2cf0040c6eb915279af4beef7bf55d4e85c96"}, "downloads": -1, "filename": "mixbaba-0.1.tar.gz", "has_sig": false, "md5_digest": "add80897281599b719d6590aebdbdd8d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11216, "upload_time": "2019-01-25T13:31:58", "upload_time_iso_8601": "2019-01-25T13:31:58.451575Z", "url": "https://files.pythonhosted.org/packages/95/1e/6b241272fa126d349092ac68863c99b58ae552fa6aff042eadc4dce20ea2/mixbaba-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "024bef90241d9852a5b0e1087d67aa9e", "sha256": "f52f00572209ba6a8283f98850dcbe84b89421530f75b714b439262b40aa392d"}, "downloads": -1, "filename": "mixbaba-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "024bef90241d9852a5b0e1087d67aa9e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12666, "upload_time": "2019-01-25T14:53:12", "upload_time_iso_8601": "2019-01-25T14:53:12.320406Z", "url": "https://files.pythonhosted.org/packages/42/82/784bbd80d30bd165bb52a60eca16c87aaa65c0a65b40c547bc8b83cc9373/mixbaba-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "137e6e471c1ca8004b06588644a324ff", "sha256": "4056431b6f06f0d18f87603207aea9f662255718edc63c1055e89c32b26593b1"}, "downloads": -1, "filename": "mixbaba-0.1.1.tar.gz", "has_sig": false, "md5_digest": "137e6e471c1ca8004b06588644a324ff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11835, "upload_time": "2019-01-25T14:53:13", "upload_time_iso_8601": "2019-01-25T14:53:13.862156Z", "url": "https://files.pythonhosted.org/packages/40/a4/0d0867a42e6c824a2233b53b28949993101a6ea23e28e8a4d11aefffdb98/mixbaba-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "024bef90241d9852a5b0e1087d67aa9e", "sha256": "f52f00572209ba6a8283f98850dcbe84b89421530f75b714b439262b40aa392d"}, "downloads": -1, "filename": "mixbaba-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "024bef90241d9852a5b0e1087d67aa9e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12666, "upload_time": "2019-01-25T14:53:12", "upload_time_iso_8601": "2019-01-25T14:53:12.320406Z", "url": "https://files.pythonhosted.org/packages/42/82/784bbd80d30bd165bb52a60eca16c87aaa65c0a65b40c547bc8b83cc9373/mixbaba-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "137e6e471c1ca8004b06588644a324ff", "sha256": "4056431b6f06f0d18f87603207aea9f662255718edc63c1055e89c32b26593b1"}, "downloads": -1, "filename": "mixbaba-0.1.1.tar.gz", "has_sig": false, "md5_digest": "137e6e471c1ca8004b06588644a324ff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11835, "upload_time": "2019-01-25T14:53:13", "upload_time_iso_8601": "2019-01-25T14:53:13.862156Z", "url": "https://files.pythonhosted.org/packages/40/a4/0d0867a42e6c824a2233b53b28949993101a6ea23e28e8a4d11aefffdb98/mixbaba-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:56 2020"}