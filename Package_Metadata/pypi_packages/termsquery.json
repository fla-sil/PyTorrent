{"info": {"author": "gruzovator", "author_email": "gruzovator@github.com", "bugtrack_url": null, "classifiers": [], "description": "# Boolean Search for Python Containers\n\nLibrary to make simple boolean queries for python string containers (e.g. sets or lists).\nE.g. query built from expression 'Alice & Bob & ~John' can be applied to any container to check if it contains strings 'Alice' and 'Bob' and not contains 'John'.\n\nBase example:\n\n```python\n#!/usr/bin/env python\n\nfrom termsquery import TermsQuery\n\nquery = TermsQuery('Alice & (Bob | \"Unknown user\")')\n\ncontainer1 = {'Alice', 'Unknown user'}\ncontainer2 = {'Bob'}\n\nassert True == query(container1)\nassert False == query(container2)\n```\n\nLibrary can be used to tag collection of documents: create query for each tag\nand apply that query for document words.\n\nSimple tagging example:\n\n```python\n#!/usr/bin/env python\n\nfrom termsquery import TermsQuery\n\ntags = {\n    'A-not-B' : TermsQuery('A & ~B'),\n    'X-and-Y' : TermsQuery('X & Y')\n}\n\ndocs = [\n    'A is the first letter of ...',\n    'A and B letters, X and Y letters'\n]\n\nfor doc in docs:\n    words = doc.split()\n    doc_tags = [name for (name, query) in tags.items() if query(words)]\n    print(doc, doc_tags)\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gruzovator/termsquery", "keywords": "boolean expression,logic,expression parser,tagging,tag", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "termsquery", "package_url": "https://pypi.org/project/termsquery/", "platform": "", "project_url": "https://pypi.org/project/termsquery/", "project_urls": {"Homepage": "https://github.com/gruzovator/termsquery"}, "release_url": "https://pypi.org/project/termsquery/0.2/", "requires_dist": null, "requires_python": ">=3", "summary": "Terms boolean expressions to query containers", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Boolean Search for Python Containers</h1>\n<p>Library to make simple boolean queries for python string containers (e.g. sets or lists).\nE.g. query built from expression 'Alice &amp; Bob &amp; ~John' can be applied to any container to check if it contains strings 'Alice' and 'Bob' and not contains 'John'.</p>\n<p>Base example:</p>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">termsquery</span> <span class=\"kn\">import</span> <span class=\"n\">TermsQuery</span>\n\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">TermsQuery</span><span class=\"p\">(</span><span class=\"s1\">'Alice &amp; (Bob | \"Unknown user\")'</span><span class=\"p\">)</span>\n\n<span class=\"n\">container1</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'Alice'</span><span class=\"p\">,</span> <span class=\"s1\">'Unknown user'</span><span class=\"p\">}</span>\n<span class=\"n\">container2</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'Bob'</span><span class=\"p\">}</span>\n\n<span class=\"k\">assert</span> <span class=\"kc\">True</span> <span class=\"o\">==</span> <span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">container1</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"kc\">False</span> <span class=\"o\">==</span> <span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">container2</span><span class=\"p\">)</span>\n</pre>\n<p>Library can be used to tag collection of documents: create query for each tag\nand apply that query for document words.</p>\n<p>Simple tagging example:</p>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">termsquery</span> <span class=\"kn\">import</span> <span class=\"n\">TermsQuery</span>\n\n<span class=\"n\">tags</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'A-not-B'</span> <span class=\"p\">:</span> <span class=\"n\">TermsQuery</span><span class=\"p\">(</span><span class=\"s1\">'A &amp; ~B'</span><span class=\"p\">),</span>\n    <span class=\"s1\">'X-and-Y'</span> <span class=\"p\">:</span> <span class=\"n\">TermsQuery</span><span class=\"p\">(</span><span class=\"s1\">'X &amp; Y'</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">docs</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s1\">'A is the first letter of ...'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'A and B letters, X and Y letters'</span>\n<span class=\"p\">]</span>\n\n<span class=\"k\">for</span> <span class=\"n\">doc</span> <span class=\"ow\">in</span> <span class=\"n\">docs</span><span class=\"p\">:</span>\n    <span class=\"n\">words</span> <span class=\"o\">=</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()</span>\n    <span class=\"n\">doc_tags</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">name</span> <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">tags</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">words</span><span class=\"p\">)]</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"p\">,</span> <span class=\"n\">doc_tags</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 3786657, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "042a98718271688c2f654c8966c1e87a", "sha256": "eaa84dc911a66185c56d8dce419dd68d05e94589cb2b70e765bdf53c712cc3d0"}, "downloads": -1, "filename": "termsquery-0.1.tar.gz", "has_sig": false, "md5_digest": "042a98718271688c2f654c8966c1e87a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 3421, "upload_time": "2018-03-10T19:24:43", "upload_time_iso_8601": "2018-03-10T19:24:43.467169Z", "url": "https://files.pythonhosted.org/packages/a6/ba/c541c703493d3a86f47fcabbe12056b9f05e2e794ce238778dc4e663c962/termsquery-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "2f45d28c1e0f136f13fddf5685d45b77", "sha256": "598bd011d51cf293ee49b5c3049c5797e69b83650272e3579995065b302585f4"}, "downloads": -1, "filename": "termsquery-0.2.tar.gz", "has_sig": false, "md5_digest": "2f45d28c1e0f136f13fddf5685d45b77", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 3851, "upload_time": "2018-04-21T05:04:59", "upload_time_iso_8601": "2018-04-21T05:04:59.463559Z", "url": "https://files.pythonhosted.org/packages/63/07/0d4395cd0ffa2312237cc0ffae654019cabf677d95bcc3021b96f15fb9a9/termsquery-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2f45d28c1e0f136f13fddf5685d45b77", "sha256": "598bd011d51cf293ee49b5c3049c5797e69b83650272e3579995065b302585f4"}, "downloads": -1, "filename": "termsquery-0.2.tar.gz", "has_sig": false, "md5_digest": "2f45d28c1e0f136f13fddf5685d45b77", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 3851, "upload_time": "2018-04-21T05:04:59", "upload_time_iso_8601": "2018-04-21T05:04:59.463559Z", "url": "https://files.pythonhosted.org/packages/63/07/0d4395cd0ffa2312237cc0ffae654019cabf677d95bcc3021b96f15fb9a9/termsquery-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:52 2020"}