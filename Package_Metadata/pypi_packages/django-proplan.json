{"info": {"author": "Grigoriy Kramarenko", "author_email": "root@rosix.ru", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.2", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Natural Language :: Russian", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "=======\nProplan\n=======\n\nDjango application to assign a tasks, defining bugs and planning of your\nproject.\n\n\nInstallation\n------------\n\n.. code-block:: shell\n\n    pip3 install django-proplan\n\n\nQuick start\n-----------\n\n1. Add \"proplan\" to your INSTALLED_APPS setting like this:\n\n.. code-block:: python\n\n    INSTALLED_APPS = [\n        ...\n        'proplan',\n    ]\n\n2. Include the polls URLconf in your project urls.py like this:\n\n.. code-block:: python\n\n    path('plan/', include('proplan.urls')),\n\n3. Run `python3 manage.py migrate` to create the Proplan models.\n\n4. Run `python3 manage.py createsuperuser` to create the user if you don't\n   have one.\n\n5. Start the development server and visit http://127.0.0.1:8000/admin/\n   to login (you'll need the Admin app enabled).\n\n6. Visit http://127.0.0.1:8000/plan/ to create your plan of work on project.\n\n\nAutomatic Bug System\n--------------------\n\nThe Proplan allows you to enable automatic publication of errors that have\noccurred in the project through ABS - Automatic Bug System. There are 2\nways to do this:\n\n1. Logging errors directly to server.\n2. Sending errors through API.\n\n\nLogging errors\n~~~~~~~~~~~~~~\n\nConnect \"proplan.log.ABSHandler\" to your LOGGING setting like this:\n\n.. code-block:: python\n\n    LOGGING = {\n        'version': 1,\n        'disable_existing_loggers': False,\n        ...\n        'handlers': {\n            ...\n            'abs': {\n                'class': 'proplan.log.ABSHandler',\n                'level': 'ERROR',\n            }\n        },\n        'loggers': {\n            ...\n            'django': {\n                'handlers': ['abs'],\n                'level': 'ERROR',\n            },\n        },\n    }\n\n\nSending errors\n~~~~~~~~~~~~~~\n\n1. Add \"ABS_KEY\" to your PROPLAN setting like this:\n\n.. code-block:: python\n\n    PROPLAN = {\n        ...\n        'ABS_KEY': 'cookie-supported-key',\n    }\n\n2. Make POST response with data of bug to API:\n\n.. code-block:: shell\n\n    curl -H 'Cookie: proplanabs=cookie-supported-key' \\\n    --data-urlencode 'title=Bug in mobile app&message=More...' \\\n    http://127.0.0.1:8000/plan/abs/create/\n\n\nSettings\n--------\n\nAll next settings must be within the dictionary `PROPLAN`, when you\ndefine them in the file settings.py\n\nACCESS_FUNCTION\n~~~~~~~~~~~~~~~\n\nFunction that checks access to resources. You may want to use:\n\n1. `proplan.access.authenticated` - for authenticated users.\n2. `proplan.access.staff` - for employers and superusers.\n3. `proplan.access.superuser` - for superusers only.\n4. `proplan.access.view_thread` - for users with view permission for Thread\n   model.\n5. any custom function.\n\nThe default is the internal function `proplan.access.view_thread`.\n\nABS_KEY\n~~~~~~~\n\nThe options for Automatic Bug System. While there is no key, the system does\nnot work. By default no key.\n\nABS_COOKIE_NAME\n~~~~~~~~~~~~~~~\n\nThe cookie name for checking the ABS key. By default is `proplanabs`.\n\nATTACH_UPLOAD_PATH\n~~~~~~~~~~~~~~~~~~\n\nPath to uploading files. By default is:\n\n.. code-block:: python\n\n    'proplan/attaches/%(date)s/%(code)s/%(filename)s'\n\nATTACH_THUMB_SIZE\n~~~~~~~~~~~~~~~~~\n\nThe size of the thumbnails for attached images. By default is:\n\n.. code-block:: python\n\n    (300, 300)\n\nATTACH_THUMB_EXTENSIONS\n~~~~~~~~~~~~~~~~~~~~~~~\n\nList of recognized image extensions to be previewed. By default is:\n\n.. code-block:: python\n\n    ['.png', '.jpg', '.jpeg', '.bmp']\n\n\nPRIORITIES\n~~~~~~~~~~\n\nList of recognized image extensions to be previewed. By default is:\n\n.. code-block:: python\n\n    [\n        (1, _('low')),\n        (2, _('normal')),\n        (3, _('high')),\n        (4, _('urgent')),\n        (5, _('immediate')),\n    ]\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/djbaldey/django-proplan/", "keywords": "", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "django-proplan", "package_url": "https://pypi.org/project/django-proplan/", "platform": "any", "project_url": "https://pypi.org/project/django-proplan/", "project_urls": {"Homepage": "https://gitlab.com/djbaldey/django-proplan/"}, "release_url": "https://pypi.org/project/django-proplan/0.0.1.dev20190419055027/", "requires_dist": null, "requires_python": "", "summary": "Django application to assign the tasks and planning of your project.", "version": "0.0.1.dev20190419055027", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Django application to assign a tasks, defining bugs and planning of your\nproject.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip3 install django-proplan\n</pre>\n</div>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<ol>\n<li>Add \u201cproplan\u201d to your INSTALLED_APPS setting like this:</li>\n</ol>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'proplan'</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre>\n<ol>\n<li>Include the polls URLconf in your project urls.py like this:</li>\n</ol>\n<pre><span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s1\">'plan/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'proplan.urls'</span><span class=\"p\">)),</span>\n</pre>\n<ol>\n<li>Run <cite>python3 manage.py migrate</cite> to create the Proplan models.</li>\n<li>Run <cite>python3 manage.py createsuperuser</cite> to create the user if you don\u2019t\nhave one.</li>\n<li>Start the development server and visit <a href=\"http://127.0.0.1:8000/admin/\" rel=\"nofollow\">http://127.0.0.1:8000/admin/</a>\nto login (you\u2019ll need the Admin app enabled).</li>\n<li>Visit <a href=\"http://127.0.0.1:8000/plan/\" rel=\"nofollow\">http://127.0.0.1:8000/plan/</a> to create your plan of work on project.</li>\n</ol>\n</div>\n<div id=\"automatic-bug-system\">\n<h2>Automatic Bug System</h2>\n<p>The Proplan allows you to enable automatic publication of errors that have\noccurred in the project through ABS - Automatic Bug System. There are 2\nways to do this:</p>\n<ol>\n<li>Logging errors directly to server.</li>\n<li>Sending errors through API.</li>\n</ol>\n<div id=\"logging-errors\">\n<h3>Logging errors</h3>\n<p>Connect \u201cproplan.log.ABSHandler\u201d to your LOGGING setting like this:</p>\n<pre><span class=\"n\">LOGGING</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'version'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s1\">'disable_existing_loggers'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"o\">...</span>\n        <span class=\"s1\">'abs'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'class'</span><span class=\"p\">:</span> <span class=\"s1\">'proplan.log.ABSHandler'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"s1\">'ERROR'</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'loggers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"o\">...</span>\n        <span class=\"s1\">'django'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'abs'</span><span class=\"p\">],</span>\n            <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"s1\">'ERROR'</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"sending-errors\">\n<h3>Sending errors</h3>\n<ol>\n<li>Add \u201cABS_KEY\u201d to your PROPLAN setting like this:</li>\n</ol>\n<pre><span class=\"n\">PROPLAN</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'ABS_KEY'</span><span class=\"p\">:</span> <span class=\"s1\">'cookie-supported-key'</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</pre>\n<ol>\n<li>Make POST response with data of bug to API:</li>\n</ol>\n<pre>curl -H <span class=\"s1\">'Cookie: proplanabs=cookie-supported-key'</span> <span class=\"se\">\\\n</span>--data-urlencode <span class=\"s1\">'title=Bug in mobile app&amp;message=More...'</span> <span class=\"se\">\\\n</span>http://127.0.0.1:8000/plan/abs/create/\n</pre>\n</div>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p>All next settings must be within the dictionary <cite>PROPLAN</cite>, when you\ndefine them in the file settings.py</p>\n<div id=\"access-function\">\n<h3>ACCESS_FUNCTION</h3>\n<p>Function that checks access to resources. You may want to use:</p>\n<ol>\n<li><cite>proplan.access.authenticated</cite> - for authenticated users.</li>\n<li><cite>proplan.access.staff</cite> - for employers and superusers.</li>\n<li><cite>proplan.access.superuser</cite> - for superusers only.</li>\n<li><cite>proplan.access.view_thread</cite> - for users with view permission for Thread\nmodel.</li>\n<li>any custom function.</li>\n</ol>\n<p>The default is the internal function <cite>proplan.access.view_thread</cite>.</p>\n</div>\n<div id=\"abs-key\">\n<h3>ABS_KEY</h3>\n<p>The options for Automatic Bug System. While there is no key, the system does\nnot work. By default no key.</p>\n</div>\n<div id=\"abs-cookie-name\">\n<h3>ABS_COOKIE_NAME</h3>\n<p>The cookie name for checking the ABS key. By default is <cite>proplanabs</cite>.</p>\n</div>\n<div id=\"attach-upload-path\">\n<h3>ATTACH_UPLOAD_PATH</h3>\n<p>Path to uploading files. By default is:</p>\n<pre><span class=\"s1\">'proplan/attaches/</span><span class=\"si\">%(date)s</span><span class=\"s1\">/</span><span class=\"si\">%(code)s</span><span class=\"s1\">/</span><span class=\"si\">%(filename)s</span><span class=\"s1\">'</span>\n</pre>\n</div>\n<div id=\"attach-thumb-size\">\n<h3>ATTACH_THUMB_SIZE</h3>\n<p>The size of the thumbnails for attached images. By default is:</p>\n<pre><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"attach-thumb-extensions\">\n<h3>ATTACH_THUMB_EXTENSIONS</h3>\n<p>List of recognized image extensions to be previewed. By default is:</p>\n<pre><span class=\"p\">[</span><span class=\"s1\">'.png'</span><span class=\"p\">,</span> <span class=\"s1\">'.jpg'</span><span class=\"p\">,</span> <span class=\"s1\">'.jpeg'</span><span class=\"p\">,</span> <span class=\"s1\">'.bmp'</span><span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"priorities\">\n<h3>PRIORITIES</h3>\n<p>List of recognized image extensions to be previewed. By default is:</p>\n<pre><span class=\"p\">[</span>\n    <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s1\">'low'</span><span class=\"p\">)),</span>\n    <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s1\">'normal'</span><span class=\"p\">)),</span>\n    <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s1\">'high'</span><span class=\"p\">)),</span>\n    <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s1\">'urgent'</span><span class=\"p\">)),</span>\n    <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s1\">'immediate'</span><span class=\"p\">)),</span>\n<span class=\"p\">]</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5163451, "releases": {"0.0.1.dev20190419055027": [{"comment_text": "", "digests": {"md5": "6613e6fc0918c50f4c533b1e7cb5c8dc", "sha256": "7c49f7061ad3b3c678648c488b0f331b43c6b408249bef4a8550321237e655c7"}, "downloads": -1, "filename": "django-proplan-0.0.1.dev20190419055027.tar.gz", "has_sig": false, "md5_digest": "6613e6fc0918c50f4c533b1e7cb5c8dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1290313, "upload_time": "2019-04-19T05:53:12", "upload_time_iso_8601": "2019-04-19T05:53:12.748458Z", "url": "https://files.pythonhosted.org/packages/2a/c8/e98ed9dfe3f10452294c01726e37907ae8a62a1237f03d120261b7c6ecdc/django-proplan-0.0.1.dev20190419055027.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6613e6fc0918c50f4c533b1e7cb5c8dc", "sha256": "7c49f7061ad3b3c678648c488b0f331b43c6b408249bef4a8550321237e655c7"}, "downloads": -1, "filename": "django-proplan-0.0.1.dev20190419055027.tar.gz", "has_sig": false, "md5_digest": "6613e6fc0918c50f4c533b1e7cb5c8dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1290313, "upload_time": "2019-04-19T05:53:12", "upload_time_iso_8601": "2019-04-19T05:53:12.748458Z", "url": "https://files.pythonhosted.org/packages/2a/c8/e98ed9dfe3f10452294c01726e37907ae8a62a1237f03d120261b7c6ecdc/django-proplan-0.0.1.dev20190419055027.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:40 2020"}