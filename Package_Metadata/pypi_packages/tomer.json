{"info": {"author": "Japheth Gado", "author_email": "japhethgado@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering"], "description": "**TOMER: Temperature Optima for Enzymes with Resampling**\n------------------------------------------------------------\n\nTOMER is a Python package for predicting the catalytic optimum temperature (Topt) of enzymes with machine learning. TOMER was trained with a bagging ensemble on a dataset of 2,917 proteins. To prevent large error on the prediction of higher temperature values, resampling strategies were applied to mitigate the effects of the imbalanced distribution of the dataset. Code for design of TOMER can be found `here <https://github.com/jafetgado/tomerdesign>`_.\n\nCitation\n----------\nIf you find TOMER useful, please cite:\n\nGado, J.E., Beckham, G.T., and Payne, C.M. (2020). Improving enzyme optimum temperature prediction with resampling strategies and ensemble learning.\n\n\nInstallation\n-------------\nInstall with pip\n\n.. code:: shell-session\n\n    pip install tomer\n\nOr from source\n\n.. code:: shell-session\n\n    git clone https://github.com/jafetgado/resreg.git\n    cd tomer\n    python setup.py install\n\n\n\nPrerequisites\n----------------\n(version used in this work)\n\n1. Python 3 (3.6.6)\n2. Scikit-learn (0.21.2)\n3. Numpy (1.14.2)\n4. Pandas (0.24.1)\n5. Joblib (0.13.2)\n\n\nUsage\n-----\nTwo main functions in TOMER for predicting the enzyme optimum temperature: ``pred_seq_topt``, which predicts optimum temperature of a single protein sequence (string), and ``pred_fasta_topt``, which predicts the optimum temperatures of protein sequences in a fasta file. To use these functions, you have to specify the optimal growth temperature (OGT) of the source organism of the protein. If the OGT is not known, a prediction may be obtained using `TOME <https://github.com/EngqvistLab/Tome>`_.\n\n\n\nExamples\n----------\n.. code:: python\n\n    import tomer\n\n    # Predict optimum temperature of a single sequence.\n    sequence = '''MKKQVVEVLVEGGKATPGPPLGPAIGPLGLNVKQVVDKINEATKEFAGMQVPVKIIV\n                  DPVTKQFEIEVGVPPTSQLIKKELGLEKGSGEPKHNIVGNLTMEQVIKIAKMKRSQML\n                  ALTLKAAAKEVIGTALSMGVTVEGKDPRIVQREIDEGVYDELFEKAEKE'''\n    ogt = 95\n    y_pred, y_err = pred_seq_topt(sequence, ogt)\n    print(y_pred)   # predicted optimum temperature\n    82.415\n    print(y_err)    # Standard error of prediction (over 100 base learners in ensemble)\n    2.0913518953060004\n\n    # Predict optimum temperatures of sequences in fasta file\n    fasta_file = 'test/sequences.fasta'\n    ogt_file = 'test/ogts.txt'\n    df = pred_fasta_topt(fasta_file, ogt_file) # returns dataframe\n    print(df)\n      Sequence    Topt   Std err\n    0   P43408  79.345   1.53561\n    1   Q97X08  81.705  0.442442\n    2   F8A9V0   76.37   1.16195\n\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jafetgado/tomer", "keywords": "machine-learning enzymes thermostability", "license": "GNU GPLv3", "maintainer": "", "maintainer_email": "", "name": "tomer", "package_url": "https://pypi.org/project/tomer/", "platform": "", "project_url": "https://pypi.org/project/tomer/", "project_urls": {"Homepage": "https://github.com/jafetgado/tomer"}, "release_url": "https://pypi.org/project/tomer/0.1/", "requires_dist": ["numpy (>=1.14.0)", "pandas (>=0.24.0)", "scipy (>=1.0.0)", "scikit-learn (>=0.21.0)", "joblib (>=0.13.0)"], "requires_python": ">=3", "summary": "Predicting enzyme catalytic optimum temperature with ML", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"tomer-temperature-optima-for-enzymes-with-resampling\">\n<h2><strong>TOMER: Temperature Optima for Enzymes with Resampling</strong></h2>\n<p>TOMER is a Python package for predicting the catalytic optimum temperature (Topt) of enzymes with machine learning. TOMER was trained with a bagging ensemble on a dataset of 2,917 proteins. To prevent large error on the prediction of higher temperature values, resampling strategies were applied to mitigate the effects of the imbalanced distribution of the dataset. Code for design of TOMER can be found <a href=\"https://github.com/jafetgado/tomerdesign\" rel=\"nofollow\">here</a>.</p>\n</div>\n<div id=\"citation\">\n<h2>Citation</h2>\n<p>If you find TOMER useful, please cite:</p>\n<p>Gado, J.E., Beckham, G.T., and Payne, C.M. (2020). Improving enzyme optimum temperature prediction with resampling strategies and ensemble learning.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install with pip</p>\n<pre><span class=\"go\">pip install tomer</span>\n</pre>\n<p>Or from source</p>\n<pre><span class=\"go\">git clone https://github.com/jafetgado/resreg.git\ncd tomer\npython setup.py install</span>\n</pre>\n</div>\n<div id=\"prerequisites\">\n<h2>Prerequisites</h2>\n<p>(version used in this work)</p>\n<ol>\n<li>Python 3 (3.6.6)</li>\n<li>Scikit-learn (0.21.2)</li>\n<li>Numpy (1.14.2)</li>\n<li>Pandas (0.24.1)</li>\n<li>Joblib (0.13.2)</li>\n</ol>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Two main functions in TOMER for predicting the enzyme optimum temperature: <tt>pred_seq_topt</tt>, which predicts optimum temperature of a single protein sequence (string), and <tt>pred_fasta_topt</tt>, which predicts the optimum temperatures of protein sequences in a fasta file. To use these functions, you have to specify the optimal growth temperature (OGT) of the source organism of the protein. If the OGT is not known, a prediction may be obtained using <a href=\"https://github.com/EngqvistLab/Tome\" rel=\"nofollow\">TOME</a>.</p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">tomer</span>\n\n<span class=\"c1\"># Predict optimum temperature of a single sequence.</span>\n<span class=\"n\">sequence</span> <span class=\"o\">=</span> <span class=\"s1\">'''MKKQVVEVLVEGGKATPGPPLGPAIGPLGLNVKQVVDKINEATKEFAGMQVPVKIIV\n              DPVTKQFEIEVGVPPTSQLIKKELGLEKGSGEPKHNIVGNLTMEQVIKIAKMKRSQML\n              ALTLKAAAKEVIGTALSMGVTVEGKDPRIVQREIDEGVYDELFEKAEKE'''</span>\n<span class=\"n\">ogt</span> <span class=\"o\">=</span> <span class=\"mi\">95</span>\n<span class=\"n\">y_pred</span><span class=\"p\">,</span> <span class=\"n\">y_err</span> <span class=\"o\">=</span> <span class=\"n\">pred_seq_topt</span><span class=\"p\">(</span><span class=\"n\">sequence</span><span class=\"p\">,</span> <span class=\"n\">ogt</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">y_pred</span><span class=\"p\">)</span>   <span class=\"c1\"># predicted optimum temperature</span>\n<span class=\"mf\">82.415</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">y_err</span><span class=\"p\">)</span>    <span class=\"c1\"># Standard error of prediction (over 100 base learners in ensemble)</span>\n<span class=\"mf\">2.0913518953060004</span>\n\n<span class=\"c1\"># Predict optimum temperatures of sequences in fasta file</span>\n<span class=\"n\">fasta_file</span> <span class=\"o\">=</span> <span class=\"s1\">'test/sequences.fasta'</span>\n<span class=\"n\">ogt_file</span> <span class=\"o\">=</span> <span class=\"s1\">'test/ogts.txt'</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pred_fasta_topt</span><span class=\"p\">(</span><span class=\"n\">fasta_file</span><span class=\"p\">,</span> <span class=\"n\">ogt_file</span><span class=\"p\">)</span> <span class=\"c1\"># returns dataframe</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">)</span>\n  <span class=\"n\">Sequence</span>    <span class=\"n\">Topt</span>   <span class=\"n\">Std</span> <span class=\"n\">err</span>\n<span class=\"mi\">0</span>   <span class=\"n\">P43408</span>  <span class=\"mf\">79.345</span>   <span class=\"mf\">1.53561</span>\n<span class=\"mi\">1</span>   <span class=\"n\">Q97X08</span>  <span class=\"mf\">81.705</span>  <span class=\"mf\">0.442442</span>\n<span class=\"mi\">2</span>   <span class=\"n\">F8A9V0</span>   <span class=\"mf\">76.37</span>   <span class=\"mf\">1.16195</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 7098047, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "cb34baeca1ff5d81779808d784fff235", "sha256": "116e4ad9a92ea8c332c8ce6abffbe058acc58f83a5b6b4e8f41c92a1ff5c69e6"}, "downloads": -1, "filename": "tomer-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cb34baeca1ff5d81779808d784fff235", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 14703, "upload_time": "2020-04-25T06:06:55", "upload_time_iso_8601": "2020-04-25T06:06:55.835164Z", "url": "https://files.pythonhosted.org/packages/1d/29/d87c1c8319295e020684b2441173c71bf9a0dcfe09f440dd148993a981ae/tomer-0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cb34baeca1ff5d81779808d784fff235", "sha256": "116e4ad9a92ea8c332c8ce6abffbe058acc58f83a5b6b4e8f41c92a1ff5c69e6"}, "downloads": -1, "filename": "tomer-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cb34baeca1ff5d81779808d784fff235", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 14703, "upload_time": "2020-04-25T06:06:55", "upload_time_iso_8601": "2020-04-25T06:06:55.835164Z", "url": "https://files.pythonhosted.org/packages/1d/29/d87c1c8319295e020684b2441173c71bf9a0dcfe09f440dd148993a981ae/tomer-0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:51:17 2020"}