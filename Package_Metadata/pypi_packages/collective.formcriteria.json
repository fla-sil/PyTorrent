{"info": {"author": "Ross Patterson", "author_email": "me@rpatterson.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Plone", "Framework :: Plone :: 4.2", "Framework :: Plone :: 4.3", "License :: OSI Approved", "License :: OSI Approved :: GNU General Public License (GPL)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 2 :: Only", "Topic :: Software Development", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": ".. -*-doctest-*-\n\n=======================\ncollective.formcriteria\n=======================\n\nThis package extends the Products.ATContentTypes.criteria types to\ncreate search forms.  Specifically, any criterion fields which are\nselected in each criterion's \"Form Fields\" will be rendered on the\nsearch form.  The values set on the criteria edit form become the\ndefault values on the search form.  Search terms submitted through the\nsearch form supplement any criteria not on the search form.  IOW,\ncriteria not appearing on the form become the base query built into\nthe search form.\n\n.. contents:: Table of Contents\n\nA new \"Search Form\" display layout is provided that renders the search\nform and the collection body text but no results.  The search form on\nthis layout will display results using the layout specified in the\n\"Form Results Layout\" field of the collection's edit form.\n\nThe search form can also be rendered in a search form portlet based on\nplone.portlet.collection.  The portlet will not render on the search\nform view or the criteria edit form but otherwise will render the\nsearch form for the designated collection according to the portlet\nsettings.\n\nThus the collection can use either the search form or a results\nlisting as the display layout.  Users can initiate searches using\neither the form or the portlet.  The portlet also reflects any\nsubmitted search terms and thus provides a convenient way for users to\nrefine their searches.\n\nMultiple sort criteria can also be added that will render user\nselectable sort links on the batch macro.  See\ncollective/formcriteria/criteria/sort.rst for more details.\n\nA CSV export action is also provided which provides a link to users\nallowing them to download the collections results, subject to the\nuser's query in the CSV format.  This allows collections to be used,\nfor example, in conjunction with spreadsheet software for ad-hoc\nreporting or limited export to other systems.\n\nA folder contents table display layout is also included.  This layout\nis not yet fully functional but provides the basis for some very rich\nsite admin functionality.\n\nWARNING: Uninstall\n==================\n\nUninstalling this product after having added any collections or adding\ncriteria to any collections, even ones added before install, is\nuntested and may leave your collections broken.\n\nForm Criteria\n=============\n\nStart with some content for search results.\n\n    >>> from plone.app import testing\n    >>> from Products.CMFCore.utils import getToolByName\n    >>> portal = layer['portal']\n    >>> membership = getToolByName(portal, 'portal_membership')\n    >>> folder = membership.getHomeFolder(testing.TEST_USER_ID)\n    >>> testing.login(portal, testing.TEST_USER_NAME)\n    >>> folder['bar-document-title']\n    <ATDocument at /plone/Members/test_user_1_/bar-document-title>\n    >>> folder['baz-event-title']\n    <ATEvent at /plone/Members/test_user_1_/baz-event-title>\n\nOpen a browser and log in as a normal user.\n\n    >>> from plone.testing import z2\n    >>> browser = z2.Browser(layer['app'])\n    >>> browser.handleErrors = False\n    >>> browser.open(portal.absolute_url())\n    >>> browser.getLink('Log in').click()\n    >>> browser.getControl('Login Name').value = testing.TEST_USER_NAME\n    >>> browser.getControl(\n    ...     'Password').value = testing.TEST_USER_PASSWORD\n    >>> browser.getControl('Log in').click()\n\nAdd and publish a collection.\n\n    >>> browser.open(folder.absolute_url())\n    >>> browser.getLink('Collection').click()\n    >>> browser.getControl('Title').value = 'Foo Topic Title'\n    >>> browser.getControl('Save').click()\n    >>> print browser.contents\n    <...\n    ...Changes saved...\n    >>> foo_topic = folder['foo-topic-title']\n\n    >>> browser.getLink('Submit').click()\n    >>> print browser.contents\n    <...\n    ...Item state changed...\n\n    >>> z2.login(portal.getPhysicalRoot().acl_users, testing.SITE_OWNER_NAME)\n    >>> layer['portal'].portal_workflow.doActionFor(foo_topic, 'publish')\n    >>> testing.login(portal, testing.TEST_USER_NAME)\n\n    >>> import transaction\n    >>> transaction.commit()\n\nChange the display layout of the collection to the \"Search Form\".\n\n    >>> browser.getLink('Search Form').click()\n    >>> print browser.contents\n    <...\n    ...View changed...\n\nLogin as a user that can manage portlets.\n\n    >>> owner_browser = z2.Browser(layer['app'])\n    >>> owner_browser.handleErrors = False\n    >>> owner_browser.open(portal.absolute_url())\n    >>> owner_browser.getLink('Log in').click()\n    >>> owner_browser.getControl(\n    ...     'Login Name').value = testing.SITE_OWNER_NAME\n    >>> owner_browser.getControl(\n    ...     'Password').value = testing.TEST_USER_PASSWORD\n    >>> owner_browser.getControl('Log in').click()\n\nAdd the search form portlet for this collection to the folder.\n\n    >>> owner_browser.open(folder.absolute_url())\n    >>> owner_browser.getLink('Manage portlets').click()\n    >>> owner_browser.getControl(\n    ...     'Search form portlet', index=1).selected = True\n    >>> owner_browser.getForm(index=3).submit() # manually w/o JS\n    >>> print owner_browser.contents\n    <...\n    ...Add Search Form Portlet...\n\n    >>> header = owner_browser.getControl('Portlet header')\n    >>> header.value = 'Foo Search Form Title'\n    >>> foo_topic_path = '/'.join(\n    ...     ('',)+ foo_topic.getPhysicalPath()[\n    ...         len(portal.getPhysicalPath()):])\n    >>> header.mech_form.new_control(\n    ...     type='checkbox', name=\"form.target_collection\",\n    ...     attrs=dict(checked='checked', value=foo_topic_path))\n    >>> owner_browser.getControl('Save').click()\n    >>> print owner_browser.contents\n    <...\n    ...Foo Search Form Title...\n\nGo to the collection's edit tab and set the \"Form Results Layout\"\nfield.\n\n    >>> browser.getLink('Edit').click()\n    >>> browser.getControl('Collection').selected = True\n    >>> browser.getControl('Save').click()\n    >>> print browser.contents\n    <...\n    ...Changes saved...\n\nGo to the \"Criteria\" tab and add a criterion for the workflow state\nthat won't appear on the form.  Then set the query term to return only\npublished content.\n\n    >>> browser.getLink('Criteria').click()\n    >>> form = browser.getForm(name='criteria_select')\n    >>> form.getControl('State').selected = True\n    >>> form.getControl(\n    ...     'Select values from list', index=1).selected = True\n    >>> form.getControl('Add criteria').click()\n    >>> print browser.contents\n    <...\n    ...State...\n    ...Select values from list...\n\nSince the test browser doesn't have JavaScript, test the\ndiscrimination of criteria types by index manually.\n\n    >>> foo_topic.allowedCriteriaForField('review_state')\n    ['FormSelectionCriterion', 'FormCheckboxCriterion',\n    'FormPulldownCriterion', 'FormSimpleStringCriterion',\n    'FormListCriterion', 'FormCommaCriterion', 'FormSortCriterion',\n    'FormContextCriterion']\n    >>> foo_topic.allowedCriteriaForField(\n    ...     'review_state', display_list=True)\n    <DisplayList\n    [('FormSelectionCriterion', 'Select values from list'),\n     ('FormCheckboxCriterion', 'Check values'),\n     ('FormPulldownCriterion', 'Select one value'),\n     ('FormSimpleStringCriterion', 'Text'),\n     ('FormListCriterion', 'List of values'),\n     ('FormCommaCriterion', 'Enter comma separated values'),\n     ('FormSortCriterion', 'Sort results'),\n     ('FormContextCriterion',\n      'Values will be taken from the context')] at ...>\n\nSet the query term and save.\n\n    >>> form = browser.getForm(action=\"criterion_edit_form\", index=0)\n    >>> form.getControl('published').selected = True\n    >>> form.getControl('Save').click()\n    >>> print browser.contents\n    <...\n    ...Changes saved...\n\nOpen another browser as an anonymous user.\n\n    >>> anon_browser = z2.Browser(layer['app'])\n    >>> anon_browser.handleErrors = False\n\nBefore the topic has any form criteria, the search form is not\npresent.\n\n    >>> anon_browser.open(foo_topic.absolute_url()+'/atct_topic_view')\n    >>> anon_browser.getForm(name=\"formcriteria_search\")\n    Traceback (most recent call last):\n    LookupError\n\nAdd a simple string criterion for the SearchableText index on the\ncriteria tab.\n\n    >>> form = browser.getForm(name='criteria_select')\n    >>> form.getControl('Search Text').selected = True\n    >>> form.getControl(name=\"criterion_type\").getControl(\n    ...     'Text', index=1).selected = True\n    >>> form.getControl('Add criteria').click()\n    >>> print browser.contents\n    <...\n    ...Search Text...\n    ...A simple string criterion...\n\nSelect the criterion's 'value' field as a form field so it will appear\non the search form.\n\n    >>> browser.getControl(\n    ...     name='crit__SearchableText_FormSimpleStringCriterion'\n    ...     '_formFields:list').getControl('Value').selected = True\n\nSet a default search term.\n\n    >>> browser.getControl(\n    ...     name=\"crit__SearchableText_FormSimpleStringCriterion\"\n    ...     \"_value\").value = 'bar'\n    >>> browser.getControl(name=\"form.button.Save\").click()\n    >>> print browser.contents\n    <...\n    ...Changes saved...\n\nIf no form value have been submitted, such as on a fresh load of the\ntopic view, the default term will be used in the query returning only\none of the content objects.\n\n    >>> len(foo_topic.queryCatalog())\n    1\n\n    >>> anon_browser.open(foo_topic.absolute_url()+'/atct_topic_view')\n    >>> anon_browser.getLink('Bar Document Title')\n    <Link text='...Bar Document Title'\n    url='http://nohost/plone/Members/test_user_1_/bar-document-title'>\n    >>> anon_browser.getLink('Baz Event Title')\n    Traceback (most recent call last):\n    LinkNotFoundError\n\nNow that a form criterion has been added, the search form is\nrendered.\n\n    >>> anon_browser.open(foo_topic.absolute_url())\n    >>> form = anon_browser.getForm(name=\"formcriteria_search\")\n    >>> 'formcriteria-portlet.css' in anon_browser.contents\n    True\n    \nCriterion fields that haven't been selected in \"Form Fields\" don't\nappear on the search form.\n\n    >>> form.getControl(\n    ...     name='form_crit__SearchableText_FormSimpleStringCriterion'\n    ...     '_formFields:list')\n    Traceback (most recent call last):\n    LookupError: name\n    'form_crit__SearchableText_FormSimpleStringCriterion_formFields:list'\n\nThe label for the criterion corresponds to the form element for the\nfirst criterion field.\n\n    >>> ctl = form.getControl('Search Text')\n\nEnter a search term and submit the query.  The topic will now list the\nother content object.\n\n    >>> ctl.value = 'baz'\n    >>> form.getControl(name='submit').click()\n    >>> anon_browser.getLink('Bar Document Title')\n    Traceback (most recent call last):\n    LinkNotFoundError\n    >>> anon_browser.getLink('Baz Event Title')\n    <Link text='...Baz Event Title'\n    url='http://nohost/plone/Members/test_user_1_/baz-event-title'>\n\nSince the search form has been submitted, the results are rendered on\nthe layout specified by the \"Form Results Layout\".\n\n    >>> anon_browser.url.startswith(\n    ...     'http://nohost/plone/Members/test_user_1_/foo-topic-title'\n    ...     '/atct_topic_view')\n    True\n\nThe search form portlet also reflects the search term submitted rather\nthan the default value submitted on the criteria tab.\n\n    >>> form = anon_browser.getForm(name=\"formcriteria_search\")\n    >>> ctl = form.getControl('Search Text')\n    >>> ctl.value\n    'baz'\n\nIf the search form is submitted from this page, the results are still\nrendered on the same view.\n\n    >>> ctl.value = 'bar'\n    >>> form.getControl(name='submit').click()\n    >>> anon_browser.url.startswith(\n    ...     'http://nohost/plone/Members/test_user_1_/foo-topic-title'\n    ...     '/atct_topic_view')\n    True\n\nValues are also ignored if submitted for criteria fields which are not\nlisted in \"Form Fields\".\n\n    >>> crit = foo_topic.getCriterion(\n    ...     'SearchableText_FormSimpleStringCriterion')\n    >>> crit.setFormFields([])\n    >>> transaction.commit()\n\n    >>> anon_browser.open(\n    ...     foo_topic.absolute_url()+'/atct_topic_view'\n    ...     '?form_crit__SearchableText_FormSimpleStringCriterion'\n    ...     '_value=baz')\n    >>> anon_browser.getLink('Bar Document Title')\n    <Link text='...Bar Document Title'\n    url='http://nohost/plone/Members/test_user_1_/bar-document-title'>\n    >>> anon_browser.getLink('Baz Event Title')\n    Traceback (most recent call last):\n    LinkNotFoundError\n\n    >>> crit.setFormFields(['value'])\n\n    >>> import transaction\n    >>> transaction.commit()\n\nThe search form handles index query parsing errors gracefully\ndisplaying a message to the user.\n\n    >>> anon_browser.open(foo_topic.absolute_url())\n    >>> form = anon_browser.getForm(name=\"formcriteria_search\")\n    >>> ctl = form.getControl('Search Text')\n    >>> ctl.value = 'bar (baz)'\n    >>> form.getControl(name='submit').click()\n    >>> print anon_browser.contents\n    <...There are currently no results for this search...\n    >>> anon_browser.getLink('Bar Document Title')\n    Traceback (most recent call last):\n    LinkNotFoundError\n    >>> anon_browser.getLink('Baz Event Title')\n    Traceback (most recent call last):\n    LinkNotFoundError\n\nThe search form portlet successfully renders when viewed on a context\nother than the portlet.\n\n    >>> anon_browser.open(folder.absolute_url())\n    >>> form = anon_browser.getForm(name=\"formcriteria_search\")\n\nEnsure that collective.formcriteria doesn't break existing ATTopic\ninstances such as those created by default in a Plone site.\n\n    >>> owner_browser.open(portal.news.absolute_url())\n    >>> print owner_browser.contents\n    <...\n    ...Site News...\n    ...There are currently no items in this folder...\n\n    >>> owner_browser.getLink('Edit').click()\n    >>> print owner_browser.contents\n    <...\n    ... Search terms ...\n\nMake sure none of the collective.formcriteria extensions interfere\nwith existing ATTopic instances.\n\n    >>> browser.open(portal.events.aggregator.absolute_url())\n\nAll criteria can also be created using poral_types.constructContent.\n\n    >>> z2.login(portal.getPhysicalRoot().acl_users, testing.SITE_OWNER_NAME)\n    >>> foo_topic.deleteCriterion(\n    ...     'crit__SearchableText_FormSimpleStringCriterion')\n    >>> foo_topic.deleteCriterion(\n    ...     'crit__review_state_FormSelectionCriterion')\n    >>> seen = set()\n    >>> topic_indexes = portal.portal_atct.topic_indexes\n    >>> for field, index in sorted(topic_indexes.iteritems()):\n    ...     for criterion in index.criteria:\n    ...         if criterion in seen or criterion.startswith('AT'):\n    ...             continue\n    ...         portal.portal_types.constructContent(\n    ...             criterion, foo_topic,\n    ...             id='crit__%s_%s' % (field, criterion))\n    ...         seen.add(criterion)\n    'crit__Creator_FormSelectionCriterion'\n    'crit__Creator_FormCheckboxCriterion'\n    'crit__Creator_FormPulldownCriterion'\n    'crit__Creator_FormSimpleStringCriterion'\n    'crit__Creator_FormListCriterion'\n    'crit__Creator_FormCommaCriterion'\n    'crit__Creator_FormSortCriterion'\n    'crit__Creator_FormContextCriterion'\n    'crit__Date_FormDateCriterion'\n    'crit__Date_FormDateRangeCriterion'\n    'crit__Type_FormPortalTypeCriterion'\n    'crit__Type_FormPortalTypeCheckboxCriterion'\n    'crit__Type_FormPortalTypePulldownCriterion'...\n    'crit__path_FormPathCriterion'\n    'crit__path_FormRelativePathCriterion'\n\nInstalling\n==========\n\nThe 'default' profile is used when installing collective.formcriteria\nthrough the Plone Add-ons control panel\n\n    >>> portal.portal_quickinstaller.uninstallProducts(['collective.formcriteria'])\n    >>> print portal.portal_quickinstaller.installProducts(['collective.formcriteria'])\n        Installed Products\n        ====================\n        collective.formcriteria:ok:\n    >>> portal.portal_quickinstaller.getInstallProfiles(\n    ...     'collective.formcriteria')[0]\n    u'collective.formcriteria:default'\n\n.. -*-doctest-*-\n\nSorting\n=======\n\nTwo kinds of sort criteria are supported.  Multiple fixed sort\ncriteria can be defined allowing the user to select from among them\nusing links on the batch macro.  One form sort criterion can be added\nper collection to allows the user to specify a sort on the sort form.\nIf both are used, and the user has both submitted a sort from the form\nand selected a sort from the batch links, the latter criterion in the\nlist of criteria takes effect.\n\nForm sort criteria are not yet implemented.\n\nFixed Sort Criteria\n-------------------\n\nSet the item count to 1 so that batches will only have one item.\n\n    >>> from Products.CMFCore.utils import getToolByName\n    >>> portal = layer['portal']\n    >>> membership = getToolByName(portal, 'portal_membership')\n\n    >>> from plone.app import testing\n    >>> folder = membership.getHomeFolder(testing.TEST_USER_ID)\n    >>> foo_topic = folder['foo-topic-title']\n    >>> foo_topic.setItemCount(1)\n\n    >>> import transaction\n    >>> transaction.commit()\n\nOpen a browser and log in as a normal user.\n\n    >>> from plone.testing import z2\n    >>> from plone.app import testing\n    >>> portal = layer['portal']\n    >>> browser = z2.Browser(layer['app'])\n    >>> browser.handleErrors = False\n    >>> browser.open(portal.absolute_url())\n    >>> browser.getLink('Log in').click()\n    >>> browser.getControl('Login Name').value = testing.TEST_USER_NAME\n    >>> browser.getControl(\n    ...     'Password').value = testing.TEST_USER_PASSWORD\n    >>> browser.getControl('Log in').click()\n\nLoad the criteria edit form of a collection.\n\n    >>> browser.open(foo_topic.absolute_url())\n    >>> browser.getLink('Criteria').click()\n\nThe sort selection form has been removed from the criteria tab.\n\n    >>> browser.getForm(action=\"criterion_edit_form\", index=1)\n    Traceback (most recent call last):\n    IndexError: list index out of range\n\nInstead, multiple sort criteria can be added to a collection using the\nnormal criterion add form on the criteria tab.\n\n    >>> form = browser.getForm(name=\"criteria_select\")\n    >>> form.getControl('Relevance').selected = True\n    >>> form.getControl('Sort results').selected = True\n    >>> form.getControl('Add criteria').click()\n    >>> print browser.contents\n    <...\n    ...Added criterion FormSortCriterion for field unsorted...\n\nAdd another sort criterion for the Date field reversed.\n\n    >>> form = browser.getForm(name=\"criteria_select\")\n    >>> form.getControl('Effective Date').selected = True\n    >>> form.getControl('Sort results').selected = True\n    >>> form.getControl('Add criteria').click()\n    >>> print browser.contents\n    <...\n    ...Added criterion FormSortCriterion for field effective...\n\nChange the display layout of the collection to the \"Search Form\" then\nsubmit a search criteria to test that the sort links preserve search\ncriteria.\n\n    >>> foo_topic.setLayout('criteria_form')\n    >>> foo_topic.addCriterion(\n    ...     'SearchableText','FormSimpleStringCriterion'\n    ...     ).setFormFields(['value'])\n\n    >>> import transaction\n    >>> transaction.commit()\n\n    >>> browser.getLink('View').click()\n    >>> form = browser.getForm(name=\"formcriteria_search\")\n    >>> form.getControl('Search Text').value = 'blah'\n    >>> form.getControl(name='submit').click()\n\nWhen the batch macro is rendered on a collection view, such as one of\nthe listings, it includes links to the different possible sorts in\norder.  By default, the first sort criteria is selected.  The sort\nlinks also have id's and CSS classes for styling support.\n\n    >>> print browser.contents\n    <...\n              Sort on:\n                <span class=\"formcriteriaSortField selected\">Relevance</span>\n                <button...>Effective Date</button>\n    ...\n    >>> form = browser.getForm(name=\"navigation_form\")\n    >>> form.getControl(\n    ...     name=\"crit__unsorted_FormSortCriterion:boolean\")\n    Traceback (most recent call last):\n    LookupError: name\n    'crit__unsorted_FormSortCriterion:boolean'\n\nThe results are listed in order of weight.\n\n    >>> browser.getLink('Baz Event Title')\n    <Link text='...Baz Event Title'\n    url='http://nohost/plone/Members/test_user_1_/baz-event-title'>\n    >>> browser.getLink('Bar Document Title')\n    Traceback (most recent call last):\n    LinkNotFoundError\n\nWhen a sort link is clicked, that sort will show as selected and\nresults will be sorted according to the sort criteria.\n\n    >>> form = browser.getForm(name=\"navigation_form\")\n    >>> form.getControl(\n    ...     name=\"crit__effective_FormSortCriterion:boolean\").click()\n    >>> print browser.contents\n    <...\n    ...Sort on:...\n    ...Relevance...\n    ...Effective Date</span>...\n    >>> form = browser.getForm(name=\"navigation_form\")\n    >>> form.getControl(\n    ...     name=\"crit__effective_FormSortCriterion:boolean\")\n    <Control name='crit__effective_FormSortCriterion:boolean' type='hidden'>\n    >>> form = browser.getForm(name=\"navigation_form\")\n    >>> form.getControl(\n    ...     name=\"crit__unsorted_FormSortCriterion:boolean\")\n    <SubmitControl name='crit__unsorted_FormSortCriterion:boolean'\n    type='submitbutton'>\n\nThe results reflect that the search query is preserved across the new\nsort selection.\n\n    >>> browser.getLink('Bar Document Title')\n    <Link text='...Bar Document Title'\n    url='http://nohost/plone/Members/test_user_1_/bar-document-title'>\n    >>> browser.getLink('Baz Event Title')\n    Traceback (most recent call last):\n    LinkNotFoundError\n\nIf the next batch is selected the sort and search query are\npreserved.\n\n    >>> form = browser.getForm(name=\"navigation_form\")\n    >>> form.getControl(name=\"b_start\", index=0).click()\n    >>> browser.getLink('Bar Document Title')\n    Traceback (most recent call last):\n    LinkNotFoundError\n    >>> browser.getLink('Baz Event Title')\n    <Link text='...Baz Event Title'\n    url='http://nohost/plone/Members/test_user_1_/baz-event-title'>\n\nThe batch macro will render the sort links even if there's only one\nbatch.\n\n    >>> foo_topic.setItemCount(0)\n\n    >>> import transaction\n    >>> transaction.commit()\n\n    >>> browser.open(foo_topic.absolute_url()+'/atct_topic_view')\n    >>> form = browser.getForm(name=\"navigation_form\")\n    >>> form.getControl(\n    ...     name=\"crit__effective_FormSortCriterion:boolean\")\n    <SubmitControl name='crit__effective_FormSortCriterion:boolean'\n    type='submitbutton'>\n\nEnsure that the extended sort criteria work inside previously created\nATTopic instances.\n\n    >>> topic = folder['at-topic-title']\n    >>> topic.setSortCriterion('effective', True)\n    >>> topic.queryCatalog()[0].getObject()\n    <ATEvent at /plone/Members/test_user_1_/baz-event-title>\n\nGrouped Listing\n---------------\n\nA variation on the default collection view is provided that lists\nitems grouped by the sort used.  This requires that the index used for\nsorting is also in the catalog metadata columns and this available on\nthe catalog brains.\n\nSort by creator to that we get at least one group with multiple\nitems.\n\n    >>> foo_topic.deleteCriterion('crit__unsorted_FormSortCriterion')\n    >>> foo_topic.setSortCriterion('Creator', False)\n\n    >>> import transaction\n    >>> transaction.commit()\n\nSelect the layout.\n\n    >>> browser.open(foo_topic.absolute_url())\n    >>> browser.getLink('Grouped Listing').click()\n    >>> print browser.contents\n    <...\n    ...View changed...\n    >>> browser.getLink('Log out').click()\n\nNow the items are grouped by the sort values.\n\n    >>> browser.open(foo_topic.absolute_url())\n    >>> print browser.contents\n    <...\n    ...<dl...\n    ...<dt...bar_creator_id...</dt>...\n    ...<dd...\n    ...Baz Event Title...\n    ...</dd...\n    ...<dt...foo_creator_id...</dt>...\n    ...<dd...\n    ...Foo Event Title...\n    ...Bar Document Title...\n    ...</dd...\n    ...</dl>...\n\nThe grouped listing layout requires a sort criterion to render and\nraises an error if one is not present.\n\n    >>> foo_topic.deleteCriterion('crit__Creator_ATSortCriterion')\n\n    >>> import transaction\n    >>> transaction.commit()\n\n    >>> browser.open(foo_topic.absolute_url())\n    Traceback (most recent call last):\n    AssertionError: ...\n\nThe batch macros still work for topics that have no sort criteria.\n\n    >>> foo_topic.setLayout('criteria_form')\n\n    >>> import transaction\n    >>> transaction.commit()\n\n    >>> browser.open(foo_topic.absolute_url())\n    >>> form = browser.getForm(name=\"formcriteria_search\")\n    >>> form.getControl('Search Text').value = 'blah'\n    >>> form.getControl(name='submit').click()\n    >>> 'Sort on:' in browser.contents\n    False\n\n.. -*-doctest-*-\n\nCSV Export\n==========\n\nThe data accessed in tabular form from collections is often exactly\nthe data site admins want to export into other formats such as CSV.\nThis package provides views for exporting the current query's\ncollection data into various formats.  The CSV columns are taken from\nthe collections 'Table Columns' field on the edit tab/form regardless\nof whether the table layout is used.  The CSV export link is available\nas a document action like the print and send-to actions.\n\nChange the columns and link columns.\n\n    >>> from plone.testing import z2\n    >>> from plone.app import testing\n    >>> portal = layer['portal']\n    >>> z2.login(portal.getPhysicalRoot().acl_users, testing.SITE_OWNER_NAME)\n\n    >>> from Products.CMFCore.utils import getToolByName\n    >>> membership = getToolByName(portal, 'portal_membership')\n    >>> folder = membership.getHomeFolder(testing.TEST_USER_ID)\n    >>> foo_topic = folder['foo-topic-title']\n    >>> columns = foo_topic.columns\n    >>> columns.manage_delObjects(\n    ...     ['ModificationDate-column', 'get_size-column',\n    ...      'review_state-column'])\n    >>> columns['getPath-column'].update(filter='')\n    >>> columns['Title-column'].update(link=False, sort='')\n    >>> desc_column = columns[columns.invokeFactory(\n    ...     type_name='TopicColumn', id='Description-column',\n    ...     link=True)]\n    >>> foo_topic.manage_delObjects(\n    ...     ['crit__sortable_title_FormSortCriterion',\n    ...      'crit__get_size_FormSortCriterion',\n    ...      'crit__modified_FormSortCriterion',\n    ...      'crit__review_state_FormSortCriterion'])\n    >>> testing.logout()\n\nAdd some criteria to the collection.\n\n    >>> _ = foo_topic.addCriterion(\n    ...     'path', 'FormRelativePathCriterion')\n    >>> foo_topic.addCriterion(\n    ...     'Type', 'FormSelectionCriterion'\n    ...     ).setValue(['Page', 'Event'])\n    >>> foo_topic.getCriterion(\n    ...     'SearchableText_FormSimpleStringCriterion'\n    ...     ).setFormFields(['value'])\n    >>> _ = foo_topic.addCriterion(\n    ...     'unsorted', 'FormSortCriterion')\n    >>> _ = foo_topic.addCriterion(\n    ...     'effective', 'FormSortCriterion')\n\n    >>> import transaction\n    >>> transaction.commit()\n\nOpen a browser and log in as a normal user.\n\n    >>> browser = z2.Browser(layer['app'])\n    >>> browser.handleErrors = False\n    >>> browser.open(portal.absolute_url())\n    >>> browser.getLink('Log in').click()\n    >>> browser.getControl('Login Name').value = testing.TEST_USER_NAME\n    >>> browser.getControl(\n    ...     'Password').value = testing.TEST_USER_PASSWORD\n    >>> browser.getControl('Log in').click()\n\nThe export link is now available.  Download the raw, un-queried\ncollection results.\n\n    >>> browser.open(foo_topic.absolute_url())\n    >>> export_link = browser.getLink('Export')\n    >>> export_link.click()\n    >>> browser.isHtml\n    False\n    >>> print browser.headers\n    Status: 200 ...\n    Content-Disposition: attachment...\n    Content-Type: text/csv...\n\nSince the testbrowser can't handle file downloads, we'll check the CSV\noutput by calling the browser view directly.\n\n    >>> from zope import interface\n    >>> from collective.formcriteria import interfaces\n    >>> interface.alsoProvides(layer['request'], interfaces.IFormCriteriaLayer)\n    >>> from collective.formcriteria.testing import export\n\n    >>> print export(portal, foo_topic, layer['request'], export_link.url)\n    Status: 200 OK...\n    Content-Type: text/csv\n    Content-Disposition: attachment;filename=foo-topic-title.csv\n    URL,Title,Description\n    http://nohost/plone/Members/test_user_1_/foo-event-title,Foo Event Title,\n    http://nohost/plone/Members/test_user_1_/bar-document-title,Bar Document Title,blah\n    http://nohost/plone/Members/test_user_1_/baz-event-title,Baz Event Title,blah blah\n    >>> testing.logout()\n\nAdd the search form portlet.\n\n    >>> from zope import component\n    >>> from plone.i18n.normalizer import (\n    ...     interfaces as normalizer_ifaces)\n    >>> from collective.formcriteria.portlet import portlet\n    >>> testing.login(portal, testing.TEST_USER_NAME)\n    >>> manager = foo_topic.restrictedTraverse(\n    ...     '++contextportlets++plone.rightcolumn')\n    >>> site_path_len = len(portal.getPhysicalPath())\n    >>> assignment = portlet.Assignment(\n    ...     header='Foo Search Form Title',\n    ...     target_collection='/'.join(\n    ...         foo_topic.getPhysicalPath()[site_path_len:]))\n    >>> name = component.getUtility(\n    ...     normalizer_ifaces.IIDNormalizer).normalize(\n    ...         assignment.title)\n    >>> manager[name] = assignment\n    >>> testing.logout()\n\n    >>> import transaction\n    >>> transaction.commit()\n\nSubmit a query.  The exported CSV reflects the user submitted query\nand is sorted by relevance.\n\n    >>> browser.open(foo_topic.absolute_url())\n    >>> form = browser.getForm(name=\"formcriteria_search\")\n    >>> form.getControl('Search Text').value = 'blah'\n    >>> form.getControl(name='submit').click()\n\n    >>> export_link = browser.getLink('Export')\n    >>> export_link.click()\n    >>> browser.isHtml\n    False\n    >>> print browser.headers\n    Status: 200...\n    Content-Disposition: attachment;filename=foo-topic-title.csv\n    Content-Length: ...\n    Content-Type: text/csv...\n    >>> print export(portal, foo_topic, layer['request'], export_link.url)\n    URL,Title,Description\n    http://nohost/plone/Members/test_user_1_/baz-event-title,Baz Event Title,blah blah\n    http://nohost/plone/Members/test_user_1_/bar-document-title,Bar Document Title,blah\n\nSelect another sort, The exported CSV reflects the user selected sort\nand query.\n\n    >>> browser.open(foo_topic.absolute_url())\n    >>> form = browser.getForm(name=\"formcriteria_search\")\n    >>> form.getControl('Search Text').value = 'blah'\n    >>> form.getControl(name='submit').click()\n    >>> browser.getControl(\n    ...     name=\"crit__effective_FormSortCriterion:boolean\").click()\n\n    >>> export_link = browser.getLink('Export')\n    >>> export_link.click()\n    >>> browser.isHtml\n    False\n    >>> print export(portal, foo_topic, layer['request'], export_link.url)\n    URL,Title,Description\n    http://nohost/plone/Members/test_user_1_/bar-document-title,Bar Document Title,blah\n    http://nohost/plone/Members/test_user_1_/baz-event-title,Baz Event Title,blah blah\n\nIt is also possible to change the CSV format by passing in request\nkeys with a special 'csv.fmtparam-' prefix.  These values are passed\ninto Python's csv.writer() factory as keyword arguments.  For example,\nto use a tab character as a delimiter instead of \",\", add a\n'csv.fmtparam-delimiter' key to the request.\n\n    >>> browser.open(foo_topic.absolute_url())\n    >>> export_url = browser.getLink('Export').url\n    >>> browser.open(export_url  + '&csv.fmtparam-delimiter=%09')\n    >>> browser.isHtml\n    False\n    >>> print export(portal, foo_topic, layer['request'],\n    ...              export_url + '&csv.fmtparam-delimiter=%09')\n    URL\tTitle\tDescription\n    http://nohost/plone/Members/test_user_1_/foo-event-title\tFoo Event Title\t\n    http://nohost/plone/Members/test_user_1_/bar-document-title\tBar Document Title\tblah\n    http://nohost/plone/Members/test_user_1_/baz-event-title\tBaz Event Title\tblah blah\n\nIt's also possible to add a column for fields that don't have\ncorresponding catalog metadata.  Be aware that using such columns can\ngreatly affect performance as export requires looking up every object\nto retrieve the data.\n\n    >>> z2.login(portal.getPhysicalRoot().acl_users, testing.SITE_OWNER_NAME)\n    >>> text_column = columns[columns.invokeFactory(\n    ...     type_name='TopicColumn', id='getText-column',\n    ...     title='Text', link=True)]\n    >>> testing.logout()\n\n    >>> import transaction\n    >>> transaction.commit()\n\n    >>> browser.open(export_url)\n    >>> browser.isHtml\n    False\n    >>> print export(portal, foo_topic, layer['request'], export_url)\n    URL,Title,Description,Text\n    http://nohost/plone/Members/test_user_1_/foo-event-title,Foo Event Title,,<p>foo...</p>\n    http://nohost/plone/Members/test_user_1_/bar-document-title,Bar Document Title,blah,<p>bar...</p>\n    http://nohost/plone/Members/test_user_1_/baz-event-title,Baz Event Title,blah blah,\n\nThe export link isn't available if there are no collection columns.\n\n    >>> z2.login(portal.getPhysicalRoot().acl_users, testing.SITE_OWNER_NAME)\n    >>> foo_topic.manage_delObjects(['columns'])\n    >>> testing.logout()\n\n    >>> import transaction\n    >>> transaction.commit()\n\n    >>> browser.open(foo_topic.absolute_url())\n    >>> browser.getLink('Export')\n    Traceback (most recent call last):\n    LinkNotFoundError\n\n.. -*-doctest-*-\n\nContents View\n=============\n\nA version of the folder_contents can be used with collections\nwhere the columns are those specified in the collection's \"Table\nColumns\" field.  The buttons at the bottom of the folder contents view\nwill then be applied to the selected items.\n\nAny columns that are selected in the collection's \"Table\nColumns\" field that are also selected in the \"Table Column Links\"\nfield will be rendered as links.  Note that it's possible to select a\nlink column that isn't a table column which will have no effect.\n\nAdd a simple string criterion for the SearchableText index on the\ncriteria tab.  Set a default search term.  Add a sort criteria for\nconsistent ordering.\n\n    >>> from plone.app import testing\n    >>> from Products.CMFCore.utils import getToolByName\n    >>> portal = layer['portal']\n    >>> membership = getToolByName(portal, 'portal_membership')\n    >>> folder = membership.getHomeFolder(testing.TEST_USER_ID)\n    >>> foo_topic = folder['foo-topic-title']\n    >>> crit = foo_topic.getCriterion(\n    ...     'SearchableText_FormSimpleStringCriterion')\n    >>> crit.setValue('bar')\n    >>> crit.setFormFields(['value'])\n    >>> sort = foo_topic.addCriterion(\n    ...     'getPhysicalPath', 'FormSortCriterion')\n\n    >>> import transaction\n    >>> transaction.commit()\n\nOpen a browser and log in as a user who can change the display layout\nfor the topic.\n\n    >>> from plone.testing import z2\n    >>> browser = z2.Browser(layer['app'])\n    >>> browser.handleErrors = False\n    >>> browser.open(portal.absolute_url())\n    >>> browser.getLink('Log in').click()\n    >>> browser.getControl('Login Name').value = testing.TEST_USER_NAME\n    >>> browser.getControl(\n    ...     'Password').value = testing.TEST_USER_PASSWORD\n    >>> browser.getControl('Log in').click()\n\nChange the topic's display layout and the search form results layout\nto the contents view.\n\n    >>> browser.open(foo_topic.absolute_url())\n    >>> browser.getLink('Tabular Form').click()\n    >>> print browser.contents\n    <...\n    ...View changed...\n\nThe view renders the contents form with the default columns.\n\n    >>> browser.getForm(name=\"folderContentsForm\")\n    <zope.testbrowser.browser.Form object at ...>\n    >>> print browser.contents\n    <...\n    ...Title...\n    ...Size...\n    ...Modification Date...\n    ...State...\n\nThe order column is not included since order is determined by the\ncollection and is fixed.\n\n    >>> 'Order' in browser.contents\n    False\n\nThe topic contents are listed in the contents table form and the\ntitles are links to the item.\n\n    >>> print browser.contents\n    <...\n    ...Bar Document Title...\n    ...2.9 kB...\n    ...<span class=\"state-published\">Published</span>...\n    >>> from collective.formcriteria.testing import CONTENT_FIXTURE\n    >>> now = CONTENT_FIXTURE.now\n    >>> str(portal.restrictedTraverse('@@plone').toLocalizedTime(now)\n    ...     ) in browser.contents\n    True\n\n    >>> browser.getControl('Bar Document Title')\n    <ItemControl name='paths:list' type='checkbox'\n    optionValue='/plone/Members/test_user_1_/bar-document-title'\n    selected=False>\n    >>> browser.getLink('Bar Document Title')\n    <Link text='Bar Document Title'\n    url='http://nohost/plone/Members/test_user_1_/bar-document-title'>\n\nThe first sort criterion is the default sort.\n\n    >>> browser.getControl(name=\"sort_on\").value\n    'sortable_title'\n\nSelect different collection columns and which columns link to the\nresult item.\n\n    >>> z2.login(portal.getPhysicalRoot().acl_users, testing.SITE_OWNER_NAME)\n    >>> columns = foo_topic.columns\n    >>> columns.manage_delObjects(\n    ...     ['ModificationDate-column', 'get_size-column',\n    ...      'review_state-column'])\n    >>> columns['Title-column'].update(link=False)\n    >>> desc_column = columns[columns.invokeFactory(\n    ...     type_name='TopicColumn', id='Description-column',\n    ...     link=True)]\n    >>> effective_column = columns[columns.invokeFactory(\n    ...     type_name='TopicColumn', id='EffectiveDate-column',\n    ...     link=True)]\n    >>> foo_topic.manage_delObjects(\n    ...     ['crit__get_size_FormSortCriterion',\n    ...      'crit__get_size_FormSimpleIntCriterion',\n    ...      'crit__modified_FormSortCriterion',\n    ...      'crit__modified_FormDateCriterion',\n    ...      'crit__review_state_FormSortCriterion',\n    ...      'crit__review_state_FormSelectionCriterion'])\n    >>> testing.logout()\n\n    >>> import transaction\n    >>> transaction.commit()\n\nThe view renders the contents form with the specified columns.\n\n    >>> browser.open(foo_topic.absolute_url())\n    >>> browser.getForm(name=\"folderContentsForm\")\n    <zope.testbrowser.browser.Form object at ...>\n    >>> print browser.contents\n    <...\n    ...Description...\n    ...Effective Date...\n    ...Title...\n    >>> 'Size' in browser.contents\n    False\n    >>> 'Modification Date' in browser.contents\n    False\n    >>> '&#160;State&#160;' in browser.contents\n    False\n\nThe topic contents are also listed with the specified columns.\n\n    >>> print browser.contents\n    <...\n    ...Bar Document Title...\n    ...blah...\n    >>> '2.9 kB' in browser.contents\n    False\n    >>> now.ISO() in browser.contents\n    False\n    >>> '<span class=\"state-published\">Published</span>' in browser.contents\n    False\n\nThe link columns have also been changed.\n\n    >>> browser.getControl('Bar Document Title')\n    <ItemControl name='paths:list' type='checkbox'\n    optionValue='/plone/Members/test_user_1_/bar-document-title'\n    selected=False>\n    >>> browser.getLink('blah')\n    <Link text='blah'\n    url='http://nohost/plone/Members/test_user_1_/bar-document-title'>\n    >>> browser.getLink((now-2).ISO())\n    <Link text='...'\n    url='http://nohost/plone/Members/test_user_1_/bar-document-title'>\n    >>> browser.getLink('Bar Document Title')\n    Traceback (most recent call last):\n    LinkNotFoundError\n\nThe item selection header row reflects the new number of columns.\n\n    >>> print browser.contents\n    <...\n    ...<thead>...\n    ...<th colspan=\"4\"...\n    ...</thead>...\n\nThe KSS update table view also reflects the selected columns.\n\n    >>> browser.open(\n    ...     foo_topic.absolute_url()+'/foldercontents_update_table')\n    >>> print browser.contents\n    <...\n    ...Description...\n    ...Effective Date...\n    ...Title...\n    >>> 'Size' in browser.contents\n    False\n    >>> 'Modification Date' in browser.contents\n    False\n    >>> '&#160;State&#160;' in browser.contents\n    False\n\nQuery Criteria\n--------------\n\nIf the query criteria have been assigned to a specific column, the\nwill be rendered in the filter table header row.  Otherwise they will\nbe rendered in the search form as usual.\n\nAdd the portlet.\n\n    >>> from zope import component\n    >>> from plone.i18n.normalizer import (\n    ...     interfaces as normalizer_ifaces)\n    >>> from collective.formcriteria.portlet import portlet\n    >>> testing.login(portal, testing.TEST_USER_NAME)\n    >>> manager = foo_topic.restrictedTraverse(\n    ...     '++contextportlets++plone.rightcolumn')\n    >>> site_path_len = len(portal.getPhysicalPath())\n    >>> assignment = portlet.Assignment(\n    ...     header='Foo Search Form Title',\n    ...     target_collection='/'.join(\n    ...         foo_topic.getPhysicalPath()[site_path_len:]))\n    >>> name = component.getUtility(\n    ...     normalizer_ifaces.IIDNormalizer).normalize(\n    ...         assignment.title)\n    >>> manager[name] = assignment\n    >>> testing.logout()\n\nIf query criteria are configured for the table columns, a filter table\nhead row will be rendered as a search form.\n\n    >>> foo_topic.setFormLayout('folder_contents')\n\n    >>> import transaction\n    >>> transaction.commit()\n\n    >>> browser.open(foo_topic.absolute_url())\n    >>> contents_form = browser.getForm(name=\"folderContentsForm\")\n    >>> contents_form.getControl(\n    ...     name='form_crit__SearchableText_FormSimpleStringCriterion'\n    ...     '_value', index=0)\n    <Control\n    name='form_crit__SearchableText_FormSimpleStringCriterion_value'\n    type='text'>\n    >>> contents_form.getControl(\n    ...     name='form_crit__Title_FormSimpleStringCriterion_value',\n    ...     index=0)\n    <Control\n    name='form_crit__Title_FormSimpleStringCriterion_value'\n    type='text'>\n    >>> contents_form.getControl('Filter', index=0)\n    <SubmitControl name='filter' type='submit'>\n\nSince all query criteria are used in the table columns, no portlet\nsearch form is rendered.\n\n    >>> browser.getForm(name=\"formcriteria_search\")\n    Traceback (most recent call last):\n    LookupError\n\nThe contents view reflects user criteria submitted through the\ncontents form.\n\n    >>> contents_form.getControl(\n    ...     name='form_crit__SearchableText_FormSimpleStringCriterion'\n    ...     '_value', index=0).value = 'baz'\n    >>> contents_form.getControl('Filter', index=0).click()\n    >>> browser.getControl('Bar Document Title')\n    Traceback (most recent call last):\n    LookupError: label 'Bar Document Title'\n    >>> browser.getControl('Baz Event Title')\n    <ItemControl name='paths:list' type='checkbox'\n    optionValue='/plone/Members/test_user_1_/baz-event-title'\n    selected=False>\n\nThe filter collapsible doesn't collapse when clicking on the search\ntext box.\n\n    >>> import re\n    >>> regexp = re.compile('http://.*?collapsiblesections.css')\n    >>> regexp.search(browser.contents).group()\n    'http://nohost/plone/portal_css/Plone%20Default/collapsiblesections.css'\n    >>> browser.open(portal.absolute_url() + '/collapsiblesections.css')\n    >>> print browser.contents\n    /*...\n    #foldercontents-getPath-filter .collapsibleHeader {\n    ...\n\nThe search form is rendered if query criteria are present which are\nnot assigned to a column.\n\n    >>> z2.login(portal.getPhysicalRoot().acl_users, testing.SITE_OWNER_NAME)\n    >>> columns['getPath-column'].update(filter='')\n    >>> testing.logout()\n\n    >>> import transaction\n    >>> transaction.commit()\n\n    >>> browser.open(foo_topic.absolute_url())\n    >>> portlet_form = browser.getForm(name=\"formcriteria_search\")\n\nThe contents view also reflects user criteria submitted through the\nportlet form.\n\n    >>> portlet_form.getControl(\n    ...     name='form_crit__SearchableText_FormSimpleStringCriterion'\n    ...     '_value').value = 'baz'\n    >>> portlet_form.getControl(name='submit').click()\n    >>> browser.getControl('Bar Document Title')\n    Traceback (most recent call last):\n    LookupError: label 'Bar Document Title'\n    >>> browser.getControl('Baz Event Title')\n    <ItemControl name='paths:list' type='checkbox'\n    optionValue='/plone/Members/test_user_1_/baz-event-title'\n    selected=False>\n\nIf no query criteria are configured, the filter table head row will\nnot be rendered.\n\n    >>> z2.login(portal.getPhysicalRoot().acl_users, testing.SITE_OWNER_NAME)\n    >>> columns['Title-column'].update(filter='')\n    >>> testing.logout()\n\n    >>> import transaction\n    >>> transaction.commit()\n\n    >>> browser.open(foo_topic.absolute_url())\n    >>> print browser.contents\n    <...\n          <thead...\n            <tr>\n                <th class=\"nosort\"...>&#160;</th>\n                <th class=\"nosort sortColumn\"\n                    id=\"foldercontents-sortable_title-column\">\n                      &#160;\n                      Title\n                      &#160;\n                    </th>\n                <th class=\"nosort noSortColumn\"\n                    id=\"foldercontents-Description-column\">\n                      &#160;\n                      Description\n                      &#160;\n                    </th>\n                <th class=\"nosort noSortColumn\"\n                    id=\"foldercontents-EffectiveDate-column\">\n                      &#160;\n                      Effective Date\n                      &#160;\n                    </th>\n            </tr>\n          </thead...\n          <tbody...\n\nCells that link to the item have just a link and no icon.  If the\nspecial \"Path\" column is include, it will display an icon.\n\n    >>> print browser.contents\n    <...\n                  <td class=\"notDraggable\">\n                      <input type=\"checkbox\" class=\"noborder\" name=\"paths:list\" id=\"cb_-plone-Members-test_user_1_-bar-document-title\" value=\"/plone/Members/test_user_1_/bar-document-title\" alt=\"Select Bar Document Title\" title=\"Select Bar Document Title\" />\n                      <input type=\"hidden\" name=\"selected_obj_paths:list\" value=\"/plone/Members/test_user_1_/bar-document-title\" />\n                      <label for=\"cb_-plone-Members-test_user_1_-bar-document-title\">\n                        <span class=\"contenttype-document\">\n    ...\n                        </span>\n                        <span class=\"hiddenStructure\">Bar Document Title</span>\n                      </label>\n                  </td>\n    ...\n                        <span class=\"contenttype-document\">\n                          <a href=\"http://nohost/plone/Members/test_user_1_/bar-document-title\"...\n                            blah\n                          </a>\n                        </span>\n    ...\n\nChangelog\n=========\n\n2.1 (2016-08-05)\n----------------\n\n* Added travis build script\n  [bogdangi]\n\n* Fix issues with title and description inside form view and form criteria edit\n  [bogdangi]\n\n* Added further Plone 4.3 compatibility [miohtama]\n\n* Use existing i18n message ID in form. [icemac]\n\n2.0 - 2012-11-01\n----------------\n\n* Plone 4.2 and 4.3 compatibility.\n  [rossp]\n\n* Use localized format for DateTime column values.\n  [rossp]\n\n* Add missing form criteria support for the recurse field of path\n  criteria.\n  [rossp]\n\n* Restrict some of the search form portlet support to the left and\n  right column portlet managers on normal plone views, and\n  additionally to the 4 dashboard portlet managers on the dashboard\n  view for performance reasons.  This means if you want to use the\n  search form portlet in a manager for which these registrations don't\n  apply, you'll have to use your own registration like the\n  <browser:viewlet> registrations in\n  collective/formcriteria/form/configure.zcml.\n  [rossp]\n\n* Update chameleon compatibility to the new 2.x branch.\n  [rossp]\n\n* Optimize and improve performancde.\n  [rossp]\n\n* Various upstream template updates.\n  [rossp, topherh]\n\n* Add remote URL support to folder_summary_view.\n  [topherh]\n\n* Fix an issue with the permission protecting the Export action.\n  [rossp]\n\n* Handle catalog index ParseErrors gracefully.  Thanks to Larry\n  Pitcher for the report.\n  [rossp]\n\n2.0b2 - 2011-01-13\n------------------\n\n* Retrofit some Plone 3 compatibility.  Plone 3 is un-supported in\n  version 2+.  The tests pass but the UI hasn't been checked so YMMV.\n  [rossp]\n\n2.0b1 - 2011-01-11\n------------------\n\n* Added a rudimentary UI for managing collection columns.\n  [rossp]\n\n2.0a4 - 2011-01-11\n------------------\n\n* Restore the workflow menu which was missing from the topic\n  folder_contents view.  Thanks to Larry Pitcher for the report.\n  [rossp]\n\n2.0a3 - 2011-01-10\n------------------\n\n* Change the permission for the grouped listing view so that anonymous\n  visitors can access the view when the content is published.\n  Thanks to Larry Pitcher for the report.\n  [rossp]\n\n* Add support for columns that don't have corresponding catalog\n  metadata.  Be aware that using such columns can greatly affect\n  performance as export requires looking up every object to retrieve\n  the data.\n  [rossp]\n\n2.0a2 - 2010-11-23\n------------------\n\n* Fixed a problem with a faulty type assumption regarding\n  DateTimeFields in the FormDateCriterion.  The FormDateCriterion\n  doesn't actually used a DateTimeField.\n  [rossp]\n\n* Refactor the <form> and <button> based batch_macros so as to not\n  conflict with other uses of the full \"navigation\" macro within an\n  existing form resulting in nested <form>s.\n  [rossp]\n\n2.0a1 - 2010-11-21\n------------------\n\n* Ensure that the \"default\" profile is used by portal_quickinstaller\n  by... well, default.  :-)\n  [rossp]\n\n* Use a <form> and <button> elements in the navigation/paging\n  batch_macros to prevent \"uri too long\" errors when using paging with\n  many form criteria.\n  [rossp]\n\n* Use method=\"post\" for the criteria form to address \"uri too long\"\n  when lots of form criteria are used.  Reported by mauro and\n  confirmed to happen with just two date fields.\n  [rossp]\n\n* Added defines for Plone4 complatibility in folder_listing\n  skin template.\n  [seletz]\n\n* Fix navigation_recurse template to match current Plone 4 version.\n  [seletz] [ramonski]\n\n* Add a collection listing portlet that makes use of the\n  folder_listing macros for a richer portlet. [rossp]\n\n* fix issue producing\n  AttributeError: 'NoneType' object has no attribute 'title_or_id'\n  when adding path criterions.\n  [hplocher]\n\n* Fix '<input type=\"hidden\" name=\"sort_on\"...', now uses the default\n  sort criteria if present\n\n* Use individual persistent objects to represent table columns such as\n  with the fodler_contents view.  UI for editing the folder_contents\n  column objects has yet to be implemented.\n\n* Fix <tfoot> usage [rossp]\n\n* Integrate sort criteria with folder contents view columns for KSS\n  sorting [rossp]\n\n* Add pulldown/select, single-value criterion based on\n  FormSelectionCriterion, FormPortalTypeCriterion, and\n  FormReferenceCriterion [rossp]\n\n1.1.1 - 2009-08-31\n------------------\n\n* \"Select all\" and \"Show all\" (KSS) on folder contents view [rossp]\n\n1.1.0 - 2009-08-21\n------------------\n\n* Use folder_contents instead of folder_contents_view to fix the links\n  back to the folder contents form. [rossp]\n* Tighten up the search form portlet spacing. [rossp]\n* Use \"Table Columns\" fields for the folder contents form to control\n  the folder contents columns\n* Use a \"Table Column Links\" collection filed to specify which folder\n  contents form columns should link to the item [rossp]\n* Fix folder contents form buttons, \"Copy\", \"Cut\", \"Rename\", \"Change\n  State\", and \"Delete\" now all work for objects listed by the\n  collections even if they are in different folders.  [rossp]\n\n1.0.2 - 2009-08-12\n------------------\n\n* Add some missing portal_types for criteria [rossp]\n* Fix a unicode bug with GS portlets.xml import of the search portlet\n  [rossp]\n\n1.0.1 - 2009-08-11\n------------------\n\n* Merge collective.catalogexport to support CSV export of collection\n  based user-submitted queries [rossp]\n\n1.0 - 2009-04-20\n----------------\n\n* Ensure that only formFields are taken from the request\n* Fix ignored integer range criteria (reported by SimO)\n* Use a browser layer (suggested by optilude)\n* Add ids and CSS classes to the batch_macro sort links (aaronv)\n* Fix a bug with the \"operator\" field.  Thanks to Mauro!\n\n0.9.5 - 2009-03-06\n------------------\n\n* Move package to src directory and fix testing buildout\n* Register criteria AT types using the right package name\n* Fix a bug with the JavaScript that narrows the criteria types by\n  index/field\n* Use separate meta_types instead of overwriting the ATCT meta types,\n  may be backwards incompatible for previous installations\n\n0.9.4 - 2009-02-08\n------------------\n\n* Add a layout that lists items grouped by the sort used\n* Fix KeyError: u'unsorted' bug for existing ATTopics as reported by\n  jonstahl\n\n0.9.3 - 2009-01-31\n------------------\n\n* Fix widget JavaScript and CSS for search form portlet\n\n0.9.2 - 2009-01-31\n------------------\n\n* Clarify selected sort\n* Make portlet usable outside the context of the collection\n* Fix portlet class\n* Don't render hour and minute fields on date\n\n0.9.1 - 2009-01-30\n------------------\n\n* Move the search form viewlet into a portlet\n* Patch the ATCT addCrierion method to properly initialize criteria so\n  that they can safely be created in code\n* Use the same mismatched meta_type ATCT for the\n  FormDateCriterion\n\n0.9 - 2009-01-29\n----------------\n\n* Fix incompatibility when extended sort criterion were added to\n  existing ATCT ATTopic instances\n\n0.8 - 2009-01-29\n----------------\n\n* Added multiple sort links to the batch macro\n\n0.7 - 2009-01-28\n----------------\n\n* Change to use the same names as ATCT where appropriate to avoid some\n  problems where the ATCT names are expected.\n* Flesh out the GenericSetup profile with all other bits in the Plone\n  profile that make reference to criteria.\n\n0.6 - 2009-01-26\n----------------\n\n* Use a form prefix for the search form.  Fixes calendar JavaScript\n  bug.\n* Fix criterion label to point to the correct form input\n* Allow widget special help/description to appear even if the label\n  isn't rendered and use this for the comma widget\n* Fix the handling of postbacks in the comma widget\n* Use a \"Search Form\" view that only renders the search form\n* Added boolean criteria\n* Added date criteria\n* Added path criteria\n* Added relative path criteria\n* Added integer criteria\n\n0.5 - 2009-01-25\n----------------\n\n* Form criteria are now designated by selecting which fields of each\n  criterion should be rendered on the search form\n* Improve label handling.  Remove labels for 'value' field and\n  \"required\" markers for all fields.\n* Make the search form collapsible and start collapsed when the form\n  has been submitted\n* Add a comma separated criterion\n\n0.4 - 2009-01-15\n----------------\n\n* Add list criterion\n* Add selection criterion\n* Fix the form for access by anonymous users\n\n0.3 - 2009-01-15\n----------------\n\n* Fully re-use the AT edit widgets\n* Support criteria with multiple fields\n* Use the widgets to process the form values\n* Add checkbox criterion based on FormSelectionCriterion,\n  FormPortalTypeCriterion, and FormReferenceCriterion\n* Add a date range form criterion (JS calendar not working yet)\n\n0.2 - 2008-05-27\n----------------\n\n* Fix i18n_domain in ZCML\n* Make the authenticator view conditional for Plone 3.0 compatibility\n\n0.1 - 2008-05-24\n----------------\n\n* Initial release\n\n\nTODO\n====\n\n* Replace KSS with jQuery for the AJAX folder contents stuff\n\n* Tabs for folder_contents based multiple object edit form for topic\n  containers such as topic columns.\n\n* Separate query and sort criteria out into topic containers and use\n  folder_contents based multi-edit form\n\n* Add coverage for folder contents buttons when using KSS select all\n  from all screens.  It didn't work for one deployment.\n\n* Add a sort icon to sortable folder_contents columns\n\n* Add support for including the URL in CSV export\n\n  Not sure what the right UI is for this, maybe add a special case\n  into the customViewFields field.\n\n* Add criteria ordering support\n\n* Form Sort Criteria\n  \n  An widget is avialable for selecting which of the possible\n  sort fields should be available for sorting on.  The InAndOutWidget is\n  used so that the order can be specified.\n  \n      >>> print browser.contents\n      <...\n      <div class=\"field ArchetypesInAndOutWidget\n      kssattr-atfieldname-sortFields\"\n      id=\"archetypes-fieldname-sortFields\">...\n      ...>Relevance</option>...\n      ...>Effective Date</option>...\n  \n  The InAndOutWidget uses JavaScript so we'll set the field manually for\n  testing.\n  \n      >>> self.login()\n      >>> foo_topic.setSortFields(['', 'effective', 'Type'])\n  \n      >>> form = browser.getForm(name=\"criteria_select\")\n      >>> form.getControl('Sort Order').selected = True\n  \n  Form sort criteria default to sorting on the \"Relevance\" field\n  corresponds to a sort by weight for searches that include queries\n  against indexs that support weighted results.\n  \n      >>> form = browser.getForm(action=\"criterion_edit_form\", index=0)\n      >>> form.getControl('Relevance').selected\n      True\n\n* Add AJAX search results refresh\n\n* Add single selection (pulldown, radio) criteria (davisagli)\n\n* Use subcollections to support AdvancedQuery operations\n\n  Collections will act as grouping/parenthesis *and* operators.  IOW,\n  a collection will have a boolean field to set whether it uses AND or\n  OR to find the intersection or union of its result sets.\n  Sub-collections will not acquire criteria but instead parent\n  collections will treat sub-collections as criteria groupings.  Not\n  yet sure how to handle sorting.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/collective/collective.formcriteria", "keywords": "", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "collective.formcriteria", "package_url": "https://pypi.org/project/collective.formcriteria/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.formcriteria/", "project_urls": {"Homepage": "https://github.com/collective/collective.formcriteria"}, "release_url": "https://pypi.org/project/collective.formcriteria/2.1/", "requires_dist": null, "requires_python": "", "summary": "Add forms for user enterable search criteria to collections.", "version": "2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package extends the Products.ATContentTypes.criteria types to\ncreate search forms.  Specifically, any criterion fields which are\nselected in each criterion\u2019s \u201cForm Fields\u201d will be rendered on the\nsearch form.  The values set on the criteria edit form become the\ndefault values on the search form.  Search terms submitted through the\nsearch form supplement any criteria not on the search form.  IOW,\ncriteria not appearing on the form become the base query built into\nthe search form.</p>\n<div id=\"table-of-contents\">\n<p>Table of Contents</p>\n<ul>\n<li><a href=\"#warning-uninstall\" id=\"id22\" rel=\"nofollow\">WARNING: Uninstall</a></li>\n<li><a href=\"#form-criteria\" id=\"id23\" rel=\"nofollow\">Form Criteria</a></li>\n<li><a href=\"#installing\" id=\"id24\" rel=\"nofollow\">Installing</a></li>\n<li><a href=\"#sorting\" id=\"id25\" rel=\"nofollow\">Sorting</a><ul>\n<li><a href=\"#fixed-sort-criteria\" id=\"id26\" rel=\"nofollow\">Fixed Sort Criteria</a></li>\n<li><a href=\"#grouped-listing\" id=\"id27\" rel=\"nofollow\">Grouped Listing</a></li>\n</ul>\n</li>\n<li><a href=\"#csv-export\" id=\"id28\" rel=\"nofollow\">CSV Export</a></li>\n<li><a href=\"#contents-view\" id=\"id29\" rel=\"nofollow\">Contents View</a><ul>\n<li><a href=\"#query-criteria\" id=\"id30\" rel=\"nofollow\">Query Criteria</a></li>\n</ul>\n</li>\n<li><a href=\"#changelog\" id=\"id31\" rel=\"nofollow\">Changelog</a><ul>\n<li><a href=\"#id1\" id=\"id32\" rel=\"nofollow\">2.1 (2016-08-05)</a></li>\n<li><a href=\"#id2\" id=\"id33\" rel=\"nofollow\">2.0 - 2012-11-01</a></li>\n<li><a href=\"#b2-2011-01-13\" id=\"id34\" rel=\"nofollow\">2.0b2 - 2011-01-13</a></li>\n<li><a href=\"#b1-2011-01-11\" id=\"id35\" rel=\"nofollow\">2.0b1 - 2011-01-11</a></li>\n<li><a href=\"#a4-2011-01-11\" id=\"id36\" rel=\"nofollow\">2.0a4 - 2011-01-11</a></li>\n<li><a href=\"#a3-2011-01-10\" id=\"id37\" rel=\"nofollow\">2.0a3 - 2011-01-10</a></li>\n<li><a href=\"#a2-2010-11-23\" id=\"id38\" rel=\"nofollow\">2.0a2 - 2010-11-23</a></li>\n<li><a href=\"#a1-2010-11-21\" id=\"id39\" rel=\"nofollow\">2.0a1 - 2010-11-21</a></li>\n<li><a href=\"#id3\" id=\"id40\" rel=\"nofollow\">1.1.1 - 2009-08-31</a></li>\n<li><a href=\"#id4\" id=\"id41\" rel=\"nofollow\">1.1.0 - 2009-08-21</a></li>\n<li><a href=\"#id5\" id=\"id42\" rel=\"nofollow\">1.0.2 - 2009-08-12</a></li>\n<li><a href=\"#id6\" id=\"id43\" rel=\"nofollow\">1.0.1 - 2009-08-11</a></li>\n<li><a href=\"#id7\" id=\"id44\" rel=\"nofollow\">1.0 - 2009-04-20</a></li>\n<li><a href=\"#id8\" id=\"id45\" rel=\"nofollow\">0.9.5 - 2009-03-06</a></li>\n<li><a href=\"#id9\" id=\"id46\" rel=\"nofollow\">0.9.4 - 2009-02-08</a></li>\n<li><a href=\"#id10\" id=\"id47\" rel=\"nofollow\">0.9.3 - 2009-01-31</a></li>\n<li><a href=\"#id11\" id=\"id48\" rel=\"nofollow\">0.9.2 - 2009-01-31</a></li>\n<li><a href=\"#id12\" id=\"id49\" rel=\"nofollow\">0.9.1 - 2009-01-30</a></li>\n<li><a href=\"#id13\" id=\"id50\" rel=\"nofollow\">0.9 - 2009-01-29</a></li>\n<li><a href=\"#id14\" id=\"id51\" rel=\"nofollow\">0.8 - 2009-01-29</a></li>\n<li><a href=\"#id15\" id=\"id52\" rel=\"nofollow\">0.7 - 2009-01-28</a></li>\n<li><a href=\"#id16\" id=\"id53\" rel=\"nofollow\">0.6 - 2009-01-26</a></li>\n<li><a href=\"#id17\" id=\"id54\" rel=\"nofollow\">0.5 - 2009-01-25</a></li>\n<li><a href=\"#id18\" id=\"id55\" rel=\"nofollow\">0.4 - 2009-01-15</a></li>\n<li><a href=\"#id19\" id=\"id56\" rel=\"nofollow\">0.3 - 2009-01-15</a></li>\n<li><a href=\"#id20\" id=\"id57\" rel=\"nofollow\">0.2 - 2008-05-27</a></li>\n<li><a href=\"#id21\" id=\"id58\" rel=\"nofollow\">0.1 - 2008-05-24</a></li>\n</ul>\n</li>\n<li><a href=\"#todo\" id=\"id59\" rel=\"nofollow\">TODO</a></li>\n</ul>\n</div>\n<p>A new \u201cSearch Form\u201d display layout is provided that renders the search\nform and the collection body text but no results.  The search form on\nthis layout will display results using the layout specified in the\n\u201cForm Results Layout\u201d field of the collection\u2019s edit form.</p>\n<p>The search form can also be rendered in a search form portlet based on\nplone.portlet.collection.  The portlet will not render on the search\nform view or the criteria edit form but otherwise will render the\nsearch form for the designated collection according to the portlet\nsettings.</p>\n<p>Thus the collection can use either the search form or a results\nlisting as the display layout.  Users can initiate searches using\neither the form or the portlet.  The portlet also reflects any\nsubmitted search terms and thus provides a convenient way for users to\nrefine their searches.</p>\n<p>Multiple sort criteria can also be added that will render user\nselectable sort links on the batch macro.  See\ncollective/formcriteria/criteria/sort.rst for more details.</p>\n<p>A CSV export action is also provided which provides a link to users\nallowing them to download the collections results, subject to the\nuser\u2019s query in the CSV format.  This allows collections to be used,\nfor example, in conjunction with spreadsheet software for ad-hoc\nreporting or limited export to other systems.</p>\n<p>A folder contents table display layout is also included.  This layout\nis not yet fully functional but provides the basis for some very rich\nsite admin functionality.</p>\n<div id=\"warning-uninstall\">\n<h2><a href=\"#id22\" rel=\"nofollow\">WARNING: Uninstall</a></h2>\n<p>Uninstalling this product after having added any collections or adding\ncriteria to any collections, even ones added before install, is\nuntested and may leave your collections broken.</p>\n</div>\n<div id=\"form-criteria\">\n<h2><a href=\"#id23\" rel=\"nofollow\">Form Criteria</a></h2>\n<p>Start with some content for search results.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from plone.app import testing\n&gt;&gt;&gt; from Products.CMFCore.utils import getToolByName\n&gt;&gt;&gt; portal = layer['portal']\n&gt;&gt;&gt; membership = getToolByName(portal, 'portal_membership')\n&gt;&gt;&gt; folder = membership.getHomeFolder(testing.TEST_USER_ID)\n&gt;&gt;&gt; testing.login(portal, testing.TEST_USER_NAME)\n&gt;&gt;&gt; folder['bar-document-title']\n&lt;ATDocument at /plone/Members/test_user_1_/bar-document-title&gt;\n&gt;&gt;&gt; folder['baz-event-title']\n&lt;ATEvent at /plone/Members/test_user_1_/baz-event-title&gt;\n</pre>\n</blockquote>\n<p>Open a browser and log in as a normal user.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from plone.testing import z2\n&gt;&gt;&gt; browser = z2.Browser(layer['app'])\n&gt;&gt;&gt; browser.handleErrors = False\n&gt;&gt;&gt; browser.open(portal.absolute_url())\n&gt;&gt;&gt; browser.getLink('Log in').click()\n&gt;&gt;&gt; browser.getControl('Login Name').value = testing.TEST_USER_NAME\n&gt;&gt;&gt; browser.getControl(\n...     'Password').value = testing.TEST_USER_PASSWORD\n&gt;&gt;&gt; browser.getControl('Log in').click()\n</pre>\n</blockquote>\n<p>Add and publish a collection.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.open(folder.absolute_url())\n&gt;&gt;&gt; browser.getLink('Collection').click()\n&gt;&gt;&gt; browser.getControl('Title').value = 'Foo Topic Title'\n&gt;&gt;&gt; browser.getControl('Save').click()\n&gt;&gt;&gt; print browser.contents\n&lt;...\n...Changes saved...\n&gt;&gt;&gt; foo_topic = folder['foo-topic-title']\n</pre>\n<pre>&gt;&gt;&gt; browser.getLink('Submit').click()\n&gt;&gt;&gt; print browser.contents\n&lt;...\n...Item state changed...\n</pre>\n<pre>&gt;&gt;&gt; z2.login(portal.getPhysicalRoot().acl_users, testing.SITE_OWNER_NAME)\n&gt;&gt;&gt; layer['portal'].portal_workflow.doActionFor(foo_topic, 'publish')\n&gt;&gt;&gt; testing.login(portal, testing.TEST_USER_NAME)\n</pre>\n<pre>&gt;&gt;&gt; import transaction\n&gt;&gt;&gt; transaction.commit()\n</pre>\n</blockquote>\n<p>Change the display layout of the collection to the \u201cSearch Form\u201d.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.getLink('Search Form').click()\n&gt;&gt;&gt; print browser.contents\n&lt;...\n...View changed...\n</pre>\n</blockquote>\n<p>Login as a user that can manage portlets.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; owner_browser = z2.Browser(layer['app'])\n&gt;&gt;&gt; owner_browser.handleErrors = False\n&gt;&gt;&gt; owner_browser.open(portal.absolute_url())\n&gt;&gt;&gt; owner_browser.getLink('Log in').click()\n&gt;&gt;&gt; owner_browser.getControl(\n...     'Login Name').value = testing.SITE_OWNER_NAME\n&gt;&gt;&gt; owner_browser.getControl(\n...     'Password').value = testing.TEST_USER_PASSWORD\n&gt;&gt;&gt; owner_browser.getControl('Log in').click()\n</pre>\n</blockquote>\n<p>Add the search form portlet for this collection to the folder.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; owner_browser.open(folder.absolute_url())\n&gt;&gt;&gt; owner_browser.getLink('Manage portlets').click()\n&gt;&gt;&gt; owner_browser.getControl(\n...     'Search form portlet', index=1).selected = True\n&gt;&gt;&gt; owner_browser.getForm(index=3).submit() # manually w/o JS\n&gt;&gt;&gt; print owner_browser.contents\n&lt;...\n...Add Search Form Portlet...\n</pre>\n<pre>&gt;&gt;&gt; header = owner_browser.getControl('Portlet header')\n&gt;&gt;&gt; header.value = 'Foo Search Form Title'\n&gt;&gt;&gt; foo_topic_path = '/'.join(\n...     ('',)+ foo_topic.getPhysicalPath()[\n...         len(portal.getPhysicalPath()):])\n&gt;&gt;&gt; header.mech_form.new_control(\n...     type='checkbox', name=\"form.target_collection\",\n...     attrs=dict(checked='checked', value=foo_topic_path))\n&gt;&gt;&gt; owner_browser.getControl('Save').click()\n&gt;&gt;&gt; print owner_browser.contents\n&lt;...\n...Foo Search Form Title...\n</pre>\n</blockquote>\n<p>Go to the collection\u2019s edit tab and set the \u201cForm Results Layout\u201d\nfield.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.getLink('Edit').click()\n&gt;&gt;&gt; browser.getControl('Collection').selected = True\n&gt;&gt;&gt; browser.getControl('Save').click()\n&gt;&gt;&gt; print browser.contents\n&lt;...\n...Changes saved...\n</pre>\n</blockquote>\n<p>Go to the \u201cCriteria\u201d tab and add a criterion for the workflow state\nthat won\u2019t appear on the form.  Then set the query term to return only\npublished content.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.getLink('Criteria').click()\n&gt;&gt;&gt; form = browser.getForm(name='criteria_select')\n&gt;&gt;&gt; form.getControl('State').selected = True\n&gt;&gt;&gt; form.getControl(\n...     'Select values from list', index=1).selected = True\n&gt;&gt;&gt; form.getControl('Add criteria').click()\n&gt;&gt;&gt; print browser.contents\n&lt;...\n...State...\n...Select values from list...\n</pre>\n</blockquote>\n<p>Since the test browser doesn\u2019t have JavaScript, test the\ndiscrimination of criteria types by index manually.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; foo_topic.allowedCriteriaForField('review_state')\n['FormSelectionCriterion', 'FormCheckboxCriterion',\n'FormPulldownCriterion', 'FormSimpleStringCriterion',\n'FormListCriterion', 'FormCommaCriterion', 'FormSortCriterion',\n'FormContextCriterion']\n&gt;&gt;&gt; foo_topic.allowedCriteriaForField(\n...     'review_state', display_list=True)\n&lt;DisplayList\n[('FormSelectionCriterion', 'Select values from list'),\n ('FormCheckboxCriterion', 'Check values'),\n ('FormPulldownCriterion', 'Select one value'),\n ('FormSimpleStringCriterion', 'Text'),\n ('FormListCriterion', 'List of values'),\n ('FormCommaCriterion', 'Enter comma separated values'),\n ('FormSortCriterion', 'Sort results'),\n ('FormContextCriterion',\n  'Values will be taken from the context')] at ...&gt;\n</pre>\n</blockquote>\n<p>Set the query term and save.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; form = browser.getForm(action=\"criterion_edit_form\", index=0)\n&gt;&gt;&gt; form.getControl('published').selected = True\n&gt;&gt;&gt; form.getControl('Save').click()\n&gt;&gt;&gt; print browser.contents\n&lt;...\n...Changes saved...\n</pre>\n</blockquote>\n<p>Open another browser as an anonymous user.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; anon_browser = z2.Browser(layer['app'])\n&gt;&gt;&gt; anon_browser.handleErrors = False\n</pre>\n</blockquote>\n<p>Before the topic has any form criteria, the search form is not\npresent.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; anon_browser.open(foo_topic.absolute_url()+'/atct_topic_view')\n&gt;&gt;&gt; anon_browser.getForm(name=\"formcriteria_search\")\nTraceback (most recent call last):\nLookupError\n</pre>\n</blockquote>\n<p>Add a simple string criterion for the SearchableText index on the\ncriteria tab.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; form = browser.getForm(name='criteria_select')\n&gt;&gt;&gt; form.getControl('Search Text').selected = True\n&gt;&gt;&gt; form.getControl(name=\"criterion_type\").getControl(\n...     'Text', index=1).selected = True\n&gt;&gt;&gt; form.getControl('Add criteria').click()\n&gt;&gt;&gt; print browser.contents\n&lt;...\n...Search Text...\n...A simple string criterion...\n</pre>\n</blockquote>\n<p>Select the criterion\u2019s \u2018value\u2019 field as a form field so it will appear\non the search form.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.getControl(\n...     name='crit__SearchableText_FormSimpleStringCriterion'\n...     '_formFields:list').getControl('Value').selected = True\n</pre>\n</blockquote>\n<p>Set a default search term.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.getControl(\n...     name=\"crit__SearchableText_FormSimpleStringCriterion\"\n...     \"_value\").value = 'bar'\n&gt;&gt;&gt; browser.getControl(name=\"form.button.Save\").click()\n&gt;&gt;&gt; print browser.contents\n&lt;...\n...Changes saved...\n</pre>\n</blockquote>\n<p>If no form value have been submitted, such as on a fresh load of the\ntopic view, the default term will be used in the query returning only\none of the content objects.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; len(foo_topic.queryCatalog())\n1\n</pre>\n<pre>&gt;&gt;&gt; anon_browser.open(foo_topic.absolute_url()+'/atct_topic_view')\n&gt;&gt;&gt; anon_browser.getLink('Bar Document Title')\n&lt;Link text='...Bar Document Title'\nurl='http://nohost/plone/Members/test_user_1_/bar-document-title'&gt;\n&gt;&gt;&gt; anon_browser.getLink('Baz Event Title')\nTraceback (most recent call last):\nLinkNotFoundError\n</pre>\n</blockquote>\n<p>Now that a form criterion has been added, the search form is\nrendered.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; anon_browser.open(foo_topic.absolute_url())\n&gt;&gt;&gt; form = anon_browser.getForm(name=\"formcriteria_search\")\n&gt;&gt;&gt; 'formcriteria-portlet.css' in anon_browser.contents\nTrue\n</pre>\n</blockquote>\n<p>Criterion fields that haven\u2019t been selected in \u201cForm Fields\u201d don\u2019t\nappear on the search form.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; form.getControl(\n...     name='form_crit__SearchableText_FormSimpleStringCriterion'\n...     '_formFields:list')\nTraceback (most recent call last):\nLookupError: name\n'form_crit__SearchableText_FormSimpleStringCriterion_formFields:list'\n</pre>\n</blockquote>\n<p>The label for the criterion corresponds to the form element for the\nfirst criterion field.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; ctl = form.getControl('Search Text')\n</pre>\n</blockquote>\n<p>Enter a search term and submit the query.  The topic will now list the\nother content object.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; ctl.value = 'baz'\n&gt;&gt;&gt; form.getControl(name='submit').click()\n&gt;&gt;&gt; anon_browser.getLink('Bar Document Title')\nTraceback (most recent call last):\nLinkNotFoundError\n&gt;&gt;&gt; anon_browser.getLink('Baz Event Title')\n&lt;Link text='...Baz Event Title'\nurl='http://nohost/plone/Members/test_user_1_/baz-event-title'&gt;\n</pre>\n</blockquote>\n<p>Since the search form has been submitted, the results are rendered on\nthe layout specified by the \u201cForm Results Layout\u201d.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; anon_browser.url.startswith(\n...     'http://nohost/plone/Members/test_user_1_/foo-topic-title'\n...     '/atct_topic_view')\nTrue\n</pre>\n</blockquote>\n<p>The search form portlet also reflects the search term submitted rather\nthan the default value submitted on the criteria tab.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; form = anon_browser.getForm(name=\"formcriteria_search\")\n&gt;&gt;&gt; ctl = form.getControl('Search Text')\n&gt;&gt;&gt; ctl.value\n'baz'\n</pre>\n</blockquote>\n<p>If the search form is submitted from this page, the results are still\nrendered on the same view.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; ctl.value = 'bar'\n&gt;&gt;&gt; form.getControl(name='submit').click()\n&gt;&gt;&gt; anon_browser.url.startswith(\n...     'http://nohost/plone/Members/test_user_1_/foo-topic-title'\n...     '/atct_topic_view')\nTrue\n</pre>\n</blockquote>\n<p>Values are also ignored if submitted for criteria fields which are not\nlisted in \u201cForm Fields\u201d.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; crit = foo_topic.getCriterion(\n...     'SearchableText_FormSimpleStringCriterion')\n&gt;&gt;&gt; crit.setFormFields([])\n&gt;&gt;&gt; transaction.commit()\n</pre>\n<pre>&gt;&gt;&gt; anon_browser.open(\n...     foo_topic.absolute_url()+'/atct_topic_view'\n...     '?form_crit__SearchableText_FormSimpleStringCriterion'\n...     '_value=baz')\n&gt;&gt;&gt; anon_browser.getLink('Bar Document Title')\n&lt;Link text='...Bar Document Title'\nurl='http://nohost/plone/Members/test_user_1_/bar-document-title'&gt;\n&gt;&gt;&gt; anon_browser.getLink('Baz Event Title')\nTraceback (most recent call last):\nLinkNotFoundError\n</pre>\n<pre>&gt;&gt;&gt; crit.setFormFields(['value'])\n</pre>\n<pre>&gt;&gt;&gt; import transaction\n&gt;&gt;&gt; transaction.commit()\n</pre>\n</blockquote>\n<p>The search form handles index query parsing errors gracefully\ndisplaying a message to the user.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; anon_browser.open(foo_topic.absolute_url())\n&gt;&gt;&gt; form = anon_browser.getForm(name=\"formcriteria_search\")\n&gt;&gt;&gt; ctl = form.getControl('Search Text')\n&gt;&gt;&gt; ctl.value = 'bar (baz)'\n&gt;&gt;&gt; form.getControl(name='submit').click()\n&gt;&gt;&gt; print anon_browser.contents\n&lt;...There are currently no results for this search...\n&gt;&gt;&gt; anon_browser.getLink('Bar Document Title')\nTraceback (most recent call last):\nLinkNotFoundError\n&gt;&gt;&gt; anon_browser.getLink('Baz Event Title')\nTraceback (most recent call last):\nLinkNotFoundError\n</pre>\n</blockquote>\n<p>The search form portlet successfully renders when viewed on a context\nother than the portlet.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; anon_browser.open(folder.absolute_url())\n&gt;&gt;&gt; form = anon_browser.getForm(name=\"formcriteria_search\")\n</pre>\n</blockquote>\n<p>Ensure that collective.formcriteria doesn\u2019t break existing ATTopic\ninstances such as those created by default in a Plone site.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; owner_browser.open(portal.news.absolute_url())\n&gt;&gt;&gt; print owner_browser.contents\n&lt;...\n...Site News...\n...There are currently no items in this folder...\n</pre>\n<pre>&gt;&gt;&gt; owner_browser.getLink('Edit').click()\n&gt;&gt;&gt; print owner_browser.contents\n&lt;...\n... Search terms ...\n</pre>\n</blockquote>\n<p>Make sure none of the collective.formcriteria extensions interfere\nwith existing ATTopic instances.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.open(portal.events.aggregator.absolute_url())\n</pre>\n</blockquote>\n<p>All criteria can also be created using poral_types.constructContent.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; z2.login(portal.getPhysicalRoot().acl_users, testing.SITE_OWNER_NAME)\n&gt;&gt;&gt; foo_topic.deleteCriterion(\n...     'crit__SearchableText_FormSimpleStringCriterion')\n&gt;&gt;&gt; foo_topic.deleteCriterion(\n...     'crit__review_state_FormSelectionCriterion')\n&gt;&gt;&gt; seen = set()\n&gt;&gt;&gt; topic_indexes = portal.portal_atct.topic_indexes\n&gt;&gt;&gt; for field, index in sorted(topic_indexes.iteritems()):\n...     for criterion in index.criteria:\n...         if criterion in seen or criterion.startswith('AT'):\n...             continue\n...         portal.portal_types.constructContent(\n...             criterion, foo_topic,\n...             id='crit__%s_%s' % (field, criterion))\n...         seen.add(criterion)\n'crit__Creator_FormSelectionCriterion'\n'crit__Creator_FormCheckboxCriterion'\n'crit__Creator_FormPulldownCriterion'\n'crit__Creator_FormSimpleStringCriterion'\n'crit__Creator_FormListCriterion'\n'crit__Creator_FormCommaCriterion'\n'crit__Creator_FormSortCriterion'\n'crit__Creator_FormContextCriterion'\n'crit__Date_FormDateCriterion'\n'crit__Date_FormDateRangeCriterion'\n'crit__Type_FormPortalTypeCriterion'\n'crit__Type_FormPortalTypeCheckboxCriterion'\n'crit__Type_FormPortalTypePulldownCriterion'...\n'crit__path_FormPathCriterion'\n'crit__path_FormRelativePathCriterion'\n</pre>\n</blockquote>\n</div>\n<div id=\"installing\">\n<h2><a href=\"#id24\" rel=\"nofollow\">Installing</a></h2>\n<p>The \u2018default\u2019 profile is used when installing collective.formcriteria\nthrough the Plone Add-ons control panel</p>\n<blockquote>\n<pre>&gt;&gt;&gt; portal.portal_quickinstaller.uninstallProducts(['collective.formcriteria'])\n&gt;&gt;&gt; print portal.portal_quickinstaller.installProducts(['collective.formcriteria'])\n    Installed Products\n    ====================\n    collective.formcriteria:ok:\n&gt;&gt;&gt; portal.portal_quickinstaller.getInstallProfiles(\n...     'collective.formcriteria')[0]\nu'collective.formcriteria:default'\n</pre>\n</blockquote>\n</div>\n<div id=\"sorting\">\n<h2><a href=\"#id25\" rel=\"nofollow\">Sorting</a></h2>\n<p>Two kinds of sort criteria are supported.  Multiple fixed sort\ncriteria can be defined allowing the user to select from among them\nusing links on the batch macro.  One form sort criterion can be added\nper collection to allows the user to specify a sort on the sort form.\nIf both are used, and the user has both submitted a sort from the form\nand selected a sort from the batch links, the latter criterion in the\nlist of criteria takes effect.</p>\n<p>Form sort criteria are not yet implemented.</p>\n<div id=\"fixed-sort-criteria\">\n<h3><a href=\"#id26\" rel=\"nofollow\">Fixed Sort Criteria</a></h3>\n<p>Set the item count to 1 so that batches will only have one item.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from Products.CMFCore.utils import getToolByName\n&gt;&gt;&gt; portal = layer['portal']\n&gt;&gt;&gt; membership = getToolByName(portal, 'portal_membership')\n</pre>\n<pre>&gt;&gt;&gt; from plone.app import testing\n&gt;&gt;&gt; folder = membership.getHomeFolder(testing.TEST_USER_ID)\n&gt;&gt;&gt; foo_topic = folder['foo-topic-title']\n&gt;&gt;&gt; foo_topic.setItemCount(1)\n</pre>\n<pre>&gt;&gt;&gt; import transaction\n&gt;&gt;&gt; transaction.commit()\n</pre>\n</blockquote>\n<p>Open a browser and log in as a normal user.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from plone.testing import z2\n&gt;&gt;&gt; from plone.app import testing\n&gt;&gt;&gt; portal = layer['portal']\n&gt;&gt;&gt; browser = z2.Browser(layer['app'])\n&gt;&gt;&gt; browser.handleErrors = False\n&gt;&gt;&gt; browser.open(portal.absolute_url())\n&gt;&gt;&gt; browser.getLink('Log in').click()\n&gt;&gt;&gt; browser.getControl('Login Name').value = testing.TEST_USER_NAME\n&gt;&gt;&gt; browser.getControl(\n...     'Password').value = testing.TEST_USER_PASSWORD\n&gt;&gt;&gt; browser.getControl('Log in').click()\n</pre>\n</blockquote>\n<p>Load the criteria edit form of a collection.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.open(foo_topic.absolute_url())\n&gt;&gt;&gt; browser.getLink('Criteria').click()\n</pre>\n</blockquote>\n<p>The sort selection form has been removed from the criteria tab.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.getForm(action=\"criterion_edit_form\", index=1)\nTraceback (most recent call last):\nIndexError: list index out of range\n</pre>\n</blockquote>\n<p>Instead, multiple sort criteria can be added to a collection using the\nnormal criterion add form on the criteria tab.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; form = browser.getForm(name=\"criteria_select\")\n&gt;&gt;&gt; form.getControl('Relevance').selected = True\n&gt;&gt;&gt; form.getControl('Sort results').selected = True\n&gt;&gt;&gt; form.getControl('Add criteria').click()\n&gt;&gt;&gt; print browser.contents\n&lt;...\n...Added criterion FormSortCriterion for field unsorted...\n</pre>\n</blockquote>\n<p>Add another sort criterion for the Date field reversed.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; form = browser.getForm(name=\"criteria_select\")\n&gt;&gt;&gt; form.getControl('Effective Date').selected = True\n&gt;&gt;&gt; form.getControl('Sort results').selected = True\n&gt;&gt;&gt; form.getControl('Add criteria').click()\n&gt;&gt;&gt; print browser.contents\n&lt;...\n...Added criterion FormSortCriterion for field effective...\n</pre>\n</blockquote>\n<p>Change the display layout of the collection to the \u201cSearch Form\u201d then\nsubmit a search criteria to test that the sort links preserve search\ncriteria.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; foo_topic.setLayout('criteria_form')\n&gt;&gt;&gt; foo_topic.addCriterion(\n...     'SearchableText','FormSimpleStringCriterion'\n...     ).setFormFields(['value'])\n</pre>\n<pre>&gt;&gt;&gt; import transaction\n&gt;&gt;&gt; transaction.commit()\n</pre>\n<pre>&gt;&gt;&gt; browser.getLink('View').click()\n&gt;&gt;&gt; form = browser.getForm(name=\"formcriteria_search\")\n&gt;&gt;&gt; form.getControl('Search Text').value = 'blah'\n&gt;&gt;&gt; form.getControl(name='submit').click()\n</pre>\n</blockquote>\n<p>When the batch macro is rendered on a collection view, such as one of\nthe listings, it includes links to the different possible sorts in\norder.  By default, the first sort criteria is selected.  The sort\nlinks also have id\u2019s and CSS classes for styling support.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print browser.contents\n&lt;...\n          Sort on:\n            &lt;span class=\"formcriteriaSortField selected\"&gt;Relevance&lt;/span&gt;\n            &lt;button...&gt;Effective Date&lt;/button&gt;\n...\n&gt;&gt;&gt; form = browser.getForm(name=\"navigation_form\")\n&gt;&gt;&gt; form.getControl(\n...     name=\"crit__unsorted_FormSortCriterion:boolean\")\nTraceback (most recent call last):\nLookupError: name\n'crit__unsorted_FormSortCriterion:boolean'\n</pre>\n</blockquote>\n<p>The results are listed in order of weight.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.getLink('Baz Event Title')\n&lt;Link text='...Baz Event Title'\nurl='http://nohost/plone/Members/test_user_1_/baz-event-title'&gt;\n&gt;&gt;&gt; browser.getLink('Bar Document Title')\nTraceback (most recent call last):\nLinkNotFoundError\n</pre>\n</blockquote>\n<p>When a sort link is clicked, that sort will show as selected and\nresults will be sorted according to the sort criteria.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; form = browser.getForm(name=\"navigation_form\")\n&gt;&gt;&gt; form.getControl(\n...     name=\"crit__effective_FormSortCriterion:boolean\").click()\n&gt;&gt;&gt; print browser.contents\n&lt;...\n...Sort on:...\n...Relevance...\n...Effective Date&lt;/span&gt;...\n&gt;&gt;&gt; form = browser.getForm(name=\"navigation_form\")\n&gt;&gt;&gt; form.getControl(\n...     name=\"crit__effective_FormSortCriterion:boolean\")\n&lt;Control name='crit__effective_FormSortCriterion:boolean' type='hidden'&gt;\n&gt;&gt;&gt; form = browser.getForm(name=\"navigation_form\")\n&gt;&gt;&gt; form.getControl(\n...     name=\"crit__unsorted_FormSortCriterion:boolean\")\n&lt;SubmitControl name='crit__unsorted_FormSortCriterion:boolean'\ntype='submitbutton'&gt;\n</pre>\n</blockquote>\n<p>The results reflect that the search query is preserved across the new\nsort selection.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.getLink('Bar Document Title')\n&lt;Link text='...Bar Document Title'\nurl='http://nohost/plone/Members/test_user_1_/bar-document-title'&gt;\n&gt;&gt;&gt; browser.getLink('Baz Event Title')\nTraceback (most recent call last):\nLinkNotFoundError\n</pre>\n</blockquote>\n<p>If the next batch is selected the sort and search query are\npreserved.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; form = browser.getForm(name=\"navigation_form\")\n&gt;&gt;&gt; form.getControl(name=\"b_start\", index=0).click()\n&gt;&gt;&gt; browser.getLink('Bar Document Title')\nTraceback (most recent call last):\nLinkNotFoundError\n&gt;&gt;&gt; browser.getLink('Baz Event Title')\n&lt;Link text='...Baz Event Title'\nurl='http://nohost/plone/Members/test_user_1_/baz-event-title'&gt;\n</pre>\n</blockquote>\n<p>The batch macro will render the sort links even if there\u2019s only one\nbatch.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; foo_topic.setItemCount(0)\n</pre>\n<pre>&gt;&gt;&gt; import transaction\n&gt;&gt;&gt; transaction.commit()\n</pre>\n<pre>&gt;&gt;&gt; browser.open(foo_topic.absolute_url()+'/atct_topic_view')\n&gt;&gt;&gt; form = browser.getForm(name=\"navigation_form\")\n&gt;&gt;&gt; form.getControl(\n...     name=\"crit__effective_FormSortCriterion:boolean\")\n&lt;SubmitControl name='crit__effective_FormSortCriterion:boolean'\ntype='submitbutton'&gt;\n</pre>\n</blockquote>\n<p>Ensure that the extended sort criteria work inside previously created\nATTopic instances.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; topic = folder['at-topic-title']\n&gt;&gt;&gt; topic.setSortCriterion('effective', True)\n&gt;&gt;&gt; topic.queryCatalog()[0].getObject()\n&lt;ATEvent at /plone/Members/test_user_1_/baz-event-title&gt;\n</pre>\n</blockquote>\n</div>\n<div id=\"grouped-listing\">\n<h3><a href=\"#id27\" rel=\"nofollow\">Grouped Listing</a></h3>\n<p>A variation on the default collection view is provided that lists\nitems grouped by the sort used.  This requires that the index used for\nsorting is also in the catalog metadata columns and this available on\nthe catalog brains.</p>\n<p>Sort by creator to that we get at least one group with multiple\nitems.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; foo_topic.deleteCriterion('crit__unsorted_FormSortCriterion')\n&gt;&gt;&gt; foo_topic.setSortCriterion('Creator', False)\n</pre>\n<pre>&gt;&gt;&gt; import transaction\n&gt;&gt;&gt; transaction.commit()\n</pre>\n</blockquote>\n<p>Select the layout.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.open(foo_topic.absolute_url())\n&gt;&gt;&gt; browser.getLink('Grouped Listing').click()\n&gt;&gt;&gt; print browser.contents\n&lt;...\n...View changed...\n&gt;&gt;&gt; browser.getLink('Log out').click()\n</pre>\n</blockquote>\n<p>Now the items are grouped by the sort values.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.open(foo_topic.absolute_url())\n&gt;&gt;&gt; print browser.contents\n&lt;...\n...&lt;dl...\n...&lt;dt...bar_creator_id...&lt;/dt&gt;...\n...&lt;dd...\n...Baz Event Title...\n...&lt;/dd...\n...&lt;dt...foo_creator_id...&lt;/dt&gt;...\n...&lt;dd...\n...Foo Event Title...\n...Bar Document Title...\n...&lt;/dd...\n...&lt;/dl&gt;...\n</pre>\n</blockquote>\n<p>The grouped listing layout requires a sort criterion to render and\nraises an error if one is not present.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; foo_topic.deleteCriterion('crit__Creator_ATSortCriterion')\n</pre>\n<pre>&gt;&gt;&gt; import transaction\n&gt;&gt;&gt; transaction.commit()\n</pre>\n<pre>&gt;&gt;&gt; browser.open(foo_topic.absolute_url())\nTraceback (most recent call last):\nAssertionError: ...\n</pre>\n</blockquote>\n<p>The batch macros still work for topics that have no sort criteria.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; foo_topic.setLayout('criteria_form')\n</pre>\n<pre>&gt;&gt;&gt; import transaction\n&gt;&gt;&gt; transaction.commit()\n</pre>\n<pre>&gt;&gt;&gt; browser.open(foo_topic.absolute_url())\n&gt;&gt;&gt; form = browser.getForm(name=\"formcriteria_search\")\n&gt;&gt;&gt; form.getControl('Search Text').value = 'blah'\n&gt;&gt;&gt; form.getControl(name='submit').click()\n&gt;&gt;&gt; 'Sort on:' in browser.contents\nFalse\n</pre>\n</blockquote>\n</div>\n</div>\n<div id=\"csv-export\">\n<h2><a href=\"#id28\" rel=\"nofollow\">CSV Export</a></h2>\n<p>The data accessed in tabular form from collections is often exactly\nthe data site admins want to export into other formats such as CSV.\nThis package provides views for exporting the current query\u2019s\ncollection data into various formats.  The CSV columns are taken from\nthe collections \u2018Table Columns\u2019 field on the edit tab/form regardless\nof whether the table layout is used.  The CSV export link is available\nas a document action like the print and send-to actions.</p>\n<p>Change the columns and link columns.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from plone.testing import z2\n&gt;&gt;&gt; from plone.app import testing\n&gt;&gt;&gt; portal = layer['portal']\n&gt;&gt;&gt; z2.login(portal.getPhysicalRoot().acl_users, testing.SITE_OWNER_NAME)\n</pre>\n<pre>&gt;&gt;&gt; from Products.CMFCore.utils import getToolByName\n&gt;&gt;&gt; membership = getToolByName(portal, 'portal_membership')\n&gt;&gt;&gt; folder = membership.getHomeFolder(testing.TEST_USER_ID)\n&gt;&gt;&gt; foo_topic = folder['foo-topic-title']\n&gt;&gt;&gt; columns = foo_topic.columns\n&gt;&gt;&gt; columns.manage_delObjects(\n...     ['ModificationDate-column', 'get_size-column',\n...      'review_state-column'])\n&gt;&gt;&gt; columns['getPath-column'].update(filter='')\n&gt;&gt;&gt; columns['Title-column'].update(link=False, sort='')\n&gt;&gt;&gt; desc_column = columns[columns.invokeFactory(\n...     type_name='TopicColumn', id='Description-column',\n...     link=True)]\n&gt;&gt;&gt; foo_topic.manage_delObjects(\n...     ['crit__sortable_title_FormSortCriterion',\n...      'crit__get_size_FormSortCriterion',\n...      'crit__modified_FormSortCriterion',\n...      'crit__review_state_FormSortCriterion'])\n&gt;&gt;&gt; testing.logout()\n</pre>\n</blockquote>\n<p>Add some criteria to the collection.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; _ = foo_topic.addCriterion(\n...     'path', 'FormRelativePathCriterion')\n&gt;&gt;&gt; foo_topic.addCriterion(\n...     'Type', 'FormSelectionCriterion'\n...     ).setValue(['Page', 'Event'])\n&gt;&gt;&gt; foo_topic.getCriterion(\n...     'SearchableText_FormSimpleStringCriterion'\n...     ).setFormFields(['value'])\n&gt;&gt;&gt; _ = foo_topic.addCriterion(\n...     'unsorted', 'FormSortCriterion')\n&gt;&gt;&gt; _ = foo_topic.addCriterion(\n...     'effective', 'FormSortCriterion')\n</pre>\n<pre>&gt;&gt;&gt; import transaction\n&gt;&gt;&gt; transaction.commit()\n</pre>\n</blockquote>\n<p>Open a browser and log in as a normal user.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser = z2.Browser(layer['app'])\n&gt;&gt;&gt; browser.handleErrors = False\n&gt;&gt;&gt; browser.open(portal.absolute_url())\n&gt;&gt;&gt; browser.getLink('Log in').click()\n&gt;&gt;&gt; browser.getControl('Login Name').value = testing.TEST_USER_NAME\n&gt;&gt;&gt; browser.getControl(\n...     'Password').value = testing.TEST_USER_PASSWORD\n&gt;&gt;&gt; browser.getControl('Log in').click()\n</pre>\n</blockquote>\n<p>The export link is now available.  Download the raw, un-queried\ncollection results.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.open(foo_topic.absolute_url())\n&gt;&gt;&gt; export_link = browser.getLink('Export')\n&gt;&gt;&gt; export_link.click()\n&gt;&gt;&gt; browser.isHtml\nFalse\n&gt;&gt;&gt; print browser.headers\nStatus: 200 ...\nContent-Disposition: attachment...\nContent-Type: text/csv...\n</pre>\n</blockquote>\n<p>Since the testbrowser can\u2019t handle file downloads, we\u2019ll check the CSV\noutput by calling the browser view directly.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from zope import interface\n&gt;&gt;&gt; from collective.formcriteria import interfaces\n&gt;&gt;&gt; interface.alsoProvides(layer['request'], interfaces.IFormCriteriaLayer)\n&gt;&gt;&gt; from collective.formcriteria.testing import export\n</pre>\n<pre>&gt;&gt;&gt; print export(portal, foo_topic, layer['request'], export_link.url)\nStatus: 200 OK...\nContent-Type: text/csv\nContent-Disposition: attachment;filename=foo-topic-title.csv\nURL,Title,Description\nhttp://nohost/plone/Members/test_user_1_/foo-event-title,Foo Event Title,\nhttp://nohost/plone/Members/test_user_1_/bar-document-title,Bar Document Title,blah\nhttp://nohost/plone/Members/test_user_1_/baz-event-title,Baz Event Title,blah blah\n&gt;&gt;&gt; testing.logout()\n</pre>\n</blockquote>\n<p>Add the search form portlet.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from zope import component\n&gt;&gt;&gt; from plone.i18n.normalizer import (\n...     interfaces as normalizer_ifaces)\n&gt;&gt;&gt; from collective.formcriteria.portlet import portlet\n&gt;&gt;&gt; testing.login(portal, testing.TEST_USER_NAME)\n&gt;&gt;&gt; manager = foo_topic.restrictedTraverse(\n...     '++contextportlets++plone.rightcolumn')\n&gt;&gt;&gt; site_path_len = len(portal.getPhysicalPath())\n&gt;&gt;&gt; assignment = portlet.Assignment(\n...     header='Foo Search Form Title',\n...     target_collection='/'.join(\n...         foo_topic.getPhysicalPath()[site_path_len:]))\n&gt;&gt;&gt; name = component.getUtility(\n...     normalizer_ifaces.IIDNormalizer).normalize(\n...         assignment.title)\n&gt;&gt;&gt; manager[name] = assignment\n&gt;&gt;&gt; testing.logout()\n</pre>\n<pre>&gt;&gt;&gt; import transaction\n&gt;&gt;&gt; transaction.commit()\n</pre>\n</blockquote>\n<p>Submit a query.  The exported CSV reflects the user submitted query\nand is sorted by relevance.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.open(foo_topic.absolute_url())\n&gt;&gt;&gt; form = browser.getForm(name=\"formcriteria_search\")\n&gt;&gt;&gt; form.getControl('Search Text').value = 'blah'\n&gt;&gt;&gt; form.getControl(name='submit').click()\n</pre>\n<pre>&gt;&gt;&gt; export_link = browser.getLink('Export')\n&gt;&gt;&gt; export_link.click()\n&gt;&gt;&gt; browser.isHtml\nFalse\n&gt;&gt;&gt; print browser.headers\nStatus: 200...\nContent-Disposition: attachment;filename=foo-topic-title.csv\nContent-Length: ...\nContent-Type: text/csv...\n&gt;&gt;&gt; print export(portal, foo_topic, layer['request'], export_link.url)\nURL,Title,Description\nhttp://nohost/plone/Members/test_user_1_/baz-event-title,Baz Event Title,blah blah\nhttp://nohost/plone/Members/test_user_1_/bar-document-title,Bar Document Title,blah\n</pre>\n</blockquote>\n<p>Select another sort, The exported CSV reflects the user selected sort\nand query.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.open(foo_topic.absolute_url())\n&gt;&gt;&gt; form = browser.getForm(name=\"formcriteria_search\")\n&gt;&gt;&gt; form.getControl('Search Text').value = 'blah'\n&gt;&gt;&gt; form.getControl(name='submit').click()\n&gt;&gt;&gt; browser.getControl(\n...     name=\"crit__effective_FormSortCriterion:boolean\").click()\n</pre>\n<pre>&gt;&gt;&gt; export_link = browser.getLink('Export')\n&gt;&gt;&gt; export_link.click()\n&gt;&gt;&gt; browser.isHtml\nFalse\n&gt;&gt;&gt; print export(portal, foo_topic, layer['request'], export_link.url)\nURL,Title,Description\nhttp://nohost/plone/Members/test_user_1_/bar-document-title,Bar Document Title,blah\nhttp://nohost/plone/Members/test_user_1_/baz-event-title,Baz Event Title,blah blah\n</pre>\n</blockquote>\n<p>It is also possible to change the CSV format by passing in request\nkeys with a special \u2018csv.fmtparam-\u2018 prefix.  These values are passed\ninto Python\u2019s csv.writer() factory as keyword arguments.  For example,\nto use a tab character as a delimiter instead of \u201c,\u201d, add a\n\u2018csv.fmtparam-delimiter\u2019 key to the request.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.open(foo_topic.absolute_url())\n&gt;&gt;&gt; export_url = browser.getLink('Export').url\n&gt;&gt;&gt; browser.open(export_url  + '&amp;csv.fmtparam-delimiter=%09')\n&gt;&gt;&gt; browser.isHtml\nFalse\n&gt;&gt;&gt; print export(portal, foo_topic, layer['request'],\n...              export_url + '&amp;csv.fmtparam-delimiter=%09')\nURL Title   Description\nhttp://nohost/plone/Members/test_user_1_/foo-event-title    Foo Event Title\nhttp://nohost/plone/Members/test_user_1_/bar-document-title Bar Document Title      blah\nhttp://nohost/plone/Members/test_user_1_/baz-event-title    Baz Event Title blah blah\n</pre>\n</blockquote>\n<p>It\u2019s also possible to add a column for fields that don\u2019t have\ncorresponding catalog metadata.  Be aware that using such columns can\ngreatly affect performance as export requires looking up every object\nto retrieve the data.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; z2.login(portal.getPhysicalRoot().acl_users, testing.SITE_OWNER_NAME)\n&gt;&gt;&gt; text_column = columns[columns.invokeFactory(\n...     type_name='TopicColumn', id='getText-column',\n...     title='Text', link=True)]\n&gt;&gt;&gt; testing.logout()\n</pre>\n<pre>&gt;&gt;&gt; import transaction\n&gt;&gt;&gt; transaction.commit()\n</pre>\n<pre>&gt;&gt;&gt; browser.open(export_url)\n&gt;&gt;&gt; browser.isHtml\nFalse\n&gt;&gt;&gt; print export(portal, foo_topic, layer['request'], export_url)\nURL,Title,Description,Text\nhttp://nohost/plone/Members/test_user_1_/foo-event-title,Foo Event Title,,&lt;p&gt;foo...&lt;/p&gt;\nhttp://nohost/plone/Members/test_user_1_/bar-document-title,Bar Document Title,blah,&lt;p&gt;bar...&lt;/p&gt;\nhttp://nohost/plone/Members/test_user_1_/baz-event-title,Baz Event Title,blah blah,\n</pre>\n</blockquote>\n<p>The export link isn\u2019t available if there are no collection columns.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; z2.login(portal.getPhysicalRoot().acl_users, testing.SITE_OWNER_NAME)\n&gt;&gt;&gt; foo_topic.manage_delObjects(['columns'])\n&gt;&gt;&gt; testing.logout()\n</pre>\n<pre>&gt;&gt;&gt; import transaction\n&gt;&gt;&gt; transaction.commit()\n</pre>\n<pre>&gt;&gt;&gt; browser.open(foo_topic.absolute_url())\n&gt;&gt;&gt; browser.getLink('Export')\nTraceback (most recent call last):\nLinkNotFoundError\n</pre>\n</blockquote>\n</div>\n<div id=\"contents-view\">\n<h2><a href=\"#id29\" rel=\"nofollow\">Contents View</a></h2>\n<p>A version of the folder_contents can be used with collections\nwhere the columns are those specified in the collection\u2019s \u201cTable\nColumns\u201d field.  The buttons at the bottom of the folder contents view\nwill then be applied to the selected items.</p>\n<p>Any columns that are selected in the collection\u2019s \u201cTable\nColumns\u201d field that are also selected in the \u201cTable Column Links\u201d\nfield will be rendered as links.  Note that it\u2019s possible to select a\nlink column that isn\u2019t a table column which will have no effect.</p>\n<p>Add a simple string criterion for the SearchableText index on the\ncriteria tab.  Set a default search term.  Add a sort criteria for\nconsistent ordering.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from plone.app import testing\n&gt;&gt;&gt; from Products.CMFCore.utils import getToolByName\n&gt;&gt;&gt; portal = layer['portal']\n&gt;&gt;&gt; membership = getToolByName(portal, 'portal_membership')\n&gt;&gt;&gt; folder = membership.getHomeFolder(testing.TEST_USER_ID)\n&gt;&gt;&gt; foo_topic = folder['foo-topic-title']\n&gt;&gt;&gt; crit = foo_topic.getCriterion(\n...     'SearchableText_FormSimpleStringCriterion')\n&gt;&gt;&gt; crit.setValue('bar')\n&gt;&gt;&gt; crit.setFormFields(['value'])\n&gt;&gt;&gt; sort = foo_topic.addCriterion(\n...     'getPhysicalPath', 'FormSortCriterion')\n</pre>\n<pre>&gt;&gt;&gt; import transaction\n&gt;&gt;&gt; transaction.commit()\n</pre>\n</blockquote>\n<p>Open a browser and log in as a user who can change the display layout\nfor the topic.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from plone.testing import z2\n&gt;&gt;&gt; browser = z2.Browser(layer['app'])\n&gt;&gt;&gt; browser.handleErrors = False\n&gt;&gt;&gt; browser.open(portal.absolute_url())\n&gt;&gt;&gt; browser.getLink('Log in').click()\n&gt;&gt;&gt; browser.getControl('Login Name').value = testing.TEST_USER_NAME\n&gt;&gt;&gt; browser.getControl(\n...     'Password').value = testing.TEST_USER_PASSWORD\n&gt;&gt;&gt; browser.getControl('Log in').click()\n</pre>\n</blockquote>\n<p>Change the topic\u2019s display layout and the search form results layout\nto the contents view.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.open(foo_topic.absolute_url())\n&gt;&gt;&gt; browser.getLink('Tabular Form').click()\n&gt;&gt;&gt; print browser.contents\n&lt;...\n...View changed...\n</pre>\n</blockquote>\n<p>The view renders the contents form with the default columns.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.getForm(name=\"folderContentsForm\")\n&lt;zope.testbrowser.browser.Form object at ...&gt;\n&gt;&gt;&gt; print browser.contents\n&lt;...\n...Title...\n...Size...\n...Modification Date...\n...State...\n</pre>\n</blockquote>\n<p>The order column is not included since order is determined by the\ncollection and is fixed.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; 'Order' in browser.contents\nFalse\n</pre>\n</blockquote>\n<p>The topic contents are listed in the contents table form and the\ntitles are links to the item.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print browser.contents\n&lt;...\n...Bar Document Title...\n...2.9 kB...\n...&lt;span class=\"state-published\"&gt;Published&lt;/span&gt;...\n&gt;&gt;&gt; from collective.formcriteria.testing import CONTENT_FIXTURE\n&gt;&gt;&gt; now = CONTENT_FIXTURE.now\n&gt;&gt;&gt; str(portal.restrictedTraverse('@@plone').toLocalizedTime(now)\n...     ) in browser.contents\nTrue\n</pre>\n<pre>&gt;&gt;&gt; browser.getControl('Bar Document Title')\n&lt;ItemControl name='paths:list' type='checkbox'\noptionValue='/plone/Members/test_user_1_/bar-document-title'\nselected=False&gt;\n&gt;&gt;&gt; browser.getLink('Bar Document Title')\n&lt;Link text='Bar Document Title'\nurl='http://nohost/plone/Members/test_user_1_/bar-document-title'&gt;\n</pre>\n</blockquote>\n<p>The first sort criterion is the default sort.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.getControl(name=\"sort_on\").value\n'sortable_title'\n</pre>\n</blockquote>\n<p>Select different collection columns and which columns link to the\nresult item.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; z2.login(portal.getPhysicalRoot().acl_users, testing.SITE_OWNER_NAME)\n&gt;&gt;&gt; columns = foo_topic.columns\n&gt;&gt;&gt; columns.manage_delObjects(\n...     ['ModificationDate-column', 'get_size-column',\n...      'review_state-column'])\n&gt;&gt;&gt; columns['Title-column'].update(link=False)\n&gt;&gt;&gt; desc_column = columns[columns.invokeFactory(\n...     type_name='TopicColumn', id='Description-column',\n...     link=True)]\n&gt;&gt;&gt; effective_column = columns[columns.invokeFactory(\n...     type_name='TopicColumn', id='EffectiveDate-column',\n...     link=True)]\n&gt;&gt;&gt; foo_topic.manage_delObjects(\n...     ['crit__get_size_FormSortCriterion',\n...      'crit__get_size_FormSimpleIntCriterion',\n...      'crit__modified_FormSortCriterion',\n...      'crit__modified_FormDateCriterion',\n...      'crit__review_state_FormSortCriterion',\n...      'crit__review_state_FormSelectionCriterion'])\n&gt;&gt;&gt; testing.logout()\n</pre>\n<pre>&gt;&gt;&gt; import transaction\n&gt;&gt;&gt; transaction.commit()\n</pre>\n</blockquote>\n<p>The view renders the contents form with the specified columns.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.open(foo_topic.absolute_url())\n&gt;&gt;&gt; browser.getForm(name=\"folderContentsForm\")\n&lt;zope.testbrowser.browser.Form object at ...&gt;\n&gt;&gt;&gt; print browser.contents\n&lt;...\n...Description...\n...Effective Date...\n...Title...\n&gt;&gt;&gt; 'Size' in browser.contents\nFalse\n&gt;&gt;&gt; 'Modification Date' in browser.contents\nFalse\n&gt;&gt;&gt; '&amp;#160;State&amp;#160;' in browser.contents\nFalse\n</pre>\n</blockquote>\n<p>The topic contents are also listed with the specified columns.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print browser.contents\n&lt;...\n...Bar Document Title...\n...blah...\n&gt;&gt;&gt; '2.9 kB' in browser.contents\nFalse\n&gt;&gt;&gt; now.ISO() in browser.contents\nFalse\n&gt;&gt;&gt; '&lt;span class=\"state-published\"&gt;Published&lt;/span&gt;' in browser.contents\nFalse\n</pre>\n</blockquote>\n<p>The link columns have also been changed.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.getControl('Bar Document Title')\n&lt;ItemControl name='paths:list' type='checkbox'\noptionValue='/plone/Members/test_user_1_/bar-document-title'\nselected=False&gt;\n&gt;&gt;&gt; browser.getLink('blah')\n&lt;Link text='blah'\nurl='http://nohost/plone/Members/test_user_1_/bar-document-title'&gt;\n&gt;&gt;&gt; browser.getLink((now-2).ISO())\n&lt;Link text='...'\nurl='http://nohost/plone/Members/test_user_1_/bar-document-title'&gt;\n&gt;&gt;&gt; browser.getLink('Bar Document Title')\nTraceback (most recent call last):\nLinkNotFoundError\n</pre>\n</blockquote>\n<p>The item selection header row reflects the new number of columns.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print browser.contents\n&lt;...\n...&lt;thead&gt;...\n...&lt;th colspan=\"4\"...\n...&lt;/thead&gt;...\n</pre>\n</blockquote>\n<p>The KSS update table view also reflects the selected columns.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.open(\n...     foo_topic.absolute_url()+'/foldercontents_update_table')\n&gt;&gt;&gt; print browser.contents\n&lt;...\n...Description...\n...Effective Date...\n...Title...\n&gt;&gt;&gt; 'Size' in browser.contents\nFalse\n&gt;&gt;&gt; 'Modification Date' in browser.contents\nFalse\n&gt;&gt;&gt; '&amp;#160;State&amp;#160;' in browser.contents\nFalse\n</pre>\n</blockquote>\n<div id=\"query-criteria\">\n<h3><a href=\"#id30\" rel=\"nofollow\">Query Criteria</a></h3>\n<p>If the query criteria have been assigned to a specific column, the\nwill be rendered in the filter table header row.  Otherwise they will\nbe rendered in the search form as usual.</p>\n<p>Add the portlet.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from zope import component\n&gt;&gt;&gt; from plone.i18n.normalizer import (\n...     interfaces as normalizer_ifaces)\n&gt;&gt;&gt; from collective.formcriteria.portlet import portlet\n&gt;&gt;&gt; testing.login(portal, testing.TEST_USER_NAME)\n&gt;&gt;&gt; manager = foo_topic.restrictedTraverse(\n...     '++contextportlets++plone.rightcolumn')\n&gt;&gt;&gt; site_path_len = len(portal.getPhysicalPath())\n&gt;&gt;&gt; assignment = portlet.Assignment(\n...     header='Foo Search Form Title',\n...     target_collection='/'.join(\n...         foo_topic.getPhysicalPath()[site_path_len:]))\n&gt;&gt;&gt; name = component.getUtility(\n...     normalizer_ifaces.IIDNormalizer).normalize(\n...         assignment.title)\n&gt;&gt;&gt; manager[name] = assignment\n&gt;&gt;&gt; testing.logout()\n</pre>\n</blockquote>\n<p>If query criteria are configured for the table columns, a filter table\nhead row will be rendered as a search form.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; foo_topic.setFormLayout('folder_contents')\n</pre>\n<pre>&gt;&gt;&gt; import transaction\n&gt;&gt;&gt; transaction.commit()\n</pre>\n<pre>&gt;&gt;&gt; browser.open(foo_topic.absolute_url())\n&gt;&gt;&gt; contents_form = browser.getForm(name=\"folderContentsForm\")\n&gt;&gt;&gt; contents_form.getControl(\n...     name='form_crit__SearchableText_FormSimpleStringCriterion'\n...     '_value', index=0)\n&lt;Control\nname='form_crit__SearchableText_FormSimpleStringCriterion_value'\ntype='text'&gt;\n&gt;&gt;&gt; contents_form.getControl(\n...     name='form_crit__Title_FormSimpleStringCriterion_value',\n...     index=0)\n&lt;Control\nname='form_crit__Title_FormSimpleStringCriterion_value'\ntype='text'&gt;\n&gt;&gt;&gt; contents_form.getControl('Filter', index=0)\n&lt;SubmitControl name='filter' type='submit'&gt;\n</pre>\n</blockquote>\n<p>Since all query criteria are used in the table columns, no portlet\nsearch form is rendered.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.getForm(name=\"formcriteria_search\")\nTraceback (most recent call last):\nLookupError\n</pre>\n</blockquote>\n<p>The contents view reflects user criteria submitted through the\ncontents form.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; contents_form.getControl(\n...     name='form_crit__SearchableText_FormSimpleStringCriterion'\n...     '_value', index=0).value = 'baz'\n&gt;&gt;&gt; contents_form.getControl('Filter', index=0).click()\n&gt;&gt;&gt; browser.getControl('Bar Document Title')\nTraceback (most recent call last):\nLookupError: label 'Bar Document Title'\n&gt;&gt;&gt; browser.getControl('Baz Event Title')\n&lt;ItemControl name='paths:list' type='checkbox'\noptionValue='/plone/Members/test_user_1_/baz-event-title'\nselected=False&gt;\n</pre>\n</blockquote>\n<p>The filter collapsible doesn\u2019t collapse when clicking on the search\ntext box.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import re\n&gt;&gt;&gt; regexp = re.compile('http://.*?collapsiblesections.css')\n&gt;&gt;&gt; regexp.search(browser.contents).group()\n'http://nohost/plone/portal_css/Plone%20Default/collapsiblesections.css'\n&gt;&gt;&gt; browser.open(portal.absolute_url() + '/collapsiblesections.css')\n&gt;&gt;&gt; print browser.contents\n/*...\n#foldercontents-getPath-filter .collapsibleHeader {\n...\n</pre>\n</blockquote>\n<p>The search form is rendered if query criteria are present which are\nnot assigned to a column.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; z2.login(portal.getPhysicalRoot().acl_users, testing.SITE_OWNER_NAME)\n&gt;&gt;&gt; columns['getPath-column'].update(filter='')\n&gt;&gt;&gt; testing.logout()\n</pre>\n<pre>&gt;&gt;&gt; import transaction\n&gt;&gt;&gt; transaction.commit()\n</pre>\n<pre>&gt;&gt;&gt; browser.open(foo_topic.absolute_url())\n&gt;&gt;&gt; portlet_form = browser.getForm(name=\"formcriteria_search\")\n</pre>\n</blockquote>\n<p>The contents view also reflects user criteria submitted through the\nportlet form.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; portlet_form.getControl(\n...     name='form_crit__SearchableText_FormSimpleStringCriterion'\n...     '_value').value = 'baz'\n&gt;&gt;&gt; portlet_form.getControl(name='submit').click()\n&gt;&gt;&gt; browser.getControl('Bar Document Title')\nTraceback (most recent call last):\nLookupError: label 'Bar Document Title'\n&gt;&gt;&gt; browser.getControl('Baz Event Title')\n&lt;ItemControl name='paths:list' type='checkbox'\noptionValue='/plone/Members/test_user_1_/baz-event-title'\nselected=False&gt;\n</pre>\n</blockquote>\n<p>If no query criteria are configured, the filter table head row will\nnot be rendered.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; z2.login(portal.getPhysicalRoot().acl_users, testing.SITE_OWNER_NAME)\n&gt;&gt;&gt; columns['Title-column'].update(filter='')\n&gt;&gt;&gt; testing.logout()\n</pre>\n<pre>&gt;&gt;&gt; import transaction\n&gt;&gt;&gt; transaction.commit()\n</pre>\n<pre>&gt;&gt;&gt; browser.open(foo_topic.absolute_url())\n&gt;&gt;&gt; print browser.contents\n&lt;...\n      &lt;thead...\n        &lt;tr&gt;\n            &lt;th class=\"nosort\"...&gt;&amp;#160;&lt;/th&gt;\n            &lt;th class=\"nosort sortColumn\"\n                id=\"foldercontents-sortable_title-column\"&gt;\n                  &amp;#160;\n                  Title\n                  &amp;#160;\n                &lt;/th&gt;\n            &lt;th class=\"nosort noSortColumn\"\n                id=\"foldercontents-Description-column\"&gt;\n                  &amp;#160;\n                  Description\n                  &amp;#160;\n                &lt;/th&gt;\n            &lt;th class=\"nosort noSortColumn\"\n                id=\"foldercontents-EffectiveDate-column\"&gt;\n                  &amp;#160;\n                  Effective Date\n                  &amp;#160;\n                &lt;/th&gt;\n        &lt;/tr&gt;\n      &lt;/thead...\n      &lt;tbody...\n</pre>\n</blockquote>\n<p>Cells that link to the item have just a link and no icon.  If the\nspecial \u201cPath\u201d column is include, it will display an icon.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print browser.contents\n&lt;...\n              &lt;td class=\"notDraggable\"&gt;\n                  &lt;input type=\"checkbox\" class=\"noborder\" name=\"paths:list\" id=\"cb_-plone-Members-test_user_1_-bar-document-title\" value=\"/plone/Members/test_user_1_/bar-document-title\" alt=\"Select Bar Document Title\" title=\"Select Bar Document Title\" /&gt;\n                  &lt;input type=\"hidden\" name=\"selected_obj_paths:list\" value=\"/plone/Members/test_user_1_/bar-document-title\" /&gt;\n                  &lt;label for=\"cb_-plone-Members-test_user_1_-bar-document-title\"&gt;\n                    &lt;span class=\"contenttype-document\"&gt;\n...\n                    &lt;/span&gt;\n                    &lt;span class=\"hiddenStructure\"&gt;Bar Document Title&lt;/span&gt;\n                  &lt;/label&gt;\n              &lt;/td&gt;\n...\n                    &lt;span class=\"contenttype-document\"&gt;\n                      &lt;a href=\"http://nohost/plone/Members/test_user_1_/bar-document-title\"...\n                        blah\n                      &lt;/a&gt;\n                    &lt;/span&gt;\n...\n</pre>\n</blockquote>\n</div>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id31\" rel=\"nofollow\">Changelog</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id32\" rel=\"nofollow\">2.1 (2016-08-05)</a></h3>\n<ul>\n<li>Added travis build script\n[bogdangi]</li>\n<li>Fix issues with title and description inside form view and form criteria edit\n[bogdangi]</li>\n<li>Added further Plone 4.3 compatibility [miohtama]</li>\n<li>Use existing i18n message ID in form. [icemac]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id33\" rel=\"nofollow\">2.0 - 2012-11-01</a></h3>\n<ul>\n<li>Plone 4.2 and 4.3 compatibility.\n[rossp]</li>\n<li>Use localized format for DateTime column values.\n[rossp]</li>\n<li>Add missing form criteria support for the recurse field of path\ncriteria.\n[rossp]</li>\n<li>Restrict some of the search form portlet support to the left and\nright column portlet managers on normal plone views, and\nadditionally to the 4 dashboard portlet managers on the dashboard\nview for performance reasons.  This means if you want to use the\nsearch form portlet in a manager for which these registrations don\u2019t\napply, you\u2019ll have to use your own registration like the\n&lt;browser:viewlet&gt; registrations in\ncollective/formcriteria/form/configure.zcml.\n[rossp]</li>\n<li>Update chameleon compatibility to the new 2.x branch.\n[rossp]</li>\n<li>Optimize and improve performancde.\n[rossp]</li>\n<li>Various upstream template updates.\n[rossp, topherh]</li>\n<li>Add remote URL support to folder_summary_view.\n[topherh]</li>\n<li>Fix an issue with the permission protecting the Export action.\n[rossp]</li>\n<li>Handle catalog index ParseErrors gracefully.  Thanks to Larry\nPitcher for the report.\n[rossp]</li>\n</ul>\n</div>\n<div id=\"b2-2011-01-13\">\n<h3><a href=\"#id34\" rel=\"nofollow\">2.0b2 - 2011-01-13</a></h3>\n<ul>\n<li>Retrofit some Plone 3 compatibility.  Plone 3 is un-supported in\nversion 2+.  The tests pass but the UI hasn\u2019t been checked so YMMV.\n[rossp]</li>\n</ul>\n</div>\n<div id=\"b1-2011-01-11\">\n<h3><a href=\"#id35\" rel=\"nofollow\">2.0b1 - 2011-01-11</a></h3>\n<ul>\n<li>Added a rudimentary UI for managing collection columns.\n[rossp]</li>\n</ul>\n</div>\n<div id=\"a4-2011-01-11\">\n<h3><a href=\"#id36\" rel=\"nofollow\">2.0a4 - 2011-01-11</a></h3>\n<ul>\n<li>Restore the workflow menu which was missing from the topic\nfolder_contents view.  Thanks to Larry Pitcher for the report.\n[rossp]</li>\n</ul>\n</div>\n<div id=\"a3-2011-01-10\">\n<h3><a href=\"#id37\" rel=\"nofollow\">2.0a3 - 2011-01-10</a></h3>\n<ul>\n<li>Change the permission for the grouped listing view so that anonymous\nvisitors can access the view when the content is published.\nThanks to Larry Pitcher for the report.\n[rossp]</li>\n<li>Add support for columns that don\u2019t have corresponding catalog\nmetadata.  Be aware that using such columns can greatly affect\nperformance as export requires looking up every object to retrieve\nthe data.\n[rossp]</li>\n</ul>\n</div>\n<div id=\"a2-2010-11-23\">\n<h3><a href=\"#id38\" rel=\"nofollow\">2.0a2 - 2010-11-23</a></h3>\n<ul>\n<li>Fixed a problem with a faulty type assumption regarding\nDateTimeFields in the FormDateCriterion.  The FormDateCriterion\ndoesn\u2019t actually used a DateTimeField.\n[rossp]</li>\n<li>Refactor the &lt;form&gt; and &lt;button&gt; based batch_macros so as to not\nconflict with other uses of the full \u201cnavigation\u201d macro within an\nexisting form resulting in nested &lt;form&gt;s.\n[rossp]</li>\n</ul>\n</div>\n<div id=\"a1-2010-11-21\">\n<h3><a href=\"#id39\" rel=\"nofollow\">2.0a1 - 2010-11-21</a></h3>\n<ul>\n<li>Ensure that the \u201cdefault\u201d profile is used by portal_quickinstaller\nby\u2026 well, default.  :-)\n[rossp]</li>\n<li>Use a &lt;form&gt; and &lt;button&gt; elements in the navigation/paging\nbatch_macros to prevent \u201curi too long\u201d errors when using paging with\nmany form criteria.\n[rossp]</li>\n<li>Use method=\u201dpost\u201d for the criteria form to address \u201curi too long\u201d\nwhen lots of form criteria are used.  Reported by mauro and\nconfirmed to happen with just two date fields.\n[rossp]</li>\n<li>Added defines for Plone4 complatibility in folder_listing\nskin template.\n[seletz]</li>\n<li>Fix navigation_recurse template to match current Plone 4 version.\n[seletz] [ramonski]</li>\n<li>Add a collection listing portlet that makes use of the\nfolder_listing macros for a richer portlet. [rossp]</li>\n<li>fix issue producing\nAttributeError: \u2018NoneType\u2019 object has no attribute \u2018title_or_id\u2019\nwhen adding path criterions.\n[hplocher]</li>\n<li>Fix \u2018&lt;input type=\u201dhidden\u201d name=\u201dsort_on\u201d\u2026\u2019, now uses the default\nsort criteria if present</li>\n<li>Use individual persistent objects to represent table columns such as\nwith the fodler_contents view.  UI for editing the folder_contents\ncolumn objects has yet to be implemented.</li>\n<li>Fix &lt;tfoot&gt; usage [rossp]</li>\n<li>Integrate sort criteria with folder contents view columns for KSS\nsorting [rossp]</li>\n<li>Add pulldown/select, single-value criterion based on\nFormSelectionCriterion, FormPortalTypeCriterion, and\nFormReferenceCriterion [rossp]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id40\" rel=\"nofollow\">1.1.1 - 2009-08-31</a></h3>\n<ul>\n<li>\u201cSelect all\u201d and \u201cShow all\u201d (KSS) on folder contents view [rossp]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3><a href=\"#id41\" rel=\"nofollow\">1.1.0 - 2009-08-21</a></h3>\n<ul>\n<li>Use folder_contents instead of folder_contents_view to fix the links\nback to the folder contents form. [rossp]</li>\n<li>Tighten up the search form portlet spacing. [rossp]</li>\n<li>Use \u201cTable Columns\u201d fields for the folder contents form to control\nthe folder contents columns</li>\n<li>Use a \u201cTable Column Links\u201d collection filed to specify which folder\ncontents form columns should link to the item [rossp]</li>\n<li>Fix folder contents form buttons, \u201cCopy\u201d, \u201cCut\u201d, \u201cRename\u201d, \u201cChange\nState\u201d, and \u201cDelete\u201d now all work for objects listed by the\ncollections even if they are in different folders.  [rossp]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3><a href=\"#id42\" rel=\"nofollow\">1.0.2 - 2009-08-12</a></h3>\n<ul>\n<li>Add some missing portal_types for criteria [rossp]</li>\n<li>Fix a unicode bug with GS portlets.xml import of the search portlet\n[rossp]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3><a href=\"#id43\" rel=\"nofollow\">1.0.1 - 2009-08-11</a></h3>\n<ul>\n<li>Merge collective.catalogexport to support CSV export of collection\nbased user-submitted queries [rossp]</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3><a href=\"#id44\" rel=\"nofollow\">1.0 - 2009-04-20</a></h3>\n<ul>\n<li>Ensure that only formFields are taken from the request</li>\n<li>Fix ignored integer range criteria (reported by SimO)</li>\n<li>Use a browser layer (suggested by optilude)</li>\n<li>Add ids and CSS classes to the batch_macro sort links (aaronv)</li>\n<li>Fix a bug with the \u201coperator\u201d field.  Thanks to Mauro!</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3><a href=\"#id45\" rel=\"nofollow\">0.9.5 - 2009-03-06</a></h3>\n<ul>\n<li>Move package to src directory and fix testing buildout</li>\n<li>Register criteria AT types using the right package name</li>\n<li>Fix a bug with the JavaScript that narrows the criteria types by\nindex/field</li>\n<li>Use separate meta_types instead of overwriting the ATCT meta types,\nmay be backwards incompatible for previous installations</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3><a href=\"#id46\" rel=\"nofollow\">0.9.4 - 2009-02-08</a></h3>\n<ul>\n<li>Add a layout that lists items grouped by the sort used</li>\n<li>Fix KeyError: u\u2019unsorted\u2019 bug for existing ATTopics as reported by\njonstahl</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3><a href=\"#id47\" rel=\"nofollow\">0.9.3 - 2009-01-31</a></h3>\n<ul>\n<li>Fix widget JavaScript and CSS for search form portlet</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3><a href=\"#id48\" rel=\"nofollow\">0.9.2 - 2009-01-31</a></h3>\n<ul>\n<li>Clarify selected sort</li>\n<li>Make portlet usable outside the context of the collection</li>\n<li>Fix portlet class</li>\n<li>Don\u2019t render hour and minute fields on date</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3><a href=\"#id49\" rel=\"nofollow\">0.9.1 - 2009-01-30</a></h3>\n<ul>\n<li>Move the search form viewlet into a portlet</li>\n<li>Patch the ATCT addCrierion method to properly initialize criteria so\nthat they can safely be created in code</li>\n<li>Use the same mismatched meta_type ATCT for the\nFormDateCriterion</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3><a href=\"#id50\" rel=\"nofollow\">0.9 - 2009-01-29</a></h3>\n<ul>\n<li>Fix incompatibility when extended sort criterion were added to\nexisting ATCT ATTopic instances</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3><a href=\"#id51\" rel=\"nofollow\">0.8 - 2009-01-29</a></h3>\n<ul>\n<li>Added multiple sort links to the batch macro</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3><a href=\"#id52\" rel=\"nofollow\">0.7 - 2009-01-28</a></h3>\n<ul>\n<li>Change to use the same names as ATCT where appropriate to avoid some\nproblems where the ATCT names are expected.</li>\n<li>Flesh out the GenericSetup profile with all other bits in the Plone\nprofile that make reference to criteria.</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3><a href=\"#id53\" rel=\"nofollow\">0.6 - 2009-01-26</a></h3>\n<ul>\n<li>Use a form prefix for the search form.  Fixes calendar JavaScript\nbug.</li>\n<li>Fix criterion label to point to the correct form input</li>\n<li>Allow widget special help/description to appear even if the label\nisn\u2019t rendered and use this for the comma widget</li>\n<li>Fix the handling of postbacks in the comma widget</li>\n<li>Use a \u201cSearch Form\u201d view that only renders the search form</li>\n<li>Added boolean criteria</li>\n<li>Added date criteria</li>\n<li>Added path criteria</li>\n<li>Added relative path criteria</li>\n<li>Added integer criteria</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3><a href=\"#id54\" rel=\"nofollow\">0.5 - 2009-01-25</a></h3>\n<ul>\n<li>Form criteria are now designated by selecting which fields of each\ncriterion should be rendered on the search form</li>\n<li>Improve label handling.  Remove labels for \u2018value\u2019 field and\n\u201crequired\u201d markers for all fields.</li>\n<li>Make the search form collapsible and start collapsed when the form\nhas been submitted</li>\n<li>Add a comma separated criterion</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3><a href=\"#id55\" rel=\"nofollow\">0.4 - 2009-01-15</a></h3>\n<ul>\n<li>Add list criterion</li>\n<li>Add selection criterion</li>\n<li>Fix the form for access by anonymous users</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3><a href=\"#id56\" rel=\"nofollow\">0.3 - 2009-01-15</a></h3>\n<ul>\n<li>Fully re-use the AT edit widgets</li>\n<li>Support criteria with multiple fields</li>\n<li>Use the widgets to process the form values</li>\n<li>Add checkbox criterion based on FormSelectionCriterion,\nFormPortalTypeCriterion, and FormReferenceCriterion</li>\n<li>Add a date range form criterion (JS calendar not working yet)</li>\n</ul>\n</div>\n<div id=\"id20\">\n<h3><a href=\"#id57\" rel=\"nofollow\">0.2 - 2008-05-27</a></h3>\n<ul>\n<li>Fix i18n_domain in ZCML</li>\n<li>Make the authenticator view conditional for Plone 3.0 compatibility</li>\n</ul>\n</div>\n<div id=\"id21\">\n<h3><a href=\"#id58\" rel=\"nofollow\">0.1 - 2008-05-24</a></h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n<div id=\"todo\">\n<h2><a href=\"#id59\" rel=\"nofollow\">TODO</a></h2>\n<ul>\n<li><p>Replace KSS with jQuery for the AJAX folder contents stuff</p>\n</li>\n<li><p>Tabs for folder_contents based multiple object edit form for topic\ncontainers such as topic columns.</p>\n</li>\n<li><p>Separate query and sort criteria out into topic containers and use\nfolder_contents based multi-edit form</p>\n</li>\n<li><p>Add coverage for folder contents buttons when using KSS select all\nfrom all screens.  It didn\u2019t work for one deployment.</p>\n</li>\n<li><p>Add a sort icon to sortable folder_contents columns</p>\n</li>\n<li><p>Add support for including the URL in CSV export</p>\n<p>Not sure what the right UI is for this, maybe add a special case\ninto the customViewFields field.</p>\n</li>\n<li><p>Add criteria ordering support</p>\n</li>\n<li><p>Form Sort Criteria</p>\n<p>An widget is avialable for selecting which of the possible\nsort fields should be available for sorting on.  The InAndOutWidget is\nused so that the order can be specified.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print browser.contents\n&lt;...\n&lt;div class=\"field ArchetypesInAndOutWidget\nkssattr-atfieldname-sortFields\"\nid=\"archetypes-fieldname-sortFields\"&gt;...\n...&gt;Relevance&lt;/option&gt;...\n...&gt;Effective Date&lt;/option&gt;...\n</pre>\n</blockquote>\n<p>The InAndOutWidget uses JavaScript so we\u2019ll set the field manually for\ntesting.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; self.login()\n&gt;&gt;&gt; foo_topic.setSortFields(['', 'effective', 'Type'])\n</pre>\n<pre>&gt;&gt;&gt; form = browser.getForm(name=\"criteria_select\")\n&gt;&gt;&gt; form.getControl('Sort Order').selected = True\n</pre>\n</blockquote>\n<p>Form sort criteria default to sorting on the \u201cRelevance\u201d field\ncorresponds to a sort by weight for searches that include queries\nagainst indexs that support weighted results.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; form = browser.getForm(action=\"criterion_edit_form\", index=0)\n&gt;&gt;&gt; form.getControl('Relevance').selected\nTrue\n</pre>\n</blockquote>\n</li>\n<li><p>Add AJAX search results refresh</p>\n</li>\n<li><p>Add single selection (pulldown, radio) criteria (davisagli)</p>\n</li>\n<li><p>Use subcollections to support AdvancedQuery operations</p>\n<p>Collections will act as grouping/parenthesis <em>and</em> operators.  IOW,\na collection will have a boolean field to set whether it uses AND or\nOR to find the intersection or union of its result sets.\nSub-collections will not acquire criteria but instead parent\ncollections will treat sub-collections as criteria groupings.  Not\nyet sure how to handle sorting.</p>\n</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2263652, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "95d032200c9541a4fb9703f2eeb01dc3", "sha256": "b4ff13b5594f96013d7c5cbd0e4c02893c6063ff0c92506e39230f7cfeade713"}, "downloads": -1, "filename": "collective.formcriteria-0.1.tar.gz", "has_sig": false, "md5_digest": "95d032200c9541a4fb9703f2eeb01dc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11744, "upload_time": "2008-05-24T20:47:07", "upload_time_iso_8601": "2008-05-24T20:47:07Z", "url": "https://files.pythonhosted.org/packages/55/52/e051c118b2d61122589317f510a7ae3c8962ff7145621a658de90eb3ea62/collective.formcriteria-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "3dacaa8ca8d1987c7108401beedf1749", "sha256": "26048423407ec80b8c5838060ca242004c3963d02e3d7eaaafb5f7f86de68354"}, "downloads": -1, "filename": "collective.formcriteria-0.2.tar.gz", "has_sig": false, "md5_digest": "3dacaa8ca8d1987c7108401beedf1749", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11903, "upload_time": "2008-05-27T18:48:45", "upload_time_iso_8601": "2008-05-27T18:48:45Z", "url": "https://files.pythonhosted.org/packages/96/03/2f26042becf3550327a198ad2b4f3d5e7c18cdd018d1f44efbc4b0b82189/collective.formcriteria-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "b4e4968344ee9b0607686acd9e13d1fb", "sha256": "9e0ca1c87edb65ae1ead2aa842de4b60578bc26e50f6a589f804abf850707e5a"}, "downloads": -1, "filename": "collective.formcriteria-0.3.tar.gz", "has_sig": false, "md5_digest": "b4e4968344ee9b0607686acd9e13d1fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15041, "upload_time": "2009-01-15T22:44:29", "upload_time_iso_8601": "2009-01-15T22:44:29Z", "url": "https://files.pythonhosted.org/packages/84/87/4497aad1d47671365caf55e34df36c171194c387ac9637c4a766ab56c519/collective.formcriteria-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "67d5fd500a816604700b2f6ea6a48681", "sha256": "a16d9011bf1d6f44778f0d8194a8fa21cacecd8e67e6ee6992448503efbb96cc"}, "downloads": -1, "filename": "collective.formcriteria-0.4.tar.gz", "has_sig": false, "md5_digest": "67d5fd500a816604700b2f6ea6a48681", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15820, "upload_time": "2009-01-16T04:39:02", "upload_time_iso_8601": "2009-01-16T04:39:02Z", "url": "https://files.pythonhosted.org/packages/07/33/6265bc2bd35844fc8d1154f01143133e5c8d99e7654628e8df35e1c55d57/collective.formcriteria-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "0e94e709c696447ab4f67fac66b9136c", "sha256": "b71e35a13fabab1675d3573dc6730e3ff994b01ddb31bcb6cbc0159efbf20494"}, "downloads": -1, "filename": "collective.formcriteria-0.5.tar.gz", "has_sig": false, "md5_digest": "0e94e709c696447ab4f67fac66b9136c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19332, "upload_time": "2009-01-26T08:23:48", "upload_time_iso_8601": "2009-01-26T08:23:48Z", "url": "https://files.pythonhosted.org/packages/0e/8e/8b1777306a46051fdd1f9e2b53077762809e763c51591227e11612228142/collective.formcriteria-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "e8940e750da3f79cd1d9116127e070e8", "sha256": "0ec8ee9cbdd14511bbc4714829951d59265a0f13c07c634647c92d374003264e"}, "downloads": -1, "filename": "collective.formcriteria-0.6.tar.gz", "has_sig": false, "md5_digest": "e8940e750da3f79cd1d9116127e070e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22816, "upload_time": "2009-01-27T04:06:09", "upload_time_iso_8601": "2009-01-27T04:06:09Z", "url": "https://files.pythonhosted.org/packages/d5/80/9a5d084003608b3a4ae36dff4e110f6fb37549c16bece1d17d0397b02da9/collective.formcriteria-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "a56fd7493d8c1af46016c6c4387d204a", "sha256": "2a18b498486d1d3e2499f656ee7186c15d40cec35c5e4632ca547766dbb02b89"}, "downloads": -1, "filename": "collective.formcriteria-0.7.tar.gz", "has_sig": false, "md5_digest": "a56fd7493d8c1af46016c6c4387d204a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25105, "upload_time": "2009-01-28T21:48:52", "upload_time_iso_8601": "2009-01-28T21:48:52Z", "url": "https://files.pythonhosted.org/packages/4f/f3/387113ff19361e40d66d4f2af92ee911fe0bc955753e92dc0893126ca029/collective.formcriteria-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "fdc1dee7031eff2bf0393855688e4f49", "sha256": "fd1aafd123c7af63bf23becc4f4df1e2c6cf6efa200ad1a88e2de93d158ccf6c"}, "downloads": -1, "filename": "collective.formcriteria-0.8.tar.gz", "has_sig": false, "md5_digest": "fdc1dee7031eff2bf0393855688e4f49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30834, "upload_time": "2009-01-29T09:28:43", "upload_time_iso_8601": "2009-01-29T09:28:43Z", "url": "https://files.pythonhosted.org/packages/69/2e/2252d87a53775556d25a64cff341971298a950a1d71dd52853e6edf106cd/collective.formcriteria-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "ef7a5f96444e0cb2c4ed7a3916ce2619", "sha256": "ef9f686b0e98d2c37ef9670a77482e8ed9308fd4d6c27ba4146d0a104591edf1"}, "downloads": -1, "filename": "collective.formcriteria-0.9.tar.gz", "has_sig": false, "md5_digest": "ef7a5f96444e0cb2c4ed7a3916ce2619", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31149, "upload_time": "2009-01-29T18:29:33", "upload_time_iso_8601": "2009-01-29T18:29:33Z", "url": "https://files.pythonhosted.org/packages/9b/87/1332bd7e533a3a0fb32d05404f602854b448f4e18a1c53a15510a8d03cfe/collective.formcriteria-0.9.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "d8f2de709699158d7f6e29f61720cd6c", "sha256": "67581711c39a2877a25046bec503dbf67a87afb3a3f12ab0645a29fb4bc03233"}, "downloads": -1, "filename": "collective.formcriteria-0.9.1.tar.gz", "has_sig": false, "md5_digest": "d8f2de709699158d7f6e29f61720cd6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33393, "upload_time": "2009-01-31T07:13:27", "upload_time_iso_8601": "2009-01-31T07:13:27Z", "url": "https://files.pythonhosted.org/packages/f0/7c/8c65ccae7a5554a1b632840912e6e77e74b13ce3d96e3435155b7ca80a7c/collective.formcriteria-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "3c71f01acacd2d3f66da75cebd5f51c0", "sha256": "05d4bd53b4cb4f95eb2d9152291832c67abedc0ab5a6bee3c155a006a8b9d95e"}, "downloads": -1, "filename": "collective.formcriteria-0.9.2.tar.gz", "has_sig": false, "md5_digest": "3c71f01acacd2d3f66da75cebd5f51c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33770, "upload_time": "2009-01-31T19:18:02", "upload_time_iso_8601": "2009-01-31T19:18:02Z", "url": "https://files.pythonhosted.org/packages/96/5b/f8bcf1dd538e5285ec2a869feb7b0c77532b3a8b59ac244e2af9819546dd/collective.formcriteria-0.9.2.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "7cf6a7437c67443d961564b75cf72f23", "sha256": "4410f14eab6c4a3f6f0f5a82463af1755620fd2ddfc889a9102296711a0f7ee6"}, "downloads": -1, "filename": "collective.formcriteria-0.9.3.tar.gz", "has_sig": false, "md5_digest": "7cf6a7437c67443d961564b75cf72f23", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34022, "upload_time": "2009-01-31T20:57:34", "upload_time_iso_8601": "2009-01-31T20:57:34Z", "url": "https://files.pythonhosted.org/packages/c2/c5/181002b95df88a519e42d7d59a90bf129392125cf249876b8f8debe29fcd/collective.formcriteria-0.9.3.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "b8ce01852fab94482e4dc31b5cad5956", "sha256": "8dfadc7bbc0f0ba58d1e3cfe6051d97a8812cfbf9ed788539efcd69366cfe246"}, "downloads": -1, "filename": "collective.formcriteria-0.9.4.tar.gz", "has_sig": false, "md5_digest": "b8ce01852fab94482e4dc31b5cad5956", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37416, "upload_time": "2009-02-09T18:50:02", "upload_time_iso_8601": "2009-02-09T18:50:02.536430Z", "url": "https://files.pythonhosted.org/packages/8e/83/8f4d555690ef96550f470d1a4ad0adeda0414f030bfb13ebb101a77c745c/collective.formcriteria-0.9.4.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "9265db1154ddeb01b0cefca7167329bb", "sha256": "2a5ba47457e18d4b6e56e796d5751a3cfe6157d7c837e944b17fde9e9ab8ff8e"}, "downloads": -1, "filename": "collective.formcriteria-0.9.5.tar.gz", "has_sig": false, "md5_digest": "9265db1154ddeb01b0cefca7167329bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37235, "upload_time": "2009-03-07T06:06:58", "upload_time_iso_8601": "2009-03-07T06:06:58.181270Z", "url": "https://files.pythonhosted.org/packages/11/4c/0891462e2f5344fb42a54b70d825a9d06118d7d6b6b555d35106ffac69c6/collective.formcriteria-0.9.5.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "008fe2f8b0c98ade22bbe061789df83a", "sha256": "5383ba1c09428daf3921c1a9f6f95cbad592507c6a39ae73d939086ae0ffe7ca"}, "downloads": -1, "filename": "collective.formcriteria-1.0.tar.gz", "has_sig": false, "md5_digest": "008fe2f8b0c98ade22bbe061789df83a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45956, "upload_time": "2009-04-21T08:56:18", "upload_time_iso_8601": "2009-04-21T08:56:18.879891Z", "url": "https://files.pythonhosted.org/packages/2d/33/01674b455d2d7ee7f6f96d3080b4ad9a516be00fa0b0b1f11f06353c4bac/collective.formcriteria-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "e299dfe21d34edbb9dbf54d139e39fc4", "sha256": "9f2f0c815c75d2ad4322a0762693ce8dbaafd2f3aa9f4b364cc6033ad0ccc80b"}, "downloads": -1, "filename": "collective.formcriteria-1.0.1.tar.gz", "has_sig": false, "md5_digest": "e299dfe21d34edbb9dbf54d139e39fc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50330, "upload_time": "2009-08-11T22:47:11", "upload_time_iso_8601": "2009-08-11T22:47:11.732527Z", "url": "https://files.pythonhosted.org/packages/cc/d1/c52a237432915088afe14ae58ac7c30cf99c75febd45289e3e10c87c8b9f/collective.formcriteria-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "3be760190fc4af1fbf9646d011d9f190", "sha256": "057e91c5e2fe82a86124090ee29df48bff56532ecb54d759b21825ca46d8ae11"}, "downloads": -1, "filename": "collective.formcriteria-1.0.2.tar.gz", "has_sig": false, "md5_digest": "3be760190fc4af1fbf9646d011d9f190", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51590, "upload_time": "2009-08-13T05:22:08", "upload_time_iso_8601": "2009-08-13T05:22:08.495382Z", "url": "https://files.pythonhosted.org/packages/72/68/090375d2f0c2cb008c5e72515996f911dc3e4907455e25efdd4e7a19053c/collective.formcriteria-1.0.2.tar.gz", "yanked": false}], "1.0.3": [], "1.1.0": [{"comment_text": "", "digests": {"md5": "063c5fd35022a86be18b1ce49ca628f5", "sha256": "dc9919776a201dac35c81f74ee9e4ca789794928c82700a85efcba69c09f0e00"}, "downloads": -1, "filename": "collective.formcriteria-1.1.0.tar.gz", "has_sig": false, "md5_digest": "063c5fd35022a86be18b1ce49ca628f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60776, "upload_time": "2009-08-22T08:35:34", "upload_time_iso_8601": "2009-08-22T08:35:34.929291Z", "url": "https://files.pythonhosted.org/packages/d4/95/d3bafca2fb92691e5bcc334d12bd63b206ea918f2a110472b201d4b542ed/collective.formcriteria-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "08986f71876956d5c7eedfdbd3a36cf2", "sha256": "4c4d6b9a9501ff9316348cce6c462eeb2e7addf5270eac7a65fb89c55da33a6b"}, "downloads": -1, "filename": "collective.formcriteria-1.1.1.tar.gz", "has_sig": false, "md5_digest": "08986f71876956d5c7eedfdbd3a36cf2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63018, "upload_time": "2009-08-31T21:52:21", "upload_time_iso_8601": "2009-08-31T21:52:21.532330Z", "url": "https://files.pythonhosted.org/packages/cc/bd/22cd61ed9204da0e710edcd9c647ca0109d4cc56e7861793da9dce7a7aaf/collective.formcriteria-1.1.1.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "fc4961fb66225a9588edcdbe62176c33", "sha256": "8a9d58ba86e572d7f60bfa47fcccadecb3c3a871ae4dbcd649e7245ee9081a2c"}, "downloads": -1, "filename": "collective.formcriteria-2.0.tar.gz", "has_sig": false, "md5_digest": "fc4961fb66225a9588edcdbe62176c33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102501, "upload_time": "2012-11-02T02:03:49", "upload_time_iso_8601": "2012-11-02T02:03:49.653641Z", "url": "https://files.pythonhosted.org/packages/20/0f/50fa53f2be98ea73c88baa428bd0587a5274a08610463b4921c5cad37b4e/collective.formcriteria-2.0.tar.gz", "yanked": false}], "2.0a1": [{"comment_text": "", "digests": {"md5": "68f3b31a898820d9c0fb7ec3e30a1f4e", "sha256": "a0379b5e9e81a62f303b3ace3d31e177d80e32974bbbce51ade8e3160003e352"}, "downloads": -1, "filename": "collective.formcriteria-2.0a1.tar.gz", "has_sig": false, "md5_digest": "68f3b31a898820d9c0fb7ec3e30a1f4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91565, "upload_time": "2010-11-22T09:05:20", "upload_time_iso_8601": "2010-11-22T09:05:20.755534Z", "url": "https://files.pythonhosted.org/packages/e3/c1/fb18a5190e8a34337a0f3f00ea108d1b1578c1af801202a62eaba5744637/collective.formcriteria-2.0a1.tar.gz", "yanked": false}], "2.0a2": [{"comment_text": "", "digests": {"md5": "78128dfd841575e239b67d44af720e81", "sha256": "af177ae3d2672022b6b75b5aaf764d7072db5e67e7af4b5343fba758e8ed965d"}, "downloads": -1, "filename": "collective.formcriteria-2.0a2.tar.gz", "has_sig": false, "md5_digest": "78128dfd841575e239b67d44af720e81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91958, "upload_time": "2010-11-23T09:18:46", "upload_time_iso_8601": "2010-11-23T09:18:46.266863Z", "url": "https://files.pythonhosted.org/packages/08/00/b2000118c2532564bb95298c4a761b84274a7f71fc0363fee716f3142e1c/collective.formcriteria-2.0a2.tar.gz", "yanked": false}], "2.0a3": [{"comment_text": "", "digests": {"md5": "7c3116faa5bb771eb9ac11eda1f42060", "sha256": "d778c5ccf614258a367a3ae9ab97cef6a75d2ca39b787644d72fa146f4094ff2"}, "downloads": -1, "filename": "collective.formcriteria-2.0a3.tar.gz", "has_sig": false, "md5_digest": "7c3116faa5bb771eb9ac11eda1f42060", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93221, "upload_time": "2011-01-11T01:37:12", "upload_time_iso_8601": "2011-01-11T01:37:12.049065Z", "url": "https://files.pythonhosted.org/packages/78/e0/6cfe26124dc60e5f53288c2e45e0b5420da18670738504bef3c41b74b321/collective.formcriteria-2.0a3.tar.gz", "yanked": false}], "2.0a4": [{"comment_text": "", "digests": {"md5": "93b7b9baa15038393b40aa425e3a828f", "sha256": "18c94ad28d0e250b50007bf48bd80b521e7668f8f7b5a9872614cb6bbe76c9b9"}, "downloads": -1, "filename": "collective.formcriteria-2.0a4.tar.gz", "has_sig": false, "md5_digest": "93b7b9baa15038393b40aa425e3a828f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93906, "upload_time": "2011-01-11T22:09:50", "upload_time_iso_8601": "2011-01-11T22:09:50.674982Z", "url": "https://files.pythonhosted.org/packages/9c/2a/426f9cddf6b410360fad9542aa6752dc8984c8277b50096e49cf01382c6e/collective.formcriteria-2.0a4.tar.gz", "yanked": false}], "2.0b1": [{"comment_text": "", "digests": {"md5": "8764b307b0fd5c14d82a871ce7bc347e", "sha256": "7b3de8dd94c95cd874abd948f94a3a10e71bffd7b4860b7fc6d2672395bf6124"}, "downloads": -1, "filename": "collective.formcriteria-2.0b1.tar.gz", "has_sig": false, "md5_digest": "8764b307b0fd5c14d82a871ce7bc347e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 96172, "upload_time": "2011-01-12T01:03:39", "upload_time_iso_8601": "2011-01-12T01:03:39.394745Z", "url": "https://files.pythonhosted.org/packages/4f/d1/116b10c26170c254d535b19eb4b7badd244e7351ba1001261c34a2326fe0/collective.formcriteria-2.0b1.tar.gz", "yanked": false}], "2.0b2": [{"comment_text": "", "digests": {"md5": "b6151b7b21afd194a57cc80cc96bcaeb", "sha256": "404b12de9bbc8d7efd215e9cd6e1ad2ccd8aaa3ea1757497228356b40b2b2a39"}, "downloads": -1, "filename": "collective.formcriteria-2.0b2.tar.gz", "has_sig": false, "md5_digest": "b6151b7b21afd194a57cc80cc96bcaeb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 97378, "upload_time": "2011-01-14T05:23:44", "upload_time_iso_8601": "2011-01-14T05:23:44.815396Z", "url": "https://files.pythonhosted.org/packages/43/24/1341c9ee33a1f4381efd4ef6f939f53620a9064296b98f0b890783883880/collective.formcriteria-2.0b2.tar.gz", "yanked": false}], "2.1": [{"comment_text": "", "digests": {"md5": "bb6456e3f7b1031ac141dbb0b931e851", "sha256": "a9082fd941102388c01e4d2ad747ff3f4c88a760841d13b99e6a9cc4df8eb889"}, "downloads": -1, "filename": "collective.formcriteria-2.1.tar.gz", "has_sig": false, "md5_digest": "bb6456e3f7b1031ac141dbb0b931e851", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 104182, "upload_time": "2016-08-05T08:20:07", "upload_time_iso_8601": "2016-08-05T08:20:07.395025Z", "url": "https://files.pythonhosted.org/packages/02/ef/127c9c83fa6adefd30dabac4b6d9191dfda67405f2ce62f53a5a8af7083f/collective.formcriteria-2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bb6456e3f7b1031ac141dbb0b931e851", "sha256": "a9082fd941102388c01e4d2ad747ff3f4c88a760841d13b99e6a9cc4df8eb889"}, "downloads": -1, "filename": "collective.formcriteria-2.1.tar.gz", "has_sig": false, "md5_digest": "bb6456e3f7b1031ac141dbb0b931e851", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 104182, "upload_time": "2016-08-05T08:20:07", "upload_time_iso_8601": "2016-08-05T08:20:07.395025Z", "url": "https://files.pythonhosted.org/packages/02/ef/127c9c83fa6adefd30dabac4b6d9191dfda67405f2ce62f53a5a8af7083f/collective.formcriteria-2.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:17:54 2020"}