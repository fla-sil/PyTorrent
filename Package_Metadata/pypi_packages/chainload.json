{"info": {"author": "Tristan Fisher", "author_email": "code@tristanfisher.com", "bugtrack_url": null, "classifiers": ["Environment :: MacOS X", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: MacOS", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Topic :: Utilities"], "description": "chainload\n=========\n\nLoad a value from an environmental variable, YAML/JSON file, or default to a provided value.\n\n\n|TravisBadge|_\n\n.. |TravisBadge| image:: https://travis-ci.org/tristanfisher/chainload.svg?branch=master\n.. _TravisBadge: https://travis-ci.org/tristanfisher/chainload\n\n\nGetting chainload\n-----------------\n\nSimply:\n\n.. code-block:: bash\n\n    pip install chainload\n\n\nInstall requirements\n--------------------\n\n.. code-block:: bash\n\n    pip install -r requirements.txt\n\nor:\n\n.. code-block:: bash\n\n    python setup.py install\n\n\nUsing chainload\n---------------\n\nIf you have variables that exist in a file, I recommend assigning a file object to a variable, then passing that variable to the chain loading method.\n\ne.g.\n\n.. code-block:: python\n\n    $ python\n    >>> from chainload import chainload\n    >>> variable_file = chainload.load_file(file_name=\"tests/test_settings.yaml\")\n    >>> chainload.chain_load_variable(\"environment\", \"environment\", \"debug\", variable_file)\n    'production'\n\nor, if you have a lot of variables to load, use the class-based approach:\n\n.. code-block:: python\n\n    $ python\n    >>> chainer = chainload.ChainloadSetup(filename=\"tests/test_settings.yaml\", environment_variable_prefix=\"webapp_\")\n    >>> environment_value = chainer(\"environment\")\n\nthe latter has the advantage of being far more `DRY <http://stackoverflow.com/questions/6453235/what-does-damp-not-dry-mean-when-talking-about-unit-tests>`_ for larger use-cases.\n\n\nSee the docstring for `chain_load_variable`, but this will load a variable in order of:\n\n\n1. A default value\n\n2. From file object\n\n3. From an environment variable.  \n   \n   Optional: If the environmental variable is None, and the specified file option name exists in the env, and this behavior is enabled, an attempt to load from an environmental variable of the same name as specified for #2\n\n\nRunning tests\n-------------\n\nIf you want to run the tests for this package:\n\n.. code-block:: bash\n\n    $ make test\n    python setup.py test\n    running nosetests\n    running egg_info\n    writing chainload.egg-info/PKG-INFO\n    writing top-level names to chainload.egg-info/top_level.txt\n    writing dependency_links to chainload.egg-info/dependency_links.txt\n    reading manifest file 'chainload.egg-info/SOURCES.txt'\n    writing manifest file 'chainload.egg-info/SOURCES.txt'\n    .........\n    ----------------------------------------------------------------------\n    Ran 9 tests in 0.007s\n\n\nFiling bugs / issues\n--------------------\n\nWhen filing a bug report, please include a `Short, Self Contained, Correct (Compilable), Example <http://sscce.org/>`_.\n\n\nNew features / Pull requests\n----------------------------\n\nIf requesting a new feature, please include a well-explained use-case with example usage.\n\nWhen making a pull request, if new functionality is added, please include appropriate tests.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/tristanfisher/chainload", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "chainload", "package_url": "https://pypi.org/project/chainload/", "platform": "", "project_url": "https://pypi.org/project/chainload/", "project_urls": {"Homepage": "http://github.com/tristanfisher/chainload"}, "release_url": "https://pypi.org/project/chainload/1.5/", "requires_dist": null, "requires_python": "", "summary": "Load a value from an environmental variable, YAML/JSON file, or default to a provided value.", "version": "1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Load a value from an environmental variable, YAML/JSON file, or default to a provided value.</p>\n<p><a href=\"https://travis-ci.org/tristanfisher/chainload\" rel=\"nofollow\"><img alt=\"TravisBadge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5e380bcdfce02ac7c63baac466ed597206832c68/68747470733a2f2f7472617669732d63692e6f72672f7472697374616e6669736865722f636861696e6c6f61642e7376673f6272616e63683d6d6173746572\"></a></p>\n<div id=\"getting-chainload\">\n<h2>Getting chainload</h2>\n<p>Simply:</p>\n<pre>pip install chainload\n</pre>\n</div>\n<div id=\"install-requirements\">\n<h2>Install requirements</h2>\n<pre>pip install -r requirements.txt\n</pre>\n<p>or:</p>\n<pre>python setup.py install\n</pre>\n</div>\n<div id=\"using-chainload\">\n<h2>Using chainload</h2>\n<p>If you have variables that exist in a file, I recommend assigning a file object to a variable, then passing that variable to the chain loading method.</p>\n<p>e.g.</p>\n<pre><span class=\"err\">$</span> <span class=\"n\">python</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">chainload</span> <span class=\"kn\">import</span> <span class=\"n\">chainload</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">variable_file</span> <span class=\"o\">=</span> <span class=\"n\">chainload</span><span class=\"o\">.</span><span class=\"n\">load_file</span><span class=\"p\">(</span><span class=\"n\">file_name</span><span class=\"o\">=</span><span class=\"s2\">\"tests/test_settings.yaml\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">chainload</span><span class=\"o\">.</span><span class=\"n\">chain_load_variable</span><span class=\"p\">(</span><span class=\"s2\">\"environment\"</span><span class=\"p\">,</span> <span class=\"s2\">\"environment\"</span><span class=\"p\">,</span> <span class=\"s2\">\"debug\"</span><span class=\"p\">,</span> <span class=\"n\">variable_file</span><span class=\"p\">)</span>\n<span class=\"s1\">'production'</span>\n</pre>\n<p>or, if you have a lot of variables to load, use the class-based approach:</p>\n<pre><span class=\"err\">$</span> <span class=\"n\">python</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">chainer</span> <span class=\"o\">=</span> <span class=\"n\">chainload</span><span class=\"o\">.</span><span class=\"n\">ChainloadSetup</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s2\">\"tests/test_settings.yaml\"</span><span class=\"p\">,</span> <span class=\"n\">environment_variable_prefix</span><span class=\"o\">=</span><span class=\"s2\">\"webapp_\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">environment_value</span> <span class=\"o\">=</span> <span class=\"n\">chainer</span><span class=\"p\">(</span><span class=\"s2\">\"environment\"</span><span class=\"p\">)</span>\n</pre>\n<p>the latter has the advantage of being far more <a href=\"http://stackoverflow.com/questions/6453235/what-does-damp-not-dry-mean-when-talking-about-unit-tests\" rel=\"nofollow\">DRY</a> for larger use-cases.</p>\n<p>See the docstring for <cite>chain_load_variable</cite>, but this will load a variable in order of:</p>\n<ol>\n<li><p>A default value</p>\n</li>\n<li><p>From file object</p>\n</li>\n<li><p>From an environment variable.</p>\n<p>Optional: If the environmental variable is None, and the specified file option name exists in the env, and this behavior is enabled, an attempt to load from an environmental variable of the same name as specified for #2</p>\n</li>\n</ol>\n</div>\n<div id=\"running-tests\">\n<h2>Running tests</h2>\n<p>If you want to run the tests for this package:</p>\n<pre>$ make <span class=\"nb\">test</span>\npython setup.py <span class=\"nb\">test</span>\nrunning nosetests\nrunning egg_info\nwriting chainload.egg-info/PKG-INFO\nwriting top-level names to chainload.egg-info/top_level.txt\nwriting dependency_links to chainload.egg-info/dependency_links.txt\nreading manifest file <span class=\"s1\">'chainload.egg-info/SOURCES.txt'</span>\nwriting manifest file <span class=\"s1\">'chainload.egg-info/SOURCES.txt'</span>\n.........\n----------------------------------------------------------------------\nRan <span class=\"m\">9</span> tests in <span class=\"m\">0</span>.007s\n</pre>\n</div>\n<div id=\"filing-bugs-issues\">\n<h2>Filing bugs / issues</h2>\n<p>When filing a bug report, please include a <a href=\"http://sscce.org/\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a>.</p>\n</div>\n<div id=\"new-features-pull-requests\">\n<h2>New features / Pull requests</h2>\n<p>If requesting a new feature, please include a well-explained use-case with example usage.</p>\n<p>When making a pull request, if new functionality is added, please include appropriate tests.</p>\n</div>\n\n          </div>"}, "last_serial": 5624635, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "babecb7678599ec059d36588911e4da5", "sha256": "e369b9be178a3787a26244b131c64f118139cada838b23f3e772f8a282d57b4b"}, "downloads": -1, "filename": "chainload-1.0.tar.gz", "has_sig": false, "md5_digest": "babecb7678599ec059d36588911e4da5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3874, "upload_time": "2016-04-11T17:53:28", "upload_time_iso_8601": "2016-04-11T17:53:28.335090Z", "url": "https://files.pythonhosted.org/packages/53/14/62e9d854422337cd50a577d9f9fc3587d093d4ec01f235727d70e7ede7ff/chainload-1.0.tar.gz", "yanked": false}], "1.1": [], "1.2": [{"comment_text": "", "digests": {"md5": "64acde09bbd7fe6e09529f66dc9c4f90", "sha256": "33e02b46879dfac6153e6c244be7b1d80d2056f07b33816002f16f0c5396ae63"}, "downloads": -1, "filename": "chainload-1.2.tar.gz", "has_sig": false, "md5_digest": "64acde09bbd7fe6e09529f66dc9c4f90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3895, "upload_time": "2016-04-11T18:18:05", "upload_time_iso_8601": "2016-04-11T18:18:05.015108Z", "url": "https://files.pythonhosted.org/packages/42/6d/4b43472a752e720ecded35109a8389cb92e90696e3c188ece7080324c6f1/chainload-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "febaa307f01e13f71291ed6da963956d", "sha256": "7e9a309a16bfae19f9454dcc17a65ca4601afa11327e4927d85deef71a1830ae"}, "downloads": -1, "filename": "chainload-1.3.tar.gz", "has_sig": false, "md5_digest": "febaa307f01e13f71291ed6da963956d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5331, "upload_time": "2016-04-13T22:41:11", "upload_time_iso_8601": "2016-04-13T22:41:11.526755Z", "url": "https://files.pythonhosted.org/packages/fc/d4/6ad7d2291668781cac9e136fea643fa1d5a0a1e61250876adb91adb75106/chainload-1.3.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "39ef22f385ff2c2a06fbf501cae52c5a", "sha256": "f684618e9ed6705433e860b8dacb3f47553a87cab37f3c9aec8aa1a05b89134b"}, "downloads": -1, "filename": "chainload-1.4.tar.gz", "has_sig": false, "md5_digest": "39ef22f385ff2c2a06fbf501cae52c5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5391, "upload_time": "2016-05-20T17:17:41", "upload_time_iso_8601": "2016-05-20T17:17:41.046083Z", "url": "https://files.pythonhosted.org/packages/96/79/f29154d8c0c9d2a6a7fbd0875df9bb35a4b230f530e17827abf62917eaca/chainload-1.4.tar.gz", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "03e193420f0cc1b4116f4db7423604c9", "sha256": "41facd2cb281a76160dfa857172fcd29054d5be16e0acc59de6ddefeb75a4deb"}, "downloads": -1, "filename": "chainload-1.5.tar.gz", "has_sig": false, "md5_digest": "03e193420f0cc1b4116f4db7423604c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5259, "upload_time": "2019-08-02T14:56:00", "upload_time_iso_8601": "2019-08-02T14:56:00.922784Z", "url": "https://files.pythonhosted.org/packages/38/24/d7dd40931282d77577d1d3545f121afbd82b48c0ce59cbc472c8ae54437a/chainload-1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "03e193420f0cc1b4116f4db7423604c9", "sha256": "41facd2cb281a76160dfa857172fcd29054d5be16e0acc59de6ddefeb75a4deb"}, "downloads": -1, "filename": "chainload-1.5.tar.gz", "has_sig": false, "md5_digest": "03e193420f0cc1b4116f4db7423604c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5259, "upload_time": "2019-08-02T14:56:00", "upload_time_iso_8601": "2019-08-02T14:56:00.922784Z", "url": "https://files.pythonhosted.org/packages/38/24/d7dd40931282d77577d1d3545f121afbd82b48c0ce59cbc472c8ae54437a/chainload-1.5.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:32 2020"}