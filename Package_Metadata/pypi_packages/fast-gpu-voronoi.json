{"info": {"author": "Maciej A. Czyzewski", "author_email": "maciejanthonyczyzewski@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "\n<div align=\"center\">\n  <img src=\"docs/figure_jka_star_intro.png\" alt=\"JFA*\" width=\"500px\" /><br />\n</div>\n\n<br/>\n\n|     | Research | Authors |\n|:----|:---------|:--------|\n| \\[[slides](https://maciejczyzewski.github.io/fast_gpu_voronoi/slides_small.pdf)\\] | __GPU-Accelerated Jump Flooding Algorithm for Voronoi Diagram in log*(n)__ [this] | Maciej A. Czyzewski |\n| \\[[article](https://vgl.csa.iisc.ac.in/pdf/pub/ICVGIP14_Talha.pdf)\\] | Facet-JFA: Faster computation of discrete Voronoi diagrams [2014] | Talha Bin Masood, Hari Krishna Malladi, Vijay Natarajan |\n| \\[[article](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.101.8568&rep=rep1&type=pdf)\\] | Jump Flooding in GPU with Applications to Voronoi Diagram and Distance Transform [2006] | Guodong Rong, Tiow-Seng Tan |\n\n# Implemented Algorithms\n\n<table>\n<thead>\n<tr>\n<th></th>\n<th>JFA*</th>\n<th>JFA+</th>\n<th>JFA</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>used improvement</td>\n<td>noise+selection</td>\n<td>noise</td>\n<td>--</td>\n<td rowspan=\"4\"><img src=\"docs/figure_3d.png\" alt=\"results\" width=\"350px\" /></td>\n</tr>\n<tr>\n<td>num. of needed steps</td>\n<td><strong>log*(n)</strong></td>\n<td>log4(p)</td>\n<td>log2(p)</td>\n</tr>\n<tr>\n<td>step size</td>\n<td>p/(3^i)</td>\n<td>p/(2^i)</td>\n<td>p/(2^i)</td>\n</tr>\n<tr>\n<td>research</td>\n<td>(our)</td>\n<td>(our)</td>\n<td>[Guodong 2006]</td>\n</tr>\n</tbody>\n</table>\n\n# Installation & Example\n\nProject can be installed using `pip`:\n\n```bash\n$ pip3 install fast_gpu_voronoi\n```\n\nHere is a small example to whet your appetite:\n\n```python3\nfrom fast_gpu_voronoi       import Instance\nfrom fast_gpu_voronoi.jfa   import JFA_star\nfrom fast_gpu_voronoi.debug import save\n\nI = Instance(alg=JFA_star, x=50, y=50, \\\n        pts=[[ 7,14], [33,34], [27,10],\n             [35,10], [23,42], [34,39]])\nI.run()\n\nprint(I.M.shape)                 # (50, 50, 1)\nsave(I.M, I.x, I.y, force=True)  # __1_debug.png\n```\n\n# Development\n\nIf you want to contribute, first clone git repository and then run tests:\n\n```bash\n$ git clone git@github.com:maciejczyzewski/fast_gpu_voronoi.git\n$ pip3 install -r requirements.txt\n$ pytest\n```\n\n# Results\n\n| Our method                      | Current best          |\n|:-------------------------------:|:---------------------:|\n| JFA\\*                           | JFA                   |\n| ![JFA_star](docs/jfa_star2.gif) | ![JFA](docs/jfa2.gif) |\n| steps = log\\*(2000) = 4          | steps = log(720) ~= 10 |\n\n_...for x = 720; y = 720; seeds = 2000 (read as n = 2000; p = 720)._\n\n# Thanks\n\n<div align=\"center\">\n  <img src=\"docs/PP_logo.jpg\" alt=\"Poznan University of Technology\" width=\"600px\" /><br />\n  <img src=\"docs/opencl_logo.svg\" alt=\"OpenCl\" width=\"200px\" />\n</div>\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/maciejczyzewski/fast_gpu_voronoi", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "fast-gpu-voronoi", "package_url": "https://pypi.org/project/fast-gpu-voronoi/", "platform": "", "project_url": "https://pypi.org/project/fast-gpu-voronoi/", "project_urls": {"Homepage": "https://github.com/maciejczyzewski/fast_gpu_voronoi"}, "release_url": "https://pypi.org/project/fast-gpu-voronoi/0.0.1/", "requires_dist": ["imageio (==2.4.1)", "matplotlib (==3.0.3)", "pyopencl (==2018.2.5)", "numpy (==1.16.2)", "tqdm (==4.28.1)"], "requires_python": ">=3.1.0", "summary": "GPU-Accelerated Jump Flooding Algorithm for Voronoi Diagram in log*(n)", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n  <img alt=\"JFA*\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/44cb8a34ffe3ae6527ee5b5afb736370a404dcb4/646f63732f6669677572655f6a6b615f737461725f696e74726f2e706e67\" width=\"500px\"><br>\n</div>\n<br>\n<table>\n<thead>\n<tr>\n<th align=\"left\"></th>\n<th align=\"left\">Research</th>\n<th align=\"left\">Authors</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">[<a href=\"https://maciejczyzewski.github.io/fast_gpu_voronoi/slides_small.pdf\" rel=\"nofollow\">slides</a>]</td>\n<td align=\"left\"><strong>GPU-Accelerated Jump Flooding Algorithm for Voronoi Diagram in log*(n)</strong> [this]</td>\n<td align=\"left\">Maciej A. Czyzewski</td>\n</tr>\n<tr>\n<td align=\"left\">[<a href=\"https://vgl.csa.iisc.ac.in/pdf/pub/ICVGIP14_Talha.pdf\" rel=\"nofollow\">article</a>]</td>\n<td align=\"left\">Facet-JFA: Faster computation of discrete Voronoi diagrams [2014]</td>\n<td align=\"left\">Talha Bin Masood, Hari Krishna Malladi, Vijay Natarajan</td>\n</tr>\n<tr>\n<td align=\"left\">[<a href=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.101.8568&amp;rep=rep1&amp;type=pdf\" rel=\"nofollow\">article</a>]</td>\n<td align=\"left\">Jump Flooding in GPU with Applications to Voronoi Diagram and Distance Transform [2006]</td>\n<td align=\"left\">Guodong Rong, Tiow-Seng Tan</td>\n</tr></tbody></table>\n<h1>Implemented Algorithms</h1>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>JFA*</th>\n<th>JFA+</th>\n<th>JFA</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>used improvement</td>\n<td>noise+selection</td>\n<td>noise</td>\n<td>--</td>\n<td><img alt=\"results\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5a83d9eb5b18f7f6c000f41a02c0ab3c40e046da/646f63732f6669677572655f33642e706e67\" width=\"350px\"></td>\n</tr>\n<tr>\n<td>num. of needed steps</td>\n<td><strong>log*(n)</strong></td>\n<td>log4(p)</td>\n<td>log2(p)</td>\n</tr>\n<tr>\n<td>step size</td>\n<td>p/(3^i)</td>\n<td>p/(2^i)</td>\n<td>p/(2^i)</td>\n</tr>\n<tr>\n<td>research</td>\n<td>(our)</td>\n<td>(our)</td>\n<td>[Guodong 2006]</td>\n</tr>\n</tbody>\n</table>\n<h1>Installation &amp; Example</h1>\n<p>Project can be installed using <code>pip</code>:</p>\n<pre>$ pip3 install fast_gpu_voronoi\n</pre>\n<p>Here is a small example to whet your appetite:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fast_gpu_voronoi</span>       <span class=\"kn\">import</span> <span class=\"n\">Instance</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fast_gpu_voronoi.jfa</span>   <span class=\"kn\">import</span> <span class=\"n\">JFA_star</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fast_gpu_voronoi.debug</span> <span class=\"kn\">import</span> <span class=\"n\">save</span>\n\n<span class=\"n\">I</span> <span class=\"o\">=</span> <span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"n\">alg</span><span class=\"o\">=</span><span class=\"n\">JFA_star</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> \\\n        <span class=\"n\">pts</span><span class=\"o\">=</span><span class=\"p\">[[</span> <span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">14</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">33</span><span class=\"p\">,</span><span class=\"mi\">34</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">27</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">],</span>\n             <span class=\"p\">[</span><span class=\"mi\">35</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">23</span><span class=\"p\">,</span><span class=\"mi\">42</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">34</span><span class=\"p\">,</span><span class=\"mi\">39</span><span class=\"p\">]])</span>\n<span class=\"n\">I</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">I</span><span class=\"o\">.</span><span class=\"n\">M</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>                 <span class=\"c1\"># (50, 50, 1)</span>\n<span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">I</span><span class=\"o\">.</span><span class=\"n\">M</span><span class=\"p\">,</span> <span class=\"n\">I</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">I</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">force</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>  <span class=\"c1\"># __1_debug.png</span>\n</pre>\n<h1>Development</h1>\n<p>If you want to contribute, first clone git repository and then run tests:</p>\n<pre>$ git clone git@github.com:maciejczyzewski/fast_gpu_voronoi.git\n$ pip3 install -r requirements.txt\n$ pytest\n</pre>\n<h1>Results</h1>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Our method</th>\n<th align=\"center\">Current best</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">JFA*</td>\n<td align=\"center\">JFA</td>\n</tr>\n<tr>\n<td align=\"center\"><img alt=\"JFA_star\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ed14b428f0febdc709d9f97bd6882f827b6cbcc2/646f63732f6a66615f73746172322e676966\"></td>\n<td align=\"center\"><img alt=\"JFA\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6014c54fa9d6fa3a15de8d181116038949781d55/646f63732f6a6661322e676966\"></td>\n</tr>\n<tr>\n<td align=\"center\">steps = log*(2000) = 4</td>\n<td align=\"center\">steps = log(720) ~= 10</td>\n</tr></tbody></table>\n<p><em>...for x = 720; y = 720; seeds = 2000 (read as n = 2000; p = 720).</em></p>\n<h1>Thanks</h1>\n<div>\n  <img alt=\"Poznan University of Technology\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7a61c857bced12359e906be0b300c90fa75aa74a/646f63732f50505f6c6f676f2e6a7067\" width=\"600px\"><br>\n  <img alt=\"OpenCl\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a082e52d97e1f1a941abc2c781720e5f9711b7fe/646f63732f6f70656e636c5f6c6f676f2e737667\" width=\"200px\">\n</div>\n\n          </div>"}, "last_serial": 5320131, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "747080fa291e59b1270cbea32a2f84c3", "sha256": "3145f2bccee5cfde6ae78e2ebec9281a59774a6090a4075a2072d672d7d50d5c"}, "downloads": -1, "filename": "fast_gpu_voronoi-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "747080fa291e59b1270cbea32a2f84c3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.1.0", "size": 26781, "upload_time": "2019-05-27T00:20:52", "upload_time_iso_8601": "2019-05-27T00:20:52.943869Z", "url": "https://files.pythonhosted.org/packages/93/d7/e72101aa42f64de08f02403b45a5228412ac32072f5668c37669a77a9757/fast_gpu_voronoi-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b91bfd57d14085fc42723b9819342a8", "sha256": "aa1febbca8fcec88493ebe5311a5310212a521bdf1c91da9fbdf6c1cbbc72b18"}, "downloads": -1, "filename": "fast_gpu_voronoi-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2b91bfd57d14085fc42723b9819342a8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.1.0", "size": 12864, "upload_time": "2019-05-27T00:20:55", "upload_time_iso_8601": "2019-05-27T00:20:55.098503Z", "url": "https://files.pythonhosted.org/packages/10/a9/870a8ceff318f138b0815b7c0b08d0ce464c23bc1bf7c4d4d681a69bd813/fast_gpu_voronoi-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "747080fa291e59b1270cbea32a2f84c3", "sha256": "3145f2bccee5cfde6ae78e2ebec9281a59774a6090a4075a2072d672d7d50d5c"}, "downloads": -1, "filename": "fast_gpu_voronoi-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "747080fa291e59b1270cbea32a2f84c3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.1.0", "size": 26781, "upload_time": "2019-05-27T00:20:52", "upload_time_iso_8601": "2019-05-27T00:20:52.943869Z", "url": "https://files.pythonhosted.org/packages/93/d7/e72101aa42f64de08f02403b45a5228412ac32072f5668c37669a77a9757/fast_gpu_voronoi-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b91bfd57d14085fc42723b9819342a8", "sha256": "aa1febbca8fcec88493ebe5311a5310212a521bdf1c91da9fbdf6c1cbbc72b18"}, "downloads": -1, "filename": "fast_gpu_voronoi-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2b91bfd57d14085fc42723b9819342a8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.1.0", "size": 12864, "upload_time": "2019-05-27T00:20:55", "upload_time_iso_8601": "2019-05-27T00:20:55.098503Z", "url": "https://files.pythonhosted.org/packages/10/a9/870a8ceff318f138b0815b7c0b08d0ce464c23bc1bf7c4d4d681a69bd813/fast_gpu_voronoi-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:31 2020"}