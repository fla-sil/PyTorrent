{"info": {"author": "Radio Astronomy Software Group", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering :: Astronomy"], "description": "# pyuvdata\n\n[![CircleCI](https://circleci.com/gh/RadioAstronomySoftwareGroup/pyuvdata.svg?style=svg&branch=master)](https://circleci.com/gh/RadioAstronomySoftwareGroup/pyuvdata?branch=master)\n[![](https://github.com/RadioAstronomySoftwareGroup/pyuvdata/workflows/Run%20Tests/badge.svg?branch=master)](https://github.com/RadioAstronomySoftwareGroup/pyuvdata/actions)\n[![Build Status](https://dev.azure.com/radioastronomysoftwaregroup/pyuvdata/_apis/build/status/RadioAstronomySoftwareGroup.pyuvdata?branchName=master)](https://dev.azure.com/radioastronomysoftwaregroup/pyuvdata/_build/latest?definitionId=1&branchName=master)\n[![codecov](https://codecov.io/gh/RadioAstronomySoftwareGroup/pyuvdata/badge.svg?branch=master)](https://codecov.io/gh/RadioAstronomySoftwareGroup/pyuvdata)\n[![DOI](http://joss.theoj.org/papers/10.21105/joss.00140/status.svg)](https://doi.org/10.21105/joss.00140)\n\npyuvdata defines a pythonic interface to interferometric data sets.\nCurrently pyuvdata supports reading and writing of miriad, uvfits, and uvh5 files\nand reading of CASA measurement sets and FHD\n([Fast Holographic Deconvolution](https://github.com/EoRImaging/FHD)) visibility save files.\n\n\n# Motivation\nThe main goals are:\n\n1. To provide a high quality, well documented path to convert between data formats\n2. Support the direct use of datasets from python with minimal software\n3. Provide precise data definition via both human readable code and high quality online documentation\n\n# Package Details\npyuvdata has four major user classes:\n\n* UVData: supports interferometric data (visibilities) and associated metadata\n* UVCal: supports interferometric calibration solutions (antenna-based) and\nassociated metadata (Note that this is a fairly new object, consider it to be a beta version)\n* UVBeam: supports primary beams (E-field or power) and associated metadata\n(Note that this is a fairly new object, consider it to be a beta version)\n* UVFlag: A class to handle the manipulation and combination of flags for data sets.\nAlso can convert raw data quality metrics into flags using thresholding.\n(This object is very new and experimental. Consider it to be a beta version)\n\n## UVData File standard notes\n* miriad has been thoroughly tested with aipy-style miriad files and minimally\ntested with ATCA files\n* uvfits conforms to AIPS memo 117 (as of May 2015).  It is tested against\nFHD, CASA, and AIPS. However AIPS is limited to <80 antennas and CASA uvfits\nimport does not seem to support >255 antennas.\n* uvh5 is an HDF5-based file format defined by the HERA collaboration,\ndetails in the [uvh5 memo](docs/references/uvh5_memo.pdf). Note that this is a\nsomewhat new format, so it may evolve a bit\nbut we will strive to make future versions backwards compatible with the current format.\nIt is probably not compatible with other interferometric HDF5 files defined by other groups.\n* FHD (read-only support, tested against MWA and PAPER data)\n* CASA measurement sets (read-only support)\n\n## UVCal file formats\n* calfits: a new format defined in pyuvdata, details in the [calfits_memo](docs/references/calfits_memo.pdf).\nNote that this format was recently defined and may change in coming versions,\nbased on user needs. Consider it to be a beta version, but we will strive to\nmake future versions backwards compatible with the current format.\n* FHD calibration files (read-only support)\n\n## UVBeam file formats\n* regularly gridded fits for both E-field and power beams\n* non-standard HEALPix fits for both E-field and power beams (in an ImageHDU\nrather than a binary table to support frequency, polarization and E-field vector axes)\n* read support for CST beam text files, with a defined yaml file format for\nmetadata, details here: [cst settings file](docs/cst_settings_yaml.rst)\n\n## Under Development\n* UVCal: object and calfits file format (beta version)\n* UVBeam: object and beamfits file format (beta version)\n* UVFlag: object and HDF5 file format. (beta version)\n\n## Known Issues and Planned Improvements\n* UVData: phasing (and the accuracy on the uvw coordinates) is only known to be\ngood to 2cm on a 3km baseline (this is limited by the accuracy of the test file,\nsee the [phasing memo](docs/references/phasing.pdf) for more details).\n* UVData: Multiple spectral windows or multiple sources are not currently supported\n* UVData: add support for writing CASA measurement sets\n* UVBeam: support phased-array antenna beams (e.g. MWA beams).\n* UVFlag: Adding requires a high level knowledge of individual objects. (see [issue #653](https://github.com/RadioAstronomySoftwareGroup/pyuvdata/issues/653))\n\nFor details see the [issue log](https://github.com/RadioAstronomySoftwareGroup/pyuvdata/issues).\n\n## Community Guidelines\nContributions to this package to add new file formats or address any of the\nissues in the [issue log](https://github.com/RadioAstronomySoftwareGroup/pyuvdata/issues)\nare very welcome, as are bug reports and feature requests.\nPlease see our [guide on contributing](.github/CONTRIBUTING.md)\n\n# Telescopes\npyuvdata has been used with data from the following telescopes. If you use it on\ndata from a telescope we don't have listed here please let us know how it went\nvia an issue! We would like to make pyuvdata generally useful to the community for\nas many telescopes as possible.\n\n* MWA\n* HERA\n* PAPER\n* LWA\n* ALMA\n* VLA\n* ATCA\n\n# Versioning\nWe use a `generation.major.minor` version number format. We use the `generation`\nnumber for very significant improvements or major rewrites, the `major` number\nto indicate substantial package changes (intended to be released every 3-4 months)\nand the `minor` number to release smaller incremental updates (intended to be\nreleased approximately monthly and which usually do not include breaking API\nchanges). We do our best to provide a significant period (usually 2 major\ngenerations) of deprecation warnings for all breaking changes to the API.\nWe track all changes in our [changelog](https://github.com/RadioAstronomySoftwareGroup/pyuvdata/blob/master/CHANGELOG.md).\n\n# Documentation\nA tutorial with example usage and developer API documentation is hosted on\n[ReadTheDocs](https://pyuvdata.readthedocs.io).\n\n# History\npyuvdata was originally developed in the low frequency 21cm community to support\nthe development of and interchange of data between calibration and foreground\nsubtraction pipelines. Particular focus has been paid to supporting drift and\nphased array modes.\n\n# Citation\nPlease cite pyuvdata by citing our JOSS paper:\n\nHazelton et al, (2017), pyuvdata: an interface for astronomical interferometeric\ndatasets in python, Journal of Open Source Software, 2(10), 140, doi:10.21105/joss.00140\n\n[ADS Link](https://ui.adsabs.harvard.edu/abs/2017JOSS....2..140H);\n[Bibtex entry](http://adsabs.harvard.edu/cgi-bin/nph-bib_query?bibcode=2017JOSS....2..140H&data_type=BIBTEX&db_key=GEN&nocookieset=1)\n\n# Installation\nSimple installation via conda is available for users, developers should follow\nthe directions under [Developer Installation](#developer-installation) below.\n\nFor simple installation, the latest stable version is available via conda\n(preferred: ```conda install -c conda-forge pyuvdata```) or pip (```pip install pyuvdata```).\n\nThere are some optional dependencies that are required for specific functionality,\nwhich will not be installed automatically by conda or pip.\nSee [Dependencies](#dependencies) for details on installing optional dependencies.\n\nNote that as of v2, `pyuvdata` is only supported on python 3.6+.\n\n## Dependencies\n\nRequired:\n\n* numpy >= 1.15\n* scipy\n* astropy >= 3.2.3\n* h5py\n* setuptools_scm\n\nOptional:\n\n* python-casacore (for working with CASA measurement sets)\n* astropy-healpix (for working with beams in HEALPix formats)\n* pyyaml (for working with settings files for CST beam files)\n\nThe numpy and astropy versions are important, so make sure these are up to date.\n\nWe suggest using conda to install all the dependencies. If you want to install\npython-casacore and astropy-healpix, you'll need to add conda-forge as a channel\n(```conda config --add channels conda-forge```).\n\nIf you do not want to use conda, the packages are also available on PyPI\n(python-casacore may require more effort, see details for that package below).\nYou can install the optional dependencies via pip by specifying an option\nwhen you install pyuvdata, as in ```pip install pyuvdata[healpix]```\nwhich will install all the required packages for using the HEALPix functionality\nin pyuvdata. The options that can be passed in this way are:\n[`casa`, `healpix`, `cst`, `all`, `test`, `doc`, `dev`]. The first three (`casa`, `healpix`, `cst`)\nenable various specific functionality while `all` will install all optional\ndependencies. The last three (`test`, `doc`, `dev`) may be useful for developers\nof pyuvdata.\n\n### Installing python-casacore\npython-casacore requires the casacore c++ libraries. It can be installed easily\nusing conda (```python-casacore``` on conda-forge).\n\nIf you do not want to use conda, the casacore c++ libraries are available for\nubuntu through the [kern suite](http://kernsuite.info/). On OSX, casacore is\navailable through the [ska-sa brew tap](https://github.com/ska-sa/homebrew-tap).\nThe python-casacore library (with manual install instructions) is available at\nhttps://github.com/casacore/python-casacore\n\n## Developer Installation\nClone the repository using\n```git clone https://github.com/RadioAstronomySoftwareGroup/pyuvdata.git```\n\nNavigate into the pyuvdata directory and run `pip install .`\n(note that `python setup.py install` does not work).\nNote that this will attempt to automatically install any missing dependencies.\nIf you use anaconda or another package manager you might prefer to first install\nthe dependencies as described in [Dependencies](#dependencies).\n\nTo install without dependencies, run `pip install --no-deps`\n\nTo compile the binary extension modules such that you can successfully run\n`import pyuvdata` from the top-level directory of your Git checkout, run:\n```python setup.py build_ext --inplace```\n\nIf you want to do development on pyuvdata, in addition to the other dependencies\nyou will need the following packages:\n\n* pytest\n* pytest-cases >= 1.12.1\n* pytest-xdist\n* pytest-cov\n* cython   (This is necessary for coverage reporting of cython extensions)\n* coverage\n* pre-commit\n* sphinx\n* pypandoc\n\nOne way to ensure you have all the needed packages is to use the included `environment.yaml` file to create a new environment that will\ncontain all the optional dependencies along with dependencies required for\ntesting and development (```conda env create -f environment.yml```). Alternatively, you can specify `test`, `doc`, or `dev` when installing pyuvdata (as in `pip install pyuvdata[dev]`) to install the packages needed for testing (including coverage and\nlinting) and documentation development; `dev` includes everything in `test` and `doc`.\n\nTo use pre-commit to prevent committing code that does not follow our style, you'll need to run `pre-commit install` in the top level `pyuvdata` directory.\n\n## Tests\nUses the `pytest` package to execute test suite.\nFrom the source pyuvdata directory run ```pytest``` or ```python -m pytest```.\n\nTesting of `UVFlag` module requires the `pytest-cases` plug-in.\n\n# API\nThe primary interface to data from python is via the UVData object. It provides\nimport functionality from all supported file formats (UVFITS, Miriad, UVH5, FHD,\nCASA measurement sets) and export to UVFITS, Miriad, and UVH5 formats and can\nbe interacted with directly. Similarly, the primary calibration, beam, and flag\ninterfaces are via the UVCal, UVBeam, and UVflag objects. The attributes of the UVData,\nUVCal, UVBeam, and UVFlag objects are described in the uvdata_parameters, uvcal_parameters,\n uvbeam_parameters and uvflag_parameters descriptions at https://pyuvdata.readthedocs.io or\n[here](https://github.com/RadioAstronomySoftwareGroup/pyuvdata/blob/master/docs).\n\n\n# Maintainers\npyuvdata is maintained by the RASG Managers, which currently include:\n - Adam Beardsley (Arizona State University)\n - Bryna Hazelton (University of Washington)\n - Daniel Jacobs (Arizona State University)\n - Paul La Plante (University of California, Berkeley)\n - Jonathan Pober (Brown University)\n\nPlease use the channels discussed in the [guide on contributing](.github/CONTRIBUTING.md)\nfor code-related discussions. You can contact us privately if needed at\n[rasgmanagers@gmail.com](mailto:rasgmanagers@gmail.com).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/RadioAstronomySoftwareGroup/pyuvdata", "keywords": "radio astronomy interferometry", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "pyuvdata", "package_url": "https://pypi.org/project/pyuvdata/", "platform": "", "project_url": "https://pypi.org/project/pyuvdata/", "project_urls": {"Homepage": "https://github.com/RadioAstronomySoftwareGroup/pyuvdata"}, "release_url": "https://pypi.org/project/pyuvdata/2.0.2/", "requires_dist": null, "requires_python": "", "summary": "an interface for astronomical interferometeric datasets in python", "version": "2.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyuvdata</h1>\n<p><a href=\"https://circleci.com/gh/RadioAstronomySoftwareGroup/pyuvdata?branch=master\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f59cf55fb8a2e2e04b7d70c9dd053a67ae620c68/68747470733a2f2f636972636c6563692e636f6d2f67682f526164696f417374726f6e6f6d79536f66747761726547726f75702f70797576646174612e7376673f7374796c653d737667266272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/RadioAstronomySoftwareGroup/pyuvdata/actions\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6cb6281e41ef0741f7dce62ad473d670f86974e7/68747470733a2f2f6769746875622e636f6d2f526164696f417374726f6e6f6d79536f66747761726547726f75702f70797576646174612f776f726b666c6f77732f52756e25323054657374732f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://dev.azure.com/radioastronomysoftwaregroup/pyuvdata/_build/latest?definitionId=1&amp;branchName=master\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c54c93d64667efb730ad12bdb869c158dcfb1cf2/68747470733a2f2f6465762e617a7572652e636f6d2f726164696f617374726f6e6f6d79736f66747761726567726f75702f70797576646174612f5f617069732f6275696c642f7374617475732f526164696f417374726f6e6f6d79536f66747761726547726f75702e70797576646174613f6272616e63684e616d653d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/RadioAstronomySoftwareGroup/pyuvdata\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c8a1672234c08c8099149470cf818f0e409dcdfc/68747470733a2f2f636f6465636f762e696f2f67682f526164696f417374726f6e6f6d79536f66747761726547726f75702f70797576646174612f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://doi.org/10.21105/joss.00140\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6b4673665faafb0cde742e8a2aefaf6a05693d8b/687474703a2f2f6a6f73732e7468656f6a2e6f72672f7061706572732f31302e32313130352f6a6f73732e30303134302f7374617475732e737667\"></a></p>\n<p>pyuvdata defines a pythonic interface to interferometric data sets.\nCurrently pyuvdata supports reading and writing of miriad, uvfits, and uvh5 files\nand reading of CASA measurement sets and FHD\n(<a href=\"https://github.com/EoRImaging/FHD\" rel=\"nofollow\">Fast Holographic Deconvolution</a>) visibility save files.</p>\n<h1>Motivation</h1>\n<p>The main goals are:</p>\n<ol>\n<li>To provide a high quality, well documented path to convert between data formats</li>\n<li>Support the direct use of datasets from python with minimal software</li>\n<li>Provide precise data definition via both human readable code and high quality online documentation</li>\n</ol>\n<h1>Package Details</h1>\n<p>pyuvdata has four major user classes:</p>\n<ul>\n<li>UVData: supports interferometric data (visibilities) and associated metadata</li>\n<li>UVCal: supports interferometric calibration solutions (antenna-based) and\nassociated metadata (Note that this is a fairly new object, consider it to be a beta version)</li>\n<li>UVBeam: supports primary beams (E-field or power) and associated metadata\n(Note that this is a fairly new object, consider it to be a beta version)</li>\n<li>UVFlag: A class to handle the manipulation and combination of flags for data sets.\nAlso can convert raw data quality metrics into flags using thresholding.\n(This object is very new and experimental. Consider it to be a beta version)</li>\n</ul>\n<h2>UVData File standard notes</h2>\n<ul>\n<li>miriad has been thoroughly tested with aipy-style miriad files and minimally\ntested with ATCA files</li>\n<li>uvfits conforms to AIPS memo 117 (as of May 2015).  It is tested against\nFHD, CASA, and AIPS. However AIPS is limited to &lt;80 antennas and CASA uvfits\nimport does not seem to support &gt;255 antennas.</li>\n<li>uvh5 is an HDF5-based file format defined by the HERA collaboration,\ndetails in the <a href=\"docs/references/uvh5_memo.pdf\" rel=\"nofollow\">uvh5 memo</a>. Note that this is a\nsomewhat new format, so it may evolve a bit\nbut we will strive to make future versions backwards compatible with the current format.\nIt is probably not compatible with other interferometric HDF5 files defined by other groups.</li>\n<li>FHD (read-only support, tested against MWA and PAPER data)</li>\n<li>CASA measurement sets (read-only support)</li>\n</ul>\n<h2>UVCal file formats</h2>\n<ul>\n<li>calfits: a new format defined in pyuvdata, details in the <a href=\"docs/references/calfits_memo.pdf\" rel=\"nofollow\">calfits_memo</a>.\nNote that this format was recently defined and may change in coming versions,\nbased on user needs. Consider it to be a beta version, but we will strive to\nmake future versions backwards compatible with the current format.</li>\n<li>FHD calibration files (read-only support)</li>\n</ul>\n<h2>UVBeam file formats</h2>\n<ul>\n<li>regularly gridded fits for both E-field and power beams</li>\n<li>non-standard HEALPix fits for both E-field and power beams (in an ImageHDU\nrather than a binary table to support frequency, polarization and E-field vector axes)</li>\n<li>read support for CST beam text files, with a defined yaml file format for\nmetadata, details here: <a href=\"docs/cst_settings_yaml.rst\" rel=\"nofollow\">cst settings file</a></li>\n</ul>\n<h2>Under Development</h2>\n<ul>\n<li>UVCal: object and calfits file format (beta version)</li>\n<li>UVBeam: object and beamfits file format (beta version)</li>\n<li>UVFlag: object and HDF5 file format. (beta version)</li>\n</ul>\n<h2>Known Issues and Planned Improvements</h2>\n<ul>\n<li>UVData: phasing (and the accuracy on the uvw coordinates) is only known to be\ngood to 2cm on a 3km baseline (this is limited by the accuracy of the test file,\nsee the <a href=\"docs/references/phasing.pdf\" rel=\"nofollow\">phasing memo</a> for more details).</li>\n<li>UVData: Multiple spectral windows or multiple sources are not currently supported</li>\n<li>UVData: add support for writing CASA measurement sets</li>\n<li>UVBeam: support phased-array antenna beams (e.g. MWA beams).</li>\n<li>UVFlag: Adding requires a high level knowledge of individual objects. (see <a href=\"https://github.com/RadioAstronomySoftwareGroup/pyuvdata/issues/653\" rel=\"nofollow\">issue #653</a>)</li>\n</ul>\n<p>For details see the <a href=\"https://github.com/RadioAstronomySoftwareGroup/pyuvdata/issues\" rel=\"nofollow\">issue log</a>.</p>\n<h2>Community Guidelines</h2>\n<p>Contributions to this package to add new file formats or address any of the\nissues in the <a href=\"https://github.com/RadioAstronomySoftwareGroup/pyuvdata/issues\" rel=\"nofollow\">issue log</a>\nare very welcome, as are bug reports and feature requests.\nPlease see our <a href=\".github/CONTRIBUTING.md\" rel=\"nofollow\">guide on contributing</a></p>\n<h1>Telescopes</h1>\n<p>pyuvdata has been used with data from the following telescopes. If you use it on\ndata from a telescope we don't have listed here please let us know how it went\nvia an issue! We would like to make pyuvdata generally useful to the community for\nas many telescopes as possible.</p>\n<ul>\n<li>MWA</li>\n<li>HERA</li>\n<li>PAPER</li>\n<li>LWA</li>\n<li>ALMA</li>\n<li>VLA</li>\n<li>ATCA</li>\n</ul>\n<h1>Versioning</h1>\n<p>We use a <code>generation.major.minor</code> version number format. We use the <code>generation</code>\nnumber for very significant improvements or major rewrites, the <code>major</code> number\nto indicate substantial package changes (intended to be released every 3-4 months)\nand the <code>minor</code> number to release smaller incremental updates (intended to be\nreleased approximately monthly and which usually do not include breaking API\nchanges). We do our best to provide a significant period (usually 2 major\ngenerations) of deprecation warnings for all breaking changes to the API.\nWe track all changes in our <a href=\"https://github.com/RadioAstronomySoftwareGroup/pyuvdata/blob/master/CHANGELOG.md\" rel=\"nofollow\">changelog</a>.</p>\n<h1>Documentation</h1>\n<p>A tutorial with example usage and developer API documentation is hosted on\n<a href=\"https://pyuvdata.readthedocs.io\" rel=\"nofollow\">ReadTheDocs</a>.</p>\n<h1>History</h1>\n<p>pyuvdata was originally developed in the low frequency 21cm community to support\nthe development of and interchange of data between calibration and foreground\nsubtraction pipelines. Particular focus has been paid to supporting drift and\nphased array modes.</p>\n<h1>Citation</h1>\n<p>Please cite pyuvdata by citing our JOSS paper:</p>\n<p>Hazelton et al, (2017), pyuvdata: an interface for astronomical interferometeric\ndatasets in python, Journal of Open Source Software, 2(10), 140, doi:10.21105/joss.00140</p>\n<p><a href=\"https://ui.adsabs.harvard.edu/abs/2017JOSS....2..140H\" rel=\"nofollow\">ADS Link</a>;\n<a href=\"http://adsabs.harvard.edu/cgi-bin/nph-bib_query?bibcode=2017JOSS....2..140H&amp;data_type=BIBTEX&amp;db_key=GEN&amp;nocookieset=1\" rel=\"nofollow\">Bibtex entry</a></p>\n<h1>Installation</h1>\n<p>Simple installation via conda is available for users, developers should follow\nthe directions under <a href=\"#developer-installation\" rel=\"nofollow\">Developer Installation</a> below.</p>\n<p>For simple installation, the latest stable version is available via conda\n(preferred: <code>conda install -c conda-forge pyuvdata</code>) or pip (<code>pip install pyuvdata</code>).</p>\n<p>There are some optional dependencies that are required for specific functionality,\nwhich will not be installed automatically by conda or pip.\nSee <a href=\"#dependencies\" rel=\"nofollow\">Dependencies</a> for details on installing optional dependencies.</p>\n<p>Note that as of v2, <code>pyuvdata</code> is only supported on python 3.6+.</p>\n<h2>Dependencies</h2>\n<p>Required:</p>\n<ul>\n<li>numpy &gt;= 1.15</li>\n<li>scipy</li>\n<li>astropy &gt;= 3.2.3</li>\n<li>h5py</li>\n<li>setuptools_scm</li>\n</ul>\n<p>Optional:</p>\n<ul>\n<li>python-casacore (for working with CASA measurement sets)</li>\n<li>astropy-healpix (for working with beams in HEALPix formats)</li>\n<li>pyyaml (for working with settings files for CST beam files)</li>\n</ul>\n<p>The numpy and astropy versions are important, so make sure these are up to date.</p>\n<p>We suggest using conda to install all the dependencies. If you want to install\npython-casacore and astropy-healpix, you'll need to add conda-forge as a channel\n(<code>conda config --add channels conda-forge</code>).</p>\n<p>If you do not want to use conda, the packages are also available on PyPI\n(python-casacore may require more effort, see details for that package below).\nYou can install the optional dependencies via pip by specifying an option\nwhen you install pyuvdata, as in <code>pip install pyuvdata[healpix]</code>\nwhich will install all the required packages for using the HEALPix functionality\nin pyuvdata. The options that can be passed in this way are:\n[<code>casa</code>, <code>healpix</code>, <code>cst</code>, <code>all</code>, <code>test</code>, <code>doc</code>, <code>dev</code>]. The first three (<code>casa</code>, <code>healpix</code>, <code>cst</code>)\nenable various specific functionality while <code>all</code> will install all optional\ndependencies. The last three (<code>test</code>, <code>doc</code>, <code>dev</code>) may be useful for developers\nof pyuvdata.</p>\n<h3>Installing python-casacore</h3>\n<p>python-casacore requires the casacore c++ libraries. It can be installed easily\nusing conda (<code>python-casacore</code> on conda-forge).</p>\n<p>If you do not want to use conda, the casacore c++ libraries are available for\nubuntu through the <a href=\"http://kernsuite.info/\" rel=\"nofollow\">kern suite</a>. On OSX, casacore is\navailable through the <a href=\"https://github.com/ska-sa/homebrew-tap\" rel=\"nofollow\">ska-sa brew tap</a>.\nThe python-casacore library (with manual install instructions) is available at\n<a href=\"https://github.com/casacore/python-casacore\" rel=\"nofollow\">https://github.com/casacore/python-casacore</a></p>\n<h2>Developer Installation</h2>\n<p>Clone the repository using\n<code>git clone https://github.com/RadioAstronomySoftwareGroup/pyuvdata.git</code></p>\n<p>Navigate into the pyuvdata directory and run <code>pip install .</code>\n(note that <code>python setup.py install</code> does not work).\nNote that this will attempt to automatically install any missing dependencies.\nIf you use anaconda or another package manager you might prefer to first install\nthe dependencies as described in <a href=\"#dependencies\" rel=\"nofollow\">Dependencies</a>.</p>\n<p>To install without dependencies, run <code>pip install --no-deps</code></p>\n<p>To compile the binary extension modules such that you can successfully run\n<code>import pyuvdata</code> from the top-level directory of your Git checkout, run:\n<code>python setup.py build_ext --inplace</code></p>\n<p>If you want to do development on pyuvdata, in addition to the other dependencies\nyou will need the following packages:</p>\n<ul>\n<li>pytest</li>\n<li>pytest-cases &gt;= 1.12.1</li>\n<li>pytest-xdist</li>\n<li>pytest-cov</li>\n<li>cython   (This is necessary for coverage reporting of cython extensions)</li>\n<li>coverage</li>\n<li>pre-commit</li>\n<li>sphinx</li>\n<li>pypandoc</li>\n</ul>\n<p>One way to ensure you have all the needed packages is to use the included <code>environment.yaml</code> file to create a new environment that will\ncontain all the optional dependencies along with dependencies required for\ntesting and development (<code>conda env create -f environment.yml</code>). Alternatively, you can specify <code>test</code>, <code>doc</code>, or <code>dev</code> when installing pyuvdata (as in <code>pip install pyuvdata[dev]</code>) to install the packages needed for testing (including coverage and\nlinting) and documentation development; <code>dev</code> includes everything in <code>test</code> and <code>doc</code>.</p>\n<p>To use pre-commit to prevent committing code that does not follow our style, you'll need to run <code>pre-commit install</code> in the top level <code>pyuvdata</code> directory.</p>\n<h2>Tests</h2>\n<p>Uses the <code>pytest</code> package to execute test suite.\nFrom the source pyuvdata directory run <code>pytest</code> or <code>python -m pytest</code>.</p>\n<p>Testing of <code>UVFlag</code> module requires the <code>pytest-cases</code> plug-in.</p>\n<h1>API</h1>\n<p>The primary interface to data from python is via the UVData object. It provides\nimport functionality from all supported file formats (UVFITS, Miriad, UVH5, FHD,\nCASA measurement sets) and export to UVFITS, Miriad, and UVH5 formats and can\nbe interacted with directly. Similarly, the primary calibration, beam, and flag\ninterfaces are via the UVCal, UVBeam, and UVflag objects. The attributes of the UVData,\nUVCal, UVBeam, and UVFlag objects are described in the uvdata_parameters, uvcal_parameters,\nuvbeam_parameters and uvflag_parameters descriptions at <a href=\"https://pyuvdata.readthedocs.io\" rel=\"nofollow\">https://pyuvdata.readthedocs.io</a> or\n<a href=\"https://github.com/RadioAstronomySoftwareGroup/pyuvdata/blob/master/docs\" rel=\"nofollow\">here</a>.</p>\n<h1>Maintainers</h1>\n<p>pyuvdata is maintained by the RASG Managers, which currently include:</p>\n<ul>\n<li>Adam Beardsley (Arizona State University)</li>\n<li>Bryna Hazelton (University of Washington)</li>\n<li>Daniel Jacobs (Arizona State University)</li>\n<li>Paul La Plante (University of California, Berkeley)</li>\n<li>Jonathan Pober (Brown University)</li>\n</ul>\n<p>Please use the channels discussed in the <a href=\".github/CONTRIBUTING.md\" rel=\"nofollow\">guide on contributing</a>\nfor code-related discussions. You can contact us privately if needed at\n<a href=\"mailto:rasgmanagers@gmail.com\">rasgmanagers@gmail.com</a>.</p>\n\n          </div>"}, "last_serial": 7131820, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "d3db15ac182fd6668f63573016421dcb", "sha256": "37ad732e990d2a9e98e98a6bffa5c0093ea1a8771234dc7a09da4452ec759686"}, "downloads": -1, "filename": "pyuvdata-1.0.tar.gz", "has_sig": false, "md5_digest": "d3db15ac182fd6668f63573016421dcb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31646, "upload_time": "2017-02-16T00:03:47", "upload_time_iso_8601": "2017-02-16T00:03:47.492782Z", "url": "https://files.pythonhosted.org/packages/2e/57/e5c3ee14d74df78c37b588e7cdd9d4cf1e4b87300026fc6e1f762933d76a/pyuvdata-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "ce30f5dfb050667b37f40eba536ad856", "sha256": "1eeed7763c1c1705dae06301e45b4259fb2a1f290edf39e07378fa1902b289c7"}, "downloads": -1, "filename": "pyuvdata-1.0.1.tar.gz", "has_sig": false, "md5_digest": "ce30f5dfb050667b37f40eba536ad856", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12698159, "upload_time": "2017-02-16T01:50:47", "upload_time_iso_8601": "2017-02-16T01:50:47.139846Z", "url": "https://files.pythonhosted.org/packages/63/89/ac36b97b83f17b2f2a829a776aad8ec6a5c512b79e8d7f3c75bd69125ca0/pyuvdata-1.0.1.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "594501f4201371e61e236188e691fe76", "sha256": "ebf41feec153bf50036ba45e2188a56b2f30fd7acba514ad4918aea86b8ea7c7"}, "downloads": -1, "filename": "pyuvdata-1.1.tar.gz", "has_sig": false, "md5_digest": "594501f4201371e61e236188e691fe76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13180199, "upload_time": "2017-04-14T20:27:02", "upload_time_iso_8601": "2017-04-14T20:27:02.550448Z", "url": "https://files.pythonhosted.org/packages/c4/fd/de28dcd16baa371c5cb8166a5cee8f42cc16c4eefc95d6e5a2d1a84053b6/pyuvdata-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "86f91cf7be20ed4e57969b28f98b3742", "sha256": "145e1c9a55c67ffc168bcd57632af87076b7037ca590a9dd5f0103077794d3dc"}, "downloads": -1, "filename": "pyuvdata-1.2.tar.gz", "has_sig": false, "md5_digest": "86f91cf7be20ed4e57969b28f98b3742", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46329794, "upload_time": "2017-11-08T19:46:30", "upload_time_iso_8601": "2017-11-08T19:46:30.230192Z", "url": "https://files.pythonhosted.org/packages/43/09/8ba75939451ea10ee944a2f7f153046cf0dce6573163e029d569028ad9e9/pyuvdata-1.2.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "6aec78a14b16671196b286d14089cb02", "sha256": "8ac8cc6467ff1d73814418bd699dad28fd9f278908f75ea038f20f7821e1b1b5"}, "downloads": -1, "filename": "pyuvdata-1.2.1.tar.gz", "has_sig": false, "md5_digest": "6aec78a14b16671196b286d14089cb02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46330389, "upload_time": "2017-11-09T19:26:09", "upload_time_iso_8601": "2017-11-09T19:26:09.995313Z", "url": "https://files.pythonhosted.org/packages/31/f0/c4d5fc48c76b20a3b868f96c24ce5ceecfe5b17f92556e5dcf3164bd6574/pyuvdata-1.2.1.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "77536f30a2b267354da4fef97196eeb3", "sha256": "e7a103b6fcc36ee56b658c1497b9b62446babcab4730993c99064dcc654451f5"}, "downloads": -1, "filename": "pyuvdata-1.3.tar.gz", "has_sig": false, "md5_digest": "77536f30a2b267354da4fef97196eeb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62909208, "upload_time": "2018-07-24T18:27:54", "upload_time_iso_8601": "2018-07-24T18:27:54.304629Z", "url": "https://files.pythonhosted.org/packages/50/b3/2f3c21318bc248e7b5ef4bc79df424b7ab6974c451e297b68546f7e9dd50/pyuvdata-1.3.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "4b77c524467aea22933044c9e2b3c4ae", "sha256": "71f2b56b7301d2158a31231673001de69406c8014996400093dcae45b3ef574f"}, "downloads": -1, "filename": "pyuvdata-1.3.1.tar.gz", "has_sig": false, "md5_digest": "4b77c524467aea22933044c9e2b3c4ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57583100, "upload_time": "2018-07-25T16:58:52", "upload_time_iso_8601": "2018-07-25T16:58:52.168847Z", "url": "https://files.pythonhosted.org/packages/85/89/719b95566f472771cc35167caf5b9604cdb6cc177c3f9523c57165b9480e/pyuvdata-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "0c1bd996bb39988785d12bd1ed9d32c4", "sha256": "ecde02a54c72f185f29ba43b4bec3fe515d6280c62628978945756f2bced62f9"}, "downloads": -1, "filename": "pyuvdata-1.3.2.tar.gz", "has_sig": false, "md5_digest": "0c1bd996bb39988785d12bd1ed9d32c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56443669, "upload_time": "2018-09-27T22:19:28", "upload_time_iso_8601": "2018-09-27T22:19:28.475610Z", "url": "https://files.pythonhosted.org/packages/a7/15/4f78091b99fc701d32e92f84506d98efb459a07d22e1c8e78587ca2eb9b9/pyuvdata-1.3.2.tar.gz", "yanked": false}], "1.3.3": [{"comment_text": "", "digests": {"md5": "b2e3d56c32e962ae9d9a551a08257839", "sha256": "22643534fcc9c0adfe8c32a1b0d4c49bb6e2fa6a8729d667da84993f3f28c98d"}, "downloads": -1, "filename": "pyuvdata-1.3.3.tar.gz", "has_sig": false, "md5_digest": "b2e3d56c32e962ae9d9a551a08257839", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59287052, "upload_time": "2018-11-01T19:10:02", "upload_time_iso_8601": "2018-11-01T19:10:02.769531Z", "url": "https://files.pythonhosted.org/packages/a6/95/e588ec52c5ba28e314465ec93acb7fad7c83d49e78c62b2cd441fbea919d/pyuvdata-1.3.3.tar.gz", "yanked": false}], "1.3.4": [{"comment_text": "", "digests": {"md5": "ae5cd7629e19e177d3ec9a8f56c1fdab", "sha256": "d23067d71c19d73ace650f7f11c8ed5d0521098ef861c7357406049c4c8b9b1b"}, "downloads": -1, "filename": "pyuvdata-1.3.4.tar.gz", "has_sig": false, "md5_digest": "ae5cd7629e19e177d3ec9a8f56c1fdab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48075525, "upload_time": "2018-12-19T23:56:25", "upload_time_iso_8601": "2018-12-19T23:56:25.716416Z", "url": "https://files.pythonhosted.org/packages/95/28/bd67c8d0115b887daa7ce0d684a58ee60a70a229b43059e2d87e837f664a/pyuvdata-1.3.4.tar.gz", "yanked": false}], "1.3.5": [{"comment_text": "", "digests": {"md5": "58db5738a308fc705b4eb1a89fc4e46e", "sha256": "62e5cf5ec202e46a38f43a695075d72560ec9a07ec93497a488c538b309b3386"}, "downloads": -1, "filename": "pyuvdata-1.3.5.tar.gz", "has_sig": false, "md5_digest": "58db5738a308fc705b4eb1a89fc4e46e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42431596, "upload_time": "2018-12-21T20:19:12", "upload_time_iso_8601": "2018-12-21T20:19:12.492322Z", "url": "https://files.pythonhosted.org/packages/7f/41/3597dd80cf404dc1449852e2235c44837ceabdfff98e3e968c33bb814877/pyuvdata-1.3.5.tar.gz", "yanked": false}], "1.3.6": [{"comment_text": "", "digests": {"md5": "34d0061e12840f202c24212ff57d2854", "sha256": "5492850440108883fa7a8e83172dac2b8378cb0963e862ee62f80627ef3754e5"}, "downloads": -1, "filename": "pyuvdata-1.3.6.tar.gz", "has_sig": false, "md5_digest": "34d0061e12840f202c24212ff57d2854", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43316384, "upload_time": "2019-02-17T06:46:53", "upload_time_iso_8601": "2019-02-17T06:46:53.391822Z", "url": "https://files.pythonhosted.org/packages/d9/23/af9452ff68dcab8fb419392b844438eb3305971d4a9de2b223b1054ef608/pyuvdata-1.3.6.tar.gz", "yanked": false}], "1.3.7": [{"comment_text": "", "digests": {"md5": "143361bdea942c276b76b2c06874c589", "sha256": "6c0d5ea019b719a94db4e8700d4973a3038d33cf6179698d045d3ec01c7a0a26"}, "downloads": -1, "filename": "pyuvdata-1.3.7.tar.gz", "has_sig": false, "md5_digest": "143361bdea942c276b76b2c06874c589", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45128745, "upload_time": "2019-04-02T22:37:11", "upload_time_iso_8601": "2019-04-02T22:37:11.930583Z", "url": "https://files.pythonhosted.org/packages/db/25/343cd363d69bce554ff565e241ec767b955c7848414bdca283a502bf4836/pyuvdata-1.3.7.tar.gz", "yanked": false}], "1.3.8": [{"comment_text": "", "digests": {"md5": "1830fd7c05aa07ccb868daae5d21c39d", "sha256": "ec3aa1b9ce35666c12415529ce7a010511427e43d77e848a215cc6603afab7b8"}, "downloads": -1, "filename": "pyuvdata-1.3.8.tar.gz", "has_sig": false, "md5_digest": "1830fd7c05aa07ccb868daae5d21c39d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49994054, "upload_time": "2019-05-01T23:38:21", "upload_time_iso_8601": "2019-05-01T23:38:21.543687Z", "url": "https://files.pythonhosted.org/packages/79/b2/b667bcd18e3f46d004cbd8b848a2e7c89807bb11dfeed91c64d74a15129b/pyuvdata-1.3.8.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "c274a5d5f596f4b5c9e8e778f208f94d", "sha256": "0e9c6874a9d944caeb1a9adcfab86c1639ab821525dbb4e2ed35ab46a7c4dfb2"}, "downloads": -1, "filename": "pyuvdata-1.4.0.tar.gz", "has_sig": false, "md5_digest": "c274a5d5f596f4b5c9e8e778f208f94d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47989273, "upload_time": "2019-06-05T20:53:19", "upload_time_iso_8601": "2019-06-05T20:53:19.398174Z", "url": "https://files.pythonhosted.org/packages/db/a8/7e50ba8587204cc8a81e6e54c7d8ee80f776a9105a1200c81a98634ca719/pyuvdata-1.4.0.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "5499af208b1bfaf79dcf4d5ee005618a", "sha256": "d33df2c98fb3e542f3ec292eb978d0f1bc071413a535197c87852e4c7b2052a7"}, "downloads": -1, "filename": "pyuvdata-1.4.1.tar.gz", "has_sig": false, "md5_digest": "5499af208b1bfaf79dcf4d5ee005618a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48125817, "upload_time": "2019-08-02T17:09:13", "upload_time_iso_8601": "2019-08-02T17:09:13.273687Z", "url": "https://files.pythonhosted.org/packages/57/b8/c7530442d40431f25a23309d6282aa98f18d1a130673e9e869c9aae00567/pyuvdata-1.4.1.tar.gz", "yanked": false}], "1.4.2": [{"comment_text": "", "digests": {"md5": "19d303b4f90ba369f69335db5c8127a7", "sha256": "cfbfa155ad396fe40f07915213081b9593463ad947f6c37a486b9c06a9ec8175"}, "downloads": -1, "filename": "pyuvdata-1.4.2.tar.gz", "has_sig": false, "md5_digest": "19d303b4f90ba369f69335db5c8127a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48230759, "upload_time": "2019-10-14T21:36:07", "upload_time_iso_8601": "2019-10-14T21:36:07.460697Z", "url": "https://files.pythonhosted.org/packages/c3/ca/9cd12b6cae632b388e43dbadcea8c7cd7dd5c41dad31716f553d08cd1efa/pyuvdata-1.4.2.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "be57903854ee1a222c98304ebcbed260", "sha256": "12e7734799e55b05712ad8d3aa38f5cc75b4a17feb417133bd3fd0f252996df5"}, "downloads": -1, "filename": "pyuvdata-1.5.0.tar.gz", "has_sig": false, "md5_digest": "be57903854ee1a222c98304ebcbed260", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51072217, "upload_time": "2020-01-15T21:47:12", "upload_time_iso_8601": "2020-01-15T21:47:12.056988Z", "url": "https://files.pythonhosted.org/packages/fb/73/a02a9df1f750764d413af434e13b3414002ccec4d7e45aff6325dc78b114/pyuvdata-1.5.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "9c7de8af2ee37394bcfd02348f35183f", "sha256": "e7f806b7c4d3b883c45f737995f36bd6f1aa51f3ebbfd88c18ca736a96cdaf49"}, "downloads": -1, "filename": "pyuvdata-2.0.0.tar.gz", "has_sig": false, "md5_digest": "9c7de8af2ee37394bcfd02348f35183f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50341301, "upload_time": "2020-02-13T08:39:02", "upload_time_iso_8601": "2020-02-13T08:39:02.862008Z", "url": "https://files.pythonhosted.org/packages/68/68/bb6fb1936c11efdb4310e0f1b87936115a5171fa4256d26a66ffe97e5166/pyuvdata-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "8e399f93fc3d7688fcaf554e3eb42d76", "sha256": "2d26511b6f2aeab49ee2c15478ca2970d497b152f400305f514b970553d3ade0"}, "downloads": -1, "filename": "pyuvdata-2.0.1.tar.gz", "has_sig": false, "md5_digest": "8e399f93fc3d7688fcaf554e3eb42d76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50927725, "upload_time": "2020-03-24T23:56:46", "upload_time_iso_8601": "2020-03-24T23:56:46.539198Z", "url": "https://files.pythonhosted.org/packages/23/af/79e4279e20089cf870efd46c23dd75ab9891c9adba40e4ae43abec3e1d4c/pyuvdata-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "d1b67fbc4fad2fc40b3c8c62ad40701b", "sha256": "084a1dc3c383f7663a2be169c70a7587a071310f5594d95f988b501eb82159e8"}, "downloads": -1, "filename": "pyuvdata-2.0.2.tar.gz", "has_sig": false, "md5_digest": "d1b67fbc4fad2fc40b3c8c62ad40701b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51087465, "upload_time": "2020-04-29T20:19:56", "upload_time_iso_8601": "2020-04-29T20:19:56.842403Z", "url": "https://files.pythonhosted.org/packages/00/a4/77956f87dbdb369cfbfd8777322cb815e80358f42c534b1c6f5f24357d33/pyuvdata-2.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d1b67fbc4fad2fc40b3c8c62ad40701b", "sha256": "084a1dc3c383f7663a2be169c70a7587a071310f5594d95f988b501eb82159e8"}, "downloads": -1, "filename": "pyuvdata-2.0.2.tar.gz", "has_sig": false, "md5_digest": "d1b67fbc4fad2fc40b3c8c62ad40701b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51087465, "upload_time": "2020-04-29T20:19:56", "upload_time_iso_8601": "2020-04-29T20:19:56.842403Z", "url": "https://files.pythonhosted.org/packages/00/a4/77956f87dbdb369cfbfd8777322cb815e80358f42c534b1c6f5f24357d33/pyuvdata-2.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:18 2020"}