{"info": {"author": "Jason Duncan", "author_email": "jason.matthew.duncan@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3.7"], "description": "ClassicUPS: A Useful UPS Library\n================================\n\nClassicUPS is an Apache2 Licensed wrapper around the UPS API for creating\nshipping labels and fetching a package's tracking status. This library by no\nmeans encompasses all of the UPS functionality, but it is suitable for some of\nthe most common shipping-related common tasks.\n\n\nFeatures\n--------\n\n- Track delivery status of tracking number\n\n- Create prepaid shipping labels in GIF or EPL (thermal printer) format\n\n\nInstallation\n------------\n\nInstallation is easy:\n\n.. code-block:: bash\n\n    $ pip install ClassicUPS\n\nClassicUPS depends on libxml2 and libxslt. On Ubuntu, the packages are\n``libxml2-dev`` and ``libxslt-dev``.\n\nQuickstart\n----------\n\nCreate a UPSConnection object, which gives you access to common UPS methods:\n\n.. code-block:: python\n\n    from ClassicUPS import UPSConnection\n\n    # Credentials obtained from the UPS website\n    ups = UPSConnection(license_number,\n                        user_id,\n                        password,\n                        shipper_number,  # Optional if you are not creating a shipment\n                        debug=True)      # Use the UPS sandbox API rather than prod\n\nCheck the delivery date of a package.\n\n.. code-block:: python\n\n    tracking = ups.tracking_info('1Z12345E0291980793')\n    print tracking.in_transit\n    print tracking.delivered\n\nCreate shipment and save shipping label as GIF file:\n\n.. code-block:: python\n\n    from_addr = {\n        'name': 'Google',\n        'address1': '1600 Amphitheatre Parkway',\n        'city': 'Mountain View',\n        'state': 'CA',\n        'country': 'US',\n        'postal_code': '94043',\n        'phone': '6502530000'\n    }\n    to_addr = {\n        'name': 'President',\n        'address1': '1600 Pennsylvania Ave',\n        'city': 'Washington',\n        'state': 'DC',\n        'country': 'US',\n        'postal_code': '20500',\n        'phone': '2024561111'\n    }\n    dimensions = {  # in inches\n        'length': 1,\n        'width': 4,\n        'height': 9\n    }\n    weight = 10  # in lbs\n\n    # Create the shipment. Use file_format='EPL' for a thermal-printer-compatible EPL\n    shipment = ups.create_shipment(from_addr, to_addr, dimensions, weight,\n                                   file_format='GIF')\n\n    # Print information about our shipment\n    print shipment.cost\n    print shipment.tracking_number\n\n    # Save the shipping label to print, email, etc\n    shipment.save_label(open('label.gif', 'wb'))", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jduncan8142/ClassicUPS3", "keywords": "UPS", "license": "", "maintainer": "", "maintainer_email": "", "name": "ClassicUPS3", "package_url": "https://pypi.org/project/ClassicUPS3/", "platform": "", "project_url": "https://pypi.org/project/ClassicUPS3/", "project_urls": {"Homepage": "https://github.com/jduncan8142/ClassicUPS3"}, "release_url": "https://pypi.org/project/ClassicUPS3/0.1.8/", "requires_dist": null, "requires_python": "", "summary": "Usable UPS Integration in Python 3", "version": "0.1.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>ClassicUPS is an Apache2 Licensed wrapper around the UPS API for creating\nshipping labels and fetching a package\u2019s tracking status. This library by no\nmeans encompasses all of the UPS functionality, but it is suitable for some of\nthe most common shipping-related common tasks.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Track delivery status of tracking number</li>\n<li>Create prepaid shipping labels in GIF or EPL (thermal printer) format</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Installation is easy:</p>\n<pre>$ pip install ClassicUPS\n</pre>\n<p>ClassicUPS depends on libxml2 and libxslt. On Ubuntu, the packages are\n<tt><span class=\"pre\">libxml2-dev</span></tt> and <tt><span class=\"pre\">libxslt-dev</span></tt>.</p>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>Create a UPSConnection object, which gives you access to common UPS methods:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ClassicUPS</span> <span class=\"kn\">import</span> <span class=\"n\">UPSConnection</span>\n\n<span class=\"c1\"># Credentials obtained from the UPS website</span>\n<span class=\"n\">ups</span> <span class=\"o\">=</span> <span class=\"n\">UPSConnection</span><span class=\"p\">(</span><span class=\"n\">license_number</span><span class=\"p\">,</span>\n                    <span class=\"n\">user_id</span><span class=\"p\">,</span>\n                    <span class=\"n\">password</span><span class=\"p\">,</span>\n                    <span class=\"n\">shipper_number</span><span class=\"p\">,</span>  <span class=\"c1\"># Optional if you are not creating a shipment</span>\n                    <span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>      <span class=\"c1\"># Use the UPS sandbox API rather than prod</span>\n</pre>\n<p>Check the delivery date of a package.</p>\n<pre><span class=\"n\">tracking</span> <span class=\"o\">=</span> <span class=\"n\">ups</span><span class=\"o\">.</span><span class=\"n\">tracking_info</span><span class=\"p\">(</span><span class=\"s1\">'1Z12345E0291980793'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"n\">tracking</span><span class=\"o\">.</span><span class=\"n\">in_transit</span>\n<span class=\"nb\">print</span> <span class=\"n\">tracking</span><span class=\"o\">.</span><span class=\"n\">delivered</span>\n</pre>\n<p>Create shipment and save shipping label as GIF file:</p>\n<pre><span class=\"n\">from_addr</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Google'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'address1'</span><span class=\"p\">:</span> <span class=\"s1\">'1600 Amphitheatre Parkway'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Mountain View'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'state'</span><span class=\"p\">:</span> <span class=\"s1\">'CA'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'country'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'postal_code'</span><span class=\"p\">:</span> <span class=\"s1\">'94043'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'phone'</span><span class=\"p\">:</span> <span class=\"s1\">'6502530000'</span>\n<span class=\"p\">}</span>\n<span class=\"n\">to_addr</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'President'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'address1'</span><span class=\"p\">:</span> <span class=\"s1\">'1600 Pennsylvania Ave'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Washington'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'state'</span><span class=\"p\">:</span> <span class=\"s1\">'DC'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'country'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'postal_code'</span><span class=\"p\">:</span> <span class=\"s1\">'20500'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'phone'</span><span class=\"p\">:</span> <span class=\"s1\">'2024561111'</span>\n<span class=\"p\">}</span>\n<span class=\"n\">dimensions</span> <span class=\"o\">=</span> <span class=\"p\">{</span>  <span class=\"c1\"># in inches</span>\n    <span class=\"s1\">'length'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s1\">'width'</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span>\n    <span class=\"s1\">'height'</span><span class=\"p\">:</span> <span class=\"mi\">9</span>\n<span class=\"p\">}</span>\n<span class=\"n\">weight</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>  <span class=\"c1\"># in lbs</span>\n\n<span class=\"c1\"># Create the shipment. Use file_format='EPL' for a thermal-printer-compatible EPL</span>\n<span class=\"n\">shipment</span> <span class=\"o\">=</span> <span class=\"n\">ups</span><span class=\"o\">.</span><span class=\"n\">create_shipment</span><span class=\"p\">(</span><span class=\"n\">from_addr</span><span class=\"p\">,</span> <span class=\"n\">to_addr</span><span class=\"p\">,</span> <span class=\"n\">dimensions</span><span class=\"p\">,</span> <span class=\"n\">weight</span><span class=\"p\">,</span>\n                               <span class=\"n\">file_format</span><span class=\"o\">=</span><span class=\"s1\">'GIF'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Print information about our shipment</span>\n<span class=\"nb\">print</span> <span class=\"n\">shipment</span><span class=\"o\">.</span><span class=\"n\">cost</span>\n<span class=\"nb\">print</span> <span class=\"n\">shipment</span><span class=\"o\">.</span><span class=\"n\">tracking_number</span>\n\n<span class=\"c1\"># Save the shipping label to print, email, etc</span>\n<span class=\"n\">shipment</span><span class=\"o\">.</span><span class=\"n\">save_label</span><span class=\"p\">(</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'label.gif'</span><span class=\"p\">,</span> <span class=\"s1\">'wb'</span><span class=\"p\">))</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6390574, "releases": {"0.1.8": [{"comment_text": "", "digests": {"md5": "28d4a4235b0c8f04498282820ad20931", "sha256": "1f13065d2951b1d6a707f001e379ac8cbfd91a9d42c525a071de90cfc9ecb94b"}, "downloads": -1, "filename": "ClassicUPS3-0.1.8.tar.gz", "has_sig": false, "md5_digest": "28d4a4235b0c8f04498282820ad20931", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17629, "upload_time": "2020-01-03T11:24:49", "upload_time_iso_8601": "2020-01-03T11:24:49.517073Z", "url": "https://files.pythonhosted.org/packages/97/e8/4f291f964670b51f8e7bb09f8562504bbded05cd89b82b16405151305ca1/ClassicUPS3-0.1.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "28d4a4235b0c8f04498282820ad20931", "sha256": "1f13065d2951b1d6a707f001e379ac8cbfd91a9d42c525a071de90cfc9ecb94b"}, "downloads": -1, "filename": "ClassicUPS3-0.1.8.tar.gz", "has_sig": false, "md5_digest": "28d4a4235b0c8f04498282820ad20931", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17629, "upload_time": "2020-01-03T11:24:49", "upload_time_iso_8601": "2020-01-03T11:24:49.517073Z", "url": "https://files.pythonhosted.org/packages/97/e8/4f291f964670b51f8e7bb09f8562504bbded05cd89b82b16405151305ca1/ClassicUPS3-0.1.8.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:09 2020"}