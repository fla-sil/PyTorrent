{"info": {"author": "Harold Selvaggi", "author_email": "harold.selvaggi@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "# Introduction\n\nI find myself writting the same code over again every time I want to run some experiment or try\nsome new IA stuff most of the time loosing focus on the important thing I'm trying to learn\nor understand. In order to avoid this pattern I tried to write a small framework that help me\nhave those standard task already solved and at the same time helps me structure the code\nin a readable and maintainable way.\n\n# Installation\n\nThis project has been developed with python 3.6. \n\n```bash\npip3 install ialab-core\n```\n\n# Architectural considerations\n\nI will try to explain they why by means of an example in computer vision. \nMost of the time I try some experiment it happens to be as follows:\n\n* I need to read video either from disk or from my notebook camera.\n* The image needs to be scaled for performance reasons\n* I need to run some sort of algorithm on the image (this may imply one or a secuence of algorithms)\n* I want to display the result or optionally display it and send the result to an image or video file\n\nLet's take those steps into a more abstract representation\n\n\nRead Image -> Scale Image -> Face Detection (to say something specific) -> Display Result\n-> Send to disk\n\nThis looks very similar to a pipes and filters architecture where I can send the output \nfor some step to one or more processors. Nothing new here this is just a graph structure\nas it is happening on most new technologies stacks that try to help us building\nbetter and more maintainable software.\n\nEach processing node in this architecture will be called a Processor. \nThere are special types of Processors which are the input and output ones. The main\ndifference between them is that input processors can run and control the execution (this will\nchange in future versions where a separate executor will appear) and output processor don't try\nto offer their output for further processing. On the other hand a regular processor will do\nsomething with the input data and will offer this data for any other processor that\nis interested in doing so.\n\n## Example\n\nAs an example let's thing you have a folder with images where each image contain somewhere\nin it the face of a person and the file is named as the person. You want to do face detection\nusing a siamesse network but first you want to extract the faces from the images in order to\nreduce the memory footprint, loading time and the size of the application you deliver\nto your customer.\n\nTo do this you can write down the followin short application using our library.\n\n```python\ngraph = FaceRecognition(original_pictures_path, [\n        FaceExtractor([\n            ImageWriter(face_picture_path)]\n        )\n    ])\n\nvideo = ImageInput(original_pictures_path, (320, 240), [graph])\nvideo.run()\n```\n\n## Running the examples\n\n### YoloV3\n\nTo run YoloV3 you need to download the configuration files and place them into \n./modes/yolov3. There are 3 files that need to be downloaded yolov3.cfg, yolov3.weights\nand coco.names. These files can be downloaded from https://pjreddie.com/darknet/yolo/.\n\nAfter downloading just execute python3 obj_recog.py\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hselvaggi/ialab-core", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ialab-core", "package_url": "https://pypi.org/project/ialab-core/", "platform": "", "project_url": "https://pypi.org/project/ialab-core/", "project_urls": {"Homepage": "https://github.com/hselvaggi/ialab-core"}, "release_url": "https://pypi.org/project/ialab-core/0.2.5/", "requires_dist": ["numpy", "face-recognition", "opencv-python"], "requires_python": "", "summary": "A utility to help you in your IA projects", "version": "0.2.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Introduction</h1>\n<p>I find myself writting the same code over again every time I want to run some experiment or try\nsome new IA stuff most of the time loosing focus on the important thing I'm trying to learn\nor understand. In order to avoid this pattern I tried to write a small framework that help me\nhave those standard task already solved and at the same time helps me structure the code\nin a readable and maintainable way.</p>\n<h1>Installation</h1>\n<p>This project has been developed with python 3.6.</p>\n<pre>pip3 install ialab-core\n</pre>\n<h1>Architectural considerations</h1>\n<p>I will try to explain they why by means of an example in computer vision.\nMost of the time I try some experiment it happens to be as follows:</p>\n<ul>\n<li>I need to read video either from disk or from my notebook camera.</li>\n<li>The image needs to be scaled for performance reasons</li>\n<li>I need to run some sort of algorithm on the image (this may imply one or a secuence of algorithms)</li>\n<li>I want to display the result or optionally display it and send the result to an image or video file</li>\n</ul>\n<p>Let's take those steps into a more abstract representation</p>\n<p>Read Image -&gt; Scale Image -&gt; Face Detection (to say something specific) -&gt; Display Result\n-&gt; Send to disk</p>\n<p>This looks very similar to a pipes and filters architecture where I can send the output\nfor some step to one or more processors. Nothing new here this is just a graph structure\nas it is happening on most new technologies stacks that try to help us building\nbetter and more maintainable software.</p>\n<p>Each processing node in this architecture will be called a Processor.\nThere are special types of Processors which are the input and output ones. The main\ndifference between them is that input processors can run and control the execution (this will\nchange in future versions where a separate executor will appear) and output processor don't try\nto offer their output for further processing. On the other hand a regular processor will do\nsomething with the input data and will offer this data for any other processor that\nis interested in doing so.</p>\n<h2>Example</h2>\n<p>As an example let's thing you have a folder with images where each image contain somewhere\nin it the face of a person and the file is named as the person. You want to do face detection\nusing a siamesse network but first you want to extract the faces from the images in order to\nreduce the memory footprint, loading time and the size of the application you deliver\nto your customer.</p>\n<p>To do this you can write down the followin short application using our library.</p>\n<pre><span class=\"n\">graph</span> <span class=\"o\">=</span> <span class=\"n\">FaceRecognition</span><span class=\"p\">(</span><span class=\"n\">original_pictures_path</span><span class=\"p\">,</span> <span class=\"p\">[</span>\n        <span class=\"n\">FaceExtractor</span><span class=\"p\">([</span>\n            <span class=\"n\">ImageWriter</span><span class=\"p\">(</span><span class=\"n\">face_picture_path</span><span class=\"p\">)]</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">])</span>\n\n<span class=\"n\">video</span> <span class=\"o\">=</span> <span class=\"n\">ImageInput</span><span class=\"p\">(</span><span class=\"n\">original_pictures_path</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">320</span><span class=\"p\">,</span> <span class=\"mi\">240</span><span class=\"p\">),</span> <span class=\"p\">[</span><span class=\"n\">graph</span><span class=\"p\">])</span>\n<span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<h2>Running the examples</h2>\n<h3>YoloV3</h3>\n<p>To run YoloV3 you need to download the configuration files and place them into\n./modes/yolov3. There are 3 files that need to be downloaded yolov3.cfg, yolov3.weights\nand coco.names. These files can be downloaded from <a href=\"https://pjreddie.com/darknet/yolo/\" rel=\"nofollow\">https://pjreddie.com/darknet/yolo/</a>.</p>\n<p>After downloading just execute python3 obj_recog.py</p>\n\n          </div>"}, "last_serial": 6573755, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "3a6b93f20058127377c315fb35688fcf", "sha256": "2c32339a65b016595c681c29041c1271c2fc83fa7b90a495de7bf3f6f16cf823"}, "downloads": -1, "filename": "ialab_core-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3a6b93f20058127377c315fb35688fcf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6923, "upload_time": "2020-01-26T23:03:17", "upload_time_iso_8601": "2020-01-26T23:03:17.900861Z", "url": "https://files.pythonhosted.org/packages/ee/d3/67b361e7eaaec0dd84bfecf0be8a4997fcf13080f54d6a7bd9f5111b615d/ialab_core-0.1.1-py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "0fad8ed6c968534fcd0f9c6f8e953725", "sha256": "7902670d161d5ffef843eccd9709b2fc190677792035012fcc0a56af99b10dd1"}, "downloads": -1, "filename": "ialab_core-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0fad8ed6c968534fcd0f9c6f8e953725", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8822, "upload_time": "2020-02-02T17:46:55", "upload_time_iso_8601": "2020-02-02T17:46:55.287198Z", "url": "https://files.pythonhosted.org/packages/62/be/22bd73950791a0fa9f68974ee502b9ec5791019cc4601dabf48677d74546/ialab_core-0.2.0-py3-none-any.whl", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "8a89b7451048d4b5bf999e83a7e42a9f", "sha256": "f398017b90bbdad1d650dda78c61c02cc1e75387e58dc8b94bc502b2209ade63"}, "downloads": -1, "filename": "ialab_core-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8a89b7451048d4b5bf999e83a7e42a9f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10101, "upload_time": "2020-02-02T18:13:45", "upload_time_iso_8601": "2020-02-02T18:13:45.437804Z", "url": "https://files.pythonhosted.org/packages/04/61/384d69e6ec4d4ff6abbb491be628c62b8c439fe33aa98e022e73e83fed31/ialab_core-0.2.1-py3-none-any.whl", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "cc5618dc3de3f19c0dd79e3f7c423e51", "sha256": "ed83faaf3bc2ddfe080f838a211cb2cd0c4645c5a32a396bbee69c9cb2c322ef"}, "downloads": -1, "filename": "ialab_core-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "cc5618dc3de3f19c0dd79e3f7c423e51", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10432, "upload_time": "2020-02-04T02:13:51", "upload_time_iso_8601": "2020-02-04T02:13:51.650537Z", "url": "https://files.pythonhosted.org/packages/ab/44/869c7aa3429f1525eade820028d57fdc18bd5cdc5e33608d53dde627385d/ialab_core-0.2.3-py3-none-any.whl", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "9fccd7ef40f3b50b3d7395b3aaa28621", "sha256": "e67cf6efd3d45985dade071cc16075b5e059263a6912b1b129c36eebca106ee3"}, "downloads": -1, "filename": "ialab_core-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "9fccd7ef40f3b50b3d7395b3aaa28621", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10540, "upload_time": "2020-02-05T03:14:45", "upload_time_iso_8601": "2020-02-05T03:14:45.657386Z", "url": "https://files.pythonhosted.org/packages/de/f5/e5284f1773c7bfc0255f1c23a41e1d299d496001d6245b3125d832caee01/ialab_core-0.2.4-py3-none-any.whl", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "14407e6230be4e15fee195f05637aa8e", "sha256": "74dec77f84e70a9951eb364682f4a06d55f0cbaf1ce396ebe8bf663de7c40eae"}, "downloads": -1, "filename": "ialab_core-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "14407e6230be4e15fee195f05637aa8e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10539, "upload_time": "2020-02-05T03:18:36", "upload_time_iso_8601": "2020-02-05T03:18:36.273124Z", "url": "https://files.pythonhosted.org/packages/5d/28/b9c2874d0e77278c8d4e4fe17dfd73a0e4c989cdd8d88ae15b036ded7a97/ialab_core-0.2.5-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "14407e6230be4e15fee195f05637aa8e", "sha256": "74dec77f84e70a9951eb364682f4a06d55f0cbaf1ce396ebe8bf663de7c40eae"}, "downloads": -1, "filename": "ialab_core-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "14407e6230be4e15fee195f05637aa8e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10539, "upload_time": "2020-02-05T03:18:36", "upload_time_iso_8601": "2020-02-05T03:18:36.273124Z", "url": "https://files.pythonhosted.org/packages/5d/28/b9c2874d0e77278c8d4e4fe17dfd73a0e4c989cdd8d88ae15b036ded7a97/ialab_core-0.2.5-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:49:19 2020"}