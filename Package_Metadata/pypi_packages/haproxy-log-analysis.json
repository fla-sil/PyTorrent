{"info": {"author": "Gil Forcada", "author_email": "gil.gnome@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: System Administrators", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Internet :: Log Analysis"], "description": ".. -*- coding: utf-8 -*-\n\nHAProxy log analyzer\n====================\nThis Python package is a `HAProxy`_ log parser.\nIt analyzes HAProxy log files in multiple ways (see commands section below).\n\n.. note::\n   Currently only the `HTTP log format`_ is supported.\n\nTests and coverage\n------------------\nNo project is trustworthy if does not have tests and a decent coverage!\n\n.. image:: https://travis-ci.org/gforcada/haproxy_log_analysis.svg?branch=master\n   :target: https://travis-ci.org/gforcada/haproxy_log_analysis\n   :alt: Tests\n\n.. image:: https://coveralls.io/repos/gforcada/haproxy_log_analysis/badge.svg?branch=master\n   :target: https://coveralls.io/github/gforcada/haproxy_log_analysis\n   :alt: Coverage\n\n.. image:: https://img.shields.io/pypi/dm/haproxy_log_analysis.svg\n   :target: https://pypi.python.org/pypi/haproxy_log_analysis/\n   :alt: Downloads\n\n.. image:: https://img.shields.io/pypi/v/haproxy_log_analysis.svg\n   :target: https://pypi.python.org/pypi/haproxy_log_analysis/\n   :alt: Latest Version\n\n.. image:: https://img.shields.io/pypi/status/haproxy_log_analysis.svg\n   :target: https://pypi.python.org/pypi/haproxy_log_analysis/\n   :alt: Egg Status\n\n.. image:: https://img.shields.io/pypi/l/haproxy_log_analysis.svg\n   :target: https://pypi.python.org/pypi/haproxy_log_analysis/\n   :alt: License\n\nDocumentation\n-------------\nSee the `documentation and API`_ at ReadTheDocs_.\n\nCommand-line interface\n----------------------\nThe current ``--help`` looks like this::\n\n  usage: haproxy_log_analysis [-h] [-l LOG] [-s START] [-d DELTA] [-c COMMAND]\n                              [-f FILTER] [-n] [--list-commands]\n                              [--list-filters] [--json]\n\n  Analyze HAProxy log files and outputs statistics about it\n\n  optional arguments:\n    -h, --help            show this help message and exit\n    -l LOG, --log LOG     HAProxy log file to analyze\n    -s START, --start START\n                          Process log entries starting at this time, in HAProxy\n                          date format (e.g. 11/Dec/2013 or\n                          11/Dec/2013:19:31:41). At least provide the\n                          day/month/year. Values not specified will use their\n                          base value (e.g. 00 for hour). Use in conjunction with\n                          -d to limit the number of entries to process.\n    -d DELTA, --delta DELTA\n                          Limit the number of entries to process. Express the\n                          time delta as a number and a time unit, e.g.: 1s, 10m,\n                          3h or 4d (for 1 second, 10 minutes, 3 hours or 4\n                          days). Use in conjunction with -s to only analyze\n                          certain time delta. If no start time is given, the\n                          time on the first line will be used instead.\n    -c COMMAND, --command COMMAND\n                          List of commands, comma separated, to run on the log\n                          file. See --list-commands to get a full list of them.\n    -f FILTER, --filter FILTER\n                          List of filters to apply on the log file. Passed as\n                          comma separated and parameters within square brackets,\n                          e.g ip[192.168.1.1],ssl,path[/some/path]. See --list-\n                          filters to get a full list of them.\n    -n, --negate-filter   Make filters passed with -f work the other way around,\n                          i.e. if the ``ssl`` filter is passed instead of\n                          showing only ssl requests it will show non-ssl\n                          traffic. If the ``ip`` filter is used, then all but\n                          that ip passed to the filter will be used.\n    --list-commands       Lists all commands available.\n    --list-filters        Lists all filters available.\n    --json                Output results in json.\n    --invalid             Print the lines that could not be parsed. Be aware\n                          that mixing it with the print command will mix their\n                          output.\n\n\nCommands\n--------\n\nCommands are small purpose specific programs in themselves that report specific statistics about the log file being analyzed.\nSee them all with ``--list-commands`` or online at https://haproxy-log-analyzer.readthedocs.io/modules.html#module-haproxy.commands.\n\n- ``average_response_time``\n- ``average_waiting_time``\n- ``connection_type``\n- ``counter``\n- ``http_methods``\n- ``ip_counter``\n- ``print``\n- ``queue_peaks``\n- ``request_path_counter``\n- ``requests_per_hour``\n- ``requests_per_minute``\n- ``server_load``\n- ``slow_requests``\n- ``slow_requests_counter``\n- ``status_codes_counter``\n- ``top_ips``\n- ``top_request_paths``\n\nFilters\n-------\nFilters, contrary to commands,\nare a way to reduce the amount of log lines to be processed.\n\n.. note::\n   The ``-n`` command line argument allows to reverse filters output.\n\n   This helps when looking for specific traces, like a certain IP, a path...\n\nSee them all with ``--list-filters`` or online at https://haproxy-log-analyzer.readthedocs.io/modules.html#module-haproxy.filters.\n\n- ``backend``\n- ``frontend``\n- ``http_method``\n- ``ip``\n- ``ip_range``\n- ``path``\n- ``response_size``\n- ``server``\n- ``slow_requests``\n- ``ssl``\n- ``status_code``\n- ``status_code_family``\n- ``wait_on_queues``\n\nInstallation\n------------\nAfter installation you will have a console script `haproxy_log_analysis`::\n\n    $ pip install haproxy_log_analysis\n\nTODO\n----\n- add more commands: *(help appreciated)*\n\n  - reports on servers connection time\n  - reports on termination state\n  - reports around connections (active, frontend, backend, server)\n  - *your ideas here*\n\n- think of a way to show the commands output in a meaningful way\n\n- be able to specify an output format. For any command that makes sense (slow\n  requests for example) output the given fields for each log line (i.e.\n  acceptance date, path, downstream server, load at that time...)\n\n- *your ideas*\n\n.. _HAProxy: http://haproxy.1wt.eu/\n.. _HTTP log format: http://cbonte.github.io/haproxy-dconv/2.2/configuration.html#8.2.3\n.. _documentation and API: https://haproxy-log-analyzer.readthedocs.io/\n.. _ReadTheDocs: http://readthedocs.org\n\nCHANGES\n=======\n\n4.1.0 (2020-01-06)\n------------------\n\n- **New command:** ``requests_per_hour``.\n  Just like the ``requests_per_minute`` but with hour granularity.\n  Idea and first implementation done by ``valleedelisle``.\n  [gforcada]\n\n- Fix parsing truncated requests.\n  Idea and first implementation by ``vixns``.\n  [gforcada]\n\n4.0.0 (2020-01-06)\n------------------\n\n**BREAKING CHANGES:**\n\n- Complete rewrite to use almost no memory usage even on huge files.\n  [gforcada]\n\n- Add parallelization to make parsing faster by parsing multiple lines in parallel.\n  [gforcada]\n\n- Rename command ``counter_slow_requests`` to ``slow_requests_counter``,\n  so it is aligned with all other ``_counter`` commands.\n  [gforcada]\n\n- Changed the ``counter_invalid`` command to a new command line switch ``--invalid``.\n  [gforcada]\n\n**Regular changes:**\n\n- Drop Python 2 support, and test on Python 3.8.\n  [gforcada]\n\n- Remove the pickling support.\n  [gforcada]\n\n- Add `--json` output command line option.\n  [valleedelisle]\n\n3.0.0 (2019-06-10)\n------------------\n\n- Fix spelling.\n  [EdwardBetts]\n\n- Make ip_counter use client_ip per default.\n  [vixns]\n\n- Overhaul testing environment. Test on python 3.7 as well. Use black to format.\n  [gforcada]\n\n2.1 (2017-07-06)\n----------------\n- Enforce QA checks (flake8) on code.\n  All code has been updated to follow it.\n  [gforcada]\n\n- Support Python 3.6.\n  [gforcada]\n\n- Support different syslog timestamps (at least NixOS).\n  [gforcada]\n\n2.0.2 (2016-11-17)\n------------------\n\n- Improve performance for ``cmd_print``.\n  [kevinjqiu]\n\n2.0.1 (2016-10-29)\n------------------\n\n- Allow hostnames to have a dot in it.\n  [gforcada]\n\n2.0 (2016-07-06)\n----------------\n- Handle unparseable HTTP requests.\n  [gforcada]\n\n- Only test on python 2.7 and 3.5\n  [gforcada]\n\n2.0b0 (2016-04-18)\n------------------\n- Check the divisor before doing a division to not get ``ZeroDivisionError`` exceptions.\n  [gforcada]\n\n2.0a0 (2016-03-29)\n------------------\n- Major refactoring:\n\n  # Rename modules and classes:\n\n    - haproxy_logline -> line\n    - haproxy_logfile -> logfile\n    - HaproxyLogLine -> Line\n    - HaproxyLogFile -> Log\n\n  # Parse the log file on Log() creation (i.e. in its __init__)\n\n  [gforcada]\n\n1.3 (2016-03-29)\n----------------\n\n- New filter: ``filter_wait_on_queues``.\n  Get all requests that waited at maximum X amount of milliseconds on HAProxy queues.\n  [gforcada]\n\n- Code/docs cleanups and add code analysis.\n  [gforcada]\n\n- Avoid using eval.\n  [gforcada]\n\n1.2.1 (2016-02-23)\n------------------\n\n- Support -1 as a status_code\n  [Christopher Baines]\n\n1.2 (2015-12-07)\n----------------\n\n- Allow a hostname on the syslog part (not only IPs)\n  [danny crasto]\n\n1.1 (2015-04-19)\n----------------\n\n- Make syslog optional.\n  Fixes issue https://github.com/gforcada/haproxy_log_analysis/issues/10.\n  [gforcada]\n\n1.0 (2015-03-24)\n----------------\n\n- Fix issue #9.\n  log line on the syslog part was too strict,\n  it was expecting the hostname to be a string and was\n  failing if it was an IP.\n  [gforcada]\n\n0.0.3.post2 (2015-01-05)\n------------------------\n\n- Finally really fixed issue #7.\n  ``namespace_packages`` was not meant to be on setup.py at all.\n  Silly copy&paste mistake.\n  [gforcada]\n\n0.0.3.post (2015-01-04)\n-----------------------\n\n- Fix release on PyPI.\n  Solves GitHub issue #7.\n  https://github.com/gforcada/haproxy_log_analysis/issues/7\n  [gforcada]\n\n0.0.3 (2014-07-09)\n------------------\n\n- Fix release on PyPI (again).\n  [gforcada]\n\n0.0.2 (2014-07-09)\n------------------\n\n- Fix release on PyPI.\n  [gforcada]\n\n0.0.1 (2014-07-09)\n------------------\n\n- Pickle :class::`.HaproxyLogFile` data for faster performance.\n  [gforcada]\n\n- Add a way to negate the filters, so that instead of being able to filter by\n  IP, it can output all but that IP information.\n  [gforcada]\n\n- Add lots of filters: ip, path, ssl, backend, frontend, server, status_code\n  and so on. See ``--list-filters`` for a complete list of them.\n  [gforcada]\n\n- Add :method::`.HaproxyLogFile.parse_data` method to get data from data stream.\n  It allows you use it as a library.\n  [bogdangi]\n\n- Add ``--list-filters`` argument on the command line interface.\n  [gforcada]\n\n- Add ``--filter`` argument on the command line interface, inspired by\n  Bogdan's early design.\n  [bogdangi] [gforcada]\n\n- Create a new module :module::`haproxy.filters` that holds all available filters.\n  [gforcada]\n\n- Improve :method::`.HaproxyLogFile.cmd_queue_peaks` output to not only show\n  peaks but also when requests started to queue and when they finsihed and\n  the amount of requests that had been queued.\n  [gforcada]\n\n- Show help when no argument is given.\n  [gforcada]\n\n- Polish documentation and docstrings here and there.\n  [gforcada]\n\n- Add a ``--list-commands`` argument on the command line interface.\n  [gforcada]\n\n- Generate an API doc for ``HaproxyLogLine`` and ``HaproxyLogFile``.\n  [bogdangi]\n\n- Create a ``console_script`` `haproxy_log_analysis` for ease of use.\n  [bogdangi]\n\n- Add Sphinx documentation system, still empty.\n  [gforcada]\n\n- Keep valid log lines sorted so that the exact order of connections is kept.\n  [gforcada]\n\n- Add quite a few commands, see `README.rst`_ for a complete list of them.\n  [gforcada]\n\n- Run commands passed as arguments (with -c flag).\n  [gforcada]\n\n- Add a requirements.txt file to keep track of dependencies and pin them.\n  [gforcada]\n\n- Add travis_ and coveralls_ support. See its badges on `README.rst`_.\n  [gforcada]\n\n- Add argument parsing and custom validation logic for all arguments.\n  [gforcada]\n\n- Add regular expressions for haproxy log lines (HTTP format) and to\n  parse HTTP requests path.\n  Added tests to ensure they work as expected.\n  [gforcada]\n\n- Create distribution.\n  [gforcada]\n\n.. _travis: https://travis-ci.org/\n.. _coveralls: https://coveralls.io/\n.. _README.rst: http://github.com/gforcada/haproxy_log_analysis\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gforcada/haproxy_log_analysis", "keywords": "haproxy log analysis report", "license": "GPL v3", "maintainer": "", "maintainer_email": "", "name": "haproxy-log-analysis", "package_url": "https://pypi.org/project/haproxy-log-analysis/", "platform": "", "project_url": "https://pypi.org/project/haproxy-log-analysis/", "project_urls": {"Homepage": "https://github.com/gforcada/haproxy_log_analysis"}, "release_url": "https://pypi.org/project/haproxy-log-analysis/4.1.0/", "requires_dist": ["setuptools"], "requires_python": "", "summary": "Haproxy log analyzer that tries to gives an insight of what's going on", "version": "4.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"haproxy-log-analyzer\">\n<h2>HAProxy log analyzer</h2>\n<p>This Python package is a <a href=\"http://haproxy.1wt.eu/\" rel=\"nofollow\">HAProxy</a> log parser.\nIt analyzes HAProxy log files in multiple ways (see commands section below).</p>\n<div>\n<p>Note</p>\n<p>Currently only the <a href=\"http://cbonte.github.io/haproxy-dconv/2.2/configuration.html#8.2.3\" rel=\"nofollow\">HTTP log format</a> is supported.</p>\n</div>\n<div id=\"tests-and-coverage\">\n<h3>Tests and coverage</h3>\n<p>No project is trustworthy if does not have tests and a decent coverage!</p>\n<a href=\"https://travis-ci.org/gforcada/haproxy_log_analysis\" rel=\"nofollow\"><img alt=\"Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b84ab61da3e59e35e367a820cb41cca6a26e648d/68747470733a2f2f7472617669732d63692e6f72672f67666f72636164612f686170726f78795f6c6f675f616e616c797369732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/gforcada/haproxy_log_analysis\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1d561034c86c9d37b7177468344befcdc89a32f2/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f67666f72636164612f686170726f78795f6c6f675f616e616c797369732f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/haproxy_log_analysis/\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a3f5bfa60161c78f7b880994e38c2c8e52a907a9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f686170726f78795f6c6f675f616e616c797369732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/haproxy_log_analysis/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/79fae868fd1aeec8577dc432849cd5fde47d3fdf/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f686170726f78795f6c6f675f616e616c797369732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/haproxy_log_analysis/\" rel=\"nofollow\"><img alt=\"Egg Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/17d57accdf4008bf57ccdee435d72e65670d3b79/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f686170726f78795f6c6f675f616e616c797369732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/haproxy_log_analysis/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/08533401648502bc4a1887268245bd0ab7cb6fbe/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f686170726f78795f6c6f675f616e616c797369732e737667\"></a>\n</div>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p>See the <a href=\"https://haproxy-log-analyzer.readthedocs.io/\" rel=\"nofollow\">documentation and API</a> at <a href=\"http://readthedocs.org\" rel=\"nofollow\">ReadTheDocs</a>.</p>\n</div>\n<div id=\"command-line-interface\">\n<h3>Command-line interface</h3>\n<p>The current <tt><span class=\"pre\">--help</span></tt> looks like this:</p>\n<pre>usage: haproxy_log_analysis [-h] [-l LOG] [-s START] [-d DELTA] [-c COMMAND]\n                            [-f FILTER] [-n] [--list-commands]\n                            [--list-filters] [--json]\n\nAnalyze HAProxy log files and outputs statistics about it\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -l LOG, --log LOG     HAProxy log file to analyze\n  -s START, --start START\n                        Process log entries starting at this time, in HAProxy\n                        date format (e.g. 11/Dec/2013 or\n                        11/Dec/2013:19:31:41). At least provide the\n                        day/month/year. Values not specified will use their\n                        base value (e.g. 00 for hour). Use in conjunction with\n                        -d to limit the number of entries to process.\n  -d DELTA, --delta DELTA\n                        Limit the number of entries to process. Express the\n                        time delta as a number and a time unit, e.g.: 1s, 10m,\n                        3h or 4d (for 1 second, 10 minutes, 3 hours or 4\n                        days). Use in conjunction with -s to only analyze\n                        certain time delta. If no start time is given, the\n                        time on the first line will be used instead.\n  -c COMMAND, --command COMMAND\n                        List of commands, comma separated, to run on the log\n                        file. See --list-commands to get a full list of them.\n  -f FILTER, --filter FILTER\n                        List of filters to apply on the log file. Passed as\n                        comma separated and parameters within square brackets,\n                        e.g ip[192.168.1.1],ssl,path[/some/path]. See --list-\n                        filters to get a full list of them.\n  -n, --negate-filter   Make filters passed with -f work the other way around,\n                        i.e. if the ``ssl`` filter is passed instead of\n                        showing only ssl requests it will show non-ssl\n                        traffic. If the ``ip`` filter is used, then all but\n                        that ip passed to the filter will be used.\n  --list-commands       Lists all commands available.\n  --list-filters        Lists all filters available.\n  --json                Output results in json.\n  --invalid             Print the lines that could not be parsed. Be aware\n                        that mixing it with the print command will mix their\n                        output.\n</pre>\n</div>\n<div id=\"commands\">\n<h3>Commands</h3>\n<p>Commands are small purpose specific programs in themselves that report specific statistics about the log file being analyzed.\nSee them all with <tt><span class=\"pre\">--list-commands</span></tt> or online at <a href=\"https://haproxy-log-analyzer.readthedocs.io/modules.html#module-haproxy.commands\" rel=\"nofollow\">https://haproxy-log-analyzer.readthedocs.io/modules.html#module-haproxy.commands</a>.</p>\n<ul>\n<li><tt>average_response_time</tt></li>\n<li><tt>average_waiting_time</tt></li>\n<li><tt>connection_type</tt></li>\n<li><tt>counter</tt></li>\n<li><tt>http_methods</tt></li>\n<li><tt>ip_counter</tt></li>\n<li><tt>print</tt></li>\n<li><tt>queue_peaks</tt></li>\n<li><tt>request_path_counter</tt></li>\n<li><tt>requests_per_hour</tt></li>\n<li><tt>requests_per_minute</tt></li>\n<li><tt>server_load</tt></li>\n<li><tt>slow_requests</tt></li>\n<li><tt>slow_requests_counter</tt></li>\n<li><tt>status_codes_counter</tt></li>\n<li><tt>top_ips</tt></li>\n<li><tt>top_request_paths</tt></li>\n</ul>\n</div>\n<div id=\"filters\">\n<h3>Filters</h3>\n<p>Filters, contrary to commands,\nare a way to reduce the amount of log lines to be processed.</p>\n<div>\n<p>Note</p>\n<p>The <tt><span class=\"pre\">-n</span></tt> command line argument allows to reverse filters output.</p>\n<p>This helps when looking for specific traces, like a certain IP, a path\u2026</p>\n</div>\n<p>See them all with <tt><span class=\"pre\">--list-filters</span></tt> or online at <a href=\"https://haproxy-log-analyzer.readthedocs.io/modules.html#module-haproxy.filters\" rel=\"nofollow\">https://haproxy-log-analyzer.readthedocs.io/modules.html#module-haproxy.filters</a>.</p>\n<ul>\n<li><tt>backend</tt></li>\n<li><tt>frontend</tt></li>\n<li><tt>http_method</tt></li>\n<li><tt>ip</tt></li>\n<li><tt>ip_range</tt></li>\n<li><tt>path</tt></li>\n<li><tt>response_size</tt></li>\n<li><tt>server</tt></li>\n<li><tt>slow_requests</tt></li>\n<li><tt>ssl</tt></li>\n<li><tt>status_code</tt></li>\n<li><tt>status_code_family</tt></li>\n<li><tt>wait_on_queues</tt></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>After installation you will have a console script <cite>haproxy_log_analysis</cite>:</p>\n<pre>$ pip install haproxy_log_analysis\n</pre>\n</div>\n<div id=\"todo\">\n<h3>TODO</h3>\n<ul>\n<li>add more commands: <em>(help appreciated)</em><ul>\n<li>reports on servers connection time</li>\n<li>reports on termination state</li>\n<li>reports around connections (active, frontend, backend, server)</li>\n<li><em>your ideas here</em></li>\n</ul>\n</li>\n<li>think of a way to show the commands output in a meaningful way</li>\n<li>be able to specify an output format. For any command that makes sense (slow\nrequests for example) output the given fields for each log line (i.e.\nacceptance date, path, downstream server, load at that time\u2026)</li>\n<li><em>your ideas</em></li>\n</ul>\n</div>\n</div>\n<div id=\"changes\">\n<h2>CHANGES</h2>\n<div id=\"id1\">\n<h3>4.1.0 (2020-01-06)</h3>\n<ul>\n<li><strong>New command:</strong> <tt>requests_per_hour</tt>.\nJust like the <tt>requests_per_minute</tt> but with hour granularity.\nIdea and first implementation done by <tt>valleedelisle</tt>.\n[gforcada]</li>\n<li>Fix parsing truncated requests.\nIdea and first implementation by <tt>vixns</tt>.\n[gforcada]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>4.0.0 (2020-01-06)</h3>\n<p><strong>BREAKING CHANGES:</strong></p>\n<ul>\n<li>Complete rewrite to use almost no memory usage even on huge files.\n[gforcada]</li>\n<li>Add parallelization to make parsing faster by parsing multiple lines in parallel.\n[gforcada]</li>\n<li>Rename command <tt>counter_slow_requests</tt> to <tt>slow_requests_counter</tt>,\nso it is aligned with all other <tt>_counter</tt> commands.\n[gforcada]</li>\n<li>Changed the <tt>counter_invalid</tt> command to a new command line switch <tt><span class=\"pre\">--invalid</span></tt>.\n[gforcada]</li>\n</ul>\n<p><strong>Regular changes:</strong></p>\n<ul>\n<li>Drop Python 2 support, and test on Python 3.8.\n[gforcada]</li>\n<li>Remove the pickling support.\n[gforcada]</li>\n<li>Add <cite>\u2013json</cite> output command line option.\n[valleedelisle]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>3.0.0 (2019-06-10)</h3>\n<ul>\n<li>Fix spelling.\n[EdwardBetts]</li>\n<li>Make ip_counter use client_ip per default.\n[vixns]</li>\n<li>Overhaul testing environment. Test on python 3.7 as well. Use black to format.\n[gforcada]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>2.1 (2017-07-06)</h3>\n<ul>\n<li>Enforce QA checks (flake8) on code.\nAll code has been updated to follow it.\n[gforcada]</li>\n<li>Support Python 3.6.\n[gforcada]</li>\n<li>Support different syslog timestamps (at least NixOS).\n[gforcada]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>2.0.2 (2016-11-17)</h3>\n<ul>\n<li>Improve performance for <tt>cmd_print</tt>.\n[kevinjqiu]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>2.0.1 (2016-10-29)</h3>\n<ul>\n<li>Allow hostnames to have a dot in it.\n[gforcada]</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>2.0 (2016-07-06)</h3>\n<ul>\n<li>Handle unparseable HTTP requests.\n[gforcada]</li>\n<li>Only test on python 2.7 and 3.5\n[gforcada]</li>\n</ul>\n</div>\n<div id=\"b0-2016-04-18\">\n<h3>2.0b0 (2016-04-18)</h3>\n<ul>\n<li>Check the divisor before doing a division to not get <tt>ZeroDivisionError</tt> exceptions.\n[gforcada]</li>\n</ul>\n</div>\n<div id=\"a0-2016-03-29\">\n<h3>2.0a0 (2016-03-29)</h3>\n<ul>\n<li><p>Major refactoring:</p>\n<p># Rename modules and classes:</p>\n<blockquote>\n<ul>\n<li>haproxy_logline -&gt; line</li>\n<li>haproxy_logfile -&gt; logfile</li>\n<li>HaproxyLogLine -&gt; Line</li>\n<li>HaproxyLogFile -&gt; Log</li>\n</ul>\n</blockquote>\n<p># Parse the log file on Log() creation (i.e. in its __init__)</p>\n<p>[gforcada]</p>\n</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>1.3 (2016-03-29)</h3>\n<ul>\n<li>New filter: <tt>filter_wait_on_queues</tt>.\nGet all requests that waited at maximum X amount of milliseconds on HAProxy queues.\n[gforcada]</li>\n<li>Code/docs cleanups and add code analysis.\n[gforcada]</li>\n<li>Avoid using eval.\n[gforcada]</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>1.2.1 (2016-02-23)</h3>\n<ul>\n<li>Support -1 as a status_code\n[Christopher Baines]</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>1.2 (2015-12-07)</h3>\n<ul>\n<li>Allow a hostname on the syslog part (not only IPs)\n[danny crasto]</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>1.1 (2015-04-19)</h3>\n<ul>\n<li>Make syslog optional.\nFixes issue <a href=\"https://github.com/gforcada/haproxy_log_analysis/issues/10\" rel=\"nofollow\">https://github.com/gforcada/haproxy_log_analysis/issues/10</a>.\n[gforcada]</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>1.0 (2015-03-24)</h3>\n<ul>\n<li>Fix issue #9.\nlog line on the syslog part was too strict,\nit was expecting the hostname to be a string and was\nfailing if it was an IP.\n[gforcada]</li>\n</ul>\n</div>\n<div id=\"post2-2015-01-05\">\n<h3>0.0.3.post2 (2015-01-05)</h3>\n<ul>\n<li>Finally really fixed issue #7.\n<tt>namespace_packages</tt> was not meant to be on setup.py at all.\nSilly copy&amp;paste mistake.\n[gforcada]</li>\n</ul>\n</div>\n<div id=\"post-2015-01-04\">\n<h3>0.0.3.post (2015-01-04)</h3>\n<ul>\n<li>Fix release on PyPI.\nSolves GitHub issue #7.\n<a href=\"https://github.com/gforcada/haproxy_log_analysis/issues/7\" rel=\"nofollow\">https://github.com/gforcada/haproxy_log_analysis/issues/7</a>\n[gforcada]</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>0.0.3 (2014-07-09)</h3>\n<ul>\n<li>Fix release on PyPI (again).\n[gforcada]</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>0.0.2 (2014-07-09)</h3>\n<ul>\n<li>Fix release on PyPI.\n[gforcada]</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>0.0.1 (2014-07-09)</h3>\n<ul>\n<li>Pickle :class::<cite>.HaproxyLogFile</cite> data for faster performance.\n[gforcada]</li>\n<li>Add a way to negate the filters, so that instead of being able to filter by\nIP, it can output all but that IP information.\n[gforcada]</li>\n<li>Add lots of filters: ip, path, ssl, backend, frontend, server, status_code\nand so on. See <tt><span class=\"pre\">--list-filters</span></tt> for a complete list of them.\n[gforcada]</li>\n<li>Add :method::<cite>.HaproxyLogFile.parse_data</cite> method to get data from data stream.\nIt allows you use it as a library.\n[bogdangi]</li>\n<li>Add <tt><span class=\"pre\">--list-filters</span></tt> argument on the command line interface.\n[gforcada]</li>\n<li>Add <tt><span class=\"pre\">--filter</span></tt> argument on the command line interface, inspired by\nBogdan\u2019s early design.\n[bogdangi] [gforcada]</li>\n<li>Create a new module :module::<cite>haproxy.filters</cite> that holds all available filters.\n[gforcada]</li>\n<li>Improve :method::<cite>.HaproxyLogFile.cmd_queue_peaks</cite> output to not only show\npeaks but also when requests started to queue and when they finsihed and\nthe amount of requests that had been queued.\n[gforcada]</li>\n<li>Show help when no argument is given.\n[gforcada]</li>\n<li>Polish documentation and docstrings here and there.\n[gforcada]</li>\n<li>Add a <tt><span class=\"pre\">--list-commands</span></tt> argument on the command line interface.\n[gforcada]</li>\n<li>Generate an API doc for <tt>HaproxyLogLine</tt> and <tt>HaproxyLogFile</tt>.\n[bogdangi]</li>\n<li>Create a <tt>console_script</tt> <cite>haproxy_log_analysis</cite> for ease of use.\n[bogdangi]</li>\n<li>Add Sphinx documentation system, still empty.\n[gforcada]</li>\n<li>Keep valid log lines sorted so that the exact order of connections is kept.\n[gforcada]</li>\n<li>Add quite a few commands, see <a href=\"http://github.com/gforcada/haproxy_log_analysis\" rel=\"nofollow\">README.rst</a> for a complete list of them.\n[gforcada]</li>\n<li>Run commands passed as arguments (with -c flag).\n[gforcada]</li>\n<li>Add a requirements.txt file to keep track of dependencies and pin them.\n[gforcada]</li>\n<li>Add <a href=\"https://travis-ci.org/\" rel=\"nofollow\">travis</a> and <a href=\"https://coveralls.io/\" rel=\"nofollow\">coveralls</a> support. See its badges on <a href=\"http://github.com/gforcada/haproxy_log_analysis\" rel=\"nofollow\">README.rst</a>.\n[gforcada]</li>\n<li>Add argument parsing and custom validation logic for all arguments.\n[gforcada]</li>\n<li>Add regular expressions for haproxy log lines (HTTP format) and to\nparse HTTP requests path.\nAdded tests to ensure they work as expected.\n[gforcada]</li>\n<li>Create distribution.\n[gforcada]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6405374, "releases": {"0.0.1": [{"comment_text": "built for Linux-3.14.5-200.fc20.x86_64-x86_64-with-glibc2.2.5", "digests": {"md5": "422b518c0cf719c34ca2983afab40805", "sha256": "c83a0975150b1f20fba53db09cd898115e7b53686f7469517dde162f3848ddf0"}, "downloads": -1, "filename": "haproxy_log_analysis-0.0.1.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "422b518c0cf719c34ca2983afab40805", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 276848, "upload_time": "2014-07-09T06:01:23", "upload_time_iso_8601": "2014-07-09T06:01:23.097865Z", "url": "https://files.pythonhosted.org/packages/7c/25/95ca3e37e4a50443e5cd40a4d2bc863d9bd5ef09d19fa0f96f181fe36503/haproxy_log_analysis-0.0.1.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "01dc812867f83f741c523e5dbd11bd62", "sha256": "693de0df99f449f3dcdaa18f9e7baf97fa5f5c2c746e7ff9df81f88915f50346"}, "downloads": -1, "filename": "haproxy_log_analysis-0.0.1.tar.gz", "has_sig": false, "md5_digest": "01dc812867f83f741c523e5dbd11bd62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 284261, "upload_time": "2014-07-09T06:01:18", "upload_time_iso_8601": "2014-07-09T06:01:18.814798Z", "url": "https://files.pythonhosted.org/packages/4a/06/58ecd7fe9de722af88b2ffbb5996f235464a811665235ac8ad7f23bea9ba/haproxy_log_analysis-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "built for Linux-3.14.5-200.fc20.x86_64-x86_64-with-glibc2.2.5", "digests": {"md5": "210f10416834ff0f36bc8b022e56281e", "sha256": "0f4a3d0a4fffd24497390bb25f26a781d8f30b293c6aee4ba49431949fe5565b"}, "downloads": -1, "filename": "haproxy_log_analysis-0.0.2.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "210f10416834ff0f36bc8b022e56281e", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 263217, "upload_time": "2014-07-09T06:11:10", "upload_time_iso_8601": "2014-07-09T06:11:10.532001Z", "url": "https://files.pythonhosted.org/packages/52/e1/70c81482b46e22130f1f0a5344cd62dd6f643d620836a909d7132db3a619/haproxy_log_analysis-0.0.2.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "addbb2e715ff3b955b2522684b56638a", "sha256": "68d83f023965cf01b7c25b9a69e3754aea90ac8f06a9f1953a06cca3e04d05ef"}, "downloads": -1, "filename": "haproxy_log_analysis-0.0.2.tar.gz", "has_sig": false, "md5_digest": "addbb2e715ff3b955b2522684b56638a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 256464, "upload_time": "2014-07-09T06:11:07", "upload_time_iso_8601": "2014-07-09T06:11:07.567144Z", "url": "https://files.pythonhosted.org/packages/e7/7e/2ba22528868c348dd0f79df71e745e52dc4cbff02e7bc3497c76335a1c9f/haproxy_log_analysis-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "built for Linux-3.14.5-200.fc20.x86_64-x86_64-with-glibc2.2.5", "digests": {"md5": "abe08911768d029dfba4c8a667049437", "sha256": "729ec70089d4f2ecef481da891d17d21f0648d493a7e6ba26d6ffff60d934450"}, "downloads": -1, "filename": "haproxy_log_analysis-0.0.3.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "abe08911768d029dfba4c8a667049437", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 263371, "upload_time": "2014-07-09T06:19:35", "upload_time_iso_8601": "2014-07-09T06:19:35.802487Z", "url": "https://files.pythonhosted.org/packages/44/35/9b122aa46be1b75af65ceec2a36a0a44fb0035b8df853397c0450fa63253/haproxy_log_analysis-0.0.3.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "17d5b2de65bc6c355ceb90aa68065bb9", "sha256": "d3f2c55dea17b6689609fbb90d3e61482826e292f3934cf50db337c0885c73e7"}, "downloads": -1, "filename": "haproxy_log_analysis-0.0.3.tar.gz", "has_sig": false, "md5_digest": "17d5b2de65bc6c355ceb90aa68065bb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 256502, "upload_time": "2014-07-09T06:19:31", "upload_time_iso_8601": "2014-07-09T06:19:31.790306Z", "url": "https://files.pythonhosted.org/packages/65/0e/44f058f37208fde50bb8a52517cdad5059fe09438aee27f39f84fd438c8f/haproxy_log_analysis-0.0.3.tar.gz", "yanked": false}], "0.0.3.post": [{"comment_text": "", "digests": {"md5": "523632063d592072c07f8674f15fb85e", "sha256": "7b399c900e562d77b59e54de987f22fe84bb147b613b5fe3600dca3d075d5ec8"}, "downloads": -1, "filename": "haproxy_log_analysis-0.0.3.post.tar.gz", "has_sig": false, "md5_digest": "523632063d592072c07f8674f15fb85e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 256539, "upload_time": "2015-01-04T12:11:45", "upload_time_iso_8601": "2015-01-04T12:11:45.564567Z", "url": "https://files.pythonhosted.org/packages/17/1b/98f74c980727d18d8b78b954f057ba313f3e35906f6cf0d805bdcaf1aa60/haproxy_log_analysis-0.0.3.post.tar.gz", "yanked": false}], "0.0.3.post1": [{"comment_text": "", "digests": {"md5": "1cf45f9f99e29803788f3500e4b523bb", "sha256": "de7072f292de55573cc3e7118f80bddff52b34418dae7841324bde912118c511"}, "downloads": -1, "filename": "haproxy_log_analysis-0.0.3.post1.tar.gz", "has_sig": false, "md5_digest": "1cf45f9f99e29803788f3500e4b523bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 256636, "upload_time": "2015-01-04T12:16:00", "upload_time_iso_8601": "2015-01-04T12:16:00.435126Z", "url": "https://files.pythonhosted.org/packages/b7/2d/24e8110dd587eb73c438b47cff8ae7e43eb23d50d19a328a7397a2942960/haproxy_log_analysis-0.0.3.post1.tar.gz", "yanked": false}], "0.0.3.post2": [{"comment_text": "", "digests": {"md5": "19f556bd931e8dfa01a5199f07ce7be2", "sha256": "4165c1db8a216828cfdb663dd62c5e0cad3d6b4f9fbd69dd17217161c685d36c"}, "downloads": -1, "filename": "haproxy_log_analysis-0.0.3.post2.tar.gz", "has_sig": false, "md5_digest": "19f556bd931e8dfa01a5199f07ce7be2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 256601, "upload_time": "2015-01-05T10:04:52", "upload_time_iso_8601": "2015-01-05T10:04:52.086028Z", "url": "https://files.pythonhosted.org/packages/71/25/a596f1814daea9eb52100da8f3632825786d04b698b34545066c9f1f7263/haproxy_log_analysis-0.0.3.post2.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "bf0c029c4720238161e9e3f9c2c20439", "sha256": "36aec9d5326182098c56dd2a745394413a16820130114fb08e96f142f60e0887"}, "downloads": -1, "filename": "haproxy_log_analysis-1.0.tar.gz", "has_sig": false, "md5_digest": "bf0c029c4720238161e9e3f9c2c20439", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 257103, "upload_time": "2015-03-24T15:31:45", "upload_time_iso_8601": "2015-03-24T15:31:45.761975Z", "url": "https://files.pythonhosted.org/packages/d4/b7/3f372b84f49be37cc88c4cde98bbc20571fefa30409fdb7f39d43c14f1d2/haproxy_log_analysis-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "78106c5d947f2528487f62cd0781290b", "sha256": "3b27f3df2e8c6598c518d1d131324c97377a61aa638ce4fe6adf0eb39f835ab7"}, "downloads": -1, "filename": "haproxy_log_analysis-1.1.tar.gz", "has_sig": false, "md5_digest": "78106c5d947f2528487f62cd0781290b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 257316, "upload_time": "2015-04-19T19:51:39", "upload_time_iso_8601": "2015-04-19T19:51:39.139713Z", "url": "https://files.pythonhosted.org/packages/8b/37/daf83e9cb2c6b1f589eb851a91483a4b87dd11d0e82ff6d5b2e16b65dc69/haproxy_log_analysis-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "e27f82f5f748b28dc3be4832f4a5d148", "sha256": "37a4fddb2edff23d12c57434c8c9befe0b81ba03466f8fff2e47a0b49190261e"}, "downloads": -1, "filename": "haproxy_log_analysis-1.2.tar.gz", "has_sig": false, "md5_digest": "e27f82f5f748b28dc3be4832f4a5d148", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 258412, "upload_time": "2015-12-07T11:22:15", "upload_time_iso_8601": "2015-12-07T11:22:15.554434Z", "url": "https://files.pythonhosted.org/packages/54/cb/bc2572cab44e4b7e152b60bd79cb47f31b444dd924256c532d4ae64fe4ff/haproxy_log_analysis-1.2.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "676583270577d909a8abcb58fcd599d8", "sha256": "0a23d2a12fa467b5d088aa3c0e2a78edc9f8be960798d082e201092c077ca95f"}, "downloads": -1, "filename": "haproxy_log_analysis-1.2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "676583270577d909a8abcb58fcd599d8", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 260124, "upload_time": "2016-02-23T22:22:15", "upload_time_iso_8601": "2016-02-23T22:22:15.904376Z", "url": "https://files.pythonhosted.org/packages/38/b3/dcb572225fee91186911c3401bb79bb6b111531a8662ac01033e4f48d3e4/haproxy_log_analysis-1.2.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef9dcbb931537579fd7241bab58fc595", "sha256": "b7ee929c09d289512acbf063e0cdd183f3a8a98039623a90869233f7aa3dd45f"}, "downloads": -1, "filename": "haproxy_log_analysis-1.2.1.tar.gz", "has_sig": false, "md5_digest": "ef9dcbb931537579fd7241bab58fc595", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 258569, "upload_time": "2016-02-23T22:22:26", "upload_time_iso_8601": "2016-02-23T22:22:26.341222Z", "url": "https://files.pythonhosted.org/packages/2b/2e/a93ded4557e2d3244d90179e213bf94fa95e892bf60fd93f875445a74818/haproxy_log_analysis-1.2.1.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "e6bc0ce6f97f90e0acaa46ee9a3bfcd8", "sha256": "d6ed40c15f0b553a69cd31240b28651d4107b4b8e9b27106ed687db5de6793da"}, "downloads": -1, "filename": "haproxy_log_analysis-1.3-py2-none-any.whl", "has_sig": false, "md5_digest": "e6bc0ce6f97f90e0acaa46ee9a3bfcd8", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 260514, "upload_time": "2016-03-29T08:50:24", "upload_time_iso_8601": "2016-03-29T08:50:24.419233Z", "url": "https://files.pythonhosted.org/packages/94/f8/1927ac08e1e5091fd7e8d97b7b49f34c021b05f616da29aebbaaf8136b2d/haproxy_log_analysis-1.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "730a353d362864349ea8d1ea69a49aab", "sha256": "43da0d49abe0db906e6d6d4d0312f326bceaccf704f6c4a71c5da5d1d4e4e130"}, "downloads": -1, "filename": "haproxy_log_analysis-1.3.tar.gz", "has_sig": false, "md5_digest": "730a353d362864349ea8d1ea69a49aab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 259500, "upload_time": "2016-03-29T08:50:32", "upload_time_iso_8601": "2016-03-29T08:50:32.426658Z", "url": "https://files.pythonhosted.org/packages/c1/2d/9bed882548cafac1b73e9b681fd5d97003489056fa512673b5afceaf4790/haproxy_log_analysis-1.3.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "e0be47985fbd2a00aa7d92e86abac221", "sha256": "edee38920819e52259ea8af417b951287e13dc0aef17bafabd49a29ba2bb01e6"}, "downloads": -1, "filename": "haproxy_log_analysis-2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "e0be47985fbd2a00aa7d92e86abac221", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 260853, "upload_time": "2016-07-06T07:47:21", "upload_time_iso_8601": "2016-07-06T07:47:21.392892Z", "url": "https://files.pythonhosted.org/packages/6a/5f/0923a307642a5d5d9e5a9cba54be549593efca8572774e8b6fbfd7950c03/haproxy_log_analysis-2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5670a8ec164b25b27677bb25e94f57bb", "sha256": "2aed438812d0d3f064dd751d69b5115caf8544f62a4c268ae56d241eda9d5857"}, "downloads": -1, "filename": "haproxy_log_analysis-2.0.tar.gz", "has_sig": false, "md5_digest": "5670a8ec164b25b27677bb25e94f57bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 259737, "upload_time": "2016-07-06T07:47:26", "upload_time_iso_8601": "2016-07-06T07:47:26.938991Z", "url": "https://files.pythonhosted.org/packages/91/41/5fa0e021c800980d031705b22a9d7b51f6ca6683d5bd916126c8c9320588/haproxy_log_analysis-2.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "97be26717957b2dbaa8613395100e677", "sha256": "51c673c7e2a7c147a1174183477a611c514b4b86c334568ae32d4717bcbd8a03"}, "downloads": -1, "filename": "haproxy_log_analysis-2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "97be26717957b2dbaa8613395100e677", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 261010, "upload_time": "2016-10-28T23:10:32", "upload_time_iso_8601": "2016-10-28T23:10:32.203611Z", "url": "https://files.pythonhosted.org/packages/c3/3d/f323ef4a785f532bae95b3daf1f8625ff8fb2b561eccac6a97528d2713a1/haproxy_log_analysis-2.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "667d76eb11e0845f21fda29dbe216912", "sha256": "8222f144d4739d2c462f4fccf49882e26daa22f8b065528555c473c63bef43eb"}, "downloads": -1, "filename": "haproxy_log_analysis-2.0.1.tar.gz", "has_sig": false, "md5_digest": "667d76eb11e0845f21fda29dbe216912", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 259885, "upload_time": "2016-10-28T23:10:35", "upload_time_iso_8601": "2016-10-28T23:10:35.899948Z", "url": "https://files.pythonhosted.org/packages/f8/a2/77c21563a3140a19e99664868c3f47851516fae621d33580f45d74bd54c1/haproxy_log_analysis-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "ac12a81233f08891e169340adcec86b6", "sha256": "cf0c54bf8fab15b03f5d3560828d03c9026ea6ae42039cd88ab2cbe000cc109f"}, "downloads": -1, "filename": "haproxy_log_analysis-2.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "ac12a81233f08891e169340adcec86b6", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 261086, "upload_time": "2016-11-17T22:38:10", "upload_time_iso_8601": "2016-11-17T22:38:10.490517Z", "url": "https://files.pythonhosted.org/packages/4a/6c/39e2648ec79db850f470e24b33b9672c38ab8bef62a6c032382b99d1ef5c/haproxy_log_analysis-2.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ca8589716bffb329b0ed9a20195530c", "sha256": "7199ecfac1d02d0fb831b9b03cb475440ae8f0f91874266c1f504bf95f5085ed"}, "downloads": -1, "filename": "haproxy_log_analysis-2.0.2.tar.gz", "has_sig": false, "md5_digest": "9ca8589716bffb329b0ed9a20195530c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 259936, "upload_time": "2016-11-17T22:38:14", "upload_time_iso_8601": "2016-11-17T22:38:14.316272Z", "url": "https://files.pythonhosted.org/packages/3d/2e/0e04510125e3a3165a2012e5c26ecdd237037120fa426477073e698a9d2b/haproxy_log_analysis-2.0.2.tar.gz", "yanked": false}], "2.0a0": [{"comment_text": "", "digests": {"md5": "92d7e1509e7c6e2ad9b9cb46a64e470c", "sha256": "264d8dcb3fafe533e5189cc23de7058b6e0d5771554511e274db8d310a946b93"}, "downloads": -1, "filename": "haproxy_log_analysis-2.0a0-py2-none-any.whl", "has_sig": false, "md5_digest": "92d7e1509e7c6e2ad9b9cb46a64e470c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 260486, "upload_time": "2016-03-29T16:19:11", "upload_time_iso_8601": "2016-03-29T16:19:11.566743Z", "url": "https://files.pythonhosted.org/packages/33/f4/1a895d0eed2ed11c64f51f4c8d3561f986b7754acd767803251fdeb65a75/haproxy_log_analysis-2.0a0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a11db5a046a1b035eff1b6b9dec3fad3", "sha256": "09ccabd70e8d28f4fb973e5ac698fed0a77ab5bdb9eb9f43c8423cc6fd8e8229"}, "downloads": -1, "filename": "haproxy_log_analysis-2.0a0.tar.gz", "has_sig": false, "md5_digest": "a11db5a046a1b035eff1b6b9dec3fad3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 259340, "upload_time": "2016-03-29T16:19:28", "upload_time_iso_8601": "2016-03-29T16:19:28.967708Z", "url": "https://files.pythonhosted.org/packages/aa/11/d0b475e2a65bdd1a3d90fc4dbf5fdd8044c7903cb8956b0b3fe41e2d3014/haproxy_log_analysis-2.0a0.tar.gz", "yanked": false}], "2.0b0": [{"comment_text": "", "digests": {"md5": "25d64997f95337d8c00acd70bbf3b790", "sha256": "743fb0caad9951c1423b5cd12e7f70dcdc2ffcd2852e0a962ee774cf74b30ef2"}, "downloads": -1, "filename": "haproxy_log_analysis-2.0b0-py2-none-any.whl", "has_sig": false, "md5_digest": "25d64997f95337d8c00acd70bbf3b790", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 260651, "upload_time": "2016-04-18T10:01:19", "upload_time_iso_8601": "2016-04-18T10:01:19.820618Z", "url": "https://files.pythonhosted.org/packages/2b/a4/63b9826e45b2b84f94e29bca6e8c6df0c95b5e98c27422776b3677fbc178/haproxy_log_analysis-2.0b0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8b65e92cb543a6656de1cf33d4a2422", "sha256": "8f2ee1c239d112f046502f9228edc2a2c570f16176fde2a68106a912d8309798"}, "downloads": -1, "filename": "haproxy_log_analysis-2.0b0.tar.gz", "has_sig": false, "md5_digest": "a8b65e92cb543a6656de1cf33d4a2422", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 259502, "upload_time": "2016-04-18T10:01:44", "upload_time_iso_8601": "2016-04-18T10:01:44.901212Z", "url": "https://files.pythonhosted.org/packages/92/79/3ed67ec5b9311b524da542df8c826bf500bce37874a4dc6ab0e4b3f2db54/haproxy_log_analysis-2.0b0.tar.gz", "yanked": false}], "2.1": [{"comment_text": "", "digests": {"md5": "a1e23755884d6d829300fc99ae58edd0", "sha256": "9961103403aa2a1b79dce0a366db2d461f73173d255d94e5560ad2ede945e935"}, "downloads": -1, "filename": "haproxy_log_analysis-2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "a1e23755884d6d829300fc99ae58edd0", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 261527, "upload_time": "2017-07-06T21:26:55", "upload_time_iso_8601": "2017-07-06T21:26:55.910996Z", "url": "https://files.pythonhosted.org/packages/c4/5a/14d20a2247fcc0d91b817a0933ef052e66d09be7b035955fe15f6df1ed82/haproxy_log_analysis-2.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3027adfc62856f9678a244dba6d99db", "sha256": "a543d17db53f9e539083cb7db8b54e0d83f9b457d14f040a07dfbe2575721c9a"}, "downloads": -1, "filename": "haproxy_log_analysis-2.1.tar.gz", "has_sig": false, "md5_digest": "b3027adfc62856f9678a244dba6d99db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 260543, "upload_time": "2017-07-06T21:27:00", "upload_time_iso_8601": "2017-07-06T21:27:00.346460Z", "url": "https://files.pythonhosted.org/packages/11/8c/9cfadf7b045c3ec1b09367eb561097d461bccbc6d2e8212f4b71181887b4/haproxy_log_analysis-2.1.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "bf23bdb6a53d55bb0431dc2335a606de", "sha256": "207443011ccc1caed40c2b5439264106af5d7318f1cb491804478e0047ac3bfb"}, "downloads": -1, "filename": "haproxy_log_analysis-3.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bf23bdb6a53d55bb0431dc2335a606de", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 268141, "upload_time": "2019-06-09T22:07:41", "upload_time_iso_8601": "2019-06-09T22:07:41.778079Z", "url": "https://files.pythonhosted.org/packages/0a/1b/e99a41206af8de58003ad4658619f95a501e0864b66d0cb07bb401b63dc0/haproxy_log_analysis-3.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b87276d5122391bbab9b8cbaabbbd43", "sha256": "2916db662d65fbf3ce5852a5832cdec089b8cd51dc1b0d66590b6dd34997c275"}, "downloads": -1, "filename": "haproxy_log_analysis-3.0.0.tar.gz", "has_sig": false, "md5_digest": "2b87276d5122391bbab9b8cbaabbbd43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 262689, "upload_time": "2019-06-09T22:07:44", "upload_time_iso_8601": "2019-06-09T22:07:44.916902Z", "url": "https://files.pythonhosted.org/packages/6f/3e/a7075883c07bade154c9d4403084aff5444f95ce1e0126e806eabffd650e/haproxy_log_analysis-3.0.0.tar.gz", "yanked": false}], "4.0.0": [{"comment_text": "", "digests": {"md5": "f6d45435cd2f2653b41e81f0eee2b1f1", "sha256": "f6a9e92e81971e5bad11ef4fc3b29ee3554f3901c12ad29e3fd5160b38935d0e"}, "downloads": -1, "filename": "haproxy_log_analysis-4.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f6d45435cd2f2653b41e81f0eee2b1f1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 46681, "upload_time": "2020-01-06T14:34:36", "upload_time_iso_8601": "2020-01-06T14:34:36.827173Z", "url": "https://files.pythonhosted.org/packages/e5/c9/fae1df19f9b05cfed1139b7f923252c72c6722fcb7e709822adfa842cd0d/haproxy_log_analysis-4.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "973371636576f8e7dca0504a1a34d4a8", "sha256": "43ae7f11fbea0abdc8a4cbcd4aa8e0a3fb16b77dc9e02523e0dce815a212d092"}, "downloads": -1, "filename": "haproxy_log_analysis-4.0.0.tar.gz", "has_sig": false, "md5_digest": "973371636576f8e7dca0504a1a34d4a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53137, "upload_time": "2020-01-06T14:34:39", "upload_time_iso_8601": "2020-01-06T14:34:39.045630Z", "url": "https://files.pythonhosted.org/packages/ee/1f/365677bcf0704a246f9b5cef2df9bf9f5fa6bb66d6aa003887ee83a50e40/haproxy_log_analysis-4.0.0.tar.gz", "yanked": false}], "4.1.0": [{"comment_text": "", "digests": {"md5": "1b60a45750c2a3d6fabea5800af4488f", "sha256": "27af5096adfac063b7022a5501bed7a7c85602609ef127e3fe692296e39b79cf"}, "downloads": -1, "filename": "haproxy_log_analysis-4.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1b60a45750c2a3d6fabea5800af4488f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 47003, "upload_time": "2020-01-06T22:34:48", "upload_time_iso_8601": "2020-01-06T22:34:48.683798Z", "url": "https://files.pythonhosted.org/packages/c8/d6/2f15a8e32128f9b91f14d0c3787d23b1ef6873a089b78551ad3c762e422c/haproxy_log_analysis-4.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9bfd2866a4b663a85cf0006eb6c555d", "sha256": "407a7ecd3b035b56711812cf83b7a2bf5a2b369440b2ab15b37c95384753c6ce"}, "downloads": -1, "filename": "haproxy_log_analysis-4.1.0.tar.gz", "has_sig": false, "md5_digest": "f9bfd2866a4b663a85cf0006eb6c555d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53741, "upload_time": "2020-01-06T22:34:51", "upload_time_iso_8601": "2020-01-06T22:34:51.244083Z", "url": "https://files.pythonhosted.org/packages/ad/1c/d905970e706f6b96bb21620751bb7c83d6714c3178f0633bef316f1b8846/haproxy_log_analysis-4.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1b60a45750c2a3d6fabea5800af4488f", "sha256": "27af5096adfac063b7022a5501bed7a7c85602609ef127e3fe692296e39b79cf"}, "downloads": -1, "filename": "haproxy_log_analysis-4.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1b60a45750c2a3d6fabea5800af4488f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 47003, "upload_time": "2020-01-06T22:34:48", "upload_time_iso_8601": "2020-01-06T22:34:48.683798Z", "url": "https://files.pythonhosted.org/packages/c8/d6/2f15a8e32128f9b91f14d0c3787d23b1ef6873a089b78551ad3c762e422c/haproxy_log_analysis-4.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9bfd2866a4b663a85cf0006eb6c555d", "sha256": "407a7ecd3b035b56711812cf83b7a2bf5a2b369440b2ab15b37c95384753c6ce"}, "downloads": -1, "filename": "haproxy_log_analysis-4.1.0.tar.gz", "has_sig": false, "md5_digest": "f9bfd2866a4b663a85cf0006eb6c555d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53741, "upload_time": "2020-01-06T22:34:51", "upload_time_iso_8601": "2020-01-06T22:34:51.244083Z", "url": "https://files.pythonhosted.org/packages/ad/1c/d905970e706f6b96bb21620751bb7c83d6714c3178f0633bef316f1b8846/haproxy_log_analysis-4.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:29 2020"}