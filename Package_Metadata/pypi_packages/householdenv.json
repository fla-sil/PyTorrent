{"info": {"author": "Diego Cabo Golvano", "author_email": "dcgdiego@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Household-env\n\nThis is a gym environment that represents a robot agent in a household environment for RL purposes.\n\n#### Table of Contents  \n[How to run it](#how-to-run-it)  \n[Observation space](#observation-space)  \n[Action space](#action-space)  \n[Tasks](#tasks)\n\n\n## How to run it\n\nTo run an example of the environment first install it and then run the dummy file.\n```bash\n#!/bin/bash\npip install -e Household-env \npython3 dummy.py\n```\n\n## Observation space\n\nThe robot has a vision grid of 7x7. The vision grid inputs will return values that represent the content of that cell. \n\nThe tasks encoding is binary instead of label encoding (0: task1, 1: task2...) because there is no ordering for the\n tasks, but the alg. might think there is.\n\n **Note**: We could do the same for the vision grid, but then the observation space would increase a lot (48*3=147 for\n  for only 7 representable objects )\n\nNum   | Observation                |  Min   |  Max\n------|----------------------------|--------|-------\n0     | x_coord_robot              |  0     |  19\n1     | y_coord_robot              |  0     |  19\n2     | task_encoding              |  0     |  1\n...   | ...                        |        |  \n6     | task_encoding              |  0     |  1\n7     | 1st action                 |  0     |  8\n8     | 2nd action                 |  0     |  8\n9     | 3rd action                 |  0     |  8\n10    | 4th action                 |  0     |  8\n(vision not yet)\n11    | vision_grid                |  0     |  1\n..    | ..                         |  0     |  1\n58    | vision_grid                |  0     |  1\n\nObjects will return the following values when within range of the 7x7 vision grid.\n\nNum   | Object\n------|---------------\n0     | Nothing\n1     | wall\n2     | TV\n3     | couch\n4     | bed\n5     | fridge\n6     | dishwasher\n7     | person\n\n## Action space\n\nOnly one action can be taken at each time step. The Num of the action to be taken is passed as the argument to the\n `step` function.\n\nNum   | Action                     |  Min   |  Max\n------|----------------------------|--------|-------\n0     | move_up                    |  0     |  1\n1     | move_down                  |  0     |  1\n2     | move_left                  |  0     |  1\n3     | move_right                 |  0     |  1\n4     | (A) extend_arm             |  0     |  1\n5     | (B) retract_arm            |  0     |  1\n6     | (C) grasp                  |  0     |  1\n7     | (D) drop                   |  0     |  1\n8     | (E) push                   |  0     |  1\n\n## Tasks\n\nThe tasks encoding is binary instead of label encoding (0: task1, 1: task2...) because there is no ordering for the\n tasks, but the alg. might think there is. We currently use 5 units so up to 31 tasks.\n\nNum   | Action                     |  Binary encoded\n------|----------------------------|-----------------\n0     | No tasks                   |  00000\n1     | Turn on TV                 |  00001\n2     | Bring user a drink         |  00010\n3     | Make beds                  |  00011\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mrcabo/Household-env.git", "keywords": "Reinforcement Learning environment", "license": "", "maintainer": "", "maintainer_email": "", "name": "householdenv", "package_url": "https://pypi.org/project/householdenv/", "platform": "", "project_url": "https://pypi.org/project/householdenv/", "project_urls": {"Homepage": "https://github.com/mrcabo/Household-env.git", "Source Code": "https://github.com/mrcabo/Household-env.git"}, "release_url": "https://pypi.org/project/householdenv/0.0.3/", "requires_dist": ["gym", "numpy"], "requires_python": "", "summary": "This is an environment for RL purposes", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Household-env</h1>\n<p>This is a gym environment that represents a robot agent in a household environment for RL purposes.</p>\n<h4>Table of Contents</h4>\n<p><a href=\"#how-to-run-it\" rel=\"nofollow\">How to run it</a><br>\n<a href=\"#observation-space\" rel=\"nofollow\">Observation space</a><br>\n<a href=\"#action-space\" rel=\"nofollow\">Action space</a><br>\n<a href=\"#tasks\" rel=\"nofollow\">Tasks</a></p>\n<h2>How to run it</h2>\n<p>To run an example of the environment first install it and then run the dummy file.</p>\n<pre><span class=\"ch\">#!/bin/bash</span>\npip install -e Household-env \npython3 dummy.py\n</pre>\n<h2>Observation space</h2>\n<p>The robot has a vision grid of 7x7. The vision grid inputs will return values that represent the content of that cell.</p>\n<p>The tasks encoding is binary instead of label encoding (0: task1, 1: task2...) because there is no ordering for the\ntasks, but the alg. might think there is.</p>\n<p><strong>Note</strong>: We could do the same for the vision grid, but then the observation space would increase a lot (48*3=147 for\nfor only 7 representable objects )</p>\n<table>\n<thead>\n<tr>\n<th>Num</th>\n<th>Observation</th>\n<th>Min</th>\n<th>Max</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>x_coord_robot</td>\n<td>0</td>\n<td>19</td>\n</tr>\n<tr>\n<td>1</td>\n<td>y_coord_robot</td>\n<td>0</td>\n<td>19</td>\n</tr>\n<tr>\n<td>2</td>\n<td>task_encoding</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>...</td>\n<td>...</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>6</td>\n<td>task_encoding</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>7</td>\n<td>1st action</td>\n<td>0</td>\n<td>8</td>\n</tr>\n<tr>\n<td>8</td>\n<td>2nd action</td>\n<td>0</td>\n<td>8</td>\n</tr>\n<tr>\n<td>9</td>\n<td>3rd action</td>\n<td>0</td>\n<td>8</td>\n</tr>\n<tr>\n<td>10</td>\n<td>4th action</td>\n<td>0</td>\n<td>8</td>\n</tr>\n<tr>\n<td>(vision not yet)</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>11</td>\n<td>vision_grid</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>..</td>\n<td>..</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>58</td>\n<td>vision_grid</td>\n<td>0</td>\n<td>1</td>\n</tr></tbody></table>\n<p>Objects will return the following values when within range of the 7x7 vision grid.</p>\n<table>\n<thead>\n<tr>\n<th>Num</th>\n<th>Object</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>Nothing</td>\n</tr>\n<tr>\n<td>1</td>\n<td>wall</td>\n</tr>\n<tr>\n<td>2</td>\n<td>TV</td>\n</tr>\n<tr>\n<td>3</td>\n<td>couch</td>\n</tr>\n<tr>\n<td>4</td>\n<td>bed</td>\n</tr>\n<tr>\n<td>5</td>\n<td>fridge</td>\n</tr>\n<tr>\n<td>6</td>\n<td>dishwasher</td>\n</tr>\n<tr>\n<td>7</td>\n<td>person</td>\n</tr></tbody></table>\n<h2>Action space</h2>\n<p>Only one action can be taken at each time step. The Num of the action to be taken is passed as the argument to the\n<code>step</code> function.</p>\n<table>\n<thead>\n<tr>\n<th>Num</th>\n<th>Action</th>\n<th>Min</th>\n<th>Max</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>move_up</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>move_down</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>2</td>\n<td>move_left</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>3</td>\n<td>move_right</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>4</td>\n<td>(A) extend_arm</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>5</td>\n<td>(B) retract_arm</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>6</td>\n<td>(C) grasp</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>7</td>\n<td>(D) drop</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>8</td>\n<td>(E) push</td>\n<td>0</td>\n<td>1</td>\n</tr></tbody></table>\n<h2>Tasks</h2>\n<p>The tasks encoding is binary instead of label encoding (0: task1, 1: task2...) because there is no ordering for the\ntasks, but the alg. might think there is. We currently use 5 units so up to 31 tasks.</p>\n<table>\n<thead>\n<tr>\n<th>Num</th>\n<th>Action</th>\n<th>Binary encoded</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>No tasks</td>\n<td>00000</td>\n</tr>\n<tr>\n<td>1</td>\n<td>Turn on TV</td>\n<td>00001</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Bring user a drink</td>\n<td>00010</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Make beds</td>\n<td>00011</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 7121241, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "9d19dd6e8b254e4e0b8c77acb17da526", "sha256": "a803563d605a1aaf38e745210bf530820e88925834ea4896faa28904dbb1230e"}, "downloads": -1, "filename": "householdenv-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9d19dd6e8b254e4e0b8c77acb17da526", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9063, "upload_time": "2020-04-27T16:17:43", "upload_time_iso_8601": "2020-04-27T16:17:43.865311Z", "url": "https://files.pythonhosted.org/packages/1c/d0/cb03f8c7b6e2ba2cd9e9dd5bc0810d05c42fa4bd4b5c73623f85cfd1823e/householdenv-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "126fca3e343abef5bcd17691a7451270", "sha256": "5ddac5f7d7baf6b8a5abc418c80d3a028fe8a608ed4c43410bbe131fc024e8be"}, "downloads": -1, "filename": "householdenv-0.0.1.tar.gz", "has_sig": false, "md5_digest": "126fca3e343abef5bcd17691a7451270", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6740, "upload_time": "2020-04-27T16:17:45", "upload_time_iso_8601": "2020-04-27T16:17:45.771478Z", "url": "https://files.pythonhosted.org/packages/7d/ae/d1241187b7ecdb68ec372f31d8fb65cc97eb5a717392563d8977b4465062/householdenv-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "6a15a7e4020faa5cbfd796409a5ed988", "sha256": "82073fa0ee342dd9043000909f1c5eed922287967c2bc3908feedfacf9d8a31f"}, "downloads": -1, "filename": "householdenv-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6a15a7e4020faa5cbfd796409a5ed988", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9064, "upload_time": "2020-04-28T10:24:16", "upload_time_iso_8601": "2020-04-28T10:24:16.771776Z", "url": "https://files.pythonhosted.org/packages/35/22/e4c160a390c7661a3ee03ddcacea1e0f583132796cc6faf79448c7895b5d/householdenv-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "120d3549c5ac049517c9717f9e72042a", "sha256": "b563a9973ff6adc19b90e49e82b9373958d6224ac0cdab054357983b2b2fadd0"}, "downloads": -1, "filename": "householdenv-0.0.2.tar.gz", "has_sig": false, "md5_digest": "120d3549c5ac049517c9717f9e72042a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6759, "upload_time": "2020-04-28T10:24:17", "upload_time_iso_8601": "2020-04-28T10:24:17.831142Z", "url": "https://files.pythonhosted.org/packages/cb/21/9029ff41c95397249cee9ea14fc9aea7fb8be507d5681694c5706cfbe63f/householdenv-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "8ef9a41d8e786390f9bf7fe9d4fa7a8b", "sha256": "db1cfba96a098fb5035e5fa481c726f5e2defa3bbf1bc40fef0c9982679d4eff"}, "downloads": -1, "filename": "householdenv-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "8ef9a41d8e786390f9bf7fe9d4fa7a8b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9132, "upload_time": "2020-04-28T15:48:15", "upload_time_iso_8601": "2020-04-28T15:48:15.701654Z", "url": "https://files.pythonhosted.org/packages/60/60/449f0f38905dbacc41965d3c7c415ef7ee99805e82b48fc80f6d7e1706df/householdenv-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2e7c3a710e9a99793af2517714d8e85", "sha256": "7f1a1c38e8f5e1ba6d52b26e6225ccf7e2b9a852698348dec8f39a860b468adf"}, "downloads": -1, "filename": "householdenv-0.0.3.tar.gz", "has_sig": false, "md5_digest": "a2e7c3a710e9a99793af2517714d8e85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6818, "upload_time": "2020-04-28T15:48:16", "upload_time_iso_8601": "2020-04-28T15:48:16.655118Z", "url": "https://files.pythonhosted.org/packages/bb/ae/513479ed88d39c15a2ca5f29a6db0cc57a94609bcc77b3d7a6f89456af81/householdenv-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8ef9a41d8e786390f9bf7fe9d4fa7a8b", "sha256": "db1cfba96a098fb5035e5fa481c726f5e2defa3bbf1bc40fef0c9982679d4eff"}, "downloads": -1, "filename": "householdenv-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "8ef9a41d8e786390f9bf7fe9d4fa7a8b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9132, "upload_time": "2020-04-28T15:48:15", "upload_time_iso_8601": "2020-04-28T15:48:15.701654Z", "url": "https://files.pythonhosted.org/packages/60/60/449f0f38905dbacc41965d3c7c415ef7ee99805e82b48fc80f6d7e1706df/householdenv-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2e7c3a710e9a99793af2517714d8e85", "sha256": "7f1a1c38e8f5e1ba6d52b26e6225ccf7e2b9a852698348dec8f39a860b468adf"}, "downloads": -1, "filename": "householdenv-0.0.3.tar.gz", "has_sig": false, "md5_digest": "a2e7c3a710e9a99793af2517714d8e85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6818, "upload_time": "2020-04-28T15:48:16", "upload_time_iso_8601": "2020-04-28T15:48:16.655118Z", "url": "https://files.pythonhosted.org/packages/bb/ae/513479ed88d39c15a2ca5f29a6db0cc57a94609bcc77b3d7a6f89456af81/householdenv-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:30 2020"}