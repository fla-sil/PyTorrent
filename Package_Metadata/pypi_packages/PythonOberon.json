{"info": {"author": "Simon Forman", "author_email": "sforman@hushmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Assemblers", "Topic :: Software Development :: Libraries :: pygame", "Topic :: System :: Emulators"], "description": "Python Oberon\n=============\n\nSome software for [Oberon 2013](http://www.inf.ethz.ch/personal/wirth/ProjectOberon/).\n\n-  [Documentation](https://pythonoberon.readthedocs.io/en/latest/)\n-  [Source code](https://git.sr.ht/~sforman/PythonOberon)\n-  [Bugs & issues](https://todo.sr.ht/~sforman/python-oberon)\n\n\nSee also:\n\n-  [projectoberon.com](http://projectoberon.com/)\n-  [pdewacht/oberon-risc-emu on github](https://github.com/pdewacht/oberon-risc-emu)\n-  [Project Oberon emulator in JavaScript and Java](http://schierlm.github.io/OberonEmulator/)\n-  [A resource page for Oberon-07](http://oberon07.com/)\n\n\nA hardware emulator for the new RISC processor written in Python.  If\nPygame is available it will open a screen of the standard dimensions of\n1024 x 768 pixels.  I've also implemented a very crude \"assembler\" which\nis really little more than a bunch of helper functions to emit binary\ninstructions (in the form of 32-bit-wide ints.  However, it also provides\na function dis() that will return a string representing the (integer)\ninstruction passed to it.\n\nStart with:\n\n```\npython -i -m oberon\n```\n\nThis will use `disk.img` by default.  At around 3400000 cycles the screen\nbackground begins to fill in, and at around 6500000 cycles the window\ncontent begins to be drawn:\n\n![PyGame window showing Oberon](https://git.sr.ht/~sforman/PythonOberon/blob/master/Screenshot.png \"PyGame window showing Oberon\")\n\n(The `-i` option tells Python to drop into interactive REPL mode after\nthe script has run.  You can interact with the risc object.)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://git.sr.ht/~sforman/PythonOberon", "keywords": "", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "PythonOberon", "package_url": "https://pypi.org/project/PythonOberon/", "platform": "", "project_url": "https://pypi.org/project/PythonOberon/", "project_urls": {"Homepage": "https://git.sr.ht/~sforman/PythonOberon"}, "release_url": "https://pypi.org/project/PythonOberon/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "A hardware emulator for the Oberon RISC processor.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Python Oberon</h1>\n<p>Some software for <a href=\"http://www.inf.ethz.ch/personal/wirth/ProjectOberon/\" rel=\"nofollow\">Oberon 2013</a>.</p>\n<ul>\n<li><a href=\"https://pythonoberon.readthedocs.io/en/latest/\" rel=\"nofollow\">Documentation</a></li>\n<li><a href=\"https://git.sr.ht/%7Esforman/PythonOberon\" rel=\"nofollow\">Source code</a></li>\n<li><a href=\"https://todo.sr.ht/%7Esforman/python-oberon\" rel=\"nofollow\">Bugs &amp; issues</a></li>\n</ul>\n<p>See also:</p>\n<ul>\n<li><a href=\"http://projectoberon.com/\" rel=\"nofollow\">projectoberon.com</a></li>\n<li><a href=\"https://github.com/pdewacht/oberon-risc-emu\" rel=\"nofollow\">pdewacht/oberon-risc-emu on github</a></li>\n<li><a href=\"http://schierlm.github.io/OberonEmulator/\" rel=\"nofollow\">Project Oberon emulator in JavaScript and Java</a></li>\n<li><a href=\"http://oberon07.com/\" rel=\"nofollow\">A resource page for Oberon-07</a></li>\n</ul>\n<p>A hardware emulator for the new RISC processor written in Python.  If\nPygame is available it will open a screen of the standard dimensions of\n1024 x 768 pixels.  I've also implemented a very crude \"assembler\" which\nis really little more than a bunch of helper functions to emit binary\ninstructions (in the form of 32-bit-wide ints.  However, it also provides\na function dis() that will return a string representing the (integer)\ninstruction passed to it.</p>\n<p>Start with:</p>\n<pre><code>python -i -m oberon\n</code></pre>\n<p>This will use <code>disk.img</code> by default.  At around 3400000 cycles the screen\nbackground begins to fill in, and at around 6500000 cycles the window\ncontent begins to be drawn:</p>\n<p><img alt=\"PyGame window showing Oberon\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/28c7370c6ceb4b8a23b0f9304935ca626ddc7c6a/68747470733a2f2f6769742e73722e68742f25374573666f726d616e2f507974686f6e4f6265726f6e2f626c6f622f6d61737465722f53637265656e73686f742e706e67\"></p>\n<p>(The <code>-i</code> option tells Python to drop into interactive REPL mode after\nthe script has run.  You can interact with the risc object.)</p>\n\n          </div>"}, "last_serial": 5265784, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "56715d138e6f2663dae7bfa8611b9546", "sha256": "16717de13dccf4d8536b235bd92200600cce21aa271b8d7088a4df003c45e1f2"}, "downloads": -1, "filename": "PythonOberon-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "56715d138e6f2663dae7bfa8611b9546", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 242233, "upload_time": "2019-05-14T06:34:07", "upload_time_iso_8601": "2019-05-14T06:34:07.898148Z", "url": "https://files.pythonhosted.org/packages/36/b5/80474eea340e8d3eb9d349b2702051c783ce95ac63a934feb294e8879947/PythonOberon-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "165bd326bff44cf547958de803111b2d", "sha256": "2cb4b6f9881729c1d37e37a3c065a742da40a3125659f985cdcea450ec8466f3"}, "downloads": -1, "filename": "PythonOberon-0.1.0.tar.gz", "has_sig": false, "md5_digest": "165bd326bff44cf547958de803111b2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 225078, "upload_time": "2019-05-14T06:34:10", "upload_time_iso_8601": "2019-05-14T06:34:10.477052Z", "url": "https://files.pythonhosted.org/packages/db/e6/5f601a6206d47411253096c0016489d31f94cd9d4431ee33d25245cfc3ae/PythonOberon-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "56715d138e6f2663dae7bfa8611b9546", "sha256": "16717de13dccf4d8536b235bd92200600cce21aa271b8d7088a4df003c45e1f2"}, "downloads": -1, "filename": "PythonOberon-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "56715d138e6f2663dae7bfa8611b9546", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 242233, "upload_time": "2019-05-14T06:34:07", "upload_time_iso_8601": "2019-05-14T06:34:07.898148Z", "url": "https://files.pythonhosted.org/packages/36/b5/80474eea340e8d3eb9d349b2702051c783ce95ac63a934feb294e8879947/PythonOberon-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "165bd326bff44cf547958de803111b2d", "sha256": "2cb4b6f9881729c1d37e37a3c065a742da40a3125659f985cdcea450ec8466f3"}, "downloads": -1, "filename": "PythonOberon-0.1.0.tar.gz", "has_sig": false, "md5_digest": "165bd326bff44cf547958de803111b2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 225078, "upload_time": "2019-05-14T06:34:10", "upload_time_iso_8601": "2019-05-14T06:34:10.477052Z", "url": "https://files.pythonhosted.org/packages/db/e6/5f601a6206d47411253096c0016489d31f94cd9d4431ee33d25245cfc3ae/PythonOberon-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:18 2020"}