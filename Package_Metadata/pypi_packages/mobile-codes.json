{"info": {"author": "Andy McKay", "author_email": "andym@mozilla.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "Contains the country codes from ISO 3166-1 based on the code based on:\n\nhttps://github.com/deactivated/python-iso3166/\n\nBut also has the MCC and MNC codes based on the Wikipedia page:\n\nhttp://en.wikipedia.org/wiki/List_of_mobile_country_codes\n\nAs well as the latest released listing from ITU:\n\nhttp://www.itu.int/dms_pub/itu-t/opb/sp/T-SP-E.212B-2014-PDF-E.pdf\n\nNote that MCC codes for a country can be:\n\n* None (no MCC code)\n* a string (where a country has one code)\n* a tuple of strings (where a country has more than one code)\n\nInstallation\n============\n\n::\n\n    $ pip install mobile-codes\n\nUsage\n=====\n\n::\n\n    >>> import mobile_codes\n\nLookup by Mobile Country Code (MCC)::\n\n    >>> mobile_codes.mcc(\"648\")\n    [Country(name=u'Zimbabwe', alpha2='ZW', alpha3='ZWE', numeric='716', mcc='648')]\n    >>> mobile_codes.mcc(\"311\")\n    [Country(name=u'Guam', alpha2='GU', alpha3='GUM', numeric='316', mcc=('310', '311')),\n     Country(name=u'United States', alpha2='US', alpha3='USA', numeric='840', mcc=('310', '311', '313', '316'))]\n    >>> mobile_codes.mcc(\"313\")\n    [Country(name=u'United States', alpha2='US', alpha3='USA', numeric='840', mcc=('310', '311', '313', '316'))]\n\nLookup by name, alpha2, alpha3 (all case insensitive)::\n\n    >>> mobile_codes.alpha3(\"CAN\")\n    Country(name=u'Canada', alpha2='CA', alpha3='CAN', numeric='124', mcc='302')\n    >>> mobile_codes.alpha2(\"CA\")\n    Country(name=u'Canada', alpha2='CA', alpha3='CAN', numeric='124', mcc='302')\n    >>> mobile_codes.name('canada')\n    Country(name=u'Canada', alpha2='CA', alpha3='CAN', numeric='124', mcc='302')\n\nLookup operators by mcc (returns a list of all operators)::\n\n    >>> mobile_codes.operators('302')\n    [Operator(mcc='302', mnc='220', brand='Telus', operator=u'Telus'),\n     Operator(mcc='302', mnc='221', brand='Telus', operator=u'Telus'),...\n\nLookup operator by mcc and Mobile Network Code (MNC)::\n\n    >>> mobile_codes.mcc_mnc('722', '070')\n    Operator(mcc='722', mnc='070', brand='Movistar', operator=u'Movistar')\n\nAll lookups raise a KeyError if the requested value is not found.\n\nDevelopment\n===========\n\nIf you want to do development on the library, follow these steps:\n\n* Create a virtualenv\n* bin/pip install -r requirements/tests.txt\n* bin/nosetests -s mobile_codes\n\nContributors\n============\n\n* Hanno Schlichting (hannosch)\n* Jared Kerim (jaredkerim)\n\nChanges\n=======\n\n0.6 - 2014-10-14\n----------------\n\n- Move network and country constants into JSON files\n- Incorporate ITU data for operators\n\n0.5 - unreleased\n----------------\n\n\n0.4 - 2014-06-13\n----------------\n\n- Declare compatibility with Python 3.4.\n- Fix a number of country to mcc mappings.\n- Issue #9: Fix typo in mcc for Yemen.\n- Issue #10: Allow 310 as a mcc value for Puerto Rico.\n\n0.3 - 2014-05-14\n----------------\n\n- Changed mcc API to always return a list, possibly empty, possibly\n  containing multiple countries.\n\n0.2.2 - 2014-04-22\n------------------\n\n- Some tests, docs changes and updates to the records, thanks hannosch.\n\n0.2 - 2013-10-26\n----------------\n\n- Added in MNC codes and a script to scrape them.\n\n0.1 - 2013-10-22\n----------------\n\n- Added in MCC codes and a lookup.\n\n- Made completely lazy, no records generated or indexed until first asked for.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/andymckay/mobile-codes", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "mobile-codes", "package_url": "https://pypi.org/project/mobile-codes/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mobile-codes/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/andymckay/mobile-codes"}, "release_url": "https://pypi.org/project/mobile-codes/0.7/", "requires_dist": null, "requires_python": null, "summary": "Library of ISO 3166, MCC and MNC codes", "version": "0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Contains the country codes from ISO 3166-1 based on the code based on:</p>\n<p><a href=\"https://github.com/deactivated/python-iso3166/\" rel=\"nofollow\">https://github.com/deactivated/python-iso3166/</a></p>\n<p>But also has the MCC and MNC codes based on the Wikipedia page:</p>\n<p><a href=\"http://en.wikipedia.org/wiki/List_of_mobile_country_codes\" rel=\"nofollow\">http://en.wikipedia.org/wiki/List_of_mobile_country_codes</a></p>\n<p>As well as the latest released listing from ITU:</p>\n<p><a href=\"http://www.itu.int/dms_pub/itu-t/opb/sp/T-SP-E.212B-2014-PDF-E.pdf\" rel=\"nofollow\">http://www.itu.int/dms_pub/itu-t/opb/sp/T-SP-E.212B-2014-PDF-E.pdf</a></p>\n<p>Note that MCC codes for a country can be:</p>\n<ul>\n<li>None (no MCC code)</li>\n<li>a string (where a country has one code)</li>\n<li>a tuple of strings (where a country has more than one code)</li>\n</ul>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install mobile-codes\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>&gt;&gt;&gt; import mobile_codes\n</pre>\n<p>Lookup by Mobile Country Code (MCC):</p>\n<pre>&gt;&gt;&gt; mobile_codes.mcc(\"648\")\n[Country(name=u'Zimbabwe', alpha2='ZW', alpha3='ZWE', numeric='716', mcc='648')]\n&gt;&gt;&gt; mobile_codes.mcc(\"311\")\n[Country(name=u'Guam', alpha2='GU', alpha3='GUM', numeric='316', mcc=('310', '311')),\n Country(name=u'United States', alpha2='US', alpha3='USA', numeric='840', mcc=('310', '311', '313', '316'))]\n&gt;&gt;&gt; mobile_codes.mcc(\"313\")\n[Country(name=u'United States', alpha2='US', alpha3='USA', numeric='840', mcc=('310', '311', '313', '316'))]\n</pre>\n<p>Lookup by name, alpha2, alpha3 (all case insensitive):</p>\n<pre>&gt;&gt;&gt; mobile_codes.alpha3(\"CAN\")\nCountry(name=u'Canada', alpha2='CA', alpha3='CAN', numeric='124', mcc='302')\n&gt;&gt;&gt; mobile_codes.alpha2(\"CA\")\nCountry(name=u'Canada', alpha2='CA', alpha3='CAN', numeric='124', mcc='302')\n&gt;&gt;&gt; mobile_codes.name('canada')\nCountry(name=u'Canada', alpha2='CA', alpha3='CAN', numeric='124', mcc='302')\n</pre>\n<p>Lookup operators by mcc (returns a list of all operators):</p>\n<pre>&gt;&gt;&gt; mobile_codes.operators('302')\n[Operator(mcc='302', mnc='220', brand='Telus', operator=u'Telus'),\n Operator(mcc='302', mnc='221', brand='Telus', operator=u'Telus'),...\n</pre>\n<p>Lookup operator by mcc and Mobile Network Code (MNC):</p>\n<pre>&gt;&gt;&gt; mobile_codes.mcc_mnc('722', '070')\nOperator(mcc='722', mnc='070', brand='Movistar', operator=u'Movistar')\n</pre>\n<p>All lookups raise a KeyError if the requested value is not found.</p>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>If you want to do development on the library, follow these steps:</p>\n<ul>\n<li>Create a virtualenv</li>\n<li>bin/pip install -r requirements/tests.txt</li>\n<li>bin/nosetests -s mobile_codes</li>\n</ul>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<ul>\n<li>Hanno Schlichting (hannosch)</li>\n<li>Jared Kerim (jaredkerim)</li>\n</ul>\n</div>\n<div id=\"changes\">\n<h2>Changes</h2>\n<div id=\"id1\">\n<h3>0.6 - 2014-10-14</h3>\n<ul>\n<li>Move network and country constants into JSON files</li>\n<li>Incorporate ITU data for operators</li>\n</ul>\n</div>\n<div id=\"unreleased\">\n<h3>0.5 - unreleased</h3>\n</div>\n<div id=\"id2\">\n<h3>0.4 - 2014-06-13</h3>\n<ul>\n<li>Declare compatibility with Python 3.4.</li>\n<li>Fix a number of country to mcc mappings.</li>\n<li>Issue #9: Fix typo in mcc for Yemen.</li>\n<li>Issue #10: Allow 310 as a mcc value for Puerto Rico.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.3 - 2014-05-14</h3>\n<ul>\n<li>Changed mcc API to always return a list, possibly empty, possibly\ncontaining multiple countries.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.2.2 - 2014-04-22</h3>\n<ul>\n<li>Some tests, docs changes and updates to the records, thanks hannosch.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.2 - 2013-10-26</h3>\n<ul>\n<li>Added in MNC codes and a script to scrape them.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.1 - 2013-10-22</h3>\n<ul>\n<li>Added in MCC codes and a lookup.</li>\n<li>Made completely lazy, no records generated or indexed until first asked for.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1294494, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "44bf90f61eb7efcccf64909ee0e1d070", "sha256": "f2cf8586ee2f1fd1d85f5df12ed354e216c0118b0ed8aefd7e4fd7c2cbc7baff"}, "downloads": -1, "filename": "mobile-codes-0.1.tar.gz", "has_sig": false, "md5_digest": "44bf90f61eb7efcccf64909ee0e1d070", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7419, "upload_time": "2013-10-22T00:21:41", "upload_time_iso_8601": "2013-10-22T00:21:41.667163Z", "url": "https://files.pythonhosted.org/packages/35/79/44efd962f0614ae596c4607ac6e47bed10475d705eaedff4670f4c3b2ca5/mobile-codes-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "477ceb6a7c3bcc30e62ba0d00c2c6804", "sha256": "28dcd56dc1242d18ef9e1cd2b58a301dbc659c5562d173e29a2dd70a84c7d04b"}, "downloads": -1, "filename": "mobile-codes-0.1.1.tar.gz", "has_sig": false, "md5_digest": "477ceb6a7c3bcc30e62ba0d00c2c6804", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7399, "upload_time": "2013-10-22T00:24:09", "upload_time_iso_8601": "2013-10-22T00:24:09.014516Z", "url": "https://files.pythonhosted.org/packages/cd/14/e2432a5f655815858b261474816f8e2c2648971da4ca6b1976c19a4980ec/mobile-codes-0.1.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "b24b0a1765947eab93bd33242ba5748f", "sha256": "0a274876dd9c20e39a20f4c582281da7f9e89101a273f8f05b9d9019142254b4"}, "downloads": -1, "filename": "mobile-codes-0.2.tar.gz", "has_sig": false, "md5_digest": "b24b0a1765947eab93bd33242ba5748f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28386, "upload_time": "2013-10-26T00:15:17", "upload_time_iso_8601": "2013-10-26T00:15:17.994664Z", "url": "https://files.pythonhosted.org/packages/de/e4/7c78ecb4691ca5617e29a1bcbbf1256a0e747b8754570c9725db938c6d59/mobile-codes-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "8650ea5922d3c967eb98d00af6900c85", "sha256": "0aa9cde4a3697c84fb6d6cbbcca63a3859498926aa2dc8aeb90aa53fdab9f2e9"}, "downloads": -1, "filename": "mobile-codes-0.2.1.tar.gz", "has_sig": false, "md5_digest": "8650ea5922d3c967eb98d00af6900c85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28407, "upload_time": "2013-10-26T00:19:20", "upload_time_iso_8601": "2013-10-26T00:19:20.297501Z", "url": "https://files.pythonhosted.org/packages/80/5e/ed9b46ec16df6d6015c8c45febdad6784b87c92bcbedbe89c95815db8b62/mobile-codes-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "358d6c72891f752ad1143219668221a8", "sha256": "3f99cde1f927f71a2a4192e7e92fe433f647983e06f7865047a22f964b5af851"}, "downloads": -1, "filename": "mobile-codes-0.2.2.tar.gz", "has_sig": false, "md5_digest": "358d6c72891f752ad1143219668221a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29895, "upload_time": "2014-04-22T17:33:28", "upload_time_iso_8601": "2014-04-22T17:33:28.450938Z", "url": "https://files.pythonhosted.org/packages/67/43/a8e5446e3614799b6401e919df1d75e05b3d8f3466127b8996d80ba18e97/mobile-codes-0.2.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "66da34307812fd52bd53423620b81be5", "sha256": "18728b51d922205dd5b2d23e7a08d3138f13e55d59d6bc4e09c8050b18eab866"}, "downloads": -1, "filename": "mobile-codes-0.3.tar.gz", "has_sig": false, "md5_digest": "66da34307812fd52bd53423620b81be5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30133, "upload_time": "2014-05-14T18:35:04", "upload_time_iso_8601": "2014-05-14T18:35:04.191086Z", "url": "https://files.pythonhosted.org/packages/c4/b0/7cafdaf21b42e399e251a5fdcfd1bc567cdb31b3f389e2449d6f62dade40/mobile-codes-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "342f5024c6d9349f7b9d70390437f883", "sha256": "7349fdaeb710f84a57aacb0ca6c040f90e7ce5bd4891bb14b67503c30fb7738c"}, "downloads": -1, "filename": "mobile-codes-0.4.zip", "has_sig": true, "md5_digest": "342f5024c6d9349f7b9d70390437f883", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35472, "upload_time": "2014-06-13T18:04:02", "upload_time_iso_8601": "2014-06-13T18:04:02.385101Z", "url": "https://files.pythonhosted.org/packages/db/e2/820cd65cc2e1fd903ad25d1f836e16d90f139922ed8ae748d41758b9e5a3/mobile-codes-0.4.zip", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "396a45e87ea49a1e6bf5fef781096115", "sha256": "24f86a85cc98afae2e991307b15414c6870db83db35d9878ea49c6c945717a71"}, "downloads": -1, "filename": "mobile-codes-0.7.tar.gz", "has_sig": false, "md5_digest": "396a45e87ea49a1e6bf5fef781096115", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 82022, "upload_time": "2014-11-04T20:22:21", "upload_time_iso_8601": "2014-11-04T20:22:21.089062Z", "url": "https://files.pythonhosted.org/packages/ad/66/33224ff6f5d4831a8721b273b5e95c10ab7bdfe0591e2706eb709c9cc192/mobile-codes-0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "396a45e87ea49a1e6bf5fef781096115", "sha256": "24f86a85cc98afae2e991307b15414c6870db83db35d9878ea49c6c945717a71"}, "downloads": -1, "filename": "mobile-codes-0.7.tar.gz", "has_sig": false, "md5_digest": "396a45e87ea49a1e6bf5fef781096115", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 82022, "upload_time": "2014-11-04T20:22:21", "upload_time_iso_8601": "2014-11-04T20:22:21.089062Z", "url": "https://files.pythonhosted.org/packages/ad/66/33224ff6f5d4831a8721b273b5e95c10ab7bdfe0591e2706eb709c9cc192/mobile-codes-0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:07 2020"}