{"info": {"author": "Evan Dempsey", "author_email": "me@evandempsey.io", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "===============================\r\nPorter2 Stemmer\r\n===============================\r\n\r\n.. image:: https://travis-ci.org/evandempsey/porter2-stemmer.svg\r\n        :target: https://travis-ci.org/evandempsey/porter2-stemmer\r\n\r\n.. image:: https://img.shields.io/pypi/v/porter2stemmer.svg\r\n        :target: https://pypi.python.org/pypi/porter2stemmer\r\n\r\n\r\nAn implementation of the Porter2 English stemming algorithm.\r\n\r\n* Free software: BSD license\r\n* Documentation: http://porter2-stemmer.readthedocs.org/\r\n\r\nWhat is stemming?\r\n*****************\r\n\r\nStemming is a technique used in Natural Language Processing to reduce different inflected forms of words to a single\r\ninvariant root form. The root form is called the stem and may or may not be identical to the morphological root of the\r\nword.\r\n\r\nWhat is it good for?\r\n********************\r\n\r\nLots of things, but query expansion in information retrieval is the canonical example. Let's say you are building a\r\nsearch engine. If someone searches for \"cat\" it would be nice if they were shown documents that contained the word \"cats\"\r\ntoo. Unless the query and document index are stemmed, that won't happen. Stemming can be thought of as a method to reduce\r\nthe specificity of queries in order to pull back more relevant results. As such, it involves a trade-off.\r\n\r\nWhat type of stemmer is this?\r\n*****************************\r\n\r\nPorter2 is a suffix-stripping stemmer. It transforms words into stems by applying a deterministic sequence of\r\nchanges to the final portion of the word. Other stemmers work differently. They may, for instance, simply look up\r\nthe inflected form in a table and map it to a morphological root, or they may use a clustering approach to\r\nmap diverse forms to a centre form. Different approaches have different advantages and disadvantages.\r\n\r\nHow do I use it?\r\n****************\r\n\r\nVery simply. Import it, instantiate a stemmer, and away you go::\r\n\r\n    from porter2stemmer import Porter2Stemmer\r\n    stemmer = Porter2Stemmer()\r\n    print(stemmer.stem('conspicuous'))\r\n\r\n\r\n\r\n\r\nHistory\r\n-------\r\n\r\n1.0 (2016-03-31)\r\n---------------------\r\n\r\n* First release on PyPI.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/evandempsey/porter2-stemmer", "keywords": "porter2stemmer", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "porter2stemmer", "package_url": "https://pypi.org/project/porter2stemmer/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/porter2stemmer/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/evandempsey/porter2-stemmer"}, "release_url": "https://pypi.org/project/porter2stemmer/1.0/", "requires_dist": null, "requires_python": null, "summary": "An implementation of the Porter2 English stemming algorithm.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/evandempsey/porter2-stemmer\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/evandempsey/porter2-stemmer.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c395c27548284d519d0b89d1eaa47b85e9348c8b/68747470733a2f2f7472617669732d63692e6f72672f6576616e64656d707365792f706f72746572322d7374656d6d65722e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/porter2stemmer\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/porter2stemmer.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2a416c7d0081e49b4a786060ec64bd28a35917f5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f706f72746572327374656d6d65722e737667\"></a>\n<p>An implementation of the Porter2 English stemming algorithm.</p>\n<ul>\n<li>Free software: BSD license</li>\n<li>Documentation: <a href=\"http://porter2-stemmer.readthedocs.org/\" rel=\"nofollow\">http://porter2-stemmer.readthedocs.org/</a></li>\n</ul>\n<div id=\"what-is-stemming\">\n<h2>What is stemming?</h2>\n<p>Stemming is a technique used in Natural Language Processing to reduce different inflected forms of words to a single\ninvariant root form. The root form is called the stem and may or may not be identical to the morphological root of the\nword.</p>\n</div>\n<div id=\"what-is-it-good-for\">\n<h2>What is it good for?</h2>\n<p>Lots of things, but query expansion in information retrieval is the canonical example. Let\u2019s say you are building a\nsearch engine. If someone searches for \u201ccat\u201d it would be nice if they were shown documents that contained the word \u201ccats\u201d\ntoo. Unless the query and document index are stemmed, that won\u2019t happen. Stemming can be thought of as a method to reduce\nthe specificity of queries in order to pull back more relevant results. As such, it involves a trade-off.</p>\n</div>\n<div id=\"what-type-of-stemmer-is-this\">\n<h2>What type of stemmer is this?</h2>\n<p>Porter2 is a suffix-stripping stemmer. It transforms words into stems by applying a deterministic sequence of\nchanges to the final portion of the word. Other stemmers work differently. They may, for instance, simply look up\nthe inflected form in a table and map it to a morphological root, or they may use a clustering approach to\nmap diverse forms to a centre form. Different approaches have different advantages and disadvantages.</p>\n</div>\n<div id=\"how-do-i-use-it\">\n<h2>How do I use it?</h2>\n<p>Very simply. Import it, instantiate a stemmer, and away you go:</p>\n<pre>from porter2stemmer import Porter2Stemmer\nstemmer = Porter2Stemmer()\nprint(stemmer.stem('conspicuous'))\n</pre>\n<div id=\"history\">\n<h3>History</h3>\n</div>\n<div id=\"id1\">\n<h3>1.0 (2016-03-31)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2038187, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "de8c54975b95084445d6b690e4325321", "sha256": "561b2537767a086e3bd33558e8f3cd4cb60ee2b0240c4c06eb98754601db34dd"}, "downloads": -1, "filename": "porter2stemmer-1.0-py2.7.egg", "has_sig": false, "md5_digest": "de8c54975b95084445d6b690e4325321", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 9296, "upload_time": "2016-03-31T12:17:23", "upload_time_iso_8601": "2016-03-31T12:17:23.202997Z", "url": "https://files.pythonhosted.org/packages/29/56/6268d7bd5974bc947b87718b25d85dd21c154e5054debb19d6d0cf7fc5d3/porter2stemmer-1.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ad7bf4262158f879e5e62112d5ade28", "sha256": "ba478ad6550258a1fd8e102e554387dd9ac73f73059483eefee98211f0ad5244"}, "downloads": -1, "filename": "porter2stemmer-1.0.tar.gz", "has_sig": false, "md5_digest": "7ad7bf4262158f879e5e62112d5ade28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14299, "upload_time": "2016-03-31T12:15:56", "upload_time_iso_8601": "2016-03-31T12:15:56.579856Z", "url": "https://files.pythonhosted.org/packages/d7/e8/ce7cc2c30bee2cdb68686340480e1183b3af3be530c54ef06ffa1658c836/porter2stemmer-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "de8c54975b95084445d6b690e4325321", "sha256": "561b2537767a086e3bd33558e8f3cd4cb60ee2b0240c4c06eb98754601db34dd"}, "downloads": -1, "filename": "porter2stemmer-1.0-py2.7.egg", "has_sig": false, "md5_digest": "de8c54975b95084445d6b690e4325321", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 9296, "upload_time": "2016-03-31T12:17:23", "upload_time_iso_8601": "2016-03-31T12:17:23.202997Z", "url": "https://files.pythonhosted.org/packages/29/56/6268d7bd5974bc947b87718b25d85dd21c154e5054debb19d6d0cf7fc5d3/porter2stemmer-1.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ad7bf4262158f879e5e62112d5ade28", "sha256": "ba478ad6550258a1fd8e102e554387dd9ac73f73059483eefee98211f0ad5244"}, "downloads": -1, "filename": "porter2stemmer-1.0.tar.gz", "has_sig": false, "md5_digest": "7ad7bf4262158f879e5e62112d5ade28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14299, "upload_time": "2016-03-31T12:15:56", "upload_time_iso_8601": "2016-03-31T12:15:56.579856Z", "url": "https://files.pythonhosted.org/packages/d7/e8/ce7cc2c30bee2cdb68686340480e1183b3af3be530c54ef06ffa1658c836/porter2stemmer-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:51:27 2020"}