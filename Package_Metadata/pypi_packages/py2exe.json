{"info": {"author": "Thomas Heller", "author_email": "theller@ctypes.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "License :: OSI Approved :: MIT License", "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)", "Operating System :: Microsoft :: Windows", "Programming Language :: C", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Software Development", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Software Distribution", "Topic :: Utilities"], "description": "py2exe for Python 3\n===================\n\n`py2exe` is a distutils extension which allows to build standalone\nWindows executable programs (32-bit and 64-bit) from Python scripts;\nPython 3.3 and later are supported.  It can build console executables,\nwindows (GUI) executables, windows services, and DLL/EXE COM servers.\n\npy2exe for Python 2 is still available at\nhttp://sourceforge.net/project/showfiles.php?group_id=15583.\n\n.. contents::\n\nChanges\n-------\n\nVersion 0.9.2.2: Added support for six, cffi, pycparser, openssl.\nSupport cmdline_style (\"py2exe\", \"pywin32\", \"custom\") again for\nwindows services.\nSeveral bugfixes, better error messages.\n\n\nNews\n----\n\nThe C-runtime library for Python 3 does NOT need a windows manifest\nany longer to load correctly (this is a feature of Python, not of\npy2exe).\n\n`py2exe` now contains a hooks module which contains information about\nsome standard packages.  The goal is to fine-tune the build process so\nthat no (at least less) warnings are emitted from modulefinder.\n\nThanks to a brand new modulefinder (based on Python's importlib)\npy2exe can now find and extract modules even from packages you have\ninstalled as zipped eggs.\n\npy2exe now longer uses a `build` directory for temporary files.\n\nIt is planned to achive full compatibility with the setup-scripts for\nPython 2; however this is probably not yet the case.\n\n\nIn addition to your beloved setup.py scripts :-), there is now also a\ncommand-line utility which allows to build the exe without any effort.\n\nRunning\n\n::\n\n   py -3.4 -m py2exe.build_exe myscript.py\n\nor (if you have the Python ``Scripts`` directory on your PATH):\n\n::\n\n   build_exe myscript.py\n\n\nwill create an executable `myscript.exe` in the `dist` subdirectory.\n\nIf you add the ``-W <setup-script.py>`` switch to the above command\nline a *commented* ``setup.py`` script will be generated which can be\nused to further customize the exe:\n\n::\n\n   py -3.4 -m py2exe myscript.py -W mysetup.py\n   ... edit myssetup.py\n   py -3.4 mysetup.py py2exe\n\n\nInstallation\n------------\n\n::\n\n    py -3.4 -m pip install py2exe\n\nor\n\n::\n\n    pip install py2exe\n\n\nUsing the builder\n-----------------\n\nBuild runtime archive for a script:\n\n::\n\n        build_exe [-h] [-i modname] [-x modname] [-p package_name] [-O] [-s]\n                  [-r] [-f modname] [-v] [-c] [-d DESTDIR] [-l LIBNAME]\n                  [-b {0,1,2,3}] [-W setup_path]\n\t\t  [-svc service]\n                  [script [script ...]]\n\n\npositional arguments:\n  script\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i modname, --include modname\n                        module to include\n  -x modname, --exclude modname\n                        module to exclude\n  -p package_name, --package package_name\n                        module to exclude\n  -O, --optimize        use optimized bytecode\n  -s, --summary         print a single line listing how many modules were\n                        found and how many modules are missing\n  -r, --report          print a detailed report listing all found modules, the\n                        missing modules, and which module imported them.\n  -f modname, --from modname\n                        print where the module <modname> is imported.\n  -v                    verbose output\n  -c, --compress        create a compressed library\n  -d DESTDIR, --dest DESTDIR\n                        destination directory\n  -l LIBNAME, --library LIBNAME\n                        relative pathname of the python archive\n\n  -b option, --bundle-files option\n                       How to bundle the files:\n                         3 - create script.exe, python.dll, extensions.pyd, others.dll.\n                         2 - create script.exe, python.dll, others.dll.\n                         1 - create script.exe, others.dll.\n                         0 - create script.exe.\n\n  -W setup_path, --write-setup-script setup_path\n                        Do not build the executables; instead write a setup\n                        script that allows further customizations of the build\n                        process.\n\n  -svc svnmodule, --service svcmodule\n                        The name of a module that contains a service\n\nUsing a setup-script\n--------------------\n\nCreating an executable (or more than one at the same time) with a\nsetup-script works in the same way as for Python 2.  The command-line\nswitches are the same as before; but they are *NOT* compatible with\nthe command-line switches for the builder mentioned above.\n\nDocumentation about the setup-script and other usage tips are in the\nwiki pages at http://www.py2exe.org.\n\n\nThe bundle-files option explained\n---------------------------------\n\nThe applications that py2exe creates will always need the following\nparts:\n\n1. The exe-file(s) itself. py2exe can build several executables at the\n   same time; this is especially useful if these are related to each\n   other since some parts can be shared.\n2. The python-dll.\n3. The pure python modules needed to run the app.  The byte-code for these\n   modules is always packed into a zip-archive.\n4. Compiled python-extension modules.\n5. Supporting dlls, if any.\n\nThe bundle-files option determines how these files are packed together\nfor your application.  This is explained with a script ``test_sqlite.py``\nthat simply contains this code:\n\n::\n\n    import sqlite3\n    print(sqlite3)\n\nThe command to build the exe-file is:\n\n::\n\n    py2exe.build_exe test_sqlite.py -c --bundle-files <option>\n\nThe ``-c`` option specifies to create a compressed zip-archive.\n\n``--bundle-files 3`` is the simplest way.  These files will be\ncreated in a ``dist`` subdirectory, about 8 MB total size:\n\n::\n\n    test_sqlite.exe\n    _bz2.pyd\n    _ctypes.pyd\n    _hashlib.pyd\n    _lzma.pyd\n    _socket.pyd\n    _sqlite3.pyd\n    _ssl.pyd\n    _win32sysloader.pyd  \n    pyexpat.pyd\n    python34.dll\n    pywintypes34.dll\n    select.pyd\n    sqlite3.dll\n    unicodedata.pyd\n    win32api.pyd\n    win32evtlog.pyd\n\nThe zip-archive is appended to the test_sqlite.exe file itself, which\nhas a size of 1.5 MB in this case.\n\n``--bundle-files 2`` will include all the Python extensions into the\nappended zip-archive; they are loaded via special code at runtime\n*without* being unpacked to the file-system.  The files in the\n``dist`` directory now are these:\n\n::\n\n    test_sqlite.exe\n    python34.dll\n    sqlite3.dll\n\n``--bundle-files 1`` will additionally pack the python-dll into the\nzip-archive:\n\n::\n\n    test_sqlite.exe\n    sqlite3.dll\n\n``--bundle-files 0`` now finally creates a real single-file executable\nof 6 MB:\n\n::\n\n    test_sqlite.exe\n\nIf you are building several related executables that you plan to\ndistribute together, it may make sense to specify a zip-archive shared\nby all the exes with the ``--library libname`` option.  The\nexecutables will then become quite small (about 25 kB), since nearly\nall code will be in the separate shared archive.\n\n*Note that not all applications will work with ``bundle-files`` set to\n0 or 1*. Be sure to test them.\n\n\n\nBugs\n----\n\nBuilding isapi extensions is not supported: I don't use them so I will\nnot implement this.\n\nThe modulefinder does not yet support PEP420 implicit namespace packages.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.py2exe.org/", "keywords": null, "license": "MIT/X11", "maintainer": null, "maintainer_email": null, "name": "py2exe", "package_url": "https://pypi.org/project/py2exe/", "platform": "Windows", "project_url": "https://pypi.org/project/py2exe/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.py2exe.org/"}, "release_url": "https://pypi.org/project/py2exe/0.9.2.2/", "requires_dist": null, "requires_python": null, "summary": "Build standalone executables for Windows (python 3 version)", "version": "0.9.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><cite>py2exe</cite> is a distutils extension which allows to build standalone\nWindows executable programs (32-bit and 64-bit) from Python scripts;\nPython 3.3 and later are supported.  It can build console executables,\nwindows (GUI) executables, windows services, and DLL/EXE COM servers.</p>\n<p>py2exe for Python 2 is still available at\n<a href=\"http://sourceforge.net/project/showfiles.php?group_id=15583\" rel=\"nofollow\">http://sourceforge.net/project/showfiles.php?group_id=15583</a>.</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#changes\" id=\"id1\" rel=\"nofollow\">Changes</a></li>\n<li><a href=\"#news\" id=\"id2\" rel=\"nofollow\">News</a></li>\n<li><a href=\"#installation\" id=\"id3\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#using-the-builder\" id=\"id4\" rel=\"nofollow\">Using the builder</a></li>\n<li><a href=\"#using-a-setup-script\" id=\"id5\" rel=\"nofollow\">Using a setup-script</a></li>\n<li><a href=\"#the-bundle-files-option-explained\" id=\"id6\" rel=\"nofollow\">The bundle-files option explained</a></li>\n<li><a href=\"#bugs\" id=\"id7\" rel=\"nofollow\">Bugs</a></li>\n</ul>\n</div>\n<div id=\"changes\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Changes</a></h2>\n<p>Version 0.9.2.2: Added support for six, cffi, pycparser, openssl.\nSupport cmdline_style (\u201cpy2exe\u201d, \u201cpywin32\u201d, \u201ccustom\u201d) again for\nwindows services.\nSeveral bugfixes, better error messages.</p>\n</div>\n<div id=\"news\">\n<h2><a href=\"#id2\" rel=\"nofollow\">News</a></h2>\n<p>The C-runtime library for Python 3 does NOT need a windows manifest\nany longer to load correctly (this is a feature of Python, not of\npy2exe).</p>\n<p><cite>py2exe</cite> now contains a hooks module which contains information about\nsome standard packages.  The goal is to fine-tune the build process so\nthat no (at least less) warnings are emitted from modulefinder.</p>\n<p>Thanks to a brand new modulefinder (based on Python\u2019s importlib)\npy2exe can now find and extract modules even from packages you have\ninstalled as zipped eggs.</p>\n<p>py2exe now longer uses a <cite>build</cite> directory for temporary files.</p>\n<p>It is planned to achive full compatibility with the setup-scripts for\nPython 2; however this is probably not yet the case.</p>\n<p>In addition to your beloved setup.py scripts :-), there is now also a\ncommand-line utility which allows to build the exe without any effort.</p>\n<p>Running</p>\n<pre>py -3.4 -m py2exe.build_exe myscript.py\n</pre>\n<p>or (if you have the Python <tt>Scripts</tt> directory on your PATH):</p>\n<pre>build_exe myscript.py\n</pre>\n<p>will create an executable <cite>myscript.exe</cite> in the <cite>dist</cite> subdirectory.</p>\n<p>If you add the <tt><span class=\"pre\">-W</span> <span class=\"pre\">&lt;setup-script.py&gt;</span></tt> switch to the above command\nline a <em>commented</em> <tt>setup.py</tt> script will be generated which can be\nused to further customize the exe:</p>\n<pre>py -3.4 -m py2exe myscript.py -W mysetup.py\n... edit myssetup.py\npy -3.4 mysetup.py py2exe\n</pre>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Installation</a></h2>\n<pre>py -3.4 -m pip install py2exe\n</pre>\n<p>or</p>\n<pre>pip install py2exe\n</pre>\n</div>\n<div id=\"using-the-builder\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Using the builder</a></h2>\n<p>Build runtime archive for a script:</p>\n<pre>build_exe [-h] [-i modname] [-x modname] [-p package_name] [-O] [-s]\n          [-r] [-f modname] [-v] [-c] [-d DESTDIR] [-l LIBNAME]\n          [-b {0,1,2,3}] [-W setup_path]\n          [-svc service]\n          [script [script ...]]\n</pre>\n<dl>\n<dt>positional arguments:</dt>\n<dd>script</dd>\n<dt>optional arguments:</dt>\n<dd><table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">-h</span>, <span class=\"option\">--help</span></kbd></td>\n<td>show this help message and exit</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-i <var>modname</var></span>, <span class=\"option\">--include <var>modname</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>module to include</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-x <var>modname</var></span>, <span class=\"option\">--exclude <var>modname</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>module to exclude</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-p <var>package_name</var></span>, <span class=\"option\">--package <var>package_name</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>module to exclude</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-O</span>, <span class=\"option\">--optimize</span></kbd></td>\n<td>use optimized bytecode</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-s</span>, <span class=\"option\">--summary</span></kbd></td>\n<td>print a single line listing how many modules were\nfound and how many modules are missing</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-r</span>, <span class=\"option\">--report</span></kbd></td>\n<td>print a detailed report listing all found modules, the\nmissing modules, and which module imported them.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-f <var>modname</var></span>, <span class=\"option\">--from <var>modname</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>print where the module &lt;modname&gt; is imported.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-v</span></kbd></td>\n<td>verbose output</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-c</span>, <span class=\"option\">--compress</span></kbd></td>\n<td>create a compressed library</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-d <var>DESTDIR</var></span>, <span class=\"option\">--dest <var>DESTDIR</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>destination directory</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-l <var>LIBNAME</var></span>, <span class=\"option\">--library <var>LIBNAME</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>relative pathname of the python archive</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-b <var>option</var></span>, <span class=\"option\">--bundle-files <var>option</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td><dl>\n<dt>How to bundle the files:</dt>\n<dd>3 - create script.exe, python.dll, extensions.pyd, others.dll.\n2 - create script.exe, python.dll, others.dll.\n1 - create script.exe, others.dll.\n0 - create script.exe.</dd>\n</dl>\n</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-W <var>setup_path</var></span>, <span class=\"option\">--write-setup-script <var>setup_path</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Do not build the executables; instead write a setup\nscript that allows further customizations of the build\nprocess.</td></tr>\n</tbody>\n</table>\n<dl>\n<dt>-svc svnmodule, \u2013service svcmodule</dt>\n<dd>The name of a module that contains a service</dd>\n</dl>\n</dd>\n</dl>\n</div>\n<div id=\"using-a-setup-script\">\n<h2><a href=\"#id5\" rel=\"nofollow\">Using a setup-script</a></h2>\n<p>Creating an executable (or more than one at the same time) with a\nsetup-script works in the same way as for Python 2.  The command-line\nswitches are the same as before; but they are <em>NOT</em> compatible with\nthe command-line switches for the builder mentioned above.</p>\n<p>Documentation about the setup-script and other usage tips are in the\nwiki pages at <a href=\"http://www.py2exe.org\" rel=\"nofollow\">http://www.py2exe.org</a>.</p>\n</div>\n<div id=\"the-bundle-files-option-explained\">\n<h2><a href=\"#id6\" rel=\"nofollow\">The bundle-files option explained</a></h2>\n<p>The applications that py2exe creates will always need the following\nparts:</p>\n<ol>\n<li>The exe-file(s) itself. py2exe can build several executables at the\nsame time; this is especially useful if these are related to each\nother since some parts can be shared.</li>\n<li>The python-dll.</li>\n<li>The pure python modules needed to run the app.  The byte-code for these\nmodules is always packed into a zip-archive.</li>\n<li>Compiled python-extension modules.</li>\n<li>Supporting dlls, if any.</li>\n</ol>\n<p>The bundle-files option determines how these files are packed together\nfor your application.  This is explained with a script <tt>test_sqlite.py</tt>\nthat simply contains this code:</p>\n<pre>import sqlite3\nprint(sqlite3)\n</pre>\n<p>The command to build the exe-file is:</p>\n<pre>py2exe.build_exe test_sqlite.py -c --bundle-files &lt;option&gt;\n</pre>\n<p>The <tt><span class=\"pre\">-c</span></tt> option specifies to create a compressed zip-archive.</p>\n<p><tt><span class=\"pre\">--bundle-files</span> 3</tt> is the simplest way.  These files will be\ncreated in a <tt>dist</tt> subdirectory, about 8 MB total size:</p>\n<pre>test_sqlite.exe\n_bz2.pyd\n_ctypes.pyd\n_hashlib.pyd\n_lzma.pyd\n_socket.pyd\n_sqlite3.pyd\n_ssl.pyd\n_win32sysloader.pyd\npyexpat.pyd\npython34.dll\npywintypes34.dll\nselect.pyd\nsqlite3.dll\nunicodedata.pyd\nwin32api.pyd\nwin32evtlog.pyd\n</pre>\n<p>The zip-archive is appended to the test_sqlite.exe file itself, which\nhas a size of 1.5 MB in this case.</p>\n<p><tt><span class=\"pre\">--bundle-files</span> 2</tt> will include all the Python extensions into the\nappended zip-archive; they are loaded via special code at runtime\n<em>without</em> being unpacked to the file-system.  The files in the\n<tt>dist</tt> directory now are these:</p>\n<pre>test_sqlite.exe\npython34.dll\nsqlite3.dll\n</pre>\n<p><tt><span class=\"pre\">--bundle-files</span> 1</tt> will additionally pack the python-dll into the\nzip-archive:</p>\n<pre>test_sqlite.exe\nsqlite3.dll\n</pre>\n<p><tt><span class=\"pre\">--bundle-files</span> 0</tt> now finally creates a real single-file executable\nof 6 MB:</p>\n<pre>test_sqlite.exe\n</pre>\n<p>If you are building several related executables that you plan to\ndistribute together, it may make sense to specify a zip-archive shared\nby all the exes with the <tt><span class=\"pre\">--library</span> libname</tt> option.  The\nexecutables will then become quite small (about 25 kB), since nearly\nall code will be in the separate shared archive.</p>\n<p><em>Note that not all applications will work with ``bundle-files`` set to\n0 or 1</em>. Be sure to test them.</p>\n</div>\n<div id=\"bugs\">\n<h2><a href=\"#id7\" rel=\"nofollow\">Bugs</a></h2>\n<p>Building isapi extensions is not supported: I don\u2019t use them so I will\nnot implement this.</p>\n<p>The modulefinder does not yet support PEP420 implicit namespace packages.</p>\n</div>\n\n          </div>"}, "last_serial": 1278071, "releases": {"0.3.4": [], "0.5.0": [], "0.5.2": [], "0.6.1": [], "0.6.3": [], "0.6.5": [], "0.6.6": [], "0.6.8": [], "0.6.9": [], "0.9.2.0": [{"comment_text": "", "digests": {"md5": "9c86adc1467b6acd0921163d79fa939f", "sha256": "6dcfdcf72322bdbb6ff47879b7c20a7e3bce3d0a93b6932ff72a72e732ec60a3"}, "downloads": -1, "filename": "py2exe-0.9.2.0-py33.py34-none-any.whl", "has_sig": false, "md5_digest": "9c86adc1467b6acd0921163d79fa939f", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 253553, "upload_time": "2014-05-09T17:49:28", "upload_time_iso_8601": "2014-05-09T17:49:28.531948Z", "url": "https://files.pythonhosted.org/packages/f9/bf/c04bfea4092a3867b781fe3f013dfe0301809baeac60bca40950203a1322/py2exe-0.9.2.0-py33.py34-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "90fe08aa4ed7ab8f6b487d1fd5f45128", "sha256": "e3d716c243d90aac7fbb78da8b5c27b3741b0cb37f4c0bae6ff2564913f53973"}, "downloads": -1, "filename": "py2exe-0.9.2.0.win32.exe", "has_sig": false, "md5_digest": "90fe08aa4ed7ab8f6b487d1fd5f45128", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 445046, "upload_time": "2014-05-09T17:49:16", "upload_time_iso_8601": "2014-05-09T17:49:16.217801Z", "url": "https://files.pythonhosted.org/packages/34/71/f723db60d8ab016943c7e063481d2eec7841ae582a14947aebec55998462/py2exe-0.9.2.0.win32.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "05d90513c993b2f3ae0f7f21d69a6898", "sha256": "e3db6571ac353ac7a814ad952762872e645c341095fda6e009ac264ca5378a5c"}, "downloads": -1, "filename": "py2exe-0.9.2.0.win-amd64.exe", "has_sig": false, "md5_digest": "05d90513c993b2f3ae0f7f21d69a6898", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 479045, "upload_time": "2014-05-09T17:49:22", "upload_time_iso_8601": "2014-05-09T17:49:22.580334Z", "url": "https://files.pythonhosted.org/packages/9c/ab/4d30f557daf277665b4aeaa0c1e77b7310f3b5e1a6481e06a8389508901d/py2exe-0.9.2.0.win-amd64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "56357f14838f616d4265e004036bb89a", "sha256": "ce3f2e80109d958f7e2f8239ceeea8688aba91d38ad22235741cde8a21371770"}, "downloads": -1, "filename": "py2exe-0.9.2.0.zip", "has_sig": false, "md5_digest": "56357f14838f616d4265e004036bb89a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 112460, "upload_time": "2014-05-09T17:49:07", "upload_time_iso_8601": "2014-05-09T17:49:07.115965Z", "url": "https://files.pythonhosted.org/packages/a7/33/2f15788747386d8f1ceae8194f2781ba15cb34f720a2385e11335470b9ed/py2exe-0.9.2.0.zip", "yanked": false}], "0.9.2.2": [{"comment_text": "", "digests": {"md5": "388c1f78d38d01e0817f08618ffdf534", "sha256": "80305c7007496e6ba3d88bfe528bbdd4b5b1e785ca355a1db8a796e8c942272a"}, "downloads": -1, "filename": "py2exe-0.9.2.2-py33.py34-none-any.whl", "has_sig": false, "md5_digest": "388c1f78d38d01e0817f08618ffdf534", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 270730, "upload_time": "2014-10-21T18:45:24", "upload_time_iso_8601": "2014-10-21T18:45:24.381309Z", "url": "https://files.pythonhosted.org/packages/6a/16/19bd8b59db4a61ff003aee258efd86a0aca050718435b1f54592ac870235/py2exe-0.9.2.2-py33.py34-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f1684d39de2ed8287a0a36eb241f81e5", "sha256": "a2c4bc9e3e39ad984668376aeea85b1e52db95de7ed45be2d11d2cf0ee8d40ae"}, "downloads": -1, "filename": "py2exe-0.9.2.2.win32.exe", "has_sig": false, "md5_digest": "f1684d39de2ed8287a0a36eb241f81e5", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 462352, "upload_time": "2014-10-21T18:45:07", "upload_time_iso_8601": "2014-10-21T18:45:07.857233Z", "url": "https://files.pythonhosted.org/packages/4a/14/fe91edba01d61cf8b98ae204c40561013d274a1d9a4251cc43e124c72c6d/py2exe-0.9.2.2.win32.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "3bd1d896ad3987e5de1b3053b0985ada", "sha256": "a00ccf6e6daa492ce3ebceeff467fa0c794e1e5eb851bbf578fbaa5761dff099"}, "downloads": -1, "filename": "py2exe-0.9.2.2.win-amd64.exe", "has_sig": false, "md5_digest": "3bd1d896ad3987e5de1b3053b0985ada", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 496345, "upload_time": "2014-10-21T18:45:17", "upload_time_iso_8601": "2014-10-21T18:45:17.200879Z", "url": "https://files.pythonhosted.org/packages/f2/90/98a4c6f9191232ffe0c606ee1c8000f6f576c3bf6d697ac6ca006fc05e69/py2exe-0.9.2.2.win-amd64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7d7e3980a606b4ded4d98016759d557", "sha256": "e4b800634723d34f333b23fec81a42524ed50addf90e52e2cda9967e5cfdfebf"}, "downloads": -1, "filename": "py2exe-0.9.2.2.zip", "has_sig": false, "md5_digest": "f7d7e3980a606b4ded4d98016759d557", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 129578, "upload_time": "2014-10-21T18:44:55", "upload_time_iso_8601": "2014-10-21T18:44:55.810141Z", "url": "https://files.pythonhosted.org/packages/e9/a9/040d38b60bca5b19ff5599a6cbe52b4b9a4fb27986a44fc35f72d9e729e6/py2exe-0.9.2.2.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "388c1f78d38d01e0817f08618ffdf534", "sha256": "80305c7007496e6ba3d88bfe528bbdd4b5b1e785ca355a1db8a796e8c942272a"}, "downloads": -1, "filename": "py2exe-0.9.2.2-py33.py34-none-any.whl", "has_sig": false, "md5_digest": "388c1f78d38d01e0817f08618ffdf534", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 270730, "upload_time": "2014-10-21T18:45:24", "upload_time_iso_8601": "2014-10-21T18:45:24.381309Z", "url": "https://files.pythonhosted.org/packages/6a/16/19bd8b59db4a61ff003aee258efd86a0aca050718435b1f54592ac870235/py2exe-0.9.2.2-py33.py34-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f1684d39de2ed8287a0a36eb241f81e5", "sha256": "a2c4bc9e3e39ad984668376aeea85b1e52db95de7ed45be2d11d2cf0ee8d40ae"}, "downloads": -1, "filename": "py2exe-0.9.2.2.win32.exe", "has_sig": false, "md5_digest": "f1684d39de2ed8287a0a36eb241f81e5", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 462352, "upload_time": "2014-10-21T18:45:07", "upload_time_iso_8601": "2014-10-21T18:45:07.857233Z", "url": "https://files.pythonhosted.org/packages/4a/14/fe91edba01d61cf8b98ae204c40561013d274a1d9a4251cc43e124c72c6d/py2exe-0.9.2.2.win32.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "3bd1d896ad3987e5de1b3053b0985ada", "sha256": "a00ccf6e6daa492ce3ebceeff467fa0c794e1e5eb851bbf578fbaa5761dff099"}, "downloads": -1, "filename": "py2exe-0.9.2.2.win-amd64.exe", "has_sig": false, "md5_digest": "3bd1d896ad3987e5de1b3053b0985ada", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 496345, "upload_time": "2014-10-21T18:45:17", "upload_time_iso_8601": "2014-10-21T18:45:17.200879Z", "url": "https://files.pythonhosted.org/packages/f2/90/98a4c6f9191232ffe0c606ee1c8000f6f576c3bf6d697ac6ca006fc05e69/py2exe-0.9.2.2.win-amd64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7d7e3980a606b4ded4d98016759d557", "sha256": "e4b800634723d34f333b23fec81a42524ed50addf90e52e2cda9967e5cfdfebf"}, "downloads": -1, "filename": "py2exe-0.9.2.2.zip", "has_sig": false, "md5_digest": "f7d7e3980a606b4ded4d98016759d557", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 129578, "upload_time": "2014-10-21T18:44:55", "upload_time_iso_8601": "2014-10-21T18:44:55.810141Z", "url": "https://files.pythonhosted.org/packages/e9/a9/040d38b60bca5b19ff5599a6cbe52b4b9a4fb27986a44fc35f72d9e729e6/py2exe-0.9.2.2.zip", "yanked": false}], "timestamp": "Fri May  8 03:12:33 2020"}