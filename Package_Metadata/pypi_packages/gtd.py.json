{"info": {"author": "James Luck", "author_email": "me@jamesluck.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX :: BSD", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3 :: Only", "Topic :: Utilities"], "description": "gtd.py\n=======\n\nA Fast Command-line Interface for Trello\n----------------------------------------\n\nThis is a command-line tool that enables you to add, sort, and review cards on Trello rapidly. It is designed to reduce the amount of friction between your thoughts and your TODO list. If you never leave the terminal, gtd.py will feel right at home. It has tab-completion throughout, machine-readable ``--json`` and ``--tsv`` flags, a ``grep`` subcommand, and an interactive REPL mode.\n\nThe project is named \"gtd.py\" because it was initially built as a tool to maintain a Trello board using the GTD_ task tracking method. I've been actively using this tool for GTD since the first commit; if you're trying to use GTD with Trello this is the tool for you.\n\n.. image:: ./demo.svg\n   :alt: Animated Demonstration\n\nUsage\n-----\n\nIn the following examples I'll be working with a sample board, that I created like so:\n\n::\n\n   $ gtd add board PublicShowTest\n   Added board PublicShowTest\n   $ gtd add list 'To Do'\n   Successfully added list <List To Do>!\n   $ gtd add list 'Weekly Tasks'\n   Successfully added list <List Weekly Tasks>!\n   $ for task in 'Do dishes' 'Clean bathroom' 'Write some python' 'Eat a sandwich'; do gtd add card \"$task\"; done\n   Successfully added card <Card Do dishes>!\n   Successfully added card <Card Clean bathroom>!\n   Successfully added card <Card Write some python>!\n   Successfully added card <Card Eat a sandwich>!\n   $ gtd show cards\n   +-------------------+-------+------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n   | name              | list  | tags | desc | due | last activity                    | board          | id                       | url                           |\n   +-------------------+-------+------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n   | Do dishes         | To Do |      |      |     | 2018-08-23 00:10:52.513000+00:00 | PublicShowTest | 5b7dfb8c5973738e1ed125ab | https://trello.com/c/DrZ2tFr0 |\n   | Clean bathroom    | To Do |      |      |     | 2018-08-23 00:10:55.360000+00:00 | PublicShowTest | 5b7dfb8fed823c431514804d | https://trello.com/c/QVATaeaH |\n   | Write some python | To Do |      |      |     | 2018-08-23 00:10:56.477000+00:00 | PublicShowTest | 5b7dfb9051b9466d0da1c2b7 | https://trello.com/c/p4yeGbkk |\n   | Eat a sandwich    | To Do |      |      |     | 2018-08-23 00:10:57.614000+00:00 | PublicShowTest | 5b7dfb91b7b7d66dcc7a21b6 | https://trello.com/c/HL9lJKgZ |\n   +-------------------+-------+------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n\n\nLooking Around\n^^^^^^^^^^^^^^^^\n\nThe ``show`` subcommand allows you to view what's on your board right now. Let's take a look around the new board.\n\n::\n\n   $ gtd show lists\n   To Do\n   Doing\n   Done\n   Weekly Tasks\n   $ gtd show cards\n   +-------------------+-------+------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n   | name              | list  | tags | desc | due | last activity                    | board          | id                       | url                           |\n   +-------------------+-------+------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n   | Do dishes         | To Do |      |      |     | 2018-08-23 00:10:52.513000+00:00 | PublicShowTest | 5b7dfb8c5973738e1ed125ab | https://trello.com/c/DrZ2tFr0 |\n   | Clean bathroom    | To Do |      |      |     | 2018-08-23 00:10:55.360000+00:00 | PublicShowTest | 5b7dfb8fed823c431514804d | https://trello.com/c/QVATaeaH |\n   | Write some python | To Do |      |      |     | 2018-08-23 00:10:56.477000+00:00 | PublicShowTest | 5b7dfb9051b9466d0da1c2b7 | https://trello.com/c/p4yeGbkk |\n   | Eat a sandwich    | To Do |      |      |     | 2018-08-23 00:10:57.614000+00:00 | PublicShowTest | 5b7dfb91b7b7d66dcc7a21b6 | https://trello.com/c/HL9lJKgZ |\n   +-------------------+-------+------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n\n\nThe ``show cards`` command will return all the cards which match your supplied arguments as a table, in JSON format, or in TSV.\n\n::\n\n   # Show cards from the list \"Inbox\" matching a regular expression on their titles\n   $ gtd show cards -l Inbox -m 'https?'\n   # Show cards which have no tags but have due dates, in pretty-printed JSON format\n   $ gtd show cards --no-tags --has-due -j\n\n\nSimilarly, ``grep`` does what you would expect:\n\n::\n\n   $ gtd grep dishes\n   +-------------------+-------+------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n   | name              | list  | tags | desc | due | last activity                    | board          | id                       | url                           |\n   +-------------------+-------+------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n   | Do dishes         | To Do |      |      |     | 2018-08-23 00:10:52.513000+00:00 | PublicShowTest | 5b7dfb8c5973738e1ed125ab | https://trello.com/c/DrZ2tFr0 |\n   +-------------------+-------+------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n\nIt also faithfully implements some flags from GNU ``grep``, including -c, -i, and -e! An invocation of this command is similar to a longer invocation of ``show``: ``gtd grep 'some_pattern'`` is equivalent to ``gtd show cards -m 'some_pattern'``.\n\n::\n\n   # Filter all cards based on a regex\n   $ gtd grep 'http.*amazon'\n   # or multiple regexes!\n   $ gtd grep -e '[Jj]ob' -e 'career' -e '[oO]pportunity?'\n   # Use other popular grep flags!\n   $ gtd grep -ci 'meeting'\n\nCreating Things\n^^^^^^^^^^^^^^^^\n\n``add`` takes care of your needs for creating new:\n\n* Cards\n* Tags\n* Lists\n* Boards\n\nThe ``add tag``, ``add list``, and ``add board`` subcommands all work pretty much the same way.\n\n::\n\n   $ gtd add tag 'Household'\n   Successfully added tag <Label Household>!\n   $ gtd add tag 'Food'\n   Successfully added tag <Label Food>!\n   $ gtd add tag 'Programming'\n   Successfully added tag <Label Programming>!\n\n\nThe command you'll probably use most frequently is ``add card``.\n\n::\n\n   $ gtd add card 'Purchase a pomelo'\n   Successfully added card <Card Purchase a pomelo>!\n\nYou can also specify a description for the new card with ``-m``. New cards are put in the first list by default, so when you're laying out a board, make your first list the \"inbox\". You can also omit the title argument, like so:\n\n::\n\n   # Open $EDITOR so you can write the card title\n   $ gtd add card\n   Successfully added card <Card This was written in vim>!\n\n\nManipulating Cards in Bulk\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFrequently it's useful to move a whole bunch of cards at once, tag cards that match a certain parameter, or do other single actions repeatedly across a bunch of cards. To accomplish this, use the ``batch`` command. All the subcommands of ``batch`` are interactive, so you'll be prompted before anything is modified.\n\n::\n\n   $ gtd batch tag -l 'To Do'\n   Card 5b7dfb8c5973738e1ed125ab\n     Name:         Do dishes\n     List:         To Do\n     Created:      2018-08-22 20:10:52 (1534983052.0)\n     Age:          0:02:04.641306\n   Enter a tag name to toggle it, <TAB> completes. Give \"ls\" to list tags, Enter to exit\n   tag > Household\n   Added tag Household\n   tag >\n   Card 5b7dfb8fed823c431514804d\n     Name:         Clean bathroom\n     List:         To Do\n     Created:      2018-08-22 20:10:55 (1534983055.0)\n     Age:          0:02:08.795000\n   Enter a tag name to toggle it, <TAB> completes. Give \"ls\" to list tags, Enter to exit\n   tag > Household\n   Added tag Household\n   tag >\n   Card 5b7dfb9051b9466d0da1c2b7\n     Name:         Write some python\n     List:         To Do\n     Created:      2018-08-22 20:10:56 (1534983056.0)\n     Age:          0:02:11.258759\n   Enter a tag name to toggle it, <TAB> completes. Give \"ls\" to list tags, Enter to exit\n   tag >\n   tag > Programming\n   Added tag Programming\n   tag >\n   Card 5b7dfb91b7b7d66dcc7a21b6\n     Name:         Eat a sandwich\n     List:         To Do\n     Created:      2018-08-22 20:10:57 (1534983057.0)\n     Age:          0:02:13.094361\n   Enter a tag name to toggle it, <TAB> completes. Give \"ls\" to list tags, Enter to exit\n   tag > Food\n   Added tag Food\n   tag > ^C\n   Exiting...\n   $\n\nA few things there - the tag names are auto-completed on a python-prompt-toolkit interactive prompt that's case insensitive. Moving from one card to the next in this context happens with Enter, for speed of use reasons. Getting out of the interface was done with Control+C.\nLet's put together this ``batch`` knowledge with some stuff we've seen already...\n\n::\n\n   $ gtd add tag 'Shopping'\n   Successfully added tag <Label Shopping>!\n   $ gtd batch tag --no-tags\n   Card 5b7dfc27faa4645e373e9e59\n     Name:         Purchase a pomelo\n     List:         To Do\n     Created:      2018-08-22 20:13:27 (1534983207.0)\n     Age:          0:00:15.705034\n   Enter a tag name to toggle it, <TAB> completes. Give \"ls\" to list tags, Enter to exit\n   tag > Shopping\n   Added tag Shopping\n   tag >\n   $ gtd show cards -l 'To Do'\n   +-------------------+-------+-------------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n   | name              | list  | tags        | desc | due | last activity                    | board          | id                       | url                           |\n   +-------------------+-------+-------------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n   | Do dishes         | To Do | Household   |      |     | 2018-08-23 00:13:01.438000+00:00 | PublicShowTest | 5b7dfb8c5973738e1ed125ab | https://trello.com/c/DrZ2tFr0 |\n   | Clean bathroom    | To Do | Household   |      |     | 2018-08-23 00:13:06.606000+00:00 | PublicShowTest | 5b7dfb8fed823c431514804d | https://trello.com/c/QVATaeaH |\n   | Write some python | To Do | Programming |      |     | 2018-08-23 00:13:09.352000+00:00 | PublicShowTest | 5b7dfb9051b9466d0da1c2b7 | https://trello.com/c/p4yeGbkk |\n   | Eat a sandwich    | To Do | Food        |      |     | 2018-08-23 00:13:11.972000+00:00 | PublicShowTest | 5b7dfb91b7b7d66dcc7a21b6 | https://trello.com/c/HL9lJKgZ |\n   | Purchase a pomelo | To Do | Shopping    |      |     | 2018-08-23 00:13:47.890000+00:00 | PublicShowTest | 5b7dfc27faa4645e373e9e59 | https://trello.com/c/i7yvMTgD |\n   +-------------------+-------+-------------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n\nNow we've tagged all those new cards in very few keystrokes! Let's move them to more appropriate lists based on their status.\n\n::\n\n   $ gtd batch move -l 'To Do'\n   Card 5b7dfb8c5973738e1ed125ab\n     Name:         Do dishes\n     List:         To Do\n     Tags:         Household\n     Created:      2018-08-22 20:10:52 (1534983052.0)\n     Age:          0:03:41.454345\n   Want to move this one? (Y/n)\n   [a] Doing\n   [s] Done\n   [d] To Do\n   [f] Weekly Tasks\n   Press the character corresponding to your choice, selection will happen immediately. Enter to cancel\n   Moved to Doing\n   Card 5b7dfb8fed823c431514804d\n     Name:         Clean bathroom\n     List:         To Do\n     Tags:         Household\n     Created:      2018-08-22 20:10:55 (1534983055.0)\n     Age:          0:03:44.269575\n   Want to move this one? (Y/n)\n   [a] Doing\n   [s] Done\n   [d] To Do\n   [f] Weekly Tasks\n   Press the character corresponding to your choice, selection will happen immediately. Enter to cancel\n   Moved to Weekly Tasks\n   Card 5b7dfb9051b9466d0da1c2b7\n     Name:         Write some python\n     List:         To Do\n     Tags:         Programming\n     Created:      2018-08-22 20:10:56 (1534983056.0)\n     Age:          0:03:46.857946\n   Want to move this one? (Y/n)\n   [a] Doing\n   [s] Done\n   [d] To Do\n   [f] Weekly Tasks\n   Press the character corresponding to your choice, selection will happen immediately. Enter to cancel\n   Moved to Doing\n   Card 5b7dfb91b7b7d66dcc7a21b6\n     Name:         Eat a sandwich\n     List:         To Do\n     Tags:         Food\n     Created:      2018-08-22 20:10:57 (1534983057.0)\n     Age:          0:03:50.235275\n   Want to move this one? (Y/n)\n   [a] Doing\n   [s] Done\n   [d] To Do\n   [f] Weekly Tasks\n   Press the character corresponding to your choice, selection will happen immediately. Enter to cancel\n   Moved to Done\n   Card 5b7dfc27faa4645e373e9e59\n     Name:         Purchase a pomelo\n     List:         To Do\n     Tags:         Shopping\n     Created:      2018-08-22 20:13:27 (1534983207.0)\n     Age:          0:01:24.753457\n   Want to move this one? (Y/n)\n   [a] Doing\n   [s] Done\n   [d] To Do\n   [f] Weekly Tasks\n   Press the character corresponding to your choice, selection will happen immediately. Enter to cancel\n   Moved to To Do\n   $\n\nHere are some more ideas for you to play with:\n\n::\n\n   # Find all cards with a URL in their title and move those URLs into their attachments\n   $ gtd batch attach\n   # Set the due dates for all cards in a list containing the substring \"Week\"\n   $ gtd batch due -l Week\n   # Change the due date for all cards that have one already\n   $ gtd batch due --has-due\n\n\nBringing It all Together\n^^^^^^^^^^^^^^^^^^^^^^^^\n\nWhat if you don't know what kind of action you want to take on a card before you invoke ``gtd``? Well, we provide a nice menu for you to work on each card in turn. The menu is kinda REPL-like so if you're a terminal power user (truly, why would you use this tool unless you're already a terminal power-user) it'll feel familiar. The menu is built using ``python-prompt-toolkit`` so it has nice tab-completion on every command available within it. You can type ``help`` at any time to view all the commands available within the REPL. If you get lost, use the ``help`` REPL command.\n\n::\n\n   $ gtd review -l Doing\n   Card 5b7dfb8c5973738e1ed125ab\n     Name:         Do dishes\n     List:         Doing\n     Tags:         Household\n     Created:      2018-08-22 20:10:52 (1534983052.0)\n     Age:          0:05:07.735033\n   gtd.py > description\n   # Editor session here\n   Description changed!\n   gtd.py > next\n   Card 5b7dfb9051b9466d0da1c2b7\n     Name:         Write some python\n     List:         Doing\n     Tags:         Programming\n     Created:      2018-08-22 20:10:56 (1534983056.0)\n     Age:          0:05:22.404917\n   gtd.py > duedate\n   Enter a date in format \"Jun 15 2018\", \"06/15/2018\" or \"15/06/2018\"\n   date > Aug 30 2018\n   Due date set\n   gtd.py > print\n   Card 5b7dfb9051b9466d0da1c2b7\n     Name:         Write some python\n     List:         Doing\n     Tags:         Programming\n     Created:      2018-08-22 20:10:56 (1534983056.0)\n     Age:          0:05:48.787922\n     Due:          2018-08-30 04:00:00+00:00\n     Remaining:    7 days, 3:43:15.067634\n   gtd.py > next\n   All done, have a great day!\n   $\n\n\nDeleting Things\n^^^^^^^^^^^^^^^\n\nThe ``delete`` subcommand allows you to get rid of lists & cards. By default, cards are archived rather than deleted. You can override this behavior with the ``-f/--force`` flag to ``delete cards``. Lists may not be deleted, so they are archived when you run ``delete list``.\n\n::\n\n   $ gtd add card 'cannon fodder'\n   Successfully added card <Card cannon fodder>!\n   $ gtd delete cards -m cannon\n   Card 5b7e061d94997510c6ee0ce9\n     Name:         cannon fodder\n     List:         Weekly Tasks\n     Created:      2018-08-22 20:55:57 (1534985757.0)\n     Age:          0:00:14.543394\n   Delete this card? (y/N) y\n   Card archived!\n   $\n\nHere are some other examples of ``delete``:\n\n::\n\n   # Delete without intervention all cards containing the string \"testblah\"\n   $ gtd delete cards --noninteractive --force -m 'testblah'\n   # Delete the list named \"Temporary work\"\n   $ gtd delete list \"Temporary work\"\n\nRevisiting ``show``\n^^^^^^^^^^^^^^^^^^^\n\nNow that we've added a lot more to our sample board, let's try some more advanced examples of ``show cards``. This command is the most flexible one of the bunch, so definitely try it out for yourself.\n\n::\n\n   $ gtd show cards -t Household\n   +----------------+--------------+-----------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n   | name           | list         | tags      | desc | due | last activity                    | board          | id                       | url                           |\n   +----------------+--------------+-----------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n   | Do dishes      | Doing        | Household |      |     | 2018-08-23 00:14:39.081000+00:00 | PublicShowTest | 5b7dfb8c5973738e1ed125ab | https://trello.com/c/DrZ2tFr0 |\n   | Clean bathroom | Weekly Tasks | Household |      |     | 2018-08-23 00:14:42.663000+00:00 | PublicShowTest | 5b7dfb8fed823c431514804d | https://trello.com/c/QVATaeaH |\n   +----------------+--------------+-----------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n   $ gtd show cards --by name\n   +-------------------+--------------+-------------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n   | name              | list         | tags        | desc | due | last activity                    | board          | id                       | url                           |\n   +-------------------+--------------+-------------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n   | Clean bathroom    | Weekly Tasks | Household   |      |     | 2018-08-23 00:14:42.663000+00:00 | PublicShowTest | 5b7dfb8fed823c431514804d | https://trello.com/c/QVATaeaH |\n   | Do dishes         | Doing        | Household   |      |     | 2018-08-23 00:14:39.081000+00:00 | PublicShowTest | 5b7dfb8c5973738e1ed125ab | https://trello.com/c/DrZ2tFr0 |\n   | Eat a sandwich    | Done         | Food        |      |     | 2018-08-23 00:14:51.535000+00:00 | PublicShowTest | 5b7dfb91b7b7d66dcc7a21b6 | https://trello.com/c/HL9lJKgZ |\n   | Purchase a pomelo | To Do        | Shopping    |      |     | 2018-08-23 00:13:47.890000+00:00 | PublicShowTest | 5b7dfc27faa4645e373e9e59 | https://trello.com/c/i7yvMTgD |\n   | Write some python | Doing        | Programming |      |     | 2018-08-23 00:14:47.048000+00:00 | PublicShowTest | 5b7dfb9051b9466d0da1c2b7 | https://trello.com/c/p4yeGbkk |\n   +-------------------+--------------+-------------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n   $ gtd show cards --by list\n   +-------------------+--------------+-------------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n   | name              | list         | tags        | desc | due | last activity                    | board          | id                       | url                           |\n   +-------------------+--------------+-------------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n   | Do dishes         | Doing        | Household   |      |     | 2018-08-23 00:14:39.081000+00:00 | PublicShowTest | 5b7dfb8c5973738e1ed125ab | https://trello.com/c/DrZ2tFr0 |\n   | Write some python | Doing        | Programming |      |     | 2018-08-23 00:14:47.048000+00:00 | PublicShowTest | 5b7dfb9051b9466d0da1c2b7 | https://trello.com/c/p4yeGbkk |\n   | Eat a sandwich    | Done         | Food        |      |     | 2018-08-23 00:14:51.535000+00:00 | PublicShowTest | 5b7dfb91b7b7d66dcc7a21b6 | https://trello.com/c/HL9lJKgZ |\n   | Purchase a pomelo | To Do        | Shopping    |      |     | 2018-08-23 00:13:47.890000+00:00 | PublicShowTest | 5b7dfc27faa4645e373e9e59 | https://trello.com/c/i7yvMTgD |\n   | Clean bathroom    | Weekly Tasks | Household   |      |     | 2018-08-23 00:14:42.663000+00:00 | PublicShowTest | 5b7dfb8fed823c431514804d | https://trello.com/c/QVATaeaH |\n   +-------------------+--------------+-------------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n\nYou can also filter the fields that are shown with the ``--fields`` argument. By default, ``gtd.py`` will trim down the fields until it fits your current terminal width. It'll only wrap if you have really long card titles relative to the width of your terminal.\n\n\nSetup\n------\n\n::\n\n  $ pip install -u gtd.py\n  $ gtd onboard\n\nThe ``onboard`` command will assist you through the process of getting a Trello API key for use with this program and putting it in the correct file. This will happen automatically if you run a command that requires authentication without having your API keys set.\n\nIf you'd like to enable automatic bash completion for gtd.py, add the following line to your ~/.bashrc:\n\n::\n\n  eval \"$(_GTD_COMPLETE=source gtd)\"\n\nThis relies on ``click``'s internal bash completion engine, so it does not work on other shells like ``sh``, ``csh``, or ``zsh``.\n\nConfiguration\n--------------\n\nThe ``onboard`` command will help you create the configuration file interactively. If you prefer to do the process manually, Trello has a button on their website for temporarily creating an OAUTH key/token. Your API key and secret should be placed in a YAML file with the OAUTH key & token, like this example.\n\n::\n\n  api_key: \"your-api-key\"\n  api_secret: \"your-api-secret\"\n  oauth_token: \"your-oauth-token\"\n  oauth_token_secret: \"your-oauth-secret\"\n\n\nAll four of these properties are required, ``gtd`` will fail to run without them. There are other optional settings you can define inside your yaml configuration file:\n\n::\n\n  board: \"Name of the Trello board you want to work with (case sensitive)\"\n  inbox_list: \"Name of the list for new cards\"\n  color: True\n  banner: False\n  prompt_for_untagged_cards: True\n  prompt_for_open_attachments: False\n\n\nHere are all valid configuration properties with explanations of their behavior:\n\n=============================== ============ ============== =======\nProperty                        Default      CLI Override   Meaning\n=============================== ============ ============== =======\n``board``                       Latest board ``-b``         Name of Trello board to use by default\n``inbox_list``                  First list                  Name of the list to place new cards\n``color``                       True         ``--no-color`` Use ANSI terminal colors?\n``banner``                      False        ``--banner``   Print an ASCII art banner on each program run?\n``prompt_for_open_attachments`` False                       Ask to open card attachments in ``gtd review``\n``prompt_for_untagged_cards``   True                        Ask to tag cards without any tags in ``gtd review``\n=============================== ============ ============== =======\n\nThis configuration file can be put in a variety of locations within your home folder. The ``onboard`` command will help you with platform detection, putting the configuration file where appropriate given your operating system. When running, ``gtd``` will check all possible locations out of this list:\n\n* ``~/.gtd.yaml``\n* ``~/.config/gtd/gtd.yaml``\n* ``~/Library/Application Support/gtd/gtd.yaml``\n* ``~/.local/etc/gtd.yaml``\n* ``~/.local/etc/gtd/gtd.yaml``\n\nContributing\n------------\n\nContributions would be great! If you think something could be improved just go change it and ask!\n\nThere are some tests for the command-line interface to make sure everything works properly. There are currently a few subcommands fully covered with more planned. To run these tests, first use the \"onboard\" command to create a configuration file. Then add a property `test_board` to the configuration file, with the name of a board you can dedicate to running these tests. The tests will destroy an existing board. Then, run:\n\n::\n\n make tests\n # OR,\n python -m pytest tests/\n\nI use ``black`` to format the source code but keep some of my conventions kept in this source since the beginning. I've been using single-quotes for strings and wrapping at 120 character line length, so I use the following command to do the formatting. Please apply it when giving patches.\n\n::\n\n make black\n # OR,\n black -l 120 -S gtd.py todo/ tests/\n\nNotes\n------\n\n* The code is lightly tested. Please (please!) report bugs if you find them.\n* This has only been used on Linux and Mac OSX\n* Windows is not supported.\n* Some naming conventions differ from Trello, most notably \"label\" is called \"tag\"\n\nLicense\n--------\n\nBSD. There is a copy included with the software as LICENSE\n\nCopyright 2020 Jamie Luck (delucks)\n\n\n.. _GTD: https://en.wikipedia.org/wiki/Getting_Things_Done", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/delucks/gtd.py/tarball/0.7.0", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/delucks/gtd.py", "keywords": "productivity,cli,trello,gtd,getting things done", "license": "BSD 3-clause", "maintainer": "", "maintainer_email": "", "name": "gtd.py", "package_url": "https://pypi.org/project/gtd.py/", "platform": "", "project_url": "https://pypi.org/project/gtd.py/", "project_urls": {"Download": "https://github.com/delucks/gtd.py/tarball/0.7.0", "Homepage": "https://github.com/delucks/gtd.py"}, "release_url": "https://pypi.org/project/gtd.py/0.7.0/", "requires_dist": null, "requires_python": ">=3.8", "summary": "A Fast Command-line Interface for Trello", "version": "0.7.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"a-fast-command-line-interface-for-trello\">\n<h2>A Fast Command-line Interface for Trello</h2>\n<p>This is a command-line tool that enables you to add, sort, and review cards on Trello rapidly. It is designed to reduce the amount of friction between your thoughts and your TODO list. If you never leave the terminal, gtd.py will feel right at home. It has tab-completion throughout, machine-readable <tt><span class=\"pre\">--json</span></tt> and <tt><span class=\"pre\">--tsv</span></tt> flags, a <tt>grep</tt> subcommand, and an interactive REPL mode.</p>\n<p>The project is named \u201cgtd.py\u201d because it was initially built as a tool to maintain a Trello board using the <a href=\"https://en.wikipedia.org/wiki/Getting_Things_Done\" rel=\"nofollow\">GTD</a> task tracking method. I\u2019ve been actively using this tool for GTD since the first commit; if you\u2019re trying to use GTD with Trello this is the tool for you.</p>\n<img alt=\"Animated Demonstration\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fe23086fc7daad4939ef8ce020ad5ae5857cb0a5/2e2f64656d6f2e737667\">\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>In the following examples I\u2019ll be working with a sample board, that I created like so:</p>\n<pre>$ gtd add board PublicShowTest\nAdded board PublicShowTest\n$ gtd add list 'To Do'\nSuccessfully added list &lt;List To Do&gt;!\n$ gtd add list 'Weekly Tasks'\nSuccessfully added list &lt;List Weekly Tasks&gt;!\n$ for task in 'Do dishes' 'Clean bathroom' 'Write some python' 'Eat a sandwich'; do gtd add card \"$task\"; done\nSuccessfully added card &lt;Card Do dishes&gt;!\nSuccessfully added card &lt;Card Clean bathroom&gt;!\nSuccessfully added card &lt;Card Write some python&gt;!\nSuccessfully added card &lt;Card Eat a sandwich&gt;!\n$ gtd show cards\n+-------------------+-------+------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n| name              | list  | tags | desc | due | last activity                    | board          | id                       | url                           |\n+-------------------+-------+------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n| Do dishes         | To Do |      |      |     | 2018-08-23 00:10:52.513000+00:00 | PublicShowTest | 5b7dfb8c5973738e1ed125ab | https://trello.com/c/DrZ2tFr0 |\n| Clean bathroom    | To Do |      |      |     | 2018-08-23 00:10:55.360000+00:00 | PublicShowTest | 5b7dfb8fed823c431514804d | https://trello.com/c/QVATaeaH |\n| Write some python | To Do |      |      |     | 2018-08-23 00:10:56.477000+00:00 | PublicShowTest | 5b7dfb9051b9466d0da1c2b7 | https://trello.com/c/p4yeGbkk |\n| Eat a sandwich    | To Do |      |      |     | 2018-08-23 00:10:57.614000+00:00 | PublicShowTest | 5b7dfb91b7b7d66dcc7a21b6 | https://trello.com/c/HL9lJKgZ |\n+-------------------+-------+------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n</pre>\n<div id=\"looking-around\">\n<h3>Looking Around</h3>\n<p>The <tt>show</tt> subcommand allows you to view what\u2019s on your board right now. Let\u2019s take a look around the new board.</p>\n<pre>$ gtd show lists\nTo Do\nDoing\nDone\nWeekly Tasks\n$ gtd show cards\n+-------------------+-------+------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n| name              | list  | tags | desc | due | last activity                    | board          | id                       | url                           |\n+-------------------+-------+------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n| Do dishes         | To Do |      |      |     | 2018-08-23 00:10:52.513000+00:00 | PublicShowTest | 5b7dfb8c5973738e1ed125ab | https://trello.com/c/DrZ2tFr0 |\n| Clean bathroom    | To Do |      |      |     | 2018-08-23 00:10:55.360000+00:00 | PublicShowTest | 5b7dfb8fed823c431514804d | https://trello.com/c/QVATaeaH |\n| Write some python | To Do |      |      |     | 2018-08-23 00:10:56.477000+00:00 | PublicShowTest | 5b7dfb9051b9466d0da1c2b7 | https://trello.com/c/p4yeGbkk |\n| Eat a sandwich    | To Do |      |      |     | 2018-08-23 00:10:57.614000+00:00 | PublicShowTest | 5b7dfb91b7b7d66dcc7a21b6 | https://trello.com/c/HL9lJKgZ |\n+-------------------+-------+------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n</pre>\n<p>The <tt>show cards</tt> command will return all the cards which match your supplied arguments as a table, in JSON format, or in TSV.</p>\n<pre># Show cards from the list \"Inbox\" matching a regular expression on their titles\n$ gtd show cards -l Inbox -m 'https?'\n# Show cards which have no tags but have due dates, in pretty-printed JSON format\n$ gtd show cards --no-tags --has-due -j\n</pre>\n<p>Similarly, <tt>grep</tt> does what you would expect:</p>\n<pre>$ gtd grep dishes\n+-------------------+-------+------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n| name              | list  | tags | desc | due | last activity                    | board          | id                       | url                           |\n+-------------------+-------+------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n| Do dishes         | To Do |      |      |     | 2018-08-23 00:10:52.513000+00:00 | PublicShowTest | 5b7dfb8c5973738e1ed125ab | https://trello.com/c/DrZ2tFr0 |\n+-------------------+-------+------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n</pre>\n<p>It also faithfully implements some flags from GNU <tt>grep</tt>, including -c, -i, and -e! An invocation of this command is similar to a longer invocation of <tt>show</tt>: <tt>gtd grep 'some_pattern'</tt> is equivalent to <tt>gtd show cards <span class=\"pre\">-m</span> 'some_pattern'</tt>.</p>\n<pre># Filter all cards based on a regex\n$ gtd grep 'http.*amazon'\n# or multiple regexes!\n$ gtd grep -e '[Jj]ob' -e 'career' -e '[oO]pportunity?'\n# Use other popular grep flags!\n$ gtd grep -ci 'meeting'\n</pre>\n</div>\n<div id=\"creating-things\">\n<h3>Creating Things</h3>\n<p><tt>add</tt> takes care of your needs for creating new:</p>\n<ul>\n<li>Cards</li>\n<li>Tags</li>\n<li>Lists</li>\n<li>Boards</li>\n</ul>\n<p>The <tt>add tag</tt>, <tt>add list</tt>, and <tt>add board</tt> subcommands all work pretty much the same way.</p>\n<pre>$ gtd add tag 'Household'\nSuccessfully added tag &lt;Label Household&gt;!\n$ gtd add tag 'Food'\nSuccessfully added tag &lt;Label Food&gt;!\n$ gtd add tag 'Programming'\nSuccessfully added tag &lt;Label Programming&gt;!\n</pre>\n<p>The command you\u2019ll probably use most frequently is <tt>add card</tt>.</p>\n<pre>$ gtd add card 'Purchase a pomelo'\nSuccessfully added card &lt;Card Purchase a pomelo&gt;!\n</pre>\n<p>You can also specify a description for the new card with <tt><span class=\"pre\">-m</span></tt>. New cards are put in the first list by default, so when you\u2019re laying out a board, make your first list the \u201cinbox\u201d. You can also omit the title argument, like so:</p>\n<pre># Open $EDITOR so you can write the card title\n$ gtd add card\nSuccessfully added card &lt;Card This was written in vim&gt;!\n</pre>\n</div>\n<div id=\"manipulating-cards-in-bulk\">\n<h3>Manipulating Cards in Bulk</h3>\n<p>Frequently it\u2019s useful to move a whole bunch of cards at once, tag cards that match a certain parameter, or do other single actions repeatedly across a bunch of cards. To accomplish this, use the <tt>batch</tt> command. All the subcommands of <tt>batch</tt> are interactive, so you\u2019ll be prompted before anything is modified.</p>\n<pre>$ gtd batch tag -l 'To Do'\nCard 5b7dfb8c5973738e1ed125ab\n  Name:         Do dishes\n  List:         To Do\n  Created:      2018-08-22 20:10:52 (1534983052.0)\n  Age:          0:02:04.641306\nEnter a tag name to toggle it, &lt;TAB&gt; completes. Give \"ls\" to list tags, Enter to exit\ntag &gt; Household\nAdded tag Household\ntag &gt;\nCard 5b7dfb8fed823c431514804d\n  Name:         Clean bathroom\n  List:         To Do\n  Created:      2018-08-22 20:10:55 (1534983055.0)\n  Age:          0:02:08.795000\nEnter a tag name to toggle it, &lt;TAB&gt; completes. Give \"ls\" to list tags, Enter to exit\ntag &gt; Household\nAdded tag Household\ntag &gt;\nCard 5b7dfb9051b9466d0da1c2b7\n  Name:         Write some python\n  List:         To Do\n  Created:      2018-08-22 20:10:56 (1534983056.0)\n  Age:          0:02:11.258759\nEnter a tag name to toggle it, &lt;TAB&gt; completes. Give \"ls\" to list tags, Enter to exit\ntag &gt;\ntag &gt; Programming\nAdded tag Programming\ntag &gt;\nCard 5b7dfb91b7b7d66dcc7a21b6\n  Name:         Eat a sandwich\n  List:         To Do\n  Created:      2018-08-22 20:10:57 (1534983057.0)\n  Age:          0:02:13.094361\nEnter a tag name to toggle it, &lt;TAB&gt; completes. Give \"ls\" to list tags, Enter to exit\ntag &gt; Food\nAdded tag Food\ntag &gt; ^C\nExiting...\n$\n</pre>\n<p>A few things there - the tag names are auto-completed on a python-prompt-toolkit interactive prompt that\u2019s case insensitive. Moving from one card to the next in this context happens with Enter, for speed of use reasons. Getting out of the interface was done with Control+C.\nLet\u2019s put together this <tt>batch</tt> knowledge with some stuff we\u2019ve seen already\u2026</p>\n<pre>$ gtd add tag 'Shopping'\nSuccessfully added tag &lt;Label Shopping&gt;!\n$ gtd batch tag --no-tags\nCard 5b7dfc27faa4645e373e9e59\n  Name:         Purchase a pomelo\n  List:         To Do\n  Created:      2018-08-22 20:13:27 (1534983207.0)\n  Age:          0:00:15.705034\nEnter a tag name to toggle it, &lt;TAB&gt; completes. Give \"ls\" to list tags, Enter to exit\ntag &gt; Shopping\nAdded tag Shopping\ntag &gt;\n$ gtd show cards -l 'To Do'\n+-------------------+-------+-------------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n| name              | list  | tags        | desc | due | last activity                    | board          | id                       | url                           |\n+-------------------+-------+-------------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n| Do dishes         | To Do | Household   |      |     | 2018-08-23 00:13:01.438000+00:00 | PublicShowTest | 5b7dfb8c5973738e1ed125ab | https://trello.com/c/DrZ2tFr0 |\n| Clean bathroom    | To Do | Household   |      |     | 2018-08-23 00:13:06.606000+00:00 | PublicShowTest | 5b7dfb8fed823c431514804d | https://trello.com/c/QVATaeaH |\n| Write some python | To Do | Programming |      |     | 2018-08-23 00:13:09.352000+00:00 | PublicShowTest | 5b7dfb9051b9466d0da1c2b7 | https://trello.com/c/p4yeGbkk |\n| Eat a sandwich    | To Do | Food        |      |     | 2018-08-23 00:13:11.972000+00:00 | PublicShowTest | 5b7dfb91b7b7d66dcc7a21b6 | https://trello.com/c/HL9lJKgZ |\n| Purchase a pomelo | To Do | Shopping    |      |     | 2018-08-23 00:13:47.890000+00:00 | PublicShowTest | 5b7dfc27faa4645e373e9e59 | https://trello.com/c/i7yvMTgD |\n+-------------------+-------+-------------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n</pre>\n<p>Now we\u2019ve tagged all those new cards in very few keystrokes! Let\u2019s move them to more appropriate lists based on their status.</p>\n<pre>$ gtd batch move -l 'To Do'\nCard 5b7dfb8c5973738e1ed125ab\n  Name:         Do dishes\n  List:         To Do\n  Tags:         Household\n  Created:      2018-08-22 20:10:52 (1534983052.0)\n  Age:          0:03:41.454345\nWant to move this one? (Y/n)\n[a] Doing\n[s] Done\n[d] To Do\n[f] Weekly Tasks\nPress the character corresponding to your choice, selection will happen immediately. Enter to cancel\nMoved to Doing\nCard 5b7dfb8fed823c431514804d\n  Name:         Clean bathroom\n  List:         To Do\n  Tags:         Household\n  Created:      2018-08-22 20:10:55 (1534983055.0)\n  Age:          0:03:44.269575\nWant to move this one? (Y/n)\n[a] Doing\n[s] Done\n[d] To Do\n[f] Weekly Tasks\nPress the character corresponding to your choice, selection will happen immediately. Enter to cancel\nMoved to Weekly Tasks\nCard 5b7dfb9051b9466d0da1c2b7\n  Name:         Write some python\n  List:         To Do\n  Tags:         Programming\n  Created:      2018-08-22 20:10:56 (1534983056.0)\n  Age:          0:03:46.857946\nWant to move this one? (Y/n)\n[a] Doing\n[s] Done\n[d] To Do\n[f] Weekly Tasks\nPress the character corresponding to your choice, selection will happen immediately. Enter to cancel\nMoved to Doing\nCard 5b7dfb91b7b7d66dcc7a21b6\n  Name:         Eat a sandwich\n  List:         To Do\n  Tags:         Food\n  Created:      2018-08-22 20:10:57 (1534983057.0)\n  Age:          0:03:50.235275\nWant to move this one? (Y/n)\n[a] Doing\n[s] Done\n[d] To Do\n[f] Weekly Tasks\nPress the character corresponding to your choice, selection will happen immediately. Enter to cancel\nMoved to Done\nCard 5b7dfc27faa4645e373e9e59\n  Name:         Purchase a pomelo\n  List:         To Do\n  Tags:         Shopping\n  Created:      2018-08-22 20:13:27 (1534983207.0)\n  Age:          0:01:24.753457\nWant to move this one? (Y/n)\n[a] Doing\n[s] Done\n[d] To Do\n[f] Weekly Tasks\nPress the character corresponding to your choice, selection will happen immediately. Enter to cancel\nMoved to To Do\n$\n</pre>\n<p>Here are some more ideas for you to play with:</p>\n<pre># Find all cards with a URL in their title and move those URLs into their attachments\n$ gtd batch attach\n# Set the due dates for all cards in a list containing the substring \"Week\"\n$ gtd batch due -l Week\n# Change the due date for all cards that have one already\n$ gtd batch due --has-due\n</pre>\n</div>\n<div id=\"bringing-it-all-together\">\n<h3>Bringing It all Together</h3>\n<p>What if you don\u2019t know what kind of action you want to take on a card before you invoke <tt>gtd</tt>? Well, we provide a nice menu for you to work on each card in turn. The menu is kinda REPL-like so if you\u2019re a terminal power user (truly, why would you use this tool unless you\u2019re already a terminal power-user) it\u2019ll feel familiar. The menu is built using <tt><span class=\"pre\">python-prompt-toolkit</span></tt> so it has nice tab-completion on every command available within it. You can type <tt>help</tt> at any time to view all the commands available within the REPL. If you get lost, use the <tt>help</tt> REPL command.</p>\n<pre>$ gtd review -l Doing\nCard 5b7dfb8c5973738e1ed125ab\n  Name:         Do dishes\n  List:         Doing\n  Tags:         Household\n  Created:      2018-08-22 20:10:52 (1534983052.0)\n  Age:          0:05:07.735033\ngtd.py &gt; description\n# Editor session here\nDescription changed!\ngtd.py &gt; next\nCard 5b7dfb9051b9466d0da1c2b7\n  Name:         Write some python\n  List:         Doing\n  Tags:         Programming\n  Created:      2018-08-22 20:10:56 (1534983056.0)\n  Age:          0:05:22.404917\ngtd.py &gt; duedate\nEnter a date in format \"Jun 15 2018\", \"06/15/2018\" or \"15/06/2018\"\ndate &gt; Aug 30 2018\nDue date set\ngtd.py &gt; print\nCard 5b7dfb9051b9466d0da1c2b7\n  Name:         Write some python\n  List:         Doing\n  Tags:         Programming\n  Created:      2018-08-22 20:10:56 (1534983056.0)\n  Age:          0:05:48.787922\n  Due:          2018-08-30 04:00:00+00:00\n  Remaining:    7 days, 3:43:15.067634\ngtd.py &gt; next\nAll done, have a great day!\n$\n</pre>\n</div>\n<div id=\"deleting-things\">\n<h3>Deleting Things</h3>\n<p>The <tt>delete</tt> subcommand allows you to get rid of lists &amp; cards. By default, cards are archived rather than deleted. You can override this behavior with the <tt><span class=\"pre\">-f/--force</span></tt> flag to <tt>delete cards</tt>. Lists may not be deleted, so they are archived when you run <tt>delete list</tt>.</p>\n<pre>$ gtd add card 'cannon fodder'\nSuccessfully added card &lt;Card cannon fodder&gt;!\n$ gtd delete cards -m cannon\nCard 5b7e061d94997510c6ee0ce9\n  Name:         cannon fodder\n  List:         Weekly Tasks\n  Created:      2018-08-22 20:55:57 (1534985757.0)\n  Age:          0:00:14.543394\nDelete this card? (y/N) y\nCard archived!\n$\n</pre>\n<p>Here are some other examples of <tt>delete</tt>:</p>\n<pre># Delete without intervention all cards containing the string \"testblah\"\n$ gtd delete cards --noninteractive --force -m 'testblah'\n# Delete the list named \"Temporary work\"\n$ gtd delete list \"Temporary work\"\n</pre>\n</div>\n<div id=\"revisiting-show\">\n<h3>Revisiting <tt>show</tt></h3>\n<p>Now that we\u2019ve added a lot more to our sample board, let\u2019s try some more advanced examples of <tt>show cards</tt>. This command is the most flexible one of the bunch, so definitely try it out for yourself.</p>\n<pre>$ gtd show cards -t Household\n+----------------+--------------+-----------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n| name           | list         | tags      | desc | due | last activity                    | board          | id                       | url                           |\n+----------------+--------------+-----------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n| Do dishes      | Doing        | Household |      |     | 2018-08-23 00:14:39.081000+00:00 | PublicShowTest | 5b7dfb8c5973738e1ed125ab | https://trello.com/c/DrZ2tFr0 |\n| Clean bathroom | Weekly Tasks | Household |      |     | 2018-08-23 00:14:42.663000+00:00 | PublicShowTest | 5b7dfb8fed823c431514804d | https://trello.com/c/QVATaeaH |\n+----------------+--------------+-----------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n$ gtd show cards --by name\n+-------------------+--------------+-------------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n| name              | list         | tags        | desc | due | last activity                    | board          | id                       | url                           |\n+-------------------+--------------+-------------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n| Clean bathroom    | Weekly Tasks | Household   |      |     | 2018-08-23 00:14:42.663000+00:00 | PublicShowTest | 5b7dfb8fed823c431514804d | https://trello.com/c/QVATaeaH |\n| Do dishes         | Doing        | Household   |      |     | 2018-08-23 00:14:39.081000+00:00 | PublicShowTest | 5b7dfb8c5973738e1ed125ab | https://trello.com/c/DrZ2tFr0 |\n| Eat a sandwich    | Done         | Food        |      |     | 2018-08-23 00:14:51.535000+00:00 | PublicShowTest | 5b7dfb91b7b7d66dcc7a21b6 | https://trello.com/c/HL9lJKgZ |\n| Purchase a pomelo | To Do        | Shopping    |      |     | 2018-08-23 00:13:47.890000+00:00 | PublicShowTest | 5b7dfc27faa4645e373e9e59 | https://trello.com/c/i7yvMTgD |\n| Write some python | Doing        | Programming |      |     | 2018-08-23 00:14:47.048000+00:00 | PublicShowTest | 5b7dfb9051b9466d0da1c2b7 | https://trello.com/c/p4yeGbkk |\n+-------------------+--------------+-------------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n$ gtd show cards --by list\n+-------------------+--------------+-------------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n| name              | list         | tags        | desc | due | last activity                    | board          | id                       | url                           |\n+-------------------+--------------+-------------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n| Do dishes         | Doing        | Household   |      |     | 2018-08-23 00:14:39.081000+00:00 | PublicShowTest | 5b7dfb8c5973738e1ed125ab | https://trello.com/c/DrZ2tFr0 |\n| Write some python | Doing        | Programming |      |     | 2018-08-23 00:14:47.048000+00:00 | PublicShowTest | 5b7dfb9051b9466d0da1c2b7 | https://trello.com/c/p4yeGbkk |\n| Eat a sandwich    | Done         | Food        |      |     | 2018-08-23 00:14:51.535000+00:00 | PublicShowTest | 5b7dfb91b7b7d66dcc7a21b6 | https://trello.com/c/HL9lJKgZ |\n| Purchase a pomelo | To Do        | Shopping    |      |     | 2018-08-23 00:13:47.890000+00:00 | PublicShowTest | 5b7dfc27faa4645e373e9e59 | https://trello.com/c/i7yvMTgD |\n| Clean bathroom    | Weekly Tasks | Household   |      |     | 2018-08-23 00:14:42.663000+00:00 | PublicShowTest | 5b7dfb8fed823c431514804d | https://trello.com/c/QVATaeaH |\n+-------------------+--------------+-------------+------+-----+----------------------------------+----------------+--------------------------+-------------------------------+\n</pre>\n<p>You can also filter the fields that are shown with the <tt><span class=\"pre\">--fields</span></tt> argument. By default, <tt>gtd.py</tt> will trim down the fields until it fits your current terminal width. It\u2019ll only wrap if you have really long card titles relative to the width of your terminal.</p>\n</div>\n</div>\n<div id=\"setup\">\n<h2>Setup</h2>\n<pre>$ pip install -u gtd.py\n$ gtd onboard\n</pre>\n<p>The <tt>onboard</tt> command will assist you through the process of getting a Trello API key for use with this program and putting it in the correct file. This will happen automatically if you run a command that requires authentication without having your API keys set.</p>\n<p>If you\u2019d like to enable automatic bash completion for gtd.py, add the following line to your ~/.bashrc:</p>\n<pre>eval \"$(_GTD_COMPLETE=source gtd)\"\n</pre>\n<p>This relies on <tt>click</tt>\u2019s internal bash completion engine, so it does not work on other shells like <tt>sh</tt>, <tt>csh</tt>, or <tt>zsh</tt>.</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>The <tt>onboard</tt> command will help you create the configuration file interactively. If you prefer to do the process manually, Trello has a button on their website for temporarily creating an OAUTH key/token. Your API key and secret should be placed in a YAML file with the OAUTH key &amp; token, like this example.</p>\n<pre>api_key: \"your-api-key\"\napi_secret: \"your-api-secret\"\noauth_token: \"your-oauth-token\"\noauth_token_secret: \"your-oauth-secret\"\n</pre>\n<p>All four of these properties are required, <tt>gtd</tt> will fail to run without them. There are other optional settings you can define inside your yaml configuration file:</p>\n<pre>board: \"Name of the Trello board you want to work with (case sensitive)\"\ninbox_list: \"Name of the list for new cards\"\ncolor: True\nbanner: False\nprompt_for_untagged_cards: True\nprompt_for_open_attachments: False\n</pre>\n<p>Here are all valid configuration properties with explanations of their behavior:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Property</th>\n<th>Default</th>\n<th>CLI Override</th>\n<th>Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>board</tt></td>\n<td>Latest board</td>\n<td><tt><span class=\"pre\">-b</span></tt></td>\n<td>Name of Trello board to use by default</td>\n</tr>\n<tr><td><tt>inbox_list</tt></td>\n<td>First list</td>\n<td>\u00a0</td>\n<td>Name of the list to place new cards</td>\n</tr>\n<tr><td><tt>color</tt></td>\n<td>True</td>\n<td><tt><span class=\"pre\">--no-color</span></tt></td>\n<td>Use ANSI terminal colors?</td>\n</tr>\n<tr><td><tt>banner</tt></td>\n<td>False</td>\n<td><tt><span class=\"pre\">--banner</span></tt></td>\n<td>Print an ASCII art banner on each program run?</td>\n</tr>\n<tr><td><tt>prompt_for_open_attachments</tt></td>\n<td>False</td>\n<td>\u00a0</td>\n<td>Ask to open card attachments in <tt>gtd review</tt></td>\n</tr>\n<tr><td><tt>prompt_for_untagged_cards</tt></td>\n<td>True</td>\n<td>\u00a0</td>\n<td>Ask to tag cards without any tags in <tt>gtd review</tt></td>\n</tr>\n</tbody>\n</table>\n<p>This configuration file can be put in a variety of locations within your home folder. The <tt>onboard</tt> command will help you with platform detection, putting the configuration file where appropriate given your operating system. When running, <tt>gtd`</tt> will check all possible locations out of this list:</p>\n<ul>\n<li><tt><span class=\"pre\">~/.gtd.yaml</span></tt></li>\n<li><tt><span class=\"pre\">~/.config/gtd/gtd.yaml</span></tt></li>\n<li><tt>~/Library/Application Support/gtd/gtd.yaml</tt></li>\n<li><tt><span class=\"pre\">~/.local/etc/gtd.yaml</span></tt></li>\n<li><tt><span class=\"pre\">~/.local/etc/gtd/gtd.yaml</span></tt></li>\n</ul>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Contributions would be great! If you think something could be improved just go change it and ask!</p>\n<p>There are some tests for the command-line interface to make sure everything works properly. There are currently a few subcommands fully covered with more planned. To run these tests, first use the \u201conboard\u201d command to create a configuration file. Then add a property <cite>test_board</cite> to the configuration file, with the name of a board you can dedicate to running these tests. The tests will destroy an existing board. Then, run:</p>\n<pre>make tests\n# OR,\npython -m pytest tests/\n</pre>\n<p>I use <tt>black</tt> to format the source code but keep some of my conventions kept in this source since the beginning. I\u2019ve been using single-quotes for strings and wrapping at 120 character line length, so I use the following command to do the formatting. Please apply it when giving patches.</p>\n<pre>make black\n# OR,\nblack -l 120 -S gtd.py todo/ tests/\n</pre>\n</div>\n<div id=\"notes\">\n<h2>Notes</h2>\n<ul>\n<li>The code is lightly tested. Please (please!) report bugs if you find them.</li>\n<li>This has only been used on Linux and Mac OSX</li>\n<li>Windows is not supported.</li>\n<li>Some naming conventions differ from Trello, most notably \u201clabel\u201d is called \u201ctag\u201d</li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>BSD. There is a copy included with the software as LICENSE</p>\n<p>Copyright 2020 Jamie Luck (delucks)</p>\n</div>\n\n          </div>"}, "last_serial": 6682774, "releases": {"0.6.0": [{"comment_text": "", "digests": {"md5": "8dee8d89ec2486752154473950e82982", "sha256": "72ef7e1b4339b5db28619949ae5114d6f6cef85c7a407c734bff7efab8c4e287"}, "downloads": -1, "filename": "gtd.py-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8dee8d89ec2486752154473950e82982", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 14532, "upload_time": "2017-11-08T19:59:57", "upload_time_iso_8601": "2017-11-08T19:59:57.924899Z", "url": "https://files.pythonhosted.org/packages/7b/5f/e3f8030d5ece5aaef9b677969296f29f70da3de80985fe34fac50d048ee1/gtd.py-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8be6ba2adde54b4e2986b98949930ce6", "sha256": "69147cd5b965df0a555a7f8fc06061ae23766b373511b819e0875503bee1c9e7"}, "downloads": -1, "filename": "gtd.py-0.6.0.tar.gz", "has_sig": false, "md5_digest": "8be6ba2adde54b4e2986b98949930ce6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 11215, "upload_time": "2017-11-08T20:00:00", "upload_time_iso_8601": "2017-11-08T20:00:00.065475Z", "url": "https://files.pythonhosted.org/packages/89/6b/4dd4b5558cbd1ca2ca2cd4c1f36dae96f02c36367ef93fc481d8abc6019f/gtd.py-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "ca21236daa1412edd7022bd163d92eb8", "sha256": "a9bf4dd1713c0d842c932041aa2c39a8811793d99ca55db647704a8b16038dd4"}, "downloads": -1, "filename": "gtd.py-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ca21236daa1412edd7022bd163d92eb8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 14536, "upload_time": "2017-11-08T20:05:36", "upload_time_iso_8601": "2017-11-08T20:05:36.859960Z", "url": "https://files.pythonhosted.org/packages/23/d3/c2ad58046f468eb0dd398052ac17b14b86f3cc3aa828da8ac45b9e19a760/gtd.py-0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a1b8e4a29362e5dc95b12e5185041c4", "sha256": "e6b50da5e51ffb3f220da40ff81f4cce8e71735d241abe0761463aa3670a8f10"}, "downloads": -1, "filename": "gtd.py-0.6.1.tar.gz", "has_sig": false, "md5_digest": "5a1b8e4a29362e5dc95b12e5185041c4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 11272, "upload_time": "2017-11-08T20:05:38", "upload_time_iso_8601": "2017-11-08T20:05:38.740012Z", "url": "https://files.pythonhosted.org/packages/f6/d0/cb124d2daeb59091194e15c1901d1134781b2e183f57a552ef95bc7fb7a7/gtd.py-0.6.1.tar.gz", "yanked": false}], "0.6.10": [{"comment_text": "", "digests": {"md5": "39f97c57d4ca34852c937460ab1dae65", "sha256": "717f9dd0b0848028e884e55971bed660485b3d8e7702630a8f0538cb0df04b3d"}, "downloads": -1, "filename": "gtd.py-0.6.10.linux-armv7l.tar.gz", "has_sig": false, "md5_digest": "39f97c57d4ca34852c937460ab1dae65", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 41285, "upload_time": "2017-12-07T22:23:19", "upload_time_iso_8601": "2017-12-07T22:23:19.378400Z", "url": "https://files.pythonhosted.org/packages/bb/b5/58b7d4ce3a875e90909253e8aa2a728abf151b6b3b99af9840f15113e13b/gtd.py-0.6.10.linux-armv7l.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0d312b202e5f642f15fe552f7a10d19", "sha256": "0f666da55d91600f1db1838917a6f2081232ca9f6455cfe321c2a19c97e49c99"}, "downloads": -1, "filename": "gtd.py-0.6.10-py3-none-any.whl", "has_sig": false, "md5_digest": "d0d312b202e5f642f15fe552f7a10d19", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 26777, "upload_time": "2017-12-07T22:23:16", "upload_time_iso_8601": "2017-12-07T22:23:16.503000Z", "url": "https://files.pythonhosted.org/packages/be/7f/fbda03aeaa719878744ff1c69f024754248864484a280b02e0a03b6eff35/gtd.py-0.6.10-py3-none-any.whl", "yanked": false}], "0.6.11": [{"comment_text": "", "digests": {"md5": "16f4b8204c274bb31fc2f107de3dbc21", "sha256": "8ec00e9df58ef45678273a7e7fee13df540ae9b3b400245e2cd0af610b2fba8a"}, "downloads": -1, "filename": "gtd.py-0.6.11.linux-armv7l.tar.gz", "has_sig": false, "md5_digest": "16f4b8204c274bb31fc2f107de3dbc21", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 42310, "upload_time": "2017-12-17T05:05:57", "upload_time_iso_8601": "2017-12-17T05:05:57.914630Z", "url": "https://files.pythonhosted.org/packages/35/d0/f9cc34c46f346f1cd5e11dfb0810f5ef93bc47a21162918d377772f6728f/gtd.py-0.6.11.linux-armv7l.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "197c7262809260bd80a9f46759684ba8", "sha256": "59d30d92967b1889a0c67ebc20b01593ef04efa2ac90b53c70aa94634ceb45ed"}, "downloads": -1, "filename": "gtd.py-0.6.11-py3-none-any.whl", "has_sig": false, "md5_digest": "197c7262809260bd80a9f46759684ba8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 27068, "upload_time": "2017-12-17T05:05:56", "upload_time_iso_8601": "2017-12-17T05:05:56.088476Z", "url": "https://files.pythonhosted.org/packages/0f/11/822eee566a577511d133e8efc42beb76e89e5395dfe09357e77ab65d82f9/gtd.py-0.6.11-py3-none-any.whl", "yanked": false}], "0.6.12": [{"comment_text": "", "digests": {"md5": "154d4c13bca14b38983b12724e372848", "sha256": "ba8374679006e501bf0c6c87f9b1989283202e8e69857d19b8e2cb35434ae8de"}, "downloads": -1, "filename": "gtd.py-0.6.12.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "154d4c13bca14b38983b12724e372848", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 43468, "upload_time": "2018-03-16T03:07:37", "upload_time_iso_8601": "2018-03-16T03:07:37.467130Z", "url": "https://files.pythonhosted.org/packages/71/1f/eb71af19bd57ced628571b25d133d83e9ecc472fdef99373c5e5a28fdb15/gtd.py-0.6.12.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9dd10f522f92ee41c7d1967e7fec5ad", "sha256": "9753faf8117618e06e9d7a4216ac57e993f2867bfcb473a579dbef3a2e1af872"}, "downloads": -1, "filename": "gtd.py-0.6.12-py3-none-any.whl", "has_sig": false, "md5_digest": "f9dd10f522f92ee41c7d1967e7fec5ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 27939, "upload_time": "2018-03-16T03:07:35", "upload_time_iso_8601": "2018-03-16T03:07:35.911544Z", "url": "https://files.pythonhosted.org/packages/52/7e/635e512c72bfd1c8e50734448027fb64a48a32777b222e99960e9ad03ca4/gtd.py-0.6.12-py3-none-any.whl", "yanked": false}], "0.6.13": [{"comment_text": "", "digests": {"md5": "735c19ee38d01a091d532249281a9208", "sha256": "3b411688375b5753e606af20ac68fc55ec29ae02086b550756b44f4ef373a8f0"}, "downloads": -1, "filename": "gtd.py-0.6.13.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "735c19ee38d01a091d532249281a9208", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 52378, "upload_time": "2018-05-24T14:15:08", "upload_time_iso_8601": "2018-05-24T14:15:08.325385Z", "url": "https://files.pythonhosted.org/packages/6e/dc/29ea27429312590255526156fe442e5ff187a68627c08d48bed3a0118639/gtd.py-0.6.13.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f4a1fed6bec11fd2cbd3db3b611dacb", "sha256": "0d60cac07ca4d4da06a711741fa4f7cb5a58e9f248b5333634a2c6d6dd569edf"}, "downloads": -1, "filename": "gtd.py-0.6.13-py3-none-any.whl", "has_sig": false, "md5_digest": "0f4a1fed6bec11fd2cbd3db3b611dacb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 32733, "upload_time": "2018-05-24T14:15:06", "upload_time_iso_8601": "2018-05-24T14:15:06.880912Z", "url": "https://files.pythonhosted.org/packages/8f/e5/60b8a40e37c6135952a8ea4ca15233d13425678755ada219f200a61da770/gtd.py-0.6.13-py3-none-any.whl", "yanked": false}], "0.6.14": [{"comment_text": "", "digests": {"md5": "847b4cb3afec1087475685d228c1339c", "sha256": "8cd3faa90da0da2d7f39e58dd19f6f42b7f327ee24ec23a0b07181e5c5863544"}, "downloads": -1, "filename": "gtd.py-0.6.14.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "847b4cb3afec1087475685d228c1339c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 54877, "upload_time": "2018-08-23T01:15:05", "upload_time_iso_8601": "2018-08-23T01:15:05.059592Z", "url": "https://files.pythonhosted.org/packages/df/b5/c2119a9367c9f163e19d7b177d37fba8fe9f97425a6b7e0afee4b4df6e37/gtd.py-0.6.14.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa7c2ec2f8478d5688464b8516d17a14", "sha256": "17f6bf4f3223498327a6c7fea0582151dbf49304e0c58794bdd7849037b3dd7d"}, "downloads": -1, "filename": "gtd.py-0.6.14-py3-none-any.whl", "has_sig": false, "md5_digest": "aa7c2ec2f8478d5688464b8516d17a14", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 36299, "upload_time": "2018-08-23T01:15:03", "upload_time_iso_8601": "2018-08-23T01:15:03.678236Z", "url": "https://files.pythonhosted.org/packages/94/d2/1d22f5b51a37d814a2d71d4612b4afc27a8d142f4e5a57f0d82604ac6e60/gtd.py-0.6.14-py3-none-any.whl", "yanked": false}], "0.6.15": [{"comment_text": "", "digests": {"md5": "e49eec218516e2f4cdfb0dfbc2d14b65", "sha256": "5de8d8b623b25fd0264657f2033fc956fa21f8a0c9a084c404328610efbf41b6"}, "downloads": -1, "filename": "gtd.py-0.6.15.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "e49eec218516e2f4cdfb0dfbc2d14b65", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 58143, "upload_time": "2019-06-09T04:50:44", "upload_time_iso_8601": "2019-06-09T04:50:44.045372Z", "url": "https://files.pythonhosted.org/packages/89/48/0946661dc2792dc4a040c41dc27eec488b3ca9247472f879da3bfa0748f3/gtd.py-0.6.15.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "83082e002db0b3a8fce384198c964ace", "sha256": "50e216886ddc197592be644a17570ab42b684f2aba1294ea0f731479f6a6afce"}, "downloads": -1, "filename": "gtd.py-0.6.15-py3-none-any.whl", "has_sig": false, "md5_digest": "83082e002db0b3a8fce384198c964ace", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 33394, "upload_time": "2019-06-09T04:50:42", "upload_time_iso_8601": "2019-06-09T04:50:42.623217Z", "url": "https://files.pythonhosted.org/packages/a0/0c/e892ec174e71709e8cd5d7338d9bff6f0ef1881cf7d0ccdbc3e8e281518b/gtd.py-0.6.15-py3-none-any.whl", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "3c123f8b5141faf7b4aa0b3cd3efb265", "sha256": "6bf031e69ba226725ca75472432c63934c778a297adcb682d3539dfa7b198941"}, "downloads": -1, "filename": "gtd.py-0.6.3.linux-armv7l.tar.gz", "has_sig": false, "md5_digest": "3c123f8b5141faf7b4aa0b3cd3efb265", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 35104, "upload_time": "2017-11-11T06:04:38", "upload_time_iso_8601": "2017-11-11T06:04:38.079221Z", "url": "https://files.pythonhosted.org/packages/4c/1c/a77fe68c9457a36026877994375cf7227b808d1aa65648d2af859b083691/gtd.py-0.6.3.linux-armv7l.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "14e9d9102adbcef6771d34a832347b38", "sha256": "72a255d6d6fdcc741a9921fd3d9ea5a1e4288acb96d8adfb37691ab644602c46"}, "downloads": -1, "filename": "gtd.py-0.6.3-py3-none-any.whl", "has_sig": false, "md5_digest": "14e9d9102adbcef6771d34a832347b38", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 20894, "upload_time": "2017-11-11T06:04:34", "upload_time_iso_8601": "2017-11-11T06:04:34.943398Z", "url": "https://files.pythonhosted.org/packages/7e/1e/0fbd4214703fbc16c9aa8ea48c42beb2e7f2ff5c1e4ae448be2cf440df57/gtd.py-0.6.3-py3-none-any.whl", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "3bafc54a6679dcc4b8f50a9834e82071", "sha256": "286e811f744cf53b4f6aeff26882080f79c0fe187f06ce95c91e6ebdb683331d"}, "downloads": -1, "filename": "gtd.py-0.6.4.linux-armv7l.tar.gz", "has_sig": false, "md5_digest": "3bafc54a6679dcc4b8f50a9834e82071", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 35860, "upload_time": "2017-11-11T21:26:24", "upload_time_iso_8601": "2017-11-11T21:26:24.774218Z", "url": "https://files.pythonhosted.org/packages/cb/c3/e13913eca9bd53914a4014f39c3b4b5e52e641c3c951815b80595cbbc4af/gtd.py-0.6.4.linux-armv7l.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "710e53dd9a1a19a979850a502f1490e6", "sha256": "1bda1bb0002666da74d4f77a5d05a6ca38d1d95bc8b0d7218746e34c5b40205b"}, "downloads": -1, "filename": "gtd.py-0.6.4-py3-none-any.whl", "has_sig": false, "md5_digest": "710e53dd9a1a19a979850a502f1490e6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 21221, "upload_time": "2017-11-11T21:26:23", "upload_time_iso_8601": "2017-11-11T21:26:23.576554Z", "url": "https://files.pythonhosted.org/packages/64/f7/2b3eb618fc878868e39798eef78907f6ea9a9254d52de8e7852f97287e76/gtd.py-0.6.4-py3-none-any.whl", "yanked": false}], "0.6.5": [{"comment_text": "", "digests": {"md5": "7a60274718310fd3b0faaf822f4df2e9", "sha256": "5d144bf71fce013c9296a277629e17f7339590985c7b0a34725b3296bf440d1a"}, "downloads": -1, "filename": "gtd.py-0.6.5.linux-armv7l.tar.gz", "has_sig": false, "md5_digest": "7a60274718310fd3b0faaf822f4df2e9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 35130, "upload_time": "2017-11-16T23:40:06", "upload_time_iso_8601": "2017-11-16T23:40:06.186714Z", "url": "https://files.pythonhosted.org/packages/87/bc/9708c086fc2a1441dfd0ae357519e129fd1c2c044bd832db3704865f929c/gtd.py-0.6.5.linux-armv7l.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "c814e75978d4ba6cffa4a45429f548eb", "sha256": "c2feccc2a509335446cf4fcf98f10e17feba7f726b0e18357407c62acfe65e91"}, "downloads": -1, "filename": "gtd.py-0.6.5-py3-none-any.whl", "has_sig": false, "md5_digest": "c814e75978d4ba6cffa4a45429f548eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 21590, "upload_time": "2017-11-16T23:40:00", "upload_time_iso_8601": "2017-11-16T23:40:00.686478Z", "url": "https://files.pythonhosted.org/packages/30/38/5581343eec91a1388094ae2f428b442b2bb29be40949d0086ffac5ce0c67/gtd.py-0.6.5-py3-none-any.whl", "yanked": false}], "0.6.6": [{"comment_text": "", "digests": {"md5": "dcaf3a62c79b32ecefe39c5564deae79", "sha256": "996ed7edccd5145f12f748405697bd0423b4db7cb26e2f99713c22f207c08d3f"}, "downloads": -1, "filename": "gtd.py-0.6.6.linux-armv7l.tar.gz", "has_sig": false, "md5_digest": "dcaf3a62c79b32ecefe39c5564deae79", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 39119, "upload_time": "2017-11-18T17:20:55", "upload_time_iso_8601": "2017-11-18T17:20:55.592788Z", "url": "https://files.pythonhosted.org/packages/8d/87/b5f7cfcd2a27e56e8c46233e6cce7f634888f7f332671b970a25e13ac9f3/gtd.py-0.6.6.linux-armv7l.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "d67fc16e7478e0596b6d10d49c12450f", "sha256": "bcb023fc2abdc403c7d5fcda7ff5f79d68004e45be80f852393cf9dbea57f6b8"}, "downloads": -1, "filename": "gtd.py-0.6.6-py3-none-any.whl", "has_sig": false, "md5_digest": "d67fc16e7478e0596b6d10d49c12450f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 25560, "upload_time": "2017-11-18T17:20:50", "upload_time_iso_8601": "2017-11-18T17:20:50.037299Z", "url": "https://files.pythonhosted.org/packages/72/62/fdc49296cfe67b103831c689f070758336442044edc4069a787409df76b9/gtd.py-0.6.6-py3-none-any.whl", "yanked": false}], "0.6.7": [{"comment_text": "", "digests": {"md5": "7af25b0b9f0d08469db78febad32a46f", "sha256": "ec1813d2a4c92f76ad3ac4fe9c81ed2de584746d9decf0fdc8e06d50b6970420"}, "downloads": -1, "filename": "gtd.py-0.6.7.linux-armv7l.tar.gz", "has_sig": false, "md5_digest": "7af25b0b9f0d08469db78febad32a46f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 39528, "upload_time": "2017-11-30T04:46:28", "upload_time_iso_8601": "2017-11-30T04:46:28.824501Z", "url": "https://files.pythonhosted.org/packages/3a/0f/bef2bf323e859deb8a5187c9a53c19e1cdb88c9e25469b6e1662c9058cf1/gtd.py-0.6.7.linux-armv7l.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "89cc250d50bee4efbcd32921afae2f6f", "sha256": "c5fdafecdfce297d30c4319e89baf3fde50d868b29dad4d040dbad0278636e23"}, "downloads": -1, "filename": "gtd.py-0.6.7-py3-none-any.whl", "has_sig": false, "md5_digest": "89cc250d50bee4efbcd32921afae2f6f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 25745, "upload_time": "2017-11-30T04:46:27", "upload_time_iso_8601": "2017-11-30T04:46:27.682179Z", "url": "https://files.pythonhosted.org/packages/91/38/2be2ed4294116b00dafb62d4fb5dc55b50bf852e04f06153639216d9e523/gtd.py-0.6.7-py3-none-any.whl", "yanked": false}], "0.6.8": [{"comment_text": "", "digests": {"md5": "2fc04cc98760ae9d41fa4c0c2b428257", "sha256": "dfcdec8a9d9040e9bff7299c5d2dd68408a9a5dbd66d97f159f72a2352e2c66f"}, "downloads": -1, "filename": "gtd.py-0.6.8.linux-armv7l.tar.gz", "has_sig": false, "md5_digest": "2fc04cc98760ae9d41fa4c0c2b428257", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 40971, "upload_time": "2017-12-01T04:45:00", "upload_time_iso_8601": "2017-12-01T04:45:00.758090Z", "url": "https://files.pythonhosted.org/packages/a5/1c/31af4c5ee9afdbdb1c7d29a8a49cc38146cb0976b034892ffb86ad145a0a/gtd.py-0.6.8.linux-armv7l.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "19c8b81691f67232ed2229d02886da89", "sha256": "072ff8d56e6586e232e3961d876a3f9c85dfbfcf1f2e32cf1ba744156469a610"}, "downloads": -1, "filename": "gtd.py-0.6.8-py3-none-any.whl", "has_sig": false, "md5_digest": "19c8b81691f67232ed2229d02886da89", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 26426, "upload_time": "2017-12-01T04:44:58", "upload_time_iso_8601": "2017-12-01T04:44:58.240103Z", "url": "https://files.pythonhosted.org/packages/9a/55/fe0d47e4b2a1b4ca96e2868bbd00fcd15204234681810cecf7b2da61afc3/gtd.py-0.6.8-py3-none-any.whl", "yanked": false}], "0.6.9": [{"comment_text": "", "digests": {"md5": "222221ec9e902f3629a2a7b8f8955d09", "sha256": "339ae97f671782025845c6b438ec594f34ea608837352b9e979476307851d06d"}, "downloads": -1, "filename": "gtd.py-0.6.9.linux-armv7l.tar.gz", "has_sig": false, "md5_digest": "222221ec9e902f3629a2a7b8f8955d09", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 41173, "upload_time": "2017-12-01T05:09:25", "upload_time_iso_8601": "2017-12-01T05:09:25.860157Z", "url": "https://files.pythonhosted.org/packages/6a/44/0a68e23b29a29ccb8cbc6c4c6174b7d1af16e477fd83bb45be664224f2d4/gtd.py-0.6.9.linux-armv7l.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2bca9854b7e43d4b2538d78c30f63d8", "sha256": "503e19cf0129e95882cc43041023073c803f11e5374da86c30a672fff35c82d2"}, "downloads": -1, "filename": "gtd.py-0.6.9-py3-none-any.whl", "has_sig": false, "md5_digest": "a2bca9854b7e43d4b2538d78c30f63d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 26498, "upload_time": "2017-12-01T05:09:23", "upload_time_iso_8601": "2017-12-01T05:09:23.426632Z", "url": "https://files.pythonhosted.org/packages/94/e3/796ed30761bb3afba168ffb46068b867823954a906dc95c2ba1e309a4ec6/gtd.py-0.6.9-py3-none-any.whl", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "ccb1bad86df9de21e0502209aa135c19", "sha256": "d2211acf6130d88c94404fafb29a16fdeb45349f90bc950ff72368ad385cfc78"}, "downloads": -1, "filename": "gtd.py-0.7.0.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "ccb1bad86df9de21e0502209aa135c19", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 64982, "upload_time": "2020-02-23T02:29:13", "upload_time_iso_8601": "2020-02-23T02:29:13.775195Z", "url": "https://files.pythonhosted.org/packages/70/89/1f5d86e4197f3fe8af8df36a4d6837ca873fb3050437260a61aa8cd8b42b/gtd.py-0.7.0.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0ee20bed0e7abce4461ed924f31072d", "sha256": "09e2ed52a6614b9f4798d98c2d8b1af80cbdb7b411092def342a7c0faebced10"}, "downloads": -1, "filename": "gtd.py-0.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d0ee20bed0e7abce4461ed924f31072d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 35979, "upload_time": "2020-02-23T02:30:23", "upload_time_iso_8601": "2020-02-23T02:30:23.809156Z", "url": "https://files.pythonhosted.org/packages/fb/28/6accd4cf6ec5095f67ecb652beb3b20af82811d4c57512691595aef4faea/gtd.py-0.7.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ccb1bad86df9de21e0502209aa135c19", "sha256": "d2211acf6130d88c94404fafb29a16fdeb45349f90bc950ff72368ad385cfc78"}, "downloads": -1, "filename": "gtd.py-0.7.0.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "ccb1bad86df9de21e0502209aa135c19", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 64982, "upload_time": "2020-02-23T02:29:13", "upload_time_iso_8601": "2020-02-23T02:29:13.775195Z", "url": "https://files.pythonhosted.org/packages/70/89/1f5d86e4197f3fe8af8df36a4d6837ca873fb3050437260a61aa8cd8b42b/gtd.py-0.7.0.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0ee20bed0e7abce4461ed924f31072d", "sha256": "09e2ed52a6614b9f4798d98c2d8b1af80cbdb7b411092def342a7c0faebced10"}, "downloads": -1, "filename": "gtd.py-0.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d0ee20bed0e7abce4461ed924f31072d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 35979, "upload_time": "2020-02-23T02:30:23", "upload_time_iso_8601": "2020-02-23T02:30:23.809156Z", "url": "https://files.pythonhosted.org/packages/fb/28/6accd4cf6ec5095f67ecb652beb3b20af82811d4c57512691595aef4faea/gtd.py-0.7.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:53:33 2020"}