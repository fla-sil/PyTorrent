{"info": {"author": "Andreas Kaiser", "author_email": "disko@binary-punks.com", "bugtrack_url": null, "classifiers": ["Environment :: Plugins", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python"], "description": "This package makes\n`jQuery Option Tree <http://code.google.com/p/jquery-option-tree/>`_\navailable as a `deform form library <http://pypi.python.org/pypi/deform/>`_\nwidget.  jQuery Option Tree converts a JSON option tree into dynamically\ncreated <select> elements allowing you to choose one nested option from the\ntree.\n\nCurrently only one feature for a very specific use case is implemented,\nhierarchical browsing from a data structure like this::\n\n    key     value\n    ---     -----\n    1       Option 1\n    11      Suboption 1.1\n    111     Subsubption 1.1.1\n    112     Subsubption 1.1.2\n    12      Suboption 1.2\n    2       Option 2\n    21      Suboption 2.1\n    22      Suboption 2.2\n    3       Option 3\n\nThis is suitable for hierarchical selections from standards like\n`ISCO08 <http://en.wikipedia.org/wiki/International_Standard_Classification_of_Occupations>`_ or\n`NACE Rev. 2 <http://en.wikipedia.org/wiki/Statistical_classification_of_economic_activities_in_the_European_Community>`_\n\nThe implementation currently requires the data to be exposed by a REST service\nwith 2 endpoints that are reachable via a common base URL (the ``json_url``\noption of the widget):\n\n    -   json_url has to return the top level key/value pairs\n\n    -   json_url with the GET parameter ``\u00ecd`` has to return the child elements\n        for the given id.\n\n    -   json_url + '/<id>/lineage' has to return the lineage of IDs from root to\n        leaf for the given <id>.\n\nExamples::\n\n    json_url = '/api/classifications/nace_rev2'\n\n    # GET call to '/api/classifications/nace_rev2'\n    # has to return a structure like this:\n    {\n        A: \"LAND- UND FORSTWIRTSCHAFT, FISCHEREI\",\n        B: \"BERGBAU UND GEWINNUNG VON STEINEN UND ERDEN\",\n        C: \"VERARBEITENDES GEWERBE/HERSTELLUNG VON WAREN\"\n    }\n\n    # GET call to '/api/classifications/nace_rev2?id=A'\n    # has to return a structure like this:\n    {\n        A01: \"Landwirtschaft, Jagd und damit verbundene T\u00e4tigkeiten\",\n        A02: \"Forstwirtschaft und Holzeinschlag\",\n        A03: \"Fischerei und Aquakultur\"\n    }\n\n    # GET call to '/api/classifications/nace_rev2/Q8690/lineage'\n    # has to return a structure like this:\n    [\"Q\", \"Q86\", \"Q869\", \"Q8690\"]\n\nSee the included demo application for details.\n\nContributions\n-------------\n\nContributions are welcome, especially if you want to add support for\nmore generic data structures and/or configurable options for the plugin.\n\nChanges\n=======\n\n0.2.1\n-----\n\n-   Fix JS error when initializing empty field.\n\n0.2\n---\n\n-   Change Javascript to allow better configuration\n\n-   Move the fanstatic ``need()`` call to the serialize method.\n\n0.1\n---\n\n-   Initial release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/disko/deform_widget_jquery_option_tree", "keywords": "deform widget", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "deform_widget_jquery_option_tree", "package_url": "https://pypi.org/project/deform_widget_jquery_option_tree/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/deform_widget_jquery_option_tree/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/disko/deform_widget_jquery_option_tree"}, "release_url": "https://pypi.org/project/deform_widget_jquery_option_tree/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "jQuery Option Tree widget for deform", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package makes\n<a href=\"http://code.google.com/p/jquery-option-tree/\" rel=\"nofollow\">jQuery Option Tree</a>\navailable as a <a href=\"http://pypi.python.org/pypi/deform/\" rel=\"nofollow\">deform form library</a>\nwidget.  jQuery Option Tree converts a JSON option tree into dynamically\ncreated &lt;select&gt; elements allowing you to choose one nested option from the\ntree.</p>\n<p>Currently only one feature for a very specific use case is implemented,\nhierarchical browsing from a data structure like this:</p>\n<pre>key     value\n---     -----\n1       Option 1\n11      Suboption 1.1\n111     Subsubption 1.1.1\n112     Subsubption 1.1.2\n12      Suboption 1.2\n2       Option 2\n21      Suboption 2.1\n22      Suboption 2.2\n3       Option 3\n</pre>\n<p>This is suitable for hierarchical selections from standards like\n<a href=\"http://en.wikipedia.org/wiki/International_Standard_Classification_of_Occupations\" rel=\"nofollow\">ISCO08</a> or\n<a href=\"http://en.wikipedia.org/wiki/Statistical_classification_of_economic_activities_in_the_European_Community\" rel=\"nofollow\">NACE Rev. 2</a></p>\n<p>The implementation currently requires the data to be exposed by a REST service\nwith 2 endpoints that are reachable via a common base URL (the <tt>json_url</tt>\noption of the widget):</p>\n<blockquote>\n<ul>\n<li>json_url has to return the top level key/value pairs</li>\n<li>json_url with the GET parameter <tt>\u00ecd</tt> has to return the child elements\nfor the given id.</li>\n<li>json_url + \u2018/&lt;id&gt;/lineage\u2019 has to return the lineage of IDs from root to\nleaf for the given &lt;id&gt;.</li>\n</ul>\n</blockquote>\n<p>Examples:</p>\n<pre>json_url = '/api/classifications/nace_rev2'\n\n# GET call to '/api/classifications/nace_rev2'\n# has to return a structure like this:\n{\n    A: \"LAND- UND FORSTWIRTSCHAFT, FISCHEREI\",\n    B: \"BERGBAU UND GEWINNUNG VON STEINEN UND ERDEN\",\n    C: \"VERARBEITENDES GEWERBE/HERSTELLUNG VON WAREN\"\n}\n\n# GET call to '/api/classifications/nace_rev2?id=A'\n# has to return a structure like this:\n{\n    A01: \"Landwirtschaft, Jagd und damit verbundene T\u00e4tigkeiten\",\n    A02: \"Forstwirtschaft und Holzeinschlag\",\n    A03: \"Fischerei und Aquakultur\"\n}\n\n# GET call to '/api/classifications/nace_rev2/Q8690/lineage'\n# has to return a structure like this:\n[\"Q\", \"Q86\", \"Q869\", \"Q8690\"]\n</pre>\n<p>See the included demo application for details.</p>\n<div id=\"contributions\">\n<h2>Contributions</h2>\n<p>Contributions are welcome, especially if you want to add support for\nmore generic data structures and/or configurable options for the plugin.</p>\n<div id=\"changes\">\n<h3>Changes</h3>\n</div>\n</div>\n<div id=\"id1\">\n<h2>0.2.1</h2>\n<ul>\n<li>Fix JS error when initializing empty field.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h2>0.2</h2>\n<ul>\n<li>Change Javascript to allow better configuration</li>\n<li>Move the fanstatic <tt>need()</tt> call to the serialize method.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h2>0.1</h2>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 788891, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "59740f6574b86e44f9c295bd7f2a3fa3", "sha256": "f03915e27a02908643da101a73dd58cb2de57630f187af400d654df15677705d"}, "downloads": -1, "filename": "deform_widget_jquery_option_tree-0.1.tar.gz", "has_sig": false, "md5_digest": "59740f6574b86e44f9c295bd7f2a3fa3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 88999, "upload_time": "2012-10-19T15:14:51", "upload_time_iso_8601": "2012-10-19T15:14:51.427491Z", "url": "https://files.pythonhosted.org/packages/e6/49/b6f357f6ad385884a1d1938f5059c7b2b48d53bf3a809de5971c9ba0123c/deform_widget_jquery_option_tree-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "05cbee840c9250c68ed0e367a5491aa6", "sha256": "9dd008179f8c09bc13ac363b923647bad9bfbb7b8cdae914f401080d2e1646b5"}, "downloads": -1, "filename": "deform_widget_jquery_option_tree-0.2.tar.gz", "has_sig": false, "md5_digest": "05cbee840c9250c68ed0e367a5491aa6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 89467, "upload_time": "2012-10-31T12:43:03", "upload_time_iso_8601": "2012-10-31T12:43:03.769520Z", "url": "https://files.pythonhosted.org/packages/2d/7b/2cadc8a04d79b100778612559df54c54f4db7b8e3c7f6501c63176406899/deform_widget_jquery_option_tree-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "731a522183a297888e5e9d32aa8322e2", "sha256": "4a6ffca1de617c9ff2a31846c6296e266961362451f355be50404184ed816ffa"}, "downloads": -1, "filename": "deform_widget_jquery_option_tree-0.2.1.tar.gz", "has_sig": false, "md5_digest": "731a522183a297888e5e9d32aa8322e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 89597, "upload_time": "2012-10-31T13:03:16", "upload_time_iso_8601": "2012-10-31T13:03:16.111249Z", "url": "https://files.pythonhosted.org/packages/15/08/f0ac4b69af6f32c7d337909e98bc96ac61724a815f9a82a2d359c756f567/deform_widget_jquery_option_tree-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "731a522183a297888e5e9d32aa8322e2", "sha256": "4a6ffca1de617c9ff2a31846c6296e266961362451f355be50404184ed816ffa"}, "downloads": -1, "filename": "deform_widget_jquery_option_tree-0.2.1.tar.gz", "has_sig": false, "md5_digest": "731a522183a297888e5e9d32aa8322e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 89597, "upload_time": "2012-10-31T13:03:16", "upload_time_iso_8601": "2012-10-31T13:03:16.111249Z", "url": "https://files.pythonhosted.org/packages/15/08/f0ac4b69af6f32c7d337909e98bc96ac61724a815f9a82a2d359c756f567/deform_widget_jquery_option_tree-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:15 2020"}