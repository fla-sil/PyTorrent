{"info": {"author": "Mirumee Software", "author_email": "hello@mirumee.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Internationalization"], "description": "Google i18n address\n===========================================================================================\n\n|codecov.io| |Circle CI| |PyPi downloads| |requires.io| |PyPi version| |PyPi pythons| |GitHub|\n\nThis package contains a copy of `Google's i18n\naddress <https://chromium-i18n.appspot.com/ssl-address>`_ metadata repository\nthat contains great data but comes with no uptime guarantees.\n\nContents of this package will allow you to programatically build address\nforms that adhere to rules of a particular region or country, validate\nlocal addresses and format them to produce a valid address label for\ndelivery.\n\nThe package also contains a Python interface for address validation.\n\nAddresses validation\n--------------------\n\nThe ``normalize_address`` function checks the address and either returns its\ncanonical form (suitable for storage and use in addressing envelopes) or\nraises an ``InvalidAddress`` exception that contains a list of errors.\n\n\nAddress fields\n~~~~~~~~~~~~~~\n\nHere is the list of recognized fields:\n\n* ``country_code`` is a two-letter ISO 3166-1 country code\n* ``country_area`` is a designation of a region, province or state,\n  recognized values include official names, designated abbreviations,\n  official translations and latin transliterations\n* ``city`` is a city or town name, recognized values include official names,\n  official translations and latin transliterations\n* ``city_area`` is a sublocality like a district, recognized values include\n  official names, official translations and latin transliterations\n* ``street_address`` is the (possibly multiline) street address\n* ``postal_code`` is a postal code or zip code\n* ``sorting_code`` is a sorting code\n* ``name`` is a person's name\n* ``company_name`` is a name of a company or organization\n\n\nErrors\n~~~~~~\n\nAddress validation with only country code:\n\n.. code:: python\n\n    >>> from i18naddress import InvalidAddress, normalize_address\n    >>> try:\n    ...     address = normalize_address({'country_code': 'US'})\n    ... except InvalidAddress as e:\n    ...     print(e.errors)\n    ...\n    {'city': 'required',\n     'country_area': 'required',\n     'postal_code': 'required',\n     'street_address': 'required'}\n\nWith correct address:\n\n.. code:: python\n\n    >>> from i18naddress import normalize_address\n    >>> address = normalize_address({\n        'country_code': 'US',\n        'country_area': 'California',\n        'city': 'Mountain View',\n        'postal_code': '94043',\n        'street_address': '1600 Amphitheatre Pkwy'})\n    >>> print(address)\n    {'city': 'MOUNTAIN VIEW',\n     'city_area': '',\n     'country_area': 'CA',\n     'country_code': 'US',\n     'postal_code': '94043',\n     'sorting_code': '',\n     'street_address': '1600 Amphitheatre Pkwy'}\n\nPostal code/zip code validation example:\n\n.. code:: python\n\n    >>> from i18naddress import InvalidAddress, normalize_address\n    >>> try:\n    ...     address = normalize_address({\n    ...         'country_code': 'US',\n    ...         'country_area': 'California',\n    ...         'city': 'Mountain View',\n    ...         'postal_code': '74043',\n    ...         'street_address': '1600 Amphitheatre Pkwy'})\n    ... except InvalidAddress as e:\n    ...     print(e.errors)\n    ...\n    {'postal_code': 'invalid'}\n\n\nAddress latinization\n~~~~~~~~~~~~~~~~~~~~\n\nIn some cases it may be useful to display foreign addresses in a more\naccessible format. You can use the ``latinize_address`` function to obtain\na more verbose, latinized version of an address.\n\nThis version is suitable for display and useful for full text search indexing\nbut the normalized form is what should be stored in the database and used when\nprinting address labels.\n\n.. code:: python\n\n    >>> from i18naddress import latinize_address\n    >>> address = {\n    ...     'country_code': 'CN',\n    ...     'country_area': '\u4e91\u5357\u7701',\n    ...     'postal_code': '677400',\n    ...     'city': '\u4e34\u6ca7\u5e02',\n    ...     'city_area': '\u51e4\u5e86\u53bf',\n    ...     'street_address': '\u4e2d\u5173\u6751\u4e1c\u8def1\u53f7'}\n    >>> latinize_address(address)\n    {'country_code': 'CN',\n     'country_area': 'Yunnan Sheng',\n     'city': 'Lincang Shi',\n     'city_area': 'Lincang Shi',\n     'sorting_code': '',\n     'postal_code': '677400',\n     'street_address': '\u4e2d\u5173\u6751\u4e1c\u8def1\u53f7'}\n\nIt will also return expanded names for area types that normally use codes and\nabbreviations such as state names in US:\n\n.. code:: python\n\n    >>> from i18naddress import latinize_address\n    >>> address = {\n    ...     'country_code': 'US',\n    ...     'country_area': 'CA',\n    ...     'postal_code': '94037',\n    ...     'city': 'Mountain View',\n    ...     'street_address': '1600 Charleston Rd.'}\n    >>> latinize_address(address)\n    {'country_code': 'US',\n     'country_area': 'California',\n     'city': 'Mountain View',\n     'city_area': '',\n     'sorting_code': '',\n     'postal_code': '94037',\n     'street_address': '1600 Charleston Rd.'}\n\n\nAddress formatting\n~~~~~~~~~~~~~~~~~~\n\nYou can use the ``format_address`` function to format the address following\nthe destination country's post office regulations:\n\n.. code:: python\n\n    >>> address = {\n    ...     'country_code': 'CN',\n    ...     'country_area': '\u4e91\u5357\u7701',\n    ...     'postal_code': '677400',\n    ...     'city': '\u4e34\u6ca7\u5e02',\n    ...     'city_area': '\u51e4\u5e86\u53bf',\n    ...     'street_address': '\u4e2d\u5173\u6751\u4e1c\u8def1\u53f7'}\n    >>>> print(format_address(address))\n    677400\n    \u4e91\u5357\u7701\u4e34\u6ca7\u5e02\u51e4\u5e86\u53bf\n    \u4e2d\u5173\u6751\u4e1c\u8def1\u53f7\n    CHINA\n\nYou can also ask for a latin-friendly version:\n\n.. code:: python\n\n    >>> address = {\n    ...     'country_code': 'CN',\n    ...     'country_area': '\u4e91\u5357\u7701',\n    ...     'postal_code': '677400',\n    ...     'city': '\u4e34\u6ca7\u5e02',\n    ...     'city_area': '\u51e4\u5e86\u53bf',\n    ...     'street_address': '\u4e2d\u5173\u6751\u4e1c\u8def1\u53f7'}\n    >>> print(format_address(address, latin=True))\n    \u4e2d\u5173\u6751\u4e1c\u8def1\u53f7\n    \u51e4\u5e86\u53bf\n    \u4e34\u6ca7\u5e02\n    \u4e91\u5357\u7701, 677400\n    CHINA\n\n\nValidation rules\n~~~~~~~~~~~~~~~~\n\nYou can use the ``get_validation_rules`` function to obtain validation data\nuseful for constructing address forms specific for a particular country:\n\n.. code:: python\n\n    >>> from i18naddress import get_validation_rules\n    >>> get_validation_rules({'country_code': 'US', 'country_area': 'CA'})\n    ValidationRules(\n        country_code='US',\n        country_name='UNITED STATES',\n        address_format='%N%n%O%n%A%n%C, %S %Z',\n        address_latin_format='%N%n%O%n%A%n%C, %S %Z',\n        allowed_fields={'street_address', 'company_name', 'city', 'name', 'country_area', 'postal_code'},\n        required_fields={'street_address', 'city', 'country_area', 'postal_code'},\n        upper_fields={'city', 'country_area'},\n        country_area_type='state',\n        country_area_choices=[('AL', 'Alabama'), ..., ('WY', 'Wyoming')],\n        city_type='city',\n        city_choices=[],\n        city_area_type='suburb',\n        city_area_choices=[],\n        postal_code_type='zip',\n        postal_code_matchers=[re.compile('^(\\\\d{5})(?:[ \\\\-](\\\\d{4}))?$'), re.compile('^9[0-5]|96[01]')],\n        postal_code_examples=['90000', '96199'],\n        postal_code_prefix='')\n\nAll known fields\n----------------\n\nYou can use ``KNOWN_FIELDS`` set, to render optional address fields as hidden\nelements of your form:\n\n.. code:: python\n\n   >> from i18naddress import get_validation_rules, KNOWN_FIELDS\n   >> rules = get_validation_rules({'country_code': 'US'})\n   >> KNOWN_FIELDS - rules.allowed_fields\n   {'city_area', 'sorting_code'}\n\n\nRaw Google's i18n data\n----------------------\n\nAll raw data are stored in ``I18nCountryData`` dict like object:\n\n.. code:: python\n\n    >>> from i18naddress import I18nCountryData\n    >>> i18n_country_data = I18nCountryData()\n    >>> i18n_country_data['US']\n    {'fmt': '%N%n%O%n%A%n%C, %S %Z',\n     'id': 'data/US',\n     'key': 'US',\n     'lang': 'en',\n     'languages': 'en',\n     'name': 'UNITED STATES',\n     'posturl': 'https://tools.usps.com/go/ZipLookupAction!input.action',\n     'require': 'ACSZ',\n     'state_name_type': 'state',\n     'sub_keys': 'AL~AK~AS~AZ~AR~AA~AE~AP~CA~CO~CT~DE~DC~FL~GA~GU~HI~ID~IL~IN~IA~KS~KY~LA~ME~MH~MD~MA~MI~FM~MN~MS~MO~MT~NE~NV~NH~NJ~NM~NY~NC~ND~MP~OH~OK~OR~PW~PA~PR~RI~SC~SD~TN~TX~UT~VT~VI~VA~WA~WV~WI~WY',\n     'sub_names': 'Alabama~Alaska~American Samoa~Arizona~Arkansas~Armed Forces (AA)~Armed Forces (AE)~Armed Forces (AP)~California~Colorado~Connecticut~Delaware~District of Columbia~Florida~Georgia~Guam~Hawaii~Idaho~Illinois~Indiana~Iowa~Kansas~Kentucky~Louisiana~Maine~Marshall Islands~Maryland~Massachusetts~Michigan~Micronesia~Minnesota~Mississippi~Missouri~Montana~Nebraska~Nevada~New Hampshire~New Jersey~New Mexico~New York~North Carolina~North Dakota~Northern Mariana Islands~Ohio~Oklahoma~Oregon~Palau~Pennsylvania~Puerto Rico~Rhode Island~South Carolina~South Dakota~Tennessee~Texas~Utah~Vermont~Virgin Islands~Virginia~Washington~West Virginia~Wisconsin~Wyoming',\n     'sub_zipexs': '35000,36999~99500,99999~96799~85000,86999~71600,72999~34000,34099~09000,09999~96200,96699~90000,96199~80000,81999~06000,06999~19700,19999~20000,20099:20200,20599:56900,56999~32000,33999:34100,34999~30000,31999:39800,39899:39901~96910,96932~96700,96798:96800,96899~83200,83999~60000,62999~46000,47999~50000,52999~66000,67999~40000,42799~70000,71599~03900,04999~96960,96979~20600,21999~01000,02799:05501:05544~48000,49999~96941,96944~55000,56799~38600,39799~63000,65999~59000,59999~68000,69999~88900,89999~03000,03899~07000,08999~87000,88499~10000,14999:06390:00501:00544~27000,28999~58000,58999~96950,96952~43000,45999~73000,74999~97000,97999~96940~15000,19699~00600,00799:00900,00999~02800,02999~29000,29999~57000,57999~37000,38599~75000,79999:88500,88599:73301:73344~84000,84999~05000,05999~00800,00899~20100,20199:22000,24699~98000,99499~24700,26999~53000,54999~82000,83199:83414',\n     'sub_zips': '3[56]~99[5-9]~96799~8[56]~71[6-9]|72~340~09~96[2-6]~9[0-5]|96[01]~8[01]~06~19[7-9]~20[02-5]|569~3[23]|34[1-9]~3[01]|398|39901~969([1-2]\\\\d|3[12])~967[0-8]|9679[0-8]|968~83[2-9]~6[0-2]~4[67]~5[0-2]~6[67]~4[01]|42[0-7]~70|71[0-5]~039|04~969[67]~20[6-9]|21~01|02[0-7]|05501|05544~4[89]~9694[1-4]~55|56[0-7]~38[6-9]|39[0-7]~6[3-5]~59~6[89]~889|89~03[0-8]~0[78]~87|88[0-4]~1[0-4]|06390|00501|00544~2[78]~58~9695[0-2]~4[3-5]~7[34]~97~969(39|40)~1[5-8]|19[0-6]~00[679]~02[89]~29~57~37|38[0-5]~7[5-9]|885|73301|73344~84~05~008~201|2[23]|24[0-6]~98|99[0-4]~24[7-9]|2[56]~5[34]~82|83[01]|83414',\n     'upper': 'CS',\n     'zip': '(\\\\d{5})(?:[ \\\\-](\\\\d{4}))?',\n     'zip_name_type': 'zip',\n     'zipex': '95014,22162-1010'}\n    >>> i18n_country_data['US/CA']\n    {'id': 'data/US/CA',\n     'key': 'CA',\n     'lang': 'en',\n     'name': 'California',\n     'zip': '9[0-5]|96[01]',\n     'zipex': '90000,96199'}\n\n\nUsed with Django form\n---------------------\n\nDjango forms will return only required address fields in ``form.cleaned_data`` dict. So addresses in the database will be normalized.\n\n.. code:: python\n\n    from django import forms\n\n    from i18naddress import InvalidAddress, normalize_address, get_validation_rules\n\n\n    class AddressForm(forms.Form):\n\n        COUNTRY_CHOICES = [\n            ('PL', 'Poland'),\n            ('AE', 'United Arab Emirates'),\n            ('US', 'United States of America')]\n        \n        ERROR_MESSAGES = {\n            'required': 'This field is required',\n            'invalid': 'Enter a valid name'}\n\n        name = forms.CharField(required=True)\n        company_name = forms.CharField(required=False)\n        street_address = forms.CharField(required=False)\n        city = forms.CharField(required=False)\n        city_area = forms.CharField(required=False)\n        country_code = forms.ChoiceField(required=True, choices=COUNTRY_CHOICES)\n        country_area = forms.CharField(required=False)\n        postal_code = forms.CharField(required=False)\n\n        def clean(self):\n            clean_data = super(AddressForm, self).clean()\n            validation_rules = get_validation_rules(clean_data)\n            try:\n                valid_address = normalize_address(clean_data)\n            except InvalidAddress as e:\n                errors = e.errors\n                valid_address = None\n                for field, error_code in errors.items():\n                    if field == 'postal_code':\n                        examples = validation_rules.postal_code_examples\n                        msg = 'Invalid value, use fomat like %s' % examples\n                    else:\n                        msg = ERROR_MESSAGES[error_code]\n                    self.add_error(field, msg)\n            return valid_address or clean_data\n\n\n.. image:: https://ga-beacon.appspot.com/UA-10159761-14/mirumee/google-i18n-address?pixel\n\n.. |codecov.io| image:: https://img.shields.io/codecov/c/github/mirumee/google-i18n-address.svg\n   :target: https://codecov.io/github/mirumee/google-i18n-address?branch=master\n.. |Circle CI| image:: https://img.shields.io/circleci/project/mirumee/google-i18n-address.svg\n   :target: https://circleci.com/gh/mirumee/google-i18n-address/tree/master\n.. |PyPi downloads| image:: https://img.shields.io/pypi/dm/google-i18n-address.svg\n   :target: https://pypi.python.org/pypi/google-i18n-address\n.. |PyPi pythons| image:: https://img.shields.io/pypi/pyversions/google-i18n-address.svg\n   :target: https://pypi.python.org/pypi/google-i18n-address\n.. |PyPi version| image:: https://img.shields.io/pypi/v/google-i18n-address.svg\n   :target: https://pypi.python.org/pypi/google-i18n-address\n.. |GitHub| image:: https://img.shields.io/github/stars/mirumee/google-i18n-address.svg?style=social\n   :target: https://github.com/mirumee/google-i18n-address\n.. |requires.io| image:: https://img.shields.io/requires/github/mirumee/google-i18n-address.svg\n   :target: https://requires.io/github/mirumee/google-i18n-address/requirements/?branch=master", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mirumee/google-i18n-address", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "google-i18n-address", "package_url": "https://pypi.org/project/google-i18n-address/", "platform": "", "project_url": "https://pypi.org/project/google-i18n-address/", "project_urls": {"Homepage": "https://github.com/mirumee/google-i18n-address"}, "release_url": "https://pypi.org/project/google-i18n-address/2.3.5/", "requires_dist": null, "requires_python": "", "summary": "Address validation helpers for Google's i18n address database", "version": "2.3.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://codecov.io/github/mirumee/google-i18n-address?branch=master\" rel=\"nofollow\"><img alt=\"codecov.io\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/251ac1ea2066e3156899c7c050a056e063fc8a9d/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f6d6972756d65652f676f6f676c652d6931386e2d616464726573732e737667\"></a> <a href=\"https://circleci.com/gh/mirumee/google-i18n-address/tree/master\" rel=\"nofollow\"><img alt=\"Circle CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8ee0e092c7cd3016e90c4fb18420ed7d3d784490/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f70726f6a6563742f6d6972756d65652f676f6f676c652d6931386e2d616464726573732e737667\"></a> <a href=\"https://pypi.python.org/pypi/google-i18n-address\" rel=\"nofollow\"><img alt=\"PyPi downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2d3bcd030b16df44da96c8e142adfd19bc9ff75b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f676f6f676c652d6931386e2d616464726573732e737667\"></a> <a href=\"https://requires.io/github/mirumee/google-i18n-address/requirements/?branch=master\" rel=\"nofollow\"><img alt=\"requires.io\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/50a5e53bcd3aef0f8659bb73485411b0042b74d5/68747470733a2f2f696d672e736869656c64732e696f2f72657175697265732f6769746875622f6d6972756d65652f676f6f676c652d6931386e2d616464726573732e737667\"></a> <a href=\"https://pypi.python.org/pypi/google-i18n-address\" rel=\"nofollow\"><img alt=\"PyPi version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/039fca357b93de72af1b0f7d4b1a186fd3969c37/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f676f6f676c652d6931386e2d616464726573732e737667\"></a> <a href=\"https://pypi.python.org/pypi/google-i18n-address\" rel=\"nofollow\"><img alt=\"PyPi pythons\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f9372f30f1078bcadcf2c07e18aed6545db49764/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f676f6f676c652d6931386e2d616464726573732e737667\"></a> <a href=\"https://github.com/mirumee/google-i18n-address\" rel=\"nofollow\"><img alt=\"GitHub\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/009f9aceed2b6c768eea6830bf0f0d31380b9661/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6d6972756d65652f676f6f676c652d6931386e2d616464726573732e7376673f7374796c653d736f6369616c\"></a></p>\n<p>This package contains a copy of <a href=\"https://chromium-i18n.appspot.com/ssl-address\" rel=\"nofollow\">Google\u2019s i18n\naddress</a> metadata repository\nthat contains great data but comes with no uptime guarantees.</p>\n<p>Contents of this package will allow you to programatically build address\nforms that adhere to rules of a particular region or country, validate\nlocal addresses and format them to produce a valid address label for\ndelivery.</p>\n<p>The package also contains a Python interface for address validation.</p>\n<div id=\"addresses-validation\">\n<h2>Addresses validation</h2>\n<p>The <tt>normalize_address</tt> function checks the address and either returns its\ncanonical form (suitable for storage and use in addressing envelopes) or\nraises an <tt>InvalidAddress</tt> exception that contains a list of errors.</p>\n<div id=\"address-fields\">\n<h3>Address fields</h3>\n<p>Here is the list of recognized fields:</p>\n<ul>\n<li><tt>country_code</tt> is a two-letter ISO 3166-1 country code</li>\n<li><tt>country_area</tt> is a designation of a region, province or state,\nrecognized values include official names, designated abbreviations,\nofficial translations and latin transliterations</li>\n<li><tt>city</tt> is a city or town name, recognized values include official names,\nofficial translations and latin transliterations</li>\n<li><tt>city_area</tt> is a sublocality like a district, recognized values include\nofficial names, official translations and latin transliterations</li>\n<li><tt>street_address</tt> is the (possibly multiline) street address</li>\n<li><tt>postal_code</tt> is a postal code or zip code</li>\n<li><tt>sorting_code</tt> is a sorting code</li>\n<li><tt>name</tt> is a person\u2019s name</li>\n<li><tt>company_name</tt> is a name of a company or organization</li>\n</ul>\n</div>\n<div id=\"errors\">\n<h3>Errors</h3>\n<p>Address validation with only country code:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">i18naddress</span> <span class=\"kn\">import</span> <span class=\"n\">InvalidAddress</span><span class=\"p\">,</span> <span class=\"n\">normalize_address</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"n\">normalize_address</span><span class=\"p\">({</span><span class=\"s1\">'country_code'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">})</span>\n<span class=\"o\">...</span> <span class=\"k\">except</span> <span class=\"n\">InvalidAddress</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">errors</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"p\">{</span><span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'required'</span><span class=\"p\">,</span>\n <span class=\"s1\">'country_area'</span><span class=\"p\">:</span> <span class=\"s1\">'required'</span><span class=\"p\">,</span>\n <span class=\"s1\">'postal_code'</span><span class=\"p\">:</span> <span class=\"s1\">'required'</span><span class=\"p\">,</span>\n <span class=\"s1\">'street_address'</span><span class=\"p\">:</span> <span class=\"s1\">'required'</span><span class=\"p\">}</span>\n</pre>\n<p>With correct address:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">i18naddress</span> <span class=\"kn\">import</span> <span class=\"n\">normalize_address</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"n\">normalize_address</span><span class=\"p\">({</span>\n    <span class=\"s1\">'country_code'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'country_area'</span><span class=\"p\">:</span> <span class=\"s1\">'California'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Mountain View'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'postal_code'</span><span class=\"p\">:</span> <span class=\"s1\">'94043'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'street_address'</span><span class=\"p\">:</span> <span class=\"s1\">'1600 Amphitheatre Pkwy'</span><span class=\"p\">})</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">address</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'MOUNTAIN VIEW'</span><span class=\"p\">,</span>\n <span class=\"s1\">'city_area'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>\n <span class=\"s1\">'country_area'</span><span class=\"p\">:</span> <span class=\"s1\">'CA'</span><span class=\"p\">,</span>\n <span class=\"s1\">'country_code'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">,</span>\n <span class=\"s1\">'postal_code'</span><span class=\"p\">:</span> <span class=\"s1\">'94043'</span><span class=\"p\">,</span>\n <span class=\"s1\">'sorting_code'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>\n <span class=\"s1\">'street_address'</span><span class=\"p\">:</span> <span class=\"s1\">'1600 Amphitheatre Pkwy'</span><span class=\"p\">}</span>\n</pre>\n<p>Postal code/zip code validation example:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">i18naddress</span> <span class=\"kn\">import</span> <span class=\"n\">InvalidAddress</span><span class=\"p\">,</span> <span class=\"n\">normalize_address</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"n\">normalize_address</span><span class=\"p\">({</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'country_code'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'country_area'</span><span class=\"p\">:</span> <span class=\"s1\">'California'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Mountain View'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'postal_code'</span><span class=\"p\">:</span> <span class=\"s1\">'74043'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'street_address'</span><span class=\"p\">:</span> <span class=\"s1\">'1600 Amphitheatre Pkwy'</span><span class=\"p\">})</span>\n<span class=\"o\">...</span> <span class=\"k\">except</span> <span class=\"n\">InvalidAddress</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">errors</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"p\">{</span><span class=\"s1\">'postal_code'</span><span class=\"p\">:</span> <span class=\"s1\">'invalid'</span><span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"address-latinization\">\n<h3>Address latinization</h3>\n<p>In some cases it may be useful to display foreign addresses in a more\naccessible format. You can use the <tt>latinize_address</tt> function to obtain\na more verbose, latinized version of an address.</p>\n<p>This version is suitable for display and useful for full text search indexing\nbut the normalized form is what should be stored in the database and used when\nprinting address labels.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">i18naddress</span> <span class=\"kn\">import</span> <span class=\"n\">latinize_address</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'country_code'</span><span class=\"p\">:</span> <span class=\"s1\">'CN'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'country_area'</span><span class=\"p\">:</span> <span class=\"s1\">'\u4e91\u5357\u7701'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'postal_code'</span><span class=\"p\">:</span> <span class=\"s1\">'677400'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'\u4e34\u6ca7\u5e02'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'city_area'</span><span class=\"p\">:</span> <span class=\"s1\">'\u51e4\u5e86\u53bf'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'street_address'</span><span class=\"p\">:</span> <span class=\"s1\">'\u4e2d\u5173\u6751\u4e1c\u8def1\u53f7'</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">latinize_address</span><span class=\"p\">(</span><span class=\"n\">address</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">'country_code'</span><span class=\"p\">:</span> <span class=\"s1\">'CN'</span><span class=\"p\">,</span>\n <span class=\"s1\">'country_area'</span><span class=\"p\">:</span> <span class=\"s1\">'Yunnan Sheng'</span><span class=\"p\">,</span>\n <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Lincang Shi'</span><span class=\"p\">,</span>\n <span class=\"s1\">'city_area'</span><span class=\"p\">:</span> <span class=\"s1\">'Lincang Shi'</span><span class=\"p\">,</span>\n <span class=\"s1\">'sorting_code'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>\n <span class=\"s1\">'postal_code'</span><span class=\"p\">:</span> <span class=\"s1\">'677400'</span><span class=\"p\">,</span>\n <span class=\"s1\">'street_address'</span><span class=\"p\">:</span> <span class=\"s1\">'\u4e2d\u5173\u6751\u4e1c\u8def1\u53f7'</span><span class=\"p\">}</span>\n</pre>\n<p>It will also return expanded names for area types that normally use codes and\nabbreviations such as state names in US:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">i18naddress</span> <span class=\"kn\">import</span> <span class=\"n\">latinize_address</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'country_code'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'country_area'</span><span class=\"p\">:</span> <span class=\"s1\">'CA'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'postal_code'</span><span class=\"p\">:</span> <span class=\"s1\">'94037'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Mountain View'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'street_address'</span><span class=\"p\">:</span> <span class=\"s1\">'1600 Charleston Rd.'</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">latinize_address</span><span class=\"p\">(</span><span class=\"n\">address</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">'country_code'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">,</span>\n <span class=\"s1\">'country_area'</span><span class=\"p\">:</span> <span class=\"s1\">'California'</span><span class=\"p\">,</span>\n <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Mountain View'</span><span class=\"p\">,</span>\n <span class=\"s1\">'city_area'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>\n <span class=\"s1\">'sorting_code'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>\n <span class=\"s1\">'postal_code'</span><span class=\"p\">:</span> <span class=\"s1\">'94037'</span><span class=\"p\">,</span>\n <span class=\"s1\">'street_address'</span><span class=\"p\">:</span> <span class=\"s1\">'1600 Charleston Rd.'</span><span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"address-formatting\">\n<h3>Address formatting</h3>\n<p>You can use the <tt>format_address</tt> function to format the address following\nthe destination country\u2019s post office regulations:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'country_code'</span><span class=\"p\">:</span> <span class=\"s1\">'CN'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'country_area'</span><span class=\"p\">:</span> <span class=\"s1\">'\u4e91\u5357\u7701'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'postal_code'</span><span class=\"p\">:</span> <span class=\"s1\">'677400'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'\u4e34\u6ca7\u5e02'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'city_area'</span><span class=\"p\">:</span> <span class=\"s1\">'\u51e4\u5e86\u53bf'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'street_address'</span><span class=\"p\">:</span> <span class=\"s1\">'\u4e2d\u5173\u6751\u4e1c\u8def1\u53f7'</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">format_address</span><span class=\"p\">(</span><span class=\"n\">address</span><span class=\"p\">))</span>\n<span class=\"mi\">677400</span>\n<span class=\"n\">\u4e91\u5357\u7701\u4e34\u6ca7\u5e02\u51e4\u5e86\u53bf</span>\n<span class=\"n\">\u4e2d\u5173\u6751\u4e1c\u8def1\u53f7</span>\n<span class=\"n\">CHINA</span>\n</pre>\n<p>You can also ask for a latin-friendly version:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'country_code'</span><span class=\"p\">:</span> <span class=\"s1\">'CN'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'country_area'</span><span class=\"p\">:</span> <span class=\"s1\">'\u4e91\u5357\u7701'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'postal_code'</span><span class=\"p\">:</span> <span class=\"s1\">'677400'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'\u4e34\u6ca7\u5e02'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'city_area'</span><span class=\"p\">:</span> <span class=\"s1\">'\u51e4\u5e86\u53bf'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'street_address'</span><span class=\"p\">:</span> <span class=\"s1\">'\u4e2d\u5173\u6751\u4e1c\u8def1\u53f7'</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">format_address</span><span class=\"p\">(</span><span class=\"n\">address</span><span class=\"p\">,</span> <span class=\"n\">latin</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n<span class=\"n\">\u4e2d\u5173\u6751\u4e1c\u8def1\u53f7</span>\n<span class=\"n\">\u51e4\u5e86\u53bf</span>\n<span class=\"n\">\u4e34\u6ca7\u5e02</span>\n<span class=\"n\">\u4e91\u5357\u7701</span><span class=\"p\">,</span> <span class=\"mi\">677400</span>\n<span class=\"n\">CHINA</span>\n</pre>\n</div>\n<div id=\"validation-rules\">\n<h3>Validation rules</h3>\n<p>You can use the <tt>get_validation_rules</tt> function to obtain validation data\nuseful for constructing address forms specific for a particular country:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">i18naddress</span> <span class=\"kn\">import</span> <span class=\"n\">get_validation_rules</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">get_validation_rules</span><span class=\"p\">({</span><span class=\"s1\">'country_code'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">,</span> <span class=\"s1\">'country_area'</span><span class=\"p\">:</span> <span class=\"s1\">'CA'</span><span class=\"p\">})</span>\n<span class=\"n\">ValidationRules</span><span class=\"p\">(</span>\n    <span class=\"n\">country_code</span><span class=\"o\">=</span><span class=\"s1\">'US'</span><span class=\"p\">,</span>\n    <span class=\"n\">country_name</span><span class=\"o\">=</span><span class=\"s1\">'UNITED STATES'</span><span class=\"p\">,</span>\n    <span class=\"n\">address_format</span><span class=\"o\">=</span><span class=\"s1\">'%N%n%O%n%A%n%C, %S %Z'</span><span class=\"p\">,</span>\n    <span class=\"n\">address_latin_format</span><span class=\"o\">=</span><span class=\"s1\">'%N%n%O%n%A%n%C, %S %Z'</span><span class=\"p\">,</span>\n    <span class=\"n\">allowed_fields</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'street_address'</span><span class=\"p\">,</span> <span class=\"s1\">'company_name'</span><span class=\"p\">,</span> <span class=\"s1\">'city'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'country_area'</span><span class=\"p\">,</span> <span class=\"s1\">'postal_code'</span><span class=\"p\">},</span>\n    <span class=\"n\">required_fields</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'street_address'</span><span class=\"p\">,</span> <span class=\"s1\">'city'</span><span class=\"p\">,</span> <span class=\"s1\">'country_area'</span><span class=\"p\">,</span> <span class=\"s1\">'postal_code'</span><span class=\"p\">},</span>\n    <span class=\"n\">upper_fields</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'city'</span><span class=\"p\">,</span> <span class=\"s1\">'country_area'</span><span class=\"p\">},</span>\n    <span class=\"n\">country_area_type</span><span class=\"o\">=</span><span class=\"s1\">'state'</span><span class=\"p\">,</span>\n    <span class=\"n\">country_area_choices</span><span class=\"o\">=</span><span class=\"p\">[(</span><span class=\"s1\">'AL'</span><span class=\"p\">,</span> <span class=\"s1\">'Alabama'</span><span class=\"p\">),</span> <span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">'WY'</span><span class=\"p\">,</span> <span class=\"s1\">'Wyoming'</span><span class=\"p\">)],</span>\n    <span class=\"n\">city_type</span><span class=\"o\">=</span><span class=\"s1\">'city'</span><span class=\"p\">,</span>\n    <span class=\"n\">city_choices</span><span class=\"o\">=</span><span class=\"p\">[],</span>\n    <span class=\"n\">city_area_type</span><span class=\"o\">=</span><span class=\"s1\">'suburb'</span><span class=\"p\">,</span>\n    <span class=\"n\">city_area_choices</span><span class=\"o\">=</span><span class=\"p\">[],</span>\n    <span class=\"n\">postal_code_type</span><span class=\"o\">=</span><span class=\"s1\">'zip'</span><span class=\"p\">,</span>\n    <span class=\"n\">postal_code_matchers</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"s1\">'^(</span><span class=\"se\">\\\\</span><span class=\"s1\">d</span><span class=\"si\">{5}</span><span class=\"s1\">)(?:[ </span><span class=\"se\">\\\\</span><span class=\"s1\">-](</span><span class=\"se\">\\\\</span><span class=\"s1\">d</span><span class=\"si\">{4}</span><span class=\"s1\">))?$'</span><span class=\"p\">),</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"s1\">'^9[0-5]|96[01]'</span><span class=\"p\">)],</span>\n    <span class=\"n\">postal_code_examples</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'90000'</span><span class=\"p\">,</span> <span class=\"s1\">'96199'</span><span class=\"p\">],</span>\n    <span class=\"n\">postal_code_prefix</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"all-known-fields\">\n<h2>All known fields</h2>\n<p>You can use <tt>KNOWN_FIELDS</tt> set, to render optional address fields as hidden\nelements of your form:</p>\n<pre><span class=\"o\">&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">i18naddress</span> <span class=\"kn\">import</span> <span class=\"n\">get_validation_rules</span><span class=\"p\">,</span> <span class=\"n\">KNOWN_FIELDS</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">rules</span> <span class=\"o\">=</span> <span class=\"n\">get_validation_rules</span><span class=\"p\">({</span><span class=\"s1\">'country_code'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">})</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">KNOWN_FIELDS</span> <span class=\"o\">-</span> <span class=\"n\">rules</span><span class=\"o\">.</span><span class=\"n\">allowed_fields</span>\n<span class=\"p\">{</span><span class=\"s1\">'city_area'</span><span class=\"p\">,</span> <span class=\"s1\">'sorting_code'</span><span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"raw-google-s-i18n-data\">\n<h2>Raw Google\u2019s i18n data</h2>\n<p>All raw data are stored in <tt>I18nCountryData</tt> dict like object:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">i18naddress</span> <span class=\"kn\">import</span> <span class=\"n\">I18nCountryData</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">i18n_country_data</span> <span class=\"o\">=</span> <span class=\"n\">I18nCountryData</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">i18n_country_data</span><span class=\"p\">[</span><span class=\"s1\">'US'</span><span class=\"p\">]</span>\n<span class=\"p\">{</span><span class=\"s1\">'fmt'</span><span class=\"p\">:</span> <span class=\"s1\">'%N%n%O%n%A%n%C, %S %Z'</span><span class=\"p\">,</span>\n <span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"s1\">'data/US'</span><span class=\"p\">,</span>\n <span class=\"s1\">'key'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">,</span>\n <span class=\"s1\">'lang'</span><span class=\"p\">:</span> <span class=\"s1\">'en'</span><span class=\"p\">,</span>\n <span class=\"s1\">'languages'</span><span class=\"p\">:</span> <span class=\"s1\">'en'</span><span class=\"p\">,</span>\n <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'UNITED STATES'</span><span class=\"p\">,</span>\n <span class=\"s1\">'posturl'</span><span class=\"p\">:</span> <span class=\"s1\">'https://tools.usps.com/go/ZipLookupAction!input.action'</span><span class=\"p\">,</span>\n <span class=\"s1\">'require'</span><span class=\"p\">:</span> <span class=\"s1\">'ACSZ'</span><span class=\"p\">,</span>\n <span class=\"s1\">'state_name_type'</span><span class=\"p\">:</span> <span class=\"s1\">'state'</span><span class=\"p\">,</span>\n <span class=\"s1\">'sub_keys'</span><span class=\"p\">:</span> <span class=\"s1\">'AL~AK~AS~AZ~AR~AA~AE~AP~CA~CO~CT~DE~DC~FL~GA~GU~HI~ID~IL~IN~IA~KS~KY~LA~ME~MH~MD~MA~MI~FM~MN~MS~MO~MT~NE~NV~NH~NJ~NM~NY~NC~ND~MP~OH~OK~OR~PW~PA~PR~RI~SC~SD~TN~TX~UT~VT~VI~VA~WA~WV~WI~WY'</span><span class=\"p\">,</span>\n <span class=\"s1\">'sub_names'</span><span class=\"p\">:</span> <span class=\"s1\">'Alabama~Alaska~American Samoa~Arizona~Arkansas~Armed Forces (AA)~Armed Forces (AE)~Armed Forces (AP)~California~Colorado~Connecticut~Delaware~District of Columbia~Florida~Georgia~Guam~Hawaii~Idaho~Illinois~Indiana~Iowa~Kansas~Kentucky~Louisiana~Maine~Marshall Islands~Maryland~Massachusetts~Michigan~Micronesia~Minnesota~Mississippi~Missouri~Montana~Nebraska~Nevada~New Hampshire~New Jersey~New Mexico~New York~North Carolina~North Dakota~Northern Mariana Islands~Ohio~Oklahoma~Oregon~Palau~Pennsylvania~Puerto Rico~Rhode Island~South Carolina~South Dakota~Tennessee~Texas~Utah~Vermont~Virgin Islands~Virginia~Washington~West Virginia~Wisconsin~Wyoming'</span><span class=\"p\">,</span>\n <span class=\"s1\">'sub_zipexs'</span><span class=\"p\">:</span> <span class=\"s1\">'35000,36999~99500,99999~96799~85000,86999~71600,72999~34000,34099~09000,09999~96200,96699~90000,96199~80000,81999~06000,06999~19700,19999~20000,20099:20200,20599:56900,56999~32000,33999:34100,34999~30000,31999:39800,39899:39901~96910,96932~96700,96798:96800,96899~83200,83999~60000,62999~46000,47999~50000,52999~66000,67999~40000,42799~70000,71599~03900,04999~96960,96979~20600,21999~01000,02799:05501:05544~48000,49999~96941,96944~55000,56799~38600,39799~63000,65999~59000,59999~68000,69999~88900,89999~03000,03899~07000,08999~87000,88499~10000,14999:06390:00501:00544~27000,28999~58000,58999~96950,96952~43000,45999~73000,74999~97000,97999~96940~15000,19699~00600,00799:00900,00999~02800,02999~29000,29999~57000,57999~37000,38599~75000,79999:88500,88599:73301:73344~84000,84999~05000,05999~00800,00899~20100,20199:22000,24699~98000,99499~24700,26999~53000,54999~82000,83199:83414'</span><span class=\"p\">,</span>\n <span class=\"s1\">'sub_zips'</span><span class=\"p\">:</span> <span class=\"s1\">'3[56]~99[5-9]~96799~8[56]~71[6-9]|72~340~09~96[2-6]~9[0-5]|96[01]~8[01]~06~19[7-9]~20[02-5]|569~3[23]|34[1-9]~3[01]|398|39901~969([1-2]</span><span class=\"se\">\\\\</span><span class=\"s1\">d|3[12])~967[0-8]|9679[0-8]|968~83[2-9]~6[0-2]~4[67]~5[0-2]~6[67]~4[01]|42[0-7]~70|71[0-5]~039|04~969[67]~20[6-9]|21~01|02[0-7]|05501|05544~4[89]~9694[1-4]~55|56[0-7]~38[6-9]|39[0-7]~6[3-5]~59~6[89]~889|89~03[0-8]~0[78]~87|88[0-4]~1[0-4]|06390|00501|00544~2[78]~58~9695[0-2]~4[3-5]~7[34]~97~969(39|40)~1[5-8]|19[0-6]~00[679]~02[89]~29~57~37|38[0-5]~7[5-9]|885|73301|73344~84~05~008~201|2[23]|24[0-6]~98|99[0-4]~24[7-9]|2[56]~5[34]~82|83[01]|83414'</span><span class=\"p\">,</span>\n <span class=\"s1\">'upper'</span><span class=\"p\">:</span> <span class=\"s1\">'CS'</span><span class=\"p\">,</span>\n <span class=\"s1\">'zip'</span><span class=\"p\">:</span> <span class=\"s1\">'(</span><span class=\"se\">\\\\</span><span class=\"s1\">d</span><span class=\"si\">{5}</span><span class=\"s1\">)(?:[ </span><span class=\"se\">\\\\</span><span class=\"s1\">-](</span><span class=\"se\">\\\\</span><span class=\"s1\">d</span><span class=\"si\">{4}</span><span class=\"s1\">))?'</span><span class=\"p\">,</span>\n <span class=\"s1\">'zip_name_type'</span><span class=\"p\">:</span> <span class=\"s1\">'zip'</span><span class=\"p\">,</span>\n <span class=\"s1\">'zipex'</span><span class=\"p\">:</span> <span class=\"s1\">'95014,22162-1010'</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">i18n_country_data</span><span class=\"p\">[</span><span class=\"s1\">'US/CA'</span><span class=\"p\">]</span>\n<span class=\"p\">{</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"s1\">'data/US/CA'</span><span class=\"p\">,</span>\n <span class=\"s1\">'key'</span><span class=\"p\">:</span> <span class=\"s1\">'CA'</span><span class=\"p\">,</span>\n <span class=\"s1\">'lang'</span><span class=\"p\">:</span> <span class=\"s1\">'en'</span><span class=\"p\">,</span>\n <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'California'</span><span class=\"p\">,</span>\n <span class=\"s1\">'zip'</span><span class=\"p\">:</span> <span class=\"s1\">'9[0-5]|96[01]'</span><span class=\"p\">,</span>\n <span class=\"s1\">'zipex'</span><span class=\"p\">:</span> <span class=\"s1\">'90000,96199'</span><span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"used-with-django-form\">\n<h2>Used with Django form</h2>\n<p>Django forms will return only required address fields in <tt>form.cleaned_data</tt> dict. So addresses in the database will be normalized.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">i18naddress</span> <span class=\"kn\">import</span> <span class=\"n\">InvalidAddress</span><span class=\"p\">,</span> <span class=\"n\">normalize_address</span><span class=\"p\">,</span> <span class=\"n\">get_validation_rules</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">AddressForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n\n    <span class=\"n\">COUNTRY_CHOICES</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s1\">'PL'</span><span class=\"p\">,</span> <span class=\"s1\">'Poland'</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'AE'</span><span class=\"p\">,</span> <span class=\"s1\">'United Arab Emirates'</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'US'</span><span class=\"p\">,</span> <span class=\"s1\">'United States of America'</span><span class=\"p\">)]</span>\n\n    <span class=\"n\">ERROR_MESSAGES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'required'</span><span class=\"p\">:</span> <span class=\"s1\">'This field is required'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'invalid'</span><span class=\"p\">:</span> <span class=\"s1\">'Enter a valid name'</span><span class=\"p\">}</span>\n\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">company_name</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">street_address</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">city</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">city_area</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">country_code</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">ChoiceField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">choices</span><span class=\"o\">=</span><span class=\"n\">COUNTRY_CHOICES</span><span class=\"p\">)</span>\n    <span class=\"n\">country_area</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">postal_code</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">clean</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">clean_data</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">AddressForm</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">()</span>\n        <span class=\"n\">validation_rules</span> <span class=\"o\">=</span> <span class=\"n\">get_validation_rules</span><span class=\"p\">(</span><span class=\"n\">clean_data</span><span class=\"p\">)</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">valid_address</span> <span class=\"o\">=</span> <span class=\"n\">normalize_address</span><span class=\"p\">(</span><span class=\"n\">clean_data</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"n\">InvalidAddress</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"n\">errors</span> <span class=\"o\">=</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">errors</span>\n            <span class=\"n\">valid_address</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n            <span class=\"k\">for</span> <span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">error_code</span> <span class=\"ow\">in</span> <span class=\"n\">errors</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                <span class=\"k\">if</span> <span class=\"n\">field</span> <span class=\"o\">==</span> <span class=\"s1\">'postal_code'</span><span class=\"p\">:</span>\n                    <span class=\"n\">examples</span> <span class=\"o\">=</span> <span class=\"n\">validation_rules</span><span class=\"o\">.</span><span class=\"n\">postal_code_examples</span>\n                    <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"s1\">'Invalid value, use fomat like </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">examples</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"n\">ERROR_MESSAGES</span><span class=\"p\">[</span><span class=\"n\">error_code</span><span class=\"p\">]</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_error</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">valid_address</span> <span class=\"ow\">or</span> <span class=\"n\">clean_data</span>\n</pre>\n<img alt=\"https://ga-beacon.appspot.com/UA-10159761-14/mirumee/google-i18n-address?pixel\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1eb2fc4c04ce866c1d341d2826a92d044eeffea8/68747470733a2f2f67612d626561636f6e2e61707073706f742e636f6d2f55412d31303135393736312d31342f6d6972756d65652f676f6f676c652d6931386e2d616464726573733f706978656c\">\n</div>\n\n          </div>"}, "last_serial": 5391819, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "be1e8eef8e3fc3a67c4767bfff398446", "sha256": "5eccf8d2781b424c086dc3fa0c58087a6b91371386d682e721179e0a1fe59153"}, "downloads": -1, "filename": "google-i18n-address-1.0.0.tar.gz", "has_sig": false, "md5_digest": "be1e8eef8e3fc3a67c4767bfff398446", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 807197, "upload_time": "2015-12-09T12:12:26", "upload_time_iso_8601": "2015-12-09T12:12:26.254517Z", "url": "https://files.pythonhosted.org/packages/55/3c/5846f3ba37804781af584d2b356ad6fa2a8fc73e2e712d8c0d94472a42e0/google-i18n-address-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "76364e97f4ae6150ab3eeb619d199b30", "sha256": "90ee5ffb082aa771f9fa81633e34696fe13169d7b9ff3b6b9d91de0beb2dcfb0"}, "downloads": -1, "filename": "google-i18n-address-1.0.1.tar.gz", "has_sig": false, "md5_digest": "76364e97f4ae6150ab3eeb619d199b30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 807247, "upload_time": "2015-12-09T12:33:38", "upload_time_iso_8601": "2015-12-09T12:33:38.087908Z", "url": "https://files.pythonhosted.org/packages/0e/75/ca3bc41779c31f628ef8759cc0eddbd1d21241c58ff2c9a696100044b285/google-i18n-address-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "c8627b9c5279ef8ab34f382360d942a2", "sha256": "7e50a002480dafe588961982ebda9d99ebf2dc36ef147c16abf33d2739c59b95"}, "downloads": -1, "filename": "google-i18n-address-1.0.2.tar.gz", "has_sig": false, "md5_digest": "c8627b9c5279ef8ab34f382360d942a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 807195, "upload_time": "2015-12-09T13:20:20", "upload_time_iso_8601": "2015-12-09T13:20:20.145692Z", "url": "https://files.pythonhosted.org/packages/59/1e/fc32a33c01892a593394aad4249365bc4204b7e2823c1ae5a94bee576df5/google-i18n-address-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "ac39ee1b5336137abe5b1440cd019baf", "sha256": "e819f4e765c6d98ddaf94bfb5b1fce698f637916532106494cac65e773b09a44"}, "downloads": -1, "filename": "google-i18n-address-1.0.3.tar.gz", "has_sig": false, "md5_digest": "ac39ee1b5336137abe5b1440cd019baf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 807199, "upload_time": "2015-12-14T14:09:32", "upload_time_iso_8601": "2015-12-14T14:09:32.338858Z", "url": "https://files.pythonhosted.org/packages/b0/02/1adaaeaa88c71b3eddac179d03a79d07040d711a7b926bee46dbcc4efc75/google-i18n-address-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "deda921daddc2ba696f6ae67799f4802", "sha256": "ff97811b7583f201b99f83f26cc7e061d60c7711083d9ba0bad77dcc96bcfec5"}, "downloads": -1, "filename": "google-i18n-address-1.0.4.tar.gz", "has_sig": false, "md5_digest": "deda921daddc2ba696f6ae67799f4802", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 811011, "upload_time": "2015-12-25T10:18:36", "upload_time_iso_8601": "2015-12-25T10:18:36.854031Z", "url": "https://files.pythonhosted.org/packages/0e/e8/f0463c191ac14c31767cfca0c869870e3d75f572474d5bd02f9635ebc220/google-i18n-address-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "43400ae8d3b12131f7dd4076d502901e", "sha256": "0ddbe64775a61f17ee28b3c1141af1c0761ad4bda77c089f21422591a58f76ef"}, "downloads": -1, "filename": "google-i18n-address-1.0.5.tar.gz", "has_sig": false, "md5_digest": "43400ae8d3b12131f7dd4076d502901e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 811026, "upload_time": "2015-12-25T10:30:00", "upload_time_iso_8601": "2015-12-25T10:30:00.420277Z", "url": "https://files.pythonhosted.org/packages/bf/86/cae87eadd1dbe32d081d6f25096631106b2f08a04ace842c29f6e21f8b28/google-i18n-address-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "b5c38981707b76b55f21d2a7bf358527", "sha256": "5132515e7616b6e67f7311991c9361e316b513000dfd5c86fb975fdf49556ab6"}, "downloads": -1, "filename": "google-i18n-address-1.0.6.tar.gz", "has_sig": false, "md5_digest": "b5c38981707b76b55f21d2a7bf358527", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 816471, "upload_time": "2016-01-04T13:01:15", "upload_time_iso_8601": "2016-01-04T13:01:15.777926Z", "url": "https://files.pythonhosted.org/packages/89/17/a0c16c3fc9a7dc463907a61a5028e8adf0ee1b24152681581341b1eac3d0/google-i18n-address-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "26cfe2e009557374232e696b919f06f3", "sha256": "66323f607d03b6c827057bcdc087c19f303b4853e759defdf6b836884ab9e5a5"}, "downloads": -1, "filename": "google-i18n-address-1.0.7.tar.gz", "has_sig": false, "md5_digest": "26cfe2e009557374232e696b919f06f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 815078, "upload_time": "2016-01-04T19:26:58", "upload_time_iso_8601": "2016-01-04T19:26:58.890476Z", "url": "https://files.pythonhosted.org/packages/c4/2a/4ccde0441e50824b6bf8ead24b13db639db9c07b0a77eece111b3c11def2/google-i18n-address-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "217bb62e1e16312f6aef0ea2f278ddd4", "sha256": "b9a434682bb6682a97ce11d407f4c6c7d517f8c1d4a1f2c6df4f82d9d1134835"}, "downloads": -1, "filename": "google_i18n_address-1.0.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "217bb62e1e16312f6aef0ea2f278ddd4", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 751401, "upload_time": "2016-06-27T09:21:26", "upload_time_iso_8601": "2016-06-27T09:21:26.799447Z", "url": "https://files.pythonhosted.org/packages/23/77/6dcc5c360338af95ac6d6b5fdaa22691a1ec5e7d5955c6da979a3a60aa93/google_i18n_address-1.0.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "47f75842f372c11a57e12d652b732e9a", "sha256": "1cf9102b54c9028af1033f2408f81e2543f11e2827ddd923963a1dbf4ae0e1ba"}, "downloads": -1, "filename": "google-i18n-address-1.0.8.tar.gz", "has_sig": false, "md5_digest": "47f75842f372c11a57e12d652b732e9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 700755, "upload_time": "2016-06-27T09:10:27", "upload_time_iso_8601": "2016-06-27T09:10:27.233584Z", "url": "https://files.pythonhosted.org/packages/ad/3d/b9fc76f527d83848356335b21c0e78d06e2a7db51e5a319c891ebdc6c9d4/google-i18n-address-1.0.8.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "882b1a586271de8ced04197e26830232", "sha256": "62c76c472bad0c56047709335392434307cf288abd5fe8877d6e58ba368a128b"}, "downloads": -1, "filename": "google_i18n_address-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "882b1a586271de8ced04197e26830232", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 765252, "upload_time": "2016-10-24T15:08:10", "upload_time_iso_8601": "2016-10-24T15:08:10.141201Z", "url": "https://files.pythonhosted.org/packages/db/76/d247c8b823f5ff19afa4b04685c85d46ecefd080b1853755cb13f0a9b08c/google_i18n_address-2.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31d2881b08ab6ab9c0ddc5958110bf70", "sha256": "2bd714976de4af97ce9448ccef46ba8fc5bd79e9a912b0d8bc321023794fb17e"}, "downloads": -1, "filename": "google-i18n-address-2.0.0.tar.gz", "has_sig": false, "md5_digest": "31d2881b08ab6ab9c0ddc5958110bf70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 713341, "upload_time": "2016-10-24T15:07:58", "upload_time_iso_8601": "2016-10-24T15:07:58.991776Z", "url": "https://files.pythonhosted.org/packages/8b/e0/821b1f006268ec893d57ad54c8eb343a71ab07786efe25824086cc5e5c27/google-i18n-address-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "249e3949e37ee1a933b1a82b41e3f70e", "sha256": "839bb8cb9c796489c3d8e39ba6b088f069baa43081b1f2aa04334a8209bb4992"}, "downloads": -1, "filename": "google-i18n-address-2.0.1.tar.gz", "has_sig": false, "md5_digest": "249e3949e37ee1a933b1a82b41e3f70e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 716188, "upload_time": "2016-12-15T12:56:29", "upload_time_iso_8601": "2016-12-15T12:56:29.125767Z", "url": "https://files.pythonhosted.org/packages/88/2a/af668b489f9f462ccafaf5d3829d3a7e6dd0b19fc55e057f67b7c8e5c90e/google-i18n-address-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "8f03763d505ddcad8cc9f46a0976451b", "sha256": "e5f07658a96c5e1acf5a129cc5320f5b7e254be4c921d52d9f6de5ef6d4e42ad"}, "downloads": -1, "filename": "google-i18n-address-2.0.2.tar.gz", "has_sig": false, "md5_digest": "8f03763d505ddcad8cc9f46a0976451b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 716191, "upload_time": "2017-03-06T18:34:52", "upload_time_iso_8601": "2017-03-06T18:34:52.628818Z", "url": "https://files.pythonhosted.org/packages/4c/8d/f0bc5ab527744d620fd8dcc053e3009c2129d7842114681a39abcd9b87b6/google-i18n-address-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "6a77a63d14a40859b03fedcabc5a1d84", "sha256": "82823042adc4a734cf7932c6fc23d144d05a871ca45ba9832d17da63394d494b"}, "downloads": -1, "filename": "google-i18n-address-2.0.3.tar.gz", "has_sig": false, "md5_digest": "6a77a63d14a40859b03fedcabc5a1d84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 710874, "upload_time": "2017-11-08T13:52:04", "upload_time_iso_8601": "2017-11-08T13:52:04.801227Z", "url": "https://files.pythonhosted.org/packages/36/94/17c3e239f18708b0c96fab7abb040ed49fa0f50c200c3663485f3da69c1d/google-i18n-address-2.0.3.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "2282507f87267725942892843fd5fd8c", "sha256": "fd1e69caac2268a254db2ebda5c5017bf23be43414b8ef260ec4375cdcdc1746"}, "downloads": -1, "filename": "google_i18n_address-2.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2282507f87267725942892843fd5fd8c", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 760466, "upload_time": "2017-11-15T15:30:16", "upload_time_iso_8601": "2017-11-15T15:30:16.260919Z", "url": "https://files.pythonhosted.org/packages/ca/6b/ca4281d47214ab0673abedfc5991b5125618ce7dd4c23819d75e7b942aaf/google_i18n_address-2.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "290bc3195bf9f6173f462a3e89350ade", "sha256": "f79a1d082b41644c3efcf3f4021c478e3025b78b16abf6aba1c40d97f7d949ca"}, "downloads": -1, "filename": "google-i18n-address-2.1.0.tar.gz", "has_sig": false, "md5_digest": "290bc3195bf9f6173f462a3e89350ade", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 711376, "upload_time": "2017-11-15T15:30:00", "upload_time_iso_8601": "2017-11-15T15:30:00.141745Z", "url": "https://files.pythonhosted.org/packages/5e/25/ce8ef12a32e51cd5572bd966d1fa84e5b4961b24c2bed672ded927b63034/google-i18n-address-2.1.0.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "3db84cbcab644931755e927f4742efe7", "sha256": "eeba9a309b7d83d1f43211f53a00b6c77fffca2474995af3b544371fcafb2dc6"}, "downloads": -1, "filename": "google_i18n_address-2.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3db84cbcab644931755e927f4742efe7", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 760845, "upload_time": "2017-11-20T12:51:17", "upload_time_iso_8601": "2017-11-20T12:51:17.533966Z", "url": "https://files.pythonhosted.org/packages/0f/3c/2271eca0911e87ee946e3a7ff2d1021c870bb597e8b10dded5caa07fe73d/google_i18n_address-2.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8c3f49b0e36baf29868a7d9942679d27", "sha256": "bf70135a3c12e1e6092db5eb836e4d79c02bf50ec5d89e75bf0e5abf7d980142"}, "downloads": -1, "filename": "google-i18n-address-2.2.0.tar.gz", "has_sig": false, "md5_digest": "8c3f49b0e36baf29868a7d9942679d27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 711731, "upload_time": "2017-11-20T12:51:02", "upload_time_iso_8601": "2017-11-20T12:51:02.499209Z", "url": "https://files.pythonhosted.org/packages/ea/f3/707ba07633ab95f3dd5a77201a29974ce060cff34bc149ac125efb55d32c/google-i18n-address-2.2.0.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "2508652b8d9470cdffbf254da85a32a4", "sha256": "f44d34a2517830f272deee504b67c0f17981f3d42c4cdc6825ea75940257273d"}, "downloads": -1, "filename": "google_i18n_address-2.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2508652b8d9470cdffbf254da85a32a4", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 767909, "upload_time": "2017-11-23T15:49:45", "upload_time_iso_8601": "2017-11-23T15:49:45.491474Z", "url": "https://files.pythonhosted.org/packages/f7/07/14482747e564db686b61c9605c521985de3e7a350fd71815fb36401085e1/google_i18n_address-2.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b2f7368435e36cf98d17742a6e3375e", "sha256": "5e916b6e20c34b45bb2b8974e2a14425e0ff81723a7fa01c8772da43f165726e"}, "downloads": -1, "filename": "google-i18n-address-2.2.1.tar.gz", "has_sig": false, "md5_digest": "0b2f7368435e36cf98d17742a6e3375e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 718830, "upload_time": "2017-11-23T15:49:37", "upload_time_iso_8601": "2017-11-23T15:49:37.079218Z", "url": "https://files.pythonhosted.org/packages/96/ad/9affb1613748fda9d8c2c14be3902b154e8f34b7638c200f12c7a4f9bacd/google-i18n-address-2.2.1.tar.gz", "yanked": false}], "2.2.2": [{"comment_text": "", "digests": {"md5": "e30e9696ecdae53267dae6f7c409d147", "sha256": "f3344c1a37aade3501e8072403f4df97c696bbf34cb2f17458fb2a3c91ed4672"}, "downloads": -1, "filename": "google_i18n_address-2.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e30e9696ecdae53267dae6f7c409d147", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 766777, "upload_time": "2018-02-06T12:50:43", "upload_time_iso_8601": "2018-02-06T12:50:43.469123Z", "url": "https://files.pythonhosted.org/packages/77/54/3c17353999360679945afc881e98c1651ca0686e3a805bcf7b292426fdef/google_i18n_address-2.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5821a27a65ce5f1154c73e5601a87df5", "sha256": "2c513eb5d0b03a6f42d3e338436380e958b960b23c9ca671c1c81241984211c8"}, "downloads": -1, "filename": "google-i18n-address-2.2.2.tar.gz", "has_sig": false, "md5_digest": "5821a27a65ce5f1154c73e5601a87df5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 718073, "upload_time": "2018-02-06T12:50:29", "upload_time_iso_8601": "2018-02-06T12:50:29.599953Z", "url": "https://files.pythonhosted.org/packages/b5/88/57891d7a8f174e2b787ef78c6191475c5068b54634bb0fa2f601a8299c2c/google-i18n-address-2.2.2.tar.gz", "yanked": false}], "2.2.3": [{"comment_text": "", "digests": {"md5": "07f1510ebf22140374f29691c9f7db14", "sha256": "c4b090505d4b998b3f1804f07525a5f07a057d700571d2ce606b20fe55b4f84b"}, "downloads": -1, "filename": "google_i18n_address-2.2.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "07f1510ebf22140374f29691c9f7db14", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 763480, "upload_time": "2018-04-04T11:20:54", "upload_time_iso_8601": "2018-04-04T11:20:54.669040Z", "url": "https://files.pythonhosted.org/packages/d4/18/697b5204e1254bf0ac9a95a1766b30d530f33f63edf0cf4fdc83ae6c9847/google_i18n_address-2.2.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ccb078a6c642b3cb32842372bd29b95", "sha256": "049a78b96d1dd172f36d68e28fbeca1e63c15eb6a7b1ad8a839155b825088b7f"}, "downloads": -1, "filename": "google-i18n-address-2.2.3.tar.gz", "has_sig": false, "md5_digest": "8ccb078a6c642b3cb32842372bd29b95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 719929, "upload_time": "2018-04-04T11:20:47", "upload_time_iso_8601": "2018-04-04T11:20:47.667988Z", "url": "https://files.pythonhosted.org/packages/41/03/0223061d9498444fc1beb0d3f77167905976dbb461b63a0a009f6b439118/google-i18n-address-2.2.3.tar.gz", "yanked": false}], "2.3.0": [{"comment_text": "", "digests": {"md5": "6eb960b55d18efc4b6a38ab4032a7497", "sha256": "e38e7a7bfac94c07f5ca2088e93ebb96432a11fa98abe846ba7cb7e364c7859a"}, "downloads": -1, "filename": "google_i18n_address-2.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6eb960b55d18efc4b6a38ab4032a7497", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 764676, "upload_time": "2018-04-05T09:31:45", "upload_time_iso_8601": "2018-04-05T09:31:45.899488Z", "url": "https://files.pythonhosted.org/packages/58/c4/fc1497d85fbb4c4e0803f44e55ff67484f3042149fab097df9aaa2b25303/google_i18n_address-2.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "38300003fe8787b8dd98be2b70191e0e", "sha256": "aa89525b46e66b63e0bdeb6634f18fd48d5f2105a5ddabdee4c89042316925e3"}, "downloads": -1, "filename": "google-i18n-address-2.3.0.tar.gz", "has_sig": false, "md5_digest": "38300003fe8787b8dd98be2b70191e0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 721340, "upload_time": "2018-04-05T09:31:40", "upload_time_iso_8601": "2018-04-05T09:31:40.085912Z", "url": "https://files.pythonhosted.org/packages/ae/b7/afb32b4bf0ac50031338d6fffca3bb78d989d897d9b212352ac6dd471434/google-i18n-address-2.3.0.tar.gz", "yanked": false}], "2.3.1": [{"comment_text": "", "digests": {"md5": "402f1dce2a5cfbbe4be75eb89bf4e66a", "sha256": "7586ac5bd55e363042f62d292b652e83322abd1b277efc94bb87a6c67c63186f"}, "downloads": -1, "filename": "google_i18n_address-2.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "402f1dce2a5cfbbe4be75eb89bf4e66a", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 766559, "upload_time": "2018-05-10T11:02:45", "upload_time_iso_8601": "2018-05-10T11:02:45.459578Z", "url": "https://files.pythonhosted.org/packages/4f/47/e84330cfde920a7f9783d0aed00a12f424018fad8341b23a5e508a243a9e/google_i18n_address-2.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7c547453ddb6e70cd7f55c48014cb40", "sha256": "f692b9dff38b063d3af2b5651bec964ac8d7ec972a2c50811e8aabcc8520f889"}, "downloads": -1, "filename": "google-i18n-address-2.3.1.tar.gz", "has_sig": false, "md5_digest": "a7c547453ddb6e70cd7f55c48014cb40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 722442, "upload_time": "2018-05-10T11:02:31", "upload_time_iso_8601": "2018-05-10T11:02:31.377854Z", "url": "https://files.pythonhosted.org/packages/70/b5/bfc8a8ef3f579f638428fed4c0e9327e3d82c026dc0764708e269d0d8cca/google-i18n-address-2.3.1.tar.gz", "yanked": false}], "2.3.2": [{"comment_text": "", "digests": {"md5": "0eb5757f0c82b9f5123c96861eb86c55", "sha256": "27de4f60a161f643632d886f18bd29309d7d5bb676b38378f523cd2d6f2013cb"}, "downloads": -1, "filename": "google_i18n_address-2.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0eb5757f0c82b9f5123c96861eb86c55", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 769167, "upload_time": "2018-06-18T09:56:40", "upload_time_iso_8601": "2018-06-18T09:56:40.566990Z", "url": "https://files.pythonhosted.org/packages/b8/04/6a28f8c4b416eb03b48a0a680387af60a2bddbb855327e60be18b1ca0633/google_i18n_address-2.3.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5fd8c753a27b70ce5668066a4db8054c", "sha256": "4737c1c16a7b67adf12875b7917c0a11bd3054a5bd30004b3b1544922fc485ad"}, "downloads": -1, "filename": "google-i18n-address-2.3.2.tar.gz", "has_sig": false, "md5_digest": "5fd8c753a27b70ce5668066a4db8054c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 724927, "upload_time": "2018-06-18T09:56:33", "upload_time_iso_8601": "2018-06-18T09:56:33.867082Z", "url": "https://files.pythonhosted.org/packages/6f/40/74aabc6d1f94050a545d5d466ecb85441a008d91c78ce10573b111f35ea8/google-i18n-address-2.3.2.tar.gz", "yanked": false}], "2.3.3": [{"comment_text": "", "digests": {"md5": "853cc2be6d22e07c311fef5906805055", "sha256": "68c1e5b65fe164c92adc483048abf7b57f2ba4298203495b8aeb02140fabb548"}, "downloads": -1, "filename": "google_i18n_address-2.3.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "853cc2be6d22e07c311fef5906805055", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 772712, "upload_time": "2018-11-23T13:42:49", "upload_time_iso_8601": "2018-11-23T13:42:49.995503Z", "url": "https://files.pythonhosted.org/packages/30/6d/c4c76b79b014d7dfccebf316fed17a02b0c7e6d9ff204cf8bbd86ce30141/google_i18n_address-2.3.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f3b5c8a5db8497bd31c29866eb48f85", "sha256": "8aea5ccf75614bf5b789ff54f8531e8ef8fe30c7ea2d4fc17dd8a88202b71187"}, "downloads": -1, "filename": "google-i18n-address-2.3.3.tar.gz", "has_sig": false, "md5_digest": "8f3b5c8a5db8497bd31c29866eb48f85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 724242, "upload_time": "2018-11-23T13:42:42", "upload_time_iso_8601": "2018-11-23T13:42:42.641079Z", "url": "https://files.pythonhosted.org/packages/61/da/72130c048e5d4dfe084d86fe7502d857e387d97d22b8ae6a9960f431fe78/google-i18n-address-2.3.3.tar.gz", "yanked": false}], "2.3.4": [{"comment_text": "", "digests": {"md5": "fb577214ab94be0377ebe4d899cd8ae8", "sha256": "95820e70309af471de48921551fb4351e9ba7b3671c1b5a6999f6ab0341939f4"}, "downloads": -1, "filename": "google_i18n_address-2.3.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fb577214ab94be0377ebe4d899cd8ae8", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 772807, "upload_time": "2018-12-21T11:18:12", "upload_time_iso_8601": "2018-12-21T11:18:12.407046Z", "url": "https://files.pythonhosted.org/packages/3a/a8/ab3b57025039480a739e348b088b89e897c08babf3644bc31497dbc49103/google_i18n_address-2.3.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00453879ef2608f410b5a780bdf28a7c", "sha256": "a1d2973403799170d2af275d6083211cd51b4fec14f0c8e09f94d6952e0d3238"}, "downloads": -1, "filename": "google-i18n-address-2.3.4.tar.gz", "has_sig": false, "md5_digest": "00453879ef2608f410b5a780bdf28a7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 724403, "upload_time": "2018-12-21T11:17:58", "upload_time_iso_8601": "2018-12-21T11:17:58.132936Z", "url": "https://files.pythonhosted.org/packages/c3/82/8377461ae89c1f53d892d4bbf004e0bff7e1816d0972155a217bab4e0b7a/google-i18n-address-2.3.4.tar.gz", "yanked": false}], "2.3.5": [{"comment_text": "", "digests": {"md5": "c74514f2c8affbf690b140338126d6dd", "sha256": "1350d69e2df80c519b7db25c0056f696dae2b4956cd55c39bd16892cb9015645"}, "downloads": -1, "filename": "google_i18n_address-2.3.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c74514f2c8affbf690b140338126d6dd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 773293, "upload_time": "2019-06-12T15:49:08", "upload_time_iso_8601": "2019-06-12T15:49:08.492094Z", "url": "https://files.pythonhosted.org/packages/b4/e6/581d5a206a3cb04cdb75d51a979487a5718aa0fd3b30caf762719e21b12a/google_i18n_address-2.3.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "772f6da4f4aa11905c8aa5e2731044c6", "sha256": "7c6cd436e9abcdd69ea347d2e440d718019eed55e98b7078051f902a521f6fce"}, "downloads": -1, "filename": "google-i18n-address-2.3.5.tar.gz", "has_sig": false, "md5_digest": "772f6da4f4aa11905c8aa5e2731044c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 724758, "upload_time": "2019-06-12T15:48:47", "upload_time_iso_8601": "2019-06-12T15:48:47.304644Z", "url": "https://files.pythonhosted.org/packages/06/23/807154ef37cfb508a773d6db590be689ad2e206ef5e87e910dd8738c7ad0/google-i18n-address-2.3.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c74514f2c8affbf690b140338126d6dd", "sha256": "1350d69e2df80c519b7db25c0056f696dae2b4956cd55c39bd16892cb9015645"}, "downloads": -1, "filename": "google_i18n_address-2.3.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c74514f2c8affbf690b140338126d6dd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 773293, "upload_time": "2019-06-12T15:49:08", "upload_time_iso_8601": "2019-06-12T15:49:08.492094Z", "url": "https://files.pythonhosted.org/packages/b4/e6/581d5a206a3cb04cdb75d51a979487a5718aa0fd3b30caf762719e21b12a/google_i18n_address-2.3.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "772f6da4f4aa11905c8aa5e2731044c6", "sha256": "7c6cd436e9abcdd69ea347d2e440d718019eed55e98b7078051f902a521f6fce"}, "downloads": -1, "filename": "google-i18n-address-2.3.5.tar.gz", "has_sig": false, "md5_digest": "772f6da4f4aa11905c8aa5e2731044c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 724758, "upload_time": "2019-06-12T15:48:47", "upload_time_iso_8601": "2019-06-12T15:48:47.304644Z", "url": "https://files.pythonhosted.org/packages/06/23/807154ef37cfb508a773d6db590be689ad2e206ef5e87e910dd8738c7ad0/google-i18n-address-2.3.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:37 2020"}