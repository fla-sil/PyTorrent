{"info": {"author": "Grigory Malivenko", "author_email": "nerox8664@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Scientific/Engineering :: Image Recognition"], "description": "# onnx2keras\n\nONNX to Keras deep neural network converter. \n\n[![GitHub License](https://img.shields.io/badge/License-MIT-blue.svg)](https://opensource.org/licenses/MIT)\n[![Python Version](https://img.shields.io/badge/python-2.7%2C3.6-lightgrey.svg)](https://github.com/nerox8664/onnx2keras)\n[![Downloads](https://pepy.tech/badge/onnx2keras)](https://pepy.tech/project/onnx2keras)\n![PyPI](https://img.shields.io/pypi/v/onnx2keras.svg)\n\n## Requirements\n\nTensorFlow 2.0\n\n## API\n\n`onnx_to_keras(onnx_model, input_names, input_shapes=None, name_policy=None, verbose=True, change_ordering=False) -> {Keras model}`\n`onnx_model`: ONNX model to convert\n`input_names`: list with graph input names\n`input_shapes`: override input shapes (experimental)\n`name_policy`: ['renumerate', 'short', 'default'] override layer names (experimental)\n`verbose`: detailed output\n`change_ordering:` change ordering to HWC (experimental)\n\n## Getting started\n\n### ONNX model\n```\nimport onnx\nfrom onnx2keras import onnx_to_keras\n\n# Load ONNX model\nonnx_model = onnx.load('resnet18.onnx')\n\n# Call the converter (input - is the main model input name, can be different for your model)\nk_model = onnx_to_keras(onnx_model, ['input'])\n```\n\nKeras model will be stored to the `k_model` variable. So simple, isn't it?\n\n\n### PyTorch model\n\nUsing ONNX as intermediate format, you can convert PyTorch model as well.\n\n```\nimport numpy as np\nimport torch\nfrom torch.autograd import Variable\nfrom pytorch2keras.converter import pytorch_to_keras\nimport torchvision.models as models\n\nif __name__ == '__main__':\n    input_np = np.random.uniform(0, 1, (1, 3, 224, 224))\n    input_var = Variable(torch.FloatTensor(input_np))\n    model = models.resnet18()\n    model.eval()\n    k_model = \\\n        pytorch_to_keras(model, input_var, [(3, 224, 224,)], verbose=True, change_ordering=True)\n\n    for i in range(3):\n        input_np = np.random.uniform(0, 1, (1, 3, 224, 224))\n        input_var = Variable(torch.FloatTensor(input_np))\n        output = model(input_var)\n        pytorch_output = output.data.numpy()\n        keras_output = k_model.predict(np.transpose(input_np, [0, 2, 3, 1]))\n        error = np.max(pytorch_output - keras_output)\n        print('error -- ', error)  # Around zero :)\n```\n\n### Deplying model as frozen graph\n\nYou can try using the snippet below to convert your onnx / PyTorch model to frozen graph. It may be useful for deploy for Tensorflow.js / for Tensorflow for Android / for Tensorflow C-API.\n\n```\nimport numpy as np\nimport torch\nfrom pytorch2keras.converter import pytorch_to_keras\nfrom torch.autograd import Variable\nimport tensorflow as tf\nfrom tensorflow.python.framework.convert_to_constants import convert_variables_to_constants_v2\n\n\n# Create and load model\nmodel = Model()\nmodel.load_state_dict(torch.load('model-checkpoint.pth'))\nmodel.eval()\n\n# Make dummy variables (and checking if the model works)\ninput_np = np.random.uniform(0, 1, (1, 3, 224, 224))\ninput_var = Variable(torch.FloatTensor(input_np))\noutput = model(input_var)\n\n# Convert the model!\nk_model = pytorch_to_keras(model, input_var, (3, 224, 224), verbose=True, name_policy='short', change_ordering=True)\n\n# Save model to SavedModel format\ntf.saved_model.save(k_model, \"./models\")\n\n# Convert Keras model to ConcreteFunction\nfull_model = tf.function(lambda x: k_model(x))\nfull_model = full_model.get_concrete_function(\n    tf.TensorSpec(k_model.inputs[0].shape, k_model.inputs[0].dtype))\n\n# Get frozen ConcreteFunction\nfrozen_func = convert_variables_to_constants_v2(full_model)\nfrozen_func.graph.as_graph_def()\n\nprint(\"-\" * 50)\nprint(\"Frozen model layers: \")\nfor layer in [op.name for op in frozen_func.graph.get_operations()]:\n    print(layer)\n\nprint(\"-\" * 50)\nprint(\"Frozen model inputs: \")\nprint(frozen_func.inputs)\nprint(\"Frozen model outputs: \")\nprint(frozen_func.outputs)\n\n# Save frozen graph from frozen ConcreteFunction to hard drive\ntf.io.write_graph(graph_or_graph_def=frozen_func.graph,\n                  logdir=\"./frozen_models\",\n                  name=\"frozen_graph.pb\",\n                  as_text=False)\n```\n\n\n## License\nThis software is covered by MIT License.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nerox8664/onnx2keras", "keywords": "machine-learning deep-learning pytorch keras neuralnetwork vgg resnet densenet drn dpn darknet squeezenet mobilenet", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "onnx2keras", "package_url": "https://pypi.org/project/onnx2keras/", "platform": "", "project_url": "https://pypi.org/project/onnx2keras/", "project_urls": {"Homepage": "https://github.com/nerox8664/onnx2keras"}, "release_url": "https://pypi.org/project/onnx2keras/0.0.19/", "requires_dist": null, "requires_python": "", "summary": "The deep learning models convertor", "version": "0.0.19", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>onnx2keras</h1>\n<p>ONNX to Keras deep neural network converter.</p>\n<p><a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"GitHub License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4150014b4dfdd7b565fa18de88e9bb1b8ccd7c08/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d626c75652e737667\"></a>\n<a href=\"https://github.com/nerox8664/onnx2keras\" rel=\"nofollow\"><img alt=\"Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/74d3f53aa5f0c4050327ae6a05454f7995127474/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d322e37253243332e362d6c69676874677265792e737667\"></a>\n<a href=\"https://pepy.tech/project/onnx2keras\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2974171ba9d39a63e63492c6e602eb0a2a7146bd/68747470733a2f2f706570792e746563682f62616467652f6f6e6e78326b65726173\"></a>\n<img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b585474706ffa61fec717aeedeaea6599fed8357/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6f6e6e78326b657261732e737667\"></p>\n<h2>Requirements</h2>\n<p>TensorFlow 2.0</p>\n<h2>API</h2>\n<p><code>onnx_to_keras(onnx_model, input_names, input_shapes=None, name_policy=None, verbose=True, change_ordering=False) -&gt; {Keras model}</code>\n<code>onnx_model</code>: ONNX model to convert\n<code>input_names</code>: list with graph input names\n<code>input_shapes</code>: override input shapes (experimental)\n<code>name_policy</code>: ['renumerate', 'short', 'default'] override layer names (experimental)\n<code>verbose</code>: detailed output\n<code>change_ordering:</code> change ordering to HWC (experimental)</p>\n<h2>Getting started</h2>\n<h3>ONNX model</h3>\n<pre><code>import onnx\nfrom onnx2keras import onnx_to_keras\n\n# Load ONNX model\nonnx_model = onnx.load('resnet18.onnx')\n\n# Call the converter (input - is the main model input name, can be different for your model)\nk_model = onnx_to_keras(onnx_model, ['input'])\n</code></pre>\n<p>Keras model will be stored to the <code>k_model</code> variable. So simple, isn't it?</p>\n<h3>PyTorch model</h3>\n<p>Using ONNX as intermediate format, you can convert PyTorch model as well.</p>\n<pre><code>import numpy as np\nimport torch\nfrom torch.autograd import Variable\nfrom pytorch2keras.converter import pytorch_to_keras\nimport torchvision.models as models\n\nif __name__ == '__main__':\n    input_np = np.random.uniform(0, 1, (1, 3, 224, 224))\n    input_var = Variable(torch.FloatTensor(input_np))\n    model = models.resnet18()\n    model.eval()\n    k_model = \\\n        pytorch_to_keras(model, input_var, [(3, 224, 224,)], verbose=True, change_ordering=True)\n\n    for i in range(3):\n        input_np = np.random.uniform(0, 1, (1, 3, 224, 224))\n        input_var = Variable(torch.FloatTensor(input_np))\n        output = model(input_var)\n        pytorch_output = output.data.numpy()\n        keras_output = k_model.predict(np.transpose(input_np, [0, 2, 3, 1]))\n        error = np.max(pytorch_output - keras_output)\n        print('error -- ', error)  # Around zero :)\n</code></pre>\n<h3>Deplying model as frozen graph</h3>\n<p>You can try using the snippet below to convert your onnx / PyTorch model to frozen graph. It may be useful for deploy for Tensorflow.js / for Tensorflow for Android / for Tensorflow C-API.</p>\n<pre><code>import numpy as np\nimport torch\nfrom pytorch2keras.converter import pytorch_to_keras\nfrom torch.autograd import Variable\nimport tensorflow as tf\nfrom tensorflow.python.framework.convert_to_constants import convert_variables_to_constants_v2\n\n\n# Create and load model\nmodel = Model()\nmodel.load_state_dict(torch.load('model-checkpoint.pth'))\nmodel.eval()\n\n# Make dummy variables (and checking if the model works)\ninput_np = np.random.uniform(0, 1, (1, 3, 224, 224))\ninput_var = Variable(torch.FloatTensor(input_np))\noutput = model(input_var)\n\n# Convert the model!\nk_model = pytorch_to_keras(model, input_var, (3, 224, 224), verbose=True, name_policy='short', change_ordering=True)\n\n# Save model to SavedModel format\ntf.saved_model.save(k_model, \"./models\")\n\n# Convert Keras model to ConcreteFunction\nfull_model = tf.function(lambda x: k_model(x))\nfull_model = full_model.get_concrete_function(\n    tf.TensorSpec(k_model.inputs[0].shape, k_model.inputs[0].dtype))\n\n# Get frozen ConcreteFunction\nfrozen_func = convert_variables_to_constants_v2(full_model)\nfrozen_func.graph.as_graph_def()\n\nprint(\"-\" * 50)\nprint(\"Frozen model layers: \")\nfor layer in [op.name for op in frozen_func.graph.get_operations()]:\n    print(layer)\n\nprint(\"-\" * 50)\nprint(\"Frozen model inputs: \")\nprint(frozen_func.inputs)\nprint(\"Frozen model outputs: \")\nprint(frozen_func.outputs)\n\n# Save frozen graph from frozen ConcreteFunction to hard drive\ntf.io.write_graph(graph_or_graph_def=frozen_func.graph,\n                  logdir=\"./frozen_models\",\n                  name=\"frozen_graph.pb\",\n                  as_text=False)\n</code></pre>\n<h2>License</h2>\n<p>This software is covered by MIT License.</p>\n\n          </div>"}, "last_serial": 7017882, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4bc9c8bd500d4270e1ff26000b0bb3a5", "sha256": "87d9395ca58960ffb060ee01caebee79c0a019ecb30603a73389fe863bd6fbb6"}, "downloads": -1, "filename": "onnx2keras-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4bc9c8bd500d4270e1ff26000b0bb3a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9319, "upload_time": "2019-06-27T08:59:24", "upload_time_iso_8601": "2019-06-27T08:59:24.522495Z", "url": "https://files.pythonhosted.org/packages/ff/e6/a209337b32bc5f739d3997c39ec7c13c13027da0e8e8a72c5a441d7ad8dc/onnx2keras-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "b1d2b5d72eb6336bc4c54eef70c8f2e2", "sha256": "2bea2540e8e7afb133a17ab008f902d23f6422a5301abdb0be7a35d2cc09b2cd"}, "downloads": -1, "filename": "onnx2keras-0.0.10.tar.gz", "has_sig": false, "md5_digest": "b1d2b5d72eb6336bc4c54eef70c8f2e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13480, "upload_time": "2019-10-05T09:05:59", "upload_time_iso_8601": "2019-10-05T09:05:59.800994Z", "url": "https://files.pythonhosted.org/packages/04/86/d0820a3df1c664da720fde969a2f6e29fc30f347913299c01ebdfe7bee67/onnx2keras-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "d9f24bda0b06cf3282d3ac8a395662cb", "sha256": "bc9238dc0505f46b20f00d9bd7f7d9afc9932041754807de7904599be9d96269"}, "downloads": -1, "filename": "onnx2keras-0.0.11.tar.gz", "has_sig": false, "md5_digest": "d9f24bda0b06cf3282d3ac8a395662cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13602, "upload_time": "2019-10-09T07:04:18", "upload_time_iso_8601": "2019-10-09T07:04:18.745289Z", "url": "https://files.pythonhosted.org/packages/9b/5d/60f5ffd06523467d6348558845fbbfd82fff3bd0b12a445495448f542fd2/onnx2keras-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "accdf9e7708542a78242c56d705c3683", "sha256": "ccb4d540fa57322bd2067fbd69a9f737657c89e5eda6c481b73035ba57419e40"}, "downloads": -1, "filename": "onnx2keras-0.0.12.tar.gz", "has_sig": false, "md5_digest": "accdf9e7708542a78242c56d705c3683", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14183, "upload_time": "2019-10-15T14:33:00", "upload_time_iso_8601": "2019-10-15T14:33:00.972561Z", "url": "https://files.pythonhosted.org/packages/3c/60/cb75525f4010e96f64ffd65bb3d9e5d50c932b3d51378447d0cf8b74d439/onnx2keras-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "0f83f548d7b19df9e5fc1c378f19ebac", "sha256": "b41b8a9445b66db1a32c4b85fe12b85c1cd7664a0363b37413a4e503b3516158"}, "downloads": -1, "filename": "onnx2keras-0.0.13.tar.gz", "has_sig": false, "md5_digest": "0f83f548d7b19df9e5fc1c378f19ebac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14532, "upload_time": "2019-10-23T19:13:23", "upload_time_iso_8601": "2019-10-23T19:13:23.179596Z", "url": "https://files.pythonhosted.org/packages/83/d2/aa7c8685acb97faac7562d29159f33abd804db371b8b6fee2bcf6e3a02e3/onnx2keras-0.0.13.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "bf454c93a0f2676ec9028fbba9b407d6", "sha256": "4a81e676bb10b2d7c79c4e10e58ec97b6c31103237fde77db5b1ebdf408ae7f3"}, "downloads": -1, "filename": "onnx2keras-0.0.14.tar.gz", "has_sig": false, "md5_digest": "bf454c93a0f2676ec9028fbba9b407d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14887, "upload_time": "2019-11-08T12:32:57", "upload_time_iso_8601": "2019-11-08T12:32:57.018783Z", "url": "https://files.pythonhosted.org/packages/b3/f9/af88852398dce1e67d34ea958ec2a8a08b0297d34be638ebdfeafc34ccb3/onnx2keras-0.0.14.tar.gz", "yanked": false}], "0.0.15": [{"comment_text": "", "digests": {"md5": "cd11489088262b9042eed7dacc06eb44", "sha256": "ebcb5a1c90cb72aeff7627a41917245ef4745a26b3cfeecb179c2a4216e8be6a"}, "downloads": -1, "filename": "onnx2keras-0.0.15.tar.gz", "has_sig": false, "md5_digest": "cd11489088262b9042eed7dacc06eb44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15042, "upload_time": "2019-11-18T07:26:01", "upload_time_iso_8601": "2019-11-18T07:26:01.595899Z", "url": "https://files.pythonhosted.org/packages/44/19/946feab52ea8d50a2efbf5a738054c88abcec2b4c4e249087d242d62bdc2/onnx2keras-0.0.15.tar.gz", "yanked": false}], "0.0.16": [{"comment_text": "", "digests": {"md5": "3892a017dfd7cacf719c88e9df98e362", "sha256": "687e284c86c76e047c58d9630fe2d5abec66d47fb164e885b24cd24b8aee53da"}, "downloads": -1, "filename": "onnx2keras-0.0.16.tar.gz", "has_sig": false, "md5_digest": "3892a017dfd7cacf719c88e9df98e362", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15227, "upload_time": "2019-11-20T07:42:03", "upload_time_iso_8601": "2019-11-20T07:42:03.875801Z", "url": "https://files.pythonhosted.org/packages/9a/a2/d27bd8628f12aa457fe4511ac974e7daa2ef44db3196bda3daf20c6016e1/onnx2keras-0.0.16.tar.gz", "yanked": false}], "0.0.17": [{"comment_text": "", "digests": {"md5": "70de60873b0a9c5c465c929ac32677cc", "sha256": "435bb8bd4b8e984c52311334a30a63a512460b1f677c18445f0409621bec6b86"}, "downloads": -1, "filename": "onnx2keras-0.0.17.tar.gz", "has_sig": false, "md5_digest": "70de60873b0a9c5c465c929ac32677cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15453, "upload_time": "2019-11-28T21:04:37", "upload_time_iso_8601": "2019-11-28T21:04:37.748623Z", "url": "https://files.pythonhosted.org/packages/37/4d/48ce40006a58419b388e0398e9ca9d2393e64a41a057213b76a5d069911e/onnx2keras-0.0.17.tar.gz", "yanked": false}], "0.0.18": [{"comment_text": "", "digests": {"md5": "1f96828b8f5d13b507671ab5dcd316ba", "sha256": "b183df10069a6c53ae9236fd4aecedda537c2c82deaee60054c6730e5ee6e987"}, "downloads": -1, "filename": "onnx2keras-0.0.18.tar.gz", "has_sig": false, "md5_digest": "1f96828b8f5d13b507671ab5dcd316ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15604, "upload_time": "2020-01-13T23:09:35", "upload_time_iso_8601": "2020-01-13T23:09:35.185946Z", "url": "https://files.pythonhosted.org/packages/82/5d/8bcd5b62399ed3de192bf03deaf6013fcad82c79338c362f7c2240887dd6/onnx2keras-0.0.18.tar.gz", "yanked": false}], "0.0.19": [{"comment_text": "", "digests": {"md5": "0aaacfb7707b2b6fafa3922590b24ef0", "sha256": "eec833f846f3805f7759e3423bf4606d0bd10309731dbcd2252bfba3ec9ac0da"}, "downloads": -1, "filename": "onnx2keras-0.0.19.tar.gz", "has_sig": false, "md5_digest": "0aaacfb7707b2b6fafa3922590b24ef0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17102, "upload_time": "2020-04-14T15:26:21", "upload_time_iso_8601": "2020-04-14T15:26:21.298116Z", "url": "https://files.pythonhosted.org/packages/ce/97/bc63aeae940e920f6d18659b8c175f705db738b60c151160b1bbb1c3085f/onnx2keras-0.0.19.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "bf8be0e6d2ac01c6120b74a6206e9f58", "sha256": "8f6054f6c4d2121e5d30024d0034548a883e2116a3dc8014c8153ee77f00a778"}, "downloads": -1, "filename": "onnx2keras-0.0.2.tar.gz", "has_sig": false, "md5_digest": "bf8be0e6d2ac01c6120b74a6206e9f58", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10150, "upload_time": "2019-06-27T09:04:29", "upload_time_iso_8601": "2019-06-27T09:04:29.492277Z", "url": "https://files.pythonhosted.org/packages/ae/68/e012eff4c9c8a7a13b1ab82a98f15bf5c76318d9a0efc8383c15e84dae78/onnx2keras-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "5e1274145a4163d81bcdff880f95ec61", "sha256": "1f3a91223ac041dabae454e328c6950e2c5663e7b86e1a453237648288f856f7"}, "downloads": -1, "filename": "onnx2keras-0.0.3.tar.gz", "has_sig": false, "md5_digest": "5e1274145a4163d81bcdff880f95ec61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11597, "upload_time": "2019-07-04T21:29:06", "upload_time_iso_8601": "2019-07-04T21:29:06.945099Z", "url": "https://files.pythonhosted.org/packages/6c/0a/985b80db5929ab1e8464ee6516461b101e9986609081616584a83dec8fe8/onnx2keras-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "50734491409e6435537e4f30bd6de851", "sha256": "d464c4f87ff70f30789792776029446d13c0e180bd78c9a02ba87998b5de27c6"}, "downloads": -1, "filename": "onnx2keras-0.0.4.tar.gz", "has_sig": false, "md5_digest": "50734491409e6435537e4f30bd6de851", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13055, "upload_time": "2019-09-12T07:48:38", "upload_time_iso_8601": "2019-09-12T07:48:38.827915Z", "url": "https://files.pythonhosted.org/packages/69/ca/911cf95d4907f1af2ab7439196504fb37893acab809f0345731a10a8a02c/onnx2keras-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "db3f3f36f560eab63c012cc661419a09", "sha256": "cf72cbf3e2255b2936756598acbbb450317f68741511453e51adf6f24664df77"}, "downloads": -1, "filename": "onnx2keras-0.0.5.tar.gz", "has_sig": false, "md5_digest": "db3f3f36f560eab63c012cc661419a09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13391, "upload_time": "2019-09-30T19:44:57", "upload_time_iso_8601": "2019-09-30T19:44:57.232896Z", "url": "https://files.pythonhosted.org/packages/46/ac/91660eac2a76fa406ef9e3a6e06f42c68392a7bed3aabfc7981de27b9a81/onnx2keras-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "62afa42146f3ba435a88665303a4ba6b", "sha256": "2e1209c0c2b86127c92ee4afb6681ceff66ac6964c9f25975f0766af5a3f5a15"}, "downloads": -1, "filename": "onnx2keras-0.0.6.tar.gz", "has_sig": false, "md5_digest": "62afa42146f3ba435a88665303a4ba6b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13367, "upload_time": "2019-10-01T16:26:28", "upload_time_iso_8601": "2019-10-01T16:26:28.416310Z", "url": "https://files.pythonhosted.org/packages/3b/f1/eea2a14203b8c93505e6534665ad1000efe8bf624dd2c812b7c22171d6bd/onnx2keras-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "6d9cfb325c5268a7d206c409ca3dea15", "sha256": "0c163bcebd6f1b01ead83e708adff457ca9395902aeff0a33d37699b0a1a8181"}, "downloads": -1, "filename": "onnx2keras-0.0.7.tar.gz", "has_sig": false, "md5_digest": "6d9cfb325c5268a7d206c409ca3dea15", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13378, "upload_time": "2019-10-01T17:22:11", "upload_time_iso_8601": "2019-10-01T17:22:11.037433Z", "url": "https://files.pythonhosted.org/packages/1b/c9/d08ceef4c9a9a50dfb33cca53180b9d5553a7f470e5148391b3c8d10e234/onnx2keras-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "9064f184fcb7f397be257a917e7f3828", "sha256": "9422f4378b2dd862b322ac8d23085fc4f5e9b617d9134b081d11e98e5f0c27e1"}, "downloads": -1, "filename": "onnx2keras-0.0.8.tar.gz", "has_sig": false, "md5_digest": "9064f184fcb7f397be257a917e7f3828", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13387, "upload_time": "2019-10-01T17:52:50", "upload_time_iso_8601": "2019-10-01T17:52:50.295173Z", "url": "https://files.pythonhosted.org/packages/5e/6d/a5c72608cee14716322b4bd45e75bc3ff861253f9f1751c08e4d1a8b5794/onnx2keras-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "1f18268d9c625a4fee4f5f7311b952ed", "sha256": "be8a45f36ca5f3e0e34722431a65f378d4124028b5508f9f0e7ebf785c186da3"}, "downloads": -1, "filename": "onnx2keras-0.0.9.tar.gz", "has_sig": false, "md5_digest": "1f18268d9c625a4fee4f5f7311b952ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13512, "upload_time": "2019-10-01T20:10:58", "upload_time_iso_8601": "2019-10-01T20:10:58.101270Z", "url": "https://files.pythonhosted.org/packages/eb/35/7683a0616bfc704592afa0e8dce300b6746952e2d4c0d05f93cca51b9ed9/onnx2keras-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0aaacfb7707b2b6fafa3922590b24ef0", "sha256": "eec833f846f3805f7759e3423bf4606d0bd10309731dbcd2252bfba3ec9ac0da"}, "downloads": -1, "filename": "onnx2keras-0.0.19.tar.gz", "has_sig": false, "md5_digest": "0aaacfb7707b2b6fafa3922590b24ef0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17102, "upload_time": "2020-04-14T15:26:21", "upload_time_iso_8601": "2020-04-14T15:26:21.298116Z", "url": "https://files.pythonhosted.org/packages/ce/97/bc63aeae940e920f6d18659b8c175f705db738b60c151160b1bbb1c3085f/onnx2keras-0.0.19.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:50 2020"}