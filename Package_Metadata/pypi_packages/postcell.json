{"info": {"author": "Shahbaz Chaudhary", "author_email": "shahbazc@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Real-time Jupyter Code Feedback (beta software)\nThis project provides a magic command to users of Jupyter Notebook. \n\nThe contents of a cell are sent to a remote server at the time of cell execution. This allows teachers in a class to mark certain cells with `%postcell` magic command and view how their students are performing those exercises in real-time. Instructors can sign up for this service at https://postcell.io\n\n## Pre-requisites\nThis utility is designed to work within Jupyter notebooks. \n\n## Installation\n`pip install postcell`\n\n## Usage\n\nSince contents of a cell are sent to a remote server, do the following to set up the server:\n1. Go to https://postcell.io to create an account\n2. Create a new class and click `Sample config` to get configuration information\n3. Create a file called `postcell.conf` in your project directory and paste the contents of the sample config dialog box. Here is an example:\n\n```json\n{\n\"url\" : \"https://postcell.io/post_cell\",\n\"student_id\" : \"TEST_USER\",\n\"instructor_id\": \"INSTRUCTOR_ID_GENERATED_BY_THE_PROCESS_ABOVE\",\n\"class_id\": \"PythonForPoets\",\n\"should_send_to_server\" : true\n}\n```\n\n## Load and register the newly created class\n\n```\n%reload_ext postcell\n%postcell register\n```\n\nThe `register` command will automatically look for `postcell.conf` in the directory containing your notebook, or any of the parent directories.\n\nYou can also give an explicit config file name as:\n\n`%postcell register -config C:\\Users\\...\\custom_postcell.conf`\n\nIf you prefer not to use a physical config file, you can pass in the following properties:\n\n`%postcell register -student_id STUDENT_USER_NAME -instructor_id INSTRUCTOR_ID -class_id python_intro`\n\n## Submit code\nCreate a cell and give it an exercise name:\n\n```\n%%postcell TEST_EXERCISE1\n\n1+1\n```\n\nExecuting this cell will send the code to a server, where an instructor will be able to view submission in real-time. An instructor can monitor their students' progress, provide real-time feedback and even share the submission screen to show sudents how their classmates solve the same exercise.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://postcell.io", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "postcell", "package_url": "https://pypi.org/project/postcell/", "platform": "", "project_url": "https://pypi.org/project/postcell/", "project_urls": {"Homepage": "https://postcell.io"}, "release_url": "https://pypi.org/project/postcell/0.1.1/", "requires_dist": ["requests", "ipython", "jupyter"], "requires_python": ">=3.6", "summary": "Jupyter magic to post content of cells to postcell.io", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Real-time Jupyter Code Feedback (beta software)</h1>\n<p>This project provides a magic command to users of Jupyter Notebook.</p>\n<p>The contents of a cell are sent to a remote server at the time of cell execution. This allows teachers in a class to mark certain cells with <code>%postcell</code> magic command and view how their students are performing those exercises in real-time. Instructors can sign up for this service at <a href=\"https://postcell.io\" rel=\"nofollow\">https://postcell.io</a></p>\n<h2>Pre-requisites</h2>\n<p>This utility is designed to work within Jupyter notebooks.</p>\n<h2>Installation</h2>\n<p><code>pip install postcell</code></p>\n<h2>Usage</h2>\n<p>Since contents of a cell are sent to a remote server, do the following to set up the server:</p>\n<ol>\n<li>Go to <a href=\"https://postcell.io\" rel=\"nofollow\">https://postcell.io</a> to create an account</li>\n<li>Create a new class and click <code>Sample config</code> to get configuration information</li>\n<li>Create a file called <code>postcell.conf</code> in your project directory and paste the contents of the sample config dialog box. Here is an example:</li>\n</ol>\n<pre><span class=\"p\">{</span>\n<span class=\"nt\">\"url\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"https://postcell.io/post_cell\"</span><span class=\"p\">,</span>\n<span class=\"nt\">\"student_id\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"TEST_USER\"</span><span class=\"p\">,</span>\n<span class=\"nt\">\"instructor_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"INSTRUCTOR_ID_GENERATED_BY_THE_PROCESS_ABOVE\"</span><span class=\"p\">,</span>\n<span class=\"nt\">\"class_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"PythonForPoets\"</span><span class=\"p\">,</span>\n<span class=\"nt\">\"should_send_to_server\"</span> <span class=\"p\">:</span> <span class=\"kc\">true</span>\n<span class=\"p\">}</span>\n</pre>\n<h2>Load and register the newly created class</h2>\n<pre><code>%reload_ext postcell\n%postcell register\n</code></pre>\n<p>The <code>register</code> command will automatically look for <code>postcell.conf</code> in the directory containing your notebook, or any of the parent directories.</p>\n<p>You can also give an explicit config file name as:</p>\n<p><code>%postcell register -config C:\\Users\\...\\custom_postcell.conf</code></p>\n<p>If you prefer not to use a physical config file, you can pass in the following properties:</p>\n<p><code>%postcell register -student_id STUDENT_USER_NAME -instructor_id INSTRUCTOR_ID -class_id python_intro</code></p>\n<h2>Submit code</h2>\n<p>Create a cell and give it an exercise name:</p>\n<pre><code>%%postcell TEST_EXERCISE1\n\n1+1\n</code></pre>\n<p>Executing this cell will send the code to a server, where an instructor will be able to view submission in real-time. An instructor can monitor their students' progress, provide real-time feedback and even share the submission screen to show sudents how their classmates solve the same exercise.</p>\n\n          </div>"}, "last_serial": 7160957, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "6d91b3f55dc3203fb89a2f13064524d4", "sha256": "449e65846729f5098bdfe913d3ef906af942b5be50321e7cab7be2838e95dd2f"}, "downloads": -1, "filename": "postcell-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6d91b3f55dc3203fb89a2f13064524d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4139, "upload_time": "2020-05-03T01:19:59", "upload_time_iso_8601": "2020-05-03T01:19:59.874024Z", "url": "https://files.pythonhosted.org/packages/70/8a/d520eb9d60c5f29d82cf2b87bb8f99f603a966a79825e77cc4378f0135f1/postcell-0.1-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c2a285086629fc986205d4bda3772a6c", "sha256": "e9a3eaf6f3c4a102f9732f4ab5437d79ce1de54832323b8dca82d78846ab77a7"}, "downloads": -1, "filename": "postcell-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c2a285086629fc986205d4bda3772a6c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4304, "upload_time": "2020-05-04T02:25:26", "upload_time_iso_8601": "2020-05-04T02:25:26.149796Z", "url": "https://files.pythonhosted.org/packages/a0/b5/82cbfeb3c65b7f01511977b047bad2dd8fb5855e2c933e1e9227e4b333c9/postcell-0.1.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c2a285086629fc986205d4bda3772a6c", "sha256": "e9a3eaf6f3c4a102f9732f4ab5437d79ce1de54832323b8dca82d78846ab77a7"}, "downloads": -1, "filename": "postcell-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c2a285086629fc986205d4bda3772a6c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4304, "upload_time": "2020-05-04T02:25:26", "upload_time_iso_8601": "2020-05-04T02:25:26.149796Z", "url": "https://files.pythonhosted.org/packages/a0/b5/82cbfeb3c65b7f01511977b047bad2dd8fb5855e2c933e1e9227e4b333c9/postcell-0.1.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:51:22 2020"}