{"info": {"author": "Jan Petykiewicz", "author_email": "anewusername@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU Affero General Public License v3", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Physics"], "description": "# meanas\n\n**meanas** is a python package for electromagnetic simulations\n\n** UNSTABLE / WORK IN PROGRESS **\n\nFormerly known as [fdfd_tools](https://mpxd.net/code/jan/fdfd_tools).\n\nThis package is intended for building simulation inputs, analyzing\nsimulation outputs, and running short simulations on unspecialized hardware.\nIt is designed to provide tooling and a baseline for other, high-performance\npurpose- and hardware-specific solvers.\n\n\n**Contents**\n\n- Finite difference frequency domain (FDFD)\n    * Library of sparse matrices for representing the electromagnetic wave\n    equation in 3D, as well as auxiliary matrices for conversion between fields\n    * Waveguide mode operators\n    * Waveguide mode eigensolver\n    * Stretched-coordinate PML boundaries (SCPML)\n    * Functional versions of most operators\n    * Anisotropic media (limited to diagonal elements eps_xx, eps_yy, eps_zz, mu_xx, ...)\n    * Arbitrary distributions of perfect electric and magnetic conductors (PEC / PMC)\n- Finite difference time domain (FDTD)\n    * Basic Maxwell time-steps\n    * Poynting vector and energy calculation\n    * Convolutional PMLs\n\nThis package does *not* provide a fast matrix solver, though by default\n`meanas.fdfd.solvers.generic(...)` will call\n`scipy.sparse.linalg.qmr(...)` to perform a solve.\nFor 2D FDFD problems this should be fine; likewise, the waveguide mode\nsolver uses scipy's eigenvalue solver, with reasonable results.\n\nFor solving large (or 3D) FDFD problems, I recommend a GPU-based iterative\nsolver, such as [opencl_fdfd](https://mpxd.net/code/jan/opencl_fdfd) or\nthose included in [MAGMA](http://icl.cs.utk.edu/magma/index.html). Your\nsolver will need the ability to solve complex symmetric (non-Hermitian)\nlinear systems, ideally with double precision.\n\n- [Source repository](https://mpxd.net/code/jan/meanas)\n- PyPI *TBD*\n\n\n## Installation\n\n**Requirements:**\n\n* python 3 (tests require 3.7)\n* numpy\n* scipy\n\n\nInstall from PyPI with pip:\n```bash\npip3 install 'meanas[test,examples]'\n```\n\n### Development install\nInstall python3.7, virtualenv, and git:\n```bash\n# This is for Debian/Ubuntu/other-apt-based systems; you may need an alternative command\nsudo apt install python3.7 virtualenv build-essential python3.7-dev git\n```\n\nIf python 3.7 is not your default python3 version, create a virtualenv:\n```bash\n# Check python3 version:\npython3 --version\n# output on my system: Python 3.7.5rc1\n# If this indicates a version >= 3.7, you can skip all\n#  the steps involving virtualenv or referencing the venv/ directory\n\n# Create a virtual environment using python3.7 and place it in the directory `venv/`\nvirtualenv -p python3.7 venv\n```\n\nIn-place development install:\n```bash\n# Download using git\n#git clone https://mpxd.net/code/jan/meanas.git\n\n# If you are using a virtualenv, activate it\nsource venv/bin/activate\n\n# Install in-place (-e, editable) from ./meanas, including testing and example dependencies ([test, examples])\npip3 install --user -e './meanas[test,examples]'\n\n# Run tests\ncd meanas\npython3 -m pytest -rsxX | tee test_results.txt\n```\n\n#### See also:\n- [git book](https://git-scm.com/book/en/v2)\n- [virtualenv documentation](https://virtualenv.pypa.io/en/stable/userguide/)\n- [python language reference](https://docs.python.org/3/reference/index.html)\n- [python standard library](https://docs.python.org/3/library/index.html)\n\n\n## Use\n\nSee `examples/` for some simple examples; you may need additional\npackages such as [gridlock](https://mpxd.net/code/jan/gridlock)\nto run the examples.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://mpxd.net/code/jan/meanas", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "meanas", "package_url": "https://pypi.org/project/meanas/", "platform": "", "project_url": "https://pypi.org/project/meanas/", "project_urls": {"Homepage": "https://mpxd.net/code/jan/meanas"}, "release_url": "https://pypi.org/project/meanas/0.6/", "requires_dist": ["numpy", "scipy", "gridlock ; extra == 'examples'", "dataclasses ; extra == 'test'", "pytest ; extra == 'test'"], "requires_python": "", "summary": "Electromagnetic simulation tools", "version": "0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>meanas</h1>\n<p><strong>meanas</strong> is a python package for electromagnetic simulations</p>\n<p>** UNSTABLE / WORK IN PROGRESS **</p>\n<p>Formerly known as <a href=\"https://mpxd.net/code/jan/fdfd_tools\" rel=\"nofollow\">fdfd_tools</a>.</p>\n<p>This package is intended for building simulation inputs, analyzing\nsimulation outputs, and running short simulations on unspecialized hardware.\nIt is designed to provide tooling and a baseline for other, high-performance\npurpose- and hardware-specific solvers.</p>\n<p><strong>Contents</strong></p>\n<ul>\n<li>Finite difference frequency domain (FDFD)\n<ul>\n<li>Library of sparse matrices for representing the electromagnetic wave\nequation in 3D, as well as auxiliary matrices for conversion between fields</li>\n<li>Waveguide mode operators</li>\n<li>Waveguide mode eigensolver</li>\n<li>Stretched-coordinate PML boundaries (SCPML)</li>\n<li>Functional versions of most operators</li>\n<li>Anisotropic media (limited to diagonal elements eps_xx, eps_yy, eps_zz, mu_xx, ...)</li>\n<li>Arbitrary distributions of perfect electric and magnetic conductors (PEC / PMC)</li>\n</ul>\n</li>\n<li>Finite difference time domain (FDTD)\n<ul>\n<li>Basic Maxwell time-steps</li>\n<li>Poynting vector and energy calculation</li>\n<li>Convolutional PMLs</li>\n</ul>\n</li>\n</ul>\n<p>This package does <em>not</em> provide a fast matrix solver, though by default\n<code>meanas.fdfd.solvers.generic(...)</code> will call\n<code>scipy.sparse.linalg.qmr(...)</code> to perform a solve.\nFor 2D FDFD problems this should be fine; likewise, the waveguide mode\nsolver uses scipy's eigenvalue solver, with reasonable results.</p>\n<p>For solving large (or 3D) FDFD problems, I recommend a GPU-based iterative\nsolver, such as <a href=\"https://mpxd.net/code/jan/opencl_fdfd\" rel=\"nofollow\">opencl_fdfd</a> or\nthose included in <a href=\"http://icl.cs.utk.edu/magma/index.html\" rel=\"nofollow\">MAGMA</a>. Your\nsolver will need the ability to solve complex symmetric (non-Hermitian)\nlinear systems, ideally with double precision.</p>\n<ul>\n<li><a href=\"https://mpxd.net/code/jan/meanas\" rel=\"nofollow\">Source repository</a></li>\n<li>PyPI <em>TBD</em></li>\n</ul>\n<h2>Installation</h2>\n<p><strong>Requirements:</strong></p>\n<ul>\n<li>python 3 (tests require 3.7)</li>\n<li>numpy</li>\n<li>scipy</li>\n</ul>\n<p>Install from PyPI with pip:</p>\n<pre>pip3 install <span class=\"s1\">'meanas[test,examples]'</span>\n</pre>\n<h3>Development install</h3>\n<p>Install python3.7, virtualenv, and git:</p>\n<pre><span class=\"c1\"># This is for Debian/Ubuntu/other-apt-based systems; you may need an alternative command</span>\nsudo apt install python3.7 virtualenv build-essential python3.7-dev git\n</pre>\n<p>If python 3.7 is not your default python3 version, create a virtualenv:</p>\n<pre><span class=\"c1\"># Check python3 version:</span>\npython3 --version\n<span class=\"c1\"># output on my system: Python 3.7.5rc1</span>\n<span class=\"c1\"># If this indicates a version &gt;= 3.7, you can skip all</span>\n<span class=\"c1\">#  the steps involving virtualenv or referencing the venv/ directory</span>\n\n<span class=\"c1\"># Create a virtual environment using python3.7 and place it in the directory `venv/`</span>\nvirtualenv -p python3.7 venv\n</pre>\n<p>In-place development install:</p>\n<pre><span class=\"c1\"># Download using git</span>\n<span class=\"c1\">#git clone https://mpxd.net/code/jan/meanas.git</span>\n\n<span class=\"c1\"># If you are using a virtualenv, activate it</span>\n<span class=\"nb\">source</span> venv/bin/activate\n\n<span class=\"c1\"># Install in-place (-e, editable) from ./meanas, including testing and example dependencies ([test, examples])</span>\npip3 install --user -e <span class=\"s1\">'./meanas[test,examples]'</span>\n\n<span class=\"c1\"># Run tests</span>\n<span class=\"nb\">cd</span> meanas\npython3 -m pytest -rsxX <span class=\"p\">|</span> tee test_results.txt\n</pre>\n<h4>See also:</h4>\n<ul>\n<li><a href=\"https://git-scm.com/book/en/v2\" rel=\"nofollow\">git book</a></li>\n<li><a href=\"https://virtualenv.pypa.io/en/stable/userguide/\" rel=\"nofollow\">virtualenv documentation</a></li>\n<li><a href=\"https://docs.python.org/3/reference/index.html\" rel=\"nofollow\">python language reference</a></li>\n<li><a href=\"https://docs.python.org/3/library/index.html\" rel=\"nofollow\">python standard library</a></li>\n</ul>\n<h2>Use</h2>\n<p>See <code>examples/</code> for some simple examples; you may need additional\npackages such as <a href=\"https://mpxd.net/code/jan/gridlock\" rel=\"nofollow\">gridlock</a>\nto run the examples.</p>\n\n          </div>"}, "last_serial": 6665575, "releases": {"0.6": [{"comment_text": "", "digests": {"md5": "0e1cac456fb02c6cc70249b1bb1e4822", "sha256": "2b02eb881a48e5392cfdf9a11fdd56b21017d52064993bc5123067acfe9d49dc"}, "downloads": -1, "filename": "meanas-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "0e1cac456fb02c6cc70249b1bb1e4822", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 73223, "upload_time": "2020-02-20T03:13:38", "upload_time_iso_8601": "2020-02-20T03:13:38.044662Z", "url": "https://files.pythonhosted.org/packages/68/83/b8ca62f2ba878b195c1315427222f887b7dad1cc121667be5b754563bf6b/meanas-0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f14dc27ca87330123d488375b6697b05", "sha256": "e68b110603c572b0499c9e26bc7cf62128188355209bc67757fe66eabc7c9193"}, "downloads": -1, "filename": "meanas-0.6.tar.gz", "has_sig": false, "md5_digest": "f14dc27ca87330123d488375b6697b05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62511, "upload_time": "2020-02-20T03:13:41", "upload_time_iso_8601": "2020-02-20T03:13:41.086022Z", "url": "https://files.pythonhosted.org/packages/5f/dc/01d665aadb67cdc9201f16ac57c0c3c4d5c1bffd515a015852c07dd0fc8e/meanas-0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0e1cac456fb02c6cc70249b1bb1e4822", "sha256": "2b02eb881a48e5392cfdf9a11fdd56b21017d52064993bc5123067acfe9d49dc"}, "downloads": -1, "filename": "meanas-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "0e1cac456fb02c6cc70249b1bb1e4822", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 73223, "upload_time": "2020-02-20T03:13:38", "upload_time_iso_8601": "2020-02-20T03:13:38.044662Z", "url": "https://files.pythonhosted.org/packages/68/83/b8ca62f2ba878b195c1315427222f887b7dad1cc121667be5b754563bf6b/meanas-0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f14dc27ca87330123d488375b6697b05", "sha256": "e68b110603c572b0499c9e26bc7cf62128188355209bc67757fe66eabc7c9193"}, "downloads": -1, "filename": "meanas-0.6.tar.gz", "has_sig": false, "md5_digest": "f14dc27ca87330123d488375b6697b05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62511, "upload_time": "2020-02-20T03:13:41", "upload_time_iso_8601": "2020-02-20T03:13:41.086022Z", "url": "https://files.pythonhosted.org/packages/5f/dc/01d665aadb67cdc9201f16ac57c0c3c4d5c1bffd515a015852c07dd0fc8e/meanas-0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:42 2020"}