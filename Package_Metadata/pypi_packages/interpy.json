{"info": {"author": "Syrus Akbary", "author_email": "me@syrusakbary.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Interpy = Python String Interpolation\r\n=====================================\r\n\r\nInterpy **extends Python** to support *Ruby like* string interpolation\r\n**#{}**. Quick example: ``print \"Hello #{your_name}\"``\r\n\r\nIt is **hightly optimized**, and directly compiled to bytecode, so you\r\nwill have the same Python speed when using it.\r\n\r\nInstallation\r\n------------\r\n\r\nThe installation of this package is quite simple, you only have to run\r\n``pip install interpy``.\r\n\r\nUsage\r\n-----\r\n\r\nAll python files with string interpolation must have the following first\r\nline\r\n\r\n.. code:: python\r\n\r\n    # coding: interpy\r\n\r\nExample:\r\n\r\n.. code:: python\r\n\r\n    # coding: interpy\r\n\r\n    package = \"Interpy\"\r\n    print \"Enjoy #{package}!\"\r\n\r\nHow it works\r\n------------\r\n\r\n*This package is inspired in Dropbox `pyxl template engine`_.*\r\n\r\nParsing\r\n~~~~~~~\r\n\r\nInterpy uses support for specifying source code encodings as described\r\nin `PEP 263`_ to do what it does. The functionality was originally\r\nprovided so that python developers could write code in non-ascii\r\nlanguages (eg. chinese variable names). Interpy creates a custom\r\nencoding called interpy which allows it to convert interpolated strings\r\ninto regular python before the file is compiled. Once the interpy codec\r\nis registered, any file starting with ``# coding: interpy`` is run\r\nthrough the interpy parser before compilation.\r\n\r\nCompiling\r\n~~~~~~~~~\r\n\r\nThe above example would be compiled to this (in *bytecode*):\r\n\r\n.. code:: python\r\n\r\n    # coding: interpy\r\n\r\n    package = \"Interpy\"\r\n    print \"Enjoy \"+str(package)+\"!\"\r\n\r\n\r\nCompatibility\r\n-------------\r\n\r\nThis package is fully compatible with Python 2+, Python 3+ and PyPy\r\n\r\n\r\nWhy?\r\n----\r\n\r\nI really enjoyed Ruby String interpolation, and ``\"\".format(...)`` or\r\n``\"\" % (...)`` seems very verbose to me. *I'm lazy by nature* ;)\r\n\r\n.. _pyxl template engine: https://github.com/dropbox/pyxl\r\n.. _PEP 263: http://www.python.org/dev/peps/pep-0263/", "description_content_type": null, "docs_url": null, "download_url": "git@github.com:syrusakbary/interpy.git", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/syrusakbary/interpy", "keywords": "python string interpolation interpolate ruby codec", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "interpy", "package_url": "https://pypi.org/project/interpy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/interpy/", "project_urls": {"Download": "git@github.com:syrusakbary/interpy.git", "Homepage": "http://github.com/syrusakbary/interpy"}, "release_url": "https://pypi.org/project/interpy/1.1/", "requires_dist": null, "requires_python": null, "summary": "Interpy extends Python to support Ruby like string interpolation #{}.", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Interpy <strong>extends Python</strong> to support <em>Ruby like</em> string interpolation\n<strong>#{}</strong>. Quick example: <tt>print \"Hello #{your_name}\"</tt></p>\n<p>It is <strong>hightly optimized</strong>, and directly compiled to bytecode, so you\nwill have the same Python speed when using it.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The installation of this package is quite simple, you only have to run\n<tt>pip install interpy</tt>.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>All python files with string interpolation must have the following first\nline</p>\n<pre><span class=\"c1\"># coding: interpy</span>\n</pre>\n<p>Example:</p>\n<pre><span class=\"c1\"># coding: interpy</span>\n\n<span class=\"n\">package</span> <span class=\"o\">=</span> <span class=\"s2\">\"Interpy\"</span>\n<span class=\"nb\">print</span> <span class=\"s2\">\"Enjoy #</span><span class=\"si\">{package}</span><span class=\"s2\">!\"</span>\n</pre>\n</div>\n<div id=\"how-it-works\">\n<h2>How it works</h2>\n<p><em>This package is inspired in Dropbox `pyxl template engine`_.</em></p>\n<div id=\"parsing\">\n<h3>Parsing</h3>\n<p>Interpy uses support for specifying source code encodings as described\nin <a href=\"http://www.python.org/dev/peps/pep-0263/\" rel=\"nofollow\">PEP 263</a> to do what it does. The functionality was originally\nprovided so that python developers could write code in non-ascii\nlanguages (eg. chinese variable names). Interpy creates a custom\nencoding called interpy which allows it to convert interpolated strings\ninto regular python before the file is compiled. Once the interpy codec\nis registered, any file starting with <tt># coding: interpy</tt> is run\nthrough the interpy parser before compilation.</p>\n</div>\n<div id=\"compiling\">\n<h3>Compiling</h3>\n<p>The above example would be compiled to this (in <em>bytecode</em>):</p>\n<pre><span class=\"c1\"># coding: interpy</span>\n\n<span class=\"n\">package</span> <span class=\"o\">=</span> <span class=\"s2\">\"Interpy\"</span>\n<span class=\"nb\">print</span> <span class=\"s2\">\"Enjoy \"</span><span class=\"o\">+</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">package</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"s2\">\"!\"</span>\n</pre>\n</div>\n</div>\n<div id=\"compatibility\">\n<h2>Compatibility</h2>\n<p>This package is fully compatible with Python 2+, Python 3+ and PyPy</p>\n</div>\n<div id=\"why\">\n<h2>Why?</h2>\n<p>I really enjoyed Ruby String interpolation, and <tt><span class=\"pre\">\"\".format(...)</span></tt> or\n<tt>\"\" % <span class=\"pre\">(...)</span></tt> seems very verbose to me. <em>I\u2019m lazy by nature</em> ;)</p>\n</div>\n\n          </div>"}, "last_serial": 963871, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "557a5313985fb7dea99790b739befd62", "sha256": "2bf539b0f3fdc449c79139dc9cb901992736819d2c3f4f854a718507107cb703"}, "downloads": -1, "filename": "interpy-1.0.tar.gz", "has_sig": false, "md5_digest": "557a5313985fb7dea99790b739befd62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3863, "upload_time": "2014-01-08T00:53:41", "upload_time_iso_8601": "2014-01-08T00:53:41.705029Z", "url": "https://files.pythonhosted.org/packages/bc/7d/da011d70bdf1cfa6e9bbd4b3f22fd2eab96e51525b1b33c22b163d521765/interpy-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "a9bc94f902d2ac6bc03e224aa6f8275f", "sha256": "b758d973a01beb7629c0d911ba051e975a576aa8fe21645a17e6197e1cdee058"}, "downloads": -1, "filename": "interpy-1.1.tar.gz", "has_sig": false, "md5_digest": "a9bc94f902d2ac6bc03e224aa6f8275f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9733, "upload_time": "2014-01-08T21:46:27", "upload_time_iso_8601": "2014-01-08T21:46:27.672573Z", "url": "https://files.pythonhosted.org/packages/3c/1d/9ed213a6beb6ae3dbf312da4f1f78531713f88c6a06504ec07844c08ecdf/interpy-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a9bc94f902d2ac6bc03e224aa6f8275f", "sha256": "b758d973a01beb7629c0d911ba051e975a576aa8fe21645a17e6197e1cdee058"}, "downloads": -1, "filename": "interpy-1.1.tar.gz", "has_sig": false, "md5_digest": "a9bc94f902d2ac6bc03e224aa6f8275f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9733, "upload_time": "2014-01-08T21:46:27", "upload_time_iso_8601": "2014-01-08T21:46:27.672573Z", "url": "https://files.pythonhosted.org/packages/3c/1d/9ed213a6beb6ae3dbf312da4f1f78531713f88c6a06504ec07844c08ecdf/interpy-1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:25 2020"}