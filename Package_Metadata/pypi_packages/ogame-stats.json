{"info": {"author": "Erkan Demiralay", "author_email": "erkan.dem@pm.me", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Games/Entertainment :: Simulation"], "description": "## ogame stats\n\nwrapper and logic around public game statistics for https://ogame.org\n\n---\n\nSome classes and methods to retrieve public data of the online game `ogame`.\nThis package is **NOT** intended to interact with an account - which is forbidden anyway.\n\nMight be used to query the data sets, visualize results and generally to do data analysis.\n\n## requirements\ndepends on:\n - python >= 3.6 (uses f-string)\n - xmltodict as a convenience to convert XML data to more basic python types\n - requests to perform http requests and\n - pandas to perform queries on the data\n\n\n## installation\ncreate your virtualenv with your preferred versionin a new directory\n```\nvirtualenv -p python3.<6,7,8> venv\n```\n\ninstall the wrapper\n```\npip install ogama_data_api\n```\n\n## usage\n\n### basic usage\nthe most basic usage would look like.\n```python\n#%%\nimport ogame_stats\n\n#%% supply the two inputs to uniquely identify a universe\nuniverse_id = 162\ncommunity = 'en'\n\n#%% instantiate and thereby load the data\nuniverse = ogame_stats.UniverseQuestions(universe_id, community)\n```\n\nthan you could take a look at the data sets.\n\n```python\n#%% get a list of all the planets\nuniverse.universe\n            id  player          name    coords\n0            1       1        Arakis     1:1:2\n...        ...     ...           ...       ...\n[4378 rows x 4 columns]\n\n#%% find some players\nuniverse.players\n         id              name status alliance\n0         1             Legor      a      NaN\n..      ...               ...    ...      ...\n[751 rows x 4 columns]\n```\n\n## advanced usage\nNow, data itself is nice. But lets ask it some questions. \n**This is needs your help since asking the right questions is the key.**\n\ne.g. look up the planets of a user.\n\n```python\n##%% get the coordinates and names of all the planets of a player\nuniverse.get_planets_of_player('someSpecialName')\n[{'coords': '1:45:4', 'name': 'MotherPlanet'},\n{'coords': '1:144:2', 'name': 'ColonyC'},\n{'coords': '1:145:3', 'name': 'ColonyB'},\n{'coords': '1:303:5', 'name': 'ColonyA'}, \n{'coords': '5:119:9', 'name': 'ColonyE'}, \n{'coords': '1:289:9', 'name': 'ColonyD'},\n{'coords': '1:389:9', 'name': 'ColonyF'}]\n```\n\nor ask for the status (active, inactive, banned, holiday etc.). \n```python\nuniverse.get_player_status('someSpecialName')\n'I'\n```\n\nor just dump everything about `someSpecialName`:\n```python\nuniverse.get_player_data('someSpecialName')\n```\n\nget the complete list of players within a specific alliance\n```python\nuniverse.get_players_of_alliance('someAlliance')\n         id                 name status alliance\n291  103910           reabuilder    NaN   500234\n292  103930              1 4 Fun      v   500234\n312  104181            night owl    NaN   500234\n...\n```\n\nget to see the distribution of the planets owned by the alliance members.\n```python\nuniverse.get_planets_distribution_by_galaxy('someAlliance')\n{'1': 7, '2': 17, '3': 29, '4': 38, '5': 9, '6': 9, '7': 9, '8': 2, '9': 6} \n```\n\n\n### Update frequencies of data\nDon't spam the servers with requests. Since the data sets and classes avoid the usage of \nXML attributes, it's easy to just pickle your `UniverseData` for tests, development and everything else. \nThese are the update frequencies I copied over at some point in time (might have changed):\n\n```\nplayers.xml -> daily\nuniverse.xml -> weekly\nhighscore.xml -> hourly\nalliances.xml -> daily\nserverData.xml -> daily\nplayerData.xml -> weekly\nlocalization.xml -> static\nuniverses.xml -> static\n```\n\nMaybe the easiest way would be to use [requests_cache](https://github.com/reclosedev/requests-cache).\n\n```\nimport requests_cache\nrequests_cache.install_cache('demo_cache')\n```\n\n## issues/ideas\n ... are generally welcome. saves us time.\nAlso, the overall design is far from being ideal.\nPull requests welcome. Be sure to include the tests.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/erkandem/ogame-stats", "keywords": "ogame", "license": "", "maintainer": "", "maintainer_email": "", "name": "ogame-stats", "package_url": "https://pypi.org/project/ogame-stats/", "platform": "", "project_url": "https://pypi.org/project/ogame-stats/", "project_urls": {"Bug Reports": "https://github.com/erkandem/ogame-stats/issues", "Homepage": "https://github.com/erkandem/ogame-stats", "Source": "https://github.com/erkandem/ogame-stats/"}, "release_url": "https://pypi.org/project/ogame-stats/0.3.6/", "requires_dist": ["pandas", "requests", "xmltodict", "coverage ; extra == 'dev'", "pytest ; extra == 'dev'", "wheel ; extra == 'dev'"], "requires_python": ">=3.6, <4", "summary": "wrapper around public game statistics for https://ogame.org", "version": "0.3.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>ogame stats</h2>\n<p>wrapper and logic around public game statistics for <a href=\"https://ogame.org\" rel=\"nofollow\">https://ogame.org</a></p>\n<hr>\n<p>Some classes and methods to retrieve public data of the online game <code>ogame</code>.\nThis package is <strong>NOT</strong> intended to interact with an account - which is forbidden anyway.</p>\n<p>Might be used to query the data sets, visualize results and generally to do data analysis.</p>\n<h2>requirements</h2>\n<p>depends on:</p>\n<ul>\n<li>python &gt;= 3.6 (uses f-string)</li>\n<li>xmltodict as a convenience to convert XML data to more basic python types</li>\n<li>requests to perform http requests and</li>\n<li>pandas to perform queries on the data</li>\n</ul>\n<h2>installation</h2>\n<p>create your virtualenv with your preferred versionin a new directory</p>\n<pre><code>virtualenv -p python3.&lt;6,7,8&gt; venv\n</code></pre>\n<p>install the wrapper</p>\n<pre><code>pip install ogama_data_api\n</code></pre>\n<h2>usage</h2>\n<h3>basic usage</h3>\n<p>the most basic usage would look like.</p>\n<pre><span class=\"c1\">#%%</span>\n<span class=\"kn\">import</span> <span class=\"nn\">ogame_stats</span>\n\n<span class=\"c1\">#%% supply the two inputs to uniquely identify a universe</span>\n<span class=\"n\">universe_id</span> <span class=\"o\">=</span> <span class=\"mi\">162</span>\n<span class=\"n\">community</span> <span class=\"o\">=</span> <span class=\"s1\">'en'</span>\n\n<span class=\"c1\">#%% instantiate and thereby load the data</span>\n<span class=\"n\">universe</span> <span class=\"o\">=</span> <span class=\"n\">ogame_stats</span><span class=\"o\">.</span><span class=\"n\">UniverseQuestions</span><span class=\"p\">(</span><span class=\"n\">universe_id</span><span class=\"p\">,</span> <span class=\"n\">community</span><span class=\"p\">)</span>\n</pre>\n<p>than you could take a look at the data sets.</p>\n<pre><span class=\"c1\">#%% get a list of all the planets</span>\n<span class=\"n\">universe</span><span class=\"o\">.</span><span class=\"n\">universe</span>\n            <span class=\"nb\">id</span>  <span class=\"n\">player</span>          <span class=\"n\">name</span>    <span class=\"n\">coords</span>\n<span class=\"mi\">0</span>            <span class=\"mi\">1</span>       <span class=\"mi\">1</span>        <span class=\"n\">Arakis</span>     <span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">2</span>\n<span class=\"o\">...</span>        <span class=\"o\">...</span>     <span class=\"o\">...</span>           <span class=\"o\">...</span>       <span class=\"o\">...</span>\n<span class=\"p\">[</span><span class=\"mi\">4378</span> <span class=\"n\">rows</span> <span class=\"n\">x</span> <span class=\"mi\">4</span> <span class=\"n\">columns</span><span class=\"p\">]</span>\n\n<span class=\"c1\">#%% find some players</span>\n<span class=\"n\">universe</span><span class=\"o\">.</span><span class=\"n\">players</span>\n         <span class=\"nb\">id</span>              <span class=\"n\">name</span> <span class=\"n\">status</span> <span class=\"n\">alliance</span>\n<span class=\"mi\">0</span>         <span class=\"mi\">1</span>             <span class=\"n\">Legor</span>      <span class=\"n\">a</span>      <span class=\"n\">NaN</span>\n<span class=\"o\">..</span>      <span class=\"o\">...</span>               <span class=\"o\">...</span>    <span class=\"o\">...</span>      <span class=\"o\">...</span>\n<span class=\"p\">[</span><span class=\"mi\">751</span> <span class=\"n\">rows</span> <span class=\"n\">x</span> <span class=\"mi\">4</span> <span class=\"n\">columns</span><span class=\"p\">]</span>\n</pre>\n<h2>advanced usage</h2>\n<p>Now, data itself is nice. But lets ask it some questions.\n<strong>This is needs your help since asking the right questions is the key.</strong></p>\n<p>e.g. look up the planets of a user.</p>\n<pre><span class=\"c1\">##%% get the coordinates and names of all the planets of a player</span>\n<span class=\"n\">universe</span><span class=\"o\">.</span><span class=\"n\">get_planets_of_player</span><span class=\"p\">(</span><span class=\"s1\">'someSpecialName'</span><span class=\"p\">)</span>\n<span class=\"p\">[{</span><span class=\"s1\">'coords'</span><span class=\"p\">:</span> <span class=\"s1\">'1:45:4'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'MotherPlanet'</span><span class=\"p\">},</span>\n<span class=\"p\">{</span><span class=\"s1\">'coords'</span><span class=\"p\">:</span> <span class=\"s1\">'1:144:2'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'ColonyC'</span><span class=\"p\">},</span>\n<span class=\"p\">{</span><span class=\"s1\">'coords'</span><span class=\"p\">:</span> <span class=\"s1\">'1:145:3'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'ColonyB'</span><span class=\"p\">},</span>\n<span class=\"p\">{</span><span class=\"s1\">'coords'</span><span class=\"p\">:</span> <span class=\"s1\">'1:303:5'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'ColonyA'</span><span class=\"p\">},</span> \n<span class=\"p\">{</span><span class=\"s1\">'coords'</span><span class=\"p\">:</span> <span class=\"s1\">'5:119:9'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'ColonyE'</span><span class=\"p\">},</span> \n<span class=\"p\">{</span><span class=\"s1\">'coords'</span><span class=\"p\">:</span> <span class=\"s1\">'1:289:9'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'ColonyD'</span><span class=\"p\">},</span>\n<span class=\"p\">{</span><span class=\"s1\">'coords'</span><span class=\"p\">:</span> <span class=\"s1\">'1:389:9'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'ColonyF'</span><span class=\"p\">}]</span>\n</pre>\n<p>or ask for the status (active, inactive, banned, holiday etc.).</p>\n<pre><span class=\"n\">universe</span><span class=\"o\">.</span><span class=\"n\">get_player_status</span><span class=\"p\">(</span><span class=\"s1\">'someSpecialName'</span><span class=\"p\">)</span>\n<span class=\"s1\">'I'</span>\n</pre>\n<p>or just dump everything about <code>someSpecialName</code>:</p>\n<pre><span class=\"n\">universe</span><span class=\"o\">.</span><span class=\"n\">get_player_data</span><span class=\"p\">(</span><span class=\"s1\">'someSpecialName'</span><span class=\"p\">)</span>\n</pre>\n<p>get the complete list of players within a specific alliance</p>\n<pre><span class=\"n\">universe</span><span class=\"o\">.</span><span class=\"n\">get_players_of_alliance</span><span class=\"p\">(</span><span class=\"s1\">'someAlliance'</span><span class=\"p\">)</span>\n         <span class=\"nb\">id</span>                 <span class=\"n\">name</span> <span class=\"n\">status</span> <span class=\"n\">alliance</span>\n<span class=\"mi\">291</span>  <span class=\"mi\">103910</span>           <span class=\"n\">reabuilder</span>    <span class=\"n\">NaN</span>   <span class=\"mi\">500234</span>\n<span class=\"mi\">292</span>  <span class=\"mi\">103930</span>              <span class=\"mi\">1</span> <span class=\"mi\">4</span> <span class=\"n\">Fun</span>      <span class=\"n\">v</span>   <span class=\"mi\">500234</span>\n<span class=\"mi\">312</span>  <span class=\"mi\">104181</span>            <span class=\"n\">night</span> <span class=\"n\">owl</span>    <span class=\"n\">NaN</span>   <span class=\"mi\">500234</span>\n<span class=\"o\">...</span>\n</pre>\n<p>get to see the distribution of the planets owned by the alliance members.</p>\n<pre><span class=\"n\">universe</span><span class=\"o\">.</span><span class=\"n\">get_planets_distribution_by_galaxy</span><span class=\"p\">(</span><span class=\"s1\">'someAlliance'</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">'1'</span><span class=\"p\">:</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"s1\">'2'</span><span class=\"p\">:</span> <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"s1\">'3'</span><span class=\"p\">:</span> <span class=\"mi\">29</span><span class=\"p\">,</span> <span class=\"s1\">'4'</span><span class=\"p\">:</span> <span class=\"mi\">38</span><span class=\"p\">,</span> <span class=\"s1\">'5'</span><span class=\"p\">:</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"s1\">'6'</span><span class=\"p\">:</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"s1\">'7'</span><span class=\"p\">:</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"s1\">'8'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'9'</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">}</span> \n</pre>\n<h3>Update frequencies of data</h3>\n<p>Don't spam the servers with requests. Since the data sets and classes avoid the usage of\nXML attributes, it's easy to just pickle your <code>UniverseData</code> for tests, development and everything else.\nThese are the update frequencies I copied over at some point in time (might have changed):</p>\n<pre><code>players.xml -&gt; daily\nuniverse.xml -&gt; weekly\nhighscore.xml -&gt; hourly\nalliances.xml -&gt; daily\nserverData.xml -&gt; daily\nplayerData.xml -&gt; weekly\nlocalization.xml -&gt; static\nuniverses.xml -&gt; static\n</code></pre>\n<p>Maybe the easiest way would be to use <a href=\"https://github.com/reclosedev/requests-cache\" rel=\"nofollow\">requests_cache</a>.</p>\n<pre><code>import requests_cache\nrequests_cache.install_cache('demo_cache')\n</code></pre>\n<h2>issues/ideas</h2>\n<p>... are generally welcome. saves us time.\nAlso, the overall design is far from being ideal.\nPull requests welcome. Be sure to include the tests.</p>\n\n          </div>"}, "last_serial": 7107718, "releases": {"0.3.5": [{"comment_text": "", "digests": {"md5": "0cb7bd70c9f0e447472feb29d73bf6bb", "sha256": "b61a8a1686fab0666ff8bac55fdda37cc8822f7ea1dcbe2fcb3d770fbe1442dd"}, "downloads": -1, "filename": "ogame_stats-0.3.5-py3-none-any.whl", "has_sig": false, "md5_digest": "0cb7bd70c9f0e447472feb29d73bf6bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 8244, "upload_time": "2020-04-26T23:43:31", "upload_time_iso_8601": "2020-04-26T23:43:31.676187Z", "url": "https://files.pythonhosted.org/packages/03/1f/dcf09b768cec6d589f4ddc862f93406d9ca3da738f42ff54d69f246a3780/ogame_stats-0.3.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "61aeab24fa141315eb7302d6b39903db", "sha256": "9fbf99e46fe701d6878c7d69e14c496d5a308f57e0471cdd76c8a57ab4172265"}, "downloads": -1, "filename": "ogame_stats-0.3.5.tar.gz", "has_sig": false, "md5_digest": "61aeab24fa141315eb7302d6b39903db", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 6531, "upload_time": "2020-04-26T23:43:34", "upload_time_iso_8601": "2020-04-26T23:43:34.136458Z", "url": "https://files.pythonhosted.org/packages/a2/dd/695ddb3943e55faa1749ef3e6bee13c884bc80b5b9272f9c9cd585d6fc9a/ogame_stats-0.3.5.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "d31d74f31eb03e4518ecadb70711738e", "sha256": "c85c93f2ba69c0c3f6a555a9628c768a3b9b03098ee5ea5e8e122c02d2e07e40"}, "downloads": -1, "filename": "ogame_stats-0.3.6-py3-none-any.whl", "has_sig": false, "md5_digest": "d31d74f31eb03e4518ecadb70711738e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 8245, "upload_time": "2020-04-26T23:59:35", "upload_time_iso_8601": "2020-04-26T23:59:35.796253Z", "url": "https://files.pythonhosted.org/packages/78/db/2701720999798f01147fb62f913f1d1acddaf0ac272cbc009628921ec649/ogame_stats-0.3.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0c4bf39ff250b4fc270af69cf5a130f", "sha256": "ad1d43c43fc9f4c719a0cef8991915f61017efee1be855dd971128e2a43a7efe"}, "downloads": -1, "filename": "ogame_stats-0.3.6.tar.gz", "has_sig": false, "md5_digest": "d0c4bf39ff250b4fc270af69cf5a130f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 6541, "upload_time": "2020-04-26T23:59:37", "upload_time_iso_8601": "2020-04-26T23:59:37.727811Z", "url": "https://files.pythonhosted.org/packages/95/79/062497ef16d5ec7b3f61a27b3d487ceae8f55edaa8f3b5ed6107e4481c0b/ogame_stats-0.3.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d31d74f31eb03e4518ecadb70711738e", "sha256": "c85c93f2ba69c0c3f6a555a9628c768a3b9b03098ee5ea5e8e122c02d2e07e40"}, "downloads": -1, "filename": "ogame_stats-0.3.6-py3-none-any.whl", "has_sig": false, "md5_digest": "d31d74f31eb03e4518ecadb70711738e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 8245, "upload_time": "2020-04-26T23:59:35", "upload_time_iso_8601": "2020-04-26T23:59:35.796253Z", "url": "https://files.pythonhosted.org/packages/78/db/2701720999798f01147fb62f913f1d1acddaf0ac272cbc009628921ec649/ogame_stats-0.3.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0c4bf39ff250b4fc270af69cf5a130f", "sha256": "ad1d43c43fc9f4c719a0cef8991915f61017efee1be855dd971128e2a43a7efe"}, "downloads": -1, "filename": "ogame_stats-0.3.6.tar.gz", "has_sig": false, "md5_digest": "d0c4bf39ff250b4fc270af69cf5a130f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 6541, "upload_time": "2020-04-26T23:59:37", "upload_time_iso_8601": "2020-04-26T23:59:37.727811Z", "url": "https://files.pythonhosted.org/packages/95/79/062497ef16d5ec7b3f61a27b3d487ceae8f55edaa8f3b5ed6107e4481c0b/ogame_stats-0.3.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:54 2020"}