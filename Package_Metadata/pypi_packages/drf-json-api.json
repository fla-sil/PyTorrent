{"info": {"author": "Kevin Brown", "author_email": "kevin@kevinbrown.in", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: Implementation :: PyPy"], "description": "Django REST Framework - JSON API\n================================\n\nA parser and renderer for `Django REST\nFramework <http://www.django-rest-framework.org/>`__ that adds support\nfor the `JSON API <http://jsonapi.org/>`__ specification.\n\nBuild status: |Build Status|\n\nDoes this work?\n---------------\n\n**This package is currently being actively developed**, but is not\nwidely used in production. If you find any problems when using this\npackage, please create a bug report at the `issue\ntracker <https://github.com/kevin-brown/drf-json-api/issues>`__ so we can figure out how to fix it.\n\nHow do I use this?\n------------------\n\nThis is designed to be used as only a renderer and parser and does not\nprovide any additional functionality that may be expected by JSON API.\n\nSpecific to a view(set)\n~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    from rest_framework import generics\n    from rest_framework_json_api.renderers import JsonApiRenderer\n\n\n    class ExampleView(generics.ListAPIView):\n        renderer_classes = (JsonApiRenderer, )\n\nThe JSON API renderer is not limited to just list views and can be used\non any of the generic views. It supports viewsets as well as non-generic\nviews.\n\nAll views\n~~~~~~~~~\n\nThe JSON API renderer can be used on all views by setting it as a\ndefault renderer.\n\n.. code:: python\n\n    # ...\n    REST_FRAMEWORK = {\n        \"DEFAULT_RENDERER_CLASSES\": (\n            \"rest_framework_json_api.renderers.JsonApiRenderer\",\n            \"rest_framework.renderers.BrowsableAPIRenderer\",\n            # Any other renderers\n        ),\n        \"DEFAULT_PARSER_CLASSES\": (\n            \"rest_framework_json_api.parsers.JsonApiParser\",\n            \"rest_framework.parsers.FormParser\",\n            \"rest_framework.parsers.MultiPartParser\",\n            # Any other parsers\n        ),\n    }\n    #...\n\nThis may break the API root view of the `Default Router\n<http://www.django-rest-framework.org/api-guide/routers#defaultrouter>`__, so\nyou may want to instead apply it to your viewsets.\n\nWhat does this support?\n-----------------------\n\nThe JSON API renderer supports all features of hyperlinked serializers\nand will normalize attributes such as the `url\nfield <http://www.django-rest-framework.org/api-guide/settings#url_field_name>`__\nto match the JSON API specification.\n\nIntrospected resource types\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJSON API uses `resource\ntypes <http://jsonapi.org/format/#document-structure-resource-types>`__\nto determine what relations exist and how to better side-load resources\nautomatically. It is recommended that resource types match the URL\nstructure of the API and use a plural form. The resource type is\ndetermined from the model, and is the plural form of the `verbose model\nname <https://docs.djangoproject.com/en/dev/ref/models/options/#verbose-name-plural>`__.\n\nIf a verbose name cannot be determined, the generic key\\ ``data`` will\nbe used for the resource type.\n\nHyperlinked relations\n~~~~~~~~~~~~~~~~~~~~~\n\nJSON API will detect hyperlinked relations and set up the `url\ntemplates <http://jsonapi.org/format/#document-structure-url-templates>`__\nto match the destinations and attribute names automatically.\n\nNested serializers\n~~~~~~~~~~~~~~~~~~\n\nJSON API will render nested serializers to match the `compound document\nspecification <http://jsonapi.org/format/#document-structure-compound-documents>`__.\nThis will theoretically support any depth of nested serializers, but\nonly a single level is tested and supported.\n\nPagination\n~~~~~~~~~~\nJSON API does not explicitly call out pagination within the\nspecification, but instead leaves it flexible for the developer to\nimplement. The JSON API renderer supports the default pagination provided\nby Django REST Framework by adding it to the top level \"meta\" element.  This\ncan be overriden by using a modified render, or a paginator that relies on a\nheader, such as `the Link header based\npaginator <https://github.com/kevin-brown/drf-link-pagination>`__.\n\n\nWhat this will not easily support\n---------------------------------\n\nDue to limitations within the JSON API specification, as well as a need\nto handle the most common easy cases, this JSON API renderer will not\nwork with all views. When designing views that work well with the JSON\nAPI specification, there are a few needs that you should keep in mind.\n\nAnything not related to rendering or parsing\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis package is only designed to be used as a renderer and parser and\ndoes not provide support for parts of the JSON API specification that\nare not unique to the JSON API specification. This includes features\nsuch as custom filtering of results and pagination that does not use the\nresponse body. Features such as side-loading of data using query\nparameters are also not supported.\n\nIsn't JSON API being actively developed?\n----------------------------------------\n\nYes it is, and we will try to keep this package as close to the running\nspecification as possible. This means that things may break during\nversion changes, and until JSON API becomes stable we cannot guarantee\nbackwards compatibility. Once JSON API stabilizes, a deprecation process\nwill be established to match the policies of the JSON API specification.\n\nRecommended packages\n--------------------\n\nThis parser/renderer combination is only meant to be used as one of many\npackages that can be grouped together to create an API that supports the\nJSON API specification.\n\nPagination\n~~~~~~~~~~\n\n`The Link header based\npaginator <https://github.com/kevin-brown/drf-link-pagination>`__ will\nwork with the renderer provided by this package.\n\nJSON Patch\n~~~~~~~~~~\n\nJSON API recommends using JSON Patch for `PATCH` requests, and allowing partial\nupdates through the `PUT` HTTP method.  JSON Patch support is available for\nDjango REST Framework through a `third party package\n<https://github.com/kevin-brown/drf-json-patch`__ and should be compatible.\n\n.. |Build Status| image:: https://travis-ci.org/kevin-brown/drf-json-api.svg?branch=master\n   :target: https://travis-ci.org/kevin-brown/drf-json-api\n\n\n\nDocumentation\n-------------\n\nThe full documentation is at http://drf-json-api.rtfd.org.\n\n\n\nHistory\n-------\n\n0.1.0 (Unreleased)\n~~~~~~~~~~~~~~~~~~\n\n* First release on PyPI.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kevin-brown/drf-json-api", "keywords": "drf-json-api", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "drf-json-api", "package_url": "https://pypi.org/project/drf-json-api/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/drf-json-api/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/kevin-brown/drf-json-api"}, "release_url": "https://pypi.org/project/drf-json-api/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "A parser and renderer for Django REST Framework that adds support for the JSON API specification.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Django REST Framework - JSON API<br>================================<br><br>A parser and renderer for `Django REST<br>Framework &lt;http://www.django-rest-framework.org/&gt;`__ that adds support<br>for the `JSON API &lt;http://jsonapi.org/&gt;`__ specification.<br><br>Build status: |Build Status|<br><br>Does this work?<br>---------------<br><br>**This package is currently being actively developed**, but is not<br>widely used in production. If you find any problems when using this<br>package, please create a bug report at the `issue<br>tracker &lt;https://github.com/kevin-brown/drf-json-api/issues&gt;`__ so we can figure out how to fix it.<br><br>How do I use this?<br>------------------<br><br>This is designed to be used as only a renderer and parser and does not<br>provide any additional functionality that may be expected by JSON API.<br><br>Specific to a view(set)<br>~~~~~~~~~~~~~~~~~~~~~~~<br><br>.. code:: python<br><br>    from rest_framework import generics<br>    from rest_framework_json_api.renderers import JsonApiRenderer<br><br><br>    class ExampleView(generics.ListAPIView):<br>        renderer_classes = (JsonApiRenderer, )<br><br>The JSON API renderer is not limited to just list views and can be used<br>on any of the generic views. It supports viewsets as well as non-generic<br>views.<br><br>All views<br>~~~~~~~~~<br><br>The JSON API renderer can be used on all views by setting it as a<br>default renderer.<br><br>.. code:: python<br><br>    # ...<br>    REST_FRAMEWORK = {<br>        \"DEFAULT_RENDERER_CLASSES\": (<br>            \"rest_framework_json_api.renderers.JsonApiRenderer\",<br>            \"rest_framework.renderers.BrowsableAPIRenderer\",<br>            # Any other renderers<br>        ),<br>        \"DEFAULT_PARSER_CLASSES\": (<br>            \"rest_framework_json_api.parsers.JsonApiParser\",<br>            \"rest_framework.parsers.FormParser\",<br>            \"rest_framework.parsers.MultiPartParser\",<br>            # Any other parsers<br>        ),<br>    }<br>    #...<br><br>This may break the API root view of the `Default Router<br>&lt;http://www.django-rest-framework.org/api-guide/routers#defaultrouter&gt;`__, so<br>you may want to instead apply it to your viewsets.<br><br>What does this support?<br>-----------------------<br><br>The JSON API renderer supports all features of hyperlinked serializers<br>and will normalize attributes such as the `url<br>field &lt;http://www.django-rest-framework.org/api-guide/settings#url_field_name&gt;`__<br>to match the JSON API specification.<br><br>Introspected resource types<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>JSON API uses `resource<br>types &lt;http://jsonapi.org/format/#document-structure-resource-types&gt;`__<br>to determine what relations exist and how to better side-load resources<br>automatically. It is recommended that resource types match the URL<br>structure of the API and use a plural form. The resource type is<br>determined from the model, and is the plural form of the `verbose model<br>name &lt;https://docs.djangoproject.com/en/dev/ref/models/options/#verbose-name-plural&gt;`__.<br><br>If a verbose name cannot be determined, the generic key\\ ``data`` will<br>be used for the resource type.<br><br>Hyperlinked relations<br>~~~~~~~~~~~~~~~~~~~~~<br><br>JSON API will detect hyperlinked relations and set up the `url<br>templates &lt;http://jsonapi.org/format/#document-structure-url-templates&gt;`__<br>to match the destinations and attribute names automatically.<br><br>Nested serializers<br>~~~~~~~~~~~~~~~~~~<br><br>JSON API will render nested serializers to match the `compound document<br>specification &lt;http://jsonapi.org/format/#document-structure-compound-documents&gt;`__.<br>This will theoretically support any depth of nested serializers, but<br>only a single level is tested and supported.<br><br>Pagination<br>~~~~~~~~~~<br>JSON API does not explicitly call out pagination within the<br>specification, but instead leaves it flexible for the developer to<br>implement. The JSON API renderer supports the default pagination provided<br>by Django REST Framework by adding it to the top level \"meta\" element.  This<br>can be overriden by using a modified render, or a paginator that relies on a<br>header, such as `the Link header based<br>paginator &lt;https://github.com/kevin-brown/drf-link-pagination&gt;`__.<br><br><br>What this will not easily support<br>---------------------------------<br><br>Due to limitations within the JSON API specification, as well as a need<br>to handle the most common easy cases, this JSON API renderer will not<br>work with all views. When designing views that work well with the JSON<br>API specification, there are a few needs that you should keep in mind.<br><br>Anything not related to rendering or parsing<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>This package is only designed to be used as a renderer and parser and<br>does not provide support for parts of the JSON API specification that<br>are not unique to the JSON API specification. This includes features<br>such as custom filtering of results and pagination that does not use the<br>response body. Features such as side-loading of data using query<br>parameters are also not supported.<br><br>Isn't JSON API being actively developed?<br>----------------------------------------<br><br>Yes it is, and we will try to keep this package as close to the running<br>specification as possible. This means that things may break during<br>version changes, and until JSON API becomes stable we cannot guarantee<br>backwards compatibility. Once JSON API stabilizes, a deprecation process<br>will be established to match the policies of the JSON API specification.<br><br>Recommended packages<br>--------------------<br><br>This parser/renderer combination is only meant to be used as one of many<br>packages that can be grouped together to create an API that supports the<br>JSON API specification.<br><br>Pagination<br>~~~~~~~~~~<br><br>`The Link header based<br>paginator &lt;https://github.com/kevin-brown/drf-link-pagination&gt;`__ will<br>work with the renderer provided by this package.<br><br>JSON Patch<br>~~~~~~~~~~<br><br>JSON API recommends using JSON Patch for `PATCH` requests, and allowing partial<br>updates through the `PUT` HTTP method.  JSON Patch support is available for<br>Django REST Framework through a `third party package<br>&lt;https://github.com/kevin-brown/drf-json-patch`__ and should be compatible.<br><br>.. |Build Status| image:: https://travis-ci.org/kevin-brown/drf-json-api.svg?branch=master<br>   :target: https://travis-ci.org/kevin-brown/drf-json-api<br><br><br><br>Documentation<br>-------------<br><br>The full documentation is at http://drf-json-api.rtfd.org.<br><br><br><br>History<br>-------<br><br>0.1.0 (Unreleased)<br>~~~~~~~~~~~~~~~~~~<br><br>* First release on PyPI.\n          </div>"}, "last_serial": 1395106, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2a15d1be2f0e6a4f071e6b4584a65d96", "sha256": "de74886895bee8c85ecaab3a9c83b624eaf6efbd4d3d0c6e01479e84e6d95a94"}, "downloads": -1, "filename": "drf_json_api-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2a15d1be2f0e6a4f071e6b4584a65d96", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 13395, "upload_time": "2014-12-01T01:03:55", "upload_time_iso_8601": "2014-12-01T01:03:55.316270Z", "url": "https://files.pythonhosted.org/packages/7a/16/a6a535344bac825926f14d2e523572966af86fcc151580e9920f17d48168/drf_json_api-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ab2d9d27dd3572f312b926a75c8398d", "sha256": "b395ffb588ec2980f7a57a71598f12aee4288c5b08d2f472be90e8af7d6ac87c"}, "downloads": -1, "filename": "drf-json-api-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5ab2d9d27dd3572f312b926a75c8398d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27175, "upload_time": "2014-12-01T01:03:03", "upload_time_iso_8601": "2014-12-01T01:03:03.678181Z", "url": "https://files.pythonhosted.org/packages/46/c7/6cc41ee022e572962aecbf4e87608557e4078ea98b6e37272dc0b60cefc3/drf-json-api-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "21b24839cb84c23370c96b1dcd7d2290", "sha256": "2039018ef2037609bea58a68404c2f552b491a14e996a8d34244665984488092"}, "downloads": -1, "filename": "drf_json_api-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "21b24839cb84c23370c96b1dcd7d2290", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 13906, "upload_time": "2015-01-24T19:50:37", "upload_time_iso_8601": "2015-01-24T19:50:37.706920Z", "url": "https://files.pythonhosted.org/packages/dd/80/07ceda7969d907456b766978af54aaf9c975cc42d710fdb30f2144c5d00f/drf_json_api-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce16f94515356508971058174098f4e1", "sha256": "8a9172148f1566746dd900d62c7a39cefe5ea0600eba7407adf3f3b3a14c7038"}, "downloads": -1, "filename": "drf-json-api-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ce16f94515356508971058174098f4e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28346, "upload_time": "2015-01-24T19:50:31", "upload_time_iso_8601": "2015-01-24T19:50:31.135461Z", "url": "https://files.pythonhosted.org/packages/ee/71/9752d20513ba2c6900b8c073d6db27db04877480ee146fec182d5b6a0818/drf-json-api-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "21b24839cb84c23370c96b1dcd7d2290", "sha256": "2039018ef2037609bea58a68404c2f552b491a14e996a8d34244665984488092"}, "downloads": -1, "filename": "drf_json_api-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "21b24839cb84c23370c96b1dcd7d2290", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 13906, "upload_time": "2015-01-24T19:50:37", "upload_time_iso_8601": "2015-01-24T19:50:37.706920Z", "url": "https://files.pythonhosted.org/packages/dd/80/07ceda7969d907456b766978af54aaf9c975cc42d710fdb30f2144c5d00f/drf_json_api-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce16f94515356508971058174098f4e1", "sha256": "8a9172148f1566746dd900d62c7a39cefe5ea0600eba7407adf3f3b3a14c7038"}, "downloads": -1, "filename": "drf-json-api-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ce16f94515356508971058174098f4e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28346, "upload_time": "2015-01-24T19:50:31", "upload_time_iso_8601": "2015-01-24T19:50:31.135461Z", "url": "https://files.pythonhosted.org/packages/ee/71/9752d20513ba2c6900b8c073d6db27db04877480ee146fec182d5b6a0818/drf-json-api-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:44 2020"}