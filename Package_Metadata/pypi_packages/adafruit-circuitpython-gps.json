{"info": {"author": "Adafruit Industries", "author_email": "circuitpython@adafruit.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries", "Topic :: System :: Hardware"], "description": "Introduction\n============\n\n.. image:: https://readthedocs.org/projects/adafruit-circuitpython-gps/badge/?version=latest\n    :target: https://circuitpython.readthedocs.io/projects/gps/en/latest/\n    :alt: Documentation Status\n\n.. image :: https://img.shields.io/discord/327254708534116352.svg\n    :target: https://discord.gg/nBQh6qu\n    :alt: Discord\n\n.. image:: https://github.com/adafruit/Adafruit_CircuitPython_GPS/workflows/Build%20CI/badge.svg\n    :target: https://github.com/adafruit/Adafruit_CircuitPython_GPS/actions/\n    :alt: Build Status\n\nGPS parsing module.  Can parse simple NMEA data sentences from serial GPS\nmodules to read latitude, longitude, and more.\n\n\nDependencies\n=============\nThis driver depends on:\n\n* `Adafruit CircuitPython <https://github.com/adafruit/circuitpython>`_\n\nPlease ensure all dependencies are available on the CircuitPython filesystem.\nThis is easily achieved by downloading\n`the Adafruit library and driver bundle <https://github.com/adafruit/Adafruit_CircuitPython_Bundle>`_.\n\nInstalling from PyPI\n====================\n\nOn supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally `from\nPyPI <https://pypi.org/project/adafruit-circuitpython-gps/>`_. To install for current user:\n\n.. code-block:: shell\n\n    pip3 install adafruit-circuitpython-gps\n\nTo install system-wide (this may be required in some cases):\n\n.. code-block:: shell\n\n    sudo pip3 install adafruit-circuitpython-gps\n\nTo install in a virtual environment in your current project:\n\n.. code-block:: shell\n\n    mkdir project-name && cd project-name\n    python3 -m venv .env\n    source .env/bin/activate\n    pip3 install adafruit-circuitpython-gps\n\nUsage Example\n=============\n\nSee examples/gps_simpletest.py for a demonstration of parsing and printing GPS location.\n\nImportant: \nFeather boards and many other circuitpython boards will round to two decimal places like this:\n\n.. code-block:: python\n\n    >>> float('1234.5678')\n    1234.57\n\nThis isn't ideal for GPS data as this lowers the accuracy from 0.1m to 11m. \n\nThis can be fixed by using string formatting when the GPS data is output.\n\nAn implementation of this can be found in examples/gps_simpletest.py\n\n.. code-block:: python\n\n    import time\n    import board\n    import busio\n\n    import adafruit_gps\n\n    RX = board.RX\n    TX = board.TX\n\n    uart = busio.UART(TX, RX, baudrate=9600, timeout=30)\n\n    gps = adafruit_gps.GPS(uart, debug=False)\n\n    gps.send_command(b'PMTK314,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0')\n\n    gps.send_command(b'PMTK220,1000')\n\n    last_print = time.monotonic()\n    while True:\n\n        gps.update()\n\n        current = time.monotonic()\n        if current - last_print >= 1.0:\n            last_print = current\n            if not gps.has_fix:\n                print('Waiting for fix...')\n                continue\n            print('=' * 40)  # Print a separator line.\n            print('Latitude: {0:.6f} degrees'.format(gps.latitude))\n            print('Longitude: {0:.6f} degrees'.format(gps.longitude))\n\n\nThese two lines are the lines that actually solve the issue:\n\n.. code-block:: python\n\n    print('Latitude: {0:.6f} degrees'.format(gps.latitude))\n    print('Longitude: {0:.6f} degrees'.format(gps.longitude))\n   \n\nNote: Sending multiple PMTK314 packets with gps.send_command() will not work unless there is a substantial amount of time in-between each time gps.send_command() is called. A time.sleep() of 1 second or more should fix this.\n\nAbout NMEA Data\n===============\nThis GPS module uses the NMEA 0183 protocol.\n\nThis data is formatted by the GPS in one of two ways.\n\nThe first of these is GGA. GGA has more or less everything you need.\n\nHere's an explanation of GGA:\n::\n\n                                                        11\n           1         2       3 4        5 6 7  8   9  10 |  12 13  14   15\n           |         |       | |        | | |  |   |   | |   | |   |    |\n    $--GGA,hhmmss.ss,llll.ll,a,yyyyy.yy,a,x,xx,x.x,x.x,M,x.x,M,x.x,xxxx*hh\n\n\n1. Time (UTC)\n2. Latitude\n3. N or S (North or South)\n4. Longitude\n5. E or W (East or West)\n6. GPS Quality Indicator,\n\n   * 0 - fix not available,\n   * 1 - GPS fix,\n   * 2 - Differential GPS fix\n    \n7. Number of satellites in view, 00 - 12\n8. Horizontal Dilution of precision\n9. Antenna Altitude above/below mean-sea-level (geoid)\n10. Units of antenna altitude, meters\n11. Geoidal separation, the difference between the WGS-84 earth ellipsoid and mean-sea-level (geoid), \"-\" means mean-sea-level below ellipsoid\n12. Units of geoidal separation, meters\n13. Age of differential GPS data, time in seconds since last SC104 type 1 or 9 update, null field when DGPS is not used\n14. Differential reference station ID, 0000-1023\n15. Checksum\n\nThe second of these is RMC. RMC is Recommended Minimum Navigation Information.\n\nHere's an explanation of RMC:\n::\n\n                                                               12\n           1         2 3       4 5        6 7   8   9   10   11|\n           |         | |       | |        | |   |   |    |   | |\n    $--RMC,hhmmss.ss,A,llll.ll,a,yyyyy.yy,a,x.x,x.x,xxxx,x.x,a*hh\n\n1. Time (UTC)\n2. Status, V = Navigation receiver warning\n3. Latitude\n4. N or S\n5. Longitude\n6. E or W\n7. Speed over ground, knots\n8. Track made good, degrees true\n9. Date, ddmmyy\n10. Magnetic Variation, degrees\n11. E or W\n12. Checksum\n\n\n`Info about NMEA taken from here\n<https://www.tronico.fi/OH6NT/docs/NMEA0183.pdf>`_.\n\nContributing\n============\n\nContributions are welcome! Please read our `Code of Conduct\n<https://github.com/adafruit/Adafruit_CircuitPython_gps/blob/master/CODE_OF_CONDUCT.md>`_\nbefore contributing to help this project stay welcoming.\n\nDocumentation\n=============\n\nFor information on building library documentation, please check out `this guide <https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1>`_.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/adafruit/Adafruit_CircuitPython_GPS", "keywords": "adafruit gps module latitude longitude breakout hardware micropython circuitpython", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "adafruit-circuitpython-gps", "package_url": "https://pypi.org/project/adafruit-circuitpython-gps/", "platform": "", "project_url": "https://pypi.org/project/adafruit-circuitpython-gps/", "project_urls": {"Homepage": "https://github.com/adafruit/Adafruit_CircuitPython_GPS"}, "release_url": "https://pypi.org/project/adafruit-circuitpython-gps/3.6.3/", "requires_dist": null, "requires_python": "", "summary": "CircuitPython library for GPS modules.", "version": "3.6.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<a href=\"https://circuitpython.readthedocs.io/projects/gps/en/latest/\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb8ebcc827f9d693792c713bc31016c6524f0614/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f61646166727569742d63697263756974707974686f6e2d6770732f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://discord.gg/nBQh6qu\" rel=\"nofollow\"><img alt=\"Discord\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e2973e7de9caf359680953316fa3b541f702086c/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3332373235343730383533343131363335322e737667\"></a>\n<a href=\"https://github.com/adafruit/Adafruit_CircuitPython_GPS/actions/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8491db1e19aa3995b219c42c6918b887d399637d/68747470733a2f2f6769746875622e636f6d2f61646166727569742f41646166727569745f43697263756974507974686f6e5f4750532f776f726b666c6f77732f4275696c6425323043492f62616467652e737667\"></a>\n<p>GPS parsing module.  Can parse simple NMEA data sentences from serial GPS\nmodules to read latitude, longitude, and more.</p>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>This driver depends on:</p>\n<ul>\n<li><a href=\"https://github.com/adafruit/circuitpython\" rel=\"nofollow\">Adafruit CircuitPython</a></li>\n</ul>\n<p>Please ensure all dependencies are available on the CircuitPython filesystem.\nThis is easily achieved by downloading\n<a href=\"https://github.com/adafruit/Adafruit_CircuitPython_Bundle\" rel=\"nofollow\">the Adafruit library and driver bundle</a>.</p>\n</div>\n<div id=\"installing-from-pypi\">\n<h2>Installing from PyPI</h2>\n<p>On supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally <a href=\"https://pypi.org/project/adafruit-circuitpython-gps/\" rel=\"nofollow\">from\nPyPI</a>. To install for current user:</p>\n<pre>pip3 install adafruit-circuitpython-gps\n</pre>\n<p>To install system-wide (this may be required in some cases):</p>\n<pre>sudo pip3 install adafruit-circuitpython-gps\n</pre>\n<p>To install in a virtual environment in your current project:</p>\n<pre>mkdir project-name <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">cd</span> project-name\npython3 -m venv .env\n<span class=\"nb\">source</span> .env/bin/activate\npip3 install adafruit-circuitpython-gps\n</pre>\n</div>\n<div id=\"usage-example\">\n<h2>Usage Example</h2>\n<p>See examples/gps_simpletest.py for a demonstration of parsing and printing GPS location.</p>\n<p>Important:\nFeather boards and many other circuitpython boards will round to two decimal places like this:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"s1\">'1234.5678'</span><span class=\"p\">)</span>\n<span class=\"mf\">1234.57</span>\n</pre>\n<p>This isn\u2019t ideal for GPS data as this lowers the accuracy from 0.1m to 11m.</p>\n<p>This can be fixed by using string formatting when the GPS data is output.</p>\n<p>An implementation of this can be found in examples/gps_simpletest.py</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">board</span>\n<span class=\"kn\">import</span> <span class=\"nn\">busio</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">adafruit_gps</span>\n\n<span class=\"n\">RX</span> <span class=\"o\">=</span> <span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">RX</span>\n<span class=\"n\">TX</span> <span class=\"o\">=</span> <span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">TX</span>\n\n<span class=\"n\">uart</span> <span class=\"o\">=</span> <span class=\"n\">busio</span><span class=\"o\">.</span><span class=\"n\">UART</span><span class=\"p\">(</span><span class=\"n\">TX</span><span class=\"p\">,</span> <span class=\"n\">RX</span><span class=\"p\">,</span> <span class=\"n\">baudrate</span><span class=\"o\">=</span><span class=\"mi\">9600</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">)</span>\n\n<span class=\"n\">gps</span> <span class=\"o\">=</span> <span class=\"n\">adafruit_gps</span><span class=\"o\">.</span><span class=\"n\">GPS</span><span class=\"p\">(</span><span class=\"n\">uart</span><span class=\"p\">,</span> <span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">gps</span><span class=\"o\">.</span><span class=\"n\">send_command</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'PMTK314,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0'</span><span class=\"p\">)</span>\n\n<span class=\"n\">gps</span><span class=\"o\">.</span><span class=\"n\">send_command</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'PMTK220,1000'</span><span class=\"p\">)</span>\n\n<span class=\"n\">last_print</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">monotonic</span><span class=\"p\">()</span>\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n    <span class=\"n\">gps</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n\n    <span class=\"n\">current</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">monotonic</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">current</span> <span class=\"o\">-</span> <span class=\"n\">last_print</span> <span class=\"o\">&gt;=</span> <span class=\"mf\">1.0</span><span class=\"p\">:</span>\n        <span class=\"n\">last_print</span> <span class=\"o\">=</span> <span class=\"n\">current</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">gps</span><span class=\"o\">.</span><span class=\"n\">has_fix</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Waiting for fix...'</span><span class=\"p\">)</span>\n            <span class=\"k\">continue</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'='</span> <span class=\"o\">*</span> <span class=\"mi\">40</span><span class=\"p\">)</span>  <span class=\"c1\"># Print a separator line.</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Latitude: </span><span class=\"si\">{0:.6f}</span><span class=\"s1\"> degrees'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">gps</span><span class=\"o\">.</span><span class=\"n\">latitude</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Longitude: </span><span class=\"si\">{0:.6f}</span><span class=\"s1\"> degrees'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">gps</span><span class=\"o\">.</span><span class=\"n\">longitude</span><span class=\"p\">))</span>\n</pre>\n<p>These two lines are the lines that actually solve the issue:</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Latitude: </span><span class=\"si\">{0:.6f}</span><span class=\"s1\"> degrees'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">gps</span><span class=\"o\">.</span><span class=\"n\">latitude</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Longitude: </span><span class=\"si\">{0:.6f}</span><span class=\"s1\"> degrees'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">gps</span><span class=\"o\">.</span><span class=\"n\">longitude</span><span class=\"p\">))</span>\n</pre>\n<p>Note: Sending multiple PMTK314 packets with gps.send_command() will not work unless there is a substantial amount of time in-between each time gps.send_command() is called. A time.sleep() of 1 second or more should fix this.</p>\n</div>\n<div id=\"about-nmea-data\">\n<h2>About NMEA Data</h2>\n<p>This GPS module uses the NMEA 0183 protocol.</p>\n<p>This data is formatted by the GPS in one of two ways.</p>\n<p>The first of these is GGA. GGA has more or less everything you need.</p>\n<p>Here\u2019s an explanation of GGA:</p>\n<pre>                                                    11\n       1         2       3 4        5 6 7  8   9  10 |  12 13  14   15\n       |         |       | |        | | |  |   |   | |   | |   |    |\n$--GGA,hhmmss.ss,llll.ll,a,yyyyy.yy,a,x,xx,x.x,x.x,M,x.x,M,x.x,xxxx*hh\n</pre>\n<ol>\n<li>Time (UTC)</li>\n<li>Latitude</li>\n<li>N or S (North or South)</li>\n<li>Longitude</li>\n<li>E or W (East or West)</li>\n<li>GPS Quality Indicator,<ul>\n<li>0 - fix not available,</li>\n<li>1 - GPS fix,</li>\n<li>2 - Differential GPS fix</li>\n</ul>\n</li>\n<li>Number of satellites in view, 00 - 12</li>\n<li>Horizontal Dilution of precision</li>\n<li>Antenna Altitude above/below mean-sea-level (geoid)</li>\n<li>Units of antenna altitude, meters</li>\n<li>Geoidal separation, the difference between the WGS-84 earth ellipsoid and mean-sea-level (geoid), \u201c-\u201d means mean-sea-level below ellipsoid</li>\n<li>Units of geoidal separation, meters</li>\n<li>Age of differential GPS data, time in seconds since last SC104 type 1 or 9 update, null field when DGPS is not used</li>\n<li>Differential reference station ID, 0000-1023</li>\n<li>Checksum</li>\n</ol>\n<p>The second of these is RMC. RMC is Recommended Minimum Navigation Information.</p>\n<p>Here\u2019s an explanation of RMC:</p>\n<pre>                                                           12\n       1         2 3       4 5        6 7   8   9   10   11|\n       |         | |       | |        | |   |   |    |   | |\n$--RMC,hhmmss.ss,A,llll.ll,a,yyyyy.yy,a,x.x,x.x,xxxx,x.x,a*hh\n</pre>\n<ol>\n<li>Time (UTC)</li>\n<li>Status, V = Navigation receiver warning</li>\n<li>Latitude</li>\n<li>N or S</li>\n<li>Longitude</li>\n<li>E or W</li>\n<li>Speed over ground, knots</li>\n<li>Track made good, degrees true</li>\n<li>Date, ddmmyy</li>\n<li>Magnetic Variation, degrees</li>\n<li>E or W</li>\n<li>Checksum</li>\n</ol>\n<p><a href=\"https://www.tronico.fi/OH6NT/docs/NMEA0183.pdf\" rel=\"nofollow\">Info about NMEA taken from here</a>.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Contributions are welcome! Please read our <a href=\"https://github.com/adafruit/Adafruit_CircuitPython_gps/blob/master/CODE_OF_CONDUCT.md\" rel=\"nofollow\">Code of Conduct</a>\nbefore contributing to help this project stay welcoming.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>For information on building library documentation, please check out <a href=\"https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1\" rel=\"nofollow\">this guide</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 7191620, "releases": {"3.1.0": [{"comment_text": "", "digests": {"md5": "2095e188b355247f1fc13592ad878a3f", "sha256": "c2ad9e625a001e03e07fb81ef7525f9ecec2682807b465e7a8b9c47b092d5be3"}, "downloads": -1, "filename": "adafruit-circuitpython-gps-3.1.0.tar.gz", "has_sig": false, "md5_digest": "2095e188b355247f1fc13592ad878a3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22913, "upload_time": "2018-08-07T00:44:07", "upload_time_iso_8601": "2018-08-07T00:44:07.376867Z", "url": "https://files.pythonhosted.org/packages/62/fe/eccaa9029800f7d76c77506b0c661ffe68d81d4320101603c29bbc446c1a/adafruit-circuitpython-gps-3.1.0.tar.gz", "yanked": false}], "3.1.1": [{"comment_text": "", "digests": {"md5": "accc19411bba7ff06d6e91aa4de8e07d", "sha256": "1ea2c99e995512e18ed917d5e7bab4f7857ee7a6ef11f8b99f03b091111e2a6a"}, "downloads": -1, "filename": "adafruit-circuitpython-gps-3.1.1.tar.gz", "has_sig": false, "md5_digest": "accc19411bba7ff06d6e91aa4de8e07d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23533, "upload_time": "2018-08-19T20:15:49", "upload_time_iso_8601": "2018-08-19T20:15:49.100079Z", "url": "https://files.pythonhosted.org/packages/7a/47/c07dd01431e3d467a1d8b7319066e94dae45e010797d109856911fadaae4/adafruit-circuitpython-gps-3.1.1.tar.gz", "yanked": false}], "3.2.0": [{"comment_text": "", "digests": {"md5": "752b85415b75203de0693ec511849d22", "sha256": "4eaf31de23d5faa4797eb9a6ece4e58c4e195a1d6ea80d8afc771a762509ac57"}, "downloads": -1, "filename": "adafruit-circuitpython-gps-3.2.0.tar.gz", "has_sig": false, "md5_digest": "752b85415b75203de0693ec511849d22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23917, "upload_time": "2018-11-12T22:54:44", "upload_time_iso_8601": "2018-11-12T22:54:44.504823Z", "url": "https://files.pythonhosted.org/packages/da/b0/ce05c7fd7d361ea4027507d3f63468f95b1027ff1337c15b644a1b2f81d1/adafruit-circuitpython-gps-3.2.0.tar.gz", "yanked": false}], "3.2.1": [{"comment_text": "", "digests": {"md5": "6d2b1412a4bf3a68c5521bee46aebf15", "sha256": "78b5d767d0673e2e2a3dcda6330bdc890bbf9b084dbeaa953363f3f3a02d71c4"}, "downloads": -1, "filename": "adafruit-circuitpython-gps-3.2.1.tar.gz", "has_sig": false, "md5_digest": "6d2b1412a4bf3a68c5521bee46aebf15", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23331, "upload_time": "2019-01-16T02:07:30", "upload_time_iso_8601": "2019-01-16T02:07:30.173408Z", "url": "https://files.pythonhosted.org/packages/97/cc/35052a5a6e53aa2b840e6bc8828562339421fe9bff02863f7f59a8bba69c/adafruit-circuitpython-gps-3.2.1.tar.gz", "yanked": false}], "3.2.2": [{"comment_text": "", "digests": {"md5": "dba1c5adac139d61fd32290de960d6a4", "sha256": "f4d9570d8d358b2743fcf9d7cd8331ae170f02fc4ebf2eedbcd15bae172fbec4"}, "downloads": -1, "filename": "adafruit-circuitpython-gps-3.2.2.tar.gz", "has_sig": false, "md5_digest": "dba1c5adac139d61fd32290de960d6a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23345, "upload_time": "2019-03-22T22:47:31", "upload_time_iso_8601": "2019-03-22T22:47:31.806835Z", "url": "https://files.pythonhosted.org/packages/94/82/6b4b0047844a6c66da06828b61ea6d20157fd7f3d81c848cb9ac224fb3d0/adafruit-circuitpython-gps-3.2.2.tar.gz", "yanked": false}], "3.2.3": [{"comment_text": "", "digests": {"md5": "eb27630449b6598749488fb0cf5702c8", "sha256": "aaf0e74439cbb8f299665f9edd03f4a4b273d4e5dcd98a8ab0c4870a4af659b1"}, "downloads": -1, "filename": "adafruit-circuitpython-gps-3.2.3.tar.gz", "has_sig": false, "md5_digest": "eb27630449b6598749488fb0cf5702c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24112, "upload_time": "2019-05-07T19:46:37", "upload_time_iso_8601": "2019-05-07T19:46:37.869385Z", "url": "https://files.pythonhosted.org/packages/18/a5/1482da3d445b784cb8fb26e7c4888d616164360c2f65dd4229e7913e7f0f/adafruit-circuitpython-gps-3.2.3.tar.gz", "yanked": false}], "3.2.4": [{"comment_text": "", "digests": {"md5": "1e964dae1dba4da9bddf8389e33b8f7f", "sha256": "668b720d643629bbc5a7f6277673a6012c03c5f3c0559f2d5886026400822e3b"}, "downloads": -1, "filename": "adafruit-circuitpython-gps-3.2.4.tar.gz", "has_sig": false, "md5_digest": "1e964dae1dba4da9bddf8389e33b8f7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25896, "upload_time": "2019-05-13T05:07:43", "upload_time_iso_8601": "2019-05-13T05:07:43.374086Z", "url": "https://files.pythonhosted.org/packages/9c/7f/a5cd598732fc6c26d9f1d35766e3c1e774d1a6973edb136f20dc5fb0de65/adafruit-circuitpython-gps-3.2.4.tar.gz", "yanked": false}], "3.3.0": [{"comment_text": "", "digests": {"md5": "82d5a3e6b16a34ff65ba5402deb511f5", "sha256": "e473127539a154ae817e62d43b0e255203e942835b57692e3484c62e68c2980e"}, "downloads": -1, "filename": "adafruit-circuitpython-gps-3.3.0.tar.gz", "has_sig": false, "md5_digest": "82d5a3e6b16a34ff65ba5402deb511f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27215, "upload_time": "2019-05-16T16:50:49", "upload_time_iso_8601": "2019-05-16T16:50:49.937402Z", "url": "https://files.pythonhosted.org/packages/d4/60/c33923c21126dc57bbc2338a4ab6a15ea0496a0ea85036d1df4ba1257a05/adafruit-circuitpython-gps-3.3.0.tar.gz", "yanked": false}], "3.4.0": [{"comment_text": "", "digests": {"md5": "74a499b7d666903fb671584b96f29678", "sha256": "3ba8fe539779a6e8c0dbecc1fe6b7328f8b94df8536d9e6a59eb73abda93a170"}, "downloads": -1, "filename": "adafruit-circuitpython-gps-3.4.0.tar.gz", "has_sig": false, "md5_digest": "74a499b7d666903fb671584b96f29678", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27182, "upload_time": "2019-09-16T21:48:21", "upload_time_iso_8601": "2019-09-16T21:48:21.551518Z", "url": "https://files.pythonhosted.org/packages/fe/03/61e0c4346f5145fb6dcf7458c04be755c2f2ababfa07c91425323d892d07/adafruit-circuitpython-gps-3.4.0.tar.gz", "yanked": false}], "3.4.1": [{"comment_text": "", "digests": {"md5": "f6c9c97b814d0b2789ec54d88ca0c2b1", "sha256": "00fb5ebbc1d979f19f9d5b9d4cd331ee61ef9e2744f0e88db92d0b7904e0d104"}, "downloads": -1, "filename": "adafruit-circuitpython-gps-3.4.1.tar.gz", "has_sig": false, "md5_digest": "f6c9c97b814d0b2789ec54d88ca0c2b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27188, "upload_time": "2019-09-20T15:51:35", "upload_time_iso_8601": "2019-09-20T15:51:35.960188Z", "url": "https://files.pythonhosted.org/packages/d5/a6/d030ad559256a3d73a3b7b5e8b27b16a0960a6c6d0ddd160e2f471c3b77c/adafruit-circuitpython-gps-3.4.1.tar.gz", "yanked": false}], "3.5.0": [{"comment_text": "", "digests": {"md5": "37ea5f4d89fe9a4048b5e3e53746c475", "sha256": "0c12e4442cdb025d2a027e0c7b70d5967544443c7720e25fab14bf83108492e8"}, "downloads": -1, "filename": "adafruit-circuitpython-gps-3.5.0.tar.gz", "has_sig": false, "md5_digest": "37ea5f4d89fe9a4048b5e3e53746c475", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27924, "upload_time": "2019-11-16T18:56:17", "upload_time_iso_8601": "2019-11-16T18:56:17.357553Z", "url": "https://files.pythonhosted.org/packages/95/19/c0bbf9beb3f5ee0d787ee131e0af9d069ba3fa04829253bf937fcb43a8cf/adafruit-circuitpython-gps-3.5.0.tar.gz", "yanked": false}], "3.5.1": [{"comment_text": "", "digests": {"md5": "9cce92113e24eaca015664df9f21455e", "sha256": "590b293cfee8ef8fd3b3721ed3cf1e8ce1b9e50cc38ba1635afca60f054f3b53"}, "downloads": -1, "filename": "adafruit-circuitpython-gps-3.5.1.tar.gz", "has_sig": false, "md5_digest": "9cce92113e24eaca015664df9f21455e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27991, "upload_time": "2019-11-19T13:43:19", "upload_time_iso_8601": "2019-11-19T13:43:19.530470Z", "url": "https://files.pythonhosted.org/packages/b3/ae/125156b5fcce016768a3e5a7e60047e29d48aed5715f9f8e219e6a47e7b1/adafruit-circuitpython-gps-3.5.1.tar.gz", "yanked": false}], "3.5.2": [{"comment_text": "", "digests": {"md5": "3131177c08f1555a53f24b7562b42157", "sha256": "c97faf640ab5df87d7611da84cbe6016833a3a6dbdee5b992fc9574a3f5eaee2"}, "downloads": -1, "filename": "adafruit-circuitpython-gps-3.5.2.tar.gz", "has_sig": false, "md5_digest": "3131177c08f1555a53f24b7562b42157", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28172, "upload_time": "2020-01-17T02:15:43", "upload_time_iso_8601": "2020-01-17T02:15:43.478211Z", "url": "https://files.pythonhosted.org/packages/e8/03/03caa96873feb14cc3be24885508e2684faee573dad24fd75de9881505ad/adafruit-circuitpython-gps-3.5.2.tar.gz", "yanked": false}], "3.6.0": [{"comment_text": "", "digests": {"md5": "82946868e9faa8ab4c2803142f80494e", "sha256": "d32420c47d8ea41654d09a43693e3726d44894e6644e985c7d1216852d7b40ff"}, "downloads": -1, "filename": "adafruit-circuitpython-gps-3.6.0.tar.gz", "has_sig": false, "md5_digest": "82946868e9faa8ab4c2803142f80494e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28428, "upload_time": "2020-03-20T15:28:36", "upload_time_iso_8601": "2020-03-20T15:28:36.483174Z", "url": "https://files.pythonhosted.org/packages/9d/93/0c64f65ecfcb5e7f24a6bb862c7ecf43a1e43b70f5ccb257f13db1792815/adafruit-circuitpython-gps-3.6.0.tar.gz", "yanked": false}], "3.6.1": [{"comment_text": "", "digests": {"md5": "9afe60808f119e3a8d20b98142875af8", "sha256": "6716c6fb8d333ecc8a90c7a9c7165cc36015e6930430e9f1a86db0cc5dce12f5"}, "downloads": -1, "filename": "adafruit-circuitpython-gps-3.6.1.tar.gz", "has_sig": false, "md5_digest": "9afe60808f119e3a8d20b98142875af8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28459, "upload_time": "2020-04-10T18:31:00", "upload_time_iso_8601": "2020-04-10T18:31:00.461398Z", "url": "https://files.pythonhosted.org/packages/e1/f6/9dfec119ad1c26673936de3cacdcea3a8347f91e96cd0e7e304f092dab70/adafruit-circuitpython-gps-3.6.1.tar.gz", "yanked": false}], "3.6.2": [{"comment_text": "", "digests": {"md5": "2da531e7a9fa7c01b873d240b2c41b65", "sha256": "c7217fd1dcdcb42a5a863ca978e1a6bd7a8ee0e1c83d93d5b57976f42281270a"}, "downloads": -1, "filename": "adafruit-circuitpython-gps-3.6.2.tar.gz", "has_sig": false, "md5_digest": "2da531e7a9fa7c01b873d240b2c41b65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28468, "upload_time": "2020-05-07T16:03:04", "upload_time_iso_8601": "2020-05-07T16:03:04.875732Z", "url": "https://files.pythonhosted.org/packages/1b/65/eb44fb1b8384ca2d9323e093993f13d08e2fc6e4f3e7763dd193469df9a8/adafruit-circuitpython-gps-3.6.2.tar.gz", "yanked": false}], "3.6.3": [{"comment_text": "", "digests": {"md5": "13f378b736615552268c03d9088e41e2", "sha256": "babd1704df627c7e46381818059490dda2b111e214da2f5d4e748d0bab1e19c8"}, "downloads": -1, "filename": "adafruit-circuitpython-gps-3.6.3.tar.gz", "has_sig": false, "md5_digest": "13f378b736615552268c03d9088e41e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28461, "upload_time": "2020-05-07T20:33:52", "upload_time_iso_8601": "2020-05-07T20:33:52.773823Z", "url": "https://files.pythonhosted.org/packages/10/d5/290bc9427a652a63421d21dc94947aadef082982fdc60fd24d63d2ac6737/adafruit-circuitpython-gps-3.6.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "13f378b736615552268c03d9088e41e2", "sha256": "babd1704df627c7e46381818059490dda2b111e214da2f5d4e748d0bab1e19c8"}, "downloads": -1, "filename": "adafruit-circuitpython-gps-3.6.3.tar.gz", "has_sig": false, "md5_digest": "13f378b736615552268c03d9088e41e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28461, "upload_time": "2020-05-07T20:33:52", "upload_time_iso_8601": "2020-05-07T20:33:52.773823Z", "url": "https://files.pythonhosted.org/packages/10/d5/290bc9427a652a63421d21dc94947aadef082982fdc60fd24d63d2ac6737/adafruit-circuitpython-gps-3.6.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:24:02 2020"}