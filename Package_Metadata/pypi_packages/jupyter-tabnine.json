{"info": {"author": "Wenmin Wu", "author_email": "wuwenmin1991@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Jupyter"], "description": "TabNine for Jupyter Notebook\n==============================================\nThis extension for Jupyter Notebook enables the use of \ncoding auto-completion based on Deep Learning.\n\nOther client plugins of TabNine require starting a child process for TabNine binary\nand using Pipe for communication. This can't be done with Jupyter Notebook, since child process \ncan't be created with JQuery and Jupyter Notebook doesn't provide any way for adding third-part js libs to plugins.\n\nIn this repository, it is achived by developing a client plugin and a server plugin for Jupyter Notebook.\nThe client plugin generate request info and send http request to the server plugin. \nThe server plugin pass the request info to it's client process (TabNine) and return the request to client plugin.\n\nInstallation\n------------\nThe extension consists of a pypi package that includes a javascript\nnotebook extension, along with a python jupyter server extension.\nSince Jupyter 4.2, pypi is the recommended way to distribute nbextensions.\nThe extension can be installed\n\n- from the master version on the github repo (this will be always the most recent version)\n- via pip for the version hosted on pypi\n\nFrom the github repo or from Pypi,\n\n1. install the package\n\n   -  ``pip3 install https://github.com/wenmin-wu/jupyter-tabnine/archive/master.zip [--user][--upgrade]``\n   -  or ``pip3 install jupyter-tabnine [--user][--upgrade]``\n   -  or clone the repo and install\n      ``git clone https://github.com/wenmin-wu/jupyter-tabnine.git``\n\n      ``python3 setup.py install``\n\n2. install the notebook extension\n\n   ::\n\n       jupyter nbextension install --py jupyter_tabnine [--user|--sys-prefix|--system]\n\n3. and enable notebook extension and server extension\n\n   ::\n\n       jupyter nbextension enable --py jupyter_tabnine [--user|--sys-prefix|--system]\n       jupyter serverextension enable --py jupyter_tabnine [--user|--sys-prefix|--system]\n\n------------\n\nFor Jupyter versions before 4.2, the situation after step 1 is more\ntricky, since the ``--py`` option isn't available, so you will have to\nfind the location of the source files manually as follows (instructions\nadapted from [@jcb91](https://github.com/jcb91)'s\n`jupyter\\_highlight\\_selected\\_word <https://github.com/jcb91/jupyter_highlight_selected_word>`__).\nExecute\n\n::\n\n    python -c \"import os.path as p; from jupyter_tabnine import __file__ as f, _jupyter_nbextension_paths as n; print(p.normpath(p.join(p.dirname(f), n()[0]['src'])))\"\n\nThen, issue\n\n::\n\n    jupyter nbextension install <output source directory>\n    jupyter nbextension enable jupyter_tabnine/jupyter_tabnine\n\nwhere ``<output source directory>`` is the output of the first python\ncommand.\n\nTips\n------------\n- A shortcut is added to let you switch between Jupyter raw completion and TabNine auto-competion. Just enter ``shift`` + ``space`` when you want raw completion of Jupyter :)\n- Remote auto-completion server is also supported. You may want this to speed up the completion request handing. Or maybe your company want to deploy a compeltion server cluster that services everyone. Refer https://github.com/wenmin-wu/jupyter-tabnine to learn how to deploy remote server.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wenmin-wu/jupyter-tabnine", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "jupyter-tabnine", "package_url": "https://pypi.org/project/jupyter-tabnine/", "platform": "", "project_url": "https://pypi.org/project/jupyter-tabnine/", "project_urls": {"Homepage": "https://github.com/wenmin-wu/jupyter-tabnine"}, "release_url": "https://pypi.org/project/jupyter-tabnine/1.1.0/", "requires_dist": ["ipython", "jupyter-core", "nbconvert", "notebook (>=4.2)"], "requires_python": ">=3.5", "summary": "Jupyter notebook extension which support coding auto-completion based on Deep Learning", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This extension for Jupyter Notebook enables the use of\ncoding auto-completion based on Deep Learning.</p>\n<p>Other client plugins of TabNine require starting a child process for TabNine binary\nand using Pipe for communication. This can\u2019t be done with Jupyter Notebook, since child process\ncan\u2019t be created with JQuery and Jupyter Notebook doesn\u2019t provide any way for adding third-part js libs to plugins.</p>\n<p>In this repository, it is achived by developing a client plugin and a server plugin for Jupyter Notebook.\nThe client plugin generate request info and send http request to the server plugin.\nThe server plugin pass the request info to it\u2019s client process (TabNine) and return the request to client plugin.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The extension consists of a pypi package that includes a javascript\nnotebook extension, along with a python jupyter server extension.\nSince Jupyter 4.2, pypi is the recommended way to distribute nbextensions.\nThe extension can be installed</p>\n<ul>\n<li>from the master version on the github repo (this will be always the most recent version)</li>\n<li>via pip for the version hosted on pypi</li>\n</ul>\n<p>From the github repo or from Pypi,</p>\n<ol>\n<li><p>install the package</p>\n<ul>\n<li><p><tt>pip3 install <span class=\"pre\">https://github.com/wenmin-wu/jupyter-tabnine/archive/master.zip</span> <span class=\"pre\">[--user][--upgrade]</span></tt></p>\n</li>\n<li><p>or <tt>pip3 install <span class=\"pre\">jupyter-tabnine</span> <span class=\"pre\">[--user][--upgrade]</span></tt></p>\n</li>\n<li><p>or clone the repo and install\n<tt>git clone <span class=\"pre\">https://github.com/wenmin-wu/jupyter-tabnine.git</span></tt></p>\n<p><tt>python3 setup.py install</tt></p>\n</li>\n</ul>\n</li>\n<li><p>install the notebook extension</p>\n<pre>jupyter nbextension install --py jupyter_tabnine [--user|--sys-prefix|--system]\n</pre>\n</li>\n<li><p>and enable notebook extension and server extension</p>\n<pre>jupyter nbextension enable --py jupyter_tabnine [--user|--sys-prefix|--system]\njupyter serverextension enable --py jupyter_tabnine [--user|--sys-prefix|--system]\n</pre>\n</li>\n</ol>\n<hr class=\"docutils\">\n<p>For Jupyter versions before 4.2, the situation after step 1 is more\ntricky, since the <tt><span class=\"pre\">--py</span></tt> option isn\u2019t available, so you will have to\nfind the location of the source files manually as follows (instructions\nadapted from [@jcb91](<a href=\"https://github.com/jcb91)'s\" rel=\"nofollow\">https://github.com/jcb91)\u2019s</a>\n<a href=\"https://github.com/jcb91/jupyter_highlight_selected_word\" rel=\"nofollow\">jupyter_highlight_selected_word</a>).\nExecute</p>\n<pre>python -c \"import os.path as p; from jupyter_tabnine import __file__ as f, _jupyter_nbextension_paths as n; print(p.normpath(p.join(p.dirname(f), n()[0]['src'])))\"\n</pre>\n<p>Then, issue</p>\n<pre>jupyter nbextension install &lt;output source directory&gt;\njupyter nbextension enable jupyter_tabnine/jupyter_tabnine\n</pre>\n<p>where <tt>&lt;output source directory&gt;</tt> is the output of the first python\ncommand.</p>\n</div>\n<div id=\"tips\">\n<h2>Tips</h2>\n<ul>\n<li>A shortcut is added to let you switch between Jupyter raw completion and TabNine auto-competion. Just enter <tt>shift</tt> + <tt>space</tt> when you want raw completion of Jupyter :)</li>\n<li>Remote auto-completion server is also supported. You may want this to speed up the completion request handing. Or maybe your company want to deploy a compeltion server cluster that services everyone. Refer <a href=\"https://github.com/wenmin-wu/jupyter-tabnine\" rel=\"nofollow\">https://github.com/wenmin-wu/jupyter-tabnine</a> to learn how to deploy remote server.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6894527, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "b018f824ffb6a1c2fd4600b2d34646df", "sha256": "c70b62b07e6ce970d54e4b3149ca9ff875c1b7d2edf75714ac8195fc89d89367"}, "downloads": -1, "filename": "jupyter_tabnine-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b018f824ffb6a1c2fd4600b2d34646df", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 25025, "upload_time": "2019-09-15T05:01:27", "upload_time_iso_8601": "2019-09-15T05:01:27.247256Z", "url": "https://files.pythonhosted.org/packages/52/a4/eaaa9025e8fe0d88364f4ed1ce49b9180c0a5a2b55c147572e00b056db8d/jupyter_tabnine-1.0.1-py2.py3-none-any.whl", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "a07722c6bc0984d89c59d4a10b3382ba", "sha256": "77e7a365b7c4855362e5677190ecd9aabefaddfbc5d90ca59c84b34e086c7cdc"}, "downloads": -1, "filename": "jupyter_tabnine-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a07722c6bc0984d89c59d4a10b3382ba", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 32457, "upload_time": "2019-09-15T13:16:45", "upload_time_iso_8601": "2019-09-15T13:16:45.908098Z", "url": "https://files.pythonhosted.org/packages/9a/d6/deb55a78673af1e9731cd215baa073d74a1758b6ad4f89061b904ff7c5c1/jupyter_tabnine-1.0.2-py2.py3-none-any.whl", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "d4f1e97eb6849eb36740304708a189c8", "sha256": "efc04419635853c3eb18d1989ac2660466fae84ca5f1d19408a73e662024e319"}, "downloads": -1, "filename": "jupyter_tabnine-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d4f1e97eb6849eb36740304708a189c8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 21079, "upload_time": "2020-03-27T08:36:51", "upload_time_iso_8601": "2020-03-27T08:36:51.049293Z", "url": "https://files.pythonhosted.org/packages/ed/5f/ef8cf41db5f271892c71ec851d8dcfa48d4e1c4132531c26a2d86787dfbc/jupyter_tabnine-1.1.0-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d4f1e97eb6849eb36740304708a189c8", "sha256": "efc04419635853c3eb18d1989ac2660466fae84ca5f1d19408a73e662024e319"}, "downloads": -1, "filename": "jupyter_tabnine-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d4f1e97eb6849eb36740304708a189c8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 21079, "upload_time": "2020-03-27T08:36:51", "upload_time_iso_8601": "2020-03-27T08:36:51.049293Z", "url": "https://files.pythonhosted.org/packages/ed/5f/ef8cf41db5f271892c71ec851d8dcfa48d4e1c4132531c26a2d86787dfbc/jupyter_tabnine-1.1.0-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:51:07 2020"}