{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "PyMETAR is a python module and command line tool designed to fetch Metar\nreports from the NOAA (https://www.noaa.gov) and allow access to the\nincluded weather information.\n\nHome-page: http://www.schwarzvogel.de/software-pymetar.shtml\nAuthor: Tobias Klausmann\nAuthor-email: klausman-pymetar@schwarzvogel.de\nLicense: UNKNOWN\nDescription: # PyMETAR - a module to fetch and parse METAR reports\n        \n        **NOTE:** If you're looking for information regarding Python 2 and PyMETAR, see\n        the end of this document.\n        \n        The National Oceanic and Atmospheric Administration (NOAA, http://www.noaa.gov/)\n        provides easy access to the weather reports generated by a large number of\n        weather stations (mostly at airports) worldwide. Those reports are called METAR\n        reports and are delivered as plain text files that look like this:\n        \n        ```\n        Duesseldorf, Germany (EDDL) 51-18N 006-46E 41M\n        Jul 26, 2002 - 03:50 AM EST / 2002.07.26 0850 UTC\n        Wind: from the SW (220 degrees) at 9 MPH (8 KT):0\n        Visibility: 3 mile(s):0\n        Sky conditions: mostly cloudy\n        Weather: mist\n        Temperature: 60 F (16 C)\n        Dew Point: 57 F (14 C)\n        Relative Humidity: 87%\n        Pressure (altimeter): 30.00 in. Hg (1016 hPa)\n        ob: EDDL 260850Z 22008KT 5000 BR SCT006 BKN012 16/14 Q1016 BECMG BKN015\n        cycle: 9\n        ```\n        \n        While this is convenient if you just want to quickly look up the data, there's\n        some effort involved in parsing all of this into a format that is digestible by\n        a program. Plus, you have to remember the base URL of the reports and fetch the\n        file.\n        \n        This is what this library does. All you have to do is find the station you're\n        interested in at http://www.aviationweather.gov/metar and feed the 4-letter\n        station code to the MetarReport class.\n        \n        On the user end, the library provides a large number of methods to fetch the\n        parsed information in a plethora of formats. Those functions are described in\n        the file `librarydoc.txt` which was in turn generated using PyDoc.\n        \n        PyMETAR uses `urllib2` (and its successors), which in turn makes it easy to honor\n        the environment variable `http_proxy`. This simplifies use of a proxy\n        tremendously. Thanks go to Davide Di Blasi for both suggesting and implementing\n        this. The environment variable is easy to use: just set it to:\n        \n        ```\n        http://username:password@proxy.yourdomain.com:port \n        ```\n        \n        You can also specify a proxy (with the same syntax) as an argument to the\n        fetching function. This is sometimes easier when using PyMETAR in a web\n        application environment (such as ZopeWeatherApplet by Jerome Alet). See\n        `librarydoc.txt` for details on how to accomplish that. \n        \n        You can also use IPs instead of hostnames, of course. When in doubt, ask your\n        proxy admin.\n        \n        Due to some peculiarities in the METAR format, I can not rule out the\n        possibility that the library barfs on some less common types of reports. If you\n        encounter such a report, please save it and the error messages you get as\n        completely as possible and send them to me at `klausman-pymetar@schwarzvogel.de`\n        --- Thanks a lot!\n        \n        Of course you may send all the other bugs you encounter to me, too. As this is a\n        Python library, chances are that you are Python programmer and can provide a\n        patch. If you do so, please, by all means use spaces for indentation, four per\n        level, that makes merging the patch a lot easier.\n        \n        ## Python 2, 3, PyPy, PyPy3 and so on\n        \n        This version of PyMETAR supports Python 3.x and PyPy3 only. The last version to\n        have Python2 as its main target was v0.21.\n        \n        Compatibility with PyPy (2.x), Jython and other interpreters not mentioned\n        above is unknown.\n        \n        I maintain a branch (called Python2) on git which is the state of Pymetar as it\n        was for the last version supporting Python 2. That branch is in maintenance\n        mode, i.e. it will only receive fixes for security issues or bugs that can be\n        fixed without too much fuss. That branch will go away in 2020.\n        \n        [0] http://python-future.org/\n        \nPlatform: UNKNOWN\nClassifier: Programming Language :: Python :: 3\nClassifier: License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)\nClassifier: Operating System :: OS Independent\nDescription-Content-Type: text/markdown\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pymetar", "package_url": "https://pypi.org/project/pymetar/", "platform": "", "project_url": "https://pypi.org/project/pymetar/", "project_urls": null, "release_url": "https://pypi.org/project/pymetar/1.1/", "requires_dist": null, "requires_python": "", "summary": "", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>PyMETAR is a python module and command line tool designed to fetch Metar\nreports from the NOAA (<a href=\"https://www.noaa.gov\" rel=\"nofollow\">https://www.noaa.gov</a>) and allow access to the\nincluded weather information.</p>\n<p>Home-page: <a href=\"http://www.schwarzvogel.de/software-pymetar.shtml\" rel=\"nofollow\">http://www.schwarzvogel.de/software-pymetar.shtml</a>\nAuthor: Tobias Klausmann\nAuthor-email: <a href=\"mailto:klausman-pymetar%40schwarzvogel.de\">klausman-pymetar<span>@</span>schwarzvogel<span>.</span>de</a>\nLicense: UNKNOWN\nDescription: # PyMETAR - a module to fetch and parse METAR reports</p>\n<blockquote>\n<p><strong>NOTE:</strong> If you\u2019re looking for information regarding Python 2 and PyMETAR, see\nthe end of this document.</p>\n<p>The National Oceanic and Atmospheric Administration (NOAA, <a href=\"http://www.noaa.gov/\" rel=\"nofollow\">http://www.noaa.gov/</a>)\nprovides easy access to the weather reports generated by a large number of\nweather stations (mostly at airports) worldwide. Those reports are called METAR\nreports and are delivered as plain text files that look like this:</p>\n<p><tt>`\nDuesseldorf, Germany (EDDL) <span class=\"pre\">51-18N</span> <span class=\"pre\">006-46E</span> 41M\nJul 26, 2002 - 03:50 AM EST / 2002.07.26 0850 UTC\nWind: from the SW (220 degrees) at 9 MPH (8 <span class=\"pre\">KT):0</span>\nVisibility: 3 <span class=\"pre\">mile(s):0</span>\nSky conditions: mostly cloudy\nWeather: mist\nTemperature: 60 F (16 C)\nDew Point: 57 F (14 C)\nRelative Humidity: 87%\nPressure (altimeter): 30.00 in. Hg (1016 hPa)\nob: EDDL 260850Z 22008KT 5000 BR SCT006 BKN012 16/14 Q1016 BECMG BKN015\ncycle: 9\n`</tt></p>\n<p>While this is convenient if you just want to quickly look up the data, there\u2019s\nsome effort involved in parsing all of this into a format that is digestible by\na program. Plus, you have to remember the base URL of the reports and fetch the\nfile.</p>\n<p>This is what this library does. All you have to do is find the station you\u2019re\ninterested in at <a href=\"http://www.aviationweather.gov/metar\" rel=\"nofollow\">http://www.aviationweather.gov/metar</a> and feed the 4-letter\nstation code to the MetarReport class.</p>\n<p>On the user end, the library provides a large number of methods to fetch the\nparsed information in a plethora of formats. Those functions are described in\nthe file <cite>librarydoc.txt</cite> which was in turn generated using PyDoc.</p>\n<p>PyMETAR uses <cite>urllib2</cite> (and its successors), which in turn makes it easy to honor\nthe environment variable <cite>http_proxy</cite>. This simplifies use of a proxy\ntremendously. Thanks go to Davide Di Blasi for both suggesting and implementing\nthis. The environment variable is easy to use: just set it to:</p>\n<p><tt>`\n<span class=\"pre\">http://username:password@proxy.yourdomain.com:port</span>\n`</tt></p>\n<p>You can also specify a proxy (with the same syntax) as an argument to the\nfetching function. This is sometimes easier when using PyMETAR in a web\napplication environment (such as ZopeWeatherApplet by Jerome Alet). See\n<cite>librarydoc.txt</cite> for details on how to accomplish that.</p>\n<p>You can also use IPs instead of hostnames, of course. When in doubt, ask your\nproxy admin.</p>\n<p>Due to some peculiarities in the METAR format, I can not rule out the\npossibility that the library barfs on some less common types of reports. If you\nencounter such a report, please save it and the error messages you get as\ncompletely as possible and send them to me at <cite>klausman-pymetar@schwarzvogel.de</cite>\n\u2014 Thanks a lot!</p>\n<p>Of course you may send all the other bugs you encounter to me, too. As this is a\nPython library, chances are that you are Python programmer and can provide a\npatch. If you do so, please, by all means use spaces for indentation, four per\nlevel, that makes merging the patch a lot easier.</p>\n<p>## Python 2, 3, PyPy, PyPy3 and so on</p>\n<p>This version of PyMETAR supports Python 3.x and PyPy3 only. The last version to\nhave Python2 as its main target was v0.21.</p>\n<p>Compatibility with PyPy (2.x), Jython and other interpreters not mentioned\nabove is unknown.</p>\n<p>I maintain a branch (called Python2) on git which is the state of Pymetar as it\nwas for the last version supporting Python 2. That branch is in maintenance\nmode, i.e. it will only receive fixes for security issues or bugs that can be\nfixed without too much fuss. That branch will go away in 2020.</p>\n<p>[0] <a href=\"http://python-future.org/\" rel=\"nofollow\">http://python-future.org/</a></p>\n</blockquote>\n<p>Platform: UNKNOWN\nClassifier: Programming Language :: Python :: 3\nClassifier: License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)\nClassifier: Operating System :: OS Independent\nDescription-Content-Type: text/markdown</p>\n\n          </div>"}, "last_serial": 4633864, "releases": {"0.10": [], "0.11": [], "0.12": [], "0.13": [], "0.14": [], "0.16": [], "0.17": [], "0.19": [], "0.20": [{"comment_text": "", "digests": {"md5": "6be3da59b26b776c0edf63635b906daf", "sha256": "bcbf3b08558a92c38553fb3b07bfd87b552e1270b8e37b08b3e6b262487abee7"}, "downloads": -1, "filename": "pymetar-0.20.tar.gz", "has_sig": false, "md5_digest": "6be3da59b26b776c0edf63635b906daf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22738, "upload_time": "2015-04-20T08:18:02", "upload_time_iso_8601": "2015-04-20T08:18:02.114643Z", "url": "https://files.pythonhosted.org/packages/49/85/6eb135c6ff2ad9908badbd1c83f7a42bfa200bed32151a55892e6e777580/pymetar-0.20.tar.gz", "yanked": false}], "0.21": [{"comment_text": "", "digests": {"md5": "b41403f2efdd44f684cecf3f0aa1569d", "sha256": "331978d9c54d49948e3817a782b857f247db6c279b8bb5bebd4f5b1a4bb503ea"}, "downloads": -1, "filename": "pymetar-0.21.tar.gz", "has_sig": false, "md5_digest": "b41403f2efdd44f684cecf3f0aa1569d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22714, "upload_time": "2016-08-24T14:33:00", "upload_time_iso_8601": "2016-08-24T14:33:00.939160Z", "url": "https://files.pythonhosted.org/packages/33/b0/96ed9caf72195dd21a0b85e0208c911c3fa421ab8ba70c22c65a91065c66/pymetar-0.21.tar.gz", "yanked": false}], "0.5": [], "0.7": [], "0.9": [], "1.0": [{"comment_text": "", "digests": {"md5": "ac1a35d53ef7fa1f6fd8cd4876d8dbe1", "sha256": "b970bd8c96c58a3544540920ff2b0718deb6e01c77853a79c7a62043a291dfe8"}, "downloads": -1, "filename": "pymetar-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ac1a35d53ef7fa1f6fd8cd4876d8dbe1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26326, "upload_time": "2018-08-14T07:02:57", "upload_time_iso_8601": "2018-08-14T07:02:57.446192Z", "url": "https://files.pythonhosted.org/packages/8e/42/b9c147d4cdfc01ce3fa44ab864bd7ddcfb79478c8d9d705f94225b5615e1/pymetar-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b81f632b38a16e01f8969f630dd403a", "sha256": "57e5cfd122c49eb34e810a698e715c2307b1126f7f4813e720f769c2a22a93d8"}, "downloads": -1, "filename": "pymetar-1.0.tar.gz", "has_sig": false, "md5_digest": "1b81f632b38a16e01f8969f630dd403a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3162455, "upload_time": "2018-08-14T07:02:59", "upload_time_iso_8601": "2018-08-14T07:02:59.184520Z", "url": "https://files.pythonhosted.org/packages/47/9c/beee625bf34cf07f4e4da2e5ae93e46cb1b7412a1aabb8de0742da38705b/pymetar-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "f4263258741868654aeaa5153d9ff2bf", "sha256": "c90a02ff147dd2753156efbf2a04eb1743c34e99a31bf3fe25569e5beba18278"}, "downloads": -1, "filename": "pymetar-1.1.tar.gz", "has_sig": false, "md5_digest": "f4263258741868654aeaa5153d9ff2bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3162533, "upload_time": "2018-12-25T17:58:52", "upload_time_iso_8601": "2018-12-25T17:58:52.190502Z", "url": "https://files.pythonhosted.org/packages/ee/59/7b945b89e6851b4efe5d4871198c02cb0f549b33fe68d8356e36c35de191/pymetar-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f4263258741868654aeaa5153d9ff2bf", "sha256": "c90a02ff147dd2753156efbf2a04eb1743c34e99a31bf3fe25569e5beba18278"}, "downloads": -1, "filename": "pymetar-1.1.tar.gz", "has_sig": false, "md5_digest": "f4263258741868654aeaa5153d9ff2bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3162533, "upload_time": "2018-12-25T17:58:52", "upload_time_iso_8601": "2018-12-25T17:58:52.190502Z", "url": "https://files.pythonhosted.org/packages/ee/59/7b945b89e6851b4efe5d4871198c02cb0f549b33fe68d8356e36c35de191/pymetar-1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:11 2020"}