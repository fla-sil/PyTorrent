{"info": {"author": "mishudark", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7"], "description": "s3-parallel-put  Parallel uploads to Amazon AWS S3\n==================================================\n\ns3-parallel-put speeds the uploading of many small keys to Amazon AWS S3 by\nexecuting multiple PUTs in parallel.\n\n\nDependencies\n------------\n\n* Python 2.X\n* [Boto](http://code.google.com/p/boto/)\n* [python-magic](https://github.com/ahupp/python-magic)\n\n\nInstallation\n------------\n\n```bash\npython -m pip install s3-parallel-put\n```\n\nUsage\n-----\n\nThe program reads your credentials from the environment variables\n`AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`.\n\n```bash\ns3-parallel-put --bucket=BUCKET --prefix=PREFIX SOURCE\n```\n\nKeys are computed by combining `PREFIX` with the path of the file, starting\nfrom `SOURCE`.  Values are file contents.\n\n#### Options:\n* `-h, --help` \u2014 show help message\n\n##### S3 options:\n* `--bucket=BUCKET` \u2014 set bucket\n* `--bucket_region=BUCKET_REGION` \u2014 set bucket region if not in us-east-1 (default new bucket region)\n* `--host=HOST` \u2014 set AWS host name\n* `--secure` and `--insecure` control whether a secure connection is used\n\n##### Source options:\n* `--walk=MODE` \u2014 set walk mode (filesystem or tar)\n* `--exclude=PATTERN` \u2014 exclude files matching PATTERN\n* `--include=PATTERN` \u2014 don't exclude files matching PATTERN\n\n##### Put options:\n* `--content-type=CONTENT-TYPE` \u2014 sets the `Content-Type` header, set to \"guess\" to guess based on file name or \"magic\" to guess by filename and libmagic\n* `--gzip` \u2014 compresses common text files and sets the `Content-Encoding` header to `gzip`\n* `--gzip-type=GZIP_TYPE` \u2014 if `--gzip` is set, sets what content-type to gzip, defaults to a list of known text content types, \"all\" will gzip everything. Specify multiple times for multiple content types (eg.`--gzip-type=guess --gzip-type=\"image/svg+xml\"`) [default: \"guess\"]\n* `--put=MODE` \u2014 sets the heuristic used for deciding whether to upload a file or not.  Valid modes are:\n  * `add` set the key's content if the key is not already present.\n  * `stupid` always set the key's content.\n  * `update` set the key's content if the key is not already present and its\n  content has changed (as determined by its ETag).\n  * `copy`<br>\n  The default heuristic is `update`.  If you know that the keys are not already present then `stupid` is fastest (it avoids an extra HEAD request for each key).  If you know that some keys are already present and that they have the correct values, then `add` is faster than `update` (it avoids calculating the MD5 sum of the content on the client side).\n\n\n* `--prefix=PREFIX` \u2014 set key prefix\n* `--resume=FILENAME` \u2014 resume from log file\n* `--grant=GRANT` \u2014 A [Canned ACL](http://docs.amazonwebservices.com/AmazonS3/latest/dev/ACLOverview.html#CannedACL) policy to be applied to each file uploaded. Choices: `private`, `public-read`, `public-read-write`, `authenticated-read`, `bucket-owner-read`, `bucket-owner-full-control`, `log-delivery-write`\n* `--header=HEADER:VALUE` \u2014 adds an arbitrary header to the S3 file. This option can be specified multiple times.\n* `--encrypt-key` \u2014 use server side encryption\n\n##### Logging options:\n* `--log-filename=FILENAME` \u2014 set log filename\n* `-q, --quiet` \u2014 less output\n* `-v, --verbose` \u2014 more output to be printed, including progress of individual files\n\n##### Debug and performance tuning options:\n* `--dry-run` \u2014 don't write to S3. Causes the program to print what it would do, but not to upload any files. It is strongly recommended that you test the program with this option before transferring any real data.\n* `--limit=N` \u2014 set maximum number of keys to put. Causes the program to upload no more than N files.  Combined\nwith `--dry-run`, this is also useful for testing.\n* `--processes=N` \u2014  sets the number of parallel upload processes\n\n\nArchitecture\n------------\n\n* A walker process generates (filename, key_name) pairs and inserts them in\n  `put_queue`.\n* Multiple putter processes consume these pairs in parallel, uploading the\n  files to S3 and sending file-by-file statistics to `stat_queue`.\n* A statter process consumes these file-by-file statistics and generates\n  summary statistics.\n\n\nBugs\n----\n\n* Limited error checking.\n\n\nTo Do\n-----\n* Automatically parallelize uploads of large files by splitting into chunks.\n\n\nRelated projects\n----------------\n\n* [JetS3t](http://www.jets3t.org/)\n* [s3cmd](http://s3tools.org/s3cmd)\n* [sync_media_s3](http://code.google.com/p/django-command-extensions/wiki/sync_media_s3)\n\n\nLicence\n-------\n\nThe MIT License (MIT)\n\nCopyright (c) 2011-2014 Tom Payne\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\nvim: set spell spelllang=en textwidth=76:\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mishudark/s3-parallel-put", "keywords": "s3 parallel", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "s3-parallel-put", "package_url": "https://pypi.org/project/s3-parallel-put/", "platform": "", "project_url": "https://pypi.org/project/s3-parallel-put/", "project_urls": {"Homepage": "https://github.com/mishudark/s3-parallel-put"}, "release_url": "https://pypi.org/project/s3-parallel-put/0.8/", "requires_dist": ["boto (>=2.49.0)", "python-magic (>=0.4.14)"], "requires_python": "", "summary": "s3-parallel-put Parallel uploads to Amazon AWS S3", "version": "0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>s3-parallel-put  Parallel uploads to Amazon AWS S3</h1>\n<p>s3-parallel-put speeds the uploading of many small keys to Amazon AWS S3 by\nexecuting multiple PUTs in parallel.</p>\n<h2>Dependencies</h2>\n<ul>\n<li>Python 2.X</li>\n<li><a href=\"http://code.google.com/p/boto/\" rel=\"nofollow\">Boto</a></li>\n<li><a href=\"https://github.com/ahupp/python-magic\" rel=\"nofollow\">python-magic</a></li>\n</ul>\n<h2>Installation</h2>\n<pre>python -m pip install s3-parallel-put\n</pre>\n<h2>Usage</h2>\n<p>The program reads your credentials from the environment variables\n<code>AWS_ACCESS_KEY_ID</code> and <code>AWS_SECRET_ACCESS_KEY</code>.</p>\n<pre>s3-parallel-put --bucket<span class=\"o\">=</span>BUCKET --prefix<span class=\"o\">=</span>PREFIX SOURCE\n</pre>\n<p>Keys are computed by combining <code>PREFIX</code> with the path of the file, starting\nfrom <code>SOURCE</code>.  Values are file contents.</p>\n<h4>Options:</h4>\n<ul>\n<li><code>-h, --help</code> \u2014 show help message</li>\n</ul>\n<h5>S3 options:</h5>\n<ul>\n<li><code>--bucket=BUCKET</code> \u2014 set bucket</li>\n<li><code>--bucket_region=BUCKET_REGION</code> \u2014 set bucket region if not in us-east-1 (default new bucket region)</li>\n<li><code>--host=HOST</code> \u2014 set AWS host name</li>\n<li><code>--secure</code> and <code>--insecure</code> control whether a secure connection is used</li>\n</ul>\n<h5>Source options:</h5>\n<ul>\n<li><code>--walk=MODE</code> \u2014 set walk mode (filesystem or tar)</li>\n<li><code>--exclude=PATTERN</code> \u2014 exclude files matching PATTERN</li>\n<li><code>--include=PATTERN</code> \u2014 don't exclude files matching PATTERN</li>\n</ul>\n<h5>Put options:</h5>\n<ul>\n<li>\n<p><code>--content-type=CONTENT-TYPE</code> \u2014 sets the <code>Content-Type</code> header, set to \"guess\" to guess based on file name or \"magic\" to guess by filename and libmagic</p>\n</li>\n<li>\n<p><code>--gzip</code> \u2014 compresses common text files and sets the <code>Content-Encoding</code> header to <code>gzip</code></p>\n</li>\n<li>\n<p><code>--gzip-type=GZIP_TYPE</code> \u2014 if <code>--gzip</code> is set, sets what content-type to gzip, defaults to a list of known text content types, \"all\" will gzip everything. Specify multiple times for multiple content types (eg.<code>--gzip-type=guess --gzip-type=\"image/svg+xml\"</code>) [default: \"guess\"]</p>\n</li>\n<li>\n<p><code>--put=MODE</code> \u2014 sets the heuristic used for deciding whether to upload a file or not.  Valid modes are:</p>\n<ul>\n<li><code>add</code> set the key's content if the key is not already present.</li>\n<li><code>stupid</code> always set the key's content.</li>\n<li><code>update</code> set the key's content if the key is not already present and its\ncontent has changed (as determined by its ETag).</li>\n<li><code>copy</code><br>\nThe default heuristic is <code>update</code>.  If you know that the keys are not already present then <code>stupid</code> is fastest (it avoids an extra HEAD request for each key).  If you know that some keys are already present and that they have the correct values, then <code>add</code> is faster than <code>update</code> (it avoids calculating the MD5 sum of the content on the client side).</li>\n</ul>\n</li>\n<li>\n<p><code>--prefix=PREFIX</code> \u2014 set key prefix</p>\n</li>\n<li>\n<p><code>--resume=FILENAME</code> \u2014 resume from log file</p>\n</li>\n<li>\n<p><code>--grant=GRANT</code> \u2014 A <a href=\"http://docs.amazonwebservices.com/AmazonS3/latest/dev/ACLOverview.html#CannedACL\" rel=\"nofollow\">Canned ACL</a> policy to be applied to each file uploaded. Choices: <code>private</code>, <code>public-read</code>, <code>public-read-write</code>, <code>authenticated-read</code>, <code>bucket-owner-read</code>, <code>bucket-owner-full-control</code>, <code>log-delivery-write</code></p>\n</li>\n<li>\n<p><code>--header=HEADER:VALUE</code> \u2014 adds an arbitrary header to the S3 file. This option can be specified multiple times.</p>\n</li>\n<li>\n<p><code>--encrypt-key</code> \u2014 use server side encryption</p>\n</li>\n</ul>\n<h5>Logging options:</h5>\n<ul>\n<li><code>--log-filename=FILENAME</code> \u2014 set log filename</li>\n<li><code>-q, --quiet</code> \u2014 less output</li>\n<li><code>-v, --verbose</code> \u2014 more output to be printed, including progress of individual files</li>\n</ul>\n<h5>Debug and performance tuning options:</h5>\n<ul>\n<li><code>--dry-run</code> \u2014 don't write to S3. Causes the program to print what it would do, but not to upload any files. It is strongly recommended that you test the program with this option before transferring any real data.</li>\n<li><code>--limit=N</code> \u2014 set maximum number of keys to put. Causes the program to upload no more than N files.  Combined\nwith <code>--dry-run</code>, this is also useful for testing.</li>\n<li><code>--processes=N</code> \u2014  sets the number of parallel upload processes</li>\n</ul>\n<h2>Architecture</h2>\n<ul>\n<li>A walker process generates (filename, key_name) pairs and inserts them in\n<code>put_queue</code>.</li>\n<li>Multiple putter processes consume these pairs in parallel, uploading the\nfiles to S3 and sending file-by-file statistics to <code>stat_queue</code>.</li>\n<li>A statter process consumes these file-by-file statistics and generates\nsummary statistics.</li>\n</ul>\n<h2>Bugs</h2>\n<ul>\n<li>Limited error checking.</li>\n</ul>\n<h2>To Do</h2>\n<ul>\n<li>Automatically parallelize uploads of large files by splitting into chunks.</li>\n</ul>\n<h2>Related projects</h2>\n<ul>\n<li><a href=\"http://www.jets3t.org/\" rel=\"nofollow\">JetS3t</a></li>\n<li><a href=\"http://s3tools.org/s3cmd\" rel=\"nofollow\">s3cmd</a></li>\n<li><a href=\"http://code.google.com/p/django-command-extensions/wiki/sync_media_s3\" rel=\"nofollow\">sync_media_s3</a></li>\n</ul>\n<h2>Licence</h2>\n<p>The MIT License (MIT)</p>\n<p>Copyright (c) 2011-2014 Tom Payne</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.</p>\n<p>vim: set spell spelllang=en textwidth=76:</p>\n\n          </div>"}, "last_serial": 5128390, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "76e637b8fd5e4054b96e1f414d284ae2", "sha256": "18a239bfd7a6baaf8c56b697e65e9617d0d1a39aad16309112e48ff4563b9d75"}, "downloads": -1, "filename": "s3_parallel_put-0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "76e637b8fd5e4054b96e1f414d284ae2", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 10682, "upload_time": "2019-04-11T03:49:37", "upload_time_iso_8601": "2019-04-11T03:49:37.583094Z", "url": "https://files.pythonhosted.org/packages/92/58/d8e00a5e996ec82d725ff907903cbd24e3ef0359f5ec03896150f7f0439b/s3_parallel_put-0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2dc0c0226be0483de323cbf1fa8e3738", "sha256": "3c6959c4432751c31212030bbcb9b8dfc81fdafc63b826bdb4078e0245f7f4a2"}, "downloads": -1, "filename": "s3-parallel-put-0.2.tar.gz", "has_sig": false, "md5_digest": "2dc0c0226be0483de323cbf1fa8e3738", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9427, "upload_time": "2019-04-11T03:49:39", "upload_time_iso_8601": "2019-04-11T03:49:39.927032Z", "url": "https://files.pythonhosted.org/packages/f4/04/2b5070d828f475d086eb958c2bec37c09c7d7816b082a01e25275e85dccd/s3-parallel-put-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "b30637028fd7a642813be7eb25038e82", "sha256": "7232e63edfaaedf29ed9b880c24bcbe68d3b1f6111d3296aff8598d269471999"}, "downloads": -1, "filename": "s3_parallel_put-0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "b30637028fd7a642813be7eb25038e82", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 10738, "upload_time": "2019-04-11T04:29:23", "upload_time_iso_8601": "2019-04-11T04:29:23.308944Z", "url": "https://files.pythonhosted.org/packages/2e/5b/a6f6512aa08a3ad4a91b55d8ed5b8ae17664d9f2ffee9119995111b860d6/s3_parallel_put-0.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "294e90151d484259de30a3dd79c86f87", "sha256": "c48440eb2d0782525002585db0ff4270d80d21c249e98e597739e9bfd5084b95"}, "downloads": -1, "filename": "s3-parallel-put-0.3.tar.gz", "has_sig": false, "md5_digest": "294e90151d484259de30a3dd79c86f87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9456, "upload_time": "2019-04-11T04:29:25", "upload_time_iso_8601": "2019-04-11T04:29:25.053160Z", "url": "https://files.pythonhosted.org/packages/29/1c/301c975944ab73524ae52c6da72f3000189c0b15184bf2bef5b51e159547/s3-parallel-put-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "b7e8ecba5ca8ee4a5c43221b32c3cc58", "sha256": "d04935e0755378ddce7210c2a50a9e52b9dc4383f0d3a5dfbaef0e3cfb991456"}, "downloads": -1, "filename": "s3_parallel_put-0.4-py2-none-any.whl", "has_sig": false, "md5_digest": "b7e8ecba5ca8ee4a5c43221b32c3cc58", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 10733, "upload_time": "2019-04-11T04:41:24", "upload_time_iso_8601": "2019-04-11T04:41:24.552394Z", "url": "https://files.pythonhosted.org/packages/61/76/0c7a69ff0a1b77b390656c59b77532077ba8a268b659c87c0b935b1269b8/s3_parallel_put-0.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e212c78b3cd0a35028a34ccb7a3b8306", "sha256": "b77d26a6168e99dc2a9d8f5af91682c6010ca4e71b98ed03dd9155981cb1d2d7"}, "downloads": -1, "filename": "s3-parallel-put-0.4.tar.gz", "has_sig": false, "md5_digest": "e212c78b3cd0a35028a34ccb7a3b8306", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9456, "upload_time": "2019-04-11T04:41:27", "upload_time_iso_8601": "2019-04-11T04:41:27.203375Z", "url": "https://files.pythonhosted.org/packages/26/1d/cae320ac25f72ec91c34d337e17d29bfb6c1b75971a86a13833950ef8ef6/s3-parallel-put-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "7a0669c261b8aa75ffbddc904bc1816a", "sha256": "5ee68c66a48b3874d5ad2d6a207e0798c8a16164c597ba56da31b28c5192ed9a"}, "downloads": -1, "filename": "s3_parallel_put-0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "7a0669c261b8aa75ffbddc904bc1816a", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 10609, "upload_time": "2019-04-11T04:54:03", "upload_time_iso_8601": "2019-04-11T04:54:03.548104Z", "url": "https://files.pythonhosted.org/packages/fb/6e/e6c6218314aae7c15d883855d571ac55b61c19e083b51f3f4c76d4cf5f86/s3_parallel_put-0.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8bb857cb9592a6f4b6b304925c79c0c0", "sha256": "a166bdc9a13cc4d78bc4795977158f7fa27d97f99204cc05c33c463ec9f0beeb"}, "downloads": -1, "filename": "s3-parallel-put-0.5.tar.gz", "has_sig": false, "md5_digest": "8bb857cb9592a6f4b6b304925c79c0c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9321, "upload_time": "2019-04-11T04:54:06", "upload_time_iso_8601": "2019-04-11T04:54:06.429264Z", "url": "https://files.pythonhosted.org/packages/f6/ca/d6e3c76b5d92ab6f71e890753b3095ae0afbdd2aa8586ebd76530efb4283/s3-parallel-put-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "59bf504441cf53f204e96a3e5e753726", "sha256": "fc3b8c1df7fe74b6e9dc61cba9805b03b80c06a4746a7be480d2992d2d6ec419"}, "downloads": -1, "filename": "s3_parallel_put-0.6-py2-none-any.whl", "has_sig": false, "md5_digest": "59bf504441cf53f204e96a3e5e753726", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 10623, "upload_time": "2019-04-11T06:56:08", "upload_time_iso_8601": "2019-04-11T06:56:08.361200Z", "url": "https://files.pythonhosted.org/packages/d2/77/86d8ec4aec7f337baab7187a3c8a57f0853bc708c03a180fdcffdc05582a/s3_parallel_put-0.6-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f53f3468242f24807f0d507a18cccd8", "sha256": "7b474484f6b09ac3bd9a02062f6b73bea9875cb4816910b017f8a0424881ae47"}, "downloads": -1, "filename": "s3-parallel-put-0.6.tar.gz", "has_sig": false, "md5_digest": "1f53f3468242f24807f0d507a18cccd8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9345, "upload_time": "2019-04-11T06:56:10", "upload_time_iso_8601": "2019-04-11T06:56:10.409963Z", "url": "https://files.pythonhosted.org/packages/32/9a/9014badea0bbdd6cabd98fe70e561d3c40371aad0f6436b0dd9255c371e5/s3-parallel-put-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "590b6282a0f4e2b95c4aded4bdb2ae9e", "sha256": "d7d587a2bb9d0ee3ed119260f728ca15c1c23c8faac0cbf5af6681533e7410cc"}, "downloads": -1, "filename": "s3_parallel_put-0.7-py2-none-any.whl", "has_sig": false, "md5_digest": "590b6282a0f4e2b95c4aded4bdb2ae9e", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 10620, "upload_time": "2019-04-11T10:55:16", "upload_time_iso_8601": "2019-04-11T10:55:16.140332Z", "url": "https://files.pythonhosted.org/packages/95/7f/38839819d92e4cc4a4f94b18a2d1ff4ac2c38f3ce6bf1fd1a2cc33f284b1/s3_parallel_put-0.7-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "84ae14304c3c789b83e113f8f3c56658", "sha256": "839981a859fb64447a4fd1e0f6bec5e07d4384c958614d13834b29228047ec08"}, "downloads": -1, "filename": "s3-parallel-put-0.7.tar.gz", "has_sig": false, "md5_digest": "84ae14304c3c789b83e113f8f3c56658", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9345, "upload_time": "2019-04-11T10:55:17", "upload_time_iso_8601": "2019-04-11T10:55:17.477916Z", "url": "https://files.pythonhosted.org/packages/4f/4d/5b64ed09d56a49a93192ef823c1682f567ce11df8677d404d6be67e3e367/s3-parallel-put-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "d8bfe8c5201bdc2507afa3edfc13a244", "sha256": "0b3471c1d0234bc571e231fd8ac3582d8efaf8610d9ff4e6a6db3ee0b3634846"}, "downloads": -1, "filename": "s3_parallel_put-0.8-py2-none-any.whl", "has_sig": false, "md5_digest": "d8bfe8c5201bdc2507afa3edfc13a244", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 10615, "upload_time": "2019-04-11T10:58:00", "upload_time_iso_8601": "2019-04-11T10:58:00.306425Z", "url": "https://files.pythonhosted.org/packages/6e/03/87106a13b4794437fab6edbbdb7535e39cf755c0829f7b191338bb085ddf/s3_parallel_put-0.8-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d81744270ddb783230f73758d7cb395", "sha256": "954b57c98fc4578017d32e503ca696658948903f08cdc2367c29327e4972c8d8"}, "downloads": -1, "filename": "s3-parallel-put-0.8.tar.gz", "has_sig": false, "md5_digest": "1d81744270ddb783230f73758d7cb395", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9335, "upload_time": "2019-04-11T10:58:01", "upload_time_iso_8601": "2019-04-11T10:58:01.918011Z", "url": "https://files.pythonhosted.org/packages/94/12/2b22af4be3571025f52a3697d6cfc2d0733fcbe0afeded43c31dd58bb1fd/s3-parallel-put-0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d8bfe8c5201bdc2507afa3edfc13a244", "sha256": "0b3471c1d0234bc571e231fd8ac3582d8efaf8610d9ff4e6a6db3ee0b3634846"}, "downloads": -1, "filename": "s3_parallel_put-0.8-py2-none-any.whl", "has_sig": false, "md5_digest": "d8bfe8c5201bdc2507afa3edfc13a244", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 10615, "upload_time": "2019-04-11T10:58:00", "upload_time_iso_8601": "2019-04-11T10:58:00.306425Z", "url": "https://files.pythonhosted.org/packages/6e/03/87106a13b4794437fab6edbbdb7535e39cf755c0829f7b191338bb085ddf/s3_parallel_put-0.8-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d81744270ddb783230f73758d7cb395", "sha256": "954b57c98fc4578017d32e503ca696658948903f08cdc2367c29327e4972c8d8"}, "downloads": -1, "filename": "s3-parallel-put-0.8.tar.gz", "has_sig": false, "md5_digest": "1d81744270ddb783230f73758d7cb395", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9335, "upload_time": "2019-04-11T10:58:01", "upload_time_iso_8601": "2019-04-11T10:58:01.918011Z", "url": "https://files.pythonhosted.org/packages/94/12/2b22af4be3571025f52a3697d6cfc2d0733fcbe0afeded43c31dd58bb1fd/s3-parallel-put-0.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:37 2020"}