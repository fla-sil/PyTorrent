{"info": {"author": "Marek Chmiel", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Documentation"], "description": "# Confluence Publisher\n\nA tool to help publish documentation to Confluence.\nThis tools use own configuration file.\n\nFor now it supports:\n\n - confluence versions: 5.5 - 5.9\n - sphinx-build formats: \"fjson\", \"html\"\n\n## Why?\n\nThis tools are written as part of our Documentation Toolkit which we use in our job daily.\nThe main idea of toolkit is to make a process of creating and updating documentation able to be automated\n\n# Install\n\nInstall Confluence Publisher from [PyPI](https://pypi.python.org/pypi/confluence-publisher-ex) with\n\n```\n$ pip install confluence-publisher-ex\n```\n\n## Publisher\n\n```\n$ conf_publisher config.yml --auth XXXXXjpwYXNzdXXXXX==\n```\n\nIf a config doesn't contain page.id, the tool can automatically create pages \non-the-fly when ``-ac`` flag is set up.\n\n```\nusage: conf_publisher [-h] [-u URL] (-a AUTH | -U USER) [-F] [-w WATERMARK]\n                      [-l LINK] [-ht] [-v] [-ac] [-fo]\n                      config\n\nPublish documentation (Sphinx fjson) to Confluence\n\npositional arguments:\n  config                Configuration file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -u URL, --url URL     Confluence Url\n  -a AUTH, --auth AUTH  Base64 encoded user:password string\n  -U USER, --user USER  Username (prompt password)\n  -F, --force           Publish not changed page.\n  -w WATERMARK, --watermark WATERMARK\n                        Overrides the watermarks. Also can be \"False\" to\n                        remove all watermarks; or \"True\" to add watermarkswith\n                        default text: \"Automatically generated content. Do not\n                        edit directly.\" on all pages.\n  -l LINK, --link LINK  Overrides page link. If value is \"False\" then removes\n                        the link.\n  -ht, --hold-titles    Do not change page titles while publishing.\n  -v, --verbose\n  -ac, --auto-create    Auto create pages on-the-fly when they do not exist.\n  -fo, --fix-order      Fix ordering of the pages so that it matches the order\n                        in the configuration file.  \n```\n## Configuration file format\n\nDirectives:\n\n- **version** (required) Config version. Current is ``2``.\n- **url** (required) Base Confluence URL.\n- **base_dir** (required) Directory containing json to be published.\n- **downloads_dir** (optional) Default is _downloads\n- **images_dir** (optional) Default is _images\n- **source_ext** (optional) Default is .fjson\n- **space_key** (required) The key for a space where the documentation should be created.\n- **parent_page** (required) A page id which should be the root node for the documentation.\n- **pages** (required) Pages to be published.\n\n    - **id** (optional with -ac flag)  Confluence page ID. If page does not exists, create it with ``conf_page_maker``.\n    - **title** (optional)\n    - **source** (required)  Path to json associated with the page\n    - **link** (optional)  Link under watermark (for example to source rst in repo).\n    - **watermark** (optional)  Watermark  to put on page. E.g.: \"Automatically generated content. Do not edit directly\"\".\n    - **attachments** (optional) Files to be attached.\n\n        - **images**\n            - path_to_img1\n            - path_to_img2\n        - **downloads**\n            - path_to_file1\n            - path_to_file2\n    - **pages** Subpages to be published.\n\n        - **...** same structure as for pages\n\n\n### Config example\n\n```\n  version: 2\n  url: https://confluence.example.com\n  base_dir: _build/confluence\n  space_key: BIT\n  parent_page: 23451238\n  pages:\n  - title: \"Getting started\"\n    source: getting-started/index\n    pages: \n    - title: \"Architecture\"\n      source: getting-started/architecture\n      attachments:\n        images:\n        - first-arch.png\n        - second-arch.png\n    - title: \"Writing first app\"\n      source: getting-started/writing-first-app\n      attachments:\n        downloads:\n        - sample1.properties\n        - sample2.properties\n```\n\nor more JSONify style:\n\n```\n{\n  version: 2,\n  base_dir: \"result\",\n  pages: [\n    {\n      id: 52136662,\n      source: \"release_history\"\n    }\n  ]\n}\n```\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/marooou/confluence-publisher", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "confluence-publisher-ex", "package_url": "https://pypi.org/project/confluence-publisher-ex/", "platform": "", "project_url": "https://pypi.org/project/confluence-publisher-ex/", "project_urls": {"Homepage": "https://github.com/marooou/confluence-publisher"}, "release_url": "https://pypi.org/project/confluence-publisher-ex/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "Tool for publishing Sphinx generated documents to Confluence", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Confluence Publisher<br><br>A tool to help publish documentation to Confluence.<br>This tools use own configuration file.<br><br>For now it supports:<br><br> - confluence versions: 5.5 - 5.9<br> - sphinx-build formats: \"fjson\", \"html\"<br><br>## Why?<br><br>This tools are written as part of our Documentation Toolkit which we use in our job daily.<br>The main idea of toolkit is to make a process of creating and updating documentation able to be automated<br><br># Install<br><br>Install Confluence Publisher from [PyPI](https://pypi.python.org/pypi/confluence-publisher-ex) with<br><br>```<br>$ pip install confluence-publisher-ex<br>```<br><br>## Publisher<br><br>```<br>$ conf_publisher config.yml --auth XXXXXjpwYXNzdXXXXX==<br>```<br><br>If a config doesn't contain page.id, the tool can automatically create pages <br>on-the-fly when ``-ac`` flag is set up.<br><br>```<br>usage: conf_publisher [-h] [-u URL] (-a AUTH | -U USER) [-F] [-w WATERMARK]<br>                      [-l LINK] [-ht] [-v] [-ac] [-fo]<br>                      config<br><br>Publish documentation (Sphinx fjson) to Confluence<br><br>positional arguments:<br>  config                Configuration file<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  -u URL, --url URL     Confluence Url<br>  -a AUTH, --auth AUTH  Base64 encoded user:password string<br>  -U USER, --user USER  Username (prompt password)<br>  -F, --force           Publish not changed page.<br>  -w WATERMARK, --watermark WATERMARK<br>                        Overrides the watermarks. Also can be \"False\" to<br>                        remove all watermarks; or \"True\" to add watermarkswith<br>                        default text: \"Automatically generated content. Do not<br>                        edit directly.\" on all pages.<br>  -l LINK, --link LINK  Overrides page link. If value is \"False\" then removes<br>                        the link.<br>  -ht, --hold-titles    Do not change page titles while publishing.<br>  -v, --verbose<br>  -ac, --auto-create    Auto create pages on-the-fly when they do not exist.<br>  -fo, --fix-order      Fix ordering of the pages so that it matches the order<br>                        in the configuration file.  <br>```<br>## Configuration file format<br><br>Directives:<br><br>- **version** (required) Config version. Current is ``2``.<br>- **url** (required) Base Confluence URL.<br>- **base_dir** (required) Directory containing json to be published.<br>- **downloads_dir** (optional) Default is _downloads<br>- **images_dir** (optional) Default is _images<br>- **source_ext** (optional) Default is .fjson<br>- **space_key** (required) The key for a space where the documentation should be created.<br>- **parent_page** (required) A page id which should be the root node for the documentation.<br>- **pages** (required) Pages to be published.<br><br>    - **id** (optional with -ac flag)  Confluence page ID. If page does not exists, create it with ``conf_page_maker``.<br>    - **title** (optional)<br>    - **source** (required)  Path to json associated with the page<br>    - **link** (optional)  Link under watermark (for example to source rst in repo).<br>    - **watermark** (optional)  Watermark  to put on page. E.g.: \"Automatically generated content. Do not edit directly\"\".<br>    - **attachments** (optional) Files to be attached.<br><br>        - **images**<br>            - path_to_img1<br>            - path_to_img2<br>        - **downloads**<br>            - path_to_file1<br>            - path_to_file2<br>    - **pages** Subpages to be published.<br><br>        - **...** same structure as for pages<br><br><br>### Config example<br><br>```<br>  version: 2<br>  url: https://confluence.example.com<br>  base_dir: _build/confluence<br>  space_key: BIT<br>  parent_page: 23451238<br>  pages:<br>  - title: \"Getting started\"<br>    source: getting-started/index<br>    pages: <br>    - title: \"Architecture\"<br>      source: getting-started/architecture<br>      attachments:<br>        images:<br>        - first-arch.png<br>        - second-arch.png<br>    - title: \"Writing first app\"<br>      source: getting-started/writing-first-app<br>      attachments:<br>        downloads:<br>        - sample1.properties<br>        - sample2.properties<br>```<br><br>or more JSONify style:<br><br>```<br>{<br>  version: 2,<br>  base_dir: \"result\",<br>  pages: [<br>    {<br>      id: 52136662,<br>      source: \"release_history\"<br>    }<br>  ]<br>}<br>```<br>\n          </div>"}, "last_serial": 3117360, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "8a06f8dcb9246e5aa38af537754540fd", "sha256": "9f81a89ebdc2b4ef1c3e8f96d1229010bbd66926f28627aa250b324bbec557c1"}, "downloads": -1, "filename": "confluence-publisher-ex-1.0.0.zip", "has_sig": false, "md5_digest": "8a06f8dcb9246e5aa38af537754540fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27269, "upload_time": "2016-12-05T10:23:30", "upload_time_iso_8601": "2016-12-05T10:23:30.253236Z", "url": "https://files.pythonhosted.org/packages/15/7f/eaa2a5ce7f5c502238ccbae1098958ef56677e098941d145b09e1f264f95/confluence-publisher-ex-1.0.0.zip", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "0f76ba56464f1749355dcce9f76c433e", "sha256": "4c06ebf7937b7e604b17daf3e75b6b5b58c380e0202b62ce21606294c3e7d2e5"}, "downloads": -1, "filename": "confluence-publisher-ex-1.1.0.tar.gz", "has_sig": false, "md5_digest": "0f76ba56464f1749355dcce9f76c433e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16362, "upload_time": "2017-08-23T12:22:12", "upload_time_iso_8601": "2017-08-23T12:22:12.921580Z", "url": "https://files.pythonhosted.org/packages/55/8b/9041b434229df0116bf0db1c898dba779c15f64743d69932db2181f400e5/confluence-publisher-ex-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0f76ba56464f1749355dcce9f76c433e", "sha256": "4c06ebf7937b7e604b17daf3e75b6b5b58c380e0202b62ce21606294c3e7d2e5"}, "downloads": -1, "filename": "confluence-publisher-ex-1.1.0.tar.gz", "has_sig": false, "md5_digest": "0f76ba56464f1749355dcce9f76c433e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16362, "upload_time": "2017-08-23T12:22:12", "upload_time_iso_8601": "2017-08-23T12:22:12.921580Z", "url": "https://files.pythonhosted.org/packages/55/8b/9041b434229df0116bf0db1c898dba779c15f64743d69932db2181f400e5/confluence-publisher-ex-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:50 2020"}