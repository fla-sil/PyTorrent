{"info": {"author": "comger@gmail.com", "author_email": "comger@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "asyncgridfs\n===========\n\nasync mongo gridfs for tornado\n\n\nInstallation\n------------\n\nInstalling: `pip install asyncgridfs` or ` easy_install asyncgridfs`\n\n\nUsage \n-----\n\n    import asyncmongo\n    import tornado.web\n    from asyncgridfs import GridFS\n    \n    class Handler(tornado.web.RequestHandler):\n        @property\n        def db(self):\n            if not hasattr(self, '_db'):\n                self._db = asyncmongo.Client(pool_id='mydb', host='127.0.0.1', port=27017, maxcached=10, maxconnections=50, dbname='test')\n            return self._db\n    \n        @tornado.web.asynchronous\n        def get(self):\n            fid = self.get_argument('fid')\n            fs = GridFS(self.db)\n            fs.get(ObjectId(fid),callback=self._on_get)\n            \n\n        @tornado.web.asynchronous\n        def post(self):\n            f = self.request.files['imgFile'][0]\n            content = f.pop('body')\n            content_type = f.pop('content_type')\n            filename = f.pop('filename')\n\n            fs = GridFS(self.db)\n            fs.put(content, contentType=content_type, filename=filename, callback=self._on_post)\n\n    \n        def _on_get(self, fileobj):\n        \tself.set_header('Content-Type', fileobj['contentType'])\n        \tself.write(fileobj['data'])\n        \tself.finish()\n            \n        def _on_put(self, _id):\n        \tself.write(str(_id))\n        \tself.finish()", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/comger/asyncmongo", "keywords": "asyncmongo,gridfs,tornado", "license": "https://github.com/comger/asyncgridfs/blob/master/LICENSE", "maintainer": null, "maintainer_email": null, "name": "asyncgridfs", "package_url": "https://pypi.org/project/asyncgridfs/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/asyncgridfs/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/comger/asyncmongo"}, "release_url": "https://pypi.org/project/asyncgridfs/0.2.1.dev/", "requires_dist": null, "requires_python": null, "summary": "async mongodb gridfs with tornado IOLoop", "version": "0.2.1.dev", "yanked": false, "html_description": "<div class=\"project-description\">\n            asyncgridfs<br>===========<br><br>async mongo gridfs for tornado<br><br><br>Installation<br>------------<br><br>Installing: `pip install asyncgridfs` or ` easy_install asyncgridfs`<br><br><br>Usage <br>-----<br><br>    import asyncmongo<br>    import tornado.web<br>    from asyncgridfs import GridFS<br>    <br>    class Handler(tornado.web.RequestHandler):<br>        @property<br>        def db(self):<br>            if not hasattr(self, '_db'):<br>                self._db = asyncmongo.Client(pool_id='mydb', host='127.0.0.1', port=27017, maxcached=10, maxconnections=50, dbname='test')<br>            return self._db<br>    <br>        @tornado.web.asynchronous<br>        def get(self):<br>            fid = self.get_argument('fid')<br>            fs = GridFS(self.db)<br>            fs.get(ObjectId(fid),callback=self._on_get)<br>            <br><br>        @tornado.web.asynchronous<br>        def post(self):<br>            f = self.request.files['imgFile'][0]<br>            content = f.pop('body')<br>            content_type = f.pop('content_type')<br>            filename = f.pop('filename')<br><br>            fs = GridFS(self.db)<br>            fs.put(content, contentType=content_type, filename=filename, callback=self._on_post)<br><br>    <br>        def _on_get(self, fileobj):<br>        \tself.set_header('Content-Type', fileobj['contentType'])<br>        \tself.write(fileobj['data'])<br>        \tself.finish()<br>            <br>        def _on_put(self, _id):<br>        \tself.write(str(_id))<br>        \tself.finish()\n          </div>"}, "last_serial": 1095161, "releases": {"0.1.dev": [{"comment_text": "", "digests": {"md5": "38ffdcebd30814b0c10fce9adcbabc52", "sha256": "bf529d999bb4d8d8845be2c4cc651fb923b3846f998f5c38dd30467ffa363aa1"}, "downloads": -1, "filename": "asyncgridfs-0.1.dev.tar.gz", "has_sig": false, "md5_digest": "38ffdcebd30814b0c10fce9adcbabc52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3868, "upload_time": "2014-05-05T06:23:19", "upload_time_iso_8601": "2014-05-05T06:23:19.757280Z", "url": "https://files.pythonhosted.org/packages/34/a4/133c2b771a184cd7c1118634180d6a0e30e53b712edb01ac26ebb6a56989/asyncgridfs-0.1.dev.tar.gz", "yanked": false}], "0.2.1.dev": [{"comment_text": "", "digests": {"md5": "9dd87c0ed89623a7b160c803171f6a76", "sha256": "7ff959540a4f89126989664267f01fb6e26c0d7b8314702d19391231e3b63f96"}, "downloads": -1, "filename": "asyncgridfs-0.2.1.dev-py2.7.egg", "has_sig": false, "md5_digest": "9dd87c0ed89623a7b160c803171f6a76", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 6719, "upload_time": "2014-05-17T02:10:42", "upload_time_iso_8601": "2014-05-17T02:10:42.541328Z", "url": "https://files.pythonhosted.org/packages/21/9b/385f584d73073eeab6f37fd0d32687a116eda4893efd31715fa027f4a502/asyncgridfs-0.2.1.dev-py2.7.egg", "yanked": false}], "0.2.dev": [{"comment_text": "", "digests": {"md5": "51bbdd787a979e1a4eb5f422d1e08011", "sha256": "1d199dacacf919f388df5bd3e7b73cb74fa5771beac8dbb5cf62ef931fd7451d"}, "downloads": -1, "filename": "asyncgridfs-0.2.dev.tar.gz", "has_sig": false, "md5_digest": "51bbdd787a979e1a4eb5f422d1e08011", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4314, "upload_time": "2014-05-15T01:12:28", "upload_time_iso_8601": "2014-05-15T01:12:28.219622Z", "url": "https://files.pythonhosted.org/packages/60/a3/4ae88e4cf1d7a8618253b2bc67590b892fb9a958335fbc7a5bf7851504b1/asyncgridfs-0.2.dev.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9dd87c0ed89623a7b160c803171f6a76", "sha256": "7ff959540a4f89126989664267f01fb6e26c0d7b8314702d19391231e3b63f96"}, "downloads": -1, "filename": "asyncgridfs-0.2.1.dev-py2.7.egg", "has_sig": false, "md5_digest": "9dd87c0ed89623a7b160c803171f6a76", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 6719, "upload_time": "2014-05-17T02:10:42", "upload_time_iso_8601": "2014-05-17T02:10:42.541328Z", "url": "https://files.pythonhosted.org/packages/21/9b/385f584d73073eeab6f37fd0d32687a116eda4893efd31715fa027f4a502/asyncgridfs-0.2.1.dev-py2.7.egg", "yanked": false}], "timestamp": "Thu May  7 18:16:45 2020"}