{"info": {"author": "Ananias CARVALHO", "author_email": "carvalhoananias@hotmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries", "Topic :: System :: Filesystems", "Typing :: Typed"], "description": "# PyArtifactory\n\n[![GitHub Actions workflow](https://github.com/anancarv/python-artifactory/workflows/Check%20code/badge.svg)](https://github.com/anancarv/python-artifactory/actions)\n[![PyPI version](https://badge.fury.io/py/pyartifactory.svg)](https://badge.fury.io/py/pyartifactory)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/8b22b5118d67471f81b4de2feefc5763)](https://app.codacy.com/app/Ananias/python-artifactory?utm_source=github.com&utm_medium=referral&utm_content=anancarv/python-artifactory&utm_campaign=Badge_Grade_Dashboard)\n[![Codacy Badge](https://api.codacy.com/project/badge/Coverage/b4a37e92d42d4815938dd77a7099dfd1)](https://www.codacy.com/manual/Ananias/python-artifactory?utm_source=github.com&utm_medium=referral&utm_content=anancarv/python-artifactory&utm_campaign=Badge_Coverage)\n![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)\n\n\n`pyartifactory` is a Python library to access the [Artifactory REST API](https://www.jfrog.com/confluence/display/RTF/Artifactory+REST+API). \n\nThis library enables you to manage Artifactory resources such as users, groups, permissions, repositories, artifacts and access tokens in your applications. Based on Python 3.6+ type hints.\n\n<!-- toc -->\n\n- [Requirements](#requirements)\n- [Install](#install)\n- [Usage](#usage)\n  * [Authentication](#authentication)\n  * [SSL Cert Verification Options](#ssl-cert-verification-options)\n  * [Admin objects](#admin-objects)\n    + [User](#user)\n    + [Group](#group)\n    + [Security](#security)\n    + [Repository](#repository)\n    + [Permission](#permission)\n  * [Artifacts](#artifacts)\n    + [Deploy an artifact](#deploy-an-artifact)\n    + [Download an artifact](#download-an-artifact)\n    + [Retrieve artifact properties](#retrieve-artifact-properties)\n    + [Retrieve artifact stats](#retrieve-artifact-stats)\n    + [Copy artifact to a new location](#copy-artifact-to-a-new-location)\n    + [Move artifact to a new location](#move-artifact-to-a-new-location)\n    + [Delete an artifact](#delete-an-artifact)\n  * [Contributing](#contributing)\n\n<!-- tocstop -->\n\n## Requirements\n\n* Python 3.6+\n\n\n## Install\n\n```python\npip install pyartifactory \n```\n\n## Usage\n\n### Authentication\n\n```python\nfrom pyartifactory import Artifactory\nart = Artifactory(url=\"ARTIFACTORY_URL\", auth=('USERNAME','PASSWORD_OR_API_KEY'))\n```\n\n### SSL Cert Verification Options\nSpecify a local cert to use as client side certificate\n\n```python\nfrom pyartifactory import Artifactory\nart = Artifactory(url=\"ARTIFACTORY_URL\", auth=('USERNAME','PASSORD_OR_API_KEY'), cert=\"/path_to_file/server.pem\")\n```\n\nDisable host cert verification\n\n```python\nfrom pyartifactory import Artifactory\nart = Artifactory(url=\"ARTIFACTORY_URL\", auth=('USERNAME','PASSORD_OR_API_KEY'), verify=False)\n```\n\n### Admin objects\n\n#### User\n\nFirst, you need to create a new Artifactory object.\n```python\nfrom pyartifactory import Artifactory\nart = Artifactory(url=\"ARTIFACTORY_URL\", auth=('USERNAME','PASSORD_OR_API_KEY'))\n```\n\nGet the list of users:\n```python\nusers = art.users.list()\n```\n\nGet a single user:\n```python\nuser = art.users.get(\"test_user\")\n```\n\nCreate a user:\n```python\nfrom pyartifactory.models import NewUser\n\n# Create User\nuser = NewUser(name=\"test_user\", password=\"test_password\", email=\"user@user.com\")\nnew_user = art.users.create(user)\n\n# Update user\nuser.email = \"test@test.com\"\nupdated_user = art.users.update(user)\n```\n\nUpdate a user:\n```python\nfrom pyartifactory.models import User\n\nuser = art.users.get(\"test_user\")\n\n# Update user\nuser.email = \"test@test.com\"\nupdated_user = art.users.update(user)\n```\n\nDelete a user:\n```python\nart.users.delete(\"test_user\")\n```\n\nUnlock a user:\n```python\nart.users.unlock(\"test_user\")\n```\n\n#### Group\n\nGet the list of groups:\n```python\nusers = art.groups.list()\n```\n\nGet a single group:\n```python\nusers = art.groups.get(\"group_name\")\n```\n\nCreate/Update a group:\n```python\nfrom pyartifactory.models import Group\n\n# Create a Group\ngroup = Group(name=\"test_group\", description=\"test_group\")\nnew_group = art.groups.create(group)\n\n# Update user\ngroup.description = \"test_group_2\"\nupdated_group = art.groups.update(group)\n```\n\nDelete a group:\n```python\nart.groups.delete(\"test_group\")\n```\n\n#### Security\n\nA set of methods for performing operations on apiKeys, passwords ...\n```python\n>>> art.security.\nart.security.create_api_key(          art.security.get_encrypted_password(  art.security.revoke_api_key(\nart.security.get_api_key(             art.security.regenerate_api_key(      art.security.revoke_user_api_key(\n```\n\nCreate an access token (for a transient user):\n```python\ntoken = art.security.create_access_token(user_name='transient_artifactory_user', \n                                         groups=['g1', 'g2'],\n                                         refreshable=True)\n```\n\nCreate an access token for an existing user (groups are implied from the existing user):\n```python\ntoken = art.security.create_access_token(user_name='existing_artifactory_user', \n                                         refreshable=True)\n```\n\nRevoke an existing revocable token:\n```python\nart.security.revoke_access_token(token.access_token)\n```\n\n#### Repository\n\nGet the list of repositories:\n```python\nrepositories = art.repositories.list()\n```\n\nGet a single repository\n```python\nrepo = art.repositories.get_repo(\"repo_name\")\n# According to the repo type, you'll have either a local, virtual or remote repository returned\n```\n\nCreate/Update a repository:\n```python\nfrom pyartifactory.models import LocalRepository, VirtualRepository, RemoteRepository\n\n# Create local repo\nlocal_repo = LocalRepository(key=\"test_local_repo\")\nnew_local_repo = art.repositories.create_repo(local_repo)\n\n# Create virtual repo\nvirtual_repo = VirtualRepository(key=\"test_virtual_repo\")\nnew_virtual_repo = art.repositories.create_repo(virtual_repo)\n\n# Create remote repo\nremote_repo = RemoteRepository(key=\"test_remote_repo\")\nnew_remote_repo = art.repositories.create_repo(remote_repo)\n\n# Update a repository\nlocal_repo = art.repositories.get_repo(\"test_local_repo\")\nlocal_repo.description = \"test_local_repo\"\nupdated_local_repo = art.repositories.update_repo(local_repo)\n```\n\nDelete a repository:\n```python\nart.repositories.delete(\"test_local_repo\")\n```\n\n#### Permission\nGet the list of permissions:\n```python\npermissions = art.permissions.list()\n```\n\nGet a single permission:\n```python\nusers = art.permissions.get(\"test_permission\")\n```\n\nCreate/Update a permission:\n```python\nfrom pyartifactory.models import Permission\n\n# Create a permission\npermission = Permission(\n    **{\n        \"name\": \"test_permission\",\n        \"repositories\": [\"test_repository\"],\n        \"principals\": {\n            \"users\": {\"test_user\": [\"r\", \"w\", \"n\", \"d\"]},\n            \"groups\": {\"developers\": [\"r\"]},\n        },\n    }\n)\nperm = art.permissions.create(permission)\n\n# Update permission\npermission.repositories = [\"test_repository_2\"]\nupdated_permission = art.permissions.update(permission)\n```\n\nDelete a permission:\n```python\nart.permissions.delete(\"test_permission\")\n```\n\n### Artifacts\n\n#### Deploy an artifact\n```python\nartifact = art.artifacts.deploy(\"<LOCAL_FILE_LOCATION>\", \"<ARTIFACT_PATH_IN_ARTIFACTORY>\")\n# artifact = art.artifacts.deploy(\"Desktop/myNewFile.txt\", \"my-repository/my/new/artifact/directory/file.txt\")\n```\n\n#### Download an artifact\n```python\nartifact = art.artifacts.download(\"<ARTIFACT_PATH_IN_ARTIFACTORY>\", \"<LOCAL_DIRECTORY_PATH>\")\n# artifact = art.artifacts.download(\"my-artifactory-repository/my/new/artifact/file.txt\", \"Desktop/my/local/directory\")\n# The artifact location is returned by the download method\n# If you have not set a <LOCAL_DIRECTORY_PATH>, the artifact will be downloaded in the current directory\n```\n\n#### Retrieve artifact properties\n```python\nartifact_properties = art.artifacts.properties(\"<ARTIFACT_PATH_IN_ARTIFACTORY>\")\n# artifact_properties = art.artifacts.properties(\"my-repository/my/new/artifact/directory/file.txt\")\n>>> print(artifact_properties.json)\n```\n\n#### Retrieve artifact stats\n```python\nartifact_stats = art.artifacts.stats(\"<ARTIFACT_PATH_IN_ARTIFACTORY>\")\n# artifact_stats = art.artifacts.stats(\"my-repository/my/new/artifact/directory/file.txt\")\n>>> print(artifact_stats.json)\n```\n\n#### Copy artifact to a new location\n```python\nartifact = art.artifacts.copy(\"<CURRENT_ARTIFACT_PATH_IN_ARTIFACTORY>\",\"<NEW_ARTIFACT_PATH_IN_ARTIFACTORY>\")\n\n# If you want to run a dryRun test, you can do the following:\n# artifact = art.artifacts.copy(\"my-repository/current/artifact/path/file.txt\",\"my-repository/new/artifact/path/file.txt\", dryrun=True)\n# It will return properties of the newly copied artifact\n```\n\n#### Move artifact to a new location\n```python\nartifact = art.artifacts.move(\"<CURRENT_ARTIFACT_PATH_IN_ARTIFACTORY>\",\"<NEW_ARTIFACT_PATH_IN_ARTIFACTORY>\")\n\n# You can also run a dryRun test with the move operation\n# It will return properties of the newly moved artifact\n```\n\n#### Delete an artifact\n```python\nart.artifacts.delete(\"<ARTIFACT_PATH_IN_ARTIFACTORY>\")\n```\n\n\n### Contributing\nPlease read the [Development - Contributing](./CONTRIBUTING.md) guidelines.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/anancarv/python-artifactory", "keywords": "artifactory", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyartifactory", "package_url": "https://pypi.org/project/pyartifactory/", "platform": "", "project_url": "https://pypi.org/project/pyartifactory/", "project_urls": {"Bug Tracker": "https://github.com/anancarv/python-artifactory/issues", "Documentation": "https://github.com/anancarv/python-artifactory", "Homepage": "https://github.com/anancarv/python-artifactory", "Repository": "https://github.com/anancarv/python-artifactory"}, "release_url": "https://pypi.org/project/pyartifactory/1.5.0/", "requires_dist": ["requests (>=2.21,<3.0)", "email_validator (>=1.0,<2.0)", "requests_toolbelt (>=0.9.1,<0.10.0)", "pylint (==2.4.4)", "pydantic (>=1.4,<2.0)", "typing_extensions (>=3.7.4,<4.0.0)"], "requires_python": ">=3.6,<4.0", "summary": "Typed interactions with the Jfrog Artifactory REST API", "version": "1.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyArtifactory</h1>\n<p><a href=\"https://github.com/anancarv/python-artifactory/actions\" rel=\"nofollow\"><img alt=\"GitHub Actions workflow\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/af5042edd0e9a0ab51375d93ac455cf2138a31ce/68747470733a2f2f6769746875622e636f6d2f616e616e636172762f707974686f6e2d61727469666163746f72792f776f726b666c6f77732f436865636b253230636f64652f62616467652e737667\"></a>\n<a href=\"https://badge.fury.io/py/pyartifactory\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c8f83c7ab154456a844101c049860f2297860762/68747470733a2f2f62616467652e667572792e696f2f70792f707961727469666163746f72792e737667\"></a>\n<a href=\"https://app.codacy.com/app/Ananias/python-artifactory?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=anancarv/python-artifactory&amp;utm_campaign=Badge_Grade_Dashboard\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c72e1e1f726e9892fdec26d156aca6720c6c641a/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3862323262353131386436373437316638316234646532666565666335373633\"></a>\n<a href=\"https://www.codacy.com/manual/Ananias/python-artifactory?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=anancarv/python-artifactory&amp;utm_campaign=Badge_Coverage\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/24ad6af5c7d015a155cc00cfd1c2a0deefc98c40/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f436f7665726167652f6234613337653932643432643438313539333864643737613730393964666431\"></a>\n<img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></p>\n<p><code>pyartifactory</code> is a Python library to access the <a href=\"https://www.jfrog.com/confluence/display/RTF/Artifactory+REST+API\" rel=\"nofollow\">Artifactory REST API</a>.</p>\n<p>This library enables you to manage Artifactory resources such as users, groups, permissions, repositories, artifacts and access tokens in your applications. Based on Python 3.6+ type hints.</p>\n\n<ul>\n<li><a href=\"#requirements\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#install\" rel=\"nofollow\">Install</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a>\n<ul>\n<li><a href=\"#authentication\" rel=\"nofollow\">Authentication</a></li>\n<li><a href=\"#ssl-cert-verification-options\" rel=\"nofollow\">SSL Cert Verification Options</a></li>\n<li><a href=\"#admin-objects\" rel=\"nofollow\">Admin objects</a>\n<ul>\n<li><a href=\"#user\" rel=\"nofollow\">User</a></li>\n<li><a href=\"#group\" rel=\"nofollow\">Group</a></li>\n<li><a href=\"#security\" rel=\"nofollow\">Security</a></li>\n<li><a href=\"#repository\" rel=\"nofollow\">Repository</a></li>\n<li><a href=\"#permission\" rel=\"nofollow\">Permission</a></li>\n</ul>\n</li>\n<li><a href=\"#artifacts\" rel=\"nofollow\">Artifacts</a>\n<ul>\n<li><a href=\"#deploy-an-artifact\" rel=\"nofollow\">Deploy an artifact</a></li>\n<li><a href=\"#download-an-artifact\" rel=\"nofollow\">Download an artifact</a></li>\n<li><a href=\"#retrieve-artifact-properties\" rel=\"nofollow\">Retrieve artifact properties</a></li>\n<li><a href=\"#retrieve-artifact-stats\" rel=\"nofollow\">Retrieve artifact stats</a></li>\n<li><a href=\"#copy-artifact-to-a-new-location\" rel=\"nofollow\">Copy artifact to a new location</a></li>\n<li><a href=\"#move-artifact-to-a-new-location\" rel=\"nofollow\">Move artifact to a new location</a></li>\n<li><a href=\"#delete-an-artifact\" rel=\"nofollow\">Delete an artifact</a></li>\n</ul>\n</li>\n<li><a href=\"#contributing\" rel=\"nofollow\">Contributing</a></li>\n</ul>\n</li>\n</ul>\n\n<h2>Requirements</h2>\n<ul>\n<li>Python 3.6+</li>\n</ul>\n<h2>Install</h2>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">pyartifactory</span> \n</pre>\n<h2>Usage</h2>\n<h3>Authentication</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyartifactory</span> <span class=\"kn\">import</span> <span class=\"n\">Artifactory</span>\n<span class=\"n\">art</span> <span class=\"o\">=</span> <span class=\"n\">Artifactory</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">\"ARTIFACTORY_URL\"</span><span class=\"p\">,</span> <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'USERNAME'</span><span class=\"p\">,</span><span class=\"s1\">'PASSWORD_OR_API_KEY'</span><span class=\"p\">))</span>\n</pre>\n<h3>SSL Cert Verification Options</h3>\n<p>Specify a local cert to use as client side certificate</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyartifactory</span> <span class=\"kn\">import</span> <span class=\"n\">Artifactory</span>\n<span class=\"n\">art</span> <span class=\"o\">=</span> <span class=\"n\">Artifactory</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">\"ARTIFACTORY_URL\"</span><span class=\"p\">,</span> <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'USERNAME'</span><span class=\"p\">,</span><span class=\"s1\">'PASSORD_OR_API_KEY'</span><span class=\"p\">),</span> <span class=\"n\">cert</span><span class=\"o\">=</span><span class=\"s2\">\"/path_to_file/server.pem\"</span><span class=\"p\">)</span>\n</pre>\n<p>Disable host cert verification</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyartifactory</span> <span class=\"kn\">import</span> <span class=\"n\">Artifactory</span>\n<span class=\"n\">art</span> <span class=\"o\">=</span> <span class=\"n\">Artifactory</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">\"ARTIFACTORY_URL\"</span><span class=\"p\">,</span> <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'USERNAME'</span><span class=\"p\">,</span><span class=\"s1\">'PASSORD_OR_API_KEY'</span><span class=\"p\">),</span> <span class=\"n\">verify</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<h3>Admin objects</h3>\n<h4>User</h4>\n<p>First, you need to create a new Artifactory object.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyartifactory</span> <span class=\"kn\">import</span> <span class=\"n\">Artifactory</span>\n<span class=\"n\">art</span> <span class=\"o\">=</span> <span class=\"n\">Artifactory</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">\"ARTIFACTORY_URL\"</span><span class=\"p\">,</span> <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'USERNAME'</span><span class=\"p\">,</span><span class=\"s1\">'PASSORD_OR_API_KEY'</span><span class=\"p\">))</span>\n</pre>\n<p>Get the list of users:</p>\n<pre><span class=\"n\">users</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">users</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">()</span>\n</pre>\n<p>Get a single user:</p>\n<pre><span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">users</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"test_user\"</span><span class=\"p\">)</span>\n</pre>\n<p>Create a user:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyartifactory.models</span> <span class=\"kn\">import</span> <span class=\"n\">NewUser</span>\n\n<span class=\"c1\"># Create User</span>\n<span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">NewUser</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"test_user\"</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s2\">\"test_password\"</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s2\">\"user@user.com\"</span><span class=\"p\">)</span>\n<span class=\"n\">new_user</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">users</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Update user</span>\n<span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">email</span> <span class=\"o\">=</span> <span class=\"s2\">\"test@test.com\"</span>\n<span class=\"n\">updated_user</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">users</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span>\n</pre>\n<p>Update a user:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyartifactory.models</span> <span class=\"kn\">import</span> <span class=\"n\">User</span>\n\n<span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">users</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"test_user\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Update user</span>\n<span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">email</span> <span class=\"o\">=</span> <span class=\"s2\">\"test@test.com\"</span>\n<span class=\"n\">updated_user</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">users</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span>\n</pre>\n<p>Delete a user:</p>\n<pre><span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">users</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"s2\">\"test_user\"</span><span class=\"p\">)</span>\n</pre>\n<p>Unlock a user:</p>\n<pre><span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">users</span><span class=\"o\">.</span><span class=\"n\">unlock</span><span class=\"p\">(</span><span class=\"s2\">\"test_user\"</span><span class=\"p\">)</span>\n</pre>\n<h4>Group</h4>\n<p>Get the list of groups:</p>\n<pre><span class=\"n\">users</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">groups</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">()</span>\n</pre>\n<p>Get a single group:</p>\n<pre><span class=\"n\">users</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">groups</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"group_name\"</span><span class=\"p\">)</span>\n</pre>\n<p>Create/Update a group:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyartifactory.models</span> <span class=\"kn\">import</span> <span class=\"n\">Group</span>\n\n<span class=\"c1\"># Create a Group</span>\n<span class=\"n\">group</span> <span class=\"o\">=</span> <span class=\"n\">Group</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"test_group\"</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"test_group\"</span><span class=\"p\">)</span>\n<span class=\"n\">new_group</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">groups</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">group</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Update user</span>\n<span class=\"n\">group</span><span class=\"o\">.</span><span class=\"n\">description</span> <span class=\"o\">=</span> <span class=\"s2\">\"test_group_2\"</span>\n<span class=\"n\">updated_group</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">groups</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">group</span><span class=\"p\">)</span>\n</pre>\n<p>Delete a group:</p>\n<pre><span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">groups</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"s2\">\"test_group\"</span><span class=\"p\">)</span>\n</pre>\n<h4>Security</h4>\n<p>A set of methods for performing operations on apiKeys, passwords ...</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">security</span><span class=\"o\">.</span>\n<span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">security</span><span class=\"o\">.</span><span class=\"n\">create_api_key</span><span class=\"p\">(</span>          <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">security</span><span class=\"o\">.</span><span class=\"n\">get_encrypted_password</span><span class=\"p\">(</span>  <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">security</span><span class=\"o\">.</span><span class=\"n\">revoke_api_key</span><span class=\"p\">(</span>\n<span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">security</span><span class=\"o\">.</span><span class=\"n\">get_api_key</span><span class=\"p\">(</span>             <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">security</span><span class=\"o\">.</span><span class=\"n\">regenerate_api_key</span><span class=\"p\">(</span>      <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">security</span><span class=\"o\">.</span><span class=\"n\">revoke_user_api_key</span><span class=\"p\">(</span>\n</pre>\n<p>Create an access token (for a transient user):</p>\n<pre><span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">security</span><span class=\"o\">.</span><span class=\"n\">create_access_token</span><span class=\"p\">(</span><span class=\"n\">user_name</span><span class=\"o\">=</span><span class=\"s1\">'transient_artifactory_user'</span><span class=\"p\">,</span> \n                                         <span class=\"n\">groups</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'g1'</span><span class=\"p\">,</span> <span class=\"s1\">'g2'</span><span class=\"p\">],</span>\n                                         <span class=\"n\">refreshable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Create an access token for an existing user (groups are implied from the existing user):</p>\n<pre><span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">security</span><span class=\"o\">.</span><span class=\"n\">create_access_token</span><span class=\"p\">(</span><span class=\"n\">user_name</span><span class=\"o\">=</span><span class=\"s1\">'existing_artifactory_user'</span><span class=\"p\">,</span> \n                                         <span class=\"n\">refreshable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Revoke an existing revocable token:</p>\n<pre><span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">security</span><span class=\"o\">.</span><span class=\"n\">revoke_access_token</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">access_token</span><span class=\"p\">)</span>\n</pre>\n<h4>Repository</h4>\n<p>Get the list of repositories:</p>\n<pre><span class=\"n\">repositories</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">repositories</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">()</span>\n</pre>\n<p>Get a single repository</p>\n<pre><span class=\"n\">repo</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">repositories</span><span class=\"o\">.</span><span class=\"n\">get_repo</span><span class=\"p\">(</span><span class=\"s2\">\"repo_name\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># According to the repo type, you'll have either a local, virtual or remote repository returned</span>\n</pre>\n<p>Create/Update a repository:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyartifactory.models</span> <span class=\"kn\">import</span> <span class=\"n\">LocalRepository</span><span class=\"p\">,</span> <span class=\"n\">VirtualRepository</span><span class=\"p\">,</span> <span class=\"n\">RemoteRepository</span>\n\n<span class=\"c1\"># Create local repo</span>\n<span class=\"n\">local_repo</span> <span class=\"o\">=</span> <span class=\"n\">LocalRepository</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s2\">\"test_local_repo\"</span><span class=\"p\">)</span>\n<span class=\"n\">new_local_repo</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">repositories</span><span class=\"o\">.</span><span class=\"n\">create_repo</span><span class=\"p\">(</span><span class=\"n\">local_repo</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create virtual repo</span>\n<span class=\"n\">virtual_repo</span> <span class=\"o\">=</span> <span class=\"n\">VirtualRepository</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s2\">\"test_virtual_repo\"</span><span class=\"p\">)</span>\n<span class=\"n\">new_virtual_repo</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">repositories</span><span class=\"o\">.</span><span class=\"n\">create_repo</span><span class=\"p\">(</span><span class=\"n\">virtual_repo</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create remote repo</span>\n<span class=\"n\">remote_repo</span> <span class=\"o\">=</span> <span class=\"n\">RemoteRepository</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s2\">\"test_remote_repo\"</span><span class=\"p\">)</span>\n<span class=\"n\">new_remote_repo</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">repositories</span><span class=\"o\">.</span><span class=\"n\">create_repo</span><span class=\"p\">(</span><span class=\"n\">remote_repo</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Update a repository</span>\n<span class=\"n\">local_repo</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">repositories</span><span class=\"o\">.</span><span class=\"n\">get_repo</span><span class=\"p\">(</span><span class=\"s2\">\"test_local_repo\"</span><span class=\"p\">)</span>\n<span class=\"n\">local_repo</span><span class=\"o\">.</span><span class=\"n\">description</span> <span class=\"o\">=</span> <span class=\"s2\">\"test_local_repo\"</span>\n<span class=\"n\">updated_local_repo</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">repositories</span><span class=\"o\">.</span><span class=\"n\">update_repo</span><span class=\"p\">(</span><span class=\"n\">local_repo</span><span class=\"p\">)</span>\n</pre>\n<p>Delete a repository:</p>\n<pre><span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">repositories</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"s2\">\"test_local_repo\"</span><span class=\"p\">)</span>\n</pre>\n<h4>Permission</h4>\n<p>Get the list of permissions:</p>\n<pre><span class=\"n\">permissions</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">permissions</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">()</span>\n</pre>\n<p>Get a single permission:</p>\n<pre><span class=\"n\">users</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">permissions</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"test_permission\"</span><span class=\"p\">)</span>\n</pre>\n<p>Create/Update a permission:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyartifactory.models</span> <span class=\"kn\">import</span> <span class=\"n\">Permission</span>\n\n<span class=\"c1\"># Create a permission</span>\n<span class=\"n\">permission</span> <span class=\"o\">=</span> <span class=\"n\">Permission</span><span class=\"p\">(</span>\n    <span class=\"o\">**</span><span class=\"p\">{</span>\n        <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"test_permission\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"repositories\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"test_repository\"</span><span class=\"p\">],</span>\n        <span class=\"s2\">\"principals\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"users\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"test_user\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"r\"</span><span class=\"p\">,</span> <span class=\"s2\">\"w\"</span><span class=\"p\">,</span> <span class=\"s2\">\"n\"</span><span class=\"p\">,</span> <span class=\"s2\">\"d\"</span><span class=\"p\">]},</span>\n            <span class=\"s2\">\"groups\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"developers\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"r\"</span><span class=\"p\">]},</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n<span class=\"n\">perm</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">permissions</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">permission</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Update permission</span>\n<span class=\"n\">permission</span><span class=\"o\">.</span><span class=\"n\">repositories</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"test_repository_2\"</span><span class=\"p\">]</span>\n<span class=\"n\">updated_permission</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">permissions</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">permission</span><span class=\"p\">)</span>\n</pre>\n<p>Delete a permission:</p>\n<pre><span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">permissions</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"s2\">\"test_permission\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Artifacts</h3>\n<h4>Deploy an artifact</h4>\n<pre><span class=\"n\">artifact</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">artifacts</span><span class=\"o\">.</span><span class=\"n\">deploy</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;LOCAL_FILE_LOCATION&gt;\"</span><span class=\"p\">,</span> <span class=\"s2\">\"&lt;ARTIFACT_PATH_IN_ARTIFACTORY&gt;\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># artifact = art.artifacts.deploy(\"Desktop/myNewFile.txt\", \"my-repository/my/new/artifact/directory/file.txt\")</span>\n</pre>\n<h4>Download an artifact</h4>\n<pre><span class=\"n\">artifact</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">artifacts</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;ARTIFACT_PATH_IN_ARTIFACTORY&gt;\"</span><span class=\"p\">,</span> <span class=\"s2\">\"&lt;LOCAL_DIRECTORY_PATH&gt;\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># artifact = art.artifacts.download(\"my-artifactory-repository/my/new/artifact/file.txt\", \"Desktop/my/local/directory\")</span>\n<span class=\"c1\"># The artifact location is returned by the download method</span>\n<span class=\"c1\"># If you have not set a &lt;LOCAL_DIRECTORY_PATH&gt;, the artifact will be downloaded in the current directory</span>\n</pre>\n<h4>Retrieve artifact properties</h4>\n<pre><span class=\"n\">artifact_properties</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">artifacts</span><span class=\"o\">.</span><span class=\"n\">properties</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;ARTIFACT_PATH_IN_ARTIFACTORY&gt;\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># artifact_properties = art.artifacts.properties(\"my-repository/my/new/artifact/directory/file.txt\")</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">artifact_properties</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">)</span>\n</pre>\n<h4>Retrieve artifact stats</h4>\n<pre><span class=\"n\">artifact_stats</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">artifacts</span><span class=\"o\">.</span><span class=\"n\">stats</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;ARTIFACT_PATH_IN_ARTIFACTORY&gt;\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># artifact_stats = art.artifacts.stats(\"my-repository/my/new/artifact/directory/file.txt\")</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">artifact_stats</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">)</span>\n</pre>\n<h4>Copy artifact to a new location</h4>\n<pre><span class=\"n\">artifact</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">artifacts</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;CURRENT_ARTIFACT_PATH_IN_ARTIFACTORY&gt;\"</span><span class=\"p\">,</span><span class=\"s2\">\"&lt;NEW_ARTIFACT_PATH_IN_ARTIFACTORY&gt;\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># If you want to run a dryRun test, you can do the following:</span>\n<span class=\"c1\"># artifact = art.artifacts.copy(\"my-repository/current/artifact/path/file.txt\",\"my-repository/new/artifact/path/file.txt\", dryrun=True)</span>\n<span class=\"c1\"># It will return properties of the newly copied artifact</span>\n</pre>\n<h4>Move artifact to a new location</h4>\n<pre><span class=\"n\">artifact</span> <span class=\"o\">=</span> <span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">artifacts</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;CURRENT_ARTIFACT_PATH_IN_ARTIFACTORY&gt;\"</span><span class=\"p\">,</span><span class=\"s2\">\"&lt;NEW_ARTIFACT_PATH_IN_ARTIFACTORY&gt;\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># You can also run a dryRun test with the move operation</span>\n<span class=\"c1\"># It will return properties of the newly moved artifact</span>\n</pre>\n<h4>Delete an artifact</h4>\n<pre><span class=\"n\">art</span><span class=\"o\">.</span><span class=\"n\">artifacts</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;ARTIFACT_PATH_IN_ARTIFACTORY&gt;\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Contributing</h3>\n<p>Please read the <a href=\"./CONTRIBUTING.md\" rel=\"nofollow\">Development - Contributing</a> guidelines.</p>\n\n          </div>"}, "last_serial": 7171531, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "41080f6309401cc55e0adc267ebd6396", "sha256": "cc88069272835fd6188e9d8ce6725cb152345c8a027e0bf7aa18d027bc9d03c7"}, "downloads": -1, "filename": "PyArtifactory-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "41080f6309401cc55e0adc267ebd6396", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 9450, "upload_time": "2019-07-19T11:57:08", "upload_time_iso_8601": "2019-07-19T11:57:08.095738Z", "url": "https://files.pythonhosted.org/packages/ea/cb/2acdfe85c5ec6d9fa7115c2f7ccb989d782383d4f86a9dd4d2ff9dd29156/PyArtifactory-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "119916d264f487bb408f18c7c33982ef", "sha256": "7e9e30a38bf3cde65dd657b0cfbd387005f7f3aa5dbc39f563e7dc3865fa3656"}, "downloads": -1, "filename": "PyArtifactory-1.0.1.tar.gz", "has_sig": false, "md5_digest": "119916d264f487bb408f18c7c33982ef", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 7313, "upload_time": "2019-07-19T11:57:10", "upload_time_iso_8601": "2019-07-19T11:57:10.999401Z", "url": "https://files.pythonhosted.org/packages/eb/c5/b49eb3b8978ba636e9b69b55f3a36eed3d7f9b5abf4d185ad711c2372dd1/PyArtifactory-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "dd0cbbacd258e41eabab2ee0a9599635", "sha256": "8127fa3bf948b6872ab18e9b29ffa3e889c2fc0fa1763bc8ec29959ced05f6df"}, "downloads": -1, "filename": "PyArtifactory-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "dd0cbbacd258e41eabab2ee0a9599635", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 11082, "upload_time": "2019-07-19T12:26:48", "upload_time_iso_8601": "2019-07-19T12:26:48.014820Z", "url": "https://files.pythonhosted.org/packages/39/e3/6a8ddcefd9768a01f3ff4030c523b72f02b8cf52fd092ef5e184f4e2243b/PyArtifactory-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b61924f7aa4c9ae86ada34faf6f86aa", "sha256": "cdead928457577a2a35db5527e25c44eff7beb3b8d4282ceabf0cbee07347f18"}, "downloads": -1, "filename": "PyArtifactory-1.0.2.tar.gz", "has_sig": false, "md5_digest": "0b61924f7aa4c9ae86ada34faf6f86aa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 10915, "upload_time": "2019-07-19T12:26:49", "upload_time_iso_8601": "2019-07-19T12:26:49.538778Z", "url": "https://files.pythonhosted.org/packages/5f/b8/f9b50decad20e8304921812124b09de764b4b2bcc00dec42fbd5f343206e/PyArtifactory-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "ff23c84c28368594b02b3a09017c0405", "sha256": "fd4972403ba89a52b8e5088709103c54585dfc2f2baa3e11c97de223ffe959c1"}, "downloads": -1, "filename": "PyArtifactory-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ff23c84c28368594b02b3a09017c0405", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 14309, "upload_time": "2020-01-15T15:41:43", "upload_time_iso_8601": "2020-01-15T15:41:43.883164Z", "url": "https://files.pythonhosted.org/packages/c1/ad/9fd2114a25b2800e12d3c8aacd93b3ed9ce44e439396b674ec9bb5f58a28/PyArtifactory-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "784ffbce878a97bcbde4326ab917a175", "sha256": "d0e1c151227f7613a2d6d4b17bb6fecf7ae98e081c12f5e7253d85edba4fd291"}, "downloads": -1, "filename": "PyArtifactory-1.1.0.tar.gz", "has_sig": false, "md5_digest": "784ffbce878a97bcbde4326ab917a175", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 15050, "upload_time": "2020-01-15T15:41:45", "upload_time_iso_8601": "2020-01-15T15:41:45.089459Z", "url": "https://files.pythonhosted.org/packages/6a/c8/10716b3c8698c6287bfef29e787ba3ae612e56c05f8c7cc8755f878b161d/PyArtifactory-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "be80c9e52997fe17a7528ed64bff6100", "sha256": "3d9e02d89df5206cea3830f4c4cf23a46e1cb8a18f61e62bb1a8dae0b2fbf507"}, "downloads": -1, "filename": "PyArtifactory-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "be80c9e52997fe17a7528ed64bff6100", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 14317, "upload_time": "2020-02-04T17:06:25", "upload_time_iso_8601": "2020-02-04T17:06:25.950938Z", "url": "https://files.pythonhosted.org/packages/0b/21/78dd6938ff37c09c781db97f797cc44038fc2b76a474c78285ed96552ee9/PyArtifactory-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba759cd4740ac3c9569cf526bc5e813a", "sha256": "c48c0c6467ab5b2e6601f7f9e0cc887dd2b3e1c7c8c3249cf74bcc3711fabbb4"}, "downloads": -1, "filename": "PyArtifactory-1.1.1.tar.gz", "has_sig": false, "md5_digest": "ba759cd4740ac3c9569cf526bc5e813a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 15056, "upload_time": "2020-02-04T17:06:27", "upload_time_iso_8601": "2020-02-04T17:06:27.225050Z", "url": "https://files.pythonhosted.org/packages/0a/c6/2bac4c4d948650fa1bb6a213c41d8f589e24113915caa1d611d66272c1d6/PyArtifactory-1.1.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "6c12ff42c35634c44cb56ab9cca326db", "sha256": "1011466450169f2f27b43f8f2440893036989407101239f85051f0b0ea59b9c2"}, "downloads": -1, "filename": "PyArtifactory-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6c12ff42c35634c44cb56ab9cca326db", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 14397, "upload_time": "2020-02-14T14:56:15", "upload_time_iso_8601": "2020-02-14T14:56:15.219659Z", "url": "https://files.pythonhosted.org/packages/86/a5/7ddc368dd0851d83886d892ff92345ba13a1d34e495741537f1cdf4ec310/PyArtifactory-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "565a094670ff3c206027bc7dd7215464", "sha256": "4e28769e604850f0137271e2bcc7257c65656609780350bcc50e43870087695c"}, "downloads": -1, "filename": "PyArtifactory-1.2.0.tar.gz", "has_sig": false, "md5_digest": "565a094670ff3c206027bc7dd7215464", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 15151, "upload_time": "2020-02-14T14:56:16", "upload_time_iso_8601": "2020-02-14T14:56:16.678034Z", "url": "https://files.pythonhosted.org/packages/f0/ba/fcee39f5637b84368d6bc8d3997e0d96b94a5aea5b87ccd9c2626a849278/PyArtifactory-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "381f3c12f3b9d2abf6bf4087184e9f13", "sha256": "96cc73ca75d7c3d1d36b8538272d58631d20697994f2ef5583adfcfb29e5f8ca"}, "downloads": -1, "filename": "PyArtifactory-1.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "381f3c12f3b9d2abf6bf4087184e9f13", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 15308, "upload_time": "2020-03-04T15:45:24", "upload_time_iso_8601": "2020-03-04T15:45:24.890696Z", "url": "https://files.pythonhosted.org/packages/32/d4/8fd43013217c27f916c48df042d2fc968a64c403f0e7d35751fd213d1b8b/PyArtifactory-1.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51f0c1cb0848942b19ced520c87b4f4d", "sha256": "d447bebfdc1df131a323a7fef76f4000f21d32e930c5cc9a43496f645880e4f5"}, "downloads": -1, "filename": "PyArtifactory-1.3.0.tar.gz", "has_sig": false, "md5_digest": "51f0c1cb0848942b19ced520c87b4f4d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 15747, "upload_time": "2020-03-04T15:45:25", "upload_time_iso_8601": "2020-03-04T15:45:25.992861Z", "url": "https://files.pythonhosted.org/packages/05/40/4232283a8963977abaea83471361e9e6d5da3e0acfe596ea98213eab99f0/PyArtifactory-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "69a93777b232426477aa219dcdca54f2", "sha256": "9a8870f6f6edf68d0b94b932b1844aaf12c468370d2665a148e1c230fc18f8f7"}, "downloads": -1, "filename": "PyArtifactory-1.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "69a93777b232426477aa219dcdca54f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 15321, "upload_time": "2020-03-13T15:42:37", "upload_time_iso_8601": "2020-03-13T15:42:37.727510Z", "url": "https://files.pythonhosted.org/packages/09/af/5e1293e3cba1c07d10e14fb6d006897ce5c0e8b8f955c13f003e1c9a268c/PyArtifactory-1.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bae8244d9ed9f3b3899fbdfbaa0d2095", "sha256": "d32b6d8780f13044acc571d5a6d4b7efc3fc316c2bdfeeeb583d42bbaee0891e"}, "downloads": -1, "filename": "PyArtifactory-1.3.1.tar.gz", "has_sig": false, "md5_digest": "bae8244d9ed9f3b3899fbdfbaa0d2095", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 15759, "upload_time": "2020-03-13T15:42:38", "upload_time_iso_8601": "2020-03-13T15:42:38.837657Z", "url": "https://files.pythonhosted.org/packages/b7/c7/a63c6b62933a08cda302d19504c744b4926ad8dc8cf078e588e88b4be23d/PyArtifactory-1.3.1.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "cb89c34d8f1b692cfe022fcdf423c532", "sha256": "7d182d5e7aa64ac972218e67ceb8bdbf768c50e13843330a4a01d1730168c24a"}, "downloads": -1, "filename": "PyArtifactory-1.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cb89c34d8f1b692cfe022fcdf423c532", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 15843, "upload_time": "2020-04-07T08:11:36", "upload_time_iso_8601": "2020-04-07T08:11:36.857931Z", "url": "https://files.pythonhosted.org/packages/15/36/760b6b68fe9392de1989bc8787b73e99b7a23b6b494a557e457e098cfcf3/PyArtifactory-1.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "293362e285da5b21a2756efb62b45d7f", "sha256": "4ddfed98e34b1985f51d1f82bf3c8ac3b693eaf2a65b1d7d0008267e85e9c854"}, "downloads": -1, "filename": "PyArtifactory-1.4.0.tar.gz", "has_sig": false, "md5_digest": "293362e285da5b21a2756efb62b45d7f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 16519, "upload_time": "2020-04-07T08:11:38", "upload_time_iso_8601": "2020-04-07T08:11:38.111741Z", "url": "https://files.pythonhosted.org/packages/42/18/124824b705db5d18e1de191773a82708dec6daaa99e8612e466315807910/PyArtifactory-1.4.0.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "13df648f55715a873b3c9a29e9ac51bb", "sha256": "fa9430b2ea2d1ac5e0a0e28ed97c168e5c00520c940ced4c59ac6746dadfc693"}, "downloads": -1, "filename": "PyArtifactory-1.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "13df648f55715a873b3c9a29e9ac51bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 15973, "upload_time": "2020-05-05T12:11:33", "upload_time_iso_8601": "2020-05-05T12:11:33.763466Z", "url": "https://files.pythonhosted.org/packages/39/1e/2872b0420be93ed294e3b7f85140ecf0b50a484b2adda7d247bd807c75e7/PyArtifactory-1.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2a36dbce611f140bbccb8b18eb470ad", "sha256": "f4dc5dc3b8e7b24bf1fd17d4c4fe8728a5b248d73eddd3700739987b517d6334"}, "downloads": -1, "filename": "PyArtifactory-1.5.0.tar.gz", "has_sig": false, "md5_digest": "b2a36dbce611f140bbccb8b18eb470ad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 16728, "upload_time": "2020-05-05T12:11:34", "upload_time_iso_8601": "2020-05-05T12:11:34.977310Z", "url": "https://files.pythonhosted.org/packages/fd/90/e9c9e052d9ec2d35b882b85553753e530d0004c6363c4cce4fe1dfebc249/PyArtifactory-1.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "13df648f55715a873b3c9a29e9ac51bb", "sha256": "fa9430b2ea2d1ac5e0a0e28ed97c168e5c00520c940ced4c59ac6746dadfc693"}, "downloads": -1, "filename": "PyArtifactory-1.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "13df648f55715a873b3c9a29e9ac51bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 15973, "upload_time": "2020-05-05T12:11:33", "upload_time_iso_8601": "2020-05-05T12:11:33.763466Z", "url": "https://files.pythonhosted.org/packages/39/1e/2872b0420be93ed294e3b7f85140ecf0b50a484b2adda7d247bd807c75e7/PyArtifactory-1.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2a36dbce611f140bbccb8b18eb470ad", "sha256": "f4dc5dc3b8e7b24bf1fd17d4c4fe8728a5b248d73eddd3700739987b517d6334"}, "downloads": -1, "filename": "PyArtifactory-1.5.0.tar.gz", "has_sig": false, "md5_digest": "b2a36dbce611f140bbccb8b18eb470ad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 16728, "upload_time": "2020-05-05T12:11:34", "upload_time_iso_8601": "2020-05-05T12:11:34.977310Z", "url": "https://files.pythonhosted.org/packages/fd/90/e9c9e052d9ec2d35b882b85553753e530d0004c6363c4cce4fe1dfebc249/PyArtifactory-1.5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:15 2020"}