{"info": {"author": "Anexia", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Utilities"], "description": "\nAnexia Monitoring\n=================\n\nA Django app used to monitor updates for Django and all installed python\npackages in the running environment. It can be also used to check if the\nwebsite is alive and working correctly.\n\nInstallation and configuration\n------------------------------\n\nInstall the package by using pip\n\n```bash\npip install django-anexia-monitoring\n```\n\nAdd the app the settings installed apps\n\n```python\nINSTALLED_APPS = [\n  ...\n  # Anexia monitor\n  'anexia_monitoring',\n  ...\n]\n```\n\nIn the projects settings.py add the access token configuration:\n\n```python\nANX_MONITORING_ACCESS_TOKEN = 'custom_access_token'\n```\n\nAdd URL configuration for REST endpoint\n\n```python\nfrom anexia_monitoring import urls as monitor_urls\n...\nurlpatterns = [\n  ...\n  # Anexia monitoring\n  url(r'^', include(monitor_urls)),\n  ...\n]\n```\n\nUsage\n-----\n\nThe plugin registers some custom REST endpoints which can be used for\nmonitoring. Make sure that the **ANX\\_MONITORING\\_ACCESS\\_TOKEN** is\ndefined, since this is used for authorization. The endpoints will return\na 401 HTTP\\_STATUS code if the token is not define or invalid, and a 200\nstatus code otherwise.\n\n### Version monitoring\n\nReturns all a list with platform and module information.\n\n**URL:** `/anxapi/v1/modules/?access_token=custom_access_token`\n\nResponse headers:\n\n```text\nStatus Code: 200 OK\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nAllow: GET\nContent-Type: application/json\n```\n\nResponse body:\n\n```json\n{\n   \"platform\":{\n      \"platform\":\"python\",\n      \"framework_installed_version\":\"1.11.1\",\n      \"framework_newest_version\":\"2.0a1\",\n      \"framework\":\"django\",\n      \"platform_version\":\"3.5.3 (default, Apr 26 2017, 20:12:19) \\n[GCC 4.9.2]\"\n   },\n   \"modules\":[\n      {\n         \"newest_version\":\"1.4.3\",\n         \"newest_version_licences\": [\n           \"MIT\"\n         ],\n         \"name\":\"appdirs\",\n         \"installed_version\":\"1.4.3\",\n         \"installed_version_licences\": [\n           \"MIT\"\n         ]\n      },\n      {\n         \"newest_version\":\"0.22.0\",\n         \"newest_version_licences\": [\n           \"MIT\"\n         ],\n         \"name\":\"asn1crypto\",\n         \"installed_version\":\"0.22.0\",\n         \"installed_version_licences\": [\n           \"MIT\"\n         ],\n      },\n      {\n         \"newest_version\":\"2.4.0\",\n         \"newest_version_licences\": [\n           \"BSD\"\n         ],\n         \"name\":\"Babel\",\n         \"installed_version\":\"2.4.0\",\n         \"installed_version_licences\": [\n           \"BSD\"\n         ],\n      }\n   ]\n}\n```\n\n### Live monitoring\n\nThis endpoint can be used to verify if the application is alive and\nworking correctly. It checks if the database connection is working and\nmakes a query for users. It allows to register custom checks by using\nthe dispatched **monitor\\_up\\_check** event.\n\n**URL:** `/anxapi/v1/up/?access_token=custom_access_token`\n\nResponse headers:\n\n```text\nStatus Code: 200 OK\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nAllow: GET\nContent-Type: text/plain\n```\n\nResponse body:\n\n```text\nOK\n```\n\n#### Custom live monitoring event\n\nThis check can be defined into the app even subscribers\n\n```python\nfrom django.dispatch import receiver\nfrom anexia_monitoring.events import monitor_up_check\n\n@receiver(monitor_up_check)\ndef list_of_complete_polls_handler(sender, **kwargs):\n    \"\"\"\n    My custom is alive check\n    \"\"\"\n    pass\n```\n\n#### Live monitoring settings\n\nThe User table is used in most Django applications and by default the `up` endpoint will make a test query to this\ntable. If you don't need it you can disable it using the `ANX_MONITORING_TEST_QUERY_USERS` setting.\n\nSimilar most Django applications also use a database connection which the module tests for connection by default.\nIf you don't need this you can deactivate it by providing the `ANX_MONITORING_TEST_DB_CONNECTIONS` setting.\n\n```python\nANX_MONITORING_TEST_QUERY_USERS = False\nANX_MONITORING_TEST_DB_CONNECTIONS = False\n```\n\nList of developers\n------------------\n\n-   Harald Nezbeda, Lead developer\n\nProject related external resources\n----------------------------------\n\n-   [Django documentation](https://docs.djangoproject.com/en/2.2/)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/anexia-it/anexia-monitoring-django", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-anexia-monitoring", "package_url": "https://pypi.org/project/django-anexia-monitoring/", "platform": "", "project_url": "https://pypi.org/project/django-anexia-monitoring/", "project_urls": {"Homepage": "https://github.com/anexia-it/anexia-monitoring-django"}, "release_url": "https://pypi.org/project/django-anexia-monitoring/1.2.0/", "requires_dist": ["updatable (<0.5,>=0.4.1)"], "requires_python": "", "summary": "A Django app used to monitor updates for Django and all installed python packages in the running environment. It can be also used to check if the website is alive and working correctly.", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Anexia Monitoring</h1>\n<p>A Django app used to monitor updates for Django and all installed python\npackages in the running environment. It can be also used to check if the\nwebsite is alive and working correctly.</p>\n<h2>Installation and configuration</h2>\n<p>Install the package by using pip</p>\n<pre>pip install django-anexia-monitoring\n</pre>\n<p>Add the app the settings installed apps</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n  <span class=\"o\">...</span>\n  <span class=\"c1\"># Anexia monitor</span>\n  <span class=\"s1\">'anexia_monitoring'</span><span class=\"p\">,</span>\n  <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<p>In the projects settings.py add the access token configuration:</p>\n<pre><span class=\"n\">ANX_MONITORING_ACCESS_TOKEN</span> <span class=\"o\">=</span> <span class=\"s1\">'custom_access_token'</span>\n</pre>\n<p>Add URL configuration for REST endpoint</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">anexia_monitoring</span> <span class=\"kn\">import</span> <span class=\"n\">urls</span> <span class=\"k\">as</span> <span class=\"n\">monitor_urls</span>\n<span class=\"o\">...</span>\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n  <span class=\"o\">...</span>\n  <span class=\"c1\"># Anexia monitoring</span>\n  <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"n\">monitor_urls</span><span class=\"p\">)),</span>\n  <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<h2>Usage</h2>\n<p>The plugin registers some custom REST endpoints which can be used for\nmonitoring. Make sure that the <strong>ANX_MONITORING_ACCESS_TOKEN</strong> is\ndefined, since this is used for authorization. The endpoints will return\na 401 HTTP_STATUS code if the token is not define or invalid, and a 200\nstatus code otherwise.</p>\n<h3>Version monitoring</h3>\n<p>Returns all a list with platform and module information.</p>\n<p><strong>URL:</strong> <code>/anxapi/v1/modules/?access_token=custom_access_token</code></p>\n<p>Response headers:</p>\n<pre>Status Code: 200 OK\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nAllow: GET\nContent-Type: application/json\n</pre>\n<p>Response body:</p>\n<pre><span class=\"p\">{</span>\n   <span class=\"nt\">\"platform\"</span><span class=\"p\">:{</span>\n      <span class=\"nt\">\"platform\"</span><span class=\"p\">:</span><span class=\"s2\">\"python\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"framework_installed_version\"</span><span class=\"p\">:</span><span class=\"s2\">\"1.11.1\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"framework_newest_version\"</span><span class=\"p\">:</span><span class=\"s2\">\"2.0a1\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"framework\"</span><span class=\"p\">:</span><span class=\"s2\">\"django\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"platform_version\"</span><span class=\"p\">:</span><span class=\"s2\">\"3.5.3 (default, Apr 26 2017, 20:12:19) \\n[GCC 4.9.2]\"</span>\n   <span class=\"p\">},</span>\n   <span class=\"nt\">\"modules\"</span><span class=\"p\">:[</span>\n      <span class=\"p\">{</span>\n         <span class=\"nt\">\"newest_version\"</span><span class=\"p\">:</span><span class=\"s2\">\"1.4.3\"</span><span class=\"p\">,</span>\n         <span class=\"nt\">\"newest_version_licences\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n           <span class=\"s2\">\"MIT\"</span>\n         <span class=\"p\">],</span>\n         <span class=\"nt\">\"name\"</span><span class=\"p\">:</span><span class=\"s2\">\"appdirs\"</span><span class=\"p\">,</span>\n         <span class=\"nt\">\"installed_version\"</span><span class=\"p\">:</span><span class=\"s2\">\"1.4.3\"</span><span class=\"p\">,</span>\n         <span class=\"nt\">\"installed_version_licences\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n           <span class=\"s2\">\"MIT\"</span>\n         <span class=\"p\">]</span>\n      <span class=\"p\">},</span>\n      <span class=\"p\">{</span>\n         <span class=\"nt\">\"newest_version\"</span><span class=\"p\">:</span><span class=\"s2\">\"0.22.0\"</span><span class=\"p\">,</span>\n         <span class=\"nt\">\"newest_version_licences\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n           <span class=\"s2\">\"MIT\"</span>\n         <span class=\"p\">],</span>\n         <span class=\"nt\">\"name\"</span><span class=\"p\">:</span><span class=\"s2\">\"asn1crypto\"</span><span class=\"p\">,</span>\n         <span class=\"nt\">\"installed_version\"</span><span class=\"p\">:</span><span class=\"s2\">\"0.22.0\"</span><span class=\"p\">,</span>\n         <span class=\"nt\">\"installed_version_licences\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n           <span class=\"s2\">\"MIT\"</span>\n         <span class=\"p\">],</span>\n      <span class=\"p\">},</span>\n      <span class=\"p\">{</span>\n         <span class=\"nt\">\"newest_version\"</span><span class=\"p\">:</span><span class=\"s2\">\"2.4.0\"</span><span class=\"p\">,</span>\n         <span class=\"nt\">\"newest_version_licences\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n           <span class=\"s2\">\"BSD\"</span>\n         <span class=\"p\">],</span>\n         <span class=\"nt\">\"name\"</span><span class=\"p\">:</span><span class=\"s2\">\"Babel\"</span><span class=\"p\">,</span>\n         <span class=\"nt\">\"installed_version\"</span><span class=\"p\">:</span><span class=\"s2\">\"2.4.0\"</span><span class=\"p\">,</span>\n         <span class=\"nt\">\"installed_version_licences\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n           <span class=\"s2\">\"BSD\"</span>\n         <span class=\"p\">],</span>\n      <span class=\"p\">}</span>\n   <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>Live monitoring</h3>\n<p>This endpoint can be used to verify if the application is alive and\nworking correctly. It checks if the database connection is working and\nmakes a query for users. It allows to register custom checks by using\nthe dispatched <strong>monitor_up_check</strong> event.</p>\n<p><strong>URL:</strong> <code>/anxapi/v1/up/?access_token=custom_access_token</code></p>\n<p>Response headers:</p>\n<pre>Status Code: 200 OK\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true\nAllow: GET\nContent-Type: text/plain\n</pre>\n<p>Response body:</p>\n<pre>OK\n</pre>\n<h4>Custom live monitoring event</h4>\n<p>This check can be defined into the app even subscribers</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.dispatch</span> <span class=\"kn\">import</span> <span class=\"n\">receiver</span>\n<span class=\"kn\">from</span> <span class=\"nn\">anexia_monitoring.events</span> <span class=\"kn\">import</span> <span class=\"n\">monitor_up_check</span>\n\n<span class=\"nd\">@receiver</span><span class=\"p\">(</span><span class=\"n\">monitor_up_check</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">list_of_complete_polls_handler</span><span class=\"p\">(</span><span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    My custom is alive check</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">pass</span>\n</pre>\n<h4>Live monitoring settings</h4>\n<p>The User table is used in most Django applications and by default the <code>up</code> endpoint will make a test query to this\ntable. If you don't need it you can disable it using the <code>ANX_MONITORING_TEST_QUERY_USERS</code> setting.</p>\n<p>Similar most Django applications also use a database connection which the module tests for connection by default.\nIf you don't need this you can deactivate it by providing the <code>ANX_MONITORING_TEST_DB_CONNECTIONS</code> setting.</p>\n<pre><span class=\"n\">ANX_MONITORING_TEST_QUERY_USERS</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"n\">ANX_MONITORING_TEST_DB_CONNECTIONS</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n</pre>\n<h2>List of developers</h2>\n<ul>\n<li>Harald Nezbeda, Lead developer</li>\n</ul>\n<h2>Project related external resources</h2>\n<ul>\n<li><a href=\"https://docs.djangoproject.com/en/2.2/\" rel=\"nofollow\">Django documentation</a></li>\n</ul>\n\n          </div>"}, "last_serial": 7180266, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4003b2115c719936c29f8f54b44bcaa3", "sha256": "a748e075624e4a8b515acb9ef98b13960a30ffd7c78609dd8311c2654559ab63"}, "downloads": -1, "filename": "django-anexia-monitoring-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4003b2115c719936c29f8f54b44bcaa3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5166, "upload_time": "2017-06-08T07:27:15", "upload_time_iso_8601": "2017-06-08T07:27:15.656172Z", "url": "https://files.pythonhosted.org/packages/e9/a8/c6ab151c8c2eb64913d6e19c43fe489332a9dd12532fddfa30b225d2d4ec/django-anexia-monitoring-0.1.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "38975a79ffcc3df360a4e4fdbb72ea70", "sha256": "7eb8dcf7968ddd71a2c479246a0c6aa0303a38ff780fd45d1a4fb328a9e7016a"}, "downloads": -1, "filename": "django-anexia-monitoring-1.0.0.tar.gz", "has_sig": false, "md5_digest": "38975a79ffcc3df360a4e4fdbb72ea70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5174, "upload_time": "2017-06-09T06:31:25", "upload_time_iso_8601": "2017-06-09T06:31:25.485310Z", "url": "https://files.pythonhosted.org/packages/66/fb/fa9591d06ba4dc1a8b15b3a12508d1f0fc3dfa52e2cb00f6a7cf50d455ad/django-anexia-monitoring-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "129b47aefe581486ab3163e44c66c537", "sha256": "a49a122906070b538a5acde94a4af622f0d2df6ea2c5209495b7fca558f3b884"}, "downloads": -1, "filename": "django_anexia_monitoring-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "129b47aefe581486ab3163e44c66c537", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8422, "upload_time": "2017-09-27T17:02:27", "upload_time_iso_8601": "2017-09-27T17:02:27.350813Z", "url": "https://files.pythonhosted.org/packages/7a/cf/190ba0b30fce1bc5efa5b789317595eeb83929df21238c4eb1c90b7955c4/django_anexia_monitoring-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5822cddcd1633b874cc546054da4af93", "sha256": "dde6731cdc095386234fe3f010c276267d22889e4bff7282c78b3dc60c7f6ded"}, "downloads": -1, "filename": "django-anexia-monitoring-1.1.0.tar.gz", "has_sig": false, "md5_digest": "5822cddcd1633b874cc546054da4af93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6061, "upload_time": "2017-09-27T17:02:29", "upload_time_iso_8601": "2017-09-27T17:02:29.393949Z", "url": "https://files.pythonhosted.org/packages/15/73/ee9ec718120e21293d39de688829dfa3deac3434716edb947770f2653394/django-anexia-monitoring-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "059ebe1396da44580f5432549f7c4f5f", "sha256": "685a5235d6ebc717cedd05ac85fefdf9e8cf86beefdc8ed334c945c64da8e9e1"}, "downloads": -1, "filename": "django_anexia_monitoring-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "059ebe1396da44580f5432549f7c4f5f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8378, "upload_time": "2018-03-20T10:30:27", "upload_time_iso_8601": "2018-03-20T10:30:27.149023Z", "url": "https://files.pythonhosted.org/packages/05/8c/03e62e80144095879b44af64bb1fb4dd0e80d0eaf283795b846158147de6/django_anexia_monitoring-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ddfc06f61a4f66c4675c69b601629d6b", "sha256": "2f3fdf51338fc85f0f2c888ea2c48cac25be65d36a140263c76a4d4a6e678180"}, "downloads": -1, "filename": "django-anexia-monitoring-1.1.1.tar.gz", "has_sig": false, "md5_digest": "ddfc06f61a4f66c4675c69b601629d6b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6003, "upload_time": "2018-03-20T10:30:28", "upload_time_iso_8601": "2018-03-20T10:30:28.748227Z", "url": "https://files.pythonhosted.org/packages/8d/f0/107341e11845ed9f56c74d7590cebd99363ea4c378ec76893ac9460cd941/django-anexia-monitoring-1.1.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "463d9df075326f76b84169fd6fb3d31d", "sha256": "d5f716fa1f483a68b99a13923b660d35a19428f92f6afb82f1370b3ce53e8add"}, "downloads": -1, "filename": "django_anexia_monitoring-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "463d9df075326f76b84169fd6fb3d31d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7036, "upload_time": "2020-05-06T13:21:49", "upload_time_iso_8601": "2020-05-06T13:21:49.750258Z", "url": "https://files.pythonhosted.org/packages/2a/f0/07cf95cff91f75b6a58226a28cf2c80f671fe84d4de67cc33766119f97b6/django_anexia_monitoring-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58dea85f5b01afdf9ff6380ee752e9de", "sha256": "44b4b1f84e5afd1fb0712c58cc2d8d444df61acde65373bf2991907d51febe50"}, "downloads": -1, "filename": "django-anexia-monitoring-1.2.0.tar.gz", "has_sig": false, "md5_digest": "58dea85f5b01afdf9ff6380ee752e9de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6269, "upload_time": "2020-05-06T13:21:51", "upload_time_iso_8601": "2020-05-06T13:21:51.274889Z", "url": "https://files.pythonhosted.org/packages/1b/07/5e075b69e9365684a2ff5f718e287947cc4990b09e3ddfebd5fc1be48e87/django-anexia-monitoring-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "463d9df075326f76b84169fd6fb3d31d", "sha256": "d5f716fa1f483a68b99a13923b660d35a19428f92f6afb82f1370b3ce53e8add"}, "downloads": -1, "filename": "django_anexia_monitoring-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "463d9df075326f76b84169fd6fb3d31d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7036, "upload_time": "2020-05-06T13:21:49", "upload_time_iso_8601": "2020-05-06T13:21:49.750258Z", "url": "https://files.pythonhosted.org/packages/2a/f0/07cf95cff91f75b6a58226a28cf2c80f671fe84d4de67cc33766119f97b6/django_anexia_monitoring-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58dea85f5b01afdf9ff6380ee752e9de", "sha256": "44b4b1f84e5afd1fb0712c58cc2d8d444df61acde65373bf2991907d51febe50"}, "downloads": -1, "filename": "django-anexia-monitoring-1.2.0.tar.gz", "has_sig": false, "md5_digest": "58dea85f5b01afdf9ff6380ee752e9de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6269, "upload_time": "2020-05-06T13:21:51", "upload_time_iso_8601": "2020-05-06T13:21:51.274889Z", "url": "https://files.pythonhosted.org/packages/1b/07/5e075b69e9365684a2ff5f718e287947cc4990b09e3ddfebd5fc1be48e87/django-anexia-monitoring-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:41 2020"}