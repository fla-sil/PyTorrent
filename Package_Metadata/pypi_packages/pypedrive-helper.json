{"info": {"author": "Kristan Eres", "author_email": "spectre.aloha@outlook.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "# Pipedrive REST API Helper\n\nThis is a helper library for Pipedrive's rest API. At the moment, the helper is capable of Add, Update, and Delete for Persons, Products, and Deals. \n\nThis library is available in pypi.org to install:\n\n```\npython -m pip install pypedrive-helper\n```\n\n## Getting Started\n\nInstall all libraries in requirements.txt\n\nTo install:\nThere is only one requirement for the moment, that is the `request` library.\n```\npip install -r requirements.txt\n```\n\nTo start using the class the after installing:\n```\nfrom pypedrivehelper.helper import PipedriveHelper\n```\n\n## Prerequisites\n\nYour Pipedrive API Token is required to use all the methods of this helper.\n\nProvide an API token when creating an insance of the `PipedriveHelper` class, in str format.\n\n\n## Sample Usage\n\nWhen creating an instance of a class, provide the API token of type str.\n```\npipedrive_api = PipedriveHelper(api_key)\n```\n\nWhen using functions. Provide the parameters of type dict. For details of function usage refer to the docstrings.\n```\ndata = {\n    \"title\": \"test title 2\"\n  }\n\npipedrive_api.add_deal(data)\n```\n\n## Doc Strings\nThe information below can also be found within the library as docstrings. Use `help()` to view them.\n\n```\nA class that simplifies the use of the Pipedrive REST API\n\n    ...\n    Constructors\n    ----------\n    api_token : str\n        your pipedrive api token.\n\n    Attributes\n    ----------\n    product_url : str\n        api url for all product methods\n    person_url : str\n        api url for all product methods\n    deal_url : str\n        api url for all deal methods\n    org_url : str\n        api url for all org methods\n    person_fields_url : str\n        api url for all personfield methods\n    product_fields_url : str\n        api url for all productfield methods\n    deal_fields_url : str\n        api url for all dealfield methods\n    org_fields_url : str\n        api url for all orgfield methods\n\n    Methods\n    -------\n    add_person(self, person_args: dict) returns dict\n        Add a single person to contacts in Piprdrive\n    add_product(self, product_args: dict) returns dict\n        Add a single person to products in Piprdrive\n    update_product(self, product_args: dict, product_id: str) returns dict\n        Updates an existing product in Pipedrive.\n    delete_product(self, product_id: str) returns dict\n        Deletes an existing product in Pipedrive.\n```\n\nAdd Person\n```\nAdds a single contact in Pipedrive. Returns REST result status and API rate limit info.\n\nParameters\n        ----------\n        person_args : dict\n            Values for each column for a single contact. Accepts default fields and custom fields.\n\n        Usage\n        ----------\n            data = {\n              \"name\": Luke, # where \"name\" is a sample of a default field\n              \"74f20ffc505c9708d4f0958333b0cc1df74a2ee9\": 92, # where \"74f20ffc505c970...\" is a sample of custom field\n            }\n```\n\nUpdate Person\n```\nUpdates an existing contact in Pipedrive. Returns REST result status and API rate limit info.\n\nParameters\n        ----------\n        person_args : dict\n            Values for each column for a single contact. Accepts default fields and custom fields.\n        product_id : str\n            Pipedrive product id\n\n        Usage\n        ----------\n            Only add the fields/customfields you want to update.\n\n              data = {\n                \"name\": John, # where \"name\" is a sample of a default field\n                \"74f20ffc505c9708d4f0958333b0cc1df74a2ee9\": 92, # where \"74f20ffc505c970...\" is a sample of a custom field\n                }\n              update_product(data, \"1\")\n```\n\nDelete Person\n```\nDeletes an existing contact in Pipedrive. Returns REST result status and API rate limit info.\n\nParameters\n        ----------\n        person_id : str\n            Pipedrive person id\n\n        Usage\n        ----------\n            delete_person(\"1\") # where \"1\" is the pipedrive person id\n```\n\nAdd Product\n```\nAdd a single row to products in Piprdrive. Returns API call status and API rate limit info.\n\nParameters\n        ----------\n        product_args : dict\n            Values for each column for a single contact. Accepts default fields and custom fields.\n\n        Usage\n        ----------\n            data = {\n              \"name\": \"SCPH-90006\", # where \"name\" is a sample of a default field\n              \"74f20ffc505c9708d4f0958333b0cc1df74a2ee9\": 92, # where \"74f20ffc505c970...\" is a sample of custom field\n              }\n            add_product(data)\n```\n\nUpdate Product\n```\nUpdates an existing product in Pipedrive.Returns REST result status and API rate limit info.\n\nParameters\n        ----------\n        product_args : dict\n            Values for each column for a single contact. Accepts default fields and custom fields.\n        product_id : str\n            Pipedrive product id\n\n        Usage\n        ----------\n            Only add the fields/customfields you want to update.\n\n              data = {\n                \"name\": \"SCPH-90006\", # where \"name\" is a sample of a default field\n                \"74f20ffc505c9708d4f0958333b0cc1df74a2ee9\": 92, # where \"74f20ffc505c970...\" is a sample of a custom field\n                }\n              update_product(data, \"1\")\n```\n\nDelete Product\n```\nDeletes an existing product in Pipedrive. Returns REST result status and API rate limit info.\n\nParameters\n        ----------\n        product_id : str\n            Pipedrive product id\n\n        Usage\n        ----------\n            delete_product(\"1\") # where \"1\" is the pipedrive product id\n```\n\nAdd Deal\n```\nCreates a single deal to Pipedrive. Returns REST result status and API rate limit info.\n\nParameters\n        ----------\n        deal_args : dict\n            Values for each column for a single deal. Accepts default fields and custom fields.\n\n        Usage\n        ----------\n            data = {\n              \"title\": John's Deal, # where \"name\" is a sample of a default field\n              \"74f20ffc505c9708d4f0958333b0cc1df74a2ee9\": 92, # where \"74f20ffc505c970...\" is a sample of custom field\n            }\n```\n\nUpdate Deal\n```\nUpdates an existing deal in Pipedrive.Returns REST result status and API rate limit info.\n\nParameters\n        ----------\n        deal_args : dict\n            Values for each column for a single deal. Accepts default fields and custom fields.\n\n        Usage\n        ----------\n            data = {\n              \"title\": John's Deal, # where \"name\" is a sample of a default field\n              \"74f20ffc505c9708d4f0958333b0cc1df74a2ee9\": 92, # where \"74f20ffc505c970...\" is a sample of custom field\n            }\n```\n\nDelete Deal\n```\nDeletes an existing deal in Pipedrive. Returns REST result status and API rate limit info.\n\nParameters\n        ----------\n        deal_id : str\n            Pipedrive product id\n\n        Usage\n        ----------\n            delete_deal(\"1\") # where \"1\" is the pipedrive product id\n```\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/your/project/tags). \n\n## Authors\n\n* **Kristan Eres** - [kristan-dev](https://github.com/kristan-dev/pipedrive_helper)\n\n## License\n\nThis project is licensed under the MIT License\n\nMIT License\n\nCopyright (c) 2020 Kristan Sangalang\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n## Acknowledgments\n\n* To pipedrive for the opportunity to create this module\n* To my mentor for inspiring me to be better\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kristan-dev/pipedrive_helper", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pypedrive-helper", "package_url": "https://pypi.org/project/pypedrive-helper/", "platform": "", "project_url": "https://pypi.org/project/pypedrive-helper/", "project_urls": {"Homepage": "https://github.com/kristan-dev/pipedrive_helper"}, "release_url": "https://pypi.org/project/pypedrive-helper/1.0.2/", "requires_dist": ["requests"], "requires_python": ">=3.6", "summary": "The Python Pipedrive API Helper", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Pipedrive REST API Helper</h1>\n<p>This is a helper library for Pipedrive's rest API. At the moment, the helper is capable of Add, Update, and Delete for Persons, Products, and Deals.</p>\n<p>This library is available in pypi.org to install:</p>\n<pre><code>python -m pip install pypedrive-helper\n</code></pre>\n<h2>Getting Started</h2>\n<p>Install all libraries in requirements.txt</p>\n<p>To install:\nThere is only one requirement for the moment, that is the <code>request</code> library.</p>\n<pre><code>pip install -r requirements.txt\n</code></pre>\n<p>To start using the class the after installing:</p>\n<pre><code>from pypedrivehelper.helper import PipedriveHelper\n</code></pre>\n<h2>Prerequisites</h2>\n<p>Your Pipedrive API Token is required to use all the methods of this helper.</p>\n<p>Provide an API token when creating an insance of the <code>PipedriveHelper</code> class, in str format.</p>\n<h2>Sample Usage</h2>\n<p>When creating an instance of a class, provide the API token of type str.</p>\n<pre><code>pipedrive_api = PipedriveHelper(api_key)\n</code></pre>\n<p>When using functions. Provide the parameters of type dict. For details of function usage refer to the docstrings.</p>\n<pre><code>data = {\n    \"title\": \"test title 2\"\n  }\n\npipedrive_api.add_deal(data)\n</code></pre>\n<h2>Doc Strings</h2>\n<p>The information below can also be found within the library as docstrings. Use <code>help()</code> to view them.</p>\n<pre><code>A class that simplifies the use of the Pipedrive REST API\n\n    ...\n    Constructors\n    ----------\n    api_token : str\n        your pipedrive api token.\n\n    Attributes\n    ----------\n    product_url : str\n        api url for all product methods\n    person_url : str\n        api url for all product methods\n    deal_url : str\n        api url for all deal methods\n    org_url : str\n        api url for all org methods\n    person_fields_url : str\n        api url for all personfield methods\n    product_fields_url : str\n        api url for all productfield methods\n    deal_fields_url : str\n        api url for all dealfield methods\n    org_fields_url : str\n        api url for all orgfield methods\n\n    Methods\n    -------\n    add_person(self, person_args: dict) returns dict\n        Add a single person to contacts in Piprdrive\n    add_product(self, product_args: dict) returns dict\n        Add a single person to products in Piprdrive\n    update_product(self, product_args: dict, product_id: str) returns dict\n        Updates an existing product in Pipedrive.\n    delete_product(self, product_id: str) returns dict\n        Deletes an existing product in Pipedrive.\n</code></pre>\n<p>Add Person</p>\n<pre><code>Adds a single contact in Pipedrive. Returns REST result status and API rate limit info.\n\nParameters\n        ----------\n        person_args : dict\n            Values for each column for a single contact. Accepts default fields and custom fields.\n\n        Usage\n        ----------\n            data = {\n              \"name\": Luke, # where \"name\" is a sample of a default field\n              \"74f20ffc505c9708d4f0958333b0cc1df74a2ee9\": 92, # where \"74f20ffc505c970...\" is a sample of custom field\n            }\n</code></pre>\n<p>Update Person</p>\n<pre><code>Updates an existing contact in Pipedrive. Returns REST result status and API rate limit info.\n\nParameters\n        ----------\n        person_args : dict\n            Values for each column for a single contact. Accepts default fields and custom fields.\n        product_id : str\n            Pipedrive product id\n\n        Usage\n        ----------\n            Only add the fields/customfields you want to update.\n\n              data = {\n                \"name\": John, # where \"name\" is a sample of a default field\n                \"74f20ffc505c9708d4f0958333b0cc1df74a2ee9\": 92, # where \"74f20ffc505c970...\" is a sample of a custom field\n                }\n              update_product(data, \"1\")\n</code></pre>\n<p>Delete Person</p>\n<pre><code>Deletes an existing contact in Pipedrive. Returns REST result status and API rate limit info.\n\nParameters\n        ----------\n        person_id : str\n            Pipedrive person id\n\n        Usage\n        ----------\n            delete_person(\"1\") # where \"1\" is the pipedrive person id\n</code></pre>\n<p>Add Product</p>\n<pre><code>Add a single row to products in Piprdrive. Returns API call status and API rate limit info.\n\nParameters\n        ----------\n        product_args : dict\n            Values for each column for a single contact. Accepts default fields and custom fields.\n\n        Usage\n        ----------\n            data = {\n              \"name\": \"SCPH-90006\", # where \"name\" is a sample of a default field\n              \"74f20ffc505c9708d4f0958333b0cc1df74a2ee9\": 92, # where \"74f20ffc505c970...\" is a sample of custom field\n              }\n            add_product(data)\n</code></pre>\n<p>Update Product</p>\n<pre><code>Updates an existing product in Pipedrive.Returns REST result status and API rate limit info.\n\nParameters\n        ----------\n        product_args : dict\n            Values for each column for a single contact. Accepts default fields and custom fields.\n        product_id : str\n            Pipedrive product id\n\n        Usage\n        ----------\n            Only add the fields/customfields you want to update.\n\n              data = {\n                \"name\": \"SCPH-90006\", # where \"name\" is a sample of a default field\n                \"74f20ffc505c9708d4f0958333b0cc1df74a2ee9\": 92, # where \"74f20ffc505c970...\" is a sample of a custom field\n                }\n              update_product(data, \"1\")\n</code></pre>\n<p>Delete Product</p>\n<pre><code>Deletes an existing product in Pipedrive. Returns REST result status and API rate limit info.\n\nParameters\n        ----------\n        product_id : str\n            Pipedrive product id\n\n        Usage\n        ----------\n            delete_product(\"1\") # where \"1\" is the pipedrive product id\n</code></pre>\n<p>Add Deal</p>\n<pre><code>Creates a single deal to Pipedrive. Returns REST result status and API rate limit info.\n\nParameters\n        ----------\n        deal_args : dict\n            Values for each column for a single deal. Accepts default fields and custom fields.\n\n        Usage\n        ----------\n            data = {\n              \"title\": John's Deal, # where \"name\" is a sample of a default field\n              \"74f20ffc505c9708d4f0958333b0cc1df74a2ee9\": 92, # where \"74f20ffc505c970...\" is a sample of custom field\n            }\n</code></pre>\n<p>Update Deal</p>\n<pre><code>Updates an existing deal in Pipedrive.Returns REST result status and API rate limit info.\n\nParameters\n        ----------\n        deal_args : dict\n            Values for each column for a single deal. Accepts default fields and custom fields.\n\n        Usage\n        ----------\n            data = {\n              \"title\": John's Deal, # where \"name\" is a sample of a default field\n              \"74f20ffc505c9708d4f0958333b0cc1df74a2ee9\": 92, # where \"74f20ffc505c970...\" is a sample of custom field\n            }\n</code></pre>\n<p>Delete Deal</p>\n<pre><code>Deletes an existing deal in Pipedrive. Returns REST result status and API rate limit info.\n\nParameters\n        ----------\n        deal_id : str\n            Pipedrive product id\n\n        Usage\n        ----------\n            delete_deal(\"1\") # where \"1\" is the pipedrive product id\n</code></pre>\n<h2>Versioning</h2>\n<p>We use <a href=\"http://semver.org/\" rel=\"nofollow\">SemVer</a> for versioning. For the versions available, see the <a href=\"https://github.com/your/project/tags\" rel=\"nofollow\">tags on this repository</a>.</p>\n<h2>Authors</h2>\n<ul>\n<li><strong>Kristan Eres</strong> - <a href=\"https://github.com/kristan-dev/pipedrive_helper\" rel=\"nofollow\">kristan-dev</a></li>\n</ul>\n<h2>License</h2>\n<p>This project is licensed under the MIT License</p>\n<p>MIT License</p>\n<p>Copyright (c) 2020 Kristan Sangalang</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</p>\n<h2>Acknowledgments</h2>\n<ul>\n<li>To pipedrive for the opportunity to create this module</li>\n<li>To my mentor for inspiring me to be better</li>\n</ul>\n\n          </div>"}, "last_serial": 6969501, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "c4a0a1c015a68007774bd4daf828cf13", "sha256": "0faf15f8ddc93ac0867fcd5aec7719a552e7a4c9aa5e4db8bf50b3b5d4b46051"}, "downloads": -1, "filename": "pypedrive_helper-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c4a0a1c015a68007774bd4daf828cf13", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6371, "upload_time": "2020-04-07T12:00:59", "upload_time_iso_8601": "2020-04-07T12:00:59.201667Z", "url": "https://files.pythonhosted.org/packages/9e/c0/f5961d1430ba7401bd9e3951b6ae5ca529724155deac5d7b142adb4ae1c7/pypedrive_helper-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b82c99b51bb3adec3a696b6684a879d", "sha256": "f25bb2a90137489017d337f896c80e8c0d43e58294f1e1817199184305cf69d2"}, "downloads": -1, "filename": "pypedrive-helper-1.0.0.tar.gz", "has_sig": false, "md5_digest": "1b82c99b51bb3adec3a696b6684a879d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5887, "upload_time": "2020-04-07T12:01:02", "upload_time_iso_8601": "2020-04-07T12:01:02.141916Z", "url": "https://files.pythonhosted.org/packages/73/b9/4bc69f432846213dd7cda57e3961dccb8f451fea5747cc535832b338b997/pypedrive-helper-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "f9b07f63d3c8779b9745b73f40a349a5", "sha256": "52d7f2c0fb4a578480c088af62429db3d6463388a1cb18bc1b5971d01d661e1b"}, "downloads": -1, "filename": "pypedrive_helper-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f9b07f63d3c8779b9745b73f40a349a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6420, "upload_time": "2020-04-07T13:14:27", "upload_time_iso_8601": "2020-04-07T13:14:27.563573Z", "url": "https://files.pythonhosted.org/packages/a5/6b/3bb8017ca1c6a6e10c38ab865df3c0185ff8a35792be94d4a8f78efc8162/pypedrive_helper-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74227d5434c7bb34e11ad2f63e48baa5", "sha256": "0d5164d36f2d7b35eb88524cade8c3b280e32a2bd089ec83be74a50cfb32484e"}, "downloads": -1, "filename": "pypedrive-helper-1.0.1.tar.gz", "has_sig": false, "md5_digest": "74227d5434c7bb34e11ad2f63e48baa5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5974, "upload_time": "2020-04-07T13:14:28", "upload_time_iso_8601": "2020-04-07T13:14:28.863502Z", "url": "https://files.pythonhosted.org/packages/f0/70/08d9f5b126898850b301da06daa5f07c190fc890df370b6b0c1f7188b8e2/pypedrive-helper-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "f994cb9274ba394d975f5df9eaf28a13", "sha256": "98dc03cb0fcbf73c3a56674f689e2fa1f3e3d8338e44ac1b41c096b5cc5af524"}, "downloads": -1, "filename": "pypedrive_helper-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f994cb9274ba394d975f5df9eaf28a13", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6417, "upload_time": "2020-04-07T13:24:23", "upload_time_iso_8601": "2020-04-07T13:24:23.500359Z", "url": "https://files.pythonhosted.org/packages/63/5f/842e5e3df4c599f9c6f26be2feff71ce97c8a982fbc98dccb82e378808c1/pypedrive_helper-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b02da86299f67f882df0d0f5e571b629", "sha256": "caa4e8a49694cafb250d58f4c98d0ac8f0c844d98dabf020823aa8c1680aefde"}, "downloads": -1, "filename": "pypedrive-helper-1.0.2.tar.gz", "has_sig": false, "md5_digest": "b02da86299f67f882df0d0f5e571b629", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5239, "upload_time": "2020-04-07T13:24:24", "upload_time_iso_8601": "2020-04-07T13:24:24.674250Z", "url": "https://files.pythonhosted.org/packages/82/0e/9e497b20b4bf6333144e06d1b75a331d04794e2a9fa73404d0e30d70c096/pypedrive-helper-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f994cb9274ba394d975f5df9eaf28a13", "sha256": "98dc03cb0fcbf73c3a56674f689e2fa1f3e3d8338e44ac1b41c096b5cc5af524"}, "downloads": -1, "filename": "pypedrive_helper-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f994cb9274ba394d975f5df9eaf28a13", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6417, "upload_time": "2020-04-07T13:24:23", "upload_time_iso_8601": "2020-04-07T13:24:23.500359Z", "url": "https://files.pythonhosted.org/packages/63/5f/842e5e3df4c599f9c6f26be2feff71ce97c8a982fbc98dccb82e378808c1/pypedrive_helper-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b02da86299f67f882df0d0f5e571b629", "sha256": "caa4e8a49694cafb250d58f4c98d0ac8f0c844d98dabf020823aa8c1680aefde"}, "downloads": -1, "filename": "pypedrive-helper-1.0.2.tar.gz", "has_sig": false, "md5_digest": "b02da86299f67f882df0d0f5e571b629", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5239, "upload_time": "2020-04-07T13:24:24", "upload_time_iso_8601": "2020-04-07T13:24:24.674250Z", "url": "https://files.pythonhosted.org/packages/82/0e/9e497b20b4bf6333144e06d1b75a331d04794e2a9fa73404d0e30d70c096/pypedrive-helper-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:46 2020"}