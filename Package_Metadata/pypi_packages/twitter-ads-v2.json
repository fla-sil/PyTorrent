{"info": {"author": "Shohei Maeda", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Internet", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "[![Build Status](https://travis-ci.org/smaeda-ks/twitter-python-ads-sdk-v2.svg?branch=master)](https://travis-ci.org/smaeda-ks/twitter-python-ads-sdk-v2)\n[![PyPI](https://img.shields.io/pypi/v/twitter-ads-v2.svg)](https://pypi.python.org/pypi/twitter-ads-v2)\n[![PyPI version](https://img.shields.io/pypi/pyversions/twitter-ads-v2.svg)](https://pypi.python.org/pypi/twitter-ads-v2)\n\n# Getting Started\n\n## Installation\n\n```sh\n# install the latest release\npip install twitter-ads-v2\n```\n\n## Quick Start\n\n```py\nimport twitter_ads_v2\n\nCONSUMER_KEY = 'your consumer key'\nCONSUMER_SECRET = 'your consumer secret'\nACCESS_TOKEN = 'access token'\nACCESS_TOKEN_SECRET = 'access token secret'\nACCOUNT_ID = 'account id'\n\nclient = twitter_ads_v2.Client(\n    ACCOUNT_ID,\n    CONSUMER_KEY,\n    CONSUMER_SECRET,\n    ACCESS_TOKEN,\n    ACCESS_TOKEN_SECRET,\n    options={\n        'handle_rate_limit': True\n    }\n)\n\n# index\ndata = client.campaigns('all')\nprint(data.headers)\nprint(data.body)\n\n# show\ndata = client.campaigns('load', id='campaign_id')\nprint(data.headers)\nprint(data.body)\n\ntweets = client.promoted_tweets('all')\n# iterate over until the cursor (\"next_cursor\") is exhausted\nfor i in tweets:\n    print(i.headers)\n    print(i.body)\n```\n\n### Types of `endpoint_type`\n\nTo provide a consistent interface, the first parameter of each API method is always `endpoint_type`:\n\n```py\ndata = client.campaigns('load', id='campaign_id')\n```\n\nin the above example, `load` is the `endpoint_type` of this call. The terms of each `endpoint_type` are described below.\n\n|`endpoint_type`|description|HTTP method|\n|---|---|---|\n| `all` | Retrieve _**all**_ or _**some**_ of the entities\u2019 details depends on the request parameters from an index endpoint (i.e., most index endpoints have a parameter that can scope the results). | GET |\n| `load` | Retrieve a _**specific**_ entity details from a show endpoint (i.e., most show endpoints require an entity id to retrieve as part of resource URI). | GET |\n| `create` | Create a new entity. | POST |\n| `update` | Update a specific entity. | PUT |\n| `delete` | Delete a specific entity. | DELETE |\n| `batch` | Create/Update/Delete entities depends on the POST body data (normally a JSON object). | POST |\n\n### Request Parameters\n\nAll request parameters except `endpoint_type` as mentioned above should be passed as keyword arguments.\n\n### Rate-limit handling and request retry\n\n```py\nclient = twitter_ads_v2.Client(\n    ACCOUNT_ID,\n    CONSUMER_KEY,\n    CONSUMER_SECRET,\n    ACCESS_TOKEN,\n    ACCESS_TOKEN_SECRET,\n    options={\n        'handle_rate_limit': True,\n        'retry_max': 3,\n        'retry_delay': 5000,\n        'retry_on_status': [404, 500, 503]\n    })\n```\n\n|parameter|default|description|\n|---|:---:|---|\n|`handle_rate_limit`|`False` (boolean)|Set `True` will check the rate-limit response header and sleep if the request reached the limit (429).|\n|`retry_max`|`0` (int)|The number of times you want to retry when response code is found in `retry_on_status`.|\n|`retry_delay`|`1500` (int)|The number of **milliseconds** you want to sleep before retry.|\n|`retry_on_status`|`[500, 503]` (list)|The response codes you want to retry on. You can only set >= 400 status codes.|\n\n## Compatibility & Versioning\n\nThis project is designed to work with Python 3.5 or greater. While it may work on other versions of Python, below are the platform and runtime versions we officially support and regularly test against.\n\n| Platform | Versions |\n| -- | -- |\n| CPython | 3.5, 3.6, 3.7 |\n| PyPy | 7.x |\n\nAll releases adhere to strict semantic versioning. For Example, major.minor.patch-pre (aka. stick.carrot.oops-peek).\n\n## Development\n\nIf you\u2019d like to contribute to the project or try an unreleased development version of this project locally, you can do so quite easily by following the examples below.\n\n```sh\n# clone the repository\ngit clone git@github.com:smaeda-ks/twitter-python-ads-sdk-v2.git\ncd twitter-python-ads-sdk-v2\n\n# installing a local unsigned release\npip install -e .\n```\n\n### Tests\n\n```sh\n$ python setup.py flake8 && python setup.py test\n```\n\n### Documentation\n\nIf you\u2019d like to contribute to the project's documentation, you need to setup Sphinx and build pages by the following steps.\n\n```sh\n# install dependencies\n$ pip install -e .[doc]\n\n# build pages\n$ cd sphinx/\n$ make clean && make html\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/smaeda-ks/twitter-python-ads-sdk-v2/tarball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/smaeda-ks/twitter-python-ads-sdk-v2", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "twitter-ads-v2", "package_url": "https://pypi.org/project/twitter-ads-v2/", "platform": "any", "project_url": "https://pypi.org/project/twitter-ads-v2/", "project_urls": {"Download": "https://github.com/smaeda-ks/twitter-python-ads-sdk-v2/tarball/master", "Homepage": "https://github.com/smaeda-ks/twitter-python-ads-sdk-v2"}, "release_url": "https://pypi.org/project/twitter-ads-v2/0.1.1/", "requires_dist": ["python-dateutil", "oauthlib (==3.1.0)", "requests", "sphinx (<3.0.0,>=2.0.0) ; extra == 'doc'", "sphinx-rtd-theme ; extra == 'doc'", "m2r ; extra == 'doc'"], "requires_python": "", "summary": "Twitter Ads API SDK for Python.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/smaeda-ks/twitter-python-ads-sdk-v2\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/57916eb43d7f08efcb6f9dc1487a7f4b2813df0d/68747470733a2f2f7472617669732d63692e6f72672f736d616564612d6b732f747769747465722d707974686f6e2d6164732d73646b2d76322e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/twitter-ads-v2\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b0c2278660d2081f7cc4a9c859a8fc396fc92318/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f747769747465722d6164732d76322e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/twitter-ads-v2\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/71a48023d07bf68e5e710370299c9fee31219e8b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f747769747465722d6164732d76322e737667\"></a></p>\n<h1>Getting Started</h1>\n<h2>Installation</h2>\n<pre><span class=\"c1\"># install the latest release</span>\npip install twitter-ads-v2\n</pre>\n<h2>Quick Start</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">twitter_ads_v2</span>\n\n<span class=\"n\">CONSUMER_KEY</span> <span class=\"o\">=</span> <span class=\"s1\">'your consumer key'</span>\n<span class=\"n\">CONSUMER_SECRET</span> <span class=\"o\">=</span> <span class=\"s1\">'your consumer secret'</span>\n<span class=\"n\">ACCESS_TOKEN</span> <span class=\"o\">=</span> <span class=\"s1\">'access token'</span>\n<span class=\"n\">ACCESS_TOKEN_SECRET</span> <span class=\"o\">=</span> <span class=\"s1\">'access token secret'</span>\n<span class=\"n\">ACCOUNT_ID</span> <span class=\"o\">=</span> <span class=\"s1\">'account id'</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">twitter_ads_v2</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span>\n    <span class=\"n\">ACCOUNT_ID</span><span class=\"p\">,</span>\n    <span class=\"n\">CONSUMER_KEY</span><span class=\"p\">,</span>\n    <span class=\"n\">CONSUMER_SECRET</span><span class=\"p\">,</span>\n    <span class=\"n\">ACCESS_TOKEN</span><span class=\"p\">,</span>\n    <span class=\"n\">ACCESS_TOKEN_SECRET</span><span class=\"p\">,</span>\n    <span class=\"n\">options</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">'handle_rate_limit'</span><span class=\"p\">:</span> <span class=\"kc\">True</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># index</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">campaigns</span><span class=\"p\">(</span><span class=\"s1\">'all'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># show</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">campaigns</span><span class=\"p\">(</span><span class=\"s1\">'load'</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'campaign_id'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">)</span>\n\n<span class=\"n\">tweets</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">promoted_tweets</span><span class=\"p\">(</span><span class=\"s1\">'all'</span><span class=\"p\">)</span>\n<span class=\"c1\"># iterate over until the cursor (\"next_cursor\") is exhausted</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">tweets</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">)</span>\n</pre>\n<h3>Types of <code>endpoint_type</code></h3>\n<p>To provide a consistent interface, the first parameter of each API method is always <code>endpoint_type</code>:</p>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">campaigns</span><span class=\"p\">(</span><span class=\"s1\">'load'</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'campaign_id'</span><span class=\"p\">)</span>\n</pre>\n<p>in the above example, <code>load</code> is the <code>endpoint_type</code> of this call. The terms of each <code>endpoint_type</code> are described below.</p>\n<table>\n<thead>\n<tr>\n<th><code>endpoint_type</code></th>\n<th>description</th>\n<th>HTTP method</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>all</code></td>\n<td>Retrieve <em><strong>all</strong></em> or <em><strong>some</strong></em> of the entities\u2019 details depends on the request parameters from an index endpoint (i.e., most index endpoints have a parameter that can scope the results).</td>\n<td>GET</td>\n</tr>\n<tr>\n<td><code>load</code></td>\n<td>Retrieve a <em><strong>specific</strong></em> entity details from a show endpoint (i.e., most show endpoints require an entity id to retrieve as part of resource URI).</td>\n<td>GET</td>\n</tr>\n<tr>\n<td><code>create</code></td>\n<td>Create a new entity.</td>\n<td>POST</td>\n</tr>\n<tr>\n<td><code>update</code></td>\n<td>Update a specific entity.</td>\n<td>PUT</td>\n</tr>\n<tr>\n<td><code>delete</code></td>\n<td>Delete a specific entity.</td>\n<td>DELETE</td>\n</tr>\n<tr>\n<td><code>batch</code></td>\n<td>Create/Update/Delete entities depends on the POST body data (normally a JSON object).</td>\n<td>POST</td>\n</tr></tbody></table>\n<h3>Request Parameters</h3>\n<p>All request parameters except <code>endpoint_type</code> as mentioned above should be passed as keyword arguments.</p>\n<h3>Rate-limit handling and request retry</h3>\n<pre><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">twitter_ads_v2</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span>\n    <span class=\"n\">ACCOUNT_ID</span><span class=\"p\">,</span>\n    <span class=\"n\">CONSUMER_KEY</span><span class=\"p\">,</span>\n    <span class=\"n\">CONSUMER_SECRET</span><span class=\"p\">,</span>\n    <span class=\"n\">ACCESS_TOKEN</span><span class=\"p\">,</span>\n    <span class=\"n\">ACCESS_TOKEN_SECRET</span><span class=\"p\">,</span>\n    <span class=\"n\">options</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">'handle_rate_limit'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"s1\">'retry_max'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n        <span class=\"s1\">'retry_delay'</span><span class=\"p\">:</span> <span class=\"mi\">5000</span><span class=\"p\">,</span>\n        <span class=\"s1\">'retry_on_status'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">404</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mi\">503</span><span class=\"p\">]</span>\n    <span class=\"p\">})</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th>parameter</th>\n<th align=\"center\">default</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>handle_rate_limit</code></td>\n<td align=\"center\"><code>False</code> (boolean)</td>\n<td>Set <code>True</code> will check the rate-limit response header and sleep if the request reached the limit (429).</td>\n</tr>\n<tr>\n<td><code>retry_max</code></td>\n<td align=\"center\"><code>0</code> (int)</td>\n<td>The number of times you want to retry when response code is found in <code>retry_on_status</code>.</td>\n</tr>\n<tr>\n<td><code>retry_delay</code></td>\n<td align=\"center\"><code>1500</code> (int)</td>\n<td>The number of <strong>milliseconds</strong> you want to sleep before retry.</td>\n</tr>\n<tr>\n<td><code>retry_on_status</code></td>\n<td align=\"center\"><code>[500, 503]</code> (list)</td>\n<td>The response codes you want to retry on. You can only set &gt;= 400 status codes.</td>\n</tr></tbody></table>\n<h2>Compatibility &amp; Versioning</h2>\n<p>This project is designed to work with Python 3.5 or greater. While it may work on other versions of Python, below are the platform and runtime versions we officially support and regularly test against.</p>\n<table>\n<thead>\n<tr>\n<th>Platform</th>\n<th>Versions</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CPython</td>\n<td>3.5, 3.6, 3.7</td>\n</tr>\n<tr>\n<td>PyPy</td>\n<td>7.x</td>\n</tr></tbody></table>\n<p>All releases adhere to strict semantic versioning. For Example, major.minor.patch-pre (aka. stick.carrot.oops-peek).</p>\n<h2>Development</h2>\n<p>If you\u2019d like to contribute to the project or try an unreleased development version of this project locally, you can do so quite easily by following the examples below.</p>\n<pre><span class=\"c1\"># clone the repository</span>\ngit clone git@github.com:smaeda-ks/twitter-python-ads-sdk-v2.git\n<span class=\"nb\">cd</span> twitter-python-ads-sdk-v2\n\n<span class=\"c1\"># installing a local unsigned release</span>\npip install -e .\n</pre>\n<h3>Tests</h3>\n<pre>$ python setup.py flake8 <span class=\"o\">&amp;&amp;</span> python setup.py <span class=\"nb\">test</span>\n</pre>\n<h3>Documentation</h3>\n<p>If you\u2019d like to contribute to the project's documentation, you need to setup Sphinx and build pages by the following steps.</p>\n<pre><span class=\"c1\"># install dependencies</span>\n$ pip install -e .<span class=\"o\">[</span>doc<span class=\"o\">]</span>\n\n<span class=\"c1\"># build pages</span>\n$ <span class=\"nb\">cd</span> sphinx/\n$ make clean <span class=\"o\">&amp;&amp;</span> make html\n</pre>\n\n          </div>"}, "last_serial": 6435671, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "103e1e434d7a130a2d752142cb8f0905", "sha256": "0a35cc3f30065810053ff1331222f8de5f393cc81606c055ce77f70d19d399df"}, "downloads": -1, "filename": "twitter_ads_v2-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "103e1e434d7a130a2d752142cb8f0905", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17724, "upload_time": "2020-01-11T09:03:38", "upload_time_iso_8601": "2020-01-11T09:03:38.991516Z", "url": "https://files.pythonhosted.org/packages/a2/f0/77b3553cdc25e94acb35478bb871e98597dd566da0d1e8cdb59521fa361e/twitter_ads_v2-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8cfb96ddd83eca9cd67bf5a47776e4e8", "sha256": "fe6f42081154a03392c56c0720e721ffcad150ef03640db3351fdaddbe620215"}, "downloads": -1, "filename": "twitter-ads-v2-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8cfb96ddd83eca9cd67bf5a47776e4e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17240, "upload_time": "2020-01-11T09:03:41", "upload_time_iso_8601": "2020-01-11T09:03:41.142226Z", "url": "https://files.pythonhosted.org/packages/bf/78/f029241a6671f8e83df337c787b5f2c7827e93bda97b8ae567657ff1efd4/twitter-ads-v2-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "b9bb2cd20053f6e1b81108b281d67d7a", "sha256": "0e334d8626c9453ab7e833c3d6fa0762a088b975bcd2df4085ac5dd5555d9eec"}, "downloads": -1, "filename": "twitter_ads_v2-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b9bb2cd20053f6e1b81108b281d67d7a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17829, "upload_time": "2020-01-11T10:10:50", "upload_time_iso_8601": "2020-01-11T10:10:50.588416Z", "url": "https://files.pythonhosted.org/packages/7b/7d/a4957af0b90373f619956cd8e3c95956dfa8b6e7a9b800e2bdd33d553cba/twitter_ads_v2-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1bddc515c23d32252958bc14ff0e9842", "sha256": "1c5b5a76693b5b6dfb73229b88f1984558fc6621356839658d8ace5cbe1eddc1"}, "downloads": -1, "filename": "twitter-ads-v2-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1bddc515c23d32252958bc14ff0e9842", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17456, "upload_time": "2020-01-11T10:10:51", "upload_time_iso_8601": "2020-01-11T10:10:51.953060Z", "url": "https://files.pythonhosted.org/packages/63/10/4d2ec731a4fe02a9d375e9e777221d70d6d09c8b3a114287fdcea881c16c/twitter-ads-v2-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b9bb2cd20053f6e1b81108b281d67d7a", "sha256": "0e334d8626c9453ab7e833c3d6fa0762a088b975bcd2df4085ac5dd5555d9eec"}, "downloads": -1, "filename": "twitter_ads_v2-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b9bb2cd20053f6e1b81108b281d67d7a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17829, "upload_time": "2020-01-11T10:10:50", "upload_time_iso_8601": "2020-01-11T10:10:50.588416Z", "url": "https://files.pythonhosted.org/packages/7b/7d/a4957af0b90373f619956cd8e3c95956dfa8b6e7a9b800e2bdd33d553cba/twitter_ads_v2-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1bddc515c23d32252958bc14ff0e9842", "sha256": "1c5b5a76693b5b6dfb73229b88f1984558fc6621356839658d8ace5cbe1eddc1"}, "downloads": -1, "filename": "twitter-ads-v2-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1bddc515c23d32252958bc14ff0e9842", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17456, "upload_time": "2020-01-11T10:10:51", "upload_time_iso_8601": "2020-01-11T10:10:51.953060Z", "url": "https://files.pythonhosted.org/packages/63/10/4d2ec731a4fe02a9d375e9e777221d70d6d09c8b3a114287fdcea881c16c/twitter-ads-v2-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:43:45 2020"}