{"info": {"author": "Bhumil Haria", "author_email": "bhumilharia@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "dnif-logger\n===========\n\nThis is the official Python DNIF client library. This allows you to\ndirectly write log statements into your application code and integrate\nit with DNIF Adapters.\n\nInstallation\n------------\n\nYou can download the library using pip, as:\n\n.. code:: sh\n\n    $ pip install dnif\n\nGetting Started\n---------------\n\nThe DNIF library currently supports two ingestion mechanisms: 1. TCP\nprotocol uploads using the HTTP(S) endpoint 2. Uploads using the UDP\nprotocol\n\nTypical usages for both of these are given below.\n\nTCP\n~~~\n\n.. code:: python\n\n    from dnif.consumer import AsyncHttpConsumer\n    from dnif.logger import DnifLogger\n    dlog = DnifLogger(AsyncHttpConsumer('http://TARGET_IP:PORT/json/receive'))\n    dlog.log({'key': 'value'})\n\nThe AsyncHttpConsumer is thread-safe, so you can use the same instance\nacross threads (recommended).\n\nUDP\n~~~\n\n.. code:: python\n\n    from dnif.consumer import AsyncUDPConsumer\n    from dnif.logger import DnifLogger\n    dlog = DnifLogger(AsyncUDPConsumer('UDP_IP', UDP_PORT))\n    dlog.log('Hello World')\n\nThe AsyncUDPConsumer is thread-safe, so you can use the same instance\nacross threads (recommended).", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dnif/dnif-logger", "keywords": "dnif logging analytics", "license": "Apache", "maintainer": null, "maintainer_email": null, "name": "dnif", "package_url": "https://pypi.org/project/dnif/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/dnif/", "project_urls": {"Homepage": "https://github.com/dnif/dnif-logger"}, "release_url": "https://pypi.org/project/dnif/1.0.2/", "requires_dist": null, "requires_python": null, "summary": "DNIF Logging Client Library", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is the official Python DNIF client library. This allows you to\ndirectly write log statements into your application code and integrate\nit with DNIF Adapters.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can download the library using pip, as:</p>\n<pre>$ pip install dnif\n</pre>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<p>The DNIF library currently supports two ingestion mechanisms: 1. TCP\nprotocol uploads using the HTTP(S) endpoint 2. Uploads using the UDP\nprotocol</p>\n<p>Typical usages for both of these are given below.</p>\n<div id=\"tcp\">\n<h3>TCP</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dnif.consumer</span> <span class=\"kn\">import</span> <span class=\"n\">AsyncHttpConsumer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dnif.logger</span> <span class=\"kn\">import</span> <span class=\"n\">DnifLogger</span>\n<span class=\"n\">dlog</span> <span class=\"o\">=</span> <span class=\"n\">DnifLogger</span><span class=\"p\">(</span><span class=\"n\">AsyncHttpConsumer</span><span class=\"p\">(</span><span class=\"s1\">'http://TARGET_IP:PORT/json/receive'</span><span class=\"p\">))</span>\n<span class=\"n\">dlog</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">({</span><span class=\"s1\">'key'</span><span class=\"p\">:</span> <span class=\"s1\">'value'</span><span class=\"p\">})</span>\n</pre>\n<p>The AsyncHttpConsumer is thread-safe, so you can use the same instance\nacross threads (recommended).</p>\n</div>\n<div id=\"udp\">\n<h3>UDP</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dnif.consumer</span> <span class=\"kn\">import</span> <span class=\"n\">AsyncUDPConsumer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dnif.logger</span> <span class=\"kn\">import</span> <span class=\"n\">DnifLogger</span>\n<span class=\"n\">dlog</span> <span class=\"o\">=</span> <span class=\"n\">DnifLogger</span><span class=\"p\">(</span><span class=\"n\">AsyncUDPConsumer</span><span class=\"p\">(</span><span class=\"s1\">'UDP_IP'</span><span class=\"p\">,</span> <span class=\"n\">UDP_PORT</span><span class=\"p\">))</span>\n<span class=\"n\">dlog</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"s1\">'Hello World'</span><span class=\"p\">)</span>\n</pre>\n<p>The AsyncUDPConsumer is thread-safe, so you can use the same instance\nacross threads (recommended).</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2752234, "releases": {"1.0.2": [{"comment_text": "", "digests": {"md5": "0e48fa30f03d95aca56917669f029e56", "sha256": "b55d3aa9d7921e3c698f3fd093e1d337dc13182a605b0c62804829c889a5237f"}, "downloads": -1, "filename": "dnif-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0e48fa30f03d95aca56917669f029e56", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6062, "upload_time": "2017-04-04T14:56:53", "upload_time_iso_8601": "2017-04-04T14:56:53.570523Z", "url": "https://files.pythonhosted.org/packages/c9/bb/355a3c6fb0e463563b87d57cabbde8fa63086eff1ece05af53f0d3bae344/dnif-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b80db2fa3e04cf06de21e118055f6734", "sha256": "45cd0d6ee31a88cd65b156301220e01496e32e4beb7627d8829ae18b9228260b"}, "downloads": -1, "filename": "dnif-1.0.2.tar.gz", "has_sig": false, "md5_digest": "b80db2fa3e04cf06de21e118055f6734", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4549, "upload_time": "2017-04-04T14:56:55", "upload_time_iso_8601": "2017-04-04T14:56:55.827543Z", "url": "https://files.pythonhosted.org/packages/34/01/358d7d6c560f998179432291312f66bd3078cbf86e55e98ce451006d55e2/dnif-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0e48fa30f03d95aca56917669f029e56", "sha256": "b55d3aa9d7921e3c698f3fd093e1d337dc13182a605b0c62804829c889a5237f"}, "downloads": -1, "filename": "dnif-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0e48fa30f03d95aca56917669f029e56", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6062, "upload_time": "2017-04-04T14:56:53", "upload_time_iso_8601": "2017-04-04T14:56:53.570523Z", "url": "https://files.pythonhosted.org/packages/c9/bb/355a3c6fb0e463563b87d57cabbde8fa63086eff1ece05af53f0d3bae344/dnif-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b80db2fa3e04cf06de21e118055f6734", "sha256": "45cd0d6ee31a88cd65b156301220e01496e32e4beb7627d8829ae18b9228260b"}, "downloads": -1, "filename": "dnif-1.0.2.tar.gz", "has_sig": false, "md5_digest": "b80db2fa3e04cf06de21e118055f6734", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4549, "upload_time": "2017-04-04T14:56:55", "upload_time_iso_8601": "2017-04-04T14:56:55.827543Z", "url": "https://files.pythonhosted.org/packages/34/01/358d7d6c560f998179432291312f66bd3078cbf86e55e98ce451006d55e2/dnif-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:08 2020"}