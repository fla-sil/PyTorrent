{"info": {"author": "Didip Kerabat", "author_email": "didipk@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha"], "description": "# What is BayesOnRedis?\n\nBayesian classifier on top of Redis\n\n## Why on Redis?\n\n[Redis](http://code.google.com/p/redis) is a persistent in-memory database with supports for various data structures such as lists, sets, and ordered sets.\nAll this data types can be manipulated with atomic operations to push/pop elements, add/remove elements, perform server side union, intersection, difference between sets, and so forth.\n\nBecause of Redis properties:\n\n * It is extremely easy to implement simple algorithm such as bayesian filter.\n\n * The persistence of Redis means that the Bayesian implementation can be used in real production environment.\n\n * Even though I don't particularly care about performance at the moment. Redis benchmarks give me confidence that the implementation can scale to relatively large training data.\n\n## How to install? (Ruby version)\n\n    gem install bayes_on_redis\n\n## Getting started\n\n    # Create instance of BayesOnRedis and pass your Redis information.\n    # Of course, use real sentences for much better accuracy.\n    # Unless if you want to train spam related things.\n    bor = BayesOnRedis.new(:redis_host => '127.0.0.1', :redis_port => 6379, :redis_db => 5)\n\n    # Teach it\n    bor.train \"good\", \"sweet awesome kick-ass cool pretty smart\"\n    bor.train \"bad\", \"sucks lame boo death bankrupt loser sad\"\n\n    # Then ask it to classify text.\n    bor.classify(\"awesome kick-ass ninja can still be lame.\")\n\n## for Pythonistas\n\nBayesOnRedis is also available in Python. With the same API.\n\n## Contributing\n\n[Fork http://github.com/didip/bayes_on_redis](http://github.com/didip/bayes_on_redis) and send pull requests.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/didip/bayes_on_redis", "keywords": "bayesian filter redis", "license": "haven't decided", "maintainer": null, "maintainer_email": null, "name": "bayes_on_redis", "package_url": "https://pypi.org/project/bayes_on_redis/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/bayes_on_redis/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/didip/bayes_on_redis"}, "release_url": "https://pypi.org/project/bayes_on_redis/0.1.9/", "requires_dist": null, "requires_python": null, "summary": "bayes_on_redis library provides bayesian classification on a given text similar to many SPAM/HAM filtering technique.", "version": "0.1.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># What is BayesOnRedis?</p>\n<p>Bayesian classifier on top of Redis</p>\n<p>## Why on Redis?</p>\n<p>[Redis](<a href=\"http://code.google.com/p/redis\" rel=\"nofollow\">http://code.google.com/p/redis</a>) is a persistent in-memory database with supports for various data structures such as lists, sets, and ordered sets.\nAll this data types can be manipulated with atomic operations to push/pop elements, add/remove elements, perform server side union, intersection, difference between sets, and so forth.</p>\n<p>Because of Redis properties:</p>\n<blockquote>\n<ul>\n<li>It is extremely easy to implement simple algorithm such as bayesian filter.</li>\n<li>The persistence of Redis means that the Bayesian implementation can be used in real production environment.</li>\n<li>Even though I don\u2019t particularly care about performance at the moment. Redis benchmarks give me confidence that the implementation can scale to relatively large training data.</li>\n</ul>\n</blockquote>\n<p>## How to install? (Ruby version)</p>\n<blockquote>\ngem install bayes_on_redis</blockquote>\n<p>## Getting started</p>\n<blockquote>\n<p># Create instance of BayesOnRedis and pass your Redis information.\n# Of course, use real sentences for much better accuracy.\n# Unless if you want to train spam related things.\nbor = BayesOnRedis.new(:redis_host =&gt; \u2018127.0.0.1\u2019, :redis_port =&gt; 6379, :redis_db =&gt; 5)</p>\n<p># Teach it\nbor.train \u201cgood\u201d, \u201csweet awesome kick-ass cool pretty smart\u201d\nbor.train \u201cbad\u201d, \u201csucks lame boo death bankrupt loser sad\u201d</p>\n<p># Then ask it to classify text.\nbor.classify(\u201cawesome kick-ass ninja can still be lame.\u201d)</p>\n</blockquote>\n<p>## for Pythonistas</p>\n<p>BayesOnRedis is also available in Python. With the same API.</p>\n<p>## Contributing</p>\n<p>[Fork <a href=\"http://github.com/didip/bayes_on_redis%5D(http://github.com/didip/bayes_on_redis\" rel=\"nofollow\">http://github.com/didip/bayes_on_redis](http://github.com/didip/bayes_on_redis</a>) and send pull requests.</p>\n\n          </div>"}, "last_serial": 786737, "releases": {"0.1.9": [{"comment_text": "", "digests": {"md5": "7cf97f53a278f47e60edd1bedff185ac", "sha256": "a344b8dd8ff77a33a2a80a9a7a2b17ca2fd885ac7df5644ed4e37ce577aec13d"}, "downloads": -1, "filename": "bayes_on_redis-0.1.9-py2.6.egg", "has_sig": false, "md5_digest": "7cf97f53a278f47e60edd1bedff185ac", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 7763, "upload_time": "2011-06-28T06:55:23", "upload_time_iso_8601": "2011-06-28T06:55:23.878197Z", "url": "https://files.pythonhosted.org/packages/11/5f/8559016559cfc551a9816001255bee54131ceeed3cc95f698bb31309ace5/bayes_on_redis-0.1.9-py2.6.egg", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7cf97f53a278f47e60edd1bedff185ac", "sha256": "a344b8dd8ff77a33a2a80a9a7a2b17ca2fd885ac7df5644ed4e37ce577aec13d"}, "downloads": -1, "filename": "bayes_on_redis-0.1.9-py2.6.egg", "has_sig": false, "md5_digest": "7cf97f53a278f47e60edd1bedff185ac", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 7763, "upload_time": "2011-06-28T06:55:23", "upload_time_iso_8601": "2011-06-28T06:55:23.878197Z", "url": "https://files.pythonhosted.org/packages/11/5f/8559016559cfc551a9816001255bee54131ceeed3cc95f698bb31309ace5/bayes_on_redis-0.1.9-py2.6.egg", "yanked": false}], "timestamp": "Thu May  7 18:14:41 2020"}