{"info": {"author": "Robin De Schepper", "author_email": "robingilbert.deschepper@unipv.it", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "[![Build Status](https://travis-ci.org/dbbs-lab/glia.svg?branch=master)](https://travis-ci.org/dbbs-lab/glia)\n[![codecov](https://codecov.io/gh/dbbs-lab/glia/branch/master/graph/badge.svg)](https://codecov.io/gh/dbbs-lab/glia)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Documentation Status](https://readthedocs.org/projects/nrn-glia/badge/?version=latest)](https://nrn-glia.readthedocs.io/en/latest/?badge=latest)\n\n# Glia: NEURON package manager\n\nPackage manager for NEURON.\n\n# Usage\n\nGlia can be installed from pip:\n\n    pip install nrn-glia\n\nWhen Glia is imported it will check for glia packages and compile them\ninto a library for NEURON, afterwards immediatly loading it into NEURON\naswell:\n\n``` python\nfrom neuron import h\nimport glia as g\n```\n\nOnly assets following the Glia naming convention will be included in the\nlibrary and are available either directly using their namespaced name,\nor using `glia.insert`:\n\n``` python\nsection = h.Section(name=\"soma\")\n# Add the default Kv1 mechanism provided in the `example` package.\nsection.insert(\"glia__example__Kv1__0\")\n# Preferably use glia's mechanism resolver to load your favourite Kv1 mechanism.\ng.insert(section, \"Kv1\")\n```\n\n# Asset management\n\nGlia allows for multiple assets to refer to the same mechanism by giving\nthem a unique name per package. The standard naming convention is as\nfollows:\n\n    glia__<package-name>__<asset-name>__<variant-name>\n\nDouble underscores in packages, assets or variant names are not allowed.\n\nThis naming convention allows for multiple people to provide an\nimplementation of the same asset, and by using variants even one package\ncan provide multiple variations on the same mechanism. The default\nvariant is `0`\n\nIf you install multiple packages that provide the same asset, or if you\nwould like to specify another variant you will need to tell Glia which\none you require. You can do so by setting your asset preferences.\n\n# Asset preferences\n\nThere are 4 different scopes for providing asset preferences:\n\n  - **Global scope:** Selects a default mechanism asset everywhere.\n  - **Script scope:** Selects a default mechanism asset for the\n    remainder of the Python script.\n  - **Context scope:** Select a preferred package or variant for all\n    `glia.insert` calls within the context block.\n  - **Single use:** Selects a mechanism asset for a single `glia.insert`\n    call\n\n## Single use\n\nWhenever you call `glia.insert` you can append your preferences for that\ninsert:\n\n``` python\ng.insert('Kv1', pkg='not_my_models', variant='high_activity')\n```\n\n## Context scope\n\nAny `glia.insert` or `glia.resolve` call within the with statement will\npreferably use the given package or variant:\n\n``` python\nfrom patch import p\ns = p.Section()\nwith g.context(pkg=not_my_models):\n  g.insert(s, 'Kv1')\n  g.insert(s, 'Kv1', variant='high_activity')\n```\n\nYou can also specify a dictionary of asset-specific preferences during\nthe with statement:\n\n``` python\nfrom patch import p\ns = p.Section()\nwith g.context(assets={\n   'Kv1': {'package': 'not_my_models', 'variant': 'high_activity'},\n   'HCN1': {'variant': 'revised'}\n}, package='some_pkg_name'):\n  g.insert(s, 'Kv1')\n  g.insert(s, 'HCN1')\n```\n\n## Script scope\n\nUse `glia.select` to select a preferred mechanism asset, similar to the\nsingle use syntax:\n\n``` python\nsection_global_Kv1 = h.Section()\nsection_local_Kv1 = h.Section()\ng.insert(section_global_Kv1, 'Kv1') # Will use your global Kv1 mechanism\ng.select('Kv1', pkg='not_my_models', variant='high_activity')\ng.insert(section_local_Kv1, 'Kv1') # Will use the above selected Kv1 mechanism\n```\n\n## Global scope\n\nApplying global scope uses the Glia command-line tool and will configure\nglia to always select a mechanism asset as default.\n\nGo to your favorite command-line tool and execute:\n\n    glia select Kv1 --pkg=some_pkg_name --variant=non_default\n\nThis will set your preference in any script you use, provided they load\nglia from the same path (e.g. not the case in different virtual\nenvironments).\n\n# Environment variables\n\n## GLIA\\_NO\\_INSTALL\n\nSet this to be able to import the glia module without it installing\nitself.\n\n## GLIA\\_NO\\_AUTOLOAD\\_DLL\n\nSet this to stop Glia from automatically loading its compiled content\ninto NEURON.\n\n## GLIA\\_PATH\n\nGlia sets this to the path where Glia is executed from.\n\n## GLIA\\_NRN\\_AVAILABLE\n\nGlia sets this to 1 if it can import the neuron Python bindings, or 0\notherwise.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dbbs-lab/glia", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "nrn-glia", "package_url": "https://pypi.org/project/nrn-glia/", "platform": "", "project_url": "https://pypi.org/project/nrn-glia/", "project_urls": {"Homepage": "https://github.com/dbbs-lab/glia"}, "release_url": "https://pypi.org/project/nrn-glia/0.2.0/", "requires_dist": ["setuptools", "nrn-patch (>=1.0.2)", "requests", "packaging (>=19.0)", "sphinx ; extra == 'dev'", "pre-commit ; extra == 'dev'"], "requires_python": "", "summary": "Package manager for NEURON", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/dbbs-lab/glia\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/03d8ad973aaee54545f9da81cfcae07ffea43a57/68747470733a2f2f7472617669732d63692e6f72672f646262732d6c61622f676c69612e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/dbbs-lab/glia\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/55564db33d85794ca7cb3d9a5d4993638c16c81d/68747470733a2f2f636f6465636f762e696f2f67682f646262732d6c61622f676c69612f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<a href=\"https://nrn-glia.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b0ec3fd85c7c84525b8dc8ea87df6cb9cef44264/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6e726e2d676c69612f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<h1>Glia: NEURON package manager</h1>\n<p>Package manager for NEURON.</p>\n<h1>Usage</h1>\n<p>Glia can be installed from pip:</p>\n<pre><code>pip install nrn-glia\n</code></pre>\n<p>When Glia is imported it will check for glia packages and compile them\ninto a library for NEURON, afterwards immediatly loading it into NEURON\naswell:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">neuron</span> <span class=\"kn\">import</span> <span class=\"n\">h</span>\n<span class=\"kn\">import</span> <span class=\"nn\">glia</span> <span class=\"k\">as</span> <span class=\"nn\">g</span>\n</pre>\n<p>Only assets following the Glia naming convention will be included in the\nlibrary and are available either directly using their namespaced name,\nor using <code>glia.insert</code>:</p>\n<pre><span class=\"n\">section</span> <span class=\"o\">=</span> <span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">Section</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"soma\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># Add the default Kv1 mechanism provided in the `example` package.</span>\n<span class=\"n\">section</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"s2\">\"glia__example__Kv1__0\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># Preferably use glia's mechanism resolver to load your favourite Kv1 mechanism.</span>\n<span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">section</span><span class=\"p\">,</span> <span class=\"s2\">\"Kv1\"</span><span class=\"p\">)</span>\n</pre>\n<h1>Asset management</h1>\n<p>Glia allows for multiple assets to refer to the same mechanism by giving\nthem a unique name per package. The standard naming convention is as\nfollows:</p>\n<pre><code>glia__&lt;package-name&gt;__&lt;asset-name&gt;__&lt;variant-name&gt;\n</code></pre>\n<p>Double underscores in packages, assets or variant names are not allowed.</p>\n<p>This naming convention allows for multiple people to provide an\nimplementation of the same asset, and by using variants even one package\ncan provide multiple variations on the same mechanism. The default\nvariant is <code>0</code></p>\n<p>If you install multiple packages that provide the same asset, or if you\nwould like to specify another variant you will need to tell Glia which\none you require. You can do so by setting your asset preferences.</p>\n<h1>Asset preferences</h1>\n<p>There are 4 different scopes for providing asset preferences:</p>\n<ul>\n<li><strong>Global scope:</strong> Selects a default mechanism asset everywhere.</li>\n<li><strong>Script scope:</strong> Selects a default mechanism asset for the\nremainder of the Python script.</li>\n<li><strong>Context scope:</strong> Select a preferred package or variant for all\n<code>glia.insert</code> calls within the context block.</li>\n<li><strong>Single use:</strong> Selects a mechanism asset for a single <code>glia.insert</code>\ncall</li>\n</ul>\n<h2>Single use</h2>\n<p>Whenever you call <code>glia.insert</code> you can append your preferences for that\ninsert:</p>\n<pre><span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"s1\">'Kv1'</span><span class=\"p\">,</span> <span class=\"n\">pkg</span><span class=\"o\">=</span><span class=\"s1\">'not_my_models'</span><span class=\"p\">,</span> <span class=\"n\">variant</span><span class=\"o\">=</span><span class=\"s1\">'high_activity'</span><span class=\"p\">)</span>\n</pre>\n<h2>Context scope</h2>\n<p>Any <code>glia.insert</code> or <code>glia.resolve</code> call within the with statement will\npreferably use the given package or variant:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">patch</span> <span class=\"kn\">import</span> <span class=\"n\">p</span>\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">Section</span><span class=\"p\">()</span>\n<span class=\"k\">with</span> <span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"p\">(</span><span class=\"n\">pkg</span><span class=\"o\">=</span><span class=\"n\">not_my_models</span><span class=\"p\">):</span>\n  <span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"s1\">'Kv1'</span><span class=\"p\">)</span>\n  <span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"s1\">'Kv1'</span><span class=\"p\">,</span> <span class=\"n\">variant</span><span class=\"o\">=</span><span class=\"s1\">'high_activity'</span><span class=\"p\">)</span>\n</pre>\n<p>You can also specify a dictionary of asset-specific preferences during\nthe with statement:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">patch</span> <span class=\"kn\">import</span> <span class=\"n\">p</span>\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">Section</span><span class=\"p\">()</span>\n<span class=\"k\">with</span> <span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"p\">(</span><span class=\"n\">assets</span><span class=\"o\">=</span><span class=\"p\">{</span>\n   <span class=\"s1\">'Kv1'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'package'</span><span class=\"p\">:</span> <span class=\"s1\">'not_my_models'</span><span class=\"p\">,</span> <span class=\"s1\">'variant'</span><span class=\"p\">:</span> <span class=\"s1\">'high_activity'</span><span class=\"p\">},</span>\n   <span class=\"s1\">'HCN1'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'variant'</span><span class=\"p\">:</span> <span class=\"s1\">'revised'</span><span class=\"p\">}</span>\n<span class=\"p\">},</span> <span class=\"n\">package</span><span class=\"o\">=</span><span class=\"s1\">'some_pkg_name'</span><span class=\"p\">):</span>\n  <span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"s1\">'Kv1'</span><span class=\"p\">)</span>\n  <span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"s1\">'HCN1'</span><span class=\"p\">)</span>\n</pre>\n<h2>Script scope</h2>\n<p>Use <code>glia.select</code> to select a preferred mechanism asset, similar to the\nsingle use syntax:</p>\n<pre><span class=\"n\">section_global_Kv1</span> <span class=\"o\">=</span> <span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">Section</span><span class=\"p\">()</span>\n<span class=\"n\">section_local_Kv1</span> <span class=\"o\">=</span> <span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">Section</span><span class=\"p\">()</span>\n<span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">section_global_Kv1</span><span class=\"p\">,</span> <span class=\"s1\">'Kv1'</span><span class=\"p\">)</span> <span class=\"c1\"># Will use your global Kv1 mechanism</span>\n<span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"s1\">'Kv1'</span><span class=\"p\">,</span> <span class=\"n\">pkg</span><span class=\"o\">=</span><span class=\"s1\">'not_my_models'</span><span class=\"p\">,</span> <span class=\"n\">variant</span><span class=\"o\">=</span><span class=\"s1\">'high_activity'</span><span class=\"p\">)</span>\n<span class=\"n\">g</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">section_local_Kv1</span><span class=\"p\">,</span> <span class=\"s1\">'Kv1'</span><span class=\"p\">)</span> <span class=\"c1\"># Will use the above selected Kv1 mechanism</span>\n</pre>\n<h2>Global scope</h2>\n<p>Applying global scope uses the Glia command-line tool and will configure\nglia to always select a mechanism asset as default.</p>\n<p>Go to your favorite command-line tool and execute:</p>\n<pre><code>glia select Kv1 --pkg=some_pkg_name --variant=non_default\n</code></pre>\n<p>This will set your preference in any script you use, provided they load\nglia from the same path (e.g. not the case in different virtual\nenvironments).</p>\n<h1>Environment variables</h1>\n<h2>GLIA_NO_INSTALL</h2>\n<p>Set this to be able to import the glia module without it installing\nitself.</p>\n<h2>GLIA_NO_AUTOLOAD_DLL</h2>\n<p>Set this to stop Glia from automatically loading its compiled content\ninto NEURON.</p>\n<h2>GLIA_PATH</h2>\n<p>Glia sets this to the path where Glia is executed from.</p>\n<h2>GLIA_NRN_AVAILABLE</h2>\n<p>Glia sets this to 1 if it can import the neuron Python bindings, or 0\notherwise.</p>\n\n          </div>"}, "last_serial": 6790996, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4c895097e1adbe710c69cfccc9600b33", "sha256": "991bc111fa04588cb19e27993e792519b1c713d4d2f2a6ec1c0438b1066f9793"}, "downloads": -1, "filename": "nrn_glia-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4c895097e1adbe710c69cfccc9600b33", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19756, "upload_time": "2019-11-22T18:25:07", "upload_time_iso_8601": "2019-11-22T18:25:07.092163Z", "url": "https://files.pythonhosted.org/packages/55/f5/7b603763e4db0a31f36d784786f5b9ae39e69b14bf2d19c95762e0bb4d83/nrn_glia-0.0.1-py3-none-any.whl", "yanked": false}], "0.0.1a1": [{"comment_text": "", "digests": {"md5": "7a97b9186b060d6240ed521bfa60826a", "sha256": "32f69c5c2b71a65a3f0b147868570507289c8833f7066a236bb5e91e2d926543"}, "downloads": -1, "filename": "nrn_glia-0.0.1a1-py3-none-any.whl", "has_sig": false, "md5_digest": "7a97b9186b060d6240ed521bfa60826a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2696, "upload_time": "2019-11-21T18:06:29", "upload_time_iso_8601": "2019-11-21T18:06:29.792401Z", "url": "https://files.pythonhosted.org/packages/91/34/c86c2b64d07d31b6a0777e3133fc2e2eec85adf2867f4de729f455550589/nrn_glia-0.0.1a1-py3-none-any.whl", "yanked": false}], "0.0.1a2": [{"comment_text": "", "digests": {"md5": "29fea5abd692157a2a62350785f98d26", "sha256": "b8abc46671652317268f8a7c6dc8b5774f591cd51b5cbee80b99e51a40da0968"}, "downloads": -1, "filename": "nrn_glia-0.0.1a2-py3-none-any.whl", "has_sig": false, "md5_digest": "29fea5abd692157a2a62350785f98d26", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14173, "upload_time": "2019-11-21T18:17:00", "upload_time_iso_8601": "2019-11-21T18:17:00.574381Z", "url": "https://files.pythonhosted.org/packages/e8/a0/76e8e72e38d211654fd230a3e112a3fe5ca634741540cc90bcfd298eeb9b/nrn_glia-0.0.1a2-py3-none-any.whl", "yanked": false}], "0.0.1a5": [{"comment_text": "", "digests": {"md5": "cb8bee8154bf905d9f554684a433aaaa", "sha256": "cb8f98f2d55a646936673391501e3024f8a70d575908c69f1c8dc247e234102b"}, "downloads": -1, "filename": "nrn_glia-0.0.1a5-py3-none-any.whl", "has_sig": false, "md5_digest": "cb8bee8154bf905d9f554684a433aaaa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15128, "upload_time": "2019-11-21T21:41:53", "upload_time_iso_8601": "2019-11-21T21:41:53.814634Z", "url": "https://files.pythonhosted.org/packages/dc/7b/53af59417af719b77a2fec91880aea31809845fd9dddd640c093ef6999ec/nrn_glia-0.0.1a5-py3-none-any.whl", "yanked": false}], "0.0.1a6": [{"comment_text": "", "digests": {"md5": "f2d95570ecbfc11dcc6d864d6b84072a", "sha256": "541fc95790a650479a2e7c0e8f60462b5419bac833b93c35043495138bab43d5"}, "downloads": -1, "filename": "nrn_glia-0.0.1a6-py3-none-any.whl", "has_sig": false, "md5_digest": "f2d95570ecbfc11dcc6d864d6b84072a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17869, "upload_time": "2019-11-22T14:36:10", "upload_time_iso_8601": "2019-11-22T14:36:10.998437Z", "url": "https://files.pythonhosted.org/packages/38/5d/911beea750a9fba5cfbbad5081d5758d8d7f5088121177e1082d1d7fc704/nrn_glia-0.0.1a6-py3-none-any.whl", "yanked": false}], "0.0.1a7": [{"comment_text": "", "digests": {"md5": "06783da11e204175b175626fee7914c2", "sha256": "0d0c6cf868f73273563be0f625202b9f45bffd8181aa8b9ca3fef4b02f09c24f"}, "downloads": -1, "filename": "nrn_glia-0.0.1a7-py3-none-any.whl", "has_sig": false, "md5_digest": "06783da11e204175b175626fee7914c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18600, "upload_time": "2019-11-22T16:03:23", "upload_time_iso_8601": "2019-11-22T16:03:23.532167Z", "url": "https://files.pythonhosted.org/packages/6a/53/84d5a83bc1d43b76de5bc4b79367475cad417153b721b400af8063d84f81/nrn_glia-0.0.1a7-py3-none-any.whl", "yanked": false}], "0.0.1a8": [{"comment_text": "", "digests": {"md5": "518920db00a23e1b732ec5a134e7632b", "sha256": "47821c2b000be7946eef07dfd3f940e1bb7b48c43526f995fe4f6224f500a86f"}, "downloads": -1, "filename": "nrn_glia-0.0.1a8-py3-none-any.whl", "has_sig": false, "md5_digest": "518920db00a23e1b732ec5a134e7632b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18485, "upload_time": "2019-11-22T16:36:52", "upload_time_iso_8601": "2019-11-22T16:36:52.321093Z", "url": "https://files.pythonhosted.org/packages/46/6f/2bffd4295dff92b6bad920579f64b2cf5ee4b0cc49ff33289e4cebf662a8/nrn_glia-0.0.1a8-py3-none-any.whl", "yanked": false}], "0.1": [{"comment_text": "", "digests": {"md5": "1e0b94ecd3b4f50636ee513814a2a792", "sha256": "47cc6583692c69098c0d41aa7e44f34425a104df9e495701eee22e73b8890b74"}, "downloads": -1, "filename": "nrn_glia-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1e0b94ecd3b4f50636ee513814a2a792", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23342, "upload_time": "2019-11-23T21:02:09", "upload_time_iso_8601": "2019-11-23T21:02:09.977711Z", "url": "https://files.pythonhosted.org/packages/c7/3f/8ec22548d50b6d84ca44513437eeeddf077ac83ebb4d4eaca36b96d54cc5/nrn_glia-0.1-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "204d7a1313e67f7245129e4c3c7a80fa", "sha256": "8beea364ad4474f6e32378e792eac3d23b5375f0f6e66532a7ca1dd8274fa3de"}, "downloads": -1, "filename": "nrn_glia-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "204d7a1313e67f7245129e4c3c7a80fa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22954, "upload_time": "2019-11-24T12:29:28", "upload_time_iso_8601": "2019-11-24T12:29:28.667890Z", "url": "https://files.pythonhosted.org/packages/2a/41/016dc65d94dadc198bde4b89a958dfc69a3af1f5393ead1c658f61a384ae/nrn_glia-0.1.1-py3-none-any.whl", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "6e90fc15c3e965d0d49047fdbe58ef51", "sha256": "c1bb79715b671374e5dc3f81581fe03817c5ed5b2ffa8fbae36b10155e495299"}, "downloads": -1, "filename": "nrn_glia-0.1.10-py3-none-any.whl", "has_sig": false, "md5_digest": "6e90fc15c3e965d0d49047fdbe58ef51", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27141, "upload_time": "2020-01-29T12:11:20", "upload_time_iso_8601": "2020-01-29T12:11:20.291980Z", "url": "https://files.pythonhosted.org/packages/4f/d2/7a5259cc46f9437933c1324a373da4e5a8aeba5aa52c3c9239ad2b5c7405/nrn_glia-0.1.10-py3-none-any.whl", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "8127e308d423e39501ab55008f76fc82", "sha256": "6e359c784d3a71b184c686422c26e8738d92842c550b268c192475da64790550"}, "downloads": -1, "filename": "nrn_glia-0.1.11-py3-none-any.whl", "has_sig": false, "md5_digest": "8127e308d423e39501ab55008f76fc82", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27191, "upload_time": "2020-01-29T14:31:08", "upload_time_iso_8601": "2020-01-29T14:31:08.769132Z", "url": "https://files.pythonhosted.org/packages/03/fb/d6360c81654584bec2ba738ce80aad0162f19f98169ffb4912235f25d7e6/nrn_glia-0.1.11-py3-none-any.whl", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "240e161c6b71a8799e05ffc72c1c8eb1", "sha256": "edb87ce7f2a0d848da35d50edf7008ff7bc7377a22a6938375d65abc7cbacb8d"}, "downloads": -1, "filename": "nrn_glia-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "240e161c6b71a8799e05ffc72c1c8eb1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23048, "upload_time": "2019-11-24T13:08:47", "upload_time_iso_8601": "2019-11-24T13:08:47.021500Z", "url": "https://files.pythonhosted.org/packages/7f/45/4221ec1ec5d2d8edee8a41842f1dd61928173562f1a448f8ee9450311488/nrn_glia-0.1.2-py3-none-any.whl", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "4ebb605167bf096c2bf12e8bc1a30e23", "sha256": "60423e9bf36061087d804c83a5aeeb32c98a2d2912bb4665063761d19d34f294"}, "downloads": -1, "filename": "nrn_glia-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4ebb605167bf096c2bf12e8bc1a30e23", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23922, "upload_time": "2019-12-02T16:54:58", "upload_time_iso_8601": "2019-12-02T16:54:58.839974Z", "url": "https://files.pythonhosted.org/packages/1d/b8/d9be972be0481030179e0ab7a00912cd004a3680ddf176e3e982a966ec62/nrn_glia-0.1.3-py3-none-any.whl", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "a71caec11959622e722a8327d0fa4ab4", "sha256": "233abba71b1ecd3d67ca5a1055166535eb75771d7d35d322bb259da913518a2c"}, "downloads": -1, "filename": "nrn_glia-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "a71caec11959622e722a8327d0fa4ab4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23925, "upload_time": "2020-01-18T21:33:16", "upload_time_iso_8601": "2020-01-18T21:33:16.374677Z", "url": "https://files.pythonhosted.org/packages/ac/5e/8f8da1226be983b66251cb5715600452cba4877fb80a0c76c644e469cc75/nrn_glia-0.1.4-py3-none-any.whl", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "71e6607734485beb2dfb4f2fbd8f2c4c", "sha256": "94a7d2fa5e4c0dd9fedf229f023453ff7e5d84c981c0bfcd73243cdca593a678"}, "downloads": -1, "filename": "nrn_glia-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "71e6607734485beb2dfb4f2fbd8f2c4c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24432, "upload_time": "2019-12-03T21:37:24", "upload_time_iso_8601": "2019-12-03T21:37:24.992066Z", "url": "https://files.pythonhosted.org/packages/94/9c/3056a7235417c9cb6747e6c8ca4c0d7087cada019e74d245454ccdbdab67/nrn_glia-0.1.5-py3-none-any.whl", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "019dfa7dbcac756f5ca812ce120d9d63", "sha256": "c4091df4d80f14ddc9cba36c538a914b359cf43adac03686420ee3b97163ce4c"}, "downloads": -1, "filename": "nrn_glia-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "019dfa7dbcac756f5ca812ce120d9d63", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24778, "upload_time": "2019-12-11T09:50:06", "upload_time_iso_8601": "2019-12-11T09:50:06.120774Z", "url": "https://files.pythonhosted.org/packages/b4/f5/8423b9fd0b907a16a617b1ea6876c64ee56c888ec6ae45bd9b28c71a90d3/nrn_glia-0.1.6-py3-none-any.whl", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "e33f26a97f6c227a65b846a39c3426fc", "sha256": "d6f7cac522268b5f57dbbaa415f797900e0596ffe9ba6ce779d4f475aca2ce89"}, "downloads": -1, "filename": "nrn_glia-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "e33f26a97f6c227a65b846a39c3426fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24786, "upload_time": "2019-12-11T09:56:07", "upload_time_iso_8601": "2019-12-11T09:56:07.799835Z", "url": "https://files.pythonhosted.org/packages/77/2a/f62dcaf8b3b4e512fc2a4b4278b101f54fd6130187d7d57691b2610d88ad/nrn_glia-0.1.7-py3-none-any.whl", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "6b1dece49e507e3d6286772b6eee78e1", "sha256": "07273a78249a6d396c6e4877fdc8e1dde950f43efa8560c32128e440b6d2e712"}, "downloads": -1, "filename": "nrn_glia-0.1.9-py3-none-any.whl", "has_sig": false, "md5_digest": "6b1dece49e507e3d6286772b6eee78e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26723, "upload_time": "2020-01-18T21:33:17", "upload_time_iso_8601": "2020-01-18T21:33:17.862412Z", "url": "https://files.pythonhosted.org/packages/68/0d/f139d0a5416eb1d4301bc67922dd6125248e9952112d66d90a99c647f028/nrn_glia-0.1.9-py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "fdddd30211c34d95ffe4dba744885de6", "sha256": "4abd0729af876ebb42ee45753ced3e45738ff73ed80797859277a3ef4e4a7a5c"}, "downloads": -1, "filename": "nrn_glia-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fdddd30211c34d95ffe4dba744885de6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28365, "upload_time": "2020-03-11T09:36:00", "upload_time_iso_8601": "2020-03-11T09:36:00.941323Z", "url": "https://files.pythonhosted.org/packages/9c/87/d82c9edaf8eab3cd4caecb8590dbf4ca09317ee6ec5ab25d9636a96c713d/nrn_glia-0.2.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fdddd30211c34d95ffe4dba744885de6", "sha256": "4abd0729af876ebb42ee45753ced3e45738ff73ed80797859277a3ef4e4a7a5c"}, "downloads": -1, "filename": "nrn_glia-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fdddd30211c34d95ffe4dba744885de6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28365, "upload_time": "2020-03-11T09:36:00", "upload_time_iso_8601": "2020-03-11T09:36:00.941323Z", "url": "https://files.pythonhosted.org/packages/9c/87/d82c9edaf8eab3cd4caecb8590dbf4ca09317ee6ec5ab25d9636a96c713d/nrn_glia-0.2.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:44:27 2020"}