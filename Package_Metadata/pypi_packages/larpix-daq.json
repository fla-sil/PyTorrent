{"info": {"author": "Sam Kohn, LBNL Neutrino Group", "author_email": "skohn@lbl.gov", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "Programming Language :: Python", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Physics"], "description": "# larpix-daq\n\n[![Documentation\nStatus](https://readthedocs.org/projects/larpix-daq/badge/?version=stable)](https://larpix-daq.readthedocs.io/en/stable/?badge=stable)\n\nLArPix DAQ is the data acquisition system for LArPix. It handles the\ndata flow between the \"data boards\" and offline storage and includes\ndata monitoring and operator control functionality built on the xylem\nDAQ framework.\n\nLArPix DAQ consists of a set of scripts which are responsible for\nindividual parts of the DAQ system's functionality, as well as an\noperator interface API which can be run in an interactive python session\nor used as a basis for a more sophisticated interactive program. The\nscripts can be run from the same or from different computers, as long as\nthe IP addresses of the various computers are known.\n\n\n### System states\n\nThere are three states the system can be in: ``READY``, ``RUN``, and\n``STOP``. The state is controlled through the ``Operator`` object using\nthe methods ``prepare_run`` (transition to ``READY``), ``begin_run``\n(transition to ``START``), and ``end_run`` (transition to ``STOP``).\n\n- ``STOP``: Default state on startup. All components are not expecting\n  data.\n- ``READY``: Components should prepare to receive data. Data may arrive\n  at the component before the instruction to transition to the ``RUN``\n  state (though this is expected to be rare). The component should treat\n  that data as if it were received in the ``RUN`` state.\n- ``RUN``: Components should expect to receive data. Data should not be\n  produced in any other state.\n\nTo mark the start and end of a run in the data flow, the ``producer.py`` script\nproduces ``INFO`` messages with contents ``\"Beginning run\"`` and\n``\"Ending run\"``, respectively.\n\n\n## Operator\n\nThe LArPix DAQ Operator module provides the interface into the DAQ core\nfor all DAQ operations.\n\nOperator methods interact with the DAQ core to accomplish the\ndesired behavior. For the simplest interactions, a single request\nand response exchange occurs, and the result is returned.\n(TODO!!! unify this interface) For most interactions, there are\nmultiple responses for a single request - e.g. an immediate\nacknowledgement of receipt and then the eventual result. The\nmethods implementing these interactions return [generator\niterators](https://docs.python.org/3/glossary.html#term-generator)\nrather than values. The way to call these functions usually looks like\n\n```python\no = Operator()\nfinal_responses = []\nfor response in o.run_routine('example'):\n    print(response)\n    # interact with response object within loop\n# When the loop ends, the last response received is still saved in\n# the response object\nfinal_responses.append(response)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "dune larpix", "license": "", "maintainer": "", "maintainer_email": "", "name": "larpix-daq", "package_url": "https://pypi.org/project/larpix-daq/", "platform": "", "project_url": "https://pypi.org/project/larpix-daq/", "project_urls": null, "release_url": "https://pypi.org/project/larpix-daq/0.2.1/", "requires_dist": ["xylem-daq (~=0.3.2)", "flask (>=1.0.0)", "flask-socketio (>=3.0)", "eventlet (>=0.24)", "requests (~=2.18)", "larpix-control (~=2.3.0)"], "requires_python": "", "summary": "LArPix DAQ system", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>larpix-daq</h1>\n<p><a href=\"https://larpix-daq.readthedocs.io/en/stable/?badge=stable\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c50be3869161019873b3b4d75e9eb85820babee1/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6c61727069782d6461712f62616467652f3f76657273696f6e3d737461626c65\"></a></p>\n<p>LArPix DAQ is the data acquisition system for LArPix. It handles the\ndata flow between the \"data boards\" and offline storage and includes\ndata monitoring and operator control functionality built on the xylem\nDAQ framework.</p>\n<p>LArPix DAQ consists of a set of scripts which are responsible for\nindividual parts of the DAQ system's functionality, as well as an\noperator interface API which can be run in an interactive python session\nor used as a basis for a more sophisticated interactive program. The\nscripts can be run from the same or from different computers, as long as\nthe IP addresses of the various computers are known.</p>\n<h3>System states</h3>\n<p>There are three states the system can be in: <code>READY</code>, <code>RUN</code>, and\n<code>STOP</code>. The state is controlled through the <code>Operator</code> object using\nthe methods <code>prepare_run</code> (transition to <code>READY</code>), <code>begin_run</code>\n(transition to <code>START</code>), and <code>end_run</code> (transition to <code>STOP</code>).</p>\n<ul>\n<li><code>STOP</code>: Default state on startup. All components are not expecting\ndata.</li>\n<li><code>READY</code>: Components should prepare to receive data. Data may arrive\nat the component before the instruction to transition to the <code>RUN</code>\nstate (though this is expected to be rare). The component should treat\nthat data as if it were received in the <code>RUN</code> state.</li>\n<li><code>RUN</code>: Components should expect to receive data. Data should not be\nproduced in any other state.</li>\n</ul>\n<p>To mark the start and end of a run in the data flow, the <code>producer.py</code> script\nproduces <code>INFO</code> messages with contents <code>\"Beginning run\"</code> and\n<code>\"Ending run\"</code>, respectively.</p>\n<h2>Operator</h2>\n<p>The LArPix DAQ Operator module provides the interface into the DAQ core\nfor all DAQ operations.</p>\n<p>Operator methods interact with the DAQ core to accomplish the\ndesired behavior. For the simplest interactions, a single request\nand response exchange occurs, and the result is returned.\n(TODO!!! unify this interface) For most interactions, there are\nmultiple responses for a single request - e.g. an immediate\nacknowledgement of receipt and then the eventual result. The\nmethods implementing these interactions return <a href=\"https://docs.python.org/3/glossary.html#term-generator\" rel=\"nofollow\">generator\niterators</a>\nrather than values. The way to call these functions usually looks like</p>\n<pre><span class=\"n\">o</span> <span class=\"o\">=</span> <span class=\"n\">Operator</span><span class=\"p\">()</span>\n<span class=\"n\">final_responses</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">response</span> <span class=\"ow\">in</span> <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">run_routine</span><span class=\"p\">(</span><span class=\"s1\">'example'</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">)</span>\n    <span class=\"c1\"># interact with response object within loop</span>\n<span class=\"c1\"># When the loop ends, the last response received is still saved in</span>\n<span class=\"c1\"># the response object</span>\n<span class=\"n\">final_responses</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 5575175, "releases": {"0.2.0rc1": [{"comment_text": "", "digests": {"md5": "ce1b150fc3daa73530073c07f1570db5", "sha256": "2b6af9df71660f876b0125a94fdd509e72cfa1cb3d0f1438565e22e00c2aa138"}, "downloads": -1, "filename": "larpix_daq-0.2.0rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "ce1b150fc3daa73530073c07f1570db5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22127, "upload_time": "2019-07-17T22:21:12", "upload_time_iso_8601": "2019-07-17T22:21:12.150669Z", "url": "https://files.pythonhosted.org/packages/e2/b3/3777f5cc70baee437cbda2a19a49f8aa4d5afc9337bdeb32e64b6726333c/larpix_daq-0.2.0rc1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "626d338893650c1bfb61d6647a2cbfd2", "sha256": "c033347f185d7399ed7fbe0cb5b70fc41382c303342c80d5e1400f465109c652"}, "downloads": -1, "filename": "larpix-daq-0.2.0rc1.tar.gz", "has_sig": false, "md5_digest": "626d338893650c1bfb61d6647a2cbfd2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17946, "upload_time": "2019-07-17T22:21:14", "upload_time_iso_8601": "2019-07-17T22:21:14.456302Z", "url": "https://files.pythonhosted.org/packages/9c/db/df2f85e901d0cfb82111eea1431e457b9ba4e6e2499ce503d962a06c4602/larpix-daq-0.2.0rc1.tar.gz", "yanked": false}], "0.2.0rc2": [{"comment_text": "", "digests": {"md5": "d6486a4d3cb0d69e29461e08d8862614", "sha256": "774d9a6d34d46e7425fcb78d3a0376db2dc9bbcbac1cba2654b5ef6ed47ea367"}, "downloads": -1, "filename": "larpix_daq-0.2.0rc2-py3-none-any.whl", "has_sig": false, "md5_digest": "d6486a4d3cb0d69e29461e08d8862614", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22397, "upload_time": "2019-07-17T23:52:35", "upload_time_iso_8601": "2019-07-17T23:52:35.538170Z", "url": "https://files.pythonhosted.org/packages/4e/f2/24d7be46b2b46296b94f1112d299359359e29dd0da8feb170c92dfdac0f6/larpix_daq-0.2.0rc2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7987dec6b2b76a40607f8cb38b23077f", "sha256": "5a20b4e2cbe9d0dedf4a573de6b6681829e54201f2d1abd0552764ba9a22c59c"}, "downloads": -1, "filename": "larpix-daq-0.2.0rc2.tar.gz", "has_sig": false, "md5_digest": "7987dec6b2b76a40607f8cb38b23077f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18231, "upload_time": "2019-07-17T23:52:37", "upload_time_iso_8601": "2019-07-17T23:52:37.336851Z", "url": "https://files.pythonhosted.org/packages/09/b9/ddb720241e2a5bc77b90e2e91213ab18535a52eaac680d1a437314feaa47/larpix-daq-0.2.0rc2.tar.gz", "yanked": false}], "0.2.0rc3": [{"comment_text": "", "digests": {"md5": "8b2e1ac928aee7cb06edd2dec2d455c8", "sha256": "a0b5c8c2176ba38bff7dfe320eddbc3bb207fb455acde9e8238680abca9d309d"}, "downloads": -1, "filename": "larpix_daq-0.2.0rc3-py3-none-any.whl", "has_sig": false, "md5_digest": "8b2e1ac928aee7cb06edd2dec2d455c8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22881, "upload_time": "2019-07-18T22:50:59", "upload_time_iso_8601": "2019-07-18T22:50:59.956874Z", "url": "https://files.pythonhosted.org/packages/e4/8a/fdd2dc1328096fe202d2e0e1f533231fe63521b6a4eb3d0c7302ace14149/larpix_daq-0.2.0rc3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9c907a11462f259f31756e45b7ade93", "sha256": "e2718f6ac2e9fe16c5ac619e2c148d578ad97a2c2492c5b3c7cbf9b3955c4214"}, "downloads": -1, "filename": "larpix-daq-0.2.0rc3.tar.gz", "has_sig": false, "md5_digest": "e9c907a11462f259f31756e45b7ade93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18428, "upload_time": "2019-07-18T22:51:02", "upload_time_iso_8601": "2019-07-18T22:51:02.814616Z", "url": "https://files.pythonhosted.org/packages/3b/4a/edca2c653ad7dcfdf74c3733229c6e1f434acbe25927c6e4fe7dcfc93611/larpix-daq-0.2.0rc3.tar.gz", "yanked": false}], "0.2.0rc4": [{"comment_text": "", "digests": {"md5": "003b3bea3f2777a7dd28b9b0835de096", "sha256": "cafdf1039e75c7d0ad6a96bd0919473f96231946f1fc16cf651fc5d6fe9cce6e"}, "downloads": -1, "filename": "larpix_daq-0.2.0rc4-py3-none-any.whl", "has_sig": false, "md5_digest": "003b3bea3f2777a7dd28b9b0835de096", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22877, "upload_time": "2019-07-18T23:43:15", "upload_time_iso_8601": "2019-07-18T23:43:15.998821Z", "url": "https://files.pythonhosted.org/packages/f0/7f/237e876cf4c2c6b5897421b00c84a28423adf23d4326580109b44ae36e92/larpix_daq-0.2.0rc4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "355443d26170fe3bde286131961e1b4a", "sha256": "360dabb795a015db21d5fb9d2cdea4f0736d315e60c8b665bd472c185faeb10e"}, "downloads": -1, "filename": "larpix-daq-0.2.0rc4.tar.gz", "has_sig": false, "md5_digest": "355443d26170fe3bde286131961e1b4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18433, "upload_time": "2019-07-18T23:43:18", "upload_time_iso_8601": "2019-07-18T23:43:18.750818Z", "url": "https://files.pythonhosted.org/packages/69/3e/8b86ad6623dc0e198f673babc93ab34e68bf01e24596c806290908b45030/larpix-daq-0.2.0rc4.tar.gz", "yanked": false}], "0.2.0rc5": [{"comment_text": "", "digests": {"md5": "7da3892f3e18422edc2a4f136a70d357", "sha256": "2fbccf45d073af98d7e20b42ca703f01088e0bb23d0460b50d00c550a13557fe"}, "downloads": -1, "filename": "larpix_daq-0.2.0rc5-py3-none-any.whl", "has_sig": false, "md5_digest": "7da3892f3e18422edc2a4f136a70d357", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23721, "upload_time": "2019-07-22T23:59:36", "upload_time_iso_8601": "2019-07-22T23:59:36.685084Z", "url": "https://files.pythonhosted.org/packages/bc/a6/278213c99750adbc6f410cc7829b9c120acf5865b86eba6b1d0387cbf31a/larpix_daq-0.2.0rc5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5f08364ffb4aed9c7abb18e0ab41b5af", "sha256": "5ac8fcfdccfdfa4988870d89c72fb4944965fea9d6099adfbb8e33c4c70cb318"}, "downloads": -1, "filename": "larpix-daq-0.2.0rc5.tar.gz", "has_sig": false, "md5_digest": "5f08364ffb4aed9c7abb18e0ab41b5af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19252, "upload_time": "2019-07-22T23:59:40", "upload_time_iso_8601": "2019-07-22T23:59:40.577442Z", "url": "https://files.pythonhosted.org/packages/ce/33/62cdd45b686939325ed14be319321e34b398142176877ebb6f1e784a4af4/larpix-daq-0.2.0rc5.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "4f651c59a6fceac4d61977c0ac064b24", "sha256": "4bcf1ff633b7f016dc5c688a7b3d63e1e08c4eb3d47799bede49f2c1a37db2fb"}, "downloads": -1, "filename": "larpix_daq-0.2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "4f651c59a6fceac4d61977c0ac064b24", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 23684, "upload_time": "2019-07-24T01:20:01", "upload_time_iso_8601": "2019-07-24T01:20:01.916643Z", "url": "https://files.pythonhosted.org/packages/d9/2e/9ab26ea69d2a801c808b84c939638482dde590b166e6fe775a3be31475a1/larpix_daq-0.2.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "779369b5aaa71083ee70c606623461c6", "sha256": "d538cb9e9b9e6cd511527c50ce22bf6433ba6fb3d35774c18ad5738777facc6e"}, "downloads": -1, "filename": "larpix_daq-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "779369b5aaa71083ee70c606623461c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23686, "upload_time": "2019-07-23T20:21:17", "upload_time_iso_8601": "2019-07-23T20:21:17.365112Z", "url": "https://files.pythonhosted.org/packages/17/6d/ea234ec67d9795e34335302b1c16dd58f37661a3fa569ead7cb924b53494/larpix_daq-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66150bc1277c8c05ba04f7614ed567eb", "sha256": "14fc55f0e6459c1311bacfd4a49855c4834b354b3e9699bd23c38ad261754f12"}, "downloads": -1, "filename": "larpix-daq-0.2.1.tar.gz", "has_sig": false, "md5_digest": "66150bc1277c8c05ba04f7614ed567eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19244, "upload_time": "2019-07-23T20:21:19", "upload_time_iso_8601": "2019-07-23T20:21:19.120867Z", "url": "https://files.pythonhosted.org/packages/d8/cd/fe0266373f8217d4d9fdf83625b037388ee0b25ee569c2a7572cba40abb7/larpix-daq-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4f651c59a6fceac4d61977c0ac064b24", "sha256": "4bcf1ff633b7f016dc5c688a7b3d63e1e08c4eb3d47799bede49f2c1a37db2fb"}, "downloads": -1, "filename": "larpix_daq-0.2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "4f651c59a6fceac4d61977c0ac064b24", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 23684, "upload_time": "2019-07-24T01:20:01", "upload_time_iso_8601": "2019-07-24T01:20:01.916643Z", "url": "https://files.pythonhosted.org/packages/d9/2e/9ab26ea69d2a801c808b84c939638482dde590b166e6fe775a3be31475a1/larpix_daq-0.2.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "779369b5aaa71083ee70c606623461c6", "sha256": "d538cb9e9b9e6cd511527c50ce22bf6433ba6fb3d35774c18ad5738777facc6e"}, "downloads": -1, "filename": "larpix_daq-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "779369b5aaa71083ee70c606623461c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23686, "upload_time": "2019-07-23T20:21:17", "upload_time_iso_8601": "2019-07-23T20:21:17.365112Z", "url": "https://files.pythonhosted.org/packages/17/6d/ea234ec67d9795e34335302b1c16dd58f37661a3fa569ead7cb924b53494/larpix_daq-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66150bc1277c8c05ba04f7614ed567eb", "sha256": "14fc55f0e6459c1311bacfd4a49855c4834b354b3e9699bd23c38ad261754f12"}, "downloads": -1, "filename": "larpix-daq-0.2.1.tar.gz", "has_sig": false, "md5_digest": "66150bc1277c8c05ba04f7614ed567eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19244, "upload_time": "2019-07-23T20:21:19", "upload_time_iso_8601": "2019-07-23T20:21:19.120867Z", "url": "https://files.pythonhosted.org/packages/d8/cd/fe0266373f8217d4d9fdf83625b037388ee0b25ee569c2a7572cba40abb7/larpix-daq-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:51 2020"}