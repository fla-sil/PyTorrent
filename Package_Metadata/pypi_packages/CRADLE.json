{"info": {"author": "Young-Sook Kim", "author_email": "kys91240@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# CRADLE\nCRADLE (Correcting Read counts and Analysis of DifferentiaLly Expressed regions) is a package that was developed to analyze STARR-seq data. CRADLE removes technical biases from sonication, PCR, mappability and G-quadruplex sturcture, and generates bigwigs files with corrected read counts. CRADLE then uses those corrected read counts and detects both activated and repressed enhancers. CRADLE will help to find enhancers with better accuracy and credibility. \n\n\n## Installation\nYou can install CRADLE either with using pip or git repository.\n1) Using pip\n```\npip install cradle\n```\nRecommend to install the newest version.\n\n2) Using git repository\n```\ngit clone https://github.com/Young-Sook/CRADLE.git\npython setup.py install\n```\n\n## Dependencies\nCRADLE requires\n```\n- numpy (>= 1.14.3)\n- argparse (>= 1.1)\n- py2bit (>= 0.3.0)\n- pyBigWig (>= 0.3.11)\n- statsmodels (>= 0.8.0)\n- scipy (>= 1.0.1)\n- matplotlib (>= 1.5.3)\n- h5py (>= 2.6.0)\n- Cython (>= 0.24.1)\n```\nThose dependencies will be automatically installed when you install CRADLE either with pip or git repository.\n\n\n## Commands\n```\ncradle {correctBias, correctBias_stored, callPeak}\n```\n\n### 1) correctBias\nThis command corrects technical biases (shear, PCR, mappability, G-quadruplex) from read counts. This command takes bigwig files as input and outputs bigwig files with corrected read counts. Not recommended to run this command when you have large regions (see 'correctBias_stored' below).  <br/> <br/>\n\nExample of running correctBias: \n```\ncradle correctBias -ctrlbw ctrl1.bw ctrl2.bw ctrl3.bw\n                   -expbw exp1.bw exp2.bw exp3.bw\n                   -l 500 \n                   -r /data/YoungSook/target_region.bed\n                   -biasType shear pcr map gquad\n                   -faFile /data/YoungSook/hg38.2bit\n                   -kmer 50\n                   -o /data/YoungSook/CRADLE_result\n                   -bl /data/YoungSook/blacklist_regions.bed\n```\n\n* Required Arguments\n  -  -ctrlbw <br /> \n      Ctrl bigwig files. Un-noramlized files are recommended. Each file name should be spaced\n  -  -expbw <br />\n      Experimental bigwig files. Un-noramlized files are recommended. Each file name should be spaced.\n  -  -l <br />\n      Fragment length\n  -  -r <br /> \n      Text file that shows regions of analysis. Each line in the text file should have chromosome, start site, and end site that are tab-spaced. ex) chr1\\t100\\t3000\n  -  -biasType <br /> \n      Type of biases you want to correct among 'shear', 'pcr', 'map', 'gquad'. If you want to correct 'shear' and 'pcr' bias, you should type -biasType shear pcr. If you type map, -mapFile and -kmer are required. If you type gquad, -gquadFile is required\n  -  -faFile <br /> \n       .2bit files. You can download .2bit files in UCSC genome browser. <br/> <br/> \n* Optional Arguments <br />\n   !! Warning !! Some optional arguments are required depending on what you put in required arguments. <br />\n  -  -binSize <br /> \n      The size of bin (bp) for correction. If you put '1', it means you want to correct read counts in single-bp resolution. (default=1) \n  -  -mi <br /> \n      The minimum number of fragments. Positions that have less fragments than this value are filtered out. default=10\n  -  -mapFile <br /> \n      Mappability file in bigwig format. Required when 'map' is in '-biasType'. See 'Reference' if you want to download human mappability files (36mer, 50mer, 100mer for hg19 and hg38). \n  -  -kmer <br /> \n      The length of sequencing reads. If you have paired-end sequencing with 50mer from each end, type '50'. Required when 'map' is in '-biasType'\n  -  -gquadFile <br /> \n      Gqaudruplex files in bigwig format. Multiple files are allowed. Required when 'gquad' is in '-biasType'. \n      See 'Reference' if you want to download human Gqaudruplex files (hg19 and hg38). \n  -  -gquadMax <br /> \n      The maximum gquad score. This is used to normalize Gquad score. default=78.6\n  -  -o <br /> \n      Output directory. All corrected bigwig files will be stored here. If the directory doesn't exist, cradle will make the directory. default=CRADLE_correctionResult.\n  -  -p <br /> \n      The number of cpus. default=(available cpus)/2\n  -  -bl <br /> \n      Text file that shows regions you want to filter out. Each line in the text file should have chromosome, start site, and end site that are tab-spaced. ex) chr1\\t1\\t100\n\n\n\n### 2) correctBias_stored\nThis command corrects technical biases (shear, PCR, mappability, G-quadruplex) from read counts when there are precomputed covariate files(.hdf). This command takes bigwig files as input and outputs bigwig files with corrected read counts. This command is much faster than running correctBias. Using 'correctBias_stored' is highly recommended when you have large regions, especially if you have whole genome data. You can download covariate files in synpase ().\n\nExample of running correctBias_stored: \n```\ncradle correctBias_stored -ctrlbw ctrl1.bw ctrl2.bw ctrl3.bw\n                          -expbw exp1.bw exp2.bw exp3.bw\n                          -r /data/YoungSook/target_region.bed\n                          -biasType shear pcr map gquad\n                          -covariDir /data/YoungSook/hg39_fragLen500_kmer50\n                          -faFile /data/YoungSook/hg38.2bit\n                          -kmer 50\n                          -o /data/YoungSook/CRADLE_result\n                          -bl /data/YoungSook/blacklist_regions.bed\n```\n\n* Required Arguments\n  -  -ctrlbw <br /> \n      Ctrl bigwig files. Un-noramlized files are recommended. Each file name should be spaced\n  -  -expbw <br /> \n      Experimental bigwig files. Un-noramlized files are recommended. Each file name should be spaced.\n  -  -r <br /> \n      Text file that shows regions of analysis. Each line in the text file should have chromosome, start site, and end site that are tab-spaced. ex) chr1\\t100\\t3000\n  -  -biasType <br /> \n      Type of biases you want to correct among 'shear', 'pcr', 'map', 'gquad'. If you want to correct 'shear' and 'pcr' bias, you should type -biasType shear pcr. \n  -  -covariDir <br />\n      The directory of hdf files that have covariate values. The directory name of covariate files should be 'refGenome_fragLen(fragment length)_kmer(the length of sequenced reads)' ex) hg38_fragLen300_kmer36\n  -  -faFile <br/>\n      .2bit files. You can download .2bit files in UCSC genome browser. <br/> <br/> \n\n* Optional Arguments\n  -  -mi <br /> \n     The minimum number of fragments. Positions that have less fragments than this value are filtered out. default=10\n  -  -o <br/>\n     Output directory. All corrected bigwig files will be stored here. If the directory doesn't exist, cradle will make the directory. default=CRADLE_correctionResult.\n  -  -p <br/>\n     The number of cpus. default=(available cpus)/2\n  -  -bl <br/>\n     Text file that shows regions you want to filter out. Each line in the text file should have chromosome, start site, and end site that are tab-spaced. ex) chr1\\t1\\t100\n\n\n\n### 3) callPeak\nThis command calls activated and repressed peaks with using corrected bigwig files as input. \n\nExample of running callPeak: \n```\ncradle callPeak -ctrlbw ctrl1_corrected.bw ctrl2_corrected.bw ctrl3_corrected.bw\n                -expbw exp1_corrected.bw exp2_corrected.bw exp3_corrected.bw\n                -l 500\n                -r /data/YoungSook/target_region.bed\n                -fdr 0.05\n                -o /data/YoungSook/CRADLE_peakCalling_result\n```\n\n* Required Arguments\n  -  -ctrlbw <br /> \n      Ctrl bigwig files. Corrected bigwig files are recommended. Each file name should be spaced\n  -  -expbw <br />\n      Experimental bigwig files Corrected bigwig files are recommended.. Each file name should be spaced.\n  -  -l <br />\n      Fragment length\n  -  -r <br /> \n      Text file that shows regions of analysis. Each line in the text file should have chromosome, start site, and end site that are tab-spaced. ex) chr1\\t100\\t3000\n  -  -fdr <br />\n     FDR control <br/> <br/>\n\n* Optional Arguments\n  -  -o <br /> \n     Output directory. All corrected bigwig files will be stored here. If the directory doesn't exist, cradle will make the directory. default=CRADLE_peak_result.\n  -  -bl <br />\n     Text file that shows regions you want to filter out. Each line in the text file should have chromosome, start site, and end site that are tab-spaced. ex) chr1\\t1\\t100\n  -  -rbin <br />\n     The size of a bin used for defining regions. rbin cannot be smaller than wbin. default = (fragment length)*1.5\n  -  -wbin <br />\n     The size of a bin used for testing differential activity. wbin cannot be larger than rbin. default = rbin/6\n  -  -p <br/>\n     The number of cpus. default=(available cpus)/2\n  -  -d <br/>\n     The minimum distance between peaks. Peaks distanced less than this value(bp) are merged. default=(fragment size)/ 2\n\n\n## How to download covariate files\nWe uploaded pre-computed covariates files for human genome (hg19, hg38). Those files are required to run \"correctBias_stored\"\n1. Go to synapse (www.synapse.org)\n2. Register in the synapse. (You cannot download the files unless you register)\n3. Search covariate files with SynapseID, syn20369503. \n\n## How to download human mappability and gquadruplex files\nWe liftover mappability files[2] and G-quadruplex files[3] from hg19 to hg38. You can download both hg19 and hg38 mappability files and G-quadruplex files.\n1. Go to synapse (www.synapse.org)\n2. Register in the synapse. (You cannot download the files unless you register)\n3. Search covariate files with SynapseID, syn20369496. \n\n\n## Tips on running CRADLE\n* We strongly recommend to use correctBias_stored when you have large regions because running \"correctBias\" might take too long time, especially when fragmen size is more than 500. Little difference in fragment legnth and sequenced length doesn't significantly affect correction power, so we recommend to download covariate files from syanpse and run 'correctBias_stored' if you can find fragment legnth and sequenced length that are close to your data. \n\n\n## References\n1) DNAShape <br /> \n   Zhou T, Yang L, Lu Y, Dror I, Dantas Machado AC, Ghane T, Di Felice R, Rohs R.DNAshape: a method for the high-throughput prediction of DNA structural features on a genomic scale. Nucleic Acids Res. 2013 Jul;41(Web Server issue):W56-62. <br /> \n2) Mappability <br /> \n   Derrien T, Estell\u00e9 J, Marco Sola S, Knowles DG, Raineri E, Guig\u00f3 R, Ribeca P. Fast computation and applications of genome mappability. PLoS One. 2012;7(1):e30377. <br /> \n3) G-quadruplex sturcture <br/>\n   Chambers VS, Marsico G, Boutell JM, Di Antonio M, Smith GP, Balasubramanian S. High-throughput sequencing of DNA G-quadruplex structures in the human genome.Nat Biotechnol. 2015 Aug;33(8):877-81.<br />", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Young-Sook/CRADLE", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "CRADLE", "package_url": "https://pypi.org/project/CRADLE/", "platform": "", "project_url": "https://pypi.org/project/CRADLE/", "project_urls": {"Homepage": "https://github.com/Young-Sook/CRADLE"}, "release_url": "https://pypi.org/project/CRADLE/0.1.8/", "requires_dist": null, "requires_python": "", "summary": "Correct Read Counts and Analysis of Differently Expressed Regions", "version": "0.1.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>CRADLE</h1>\n<p>CRADLE (Correcting Read counts and Analysis of DifferentiaLly Expressed regions) is a package that was developed to analyze STARR-seq data. CRADLE removes technical biases from sonication, PCR, mappability and G-quadruplex sturcture, and generates bigwigs files with corrected read counts. CRADLE then uses those corrected read counts and detects both activated and repressed enhancers. CRADLE will help to find enhancers with better accuracy and credibility.</p>\n<h2>Installation</h2>\n<p>You can install CRADLE either with using pip or git repository.</p>\n<ol>\n<li>Using pip</li>\n</ol>\n<pre><code>pip install cradle\n</code></pre>\n<p>Recommend to install the newest version.</p>\n<ol>\n<li>Using git repository</li>\n</ol>\n<pre><code>git clone https://github.com/Young-Sook/CRADLE.git\npython setup.py install\n</code></pre>\n<h2>Dependencies</h2>\n<p>CRADLE requires</p>\n<pre><code>- numpy (&gt;= 1.14.3)\n- argparse (&gt;= 1.1)\n- py2bit (&gt;= 0.3.0)\n- pyBigWig (&gt;= 0.3.11)\n- statsmodels (&gt;= 0.8.0)\n- scipy (&gt;= 1.0.1)\n- matplotlib (&gt;= 1.5.3)\n- h5py (&gt;= 2.6.0)\n- Cython (&gt;= 0.24.1)\n</code></pre>\n<p>Those dependencies will be automatically installed when you install CRADLE either with pip or git repository.</p>\n<h2>Commands</h2>\n<pre><code>cradle {correctBias, correctBias_stored, callPeak}\n</code></pre>\n<h3>1) correctBias</h3>\n<p>This command corrects technical biases (shear, PCR, mappability, G-quadruplex) from read counts. This command takes bigwig files as input and outputs bigwig files with corrected read counts. Not recommended to run this command when you have large regions (see 'correctBias_stored' below).  <br> <br></p>\n<p>Example of running correctBias:</p>\n<pre><code>cradle correctBias -ctrlbw ctrl1.bw ctrl2.bw ctrl3.bw\n                   -expbw exp1.bw exp2.bw exp3.bw\n                   -l 500 \n                   -r /data/YoungSook/target_region.bed\n                   -biasType shear pcr map gquad\n                   -faFile /data/YoungSook/hg38.2bit\n                   -kmer 50\n                   -o /data/YoungSook/CRADLE_result\n                   -bl /data/YoungSook/blacklist_regions.bed\n</code></pre>\n<ul>\n<li>Required Arguments\n<ul>\n<li>-ctrlbw <br>\nCtrl bigwig files. Un-noramlized files are recommended. Each file name should be spaced</li>\n<li>-expbw <br>\nExperimental bigwig files. Un-noramlized files are recommended. Each file name should be spaced.</li>\n<li>-l <br>\nFragment length</li>\n<li>-r <br>\nText file that shows regions of analysis. Each line in the text file should have chromosome, start site, and end site that are tab-spaced. ex) chr1\\t100\\t3000</li>\n<li>-biasType <br>\nType of biases you want to correct among 'shear', 'pcr', 'map', 'gquad'. If you want to correct 'shear' and 'pcr' bias, you should type -biasType shear pcr. If you type map, -mapFile and -kmer are required. If you type gquad, -gquadFile is required</li>\n<li>-faFile <br>\n.2bit files. You can download .2bit files in UCSC genome browser. <br> <br></li>\n</ul>\n</li>\n<li>Optional Arguments <br>\n!! Warning !! Some optional arguments are required depending on what you put in required arguments. <br>\n<ul>\n<li>-binSize <br>\nThe size of bin (bp) for correction. If you put '1', it means you want to correct read counts in single-bp resolution. (default=1)</li>\n<li>-mi <br>\nThe minimum number of fragments. Positions that have less fragments than this value are filtered out. default=10</li>\n<li>-mapFile <br>\nMappability file in bigwig format. Required when 'map' is in '-biasType'. See 'Reference' if you want to download human mappability files (36mer, 50mer, 100mer for hg19 and hg38).</li>\n<li>-kmer <br>\nThe length of sequencing reads. If you have paired-end sequencing with 50mer from each end, type '50'. Required when 'map' is in '-biasType'</li>\n<li>-gquadFile <br>\nGqaudruplex files in bigwig format. Multiple files are allowed. Required when 'gquad' is in '-biasType'.\nSee 'Reference' if you want to download human Gqaudruplex files (hg19 and hg38).</li>\n<li>-gquadMax <br>\nThe maximum gquad score. This is used to normalize Gquad score. default=78.6</li>\n<li>-o <br>\nOutput directory. All corrected bigwig files will be stored here. If the directory doesn't exist, cradle will make the directory. default=CRADLE_correctionResult.</li>\n<li>-p <br>\nThe number of cpus. default=(available cpus)/2</li>\n<li>-bl <br>\nText file that shows regions you want to filter out. Each line in the text file should have chromosome, start site, and end site that are tab-spaced. ex) chr1\\t1\\t100</li>\n</ul>\n</li>\n</ul>\n<h3>2) correctBias_stored</h3>\n<p>This command corrects technical biases (shear, PCR, mappability, G-quadruplex) from read counts when there are precomputed covariate files(.hdf). This command takes bigwig files as input and outputs bigwig files with corrected read counts. This command is much faster than running correctBias. Using 'correctBias_stored' is highly recommended when you have large regions, especially if you have whole genome data. You can download covariate files in synpase ().</p>\n<p>Example of running correctBias_stored:</p>\n<pre><code>cradle correctBias_stored -ctrlbw ctrl1.bw ctrl2.bw ctrl3.bw\n                          -expbw exp1.bw exp2.bw exp3.bw\n                          -r /data/YoungSook/target_region.bed\n                          -biasType shear pcr map gquad\n                          -covariDir /data/YoungSook/hg39_fragLen500_kmer50\n                          -faFile /data/YoungSook/hg38.2bit\n                          -kmer 50\n                          -o /data/YoungSook/CRADLE_result\n                          -bl /data/YoungSook/blacklist_regions.bed\n</code></pre>\n<ul>\n<li>\n<p>Required Arguments</p>\n<ul>\n<li>-ctrlbw <br>\nCtrl bigwig files. Un-noramlized files are recommended. Each file name should be spaced</li>\n<li>-expbw <br>\nExperimental bigwig files. Un-noramlized files are recommended. Each file name should be spaced.</li>\n<li>-r <br>\nText file that shows regions of analysis. Each line in the text file should have chromosome, start site, and end site that are tab-spaced. ex) chr1\\t100\\t3000</li>\n<li>-biasType <br>\nType of biases you want to correct among 'shear', 'pcr', 'map', 'gquad'. If you want to correct 'shear' and 'pcr' bias, you should type -biasType shear pcr.</li>\n<li>-covariDir <br>\nThe directory of hdf files that have covariate values. The directory name of covariate files should be 'refGenome_fragLen(fragment length)_kmer(the length of sequenced reads)' ex) hg38_fragLen300_kmer36</li>\n<li>-faFile <br>\n.2bit files. You can download .2bit files in UCSC genome browser. <br> <br></li>\n</ul>\n</li>\n<li>\n<p>Optional Arguments</p>\n<ul>\n<li>-mi <br>\nThe minimum number of fragments. Positions that have less fragments than this value are filtered out. default=10</li>\n<li>-o <br>\nOutput directory. All corrected bigwig files will be stored here. If the directory doesn't exist, cradle will make the directory. default=CRADLE_correctionResult.</li>\n<li>-p <br>\nThe number of cpus. default=(available cpus)/2</li>\n<li>-bl <br>\nText file that shows regions you want to filter out. Each line in the text file should have chromosome, start site, and end site that are tab-spaced. ex) chr1\\t1\\t100</li>\n</ul>\n</li>\n</ul>\n<h3>3) callPeak</h3>\n<p>This command calls activated and repressed peaks with using corrected bigwig files as input.</p>\n<p>Example of running callPeak:</p>\n<pre><code>cradle callPeak -ctrlbw ctrl1_corrected.bw ctrl2_corrected.bw ctrl3_corrected.bw\n                -expbw exp1_corrected.bw exp2_corrected.bw exp3_corrected.bw\n                -l 500\n                -r /data/YoungSook/target_region.bed\n                -fdr 0.05\n                -o /data/YoungSook/CRADLE_peakCalling_result\n</code></pre>\n<ul>\n<li>\n<p>Required Arguments</p>\n<ul>\n<li>-ctrlbw <br>\nCtrl bigwig files. Corrected bigwig files are recommended. Each file name should be spaced</li>\n<li>-expbw <br>\nExperimental bigwig files Corrected bigwig files are recommended.. Each file name should be spaced.</li>\n<li>-l <br>\nFragment length</li>\n<li>-r <br>\nText file that shows regions of analysis. Each line in the text file should have chromosome, start site, and end site that are tab-spaced. ex) chr1\\t100\\t3000</li>\n<li>-fdr <br>\nFDR control <br> <br></li>\n</ul>\n</li>\n<li>\n<p>Optional Arguments</p>\n<ul>\n<li>-o <br>\nOutput directory. All corrected bigwig files will be stored here. If the directory doesn't exist, cradle will make the directory. default=CRADLE_peak_result.</li>\n<li>-bl <br>\nText file that shows regions you want to filter out. Each line in the text file should have chromosome, start site, and end site that are tab-spaced. ex) chr1\\t1\\t100</li>\n<li>-rbin <br>\nThe size of a bin used for defining regions. rbin cannot be smaller than wbin. default = (fragment length)*1.5</li>\n<li>-wbin <br>\nThe size of a bin used for testing differential activity. wbin cannot be larger than rbin. default = rbin/6</li>\n<li>-p <br>\nThe number of cpus. default=(available cpus)/2</li>\n<li>-d <br>\nThe minimum distance between peaks. Peaks distanced less than this value(bp) are merged. default=(fragment size)/ 2</li>\n</ul>\n</li>\n</ul>\n<h2>How to download covariate files</h2>\n<p>We uploaded pre-computed covariates files for human genome (hg19, hg38). Those files are required to run \"correctBias_stored\"</p>\n<ol>\n<li>Go to synapse (<a href=\"http://www.synapse.org\" rel=\"nofollow\">www.synapse.org</a>)</li>\n<li>Register in the synapse. (You cannot download the files unless you register)</li>\n<li>Search covariate files with SynapseID, syn20369503.</li>\n</ol>\n<h2>How to download human mappability and gquadruplex files</h2>\n<p>We liftover mappability files[2] and G-quadruplex files[3] from hg19 to hg38. You can download both hg19 and hg38 mappability files and G-quadruplex files.</p>\n<ol>\n<li>Go to synapse (<a href=\"http://www.synapse.org\" rel=\"nofollow\">www.synapse.org</a>)</li>\n<li>Register in the synapse. (You cannot download the files unless you register)</li>\n<li>Search covariate files with SynapseID, syn20369496.</li>\n</ol>\n<h2>Tips on running CRADLE</h2>\n<ul>\n<li>We strongly recommend to use correctBias_stored when you have large regions because running \"correctBias\" might take too long time, especially when fragmen size is more than 500. Little difference in fragment legnth and sequenced length doesn't significantly affect correction power, so we recommend to download covariate files from syanpse and run 'correctBias_stored' if you can find fragment legnth and sequenced length that are close to your data.</li>\n</ul>\n<h2>References</h2>\n<ol>\n<li>DNAShape <br>\nZhou T, Yang L, Lu Y, Dror I, Dantas Machado AC, Ghane T, Di Felice R, Rohs R.DNAshape: a method for the high-throughput prediction of DNA structural features on a genomic scale. Nucleic Acids Res. 2013 Jul;41(Web Server issue):W56-62. <br></li>\n<li>Mappability <br>\nDerrien T, Estell\u00e9 J, Marco Sola S, Knowles DG, Raineri E, Guig\u00f3 R, Ribeca P. Fast computation and applications of genome mappability. PLoS One. 2012;7(1):e30377. <br></li>\n<li>G-quadruplex sturcture <br>\nChambers VS, Marsico G, Boutell JM, Di Antonio M, Smith GP, Balasubramanian S. High-throughput sequencing of DNA G-quadruplex structures in the human genome.Nat Biotechnol. 2015 Aug;33(8):877-81.<br></li>\n</ol>\n\n          </div>"}, "last_serial": 5646143, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "f6c8f4ddd688995f8231d3afb9022428", "sha256": "b8931882adb309c946a7819ef73d8b972030ea3e8f8653a8d681154dd3268644"}, "downloads": -1, "filename": "CRADLE-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f6c8f4ddd688995f8231d3afb9022428", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46841, "upload_time": "2019-07-11T20:35:40", "upload_time_iso_8601": "2019-07-11T20:35:40.586980Z", "url": "https://files.pythonhosted.org/packages/d1/d8/3a57160d22fc0bbe50989c4181a302762136e81018b74628e75ddaa089bf/CRADLE-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "23a51f9041e1b8945de2b93f29327d8e", "sha256": "97db0d10920a95f094a936cf0a0129493a5159a69ba059360f7bc38fc29a01ed"}, "downloads": -1, "filename": "CRADLE-0.1.2.tar.gz", "has_sig": false, "md5_digest": "23a51f9041e1b8945de2b93f29327d8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 545078, "upload_time": "2019-07-11T22:02:28", "upload_time_iso_8601": "2019-07-11T22:02:28.500447Z", "url": "https://files.pythonhosted.org/packages/c6/2d/186023f787b6b98d56e721279a225324f97404604f5d0f7323c39b867c38/CRADLE-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "65f8280bb0a69a1cf84b5bcf1a571ebd", "sha256": "ee24d3cdcbc48bab8d0dbebdaa615f79ef834a71f6dd740b024856d8af4d6145"}, "downloads": -1, "filename": "CRADLE-0.1.3.tar.gz", "has_sig": false, "md5_digest": "65f8280bb0a69a1cf84b5bcf1a571ebd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 586927, "upload_time": "2019-07-12T00:09:43", "upload_time_iso_8601": "2019-07-12T00:09:43.770502Z", "url": "https://files.pythonhosted.org/packages/da/09/8cc6110283390d4fbbb68d346ad0c7f7a598dacb7e7f3fd42f614924f8a9/CRADLE-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "502b57e61d71d4a64cfb57dfb112d451", "sha256": "0681e433105c7976fe02b5ffa181a6cbea40c5ac1cd9ab039ef44ff619aaef2e"}, "downloads": -1, "filename": "CRADLE-0.1.4.tar.gz", "has_sig": false, "md5_digest": "502b57e61d71d4a64cfb57dfb112d451", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 572514, "upload_time": "2019-07-12T01:20:31", "upload_time_iso_8601": "2019-07-12T01:20:31.137112Z", "url": "https://files.pythonhosted.org/packages/5e/9a/52529792d4997b9d8d7815df62561b401ba94f04a364f097587a39c9798c/CRADLE-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "964225349aeb3cb3ebe680e3fdbed531", "sha256": "3aad571817f46a3406fafca2de907a0aaa0b678e05865830bb7e13677becde8e"}, "downloads": -1, "filename": "CRADLE-0.1.5.tar.gz", "has_sig": false, "md5_digest": "964225349aeb3cb3ebe680e3fdbed531", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 572518, "upload_time": "2019-07-12T01:51:07", "upload_time_iso_8601": "2019-07-12T01:51:07.239698Z", "url": "https://files.pythonhosted.org/packages/29/b1/dfc66ddef1e23298c0b59e52ebd3b94828eadff08136cf320a8c72cc36de/CRADLE-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "28a80ca99eefa5c3215eae9883cfe815", "sha256": "5f250f863792aaa7042f3da192f02f9122b03e406f68b3b30ff05211481ef284"}, "downloads": -1, "filename": "CRADLE-0.1.6.tar.gz", "has_sig": false, "md5_digest": "28a80ca99eefa5c3215eae9883cfe815", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 593318, "upload_time": "2019-07-26T14:29:55", "upload_time_iso_8601": "2019-07-26T14:29:55.693877Z", "url": "https://files.pythonhosted.org/packages/1e/c8/a48112fcf753e79ec1ba6bb05ad9980b27ecb26112ae40936da5cb473156/CRADLE-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "9b224ef79750a7b039bc25aa3ca1c37b", "sha256": "a08fb39b8a62f559ac953f5ef9f848a553aad62f2aa1eb832c12021afb264ba0"}, "downloads": -1, "filename": "CRADLE-0.1.7.tar.gz", "has_sig": false, "md5_digest": "9b224ef79750a7b039bc25aa3ca1c37b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 566583, "upload_time": "2019-07-26T21:09:00", "upload_time_iso_8601": "2019-07-26T21:09:00.398422Z", "url": "https://files.pythonhosted.org/packages/2a/15/e9ab926addacb00d12db64b86e8ef3f5eed84c545ccb9996fa90d2af2e34/CRADLE-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "7f1de61a78b8891e258855003ec1096f", "sha256": "3c52d74dee0bde0c1d4a79b823274a372da58de1c6e846a95617e142293aee3c"}, "downloads": -1, "filename": "CRADLE-0.1.8.tar.gz", "has_sig": false, "md5_digest": "7f1de61a78b8891e258855003ec1096f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 568097, "upload_time": "2019-08-07T17:33:30", "upload_time_iso_8601": "2019-08-07T17:33:30.389087Z", "url": "https://files.pythonhosted.org/packages/e1/1d/e8ad5467c6e1952a3c9cb9c485a6f3fdf2fe40fd501540f9098ad798bccc/CRADLE-0.1.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7f1de61a78b8891e258855003ec1096f", "sha256": "3c52d74dee0bde0c1d4a79b823274a372da58de1c6e846a95617e142293aee3c"}, "downloads": -1, "filename": "CRADLE-0.1.8.tar.gz", "has_sig": false, "md5_digest": "7f1de61a78b8891e258855003ec1096f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 568097, "upload_time": "2019-08-07T17:33:30", "upload_time_iso_8601": "2019-08-07T17:33:30.389087Z", "url": "https://files.pythonhosted.org/packages/e1/1d/e8ad5467c6e1952a3c9cb9c485a6f3fdf2fe40fd501540f9098ad798bccc/CRADLE-0.1.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:30 2020"}