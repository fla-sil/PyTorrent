{"info": {"author": "Jesse Ward", "author_email": "jesse@jesseward.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5"], "description": "plex-lastfm-scrobbler\n=====================\n\n|Build Status|\n\nplex-lastfm-scrobbler provides a set of scripts that allow you to\nscrobble played audio items to Last.FM from the Plex Media Server\napplication. plex-lastfm-scrobbler was built to run across platforms,\nthough only tested on Linux.\n\nA few points\n\n-  plex-lastfm-scrobbler is an out of process tool. Meaning it is not a\n   Plex Media Server plug-in. This tool runs separately of your Plex\n   Media Server.\n-  Must be run on the Plex Media Server\n-  Parses Plex Media Server logs for the 'got played' string in the log\n   file.\n-  Does not differentiate between clients. Meaning all media played,\n   will be scrobbled while the script is running.\n-  Your plex-media-server logs must be set at DEBUG level (not VERBOSE)\n\nInstallation\n------------\n\n**Linux, OSX**\n\nIt is recommended (but not required) that you install this into a\nvirtualenvironment. This can be done as such.\n\n::\n\n    virtualenv ~/.virtualenvs/plex-lastfm-scrobbler\n    source ~/.virtualenvs/plex-lastfm-scrobbler/bin/activate\n\nInstalling via ``pip`` or ``easy_install`` is supported. For example\n:``pip install plex-scrobble`` or ``easy_install plex-scrobble``.\n\nIf you wish to run development builds, fetch and install the source from\nthe github repo.\n\n::\n\n    git clone https://github.com/jesseward/plex-lastfm-scrobbler.git\n    cd plex-lastfm-scrobbler\n    python setup.py install\n    pip install -r dev_requirements.txt # for mock/testing packages.\n\nAlternatively, you can fetch the latest zip from github\n\n::\n\n    wget https://github.com/jesseward/plex-lastfm-scrobbler/archive/master.zip\n    unzip master.zip\n    cd plex-lastfm-scrobbler-master\n    python setup.py install\n\nYou're done.\n\nConfiguration\n-------------\n\nRun the wizard to generate config file\n\n::\n\n    plex-scrobble --wizard\n\nThe plex-lastfm-scrobbler configuration file (.plex-scrobble.toml) is\ninstalled to ~/ . The following configuration values are available.\n\nIf you're running Plex Media Server on a Linux based operating system,\nthings should work out of the box.\n\n::\n\n    [lastfm]\n    # REQUIRED: You'll need to create a last.fm API application first. Do so here:\n    # http://www.last.fm/api/account/create\n    api_key = \"YOUR_API_KEY\"\n    api_secret = \"YOUR_API_SECRET\"\n    user_name = \"LAST_FM_USERNAME\"\n    password = \"LAST_FM_PASSWORD\"\n\n    [plex-scrobble]\n    # mediaserver_log_location references the log file location of the plex media server\n    # the default under /var/lib/... is the default install of plex media server on\n    # a Linux system. You may wish to change this value to reference your OS install.\n    # https://support.plex.tv/hc/en-us/articles/200250417-Plex-Media-Server-Log-Files\n    mediaserver_log_location = \"/var/lib/plexmediaserver/Library/Application Support/Plex Media Server/Logs/Plex Media Server.log\"\n\n    # REQUIRED: Where do you wish to write the plex-scrobble log file.\n    log_file = \"/tmp/plex-scrobble.log\"\n\n    # REQUIRED: mediaserver_url is the location of the http service exposed by Plex Media Server\n    # the default values should be 'ok', assuming you're running the plex scrobble\n    # script from the same server as your plex media server\n    mediaserver_url = \"http://localhost:32400\"\n\n    # REQUIRED: a python data struture that stores failed scrobbles. plex-scrobble\n    # will retry on a 60 minute interval, maximum of 10 attempts if last.fm is\n    # experiencing issues.\n    cache_location = \"/tmp/plex_scrobble.cache\"\n\n    # OPTIONAL: plex_token defines the plex token used to get metadata\n    # Note: This is required if you use localhost or 127.0.0.1 and Plex Media Server >= 1.1.0\n    # You will know if you see a line like this your log_file:\n    # [plex_scrobble.plex_monitor fetch_metadata] [ERROR] urllib2 error reading from http://localhost:32400/library/metadata/48080 'HTTP Error 401: Unauthorized'\n    # Here is how you can obtain your token https://support.plex.tv/hc/en-us/articles/204059436-Finding-your-account-token-X-Plex-Token\n    plex_token = \"YOUR_PLEX_TOKEN\"\n\nRunning\n-------\n\nIf you installed plex-lastfm-scrobble to a virtual environment, enable\nthe virtual env.\n\n::\n\n    source ~/.virtualenvs/plex-lastfm-scrobber/bin/activate\n\nrun the application\n\n::\n\n    nohup plex-scrobble &\n\nTroubleshooting & Known Issues\n------------------------------\n\n-  If your Plex client supports the universal transcoder (see \"Old and\n   Universal transcoder @\n   https://support.plex.tv/hc/en-us/articles/200250377-Transcoding-Media),\n   tracks will be scrobbled at the start of play. This is due to the way\n   that the universal transcoder writes to the Plex log file. See issue\n   11 (https://github.com/jesseward/plex-lastfm-scrobbler/issues/11) for\n   background discussion.\n-  We've seen instances when Plex Media Server does not report the\n   length of an audio file. This may occur before a full library analyze\n   has completed. When the track length is not reported by the Plex\n   Media Server, the song will not be scrobble. Try forcing the\n   \"Analyze\" audio library function. Further discussion found in issue\n   #9 https://github.com/jesseward/plex-lastfm-scrobbler/issues/9\n\nOr browse the github issues list to review old bugs or log a new\nproblem. See\nhttps://github.com/jesseward/plex-lastfm-scrobbler/issues?q\\ =\n\n.. |Build Status| image:: https://api.travis-ci.org/jesseward/plex-lastfm-scrobbler.svg?branch=master\n   :target: https://api.travis-ci.org/jesseward/plex-lastfm-scrobbler", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jesseward/plex-lastfm-scrobbler", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "plex-scrobble", "package_url": "https://pypi.org/project/plex-scrobble/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/plex-scrobble/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/jesseward/plex-lastfm-scrobbler"}, "release_url": "https://pypi.org/project/plex-scrobble/4.1.1/", "requires_dist": null, "requires_python": null, "summary": "Scrobble audio tracks played via Plex Media Center", "version": "4.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://api.travis-ci.org/jesseward/plex-lastfm-scrobbler\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b46a5997738b8c57406c6034cf297dabae1ad3a9/68747470733a2f2f6170692e7472617669732d63692e6f72672f6a65737365776172642f706c65782d6c617374666d2d7363726f62626c65722e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>plex-lastfm-scrobbler provides a set of scripts that allow you to\nscrobble played audio items to Last.FM from the Plex Media Server\napplication. plex-lastfm-scrobbler was built to run across platforms,\nthough only tested on Linux.</p>\n<p>A few points</p>\n<ul>\n<li>plex-lastfm-scrobbler is an out of process tool. Meaning it is not a\nPlex Media Server plug-in. This tool runs separately of your Plex\nMedia Server.</li>\n<li>Must be run on the Plex Media Server</li>\n<li>Parses Plex Media Server logs for the \u2018got played\u2019 string in the log\nfile.</li>\n<li>Does not differentiate between clients. Meaning all media played,\nwill be scrobbled while the script is running.</li>\n<li>Your plex-media-server logs must be set at DEBUG level (not VERBOSE)</li>\n</ul>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><strong>Linux, OSX</strong></p>\n<p>It is recommended (but not required) that you install this into a\nvirtualenvironment. This can be done as such.</p>\n<pre>virtualenv ~/.virtualenvs/plex-lastfm-scrobbler\nsource ~/.virtualenvs/plex-lastfm-scrobbler/bin/activate\n</pre>\n<p>Installing via <tt>pip</tt> or <tt>easy_install</tt> is supported. For example\n:<tt>pip install <span class=\"pre\">plex-scrobble</span></tt> or <tt>easy_install <span class=\"pre\">plex-scrobble</span></tt>.</p>\n<p>If you wish to run development builds, fetch and install the source from\nthe github repo.</p>\n<pre>git clone https://github.com/jesseward/plex-lastfm-scrobbler.git\ncd plex-lastfm-scrobbler\npython setup.py install\npip install -r dev_requirements.txt # for mock/testing packages.\n</pre>\n<p>Alternatively, you can fetch the latest zip from github</p>\n<pre>wget https://github.com/jesseward/plex-lastfm-scrobbler/archive/master.zip\nunzip master.zip\ncd plex-lastfm-scrobbler-master\npython setup.py install\n</pre>\n<p>You\u2019re done.</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Run the wizard to generate config file</p>\n<pre>plex-scrobble --wizard\n</pre>\n<p>The plex-lastfm-scrobbler configuration file (.plex-scrobble.toml) is\ninstalled to ~/ . The following configuration values are available.</p>\n<p>If you\u2019re running Plex Media Server on a Linux based operating system,\nthings should work out of the box.</p>\n<pre>[lastfm]\n# REQUIRED: You'll need to create a last.fm API application first. Do so here:\n# http://www.last.fm/api/account/create\napi_key = \"YOUR_API_KEY\"\napi_secret = \"YOUR_API_SECRET\"\nuser_name = \"LAST_FM_USERNAME\"\npassword = \"LAST_FM_PASSWORD\"\n\n[plex-scrobble]\n# mediaserver_log_location references the log file location of the plex media server\n# the default under /var/lib/... is the default install of plex media server on\n# a Linux system. You may wish to change this value to reference your OS install.\n# https://support.plex.tv/hc/en-us/articles/200250417-Plex-Media-Server-Log-Files\nmediaserver_log_location = \"/var/lib/plexmediaserver/Library/Application Support/Plex Media Server/Logs/Plex Media Server.log\"\n\n# REQUIRED: Where do you wish to write the plex-scrobble log file.\nlog_file = \"/tmp/plex-scrobble.log\"\n\n# REQUIRED: mediaserver_url is the location of the http service exposed by Plex Media Server\n# the default values should be 'ok', assuming you're running the plex scrobble\n# script from the same server as your plex media server\nmediaserver_url = \"http://localhost:32400\"\n\n# REQUIRED: a python data struture that stores failed scrobbles. plex-scrobble\n# will retry on a 60 minute interval, maximum of 10 attempts if last.fm is\n# experiencing issues.\ncache_location = \"/tmp/plex_scrobble.cache\"\n\n# OPTIONAL: plex_token defines the plex token used to get metadata\n# Note: This is required if you use localhost or 127.0.0.1 and Plex Media Server &gt;= 1.1.0\n# You will know if you see a line like this your log_file:\n# [plex_scrobble.plex_monitor fetch_metadata] [ERROR] urllib2 error reading from http://localhost:32400/library/metadata/48080 'HTTP Error 401: Unauthorized'\n# Here is how you can obtain your token https://support.plex.tv/hc/en-us/articles/204059436-Finding-your-account-token-X-Plex-Token\nplex_token = \"YOUR_PLEX_TOKEN\"\n</pre>\n</div>\n<div id=\"running\">\n<h2>Running</h2>\n<p>If you installed plex-lastfm-scrobble to a virtual environment, enable\nthe virtual env.</p>\n<pre>source ~/.virtualenvs/plex-lastfm-scrobber/bin/activate\n</pre>\n<p>run the application</p>\n<pre>nohup plex-scrobble &amp;\n</pre>\n</div>\n<div id=\"troubleshooting-known-issues\">\n<h2>Troubleshooting &amp; Known Issues</h2>\n<ul>\n<li>If your Plex client supports the universal transcoder (see \u201cOld and\nUniversal transcoder @\n<a href=\"https://support.plex.tv/hc/en-us/articles/200250377-Transcoding-Media\" rel=\"nofollow\">https://support.plex.tv/hc/en-us/articles/200250377-Transcoding-Media</a>),\ntracks will be scrobbled at the start of play. This is due to the way\nthat the universal transcoder writes to the Plex log file. See issue\n11 (<a href=\"https://github.com/jesseward/plex-lastfm-scrobbler/issues/11\" rel=\"nofollow\">https://github.com/jesseward/plex-lastfm-scrobbler/issues/11</a>) for\nbackground discussion.</li>\n<li>We\u2019ve seen instances when Plex Media Server does not report the\nlength of an audio file. This may occur before a full library analyze\nhas completed. When the track length is not reported by the Plex\nMedia Server, the song will not be scrobble. Try forcing the\n\u201cAnalyze\u201d audio library function. Further discussion found in issue\n#9 <a href=\"https://github.com/jesseward/plex-lastfm-scrobbler/issues/9\" rel=\"nofollow\">https://github.com/jesseward/plex-lastfm-scrobbler/issues/9</a></li>\n</ul>\n<p>Or browse the github issues list to review old bugs or log a new\nproblem. See\n<a href=\"https://github.com/jesseward/plex-lastfm-scrobbler/issues?q\" rel=\"nofollow\">https://github.com/jesseward/plex-lastfm-scrobbler/issues?q</a>=</p>\n</div>\n\n          </div>"}, "last_serial": 2653397, "releases": {"4.1.1": [{"comment_text": "", "digests": {"md5": "c908150bdc5433b20202520798a61f4e", "sha256": "3eb1d35b5767d98f9f1e001b49fa630a9da3238e61c16df65fa41b3ae3e43635"}, "downloads": -1, "filename": "plex-scrobble-4.1.1.tar.gz", "has_sig": false, "md5_digest": "c908150bdc5433b20202520798a61f4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10071, "upload_time": "2017-02-19T20:23:59", "upload_time_iso_8601": "2017-02-19T20:23:59.057678Z", "url": "https://files.pythonhosted.org/packages/1b/2a/688766ffafc4a82cf9bf8431cd082577ce0bb9332e51551ee931055f60cf/plex-scrobble-4.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c908150bdc5433b20202520798a61f4e", "sha256": "3eb1d35b5767d98f9f1e001b49fa630a9da3238e61c16df65fa41b3ae3e43635"}, "downloads": -1, "filename": "plex-scrobble-4.1.1.tar.gz", "has_sig": false, "md5_digest": "c908150bdc5433b20202520798a61f4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10071, "upload_time": "2017-02-19T20:23:59", "upload_time_iso_8601": "2017-02-19T20:23:59.057678Z", "url": "https://files.pythonhosted.org/packages/1b/2a/688766ffafc4a82cf9bf8431cd082577ce0bb9332e51551ee931055f60cf/plex-scrobble-4.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:28 2020"}