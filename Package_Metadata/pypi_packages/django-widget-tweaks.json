{"info": {"author": "Mikhail Korobov", "author_email": "kmike84@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "====================\ndjango-widget-tweaks\n====================\n\n.. image:: https://jazzband.co/static/img/badge.svg\n   :target: https://jazzband.co/\n   :alt: Jazzband\n\n.. image:: https://img.shields.io/pypi/v/django-widget-tweaks.svg\n   :target: https://pypi.python.org/pypi/django-widget-tweaks\n   :alt: PyPI Version\n\n.. image:: https://img.shields.io/travis/jazzband/django-widget-tweaks/master.svg\n   :target: http://travis-ci.org/jazzband/django-widget-tweaks\n   :alt: Build Status\n\n\nTweak the form field rendering in templates, not in python-level\nform definitions. Altering CSS classes and HTML attributes is supported.\n\nThat should be enough for designers to customize field presentation (using\nCSS and unobtrusive javascript) without touching python code.\n\nLicense is MIT.\n\nInstallation\n============\n\nYou can get Django Widget Tweaks by using pip::\n\n    $ pip install django-widget-tweaks\n\nTo enable `widget_tweaks` in your project you need to add it to `INSTALLED_APPS` in your projects\n`settings.py` file::\n\n    INSTALLED_APPS = [\n        ...\n        'widget_tweaks',\n        ...\n    ]\n\nUsage\n=====\n\nThis app provides two sets of tools that may be used together or standalone:\n\n1. a ``render_field`` template tag for customizing form fields by using an\n   HTML-like syntax.\n2. several template filters for customizing form field HTML attributes and CSS\n   classes\n\nThe ``render_field`` tag should be easier to use and should make form field\ncustomizations much easier for designers and front-end developers.\n\nThe template filters are more powerful than the ``render_field`` tag, but they\nuse a more complex and less HTML-like syntax.\n\nrender_field\n------------\n\nThis is a template tag that can be used as an alternative to aforementioned\nfilters.  This template tag renders a field using a syntax similar to plain\nHTML attributes.\n\nExample::\n\n    {% load widget_tweaks %}\n\n    <!-- change input type (e.g. to HTML5) -->\n    {% render_field form.search_query type=\"search\" %}\n\n    <!-- add/change several attributes -->\n    {% render_field form.text rows=\"20\" cols=\"20\" title=\"Hello, world!\" %}\n\n    <!-- append to an attribute -->\n    {% render_field form.title class+=\"css_class_1 css_class_2\" %}\n\n    <!-- template variables can be used as attribute values -->\n    {% render_field form.text placeholder=form.text.label %}\n\n    <!-- double colon -->\n    {% render_field form.search_query v-bind::class=\"{active:isActive}\" %}\n\n\nFor fields rendered with ``{% render_field %}`` tag it is possible\nto set error class and required fields class by using\n``WIDGET_ERROR_CLASS`` and  ``WIDGET_REQUIRED_CLASS`` template variables::\n\n    {% with WIDGET_ERROR_CLASS='my_error' WIDGET_REQUIRED_CLASS='my_required' %}\n        {% render_field form.field1 %}\n        {% render_field form.field2 %}\n        {% render_field form.field3 %}\n    {% endwith %}\n\nYou can be creative with these variables: e.g. a context processor could\nset a default CSS error class on all fields rendered by\n``{% render_field %}``.\n\n\nattr\n----\nAdds or replaces any single html attribute for the form field.\n\nExamples::\n\n    {% load widget_tweaks %}\n\n    <!-- change input type (e.g. to HTML5) -->\n    {{ form.search_query|attr:\"type:search\" }}\n\n    <!-- add/change several attributes -->\n    {{ form.text|attr:\"rows:20\"|attr:\"cols:20\"|attr:\"title:Hello, world!\" }}\n\n    <!-- attributes without parameters -->\n    {{ form.search_query|attr:\"autofocus\" }}\n\n\n    <!-- attributes with double colon Vuejs output: v-bind:class=\"{active:ValueEnabled}\" -->\n    {{ form.search_query|attr:\"v-bind::class:{active:ValueEnabled}\" }}\n\n\nadd_class\n---------\n\nAdds CSS class to field element. Split classes by whitespace in order to add\nseveral classes at once.\n\nExample::\n\n    {% load widget_tweaks %}\n\n    <!-- add 2 extra css classes to field element -->\n    {{ form.title|add_class:\"css_class_1 css_class_2\" }}\n\nset_data\n--------\n\nSets HTML5 data attribute ( http://ejohn.org/blog/html-5-data-attributes/ ).\nUseful for unobtrusive javascript. It is just a shortcut for 'attr' filter\nthat prepends attribute names with 'data-' string.\n\nExample::\n\n    {% load widget_tweaks %}\n\n    <!-- data-filters:\"OverText\" will be added to input field -->\n    {{ form.title|set_data:\"filters:OverText\" }}\n\nappend_attr\n-----------\n\nAppends attribute value with extra data.\n\nExample::\n\n    {% load widget_tweaks %}\n\n    <!-- add 2 extra css classes to field element -->\n    {{ form.title|append_attr:\"class:css_class_1 css_class_2\" }}\n\n'add_class' filter is just a shortcut for 'append_attr' filter that\nadds values to the 'class' attribute.\n\n\nremove_attr\n-----------\nRemoves any single html attribute for the form field.\n\nExample::\n\n    {% load widget_tweaks %}\n\n    <!-- removes autofocus attribute from field element -->\n    {{ form.title|remove_attr:\"autofocus\" }}\n\n\nadd_label_class\n---------------\n\nThe same as `add_class` but adds css class to form labels.\n\nExample::\n\n    {% load widget_tweaks %}\n\n    <!-- add 2 extra css classes to field label element -->\n    {{ form.title|add_label_class:\"label_class_1 label_class_2\" }}\n\n\nadd_error_class\n---------------\n\nThe same as 'add_class' but adds css class only if validation failed for\nthe field (field.errors is not empty).\n\nExample::\n\n    {% load widget_tweaks %}\n\n    <!-- add 'error-border' css class on field error -->\n    {{ form.title|add_error_class:\"error-border\" }}\n\n\nadd_error_attr\n--------------\n\nThe same as 'attr' but sets an attribute only if validation failed for\nthe field (field.errors is not empty). This can be useful when dealing\nwith accessibility::\n\n    {% load widget_tweaks %}\n\n    <!-- add aria-invalid=\"true\" attribute on field error -->\n    {{ form.title|add_error_attr:\"aria-invalid:true\" }}\n\nadd_required_class\n------------------\n\nThe same as 'add_error_class' adds css class only for required field.\n\nExample::\n\n    {% load widget_tweaks %}\n\n    <!-- add 'is-required' css class on field required -->\n    {{ form.title|add_required_class:\"is-required\" }}\n\n\nfield_type and widget_type\n--------------------------\n\n``'field_type'`` and ``'widget_type'`` are template filters that return\nfield class name and field widget class name (in lower case).\n\nExample::\n\n    {% load widget_tweaks %}\n\n    <div class=\"field {{ field|field_type }} {{ field|widget_type }} {{ field.html_name }}\">\n        {{ field }}\n    </div>\n\nOutput::\n\n    <div class=\"field charfield textinput name\">\n        <input id=\"id_name\" type=\"text\" name=\"name\" maxlength=\"100\" />\n    </div>\n\n\nMixing render_field and filters\n===============================\n\nThe render_field tag and filters mentioned above can be mixed.\n\nExample::\n\n    {% render_field form.category|append_attr:\"readonly:readonly\" type=\"text\" placeholder=\"Category\" %}\n\n\nreturns::\n\n    <input name=\"category\" placeholder=\"Profession\" readonly=\"readonly\" type=\"text\">\n\n\nFilter chaining\n===============\n\nThe order django-widget-tweaks filters apply may seem counter-intuitive\n(leftmost filter wins)::\n\n    {{ form.simple|attr:\"foo:bar\"|attr:\"foo:baz\" }}\n\nreturns::\n\n    <input foo=\"bar\" type=\"text\" name=\"simple\" id=\"id_simple\" />\n\nIt is not a bug, it is a feature that enables creating reusable templates\nwith overridable defaults.\n\nReusable field template example::\n\n    {# inc/field.html #}\n    {% load widget_tweaks %}\n    <div>{{ field|attr:\"foo:default_foo\" }}</div>\n\nExample usage::\n\n    {# my_template.html #}\n    {% load widget_tweaks %}\n    <form method='POST' action=''> {% csrf_token %}\n        {% include \"inc/field.html\" with field=form.title %}\n        {% include \"inc/field.html\" with field=form.description|attr:\"foo:non_default_foo\" %}\n    </form>\n\nWith 'rightmost filter wins' rule it wouldn't be possible to override\n``|attr:\"foo:default_foo\"`` in main template.\n\nContributing\n============\n\nIf you've found a bug, implemented a feature or have a suggestion,\ndo not hesitate to contact me, fire an issue or send a pull request.\n\n* Source code: https://github.com/jazzband/django-widget-tweaks/\n* Bug tracker: https://github.com/jazzband/django-widget-tweaks/issues\n\nTesting\n-------\n\nMake sure you have `tox <http://tox.testrun.org/>`_ installed, then type\n\n::\n\n    tox\n\nfrom the source checkout.\n\nNOT SUPPORTED\n=============\n\nMultiWidgets: SplitDateTimeWidget, SplitHiddenDateTimeWidget\n\n\nChanges\n=======\n\n\n1.4.8 (2020-03-12)\n------------------\n\n* Fix Release version\n\n\n1.4.7 (2020-03-10)\n------------------\n\n* Fix Travis deployment to Jazzband site\n\n\n1.4.6 (2020-03-09)\n------------------\n\n* Feature remove attribute from field\n* Added documentation for remove_attr feature\n* Reformat code with black for PEP8 compatibility \n* More consistent tox configuration\n* adding a new templatetag, unittest and documentation\n* Deprecate Python 2.7 support\n* Use automatic formatting for all files\n\n\n1.4.5 (2019-06-08)\n------------------\n\n* Fix rST formatting errors.\n\n\n1.4.4 (2019-06-05)\n------------------\n\n* Add support for type attr.\n* Add Python 3.7 and drop Python 3.3 support.\n* Add support for double colon syntax.\n\n\n1.4.3 (2018-09-6)\n------------------\n\n* Added add_label_class filter for CSS on form labels\n* Removed compatibility code for unsupported Django versions\n* Fixed support for non-value attributes in Django < 1.8\n* Support non-value attributes in HTML5 by setting their value to True\n\n\n1.4.2 (2018-03-19)\n------------------\n\n* update readme to make installation more clear\n* shallow copy field before updating attributes\n* drop Python 2.6 and Python 3.2 support\n* always cast the result of render to a string\n* fix import for django >= 2.0\n* moved to jazzband\n\n\n1.4.1 (2015-06-29)\n------------------\n\n* fixed a regression in django-widget-tweaks v1.4\n  (the field is no longer deep copied).\n\n1.4 (2015-06-27)\n----------------\n\n* Django 1.7, 1.8 and 1.9 support;\n* setup.py is switched to setuptools;\n* testing improvements;\n* Python 3.4 support is added;\n* Python 2.5 is not longer supported;\n* bitbucket repository is no longer supported (development is moved to github).\n\n1.3 (2013-04-05)\n----------------\n\n* added support for ``WIDGET_ERROR_CLASS`` and  ``WIDGET_REQUIRED_CLASS``\n  template variables that affect ``{% render_field %}``.\n\n1.2 (2013-03-23)\n----------------\n\n* new ``add_error_attr`` template filter;\n* testing improvements.\n\n1.1.2 (2012-06-06)\n------------------\n\n* support for template variables is added to ``render_field`` tag;\n* new ``field_type`` and ``widget_type`` filters.\n\n1.1.1 (2012-03-22)\n------------------\n\n* some issues with ``render_field`` tag are fixed.\n\n1.1 (2012-03-22)\n----------------\n\n* ``render_field`` template tag.\n\n1.0 (2012-02-06)\n----------------\n\n* filters return empty strings instead of raising exceptions if field is missing;\n* test running improvements;\n* python 3 support;\n* undocumented 'behave' filter is removed.\n\n0.3 (2011-03-04)\n----------------\n\n* ``add_error_class`` filter.\n\n0.2.1 (2011-02-03)\n------------------\n\n* Attributes customized in widgets are preserved;\n* no more extra whitespaces;\n* tests;\n\n0.1 (2011-01-12)\n----------------\n\nInitial release.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jazzband/django-widget-tweaks", "keywords": "", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "django-widget-tweaks", "package_url": "https://pypi.org/project/django-widget-tweaks/", "platform": "", "project_url": "https://pypi.org/project/django-widget-tweaks/", "project_urls": {"Homepage": "https://github.com/jazzband/django-widget-tweaks"}, "release_url": "https://pypi.org/project/django-widget-tweaks/1.4.8/", "requires_dist": null, "requires_python": "", "summary": "Tweak the form field rendering in templates, not in python-level form definitions.", "version": "1.4.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://jazzband.co/\" rel=\"nofollow\"><img alt=\"Jazzband\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a66f16648c79cb7518df5c15cbffb437af23debc/68747470733a2f2f6a617a7a62616e642e636f2f7374617469632f696d672f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/django-widget-tweaks\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f02fcb06b2810d6987f42a0c476d842920c338df/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d7769646765742d747765616b732e737667\"></a>\n<a href=\"http://travis-ci.org/jazzband/django-widget-tweaks\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/79f2a5081c561e98cbd0938a337c3979a00f3094/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6a617a7a62616e642f646a616e676f2d7769646765742d747765616b732f6d61737465722e737667\"></a>\n<p>Tweak the form field rendering in templates, not in python-level\nform definitions. Altering CSS classes and HTML attributes is supported.</p>\n<p>That should be enough for designers to customize field presentation (using\nCSS and unobtrusive javascript) without touching python code.</p>\n<p>License is MIT.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can get Django Widget Tweaks by using pip:</p>\n<pre>$ pip install django-widget-tweaks\n</pre>\n<p>To enable <cite>widget_tweaks</cite> in your project you need to add it to <cite>INSTALLED_APPS</cite> in your projects\n<cite>settings.py</cite> file:</p>\n<pre>INSTALLED_APPS = [\n    ...\n    'widget_tweaks',\n    ...\n]\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>This app provides two sets of tools that may be used together or standalone:</p>\n<ol>\n<li>a <tt>render_field</tt> template tag for customizing form fields by using an\nHTML-like syntax.</li>\n<li>several template filters for customizing form field HTML attributes and CSS\nclasses</li>\n</ol>\n<p>The <tt>render_field</tt> tag should be easier to use and should make form field\ncustomizations much easier for designers and front-end developers.</p>\n<p>The template filters are more powerful than the <tt>render_field</tt> tag, but they\nuse a more complex and less HTML-like syntax.</p>\n<div id=\"render-field\">\n<h3>render_field</h3>\n<p>This is a template tag that can be used as an alternative to aforementioned\nfilters.  This template tag renders a field using a syntax similar to plain\nHTML attributes.</p>\n<p>Example:</p>\n<pre>{% load widget_tweaks %}\n\n&lt;!-- change input type (e.g. to HTML5) --&gt;\n{% render_field form.search_query type=\"search\" %}\n\n&lt;!-- add/change several attributes --&gt;\n{% render_field form.text rows=\"20\" cols=\"20\" title=\"Hello, world!\" %}\n\n&lt;!-- append to an attribute --&gt;\n{% render_field form.title class+=\"css_class_1 css_class_2\" %}\n\n&lt;!-- template variables can be used as attribute values --&gt;\n{% render_field form.text placeholder=form.text.label %}\n\n&lt;!-- double colon --&gt;\n{% render_field form.search_query v-bind::class=\"{active:isActive}\" %}\n</pre>\n<p>For fields rendered with <tt>{% render_field %}</tt> tag it is possible\nto set error class and required fields class by using\n<tt>WIDGET_ERROR_CLASS</tt> and  <tt>WIDGET_REQUIRED_CLASS</tt> template variables:</p>\n<pre>{% with WIDGET_ERROR_CLASS='my_error' WIDGET_REQUIRED_CLASS='my_required' %}\n    {% render_field form.field1 %}\n    {% render_field form.field2 %}\n    {% render_field form.field3 %}\n{% endwith %}\n</pre>\n<p>You can be creative with these variables: e.g. a context processor could\nset a default CSS error class on all fields rendered by\n<tt>{% render_field %}</tt>.</p>\n</div>\n<div id=\"attr\">\n<h3>attr</h3>\n<p>Adds or replaces any single html attribute for the form field.</p>\n<p>Examples:</p>\n<pre>{% load widget_tweaks %}\n\n&lt;!-- change input type (e.g. to HTML5) --&gt;\n{{ form.search_query|attr:\"type:search\" }}\n\n&lt;!-- add/change several attributes --&gt;\n{{ form.text|attr:\"rows:20\"|attr:\"cols:20\"|attr:\"title:Hello, world!\" }}\n\n&lt;!-- attributes without parameters --&gt;\n{{ form.search_query|attr:\"autofocus\" }}\n\n\n&lt;!-- attributes with double colon Vuejs output: v-bind:class=\"{active:ValueEnabled}\" --&gt;\n{{ form.search_query|attr:\"v-bind::class:{active:ValueEnabled}\" }}\n</pre>\n</div>\n<div id=\"add-class\">\n<h3>add_class</h3>\n<p>Adds CSS class to field element. Split classes by whitespace in order to add\nseveral classes at once.</p>\n<p>Example:</p>\n<pre>{% load widget_tweaks %}\n\n&lt;!-- add 2 extra css classes to field element --&gt;\n{{ form.title|add_class:\"css_class_1 css_class_2\" }}\n</pre>\n</div>\n<div id=\"set-data\">\n<h3>set_data</h3>\n<p>Sets HTML5 data attribute ( <a href=\"http://ejohn.org/blog/html-5-data-attributes/\" rel=\"nofollow\">http://ejohn.org/blog/html-5-data-attributes/</a> ).\nUseful for unobtrusive javascript. It is just a shortcut for \u2018attr\u2019 filter\nthat prepends attribute names with \u2018data-\u2018 string.</p>\n<p>Example:</p>\n<pre>{% load widget_tweaks %}\n\n&lt;!-- data-filters:\"OverText\" will be added to input field --&gt;\n{{ form.title|set_data:\"filters:OverText\" }}\n</pre>\n</div>\n<div id=\"append-attr\">\n<h3>append_attr</h3>\n<p>Appends attribute value with extra data.</p>\n<p>Example:</p>\n<pre>{% load widget_tweaks %}\n\n&lt;!-- add 2 extra css classes to field element --&gt;\n{{ form.title|append_attr:\"class:css_class_1 css_class_2\" }}\n</pre>\n<p>\u2018add_class\u2019 filter is just a shortcut for \u2018append_attr\u2019 filter that\nadds values to the \u2018class\u2019 attribute.</p>\n</div>\n<div id=\"remove-attr\">\n<h3>remove_attr</h3>\n<p>Removes any single html attribute for the form field.</p>\n<p>Example:</p>\n<pre>{% load widget_tweaks %}\n\n&lt;!-- removes autofocus attribute from field element --&gt;\n{{ form.title|remove_attr:\"autofocus\" }}\n</pre>\n</div>\n<div id=\"add-label-class\">\n<h3>add_label_class</h3>\n<p>The same as <cite>add_class</cite> but adds css class to form labels.</p>\n<p>Example:</p>\n<pre>{% load widget_tweaks %}\n\n&lt;!-- add 2 extra css classes to field label element --&gt;\n{{ form.title|add_label_class:\"label_class_1 label_class_2\" }}\n</pre>\n</div>\n<div id=\"add-error-class\">\n<h3>add_error_class</h3>\n<p>The same as \u2018add_class\u2019 but adds css class only if validation failed for\nthe field (field.errors is not empty).</p>\n<p>Example:</p>\n<pre>{% load widget_tweaks %}\n\n&lt;!-- add 'error-border' css class on field error --&gt;\n{{ form.title|add_error_class:\"error-border\" }}\n</pre>\n</div>\n<div id=\"add-error-attr\">\n<h3>add_error_attr</h3>\n<p>The same as \u2018attr\u2019 but sets an attribute only if validation failed for\nthe field (field.errors is not empty). This can be useful when dealing\nwith accessibility:</p>\n<pre>{% load widget_tweaks %}\n\n&lt;!-- add aria-invalid=\"true\" attribute on field error --&gt;\n{{ form.title|add_error_attr:\"aria-invalid:true\" }}\n</pre>\n</div>\n<div id=\"add-required-class\">\n<h3>add_required_class</h3>\n<p>The same as \u2018add_error_class\u2019 adds css class only for required field.</p>\n<p>Example:</p>\n<pre>{% load widget_tweaks %}\n\n&lt;!-- add 'is-required' css class on field required --&gt;\n{{ form.title|add_required_class:\"is-required\" }}\n</pre>\n</div>\n<div id=\"field-type-and-widget-type\">\n<h3>field_type and widget_type</h3>\n<p><tt>'field_type'</tt> and <tt>'widget_type'</tt> are template filters that return\nfield class name and field widget class name (in lower case).</p>\n<p>Example:</p>\n<pre>{% load widget_tweaks %}\n\n&lt;div class=\"field {{ field|field_type }} {{ field|widget_type }} {{ field.html_name }}\"&gt;\n    {{ field }}\n&lt;/div&gt;\n</pre>\n<p>Output:</p>\n<pre>&lt;div class=\"field charfield textinput name\"&gt;\n    &lt;input id=\"id_name\" type=\"text\" name=\"name\" maxlength=\"100\" /&gt;\n&lt;/div&gt;\n</pre>\n</div>\n</div>\n<div id=\"mixing-render-field-and-filters\">\n<h2>Mixing render_field and filters</h2>\n<p>The render_field tag and filters mentioned above can be mixed.</p>\n<p>Example:</p>\n<pre>{% render_field form.category|append_attr:\"readonly:readonly\" type=\"text\" placeholder=\"Category\" %}\n</pre>\n<p>returns:</p>\n<pre>&lt;input name=\"category\" placeholder=\"Profession\" readonly=\"readonly\" type=\"text\"&gt;\n</pre>\n</div>\n<div id=\"filter-chaining\">\n<h2>Filter chaining</h2>\n<p>The order django-widget-tweaks filters apply may seem counter-intuitive\n(leftmost filter wins):</p>\n<pre>{{ form.simple|attr:\"foo:bar\"|attr:\"foo:baz\" }}\n</pre>\n<p>returns:</p>\n<pre>&lt;input foo=\"bar\" type=\"text\" name=\"simple\" id=\"id_simple\" /&gt;\n</pre>\n<p>It is not a bug, it is a feature that enables creating reusable templates\nwith overridable defaults.</p>\n<p>Reusable field template example:</p>\n<pre>{# inc/field.html #}\n{% load widget_tweaks %}\n&lt;div&gt;{{ field|attr:\"foo:default_foo\" }}&lt;/div&gt;\n</pre>\n<p>Example usage:</p>\n<pre>{# my_template.html #}\n{% load widget_tweaks %}\n&lt;form method='POST' action=''&gt; {% csrf_token %}\n    {% include \"inc/field.html\" with field=form.title %}\n    {% include \"inc/field.html\" with field=form.description|attr:\"foo:non_default_foo\" %}\n&lt;/form&gt;\n</pre>\n<p>With \u2018rightmost filter wins\u2019 rule it wouldn\u2019t be possible to override\n<tt><span class=\"pre\">|attr:\"foo:default_foo\"</span></tt> in main template.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>If you\u2019ve found a bug, implemented a feature or have a suggestion,\ndo not hesitate to contact me, fire an issue or send a pull request.</p>\n<ul>\n<li>Source code: <a href=\"https://github.com/jazzband/django-widget-tweaks/\" rel=\"nofollow\">https://github.com/jazzband/django-widget-tweaks/</a></li>\n<li>Bug tracker: <a href=\"https://github.com/jazzband/django-widget-tweaks/issues\" rel=\"nofollow\">https://github.com/jazzband/django-widget-tweaks/issues</a></li>\n</ul>\n<div id=\"testing\">\n<h3>Testing</h3>\n<p>Make sure you have <a href=\"http://tox.testrun.org/\" rel=\"nofollow\">tox</a> installed, then type</p>\n<pre>tox\n</pre>\n<p>from the source checkout.</p>\n</div>\n</div>\n<div id=\"not-supported\">\n<h2>NOT SUPPORTED</h2>\n<p>MultiWidgets: SplitDateTimeWidget, SplitHiddenDateTimeWidget</p>\n</div>\n<div id=\"changes\">\n<h2>Changes</h2>\n<div id=\"id1\">\n<h3>1.4.8 (2020-03-12)</h3>\n<ul>\n<li>Fix Release version</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.4.7 (2020-03-10)</h3>\n<ul>\n<li>Fix Travis deployment to Jazzband site</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.4.6 (2020-03-09)</h3>\n<ul>\n<li>Feature remove attribute from field</li>\n<li>Added documentation for remove_attr feature</li>\n<li>Reformat code with black for PEP8 compatibility</li>\n<li>More consistent tox configuration</li>\n<li>adding a new templatetag, unittest and documentation</li>\n<li>Deprecate Python 2.7 support</li>\n<li>Use automatic formatting for all files</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.4.5 (2019-06-08)</h3>\n<ul>\n<li>Fix rST formatting errors.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.4.4 (2019-06-05)</h3>\n<ul>\n<li>Add support for type attr.</li>\n<li>Add Python 3.7 and drop Python 3.3 support.</li>\n<li>Add support for double colon syntax.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>1.4.3 (2018-09-6)</h3>\n<ul>\n<li>Added add_label_class filter for CSS on form labels</li>\n<li>Removed compatibility code for unsupported Django versions</li>\n<li>Fixed support for non-value attributes in Django &lt; 1.8</li>\n<li>Support non-value attributes in HTML5 by setting their value to True</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>1.4.2 (2018-03-19)</h3>\n<ul>\n<li>update readme to make installation more clear</li>\n<li>shallow copy field before updating attributes</li>\n<li>drop Python 2.6 and Python 3.2 support</li>\n<li>always cast the result of render to a string</li>\n<li>fix import for django &gt;= 2.0</li>\n<li>moved to jazzband</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>1.4.1 (2015-06-29)</h3>\n<ul>\n<li>fixed a regression in django-widget-tweaks v1.4\n(the field is no longer deep copied).</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>1.4 (2015-06-27)</h3>\n<ul>\n<li>Django 1.7, 1.8 and 1.9 support;</li>\n<li>setup.py is switched to setuptools;</li>\n<li>testing improvements;</li>\n<li>Python 3.4 support is added;</li>\n<li>Python 2.5 is not longer supported;</li>\n<li>bitbucket repository is no longer supported (development is moved to github).</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>1.3 (2013-04-05)</h3>\n<ul>\n<li>added support for <tt>WIDGET_ERROR_CLASS</tt> and  <tt>WIDGET_REQUIRED_CLASS</tt>\ntemplate variables that affect <tt>{% render_field %}</tt>.</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>1.2 (2013-03-23)</h3>\n<ul>\n<li>new <tt>add_error_attr</tt> template filter;</li>\n<li>testing improvements.</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>1.1.2 (2012-06-06)</h3>\n<ul>\n<li>support for template variables is added to <tt>render_field</tt> tag;</li>\n<li>new <tt>field_type</tt> and <tt>widget_type</tt> filters.</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>1.1.1 (2012-03-22)</h3>\n<ul>\n<li>some issues with <tt>render_field</tt> tag are fixed.</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>1.1 (2012-03-22)</h3>\n<ul>\n<li><tt>render_field</tt> template tag.</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>1.0 (2012-02-06)</h3>\n<ul>\n<li>filters return empty strings instead of raising exceptions if field is missing;</li>\n<li>test running improvements;</li>\n<li>python 3 support;</li>\n<li>undocumented \u2018behave\u2019 filter is removed.</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>0.3 (2011-03-04)</h3>\n<ul>\n<li><tt>add_error_class</tt> filter.</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3>0.2.1 (2011-02-03)</h3>\n<ul>\n<li>Attributes customized in widgets are preserved;</li>\n<li>no more extra whitespaces;</li>\n<li>tests;</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3>0.1 (2011-01-12)</h3>\n<p>Initial release.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6822297, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "611ae878898713b96664dfdd9c083698", "sha256": "f3567a4d319a835c18256b226bd2576e1cd975d918de8f1a0a5dd5340bb6b068"}, "downloads": -1, "filename": "django-widget-tweaks-0.1.tar.gz", "has_sig": false, "md5_digest": "611ae878898713b96664dfdd9c083698", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2657, "upload_time": "2011-01-12T20:02:00", "upload_time_iso_8601": "2011-01-12T20:02:00.689387Z", "url": "https://files.pythonhosted.org/packages/ae/55/0fdf00396591c03263a1317bf9ca1e29993c46678841f8ca738348f5b573/django-widget-tweaks-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e510fc5b449665ea54e4cf4ed2dc430b", "sha256": "e1c1ce3a2026ef29fac47a168f26e855be2d0ab9ff51629fc2d9f40e3c2691b7"}, "downloads": -1, "filename": "django-widget-tweaks-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e510fc5b449665ea54e4cf4ed2dc430b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2714, "upload_time": "2011-01-13T08:39:40", "upload_time_iso_8601": "2011-01-13T08:39:40.695477Z", "url": "https://files.pythonhosted.org/packages/0a/84/0570eee98b68a4af293522f7a6f532524d673f4386d60bc4819f728d0c7c/django-widget-tweaks-0.1.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "8ca95da4a474d7440aa77650d5bd0859", "sha256": "182cf79fde9ff6ede3f1a672e3c1c37fca92110a33563fbfb4812479c2c84f91"}, "downloads": -1, "filename": "django-widget-tweaks-0.2.tar.gz", "has_sig": false, "md5_digest": "8ca95da4a474d7440aa77650d5bd0859", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3211, "upload_time": "2011-02-02T23:13:19", "upload_time_iso_8601": "2011-02-02T23:13:19.399858Z", "url": "https://files.pythonhosted.org/packages/06/57/80c1ecf5b0b0ea37c6981322e439d0b90fcf110eee7855c32a6b59ddd465/django-widget-tweaks-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "26b6936411daac5cd52f0913b1b14436", "sha256": "0fc55da0d511bc79de5eb067bc0941c003ae4f9129b269302bc8ba7b94f75d55"}, "downloads": -1, "filename": "django-widget-tweaks-0.2.1.tar.gz", "has_sig": false, "md5_digest": "26b6936411daac5cd52f0913b1b14436", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3403, "upload_time": "2011-02-03T11:03:24", "upload_time_iso_8601": "2011-02-03T11:03:24.938453Z", "url": "https://files.pythonhosted.org/packages/10/52/52eb5384d27812315d7b52a71a27f11e78560563dcf05d7c025bfbf5ed45/django-widget-tweaks-0.2.1.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "c7ae679705adca21a1ce037dae188ab3", "sha256": "d383f4d70e75b36b75fd1d0f13245f88080cc99ab0234545d7c4f6207f9a6a9e"}, "downloads": -1, "filename": "django-widget-tweaks-0.3.tar.gz", "has_sig": false, "md5_digest": "c7ae679705adca21a1ce037dae188ab3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3607, "upload_time": "2011-03-04T18:40:09", "upload_time_iso_8601": "2011-03-04T18:40:09.466640Z", "url": "https://files.pythonhosted.org/packages/88/8f/c9a1d4db7e2f4ef036245a49c25d5558c9fe8f5f690da7a27542ec3552ed/django-widget-tweaks-0.3.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "ab7cfbe8949e2c167239276514a9d64f", "sha256": "11a1f5867fb1f07d8c76cc6bf7d9e0a99620d7b540662b7fd082f595aff58247"}, "downloads": -1, "filename": "django-widget-tweaks-1.0.tar.gz", "has_sig": false, "md5_digest": "ab7cfbe8949e2c167239276514a9d64f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5120, "upload_time": "2012-03-05T22:17:45", "upload_time_iso_8601": "2012-03-05T22:17:45.574531Z", "url": "https://files.pythonhosted.org/packages/1b/96/8f3d7f0d5d853dc9e6c703f7894c4c414bd05a6a4d39b1fd8e38b5450519/django-widget-tweaks-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "3004ff9f963d53a226a24a9bbd074954", "sha256": "86eb74fe9be479f02c243fd29696f4904690833d56d9fc3b3327301ddbaf940d"}, "downloads": -1, "filename": "django-widget-tweaks-1.1.tar.gz", "has_sig": false, "md5_digest": "3004ff9f963d53a226a24a9bbd074954", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6248, "upload_time": "2012-03-21T22:32:33", "upload_time_iso_8601": "2012-03-21T22:32:33.622790Z", "url": "https://files.pythonhosted.org/packages/e0/76/b8c6eeb2e850e5a38a8a02f9c827d12212e3b37dfd7edf019216daf4e06a/django-widget-tweaks-1.1.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "adebcb1cb058817783d9d1d9e38c3668", "sha256": "99699c5998c6bcae734407be10b01dd2e485b75b722ac82fd27ce3f29ab6e63a"}, "downloads": -1, "filename": "django-widget-tweaks-1.1.1.tar.gz", "has_sig": false, "md5_digest": "adebcb1cb058817783d9d1d9e38c3668", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6409, "upload_time": "2012-03-22T15:07:54", "upload_time_iso_8601": "2012-03-22T15:07:54.736814Z", "url": "https://files.pythonhosted.org/packages/79/ab/9864b5c62af22f880f727397a9e18dda389b5a7acef1a4804d373b0edd29/django-widget-tweaks-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "b7658d26dca0885c2bf922ec4903bfc6", "sha256": "51bdd2344c7a975d3fb89c70fb94a59e10ebd4774b351ea261216eab1fd82dc7"}, "downloads": -1, "filename": "django-widget-tweaks-1.1.2.tar.gz", "has_sig": false, "md5_digest": "b7658d26dca0885c2bf922ec4903bfc6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6997, "upload_time": "2012-06-06T08:58:09", "upload_time_iso_8601": "2012-06-06T08:58:09.415525Z", "url": "https://files.pythonhosted.org/packages/e7/9c/2abe18f14bc491cea00eb1425a2046c32d1f13d8b7f64964e315794314b2/django-widget-tweaks-1.1.2.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "cd71b265b564aa1594556ebbae2a7c0e", "sha256": "e21c5792bb85e5947b36c7479a67da49520cd3cb0a42530900125de59559d119"}, "downloads": -1, "filename": "django-widget-tweaks-1.2.tar.gz", "has_sig": false, "md5_digest": "cd71b265b564aa1594556ebbae2a7c0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8214, "upload_time": "2013-03-22T23:54:47", "upload_time_iso_8601": "2013-03-22T23:54:47.508096Z", "url": "https://files.pythonhosted.org/packages/3d/8b/d9b31976db19717f0c8964c37b44607c4c57e3d30b4fc1c4ab3c87569fb1/django-widget-tweaks-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "b8c5e7458e4421496c308973c15396cf", "sha256": "b85e673c235510b83b265af6e6eaea59a241c8f532ef1fa237bb183d162f2271"}, "downloads": -1, "filename": "django-widget-tweaks-1.3.tar.gz", "has_sig": false, "md5_digest": "b8c5e7458e4421496c308973c15396cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8680, "upload_time": "2013-04-04T19:29:16", "upload_time_iso_8601": "2013-04-04T19:29:16.070796Z", "url": "https://files.pythonhosted.org/packages/96/6e/a364e3381421780f5b155da1cde05d689862b1da60527d66c634857053b9/django-widget-tweaks-1.3.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "a96cefd9f255aeff27e817dbeaa14cb1", "sha256": "dff527598be686fce17e474f4ab7fae735dd0112ce08560b21fe689817f385fe"}, "downloads": -1, "filename": "django_widget_tweaks-1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a96cefd9f255aeff27e817dbeaa14cb1", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 12797, "upload_time": "2015-06-26T23:17:04", "upload_time_iso_8601": "2015-06-26T23:17:04.895043Z", "url": "https://files.pythonhosted.org/packages/8b/a5/bb66e149ef873eb08fc217867e30ff95175be967a5e37f4a615672b2c3a8/django_widget_tweaks-1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7a7debc9dc540e73aac38cb009b2f5b", "sha256": "515ad15a4b7c32018722b03f4e5405eeaa2b344da4bb942fc3f43dab676afb24"}, "downloads": -1, "filename": "django-widget-tweaks-1.4.tar.gz", "has_sig": false, "md5_digest": "b7a7debc9dc540e73aac38cb009b2f5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9638, "upload_time": "2015-06-26T23:16:40", "upload_time_iso_8601": "2015-06-26T23:16:40.106781Z", "url": "https://files.pythonhosted.org/packages/36/b4/a5d7440f207b85b5eaf15075ef11f1deef9414bcd4fe1f8a0753d540b587/django-widget-tweaks-1.4.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "d92c0f03484369b6eaa50f8bdd550de5", "sha256": "0e8e3b7ebd1aafb2250d0f7614cfbad27017b3c727858ee3aee23748dd1f147d"}, "downloads": -1, "filename": "django_widget_tweaks-1.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d92c0f03484369b6eaa50f8bdd550de5", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 12724, "upload_time": "2015-06-29T11:36:55", "upload_time_iso_8601": "2015-06-29T11:36:55.540711Z", "url": "https://files.pythonhosted.org/packages/4c/76/9fd5b014efb237598ba05f1d89dfde6c573aeb86b173f9c59327e8b8abb9/django_widget_tweaks-1.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ecbb8002e3c178ba0e6d2fe4a9e5798", "sha256": "0baee0b905286fde028fdbd0dd1d985d4656dab472b0fd4ca4cd556ee38a047e"}, "downloads": -1, "filename": "django-widget-tweaks-1.4.1.tar.gz", "has_sig": false, "md5_digest": "2ecbb8002e3c178ba0e6d2fe4a9e5798", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9551, "upload_time": "2015-06-29T11:36:30", "upload_time_iso_8601": "2015-06-29T11:36:30.489666Z", "url": "https://files.pythonhosted.org/packages/f9/bb/ba988f76bdb0e2760fb6667305565df6ae0697efee3df54cac829a66d248/django-widget-tweaks-1.4.1.tar.gz", "yanked": false}], "1.4.2": [{"comment_text": "", "digests": {"md5": "2e203b498a3dcbb5004641438c51f467", "sha256": "f9961162c8ed272162e22e5877d29c7780476970441dce605118ef66da685e71"}, "downloads": -1, "filename": "django_widget_tweaks-1.4.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2e203b498a3dcbb5004641438c51f467", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13612, "upload_time": "2018-03-31T15:14:19", "upload_time_iso_8601": "2018-03-31T15:14:19.215988Z", "url": "https://files.pythonhosted.org/packages/db/d0/c6b445cddfa7c4e1635ba6e38a0c29250230ff8616e06bffdc49620ec158/django_widget_tweaks-1.4.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "799cdf914d4a417175d43f263b54ffee", "sha256": "a31c8a2b88af98dba6471db4722a416d1c643c87efecf9a7f17f983a2a553632"}, "downloads": -1, "filename": "django-widget-tweaks-1.4.2.tar.gz", "has_sig": false, "md5_digest": "799cdf914d4a417175d43f263b54ffee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12845, "upload_time": "2018-03-31T15:14:44", "upload_time_iso_8601": "2018-03-31T15:14:44.010328Z", "url": "https://files.pythonhosted.org/packages/15/61/ec6b40af8f8c05572ac158a4d1accce4162bf32a8ed61b1c0557d322df20/django-widget-tweaks-1.4.2.tar.gz", "yanked": false}], "1.4.3": [{"comment_text": "", "digests": {"md5": "6fc41dedc4820883382ae746a066a421", "sha256": "a69cba6c8a6b98f0cf6eef0535f8212d635e19044ee4533d4d78df700c2e233f"}, "downloads": -1, "filename": "django_widget_tweaks-1.4.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6fc41dedc4820883382ae746a066a421", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9732, "upload_time": "2018-09-11T15:39:47", "upload_time_iso_8601": "2018-09-11T15:39:47.818567Z", "url": "https://files.pythonhosted.org/packages/eb/16/86c8fdbc774c97a93028846cef1ddbe4f3ebb1ff933b54aed920cf619bf4/django_widget_tweaks-1.4.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "932cb70abe716a19b89efe686cd1cc01", "sha256": "bc645ef88307bc4ac269ee8ee9e572be814cd4a125c2bb6edb59ffcdc194982d"}, "downloads": -1, "filename": "django-widget-tweaks-1.4.3.tar.gz", "has_sig": false, "md5_digest": "932cb70abe716a19b89efe686cd1cc01", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13699, "upload_time": "2018-09-11T15:39:20", "upload_time_iso_8601": "2018-09-11T15:39:20.768293Z", "url": "https://files.pythonhosted.org/packages/89/a0/cf191f73ab04ef570a760e6062bac8cd77dae68dbd29ed801a88ee1285b8/django-widget-tweaks-1.4.3.tar.gz", "yanked": false}], "1.4.5": [{"comment_text": "", "digests": {"md5": "ee8e3cf861bd6fa8a8b6c056aa242eb5", "sha256": "65c960f3d75008a285e4b10f4d21f9eae4160fd77a0f6097ad545185f8648bd6"}, "downloads": -1, "filename": "django_widget_tweaks-1.4.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ee8e3cf861bd6fa8a8b6c056aa242eb5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11020, "upload_time": "2019-06-08T21:28:50", "upload_time_iso_8601": "2019-06-08T21:28:50.481038Z", "url": "https://files.pythonhosted.org/packages/1c/11/a8d3a4d73a09973d62ce381fb73a926707cb1485aa29599f2afc04dee7b4/django_widget_tweaks-1.4.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "754320023d00e0365b2e2eda2f51c8a7", "sha256": "f2e2c9c9be1ccc59061e248dcc2144f4906d594abe1a563902f4bdf6aa14e432"}, "downloads": -1, "filename": "django-widget-tweaks-1.4.5.tar.gz", "has_sig": false, "md5_digest": "754320023d00e0365b2e2eda2f51c8a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10794, "upload_time": "2019-06-08T21:28:38", "upload_time_iso_8601": "2019-06-08T21:28:38.833756Z", "url": "https://files.pythonhosted.org/packages/5d/b7/befea54b55290cc840d657c85ead6134b1e67659c89b74714da2be3e860a/django-widget-tweaks-1.4.5.tar.gz", "yanked": false}], "1.4.6": [{"comment_text": "", "digests": {"md5": "9778bb52138fee1543ed87f1cbe6655c", "sha256": "a4ab4877744238e493c162a1bde2ebcae499d338e45072ebf5569c0664644bf9"}, "downloads": -1, "filename": "django_widget_tweaks-1.4.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9778bb52138fee1543ed87f1cbe6655c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11435, "upload_time": "2020-03-11T15:12:05", "upload_time_iso_8601": "2020-03-11T15:12:05.578936Z", "url": "https://files.pythonhosted.org/packages/a4/ec/9228962cd0ee306d3aff7c831b1d09508deee07b2438a76f6961c12a5464/django_widget_tweaks-1.4.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e03ce7f8d596715140012ee7c2cede9d", "sha256": "bb81ca73ff17080192801c9bf3abba3b70d44ea0f1fcfd57778edb75f387c82e"}, "downloads": -1, "filename": "django-widget-tweaks-1.4.6.tar.gz", "has_sig": false, "md5_digest": "e03ce7f8d596715140012ee7c2cede9d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11398, "upload_time": "2020-03-11T15:12:25", "upload_time_iso_8601": "2020-03-11T15:12:25.262876Z", "url": "https://files.pythonhosted.org/packages/b5/bd/7af23926bde75af7828621d1b045cf54955206c999b2b63cfceaa0d60dad/django-widget-tweaks-1.4.6.tar.gz", "yanked": false}], "1.4.8": [{"comment_text": "", "digests": {"md5": "34a2d9be5d2ad2e7bd87f5cc521ac3b3", "sha256": "f80bff4a8a59b278bb277a405a76a8b9a884e4bae7a6c70e78a39c626cd1c836"}, "downloads": -1, "filename": "django_widget_tweaks-1.4.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "34a2d9be5d2ad2e7bd87f5cc521ac3b3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11447, "upload_time": "2020-03-16T16:27:09", "upload_time_iso_8601": "2020-03-16T16:27:09.014783Z", "url": "https://files.pythonhosted.org/packages/1d/36/d7eb0ccfe4d55d495943085be7bcb1b262ec3c5052afb18e07dcfb88ecb8/django_widget_tweaks-1.4.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17f3dd73efa123fe34d0166b838e17cb", "sha256": "9f91ca4217199b7671971d3c1f323a2bec71a0c27dec6260b3c006fa541bc489"}, "downloads": -1, "filename": "django-widget-tweaks-1.4.8.tar.gz", "has_sig": false, "md5_digest": "17f3dd73efa123fe34d0166b838e17cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11424, "upload_time": "2020-03-16T16:27:21", "upload_time_iso_8601": "2020-03-16T16:27:21.130370Z", "url": "https://files.pythonhosted.org/packages/54/49/b48a89cdf6dfead1091fbf3304dc0a5bac6a4a5ef33c146c0bf310e7f4d7/django-widget-tweaks-1.4.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "34a2d9be5d2ad2e7bd87f5cc521ac3b3", "sha256": "f80bff4a8a59b278bb277a405a76a8b9a884e4bae7a6c70e78a39c626cd1c836"}, "downloads": -1, "filename": "django_widget_tweaks-1.4.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "34a2d9be5d2ad2e7bd87f5cc521ac3b3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11447, "upload_time": "2020-03-16T16:27:09", "upload_time_iso_8601": "2020-03-16T16:27:09.014783Z", "url": "https://files.pythonhosted.org/packages/1d/36/d7eb0ccfe4d55d495943085be7bcb1b262ec3c5052afb18e07dcfb88ecb8/django_widget_tweaks-1.4.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17f3dd73efa123fe34d0166b838e17cb", "sha256": "9f91ca4217199b7671971d3c1f323a2bec71a0c27dec6260b3c006fa541bc489"}, "downloads": -1, "filename": "django-widget-tweaks-1.4.8.tar.gz", "has_sig": false, "md5_digest": "17f3dd73efa123fe34d0166b838e17cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11424, "upload_time": "2020-03-16T16:27:21", "upload_time_iso_8601": "2020-03-16T16:27:21.130370Z", "url": "https://files.pythonhosted.org/packages/54/49/b48a89cdf6dfead1091fbf3304dc0a5bac6a4a5ef33c146c0bf310e7f4d7/django-widget-tweaks-1.4.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:52 2020"}