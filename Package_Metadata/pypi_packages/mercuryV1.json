{"info": {"author": "Kieren Funk", "author_email": "kierenfunk@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# mercuryV1\nAPI wrapper library in python for mercury CRM\nfor more information please visit the API reference on mercury's website [here](https://support.connective.com.au/hc/en-us/articles/360009453654-Getting-Started-with-Mercury-API).\n\n## Initialisation\nGet YOUR_ACCESS_KEY and YOUR_ACCESS_TOKEN from your mercury account (Admin > Integrations). If you wish to use sandbox mode, you will need to login with the UAT url, there is a different token for sandbox.\n\n```\nfrom mercuryV1 import Mercury\n\nclient = Mercury(token='YOUR_ACCESS_TOKEN',key='YOUR_ACCESS_KEY',sandbox=True)\n```\n\n## Examples\n```\nfrom mercuryV1 import Mercury\n\n# initialise the client\nclient = Mercury(token='YOUR_ACCESS_TOKEN', key='YOUR_ACCESS_KEY', sandbox=True)\n\n# create a new contact with some person data\nperson = {\"firstName\": \"Henry\", \"lastName\":\"Ford\", \"email\":\"henryford@ford.com\"}\nclient.contacts.create(data=person)\n\n# retrieve the entire list of contacts in mercury\nclient.contacts.get()\n\n# retrieve a list of 30 contacts beginning from the 203rd contact\nclient.contacts.get(count=30, offset=203)\n\n# search for opportunities that were modified after 13th March 2019 and sort them in last modified date, ascending order\nsearchOptions = {\"lastUpdated\":\"2019-03-13\"}\nsortOptions = {\"key\":\"lastModifiedDate\", \"order\":\"ASC\"}\nclient.opportunities.get(search=searchOptions, sort=sortOptions)\n\n# create a related party and link it between an opportunity and a contact\nrelatedPartyData = {\"personID\":\"CONTACT_ID\",\"relationship\":\"Father\"}\nclient.relatedParties.create(data=relatedPartyData, parentId=\"OPPORTUNITY_ID\")\n```\n\n## Contacts\n---\n\n#### Methods\nMethod | Returns\n--- | ---\n`client.contacts.create(data={})` | dict\n`client.contacts.delete(id='')` | Response status code\n`client.contacts.fetch(id='')` | list\n`client.contacts.get(count=100, offset=0, search={}, sort={})` | list\n`client.contacts.update(id='', data={})` | Response status code\n\n#### Contact Search Options\nOption | Type | Description\n--- | --- | --- \nname | string |         Contact name to search for\nisDeleted | boolean |         Set to true if searching for deleted contacts\nexcludeDoNotMail | boolean |         Exclude contacts marked as do not email from the search results.         If not set, will default to false\nexcludeEmailBounced | boolean |         Exclude contacts with bounced emails from the search results.          If not passed, will default to false\nlastUpdated | string  |         Returns results after the given lastUpdated date. Date should be in yyyy-mm-dd format\ncompanyName | string |         Company name of the person\npersonType | string |         The relationship type of the person\ncategoryId | string |         Search by the category id\ncampaignId | string |         Search by the campaign id\ncontactNumber | string |         Search by the contact number of the person\nemail | string |         Search by the email address of the person\ndateOfBirth | string  |         Search by date of birth of the person. Date should be in yyyy-mm-dd format\nbirthday | string  |         Search by birthday anniversary. Date should be in yyyy-mm-dd format\ncreatedOn | string  |         Search by creation date. Date should be in yyyy-mm-dd format \n\n## Opportunities\n---\n\n#### Methods\nMethod | Returns\n--- | ---\n`client.opportunities.create(data={})` | dict\n`client.opportunities.delete(id='')` | Response status code\n`client.opportunities.fetch(id='')` | list\n`client.opportunities.get(count=100, offset=0, search={}, sort={})` | list\n`client.opportunities.update(id='', data={})` | Response status code\n\n#### Opportunity Search Options\nOption | Type | Description\n--- | --- | --- \nname | string |         Opportunity name to search for\nisDeleted | boolean |         Set to true if searching for deleted opportunities\nstatuses | list |         List of opportunity statuses\nlastUpdated | string  |         Search by last updated date. Date should be in yyyy-mm-dd format.\ntransactionType | string |         The type of transaction\nuser | string |         CA number of the agent\ncreatedOn | string  |         Search by created date. Date should be in yyyy-mm-dd format.\nconfirmedSettlementDate | string  |         Search by settlement date. Date should be in yyyy-mm-dd format.\ninterestOnlyExpiry | string |         Search by interest only expiry date. Date should be in yyyy-mm-dd format.\nfixedRateExpiry | string |         Search by fixed rate expiry date. Date should be in yyyy-mm-dd format. \n\n#### Contact and Opportunity Sort Options\nOption | Type | Description\n--- | --- | --- \nkey | string |         creationDate or lastModifiedDate. creationDate is default\norder | string |         ASC or DESC. DESC is default \n\n\n## Addresses\n---\n\n#### Methods\nMethod | Returns\n--- | ---\n`client.addresses.create(data={}, parentId='')` | dict\n`client.addresses.delete(parentId='', nestedId='')` | Response status code\n`client.addresses.update(data={}, parentId='', nestedId='')` | Response status code\n\n## Contact Methods\n---\n\n#### Methods\nMethod | Returns\n--- | ---\n`client.contactMethods.create(data={}, parentId='')` | dict\n`client.contactMethods.delete(parentId='', nestedId='')` | Response status code\n`client.contactMethods.update(data={}, parentId='', nestedId='')` | Response status code\n\n## Expenses\n---\n\n#### Methods\nMethod | Returns\n--- | ---\n`client.expenses.create(data={}, parentId='')` | dict\n`client.expenses.delete(parentId='', nestedId='')` | Response status code\n`client.expenses.update(data={}, parentId='', nestedId='')` | Response status code\n\n## Incomes\n---\n\n#### Methods\nMethod | Returns\n--- | ---\n`client.incomes.create(data={}, parentId='')` | dict\n`client.incomes.delete(parentId='', nestedId='')` | Response status code\n`client.incomes.update(data={}, parentId='', nestedId='')` | Response status code\n\n## Assets\n---\n\n#### Methods\nMethod | Returns\n--- | ---\n`client.assets.create(data={}, parentId='')` | dict\n`client.assets.delete(parentId='', nestedId='')` | Response status code\n`client.assets.update(data={}, parentId='', nestedId='')` | Response status code\n\n## Liabilities\n---\n\n#### Methods\nMethod | Returns\n--- | ---\n`client.liabilities.create(data={}, parentId='')` | dict\n`client.liabilities.delete(parentId='', nestedId='')` | Response status code\n`client.liabilities.update(data={}, parentId='', nestedId='')` | Response status code\n\n## Related Parties\n---\n\n#### Methods\nMethod | Returns\n--- | ---\n`client.relatedParties.create(data={}, parentId='')` | dict\n`client.relatedParties.delete(parentId='', nestedId='')` | Response status code\n`client.relatedParties.update(data={}, parentId='', nestedId='')` | Response status code\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kierenfunk/mercuryV1/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "mercuryV1", "package_url": "https://pypi.org/project/mercuryV1/", "platform": "", "project_url": "https://pypi.org/project/mercuryV1/", "project_urls": {"Homepage": "https://github.com/kierenfunk/mercuryV1/"}, "release_url": "https://pypi.org/project/mercuryV1/0.1/", "requires_dist": null, "requires_python": "", "summary": "API wrapper library in python for mercury CRM", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>mercuryV1</h1>\n<p>API wrapper library in python for mercury CRM\nfor more information please visit the API reference on mercury's website <a href=\"https://support.connective.com.au/hc/en-us/articles/360009453654-Getting-Started-with-Mercury-API\" rel=\"nofollow\">here</a>.</p>\n<h2>Initialisation</h2>\n<p>Get YOUR_ACCESS_KEY and YOUR_ACCESS_TOKEN from your mercury account (Admin &gt; Integrations). If you wish to use sandbox mode, you will need to login with the UAT url, there is a different token for sandbox.</p>\n<pre><code>from mercuryV1 import Mercury\n\nclient = Mercury(token='YOUR_ACCESS_TOKEN',key='YOUR_ACCESS_KEY',sandbox=True)\n</code></pre>\n<h2>Examples</h2>\n<pre><code>from mercuryV1 import Mercury\n\n# initialise the client\nclient = Mercury(token='YOUR_ACCESS_TOKEN', key='YOUR_ACCESS_KEY', sandbox=True)\n\n# create a new contact with some person data\nperson = {\"firstName\": \"Henry\", \"lastName\":\"Ford\", \"email\":\"henryford@ford.com\"}\nclient.contacts.create(data=person)\n\n# retrieve the entire list of contacts in mercury\nclient.contacts.get()\n\n# retrieve a list of 30 contacts beginning from the 203rd contact\nclient.contacts.get(count=30, offset=203)\n\n# search for opportunities that were modified after 13th March 2019 and sort them in last modified date, ascending order\nsearchOptions = {\"lastUpdated\":\"2019-03-13\"}\nsortOptions = {\"key\":\"lastModifiedDate\", \"order\":\"ASC\"}\nclient.opportunities.get(search=searchOptions, sort=sortOptions)\n\n# create a related party and link it between an opportunity and a contact\nrelatedPartyData = {\"personID\":\"CONTACT_ID\",\"relationship\":\"Father\"}\nclient.relatedParties.create(data=relatedPartyData, parentId=\"OPPORTUNITY_ID\")\n</code></pre>\n<h2>Contacts</h2>\n<hr>\n<h4>Methods</h4>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Returns</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>client.contacts.create(data={})</code></td>\n<td>dict</td>\n</tr>\n<tr>\n<td><code>client.contacts.delete(id='')</code></td>\n<td>Response status code</td>\n</tr>\n<tr>\n<td><code>client.contacts.fetch(id='')</code></td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>client.contacts.get(count=100, offset=0, search={}, sort={})</code></td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>client.contacts.update(id='', data={})</code></td>\n<td>Response status code</td>\n</tr></tbody></table>\n<h4>Contact Search Options</h4>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>string</td>\n<td>Contact name to search for</td>\n</tr>\n<tr>\n<td>isDeleted</td>\n<td>boolean</td>\n<td>Set to true if searching for deleted contacts</td>\n</tr>\n<tr>\n<td>excludeDoNotMail</td>\n<td>boolean</td>\n<td>Exclude contacts marked as do not email from the search results.         If not set, will default to false</td>\n</tr>\n<tr>\n<td>excludeEmailBounced</td>\n<td>boolean</td>\n<td>Exclude contacts with bounced emails from the search results.          If not passed, will default to false</td>\n</tr>\n<tr>\n<td>lastUpdated</td>\n<td>string</td>\n<td>Returns results after the given lastUpdated date. Date should be in yyyy-mm-dd format</td>\n</tr>\n<tr>\n<td>companyName</td>\n<td>string</td>\n<td>Company name of the person</td>\n</tr>\n<tr>\n<td>personType</td>\n<td>string</td>\n<td>The relationship type of the person</td>\n</tr>\n<tr>\n<td>categoryId</td>\n<td>string</td>\n<td>Search by the category id</td>\n</tr>\n<tr>\n<td>campaignId</td>\n<td>string</td>\n<td>Search by the campaign id</td>\n</tr>\n<tr>\n<td>contactNumber</td>\n<td>string</td>\n<td>Search by the contact number of the person</td>\n</tr>\n<tr>\n<td>email</td>\n<td>string</td>\n<td>Search by the email address of the person</td>\n</tr>\n<tr>\n<td>dateOfBirth</td>\n<td>string</td>\n<td>Search by date of birth of the person. Date should be in yyyy-mm-dd format</td>\n</tr>\n<tr>\n<td>birthday</td>\n<td>string</td>\n<td>Search by birthday anniversary. Date should be in yyyy-mm-dd format</td>\n</tr>\n<tr>\n<td>createdOn</td>\n<td>string</td>\n<td>Search by creation date. Date should be in yyyy-mm-dd format</td>\n</tr></tbody></table>\n<h2>Opportunities</h2>\n<hr>\n<h4>Methods</h4>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Returns</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>client.opportunities.create(data={})</code></td>\n<td>dict</td>\n</tr>\n<tr>\n<td><code>client.opportunities.delete(id='')</code></td>\n<td>Response status code</td>\n</tr>\n<tr>\n<td><code>client.opportunities.fetch(id='')</code></td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>client.opportunities.get(count=100, offset=0, search={}, sort={})</code></td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>client.opportunities.update(id='', data={})</code></td>\n<td>Response status code</td>\n</tr></tbody></table>\n<h4>Opportunity Search Options</h4>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>string</td>\n<td>Opportunity name to search for</td>\n</tr>\n<tr>\n<td>isDeleted</td>\n<td>boolean</td>\n<td>Set to true if searching for deleted opportunities</td>\n</tr>\n<tr>\n<td>statuses</td>\n<td>list</td>\n<td>List of opportunity statuses</td>\n</tr>\n<tr>\n<td>lastUpdated</td>\n<td>string</td>\n<td>Search by last updated date. Date should be in yyyy-mm-dd format.</td>\n</tr>\n<tr>\n<td>transactionType</td>\n<td>string</td>\n<td>The type of transaction</td>\n</tr>\n<tr>\n<td>user</td>\n<td>string</td>\n<td>CA number of the agent</td>\n</tr>\n<tr>\n<td>createdOn</td>\n<td>string</td>\n<td>Search by created date. Date should be in yyyy-mm-dd format.</td>\n</tr>\n<tr>\n<td>confirmedSettlementDate</td>\n<td>string</td>\n<td>Search by settlement date. Date should be in yyyy-mm-dd format.</td>\n</tr>\n<tr>\n<td>interestOnlyExpiry</td>\n<td>string</td>\n<td>Search by interest only expiry date. Date should be in yyyy-mm-dd format.</td>\n</tr>\n<tr>\n<td>fixedRateExpiry</td>\n<td>string</td>\n<td>Search by fixed rate expiry date. Date should be in yyyy-mm-dd format.</td>\n</tr></tbody></table>\n<h4>Contact and Opportunity Sort Options</h4>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>key</td>\n<td>string</td>\n<td>creationDate or lastModifiedDate. creationDate is default</td>\n</tr>\n<tr>\n<td>order</td>\n<td>string</td>\n<td>ASC or DESC. DESC is default</td>\n</tr></tbody></table>\n<h2>Addresses</h2>\n<hr>\n<h4>Methods</h4>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Returns</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>client.addresses.create(data={}, parentId='')</code></td>\n<td>dict</td>\n</tr>\n<tr>\n<td><code>client.addresses.delete(parentId='', nestedId='')</code></td>\n<td>Response status code</td>\n</tr>\n<tr>\n<td><code>client.addresses.update(data={}, parentId='', nestedId='')</code></td>\n<td>Response status code</td>\n</tr></tbody></table>\n<h2>Contact Methods</h2>\n<hr>\n<h4>Methods</h4>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Returns</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>client.contactMethods.create(data={}, parentId='')</code></td>\n<td>dict</td>\n</tr>\n<tr>\n<td><code>client.contactMethods.delete(parentId='', nestedId='')</code></td>\n<td>Response status code</td>\n</tr>\n<tr>\n<td><code>client.contactMethods.update(data={}, parentId='', nestedId='')</code></td>\n<td>Response status code</td>\n</tr></tbody></table>\n<h2>Expenses</h2>\n<hr>\n<h4>Methods</h4>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Returns</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>client.expenses.create(data={}, parentId='')</code></td>\n<td>dict</td>\n</tr>\n<tr>\n<td><code>client.expenses.delete(parentId='', nestedId='')</code></td>\n<td>Response status code</td>\n</tr>\n<tr>\n<td><code>client.expenses.update(data={}, parentId='', nestedId='')</code></td>\n<td>Response status code</td>\n</tr></tbody></table>\n<h2>Incomes</h2>\n<hr>\n<h4>Methods</h4>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Returns</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>client.incomes.create(data={}, parentId='')</code></td>\n<td>dict</td>\n</tr>\n<tr>\n<td><code>client.incomes.delete(parentId='', nestedId='')</code></td>\n<td>Response status code</td>\n</tr>\n<tr>\n<td><code>client.incomes.update(data={}, parentId='', nestedId='')</code></td>\n<td>Response status code</td>\n</tr></tbody></table>\n<h2>Assets</h2>\n<hr>\n<h4>Methods</h4>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Returns</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>client.assets.create(data={}, parentId='')</code></td>\n<td>dict</td>\n</tr>\n<tr>\n<td><code>client.assets.delete(parentId='', nestedId='')</code></td>\n<td>Response status code</td>\n</tr>\n<tr>\n<td><code>client.assets.update(data={}, parentId='', nestedId='')</code></td>\n<td>Response status code</td>\n</tr></tbody></table>\n<h2>Liabilities</h2>\n<hr>\n<h4>Methods</h4>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Returns</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>client.liabilities.create(data={}, parentId='')</code></td>\n<td>dict</td>\n</tr>\n<tr>\n<td><code>client.liabilities.delete(parentId='', nestedId='')</code></td>\n<td>Response status code</td>\n</tr>\n<tr>\n<td><code>client.liabilities.update(data={}, parentId='', nestedId='')</code></td>\n<td>Response status code</td>\n</tr></tbody></table>\n<h2>Related Parties</h2>\n<hr>\n<h4>Methods</h4>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Returns</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>client.relatedParties.create(data={}, parentId='')</code></td>\n<td>dict</td>\n</tr>\n<tr>\n<td><code>client.relatedParties.delete(parentId='', nestedId='')</code></td>\n<td>Response status code</td>\n</tr>\n<tr>\n<td><code>client.relatedParties.update(data={}, parentId='', nestedId='')</code></td>\n<td>Response status code</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 6221372, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "51bbf4187134b5cd4dc33c4d759308f9", "sha256": "953a253811d7c7560d00b4b7495f9c5efaa1385e0c70ad67d4f75316e452b645"}, "downloads": -1, "filename": "mercuryV1-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "51bbf4187134b5cd4dc33c4d759308f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25894, "upload_time": "2019-11-30T11:58:11", "upload_time_iso_8601": "2019-11-30T11:58:11.932574Z", "url": "https://files.pythonhosted.org/packages/3a/b8/28786156a6174685b0c3bcd5992ffa01fc51705a1989eafa54ad7b77d4d4/mercuryV1-0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "51bbf4187134b5cd4dc33c4d759308f9", "sha256": "953a253811d7c7560d00b4b7495f9c5efaa1385e0c70ad67d4f75316e452b645"}, "downloads": -1, "filename": "mercuryV1-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "51bbf4187134b5cd4dc33c4d759308f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25894, "upload_time": "2019-11-30T11:58:11", "upload_time_iso_8601": "2019-11-30T11:58:11.932574Z", "url": "https://files.pythonhosted.org/packages/3a/b8/28786156a6174685b0c3bcd5992ffa01fc51705a1989eafa54ad7b77d4d4/mercuryV1-0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:56:09 2020"}