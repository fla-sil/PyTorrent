{"info": {"author": "Rudolph Pienaar", "author_email": "rudolph.pienaar@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "pl-freesurfer_pp_moc\n====================\n\n.. image:: https://badge.fury.io/py/freesurfer_pp_moc.svg\n    :target: https://badge.fury.io/py/freesurfer_pp_moc\n\n.. image:: https://travis-ci.org/FNNDSC/freesurfer_pp_moc.svg?branch=master\n    :target: https://travis-ci.org/FNNDSC/freesurfer_pp_moc\n\n.. image:: https://img.shields.io/badge/python-3.5%2B-blue.svg\n    :target: https://badge.fury.io/py/pl-freesurfer_pp_moc\n\n.. contents:: Table of Contents\n\n\nAbstract\n--------\n\n``freesurfer_pp_moc.py`` is a *dummy* FreeSurfer plugin / container that is prepopulated with the results of several *a priori* FreeSurfer runs. For a given run, this script will simply copy elements of one of these prior runs to the output directory. \n\nSynopsis\n--------\n\n.. code::\n\n        python freesurfer_pp_moc.py                                         \\\n            [-v <level>] [--verbosity <level>]                          \\\n            [--version]                                                 \\\n            [--man]                                                     \\\n            [--meta]                                                    \\\n            [--copySpec <copySpec>]                                     \\\n            [--ageSpec <ageSpec>]                                       \\\n            <inputDir>                                                  \\\n            <outputDir> \n\nRun\n----\n\nThis ``plugin`` can be run in two modes: natively as a python package or as a containerized docker image. The PyPI mode is largely included for completeness sake and only useful if run against some pre-processed tree that exists in the filesystem. \n\nUsing PyPI\n~~~~~~~~~~\n\n*You probably do not want to run the PyPI version unless you are a developer! Mostly likely you want the docker containerized run -- see the next section.*\n\nTo run from PyPI, simply do a \n\n.. code:: bash\n\n    pip install freesurfer_pp_moc\n\nand run with\n\n.. code:: bash\n\n    freesurfer.py --man /tmp /tmp\n\n\nUsing ``docker run``\n~~~~~~~~~~~~~~~~~~~~\n\nThe real utility of this package is to run it containerized against bundled data that is packed into the container.\n\nAssign an \"input\" directory to ``/incoming`` and an \"output\" directory to ``/outgoing``. Note that the \"input\" directory is effectively ignored by this plugin, but is required. Make sure that the host ``$(pwd)/out`` directory is world writable!\n\nIn the simplest sense, the plugin can be run with\n\n.. code:: bash\n\n    mkdir in out && chmod 777 out\n    docker run --rm -v $(pwd)/in:/incoming -v $(pwd)/out:/outgoing      \\\n            fnndsc/pl-freesurfer_pp_moc freesurfer_pp_moc.py                    \\\n            /incoming /outgoing\n\nwhich will copy **only** the internal `stats` directory from a ``10-yr/06-mo/01-da`` subject to the output. By specifying a ``--copySpec stats,3D,sag,cor,tra`` several additional directories containing png image frames through parcellated sagittal, coronal, and transverse (axial) planes as well as multiple 3D images are also copied.\n\nExamples\n--------\n\nCheck available pre-processed runs\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo get a listing of the internal tree of already processed and available FreeSurfer choices:\n\n.. code:: bash\n\n    docker run --rm -v $(pwd)/in:/incoming -v $(pwd)/out:/outgoing      \\\n            fnndsc/pl-freesurfer_pp_moc freesurfer_pp_moc.py            \\\n            -T ../preprocessed                                          \\\n            /incoming /outgoing\n\nThis will print a tree of the available choices of `preprocessed` data in a directory tree. \n\nCopy the default for a selected pre-processed run\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSelect one run, say the `08-yr/07-mo/16-da` and specify that to copy:\n\n.. code:: bash\n\n    docker run --rm -v $(pwd)/in:/incoming -v $(pwd)/out:/outgoing      \\\n            fnndsc/pl-freesurfer_pp_moc freesurfer_pp_moc.py            \\\n            -a 08-07-16 \\\n            /incoming /outgoing\n\nSimulate a processing delay\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo simulate a processing delay, specify some time in seconds:\n\n.. code:: bash\n\n    docker run --rm -v $(pwd)/in:/incoming -v $(pwd)/out:/outgoing      \\\n            fnndsc/pl-freesurfer_pp_moc freesurfer_pp_moc.py            \\\n            -a 08-07-16                                                 \\\n            -P 20                                                       \\\n            /incoming /outgoing\n\nExplicitly copy all the data including images from a pre-processed run\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo copy all the image directories from the ``10-yr/06-mo/01-da`` subject, \n\n.. code:: bash\n\n    docker run --rm -v $(pwd)/in:/incoming -v $(pwd)/out:/outgoing      \\\n            fnndsc/pl-freesurfer_pp_moc freesurfer_pp_moc.py            \\\n            -a 10-06-01                                                 \\\n            -c stats,sag,cor,tra,3D                                     \\\n            /incoming /outgoing", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/FNNDSC/pl-freesurfer_pp_moc", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "freesurfer-pp-moc", "package_url": "https://pypi.org/project/freesurfer-pp-moc/", "platform": "", "project_url": "https://pypi.org/project/freesurfer-pp-moc/", "project_urls": {"Homepage": "https://github.com/FNNDSC/pl-freesurfer_pp_moc"}, "release_url": "https://pypi.org/project/freesurfer-pp-moc/2.2.2/", "requires_dist": null, "requires_python": "", "summary": "A simple/dummy app that simulates a FreeSurfer run", "version": "2.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/freesurfer_pp_moc\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/freesurfer_pp_moc.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/be5f5fbc30cb5c44b2afaa362cc14f4de7ffcdc3/68747470733a2f2f62616467652e667572792e696f2f70792f667265657375726665725f70705f6d6f632e737667\"></a>\n<a href=\"https://travis-ci.org/FNNDSC/freesurfer_pp_moc\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/FNNDSC/freesurfer_pp_moc.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/41ce76d50e973ed5afacb3e52dc3964742def4ac/68747470733a2f2f7472617669732d63692e6f72672f464e4e4453432f667265657375726665725f70705f6d6f632e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/pl-freesurfer_pp_moc\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/python-3.5%2B-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/72717db1f08ff88b6b237ad21c89e86732f2fa28/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e352532422d626c75652e737667\"></a>\n<div id=\"table-of-contents\">\n<p>Table of Contents</p>\n<ul>\n<li><a href=\"#abstract\" id=\"id1\" rel=\"nofollow\">Abstract</a></li>\n<li><a href=\"#synopsis\" id=\"id2\" rel=\"nofollow\">Synopsis</a></li>\n<li><a href=\"#run\" id=\"id3\" rel=\"nofollow\">Run</a><ul>\n<li><a href=\"#using-pypi\" id=\"id4\" rel=\"nofollow\">Using PyPI</a></li>\n<li><a href=\"#using-docker-run\" id=\"id5\" rel=\"nofollow\">Using <tt>docker run</tt></a></li>\n</ul>\n</li>\n<li><a href=\"#examples\" id=\"id6\" rel=\"nofollow\">Examples</a><ul>\n<li><a href=\"#check-available-pre-processed-runs\" id=\"id7\" rel=\"nofollow\">Check available pre-processed runs</a></li>\n<li><a href=\"#copy-the-default-for-a-selected-pre-processed-run\" id=\"id8\" rel=\"nofollow\">Copy the default for a selected pre-processed run</a></li>\n<li><a href=\"#simulate-a-processing-delay\" id=\"id9\" rel=\"nofollow\">Simulate a processing delay</a></li>\n<li><a href=\"#explicitly-copy-all-the-data-including-images-from-a-pre-processed-run\" id=\"id10\" rel=\"nofollow\">Explicitly copy all the data including images from a pre-processed run</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"abstract\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Abstract</a></h2>\n<p><tt>freesurfer_pp_moc.py</tt> is a <em>dummy</em> FreeSurfer plugin / container that is prepopulated with the results of several <em>a priori</em> FreeSurfer runs. For a given run, this script will simply copy elements of one of these prior runs to the output directory.</p>\n</div>\n<div id=\"synopsis\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Synopsis</a></h2>\n<pre>python freesurfer_pp_moc.py                                         \\\n    [-v &lt;level&gt;] [--verbosity &lt;level&gt;]                          \\\n    [--version]                                                 \\\n    [--man]                                                     \\\n    [--meta]                                                    \\\n    [--copySpec &lt;copySpec&gt;]                                     \\\n    [--ageSpec &lt;ageSpec&gt;]                                       \\\n    &lt;inputDir&gt;                                                  \\\n    &lt;outputDir&gt;\n</pre>\n</div>\n<div id=\"run\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Run</a></h2>\n<p>This <tt>plugin</tt> can be run in two modes: natively as a python package or as a containerized docker image. The PyPI mode is largely included for completeness sake and only useful if run against some pre-processed tree that exists in the filesystem.</p>\n<div id=\"using-pypi\">\n<h3><a href=\"#id4\" rel=\"nofollow\">Using PyPI</a></h3>\n<p><em>You probably do not want to run the PyPI version unless you are a developer! Mostly likely you want the docker containerized run \u2013 see the next section.</em></p>\n<p>To run from PyPI, simply do a</p>\n<pre>pip install freesurfer_pp_moc\n</pre>\n<p>and run with</p>\n<pre>freesurfer.py --man /tmp /tmp\n</pre>\n</div>\n<div id=\"using-docker-run\">\n<h3><a href=\"#id5\" rel=\"nofollow\">Using <tt>docker run</tt></a></h3>\n<p>The real utility of this package is to run it containerized against bundled data that is packed into the container.</p>\n<p>Assign an \u201cinput\u201d directory to <tt>/incoming</tt> and an \u201coutput\u201d directory to <tt>/outgoing</tt>. Note that the \u201cinput\u201d directory is effectively ignored by this plugin, but is required. Make sure that the host <tt><span class=\"pre\">$(pwd)/out</span></tt> directory is world writable!</p>\n<p>In the simplest sense, the plugin can be run with</p>\n<pre>mkdir in out <span class=\"o\">&amp;&amp;</span> chmod <span class=\"m\">777</span> out\ndocker run --rm -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/in:/incoming -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/out:/outgoing      <span class=\"se\">\\\n</span>        fnndsc/pl-freesurfer_pp_moc freesurfer_pp_moc.py                    <span class=\"se\">\\\n</span>        /incoming /outgoing\n</pre>\n<p>which will copy <strong>only</strong> the internal <cite>stats</cite> directory from a <tt><span class=\"pre\">10-yr/06-mo/01-da</span></tt> subject to the output. By specifying a <tt><span class=\"pre\">--copySpec</span> stats,3D,sag,cor,tra</tt> several additional directories containing png image frames through parcellated sagittal, coronal, and transverse (axial) planes as well as multiple 3D images are also copied.</p>\n</div>\n</div>\n<div id=\"examples\">\n<h2><a href=\"#id6\" rel=\"nofollow\">Examples</a></h2>\n<div id=\"check-available-pre-processed-runs\">\n<h3><a href=\"#id7\" rel=\"nofollow\">Check available pre-processed runs</a></h3>\n<p>To get a listing of the internal tree of already processed and available FreeSurfer choices:</p>\n<pre>docker run --rm -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/in:/incoming -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/out:/outgoing      <span class=\"se\">\\\n</span>        fnndsc/pl-freesurfer_pp_moc freesurfer_pp_moc.py            <span class=\"se\">\\\n</span>        -T ../preprocessed                                          <span class=\"se\">\\\n</span>        /incoming /outgoing\n</pre>\n<p>This will print a tree of the available choices of <cite>preprocessed</cite> data in a directory tree.</p>\n</div>\n<div id=\"copy-the-default-for-a-selected-pre-processed-run\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Copy the default for a selected pre-processed run</a></h3>\n<p>Select one run, say the <cite>08-yr/07-mo/16-da</cite> and specify that to copy:</p>\n<pre>docker run --rm -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/in:/incoming -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/out:/outgoing      <span class=\"se\">\\\n</span>        fnndsc/pl-freesurfer_pp_moc freesurfer_pp_moc.py            <span class=\"se\">\\\n</span>        -a <span class=\"m\">08</span>-07-16 <span class=\"se\">\\\n</span>        /incoming /outgoing\n</pre>\n</div>\n<div id=\"simulate-a-processing-delay\">\n<h3><a href=\"#id9\" rel=\"nofollow\">Simulate a processing delay</a></h3>\n<p>To simulate a processing delay, specify some time in seconds:</p>\n<pre>docker run --rm -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/in:/incoming -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/out:/outgoing      <span class=\"se\">\\\n</span>        fnndsc/pl-freesurfer_pp_moc freesurfer_pp_moc.py            <span class=\"se\">\\\n</span>        -a <span class=\"m\">08</span>-07-16                                                 <span class=\"se\">\\\n</span>        -P <span class=\"m\">20</span>                                                       <span class=\"se\">\\\n</span>        /incoming /outgoing\n</pre>\n</div>\n<div id=\"explicitly-copy-all-the-data-including-images-from-a-pre-processed-run\">\n<h3><a href=\"#id10\" rel=\"nofollow\">Explicitly copy all the data including images from a pre-processed run</a></h3>\n<p>To copy all the image directories from the <tt><span class=\"pre\">10-yr/06-mo/01-da</span></tt> subject,</p>\n<pre>docker run --rm -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/in:/incoming -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/out:/outgoing      <span class=\"se\">\\\n</span>        fnndsc/pl-freesurfer_pp_moc freesurfer_pp_moc.py            <span class=\"se\">\\\n</span>        -a <span class=\"m\">10</span>-06-01                                                 <span class=\"se\">\\\n</span>        -c stats,sag,cor,tra,3D                                     <span class=\"se\">\\\n</span>        /incoming /outgoing\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6164525, "releases": {"2.2.0": [{"comment_text": "", "digests": {"md5": "574fe8807c3f5c1002a4a462bb764338", "sha256": "9096717a2f4e3678d8571fe7282f25133fb16803c315702c5b7040b7140f13e3"}, "downloads": -1, "filename": "freesurfer_pp_moc-2.2.0.tar.gz", "has_sig": false, "md5_digest": "574fe8807c3f5c1002a4a462bb764338", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6017, "upload_time": "2019-11-07T20:13:29", "upload_time_iso_8601": "2019-11-07T20:13:29.441702Z", "url": "https://files.pythonhosted.org/packages/37/89/de5b5e07705e8b68fdb1b0f8fa4f1adccab1107508f29586739a0d23fcd9/freesurfer_pp_moc-2.2.0.tar.gz", "yanked": false}], "2.2.2": [{"comment_text": "", "digests": {"md5": "f22d63b0cce4fff7b0f8ef24017f7fda", "sha256": "c268f90f746abe077b8651f4608578c1a0269745e61379e07cc21f3b1b894672"}, "downloads": -1, "filename": "freesurfer_pp_moc-2.2.2.tar.gz", "has_sig": false, "md5_digest": "f22d63b0cce4fff7b0f8ef24017f7fda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6037, "upload_time": "2019-11-19T20:53:10", "upload_time_iso_8601": "2019-11-19T20:53:10.729330Z", "url": "https://files.pythonhosted.org/packages/4f/27/3b518abb5dcbd586655bfc403d637491e11942cde6587719bce1dd71480a/freesurfer_pp_moc-2.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f22d63b0cce4fff7b0f8ef24017f7fda", "sha256": "c268f90f746abe077b8651f4608578c1a0269745e61379e07cc21f3b1b894672"}, "downloads": -1, "filename": "freesurfer_pp_moc-2.2.2.tar.gz", "has_sig": false, "md5_digest": "f22d63b0cce4fff7b0f8ef24017f7fda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6037, "upload_time": "2019-11-19T20:53:10", "upload_time_iso_8601": "2019-11-19T20:53:10.729330Z", "url": "https://files.pythonhosted.org/packages/4f/27/3b518abb5dcbd586655bfc403d637491e11942cde6587719bce1dd71480a/freesurfer_pp_moc-2.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:27 2020"}