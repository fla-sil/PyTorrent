{"info": {"author": "Derek Pryor", "author_email": "Derek.Pryor@jhuapl.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5"], "description": "# Heaviside\nHeaviside is a domain specific language (DSL) and Python compiler / support\nlibraries for working with [AWS StepFunctions].\n\n## Why\nThe reason for a StepFunctions DSL is that the [state machine language], while\nflexible, is hard to write and maintain. The DSL provides a simplied format for\nwriting StepFunction state machines and serveral of common flow control\nstatements.\n\n## DSL\n\nThe [StepFunctionDSL] document describes the Heaviside DSL.\n\n## Getting Started\n\nIn this document `.hsd` will be used to denote a StepFunction file written in\nthe Heaviside DSL. The extension `.sfn` will be used to denote a StepFunction\nfile written in the AWS [state machine language].\n\n### Installing\n\n```\npip install heaviside\n```\n\n### CLI Script\n\nThe Heaviside package installs a script called `heaviside` that provides a CLI\nto the library. Running the command without arguments or with the `--help` or\n`-h` flag will provide detailed help.\n\n#### AWS Credentials\n\nAll sub-commands (except `compile`) connect to AWS to manipulate StepFunctions.\nThere are multiple ways to define the AWS credentials, listed in the order of\nprecedence.\n\n* Explicitly pass the values as command line arguments or environmental variables\n* Pass a file path to a JSON file with the arguments\n* Letting Boto3 try to resolve secret / access keys\n* Looking at EC2 meta data for current AWS region\n* Looking at current IAM user for AWS account_id\n\nThe `compile` sub-command doesn't connect to AWS, but does use the region and\naccount_id values when resolving Task ARNs. If the Heaviside DSL file has full\nTask ARNs or the compiled file will not be uploaded to AWS these values can be\nblank.\n\n**Note**: Since `compile` doesn't connect to AWS, only the first two options in\nthe list above are valid for passing the region and account_id value.\n\n#### Compiling\n\nTo compile a Heaviside file into a AWS StepFunction file use the `compile`\nsub-command.\n\n```\n$ heaviside compile state_machine.hsd -o state_machine.sfn \n```\n\n#### Creating a StepFunction\n\nThe `heaviside` script can compile and upload the resulting file to AWS.\n\n```\n$ heaviside create state_machine.hsd AwsIamStepFunctionRole\n```\n\nArguments:\n* `AwsIamStepFunctionRole`: The AWS IAM Role that the StepFunction will use\n                            when executing. Most often this will be used to\n                            control which Lambdas and Activities the\n                            StepFunction has permission to execute.\n\n#### Deleting a StepFunction\n\nThe `delete` sub-command can be used to delete an existing StepFunction\n\n```\n$ heaviside delete state_machine\n```\n\n#### Executing a StepFunction\n\nThe `start` sub-command can be used to start executing a StepFunction.\n\n```\n$ heaviside start --json \"{}\" state_machine\n```\n\n**Note**: By default the `start` sub-command will wait until the\nexecution has finished and will print the output of the StepFunction.\n\n## Python Library\n\nThe Heaviside package installs the Python library `heaviside`. There are three\ncomponents to the library.\n\n* `heaviside.compile`: The method used to compile a Heaviside DSL file into\n                       a AWS StepFunction.\n* `heaviside.StateMachine`: Class for creating and executing StepFunctions.\n* `heaviside.activities`: A submodule containing several helper classes providing\n                          a framework for running StepFunction Activities.\n                          See the [Activities document] for more information.\n\n## Compatability\n\nCurrently Heaviside has only been tested with Python 2.7 and 3.5.\n\n## Related Projects\n\n* [statelint]: A Ruby project that verifies a AWS StepFunction definition file.\n               Includes checks like making sure that all states are reachable.\n               Helpful when developing a new StepFunction to ensure everything\n               is correct. It will catch structural problems that Heaviside\n               doesn't check for.\n\n\n[AWS StepFunctions]: https://aws.amazon.com/step-functions/\n[state machine language]: https://states-language.net/spec.html\n[StepFunctionDSL]: docs/StepFunctionDSL.md\n[Activities document]: docs/Activites.md\n[statelint]: https://github.com/awslabs/statelint\n\n## Legal\n\nUse or redistribution of the Boss system in source and/or binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code or binary forms must adhere to the terms and conditions of any applicable software licenses.\n2. End-user documentation or notices, whether included as part of a redistribution or disseminated as part of a legal or scientific disclosure (e.g. publication) or advertisement, must include the following acknowledgement:  The Boss software system was designed and developed by the Johns Hopkins University Applied Physics Laboratory (JHU/APL). \n3. The names \"The Boss\", \"JHU/APL\", \"Johns Hopkins University\", \"Applied Physics Laboratory\", \"MICrONS\", or \"IARPA\" must not be used to endorse or promote products derived from this software without prior written permission. For written permission, please contact BossAdmin@jhuapl.edu.\n4. This source code and library is distributed in the hope that it will be useful, but is provided without any warranty of any kind.\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jhuapl-boss/heaviside", "keywords": "boss,microns,aws,stepfunctions,dsl", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "heaviside", "package_url": "https://pypi.org/project/heaviside/", "platform": "", "project_url": "https://pypi.org/project/heaviside/", "project_urls": {"Homepage": "https://github.com/jhuapl-boss/heaviside"}, "release_url": "https://pypi.org/project/heaviside/2.0/", "requires_dist": ["funcparserlib", "iso8601", "boto3 (>=1.4.3)"], "requires_python": "", "summary": "Python library and DSL for working with AWS StepFunctions", "version": "2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Heaviside</h1>\n<p>Heaviside is a domain specific language (DSL) and Python compiler / support\nlibraries for working with <a href=\"https://aws.amazon.com/step-functions/\" rel=\"nofollow\">AWS StepFunctions</a>.</p>\n<h2>Why</h2>\n<p>The reason for a StepFunctions DSL is that the <a href=\"https://states-language.net/spec.html\" rel=\"nofollow\">state machine language</a>, while\nflexible, is hard to write and maintain. The DSL provides a simplied format for\nwriting StepFunction state machines and serveral of common flow control\nstatements.</p>\n<h2>DSL</h2>\n<p>The <a href=\"docs/StepFunctionDSL.md\" rel=\"nofollow\">StepFunctionDSL</a> document describes the Heaviside DSL.</p>\n<h2>Getting Started</h2>\n<p>In this document <code>.hsd</code> will be used to denote a StepFunction file written in\nthe Heaviside DSL. The extension <code>.sfn</code> will be used to denote a StepFunction\nfile written in the AWS <a href=\"https://states-language.net/spec.html\" rel=\"nofollow\">state machine language</a>.</p>\n<h3>Installing</h3>\n<pre><code>pip install heaviside\n</code></pre>\n<h3>CLI Script</h3>\n<p>The Heaviside package installs a script called <code>heaviside</code> that provides a CLI\nto the library. Running the command without arguments or with the <code>--help</code> or\n<code>-h</code> flag will provide detailed help.</p>\n<h4>AWS Credentials</h4>\n<p>All sub-commands (except <code>compile</code>) connect to AWS to manipulate StepFunctions.\nThere are multiple ways to define the AWS credentials, listed in the order of\nprecedence.</p>\n<ul>\n<li>Explicitly pass the values as command line arguments or environmental variables</li>\n<li>Pass a file path to a JSON file with the arguments</li>\n<li>Letting Boto3 try to resolve secret / access keys</li>\n<li>Looking at EC2 meta data for current AWS region</li>\n<li>Looking at current IAM user for AWS account_id</li>\n</ul>\n<p>The <code>compile</code> sub-command doesn't connect to AWS, but does use the region and\naccount_id values when resolving Task ARNs. If the Heaviside DSL file has full\nTask ARNs or the compiled file will not be uploaded to AWS these values can be\nblank.</p>\n<p><strong>Note</strong>: Since <code>compile</code> doesn't connect to AWS, only the first two options in\nthe list above are valid for passing the region and account_id value.</p>\n<h4>Compiling</h4>\n<p>To compile a Heaviside file into a AWS StepFunction file use the <code>compile</code>\nsub-command.</p>\n<pre><code>$ heaviside compile state_machine.hsd -o state_machine.sfn \n</code></pre>\n<h4>Creating a StepFunction</h4>\n<p>The <code>heaviside</code> script can compile and upload the resulting file to AWS.</p>\n<pre><code>$ heaviside create state_machine.hsd AwsIamStepFunctionRole\n</code></pre>\n<p>Arguments:</p>\n<ul>\n<li><code>AwsIamStepFunctionRole</code>: The AWS IAM Role that the StepFunction will use\nwhen executing. Most often this will be used to\ncontrol which Lambdas and Activities the\nStepFunction has permission to execute.</li>\n</ul>\n<h4>Deleting a StepFunction</h4>\n<p>The <code>delete</code> sub-command can be used to delete an existing StepFunction</p>\n<pre><code>$ heaviside delete state_machine\n</code></pre>\n<h4>Executing a StepFunction</h4>\n<p>The <code>start</code> sub-command can be used to start executing a StepFunction.</p>\n<pre><code>$ heaviside start --json \"{}\" state_machine\n</code></pre>\n<p><strong>Note</strong>: By default the <code>start</code> sub-command will wait until the\nexecution has finished and will print the output of the StepFunction.</p>\n<h2>Python Library</h2>\n<p>The Heaviside package installs the Python library <code>heaviside</code>. There are three\ncomponents to the library.</p>\n<ul>\n<li><code>heaviside.compile</code>: The method used to compile a Heaviside DSL file into\na AWS StepFunction.</li>\n<li><code>heaviside.StateMachine</code>: Class for creating and executing StepFunctions.</li>\n<li><code>heaviside.activities</code>: A submodule containing several helper classes providing\na framework for running StepFunction Activities.\nSee the <a href=\"docs/Activites.md\" rel=\"nofollow\">Activities document</a> for more information.</li>\n</ul>\n<h2>Compatability</h2>\n<p>Currently Heaviside has only been tested with Python 2.7 and 3.5.</p>\n<h2>Related Projects</h2>\n<ul>\n<li><a href=\"https://github.com/awslabs/statelint\" rel=\"nofollow\">statelint</a>: A Ruby project that verifies a AWS StepFunction definition file.\nIncludes checks like making sure that all states are reachable.\nHelpful when developing a new StepFunction to ensure everything\nis correct. It will catch structural problems that Heaviside\ndoesn't check for.</li>\n</ul>\n<h2>Legal</h2>\n<p>Use or redistribution of the Boss system in source and/or binary forms, with or without modification, are permitted provided that the following conditions are met:</p>\n<ol>\n<li>Redistributions of source code or binary forms must adhere to the terms and conditions of any applicable software licenses.</li>\n<li>End-user documentation or notices, whether included as part of a redistribution or disseminated as part of a legal or scientific disclosure (e.g. publication) or advertisement, must include the following acknowledgement:  The Boss software system was designed and developed by the Johns Hopkins University Applied Physics Laboratory (JHU/APL).</li>\n<li>The names \"The Boss\", \"JHU/APL\", \"Johns Hopkins University\", \"Applied Physics Laboratory\", \"MICrONS\", or \"IARPA\" must not be used to endorse or promote products derived from this software without prior written permission. For written permission, please contact <a href=\"mailto:BossAdmin@jhuapl.edu\">BossAdmin@jhuapl.edu</a>.</li>\n<li>This source code and library is distributed in the hope that it will be useful, but is provided without any warranty of any kind.</li>\n</ol>\n\n          </div>"}, "last_serial": 5339346, "releases": {"0.8": [{"comment_text": "", "digests": {"md5": "a87c93a17ed4ab256d546cf1c35be3e0", "sha256": "1bc0049442065a669adc2411163a4f28131a7a48f6aa24c4111e1c577e3d3f65"}, "downloads": -1, "filename": "heaviside-0.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a87c93a17ed4ab256d546cf1c35be3e0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 31151, "upload_time": "2017-01-27T21:26:57", "upload_time_iso_8601": "2017-01-27T21:26:57.946360Z", "url": "https://files.pythonhosted.org/packages/22/17/6731f31099007017a9678f1b60120d8548036100b9b66641eabf25f48f7a/heaviside-0.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1dcedbc5e7e1560875386a156b422ec6", "sha256": "f5407359f536a26b9d676dd7a2f6f62db5eee9ed5698f35dd75ed5a7eb3b6f62"}, "downloads": -1, "filename": "heaviside-0.8.tar.gz", "has_sig": false, "md5_digest": "1dcedbc5e7e1560875386a156b422ec6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22849, "upload_time": "2017-01-27T21:26:59", "upload_time_iso_8601": "2017-01-27T21:26:59.140872Z", "url": "https://files.pythonhosted.org/packages/e8/6a/de2fdf5c1fd9b385c4671ee46715b1752aaea0d875493f67f31572fdca2e/heaviside-0.8.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "fd89e88223298ad63ffafa155864fd55", "sha256": "1e916c052d1e0184a160f651c6da2c2a59429fda7890dec96393c1b1bcd77891"}, "downloads": -1, "filename": "heaviside-1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fd89e88223298ad63ffafa155864fd55", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 35093, "upload_time": "2017-05-04T19:08:24", "upload_time_iso_8601": "2017-05-04T19:08:24.457059Z", "url": "https://files.pythonhosted.org/packages/bf/79/2fe1875f8dd0804b4b4ef8c2a4db7e7ae592e56c1691c0ed79dcbe7bbc8a/heaviside-1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "78827e184e10b9077230b96178c5f4d5", "sha256": "c82c47d523776964d9c60b4a714d1d28d790bb8cb066e9b174f2c256389c91e1"}, "downloads": -1, "filename": "heaviside-1.0.tar.gz", "has_sig": false, "md5_digest": "78827e184e10b9077230b96178c5f4d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26102, "upload_time": "2017-05-04T19:08:27", "upload_time_iso_8601": "2017-05-04T19:08:27.606453Z", "url": "https://files.pythonhosted.org/packages/e8/d7/c2e02f0a4b516cd39d77513db35f67310df6e5e7a8116f7ac36f22637cdb/heaviside-1.0.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "a46b0e63e7318ccc205485b5bc65cafc", "sha256": "1ee051d8e1ebb5ac085ed3097f5837f47f37eadc289947979b734bb95e545b3a"}, "downloads": -1, "filename": "heaviside-2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a46b0e63e7318ccc205485b5bc65cafc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 41414, "upload_time": "2019-05-30T20:01:32", "upload_time_iso_8601": "2019-05-30T20:01:32.012908Z", "url": "https://files.pythonhosted.org/packages/fd/0b/6c075d9e6e28d1ced40923baa84ed72281bad6fd17e933801787cc2badd6/heaviside-2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c72de4ce3f24b655ae26958d9cdb3cda", "sha256": "0a48ae416d8a01706745bdaa7145645bda9e9698508916bc763d0f51bc1c6868"}, "downloads": -1, "filename": "heaviside-2.0.tar.gz", "has_sig": false, "md5_digest": "c72de4ce3f24b655ae26958d9cdb3cda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31662, "upload_time": "2019-05-30T20:01:34", "upload_time_iso_8601": "2019-05-30T20:01:34.252679Z", "url": "https://files.pythonhosted.org/packages/71/86/1747281ec6811c8e8ba04f051efbd8e4593ea0d3c28d429144750bf5edbd/heaviside-2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a46b0e63e7318ccc205485b5bc65cafc", "sha256": "1ee051d8e1ebb5ac085ed3097f5837f47f37eadc289947979b734bb95e545b3a"}, "downloads": -1, "filename": "heaviside-2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a46b0e63e7318ccc205485b5bc65cafc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 41414, "upload_time": "2019-05-30T20:01:32", "upload_time_iso_8601": "2019-05-30T20:01:32.012908Z", "url": "https://files.pythonhosted.org/packages/fd/0b/6c075d9e6e28d1ced40923baa84ed72281bad6fd17e933801787cc2badd6/heaviside-2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c72de4ce3f24b655ae26958d9cdb3cda", "sha256": "0a48ae416d8a01706745bdaa7145645bda9e9698508916bc763d0f51bc1c6868"}, "downloads": -1, "filename": "heaviside-2.0.tar.gz", "has_sig": false, "md5_digest": "c72de4ce3f24b655ae26958d9cdb3cda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31662, "upload_time": "2019-05-30T20:01:34", "upload_time_iso_8601": "2019-05-30T20:01:34.252679Z", "url": "https://files.pythonhosted.org/packages/71/86/1747281ec6811c8e8ba04f051efbd8e4593ea0d3c28d429144750bf5edbd/heaviside-2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:53 2020"}