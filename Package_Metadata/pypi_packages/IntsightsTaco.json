{"info": {"author": "Intsights", "author_email": "Yair.Kuznitsov@intsights.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# Welcome to Taco!\n![Taco](https://github.com/Intsights/taco/raw/master/Taco-logo.png)\n### TL;DR\n\nTaco is an open-source library that will help you navigate the AWS maze. You would be able to build a state of the art AWS based platform without the complexity that tends to accompany processes like this. On top of that, Taco contains CloudFormation detailed and yet simplistic templates for AWS based CI/CD process that, at the time of writing, you won't find this kind of templates anywhere else.\n\n### **What is in my Taco?**\n*  **Pythonic wrappers to essential AWS services** and pythonic modules that implement high-level logic like cloud RefCounter and Mutex.\n* **CI/CD instructions** - Taco reveals to you how to build a CI/CD processes using AWS products by sharing detailed CloudFomation templates of CodeBuild, IAM roles, and CodePipeline.\n\n### Requirements:\n-   Python 3.6.7\n-   [AWS CLI](https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html)\n-   [Botocore pythonic package](https://pypi.org/project/botocore/)\n-   [Boto3 python package](https://pypi.org/project/boto3/)\n\n### *Why Should You Choose Taco? BECAUSE IT IS SIMPLE!*\n**Do you want to create new SQS and send there a message? No problem!**\n\n```python\nsqs = sqs_wrapper.SQSWrapper(aws_access_key=aws_access_key,\n                             aws_secret_key=aws_secret_key,\n                             region_name=region_name)\nsqs_creation_config = sqs_configs.SQSCreationConfig(queue_name,\n                                                    enable_dead_letter_queue=True,\n                                                    force_clean_queue=False,\n                                                    visibility_timeout_seconds=60)\nsqs.create_queue(sqs_creation_config)\nsqs.send_message(queue_name=queue_name, data=message_body, delay_seconds=delay_seconds)\n```\n**WAIT! THERE IS MORE!**\nTaco\u2019s pythonic wrappers require exactly the same **4 parameters for initialization** - Faw code lines and you have access to 4th most common AWS services:\n```python\n# ---- Logger ----\nlogger = taco.logger.logger.get_logger(name='initialize_wrappers_samples')\n\nwrappers_default_kwargs = {\n    'logger': logger,\n    'aws_access_key': aws_access_key,\n    'aws_secret_key': aws_secret_key,\n    'region_name': region_name\n}\n\n# SQS\nsqs = sqs_wrapper.SQSWrapper(**wrappers_default_kwargs)\n\n# S3 wrapper\ns3 = s3_wrapper.S3Wrapper(**wrappers_default_kwargs)\n\n# Auto Scaler\nauto_scaler = auto_scaler_wrapper.AutoScalerWrapper(**wrappers_default_kwargs)\n\n# DynamoDB - without auto scaler\ndynamodb = dynamodb_wrapper.DynamoDBWrapper(**wrappers_default_kwargs)\ndynamodb_with_auto_scaler = dynamodb_wrapper.DynamoDBWrapper(auto_scaler=auto_scaler, **wrappers_default_kwargs)\n```\n\n***We know your jaw just dropped, we can wait you will pick her up :)**\n\n\n### Look beyond what you see - Documentation and More Details:\n\nIn case you want to dig a little dipper (with or without your Taco) to have a better understanding, we highly recommend you to:\n* Examine our test files and samples - These files are the place to get to know this project details.\n* Read the following blog posts (Don't worry, they do have TL; DR):\n\t* [Taco\u2019s pythonic Wrappers](https://www.youtube.com/watch?v=EsYPry-9ukk) - You will understand how magnificent this open-source aws pythonic wrappers. They are like the high-level wrappers boto3 never had. Moreover, you will find logic implementations using Taco\u2019s wrappers like\n\t* [Taco\u2019s CI/CD instruction](https://www.youtube.com/watch?v=EsYPry-9ukk) - Do you use AWS services and wish to set up a catting edge CI/CD processe using CloudFomation, CodeBuild and CodePipeline ? Just read this post. Although it is a long post, we spare no details.\n\n\n\n*So Long, and Thanks for All the Fish.*\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Intsights/taco", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "IntsightsTaco", "package_url": "https://pypi.org/project/IntsightsTaco/", "platform": "", "project_url": "https://pypi.org/project/IntsightsTaco/", "project_urls": {"Bug Reports": "https://github.com/Intsights/taco/issues", "Homepage": "https://github.com/Intsights/taco", "Source": "https://github.com/Intsights/taco/"}, "release_url": "https://pypi.org/project/IntsightsTaco/0.0.1/", "requires_dist": ["boto3 (>=1.9.224)", "botocore (>=1.12.224)", "awscli (>=1.16.234)"], "requires_python": ">=3.6", "summary": "Intsights open-source library for some AWS resources and high level management objects for distributed backend systems", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Welcome to Taco!</h1>\n<p><img alt=\"Taco\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9b202c352716d66b3534f62724517252c3f60b1c/68747470733a2f2f6769746875622e636f6d2f496e747369676874732f7461636f2f7261772f6d61737465722f5461636f2d6c6f676f2e706e67\"></p>\n<h3>TL;DR</h3>\n<p>Taco is an open-source library that will help you navigate the AWS maze. You would be able to build a state of the art AWS based platform without the complexity that tends to accompany processes like this. On top of that, Taco contains CloudFormation detailed and yet simplistic templates for AWS based CI/CD process that, at the time of writing, you won't find this kind of templates anywhere else.</p>\n<h3><strong>What is in my Taco?</strong></h3>\n<ul>\n<li><strong>Pythonic wrappers to essential AWS services</strong> and pythonic modules that implement high-level logic like cloud RefCounter and Mutex.</li>\n<li><strong>CI/CD instructions</strong> - Taco reveals to you how to build a CI/CD processes using AWS products by sharing detailed CloudFomation templates of CodeBuild, IAM roles, and CodePipeline.</li>\n</ul>\n<h3>Requirements:</h3>\n<ul>\n<li>Python 3.6.7</li>\n<li><a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html\" rel=\"nofollow\">AWS CLI</a></li>\n<li><a href=\"https://pypi.org/project/botocore/\" rel=\"nofollow\">Botocore pythonic package</a></li>\n<li><a href=\"https://pypi.org/project/boto3/\" rel=\"nofollow\">Boto3 python package</a></li>\n</ul>\n<h3><em>Why Should You Choose Taco? BECAUSE IT IS SIMPLE!</em></h3>\n<p><strong>Do you want to create new SQS and send there a message? No problem!</strong></p>\n<pre><span class=\"n\">sqs</span> <span class=\"o\">=</span> <span class=\"n\">sqs_wrapper</span><span class=\"o\">.</span><span class=\"n\">SQSWrapper</span><span class=\"p\">(</span><span class=\"n\">aws_access_key</span><span class=\"o\">=</span><span class=\"n\">aws_access_key</span><span class=\"p\">,</span>\n                             <span class=\"n\">aws_secret_key</span><span class=\"o\">=</span><span class=\"n\">aws_secret_key</span><span class=\"p\">,</span>\n                             <span class=\"n\">region_name</span><span class=\"o\">=</span><span class=\"n\">region_name</span><span class=\"p\">)</span>\n<span class=\"n\">sqs_creation_config</span> <span class=\"o\">=</span> <span class=\"n\">sqs_configs</span><span class=\"o\">.</span><span class=\"n\">SQSCreationConfig</span><span class=\"p\">(</span><span class=\"n\">queue_name</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">enable_dead_letter_queue</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">force_clean_queue</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">visibility_timeout_seconds</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">)</span>\n<span class=\"n\">sqs</span><span class=\"o\">.</span><span class=\"n\">create_queue</span><span class=\"p\">(</span><span class=\"n\">sqs_creation_config</span><span class=\"p\">)</span>\n<span class=\"n\">sqs</span><span class=\"o\">.</span><span class=\"n\">send_message</span><span class=\"p\">(</span><span class=\"n\">queue_name</span><span class=\"o\">=</span><span class=\"n\">queue_name</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">message_body</span><span class=\"p\">,</span> <span class=\"n\">delay_seconds</span><span class=\"o\">=</span><span class=\"n\">delay_seconds</span><span class=\"p\">)</span>\n</pre>\n<p><strong>WAIT! THERE IS MORE!</strong>\nTaco\u2019s pythonic wrappers require exactly the same <strong>4 parameters for initialization</strong> - Faw code lines and you have access to 4th most common AWS services:</p>\n<pre><span class=\"c1\"># ---- Logger ----</span>\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">taco</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">get_logger</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'initialize_wrappers_samples'</span><span class=\"p\">)</span>\n\n<span class=\"n\">wrappers_default_kwargs</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'logger'</span><span class=\"p\">:</span> <span class=\"n\">logger</span><span class=\"p\">,</span>\n    <span class=\"s1\">'aws_access_key'</span><span class=\"p\">:</span> <span class=\"n\">aws_access_key</span><span class=\"p\">,</span>\n    <span class=\"s1\">'aws_secret_key'</span><span class=\"p\">:</span> <span class=\"n\">aws_secret_key</span><span class=\"p\">,</span>\n    <span class=\"s1\">'region_name'</span><span class=\"p\">:</span> <span class=\"n\">region_name</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># SQS</span>\n<span class=\"n\">sqs</span> <span class=\"o\">=</span> <span class=\"n\">sqs_wrapper</span><span class=\"o\">.</span><span class=\"n\">SQSWrapper</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">wrappers_default_kwargs</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># S3 wrapper</span>\n<span class=\"n\">s3</span> <span class=\"o\">=</span> <span class=\"n\">s3_wrapper</span><span class=\"o\">.</span><span class=\"n\">S3Wrapper</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">wrappers_default_kwargs</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Auto Scaler</span>\n<span class=\"n\">auto_scaler</span> <span class=\"o\">=</span> <span class=\"n\">auto_scaler_wrapper</span><span class=\"o\">.</span><span class=\"n\">AutoScalerWrapper</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">wrappers_default_kwargs</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># DynamoDB - without auto scaler</span>\n<span class=\"n\">dynamodb</span> <span class=\"o\">=</span> <span class=\"n\">dynamodb_wrapper</span><span class=\"o\">.</span><span class=\"n\">DynamoDBWrapper</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">wrappers_default_kwargs</span><span class=\"p\">)</span>\n<span class=\"n\">dynamodb_with_auto_scaler</span> <span class=\"o\">=</span> <span class=\"n\">dynamodb_wrapper</span><span class=\"o\">.</span><span class=\"n\">DynamoDBWrapper</span><span class=\"p\">(</span><span class=\"n\">auto_scaler</span><span class=\"o\">=</span><span class=\"n\">auto_scaler</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">wrappers_default_kwargs</span><span class=\"p\">)</span>\n</pre>\n<p>*<strong>We know your jaw just dropped, we can wait you will pick her up :)</strong></p>\n<h3>Look beyond what you see - Documentation and More Details:</h3>\n<p>In case you want to dig a little dipper (with or without your Taco) to have a better understanding, we highly recommend you to:</p>\n<ul>\n<li>Examine our test files and samples - These files are the place to get to know this project details.</li>\n<li>Read the following blog posts (Don't worry, they do have TL; DR):\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=EsYPry-9ukk\" rel=\"nofollow\">Taco\u2019s pythonic Wrappers</a> - You will understand how magnificent this open-source aws pythonic wrappers. They are like the high-level wrappers boto3 never had. Moreover, you will find logic implementations using Taco\u2019s wrappers like</li>\n<li><a href=\"https://www.youtube.com/watch?v=EsYPry-9ukk\" rel=\"nofollow\">Taco\u2019s CI/CD instruction</a> - Do you use AWS services and wish to set up a catting edge CI/CD processe using CloudFomation, CodeBuild and CodePipeline ? Just read this post. Although it is a long post, we spare no details.</li>\n</ul>\n</li>\n</ul>\n<p><em>So Long, and Thanks for All the Fish.</em></p>\n\n          </div>"}, "last_serial": 5803394, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "8b9030644b2db134b944b51ed3eef79e", "sha256": "45c90ded366b421f422c45817c2ee52a89f480bdc78562f0ae83019df0bcd89a"}, "downloads": -1, "filename": "IntsightsTaco-0.0.1-py2.7.egg", "has_sig": false, "md5_digest": "8b9030644b2db134b944b51ed3eef79e", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": ">=3.6", "size": 95245, "upload_time": "2019-09-09T12:31:42", "upload_time_iso_8601": "2019-09-09T12:31:42.306843Z", "url": "https://files.pythonhosted.org/packages/cc/be/999522d0a9a9dfd4e2a6198cfc58b841f0c53815e8e3c97e1fb91c37a130/IntsightsTaco-0.0.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "221f997b47506201684efd86f1593ef5", "sha256": "5b8ceecd066210d5dfa164e16f27e7f17e30417164cbdf3b0c0527e65e2fd345"}, "downloads": -1, "filename": "IntsightsTaco-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "221f997b47506201684efd86f1593ef5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 46429, "upload_time": "2019-09-09T12:31:39", "upload_time_iso_8601": "2019-09-09T12:31:39.026875Z", "url": "https://files.pythonhosted.org/packages/96/6c/9256df246cec787b199e48251cfb6a924efa63e18fc6f8336c6003fd9e35/IntsightsTaco-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "370a2b3676e1b6af26fa41725653218c", "sha256": "7bc384a96d3310f7809f82031d76d2805a6d8a073130701cf51fc2b79d47e893"}, "downloads": -1, "filename": "IntsightsTaco-0.0.1.tar.gz", "has_sig": false, "md5_digest": "370a2b3676e1b6af26fa41725653218c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25444, "upload_time": "2019-09-09T12:31:44", "upload_time_iso_8601": "2019-09-09T12:31:44.658997Z", "url": "https://files.pythonhosted.org/packages/bd/8d/d808dc2cb5def8963a9c2eee53e329bbc4bc3ef5ad9a8a08f9b4fb54762a/IntsightsTaco-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8b9030644b2db134b944b51ed3eef79e", "sha256": "45c90ded366b421f422c45817c2ee52a89f480bdc78562f0ae83019df0bcd89a"}, "downloads": -1, "filename": "IntsightsTaco-0.0.1-py2.7.egg", "has_sig": false, "md5_digest": "8b9030644b2db134b944b51ed3eef79e", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": ">=3.6", "size": 95245, "upload_time": "2019-09-09T12:31:42", "upload_time_iso_8601": "2019-09-09T12:31:42.306843Z", "url": "https://files.pythonhosted.org/packages/cc/be/999522d0a9a9dfd4e2a6198cfc58b841f0c53815e8e3c97e1fb91c37a130/IntsightsTaco-0.0.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "221f997b47506201684efd86f1593ef5", "sha256": "5b8ceecd066210d5dfa164e16f27e7f17e30417164cbdf3b0c0527e65e2fd345"}, "downloads": -1, "filename": "IntsightsTaco-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "221f997b47506201684efd86f1593ef5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 46429, "upload_time": "2019-09-09T12:31:39", "upload_time_iso_8601": "2019-09-09T12:31:39.026875Z", "url": "https://files.pythonhosted.org/packages/96/6c/9256df246cec787b199e48251cfb6a924efa63e18fc6f8336c6003fd9e35/IntsightsTaco-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "370a2b3676e1b6af26fa41725653218c", "sha256": "7bc384a96d3310f7809f82031d76d2805a6d8a073130701cf51fc2b79d47e893"}, "downloads": -1, "filename": "IntsightsTaco-0.0.1.tar.gz", "has_sig": false, "md5_digest": "370a2b3676e1b6af26fa41725653218c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25444, "upload_time": "2019-09-09T12:31:44", "upload_time_iso_8601": "2019-09-09T12:31:44.658997Z", "url": "https://files.pythonhosted.org/packages/bd/8d/d808dc2cb5def8963a9c2eee53e329bbc4bc3ef5ad9a8a08f9b4fb54762a/IntsightsTaco-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:20 2020"}