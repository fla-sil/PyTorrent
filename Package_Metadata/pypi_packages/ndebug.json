{"info": {"author": "Malcom Gilbert, Peter Magnusson", "author_email": "peter@kmpm.se", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5"], "description": "# py-ndebug\nTiny python debugging utility modeled after visionmedia's node.js debug module and the python 3 print function.\n\n[![CircleCI](https://circleci.com/gh/kmpm/py-ndebug.svg?style=svg)](https://circleci.com/gh/kmpm/py-ndebug)\n[![PyPI version](https://badge.fury.io/py/ndebug.svg)](https://badge.fury.io/py/ndebug)\n\n## Installation\n\n```\n$ pip install ndebug\n```\n\n## Usage\n\n With `create` you simply invoke the exported function to generate your debug function, passing it a name which will determine if a noop function is returned, or custom decorated function that emulates the python 3 `print` function but, by default, prints to `sys.stderr`. A unique color is selected per-function for visibility.\n\nExample _test.py_:\n\n```py\nimport ndebug\nimport time\n\n# \n# ndebug.create(name)\n#\n# once you have initialized the debug module you can call it as shown below\n#\n# debug(*objects, sep=' ', end='\\n', file=sys.stderr, flush=False)\n#\n\ndebug = ndebug.create(\"test\")\ndebug(\"hi there2\")\n\ndebug2 = ndebug.create(\"test2\")\ndebug2(\"awesome\")\n\ndebug({\"awesome\": True}, True, 1, \"test\")\ndebug([], {1,2,3}, {\"awesome\": True}, True, 1, \"test\")\n\ntime.sleep(0.1)\ndebug('should be milliseconds now')\n\ntime.sleep(1)\ndebug('should be seconds now')\n```\n\n The __DEBUG__ environment variable is then used to enable these based on space or comma-delimited names. Here are some examples:\n\n```\n$ DEBUG=* python -m examples\n$ DEBUG=examples:test1 python -m examples\n$ DEBUG=examples:test2 python -m examples\n$ DEBUG=examples:* python -m examples\n```\n\n## Microsecond diff\n\n  When actively developing an application it can be useful to see when the time spent between one `debug()` call and the next. Suppose for example you invoke `debug()` before requesting a resource, and after as well, the \"+NNNus\" will show you how much time was spent between calls.\n\n## When File is not a TTY\n  When the file is not a TTY, `to_utc_string()` is called which mimicks the default behavior of the Javascript `Date#toUTCString()` method used in the node.js debug module, making it more useful for logging the debug information as shown below\n\n```\n$ DEBUG=* python -m examples 2>&1 | grep test\n$ DEBUG=* python -m examples 2>&1 | grep test2\n```\n\n\n## Conventions\n\n If you're using this in one or more of your libraries, you _should_ use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you _should_ prefix them with your library name and use \":\" to separate features. For example \"bodyParser\" from Connect would then be \"connect:bodyParser\". \n\n## Wildcards\n\n  The \"*\" character may be used as a wildcard. Suppose for example your library has debuggers named \"connect:bodyParser\", \"connect:compress\", \"connect:session\", instead of listing all three with `DEBUG=connect:bodyParser,connect.compress,connect:session`, you may simply do `DEBUG=connect:*`, or to run everything using this module simply use `DEBUG=*`.\n\n  You can also exclude specific debuggers by prefixing them with a \"-\" character or whitespace.  For example:\n\n```\n$ DEBUG=examples:*,-examples:test1 python -m examples\n```\n\n## License \n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Malcom Gilbert\nCopyright (c) 2019 Peter Magnusson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kmpm/py-ndebug", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ndebug", "package_url": "https://pypi.org/project/ndebug/", "platform": "", "project_url": "https://pypi.org/project/ndebug/", "project_urls": {"Homepage": "https://github.com/kmpm/py-ndebug"}, "release_url": "https://pypi.org/project/ndebug/0.1.1/", "requires_dist": ["colorama (>=0.4.1)"], "requires_python": "", "summary": "Tiny python debugging utility like node.js debug module", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>py-ndebug</h1>\n<p>Tiny python debugging utility modeled after visionmedia's node.js debug module and the python 3 print function.</p>\n<p><a href=\"https://circleci.com/gh/kmpm/py-ndebug\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f043cccc7583b51041b43423d3b5efe89af17908/68747470733a2f2f636972636c6563692e636f6d2f67682f6b6d706d2f70792d6e64656275672e7376673f7374796c653d737667\"></a>\n<a href=\"https://badge.fury.io/py/ndebug\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4e37e0ee1632d8e48fe0cd99d21d31873e49b647/68747470733a2f2f62616467652e667572792e696f2f70792f6e64656275672e737667\"></a></p>\n<h2>Installation</h2>\n<pre><code>$ pip install ndebug\n</code></pre>\n<h2>Usage</h2>\n<p>With <code>create</code> you simply invoke the exported function to generate your debug function, passing it a name which will determine if a noop function is returned, or custom decorated function that emulates the python 3 <code>print</code> function but, by default, prints to <code>sys.stderr</code>. A unique color is selected per-function for visibility.</p>\n<p>Example <em>test.py</em>:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">ndebug</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"c1\"># </span>\n<span class=\"c1\"># ndebug.create(name)</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># once you have initialized the debug module you can call it as shown below</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># debug(*objects, sep=' ', end='\\n', file=sys.stderr, flush=False)</span>\n<span class=\"c1\">#</span>\n\n<span class=\"n\">debug</span> <span class=\"o\">=</span> <span class=\"n\">ndebug</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"s2\">\"test\"</span><span class=\"p\">)</span>\n<span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s2\">\"hi there2\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">debug2</span> <span class=\"o\">=</span> <span class=\"n\">ndebug</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"s2\">\"test2\"</span><span class=\"p\">)</span>\n<span class=\"n\">debug2</span><span class=\"p\">(</span><span class=\"s2\">\"awesome\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">debug</span><span class=\"p\">({</span><span class=\"s2\">\"awesome\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">},</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">\"test\"</span><span class=\"p\">)</span>\n<span class=\"n\">debug</span><span class=\"p\">([],</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s2\">\"awesome\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">},</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">\"test\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n<span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'should be milliseconds now'</span><span class=\"p\">)</span>\n\n<span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'should be seconds now'</span><span class=\"p\">)</span>\n</pre>\n<p>The <strong>DEBUG</strong> environment variable is then used to enable these based on space or comma-delimited names. Here are some examples:</p>\n<pre><code>$ DEBUG=* python -m examples\n$ DEBUG=examples:test1 python -m examples\n$ DEBUG=examples:test2 python -m examples\n$ DEBUG=examples:* python -m examples\n</code></pre>\n<h2>Microsecond diff</h2>\n<p>When actively developing an application it can be useful to see when the time spent between one <code>debug()</code> call and the next. Suppose for example you invoke <code>debug()</code> before requesting a resource, and after as well, the \"+NNNus\" will show you how much time was spent between calls.</p>\n<h2>When File is not a TTY</h2>\n<p>When the file is not a TTY, <code>to_utc_string()</code> is called which mimicks the default behavior of the Javascript <code>Date#toUTCString()</code> method used in the node.js debug module, making it more useful for logging the debug information as shown below</p>\n<pre><code>$ DEBUG=* python -m examples 2&gt;&amp;1 | grep test\n$ DEBUG=* python -m examples 2&gt;&amp;1 | grep test2\n</code></pre>\n<h2>Conventions</h2>\n<p>If you're using this in one or more of your libraries, you <em>should</em> use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you <em>should</em> prefix them with your library name and use \":\" to separate features. For example \"bodyParser\" from Connect would then be \"connect:bodyParser\".</p>\n<h2>Wildcards</h2>\n<p>The \"*\" character may be used as a wildcard. Suppose for example your library has debuggers named \"connect:bodyParser\", \"connect:compress\", \"connect:session\", instead of listing all three with <code>DEBUG=connect:bodyParser,connect.compress,connect:session</code>, you may simply do <code>DEBUG=connect:*</code>, or to run everything using this module simply use <code>DEBUG=*</code>.</p>\n<p>You can also exclude specific debuggers by prefixing them with a \"-\" character or whitespace.  For example:</p>\n<pre><code>$ DEBUG=examples:*,-examples:test1 python -m examples\n</code></pre>\n<h2>License</h2>\n<p>The MIT License (MIT)</p>\n<p>Copyright (c) 2013 Malcom Gilbert\nCopyright (c) 2019 Peter Magnusson</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>\n\n          </div>"}, "last_serial": 6874846, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "3f44872392f9a94a0b395d7af6a1a5f9", "sha256": "7d7a9ead463cc9be2fdf3f2da95d51bf17d1db578fb9cc26cd16af5976351c71"}, "downloads": -1, "filename": "ndebug-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3f44872392f9a94a0b395d7af6a1a5f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6604, "upload_time": "2019-02-11T19:59:17", "upload_time_iso_8601": "2019-02-11T19:59:17.159331Z", "url": "https://files.pythonhosted.org/packages/25/63/56cd614640c5b3fbf529d2d05c025ac4d8ac4ce79305d5457bbf92710bc3/ndebug-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7cdb1ce5954c5ab71460674a342b4661", "sha256": "ac5b75810b80f9504f30068523533e35a99b004ec02ad209e8ef3a3088601471"}, "downloads": -1, "filename": "ndebug-0.1.0.tar.gz", "has_sig": false, "md5_digest": "7cdb1ce5954c5ab71460674a342b4661", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5847, "upload_time": "2019-02-11T19:59:19", "upload_time_iso_8601": "2019-02-11T19:59:19.367732Z", "url": "https://files.pythonhosted.org/packages/3b/ab/16a3c7b8bec439a16311b126b5d4579bcaf0c4cb3b11a1d1c0c03ed6071c/ndebug-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ce9cdc6a286d05ff57359aef763fa4fd", "sha256": "cc286b22d983e4e05dab3485852c5d0bc642689d246591be4284b3cd5ef2896e"}, "downloads": -1, "filename": "ndebug-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ce9cdc6a286d05ff57359aef763fa4fd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6636, "upload_time": "2020-03-24T17:59:57", "upload_time_iso_8601": "2020-03-24T17:59:57.980101Z", "url": "https://files.pythonhosted.org/packages/5f/6e/6310533e6be96c746ca9dad6ebe1a9a87e96d809614533a36ea3ac2c22ae/ndebug-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a68f858d63d02ce2c856067159c555a2", "sha256": "6bbaa5f88216959eb4fcb75ec4344ff3d01e13c73f771258ee283a07c9864013"}, "downloads": -1, "filename": "ndebug-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a68f858d63d02ce2c856067159c555a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5821, "upload_time": "2020-03-24T17:59:59", "upload_time_iso_8601": "2020-03-24T17:59:59.208603Z", "url": "https://files.pythonhosted.org/packages/10/2b/91c37f9031e34dc21d841347ebdcd298fa156c0a2c55a5363abd5a0d5447/ndebug-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ce9cdc6a286d05ff57359aef763fa4fd", "sha256": "cc286b22d983e4e05dab3485852c5d0bc642689d246591be4284b3cd5ef2896e"}, "downloads": -1, "filename": "ndebug-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ce9cdc6a286d05ff57359aef763fa4fd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6636, "upload_time": "2020-03-24T17:59:57", "upload_time_iso_8601": "2020-03-24T17:59:57.980101Z", "url": "https://files.pythonhosted.org/packages/5f/6e/6310533e6be96c746ca9dad6ebe1a9a87e96d809614533a36ea3ac2c22ae/ndebug-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a68f858d63d02ce2c856067159c555a2", "sha256": "6bbaa5f88216959eb4fcb75ec4344ff3d01e13c73f771258ee283a07c9864013"}, "downloads": -1, "filename": "ndebug-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a68f858d63d02ce2c856067159c555a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5821, "upload_time": "2020-03-24T17:59:59", "upload_time_iso_8601": "2020-03-24T17:59:59.208603Z", "url": "https://files.pythonhosted.org/packages/10/2b/91c37f9031e34dc21d841347ebdcd298fa156c0a2c55a5363abd5a0d5447/ndebug-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:44 2020"}