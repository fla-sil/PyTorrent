{"info": {"author": "GoPay", "author_email": "integrace@gopay.cz", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "GoPay's Python SDK for Payments REST API\n========================================\n\n|Build Status|\n\n\u00a0Requirements\n-------------\n\n-  Python >= 2.6, Python 3\n\n\n\u00a0Installation\n-------------\n\nThe simplest way to install SDK is to use\n`PIP <https://docs.python.org/2.7/installing/>`__:\n\n.. code:: bash\n\n    pip install gopay\n\nBasic usage\n-----------\n\n.. code:: python\n\n    import gopay\n\n    # minimal configuration\n    payments = gopay.payments({\n        'goid': 'my goid',\n        'clientId': 'my id',\n        'clientSecret': 'my secret',\n        'isProductionMode': False\n    })\n\n    # full configuration\n    payments = gopay.payments({\n        'goid': 'my goid',\n        'clientId': 'my id',\n        'clientSecret': 'my secret',\n        'isProductionMode': False,\n        'scope': gopay.TokenScope.ALL,\n        'language': gopay.Language.CZECH,\n        'timeout': 30\n    })\n\nConfiguration\n~~~~~~~~~~~~~\n\nRequired fields\n^^^^^^^^^^^^^^^\n\n+------------------------+-------------+-----------------------------------------------------------------------------------+\n| Required field         | Data type   | Documentation                                                                     |\n+========================+=============+===================================================================================+\n| ``goid``               | string      | default GoPay account used in ``create_payment`` if ``target`` is not specified   |\n+------------------------+-------------+-----------------------------------------------------------------------------------+\n| ``clientId``           | string      | https://doc.gopay.com/en/?shell#oauth                                             |\n+------------------------+-------------+-----------------------------------------------------------------------------------+\n| ``clientSecret``       | string      | https://doc.gopay.com/en/?shell#oauth                                             |\n+------------------------+-------------+-----------------------------------------------------------------------------------+\n| ``isProductionMode``   | boolean     | `test or production environment? <https://help.gopay.com/en/s/ey>`__              |\n+------------------------+-------------+-----------------------------------------------------------------------------------+\n\nOptional fields\n^^^^^^^^^^^^^^^\n\n+------------------+-------------+----------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Optional field   | Data type   | Default value                                            | Documentation                                                                                                                                            |\n+==================+=============+==========================================================+==========================================================================================================================================================+\n| ``scope``        | string      | ```gopay.enums.TokenScope.ALL`` </gopay/enums.py>`__     | https://doc.gopay.com/en/?shell#scope                                                                                                                    |\n+------------------+-------------+----------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``language``     | string      | ```gopay.enums.Language.ENGLISH`` </gopay/enums.py>`__   | language used in ``create_payment`` if ``lang`` is not specified + used for `localization of errors <https://doc.gopay.com/en/?shell#return-errors>`__   |\n+------------------+-------------+----------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+\n| ``timeout``      | int         | 30                                                       | Browser timeout in seconds                                                                                                                               |\n+------------------+-------------+----------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+\n\n\u00a0Available methods\n~~~~~~~~~~~~~~~~~~\n\n+-------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+\n| API                                                                                                                     | SDK method                                         |\n+=========================================================================================================================+====================================================+\n| `Create standard payment <https://doc.gopay.com/en/#standard-payment>`__                                                | ``payments.create_payment({})``                    |\n+-------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+\n| `Status of the payment <https://doc.gopay.com/en/#status-of-the-payment>`__                                             | ``payments.get_status(id_payment)``                |\n+-------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+\n| `Refund of the payment <https://doc.gopay.com/en/#refund-of-the-payment-(cancelation)>`__                               | ``payments.refund_payment(id_payment, $amount)``   |\n+-------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+\n| `Create recurring payment <https://doc.gopay.com/en/#recurring-payment>`__                                              | ``payments.create_payment({})``                    |\n+-------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+\n| `Recurring payment on demand <https://doc.gopay.com/en/#recurring-payment-on-demand>`__                                 | ``payments.create_recurrence(id_payment, {})``     |\n+-------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+\n| `Cancellation of the recurring payment <https://doc.gopay.com/en/#cancellation-of-the-recurring-payment>`__             | ``payments.void_recurrence(id_payment)``           |\n+-------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+\n| `Create pre-authorized payment <https://doc.gopay.com/en/#pre-authorized-payment>`__                                    | ``payments.create_payment({})``                    |\n+-------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+\n| `Charge of pre-authorized payment <https://doc.gopay.com/en/#charge-of-pre-authorized-payment>`__                       | ``payments.capture_authorization(id_payment)``     |\n+-------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+\n| `Cancellation of the pre-authorized payment <https://doc.gopay.com/en/#cancellation-of-the-pre-authorized-payment>`__   | ``payments.void_authorization(id_payment)``        |\n+-------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+\n\nSDK response? Has my call succeed?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n| SDK returns wrapped API response. Every method returns\n| ```gopay.http.response`` object </gopay/http.py>`__. Structure of\n``json/__str__``\n| should be same as in `documentation <https://doc.gopay.com/en>`__.\n| SDK throws no exception. Please create an issue if you catch one.\n\n.. code:: python\n\n    response = payments.create_payment({})\n    if response.has_succeed():\n        print(\"hooray, API returned \" + str(response))\n        return response.json['gw_url'] # url for initiation of gateway\n    else:\n        # errors format: https://doc.gopay.com/en/?shell#http-result-codes\n        print(\"oops, API returned \" + str(response.status_code) + \": \" + str(response))\n\n+------------------------------+----------------------------------------------------------------------------+\n| Method                       | Description                                                                |\n+==============================+============================================================================+\n| ``response.has_succeed()``   | checks if API returns status code *200*                                    |\n+------------------------------+----------------------------------------------------------------------------+\n| ``response.json``            | decoded response, returned objects are converted into associative arrays   |\n+------------------------------+----------------------------------------------------------------------------+\n| ``response.status_code``     | HTTP status code                                                           |\n+------------------------------+----------------------------------------------------------------------------+\n| ``response.__str__()``       | raw body from HTTP response                                                |\n+------------------------------+----------------------------------------------------------------------------+\n\n\u00a0Are required fields and allowed values validated?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n| **No.** API `validates\nfields <https://doc.gopay.com/en/?shell#return-errors>`__ pretty\nextensively\n| so there is no need to duplicate validation in SDK. It would only\nintroduce new type of error.\n| Or we would have to perfectly simulate API error messages. That's why\nSDK just calls API which\n| behavior is well documented in\n`doc.gopay.com <https://doc.gopay.com/en>`__.\n\n--------------\n\nAdvanced usage\n--------------\n\nInitiation of the payment gateway\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    # create payment and pass url to template\n    response = payments.create_payment({})\n    if response.has_succeed():\n        templateParameters = {\n            'gatewayUrl': response.json['gw_url'],\n            'embedJs': gopay.url_to_embedjs()\n        }\n        # render template\n\n`Inline gateway <https://doc.gopay.com/en/#inline-option>`__\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: jinja\n\n    <form action=\"<%= $gatewayUrl %>\" method=\"post\" id=\"gopay-payment-button\">\n      <button name=\"pay\" type=\"submit\">Pay</button>\n      <script type=\"text/javascript\" src=\"<%= $embedJs %>\"></script>\n    </form>\n\n`Redirect gateway <https://doc.gopay.com/en/#redirect-option>`__\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: jinja\n\n    <form action=\"<%= $gatewayUrl %>\" method=\"post\">\n      <button name=\"pay\" type=\"submit\">Pay</button>\n    </form>\n\n`Asynchronous initialization using JavaScript <https://github.com/gopaycommunity/gopay-php-api/blob/master/examples/js-initialization.md>`__\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nEnums (`Code lists <https://doc.gopay.com/en/#code-lists>`__)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n| Instead of hardcoding bank codes string you can use predefined enums.\n| Check using enums in `create-payment\nexample </examples/create_payment.py>`__\n\n+----------------------------------------+------------------------------------------------------------------------+\n| Type                                   | Description                                                            |\n+========================================+========================================================================+\n| `Language </gopay/enums.py>`__         | Payment language, localization of error messages                       |\n+----------------------------------------+------------------------------------------------------------------------+\n| `Token scope </gopay/enums.py>`__      | Authorization scope for `OAuth2 <https://doc.gopay.com/en/#oauth>`__   |\n+----------------------------------------+------------------------------------------------------------------------+\n| `Payment enums </gopay/enums.py>`__    | Enums for creating payment                                             |\n+----------------------------------------+------------------------------------------------------------------------+\n| `Response enums </gopay/enums.py>`__   | Result of creating payment, executing payment operations               |\n+----------------------------------------+------------------------------------------------------------------------+\n\nCache access token\n~~~~~~~~~~~~~~~~~~\n\n| Access token expires after 30 minutes so it's expensive to use new\ntoken for every request.\n| Unfortunately it's default behavior of\n```gopay.oauth2.InMemoryTokenCache`` </gopay/oauth2.py>`__.\n| But you can implement your cache and store tokens in Memcache, Redis,\nfiles, ... It's up to you.\n\n| Your cache must implement template methods ``get_token`` and\n``set_token``.\n| Be aware that there are two\n`scopes <https://doc.gopay.com/en/?shell#scope>`__ (``TokenScope``) and\n| SDK can be used for different clients (``clientId``,\n``isProductionMode``). So ``client`` passed to\n| methods is unique identifier (``string``) that is built for current\nenvironment.\n| Below you can see example implementation of caching tokens in memory:\n\n.. code:: python\n\n    # register cache in optional service configuration\n    payments = gopay.payments(\n        {}, # your config\n        {'cache': MyCache()}\n    )\n\n.. code:: python\n\n    class MyCache:\n        def __init__(self):\n            self.tokens = {}\n\n        def get_token(self, client):\n            return self.tokens.get(client) # return None if token not exists\n\n        def set_token(self, client, token):\n            self.tokens[client] = token\n\nLog HTTP communication\n~~~~~~~~~~~~~~~~~~~~~~\n\n| You can log every request and response from communication with API.\nCheck available loggers below.\n| Or you can implement your own logger, just implement function that\ntakes two arguments:\n| ```gopay.http.request`` </gopay/http.py>`__ and\n```gopay.http.response`` </gopay/http.py>`__.\n\n.. code:: python\n\n    # register logger in optional service configuration\n    payments = gopay.payments(\n        {}, # your config\n        {'logger': my_logger}\n    )\n\n    def my_logger(request, response):\n        print(vars(request))\n        print(vars(response))\n\n+--------------------------------------------------------------+-------------------------------------------------------------------+\n| Available logger                                             | Description                                                       |\n+==============================================================+===================================================================+\n| `gopay.http.null\\_logger </gopay/http.py>`__                 | Default logger which does nothing                                 |\n+--------------------------------------------------------------+-------------------------------------------------------------------+\n| `tests.remote.debug\\_logger </tests/remote/__init__.py>`__   | Prints request and response in `remote tests <tests/remote/>`__   |\n+--------------------------------------------------------------+-------------------------------------------------------------------+\n\nContributing\n------------\n\n| Contributions from others would be very much appreciated! Send\n| `pull\nrequest <https://github.com/gopaycommunity/gopay-python-api/pulls>`__/\n| `issue <https://github.com/gopaycommunity/gopay-python-api/issues>`__.\nThanks!\n\nLicense\n-------\n\n| Copyright (c) 2015 GoPay.com. MIT Licensed,\n| see\n`LICENSE <https://github.com/gopaycommunity/gopay-python-api/blob/master/LICENSE>`__\nfor details.\n\n.. |Build Status| image:: https://travis-ci.org/gopaycommunity/gopay-python-api.svg?branch=master\n:target: https://travis-ci.org/gopaycommunity/gopay-python-api\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gopaycommunity/gopay-python-sdk", "keywords": "gopay payments sdk rest api", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "gopay", "package_url": "https://pypi.org/project/gopay/", "platform": "", "project_url": "https://pypi.org/project/gopay/", "project_urls": {"Homepage": "https://github.com/gopaycommunity/gopay-python-sdk"}, "release_url": "https://pypi.org/project/gopay/1.2.3/", "requires_dist": null, "requires_python": "", "summary": "GoPay's Python SDK for Payments REST API", "version": "1.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            GoPay's Python SDK for Payments REST API<br>========================================<br><br>|Build Status|<br><br>\u00a0Requirements<br>-------------<br><br>-  Python &gt;= 2.6, Python 3<br><br><br>\u00a0Installation<br>-------------<br><br>The simplest way to install SDK is to use<br>`PIP &lt;https://docs.python.org/2.7/installing/&gt;`__:<br><br>.. code:: bash<br><br>    pip install gopay<br><br>Basic usage<br>-----------<br><br>.. code:: python<br><br>    import gopay<br><br>    # minimal configuration<br>    payments = gopay.payments({<br>        'goid': 'my goid',<br>        'clientId': 'my id',<br>        'clientSecret': 'my secret',<br>        'isProductionMode': False<br>    })<br><br>    # full configuration<br>    payments = gopay.payments({<br>        'goid': 'my goid',<br>        'clientId': 'my id',<br>        'clientSecret': 'my secret',<br>        'isProductionMode': False,<br>        'scope': gopay.TokenScope.ALL,<br>        'language': gopay.Language.CZECH,<br>        'timeout': 30<br>    })<br><br>Configuration<br>~~~~~~~~~~~~~<br><br>Required fields<br>^^^^^^^^^^^^^^^<br><br>+------------------------+-------------+-----------------------------------------------------------------------------------+<br>| Required field         | Data type   | Documentation                                                                     |<br>+========================+=============+===================================================================================+<br>| ``goid``               | string      | default GoPay account used in ``create_payment`` if ``target`` is not specified   |<br>+------------------------+-------------+-----------------------------------------------------------------------------------+<br>| ``clientId``           | string      | https://doc.gopay.com/en/?shell#oauth                                             |<br>+------------------------+-------------+-----------------------------------------------------------------------------------+<br>| ``clientSecret``       | string      | https://doc.gopay.com/en/?shell#oauth                                             |<br>+------------------------+-------------+-----------------------------------------------------------------------------------+<br>| ``isProductionMode``   | boolean     | `test or production environment? &lt;https://help.gopay.com/en/s/ey&gt;`__              |<br>+------------------------+-------------+-----------------------------------------------------------------------------------+<br><br>Optional fields<br>^^^^^^^^^^^^^^^<br><br>+------------------+-------------+----------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+<br>| Optional field   | Data type   | Default value                                            | Documentation                                                                                                                                            |<br>+==================+=============+==========================================================+==========================================================================================================================================================+<br>| ``scope``        | string      | ```gopay.enums.TokenScope.ALL`` &lt;/gopay/enums.py&gt;`__     | https://doc.gopay.com/en/?shell#scope                                                                                                                    |<br>+------------------+-------------+----------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+<br>| ``language``     | string      | ```gopay.enums.Language.ENGLISH`` &lt;/gopay/enums.py&gt;`__   | language used in ``create_payment`` if ``lang`` is not specified + used for `localization of errors &lt;https://doc.gopay.com/en/?shell#return-errors&gt;`__   |<br>+------------------+-------------+----------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+<br>| ``timeout``      | int         | 30                                                       | Browser timeout in seconds                                                                                                                               |<br>+------------------+-------------+----------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+<br><br>\u00a0Available methods<br>~~~~~~~~~~~~~~~~~~<br><br>+-------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+<br>| API                                                                                                                     | SDK method                                         |<br>+=========================================================================================================================+====================================================+<br>| `Create standard payment &lt;https://doc.gopay.com/en/#standard-payment&gt;`__                                                | ``payments.create_payment({})``                    |<br>+-------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+<br>| `Status of the payment &lt;https://doc.gopay.com/en/#status-of-the-payment&gt;`__                                             | ``payments.get_status(id_payment)``                |<br>+-------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+<br>| `Refund of the payment &lt;https://doc.gopay.com/en/#refund-of-the-payment-(cancelation)&gt;`__                               | ``payments.refund_payment(id_payment, $amount)``   |<br>+-------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+<br>| `Create recurring payment &lt;https://doc.gopay.com/en/#recurring-payment&gt;`__                                              | ``payments.create_payment({})``                    |<br>+-------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+<br>| `Recurring payment on demand &lt;https://doc.gopay.com/en/#recurring-payment-on-demand&gt;`__                                 | ``payments.create_recurrence(id_payment, {})``     |<br>+-------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+<br>| `Cancellation of the recurring payment &lt;https://doc.gopay.com/en/#cancellation-of-the-recurring-payment&gt;`__             | ``payments.void_recurrence(id_payment)``           |<br>+-------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+<br>| `Create pre-authorized payment &lt;https://doc.gopay.com/en/#pre-authorized-payment&gt;`__                                    | ``payments.create_payment({})``                    |<br>+-------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+<br>| `Charge of pre-authorized payment &lt;https://doc.gopay.com/en/#charge-of-pre-authorized-payment&gt;`__                       | ``payments.capture_authorization(id_payment)``     |<br>+-------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+<br>| `Cancellation of the pre-authorized payment &lt;https://doc.gopay.com/en/#cancellation-of-the-pre-authorized-payment&gt;`__   | ``payments.void_authorization(id_payment)``        |<br>+-------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+<br><br>SDK response? Has my call succeed?<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>| SDK returns wrapped API response. Every method returns<br>| ```gopay.http.response`` object &lt;/gopay/http.py&gt;`__. Structure of<br>``json/__str__``<br>| should be same as in `documentation &lt;https://doc.gopay.com/en&gt;`__.<br>| SDK throws no exception. Please create an issue if you catch one.<br><br>.. code:: python<br><br>    response = payments.create_payment({})<br>    if response.has_succeed():<br>        print(\"hooray, API returned \" + str(response))<br>        return response.json['gw_url'] # url for initiation of gateway<br>    else:<br>        # errors format: https://doc.gopay.com/en/?shell#http-result-codes<br>        print(\"oops, API returned \" + str(response.status_code) + \": \" + str(response))<br><br>+------------------------------+----------------------------------------------------------------------------+<br>| Method                       | Description                                                                |<br>+==============================+============================================================================+<br>| ``response.has_succeed()``   | checks if API returns status code *200*                                    |<br>+------------------------------+----------------------------------------------------------------------------+<br>| ``response.json``            | decoded response, returned objects are converted into associative arrays   |<br>+------------------------------+----------------------------------------------------------------------------+<br>| ``response.status_code``     | HTTP status code                                                           |<br>+------------------------------+----------------------------------------------------------------------------+<br>| ``response.__str__()``       | raw body from HTTP response                                                |<br>+------------------------------+----------------------------------------------------------------------------+<br><br>\u00a0Are required fields and allowed values validated?<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>| **No.** API `validates<br>fields &lt;https://doc.gopay.com/en/?shell#return-errors&gt;`__ pretty<br>extensively<br>| so there is no need to duplicate validation in SDK. It would only<br>introduce new type of error.<br>| Or we would have to perfectly simulate API error messages. That's why<br>SDK just calls API which<br>| behavior is well documented in<br>`doc.gopay.com &lt;https://doc.gopay.com/en&gt;`__.<br><br>--------------<br><br>Advanced usage<br>--------------<br><br>Initiation of the payment gateway<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>.. code:: python<br><br>    # create payment and pass url to template<br>    response = payments.create_payment({})<br>    if response.has_succeed():<br>        templateParameters = {<br>            'gatewayUrl': response.json['gw_url'],<br>            'embedJs': gopay.url_to_embedjs()<br>        }<br>        # render template<br><br>`Inline gateway &lt;https://doc.gopay.com/en/#inline-option&gt;`__<br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br><br>.. code:: jinja<br><br>    &lt;form action=\"&lt;%= $gatewayUrl %&gt;\" method=\"post\" id=\"gopay-payment-button\"&gt;<br>      &lt;button name=\"pay\" type=\"submit\"&gt;Pay&lt;/button&gt;<br>      &lt;script type=\"text/javascript\" src=\"&lt;%= $embedJs %&gt;\"&gt;&lt;/script&gt;<br>    &lt;/form&gt;<br><br>`Redirect gateway &lt;https://doc.gopay.com/en/#redirect-option&gt;`__<br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br><br>.. code:: jinja<br><br>    &lt;form action=\"&lt;%= $gatewayUrl %&gt;\" method=\"post\"&gt;<br>      &lt;button name=\"pay\" type=\"submit\"&gt;Pay&lt;/button&gt;<br>    &lt;/form&gt;<br><br>`Asynchronous initialization using JavaScript &lt;https://github.com/gopaycommunity/gopay-php-api/blob/master/examples/js-initialization.md&gt;`__<br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br><br>Enums (`Code lists &lt;https://doc.gopay.com/en/#code-lists&gt;`__)<br>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br><br>| Instead of hardcoding bank codes string you can use predefined enums.<br>| Check using enums in `create-payment<br>example &lt;/examples/create_payment.py&gt;`__<br><br>+----------------------------------------+------------------------------------------------------------------------+<br>| Type                                   | Description                                                            |<br>+========================================+========================================================================+<br>| `Language &lt;/gopay/enums.py&gt;`__         | Payment language, localization of error messages                       |<br>+----------------------------------------+------------------------------------------------------------------------+<br>| `Token scope &lt;/gopay/enums.py&gt;`__      | Authorization scope for `OAuth2 &lt;https://doc.gopay.com/en/#oauth&gt;`__   |<br>+----------------------------------------+------------------------------------------------------------------------+<br>| `Payment enums &lt;/gopay/enums.py&gt;`__    | Enums for creating payment                                             |<br>+----------------------------------------+------------------------------------------------------------------------+<br>| `Response enums &lt;/gopay/enums.py&gt;`__   | Result of creating payment, executing payment operations               |<br>+----------------------------------------+------------------------------------------------------------------------+<br><br>Cache access token<br>~~~~~~~~~~~~~~~~~~<br><br>| Access token expires after 30 minutes so it's expensive to use new<br>token for every request.<br>| Unfortunately it's default behavior of<br>```gopay.oauth2.InMemoryTokenCache`` &lt;/gopay/oauth2.py&gt;`__.<br>| But you can implement your cache and store tokens in Memcache, Redis,<br>files, ... It's up to you.<br><br>| Your cache must implement template methods ``get_token`` and<br>``set_token``.<br>| Be aware that there are two<br>`scopes &lt;https://doc.gopay.com/en/?shell#scope&gt;`__ (``TokenScope``) and<br>| SDK can be used for different clients (``clientId``,<br>``isProductionMode``). So ``client`` passed to<br>| methods is unique identifier (``string``) that is built for current<br>environment.<br>| Below you can see example implementation of caching tokens in memory:<br><br>.. code:: python<br><br>    # register cache in optional service configuration<br>    payments = gopay.payments(<br>        {}, # your config<br>        {'cache': MyCache()}<br>    )<br><br>.. code:: python<br><br>    class MyCache:<br>        def __init__(self):<br>            self.tokens = {}<br><br>        def get_token(self, client):<br>            return self.tokens.get(client) # return None if token not exists<br><br>        def set_token(self, client, token):<br>            self.tokens[client] = token<br><br>Log HTTP communication<br>~~~~~~~~~~~~~~~~~~~~~~<br><br>| You can log every request and response from communication with API.<br>Check available loggers below.<br>| Or you can implement your own logger, just implement function that<br>takes two arguments:<br>| ```gopay.http.request`` &lt;/gopay/http.py&gt;`__ and<br>```gopay.http.response`` &lt;/gopay/http.py&gt;`__.<br><br>.. code:: python<br><br>    # register logger in optional service configuration<br>    payments = gopay.payments(<br>        {}, # your config<br>        {'logger': my_logger}<br>    )<br><br>    def my_logger(request, response):<br>        print(vars(request))<br>        print(vars(response))<br><br>+--------------------------------------------------------------+-------------------------------------------------------------------+<br>| Available logger                                             | Description                                                       |<br>+==============================================================+===================================================================+<br>| `gopay.http.null\\_logger &lt;/gopay/http.py&gt;`__                 | Default logger which does nothing                                 |<br>+--------------------------------------------------------------+-------------------------------------------------------------------+<br>| `tests.remote.debug\\_logger &lt;/tests/remote/__init__.py&gt;`__   | Prints request and response in `remote tests &lt;tests/remote/&gt;`__   |<br>+--------------------------------------------------------------+-------------------------------------------------------------------+<br><br>Contributing<br>------------<br><br>| Contributions from others would be very much appreciated! Send<br>| `pull<br>request &lt;https://github.com/gopaycommunity/gopay-python-api/pulls&gt;`__/<br>| `issue &lt;https://github.com/gopaycommunity/gopay-python-api/issues&gt;`__.<br>Thanks!<br><br>License<br>-------<br><br>| Copyright (c) 2015 GoPay.com. MIT Licensed,<br>| see<br>`LICENSE &lt;https://github.com/gopaycommunity/gopay-python-api/blob/master/LICENSE&gt;`__<br>for details.<br><br>.. |Build Status| image:: https://travis-ci.org/gopaycommunity/gopay-python-api.svg?branch=master<br>:target: https://travis-ci.org/gopaycommunity/gopay-python-api<br>\n          </div>"}, "last_serial": 3524039, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "5e9de2c6f2913dd708de3512106b31e3", "sha256": "ba23544648ffc7e31917e5f3dbf040f3054846215f6e870789303443a884287e"}, "downloads": -1, "filename": "gopay-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5e9de2c6f2913dd708de3512106b31e3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12762, "upload_time": "2015-12-02T11:06:50", "upload_time_iso_8601": "2015-12-02T11:06:50.052031Z", "url": "https://files.pythonhosted.org/packages/9f/71/50c963d0e2d8b305d9f17e36fb88d245b1f3e927d20d23f0fc3e46c161ca/gopay-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "235b34f7f506f7efd3d80497a3fe71ce", "sha256": "713e818e7e4c3204ae3a7c44aaf0c7c19cd7875103e84ce03c26bee23d657aa2"}, "downloads": -1, "filename": "gopay-1.0.0.tar.gz", "has_sig": false, "md5_digest": "235b34f7f506f7efd3d80497a3fe71ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9304, "upload_time": "2015-12-02T11:07:06", "upload_time_iso_8601": "2015-12-02T11:07:06.096028Z", "url": "https://files.pythonhosted.org/packages/73/e7/05c424b8939149a89437dbdbd95c3202ca25c878d37dd33feb9335bcaca0/gopay-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "6abd4850c75dbac1cca2086d65e00c2b", "sha256": "10730a93d173b607ed32dd4d6796b85be95abee590574b1fb8667b51b00f4530"}, "downloads": -1, "filename": "gopay-1.1.0.tar.gz", "has_sig": false, "md5_digest": "6abd4850c75dbac1cca2086d65e00c2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14827, "upload_time": "2017-05-10T12:39:30", "upload_time_iso_8601": "2017-05-10T12:39:30.718382Z", "url": "https://files.pythonhosted.org/packages/61/f4/356a131273d8f4418dd61ea5b9275cba601bea832293a08ac5a666dfecde/gopay-1.1.0.tar.gz", "yanked": false}], "1.2.0": [], "1.2.1": [{"comment_text": "", "digests": {"md5": "a274756e4bfdcfe4290386f9b80c2a63", "sha256": "aff8dff52cd19ce8b319418fee17ae786bddd0244c5b8699b4f415425dd6112e"}, "downloads": -1, "filename": "gopay-1.2.1.tar.gz", "has_sig": false, "md5_digest": "a274756e4bfdcfe4290386f9b80c2a63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15164, "upload_time": "2017-10-05T14:40:15", "upload_time_iso_8601": "2017-10-05T14:40:15.082295Z", "url": "https://files.pythonhosted.org/packages/8f/bd/0a73d287edf4e6befb23c8b31858b79bf7a75ef207d80603612e98327848/gopay-1.2.1.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "4981c526479f4dc2fac266a5e0db7ec0", "sha256": "9d618bf9b3b1c90faa3ce9b9cc0753bb6a03539855d05b1e624b6bde38a4efa3"}, "downloads": -1, "filename": "gopay-1.2.3.tar.gz", "has_sig": false, "md5_digest": "4981c526479f4dc2fac266a5e0db7ec0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14597, "upload_time": "2018-01-26T12:17:37", "upload_time_iso_8601": "2018-01-26T12:17:37.497778Z", "url": "https://files.pythonhosted.org/packages/85/42/d90d0cc3236429117aa65f68aad698769cd6b6a51550d34bc7d7f051c668/gopay-1.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4981c526479f4dc2fac266a5e0db7ec0", "sha256": "9d618bf9b3b1c90faa3ce9b9cc0753bb6a03539855d05b1e624b6bde38a4efa3"}, "downloads": -1, "filename": "gopay-1.2.3.tar.gz", "has_sig": false, "md5_digest": "4981c526479f4dc2fac266a5e0db7ec0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14597, "upload_time": "2018-01-26T12:17:37", "upload_time_iso_8601": "2018-01-26T12:17:37.497778Z", "url": "https://files.pythonhosted.org/packages/85/42/d90d0cc3236429117aa65f68aad698769cd6b6a51550d34bc7d7f051c668/gopay-1.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:30 2020"}