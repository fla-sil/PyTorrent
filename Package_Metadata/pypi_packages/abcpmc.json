{"info": {"author": "Joel Akeret", "author_email": "jakeret@phys.ethz.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: POSIX", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Astronomy", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Scientific/Engineering :: Physics"], "description": "=============================\nabcpmc\n=============================\n\n.. image:: https://badge.fury.io/py/abcpmc.svg\n    :target: http://badge.fury.io/py/abcpmc\n\n.. image:: https://travis-ci.org/jakeret/abcpmc.svg?branch=master\n        :target: https://travis-ci.org/jakeret/abcpmc\n        \n.. image:: https://coveralls.io/repos/jakeret/abcpmc/badge.svg?branch=master\n        :target: https://coveralls.io/r/jakeret/abcpmc?branch=master\n\n.. image:: https://img.shields.io/badge/docs-latest-blue.svg?style=flat\n        :target: http://abcpmc.readthedocs.org/en/latest\n\n.. image:: http://img.shields.io/badge/arXiv-1504.07245-orange.svg?style=flat\n        :target: http://arxiv.org/abs/1504.07245\n\n\n\nA Python Approximate Bayesian Computing (ABC) Population Monte Carlo (PMC) implementation based on Sequential Monte Carlo (SMC) with Particle Filtering techniques.\n\n.. image:: https://raw.githubusercontent.com/jakeret/abcpmc/master/docs/abcpmc.png\n   :alt: approximated 2d posterior (created with triangle.py).\n   :align: center\n\nThe **abcpmc** package has been developed at ETH Zurich in the `Software Lab of the Cosmology Research Group <http://www.cosmology.ethz.ch/research/software-lab.html>`_ of the `ETH Institute of Astronomy <http://www.astro.ethz.ch>`_. \n\nThe development is coordinated on `GitHub <http://github.com/jakeret/abcpmc>`_ and contributions are welcome. The documentation of **abcpmc** is available at `readthedocs.org <http://abcpmc.readthedocs.org/>`_ and the package is distributed over `PyPI <https://pypi.python.org/pypi/abcpmc>`_.\n\nFeatures\n--------\n\n* Entirely implemented in Python and easy to extend\n\n* Follows Beaumont et al. 2009 PMC algorithm\n\n* Parallelized with muliprocessing or message passing interface (MPI)\n\n* Extendable with k-nearest neighbour (KNN) or optimal local covariance matrix (OLCM) pertubation kernels (Fillipi et al. 2012)\n\n* Detailed examples in IPython notebooks \n\n\t* A `2D gauss <http://nbviewer.ipython.org/github/jakeret/abcpmc/blob/master/notebooks/2d_gauss.ipynb>`_ case study \n\t\n\t* A `Multi distance <http://nbviewer.ipython.org/github/jakeret/abcpmc/blob/master/notebooks/dual_abc_pmc.ipynb>`_ case study \n\t\n\t* A `toy model <http://nbviewer.ipython.org/github/jakeret/abcpmc/blob/master/notebooks/toy_model.ipynb>`_ including a comparison to theoretical predictions\n\t\n\t\n\n\n\n\nHistory\n-------\n0.1.2 (2016-01-27)\n++++++++++++++++++\n\n* Added support for sampling with multiple distance simultaneously\n* Clean setup.py \n* Simplifying the code\n* Improved documentation\n\n\n0.1.1 (2015-05-03)\n++++++++++++++++++\n\n* Python 3 support\n* Minor fixes\n* Improved documentation\n\n0.1.0 (2015-04-28)\n++++++++++++++++++\n\n* First release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.cosmology.ethz.ch/research/software-lab/abcpmc.html", "keywords": "abcpmc,approximate bayesian computing,population monte carlo", "license": "GPLv3", "maintainer": null, "maintainer_email": null, "name": "abcpmc", "package_url": "https://pypi.org/project/abcpmc/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/abcpmc/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.cosmology.ethz.ch/research/software-lab/abcpmc.html"}, "release_url": "https://pypi.org/project/abcpmc/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "approximate bayesian computing with population monte carlo", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://badge.fury.io/py/abcpmc\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/abcpmc.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/60f5c95b58a73c08f26ebecee0dfd95fb965704f/68747470733a2f2f62616467652e667572792e696f2f70792f616263706d632e737667\"></a>\n<a href=\"https://travis-ci.org/jakeret/abcpmc\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/jakeret/abcpmc.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3aa1d80ef3226304892d48e137fa106b9fb7ea41/68747470733a2f2f7472617669732d63692e6f72672f6a616b657265742f616263706d632e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/jakeret/abcpmc?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/jakeret/abcpmc/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/598cfaca8315fc11e3156f1fc5ccce72ebf780ed/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6a616b657265742f616263706d632f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://abcpmc.readthedocs.org/en/latest\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/docs-latest-blue.svg?style=flat\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0f4496d7be1b917e8e8e88cfe122715b5de4c240/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d626c75652e7376673f7374796c653d666c6174\"></a>\n<a href=\"http://arxiv.org/abs/1504.07245\" rel=\"nofollow\"><img alt=\"http://img.shields.io/badge/arXiv-1504.07245-orange.svg?style=flat\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fc42fcd475cfd44a7a5b8a31d0a5b3b52ca719e0/687474703a2f2f696d672e736869656c64732e696f2f62616467652f61725869762d313530342e30373234352d6f72616e67652e7376673f7374796c653d666c6174\"></a>\n<p>A Python Approximate Bayesian Computing (ABC) Population Monte Carlo (PMC) implementation based on Sequential Monte Carlo (SMC) with Particle Filtering techniques.</p>\n<img alt=\"approximated 2d posterior (created with triangle.py).\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e0cee3f788c435148589b2c5c3a8c4ac37230234/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6a616b657265742f616263706d632f6d61737465722f646f63732f616263706d632e706e67\">\n<p>The <strong>abcpmc</strong> package has been developed at ETH Zurich in the <a href=\"http://www.cosmology.ethz.ch/research/software-lab.html\" rel=\"nofollow\">Software Lab of the Cosmology Research Group</a> of the <a href=\"http://www.astro.ethz.ch\" rel=\"nofollow\">ETH Institute of Astronomy</a>.</p>\n<p>The development is coordinated on <a href=\"http://github.com/jakeret/abcpmc\" rel=\"nofollow\">GitHub</a> and contributions are welcome. The documentation of <strong>abcpmc</strong> is available at <a href=\"http://abcpmc.readthedocs.org/\" rel=\"nofollow\">readthedocs.org</a> and the package is distributed over <a href=\"https://pypi.python.org/pypi/abcpmc\" rel=\"nofollow\">PyPI</a>.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li><p>Entirely implemented in Python and easy to extend</p>\n</li>\n<li><p>Follows Beaumont et al. 2009 PMC algorithm</p>\n</li>\n<li><p>Parallelized with muliprocessing or message passing interface (MPI)</p>\n</li>\n<li><p>Extendable with k-nearest neighbour (KNN) or optimal local covariance matrix (OLCM) pertubation kernels (Fillipi et al. 2012)</p>\n</li>\n<li><p>Detailed examples in IPython notebooks</p>\n<blockquote>\n<ul>\n<li>A <a href=\"http://nbviewer.ipython.org/github/jakeret/abcpmc/blob/master/notebooks/2d_gauss.ipynb\" rel=\"nofollow\">2D gauss</a> case study</li>\n<li>A <a href=\"http://nbviewer.ipython.org/github/jakeret/abcpmc/blob/master/notebooks/dual_abc_pmc.ipynb\" rel=\"nofollow\">Multi distance</a> case study</li>\n<li>A <a href=\"http://nbviewer.ipython.org/github/jakeret/abcpmc/blob/master/notebooks/toy_model.ipynb\" rel=\"nofollow\">toy model</a> including a comparison to theoretical predictions</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.1.2 (2016-01-27)</h3>\n<ul>\n<li>Added support for sampling with multiple distance simultaneously</li>\n<li>Clean setup.py</li>\n<li>Simplifying the code</li>\n<li>Improved documentation</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.1 (2015-05-03)</h3>\n<ul>\n<li>Python 3 support</li>\n<li>Minor fixes</li>\n<li>Improved documentation</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1.0 (2015-04-28)</h3>\n<ul>\n<li>First release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1925306, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "1227120e8ec854677465f691b465eba7", "sha256": "9b898326ca468e426fa5df1d1156a24d393a451d6f80b9b47bf0f016d4916653"}, "downloads": -1, "filename": "abcpmc-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1227120e8ec854677465f691b465eba7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 692181, "upload_time": "2015-04-28T11:34:30", "upload_time_iso_8601": "2015-04-28T11:34:30.403166Z", "url": "https://files.pythonhosted.org/packages/63/30/b27e41ccfbdb323a08ebaaff0c7ff9cd59b8f011cb1083ab5b9c80ea821f/abcpmc-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "a46476ff075bf1690d5699b701cbc012", "sha256": "5c3cebb4871fa7fe3e337890f1eec256074eeb51af16af245c9322f09ca17088"}, "downloads": -1, "filename": "abcpmc-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a46476ff075bf1690d5699b701cbc012", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 700581, "upload_time": "2015-05-04T09:07:39", "upload_time_iso_8601": "2015-05-04T09:07:39.862769Z", "url": "https://files.pythonhosted.org/packages/ae/94/22d8f2b99aed406595fce5349b863f3d86d45554242bd9a8daa0985491d1/abcpmc-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "359a4089d5e0cdeaca56acedd9eaa466", "sha256": "11be8532b90785e01ad68b6ea70819716d34fd5e00553585364a60d5742e90b1"}, "downloads": -1, "filename": "abcpmc-0.1.2.tar.gz", "has_sig": false, "md5_digest": "359a4089d5e0cdeaca56acedd9eaa466", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 872276, "upload_time": "2016-01-27T11:16:54", "upload_time_iso_8601": "2016-01-27T11:16:54.650801Z", "url": "https://files.pythonhosted.org/packages/37/b7/b5ef59828f4ec646ba78090790f74845009044d65357580ecf5ee7fa77a1/abcpmc-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "359a4089d5e0cdeaca56acedd9eaa466", "sha256": "11be8532b90785e01ad68b6ea70819716d34fd5e00553585364a60d5742e90b1"}, "downloads": -1, "filename": "abcpmc-0.1.2.tar.gz", "has_sig": false, "md5_digest": "359a4089d5e0cdeaca56acedd9eaa466", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 872276, "upload_time": "2016-01-27T11:16:54", "upload_time_iso_8601": "2016-01-27T11:16:54.650801Z", "url": "https://files.pythonhosted.org/packages/37/b7/b5ef59828f4ec646ba78090790f74845009044d65357580ecf5ee7fa77a1/abcpmc-0.1.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 15:55:19 2020"}