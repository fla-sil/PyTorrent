{"info": {"author": "Jean-Philippe Argaud", "author_email": "jean-philippe.argaud@edf.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Other Environment", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "=====================================================\nADAO: A module for Data Assimilation and Optimization\n=====================================================\n\nAbout\n-----\n\n**The ADAO module provides data assimilation and optimization**\nfeatures in Python or SALOME context (see\nhttp://www.salome-platform.org/). Briefly stated, Data Assimilation is\na methodological framework to compute the optimal estimate of the\ninaccessible true value of a system state, eventually over time. It\nuses information coming from experimental measurements or observations,\nand from numerical *a priori* models, including information about their\nerrors. Parts of the framework are also known under the names of\n*parameter estimation*, *inverse problems*, *Bayesian estimation*,\n*optimal interpolation*, etc. More details can be found in the full\nADAO documentation (see http://www.salome-platform.org/).\n\nOnly the use of ADAO text programming interface (API/TUI) is introduced\nhere. This interface gives ability to create a calculation object in a\nsimilar way than the case building obtained through the graphical\ninterface (GUI). When one wants to elaborate \"by hand\" the TUI\ncalculation case, it is recommended to extensively use all the ADAO\nmodule documentation, and to go back if necessary to the graphical\ninterface (GUI), to get all the elements allowing to correctly set the\ncommands.\n\nA simple setup example of an ADAO TUI calculation case\n------------------------------------------------------\n\nTo introduce the TUI interface, lets begin by a simple but complete\nexample of ADAO calculation case. All the data are explicitly defined\ninside the script in order to make the reading easier. The whole set of\ncommands is the following one::\n\n    from numpy import array, matrix\n    from adao import adaoBuilder\n    case = adaoBuilder.New()\n    case.set( 'AlgorithmParameters', Algorithm='3DVAR' )\n    case.set( 'Background',          Vector=[0, 1, 2] )\n    case.set( 'BackgroundError',     ScalarSparseMatrix=1.0 )\n    case.set( 'Observation',         Vector=array([0.5, 1.5, 2.5]) )\n    case.set( 'ObservationError',    DiagonalSparseMatrix='1 1 1' )\n    case.set( 'ObservationOperator', Matrix='1 0 0;0 2 0;0 0 3' )\n    case.set( 'Observer',            Variable=\"Analysis\", Template=\"ValuePrinter\" )\n    case.execute()\n\nThe result of running these commands in SALOME (either as a SALOME\n\"*shell*\" command, in the Python command window of the interface, or by\nthe script execution entry of the menu) is the following::\n\n    Analysis [ 0.25000264  0.79999797  0.94999939]\n\nMore advanced examples of ADAO TUI calculation case\n---------------------------------------------------\n\nReal cases involves observations loaded from files, operators\nexplicitly defined as generic functions including physical simulators,\ntime dependant information in order to deal with forecast analysis in\naddition to calibration or re-analysis. More details can be found in\nthe full ADAO documentation (see http://www.salome-platform.org/).\n\nLicense and requirements\n------------------------\n\nThe license for this module is the GNU Lesser General Public License\n(Lesser GPL), as stated here and in the source files::\n\n    <ADAO, a module for Data Assimilation and Optimization>\n\n    Copyright (C) 2008-2019 EDF R&D\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\n    See http://www.salome-platform.org/\n\nIn addition, we require that all publication or presentation describing\nwork using this software, or all commercial or not products using it,\nquote at least one of the references given below:\n\n    * *ADAO, a module for Data Assimilation and Optimization*,\n      http://www.salome-platform.org/\n\n    * *ADAO, un module pour l'Assimilation de Donn\u00e9es et l'Aide \u00e0\n      l'Optimisation*, http://www.salome-platform.org/\n\n    * *SALOME The Open Source Integration Platform for Numerical Simulation*,\n      http://www.salome-platform.org/\n\nThe documentation of the module is also covered by the license and the\nrequirement of quoting.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.salome-platform.org/", "keywords": "optimization,data assimilation,calibration,interpolation,inverse problem,tunning,minimization,black-box,checking,3D-Var,4D-Var,Filtering,Kalman,Ensemble,BLUE,Regression,Quantile,DFO,PSO,Swarm,V&V", "license": "GNU Library or Lesser General Public License (LGPL)", "maintainer": "", "maintainer_email": "", "name": "adao", "package_url": "https://pypi.org/project/adao/", "platform": "", "project_url": "https://pypi.org/project/adao/", "project_urls": {"Homepage": "http://www.salome-platform.org/"}, "release_url": "https://pypi.org/project/adao/9.3.0.1/", "requires_dist": null, "requires_python": ">=2.7", "summary": "A module for Data Assimilation and Optimization", "version": "9.3.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about\">\n<h2>About</h2>\n<p><strong>The ADAO module provides data assimilation and optimization</strong>\nfeatures in Python or SALOME context (see\n<a href=\"http://www.salome-platform.org/\" rel=\"nofollow\">http://www.salome-platform.org/</a>). Briefly stated, Data Assimilation is\na methodological framework to compute the optimal estimate of the\ninaccessible true value of a system state, eventually over time. It\nuses information coming from experimental measurements or observations,\nand from numerical <em>a priori</em> models, including information about their\nerrors. Parts of the framework are also known under the names of\n<em>parameter estimation</em>, <em>inverse problems</em>, <em>Bayesian estimation</em>,\n<em>optimal interpolation</em>, etc. More details can be found in the full\nADAO documentation (see <a href=\"http://www.salome-platform.org/\" rel=\"nofollow\">http://www.salome-platform.org/</a>).</p>\n<p>Only the use of ADAO text programming interface (API/TUI) is introduced\nhere. This interface gives ability to create a calculation object in a\nsimilar way than the case building obtained through the graphical\ninterface (GUI). When one wants to elaborate \u201cby hand\u201d the TUI\ncalculation case, it is recommended to extensively use all the ADAO\nmodule documentation, and to go back if necessary to the graphical\ninterface (GUI), to get all the elements allowing to correctly set the\ncommands.</p>\n</div>\n<div id=\"a-simple-setup-example-of-an-adao-tui-calculation-case\">\n<h2>A simple setup example of an ADAO TUI calculation case</h2>\n<p>To introduce the TUI interface, lets begin by a simple but complete\nexample of ADAO calculation case. All the data are explicitly defined\ninside the script in order to make the reading easier. The whole set of\ncommands is the following one:</p>\n<pre>from numpy import array, matrix\nfrom adao import adaoBuilder\ncase = adaoBuilder.New()\ncase.set( 'AlgorithmParameters', Algorithm='3DVAR' )\ncase.set( 'Background',          Vector=[0, 1, 2] )\ncase.set( 'BackgroundError',     ScalarSparseMatrix=1.0 )\ncase.set( 'Observation',         Vector=array([0.5, 1.5, 2.5]) )\ncase.set( 'ObservationError',    DiagonalSparseMatrix='1 1 1' )\ncase.set( 'ObservationOperator', Matrix='1 0 0;0 2 0;0 0 3' )\ncase.set( 'Observer',            Variable=\"Analysis\", Template=\"ValuePrinter\" )\ncase.execute()\n</pre>\n<p>The result of running these commands in SALOME (either as a SALOME\n\u201c<em>shell</em>\u201d command, in the Python command window of the interface, or by\nthe script execution entry of the menu) is the following:</p>\n<pre>Analysis [ 0.25000264  0.79999797  0.94999939]\n</pre>\n</div>\n<div id=\"more-advanced-examples-of-adao-tui-calculation-case\">\n<h2>More advanced examples of ADAO TUI calculation case</h2>\n<p>Real cases involves observations loaded from files, operators\nexplicitly defined as generic functions including physical simulators,\ntime dependant information in order to deal with forecast analysis in\naddition to calibration or re-analysis. More details can be found in\nthe full ADAO documentation (see <a href=\"http://www.salome-platform.org/\" rel=\"nofollow\">http://www.salome-platform.org/</a>).</p>\n</div>\n<div id=\"license-and-requirements\">\n<h2>License and requirements</h2>\n<p>The license for this module is the GNU Lesser General Public License\n(Lesser GPL), as stated here and in the source files:</p>\n<pre>&lt;ADAO, a module for Data Assimilation and Optimization&gt;\n\nCopyright (C) 2008-2019 EDF R&amp;D\n\nThis library is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2.1 of the License, or (at your option) any later version.\n\nThis library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\nLesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with this library; if not, write to the Free Software\nFoundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\nSee http://www.salome-platform.org/\n</pre>\n<p>In addition, we require that all publication or presentation describing\nwork using this software, or all commercial or not products using it,\nquote at least one of the references given below:</p>\n<blockquote>\n<ul>\n<li><em>ADAO, a module for Data Assimilation and Optimization</em>,\n<a href=\"http://www.salome-platform.org/\" rel=\"nofollow\">http://www.salome-platform.org/</a></li>\n<li><em>ADAO, un module pour l\u2019Assimilation de Donn\u00e9es et l\u2019Aide \u00e0\nl\u2019Optimisation</em>, <a href=\"http://www.salome-platform.org/\" rel=\"nofollow\">http://www.salome-platform.org/</a></li>\n<li><em>SALOME The Open Source Integration Platform for Numerical Simulation</em>,\n<a href=\"http://www.salome-platform.org/\" rel=\"nofollow\">http://www.salome-platform.org/</a></li>\n</ul>\n</blockquote>\n<p>The documentation of the module is also covered by the license and the\nrequirement of quoting.</p>\n</div>\n\n          </div>"}, "last_serial": 5407391, "releases": {"8.5.0.1": [{"comment_text": "", "digests": {"md5": "95d5f81da7a9559a25da7c54bb191a74", "sha256": "fa153c92c52ef0fa810c829381b1e499d0f6a9c2ee0fba74265d2b90018f078a"}, "downloads": -1, "filename": "adao-8.5.0.1.tar.gz", "has_sig": false, "md5_digest": "95d5f81da7a9559a25da7c54bb191a74", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 119002, "upload_time": "2018-07-03T19:17:32", "upload_time_iso_8601": "2018-07-03T19:17:32.948313Z", "url": "https://files.pythonhosted.org/packages/7e/ee/cc033390f3ba67ed8d3fd8f102345a5cf43d2e68a95c0df0cc97c5c9f5c0/adao-8.5.0.1.tar.gz", "yanked": false}], "9.2.0.1": [{"comment_text": "", "digests": {"md5": "cf48b954a096548e8fdeb1e5279586d0", "sha256": "6994c2d325596ece355c9db66570b0ee8cbd2831036a1fc40011824fe46735f7"}, "downloads": -1, "filename": "adao-9.2.0.1.tar.gz", "has_sig": false, "md5_digest": "cf48b954a096548e8fdeb1e5279586d0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 149886, "upload_time": "2019-01-01T10:14:49", "upload_time_iso_8601": "2019-01-01T10:14:49.560671Z", "url": "https://files.pythonhosted.org/packages/ce/ee/f962af1ba984ac1664887511a077d0fa71f9e7d5343c7c442e69bcd9d41d/adao-9.2.0.1.tar.gz", "yanked": false}], "9.3.0.1": [{"comment_text": "", "digests": {"md5": "a4ad66e87b60fed78fc4f6c70c692c7b", "sha256": "74676054ec7cf89a0a7888893b11122cb52af6032955d301281c5a71562d544c"}, "downloads": -1, "filename": "adao-9.3.0.1.tar.gz", "has_sig": false, "md5_digest": "a4ad66e87b60fed78fc4f6c70c692c7b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 156249, "upload_time": "2019-06-16T19:46:30", "upload_time_iso_8601": "2019-06-16T19:46:30.635399Z", "url": "https://files.pythonhosted.org/packages/e0/23/ca7152e098b6c456b930674fe4812a49e51fdf834d909b06b3a982faf509/adao-9.3.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a4ad66e87b60fed78fc4f6c70c692c7b", "sha256": "74676054ec7cf89a0a7888893b11122cb52af6032955d301281c5a71562d544c"}, "downloads": -1, "filename": "adao-9.3.0.1.tar.gz", "has_sig": false, "md5_digest": "a4ad66e87b60fed78fc4f6c70c692c7b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 156249, "upload_time": "2019-06-16T19:46:30", "upload_time_iso_8601": "2019-06-16T19:46:30.635399Z", "url": "https://files.pythonhosted.org/packages/e0/23/ca7152e098b6c456b930674fe4812a49e51fdf834d909b06b3a982faf509/adao-9.3.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:23:39 2020"}