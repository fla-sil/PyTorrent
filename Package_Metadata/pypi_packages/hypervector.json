{"info": {"author": "Ben Burrill", "author_email": "bburrill98+hypervector@gmail.com", "bugtrack_url": null, "classifiers": ["License :: Public Domain", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Mathematics"], "description": "hypervector\n===========\n| Simple, general, pure Python vectors\n|\n| ``hypervector.py`` defines arbitrary-dimentional vector types for all your vectoring needs.  The vectors are immutable and come with many useful and well-tested vector operations and features.\n|\n| ``hypervector`` is in the public domain.\n\nA few explanatory examples\n--------------------------\nHello world, *NOW IN 3D!*\n\n.. code:: pycon\n\n    >>> from hypervector import Vector3\n    >>> (Vector3(1, 2, 1) + Vector3(3, 0, 2)).zxy\n    Vector3(3, 4, 2)\n\nHigher dimensions\n\n.. code:: pycon\n\n    >>> from hypervector import Vector, Vector2, Vector3\n    >>> Vector2 is Vector[2] and Vector3 is Vector[3]\n    True\n    >>> Vector[4](1, 2, 3, 4)\n    Vector[4](1, 2, 3, 4)\n    >>> Vector[5](1, 2, 3, 4)\n    Vector[5](1, 2, 3, 4, 0)\n    >>> Vector[10].zero\n    Vector[10](0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n\nKing of infinite (vector) space\n\n.. code:: pycon\n\n    >>> vec = Vector(2, 4)  # Dimensionless vectors are \"infinite\"\n    >>> (vec[0], vec[1], vec[2], vec[1114111])\n    (2, 4, 0, 0)\n\nCross-eyed\n\n.. code:: pycon\n\n    >>> vec_1, vec_2 = Vector(1, 2, 3), Vector(3, 2, 1)\n    >>> Vector.cross(vec_1, vec_2)\n    Vector(-4.0, 8.0, -4.0)\n    >>> [Vector.dot(_, vec) for vec in (vec_1, vec_2)]\n    [0.0, 0.0]\n    >>> vec_3 = Vector(-1, 8, 3, 2)\n    >>> Vector.cross(vec_1, vec_2, vec_3)\n    Vector(8.0, -16.0, 8.0, 56.0)\n    >>> [Vector.dot(_, vec) for vec in (vec_1, vec_2, vec_3)]\n    [0.0, 0.0, 0.0]\n\nTesting\n-------\n| ``hypervector`` uses `py.test`_ and `hypothesis`_, with `tox`_ as a test runner.\n\nHow fast is hypervector?\n------------------------\n| Dunno.  Probably pretty slow.  If you need speed, use numpy.\n\nAlternatives\n------------\n| There are many other libraries with similar features to ``hypervector``.  Some notable examples I have used:\n\n* `numpy <http://www.numpy.org/>`_\n* `pyeuclid <https://pypi.python.org/pypi/euclid3>`_ |--| Has unrelated ``Vector2`` and ``Vector3`` classes.  Also has two separate packages for *Python* 2 and *Python* 3.\n\nLinks\n-----\n| Get `hypervector from PyPI`_: ``pip install hypervector``\n| Report bugs and offer suggestions at the github `issues`_ page.\n\n.. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..\n.. Dependencies\n.. _py.test: https://pytest.org/\n.. _hypothesis: http://hypothesis.works/\n.. _tox: https://pypi.python.org/pypi/tox\n\n.. Links\n.. _hypervector from PyPi: https://pypi.python.org/pypi/hypervector\n.. _issues: https://github.com/benburrill/hypervector/issues\n\n.. Definitions\n.. |--| unicode:: U+2014 .. (em dash)\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/benburrill/hypervector", "keywords": "", "license": "Public Domain", "maintainer": "", "maintainer_email": "", "name": "hypervector", "package_url": "https://pypi.org/project/hypervector/", "platform": "any", "project_url": "https://pypi.org/project/hypervector/", "project_urls": {"Homepage": "https://github.com/benburrill/hypervector"}, "release_url": "https://pypi.org/project/hypervector/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Simple, general, pure Python vectors", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n<div>Simple, general, pure Python vectors</div>\n<div><br></div>\n<div><tt>hypervector.py</tt> defines arbitrary-dimentional vector types for all your vectoring needs.  The vectors are immutable and come with many useful and well-tested vector operations and features.</div>\n<div><br></div>\n<div><tt>hypervector</tt> is in the public domain.</div>\n</div>\n<div id=\"a-few-explanatory-examples\">\n<h2>A few explanatory examples</h2>\n<p>Hello world, <em>NOW IN 3D!</em></p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">hypervector</span> <span class=\"kn\">import</span> <span class=\"n\">Vector3</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">Vector3</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">Vector3</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">zxy</span>\n<span class=\"go\">Vector3(3, 4, 2)</span>\n</pre>\n<p>Higher dimensions</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">hypervector</span> <span class=\"kn\">import</span> <span class=\"n\">Vector</span><span class=\"p\">,</span> <span class=\"n\">Vector2</span><span class=\"p\">,</span> <span class=\"n\">Vector3</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector2</span> <span class=\"ow\">is</span> <span class=\"n\">Vector</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"ow\">and</span> <span class=\"n\">Vector3</span> <span class=\"ow\">is</span> <span class=\"n\">Vector</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"go\">True\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">](</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"go\">Vector[4](1, 2, 3, 4)\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">](</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"go\">Vector[5](1, 2, 3, 4, 0)\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">zero</span>\n<span class=\"go\">Vector[10](0, 0, 0, 0, 0, 0, 0, 0, 0, 0)</span>\n</pre>\n<p>King of infinite (vector) space</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vec</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>  <span class=\"c1\"># Dimensionless vectors are \"infinite\"</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">vec</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">vec</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">vec</span><span class=\"p\">[</span><span class=\"mi\">1114111</span><span class=\"p\">])</span>\n<span class=\"go\">(2, 4, 0, 0)</span>\n</pre>\n<p>Cross-eyed</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vec_1</span><span class=\"p\">,</span> <span class=\"n\">vec_2</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"n\">Vector</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">cross</span><span class=\"p\">(</span><span class=\"n\">vec_1</span><span class=\"p\">,</span> <span class=\"n\">vec_2</span><span class=\"p\">)</span>\n<span class=\"go\">Vector(-4.0, 8.0, -4.0)\n</span><span class=\"p\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">[</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">vec</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">vec</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"n\">vec_1</span><span class=\"p\">,</span> <span class=\"n\">vec_2</span><span class=\"p\">)]</span>\n<span class=\"go\">[0.0, 0.0]\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vec_3</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">cross</span><span class=\"p\">(</span><span class=\"n\">vec_1</span><span class=\"p\">,</span> <span class=\"n\">vec_2</span><span class=\"p\">,</span> <span class=\"n\">vec_3</span><span class=\"p\">)</span>\n<span class=\"go\">Vector(8.0, -16.0, 8.0, 56.0)\n</span><span class=\"p\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">[</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">vec</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">vec</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"n\">vec_1</span><span class=\"p\">,</span> <span class=\"n\">vec_2</span><span class=\"p\">,</span> <span class=\"n\">vec_3</span><span class=\"p\">)]</span>\n<span class=\"go\">[0.0, 0.0, 0.0]</span>\n</pre>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<div>\n<div><tt>hypervector</tt> uses <a href=\"https://pytest.org/\" rel=\"nofollow\">py.test</a> and <a href=\"http://hypothesis.works/\" rel=\"nofollow\">hypothesis</a>, with <a href=\"https://pypi.python.org/pypi/tox\" rel=\"nofollow\">tox</a> as a test runner.</div>\n</div>\n</div>\n<div id=\"how-fast-is-hypervector\">\n<h2>How fast is hypervector?</h2>\n<div>\n<div>Dunno.  Probably pretty slow.  If you need speed, use numpy.</div>\n</div>\n</div>\n<div id=\"alternatives\">\n<h2>Alternatives</h2>\n<div>\n<div>There are many other libraries with similar features to <tt>hypervector</tt>.  Some notable examples I have used:</div>\n</div>\n<ul>\n<li><a href=\"http://www.numpy.org/\" rel=\"nofollow\">numpy</a></li>\n<li><a href=\"https://pypi.python.org/pypi/euclid3\" rel=\"nofollow\">pyeuclid</a> \u2014 Has unrelated <tt>Vector2</tt> and <tt>Vector3</tt> classes.  Also has two separate packages for <em>Python</em> 2 and <em>Python</em> 3.</li>\n</ul>\n</div>\n<div id=\"links\">\n<h2>Links</h2>\n<div>\n<div>Get <a href=\"https://pypi.python.org/pypi/hypervector\" rel=\"nofollow\">hypervector from PyPI</a>: <tt>pip install hypervector</tt></div>\n<div>Report bugs and offer suggestions at the github <a href=\"https://github.com/benburrill/hypervector/issues\" rel=\"nofollow\">issues</a> page.</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4439211, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "28e30ee8e089d1df4a02cde4203b55f4", "sha256": "4db7fc2bca673d76e9b14f5bf05d46a1df38750ff7b9cce388fc4eecb66808ba"}, "downloads": -1, "filename": "hypervector-0.0.1.tar.gz", "has_sig": false, "md5_digest": "28e30ee8e089d1df4a02cde4203b55f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8543, "upload_time": "2017-10-30T01:55:25", "upload_time_iso_8601": "2017-10-30T01:55:25.989905Z", "url": "https://files.pythonhosted.org/packages/0c/a3/21d77a4bb0eaaafd7189c1288b8b4e40f2b80f927aeec616b61a19b77c01/hypervector-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "b9bb1b2824f3e09a1b271bf0c53dc513", "sha256": "a4fd128929635e88290aece410bcfd302f31f72222a29bab89909150ebad1df4"}, "downloads": -1, "filename": "hypervector-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b9bb1b2824f3e09a1b271bf0c53dc513", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8638, "upload_time": "2018-11-01T03:27:07", "upload_time_iso_8601": "2018-11-01T03:27:07.762813Z", "url": "https://files.pythonhosted.org/packages/af/ad/6ac18cbef6a11de1017aa55383a44f41c194df32529dfa5f6685de3b8258/hypervector-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f38c01c00879e43cb6db157650f71917", "sha256": "bfb40121af46731947fa63ee2b53f0cafdac7a6d37a5a147e0d2f64547ed03bd"}, "downloads": -1, "filename": "hypervector-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f38c01c00879e43cb6db157650f71917", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9533, "upload_time": "2018-11-01T03:27:09", "upload_time_iso_8601": "2018-11-01T03:27:09.410349Z", "url": "https://files.pythonhosted.org/packages/d1/1c/cf5e6167a9019bbf8871f9a8d732163072b011c094287eb9eb85e3d4bba3/hypervector-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b9bb1b2824f3e09a1b271bf0c53dc513", "sha256": "a4fd128929635e88290aece410bcfd302f31f72222a29bab89909150ebad1df4"}, "downloads": -1, "filename": "hypervector-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b9bb1b2824f3e09a1b271bf0c53dc513", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8638, "upload_time": "2018-11-01T03:27:07", "upload_time_iso_8601": "2018-11-01T03:27:07.762813Z", "url": "https://files.pythonhosted.org/packages/af/ad/6ac18cbef6a11de1017aa55383a44f41c194df32529dfa5f6685de3b8258/hypervector-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f38c01c00879e43cb6db157650f71917", "sha256": "bfb40121af46731947fa63ee2b53f0cafdac7a6d37a5a147e0d2f64547ed03bd"}, "downloads": -1, "filename": "hypervector-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f38c01c00879e43cb6db157650f71917", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9533, "upload_time": "2018-11-01T03:27:09", "upload_time_iso_8601": "2018-11-01T03:27:09.410349Z", "url": "https://files.pythonhosted.org/packages/d1/1c/cf5e6167a9019bbf8871f9a8d732163072b011c094287eb9eb85e3d4bba3/hypervector-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:29 2020"}