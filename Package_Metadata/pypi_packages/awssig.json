{"info": {"author": "David Cuthbert", "author_email": "dacut@kanga.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "AWS signature verification routines.\n==============================================================================\n\nThis library provides signature verification for requests made to an AWS\nservice. Typically, this is used to provide mock interfaces for AWS services\nor to rewrite AWS requests through a proxy host.\n\nThe current source tree can be found on\n`GitHub <https://github.com/dacut/python-aws-sig>`_.\n\nDocumentation is available at\n`docs.ionosphere.io <https://docs.ionosphere.io/awssig/index.html>`_.\n\nCurrently only `SigV4`_ and `SigV4S3`_ (the S3 variant of SigV4) are supported.\n\nExample Usage\n------------------------------------------------------------------------------\n\n::\n\n   >>> import awssig\n   >>> access_key = \"AKIDEXAMPLE\"\n   >>> secret_key = \"wJalrXUtnFEMI/K7MDENG+bPxRfiCYEXAMPLEKEY\"\n   >>> key_mapping = { access_key: secret_key }\n   >>> v = awssig.AWSSigV4Verifier(\n   ...     request_method=\"GET\",\n   ...     uri_path=\"/\",\n   ...     query_string=\"a=foo&b=foo\",\n   ...     headers={\n   ...         \"date\": [\"Mon, 09 Sep 2011 23:36:00 GMT\"],\n   ...         \"host\": [\"host.foo.com\"],\n   ...         \"authorization\": [(\n   ...             \"AWS4-HMAC-SHA256 \"\n   ...             \"Credential=AKIDEXAMPLE/20110909/us-east-1/host/aws4_request, \"\n   ...             \"SignedHeaders=date;host, \"\n   ...             \"Signature=0dc122f3b28b831ab48ba65cb47300de53fbe91b577fe113edac383730254a3b\")],\n   ...    },\n   ...    body=b\"\",\n   ...    region=\"us-east-1\",\n   ...    service=\"host\",\n   ...    key_mapping=key_mapping,\n   ...    timestamp_mismatch=None)\n   >>> try:\n   ...     v.verify()\n   ...     print(\"ok\")\n   ... except awssig.InvalidSignatureError as e:\n   ...     print(\"error: %s\" % e)\n   ok\n   >>> v = awssig.AWSSigV4S3Verifier(\n   ...     request_method=\"POST\",\n   ...     uri_path=\"/a//b/../c\",\n   ...     headers={\n   ...         \"date\": [\"Mon, 09 Sep 2011 23:36:00 GMT\"],\n   ...         \"host\": [\"host.foo.com\"],\n   ...         \"authorization\": [(\n   ...             \"AWS4-HMAC-SHA256 \"\n   ...             \"Credential=AKIDEXAMPLE/20110909/us-east-1/host/aws4_request, \"\n   ...             \"SignedHeaders=date;host, \"\n   ...             \"Signature=6b8af5a1e94a59c511e47267ab0cbfa1783dc42861ab7f09e0dba62680da8b28\")],\n   ...         \"x-amz-content-sha256\": [\"UNSIGNED-PAYLOAD\"],\n   ...    },\n   ...    body=b\"Hello world\",\n   ...    region=\"us-east-1\",\n   ...    service=\"host\",\n   ...    key_mapping=key_mapping,\n   ...    timestamp_mismatch=None)\n   >>> try:\n   ...     v.verify()\n   ...     print(\"ok\")\n   ... except awssig.InvalidSignatureError as e:\n   ...     print(\"error: %s\" % e)\n   ok\n\n\n.. _SigV4: http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\n.. _SigV4S3: https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dacut/python-aws-sig", "keywords": "aws,signature,aws-sigv4", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "awssig", "package_url": "https://pypi.org/project/awssig/", "platform": "", "project_url": "https://pypi.org/project/awssig/", "project_urls": {"Homepage": "https://github.com/dacut/python-aws-sig"}, "release_url": "https://pypi.org/project/awssig/0.5.0/", "requires_dist": null, "requires_python": "", "summary": "AWS signature verification routines", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This library provides signature verification for requests made to an AWS\nservice. Typically, this is used to provide mock interfaces for AWS services\nor to rewrite AWS requests through a proxy host.</p>\n<p>The current source tree can be found on\n<a href=\"https://github.com/dacut/python-aws-sig\" rel=\"nofollow\">GitHub</a>.</p>\n<p>Documentation is available at\n<a href=\"https://docs.ionosphere.io/awssig/index.html\" rel=\"nofollow\">docs.ionosphere.io</a>.</p>\n<p>Currently only <a href=\"http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\" rel=\"nofollow\">SigV4</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html\" rel=\"nofollow\">SigV4S3</a> (the S3 variant of SigV4) are supported.</p>\n<div id=\"example-usage\">\n<h2>Example Usage</h2>\n<pre>&gt;&gt;&gt; import awssig\n&gt;&gt;&gt; access_key = \"AKIDEXAMPLE\"\n&gt;&gt;&gt; secret_key = \"wJalrXUtnFEMI/K7MDENG+bPxRfiCYEXAMPLEKEY\"\n&gt;&gt;&gt; key_mapping = { access_key: secret_key }\n&gt;&gt;&gt; v = awssig.AWSSigV4Verifier(\n...     request_method=\"GET\",\n...     uri_path=\"/\",\n...     query_string=\"a=foo&amp;b=foo\",\n...     headers={\n...         \"date\": [\"Mon, 09 Sep 2011 23:36:00 GMT\"],\n...         \"host\": [\"host.foo.com\"],\n...         \"authorization\": [(\n...             \"AWS4-HMAC-SHA256 \"\n...             \"Credential=AKIDEXAMPLE/20110909/us-east-1/host/aws4_request, \"\n...             \"SignedHeaders=date;host, \"\n...             \"Signature=0dc122f3b28b831ab48ba65cb47300de53fbe91b577fe113edac383730254a3b\")],\n...    },\n...    body=b\"\",\n...    region=\"us-east-1\",\n...    service=\"host\",\n...    key_mapping=key_mapping,\n...    timestamp_mismatch=None)\n&gt;&gt;&gt; try:\n...     v.verify()\n...     print(\"ok\")\n... except awssig.InvalidSignatureError as e:\n...     print(\"error: %s\" % e)\nok\n&gt;&gt;&gt; v = awssig.AWSSigV4S3Verifier(\n...     request_method=\"POST\",\n...     uri_path=\"/a//b/../c\",\n...     headers={\n...         \"date\": [\"Mon, 09 Sep 2011 23:36:00 GMT\"],\n...         \"host\": [\"host.foo.com\"],\n...         \"authorization\": [(\n...             \"AWS4-HMAC-SHA256 \"\n...             \"Credential=AKIDEXAMPLE/20110909/us-east-1/host/aws4_request, \"\n...             \"SignedHeaders=date;host, \"\n...             \"Signature=6b8af5a1e94a59c511e47267ab0cbfa1783dc42861ab7f09e0dba62680da8b28\")],\n...         \"x-amz-content-sha256\": [\"UNSIGNED-PAYLOAD\"],\n...    },\n...    body=b\"Hello world\",\n...    region=\"us-east-1\",\n...    service=\"host\",\n...    key_mapping=key_mapping,\n...    timestamp_mismatch=None)\n&gt;&gt;&gt; try:\n...     v.verify()\n...     print(\"ok\")\n... except awssig.InvalidSignatureError as e:\n...     print(\"error: %s\" % e)\nok\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6301977, "releases": {"0.2.2": [{"comment_text": "", "digests": {"md5": "1ca6323ff1ec3a4d89ed9fd329b3e5f7", "sha256": "445b03945096bf9ca238b3fb8b88b7106c355538014b5a77183e3fe2f8793aea"}, "downloads": -1, "filename": "awssig-0.2.2.tar.gz", "has_sig": false, "md5_digest": "1ca6323ff1ec3a4d89ed9fd329b3e5f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7345, "upload_time": "2016-02-11T09:44:28", "upload_time_iso_8601": "2016-02-11T09:44:28.068285Z", "url": "https://files.pythonhosted.org/packages/98/b9/da7fe795d9bd13a67b34c5149380a7f6d1bc517168c0b44c24c0d92e4604/awssig-0.2.2.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "886313fa9a2b01195ab434216b7db665", "sha256": "28bd32c609ab84da4ba5ead0833521c96df03ad060d3ca774753e430fcc3fd83"}, "downloads": -1, "filename": "awssig-0.3.2.tar.gz", "has_sig": false, "md5_digest": "886313fa9a2b01195ab434216b7db665", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10537, "upload_time": "2019-11-18T21:04:02", "upload_time_iso_8601": "2019-11-18T21:04:02.086578Z", "url": "https://files.pythonhosted.org/packages/1d/ea/bfe38e6719c1544b99a131dc8e650419bd2143cdff71658bf6d11ab14e79/awssig-0.3.2.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "f4d8c837c166f86f11aefb8193a748a8", "sha256": "09d855b4140eb18663fd5131e8913516fb7b720650c2409a3dfafc4c4a6e40cc"}, "downloads": -1, "filename": "awssig-0.4.0.tar.gz", "has_sig": true, "md5_digest": "f4d8c837c166f86f11aefb8193a748a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12969, "upload_time": "2019-12-14T08:46:29", "upload_time_iso_8601": "2019-12-14T08:46:29.766746Z", "url": "https://files.pythonhosted.org/packages/3f/31/531d4e8fc882c80e3fa2d3bc455d3a63364fef8b5647aea07e0c8a799a38/awssig-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "ce252d3477edd5013984873a42fa9eaa", "sha256": "ee7fa6c7d8b98f4bdee25779810ac8d6ab71ebb3023cb35b999d5ed1763533ff"}, "downloads": -1, "filename": "awssig-0.5.0.tar.gz", "has_sig": true, "md5_digest": "ce252d3477edd5013984873a42fa9eaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13355, "upload_time": "2019-12-14T09:17:04", "upload_time_iso_8601": "2019-12-14T09:17:04.193819Z", "url": "https://files.pythonhosted.org/packages/75/e3/e91a6ff81b6547eae21cc38ca070c24b7b9b04fdbaefcd70832e5f8778df/awssig-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ce252d3477edd5013984873a42fa9eaa", "sha256": "ee7fa6c7d8b98f4bdee25779810ac8d6ab71ebb3023cb35b999d5ed1763533ff"}, "downloads": -1, "filename": "awssig-0.5.0.tar.gz", "has_sig": true, "md5_digest": "ce252d3477edd5013984873a42fa9eaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13355, "upload_time": "2019-12-14T09:17:04", "upload_time_iso_8601": "2019-12-14T09:17:04.193819Z", "url": "https://files.pythonhosted.org/packages/75/e3/e91a6ff81b6547eae21cc38ca070c24b7b9b04fdbaefcd70832e5f8778df/awssig-0.5.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:34 2020"}