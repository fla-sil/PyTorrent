{"info": {"author": "Mikhail Khvoinitsky", "author_email": "me@khvoinitsky.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Information Technology", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3 :: Only", "Topic :: Office/Business :: Scheduling"], "description": "# Intro\nTemplate engine for (currently) Jira and Email. Uses yaml and jinja2. It helps you create multiple (possibly cross-linked) jira issues and emails from a template.\n\n# Table of Contents\n<!-- generated with `md_toc -p README.md github` -->\n<!--TOC-->\n\n- [Intro](#intro)\n- [Table of Contents](#table-of-contents)\n- [Installation](#installation)\n  - [Windows](#windows)\n  - [macOS](#macos)\n  - [Anything else (GNU/Linux, Cygwin, *nix, etc)](#anything-else-gnulinux-cygwin-nix-etc)\n    - [Using pip](#using-pip)\n    - [Using eggsecutable](#using-eggsecutable)\n    - [From source](#from-source)\n- [Usage](#usage)\n- [Configuration](#configuration)\n- [Template description](#template-description)\n  - [Overview](#overview)\n  - [Examples](#examples)\n\n<!--TOC-->\n\n# Installation\n\n## Windows\n1. Download Workflow_Templater_${version}.exe from the latest release on [Releases page](https://github.com/m-khvoinitsky/workflow-templater/releases).\n2. Install it.\n3. Now `workflow-templater` executable should be available from Windows Command Prompt (`cmd.exe`) and from Powershell.\n4. (Optional, recommended) Install [Windows Terminal](https://github.com/Microsoft/Terminal) and use it instead of default console.\n\n## macOS\n1. Install python \u2265 3.7.\n    * Using official Python installer:\n        1. Install python \u2265 3.7 from <https://python.org/> (\"macOS 64-bit installer\")\n        2. Install CA certificates for python, execute in Terminal:\n            ```\n            /Applications/Python\\ 3.7/Install\\ Certificates.command\n            ```\n            Alternatively, you can double-click on `Install Certificates.command` in Finder\n    * Or using [Homebrew](https://brew.sh/):\n        ```sh\n        brew install python\n        ```\n2.  ```sh\n    pip3 install workflow-templater\n    ```\n## Anything else (GNU/Linux, Cygwin, *nix, etc)\n### Using pip\n1. Make sure that python \u2265 3.7 is installed\n2.\n    ```sh\n    pip3 install workflow-templater\n    ```\n### Using eggsecutable\n1. Download workflow_templater-${version}-py3.x.egg from the latest release on [Releases page](https://github.com/m-khvoinitsky/workflow-templater/releases).\n2. You can execute it directly or with `/bin/sh` (if you have compatible python and dependencies installed):\n    ```sh\n    ./workflow_templater-${version}-py3.x.egg --help\n    sh ./workflow_templater-${version}-py3.x.egg --help\n    ```\n### From source\n1. Clone this repo\n2. Install dependencies if required\n    ```sh\n    pip3 install -r requirements.txt\n    ```\n3. You can execute the script directly:\n    ```\n    cd workflow_templater\n    ./workflow_templater/__init__.py --help\n    ```\n    Or install/build/whatever it with\n    ```\n    python3 setup.py\n    ```\n\n# Usage\nSee\n```sh\nworkflow-templater --help\n```\n# Configuration\nTo avoid typing same command line arguments each time, it is possible to specify them in configuration file. Configuration file location is OS-specific, to find out correct location for your os, execute `workflow-templater --help`, you'll see message \"--config CONFIG  overwrite config file path, default is ${location}\" where ${location} is the location of configuration file on your OS. You can create this file and specify values of command-line arguments omitting `--` and replacing `-` with `_`, for example, `--jira-user j_wayne` becomes `jira_user: j_wayne`, `--dry-run` becomes `dry_run: true` and so on. You can also use jinja2 in configuration file which evaluates using variables from itself.\n\nExample `~/.config/workflow-templater/config.yaml`:\n```yaml\ndry_run: true\nverbose: true\nuser: j_wayne\njira: https://jira.example.com/\njira_user: '{{ user }}'\nemail_user: '{{ user }}'\nemail_from: '{{ user }}@example.com'\nemail_smtp: 'smtp.example.com:587'\n# avoid typing in the same password for jira and email\njira_keyring_service_name: 'MyCorp LDAP'\nemail_keyring_service_name: 'MyCorp LDAP'\n\n```\n\n# Template description\n## Overview\n* Whole workflow template is a directory.\n* There should be one file with variables named `0_common.yaml`, `00_common.yaml` or `common.yaml`. Alternatively, you can name this file as you wish and specify its name with `--vars` argument.\n* There may be any amount of \"issue\" files:\n    * ending with \".jira.yaml\" for jira issue\n        * All fields in each jira.issue file are send as is to Jira via [API](https://docs.atlassian.com/software/jira/docs/api/REST/latest/#api/2/issue-createIssue) in `fields` fileld with the exception of following fields:\n            * `watchers`: it's impossible to add watchers during create so it handled separately via [this API method](https://docs.atlassian.com/software/jira/docs/api/REST/latest/#api/2/issue-addWatcher).\n            * `update`: its content is sent in `update` via [API](https://docs.atlassian.com/software/jira/docs/api/REST/latest/#api/2/issue-createIssue)\n            * global special fields (see below)\n    * ending with \".email.yaml\" for email.\n* Each \"issue\" file is yaml file where each string value is rendered with [Jinja2](http://jinja.pocoo.org/docs/templates/) using variables from `*common.yaml` file.\n* Special variables available for use in jinja:\n    * `issuekey_self`: Jira issue key or Message-ID of current issue or email.\n    * `issuekey_<name>`: Jira issue key or Message-ID of issue or email named `<name>`. For example, for issue in filename `something.jira.yaml` this variable name would be `issuekey_something` and it can be used in all templates.\n* Global special fields:\n    * `foreach`: list, create one issue per item in this list. List items should be strings or dicts (in case of dicts you must specify `foreach_namevar` too, see below). In case of strings, issuekey_ variable would be named `issuekey_<name>_<list_value>`\n    Example:\n        ```yaml\n        foreach:\n        - Android\n        - iOS\n        summary: 'Release application for {{ item }}'\n        ...\n        ```\n        would finally evaluate to following issues:\n        ```yaml\n        summary: 'Release application for Android'\n        ...\n        ```\n        ```yaml\n        summary: 'Release application for iOS'\n        ...\n        ```\n    * `foreach_fromvar`: if content for `foreach` variable is shared between several templates, it's better to specify it in `*common.yaml` file and specify here the name of the variable in this file. Example:\n        `common.yaml`:\n        ```yaml\n        OSes:\n        - Android\n        - iOS\n        ...\n        ```\n        `build.jira.yaml`:\n        ```yaml\n        foreach_fromvar: OSes\n        summary: 'Build clients for {{ item }}'\n        ...\n        ```\n        `release.jira.yaml`:\n        ```yaml\n        foreach_fromvar: OSes\n        summary: 'Release application for {{ item }}'\n        ...\n        ```\n    * `foreach_key`: if you don't like default variable name (`item`) for each item in `foreach` list, you may specify it here. Example\n        ```yaml\n        foreach:\n        - Android\n        - iOS\n        foreach_key: os\n        summary: 'Release application for {{ os }}'\n        ...\n        ```\n        would finally evaluate to following issues:\n        ```yaml\n        summary: 'Release application for Android'\n        ...\n        ```\n        ```yaml\n        summary: 'Release application for iOS'\n        ...\n        ```\n    * `foreach_namevar`: when foreach is in use, workflow-templater would generate issuekey_ variable name as follows: `issuekey_<name>_<list_value>`. If you use dicts as foreach values, you need to specify key name in this dicts which will be appended to the end of this variable name. Example\n        `release.jira.yaml` file:\n        ```yaml\n        foreach:\n        - name: Android\n          date: !!timestamp 2019-10-24 06:30:00.0\n        - name: iOS\n          date: !!timestamp 2019-10-24 10:50:00.0\n        foreach_namevar: name\n        summary: 'Release application for {{ item.name }}'\n        ...\n        ```\n        Now in any other (or the same) issue you can link to this issues as follows:\n        ```yaml\n        summary: 'Notify community'\n        description: |\n          Android release task: {{ issuekey_release_Android }}\n          iOS release task: {{ issuekey_release_iOS }}\n        ```\n    * `if`: if this variable value evaluates to empty string (`''`), `false` or `no`, this template will be completely ignored. Note: value for this variable is calculated for each item separately when `foreach` or `foreach_fromvar` is in use.\n    Example:\n        ```yaml\n        foreach:\n        - Android\n        - iOS\n        foreach_key: os\n        if: '{{ os in [\"Android\", \"GNU/Linux\"] }}'\n        summary: 'Release application for {{ os }}'\n        ...\n        ```\n        would finally evaluate to following issue (only one, obviously):\n        ```yaml\n        summary: 'Release application for Android'\n        ...\n        ```\n\n## Examples\nSee [basic release example](https://github.com/m-khvoinitsky/workflow-templater/tree/master/examples/basic_release_example) for basic example.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/m-khvoinitsky/workflow-templater", "keywords": "jira email template workflow release", "license": "", "maintainer": "", "maintainer_email": "", "name": "workflow-templater", "package_url": "https://pypi.org/project/workflow-templater/", "platform": "", "project_url": "https://pypi.org/project/workflow-templater/", "project_urls": {"Homepage": "https://github.com/m-khvoinitsky/workflow-templater"}, "release_url": "https://pypi.org/project/workflow-templater/0.2.3/", "requires_dist": ["Jinja2", "keyring", "ruamel.yaml", "appdirs"], "requires_python": "", "summary": "Template engine for (currently) Jira and Email. Uses yaml and jinja2. It helps you create multiple (possibly cross-linked) jira issues and emails from a template.", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Intro</h1>\n<p>Template engine for (currently) Jira and Email. Uses yaml and jinja2. It helps you create multiple (possibly cross-linked) jira issues and emails from a template.</p>\n<h1>Table of Contents</h1>\n\n\n<ul>\n<li><a href=\"#intro\" rel=\"nofollow\">Intro</a></li>\n<li><a href=\"#table-of-contents\" rel=\"nofollow\">Table of Contents</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a>\n<ul>\n<li><a href=\"#windows\" rel=\"nofollow\">Windows</a></li>\n<li><a href=\"#macos\" rel=\"nofollow\">macOS</a></li>\n<li><a href=\"#anything-else-gnulinux-cygwin-nix-etc\" rel=\"nofollow\">Anything else (GNU/Linux, Cygwin, *nix, etc)</a>\n<ul>\n<li><a href=\"#using-pip\" rel=\"nofollow\">Using pip</a></li>\n<li><a href=\"#using-eggsecutable\" rel=\"nofollow\">Using eggsecutable</a></li>\n<li><a href=\"#from-source\" rel=\"nofollow\">From source</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#configuration\" rel=\"nofollow\">Configuration</a></li>\n<li><a href=\"#template-description\" rel=\"nofollow\">Template description</a>\n<ul>\n<li><a href=\"#overview\" rel=\"nofollow\">Overview</a></li>\n<li><a href=\"#examples\" rel=\"nofollow\">Examples</a></li>\n</ul>\n</li>\n</ul>\n\n<h1>Installation</h1>\n<h2>Windows</h2>\n<ol>\n<li>Download Workflow_Templater_${version}.exe from the latest release on <a href=\"https://github.com/m-khvoinitsky/workflow-templater/releases\" rel=\"nofollow\">Releases page</a>.</li>\n<li>Install it.</li>\n<li>Now <code>workflow-templater</code> executable should be available from Windows Command Prompt (<code>cmd.exe</code>) and from Powershell.</li>\n<li>(Optional, recommended) Install <a href=\"https://github.com/Microsoft/Terminal\" rel=\"nofollow\">Windows Terminal</a> and use it instead of default console.</li>\n</ol>\n<h2>macOS</h2>\n<ol>\n<li>Install python \u2265 3.7.\n<ul>\n<li>Using official Python installer:\n<ol>\n<li>Install python \u2265 3.7 from <a href=\"https://python.org/\" rel=\"nofollow\">https://python.org/</a> (\"macOS 64-bit installer\")</li>\n<li>Install CA certificates for python, execute in Terminal:\n<pre><code>/Applications/Python\\ 3.7/Install\\ Certificates.command\n</code></pre>\nAlternatively, you can double-click on <code>Install Certificates.command</code> in Finder</li>\n</ol>\n</li>\n<li>Or using <a href=\"https://brew.sh/\" rel=\"nofollow\">Homebrew</a>:\n<pre>brew install python\n</pre>\n</li>\n</ul>\n</li>\n<li>\n<pre>pip3 install workflow-templater\n</pre>\n</li>\n</ol>\n<h2>Anything else (GNU/Linux, Cygwin, *nix, etc)</h2>\n<h3>Using pip</h3>\n<ol>\n<li>Make sure that python \u2265 3.7 is installed</li>\n<li>\n<pre>pip3 install workflow-templater\n</pre>\n</li>\n</ol>\n<h3>Using eggsecutable</h3>\n<ol>\n<li>Download workflow_templater-${version}-py3.x.egg from the latest release on <a href=\"https://github.com/m-khvoinitsky/workflow-templater/releases\" rel=\"nofollow\">Releases page</a>.</li>\n<li>You can execute it directly or with <code>/bin/sh</code> (if you have compatible python and dependencies installed):\n<pre>./workflow_templater-<span class=\"si\">${</span><span class=\"nv\">version</span><span class=\"si\">}</span>-py3.x.egg --help\nsh ./workflow_templater-<span class=\"si\">${</span><span class=\"nv\">version</span><span class=\"si\">}</span>-py3.x.egg --help\n</pre>\n</li>\n</ol>\n<h3>From source</h3>\n<ol>\n<li>Clone this repo</li>\n<li>Install dependencies if required\n<pre>pip3 install -r requirements.txt\n</pre>\n</li>\n<li>You can execute the script directly:\n<pre><code>cd workflow_templater\n./workflow_templater/__init__.py --help\n</code></pre>\nOr install/build/whatever it with\n<pre><code>python3 setup.py\n</code></pre>\n</li>\n</ol>\n<h1>Usage</h1>\n<p>See</p>\n<pre>workflow-templater --help\n</pre>\n<h1>Configuration</h1>\n<p>To avoid typing same command line arguments each time, it is possible to specify them in configuration file. Configuration file location is OS-specific, to find out correct location for your os, execute <code>workflow-templater --help</code>, you'll see message \"--config CONFIG  overwrite config file path, default is ${location}\" where ${location} is the location of configuration file on your OS. You can create this file and specify values of command-line arguments omitting <code>--</code> and replacing <code>-</code> with <code>_</code>, for example, <code>--jira-user j_wayne</code> becomes <code>jira_user: j_wayne</code>, <code>--dry-run</code> becomes <code>dry_run: true</code> and so on. You can also use jinja2 in configuration file which evaluates using variables from itself.</p>\n<p>Example <code>~/.config/workflow-templater/config.yaml</code>:</p>\n<pre><span class=\"nt\">dry_run</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">true</span>\n<span class=\"nt\">verbose</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">true</span>\n<span class=\"nt\">user</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">j_wayne</span>\n<span class=\"nt\">jira</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">https://jira.example.com/</span>\n<span class=\"nt\">jira_user</span><span class=\"p\">:</span> <span class=\"s\">'{{</span><span class=\"nv\"> </span><span class=\"s\">user</span><span class=\"nv\"> </span><span class=\"s\">}}'</span>\n<span class=\"nt\">email_user</span><span class=\"p\">:</span> <span class=\"s\">'{{</span><span class=\"nv\"> </span><span class=\"s\">user</span><span class=\"nv\"> </span><span class=\"s\">}}'</span>\n<span class=\"nt\">email_from</span><span class=\"p\">:</span> <span class=\"s\">'{{</span><span class=\"nv\"> </span><span class=\"s\">user</span><span class=\"nv\"> </span><span class=\"s\">}}@example.com'</span>\n<span class=\"nt\">email_smtp</span><span class=\"p\">:</span> <span class=\"s\">'smtp.example.com:587'</span>\n<span class=\"c1\"># avoid typing in the same password for jira and email</span>\n<span class=\"nt\">jira_keyring_service_name</span><span class=\"p\">:</span> <span class=\"s\">'MyCorp</span><span class=\"nv\"> </span><span class=\"s\">LDAP'</span>\n<span class=\"nt\">email_keyring_service_name</span><span class=\"p\">:</span> <span class=\"s\">'MyCorp</span><span class=\"nv\"> </span><span class=\"s\">LDAP'</span>\n</pre>\n<h1>Template description</h1>\n<h2>Overview</h2>\n<ul>\n<li>Whole workflow template is a directory.</li>\n<li>There should be one file with variables named <code>0_common.yaml</code>, <code>00_common.yaml</code> or <code>common.yaml</code>. Alternatively, you can name this file as you wish and specify its name with <code>--vars</code> argument.</li>\n<li>There may be any amount of \"issue\" files:\n<ul>\n<li>ending with \".jira.yaml\" for jira issue\n<ul>\n<li>All fields in each jira.issue file are send as is to Jira via <a href=\"https://docs.atlassian.com/software/jira/docs/api/REST/latest/#api/2/issue-createIssue\" rel=\"nofollow\">API</a> in <code>fields</code> fileld with the exception of following fields:\n<ul>\n<li><code>watchers</code>: it's impossible to add watchers during create so it handled separately via <a href=\"https://docs.atlassian.com/software/jira/docs/api/REST/latest/#api/2/issue-addWatcher\" rel=\"nofollow\">this API method</a>.</li>\n<li><code>update</code>: its content is sent in <code>update</code> via <a href=\"https://docs.atlassian.com/software/jira/docs/api/REST/latest/#api/2/issue-createIssue\" rel=\"nofollow\">API</a></li>\n<li>global special fields (see below)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>ending with \".email.yaml\" for email.</li>\n</ul>\n</li>\n<li>Each \"issue\" file is yaml file where each string value is rendered with <a href=\"http://jinja.pocoo.org/docs/templates/\" rel=\"nofollow\">Jinja2</a> using variables from <code>*common.yaml</code> file.</li>\n<li>Special variables available for use in jinja:\n<ul>\n<li><code>issuekey_self</code>: Jira issue key or Message-ID of current issue or email.</li>\n<li><code>issuekey_&lt;name&gt;</code>: Jira issue key or Message-ID of issue or email named <code>&lt;name&gt;</code>. For example, for issue in filename <code>something.jira.yaml</code> this variable name would be <code>issuekey_something</code> and it can be used in all templates.</li>\n</ul>\n</li>\n<li>Global special fields:\n<ul>\n<li><code>foreach</code>: list, create one issue per item in this list. List items should be strings or dicts (in case of dicts you must specify <code>foreach_namevar</code> too, see below). In case of strings, issuekey_ variable would be named <code>issuekey_&lt;name&gt;_&lt;list_value&gt;</code>\nExample:\n<pre><span class=\"nt\">foreach</span><span class=\"p\">:</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">Android</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iOS</span>\n<span class=\"nt\">summary</span><span class=\"p\">:</span> <span class=\"s\">'Release</span><span class=\"nv\"> </span><span class=\"s\">application</span><span class=\"nv\"> </span><span class=\"s\">for</span><span class=\"nv\"> </span><span class=\"s\">{{</span><span class=\"nv\"> </span><span class=\"s\">item</span><span class=\"nv\"> </span><span class=\"s\">}}'</span>\n<span class=\"nn\">...</span>\n</pre>\nwould finally evaluate to following issues:\n<pre><span class=\"nt\">summary</span><span class=\"p\">:</span> <span class=\"s\">'Release</span><span class=\"nv\"> </span><span class=\"s\">application</span><span class=\"nv\"> </span><span class=\"s\">for</span><span class=\"nv\"> </span><span class=\"s\">Android'</span>\n<span class=\"nn\">...</span>\n</pre>\n<pre><span class=\"nt\">summary</span><span class=\"p\">:</span> <span class=\"s\">'Release</span><span class=\"nv\"> </span><span class=\"s\">application</span><span class=\"nv\"> </span><span class=\"s\">for</span><span class=\"nv\"> </span><span class=\"s\">iOS'</span>\n<span class=\"nn\">...</span>\n</pre>\n</li>\n<li><code>foreach_fromvar</code>: if content for <code>foreach</code> variable is shared between several templates, it's better to specify it in <code>*common.yaml</code> file and specify here the name of the variable in this file. Example:\n<code>common.yaml</code>:\n<pre><span class=\"nt\">OSes</span><span class=\"p\">:</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">Android</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iOS</span>\n<span class=\"nn\">...</span>\n</pre>\n<code>build.jira.yaml</code>:\n<pre><span class=\"nt\">foreach_fromvar</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">OSes</span>\n<span class=\"nt\">summary</span><span class=\"p\">:</span> <span class=\"s\">'Build</span><span class=\"nv\"> </span><span class=\"s\">clients</span><span class=\"nv\"> </span><span class=\"s\">for</span><span class=\"nv\"> </span><span class=\"s\">{{</span><span class=\"nv\"> </span><span class=\"s\">item</span><span class=\"nv\"> </span><span class=\"s\">}}'</span>\n<span class=\"nn\">...</span>\n</pre>\n<code>release.jira.yaml</code>:\n<pre><span class=\"nt\">foreach_fromvar</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">OSes</span>\n<span class=\"nt\">summary</span><span class=\"p\">:</span> <span class=\"s\">'Release</span><span class=\"nv\"> </span><span class=\"s\">application</span><span class=\"nv\"> </span><span class=\"s\">for</span><span class=\"nv\"> </span><span class=\"s\">{{</span><span class=\"nv\"> </span><span class=\"s\">item</span><span class=\"nv\"> </span><span class=\"s\">}}'</span>\n<span class=\"nn\">...</span>\n</pre>\n</li>\n<li><code>foreach_key</code>: if you don't like default variable name (<code>item</code>) for each item in <code>foreach</code> list, you may specify it here. Example\n<pre><span class=\"nt\">foreach</span><span class=\"p\">:</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">Android</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iOS</span>\n<span class=\"nt\">foreach_key</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">os</span>\n<span class=\"nt\">summary</span><span class=\"p\">:</span> <span class=\"s\">'Release</span><span class=\"nv\"> </span><span class=\"s\">application</span><span class=\"nv\"> </span><span class=\"s\">for</span><span class=\"nv\"> </span><span class=\"s\">{{</span><span class=\"nv\"> </span><span class=\"s\">os</span><span class=\"nv\"> </span><span class=\"s\">}}'</span>\n<span class=\"nn\">...</span>\n</pre>\nwould finally evaluate to following issues:\n<pre><span class=\"nt\">summary</span><span class=\"p\">:</span> <span class=\"s\">'Release</span><span class=\"nv\"> </span><span class=\"s\">application</span><span class=\"nv\"> </span><span class=\"s\">for</span><span class=\"nv\"> </span><span class=\"s\">Android'</span>\n<span class=\"nn\">...</span>\n</pre>\n<pre><span class=\"nt\">summary</span><span class=\"p\">:</span> <span class=\"s\">'Release</span><span class=\"nv\"> </span><span class=\"s\">application</span><span class=\"nv\"> </span><span class=\"s\">for</span><span class=\"nv\"> </span><span class=\"s\">iOS'</span>\n<span class=\"nn\">...</span>\n</pre>\n</li>\n<li><code>foreach_namevar</code>: when foreach is in use, workflow-templater would generate issuekey_ variable name as follows: <code>issuekey_&lt;name&gt;_&lt;list_value&gt;</code>. If you use dicts as foreach values, you need to specify key name in this dicts which will be appended to the end of this variable name. Example\n<code>release.jira.yaml</code> file:\n<pre><span class=\"nt\">foreach</span><span class=\"p\">:</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Android</span>\n  <span class=\"nt\">date</span><span class=\"p\">:</span> <span class=\"kt\">!!timestamp</span> <span class=\"l l-Scalar l-Scalar-Plain\">2019-10-24 06:30:00.0</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">iOS</span>\n  <span class=\"nt\">date</span><span class=\"p\">:</span> <span class=\"kt\">!!timestamp</span> <span class=\"l l-Scalar l-Scalar-Plain\">2019-10-24 10:50:00.0</span>\n<span class=\"nt\">foreach_namevar</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">name</span>\n<span class=\"nt\">summary</span><span class=\"p\">:</span> <span class=\"s\">'Release</span><span class=\"nv\"> </span><span class=\"s\">application</span><span class=\"nv\"> </span><span class=\"s\">for</span><span class=\"nv\"> </span><span class=\"s\">{{</span><span class=\"nv\"> </span><span class=\"s\">item.name</span><span class=\"nv\"> </span><span class=\"s\">}}'</span>\n<span class=\"nn\">...</span>\n</pre>\nNow in any other (or the same) issue you can link to this issues as follows:\n<pre><span class=\"nt\">summary</span><span class=\"p\">:</span> <span class=\"s\">'Notify</span><span class=\"nv\"> </span><span class=\"s\">community'</span>\n<span class=\"nt\">description</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">|</span>\n  <span class=\"no\">Android release task: {{ issuekey_release_Android }}</span>\n  <span class=\"no\">iOS release task: {{ issuekey_release_iOS }}</span>\n</pre>\n</li>\n<li><code>if</code>: if this variable value evaluates to empty string (<code>''</code>), <code>false</code> or <code>no</code>, this template will be completely ignored. Note: value for this variable is calculated for each item separately when <code>foreach</code> or <code>foreach_fromvar</code> is in use.\nExample:\n<pre><span class=\"nt\">foreach</span><span class=\"p\">:</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">Android</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">iOS</span>\n<span class=\"nt\">foreach_key</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">os</span>\n<span class=\"nt\">if</span><span class=\"p\">:</span> <span class=\"s\">'{{</span><span class=\"nv\"> </span><span class=\"s\">os</span><span class=\"nv\"> </span><span class=\"s\">in</span><span class=\"nv\"> </span><span class=\"s\">[\"Android\",</span><span class=\"nv\"> </span><span class=\"s\">\"GNU/Linux\"]</span><span class=\"nv\"> </span><span class=\"s\">}}'</span>\n<span class=\"nt\">summary</span><span class=\"p\">:</span> <span class=\"s\">'Release</span><span class=\"nv\"> </span><span class=\"s\">application</span><span class=\"nv\"> </span><span class=\"s\">for</span><span class=\"nv\"> </span><span class=\"s\">{{</span><span class=\"nv\"> </span><span class=\"s\">os</span><span class=\"nv\"> </span><span class=\"s\">}}'</span>\n<span class=\"nn\">...</span>\n</pre>\nwould finally evaluate to following issue (only one, obviously):\n<pre><span class=\"nt\">summary</span><span class=\"p\">:</span> <span class=\"s\">'Release</span><span class=\"nv\"> </span><span class=\"s\">application</span><span class=\"nv\"> </span><span class=\"s\">for</span><span class=\"nv\"> </span><span class=\"s\">Android'</span>\n<span class=\"nn\">...</span>\n</pre>\n</li>\n</ul>\n</li>\n</ul>\n<h2>Examples</h2>\n<p>See <a href=\"https://github.com/m-khvoinitsky/workflow-templater/tree/master/examples/basic_release_example\" rel=\"nofollow\">basic release example</a> for basic example.</p>\n\n          </div>"}, "last_serial": 6688324, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "1e77b2c5693be1919e3ec37cf32588c2", "sha256": "b2fdf98fc8e56c099652e74bf51d95f4bd78685a5a2fd96929093653c0498f4a"}, "downloads": -1, "filename": "workflow_templater-0.1.1-py3.7.egg", "has_sig": false, "md5_digest": "1e77b2c5693be1919e3ec37cf32588c2", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 10067, "upload_time": "2019-07-23T15:46:59", "upload_time_iso_8601": "2019-07-23T15:46:59.538558Z", "url": "https://files.pythonhosted.org/packages/fd/d7/f414a3c4be3bcb4232e953daf598098fbd2aec6e39a2ac303d7dc7398cd2/workflow_templater-0.1.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8b2cee332dab2a136ab168e197cf48d", "sha256": "1801ec4ab65b0905934f535a336ef45b04f0b95473f7644923957d1742bc8886"}, "downloads": -1, "filename": "workflow_templater-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b8b2cee332dab2a136ab168e197cf48d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11033, "upload_time": "2019-07-23T15:46:58", "upload_time_iso_8601": "2019-07-23T15:46:58.141326Z", "url": "https://files.pythonhosted.org/packages/01/46/759bdce0d358529e9d3c65b745e96b8283662b49b9adf75cc8c972bdb3c4/workflow_templater-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31e410d807e3c9ce0ef974b5e23e0adc", "sha256": "bcf05de41c217ca4fecda48adb8a91e502977ad06e69c638ae7040120953dafb"}, "downloads": -1, "filename": "workflow_templater-0.1.1.tar.gz", "has_sig": false, "md5_digest": "31e410d807e3c9ce0ef974b5e23e0adc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9491, "upload_time": "2019-07-23T15:47:00", "upload_time_iso_8601": "2019-07-23T15:47:00.897663Z", "url": "https://files.pythonhosted.org/packages/59/91/f46462f435cf14553cc3a0956792031ff6f144184b634ed6c53d3a9db067/workflow_templater-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "8ffdbd73383ed0751511ac36ee4e960a", "sha256": "724bfe7a367babfe45823f1576b725a0db540ea47321b1838ebad698384cef85"}, "downloads": -1, "filename": "workflow_templater-0.2.0-py3.7.egg", "has_sig": false, "md5_digest": "8ffdbd73383ed0751511ac36ee4e960a", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 11493, "upload_time": "2019-09-15T14:04:28", "upload_time_iso_8601": "2019-09-15T14:04:28.403171Z", "url": "https://files.pythonhosted.org/packages/16/8b/67e287c9a1848a3bbf69cb0710d0b8f51d7f6db6241b163e93e6702bb014/workflow_templater-0.2.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc1d7a9b4cae9ed2c048490585d50f2d", "sha256": "3bccf32357178b06f1a68f959764464dd9cd6d6b139eebf331945003ee030b81"}, "downloads": -1, "filename": "workflow_templater-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fc1d7a9b4cae9ed2c048490585d50f2d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12498, "upload_time": "2019-09-15T14:04:26", "upload_time_iso_8601": "2019-09-15T14:04:26.830219Z", "url": "https://files.pythonhosted.org/packages/4e/74/4eb3eda2969b834f48b9615402eb8267f39441604c8f4142fc3f564f1fb2/workflow_templater-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "159c7c3223209a578df29a1593f52bc3", "sha256": "8194c45c25457a57aa706cb14f0e39e5f46038af6847c5592b00797d2502efdc"}, "downloads": -1, "filename": "workflow_templater-0.2.0.tar.gz", "has_sig": false, "md5_digest": "159c7c3223209a578df29a1593f52bc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11899, "upload_time": "2019-09-15T14:04:29", "upload_time_iso_8601": "2019-09-15T14:04:29.893029Z", "url": "https://files.pythonhosted.org/packages/d8/1d/208842cfa0682e1e506c60fc262fd8d1076163ede442ba3734638d1f7442/workflow_templater-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "0a9902a7a690b06fb5021fe69bb7c737", "sha256": "ecb5b973d1ed7f0e71bf0934dd09a9d06d0c90dd92a2c1fc753776106e2fb11a"}, "downloads": -1, "filename": "workflow_templater-0.2.1-py3.7.egg", "has_sig": false, "md5_digest": "0a9902a7a690b06fb5021fe69bb7c737", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 12970, "upload_time": "2019-12-18T14:47:44", "upload_time_iso_8601": "2019-12-18T14:47:44.919539Z", "url": "https://files.pythonhosted.org/packages/1b/43/3e164884349fde570f82f261ed3d09cf0c142af9af2f6bdb8e1456273ff2/workflow_templater-0.2.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "831790cf877b001664177699f616a9ff", "sha256": "bf15032fa7f46230eb2308fe38e81dae2c2ce868f93d1f77ff8934731e8f6dd4"}, "downloads": -1, "filename": "workflow_templater-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "831790cf877b001664177699f616a9ff", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13935, "upload_time": "2019-12-18T14:47:43", "upload_time_iso_8601": "2019-12-18T14:47:43.625701Z", "url": "https://files.pythonhosted.org/packages/5e/b2/c31142653fab7af77b1a47e0a962fc864282704571e1f27e8286e17bc22a/workflow_templater-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "20ff833348414ea25db01c650c93868a", "sha256": "594bfafcef3969a193b93981d5a4b45b0424afcd6e32a2493902e1b80282ae8f"}, "downloads": -1, "filename": "workflow_templater-0.2.1.tar.gz", "has_sig": false, "md5_digest": "20ff833348414ea25db01c650c93868a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14692, "upload_time": "2019-12-18T14:47:46", "upload_time_iso_8601": "2019-12-18T14:47:46.499040Z", "url": "https://files.pythonhosted.org/packages/b6/f2/e68c535b5b6b39ad9cda07666afce6e1f5911b4aa08823611643e1b26bbe/workflow_templater-0.2.1.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "1097c86c2dc2402b4ad7e533450046ce", "sha256": "aab0a1e41f33c9a8fa9c6fc0490bb27bb69b311b57425f65bc396abf6cc7fadc"}, "downloads": -1, "filename": "workflow_templater-0.2.3-py3.7.egg", "has_sig": false, "md5_digest": "1097c86c2dc2402b4ad7e533450046ce", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 14276, "upload_time": "2020-02-24T12:21:54", "upload_time_iso_8601": "2020-02-24T12:21:54.401865Z", "url": "https://files.pythonhosted.org/packages/d9/21/2d73fad8b1be165d4c517ded7162cdc0b6181d2ac097481fd0fdcc1160c4/workflow_templater-0.2.3-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "efac5fc38780598be9df75c5045bec83", "sha256": "bbbcd0ebea764b2e073fc9418df7debb55c3b8ef516d4b14ae88e9766a97b13e"}, "downloads": -1, "filename": "workflow_templater-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "efac5fc38780598be9df75c5045bec83", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15282, "upload_time": "2020-02-24T12:21:53", "upload_time_iso_8601": "2020-02-24T12:21:53.171478Z", "url": "https://files.pythonhosted.org/packages/1b/d4/58bb458a283f7a17f36333e410fa6fe789f4531bda3ac40170496b7914e3/workflow_templater-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7db81cee68fb0acc1e51fb3e79338114", "sha256": "dceab9a90ad4e42f28ee6bc5cec3dfcc7098a6f513815bd753d4ed37e85adea3"}, "downloads": -1, "filename": "workflow_templater-0.2.3.tar.gz", "has_sig": false, "md5_digest": "7db81cee68fb0acc1e51fb3e79338114", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15781, "upload_time": "2020-02-24T12:21:55", "upload_time_iso_8601": "2020-02-24T12:21:55.817856Z", "url": "https://files.pythonhosted.org/packages/d3/bb/163ac54d1bf2e5f5d363926158fe7ab403dd048e13cfb5046a12bdb1289a/workflow_templater-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1097c86c2dc2402b4ad7e533450046ce", "sha256": "aab0a1e41f33c9a8fa9c6fc0490bb27bb69b311b57425f65bc396abf6cc7fadc"}, "downloads": -1, "filename": "workflow_templater-0.2.3-py3.7.egg", "has_sig": false, "md5_digest": "1097c86c2dc2402b4ad7e533450046ce", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 14276, "upload_time": "2020-02-24T12:21:54", "upload_time_iso_8601": "2020-02-24T12:21:54.401865Z", "url": "https://files.pythonhosted.org/packages/d9/21/2d73fad8b1be165d4c517ded7162cdc0b6181d2ac097481fd0fdcc1160c4/workflow_templater-0.2.3-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "efac5fc38780598be9df75c5045bec83", "sha256": "bbbcd0ebea764b2e073fc9418df7debb55c3b8ef516d4b14ae88e9766a97b13e"}, "downloads": -1, "filename": "workflow_templater-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "efac5fc38780598be9df75c5045bec83", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15282, "upload_time": "2020-02-24T12:21:53", "upload_time_iso_8601": "2020-02-24T12:21:53.171478Z", "url": "https://files.pythonhosted.org/packages/1b/d4/58bb458a283f7a17f36333e410fa6fe789f4531bda3ac40170496b7914e3/workflow_templater-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7db81cee68fb0acc1e51fb3e79338114", "sha256": "dceab9a90ad4e42f28ee6bc5cec3dfcc7098a6f513815bd753d4ed37e85adea3"}, "downloads": -1, "filename": "workflow_templater-0.2.3.tar.gz", "has_sig": false, "md5_digest": "7db81cee68fb0acc1e51fb3e79338114", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15781, "upload_time": "2020-02-24T12:21:55", "upload_time_iso_8601": "2020-02-24T12:21:55.817856Z", "url": "https://files.pythonhosted.org/packages/d3/bb/163ac54d1bf2e5f5d363926158fe7ab403dd048e13cfb5046a12bdb1289a/workflow_templater-0.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:27:53 2020"}