{"info": {"author": "Emlyn O'Regan", "author_email": "emlynoregan@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Distributed Computing"], "description": "# im_futuretest_webapp2\nThese are the webapp2 utilities for the im_futuretest library. If your project uses webapp2, this is the package you want.\n\n[![Build Status](https://travis-ci.org/emlynoregan/im_futuretest_webapp2.svg?branch=master)](https://travis-ci.org/emlynoregan/im_futuretest_webapp2)\n\n## Install \n\nUse the python package for this library. You can find the package online [here](https://pypi.org/project/im-futuretest-webapp2/).\n\nChange to your Python App Engine project's root folder and do the following:\n\n> pip install im_futuretest_webapp2 --target lib\n\nOr add it to your requirements.txt. You'll also need to set up vendoring, see [app engine vendoring instructions here](https://cloud.google.com/appengine/docs/python/tools/using-libraries-python-27).\n\n## Configuring im_futuretest_webapp2\n\nThis package provides functions that set up webapp2 routes for im_futuretest, both for its api and its ui.\n\nTo get your tests running properly, you should add these routes in your main app (wherever your main webapp2 app is constructed). Doing this \nensures that your tests have exactly the same code loaded as the code they're testing would have when being used normally, ie: no dependency hell.\n\n### app.yaml\n\nThe futuretest handlers all have routes of the form:\n/futuretest/XXX\n(where XXX may include more levels of pathing)\n\nSay you already have an app.yaml rule which pushes all routes to your main app, say main.py, as follows:\n\n\thandlers:\n\t\t- url: *\n\t\t  script: main.app\n\nThen this will work for futuretest without any modification.\n\nIf things are a little messy, you can just add this somewhere early in app.yaml:\n\n\t- url: /futuretest/*\n\t  script: main.app\n\t  login: admin\n\nThis will direct all futuretest routes to the \"app\" webapp2 application constructed in main.py. Obviously modify this as needed.\n\nAlso note the requirement for the user to be an admin of your project. Futuretest is designed to run potentially long running and expensive \ntests; it's best not to open that up to all comers!\n\n### main.py\n\nNow traffic is going to the app constructed in main.py.\n\nNext we need to add futuretest routes to app.\n\nDo it like this:\n\n\timport webapp2\n\t... other imports ...\n\n\troutes = [\n\t\t...\n\t]\n\n\t...\n\n\taddroutes_futuretest_webapp2(routes) # this is the important bit, adds required routes\n\n\t...\n\n\tapp = webapp2.WSGIApplication(routes)\n\n\nie: just call addroutes_futuretest_webapp2(app) somewhere in main.py\n\n### Accessing the UI\n\nGo to the url\n\n\thttp(s)://<yourdomain>/futuretest/ui\n\nand you'll see the UI:\n![IM Future Test screenshot](http://i433.photobucket.com/albums/qq59/emlynoregan/im_futuretest.png \"IM Future Test screenshot\")\n\n\n\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/emlynoregan/im_futuretest_webapp2", "keywords": "", "license": "../LICENSE.txt", "maintainer": "", "maintainer_email": "", "name": "im-futuretest-webapp2", "package_url": "https://pypi.org/project/im-futuretest-webapp2/", "platform": "", "project_url": "https://pypi.org/project/im-futuretest-webapp2/", "project_urls": {"Homepage": "https://github.com/emlynoregan/im_futuretest_webapp2"}, "release_url": "https://pypi.org/project/im-futuretest-webapp2/0.1.1/", "requires_dist": ["im-futuretest (>=0.1.4)"], "requires_python": "", "summary": "webapp2 handlers and route utils for im_futuretask, for Google App Engine, Python standard environment", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # im_futuretest_webapp2<br>These are the webapp2 utilities for the im_futuretest library. If your project uses webapp2, this is the package you want.<br><br>[![Build Status](https://travis-ci.org/emlynoregan/im_futuretest_webapp2.svg?branch=master)](https://travis-ci.org/emlynoregan/im_futuretest_webapp2)<br><br>## Install <br><br>Use the python package for this library. You can find the package online [here](https://pypi.org/project/im-futuretest-webapp2/).<br><br>Change to your Python App Engine project's root folder and do the following:<br><br>&gt; pip install im_futuretest_webapp2 --target lib<br><br>Or add it to your requirements.txt. You'll also need to set up vendoring, see [app engine vendoring instructions here](https://cloud.google.com/appengine/docs/python/tools/using-libraries-python-27).<br><br>## Configuring im_futuretest_webapp2<br><br>This package provides functions that set up webapp2 routes for im_futuretest, both for its api and its ui.<br><br>To get your tests running properly, you should add these routes in your main app (wherever your main webapp2 app is constructed). Doing this <br>ensures that your tests have exactly the same code loaded as the code they're testing would have when being used normally, ie: no dependency hell.<br><br>### app.yaml<br><br>The futuretest handlers all have routes of the form:<br>/futuretest/XXX<br>(where XXX may include more levels of pathing)<br><br>Say you already have an app.yaml rule which pushes all routes to your main app, say main.py, as follows:<br><br>\thandlers:<br>\t\t- url: *<br>\t\t  script: main.app<br><br>Then this will work for futuretest without any modification.<br><br>If things are a little messy, you can just add this somewhere early in app.yaml:<br><br>\t- url: /futuretest/*<br>\t  script: main.app<br>\t  login: admin<br><br>This will direct all futuretest routes to the \"app\" webapp2 application constructed in main.py. Obviously modify this as needed.<br><br>Also note the requirement for the user to be an admin of your project. Futuretest is designed to run potentially long running and expensive <br>tests; it's best not to open that up to all comers!<br><br>### main.py<br><br>Now traffic is going to the app constructed in main.py.<br><br>Next we need to add futuretest routes to app.<br><br>Do it like this:<br><br>\timport webapp2<br>\t... other imports ...<br><br>\troutes = [<br>\t\t...<br>\t]<br><br>\t...<br><br>\taddroutes_futuretest_webapp2(routes) # this is the important bit, adds required routes<br><br>\t...<br><br>\tapp = webapp2.WSGIApplication(routes)<br><br><br>ie: just call addroutes_futuretest_webapp2(app) somewhere in main.py<br><br>### Accessing the UI<br><br>Go to the url<br><br>\thttp(s)://&lt;yourdomain&gt;/futuretest/ui<br><br>and you'll see the UI:<br>![IM Future Test screenshot](http://i433.photobucket.com/albums/qq59/emlynoregan/im_futuretest.png \"IM Future Test screenshot\")<br><br><br><br><br><br>\n          </div>"}, "last_serial": 3617050, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "deee45a3555836e759214082dbafc581", "sha256": "3573625c4e4951944cc03a8d1af25d21b40e86fdd374cc9d449303a68fa53fd7"}, "downloads": -1, "filename": "im_futuretest_webapp2-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "deee45a3555836e759214082dbafc581", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6439, "upload_time": "2018-02-26T03:55:25", "upload_time_iso_8601": "2018-02-26T03:55:25.450923Z", "url": "https://files.pythonhosted.org/packages/54/7f/69fab3c72aedd4ad2344b3f7b0855c050278bd52bdac9c018a3931423702/im_futuretest_webapp2-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d1da4261019a8eda690af46831a7e981", "sha256": "bd9d124af1d0e8272015bb9544ca81431016edf11b006f93e8e008b68cc952ca"}, "downloads": -1, "filename": "im_futuretest_webapp2-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d1da4261019a8eda690af46831a7e981", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3715, "upload_time": "2018-02-26T03:55:26", "upload_time_iso_8601": "2018-02-26T03:55:26.570481Z", "url": "https://files.pythonhosted.org/packages/0d/12/6d6e887a716f70c0e71b08ea1b3850b8769c5ba6dc61855aba7999f66c37/im_futuretest_webapp2-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "27c81d91fdb63c6d41fa009e49d873d0", "sha256": "7228fb92331cb151385b2453130bbc3adfd4717de882f51f8405c0c6349f7e2b"}, "downloads": -1, "filename": "im_futuretest_webapp2-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "27c81d91fdb63c6d41fa009e49d873d0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6567, "upload_time": "2018-02-26T12:14:01", "upload_time_iso_8601": "2018-02-26T12:14:01.438745Z", "url": "https://files.pythonhosted.org/packages/f0/6e/b17d4253fe5cd28e142cc130b561e1a23ecbf462b5ca90d635e55839b19c/im_futuretest_webapp2-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0dc88c8e1c92324057a367284c0f8ef3", "sha256": "5504465a47582b3cb96948b57ae6aece9fa83fefae14487a49cdb0b5d9f9af54"}, "downloads": -1, "filename": "im_futuretest_webapp2-0.1.1.tar.gz", "has_sig": false, "md5_digest": "0dc88c8e1c92324057a367284c0f8ef3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3905, "upload_time": "2018-02-26T12:14:02", "upload_time_iso_8601": "2018-02-26T12:14:02.137320Z", "url": "https://files.pythonhosted.org/packages/32/d9/ad3646c267797d8fba3b80d1cdcd8d33e721e4ba8f11625b8570de1b17b2/im_futuretest_webapp2-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "27c81d91fdb63c6d41fa009e49d873d0", "sha256": "7228fb92331cb151385b2453130bbc3adfd4717de882f51f8405c0c6349f7e2b"}, "downloads": -1, "filename": "im_futuretest_webapp2-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "27c81d91fdb63c6d41fa009e49d873d0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6567, "upload_time": "2018-02-26T12:14:01", "upload_time_iso_8601": "2018-02-26T12:14:01.438745Z", "url": "https://files.pythonhosted.org/packages/f0/6e/b17d4253fe5cd28e142cc130b561e1a23ecbf462b5ca90d635e55839b19c/im_futuretest_webapp2-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0dc88c8e1c92324057a367284c0f8ef3", "sha256": "5504465a47582b3cb96948b57ae6aece9fa83fefae14487a49cdb0b5d9f9af54"}, "downloads": -1, "filename": "im_futuretest_webapp2-0.1.1.tar.gz", "has_sig": false, "md5_digest": "0dc88c8e1c92324057a367284c0f8ef3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3905, "upload_time": "2018-02-26T12:14:02", "upload_time_iso_8601": "2018-02-26T12:14:02.137320Z", "url": "https://files.pythonhosted.org/packages/32/d9/ad3646c267797d8fba3b80d1cdcd8d33e721e4ba8f11625b8570de1b17b2/im_futuretest_webapp2-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:44 2020"}