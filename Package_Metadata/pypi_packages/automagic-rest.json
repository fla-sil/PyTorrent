{"info": {"author": "Timothy Allen", "author_email": "tallen@wharton.upenn.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "# Automagic REST\n\n[![pypi](https://img.shields.io/pypi/v/automagic-rest.svg)](https://pypi.python.org/pypi/automagic-rest/)\n\nAutomagic REST automatically builds a full Django app as a Django REST Framework read-only environment for a set of tables in a PostgreSQL database.\n\nThis is very much in heavy development, being extracted from a production system and genericized for open source release.\n\n## Installation\n\nTo get started, `pip install automagic-rest` and add `automagic_rest` to your `INSTALLED_APPS` setting in Django.\n\n## Configuration and Customization\n\nSetting up a secondary database in Django is recommended. For the following examples, we'll set up one called `my_pg_data` with the user `my_pg_user`:\n\n```python\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'pg_web_db',\n        'USER': 'web_user',\n        'PASSWORD': '',\n        'HOST': 'pg-web.domain.com',\n    },\n    'my_pg_data': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'pg_data_db',\n        'USER': 'my_pg_user',\n        'PASSWORD': '',\n        'HOST': 'pg-data.domain.com',\n    },\n}\n```\n\nBy default, Automagic REST will create a directory called `data_path` at the root of your Django project, where `manage.py` lives. The follow options can be passed to the command:\n\n* `--database` (default: `my_pg_data`): the name of the Django database as defined in the `DATABASES` setting.\n* `--owner` (default: `my_pg_user`): the name of the PostgreSQL user which owns the schemata to be processed. This will normally be the same as the `USER` in the `DATABASES` setting for the database above.\n* `--path` (default: `data_path`): the path to write the models and serializers to. This path will be completely deleted and rewritten whenever the command is run, so be careful!\n\nExample: `python manage.py build_data_models --database=my_data --owner=my_user --path=my_data_path`\n\nMethods are provided which can be overridden to customize the endpoint with your own Django management command.\n\n### class automagic_rest.management.commands.build_data_models.Command\n\n`get_db` (default: `my_pg_data`): the name of the PostgreSQL database in Django's settings that we will introspect to build the API.\n\n`get_owner` (default: `my_pg_user`): the name of the PostgreSQL user that owns the schemata we will introspect.\n\n`get_allowed_schemata` (default: `None`): if set, returns a list of schemata in the database to be built. If `None`, selects all schemata for the specific user.\n\n`get_root_python_path` (default: `data_path`): a Python path where you would like to write the models, serializers, and routes. **IMPORTANT**: this path will be wiped and re-written every time the build command is run. It should be a dedicated directory with nothing else in it.\n\n`get_view` (default: `automagic_rest.views.GenericViewSet`): the view to use.\n\n`get_router` (default: `rest_framework.routers.DefaultRouter`): the router to use.\n\n`get_max_digits_default` (default: 100): the number of `max_digits` to provide for `NUMERIC` field types that are not explicitly set in PostgreSQL.\n\n`get_decimal_places_default` (default: 25): the number of `decimal_places` to provide for `NUMERIC` field types that are not explicitly set in PostgreSQL.\n\n`sanitize_sql_identifier`: this method takes a string, and sanitizes it for injections into SQL, allowing only alphanumerics and underscores.\n\n`metadata_sql`: this method returns the SQL used to pull the metadata from PostgreSQL to build the endpoints.\n\nTo customize the build command, here is an example:\n\n```python\n# my_app/home/management/commands/my_build_data_models.py\nfrom automagic_rest.management.commands import build_data_models\n\n\nclass Command(build_data_models.Command):\n    \"\"\"\n    My specific overrides for DRF PG Builder command.\n    \"\"\"\n\n    def get_db(self, options):\n        \"\"\"\n        Returns our customized Django DB name.\n        \"\"\"\n        return \"my_data\"\n\n    def get_owner(self, options):\n        \"\"\"\n        Returns our customized schema owner.\n        \"\"\"\n        return \"my_user\"\n\n    def get_root_python_path(self, options):\n        \"\"\"\n        Returns our customized build path.\n        \"\"\"\n        return \"my_data_path\"\n\n    def get_view(self):\n        \"\"\"\n        Returns our customized view path.\n        \"\"\"\n        return \"my_app.views.MyDataViewSet\"\n\n    def get_allowed_schemata(self, options, cursor):\n        \"\"\"\n        Return a list of allowed schemata we want to create RESTful\n        endpoints for. If None, will create endpoints for all schemata\n        owned by the schema owner user.\n        \"\"\"\n        allowed_schemata = ['my_data', 'public_data']\n\n        return allowed_schemata\n```\n\n### class views.GenericViewSet\n\nThe view has several methods and attributes which can be overridden as well.\n\n#### Attributes\n\n`index_sql`: this attribute defines SQL to return the first column in each index for the current table for the Model. These will be used to dynamically make all indexed fields searchable and filterable.\n\n#### Methods\n\n`get_serializer_class_name` (default: `rest_framework.serializers.ModelSerializer`): the full path of the serializer class to use.\n\n`get_permission` (default: `None`): returns a permission class to use for the endpoint. When left at the default of `None`, uses the default permission class set by Django REST Framework.\n\n`get_estimate_count_limit` (default: `999_999`): to prevent long-running `SELECT COUNT(*)` queries, the view estimates the number of rows in the table by examing the query plan. If greater than this number, it will estimate pagination counts for vastly improved speed.\n\nTo follow on the example above, here is an example of an overridden view, which sets the permission type and includes a mixin for naming Excel file downloads:\n\n```python\nfrom rest_framework.permissions import IsAuthenticated\nfrom drf_renderer_xlsx.mixins import XLSXFileMixin\n\nclass MyGenericViewSet(XLSXFileMixin, GenericViewSet):\n    \"\"\"\n    \"\"\"\n    \"\"\"\n    Override the defaults from DRF PG Builder.\n    \"\"\"\n    filename = 'my_export.xlsx'\n\n    def get_permission(self):\n        return IsAuthenticated\n```\n\n### After the Files Are Built\n\nAfter running the build command, you should have a directory created that you defined as `path` (or overrode with `get_root_python_path()`) that contains models, serializers, and a `urls.py` file. Include the `urls.py` file with a route from your Django project, and you should be able to visit the Django REST Framework browsable API.\n\n## Release Notes\n\n### 0.2.4\n\n* Support for DRF version 3.11 (`base_name` must become `basename` in routes). Must use at least DRF version 3.9.\n\n### 0.2.3\n\n* Add support for `oid` field types in the field mapping. Last version to support DRF versions before 3.9.\n\n### 0.2.2\n\n* Ensure defaults for field type `NUMERIC` populate.\n\n### 0.2.1\n\n* Pull the reserved word list from Python dynamically.\n\n### 0.2.0\n\n* Refactored to use a generic serializer created on the fly. This is potentially a breaking change if you overrode the `get_serializer` method of the `build_data_models` command.\n    * This has been replaced by a view method called `get_serializer_class_name`.\n    * The serializer is now built on-the-fly rather than by the code generator.\n\n### 0.1.2\n\n* Add support for `DecimalField` with `max_digits` and `decimal_places` from `information_schema.columns` fields.\n\n### 0.1.1\n\n* Switched to naming models and serializers with a combination of `schema_name` and `table_name` to avoid model naming conflicts in Django if the same table exists across multiple schemata.\n\n### 0.1.0\n\n* Initial release.\n\n## Maintainer\n\n* [Timothy Allen](https://github.com/FlipperPA) at [The Wharton School](https://github.com/wharton)\n\nThis package is maintained by the staff of [Wharton Research Data Services](https://wrds.wharton.upenn.edu/). We are thrilled that [The Wharton School](https://www.wharton.upenn.edu/) allows us a certain amount of time to contribute to open-source projects. We add features as they are necessary for our projects, and try to keep up with Issues and Pull Requests as best we can. Due to constraints of time (our full time jobs!), Feature Requests without a Pull Request may not be implemented, but we are always open to new ideas and grateful for contributions and our package users.\n\n## Contributors (Thank You!)\n\n* [Andreu Vallbona Plazas](https://github.com/avallbona)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wharton/automagic-rest", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "automagic-rest", "package_url": "https://pypi.org/project/automagic-rest/", "platform": "", "project_url": "https://pypi.org/project/automagic-rest/", "project_urls": {"Homepage": "https://github.com/wharton/automagic-rest"}, "release_url": "https://pypi.org/project/automagic-rest/0.2.4/", "requires_dist": ["djangorestframework (>=3.9)", "djangorestframework-filters (==1.0.0.dev0)"], "requires_python": "", "summary": "Automagic REST: Django REST Framework PostgreSQL Builder", "version": "0.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Automagic REST</h1>\n<p><a href=\"https://pypi.python.org/pypi/automagic-rest/\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e3a067b1036384bc76120a0f68338a063b540d52/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6175746f6d616769632d726573742e737667\"></a></p>\n<p>Automagic REST automatically builds a full Django app as a Django REST Framework read-only environment for a set of tables in a PostgreSQL database.</p>\n<p>This is very much in heavy development, being extracted from a production system and genericized for open source release.</p>\n<h2>Installation</h2>\n<p>To get started, <code>pip install automagic-rest</code> and add <code>automagic_rest</code> to your <code>INSTALLED_APPS</code> setting in Django.</p>\n<h2>Configuration and Customization</h2>\n<p>Setting up a secondary database in Django is recommended. For the following examples, we'll set up one called <code>my_pg_data</code> with the user <code>my_pg_user</code>:</p>\n<pre><span class=\"n\">DATABASES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'default'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ENGINE'</span><span class=\"p\">:</span> <span class=\"s1\">'django.db.backends.postgresql'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'NAME'</span><span class=\"p\">:</span> <span class=\"s1\">'pg_web_db'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'USER'</span><span class=\"p\">:</span> <span class=\"s1\">'web_user'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'PASSWORD'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>\n        <span class=\"s1\">'HOST'</span><span class=\"p\">:</span> <span class=\"s1\">'pg-web.domain.com'</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'my_pg_data'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ENGINE'</span><span class=\"p\">:</span> <span class=\"s1\">'django.db.backends.postgresql'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'NAME'</span><span class=\"p\">:</span> <span class=\"s1\">'pg_data_db'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'USER'</span><span class=\"p\">:</span> <span class=\"s1\">'my_pg_user'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'PASSWORD'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>\n        <span class=\"s1\">'HOST'</span><span class=\"p\">:</span> <span class=\"s1\">'pg-data.domain.com'</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre>\n<p>By default, Automagic REST will create a directory called <code>data_path</code> at the root of your Django project, where <code>manage.py</code> lives. The follow options can be passed to the command:</p>\n<ul>\n<li><code>--database</code> (default: <code>my_pg_data</code>): the name of the Django database as defined in the <code>DATABASES</code> setting.</li>\n<li><code>--owner</code> (default: <code>my_pg_user</code>): the name of the PostgreSQL user which owns the schemata to be processed. This will normally be the same as the <code>USER</code> in the <code>DATABASES</code> setting for the database above.</li>\n<li><code>--path</code> (default: <code>data_path</code>): the path to write the models and serializers to. This path will be completely deleted and rewritten whenever the command is run, so be careful!</li>\n</ul>\n<p>Example: <code>python manage.py build_data_models --database=my_data --owner=my_user --path=my_data_path</code></p>\n<p>Methods are provided which can be overridden to customize the endpoint with your own Django management command.</p>\n<h3>class automagic_rest.management.commands.build_data_models.Command</h3>\n<p><code>get_db</code> (default: <code>my_pg_data</code>): the name of the PostgreSQL database in Django's settings that we will introspect to build the API.</p>\n<p><code>get_owner</code> (default: <code>my_pg_user</code>): the name of the PostgreSQL user that owns the schemata we will introspect.</p>\n<p><code>get_allowed_schemata</code> (default: <code>None</code>): if set, returns a list of schemata in the database to be built. If <code>None</code>, selects all schemata for the specific user.</p>\n<p><code>get_root_python_path</code> (default: <code>data_path</code>): a Python path where you would like to write the models, serializers, and routes. <strong>IMPORTANT</strong>: this path will be wiped and re-written every time the build command is run. It should be a dedicated directory with nothing else in it.</p>\n<p><code>get_view</code> (default: <code>automagic_rest.views.GenericViewSet</code>): the view to use.</p>\n<p><code>get_router</code> (default: <code>rest_framework.routers.DefaultRouter</code>): the router to use.</p>\n<p><code>get_max_digits_default</code> (default: 100): the number of <code>max_digits</code> to provide for <code>NUMERIC</code> field types that are not explicitly set in PostgreSQL.</p>\n<p><code>get_decimal_places_default</code> (default: 25): the number of <code>decimal_places</code> to provide for <code>NUMERIC</code> field types that are not explicitly set in PostgreSQL.</p>\n<p><code>sanitize_sql_identifier</code>: this method takes a string, and sanitizes it for injections into SQL, allowing only alphanumerics and underscores.</p>\n<p><code>metadata_sql</code>: this method returns the SQL used to pull the metadata from PostgreSQL to build the endpoints.</p>\n<p>To customize the build command, here is an example:</p>\n<pre><span class=\"c1\"># my_app/home/management/commands/my_build_data_models.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">automagic_rest.management.commands</span> <span class=\"kn\">import</span> <span class=\"n\">build_data_models</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Command</span><span class=\"p\">(</span><span class=\"n\">build_data_models</span><span class=\"o\">.</span><span class=\"n\">Command</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    My specific overrides for DRF PG Builder command.</span>\n<span class=\"sd\">    \"\"\"</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_db</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">        Returns our customized Django DB name.</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"k\">return</span> <span class=\"s2\">\"my_data\"</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_owner</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">        Returns our customized schema owner.</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"k\">return</span> <span class=\"s2\">\"my_user\"</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_root_python_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">        Returns our customized build path.</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"k\">return</span> <span class=\"s2\">\"my_data_path\"</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_view</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">        Returns our customized view path.</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"k\">return</span> <span class=\"s2\">\"my_app.views.MyDataViewSet\"</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_allowed_schemata</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"p\">,</span> <span class=\"n\">cursor</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">        Return a list of allowed schemata we want to create RESTful</span>\n<span class=\"sd\">        endpoints for. If None, will create endpoints for all schemata</span>\n<span class=\"sd\">        owned by the schema owner user.</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"n\">allowed_schemata</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'my_data'</span><span class=\"p\">,</span> <span class=\"s1\">'public_data'</span><span class=\"p\">]</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">allowed_schemata</span>\n</pre>\n<h3>class views.GenericViewSet</h3>\n<p>The view has several methods and attributes which can be overridden as well.</p>\n<h4>Attributes</h4>\n<p><code>index_sql</code>: this attribute defines SQL to return the first column in each index for the current table for the Model. These will be used to dynamically make all indexed fields searchable and filterable.</p>\n<h4>Methods</h4>\n<p><code>get_serializer_class_name</code> (default: <code>rest_framework.serializers.ModelSerializer</code>): the full path of the serializer class to use.</p>\n<p><code>get_permission</code> (default: <code>None</code>): returns a permission class to use for the endpoint. When left at the default of <code>None</code>, uses the default permission class set by Django REST Framework.</p>\n<p><code>get_estimate_count_limit</code> (default: <code>999_999</code>): to prevent long-running <code>SELECT COUNT(*)</code> queries, the view estimates the number of rows in the table by examing the query plan. If greater than this number, it will estimate pagination counts for vastly improved speed.</p>\n<p>To follow on the example above, here is an example of an overridden view, which sets the permission type and includes a mixin for naming Excel file downloads:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rest_framework.permissions</span> <span class=\"kn\">import</span> <span class=\"n\">IsAuthenticated</span>\n<span class=\"kn\">from</span> <span class=\"nn\">drf_renderer_xlsx.mixins</span> <span class=\"kn\">import</span> <span class=\"n\">XLSXFileMixin</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyGenericViewSet</span><span class=\"p\">(</span><span class=\"n\">XLSXFileMixin</span><span class=\"p\">,</span> <span class=\"n\">GenericViewSet</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Override the defaults from DRF PG Builder.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"s1\">'my_export.xlsx'</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_permission</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">IsAuthenticated</span>\n</pre>\n<h3>After the Files Are Built</h3>\n<p>After running the build command, you should have a directory created that you defined as <code>path</code> (or overrode with <code>get_root_python_path()</code>) that contains models, serializers, and a <code>urls.py</code> file. Include the <code>urls.py</code> file with a route from your Django project, and you should be able to visit the Django REST Framework browsable API.</p>\n<h2>Release Notes</h2>\n<h3>0.2.4</h3>\n<ul>\n<li>Support for DRF version 3.11 (<code>base_name</code> must become <code>basename</code> in routes). Must use at least DRF version 3.9.</li>\n</ul>\n<h3>0.2.3</h3>\n<ul>\n<li>Add support for <code>oid</code> field types in the field mapping. Last version to support DRF versions before 3.9.</li>\n</ul>\n<h3>0.2.2</h3>\n<ul>\n<li>Ensure defaults for field type <code>NUMERIC</code> populate.</li>\n</ul>\n<h3>0.2.1</h3>\n<ul>\n<li>Pull the reserved word list from Python dynamically.</li>\n</ul>\n<h3>0.2.0</h3>\n<ul>\n<li>Refactored to use a generic serializer created on the fly. This is potentially a breaking change if you overrode the <code>get_serializer</code> method of the <code>build_data_models</code> command.\n<ul>\n<li>This has been replaced by a view method called <code>get_serializer_class_name</code>.</li>\n<li>The serializer is now built on-the-fly rather than by the code generator.</li>\n</ul>\n</li>\n</ul>\n<h3>0.1.2</h3>\n<ul>\n<li>Add support for <code>DecimalField</code> with <code>max_digits</code> and <code>decimal_places</code> from <code>information_schema.columns</code> fields.</li>\n</ul>\n<h3>0.1.1</h3>\n<ul>\n<li>Switched to naming models and serializers with a combination of <code>schema_name</code> and <code>table_name</code> to avoid model naming conflicts in Django if the same table exists across multiple schemata.</li>\n</ul>\n<h3>0.1.0</h3>\n<ul>\n<li>Initial release.</li>\n</ul>\n<h2>Maintainer</h2>\n<ul>\n<li><a href=\"https://github.com/FlipperPA\" rel=\"nofollow\">Timothy Allen</a> at <a href=\"https://github.com/wharton\" rel=\"nofollow\">The Wharton School</a></li>\n</ul>\n<p>This package is maintained by the staff of <a href=\"https://wrds.wharton.upenn.edu/\" rel=\"nofollow\">Wharton Research Data Services</a>. We are thrilled that <a href=\"https://www.wharton.upenn.edu/\" rel=\"nofollow\">The Wharton School</a> allows us a certain amount of time to contribute to open-source projects. We add features as they are necessary for our projects, and try to keep up with Issues and Pull Requests as best we can. Due to constraints of time (our full time jobs!), Feature Requests without a Pull Request may not be implemented, but we are always open to new ideas and grateful for contributions and our package users.</p>\n<h2>Contributors (Thank You!)</h2>\n<ul>\n<li><a href=\"https://github.com/avallbona\" rel=\"nofollow\">Andreu Vallbona Plazas</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6294828, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e3aaeb18a6c50ec704ea3f7c52ac988e", "sha256": "f2d18fb018cd8d6d96f645e61b49856e11c9285b2caa7dbbbb66ee104fbd2e8a"}, "downloads": -1, "filename": "automagic_rest-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e3aaeb18a6c50ec704ea3f7c52ac988e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12363, "upload_time": "2019-04-09T20:08:34", "upload_time_iso_8601": "2019-04-09T20:08:34.967590Z", "url": "https://files.pythonhosted.org/packages/a7/ab/359fd1b260d4791ee0d6c138ce8e801e28d8725bf3dafa13ebbdb79119cb/automagic_rest-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "104caca3120efffa9b52a5ea621eddc2", "sha256": "ef3bcd083c740d1dc44e244bf2b37c90348950ba5d4806593fa3fc2b709505d7"}, "downloads": -1, "filename": "automagic-rest-0.1.0.tar.gz", "has_sig": false, "md5_digest": "104caca3120efffa9b52a5ea621eddc2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10377, "upload_time": "2019-04-09T20:08:36", "upload_time_iso_8601": "2019-04-09T20:08:36.299946Z", "url": "https://files.pythonhosted.org/packages/28/04/ea7347b7e6cf2765e2e0ba57493c9cb0e80de519ba1a54f1986879092853/automagic-rest-0.1.0.tar.gz", "yanked": false}], "0.1.0.dev0": [{"comment_text": "", "digests": {"md5": "7b00d897d5831ef3660d16c8fa210e62", "sha256": "c204564ae1e3fdc2a2425be8f08c031e561a88dce8e1bb9d7e9ff8782216bc45"}, "downloads": -1, "filename": "automagic_rest-0.1.0.dev0-py3-none-any.whl", "has_sig": false, "md5_digest": "7b00d897d5831ef3660d16c8fa210e62", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4889, "upload_time": "2019-04-08T14:16:01", "upload_time_iso_8601": "2019-04-08T14:16:01.090428Z", "url": "https://files.pythonhosted.org/packages/81/54/cd1b27d08c2a15cb5307df8885e81074edc718c0ce61d4797eac6ee9aa04/automagic_rest-0.1.0.dev0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d1ea7ccc852b87ac2fd230984663fc49", "sha256": "ab519c04a1191fdaa9baa8bd583a0ef7f868d213d6354617a19fc65f9e1f2668"}, "downloads": -1, "filename": "automagic-rest-0.1.0.dev0.tar.gz", "has_sig": false, "md5_digest": "d1ea7ccc852b87ac2fd230984663fc49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3646, "upload_time": "2019-04-08T14:16:03", "upload_time_iso_8601": "2019-04-08T14:16:03.641415Z", "url": "https://files.pythonhosted.org/packages/fe/dd/0ecee9314957666e451b0db85934658c9c851bbc1df62e6e0ac95e424a6d/automagic-rest-0.1.0.dev0.tar.gz", "yanked": false}], "0.1.0.dev1": [{"comment_text": "", "digests": {"md5": "c44b85159f6487a4dd791b08106adb9d", "sha256": "3d3958b8fcd344be31da23dcab3b848948b2392de2bf3ca5f95e3f74d9750470"}, "downloads": -1, "filename": "automagic_rest-0.1.0.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "c44b85159f6487a4dd791b08106adb9d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8896, "upload_time": "2019-04-08T14:22:57", "upload_time_iso_8601": "2019-04-08T14:22:57.962487Z", "url": "https://files.pythonhosted.org/packages/c1/bb/505b5f73d97e799e784468f75245b4bd7480ff69a0c1875632b2576243b4/automagic_rest-0.1.0.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab86e262dc2f61b51de17d389e4cd2fc", "sha256": "6e384d400ecbfb2c45b66d5261c42566892ebe6b52af7c19d65983312cd44d1d"}, "downloads": -1, "filename": "automagic-rest-0.1.0.dev1.tar.gz", "has_sig": false, "md5_digest": "ab86e262dc2f61b51de17d389e4cd2fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7021, "upload_time": "2019-04-08T14:22:58", "upload_time_iso_8601": "2019-04-08T14:22:58.873141Z", "url": "https://files.pythonhosted.org/packages/c6/6c/181eeb6089dd4b9473334c1e8f487cbe6fa428a2b1c462f017e9f72db907/automagic-rest-0.1.0.dev1.tar.gz", "yanked": false}], "0.1.0.dev2": [{"comment_text": "", "digests": {"md5": "65f1ac56c8e88a0171e59498043b3f78", "sha256": "13aea0b0d6ded743b90bb61ff7b8bb57851a94426c1c7859fda46779dc153c2c"}, "downloads": -1, "filename": "automagic_rest-0.1.0.dev2-py3-none-any.whl", "has_sig": false, "md5_digest": "65f1ac56c8e88a0171e59498043b3f78", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10049, "upload_time": "2019-04-08T20:33:57", "upload_time_iso_8601": "2019-04-08T20:33:57.611004Z", "url": "https://files.pythonhosted.org/packages/9f/47/76845d031e8494608e6bdf80d5a633155fe9c30120970083477e5b32d2e8/automagic_rest-0.1.0.dev2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c590cd8dddd915c1943a61315257ed2", "sha256": "564864b341f6333b7fad64eb2bfebe08b904d4c1777d7041f1be92d659650f1b"}, "downloads": -1, "filename": "automagic-rest-0.1.0.dev2.tar.gz", "has_sig": false, "md5_digest": "6c590cd8dddd915c1943a61315257ed2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9170, "upload_time": "2019-04-08T20:33:58", "upload_time_iso_8601": "2019-04-08T20:33:58.954735Z", "url": "https://files.pythonhosted.org/packages/8b/fb/266d0bd3f447ff36f99d62563a74532654bea57adc28068cc9902c809d88/automagic-rest-0.1.0.dev2.tar.gz", "yanked": false}], "0.1.0.dev3": [{"comment_text": "", "digests": {"md5": "294a745716f5670a8acbe1b9304d2f56", "sha256": "fb1b6ed9dcb1f206c71328477881a1b33e8129770744a1fd024dc2300d6917c4"}, "downloads": -1, "filename": "automagic_rest-0.1.0.dev3-py3-none-any.whl", "has_sig": false, "md5_digest": "294a745716f5670a8acbe1b9304d2f56", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12335, "upload_time": "2019-04-09T19:30:59", "upload_time_iso_8601": "2019-04-09T19:30:59.499610Z", "url": "https://files.pythonhosted.org/packages/9c/3a/d023ab1c5c8f48e897c69a4dfdca1e0bd5faa19bb9db3302fe4b8cd1f276/automagic_rest-0.1.0.dev3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4ae34b6c38493108726b03f53f6114e", "sha256": "4cb10e4449773c145bebe3e8eac57e5ae4e5921cacc2b82df0b588c54cbac593"}, "downloads": -1, "filename": "automagic-rest-0.1.0.dev3.tar.gz", "has_sig": false, "md5_digest": "a4ae34b6c38493108726b03f53f6114e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10281, "upload_time": "2019-04-09T19:31:00", "upload_time_iso_8601": "2019-04-09T19:31:00.920201Z", "url": "https://files.pythonhosted.org/packages/30/c1/8bcb2185415662cc804cf8fb2be8f9b72bae73964db10aeb47dd67cd6be0/automagic-rest-0.1.0.dev3.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ece0c72b0fe540b1196910f583aab161", "sha256": "5d573c492c4074209611e8600e17f02fb8538f5bdbe81c6ad58c6874f9b14105"}, "downloads": -1, "filename": "automagic_rest-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ece0c72b0fe540b1196910f583aab161", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12317, "upload_time": "2019-04-15T17:17:43", "upload_time_iso_8601": "2019-04-15T17:17:43.649706Z", "url": "https://files.pythonhosted.org/packages/9a/30/ed4cc54262ebdb469907751b4f078cd7cc2cdc366e83d9b242b5bde84809/automagic_rest-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff1541ac4af996de2ea7b27cfceec5f3", "sha256": "3d6887b09a33117c8dea7cbec72af9738e222d83cc631207064d1f90e484a077"}, "downloads": -1, "filename": "automagic-rest-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ff1541ac4af996de2ea7b27cfceec5f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10333, "upload_time": "2019-04-15T17:17:44", "upload_time_iso_8601": "2019-04-15T17:17:44.890439Z", "url": "https://files.pythonhosted.org/packages/72/c5/cc35c601c1300e0cc85e7d62b582414e91f1feb3a21dd09d01917ac9472e/automagic-rest-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "055337f282e7a28e3818f6745eff1810", "sha256": "a04b1f5b4e8fed9b19b44fafc5f2160111b897da98c7aa94458e3c41ee1c6dc5"}, "downloads": -1, "filename": "automagic_rest-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "055337f282e7a28e3818f6745eff1810", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12599, "upload_time": "2019-04-17T18:31:43", "upload_time_iso_8601": "2019-04-17T18:31:43.106112Z", "url": "https://files.pythonhosted.org/packages/e7/d0/21f17be7d2281250da9da371f85e372a42971d7be73ddfb23fd397d0f997/automagic_rest-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e5d56202c61578b831fe5b7879930e0c", "sha256": "c92cd20e2baa5061a55cddc283d3e97ab0e4c2e1ed2395bc37494a0a6db76526"}, "downloads": -1, "filename": "automagic-rest-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e5d56202c61578b831fe5b7879930e0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10619, "upload_time": "2019-04-17T18:31:44", "upload_time_iso_8601": "2019-04-17T18:31:44.421894Z", "url": "https://files.pythonhosted.org/packages/c2/e9/d8c33542fdef55c133fefc0d6fb90cc3fe65bc9492469409f59f0c23ecb6/automagic-rest-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "8c232accbb62c5dc3f278316470aece3", "sha256": "10da665823a108a617ee502e14f8ef883639ca6c7625bbed2bd7be037bd44d70"}, "downloads": -1, "filename": "automagic_rest-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8c232accbb62c5dc3f278316470aece3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12824, "upload_time": "2019-04-30T18:20:52", "upload_time_iso_8601": "2019-04-30T18:20:52.977469Z", "url": "https://files.pythonhosted.org/packages/9a/9d/0c566c196ca01d56a0b5eff40c773b7e80e5781135a79f38e45d802f21fb/automagic_rest-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17748f96997509bd2cbccae3b5fe11a4", "sha256": "fa2c8735dbac8cccb66d13f1bf82f3ce43c304c29b32fc362dc2c8a421f13a7d"}, "downloads": -1, "filename": "automagic-rest-0.2.0.tar.gz", "has_sig": false, "md5_digest": "17748f96997509bd2cbccae3b5fe11a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10661, "upload_time": "2019-04-30T18:20:56", "upload_time_iso_8601": "2019-04-30T18:20:56.178780Z", "url": "https://files.pythonhosted.org/packages/fd/44/018ada4cac9bc5f81ae1b6561525eee6925e815967b345a1bccc2296d057/automagic-rest-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "99866ae4d1899d88e252e0d1be20454a", "sha256": "c13c4260f9db4f63b6d53f0da39b6218c5033ed64c5fe0ea6c16e2f172f20bfe"}, "downloads": -1, "filename": "automagic_rest-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "99866ae4d1899d88e252e0d1be20454a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12784, "upload_time": "2019-05-15T18:12:41", "upload_time_iso_8601": "2019-05-15T18:12:41.885050Z", "url": "https://files.pythonhosted.org/packages/99/49/a7fd1fb10c9cec25ae58733a71f0e421f192b4ee0a2e598ac53a402b0e83/automagic_rest-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2252dfd61224177e072cb7a19d23898f", "sha256": "b088d5c8f76431752bfe77b5750637b2135a134f994bdfcbbbe48ed838b17593"}, "downloads": -1, "filename": "automagic-rest-0.2.1.tar.gz", "has_sig": false, "md5_digest": "2252dfd61224177e072cb7a19d23898f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10608, "upload_time": "2019-05-15T18:12:42", "upload_time_iso_8601": "2019-05-15T18:12:42.980783Z", "url": "https://files.pythonhosted.org/packages/b6/de/600882311823070157fb8de17a791ec8f4b1e495218e75f76d1ccdf604be/automagic-rest-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "45a5a8e5fefa8a1a05e5d05f49f14007", "sha256": "661e3551bd1fe7c8947fc0db45071129596917ad1ed95807c3f6a9609cd84da8"}, "downloads": -1, "filename": "automagic_rest-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "45a5a8e5fefa8a1a05e5d05f49f14007", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12992, "upload_time": "2019-07-02T17:48:55", "upload_time_iso_8601": "2019-07-02T17:48:55.224188Z", "url": "https://files.pythonhosted.org/packages/a1/63/f072d443fcd9689e864302d0f576e1e4ec1c99cb235bd66b5608090530b6/automagic_rest-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef3232972755b278d1f824b30117f1e1", "sha256": "724692887bb54b6431f1dc36c918a11d0535a0eada3de46c65901eff26b89bd6"}, "downloads": -1, "filename": "automagic-rest-0.2.2.tar.gz", "has_sig": false, "md5_digest": "ef3232972755b278d1f824b30117f1e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10841, "upload_time": "2019-07-02T17:48:56", "upload_time_iso_8601": "2019-07-02T17:48:56.398689Z", "url": "https://files.pythonhosted.org/packages/99/bc/8f1939b1562ca4740d16c55e57bc45a212b4c078a36e9d692823fbaf2d8f/automagic-rest-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "1f5569d2518cdccdab0360631291df9e", "sha256": "f7c039654ff259271c9cd7863f210915780e9eb250af22ca029b703be0b4e7a8"}, "downloads": -1, "filename": "automagic_rest-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "1f5569d2518cdccdab0360631291df9e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14005, "upload_time": "2019-09-19T16:30:10", "upload_time_iso_8601": "2019-09-19T16:30:10.956868Z", "url": "https://files.pythonhosted.org/packages/99/a0/7240b596d010f03acc63de5eaf19ccf5b8f5ce34b07354d0d80f5f58e178/automagic_rest-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "719fad1e4bc5b6560024c2a54834f9d6", "sha256": "009a60d13d0e5e405afdfcec7324b871f74191fd4fdded5942d2506d5f84ac54"}, "downloads": -1, "filename": "automagic-rest-0.2.3.tar.gz", "has_sig": false, "md5_digest": "719fad1e4bc5b6560024c2a54834f9d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10858, "upload_time": "2019-09-19T16:30:12", "upload_time_iso_8601": "2019-09-19T16:30:12.339908Z", "url": "https://files.pythonhosted.org/packages/fb/4d/dd3088baf89a9984666530f51679c2c33137169b020317477de4e0b55a72/automagic-rest-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "9b3bdc7970ef0e7e65413b5ab15eb13a", "sha256": "3eacdc70d7a470a410044d985d95eb6a7fb19d089b0321995b56f8f5d63212db"}, "downloads": -1, "filename": "automagic_rest-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "9b3bdc7970ef0e7e65413b5ab15eb13a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14108, "upload_time": "2019-12-13T19:12:43", "upload_time_iso_8601": "2019-12-13T19:12:43.956700Z", "url": "https://files.pythonhosted.org/packages/f6/7a/ad6b04e3d1b2909ca2fa5f9edd4a71a0c465cccb256ed9326da75b83e9fc/automagic_rest-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "27e091c4505d5ee047c48ddfa86172a2", "sha256": "746fbe76f2d534992760ad963c098d7d790e4321d281032ec66c0d97e9cf4ba8"}, "downloads": -1, "filename": "automagic-rest-0.2.4.tar.gz", "has_sig": false, "md5_digest": "27e091c4505d5ee047c48ddfa86172a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12725, "upload_time": "2019-12-13T19:12:45", "upload_time_iso_8601": "2019-12-13T19:12:45.574010Z", "url": "https://files.pythonhosted.org/packages/78/8d/f98baf906322f6893c560811a5a1d8fc9115614ed78d1181fbc43cf3b08f/automagic-rest-0.2.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9b3bdc7970ef0e7e65413b5ab15eb13a", "sha256": "3eacdc70d7a470a410044d985d95eb6a7fb19d089b0321995b56f8f5d63212db"}, "downloads": -1, "filename": "automagic_rest-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "9b3bdc7970ef0e7e65413b5ab15eb13a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14108, "upload_time": "2019-12-13T19:12:43", "upload_time_iso_8601": "2019-12-13T19:12:43.956700Z", "url": "https://files.pythonhosted.org/packages/f6/7a/ad6b04e3d1b2909ca2fa5f9edd4a71a0c465cccb256ed9326da75b83e9fc/automagic_rest-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "27e091c4505d5ee047c48ddfa86172a2", "sha256": "746fbe76f2d534992760ad963c098d7d790e4321d281032ec66c0d97e9cf4ba8"}, "downloads": -1, "filename": "automagic-rest-0.2.4.tar.gz", "has_sig": false, "md5_digest": "27e091c4505d5ee047c48ddfa86172a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12725, "upload_time": "2019-12-13T19:12:45", "upload_time_iso_8601": "2019-12-13T19:12:45.574010Z", "url": "https://files.pythonhosted.org/packages/78/8d/f98baf906322f6893c560811a5a1d8fc9115614ed78d1181fbc43cf3b08f/automagic-rest-0.2.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:15 2020"}