{"info": {"author": "Lari Rasku", "author_email": "raskug@lavabit.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Topic :: Utilities"], "description": "WARNING: The `upcoming 0.7.0 release of docopts\r\n<https://github.com/docopt/docopts/tree/develop>`_ will feature a completely\r\ndifferent user interface.  Prepare for script breakage.\r\n\r\n================================================================================\r\n docopts\r\n================================================================================\r\n--------------------------------------------------------------------------------\r\n shell interface for docopt, the CLI description language\r\n--------------------------------------------------------------------------------\r\n:Author:        `Lari Rasku <rasku@lavabit.com>`_\r\n:Date:           2013-02-07\r\n:Copyright:     `MIT <http://opensource.org/licenses/MIT>`_\r\n:Version:        0.6.1+fix\r\n:Manual section: 1\r\n\r\nSYNOPSIS\r\n================================================================================\r\n``docopts`` [*options*] ``-h`` *msg* : [*argv*...]\r\n\r\nDESCRIPTION\r\n================================================================================\r\n``docopts`` parses the command line argument vector *argv* according to the\r\n`docopt <http://docopt.org>`_ string *msg* and echoes the results to standard\r\noutput as a snippet of Bash source code.  Passing this snippet as an argument to\r\n`eval(1) <http://man.cx/eval(1)>`_ is sufficient for handling the CLI needs of\r\nmost scripts.\r\n\r\nIf *argv* matches one of the usage patterns defined in *msg*, ``docopts``\r\ngenerates code for storing the parsed arguments as Bash variables.  As most\r\ncommand line argument names are not valid Bash identifiers, some name mangling\r\nwill take place:\r\n\r\n* ``<Angle_Brackets>``: ``Angle_Brackets``\r\n* ``UPPER-CASE``: ``UPPER_CASE``\r\n* ``--Long-Option``: ``Long_Option``\r\n* ``-S``: ``S``\r\n\r\nIf one of the argument names cannot be mangled into a valid Bash identifier,\r\nor two argument names map to the same variable name, ``docopt`` will exit with\r\nan error, and you should really rethink your CLI.  The ``--`` and ``-``\r\ncommands will not be stored.\r\n\r\nAlternatively, ``docopts`` can be invoked with the ``-A <name>`` option, which\r\nstores the parsed arguments as fields of a Bash 4 associative array called\r\n``<name>`` instead.  However, as Bash does not natively support nested arrays,\r\nthey are faked for repeatable arguments with the following access syntax::\r\n\r\n    ${args[ARG,#]} # the number of arguments to ARG\r\n    ${args[ARG,0]} # the first argument to ARG\r\n    ${args[ARG,1]} # the second argument to ARG, etc.\r\n\r\nThe arguments are stored as follows:\r\n\r\n* Non-repeatable, valueless arguments: ``true`` if found, ``false`` if not\r\n* Repeatable valueless arguments: the count of their instances in *argv*\r\n* Non-repeatable arguments with values: the value as a string if found,\r\n  the empty string if not\r\n* Repeatable arguments with values: a Bash array of the parsed values\r\n\r\nUnless the ``--no-help`` option is given, ``docopts`` handles the ``--help``\r\nand ``--version`` options and their possible aliases specially,\r\ngenerating code for printing the relevant message to standard output and\r\nterminating successfully if either option is encountered when parsing *argv*.\r\nNote however that this also requires listing the relevant option in\r\n*msg* and, in ``--version``'s case, invoking ``docopts`` with the ``--version``\r\noption.\r\n\r\nIf *argv* does not match any usage pattern in *msg*, ``docopts`` will generate\r\ncode for exiting the program with status 64 (``EX_USAGE`` in\r\n`sysexits(3) <http://man.cx/sysexits(3)>`_) and printing a diagnostic error\r\nmessage.\r\n\r\nOPTIONS\r\n================================================================================\r\n  -h <msg>, --help=<msg>        The help message in docopt format.\r\n                                If - is given, read the help message from\r\n                                standard input.\r\n                                If no argument is given, print docopts's own\r\n                                help message and quit.\r\n  -V <msg>, --version=<msg>     A version message.\r\n                                If - is given, read the version message from\r\n                                standard input.  If the help message is also\r\n                                read from standard input, read it first.\r\n                                If no argument is given, print docopts's own\r\n                                version message and quit.\r\n  -O, --options-first           Disallow interspersing options and positional\r\n                                arguments: all arguments starting from the\r\n                                first one that does not begin with a dash will\r\n                                be treated as positional arguments.\r\n  -H, --no-help                 Don't handle --help and --version specially.\r\n  -A <name>                     Export the arguments as a Bash 4.x associative\r\n                                array called <name>.\r\n  -s <str>, --separator=<str>   The string to use to separate the help message\r\n                                from the version message when both are given\r\n                                via standard input. [default: ----]\r\n\r\nEXAMPLES\r\n================================================================================\r\nRead the help and version messages from standard input::\r\n\r\n    eval \"$(docopts -V - -h - : \"$@\" <<EOF\r\n    Usage: rock [options] <argv>...\r\n    \r\n          --verbose  Generate verbose messages.\r\n          --help     Show help options.\r\n          --version  Print program version.\r\n    ----\r\n    rock 0.1.0\r\n    Copyright (C) 200X Thomas Light\r\n    License RIT (Robot Institute of Technology)\r\n    This is free software: you are free to change and redistribute it.\r\n    There is NO WARRANTY, to the extent permitted by law.\r\n    EOF\r\n    )\"\r\n    \r\n    if $verbose ; then\r\n        echo \"Hello, world!\"\r\n    fi\r\n\r\nParse the help and version messages from script comments and pass them as\r\ncommand line arguments::\r\n\r\n    #? rock 0.1.0\r\n    #? Copyright (C) 200X Thomas Light\r\n    #? License RIT (Robot Institute of Technology)\r\n    #? This is free software: you are free to change and redistribute it.\r\n    #? There is NO WARRANTY, to the extent permitted by law.\r\n    \r\n    ##? Usage: rock [options] <argv>...\r\n    ##?\r\n    ##?       --help     Show help options.\r\n    ##?       --version  Print program version.\r\n    \r\n    help=$(grep \"^##?\" \"$0\" | cut -c 5-)\r\n    version=$(grep \"^#?\"  \"$0\" | cut -c 4-)\r\n    eval \"$(docopts -h \"$help\" -V \"$version\" : \"$@\")\"\r\n    \r\n    for arg in \"${argv[@]}\"; do\r\n        echo \"$arg\"\r\n    done\r\n\r\nUsing the associative array::\r\n\r\n    eval \"$(docopts -A args -h \"$help\" : \"$@\")\"\r\n    \r\n    if ${args[subcommand]} ; then\r\n        echo \"subcommand was given\"\r\n    fi\r\n    \r\n    if [ -n \"${args[--long-option-with-argument]}\" ] ; then\r\n        echo \"${args[--long-option-with-argument]}\"\r\n    else\r\n        echo \"--long-option-with-argument was not given\"\r\n    fi\r\n    \r\n    i=0\r\n    while [[ $i -lt ${args[<argument-with-multiple-values>,#]} ]] ; do\r\n        echo \"${args[<argument-with-multiple-values>,$i]}\"\r\n        i=$[$i+1]\r\n    done\r\n\r\nVERSIONING\r\n================================================================================\r\nThe ``docopts`` version number always matches that of the\r\n`docopt Python reference implementation <https://github.com/docopt/docopt>`_\r\nversion against which it was built.  As ``docopt`` follows\r\n`semantic versioning <http://semver.org>`_, ``docopts`` should work with any\r\n``docopt`` release it shares the major version number with; however, as both\r\n``docopts`` and ``docopt`` are in major version number 0 at the moment of\r\nwriting this, ``docopts`` can only be relied to work with an installation of\r\n``docopt`` with the exact same version number.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/docopt/docopts", "keywords": "shell bash docopt command-line", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "docopts", "package_url": "https://pypi.org/project/docopts/", "platform": "OS Independent", "project_url": "https://pypi.org/project/docopts/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/docopt/docopts"}, "release_url": "https://pypi.org/project/docopts/0.6.1-fix2/", "requires_dist": null, "requires_python": null, "summary": "Shell interface for docopt, the command-line interface description language.", "version": "0.6.1-fix2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>WARNING: The <a href=\"https://github.com/docopt/docopts/tree/develop\" rel=\"nofollow\">upcoming 0.7.0 release of docopts</a> will feature a completely\ndifferent user interface.  Prepare for script breakage.</p>\n<div id=\"docopts\">\n<h2>docopts</h2>\n<h2 id=\"shell-interface-for-docopt-the-cli-description-language\"><span class=\"section-subtitle\">shell interface for docopt, the CLI description language</span></h2>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Author:</th><td><a href=\"mailto:rasku%40lavabit.com\">Lari Rasku</a></td>\n</tr>\n<tr><th>Date:</th><td>2013-02-07</td>\n</tr>\n<tr><th>Copyright:</th><td><a href=\"http://opensource.org/licenses/MIT\" rel=\"nofollow\">MIT</a></td>\n</tr>\n<tr><th>Version:</th><td>0.6.1+fix</td>\n</tr>\n<tr><th>Manual section:</th><td>1</td>\n</tr>\n</tbody>\n</table>\n<div id=\"synopsis\">\n<h3>SYNOPSIS</h3>\n<p><tt>docopts</tt> [<em>options</em>] <tt><span class=\"pre\">-h</span></tt> <em>msg</em> : [<em>argv</em>\u2026]</p>\n</div>\n<div id=\"description\">\n<h3>DESCRIPTION</h3>\n<p><tt>docopts</tt> parses the command line argument vector <em>argv</em> according to the\n<a href=\"http://docopt.org\" rel=\"nofollow\">docopt</a> string <em>msg</em> and echoes the results to standard\noutput as a snippet of Bash source code.  Passing this snippet as an argument to\n<a href=\"http://man.cx/eval(1)\" rel=\"nofollow\">eval(1)</a> is sufficient for handling the CLI needs of\nmost scripts.</p>\n<p>If <em>argv</em> matches one of the usage patterns defined in <em>msg</em>, <tt>docopts</tt>\ngenerates code for storing the parsed arguments as Bash variables.  As most\ncommand line argument names are not valid Bash identifiers, some name mangling\nwill take place:</p>\n<ul>\n<li><tt>&lt;Angle_Brackets&gt;</tt>: <tt>Angle_Brackets</tt></li>\n<li><tt><span class=\"pre\">UPPER-CASE</span></tt>: <tt>UPPER_CASE</tt></li>\n<li><tt><span class=\"pre\">--Long-Option</span></tt>: <tt>Long_Option</tt></li>\n<li><tt><span class=\"pre\">-S</span></tt>: <tt>S</tt></li>\n</ul>\n<p>If one of the argument names cannot be mangled into a valid Bash identifier,\nor two argument names map to the same variable name, <tt>docopt</tt> will exit with\nan error, and you should really rethink your CLI.  The <tt><span class=\"pre\">--</span></tt> and <tt>-</tt>\ncommands will not be stored.</p>\n<p>Alternatively, <tt>docopts</tt> can be invoked with the <tt><span class=\"pre\">-A</span> &lt;name&gt;</tt> option, which\nstores the parsed arguments as fields of a Bash 4 associative array called\n<tt>&lt;name&gt;</tt> instead.  However, as Bash does not natively support nested arrays,\nthey are faked for repeatable arguments with the following access syntax:</p>\n<pre>${args[ARG,#]} # the number of arguments to ARG\n${args[ARG,0]} # the first argument to ARG\n${args[ARG,1]} # the second argument to ARG, etc.\n</pre>\n<p>The arguments are stored as follows:</p>\n<ul>\n<li>Non-repeatable, valueless arguments: <tt>true</tt> if found, <tt>false</tt> if not</li>\n<li>Repeatable valueless arguments: the count of their instances in <em>argv</em></li>\n<li>Non-repeatable arguments with values: the value as a string if found,\nthe empty string if not</li>\n<li>Repeatable arguments with values: a Bash array of the parsed values</li>\n</ul>\n<p>Unless the <tt><span class=\"pre\">--no-help</span></tt> option is given, <tt>docopts</tt> handles the <tt><span class=\"pre\">--help</span></tt>\nand <tt><span class=\"pre\">--version</span></tt> options and their possible aliases specially,\ngenerating code for printing the relevant message to standard output and\nterminating successfully if either option is encountered when parsing <em>argv</em>.\nNote however that this also requires listing the relevant option in\n<em>msg</em> and, in <tt><span class=\"pre\">--version</span></tt>\u2019s case, invoking <tt>docopts</tt> with the <tt><span class=\"pre\">--version</span></tt>\noption.</p>\n<p>If <em>argv</em> does not match any usage pattern in <em>msg</em>, <tt>docopts</tt> will generate\ncode for exiting the program with status 64 (<tt>EX_USAGE</tt> in\n<a href=\"http://man.cx/sysexits(3)\" rel=\"nofollow\">sysexits(3)</a>) and printing a diagnostic error\nmessage.</p>\n</div>\n<div id=\"options\">\n<h3>OPTIONS</h3>\n<blockquote>\n<table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">-h <var>&lt;msg&gt;</var></span>, <span class=\"option\">--help=<var>&lt;msg&gt;</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>The help message in docopt format.\nIf - is given, read the help message from\nstandard input.\nIf no argument is given, print docopts\u2019s own\nhelp message and quit.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-V <var>&lt;msg&gt;</var></span>, <span class=\"option\">--version=<var>&lt;msg&gt;</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>A version message.\nIf - is given, read the version message from\nstandard input.  If the help message is also\nread from standard input, read it first.\nIf no argument is given, print docopts\u2019s own\nversion message and quit.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-O</span>, <span class=\"option\">--options-first</span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Disallow interspersing options and positional\narguments: all arguments starting from the\nfirst one that does not begin with a dash will\nbe treated as positional arguments.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-H</span>, <span class=\"option\">--no-help</span></kbd></td>\n<td>Don\u2019t handle \u2013help and \u2013version specially.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-A <var>&lt;name&gt;</var></span></kbd></td>\n<td>Export the arguments as a Bash 4.x associative\narray called &lt;name&gt;.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-s <var>&lt;str&gt;</var></span>, <span class=\"option\">--separator=<var>&lt;str&gt;</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>The string to use to separate the help message\nfrom the version message when both are given\nvia standard input. [default: \u2014-]</td></tr>\n</tbody>\n</table>\n</blockquote>\n</div>\n<div id=\"examples\">\n<h3>EXAMPLES</h3>\n<p>Read the help and version messages from standard input:</p>\n<pre>eval \"$(docopts -V - -h - : \"$@\" &lt;&lt;EOF\nUsage: rock [options] &lt;argv&gt;...\n\n      --verbose  Generate verbose messages.\n      --help     Show help options.\n      --version  Print program version.\n----\nrock 0.1.0\nCopyright (C) 200X Thomas Light\nLicense RIT (Robot Institute of Technology)\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\nEOF\n)\"\n\nif $verbose ; then\n    echo \"Hello, world!\"\nfi\n</pre>\n<p>Parse the help and version messages from script comments and pass them as\ncommand line arguments:</p>\n<pre>#? rock 0.1.0\n#? Copyright (C) 200X Thomas Light\n#? License RIT (Robot Institute of Technology)\n#? This is free software: you are free to change and redistribute it.\n#? There is NO WARRANTY, to the extent permitted by law.\n\n##? Usage: rock [options] &lt;argv&gt;...\n##?\n##?       --help     Show help options.\n##?       --version  Print program version.\n\nhelp=$(grep \"^##?\" \"$0\" | cut -c 5-)\nversion=$(grep \"^#?\"  \"$0\" | cut -c 4-)\neval \"$(docopts -h \"$help\" -V \"$version\" : \"$@\")\"\n\nfor arg in \"${argv[@]}\"; do\n    echo \"$arg\"\ndone\n</pre>\n<p>Using the associative array:</p>\n<pre>eval \"$(docopts -A args -h \"$help\" : \"$@\")\"\n\nif ${args[subcommand]} ; then\n    echo \"subcommand was given\"\nfi\n\nif [ -n \"${args[--long-option-with-argument]}\" ] ; then\n    echo \"${args[--long-option-with-argument]}\"\nelse\n    echo \"--long-option-with-argument was not given\"\nfi\n\ni=0\nwhile [[ $i -lt ${args[&lt;argument-with-multiple-values&gt;,#]} ]] ; do\n    echo \"${args[&lt;argument-with-multiple-values&gt;,$i]}\"\n    i=$[$i+1]\ndone\n</pre>\n</div>\n<div id=\"versioning\">\n<h3>VERSIONING</h3>\n<p>The <tt>docopts</tt> version number always matches that of the\n<a href=\"https://github.com/docopt/docopt\" rel=\"nofollow\">docopt Python reference implementation</a>\nversion against which it was built.  As <tt>docopt</tt> follows\n<a href=\"http://semver.org\" rel=\"nofollow\">semantic versioning</a>, <tt>docopts</tt> should work with any\n<tt>docopt</tt> release it shares the major version number with; however, as both\n<tt>docopts</tt> and <tt>docopt</tt> are in major version number 0 at the moment of\nwriting this, <tt>docopts</tt> can only be relied to work with an installation of\n<tt>docopt</tt> with the exact same version number.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 946342, "releases": {"0.5.0": [{"comment_text": "", "digests": {"md5": "4c4c446174de41cdd7fdb9246780bda3", "sha256": "c62e8837982bd2a184c2202c9d456adec7650c313d775b07f5d6400a6fc1cd12"}, "downloads": -1, "filename": "docopts-0.5.0.tar.gz", "has_sig": false, "md5_digest": "4c4c446174de41cdd7fdb9246780bda3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5979, "upload_time": "2012-10-09T20:42:50", "upload_time_iso_8601": "2012-10-09T20:42:50.949072Z", "url": "https://files.pythonhosted.org/packages/bc/84/3c4e73335ecafc97a999fc7e81a8d3f6cdcbe36c995ead0f4fd004f61935/docopts-0.5.0.tar.gz", "yanked": false}], "0.5.0-fix": [{"comment_text": "", "digests": {"md5": "9588933ef9a0320e02bda50369ebef19", "sha256": "a3b6882db146a8c6d38b98c2a5dd7812357444c09ed01b08cd7d17851ecd2e3e"}, "downloads": -1, "filename": "docopts-0.5.0-fix.tar.gz", "has_sig": false, "md5_digest": "9588933ef9a0320e02bda50369ebef19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5961, "upload_time": "2012-10-16T02:06:12", "upload_time_iso_8601": "2012-10-16T02:06:12.414897Z", "url": "https://files.pythonhosted.org/packages/f2/9a/8b6ce6ce01c01a1b70a32699c67a022aad9fafa18f403cc6e20a792fffd3/docopts-0.5.0-fix.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "cb6d62e9a020034902c19b1456618362", "sha256": "9d37a7252ee7b91b1d832e1f3a4af745d055ac148ffbdcc694a0c5f362a4ad8b"}, "downloads": -1, "filename": "docopts-0.6.0.tar.gz", "has_sig": false, "md5_digest": "cb6d62e9a020034902c19b1456618362", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6055, "upload_time": "2013-01-26T20:43:08", "upload_time_iso_8601": "2013-01-26T20:43:08.134842Z", "url": "https://files.pythonhosted.org/packages/af/0d/307df55fcedba9bb08aa542ac53b0c8959c5db0d0df32c318e7b411fec4c/docopts-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "58f07caaf57a645fd5fb8c2d7ab18668", "sha256": "ea8d6b03a0931c75a0e4919a0b0856f1c187c38a96174a750c86b41b903a693a"}, "downloads": -1, "filename": "docopts-0.6.1.tar.gz", "has_sig": false, "md5_digest": "58f07caaf57a645fd5fb8c2d7ab18668", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6050, "upload_time": "2013-02-05T00:43:47", "upload_time_iso_8601": "2013-02-05T00:43:47.312442Z", "url": "https://files.pythonhosted.org/packages/ba/b3/e96eebbc507ce1db0d90a139ae9af8479a1d8f87da39330a83ab204e842f/docopts-0.6.1.tar.gz", "yanked": false}], "0.6.1-fix": [{"comment_text": "", "digests": {"md5": "cc8fa87deaee0027ea9209d2fc1fea40", "sha256": "563aad461c700a60ffb91bc1c5e548ac05399c8f5a62c65ff3b8359717fd3d87"}, "downloads": -1, "filename": "docopts-0.6.1-fix.tar.gz", "has_sig": false, "md5_digest": "cc8fa87deaee0027ea9209d2fc1fea40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5829, "upload_time": "2013-02-06T23:07:57", "upload_time_iso_8601": "2013-02-06T23:07:57.234006Z", "url": "https://files.pythonhosted.org/packages/ad/5e/4adbabfffce1baf83e327292ce16b2e2b7e69a22c4ea658df3298271b57c/docopts-0.6.1-fix.tar.gz", "yanked": false}], "0.6.1-fix2": [{"comment_text": "", "digests": {"md5": "f3fe69ed7b09c4b87c547a212a861c81", "sha256": "cca74adc7a1c4cb0f8f4274729dea0f60af9464bcdc6cf47c8bb8405c38021f0"}, "downloads": -1, "filename": "docopts-0.6.1-fix2.tar.gz", "has_sig": false, "md5_digest": "f3fe69ed7b09c4b87c547a212a861c81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6020, "upload_time": "2013-05-14T21:16:13", "upload_time_iso_8601": "2013-05-14T21:16:13.625406Z", "url": "https://files.pythonhosted.org/packages/60/45/65c0e5f8e9c0ccc08b176bbf808bee6bd1ed96c1465d770a50d3731b67bc/docopts-0.6.1-fix2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f3fe69ed7b09c4b87c547a212a861c81", "sha256": "cca74adc7a1c4cb0f8f4274729dea0f60af9464bcdc6cf47c8bb8405c38021f0"}, "downloads": -1, "filename": "docopts-0.6.1-fix2.tar.gz", "has_sig": false, "md5_digest": "f3fe69ed7b09c4b87c547a212a861c81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6020, "upload_time": "2013-05-14T21:16:13", "upload_time_iso_8601": "2013-05-14T21:16:13.625406Z", "url": "https://files.pythonhosted.org/packages/60/45/65c0e5f8e9c0ccc08b176bbf808bee6bd1ed96c1465d770a50d3731b67bc/docopts-0.6.1-fix2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:43 2020"}