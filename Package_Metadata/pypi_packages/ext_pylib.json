{"info": {"author": "Harold Bradley III", "author_email": "harold@bradleystudio.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Build Tools"], "description": "ext_pylib\n#########\nextra python modules for server script scaffolding\n==================================================\n\n.. image:: https://travis-ci.org/hbradleyiii/ext_pylib.svg?branch=master\n    :target: https://travis-ci.org/hbradleyiii/ext_pylib\n\n.. image:: https://www.quantifiedcode.com/api/v1/project/b9f8a6c7f3724ee4896e7cd8d2a865aa/badge.svg\n    :target: https://www.quantifiedcode.com/app/project/b9f8a6c7f3724ee4896e7cd8d2a865aa :alt: Code issues\n\n----\n\nThis is a work in progress. Use at your own risk.\n\next_pylib is a group of submodules that are useful scaffolding for other larger\nprojects. I began developing it after noticing how often I was repeating\nseveral patterns for server scripts. It works well for building server scripts.\n\nInstalling and Including in projects\n====================================\n\nInstalling ext_pylib\n--------------------\n\n.. code:: bash\n\n    $ git clone git@github.com:hbradleyiii/ext_pylib.git\n    $ cd <project directory>\n    $ pip install -e .\n\nRunning Tests\n-------------\n\n.. code:: bash\n\n    $ cd <project directory>\n    $ py.test\n\nModules\n=======\n\nDomain Module\n-------------\nTODO\n\nFiles Module\n------------\nA class to manage and create files. Also includes three\nmixin classes Parsable, Section, and Template.\n\nSection Mixin\n~~~~~~~~~~~~~\nThe Section mixin adds methods useful for processing\ntemplate section files. A section file is a template of a\nconfiguration file that only represents a particular\nsection of that file. It begins and ends with a delineator\n\nFor example:\n\n.. code:: bash\n\n    ## START:SECTION_NAME ##\n    content here...\n    ## END:SECTION_NAME ##\n\nA use case would be how WordPress\ndelineates a particular section of the htaccess file in its\nroot directory with a start line and an end line. This is a\nsection of the full htaccess file and could be managed by a\nSection mixin.\n\nTemplate Mixin\n~~~~~~~~~~~~~~\nThe Template mixin adds a method useful for processing a\nregular template file: ``apply_using()``. It assumes that the\nfile contains placeholder text to be replaced by actual\ndata. The placeholders and actual data are passsed into the\nmethod as a dict. The resulting data is returned\n(presumably to be saved in another file.)\n#### Parsable Mixin\n\nThe Parsable mixin adds a method useful for parsing\n(presumably) configuration files. It takes a dict of\nattribute names and regexes to be used. When\n``setup_parsing()`` is called, a dynamic property is created\nfor getting and setting a value in self.data based on the\nregex.\n\nPassword Module\n---------------\nTODO\n\nPrompt Module\n---------------\nTODO\n\nUser Module\n-----------\nTODO\n\n----\n\nSoli Deo gloria.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/hbradleyiii/ext_pylib/archive/0.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hbradleyiii/ext_pylib", "keywords": "server development,files,domain names", "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "ext_pylib", "package_url": "https://pypi.org/project/ext_pylib/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ext_pylib/", "project_urls": {"Download": "https://github.com/hbradleyiii/ext_pylib/archive/0.1.tar.gz", "Homepage": "https://github.com/hbradleyiii/ext_pylib"}, "release_url": "https://pypi.org/project/ext_pylib/0.1/", "requires_dist": null, "requires_python": null, "summary": "Extra python libraries for scaffolding server scripts.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"extra-python-modules-for-server-script-scaffolding\">\n<h2>extra python modules for server script scaffolding</h2>\n<a href=\"https://travis-ci.org/hbradleyiii/ext_pylib\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/hbradleyiii/ext_pylib.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c50416602e812252428b4a370fda19cdde540526/68747470733a2f2f7472617669732d63692e6f72672f68627261646c65796969692f6578745f70796c69622e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://www.quantifiedcode.com/app/project/b9f8a6c7f3724ee4896e7cd8d2a865aa:alt:Codeissues\" rel=\"nofollow\"><img alt=\"https://www.quantifiedcode.com/api/v1/project/b9f8a6c7f3724ee4896e7cd8d2a865aa/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2004d7065fa7f9d4aa7bf6736ae0cf86e18b40ad/68747470733a2f2f7777772e7175616e746966696564636f64652e636f6d2f6170692f76312f70726f6a6563742f62396638613663376633373234656534383936653763643864326138363561612f62616467652e737667\"></a>\n<hr class=\"docutils\">\n<p>This is a work in progress. Use at your own risk.</p>\n<p>ext_pylib is a group of submodules that are useful scaffolding for other larger\nprojects. I began developing it after noticing how often I was repeating\nseveral patterns for server scripts. It works well for building server scripts.</p>\n</div>\n<div id=\"installing-and-including-in-projects\">\n<h2>Installing and Including in projects</h2>\n<div id=\"installing-ext-pylib\">\n<h3>Installing ext_pylib</h3>\n<pre>$ git clone git@github.com:hbradleyiii/ext_pylib.git\n$ <span class=\"nb\">cd</span> &lt;project directory&gt;\n$ pip install -e .\n</pre>\n</div>\n<div id=\"running-tests\">\n<h3>Running Tests</h3>\n<pre>$ <span class=\"nb\">cd</span> &lt;project directory&gt;\n$ py.test\n</pre>\n</div>\n</div>\n<div id=\"modules\">\n<h2>Modules</h2>\n<div id=\"domain-module\">\n<h3>Domain Module</h3>\n<p>TODO</p>\n</div>\n<div id=\"files-module\">\n<h3>Files Module</h3>\n<p>A class to manage and create files. Also includes three\nmixin classes Parsable, Section, and Template.</p>\n<div id=\"section-mixin\">\n<h4>Section Mixin</h4>\n<p>The Section mixin adds methods useful for processing\ntemplate section files. A section file is a template of a\nconfiguration file that only represents a particular\nsection of that file. It begins and ends with a delineator</p>\n<p>For example:</p>\n<pre><span class=\"c1\">## START:SECTION_NAME ##\n</span>content here...\n<span class=\"c1\">## END:SECTION_NAME ##</span>\n</pre>\n<p>A use case would be how WordPress\ndelineates a particular section of the htaccess file in its\nroot directory with a start line and an end line. This is a\nsection of the full htaccess file and could be managed by a\nSection mixin.</p>\n</div>\n<div id=\"template-mixin\">\n<h4>Template Mixin</h4>\n<p>The Template mixin adds a method useful for processing a\nregular template file: <tt>apply_using()</tt>. It assumes that the\nfile contains placeholder text to be replaced by actual\ndata. The placeholders and actual data are passsed into the\nmethod as a dict. The resulting data is returned\n(presumably to be saved in another file.)\n#### Parsable Mixin</p>\n<p>The Parsable mixin adds a method useful for parsing\n(presumably) configuration files. It takes a dict of\nattribute names and regexes to be used. When\n<tt>setup_parsing()</tt> is called, a dynamic property is created\nfor getting and setting a value in self.data based on the\nregex.</p>\n</div>\n</div>\n<div id=\"password-module\">\n<h3>Password Module</h3>\n<p>TODO</p>\n</div>\n<div id=\"prompt-module\">\n<h3>Prompt Module</h3>\n<p>TODO</p>\n</div>\n<div id=\"user-module\">\n<h3>User Module</h3>\n<p>TODO</p>\n<hr class=\"docutils\">\n<p>Soli Deo gloria.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2004740, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "f38820a0699d7d7d6ca250f116012db9", "sha256": "f80032fd9f588f84524479030420b31749f04d6243080366f48e8e7f3c1ddf14"}, "downloads": -1, "filename": "ext_pylib-0.1.tar.gz", "has_sig": false, "md5_digest": "f38820a0699d7d7d6ca250f116012db9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18960, "upload_time": "2016-03-13T19:56:54", "upload_time_iso_8601": "2016-03-13T19:56:54.891424Z", "url": "https://files.pythonhosted.org/packages/5e/6d/c7d4e26d0c83315ec060999423e23c0b18d335e7b540ba99cfc81c82b003/ext_pylib-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f38820a0699d7d7d6ca250f116012db9", "sha256": "f80032fd9f588f84524479030420b31749f04d6243080366f48e8e7f3c1ddf14"}, "downloads": -1, "filename": "ext_pylib-0.1.tar.gz", "has_sig": false, "md5_digest": "f38820a0699d7d7d6ca250f116012db9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18960, "upload_time": "2016-03-13T19:56:54", "upload_time_iso_8601": "2016-03-13T19:56:54.891424Z", "url": "https://files.pythonhosted.org/packages/5e/6d/c7d4e26d0c83315ec060999423e23c0b18d335e7b540ba99cfc81c82b003/ext_pylib-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:31 2020"}