{"info": {"author": "Neil Freeman", "author_email": "contact@fakeisthenewreal.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Natural Language :: English", "Operating System :: OS Independent", "Operating System :: Unix", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: Implementation :: PyPy"], "description": "pystateplane\n------------\n\nGet the local state plane projection for geographica coordinates, and\nautomatically convert between coordinates and the local state plane\nprojection.\n\nIncludes state plane projections for the 50 states, DC, Puerto Rico,\nAmerican Samoa, Guam and the US Virgin Islands.\n\nFind the local state plane system:\n\n.. code:: python\n\n    import stateplane\n\n    # Returns the EPSG value for this (lon, lat)\n    stateplane.identify(-73.2, 43.2)\n    # 32145\n\n    # Return a short name for the projection\n    stateplane.identify(-88.2, 41.2, 'short')\n    # 'IL_E'\n\n    # Speed up the process by specifying a state FIPS code\n    stateplane.identify(-88.2, 41.2, 'short', statefp='17')\n    # 'IL_E'\n\n    # Speed up the process even more by specifying a county FIPS code\n    # These two calls are equivalent\n    stateplane.identify(None, None, 'short', countyfp='36005')\n    stateplane.identify(None, None, 'short', statefp='36', countyfp='005')\n    # 'NY_LI'\n\n    stateplane.identify(-80.1, 36.2, fmt='short')\n    # 'NC'\n\n    # returns the FIPS code of the projection\n    stateplane.identify(-80.1, 36.2, fmt='fips')\n    '3200'\n\nConvert to the (easting, northing) of the local state plane:\n\n.. code:: python\n\n    stateplane.from_lonlat(-80.1, 36.2)\n    (510673.2830651368, 272340.60789450357)\n\n    stateplane.from_lonlat(-75.2, 40.2)\n    (817080.8169336573, 99364.28495057777)\n\n    stateplane.identify(-75.2, 40.2, fmt='short')\n    'PA_S'\n\nInstalling\n----------\n\nAssuming you have `pip <https://pip.pypa.io/en/stable/>`__, run:\n\n::\n\n    pip install stateplane\n\nOr, download the repository and run:\n\n::\n\n    python setup.py install\n\nFunctions\n---------\n\nstateplane.identify(lon, lat, fmt=None, statefp=None)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nfrom\\_latlon(lat, lon, epsg=None, fips=None, abbr=None, statefp=None, countyfp=None)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nfrom\\_lonlat(lon, lat, epsg=None, fips=None, abbr=None, statefp=None, countyfp=None)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor these functions, ``epsg``, ``fips`` or ``abbr`` can be used to\nspecify a projection. The ``statefp`` parameter can be used to specify a\ntwo-digit state (or territory) FIPS code, while results in more\nefficient checking. Use ``countyfp`` to specify a five-digit county FIPS\ncode. Or, in combination with ``statefp``, use the three-digit county\nstem.\n\nto\\_latlon(easting, northing, epsg=None, fips=None, abbr=None)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nto\\_lonlat(easting, northing, epsg=None, fips=None, abbr=None)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor these functions, as least one of ``epsg``, ``fips`` and ``abbr``\nmust be provided.\n\nCaveats\n-------\n\nThis module is really just a convenience wrapper for the excellent\n``pyproj`` library. Big speed gains could be achieved by doing the\nconversions natively. Pull requests are gladly accepted.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fitnr/stateplane", "keywords": "gis usa projection", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "stateplane", "package_url": "https://pypi.org/project/stateplane/", "platform": "", "project_url": "https://pypi.org/project/stateplane/", "project_urls": {"Homepage": "https://github.com/fitnr/stateplane"}, "release_url": "https://pypi.org/project/stateplane/0.3.1/", "requires_dist": ["pyproj (<2,>=1.9.4)", "shapely (<1.6,>=1.5.1)", "gdal (<2.3,>=2.0)"], "requires_python": "", "summary": "Convert between state plane projections and long/lat", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pystateplane\">\n<h2>pystateplane</h2>\n<p>Get the local state plane projection for geographica coordinates, and\nautomatically convert between coordinates and the local state plane\nprojection.</p>\n<p>Includes state plane projections for the 50 states, DC, Puerto Rico,\nAmerican Samoa, Guam and the US Virgin Islands.</p>\n<p>Find the local state plane system:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">stateplane</span>\n\n<span class=\"c1\"># Returns the EPSG value for this (lon, lat)</span>\n<span class=\"n\">stateplane</span><span class=\"o\">.</span><span class=\"n\">identify</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">73.2</span><span class=\"p\">,</span> <span class=\"mf\">43.2</span><span class=\"p\">)</span>\n<span class=\"c1\"># 32145</span>\n\n<span class=\"c1\"># Return a short name for the projection</span>\n<span class=\"n\">stateplane</span><span class=\"o\">.</span><span class=\"n\">identify</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">88.2</span><span class=\"p\">,</span> <span class=\"mf\">41.2</span><span class=\"p\">,</span> <span class=\"s1\">'short'</span><span class=\"p\">)</span>\n<span class=\"c1\"># 'IL_E'</span>\n\n<span class=\"c1\"># Speed up the process by specifying a state FIPS code</span>\n<span class=\"n\">stateplane</span><span class=\"o\">.</span><span class=\"n\">identify</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">88.2</span><span class=\"p\">,</span> <span class=\"mf\">41.2</span><span class=\"p\">,</span> <span class=\"s1\">'short'</span><span class=\"p\">,</span> <span class=\"n\">statefp</span><span class=\"o\">=</span><span class=\"s1\">'17'</span><span class=\"p\">)</span>\n<span class=\"c1\"># 'IL_E'</span>\n\n<span class=\"c1\"># Speed up the process even more by specifying a county FIPS code</span>\n<span class=\"c1\"># These two calls are equivalent</span>\n<span class=\"n\">stateplane</span><span class=\"o\">.</span><span class=\"n\">identify</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s1\">'short'</span><span class=\"p\">,</span> <span class=\"n\">countyfp</span><span class=\"o\">=</span><span class=\"s1\">'36005'</span><span class=\"p\">)</span>\n<span class=\"n\">stateplane</span><span class=\"o\">.</span><span class=\"n\">identify</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s1\">'short'</span><span class=\"p\">,</span> <span class=\"n\">statefp</span><span class=\"o\">=</span><span class=\"s1\">'36'</span><span class=\"p\">,</span> <span class=\"n\">countyfp</span><span class=\"o\">=</span><span class=\"s1\">'005'</span><span class=\"p\">)</span>\n<span class=\"c1\"># 'NY_LI'</span>\n\n<span class=\"n\">stateplane</span><span class=\"o\">.</span><span class=\"n\">identify</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">80.1</span><span class=\"p\">,</span> <span class=\"mf\">36.2</span><span class=\"p\">,</span> <span class=\"n\">fmt</span><span class=\"o\">=</span><span class=\"s1\">'short'</span><span class=\"p\">)</span>\n<span class=\"c1\"># 'NC'</span>\n\n<span class=\"c1\"># returns the FIPS code of the projection</span>\n<span class=\"n\">stateplane</span><span class=\"o\">.</span><span class=\"n\">identify</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">80.1</span><span class=\"p\">,</span> <span class=\"mf\">36.2</span><span class=\"p\">,</span> <span class=\"n\">fmt</span><span class=\"o\">=</span><span class=\"s1\">'fips'</span><span class=\"p\">)</span>\n<span class=\"s1\">'3200'</span>\n</pre>\n<p>Convert to the (easting, northing) of the local state plane:</p>\n<pre><span class=\"n\">stateplane</span><span class=\"o\">.</span><span class=\"n\">from_lonlat</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">80.1</span><span class=\"p\">,</span> <span class=\"mf\">36.2</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"mf\">510673.2830651368</span><span class=\"p\">,</span> <span class=\"mf\">272340.60789450357</span><span class=\"p\">)</span>\n\n<span class=\"n\">stateplane</span><span class=\"o\">.</span><span class=\"n\">from_lonlat</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">75.2</span><span class=\"p\">,</span> <span class=\"mf\">40.2</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"mf\">817080.8169336573</span><span class=\"p\">,</span> <span class=\"mf\">99364.28495057777</span><span class=\"p\">)</span>\n\n<span class=\"n\">stateplane</span><span class=\"o\">.</span><span class=\"n\">identify</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">75.2</span><span class=\"p\">,</span> <span class=\"mf\">40.2</span><span class=\"p\">,</span> <span class=\"n\">fmt</span><span class=\"o\">=</span><span class=\"s1\">'short'</span><span class=\"p\">)</span>\n<span class=\"s1\">'PA_S'</span>\n</pre>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>Assuming you have <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a>, run:</p>\n<pre>pip install stateplane\n</pre>\n<p>Or, download the repository and run:</p>\n<pre>python setup.py install\n</pre>\n</div>\n<div id=\"functions\">\n<h2>Functions</h2>\n<div id=\"stateplane-identify-lon-lat-fmt-none-statefp-none\">\n<h3>stateplane.identify(lon, lat, fmt=None, statefp=None)</h3>\n</div>\n<div id=\"from-latlon-lat-lon-epsg-none-fips-none-abbr-none-statefp-none-countyfp-none\">\n<h3>from_latlon(lat, lon, epsg=None, fips=None, abbr=None, statefp=None, countyfp=None)</h3>\n</div>\n<div id=\"from-lonlat-lon-lat-epsg-none-fips-none-abbr-none-statefp-none-countyfp-none\">\n<h3>from_lonlat(lon, lat, epsg=None, fips=None, abbr=None, statefp=None, countyfp=None)</h3>\n<p>For these functions, <tt>epsg</tt>, <tt>fips</tt> or <tt>abbr</tt> can be used to\nspecify a projection. The <tt>statefp</tt> parameter can be used to specify a\ntwo-digit state (or territory) FIPS code, while results in more\nefficient checking. Use <tt>countyfp</tt> to specify a five-digit county FIPS\ncode. Or, in combination with <tt>statefp</tt>, use the three-digit county\nstem.</p>\n<div id=\"to-latlon-easting-northing-epsg-none-fips-none-abbr-none\">\n<h4>to_latlon(easting, northing, epsg=None, fips=None, abbr=None)</h4>\n</div>\n<div id=\"to-lonlat-easting-northing-epsg-none-fips-none-abbr-none\">\n<h4>to_lonlat(easting, northing, epsg=None, fips=None, abbr=None)</h4>\n<p>For these functions, as least one of <tt>epsg</tt>, <tt>fips</tt> and <tt>abbr</tt>\nmust be provided.</p>\n</div>\n</div>\n</div>\n<div id=\"caveats\">\n<h2>Caveats</h2>\n<p>This module is really just a convenience wrapper for the excellent\n<tt>pyproj</tt> library. Big speed gains could be achieved by doing the\nconversions natively. Pull requests are gladly accepted.</p>\n</div>\n\n          </div>"}, "last_serial": 4198300, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0d31bd852a4fd9718384d51026892352", "sha256": "ed0f66fe2e8bfb24232ad85d430cb6efe20e8ba58a11f94403e174573647dc26"}, "downloads": -1, "filename": "stateplane-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "0d31bd852a4fd9718384d51026892352", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 17949, "upload_time": "2015-03-31T21:15:55", "upload_time_iso_8601": "2015-03-31T21:15:55.747163Z", "url": "https://files.pythonhosted.org/packages/4c/c5/74576bee60727dee240c09771bf72b0dbb0504d2b1a86eecf87d9291af6f/stateplane-0.1.0-py2-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "5d3172c88e4431b48effd48ae19758bf", "sha256": "8c36716e0fc3c878fd3870048569df784f10bd2bb5d7e084480ea63bbf31272e"}, "downloads": -1, "filename": "stateplane-0.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "5d3172c88e4431b48effd48ae19758bf", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 19064, "upload_time": "2015-04-01T15:16:17", "upload_time_iso_8601": "2015-04-01T15:16:17.224184Z", "url": "https://files.pythonhosted.org/packages/06/ca/b16709b04a0c0fab29e9a3eef2a0ba43073fb3e8b1771ba51e4b04c9003c/stateplane-0.1.1-py2-none-any.whl", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "dbf7ba2a5c21d63799dda9e26dc89f4f", "sha256": "13ed8daf65e3a9b6c94a5b7078adc838fdee68974b6887c629988b68304f8c2c"}, "downloads": -1, "filename": "stateplane-0.1.2-py2-none-any.whl", "has_sig": false, "md5_digest": "dbf7ba2a5c21d63799dda9e26dc89f4f", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 372366, "upload_time": "2015-04-01T16:03:59", "upload_time_iso_8601": "2015-04-01T16:03:59.070821Z", "url": "https://files.pythonhosted.org/packages/56/55/1ec999ec3719deffdde3ab8b1c7916b0193b7a7b8d63b29e79ffd40c8e4a/stateplane-0.1.2-py2-none-any.whl", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "137577731e4710f4071c7c85685e283a", "sha256": "6f04c503cb93cebdb27db83c944cd241ec8def2d5c61c7260054796d1eb638ff"}, "downloads": -1, "filename": "stateplane-0.2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "137577731e4710f4071c7c85685e283a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 387478, "upload_time": "2015-04-01T18:57:49", "upload_time_iso_8601": "2015-04-01T18:57:49.097356Z", "url": "https://files.pythonhosted.org/packages/a6/2d/23cc2905cb6e57ec153043d48df66f39be4fca6360d6d5e2c91eb327f82f/stateplane-0.2.1-py2-none-any.whl", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "291c8889ee52fd901eb2b4f0fbf73945", "sha256": "9194efb85766005c37d22588121b244c2eb0635a1fe4bd9cf79790edd6ba4a77"}, "downloads": -1, "filename": "stateplane-0.2.2.tar.gz", "has_sig": false, "md5_digest": "291c8889ee52fd901eb2b4f0fbf73945", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 368706, "upload_time": "2015-09-29T17:02:15", "upload_time_iso_8601": "2015-09-29T17:02:15.877190Z", "url": "https://files.pythonhosted.org/packages/7a/68/21061fd6ad862ce22f27b81cb0ac1781f80ae6f7976f2cac5ea529883de4/stateplane-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "d9da7b14044ebc855fbd2e14141c8d1e", "sha256": "03bfc0e5c7d915f26c244f0327414f320a68f7cdba78e3b0f369f21d8ef7d928"}, "downloads": -1, "filename": "stateplane-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d9da7b14044ebc855fbd2e14141c8d1e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 387468, "upload_time": "2015-10-13T17:48:31", "upload_time_iso_8601": "2015-10-13T17:48:31.505662Z", "url": "https://files.pythonhosted.org/packages/5b/5c/f494ad3c79f7d9866e1653eb69011e51fde3f9f8746627413ab9256d11ef/stateplane-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca89e1f06a5d4ea431b577e02a476bc3", "sha256": "66b1a5d114ec7fe5f1e9116c338f0d69b5be18152fb1f846f2e4f052ea7ceb52"}, "downloads": -1, "filename": "stateplane-0.2.3.tar.gz", "has_sig": false, "md5_digest": "ca89e1f06a5d4ea431b577e02a476bc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 368415, "upload_time": "2015-10-13T17:48:36", "upload_time_iso_8601": "2015-10-13T17:48:36.376842Z", "url": "https://files.pythonhosted.org/packages/88/2a/f8cc2cc41c7aeccc9fe452c269dbbb606a842150729a3c3e4b265bc37f7c/stateplane-0.2.3.tar.gz", "yanked": false}], "0.2.3.post1": [{"comment_text": "", "digests": {"md5": "92ad5240406427857431e5d5871ea3a5", "sha256": "4319acd506fedfb98911559dd58e90e3ff7e17dca88533886a3965c92faba932"}, "downloads": -1, "filename": "stateplane-0.2.3.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "92ad5240406427857431e5d5871ea3a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 387567, "upload_time": "2015-10-13T17:50:04", "upload_time_iso_8601": "2015-10-13T17:50:04.980221Z", "url": "https://files.pythonhosted.org/packages/70/7e/62b50ed03a1b1014b90285d81266681ee7891a89cfc9641d207b571f316e/stateplane-0.2.3.post1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "09ff3062a5935177f3f725ed9b6c6f08", "sha256": "06f4bc39184cd2718ca2d80b8fb9118063e18810b5b0910da933a4be8b44a7ea"}, "downloads": -1, "filename": "stateplane-0.2.3.post1.tar.gz", "has_sig": false, "md5_digest": "09ff3062a5935177f3f725ed9b6c6f08", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 368434, "upload_time": "2015-10-13T17:50:19", "upload_time_iso_8601": "2015-10-13T17:50:19.402110Z", "url": "https://files.pythonhosted.org/packages/aa/17/9edc1e843ecb1a71462a56d7fd120474f0a0aa68a407575cf315cd91812d/stateplane-0.2.3.post1.tar.gz", "yanked": false}], "0.2.3.post2": [{"comment_text": "", "digests": {"md5": "635e9e4de96d99f277add9869dc97ba6", "sha256": "934385b61144566a1b32e8e27be90dc74ef5610b75b71d52820262e30d5e62de"}, "downloads": -1, "filename": "stateplane-0.2.3.post2-py3-none-any.whl", "has_sig": false, "md5_digest": "635e9e4de96d99f277add9869dc97ba6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 387569, "upload_time": "2015-10-13T21:16:49", "upload_time_iso_8601": "2015-10-13T21:16:49.055360Z", "url": "https://files.pythonhosted.org/packages/a6/c2/d0a6191f718449761c8b2f7f648f1f24df0c163284f7bf45aa2beef2de45/stateplane-0.2.3.post2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fabde9c773632fcb2f41d93fb05d2ee3", "sha256": "8a10694e805b0ff2953a5bc0e7c77af0169935cc7808543644906203e42e80cd"}, "downloads": -1, "filename": "stateplane-0.2.3.post2.tar.gz", "has_sig": false, "md5_digest": "fabde9c773632fcb2f41d93fb05d2ee3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 368433, "upload_time": "2015-10-13T21:16:53", "upload_time_iso_8601": "2015-10-13T21:16:53.379834Z", "url": "https://files.pythonhosted.org/packages/4d/65/ed56054664a47fe65a7d0b9f92b38aac405cd80b1b18854579d4819b040c/stateplane-0.2.3.post2.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "d1ee842accf84870207e7546120b0900", "sha256": "e570fe20bbb9deb3921f1e58ee7144561eab67a6ccd42b43948950a4d2e52582"}, "downloads": -1, "filename": "stateplane-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "d1ee842accf84870207e7546120b0900", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 376570, "upload_time": "2016-01-31T18:14:14", "upload_time_iso_8601": "2016-01-31T18:14:14.045171Z", "url": "https://files.pythonhosted.org/packages/2f/41/13fd7b6459899bea18fefb55ac8047d7f4bc7b37497038c179cf19efa8e0/stateplane-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf8cfd90a790e0df7885cdfa37a9fdd1", "sha256": "2ed811ae1a58c84f43ecaa67fbbc059588219a604e2bb6956b63e4efd1f1e351"}, "downloads": -1, "filename": "stateplane-0.2.4.tar.gz", "has_sig": false, "md5_digest": "bf8cfd90a790e0df7885cdfa37a9fdd1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 368688, "upload_time": "2016-01-31T18:14:21", "upload_time_iso_8601": "2016-01-31T18:14:21.366695Z", "url": "https://files.pythonhosted.org/packages/7f/ec/5cc898999991803a3d0ce4e59c3d8da8c698bdd81aa3b46ef5c8f778db6e/stateplane-0.2.4.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "8407b8b36ac05a13052a71312d56b57f", "sha256": "d7fd7649cdc19b2f624fd18f3c08d8108f370cd53bfe7cb48ece37f84e72f6ce"}, "downloads": -1, "filename": "stateplane-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8407b8b36ac05a13052a71312d56b57f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 367580, "upload_time": "2018-08-23T02:54:35", "upload_time_iso_8601": "2018-08-23T02:54:35.300376Z", "url": "https://files.pythonhosted.org/packages/36/d0/2c1fb3bd105cf4ffb763075c057c8fc979071fe4bffdb017422d3ef4f3f0/stateplane-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6e7b25714369e8e01830463dfe228cad", "sha256": "8cd99d0f0c5103a3ec1fbaeb300cdfd8833f5dc1289ee75022882fb11c296c51"}, "downloads": -1, "filename": "stateplane-0.3.1.tar.gz", "has_sig": false, "md5_digest": "6e7b25714369e8e01830463dfe228cad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1422488, "upload_time": "2018-08-23T02:54:42", "upload_time_iso_8601": "2018-08-23T02:54:42.258293Z", "url": "https://files.pythonhosted.org/packages/fc/00/a4008eafbf7223c60eec681984a9e410ab62fd4f57bb98091d0f0c2a6e8b/stateplane-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8407b8b36ac05a13052a71312d56b57f", "sha256": "d7fd7649cdc19b2f624fd18f3c08d8108f370cd53bfe7cb48ece37f84e72f6ce"}, "downloads": -1, "filename": "stateplane-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8407b8b36ac05a13052a71312d56b57f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 367580, "upload_time": "2018-08-23T02:54:35", "upload_time_iso_8601": "2018-08-23T02:54:35.300376Z", "url": "https://files.pythonhosted.org/packages/36/d0/2c1fb3bd105cf4ffb763075c057c8fc979071fe4bffdb017422d3ef4f3f0/stateplane-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6e7b25714369e8e01830463dfe228cad", "sha256": "8cd99d0f0c5103a3ec1fbaeb300cdfd8833f5dc1289ee75022882fb11c296c51"}, "downloads": -1, "filename": "stateplane-0.3.1.tar.gz", "has_sig": false, "md5_digest": "6e7b25714369e8e01830463dfe228cad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1422488, "upload_time": "2018-08-23T02:54:42", "upload_time_iso_8601": "2018-08-23T02:54:42.258293Z", "url": "https://files.pythonhosted.org/packages/fc/00/a4008eafbf7223c60eec681984a9e410ab62fd4f57bb98091d0f0c2a6e8b/stateplane-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:29 2020"}