{"info": {"author": "Oscar Beijbom", "author_email": "oscar.beijbom@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5"], "description": "# PySpacer\n\n[![Build Status](https://travis-ci.org/beijbom/pyspacer.svg?branch=master)](https://travis-ci.org/beijbom/pyspacer)\n\nThis repository provide utilities to extract features from random point \nlocations in images and then training classifiers over those features.\nIt is used in the vision backend of `https://github.com/beijbom/coralnet`.\n\nSpacer currently supports python >=3.5.\n\n### Overview\nSpacer executes tasks as defined in messages. The messages types are defined\nin `messages.py` and the tasks in `tasks.py`. We also define several data-types\nin `data_classes.py` which define input and output types. \n\nRefer to the unit-test in `test_tasks.py` for examples on how to create tasks.\nCurrently the `extract_features` task only has a valid implementation \nthrough caffe, which requires the Docker build. We will add a PyTorch based\nfeature extractor soon.\n\nTasks can be executed directly by calling the methods in tasks.py. \nHowever, spacer also supports an interface with SQS \nhandled by `sqs_mailman()` in `mailman.py`. \n\nSpacer supports four storage types: `s3`, `filesystem`, `memory` and `url`.\n Refer to `storage.py` for details. The Memory storage is mostly used for \n testing, and the `url` storage is read only.\n\nAlso take a look at `config.py` for settings and configuration. \n\n### Installation\n\nThe spacer repo can be installed in three ways.\n* Using Docker -- the only option that supports Caffe.\n* Local clone -- ideal for fast testing and development.\n* Using pip install -- for integration in other code-bases.\n\n#### Config\nSpacer needs three variables. They can either be set\nas environmental variables (recommended if you `pip install` the package), \nor in a `secrets.json` file in the same directory as this README \n(recommended for Docker builds and local clones). \nThe `secrets.json` should look like this.\n```json\n{\n  \"SPACER_AWS_ACCESS_KEY_ID\": \"YOUR_AWS_KEY_ID\",\n  \"SPACER_AWS_SECRET_ACCESS_KEY\": \"YOUR_AWS_SECRET_KEY\",\n  \"SPACER_LOCAL_MODEL_PATH\": \"/path/to/your/local/models\"\n}\n``` \n\n#### Docker build\nThe docker build is the preferred build and the one used in deployment.\n* Install docker on your system\n* Create `secrets.json` as detailed above.\n* Create folder `/path/to/your/local/models` for caching model files.\n* Build image: `docker build -t spacer:test .`\n* Run: `docker run -v /path/to/your/local/models:/workspace/models -v ${PWD}:/workspace/spacer/ -it spacer:test`\n\nThe `-v /path/to/your/local/models:/workspace/models` part will make sure \nthe downloaded models are cached to your host storage. \nwhich makes rerunning stuff much faster.\n\nThe `-v ${PWD}:/workspace/spacer/` mounts your current folder including \n`secrets.json` so that the container has the right permissions.\n\nThe last step will run the default CMD command specified in the dockerfile \n(unit-test with coverage). If you want to enter the docker container \nrun the same command but append `bash` in the end: \n\n```\ndocker run -v /path/to/your/local/models:/workspace/models -it spacer:test bash\n```\n\n#### Pip install\n* `pip install spacer`\n* Set environmental variables.\n\n#### Local clone\n* Clone this repo\n* `pip install -r requirements.txt`\n\n### Code coverage\nIf you are using the docker build or local install, \nyou can check code coverage like so:\n```\n    coverage run --source=spacer --omit=spacer/tests/* -m unittest    \n    coverage report -m\n    coverage html\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/beijbom/pyspacer", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyspacer", "package_url": "https://pypi.org/project/pyspacer/", "platform": "", "project_url": "https://pypi.org/project/pyspacer/", "project_urls": {"Homepage": "https://github.com/beijbom/pyspacer"}, "release_url": "https://pypi.org/project/pyspacer/0.2.0/", "requires_dist": ["boto (>=2.40.0)", "wget (==3.2)", "tqdm (==4.43.0)", "Pillow (>=4.2.0)", "numpy (>=1.17.5)", "scikit-learn (==0.22.1)", "scikit-image (==0.15.0)", "torch (==1.4.0)", "torchvision (==0.5.0)"], "requires_python": ">=3.5", "summary": "Spatial image analysis with caffe and pytorch backends.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PySpacer</h1>\n<p><a href=\"https://travis-ci.org/beijbom/pyspacer\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8e8fbc54aeda7d2771c55c18cd158a408e5fd91f/68747470733a2f2f7472617669732d63692e6f72672f6265696a626f6d2f70797370616365722e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>This repository provide utilities to extract features from random point\nlocations in images and then training classifiers over those features.\nIt is used in the vision backend of <code>https://github.com/beijbom/coralnet</code>.</p>\n<p>Spacer currently supports python &gt;=3.5.</p>\n<h3>Overview</h3>\n<p>Spacer executes tasks as defined in messages. The messages types are defined\nin <code>messages.py</code> and the tasks in <code>tasks.py</code>. We also define several data-types\nin <code>data_classes.py</code> which define input and output types.</p>\n<p>Refer to the unit-test in <code>test_tasks.py</code> for examples on how to create tasks.\nCurrently the <code>extract_features</code> task only has a valid implementation\nthrough caffe, which requires the Docker build. We will add a PyTorch based\nfeature extractor soon.</p>\n<p>Tasks can be executed directly by calling the methods in tasks.py.\nHowever, spacer also supports an interface with SQS\nhandled by <code>sqs_mailman()</code> in <code>mailman.py</code>.</p>\n<p>Spacer supports four storage types: <code>s3</code>, <code>filesystem</code>, <code>memory</code> and <code>url</code>.\nRefer to <code>storage.py</code> for details. The Memory storage is mostly used for\ntesting, and the <code>url</code> storage is read only.</p>\n<p>Also take a look at <code>config.py</code> for settings and configuration.</p>\n<h3>Installation</h3>\n<p>The spacer repo can be installed in three ways.</p>\n<ul>\n<li>Using Docker -- the only option that supports Caffe.</li>\n<li>Local clone -- ideal for fast testing and development.</li>\n<li>Using pip install -- for integration in other code-bases.</li>\n</ul>\n<h4>Config</h4>\n<p>Spacer needs three variables. They can either be set\nas environmental variables (recommended if you <code>pip install</code> the package),\nor in a <code>secrets.json</code> file in the same directory as this README\n(recommended for Docker builds and local clones).\nThe <code>secrets.json</code> should look like this.</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"SPACER_AWS_ACCESS_KEY_ID\"</span><span class=\"p\">:</span> <span class=\"s2\">\"YOUR_AWS_KEY_ID\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"SPACER_AWS_SECRET_ACCESS_KEY\"</span><span class=\"p\">:</span> <span class=\"s2\">\"YOUR_AWS_SECRET_KEY\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"SPACER_LOCAL_MODEL_PATH\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/path/to/your/local/models\"</span>\n<span class=\"p\">}</span>\n</pre>\n<h4>Docker build</h4>\n<p>The docker build is the preferred build and the one used in deployment.</p>\n<ul>\n<li>Install docker on your system</li>\n<li>Create <code>secrets.json</code> as detailed above.</li>\n<li>Create folder <code>/path/to/your/local/models</code> for caching model files.</li>\n<li>Build image: <code>docker build -t spacer:test .</code></li>\n<li>Run: <code>docker run -v /path/to/your/local/models:/workspace/models -v ${PWD}:/workspace/spacer/ -it spacer:test</code></li>\n</ul>\n<p>The <code>-v /path/to/your/local/models:/workspace/models</code> part will make sure\nthe downloaded models are cached to your host storage.\nwhich makes rerunning stuff much faster.</p>\n<p>The <code>-v ${PWD}:/workspace/spacer/</code> mounts your current folder including\n<code>secrets.json</code> so that the container has the right permissions.</p>\n<p>The last step will run the default CMD command specified in the dockerfile\n(unit-test with coverage). If you want to enter the docker container\nrun the same command but append <code>bash</code> in the end:</p>\n<pre><code>docker run -v /path/to/your/local/models:/workspace/models -it spacer:test bash\n</code></pre>\n<h4>Pip install</h4>\n<ul>\n<li><code>pip install spacer</code></li>\n<li>Set environmental variables.</li>\n</ul>\n<h4>Local clone</h4>\n<ul>\n<li>Clone this repo</li>\n<li><code>pip install -r requirements.txt</code></li>\n</ul>\n<h3>Code coverage</h3>\n<p>If you are using the docker build or local install,\nyou can check code coverage like so:</p>\n<pre><code>    coverage run --source=spacer --omit=spacer/tests/* -m unittest    \n    coverage report -m\n    coverage html\n</code></pre>\n\n          </div>"}, "last_serial": 7184910, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "6134f8cc93744da413d500dd309b70fa", "sha256": "bf780edea24e4977d843907d910500969dc530b79257f3dd228ba2635d2a6778"}, "downloads": -1, "filename": "pyspacer-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6134f8cc93744da413d500dd309b70fa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5, <3.7", "size": 32358, "upload_time": "2020-02-29T04:47:22", "upload_time_iso_8601": "2020-02-29T04:47:22.758568Z", "url": "https://files.pythonhosted.org/packages/71/69/447be5472909b953d4608907571d83446dbc766c63f6735bef9f196adfdc/pyspacer-0.0.1-py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "2b21192637a23681a5736acf08f4f604", "sha256": "0aea85af1e92e0b678b6d0a62976d349ddc18df8ffb4eb802b13a866d15e5846"}, "downloads": -1, "filename": "pyspacer-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2b21192637a23681a5736acf08f4f604", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5, <3.7", "size": 33624, "upload_time": "2020-02-29T06:54:37", "upload_time_iso_8601": "2020-02-29T06:54:37.868561Z", "url": "https://files.pythonhosted.org/packages/08/c3/f3c62e0cee355d847caecd2339926449f5bf8f5e4376ccb16a08052d0808/pyspacer-0.0.2-py3-none-any.whl", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "ad0f5b974d94fa44f928fe30be6f7fb5", "sha256": "e5b53fd62e6859e36c327a491244cc8fff4930bd3a55e5c6de8846b00828e581"}, "downloads": -1, "filename": "pyspacer-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ad0f5b974d94fa44f928fe30be6f7fb5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 40046, "upload_time": "2020-04-12T21:28:39", "upload_time_iso_8601": "2020-04-12T21:28:39.733816Z", "url": "https://files.pythonhosted.org/packages/43/3f/551a2f09f44f936380e64441b7b960e2bca747f19add4674e605aebc28e2/pyspacer-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4aa2affb396457aad6b3bef1170d1d2d", "sha256": "79915d48facb4a0b57a608944b693f909a3ccbef80678b6fee72caf30db1b776"}, "downloads": -1, "filename": "pyspacer-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4aa2affb396457aad6b3bef1170d1d2d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 31600, "upload_time": "2020-04-12T21:28:41", "upload_time_iso_8601": "2020-04-12T21:28:41.211679Z", "url": "https://files.pythonhosted.org/packages/8e/84/b781a2cba641e90000c537cbcdb9326ea5d6b8436acdc1352c483f42f4b6/pyspacer-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7296b33e16b35d6d204b18effa767155", "sha256": "d1922bfd51b0520852b0cffe2db18474a8cb69e68d72d16eca817a2d0903c69b"}, "downloads": -1, "filename": "pyspacer-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7296b33e16b35d6d204b18effa767155", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 40128, "upload_time": "2020-04-17T16:41:18", "upload_time_iso_8601": "2020-04-17T16:41:18.332624Z", "url": "https://files.pythonhosted.org/packages/45/41/2512c401c06a86d489ff9bf1b22b282ab62f84f08400106f186f85b7bd9c/pyspacer-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "118458b6c3bb25b81b3da7c12e545648", "sha256": "d89a2bbd857aac9750931c8ab061295f0d7a6b730b6f6ee2d51d6346f164f4d6"}, "downloads": -1, "filename": "pyspacer-0.1.1.tar.gz", "has_sig": false, "md5_digest": "118458b6c3bb25b81b3da7c12e545648", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 31439, "upload_time": "2020-04-17T16:41:20", "upload_time_iso_8601": "2020-04-17T16:41:20.005955Z", "url": "https://files.pythonhosted.org/packages/f8/e2/fc8d02973942d0c8667667fd81290bd2fa9210caa2e0d4ece7a21a9d6b4e/pyspacer-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "8288e407cfa5395df3d4a621ec0d6e07", "sha256": "a8b9e51eec528d17cdc68fe324d3494c28698edcc242b7e641424a5f2608ba49"}, "downloads": -1, "filename": "pyspacer-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8288e407cfa5395df3d4a621ec0d6e07", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 62713, "upload_time": "2020-05-07T02:58:10", "upload_time_iso_8601": "2020-05-07T02:58:10.060772Z", "url": "https://files.pythonhosted.org/packages/32/c4/27100130de4df929597cff28eed9f895bbdc6b180c7962b65d334dc6fc74/pyspacer-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5f4e3e252e69f8837ae9ace57ee0e1e2", "sha256": "288e67412583e75fa3d8676a2a8704d528184877e4fd33688aa603c27cb93fc1"}, "downloads": -1, "filename": "pyspacer-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5f4e3e252e69f8837ae9ace57ee0e1e2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 46774, "upload_time": "2020-05-07T02:58:11", "upload_time_iso_8601": "2020-05-07T02:58:11.458771Z", "url": "https://files.pythonhosted.org/packages/e4/74/c9eedd919cb176c7fe17aaf0a49ca940e953efcf6928cb610a4a9fbca51a/pyspacer-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8288e407cfa5395df3d4a621ec0d6e07", "sha256": "a8b9e51eec528d17cdc68fe324d3494c28698edcc242b7e641424a5f2608ba49"}, "downloads": -1, "filename": "pyspacer-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8288e407cfa5395df3d4a621ec0d6e07", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 62713, "upload_time": "2020-05-07T02:58:10", "upload_time_iso_8601": "2020-05-07T02:58:10.060772Z", "url": "https://files.pythonhosted.org/packages/32/c4/27100130de4df929597cff28eed9f895bbdc6b180c7962b65d334dc6fc74/pyspacer-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5f4e3e252e69f8837ae9ace57ee0e1e2", "sha256": "288e67412583e75fa3d8676a2a8704d528184877e4fd33688aa603c27cb93fc1"}, "downloads": -1, "filename": "pyspacer-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5f4e3e252e69f8837ae9ace57ee0e1e2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 46774, "upload_time": "2020-05-07T02:58:11", "upload_time_iso_8601": "2020-05-07T02:58:11.458771Z", "url": "https://files.pythonhosted.org/packages/e4/74/c9eedd919cb176c7fe17aaf0a49ca940e953efcf6928cb610a4a9fbca51a/pyspacer-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:19 2020"}