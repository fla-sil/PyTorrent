{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "Introduction\n============\n\n|Build Status| |Coverage Status| |PyPI Release|\n\nWhy type:\n\n.. code:: html\n\n   <div class=\"left\" id=\"banner\">\n       Greetings!\n   </div>\n\nwhen you can just type:\n\n.. code:: haml\n\n   .left#banner\n       Greetings!\n\n\u2026 and do something more fun with all the time you save not typing angle\nbrackets and remembering to close tags?\n\nThe syntax above is `Haml <http://www.haml-lang.com>`__ - a templating\nlanguage used extensively in the Ruby on Rails community. This library\nlets Django developers use a Haml like syntax in their templates. It\u2019s\nnot a template engine in itself, but simply a compiler which will\nconvert \u201cHamlPy\u201d files into templates that Django can understand.\n\nThis project is a fork of the no longer maintained\n`HamlPy <https://github.com/jessemiller/HamlPy>`__. It introduces Python\n3 support, support for new Django versions, and a host of new features\nand bug fixes. Note that the package name is now *django-hamlpy*.\n\nInstalling\n----------\n\nThe latest stable version can be installed using\n`pip <http://pypi.python.org/pypi/pip/>`__:\n\n::\n\n   pip install django-hamlpy\n\nAnd the latest development version can be installed directly from\nGitHub:\n\n::\n\n   pip install git+https://github.com/nyaruka/django-hamlpy\n\n**NOTE:** If you run into build errors, then you may need to install\n`python\u2019s development\npackage <http://stackoverflow.com/a/21530768/2896976>`__.\n\nSyntax\n------\n\nAlmost all of the syntax of Haml is preserved.\n\n.. code:: haml\n\n   #profile(style=\"width: 200px\")\n       .left.column\n           #date 2010/02/18\n           #address Toronto, ON\n       .right.column<\n           #bio Jesse Miller\n\nturns into:\n\n.. code:: htmldjango\n\n   <div id='profile' style=\"width: 200px\">\n       <div class='left column'>\n           <div id='date'>2010/02/18</div>\n           <div id='address'>Toronto, ON</div>\n       </div>\n       <div class='right column'><div id='bio'>Jesse Miller</div></div>\n   </div>\n\nThe main difference is instead of interpreting Ruby, or even Python we\ninstead can create Django tags and variables. For example:\n\n.. code:: haml\n\n   %ul#athletes\n       - for athlete in athlete_list\n           %li.athlete{'id': 'athlete_#{ athlete.pk }'}= athlete.name\n\nbecomes\u2026\n\n.. code:: htmldjango\n\n   <ul id='athletes'>\n       {% for athlete in athlete_list %}\n           <li class='athlete' id='athlete_{{ athlete.pk }}'>{{ athlete.name }}</li>\n       {% endfor %}\n   </ul>\n\nUsage\n-----\n\nThere are two different ways to use this library.\n\nOption 1: Template loaders\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThese are Django template loaders which will convert any templates with\n``.haml`` or ``.hamlpy`` extensions to regular Django templates whenever\nthey are requested by a Django view. To use them, add them to the list\nof template loaders in your Django settings, e.g.\n\n.. code:: python\n\n   TEMPLATES=[\n       {\n           'BACKEND': 'django.template.backends.django.DjangoTemplates',\n           'DIRS': ['./templates'],\n           'OPTIONS': {\n               'loaders': (\n                   'hamlpy.template.loaders.HamlPyFilesystemLoader',\n                   'hamlpy.template.loaders.HamlPyAppDirectoriesLoader',\n                   ...\n               ), \n           }\n       }\n   ]\n\nEnsure they are listed before the standard Django template loaders or\nthese loaders will try to process your Haml templates.\n\nTemplate caching\n^^^^^^^^^^^^^^^^\n\nYou can use these loaders with template caching - just add\n``django.template.loaders.cached.Loader`` to your list of loaders, e.g.\n\n.. code:: python\n\n   'loaders': (\n       ('django.template.loaders.cached.Loader', (\n           'hamlpy.template.loaders.HamlPyFilesystemLoader',\n           'hamlpy.template.loaders.HamlPyAppDirectoriesLoader',\n           ...\n       )),\n   )\n\nSettings\n^^^^^^^^\n\nYou can configure the Haml compiler with the following Django settings:\n\n-  ``HAMLPY_ATTR_WRAPPER`` \u2013 The character that should wrap element\n   attributes. Defaults to ``'`` (an apostrophe).\n-  ``HAMLPY_DJANGO_INLINE_STYLE`` \u2013 Whether to support ``={...}`` syntax\n   for inline variables in addition to ``#{...}``. Defaults to\n   ``False``.\n\nOption 2: Watcher\n~~~~~~~~~~~~~~~~~\n\nThe library can also be used as a stand-alone program. There is a\nwatcher script which will monitor Haml files in a given directory and\nconvert them to HTML as they are edited.\n\n::\n\n   usage: hamlpy_watcher.py [-h] [-v] [-i EXT [EXT ...]] [-ext EXT] [-r S]\n                            [--tag TAG] [--attr-wrapper {\",'}] [--django-inline]\n                            [--jinja] [--once]\n                            input_dir [output_dir]\n\n   positional arguments:\n     input_dir             Folder to watch\n     output_dir            Destination folder\n\n   optional arguments:\n     -h, --help            show this help message and exit\n     -v, --verbose         Display verbose output\n     -i EXT [EXT ...], --input-extension EXT [EXT ...]\n                           The file extensions to look for.\n     -ext EXT, --extension EXT\n                           The output file extension. Default is .html\n     -r S, --refresh S     Refresh interval for files. Default is 3 seconds.\n                           Ignored if the --once flag is set.\n     --tag TAG             Add self closing tag. eg. --tag macro:endmacro\n     --attr-wrapper {\",'}  The character that should wrap element attributes.\n                           This defaults to ' (an apostrophe).\n     --django-inline       Whether to support ={...} syntax for inline variables\n                           in addition to #{...}\n     --jinja               Makes the necessary changes to be used with Jinja2.\n     --once                Runs the compiler once and exits on completion.\n                           Returns a non-zero exit code if there were any compile\n                           errors.\n\nCreate message files for translation\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nHamlPy must first be included in Django\u2019s list of apps, i.e.\n\n.. code:: python\n\n   INSTALLED_APPS = [\n     ...\n     'hamlpy'\n     ...\n   ]\n\nThen just include your Haml templates along with all the other files\nwhich contain translatable strings, e.g.\n\n.. code:: bash\n\n   python manage.py makemessages --extension haml,html,py,txt\n\nReference\n---------\n\nCheck out the\n`reference <http://github.com/nyaruka/django-hamlpy/blob/master/REFERENCE.md>`__\nfile for the complete syntax reference and more examples.\n\nClass Based Views\n-----------------\n\nThis library also provides `the same class based generic views than\ndjango <https://docs.djangoproject.com/en/1.10/topics/class-based-views/generic-display/>`__\nwith the enhancement that they start by looking for templates endings\nwith ``*.haml`` and ``*.hamlpy`` in addition to their default templates.\nApart from that, they are exactly the same class based generic views.\nFor example:\n\n.. code:: python\n\n   from hamlpy.views.generic import DetailView, ListView\n   from my_app.models import SomeModel\n\n   # will look for the templates `my_app/somemodel_detail.haml`,\n   # `my_app/somemodel_detail.hamlpy` and  `my_app/somemodel_detail.html`\n   DetailView.as_view(model=SomeModel)\n\n   # will look for the templates `my_app/somemodel_list.haml`,\n   # `my_app/somemodel_list.hamlpy` and  `my_app/somemodel_list.html`\n   ListView.as_view(model=SomeModel)\n\nThe available view classes are:\n\nDisplay views:\n\n-  `DetailView <https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#detailview>`__\n-  `ListView <https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#listview>`__\n\nEdit views:\n\n-  `CreateView <https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#createview>`__\n-  `UpdateView <https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#updateview>`__\n-  `DeleteView <https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#deleteview>`__\n\nDate related views:\n\n-  `DateDetailView <https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#datedetailview>`__\n-  `ArchiveIndexView <https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#archiveindexview>`__\n-  `YearArchiveView <https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#yeararchiveview>`__\n-  `MonthArchiveView <https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#montharchiveview>`__\n-  `WeekArchiveView <https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#weekarchiveview>`__\n-  `DayArchiveView <https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#dayarchiveview>`__\n-  `TodayArchiveView <https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#todayarchiveview>`__\n\nAll views are importable from ``hamlpy.views.generic`` and are built\nusing the ``HamlExtensionTemplateView`` mixin which you can use to\ncreate your own custom Haml-using views. For example:\n\n.. code:: python\n\n   from hamlpy.views.generic import HamlExtensionTemplateView\n\n   class MyNewView(HamlExtensionTemplateView, ParentViewType):\n       pass\n\n**Note**: ``HamlExtensionTemplateView`` *needs* to be first in the\ninheritance list.\n\nContributing\n------------\n\nWe\u2019re always happy to have contributions to this project. To get started\nyou\u2019ll need to clone the project and install the dependencies:\n\n::\n\n   virtualenv env\n   source env/bin/activate\n   pip install -r requirements/base.txt\n   pip install -r requirements/tests.txt\n\nPlease write tests for any new features and always ensure the current\ntests pass. To run the tests, use:\n\n::\n\n   py.test hamlpy  \n\nTo run the performance test, use:\n\n::\n\n   python -m hamlpy.test.test_templates\n\n.. |Build Status| image:: https://travis-ci.org/nyaruka/django-hamlpy.svg?branch=master\n   :target: https://travis-ci.org/nyaruka/django-hamlpy\n.. |Coverage Status| image:: https://coveralls.io/repos/github/nyaruka/django-hamlpy/badge.svg?branch=master\n   :target: https://coveralls.io/github/nyaruka/django-hamlpy?branch=master\n.. |PyPI Release| image:: https://img.shields.io/pypi/v/django-hamlpy.svg\n   :target: https://pypi.python.org/pypi/django-hamlpy/\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/nyaruka/django-hamlpy", "keywords": "haml django converter", "license": "MIT", "maintainer": "Nyaruka", "maintainer_email": "code@nyaruka.com", "name": "django-hamlpy", "package_url": "https://pypi.org/project/django-hamlpy/", "platform": "", "project_url": "https://pypi.org/project/django-hamlpy/", "project_urls": {"Homepage": "http://github.com/nyaruka/django-hamlpy"}, "release_url": "https://pypi.org/project/django-hamlpy/1.2/", "requires_dist": ["django", "regex"], "requires_python": "", "summary": "Haml like syntax for Django templates.", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/nyaruka/django-hamlpy\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2d1788a8d2b04ab340834532b719fd3b1528ddc2/68747470733a2f2f7472617669732d63692e6f72672f6e796172756b612f646a616e676f2d68616d6c70792e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/github/nyaruka/django-hamlpy?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4a7f4df25d4a200a90cef4677a3ea101be3f91dd/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6e796172756b612f646a616e676f2d68616d6c70792f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.python.org/pypi/django-hamlpy/\" rel=\"nofollow\"><img alt=\"PyPI Release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8e5b8899fc2bd8bbaf04890fde1bf4199ee6ad6b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d68616d6c70792e737667\"></a></p>\n<p>Why type:</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"left\"</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">\"banner\"</span><span class=\"p\">&gt;</span>\n    Greetings!\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre>\n<p>when you can just type:</p>\n<pre><span class=\"nc\">.left</span><span class=\"nf\">#banner</span>\n    Greetings!\n</pre>\n<p>\u2026 and do something more fun with all the time you save not typing angle\nbrackets and remembering to close tags?</p>\n<p>The syntax above is <a href=\"http://www.haml-lang.com\" rel=\"nofollow\">Haml</a> - a templating\nlanguage used extensively in the Ruby on Rails community. This library\nlets Django developers use a Haml like syntax in their templates. It\u2019s\nnot a template engine in itself, but simply a compiler which will\nconvert \u201cHamlPy\u201d files into templates that Django can understand.</p>\n<p>This project is a fork of the no longer maintained\n<a href=\"https://github.com/jessemiller/HamlPy\" rel=\"nofollow\">HamlPy</a>. It introduces Python\n3 support, support for new Django versions, and a host of new features\nand bug fixes. Note that the package name is now <em>django-hamlpy</em>.</p>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>The latest stable version can be installed using\n<a href=\"http://pypi.python.org/pypi/pip/\" rel=\"nofollow\">pip</a>:</p>\n<pre>pip install django-hamlpy\n</pre>\n<p>And the latest development version can be installed directly from\nGitHub:</p>\n<pre>pip install git+https://github.com/nyaruka/django-hamlpy\n</pre>\n<p><strong>NOTE:</strong> If you run into build errors, then you may need to install\n<a href=\"http://stackoverflow.com/a/21530768/2896976\" rel=\"nofollow\">python\u2019s development\npackage</a>.</p>\n</div>\n<div id=\"syntax\">\n<h2>Syntax</h2>\n<p>Almost all of the syntax of Haml is preserved.</p>\n<pre><span class=\"nf\">#profile</span>(<span class=\"na\">style=</span><span class=\"s\">\"width: 200px\"</span>)\n    <span class=\"nc\">.left.column</span>\n        <span class=\"nf\">#date</span> 2010/02/18\n        <span class=\"nf\">#address</span> Toronto, ON\n    <span class=\"nc\">.right.column</span>&lt;\n        <span class=\"nf\">#bio</span> Jesse Miller\n</pre>\n<p>turns into:</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">'profile'</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\"width: 200px\"</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">'left column'</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">'date'</span><span class=\"p\">&gt;</span>2010/02/18<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">'address'</span><span class=\"p\">&gt;</span>Toronto, ON<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">'right column'</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">'bio'</span><span class=\"p\">&gt;</span>Jesse Miller<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre>\n<p>The main difference is instead of interpreting Ruby, or even Python we\ninstead can create Django tags and variables. For example:</p>\n<pre><span class=\"nt\">%ul</span><span class=\"nf\">#athletes</span>\n    <span class=\"p\">-</span> <span class=\"k\">for</span> <span class=\"n\">athlete</span> <span class=\"k\">in</span> <span class=\"n\">athlete_list</span>\n        <span class=\"nt\">%li</span><span class=\"nc\">.athlete</span><span class=\"p\">{</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"err\">'</span><span class=\"n\">athlete_</span><span class=\"c1\">#{ athlete.pk }</span>'}= athlete.name\n</pre>\n<p>becomes\u2026</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">ul</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">'athletes'</span><span class=\"p\">&gt;</span>\n    <span class=\"cp\">{%</span> <span class=\"k\">for</span> <span class=\"nv\">athlete</span> <span class=\"k\">in</span> <span class=\"nv\">athlete_list</span> <span class=\"cp\">%}</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">li</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">'athlete'</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">'athlete_</span><span class=\"cp\">{{</span> <span class=\"nv\">athlete.pk</span> <span class=\"cp\">}}</span><span class=\"s\">'</span><span class=\"p\">&gt;</span><span class=\"cp\">{{</span> <span class=\"nv\">athlete.name</span> <span class=\"cp\">}}</span><span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n    <span class=\"cp\">{%</span> <span class=\"k\">endfor</span> <span class=\"cp\">%}</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>There are two different ways to use this library.</p>\n<div id=\"option-1-template-loaders\">\n<h3>Option 1: Template loaders</h3>\n<p>These are Django template loaders which will convert any templates with\n<tt>.haml</tt> or <tt>.hamlpy</tt> extensions to regular Django templates whenever\nthey are requested by a Django view. To use them, add them to the list\nof template loaders in your Django settings, e.g.</p>\n<pre><span class=\"n\">TEMPLATES</span><span class=\"o\">=</span><span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'BACKEND'</span><span class=\"p\">:</span> <span class=\"s1\">'django.template.backends.django.DjangoTemplates'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'DIRS'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'./templates'</span><span class=\"p\">],</span>\n        <span class=\"s1\">'OPTIONS'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'loaders'</span><span class=\"p\">:</span> <span class=\"p\">(</span>\n                <span class=\"s1\">'hamlpy.template.loaders.HamlPyFilesystemLoader'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'hamlpy.template.loaders.HamlPyAppDirectoriesLoader'</span><span class=\"p\">,</span>\n                <span class=\"o\">...</span>\n            <span class=\"p\">),</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Ensure they are listed before the standard Django template loaders or\nthese loaders will try to process your Haml templates.</p>\n<div id=\"template-caching\">\n<h4>Template caching</h4>\n<p>You can use these loaders with template caching - just add\n<tt>django.template.loaders.cached.Loader</tt> to your list of loaders, e.g.</p>\n<pre><span class=\"s1\">'loaders'</span><span class=\"p\">:</span> <span class=\"p\">(</span>\n    <span class=\"p\">(</span><span class=\"s1\">'django.template.loaders.cached.Loader'</span><span class=\"p\">,</span> <span class=\"p\">(</span>\n        <span class=\"s1\">'hamlpy.template.loaders.HamlPyFilesystemLoader'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'hamlpy.template.loaders.HamlPyAppDirectoriesLoader'</span><span class=\"p\">,</span>\n        <span class=\"o\">...</span>\n    <span class=\"p\">)),</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"settings\">\n<h4>Settings</h4>\n<p>You can configure the Haml compiler with the following Django settings:</p>\n<ul>\n<li><tt>HAMLPY_ATTR_WRAPPER</tt> \u2013 The character that should wrap element\nattributes. Defaults to <tt>'</tt> (an apostrophe).</li>\n<li><tt>HAMLPY_DJANGO_INLINE_STYLE</tt> \u2013 Whether to support <tt><span class=\"pre\">={...}</span></tt> syntax\nfor inline variables in addition to <tt><span class=\"pre\">#{...}</span></tt>. Defaults to\n<tt>False</tt>.</li>\n</ul>\n</div>\n</div>\n<div id=\"option-2-watcher\">\n<h3>Option 2: Watcher</h3>\n<p>The library can also be used as a stand-alone program. There is a\nwatcher script which will monitor Haml files in a given directory and\nconvert them to HTML as they are edited.</p>\n<pre>usage: hamlpy_watcher.py [-h] [-v] [-i EXT [EXT ...]] [-ext EXT] [-r S]\n                         [--tag TAG] [--attr-wrapper {\",'}] [--django-inline]\n                         [--jinja] [--once]\n                         input_dir [output_dir]\n\npositional arguments:\n  input_dir             Folder to watch\n  output_dir            Destination folder\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --verbose         Display verbose output\n  -i EXT [EXT ...], --input-extension EXT [EXT ...]\n                        The file extensions to look for.\n  -ext EXT, --extension EXT\n                        The output file extension. Default is .html\n  -r S, --refresh S     Refresh interval for files. Default is 3 seconds.\n                        Ignored if the --once flag is set.\n  --tag TAG             Add self closing tag. eg. --tag macro:endmacro\n  --attr-wrapper {\",'}  The character that should wrap element attributes.\n                        This defaults to ' (an apostrophe).\n  --django-inline       Whether to support ={...} syntax for inline variables\n                        in addition to #{...}\n  --jinja               Makes the necessary changes to be used with Jinja2.\n  --once                Runs the compiler once and exits on completion.\n                        Returns a non-zero exit code if there were any compile\n                        errors.\n</pre>\n</div>\n<div id=\"create-message-files-for-translation\">\n<h3>Create message files for translation</h3>\n<p>HamlPy must first be included in Django\u2019s list of apps, i.e.</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n  <span class=\"o\">...</span>\n  <span class=\"s1\">'hamlpy'</span>\n  <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Then just include your Haml templates along with all the other files\nwhich contain translatable strings, e.g.</p>\n<pre>python manage.py makemessages --extension haml,html,py,txt\n</pre>\n</div>\n</div>\n<div id=\"reference\">\n<h2>Reference</h2>\n<p>Check out the\n<a href=\"http://github.com/nyaruka/django-hamlpy/blob/master/REFERENCE.md\" rel=\"nofollow\">reference</a>\nfile for the complete syntax reference and more examples.</p>\n</div>\n<div id=\"class-based-views\">\n<h2>Class Based Views</h2>\n<p>This library also provides <a href=\"https://docs.djangoproject.com/en/1.10/topics/class-based-views/generic-display/\" rel=\"nofollow\">the same class based generic views than\ndjango</a>\nwith the enhancement that they start by looking for templates endings\nwith <tt>*.haml</tt> and <tt>*.hamlpy</tt> in addition to their default templates.\nApart from that, they are exactly the same class based generic views.\nFor example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">hamlpy.views.generic</span> <span class=\"kn\">import</span> <span class=\"n\">DetailView</span><span class=\"p\">,</span> <span class=\"n\">ListView</span>\n<span class=\"kn\">from</span> <span class=\"nn\">my_app.models</span> <span class=\"kn\">import</span> <span class=\"n\">SomeModel</span>\n\n<span class=\"c1\"># will look for the templates `my_app/somemodel_detail.haml`,</span>\n<span class=\"c1\"># `my_app/somemodel_detail.hamlpy` and  `my_app/somemodel_detail.html`</span>\n<span class=\"n\">DetailView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">SomeModel</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># will look for the templates `my_app/somemodel_list.haml`,</span>\n<span class=\"c1\"># `my_app/somemodel_list.hamlpy` and  `my_app/somemodel_list.html`</span>\n<span class=\"n\">ListView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">SomeModel</span><span class=\"p\">)</span>\n</pre>\n<p>The available view classes are:</p>\n<p>Display views:</p>\n<ul>\n<li><a href=\"https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#detailview\" rel=\"nofollow\">DetailView</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#listview\" rel=\"nofollow\">ListView</a></li>\n</ul>\n<p>Edit views:</p>\n<ul>\n<li><a href=\"https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#createview\" rel=\"nofollow\">CreateView</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#updateview\" rel=\"nofollow\">UpdateView</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#deleteview\" rel=\"nofollow\">DeleteView</a></li>\n</ul>\n<p>Date related views:</p>\n<ul>\n<li><a href=\"https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#datedetailview\" rel=\"nofollow\">DateDetailView</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#archiveindexview\" rel=\"nofollow\">ArchiveIndexView</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#yeararchiveview\" rel=\"nofollow\">YearArchiveView</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#montharchiveview\" rel=\"nofollow\">MonthArchiveView</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#weekarchiveview\" rel=\"nofollow\">WeekArchiveView</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#dayarchiveview\" rel=\"nofollow\">DayArchiveView</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/1.10/ref/class-based-views/generic-display/#todayarchiveview\" rel=\"nofollow\">TodayArchiveView</a></li>\n</ul>\n<p>All views are importable from <tt>hamlpy.views.generic</tt> and are built\nusing the <tt>HamlExtensionTemplateView</tt> mixin which you can use to\ncreate your own custom Haml-using views. For example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">hamlpy.views.generic</span> <span class=\"kn\">import</span> <span class=\"n\">HamlExtensionTemplateView</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyNewView</span><span class=\"p\">(</span><span class=\"n\">HamlExtensionTemplateView</span><span class=\"p\">,</span> <span class=\"n\">ParentViewType</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p><strong>Note</strong>: <tt>HamlExtensionTemplateView</tt> <em>needs</em> to be first in the\ninheritance list.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>We\u2019re always happy to have contributions to this project. To get started\nyou\u2019ll need to clone the project and install the dependencies:</p>\n<pre>virtualenv env\nsource env/bin/activate\npip install -r requirements/base.txt\npip install -r requirements/tests.txt\n</pre>\n<p>Please write tests for any new features and always ensure the current\ntests pass. To run the tests, use:</p>\n<pre>py.test hamlpy\n</pre>\n<p>To run the performance test, use:</p>\n<pre>python -m hamlpy.test.test_templates\n</pre>\n</div>\n\n          </div>"}, "last_serial": 5608167, "releases": {"0.83": [{"comment_text": "", "digests": {"md5": "bb72898cc1d278e417841329f363d8c4", "sha256": "e817eef04d25680aba50629ad157e804a0ca985917dbc0184898082dcb2e3c1b"}, "downloads": -1, "filename": "django_hamlpy-0.83-py2.7.egg", "has_sig": false, "md5_digest": "bb72898cc1d278e417841329f363d8c4", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 17531, "upload_time": "2016-09-23T22:08:04", "upload_time_iso_8601": "2016-09-23T22:08:04.868148Z", "url": "https://files.pythonhosted.org/packages/c1/fb/a62de0f92412b3ccbb10e7cc5cc9176718aea923f91b835f4e3fd611c424/django_hamlpy-0.83-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "8fa6ae5b9c2690206cc7ad1892f2f68a", "sha256": "95bbf5fc20d11200550923660d1f7623c37ac2021ebd9f046a1e3702ca0887ac"}, "downloads": -1, "filename": "django_hamlpy-0.83-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8fa6ae5b9c2690206cc7ad1892f2f68a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 21677, "upload_time": "2016-09-23T22:08:02", "upload_time_iso_8601": "2016-09-23T22:08:02.347773Z", "url": "https://files.pythonhosted.org/packages/02/d2/2b641e7703c5afa67f9a745b4a3425f2e48f194b12bb39147d61afbeb3f0/django_hamlpy-0.83-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8e7be1d5f7ec7a476dfe93b4293f698", "sha256": "7840874f82f018d646467ca0ebb77dbf25f8e0794d396cc2e49908e25e9f10fd"}, "downloads": -1, "filename": "django-hamlpy-0.83.tar.gz", "has_sig": false, "md5_digest": "b8e7be1d5f7ec7a476dfe93b4293f698", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17621, "upload_time": "2016-09-23T22:07:59", "upload_time_iso_8601": "2016-09-23T22:07:59.779403Z", "url": "https://files.pythonhosted.org/packages/4b/93/f65fe93eb0fc79c34ae22b7d114c39a56b4a2b5b4e6670b69d23a3f9f7e6/django-hamlpy-0.83.tar.gz", "yanked": false}], "0.84": [{"comment_text": "", "digests": {"md5": "68cf0947ec0c6c171135b81899765767", "sha256": "85a321b2523c2bd86ae0bdc6130f2b6025fe3aa5221aecec7a8b78935d458e82"}, "downloads": -1, "filename": "django_hamlpy-0.84-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "68cf0947ec0c6c171135b81899765767", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 24423, "upload_time": "2016-09-25T00:31:10", "upload_time_iso_8601": "2016-09-25T00:31:10.795514Z", "url": "https://files.pythonhosted.org/packages/c1/75/af4f576cc4965ecb0c4e8e2770a5b1ee3d93be823f167efdecc823fb3718/django_hamlpy-0.84-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08d6fa1b15f111d011b2bd6a3cffa651", "sha256": "bbf0edc70e5e5bf8b031858d51eef6b5b7ec3a28629544cffd9ea15a3c2e42a7"}, "downloads": -1, "filename": "django-hamlpy-0.84.tar.gz", "has_sig": false, "md5_digest": "08d6fa1b15f111d011b2bd6a3cffa651", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20201, "upload_time": "2016-09-25T00:31:05", "upload_time_iso_8601": "2016-09-25T00:31:05.410468Z", "url": "https://files.pythonhosted.org/packages/44/5a/3aee1c968137a5c638c6b2d1647753f0c65904363e5b96e00e5dc6df14ed/django-hamlpy-0.84.tar.gz", "yanked": false}], "0.85": [{"comment_text": "", "digests": {"md5": "f81d12e0ef4a8b0c5dc189d4801fe0d8", "sha256": "56da765bd678e120268ddbcb55c9c76dfad14dbd61d277265354f7ef590fe674"}, "downloads": -1, "filename": "django_hamlpy-0.85-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f81d12e0ef4a8b0c5dc189d4801fe0d8", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 25177, "upload_time": "2016-10-13T14:37:19", "upload_time_iso_8601": "2016-10-13T14:37:19.688104Z", "url": "https://files.pythonhosted.org/packages/8e/13/28c69965ea8840e7175c9928c8b45f8990770c748ba91a649acae80c7f2f/django_hamlpy-0.85-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "078066c32be31aa7c04671ba5a769850", "sha256": "19677349d8da239fc27e2aa69ec485e6599df88052a3e420a06a147fadc40cab"}, "downloads": -1, "filename": "django-hamlpy-0.85.tar.gz", "has_sig": false, "md5_digest": "078066c32be31aa7c04671ba5a769850", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22501, "upload_time": "2016-10-13T14:37:17", "upload_time_iso_8601": "2016-10-13T14:37:17.098277Z", "url": "https://files.pythonhosted.org/packages/7f/8e/3ec95771325e20156e72b4f22d40f18adf684a5a7d88d95401037db800a4/django-hamlpy-0.85.tar.gz", "yanked": false}], "0.86": [{"comment_text": "", "digests": {"md5": "414509afd5354a3ff5d2e42eb4a507d2", "sha256": "faa14b56d5275de7d2d7bc61bfe561af5a1dd6502b0f70b8850e8e808b73ce34"}, "downloads": -1, "filename": "django_hamlpy-0.86-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "414509afd5354a3ff5d2e42eb4a507d2", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 36266, "upload_time": "2016-11-11T13:37:35", "upload_time_iso_8601": "2016-11-11T13:37:35.895522Z", "url": "https://files.pythonhosted.org/packages/f4/18/4f0c8fd7027ff9275ede47692c0ddd860ab321aae34cdd9f960e672490ae/django_hamlpy-0.86-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "83d66ffac8081ad8b2307cf68f9ce4dd", "sha256": "e6fb30d38a0496132f0152f9ac9c136bd49a10ae335850e193ea0a34ecc8e78a"}, "downloads": -1, "filename": "django-hamlpy-0.86.tar.gz", "has_sig": false, "md5_digest": "83d66ffac8081ad8b2307cf68f9ce4dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30912, "upload_time": "2016-11-11T13:37:32", "upload_time_iso_8601": "2016-11-11T13:37:32.406480Z", "url": "https://files.pythonhosted.org/packages/ad/3a/6d92c59103fa530c264a870ffd61c0fe1caf20e23e3c689bc4754260a506/django-hamlpy-0.86.tar.gz", "yanked": false}], "0.86.1": [{"comment_text": "", "digests": {"md5": "477cb46ca44b02d115276de97d2347b7", "sha256": "2a1ad2e71d822570273a2e7df7203872e4d27a07847ca05c88514425f09e100b"}, "downloads": -1, "filename": "django_hamlpy-0.86.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "477cb46ca44b02d115276de97d2347b7", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 36303, "upload_time": "2016-11-15T00:11:47", "upload_time_iso_8601": "2016-11-15T00:11:47.034633Z", "url": "https://files.pythonhosted.org/packages/f8/91/1336acb9bed6f0a1a5a9b3806afd4ebe028151e1ed00e1d8a3a79565ea53/django_hamlpy-0.86.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b07988fbf6c8bba01fdf81603cd80b7", "sha256": "cb4059e0232b444f0e568c42de83fe8143260b59c1da3865af78deea51d4cc29"}, "downloads": -1, "filename": "django-hamlpy-0.86.1.tar.gz", "has_sig": false, "md5_digest": "8b07988fbf6c8bba01fdf81603cd80b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30930, "upload_time": "2016-11-15T00:11:44", "upload_time_iso_8601": "2016-11-15T00:11:44.426622Z", "url": "https://files.pythonhosted.org/packages/c4/27/832b002f188ff9dfa0046db92597c16dd94cb3a89651a14ebab77f189dae/django-hamlpy-0.86.1.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "c1016069de61bc42607d095ef08becee", "sha256": "85592e77aaa572d816efc696506ce16a543184f415bd66daf516f41e028c1024"}, "downloads": -1, "filename": "django_hamlpy-1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c1016069de61bc42607d095ef08becee", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 44123, "upload_time": "2016-12-14T05:49:34", "upload_time_iso_8601": "2016-12-14T05:49:34.889366Z", "url": "https://files.pythonhosted.org/packages/1c/31/3a080aad1fece27db37caff74c4955e71ca6f252141c7ec2d8e1e8855df8/django_hamlpy-1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc64e39d959a3c57d052b126d172e417", "sha256": "0e3d8737c37972c4fcc74ec38af228029e4b92fddbf7ba2468b0a274346ba70e"}, "downloads": -1, "filename": "django-hamlpy-1.0.tar.gz", "has_sig": false, "md5_digest": "fc64e39d959a3c57d052b126d172e417", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34792, "upload_time": "2016-12-14T05:49:31", "upload_time_iso_8601": "2016-12-14T05:49:31.161916Z", "url": "https://files.pythonhosted.org/packages/4d/c8/6f639e83a3d739095b955d5e386e38032ce98eee4491a02a2ac6278e482e/django-hamlpy-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "933728332c71b23077827af0c8699ac8", "sha256": "af4c6b02840c6df6c2d6f5354a571300399a8fa3f8d9de9481575d5ca88514b4"}, "downloads": -1, "filename": "django_hamlpy-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "933728332c71b23077827af0c8699ac8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 44310, "upload_time": "2017-01-26T11:01:42", "upload_time_iso_8601": "2017-01-26T11:01:42.396448Z", "url": "https://files.pythonhosted.org/packages/7a/0b/5478d5d9af5b21197197ab7e6af7d2c1fbab5fa9070bf262f394ba5efd11/django_hamlpy-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "23ba956c44292ff49ac31b0bf6b475f8", "sha256": "7f1aa2050377f8912d876b227da28f8691dea360214c62d4cab16fa7052f5ca1"}, "downloads": -1, "filename": "django-hamlpy-1.0.1.tar.gz", "has_sig": false, "md5_digest": "23ba956c44292ff49ac31b0bf6b475f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34949, "upload_time": "2017-01-26T11:01:38", "upload_time_iso_8601": "2017-01-26T11:01:38.504527Z", "url": "https://files.pythonhosted.org/packages/d4/a6/ab94b7fd486ce3140cdf8691f38cbd8544b3d7efda30a8817c8b683ca25a/django-hamlpy-1.0.1.tar.gz", "yanked": false}], "1.0a1": [{"comment_text": "", "digests": {"md5": "c0ff4b15e0f4aff791ef681ed4114043", "sha256": "f6aff1b38a80f24574345816d390de9b5c1bafc6daef6519a5f2035903422bc2"}, "downloads": -1, "filename": "django_hamlpy-1.0a1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c0ff4b15e0f4aff791ef681ed4114043", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 41254, "upload_time": "2016-12-08T08:50:43", "upload_time_iso_8601": "2016-12-08T08:50:43.007076Z", "url": "https://files.pythonhosted.org/packages/5e/13/80440ebceae0f60688c6eb23c79a3ee94cc2cb1ad425ddc32ff7d3de5a35/django_hamlpy-1.0a1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee1bda99ecefffac5b82e0b39d643108", "sha256": "5e0f663d763170af9f1759c9f7b32b463e17c34ab91e41090f3a7d2fd14050f8"}, "downloads": -1, "filename": "django-hamlpy-1.0a1.tar.gz", "has_sig": false, "md5_digest": "ee1bda99ecefffac5b82e0b39d643108", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33324, "upload_time": "2016-12-08T08:50:39", "upload_time_iso_8601": "2016-12-08T08:50:39.557966Z", "url": "https://files.pythonhosted.org/packages/1b/90/47ffd9cad7565b5c61c8d1c47168f496dc1c96ea5060f7054743dc7ad255/django-hamlpy-1.0a1.tar.gz", "yanked": false}], "1.0b1": [{"comment_text": "", "digests": {"md5": "b984b38bed188df86eac624a07012ceb", "sha256": "d82e495e01bc7997b1eb8353dd19a0b3dc923d45d38f0f7e9fa3300888fc34c0"}, "downloads": -1, "filename": "django_hamlpy-1.0b1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b984b38bed188df86eac624a07012ceb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 41314, "upload_time": "2016-12-09T09:26:17", "upload_time_iso_8601": "2016-12-09T09:26:17.106493Z", "url": "https://files.pythonhosted.org/packages/24/ac/2015b64b8d8e27df20425ce021aab9a8bb27419e322ab898582a65ff8ec4/django_hamlpy-1.0b1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29887dd3fb2640d5061f7b4d9bbd8cea", "sha256": "eecc6ddeec43ef3fe0563df270b966426065a7dbd62fbf70a7fcdf8ada2f444d"}, "downloads": -1, "filename": "django-hamlpy-1.0b1.tar.gz", "has_sig": false, "md5_digest": "29887dd3fb2640d5061f7b4d9bbd8cea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33424, "upload_time": "2016-12-09T09:26:13", "upload_time_iso_8601": "2016-12-09T09:26:13.393849Z", "url": "https://files.pythonhosted.org/packages/87/98/67e9a9cb99c74e6e613bc2b29903a0148b3a89bff1de80e8b461fb3cc3c5/django-hamlpy-1.0b1.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "3f89ccf8acb01f2b23328800c7eee98e", "sha256": "adb20b200069c96ffc9580270176489807e0b55698a08cfc7a7a90119ef90177"}, "downloads": -1, "filename": "django_hamlpy-1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3f89ccf8acb01f2b23328800c7eee98e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 47789, "upload_time": "2017-03-20T07:47:43", "upload_time_iso_8601": "2017-03-20T07:47:43.770903Z", "url": "https://files.pythonhosted.org/packages/f6/d4/772756b8d052222259b222313d343027460059e6b516f64a9b0810950cdd/django_hamlpy-1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c0a8adb7cc08f7bb55fb1d4317f17fa", "sha256": "c0fdea1065a18fcc9c10c19d841fdc9435d8797826eb46a1896b6fe4d1e5fd45"}, "downloads": -1, "filename": "django-hamlpy-1.1.tar.gz", "has_sig": false, "md5_digest": "5c0a8adb7cc08f7bb55fb1d4317f17fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37792, "upload_time": "2017-03-20T07:47:39", "upload_time_iso_8601": "2017-03-20T07:47:39.826344Z", "url": "https://files.pythonhosted.org/packages/bb/31/b8d81463d699e7a3d0c712e6a2527921a773f02c33ff5bcad36bc6218831/django-hamlpy-1.1.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "846de4e8ea762c8fd56d3e429593ce03", "sha256": "ac899cfc0595b228b4fa71d0d6bb9c02697d8ef68488e15e6798333f4e5a3abd"}, "downloads": -1, "filename": "django_hamlpy-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "846de4e8ea762c8fd56d3e429593ce03", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 46457, "upload_time": "2017-05-29T15:13:18", "upload_time_iso_8601": "2017-05-29T15:13:18.470925Z", "url": "https://files.pythonhosted.org/packages/88/01/de9a9f2c1e572f3fee2e511d2f34dac661d3d4bb00d88f1a8f2c53814ec4/django_hamlpy-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "40c4f752d709aac64e8315aa1488bf0b", "sha256": "90c4db413b9ab71b0a06daeb01181e935e06d053cfbe91fcf2c2ca7d5df6aaa2"}, "downloads": -1, "filename": "django-hamlpy-1.1.1.tar.gz", "has_sig": false, "md5_digest": "40c4f752d709aac64e8315aa1488bf0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37654, "upload_time": "2017-05-29T15:13:20", "upload_time_iso_8601": "2017-05-29T15:13:20.023165Z", "url": "https://files.pythonhosted.org/packages/dd/01/b36511549433082cc7b927fbdef81066acd0c2b2a927ab7556e63adda5c1/django-hamlpy-1.1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "fdfe32d94317e8dccfe68f744913461a", "sha256": "5d183aa0e974f321ced9073c2f2313a53f511894105ed3e274c56c87eddb740b"}, "downloads": -1, "filename": "django_hamlpy-1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fdfe32d94317e8dccfe68f744913461a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 41723, "upload_time": "2018-12-05T19:43:44", "upload_time_iso_8601": "2018-12-05T19:43:44.170583Z", "url": "https://files.pythonhosted.org/packages/aa/4b/3d3dc47f34056e455827befa33bbf9b9741810fd929cdf7c21ee01ce3dfe/django_hamlpy-1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "daf64412397724204a26ff01095f34be", "sha256": "9134927bcfe2f01e0d21f47221acbaa32fd1ed4649f3ef115759aaaddaf01a36"}, "downloads": -1, "filename": "django-hamlpy-1.2.tar.gz", "has_sig": false, "md5_digest": "daf64412397724204a26ff01095f34be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34107, "upload_time": "2018-12-05T19:43:46", "upload_time_iso_8601": "2018-12-05T19:43:46.163104Z", "url": "https://files.pythonhosted.org/packages/73/2d/f96d66b82fa318e1bbd3ada2a095592e53a359cd9f983896e18876c0d6bd/django-hamlpy-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fdfe32d94317e8dccfe68f744913461a", "sha256": "5d183aa0e974f321ced9073c2f2313a53f511894105ed3e274c56c87eddb740b"}, "downloads": -1, "filename": "django_hamlpy-1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fdfe32d94317e8dccfe68f744913461a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 41723, "upload_time": "2018-12-05T19:43:44", "upload_time_iso_8601": "2018-12-05T19:43:44.170583Z", "url": "https://files.pythonhosted.org/packages/aa/4b/3d3dc47f34056e455827befa33bbf9b9741810fd929cdf7c21ee01ce3dfe/django_hamlpy-1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "daf64412397724204a26ff01095f34be", "sha256": "9134927bcfe2f01e0d21f47221acbaa32fd1ed4649f3ef115759aaaddaf01a36"}, "downloads": -1, "filename": "django-hamlpy-1.2.tar.gz", "has_sig": false, "md5_digest": "daf64412397724204a26ff01095f34be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34107, "upload_time": "2018-12-05T19:43:46", "upload_time_iso_8601": "2018-12-05T19:43:46.163104Z", "url": "https://files.pythonhosted.org/packages/73/2d/f96d66b82fa318e1bbd3ada2a095592e53a359cd9f983896e18876c0d6bd/django-hamlpy-1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:46 2020"}