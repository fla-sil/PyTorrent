{"info": {"author": "mrzhangboss", "author_email": "2529450174@qq.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Flink SQL Job Management Website\n\n\n## Display\n\n\n\n\n> require\n\n1. python3.6+\n2. flink 1.9.0+ installed (need set `FSQLFLY_FLINK_BIN_DIR` in ~/.fsqlfly or in env)\n\nps: if you want run multi fsqlfly in one computer, you can set `FSQLFLY` in env , like\n\n    export FSQLFLY=/path/where/you/like\n    fsqlfly comand\n\nyou can generate a env template by `fsqlfly echoenv [filename]`\n\n\n> install\n\n    pip install fsqlfly\n\n> init database\n\n    fsqlfly initdb \n\n> run website\n\n    fsqlfly webserver [--jobdaemon]\n\nps: if you want daemon all flink sql job(need set publish and available), add `--jobdaemon` in commands\n\n\n> reset database (warning it'll delete all data)\n\n    fsqlfly resetdb\n\n\n\n> support canal consumer(load mysql log data to kafka)\n\n**require install [canal v1.1.4+](https://github.com/alibaba/canal)** \n\n    pip install fsqlfly[canal]\n    fsqlfly canal --bootstrap_servers=localhost:9092 --canal_host=localhost --canal_port=11111 --canal_destination=demo \\\n    --canal_username=example --canal_password=pp --canal_client_id=1232\n\nps: you can use   `fsqlfly canal -h` get more information, you can set all varies in `.fsqlfly` file \neg: \n\n    canal_username=root\n    canal_destination=example\n    canal_password=password\n    canal_client_id=123\n    bootstrap_servers=hadoop-1:9092,hadoop-2:9092\n    canal_table_filter=\"database\\\\..*\"\n    canal_host=localhost\n\n\n\nif you want to use canal data in flink , support load mysql database as mysql(both) |kafka(update and create)|elasticsearch(save) resource\n\n\n    pip install fsqlfly[canal]\n    fsqlfly loadmysql --host=localhost --database=fsqlfly --category=kafka --tables=* --password=password --username=root\n\nyou can set category as (kafka,mysql,es), it will create resource automatic by database  \n\n\n\n\n# settings\n\nyou can change by write in `env file` (~/.fsqlfly) or just in environment variables (`eg: export name=value`)\n\n\n        name               express                     default\n    FSQLFLY_PASSWORD       admin password(if not set use a radom password)               password\n    FSQLFLY_DB_URL          database connection url(if you set then other is ignore)                            None\n    FSQLFLY_DB_TYPE        use db type support: [sqlite|mysql|postgresql]            sqlite\n    FSQLFLY_DB_FILE         sqlite db file name             db.sqlite3\n    FSQLFLY_DATABASE         database                       test        \n    FSQLFLY_DB_PASSWORD         database passowrd                       xxx        \n    FSQLFLY_DB_USER         database user                       root        \n    FSQLFLY_DB_PORT         database port                       3306\n    FSQLFLY_STATIC_ROOT     the dir of static file(if not set then it will be fsqlfly/static)  None\n    FSQLFLY_FLINK_BIN_DIR     the dir of flink bin dir                                     /opt/flink/bin\n    FSQLFLY_FLINK_MAX_TERMINAL   the max value of living terminal                             1000\n    FSQLFLY_DEBUG                   set web debug(if set then set True else False)                None\n    FSQLFLY_WEB_PORT              set http port                                             8082\n    FSQLFLY_FINK_HOST              flink resetful api host                                   http://localhost:8081\n    FSQLFLY_JOB_DAEMON_FREQUENCY              each job check damon time second                                    30\n    FSQLFLY_JOB_DAEMON_MAX_TRY_ONE_DAY              each job maxium try times in one day                                    3\n    FSQLFLY_JOB_LOG_DIR              flink job damon log file                                     /tmp/fsqlfly_job_log\n    FSQLFLY_UPLOAD_DIR                upload dir                                                    ~/.fsqlfly_upload\n\n\n\n\n> connection url detail in [FSQLFLY_DB_URL](http://docs.peewee-orm.com/en/latest/peewee/playhouse.html#database-url)\n\nps: the admin token value is `FSQLFLY_PASSWORD` md5 hex value, you can generate it by \n\n        import hashlib\n        md5 = hashlib.md5()\n        md5.update(b'password')\n        token = md5.hexdigest()\n\n\nif you want control all flink sql job start and stop by api, you can add token in url or header without login\n\n\n## API\n\n> need login by token(in request params `token`)\n\n- jobs\n\n        url: /api/job\n        method: get\n\n\n- job control \n\n      url: /api/transform/<mode(status|start|stop|restart)>/<id or job name>\n      method: post\n\n\n**Beta** you can set `pt` in request body(json format), then will create a unique job \nname for job, if you sql need other format value, we support `jinja2` format \neg: `insert into tablea select * from table where pt_field = {{ pt }};`\nyou can send `pt` value in request body.I recommend you control daily job by `airflow`.\nIf you want kill all `pt` job add `kill_all_pt` in request json body.\n\nPS: `pt` only can contain '0-9a-zA-Z_-' \nPS: `status` api if no `last_run_job_id` or multi running job , api will return `FAILED`  \n\n\n## Airflow Support\n\n> use dag operator in `fsqlfly.airflow_plugins.FSQLFlyOperator`\n\nexample:\n\n    from airflow.models import DAG\n    from fsqlfly.airflow_plugins import FSQLFlyOperator\n\n    dag = DAG(\n        dag_id='flink_hive_process',\n        default_args=args,\n        schedule_interval=\"2 1 * * *\",\n        dagrun_timeout=timedelta(minutes=60),\n        max_active_runs=8,\n        concurrency=8\n    )\n\n    data = dict(pt=\"{{ ds_nodash }}\")\n    http_conn_id = \"fsqlplatform\"\n    token = '{{ var.value.fsqlfly_token }}'\n    start_flink_job = FSQLFlyOperator(\n        task_id='fink_job',\n        job_name='flik_run_in_fsql_fly',\n        token=token,\n        http_conn_id=http_conn_id,\n        data=data,\n        dag=dag,\n        method='start',  # support restart | start | stop  \n        daemon=True,\n        poke_interval=5,\n    )\n\n\n`token`: fsqlfly token, you can real token, also you can save in `variable` in airflow\n`HOST`: airflow connection id , see more in [detail](https://airflow.apache.org/docs/stable/howto/connection/index.html)\n`data`: args in flink job\n\n\n\n\n\n## Quick Start\n\n\n1. unzip Flink 1.10.0 to /opt/flink\n2. `pip install fsqlfly`\n3. `fsqlfly echoenv ~/.fsqlfly`\n4.  change the value `FSQLFLY_FLINK_BIN_DIR` in `~/.fsqlfly` to your flink bin dir  like `/opt/flink/bin`\n5.  `fsqlfly initdb`\n6. `fsqlfly runwebserver`\n7. open your browser in `http://localhost:8082` the password is `password`\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mrzhangboss/fsqlfly", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "fsqlfly", "package_url": "https://pypi.org/project/fsqlfly/", "platform": "", "project_url": "https://pypi.org/project/fsqlfly/", "project_urls": {"Homepage": "https://github.com/mrzhangboss/fsqlfly"}, "release_url": "https://pypi.org/project/fsqlfly/3.0.6/", "requires_dist": ["tornado (<=6.0.4)", "terminado (<=0.8.3)", "peewee (<=3.13.1)", "python-dotenv (<=0.12.0)", "logzero (<=1.5.0)", "PyYAML (<=5.3.1)", "Jinja2 (<=2.11.1)", "python-magic (<=0.4.15)", "requests (<=2.23.0)", "apache-airflow ; extra == 'airflow'", "PyMySQL (<=0.9.3) ; extra == 'all'", "psycopg2 (<=2.8.4) ; extra == 'all'", "canal-python (<=0.4) ; extra == 'all'", "kafka-python (<=1.4.7,>=1.3.4) ; extra == 'all'", "protobuf (<=3.11.3) ; extra == 'all'", "sqlalchemy (<=1.3.15) ; extra == 'all'", "apache-airflow ; extra == 'all'", "canal-python (<=0.4) ; extra == 'canal'", "kafka-python (<=1.4.7,>=1.3.4) ; extra == 'canal'", "protobuf (<=3.11.3) ; extra == 'canal'", "sqlalchemy (<=1.3.15) ; extra == 'canal'", "PyMySQL (<=0.9.3) ; extra == 'mysql'", "psycopg2 (<=2.8.4) ; extra == 'postgresql'", "TorMySQL ; extra == 'test'"], "requires_python": ">=3.6.0", "summary": "Flink SQL Job Management Website", "version": "3.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Flink SQL Job Management Website</h1>\n<h2>Display</h2>\n<blockquote>\n<p>require</p>\n</blockquote>\n<ol>\n<li>python3.6+</li>\n<li>flink 1.9.0+ installed (need set <code>FSQLFLY_FLINK_BIN_DIR</code> in ~/.fsqlfly or in env)</li>\n</ol>\n<p>ps: if you want run multi fsqlfly in one computer, you can set <code>FSQLFLY</code> in env , like</p>\n<pre><code>export FSQLFLY=/path/where/you/like\nfsqlfly comand\n</code></pre>\n<p>you can generate a env template by <code>fsqlfly echoenv [filename]</code></p>\n<blockquote>\n<p>install</p>\n</blockquote>\n<pre><code>pip install fsqlfly\n</code></pre>\n<blockquote>\n<p>init database</p>\n</blockquote>\n<pre><code>fsqlfly initdb \n</code></pre>\n<blockquote>\n<p>run website</p>\n</blockquote>\n<pre><code>fsqlfly webserver [--jobdaemon]\n</code></pre>\n<p>ps: if you want daemon all flink sql job(need set publish and available), add <code>--jobdaemon</code> in commands</p>\n<blockquote>\n<p>reset database (warning it'll delete all data)</p>\n</blockquote>\n<pre><code>fsqlfly resetdb\n</code></pre>\n<blockquote>\n<p>support canal consumer(load mysql log data to kafka)</p>\n</blockquote>\n<p><strong>require install <a href=\"https://github.com/alibaba/canal\" rel=\"nofollow\">canal v1.1.4+</a></strong></p>\n<pre><code>pip install fsqlfly[canal]\nfsqlfly canal --bootstrap_servers=localhost:9092 --canal_host=localhost --canal_port=11111 --canal_destination=demo \\\n--canal_username=example --canal_password=pp --canal_client_id=1232\n</code></pre>\n<p>ps: you can use   <code>fsqlfly canal -h</code> get more information, you can set all varies in <code>.fsqlfly</code> file\neg:</p>\n<pre><code>canal_username=root\ncanal_destination=example\ncanal_password=password\ncanal_client_id=123\nbootstrap_servers=hadoop-1:9092,hadoop-2:9092\ncanal_table_filter=\"database\\\\..*\"\ncanal_host=localhost\n</code></pre>\n<p>if you want to use canal data in flink , support load mysql database as mysql(both) |kafka(update and create)|elasticsearch(save) resource</p>\n<pre><code>pip install fsqlfly[canal]\nfsqlfly loadmysql --host=localhost --database=fsqlfly --category=kafka --tables=* --password=password --username=root\n</code></pre>\n<p>you can set category as (kafka,mysql,es), it will create resource automatic by database</p>\n<h1>settings</h1>\n<p>you can change by write in <code>env file</code> (~/.fsqlfly) or just in environment variables (<code>eg: export name=value</code>)</p>\n<pre><code>    name               express                     default\nFSQLFLY_PASSWORD       admin password(if not set use a radom password)               password\nFSQLFLY_DB_URL          database connection url(if you set then other is ignore)                            None\nFSQLFLY_DB_TYPE        use db type support: [sqlite|mysql|postgresql]            sqlite\nFSQLFLY_DB_FILE         sqlite db file name             db.sqlite3\nFSQLFLY_DATABASE         database                       test        \nFSQLFLY_DB_PASSWORD         database passowrd                       xxx        \nFSQLFLY_DB_USER         database user                       root        \nFSQLFLY_DB_PORT         database port                       3306\nFSQLFLY_STATIC_ROOT     the dir of static file(if not set then it will be fsqlfly/static)  None\nFSQLFLY_FLINK_BIN_DIR     the dir of flink bin dir                                     /opt/flink/bin\nFSQLFLY_FLINK_MAX_TERMINAL   the max value of living terminal                             1000\nFSQLFLY_DEBUG                   set web debug(if set then set True else False)                None\nFSQLFLY_WEB_PORT              set http port                                             8082\nFSQLFLY_FINK_HOST              flink resetful api host                                   http://localhost:8081\nFSQLFLY_JOB_DAEMON_FREQUENCY              each job check damon time second                                    30\nFSQLFLY_JOB_DAEMON_MAX_TRY_ONE_DAY              each job maxium try times in one day                                    3\nFSQLFLY_JOB_LOG_DIR              flink job damon log file                                     /tmp/fsqlfly_job_log\nFSQLFLY_UPLOAD_DIR                upload dir                                                    ~/.fsqlfly_upload\n</code></pre>\n<blockquote>\n<p>connection url detail in <a href=\"http://docs.peewee-orm.com/en/latest/peewee/playhouse.html#database-url\" rel=\"nofollow\">FSQLFLY_DB_URL</a></p>\n</blockquote>\n<p>ps: the admin token value is <code>FSQLFLY_PASSWORD</code> md5 hex value, you can generate it by</p>\n<pre><code>    import hashlib\n    md5 = hashlib.md5()\n    md5.update(b'password')\n    token = md5.hexdigest()\n</code></pre>\n<p>if you want control all flink sql job start and stop by api, you can add token in url or header without login</p>\n<h2>API</h2>\n<blockquote>\n<p>need login by token(in request params <code>token</code>)</p>\n</blockquote>\n<ul>\n<li>\n<p>jobs</p>\n<pre><code>  url: /api/job\n  method: get\n</code></pre>\n</li>\n<li>\n<p>job control</p>\n<pre><code>url: /api/transform/&lt;mode(status|start|stop|restart)&gt;/&lt;id or job name&gt;\nmethod: post\n</code></pre>\n</li>\n</ul>\n<p><strong>Beta</strong> you can set <code>pt</code> in request body(json format), then will create a unique job\nname for job, if you sql need other format value, we support <code>jinja2</code> format\neg: <code>insert into tablea select * from table where pt_field = {{ pt }};</code>\nyou can send <code>pt</code> value in request body.I recommend you control daily job by <code>airflow</code>.\nIf you want kill all <code>pt</code> job add <code>kill_all_pt</code> in request json body.</p>\n<p>PS: <code>pt</code> only can contain '0-9a-zA-Z_-'\nPS: <code>status</code> api if no <code>last_run_job_id</code> or multi running job , api will return <code>FAILED</code></p>\n<h2>Airflow Support</h2>\n<blockquote>\n<p>use dag operator in <code>fsqlfly.airflow_plugins.FSQLFlyOperator</code></p>\n</blockquote>\n<p>example:</p>\n<pre><code>from airflow.models import DAG\nfrom fsqlfly.airflow_plugins import FSQLFlyOperator\n\ndag = DAG(\n    dag_id='flink_hive_process',\n    default_args=args,\n    schedule_interval=\"2 1 * * *\",\n    dagrun_timeout=timedelta(minutes=60),\n    max_active_runs=8,\n    concurrency=8\n)\n\ndata = dict(pt=\"{{ ds_nodash }}\")\nhttp_conn_id = \"fsqlplatform\"\ntoken = '{{ var.value.fsqlfly_token }}'\nstart_flink_job = FSQLFlyOperator(\n    task_id='fink_job',\n    job_name='flik_run_in_fsql_fly',\n    token=token,\n    http_conn_id=http_conn_id,\n    data=data,\n    dag=dag,\n    method='start',  # support restart | start | stop  \n    daemon=True,\n    poke_interval=5,\n)\n</code></pre>\n<p><code>token</code>: fsqlfly token, you can real token, also you can save in <code>variable</code> in airflow\n<code>HOST</code>: airflow connection id , see more in <a href=\"https://airflow.apache.org/docs/stable/howto/connection/index.html\" rel=\"nofollow\">detail</a>\n<code>data</code>: args in flink job</p>\n<h2>Quick Start</h2>\n<ol>\n<li>unzip Flink 1.10.0 to /opt/flink</li>\n<li><code>pip install fsqlfly</code></li>\n<li><code>fsqlfly echoenv ~/.fsqlfly</code></li>\n<li>change the value <code>FSQLFLY_FLINK_BIN_DIR</code> in <code>~/.fsqlfly</code> to your flink bin dir  like <code>/opt/flink/bin</code></li>\n<li><code>fsqlfly initdb</code></li>\n<li><code>fsqlfly runwebserver</code></li>\n<li>open your browser in <code>http://localhost:8082</code> the password is <code>password</code></li>\n</ol>\n\n          </div>"}, "last_serial": 7017224, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d84d6404073344294042ccd8c7f45265", "sha256": "c1fe04928348e29178809ac00d59e62793d88a19b38fbbdb2321b5e94bd812bb"}, "downloads": -1, "filename": "fsqlfly-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d84d6404073344294042ccd8c7f45265", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 1918, "upload_time": "2020-03-23T13:51:09", "upload_time_iso_8601": "2020-03-23T13:51:09.957493Z", "url": "https://files.pythonhosted.org/packages/8d/7b/758f2784bc06b52ef1d055b13aa5fccf158eff299d07cdf441f116b78da4/fsqlfly-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "803b058594085d2d1d5b5eb8d5340803", "sha256": "9dac81deccbdeb7f586f0bcd02b9a12b4fe513cfdd85a271f3eea9206ea305a4"}, "downloads": -1, "filename": "fsqlfly-0.0.1.tar.gz", "has_sig": false, "md5_digest": "803b058594085d2d1d5b5eb8d5340803", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 2308, "upload_time": "2020-03-23T13:51:11", "upload_time_iso_8601": "2020-03-23T13:51:11.840011Z", "url": "https://files.pythonhosted.org/packages/e1/fe/d73ef42ee08eebdb441e23713a8b1f94d37cd370ade1480c551813c9cda4/fsqlfly-0.0.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "08846566d2952809123714801f9d4e76", "sha256": "2e4e6b00e192f43bc7ee8da7b8e6b5f64e86355c87b6913b70bcd3a2c1f231c2"}, "downloads": -1, "filename": "fsqlfly-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "08846566d2952809123714801f9d4e76", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 1157420, "upload_time": "2020-03-31T15:46:34", "upload_time_iso_8601": "2020-03-31T15:46:34.309983Z", "url": "https://files.pythonhosted.org/packages/c9/09/81b28816cd6dbd1996f7e143b45ad1fd7fd893452cf80487802f51e5c51f/fsqlfly-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da488dde3504b7b035cea1d2b7a2770b", "sha256": "bab0e5ea842b0b87db63a8ae7cd1d945d00be9309a6ad9eb8a693203515323cf"}, "downloads": -1, "filename": "fsqlfly-1.0.0.tar.gz", "has_sig": false, "md5_digest": "da488dde3504b7b035cea1d2b7a2770b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 1132570, "upload_time": "2020-03-31T15:46:36", "upload_time_iso_8601": "2020-03-31T15:46:36.944456Z", "url": "https://files.pythonhosted.org/packages/74/ba/dd48ba72c880e0c3860cdb7c4007813e1ad245accc0c4a2c76220e7fe8ff/fsqlfly-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "0f091a2f866c5e09f39e076d76607725", "sha256": "ffd5d98e27b973de5fef1497f2e17d742e7e3d1ed26fa1ced76ceff43a6acbec"}, "downloads": -1, "filename": "fsqlfly-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0f091a2f866c5e09f39e076d76607725", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 1157419, "upload_time": "2020-03-31T15:47:19", "upload_time_iso_8601": "2020-03-31T15:47:19.046886Z", "url": "https://files.pythonhosted.org/packages/b0/78/88ec991b343c6979a3ea31e51fbc4711b3e45910211d522cc25495e3120a/fsqlfly-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "03c05fb58e7ea7799923699a0d53256c", "sha256": "09593ed92e671792fab35e2b2e3b23df8078b53f57fe0108eeb5288162ea084b"}, "downloads": -1, "filename": "fsqlfly-1.0.1.tar.gz", "has_sig": false, "md5_digest": "03c05fb58e7ea7799923699a0d53256c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 1132558, "upload_time": "2020-03-31T15:47:20", "upload_time_iso_8601": "2020-03-31T15:47:20.856578Z", "url": "https://files.pythonhosted.org/packages/1d/85/23da1312522148a0ec2cbe318022b549171ef1c6ae15125d8294f820c026/fsqlfly-1.0.1.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "4efba6c0d807fe9d39d024169d276439", "sha256": "b23cce589733f1fd522042fdeb0f62a01b6ea9a33f8bb42988fda6abef868517"}, "downloads": -1, "filename": "fsqlfly-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4efba6c0d807fe9d39d024169d276439", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 1136899, "upload_time": "2020-04-01T15:34:25", "upload_time_iso_8601": "2020-04-01T15:34:25.987286Z", "url": "https://files.pythonhosted.org/packages/40/8c/e600835a444905573dc2ad7fc1ef45753568609f10c9451247b63d40511a/fsqlfly-2.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "25422f4a46153e0edd65b61f3c68f4cf", "sha256": "77c7e9849513284a4c35d6e8163a29bda078ba5153ba789d783c2eb6048ac387"}, "downloads": -1, "filename": "fsqlfly-2.0.0.tar.gz", "has_sig": false, "md5_digest": "25422f4a46153e0edd65b61f3c68f4cf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 1109124, "upload_time": "2020-04-01T15:34:29", "upload_time_iso_8601": "2020-04-01T15:34:29.496860Z", "url": "https://files.pythonhosted.org/packages/28/56/e8113f6d872553b72b71cab3d7496332d9dc02802eb1f600166f7454f2a1/fsqlfly-2.0.0.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "ca44a8a202e65b5b3eb1a33c10e62954", "sha256": "ea11442f7890b15c1a123cafbdb2e58a6fd999bc721108e16fdfbbca2c75512c"}, "downloads": -1, "filename": "fsqlfly-3.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ca44a8a202e65b5b3eb1a33c10e62954", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 1138514, "upload_time": "2020-04-02T11:58:33", "upload_time_iso_8601": "2020-04-02T11:58:33.864493Z", "url": "https://files.pythonhosted.org/packages/62/23/d79f8e2628eda2e387d601e71f121b0ce56c1c1731e1a8943a2c237d3fce/fsqlfly-3.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1359e9970238e907f408060afd471906", "sha256": "35f71d5036a963720c433838c0f2e1cc70ba1f1d1c8ca80bedc54959112b0533"}, "downloads": -1, "filename": "fsqlfly-3.0.0.tar.gz", "has_sig": false, "md5_digest": "1359e9970238e907f408060afd471906", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 1110872, "upload_time": "2020-04-02T11:58:38", "upload_time_iso_8601": "2020-04-02T11:58:38.190048Z", "url": "https://files.pythonhosted.org/packages/5d/42/65252bcd704a112351a8e2969009e24e205c3ebd09d1013ed83b61228d6f/fsqlfly-3.0.0.tar.gz", "yanked": false}], "3.0.3": [{"comment_text": "", "digests": {"md5": "f54516918689ed6becb25018a3db1b48", "sha256": "d4e8fd26755904bfff95e975b9b9b872b4df6c08a47d256bea4b6f0f75e632f2"}, "downloads": -1, "filename": "fsqlfly-3.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f54516918689ed6becb25018a3db1b48", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 1139178, "upload_time": "2020-04-03T14:15:08", "upload_time_iso_8601": "2020-04-03T14:15:08.816269Z", "url": "https://files.pythonhosted.org/packages/9d/a1/028cee595ddde89124844e828381bf274e4bd634054b0ba85a09df356e43/fsqlfly-3.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5184d9e4f395399fb06c26a4f507a159", "sha256": "8a368ad2b74180d7a1c4ec5126da875f4f39eb2a4921f4cfeb7787ee030833c6"}, "downloads": -1, "filename": "fsqlfly-3.0.3.tar.gz", "has_sig": false, "md5_digest": "5184d9e4f395399fb06c26a4f507a159", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 1111293, "upload_time": "2020-04-03T14:15:13", "upload_time_iso_8601": "2020-04-03T14:15:13.193879Z", "url": "https://files.pythonhosted.org/packages/ee/b3/70361f81f107d0626edc298ba87b15270c4b0b3822bb9505c0a415361da7/fsqlfly-3.0.3.tar.gz", "yanked": false}], "3.0.4": [{"comment_text": "", "digests": {"md5": "2946473c45642f1de6340fdba19199b2", "sha256": "f690c64836bd46bb834f21cd7305a90348107826b4b80ec26830fee919c5569d"}, "downloads": -1, "filename": "fsqlfly-3.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2946473c45642f1de6340fdba19199b2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 1139337, "upload_time": "2020-04-04T14:11:42", "upload_time_iso_8601": "2020-04-04T14:11:42.537720Z", "url": "https://files.pythonhosted.org/packages/1b/3d/80a9c091511f09bcf16a62d105e9c45752ab2eaca027bca8d1c9ac87400b/fsqlfly-3.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6be553be163224bd53a883292f2d764e", "sha256": "2b6b89ada34ea2710321c31e4eb0ad4dafa348eab2940ac8bf26ec28029e47b3"}, "downloads": -1, "filename": "fsqlfly-3.0.4.tar.gz", "has_sig": false, "md5_digest": "6be553be163224bd53a883292f2d764e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 1111497, "upload_time": "2020-04-04T14:11:46", "upload_time_iso_8601": "2020-04-04T14:11:46.945867Z", "url": "https://files.pythonhosted.org/packages/ec/ef/32d1c7f39a0d4fe69b70c80f0b730735e5660addf51cb93b2ca8e2b24562/fsqlfly-3.0.4.tar.gz", "yanked": false}], "3.0.5": [{"comment_text": "", "digests": {"md5": "36433cc9d8e6d5d097c0c1a82c95e4c5", "sha256": "62c5c141ad29a348a0888b0861a568aafaf7d69351b36a13e55549f42272920e"}, "downloads": -1, "filename": "fsqlfly-3.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "36433cc9d8e6d5d097c0c1a82c95e4c5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 2245665, "upload_time": "2020-04-13T12:29:35", "upload_time_iso_8601": "2020-04-13T12:29:35.473258Z", "url": "https://files.pythonhosted.org/packages/a4/9b/bb24a13e7c79ad9637167ce9deec4851a7e8b011856adbc7b4dd9942458a/fsqlfly-3.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00fa4f061fb07310882f64c347c29869", "sha256": "1d87dbfd201247bc1fb19bb2d7344acc8c2011cac466ea6fb13b373475930506"}, "downloads": -1, "filename": "fsqlfly-3.0.5.tar.gz", "has_sig": false, "md5_digest": "00fa4f061fb07310882f64c347c29869", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 1112857, "upload_time": "2020-04-13T12:29:37", "upload_time_iso_8601": "2020-04-13T12:29:37.829952Z", "url": "https://files.pythonhosted.org/packages/b0/dc/fb1ae61c81d0d81717db269f0348672971aebc2b40fcf913240a6b368eb4/fsqlfly-3.0.5.tar.gz", "yanked": false}], "3.0.6": [{"comment_text": "", "digests": {"md5": "912e05b15e9a44cf15fbbae6c6c91072", "sha256": "d82e2956f08f6288aa558c06f4f66b732ae924b12defaf0cb97d3e3fb9a473d3"}, "downloads": -1, "filename": "fsqlfly-3.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "912e05b15e9a44cf15fbbae6c6c91072", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 2247636, "upload_time": "2020-04-14T13:42:34", "upload_time_iso_8601": "2020-04-14T13:42:34.204833Z", "url": "https://files.pythonhosted.org/packages/a0/9b/73c3915d468c98f98210299317443d25b8d2f7d72dea1a3dbf8c21567bb4/fsqlfly-3.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6470ddcae0f9f4c571abd1abbc85569", "sha256": "c5eb5d37134487e9514f7ec596cb5202ac1d810529182e9dec5c06cb76a1a803"}, "downloads": -1, "filename": "fsqlfly-3.0.6.tar.gz", "has_sig": false, "md5_digest": "b6470ddcae0f9f4c571abd1abbc85569", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 1114748, "upload_time": "2020-04-14T13:42:36", "upload_time_iso_8601": "2020-04-14T13:42:36.413717Z", "url": "https://files.pythonhosted.org/packages/70/c5/28c4e14d3c5ecbfaf1f2f193b03122d6b4efe6d817b203a9643fc071de0a/fsqlfly-3.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "912e05b15e9a44cf15fbbae6c6c91072", "sha256": "d82e2956f08f6288aa558c06f4f66b732ae924b12defaf0cb97d3e3fb9a473d3"}, "downloads": -1, "filename": "fsqlfly-3.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "912e05b15e9a44cf15fbbae6c6c91072", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 2247636, "upload_time": "2020-04-14T13:42:34", "upload_time_iso_8601": "2020-04-14T13:42:34.204833Z", "url": "https://files.pythonhosted.org/packages/a0/9b/73c3915d468c98f98210299317443d25b8d2f7d72dea1a3dbf8c21567bb4/fsqlfly-3.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6470ddcae0f9f4c571abd1abbc85569", "sha256": "c5eb5d37134487e9514f7ec596cb5202ac1d810529182e9dec5c06cb76a1a803"}, "downloads": -1, "filename": "fsqlfly-3.0.6.tar.gz", "has_sig": false, "md5_digest": "b6470ddcae0f9f4c571abd1abbc85569", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 1114748, "upload_time": "2020-04-14T13:42:36", "upload_time_iso_8601": "2020-04-14T13:42:36.413717Z", "url": "https://files.pythonhosted.org/packages/70/c5/28c4e14d3c5ecbfaf1f2f193b03122d6b4efe6d817b203a9643fc071de0a/fsqlfly-3.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:02 2020"}