{"info": {"author": "Neelofer Banglawala", "author_email": "n.banglawala@epcc.ed.ac.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3 :: Only", "Topic :: Scientific/Engineering"], "description": "# pyrobust\n\nRobust optimisation aims to find solutions that, given a particular measure of robustness, remain optimal in the face of perturbations within a defined disturbance neighbourhood. pyrobust is a python implementation of various robust optimisation methods developed by the University of Exeter (Prof. Jonathan E. Fieldsend's group). The core optimisation methods utilise the population's search history and resamples the best individuals for new solutions, as described in: _[On the Exploitation of Search History and Accumulative Sampling in Robust Optimisation](https://ore.exeter.ac.uk/repository/handle/10871/27155)_ by K. Alyahya, K. Doherty, O. E. Akman and J. E. Fieldsend, GECCO \u201917 Companion, July 15-19, 2017.\n\nPlease reference this paper if you undertake work utilising this code.\n\nThe examples on this page can be obtained from: https://github.com/EPCCed/pyrobust-examples\n\nCode to run benchmark problems using `pynmmso` can be found at: https://github.com/EPCCed/pyrobust-benchmarking\n\n## Install pyrobust\n\nThe Python implementation of Robust requires Python 3, Numpy (https://www.numpy.org/), Scipy (https://www.scipy.org/), pyDOE for Latin Hypercube sampling (https://pythonhosted.org/pyDOE/) and sobol_seq for Sobol sampling (https://pypi.org/project/sobol_seq/). \n\nYou can install the above dependencies and pyrobust using pip, e.g.:\n\n```\npip install pyrobust\n```\n\n## Example code\n\nThe code for the examples in this documentation can be found at https://github.com/EPCCed/pyrobust-examples.\n\n\n## Bugs\n\nBugs can be reported [via Github](https://github.com/EPCCed/pynmmso/issues). We'd also be keen for feedback on this documentation and the examples provided.\n\n## Credits\n\nThe following people have contributed to this project:\n\n* Professor Jonathan Fieldsend, Computer Science, University of Exeter\n* Dr Ozgur Akman, Mathematics, University of Exeter\n* Dr Khulood Alyahya, Computer Science, University of Exeter\n* Ally Hume, EPCC, University of Edinburgh\n* Dr Chris Wood, EPCC, University of Edinburgh\n* Dr Neelofer Banglawala, EPCC, University of Edinburgh\n* Professor Andrew J Millar, Chair of Systems Biology, The University of Edinburgh\n* Dr Kevin Doherty\n* Benjamin J. Wareham\n\nThanks to the following tools used to produce the graphs on this documentation:\n\n* pyDOE (https://pythonhosted.org/pyDOE/)\n* sobol_seq (https://pypi.org/project/sobol_seq/)\n\nThis work was supported by the Engineering and Physical Sciences Research Council (grant number [EP/N018125/1](https://gow.epsrc.ukri.org/NGBOViewGrant.aspx?GrantRef=EP/N018125/1))\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/EPCCed/pyrobust/wiki/HOME", "keywords": "optimization,optimisation,optimizer,optimiser,robust,genetic algorithms,evolutionary algorithms,GA,genetic", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyrobust", "package_url": "https://pypi.org/project/pyrobust/", "platform": "", "project_url": "https://pypi.org/project/pyrobust/", "project_urls": {"Homepage": "https://github.com/EPCCed/pyrobust/wiki/HOME"}, "release_url": "https://pypi.org/project/pyrobust/0.1/", "requires_dist": ["numpy", "pyDOE", "scipy", "sobol-seq"], "requires_python": "", "summary": "Robust Optimizer", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># pyrobust</p>\n<p>Robust optimisation aims to find solutions that, given a particular measure of robustness, remain optimal in the face of perturbations within a defined disturbance neighbourhood. pyrobust is a python implementation of various robust optimisation methods developed by the University of Exeter (Prof. Jonathan E. Fieldsend\u2019s group). The core optimisation methods utilise the population\u2019s search history and resamples the best individuals for new solutions, as described in: _[On the Exploitation of Search History and Accumulative Sampling in Robust Optimisation](<a href=\"https://ore.exeter.ac.uk/repository/handle/10871/27155)_\" rel=\"nofollow\">https://ore.exeter.ac.uk/repository/handle/10871/27155)_</a> by K. Alyahya, K. Doherty, O. E. Akman and J. E. Fieldsend, GECCO \u201917 Companion, July 15-19, 2017.</p>\n<p>Please reference this paper if you undertake work utilising this code.</p>\n<p>The examples on this page can be obtained from: <a href=\"https://github.com/EPCCed/pyrobust-examples\" rel=\"nofollow\">https://github.com/EPCCed/pyrobust-examples</a></p>\n<p>Code to run benchmark problems using <cite>pynmmso</cite> can be found at: <a href=\"https://github.com/EPCCed/pyrobust-benchmarking\" rel=\"nofollow\">https://github.com/EPCCed/pyrobust-benchmarking</a></p>\n<p>## Install pyrobust</p>\n<p>The Python implementation of Robust requires Python 3, Numpy (<a href=\"https://www.numpy.org/\" rel=\"nofollow\">https://www.numpy.org/</a>), Scipy (<a href=\"https://www.scipy.org/\" rel=\"nofollow\">https://www.scipy.org/</a>), pyDOE for Latin Hypercube sampling (<a href=\"https://pythonhosted.org/pyDOE/\" rel=\"nofollow\">https://pythonhosted.org/pyDOE/</a>) and sobol_seq for Sobol sampling (<a href=\"https://pypi.org/project/sobol_seq/\" rel=\"nofollow\">https://pypi.org/project/sobol_seq/</a>).</p>\n<p>You can install the above dependencies and pyrobust using pip, e.g.:</p>\n<p><tt>`\npip install pyrobust\n`</tt></p>\n<p>## Example code</p>\n<p>The code for the examples in this documentation can be found at <a href=\"https://github.com/EPCCed/pyrobust-examples\" rel=\"nofollow\">https://github.com/EPCCed/pyrobust-examples</a>.</p>\n<p>## Bugs</p>\n<p>Bugs can be reported [via Github](<a href=\"https://github.com/EPCCed/pynmmso/issues\" rel=\"nofollow\">https://github.com/EPCCed/pynmmso/issues</a>). We\u2019d also be keen for feedback on this documentation and the examples provided.</p>\n<p>## Credits</p>\n<p>The following people have contributed to this project:</p>\n<ul>\n<li>Professor Jonathan Fieldsend, Computer Science, University of Exeter</li>\n<li>Dr Ozgur Akman, Mathematics, University of Exeter</li>\n<li>Dr Khulood Alyahya, Computer Science, University of Exeter</li>\n<li>Ally Hume, EPCC, University of Edinburgh</li>\n<li>Dr Chris Wood, EPCC, University of Edinburgh</li>\n<li>Dr Neelofer Banglawala, EPCC, University of Edinburgh</li>\n<li>Professor Andrew J Millar, Chair of Systems Biology, The University of Edinburgh</li>\n<li>Dr Kevin Doherty</li>\n<li>Benjamin J. Wareham</li>\n</ul>\n<p>Thanks to the following tools used to produce the graphs on this documentation:</p>\n<ul>\n<li>pyDOE (<a href=\"https://pythonhosted.org/pyDOE/\" rel=\"nofollow\">https://pythonhosted.org/pyDOE/</a>)</li>\n<li>sobol_seq (<a href=\"https://pypi.org/project/sobol_seq/\" rel=\"nofollow\">https://pypi.org/project/sobol_seq/</a>)</li>\n</ul>\n<p>This work was supported by the Engineering and Physical Sciences Research Council (grant number [EP/N018125/1](<a href=\"https://gow.epsrc.ukri.org/NGBOViewGrant.aspx?GrantRef=EP/N018125/1\" rel=\"nofollow\">https://gow.epsrc.ukri.org/NGBOViewGrant.aspx?GrantRef=EP/N018125/1</a>))</p>\n\n          </div>"}, "last_serial": 5506759, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "49ab19430600df65453ba493c09678bb", "sha256": "083c82b30fcd5aeb8d4c832e3ad9cc14038a085f0a2d46785d41614d910b001b"}, "downloads": -1, "filename": "pyrobust-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "49ab19430600df65453ba493c09678bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23158, "upload_time": "2019-07-09T12:19:43", "upload_time_iso_8601": "2019-07-09T12:19:43.366801Z", "url": "https://files.pythonhosted.org/packages/86/91/51e1ce8c6ffdd6d6ffd10158758fef6356ce8e9b5cc7d64fe33d107d165b/pyrobust-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "39e3d33e712483c863ecae76b24750ef", "sha256": "4c2d0020c91414d082f56e37d169c1598a566500a98d27926b383cb0a6e598b0"}, "downloads": -1, "filename": "pyrobust-0.1.tar.gz", "has_sig": false, "md5_digest": "39e3d33e712483c863ecae76b24750ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16765, "upload_time": "2019-07-09T12:19:45", "upload_time_iso_8601": "2019-07-09T12:19:45.776049Z", "url": "https://files.pythonhosted.org/packages/8a/9f/ea10b9cab68124fbf2d0bea399a4cee914e0e633faac5982fd972a1885cc/pyrobust-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "49ab19430600df65453ba493c09678bb", "sha256": "083c82b30fcd5aeb8d4c832e3ad9cc14038a085f0a2d46785d41614d910b001b"}, "downloads": -1, "filename": "pyrobust-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "49ab19430600df65453ba493c09678bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23158, "upload_time": "2019-07-09T12:19:43", "upload_time_iso_8601": "2019-07-09T12:19:43.366801Z", "url": "https://files.pythonhosted.org/packages/86/91/51e1ce8c6ffdd6d6ffd10158758fef6356ce8e9b5cc7d64fe33d107d165b/pyrobust-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "39e3d33e712483c863ecae76b24750ef", "sha256": "4c2d0020c91414d082f56e37d169c1598a566500a98d27926b383cb0a6e598b0"}, "downloads": -1, "filename": "pyrobust-0.1.tar.gz", "has_sig": false, "md5_digest": "39e3d33e712483c863ecae76b24750ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16765, "upload_time": "2019-07-09T12:19:45", "upload_time_iso_8601": "2019-07-09T12:19:45.776049Z", "url": "https://files.pythonhosted.org/packages/8a/9f/ea10b9cab68124fbf2d0bea399a4cee914e0e633faac5982fd972a1885cc/pyrobust-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:43 2020"}