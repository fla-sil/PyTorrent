{"info": {"author": "devbliss GmbH", "author_email": "python_maintainer@devbliss.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python :: 3.4", "Topic :: Software Development :: Version Control", "Topic :: Utilities"], "description": "# devbliss git extensions\n\ngit-devbliss is a command line tool which guides the developer along the\n[encouraged workflow](https://github.com/devbliss/git-devbliss/blob/master/workflow.md) used for feature development, bug fixing\nand hotfixing at devbliss.\n\nThe goal of git-devbliss is to summarize certain single git operations into\nsemantically meaningful commands and doing sanity checks to prevent frequent\nmistakes.\nThe tool does not replace any existing git commands nor does it\nprevent the developer from using the latter the way he wants to use them.\n\nTo see what's new in the current version, please refer to the [CHANGELOG](https://github.com/devbliss/git-devbliss/blob/master/CHANGES.md)\n\n## Requirements\n\n- git 2.0\n- python 3.4\n- make\n\n\nyou also need pip3.4, which is included in python 3.4 (of course you can also install with your systems package manager):\n\n    python3.4 -m ensurepip --upgrade # on debian please use `sudo apt-get install python3-pip`\n\ndo not forget to put the python package path into your system's path if it is not there yet:\n\n    export PATH=/opt/local/Library/Frameworks/Python.framework/Versions/3.4/bin:$PATH # OSX\n    \nIf you have an old version of git-devbliss that was installed with Makefile or macports, please uninstall that version first. Remember that bash_completion will be uninstalled as well - please refer to the 'Enabling bash completion' section below for how to restore it.\n\n## Installation via pypi (recommended)\n\nThe installation of git-devbliss via pypi is the default installation\nmethod. Simply type:\n\n    sudo pip3.4 install --upgrade git-devbliss\n\n## Installation via GitHub\n\n    sudo pip3.4 install --upgrade git+ssh://git@github.com/devbliss/git-devbliss.git\n\n## Installation via Makefile\n\n    git clone git@github.com:devbliss/git-devbliss.git\n    cd git-devbliss\n    sudo make\n    bin/pip install .\n\n## Enabling bash completion\n\nTo enable BASH completion you need to source that file in your bash profile:\n\n    source /etc/bash_completion.d/git-devbliss\n\n\n## Creating a shorter command for git-devbliss\n\nrun the following command if you want a shorter command for git devbliss:\n    \n    git config --global alias.de devbliss\n\n## Testing\n\nSimply run:\n\n    make test\n\nThis will create a python virtual environment, run all checks and tests there and generate a coverage report\n\n\n## Makefile hooks\n\nYou need to include a Makefile in your project, which defines entry points for\ncommon tasks. The Makefile works like an abstraction layer which has\nfour main advantages:\n\n 1. Your daily work becomes easier because you won't have to adjust your habits\n    depending on the project.\n 2. If a project is reactivated after a certain amount of time it eases the\n    pain of continuing.\n 3. New developers have an easier start.\n 4. Conventionally defined make targets make it\n    possible to integrate hooks in our git devbliss toolset which makes your\n    daily work easier and more failsafe.\n\n### Make targets\n\nYou are encouraged to implement the following targets in your Makefile:\n\n- **test**: Run all your projects software tests\n- **deb**: Build a ready to deploy Debian package\n- **clean**: Clean up all messy stuff created while building your project\n- **changelog**: Make sure your changelog has been updated (will be run when\n  called 'git devbliss finish') The best thing you can do here is to open a\n  text editor and get used to write the changelog at time of finishing your\n  task. This way you will never forget to remark your changes\n- **version**: Make sure your projects version number has been incremented\n  (will be run when called 'git devbliss finish') Implement that similar to the\n  `changelog` target\n- **finish**: Define some tasks that have to be done before creating a pull\n  request: e.g. formatting source files...\n- **release**: Called upon git-devbliss release\n\nDepending on the git-devbliss command used, there is one of two bash variables\navailable:\n- **finish**, **version**, **changelog**:  `DEVBLISS_BRANCH_TYPE` is available that holds the branch type\n  value (`feature`, `bug`, `hotfix`, `research` or `refactor`)\n- **release**: `DEVBLISS_VERSION` is available that carries the version number\n  used with the release command\n\n## Make target snippets\n\nThis section contains some snippets for the use in conjuction with the\nrecomended make targets. You can copy/paste from here or even better add your\nown snippets for the benefit of others.\n\n### Open changelog in the default editor\n\n    changelog:\n    \t@$${EDITOR:-\"vi\"} debian/changelog\n\n    .PHONY: changelog\n\n### Typical maven delegation\n\n    build:\n    \tmvn gwt:compile\n\n    changelog:\n    \t@$${EDITOR:-\"vi\"} debian/changelog\n\n    test:\n    \tmvn test\n\n    clean:\n    \tmvn clean\n\n## GitHub login\n\nThe github api client (`github-devbliss` in your path) will ask you for a username\nand password in order to log in to GitHub. The resulting authorization token is then\nstored at `~/.github_token`.\n\n### Using a new / multiple machines\n\nBecause the same application can't create multiple authorization tokens, you need to\ncopy your token to all your machines in order to use git-devbliss on them. If you have\nswitched machines, you can also delete the `git-devbliss/ng` application in your GitHub\napplication settings.\n\n\n## External Dependencies\n\nGit-Devbliss includes, depends on, or uses the following free software components:\n\n- Python3 (http://python.org, Python Software Foundation License)\n- Setuptools (https://pypi.python.org/pypi/setuptools, Python Software Foundation License)\n- Docopt (https://github.com/docopt/docopt, MIT License)\n- Flake8 (https://bitbucket.org/tarek/flake8/wiki/Home, MIT License)\n- Python Coverage (https://bitbucket.org/ned/coveragepy, BSD License)\n- Requests (https://github.com/kennethreitz/requests, Apache2 License)", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/devbliss/git-devbliss", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.devbliss.com", "keywords": null, "license": "Apache2", "maintainer": null, "maintainer_email": null, "name": "git_devbliss", "package_url": "https://pypi.org/project/git_devbliss/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/git_devbliss/", "project_urls": {"Download": "https://github.com/devbliss/git-devbliss", "Homepage": "http://www.devbliss.com"}, "release_url": "https://pypi.org/project/git_devbliss/2.0.6/", "requires_dist": null, "requires_python": null, "summary": "Tool supporting the devbliss Git/GitHub Workflow", "version": "2.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            # devbliss git extensions<br><br>git-devbliss is a command line tool which guides the developer along the<br>[encouraged workflow](https://github.com/devbliss/git-devbliss/blob/master/workflow.md) used for feature development, bug fixing<br>and hotfixing at devbliss.<br><br>The goal of git-devbliss is to summarize certain single git operations into<br>semantically meaningful commands and doing sanity checks to prevent frequent<br>mistakes.<br>The tool does not replace any existing git commands nor does it<br>prevent the developer from using the latter the way he wants to use them.<br><br>To see what's new in the current version, please refer to the [CHANGELOG](https://github.com/devbliss/git-devbliss/blob/master/CHANGES.md)<br><br>## Requirements<br><br>- git 2.0<br>- python 3.4<br>- make<br><br><br>you also need pip3.4, which is included in python 3.4 (of course you can also install with your systems package manager):<br><br>    python3.4 -m ensurepip --upgrade # on debian please use `sudo apt-get install python3-pip`<br><br>do not forget to put the python package path into your system's path if it is not there yet:<br><br>    export PATH=/opt/local/Library/Frameworks/Python.framework/Versions/3.4/bin:$PATH # OSX<br>    <br>If you have an old version of git-devbliss that was installed with Makefile or macports, please uninstall that version first. Remember that bash_completion will be uninstalled as well - please refer to the 'Enabling bash completion' section below for how to restore it.<br><br>## Installation via pypi (recommended)<br><br>The installation of git-devbliss via pypi is the default installation<br>method. Simply type:<br><br>    sudo pip3.4 install --upgrade git-devbliss<br><br>## Installation via GitHub<br><br>    sudo pip3.4 install --upgrade git+ssh://git@github.com/devbliss/git-devbliss.git<br><br>## Installation via Makefile<br><br>    git clone git@github.com:devbliss/git-devbliss.git<br>    cd git-devbliss<br>    sudo make<br>    bin/pip install .<br><br>## Enabling bash completion<br><br>To enable BASH completion you need to source that file in your bash profile:<br><br>    source /etc/bash_completion.d/git-devbliss<br><br><br>## Creating a shorter command for git-devbliss<br><br>run the following command if you want a shorter command for git devbliss:<br>    <br>    git config --global alias.de devbliss<br><br>## Testing<br><br>Simply run:<br><br>    make test<br><br>This will create a python virtual environment, run all checks and tests there and generate a coverage report<br><br><br>## Makefile hooks<br><br>You need to include a Makefile in your project, which defines entry points for<br>common tasks. The Makefile works like an abstraction layer which has<br>four main advantages:<br><br> 1. Your daily work becomes easier because you won't have to adjust your habits<br>    depending on the project.<br> 2. If a project is reactivated after a certain amount of time it eases the<br>    pain of continuing.<br> 3. New developers have an easier start.<br> 4. Conventionally defined make targets make it<br>    possible to integrate hooks in our git devbliss toolset which makes your<br>    daily work easier and more failsafe.<br><br>### Make targets<br><br>You are encouraged to implement the following targets in your Makefile:<br><br>- **test**: Run all your projects software tests<br>- **deb**: Build a ready to deploy Debian package<br>- **clean**: Clean up all messy stuff created while building your project<br>- **changelog**: Make sure your changelog has been updated (will be run when<br>  called 'git devbliss finish') The best thing you can do here is to open a<br>  text editor and get used to write the changelog at time of finishing your<br>  task. This way you will never forget to remark your changes<br>- **version**: Make sure your projects version number has been incremented<br>  (will be run when called 'git devbliss finish') Implement that similar to the<br>  `changelog` target<br>- **finish**: Define some tasks that have to be done before creating a pull<br>  request: e.g. formatting source files...<br>- **release**: Called upon git-devbliss release<br><br>Depending on the git-devbliss command used, there is one of two bash variables<br>available:<br>- **finish**, **version**, **changelog**:  `DEVBLISS_BRANCH_TYPE` is available that holds the branch type<br>  value (`feature`, `bug`, `hotfix`, `research` or `refactor`)<br>- **release**: `DEVBLISS_VERSION` is available that carries the version number<br>  used with the release command<br><br>## Make target snippets<br><br>This section contains some snippets for the use in conjuction with the<br>recomended make targets. You can copy/paste from here or even better add your<br>own snippets for the benefit of others.<br><br>### Open changelog in the default editor<br><br>    changelog:<br>    \t@$${EDITOR:-\"vi\"} debian/changelog<br><br>    .PHONY: changelog<br><br>### Typical maven delegation<br><br>    build:<br>    \tmvn gwt:compile<br><br>    changelog:<br>    \t@$${EDITOR:-\"vi\"} debian/changelog<br><br>    test:<br>    \tmvn test<br><br>    clean:<br>    \tmvn clean<br><br>## GitHub login<br><br>The github api client (`github-devbliss` in your path) will ask you for a username<br>and password in order to log in to GitHub. The resulting authorization token is then<br>stored at `~/.github_token`.<br><br>### Using a new / multiple machines<br><br>Because the same application can't create multiple authorization tokens, you need to<br>copy your token to all your machines in order to use git-devbliss on them. If you have<br>switched machines, you can also delete the `git-devbliss/ng` application in your GitHub<br>application settings.<br><br><br>## External Dependencies<br><br>Git-Devbliss includes, depends on, or uses the following free software components:<br><br>- Python3 (http://python.org, Python Software Foundation License)<br>- Setuptools (https://pypi.python.org/pypi/setuptools, Python Software Foundation License)<br>- Docopt (https://github.com/docopt/docopt, MIT License)<br>- Flake8 (https://bitbucket.org/tarek/flake8/wiki/Home, MIT License)<br>- Python Coverage (https://bitbucket.org/ned/coveragepy, BSD License)<br>- Requests (https://github.com/kennethreitz/requests, Apache2 License)\n          </div>"}, "last_serial": 1278565, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "437958fa0b896c57aff42c2c0465a4ff", "sha256": "66a73ce8a50918eec4756fd94c985d19ad91ab83f3d42c3d462820981573ab1e"}, "downloads": -1, "filename": "git_devbliss-2.0.0.tar.gz", "has_sig": false, "md5_digest": "437958fa0b896c57aff42c2c0465a4ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18997, "upload_time": "2014-06-27T12:22:52", "upload_time_iso_8601": "2014-06-27T12:22:52.796216Z", "url": "https://files.pythonhosted.org/packages/cf/3e/bb14eaede39fe77cc00c3ccc178e10b80ccf4b35008d0f210ed6daba95ac/git_devbliss-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "7dbe5219d9a8ffebdc82e9b46e36d3de", "sha256": "bc9b48bca795412adc48bee5effa63aa79101c2ca40c2989cbdc017cfb476988"}, "downloads": -1, "filename": "git_devbliss-2.0.1.tar.gz", "has_sig": false, "md5_digest": "7dbe5219d9a8ffebdc82e9b46e36d3de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19017, "upload_time": "2014-06-27T12:27:01", "upload_time_iso_8601": "2014-06-27T12:27:01.127202Z", "url": "https://files.pythonhosted.org/packages/65/9b/400997cd32f658d39180dcf7397615f929553023225b96f920f7100d3a26/git_devbliss-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "bd86d1c47f7b284f7c334c378f52d2ae", "sha256": "dc0594763e8db5774ef91381b629309360b75fdc89f74d6d30e73a5b72d68fec"}, "downloads": -1, "filename": "git_devbliss-2.0.2.tar.gz", "has_sig": false, "md5_digest": "bd86d1c47f7b284f7c334c378f52d2ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19028, "upload_time": "2014-06-27T12:36:13", "upload_time_iso_8601": "2014-06-27T12:36:13.626815Z", "url": "https://files.pythonhosted.org/packages/a1/31/3a7f280d83a55b3a2ee7203df98291749b69f8056fdd07b3854ee5def3d8/git_devbliss-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "7eed3785a5d54685de148b962cf4cbcc", "sha256": "4fdf1365a18ea917120cd6d7d730100338dd9bc002062af662f6f39af1938e9c"}, "downloads": -1, "filename": "git_devbliss-2.0.3.tar.gz", "has_sig": false, "md5_digest": "7eed3785a5d54685de148b962cf4cbcc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20847, "upload_time": "2014-06-27T12:40:49", "upload_time_iso_8601": "2014-06-27T12:40:49.518587Z", "url": "https://files.pythonhosted.org/packages/75/85/bdabd43a5d2927e649e4db97424b0a7f2d183a31f4a20d3fb1b06f6e79b3/git_devbliss-2.0.3.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "18ecc06998ce66badebe3ff8fbed2344", "sha256": "0108fc93755966e5e0fbfec54743769745f3e4beb788d1b67c1bac4332405372"}, "downloads": -1, "filename": "git_devbliss-2.0.4.tar.gz", "has_sig": false, "md5_digest": "18ecc06998ce66badebe3ff8fbed2344", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21013, "upload_time": "2014-07-04T07:57:35", "upload_time_iso_8601": "2014-07-04T07:57:35.750627Z", "url": "https://files.pythonhosted.org/packages/42/fd/c9386177577742b2067f711937e22bf29f775d3579eadb29a213f84a1a04/git_devbliss-2.0.4.tar.gz", "yanked": false}], "2.0.5": [{"comment_text": "", "digests": {"md5": "c91ad89ba8956b6feb1a56323ee3d56d", "sha256": "6abc95a4d11bb0771f373d71ca820ba2d2ca43a526eafd8ea4e722b7e23b1eee"}, "downloads": -1, "filename": "git_devbliss-2.0.5.tar.gz", "has_sig": false, "md5_digest": "c91ad89ba8956b6feb1a56323ee3d56d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21014, "upload_time": "2014-07-08T12:32:31", "upload_time_iso_8601": "2014-07-08T12:32:31.246109Z", "url": "https://files.pythonhosted.org/packages/b1/5d/01c7fbca83ee9318abda77d73b5c304c94203ea2988556c03bcb99570dd8/git_devbliss-2.0.5.tar.gz", "yanked": false}], "2.0.6": [{"comment_text": "", "digests": {"md5": "d6c2167140e7f1b8e5620ad48bc45806", "sha256": "48cbc56b36ed73c11d566e10a06e31271fb691956d154a094fd490bf0fa866a1"}, "downloads": -1, "filename": "git_devbliss-2.0.6.tar.gz", "has_sig": false, "md5_digest": "d6c2167140e7f1b8e5620ad48bc45806", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21079, "upload_time": "2014-10-22T08:21:14", "upload_time_iso_8601": "2014-10-22T08:21:14.495159Z", "url": "https://files.pythonhosted.org/packages/20/c9/27ca07f6fefd11921e2810be5bd103c5afd5ae5126be7ab875868048078a/git_devbliss-2.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d6c2167140e7f1b8e5620ad48bc45806", "sha256": "48cbc56b36ed73c11d566e10a06e31271fb691956d154a094fd490bf0fa866a1"}, "downloads": -1, "filename": "git_devbliss-2.0.6.tar.gz", "has_sig": false, "md5_digest": "d6c2167140e7f1b8e5620ad48bc45806", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21079, "upload_time": "2014-10-22T08:21:14", "upload_time_iso_8601": "2014-10-22T08:21:14.495159Z", "url": "https://files.pythonhosted.org/packages/20/c9/27ca07f6fefd11921e2810be5bd103c5afd5ae5126be7ab875868048078a/git_devbliss-2.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:07 2020"}