{"info": {"author": "Daniel Kraft <daniel.kraft@d9t.de>", "author_email": "daniel.kraft@d9t.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: System :: Archiving :: Backup"], "description": "What is backy2?\n###############\n\nbacky2 is a deduplicating block based backup software.\n\nThe primary usecases for backy are:\n\n* fast and bandwidth-efficient backup of ceph/rbd virtual machine images to S3\n  or NFS storage\n* backup of LVM volumes (e.g. from personal computers) to external USB disks\n\n\nMain features\n-------------\n\n**Small backups**\n    backy2 deduplicates while reading from the block device and only writes\n    blocks once if they have the same checksum (sha512).\n\n**Fast backups**\n    With the help of ceph's ``rbd diff``, backy2 will only read the changed\n    blocks since the last backup. We have virtual machines with 600GB backed\n    up in about 30 seconds with <70MB/s bandwidth.\n\n**Small required bandwidth to the backup target**\n    As only changed blocks are written to the backup target, a small (i.e.\n    gbit) connection is sufficient even for larger backups. Even with newly\n    created block devices the traffic to the backup target is small, because\n    these block devices usually are full of \\\\0 and are deduplicated before even\n    reaching the target storage.\n\n**As simple as cp, but as clever as backup needs to be**\n    With a very small set of commands, good ``--help`` and intuitive usage,\n    backy2 feels mostly like ``cp``. And that's intentional, because we think,\n    a restore must be fool-proof and succeed even if you're woken up at 3am\n    and are drunk.\n\n    And it must be hard for you to do stupid things. For example, existing\n    files or rbd volumes will not be overwritten unless you ``--force``,\n    deletion of young backups will fail per default.\n\n**Scrubbing with or without source data against bitrod and other data loss**\n    Every backed up block keeps a checksum with it. When backy scrubs the backup,\n    it reads the block from the backup target storage, calculates it's\n    checksum and compares it to the stored checksum (and size). If the checksum\n    differs, it's most likely that there was an error when storing or reading\n    the block, or by bitrod on the backup target storage.\n\n    Then, the block and the backups it belongs to, are marked 'invalid' and the\n    block will be re-read for the next backup version even if ``rbd diff`` indicates\n    that it hasn't been changed.\n\n    Scrubbing can also take a percentage value for how many blocks of the backup\n    it should scrub. So you can statistically scrub 16% each day and have a\n    full scrub each week (16*7 > 100).\n\n    .. NOTE:: Even invalid backups can be restored!\n\n**Fast restores**\n    With supporting block storage (like ceph/rbd), a sparse restore is\n    possible. This means, sparse blocks (i.e. blocks which \"don't exist\" or are\n    all \\\\0) will be skipped on restore.\n\n**Parallel: backups while scrubbing while restoring**\n    As backy2 is a long-running process, you will of course not want to wait\n    until something has finished. So there are very few places in backy where\n    a global lock will be applied (especially on cleanup which you can kill\n    at any time to release the lock).\n\n    So you can scrub, backup and restore (multiple times each) on the same\n    machine.\n\n**Does not flood your caches**\n    When reading large pieces of data on linux, often buffers/caches get filled\n    with this data (which in case of backups is essentially only needed once).\n    backy2 instructs linux to immediately forget the data once it's processed.\n\n**Backs up very large volumes RAM- and CPU efficiently**\n    We backup multiple terabytes per vm (and this multiple times per night).\n    backy2 typically runs in <1GB of RAM with these volume sizes. RAM usage\n    depends mostly on simultaneous reads/writes which are configured through\n    ``backy.cfg``.\n\n**backups can be directly mounted**\n    backy2 brings it's own nbd (network block device) server. So a simple linux\n    command makes backups directly mountable - even on another machine::\n\n        root@backy2:~# backy2 nbd --help\n        usage: backy2 nbd [-h] [-a BIND_ADDRESS] [-p BIND_PORT] [-r] [version_uid]\n\n        positional arguments:\n          version_uid           Start an nbd server for this version\n\n        optional arguments:\n          -h, --help            show this help message and exit\n          -a BIND_ADDRESS, --bind-address BIND_ADDRESS\n                                Bind to this ip address (default: 127.0.0.1)\n          -p BIND_PORT, --bind-port BIND_PORT\n                                Bind to this port (default: 10809)\n          -r, --read-only       Read only if set, otherwise a copy on write backup is\n                                created.\n\n        root@backy2:~# backy2 nbd 446781e2-2046-11e7-8594-00163e8c0370\n            INFO: $ /usr/bin/backy2 nbd 446781e2-2046-11e7-8594-00163e8c0370\n            INFO: Starting to serve nbd on 127.0.0.1:10809\n            INFO: You may now start\n            INFO:   nbd-client -l 127.0.0.1 -p 10809\n            INFO: and then get the backup via\n            INFO:   modprobe nbd\n            INFO:   nbd-client -N <version> 127.0.0.1 -p 10809 /dev/nbd0\n\n        root@backy2:~# partprobe /dev/nbd0\n        root@backy2:~# mount /dev/nbd0p1 /mnt\n\n    These mounts are read/write (unless you specify ``-r``) and writing to them\n    creates a copy-on-write backup version (*i.e. the original version is not\n    modified*).\n\n**Automatic tagging of backup versions**\n    You can tag backups with your own tags depending on your usecase. However,\n    backy2 also tags automatically with these tags::\n\n        b_daily\n        b_weekly\n        b_monthly\n\n    It has a clever algorithm to detect how long the backup for any given image\n    and this tag is ago and then tags again with the given tag. So you'll see\n    a b_weekly every 7 days (if you keep these backups).\n\n**Prevents you from doing something stupid**\n    By providing a config-value for how old backups need to be in order to be\n    able to delete them, you can't accidentially delete very young backups.\n\n    Also, with ``backy protect`` you can protect versions from being deleted.\n    This is very important when you need to restore a version which is suspect\n    to be deleted within the next hours. During restore a lock will prevent\n    deletion, however, by protecting it, it cannot be deleted until you decide\n    that it's not needed anymore.\n\n    Also, you'll need ``--force`` to overwrite existing files or volumes.\n\n**Easy installation**\n    Currently under ubuntu 16.04, you simply install the .deb. Please refer to\n    :ref:`installation` for a detailed install process.\n\n**Free and Open Source Software**\n    Anyone can review the source code and audit security and functionality.\n    backy2 is licensed under the LGPLv3 license (:ref:`license`).\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://backy2.com/", "keywords": "backup", "license": "LGPL-3", "maintainer": "", "maintainer_email": "", "name": "backy2", "package_url": "https://pypi.org/project/backy2/", "platform": "", "project_url": "https://pypi.org/project/backy2/", "project_urls": {"Homepage": "http://backy2.com/"}, "release_url": "https://pypi.org/project/backy2/2.9.17/", "requires_dist": null, "requires_python": "", "summary": "A block / disk based backup and restore solution", "version": "2.9.17", "yanked": false, "html_description": "<div class=\"project-description\">\n            What is backy2?<br>###############<br><br>backy2 is a deduplicating block based backup software.<br><br>The primary usecases for backy are:<br><br>* fast and bandwidth-efficient backup of ceph/rbd virtual machine images to S3<br>  or NFS storage<br>* backup of LVM volumes (e.g. from personal computers) to external USB disks<br><br><br>Main features<br>-------------<br><br>**Small backups**<br>    backy2 deduplicates while reading from the block device and only writes<br>    blocks once if they have the same checksum (sha512).<br><br>**Fast backups**<br>    With the help of ceph's ``rbd diff``, backy2 will only read the changed<br>    blocks since the last backup. We have virtual machines with 600GB backed<br>    up in about 30 seconds with &lt;70MB/s bandwidth.<br><br>**Small required bandwidth to the backup target**<br>    As only changed blocks are written to the backup target, a small (i.e.<br>    gbit) connection is sufficient even for larger backups. Even with newly<br>    created block devices the traffic to the backup target is small, because<br>    these block devices usually are full of \\\\0 and are deduplicated before even<br>    reaching the target storage.<br><br>**As simple as cp, but as clever as backup needs to be**<br>    With a very small set of commands, good ``--help`` and intuitive usage,<br>    backy2 feels mostly like ``cp``. And that's intentional, because we think,<br>    a restore must be fool-proof and succeed even if you're woken up at 3am<br>    and are drunk.<br><br>    And it must be hard for you to do stupid things. For example, existing<br>    files or rbd volumes will not be overwritten unless you ``--force``,<br>    deletion of young backups will fail per default.<br><br>**Scrubbing with or without source data against bitrod and other data loss**<br>    Every backed up block keeps a checksum with it. When backy scrubs the backup,<br>    it reads the block from the backup target storage, calculates it's<br>    checksum and compares it to the stored checksum (and size). If the checksum<br>    differs, it's most likely that there was an error when storing or reading<br>    the block, or by bitrod on the backup target storage.<br><br>    Then, the block and the backups it belongs to, are marked 'invalid' and the<br>    block will be re-read for the next backup version even if ``rbd diff`` indicates<br>    that it hasn't been changed.<br><br>    Scrubbing can also take a percentage value for how many blocks of the backup<br>    it should scrub. So you can statistically scrub 16% each day and have a<br>    full scrub each week (16*7 &gt; 100).<br><br>    .. NOTE:: Even invalid backups can be restored!<br><br>**Fast restores**<br>    With supporting block storage (like ceph/rbd), a sparse restore is<br>    possible. This means, sparse blocks (i.e. blocks which \"don't exist\" or are<br>    all \\\\0) will be skipped on restore.<br><br>**Parallel: backups while scrubbing while restoring**<br>    As backy2 is a long-running process, you will of course not want to wait<br>    until something has finished. So there are very few places in backy where<br>    a global lock will be applied (especially on cleanup which you can kill<br>    at any time to release the lock).<br><br>    So you can scrub, backup and restore (multiple times each) on the same<br>    machine.<br><br>**Does not flood your caches**<br>    When reading large pieces of data on linux, often buffers/caches get filled<br>    with this data (which in case of backups is essentially only needed once).<br>    backy2 instructs linux to immediately forget the data once it's processed.<br><br>**Backs up very large volumes RAM- and CPU efficiently**<br>    We backup multiple terabytes per vm (and this multiple times per night).<br>    backy2 typically runs in &lt;1GB of RAM with these volume sizes. RAM usage<br>    depends mostly on simultaneous reads/writes which are configured through<br>    ``backy.cfg``.<br><br>**backups can be directly mounted**<br>    backy2 brings it's own nbd (network block device) server. So a simple linux<br>    command makes backups directly mountable - even on another machine::<br><br>        root@backy2:~# backy2 nbd --help<br>        usage: backy2 nbd [-h] [-a BIND_ADDRESS] [-p BIND_PORT] [-r] [version_uid]<br><br>        positional arguments:<br>          version_uid           Start an nbd server for this version<br><br>        optional arguments:<br>          -h, --help            show this help message and exit<br>          -a BIND_ADDRESS, --bind-address BIND_ADDRESS<br>                                Bind to this ip address (default: 127.0.0.1)<br>          -p BIND_PORT, --bind-port BIND_PORT<br>                                Bind to this port (default: 10809)<br>          -r, --read-only       Read only if set, otherwise a copy on write backup is<br>                                created.<br><br>        root@backy2:~# backy2 nbd 446781e2-2046-11e7-8594-00163e8c0370<br>            INFO: $ /usr/bin/backy2 nbd 446781e2-2046-11e7-8594-00163e8c0370<br>            INFO: Starting to serve nbd on 127.0.0.1:10809<br>            INFO: You may now start<br>            INFO:   nbd-client -l 127.0.0.1 -p 10809<br>            INFO: and then get the backup via<br>            INFO:   modprobe nbd<br>            INFO:   nbd-client -N &lt;version&gt; 127.0.0.1 -p 10809 /dev/nbd0<br><br>        root@backy2:~# partprobe /dev/nbd0<br>        root@backy2:~# mount /dev/nbd0p1 /mnt<br><br>    These mounts are read/write (unless you specify ``-r``) and writing to them<br>    creates a copy-on-write backup version (*i.e. the original version is not<br>    modified*).<br><br>**Automatic tagging of backup versions**<br>    You can tag backups with your own tags depending on your usecase. However,<br>    backy2 also tags automatically with these tags::<br><br>        b_daily<br>        b_weekly<br>        b_monthly<br><br>    It has a clever algorithm to detect how long the backup for any given image<br>    and this tag is ago and then tags again with the given tag. So you'll see<br>    a b_weekly every 7 days (if you keep these backups).<br><br>**Prevents you from doing something stupid**<br>    By providing a config-value for how old backups need to be in order to be<br>    able to delete them, you can't accidentially delete very young backups.<br><br>    Also, with ``backy protect`` you can protect versions from being deleted.<br>    This is very important when you need to restore a version which is suspect<br>    to be deleted within the next hours. During restore a lock will prevent<br>    deletion, however, by protecting it, it cannot be deleted until you decide<br>    that it's not needed anymore.<br><br>    Also, you'll need ``--force`` to overwrite existing files or volumes.<br><br>**Easy installation**<br>    Currently under ubuntu 16.04, you simply install the .deb. Please refer to<br>    :ref:`installation` for a detailed install process.<br><br>**Free and Open Source Software**<br>    Anyone can review the source code and audit security and functionality.<br>    backy2 is licensed under the LGPLv3 license (:ref:`license`).<br><br>\n          </div>"}, "last_serial": 3223380, "releases": {"2.9.14": [{"comment_text": "", "digests": {"md5": "c7acb64f8b5d1d7c0384cef9827bc4d5", "sha256": "d4607acea51fa6c67aa5fcc35c0300ddd15f1ce3cf0a77695324dfd9da620bb9"}, "downloads": -1, "filename": "backy2-2.9.14.tar.gz", "has_sig": false, "md5_digest": "c7acb64f8b5d1d7c0384cef9827bc4d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80111, "upload_time": "2017-10-03T19:05:29", "upload_time_iso_8601": "2017-10-03T19:05:29.693716Z", "url": "https://files.pythonhosted.org/packages/5c/a6/36eb84a11e67af58d4a4c635c184efc53b8d76369699c406517e0ecb53ad/backy2-2.9.14.tar.gz", "yanked": false}], "2.9.15": [{"comment_text": "", "digests": {"md5": "3064960fe1285dcc0353b75d454cfdbf", "sha256": "a03d83117be7632719d836213a0d1dee72f17e1646d2ee683dd216ea32c3677a"}, "downloads": -1, "filename": "backy2-2.9.15.tar.gz", "has_sig": false, "md5_digest": "3064960fe1285dcc0353b75d454cfdbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80110, "upload_time": "2017-10-03T19:44:42", "upload_time_iso_8601": "2017-10-03T19:44:42.440447Z", "url": "https://files.pythonhosted.org/packages/48/22/04c609ed90dc5b8a471437602dbe09f07e229faced669ddedd86ffaf025a/backy2-2.9.15.tar.gz", "yanked": false}], "2.9.16": [{"comment_text": "", "digests": {"md5": "893fd0cb0695893e2d1c9eb4761e9c8f", "sha256": "247dea65f24ea16dbde541594f3e9e098a750dcc990aa928acc53d446390cb35"}, "downloads": -1, "filename": "backy2-2.9.16.tar.gz", "has_sig": false, "md5_digest": "893fd0cb0695893e2d1c9eb4761e9c8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80113, "upload_time": "2017-10-03T20:33:58", "upload_time_iso_8601": "2017-10-03T20:33:58.116512Z", "url": "https://files.pythonhosted.org/packages/c0/a3/9880aabe7c8abd6ef64bc58e1c2ae689f20fa0b757068be7b6830f9c2fcb/backy2-2.9.16.tar.gz", "yanked": false}], "2.9.17": [{"comment_text": "", "digests": {"md5": "821bbe4cdec663424719906daac5a7c1", "sha256": "5c68372c90b4a90b5b4a9e5139a73757d21d7ac9fb1bcc7b4bdc9660e72ce23c"}, "downloads": -1, "filename": "backy2-2.9.17.tar.gz", "has_sig": false, "md5_digest": "821bbe4cdec663424719906daac5a7c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80103, "upload_time": "2017-10-03T20:39:12", "upload_time_iso_8601": "2017-10-03T20:39:12.155409Z", "url": "https://files.pythonhosted.org/packages/b3/b4/b271d8289c61fe0e5ce6def7ef5fe3e2c69d9d6fa8594d67e28f4e881b66/backy2-2.9.17.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "821bbe4cdec663424719906daac5a7c1", "sha256": "5c68372c90b4a90b5b4a9e5139a73757d21d7ac9fb1bcc7b4bdc9660e72ce23c"}, "downloads": -1, "filename": "backy2-2.9.17.tar.gz", "has_sig": false, "md5_digest": "821bbe4cdec663424719906daac5a7c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80103, "upload_time": "2017-10-03T20:39:12", "upload_time_iso_8601": "2017-10-03T20:39:12.155409Z", "url": "https://files.pythonhosted.org/packages/b3/b4/b271d8289c61fe0e5ce6def7ef5fe3e2c69d9d6fa8594d67e28f4e881b66/backy2-2.9.17.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:06 2020"}