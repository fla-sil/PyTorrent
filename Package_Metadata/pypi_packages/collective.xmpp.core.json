{"info": {"author": "Plone Community", "author_email": "plone-developers@lists.sourceforge.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Plone :: 4.1", "Framework :: Plone :: 4.2", "Framework :: Plone :: 4.3", "Intended Audience :: Developers", "Programming Language :: Python"], "description": "============\nIntroduction\n============\n\n``collective.xmpp.core`` is a fork/merge of `jarn.xmpp.twisted`_ and `jarn.xmpp.core`_ both written by Yiorgis Gozadinos (@ggozad).\n\nIt removes the PubSub and Messaging features from the `jarn.xmpp.core`_ and is intended to instead serve\nonly as a base on which Plone add-ons with XMPP-enabled features can depend.\n\nCurrently it provides the following features:\n\n* Extensions to the `wokkel`_ package by implementing parts of the following XMPP extensions:\n\n  * `XEP-0071`_ XHTML-IM.\n\n  * `XEP-0144`_ Roster Item Exchange.\n\n  * `XEP-0060`_ Publish-Subscribe.\n\n  * `XEP-0248`_ PubSub Collection Nodes.\n\n  * `XEP-0133`_ Service Administration.\n\n* A `Twisted`_ reactor that runs side-by-side with the Zope instance.\n* Utilities that provide XMPP clients of two sorts, a *deferred* client that initially connects, executes a task and disconnects as soon as it is done, as well as a normal client that remains connected and can respond to XMPP events.\n* An XMPP component base class for writing custom components.\n* Integration of plone user accounts with XMPP accounts and authentication.\n\n============\nInstallation\n============\n\nBefore setting up the package you need to have a working XMPP server and access to the administration account on the server. The package has only been tested with ejabberd version 2.1.5 and above which is recommended. In any case the following XMPP extensions need to be supported by the server you are going to use:\n\n* `XEP-0144`_ Roster Item Exchange.\n* `XEP-0133`_ Service Administration.\n* `XEP-0124`_ Bidirectional-streams Over Synchronous HTTP (BOSH)\n* `XEP-0206`_ XMPP over BOSH\n\nBuildout\n--------\n\nA sample buildout you can use as a starting point can be found at `collective.xmpp.buildout`_.\n\nSetting up ejabberd (>=2.1.5)\n-----------------------------\n\nAutomatic configuration\n-----------------------\n\n* Use the recipe provided in `collective.xmpp.buildout`_ (in which case you\n  will need to have erlang installed, erlang-nox on Debian) or download the\n  `ejabberd`_ installer.\n\n* A minimal configuration for ejabberd can be generated for convenience by the ``ejabberd.cfg`` part of `collective.xmpp.buildout`_. You will need to copy the ``templates`` directory and modify the recipe configuration accordingly::\n\n    [ejabberd.cfg]\n    recipe = collective.recipe.template\n    input = templates/ejabberd.cfg.in\n    output = ${buildout:directory}/etc/ejabberd.cfg\n    xmppdomain = localhost\n    admin_userid = admin\n    collaboration_allowed_subnet = 0,0,0,0\n    collaboration_port = 5347\n    component_password = secret\n\n\nwhere ``xmppdomain`` is the domain (or virtual host) running on your XMPP server and ``admin_userid`` is the id the the administrator account that Plone is going to use to interact with the server. The rest of the options are  used by ``collective.xmpp.collaboration`` for the collaborative editing component connecting to the XMPP server. Here, ``collaboration_allowed_subnet`` specifies from which IPs the XMPP server is going to accept connections and should match the IPs your Plone instances are going to be using. Leaving it to ``0,0,0,0`` will allow all IPs, ``127,0,0,1`` will allow only ``localhost``. Finally ``collaboration_port`` is the port to which the collaboration component is going to connect to and ``component_password`` is the shared password between the component and the XMPP server.\n\nManual configuration\n--------------------\nIf you already run an XMPP server here are some hints on how to set it up:\n\n* We assume that your xmpp domain is ``localhost``. There should exist an administrator account ``admin@localhost``. In addition if you intend to run some of the tests in any of the ``collective.xmpp.*`` packages you will need to be running an additional XMPP node on ``localhost`` if you use some other domain for production. You can safely remove any references to ``localhost`` if you are not interested in doing that.\n\n* Make sure you have enabled the `http_bind` module, as this is what the javascript clients will use to connect. You should have  something like this in your ejabberd.cfg::\n\n    {5280, ejabberd_http, [\n         http_bind,\n         web_admin\n         ]}\n\n* In order to test and run custom XMPP components (for instance the collaborative editing component provided by ``collective.xmpp.collaboration``) you will need to allow them to connect. This means you should have something similar to this configuration::\n\n    {5347, ejabberd_service, [\n              {access, all},\n              {shaper_rule, fast},\n              {ip, {127, 0, 0, 1}},\n              {hosts,\n               [\"collaboration.localhost\"],\n               [{password, \"secret\"}]\n              }\n             ]},\n\nThe rest of the standard options should be fine.\n\nAdministrator account\n---------------------\nIf you have not done so during installation you might need to create manually the administrator account. In the ejabberd folder execute::\n\n    ./bin/ejabberdctl register admin localhost your_password\n\nTest that you can access your ejabberd by logging to the admin interface (typically ``http://localhost:5280/admin``). You should also be able to access the ``http-bind`` interface at ``http://localhost:5280/http-bind``.\n\nSetting up your front-end proxy\n-------------------------------\nOn the client-side every authenticated user will be connected to your jabber server through an emulated bidirectional stream through HTTP. To allow for this you need a proxy in front of Plone that will be redirecting the XMPP stream to your XMPP server. It is possible to do without one using the inferior solution of Flash plugins but this is not going to be supported.\n\nAssuming you run your webserver as a proxy at port ``8080`` for the domain ``localhost``, Zope listens on ``8081``, there exists a Plone site with id  ``Plone`` and your ejabberd has the ``http_bind`` configured for port ``5280``, your ``nginx`` or ``apache`` configuration will look as follows:\n\nNginx\n-----\n  ::\n\n    http {\n        server {\n            listen       8080;\n            server_name  localhost;\n            location ~ ^/http-bind/ {\n                proxy_pass http://localhost:5280;\n            }\n            location / {\n                proxy_pass http://localhost:8081/VirtualHostBase/http/localhost:8080/Plone/VirtualHostRoot/;\n            }\n        }\n    }\n\nApache\n------\n  ::\n\n    <VirtualHost *:8080>\n        ServerName localhost\n        RewriteEngine On\n        RewriteRule ^/http-bind(.*) http://localhost:5280/http-bind$1 [P,L]\n        RewriteRule ^/(.*) http://localhost:8081/VirtualHostBase/http/%{HTTP_HOST}:8080/Plone/VirtualHostRoot/$1 [P,L]\n    </VirtualHost>\n\nSetting up your Plone instances\n-------------------------------\nYour instances will need to maintain a connection to the administrator account of your XMPP server. This is accomplished through ``Twisted`` and you will need to run a Twisted reactor on each of them. To do so include this in your instance section of your buildout::\n\n    zcml-additional =\n      <configure xmlns=\"http://namespaces.zope.org/zope\">\n        <include package=\"collective.xmpp.core\" file=\"reactor.zcml\" />\n      </configure>\n\nMoreover, if your Plone buildout is not using plone.dexterity and you want to avoid this dependency being brought just add the bellow line to your CFG file::\n\n    [versions]\n    Products.UserAndGroupSelectionWidget = 2.0.4\n\nAgain, it will help you to have a look at the sample buildout provided in `collective.xmpp.buildout`_.\n\nSetting up a new Plone site\n---------------------------\n* Start ejabberd (if you used the recipe to build ejabberd, ``bin/ejabberd`` will do the job).\n* Start the Nginx frontend. ``bin/frontend start``\n* Start your zope instance.\n* Access Zope directly at ``http://localhost:8081/manage`` and create a new Plone site with ``collective.xmpp.core``.\n* Go to the Plone control panel and click on the ``XMPP Integration`` link under ``Plone Configuration``.  Make sure the XMPP settings reflect your installation.\n* Restart your Plone instance.\n* Upon the first request the administrator will log to his account. You should see things happening in the logs and if there are any errors something might be wrong with your installation.\n* When you create a new Plone user, they will automatically be registered on the XMPP server. Your existing users can also be registered by going back to the ``XMPP Integration`` configlet in the control panel, and then clicking on the ``User Registration`` tab. Keep an eye on your instance.log traceback in the console to make sure there aren't any errors. You can see the registered users by going to the XMPP admin interface at localhost:5280/admin.\n\nMaking sure things work ;)\n--------------------------\n\nThis is a complex infrastructure so it can be hard to know what goes wrong sometimes. Do not despair, here are a few things to try:\n\n* Make sure your ejabberd is running. Connect to it normal client as the admin user.\n* Verify that http-binding is setup properly on ejabberd. Visiting ``http://localhost:5280/http-bind`` should tell you it's working.\n* Verify that XMPP requests will get properly through your proxy. Visiting ``http://localhost:8080/http-bind/`` should give you the same result as above.\n* When you start your Zope instance in foreground you can verify the Twisted reactor is running fine::\n\n    2011-09-01 14:37:38 INFO collective.xmpp.core Starting Twisted reactor...\n    2011-09-01 14:37:38 INFO collective.xmpp.core Twisted reactor started\n    2011-09-01 14:37:38 INFO Zope Ready to handle requests\n\n* After the first request to the site, you should also see in the logs::\n\n    2011-09-01 14:45:48 INFO collective.xmpp.core XMPP admin client has authenticated succesfully.\n\n* If your Plone user was succesfully registered on the XMPP server, logging-in to the Plone site with a user should also authenticate him with the XMPP server. This is indicated in the logs by::\n\n    2011-09-01 14:45:50 INFO collective.xmpp.core Pre-binded ggozad@localhost/auto-QravOoyEeE\n\n=============\nExperimenting\n=============\n\nUsage\n-----\n\n* Add a few users.\n* Login as one of them, and in a different browser as some other. Use the frontend to access the site, if you used the settings above this should be ``http://localhost:8080``.\n* All actions are performed through the viewlet on the top right: ``Online users`` will display the users currently logged in. Clicking it will give you the list of users. You can message them directly or look at their personal feed.\n* Try posting an entry to your feed. Links will be transformed automatically. As soon as you submit other logged-in users will receive a notification in real-time. Using a recent browser that supports geolocation will allow you also share your location at the time of the post.\n* Try commenting on a feed post.\n* By clicking on the \"Following\" user action you can select which users you want to follow, or follow them all.\n* You can see all posts by clicking on ``Site feed`` on the viewlet.\n\n========\nSecurity\n========\n\nIncluded is an implementation of an authenticating client over BOSH according to `XEP-0206`_. This practically means that the javascript client never needs to know the password of the XMPP user. Instead, the user is authenticated directly between the XMPP server and the Plone instance. A pair of secret tokens are exchanged, valid for a short time (~2 minutes). It is this pair that is given to the javascript client and not the password.\n\nWhen a Plone user is registered on the XMPP server, a random password is generated and stored in the ZODB in a persistent utility.\n\nIf you do not need to access the XMPP accounts outside of the Plone instance you can additionally hide the entire XMPP service behind a firewall and only allow connections to it from the Plone instances. This in combination with HTTPS should be enough for the paranoid among us.\n\n=======\nTesting\n=======\n\nSome of the included tests are functional tests that require a XMPP server running on ``localhost`` as well as an administrator account setup up on this server with JID ``admin@localhost`` and password ``admin``. If you wish to run those you have to specify a *level* 2 on your testrunner, i.e.::\n\n    ./bin/test -a 2 -s collective.xmpp.core\n\nYou'll also have to configure ejabberd to listen on port 5347 for external\ncomponents.\n\nThe minimum requirement would be to add the following entry to the `listen` keyword:::\n\n    {listen,\n        [\n        % Add only the line below\n        {{5347, {0,0,0,0} }, ejabberd_service, []}\n        ]\n    }\n\n==============================\nTips for production deployment\n==============================\n\nDon't cache @@xmpp-loader:\n--------------------------\n\nMake sure the **${site_url}/@@xmpp-loader** URL isn't cached. This view\nreturns an authentication token which has to be different each time you\nreload your page.\n\nIf you cache this, the token won't change and you won't be able to communicate\nwith the XMPP server.\n\n=======\nCredits\n=======\n\n* Thanks goes Yiorgis Gozadinos (@ggozad) for writing jarn.xmpp.core and being the first to integrate XMPP into Plone.\n\n.. _XEP-0248: http://xmpp.org/extensions/xep-0248.html\n.. _XEP-0060: http://xmpp.org/extensions/xep-0060.html\n.. _XEP-0071: http://xmpp.org/extensions/xep-0071.html\n.. _XEP-0144: http://xmpp.org/extensions/xep-0144.html\n.. _XEP-0133: http://xmpp.org/extensions/xep-0133.html\n.. _XEP-0124: http://xmpp.org/extensions/xep-0124.html\n.. _XEP-0206: http://xmpp.org/extensions/xep-0206.html\n.. _ejabberd: http://www.ejabberd.im\n.. _Jarn AS: http://jarn.com\n.. _collective.xmpp.core: http://github.com/collective/collective.xmpp.core\n.. _collective.xmpp.buildout: http://github.com/collective/collective.xmpp.buildout\n.. _jarn.xmpp.buildout: http://github.com/ggozad/jarn.xmpp.buildout\n.. _collective.xmpp.collaboration: http://github.com/collective/collective.xmpp.collaboration\n.. _jarn.xmpp.twisted: http://github.com/ggozad/jarn.xmpp.twisted\n.. _jarn.xmpp.core: http://github.com/ggozad/jarn.xmpp.core\n.. _wokkel: http://wokkel.ik.nu\n.. _Twisted: http://twistedmatrix.com\n\n=========\nChangelog\n=========\n\n0.3 (2013-06-28)\n----------------\n\n- Feature: Remove password from storage if jabber server returns not-authorized\n  in order to try to create the user again as this error comes up when the \n  password is still present but the jabber server doesn't have the user anymore\n  [ichim-david]\n- Feature: Log response from the jabber server when trying to bind client and \n  it fails\n  [ichim-david]\n- Bugfix: Could not get portrait data for users with custom profile pictures.\n  [jcbrand]\n- Feature: Add a new controlpanel option to update all user's vCards.\n  [jcbrand]\n- Bugfix: When pre-binding, fetch admin user's password from IXMPPSettings. \n  [jcbrand]\n\n\n0.2 (2013-03-20)\n----------------\n\n- Feature: Include the user's portrait in their vCard.\n  [jcbrand]\n- Feature: Update the user's vCard when they change their personal preferences.\n  [jcbrand]\n- Bugfix: Last user's roster suggestions ignored by XMPP server.\n  [jcbrand]\n\n\n0.1 (2013-03-15)\n----------------\n\n- Released. [jcbrand] \n\n\n0.1b8 (2013-03-09)\n------------------\n\n- Bugfix. All xmpp passwords were cleared when deregistering a subset of users.\n  [jcbrand]\n\n\n0.1b7 (2013-03-05)\n------------------\n\n- Previous release was broken. Didn't include ZCML files.\n  [jcbrand]\n\n\n0.1b6 (2013-03-04)\n------------------\n\n- Fixed rst issues when read by pypi which combines readme.rst and history.txt\n  [ichim-david]\n\n0.1b5 (2013-03-04)\n------------------\n\n- Feature: \"Completely wipe password storage\" action is now traced under zope log.\n  [alecghica]\n- Bugfix: 'ComponentLookupError' error when adding a local user.\n  [alecghica]\n- Feature: added error image and 'Unable to communicate with chat server' message\n  when unable to bind the user to jabber server\n  [alecghica]\n- Feature: Add a VCard when registering a user on the XMPP server.\n  [jcbrand]\n- Feature: Make manual user registration idempotent (ignore already registered\n  users).\n  [jcbrand]\n- Users are no longer registered upon creation. They must either be registered\n  manually, or upon next logged in visit.\n  [jcbrand]\n\n\n0.1b4 (2013-02-02)\n------------------\n\n- Bugfix for \"Deregister All\" in @@xmpp-user-setup page. Site root was not set\n  in callback method.\n  [jcbrand]\n\n\n0.1b3 (2013-01-17)\n------------------\n\n- Add option to completely clear the XMPP password utility.\n  [jcbrand]\n- Add upgrade step to make sure the registry is reloaded so that the\n  \"auto-register on login\" entry is added.\n  [jcbrand]\n- Bugfix. Always get the XMPP virtual host from the registry.\n  [jcbrand]\n- Bugfix. When auto-subscribing, LDAP users' fullnames weren't being shown.\n  [jcbrand]\n\n\n0.1b2 (2013-01-17)\n------------------\n\n- Add a configuration setting to turn auto-register on login on. It's disabled\n  by default.\n  [jcbrand]\n\n\n0.1b1 (2013-01-16)\n------------------\n\n- Feature: if not already registered, Plone users get\n  registered on jabber server on login\n  [alecghica]\n- Bugfix: no need to refresh browser for users registered\n  on login, they are binded on the fly\n  [alecghica]\n- Bugfix: \"Deregister ALL Users\" function, credentials were\n  left un-deleted under IXMPPPasswordStorage resulting in\n  various errors when registering/deregistering users\n  [alecghica]\n- Bugfix: fixed subscribing when a new plone user is added\n  [alecghica]\n- Bugfix: users were only being auto-subscribed to\n  other users added in that current session\n  [alecghica]\n- Bugfix: new users are now auto-subscribed only\n  to existing XMPP users\n  [alecghica]\n\n\n0.1a8 (2012-12-13)\n------------------\n\n- Bugfix. Check for GS profile version in dbconfig.py to avoid the instance not\n  starting without having run the GS upgrade step.\n  [jcbrand]\n\n\n0.1a7 (2012-12-13)\n------------------\n\n- Documentation updated with Apache config example.\n  [alecghica]\n- Cleaned up dependencies that already ship with Plone\n  [alecghica]\n- Made Products.UserAndGroupSelectionWidget package optional.\n  Products.UserAndGroupSelectionWidget will be imported only\n  if package version is greater then 2.0.4 as it brings dependencies\n  like plone.dexterity witch conflict with other packages found in\n  the current Plone release.\n  [alecghica]\n- Fixed register users form to work for the case when\n  Products.UserAndGroupSelectionWidget is not installed/used\n  [alecghica]\n- Added info on how to make plone.dexterity optional\n  [alecghica]\n- Explicitly store XMPP server's hostname instead of only using the XMPP\n  domain. Also store the port number instead of only using the default.\n  [jcbrand]\n- Allow the configuration of the registry settings via buildout. See\n  dbconfig.py\n  [jcbrand]\n\n0.1a6 (2012-11-22)\n------------------\n\n- Added Spanish translation.\n  [macagua]\n- Added improvements about i18n support.\n  [macagua]\n- Bugfix. Prevent getAllMemberIds from returning duplicates.\n  [jcbrand]\n\n0.1a5 (2012-11-19)\n------------------\n\n- Fixed RST formatting bugs.\n  [jcbrand]\n\n0.1a4 (2012-11-19)\n------------------\n\n- Documentation updated\n  [jcbrand]\n- Fixed HISTORY.txt markup\n  [alecghica]\n- Fixed version used for Products.UserAndGroupSelectionWidget to >2.04\n  as earlier version will crash due to API changes\n  [alecghica]\n- Bugfix. Password utility forgets user passwords when a user is registered.\n  [jcbrand]\n\n0.1a3 (2012-11-09)\n------------------\n\n- Bugfix for RuntimeError that might occur when upgrading from 0.1a1 to 0.1a2\n  [jcbrand]\n\n0.1a2 (2012-11-09)\n------------------\n\n- Add control panel configlet for configuration and registering XMPP users.\n  [jcbrand]\n- Add support for PAS plugins (such as LDAP).\n  [jcbrand]\n\n0.1a1 (2012-10-18)\n------------------\n\n- Forked from jarn.xmpp.core 0.34\n  [jcbrand]\n- Merged in jarn.xmpp.twisted 0.1\n  [jcbrand]\n- Removed all PubSub and Messaging related features.\n  [jcbrand]\n- Add browserlayer and check for it when handling events.\n  [jcbrand]\n- Fixed the @@setup-xmpp script to only register the next user once the previous one\n  has finished.\n  [jcbrand]", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/collective/collective.xmpp.core", "keywords": "plone xmpp twisted", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "collective.xmpp.core", "package_url": "https://pypi.org/project/collective.xmpp.core/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.xmpp.core/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/collective/collective.xmpp.core"}, "release_url": "https://pypi.org/project/collective.xmpp.core/0.3/", "requires_dist": null, "requires_python": null, "summary": "Enables core functionality for XMPP-enabled Plone add-ons.", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p><tt>collective.xmpp.core</tt> is a fork/merge of <a href=\"http://github.com/ggozad/jarn.xmpp.twisted\" rel=\"nofollow\">jarn.xmpp.twisted</a> and <a href=\"http://github.com/ggozad/jarn.xmpp.core\" rel=\"nofollow\">jarn.xmpp.core</a> both written by Yiorgis Gozadinos (@ggozad).</p>\n<p>It removes the PubSub and Messaging features from the <a href=\"http://github.com/ggozad/jarn.xmpp.core\" rel=\"nofollow\">jarn.xmpp.core</a> and is intended to instead serve\nonly as a base on which Plone add-ons with XMPP-enabled features can depend.</p>\n<p>Currently it provides the following features:</p>\n<ul>\n<li>Extensions to the <a href=\"http://wokkel.ik.nu\" rel=\"nofollow\">wokkel</a> package by implementing parts of the following XMPP extensions:<ul>\n<li><a href=\"http://xmpp.org/extensions/xep-0071.html\" rel=\"nofollow\">XEP-0071</a> XHTML-IM.</li>\n<li><a href=\"http://xmpp.org/extensions/xep-0144.html\" rel=\"nofollow\">XEP-0144</a> Roster Item Exchange.</li>\n<li><a href=\"http://xmpp.org/extensions/xep-0060.html\" rel=\"nofollow\">XEP-0060</a> Publish-Subscribe.</li>\n<li><a href=\"http://xmpp.org/extensions/xep-0248.html\" rel=\"nofollow\">XEP-0248</a> PubSub Collection Nodes.</li>\n<li><a href=\"http://xmpp.org/extensions/xep-0133.html\" rel=\"nofollow\">XEP-0133</a> Service Administration.</li>\n</ul>\n</li>\n<li>A <a href=\"http://twistedmatrix.com\" rel=\"nofollow\">Twisted</a> reactor that runs side-by-side with the Zope instance.</li>\n<li>Utilities that provide XMPP clients of two sorts, a <em>deferred</em> client that initially connects, executes a task and disconnects as soon as it is done, as well as a normal client that remains connected and can respond to XMPP events.</li>\n<li>An XMPP component base class for writing custom components.</li>\n<li>Integration of plone user accounts with XMPP accounts and authentication.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Before setting up the package you need to have a working XMPP server and access to the administration account on the server. The package has only been tested with ejabberd version 2.1.5 and above which is recommended. In any case the following XMPP extensions need to be supported by the server you are going to use:</p>\n<ul>\n<li><a href=\"http://xmpp.org/extensions/xep-0144.html\" rel=\"nofollow\">XEP-0144</a> Roster Item Exchange.</li>\n<li><a href=\"http://xmpp.org/extensions/xep-0133.html\" rel=\"nofollow\">XEP-0133</a> Service Administration.</li>\n<li><a href=\"http://xmpp.org/extensions/xep-0124.html\" rel=\"nofollow\">XEP-0124</a> Bidirectional-streams Over Synchronous HTTP (BOSH)</li>\n<li><a href=\"http://xmpp.org/extensions/xep-0206.html\" rel=\"nofollow\">XEP-0206</a> XMPP over BOSH</li>\n</ul>\n<div id=\"buildout\">\n<h3>Buildout</h3>\n<p>A sample buildout you can use as a starting point can be found at <a href=\"http://github.com/collective/collective.xmpp.buildout\" rel=\"nofollow\">collective.xmpp.buildout</a>.</p>\n</div>\n<div id=\"setting-up-ejabberd-2-1-5\">\n<h3>Setting up ejabberd (&gt;=2.1.5)</h3>\n</div>\n<div id=\"automatic-configuration\">\n<h3>Automatic configuration</h3>\n<ul>\n<li><p>Use the recipe provided in <a href=\"http://github.com/collective/collective.xmpp.buildout\" rel=\"nofollow\">collective.xmpp.buildout</a> (in which case you\nwill need to have erlang installed, erlang-nox on Debian) or download the\n<a href=\"http://www.ejabberd.im\" rel=\"nofollow\">ejabberd</a> installer.</p>\n</li>\n<li><p>A minimal configuration for ejabberd can be generated for convenience by the <tt>ejabberd.cfg</tt> part of <a href=\"http://github.com/collective/collective.xmpp.buildout\" rel=\"nofollow\">collective.xmpp.buildout</a>. You will need to copy the <tt>templates</tt> directory and modify the recipe configuration accordingly:</p>\n<pre>[ejabberd.cfg]\nrecipe = collective.recipe.template\ninput = templates/ejabberd.cfg.in\noutput = ${buildout:directory}/etc/ejabberd.cfg\nxmppdomain = localhost\nadmin_userid = admin\ncollaboration_allowed_subnet = 0,0,0,0\ncollaboration_port = 5347\ncomponent_password = secret\n</pre>\n</li>\n</ul>\n<p>where <tt>xmppdomain</tt> is the domain (or virtual host) running on your XMPP server and <tt>admin_userid</tt> is the id the the administrator account that Plone is going to use to interact with the server. The rest of the options are  used by <tt>collective.xmpp.collaboration</tt> for the collaborative editing component connecting to the XMPP server. Here, <tt>collaboration_allowed_subnet</tt> specifies from which IPs the XMPP server is going to accept connections and should match the IPs your Plone instances are going to be using. Leaving it to <tt>0,0,0,0</tt> will allow all IPs, <tt>127,0,0,1</tt> will allow only <tt>localhost</tt>. Finally <tt>collaboration_port</tt> is the port to which the collaboration component is going to connect to and <tt>component_password</tt> is the shared password between the component and the XMPP server.</p>\n</div>\n<div id=\"manual-configuration\">\n<h3>Manual configuration</h3>\n<p>If you already run an XMPP server here are some hints on how to set it up:</p>\n<ul>\n<li><p>We assume that your xmpp domain is <tt>localhost</tt>. There should exist an administrator account <tt>admin@localhost</tt>. In addition if you intend to run some of the tests in any of the <tt>collective.xmpp.*</tt> packages you will need to be running an additional XMPP node on <tt>localhost</tt> if you use some other domain for production. You can safely remove any references to <tt>localhost</tt> if you are not interested in doing that.</p>\n</li>\n<li><p>Make sure you have enabled the <cite>http_bind</cite> module, as this is what the javascript clients will use to connect. You should have  something like this in your ejabberd.cfg:</p>\n<pre>{5280, ejabberd_http, [\n     http_bind,\n     web_admin\n     ]}\n</pre>\n</li>\n<li><p>In order to test and run custom XMPP components (for instance the collaborative editing component provided by <tt>collective.xmpp.collaboration</tt>) you will need to allow them to connect. This means you should have something similar to this configuration:</p>\n<pre>{5347, ejabberd_service, [\n          {access, all},\n          {shaper_rule, fast},\n          {ip, {127, 0, 0, 1}},\n          {hosts,\n           [\"collaboration.localhost\"],\n           [{password, \"secret\"}]\n          }\n         ]},\n</pre>\n</li>\n</ul>\n<p>The rest of the standard options should be fine.</p>\n</div>\n<div id=\"administrator-account\">\n<h3>Administrator account</h3>\n<p>If you have not done so during installation you might need to create manually the administrator account. In the ejabberd folder execute:</p>\n<pre>./bin/ejabberdctl register admin localhost your_password\n</pre>\n<p>Test that you can access your ejabberd by logging to the admin interface (typically <tt><span class=\"pre\">http://localhost:5280/admin</span></tt>). You should also be able to access the <tt><span class=\"pre\">http-bind</span></tt> interface at <tt><span class=\"pre\">http://localhost:5280/http-bind</span></tt>.</p>\n</div>\n<div id=\"setting-up-your-front-end-proxy\">\n<h3>Setting up your front-end proxy</h3>\n<p>On the client-side every authenticated user will be connected to your jabber server through an emulated bidirectional stream through HTTP. To allow for this you need a proxy in front of Plone that will be redirecting the XMPP stream to your XMPP server. It is possible to do without one using the inferior solution of Flash plugins but this is not going to be supported.</p>\n<p>Assuming you run your webserver as a proxy at port <tt>8080</tt> for the domain <tt>localhost</tt>, Zope listens on <tt>8081</tt>, there exists a Plone site with id  <tt>Plone</tt> and your ejabberd has the <tt>http_bind</tt> configured for port <tt>5280</tt>, your <tt>nginx</tt> or <tt>apache</tt> configuration will look as follows:</p>\n</div>\n<div id=\"nginx\">\n<h3>Nginx</h3>\n<blockquote>\n<pre>http {\n    server {\n        listen       8080;\n        server_name  localhost;\n        location ~ ^/http-bind/ {\n            proxy_pass http://localhost:5280;\n        }\n        location / {\n            proxy_pass http://localhost:8081/VirtualHostBase/http/localhost:8080/Plone/VirtualHostRoot/;\n        }\n    }\n}\n</pre>\n</blockquote>\n</div>\n<div id=\"apache\">\n<h3>Apache</h3>\n<blockquote>\n<pre>&lt;VirtualHost *:8080&gt;\n    ServerName localhost\n    RewriteEngine On\n    RewriteRule ^/http-bind(.*) http://localhost:5280/http-bind$1 [P,L]\n    RewriteRule ^/(.*) http://localhost:8081/VirtualHostBase/http/%{HTTP_HOST}:8080/Plone/VirtualHostRoot/$1 [P,L]\n&lt;/VirtualHost&gt;\n</pre>\n</blockquote>\n</div>\n<div id=\"setting-up-your-plone-instances\">\n<h3>Setting up your Plone instances</h3>\n<p>Your instances will need to maintain a connection to the administrator account of your XMPP server. This is accomplished through <tt>Twisted</tt> and you will need to run a Twisted reactor on each of them. To do so include this in your instance section of your buildout:</p>\n<pre>zcml-additional =\n  &lt;configure xmlns=\"http://namespaces.zope.org/zope\"&gt;\n    &lt;include package=\"collective.xmpp.core\" file=\"reactor.zcml\" /&gt;\n  &lt;/configure&gt;\n</pre>\n<p>Moreover, if your Plone buildout is not using plone.dexterity and you want to avoid this dependency being brought just add the bellow line to your CFG file:</p>\n<pre>[versions]\nProducts.UserAndGroupSelectionWidget = 2.0.4\n</pre>\n<p>Again, it will help you to have a look at the sample buildout provided in <a href=\"http://github.com/collective/collective.xmpp.buildout\" rel=\"nofollow\">collective.xmpp.buildout</a>.</p>\n</div>\n<div id=\"setting-up-a-new-plone-site\">\n<h3>Setting up a new Plone site</h3>\n<ul>\n<li>Start ejabberd (if you used the recipe to build ejabberd, <tt>bin/ejabberd</tt> will do the job).</li>\n<li>Start the Nginx frontend. <tt>bin/frontend start</tt></li>\n<li>Start your zope instance.</li>\n<li>Access Zope directly at <tt><span class=\"pre\">http://localhost:8081/manage</span></tt> and create a new Plone site with <tt>collective.xmpp.core</tt>.</li>\n<li>Go to the Plone control panel and click on the <tt>XMPP Integration</tt> link under <tt>Plone Configuration</tt>.  Make sure the XMPP settings reflect your installation.</li>\n<li>Restart your Plone instance.</li>\n<li>Upon the first request the administrator will log to his account. You should see things happening in the logs and if there are any errors something might be wrong with your installation.</li>\n<li>When you create a new Plone user, they will automatically be registered on the XMPP server. Your existing users can also be registered by going back to the <tt>XMPP Integration</tt> configlet in the control panel, and then clicking on the <tt>User Registration</tt> tab. Keep an eye on your instance.log traceback in the console to make sure there aren\u2019t any errors. You can see the registered users by going to the XMPP admin interface at localhost:5280/admin.</li>\n</ul>\n</div>\n<div id=\"making-sure-things-work\">\n<h3>Making sure things work ;)</h3>\n<p>This is a complex infrastructure so it can be hard to know what goes wrong sometimes. Do not despair, here are a few things to try:</p>\n<ul>\n<li><p>Make sure your ejabberd is running. Connect to it normal client as the admin user.</p>\n</li>\n<li><p>Verify that http-binding is setup properly on ejabberd. Visiting <tt><span class=\"pre\">http://localhost:5280/http-bind</span></tt> should tell you it\u2019s working.</p>\n</li>\n<li><p>Verify that XMPP requests will get properly through your proxy. Visiting <tt><span class=\"pre\">http://localhost:8080/http-bind/</span></tt> should give you the same result as above.</p>\n</li>\n<li><p>When you start your Zope instance in foreground you can verify the Twisted reactor is running fine:</p>\n<pre>2011-09-01 14:37:38 INFO collective.xmpp.core Starting Twisted reactor...\n2011-09-01 14:37:38 INFO collective.xmpp.core Twisted reactor started\n2011-09-01 14:37:38 INFO Zope Ready to handle requests\n</pre>\n</li>\n<li><p>After the first request to the site, you should also see in the logs:</p>\n<pre>2011-09-01 14:45:48 INFO collective.xmpp.core XMPP admin client has authenticated succesfully.\n</pre>\n</li>\n<li><p>If your Plone user was succesfully registered on the XMPP server, logging-in to the Plone site with a user should also authenticate him with the XMPP server. This is indicated in the logs by:</p>\n<pre>2011-09-01 14:45:50 INFO collective.xmpp.core Pre-binded ggozad@localhost/auto-QravOoyEeE\n</pre>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"experimenting\">\n<h2>Experimenting</h2>\n<h2 id=\"usage\"><span class=\"section-subtitle\">Usage</span></h2>\n<ul>\n<li>Add a few users.</li>\n<li>Login as one of them, and in a different browser as some other. Use the frontend to access the site, if you used the settings above this should be <tt><span class=\"pre\">http://localhost:8080</span></tt>.</li>\n<li>All actions are performed through the viewlet on the top right: <tt>Online users</tt> will display the users currently logged in. Clicking it will give you the list of users. You can message them directly or look at their personal feed.</li>\n<li>Try posting an entry to your feed. Links will be transformed automatically. As soon as you submit other logged-in users will receive a notification in real-time. Using a recent browser that supports geolocation will allow you also share your location at the time of the post.</li>\n<li>Try commenting on a feed post.</li>\n<li>By clicking on the \u201cFollowing\u201d user action you can select which users you want to follow, or follow them all.</li>\n<li>You can see all posts by clicking on <tt>Site feed</tt> on the viewlet.</li>\n</ul>\n</div>\n<div id=\"security\">\n<h2>Security</h2>\n<p>Included is an implementation of an authenticating client over BOSH according to <a href=\"http://xmpp.org/extensions/xep-0206.html\" rel=\"nofollow\">XEP-0206</a>. This practically means that the javascript client never needs to know the password of the XMPP user. Instead, the user is authenticated directly between the XMPP server and the Plone instance. A pair of secret tokens are exchanged, valid for a short time (~2 minutes). It is this pair that is given to the javascript client and not the password.</p>\n<p>When a Plone user is registered on the XMPP server, a random password is generated and stored in the ZODB in a persistent utility.</p>\n<p>If you do not need to access the XMPP accounts outside of the Plone instance you can additionally hide the entire XMPP service behind a firewall and only allow connections to it from the Plone instances. This in combination with HTTPS should be enough for the paranoid among us.</p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>Some of the included tests are functional tests that require a XMPP server running on <tt>localhost</tt> as well as an administrator account setup up on this server with JID <tt>admin@localhost</tt> and password <tt>admin</tt>. If you wish to run those you have to specify a <em>level</em> 2 on your testrunner, i.e.:</p>\n<pre>./bin/test -a 2 -s collective.xmpp.core\n</pre>\n<p>You\u2019ll also have to configure ejabberd to listen on port 5347 for external\ncomponents.</p>\n<p>The minimum requirement would be to add the following entry to the <cite>listen</cite> keyword::</p>\n<pre>{listen,\n    [\n    % Add only the line below\n    {{5347, {0,0,0,0} }, ejabberd_service, []}\n    ]\n}\n</pre>\n</div>\n<div id=\"tips-for-production-deployment\">\n<h2>Tips for production deployment</h2>\n<h2 id=\"don-t-cache-xmpp-loader\"><span class=\"section-subtitle\">Don\u2019t cache @@xmpp-loader:</span></h2>\n<p>Make sure the <strong>${site_url}/@@xmpp-loader</strong> URL isn\u2019t cached. This view\nreturns an authentication token which has to be different each time you\nreload your page.</p>\n<p>If you cache this, the token won\u2019t change and you won\u2019t be able to communicate\nwith the XMPP server.</p>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<ul>\n<li>Thanks goes Yiorgis Gozadinos (@ggozad) for writing jarn.xmpp.core and being the first to integrate XMPP into Plone.</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.3 (2013-06-28)</h3>\n<ul>\n<li>Feature: Remove password from storage if jabber server returns not-authorized\nin order to try to create the user again as this error comes up when the\npassword is still present but the jabber server doesn\u2019t have the user anymore\n[ichim-david]</li>\n<li>Feature: Log response from the jabber server when trying to bind client and\nit fails\n[ichim-david]</li>\n<li>Bugfix: Could not get portrait data for users with custom profile pictures.\n[jcbrand]</li>\n<li>Feature: Add a new controlpanel option to update all user\u2019s vCards.\n[jcbrand]</li>\n<li>Bugfix: When pre-binding, fetch admin user\u2019s password from IXMPPSettings.\n[jcbrand]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.2 (2013-03-20)</h3>\n<ul>\n<li>Feature: Include the user\u2019s portrait in their vCard.\n[jcbrand]</li>\n<li>Feature: Update the user\u2019s vCard when they change their personal preferences.\n[jcbrand]</li>\n<li>Bugfix: Last user\u2019s roster suggestions ignored by XMPP server.\n[jcbrand]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1 (2013-03-15)</h3>\n<ul>\n<li>Released. [jcbrand]</li>\n</ul>\n</div>\n<div id=\"b8-2013-03-09\">\n<h3>0.1b8 (2013-03-09)</h3>\n<ul>\n<li>Bugfix. All xmpp passwords were cleared when deregistering a subset of users.\n[jcbrand]</li>\n</ul>\n</div>\n<div id=\"b7-2013-03-05\">\n<h3>0.1b7 (2013-03-05)</h3>\n<ul>\n<li>Previous release was broken. Didn\u2019t include ZCML files.\n[jcbrand]</li>\n</ul>\n</div>\n<div id=\"b6-2013-03-04\">\n<h3>0.1b6 (2013-03-04)</h3>\n<ul>\n<li>Fixed rst issues when read by pypi which combines readme.rst and history.txt\n[ichim-david]</li>\n</ul>\n</div>\n<div id=\"b5-2013-03-04\">\n<h3>0.1b5 (2013-03-04)</h3>\n<ul>\n<li>Feature: \u201cCompletely wipe password storage\u201d action is now traced under zope log.\n[alecghica]</li>\n<li>Bugfix: \u2018ComponentLookupError\u2019 error when adding a local user.\n[alecghica]</li>\n<li>Feature: added error image and \u2018Unable to communicate with chat server\u2019 message\nwhen unable to bind the user to jabber server\n[alecghica]</li>\n<li>Feature: Add a VCard when registering a user on the XMPP server.\n[jcbrand]</li>\n<li>Feature: Make manual user registration idempotent (ignore already registered\nusers).\n[jcbrand]</li>\n<li>Users are no longer registered upon creation. They must either be registered\nmanually, or upon next logged in visit.\n[jcbrand]</li>\n</ul>\n</div>\n<div id=\"b4-2013-02-02\">\n<h3>0.1b4 (2013-02-02)</h3>\n<ul>\n<li>Bugfix for \u201cDeregister All\u201d in @@xmpp-user-setup page. Site root was not set\nin callback method.\n[jcbrand]</li>\n</ul>\n</div>\n<div id=\"b3-2013-01-17\">\n<h3>0.1b3 (2013-01-17)</h3>\n<ul>\n<li>Add option to completely clear the XMPP password utility.\n[jcbrand]</li>\n<li>Add upgrade step to make sure the registry is reloaded so that the\n\u201cauto-register on login\u201d entry is added.\n[jcbrand]</li>\n<li>Bugfix. Always get the XMPP virtual host from the registry.\n[jcbrand]</li>\n<li>Bugfix. When auto-subscribing, LDAP users\u2019 fullnames weren\u2019t being shown.\n[jcbrand]</li>\n</ul>\n</div>\n<div id=\"b2-2013-01-17\">\n<h3>0.1b2 (2013-01-17)</h3>\n<ul>\n<li>Add a configuration setting to turn auto-register on login on. It\u2019s disabled\nby default.\n[jcbrand]</li>\n</ul>\n</div>\n<div id=\"b1-2013-01-16\">\n<h3>0.1b1 (2013-01-16)</h3>\n<ul>\n<li>Feature: if not already registered, Plone users get\nregistered on jabber server on login\n[alecghica]</li>\n<li>Bugfix: no need to refresh browser for users registered\non login, they are binded on the fly\n[alecghica]</li>\n<li>Bugfix: \u201cDeregister ALL Users\u201d function, credentials were\nleft un-deleted under IXMPPPasswordStorage resulting in\nvarious errors when registering/deregistering users\n[alecghica]</li>\n<li>Bugfix: fixed subscribing when a new plone user is added\n[alecghica]</li>\n<li>Bugfix: users were only being auto-subscribed to\nother users added in that current session\n[alecghica]</li>\n<li>Bugfix: new users are now auto-subscribed only\nto existing XMPP users\n[alecghica]</li>\n</ul>\n</div>\n<div id=\"a8-2012-12-13\">\n<h3>0.1a8 (2012-12-13)</h3>\n<ul>\n<li>Bugfix. Check for GS profile version in dbconfig.py to avoid the instance not\nstarting without having run the GS upgrade step.\n[jcbrand]</li>\n</ul>\n</div>\n<div id=\"a7-2012-12-13\">\n<h3>0.1a7 (2012-12-13)</h3>\n<ul>\n<li>Documentation updated with Apache config example.\n[alecghica]</li>\n<li>Cleaned up dependencies that already ship with Plone\n[alecghica]</li>\n<li>Made Products.UserAndGroupSelectionWidget package optional.\nProducts.UserAndGroupSelectionWidget will be imported only\nif package version is greater then 2.0.4 as it brings dependencies\nlike plone.dexterity witch conflict with other packages found in\nthe current Plone release.\n[alecghica]</li>\n<li>Fixed register users form to work for the case when\nProducts.UserAndGroupSelectionWidget is not installed/used\n[alecghica]</li>\n<li>Added info on how to make plone.dexterity optional\n[alecghica]</li>\n<li>Explicitly store XMPP server\u2019s hostname instead of only using the XMPP\ndomain. Also store the port number instead of only using the default.\n[jcbrand]</li>\n<li>Allow the configuration of the registry settings via buildout. See\ndbconfig.py\n[jcbrand]</li>\n</ul>\n</div>\n<div id=\"a6-2012-11-22\">\n<h3>0.1a6 (2012-11-22)</h3>\n<ul>\n<li>Added Spanish translation.\n[macagua]</li>\n<li>Added improvements about i18n support.\n[macagua]</li>\n<li>Bugfix. Prevent getAllMemberIds from returning duplicates.\n[jcbrand]</li>\n</ul>\n</div>\n<div id=\"a5-2012-11-19\">\n<h3>0.1a5 (2012-11-19)</h3>\n<ul>\n<li>Fixed RST formatting bugs.\n[jcbrand]</li>\n</ul>\n</div>\n<div id=\"a4-2012-11-19\">\n<h3>0.1a4 (2012-11-19)</h3>\n<ul>\n<li>Documentation updated\n[jcbrand]</li>\n<li>Fixed HISTORY.txt markup\n[alecghica]</li>\n<li>Fixed version used for Products.UserAndGroupSelectionWidget to &gt;2.04\nas earlier version will crash due to API changes\n[alecghica]</li>\n<li>Bugfix. Password utility forgets user passwords when a user is registered.\n[jcbrand]</li>\n</ul>\n</div>\n<div id=\"a3-2012-11-09\">\n<h3>0.1a3 (2012-11-09)</h3>\n<ul>\n<li>Bugfix for RuntimeError that might occur when upgrading from 0.1a1 to 0.1a2\n[jcbrand]</li>\n</ul>\n</div>\n<div id=\"a2-2012-11-09\">\n<h3>0.1a2 (2012-11-09)</h3>\n<ul>\n<li>Add control panel configlet for configuration and registering XMPP users.\n[jcbrand]</li>\n<li>Add support for PAS plugins (such as LDAP).\n[jcbrand]</li>\n</ul>\n</div>\n<div id=\"a1-2012-10-18\">\n<h3>0.1a1 (2012-10-18)</h3>\n<ul>\n<li>Forked from jarn.xmpp.core 0.34\n[jcbrand]</li>\n<li>Merged in jarn.xmpp.twisted 0.1\n[jcbrand]</li>\n<li>Removed all PubSub and Messaging related features.\n[jcbrand]</li>\n<li>Add browserlayer and check for it when handling events.\n[jcbrand]</li>\n<li>Fixed the @@setup-xmpp script to only register the next user once the previous one\nhas finished.\n[jcbrand]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 788284, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "0827641b55312d8a23aa5b7004775a49", "sha256": "f0e1cae02e4cba895eddc4f840fddd20bfd134df0ea00b729a080ce9a3afcab2"}, "downloads": -1, "filename": "collective.xmpp.core-0.1.zip", "has_sig": false, "md5_digest": "0827641b55312d8a23aa5b7004775a49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 158148, "upload_time": "2013-03-15T06:11:18", "upload_time_iso_8601": "2013-03-15T06:11:18.719937Z", "url": "https://files.pythonhosted.org/packages/c7/98/0fefc312b9611d5837e64b53ba5caba9b2cc13ee109aefa4d1ce2aa5e3c1/collective.xmpp.core-0.1.zip", "yanked": false}], "0.1a1": [{"comment_text": "", "digests": {"md5": "f0517c40451d58b65645097de963b240", "sha256": "11baf0b2e3cb804f7854e9575b5e4c2ed2564dcbabef302abbc0e1257956cedf"}, "downloads": -1, "filename": "collective.xmpp.core-0.1a1.zip", "has_sig": false, "md5_digest": "f0517c40451d58b65645097de963b240", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 121341, "upload_time": "2012-10-18T20:03:02", "upload_time_iso_8601": "2012-10-18T20:03:02.012118Z", "url": "https://files.pythonhosted.org/packages/e9/f2/9540107341136ce16b3d47b6fbd25a105266f1dde508ef3dac879aceeb38/collective.xmpp.core-0.1a1.zip", "yanked": false}], "0.1a2": [{"comment_text": "", "digests": {"md5": "c857ca235fa36dc0edbf582020779c7e", "sha256": "78ebaa20477e9b96309d40718b5ffa694ac24457e238daf410895d0ea3c5ac9c"}, "downloads": -1, "filename": "collective.xmpp.core-0.1a2.zip", "has_sig": false, "md5_digest": "c857ca235fa36dc0edbf582020779c7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 129887, "upload_time": "2012-11-09T09:42:42", "upload_time_iso_8601": "2012-11-09T09:42:42.227729Z", "url": "https://files.pythonhosted.org/packages/35/49/6d3124c89420f91561e77346a3c929235779fdbb970928e3892f25a4b813/collective.xmpp.core-0.1a2.zip", "yanked": false}], "0.1a3": [{"comment_text": "", "digests": {"md5": "31e0874060935ff1db4a31645a7d1d05", "sha256": "b649852b80ab4cf193e81de7364d7737342986272371d0b3c6d19011405d169d"}, "downloads": -1, "filename": "collective.xmpp.core-0.1a3.zip", "has_sig": false, "md5_digest": "31e0874060935ff1db4a31645a7d1d05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 130080, "upload_time": "2012-11-09T11:59:15", "upload_time_iso_8601": "2012-11-09T11:59:15.160277Z", "url": "https://files.pythonhosted.org/packages/4d/e7/e97770f10588c44accd000383969863cd2cfd17205776340dcf16a319347/collective.xmpp.core-0.1a3.zip", "yanked": false}], "0.1a4": [{"comment_text": "", "digests": {"md5": "2537ad5e0f9d947a50c7d43eb766f8f8", "sha256": "83881dacc0249b55e9c29f9cc5815a46657f721a8bdf0e7d520aebcd476d9a55"}, "downloads": -1, "filename": "collective.xmpp.core-0.1a4.zip", "has_sig": false, "md5_digest": "2537ad5e0f9d947a50c7d43eb766f8f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 130424, "upload_time": "2012-11-19T08:51:53", "upload_time_iso_8601": "2012-11-19T08:51:53.934951Z", "url": "https://files.pythonhosted.org/packages/28/b0/456a567081b0afaaec74825cfc723fcb1904e34e63d0a504abbc8caa55a7/collective.xmpp.core-0.1a4.zip", "yanked": false}], "0.1a5": [{"comment_text": "", "digests": {"md5": "56ad5d4c3897c65a4f60cd6af9c147af", "sha256": "a5b1be4326729a5432d0974ca60b4363d872479dc875c1964b0be179068903ba"}, "downloads": -1, "filename": "collective.xmpp.core-0.1a5.zip", "has_sig": false, "md5_digest": "56ad5d4c3897c65a4f60cd6af9c147af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 130447, "upload_time": "2012-11-19T09:09:55", "upload_time_iso_8601": "2012-11-19T09:09:55.448743Z", "url": "https://files.pythonhosted.org/packages/57/30/a51a02eb42b79f4538fdda68940cf8ed758595a141c39f924dc74caefb1b/collective.xmpp.core-0.1a5.zip", "yanked": false}], "0.1a6": [{"comment_text": "", "digests": {"md5": "30eb3796d74e786e2d94930d2a73ede2", "sha256": "9a8563c50d34321ca25d88ee41280f6ff2e818bbd21f79fd7574f4753b74ef93"}, "downloads": -1, "filename": "collective.xmpp.core-0.1a6.zip", "has_sig": false, "md5_digest": "30eb3796d74e786e2d94930d2a73ede2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 142843, "upload_time": "2012-11-22T12:15:51", "upload_time_iso_8601": "2012-11-22T12:15:51.360805Z", "url": "https://files.pythonhosted.org/packages/69/ff/dde3b369ce247d3fec62984a8e649b47629428cddd182d1bfce7b1c73372/collective.xmpp.core-0.1a6.zip", "yanked": false}], "0.1a7": [{"comment_text": "", "digests": {"md5": "16dea6c61f931dfca53fc06234a5d18b", "sha256": "b0fd971f1625f10a899012dba599da0aaa4fe0f3f650a06c6872c233969c7686"}, "downloads": -1, "filename": "collective.xmpp.core-0.1a7.zip", "has_sig": false, "md5_digest": "16dea6c61f931dfca53fc06234a5d18b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 146900, "upload_time": "2012-12-13T11:16:01", "upload_time_iso_8601": "2012-12-13T11:16:01.674368Z", "url": "https://files.pythonhosted.org/packages/71/75/beeddc5d27bc05482ef38d3d768ae59695f1deef2c66d98a8e2640802ff2/collective.xmpp.core-0.1a7.zip", "yanked": false}], "0.1a8": [{"comment_text": "", "digests": {"md5": "9929c68379702f5e7696e40e9cbe0e14", "sha256": "79f7e09eb877132e87446b59d66707d9fc45e7bb77638009e94fff3a5a2277c7"}, "downloads": -1, "filename": "collective.xmpp.core-0.1a8.zip", "has_sig": false, "md5_digest": "9929c68379702f5e7696e40e9cbe0e14", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 147321, "upload_time": "2012-12-13T14:46:41", "upload_time_iso_8601": "2012-12-13T14:46:41.741796Z", "url": "https://files.pythonhosted.org/packages/b9/33/92215f55d35a4f25059db653fd2ce1607fc993523382bf89fdb186f65e12/collective.xmpp.core-0.1a8.zip", "yanked": false}], "0.1b1": [{"comment_text": "", "digests": {"md5": "3a155168ec5b39dc2d2f7125864d38d5", "sha256": "6a250e90a8cbb7cd759774b43da1c0e9516676e9fe40c38cfe8b13d22ea7657f"}, "downloads": -1, "filename": "collective.xmpp.core-0.1b1.zip", "has_sig": false, "md5_digest": "3a155168ec5b39dc2d2f7125864d38d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 150173, "upload_time": "2013-01-16T11:24:56", "upload_time_iso_8601": "2013-01-16T11:24:56.412903Z", "url": "https://files.pythonhosted.org/packages/e4/e9/174c0b5afb443cec477b2462af13cd2c9415a5cc6ac7604ac9d4c1b9b32b/collective.xmpp.core-0.1b1.zip", "yanked": false}], "0.1b2": [{"comment_text": "", "digests": {"md5": "18c0cfdb7ced3406cf7aabbbc4b38288", "sha256": "e099e16fa5cef542ea754872c2cf4f02381cfec857aecb9f960937739f20034f"}, "downloads": -1, "filename": "collective.xmpp.core-0.1b2.zip", "has_sig": false, "md5_digest": "18c0cfdb7ced3406cf7aabbbc4b38288", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 150551, "upload_time": "2013-01-17T07:56:00", "upload_time_iso_8601": "2013-01-17T07:56:00.528562Z", "url": "https://files.pythonhosted.org/packages/1d/81/f4180d9d67eeb89ba76b733c48fd1fd478e2ee91e734521a9a3de4891d88/collective.xmpp.core-0.1b2.zip", "yanked": false}], "0.1b3": [{"comment_text": "", "digests": {"md5": "0bbaf6f2f09b00ee14ed4153eb4cf04b", "sha256": "5660d2bf991cba4c4d2b5cb5072a9354d63897a8c824a027534f5833dd2f466c"}, "downloads": -1, "filename": "collective.xmpp.core-0.1b3.zip", "has_sig": false, "md5_digest": "0bbaf6f2f09b00ee14ed4153eb4cf04b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 150657, "upload_time": "2013-01-17T21:17:40", "upload_time_iso_8601": "2013-01-17T21:17:40.520830Z", "url": "https://files.pythonhosted.org/packages/b8/58/41d573317701de4a89f889da8953eba65ce7491a3eca0e91efe655280626/collective.xmpp.core-0.1b3.zip", "yanked": false}], "0.1b4": [{"comment_text": "", "digests": {"md5": "0bec91ca1962290a5b4868a8e7fc8bed", "sha256": "ba567ebd3f1a7148e820dd1b9189489552fecd55d78579a683871681434509ae"}, "downloads": -1, "filename": "collective.xmpp.core-0.1b4.zip", "has_sig": false, "md5_digest": "0bec91ca1962290a5b4868a8e7fc8bed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 151476, "upload_time": "2013-02-02T13:40:05", "upload_time_iso_8601": "2013-02-02T13:40:05.170388Z", "url": "https://files.pythonhosted.org/packages/7a/6e/2fcb7dbf38f39e7af8bb30fa6316b8b1bf39c32069217d6c8634752c7053/collective.xmpp.core-0.1b4.zip", "yanked": false}], "0.1b5": [{"comment_text": "", "digests": {"md5": "00f0cf316c7550cad26c96225e42fe5a", "sha256": "6c2ac4ad5582de77323eb35643395f1c3e16b027fb7c37a889394a1519ea87c0"}, "downloads": -1, "filename": "collective.xmpp.core-0.1b5.zip", "has_sig": false, "md5_digest": "00f0cf316c7550cad26c96225e42fe5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72193, "upload_time": "2013-03-04T12:17:34", "upload_time_iso_8601": "2013-03-04T12:17:34.159687Z", "url": "https://files.pythonhosted.org/packages/b9/e9/1fa50b455427b9a97c97a347c6c8165e911a3bf2b2f327a6bdb3d98f999e/collective.xmpp.core-0.1b5.zip", "yanked": false}], "0.1b6": [{"comment_text": "", "digests": {"md5": "867742c834934184310253f9ed5456da", "sha256": "c7f49d8730b9851b3769f8058c2bd2f18ebe67c6440b5e5f2bf00f2f570005d1"}, "downloads": -1, "filename": "collective.xmpp.core-0.1b6.zip", "has_sig": false, "md5_digest": "867742c834934184310253f9ed5456da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 94634, "upload_time": "2013-03-05T10:25:45", "upload_time_iso_8601": "2013-03-05T10:25:45.444250Z", "url": "https://files.pythonhosted.org/packages/57/0b/1b3ec3fbcf2ad6c556efaf2dfadced29d5e6e30001376616d4d325a0b487/collective.xmpp.core-0.1b6.zip", "yanked": false}], "0.1b7": [{"comment_text": "", "digests": {"md5": "39978506d06f8c4b2a4bd4b172371b69", "sha256": "f6325876c995a7189cdfbc9da835d73fe87e245fa1f47047325790d124b2639c"}, "downloads": -1, "filename": "collective.xmpp.core-0.1b7.zip", "has_sig": false, "md5_digest": "39978506d06f8c4b2a4bd4b172371b69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 158339, "upload_time": "2013-03-05T10:35:57", "upload_time_iso_8601": "2013-03-05T10:35:57.660050Z", "url": "https://files.pythonhosted.org/packages/25/44/d1876469f55fe3fb043339f5037fe096f98082c11eceb547af604e424543/collective.xmpp.core-0.1b7.zip", "yanked": false}], "0.1b8": [{"comment_text": "", "digests": {"md5": "84250204b76dd3e89b01f45ced6a8ccb", "sha256": "fce00307c01355098afdd18727c9a667d821270d3c70d95e1ae6fc75c8afeabe"}, "downloads": -1, "filename": "collective.xmpp.core-0.1b8.zip", "has_sig": false, "md5_digest": "84250204b76dd3e89b01f45ced6a8ccb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 158462, "upload_time": "2013-03-09T07:22:57", "upload_time_iso_8601": "2013-03-09T07:22:57.698131Z", "url": "https://files.pythonhosted.org/packages/7a/2d/43fdfb8a467dfb2c08f197de774951af9adcabf3c67cf7a7746f35296188/collective.xmpp.core-0.1b8.zip", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "91209d677aaeae8e39cbc59586130bde", "sha256": "71da9bc230939ab1c2cc14beacb94c491074e13b2853d477c13d6b32dc738e4f"}, "downloads": -1, "filename": "collective.xmpp.core-0.2.zip", "has_sig": false, "md5_digest": "91209d677aaeae8e39cbc59586130bde", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 160570, "upload_time": "2013-03-20T10:37:42", "upload_time_iso_8601": "2013-03-20T10:37:42.338192Z", "url": "https://files.pythonhosted.org/packages/ef/df/9825e5f45e57bc808ced9b78058fe9648d957fe83308d52f80026e218e86/collective.xmpp.core-0.2.zip", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "9242dd6eec2d8a1cbae9bb63b341817d", "sha256": "e1f0ccfcb3f35cb23aa5e681961c3b8d573b3ac86878d3034236ecdc423901fd"}, "downloads": -1, "filename": "collective.xmpp.core-0.3.zip", "has_sig": false, "md5_digest": "9242dd6eec2d8a1cbae9bb63b341817d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 161618, "upload_time": "2013-06-28T14:39:49", "upload_time_iso_8601": "2013-06-28T14:39:49.891968Z", "url": "https://files.pythonhosted.org/packages/a8/f5/67b70f52e83e57ca0a7cd6894c5f9974d39af0eceb30eb0ec3bccdbf63ae/collective.xmpp.core-0.3.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9242dd6eec2d8a1cbae9bb63b341817d", "sha256": "e1f0ccfcb3f35cb23aa5e681961c3b8d573b3ac86878d3034236ecdc423901fd"}, "downloads": -1, "filename": "collective.xmpp.core-0.3.zip", "has_sig": false, "md5_digest": "9242dd6eec2d8a1cbae9bb63b341817d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 161618, "upload_time": "2013-06-28T14:39:49", "upload_time_iso_8601": "2013-06-28T14:39:49.891968Z", "url": "https://files.pythonhosted.org/packages/a8/f5/67b70f52e83e57ca0a7cd6894c5f9974d39af0eceb30eb0ec3bccdbf63ae/collective.xmpp.core-0.3.zip", "yanked": false}], "timestamp": "Fri May  8 00:44:42 2020"}