{"info": {"author": "Aaron Christianson", "author_email": "ninjaaron@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "collist\n=======\n``collist`` is a simple module which provides the function\n``collist()``, the single purpose of which is to columnate lists of\noutput for printing to the terminal. It is very much like the unix\ncommand ``column``, but it works on python iterables. This package also\nexports the command ``cols`` which is similar to ``column`` but works\nbetter (on my system), though it has fewer options; see ``cols --help``.\n\nThe program uses the ``tput`` command internally, and therefore will not\nwork with Windows and other strange, non-POSIX operation systems.\n\nMonkey Patch `collist` into the Python Interactive Prompt\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nThe Python interactive prompt print the representation of the return\nvalue of any expression you give it.  If that return value is a list,\ndictionary, or tuple, It returns the literal that will produce the\nobject.\n\nWhen these collection objects get rather longer, printing them sucks.\n``collist`` is designed to make lists of things look better. ``collist``\nhas a ``representation`` function which will output a nicely columnated\nrepr of a python dictionary, list or tuple. This repr is a valid python\nliteral.\n\nIn order to get this behavior in the standard interactive prompt or\nbpython, add this to your ~/.pystart:\n\n.. code:: python\n\n    import sys # if you haven't already.\n    from collist import displayhook\n\n    sys.displayhook = displayhook\n\nThen, you'll get nicely columnated list, tuples and dictionaries back in\nthe interactive prompt.\n\n.. code:: python\n\n  >>> [i for i in ('foo bar bing ' * 15).split()]\n  ['foo',  'bar',  'bing', 'foo',  'bar',  'bing', 'foo',  'bar',\n   'bing', 'foo',  'bar',  'bing', 'foo',  'bar',  'bing', 'foo',\n   'bar',  'bing', 'foo',  'bar',  'bing', 'foo',  'bar',  'bing',\n   'foo',  'bar',  'bing', 'foo',  'bar',  'bing', 'foo',  'bar',\n   'bing', 'foo',  'bar',  'bing', 'foo',  'bar',  'bing', 'foo',\n   'bar',  'bing', 'foo',  'bar',  'bing']\n\nNice! This is what the people want. There is a bug at the moment where\nthe terminal size is stuck at whatever it was when the interactive\nprompt was started. I assume this has something to do with ``tput``\ngetting the terminal size from sterr, but I'm not really sure. If\nanyone has a fix, I will be glad to accept a patch.\n\nAlso this patch won't work in ipython, since it has it's own replacement\nfor displayhook, of which I know nothing. It prints nicely already. kind\nof.\n\n.. vim: tw=72", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ninjaaron/collist", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "collist", "package_url": "https://pypi.org/project/collist/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collist/", "project_urls": {"Homepage": "https://github.com/ninjaaron/collist"}, "release_url": "https://pypi.org/project/collist/0.5/", "requires_dist": ["click"], "requires_python": "", "summary": "", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>collist</tt> is a simple module which provides the function\n<tt>collist()</tt>, the single purpose of which is to columnate lists of\noutput for printing to the terminal. It is very much like the unix\ncommand <tt>column</tt>, but it works on python iterables. This package also\nexports the command <tt>cols</tt> which is similar to <tt>column</tt> but works\nbetter (on my system), though it has fewer options; see <tt>cols <span class=\"pre\">--help</span></tt>.</p>\n<p>The program uses the <tt>tput</tt> command internally, and therefore will not\nwork with Windows and other strange, non-POSIX operation systems.</p>\n<div id=\"monkey-patch-collist-into-the-python-interactive-prompt\">\n<h2>Monkey Patch <cite>collist</cite> into the Python Interactive Prompt</h2>\n<p>The Python interactive prompt print the representation of the return\nvalue of any expression you give it.  If that return value is a list,\ndictionary, or tuple, It returns the literal that will produce the\nobject.</p>\n<p>When these collection objects get rather longer, printing them sucks.\n<tt>collist</tt> is designed to make lists of things look better. <tt>collist</tt>\nhas a <tt>representation</tt> function which will output a nicely columnated\nrepr of a python dictionary, list or tuple. This repr is a valid python\nliteral.</p>\n<p>In order to get this behavior in the standard interactive prompt or\nbpython, add this to your ~/.pystart:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sys</span> <span class=\"c1\"># if you haven't already.</span>\n<span class=\"kn\">from</span> <span class=\"nn\">collist</span> <span class=\"kn\">import</span> <span class=\"n\">displayhook</span>\n\n<span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">displayhook</span> <span class=\"o\">=</span> <span class=\"n\">displayhook</span>\n</pre>\n<p>Then, you\u2019ll get nicely columnated list, tuples and dictionaries back in\nthe interactive prompt.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s1\">'foo bar bing '</span> <span class=\"o\">*</span> <span class=\"mi\">15</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()]</span>\n<span class=\"p\">[</span><span class=\"s1\">'foo'</span><span class=\"p\">,</span>  <span class=\"s1\">'bar'</span><span class=\"p\">,</span>  <span class=\"s1\">'bing'</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">,</span>  <span class=\"s1\">'bar'</span><span class=\"p\">,</span>  <span class=\"s1\">'bing'</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">,</span>  <span class=\"s1\">'bar'</span><span class=\"p\">,</span>\n <span class=\"s1\">'bing'</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">,</span>  <span class=\"s1\">'bar'</span><span class=\"p\">,</span>  <span class=\"s1\">'bing'</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">,</span>  <span class=\"s1\">'bar'</span><span class=\"p\">,</span>  <span class=\"s1\">'bing'</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">,</span>\n <span class=\"s1\">'bar'</span><span class=\"p\">,</span>  <span class=\"s1\">'bing'</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">,</span>  <span class=\"s1\">'bar'</span><span class=\"p\">,</span>  <span class=\"s1\">'bing'</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">,</span>  <span class=\"s1\">'bar'</span><span class=\"p\">,</span>  <span class=\"s1\">'bing'</span><span class=\"p\">,</span>\n <span class=\"s1\">'foo'</span><span class=\"p\">,</span>  <span class=\"s1\">'bar'</span><span class=\"p\">,</span>  <span class=\"s1\">'bing'</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">,</span>  <span class=\"s1\">'bar'</span><span class=\"p\">,</span>  <span class=\"s1\">'bing'</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">,</span>  <span class=\"s1\">'bar'</span><span class=\"p\">,</span>\n <span class=\"s1\">'bing'</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">,</span>  <span class=\"s1\">'bar'</span><span class=\"p\">,</span>  <span class=\"s1\">'bing'</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">,</span>  <span class=\"s1\">'bar'</span><span class=\"p\">,</span>  <span class=\"s1\">'bing'</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">,</span>\n <span class=\"s1\">'bar'</span><span class=\"p\">,</span>  <span class=\"s1\">'bing'</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">,</span>  <span class=\"s1\">'bar'</span><span class=\"p\">,</span>  <span class=\"s1\">'bing'</span><span class=\"p\">]</span>\n</pre>\n<p>Nice! This is what the people want. There is a bug at the moment where\nthe terminal size is stuck at whatever it was when the interactive\nprompt was started. I assume this has something to do with <tt>tput</tt>\ngetting the terminal size from sterr, but I\u2019m not really sure. If\nanyone has a fix, I will be glad to accept a patch.</p>\n<p>Also this patch won\u2019t work in ipython, since it has it\u2019s own replacement\nfor displayhook, of which I know nothing. It prints nicely already. kind\nof.</p>\n</div>\n\n          </div>"}, "last_serial": 2270060, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "1c1c6e201f7942f6baa495db2efe0b4b", "sha256": "b984669044e03e66a64d04fe9223ea92cee3c038e3395631120ac4db85f16130"}, "downloads": -1, "filename": "collist-0.1.tar.gz", "has_sig": false, "md5_digest": "1c1c6e201f7942f6baa495db2efe0b4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2065, "upload_time": "2016-03-17T05:41:11", "upload_time_iso_8601": "2016-03-17T05:41:11.138574Z", "url": "https://files.pythonhosted.org/packages/54/44/bb1a950f3a3a96fcd5edac8fd67646b1dad020e6afdf96b942df679a5610/collist-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "4f478ed96215c7915f1c7c34dd1b4784", "sha256": "1f48f103a74bda9964f80e0bb281ee135952d5af7b8041b59fc50dd41d11b5b7"}, "downloads": -1, "filename": "collist-0.2.tar.gz", "has_sig": false, "md5_digest": "4f478ed96215c7915f1c7c34dd1b4784", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3685, "upload_time": "2016-04-01T22:38:29", "upload_time_iso_8601": "2016-04-01T22:38:29.471903Z", "url": "https://files.pythonhosted.org/packages/58/3f/19bea0e8e98416762ca07092906e7652061132c0f8011de5650db2b5a384/collist-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "ffcf41da707ef99b5d48e725398f17ae", "sha256": "6c07a1c0f602cd7abfb925ff4f6e46dbc8da5758e2def7968cb642ef6f1b0fb1"}, "downloads": -1, "filename": "collist-0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ffcf41da707ef99b5d48e725398f17ae", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5835, "upload_time": "2016-08-05T17:40:31", "upload_time_iso_8601": "2016-08-05T17:40:31.359616Z", "url": "https://files.pythonhosted.org/packages/d2/2f/dd250d10798c15376f8ca015333e77bf0c22ac0d6b6e9e71b25ee0f0bbc7/collist-0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c123d5969eb74ef285a7f0cf90b0d96f", "sha256": "6f4dcf9f97e54fcea668e18d766e8675df32e9ee86afdd5e561fe9e524cf736c"}, "downloads": -1, "filename": "collist-0.3.tar.gz", "has_sig": false, "md5_digest": "c123d5969eb74ef285a7f0cf90b0d96f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3735, "upload_time": "2016-04-05T17:30:13", "upload_time_iso_8601": "2016-04-05T17:30:13.253212Z", "url": "https://files.pythonhosted.org/packages/ce/1d/14fdf300476eb0377664dfb194fb21020660f5585923d74873575eeb9978/collist-0.3.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "d77c09c2df1c95899d64aa7fc007dac5", "sha256": "c0ad9936f63a1ca7678cb3afadd7ea3da2a9dccbbea7cd0d2452f12e04e132b8"}, "downloads": -1, "filename": "collist-0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d77c09c2df1c95899d64aa7fc007dac5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5900, "upload_time": "2016-08-08T21:26:16", "upload_time_iso_8601": "2016-08-08T21:26:16.082683Z", "url": "https://files.pythonhosted.org/packages/7f/ad/5aa5ea7d27133cb40eb5a89ed01caba4db3b8e4a1e72415647d709be3e90/collist-0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0565e29036d7e4471a80b05563c3cb18", "sha256": "e4d443ea9ae63d45733ca5a84ff9baad2133bd933a5021c0731ba1d2108a838e"}, "downloads": -1, "filename": "collist-0.5.tar.gz", "has_sig": false, "md5_digest": "0565e29036d7e4471a80b05563c3cb18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3925, "upload_time": "2016-08-08T21:26:18", "upload_time_iso_8601": "2016-08-08T21:26:18.046943Z", "url": "https://files.pythonhosted.org/packages/70/53/3b1f0829d7559ec1dc2e7088746b417ca8baeaed5cc8620545c25587043a/collist-0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d77c09c2df1c95899d64aa7fc007dac5", "sha256": "c0ad9936f63a1ca7678cb3afadd7ea3da2a9dccbbea7cd0d2452f12e04e132b8"}, "downloads": -1, "filename": "collist-0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d77c09c2df1c95899d64aa7fc007dac5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5900, "upload_time": "2016-08-08T21:26:16", "upload_time_iso_8601": "2016-08-08T21:26:16.082683Z", "url": "https://files.pythonhosted.org/packages/7f/ad/5aa5ea7d27133cb40eb5a89ed01caba4db3b8e4a1e72415647d709be3e90/collist-0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0565e29036d7e4471a80b05563c3cb18", "sha256": "e4d443ea9ae63d45733ca5a84ff9baad2133bd933a5021c0731ba1d2108a838e"}, "downloads": -1, "filename": "collist-0.5.tar.gz", "has_sig": false, "md5_digest": "0565e29036d7e4471a80b05563c3cb18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3925, "upload_time": "2016-08-08T21:26:18", "upload_time_iso_8601": "2016-08-08T21:26:18.046943Z", "url": "https://files.pythonhosted.org/packages/70/53/3b1f0829d7559ec1dc2e7088746b417ca8baeaed5cc8620545c25587043a/collist-0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:39 2020"}