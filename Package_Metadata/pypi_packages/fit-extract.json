{"info": {"author": "Austin Luong", "author_email": "austin1995@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "fit-extract (Data Extraction for EC-LAB)\n================================================\nExtracts parameter (R2, R3, Q1, etc.) data from all '.fit' files in\na specified folder and writes the extracted data into a 'Data.xlsx' in the\nsame folder. '.fit' files are created by clicking save in the EC-LAB software\nafter fitting (minimizing) a curve with Zfit. If data from multiple channels\nis in the same folder, then the data will be separated into different sheets\nin the same \"Data.xlsv\" file.\n\nRequires python 3.2.x or above and pandas (should install automatically).\n\n\nINSTALL\n-----\nRun from the command line:\n    \n    $ pip install fit-extract\n\nAlternatively, you can download the zip from github or use git clone.\n\n\nUSAGE\n-----\nNavigate to the folder containing the .fit files using the command line:\n\n    $ cd [FOLDERPATH]\n    $ python fit-extract [OPTIONS]\n\nRunning with no options will run the program in the current directory. By default \nthe program will extract R2 and R3 and group the lower values and higher value of \neach pair into the same column to ensure consistency. R1 should be set to 0.1 ohm \nin EC-Lab.\n\n#### Important Usage Notes: \n\nDo not change the file name of any of the files. This program requires that the file name end in the default channel number format to work. This also helps with sorting (done lexicographically)\n\nWhen working with data that has cycles, you must use the cycles (-c, see below) option. \nAlso when saving your data in EC-Lab, do not click save multiple time for the same cycle. \nThis will mess up how the program extracts cycles and create extra cycles for each time you \ndo this. You can also just use the select all cycles option (randomize only on first cycle) in\nEC-Lab to avoid this risk and usually works fine if your results are clean. If you are not using \nthe cycles option, the most recent or latest save value so you are free to click save multiple times.\n\n#### Arguments and Options:\n\n**Help (--help or -h)**\n\n    $ python fit-extract -h\n    \nDisplays usage information.\n\n**Folder (--folder or -f)**\n\n    $ python fit-extract -f [FOLDERPATH [FOLDERPATH...]]\n\nRuns the program in the specified folders (multiple can be specified). \nThe path must be in quotes.\n\n**Cycles (--cycle or -c)**\n\n    $ python fit-extract -c\n\nIf your data has cycles or loops, you will need to apply this option.\n\n**Additional (--additional_parameters or -ap)**\n\n    $ python fit-extract -ap [PARAM [PARAM...]]\n\nIn additional to the default parameters extracted (R2, R3), the program will\nalso extract extra specfied parameters (Ex: Q2, a1). Note case matters.\n\n**Custom (--custom_parameters or -cp)**\n\n    $ python fit-extract -cp [PARAM [PARAM...]]\n\nExtracts specified parameters intead of default (R2). Disables group by size unless added manually.\n\n**Group By Size (--groupbysize or -gs)**\n    \n    $ python fit-extract -gs [PARAM_1 PARAM_2]\n\nEnsures consistency between two of the same type of parameter (default: ['R2', 'R3']) \nby grouping their values by size.\n\n\n\n#### Example:\n\n    $ python fit-extract -f 'C:\\Users\\[USER_NAME]\\[PATH]' 'C:\\Users\\[USER_NAME]\\[PATH2]' -ls -add Q2 a1\n    \nResult - Data.xlsx file created in both paths specified with following information:\n\n    Sheet Name: Ch 7\n\n    File Name | R2 (ohm)           | R3 (ohm)         | Q2 (F.s^(a-1)) | a1 ()\n    -------------------------------------------------------------------------------\n    file.fit  | 12345              | 29929            | .00000023      | 0.124\n    ...       | ...                | ...              | ...            | ...\n\n    Additional Sheets: Ch 8, Ch 9\n\n\nTODO\n-----\n- Create tests (IN PROGRESS)\n    - Batch mode test files\n    - Create a test case for batch mode and cycles/loops mode\n    - Test each py file in fit_extract\n- Update example.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/austinluong/fit-extract", "keywords": null, "license": "This is free and unencumbered software released into the public domain.\n\nAnyone is free to copy, modify, publish, use, compile, sell, or\ndistribute this software, either in source code form or as a compiled\nbinary, for any purpose, commercial or non-commercial, and by any\nmeans.\n\nIn jurisdictions that recognize copyright laws, the author or authors\nof this software dedicate any and all copyright interest in the\nsoftware to the public domain. We make this dedication for the benefit\nof the public at large and to the detriment of our heirs and\nsuccessors. We intend this dedication to be an overt act of\nrelinquishment in perpetuity of all present and future rights to this\nsoftware under copyright law.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\nFor more information, please refer to <http://unlicense.org>", "maintainer": null, "maintainer_email": null, "name": "fit-extract", "package_url": "https://pypi.org/project/fit-extract/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/fit-extract/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/austinluong/fit-extract"}, "release_url": "https://pypi.org/project/fit-extract/1.3.2/", "requires_dist": null, "requires_python": null, "summary": "Extracts data from EC-Lab .fit files", "version": "1.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            fit-extract (Data Extraction for EC-LAB)<br>================================================<br>Extracts parameter (R2, R3, Q1, etc.) data from all '.fit' files in<br>a specified folder and writes the extracted data into a 'Data.xlsx' in the<br>same folder. '.fit' files are created by clicking save in the EC-LAB software<br>after fitting (minimizing) a curve with Zfit. If data from multiple channels<br>is in the same folder, then the data will be separated into different sheets<br>in the same \"Data.xlsv\" file.<br><br>Requires python 3.2.x or above and pandas (should install automatically).<br><br><br>INSTALL<br>-----<br>Run from the command line:<br>    <br>    $ pip install fit-extract<br><br>Alternatively, you can download the zip from github or use git clone.<br><br><br>USAGE<br>-----<br>Navigate to the folder containing the .fit files using the command line:<br><br>    $ cd [FOLDERPATH]<br>    $ python fit-extract [OPTIONS]<br><br>Running with no options will run the program in the current directory. By default <br>the program will extract R2 and R3 and group the lower values and higher value of <br>each pair into the same column to ensure consistency. R1 should be set to 0.1 ohm <br>in EC-Lab.<br><br>#### Important Usage Notes: <br><br>Do not change the file name of any of the files. This program requires that the file name end in the default channel number format to work. This also helps with sorting (done lexicographically)<br><br>When working with data that has cycles, you must use the cycles (-c, see below) option. <br>Also when saving your data in EC-Lab, do not click save multiple time for the same cycle. <br>This will mess up how the program extracts cycles and create extra cycles for each time you <br>do this. You can also just use the select all cycles option (randomize only on first cycle) in<br>EC-Lab to avoid this risk and usually works fine if your results are clean. If you are not using <br>the cycles option, the most recent or latest save value so you are free to click save multiple times.<br><br>#### Arguments and Options:<br><br>**Help (--help or -h)**<br><br>    $ python fit-extract -h<br>    <br>Displays usage information.<br><br>**Folder (--folder or -f)**<br><br>    $ python fit-extract -f [FOLDERPATH [FOLDERPATH...]]<br><br>Runs the program in the specified folders (multiple can be specified). <br>The path must be in quotes.<br><br>**Cycles (--cycle or -c)**<br><br>    $ python fit-extract -c<br><br>If your data has cycles or loops, you will need to apply this option.<br><br>**Additional (--additional_parameters or -ap)**<br><br>    $ python fit-extract -ap [PARAM [PARAM...]]<br><br>In additional to the default parameters extracted (R2, R3), the program will<br>also extract extra specfied parameters (Ex: Q2, a1). Note case matters.<br><br>**Custom (--custom_parameters or -cp)**<br><br>    $ python fit-extract -cp [PARAM [PARAM...]]<br><br>Extracts specified parameters intead of default (R2). Disables group by size unless added manually.<br><br>**Group By Size (--groupbysize or -gs)**<br>    <br>    $ python fit-extract -gs [PARAM_1 PARAM_2]<br><br>Ensures consistency between two of the same type of parameter (default: ['R2', 'R3']) <br>by grouping their values by size.<br><br><br><br>#### Example:<br><br>    $ python fit-extract -f 'C:\\Users\\[USER_NAME]\\[PATH]' 'C:\\Users\\[USER_NAME]\\[PATH2]' -ls -add Q2 a1<br>    <br>Result - Data.xlsx file created in both paths specified with following information:<br><br>    Sheet Name: Ch 7<br><br>    File Name | R2 (ohm)           | R3 (ohm)         | Q2 (F.s^(a-1)) | a1 ()<br>    -------------------------------------------------------------------------------<br>    file.fit  | 12345              | 29929            | .00000023      | 0.124<br>    ...       | ...                | ...              | ...            | ...<br><br>    Additional Sheets: Ch 8, Ch 9<br><br><br>TODO<br>-----<br>- Create tests (IN PROGRESS)<br>    - Batch mode test files<br>    - Create a test case for batch mode and cycles/loops mode<br>    - Test each py file in fit_extract<br>- Update example.\n          </div>"}, "last_serial": 2183015, "releases": {"1.1.0": [], "1.2.0": [{"comment_text": "", "digests": {"md5": "f35aa37eb321cc8eda82d1f8052616e6", "sha256": "dcce91d4add8bb139adc1be8560cec626794f9430fbf8f6c9a99cbdcc131c853"}, "downloads": -1, "filename": "fit-extract-1.2.0.zip", "has_sig": false, "md5_digest": "f35aa37eb321cc8eda82d1f8052616e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13143, "upload_time": "2016-06-21T09:35:04", "upload_time_iso_8601": "2016-06-21T09:35:04.377465Z", "url": "https://files.pythonhosted.org/packages/b5/28/ca974dfeb66d8972a3543d3f33c05ee1cd438d90ef2de82accdf8e69fd94/fit-extract-1.2.0.zip", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "fa6a3ac263a1eb5e8763f7c160987e4e", "sha256": "5e4c0cb7f4c1a04448d77516a2de3396dc5266c26bae76a430673234c4c2b675"}, "downloads": -1, "filename": "fit-extract-1.3.0.zip", "has_sig": false, "md5_digest": "fa6a3ac263a1eb5e8763f7c160987e4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14588, "upload_time": "2016-06-22T10:31:13", "upload_time_iso_8601": "2016-06-22T10:31:13.267646Z", "url": "https://files.pythonhosted.org/packages/15/ab/4f44e51c17a8ecfd584e9c47e5b3887215cc07acc75f2da7b3fc66b2b65e/fit-extract-1.3.0.zip", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "0cd24cdda8f59e139b06d948edc3032e", "sha256": "237c0fe000a451439b5683cdd60bc923d216a34e4aa5533c3c90443d47dae302"}, "downloads": -1, "filename": "fit-extract-1.3.1.zip", "has_sig": false, "md5_digest": "0cd24cdda8f59e139b06d948edc3032e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14733, "upload_time": "2016-06-23T05:45:27", "upload_time_iso_8601": "2016-06-23T05:45:27.502819Z", "url": "https://files.pythonhosted.org/packages/c0/d2/bfaf7a3ab79f7d0ee68368e82a627938ef583ed920363888ef9154fccce5/fit-extract-1.3.1.zip", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "d024f4fdb213198a64af6c7b44d2a8fd", "sha256": "c5db6a9da59497fce1ec0a0984642ffb832f57d4a78b028228dba5baf94ce291"}, "downloads": -1, "filename": "fit-extract-1.3.2.zip", "has_sig": false, "md5_digest": "d024f4fdb213198a64af6c7b44d2a8fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15018, "upload_time": "2016-06-23T09:26:05", "upload_time_iso_8601": "2016-06-23T09:26:05.246123Z", "url": "https://files.pythonhosted.org/packages/4b/a2/b45cedc0d28fe773d83b9b55642da44ef945c29ae11bc127fd8527fa8f04/fit-extract-1.3.2.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d024f4fdb213198a64af6c7b44d2a8fd", "sha256": "c5db6a9da59497fce1ec0a0984642ffb832f57d4a78b028228dba5baf94ce291"}, "downloads": -1, "filename": "fit-extract-1.3.2.zip", "has_sig": false, "md5_digest": "d024f4fdb213198a64af6c7b44d2a8fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15018, "upload_time": "2016-06-23T09:26:05", "upload_time_iso_8601": "2016-06-23T09:26:05.246123Z", "url": "https://files.pythonhosted.org/packages/4b/a2/b45cedc0d28fe773d83b9b55642da44ef945c29ae11bc127fd8527fa8f04/fit-extract-1.3.2.zip", "yanked": false}], "timestamp": "Fri May  8 00:42:06 2020"}