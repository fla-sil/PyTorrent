{"info": {"author": "jimmy", "author_email": "jimmy60504@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3 :: Only", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "# SeisNN\n\nSeismic event P phase picking project\n\nMain framework: Obspy, Seisan, Tensorflow with Keras, Pytorch\n\nUsing U-net to generate pick probability\n\n![example](example.png)\n\n---\n\nEarly access\n\nThe code is still in the development state, API will change frequently. \n\nPlease star us for upcoming updates!\n\n---\n\nPrerequisite:\n\n- S-File catalog from [SEISAN](http://seisan.info/)\n- SeisComP Data Structure (SDS) database. The directory and file layout of SDS is defined as:\n\n      SDSROOT/YEAR/NET/STA/CHAN.TYPE/NET.STA.LOC.CHAN.TYPE.YEAR.DAY\n\nInstallation:\n\n- pip install seisnn\n- Clone this repository\n- Follow the instructions in the [Docker](docker) folder to create a Docker container.\n- SSH into the Docker container you create.\n\nIn the [scripts](scripts) folder:\n\n- [generate_dataset.py](scripts/generate_dataset.py)\n  - Make S-Files into training .pkl datasets.\n- [evalution.py](seisnn/qc.py)\n  - Calculate precision, recall and F1 score.\n  - Plot error distribution.\n- [plot_instance.py](scripts/plot_instance.py)\n  - Plot the wavefile, picks and the probability form the .pkl dataset.\n- [scanning.py](scripts/scanning.py)\n  - Scan through all stations available in the given time window, transfer into .pkl dataset.\n\nTraining:\n\nYou can choose between [scripts/tensorflow](scripts/tensorflow) or [scripts/pytorch](scripts/pytorch)\n\n- [pre_training.py](scripts/tensorflow/pre_training.py)\n  - Pre-train the model using small dataset.\n- [training.py](scripts/tensorflow/training.py)\n  - Train the model with the pre-trained weight.\n- [prediction.py](scripts/tensorflow/prediction.py)\n  - Predict the probability of the picks and write into the dataset.\n\nModel:\n\nThe model is stored in [seisnn/tensorflow](seisnn/tensorflow) or [seisnn/pytorch](seisnn/pytorch) \n\n- Nest_Net\n  - Unet++ code modified from [MrGiovanni](https://github.com/MrGiovanni/Nested-UNet/blob/master/model_logic.py)\n\n---\n\nReference:\n\n [PhaseNet](https://arxiv.org/abs/1803.03211)\n\n Zhu, W., & Beroza, G. C. (2018). PhaseNet: A Deep-Neural-Network-Based Seismic Arrival Time Picking Method. arXiv preprint arXiv:1803.03211.\n\n [U-net](https://lmb.informatik.uni-freiburg.de/people/ronneber/u-net/)\n\n Ronneberger, O., Fischer, P., & Brox, T. (2015, October). U-net: Convolutional networks for biomedical image segmentation. In International Conference on Medical image computing and computer-assisted intervention (pp. 234-241). Springer, Cham.\n\n [U-net ++](https://doi.org/10.1007/978-3-030-00889-5_1)\n\n Zhou, Z., Siddiquee, M. M. R., Tajbakhsh, N., & Liang, J. (2018). Unet++: A nested u-net architecture for medical image segmentation. In Deep Learning in Medical Image Analysis and Multimodal Learning for Clinical Decision Support (pp. 3-11). Springer, Cham.\n\n\n\n---\n\n[Jimmy Lab wordpress](https://jimmylab.wordpress.com/)\n\n[![License](http://img.shields.io/:license-mit-blue.svg?style=flat-square)](http://badges.mit-license.org)\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jimmy60504/SeisNN", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "SeisNN", "package_url": "https://pypi.org/project/SeisNN/", "platform": "", "project_url": "https://pypi.org/project/SeisNN/", "project_urls": {"Homepage": "https://github.com/jimmy60504/SeisNN"}, "release_url": "https://pypi.org/project/SeisNN/0.0.2.dev1/", "requires_dist": ["matplotlib (>=3.0.3)", "numpy (>=1.16.2)", "obspy (>=1.1.1)", "scipy (>=1.2.1)"], "requires_python": ">=3.5", "summary": "Deep learning seismic phase picking package", "version": "0.0.2.dev1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># SeisNN</p>\n<p>Seismic event P phase picking project</p>\n<p>Main framework: Obspy, Seisan, Tensorflow with Keras, Pytorch</p>\n<p>Using U-net to generate pick probability</p>\n<p>![example](example.png)</p>\n<p>\u2014</p>\n<p>Early access</p>\n<p>The code is still in the development state, API will change frequently.</p>\n<p>Please star us for upcoming updates!</p>\n<p>\u2014</p>\n<p>Prerequisite:</p>\n<ul>\n<li><p>S-File catalog from [SEISAN](<a href=\"http://seisan.info/\" rel=\"nofollow\">http://seisan.info/</a>)</p>\n</li>\n<li><p>SeisComP Data Structure (SDS) database. The directory and file layout of SDS is defined as:</p>\n<blockquote>\n<p>SDSROOT/YEAR/NET/STA/CHAN.TYPE/NET.STA.LOC.CHAN.TYPE.YEAR.DAY</p>\n</blockquote>\n</li>\n</ul>\n<p>Installation:</p>\n<ul>\n<li>pip install seisnn</li>\n<li>Clone this repository</li>\n<li>Follow the instructions in the [Docker](docker) folder to create a Docker container.</li>\n<li>SSH into the Docker container you create.</li>\n</ul>\n<p>In the [scripts](scripts) folder:</p>\n<ul>\n<li>[generate_dataset.py](scripts/generate_dataset.py)\n- Make S-Files into training .pkl datasets.</li>\n<li>[evalution.py](seisnn/qc.py)\n- Calculate precision, recall and F1 score.\n- Plot error distribution.</li>\n<li>[plot_instance.py](scripts/plot_instance.py)\n- Plot the wavefile, picks and the probability form the .pkl dataset.</li>\n<li>[scanning.py](scripts/scanning.py)\n- Scan through all stations available in the given time window, transfer into .pkl dataset.</li>\n</ul>\n<p>Training:</p>\n<p>You can choose between [scripts/tensorflow](scripts/tensorflow) or [scripts/pytorch](scripts/pytorch)</p>\n<ul>\n<li>[pre_training.py](scripts/tensorflow/pre_training.py)\n- Pre-train the model using small dataset.</li>\n<li>[training.py](scripts/tensorflow/training.py)\n- Train the model with the pre-trained weight.</li>\n<li>[prediction.py](scripts/tensorflow/prediction.py)\n- Predict the probability of the picks and write into the dataset.</li>\n</ul>\n<p>Model:</p>\n<p>The model is stored in [seisnn/tensorflow](seisnn/tensorflow) or [seisnn/pytorch](seisnn/pytorch)</p>\n<ul>\n<li>Nest_Net\n- Unet++ code modified from [MrGiovanni](<a href=\"https://github.com/MrGiovanni/Nested-UNet/blob/master/model_logic.py\" rel=\"nofollow\">https://github.com/MrGiovanni/Nested-UNet/blob/master/model_logic.py</a>)</li>\n</ul>\n<p>\u2014</p>\n<p>Reference:</p>\n<blockquote>\n<p>[PhaseNet](<a href=\"https://arxiv.org/abs/1803.03211\" rel=\"nofollow\">https://arxiv.org/abs/1803.03211</a>)</p>\n<p>Zhu, W., &amp; Beroza, G. C. (2018). PhaseNet: A Deep-Neural-Network-Based Seismic Arrival Time Picking Method. arXiv preprint arXiv:1803.03211.</p>\n<p>[U-net](<a href=\"https://lmb.informatik.uni-freiburg.de/people/ronneber/u-net/\" rel=\"nofollow\">https://lmb.informatik.uni-freiburg.de/people/ronneber/u-net/</a>)</p>\n<p>Ronneberger, O., Fischer, P., &amp; Brox, T. (2015, October). U-net: Convolutional networks for biomedical image segmentation. In International Conference on Medical image computing and computer-assisted intervention (pp. 234-241). Springer, Cham.</p>\n<p>[U-net ++](<a href=\"https://doi.org/10.1007/978-3-030-00889-5_1\" rel=\"nofollow\">https://doi.org/10.1007/978-3-030-00889-5_1</a>)</p>\n<p>Zhou, Z., Siddiquee, M. M. R., Tajbakhsh, N., &amp; Liang, J. (2018). Unet++: A nested u-net architecture for medical image segmentation. In Deep Learning in Medical Image Analysis and Multimodal Learning for Clinical Decision Support (pp. 3-11). Springer, Cham.</p>\n</blockquote>\n<p>\u2014</p>\n<p>[Jimmy Lab wordpress](<a href=\"https://jimmylab.wordpress.com/\" rel=\"nofollow\">https://jimmylab.wordpress.com/</a>)</p>\n<p>[![License](<a href=\"http://img.shields.io/:license-mit-blue.svg?style=flat-square)%5D(http://badges.mit-license.org\" rel=\"nofollow\">http://img.shields.io/:license-mit-blue.svg?style=flat-square)](http://badges.mit-license.org</a>)</p>\n\n          </div>"}, "last_serial": 5290502, "releases": {"0.0.2.dev1": [{"comment_text": "", "digests": {"md5": "afefe5264d4b09cab62672ece48ef249", "sha256": "8f1dbc191e2f3a1c79dab4750c2d525f7c85f469115c15fad7a839967ab2e535"}, "downloads": -1, "filename": "SeisNN-0.0.2.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "afefe5264d4b09cab62672ece48ef249", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 12067, "upload_time": "2019-05-20T05:55:39", "upload_time_iso_8601": "2019-05-20T05:55:39.141871Z", "url": "https://files.pythonhosted.org/packages/15/4b/2c25874e955dea22b209609b1166ee358fe4952dd23f4208e587d09fc348/SeisNN-0.0.2.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da3663920c110752700a092f3ee1d2bd", "sha256": "4d20ed8f3a7e9e077a0c3114910a0145049c53ab2d71e8139def12c13825f075"}, "downloads": -1, "filename": "SeisNN-0.0.2.dev1.tar.gz", "has_sig": false, "md5_digest": "da3663920c110752700a092f3ee1d2bd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9510, "upload_time": "2019-05-20T05:55:40", "upload_time_iso_8601": "2019-05-20T05:55:40.902535Z", "url": "https://files.pythonhosted.org/packages/e0/ed/0500055a454357a6be27901b1ddc05fbf935f216cfe9ec6eda97db817f64/SeisNN-0.0.2.dev1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "afefe5264d4b09cab62672ece48ef249", "sha256": "8f1dbc191e2f3a1c79dab4750c2d525f7c85f469115c15fad7a839967ab2e535"}, "downloads": -1, "filename": "SeisNN-0.0.2.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "afefe5264d4b09cab62672ece48ef249", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 12067, "upload_time": "2019-05-20T05:55:39", "upload_time_iso_8601": "2019-05-20T05:55:39.141871Z", "url": "https://files.pythonhosted.org/packages/15/4b/2c25874e955dea22b209609b1166ee358fe4952dd23f4208e587d09fc348/SeisNN-0.0.2.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da3663920c110752700a092f3ee1d2bd", "sha256": "4d20ed8f3a7e9e077a0c3114910a0145049c53ab2d71e8139def12c13825f075"}, "downloads": -1, "filename": "SeisNN-0.0.2.dev1.tar.gz", "has_sig": false, "md5_digest": "da3663920c110752700a092f3ee1d2bd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9510, "upload_time": "2019-05-20T05:55:40", "upload_time_iso_8601": "2019-05-20T05:55:40.902535Z", "url": "https://files.pythonhosted.org/packages/e0/ed/0500055a454357a6be27901b1ddc05fbf935f216cfe9ec6eda97db817f64/SeisNN-0.0.2.dev1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:37 2020"}