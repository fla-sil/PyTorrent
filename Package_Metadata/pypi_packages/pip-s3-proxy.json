{"info": {"author": "Toby Cabot (based on work by Rob Helmer)", "author_email": "toby@caboteria.org", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: Mozilla Public License 1.1 (MPL 1.1)", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"], "description": "Pip S3 Proxy\n----\n\nAn HTTP frontend for public and private S3 buckets so that pip can\ninstall packages from S3.\n\nIt's based on https://github.com/rhelmer/caching-s3-proxy and supports\nmany of the same features.  Thank you rhelmer!\n\nIt works by wrapping pip.  You run 'pipsss' instead of 'pip' - pipsss\nstarts a web server in the background and then passes your CLI\nparameters to pip.  At the moment you need to add an extra-index-url\nto the command line but in the future we might have pipsss add that\nitself.\n\nExample:\n```\n  python setup.py install\n  (set up your s3 credentials however you like to do that)\n  pipsss install --extra-index-url http://localhost:8000/my-pypi-bucket my-private-package\n```\n\nYou can still use the web server in a standalone mode.  It works like\ncaching-s3-proxy.\n\nExample:\n```\n  python setup.py install\n  (set up your s3 credentials however you like to do that)\n  pip-s3-proxy &\n  curl localhost:8000/my_bucket/v1/my_file.txt\n```\n\nIf you want to listen on a different port, just set the PORT variable:\n```\n  PORT=9999 pip-s3-proxy\n```\n\nAlternatively, you can run under uwsgi. It's safe to use multiple workers\nprocesses (the shared file cache uses file locking to allow concurrency):\n```\n  uwsgi -w proxy.wsgi --http=localhost:8000 --workers=10\n```\n\nIf you want to put this behind Nginx or Apache, use a socket instead:\n```\n  uwsgi -w proxy.wsgi -s /var/run/pip-s3-proxy.sock --workers=10\n```\n\nThen see http://uwsgi-docs.readthedocs.org/en/latest/Nginx.html or\nhttp://uwsgi-docs.readthedocs.org/en/latest/Apache.html\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/caboteria/pip-s3-proxy", "keywords": "caching,lru,s3,proxy,unauthenticated", "license": "MPL", "maintainer": "", "maintainer_email": "", "name": "pip-s3-proxy", "package_url": "https://pypi.org/project/pip-s3-proxy/", "platform": "", "project_url": "https://pypi.org/project/pip-s3-proxy/", "project_urls": {"Homepage": "https://github.com/caboteria/pip-s3-proxy"}, "release_url": "https://pypi.org/project/pip-s3-proxy/0.2/", "requires_dist": ["boto3 (>=1.6.22)", "check-manifest ; extra == 'dev'", "nose ; extra == 'test'", "coverage ; extra == 'test'", "line-profiler ; extra == 'test'", "flake8 ; extra == 'test'"], "requires_python": "", "summary": "provides an unauthenticated plain HTTP proxy so pip can install packages from S3", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Pip S3 Proxy</h2>\n<p>An HTTP frontend for public and private S3 buckets so that pip can\ninstall packages from S3.</p>\n<p>It's based on <a href=\"https://github.com/rhelmer/caching-s3-proxy\" rel=\"nofollow\">https://github.com/rhelmer/caching-s3-proxy</a> and supports\nmany of the same features.  Thank you rhelmer!</p>\n<p>It works by wrapping pip.  You run 'pipsss' instead of 'pip' - pipsss\nstarts a web server in the background and then passes your CLI\nparameters to pip.  At the moment you need to add an extra-index-url\nto the command line but in the future we might have pipsss add that\nitself.</p>\n<p>Example:</p>\n<pre><code>  python setup.py install\n  (set up your s3 credentials however you like to do that)\n  pipsss install --extra-index-url http://localhost:8000/my-pypi-bucket my-private-package\n</code></pre>\n<p>You can still use the web server in a standalone mode.  It works like\ncaching-s3-proxy.</p>\n<p>Example:</p>\n<pre><code>  python setup.py install\n  (set up your s3 credentials however you like to do that)\n  pip-s3-proxy &amp;\n  curl localhost:8000/my_bucket/v1/my_file.txt\n</code></pre>\n<p>If you want to listen on a different port, just set the PORT variable:</p>\n<pre><code>  PORT=9999 pip-s3-proxy\n</code></pre>\n<p>Alternatively, you can run under uwsgi. It's safe to use multiple workers\nprocesses (the shared file cache uses file locking to allow concurrency):</p>\n<pre><code>  uwsgi -w proxy.wsgi --http=localhost:8000 --workers=10\n</code></pre>\n<p>If you want to put this behind Nginx or Apache, use a socket instead:</p>\n<pre><code>  uwsgi -w proxy.wsgi -s /var/run/pip-s3-proxy.sock --workers=10\n</code></pre>\n<p>Then see <a href=\"http://uwsgi-docs.readthedocs.org/en/latest/Nginx.html\" rel=\"nofollow\">http://uwsgi-docs.readthedocs.org/en/latest/Nginx.html</a> or\n<a href=\"http://uwsgi-docs.readthedocs.org/en/latest/Apache.html\" rel=\"nofollow\">http://uwsgi-docs.readthedocs.org/en/latest/Apache.html</a></p>\n\n          </div>"}, "last_serial": 6274964, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "6762e4761bef410411a986546cd8cf1b", "sha256": "fc618e5d7a0ef38f2ccbf83841a2ae424732aced90bc3a9d2b8dc1c33a7260e5"}, "downloads": -1, "filename": "pip_s3_proxy-0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "6762e4761bef410411a986546cd8cf1b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6957, "upload_time": "2018-04-05T20:08:08", "upload_time_iso_8601": "2018-04-05T20:08:08.546376Z", "url": "https://files.pythonhosted.org/packages/4f/be/7fc57a5a892382d78cb7009a5703bf567fba7c69bc494004b78d25e309bb/pip_s3_proxy-0.1-py2-none-any.whl", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "efd8ffe01c3215a498ffb00d5beba596", "sha256": "61b5e165e8af0cb07e9bf145bfa85671209eb2da9795d5d17f20cbaa8472d232"}, "downloads": -1, "filename": "pip_s3_proxy-0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "efd8ffe01c3215a498ffb00d5beba596", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 12151, "upload_time": "2019-12-10T21:27:15", "upload_time_iso_8601": "2019-12-10T21:27:15.473411Z", "url": "https://files.pythonhosted.org/packages/71/13/1cfa226a2e3b98104c82046d1f1c41e349bddba5596e0349c403a6281edf/pip_s3_proxy-0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "96711792ef6c6579994fce7a1ac03793", "sha256": "547cff4dc770eb8a29a4dc3b9cecbf502bcea424421f808026aef4a77a09672f"}, "downloads": -1, "filename": "pip_s3_proxy-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "96711792ef6c6579994fce7a1ac03793", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12151, "upload_time": "2019-12-10T21:27:16", "upload_time_iso_8601": "2019-12-10T21:27:16.484374Z", "url": "https://files.pythonhosted.org/packages/a9/b9/3aac8711ba1291d2106f1129c8546aae35ffc0bc8f1aa91833cb0259cbea/pip_s3_proxy-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5687619146a95241cd3070cef074239d", "sha256": "9984bd914488e280a09406109c4c2d36e916e935934fe855c507c14ca52bb7d9"}, "downloads": -1, "filename": "pip-s3-proxy-0.2.tar.gz", "has_sig": false, "md5_digest": "5687619146a95241cd3070cef074239d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11947, "upload_time": "2019-12-10T21:27:17", "upload_time_iso_8601": "2019-12-10T21:27:17.880858Z", "url": "https://files.pythonhosted.org/packages/26/11/fa2e3956877447a6621bf8fac861e20ff2cffed6195d06dd6ef964494689/pip-s3-proxy-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "efd8ffe01c3215a498ffb00d5beba596", "sha256": "61b5e165e8af0cb07e9bf145bfa85671209eb2da9795d5d17f20cbaa8472d232"}, "downloads": -1, "filename": "pip_s3_proxy-0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "efd8ffe01c3215a498ffb00d5beba596", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 12151, "upload_time": "2019-12-10T21:27:15", "upload_time_iso_8601": "2019-12-10T21:27:15.473411Z", "url": "https://files.pythonhosted.org/packages/71/13/1cfa226a2e3b98104c82046d1f1c41e349bddba5596e0349c403a6281edf/pip_s3_proxy-0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "96711792ef6c6579994fce7a1ac03793", "sha256": "547cff4dc770eb8a29a4dc3b9cecbf502bcea424421f808026aef4a77a09672f"}, "downloads": -1, "filename": "pip_s3_proxy-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "96711792ef6c6579994fce7a1ac03793", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12151, "upload_time": "2019-12-10T21:27:16", "upload_time_iso_8601": "2019-12-10T21:27:16.484374Z", "url": "https://files.pythonhosted.org/packages/a9/b9/3aac8711ba1291d2106f1129c8546aae35ffc0bc8f1aa91833cb0259cbea/pip_s3_proxy-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5687619146a95241cd3070cef074239d", "sha256": "9984bd914488e280a09406109c4c2d36e916e935934fe855c507c14ca52bb7d9"}, "downloads": -1, "filename": "pip-s3-proxy-0.2.tar.gz", "has_sig": false, "md5_digest": "5687619146a95241cd3070cef074239d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11947, "upload_time": "2019-12-10T21:27:17", "upload_time_iso_8601": "2019-12-10T21:27:17.880858Z", "url": "https://files.pythonhosted.org/packages/26/11/fa2e3956877447a6621bf8fac861e20ff2cffed6195d06dd6ef964494689/pip-s3-proxy-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:09 2020"}