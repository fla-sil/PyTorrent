{"info": {"author": "Ashutosh Varma", "author_email": "ashutoshvarma11@live.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: C++", "Programming Language :: Cython", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing"], "description": "### 0.1 (2020-04-20)\n\nInitial stable release.\n[![Build Status](https://travis-ci.com/ashutoshvarma/pyxpdf.svg?branch=master)](https://travis-ci.com/ashutoshvarma/pyxpdf)\n[![Build status](https://ci.appveyor.com/api/projects/status/y4qys3oquc4bo8wd/branch/master?svg=true)](https://ci.appveyor.com/project/ashutoshvarma/pyxpdf/branch/master)\n[![codecov](https://codecov.io/gh/ashutoshvarma/pyxpdf/branch/master/graph/badge.svg)](https://codecov.io/gh/ashutoshvarma/pyxpdf)\n\n# pyxpdf\nFast Python PDF parser module based on [xpdf-reader](https://www.xpdfreader.com/) sources.\n\n## Quickstart\n```python\nfrom pyxpdf import Document, Page, Config\nfrom pyxpdf.xpdf import TextControl\n\ndoc = Document(\"samples/nonfree/mandarin.pdf\")\n# or\n# load pdf from file like object\nwith open(\"samples/nonfree/mandarin.pdf\", 'rb') as fp:\n    doc = Document(fp)\n\n# get pdf metadata dict\nprint(doc.info())\n# >>> doc.info()\n# {'CreationDate': \"D:20080721141207-04'00'\", \n#  'Subject': 'Chinese Version of Universal PCXR8 ...', \n#  'Author': 'SKC Inc.', \n#  'Creator': 'PScript5.dll\n#   .....\n\n# get all text\nall_text = doc.text()\n\n# iter first 10 pages\nfor page in doc[:10]:\n    # get page label if any\n    print(page.label)\n\n# get page by page label\nlabel_page = doc['1']\n\n# get text in table layout without discarding clipped\n# text.\ntext_control = TextControl(\"table\", clip_text=True)\ntext = label_page.text(control=text_control)\n\n# find case sensitive text within [x_min, y_min, x_max, y_max]\nres_box = label_page.find_text('\u64cd\u4f5c\u8bf4\u660e', search_box=[0, 0, 400, 400],\n                                case_sensitive=True)\n# >>> print(res_box)\n# (281.88, 269.718, 354.05819999999994, 287.7)\n\n# load xpdfrc\nConfig.load_file('my_xpdfrc')\n# suppress stderr output for xpdf error log.\nConfig.error_quiet = False\n\n```\n\n\n## pdftotext\nIf you are familiar with *pdftotext* binary then this is it's python port with almost native binary speed.\n\n```python\nfrom pyxpdf import pdftotext\n\nfile = \"sample.pdf\"\n# Get text from first two pages of pdf\npdf_text = pdftotext(file, start=1, end=2, layout=\"table\",\n                     userpass=\"1234\", ownerpass=\"1234\", \n                     cfg_file=\"~/.xpdfrc\")\n```\n\n### Note:-\n+ `pdftotext` returns Unicode encoded string, so if your PDF contain characters outside of utf-8 then they will be ignored [`decode('utf-8', errors='ignore')`].\n+ If you are working with different encoding then you can use `pdftotext_raw` which has same function signature but returns `bytes` object. You can then decode it yourself but make sure to set `Config.text_encoding` to your encoding so that xpdf can properly extract text. Currently only 'UTF-8', 'Latin1', 'ASCII7', 'Symbol', 'ZapfDingbats' and 'UCS-2' encodings are predefined. To add additional encodings you can provide Unicode CMaps for your encoding through [`xpdfrc`](https://github.com/ashutoshvarma/libxpdf/blob/master/xpdf-4.02/doc/xpdfrc.cat).\n\n\n## Install\n\n```\npip install pyxpdf\n``` \n### Note (Windows):-\nTo build this in windows you will need Visual C++ compiler which you can get by installing [Visual Studio Build Tools](https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2019)\n\n\n## Build Instructions\n### Requirements:-\n* (CPython) Python 3.4+ \n* A recent enough C/C++ build environment \n\nFirst clone the pyxpdf git repository:\n\n```\n$ git clone https://github.com/ashutoshvarma/pyxpdf.git\n$ cd pyxpdf\n```\nOptionally create a virtualenv (recommended):\n```\n$ python -m venv <directory>\n$ source <directory>/bin/activate\n```\nThen install the dependencies:\n\n```\n$ pip install -r test_requirements.txt\n```\n\nBuild wheel\n```\n$ pip install wheel\n$ python setup.py bdist_wheel --with-cython\n```\n\nInstall wheel package\n```\n$ pip install dist/*.whl\n```\n\nNow you can run the tests\n```\n$ python runtests.py -v\n```\n\n\n## License\n`pyxpdf` is licensed under the GNU General Public License (GPL), version 3. See the [LICENSE](https://github.com/ashutoshvarma/pyxpdf/blob/master/LICENSE)\n\nIt uses following third party sources :-\n- Xpdf Reader [https://www.xpdfreader.com/] by Derek Noonburg", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ashutoshvarma/pyxpdf", "keywords": "pdf parser,pdf converter,text mining,xpdf bindings", "license": "GPL", "maintainer": "Ashutosh Varma", "maintainer_email": "ashutoshvarma11@live.com", "name": "pyxpdf", "package_url": "https://pypi.org/project/pyxpdf/", "platform": "", "project_url": "https://pypi.org/project/pyxpdf/", "project_urls": {"Homepage": "https://github.com/ashutoshvarma/pyxpdf"}, "release_url": "https://pypi.org/project/pyxpdf/0.1/", "requires_dist": null, "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*", "summary": "Powerful and Pythonic PDF processing library based on xpdf-4.02", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h3>0.1 (2020-04-20)</h3>\n<p>Initial stable release.\n<a href=\"https://travis-ci.com/ashutoshvarma/pyxpdf\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5363604fa54f071300fa15b4dae3f4b63f36321b/68747470733a2f2f7472617669732d63692e636f6d2f61736875746f73687661726d612f7079787064662e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/ashutoshvarma/pyxpdf/branch/master\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/abbc91491b474f0ac3489ceb39f60415e68bb1b7/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f7934717973336f71756334626f3877642f6272616e63682f6d61737465723f7376673d74727565\"></a>\n<a href=\"https://codecov.io/gh/ashutoshvarma/pyxpdf\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2cc20ed9a4e7bcee925ac6657129d94fe3772702/68747470733a2f2f636f6465636f762e696f2f67682f61736875746f73687661726d612f7079787064662f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<h1>pyxpdf</h1>\n<p>Fast Python PDF parser module based on <a href=\"https://www.xpdfreader.com/\" rel=\"nofollow\">xpdf-reader</a> sources.</p>\n<h2>Quickstart</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyxpdf</span> <span class=\"kn\">import</span> <span class=\"n\">Document</span><span class=\"p\">,</span> <span class=\"n\">Page</span><span class=\"p\">,</span> <span class=\"n\">Config</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyxpdf.xpdf</span> <span class=\"kn\">import</span> <span class=\"n\">TextControl</span>\n\n<span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">\"samples/nonfree/mandarin.pdf\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># or</span>\n<span class=\"c1\"># load pdf from file like object</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"samples/nonfree/mandarin.pdf\"</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fp</span><span class=\"p\">:</span>\n    <span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"n\">fp</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># get pdf metadata dict</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">())</span>\n<span class=\"c1\"># &gt;&gt;&gt; doc.info()</span>\n<span class=\"c1\"># {'CreationDate': \"D:20080721141207-04'00'\", </span>\n<span class=\"c1\">#  'Subject': 'Chinese Version of Universal PCXR8 ...', </span>\n<span class=\"c1\">#  'Author': 'SKC Inc.', </span>\n<span class=\"c1\">#  'Creator': 'PScript5.dll</span>\n<span class=\"c1\">#   .....</span>\n\n<span class=\"c1\"># get all text</span>\n<span class=\"n\">all_text</span> <span class=\"o\">=</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># iter first 10 pages</span>\n<span class=\"k\">for</span> <span class=\"n\">page</span> <span class=\"ow\">in</span> <span class=\"n\">doc</span><span class=\"p\">[:</span><span class=\"mi\">10</span><span class=\"p\">]:</span>\n    <span class=\"c1\"># get page label if any</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">label</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># get page by page label</span>\n<span class=\"n\">label_page</span> <span class=\"o\">=</span> <span class=\"n\">doc</span><span class=\"p\">[</span><span class=\"s1\">'1'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># get text in table layout without discarding clipped</span>\n<span class=\"c1\"># text.</span>\n<span class=\"n\">text_control</span> <span class=\"o\">=</span> <span class=\"n\">TextControl</span><span class=\"p\">(</span><span class=\"s2\">\"table\"</span><span class=\"p\">,</span> <span class=\"n\">clip_text</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">label_page</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">(</span><span class=\"n\">control</span><span class=\"o\">=</span><span class=\"n\">text_control</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># find case sensitive text within [x_min, y_min, x_max, y_max]</span>\n<span class=\"n\">res_box</span> <span class=\"o\">=</span> <span class=\"n\">label_page</span><span class=\"o\">.</span><span class=\"n\">find_text</span><span class=\"p\">(</span><span class=\"s1\">'\u64cd\u4f5c\u8bf4\u660e'</span><span class=\"p\">,</span> <span class=\"n\">search_box</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">400</span><span class=\"p\">,</span> <span class=\"mi\">400</span><span class=\"p\">],</span>\n                                <span class=\"n\">case_sensitive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># &gt;&gt;&gt; print(res_box)</span>\n<span class=\"c1\"># (281.88, 269.718, 354.05819999999994, 287.7)</span>\n\n<span class=\"c1\"># load xpdfrc</span>\n<span class=\"n\">Config</span><span class=\"o\">.</span><span class=\"n\">load_file</span><span class=\"p\">(</span><span class=\"s1\">'my_xpdfrc'</span><span class=\"p\">)</span>\n<span class=\"c1\"># suppress stderr output for xpdf error log.</span>\n<span class=\"n\">Config</span><span class=\"o\">.</span><span class=\"n\">error_quiet</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n</pre>\n<h2>pdftotext</h2>\n<p>If you are familiar with <em>pdftotext</em> binary then this is it's python port with almost native binary speed.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyxpdf</span> <span class=\"kn\">import</span> <span class=\"n\">pdftotext</span>\n\n<span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"s2\">\"sample.pdf\"</span>\n<span class=\"c1\"># Get text from first two pages of pdf</span>\n<span class=\"n\">pdf_text</span> <span class=\"o\">=</span> <span class=\"n\">pdftotext</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">end</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">layout</span><span class=\"o\">=</span><span class=\"s2\">\"table\"</span><span class=\"p\">,</span>\n                     <span class=\"n\">userpass</span><span class=\"o\">=</span><span class=\"s2\">\"1234\"</span><span class=\"p\">,</span> <span class=\"n\">ownerpass</span><span class=\"o\">=</span><span class=\"s2\">\"1234\"</span><span class=\"p\">,</span> \n                     <span class=\"n\">cfg_file</span><span class=\"o\">=</span><span class=\"s2\">\"~/.xpdfrc\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Note:-</h3>\n<ul>\n<li><code>pdftotext</code> returns Unicode encoded string, so if your PDF contain characters outside of utf-8 then they will be ignored [<code>decode('utf-8', errors='ignore')</code>].</li>\n<li>If you are working with different encoding then you can use <code>pdftotext_raw</code> which has same function signature but returns <code>bytes</code> object. You can then decode it yourself but make sure to set <code>Config.text_encoding</code> to your encoding so that xpdf can properly extract text. Currently only 'UTF-8', 'Latin1', 'ASCII7', 'Symbol', 'ZapfDingbats' and 'UCS-2' encodings are predefined. To add additional encodings you can provide Unicode CMaps for your encoding through <a href=\"https://github.com/ashutoshvarma/libxpdf/blob/master/xpdf-4.02/doc/xpdfrc.cat\" rel=\"nofollow\"><code>xpdfrc</code></a>.</li>\n</ul>\n<h2>Install</h2>\n<pre><code>pip install pyxpdf\n</code></pre>\n<h3>Note (Windows):-</h3>\n<p>To build this in windows you will need Visual C++ compiler which you can get by installing <a href=\"https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2019\" rel=\"nofollow\">Visual Studio Build Tools</a></p>\n<h2>Build Instructions</h2>\n<h3>Requirements:-</h3>\n<ul>\n<li>(CPython) Python 3.4+</li>\n<li>A recent enough C/C++ build environment</li>\n</ul>\n<p>First clone the pyxpdf git repository:</p>\n<pre><code>$ git clone https://github.com/ashutoshvarma/pyxpdf.git\n$ cd pyxpdf\n</code></pre>\n<p>Optionally create a virtualenv (recommended):</p>\n<pre><code>$ python -m venv &lt;directory&gt;\n$ source &lt;directory&gt;/bin/activate\n</code></pre>\n<p>Then install the dependencies:</p>\n<pre><code>$ pip install -r test_requirements.txt\n</code></pre>\n<p>Build wheel</p>\n<pre><code>$ pip install wheel\n$ python setup.py bdist_wheel --with-cython\n</code></pre>\n<p>Install wheel package</p>\n<pre><code>$ pip install dist/*.whl\n</code></pre>\n<p>Now you can run the tests</p>\n<pre><code>$ python runtests.py -v\n</code></pre>\n<h2>License</h2>\n<p><code>pyxpdf</code> is licensed under the GNU General Public License (GPL), version 3. See the <a href=\"https://github.com/ashutoshvarma/pyxpdf/blob/master/LICENSE\" rel=\"nofollow\">LICENSE</a></p>\n<p>It uses following third party sources :-</p>\n<ul>\n<li>Xpdf Reader [https://www.xpdfreader.com/] by Derek Noonburg</li>\n</ul>\n\n          </div>"}, "last_serial": 7150658, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "3aa70050323f5fa042a343ac73e40aeb", "sha256": "dc48db4d73ccb416b08446a3988e34f866da4693e4c34a6941d54634e3167c7d"}, "downloads": -1, "filename": "pyxpdf-0.1-cp35-cp35m-win32.whl", "has_sig": false, "md5_digest": "3aa70050323f5fa042a343ac73e40aeb", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*", "size": 721239, "upload_time": "2020-05-02T09:58:05", "upload_time_iso_8601": "2020-05-02T09:58:05.528932Z", "url": "https://files.pythonhosted.org/packages/91/95/a7d2338ac0c4a07cdb4f94921a4a831c468733ad1da830be3f607435127c/pyxpdf-0.1-cp35-cp35m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "efca01ef7ebbe7a7d87817978977bf06", "sha256": "5bef196e522522c3f6d4c07efbc40956472bb073740a9d4128127f69dd7fb21e"}, "downloads": -1, "filename": "pyxpdf-0.1-cp35-cp35m-win_amd64.whl", "has_sig": false, "md5_digest": "efca01ef7ebbe7a7d87817978977bf06", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*", "size": 799889, "upload_time": "2020-05-02T09:58:01", "upload_time_iso_8601": "2020-05-02T09:58:01.266074Z", "url": "https://files.pythonhosted.org/packages/6f/6b/8532e13eaae703f5e6dca492dc7dd0a8e00ef26bf681409c4c10b5239eba/pyxpdf-0.1-cp35-cp35m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "78da1bf746ae7a0ae8c8054e0938ffa6", "sha256": "e83554cf2d34a7f357a6619dd5eebf8d97ca7bcbec5afcaaa349cf76345c718f"}, "downloads": -1, "filename": "pyxpdf-0.1-cp36-cp36m-win32.whl", "has_sig": false, "md5_digest": "78da1bf746ae7a0ae8c8054e0938ffa6", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*", "size": 723253, "upload_time": "2020-05-02T09:58:16", "upload_time_iso_8601": "2020-05-02T09:58:16.224327Z", "url": "https://files.pythonhosted.org/packages/75/6f/f87bd87142af40dda68d041fa5d3480be03aae650e28f8f7ead563893da9/pyxpdf-0.1-cp36-cp36m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2066b1d4126007a4f59cfafd74666086", "sha256": "fb70a1c86f495904ae45b896cc79baff5a6c3ac25a98ff7298dff735f202b8f4"}, "downloads": -1, "filename": "pyxpdf-0.1-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "2066b1d4126007a4f59cfafd74666086", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*", "size": 802139, "upload_time": "2020-05-02T09:58:10", "upload_time_iso_8601": "2020-05-02T09:58:10.757585Z", "url": "https://files.pythonhosted.org/packages/9a/ab/6ae7b13154ae2bf7b6c74ad9acf244c7cbff1e4d9a1b7a2720a9c8d88cc6/pyxpdf-0.1-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0ccc7187e9ba19f570da403c6288458", "sha256": "6a41d08ecc3f9e2bdeda93fafd1abbaf53c483c79552dc3948e025de04a9c44e"}, "downloads": -1, "filename": "pyxpdf-0.1-cp37-cp37m-win32.whl", "has_sig": false, "md5_digest": "e0ccc7187e9ba19f570da403c6288458", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*", "size": 723106, "upload_time": "2020-05-02T09:58:31", "upload_time_iso_8601": "2020-05-02T09:58:31.366590Z", "url": "https://files.pythonhosted.org/packages/60/20/07baab1628ddfc44dbf9b0be2c7d5a1a185ad8689e9f7aa431d3d2d12e31/pyxpdf-0.1-cp37-cp37m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16105a2d4a6cc24bebd21b60a63eed31", "sha256": "a1fe0d4f781e3b1e83181f20a18ab649b109d0e11f1a46f3a4e187dba711f163"}, "downloads": -1, "filename": "pyxpdf-0.1-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "16105a2d4a6cc24bebd21b60a63eed31", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*", "size": 802077, "upload_time": "2020-05-02T09:58:24", "upload_time_iso_8601": "2020-05-02T09:58:24.335776Z", "url": "https://files.pythonhosted.org/packages/c8/41/2ef7938f3e436458fae67ee71802c0fa135cf186485e7aabf37c6ff86412/pyxpdf-0.1-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "220866991d47d28fcd2fd32b02a4c9f1", "sha256": "fbda954e9965ea7cabb40ab38fa0cc9f9911898aa89dd00feeb44fd105f06a9d"}, "downloads": -1, "filename": "pyxpdf-0.1-cp38-cp38-win32.whl", "has_sig": false, "md5_digest": "220866991d47d28fcd2fd32b02a4c9f1", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*", "size": 725602, "upload_time": "2020-05-02T09:58:41", "upload_time_iso_8601": "2020-05-02T09:58:41.971119Z", "url": "https://files.pythonhosted.org/packages/28/55/462a5fdfef850932e50950477c9a730afe903f988c7c0508b0c00570e0a1/pyxpdf-0.1-cp38-cp38-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cce6211e0c462ebcdee8ad4393815ba6", "sha256": "d5dced62506e94d4ca0ce92491c5047a2df456519e8fbbe7172630155609623f"}, "downloads": -1, "filename": "pyxpdf-0.1-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "cce6211e0c462ebcdee8ad4393815ba6", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*", "size": 803851, "upload_time": "2020-05-02T09:58:37", "upload_time_iso_8601": "2020-05-02T09:58:37.560559Z", "url": "https://files.pythonhosted.org/packages/b0/2d/32c11fa922f04a0b59a6e3c0e72c49191136890ed488352ff026cc146e88/pyxpdf-0.1-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0c58f4f0ebe520ab9fcfc8a22b1e4c1", "sha256": "01f97ff41af5edd1281c0e85da9293a076fcd8c6e0b5f24ac77a9803856fb48f"}, "downloads": -1, "filename": "pyxpdf-0.1.tar.gz", "has_sig": false, "md5_digest": "c0c58f4f0ebe520ab9fcfc8a22b1e4c1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*", "size": 1280128, "upload_time": "2020-05-02T09:41:44", "upload_time_iso_8601": "2020-05-02T09:41:44.837815Z", "url": "https://files.pythonhosted.org/packages/df/4d/562b87ef97cae3e34631c410e5a3d9a701602554da5f358b12bf4abfa945/pyxpdf-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3aa70050323f5fa042a343ac73e40aeb", "sha256": "dc48db4d73ccb416b08446a3988e34f866da4693e4c34a6941d54634e3167c7d"}, "downloads": -1, "filename": "pyxpdf-0.1-cp35-cp35m-win32.whl", "has_sig": false, "md5_digest": "3aa70050323f5fa042a343ac73e40aeb", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*", "size": 721239, "upload_time": "2020-05-02T09:58:05", "upload_time_iso_8601": "2020-05-02T09:58:05.528932Z", "url": "https://files.pythonhosted.org/packages/91/95/a7d2338ac0c4a07cdb4f94921a4a831c468733ad1da830be3f607435127c/pyxpdf-0.1-cp35-cp35m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "efca01ef7ebbe7a7d87817978977bf06", "sha256": "5bef196e522522c3f6d4c07efbc40956472bb073740a9d4128127f69dd7fb21e"}, "downloads": -1, "filename": "pyxpdf-0.1-cp35-cp35m-win_amd64.whl", "has_sig": false, "md5_digest": "efca01ef7ebbe7a7d87817978977bf06", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*", "size": 799889, "upload_time": "2020-05-02T09:58:01", "upload_time_iso_8601": "2020-05-02T09:58:01.266074Z", "url": "https://files.pythonhosted.org/packages/6f/6b/8532e13eaae703f5e6dca492dc7dd0a8e00ef26bf681409c4c10b5239eba/pyxpdf-0.1-cp35-cp35m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "78da1bf746ae7a0ae8c8054e0938ffa6", "sha256": "e83554cf2d34a7f357a6619dd5eebf8d97ca7bcbec5afcaaa349cf76345c718f"}, "downloads": -1, "filename": "pyxpdf-0.1-cp36-cp36m-win32.whl", "has_sig": false, "md5_digest": "78da1bf746ae7a0ae8c8054e0938ffa6", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*", "size": 723253, "upload_time": "2020-05-02T09:58:16", "upload_time_iso_8601": "2020-05-02T09:58:16.224327Z", "url": "https://files.pythonhosted.org/packages/75/6f/f87bd87142af40dda68d041fa5d3480be03aae650e28f8f7ead563893da9/pyxpdf-0.1-cp36-cp36m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2066b1d4126007a4f59cfafd74666086", "sha256": "fb70a1c86f495904ae45b896cc79baff5a6c3ac25a98ff7298dff735f202b8f4"}, "downloads": -1, "filename": "pyxpdf-0.1-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "2066b1d4126007a4f59cfafd74666086", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*", "size": 802139, "upload_time": "2020-05-02T09:58:10", "upload_time_iso_8601": "2020-05-02T09:58:10.757585Z", "url": "https://files.pythonhosted.org/packages/9a/ab/6ae7b13154ae2bf7b6c74ad9acf244c7cbff1e4d9a1b7a2720a9c8d88cc6/pyxpdf-0.1-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0ccc7187e9ba19f570da403c6288458", "sha256": "6a41d08ecc3f9e2bdeda93fafd1abbaf53c483c79552dc3948e025de04a9c44e"}, "downloads": -1, "filename": "pyxpdf-0.1-cp37-cp37m-win32.whl", "has_sig": false, "md5_digest": "e0ccc7187e9ba19f570da403c6288458", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*", "size": 723106, "upload_time": "2020-05-02T09:58:31", "upload_time_iso_8601": "2020-05-02T09:58:31.366590Z", "url": "https://files.pythonhosted.org/packages/60/20/07baab1628ddfc44dbf9b0be2c7d5a1a185ad8689e9f7aa431d3d2d12e31/pyxpdf-0.1-cp37-cp37m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16105a2d4a6cc24bebd21b60a63eed31", "sha256": "a1fe0d4f781e3b1e83181f20a18ab649b109d0e11f1a46f3a4e187dba711f163"}, "downloads": -1, "filename": "pyxpdf-0.1-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "16105a2d4a6cc24bebd21b60a63eed31", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*", "size": 802077, "upload_time": "2020-05-02T09:58:24", "upload_time_iso_8601": "2020-05-02T09:58:24.335776Z", "url": "https://files.pythonhosted.org/packages/c8/41/2ef7938f3e436458fae67ee71802c0fa135cf186485e7aabf37c6ff86412/pyxpdf-0.1-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "220866991d47d28fcd2fd32b02a4c9f1", "sha256": "fbda954e9965ea7cabb40ab38fa0cc9f9911898aa89dd00feeb44fd105f06a9d"}, "downloads": -1, "filename": "pyxpdf-0.1-cp38-cp38-win32.whl", "has_sig": false, "md5_digest": "220866991d47d28fcd2fd32b02a4c9f1", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*", "size": 725602, "upload_time": "2020-05-02T09:58:41", "upload_time_iso_8601": "2020-05-02T09:58:41.971119Z", "url": "https://files.pythonhosted.org/packages/28/55/462a5fdfef850932e50950477c9a730afe903f988c7c0508b0c00570e0a1/pyxpdf-0.1-cp38-cp38-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cce6211e0c462ebcdee8ad4393815ba6", "sha256": "d5dced62506e94d4ca0ce92491c5047a2df456519e8fbbe7172630155609623f"}, "downloads": -1, "filename": "pyxpdf-0.1-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "cce6211e0c462ebcdee8ad4393815ba6", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*", "size": 803851, "upload_time": "2020-05-02T09:58:37", "upload_time_iso_8601": "2020-05-02T09:58:37.560559Z", "url": "https://files.pythonhosted.org/packages/b0/2d/32c11fa922f04a0b59a6e3c0e72c49191136890ed488352ff026cc146e88/pyxpdf-0.1-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0c58f4f0ebe520ab9fcfc8a22b1e4c1", "sha256": "01f97ff41af5edd1281c0e85da9293a076fcd8c6e0b5f24ac77a9803856fb48f"}, "downloads": -1, "filename": "pyxpdf-0.1.tar.gz", "has_sig": false, "md5_digest": "c0c58f4f0ebe520ab9fcfc8a22b1e4c1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*", "size": 1280128, "upload_time": "2020-05-02T09:41:44", "upload_time_iso_8601": "2020-05-02T09:41:44.837815Z", "url": "https://files.pythonhosted.org/packages/df/4d/562b87ef97cae3e34631c410e5a3d9a701602554da5f358b12bf4abfa945/pyxpdf-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:53 2020"}