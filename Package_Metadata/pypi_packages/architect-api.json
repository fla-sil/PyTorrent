{"info": {"author": "Ale\u0161 Kom\u00e1rek", "author_email": "ales.komarek@newt.cz", "bugtrack_url": null, "classifiers": ["Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython"], "description": "============================================================\nThe Architect Project |PypiVersion| |ReadTheDocs| |TravisCI|\n============================================================\n\n\nThe aim of this project is to provide unified service modeling, management and\nvisualization platform agnostic of delivery method. It creates virtual\nrepresentations of any software services or physical resources and allows\ncontrol over their entire life-cycle. The name of project comes from Architect\nprogram in Matrix movie series:\n\n    In the Matrix the Architect is a highly specialized, humorless program of\n    the machine world as well as the creator of the Matrix. As the chief\n    administrator of the system, he is possibly a collective manifestation, or\n    at the very least a virtual representation of the entire Machine\n    mainframe.\n\nThe The Architect project was started as part of my thesis \"Visualization of\ncloud performace metrics\". Now we explore the possible implications of\ncombining the relational models of infrastructures with quantitative data that\nrelates to it.\n\nFollowing figure shows high-level achitecture of Architect system.\n\n.. figure:: ./doc/source/static/scheme/high_level_arch.png\n    :align: center\n    :width: 80%\n\nYou can find installation instructions, getting started guides, and API\ndocumentation at https://architect-api.readthedocs.io/.\n\n\nArchitect Components\n====================\n\nThe Architect project consists of 4 core compontents (inventory, manager,\nmonitor and document). A quick summary of properties, capabilities and\nintegrations for each component.\n\n\nInventory Component\n-------------------\n\nInventory is the Architect's metadata engine. It encapsulates and unifies data\nfrom various metadata sources to provide inventory metadata for various\norchestration services. Basically serves as metadata proxy with clients. It\nworks best integrated with http://salt-formulas.readthedocs.io/.\n\nCurrently supported metadata backends are:\n\n* `salt-formulas <http://architect-api.readthedocs.io/en/latest/text/inventory-backends.html#salt-formulas-inventory>`_\n* `reclass <http://architect-api.readthedocs.io/en/latest/text/inventory-backends.html#reclass-inventory>`_ (python3 version)\n\nThe currently supported customers of metadata provided by Inventory using\n``architect-api`` client library are:\n\n* SaltStack\n* Ansible\n* Puppet\n* Chef\n\nFollowing orchestrators have direct support for injecting context metadata:\n\n* Heat\n\n\nManager Component\n-----------------\n\nManager is the Architect's orchestration engine. The aim of this module is to\nenforce infrastructure topologies models and acquire live infrastructure\ntopology data from any resource provider for further relational and\nquantitative analysis and visualisations.\n\nThe pull approach for querying endpoint APIs is supported at the moment, the\nprocessing push from target services is supported for SaltStack events.\n\nCurrently supported resource providers are:\n\n* Kubernetes clusters\n* OpenStack clouds\n* Heat templates\n* Amazon web services\n* SaltStack infrastructures\n* Terraform templates\n* Jenkins pipelines\n\n\nMonitor Component\n-----------------\n\nMonitor is the Architect's monitoring engine. It can connect to multiple\ndata endpoints and subject them for further analysis. We can define\nqueries for quantitative data or time-series in Document component.\n\nCurrently supported time-series databases are:\n\n* Graphite\n* ElasticSearch\n* Prometheus\n* InfluxDB\n\n\nDocument Component\n------------------\n\nDocument component is responsible for analysis and visualization of\ninfrastructure resources in form of directed graph. We can perform several\ntransformation functions on this graph data. The other part is analysis of\nquantitative data provided by monitoring solutions and corellating it to the\nrelational structures provided by Manager component.\n\nCurrently supported relational visualization layouts:\n\n* Adjacency matrix\n* Arc diagram\n* Force-directed graph\n* Hierarchical edge bundling\n* Hive plot\n* Circle packing\n* Node-link tree (Reingold-Tilford tidy trees, dendrograms)\n* Partition layout (sunburst, icicle diagrams, treemaps)\n* Sankey diagram\n\nCurrently supported quatitative visualization layouts:\n\n* Line chart\n* Bar chart, stacked bar chart\n* Horizon chart\n* Donut chart, pie chart\n\n\n.. |PypiVersion| image:: https://badge.fury.io/py/architect-api.svg?style=flat\n.. |ReadTheDocs| image:: https://readthedocs.org/projects/architect-api/badge/?version=master\n.. |TravisCI| image:: https://travis-ci.org/architect-api/architect-api.svg?branch=master", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cznewt/architect-api/", "keywords": "", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "architect-api", "package_url": "https://pypi.org/project/architect-api/", "platform": "", "project_url": "https://pypi.org/project/architect-api/", "project_urls": {"Homepage": "https://github.com/cznewt/architect-api/"}, "release_url": "https://pypi.org/project/architect-api/0.4/", "requires_dist": null, "requires_python": "", "summary": "architect-api is a server API and UI of Architect, the service modeling, management and visualization platform.", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The aim of this project is to provide unified service modeling, management and\nvisualization platform agnostic of delivery method. It creates virtual\nrepresentations of any software services or physical resources and allows\ncontrol over their entire life-cycle. The name of project comes from Architect\nprogram in Matrix movie series:</p>\n<blockquote>\nIn the Matrix the Architect is a highly specialized, humorless program of\nthe machine world as well as the creator of the Matrix. As the chief\nadministrator of the system, he is possibly a collective manifestation, or\nat the very least a virtual representation of the entire Machine\nmainframe.</blockquote>\n<p>The The Architect project was started as part of my thesis \u201cVisualization of\ncloud performace metrics\u201d. Now we explore the possible implications of\ncombining the relational models of infrastructures with quantitative data that\nrelates to it.</p>\n<p>Following figure shows high-level achitecture of Architect system.</p>\n<div>\n<img alt=\"./doc/source/static/scheme/high_level_arch.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/202b364299c052c4ab2ab7d37d46c81a2758dd26/2e2f646f632f736f757263652f7374617469632f736368656d652f686967685f6c6576656c5f617263682e706e67\" width=\"80%\">\n</div>\n<p>You can find installation instructions, getting started guides, and API\ndocumentation at <a href=\"https://architect-api.readthedocs.io/\" rel=\"nofollow\">https://architect-api.readthedocs.io/</a>.</p>\n<div id=\"architect-components\">\n<h2>Architect Components</h2>\n<p>The Architect project consists of 4 core compontents (inventory, manager,\nmonitor and document). A quick summary of properties, capabilities and\nintegrations for each component.</p>\n<div id=\"inventory-component\">\n<h3>Inventory Component</h3>\n<p>Inventory is the Architect\u2019s metadata engine. It encapsulates and unifies data\nfrom various metadata sources to provide inventory metadata for various\norchestration services. Basically serves as metadata proxy with clients. It\nworks best integrated with <a href=\"http://salt-formulas.readthedocs.io/\" rel=\"nofollow\">http://salt-formulas.readthedocs.io/</a>.</p>\n<p>Currently supported metadata backends are:</p>\n<ul>\n<li><a href=\"http://architect-api.readthedocs.io/en/latest/text/inventory-backends.html#salt-formulas-inventory\" rel=\"nofollow\">salt-formulas</a></li>\n<li><a href=\"http://architect-api.readthedocs.io/en/latest/text/inventory-backends.html#reclass-inventory\" rel=\"nofollow\">reclass</a> (python3 version)</li>\n</ul>\n<p>The currently supported customers of metadata provided by Inventory using\n<tt><span class=\"pre\">architect-api</span></tt> client library are:</p>\n<ul>\n<li>SaltStack</li>\n<li>Ansible</li>\n<li>Puppet</li>\n<li>Chef</li>\n</ul>\n<p>Following orchestrators have direct support for injecting context metadata:</p>\n<ul>\n<li>Heat</li>\n</ul>\n</div>\n<div id=\"manager-component\">\n<h3>Manager Component</h3>\n<p>Manager is the Architect\u2019s orchestration engine. The aim of this module is to\nenforce infrastructure topologies models and acquire live infrastructure\ntopology data from any resource provider for further relational and\nquantitative analysis and visualisations.</p>\n<p>The pull approach for querying endpoint APIs is supported at the moment, the\nprocessing push from target services is supported for SaltStack events.</p>\n<p>Currently supported resource providers are:</p>\n<ul>\n<li>Kubernetes clusters</li>\n<li>OpenStack clouds</li>\n<li>Heat templates</li>\n<li>Amazon web services</li>\n<li>SaltStack infrastructures</li>\n<li>Terraform templates</li>\n<li>Jenkins pipelines</li>\n</ul>\n</div>\n<div id=\"monitor-component\">\n<h3>Monitor Component</h3>\n<p>Monitor is the Architect\u2019s monitoring engine. It can connect to multiple\ndata endpoints and subject them for further analysis. We can define\nqueries for quantitative data or time-series in Document component.</p>\n<p>Currently supported time-series databases are:</p>\n<ul>\n<li>Graphite</li>\n<li>ElasticSearch</li>\n<li>Prometheus</li>\n<li>InfluxDB</li>\n</ul>\n</div>\n<div id=\"document-component\">\n<h3>Document Component</h3>\n<p>Document component is responsible for analysis and visualization of\ninfrastructure resources in form of directed graph. We can perform several\ntransformation functions on this graph data. The other part is analysis of\nquantitative data provided by monitoring solutions and corellating it to the\nrelational structures provided by Manager component.</p>\n<p>Currently supported relational visualization layouts:</p>\n<ul>\n<li>Adjacency matrix</li>\n<li>Arc diagram</li>\n<li>Force-directed graph</li>\n<li>Hierarchical edge bundling</li>\n<li>Hive plot</li>\n<li>Circle packing</li>\n<li>Node-link tree (Reingold-Tilford tidy trees, dendrograms)</li>\n<li>Partition layout (sunburst, icicle diagrams, treemaps)</li>\n<li>Sankey diagram</li>\n</ul>\n<p>Currently supported quatitative visualization layouts:</p>\n<ul>\n<li>Line chart</li>\n<li>Bar chart, stacked bar chart</li>\n<li>Horizon chart</li>\n<li>Donut chart, pie chart</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3632845, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "8b96f73a1a8ae2d8a837c9ac447d3124", "sha256": "31137facfd410d9c76ce3ff1a503d4e57f82445f951c139bc61a347864e689e3"}, "downloads": -1, "filename": "architect-api-0.1.tar.gz", "has_sig": false, "md5_digest": "8b96f73a1a8ae2d8a837c9ac447d3124", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33279, "upload_time": "2018-01-18T14:23:24", "upload_time_iso_8601": "2018-01-18T14:23:24.280420Z", "url": "https://files.pythonhosted.org/packages/0b/14/799c0755af61a434ac4c1a10695749b3542dfb3266177b3c6b5f386b205d/architect-api-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "a23d260c2681994300e08396e40397dc", "sha256": "477c3b78c8d64044d406cbb2d251441522a4819f944535980afee79704a260ea"}, "downloads": -1, "filename": "architect-api-0.2.tar.gz", "has_sig": false, "md5_digest": "a23d260c2681994300e08396e40397dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35576, "upload_time": "2018-01-24T11:45:56", "upload_time_iso_8601": "2018-01-24T11:45:56.401316Z", "url": "https://files.pythonhosted.org/packages/b2/f3/400afc67175922bee7997992f0d2e9a4486bf601a387bd3021d8b7e73119/architect-api-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "f22e8f44206057e384e12b8b7b0ed28c", "sha256": "c4ab365245e342131cec53c1a26158cac4b6a8c053e8a5009a952f427b19b20a"}, "downloads": -1, "filename": "architect-api-0.3.tar.gz", "has_sig": false, "md5_digest": "f22e8f44206057e384e12b8b7b0ed28c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51173, "upload_time": "2018-02-13T23:24:23", "upload_time_iso_8601": "2018-02-13T23:24:23.459432Z", "url": "https://files.pythonhosted.org/packages/89/0e/6473529cbdd445ce11084704122223734aa711a212d4001002ce367a253f/architect-api-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "7ed8452c2e6b38fea29f43edb3d4eb37", "sha256": "3f68e8bdb1cd8b9c3147779c5714b71f108115919dfb85b45468918da75f4ead"}, "downloads": -1, "filename": "architect-api-0.4.tar.gz", "has_sig": false, "md5_digest": "7ed8452c2e6b38fea29f43edb3d4eb37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 286786, "upload_time": "2018-03-02T19:37:55", "upload_time_iso_8601": "2018-03-02T19:37:55.023888Z", "url": "https://files.pythonhosted.org/packages/4b/e6/e2c90f177ef048d76ea0a3612c7895d72c6c0ac787a451aa651e2841444b/architect-api-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7ed8452c2e6b38fea29f43edb3d4eb37", "sha256": "3f68e8bdb1cd8b9c3147779c5714b71f108115919dfb85b45468918da75f4ead"}, "downloads": -1, "filename": "architect-api-0.4.tar.gz", "has_sig": false, "md5_digest": "7ed8452c2e6b38fea29f43edb3d4eb37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 286786, "upload_time": "2018-03-02T19:37:55", "upload_time_iso_8601": "2018-03-02T19:37:55.023888Z", "url": "https://files.pythonhosted.org/packages/4b/e6/e2c90f177ef048d76ea0a3612c7895d72c6c0ac787a451aa651e2841444b/architect-api-0.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:23 2020"}