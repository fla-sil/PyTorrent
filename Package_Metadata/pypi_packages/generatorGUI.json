{"info": {"author": "Ao Liu", "author_email": "ao@aoliu.tech", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Utilities"], "description": "# generatorGUI\n\nEdit parameters for the Astra generator program and run generator using a GUI.\n\n### Purpose\nSummarizes all the parameters for Astra generator in a table and displays it in \nthe PyQt \nenvironment.\n\nThe parameters are saved in an *Excel* format. The user can start from a \nblank \"all-default\" table, or load an Excel file with parameters already \ndefined in it. The parameters can be changed and saved again to the Excel \nspreadsheet.\n\nWhen all the necessary parameters are defined in the PyQt table, simply click\n \"Run\" to execute the Astra generator. \n\n### Usage\n\nThe script can be executed in two ways. Both ways require some basic \ninformation about how to run Python scripts, of course.\n\n* Option 1: **Run script from command line**\n    ```BASH\n    > python /path/to/your/pip/installation/generatorGUI/main.py\n    ```\n    For instance, on my OSX I used `pip` installed by *anaconda*, such that \n    the packages are installed in my *anaconda* diretory. So for me:\n    ```BASH\n    > python  ~/anaconda3/lib/python3.7/site-packages/generatorGUI/main.py\n    ```\n* Option 2: **Import the module and run the main function**\n    You can also run the GUI from the Python prompt, or *Jupyter notebook*, \n    for instance:\n    ```Python\n    >>> import generatorGUI\n    >>> generatorGUI.main()  \n    ```\n\nFor each of the parameters, the *type*, *unit*, and *default* have already \nbeen defined. Do not change the values in those cells. If a parameter needs \nto be modified from its default value, enter the correct value in the *set* \ncolumn.\n\nNotice, that for *str* type, the value does not need the single quotes ' \naround the string; the *list_?* type asks for a list of *?* type values: e.g.\n for *list_float* you can put `[1.0, 2.0, 3.0]`, just like a *Python list*, \n for *list_str*, single quotes ' are not needed either: e.g. `[abc.dat, foo\n .dat]`.\n\n####A note on the parameter *fname*\nNotice that by default the *generator* program will be called from the \ncurrent working directory, i.e. where you run the **main.py** script. If only\n a file name is \n\n\n### Installation\nInstall easyexception using `pip`, or `pip3`\n\n    pip install generatorGUI\n\n### Repository\n[GitHub page](https://github.com/frankliuao/generatorGUI)", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.python.org/pypi/generatorGUI", "keywords": "generator,astra,GUI,PyQt5", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "generatorGUI", "package_url": "https://pypi.org/project/generatorGUI/", "platform": "", "project_url": "https://pypi.org/project/generatorGUI/", "project_urls": {"Homepage": "https://pypi.python.org/pypi/generatorGUI"}, "release_url": "https://pypi.org/project/generatorGUI/0.1.1/", "requires_dist": null, "requires_python": ">=3.0", "summary": "Edit parameters for the Astra generator program and run generator using a GUI.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # generatorGUI<br><br>Edit parameters for the Astra generator program and run generator using a GUI.<br><br>### Purpose<br>Summarizes all the parameters for Astra generator in a table and displays it in <br>the PyQt <br>environment.<br><br>The parameters are saved in an *Excel* format. The user can start from a <br>blank \"all-default\" table, or load an Excel file with parameters already <br>defined in it. The parameters can be changed and saved again to the Excel <br>spreadsheet.<br><br>When all the necessary parameters are defined in the PyQt table, simply click<br> \"Run\" to execute the Astra generator. <br><br>### Usage<br><br>The script can be executed in two ways. Both ways require some basic <br>information about how to run Python scripts, of course.<br><br>* Option 1: **Run script from command line**<br>    ```BASH<br>    &gt; python /path/to/your/pip/installation/generatorGUI/main.py<br>    ```<br>    For instance, on my OSX I used `pip` installed by *anaconda*, such that <br>    the packages are installed in my *anaconda* diretory. So for me:<br>    ```BASH<br>    &gt; python  ~/anaconda3/lib/python3.7/site-packages/generatorGUI/main.py<br>    ```<br>* Option 2: **Import the module and run the main function**<br>    You can also run the GUI from the Python prompt, or *Jupyter notebook*, <br>    for instance:<br>    ```Python<br>    &gt;&gt;&gt; import generatorGUI<br>    &gt;&gt;&gt; generatorGUI.main()  <br>    ```<br><br>For each of the parameters, the *type*, *unit*, and *default* have already <br>been defined. Do not change the values in those cells. If a parameter needs <br>to be modified from its default value, enter the correct value in the *set* <br>column.<br><br>Notice, that for *str* type, the value does not need the single quotes ' <br>around the string; the *list_?* type asks for a list of *?* type values: e.g.<br> for *list_float* you can put `[1.0, 2.0, 3.0]`, just like a *Python list*, <br> for *list_str*, single quotes ' are not needed either: e.g. `[abc.dat, foo<br> .dat]`.<br><br>####A note on the parameter *fname*<br>Notice that by default the *generator* program will be called from the <br>current working directory, i.e. where you run the **main.py** script. If only<br> a file name is <br><br><br>### Installation<br>Install easyexception using `pip`, or `pip3`<br><br>    pip install generatorGUI<br><br>### Repository<br>[GitHub page](https://github.com/frankliuao/generatorGUI)\n          </div>"}, "last_serial": 5204897, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "51dd2a93312690da075f1e348e6388b6", "sha256": "9e26f401c981f0ef703ae3441a3b723595dde09e7fbd596de2c5d8cf8e53565a"}, "downloads": -1, "filename": "generatorGUI-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "51dd2a93312690da075f1e348e6388b6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0", "size": 97229, "upload_time": "2019-04-29T20:06:53", "upload_time_iso_8601": "2019-04-29T20:06:53.334780Z", "url": "https://files.pythonhosted.org/packages/e8/9d/de738daa30fd7144f5b982e9a5a1c8c68eebd27731bcff613f7e5211810b/generatorGUI-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5bfad31d809367b74d9e1541c349b23a", "sha256": "3c1480c520989e8a44e7e772ef70aecf8d3c8369178c51ebe01471128da12a3b"}, "downloads": -1, "filename": "generatorGUI-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5bfad31d809367b74d9e1541c349b23a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 93445, "upload_time": "2019-04-29T20:07:17", "upload_time_iso_8601": "2019-04-29T20:07:17.606780Z", "url": "https://files.pythonhosted.org/packages/37/34/af1ba87319281285cb52ee2f3a22c6d1a8c3e691f215c5f81cabcdcc47e2/generatorGUI-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "70faa93838d175fd7cac138a75a57b39", "sha256": "b620ee92d4958e67fc7962e2e531c5ca03df89317277271ec3c4452c829415a1"}, "downloads": -1, "filename": "generatorGUI-0.1.1.tar.gz", "has_sig": false, "md5_digest": "70faa93838d175fd7cac138a75a57b39", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 93512, "upload_time": "2019-04-29T20:33:54", "upload_time_iso_8601": "2019-04-29T20:33:54.538781Z", "url": "https://files.pythonhosted.org/packages/28/26/16db74543b5ad189128bf67b2d7c8cdf2b42ae6b11d33cfe6e94a98eee74/generatorGUI-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "70faa93838d175fd7cac138a75a57b39", "sha256": "b620ee92d4958e67fc7962e2e531c5ca03df89317277271ec3c4452c829415a1"}, "downloads": -1, "filename": "generatorGUI-0.1.1.tar.gz", "has_sig": false, "md5_digest": "70faa93838d175fd7cac138a75a57b39", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 93512, "upload_time": "2019-04-29T20:33:54", "upload_time_iso_8601": "2019-04-29T20:33:54.538781Z", "url": "https://files.pythonhosted.org/packages/28/26/16db74543b5ad189128bf67b2d7c8cdf2b42ae6b11d33cfe6e94a98eee74/generatorGUI-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:24 2020"}