{"info": {"author": "Aptivate", "author_email": "mapaction-team@aptivate.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7"], "description": "=======================\nckanext-datasetversions\n=======================\n\nThis CKAN extension adds support for different versions of a dataset. Sometimes\nis is desirable to store and display together different versions of a dataset,\nfor example a daily situation report-style map during a humanitarian crisis.\n\nThis plugin provides an action ``dataset_version_create``, for example::\n\n    toolkit.get_action('dataset_version_create')(\n        context, {\n            'id': dataset['id'],\n            'base_name': base_name,\n            'owner_org': owner_org\n        }\n    )\n\nThe plugin models dataset versions internally by creating a parent dataset, with\nminimal metadata and no resources. A child dataset is created for each version.\n\n``dataset_version_create`` will create a parent-child relationship between the\ndataset specified by ``base_name`` and that specified by ``id``. If the dataset\nspecified by ``base_name`` does not exist, it will be created.\n\nNote that this plugin overrides CKAN's ``package_show`` action. The original\n``package_show`` is made available as ``ckan_package_show``.\n\nFor datasets with different versions, the overridden ``package_show`` will\nreturn:\n\n* The latest, public, active version of the dataset if the parent name or id is specified\n* A specific version of the dataset if the child name or id is specified\n\nThe version ordering is determined by the integer value of ``version`` in the\ndataset metadata.\n\nIn addition, ``package_show`` will return a list of the names and URLs of all\nactive versions as ``_versions`` in the dictionary.\n\nThe plugin provides templates to list versions of a dataset alongside that\ncurrently viewed and to warn the user if they are looking at an old version of a\ndataset.\n\n------------\nRequirements\n------------\n\nThis plugin will not work 'out of the box'. You will need to write code to call\nthe ``dataset_version_create`` action. A site-specific example is available at\nhttps://github.com/aptivate/ckanext-mapactionimporter\n\nThis is known to work with CKAN 2.5.2, though note there are problems when\npurging datasets with relationships. See:\n\n* https://github.com/ckan/ckan/pull/3112\n* https://github.com/ckan/ckan/issues/2186\n\n------------\nInstallation\n------------\n\nTo install ckanext-datasetversions:\n\n1. Activate your CKAN virtual environment, for example::\n\n     . /usr/lib/ckan/default/bin/activate\n\n2. Install the ckanext-datasetversions Python package into your virtual environment::\n\n     pip install ckanext-datasetversions\n\n3. Add ``datasetversions`` to the ``ckan.plugins`` setting in your CKAN\n   config file (by default the config file is located at\n   ``/etc/ckan/default/production.ini``).\n\n4. Restart CKAN. For example if you've deployed CKAN with Apache on Ubuntu::\n\n     sudo service apache2 reload\n\n\n---------------\nConfig Settings\n---------------\n\nNone\n\n\n------------------------\nDevelopment Installation\n------------------------\n\nTo install ckanext-datasetversions for development, activate your CKAN virtualenv and\ndo::\n\n    git clone https://github.com/aptivate/ckanext-datasetversions.git\n    cd ckanext-datasetversions\n    python setup.py develop\n    pip install -r dev-requirements.txt\n\n\n-----------------\nRunning the Tests\n-----------------\n\nTo run the tests, do::\n\n    nosetests --nologcapture --with-pylons=test.ini\n\nTo run the tests and produce a coverage report, first make sure you have\ncoverage installed in your virtualenv (``pip install coverage``) then run::\n\n    nosetests --nologcapture --with-pylons=test.ini --with-coverage --cover-package=ckanext.datasetversions --cover-inclusive --cover-erase --cover-tests\n\n\n-------------------------------------------\nRegistering ckanext-datasetversions on PyPI\n-------------------------------------------\n\nckanext-datasetversions should be availabe on PyPI as\nhttps://pypi.python.org/pypi/ckanext-datasetversions. If that link doesn't work, then\nyou can register the project on PyPI for the first time by following these\nsteps:\n\n1. Create a source distribution of the project::\n\n     python setup.py sdist\n\n2. Register the project::\n\n     python setup.py register\n\n3. Upload the source distribution to PyPI::\n\n     python setup.py sdist upload\n\n4. Tag the first release of the project on GitHub with the version number from\n   the ``setup.py`` file. For example if the version number in ``setup.py`` is\n   0.0.1 then do::\n\n       git tag 0.0.1\n       git push --tags\n\n\n--------------------------------------------------\nReleasing a New Version of ckanext-datasetversions\n--------------------------------------------------\n\nckanext-datasetversions is availabe on PyPI as https://pypi.python.org/pypi/ckanext-datasetversions.\nTo publish a new version to PyPI follow these steps:\n\n1. Update the version number in the ``setup.py`` file.\n   See `PEP 440 <http://legacy.python.org/dev/peps/pep-0440/#public-version-identifiers>`_\n   for how to choose version numbers.\n\n2. Create a source distribution of the new version::\n\n     python setup.py sdist\n\n3. Upload the source distribution to PyPI::\n\n     python setup.py sdist upload\n\n4. Tag the new release of the project on GitHub with the version number from\n   the ``setup.py`` file. For example if the version number in ``setup.py`` is\n   0.0.2 then do::\n\n       git tag 0.0.2\n       git push --tags", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aptivate/ckanext-datasetversions", "keywords": "CKAN dataset versions", "license": "AGPL", "maintainer": null, "maintainer_email": null, "name": "ckanext-datasetversions", "package_url": "https://pypi.org/project/ckanext-datasetversions/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ckanext-datasetversions/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/aptivate/ckanext-datasetversions"}, "release_url": "https://pypi.org/project/ckanext-datasetversions/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "CKAN extension to support different versions of a dataset", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This CKAN extension adds support for different versions of a dataset. Sometimes\nis is desirable to store and display together different versions of a dataset,\nfor example a daily situation report-style map during a humanitarian crisis.</p>\n<p>This plugin provides an action <tt>dataset_version_create</tt>, for example:</p>\n<pre>toolkit.get_action('dataset_version_create')(\n    context, {\n        'id': dataset['id'],\n        'base_name': base_name,\n        'owner_org': owner_org\n    }\n)\n</pre>\n<p>The plugin models dataset versions internally by creating a parent dataset, with\nminimal metadata and no resources. A child dataset is created for each version.</p>\n<p><tt>dataset_version_create</tt> will create a parent-child relationship between the\ndataset specified by <tt>base_name</tt> and that specified by <tt>id</tt>. If the dataset\nspecified by <tt>base_name</tt> does not exist, it will be created.</p>\n<p>Note that this plugin overrides CKAN\u2019s <tt>package_show</tt> action. The original\n<tt>package_show</tt> is made available as <tt>ckan_package_show</tt>.</p>\n<p>For datasets with different versions, the overridden <tt>package_show</tt> will\nreturn:</p>\n<ul>\n<li>The latest, public, active version of the dataset if the parent name or id is specified</li>\n<li>A specific version of the dataset if the child name or id is specified</li>\n</ul>\n<p>The version ordering is determined by the integer value of <tt>version</tt> in the\ndataset metadata.</p>\n<p>In addition, <tt>package_show</tt> will return a list of the names and URLs of all\nactive versions as <tt>_versions</tt> in the dictionary.</p>\n<p>The plugin provides templates to list versions of a dataset alongside that\ncurrently viewed and to warn the user if they are looking at an old version of a\ndataset.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>This plugin will not work \u2018out of the box\u2019. You will need to write code to call\nthe <tt>dataset_version_create</tt> action. A site-specific example is available at\n<a href=\"https://github.com/aptivate/ckanext-mapactionimporter\" rel=\"nofollow\">https://github.com/aptivate/ckanext-mapactionimporter</a></p>\n<p>This is known to work with CKAN 2.5.2, though note there are problems when\npurging datasets with relationships. See:</p>\n<ul>\n<li><a href=\"https://github.com/ckan/ckan/pull/3112\" rel=\"nofollow\">https://github.com/ckan/ckan/pull/3112</a></li>\n<li><a href=\"https://github.com/ckan/ckan/issues/2186\" rel=\"nofollow\">https://github.com/ckan/ckan/issues/2186</a></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install ckanext-datasetversions:</p>\n<ol>\n<li><p>Activate your CKAN virtual environment, for example:</p>\n<pre>. /usr/lib/ckan/default/bin/activate\n</pre>\n</li>\n<li><p>Install the ckanext-datasetversions Python package into your virtual environment:</p>\n<pre>pip install ckanext-datasetversions\n</pre>\n</li>\n<li><p>Add <tt>datasetversions</tt> to the <tt>ckan.plugins</tt> setting in your CKAN\nconfig file (by default the config file is located at\n<tt>/etc/ckan/default/production.ini</tt>).</p>\n</li>\n<li><p>Restart CKAN. For example if you\u2019ve deployed CKAN with Apache on Ubuntu:</p>\n<pre>sudo service apache2 reload\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"config-settings\">\n<h2>Config Settings</h2>\n<p>None</p>\n</div>\n<div id=\"development-installation\">\n<h2>Development Installation</h2>\n<p>To install ckanext-datasetversions for development, activate your CKAN virtualenv and\ndo:</p>\n<pre>git clone https://github.com/aptivate/ckanext-datasetversions.git\ncd ckanext-datasetversions\npython setup.py develop\npip install -r dev-requirements.txt\n</pre>\n</div>\n<div id=\"running-the-tests\">\n<h2>Running the Tests</h2>\n<p>To run the tests, do:</p>\n<pre>nosetests --nologcapture --with-pylons=test.ini\n</pre>\n<p>To run the tests and produce a coverage report, first make sure you have\ncoverage installed in your virtualenv (<tt>pip install coverage</tt>) then run:</p>\n<pre>nosetests --nologcapture --with-pylons=test.ini --with-coverage --cover-package=ckanext.datasetversions --cover-inclusive --cover-erase --cover-tests\n</pre>\n</div>\n<div id=\"registering-ckanext-datasetversions-on-pypi\">\n<h2>Registering ckanext-datasetversions on PyPI</h2>\n<p>ckanext-datasetversions should be availabe on PyPI as\n<a href=\"https://pypi.python.org/pypi/ckanext-datasetversions\" rel=\"nofollow\">https://pypi.python.org/pypi/ckanext-datasetversions</a>. If that link doesn\u2019t work, then\nyou can register the project on PyPI for the first time by following these\nsteps:</p>\n<ol>\n<li><p>Create a source distribution of the project:</p>\n<pre>python setup.py sdist\n</pre>\n</li>\n<li><p>Register the project:</p>\n<pre>python setup.py register\n</pre>\n</li>\n<li><p>Upload the source distribution to PyPI:</p>\n<pre>python setup.py sdist upload\n</pre>\n</li>\n<li><p>Tag the first release of the project on GitHub with the version number from\nthe <tt>setup.py</tt> file. For example if the version number in <tt>setup.py</tt> is\n0.0.1 then do:</p>\n<pre>git tag 0.0.1\ngit push --tags\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"releasing-a-new-version-of-ckanext-datasetversions\">\n<h2>Releasing a New Version of ckanext-datasetversions</h2>\n<p>ckanext-datasetversions is availabe on PyPI as <a href=\"https://pypi.python.org/pypi/ckanext-datasetversions\" rel=\"nofollow\">https://pypi.python.org/pypi/ckanext-datasetversions</a>.\nTo publish a new version to PyPI follow these steps:</p>\n<ol>\n<li><p>Update the version number in the <tt>setup.py</tt> file.\nSee <a href=\"http://legacy.python.org/dev/peps/pep-0440/#public-version-identifiers\" rel=\"nofollow\">PEP 440</a>\nfor how to choose version numbers.</p>\n</li>\n<li><p>Create a source distribution of the new version:</p>\n<pre>python setup.py sdist\n</pre>\n</li>\n<li><p>Upload the source distribution to PyPI:</p>\n<pre>python setup.py sdist upload\n</pre>\n</li>\n<li><p>Tag the new release of the project on GitHub with the version number from\nthe <tt>setup.py</tt> file. For example if the version number in <tt>setup.py</tt> is\n0.0.2 then do:</p>\n<pre>git tag 0.0.2\ngit push --tags\n</pre>\n</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 2213942, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "6d3ba9db3f2ded35f395d1397d27287e", "sha256": "8b1ffc6be9dfa4d633b54543d7d11271e7969ec955b5fca9e5fe1bf47ea198c7"}, "downloads": -1, "filename": "ckanext-datasetversions-1.0.1.tar.gz", "has_sig": false, "md5_digest": "6d3ba9db3f2ded35f395d1397d27287e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11934, "upload_time": "2016-07-11T10:06:47", "upload_time_iso_8601": "2016-07-11T10:06:47.634142Z", "url": "https://files.pythonhosted.org/packages/21/c5/78cd6c692f3198a9d41059e26f45e142301baa0dd2a4d8068a98b27cb7aa/ckanext-datasetversions-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6d3ba9db3f2ded35f395d1397d27287e", "sha256": "8b1ffc6be9dfa4d633b54543d7d11271e7969ec955b5fca9e5fe1bf47ea198c7"}, "downloads": -1, "filename": "ckanext-datasetversions-1.0.1.tar.gz", "has_sig": false, "md5_digest": "6d3ba9db3f2ded35f395d1397d27287e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11934, "upload_time": "2016-07-11T10:06:47", "upload_time_iso_8601": "2016-07-11T10:06:47.634142Z", "url": "https://files.pythonhosted.org/packages/21/c5/78cd6c692f3198a9d41059e26f45e142301baa0dd2a4d8068a98b27cb7aa/ckanext-datasetversions-1.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:14 2020"}