{"info": {"author": "Thomas Rausch", "author_email": "thomas@rauschig.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6"], "description": "Simple Random Distribution Sampling\n===================================\n\nSRDS is mainly a wrapper around scipy's statistical functions\n([scipy.stats](https://docs.scipy.org/doc/scipy/reference/stats.html)).\nIt makes it easier to sample from parameterized distributions and provides tools that accelerate random sampling.\n\n## Examples\n\n### Truncation or rejection sampling\n\nsrds adds several classes that make it easier to utilize scipy statistical distributions.\nTo sample from a log-normal distribution with `\u03c3 = 0.25`, but truncate at `0.5` and `2`, the `BoundRejectionSampler`\nhelps:\n\n```python\nfrom srds import ParameterizedDistribution as PDist, BoundRejectionSampler\n\ndist = PDist.lognorm(0.25)\nsampler = BoundRejectionSampler(dist, 0.5, 2)\n\nx = sampler.sample(10)\n```\n\n### Fast sampling of single values\n\ncalling `dist.rvs` on a scipy statistical distribution is computationally expensive. This is problematic for code that\ndoes something like:\n\n```python\n# will be slow (calls dist.rvs 10000 times)\nfor i in range(10000):\n    x = dist.sample()\n    # ...\n``` \n\nsrds provides a `BufferedSampler` that draws a larger sample from a distribution, and subsequently returns from that\nsample.\n\n```python\nfrom srds import BufferedSampler\n\ndist = BufferedSampler(dist)\n\n# will be much faster! (calls dist.rvs only 10 times with a sample size of 1k)\nfor i in range(10000):\n    x = dist.sample()\n    # ...\n``` \n\n### Sampling from populations\n\nYou can use the `PopulationSampler` to draw from a discrete set, and also bias the sampling with weights.\n```python\nfrom srds import PopulationSampler\n\nsampler = PopulationSampler(['a', 'b', 'c'], [8, 1, 1])\nsampler.sample() # will return 'a' 8 out of 10 times on average\nsampler.sample(10) # returns a list containing items from ['a', 'b', 'c'] in random order\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://pypi.org/project/srds/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/thrau/srds", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "srds", "package_url": "https://pypi.org/project/srds/", "platform": "", "project_url": "https://pypi.org/project/srds/", "project_urls": {"Download": "https://pypi.org/project/srds/", "Homepage": "https://github.com/thrau/srds"}, "release_url": "https://pypi.org/project/srds/0.1.0/", "requires_dist": ["scipy (>=1.4.0)"], "requires_python": "", "summary": "Utilities for randomly sampling from statistical distributions", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Simple Random Distribution Sampling</h1>\n<p>SRDS is mainly a wrapper around scipy's statistical functions\n(<a href=\"https://docs.scipy.org/doc/scipy/reference/stats.html\" rel=\"nofollow\">scipy.stats</a>).\nIt makes it easier to sample from parameterized distributions and provides tools that accelerate random sampling.</p>\n<h2>Examples</h2>\n<h3>Truncation or rejection sampling</h3>\n<p>srds adds several classes that make it easier to utilize scipy statistical distributions.\nTo sample from a log-normal distribution with <code>\u03c3 = 0.25</code>, but truncate at <code>0.5</code> and <code>2</code>, the <code>BoundRejectionSampler</code>\nhelps:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">srds</span> <span class=\"kn\">import</span> <span class=\"n\">ParameterizedDistribution</span> <span class=\"k\">as</span> <span class=\"n\">PDist</span><span class=\"p\">,</span> <span class=\"n\">BoundRejectionSampler</span>\n\n<span class=\"n\">dist</span> <span class=\"o\">=</span> <span class=\"n\">PDist</span><span class=\"o\">.</span><span class=\"n\">lognorm</span><span class=\"p\">(</span><span class=\"mf\">0.25</span><span class=\"p\">)</span>\n<span class=\"n\">sampler</span> <span class=\"o\">=</span> <span class=\"n\">BoundRejectionSampler</span><span class=\"p\">(</span><span class=\"n\">dist</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">sampler</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<h3>Fast sampling of single values</h3>\n<p>calling <code>dist.rvs</code> on a scipy statistical distribution is computationally expensive. This is problematic for code that\ndoes something like:</p>\n<pre><span class=\"c1\"># will be slow (calls dist.rvs 10000 times)</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10000</span><span class=\"p\">):</span>\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">dist</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">()</span>\n    <span class=\"c1\"># ...</span>\n</pre>\n<p>srds provides a <code>BufferedSampler</code> that draws a larger sample from a distribution, and subsequently returns from that\nsample.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">srds</span> <span class=\"kn\">import</span> <span class=\"n\">BufferedSampler</span>\n\n<span class=\"n\">dist</span> <span class=\"o\">=</span> <span class=\"n\">BufferedSampler</span><span class=\"p\">(</span><span class=\"n\">dist</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># will be much faster! (calls dist.rvs only 10 times with a sample size of 1k)</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10000</span><span class=\"p\">):</span>\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">dist</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">()</span>\n    <span class=\"c1\"># ...</span>\n</pre>\n<h3>Sampling from populations</h3>\n<p>You can use the <code>PopulationSampler</code> to draw from a discrete set, and also bias the sampling with weights.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">srds</span> <span class=\"kn\">import</span> <span class=\"n\">PopulationSampler</span>\n\n<span class=\"n\">sampler</span> <span class=\"o\">=</span> <span class=\"n\">PopulationSampler</span><span class=\"p\">([</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">,</span> <span class=\"s1\">'c'</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"n\">sampler</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">()</span> <span class=\"c1\"># will return 'a' 8 out of 10 times on average</span>\n<span class=\"n\">sampler</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"c1\"># returns a list containing items from ['a', 'b', 'c'] in random order</span>\n</pre>\n\n          </div>"}, "last_serial": 6704756, "releases": {"0.0.1.dev1": [{"comment_text": "", "digests": {"md5": "9eb06ab9e8adfae71da8a96d27e4c4a7", "sha256": "16c009a59afd42eb5596529528a54f5665e43ffe29df3769d456fc455bc1e48b"}, "downloads": -1, "filename": "srds-0.0.1.dev1-py3.7.egg", "has_sig": false, "md5_digest": "9eb06ab9e8adfae71da8a96d27e4c4a7", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 13259, "upload_time": "2020-02-26T16:28:53", "upload_time_iso_8601": "2020-02-26T16:28:53.367726Z", "url": "https://files.pythonhosted.org/packages/ee/ef/558227d8b1b1085e5c82bd7c36c748cbb7724aac7d151cd6243aefd3ff96/srds-0.0.1.dev1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e3b60084a7202b5f0e3ab145960079d7", "sha256": "a30c8ea435fe22bdb173911812cf392e8631fef816005875ec5bc400deb6ce91"}, "downloads": -1, "filename": "srds-0.0.1.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "e3b60084a7202b5f0e3ab145960079d7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7572, "upload_time": "2020-02-26T16:28:50", "upload_time_iso_8601": "2020-02-26T16:28:50.594536Z", "url": "https://files.pythonhosted.org/packages/7c/12/1eba8adba14c61ebec98f83de3a4722f82ffe8a6a4a3f3b9293b1290db73/srds-0.0.1.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d13599f17ebb8dc3f7743499bb1c42a5", "sha256": "ba6ffbb83aac4b5b95100d9d1aff7292b493a4cede640041c25af4ea0bb1e419"}, "downloads": -1, "filename": "srds-0.0.1.dev1.tar.gz", "has_sig": false, "md5_digest": "d13599f17ebb8dc3f7743499bb1c42a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6059, "upload_time": "2020-02-26T16:28:54", "upload_time_iso_8601": "2020-02-26T16:28:54.978781Z", "url": "https://files.pythonhosted.org/packages/e1/e4/d6203d111b963f241052243c0a0d7ece3b3b584251b331b78464ee6a9e37/srds-0.0.1.dev1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "e10157cc8bfdf58947dfe532b9ff979f", "sha256": "587d18796867d161348298b4de288700f91cd2b51f2e286812286820654833a0"}, "downloads": -1, "filename": "srds-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e10157cc8bfdf58947dfe532b9ff979f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7514, "upload_time": "2020-02-26T16:38:34", "upload_time_iso_8601": "2020-02-26T16:38:34.179770Z", "url": "https://files.pythonhosted.org/packages/02/50/eae1e45eb34c2ebf827766518777846e7331ffbcd88534d4fb66f05201ed/srds-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f1d3b0ae46482f4e9c3435cb9c53fee", "sha256": "353301a06cc93687aea21ccd617c3787fa92e8d67e87c1fbe92667af80b43939"}, "downloads": -1, "filename": "srds-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8f1d3b0ae46482f4e9c3435cb9c53fee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6048, "upload_time": "2020-02-26T16:38:37", "upload_time_iso_8601": "2020-02-26T16:38:37.098802Z", "url": "https://files.pythonhosted.org/packages/1a/d5/4190867931a2993cb009047d2ef6dc891a49d5b903689bc36c5a54158671/srds-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e10157cc8bfdf58947dfe532b9ff979f", "sha256": "587d18796867d161348298b4de288700f91cd2b51f2e286812286820654833a0"}, "downloads": -1, "filename": "srds-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e10157cc8bfdf58947dfe532b9ff979f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7514, "upload_time": "2020-02-26T16:38:34", "upload_time_iso_8601": "2020-02-26T16:38:34.179770Z", "url": "https://files.pythonhosted.org/packages/02/50/eae1e45eb34c2ebf827766518777846e7331ffbcd88534d4fb66f05201ed/srds-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f1d3b0ae46482f4e9c3435cb9c53fee", "sha256": "353301a06cc93687aea21ccd617c3787fa92e8d67e87c1fbe92667af80b43939"}, "downloads": -1, "filename": "srds-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8f1d3b0ae46482f4e9c3435cb9c53fee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6048, "upload_time": "2020-02-26T16:38:37", "upload_time_iso_8601": "2020-02-26T16:38:37.098802Z", "url": "https://files.pythonhosted.org/packages/1a/d5/4190867931a2993cb009047d2ef6dc891a49d5b903689bc36c5a54158671/srds-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:21 2020"}