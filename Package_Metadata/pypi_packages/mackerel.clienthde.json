{"info": {"author": "Shinya Ohyanagi, Iskandar Setiadi", "author_email": "iskandarsetiadi@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "mackerel.clienthde\n==================\n.. image:: https://travis-ci.org/HDE/py-mackerel-client.svg?branch=hde-dev\n    :target: https://travis-ci.org/HDE/py-mackerel-client\n\n.. image:: https://coveralls.io/repos/github/HDE/py-mackerel-client/badge.svg?branch=hde-dev\n    :target: https://coveralls.io/github/HDE/py-mackerel-client?branch=hde-dev\n\nmackerel.clienthde is a python library to access Mackerel (https://mackerel.io/).\n\nThis project is forked from `heavenshell/py-mackerel-client <https://github.com/heavenshell/py-mackerel-client>`_, which is initially ported from `mackerel-client-ruby <https://github.com/mackerelio/mackerel-client-ruby>`_.\n\nInstall\n-------\n\n.. code:: shell\n\n  $ pip install mackerel.clienthde\n\n\nDependency\n----------\n\nmackerel.clienthde use `requests <http://docs.python-requests.org/en/latest/>`_, `simplejson <https://github.com/simplejson/simplejson>`_ and `click <http://click.pocoo.org/3/>`_.\n\nUsage\n-----\nGet hosts\n~~~~~~~~~\n\n.. code:: python\n\n  from mackerel.clienthde import Client\n\n  # Alternatively, you can set MACKEREL_APIKEY as environment variable\n  # And simply call \"client = Client()\"\n  client = Client(mackerel_api_key='<Put your API key')\n  hosts = client.get_hosts()\n\n\nGet host\n~~~~~~~~\n\n.. code:: python\n\n  from mackerel.clienthde import Client\n\n  # Alternatively, you can set MACKEREL_APIKEY as environment variable\n  # And simply call \"client = Client()\"\n  client = Client(mackerel_api_key='<Put your API key')\n  host = client.get_host('<hostId>')\n\n\nUpdate host status\n~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n  from mackerel.clienthde import Client\n\n  # Alternatively, you can set MACKEREL_APIKEY as environment variable\n  # And simply call \"client = Client()\"\n  client = Client(mackerel_api_key='<Put your API key')\n  # Poweroff.\n  self.client.update_host_status('<hostId>', 'poweroff')\n  # Standby.\n  self.client.update_host_status('<hostId>', 'standby')\n  # Working.\n  self.client.update_host_status('<hostId>', 'working')\n  # Maintenance.\n  self.client.update_host_status('<hostId>', 'maintenance')\n\nRetire host\n~~~~~~~~~~~\n\n.. code:: python\n\n  from mackerel.clienthde import Client\n\n  # Alternatively, you can set MACKEREL_APIKEY as environment variable\n  # And simply call \"client = Client()\"\n  client = Client(mackerel_api_key='<Put your API key')\n  self.client.retire_host('<hostId>')\n\n\nGet latest metrics\n~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n  from mackerel.clienthde import Client\n\n  # Alternatively, you can set MACKEREL_APIKEY as environment variable\n  # And simply call \"client = Client()\"\n  client = Client(mackerel_api_key='<Put your API key')\n  # Get hostId A's and hostId B's loadavg5, memory.free value.\n  metrics = self.client.get_latest_metrics(['<hostId A>', '<hostId B>'],\n                                           ['loadavg5', 'memory.free'])\n\n\n\nPost metrics\n~~~~~~~~~~~~\n.. code:: python\n\n  from mackerel.clienthde import Client\n\n  # Alternatively, you can set MACKEREL_APIKEY as environment variable\n  # And simply call \"client = Client()\"\n  client = Client(mackerel_api_key='<Put your API key>')\n  metrics = [\n      {\n          'hostId': '<hostId>', 'name': 'custom.metrics.loadavg',\n          'time': 1401537844, 'value': 1.4\n      },\n      {\n          'hostId': '<hostId>', 'name': 'custom.metrics.uptime',\n          'time': 1401537844, 'value': 500\n      }\n\n  ]\n  # Post `custom.metrics.loadavg` and `custom.metrics.uptime` to `hostId`.\n  client.post_metrics(metrics)\n\n\nPost service metrics\n~~~~~~~~~~~~~~~~~~~~\n.. code:: python\n\n  from mackerel.clienthde import Client\n\n  # Alternatively, you can set MACKEREL_APIKEY as environment variable\n  # And simply call \"client = Client()\"\n  client = Client(mackerel_api_key='<Put your API key>')\n  metrics = [\n      {\n          'name': 'custom.metrics.latency',\n          'time': 1401537844, 'value': 0.5\n      },\n      {\n          'name': 'custom.metrics.uptime',\n          'time': 1401537844, 'value': 500\n      }\n  ]\n  # Post 'custom.metrics.latency' and 'custom.metrics.uptime' to `service_name`.\n  self.client.post_service_metrics('service_name', metrics)\n\n\nGet monitors [NEW in this forked version]\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n.. code:: python\n\n  from mackerel.clienthde import Client\n\n  # Alternatively, you can set MACKEREL_APIKEY as environment variable\n  # And simply call \"client = Client()\"\n  client = Client(mackerel_api_key='<Put your API key')\n  monitors = client.get_monitors()  # list all Monitors\n  # Specify list of ids to search, return a dict with id as key\n  monitor_targets = client.get_monitors(ids=['1ABCDabcde1'])\n\n\nCreate monitor [NEW in this forked version]\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n.. code:: python\n\n  from mackerel.clienthde import Client\n\n  # Alternatively, you can set MACKEREL_APIKEY as environment variable\n  # And simply call \"client = Client()\"\n  client = Client(mackerel_api_key='<Put your API key')\n  # Create monitor as specified in https://mackerel.io/api-docs/entry/monitors#create\n  params = {\n      'type': 'service',\n      'name': 'ConsumedReadCapacityUnits.table-name',\n      'service': 'HDE',\n      'duration': 1,\n      'metric': 'ConsumedReadCapacityUnits.table-name',\n      'operator': '>',\n      'warning': 700,\n      'critical': 900\n  }\n  # Post params to Mackerel\n  # result['id'] will give Monitor id if create operation succeeded\n  result = client.create_monitor(params)\n\n\nUpdate monitor [NEW in this forked version]\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n.. code:: python\n\n  from mackerel.clienthde import Client\n\n  # Alternatively, you can set MACKEREL_APIKEY as environment variable\n  # And simply call \"client = Client()\"\n  client = Client(mackerel_api_key='<Put your API key')\n  # Since update Monitor requires all fields to be specified,\n  # it is suggested to retrieve the latest value first\n  monitor_id = '1ABCDabcde1'\n  monitors = client.get_monitors(ids=[monitor_id])\n  monitor = monitors[monitor_id]\n  # In this example, we assume Monitor is class of MonitorService\n  monitor.warning = 800\n  monitor.critical = 1000\n  # Update params to Mackerel\n  result = client.update_monitor(\n      monitor_id=monitor_id,\n      monitor_params=monitor._to_post_params_dict()\n  )\n\n\nDelete monitor [NEW in this forked version]\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n.. code:: python\n\n  from mackerel.clienthde import Client\n\n  # Alternatively, you can set MACKEREL_APIKEY as environment variable\n  # And simply call \"client = Client()\"\n  client = Client(mackerel_api_key='<Put your API key')\n  # Delete Monitor\n  result = client.delete_monitor(monitor_id='1ABCDabcde1')\n\n\nCLI\n---\n\nGet host(s) information from hostname or service, role.\n\n.. code:: shell\n\n  $ mkr.py info [--name foo] [--service service] [--role role]\n\nSet status of a host.\n\n.. code:: shell\n\n  $ mkr.py status --host-id foo --status working\n\nRetire a host.\n\n.. code:: shell\n\n  $ mkr.py retire --host-id foo\n\nGet status of a host.\n\n.. code:: shell\n\n  $ mkr.py status --host-id foo\n\nAuthentication\n--------------\n\n.. code:: shell\n\n  $ export MACKEREL_APIKEY=foobar", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/HDE/py-mackerel-client", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "mackerel.clienthde", "package_url": "https://pypi.org/project/mackerel.clienthde/", "platform": "any", "project_url": "https://pypi.org/project/mackerel.clienthde/", "project_urls": {"Homepage": "https://github.com/HDE/py-mackerel-client"}, "release_url": "https://pypi.org/project/mackerel.clienthde/0.0.6/", "requires_dist": null, "requires_python": "", "summary": "Mackerel client implemented by Python.", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/HDE/py-mackerel-client\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/HDE/py-mackerel-client.svg?branch=hde-dev\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aa7ca373958fd32e3c18030f8565dcc571aa943e/68747470733a2f2f7472617669732d63692e6f72672f4844452f70792d6d61636b6572656c2d636c69656e742e7376673f6272616e63683d6864652d646576\"></a>\n<a href=\"https://coveralls.io/github/HDE/py-mackerel-client?branch=hde-dev\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/HDE/py-mackerel-client/badge.svg?branch=hde-dev\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fd2714f9abf93c093039be715050364d71f58fd2/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4844452f70792d6d61636b6572656c2d636c69656e742f62616467652e7376673f6272616e63683d6864652d646576\"></a>\n<p>mackerel.clienthde is a python library to access Mackerel (<a href=\"https://mackerel.io/\" rel=\"nofollow\">https://mackerel.io/</a>).</p>\n<p>This project is forked from <a href=\"https://github.com/heavenshell/py-mackerel-client\" rel=\"nofollow\">heavenshell/py-mackerel-client</a>, which is initially ported from <a href=\"https://github.com/mackerelio/mackerel-client-ruby\" rel=\"nofollow\">mackerel-client-ruby</a>.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>$ pip install mackerel.clienthde\n</pre>\n</div>\n<div id=\"dependency\">\n<h2>Dependency</h2>\n<p>mackerel.clienthde use <a href=\"http://docs.python-requests.org/en/latest/\" rel=\"nofollow\">requests</a>, <a href=\"https://github.com/simplejson/simplejson\" rel=\"nofollow\">simplejson</a> and <a href=\"http://click.pocoo.org/3/\" rel=\"nofollow\">click</a>.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"get-hosts\">\n<h3>Get hosts</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mackerel.clienthde</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"c1\"># Alternatively, you can set MACKEREL_APIKEY as environment variable</span>\n<span class=\"c1\"># And simply call \"client = Client()\"</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">mackerel_api_key</span><span class=\"o\">=</span><span class=\"s1\">'&lt;Put your API key'</span><span class=\"p\">)</span>\n<span class=\"n\">hosts</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_hosts</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"get-host\">\n<h3>Get host</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mackerel.clienthde</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"c1\"># Alternatively, you can set MACKEREL_APIKEY as environment variable</span>\n<span class=\"c1\"># And simply call \"client = Client()\"</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">mackerel_api_key</span><span class=\"o\">=</span><span class=\"s1\">'&lt;Put your API key'</span><span class=\"p\">)</span>\n<span class=\"n\">host</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_host</span><span class=\"p\">(</span><span class=\"s1\">'&lt;hostId&gt;'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"update-host-status\">\n<h3>Update host status</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mackerel.clienthde</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"c1\"># Alternatively, you can set MACKEREL_APIKEY as environment variable</span>\n<span class=\"c1\"># And simply call \"client = Client()\"</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">mackerel_api_key</span><span class=\"o\">=</span><span class=\"s1\">'&lt;Put your API key'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Poweroff.</span>\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">update_host_status</span><span class=\"p\">(</span><span class=\"s1\">'&lt;hostId&gt;'</span><span class=\"p\">,</span> <span class=\"s1\">'poweroff'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Standby.</span>\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">update_host_status</span><span class=\"p\">(</span><span class=\"s1\">'&lt;hostId&gt;'</span><span class=\"p\">,</span> <span class=\"s1\">'standby'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Working.</span>\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">update_host_status</span><span class=\"p\">(</span><span class=\"s1\">'&lt;hostId&gt;'</span><span class=\"p\">,</span> <span class=\"s1\">'working'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Maintenance.</span>\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">update_host_status</span><span class=\"p\">(</span><span class=\"s1\">'&lt;hostId&gt;'</span><span class=\"p\">,</span> <span class=\"s1\">'maintenance'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"retire-host\">\n<h3>Retire host</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mackerel.clienthde</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"c1\"># Alternatively, you can set MACKEREL_APIKEY as environment variable</span>\n<span class=\"c1\"># And simply call \"client = Client()\"</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">mackerel_api_key</span><span class=\"o\">=</span><span class=\"s1\">'&lt;Put your API key'</span><span class=\"p\">)</span>\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">retire_host</span><span class=\"p\">(</span><span class=\"s1\">'&lt;hostId&gt;'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"get-latest-metrics\">\n<h3>Get latest metrics</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mackerel.clienthde</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"c1\"># Alternatively, you can set MACKEREL_APIKEY as environment variable</span>\n<span class=\"c1\"># And simply call \"client = Client()\"</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">mackerel_api_key</span><span class=\"o\">=</span><span class=\"s1\">'&lt;Put your API key'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Get hostId A's and hostId B's loadavg5, memory.free value.</span>\n<span class=\"n\">metrics</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_latest_metrics</span><span class=\"p\">([</span><span class=\"s1\">'&lt;hostId A&gt;'</span><span class=\"p\">,</span> <span class=\"s1\">'&lt;hostId B&gt;'</span><span class=\"p\">],</span>\n                                         <span class=\"p\">[</span><span class=\"s1\">'loadavg5'</span><span class=\"p\">,</span> <span class=\"s1\">'memory.free'</span><span class=\"p\">])</span>\n</pre>\n</div>\n<div id=\"post-metrics\">\n<h3>Post metrics</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mackerel.clienthde</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"c1\"># Alternatively, you can set MACKEREL_APIKEY as environment variable</span>\n<span class=\"c1\"># And simply call \"client = Client()\"</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">mackerel_api_key</span><span class=\"o\">=</span><span class=\"s1\">'&lt;Put your API key&gt;'</span><span class=\"p\">)</span>\n<span class=\"n\">metrics</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'hostId'</span><span class=\"p\">:</span> <span class=\"s1\">'&lt;hostId&gt;'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'custom.metrics.loadavg'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'time'</span><span class=\"p\">:</span> <span class=\"mi\">1401537844</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mf\">1.4</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'hostId'</span><span class=\"p\">:</span> <span class=\"s1\">'&lt;hostId&gt;'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'custom.metrics.uptime'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'time'</span><span class=\"p\">:</span> <span class=\"mi\">1401537844</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">500</span>\n    <span class=\"p\">}</span>\n\n<span class=\"p\">]</span>\n<span class=\"c1\"># Post `custom.metrics.loadavg` and `custom.metrics.uptime` to `hostId`.</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post_metrics</span><span class=\"p\">(</span><span class=\"n\">metrics</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"post-service-metrics\">\n<h3>Post service metrics</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mackerel.clienthde</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"c1\"># Alternatively, you can set MACKEREL_APIKEY as environment variable</span>\n<span class=\"c1\"># And simply call \"client = Client()\"</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">mackerel_api_key</span><span class=\"o\">=</span><span class=\"s1\">'&lt;Put your API key&gt;'</span><span class=\"p\">)</span>\n<span class=\"n\">metrics</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'custom.metrics.latency'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'time'</span><span class=\"p\">:</span> <span class=\"mi\">1401537844</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mf\">0.5</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'custom.metrics.uptime'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'time'</span><span class=\"p\">:</span> <span class=\"mi\">1401537844</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">500</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n<span class=\"c1\"># Post 'custom.metrics.latency' and 'custom.metrics.uptime' to `service_name`.</span>\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post_service_metrics</span><span class=\"p\">(</span><span class=\"s1\">'service_name'</span><span class=\"p\">,</span> <span class=\"n\">metrics</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"get-monitors-new-in-this-forked-version\">\n<h3>Get monitors [NEW in this forked version]</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mackerel.clienthde</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"c1\"># Alternatively, you can set MACKEREL_APIKEY as environment variable</span>\n<span class=\"c1\"># And simply call \"client = Client()\"</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">mackerel_api_key</span><span class=\"o\">=</span><span class=\"s1\">'&lt;Put your API key'</span><span class=\"p\">)</span>\n<span class=\"n\">monitors</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_monitors</span><span class=\"p\">()</span>  <span class=\"c1\"># list all Monitors</span>\n<span class=\"c1\"># Specify list of ids to search, return a dict with id as key</span>\n<span class=\"n\">monitor_targets</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_monitors</span><span class=\"p\">(</span><span class=\"n\">ids</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'1ABCDabcde1'</span><span class=\"p\">])</span>\n</pre>\n</div>\n<div id=\"create-monitor-new-in-this-forked-version\">\n<h3>Create monitor [NEW in this forked version]</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mackerel.clienthde</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"c1\"># Alternatively, you can set MACKEREL_APIKEY as environment variable</span>\n<span class=\"c1\"># And simply call \"client = Client()\"</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">mackerel_api_key</span><span class=\"o\">=</span><span class=\"s1\">'&lt;Put your API key'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Create monitor as specified in https://mackerel.io/api-docs/entry/monitors#create</span>\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'service'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'ConsumedReadCapacityUnits.table-name'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'service'</span><span class=\"p\">:</span> <span class=\"s1\">'HDE'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'duration'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s1\">'metric'</span><span class=\"p\">:</span> <span class=\"s1\">'ConsumedReadCapacityUnits.table-name'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'operator'</span><span class=\"p\">:</span> <span class=\"s1\">'&gt;'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'warning'</span><span class=\"p\">:</span> <span class=\"mi\">700</span><span class=\"p\">,</span>\n    <span class=\"s1\">'critical'</span><span class=\"p\">:</span> <span class=\"mi\">900</span>\n<span class=\"p\">}</span>\n<span class=\"c1\"># Post params to Mackerel</span>\n<span class=\"c1\"># result['id'] will give Monitor id if create operation succeeded</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">create_monitor</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"update-monitor-new-in-this-forked-version\">\n<h3>Update monitor [NEW in this forked version]</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mackerel.clienthde</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"c1\"># Alternatively, you can set MACKEREL_APIKEY as environment variable</span>\n<span class=\"c1\"># And simply call \"client = Client()\"</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">mackerel_api_key</span><span class=\"o\">=</span><span class=\"s1\">'&lt;Put your API key'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Since update Monitor requires all fields to be specified,</span>\n<span class=\"c1\"># it is suggested to retrieve the latest value first</span>\n<span class=\"n\">monitor_id</span> <span class=\"o\">=</span> <span class=\"s1\">'1ABCDabcde1'</span>\n<span class=\"n\">monitors</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_monitors</span><span class=\"p\">(</span><span class=\"n\">ids</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">monitor_id</span><span class=\"p\">])</span>\n<span class=\"n\">monitor</span> <span class=\"o\">=</span> <span class=\"n\">monitors</span><span class=\"p\">[</span><span class=\"n\">monitor_id</span><span class=\"p\">]</span>\n<span class=\"c1\"># In this example, we assume Monitor is class of MonitorService</span>\n<span class=\"n\">monitor</span><span class=\"o\">.</span><span class=\"n\">warning</span> <span class=\"o\">=</span> <span class=\"mi\">800</span>\n<span class=\"n\">monitor</span><span class=\"o\">.</span><span class=\"n\">critical</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>\n<span class=\"c1\"># Update params to Mackerel</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">update_monitor</span><span class=\"p\">(</span>\n    <span class=\"n\">monitor_id</span><span class=\"o\">=</span><span class=\"n\">monitor_id</span><span class=\"p\">,</span>\n    <span class=\"n\">monitor_params</span><span class=\"o\">=</span><span class=\"n\">monitor</span><span class=\"o\">.</span><span class=\"n\">_to_post_params_dict</span><span class=\"p\">()</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"delete-monitor-new-in-this-forked-version\">\n<h3>Delete monitor [NEW in this forked version]</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mackerel.clienthde</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"c1\"># Alternatively, you can set MACKEREL_APIKEY as environment variable</span>\n<span class=\"c1\"># And simply call \"client = Client()\"</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">mackerel_api_key</span><span class=\"o\">=</span><span class=\"s1\">'&lt;Put your API key'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Delete Monitor</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">delete_monitor</span><span class=\"p\">(</span><span class=\"n\">monitor_id</span><span class=\"o\">=</span><span class=\"s1\">'1ABCDabcde1'</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"cli\">\n<h2>CLI</h2>\n<p>Get host(s) information from hostname or service, role.</p>\n<pre>$ mkr.py info <span class=\"o\">[</span>--name foo<span class=\"o\">]</span> <span class=\"o\">[</span>--service service<span class=\"o\">]</span> <span class=\"o\">[</span>--role role<span class=\"o\">]</span>\n</pre>\n<p>Set status of a host.</p>\n<pre>$ mkr.py status --host-id foo --status working\n</pre>\n<p>Retire a host.</p>\n<pre>$ mkr.py retire --host-id foo\n</pre>\n<p>Get status of a host.</p>\n<pre>$ mkr.py status --host-id foo\n</pre>\n</div>\n<div id=\"authentication\">\n<h2>Authentication</h2>\n<pre>$ <span class=\"nb\">export</span> <span class=\"nv\">MACKEREL_APIKEY</span><span class=\"o\">=</span>foobar\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6827745, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "c3d3cddec4595a0262bb9f453bb22f05", "sha256": "5c8db8fff409a3bbc56ac70d50015cf88e2cc9a5f55dbb9d7088c13dd574a316"}, "downloads": -1, "filename": "mackerel.clienthde-0.0.1-py2.7.egg", "has_sig": false, "md5_digest": "c3d3cddec4595a0262bb9f453bb22f05", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 26265, "upload_time": "2018-08-15T09:32:27", "upload_time_iso_8601": "2018-08-15T09:32:27.451669Z", "url": "https://files.pythonhosted.org/packages/e2/2e/3c4d6f68b6b501c128e7b4d7d43653d20ee969bf82ce9a373cde7fcbc640/mackerel.clienthde-0.0.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef9240a7704525c5ab49d63c5e48fb62", "sha256": "5fd15bdc4bf95ad5030d84323a1c949abac4868989ac948fb6ec31c8ff577ba4"}, "downloads": -1, "filename": "mackerel.clienthde-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ef9240a7704525c5ab49d63c5e48fb62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6096, "upload_time": "2016-07-08T07:15:18", "upload_time_iso_8601": "2016-07-08T07:15:18.587801Z", "url": "https://files.pythonhosted.org/packages/cf/99/4b6c10c0f955789ffd7112ab961570cef5a258a0022b37112ea8490e139e/mackerel.clienthde-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "098c8dd9e0a5fd4b23a04b54ccccb2ef", "sha256": "3405be22c34f209fa61775011fd3f5d8b741514e686d07ffee35868e79d8c521"}, "downloads": -1, "filename": "mackerel.clienthde-0.0.2.zip", "has_sig": false, "md5_digest": "098c8dd9e0a5fd4b23a04b54ccccb2ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13934, "upload_time": "2016-07-08T11:44:37", "upload_time_iso_8601": "2016-07-08T11:44:37.290786Z", "url": "https://files.pythonhosted.org/packages/99/c5/3cf8e840b8b9a4ce8d96cc0b067c721c37605a35563d3fe62b23d08ee787/mackerel.clienthde-0.0.2.zip", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "11e1c892a752fe45727c6670a06b839b", "sha256": "d8d4231b01b53ceca4f8f37e75600db759e2196d440510b4baf3778c81eed0ae"}, "downloads": -1, "filename": "mackerel.clienthde-0.0.3.tar.gz", "has_sig": false, "md5_digest": "11e1c892a752fe45727c6670a06b839b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9018, "upload_time": "2016-07-13T07:22:47", "upload_time_iso_8601": "2016-07-13T07:22:47.801410Z", "url": "https://files.pythonhosted.org/packages/be/d7/efcfa7a1dc446b5b716c50497b73b85adf41beeb8d0cc0ac8fd1f4009e7c/mackerel.clienthde-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "a736eec46d6370314dfc2082e8b8f51f", "sha256": "463b0c25a2c85ff4d231156e14f9588fde77a0f939ce3bb0bd21554708989ff8"}, "downloads": -1, "filename": "mackerel.clienthde-0.0.4.tar.gz", "has_sig": false, "md5_digest": "a736eec46d6370314dfc2082e8b8f51f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9187, "upload_time": "2017-11-06T02:42:31", "upload_time_iso_8601": "2017-11-06T02:42:31.511788Z", "url": "https://files.pythonhosted.org/packages/07/75/a5a9280c65113b9208171dd6408eb8f4f344fc5228d84995b4b60d963dd3/mackerel.clienthde-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "277262d5c0e9e63331e3acf397b78b90", "sha256": "1e0ef873ba49c2fffdb404e84bb401b1f1ce388f52f49a3b293e044458ea680f"}, "downloads": -1, "filename": "mackerel.clienthde-0.0.5.tar.gz", "has_sig": false, "md5_digest": "277262d5c0e9e63331e3acf397b78b90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10070, "upload_time": "2018-08-15T09:32:50", "upload_time_iso_8601": "2018-08-15T09:32:50.349045Z", "url": "https://files.pythonhosted.org/packages/84/a7/457ad9474f86e7bfd0a6b54ad2948dbf663c301727f39c12bcfb941fd9fa/mackerel.clienthde-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "0de8ce91326973d1c28436310b6f151d", "sha256": "fb28076a207853d0dd0e4eef5cf91cd9fcb46a6ce8496db866243994f2d045f0"}, "downloads": -1, "filename": "mackerel.clienthde-0.0.6.tar.gz", "has_sig": false, "md5_digest": "0de8ce91326973d1c28436310b6f151d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10323, "upload_time": "2018-09-03T07:54:56", "upload_time_iso_8601": "2018-09-03T07:54:56.394531Z", "url": "https://files.pythonhosted.org/packages/89/bf/3f494550cced51a10065735f5eb6e0c0018d28a897a1cce12be4238be650/mackerel.clienthde-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0de8ce91326973d1c28436310b6f151d", "sha256": "fb28076a207853d0dd0e4eef5cf91cd9fcb46a6ce8496db866243994f2d045f0"}, "downloads": -1, "filename": "mackerel.clienthde-0.0.6.tar.gz", "has_sig": false, "md5_digest": "0de8ce91326973d1c28436310b6f151d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10323, "upload_time": "2018-09-03T07:54:56", "upload_time_iso_8601": "2018-09-03T07:54:56.394531Z", "url": "https://files.pythonhosted.org/packages/89/bf/3f494550cced51a10065735f5eb6e0c0018d28a897a1cce12be4238be650/mackerel.clienthde-0.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:19 2020"}