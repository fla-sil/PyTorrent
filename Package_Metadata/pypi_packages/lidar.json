{"info": {"author": "Qiusheng Wu", "author_email": "giswqs@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "=====\nlidar\n=====\n\n.. image:: https://mybinder.org/badge_logo.svg \n        :target: https://gishub.org/lidar-cloud\n\n.. image:: https://binder.pangeo.io/badge.svg \n        :target: https://binder.pangeo.io/v2/gh/giswqs/lidar/master?filepath=examples%2Flidar.ipynb\n\n.. image:: https://img.shields.io/pypi/v/lidar.svg\n        :target: https://pypi.python.org/pypi/lidar\n\n.. image:: https://pepy.tech/badge/lidar\n        :target: https://pepy.tech/project/lidar\n\n.. image:: https://img.shields.io/travis/giswqs/lidar.svg\n        :target: https://travis-ci.org/giswqs/lidar\n\n.. image:: https://readthedocs.org/projects/lidar/badge/?version=latest\n        :target: https://lidar.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n.. image:: https://img.shields.io/badge/License-MIT-yellow.svg\n        :target: https://opensource.org/licenses/MIT\n\n.. image:: https://img.shields.io/badge/Donate-Buy%20me%20a%20coffee-yellowgreen.svg\n        :target: https://www.buymeacoffee.com/giswqs\n\n\nAuthor: Qiusheng Wu (https://wetlands.io)\n\n\n**lidar** is a toolset for terrain and hydrological analysis using digital elevation models (DEMs). It is particularly useful for analyzing high-resolution topographic data, such as DEMs derived from Light Detection and Ranging (LiDAR) data.\n\n\n* GitHub repo: https://github.com/giswqs/lidar\n* Documentation: https://lidar.readthedocs.io.\n* PyPI: https://pypi.org/project/lidar/\n* Binder: https://gishub.org/lidar-cloud\n* Free software: `MIT license`_\n\n.. _`MIT license`: https://en.wikipedia.org/wiki/MIT_License\n\n\n**Contents**\n\n- `Features`_\n- `Installation`_\n- `Tutorials`_\n- `lidar GUI`_\n- `Dependencies`_\n- `Examples`_\n- `References`_\n- `Reporting Bugs`_\n- `Credits`_\n\n\nFeatures\n--------\n\n* Smoothing DEMs using mean, median, and Gaussian filters (see filtering.py_)\n* Extracting depressions from DEMs (see filling.py_).\n* Filtering out small artifact depressions based on user-specified minimum depression size (see filling.py_).\n* Generating refined DEMs with small depressions filled but larger depressions kept intact (see filling.py_).\n* Delineating depression nested hierarchy using the level-set method (see slicing.py_).\n* Delineating mount nested hierarchy using the level-set method (see mounts.py_).\n* Computing topological and geometric properties of depressions, including size, volume, mean depth, maximum depth, lowest elevation, spill elevation, perimeter, major axis length, minor axis length, elongatedness, eccentricity, orientation, and area-bbox-ratio (see slicing.py_).\n* Exporting depression properties as a csv file (see slicing.py_).\n\n\nInstallation\n------------\n**lidar** supports a variety of platforms, including Microsoft Windows, macOS, and Linux operating systems. Note that you will need to have **Python 3.x** installed. Python 2.x is not supported. The **lidar** Python package can be installed using the following command. If you encounter any errors, please check the Dependencies_ section below. The instruction below assumes that you have installed Anaconda_. Open **Anaconda Prompt** and enter the following commands to create a conda environment and install required packages.\n\n.. code:: python\n\n  conda create -n py37 python=3.7\n  conda activate py37\n  conda install -c conda-forge gdal \n  pip install lidar\n\n\nIf you have installed **lidar** before and want to upgrade to the latest version, you can use the following command:\n\n.. code:: python\n\n  pip install lidar -U\n\n\n\nTutorials\n---------\n\nLaunch the interactive notebook tutorial for the **lidar** Python package with **mybinder.org** or **binder.pangeo.io** now:\n\n.. image:: https://mybinder.org/badge_logo.svg \n        :target: https://gishub.org/lidar-cloud\n\n.. image:: https://binder.pangeo.io/badge.svg \n        :target: https://binder.pangeo.io/v2/gh/giswqs/lidar/master?filepath=examples%2Flidar.ipynb\n\n\nA Quick Example\n===============\n\n.. code:: python\n\n  import os\n  import pkg_resources\n  from lidar import *\n\n  # identify the sample data directory of the package\n  package_name = 'lidar'\n  data_dir = pkg_resources.resource_filename(package_name, 'data/')\n\n  # use the sample dem. Change it to your own dem if needed\n  in_dem = os.path.join(data_dir, 'dem.tif')\n  # set output directory. By default, use the temp directory under user's home directory\n  out_dir = os.path.join(os.path.expanduser(\"~\"), \"temp\")\n\n  # parameters for identifying sinks and delineating nested depressions\n  min_size = 1000      # minimum number of pixels as a depression\n  min_depth = 0.5      # minimum depth as a depression\n  interval = 0.3       # slicing interval for the level-set method\n  bool_shp = True     # output shapefiles for each individual level\n\n  # extracting sinks based on user-defined minimum depression size\n  out_dem = os.path.join(out_dir, \"median.tif\")\n  in_dem = MedianFilter(in_dem, kernel_size=3, out_file=out_dem)\n  sink_path = ExtractSinks(in_dem, min_size, out_dir)\n  dep_id_path, dep_level_path = DelineateDepressions(sink_path, min_size, min_depth, interval, out_dir, bool_shp)\n\n  print('Results are saved in: {}'.format(out_dir))\n\n\nCheck the example.py_ for more details.\n\n\nAn Interactive Jupyter Notebook Tutorial\n========================================\n\nThis tutorial can be accessed in three ways:\n\n- HTML version: https://gishub.org/lidar-html\n- Viewable Notebook: https://gishub.org/lidar-notebook\n- Interactive Notebook: https://gishub.org/lidar-cloud\n\nLaunch this tutorial as an interactive Jupyter Notebook on the cloud - https://gishub.org/lidar-cloud.\n\n.. image:: https://i.imgur.com/aIttPVG.gif\n\n\nlidar GUI\n---------\n\n**lidar** also provides a Graphical User Interface (GUI), which can be invoked using the following Python script:\n\n.. code:: python\n\n  import lidar\n  lidar.gui()\n\n\n.. image:: https://i.imgur.com/eSjcSs9.png\n\n\nDependencies\n------------\n\nlidar's Python dependencies are listed in its requirements.txt file. In addition, lidar has a C library dependency: GDAL >=1.11.2. How to install GDAL in different operating systems will be explained below. More informaton about GDAL can be found here_.\n\nIt is highly recommended that you use a Python virtual environment (e.g., conda) to test the lidar package. Please follow the `conda user guide`_ to install conda if necessary. Once you have conda installed, you can use Terminal or an Anaconda Prompt to create a Python virtual environment. Check `managing Python environment`_ for more information.\n\n.. _here: https://trac.osgeo.org/gdal/wiki/DownloadingGdalBinaries\n.. _`conda user guide`: https://conda.io/docs/user-guide/install/index.html\n.. _`managing Python environment`: https://conda.io/docs/user-guide/tasks/manage-environments.html\n\nOnce GDAL has been installed, you can then proceed to install the **lidar** Python package using the following command:\n\n.. code:: python\n\n  conda create -n py37 python=3.7\n  conda activate py37\n  conda install -c conda-forge gdal \n  pip install lidar\n\n\nLinux\n=====\n\nDebian-based Linux\n^^^^^^^^^^^^^^^^^^\n\nThe following commands can be used to install GDAL for Debian-based Linux distributions (e.g., Ubuntu, Linux Mint).\n\n.. code:: python\n\n  sudo add-apt-repository ppa:ubuntugis/ppa\n  sudo apt-get update\n  sudo apt-get install gdal-bin libgdal-dev\n  pip install lidar\n\n\nIf you encounter any compiling errors, try the following commands. \n\n.. code:: python\n\n  sudo apt-get install --reinstall build-essential\n  sudo apt-get install python3-dev\n  pip install wheel\n\n\nPacman-based Linux\n^^^^^^^^^^^^^^^^^^\n\nThe following commands can be used to install GDAL for Pacman-based Linux distributions (e.g., Arch Linux, Manjaro). You might need to use **sudo** if you encounter permission errors.\n\n.. code:: python\n\n  sudo pacman -S yaourt --noconfirm\n  yaourt -S gdal --noconfirm\n  yaourt -S python-gdal --noconfirm\n  pip install lidar\n\n\nMacOS X\n=======\nFor a Homebrew based Python environment, do the following.\n\n.. code:: python\n\n  brew update\n  brew install gdal\n\nAlternatively, you can install GDAL binaries from kyngchaos_. You will then need to add the installed location ``/Library/Frameworks/GDAL.framework/Programs`` to your system path.\n\n.. _kyngchaos: http://www.kyngchaos.com/software/frameworks#gdal_complete\n\n\nWindows\n=======\n\nThe instruction below assumes that you have installed Anaconda_. Open **Anaconda Prompt** and enter the following commands to create a conda environment and install required packages\n\n.. code:: python\n\n  conda create -n py37 python=3.7\n  conda activate py37\n  conda install -c conda-forge gdal \n  pip install richdem\n  pip install lidar\n\nWhen installing the **richdem** package, if you encounter an error saying 'Microsoft Visual C++ 14.0 is required', please follow the steps below to fix the error and reinstall **richdem**. More infomration can be found at this link `Fix Python 3 on Windows error - Microsoft Visual C++ 14.0 is required`_.  \n\n* Download `Microsoft Build Tools for Visual Studio 2017`_\n* Double click to install the downloaded installer - **Microsoft Build Tools for Visual Studio 2017**.\n* Open **Microsoft Build Tools for Visual Studio 2017**\n* Select **Workloads --> Visual C++ build tools** and click the install button\n\n.. _Anaconda: https://www.anaconda.com/download\n.. _`Fix Python 3 on Windows error - Microsoft Visual C++ 14.0 is required`: https://www.scivision.co/python-windows-visual-c++-14-required/\n.. _`Microsoft Build Tools for Visual Studio 2017`: https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=BuildTools&rel=15\n\n\nExamples\n--------\n\nThe images below show working examples of the level set method for delineating nested depressions in the Cottonwood Lake Study Area (CLSA), North Dakota. More test datasets (e.g., the Pipestem watershed in the Prairie Pothole Region of North Dakota) can be downloaded from http://gishub.org/2018-JAWRA-Data\n\nThe following example was conducted on a 64-bit Linux machine with a quad-core Intel i7-7700 CPU and 16 GB RAM. The average running time of the algorithm for this DEM was 0.75 seconds.\n\n.. image:: https://wetlands.io/file/images/CLSA_DEM.jpg\n.. image:: https://wetlands.io/file/images/CLSA_Result.jpg\n.. image:: https://wetlands.io/file/images/CLSA_Table.jpg\n\n\nReferences\n----------\nThe level-set algorithm in the **lidar** package has been published in the following article:\n\n* **Wu, Q.**, Lane, C.R., Wang, L., Vanderhoof, M.K., Christensen, J.R., & Liu, H. (2019). Efficient Delineation of Nested Depression Hierarchy in Digital Elevation Models for Hydrological Analysis Using Level-Set Method. *Journal of the American Water Resources Association*. DOI: `10.1111/1752-1688.12689`_ (preprint_)\n\nApplications of the level-set and contour-tree methods for feature extraction from LiDAR data:\n\n* **Wu, Q.**, & Lane, C.R. (2017). Delineating wetland catchments and modeling hydrologic connectivity using LiDAR data and aerial imagery. *Hydrology and Earth System Sciences*. 21: 3579-3595. DOI: `10.5194/hess-21-3579-2017`_\n* **Wu, Q.**, Deng, C., & Chen, Z. (2016). Automated delineation of karst sinkholes from LiDAR-derived digital elevation models. *Geomorphology*. 266: 1-10. DOI: `10.1016/j.geomorph.2016.05.006`_\n* **Wu, Q.**, Su, H., Sherman, D.J., Liu, H., Wozencraft, J.M., Yu, B., & Chen, Z. (2016). A graph-based approach for assessing storm-induced coastal changes. *International Journal of Remote Sensing*. 37:4854-4873. DOI: `10.1080/01431161.2016.1225180`_\n* **Wu, Q.**, & Lane, C.R. (2016). Delineation and quantification of wetland depressions in the Prairie Pothole Region of North Dakota. *Wetlands*. 36(2):215\u2013227. DOI: `10.1007/s13157-015-0731-6`_\n* **Wu, Q.**, Liu, H., Wang, S., Yu, B., Beck, R., & Hinkel, K. (2015). A localized contour tree method for deriving geometric and topological properties of complex surface depressions based on high-resolution topographic data. *International Journal of Geographical Information Science*. 29(12): 2041-2060. DOI: `10.1080/13658816.2015.1038719`_\n* **Wu, Q.**, Lane, C.R., & Liu, H. (2014). An effective method for detecting potential woodland vernal pools using high-resolution LiDAR data and aerial imagery. *Remote Sensing*. 6(11):11444-11467.  DOI: `10.3390/rs61111444`_\n\n\nReporting Bugs\n--------------\nReport bugs at https://github.com/giswqs/lidar/issues.\n\nIf you are reporting a bug, please include:\n\n* Your operating system name and version.\n* Any details about your local setup that might be helpful in troubleshooting.\n* Detailed steps to reproduce the bug.\n\n\nCredits\n-------\n* The algorithms are built on richdem_, numpy_, scipy_, scikit-image_, and pygdal_.\n\n* This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _filtering.py: https://github.com/giswqs/lidar/blob/master/lidar/filtering.py\n.. _filling.py: https://github.com/giswqs/lidar/blob/master/lidar/filling.py\n.. _slicing.py: https://github.com/giswqs/lidar/blob/master/lidar/slicing.py\n.. _mounts.py: https://github.com/giswqs/lidar/blob/master/lidar/mounts.py\n.. _example.py: https://github.com/giswqs/lidar/blob/master/lidar/example.py\n.. _richdem: https://github.com/r-barnes/richdem\n.. _numpy: http://www.numpy.org/\n.. _scipy: https://www.scipy.org/\n.. _scikit-image: http://scikit-image.org/\n.. _pygdal: https://github.com/nextgis/pygdal\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n.. _`10.5194/hess-21-3579-2017`: https://doi.org/10.5194/hess-21-3579-2017\n.. _`10.1016/j.geomorph.2016.05.006`: http://dx.doi.org/10.1016/j.geomorph.2016.05.006\n.. _`10.1007/s13157-015-0731-6`: http://dx.doi.org/10.1007/s13157-015-0731-6\n.. _`10.1080/13658816.2015.1038719`: http://dx.doi.org/10.1080/13658816.2015.1038719\n.. _`10.1080/01431161.2016.1225180`: http://dx.doi.org/10.1080/01431161.2016.1225180\n.. _`10.3390/rs61111444`: http://dx.doi.org/10.3390/rs61111444\n.. _preprint: https://www.preprints.org/manuscript/201808.0358/v1\n.. _`10.1111/1752-1688.12689`: https://doi.org/10.1111/1752-1688.12689\n\n\n=======\nHistory\n=======\n0.2.0 (2018-09-16)\n------------------\n\n0.1.6 (2018-05-21)\n------------------\n\n0.1.5 (2018-05-16)\n------------------\n\n0.1.3 (2018-05-15)\n------------------\n\n0.1.0 (2018-05-14)\n------------------", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/giswqs/lidar", "keywords": "lidar", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "lidar", "package_url": "https://pypi.org/project/lidar/", "platform": "", "project_url": "https://pypi.org/project/lidar/", "project_urls": {"Homepage": "https://github.com/giswqs/lidar"}, "release_url": "https://pypi.org/project/lidar/0.5.0/", "requires_dist": null, "requires_python": "", "summary": "Terrain and hydrological analysis based on LiDAR-derived digital elevation models (DEM)", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"lidar\">\n<h2>lidar</h2>\n<a href=\"https://gishub.org/lidar-cloud\" rel=\"nofollow\"><img alt=\"https://mybinder.org/badge_logo.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85e91bbb928104e4ce317951541520c6b9c170e1/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667\"></a>\n<a href=\"https://binder.pangeo.io/v2/gh/giswqs/lidar/master?filepath=examples%2Flidar.ipynb\" rel=\"nofollow\"><img alt=\"https://binder.pangeo.io/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7661ce8d8f8c12d8229228c865acf85fb860a0e6/68747470733a2f2f62696e6465722e70616e67656f2e696f2f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/lidar\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/lidar.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/509577d6b329c7bb33ae4671e804be95a58778a9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c696461722e737667\"></a>\n<a href=\"https://pepy.tech/project/lidar\" rel=\"nofollow\"><img alt=\"https://pepy.tech/badge/lidar\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/48da0f2d82fc6b4fc863ea298c97f8bc44f2ca82/68747470733a2f2f706570792e746563682f62616467652f6c69646172\"></a>\n<a href=\"https://travis-ci.org/giswqs/lidar\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/giswqs/lidar.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/02cbc2231be4c5086db0c33c7573f2e8b731957e/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6769737771732f6c696461722e737667\"></a>\n<a href=\"https://lidar.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f1e7405d1763bc15c23d6af0b99a7f34ae14b81d/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6c696461722f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/License-MIT-yellow.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a>\n<a href=\"https://www.buymeacoffee.com/giswqs\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Donate-Buy%20me%20a%20coffee-yellowgreen.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1c939ba1227996b87bb03cf029c14821eab9ad91/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f6e6174652d4275792532306d6525323061253230636f666665652d79656c6c6f77677265656e2e737667\"></a>\n<p>Author: Qiusheng Wu (<a href=\"https://wetlands.io\" rel=\"nofollow\">https://wetlands.io</a>)</p>\n<p><strong>lidar</strong> is a toolset for terrain and hydrological analysis using digital elevation models (DEMs). It is particularly useful for analyzing high-resolution topographic data, such as DEMs derived from Light Detection and Ranging (LiDAR) data.</p>\n<ul>\n<li>GitHub repo: <a href=\"https://github.com/giswqs/lidar\" rel=\"nofollow\">https://github.com/giswqs/lidar</a></li>\n<li>Documentation: <a href=\"https://lidar.readthedocs.io\" rel=\"nofollow\">https://lidar.readthedocs.io</a>.</li>\n<li>PyPI: <a href=\"https://pypi.org/project/lidar/\" rel=\"nofollow\">https://pypi.org/project/lidar/</a></li>\n<li>Binder: <a href=\"https://gishub.org/lidar-cloud\" rel=\"nofollow\">https://gishub.org/lidar-cloud</a></li>\n<li>Free software: <a href=\"https://en.wikipedia.org/wiki/MIT_License\" rel=\"nofollow\">MIT license</a></li>\n</ul>\n<p><strong>Contents</strong></p>\n<ul>\n<li><a href=\"#features\" rel=\"nofollow\">Features</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#tutorials\" rel=\"nofollow\">Tutorials</a></li>\n<li><a href=\"#lidar-gui\" rel=\"nofollow\">lidar GUI</a></li>\n<li><a href=\"#dependencies\" rel=\"nofollow\">Dependencies</a></li>\n<li><a href=\"#examples\" rel=\"nofollow\">Examples</a></li>\n<li><a href=\"#references\" rel=\"nofollow\">References</a></li>\n<li><a href=\"#reporting-bugs\" rel=\"nofollow\">Reporting Bugs</a></li>\n<li><a href=\"#credits\" rel=\"nofollow\">Credits</a></li>\n</ul>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Smoothing DEMs using mean, median, and Gaussian filters (see <a href=\"https://github.com/giswqs/lidar/blob/master/lidar/filtering.py\" rel=\"nofollow\">filtering.py</a>)</li>\n<li>Extracting depressions from DEMs (see <a href=\"https://github.com/giswqs/lidar/blob/master/lidar/filling.py\" rel=\"nofollow\">filling.py</a>).</li>\n<li>Filtering out small artifact depressions based on user-specified minimum depression size (see <a href=\"https://github.com/giswqs/lidar/blob/master/lidar/filling.py\" rel=\"nofollow\">filling.py</a>).</li>\n<li>Generating refined DEMs with small depressions filled but larger depressions kept intact (see <a href=\"https://github.com/giswqs/lidar/blob/master/lidar/filling.py\" rel=\"nofollow\">filling.py</a>).</li>\n<li>Delineating depression nested hierarchy using the level-set method (see <a href=\"https://github.com/giswqs/lidar/blob/master/lidar/slicing.py\" rel=\"nofollow\">slicing.py</a>).</li>\n<li>Delineating mount nested hierarchy using the level-set method (see <a href=\"https://github.com/giswqs/lidar/blob/master/lidar/mounts.py\" rel=\"nofollow\">mounts.py</a>).</li>\n<li>Computing topological and geometric properties of depressions, including size, volume, mean depth, maximum depth, lowest elevation, spill elevation, perimeter, major axis length, minor axis length, elongatedness, eccentricity, orientation, and area-bbox-ratio (see <a href=\"https://github.com/giswqs/lidar/blob/master/lidar/slicing.py\" rel=\"nofollow\">slicing.py</a>).</li>\n<li>Exporting depression properties as a csv file (see <a href=\"https://github.com/giswqs/lidar/blob/master/lidar/slicing.py\" rel=\"nofollow\">slicing.py</a>).</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p><strong>lidar</strong> supports a variety of platforms, including Microsoft Windows, macOS, and Linux operating systems. Note that you will need to have <strong>Python 3.x</strong> installed. Python 2.x is not supported. The <strong>lidar</strong> Python package can be installed using the following command. If you encounter any errors, please check the <a href=\"#dependencies\" rel=\"nofollow\">Dependencies</a> section below. The instruction below assumes that you have installed <a href=\"https://www.anaconda.com/download\" rel=\"nofollow\">Anaconda</a>. Open <strong>Anaconda Prompt</strong> and enter the following commands to create a conda environment and install required packages.</p>\n<pre><span class=\"n\">conda</span> <span class=\"n\">create</span> <span class=\"o\">-</span><span class=\"n\">n</span> <span class=\"n\">py37</span> <span class=\"n\">python</span><span class=\"o\">=</span><span class=\"mf\">3.7</span>\n<span class=\"n\">conda</span> <span class=\"n\">activate</span> <span class=\"n\">py37</span>\n<span class=\"n\">conda</span> <span class=\"n\">install</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"n\">conda</span><span class=\"o\">-</span><span class=\"n\">forge</span> <span class=\"n\">gdal</span>\n<span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">lidar</span>\n</pre>\n<p>If you have installed <strong>lidar</strong> before and want to upgrade to the latest version, you can use the following command:</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">lidar</span> <span class=\"o\">-</span><span class=\"n\">U</span>\n</pre>\n</div>\n<div id=\"tutorials\">\n<h3>Tutorials</h3>\n<p>Launch the interactive notebook tutorial for the <strong>lidar</strong> Python package with <strong>mybinder.org</strong> or <strong>binder.pangeo.io</strong> now:</p>\n<a href=\"https://gishub.org/lidar-cloud\" rel=\"nofollow\"><img alt=\"https://mybinder.org/badge_logo.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85e91bbb928104e4ce317951541520c6b9c170e1/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667\"></a>\n<a href=\"https://binder.pangeo.io/v2/gh/giswqs/lidar/master?filepath=examples%2Flidar.ipynb\" rel=\"nofollow\"><img alt=\"https://binder.pangeo.io/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7661ce8d8f8c12d8229228c865acf85fb860a0e6/68747470733a2f2f62696e6465722e70616e67656f2e696f2f62616467652e737667\"></a>\n<div id=\"a-quick-example\">\n<h4>A Quick Example</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pkg_resources</span>\n<span class=\"kn\">from</span> <span class=\"nn\">lidar</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"c1\"># identify the sample data directory of the package</span>\n<span class=\"n\">package_name</span> <span class=\"o\">=</span> <span class=\"s1\">'lidar'</span>\n<span class=\"n\">data_dir</span> <span class=\"o\">=</span> <span class=\"n\">pkg_resources</span><span class=\"o\">.</span><span class=\"n\">resource_filename</span><span class=\"p\">(</span><span class=\"n\">package_name</span><span class=\"p\">,</span> <span class=\"s1\">'data/'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># use the sample dem. Change it to your own dem if needed</span>\n<span class=\"n\">in_dem</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">data_dir</span><span class=\"p\">,</span> <span class=\"s1\">'dem.tif'</span><span class=\"p\">)</span>\n<span class=\"c1\"># set output directory. By default, use the temp directory under user's home directory</span>\n<span class=\"n\">out_dir</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"s2\">\"~\"</span><span class=\"p\">),</span> <span class=\"s2\">\"temp\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># parameters for identifying sinks and delineating nested depressions</span>\n<span class=\"n\">min_size</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>      <span class=\"c1\"># minimum number of pixels as a depression</span>\n<span class=\"n\">min_depth</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>      <span class=\"c1\"># minimum depth as a depression</span>\n<span class=\"n\">interval</span> <span class=\"o\">=</span> <span class=\"mf\">0.3</span>       <span class=\"c1\"># slicing interval for the level-set method</span>\n<span class=\"n\">bool_shp</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>     <span class=\"c1\"># output shapefiles for each individual level</span>\n\n<span class=\"c1\"># extracting sinks based on user-defined minimum depression size</span>\n<span class=\"n\">out_dem</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">out_dir</span><span class=\"p\">,</span> <span class=\"s2\">\"median.tif\"</span><span class=\"p\">)</span>\n<span class=\"n\">in_dem</span> <span class=\"o\">=</span> <span class=\"n\">MedianFilter</span><span class=\"p\">(</span><span class=\"n\">in_dem</span><span class=\"p\">,</span> <span class=\"n\">kernel_size</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">out_file</span><span class=\"o\">=</span><span class=\"n\">out_dem</span><span class=\"p\">)</span>\n<span class=\"n\">sink_path</span> <span class=\"o\">=</span> <span class=\"n\">ExtractSinks</span><span class=\"p\">(</span><span class=\"n\">in_dem</span><span class=\"p\">,</span> <span class=\"n\">min_size</span><span class=\"p\">,</span> <span class=\"n\">out_dir</span><span class=\"p\">)</span>\n<span class=\"n\">dep_id_path</span><span class=\"p\">,</span> <span class=\"n\">dep_level_path</span> <span class=\"o\">=</span> <span class=\"n\">DelineateDepressions</span><span class=\"p\">(</span><span class=\"n\">sink_path</span><span class=\"p\">,</span> <span class=\"n\">min_size</span><span class=\"p\">,</span> <span class=\"n\">min_depth</span><span class=\"p\">,</span> <span class=\"n\">interval</span><span class=\"p\">,</span> <span class=\"n\">out_dir</span><span class=\"p\">,</span> <span class=\"n\">bool_shp</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Results are saved in: </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">out_dir</span><span class=\"p\">))</span>\n</pre>\n<p>Check the <a href=\"https://github.com/giswqs/lidar/blob/master/lidar/example.py\" rel=\"nofollow\">example.py</a> for more details.</p>\n</div>\n<div id=\"an-interactive-jupyter-notebook-tutorial\">\n<h4>An Interactive Jupyter Notebook Tutorial</h4>\n<p>This tutorial can be accessed in three ways:</p>\n<ul>\n<li>HTML version: <a href=\"https://gishub.org/lidar-html\" rel=\"nofollow\">https://gishub.org/lidar-html</a></li>\n<li>Viewable Notebook: <a href=\"https://gishub.org/lidar-notebook\" rel=\"nofollow\">https://gishub.org/lidar-notebook</a></li>\n<li>Interactive Notebook: <a href=\"https://gishub.org/lidar-cloud\" rel=\"nofollow\">https://gishub.org/lidar-cloud</a></li>\n</ul>\n<p>Launch this tutorial as an interactive Jupyter Notebook on the cloud - <a href=\"https://gishub.org/lidar-cloud\" rel=\"nofollow\">https://gishub.org/lidar-cloud</a>.</p>\n<img alt=\"https://i.imgur.com/aIttPVG.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7349a134761a50560c9879a21a2ea3688946d9eb/68747470733a2f2f692e696d6775722e636f6d2f614974745056472e676966\">\n</div>\n</div>\n<div id=\"lidar-gui\">\n<h3>lidar GUI</h3>\n<p><strong>lidar</strong> also provides a Graphical User Interface (GUI), which can be invoked using the following Python script:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">lidar</span>\n<span class=\"n\">lidar</span><span class=\"o\">.</span><span class=\"n\">gui</span><span class=\"p\">()</span>\n</pre>\n<img alt=\"https://i.imgur.com/eSjcSs9.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f9a1a0a0c05229fcf878dcbbb1cf41a59d0bbc72/68747470733a2f2f692e696d6775722e636f6d2f65536a635373392e706e67\">\n</div>\n<div id=\"dependencies\">\n<h3>Dependencies</h3>\n<p>lidar\u2019s Python dependencies are listed in its requirements.txt file. In addition, lidar has a C library dependency: GDAL &gt;=1.11.2. How to install GDAL in different operating systems will be explained below. More informaton about GDAL can be found <a href=\"https://trac.osgeo.org/gdal/wiki/DownloadingGdalBinaries\" rel=\"nofollow\">here</a>.</p>\n<p>It is highly recommended that you use a Python virtual environment (e.g., conda) to test the lidar package. Please follow the <a href=\"https://conda.io/docs/user-guide/install/index.html\" rel=\"nofollow\">conda user guide</a> to install conda if necessary. Once you have conda installed, you can use Terminal or an Anaconda Prompt to create a Python virtual environment. Check <a href=\"https://conda.io/docs/user-guide/tasks/manage-environments.html\" rel=\"nofollow\">managing Python environment</a> for more information.</p>\n<p>Once GDAL has been installed, you can then proceed to install the <strong>lidar</strong> Python package using the following command:</p>\n<pre><span class=\"n\">conda</span> <span class=\"n\">create</span> <span class=\"o\">-</span><span class=\"n\">n</span> <span class=\"n\">py37</span> <span class=\"n\">python</span><span class=\"o\">=</span><span class=\"mf\">3.7</span>\n<span class=\"n\">conda</span> <span class=\"n\">activate</span> <span class=\"n\">py37</span>\n<span class=\"n\">conda</span> <span class=\"n\">install</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"n\">conda</span><span class=\"o\">-</span><span class=\"n\">forge</span> <span class=\"n\">gdal</span>\n<span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">lidar</span>\n</pre>\n<div id=\"linux\">\n<h4>Linux</h4>\n<div id=\"debian-based-linux\">\n<h5>Debian-based Linux</h5>\n<p>The following commands can be used to install GDAL for Debian-based Linux distributions (e.g., Ubuntu, Linux Mint).</p>\n<pre><span class=\"n\">sudo</span> <span class=\"n\">add</span><span class=\"o\">-</span><span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">repository</span> <span class=\"n\">ppa</span><span class=\"p\">:</span><span class=\"n\">ubuntugis</span><span class=\"o\">/</span><span class=\"n\">ppa</span>\n<span class=\"n\">sudo</span> <span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">get</span> <span class=\"n\">update</span>\n<span class=\"n\">sudo</span> <span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">get</span> <span class=\"n\">install</span> <span class=\"n\">gdal</span><span class=\"o\">-</span><span class=\"nb\">bin</span> <span class=\"n\">libgdal</span><span class=\"o\">-</span><span class=\"n\">dev</span>\n<span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">lidar</span>\n</pre>\n<p>If you encounter any compiling errors, try the following commands.</p>\n<pre><span class=\"n\">sudo</span> <span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">get</span> <span class=\"n\">install</span> <span class=\"o\">--</span><span class=\"n\">reinstall</span> <span class=\"n\">build</span><span class=\"o\">-</span><span class=\"n\">essential</span>\n<span class=\"n\">sudo</span> <span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">get</span> <span class=\"n\">install</span> <span class=\"n\">python3</span><span class=\"o\">-</span><span class=\"n\">dev</span>\n<span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">wheel</span>\n</pre>\n</div>\n<div id=\"pacman-based-linux\">\n<h5>Pacman-based Linux</h5>\n<p>The following commands can be used to install GDAL for Pacman-based Linux distributions (e.g., Arch Linux, Manjaro). You might need to use <strong>sudo</strong> if you encounter permission errors.</p>\n<pre><span class=\"n\">sudo</span> <span class=\"n\">pacman</span> <span class=\"o\">-</span><span class=\"n\">S</span> <span class=\"n\">yaourt</span> <span class=\"o\">--</span><span class=\"n\">noconfirm</span>\n<span class=\"n\">yaourt</span> <span class=\"o\">-</span><span class=\"n\">S</span> <span class=\"n\">gdal</span> <span class=\"o\">--</span><span class=\"n\">noconfirm</span>\n<span class=\"n\">yaourt</span> <span class=\"o\">-</span><span class=\"n\">S</span> <span class=\"n\">python</span><span class=\"o\">-</span><span class=\"n\">gdal</span> <span class=\"o\">--</span><span class=\"n\">noconfirm</span>\n<span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">lidar</span>\n</pre>\n</div>\n</div>\n<div id=\"macos-x\">\n<h4>MacOS X</h4>\n<p>For a Homebrew based Python environment, do the following.</p>\n<pre><span class=\"n\">brew</span> <span class=\"n\">update</span>\n<span class=\"n\">brew</span> <span class=\"n\">install</span> <span class=\"n\">gdal</span>\n</pre>\n<p>Alternatively, you can install GDAL binaries from <a href=\"http://www.kyngchaos.com/software/frameworks#gdal_complete\" rel=\"nofollow\">kyngchaos</a>. You will then need to add the installed location <tt>/Library/Frameworks/GDAL.framework/Programs</tt> to your system path.</p>\n</div>\n<div id=\"windows\">\n<h4>Windows</h4>\n<p>The instruction below assumes that you have installed <a href=\"https://www.anaconda.com/download\" rel=\"nofollow\">Anaconda</a>. Open <strong>Anaconda Prompt</strong> and enter the following commands to create a conda environment and install required packages</p>\n<pre><span class=\"n\">conda</span> <span class=\"n\">create</span> <span class=\"o\">-</span><span class=\"n\">n</span> <span class=\"n\">py37</span> <span class=\"n\">python</span><span class=\"o\">=</span><span class=\"mf\">3.7</span>\n<span class=\"n\">conda</span> <span class=\"n\">activate</span> <span class=\"n\">py37</span>\n<span class=\"n\">conda</span> <span class=\"n\">install</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"n\">conda</span><span class=\"o\">-</span><span class=\"n\">forge</span> <span class=\"n\">gdal</span>\n<span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">richdem</span>\n<span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">lidar</span>\n</pre>\n<p>When installing the <strong>richdem</strong> package, if you encounter an error saying \u2018Microsoft Visual C++ 14.0 is required\u2019, please follow the steps below to fix the error and reinstall <strong>richdem</strong>. More infomration can be found at this link <a href=\"https://www.scivision.co/python-windows-visual-c++-14-required/\" rel=\"nofollow\">Fix Python 3 on Windows error - Microsoft Visual C++ 14.0 is required</a>.</p>\n<ul>\n<li>Download <a href=\"https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=BuildTools&amp;rel=15\" rel=\"nofollow\">Microsoft Build Tools for Visual Studio 2017</a></li>\n<li>Double click to install the downloaded installer - <strong>Microsoft Build Tools for Visual Studio 2017</strong>.</li>\n<li>Open <strong>Microsoft Build Tools for Visual Studio 2017</strong></li>\n<li>Select <strong>Workloads \u2013&gt; Visual C++ build tools</strong> and click the install button</li>\n</ul>\n</div>\n</div>\n<div id=\"examples\">\n<h3>Examples</h3>\n<p>The images below show working examples of the level set method for delineating nested depressions in the Cottonwood Lake Study Area (CLSA), North Dakota. More test datasets (e.g., the Pipestem watershed in the Prairie Pothole Region of North Dakota) can be downloaded from <a href=\"http://gishub.org/2018-JAWRA-Data\" rel=\"nofollow\">http://gishub.org/2018-JAWRA-Data</a></p>\n<p>The following example was conducted on a 64-bit Linux machine with a quad-core Intel i7-7700 CPU and 16 GB RAM. The average running time of the algorithm for this DEM was 0.75 seconds.</p>\n<img alt=\"https://wetlands.io/file/images/CLSA_DEM.jpg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cb5c5b9223d073b0c4c2a5fdfca90a1c80f8ada2/68747470733a2f2f7765746c616e64732e696f2f66696c652f696d616765732f434c53415f44454d2e6a7067\">\n<img alt=\"https://wetlands.io/file/images/CLSA_Result.jpg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/43e6eb1efc57b3501a9999120278acfff4ab7b91/68747470733a2f2f7765746c616e64732e696f2f66696c652f696d616765732f434c53415f526573756c742e6a7067\">\n<img alt=\"https://wetlands.io/file/images/CLSA_Table.jpg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dac42b1a2c88da5d1d45a8a5f66987b3e37b567e/68747470733a2f2f7765746c616e64732e696f2f66696c652f696d616765732f434c53415f5461626c652e6a7067\">\n</div>\n<div id=\"references\">\n<h3>References</h3>\n<p>The level-set algorithm in the <strong>lidar</strong> package has been published in the following article:</p>\n<ul>\n<li><strong>Wu, Q.</strong>, Lane, C.R., Wang, L., Vanderhoof, M.K., Christensen, J.R., &amp; Liu, H. (2019). Efficient Delineation of Nested Depression Hierarchy in Digital Elevation Models for Hydrological Analysis Using Level-Set Method. <em>Journal of the American Water Resources Association</em>. DOI: <a href=\"https://doi.org/10.1111/1752-1688.12689\" rel=\"nofollow\">10.1111/1752-1688.12689</a> (<a href=\"https://www.preprints.org/manuscript/201808.0358/v1\" rel=\"nofollow\">preprint</a>)</li>\n</ul>\n<p>Applications of the level-set and contour-tree methods for feature extraction from LiDAR data:</p>\n<ul>\n<li><strong>Wu, Q.</strong>, &amp; Lane, C.R. (2017). Delineating wetland catchments and modeling hydrologic connectivity using LiDAR data and aerial imagery. <em>Hydrology and Earth System Sciences</em>. 21: 3579-3595. DOI: <a href=\"https://doi.org/10.5194/hess-21-3579-2017\" rel=\"nofollow\">10.5194/hess-21-3579-2017</a></li>\n<li><strong>Wu, Q.</strong>, Deng, C., &amp; Chen, Z. (2016). Automated delineation of karst sinkholes from LiDAR-derived digital elevation models. <em>Geomorphology</em>. 266: 1-10. DOI: <a href=\"http://dx.doi.org/10.1016/j.geomorph.2016.05.006\" rel=\"nofollow\">10.1016/j.geomorph.2016.05.006</a></li>\n<li><strong>Wu, Q.</strong>, Su, H., Sherman, D.J., Liu, H., Wozencraft, J.M., Yu, B., &amp; Chen, Z. (2016). A graph-based approach for assessing storm-induced coastal changes. <em>International Journal of Remote Sensing</em>. 37:4854-4873. DOI: <a href=\"http://dx.doi.org/10.1080/01431161.2016.1225180\" rel=\"nofollow\">10.1080/01431161.2016.1225180</a></li>\n<li><strong>Wu, Q.</strong>, &amp; Lane, C.R. (2016). Delineation and quantification of wetland depressions in the Prairie Pothole Region of North Dakota. <em>Wetlands</em>. 36(2):215\u2013227. DOI: <a href=\"http://dx.doi.org/10.1007/s13157-015-0731-6\" rel=\"nofollow\">10.1007/s13157-015-0731-6</a></li>\n<li><strong>Wu, Q.</strong>, Liu, H., Wang, S., Yu, B., Beck, R., &amp; Hinkel, K. (2015). A localized contour tree method for deriving geometric and topological properties of complex surface depressions based on high-resolution topographic data. <em>International Journal of Geographical Information Science</em>. 29(12): 2041-2060. DOI: <a href=\"http://dx.doi.org/10.1080/13658816.2015.1038719\" rel=\"nofollow\">10.1080/13658816.2015.1038719</a></li>\n<li><strong>Wu, Q.</strong>, Lane, C.R., &amp; Liu, H. (2014). An effective method for detecting potential woodland vernal pools using high-resolution LiDAR data and aerial imagery. <em>Remote Sensing</em>. 6(11):11444-11467.  DOI: <a href=\"http://dx.doi.org/10.3390/rs61111444\" rel=\"nofollow\">10.3390/rs61111444</a></li>\n</ul>\n</div>\n<div id=\"reporting-bugs\">\n<h3>Reporting Bugs</h3>\n<p>Report bugs at <a href=\"https://github.com/giswqs/lidar/issues\" rel=\"nofollow\">https://github.com/giswqs/lidar/issues</a>.</p>\n<p>If you are reporting a bug, please include:</p>\n<ul>\n<li>Your operating system name and version.</li>\n<li>Any details about your local setup that might be helpful in troubleshooting.</li>\n<li>Detailed steps to reproduce the bug.</li>\n</ul>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<ul>\n<li>The algorithms are built on <a href=\"https://github.com/r-barnes/richdem\" rel=\"nofollow\">richdem</a>, <a href=\"http://www.numpy.org/\" rel=\"nofollow\">numpy</a>, <a href=\"https://www.scipy.org/\" rel=\"nofollow\">scipy</a>, <a href=\"http://scikit-image.org/\" rel=\"nofollow\">scikit-image</a>, and <a href=\"https://github.com/nextgis/pygdal\" rel=\"nofollow\">pygdal</a>.</li>\n<li>This package was created with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> and the <a href=\"https://github.com/audreyr/cookiecutter-pypackage\" rel=\"nofollow\">audreyr/cookiecutter-pypackage</a> project template.</li>\n</ul>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id4\">\n<h3>0.2.0 (2018-09-16)</h3>\n</div>\n<div id=\"id5\">\n<h3>0.1.6 (2018-05-21)</h3>\n</div>\n<div id=\"id6\">\n<h3>0.1.5 (2018-05-16)</h3>\n</div>\n<div id=\"id7\">\n<h3>0.1.3 (2018-05-15)</h3>\n</div>\n<div id=\"id8\">\n<h3>0.1.0 (2018-05-14)</h3>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6527482, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "928074e09f9e9aaa45c3d27ed0d6220b", "sha256": "09d5bbbf5230a8463955a06c884f71ecd212fad2328d15ebdbbd1f136fd21b69"}, "downloads": -1, "filename": "lidar-0.1.0.tar.gz", "has_sig": false, "md5_digest": "928074e09f9e9aaa45c3d27ed0d6220b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8343, "upload_time": "2018-05-14T16:41:03", "upload_time_iso_8601": "2018-05-14T16:41:03.521576Z", "url": "https://files.pythonhosted.org/packages/5a/08/50dbaccc17c1c0083b79e579c1684c72f1147ead4e91906227f263dd33f7/lidar-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "1e10e2bdbd2ee05db60647435ae5d264", "sha256": "1550c58a3216aa884bc48c0a4d64e191020788d018dc519f1ce13dea0a26a72b"}, "downloads": -1, "filename": "lidar-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1e10e2bdbd2ee05db60647435ae5d264", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11436, "upload_time": "2018-05-14T18:48:41", "upload_time_iso_8601": "2018-05-14T18:48:41.592061Z", "url": "https://files.pythonhosted.org/packages/d5/0b/2629f56d5941e9a2f753ad956d2c2bd3ff334bb8a965037b4d4d309d9971/lidar-0.1.1.tar.gz", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "9fecc98bba06bc9329a86834c336d314", "sha256": "60d91746a24138d9c3cfddbb2e5c59ad5debd4134bef0c48f627e1eb3093003b"}, "downloads": -1, "filename": "lidar-0.1.10.tar.gz", "has_sig": false, "md5_digest": "9fecc98bba06bc9329a86834c336d314", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1137638, "upload_time": "2018-09-15T23:43:24", "upload_time_iso_8601": "2018-09-15T23:43:24.358225Z", "url": "https://files.pythonhosted.org/packages/05/95/214f42c5a514c7bba28365b90e623a1ade3ee53e53bdf7ea1b2e1cccfe2d/lidar-0.1.10.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "c69fe73f2d2df0f044dd32c8ab6eb6d4", "sha256": "2f9075ac30579baebadc1b61eeef1c277bf75f48b707877a1aebd4b76a7b1a27"}, "downloads": -1, "filename": "lidar-0.1.11.tar.gz", "has_sig": false, "md5_digest": "c69fe73f2d2df0f044dd32c8ab6eb6d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1143268, "upload_time": "2018-09-16T18:55:38", "upload_time_iso_8601": "2018-09-16T18:55:38.041229Z", "url": "https://files.pythonhosted.org/packages/9f/d0/be80eb1e483977bf57c91088292e197ef811ed67504d21d4aaa4c15e1fcf/lidar-0.1.11.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "2de705888803e58ba256f7e6df63abd5", "sha256": "e5648335093b8565c4667a876afd19cba2fd4b66e2eb75529807f7fad321fc6a"}, "downloads": -1, "filename": "lidar-0.1.2.tar.gz", "has_sig": false, "md5_digest": "2de705888803e58ba256f7e6df63abd5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17288, "upload_time": "2018-05-14T20:57:44", "upload_time_iso_8601": "2018-05-14T20:57:44.767792Z", "url": "https://files.pythonhosted.org/packages/ed/bd/3f34312fee19ba8c3627f0ca5293f2ff26a9da1eed1d98e71219d0f46a90/lidar-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "307fe45c962031e1fa3f4cd1f864beb9", "sha256": "ea9c76b2fdd7d7cd7b819d6cb326bf5b7ebb74222f38d76a968cbe8474829666"}, "downloads": -1, "filename": "lidar-0.1.3.tar.gz", "has_sig": false, "md5_digest": "307fe45c962031e1fa3f4cd1f864beb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 673411, "upload_time": "2018-05-15T16:41:32", "upload_time_iso_8601": "2018-05-15T16:41:32.962416Z", "url": "https://files.pythonhosted.org/packages/31/99/59ebf73eea667e951761f65490a6ab60ae81cdab158bccae6673494cad7c/lidar-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "07e90415029fb99d5d23587fb2cc38b6", "sha256": "c437710dab945fad608d607289eb1efdd307be2f386f7615ef151e91b1e88ddc"}, "downloads": -1, "filename": "lidar-0.1.4.tar.gz", "has_sig": false, "md5_digest": "07e90415029fb99d5d23587fb2cc38b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 672174, "upload_time": "2018-05-15T18:06:06", "upload_time_iso_8601": "2018-05-15T18:06:06.250436Z", "url": "https://files.pythonhosted.org/packages/ba/80/18dda0f8274a87aa6792c2ab08a0a5219611f1c57d352885ef4f4f039bbe/lidar-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "378c38f9079bfca3b316c6c75f157a86", "sha256": "866b2c1d1a066b07e4b92f4d167225d0bef4be9df262773ff02f84e7b56d094f"}, "downloads": -1, "filename": "lidar-0.1.5.tar.gz", "has_sig": false, "md5_digest": "378c38f9079bfca3b316c6c75f157a86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 675148, "upload_time": "2018-05-16T19:51:10", "upload_time_iso_8601": "2018-05-16T19:51:10.168095Z", "url": "https://files.pythonhosted.org/packages/2c/75/7351879e75aefe25ee948cd15e4fd7c0ff3036441665f61c7c8717eac232/lidar-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "89eb9491623d0fd8af198faefff36c59", "sha256": "379b0e6d5d9c49d767fef5d760a2ffb8893a5c6c3d2ff3e61046c5ebee8c7ac0"}, "downloads": -1, "filename": "lidar-0.1.6.tar.gz", "has_sig": false, "md5_digest": "89eb9491623d0fd8af198faefff36c59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 676964, "upload_time": "2018-05-21T04:01:30", "upload_time_iso_8601": "2018-05-21T04:01:30.438722Z", "url": "https://files.pythonhosted.org/packages/6b/f0/af34e4a6d0801485610cf9075e66756a99781bfda3d973ff8a8634bae35c/lidar-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "6a323f2928e773885bcaa013da519983", "sha256": "2d77080529b14bd86018b2836b334c55e937cae5d159c811df28dbff5d9dca5f"}, "downloads": -1, "filename": "lidar-0.1.7.tar.gz", "has_sig": false, "md5_digest": "6a323f2928e773885bcaa013da519983", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1136634, "upload_time": "2018-09-01T04:05:46", "upload_time_iso_8601": "2018-09-01T04:05:46.095002Z", "url": "https://files.pythonhosted.org/packages/50/b2/a8a90f65bb2b4cbfd87f8a79287198d0fc20ce0a988d68ec3930ccafd548/lidar-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "b4cae8ce3944ccee70f62993e644d184", "sha256": "27cdd5c2190bdf343d55fdcb39d97c302b7f4aaf365900bc72c712eff7607217"}, "downloads": -1, "filename": "lidar-0.1.8.tar.gz", "has_sig": false, "md5_digest": "b4cae8ce3944ccee70f62993e644d184", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1137434, "upload_time": "2018-09-01T20:35:36", "upload_time_iso_8601": "2018-09-01T20:35:36.407432Z", "url": "https://files.pythonhosted.org/packages/80/9b/de51495dae63440bc4427dba79c31eba48d3961fc65adbe7934a6c0f29bf/lidar-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "e3a9ea1859de32463edff7ec8997a2dc", "sha256": "c95d08094b5db15f43e3aaf24fb4eb8ddb7a2971a00c95fdbbc57577126782c0"}, "downloads": -1, "filename": "lidar-0.1.9.tar.gz", "has_sig": false, "md5_digest": "e3a9ea1859de32463edff7ec8997a2dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1137510, "upload_time": "2018-09-02T03:48:09", "upload_time_iso_8601": "2018-09-02T03:48:09.045155Z", "url": "https://files.pythonhosted.org/packages/f1/5c/9e44d9e13de8f6f4479c6d9bb6d0ab448bdfd8ccd46d79faf317ff62f474/lidar-0.1.9.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "aa47f08a0bac973ce44cf7ae496316ec", "sha256": "516069b572ee10622ebf3724a0b3a266aa52496a7b5bcd857c59a245fb65dfc4"}, "downloads": -1, "filename": "lidar-0.2.0.tar.gz", "has_sig": false, "md5_digest": "aa47f08a0bac973ce44cf7ae496316ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1139350, "upload_time": "2018-09-16T20:35:52", "upload_time_iso_8601": "2018-09-16T20:35:52.515541Z", "url": "https://files.pythonhosted.org/packages/b2/b2/223840175fd82cbfb73e7c8c65f0abbe44cae12afe3cdfb7df76ccfef8aa/lidar-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "7e3bf52f9f5cfe811d321ed6714e72f5", "sha256": "4299181e0c8c53d9b2aa6691fc7878ebad26d4c23e86d5adad8ebef1a728bec0"}, "downloads": -1, "filename": "lidar-0.2.1.tar.gz", "has_sig": false, "md5_digest": "7e3bf52f9f5cfe811d321ed6714e72f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1140865, "upload_time": "2018-11-04T15:58:32", "upload_time_iso_8601": "2018-11-04T15:58:32.280397Z", "url": "https://files.pythonhosted.org/packages/eb/05/c69111d98d14805b6f3db6cc5ab697b70994f420d8773cec53c717b86492/lidar-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "6bdb7a426107a25fd48d057e3a629354", "sha256": "17da2595cfe89b117b6cc78a8d197d90e999dbd9ff2b27e2969f75f2265c577b"}, "downloads": -1, "filename": "lidar-0.2.2.tar.gz", "has_sig": false, "md5_digest": "6bdb7a426107a25fd48d057e3a629354", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1141577, "upload_time": "2018-11-17T14:52:23", "upload_time_iso_8601": "2018-11-17T14:52:23.821309Z", "url": "https://files.pythonhosted.org/packages/20/cb/f82c0fc17e62e2e47a8356d98dbb23f7c7567c72782aea2efb49d805a617/lidar-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "badf6a821815e54b1d76342000ccee13", "sha256": "6486376b453ec4ce7bd14c585351410a67bc17c90e0ce7b6446b5f7c0ae9c48b"}, "downloads": -1, "filename": "lidar-0.2.3.tar.gz", "has_sig": false, "md5_digest": "badf6a821815e54b1d76342000ccee13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1141607, "upload_time": "2018-11-25T15:20:21", "upload_time_iso_8601": "2018-11-25T15:20:21.436010Z", "url": "https://files.pythonhosted.org/packages/a8/2e/1407e52a21c696faf45f5ff0936958b421ca39d4e8c554cb2edd9f695652/lidar-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "ede64f042f336ac30b11b00d51dc1a8e", "sha256": "4c1f0065e6778d3319140811501e8943a9904881afce31f8f779b90ec68128c9"}, "downloads": -1, "filename": "lidar-0.2.4.tar.gz", "has_sig": false, "md5_digest": "ede64f042f336ac30b11b00d51dc1a8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1145646, "upload_time": "2019-08-16T01:21:20", "upload_time_iso_8601": "2019-08-16T01:21:20.248725Z", "url": "https://files.pythonhosted.org/packages/a0/46/544ed45d54027157eac4088b032ab6f0192dde3856f630a912fd4a000088/lidar-0.2.4.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "6397910210af853dc26537ec1b515f91", "sha256": "94eaf9fb3acf00aa189626ac2cd486bdbe5a0eeaa94dfbc7b05e80b5e8501980"}, "downloads": -1, "filename": "lidar-0.3.0.tar.gz", "has_sig": false, "md5_digest": "6397910210af853dc26537ec1b515f91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1145681, "upload_time": "2019-10-06T17:44:41", "upload_time_iso_8601": "2019-10-06T17:44:41.614989Z", "url": "https://files.pythonhosted.org/packages/60/8b/ca88cc57de20cfed470657fc3a2b5efa1a9f06f2d2ebc11114f79a2f3551/lidar-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "2d111983c2a9aee3e5fb0488f9c98066", "sha256": "69f18a741aad795fc94f3825ab65f4edb8bb697948d2df4ccf30fe0d3770483b"}, "downloads": -1, "filename": "lidar-0.4.0.tar.gz", "has_sig": false, "md5_digest": "2d111983c2a9aee3e5fb0488f9c98066", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1145743, "upload_time": "2019-10-08T14:12:23", "upload_time_iso_8601": "2019-10-08T14:12:23.462781Z", "url": "https://files.pythonhosted.org/packages/07/b4/0e82b436f5f35326a9b0d1f0ed6acef248f8dc3352e894d3a572de0841e2/lidar-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "2671b1fba16465991445a200be1234e0", "sha256": "0f6059a915c2f20668e74e347592171c3f897be90e69aea5ccf2c8e7707e1ec3"}, "downloads": -1, "filename": "lidar-0.5.0.tar.gz", "has_sig": false, "md5_digest": "2671b1fba16465991445a200be1234e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1145855, "upload_time": "2020-01-27T17:04:56", "upload_time_iso_8601": "2020-01-27T17:04:56.754843Z", "url": "https://files.pythonhosted.org/packages/8d/18/54fc773f92ca7b2b933f234f46ba56986c7c077a1e0240adc07ad391a48b/lidar-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2671b1fba16465991445a200be1234e0", "sha256": "0f6059a915c2f20668e74e347592171c3f897be90e69aea5ccf2c8e7707e1ec3"}, "downloads": -1, "filename": "lidar-0.5.0.tar.gz", "has_sig": false, "md5_digest": "2671b1fba16465991445a200be1234e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1145855, "upload_time": "2020-01-27T17:04:56", "upload_time_iso_8601": "2020-01-27T17:04:56.754843Z", "url": "https://files.pythonhosted.org/packages/8d/18/54fc773f92ca7b2b933f234f46ba56986c7c077a1e0240adc07ad391a48b/lidar-0.5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:10 2020"}