{"info": {"author": "Mickael Gerber", "author_email": "mickaelgerberdev@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Topic :: Utilities"], "description": "# IReadiTunes\nTool to get any information about iTunes tracks and playlists quickly and easily. \n\n## Installation\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install IReadiTunes.\n\n```bash\npip install IReadiTunes\n```\n\n## Example code\n\n```python\nimport IReadiTunes as irit\n\n# First of all, init the library\nmy_lib = irit.lib_init()\n\n# Read iTunes XML file\nmy_lib.parse(r'path\\to\\file\\iTunes Music Library.xml')\n\n# Get name of playlists\nlib_list = my_lib.get_playlist_list()\n\nprint(\"iTunes playlists: \")\nfor itunes_library in lib_list:\n    print(\"\\t\" + itunes_library)  # Print name of each playlist\n\nlib_to_analyse = \"\"\nwhile lib_to_analyse not in lib_list:\n    lib_to_analyse = input(\"Enter name of library you want to analyse: \")  # Prompt the user to enter the name of the playlist to be scanned. \n\n\nplaylist_with_attributs = my_lib.get_playlist_contents(lib_to_analyse)  # Analyse choosen playlist\n\nprint(\"\\n{} playlist content:\".format(lib_to_analyse))\n\n# Print attributs of each element stored in the given playlist\nnb_of_tracks = len(playlist_with_attributs)\ntrack_ind = 0 \nfor track in playlist_with_attributs:\n    print(\"Track [{}/{}]:\".format(track_ind+1, nb_of_tracks))\n    print(\"\\ttrack_id: {}\".format(track.track_id))\n    print(\"\\tsize: {} Mb\".format(irit.get_size(track.size)))\n    print(\"\\ttotal_time: {} seconds\".format(irit.get_total_time(track.total_time)))\n    print(\"\\tdate_modified: {}\".format(track.date_modified))\n    print(\"\\tdate_added: {}\".format(track.date_added))\n    print(\"\\tbitrate: {} kbps\".format(track.bitrate))\n    print(\"\\tsample_rate: {} kHz\".format(track.sample_rate))\n    print(\"\\tplay_count: {}\".format(track.play_count))\n    print(\"\\tplay_date: {}\".format(track.play_date))\n    print(\"\\tplay_date_utc: {}\".format(track.play_date_utc))\n    print(\"\\tskip_count: {}\".format(track.skip_count))\n    print(\"\\tskip_date: {}\".format(track.skip_date))\n    print(\"\\trating: {} stars\".format(irit.get_rating(track.rating)))\n    print(\"\\talbum_rating: {} stars\".format(irit.get_rating(track.album_rating)))\n    print(\"\\tpersistent_id: {}\".format(track.persistent_id))\n    print(\"\\ttrack_type: {}\".format(track.track_type))\n    print(\"\\tfile_folder_count: {}\".format(track.file_folder_count))\n    print(\"\\tlibrary_folder_count: {}\".format(track.library_folder_count))\n    print(\"\\tname: {}\".format(track.name))\n    print(\"\\tartist: {}\".format(track.artist))\n    print(\"\\tkind: {}\".format(track.kind))\n    print(\"\\tlocation: {}\".format(irit.get_track_path(track.location)))\n    print()\n    \n    track_ind += 1\n```\n\n## Features\n\n - Fast library decoding\n - Simple, easy to understand code.\n\n\n## Contributing\n\nAll contributions are welcome. Do not hesitate to contact me in case of bugs or ideas for improvement.\n\n## License\n\n[MIT](https://choosealicense.com/licenses/mit/)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mickael2054/IReadiTunes", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "IReadiTunes", "package_url": "https://pypi.org/project/IReadiTunes/", "platform": "", "project_url": "https://pypi.org/project/IReadiTunes/", "project_urls": {"Homepage": "https://github.com/mickael2054/IReadiTunes"}, "release_url": "https://pypi.org/project/IReadiTunes/1.0.4/", "requires_dist": null, "requires_python": "", "summary": "Tool to get any information about iTunes tracks and playlists quickly and easily", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>IReadiTunes</h1>\n<p>Tool to get any information about iTunes tracks and playlists quickly and easily.</p>\n<h2>Installation</h2>\n<p>Use the package manager <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a> to install IReadiTunes.</p>\n<pre>pip install IReadiTunes\n</pre>\n<h2>Example code</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">IReadiTunes</span> <span class=\"k\">as</span> <span class=\"nn\">irit</span>\n\n<span class=\"c1\"># First of all, init the library</span>\n<span class=\"n\">my_lib</span> <span class=\"o\">=</span> <span class=\"n\">irit</span><span class=\"o\">.</span><span class=\"n\">lib_init</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Read iTunes XML file</span>\n<span class=\"n\">my_lib</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'path\\to\\file\\iTunes Music Library.xml'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get name of playlists</span>\n<span class=\"n\">lib_list</span> <span class=\"o\">=</span> <span class=\"n\">my_lib</span><span class=\"o\">.</span><span class=\"n\">get_playlist_list</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"iTunes playlists: \"</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">itunes_library</span> <span class=\"ow\">in</span> <span class=\"n\">lib_list</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">\"</span> <span class=\"o\">+</span> <span class=\"n\">itunes_library</span><span class=\"p\">)</span>  <span class=\"c1\"># Print name of each playlist</span>\n\n<span class=\"n\">lib_to_analyse</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span>\n<span class=\"k\">while</span> <span class=\"n\">lib_to_analyse</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">lib_list</span><span class=\"p\">:</span>\n    <span class=\"n\">lib_to_analyse</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s2\">\"Enter name of library you want to analyse: \"</span><span class=\"p\">)</span>  <span class=\"c1\"># Prompt the user to enter the name of the playlist to be scanned. </span>\n\n\n<span class=\"n\">playlist_with_attributs</span> <span class=\"o\">=</span> <span class=\"n\">my_lib</span><span class=\"o\">.</span><span class=\"n\">get_playlist_contents</span><span class=\"p\">(</span><span class=\"n\">lib_to_analyse</span><span class=\"p\">)</span>  <span class=\"c1\"># Analyse choosen playlist</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"si\">{}</span><span class=\"s2\"> playlist content:\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">lib_to_analyse</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Print attributs of each element stored in the given playlist</span>\n<span class=\"n\">nb_of_tracks</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">playlist_with_attributs</span><span class=\"p\">)</span>\n<span class=\"n\">track_ind</span> <span class=\"o\">=</span> <span class=\"mi\">0</span> \n<span class=\"k\">for</span> <span class=\"n\">track</span> <span class=\"ow\">in</span> <span class=\"n\">playlist_with_attributs</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Track [</span><span class=\"si\">{}</span><span class=\"s2\">/</span><span class=\"si\">{}</span><span class=\"s2\">]:\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">track_ind</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">nb_of_tracks</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">track_id: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">track_id</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">size: </span><span class=\"si\">{}</span><span class=\"s2\"> Mb\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">irit</span><span class=\"o\">.</span><span class=\"n\">get_size</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">total_time: </span><span class=\"si\">{}</span><span class=\"s2\"> seconds\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">irit</span><span class=\"o\">.</span><span class=\"n\">get_total_time</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">total_time</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">date_modified: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">date_modified</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">date_added: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">date_added</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">bitrate: </span><span class=\"si\">{}</span><span class=\"s2\"> kbps\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">bitrate</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">sample_rate: </span><span class=\"si\">{}</span><span class=\"s2\"> kHz\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">sample_rate</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">play_count: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">play_count</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">play_date: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">play_date</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">play_date_utc: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">play_date_utc</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">skip_count: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">skip_count</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">skip_date: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">skip_date</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">rating: </span><span class=\"si\">{}</span><span class=\"s2\"> stars\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">irit</span><span class=\"o\">.</span><span class=\"n\">get_rating</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">rating</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">album_rating: </span><span class=\"si\">{}</span><span class=\"s2\"> stars\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">irit</span><span class=\"o\">.</span><span class=\"n\">get_rating</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">album_rating</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">persistent_id: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">persistent_id</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">track_type: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">track_type</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">file_folder_count: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">file_folder_count</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">library_folder_count: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">library_folder_count</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">name: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">artist: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">artist</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">kind: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">kind</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">location: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">irit</span><span class=\"o\">.</span><span class=\"n\">get_track_path</span><span class=\"p\">(</span><span class=\"n\">track</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">)))</span>\n    <span class=\"nb\">print</span><span class=\"p\">()</span>\n    \n    <span class=\"n\">track_ind</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n</pre>\n<h2>Features</h2>\n<ul>\n<li>Fast library decoding</li>\n<li>Simple, easy to understand code.</li>\n</ul>\n<h2>Contributing</h2>\n<p>All contributions are welcome. Do not hesitate to contact me in case of bugs or ideas for improvement.</p>\n<h2>License</h2>\n<p><a href=\"https://choosealicense.com/licenses/mit/\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 6854997, "releases": {"1.0.3": [{"comment_text": "", "digests": {"md5": "9eaaee844522f2b02b9017b21ed2aeb2", "sha256": "dcf8a9b61689d1a10bc30fe2c0728946689b593f90c02a10381ad4f7e8b4b93d"}, "downloads": -1, "filename": "IReadiTunes-1.0.3.tar.gz", "has_sig": false, "md5_digest": "9eaaee844522f2b02b9017b21ed2aeb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3986, "upload_time": "2020-03-20T22:39:09", "upload_time_iso_8601": "2020-03-20T22:39:09.894386Z", "url": "https://files.pythonhosted.org/packages/ca/df/2d76bdef24cbcf589ec939b9e1a50c1ac6414e39ef437fe8299ebe2d87fe/IReadiTunes-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "bf358878401d716bfeca80199b4b1602", "sha256": "a6df31d75542829d6d4dd55ea3153796f48fea4feb8a2275d0ceade3972d132d"}, "downloads": -1, "filename": "IReadiTunes-1.0.4.tar.gz", "has_sig": false, "md5_digest": "bf358878401d716bfeca80199b4b1602", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3996, "upload_time": "2020-03-21T11:03:55", "upload_time_iso_8601": "2020-03-21T11:03:55.427950Z", "url": "https://files.pythonhosted.org/packages/cd/bf/f3c45692ede8664d18d0b5477faa5fc790279d68e778c7f90b87f88d61f3/IReadiTunes-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bf358878401d716bfeca80199b4b1602", "sha256": "a6df31d75542829d6d4dd55ea3153796f48fea4feb8a2275d0ceade3972d132d"}, "downloads": -1, "filename": "IReadiTunes-1.0.4.tar.gz", "has_sig": false, "md5_digest": "bf358878401d716bfeca80199b4b1602", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3996, "upload_time": "2020-03-21T11:03:55", "upload_time_iso_8601": "2020-03-21T11:03:55.427950Z", "url": "https://files.pythonhosted.org/packages/cd/bf/f3c45692ede8664d18d0b5477faa5fc790279d68e778c7f90b87f88d61f3/IReadiTunes-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:18 2020"}