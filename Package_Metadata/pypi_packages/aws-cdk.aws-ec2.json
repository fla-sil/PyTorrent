{"info": {"author": "Amazon Web Services", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved", "Operating System :: OS Independent", "Programming Language :: JavaScript", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Typing :: Typed"], "description": "## Amazon EC2 Construct Library\n\n<!--BEGIN STABILITY BANNER-->---\n\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n<!--END STABILITY BANNER-->\n\nThe `@aws-cdk/aws-ec2` package contains primitives for setting up networking and\ninstances.\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nimport aws_cdk.aws_ec2 as ec2\n```\n\n## VPC\n\nMost projects need a Virtual Private Cloud to provide security by means of\nnetwork partitioning. This is achieved by creating an instance of\n`Vpc`:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nvpc = ec2.Vpc(self, \"VPC\")\n```\n\nAll default constructs require EC2 instances to be launched inside a VPC, so\nyou should generally start by defining a VPC whenever you need to launch\ninstances for your project.\n\n### Subnet Types\n\nA VPC consists of one or more subnets that instances can be placed into. CDK\ndistinguishes three different subnet types:\n\n* **Public** - public subnets connect directly to the Internet using an\n  Internet Gateway. If you want your instances to have a public IP address\n  and be directly reachable from the Internet, you must place them in a\n  public subnet.\n* **Private** - instances in private subnets are not directly routable from the\n  Internet, and connect out to the Internet via a NAT gateway. By default, a\n  NAT gateway is created in every public subnet for maximum availability. Be\n  aware that you will be charged for NAT gateways.\n* **Isolated** - isolated subnets do not route from or to the Internet, and\n  as such do not require NAT gateways. They can only connect to or be\n  connected to from other instances in the same VPC. A default VPC configuration\n  will not include isolated subnets,\n\nA default VPC configuration will create public and private subnets, but not\nisolated subnets. See *Advanced Subnet Configuration* below for information\non how to change the default subnet configuration.\n\nConstructs using the VPC will \"launch instances\" (or more accurately, create\nElastic Network Interfaces) into one or more of the subnets. They all accept\na property called `subnetSelection` (sometimes called `vpcSubnets`) to allow\nyou to select in what subnet to place the ENIs, usually defaulting to\n*private* subnets if the property is omitted.\n\nIf you would like to save on the cost of NAT gateways, you can use\n*isolated* subnets instead of *private* subnets (as described in Advanced\n*Subnet Configuration*). If you need private instances to have\ninternet connectivity, another option is to reduce the number of NAT gateways\ncreated by setting the `natGateways` property to a lower value (the default\nis one NAT gateway per availability zone). Be aware that this may have\navailability implications for your application.\n\n[Read more about\nsubnets](https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html).\n\n### Control over availability zones\n\nBy default, a VPC will spread over at most 3 Availability Zones available to\nit. To change the number of Availability Zones that the VPC will spread over,\nspecify the `maxAzs` property when defining it.\n\nThe number of Availability Zones that are available depends on the *region*\nand *account* of the Stack containing the VPC. If the [region and account are\nspecified](https://docs.aws.amazon.com/cdk/latest/guide/environments.html) on\nthe Stack, the CLI will [look up the existing Availability\nZones](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#using-regions-availability-zones-describe)\nand get an accurate count. If region and account are not specified, the stack\ncould be deployed anywhere and it will have to make a safe choice, limiting\nitself to 2 Availability Zones.\n\nTherefore, to get the VPC to spread over 3 or more availability zones, you\nmust specify the environment where the stack will be deployed.\n\n### Choosing subnets for resources\n\nWhen creating resources that create Elastic Network Interfaces (such as\ndatabases or instances), there is an option to choose which subnets to place\nthem in. For example, a VPC endpoint by default is placed into a subnet in\nevery availability zone, but you can override which subnets to use. The property\nis typically called one of `subnets`, `vpcSubnets` or `subnetSelection`.\n\nThe example below will place the endpoint into two AZs (`us-east-1a` and `us-east-1c`),\nin Isolated subnets:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nInterfaceVpcEndpoint(stack, \"VPC Endpoint\",\n    vpc=vpc,\n    service=InterfaceVpcEndpointService(\"com.amazonaws.vpce.us-east-1.vpce-svc-uuddlrlrbastrtsvc\", 443),\n    subnets={\n        \"subnet_type\": SubnetType.ISOLATED,\n        \"availability_zones\": [\"us-east-1a\", \"us-east-1c\"]\n    }\n)\n```\n\nYou can also specify specific subnet objects for granular control:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nInterfaceVpcEndpoint(stack, \"VPC Endpoint\",\n    vpc=vpc,\n    service=InterfaceVpcEndpointService(\"com.amazonaws.vpce.us-east-1.vpce-svc-uuddlrlrbastrtsvc\", 443),\n    subnets={\n        \"subnets\": [subnet1, subnet2]\n    }\n)\n```\n\nWhich subnets are selected is evaluated as follows:\n\n* `subnets`: if specific subnet objects are supplied, these are selected, and no other\n  logic is used.\n* `subnetType`/`subnetGroupName`: otherwise, a set of subnets is selected by\n  supplying either type or name:\n\n  * `subnetType` will select all subnets of the given type.\n  * `subnetGroupName` should be used to distinguish between multiple groups of subnets of\n    the same type (for example, you may want to separate your application instances and your\n    RDS instances into two distinct groups of Isolated subnets).\n  * If neither are given, the first available subnet group of a given type that\n    exists in the VPC will be used, in this order: Private, then Isolated, then Public.\n    In short: by default ENIs will preferentially be placed in subnets not connected to\n    the Internet.\n* `availabilityZones`/`onePerAz`: finally, some availability-zone based filtering may be done.\n  This filtering by availability zones will only be possible if the VPC has been created or\n  looked up in a non-environment agnostic stack (so account and region have been set and\n  availability zones have been looked up).\n\n  * `availabilityZones`: only the specific subnets from the selected subnet groups that are\n    in the given availability zones will be returned.\n  * `onePerAz`: per availability zone, a maximum of one subnet will be returned (Useful for resource\n    types that do not allow creating two ENIs in the same availability zone).\n\n### Using NAT instances\n\nBy default, the `Vpc` construct will create NAT *gateways* for you, which\nare managed by AWS. If you would prefer to use your own managed NAT\n*instances* instead, specify a different value for the `natGatewayProvider`\nproperty, as follows:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\n# Configure the `natGatewayProvider` when defining a Vpc\nnat_gateway_provider = ec2.NatProvider.instance(\n    instance_type=ec2.InstanceType(\"t3.small\")\n)\n\nvpc = ec2.Vpc(self, \"MyVpc\",\n    nat_gateway_provider=nat_gateway_provider,\n\n    # The 'natGateways' parameter now controls the number of NAT instances\n    nat_gateways=2\n)\n```\n\nThe construct will automatically search for the most recent NAT gateway AMI.\nIf you prefer to use a custom AMI, use `machineImage: MachineImage.genericLinux({ ... })` and configure the right AMI ID for the\nregions you want to deploy to.\n\nBy default, the NAT instances will route all traffic. To control what traffic\ngets routed, pass `allowAllTraffic: false` and access the\n`NatInstanceProvider.connections` member after having passed it to the VPC:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nprovider = NatProvider.instance(\n    instance_type=,\n    allow_all_traffic=False\n)\nVpc(stack, \"TheVPC\",\n    nat_gateway_provider=provider\n)\nprovider.connections.allow_from(Peer.ipv4(\"1.2.3.4/8\"), Port.tcp(80))\n```\n\n### Advanced Subnet Configuration\n\nIf the default VPC configuration (public and private subnets spanning the\nsize of the VPC) don't suffice for you, you can configure what subnets to\ncreate by specifying the `subnetConfiguration` property. It allows you\nto configure the number and size of all subnets. Specifying an advanced\nsubnet configuration could look like this:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nvpc = ec2.Vpc(self, \"TheVPC\",\n    # 'cidr' configures the IP range and size of the entire VPC.\n    # The IP space will be divided over the configured subnets.\n    cidr=\"10.0.0.0/21\",\n\n    # 'maxAzs' configures the maximum number of availability zones to use\n    max_azs=3,\n\n    # 'subnetConfiguration' specifies the \"subnet groups\" to create.\n    # Every subnet group will have a subnet for each AZ, so this\n    # configuration will create `3 groups \u00d7 3 AZs = 9` subnets.\n    subnet_configuration=[SubnetConfiguration(\n        # 'subnetType' controls Internet access, as described above.\n        subnet_type=ec2.SubnetType.PUBLIC,\n\n        # 'name' is used to name this particular subnet group. You will have to\n        # use the name for subnet selection if you have more than one subnet\n        # group of the same type.\n        name=\"Ingress\",\n\n        # 'cidrMask' specifies the IP addresses in the range of of individual\n        # subnets in the group. Each of the subnets in this group will contain\n        # `2^(32 address bits - 24 subnet bits) - 2 reserved addresses = 254`\n        # usable IP addresses.\n        #\n        # If 'cidrMask' is left out the available address space is evenly\n        # divided across the remaining subnet groups.\n        cidr_mask=24\n    ), SubnetConfiguration(\n        cidr_mask=24,\n        name=\"Application\",\n        subnet_type=ec2.SubnetType.PRIVATE\n    ), SubnetConfiguration(\n        cidr_mask=28,\n        name=\"Database\",\n        subnet_type=ec2.SubnetType.ISOLATED,\n\n        # 'reserved' can be used to reserve IP address space. No resources will\n        # be created for this subnet, but the IP range will be kept available for\n        # future creation of this subnet, or even for future subdivision.\n        reserved=True\n    )\n    ]\n)\n```\n\nThe example above is one possible configuration, but the user can use the\nconstructs above to implement many other network configurations.\n\nThe `Vpc` from the above configuration in a Region with three\navailability zones will be the following:\n\nSubnet Name       |Type      |IP Block      |AZ|Features\n------------------|----------|--------------|--|--------\nIngressSubnet1    |`PUBLIC`  |`10.0.0.0/24` |#1|NAT Gateway\nIngressSubnet2    |`PUBLIC`  |`10.0.1.0/24` |#2|NAT Gateway\nIngressSubnet3    |`PUBLIC`  |`10.0.2.0/24` |#3|NAT Gateway\nApplicationSubnet1|`PRIVATE` |`10.0.3.0/24` |#1|Route to NAT in IngressSubnet1\nApplicationSubnet2|`PRIVATE` |`10.0.4.0/24` |#2|Route to NAT in IngressSubnet2\nApplicationSubnet3|`PRIVATE` |`10.0.5.0/24` |#3|Route to NAT in IngressSubnet3\nDatabaseSubnet1   |`ISOLATED`|`10.0.6.0/28` |#1|Only routes within the VPC\nDatabaseSubnet2   |`ISOLATED`|`10.0.6.16/28`|#2|Only routes within the VPC\nDatabaseSubnet3   |`ISOLATED`|`10.0.6.32/28`|#3|Only routes within the VPC\n\n### Reserving subnet IP space\n\nThere are situations where the IP space for a subnet or number of subnets\nwill need to be reserved. This is useful in situations where subnets would\nneed to be added after the vpc is originally deployed, without causing IP\nrenumbering for existing subnets. The IP space for a subnet may be reserved\nby setting the `reserved` subnetConfiguration property to true, as shown\nbelow:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nvpc = ec2.Vpc(self, \"TheVPC\",\n    nat_gateways=1,\n    subnet_configuration=[SubnetConfiguration(\n        cidr_mask=26,\n        name=\"Public\",\n        subnet_type=ec2.SubnetType.PUBLIC\n    ), SubnetConfiguration(\n        cidr_mask=26,\n        name=\"Application1\",\n        subnet_type=ec2.SubnetType.PRIVATE\n    ), SubnetConfiguration(\n        cidr_mask=26,\n        name=\"Application2\",\n        subnet_type=ec2.SubnetType.PRIVATE,\n        reserved=True\n    ), SubnetConfiguration(\n        cidr_mask=27,\n        name=\"Database\",\n        subnet_type=ec2.SubnetType.ISOLATED\n    )\n    ]\n)\n```\n\nIn the example above, the subnet for Application2 is not actually provisioned\nbut its IP space is still reserved. If in the future this subnet needs to be\nprovisioned, then the `reserved: true` property should be removed. Reserving\nparts of the IP space prevents the other subnets from getting renumbered.\n\n### Sharing VPCs between stacks\n\nIf you are creating multiple `Stack`s inside the same CDK application, you\ncan reuse a VPC defined in one Stack in another by simply passing the VPC\ninstance around:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\n#\n# Stack1 creates the VPC\n#\nclass Stack1(cdk.Stack):\n\n    def __init__(self, scope, id, *, description=None, env=None, stackName=None, tags=None, terminationProtection=None):\n        super().__init__(scope, id, description=description, env=env, stackName=stackName, tags=tags, terminationProtection=terminationProtection)\n\n        self.vpc = ec2.Vpc(self, \"VPC\")\n\n#\n# Stack2 consumes the VPC\n#\nclass Stack2(cdk.Stack):\n    def __init__(self, scope, id, *, vpc, description=None, env=None, stackName=None, tags=None, terminationProtection=None):\n        super().__init__(scope, id, vpc=vpc, description=description, env=env, stackName=stackName, tags=tags, terminationProtection=terminationProtection)\n\n        # Pass the VPC to a construct that needs it\n        ConstructThatTakesAVpc(self, \"Construct\",\n            vpc=vpc\n        )\n\nstack1 = Stack1(app, \"Stack1\")\nstack2 = Stack2(app, \"Stack2\",\n    vpc=stack1.vpc\n)\n```\n\n### Importing an existing VPC\n\nIf your VPC is created outside your CDK app, you can use `Vpc.fromLookup()`.\nThe CDK CLI will search for the specified VPC in the the stack's region and\naccount, and import the subnet configuration. Looking up can be done by VPC\nID, but more flexibly by searching for a specific tag on the VPC.\n\nSubnet types will be determined from the `aws-cdk:subnet-type` tag on the\nsubnet if it exists, or the presence of a route to an Internet Gateway\notherwise. Subnet names will be determined from the `aws-cdk:subnet-name` tag\non the subnet if it exists, or will mirror the subnet type otherwise (i.e.\na public subnet will have the name `\"Public\"`).\n\nHere's how `Vpc.fromLookup()` can be used:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nvpc = ec2.Vpc.from_lookup(stack, \"VPC\",\n    # This imports the default VPC but you can also\n    # specify a 'vpcName' or 'tags'.\n    is_default=True\n)\n```\n\n## Allowing Connections\n\nIn AWS, all network traffic in and out of **Elastic Network Interfaces** (ENIs)\nis controlled by **Security Groups**. You can think of Security Groups as a\nfirewall with a set of rules. By default, Security Groups allow no incoming\n(ingress) traffic and all outgoing (egress) traffic. You can add ingress rules\nto them to allow incoming traffic streams. To exert fine-grained control over\negress traffic, set `allowAllOutbound: false` on the `SecurityGroup`, after\nwhich you can add egress traffic rules.\n\nYou can manipulate Security Groups directly:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nmy_security_group = ec2.SecurityGroup(self, \"SecurityGroup\",\n    vpc=vpc,\n    description=\"Allow ssh access to ec2 instances\",\n    allow_all_outbound=True\n)\nmy_security_group.add_ingress_rule(ec2.Peer.any_ipv4(), ec2.Port.tcp(22), \"allow ssh access from the world\")\n```\n\nAll constructs that create ENIs on your behalf (typically constructs that create\nEC2 instances or other VPC-connected resources) will all have security groups\nautomatically assigned. Those constructs have an attribute called\n**connections**, which is an object that makes it convenient to update the\nsecurity groups. If you want to allow connections between two constructs that\nhave security groups, you have to add an **Egress** rule to one Security Group,\nand an **Ingress** rule to the other. The connections object will automatically\ntake care of this for you:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\n# Allow connections from anywhere\nload_balancer.connections.allow_from_any_ipv4(ec2.Port.tcp(443), \"Allow inbound HTTPS\")\n\n# The same, but an explicit IP address\nload_balancer.connections.allow_from(ec2.Peer.ipv4(\"1.2.3.4/32\"), ec2.Port.tcp(443), \"Allow inbound HTTPS\")\n\n# Allow connection between AutoScalingGroups\napp_fleet.connections.allow_to(db_fleet, ec2.Port.tcp(443), \"App can call database\")\n```\n\n### Connection Peers\n\nThere are various classes that implement the connection peer part:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\n# Simple connection peers\npeer = ec2.Peer.ipv4(\"10.0.0.0/16\")\npeer = ec2.Peer.any_ipv4()\npeer = ec2.Peer.ipv6(\"::0/0\")\npeer = ec2.Peer.any_ipv6()\npeer = ec2.Peer.prefix_list(\"pl-12345\")\napp_fleet.connections.allow_to(peer, ec2.Port.tcp(443), \"Allow outbound HTTPS\")\n```\n\nAny object that has a security group can itself be used as a connection peer:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\n# These automatically create appropriate ingress and egress rules in both security groups\nfleet1.connections.allow_to(fleet2, ec2.Port.tcp(80), \"Allow between fleets\")\n\napp_fleet.connections.allow_from_any_ipv4(ec2.Port.tcp(80), \"Allow from load balancer\")\n```\n\n### Port Ranges\n\nThe connections that are allowed are specified by port ranges. A number of classes provide\nthe connection specifier:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nec2.Port.tcp(80)\nec2.Port.tcp_range(60000, 65535)\nec2.Port.all_tcp()\nec2.Port.all_traffic()\n```\n\n> NOTE: This set is not complete yet; for example, there is no library support for ICMP at the moment.\n> However, you can write your own classes to implement those.\n\n### Default Ports\n\nSome Constructs have default ports associated with them. For example, the\nlistener of a load balancer does (it's the public port), or instances of an\nRDS database (it's the port the database is accepting connections on).\n\nIf the object you're calling the peering method on has a default port associated with it, you can call\n`allowDefaultPortFrom()` and omit the port specifier. If the argument has an associated default port, call\n`allowDefaultPortTo()`.\n\nFor example:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\n# Port implicit in listener\nlistener.connections.allow_default_port_from_any_ipv4(\"Allow public\")\n\n# Port implicit in peer\napp_fleet.connections.allow_default_port_to(rds_database, \"Fleet can access database\")\n```\n\n## Machine Images (AMIs)\n\nAMIs control the OS that gets launched when you start your EC2 instance. The EC2\nlibrary contains constructs to select the AMI you want to use.\n\nDepending on the type of AMI, you select it a different way. Here are some\nexamples of things you might want to use:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\n# Pick the right Amazon Linux edition. All arguments shown are optional\n# and will default to these values when omitted.\namzn_linux = ec2.MachineImage.latest_amazon_linux(\n    generation=ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n    edition=ec2.AmazonLinuxEdition.STANDARD,\n    virtualization=ec2.AmazonLinuxVirt.HVM,\n    storage=ec2.AmazonLinuxStorage.GENERAL_PURPOSE\n)\n\n# Pick a Windows edition to use\nwindows = ec2.MachineImage.latest_windows(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE)\n\n# Look up the most recent image matching a set of AMI filters.\n# In this case, look up the NAT instance AMI, by using a wildcard\n# in the 'name' field:\nnat_ami = ec2.MachineImage.lookup(\n    name=\"amzn-ami-vpc-nat-*\",\n    owners=[\"amazon\"]\n)\n\n# For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n# a map giving the AMI to in for each region:\nlinux = ec2.MachineImage.generic_linux({\n    \"us-east-1\": \"ami-97785bed\",\n    \"eu-west-1\": \"ami-12345678\"\n})\n\n# For other custom (Windows) images, instantiate a `GenericWindowsImage` with\n# a map giving the AMI to in for each region:\ngeneric_windows = ec2.MachineImage.generic_windows({\n    \"us-east-1\": \"ami-97785bed\",\n    \"eu-west-1\": \"ami-12345678\"\n})\n```\n\n> NOTE: The AMIs selected by `MachineImage.lookup()` will be cached in\n> `cdk.context.json`, so that your AutoScalingGroup instances aren't replaced while\n> you are making unrelated changes to your CDK app.\n>\n> To query for the latest AMI again, remove the relevant cache entry from\n> `cdk.context.json`, or use the `cdk context` command. For more information, see\n> [Runtime Context](https://docs.aws.amazon.com/cdk/latest/guide/context.html) in the CDK\n> developer guide.\n\n## VPN connections to a VPC\n\nCreate your VPC with VPN connections by specifying the `vpnConnections` props (keys are construct `id`s):\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nvpc = ec2.Vpc(self, \"MyVpc\",\n    vpn_connections={\n        \"dynamic\": VpnConnectionOptions(# Dynamic routing (BGP)\n            ip=\"1.2.3.4\"),\n        \"static\": VpnConnectionOptions(# Static routing\n            ip=\"4.5.6.7\",\n            static_routes=[\"192.168.10.0/24\", \"192.168.20.0/24\"\n            ])\n    }\n)\n```\n\nTo create a VPC that can accept VPN connections, set `vpnGateway` to `true`:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nvpc = ec2.Vpc(self, \"MyVpc\",\n    vpn_gateway=True\n)\n```\n\nVPN connections can then be added:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nvpc.add_vpn_connection(\"Dynamic\",\n    ip=\"1.2.3.4\"\n)\n```\n\nBy default, routes will be propagated on the route tables associated with the private subnets. If no\nprivate subnets exists, isolated subnets are used. If no isolated subnets exists, public subnets are\nused. Use the `Vpc` property `vpnRoutePropagation` to customize this behavior.\n\nVPN connections expose [metrics (cloudwatch.Metric)](https://github.com/aws/aws-cdk/blob/master/packages/%40aws-cdk/aws-cloudwatch/README.md) across all tunnels in the account/region and per connection:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\n# Across all tunnels in the account/region\nall_data_out = ec2.VpnConnection.metric_all_tunnel_data_out()\n\n# For a specific vpn connection\nvpn_connection = vpc.add_vpn_connection(\"Dynamic\",\n    ip=\"1.2.3.4\"\n)\nstate = vpn_connection.metric_tunnel_state()\n```\n\n## VPC endpoints\n\nA VPC endpoint enables you to privately connect your VPC to supported AWS services and VPC endpoint services powered by PrivateLink without requiring an internet gateway, NAT device, VPN connection, or AWS Direct Connect connection. Instances in your VPC do not require public IP addresses to communicate with resources in the service. Traffic between your VPC and the other service does not leave the Amazon network.\n\nEndpoints are virtual devices. They are horizontally scaled, redundant, and highly available VPC components that allow communication between instances in your VPC and services without imposing availability risks or bandwidth constraints on your network traffic.\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\n# Add gateway endpoints when creating the VPC\nvpc = ec2.Vpc(self, \"MyVpc\",\n    gateway_endpoints={\n        \"S3\": GatewayVpcEndpointOptions(\n            service=ec2.GatewayVpcEndpointAwsService.S3\n        )\n    }\n)\n\n# Alternatively gateway endpoints can be added on the VPC\ndynamo_db_endpoint = vpc.add_gateway_endpoint(\"DynamoDbEndpoint\",\n    service=ec2.GatewayVpcEndpointAwsService.DYNAMODB\n)\n\n# This allows to customize the endpoint policy\ndynamo_db_endpoint.add_to_policy(\n    iam.PolicyStatement(# Restrict to listing and describing tables\n        principals=[iam.AnyPrincipal()],\n        actions=[\"dynamodb:DescribeTable\", \"dynamodb:ListTables\"],\n        resources=[\"*\"]))\n\n# Add an interface endpoint\nvpc.add_interface_endpoint(\"EcrDockerEndpoint\", {\n    \"service\": ec2.InterfaceVpcEndpointAwsService.ECR_DOCKER\n})\n```\n\nNot all VPC endpoint services are available in all availability zones. By default,\nCDK will place a VPC endpoint in one subnet per AZ, because CDK doesn't know about\nunavailable AZs. You can determine what the available AZs are from the AWS console.\nThe AZs CDK places the VPC endpoint in can be configured as follows:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nInterfaceVpcEndpoint(stack, \"VPC Endpoint\",\n    vpc=vpc,\n    service=InterfaceVpcEndpointService(\"com.amazonaws.vpce.us-east-1.vpce-svc-uuddlrlrbastrtsvc\", 443),\n    # Choose which availability zones to place the VPC endpoint in, based on\n    # available AZs\n    subnets={\n        \"availability_zones\": [\"us-east-1a\", \"us-east-1c\"]\n    }\n)\n```\n\n### Security groups for interface VPC endpoints\n\nBy default, interface VPC endpoints create a new security group and traffic is **not**\nautomatically allowed from the VPC CIDR.\n\nUse the `connections` object to allow traffic to flow to the endpoint:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nmy_endpoint.connections.allow_default_port_from_any_ipv4()\n```\n\nAlternatively, existing security groups can be used by specifying the `securityGroups` prop.\n\n## VPC endpoint services\n\nA VPC endpoint service enables you to expose a Network Load Balancer(s) as a provider service to consumers, who connect to your service over a VPC endpoint. You can restrict access to your service via whitelisted principals (anything that extends ArnPrincipal), and require that new connections be manually accepted.\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nVpcEndpointService(self, \"EndpointService\",\n    vpc_endpoint_service_load_balancers=[network_load_balancer1, network_load_balancer2],\n    acceptance_required=True,\n    whitelisted_principals=[ArnPrincipal(\"arn:aws:iam::123456789012:root\")]\n)\n```\n\n## Bastion Hosts\n\nA bastion host functions as an instance used to access servers and resources in a VPC without open up the complete VPC on a network level.\nYou can use bastion hosts using a standard SSH connection targetting port 22 on the host. As an alternative, you can connect the SSH connection\nfeature of AWS Systems Manager Session Manager, which does not need an opened security group. (https://aws.amazon.com/about-aws/whats-new/2019/07/session-manager-launches-tunneling-support-for-ssh-and-scp/)\n\nA default bastion host for use via SSM can be configured like:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nhost = ec2.BastionHostLinux(self, \"BastionHost\", vpc=vpc)\n```\n\nIf you want to connect from the internet using SSH, you need to place the host into a public subnet. You can then configure allowed source hosts.\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nhost = ec2.BastionHostLinux(self, \"BastionHost\",\n    vpc=vpc,\n    subnet_selection=SubnetSelection(subnet_type=ec2.SubnetType.PUBLIC)\n)\nhost.allow_ssh_access_from(ec2.Peer.ipv4(\"1.2.3.4/32\"))\n```\n\nAs there are no SSH public keys deployed on this machine, you need to use [EC2 Instance Connect](https://aws.amazon.com/de/blogs/compute/new-using-amazon-ec2-instance-connect-for-ssh-access-to-your-ec2-instances/)\nwith the command `aws ec2-instance-connect send-ssh-public-key` to provide your SSH public key.\n\n## Block Devices\n\nTo add EBS block device mappings, specify the `blockDeviceMappings` property. The follow example sets the EBS-backed\nroot device (`/dev/sda1`) size to 50 GiB, and adds another EBS-backed device mapped to `/dev/sdm` that is 100 GiB in\nsize:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nec2.Instance(self, \"Instance\", {\n    # ...\n    \"block_device_mappings\": [{\n        \"device_name\": \"/dev/sda1\",\n        \"volume\": ec2.BlockDeviceVolume.ebs(50)\n    }, {\n        \"device_name\": \"/dev/sdm\",\n        \"volume\": ec2.BlockDeviceVolume.ebs(100)\n    }\n    ]\n})\n```\n\n## VPC Flow Logs\n\nVPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. Flow log data can be published to Amazon CloudWatch Logs and Amazon S3. After you've created a flow log, you can retrieve and view its data in the chosen destination. (https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html).\n\nBy default a flow log will be created with CloudWatch Logs as the destination.\n\nYou can create a flow log like this:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nec2.FlowLog(self, \"FlowLog\",\n    resource_type=ec2.FlowLogResourceType.from_vpc(vpc)\n)\n```\n\nOr you can add a Flow Log to a VPC by using the addFlowLog method like this:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nvpc = ec2.Vpc(self, \"Vpc\")\n\nvpc.add_flow_log(\"FlowLog\")\n```\n\nYou can also add multiple flow logs with different destinations.\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nvpc = ec2.Vpc(self, \"Vpc\")\n\nvpc.add_flow_log(\"FlowLogS3\",\n    destination=ec2.FlowLogDestination.to_s3()\n)\n\nvpc.add_flow_log(\"FlowLogCloudWatch\",\n    traffic_type=ec2.FlowLogTrafficType.REJECT\n)\n```\n\nBy default the CDK will create the necessary resources for the destination. For the CloudWatch Logs destination\nit will create a CloudWatch Logs Log Group as well as the IAM role with the necessary permissions to publish to\nthe log group. In the case of an S3 destination, it will create the S3 bucket.\n\nIf you want to customize any of the destination resources you can provide your own as part of the `destination`.\n\n*CloudWatch Logs*\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nlog_group = logs.LogGroup(self, \"MyCustomLogGroup\")\n\nrole = iam.Role(self, \"MyCustomRole\",\n    assumed_by=iam.ServicePrincipal(\"vpc-flow-logs.amazonaws.com\")\n)\n\nec2.FlowLog(self, \"FlowLog\",\n    resource_type=ec2.FlowLogResourceType.from_vpc(vpc),\n    destination=ec2.FlowLogDestination.to_cloud_watch_logs(log_group, role)\n)\n```\n\n*S3*\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nbucket = s3.Bucket(self, \"MyCustomBucket\")\n\nec2.FlowLog(self, \"FlowLog\",\n    resource_type=ec2.FlowLogResourceType.from_vpc(vpc),\n    destination=ec2.FlowLogDestination.to_s3(bucket)\n)\n```\n\n## User Data\n\nUser data enables you to run a script when your instances start up.  In order to configure these scripts you can add commands directly to the script\nor you can use the UserData's convenience functions to aid in the creation of your script.\n\nA user data could be configured to run a script found in an asset through the following:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nasset = Asset(self, \"Asset\", path=path.join(__dirname, \"configure.sh\"))\ninstance = ec2.Instance(self, \"Instance\", {})\nlocal_path = instance.user_data.add_s3_download_command(\n    bucket=asset.bucket,\n    bucket_key=asset.s3_object_key\n)\ninstance.user_data.add_execute_file_command(\n    file_path=local_path,\n    arguments=\"--verbose -y\"\n)\nasset.grant_read(instance.role)\n```\n\n## Importing existing subnet\n\nTo import an existing Subnet, call `Subnet.fromSubnetAttributes()` or\n`Subnet.fromSubnetId()`. Only if you supply the subnet's Availability Zone\nand Route Table Ids when calling `Subnet.fromSubnetAttributes()` will you be\nable to use the CDK features that use these values (such as selecting one\nsubnet per AZ).\n\nImporting an existing subnet looks like this:\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\n# Supply all properties\nsubnet = Subnet.from_subnet_attributes(self, \"SubnetFromAttributes\",\n    subnet_id=\"s-1234\",\n    availability_zone=\"pub-az-4465\",\n    route_table_id=\"rt-145\"\n)\n\n# Supply only subnet id\nsubnet = Subnet.from_subnet_id(self, \"SubnetFromId\", \"s-1234\")\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aws/aws-cdk", "keywords": "", "license": "Apache-2.0", "maintainer": "", "maintainer_email": "", "name": "aws-cdk.aws-ec2", "package_url": "https://pypi.org/project/aws-cdk.aws-ec2/", "platform": "", "project_url": "https://pypi.org/project/aws-cdk.aws-ec2/", "project_urls": {"Homepage": "https://github.com/aws/aws-cdk", "Source": "https://github.com/aws/aws-cdk.git"}, "release_url": "https://pypi.org/project/aws-cdk.aws-ec2/1.37.0/", "requires_dist": ["jsii (<2.0.0,>=1.4.1)", "publication (>=0.0.3)", "aws-cdk.aws-cloudwatch (==1.37.0)", "aws-cdk.aws-iam (==1.37.0)", "aws-cdk.aws-logs (==1.37.0)", "aws-cdk.aws-s3 (==1.37.0)", "aws-cdk.aws-ssm (==1.37.0)", "aws-cdk.core (==1.37.0)", "aws-cdk.cx-api (==1.37.0)", "aws-cdk.region-info (==1.37.0)", "constructs (<4.0.0,>=3.0.2)"], "requires_python": ">=3.6", "summary": "CDK Constructs for AWS EC2", "version": "1.37.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Amazon EC2 Construct Library</h2>\n---\n<p><img alt=\"cfn-resources: Stable\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c5b8ae2a108c14813a0b7e3862241cdc757fd513/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f63666e2d2d7265736f75726365732d737461626c652d737563636573732e7376673f7374796c653d666f722d7468652d6261646765\"></p>\n<p><img alt=\"cdk-constructs: Stable\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f5f40f3f8e9fe8fc595a13f2b30104c4b7a0e1f5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f63646b2d2d636f6e737472756374732d737461626c652d737563636573732e7376673f7374796c653d666f722d7468652d6261646765\"></p>\n<hr>\n\n<p>The <code>@aws-cdk/aws-ec2</code> package contains primitives for setting up networking and\ninstances.</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aws_cdk.aws_ec2</span> <span class=\"k\">as</span> <span class=\"nn\">ec2</span>\n</pre>\n<h2>VPC</h2>\n<p>Most projects need a Virtual Private Cloud to provide security by means of\nnetwork partitioning. This is achieved by creating an instance of\n<code>Vpc</code>:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">vpc</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Vpc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"VPC\"</span><span class=\"p\">)</span>\n</pre>\n<p>All default constructs require EC2 instances to be launched inside a VPC, so\nyou should generally start by defining a VPC whenever you need to launch\ninstances for your project.</p>\n<h3>Subnet Types</h3>\n<p>A VPC consists of one or more subnets that instances can be placed into. CDK\ndistinguishes three different subnet types:</p>\n<ul>\n<li><strong>Public</strong> - public subnets connect directly to the Internet using an\nInternet Gateway. If you want your instances to have a public IP address\nand be directly reachable from the Internet, you must place them in a\npublic subnet.</li>\n<li><strong>Private</strong> - instances in private subnets are not directly routable from the\nInternet, and connect out to the Internet via a NAT gateway. By default, a\nNAT gateway is created in every public subnet for maximum availability. Be\naware that you will be charged for NAT gateways.</li>\n<li><strong>Isolated</strong> - isolated subnets do not route from or to the Internet, and\nas such do not require NAT gateways. They can only connect to or be\nconnected to from other instances in the same VPC. A default VPC configuration\nwill not include isolated subnets,</li>\n</ul>\n<p>A default VPC configuration will create public and private subnets, but not\nisolated subnets. See <em>Advanced Subnet Configuration</em> below for information\non how to change the default subnet configuration.</p>\n<p>Constructs using the VPC will \"launch instances\" (or more accurately, create\nElastic Network Interfaces) into one or more of the subnets. They all accept\na property called <code>subnetSelection</code> (sometimes called <code>vpcSubnets</code>) to allow\nyou to select in what subnet to place the ENIs, usually defaulting to\n<em>private</em> subnets if the property is omitted.</p>\n<p>If you would like to save on the cost of NAT gateways, you can use\n<em>isolated</em> subnets instead of <em>private</em> subnets (as described in Advanced\n<em>Subnet Configuration</em>). If you need private instances to have\ninternet connectivity, another option is to reduce the number of NAT gateways\ncreated by setting the <code>natGateways</code> property to a lower value (the default\nis one NAT gateway per availability zone). Be aware that this may have\navailability implications for your application.</p>\n<p><a href=\"https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html\" rel=\"nofollow\">Read more about\nsubnets</a>.</p>\n<h3>Control over availability zones</h3>\n<p>By default, a VPC will spread over at most 3 Availability Zones available to\nit. To change the number of Availability Zones that the VPC will spread over,\nspecify the <code>maxAzs</code> property when defining it.</p>\n<p>The number of Availability Zones that are available depends on the <em>region</em>\nand <em>account</em> of the Stack containing the VPC. If the <a href=\"https://docs.aws.amazon.com/cdk/latest/guide/environments.html\" rel=\"nofollow\">region and account are\nspecified</a> on\nthe Stack, the CLI will <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#using-regions-availability-zones-describe\" rel=\"nofollow\">look up the existing Availability\nZones</a>\nand get an accurate count. If region and account are not specified, the stack\ncould be deployed anywhere and it will have to make a safe choice, limiting\nitself to 2 Availability Zones.</p>\n<p>Therefore, to get the VPC to spread over 3 or more availability zones, you\nmust specify the environment where the stack will be deployed.</p>\n<h3>Choosing subnets for resources</h3>\n<p>When creating resources that create Elastic Network Interfaces (such as\ndatabases or instances), there is an option to choose which subnets to place\nthem in. For example, a VPC endpoint by default is placed into a subnet in\nevery availability zone, but you can override which subnets to use. The property\nis typically called one of <code>subnets</code>, <code>vpcSubnets</code> or <code>subnetSelection</code>.</p>\n<p>The example below will place the endpoint into two AZs (<code>us-east-1a</code> and <code>us-east-1c</code>),\nin Isolated subnets:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">InterfaceVpcEndpoint</span><span class=\"p\">(</span><span class=\"n\">stack</span><span class=\"p\">,</span> <span class=\"s2\">\"VPC Endpoint\"</span><span class=\"p\">,</span>\n    <span class=\"n\">vpc</span><span class=\"o\">=</span><span class=\"n\">vpc</span><span class=\"p\">,</span>\n    <span class=\"n\">service</span><span class=\"o\">=</span><span class=\"n\">InterfaceVpcEndpointService</span><span class=\"p\">(</span><span class=\"s2\">\"com.amazonaws.vpce.us-east-1.vpce-svc-uuddlrlrbastrtsvc\"</span><span class=\"p\">,</span> <span class=\"mi\">443</span><span class=\"p\">),</span>\n    <span class=\"n\">subnets</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">\"subnet_type\"</span><span class=\"p\">:</span> <span class=\"n\">SubnetType</span><span class=\"o\">.</span><span class=\"n\">ISOLATED</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"availability_zones\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"us-east-1a\"</span><span class=\"p\">,</span> <span class=\"s2\">\"us-east-1c\"</span><span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre>\n<p>You can also specify specific subnet objects for granular control:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">InterfaceVpcEndpoint</span><span class=\"p\">(</span><span class=\"n\">stack</span><span class=\"p\">,</span> <span class=\"s2\">\"VPC Endpoint\"</span><span class=\"p\">,</span>\n    <span class=\"n\">vpc</span><span class=\"o\">=</span><span class=\"n\">vpc</span><span class=\"p\">,</span>\n    <span class=\"n\">service</span><span class=\"o\">=</span><span class=\"n\">InterfaceVpcEndpointService</span><span class=\"p\">(</span><span class=\"s2\">\"com.amazonaws.vpce.us-east-1.vpce-svc-uuddlrlrbastrtsvc\"</span><span class=\"p\">,</span> <span class=\"mi\">443</span><span class=\"p\">),</span>\n    <span class=\"n\">subnets</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">\"subnets\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">subnet1</span><span class=\"p\">,</span> <span class=\"n\">subnet2</span><span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Which subnets are selected is evaluated as follows:</p>\n<ul>\n<li>\n<p><code>subnets</code>: if specific subnet objects are supplied, these are selected, and no other\nlogic is used.</p>\n</li>\n<li>\n<p><code>subnetType</code>/<code>subnetGroupName</code>: otherwise, a set of subnets is selected by\nsupplying either type or name:</p>\n<ul>\n<li><code>subnetType</code> will select all subnets of the given type.</li>\n<li><code>subnetGroupName</code> should be used to distinguish between multiple groups of subnets of\nthe same type (for example, you may want to separate your application instances and your\nRDS instances into two distinct groups of Isolated subnets).</li>\n<li>If neither are given, the first available subnet group of a given type that\nexists in the VPC will be used, in this order: Private, then Isolated, then Public.\nIn short: by default ENIs will preferentially be placed in subnets not connected to\nthe Internet.</li>\n</ul>\n</li>\n<li>\n<p><code>availabilityZones</code>/<code>onePerAz</code>: finally, some availability-zone based filtering may be done.\nThis filtering by availability zones will only be possible if the VPC has been created or\nlooked up in a non-environment agnostic stack (so account and region have been set and\navailability zones have been looked up).</p>\n<ul>\n<li><code>availabilityZones</code>: only the specific subnets from the selected subnet groups that are\nin the given availability zones will be returned.</li>\n<li><code>onePerAz</code>: per availability zone, a maximum of one subnet will be returned (Useful for resource\ntypes that do not allow creating two ENIs in the same availability zone).</li>\n</ul>\n</li>\n</ul>\n<h3>Using NAT instances</h3>\n<p>By default, the <code>Vpc</code> construct will create NAT <em>gateways</em> for you, which\nare managed by AWS. If you would prefer to use your own managed NAT\n<em>instances</em> instead, specify a different value for the <code>natGatewayProvider</code>\nproperty, as follows:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"c1\"># Configure the `natGatewayProvider` when defining a Vpc</span>\n<span class=\"n\">nat_gateway_provider</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">NatProvider</span><span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"p\">(</span>\n    <span class=\"n\">instance_type</span><span class=\"o\">=</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">InstanceType</span><span class=\"p\">(</span><span class=\"s2\">\"t3.small\"</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">vpc</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Vpc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"MyVpc\"</span><span class=\"p\">,</span>\n    <span class=\"n\">nat_gateway_provider</span><span class=\"o\">=</span><span class=\"n\">nat_gateway_provider</span><span class=\"p\">,</span>\n\n    <span class=\"c1\"># The 'natGateways' parameter now controls the number of NAT instances</span>\n    <span class=\"n\">nat_gateways</span><span class=\"o\">=</span><span class=\"mi\">2</span>\n<span class=\"p\">)</span>\n</pre>\n<p>The construct will automatically search for the most recent NAT gateway AMI.\nIf you prefer to use a custom AMI, use <code>machineImage: MachineImage.genericLinux({ ... })</code> and configure the right AMI ID for the\nregions you want to deploy to.</p>\n<p>By default, the NAT instances will route all traffic. To control what traffic\ngets routed, pass <code>allowAllTraffic: false</code> and access the\n<code>NatInstanceProvider.connections</code> member after having passed it to the VPC:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">provider</span> <span class=\"o\">=</span> <span class=\"n\">NatProvider</span><span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"p\">(</span>\n    <span class=\"n\">instance_type</span><span class=\"o\">=</span><span class=\"p\">,</span>\n    <span class=\"n\">allow_all_traffic</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n<span class=\"p\">)</span>\n<span class=\"n\">Vpc</span><span class=\"p\">(</span><span class=\"n\">stack</span><span class=\"p\">,</span> <span class=\"s2\">\"TheVPC\"</span><span class=\"p\">,</span>\n    <span class=\"n\">nat_gateway_provider</span><span class=\"o\">=</span><span class=\"n\">provider</span>\n<span class=\"p\">)</span>\n<span class=\"n\">provider</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">allow_from</span><span class=\"p\">(</span><span class=\"n\">Peer</span><span class=\"o\">.</span><span class=\"n\">ipv4</span><span class=\"p\">(</span><span class=\"s2\">\"1.2.3.4/8\"</span><span class=\"p\">),</span> <span class=\"n\">Port</span><span class=\"o\">.</span><span class=\"n\">tcp</span><span class=\"p\">(</span><span class=\"mi\">80</span><span class=\"p\">))</span>\n</pre>\n<h3>Advanced Subnet Configuration</h3>\n<p>If the default VPC configuration (public and private subnets spanning the\nsize of the VPC) don't suffice for you, you can configure what subnets to\ncreate by specifying the <code>subnetConfiguration</code> property. It allows you\nto configure the number and size of all subnets. Specifying an advanced\nsubnet configuration could look like this:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">vpc</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Vpc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"TheVPC\"</span><span class=\"p\">,</span>\n    <span class=\"c1\"># 'cidr' configures the IP range and size of the entire VPC.</span>\n    <span class=\"c1\"># The IP space will be divided over the configured subnets.</span>\n    <span class=\"n\">cidr</span><span class=\"o\">=</span><span class=\"s2\">\"10.0.0.0/21\"</span><span class=\"p\">,</span>\n\n    <span class=\"c1\"># 'maxAzs' configures the maximum number of availability zones to use</span>\n    <span class=\"n\">max_azs</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span>\n\n    <span class=\"c1\"># 'subnetConfiguration' specifies the \"subnet groups\" to create.</span>\n    <span class=\"c1\"># Every subnet group will have a subnet for each AZ, so this</span>\n    <span class=\"c1\"># configuration will create `3 groups \u00d7 3 AZs = 9` subnets.</span>\n    <span class=\"n\">subnet_configuration</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">SubnetConfiguration</span><span class=\"p\">(</span>\n        <span class=\"c1\"># 'subnetType' controls Internet access, as described above.</span>\n        <span class=\"n\">subnet_type</span><span class=\"o\">=</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">SubnetType</span><span class=\"o\">.</span><span class=\"n\">PUBLIC</span><span class=\"p\">,</span>\n\n        <span class=\"c1\"># 'name' is used to name this particular subnet group. You will have to</span>\n        <span class=\"c1\"># use the name for subnet selection if you have more than one subnet</span>\n        <span class=\"c1\"># group of the same type.</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Ingress\"</span><span class=\"p\">,</span>\n\n        <span class=\"c1\"># 'cidrMask' specifies the IP addresses in the range of of individual</span>\n        <span class=\"c1\"># subnets in the group. Each of the subnets in this group will contain</span>\n        <span class=\"c1\"># `2^(32 address bits - 24 subnet bits) - 2 reserved addresses = 254`</span>\n        <span class=\"c1\"># usable IP addresses.</span>\n        <span class=\"c1\">#</span>\n        <span class=\"c1\"># If 'cidrMask' is left out the available address space is evenly</span>\n        <span class=\"c1\"># divided across the remaining subnet groups.</span>\n        <span class=\"n\">cidr_mask</span><span class=\"o\">=</span><span class=\"mi\">24</span>\n    <span class=\"p\">),</span> <span class=\"n\">SubnetConfiguration</span><span class=\"p\">(</span>\n        <span class=\"n\">cidr_mask</span><span class=\"o\">=</span><span class=\"mi\">24</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Application\"</span><span class=\"p\">,</span>\n        <span class=\"n\">subnet_type</span><span class=\"o\">=</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">SubnetType</span><span class=\"o\">.</span><span class=\"n\">PRIVATE</span>\n    <span class=\"p\">),</span> <span class=\"n\">SubnetConfiguration</span><span class=\"p\">(</span>\n        <span class=\"n\">cidr_mask</span><span class=\"o\">=</span><span class=\"mi\">28</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Database\"</span><span class=\"p\">,</span>\n        <span class=\"n\">subnet_type</span><span class=\"o\">=</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">SubnetType</span><span class=\"o\">.</span><span class=\"n\">ISOLATED</span><span class=\"p\">,</span>\n\n        <span class=\"c1\"># 'reserved' can be used to reserve IP address space. No resources will</span>\n        <span class=\"c1\"># be created for this subnet, but the IP range will be kept available for</span>\n        <span class=\"c1\"># future creation of this subnet, or even for future subdivision.</span>\n        <span class=\"n\">reserved</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n    <span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n</pre>\n<p>The example above is one possible configuration, but the user can use the\nconstructs above to implement many other network configurations.</p>\n<p>The <code>Vpc</code> from the above configuration in a Region with three\navailability zones will be the following:</p>\n<table>\n<thead>\n<tr>\n<th>Subnet Name</th>\n<th>Type</th>\n<th>IP Block</th>\n<th>AZ</th>\n<th>Features</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>IngressSubnet1</td>\n<td><code>PUBLIC</code></td>\n<td><code>10.0.0.0/24</code></td>\n<td>#1</td>\n<td>NAT Gateway</td>\n</tr>\n<tr>\n<td>IngressSubnet2</td>\n<td><code>PUBLIC</code></td>\n<td><code>10.0.1.0/24</code></td>\n<td>#2</td>\n<td>NAT Gateway</td>\n</tr>\n<tr>\n<td>IngressSubnet3</td>\n<td><code>PUBLIC</code></td>\n<td><code>10.0.2.0/24</code></td>\n<td>#3</td>\n<td>NAT Gateway</td>\n</tr>\n<tr>\n<td>ApplicationSubnet1</td>\n<td><code>PRIVATE</code></td>\n<td><code>10.0.3.0/24</code></td>\n<td>#1</td>\n<td>Route to NAT in IngressSubnet1</td>\n</tr>\n<tr>\n<td>ApplicationSubnet2</td>\n<td><code>PRIVATE</code></td>\n<td><code>10.0.4.0/24</code></td>\n<td>#2</td>\n<td>Route to NAT in IngressSubnet2</td>\n</tr>\n<tr>\n<td>ApplicationSubnet3</td>\n<td><code>PRIVATE</code></td>\n<td><code>10.0.5.0/24</code></td>\n<td>#3</td>\n<td>Route to NAT in IngressSubnet3</td>\n</tr>\n<tr>\n<td>DatabaseSubnet1</td>\n<td><code>ISOLATED</code></td>\n<td><code>10.0.6.0/28</code></td>\n<td>#1</td>\n<td>Only routes within the VPC</td>\n</tr>\n<tr>\n<td>DatabaseSubnet2</td>\n<td><code>ISOLATED</code></td>\n<td><code>10.0.6.16/28</code></td>\n<td>#2</td>\n<td>Only routes within the VPC</td>\n</tr>\n<tr>\n<td>DatabaseSubnet3</td>\n<td><code>ISOLATED</code></td>\n<td><code>10.0.6.32/28</code></td>\n<td>#3</td>\n<td>Only routes within the VPC</td>\n</tr></tbody></table>\n<h3>Reserving subnet IP space</h3>\n<p>There are situations where the IP space for a subnet or number of subnets\nwill need to be reserved. This is useful in situations where subnets would\nneed to be added after the vpc is originally deployed, without causing IP\nrenumbering for existing subnets. The IP space for a subnet may be reserved\nby setting the <code>reserved</code> subnetConfiguration property to true, as shown\nbelow:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">vpc</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Vpc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"TheVPC\"</span><span class=\"p\">,</span>\n    <span class=\"n\">nat_gateways</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"n\">subnet_configuration</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">SubnetConfiguration</span><span class=\"p\">(</span>\n        <span class=\"n\">cidr_mask</span><span class=\"o\">=</span><span class=\"mi\">26</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Public\"</span><span class=\"p\">,</span>\n        <span class=\"n\">subnet_type</span><span class=\"o\">=</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">SubnetType</span><span class=\"o\">.</span><span class=\"n\">PUBLIC</span>\n    <span class=\"p\">),</span> <span class=\"n\">SubnetConfiguration</span><span class=\"p\">(</span>\n        <span class=\"n\">cidr_mask</span><span class=\"o\">=</span><span class=\"mi\">26</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Application1\"</span><span class=\"p\">,</span>\n        <span class=\"n\">subnet_type</span><span class=\"o\">=</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">SubnetType</span><span class=\"o\">.</span><span class=\"n\">PRIVATE</span>\n    <span class=\"p\">),</span> <span class=\"n\">SubnetConfiguration</span><span class=\"p\">(</span>\n        <span class=\"n\">cidr_mask</span><span class=\"o\">=</span><span class=\"mi\">26</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Application2\"</span><span class=\"p\">,</span>\n        <span class=\"n\">subnet_type</span><span class=\"o\">=</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">SubnetType</span><span class=\"o\">.</span><span class=\"n\">PRIVATE</span><span class=\"p\">,</span>\n        <span class=\"n\">reserved</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n    <span class=\"p\">),</span> <span class=\"n\">SubnetConfiguration</span><span class=\"p\">(</span>\n        <span class=\"n\">cidr_mask</span><span class=\"o\">=</span><span class=\"mi\">27</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Database\"</span><span class=\"p\">,</span>\n        <span class=\"n\">subnet_type</span><span class=\"o\">=</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">SubnetType</span><span class=\"o\">.</span><span class=\"n\">ISOLATED</span>\n    <span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n</pre>\n<p>In the example above, the subnet for Application2 is not actually provisioned\nbut its IP space is still reserved. If in the future this subnet needs to be\nprovisioned, then the <code>reserved: true</code> property should be removed. Reserving\nparts of the IP space prevents the other subnets from getting renumbered.</p>\n<h3>Sharing VPCs between stacks</h3>\n<p>If you are creating multiple <code>Stack</code>s inside the same CDK application, you\ncan reuse a VPC defined in one Stack in another by simply passing the VPC\ninstance around:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># Stack1 creates the VPC</span>\n<span class=\"c1\">#</span>\n<span class=\"k\">class</span> <span class=\"nc\">Stack1</span><span class=\"p\">(</span><span class=\"n\">cdk</span><span class=\"o\">.</span><span class=\"n\">Stack</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">scope</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">stackName</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">terminationProtection</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">scope</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"n\">description</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"o\">=</span><span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">stackName</span><span class=\"o\">=</span><span class=\"n\">stackName</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"n\">tags</span><span class=\"p\">,</span> <span class=\"n\">terminationProtection</span><span class=\"o\">=</span><span class=\"n\">terminationProtection</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vpc</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Vpc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"VPC\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#</span>\n<span class=\"c1\"># Stack2 consumes the VPC</span>\n<span class=\"c1\">#</span>\n<span class=\"k\">class</span> <span class=\"nc\">Stack2</span><span class=\"p\">(</span><span class=\"n\">cdk</span><span class=\"o\">.</span><span class=\"n\">Stack</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">scope</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"p\">,</span> <span class=\"n\">vpc</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">stackName</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">terminationProtection</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">scope</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"n\">vpc</span><span class=\"o\">=</span><span class=\"n\">vpc</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"n\">description</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"o\">=</span><span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">stackName</span><span class=\"o\">=</span><span class=\"n\">stackName</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"n\">tags</span><span class=\"p\">,</span> <span class=\"n\">terminationProtection</span><span class=\"o\">=</span><span class=\"n\">terminationProtection</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Pass the VPC to a construct that needs it</span>\n        <span class=\"n\">ConstructThatTakesAVpc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"Construct\"</span><span class=\"p\">,</span>\n            <span class=\"n\">vpc</span><span class=\"o\">=</span><span class=\"n\">vpc</span>\n        <span class=\"p\">)</span>\n\n<span class=\"n\">stack1</span> <span class=\"o\">=</span> <span class=\"n\">Stack1</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"s2\">\"Stack1\"</span><span class=\"p\">)</span>\n<span class=\"n\">stack2</span> <span class=\"o\">=</span> <span class=\"n\">Stack2</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"s2\">\"Stack2\"</span><span class=\"p\">,</span>\n    <span class=\"n\">vpc</span><span class=\"o\">=</span><span class=\"n\">stack1</span><span class=\"o\">.</span><span class=\"n\">vpc</span>\n<span class=\"p\">)</span>\n</pre>\n<h3>Importing an existing VPC</h3>\n<p>If your VPC is created outside your CDK app, you can use <code>Vpc.fromLookup()</code>.\nThe CDK CLI will search for the specified VPC in the the stack's region and\naccount, and import the subnet configuration. Looking up can be done by VPC\nID, but more flexibly by searching for a specific tag on the VPC.</p>\n<p>Subnet types will be determined from the <code>aws-cdk:subnet-type</code> tag on the\nsubnet if it exists, or the presence of a route to an Internet Gateway\notherwise. Subnet names will be determined from the <code>aws-cdk:subnet-name</code> tag\non the subnet if it exists, or will mirror the subnet type otherwise (i.e.\na public subnet will have the name <code>\"Public\"</code>).</p>\n<p>Here's how <code>Vpc.fromLookup()</code> can be used:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">vpc</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Vpc</span><span class=\"o\">.</span><span class=\"n\">from_lookup</span><span class=\"p\">(</span><span class=\"n\">stack</span><span class=\"p\">,</span> <span class=\"s2\">\"VPC\"</span><span class=\"p\">,</span>\n    <span class=\"c1\"># This imports the default VPC but you can also</span>\n    <span class=\"c1\"># specify a 'vpcName' or 'tags'.</span>\n    <span class=\"n\">is_default</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>Allowing Connections</h2>\n<p>In AWS, all network traffic in and out of <strong>Elastic Network Interfaces</strong> (ENIs)\nis controlled by <strong>Security Groups</strong>. You can think of Security Groups as a\nfirewall with a set of rules. By default, Security Groups allow no incoming\n(ingress) traffic and all outgoing (egress) traffic. You can add ingress rules\nto them to allow incoming traffic streams. To exert fine-grained control over\negress traffic, set <code>allowAllOutbound: false</code> on the <code>SecurityGroup</code>, after\nwhich you can add egress traffic rules.</p>\n<p>You can manipulate Security Groups directly:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">my_security_group</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">SecurityGroup</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"SecurityGroup\"</span><span class=\"p\">,</span>\n    <span class=\"n\">vpc</span><span class=\"o\">=</span><span class=\"n\">vpc</span><span class=\"p\">,</span>\n    <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"Allow ssh access to ec2 instances\"</span><span class=\"p\">,</span>\n    <span class=\"n\">allow_all_outbound</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n<span class=\"n\">my_security_group</span><span class=\"o\">.</span><span class=\"n\">add_ingress_rule</span><span class=\"p\">(</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Peer</span><span class=\"o\">.</span><span class=\"n\">any_ipv4</span><span class=\"p\">(),</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Port</span><span class=\"o\">.</span><span class=\"n\">tcp</span><span class=\"p\">(</span><span class=\"mi\">22</span><span class=\"p\">),</span> <span class=\"s2\">\"allow ssh access from the world\"</span><span class=\"p\">)</span>\n</pre>\n<p>All constructs that create ENIs on your behalf (typically constructs that create\nEC2 instances or other VPC-connected resources) will all have security groups\nautomatically assigned. Those constructs have an attribute called\n<strong>connections</strong>, which is an object that makes it convenient to update the\nsecurity groups. If you want to allow connections between two constructs that\nhave security groups, you have to add an <strong>Egress</strong> rule to one Security Group,\nand an <strong>Ingress</strong> rule to the other. The connections object will automatically\ntake care of this for you:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"c1\"># Allow connections from anywhere</span>\n<span class=\"n\">load_balancer</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">allow_from_any_ipv4</span><span class=\"p\">(</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Port</span><span class=\"o\">.</span><span class=\"n\">tcp</span><span class=\"p\">(</span><span class=\"mi\">443</span><span class=\"p\">),</span> <span class=\"s2\">\"Allow inbound HTTPS\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># The same, but an explicit IP address</span>\n<span class=\"n\">load_balancer</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">allow_from</span><span class=\"p\">(</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Peer</span><span class=\"o\">.</span><span class=\"n\">ipv4</span><span class=\"p\">(</span><span class=\"s2\">\"1.2.3.4/32\"</span><span class=\"p\">),</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Port</span><span class=\"o\">.</span><span class=\"n\">tcp</span><span class=\"p\">(</span><span class=\"mi\">443</span><span class=\"p\">),</span> <span class=\"s2\">\"Allow inbound HTTPS\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Allow connection between AutoScalingGroups</span>\n<span class=\"n\">app_fleet</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">allow_to</span><span class=\"p\">(</span><span class=\"n\">db_fleet</span><span class=\"p\">,</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Port</span><span class=\"o\">.</span><span class=\"n\">tcp</span><span class=\"p\">(</span><span class=\"mi\">443</span><span class=\"p\">),</span> <span class=\"s2\">\"App can call database\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Connection Peers</h3>\n<p>There are various classes that implement the connection peer part:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"c1\"># Simple connection peers</span>\n<span class=\"n\">peer</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Peer</span><span class=\"o\">.</span><span class=\"n\">ipv4</span><span class=\"p\">(</span><span class=\"s2\">\"10.0.0.0/16\"</span><span class=\"p\">)</span>\n<span class=\"n\">peer</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Peer</span><span class=\"o\">.</span><span class=\"n\">any_ipv4</span><span class=\"p\">()</span>\n<span class=\"n\">peer</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Peer</span><span class=\"o\">.</span><span class=\"n\">ipv6</span><span class=\"p\">(</span><span class=\"s2\">\"::0/0\"</span><span class=\"p\">)</span>\n<span class=\"n\">peer</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Peer</span><span class=\"o\">.</span><span class=\"n\">any_ipv6</span><span class=\"p\">()</span>\n<span class=\"n\">peer</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Peer</span><span class=\"o\">.</span><span class=\"n\">prefix_list</span><span class=\"p\">(</span><span class=\"s2\">\"pl-12345\"</span><span class=\"p\">)</span>\n<span class=\"n\">app_fleet</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">allow_to</span><span class=\"p\">(</span><span class=\"n\">peer</span><span class=\"p\">,</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Port</span><span class=\"o\">.</span><span class=\"n\">tcp</span><span class=\"p\">(</span><span class=\"mi\">443</span><span class=\"p\">),</span> <span class=\"s2\">\"Allow outbound HTTPS\"</span><span class=\"p\">)</span>\n</pre>\n<p>Any object that has a security group can itself be used as a connection peer:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"c1\"># These automatically create appropriate ingress and egress rules in both security groups</span>\n<span class=\"n\">fleet1</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">allow_to</span><span class=\"p\">(</span><span class=\"n\">fleet2</span><span class=\"p\">,</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Port</span><span class=\"o\">.</span><span class=\"n\">tcp</span><span class=\"p\">(</span><span class=\"mi\">80</span><span class=\"p\">),</span> <span class=\"s2\">\"Allow between fleets\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">app_fleet</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">allow_from_any_ipv4</span><span class=\"p\">(</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Port</span><span class=\"o\">.</span><span class=\"n\">tcp</span><span class=\"p\">(</span><span class=\"mi\">80</span><span class=\"p\">),</span> <span class=\"s2\">\"Allow from load balancer\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Port Ranges</h3>\n<p>The connections that are allowed are specified by port ranges. A number of classes provide\nthe connection specifier:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Port</span><span class=\"o\">.</span><span class=\"n\">tcp</span><span class=\"p\">(</span><span class=\"mi\">80</span><span class=\"p\">)</span>\n<span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Port</span><span class=\"o\">.</span><span class=\"n\">tcp_range</span><span class=\"p\">(</span><span class=\"mi\">60000</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">)</span>\n<span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Port</span><span class=\"o\">.</span><span class=\"n\">all_tcp</span><span class=\"p\">()</span>\n<span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Port</span><span class=\"o\">.</span><span class=\"n\">all_traffic</span><span class=\"p\">()</span>\n</pre>\n<blockquote>\n<p>NOTE: This set is not complete yet; for example, there is no library support for ICMP at the moment.\nHowever, you can write your own classes to implement those.</p>\n</blockquote>\n<h3>Default Ports</h3>\n<p>Some Constructs have default ports associated with them. For example, the\nlistener of a load balancer does (it's the public port), or instances of an\nRDS database (it's the port the database is accepting connections on).</p>\n<p>If the object you're calling the peering method on has a default port associated with it, you can call\n<code>allowDefaultPortFrom()</code> and omit the port specifier. If the argument has an associated default port, call\n<code>allowDefaultPortTo()</code>.</p>\n<p>For example:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"c1\"># Port implicit in listener</span>\n<span class=\"n\">listener</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">allow_default_port_from_any_ipv4</span><span class=\"p\">(</span><span class=\"s2\">\"Allow public\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Port implicit in peer</span>\n<span class=\"n\">app_fleet</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">allow_default_port_to</span><span class=\"p\">(</span><span class=\"n\">rds_database</span><span class=\"p\">,</span> <span class=\"s2\">\"Fleet can access database\"</span><span class=\"p\">)</span>\n</pre>\n<h2>Machine Images (AMIs)</h2>\n<p>AMIs control the OS that gets launched when you start your EC2 instance. The EC2\nlibrary contains constructs to select the AMI you want to use.</p>\n<p>Depending on the type of AMI, you select it a different way. Here are some\nexamples of things you might want to use:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"c1\"># Pick the right Amazon Linux edition. All arguments shown are optional</span>\n<span class=\"c1\"># and will default to these values when omitted.</span>\n<span class=\"n\">amzn_linux</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">MachineImage</span><span class=\"o\">.</span><span class=\"n\">latest_amazon_linux</span><span class=\"p\">(</span>\n    <span class=\"n\">generation</span><span class=\"o\">=</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">AmazonLinuxGeneration</span><span class=\"o\">.</span><span class=\"n\">AMAZON_LINUX</span><span class=\"p\">,</span>\n    <span class=\"n\">edition</span><span class=\"o\">=</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">AmazonLinuxEdition</span><span class=\"o\">.</span><span class=\"n\">STANDARD</span><span class=\"p\">,</span>\n    <span class=\"n\">virtualization</span><span class=\"o\">=</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">AmazonLinuxVirt</span><span class=\"o\">.</span><span class=\"n\">HVM</span><span class=\"p\">,</span>\n    <span class=\"n\">storage</span><span class=\"o\">=</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">AmazonLinuxStorage</span><span class=\"o\">.</span><span class=\"n\">GENERAL_PURPOSE</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Pick a Windows edition to use</span>\n<span class=\"n\">windows</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">MachineImage</span><span class=\"o\">.</span><span class=\"n\">latest_windows</span><span class=\"p\">(</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">WindowsVersion</span><span class=\"o\">.</span><span class=\"n\">WINDOWS_SERVER_2019_ENGLISH_FULL_BASE</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Look up the most recent image matching a set of AMI filters.</span>\n<span class=\"c1\"># In this case, look up the NAT instance AMI, by using a wildcard</span>\n<span class=\"c1\"># in the 'name' field:</span>\n<span class=\"n\">nat_ami</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">MachineImage</span><span class=\"o\">.</span><span class=\"n\">lookup</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"amzn-ami-vpc-nat-*\"</span><span class=\"p\">,</span>\n    <span class=\"n\">owners</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"amazon\"</span><span class=\"p\">]</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># For other custom (Linux) images, instantiate a `GenericLinuxImage` with</span>\n<span class=\"c1\"># a map giving the AMI to in for each region:</span>\n<span class=\"n\">linux</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">MachineImage</span><span class=\"o\">.</span><span class=\"n\">generic_linux</span><span class=\"p\">({</span>\n    <span class=\"s2\">\"us-east-1\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ami-97785bed\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"eu-west-1\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ami-12345678\"</span>\n<span class=\"p\">})</span>\n\n<span class=\"c1\"># For other custom (Windows) images, instantiate a `GenericWindowsImage` with</span>\n<span class=\"c1\"># a map giving the AMI to in for each region:</span>\n<span class=\"n\">generic_windows</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">MachineImage</span><span class=\"o\">.</span><span class=\"n\">generic_windows</span><span class=\"p\">({</span>\n    <span class=\"s2\">\"us-east-1\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ami-97785bed\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"eu-west-1\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ami-12345678\"</span>\n<span class=\"p\">})</span>\n</pre>\n<blockquote>\n<p>NOTE: The AMIs selected by <code>MachineImage.lookup()</code> will be cached in\n<code>cdk.context.json</code>, so that your AutoScalingGroup instances aren't replaced while\nyou are making unrelated changes to your CDK app.</p>\n<p>To query for the latest AMI again, remove the relevant cache entry from\n<code>cdk.context.json</code>, or use the <code>cdk context</code> command. For more information, see\n<a href=\"https://docs.aws.amazon.com/cdk/latest/guide/context.html\" rel=\"nofollow\">Runtime Context</a> in the CDK\ndeveloper guide.</p>\n</blockquote>\n<h2>VPN connections to a VPC</h2>\n<p>Create your VPC with VPN connections by specifying the <code>vpnConnections</code> props (keys are construct <code>id</code>s):</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">vpc</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Vpc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"MyVpc\"</span><span class=\"p\">,</span>\n    <span class=\"n\">vpn_connections</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">\"dynamic\"</span><span class=\"p\">:</span> <span class=\"n\">VpnConnectionOptions</span><span class=\"p\">(</span><span class=\"c1\"># Dynamic routing (BGP)</span>\n            <span class=\"n\">ip</span><span class=\"o\">=</span><span class=\"s2\">\"1.2.3.4\"</span><span class=\"p\">),</span>\n        <span class=\"s2\">\"static\"</span><span class=\"p\">:</span> <span class=\"n\">VpnConnectionOptions</span><span class=\"p\">(</span><span class=\"c1\"># Static routing</span>\n            <span class=\"n\">ip</span><span class=\"o\">=</span><span class=\"s2\">\"4.5.6.7\"</span><span class=\"p\">,</span>\n            <span class=\"n\">static_routes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"192.168.10.0/24\"</span><span class=\"p\">,</span> <span class=\"s2\">\"192.168.20.0/24\"</span>\n            <span class=\"p\">])</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre>\n<p>To create a VPC that can accept VPN connections, set <code>vpnGateway</code> to <code>true</code>:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">vpc</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Vpc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"MyVpc\"</span><span class=\"p\">,</span>\n    <span class=\"n\">vpn_gateway</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n</pre>\n<p>VPN connections can then be added:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">vpc</span><span class=\"o\">.</span><span class=\"n\">add_vpn_connection</span><span class=\"p\">(</span><span class=\"s2\">\"Dynamic\"</span><span class=\"p\">,</span>\n    <span class=\"n\">ip</span><span class=\"o\">=</span><span class=\"s2\">\"1.2.3.4\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>By default, routes will be propagated on the route tables associated with the private subnets. If no\nprivate subnets exists, isolated subnets are used. If no isolated subnets exists, public subnets are\nused. Use the <code>Vpc</code> property <code>vpnRoutePropagation</code> to customize this behavior.</p>\n<p>VPN connections expose <a href=\"https://github.com/aws/aws-cdk/blob/master/packages/%40aws-cdk/aws-cloudwatch/README.md\" rel=\"nofollow\">metrics (cloudwatch.Metric)</a> across all tunnels in the account/region and per connection:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"c1\"># Across all tunnels in the account/region</span>\n<span class=\"n\">all_data_out</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">VpnConnection</span><span class=\"o\">.</span><span class=\"n\">metric_all_tunnel_data_out</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># For a specific vpn connection</span>\n<span class=\"n\">vpn_connection</span> <span class=\"o\">=</span> <span class=\"n\">vpc</span><span class=\"o\">.</span><span class=\"n\">add_vpn_connection</span><span class=\"p\">(</span><span class=\"s2\">\"Dynamic\"</span><span class=\"p\">,</span>\n    <span class=\"n\">ip</span><span class=\"o\">=</span><span class=\"s2\">\"1.2.3.4\"</span>\n<span class=\"p\">)</span>\n<span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"n\">vpn_connection</span><span class=\"o\">.</span><span class=\"n\">metric_tunnel_state</span><span class=\"p\">()</span>\n</pre>\n<h2>VPC endpoints</h2>\n<p>A VPC endpoint enables you to privately connect your VPC to supported AWS services and VPC endpoint services powered by PrivateLink without requiring an internet gateway, NAT device, VPN connection, or AWS Direct Connect connection. Instances in your VPC do not require public IP addresses to communicate with resources in the service. Traffic between your VPC and the other service does not leave the Amazon network.</p>\n<p>Endpoints are virtual devices. They are horizontally scaled, redundant, and highly available VPC components that allow communication between instances in your VPC and services without imposing availability risks or bandwidth constraints on your network traffic.</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"c1\"># Add gateway endpoints when creating the VPC</span>\n<span class=\"n\">vpc</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Vpc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"MyVpc\"</span><span class=\"p\">,</span>\n    <span class=\"n\">gateway_endpoints</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">\"S3\"</span><span class=\"p\">:</span> <span class=\"n\">GatewayVpcEndpointOptions</span><span class=\"p\">(</span>\n            <span class=\"n\">service</span><span class=\"o\">=</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">GatewayVpcEndpointAwsService</span><span class=\"o\">.</span><span class=\"n\">S3</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Alternatively gateway endpoints can be added on the VPC</span>\n<span class=\"n\">dynamo_db_endpoint</span> <span class=\"o\">=</span> <span class=\"n\">vpc</span><span class=\"o\">.</span><span class=\"n\">add_gateway_endpoint</span><span class=\"p\">(</span><span class=\"s2\">\"DynamoDbEndpoint\"</span><span class=\"p\">,</span>\n    <span class=\"n\">service</span><span class=\"o\">=</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">GatewayVpcEndpointAwsService</span><span class=\"o\">.</span><span class=\"n\">DYNAMODB</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># This allows to customize the endpoint policy</span>\n<span class=\"n\">dynamo_db_endpoint</span><span class=\"o\">.</span><span class=\"n\">add_to_policy</span><span class=\"p\">(</span>\n    <span class=\"n\">iam</span><span class=\"o\">.</span><span class=\"n\">PolicyStatement</span><span class=\"p\">(</span><span class=\"c1\"># Restrict to listing and describing tables</span>\n        <span class=\"n\">principals</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">iam</span><span class=\"o\">.</span><span class=\"n\">AnyPrincipal</span><span class=\"p\">()],</span>\n        <span class=\"n\">actions</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"dynamodb:DescribeTable\"</span><span class=\"p\">,</span> <span class=\"s2\">\"dynamodb:ListTables\"</span><span class=\"p\">],</span>\n        <span class=\"n\">resources</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"*\"</span><span class=\"p\">]))</span>\n\n<span class=\"c1\"># Add an interface endpoint</span>\n<span class=\"n\">vpc</span><span class=\"o\">.</span><span class=\"n\">add_interface_endpoint</span><span class=\"p\">(</span><span class=\"s2\">\"EcrDockerEndpoint\"</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"service\"</span><span class=\"p\">:</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">InterfaceVpcEndpointAwsService</span><span class=\"o\">.</span><span class=\"n\">ECR_DOCKER</span>\n<span class=\"p\">})</span>\n</pre>\n<p>Not all VPC endpoint services are available in all availability zones. By default,\nCDK will place a VPC endpoint in one subnet per AZ, because CDK doesn't know about\nunavailable AZs. You can determine what the available AZs are from the AWS console.\nThe AZs CDK places the VPC endpoint in can be configured as follows:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">InterfaceVpcEndpoint</span><span class=\"p\">(</span><span class=\"n\">stack</span><span class=\"p\">,</span> <span class=\"s2\">\"VPC Endpoint\"</span><span class=\"p\">,</span>\n    <span class=\"n\">vpc</span><span class=\"o\">=</span><span class=\"n\">vpc</span><span class=\"p\">,</span>\n    <span class=\"n\">service</span><span class=\"o\">=</span><span class=\"n\">InterfaceVpcEndpointService</span><span class=\"p\">(</span><span class=\"s2\">\"com.amazonaws.vpce.us-east-1.vpce-svc-uuddlrlrbastrtsvc\"</span><span class=\"p\">,</span> <span class=\"mi\">443</span><span class=\"p\">),</span>\n    <span class=\"c1\"># Choose which availability zones to place the VPC endpoint in, based on</span>\n    <span class=\"c1\"># available AZs</span>\n    <span class=\"n\">subnets</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">\"availability_zones\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"us-east-1a\"</span><span class=\"p\">,</span> <span class=\"s2\">\"us-east-1c\"</span><span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre>\n<h3>Security groups for interface VPC endpoints</h3>\n<p>By default, interface VPC endpoints create a new security group and traffic is <strong>not</strong>\nautomatically allowed from the VPC CIDR.</p>\n<p>Use the <code>connections</code> object to allow traffic to flow to the endpoint:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">my_endpoint</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">allow_default_port_from_any_ipv4</span><span class=\"p\">()</span>\n</pre>\n<p>Alternatively, existing security groups can be used by specifying the <code>securityGroups</code> prop.</p>\n<h2>VPC endpoint services</h2>\n<p>A VPC endpoint service enables you to expose a Network Load Balancer(s) as a provider service to consumers, who connect to your service over a VPC endpoint. You can restrict access to your service via whitelisted principals (anything that extends ArnPrincipal), and require that new connections be manually accepted.</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">VpcEndpointService</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"EndpointService\"</span><span class=\"p\">,</span>\n    <span class=\"n\">vpc_endpoint_service_load_balancers</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">network_load_balancer1</span><span class=\"p\">,</span> <span class=\"n\">network_load_balancer2</span><span class=\"p\">],</span>\n    <span class=\"n\">acceptance_required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">whitelisted_principals</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ArnPrincipal</span><span class=\"p\">(</span><span class=\"s2\">\"arn:aws:iam::123456789012:root\"</span><span class=\"p\">)]</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>Bastion Hosts</h2>\n<p>A bastion host functions as an instance used to access servers and resources in a VPC without open up the complete VPC on a network level.\nYou can use bastion hosts using a standard SSH connection targetting port 22 on the host. As an alternative, you can connect the SSH connection\nfeature of AWS Systems Manager Session Manager, which does not need an opened security group. (<a href=\"https://aws.amazon.com/about-aws/whats-new/2019/07/session-manager-launches-tunneling-support-for-ssh-and-scp/\" rel=\"nofollow\">https://aws.amazon.com/about-aws/whats-new/2019/07/session-manager-launches-tunneling-support-for-ssh-and-scp/</a>)</p>\n<p>A default bastion host for use via SSM can be configured like:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">host</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">BastionHostLinux</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"BastionHost\"</span><span class=\"p\">,</span> <span class=\"n\">vpc</span><span class=\"o\">=</span><span class=\"n\">vpc</span><span class=\"p\">)</span>\n</pre>\n<p>If you want to connect from the internet using SSH, you need to place the host into a public subnet. You can then configure allowed source hosts.</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">host</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">BastionHostLinux</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"BastionHost\"</span><span class=\"p\">,</span>\n    <span class=\"n\">vpc</span><span class=\"o\">=</span><span class=\"n\">vpc</span><span class=\"p\">,</span>\n    <span class=\"n\">subnet_selection</span><span class=\"o\">=</span><span class=\"n\">SubnetSelection</span><span class=\"p\">(</span><span class=\"n\">subnet_type</span><span class=\"o\">=</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">SubnetType</span><span class=\"o\">.</span><span class=\"n\">PUBLIC</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"n\">host</span><span class=\"o\">.</span><span class=\"n\">allow_ssh_access_from</span><span class=\"p\">(</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Peer</span><span class=\"o\">.</span><span class=\"n\">ipv4</span><span class=\"p\">(</span><span class=\"s2\">\"1.2.3.4/32\"</span><span class=\"p\">))</span>\n</pre>\n<p>As there are no SSH public keys deployed on this machine, you need to use <a href=\"https://aws.amazon.com/de/blogs/compute/new-using-amazon-ec2-instance-connect-for-ssh-access-to-your-ec2-instances/\" rel=\"nofollow\">EC2 Instance Connect</a>\nwith the command <code>aws ec2-instance-connect send-ssh-public-key</code> to provide your SSH public key.</p>\n<h2>Block Devices</h2>\n<p>To add EBS block device mappings, specify the <code>blockDeviceMappings</code> property. The follow example sets the EBS-backed\nroot device (<code>/dev/sda1</code>) size to 50 GiB, and adds another EBS-backed device mapped to <code>/dev/sdm</code> that is 100 GiB in\nsize:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"Instance\"</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"s2\">\"block_device_mappings\"</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n        <span class=\"s2\">\"device_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/dev/sda1\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"volume\"</span><span class=\"p\">:</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">BlockDeviceVolume</span><span class=\"o\">.</span><span class=\"n\">ebs</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n    <span class=\"p\">},</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"device_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/dev/sdm\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"volume\"</span><span class=\"p\">:</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">BlockDeviceVolume</span><span class=\"o\">.</span><span class=\"n\">ebs</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">})</span>\n</pre>\n<h2>VPC Flow Logs</h2>\n<p>VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. Flow log data can be published to Amazon CloudWatch Logs and Amazon S3. After you've created a flow log, you can retrieve and view its data in the chosen destination. (<a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html\" rel=\"nofollow\">https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html</a>).</p>\n<p>By default a flow log will be created with CloudWatch Logs as the destination.</p>\n<p>You can create a flow log like this:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">FlowLog</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"FlowLog\"</span><span class=\"p\">,</span>\n    <span class=\"n\">resource_type</span><span class=\"o\">=</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">FlowLogResourceType</span><span class=\"o\">.</span><span class=\"n\">from_vpc</span><span class=\"p\">(</span><span class=\"n\">vpc</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Or you can add a Flow Log to a VPC by using the addFlowLog method like this:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">vpc</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Vpc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"Vpc\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">vpc</span><span class=\"o\">.</span><span class=\"n\">add_flow_log</span><span class=\"p\">(</span><span class=\"s2\">\"FlowLog\"</span><span class=\"p\">)</span>\n</pre>\n<p>You can also add multiple flow logs with different destinations.</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">vpc</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Vpc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"Vpc\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">vpc</span><span class=\"o\">.</span><span class=\"n\">add_flow_log</span><span class=\"p\">(</span><span class=\"s2\">\"FlowLogS3\"</span><span class=\"p\">,</span>\n    <span class=\"n\">destination</span><span class=\"o\">=</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">FlowLogDestination</span><span class=\"o\">.</span><span class=\"n\">to_s3</span><span class=\"p\">()</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">vpc</span><span class=\"o\">.</span><span class=\"n\">add_flow_log</span><span class=\"p\">(</span><span class=\"s2\">\"FlowLogCloudWatch\"</span><span class=\"p\">,</span>\n    <span class=\"n\">traffic_type</span><span class=\"o\">=</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">FlowLogTrafficType</span><span class=\"o\">.</span><span class=\"n\">REJECT</span>\n<span class=\"p\">)</span>\n</pre>\n<p>By default the CDK will create the necessary resources for the destination. For the CloudWatch Logs destination\nit will create a CloudWatch Logs Log Group as well as the IAM role with the necessary permissions to publish to\nthe log group. In the case of an S3 destination, it will create the S3 bucket.</p>\n<p>If you want to customize any of the destination resources you can provide your own as part of the <code>destination</code>.</p>\n<p><em>CloudWatch Logs</em></p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">log_group</span> <span class=\"o\">=</span> <span class=\"n\">logs</span><span class=\"o\">.</span><span class=\"n\">LogGroup</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"MyCustomLogGroup\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">role</span> <span class=\"o\">=</span> <span class=\"n\">iam</span><span class=\"o\">.</span><span class=\"n\">Role</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"MyCustomRole\"</span><span class=\"p\">,</span>\n    <span class=\"n\">assumed_by</span><span class=\"o\">=</span><span class=\"n\">iam</span><span class=\"o\">.</span><span class=\"n\">ServicePrincipal</span><span class=\"p\">(</span><span class=\"s2\">\"vpc-flow-logs.amazonaws.com\"</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">FlowLog</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"FlowLog\"</span><span class=\"p\">,</span>\n    <span class=\"n\">resource_type</span><span class=\"o\">=</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">FlowLogResourceType</span><span class=\"o\">.</span><span class=\"n\">from_vpc</span><span class=\"p\">(</span><span class=\"n\">vpc</span><span class=\"p\">),</span>\n    <span class=\"n\">destination</span><span class=\"o\">=</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">FlowLogDestination</span><span class=\"o\">.</span><span class=\"n\">to_cloud_watch_logs</span><span class=\"p\">(</span><span class=\"n\">log_group</span><span class=\"p\">,</span> <span class=\"n\">role</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre>\n<p><em>S3</em></p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">bucket</span> <span class=\"o\">=</span> <span class=\"n\">s3</span><span class=\"o\">.</span><span class=\"n\">Bucket</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"MyCustomBucket\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">FlowLog</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"FlowLog\"</span><span class=\"p\">,</span>\n    <span class=\"n\">resource_type</span><span class=\"o\">=</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">FlowLogResourceType</span><span class=\"o\">.</span><span class=\"n\">from_vpc</span><span class=\"p\">(</span><span class=\"n\">vpc</span><span class=\"p\">),</span>\n    <span class=\"n\">destination</span><span class=\"o\">=</span><span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">FlowLogDestination</span><span class=\"o\">.</span><span class=\"n\">to_s3</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>User Data</h2>\n<p>User data enables you to run a script when your instances start up.  In order to configure these scripts you can add commands directly to the script\nor you can use the UserData's convenience functions to aid in the creation of your script.</p>\n<p>A user data could be configured to run a script found in an asset through the following:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">asset</span> <span class=\"o\">=</span> <span class=\"n\">Asset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"Asset\"</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">__dirname</span><span class=\"p\">,</span> <span class=\"s2\">\"configure.sh\"</span><span class=\"p\">))</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">ec2</span><span class=\"o\">.</span><span class=\"n\">Instance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"Instance\"</span><span class=\"p\">,</span> <span class=\"p\">{})</span>\n<span class=\"n\">local_path</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">user_data</span><span class=\"o\">.</span><span class=\"n\">add_s3_download_command</span><span class=\"p\">(</span>\n    <span class=\"n\">bucket</span><span class=\"o\">=</span><span class=\"n\">asset</span><span class=\"o\">.</span><span class=\"n\">bucket</span><span class=\"p\">,</span>\n    <span class=\"n\">bucket_key</span><span class=\"o\">=</span><span class=\"n\">asset</span><span class=\"o\">.</span><span class=\"n\">s3_object_key</span>\n<span class=\"p\">)</span>\n<span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">user_data</span><span class=\"o\">.</span><span class=\"n\">add_execute_file_command</span><span class=\"p\">(</span>\n    <span class=\"n\">file_path</span><span class=\"o\">=</span><span class=\"n\">local_path</span><span class=\"p\">,</span>\n    <span class=\"n\">arguments</span><span class=\"o\">=</span><span class=\"s2\">\"--verbose -y\"</span>\n<span class=\"p\">)</span>\n<span class=\"n\">asset</span><span class=\"o\">.</span><span class=\"n\">grant_read</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">role</span><span class=\"p\">)</span>\n</pre>\n<h2>Importing existing subnet</h2>\n<p>To import an existing Subnet, call <code>Subnet.fromSubnetAttributes()</code> or\n<code>Subnet.fromSubnetId()</code>. Only if you supply the subnet's Availability Zone\nand Route Table Ids when calling <code>Subnet.fromSubnetAttributes()</code> will you be\nable to use the CDK features that use these values (such as selecting one\nsubnet per AZ).</p>\n<p>Importing an existing subnet looks like this:</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"c1\"># Supply all properties</span>\n<span class=\"n\">subnet</span> <span class=\"o\">=</span> <span class=\"n\">Subnet</span><span class=\"o\">.</span><span class=\"n\">from_subnet_attributes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"SubnetFromAttributes\"</span><span class=\"p\">,</span>\n    <span class=\"n\">subnet_id</span><span class=\"o\">=</span><span class=\"s2\">\"s-1234\"</span><span class=\"p\">,</span>\n    <span class=\"n\">availability_zone</span><span class=\"o\">=</span><span class=\"s2\">\"pub-az-4465\"</span><span class=\"p\">,</span>\n    <span class=\"n\">route_table_id</span><span class=\"o\">=</span><span class=\"s2\">\"rt-145\"</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Supply only subnet id</span>\n<span class=\"n\">subnet</span> <span class=\"o\">=</span> <span class=\"n\">Subnet</span><span class=\"o\">.</span><span class=\"n\">from_subnet_id</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"SubnetFromId\"</span><span class=\"p\">,</span> <span class=\"s2\">\"s-1234\"</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 7173687, "releases": {"0.26.0": [{"comment_text": "", "digests": {"md5": "ad06a3512107ff3850dbec6bd556f7dd", "sha256": "47623a93d1674a0a6975f1c06652a00ba47b741d9e65e7b8baefc07cbc5e1c19"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-0.26.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ad06a3512107ff3850dbec6bd556f7dd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 371671, "upload_time": "2019-03-28T17:36:12", "upload_time_iso_8601": "2019-03-28T17:36:12.793059Z", "url": "https://files.pythonhosted.org/packages/ba/67/92f9319388577e824b8beb2874ddc76a5515ea5970b21427d4e5a6bc7c0d/aws_cdk.aws_ec2-0.26.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "95da77f1c5e8890e1abe8a5754673437", "sha256": "b493c4780ece000dc9ab26b509569f1c045ca343fdce673ea7ad6eb5270ed5d4"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-0.26.0.tar.gz", "has_sig": false, "md5_digest": "95da77f1c5e8890e1abe8a5754673437", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 378075, "upload_time": "2019-03-28T17:39:04", "upload_time_iso_8601": "2019-03-28T17:39:04.340546Z", "url": "https://files.pythonhosted.org/packages/51/d2/f4781e67829765a4346217dfc4d6e0745fb1f3d623474a8d2d1abaef8752/aws-cdk.aws-ec2-0.26.0.tar.gz", "yanked": false}], "0.27.0": [{"comment_text": "", "digests": {"md5": "3bf51202fd2338c3470417c7b3c74610", "sha256": "ad28e6fe641b46a2f607100cdf0231b3619026d4e27b8a1705e2d2f471aaa61d"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-0.27.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3bf51202fd2338c3470417c7b3c74610", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 371741, "upload_time": "2019-03-28T22:18:58", "upload_time_iso_8601": "2019-03-28T22:18:58.568517Z", "url": "https://files.pythonhosted.org/packages/3b/a2/dbb317ca81280a8272cb6b3ae90266571e334c0ff965cc58a257220b558d/aws_cdk.aws_ec2-0.27.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c7c997636fda95f361ebd4b04ab2b265", "sha256": "79875d5f580f97ec1287008c20dc443b6056caba6504791b3c12e998f6d97d08"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-0.27.0.tar.gz", "has_sig": false, "md5_digest": "c7c997636fda95f361ebd4b04ab2b265", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 378268, "upload_time": "2019-03-28T22:20:56", "upload_time_iso_8601": "2019-03-28T22:20:56.224741Z", "url": "https://files.pythonhosted.org/packages/45/18/fcd1a91ace629ae155722516a0c944e4a6d1346a6209f7b057f69458ae8d/aws-cdk.aws-ec2-0.27.0.tar.gz", "yanked": false}], "0.28.0": [{"comment_text": "", "digests": {"md5": "f88c234735b2a049681a75a91ce36cfc", "sha256": "0549814a9fa6046c25c77c9e320def4f886187733a2012ea871502b770201669"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-0.28.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f88c234735b2a049681a75a91ce36cfc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 373998, "upload_time": "2019-04-04T15:59:53", "upload_time_iso_8601": "2019-04-04T15:59:53.755576Z", "url": "https://files.pythonhosted.org/packages/15/2d/e184779bf6d2091e524f234063ae9e0861a6976b72bd4c642c2ed6f528cd/aws_cdk.aws_ec2-0.28.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4ef2e3c03e22afce347ae57809873fa", "sha256": "bb3d124d1a8378314bb6f648b384a3029c09bfbcc3b79ec12e125f3c9bb520aa"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-0.28.0.tar.gz", "has_sig": false, "md5_digest": "a4ef2e3c03e22afce347ae57809873fa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 381197, "upload_time": "2019-04-04T16:01:55", "upload_time_iso_8601": "2019-04-04T16:01:55.183404Z", "url": "https://files.pythonhosted.org/packages/75/d5/9b51173a019e094177fe537685647e45b54fa19d15da6c2ead8af1697045/aws-cdk.aws-ec2-0.28.0.tar.gz", "yanked": false}], "0.29.0": [{"comment_text": "", "digests": {"md5": "27d3032ea683033729fab481df4fbe9e", "sha256": "22c7671e6107cd1be2c6e371a100d06e4c1f16f477d65e4486ddb78c2bcd2a8a"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-0.29.0-py3-none-any.whl", "has_sig": false, "md5_digest": "27d3032ea683033729fab481df4fbe9e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 440243, "upload_time": "2019-04-24T21:44:54", "upload_time_iso_8601": "2019-04-24T21:44:54.018784Z", "url": "https://files.pythonhosted.org/packages/be/02/de6e5abce0993fb5b55cadc0b3b6a77e3124398bff0369aab569824a32ac/aws_cdk.aws_ec2-0.29.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0940746dc904cbe7fe8cddbba0d039af", "sha256": "477624632128dfca15c6f64556603515d7d756ca4420e36ba8988b2b1ecc293d"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-0.29.0.tar.gz", "has_sig": false, "md5_digest": "0940746dc904cbe7fe8cddbba0d039af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 447963, "upload_time": "2019-04-24T21:47:58", "upload_time_iso_8601": "2019-04-24T21:47:58.898964Z", "url": "https://files.pythonhosted.org/packages/0a/b2/02be55f88847bd4f8f04fbc463a049dffe7d4ec09324328b216e199af4dd/aws-cdk.aws-ec2-0.29.0.tar.gz", "yanked": false}], "0.30.0": [{"comment_text": "", "digests": {"md5": "c87f3c23d2062021cf5c93ff8cb156cf", "sha256": "fba80cf2dd79666d452ebaaf65b57f3b5f9a78eafba2ed381782afc3c5dc11f0"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-0.30.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c87f3c23d2062021cf5c93ff8cb156cf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 447088, "upload_time": "2019-05-02T10:52:35", "upload_time_iso_8601": "2019-05-02T10:52:35.405195Z", "url": "https://files.pythonhosted.org/packages/20/0b/dae45ba85b8dc1d0ca7b304302b02ca920278f7fa274afcf0be3f9fe8ea7/aws_cdk.aws_ec2-0.30.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04495498c1559a7cf11ff224f79914f4", "sha256": "102171f89d8ec1ed6f04efa7f8e0764ec3c8cbc45c260901c02c989cf8da6013"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-0.30.0.tar.gz", "has_sig": false, "md5_digest": "04495498c1559a7cf11ff224f79914f4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 455645, "upload_time": "2019-05-02T10:54:42", "upload_time_iso_8601": "2019-05-02T10:54:42.333058Z", "url": "https://files.pythonhosted.org/packages/d9/1b/fc37e71c395edb1171f19db792d560c647b4b5817dd31758b063f7dc8a85/aws-cdk.aws-ec2-0.30.0.tar.gz", "yanked": false}], "0.31.0": [{"comment_text": "", "digests": {"md5": "43af93d27f566119070e9e64e76b1a3f", "sha256": "aa49699adab5d8242fa9af582112ebad625be282f655f6e1cd6557e46ec0ada8"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-0.31.0-py3-none-any.whl", "has_sig": false, "md5_digest": "43af93d27f566119070e9e64e76b1a3f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 446666, "upload_time": "2019-05-07T08:04:51", "upload_time_iso_8601": "2019-05-07T08:04:51.480192Z", "url": "https://files.pythonhosted.org/packages/4d/12/9e3606995fa0464cf614700b1f5e6c2ce3dafc05deff802d86c6d474ddc0/aws_cdk.aws_ec2-0.31.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f65d02cc345b44800095fe8a20a53092", "sha256": "3eafffb0ec0a8415485553e077add23f9367a888fa0e8a25f12945cc6a4b92bc"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-0.31.0.tar.gz", "has_sig": false, "md5_digest": "f65d02cc345b44800095fe8a20a53092", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 455343, "upload_time": "2019-05-07T08:06:57", "upload_time_iso_8601": "2019-05-07T08:06:57.358813Z", "url": "https://files.pythonhosted.org/packages/ee/f7/76b9332593e1b351fff34864520914a062d9f6d9a9f14ec3e42b669d75d3/aws-cdk.aws-ec2-0.31.0.tar.gz", "yanked": false}], "0.32.0": [{"comment_text": "", "digests": {"md5": "f80aa37ae353135907a8b99a4f56ff04", "sha256": "ac4a9b7f0047bd65e51886a0ccb9454c9cf1992f7b5db338b732352e1a7e16bd"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-0.32.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f80aa37ae353135907a8b99a4f56ff04", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 436338, "upload_time": "2019-05-24T10:59:09", "upload_time_iso_8601": "2019-05-24T10:59:09.279019Z", "url": "https://files.pythonhosted.org/packages/7a/6b/3c49627261ca4532f8a3d8bb24618fe1aa5ccfaf636323d764a6ae111c8d/aws_cdk.aws_ec2-0.32.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d1dbbce5e1f3d76d08520c16bca2df0", "sha256": "3df2c12984719f9db7cfc107ce813ed92894f1be19ce0fc0f26fda69cfd1cb7b"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-0.32.0.tar.gz", "has_sig": false, "md5_digest": "5d1dbbce5e1f3d76d08520c16bca2df0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 444284, "upload_time": "2019-05-24T11:01:23", "upload_time_iso_8601": "2019-05-24T11:01:23.388009Z", "url": "https://files.pythonhosted.org/packages/1c/17/fe7c145c317a01ce751f0394e3ea6938107be550e52b2b3f6075b13caa2e/aws-cdk.aws-ec2-0.32.0.tar.gz", "yanked": false}], "0.33.0": [{"comment_text": "", "digests": {"md5": "45da06b2ca269ebdcca7c17a09cd9411", "sha256": "ee60c61127791a581803c43811930efdf39666ab2823e7df0175f42f2f9110b5"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-0.33.0-py3-none-any.whl", "has_sig": false, "md5_digest": "45da06b2ca269ebdcca7c17a09cd9411", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 448357, "upload_time": "2019-05-30T15:46:57", "upload_time_iso_8601": "2019-05-30T15:46:57.770911Z", "url": "https://files.pythonhosted.org/packages/40/eb/a8d43e938c526dd8e04495df22c24849d6a74f3b443e59d925c153f62498/aws_cdk.aws_ec2-0.33.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f70500919f00fdef07914eb9d9682e4f", "sha256": "439a809423ca66d938dd10c001cb7f9e468e1a36de9f202bad8ef566fe2e8426"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-0.33.0.tar.gz", "has_sig": false, "md5_digest": "f70500919f00fdef07914eb9d9682e4f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 457072, "upload_time": "2019-05-30T15:49:20", "upload_time_iso_8601": "2019-05-30T15:49:20.643191Z", "url": "https://files.pythonhosted.org/packages/f5/f0/5882927a9488db02fb4d7f4fc4cec94ec09ef66bdecfa2ffdbb846bd635f/aws-cdk.aws-ec2-0.33.0.tar.gz", "yanked": false}], "0.34.0": [{"comment_text": "", "digests": {"md5": "4e88fdcccaf31a38db80cffd3edb19e5", "sha256": "7713742ab3c7219ac0fbb26713b8ff941f3d0e171e8628f8cc9489effb3352b0"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-0.34.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4e88fdcccaf31a38db80cffd3edb19e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 452637, "upload_time": "2019-06-10T15:38:02", "upload_time_iso_8601": "2019-06-10T15:38:02.192016Z", "url": "https://files.pythonhosted.org/packages/a3/d4/93d1a7259208cd8bd605479ac9ce2efa58c5a424cdc7579d2d775ee17884/aws_cdk.aws_ec2-0.34.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c432ebbc541134c2bad40d5de7b5d7e", "sha256": "823915f497460a8fa2daf69b4620f96bdbe9c4403d56ecfd0b44e96e166bb5a2"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-0.34.0.tar.gz", "has_sig": false, "md5_digest": "9c432ebbc541134c2bad40d5de7b5d7e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 460919, "upload_time": "2019-06-10T15:40:22", "upload_time_iso_8601": "2019-06-10T15:40:22.513869Z", "url": "https://files.pythonhosted.org/packages/73/5f/e802ba6c26ddb10b482add67c02892120405cb6961f30652723d029d8cd5/aws-cdk.aws-ec2-0.34.0.tar.gz", "yanked": false}], "0.35.0": [{"comment_text": "", "digests": {"md5": "061d95516edeb62300cbe64c9606705d", "sha256": "2f36a92e9d375bb49ec4019534eb6b3625ed847a84090f79fab51b048324ef75"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-0.35.0-py3-none-any.whl", "has_sig": false, "md5_digest": "061d95516edeb62300cbe64c9606705d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 488975, "upload_time": "2019-06-19T17:11:04", "upload_time_iso_8601": "2019-06-19T17:11:04.183604Z", "url": "https://files.pythonhosted.org/packages/7c/71/322b6bb9167407fcdaa26e86bb2de45bacda17cd36302a3e4817e5c87be0/aws_cdk.aws_ec2-0.35.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ecc3f41717cc51b0c74b80e9a0bd993f", "sha256": "3026ec84027ba9941c5e33f180ff24fd3d566db9c903ae5ae47a3a9995f6a7ba"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-0.35.0.tar.gz", "has_sig": false, "md5_digest": "ecc3f41717cc51b0c74b80e9a0bd993f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 498234, "upload_time": "2019-06-19T17:13:40", "upload_time_iso_8601": "2019-06-19T17:13:40.512671Z", "url": "https://files.pythonhosted.org/packages/4f/de/7c576db8f5fca48464bcf0e4cb6c7413cbf854c834a5bb8b70aec6f3a9e5/aws-cdk.aws-ec2-0.35.0.tar.gz", "yanked": false}], "0.36.0": [{"comment_text": "", "digests": {"md5": "88f3abd6f7b204792de7d42f5c5c13f9", "sha256": "89b88db39336a4b6f1ca5f3989da00f9d1cf06f60bd086a9f3ac17d5ce9b5b1a"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-0.36.0-py3-none-any.whl", "has_sig": false, "md5_digest": "88f3abd6f7b204792de7d42f5c5c13f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 486372, "upload_time": "2019-06-25T15:06:00", "upload_time_iso_8601": "2019-06-25T15:06:00.067580Z", "url": "https://files.pythonhosted.org/packages/e3/02/e797862bd3e98ef7235f8d3e57817a1fdd0de7088114f423d9eb57b12be7/aws_cdk.aws_ec2-0.36.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a6bc9c3fa0c4a09c31ad712943dd0ff0", "sha256": "f85deb527ea1e9e5ebede18742ebcffb301ea167c4b542b6de2e95474911477c"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-0.36.0.tar.gz", "has_sig": false, "md5_digest": "a6bc9c3fa0c4a09c31ad712943dd0ff0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 491207, "upload_time": "2019-06-25T15:08:28", "upload_time_iso_8601": "2019-06-25T15:08:28.514461Z", "url": "https://files.pythonhosted.org/packages/99/24/ed4faf592a008b92a922732c522221d0bda2d54c35f78311da209c8485f9/aws-cdk.aws-ec2-0.36.0.tar.gz", "yanked": false}], "0.36.1": [{"comment_text": "", "digests": {"md5": "7b43befaa27c994776628dd88785a913", "sha256": "a50143dcb960d2c1952e242a2030893bf0ccbddf7d80bb6b915abb651122925e"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-0.36.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7b43befaa27c994776628dd88785a913", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 486355, "upload_time": "2019-07-01T18:04:20", "upload_time_iso_8601": "2019-07-01T18:04:20.629850Z", "url": "https://files.pythonhosted.org/packages/89/f0/8a4825cc4a2fc098dc7e484ae1166c80f06441b13e536edd8c4361aa5528/aws_cdk.aws_ec2-0.36.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "28833467a53398817cea1bc48479f645", "sha256": "86f6a09d796f9078d2c7e227cb9252ac72e9e5def4302bc012d8990776322cd1"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-0.36.1.tar.gz", "has_sig": false, "md5_digest": "28833467a53398817cea1bc48479f645", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 491280, "upload_time": "2019-07-01T18:06:58", "upload_time_iso_8601": "2019-07-01T18:06:58.130082Z", "url": "https://files.pythonhosted.org/packages/0b/51/8e9594a410dfa35ce0e08c640708dda2da110d18652e16b3921eee7ef221/aws-cdk.aws-ec2-0.36.1.tar.gz", "yanked": false}], "0.36.2": [{"comment_text": "", "digests": {"md5": "122c5a15369bd75ee3b6f03344029972", "sha256": "30a4071cf0591ad435eedbfba0eda81be24fec548af3833699dc2b0f100edba6"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-0.36.2-py3-none-any.whl", "has_sig": false, "md5_digest": "122c5a15369bd75ee3b6f03344029972", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 485891, "upload_time": "2019-07-03T13:38:40", "upload_time_iso_8601": "2019-07-03T13:38:40.140068Z", "url": "https://files.pythonhosted.org/packages/d5/87/a2c358dace8c6f0efcf1ca16a10980b4c40870f25d4d3bc90a033ebb2b53/aws_cdk.aws_ec2-0.36.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c495f756e5dd56a27c398dec634e4fa4", "sha256": "db0784fff3ab3f7f6a1fae27784d34dc648f4bb1e4bcac0e2345ff9160f8c7ed"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-0.36.2.tar.gz", "has_sig": false, "md5_digest": "c495f756e5dd56a27c398dec634e4fa4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 490587, "upload_time": "2019-07-03T13:41:06", "upload_time_iso_8601": "2019-07-03T13:41:06.930140Z", "url": "https://files.pythonhosted.org/packages/0b/33/4f8b297fc3b5dc094ed5d5501febdc6dd488772d093ba3cab3712524628e/aws-cdk.aws-ec2-0.36.2.tar.gz", "yanked": false}], "0.37.0": [{"comment_text": "", "digests": {"md5": "766ba3f07781bfccc4f9ba8db37cec0c", "sha256": "12d37743d71089a119fb774346291277838a1e899f65f7170917f83e5c622229"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-0.37.0-py3-none-any.whl", "has_sig": false, "md5_digest": "766ba3f07781bfccc4f9ba8db37cec0c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 485942, "upload_time": "2019-07-04T20:32:42", "upload_time_iso_8601": "2019-07-04T20:32:42.838355Z", "url": "https://files.pythonhosted.org/packages/5f/8b/0590477f2b9be4ffb4a2409159acdfb79fdeed8fc0c1fff8091d7b85910b/aws_cdk.aws_ec2-0.37.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebf672975c42af40ebeae281fc9e1b91", "sha256": "2a804f7ca1931bf4a110047f6d24f4f2d934efa5d2614bc7969ca4ee286eb036"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-0.37.0.tar.gz", "has_sig": false, "md5_digest": "ebf672975c42af40ebeae281fc9e1b91", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 490609, "upload_time": "2019-07-04T20:35:08", "upload_time_iso_8601": "2019-07-04T20:35:08.317155Z", "url": "https://files.pythonhosted.org/packages/e2/82/8de9a9305ebc34af19d96e0de33eb739788115f91dbefe1740f341edbf9c/aws-cdk.aws-ec2-0.37.0.tar.gz", "yanked": false}], "0.38.0": [{"comment_text": "", "digests": {"md5": "0c9afe276253b089853e94ead320fe3a", "sha256": "df0456e0cd099cd47a4815d9c38b14dc1b22b4d7086b94dfad86c83c128cce6f"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-0.38.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0c9afe276253b089853e94ead320fe3a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 504585, "upload_time": "2019-07-08T14:13:37", "upload_time_iso_8601": "2019-07-08T14:13:37.119197Z", "url": "https://files.pythonhosted.org/packages/60/f5/636853aea10287f62d77b95ddc9a24178e43e9cca1703a0bc1ec6f1a6cbe/aws_cdk.aws_ec2-0.38.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6ce4fbe84865c8c64f5c2b1b03c131c", "sha256": "9f3548509dfb5dd880542871d8e0f8b381dc3a0cf21595280d4733cd0a030561"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-0.38.0.tar.gz", "has_sig": false, "md5_digest": "d6ce4fbe84865c8c64f5c2b1b03c131c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 509086, "upload_time": "2019-07-08T14:16:02", "upload_time_iso_8601": "2019-07-08T14:16:02.238780Z", "url": "https://files.pythonhosted.org/packages/7d/fd/1675252f35e1a86cb55e64ee05c46c9e553239746dba74aa90854b41071a/aws-cdk.aws-ec2-0.38.0.tar.gz", "yanked": false}], "0.39.0": [{"comment_text": "", "digests": {"md5": "6dd5c6f9a60b02492f5a067e822bdb7a", "sha256": "f5e046f28075036917628f2a9b26e16536deca0f48e13b37d78bad36708553c9"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-0.39.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6dd5c6f9a60b02492f5a067e822bdb7a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 504537, "upload_time": "2019-07-09T00:42:28", "upload_time_iso_8601": "2019-07-09T00:42:28.008244Z", "url": "https://files.pythonhosted.org/packages/a9/22/afd4d0b52a773c1a0d6bf1fee9d116f63ef45bdac3ccec6ea50519859c8a/aws_cdk.aws_ec2-0.39.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad68fb6afaea12b5e294eb890ffe903a", "sha256": "e69070dce394ac6d143578ddd40af6b7796955940bec9634bdf7dc2c46cb1ebf"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-0.39.0.tar.gz", "has_sig": false, "md5_digest": "ad68fb6afaea12b5e294eb890ffe903a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 509014, "upload_time": "2019-07-09T00:44:54", "upload_time_iso_8601": "2019-07-09T00:44:54.033903Z", "url": "https://files.pythonhosted.org/packages/2c/36/912a04c1227a2e264fe35b504fa180e50eca0d462499ec808c9a56f101c2/aws-cdk.aws-ec2-0.39.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "f932ad640e52a0f9a11db07de19a33cf", "sha256": "2364e57a1030f3eddda0b4ef87cf399681dc540be1204b66e3eccf7d795d2f6d"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f932ad640e52a0f9a11db07de19a33cf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 504832, "upload_time": "2019-07-11T15:18:31", "upload_time_iso_8601": "2019-07-11T15:18:31.341846Z", "url": "https://files.pythonhosted.org/packages/87/0c/90b7420d14949283fa21ba9e38de10865cb81fbf1e639b3ef9eef933e408/aws_cdk.aws_ec2-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da412b72278e8df45d7139865c425d64", "sha256": "37cbb4084ce34aaf469e79e54b5c9de827e6bc001611280557817c64483f30c3"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.0.0.tar.gz", "has_sig": false, "md5_digest": "da412b72278e8df45d7139865c425d64", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 509240, "upload_time": "2019-07-11T15:21:15", "upload_time_iso_8601": "2019-07-11T15:21:15.347068Z", "url": "https://files.pythonhosted.org/packages/fe/b3/29ef193ada3785460ecb56c28ccd84922a3709885e2ddc0256440ecb361f/aws-cdk.aws-ec2-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "9d85542ba29751face33db2c6b72a144", "sha256": "777b63c009f860631e2b0e28a849dc57707c13b1129b91e7a71b83e2faf6ca1a"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9d85542ba29751face33db2c6b72a144", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 506744, "upload_time": "2019-07-19T21:24:04", "upload_time_iso_8601": "2019-07-19T21:24:04.693373Z", "url": "https://files.pythonhosted.org/packages/e9/f8/fae171dee1cac3862a778acbf0f09a7f6c151b577d00774e6f63034322aa/aws_cdk.aws_ec2-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "55885017aa0b40e609aaae1eefd81e74", "sha256": "6639b10e1eb90eb57e1a1832cf82e4d71285b74bb8b8a23b12a2f6456419b07a"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.1.0.tar.gz", "has_sig": false, "md5_digest": "55885017aa0b40e609aaae1eefd81e74", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 511247, "upload_time": "2019-07-19T21:26:37", "upload_time_iso_8601": "2019-07-19T21:26:37.896438Z", "url": "https://files.pythonhosted.org/packages/1a/24/0354426cb8735d9765a9ba3ff1178d313f6aa7cbc88ab7fab29f1e2e6eca/aws-cdk.aws-ec2-1.1.0.tar.gz", "yanked": false}], "1.10.0": [{"comment_text": "", "digests": {"md5": "47a660dd10518c43b8d39e232f9e0b66", "sha256": "e302255a274e2907157aa81a54df485691014dd8d97224319d81721decb11ce9"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.10.0-py3-none-any.whl", "has_sig": false, "md5_digest": "47a660dd10518c43b8d39e232f9e0b66", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 586423, "upload_time": "2019-09-30T09:19:09", "upload_time_iso_8601": "2019-09-30T09:19:09.480457Z", "url": "https://files.pythonhosted.org/packages/b8/79/fc32fdafc8e7c464976e536197674e3c7d6dd99b754c6a92a742ef9257fb/aws_cdk.aws_ec2-1.10.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "406a1e1b61eabcea5ff1284f1f9c4791", "sha256": "1ddf550a5df1b42950185a529df91be18151b124ec037b68e6dfb138e0a3b324"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.10.0.tar.gz", "has_sig": false, "md5_digest": "406a1e1b61eabcea5ff1284f1f9c4791", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 596430, "upload_time": "2019-09-30T09:22:32", "upload_time_iso_8601": "2019-09-30T09:22:32.046213Z", "url": "https://files.pythonhosted.org/packages/72/b6/63051364752ce79551dc9d80d693361da5a8b26dd2353d185f418088ff28/aws-cdk.aws-ec2-1.10.0.tar.gz", "yanked": false}], "1.10.1": [{"comment_text": "", "digests": {"md5": "e855a0ec25759cadba68fc0c1d5f0b2d", "sha256": "36a9b0dfddba5983c7e146762e621ebb2033aa1644ff2cbf1f9c7023fe716920"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.10.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e855a0ec25759cadba68fc0c1d5f0b2d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 586467, "upload_time": "2019-10-01T15:33:09", "upload_time_iso_8601": "2019-10-01T15:33:09.054785Z", "url": "https://files.pythonhosted.org/packages/a0/84/3bd13f90306f7468925c974e7e439c7298d57981c2d9627ef54b26e8fe35/aws_cdk.aws_ec2-1.10.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8bd8f5d932cb1d0a2c49339f1aeb3a82", "sha256": "7ae53835b02366eb42e5cf39d93e3f48a09ccf99f3bdd22a58fda5f9c6e2f936"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.10.1.tar.gz", "has_sig": false, "md5_digest": "8bd8f5d932cb1d0a2c49339f1aeb3a82", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 596484, "upload_time": "2019-10-01T15:39:55", "upload_time_iso_8601": "2019-10-01T15:39:55.798780Z", "url": "https://files.pythonhosted.org/packages/06/03/5bea6ed2a039b55d0b813856164bafb16a60d921ec4f11a4992d2548415c/aws-cdk.aws-ec2-1.10.1.tar.gz", "yanked": false}], "1.11.0": [{"comment_text": "", "digests": {"md5": "11acafc9900db84984524bca981357bf", "sha256": "fe7c3677917d9dbfc6c55546e89901484287f77b5ec2fc549c6810f707a58475"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.11.0-py3-none-any.whl", "has_sig": false, "md5_digest": "11acafc9900db84984524bca981357bf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 586359, "upload_time": "2019-10-02T19:08:41", "upload_time_iso_8601": "2019-10-02T19:08:41.534597Z", "url": "https://files.pythonhosted.org/packages/68/d3/f5baa23b8ba2a997d85d7a99535e9890d32cd8198c5b83a2709b25146659/aws_cdk.aws_ec2-1.11.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "88388051e14d4b93da83f15db60b1ea9", "sha256": "303f0a818e75220a9d87e91fba88b376feabb10918f060251a76fd078c2c8c3a"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.11.0.tar.gz", "has_sig": false, "md5_digest": "88388051e14d4b93da83f15db60b1ea9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 596377, "upload_time": "2019-10-02T19:12:02", "upload_time_iso_8601": "2019-10-02T19:12:02.237173Z", "url": "https://files.pythonhosted.org/packages/98/fc/5b55cb5b948a26be8713847b2cdaf39e645f90448422d33e085f713a31b3/aws-cdk.aws-ec2-1.11.0.tar.gz", "yanked": false}], "1.12.0": [{"comment_text": "", "digests": {"md5": "ead02d2899b4243a69bf565acbd6b553", "sha256": "35322f134bceb92d664c829db385c498df090268ffa2fcef221d09b6a017461f"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.12.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ead02d2899b4243a69bf565acbd6b553", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 586392, "upload_time": "2019-10-07T16:21:05", "upload_time_iso_8601": "2019-10-07T16:21:05.394784Z", "url": "https://files.pythonhosted.org/packages/52/20/6f5f800e72b37d3142dcb161f749352ffbf024e7675002cc178550a08546/aws_cdk.aws_ec2-1.12.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94ee08b5c7e06b5130cbab307152c293", "sha256": "daa008b29ed1f1cd554be42ecf5e6d2c75f5cabe590206048230d32789822ea6"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.12.0.tar.gz", "has_sig": false, "md5_digest": "94ee08b5c7e06b5130cbab307152c293", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 596383, "upload_time": "2019-10-07T16:24:27", "upload_time_iso_8601": "2019-10-07T16:24:27.086786Z", "url": "https://files.pythonhosted.org/packages/af/08/448e228ab839bea4fe4d9fdd740b3ae79464c7b87935b7889db7155ec4f9/aws-cdk.aws-ec2-1.12.0.tar.gz", "yanked": false}], "1.13.0": [{"comment_text": "", "digests": {"md5": "132b800b178c07e4e004af4ca0d3d57d", "sha256": "ff9ffc330c5455b3b36129623216ed63d0ecfb2beb064fe4d6286224c64e9376"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.13.0-py3-none-any.whl", "has_sig": false, "md5_digest": "132b800b178c07e4e004af4ca0d3d57d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 586355, "upload_time": "2019-10-15T13:15:51", "upload_time_iso_8601": "2019-10-15T13:15:51.051171Z", "url": "https://files.pythonhosted.org/packages/fc/60/58fcc12dc9aac212b085a9a56cdc57edaa79348b5ab6f548c20b93f54df0/aws_cdk.aws_ec2-1.13.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00bd3f09acbc0aabe0712dd7e23215df", "sha256": "bd32db06f0508854e3e372a01f80cd4f2ad856c5e540924f11c7780a839dec97"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.13.0.tar.gz", "has_sig": false, "md5_digest": "00bd3f09acbc0aabe0712dd7e23215df", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 596180, "upload_time": "2019-10-15T13:19:48", "upload_time_iso_8601": "2019-10-15T13:19:48.393785Z", "url": "https://files.pythonhosted.org/packages/d6/8f/db342eb4d24703170bb64194b8e13997158bdd79be7d83d6907dead94c65/aws-cdk.aws-ec2-1.13.0.tar.gz", "yanked": false}], "1.13.1": [{"comment_text": "", "digests": {"md5": "2a4e64fa93575f26583db521c6fb5e2f", "sha256": "21597816076c07a46c0b2ae3fd8bdfb2761cbd6c23ea5321a0b3e1625a59710e"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.13.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2a4e64fa93575f26583db521c6fb5e2f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 586375, "upload_time": "2019-10-15T20:40:33", "upload_time_iso_8601": "2019-10-15T20:40:33.314779Z", "url": "https://files.pythonhosted.org/packages/20/f2/9fe70807688db13cc98632151d89107038d5042f2b41eb516e70580ff22f/aws_cdk.aws_ec2-1.13.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "befbe0e7c7a85daaee085d1689c733c6", "sha256": "e719e8636ef884b97dc52547f66aaa47330e274cbfe59cfcfcb17b4cf6f1dd96"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.13.1.tar.gz", "has_sig": false, "md5_digest": "befbe0e7c7a85daaee085d1689c733c6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 596178, "upload_time": "2019-10-15T20:45:34", "upload_time_iso_8601": "2019-10-15T20:45:34.191213Z", "url": "https://files.pythonhosted.org/packages/26/ac/70fe49d64fb09b8e5d57beef0d24486f8f9898285fb1ab81a77150d34911/aws-cdk.aws-ec2-1.13.1.tar.gz", "yanked": false}], "1.14.0": [{"comment_text": "", "digests": {"md5": "b5bd0ecbd9067bc390263b2d15b671a8", "sha256": "41320d65cdeebf93ff5a7ca1d5f612d545f60df598cefccf9dbcc8e24be44ce9"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.14.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b5bd0ecbd9067bc390263b2d15b671a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 601010, "upload_time": "2019-10-22T07:35:51", "upload_time_iso_8601": "2019-10-22T07:35:51.206782Z", "url": "https://files.pythonhosted.org/packages/01/05/518745856fa6f5044e2fb85eb0f3867671ccc77e43f262279b472f1808e0/aws_cdk.aws_ec2-1.14.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29263b3734e84559d30b6f84aac84df2", "sha256": "90db067641422bcd009a84cfe8ae5840ed3b7f5a104d6171e5ffbcf3d3b6748f"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.14.0.tar.gz", "has_sig": false, "md5_digest": "29263b3734e84559d30b6f84aac84df2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 610731, "upload_time": "2019-10-22T07:39:58", "upload_time_iso_8601": "2019-10-22T07:39:58.534867Z", "url": "https://files.pythonhosted.org/packages/19/1a/e40e0f04c5d8ebf3ef9de8798fa0a2e575f66ee35eb0961d13a65661c1b3/aws-cdk.aws-ec2-1.14.0.tar.gz", "yanked": false}], "1.15.0": [{"comment_text": "", "digests": {"md5": "735c5640b9303e79de01e6d20a09af12", "sha256": "cb96347089133b0a516dd6a01578629400300a4846105ceaade07e27957654ef"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.15.0-py3-none-any.whl", "has_sig": false, "md5_digest": "735c5640b9303e79de01e6d20a09af12", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 604914, "upload_time": "2019-10-28T13:15:30", "upload_time_iso_8601": "2019-10-28T13:15:30.992121Z", "url": "https://files.pythonhosted.org/packages/38/d3/c3ca7d0656f7828c096ab203e95c84b38e30a0e4ec50645fe7626484651e/aws_cdk.aws_ec2-1.15.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b96286554cb20fa5e8dff47365f44493", "sha256": "d144a5dba2537ade4e4cd6d9b769b830b6922712ed71ea7b9c59d72e18a26cb8"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.15.0.tar.gz", "has_sig": false, "md5_digest": "b96286554cb20fa5e8dff47365f44493", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 614913, "upload_time": "2019-10-28T13:18:22", "upload_time_iso_8601": "2019-10-28T13:18:22.394088Z", "url": "https://files.pythonhosted.org/packages/28/1b/4887cce96bcb0f5d6485d37336c533e37bc022bae710b45fe69f6b4fd1c5/aws-cdk.aws-ec2-1.15.0.tar.gz", "yanked": false}], "1.16.0": [{"comment_text": "", "digests": {"md5": "534dd1305a050311af1a06a2e97ee87e", "sha256": "587dc776cd03704f69899ba1a61a2fdc560bb004e6c236aa8c1ba5b0160bfd80"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.16.0-py3-none-any.whl", "has_sig": false, "md5_digest": "534dd1305a050311af1a06a2e97ee87e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 654822, "upload_time": "2019-11-11T18:09:36", "upload_time_iso_8601": "2019-11-11T18:09:36.146948Z", "url": "https://files.pythonhosted.org/packages/f9/47/869203b2bdeb57673096a437ee83f56c02d31712929b1ce7c51dacc67b28/aws_cdk.aws_ec2-1.16.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "12cfae1b3ed6d84799c7c8b58bb06106", "sha256": "6888a701d06f2ac70c5fdf337604212e6f24cf19f0b2f831af11cad3a5948799"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.16.0.tar.gz", "has_sig": false, "md5_digest": "12cfae1b3ed6d84799c7c8b58bb06106", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 658044, "upload_time": "2019-11-11T18:12:33", "upload_time_iso_8601": "2019-11-11T18:12:33.217361Z", "url": "https://files.pythonhosted.org/packages/c1/d1/be1a4248d75d0ff839ebe853581d095c5a965e94d45d5e6c204f95505d82/aws-cdk.aws-ec2-1.16.0.tar.gz", "yanked": false}], "1.16.1": [{"comment_text": "", "digests": {"md5": "0029f22f049855b8f193afb8fec4c6a7", "sha256": "63e7056cd51fbc3a88febdc6e9b3b4157a1e2f8c01c01f5bb1f98cf86a6bf847"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.16.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0029f22f049855b8f193afb8fec4c6a7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 654752, "upload_time": "2019-11-12T00:51:03", "upload_time_iso_8601": "2019-11-12T00:51:03.094692Z", "url": "https://files.pythonhosted.org/packages/15/33/079c97dd874ed78351ad3a18bdcaf7d3526c2473c83b65035f6c52413728/aws_cdk.aws_ec2-1.16.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "694827012d13c740c38348fc71e52a6c", "sha256": "6dda889e91c6c54afb48fe27c569c27a6aad1f3a22a165b441c1ea9faae85b7f"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.16.1.tar.gz", "has_sig": false, "md5_digest": "694827012d13c740c38348fc71e52a6c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 658044, "upload_time": "2019-11-12T00:54:00", "upload_time_iso_8601": "2019-11-12T00:54:00.146387Z", "url": "https://files.pythonhosted.org/packages/e0/3c/29685f09ae5082bc04a9ee2c15710e8269eb9c6286c66bdbb010bae7dbe5/aws-cdk.aws-ec2-1.16.1.tar.gz", "yanked": false}], "1.16.2": [{"comment_text": "", "digests": {"md5": "b44faa022ba27a850047bc5753b26a35", "sha256": "925728f8db750991d4885f36180f7353e3565ad30a37068906d288376b473883"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.16.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b44faa022ba27a850047bc5753b26a35", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 654914, "upload_time": "2019-11-12T12:50:48", "upload_time_iso_8601": "2019-11-12T12:50:48.048912Z", "url": "https://files.pythonhosted.org/packages/52/e6/1555c81617b6d883ab34e1b588742dbe13ec0dd278b23f5f9c6e89b28869/aws_cdk.aws_ec2-1.16.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2cb0989bb0879852788cc219c215b7b1", "sha256": "710af08425606d9bbaf119a8d2943b0fc4dfd52db65d1610118c1999cd6882d2"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.16.2.tar.gz", "has_sig": false, "md5_digest": "2cb0989bb0879852788cc219c215b7b1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 658190, "upload_time": "2019-11-12T12:53:57", "upload_time_iso_8601": "2019-11-12T12:53:57.175345Z", "url": "https://files.pythonhosted.org/packages/53/52/59d5fcfb2ddb47b4345e27356e37deb0f65a05fd12adeed0ba111e51f8cf/aws-cdk.aws-ec2-1.16.2.tar.gz", "yanked": false}], "1.16.3": [{"comment_text": "", "digests": {"md5": "5ec75bc940e946795c22fb86e5cb5968", "sha256": "fbe27852bc2ef04736fc613cd5e29c962a06514344b4aeb0150ae586a91b32d9"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.16.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5ec75bc940e946795c22fb86e5cb5968", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 655034, "upload_time": "2019-11-13T15:25:36", "upload_time_iso_8601": "2019-11-13T15:25:36.341474Z", "url": "https://files.pythonhosted.org/packages/18/75/81c585679499b7302571839828c27652ff62a2af6dabdb0ed0c61ba92ecc/aws_cdk.aws_ec2-1.16.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c99e845f619d8bb82adaf47d106e0171", "sha256": "173c7159be9da7cb6a2184d37994d490d7efbbdb3dde1670a5d9051787e10df2"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.16.3.tar.gz", "has_sig": false, "md5_digest": "c99e845f619d8bb82adaf47d106e0171", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 658392, "upload_time": "2019-11-13T15:28:49", "upload_time_iso_8601": "2019-11-13T15:28:49.334790Z", "url": "https://files.pythonhosted.org/packages/61/b5/8b9226df8ad86f181574de1525c6d13cac3ace3a5cc8a0499a6329160521/aws-cdk.aws-ec2-1.16.3.tar.gz", "yanked": false}], "1.17.0": [{"comment_text": "", "digests": {"md5": "91fc16c61b4c16ea8734a64cc567fd0d", "sha256": "9e45ed274f870f51b7c955a25dccf5ced45b28170d70113d4b33c9e33fad1e07"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.17.0-py3-none-any.whl", "has_sig": false, "md5_digest": "91fc16c61b4c16ea8734a64cc567fd0d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 655077, "upload_time": "2019-11-19T18:01:06", "upload_time_iso_8601": "2019-11-19T18:01:06.930184Z", "url": "https://files.pythonhosted.org/packages/57/f2/5f2ac9f17da79b67ffde356295fd807c0efee11fcabedb23891a3901ff75/aws_cdk.aws_ec2-1.17.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f66e9de73ab5859a20bbf3bf6b32b1d7", "sha256": "bb6d0b1e1509a048f18e9598a9472c640d879df3d6d5ada9ba4206b776a47929"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.17.0.tar.gz", "has_sig": false, "md5_digest": "f66e9de73ab5859a20bbf3bf6b32b1d7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 658549, "upload_time": "2019-11-19T18:04:12", "upload_time_iso_8601": "2019-11-19T18:04:12.056545Z", "url": "https://files.pythonhosted.org/packages/58/96/d1cb303914dd5ff939d00085398d4cdef1bde04cb730a41767e3206370de/aws-cdk.aws-ec2-1.17.0.tar.gz", "yanked": false}], "1.17.1": [{"comment_text": "", "digests": {"md5": "456fc0319b0b548c1f4cc74ff96c435b", "sha256": "3889f6103d21d120a1a6424bf51fff4e30668a4ff6e6437abbebceb81d40f6ae"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.17.1-py3-none-any.whl", "has_sig": false, "md5_digest": "456fc0319b0b548c1f4cc74ff96c435b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 654825, "upload_time": "2019-11-19T22:01:39", "upload_time_iso_8601": "2019-11-19T22:01:39.895771Z", "url": "https://files.pythonhosted.org/packages/ba/a1/dfb3269a11f61a08efe742cfe83add3e750c7ee79f6c610591b7d577e56b/aws_cdk.aws_ec2-1.17.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "12be59e3573c8dd47ea7c6ecb60eb137", "sha256": "4cba5155315fe372b1ff21d5822a47aaee66dcbc6d9d35c99ca41c3e1f8cbc49"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.17.1.tar.gz", "has_sig": false, "md5_digest": "12be59e3573c8dd47ea7c6ecb60eb137", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 658263, "upload_time": "2019-11-19T22:04:39", "upload_time_iso_8601": "2019-11-19T22:04:39.008669Z", "url": "https://files.pythonhosted.org/packages/cc/ef/bd463ca9f0d479985d10956eb4ee450057a9ba67eb1d9cc3b392dd0aefd0/aws-cdk.aws-ec2-1.17.1.tar.gz", "yanked": false}], "1.18.0": [{"comment_text": "", "digests": {"md5": "a783ff06937986ad3af9004a358d8267", "sha256": "7bb7069d633ae0060f676cb0d3bd51f93124688884f5b6082c2eee0e7d6a6bc7"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.18.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a783ff06937986ad3af9004a358d8267", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 654705, "upload_time": "2019-11-25T15:40:41", "upload_time_iso_8601": "2019-11-25T15:40:41.642160Z", "url": "https://files.pythonhosted.org/packages/8d/35/f7e46a41ee924dbf0c88e616afe83fc9c76006a353e46905cb0f88dceb80/aws_cdk.aws_ec2-1.18.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01f1a7d47949a75c7ee79e4bf48bab48", "sha256": "f992f424eca824955fe96c9787cbad460e0d22dc678647b278671257c17530e7"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.18.0.tar.gz", "has_sig": false, "md5_digest": "01f1a7d47949a75c7ee79e4bf48bab48", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 658196, "upload_time": "2019-11-25T15:43:39", "upload_time_iso_8601": "2019-11-25T15:43:39.688105Z", "url": "https://files.pythonhosted.org/packages/ea/eb/2ced0cbb1f23c6c52d3f4e34575933276c9f8b613f3d41c6b53e2d576746/aws-cdk.aws-ec2-1.18.0.tar.gz", "yanked": false}], "1.19.0": [{"comment_text": "", "digests": {"md5": "a45a1c44efd9c6128ee7bcf16e6a68eb", "sha256": "c5588e88984e07ef62c1dfd8592f237e1210ffff1ab22854490cde6b219750a7"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.19.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a45a1c44efd9c6128ee7bcf16e6a68eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 659239, "upload_time": "2019-12-17T14:50:22", "upload_time_iso_8601": "2019-12-17T14:50:22.409677Z", "url": "https://files.pythonhosted.org/packages/8f/15/03a3e0492112eee0fa1ca616fd76fc71acc27a1ebb38c0ae9416e98dc8c0/aws_cdk.aws_ec2-1.19.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80c4237d9fb960413ad623970bfcc319", "sha256": "da9744c1cb6b0e9d46573c61243eb5a96892aaed79e96e792e6c9d36baca1dd2"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.19.0.tar.gz", "has_sig": false, "md5_digest": "80c4237d9fb960413ad623970bfcc319", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 662200, "upload_time": "2019-12-17T14:53:27", "upload_time_iso_8601": "2019-12-17T14:53:27.954780Z", "url": "https://files.pythonhosted.org/packages/1e/1d/e1365024fa129ac91d58015c95b5eda0ae9a138083b16c42152642f9826c/aws-cdk.aws-ec2-1.19.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "de475f358d60cfcf6bbc21f7a4fe2393", "sha256": "d9d052bfa24b58aa0c78b1f73e9fd15dd0ec5cf35cc39fcda0236b3274e2dc0d"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "de475f358d60cfcf6bbc21f7a4fe2393", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 510005, "upload_time": "2019-07-25T17:48:38", "upload_time_iso_8601": "2019-07-25T17:48:38.509879Z", "url": "https://files.pythonhosted.org/packages/93/c1/7740dcd934e8c9b9ed41f2a64043f4fd92741898539350c6b179cd92d3eb/aws_cdk.aws_ec2-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62e6ece86f809f6b90f7878b959e085f", "sha256": "8d33c92be40f7e7de71176f4ac2870c09af2a66d9e72330ae6464744893bc73b"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.2.0.tar.gz", "has_sig": false, "md5_digest": "62e6ece86f809f6b90f7878b959e085f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 514437, "upload_time": "2019-07-25T17:51:10", "upload_time_iso_8601": "2019-07-25T17:51:10.250284Z", "url": "https://files.pythonhosted.org/packages/16/30/b19ece3b7c0e4213bf1884868c3cd7097cd854df1aa3326697adf533f3ee/aws-cdk.aws-ec2-1.2.0.tar.gz", "yanked": false}], "1.20.0": [{"comment_text": "", "digests": {"md5": "e121e1d00642e792a62ea270bd341c37", "sha256": "b3fde2d4fb0e513902741065502819eb3cee6b9ac1625be1f15bf6a2c58add8d"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.20.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e121e1d00642e792a62ea270bd341c37", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 680085, "upload_time": "2020-01-07T23:57:42", "upload_time_iso_8601": "2020-01-07T23:57:42.736779Z", "url": "https://files.pythonhosted.org/packages/25/16/ed80c6f8afd58512ca6b3bad5a0296800d2297543fe2df66e01ce2edc627/aws_cdk.aws_ec2-1.20.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5729b97a2aa9a7a2d0b701f608a8771b", "sha256": "eee05f552e9d26ff2f6d758e957dff1d98c3b05d3aa3075d7ac9ba33a9b147b7"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.20.0.tar.gz", "has_sig": false, "md5_digest": "5729b97a2aa9a7a2d0b701f608a8771b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 683166, "upload_time": "2020-01-08T00:00:46", "upload_time_iso_8601": "2020-01-08T00:00:46.215404Z", "url": "https://files.pythonhosted.org/packages/c9/06/c737fea729e86cb0525a80079dcf74e4dcc5436cddd408ea3dd1c2595f05/aws-cdk.aws-ec2-1.20.0.tar.gz", "yanked": false}], "1.21.0": [{"comment_text": "", "digests": {"md5": "f2f67e73609ad6ac11cd1e86cc1158bf", "sha256": "16a96424e6732cc770d68f9003b0e340ca579046d6b72bf21f3cda9b70b89f55"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.21.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f2f67e73609ad6ac11cd1e86cc1158bf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 695000, "upload_time": "2020-01-16T02:47:16", "upload_time_iso_8601": "2020-01-16T02:47:16.391460Z", "url": "https://files.pythonhosted.org/packages/8f/2e/15a3ee201394648c1f9b9bc69bda2eca88fca08639d43ac1cf4cf54aa43f/aws_cdk.aws_ec2-1.21.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "25ca0929a23fad76ea3fe1f18237e5d1", "sha256": "956e39a681e965fc2f8dcd124a643fdb223275c15f97fde28d8abbf64a17cc0e"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.21.0.tar.gz", "has_sig": false, "md5_digest": "25ca0929a23fad76ea3fe1f18237e5d1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 697501, "upload_time": "2020-01-16T02:52:23", "upload_time_iso_8601": "2020-01-16T02:52:23.109215Z", "url": "https://files.pythonhosted.org/packages/f9/e0/213162c0a67327e8ad84807f9b090bb3818cc5a048f28b1ba05f069e79cd/aws-cdk.aws-ec2-1.21.0.tar.gz", "yanked": false}], "1.21.1": [{"comment_text": "", "digests": {"md5": "812434180325ba2e5b5c89b1b9b0ca00", "sha256": "7e5c49f93fda5f9c7364a8fce75ad702eb44403dfe0d2bc32a01074aa3847179"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.21.1-py3-none-any.whl", "has_sig": false, "md5_digest": "812434180325ba2e5b5c89b1b9b0ca00", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 695003, "upload_time": "2020-01-16T19:29:23", "upload_time_iso_8601": "2020-01-16T19:29:23.735593Z", "url": "https://files.pythonhosted.org/packages/db/93/7e4438c4310452c0a3ac2cf13d060cfcb181b4441fc13c3cd59b500a5502/aws_cdk.aws_ec2-1.21.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "05ab71aff8ff26bfc9b4844982a36e82", "sha256": "4bb6349feabe49550a8c63473fe78d456a77582b9e405427242b49affcb806f5"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.21.1.tar.gz", "has_sig": false, "md5_digest": "05ab71aff8ff26bfc9b4844982a36e82", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 697482, "upload_time": "2020-01-16T19:32:50", "upload_time_iso_8601": "2020-01-16T19:32:50.790721Z", "url": "https://files.pythonhosted.org/packages/d0/93/996e5b33805b65806d60ad5f412b87241505ffddc8197e39f02fd4c5180d/aws-cdk.aws-ec2-1.21.1.tar.gz", "yanked": false}], "1.22.0": [{"comment_text": "", "digests": {"md5": "b4598a02da4b53b53df74029c7959aae", "sha256": "ce9761a45358076f771754b8c0cfca14d404ac1c9bf7c8fa24b017115aea7549"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.22.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b4598a02da4b53b53df74029c7959aae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 696950, "upload_time": "2020-01-23T19:13:29", "upload_time_iso_8601": "2020-01-23T19:13:29.997462Z", "url": "https://files.pythonhosted.org/packages/aa/08/2394b72965f9462d57bb4a2fdd9797381c6041f671bdb3870e593350a2c0/aws_cdk.aws_ec2-1.22.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "558f5766c12c33072fed4533892cdfb9", "sha256": "bdbf7377a83c48ac79ec57db78a0ded053993a224ec30c66a649a7c31bd0f47c"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.22.0.tar.gz", "has_sig": false, "md5_digest": "558f5766c12c33072fed4533892cdfb9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 699714, "upload_time": "2020-01-23T19:16:39", "upload_time_iso_8601": "2020-01-23T19:16:39.094552Z", "url": "https://files.pythonhosted.org/packages/02/32/0288d10fcda8174e56efba2e0f4cf92dc51c1bc593aba192ff7f2f2b8806/aws-cdk.aws-ec2-1.22.0.tar.gz", "yanked": false}], "1.23.0": [{"comment_text": "", "digests": {"md5": "32b6562c1aa9f951627a4fc29390afc6", "sha256": "d61be6c4c2c77ac75844312acc502e552f3bd6c5a026d4c2b3d6409023323d08"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.23.0-py3-none-any.whl", "has_sig": false, "md5_digest": "32b6562c1aa9f951627a4fc29390afc6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 703279, "upload_time": "2020-02-07T03:48:12", "upload_time_iso_8601": "2020-02-07T03:48:12.064524Z", "url": "https://files.pythonhosted.org/packages/00/cf/eaa9212ecfdf963e8850ffc71c2db1028475be9f75569a4cfe24e5921f69/aws_cdk.aws_ec2-1.23.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cab2328822fb217638bf2b5f797f4818", "sha256": "f04ebee3decc63008975892850807c229a98ee86534d3cd1c84bbc34d33a6afd"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.23.0.tar.gz", "has_sig": false, "md5_digest": "cab2328822fb217638bf2b5f797f4818", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 706302, "upload_time": "2020-02-07T03:51:17", "upload_time_iso_8601": "2020-02-07T03:51:17.699421Z", "url": "https://files.pythonhosted.org/packages/ca/67/37a971ff524c83b7565f0acd9730542a463582027c264cad7fceb7a77a18/aws-cdk.aws-ec2-1.23.0.tar.gz", "yanked": false}], "1.24.0": [{"comment_text": "", "digests": {"md5": "27654f448b0acf22ac8afc22a205a6e6", "sha256": "86a91d02bcf58020202d8c54339d790393426fae30fb4dfbc2d4a0192a43ec7d"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.24.0-py3-none-any.whl", "has_sig": false, "md5_digest": "27654f448b0acf22ac8afc22a205a6e6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 729496, "upload_time": "2020-02-14T10:10:29", "upload_time_iso_8601": "2020-02-14T10:10:29.059124Z", "url": "https://files.pythonhosted.org/packages/b6/d3/7f279a8395b86429c4ca05f5a36bddbfd3708400113c57d7acf7e3ccd6a7/aws_cdk.aws_ec2-1.24.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "557cabb9de5a1b54820aca261868ddab", "sha256": "43e7d0f694b8d688e0e30fff9ce3c24cb33989f95dfa2f0f19bcbfed3c5eaae8"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.24.0.tar.gz", "has_sig": false, "md5_digest": "557cabb9de5a1b54820aca261868ddab", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 739327, "upload_time": "2020-02-14T10:13:49", "upload_time_iso_8601": "2020-02-14T10:13:49.385933Z", "url": "https://files.pythonhosted.org/packages/d2/16/0580b1e206a63d316eb6cf1356eb3f6f71f34b8822c3a9fbd9130f449d5a/aws-cdk.aws-ec2-1.24.0.tar.gz", "yanked": false}], "1.25.0": [{"comment_text": "", "digests": {"md5": "1e3b631bfbbfdd73d9db3118ed2a1e24", "sha256": "72544a8c3a5f010eedbe827032f121bc691f852dd448f75eee3a7faab6a9c6e3"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.25.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1e3b631bfbbfdd73d9db3118ed2a1e24", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 735381, "upload_time": "2020-02-19T09:59:27", "upload_time_iso_8601": "2020-02-19T09:59:27.602536Z", "url": "https://files.pythonhosted.org/packages/57/34/d6e9f254152353a33692aa9afd8b17547b9b7bd03c941a95949ef59f9e6c/aws_cdk.aws_ec2-1.25.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc2df140b63fd7b0bf05691e1707e255", "sha256": "337bc492b3bf6cb2239d93c18bc4c0021130a58b40ef1badb96bbde215008f37"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.25.0.tar.gz", "has_sig": false, "md5_digest": "cc2df140b63fd7b0bf05691e1707e255", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 745693, "upload_time": "2020-02-19T10:02:32", "upload_time_iso_8601": "2020-02-19T10:02:32.419535Z", "url": "https://files.pythonhosted.org/packages/42/16/15dca594ec89eb6a7f8df482bc8b75d4e5084ec0d28e5162cc2bd663570b/aws-cdk.aws-ec2-1.25.0.tar.gz", "yanked": false}], "1.26.0": [{"comment_text": "", "digests": {"md5": "fc6f865361698b3c4e79be5ee8e3a5b5", "sha256": "2084f35e075da14175dc2cbddb1e2adc90fe39faa0b20a8b4ed92f2e41a105ed"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.26.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fc6f865361698b3c4e79be5ee8e3a5b5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 737023, "upload_time": "2020-02-26T09:47:00", "upload_time_iso_8601": "2020-02-26T09:47:00.054600Z", "url": "https://files.pythonhosted.org/packages/e7/14/37fd406c2c987888575e479ad71750298216cb39e30fd1bbc354f892e9e2/aws_cdk.aws_ec2-1.26.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "062c5ffb5d1a34cc89d18ec0bd00f0e3", "sha256": "5d4d1a21ad14bcf8205ebf80f042041adbe6753e120a92c59ece9541f6ba9871"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.26.0.tar.gz", "has_sig": false, "md5_digest": "062c5ffb5d1a34cc89d18ec0bd00f0e3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 749339, "upload_time": "2020-02-26T09:50:23", "upload_time_iso_8601": "2020-02-26T09:50:23.614729Z", "url": "https://files.pythonhosted.org/packages/64/71/266435bfdf320f7640e4a25bef9445ed021326694bfcab868d55962e72e8/aws-cdk.aws-ec2-1.26.0.tar.gz", "yanked": false}], "1.27.0": [{"comment_text": "", "digests": {"md5": "64e5076ff72b13baba4339b87362bb2f", "sha256": "f2201d379142b6d954c04329f2e6b87b916e0e43aea22b852285f1f202eeb6bb"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.27.0-py3-none-any.whl", "has_sig": false, "md5_digest": "64e5076ff72b13baba4339b87362bb2f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 748541, "upload_time": "2020-03-03T12:42:46", "upload_time_iso_8601": "2020-03-03T12:42:46.455473Z", "url": "https://files.pythonhosted.org/packages/ff/8d/168eb95e76624c865499bbfd5aa24adac89f51627e623a2b577190b84361/aws_cdk.aws_ec2-1.27.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ebef05dc04c3c3e8155d7ec531d4411", "sha256": "b2ea050123cf5479fdf58e8d57eb76845d4537c783f6fc3f8b91a20887557ade"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.27.0.tar.gz", "has_sig": false, "md5_digest": "8ebef05dc04c3c3e8155d7ec531d4411", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 762006, "upload_time": "2020-03-03T12:45:42", "upload_time_iso_8601": "2020-03-03T12:45:42.985305Z", "url": "https://files.pythonhosted.org/packages/2f/16/9cc57e3e90dcf204837c2aa34d1ca3600161cacd3d12d837ba0c45f6a6cd/aws-cdk.aws-ec2-1.27.0.tar.gz", "yanked": false}], "1.28.0": [{"comment_text": "", "digests": {"md5": "529f8c67be98ffb60bcccc7e7257818b", "sha256": "08bab4f6b662c0201c9d1dd102b3f0debace357366b1796d8b1f3c6606fd908f"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.28.0-py3-none-any.whl", "has_sig": false, "md5_digest": "529f8c67be98ffb60bcccc7e7257818b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 748525, "upload_time": "2020-03-16T09:45:08", "upload_time_iso_8601": "2020-03-16T09:45:08.713459Z", "url": "https://files.pythonhosted.org/packages/a9/ed/c29d48b8f93963437ec27e3518a44514e6e81da67a78869caadf975020af/aws_cdk.aws_ec2-1.28.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aeb569d8207fe175a316021f6e43b0d4", "sha256": "3f5b9af8de7f752067ba3de048fd8f16214c37e3950e3330e8b655d52a1525c3"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.28.0.tar.gz", "has_sig": false, "md5_digest": "aeb569d8207fe175a316021f6e43b0d4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 762016, "upload_time": "2020-03-16T09:48:05", "upload_time_iso_8601": "2020-03-16T09:48:05.014879Z", "url": "https://files.pythonhosted.org/packages/d5/33/9bde659101f8f1ee5604e92ebd2b6040966abdd037a28c2064302eb9852e/aws-cdk.aws-ec2-1.28.0.tar.gz", "yanked": false}], "1.29.0": [{"comment_text": "", "digests": {"md5": "d478ee989d1f61bc3b291979a38774d4", "sha256": "741319be22f3e722131a6a8e656aa8bb9fee7288517e2716e452d5517ab76778"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.29.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d478ee989d1f61bc3b291979a38774d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 752222, "upload_time": "2020-03-18T11:22:14", "upload_time_iso_8601": "2020-03-18T11:22:14.093108Z", "url": "https://files.pythonhosted.org/packages/36/23/7595e8bc40ff2fa513fe7a8bf195c6a16408bc3f48bcf8428db6231d821d/aws_cdk.aws_ec2-1.29.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cbdfba022239492fcfd4653fa2d7f84f", "sha256": "0158ef7a5101871e2497cc7d26682bfcda587ba0ecd2f13d6f96e148736d9dca"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.29.0.tar.gz", "has_sig": false, "md5_digest": "cbdfba022239492fcfd4653fa2d7f84f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 767469, "upload_time": "2020-03-18T11:24:58", "upload_time_iso_8601": "2020-03-18T11:24:58.925099Z", "url": "https://files.pythonhosted.org/packages/24/46/92c09577cbc82203885aa2dd631c1a9e34cb6171cebe9520f8babe77dd2e/aws-cdk.aws-ec2-1.29.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "dc7bb5d53a6af60ca5359a9953bbd17e", "sha256": "a96b6597db7cd7f7dfbc5740589051c495fd591ec55553e761ad0645526232b6"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "dc7bb5d53a6af60ca5359a9953bbd17e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 510353, "upload_time": "2019-08-02T11:14:48", "upload_time_iso_8601": "2019-08-02T11:14:48.430871Z", "url": "https://files.pythonhosted.org/packages/14/a1/91d9485577cfa5d80fb737de9943cc1814c647ef263955382edf8a46089a/aws_cdk.aws_ec2-1.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c81d267e242f213e8eec70567d4309ac", "sha256": "6d91f8119db09b9bef055e6f9628f1c9c20515997976e52d34f8217b42fbcf79"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.3.0.tar.gz", "has_sig": false, "md5_digest": "c81d267e242f213e8eec70567d4309ac", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 518300, "upload_time": "2019-08-02T11:17:23", "upload_time_iso_8601": "2019-08-02T11:17:23.730785Z", "url": "https://files.pythonhosted.org/packages/36/65/fbc93983c5a46ea1764b39878b961c321bf617b62708c0c0a1809934f065/aws-cdk.aws-ec2-1.3.0.tar.gz", "yanked": false}], "1.30.0": [{"comment_text": "", "digests": {"md5": "2ff7328769f74b0b12c6ce3b7461d8e9", "sha256": "e91e39478df8ed97e334c83f56b40f034dea4759c0fbd1eb2aa8b2e563817ce4"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.30.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2ff7328769f74b0b12c6ce3b7461d8e9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 752458, "upload_time": "2020-03-18T17:59:02", "upload_time_iso_8601": "2020-03-18T17:59:02.046779Z", "url": "https://files.pythonhosted.org/packages/cf/31/5e55633435613f54b7894392178686fa9084d7f981b8e447a116cc5bbe0e/aws_cdk.aws_ec2-1.30.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "15700c082dda8df52d918b3bdb7da75e", "sha256": "0ec8abfd672b57ba42915d519b40ee99597344dabd28fb68ff99366bf40fbd8d"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.30.0.tar.gz", "has_sig": false, "md5_digest": "15700c082dda8df52d918b3bdb7da75e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 767752, "upload_time": "2020-03-18T18:02:02", "upload_time_iso_8601": "2020-03-18T18:02:02.394826Z", "url": "https://files.pythonhosted.org/packages/96/73/6889fd99025f32d765df4c18843a5bc02ced214ecf6e30609f1b13b4c386/aws-cdk.aws-ec2-1.30.0.tar.gz", "yanked": false}], "1.31.0": [{"comment_text": "", "digests": {"md5": "fc5eeb4082c186cb1a030c8d7a15330b", "sha256": "f072c555efd192de3c121dcff1a2c15d5f642ef814d32a3dd464bfc73f3e2d6e"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.31.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fc5eeb4082c186cb1a030c8d7a15330b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 752163, "upload_time": "2020-03-24T21:14:53", "upload_time_iso_8601": "2020-03-24T21:14:53.202884Z", "url": "https://files.pythonhosted.org/packages/e9/8e/128db9037304ce12a7873b8bbe7ba7f3ab2410c60215921b260c7c4718fd/aws_cdk.aws_ec2-1.31.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ae93ed849bdd8770073ee7d27fb08fb", "sha256": "6ac989f326cfb7cbc3e2cb9631b85d4691eb43874fa5359fb907b7c20a406084"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.31.0.tar.gz", "has_sig": false, "md5_digest": "0ae93ed849bdd8770073ee7d27fb08fb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 767511, "upload_time": "2020-03-24T21:17:54", "upload_time_iso_8601": "2020-03-24T21:17:54.245278Z", "url": "https://files.pythonhosted.org/packages/8a/66/0ce4d7cb680be721320cd83bfd83a7458a4cec27038698b38af170af2a3e/aws-cdk.aws-ec2-1.31.0.tar.gz", "yanked": false}], "1.32.0": [{"comment_text": "", "digests": {"md5": "35a02cdbf019f127add39625cd8dea6d", "sha256": "ea2dcbe866cbfcfde971283175e4ebd54687d27ecdce2ac58e61c1488f106f12"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.32.0-py3-none-any.whl", "has_sig": false, "md5_digest": "35a02cdbf019f127add39625cd8dea6d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 754723, "upload_time": "2020-04-07T13:27:24", "upload_time_iso_8601": "2020-04-07T13:27:24.308238Z", "url": "https://files.pythonhosted.org/packages/dd/31/438bb5ec161aea3ad88b0af3e31a2efebd403091e7f6f694451ad50ad785/aws_cdk.aws_ec2-1.32.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9fe1603496a0b79fcc96328207fb8e43", "sha256": "869b31a23cb741e015288c1bf2f525668ac3d8c2ce41469ca26bee05f083d748"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.32.0.tar.gz", "has_sig": false, "md5_digest": "9fe1603496a0b79fcc96328207fb8e43", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 769843, "upload_time": "2020-04-07T13:30:14", "upload_time_iso_8601": "2020-04-07T13:30:14.407966Z", "url": "https://files.pythonhosted.org/packages/c0/c6/d9b17336e30c066d562f32ac71d06686450c1c20a8f51abc00f8f96aa420/aws-cdk.aws-ec2-1.32.0.tar.gz", "yanked": false}], "1.32.1": [{"comment_text": "", "digests": {"md5": "acd37a5a6d927161d457381985e5f9dd", "sha256": "dcbba1d15ffd8429bd5c75d6e1165167674ff3a15c4808eacb8ab1f17215826a"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.32.1-py3-none-any.whl", "has_sig": false, "md5_digest": "acd37a5a6d927161d457381985e5f9dd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 754739, "upload_time": "2020-04-09T12:44:23", "upload_time_iso_8601": "2020-04-09T12:44:23.723199Z", "url": "https://files.pythonhosted.org/packages/7b/0a/93cfeaf87a27afa8c3731c97c28e64c328b5ac5623d0c54b59e2c6709da1/aws_cdk.aws_ec2-1.32.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e25da8bf7a788bd977bf26c38f4f747c", "sha256": "dcede3b679ddb394a2bcaae805faccd49f5306ceb6359c16105ce99403735af2"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.32.1.tar.gz", "has_sig": false, "md5_digest": "e25da8bf7a788bd977bf26c38f4f747c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 769859, "upload_time": "2020-04-09T12:47:01", "upload_time_iso_8601": "2020-04-09T12:47:01.903472Z", "url": "https://files.pythonhosted.org/packages/ac/98/89df8db41e91b00af78e280c7482350c31457fb37b982d6eaacefac4e85e/aws-cdk.aws-ec2-1.32.1.tar.gz", "yanked": false}], "1.32.2": [{"comment_text": "", "digests": {"md5": "e74662ec7be92a7b2d1b870def99ca12", "sha256": "0dab5dc16605d5fdabfd790492902ac13b12d3ad74d2fd3262224b52a382b48f"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.32.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e74662ec7be92a7b2d1b870def99ca12", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 754704, "upload_time": "2020-04-10T15:25:17", "upload_time_iso_8601": "2020-04-10T15:25:17.855732Z", "url": "https://files.pythonhosted.org/packages/7c/b9/f0706f5901b8e1dd28f862b24a696112a45f25326f84cfb9c52c32ea2e1e/aws_cdk.aws_ec2-1.32.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d7f0cc0a5b84c0a69415e3e29ba6ab63", "sha256": "6ea9d30ecbd494fd7e2386b287ab59510b83f762daf73e9b35eeaabf5eaf0306"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.32.2.tar.gz", "has_sig": false, "md5_digest": "d7f0cc0a5b84c0a69415e3e29ba6ab63", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 769863, "upload_time": "2020-04-10T15:28:00", "upload_time_iso_8601": "2020-04-10T15:28:00.780297Z", "url": "https://files.pythonhosted.org/packages/01/ad/a3a984efcc37f88a1acec269dbf70dda5ae528f3d96051de27a7c97d1b48/aws-cdk.aws-ec2-1.32.2.tar.gz", "yanked": false}], "1.33.0": [{"comment_text": "", "digests": {"md5": "8bd2dc839ce6a56032a2454cdc2c7e0d", "sha256": "357ba4381cc81135cdd28c71a6c762c9c64671470f04a000afade1c18a48ff5c"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.33.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8bd2dc839ce6a56032a2454cdc2c7e0d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 770015, "upload_time": "2020-04-17T20:18:25", "upload_time_iso_8601": "2020-04-17T20:18:25.533369Z", "url": "https://files.pythonhosted.org/packages/57/6f/02576c869ea0a708bd9491eccd6e7387d968188ffc5625173925d781cd96/aws_cdk.aws_ec2-1.33.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "76222cfa84a43b9d35b81450e34cccb7", "sha256": "68666d1c99ffe36549e945c524b7f1fa3d67a195e2efd95cd29fed06aa89a82a"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.33.0.tar.gz", "has_sig": false, "md5_digest": "76222cfa84a43b9d35b81450e34cccb7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 789761, "upload_time": "2020-04-17T20:21:23", "upload_time_iso_8601": "2020-04-17T20:21:23.884780Z", "url": "https://files.pythonhosted.org/packages/48/f7/175d35059a56c7c499ff7b844aeda0bc9882c002d4cef585c476201469ed/aws-cdk.aws-ec2-1.33.0.tar.gz", "yanked": false}], "1.33.1": [{"comment_text": "", "digests": {"md5": "d81ec1c4a32f41d2b0f43f07afc24a36", "sha256": "8e5f5e85ddfa7cc1b6bb9c4b01f4185d7231853a153ded43650eadc77c84b1d8"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.33.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d81ec1c4a32f41d2b0f43f07afc24a36", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 767727, "upload_time": "2020-04-19T13:54:58", "upload_time_iso_8601": "2020-04-19T13:54:58.012579Z", "url": "https://files.pythonhosted.org/packages/79/5e/d9f68cf4e78598107b0dfb77bc1062ff3a9a8dac72d9fdd38ef996475cac/aws_cdk.aws_ec2-1.33.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca1710082116813d96bcb99ac483cc33", "sha256": "0492f7adcff8c4615cabd9c26f876f899a8bc18bd2cb11d171199b32e5cbd618"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.33.1.tar.gz", "has_sig": false, "md5_digest": "ca1710082116813d96bcb99ac483cc33", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 787969, "upload_time": "2020-04-19T13:57:47", "upload_time_iso_8601": "2020-04-19T13:57:47.045139Z", "url": "https://files.pythonhosted.org/packages/40/07/412b9fdbc77bcd4ff1f0f704077f9436f4d3a1fd5ef7252f62f23cfab42a/aws-cdk.aws-ec2-1.33.1.tar.gz", "yanked": false}], "1.34.0": [{"comment_text": "", "digests": {"md5": "5f2c5af4bf6d1d95eeec02b77d5a30c9", "sha256": "b96a8febf5c650fa7fce9b8d3d048069b245b5a4001ae6796e25c82cdfa5fcae"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.34.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5f2c5af4bf6d1d95eeec02b77d5a30c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 769811, "upload_time": "2020-04-21T18:16:54", "upload_time_iso_8601": "2020-04-21T18:16:54.581201Z", "url": "https://files.pythonhosted.org/packages/c0/71/df47b68ff2dc295e93ba79b20dfe4ca12bfc19982c0450d691ba935d6185/aws_cdk.aws_ec2-1.34.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8a7e08201dad3406a5d611196d72e8f", "sha256": "7c3d0972cc264983416dffcbb6fa0fe6213716417444bd4e5339ec248bff03c2"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.34.0.tar.gz", "has_sig": false, "md5_digest": "c8a7e08201dad3406a5d611196d72e8f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 789620, "upload_time": "2020-04-21T18:20:00", "upload_time_iso_8601": "2020-04-21T18:20:00.581770Z", "url": "https://files.pythonhosted.org/packages/6c/4d/550038c0b4cfcf06f77ee05db033221868c03e75ac9e7b84191a2c79cddb/aws-cdk.aws-ec2-1.34.0.tar.gz", "yanked": false}], "1.34.1": [{"comment_text": "", "digests": {"md5": "535ff55062de9b5a88fe2ab174852d59", "sha256": "568dbe85f03e5a41dc960f1254838760c756e9ae3a2dfecc776e8a987dd0cf88"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.34.1-py3-none-any.whl", "has_sig": false, "md5_digest": "535ff55062de9b5a88fe2ab174852d59", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 769795, "upload_time": "2020-04-22T04:38:29", "upload_time_iso_8601": "2020-04-22T04:38:29.453716Z", "url": "https://files.pythonhosted.org/packages/2f/93/1814673de6841c178976d736eec83c03678da1d0c56ffa65b9fa0c2f386b/aws_cdk.aws_ec2-1.34.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a0be8c80c7fd921d7b96858c233ad920", "sha256": "63f208f188a7f370180c1d43fc2ea1165119aeecff24c0dcffc4ff31b87b2b35"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.34.1.tar.gz", "has_sig": false, "md5_digest": "a0be8c80c7fd921d7b96858c233ad920", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 789633, "upload_time": "2020-04-22T04:41:31", "upload_time_iso_8601": "2020-04-22T04:41:31.895349Z", "url": "https://files.pythonhosted.org/packages/20/98/46d5be00168338d3354a36b2fb2a542dd429ba13e95e255ab5985e340948/aws-cdk.aws-ec2-1.34.1.tar.gz", "yanked": false}], "1.35.0": [{"comment_text": "", "digests": {"md5": "d1bdfddb288efa6028160004d9c36ddb", "sha256": "07f4ae05ff91cf2e06f41709d30efe60354daa1e190e51d02e488723fffc14e7"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.35.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d1bdfddb288efa6028160004d9c36ddb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 769828, "upload_time": "2020-04-24T12:24:31", "upload_time_iso_8601": "2020-04-24T12:24:31.817755Z", "url": "https://files.pythonhosted.org/packages/38/3c/af4d2135a927314b16b054db7e5f15130d5aad6e70cc44cdfbd64e2aa993/aws_cdk.aws_ec2-1.35.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "05f0c856b34dbc15224e54bbab2f0ce2", "sha256": "0dc925251c55b38837039ade16821886f341c2e42251a6cacb83284a2a657596"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.35.0.tar.gz", "has_sig": false, "md5_digest": "05f0c856b34dbc15224e54bbab2f0ce2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 789624, "upload_time": "2020-04-24T12:26:56", "upload_time_iso_8601": "2020-04-24T12:26:56.929779Z", "url": "https://files.pythonhosted.org/packages/12/f1/5ee8adec840f6e710aed58902ff6735931d825d60f06c34d397112415f88/aws-cdk.aws-ec2-1.35.0.tar.gz", "yanked": false}], "1.36.0": [{"comment_text": "", "digests": {"md5": "a962d967f7235bdd9784ddd4e2582246", "sha256": "dcc63256d72bb07bd79ba97b17b7773f26f52c8983bc90478f3f6b592065d9aa"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.36.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a962d967f7235bdd9784ddd4e2582246", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 769800, "upload_time": "2020-04-28T12:11:40", "upload_time_iso_8601": "2020-04-28T12:11:40.175118Z", "url": "https://files.pythonhosted.org/packages/ad/d5/04612f68218e954708a813c1627aae7d4fb9d364f80fe2c51e650254a0fd/aws_cdk.aws_ec2-1.36.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e622da13933b019b5c63ad94c03e7c2f", "sha256": "5f0bf0014a3708cd91a8af693bdce57322039607d2b0c915c2fe4b1c4d60805f"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.36.0.tar.gz", "has_sig": false, "md5_digest": "e622da13933b019b5c63ad94c03e7c2f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 789594, "upload_time": "2020-04-28T12:14:05", "upload_time_iso_8601": "2020-04-28T12:14:05.762036Z", "url": "https://files.pythonhosted.org/packages/28/65/28eea02ef44e616c2e76d60d1665d8aad4075722639b8fb5551631637fa2/aws-cdk.aws-ec2-1.36.0.tar.gz", "yanked": false}], "1.36.1": [{"comment_text": "", "digests": {"md5": "7f4155e2040406a614f626adf59c929f", "sha256": "ef71837981ccb652b453a56354b2d75165208a9e034a1dca96426c874e6f29e9"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.36.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7f4155e2040406a614f626adf59c929f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 769822, "upload_time": "2020-04-29T23:48:25", "upload_time_iso_8601": "2020-04-29T23:48:25.306727Z", "url": "https://files.pythonhosted.org/packages/47/54/cb5631408159100fc17b815abc26ce90c7dd7f63027270dd83c6f03de1e1/aws_cdk.aws_ec2-1.36.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9fcd6c10d762260f3af9cecc12a439d", "sha256": "38b6729de2b58e23f58d66431241579ca301438ba1f29d24a3a1bea0444c53b8"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.36.1.tar.gz", "has_sig": false, "md5_digest": "f9fcd6c10d762260f3af9cecc12a439d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 789629, "upload_time": "2020-04-29T23:50:52", "upload_time_iso_8601": "2020-04-29T23:50:52.969360Z", "url": "https://files.pythonhosted.org/packages/e7/42/01934f08e63fbbf03a643b3d697aaf2088fff5c88648891b1a1bee12abc9/aws-cdk.aws-ec2-1.36.1.tar.gz", "yanked": false}], "1.37.0": [{"comment_text": "", "digests": {"md5": "4c3d89349b06401db4935f2282b948df", "sha256": "eda66a616a9ba5b77c813d094885030782b5f5195196e5fe4334ae95c331815c"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.37.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4c3d89349b06401db4935f2282b948df", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 781475, "upload_time": "2020-05-05T16:39:37", "upload_time_iso_8601": "2020-05-05T16:39:37.181822Z", "url": "https://files.pythonhosted.org/packages/37/5a/7d3ec8c263a873ed2716399aaa57bcf9dcbac80df4971c0a88cc269179a4/aws_cdk.aws_ec2-1.37.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7636b5cffe287b2982b1dbebe67a3402", "sha256": "c2753f48f4dc95ea8c388abb509b8575a526c7eaab3fc0f409e80c02529a9336"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.37.0.tar.gz", "has_sig": false, "md5_digest": "7636b5cffe287b2982b1dbebe67a3402", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 800822, "upload_time": "2020-05-05T16:42:11", "upload_time_iso_8601": "2020-05-05T16:42:11.430111Z", "url": "https://files.pythonhosted.org/packages/32/3d/4a5122561672c4eaa6106b1e77b1d9525dcf8c534538c71e2858f62b8deb/aws-cdk.aws-ec2-1.37.0.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "5badd3f0e461238f4b7e237eff0f247c", "sha256": "be74abc4127b3c24cd476ffff14596d3ecb494d1ef9f95e2ca8ff2863998de27"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5badd3f0e461238f4b7e237eff0f247c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 518560, "upload_time": "2019-08-14T08:18:39", "upload_time_iso_8601": "2019-08-14T08:18:39.664774Z", "url": "https://files.pythonhosted.org/packages/2a/45/a356e1d3f18d6873b6318a6ed6b631590c887fc2b72424effb05265b5b81/aws_cdk.aws_ec2-1.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1142c17a34536cf964f59820c381ad57", "sha256": "4acd4b78a5fdaeb166fdea2c15aaa02e2ded7469cef1dbf14aa27fad54bae9f7"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.4.0.tar.gz", "has_sig": false, "md5_digest": "1142c17a34536cf964f59820c381ad57", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 527088, "upload_time": "2019-08-14T16:32:32", "upload_time_iso_8601": "2019-08-14T16:32:32.931425Z", "url": "https://files.pythonhosted.org/packages/cb/f9/9ab412cffe183a0c2782896e7d379084dc02b9974405a6a7e5ce0e9e9815/aws-cdk.aws-ec2-1.4.0.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "2273a3a479ea07e9d98c57f88a942e54", "sha256": "8f9ad5ecedd73564296491759ada538ddc02616d5d2f89554076af9236b14adf"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2273a3a479ea07e9d98c57f88a942e54", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 519608, "upload_time": "2019-08-21T11:32:34", "upload_time_iso_8601": "2019-08-21T11:32:34.637846Z", "url": "https://files.pythonhosted.org/packages/83/60/dce2d6cb3d6811a058d3c141cc26d01d5735921fdfcfe8462caacb841ea3/aws_cdk.aws_ec2-1.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "804e86491ab8feb761af7ef3aec43b9f", "sha256": "93d64d46007a3fb2a0049642fc82d18922affde21e80bcb017823bfb1c384fc8"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.5.0.tar.gz", "has_sig": false, "md5_digest": "804e86491ab8feb761af7ef3aec43b9f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 528102, "upload_time": "2019-08-21T11:35:28", "upload_time_iso_8601": "2019-08-21T11:35:28.040421Z", "url": "https://files.pythonhosted.org/packages/53/f6/3f82eb4d01ac5f36488a94c2a9331a00fb921dd99fb6eb3cb1025811e433/aws-cdk.aws-ec2-1.5.0.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "570537d811cf1e0bbb0e92435e14e650", "sha256": "17388569ac8e7af29f44c37998af172434762069e5aa3c10c7056492870c9ef2"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "570537d811cf1e0bbb0e92435e14e650", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 548529, "upload_time": "2019-08-27T18:11:27", "upload_time_iso_8601": "2019-08-27T18:11:27.198721Z", "url": "https://files.pythonhosted.org/packages/85/83/989558586caad7ac20345043ee41cbde9867b688613f380cadb87c070abc/aws_cdk.aws_ec2-1.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a6e7890f39b96fe8d5779bae7691afb1", "sha256": "7a4a156ac81c4cfd4420349b0cc282ee8e678563f0e86346aceb6e10b4e1030f"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.6.0.tar.gz", "has_sig": false, "md5_digest": "a6e7890f39b96fe8d5779bae7691afb1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 556587, "upload_time": "2019-08-27T18:14:16", "upload_time_iso_8601": "2019-08-27T18:14:16.099440Z", "url": "https://files.pythonhosted.org/packages/b3/13/93649f9a5673e8f907f91416801856ee7d1f45f7584846831c2946f71ef4/aws-cdk.aws-ec2-1.6.0.tar.gz", "yanked": false}], "1.6.1": [{"comment_text": "", "digests": {"md5": "683a6738f0784d41ef7e6c84f45752fc", "sha256": "1945b42f94be8f3fa3bd46bbdf056eaa321b922a84bc21622e50202e6c107d4f"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "683a6738f0784d41ef7e6c84f45752fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 551545, "upload_time": "2019-08-29T14:36:25", "upload_time_iso_8601": "2019-08-29T14:36:25.833299Z", "url": "https://files.pythonhosted.org/packages/e0/53/f3873c26416c97a8c021b6b884a686b5521ffbd08408b7e27519af471608/aws_cdk.aws_ec2-1.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dcaec31e5f072386a7de848046613b7e", "sha256": "9f6590890daa4c723da0cb57dfa12d20eb37fded1cf4f72b03884d6fb61d6b69"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.6.1.tar.gz", "has_sig": false, "md5_digest": "dcaec31e5f072386a7de848046613b7e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 560766, "upload_time": "2019-08-29T14:39:20", "upload_time_iso_8601": "2019-08-29T14:39:20.742464Z", "url": "https://files.pythonhosted.org/packages/6f/31/56ebfd082592cb66109b7a7e4a2d4f117438b71130b36ab14918e6fda66c/aws-cdk.aws-ec2-1.6.1.tar.gz", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "cddaab5ad5cbdc4e89af221b48110593", "sha256": "c9b62c0e345d20b0d1aa06562f11637337f65e60178a2a269fd8967134a72c00"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cddaab5ad5cbdc4e89af221b48110593", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 552543, "upload_time": "2019-09-06T01:55:11", "upload_time_iso_8601": "2019-09-06T01:55:11.724582Z", "url": "https://files.pythonhosted.org/packages/09/9f/83cbac47f4b0d9194bab4ba7d7242958691c0ba534e7637f9ea7ae3a0f20/aws_cdk.aws_ec2-1.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e505c7a8cbaf47541ce62fd264253fc5", "sha256": "9b8724cf6ad68b535e6623a9ded6bb0473ea56dca700abc5d52ea47086fdc981"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.7.0.tar.gz", "has_sig": false, "md5_digest": "e505c7a8cbaf47541ce62fd264253fc5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 561856, "upload_time": "2019-09-06T01:58:05", "upload_time_iso_8601": "2019-09-06T01:58:05.420291Z", "url": "https://files.pythonhosted.org/packages/a8/dd/000d3a47058e9ae083fa26f9f880284358108005c54ccaccbbfe636c1e09/aws-cdk.aws-ec2-1.7.0.tar.gz", "yanked": false}], "1.8.0": [{"comment_text": "", "digests": {"md5": "90d70cb37f221281812f9d8130d97c20", "sha256": "89679b0966bb9231fa6697bc0ac6f99f169314038b798c0ef17275ecfa321453"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "90d70cb37f221281812f9d8130d97c20", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 578094, "upload_time": "2019-09-10T22:10:28", "upload_time_iso_8601": "2019-09-10T22:10:28.234179Z", "url": "https://files.pythonhosted.org/packages/19/31/2652acf99707b3dcca99de2b12b008f30be38758f5868430adb2a7097f77/aws_cdk.aws_ec2-1.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "762afe9a7b62df892623774223c4219d", "sha256": "e8b986e1d489a8ae148af4b2ac25f01e62b437b1821d91b50409aa08ec9a3963"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.8.0.tar.gz", "has_sig": false, "md5_digest": "762afe9a7b62df892623774223c4219d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 587286, "upload_time": "2019-09-10T22:13:31", "upload_time_iso_8601": "2019-09-10T22:13:31.611823Z", "url": "https://files.pythonhosted.org/packages/4e/1e/22767c98456c32bc1ba77bd66bab3727902028b058950b2357d5a6e5ca0f/aws-cdk.aws-ec2-1.8.0.tar.gz", "yanked": false}], "1.9.0": [{"comment_text": "", "digests": {"md5": "589236deada0e14f1b790780fd37b5e9", "sha256": "ca7eaa6c7abce9399bdd79b67f1f0a428ac59caf83fac48e7e59697776924c22"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "589236deada0e14f1b790780fd37b5e9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 581409, "upload_time": "2019-09-20T10:46:54", "upload_time_iso_8601": "2019-09-20T10:46:54.809016Z", "url": "https://files.pythonhosted.org/packages/a4/4d/389493538b23361d6fa2b9ee99eef6049d81ae4630c00a270a9f3c4162c7/aws_cdk.aws_ec2-1.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da4a287e1edf9133e316630769869fa9", "sha256": "14e8d5cd00476acd077db26b294bc19cf973569560bf7c83e61baf3a8435af5c"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.9.0.tar.gz", "has_sig": false, "md5_digest": "da4a287e1edf9133e316630769869fa9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 590928, "upload_time": "2019-09-20T10:49:57", "upload_time_iso_8601": "2019-09-20T10:49:57.434535Z", "url": "https://files.pythonhosted.org/packages/59/73/56a0fe8ce243bc87d362fcaff9c05faf680fc6c10c6e52f2a6bf169b4a89/aws-cdk.aws-ec2-1.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4c3d89349b06401db4935f2282b948df", "sha256": "eda66a616a9ba5b77c813d094885030782b5f5195196e5fe4334ae95c331815c"}, "downloads": -1, "filename": "aws_cdk.aws_ec2-1.37.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4c3d89349b06401db4935f2282b948df", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 781475, "upload_time": "2020-05-05T16:39:37", "upload_time_iso_8601": "2020-05-05T16:39:37.181822Z", "url": "https://files.pythonhosted.org/packages/37/5a/7d3ec8c263a873ed2716399aaa57bcf9dcbac80df4971c0a88cc269179a4/aws_cdk.aws_ec2-1.37.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7636b5cffe287b2982b1dbebe67a3402", "sha256": "c2753f48f4dc95ea8c388abb509b8575a526c7eaab3fc0f409e80c02529a9336"}, "downloads": -1, "filename": "aws-cdk.aws-ec2-1.37.0.tar.gz", "has_sig": false, "md5_digest": "7636b5cffe287b2982b1dbebe67a3402", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 800822, "upload_time": "2020-05-05T16:42:11", "upload_time_iso_8601": "2020-05-05T16:42:11.430111Z", "url": "https://files.pythonhosted.org/packages/32/3d/4a5122561672c4eaa6106b1e77b1d9525dcf8c534538c71e2858f62b8deb/aws-cdk.aws-ec2-1.37.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:53 2020"}