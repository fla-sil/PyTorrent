{"info": {"author": "Vehbi Sinan Tunalioglu", "author_email": "vst@vsthost.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.9", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "django-lazydrf\n==============\n\n``django-lazydrf`` is a dirty magic applied to your models to generate\nautomated `Django Rest Framework <http://www.django-rest-framework.org/>`_ endpoints.\n\n    **Note** that this is an experimental project. Use at your own risk and sadness.\n\n``TODO: Provide a complete README``\n\nInstallation\n------------\n\n::\n\n    pip install django-lazydrf\n\nUsage\n-----\n\n1. Define a Django model as follows::\n\n    from django.db import models\n    from django.db.models import CharField\n\n    from lazydrf.models import LDRF\n\n\n    class Record(models.Model, metaclass=LDRF):\n        \"\"\"\n        Defines a key/value record model.\n        \"\"\"\n\n        #: Defines the key of the record.\n        key = CharField(max_length=16, unique=True, blank=False, null=False)\n\n        #: Defines the value of the record.\n        value = CharField(max_length=64, blank=False, null=False, db_index=True)\n\n        class Meta:\n            \"\"\"\n            Defines Django model metadata.\n            \"\"\"\n            app_label = \"sample\"\n\n        class APIFields:\n            \"\"\"\n            Defines fields related API metadata.\n            \"\"\"\n            editable = [\"key\", \"value\"]\n            ordering = [\"key\"]\n            searching = [\"key\", \"^value\"]\n\n        class APIFiltering:\n            \"\"\"\n            Defines filtering related API metadata.\n            \"\"\"\n            key = [\"exact\", \"icontains\", \"startswith\"]\n            value = [\"exact\", \"icontains\", \"startswith\"]\n\n        class APIViewset:\n            pass\n            #readonly = True\n\n\n2. Register all lazydrf models for a given Django application to the usual DRF router, like::\n\n    from django.conf.urls import url, include\n    from django.contrib import admin\n    from rest_framework import routers\n\n    from lazydrf.utils import register_app\n\n\n    #: Defines the DRF router.\n    Router = routers.DefaultRouter()\n\n    ## Register model endpoints for the sample Django application:\n    register_app(\"sample\", Router)\n\n    #: Defines URL patterns:\n    urlpatterns = [\n        url(r'^admin/', admin.site.urls),\n        url(r\"^\", include(Router.urls)),\n    ]", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vst/django-lazydrf", "keywords": null, "license": "BSD License", "maintainer": null, "maintainer_email": null, "name": "django-lazydrf", "package_url": "https://pypi.org/project/django-lazydrf/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-lazydrf/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/vst/django-lazydrf"}, "release_url": "https://pypi.org/project/django-lazydrf/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Dirty magic to generate automated DRF endpoints", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt><span class=\"pre\">django-lazydrf</span></tt> is a dirty magic applied to your models to generate\nautomated <a href=\"http://www.django-rest-framework.org/\" rel=\"nofollow\">Django Rest Framework</a> endpoints.</p>\n<blockquote>\n<strong>Note</strong> that this is an experimental project. Use at your own risk and sadness.</blockquote>\n<p><tt>TODO: Provide a complete README</tt></p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install django-lazydrf\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<ol>\n<li><p>Define a Django model as follows:</p>\n<pre>from django.db import models\nfrom django.db.models import CharField\n\nfrom lazydrf.models import LDRF\n\n\nclass Record(models.Model, metaclass=LDRF):\n    \"\"\"\n    Defines a key/value record model.\n    \"\"\"\n\n    #: Defines the key of the record.\n    key = CharField(max_length=16, unique=True, blank=False, null=False)\n\n    #: Defines the value of the record.\n    value = CharField(max_length=64, blank=False, null=False, db_index=True)\n\n    class Meta:\n        \"\"\"\n        Defines Django model metadata.\n        \"\"\"\n        app_label = \"sample\"\n\n    class APIFields:\n        \"\"\"\n        Defines fields related API metadata.\n        \"\"\"\n        editable = [\"key\", \"value\"]\n        ordering = [\"key\"]\n        searching = [\"key\", \"^value\"]\n\n    class APIFiltering:\n        \"\"\"\n        Defines filtering related API metadata.\n        \"\"\"\n        key = [\"exact\", \"icontains\", \"startswith\"]\n        value = [\"exact\", \"icontains\", \"startswith\"]\n\n    class APIViewset:\n        pass\n        #readonly = True\n</pre>\n</li>\n<li><p>Register all lazydrf models for a given Django application to the usual DRF router, like:</p>\n<pre>from django.conf.urls import url, include\nfrom django.contrib import admin\nfrom rest_framework import routers\n\nfrom lazydrf.utils import register_app\n\n\n#: Defines the DRF router.\nRouter = routers.DefaultRouter()\n\n## Register model endpoints for the sample Django application:\nregister_app(\"sample\", Router)\n\n#: Defines URL patterns:\nurlpatterns = [\n    url(r'^admin/', admin.site.urls),\n    url(r\"^\", include(Router.urls)),\n]\n</pre>\n</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 2066615, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a4a3991d3a32f14eae0d141499478d0a", "sha256": "d90798f00379a2e5eac051b0454762ac057d334d353a3b7fef038db30371b926"}, "downloads": -1, "filename": "django-lazydrf-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a4a3991d3a32f14eae0d141499478d0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7929, "upload_time": "2016-04-16T02:08:29", "upload_time_iso_8601": "2016-04-16T02:08:29.089717Z", "url": "https://files.pythonhosted.org/packages/7b/70/b652d8c28d2188eb7bbe60d2a4dcbe8548715f49b04ba4b64fb82e7c8a3c/django-lazydrf-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a4a3991d3a32f14eae0d141499478d0a", "sha256": "d90798f00379a2e5eac051b0454762ac057d334d353a3b7fef038db30371b926"}, "downloads": -1, "filename": "django-lazydrf-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a4a3991d3a32f14eae0d141499478d0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7929, "upload_time": "2016-04-16T02:08:29", "upload_time_iso_8601": "2016-04-16T02:08:29.089717Z", "url": "https://files.pythonhosted.org/packages/7b/70/b652d8c28d2188eb7bbe60d2a4dcbe8548715f49b04ba4b64fb82e7c8a3c/django-lazydrf-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:24 2020"}