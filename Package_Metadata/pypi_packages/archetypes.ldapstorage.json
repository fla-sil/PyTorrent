{"info": {"author": "Ricardo Alves", "author_email": "rsa@eurotux.com", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Description\n\n    This product features an Archetypes storage that stores field values in\n    an LDAP directory.\n\nUsage\n\n    See directory 'examples/' for some examples of content types using\n    LDAPStorage.\n\n    There are some issues regarding LDAPStorage and Archetypes:\n\n        - the storage initialization requires the following parameters:\n\n            - the LDAP RDN attribute. For example, in the folowing LDAP\n              entry, the RDN attribute is 'cn':\n\n                dn: cn=johndoe,dc=localhost,dc=localdomain\n                objectClass: inetOrgPerson\n                uid: johndoe\n                cn: johndoe\n                sn: John Doe\n\n            - the attribute that should be used to get the RDN value. It can\n            be a method, archetypes field or instance variable from which\n            the value will be retrieved to construct the entry DN.\n\n            NOTES:\n\n            1) If an archetypes field is used, it must be using \n            LDAPStorage and you must ensure that the field is the RDN \n            field that you defined and its attribute is the RDN attribute. \n\n            2) If you want to use a field that is not in LDAP, \n            you should use its accessor, but note that LDAPStorage won't be \n            able to know when its value changes. So, be sure that methods or\n            variables used as RDN mapping are not mutable.\n\n            - the LDAP attribute to store the value from this field;\n\n            The following example is correct:\n\n                ...\n                StringField(\n                    'name',\n                    storage = LDAPStorage(\n                        'cn',\n                        'name',\n                        'cn',\n                        default_attrs = {\n                            'objectClass': ['inetOrgPerson'],\n                        },\n                        required_attrs = ['sn', 'cn'],\n                    ),\n                ),\n                ...\n\n            The following example would raise the exception\n            'InvalidRDNError':\n\n                ...\n                StringField(\n                    'name',\n                    storage = LDAPStorage(\n                        'cn',\n                        'organization',\n                        'cn',\n                        default_attrs = {\n                            'objectClass': ['inetOrgPerson'],\n                        },\n                        required_attrs = ['sn', 'cn'],\n                    ),\n                ),\n                ...\n\n        - it has also some additional parameters:\n\n            - a dictionary of common attributes. This dictionary will be\n            used to set default values in certain LDAP attributes, at the\n            creation of new entries. For example, this dictionary could be:\n\n                >>> default_attrs = {'objectClass': 'inetOrgPerson'}\n\n            - list of required attributes in LDAP schema. It will tell the\n            storage what fields are required in LDAP, so it knows they must\n            be included in initialization. For example, the list, assuming\n            that the only object class used is 'inetOrgPerson', would be:\n\n                >>> required_attrs = ['sn', 'cn']\n\n        - the usage of this storage assumes that the defined schemas \n        (LDAP and Archetypes) are compatible. Attributes that are required \n        in LDAP schema, should be also required in Archetypes schema. \n\nTests\n\n    To run unit tests you need to have a configured LDAP server, and fill\n    the settings in tests/config file.\n\nRequirements\n\n    - CMFPlone 3.0\n\n    - Archetypes 1.4\n\n    - python-ldap\n\n    - LDAPConnection 0.1a1 or newer\n\nTodo\n    \n    Read file todo.txt for details.\n\n\nCopyright\n\n    Ricardo Alves <rsa at eurotux dot com>\n\n    Eurotux Development Team <udp at eurotux dot com>\n\nLicense\n\n    This software is released under GPL v2. Read LICENSE.txt\n\nChangelog\n=========\n\n0.1 - Unreleased\n----------------\n\n* Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://plone.org/products/archetypes.ldapstorage", "keywords": "plone archetypes ldap storage", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "archetypes.ldapstorage", "package_url": "https://pypi.org/project/archetypes.ldapstorage/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/archetypes.ldapstorage/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://plone.org/products/archetypes.ldapstorage"}, "release_url": "https://pypi.org/project/archetypes.ldapstorage/0.1a1/", "requires_dist": null, "requires_python": null, "summary": "LDAP Storage for Archetypes", "version": "0.1a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Description<br><br>    This product features an Archetypes storage that stores field values in<br>    an LDAP directory.<br><br>Usage<br><br>    See directory 'examples/' for some examples of content types using<br>    LDAPStorage.<br><br>    There are some issues regarding LDAPStorage and Archetypes:<br><br>        - the storage initialization requires the following parameters:<br><br>            - the LDAP RDN attribute. For example, in the folowing LDAP<br>              entry, the RDN attribute is 'cn':<br><br>                dn: cn=johndoe,dc=localhost,dc=localdomain<br>                objectClass: inetOrgPerson<br>                uid: johndoe<br>                cn: johndoe<br>                sn: John Doe<br><br>            - the attribute that should be used to get the RDN value. It can<br>            be a method, archetypes field or instance variable from which<br>            the value will be retrieved to construct the entry DN.<br><br>            NOTES:<br><br>            1) If an archetypes field is used, it must be using <br>            LDAPStorage and you must ensure that the field is the RDN <br>            field that you defined and its attribute is the RDN attribute. <br><br>            2) If you want to use a field that is not in LDAP, <br>            you should use its accessor, but note that LDAPStorage won't be <br>            able to know when its value changes. So, be sure that methods or<br>            variables used as RDN mapping are not mutable.<br><br>            - the LDAP attribute to store the value from this field;<br><br>            The following example is correct:<br><br>                ...<br>                StringField(<br>                    'name',<br>                    storage = LDAPStorage(<br>                        'cn',<br>                        'name',<br>                        'cn',<br>                        default_attrs = {<br>                            'objectClass': ['inetOrgPerson'],<br>                        },<br>                        required_attrs = ['sn', 'cn'],<br>                    ),<br>                ),<br>                ...<br><br>            The following example would raise the exception<br>            'InvalidRDNError':<br><br>                ...<br>                StringField(<br>                    'name',<br>                    storage = LDAPStorage(<br>                        'cn',<br>                        'organization',<br>                        'cn',<br>                        default_attrs = {<br>                            'objectClass': ['inetOrgPerson'],<br>                        },<br>                        required_attrs = ['sn', 'cn'],<br>                    ),<br>                ),<br>                ...<br><br>        - it has also some additional parameters:<br><br>            - a dictionary of common attributes. This dictionary will be<br>            used to set default values in certain LDAP attributes, at the<br>            creation of new entries. For example, this dictionary could be:<br><br>                &gt;&gt;&gt; default_attrs = {'objectClass': 'inetOrgPerson'}<br><br>            - list of required attributes in LDAP schema. It will tell the<br>            storage what fields are required in LDAP, so it knows they must<br>            be included in initialization. For example, the list, assuming<br>            that the only object class used is 'inetOrgPerson', would be:<br><br>                &gt;&gt;&gt; required_attrs = ['sn', 'cn']<br><br>        - the usage of this storage assumes that the defined schemas <br>        (LDAP and Archetypes) are compatible. Attributes that are required <br>        in LDAP schema, should be also required in Archetypes schema. <br><br>Tests<br><br>    To run unit tests you need to have a configured LDAP server, and fill<br>    the settings in tests/config file.<br><br>Requirements<br><br>    - CMFPlone 3.0<br><br>    - Archetypes 1.4<br><br>    - python-ldap<br><br>    - LDAPConnection 0.1a1 or newer<br><br>Todo<br>    <br>    Read file todo.txt for details.<br><br><br>Copyright<br><br>    Ricardo Alves &lt;rsa at eurotux dot com&gt;<br><br>    Eurotux Development Team &lt;udp at eurotux dot com&gt;<br><br>License<br><br>    This software is released under GPL v2. Read LICENSE.txt<br><br>Changelog<br>=========<br><br>0.1 - Unreleased<br>----------------<br><br>* Initial release\n          </div>"}, "last_serial": 786384, "releases": {"0.1a1": [{"comment_text": "", "digests": {"md5": "3619e352071ee58fb6bc0e8cd46bf17e", "sha256": "93f21d678010b5b52af39af680c40fd468a3d8a9474c2620c9689b01f297fc59"}, "downloads": -1, "filename": "archetypes.ldapstorage-0.1a1.tar.gz", "has_sig": false, "md5_digest": "3619e352071ee58fb6bc0e8cd46bf17e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 70573, "upload_time": "2009-06-11T22:20:31", "upload_time_iso_8601": "2009-06-11T22:20:31.293696Z", "url": "https://files.pythonhosted.org/packages/8c/76/2f748579c5e2802c40cf822900a4e53f4a242acb0fae4d9918d78a9221a7/archetypes.ldapstorage-0.1a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3619e352071ee58fb6bc0e8cd46bf17e", "sha256": "93f21d678010b5b52af39af680c40fd468a3d8a9474c2620c9689b01f297fc59"}, "downloads": -1, "filename": "archetypes.ldapstorage-0.1a1.tar.gz", "has_sig": false, "md5_digest": "3619e352071ee58fb6bc0e8cd46bf17e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 70573, "upload_time": "2009-06-11T22:20:31", "upload_time_iso_8601": "2009-06-11T22:20:31.293696Z", "url": "https://files.pythonhosted.org/packages/8c/76/2f748579c5e2802c40cf822900a4e53f4a242acb0fae4d9918d78a9221a7/archetypes.ldapstorage-0.1a1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:24 2020"}