{"info": {"author": "painor", "author_email": "topcode.softwares@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Communications :: Chat"], "description": "telethon-secret-chat\n====================\n\nSecret chat plugin for telethon\n\nThis is still a work in progress so expect more commits to it. Used\n`https://core.telegram.org/api/end-to-end`_ at first but it wasn't clear\nenough so I followed their advice and checked one of the implementations\nthat had it `https://github.com/danog/MadelineProto`_ so this pluigin is\nbased on daniil's implementation at its core.\n\n-  \u2612 Accepting secret chats\n-  \u2612 Creating secret chats\n-  \u2612 Closing secret chats\n-  \u2612 Sending text messages\n-  \u2612 Recieving text messages\n-  \u2612 Uploading/downloading media\n-  \u2612 Dealing with rekeying\u00b9\n-  \u2610 Saving secret chats keys to database\u00b2\n-  \u2610 Saving messages to database\u00b3\n-  \u2612 Automatic decryption/accepting/finishing\n\n\u00b9 Every 100 messages you need to recreate the auth key.\n\n\u00b2 Auth keys are saved client sides so if you restart the script you will\nlose all secret chats you had and can no longer recieve messages from\nthem\n\n\u00b3 There is no get_messages function in secret chats so users can't see\nold messages.\n\nExamples :\n\n::\n\n   client = TelegramClient(...)\n\n   async def replier(event):\n    # all events are encrypted by default\n    if event.decrypted_event.message and event.decrypted_event.message == \"hello\":\n        await event.reply(\"hi\")\n\n\n    manager = SecretChatManager(client, auto_accept=True)  # automatically accept new secret chats\n    manager.add_secret_event_handler(func=replier) # we can specify the type of the event\n    client.run_until_disconnected()\n\nTo start a secret chat you can call\n\n::\n\n    manager.start_secret_chat(target)\n\nto use sqlite as a storage session you need to pass an sqlite connection to `SecretChatManager`\n\n::\n\n        manager = SecretChatManager(client,session=db_conn, auto_accept=True)\n        # you can also pass client.session from telethon as such\n        manager = SecretChatManager(client,session=client.session, auto_accept=True)\n\nto manually accept incoming you can do as follow\n\n::\n\n        from telethon_secret_chat import SecretChatManager, SECRET_TYPES\n        manager = SecretChatManager(client, auto_accept=False)\n        manager.add_secret_event_handler(event_type=SECRET_TYPES.accept,func=accept_secret_chat_handler)\n\nin your handler you can do the following\n\n::\n\n    await manager.accept_secret_chat(event.chat)\n\n.. _`https://core.telegram.org/api/end-to-end`: https://core.telegram.org/api/end-to-end\n.. _`https://github.com/danog/MadelineProto`: https://github.com/danog/MadelineProto\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/painor/telethon-secret-chat/releases", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/painor/telethon-secret-chat", "keywords": "Telegram,Telethon,SecretChats,Plugin", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "telethon-secret-chat", "package_url": "https://pypi.org/project/telethon-secret-chat/", "platform": "", "project_url": "https://pypi.org/project/telethon-secret-chat/", "project_urls": {"Download": "https://github.com/painor/telethon-secret-chat/releases", "Homepage": "https://github.com/painor/telethon-secret-chat"}, "release_url": "https://pypi.org/project/telethon-secret-chat/0.2.1/", "requires_dist": ["telethon"], "requires_python": ">=3.5", "summary": "Telethon secret chat plugin", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Secret chat plugin for telethon</p>\n<p>This is still a work in progress so expect more commits to it. Used\n<a href=\"https://core.telegram.org/api/end-to-end\" rel=\"nofollow\">https://core.telegram.org/api/end-to-end</a> at first but it wasn\u2019t clear\nenough so I followed their advice and checked one of the implementations\nthat had it <a href=\"https://github.com/danog/MadelineProto\" rel=\"nofollow\">https://github.com/danog/MadelineProto</a> so this pluigin is\nbased on daniil\u2019s implementation at its core.</p>\n<ul>\n<li>\u2612 Accepting secret chats</li>\n<li>\u2612 Creating secret chats</li>\n<li>\u2612 Closing secret chats</li>\n<li>\u2612 Sending text messages</li>\n<li>\u2612 Recieving text messages</li>\n<li>\u2612 Uploading/downloading media</li>\n<li>\u2612 Dealing with rekeying\u00b9</li>\n<li>\u2610 Saving secret chats keys to database\u00b2</li>\n<li>\u2610 Saving messages to database\u00b3</li>\n<li>\u2612 Automatic decryption/accepting/finishing</li>\n</ul>\n<p>\u00b9 Every 100 messages you need to recreate the auth key.</p>\n<p>\u00b2 Auth keys are saved client sides so if you restart the script you will\nlose all secret chats you had and can no longer recieve messages from\nthem</p>\n<p>\u00b3 There is no get_messages function in secret chats so users can\u2019t see\nold messages.</p>\n<p>Examples :</p>\n<pre>client = TelegramClient(...)\n\nasync def replier(event):\n # all events are encrypted by default\n if event.decrypted_event.message and event.decrypted_event.message == \"hello\":\n     await event.reply(\"hi\")\n\n\n manager = SecretChatManager(client, auto_accept=True)  # automatically accept new secret chats\n manager.add_secret_event_handler(func=replier) # we can specify the type of the event\n client.run_until_disconnected()\n</pre>\n<p>To start a secret chat you can call</p>\n<pre>manager.start_secret_chat(target)\n</pre>\n<p>to use sqlite as a storage session you need to pass an sqlite connection to <cite>SecretChatManager</cite></p>\n<pre>manager = SecretChatManager(client,session=db_conn, auto_accept=True)\n# you can also pass client.session from telethon as such\nmanager = SecretChatManager(client,session=client.session, auto_accept=True)\n</pre>\n<p>to manually accept incoming you can do as follow</p>\n<pre>from telethon_secret_chat import SecretChatManager, SECRET_TYPES\nmanager = SecretChatManager(client, auto_accept=False)\nmanager.add_secret_event_handler(event_type=SECRET_TYPES.accept,func=accept_secret_chat_handler)\n</pre>\n<p>in your handler you can do the following</p>\n<pre>await manager.accept_secret_chat(event.chat)\n</pre>\n\n          </div>"}, "last_serial": 6748352, "releases": {"0.1.13": [{"comment_text": "", "digests": {"md5": "15d1b82bbecd35997ffbbda33ac1412b", "sha256": "e588afd7acd148d04de74e5802aacb750faeb8472af34be1c1791750ddeb1011"}, "downloads": -1, "filename": "telethon_secret_chat-0.1.13-py3-none-any.whl", "has_sig": false, "md5_digest": "15d1b82bbecd35997ffbbda33ac1412b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 20144, "upload_time": "2020-03-03T16:52:45", "upload_time_iso_8601": "2020-03-03T16:52:45.201934Z", "url": "https://files.pythonhosted.org/packages/df/d4/3c41756d527cc0c2f23e5f874d43fb878724b2e3c0e1181c78dd70656753/telethon_secret_chat-0.1.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b263e67cd789f4fbdfd5bb17bd02f7da", "sha256": "8b6e100d1c6bdf091dad707bd343441fe6fcb98823ae6f732ec71bf740b086be"}, "downloads": -1, "filename": "telethon_secret_chat-0.1.13.tar.gz", "has_sig": false, "md5_digest": "b263e67cd789f4fbdfd5bb17bd02f7da", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18702, "upload_time": "2020-03-03T16:52:47", "upload_time_iso_8601": "2020-03-03T16:52:47.110160Z", "url": "https://files.pythonhosted.org/packages/6a/90/b2733f31a4e9b39ed38b4076037d032977bd8627da9993883037b371da15/telethon_secret_chat-0.1.13.tar.gz", "yanked": false}], "0.1.15": [{"comment_text": "", "digests": {"md5": "87c8f6453c0fbbd5ba6f1947bb12de3e", "sha256": "229076142f6c58d832f67906209c869c19d24f9e704571b78c2c105f4c4b9840"}, "downloads": -1, "filename": "telethon_secret_chat-0.1.15-py3-none-any.whl", "has_sig": false, "md5_digest": "87c8f6453c0fbbd5ba6f1947bb12de3e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 23941, "upload_time": "2020-03-04T12:47:57", "upload_time_iso_8601": "2020-03-04T12:47:57.193958Z", "url": "https://files.pythonhosted.org/packages/19/d2/094d9bf8e89288cdc84ef3c99469c2034b9717bf11fe110de2cc211e9599/telethon_secret_chat-0.1.15-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6e87387409149f0a015ff6aa2403ae8", "sha256": "6c0a9eecdb18f1fb0ce139931d3d4dcb9f17d02c705b13bfdfd09ad63467f4ab"}, "downloads": -1, "filename": "telethon_secret_chat-0.1.15.tar.gz", "has_sig": false, "md5_digest": "f6e87387409149f0a015ff6aa2403ae8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 21694, "upload_time": "2020-03-04T12:47:58", "upload_time_iso_8601": "2020-03-04T12:47:58.856585Z", "url": "https://files.pythonhosted.org/packages/c2/c9/2e16c2040b00b3a2767a80bfc71a853f8cc2d2b0bf08e0947c4238127af5/telethon_secret_chat-0.1.15.tar.gz", "yanked": false}], "0.1.16": [{"comment_text": "", "digests": {"md5": "999d709975072b2a2e247937587ec728", "sha256": "e8912caabec6a72af1202e6e6695daefe2b9458ff9186d5df2933a7f803e8d46"}, "downloads": -1, "filename": "telethon_secret_chat-0.1.16-py3-none-any.whl", "has_sig": false, "md5_digest": "999d709975072b2a2e247937587ec728", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 24032, "upload_time": "2020-03-04T13:14:50", "upload_time_iso_8601": "2020-03-04T13:14:50.013219Z", "url": "https://files.pythonhosted.org/packages/cc/32/d0f8219a620862a5110d56513242d7ee2df6a6493c4b89ee81ae60a177e0/telethon_secret_chat-0.1.16-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d1196ff8547687f3a167a7d3d467563f", "sha256": "867db98013f75e5d072e4ff3c1c3bad7737d053312eee3e83b0ee42d71ee98ba"}, "downloads": -1, "filename": "telethon_secret_chat-0.1.16.tar.gz", "has_sig": false, "md5_digest": "d1196ff8547687f3a167a7d3d467563f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 21789, "upload_time": "2020-03-04T13:14:51", "upload_time_iso_8601": "2020-03-04T13:14:51.321318Z", "url": "https://files.pythonhosted.org/packages/7a/28/5b3b6aff7bd7b14b6c1cea5d54f78514d6a0bcef8ce0996799a36976baad/telethon_secret_chat-0.1.16.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "06feb8aa1047b1b890acd7b07e9c217d", "sha256": "97fd0b1c7ecf19475fb4e341dbacb2430efaddd6394417b9c2cfc37c6123f915"}, "downloads": -1, "filename": "telethon_secret_chat-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "06feb8aa1047b1b890acd7b07e9c217d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 24019, "upload_time": "2020-03-04T14:53:08", "upload_time_iso_8601": "2020-03-04T14:53:08.842621Z", "url": "https://files.pythonhosted.org/packages/17/cc/ee324b69265349f1d4b37f1a01780ed5167750d2732f6a779cb0cf2af7e2/telethon_secret_chat-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4822029da4f50907abbeb663fe818a7", "sha256": "743d3c0d96543300e426337b442871808edf5afa449cac48cb1e49d9226bd8ca"}, "downloads": -1, "filename": "telethon_secret_chat-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e4822029da4f50907abbeb663fe818a7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 21780, "upload_time": "2020-03-04T14:53:10", "upload_time_iso_8601": "2020-03-04T14:53:10.208364Z", "url": "https://files.pythonhosted.org/packages/84/d3/819fac0a7232424f4d5ebed8e10f0c35bd2dc51cde610463722da2df0910/telethon_secret_chat-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "06feb8aa1047b1b890acd7b07e9c217d", "sha256": "97fd0b1c7ecf19475fb4e341dbacb2430efaddd6394417b9c2cfc37c6123f915"}, "downloads": -1, "filename": "telethon_secret_chat-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "06feb8aa1047b1b890acd7b07e9c217d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 24019, "upload_time": "2020-03-04T14:53:08", "upload_time_iso_8601": "2020-03-04T14:53:08.842621Z", "url": "https://files.pythonhosted.org/packages/17/cc/ee324b69265349f1d4b37f1a01780ed5167750d2732f6a779cb0cf2af7e2/telethon_secret_chat-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4822029da4f50907abbeb663fe818a7", "sha256": "743d3c0d96543300e426337b442871808edf5afa449cac48cb1e49d9226bd8ca"}, "downloads": -1, "filename": "telethon_secret_chat-0.2.1.tar.gz", "has_sig": false, "md5_digest": "e4822029da4f50907abbeb663fe818a7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 21780, "upload_time": "2020-03-04T14:53:10", "upload_time_iso_8601": "2020-03-04T14:53:10.208364Z", "url": "https://files.pythonhosted.org/packages/84/d3/819fac0a7232424f4d5ebed8e10f0c35bd2dc51cde610463722da2df0910/telethon_secret_chat-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:50 2020"}