{"info": {"author": "Jeremy Brown", "author_email": "mischif@users.noreply.github.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: Open Software License 3.0 (OSL-3.0)", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "music-metadata-tools\n====================\n\nA collection of tools for manipulating and interacting with music metadata.\n\n\nid3autosort - metadata-based music organization utility\n-------------------------------------------------------\n\nid3autosort organizes music libraries based on each track's metadata. Supports AAC, AIFF, FLAC, MP3, OGG and WMA formats.\n\n# Usage\n\n\t$ id3autosort [-u] [-n] [-v] [-s <desired structure>] /path/to/music [/path/to/music ...] /path/music/should/go\n\n\n## General Options\n\n\t--windows-unsafe, -u\tUse all characters in metadata for new directories,\n\t\t\t\t\t\t\tincluding ones Windows filesystems normally choke on\n\t--dry-run, -n\t\t\tSimulate the actions instead of actually doing them\n\t--verbose, -v\t\t\tIncrease logging verbosity\n\n\n## Structure Option\n\nThe `-s` switch allows the user to define the way they wish their music to be structured, which will be obeyed so long as the user's music has the necessary tags.\n\nSupported structure metatags: d (date), g (genre), l (album), r (artist)\n\nFor example, if a user specifies the structure \"r/l (d)\" with a destination directory of /tmp/music, results would be similar to these:\n\n/tmp/music/Nirvana/Nevermind (1991)/Smells Like Teen Spirit.mp3\n/tmp/music/The Eagles/Hotel California (1976)/Hotel California.flac\n/tmp/music/Tupac/All Eyez On Me (1996)/California Love.ogg\n\nWhereas if a user specifies the structure \"g/d/r\" with the same destination directory, results would be similar to these:\n\n/tmp/music/House/2001/Daft Punk/Crescendolls.wma\n/tmp/music/Pop/2014/Taylor Swift/Shake It Off.aiff\n/tmp/music/Dubstep/2006/Skream/Midnight Request Line.m4a\n\nCharacters that are not already reserved for expansion are passed through to the generated structure, but no guarantee is made that other letters will not be used to expand other tags in the future.\n\n\napic-tool - music file image manipulation utility\n-------------------------------------------------\n\napic-tool allows the user to insert and extract image data from music files. Currently supports mp3 files.\n\n# Usage\n\nGeneral Options\n---------------\n\n\t--dry-run, -d\tSimulate the actions instead of actually doing them\n\t--verbose, -v\tChange the program's verbosity\n\t--force\t\t\tWhether or not the tool should allow things to happen that may have complications\n\n\nExtracting Images From Music Files\n----------------------------------\n\n### Extract image from file to specified location:\n\n\t$ apic-tool extract /path/to/file.mp3 /path/for/outfile.jpg\n\nNote that if not forced, the actual extension used may change depending on the image type in the file.\n\n\n### Extract image from file with no specified location:\n\n\t$ apic-tool extract /path/to/file.mp3\n\nImage will be saved to /path/to/file.xyz, with `xyz` changing depending on the image type in the file.\n\n\nInserting Images Into Music Files\n---------------------------------\n\n#### Insertion Options\n\n\t--pic, -p /path/to/image.jpg\t\t\t\t\t\t\t\tImage to insert into music files\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(currently support GIF, JPEG, PNG)\n\t--dir, -d /path/to/music [/path/to/other/music ...],\t\tDirectory or directories containing files to insert image into\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNOTE: does not recurse\n\t--file, -f /path/to/file.mp3 [/path/to/other/file.mp3 ...]\tIndividual files to insert image into\n\t--keep, -k\t\t\t\t\t\t\t\t\t\t\t\t\tDon't delete image after inserting it\n\n\n### Put an image into a file:\n\n\t$ apic-tool insert --file /path/to/file.mp3 --pic /path/to/image.jpg\n\n### Put an image into a directory of files:\n\n\t$ apic-tool insert --d /path/to/dir --p /path/to/image.jpg\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mischif/music-metadata-tools", "keywords": "ID3", "license": "NPOSL-3.0", "maintainer": "", "maintainer_email": "", "name": "music-metadata-tools", "package_url": "https://pypi.org/project/music-metadata-tools/", "platform": "", "project_url": "https://pypi.org/project/music-metadata-tools/", "project_urls": {"Homepage": "https://github.com/mischif/music-metadata-tools"}, "release_url": "https://pypi.org/project/music-metadata-tools/1.0.0/", "requires_dist": ["mutagen", "codecov ; extra == 'test'"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.8.*, <4", "summary": "A collection of tools for manipulating and interacting with music metadata.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>music-metadata-tools</h1>\n<p>A collection of tools for manipulating and interacting with music metadata.</p>\n<h2>id3autosort - metadata-based music organization utility</h2>\n<p>id3autosort organizes music libraries based on each track's metadata. Supports AAC, AIFF, FLAC, MP3, OGG and WMA formats.</p>\n<h1>Usage</h1>\n<pre><code>$ id3autosort [-u] [-n] [-v] [-s &lt;desired structure&gt;] /path/to/music [/path/to/music ...] /path/music/should/go\n</code></pre>\n<h2>General Options</h2>\n<pre><code>--windows-unsafe, -u\tUse all characters in metadata for new directories,\n\t\t\t\t\t\tincluding ones Windows filesystems normally choke on\n--dry-run, -n\t\t\tSimulate the actions instead of actually doing them\n--verbose, -v\t\t\tIncrease logging verbosity\n</code></pre>\n<h2>Structure Option</h2>\n<p>The <code>-s</code> switch allows the user to define the way they wish their music to be structured, which will be obeyed so long as the user's music has the necessary tags.</p>\n<p>Supported structure metatags: d (date), g (genre), l (album), r (artist)</p>\n<p>For example, if a user specifies the structure \"r/l (d)\" with a destination directory of /tmp/music, results would be similar to these:</p>\n<p>/tmp/music/Nirvana/Nevermind (1991)/Smells Like Teen Spirit.mp3\n/tmp/music/The Eagles/Hotel California (1976)/Hotel California.flac\n/tmp/music/Tupac/All Eyez On Me (1996)/California Love.ogg</p>\n<p>Whereas if a user specifies the structure \"g/d/r\" with the same destination directory, results would be similar to these:</p>\n<p>/tmp/music/House/2001/Daft Punk/Crescendolls.wma\n/tmp/music/Pop/2014/Taylor Swift/Shake It Off.aiff\n/tmp/music/Dubstep/2006/Skream/Midnight Request Line.m4a</p>\n<p>Characters that are not already reserved for expansion are passed through to the generated structure, but no guarantee is made that other letters will not be used to expand other tags in the future.</p>\n<h2>apic-tool - music file image manipulation utility</h2>\n<p>apic-tool allows the user to insert and extract image data from music files. Currently supports mp3 files.</p>\n<h1>Usage</h1>\n<h2>General Options</h2>\n<pre><code>--dry-run, -d\tSimulate the actions instead of actually doing them\n--verbose, -v\tChange the program's verbosity\n--force\t\t\tWhether or not the tool should allow things to happen that may have complications\n</code></pre>\n<h2>Extracting Images From Music Files</h2>\n<h3>Extract image from file to specified location:</h3>\n<pre><code>$ apic-tool extract /path/to/file.mp3 /path/for/outfile.jpg\n</code></pre>\n<p>Note that if not forced, the actual extension used may change depending on the image type in the file.</p>\n<h3>Extract image from file with no specified location:</h3>\n<pre><code>$ apic-tool extract /path/to/file.mp3\n</code></pre>\n<p>Image will be saved to /path/to/file.xyz, with <code>xyz</code> changing depending on the image type in the file.</p>\n<h2>Inserting Images Into Music Files</h2>\n<h4>Insertion Options</h4>\n<pre><code>--pic, -p /path/to/image.jpg\t\t\t\t\t\t\t\tImage to insert into music files\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(currently support GIF, JPEG, PNG)\n--dir, -d /path/to/music [/path/to/other/music ...],\t\tDirectory or directories containing files to insert image into\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNOTE: does not recurse\n--file, -f /path/to/file.mp3 [/path/to/other/file.mp3 ...]\tIndividual files to insert image into\n--keep, -k\t\t\t\t\t\t\t\t\t\t\t\t\tDon't delete image after inserting it\n</code></pre>\n<h3>Put an image into a file:</h3>\n<pre><code>$ apic-tool insert --file /path/to/file.mp3 --pic /path/to/image.jpg\n</code></pre>\n<h3>Put an image into a directory of files:</h3>\n<pre><code>$ apic-tool insert --d /path/to/dir --p /path/to/image.jpg\n</code></pre>\n\n          </div>"}, "last_serial": 6101548, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "89a5765b05be3fd576f86b1c82c94311", "sha256": "59f3da162f8f599e290ae478f3bc449743c416e9bccad064662df2fe614c8b85"}, "downloads": -1, "filename": "music_metadata_tools-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "89a5765b05be3fd576f86b1c82c94311", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.8.*, <4", "size": 21365, "upload_time": "2019-11-08T21:00:14", "upload_time_iso_8601": "2019-11-08T21:00:14.568273Z", "url": "https://files.pythonhosted.org/packages/f6/9e/cd95090396d0661e024807b74517311f015d439511f0b4cfbc4cb4d880bf/music_metadata_tools-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f2117fe6260a139cced344d1a07849f", "sha256": "5d5acb97a7461027ae6f11a3abcfb4cd3d0e929a0feca9a288cea89a781ff8fc"}, "downloads": -1, "filename": "music-metadata-tools-1.0.0.tar.gz", "has_sig": false, "md5_digest": "1f2117fe6260a139cced344d1a07849f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.8.*, <4", "size": 16346, "upload_time": "2019-11-08T21:00:17", "upload_time_iso_8601": "2019-11-08T21:00:17.019424Z", "url": "https://files.pythonhosted.org/packages/43/12/58b13927544b91ef8fccfe80d3c9389335a7e903a9e79a771bad1f7eec36/music-metadata-tools-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "89a5765b05be3fd576f86b1c82c94311", "sha256": "59f3da162f8f599e290ae478f3bc449743c416e9bccad064662df2fe614c8b85"}, "downloads": -1, "filename": "music_metadata_tools-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "89a5765b05be3fd576f86b1c82c94311", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.8.*, <4", "size": 21365, "upload_time": "2019-11-08T21:00:14", "upload_time_iso_8601": "2019-11-08T21:00:14.568273Z", "url": "https://files.pythonhosted.org/packages/f6/9e/cd95090396d0661e024807b74517311f015d439511f0b4cfbc4cb4d880bf/music_metadata_tools-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f2117fe6260a139cced344d1a07849f", "sha256": "5d5acb97a7461027ae6f11a3abcfb4cd3d0e929a0feca9a288cea89a781ff8fc"}, "downloads": -1, "filename": "music-metadata-tools-1.0.0.tar.gz", "has_sig": false, "md5_digest": "1f2117fe6260a139cced344d1a07849f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.8.*, <4", "size": 16346, "upload_time": "2019-11-08T21:00:17", "upload_time_iso_8601": "2019-11-08T21:00:17.019424Z", "url": "https://files.pythonhosted.org/packages/43/12/58b13927544b91ef8fccfe80d3c9389335a7e903a9e79a771bad1f7eec36/music-metadata-tools-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:08 2020"}