{"info": {"author": "Barcelona Biomedical Genomics Lab", "author_email": "bbglab@irbbarcelona.org", "bugtrack_url": null, "classifiers": [], "description": "BGVEP\n=====\n\nRead data generated within the **bgvep** project.\nWithin that project there are two datasets, both identified by\nthe reference genome (e.g. hg19) and the VEP version (e.g. 88):\n\n- a tabix file with the run of vep for all positions in the genome\n- a bgpack file with only the most severe consequence type.\n\n\nInstallation\n------------\n\nThis project is a Python package\nand can be installed with ``pip``.\nDownload the source code, get into this\nproject directory and execute:\n\n.. code:: bash\n\n   pip install .\n\n\nUsage\n-----\n\nTo request the output of 1 or more positions, simply indicate the\nchromosome, the initial and the final positions you are interested.\n\n\n\nCommad line usage\n*****************\n\nExecute :code:`bgvep --help` for getting all the information.\n\nThe output is printed to the screen using tabs as separators for the indexes:\n\n.. code:: bash\n\n   bgvep --genome hg19 --vep 88 --chromosome chr1 --begin 100000 --end 100004\n\n\nAdding the ``--most-severe`` flags, returns the most severe consequence type\nfor the 3 possible changes of the allele in that position.\n\n\n\nPython usage\n************\n\nThe easiest way to use **bgvep** is to make use of the generators **get** and\n**get_most_severe**.\n\n.. code:: python\n\n   from bgvep import get\n   for data in get('hg19', '88', 'chr1', 100000, 100004):\n       ...\n\nHowever, the *best* way to use **bgvep** is using directly the readers:\nthe *Tabix* and the *BGPack* readers, which are context managers.\n\n.. code:: python\n\n   from bgvep.readers import Tabix\n\n   with Tabix('hg19', '88') as reader:\n        for data in reader.get('chr1', 100000, 100004):\n             ...\n\n\nThe advantage of using directly the readers is that they are not instantiated\non every call.\n\n\nThe output\n----------\n\n\nThe format of the output is:\n\n- Chromosome\n- Position\n- Reference\n- Alternate\n- Gene\n- Feature\n- Feature_type\n- Consequence\n- cDNA_position\n- CDS_position\n- Protein_position\n- Amino_acids\n- Codons\n- Existing_variation\n- Impact\n- Distance\n- Strand\n- Flags\n- Symbol\n- Symbol source\n- HGNC_ID\n- Canonical\n- ENSP\n\n\nWhen asking for the **most-severe** consquence type, the output is formed\nby the most severe consequente type of all the possible changes of the reference\nallele. The order is always ACGT, and if the refernce allele changes to itself,\nnothing is returned for it.\n\n\nSupport\n-------\n\nIf you are having issues, please let us know.\nYou can contact us at: bbglab@irbbarcelona.org", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/bgframework/bgvep", "keywords": "", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "bgvep", "package_url": "https://pypi.org/project/bgvep/", "platform": "", "project_url": "https://pypi.org/project/bgvep/", "project_urls": {"Homepage": "https://bitbucket.org/bgframework/bgvep"}, "release_url": "https://pypi.org/project/bgvep/0.3/", "requires_dist": null, "requires_python": "", "summary": "BBGLab tool", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Read data generated within the <strong>bgvep</strong> project.\nWithin that project there are two datasets, both identified by\nthe reference genome (e.g. hg19) and the VEP version (e.g. 88):</p>\n<ul>\n<li>a tabix file with the run of vep for all positions in the genome</li>\n<li>a bgpack file with only the most severe consequence type.</li>\n</ul>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>This project is a Python package\nand can be installed with <tt>pip</tt>.\nDownload the source code, get into this\nproject directory and execute:</p>\n<pre>pip install .\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To request the output of 1 or more positions, simply indicate the\nchromosome, the initial and the final positions you are interested.</p>\n<div id=\"commad-line-usage\">\n<h3>Commad line usage</h3>\n<p>Execute <code>bgvep --help</code> for getting all the information.</p>\n<p>The output is printed to the screen using tabs as separators for the indexes:</p>\n<pre>bgvep --genome hg19 --vep <span class=\"m\">88</span> --chromosome chr1 --begin <span class=\"m\">100000</span> --end <span class=\"m\">100004</span>\n</pre>\n<p>Adding the <tt><span class=\"pre\">--most-severe</span></tt> flags, returns the most severe consequence type\nfor the 3 possible changes of the allele in that position.</p>\n</div>\n<div id=\"python-usage\">\n<h3>Python usage</h3>\n<p>The easiest way to use <strong>bgvep</strong> is to make use of the generators <strong>get</strong> and\n<strong>get_most_severe</strong>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bgvep</span> <span class=\"kn\">import</span> <span class=\"n\">get</span>\n<span class=\"k\">for</span> <span class=\"n\">data</span> <span class=\"ow\">in</span> <span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'hg19'</span><span class=\"p\">,</span> <span class=\"s1\">'88'</span><span class=\"p\">,</span> <span class=\"s1\">'chr1'</span><span class=\"p\">,</span> <span class=\"mi\">100000</span><span class=\"p\">,</span> <span class=\"mi\">100004</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre>\n<p>However, the <em>best</em> way to use <strong>bgvep</strong> is using directly the readers:\nthe <em>Tabix</em> and the <em>BGPack</em> readers, which are context managers.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bgvep.readers</span> <span class=\"kn\">import</span> <span class=\"n\">Tabix</span>\n\n<span class=\"k\">with</span> <span class=\"n\">Tabix</span><span class=\"p\">(</span><span class=\"s1\">'hg19'</span><span class=\"p\">,</span> <span class=\"s1\">'88'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">reader</span><span class=\"p\">:</span>\n     <span class=\"k\">for</span> <span class=\"n\">data</span> <span class=\"ow\">in</span> <span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'chr1'</span><span class=\"p\">,</span> <span class=\"mi\">100000</span><span class=\"p\">,</span> <span class=\"mi\">100004</span><span class=\"p\">):</span>\n          <span class=\"o\">...</span>\n</pre>\n<p>The advantage of using directly the readers is that they are not instantiated\non every call.</p>\n</div>\n</div>\n<div id=\"the-output\">\n<h2>The output</h2>\n<p>The format of the output is:</p>\n<ul>\n<li>Chromosome</li>\n<li>Position</li>\n<li>Reference</li>\n<li>Alternate</li>\n<li>Gene</li>\n<li>Feature</li>\n<li>Feature_type</li>\n<li>Consequence</li>\n<li>cDNA_position</li>\n<li>CDS_position</li>\n<li>Protein_position</li>\n<li>Amino_acids</li>\n<li>Codons</li>\n<li>Existing_variation</li>\n<li>Impact</li>\n<li>Distance</li>\n<li>Strand</li>\n<li>Flags</li>\n<li>Symbol</li>\n<li>Symbol source</li>\n<li>HGNC_ID</li>\n<li>Canonical</li>\n<li>ENSP</li>\n</ul>\n<p>When asking for the <strong>most-severe</strong> consquence type, the output is formed\nby the most severe consequente type of all the possible changes of the reference\nallele. The order is always ACGT, and if the refernce allele changes to itself,\nnothing is returned for it.</p>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<p>If you are having issues, please let us know.\nYou can contact us at: <a href=\"mailto:bbglab%40irbbarcelona.org\">bbglab<span>@</span>irbbarcelona<span>.</span>org</a></p>\n</div>\n\n          </div>"}, "last_serial": 6466593, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "8e68f6dbd1a880ec9e0899cda20452f1", "sha256": "297e8e2e209e812c871534f16046034d374487b421726788a2c1dbba334d91cf"}, "downloads": -1, "filename": "bgvep-0.1.tar.gz", "has_sig": false, "md5_digest": "8e68f6dbd1a880ec9e0899cda20452f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3939, "upload_time": "2018-10-23T12:45:39", "upload_time_iso_8601": "2018-10-23T12:45:39.390772Z", "url": "https://files.pythonhosted.org/packages/ac/f9/a4c8ac562262a3552b8454f1391af07600defbf0a64d36d7e2723fcc237e/bgvep-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "7616cb8803592b6bdadfd81add146f49", "sha256": "21c3cb521ada711a3ad8fdb6bce494ffff356840acb327a3bb8b7a10d8e6c9bd"}, "downloads": -1, "filename": "bgvep-0.2.tar.gz", "has_sig": false, "md5_digest": "7616cb8803592b6bdadfd81add146f49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3867, "upload_time": "2018-11-29T09:51:05", "upload_time_iso_8601": "2018-11-29T09:51:05.051891Z", "url": "https://files.pythonhosted.org/packages/16/4f/a9f7e8dead2337f78b71fdf76372d9a1ff4ea49cb4f8cfc0fc4032f2d676/bgvep-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "6329e24db1ce274be9e83c1ec370f06b", "sha256": "1bdec43c3d0fabc77ef1f2f5f69240e4f15ab1b9887d901666b682b440543b28"}, "downloads": -1, "filename": "bgvep-0.3.tar.gz", "has_sig": false, "md5_digest": "6329e24db1ce274be9e83c1ec370f06b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3968, "upload_time": "2020-01-16T15:38:01", "upload_time_iso_8601": "2020-01-16T15:38:01.165896Z", "url": "https://files.pythonhosted.org/packages/68/3c/b3176bac10d6bfbbabaf4d7a747fe04dd7d7647c8bbb48010747eaf7fa06/bgvep-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6329e24db1ce274be9e83c1ec370f06b", "sha256": "1bdec43c3d0fabc77ef1f2f5f69240e4f15ab1b9887d901666b682b440543b28"}, "downloads": -1, "filename": "bgvep-0.3.tar.gz", "has_sig": false, "md5_digest": "6329e24db1ce274be9e83c1ec370f06b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3968, "upload_time": "2020-01-16T15:38:01", "upload_time_iso_8601": "2020-01-16T15:38:01.165896Z", "url": "https://files.pythonhosted.org/packages/68/3c/b3176bac10d6bfbbabaf4d7a747fe04dd7d7647c8bbb48010747eaf7fa06/bgvep-0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:39 2020"}