{"info": {"author": "Wonsup Yoon", "author_email": "pusnow@yonsei.ac.kr", "bugtrack_url": null, "classifiers": [], "description": "KS X 1026 Python\n================\n\nPython implementation for KS X 1026-1.\n\nKS X 1026-1\n-----------\n\nKS X 1026-1 is a Korean standard for Hangul processing guide for\ninformation interchange. More informations are available\n`here <http://www.unicode.org/L2/L2008/08225-n3422.pdf>`__.\n\nInstallation\n------------\n\nKS X 1026 Python is available via PyPi\n\n::\n\n    pip install ksx1026\n\nor setup.py\n\n::\n\n    python setup.py install\n\nNormalizations\n--------------\n\nHangul Decomposition\n~~~~~~~~~~~~~~~~~~~~\n\nReturns a Johab Modern Hangul Syllable Block for the given Wanseong\nModern Hangul Syllable Block\n\nchar S: Single character Hangul Syllable. If not, return input.\n\n::\n\n    >>> from ksx1026.normalization import decomposeHangul\n    >>> c = \"\\uAC01\"\n    >>> d = decomposeHangul(c)\n    >>> print(d.encode('raw_unicode_escape'))\n    b'\\\\u1100\\\\u1161\\\\u11a8'\n\nHangul Composition\n~~~~~~~~~~~~~~~~~~\n\nReturns a Wanseong Modern Hangul Syllable Block for the given Johab\nModern Hangul Syllable Block. Even when a portion of an Old Hangul\nSyllable Block is a Modern Hangul Syllable Block,unlike UAX #15, that\nportion is not transformed to a Wanseong Modern Hangul Syllable Block.\n\nstring source: unicode string.\n\n::\n\n    >>> from ksx1026.normalization import composeHangul\n    >>> source = \"\\u1100\\u1161\\u11a8\"\n    >>> d = composeHangul(source)\n    >>> print(d.encode('raw_unicode_escape'))\n    b'\\\\uac01'\n    >>> source = \"\\u1100\\u1161\\u11c3\"\n    >>> d = composeHangul(source)\n    >>> print(d.encode('raw_unicode_escape'))\n    b'\\\\u1100\\\\u1161\\\\u11c3'\n\nHangul Recomposition\n~~~~~~~~~~~~~~~~~~~~\n\nIf one uses a UAX #15 algorithm instead of the above composeHangul\nfunction for normalization, an Old Hangul Syllable Block can be\ndecomposed into a Wanseong Modern Hangul Syllable Block and Johab Hangul\nLetter(s). In such cases, after applying, one can use the following\nrecomposition algorithm to restore a character string in Normalization\nForm NFC or NFKC to an L V T format.\n\nstring source: unicode string\n\n::\n\n    >>> from ksx1026.normalization import recomposeHangul\n    >>> source = \"\\uac00\\u11c3\"\n    >>> d = recomposeHangul(source)\n    >>> print(d.encode('raw_unicode_escape'))\n    b'\\\\u1100\\\\u1161\\\\u11c3'\n\nNormalization of Compatibility/Halfwidth Hangul Letters and Hangul-embedded symbols\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nNormalizing Compatibility/Halfwidth Hangul Letters and Hangul-embedded\nsymbols (NormalizeJamoKDKC)\n\nstring source: unicode string\n\n::\n\n    >>> from ksx1026.normalization import normalizeJamoKDKC\n    >>> source = \"\\u3200\"\n    >>> d = normalizeJamoKDKC(source)\n    >>> print(d.encode('raw_unicode_escape'))\n    >>> b'(\\\\u1100\\\\u1160)", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Pusnow/KS-X-1026-Python", "keywords": "hangul unicode", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ksx1026", "package_url": "https://pypi.org/project/ksx1026/", "platform": "", "project_url": "https://pypi.org/project/ksx1026/", "project_urls": {"Homepage": "https://github.com/Pusnow/KS-X-1026-Python"}, "release_url": "https://pypi.org/project/ksx1026/0.1.4/", "requires_dist": null, "requires_python": "", "summary": "Python Implementation of KS X 1026", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python implementation for KS X 1026-1.</p>\n<div id=\"ks-x-1026-1\">\n<h2>KS X 1026-1</h2>\n<p>KS X 1026-1 is a Korean standard for Hangul processing guide for\ninformation interchange. More informations are available\n<a href=\"http://www.unicode.org/L2/L2008/08225-n3422.pdf\" rel=\"nofollow\">here</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>KS X 1026 Python is available via PyPi</p>\n<pre>pip install ksx1026\n</pre>\n<p>or setup.py</p>\n<pre>python setup.py install\n</pre>\n</div>\n<div id=\"normalizations\">\n<h2>Normalizations</h2>\n<div id=\"hangul-decomposition\">\n<h3>Hangul Decomposition</h3>\n<p>Returns a Johab Modern Hangul Syllable Block for the given Wanseong\nModern Hangul Syllable Block</p>\n<p>char S: Single character Hangul Syllable. If not, return input.</p>\n<pre>&gt;&gt;&gt; from ksx1026.normalization import decomposeHangul\n&gt;&gt;&gt; c = \"\\uAC01\"\n&gt;&gt;&gt; d = decomposeHangul(c)\n&gt;&gt;&gt; print(d.encode('raw_unicode_escape'))\nb'\\\\u1100\\\\u1161\\\\u11a8'\n</pre>\n</div>\n<div id=\"hangul-composition\">\n<h3>Hangul Composition</h3>\n<p>Returns a Wanseong Modern Hangul Syllable Block for the given Johab\nModern Hangul Syllable Block. Even when a portion of an Old Hangul\nSyllable Block is a Modern Hangul Syllable Block,unlike UAX #15, that\nportion is not transformed to a Wanseong Modern Hangul Syllable Block.</p>\n<p>string source: unicode string.</p>\n<pre>&gt;&gt;&gt; from ksx1026.normalization import composeHangul\n&gt;&gt;&gt; source = \"\\u1100\\u1161\\u11a8\"\n&gt;&gt;&gt; d = composeHangul(source)\n&gt;&gt;&gt; print(d.encode('raw_unicode_escape'))\nb'\\\\uac01'\n&gt;&gt;&gt; source = \"\\u1100\\u1161\\u11c3\"\n&gt;&gt;&gt; d = composeHangul(source)\n&gt;&gt;&gt; print(d.encode('raw_unicode_escape'))\nb'\\\\u1100\\\\u1161\\\\u11c3'\n</pre>\n</div>\n<div id=\"hangul-recomposition\">\n<h3>Hangul Recomposition</h3>\n<p>If one uses a UAX #15 algorithm instead of the above composeHangul\nfunction for normalization, an Old Hangul Syllable Block can be\ndecomposed into a Wanseong Modern Hangul Syllable Block and Johab Hangul\nLetter(s). In such cases, after applying, one can use the following\nrecomposition algorithm to restore a character string in Normalization\nForm NFC or NFKC to an L V T format.</p>\n<p>string source: unicode string</p>\n<pre>&gt;&gt;&gt; from ksx1026.normalization import recomposeHangul\n&gt;&gt;&gt; source = \"\\uac00\\u11c3\"\n&gt;&gt;&gt; d = recomposeHangul(source)\n&gt;&gt;&gt; print(d.encode('raw_unicode_escape'))\nb'\\\\u1100\\\\u1161\\\\u11c3'\n</pre>\n</div>\n<div id=\"normalization-of-compatibility-halfwidth-hangul-letters-and-hangul-embedded-symbols\">\n<h3>Normalization of Compatibility/Halfwidth Hangul Letters and Hangul-embedded symbols</h3>\n<p>Normalizing Compatibility/Halfwidth Hangul Letters and Hangul-embedded\nsymbols (NormalizeJamoKDKC)</p>\n<p>string source: unicode string</p>\n<pre>&gt;&gt;&gt; from ksx1026.normalization import normalizeJamoKDKC\n&gt;&gt;&gt; source = \"\\u3200\"\n&gt;&gt;&gt; d = normalizeJamoKDKC(source)\n&gt;&gt;&gt; print(d.encode('raw_unicode_escape'))\n&gt;&gt;&gt; b'(\\\\u1100\\\\u1160)\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3058810, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "84583c0138f69e31033bc138320a26e1", "sha256": "37a585503644402482c42eb83678786d5630937185daff074ebed0e6ac5b7a4e"}, "downloads": -1, "filename": "ksx1026-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "84583c0138f69e31033bc138320a26e1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13596, "upload_time": "2017-02-07T17:42:04", "upload_time_iso_8601": "2017-02-07T17:42:04.194005Z", "url": "https://files.pythonhosted.org/packages/c5/5b/9447d7494700c24b84904c5ff2dfe418fc0dfaa1ec11a5df6f60f0cc42db/ksx1026-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a96be057842bc713bb99cf738765fc87", "sha256": "a0908f89acca0542d8d7ae25d2cc711a3478fafa41e24988b7f80f297462eac5"}, "downloads": -1, "filename": "ksx1026-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a96be057842bc713bb99cf738765fc87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7365, "upload_time": "2017-02-07T17:42:05", "upload_time_iso_8601": "2017-02-07T17:42:05.607450Z", "url": "https://files.pythonhosted.org/packages/d1/40/fef8af3ace7d11c7a0b19633716b24344fc5893604778b6385e1dce487cc/ksx1026-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "7d53a54d6082b49ae3dd9d54d6b4b20b", "sha256": "c0efc6a114ab4494cf7cfa33621f6dafd87a6cef6ebbf06216a6fe3df954192f"}, "downloads": -1, "filename": "ksx1026-0.1.0.tar.gz", "has_sig": false, "md5_digest": "7d53a54d6082b49ae3dd9d54d6b4b20b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7317, "upload_time": "2017-03-21T04:29:39", "upload_time_iso_8601": "2017-03-21T04:29:39.956675Z", "url": "https://files.pythonhosted.org/packages/e3/4f/bb39f0257df9223da24ea6688102a97d48f2b4204ea4431a80b4ebb1ca49/ksx1026-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "5cf3afadc7c293bd2afd13a553c051ca", "sha256": "be8affd5b0d514837a2eaba3dfc79ef998930ecfbebdd369d838d4563fe6e783"}, "downloads": -1, "filename": "ksx1026-0.1.1.tar.gz", "has_sig": false, "md5_digest": "5cf3afadc7c293bd2afd13a553c051ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7429, "upload_time": "2017-03-25T10:58:14", "upload_time_iso_8601": "2017-03-25T10:58:14.996418Z", "url": "https://files.pythonhosted.org/packages/13/de/c357b165fbff96a8fba461d3976f383808b7fa4b4c14872350603d79ee49/ksx1026-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "cd77a23d6c4bfdf61d81bac882df2d63", "sha256": "03b0d146cd72709c441859b99eaa423baf02b7ddde581acaff09fbc521047d26"}, "downloads": -1, "filename": "ksx1026-0.1.2.tar.gz", "has_sig": false, "md5_digest": "cd77a23d6c4bfdf61d81bac882df2d63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7760, "upload_time": "2017-03-28T10:20:00", "upload_time_iso_8601": "2017-03-28T10:20:00.118974Z", "url": "https://files.pythonhosted.org/packages/2f/0a/7af4e5bf353ca53d750dfd6621d09e354cffca3abe84ceebd8b2ce9c7242/ksx1026-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "30b0df91a93269fde8d54978215c4de9", "sha256": "44edbef4cab27b50f224b3b113fa5b859010692dd03216a7d8d02aa4d60d2d0c"}, "downloads": -1, "filename": "ksx1026-0.1.3.tar.gz", "has_sig": false, "md5_digest": "30b0df91a93269fde8d54978215c4de9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8471, "upload_time": "2017-03-28T10:27:18", "upload_time_iso_8601": "2017-03-28T10:27:18.714495Z", "url": "https://files.pythonhosted.org/packages/6d/51/c7c5c279b6d8f1fb29c266094518512ccb953770ec6c4bea6c7acfcb3559/ksx1026-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "ef37f2a37792a722ea806466a7719948", "sha256": "875449411847383634b99f62e3c4d19ae6b04b8f2019191b7e2576283a76168c"}, "downloads": -1, "filename": "ksx1026-0.1.4.tar.gz", "has_sig": false, "md5_digest": "ef37f2a37792a722ea806466a7719948", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8821, "upload_time": "2017-07-30T06:25:16", "upload_time_iso_8601": "2017-07-30T06:25:16.063953Z", "url": "https://files.pythonhosted.org/packages/25/91/617fa610d09650fa645265a1bda4f848582c7fd83952532cf85de9fcd8fb/ksx1026-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ef37f2a37792a722ea806466a7719948", "sha256": "875449411847383634b99f62e3c4d19ae6b04b8f2019191b7e2576283a76168c"}, "downloads": -1, "filename": "ksx1026-0.1.4.tar.gz", "has_sig": false, "md5_digest": "ef37f2a37792a722ea806466a7719948", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8821, "upload_time": "2017-07-30T06:25:16", "upload_time_iso_8601": "2017-07-30T06:25:16.063953Z", "url": "https://files.pythonhosted.org/packages/25/91/617fa610d09650fa645265a1bda4f848582c7fd83952532cf85de9fcd8fb/ksx1026-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:41 2020"}