{"info": {"author": "Timoth\u00e9e Mazzucotelli", "author_email": "pawamoy@pm.me", "bugtrack_url": null, "classifiers": ["License :: OSI Approved", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# failprint\n![ci](https://github.com/pawamoy/failprint/workflows/ci/badge.svg)\n[![documentation](https://img.shields.io/readthedocs/failprint.svg?style=flat)](https://failprint.readthedocs.io/en/latest/index.html)\n[![pypi version](https://img.shields.io/pypi/v/failprint.svg)](https://pypi.org/project/failprint/)\n\nRun a command, print its output only if it fails.\n\n*:warning: Work in progress!*\n\nTired of searching the `quiet` options of your programs\nto lighten up the output of your `make check` or `make lint` commands?\n\nTired of finding out that standard output and error are mixed up in some of them?\n\nSimply run your command through `failprint`.\nIf it succeeds, nothing is printed.\nIf it fails, standard error is printed.\nPlus other configuration goodies :wink:\n\n## Example\n\nSome tools output a lot of things. You don't want to see it when the command succeeds.\n\nWithout `failprint`:\n\n- `poetry run bandit -s B404 -r src/`\n- `poetry run black --check $(PY_SRC)`\n\n![basic](https://user-images.githubusercontent.com/3999221/79385294-a2a0e080-7f68-11ea-827d-f72134a02eef.png)\n\nWith `failprint`:\n\n- `poetry run failprint -- bandit -s B404 -r src/`\n- `poetry run failprint -- black --check $(PY_SRC)`\n\n![failprint_fail](https://user-images.githubusercontent.com/3999221/79385302-a5033a80-7f68-11ea-98cd-1f4148629724.png)\n\nIt's already better, no? Much more readable!\n\nAnd when everything passes, it's even better:\n\n![failprint_success](https://user-images.githubusercontent.com/3999221/79385308-a59bd100-7f68-11ea-8012-90cbe9e0ac08.png)\n\n## Requirements\nfailprint requires Python 3.6 or above.\n\n<details>\n<summary>To install Python 3.6, I recommend using <a href=\"https://github.com/pyenv/pyenv\"><code>pyenv</code></a>.</summary>\n\n```bash\n# install pyenv\ngit clone https://github.com/pyenv/pyenv ~/.pyenv\n\n# setup pyenv (you should also put these three lines in .bashrc or similar)\nexport PATH=\"${HOME}/.pyenv/bin:${PATH}\"\nexport PYENV_ROOT=\"${HOME}/.pyenv\"\neval \"$(pyenv init -)\"\n\n# install Python 3.6\npyenv install 3.6.8\n\n# make it available globally\npyenv global system 3.6.8\n```\n</details>\n\n## Installation\nWith `pip`:\n```bash\npython3.6 -m pip install failprint\n```\n\nWith [`pipx`](https://github.com/pipx-project/pipx):\n```bash\npython3.6 -m pip install --user pipx\n\npipx install --python python3.6 failprint\n```\n\n## Usage\n\n```\nusage: failprint [-h] [-f {custom,pretty,tap}] [-o {stdout,stderr,combine}] [-n NUMBER] [-t TITLE] COMMAND [COMMAND ...]\n\npositional arguments:\n  COMMAND\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -f {custom,pretty,tap}, --format {custom,pretty,tap}\n                        Output format. Pass your own Jinja2 template as a string with '-f custom=TEMPLATE'.\n                        Available variables: title (command or title passed with -t), code (exit status), success (boolean), failure (boolean),\n                        n (command number passed with -n), output (command output). Available filters: indent (textwrap.indent).\n  -o {stdout,stderr,combine}, --output {stdout,stderr,combine}\n                        Which output to use. Colors are supported with 'combine' only, unless the command has a 'force color' option.\n  -n NUMBER, --number NUMBER\n                        Command number. Useful for the 'tap' format.\n  -t TITLE, --title TITLE\n                        Command title. Default is the command itself.\n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pawamoy/failprint", "keywords": "", "license": "ISC", "maintainer": "", "maintainer_email": "", "name": "failprint", "package_url": "https://pypi.org/project/failprint/", "platform": "", "project_url": "https://pypi.org/project/failprint/", "project_urls": {"Homepage": "https://github.com/pawamoy/failprint", "Repository": "https://github.com/pawamoy/failprint"}, "release_url": "https://pypi.org/project/failprint/0.3.0/", "requires_dist": ["ptyprocess (>=0.6.0,<0.7.0)", "ansimarkup (>=1.4.0,<2.0.0)", "jinja2 (>=2.11.2,<3.0.0)"], "requires_python": ">=3.6,<4.0", "summary": "Run a command, print its output only if it fails.", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>failprint</h1>\n<p><img alt=\"ci\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/557f760bc611af269fb892c82adf0c687da6ed17/68747470733a2f2f6769746875622e636f6d2f706177616d6f792f6661696c7072696e742f776f726b666c6f77732f63692f62616467652e737667\">\n<a href=\"https://failprint.readthedocs.io/en/latest/index.html\" rel=\"nofollow\"><img alt=\"documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7a409706e740effd2c8c0266fedb159c7240c209/68747470733a2f2f696d672e736869656c64732e696f2f72656164746865646f63732f6661696c7072696e742e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://pypi.org/project/failprint/\" rel=\"nofollow\"><img alt=\"pypi version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ec5ed18807917c476b3dcf2d0fc5afe8f98d4865/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6661696c7072696e742e737667\"></a></p>\n<p>Run a command, print its output only if it fails.</p>\n<p><em>:warning: Work in progress!</em></p>\n<p>Tired of searching the <code>quiet</code> options of your programs\nto lighten up the output of your <code>make check</code> or <code>make lint</code> commands?</p>\n<p>Tired of finding out that standard output and error are mixed up in some of them?</p>\n<p>Simply run your command through <code>failprint</code>.\nIf it succeeds, nothing is printed.\nIf it fails, standard error is printed.\nPlus other configuration goodies :wink:</p>\n<h2>Example</h2>\n<p>Some tools output a lot of things. You don't want to see it when the command succeeds.</p>\n<p>Without <code>failprint</code>:</p>\n<ul>\n<li><code>poetry run bandit -s B404 -r src/</code></li>\n<li><code>poetry run black --check $(PY_SRC)</code></li>\n</ul>\n<p><img alt=\"basic\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8bf4f06e3992cd5bc1eeffb8b8262d1774de7dfb/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f333939393232312f37393338353239342d61326130653038302d376636382d313165612d383237642d6637323133346130326565662e706e67\"></p>\n<p>With <code>failprint</code>:</p>\n<ul>\n<li><code>poetry run failprint -- bandit -s B404 -r src/</code></li>\n<li><code>poetry run failprint -- black --check $(PY_SRC)</code></li>\n</ul>\n<p><img alt=\"failprint_fail\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb1e41ca21d66ec7f2287e23183d076ba8c0598d/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f333939393232312f37393338353330322d61353033336138302d376636382d313165612d393863642d3166343134383632393732342e706e67\"></p>\n<p>It's already better, no? Much more readable!</p>\n<p>And when everything passes, it's even better:</p>\n<p><img alt=\"failprint_success\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e4729960d566cf751d8f9a8684939e71b2fe1aec/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f333939393232312f37393338353330382d61353962643130302d376636382d313165612d383031322d3930636265396530616330382e706e67\"></p>\n<h2>Requirements</h2>\n<p>failprint requires Python 3.6 or above.</p>\n<details>\n<summary>To install Python 3.6, I recommend using <a href=\"https://github.com/pyenv/pyenv\" rel=\"nofollow\"><code>pyenv</code></a>.</summary>\n<pre><span class=\"c1\"># install pyenv</span>\ngit clone https://github.com/pyenv/pyenv ~/.pyenv\n\n<span class=\"c1\"># setup pyenv (you should also put these three lines in .bashrc or similar)</span>\n<span class=\"nb\">export</span> <span class=\"nv\">PATH</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">HOME</span><span class=\"si\">}</span><span class=\"s2\">/.pyenv/bin:</span><span class=\"si\">${</span><span class=\"nv\">PATH</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n<span class=\"nb\">export</span> <span class=\"nv\">PYENV_ROOT</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">HOME</span><span class=\"si\">}</span><span class=\"s2\">/.pyenv\"</span>\n<span class=\"nb\">eval</span> <span class=\"s2\">\"</span><span class=\"k\">$(</span>pyenv init -<span class=\"k\">)</span><span class=\"s2\">\"</span>\n\n<span class=\"c1\"># install Python 3.6</span>\npyenv install <span class=\"m\">3</span>.6.8\n\n<span class=\"c1\"># make it available globally</span>\npyenv global system <span class=\"m\">3</span>.6.8\n</pre>\n</details>\n<h2>Installation</h2>\n<p>With <code>pip</code>:</p>\n<pre>python3.6 -m pip install failprint\n</pre>\n<p>With <a href=\"https://github.com/pipx-project/pipx\" rel=\"nofollow\"><code>pipx</code></a>:</p>\n<pre>python3.6 -m pip install --user pipx\n\npipx install --python python3.6 failprint\n</pre>\n<h2>Usage</h2>\n<pre><code>usage: failprint [-h] [-f {custom,pretty,tap}] [-o {stdout,stderr,combine}] [-n NUMBER] [-t TITLE] COMMAND [COMMAND ...]\n\npositional arguments:\n  COMMAND\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -f {custom,pretty,tap}, --format {custom,pretty,tap}\n                        Output format. Pass your own Jinja2 template as a string with '-f custom=TEMPLATE'.\n                        Available variables: title (command or title passed with -t), code (exit status), success (boolean), failure (boolean),\n                        n (command number passed with -n), output (command output). Available filters: indent (textwrap.indent).\n  -o {stdout,stderr,combine}, --output {stdout,stderr,combine}\n                        Which output to use. Colors are supported with 'combine' only, unless the command has a 'force color' option.\n  -n NUMBER, --number NUMBER\n                        Command number. Useful for the 'tap' format.\n  -t TITLE, --title TITLE\n                        Command title. Default is the command itself.\n</code></pre>\n\n          </div>"}, "last_serial": 7141247, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "60f1c4c5a0468a85b8ccbcedcbf5ef9b", "sha256": "acdb6538a0066db2023fc4081204da5b84929b63930819e97b5c5eb0d7b817ad"}, "downloads": -1, "filename": "failprint-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "60f1c4c5a0468a85b8ccbcedcbf5ef9b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 6275, "upload_time": "2020-04-23T10:02:19", "upload_time_iso_8601": "2020-04-23T10:02:19.699140Z", "url": "https://files.pythonhosted.org/packages/21/62/99e420637d06784395dbd31dbbb80bd4a1efd3e074c9f5b6d9127a1577ff/failprint-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5004971e76d48d638b86fbcf27951fd6", "sha256": "40fd7e7b4d822cd966fcf6b36f634c62d4899a14522db990c27e25d25aa3f2a5"}, "downloads": -1, "filename": "failprint-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5004971e76d48d638b86fbcf27951fd6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4248, "upload_time": "2020-04-23T10:02:21", "upload_time_iso_8601": "2020-04-23T10:02:21.510514Z", "url": "https://files.pythonhosted.org/packages/37/79/6de2be8eb256c2e7f5801287e31fe4e9db42ee8bb1687e0dd2f5bd4fe51d/failprint-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "f34ad27cdc8eb67f89562360ed985b1e", "sha256": "e082a4ced00517271b9cb1901363faace8ee34784c8b193261e4c906f365ee19"}, "downloads": -1, "filename": "failprint-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f34ad27cdc8eb67f89562360ed985b1e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 6278, "upload_time": "2020-04-23T12:01:10", "upload_time_iso_8601": "2020-04-23T12:01:10.209273Z", "url": "https://files.pythonhosted.org/packages/bc/79/e69211420491882db11e74004190398b5b1f7aa461bc925f66729d9436c4/failprint-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ab0f4edbe86d472f3d41531cb8088cd", "sha256": "128d940a27deebed71652ae07f10dacd1b5f83885b4fd59f00f3f5329385045d"}, "downloads": -1, "filename": "failprint-0.1.1.tar.gz", "has_sig": false, "md5_digest": "5ab0f4edbe86d472f3d41531cb8088cd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4255, "upload_time": "2020-04-23T12:01:11", "upload_time_iso_8601": "2020-04-23T12:01:11.478045Z", "url": "https://files.pythonhosted.org/packages/20/fa/40495adf09650338aa1c6bb7e2cc5d01c2415bfe33ea7df554adb0ea36b6/failprint-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "4b27a4dae9094a9796c9064fc2c522ca", "sha256": "796b054fa56c8e54c668564943e1513409ec3bbc8f6b99e64489e60b2642475b"}, "downloads": -1, "filename": "failprint-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4b27a4dae9094a9796c9064fc2c522ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 6413, "upload_time": "2020-04-28T14:46:56", "upload_time_iso_8601": "2020-04-28T14:46:56.728783Z", "url": "https://files.pythonhosted.org/packages/a5/f4/be366f8b6497fcfc258455b4a1738bac8816e1317e85d25c22c1447b7798/failprint-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ffe5f6fb29179baa07d874523743a5b", "sha256": "6531c06acf246e5af323086fdae145323cbfe6ff94c8dba98a97b1dc560bc5a5"}, "downloads": -1, "filename": "failprint-0.2.0.tar.gz", "has_sig": false, "md5_digest": "4ffe5f6fb29179baa07d874523743a5b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4392, "upload_time": "2020-04-28T14:46:57", "upload_time_iso_8601": "2020-04-28T14:46:57.968659Z", "url": "https://files.pythonhosted.org/packages/52/f0/7e5175820f2b2657a94440e2fbf45f431a770fe3484ecf2ac1ddc674d7f3/failprint-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "4194c46df83903b06db536ad55ac801e", "sha256": "268c5ec4673b81faebe263baed9193f494f2b47008c2db70a2c50173f04d58b3"}, "downloads": -1, "filename": "failprint-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4194c46df83903b06db536ad55ac801e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 9484, "upload_time": "2020-04-30T22:18:33", "upload_time_iso_8601": "2020-04-30T22:18:33.279156Z", "url": "https://files.pythonhosted.org/packages/d0/8c/67db336b09617f9172c34283535e4df27e231cee4b3a187ce6bf9e7c1abd/failprint-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7cfd248a835a20121bf82cf560f40fae", "sha256": "7fccff2caa0eacc71fc793084f13f7721006b184f41755e78367db73e484fb31"}, "downloads": -1, "filename": "failprint-0.3.0.tar.gz", "has_sig": false, "md5_digest": "7cfd248a835a20121bf82cf560f40fae", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 6864, "upload_time": "2020-04-30T22:18:34", "upload_time_iso_8601": "2020-04-30T22:18:34.518381Z", "url": "https://files.pythonhosted.org/packages/64/90/439eb060541be016f4f191c5f7346417a7bdcec1f5c92e72fd17ab92094f/failprint-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4194c46df83903b06db536ad55ac801e", "sha256": "268c5ec4673b81faebe263baed9193f494f2b47008c2db70a2c50173f04d58b3"}, "downloads": -1, "filename": "failprint-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4194c46df83903b06db536ad55ac801e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 9484, "upload_time": "2020-04-30T22:18:33", "upload_time_iso_8601": "2020-04-30T22:18:33.279156Z", "url": "https://files.pythonhosted.org/packages/d0/8c/67db336b09617f9172c34283535e4df27e231cee4b3a187ce6bf9e7c1abd/failprint-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7cfd248a835a20121bf82cf560f40fae", "sha256": "7fccff2caa0eacc71fc793084f13f7721006b184f41755e78367db73e484fb31"}, "downloads": -1, "filename": "failprint-0.3.0.tar.gz", "has_sig": false, "md5_digest": "7cfd248a835a20121bf82cf560f40fae", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 6864, "upload_time": "2020-04-30T22:18:34", "upload_time_iso_8601": "2020-04-30T22:18:34.518381Z", "url": "https://files.pythonhosted.org/packages/64/90/439eb060541be016f4f191c5f7346417a7bdcec1f5c92e72fd17ab92094f/failprint-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:00 2020"}