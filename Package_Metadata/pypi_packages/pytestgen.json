{"info": {"author": "Figglewatts", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Code Generators", "Topic :: Software Development :: Testing"], "description": "<div align=\"center\" style=\"text-align:center\">\n\n<img align=\"center\" width=\"400\" src=\"https://i.imgur.com/gtn07cL.png\">\n\n<br>\n\nGetting tired of manually writing unit test stubs for your Python code? Easy.\n\n<img align=\"center\" src=\"https://img.shields.io/pypi/v/pytestgen?style=flat-square\">\n<img align=\"center\" src=\"https://img.shields.io/github/workflow/status/figglewatts/pytestgen/CI?style=flat-square\">\n<img align=\"center\" src=\"https://img.shields.io/codecov/c/github/Figglewatts/pytestgen?style=flat-square\">\n\n</div>\n\n\n## Example\n```python\n# file: example.py\ndef testable_func(arg_one, arg_two):\n    pass\n\nclass AClass:\n    def __init__(self, some, constructor, params):\n        pass\n\n    def testable_func_in_class(self, an_arg):\n        pass\n```\n\n```bash\n$ pytestgen example.py\n```\n\n```python\n# file: test_example.py\nimport pytest\n\nimport example\n\n@pytest.mark.parametrize(\n    \"arg_one,arg_two,expected\",\n    [\n        # TODO: fill in test data for test_testable_func\n        # pytest.param(, , id=\"\")\n    ]\n)\ndef test_testable_func(arg_one, arg_two, expected):\n    # TODO: create assertions for test_testable_func\n    # example.testable_func(arg_one, arg_two)\n    pass\n\n@pytest.mark.parametrize(\n    \"instance,an_arg,expected\",\n    [\n        # TODO: fill in test data for test_aclass_testable_func_in_class\n        # pytest.param(example.AClass(some, constructor, params), , expected, id=\"\")\n    ]\n)\ndef test_aclass_testable_func_in_class(instance, an_arg, expected):\n    # TODO: write test for test_aclass_testable_func_in_class\n    # TODO: create assertions for test_aclass_testable_func_in_class\n    # instance.testable_func_in_class(an_arg)\n    pass\n```\n\n## Installation\n```bash\n$ pip install pytestgen\n```\n\n## Usage\n```bash\n# generate tests for directory 'my_package' in 'tests/' directory\n$ pytestgen my_package\n\n# generate tests for some python files and directory 'the_package'\n$ pytestgen my_module_a.py another_module.py the_package\n\n# generate tests for directory 'cool_app' in 'cool_tests/' directory\n$ pytestgen cool_app -o cool_tests\n\n# generate tests for functions 'foo' and 'bar' in 'functionality.py'\n$ pytestgen functionality.py -i foo -i bar\n```\n\n### Full usage text\n```\nUsage: pytestgen [OPTIONS] PATH...\n\n  Generate pytest unit tests from your Python source code.\n\nOptions:\n  -o, --output-dir PATH  The path to generate tests in.  [default: tests]\n  -i, --include FUNC     Function names to generate tests for. You can use\n                         this multiple times.\n  -h, --help             Show this message and exit.\n```\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Figglewatts/pytestgen", "keywords": "testing test generation pytest", "license": "", "maintainer": "", "maintainer_email": "", "name": "pytestgen", "package_url": "https://pypi.org/project/pytestgen/", "platform": "", "project_url": "https://pypi.org/project/pytestgen/", "project_urls": {"Homepage": "https://github.com/Figglewatts/pytestgen"}, "release_url": "https://pypi.org/project/pytestgen/0.1.1/", "requires_dist": ["click (==7.0)", "jinja2 (==2.11.0)", "markupsafe (==1.1.1)"], "requires_python": ">=3.7", "summary": "Generate pytest tests from your Python source files.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n<img align=\"center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a5d6816e264c6a5b4a30284da7316a4c7a123d62/68747470733a2f2f692e696d6775722e636f6d2f67746e3037634c2e706e67\" width=\"400\">\n<br>\n<p>Getting tired of manually writing unit test stubs for your Python code? Easy.</p>\n<img align=\"center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3986f399abab998c09c25509bfa808c82b5bf28d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70797465737467656e3f7374796c653d666c61742d737175617265\">\n<img align=\"center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01c67bc1a9201be7373c4a95942a0145965f1b80/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f666967676c6577617474732f70797465737467656e2f43493f7374796c653d666c61742d737175617265\">\n<img align=\"center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49a189f4dd5fd221fd43d746ae92959d6fd8701b/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f466967676c6577617474732f70797465737467656e3f7374796c653d666c61742d737175617265\">\n</div>\n<h2>Example</h2>\n<pre><span class=\"c1\"># file: example.py</span>\n<span class=\"k\">def</span> <span class=\"nf\">testable_func</span><span class=\"p\">(</span><span class=\"n\">arg_one</span><span class=\"p\">,</span> <span class=\"n\">arg_two</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">AClass</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">some</span><span class=\"p\">,</span> <span class=\"n\">constructor</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">testable_func_in_class</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">an_arg</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n</pre>\n<pre>$ pytestgen example.py\n</pre>\n<pre><span class=\"c1\"># file: test_example.py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pytest</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">example</span>\n\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">parametrize</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"arg_one,arg_two,expected\"</span><span class=\"p\">,</span>\n    <span class=\"p\">[</span>\n        <span class=\"c1\"># TODO: fill in test data for test_testable_func</span>\n        <span class=\"c1\"># pytest.param(, , id=\"\")</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_testable_func</span><span class=\"p\">(</span><span class=\"n\">arg_one</span><span class=\"p\">,</span> <span class=\"n\">arg_two</span><span class=\"p\">,</span> <span class=\"n\">expected</span><span class=\"p\">):</span>\n    <span class=\"c1\"># TODO: create assertions for test_testable_func</span>\n    <span class=\"c1\"># example.testable_func(arg_one, arg_two)</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">parametrize</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"instance,an_arg,expected\"</span><span class=\"p\">,</span>\n    <span class=\"p\">[</span>\n        <span class=\"c1\"># TODO: fill in test data for test_aclass_testable_func_in_class</span>\n        <span class=\"c1\"># pytest.param(example.AClass(some, constructor, params), , expected, id=\"\")</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_aclass_testable_func_in_class</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">an_arg</span><span class=\"p\">,</span> <span class=\"n\">expected</span><span class=\"p\">):</span>\n    <span class=\"c1\"># TODO: write test for test_aclass_testable_func_in_class</span>\n    <span class=\"c1\"># TODO: create assertions for test_aclass_testable_func_in_class</span>\n    <span class=\"c1\"># instance.testable_func_in_class(an_arg)</span>\n    <span class=\"k\">pass</span>\n</pre>\n<h2>Installation</h2>\n<pre>$ pip install pytestgen\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"c1\"># generate tests for directory 'my_package' in 'tests/' directory</span>\n$ pytestgen my_package\n\n<span class=\"c1\"># generate tests for some python files and directory 'the_package'</span>\n$ pytestgen my_module_a.py another_module.py the_package\n\n<span class=\"c1\"># generate tests for directory 'cool_app' in 'cool_tests/' directory</span>\n$ pytestgen cool_app -o cool_tests\n\n<span class=\"c1\"># generate tests for functions 'foo' and 'bar' in 'functionality.py'</span>\n$ pytestgen functionality.py -i foo -i bar\n</pre>\n<h3>Full usage text</h3>\n<pre><code>Usage: pytestgen [OPTIONS] PATH...\n\n  Generate pytest unit tests from your Python source code.\n\nOptions:\n  -o, --output-dir PATH  The path to generate tests in.  [default: tests]\n  -i, --include FUNC     Function names to generate tests for. You can use\n                         this multiple times.\n  -h, --help             Show this message and exit.\n</code></pre>\n<h2>License</h2>\n<p><a href=\"https://choosealicense.com/licenses/mit/\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 6557917, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4b6221736878d6be86ee6941b27647bb", "sha256": "8be80d7de8ab137dd1527cb8eaea9ca1a2b781bc84904ce2214e05b2349546dc"}, "downloads": -1, "filename": "pytestgen-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4b6221736878d6be86ee6941b27647bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 10860, "upload_time": "2020-02-02T13:04:25", "upload_time_iso_8601": "2020-02-02T13:04:25.699761Z", "url": "https://files.pythonhosted.org/packages/b0/74/d3b321a7afcc9024a993b37e1935a512dcd2796a162298bbefa4cec41422/pytestgen-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "81ac3f8c831b2a463984c6b5865236ca", "sha256": "9a93fa65031ee91f184f669f294afe3fce70aff9feade5d96b72b44d870307a7"}, "downloads": -1, "filename": "pytestgen-0.1.0.tar.gz", "has_sig": false, "md5_digest": "81ac3f8c831b2a463984c6b5865236ca", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 8763, "upload_time": "2020-02-02T13:04:28", "upload_time_iso_8601": "2020-02-02T13:04:28.064705Z", "url": "https://files.pythonhosted.org/packages/03/db/e13ac491270447fb4b90e3b9e2693f296d201f0487c72d11647cc6cf62bc/pytestgen-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "50b8abe2e781515e22a110718bd549fe", "sha256": "8aa7771f2b7ff424af05114d75e32ccacda124cd08f32f4aebb9b2fb4b192a1f"}, "downloads": -1, "filename": "pytestgen-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "50b8abe2e781515e22a110718bd549fe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 10858, "upload_time": "2020-02-02T13:09:42", "upload_time_iso_8601": "2020-02-02T13:09:42.255459Z", "url": "https://files.pythonhosted.org/packages/59/3f/45172ec794add959341741bb893551569e4720c9241d2d409eb6e669bc96/pytestgen-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e3da665c312e58142731722631ec3c97", "sha256": "5ef93357546cc3e45be913e0887cdf7315966635f055f44c099b5def58434056"}, "downloads": -1, "filename": "pytestgen-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e3da665c312e58142731722631ec3c97", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 8779, "upload_time": "2020-02-02T13:09:43", "upload_time_iso_8601": "2020-02-02T13:09:43.692729Z", "url": "https://files.pythonhosted.org/packages/b5/69/c23be3ac8d7500c39bcbd23357bee21433453dd5b39fd971ff20fb39b367/pytestgen-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "50b8abe2e781515e22a110718bd549fe", "sha256": "8aa7771f2b7ff424af05114d75e32ccacda124cd08f32f4aebb9b2fb4b192a1f"}, "downloads": -1, "filename": "pytestgen-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "50b8abe2e781515e22a110718bd549fe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 10858, "upload_time": "2020-02-02T13:09:42", "upload_time_iso_8601": "2020-02-02T13:09:42.255459Z", "url": "https://files.pythonhosted.org/packages/59/3f/45172ec794add959341741bb893551569e4720c9241d2d409eb6e669bc96/pytestgen-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e3da665c312e58142731722631ec3c97", "sha256": "5ef93357546cc3e45be913e0887cdf7315966635f055f44c099b5def58434056"}, "downloads": -1, "filename": "pytestgen-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e3da665c312e58142731722631ec3c97", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 8779, "upload_time": "2020-02-02T13:09:43", "upload_time_iso_8601": "2020-02-02T13:09:43.692729Z", "url": "https://files.pythonhosted.org/packages/b5/69/c23be3ac8d7500c39bcbd23357bee21433453dd5b39fd971ff20fb39b367/pytestgen-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:08 2020"}