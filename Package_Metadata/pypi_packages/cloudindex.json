{"info": {"author": "Sergei S.", "author_email": "s@makeitwork.cz", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Internet", "Topic :: Utilities"], "description": "# Cloud Index\n\nIndexes Google Cloud Platform / Amazon S3 buckets into JSON.\n\n## Installation\n\n```\npip3 install cloudindex\n\n# additionally, for GCS\npip3 install google.cloud.storage\n\n# additionally, for S3\npip3 install boto3\n```\n\n## Authentication\n\n* To index your bucket, you need to create GCP servece account\n  (permissions required: Storage Legacy Bucket Reader & Storage Object\n  Viewer) and then create a key for it. Put a path to keyfile to\n  GOOGLE_APPLICATION_CREDENTIALS env variable or specify it in application\n  command line params.\n\n* For Amazon S3 JSON key is also required. Amazon doesn't supply JSON keys,\n  create it manually:\n\n    {\n        \"aws_access_key_id\": \"KEYID\",\n        \"aws_secret_access_key\": \"SECRETKEY\"\n    }\n\n* Additionally, for S3 you can specify in JSON fields *region_name* and\n  *endpoint_url*, e.g. to connect to Digital Ocean Spaces:\n\n    {\n        \"aws_access_key_id\": \"KEYID\",\n        \"aws_secret_access_key\": \"SECRETKEY\",\n        \"region_name\": \"nyc3\",\n        \"endpoint_url\": \"https://nyc3.digitaloceanspaces.com\"\n    }\n    \n* Don't forget to set 600 permission on all key files you have.\n\n* If started on Google Cloud / Amazon EC2, key file may be omitted\n\n## Usage\n\n### CLI tool\n\n```\nusage: cloud-index [-h] [--version] [-p DIR] [-k FILE] [-s TYPE] [-r]\n                   [-x FILE] [-T DIR] [--fetch-meta] [-c] [-M FILE:field]\n                   BUCKET\n\nCloud Storage indexer\n\npositional arguments:\n  BUCKET                bucket to index\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             Print version and exit\n  -p DIR, --prefix DIR  Bucket object prefix (default: /)\n  -k FILE, --key-file FILE\n                        Get CS key from file (default for gcs: from\n                        GOOGLE_APPLICATION_CREDENTIALS environment variable)\n  -s TYPE, --cloud-storage TYPE\n                        Cloud storage type: gcs for Google, s3 for Amazon S3\n                        and compatible (default: gcs)\n  -r, --recursive       Recursively include \"subdirectories\" and their objects\n  -x FILE, --exclude FILE\n                        Files (masks) to exclude)\n  -T DIR, --time-format DIR\n                        Time format (default: %Y-%m-%d %H:%M)\n  --fetch-meta          Fetch custom metadata (for S3), for GCS meta data is\n                        always included\n  -c, --checksums       Get checksums from md5sums, sha1sums and sha256sums\n  -M FILE:field, --meta-file FILE:field\n                        Additional \"<info> <file>\" file, e.g. SSL certs\n                        fingerprints etc.\n```\n\nOption \"-M\" allows to include custom meta info, e.g. you can display\nfingerprints of SSL certificates hosted in bucket if this data is stored (as\n\"FINGERPRINT FILENAME\", one per line) in \"FINGERPRINTS\" (case insensitive)\nfile:\n\n   cloud-index ..... -M FINGERPRINTS:fingerprint <BUCKET>\n\nIf option \"-c\" is given to indexer, additional file attributes \"md5\", \"sha1\"\nand \"sha256\" appear. Indexer will update them if files \"md5sums\", \"sha1sums\" or\n\"sha256sums\" (case doesn't matter) are present in current directory. File\nformat is standard: \"CHECKSUM  FILENAME\" (one per line). This option is\nactually equal to\n\n    cloud-index ..... -M sha256sums:sha256 -M md5sums:md5 -M sha1sums:sha1\n\n### Library\n\nRefer to cloudindex library pydoc for the functions and args.\n\n## Nuts and bolts\n\n* As buckets don't have real folders, sometimes it can't get a proper\n  modification date or calculate folder size.\n\n* All object meta variables are indexed as well. If object has checksum meta\n  data (\"md5\"/\"sha1\"/\"sha256\") and \"-c\" option is used, meta data value has\n  higher priority than value from uploaded old-style meta info files.\n\n* If meta variable called \"local-creation-time\" is set, object creation\n  date/time are overriden with it. You may set it e.g. when copying file to\n  bucket:\n\n```\ngsutil -h \"x-goog-meta-local-creation-time:2020-02-15 23:51:00\" ....\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/divi255/cloud-index", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cloudindex", "package_url": "https://pypi.org/project/cloudindex/", "platform": "", "project_url": "https://pypi.org/project/cloudindex/", "project_urls": {"Homepage": "https://github.com/divi255/cloud-index"}, "release_url": "https://pypi.org/project/cloudindex/0.0.6/", "requires_dist": null, "requires_python": "", "summary": "Cloud bucket indexer", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Cloud Index</h1>\n<p>Indexes Google Cloud Platform / Amazon S3 buckets into JSON.</p>\n<h2>Installation</h2>\n<pre><code>pip3 install cloudindex\n\n# additionally, for GCS\npip3 install google.cloud.storage\n\n# additionally, for S3\npip3 install boto3\n</code></pre>\n<h2>Authentication</h2>\n<ul>\n<li>\n<p>To index your bucket, you need to create GCP servece account\n(permissions required: Storage Legacy Bucket Reader &amp; Storage Object\nViewer) and then create a key for it. Put a path to keyfile to\nGOOGLE_APPLICATION_CREDENTIALS env variable or specify it in application\ncommand line params.</p>\n</li>\n<li>\n<p>For Amazon S3 JSON key is also required. Amazon doesn't supply JSON keys,\ncreate it manually:</p>\n<p>{\n\"aws_access_key_id\": \"KEYID\",\n\"aws_secret_access_key\": \"SECRETKEY\"\n}</p>\n</li>\n<li>\n<p>Additionally, for S3 you can specify in JSON fields <em>region_name</em> and\n<em>endpoint_url</em>, e.g. to connect to Digital Ocean Spaces:</p>\n<p>{\n\"aws_access_key_id\": \"KEYID\",\n\"aws_secret_access_key\": \"SECRETKEY\",\n\"region_name\": \"nyc3\",\n\"endpoint_url\": \"<a href=\"https://nyc3.digitaloceanspaces.com\" rel=\"nofollow\">https://nyc3.digitaloceanspaces.com</a>\"\n}</p>\n</li>\n<li>\n<p>Don't forget to set 600 permission on all key files you have.</p>\n</li>\n<li>\n<p>If started on Google Cloud / Amazon EC2, key file may be omitted</p>\n</li>\n</ul>\n<h2>Usage</h2>\n<h3>CLI tool</h3>\n<pre><code>usage: cloud-index [-h] [--version] [-p DIR] [-k FILE] [-s TYPE] [-r]\n                   [-x FILE] [-T DIR] [--fetch-meta] [-c] [-M FILE:field]\n                   BUCKET\n\nCloud Storage indexer\n\npositional arguments:\n  BUCKET                bucket to index\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             Print version and exit\n  -p DIR, --prefix DIR  Bucket object prefix (default: /)\n  -k FILE, --key-file FILE\n                        Get CS key from file (default for gcs: from\n                        GOOGLE_APPLICATION_CREDENTIALS environment variable)\n  -s TYPE, --cloud-storage TYPE\n                        Cloud storage type: gcs for Google, s3 for Amazon S3\n                        and compatible (default: gcs)\n  -r, --recursive       Recursively include \"subdirectories\" and their objects\n  -x FILE, --exclude FILE\n                        Files (masks) to exclude)\n  -T DIR, --time-format DIR\n                        Time format (default: %Y-%m-%d %H:%M)\n  --fetch-meta          Fetch custom metadata (for S3), for GCS meta data is\n                        always included\n  -c, --checksums       Get checksums from md5sums, sha1sums and sha256sums\n  -M FILE:field, --meta-file FILE:field\n                        Additional \"&lt;info&gt; &lt;file&gt;\" file, e.g. SSL certs\n                        fingerprints etc.\n</code></pre>\n<p>Option \"-M\" allows to include custom meta info, e.g. you can display\nfingerprints of SSL certificates hosted in bucket if this data is stored (as\n\"FINGERPRINT FILENAME\", one per line) in \"FINGERPRINTS\" (case insensitive)\nfile:</p>\n<p>cloud-index ..... -M FINGERPRINTS:fingerprint &lt;BUCKET&gt;</p>\n<p>If option \"-c\" is given to indexer, additional file attributes \"md5\", \"sha1\"\nand \"sha256\" appear. Indexer will update them if files \"md5sums\", \"sha1sums\" or\n\"sha256sums\" (case doesn't matter) are present in current directory. File\nformat is standard: \"CHECKSUM  FILENAME\" (one per line). This option is\nactually equal to</p>\n<pre><code>cloud-index ..... -M sha256sums:sha256 -M md5sums:md5 -M sha1sums:sha1\n</code></pre>\n<h3>Library</h3>\n<p>Refer to cloudindex library pydoc for the functions and args.</p>\n<h2>Nuts and bolts</h2>\n<ul>\n<li>\n<p>As buckets don't have real folders, sometimes it can't get a proper\nmodification date or calculate folder size.</p>\n</li>\n<li>\n<p>All object meta variables are indexed as well. If object has checksum meta\ndata (\"md5\"/\"sha1\"/\"sha256\") and \"-c\" option is used, meta data value has\nhigher priority than value from uploaded old-style meta info files.</p>\n</li>\n<li>\n<p>If meta variable called \"local-creation-time\" is set, object creation\ndate/time are overriden with it. You may set it e.g. when copying file to\nbucket:</p>\n</li>\n</ul>\n<pre><code>gsutil -h \"x-goog-meta-local-creation-time:2020-02-15 23:51:00\" ....\n</code></pre>\n\n          </div>"}, "last_serial": 6758937, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "79bf1bd22c113b22f82e9c74b01e84cf", "sha256": "c5d4bc345569d725657e236f7d284a566d13026b757e76689f8954044fb59bef"}, "downloads": -1, "filename": "cloudindex-0.0.1.tar.gz", "has_sig": false, "md5_digest": "79bf1bd22c113b22f82e9c74b01e84cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3591, "upload_time": "2020-03-02T02:31:37", "upload_time_iso_8601": "2020-03-02T02:31:37.463253Z", "url": "https://files.pythonhosted.org/packages/d7/73/205b973d8451a21fa6de62c72d6402dfb63dd52d133ccbd62ae588cca176/cloudindex-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "b0464fd2d86ea6e9821f02d655585f69", "sha256": "1e02e7781ec00491cfef1ee0554350a367f71c956d383c6152ec44191b35e214"}, "downloads": -1, "filename": "cloudindex-0.0.2.tar.gz", "has_sig": false, "md5_digest": "b0464fd2d86ea6e9821f02d655585f69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4336, "upload_time": "2020-03-02T02:33:30", "upload_time_iso_8601": "2020-03-02T02:33:30.415610Z", "url": "https://files.pythonhosted.org/packages/d5/78/102f33bdc35523e95fbd490efe1fd0afbb62a311ebf899a85e19db018cb5/cloudindex-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "e1b9a5cbceb44089c009d90c887240db", "sha256": "4eaf6b5a3d9e53a23489037b839a5da9cec78dd7b8dd5082c388216812687eaa"}, "downloads": -1, "filename": "cloudindex-0.0.3.tar.gz", "has_sig": false, "md5_digest": "e1b9a5cbceb44089c009d90c887240db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6266, "upload_time": "2020-03-02T03:25:14", "upload_time_iso_8601": "2020-03-02T03:25:14.169864Z", "url": "https://files.pythonhosted.org/packages/9f/8f/ff43f5d79eff7aab8b21e2259f7e3ec03773df967d1e9ea32ad4e816e8e0/cloudindex-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "681f5b124763d8a5dcf1eb621e12fd34", "sha256": "741397d73ebe4f643d2cedbc7a684d005fb056b55647eb40a488701e2fee46d7"}, "downloads": -1, "filename": "cloudindex-0.0.4.tar.gz", "has_sig": false, "md5_digest": "681f5b124763d8a5dcf1eb621e12fd34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6277, "upload_time": "2020-03-02T03:41:38", "upload_time_iso_8601": "2020-03-02T03:41:38.132495Z", "url": "https://files.pythonhosted.org/packages/48/90/636d9eb49d21542d5e13257a3cacba219be9030dfbe8b77724ea0a2a4c61/cloudindex-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "43ff9467c0e8a32ff91ab5979907e287", "sha256": "2b90bcfcd29c0d516ca7a77dc0fd6880b8f69b6f6e9f845af2229369b4749338"}, "downloads": -1, "filename": "cloudindex-0.0.5.tar.gz", "has_sig": false, "md5_digest": "43ff9467c0e8a32ff91ab5979907e287", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6276, "upload_time": "2020-03-02T03:53:20", "upload_time_iso_8601": "2020-03-02T03:53:20.913378Z", "url": "https://files.pythonhosted.org/packages/e8/69/48ef9ac106b5ac84e750e3816906ac755e192deb8eba5f854def0d5bea25/cloudindex-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "50b003dcab3966b9816982c0c2234767", "sha256": "44e1676e2406ab9b5abd28dd24345f125e1c2848ffe317e2246b16461b1646f7"}, "downloads": -1, "filename": "cloudindex-0.0.6.tar.gz", "has_sig": false, "md5_digest": "50b003dcab3966b9816982c0c2234767", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6307, "upload_time": "2020-03-06T01:06:33", "upload_time_iso_8601": "2020-03-06T01:06:33.611497Z", "url": "https://files.pythonhosted.org/packages/d6/1c/2ad9b30ec62ca135ccee3c2f096b9ae6a07d665df2fa94db68efcc972952/cloudindex-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "50b003dcab3966b9816982c0c2234767", "sha256": "44e1676e2406ab9b5abd28dd24345f125e1c2848ffe317e2246b16461b1646f7"}, "downloads": -1, "filename": "cloudindex-0.0.6.tar.gz", "has_sig": false, "md5_digest": "50b003dcab3966b9816982c0c2234767", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6307, "upload_time": "2020-03-06T01:06:33", "upload_time_iso_8601": "2020-03-06T01:06:33.611497Z", "url": "https://files.pythonhosted.org/packages/d6/1c/2ad9b30ec62ca135ccee3c2f096b9ae6a07d665df2fa94db68efcc972952/cloudindex-0.0.6.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:50 2020"}