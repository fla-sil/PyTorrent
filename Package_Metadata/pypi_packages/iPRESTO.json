{"info": {"author": "Joris Louwen", "author_email": "jorislouwen@hotmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Affero General Public License v3", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# iPRESTO\n\niPRESTO (integrated Prediction and Rigorous Exploration of biosynthetic\nSub-clusters Tool)\nis a collection of python scripts for the detection of gene sub-clusters in\na set of Biosynthetic Gene Clusters (BGCs) in GenBank format. BGCs are tokenised\nby representing each gene as a combination of its Pfam domains, where subPfams\nare used to increase resolution. Tokenised BGCs are filtered for redundancy\nusing similarity network with an Adjacency Index of domains as a distance metric.\nFor the detection of sub-clusters two methods are used: PRESTO-STAT, which is\nbased on the statistical algorithm from Del Carratore et al. (2019), and the\nnovel method PRESTO-TOP, which uses topic modelling with Latent Dirichlet\nAllocation. The sub-clusters found with iPRESTO can then be linked to Natural\nProduct substructures.\n\nDeveloped by Joris Louwen.\nSupervisors: Marnix Medema (PI), Justin van der Hooft and Satria Kautsar.\nAll from the Bioinformatics group at Wageningen University. \n\n![Workflow](final_workflow_black_900ppi.png)\n\n## Usage\n\nTo use iPRESTO, there are some main scripts to use, which are explained with\nexample commands below. All main scripts have a -h or --help option for\nadditional command line arguments and default values. Generally, the input for\niPRESTO analysis is a directory with BGCs in GenBank format, and a hmmpressed\npHMM database.\n\npreprocessing.py turns the input directory into a csv file with\ntokenised BGCs (called clusterfile.csv) and filters out redundant BGCs.\n```\npython3 preprocessing.py -i my_gbk_dir -o output_dir --hmm_path Pfam_A.hmm\n        --exclude final -c 12 -e True\n```\n\npresto_stat.py performs the PRESTO-STAT method. It can start with the same\ninput as preprocessing.py, but it is also possible to start from a\nclusterfile.csv with the flag --start_from_clusterfile. Redundancy filtering is\non by default but can be turned of by toggling --no_redundancy_filtering.\n```\n#presto-stat with GBK folder input\npython3 presto_stat.py -i my_gbk_dir -o output_dir --hmm_path Pfam_A.hmm\n        --exclude final -c 12 -e True -p 0.1 --include_list biosynthetic_domains.txt\n\n#presto_stat with clusterfile input\n# -i -o and --hmm_path have to be supplied symbolically\npython3 presto_stat.py--start_from_clusterfile my_clusterfile.csv -c 12\n        --no_redundancy_filtering -i symbolic -o symbolic --hmm_path symbolic\n```\n\nquery_statistical_modules.py allows for querying a list of statistical\nsub-clusters as produced by presto_stat.py. Input should be a clusterfile.\n```\npython3 query_statistical_modules.py -i my_clusterfile.csv -m my_modules.txt\n        -c 12 -o my_clusterfile\n```\n\npresto_top.py performs the PRESTO-TOP method. It takes a clusterfile as input\nand has many commandline options to modify its behaviour in for example the\nconstruction of the LDA model. With the -r one can query an existing LDA model.\n```\n#Creating an LDA model and querying it at the same time.\npython3 presto_top.py -i my_clusterfile.csv -o my_output_folder -c 10 -t 1000 -C 3000\n        -I 2000 --min_genes 2 -f 0.95 -n 75 --classes my_bgc_classes.txt\n        --known_subclusters known_subcl.txt\n#Querying an existing model with -r\npython3 presto_top.py -i my_clusterfile.csv -o my_output_folder -c 10 -t 1000\n        --min_genes 2 -f 0.95 -n 75 --classes my_bgc_classes.txt\n        --known_subclusters known_subcl.txt -r my_lda_model_location\n```\n\nsubcluster_arrower.py creates powerful visualisations of the sub-cluster output.\nOne can provide one or more BGCs in GenBank format.\n```\n#one BGC\npython3 subcluster_arrower.py --one -f BGC0000052.gbk -c domains_colour_file.tsv\n        -d preprocessing_domhits_file.txt -o BGC0000052.html\n        -s bgcs_queried_to_presto_stat_modules_list.txt -l bgc_topics.txt\n        --include_list biosynthetic_domains.txt\n#multiple BGCs\npython3 subcluster_arrower.py -f file_with_gbk_locations.txt\n        -c domains_colour_file.tsv -d preprocessing_domhits_file.txt\n        -o BGC0000052.html -s bgcs_queried_to_presto_stat_modules_list.txt\n        -l bgc_topics.txt --include_list biosynthetic_domains.txt\n```\n\nSee below for an example clusterfile. Genes (and BGC names) are separated by\ncommas, domains in the same gene by semi-colons and genes without domains are\nrepresented by a dash.\n```\nBGC_name1,Lactamase_B,adh_short,ketoacyl-synt;Ketoacyl-synt_C,-\\n\nBGC_name2,-,Lant_dehydr_N;Lant_dehydr_C,LANC_like\\n\n```\n\nOther scripts fullfill additional roles for more functionality. subPfams can be\ncreated with https://github.com/satriaphd/build_subpfam.\n\n## Dependencies\n\niPRESTO is build in python3.6. It requires the HMMER suit (http://hmmer.org/),\nas well as some python packages. The required python packages are automatically\ninstalled when using pip or setup.py.\n```\n#example install with pip\npython3 -m pip --user install iPRESTO\n\n#installing without dependencies\npython3 -m pip --user --no-deps install iPRESTO\n```\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://git.wageningenur.nl/bioinformatics/iPRESTO", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "iPRESTO", "package_url": "https://pypi.org/project/iPRESTO/", "platform": "", "project_url": "https://pypi.org/project/iPRESTO/", "project_urls": {"Homepage": "https://git.wageningenur.nl/bioinformatics/iPRESTO"}, "release_url": "https://pypi.org/project/iPRESTO/1.0.3/", "requires_dist": ["biopython", "matplotlib", "networkx", "numpy", "gensim", "pyLDAvis", "pandas", "scipy", "seaborn", "statsmodels", "sympy"], "requires_python": ">=3.6", "summary": "Detection of biosynthetic sub-clusters", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>iPRESTO</h1>\n<p>iPRESTO (integrated Prediction and Rigorous Exploration of biosynthetic\nSub-clusters Tool)\nis a collection of python scripts for the detection of gene sub-clusters in\na set of Biosynthetic Gene Clusters (BGCs) in GenBank format. BGCs are tokenised\nby representing each gene as a combination of its Pfam domains, where subPfams\nare used to increase resolution. Tokenised BGCs are filtered for redundancy\nusing similarity network with an Adjacency Index of domains as a distance metric.\nFor the detection of sub-clusters two methods are used: PRESTO-STAT, which is\nbased on the statistical algorithm from Del Carratore et al. (2019), and the\nnovel method PRESTO-TOP, which uses topic modelling with Latent Dirichlet\nAllocation. The sub-clusters found with iPRESTO can then be linked to Natural\nProduct substructures.</p>\n<p>Developed by Joris Louwen.\nSupervisors: Marnix Medema (PI), Justin van der Hooft and Satria Kautsar.\nAll from the Bioinformatics group at Wageningen University.</p>\n<p><img alt=\"Workflow\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/237c3915dc91c186b56b5aa62bf1f7d8fd7c8fa3/66696e616c5f776f726b666c6f775f626c61636b5f3930307070692e706e67\"></p>\n<h2>Usage</h2>\n<p>To use iPRESTO, there are some main scripts to use, which are explained with\nexample commands below. All main scripts have a -h or --help option for\nadditional command line arguments and default values. Generally, the input for\niPRESTO analysis is a directory with BGCs in GenBank format, and a hmmpressed\npHMM database.</p>\n<p>preprocessing.py turns the input directory into a csv file with\ntokenised BGCs (called clusterfile.csv) and filters out redundant BGCs.</p>\n<pre><code>python3 preprocessing.py -i my_gbk_dir -o output_dir --hmm_path Pfam_A.hmm\n        --exclude final -c 12 -e True\n</code></pre>\n<p>presto_stat.py performs the PRESTO-STAT method. It can start with the same\ninput as preprocessing.py, but it is also possible to start from a\nclusterfile.csv with the flag --start_from_clusterfile. Redundancy filtering is\non by default but can be turned of by toggling --no_redundancy_filtering.</p>\n<pre><code>#presto-stat with GBK folder input\npython3 presto_stat.py -i my_gbk_dir -o output_dir --hmm_path Pfam_A.hmm\n        --exclude final -c 12 -e True -p 0.1 --include_list biosynthetic_domains.txt\n\n#presto_stat with clusterfile input\n# -i -o and --hmm_path have to be supplied symbolically\npython3 presto_stat.py--start_from_clusterfile my_clusterfile.csv -c 12\n        --no_redundancy_filtering -i symbolic -o symbolic --hmm_path symbolic\n</code></pre>\n<p>query_statistical_modules.py allows for querying a list of statistical\nsub-clusters as produced by presto_stat.py. Input should be a clusterfile.</p>\n<pre><code>python3 query_statistical_modules.py -i my_clusterfile.csv -m my_modules.txt\n        -c 12 -o my_clusterfile\n</code></pre>\n<p>presto_top.py performs the PRESTO-TOP method. It takes a clusterfile as input\nand has many commandline options to modify its behaviour in for example the\nconstruction of the LDA model. With the -r one can query an existing LDA model.</p>\n<pre><code>#Creating an LDA model and querying it at the same time.\npython3 presto_top.py -i my_clusterfile.csv -o my_output_folder -c 10 -t 1000 -C 3000\n        -I 2000 --min_genes 2 -f 0.95 -n 75 --classes my_bgc_classes.txt\n        --known_subclusters known_subcl.txt\n#Querying an existing model with -r\npython3 presto_top.py -i my_clusterfile.csv -o my_output_folder -c 10 -t 1000\n        --min_genes 2 -f 0.95 -n 75 --classes my_bgc_classes.txt\n        --known_subclusters known_subcl.txt -r my_lda_model_location\n</code></pre>\n<p>subcluster_arrower.py creates powerful visualisations of the sub-cluster output.\nOne can provide one or more BGCs in GenBank format.</p>\n<pre><code>#one BGC\npython3 subcluster_arrower.py --one -f BGC0000052.gbk -c domains_colour_file.tsv\n        -d preprocessing_domhits_file.txt -o BGC0000052.html\n        -s bgcs_queried_to_presto_stat_modules_list.txt -l bgc_topics.txt\n        --include_list biosynthetic_domains.txt\n#multiple BGCs\npython3 subcluster_arrower.py -f file_with_gbk_locations.txt\n        -c domains_colour_file.tsv -d preprocessing_domhits_file.txt\n        -o BGC0000052.html -s bgcs_queried_to_presto_stat_modules_list.txt\n        -l bgc_topics.txt --include_list biosynthetic_domains.txt\n</code></pre>\n<p>See below for an example clusterfile. Genes (and BGC names) are separated by\ncommas, domains in the same gene by semi-colons and genes without domains are\nrepresented by a dash.</p>\n<pre><code>BGC_name1,Lactamase_B,adh_short,ketoacyl-synt;Ketoacyl-synt_C,-\\n\nBGC_name2,-,Lant_dehydr_N;Lant_dehydr_C,LANC_like\\n\n</code></pre>\n<p>Other scripts fullfill additional roles for more functionality. subPfams can be\ncreated with <a href=\"https://github.com/satriaphd/build_subpfam\" rel=\"nofollow\">https://github.com/satriaphd/build_subpfam</a>.</p>\n<h2>Dependencies</h2>\n<p>iPRESTO is build in python3.6. It requires the HMMER suit (<a href=\"http://hmmer.org/\" rel=\"nofollow\">http://hmmer.org/</a>),\nas well as some python packages. The required python packages are automatically\ninstalled when using pip or setup.py.</p>\n<pre><code>#example install with pip\npython3 -m pip --user install iPRESTO\n\n#installing without dependencies\npython3 -m pip --user --no-deps install iPRESTO\n</code></pre>\n\n          </div>"}, "last_serial": 6423846, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "865e39d555582b1e1cb9e721cdda9a67", "sha256": "f048698492d69a88f138661b14363902e5f96411bfdd649bb80d687e9bbdb502"}, "downloads": -1, "filename": "iPRESTO-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "865e39d555582b1e1cb9e721cdda9a67", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 97815, "upload_time": "2019-12-17T14:56:46", "upload_time_iso_8601": "2019-12-17T14:56:46.054956Z", "url": "https://files.pythonhosted.org/packages/d3/54/4a2b4ddf89482c312087757e3b5bd5a20bb3291aa64fdca0191f82d11bad/iPRESTO-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5431f37f3408d1ab005c1d193906c142", "sha256": "c51553de5180af9280a32d9a76c8dc922e09299ce1a6144ba85ce82cd09bfa12"}, "downloads": -1, "filename": "iPRESTO-1.0.tar.gz", "has_sig": false, "md5_digest": "5431f37f3408d1ab005c1d193906c142", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 944118, "upload_time": "2019-12-17T14:56:49", "upload_time_iso_8601": "2019-12-17T14:56:49.060973Z", "url": "https://files.pythonhosted.org/packages/19/8a/94666c59eaf47e31619edce3ce9e8518eb4b63a7ab305776d38413e22ae4/iPRESTO-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "ad1f9951199697366023d8aec2b26605", "sha256": "c83de297f85d14b9de1ae48c0c6753a5183777177f189daddb78d3af48260f76"}, "downloads": -1, "filename": "iPRESTO-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ad1f9951199697366023d8aec2b26605", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 97838, "upload_time": "2019-12-18T13:13:05", "upload_time_iso_8601": "2019-12-18T13:13:05.419857Z", "url": "https://files.pythonhosted.org/packages/38/91/2daa3e9923d08426975e0975f367612f02ac4579d921e72d5001e13c5ee0/iPRESTO-1.0.1-py3-none-any.whl", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "a723ed2922a5a6df237234c5bb3ae654", "sha256": "6faad58f490a38b362c9540687b1ebf67e63e0a55734b4cfa8b2740a140f511a"}, "downloads": -1, "filename": "iPRESTO-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a723ed2922a5a6df237234c5bb3ae654", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 197041, "upload_time": "2019-12-18T14:24:39", "upload_time_iso_8601": "2019-12-18T14:24:39.056938Z", "url": "https://files.pythonhosted.org/packages/2c/0d/c1a1c87052fadc319e6922aeb079a0d928d8c79d58dded325ba0212d4f77/iPRESTO-1.0.2-py3-none-any.whl", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "fb47e5c2dba4f825ef4780c49a7e29d4", "sha256": "4db976a9d996334e06151bbe141e9503c9d5a3352a9cc1ab6a87cd8b11619f04"}, "downloads": -1, "filename": "iPRESTO-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "fb47e5c2dba4f825ef4780c49a7e29d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 185811, "upload_time": "2020-01-09T18:38:35", "upload_time_iso_8601": "2020-01-09T18:38:35.731706Z", "url": "https://files.pythonhosted.org/packages/bc/10/ca312460f7e08760218b45d6f9a8aac08d57d6ed09de8eb3c0d85ae5c789/iPRESTO-1.0.3-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fb47e5c2dba4f825ef4780c49a7e29d4", "sha256": "4db976a9d996334e06151bbe141e9503c9d5a3352a9cc1ab6a87cd8b11619f04"}, "downloads": -1, "filename": "iPRESTO-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "fb47e5c2dba4f825ef4780c49a7e29d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 185811, "upload_time": "2020-01-09T18:38:35", "upload_time_iso_8601": "2020-01-09T18:38:35.731706Z", "url": "https://files.pythonhosted.org/packages/bc/10/ca312460f7e08760218b45d6f9a8aac08d57d6ed09de8eb3c0d85ae5c789/iPRESTO-1.0.3-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:54:34 2020"}