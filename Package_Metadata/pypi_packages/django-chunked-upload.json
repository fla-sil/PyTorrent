{"info": {"author": "Julio M Alegria", "author_email": "juliomalegria@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "django-chunked-upload\n=====================\n\nThis simple django app enables users to upload large files to Django in multiple chunks, with the ability to resume if the upload is interrupted.\n\nThis app is intented to work with `JQuery-File-Upload <https://github.com/blueimp/jQuery-File-Upload>`__ by `Sebastian Tschan <https://blueimp.net>`__ (`documentation <https://github.com/blueimp/jQuery-File-Upload/wiki>`__).\n\nLicense: `MIT-Zero <https://romanrm.net/mit-zero>`__.\n\nDemo\n----\n\nIf you want to see a very simple Django demo project using this module, please take a look at `django-chunked-upload-demo <https://github.com/juliomalegria/django-chunked-upload-demo>`__.\n\nInstallation\n------------\n\nInstall via pip:\n\n::\n\n    pip install django-chunked-upload\n\nAnd then add it to your Django ``INSTALLED_APPS``:\n\n.. code:: python\n\n    INSTALLED_APPS = (\n        # ...\n        'chunked_upload',\n    )\n\nTypical usage\n-------------\n\n1. An initial POST request is sent to the url linked to ``ChunkedUploadView`` (or any subclass) with the first chunk of the file. The name of the chunk file can be overriden in the view (class attribute ``field_name``). Example:\n\n::\n\n    {\"my_file\": <File>}\n\n2. In return, server with response with the ``upload_id``, the current ``offset`` and the when will the upload expire (``expires``). Example:\n\n::\n\n    {\n        \"upload_id\": \"5230ec1f59d1485d9d7974b853802e31\",\n        \"offset\": 10000,\n        \"expires\": \"2013-07-18T17:56:22.186Z\"\n    }\n\n3. Repeatedly POST subsequent chunks using the ``upload_id`` to identify the upload  to the url linked to ``ChunkedUploadView`` (or any subclass). Example:\n\n::\n\n    {\n        \"upload_id\": \"5230ec1f59d1485d9d7974b853802e31\",\n        \"my_file\": <File>\n    }\n\n4. Server will continue responding with the ``upload_id``, the current ``offset`` and the expiration date (``expires``).\n\n5. Finally, when upload is completed, a POST request is sent to the url linked to ``ChunkedUploadCompleteView`` (or any subclass). This request must include the ``upload_id`` and the ``md5`` checksum (hex). Example:\n\n::\n\n    {\n        \"upload_id\": \"5230ec1f59d1485d9d7974b853802e31\",\n        \"md5\": \"fc3ff98e8c6a0d3087d515c0473f8677\"\n    }\n\n6. If everything is OK, server will response with status code 200 and the data returned in the method ``get_response_data`` (if any).\n\nPossible error responses:\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* User is not authenticated. Server responds 403 (Forbidden).\n* Upload has expired. Server responds 410 (Gone).\n* ``upload_id`` does not match any upload. Server responds 404 (Not found).\n* No chunk file is found in the indicated key. Server responds 400 (Bad request).\n* Request does not contain ``Content-Range`` header. Server responds 400 (Bad request).\n* Size of file exceeds limit (if specified).  Server responds 400 (Bad request).\n* Offsets does not match.  Server responds 400 (Bad request).\n* ``md5`` checksums does not match. Server responds 400 (Bad request).\n\nSettings\n--------\n\nAdd any of these variables into your project settings to override them.\n\n``CHUNKED_UPLOAD_EXPIRATION_DELTA``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* How long after creation the upload will expire.\n* Default: ``datetime.timedelta(days=1)``\n\n``CHUNKED_UPLOAD_PATH``\n~~~~~~~~~~~~~~~~~~~~~~~\n\n* Path where uploading files will be stored until completion.\n* Default: ``'chunked_uploads/%Y/%m/%d'``\n\n``CHUNKED_UPLOAD_TO``\n~~~~~~~~~~~~~~~~~~~~~\n\n* `upload_to` to be used in the Model's FileField.\n* Default: ``CHUNKED_UPLOAD_PATH + '/{{ instance.upload_id }}.part'``\n\n``CHUNKED_UPLOAD_STORAGE_CLASS``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* Storage system (should be a class).\n* Default: ``None`` (use default storage system)\n\n``CHUNKED_UPLOAD_ENCODER``\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* Function used to encode response data. Receives a dict and returns a string.\n* Default: ``DjangoJSONEncoder().encode``\n\n``CHUNKED_UPLOAD_CONTENT_TYPE``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* Content-Type for the response data.\n* Default: ``'application/json'``\n\n``CHUNKED_UPLOAD_MAX_BYTES``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* Max amount of data (in bytes) that can be uploaded. ``None`` means no limit.\n* Default: ``None``\n\n``CHUNKED_UPLOAD_MODEL_USER_FIELD_NULL``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* Value of `null <https://docs.djangoproject.com/en/dev/ref/models/fields/#django.db.models.Field.null>`__ option in **user** field of `ChunkedUpload` model\n* Default: ``True``\n\n``CHUNKED_UPLOAD_MODEL_USER_FIELD_BLANK``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* Value of `blank <https://docs.djangoproject.com/en/dev/ref/models/fields/#django.db.models.Field.blank>`__ option in **user** field of `ChunkedUpload` model\n* Default: ``True``\n\nSupport\n-------\n\nIf you find any bug or you want to propose a new feature, please use the `issues tracker <https://github.com/juliomalegria/django-chunked-upload/issues>`__. I'll be happy to help you! :-)\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/juliomalegria/django-chunked-upload/tarball/2.0.0", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/juliomalegria/django-chunked-upload", "keywords": "", "license": "MIT-Zero", "maintainer": "", "maintainer_email": "", "name": "django-chunked-upload", "package_url": "https://pypi.org/project/django-chunked-upload/", "platform": "", "project_url": "https://pypi.org/project/django-chunked-upload/", "project_urls": {"Download": "https://github.com/juliomalegria/django-chunked-upload/tarball/2.0.0", "Homepage": "https://github.com/juliomalegria/django-chunked-upload"}, "release_url": "https://pypi.org/project/django-chunked-upload/2.0.0/", "requires_dist": null, "requires_python": "", "summary": "Upload large files to Django in multiple chunks, with the ability to resume if the upload is interrupted.", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This simple django app enables users to upload large files to Django in multiple chunks, with the ability to resume if the upload is interrupted.</p>\n<p>This app is intented to work with <a href=\"https://github.com/blueimp/jQuery-File-Upload\" rel=\"nofollow\">JQuery-File-Upload</a> by <a href=\"https://blueimp.net\" rel=\"nofollow\">Sebastian Tschan</a> (<a href=\"https://github.com/blueimp/jQuery-File-Upload/wiki\" rel=\"nofollow\">documentation</a>).</p>\n<p>License: <a href=\"https://romanrm.net/mit-zero\" rel=\"nofollow\">MIT-Zero</a>.</p>\n<div id=\"demo\">\n<h2>Demo</h2>\n<p>If you want to see a very simple Django demo project using this module, please take a look at <a href=\"https://github.com/juliomalegria/django-chunked-upload-demo\" rel=\"nofollow\">django-chunked-upload-demo</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install via pip:</p>\n<pre>pip install django-chunked-upload\n</pre>\n<p>And then add it to your Django <tt>INSTALLED_APPS</tt>:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"s1\">'chunked_upload'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"typical-usage\">\n<h2>Typical usage</h2>\n<ol>\n<li>An initial POST request is sent to the url linked to <tt>ChunkedUploadView</tt> (or any subclass) with the first chunk of the file. The name of the chunk file can be overriden in the view (class attribute <tt>field_name</tt>). Example:</li>\n</ol>\n<pre>{\"my_file\": &lt;File&gt;}\n</pre>\n<ol>\n<li>In return, server with response with the <tt>upload_id</tt>, the current <tt>offset</tt> and the when will the upload expire (<tt>expires</tt>). Example:</li>\n</ol>\n<pre>{\n    \"upload_id\": \"5230ec1f59d1485d9d7974b853802e31\",\n    \"offset\": 10000,\n    \"expires\": \"2013-07-18T17:56:22.186Z\"\n}\n</pre>\n<ol>\n<li>Repeatedly POST subsequent chunks using the <tt>upload_id</tt> to identify the upload  to the url linked to <tt>ChunkedUploadView</tt> (or any subclass). Example:</li>\n</ol>\n<pre>{\n    \"upload_id\": \"5230ec1f59d1485d9d7974b853802e31\",\n    \"my_file\": &lt;File&gt;\n}\n</pre>\n<ol>\n<li>Server will continue responding with the <tt>upload_id</tt>, the current <tt>offset</tt> and the expiration date (<tt>expires</tt>).</li>\n<li>Finally, when upload is completed, a POST request is sent to the url linked to <tt>ChunkedUploadCompleteView</tt> (or any subclass). This request must include the <tt>upload_id</tt> and the <tt>md5</tt> checksum (hex). Example:</li>\n</ol>\n<pre>{\n    \"upload_id\": \"5230ec1f59d1485d9d7974b853802e31\",\n    \"md5\": \"fc3ff98e8c6a0d3087d515c0473f8677\"\n}\n</pre>\n<ol>\n<li>If everything is OK, server will response with status code 200 and the data returned in the method <tt>get_response_data</tt> (if any).</li>\n</ol>\n<div id=\"possible-error-responses\">\n<h3>Possible error responses:</h3>\n<ul>\n<li>User is not authenticated. Server responds 403 (Forbidden).</li>\n<li>Upload has expired. Server responds 410 (Gone).</li>\n<li><tt>upload_id</tt> does not match any upload. Server responds 404 (Not found).</li>\n<li>No chunk file is found in the indicated key. Server responds 400 (Bad request).</li>\n<li>Request does not contain <tt><span class=\"pre\">Content-Range</span></tt> header. Server responds 400 (Bad request).</li>\n<li>Size of file exceeds limit (if specified).  Server responds 400 (Bad request).</li>\n<li>Offsets does not match.  Server responds 400 (Bad request).</li>\n<li><tt>md5</tt> checksums does not match. Server responds 400 (Bad request).</li>\n</ul>\n</div>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p>Add any of these variables into your project settings to override them.</p>\n<div id=\"chunked-upload-expiration-delta\">\n<h3><tt>CHUNKED_UPLOAD_EXPIRATION_DELTA</tt></h3>\n<ul>\n<li>How long after creation the upload will expire.</li>\n<li>Default: <tt>datetime.timedelta(days=1)</tt></li>\n</ul>\n</div>\n<div id=\"chunked-upload-path\">\n<h3><tt>CHUNKED_UPLOAD_PATH</tt></h3>\n<ul>\n<li>Path where uploading files will be stored until completion.</li>\n<li>Default: <tt><span class=\"pre\">'chunked_uploads/%Y/%m/%d'</span></tt></li>\n</ul>\n</div>\n<div id=\"chunked-upload-to\">\n<h3><tt>CHUNKED_UPLOAD_TO</tt></h3>\n<ul>\n<li><cite>upload_to</cite> to be used in the Model\u2019s FileField.</li>\n<li>Default: <tt>CHUNKED_UPLOAD_PATH + <span class=\"pre\">'/{{</span> instance.upload_id <span class=\"pre\">}}.part'</span></tt></li>\n</ul>\n</div>\n<div id=\"chunked-upload-storage-class\">\n<h3><tt>CHUNKED_UPLOAD_STORAGE_CLASS</tt></h3>\n<ul>\n<li>Storage system (should be a class).</li>\n<li>Default: <tt>None</tt> (use default storage system)</li>\n</ul>\n</div>\n<div id=\"chunked-upload-encoder\">\n<h3><tt>CHUNKED_UPLOAD_ENCODER</tt></h3>\n<ul>\n<li>Function used to encode response data. Receives a dict and returns a string.</li>\n<li>Default: <tt><span class=\"pre\">DjangoJSONEncoder().encode</span></tt></li>\n</ul>\n</div>\n<div id=\"chunked-upload-content-type\">\n<h3><tt>CHUNKED_UPLOAD_CONTENT_TYPE</tt></h3>\n<ul>\n<li>Content-Type for the response data.</li>\n<li>Default: <tt>'application/json'</tt></li>\n</ul>\n</div>\n<div id=\"chunked-upload-max-bytes\">\n<h3><tt>CHUNKED_UPLOAD_MAX_BYTES</tt></h3>\n<ul>\n<li>Max amount of data (in bytes) that can be uploaded. <tt>None</tt> means no limit.</li>\n<li>Default: <tt>None</tt></li>\n</ul>\n</div>\n<div id=\"chunked-upload-model-user-field-null\">\n<h3><tt>CHUNKED_UPLOAD_MODEL_USER_FIELD_NULL</tt></h3>\n<ul>\n<li>Value of <a href=\"https://docs.djangoproject.com/en/dev/ref/models/fields/#django.db.models.Field.null\" rel=\"nofollow\">null</a> option in <strong>user</strong> field of <cite>ChunkedUpload</cite> model</li>\n<li>Default: <tt>True</tt></li>\n</ul>\n</div>\n<div id=\"chunked-upload-model-user-field-blank\">\n<h3><tt>CHUNKED_UPLOAD_MODEL_USER_FIELD_BLANK</tt></h3>\n<ul>\n<li>Value of <a href=\"https://docs.djangoproject.com/en/dev/ref/models/fields/#django.db.models.Field.blank\" rel=\"nofollow\">blank</a> option in <strong>user</strong> field of <cite>ChunkedUpload</cite> model</li>\n<li>Default: <tt>True</tt></li>\n</ul>\n</div>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<p>If you find any bug or you want to propose a new feature, please use the <a href=\"https://github.com/juliomalegria/django-chunked-upload/issues\" rel=\"nofollow\">issues tracker</a>. I\u2019ll be happy to help you! :-)</p>\n</div>\n\n          </div>"}, "last_serial": 6307443, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "f70dfafc7701c7b5ada9b471f2808838", "sha256": "e4d5180798c54c1abb650bfd2eb2f6136d434231580105d965c2e2a5ae685ea1"}, "downloads": -1, "filename": "django-chunked-upload-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f70dfafc7701c7b5ada9b471f2808838", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9786, "upload_time": "2015-01-25T04:42:02", "upload_time_iso_8601": "2015-01-25T04:42:02.147443Z", "url": "https://files.pythonhosted.org/packages/bb/a1/3e8626dba4bce50e31ef2b9fda6746a5d035c68009b4fd224793138e629f/django-chunked-upload-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "031a64c89cb8a8ca738b348ba8caba7d", "sha256": "8f5dba0d9868734209927183db14397ac5a40b2526cf4899206b952edb7f1418"}, "downloads": -1, "filename": "django-chunked-upload-1.0.1.tar.gz", "has_sig": false, "md5_digest": "031a64c89cb8a8ca738b348ba8caba7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10103, "upload_time": "2015-01-25T05:22:50", "upload_time_iso_8601": "2015-01-25T05:22:50.684699Z", "url": "https://files.pythonhosted.org/packages/27/2d/182689d5cddeb6551758be94678ec08dd03c965db897227b99d13f9ad8b6/django-chunked-upload-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "a5a9e7b0e8ff03c503fb132ee3337987", "sha256": "c24b1a7a41387d09b5e68b56e80c8f57a8b7b3dd370038e7a5f0d9d931913935"}, "downloads": -1, "filename": "django-chunked-upload-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a5a9e7b0e8ff03c503fb132ee3337987", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10135, "upload_time": "2015-01-26T05:09:25", "upload_time_iso_8601": "2015-01-26T05:09:25.437735Z", "url": "https://files.pythonhosted.org/packages/be/57/b4e79ff25ffe1c32a6685f6cdaf8eb1e00fab22fa3093d4322b0368e49ce/django-chunked-upload-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "ab445540978784d0b049066e9a90144a", "sha256": "276f618b74e3edbe5adc3d4cd2239167db5e9980ba7a872f01918eca576ab912"}, "downloads": -1, "filename": "django-chunked-upload-1.0.3.tar.gz", "has_sig": false, "md5_digest": "ab445540978784d0b049066e9a90144a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10303, "upload_time": "2015-01-28T18:31:26", "upload_time_iso_8601": "2015-01-28T18:31:26.954804Z", "url": "https://files.pythonhosted.org/packages/eb/b8/ffbfb9291ef4850a5bb15adbe9c7878a1f891bb41ca9efe454fa74c1b014/django-chunked-upload-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "75fd5db14a8b33a890066a3b3b2db65f", "sha256": "eccb6ed1e2e111341cffc0bc8611e9da99d5d40c2811f2de233e318d6b06ce2b"}, "downloads": -1, "filename": "django-chunked-upload-1.0.4.tar.gz", "has_sig": false, "md5_digest": "75fd5db14a8b33a890066a3b3b2db65f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10504, "upload_time": "2015-05-04T18:54:10", "upload_time_iso_8601": "2015-05-04T18:54:10.789085Z", "url": "https://files.pythonhosted.org/packages/c7/3b/3a653f3e27ae168b89fb8e2ab37f44be336ded99de33ff7548c986afed71/django-chunked-upload-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "b708bf1db58421e6b6d44f0fced2b4ab", "sha256": "1c3b0721e0aec9d409f0e6be1360f7b29f6521056ee84c5f97b7704873ddb16c"}, "downloads": -1, "filename": "django-chunked-upload-1.0.5.tar.gz", "has_sig": false, "md5_digest": "b708bf1db58421e6b6d44f0fced2b4ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10505, "upload_time": "2015-06-15T19:38:43", "upload_time_iso_8601": "2015-06-15T19:38:43.137682Z", "url": "https://files.pythonhosted.org/packages/b7/8e/d70d2de27ca9a6ee91c776d71850dafc1be5de2141023a159a4e69f5acf0/django-chunked-upload-1.0.5.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "435865a20e332978df3078ca76aba24a", "sha256": "35c3cc17b0344a09c876a91e6fd50f1c0e5510db9c17236563c0fa4934965083"}, "downloads": -1, "filename": "django-chunked-upload-1.1.0.tar.gz", "has_sig": false, "md5_digest": "435865a20e332978df3078ca76aba24a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10565, "upload_time": "2015-09-15T19:36:42", "upload_time_iso_8601": "2015-09-15T19:36:42.711082Z", "url": "https://files.pythonhosted.org/packages/30/1d/4ab9a5dfd7bc1e6d54685fcd231809196954c73d68a7296d16fa64290527/django-chunked-upload-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "62a16269da2732a850e6120d4600aefe", "sha256": "33a561ee6bf1843edc2760cdf74fccb81cc34b7cef0a09cccdc9601a49dae22a"}, "downloads": -1, "filename": "django-chunked-upload-1.1.1.tar.gz", "has_sig": false, "md5_digest": "62a16269da2732a850e6120d4600aefe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10556, "upload_time": "2015-09-17T18:02:48", "upload_time_iso_8601": "2015-09-17T18:02:48.022113Z", "url": "https://files.pythonhosted.org/packages/7d/da/411c50a5df0a61e6daef0962bc7d7942af94cf29847461505f15d44fd6c8/django-chunked-upload-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "930f967f3cfbc52ae50aba5063627cf4", "sha256": "1bb657609250c5c2329eebc7d009e9b8f24099701c114752de16ef89acf20ae3"}, "downloads": -1, "filename": "django-chunked-upload-1.1.2.tar.gz", "has_sig": false, "md5_digest": "930f967f3cfbc52ae50aba5063627cf4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9215, "upload_time": "2017-06-14T05:39:59", "upload_time_iso_8601": "2017-06-14T05:39:59.215056Z", "url": "https://files.pythonhosted.org/packages/d6/98/da567785cc696775370b9150f6a11e3a272ddf1a29e34cd9c733d57aa6b5/django-chunked-upload-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "67d9fbd3042b577dbf92cb78169382a5", "sha256": "3d2c6283ceac31601f9f2e7ef0f5b55efde17db1a1caed510229e3324686c1b3"}, "downloads": -1, "filename": "django-chunked-upload-1.1.3.tar.gz", "has_sig": false, "md5_digest": "67d9fbd3042b577dbf92cb78169382a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10455, "upload_time": "2018-03-08T00:50:26", "upload_time_iso_8601": "2018-03-08T00:50:26.691328Z", "url": "https://files.pythonhosted.org/packages/e2/d9/cd123978127cc8cbc854511599740f2cdb9f5549e0fdc11e5625436c0a01/django-chunked-upload-1.1.3.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "170f678dea6337d8bb922d3357bb520d", "sha256": "f81ce8d7a5df87c75c971b31dd15961712e729f8fbb38a9398c85cc01f89316d"}, "downloads": -1, "filename": "django_chunked_upload-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "170f678dea6337d8bb922d3357bb520d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12373, "upload_time": "2019-12-15T19:15:13", "upload_time_iso_8601": "2019-12-15T19:15:13.251230Z", "url": "https://files.pythonhosted.org/packages/c2/74/694075d93d4ed7637af92a62ef13370758c3b86c8d9559ab9507679aad4b/django_chunked_upload-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2919074e9261f5febaabe093716897ab", "sha256": "fb8961029d6a9febb974fb24f529c7773c61a9e6467825db861aae29e1f0c978"}, "downloads": -1, "filename": "django-chunked-upload-2.0.0.tar.gz", "has_sig": false, "md5_digest": "2919074e9261f5febaabe093716897ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23275, "upload_time": "2019-12-15T19:15:15", "upload_time_iso_8601": "2019-12-15T19:15:15.287031Z", "url": "https://files.pythonhosted.org/packages/95/cf/bdfbbdefa3c33ffffcbf0229d1496bb9a8497d76dfd5f312ed6e76e14291/django-chunked-upload-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "170f678dea6337d8bb922d3357bb520d", "sha256": "f81ce8d7a5df87c75c971b31dd15961712e729f8fbb38a9398c85cc01f89316d"}, "downloads": -1, "filename": "django_chunked_upload-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "170f678dea6337d8bb922d3357bb520d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12373, "upload_time": "2019-12-15T19:15:13", "upload_time_iso_8601": "2019-12-15T19:15:13.251230Z", "url": "https://files.pythonhosted.org/packages/c2/74/694075d93d4ed7637af92a62ef13370758c3b86c8d9559ab9507679aad4b/django_chunked_upload-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2919074e9261f5febaabe093716897ab", "sha256": "fb8961029d6a9febb974fb24f529c7773c61a9e6467825db861aae29e1f0c978"}, "downloads": -1, "filename": "django-chunked-upload-2.0.0.tar.gz", "has_sig": false, "md5_digest": "2919074e9261f5febaabe093716897ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23275, "upload_time": "2019-12-15T19:15:15", "upload_time_iso_8601": "2019-12-15T19:15:15.287031Z", "url": "https://files.pythonhosted.org/packages/95/cf/bdfbbdefa3c33ffffcbf0229d1496bb9a8497d76dfd5f312ed6e76e14291/django-chunked-upload-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:09 2020"}