{"info": {"author": "Jwely", "author_email": "jeff.ely.08@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development"], "description": "[![PyPI version](https://badge.fury.io/py/espa-api-client.svg)](https://badge.fury.io/py/espa-api-client)\n\n# espa-api-client\n\nPython interface to the [API for ordering from ESPA](https://github.com/USGS-EROS/espa-api). This API allows lots of custom processing of surface reflectance corrected data for landsat, and some other very useful science grade computations. So, this python client provides some friendly interfaces with the API to make life a little easier.\n\n## Installation\nNotes:\n\nPrimary testing for this package as been performed on python 3.5 on Ubuntu, and mostly for Landsat.\nMODIS data not yet supported.\n\n```\npip install espa-api-client\n```\nor for python3\n```\npip3 install espa-api-client\n```\n\n## Example\nThe example below will load an order template for the DC metro area with our custom output preferences\nand desired products for each mission, landsat 8 and landsat 7. That template follows the api order schema\nthat you can read more about at the espa-api page. It then reads the desired landsat tiles from a csv file created by\nexporting search results from [Earth Explorer](http://earthexplorer.usgs.gov/), and adds them to an order created\nfrom the template. It gives that order a unique name in the \"note\" field, to promote good data management practice but also\nto provide a simple way of preventing duplicate orders to the ESPA API. It then submits the order, and retreives the order \nID from the servers response. It then issues a download command on that order, that will yield completed download \nfilepaths as they are available, and self terminate when all files have been either downloaded or experienced a server internal error.\n\nOne script to order, download, and process data, that need only be run once, but can be terminated and \nre-executed without issue.\n\n```python\nfrom espa_api_client import Client, Order, OrderTemplate, EspaLandsatLocalDownloader, \\\n    get_order_inputs_from_earth_explorer_export\n\n# build the various handlers to spec\ntemplate = OrderTemplate('example_dc_metro')\norder = Order(template, note=\"DC-metro-20161101\")\nclient = Client()   # will prompt user for username and password if auth argument not supplied\ndownloader = EspaLandsatLocalDownloader('downloads')\n\nl8_tiles = get_order_inputs_from_earth_explorer_export('L8_export.csv')\nl7_tiles = get_order_inputs_from_earth_explorer_export('L7_export.csv')\norder.add_tiles(\"olitirs8\", l8_tiles)\norder.add_tiles(\"etm7\", l7_tiles)\nresponse = order.submit(client)\n\n# view the servers whole response. which might indicate an ordering error!\nprint(response)     \n\n# assuming there were no order submission errors\norderid = response['orderid']\n\n# now start the downloader!\nfor download in client.download_order_gen(orderid, downloader):\n    print(download)\n\n    # download is a tuple with the filepath, and True if the file\n    # is a fresh download.\n\n    # this is where data pipeline scripts go that can operate\n    # on files as they are downloaded (generator),\n\n    # See the Client class for further documentation.\n\n```\n\n## Templates\n\n#### Defining templates\nAt present, there is no helper to construct a good template. The recomended process currently requires the user\nto create their own template in dictionary format, then save it (which exports it to a template json file).\n```python\nmy_template = OrderTemplate('my_template_name')\nmy_template.define(my_template_dict)\nmy_template.save()\n\n# subsequently it will automatically load when we use\nmy_template = OrderTemplate('my_template_name')\n\n# or automatically be applied to an order with\nmy_order = Order('my_template_name', note='my_note')\n```\nTo create a template, you can examine the order schema with an api request.\n```python\nfrom pprint import pprint\nauth = (username, password)\nmy_client = Client(auth)  # authenticate client or just leave blank for prompt.\nresp = my_client.get_order_schema()  # ask API about order schema\npprint(resp.json())  #print the response in readable json\n```\n#### Example templates\nThe json template used in the example looks like this:\n```json\n{\n    \"olitirs8\": {\n        \"inputs\": [],\n        \"products\": [\"sr\", \"sr_ndvi\", \"sr_savi\", \"sr_msavi\", \"cloud\"]\n    },\n    \"etm7\": {\n        \"inputs\": [],\n        \"products\": [\"sr\", \"sr_ndvi\", \"sr_savi\", \"sr_msavi\", \"cloud\"]\n    },\n    \"format\": \"gtiff\",\n    \"plot_statistics\": false,\n    \"projection\": {\n      \"lonlat\": null\n    },\n    \"image_extents\": {\n        \"north\": 39.0,\n        \"south\": 38.7,\n        \"east\": -76.8,\n        \"west\": -77.2,\n        \"units\": \"dd\"\n    },\n    \"note\": \"\"\n}\n```\n\nLets say you want a template that will work for ANY landsat tile over any geographic area, and just download the whole surface reflectance and cloud tiles in geotiff format for whatever tiles you input. You could use a template that looks like:\n```json\n{\n    \"olitirs8\": {\n        \"inputs\": [],\n        \"products\": [\"sr\", \"cloud\"]\n    },\n    \"etm7\": {\n        \"inputs\": [],\n        \"products\": [\"sr\", \"cloud\"]\n    },\n    \"tm5\": {\n        \"inputs\": [],\n        \"products\": [\"sr\", \"cloud\"]\n    },\n    \"tm4\": {\n        \"inputs\": [],\n        \"products\": [\"sr\", \"cloud\"]\n    },\n    \"format\": \"gtiff\",\n    \"plot_statistics\": false,\n    \"projection\": {\n      \"lonlat\": null\n    },\n    \"note\": \"\"\n}\n```\n\n## TODO:\n[] better docs\n[x] Need downloader for landsat and modis to be separate, and easily selected by the client.\n[] Some kind of template creation assistant would be good\n[] Template creation assistant could also include order validation. ESPA already has their code for this made public.\n[] A better way to get scene identifiers than manual EE query and export. I can't believe I haven't been able to find an exposed API for this. landsat-util only works for landsat8.", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Jwely/espa-api-client", "keywords": "landsat,modis,espa,ordering", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "espa-api-client", "package_url": "https://pypi.org/project/espa-api-client/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/espa-api-client/", "project_urls": {"Homepage": "https://github.com/Jwely/espa-api-client"}, "release_url": "https://pypi.org/project/espa-api-client/1.0.0.dev27/", "requires_dist": ["pandas", "requests", "wget"], "requires_python": null, "summary": "Python interface to the espa-api", "version": "1.0.0.dev27", "yanked": false, "html_description": "<div class=\"project-description\">\n            [![PyPI version](https://badge.fury.io/py/espa-api-client.svg)](https://badge.fury.io/py/espa-api-client)<br><br># espa-api-client<br><br>Python interface to the [API for ordering from ESPA](https://github.com/USGS-EROS/espa-api). This API allows lots of custom processing of surface reflectance corrected data for landsat, and some other very useful science grade computations. So, this python client provides some friendly interfaces with the API to make life a little easier.<br><br>## Installation<br>Notes:<br><br>Primary testing for this package as been performed on python 3.5 on Ubuntu, and mostly for Landsat.<br>MODIS data not yet supported.<br><br>```<br>pip install espa-api-client<br>```<br>or for python3<br>```<br>pip3 install espa-api-client<br>```<br><br>## Example<br>The example below will load an order template for the DC metro area with our custom output preferences<br>and desired products for each mission, landsat 8 and landsat 7. That template follows the api order schema<br>that you can read more about at the espa-api page. It then reads the desired landsat tiles from a csv file created by<br>exporting search results from [Earth Explorer](http://earthexplorer.usgs.gov/), and adds them to an order created<br>from the template. It gives that order a unique name in the \"note\" field, to promote good data management practice but also<br>to provide a simple way of preventing duplicate orders to the ESPA API. It then submits the order, and retreives the order <br>ID from the servers response. It then issues a download command on that order, that will yield completed download <br>filepaths as they are available, and self terminate when all files have been either downloaded or experienced a server internal error.<br><br>One script to order, download, and process data, that need only be run once, but can be terminated and <br>re-executed without issue.<br><br>```python<br>from espa_api_client import Client, Order, OrderTemplate, EspaLandsatLocalDownloader, \\<br>    get_order_inputs_from_earth_explorer_export<br><br># build the various handlers to spec<br>template = OrderTemplate('example_dc_metro')<br>order = Order(template, note=\"DC-metro-20161101\")<br>client = Client()   # will prompt user for username and password if auth argument not supplied<br>downloader = EspaLandsatLocalDownloader('downloads')<br><br>l8_tiles = get_order_inputs_from_earth_explorer_export('L8_export.csv')<br>l7_tiles = get_order_inputs_from_earth_explorer_export('L7_export.csv')<br>order.add_tiles(\"olitirs8\", l8_tiles)<br>order.add_tiles(\"etm7\", l7_tiles)<br>response = order.submit(client)<br><br># view the servers whole response. which might indicate an ordering error!<br>print(response)     <br><br># assuming there were no order submission errors<br>orderid = response['orderid']<br><br># now start the downloader!<br>for download in client.download_order_gen(orderid, downloader):<br>    print(download)<br><br>    # download is a tuple with the filepath, and True if the file<br>    # is a fresh download.<br><br>    # this is where data pipeline scripts go that can operate<br>    # on files as they are downloaded (generator),<br><br>    # See the Client class for further documentation.<br><br>```<br><br>## Templates<br><br>#### Defining templates<br>At present, there is no helper to construct a good template. The recomended process currently requires the user<br>to create their own template in dictionary format, then save it (which exports it to a template json file).<br>```python<br>my_template = OrderTemplate('my_template_name')<br>my_template.define(my_template_dict)<br>my_template.save()<br><br># subsequently it will automatically load when we use<br>my_template = OrderTemplate('my_template_name')<br><br># or automatically be applied to an order with<br>my_order = Order('my_template_name', note='my_note')<br>```<br>To create a template, you can examine the order schema with an api request.<br>```python<br>from pprint import pprint<br>auth = (username, password)<br>my_client = Client(auth)  # authenticate client or just leave blank for prompt.<br>resp = my_client.get_order_schema()  # ask API about order schema<br>pprint(resp.json())  #print the response in readable json<br>```<br>#### Example templates<br>The json template used in the example looks like this:<br>```json<br>{<br>    \"olitirs8\": {<br>        \"inputs\": [],<br>        \"products\": [\"sr\", \"sr_ndvi\", \"sr_savi\", \"sr_msavi\", \"cloud\"]<br>    },<br>    \"etm7\": {<br>        \"inputs\": [],<br>        \"products\": [\"sr\", \"sr_ndvi\", \"sr_savi\", \"sr_msavi\", \"cloud\"]<br>    },<br>    \"format\": \"gtiff\",<br>    \"plot_statistics\": false,<br>    \"projection\": {<br>      \"lonlat\": null<br>    },<br>    \"image_extents\": {<br>        \"north\": 39.0,<br>        \"south\": 38.7,<br>        \"east\": -76.8,<br>        \"west\": -77.2,<br>        \"units\": \"dd\"<br>    },<br>    \"note\": \"\"<br>}<br>```<br><br>Lets say you want a template that will work for ANY landsat tile over any geographic area, and just download the whole surface reflectance and cloud tiles in geotiff format for whatever tiles you input. You could use a template that looks like:<br>```json<br>{<br>    \"olitirs8\": {<br>        \"inputs\": [],<br>        \"products\": [\"sr\", \"cloud\"]<br>    },<br>    \"etm7\": {<br>        \"inputs\": [],<br>        \"products\": [\"sr\", \"cloud\"]<br>    },<br>    \"tm5\": {<br>        \"inputs\": [],<br>        \"products\": [\"sr\", \"cloud\"]<br>    },<br>    \"tm4\": {<br>        \"inputs\": [],<br>        \"products\": [\"sr\", \"cloud\"]<br>    },<br>    \"format\": \"gtiff\",<br>    \"plot_statistics\": false,<br>    \"projection\": {<br>      \"lonlat\": null<br>    },<br>    \"note\": \"\"<br>}<br>```<br><br>## TODO:<br>[] better docs<br>[x] Need downloader for landsat and modis to be separate, and easily selected by the client.<br>[] Some kind of template creation assistant would be good<br>[] Template creation assistant could also include order validation. ESPA already has their code for this made public.<br>[] A better way to get scene identifiers than manual EE query and export. I can't believe I haven't been able to find an exposed API for this. landsat-util only works for landsat8.\n          </div>"}, "last_serial": 2944564, "releases": {"1.0.0.dev1": [{"comment_text": "", "digests": {"md5": "58eaaf927da44c379073186feec77456", "sha256": "b877501899280ecca8757453e6a77e62b30ec80acf5bda1928d11857f0f61ef9"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "58eaaf927da44c379073186feec77456", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12990, "upload_time": "2016-11-01T20:19:32", "upload_time_iso_8601": "2016-11-01T20:19:32.373477Z", "url": "https://files.pythonhosted.org/packages/b9/84/e013a0834e04bcd55c874241d582b2d4452cbe1ef7b2adfa26f2c43b7b8f/espa_api_client-1.0.0.dev1-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev10": [{"comment_text": "", "digests": {"md5": "2017565abac67eb32550e21d2ee99dee", "sha256": "5ec340412756c9173f1091d35aa5ae403228a695b239397e9e1b4ea8a85e5751"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev10-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2017565abac67eb32550e21d2ee99dee", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19582, "upload_time": "2016-12-20T22:08:33", "upload_time_iso_8601": "2016-12-20T22:08:33.453032Z", "url": "https://files.pythonhosted.org/packages/98/7c/a00dfd80958feefe41fdb3cb2f913aa91397e79c1b8e4d0c2960e67f6191/espa_api_client-1.0.0.dev10-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev11": [{"comment_text": "", "digests": {"md5": "20f7df374be0518b90652fbf8f85403c", "sha256": "657c7e6a87a111c1bdfe97e406352695868b76b6c61ddede30f9ef439c2cb3da"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev11-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "20f7df374be0518b90652fbf8f85403c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19593, "upload_time": "2016-12-20T22:11:45", "upload_time_iso_8601": "2016-12-20T22:11:45.693999Z", "url": "https://files.pythonhosted.org/packages/8d/ba/244f1c9d2a9827d8b8331a9f67447e5a436370326935fe0f093f047344f9/espa_api_client-1.0.0.dev11-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev12": [{"comment_text": "", "digests": {"md5": "43336e81f97bf5b579c77883656454e6", "sha256": "ad308174131280ed871968927fb74801796b7b47b73e56386cbe1801cc40e939"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev12-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "43336e81f97bf5b579c77883656454e6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19628, "upload_time": "2016-12-20T22:14:15", "upload_time_iso_8601": "2016-12-20T22:14:15.728989Z", "url": "https://files.pythonhosted.org/packages/24/7b/f9328a950c2819c9538ca4397ca1b451411d549517807ee5abc5bd546e4f/espa_api_client-1.0.0.dev12-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev13": [{"comment_text": "", "digests": {"md5": "810789697a64daaa3bc3aa6855359f7f", "sha256": "2072b71a21945f01a74276468b8d79de1d6de50b061780e080e274523bf54be4"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev13-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "810789697a64daaa3bc3aa6855359f7f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19734, "upload_time": "2016-12-21T15:55:56", "upload_time_iso_8601": "2016-12-21T15:55:56.221311Z", "url": "https://files.pythonhosted.org/packages/eb/85/e82c4fd6ed40b35c4b4d0179bc4a87eb6d2257b0ac763b0522bd6a318cb6/espa_api_client-1.0.0.dev13-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev14": [{"comment_text": "", "digests": {"md5": "a4eed1a62cfdda94b7b50908096aef79", "sha256": "6b3cd3b6f7f61a5e240c789153ee0270ba388c341c0a505913ed3f63f91de349"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev14-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a4eed1a62cfdda94b7b50908096aef79", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19698, "upload_time": "2016-12-21T16:26:03", "upload_time_iso_8601": "2016-12-21T16:26:03.860737Z", "url": "https://files.pythonhosted.org/packages/9e/0d/0c8356571147df7def8b6595d6de9df5e39305686a3e53fd9f7e4e843429/espa_api_client-1.0.0.dev14-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev15": [{"comment_text": "", "digests": {"md5": "ea14f67f3d1ef5fded887c3a1b0ed505", "sha256": "99e3f637b2d4bbc2837b064bafbd47a54903ce2d5cc5871a9e82154e67be95b7"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev15-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ea14f67f3d1ef5fded887c3a1b0ed505", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19745, "upload_time": "2016-12-27T15:46:28", "upload_time_iso_8601": "2016-12-27T15:46:28.508590Z", "url": "https://files.pythonhosted.org/packages/7c/a3/7fbd6bd1ac335df668ccce31aae1340c0b3e3e42f93e49a9e297143a5ef6/espa_api_client-1.0.0.dev15-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev16": [{"comment_text": "", "digests": {"md5": "ef208d4492ab7166fd72e17ff5ab99d8", "sha256": "602c34e5ab8c01dee3c9539777482c6bb975c6fa949b77631fde7ca68db243d7"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev16-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ef208d4492ab7166fd72e17ff5ab99d8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20725, "upload_time": "2016-12-29T00:20:44", "upload_time_iso_8601": "2016-12-29T00:20:44.857939Z", "url": "https://files.pythonhosted.org/packages/a5/f0/856931ca562014e3d8086e22ccd0a6b804c663458d82bf763e52c9f65c99/espa_api_client-1.0.0.dev16-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev17": [{"comment_text": "", "digests": {"md5": "cadfa1ef9b17d05aef34c657cad42293", "sha256": "c066fb977315da0034d5c2ebe40e13e7d454a91efe2e45d62851edb28b487770"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev17-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cadfa1ef9b17d05aef34c657cad42293", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20778, "upload_time": "2016-12-30T04:04:23", "upload_time_iso_8601": "2016-12-30T04:04:23.572384Z", "url": "https://files.pythonhosted.org/packages/1a/66/10d7d954d92f25d7dd6d45f1c2c1ae9e0bcc600e49ad72782810b11ffae8/espa_api_client-1.0.0.dev17-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev18": [{"comment_text": "", "digests": {"md5": "2e86e6afde32e421a6f952c3223a9341", "sha256": "65ac9324ed5dc848bc15f50e12ad236ad5b1338d525bea7a15cf8e1350abc548"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev18-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2e86e6afde32e421a6f952c3223a9341", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20787, "upload_time": "2016-12-31T14:41:03", "upload_time_iso_8601": "2016-12-31T14:41:03.049721Z", "url": "https://files.pythonhosted.org/packages/24/91/7a434bdcc77dcf526f6bdfa17528eb3adea32612800fce16261992a765d8/espa_api_client-1.0.0.dev18-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev19": [{"comment_text": "", "digests": {"md5": "1c2c545f4674b7bd25168905d4e836c8", "sha256": "2edc4da6b151e181315b5d82420008f92f9193062391428da0be62b3d40930bf"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev19-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1c2c545f4674b7bd25168905d4e836c8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20810, "upload_time": "2017-02-09T16:29:41", "upload_time_iso_8601": "2017-02-09T16:29:41.432400Z", "url": "https://files.pythonhosted.org/packages/78/9d/c3514a0bcb309a5ed3a486f8ff1a270c6ef05ebdbe44be18b4706998fdcd/espa_api_client-1.0.0.dev19-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev2": [{"comment_text": "", "digests": {"md5": "1b604a43452420a5448e3c2c671d246b", "sha256": "0f08d43ed3eaab0204ea022a807d2b830e07bc2f00a279ae252cca356d6365a8"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1b604a43452420a5448e3c2c671d246b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13295, "upload_time": "2016-11-01T20:58:38", "upload_time_iso_8601": "2016-11-01T20:58:38.291980Z", "url": "https://files.pythonhosted.org/packages/b3/1f/cd0733996fe320750431fb6d0ef4e1ef9b0874aa8e180fa01584dc1b6baa/espa_api_client-1.0.0.dev2-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev20": [{"comment_text": "", "digests": {"md5": "5d9914505af2f8eff246268ad7d4df50", "sha256": "f87a8d913999cebbaf52afb16c8e3dfd69389233d4cf5670250f1d322e7742be"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev20-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5d9914505af2f8eff246268ad7d4df50", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20851, "upload_time": "2017-02-10T18:44:47", "upload_time_iso_8601": "2017-02-10T18:44:47.705816Z", "url": "https://files.pythonhosted.org/packages/cf/3b/0c2fd1141d75fefcbdf9972603387d8fb6ae6a54554440298623a6206c78/espa_api_client-1.0.0.dev20-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev21": [{"comment_text": "", "digests": {"md5": "f15990f531c3839f53670f2f81aac063", "sha256": "ef1ece30421e5d3e5fb333d2fdf8c8787e77c3e98af85e35f1f70805d0f01fa5"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev21-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f15990f531c3839f53670f2f81aac063", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20852, "upload_time": "2017-02-10T18:55:23", "upload_time_iso_8601": "2017-02-10T18:55:23.900166Z", "url": "https://files.pythonhosted.org/packages/32/84/b6d96aa69c7c8c5ce380ab96faa65ae90f9f26ff691c8a2d7729305c9342/espa_api_client-1.0.0.dev21-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev22": [{"comment_text": "", "digests": {"md5": "b545e478f9f539e6f96179aec02eb9fe", "sha256": "d96aada79143c991439abd9502c9a6f80615527832478c565747702cb1460c4b"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev22-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b545e478f9f539e6f96179aec02eb9fe", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20908, "upload_time": "2017-02-10T19:20:33", "upload_time_iso_8601": "2017-02-10T19:20:33.677272Z", "url": "https://files.pythonhosted.org/packages/2f/da/aa04e1256d2bca92e4899cc13fc21b81702076be676253bd06cfcbf1c7e2/espa_api_client-1.0.0.dev22-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev23": [{"comment_text": "", "digests": {"md5": "27ae0fd64ee2ebbcf4414edbfb2ded8d", "sha256": "f687c8cb78fb04bdaa75ed7403808370f65b8d577c5517a048bd7af4b2d5669f"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev23-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "27ae0fd64ee2ebbcf4414edbfb2ded8d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20895, "upload_time": "2017-02-15T18:52:27", "upload_time_iso_8601": "2017-02-15T18:52:27.516732Z", "url": "https://files.pythonhosted.org/packages/62/9f/67a3c1921634d7077640738e90344d8480013e8dcbd04b482b230860c220/espa_api_client-1.0.0.dev23-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev24": [{"comment_text": "", "digests": {"md5": "2a75d32a4f871a94a463097dab9d4a6b", "sha256": "69ddbfa6ffe8fbc9b6fc2d77f2f7cad51c4a15c10a176743e6b79c716e3abd8e"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev24-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2a75d32a4f871a94a463097dab9d4a6b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20979, "upload_time": "2017-04-09T17:06:44", "upload_time_iso_8601": "2017-04-09T17:06:44.195088Z", "url": "https://files.pythonhosted.org/packages/a5/71/d87d8026be333889fcea918ca9a6822105b29114851da644ce22f1c67679/espa_api_client-1.0.0.dev24-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev25": [{"comment_text": "", "digests": {"md5": "04eb0bc38409f55dc399a5e338d9caa0", "sha256": "0f2a4243ca32f84c11b567e8855a3fead0a71fc34ffe32b455e077d6ee00c076"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev25-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "04eb0bc38409f55dc399a5e338d9caa0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20988, "upload_time": "2017-04-19T17:47:13", "upload_time_iso_8601": "2017-04-19T17:47:13.320307Z", "url": "https://files.pythonhosted.org/packages/73/91/cc9425988b797825179d85e140f2ac0e204b770c1a3ff66d9d90211d2ee8/espa_api_client-1.0.0.dev25-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev26": [{"comment_text": "", "digests": {"md5": "5ac51b5ead8d3c01a921c2020e55bc1b", "sha256": "e1292fd8977c3c9e49874d81aaa5826fdfd93d6d08f9eb296f8f809e41089c61"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev26-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5ac51b5ead8d3c01a921c2020e55bc1b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21013, "upload_time": "2017-05-17T18:15:50", "upload_time_iso_8601": "2017-05-17T18:15:50.149014Z", "url": "https://files.pythonhosted.org/packages/53/52/9f2d4c152891c9b640bdb326d687ab3fa9630e9c0624c1a7e2c9d81693f3/espa_api_client-1.0.0.dev26-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev27": [{"comment_text": "", "digests": {"md5": "7173728ee37aaa3ec40f938a54135d85", "sha256": "b460ede96efd8e10d9dd474be8bcbd9e8154c697c78142bdff2e60bafbd71c4b"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev27-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7173728ee37aaa3ec40f938a54135d85", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22010, "upload_time": "2017-06-12T15:52:59", "upload_time_iso_8601": "2017-06-12T15:52:59.881173Z", "url": "https://files.pythonhosted.org/packages/54/8a/9ec138bc10fd57b134fdc8e22d5a0938677ab53b5ebb7c38d1427f4eabca/espa_api_client-1.0.0.dev27-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev3": [{"comment_text": "", "digests": {"md5": "0e731e4b53205ac31cf12c6fbd37ee7b", "sha256": "feaaed01983243890af6a39213b5496a66509b7cfa4cc4e565786085cf48f03e"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0e731e4b53205ac31cf12c6fbd37ee7b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13248, "upload_time": "2016-11-01T21:01:01", "upload_time_iso_8601": "2016-11-01T21:01:01.759469Z", "url": "https://files.pythonhosted.org/packages/ab/07/2f51b3ad9e1cf1a933805333c43c9870db97434d05a9abea68f04698faf1/espa_api_client-1.0.0.dev3-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev4": [{"comment_text": "", "digests": {"md5": "f66a8d7bbd075843a90822295d376585", "sha256": "7c703364dfc7bf3de4420822edd1139d7bec1e7e8f1c4764ea95472b3f6ab6e1"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f66a8d7bbd075843a90822295d376585", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13324, "upload_time": "2016-11-01T21:26:18", "upload_time_iso_8601": "2016-11-01T21:26:18.514844Z", "url": "https://files.pythonhosted.org/packages/f0/24/11a7bfa185d0a768198aaaad43597becf8ec24ab944d9e398f5b648e35c4/espa_api_client-1.0.0.dev4-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev5": [{"comment_text": "", "digests": {"md5": "c3c23821de9556f3472cdfc9ac3190b9", "sha256": "ea984ae4625fee84effefa6625a487c7477626c42138229330ef7dd42a29a313"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c3c23821de9556f3472cdfc9ac3190b9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13341, "upload_time": "2016-11-01T21:28:52", "upload_time_iso_8601": "2016-11-01T21:28:52.533117Z", "url": "https://files.pythonhosted.org/packages/39/e8/2ca2aee5af8eb053fe9737cfe5dcd3433ba205d4e92157eff00453a9277f/espa_api_client-1.0.0.dev5-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev6": [{"comment_text": "", "digests": {"md5": "a8ac4f6d788639a0584badc9ff1fa28d", "sha256": "48e845560311423978bb350a6380de8bb98b57eb00b33aaaa6adabc9058b4ea0"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a8ac4f6d788639a0584badc9ff1fa28d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15425, "upload_time": "2016-11-02T15:22:44", "upload_time_iso_8601": "2016-11-02T15:22:44.605699Z", "url": "https://files.pythonhosted.org/packages/cf/b8/645a0dc0565b68f9e4543f16cf0940182b6bef8d99d8c1efb62197592da6/espa_api_client-1.0.0.dev6-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev7": [{"comment_text": "", "digests": {"md5": "b9d098b96ecf9a4419a26f7445498e6c", "sha256": "4ca83061149e02bc3466a087c57d82c8028d3eae300e138614a23f2de032a6da"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b9d098b96ecf9a4419a26f7445498e6c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15954, "upload_time": "2016-11-02T18:41:28", "upload_time_iso_8601": "2016-11-02T18:41:28.748803Z", "url": "https://files.pythonhosted.org/packages/52/51/f8712da4b1c76fea256d892fb7692782a5ca0a298b51d84da11456162244/espa_api_client-1.0.0.dev7-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev8": [{"comment_text": "", "digests": {"md5": "604938273018b247a8944ebd7c0e1433", "sha256": "c19913bb40bc4114af21c78c0d34684a301409679e2b8aba49326779a12756eb"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "604938273018b247a8944ebd7c0e1433", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16214, "upload_time": "2016-11-29T18:38:12", "upload_time_iso_8601": "2016-11-29T18:38:12.567343Z", "url": "https://files.pythonhosted.org/packages/5b/6b/dc1ae88182afbe146093d0fc5794f23b68f1fa0946644597be86ccfb29d2/espa_api_client-1.0.0.dev8-py2.py3-none-any.whl", "yanked": false}], "1.0.0.dev9": [{"comment_text": "", "digests": {"md5": "f0e7a0cabe0ada21b403ee76744be3c8", "sha256": "16484cedeb2f5a14aa39a9fee773db0ca80366c030aef18239dc21ecc0e0e9db"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f0e7a0cabe0ada21b403ee76744be3c8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19518, "upload_time": "2016-12-14T18:37:44", "upload_time_iso_8601": "2016-12-14T18:37:44.727887Z", "url": "https://files.pythonhosted.org/packages/77/9f/97eddd4ed91f57299492c151be3caa5b16b5929e949212244672cb21c799/espa_api_client-1.0.0.dev9-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7173728ee37aaa3ec40f938a54135d85", "sha256": "b460ede96efd8e10d9dd474be8bcbd9e8154c697c78142bdff2e60bafbd71c4b"}, "downloads": -1, "filename": "espa_api_client-1.0.0.dev27-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7173728ee37aaa3ec40f938a54135d85", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22010, "upload_time": "2017-06-12T15:52:59", "upload_time_iso_8601": "2017-06-12T15:52:59.881173Z", "url": "https://files.pythonhosted.org/packages/54/8a/9ec138bc10fd57b134fdc8e22d5a0938677ab53b5ebb7c38d1427f4eabca/espa_api_client-1.0.0.dev27-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:45:38 2020"}