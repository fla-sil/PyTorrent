{"info": {"author": "Gary Klindt", "author_email": "gary.klindt@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: Unix", "Programming Language :: Python :: 3"], "description": "# quick plot\n\nThe scripting interface of matplotlib is stateful, therefore\ndangerous. The object oriented interface to the plotting library is\npolluted. This tiny library combines the two interfaces into one\ncontext manager.\n\n## fundament\n\nIf this file is somewhere in your =$PYTHONPATH=, the following code\nshould produce a plot.\n\n\u00b4\u00b4\u00b4python\nimport numpy as np\nimport quick\n\nwith quick.Plot() as qp:\n    qp.plot(np.sin(np.linspace(0, 2 * np.pi)))\n\u00b4\u00b4\u00b4\n\nThe =Plot= class is the only available class in the =quick= module. It\nshould be instantiated exactly once. Its instance can do everything\nthe matplotlib axis object can do. For some methods, a default\nconfiguration is supplied. There are some methods, that are not\ncontained in the axis object, for example =trajectory=, =field=, =points=,\n=remove_border=, =remove_xticks=. When a method is called, that is neither\na method of the =axis= object, nor one of the additional methods of this\nmodule, then the module =matplotlib.pyplot= is searched for a function\nwith that name, and, if it exists, it is called. When the context\nmanager is left, the plot shows up.\n\n### arguments\n\n=Plot= takes optional arguments.\n| =filename= | given that, the plot is not shown interactively, but saved as a file, default =None= |\n| =figsize=  | a tuple, representing (width, height), default =(3, 3)=                              |\n| =grid=     | if =True= shows a grid, default =False                                               |\nall other optional arguments are directly passed to =matplotlib.pyplot.subplot=.\n\n## short form\n\nIf you just want to quickly see some of your data, and you do not want\nto do any customization of the plotting result, the context manager is\na bit of a boilerplate. So there is the following shorthand for the\nprevious script.\n\n\u00b4\u00b4\u00b4python\nimport numpy as np\nimport quick\n\nquick.plot(np.sin(np.linspace(0, 2 * np.pi)))\n\u00b4\u00b4\u00b4\n\nThe context manager is called implicitly.\n\n## more convenience\n\nThe quick module additionally provides a few methods that are not\ndirectly related to the =matplotlib= plotting facility, e.g.  \n- =colored=: takes a list of array and return an iterator with tuple,\n  with the data and a color, that can be past to the color argument of\n  plotting methods. Optional argument is the name of a colormap\n- =landscape=, =portrait=: they return tuples that can be past to the\n  =figsize= argument of =Plot=, internally using the golden ratio.\n- =tex=: surround a string by dollar signs.\n\n## drawback\n\nThere is no interactive workflow anymore with this approach. I like\nthat way of working, because due to script restarts you eliminate all\nerrors in your script, that may occur from state changes from the\npast, that confuses the (fragile) python module system.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/garykl/quick-plot", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "quick-plot", "package_url": "https://pypi.org/project/quick-plot/", "platform": "", "project_url": "https://pypi.org/project/quick-plot/", "project_urls": {"Homepage": "https://github.com/garykl/quick-plot"}, "release_url": "https://pypi.org/project/quick-plot/0.0.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "convenience wrapper around matplotlib", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>quick plot</h1>\n<p>The scripting interface of matplotlib is stateful, therefore\ndangerous. The object oriented interface to the plotting library is\npolluted. This tiny library combines the two interfaces into one\ncontext manager.</p>\n<h2>fundament</h2>\n<p>If this file is somewhere in your =$PYTHONPATH=, the following code\nshould produce a plot.</p>\n<p>\u00b4\u00b4\u00b4python\nimport numpy as np\nimport quick</p>\n<p>with quick.Plot() as qp:\nqp.plot(np.sin(np.linspace(0, 2 * np.pi)))\n\u00b4\u00b4\u00b4</p>\n<p>The =Plot= class is the only available class in the =quick= module. It\nshould be instantiated exactly once. Its instance can do everything\nthe matplotlib axis object can do. For some methods, a default\nconfiguration is supplied. There are some methods, that are not\ncontained in the axis object, for example =trajectory=, =field=, =points=,\n=remove_border=, =remove_xticks=. When a method is called, that is neither\na method of the =axis= object, nor one of the additional methods of this\nmodule, then the module =matplotlib.pyplot= is searched for a function\nwith that name, and, if it exists, it is called. When the context\nmanager is left, the plot shows up.</p>\n<h3>arguments</h3>\n<p>=Plot= takes optional arguments.\n| =filename= | given that, the plot is not shown interactively, but saved as a file, default =None= |\n| =figsize=  | a tuple, representing (width, height), default =(3, 3)=                              |\n| =grid=     | if =True= shows a grid, default =False                                               |\nall other optional arguments are directly passed to =matplotlib.pyplot.subplot=.</p>\n<h2>short form</h2>\n<p>If you just want to quickly see some of your data, and you do not want\nto do any customization of the plotting result, the context manager is\na bit of a boilerplate. So there is the following shorthand for the\nprevious script.</p>\n<p>\u00b4\u00b4\u00b4python\nimport numpy as np\nimport quick</p>\n<p>quick.plot(np.sin(np.linspace(0, 2 * np.pi)))\n\u00b4\u00b4\u00b4</p>\n<p>The context manager is called implicitly.</p>\n<h2>more convenience</h2>\n<p>The quick module additionally provides a few methods that are not\ndirectly related to the =matplotlib= plotting facility, e.g.</p>\n<ul>\n<li>=colored=: takes a list of array and return an iterator with tuple,\nwith the data and a color, that can be past to the color argument of\nplotting methods. Optional argument is the name of a colormap</li>\n<li>=landscape=, =portrait=: they return tuples that can be past to the\n=figsize= argument of =Plot=, internally using the golden ratio.</li>\n<li>=tex=: surround a string by dollar signs.</li>\n</ul>\n<h2>drawback</h2>\n<p>There is no interactive workflow anymore with this approach. I like\nthat way of working, because due to script restarts you eliminate all\nerrors in your script, that may occur from state changes from the\npast, that confuses the (fragile) python module system.</p>\n\n          </div>"}, "last_serial": 6095606, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "c4ef2266cc0637c3439d4071045e3fa7", "sha256": "90c98c3b410adff047ab6187b38e3297a995921dbd40fbc798cb41d949ce2cea"}, "downloads": -1, "filename": "quick_plot-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c4ef2266cc0637c3439d4071045e3fa7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3049, "upload_time": "2019-11-07T20:04:45", "upload_time_iso_8601": "2019-11-07T20:04:45.878027Z", "url": "https://files.pythonhosted.org/packages/e9/da/559d1db86bbf2a091d7925c4e6e3c6325e001ec228f63d1958ab63226af3/quick_plot-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62a16a1f71a73b6ad0d786600f1a8f9a", "sha256": "def98992542887fd0cbb57cf455406c443c104e21b1b9c7966a97f9ee0ef481c"}, "downloads": -1, "filename": "quick-plot-0.0.1.tar.gz", "has_sig": false, "md5_digest": "62a16a1f71a73b6ad0d786600f1a8f9a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2496, "upload_time": "2019-11-07T20:04:48", "upload_time_iso_8601": "2019-11-07T20:04:48.526785Z", "url": "https://files.pythonhosted.org/packages/e0/f2/e21a6a206258228fbab38c659d42c675e904ec50e835ecf3b943cca1e5ac/quick-plot-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "933ee375932d68f6221b11ed9f902acc", "sha256": "05ad2f46f047ebd5002b419660edbf5b3b8587697e79194bdd6443e0ef242798"}, "downloads": -1, "filename": "quick_plot-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "933ee375932d68f6221b11ed9f902acc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3049, "upload_time": "2019-11-07T20:10:43", "upload_time_iso_8601": "2019-11-07T20:10:43.889423Z", "url": "https://files.pythonhosted.org/packages/56/f0/266b916df8e70832106e3f014f6e12a56014faafc8d46539ecdf43e83799/quick_plot-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6a95a1e9a1ad76f374712b108efa6a6", "sha256": "d800f55ba38171212d5ec5a8f15d7384109ac569ebf0ebc732709445da01890f"}, "downloads": -1, "filename": "quick-plot-0.0.2.tar.gz", "has_sig": false, "md5_digest": "e6a95a1e9a1ad76f374712b108efa6a6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2496, "upload_time": "2019-11-07T20:10:45", "upload_time_iso_8601": "2019-11-07T20:10:45.492577Z", "url": "https://files.pythonhosted.org/packages/38/6a/a7f0f68b432ae94db656d33b0b78f332ad62315958a5be04434b1ee6c39f/quick-plot-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "933ee375932d68f6221b11ed9f902acc", "sha256": "05ad2f46f047ebd5002b419660edbf5b3b8587697e79194bdd6443e0ef242798"}, "downloads": -1, "filename": "quick_plot-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "933ee375932d68f6221b11ed9f902acc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3049, "upload_time": "2019-11-07T20:10:43", "upload_time_iso_8601": "2019-11-07T20:10:43.889423Z", "url": "https://files.pythonhosted.org/packages/56/f0/266b916df8e70832106e3f014f6e12a56014faafc8d46539ecdf43e83799/quick_plot-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6a95a1e9a1ad76f374712b108efa6a6", "sha256": "d800f55ba38171212d5ec5a8f15d7384109ac569ebf0ebc732709445da01890f"}, "downloads": -1, "filename": "quick-plot-0.0.2.tar.gz", "has_sig": false, "md5_digest": "e6a95a1e9a1ad76f374712b108efa6a6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2496, "upload_time": "2019-11-07T20:10:45", "upload_time_iso_8601": "2019-11-07T20:10:45.492577Z", "url": "https://files.pythonhosted.org/packages/38/6a/a7f0f68b432ae94db656d33b0b78f332ad62315958a5be04434b1ee6c39f/quick-plot-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:29 2020"}