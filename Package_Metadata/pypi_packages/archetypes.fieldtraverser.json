{"info": {"author": "Jens Klein, Johannes Raggam", "author_email": "dev@bluedynamics.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Zope2", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "=========================\narchetypes.fieldtraverser\n=========================\n\nOverview\n========\n\nThe `archetypes.fieldtraverser` is used to traverse to an Archetypes field and\naccess its storage.\n\nIt patches `Products.Archetypes` so that it uses the fieldtraverser for access to\nfields.\n\n\nUse Cases\n=========\n\n- Access to images, files or other binary data via AnnotationStorage instead of traditional AttributeStorage. archetypes.fieldtraverser eliminates the need to hack `__bobo_traverse__` for this. Advantage: When accessing objects with binary data stored in an AttributeStorage, much binary data chunks are loaded regardless if they are used. When doing this quite often the ZODB is unnecessarily stressed.\n\n\n- You can use archetypes.fieldtraverser for simple Web Services which return just the content of Archetypes fields without the HTML rendered by widgets.\n\n\n- Impress your friends by easily accessing field-contents via URLs.\n\n\nUsage\n=====\n\nIn an URL this traverser can be used to access a fields data by use of\nthe fieldname and the storage variant if needed (such as image sizes):\n\n`obj/++atfield++FIELDNAME`\n\nor\n\n`obj/++atfield++FIELDNAME-STORAGENAME`\n\n\nExample\n=======\n\nTo access an original image from a field named 'photo':\n\n`obj/++atfield++photo`\n\n\nTo access its thumbnail with size named 'thumb':\n\n`obj/++atfield++photo-thumb`\n\n\nDependencies\n============\n\n`Products.Archetypes`\n\n\nInstallation\n============\n\nInstall like any other Plone egg and import the GenericSetup profiles\nin ZMI, portal_setup.\n\n\nKnown Issues\n============\n\nThe ImageWidget, FileWidget and RichWidget are patched to use the\n`++atfield++FIELDNAME` notation for accessing binary contents. This patch is done\nvia updating the fields' `_properties` which is then copied in the concrete\nschematas.\nBut our default patch mechanism does not affect ATContentTypes (and possibly\nother ConentTypes too) because they are loaded by Zope BEFORE the patches are\napplied. This happens also for eggified products in Plone3.2 because\n`Products.ATContentTypes` is being recognised as a Product by Zope/Five because\nof the \"Products\" namespace. Therefore `Products.ATContentTypes` is loaded BEFORE\nany eggs are loaded.\nSo we have to patch the concrete ATContentTypes too. See `patch.py` for more\ninformation.\n\nPlease note that RichWidget has the ability to upload and download files, and\ntherefore we also provide custom fieldtraverser aware widgets. BUT the\nupload/download feature is deactivated by default in the RichWidget templates\nand settings. The RichWidget patching is done just for completeness.\n\nSo, if you include your own Products or eggs in the \"Products\" namespace you'll\nalso have to patch your content types to use our fieldtraverser aware widgets.\nWith this in mind using this product should not be a problem. \n\n\nFor your pleasure\n=================\n\nAn \"Easter egg\" can be found when opening \"++resource++plone.jpg\" in your Plone\nsite. For more information read archetypes/fieldtraverser/tests/plone.jpg.CREDITS\n\n\nCopyright\n=========\n\nCopyright (c) 2008: BlueDynamics Alliance, Austria\n\nAlan Farmer (c) 1997 from Bearos Records for plone.jpg\n\n\nCredits\n=======\n\n- Jens Klein <jens@bluedynamics.com>\n\n- Johannes Raggam <johannes@bluedynamics.com>\n\n- Robert Niederreiter <rnix@squarewave.at>", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://svn.plone.org/svn/archetypes/archetypes.fieldtraverser", "keywords": "archetypes fieldtraverser", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "archetypes.fieldtraverser", "package_url": "https://pypi.org/project/archetypes.fieldtraverser/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/archetypes.fieldtraverser/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://svn.plone.org/svn/archetypes/archetypes.fieldtraverser"}, "release_url": "https://pypi.org/project/archetypes.fieldtraverser/0.4.4/", "requires_dist": null, "requires_python": null, "summary": "Archetypes fieldtraverser", "version": "0.4.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p>The <cite>archetypes.fieldtraverser</cite> is used to traverse to an Archetypes field and\naccess its storage.</p>\n<p>It patches <cite>Products.Archetypes</cite> so that it uses the fieldtraverser for access to\nfields.</p>\n</div>\n<div id=\"use-cases\">\n<h2>Use Cases</h2>\n<ul>\n<li>Access to images, files or other binary data via AnnotationStorage instead of traditional AttributeStorage. archetypes.fieldtraverser eliminates the need to hack <cite>__bobo_traverse__</cite> for this. Advantage: When accessing objects with binary data stored in an AttributeStorage, much binary data chunks are loaded regardless if they are used. When doing this quite often the ZODB is unnecessarily stressed.</li>\n<li>You can use archetypes.fieldtraverser for simple Web Services which return just the content of Archetypes fields without the HTML rendered by widgets.</li>\n<li>Impress your friends by easily accessing field-contents via URLs.</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>In an URL this traverser can be used to access a fields data by use of\nthe fieldname and the storage variant if needed (such as image sizes):</p>\n<p><cite>obj/++atfield++FIELDNAME</cite></p>\n<p>or</p>\n<p><cite>obj/++atfield++FIELDNAME-STORAGENAME</cite></p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>To access an original image from a field named \u2018photo\u2019:</p>\n<p><cite>obj/++atfield++photo</cite></p>\n<p>To access its thumbnail with size named \u2018thumb\u2019:</p>\n<p><cite>obj/++atfield++photo-thumb</cite></p>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p><cite>Products.Archetypes</cite></p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install like any other Plone egg and import the GenericSetup profiles\nin ZMI, portal_setup.</p>\n</div>\n<div id=\"known-issues\">\n<h2>Known Issues</h2>\n<p>The ImageWidget, FileWidget and RichWidget are patched to use the\n<cite>++atfield++FIELDNAME</cite> notation for accessing binary contents. This patch is done\nvia updating the fields\u2019 <cite>_properties</cite> which is then copied in the concrete\nschematas.\nBut our default patch mechanism does not affect ATContentTypes (and possibly\nother ConentTypes too) because they are loaded by Zope BEFORE the patches are\napplied. This happens also for eggified products in Plone3.2 because\n<cite>Products.ATContentTypes</cite> is being recognised as a Product by Zope/Five because\nof the \u201cProducts\u201d namespace. Therefore <cite>Products.ATContentTypes</cite> is loaded BEFORE\nany eggs are loaded.\nSo we have to patch the concrete ATContentTypes too. See <cite>patch.py</cite> for more\ninformation.</p>\n<p>Please note that RichWidget has the ability to upload and download files, and\ntherefore we also provide custom fieldtraverser aware widgets. BUT the\nupload/download feature is deactivated by default in the RichWidget templates\nand settings. The RichWidget patching is done just for completeness.</p>\n<p>So, if you include your own Products or eggs in the \u201cProducts\u201d namespace you\u2019ll\nalso have to patch your content types to use our fieldtraverser aware widgets.\nWith this in mind using this product should not be a problem.</p>\n</div>\n<div id=\"for-your-pleasure\">\n<h2>For your pleasure</h2>\n<p>An \u201cEaster egg\u201d can be found when opening \u201c++resource++plone.jpg\u201d in your Plone\nsite. For more information read archetypes/fieldtraverser/tests/plone.jpg.CREDITS</p>\n</div>\n<div id=\"copyright\">\n<h2>Copyright</h2>\n<p>Copyright (c) 2008: BlueDynamics Alliance, Austria</p>\n<p>Alan Farmer (c) 1997 from Bearos Records for plone.jpg</p>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<ul>\n<li>Jens Klein &lt;<a href=\"mailto:jens%40bluedynamics.com\">jens<span>@</span>bluedynamics<span>.</span>com</a>&gt;</li>\n<li>Johannes Raggam &lt;<a href=\"mailto:johannes%40bluedynamics.com\">johannes<span>@</span>bluedynamics<span>.</span>com</a>&gt;</li>\n<li>Robert Niederreiter &lt;<a href=\"mailto:rnix%40squarewave.at\">rnix<span>@</span>squarewave<span>.</span>at</a>&gt;</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 786381, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "f6c7fe2f19033cb90a590750c6027209", "sha256": "b1203c8063efc1933ca8b2773d2648227ec2aa08336c2d893d705bfa57855f9e"}, "downloads": -1, "filename": "archetypes.fieldtraverser-0.2.tar.gz", "has_sig": false, "md5_digest": "f6c7fe2f19033cb90a590750c6027209", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5573, "upload_time": "2008-09-25T11:22:31", "upload_time_iso_8601": "2008-09-25T11:22:31Z", "url": "https://files.pythonhosted.org/packages/f6/ff/a7f2b707043f03d3cadf3ceabe5b600801c7cb8a248ce09e1aa8a40e0a70/archetypes.fieldtraverser-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "aa1ce88e3bda62a69c4f385e08b280e9", "sha256": "087d271d13edc3b274d0b63157f48f37c7a1d00eb95924f0ba9cd7295a286732"}, "downloads": -1, "filename": "archetypes.fieldtraverser-0.2.1.tar.gz", "has_sig": false, "md5_digest": "aa1ce88e3bda62a69c4f385e08b280e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5581, "upload_time": "2008-09-25T11:44:05", "upload_time_iso_8601": "2008-09-25T11:44:05Z", "url": "https://files.pythonhosted.org/packages/0e/5e/4ad7fb2b37952157b0489f12d0fb2a765cca91a47a3b9caefe268c777452/archetypes.fieldtraverser-0.2.1.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "84ca777961d505841eb9544600799843", "sha256": "7be7baa85116f93d36705c7a79080e2daf7fd8814ac6c5acb68b88ad9e0fc553"}, "downloads": -1, "filename": "archetypes.fieldtraverser-0.4.4.tar.gz", "has_sig": false, "md5_digest": "84ca777961d505841eb9544600799843", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37235, "upload_time": "2008-12-09T16:59:58", "upload_time_iso_8601": "2008-12-09T16:59:58Z", "url": "https://files.pythonhosted.org/packages/86/ab/35796a75108fbc0e2a40e362b267d62aea664569f20d7cd038509155a07e/archetypes.fieldtraverser-0.4.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "84ca777961d505841eb9544600799843", "sha256": "7be7baa85116f93d36705c7a79080e2daf7fd8814ac6c5acb68b88ad9e0fc553"}, "downloads": -1, "filename": "archetypes.fieldtraverser-0.4.4.tar.gz", "has_sig": false, "md5_digest": "84ca777961d505841eb9544600799843", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37235, "upload_time": "2008-12-09T16:59:58", "upload_time_iso_8601": "2008-12-09T16:59:58Z", "url": "https://files.pythonhosted.org/packages/86/ab/35796a75108fbc0e2a40e362b267d62aea664569f20d7cd038509155a07e/archetypes.fieldtraverser-0.4.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:24 2020"}