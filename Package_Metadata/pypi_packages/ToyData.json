{"info": {"author": "Xiangzhuang Shen", "author_email": "datahonor@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "## ToyData: Learning Data Structures with toy code\n\n![](https://github.com/shenxiangzhuang/ToyData/raw/master/toydata.png)\n\n\nThere are some simple implementations(in Python3.7.6) of classic data structrues.\n\nI am trying to do this with an easy-to-read style.\n\nAnd, I add some extra functions beyond the ADTs, which are used mostly for printing and testing purposes.\n\n\n### Books\n\n[*Data Structures and Algorithms in Python, Michael T. Goodrich*](https://www.amazon.com/Structures-Algorithms-Python-Michael-Goodrich/dp/1118290275/ref=sr_1_4?qid=1580122939&refinements=p_27%3AMichael+T.+Goodrich&s=books&sr=1-4&text=Michael+T.+Goodrich) \nis the **main reference** of the implementations.\n\nNote that there is a book named [*Data Structures and Algorithms in C++, Michael T. Goodrich*](https://www.amazon.com/Data-Structures-Algorithms-Michael-Goodrich/dp/0470383275/ref=sr_1_2?qid=1580122957&refinements=p_27%3AMichael+T.+Goodrich&s=books&sr=1-2&text=Michael+T.+Goodrich) which use C++ to implement these data structures.\n\nAnd [*Data Structures Using C, Reema Thareja*](https://www.amazon.in/Data-Structures-Using-Reema-Thareja/dp/0198099304/ref=sr_1_1?qid=1580122713&refinements=p_27%3AReema+Thareja&s=books&sr=1-1) is also a great book that implement these data structures using C.\n\n\n\n### Documentation\n[ToyData](http://datahonor.com/ToyData/)\n\n\n### API\n\n- [x] Stack: ArrayStack, LinkedStack\n- [x] Queue: ArrayQueue, ArrayDeque\n- [x] Deque: LinkedDeque\n- [x] Positional List: PositionalList\n- [x] Prority Queues: UnsortedPriorityQueue, SortedPriorityQueue, HeapPriorityQueue\n- [x] LinkedLists: Singlellist, Doublellist\n- [x] Hash Tables: ChainHashMap, ProbeHashMap, SortedTableMap\n- [x] Trees: LinkedBinaryTree\n- [x] Search Trees: AVLTreeMap, SplayTreeMap, RedBlackTreeMap\n- [x] Graph: Adjacency Map, DFS/BFS, Floyd-Warshall \n\n\n\n### Courses\nThere some courses that use the book(*Data Structures and Algorithms in Python*) as textbook.(Tell me please, if you know other courses use it:-)\n\n1. [\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5-Python (2019\u79cb\u5b63)\uff0c\u6b66\u6c49\u5927\u5b66](http://xpzhang.me/)\n    >Great lecture notes.\n\n\n### References:\n\n1. [Jenny's lectures CS/IT NET&JRF](https://www.youtube.com/channel/UCM-yUTYGmrNvKOCcAl21g3w/playlists)\n    >Jenny makes everything clear\uff01\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ToyData", "package_url": "https://pypi.org/project/ToyData/", "platform": "", "project_url": "https://pypi.org/project/ToyData/", "project_urls": null, "release_url": "https://pypi.org/project/ToyData/1.0/", "requires_dist": null, "requires_python": "", "summary": "Data Structures in Python.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>ToyData: Learning Data Structures with toy code</h2>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3e4680046ea415534053c2811d5accf980d63e52/68747470733a2f2f6769746875622e636f6d2f7368656e7869616e677a6875616e672f546f79446174612f7261772f6d61737465722f746f79646174612e706e67\"></p>\n<p>There are some simple implementations(in Python3.7.6) of classic data structrues.</p>\n<p>I am trying to do this with an easy-to-read style.</p>\n<p>And, I add some extra functions beyond the ADTs, which are used mostly for printing and testing purposes.</p>\n<h3>Books</h3>\n<p><a href=\"https://www.amazon.com/Structures-Algorithms-Python-Michael-Goodrich/dp/1118290275/ref=sr_1_4?qid=1580122939&amp;refinements=p_27%3AMichael+T.+Goodrich&amp;s=books&amp;sr=1-4&amp;text=Michael+T.+Goodrich\" rel=\"nofollow\"><em>Data Structures and Algorithms in Python, Michael T. Goodrich</em></a>\nis the <strong>main reference</strong> of the implementations.</p>\n<p>Note that there is a book named <a href=\"https://www.amazon.com/Data-Structures-Algorithms-Michael-Goodrich/dp/0470383275/ref=sr_1_2?qid=1580122957&amp;refinements=p_27%3AMichael+T.+Goodrich&amp;s=books&amp;sr=1-2&amp;text=Michael+T.+Goodrich\" rel=\"nofollow\"><em>Data Structures and Algorithms in C++, Michael T. Goodrich</em></a> which use C++ to implement these data structures.</p>\n<p>And <a href=\"https://www.amazon.in/Data-Structures-Using-Reema-Thareja/dp/0198099304/ref=sr_1_1?qid=1580122713&amp;refinements=p_27%3AReema+Thareja&amp;s=books&amp;sr=1-1\" rel=\"nofollow\"><em>Data Structures Using C, Reema Thareja</em></a> is also a great book that implement these data structures using C.</p>\n<h3>Documentation</h3>\n<p><a href=\"http://datahonor.com/ToyData/\" rel=\"nofollow\">ToyData</a></p>\n<h3>API</h3>\n<ul>\n<li>[x] Stack: ArrayStack, LinkedStack</li>\n<li>[x] Queue: ArrayQueue, ArrayDeque</li>\n<li>[x] Deque: LinkedDeque</li>\n<li>[x] Positional List: PositionalList</li>\n<li>[x] Prority Queues: UnsortedPriorityQueue, SortedPriorityQueue, HeapPriorityQueue</li>\n<li>[x] LinkedLists: Singlellist, Doublellist</li>\n<li>[x] Hash Tables: ChainHashMap, ProbeHashMap, SortedTableMap</li>\n<li>[x] Trees: LinkedBinaryTree</li>\n<li>[x] Search Trees: AVLTreeMap, SplayTreeMap, RedBlackTreeMap</li>\n<li>[x] Graph: Adjacency Map, DFS/BFS, Floyd-Warshall</li>\n</ul>\n<h3>Courses</h3>\n<p>There some courses that use the book(<em>Data Structures and Algorithms in Python</em>) as textbook.(Tell me please, if you know other courses use it:-)</p>\n<ol>\n<li><a href=\"http://xpzhang.me/\" rel=\"nofollow\">\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5-Python (2019\u79cb\u5b63)\uff0c\u6b66\u6c49\u5927\u5b66</a>\n<blockquote>\n<p>Great lecture notes.</p>\n</blockquote>\n</li>\n</ol>\n<h3>References:</h3>\n<ol>\n<li><a href=\"https://www.youtube.com/channel/UCM-yUTYGmrNvKOCcAl21g3w/playlists\" rel=\"nofollow\">Jenny's lectures CS/IT NET&amp;JRF</a>\n<blockquote>\n<p>Jenny makes everything clear\uff01</p>\n</blockquote>\n</li>\n</ol>\n\n          </div>"}, "last_serial": 6537339, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "c880a76d411659514e26b8ec0b8d0cfc", "sha256": "711bafb218a07d60f41784d4109d76d5f9af52ecf8b2109fa60f97fbe51e5157"}, "downloads": -1, "filename": "ToyData-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c880a76d411659514e26b8ec0b8d0cfc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28993, "upload_time": "2020-01-29T11:18:23", "upload_time_iso_8601": "2020-01-29T11:18:23.299770Z", "url": "https://files.pythonhosted.org/packages/1e/3b/fe5d90b642ac99ca0e0e981aa1f272831d9e71265407315ff72ccab8429e/ToyData-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7c016e63ab1a4de69755c3a7724b4eb", "sha256": "e89495c37ff0a50f29b4bfc8a41d279d45ff62aee1c6b84e0e4e934d5fadb8c2"}, "downloads": -1, "filename": "ToyData-1.0.tar.gz", "has_sig": false, "md5_digest": "e7c016e63ab1a4de69755c3a7724b4eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22622, "upload_time": "2020-01-29T11:18:26", "upload_time_iso_8601": "2020-01-29T11:18:26.114082Z", "url": "https://files.pythonhosted.org/packages/cc/6a/ca4cd8c0738a809024cf6d433ff226c88a86ff90ff27735d0fb10271208a/ToyData-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c880a76d411659514e26b8ec0b8d0cfc", "sha256": "711bafb218a07d60f41784d4109d76d5f9af52ecf8b2109fa60f97fbe51e5157"}, "downloads": -1, "filename": "ToyData-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c880a76d411659514e26b8ec0b8d0cfc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28993, "upload_time": "2020-01-29T11:18:23", "upload_time_iso_8601": "2020-01-29T11:18:23.299770Z", "url": "https://files.pythonhosted.org/packages/1e/3b/fe5d90b642ac99ca0e0e981aa1f272831d9e71265407315ff72ccab8429e/ToyData-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7c016e63ab1a4de69755c3a7724b4eb", "sha256": "e89495c37ff0a50f29b4bfc8a41d279d45ff62aee1c6b84e0e4e934d5fadb8c2"}, "downloads": -1, "filename": "ToyData-1.0.tar.gz", "has_sig": false, "md5_digest": "e7c016e63ab1a4de69755c3a7724b4eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22622, "upload_time": "2020-01-29T11:18:26", "upload_time_iso_8601": "2020-01-29T11:18:26.114082Z", "url": "https://files.pythonhosted.org/packages/cc/6a/ca4cd8c0738a809024cf6d433ff226c88a86ff90ff27735d0fb10271208a/ToyData-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:49:17 2020"}