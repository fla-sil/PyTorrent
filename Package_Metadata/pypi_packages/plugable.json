{"info": {"author": "Jacob Neil Taylor", "author_email": "me@jacobtaylor.id.au", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Plugable: A Python Plugin Framework\n\n## Badges:\n - **Build:** [![Build Status](https://travis-ci.com/jacobneiltaylor/plugable.svg?branch=master)](https://travis-ci.com/jacobneiltaylor/plugable)\n - **Coverage:** [![Coverage Status](https://coveralls.io/repos/github/jacobneiltaylor/plugable/badge.svg?branch=master)](https://coveralls.io/github/jacobneiltaylor/plugable?branch=master)\n\n\nThis package exposes a framework for writing extensible applications.\n\nSpecifically, it allows consumers to mark an abstract class as \"Plugable\", using standard inheritance semantics and ABC decorators:\n\n```python3\nfrom abc import abstractmethod\nfrom plugable import Plugable\n\nclass AbstractInterface(Plugable):\n    @abstractmethod\n    def example(self):\n        pass\n```\n\nFollowing this, you can create subclasses for differing implementations, and register them with the `AbstractInterface` registry, like so:\n\n```python3\nclass ExampleOne(AbstractInterface, register=\"one\"): # Integrated registration\n    def example(self):\n        print(\"You ran ExampleOne!\")\n\nclass ExampleTwo(AbstractInterface):\n    def example(self):\n        print(\"You ran ExampleTwo!\")\n\nAbstractInterface.registry.register(\"two\", ExampleTwo) # Explicit registration\n```\n\nFinally, you can access and consume the registered implementations, like so:\n\n```python3\nAbstractInterface.get(\"one\").example()  # You ran ExampleOne!\nAbstractInterface.get(\"two\").example()  # You ran ExampleTwo!\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jacobneiltaylor/plugable", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "plugable", "package_url": "https://pypi.org/project/plugable/", "platform": "", "project_url": "https://pypi.org/project/plugable/", "project_urls": {"Homepage": "https://github.com/jacobneiltaylor/plugable"}, "release_url": "https://pypi.org/project/plugable/0.1.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A framework for writing extensible Python components", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Plugable: A Python Plugin Framework</h1>\n<h2>Badges:</h2>\n<ul>\n<li><strong>Build:</strong> <a href=\"https://travis-ci.com/jacobneiltaylor/plugable\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b6f9d2d119cf3bb959762eed5fb4b88329608df9/68747470733a2f2f7472617669732d63692e636f6d2f6a61636f626e65696c7461796c6f722f706c756761626c652e7376673f6272616e63683d6d6173746572\"></a></li>\n<li><strong>Coverage:</strong> <a href=\"https://coveralls.io/github/jacobneiltaylor/plugable?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/51d936a377c8b1b86426e0212b2cd1b82344a466/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6a61636f626e65696c7461796c6f722f706c756761626c652f62616467652e7376673f6272616e63683d6d6173746572\"></a></li>\n</ul>\n<p>This package exposes a framework for writing extensible applications.</p>\n<p>Specifically, it allows consumers to mark an abstract class as \"Plugable\", using standard inheritance semantics and ABC decorators:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">abc</span> <span class=\"kn\">import</span> <span class=\"n\">abstractmethod</span>\n<span class=\"kn\">from</span> <span class=\"nn\">plugable</span> <span class=\"kn\">import</span> <span class=\"n\">Plugable</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">AbstractInterface</span><span class=\"p\">(</span><span class=\"n\">Plugable</span><span class=\"p\">):</span>\n    <span class=\"nd\">@abstractmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n</pre>\n<p>Following this, you can create subclasses for differing implementations, and register them with the <code>AbstractInterface</code> registry, like so:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">ExampleOne</span><span class=\"p\">(</span><span class=\"n\">AbstractInterface</span><span class=\"p\">,</span> <span class=\"n\">register</span><span class=\"o\">=</span><span class=\"s2\">\"one\"</span><span class=\"p\">):</span> <span class=\"c1\"># Integrated registration</span>\n    <span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"You ran ExampleOne!\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleTwo</span><span class=\"p\">(</span><span class=\"n\">AbstractInterface</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">example</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"You ran ExampleTwo!\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">AbstractInterface</span><span class=\"o\">.</span><span class=\"n\">registry</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"s2\">\"two\"</span><span class=\"p\">,</span> <span class=\"n\">ExampleTwo</span><span class=\"p\">)</span> <span class=\"c1\"># Explicit registration</span>\n</pre>\n<p>Finally, you can access and consume the registered implementations, like so:</p>\n<pre><span class=\"n\">AbstractInterface</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"one\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">example</span><span class=\"p\">()</span>  <span class=\"c1\"># You ran ExampleOne!</span>\n<span class=\"n\">AbstractInterface</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"two\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">example</span><span class=\"p\">()</span>  <span class=\"c1\"># You ran ExampleTwo!</span>\n</pre>\n\n          </div>"}, "last_serial": 6788344, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b323d01e4a03816ec181536f3c282483", "sha256": "4bf9789b905502606dc3e175dc29a140c8b5a0b8c15f5aa2edfeacd2eee031a0"}, "downloads": -1, "filename": "plugable-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b323d01e4a03816ec181536f3c282483", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4121, "upload_time": "2020-03-10T04:31:12", "upload_time_iso_8601": "2020-03-10T04:31:12.414008Z", "url": "https://files.pythonhosted.org/packages/c0/71/47df9510efb2ecbbab3e1f965299ab1739cf88b06c0b462c1b251a5764e5/plugable-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "95f2e5c41796a06b14fd194d623ce235", "sha256": "cf88cea8ffb2a9a2b192546e3f5d1ea569a487cdf066b3328aaa7d7e5710873c"}, "downloads": -1, "filename": "plugable-0.1.0.tar.gz", "has_sig": false, "md5_digest": "95f2e5c41796a06b14fd194d623ce235", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3663, "upload_time": "2020-03-10T04:20:18", "upload_time_iso_8601": "2020-03-10T04:20:18.126040Z", "url": "https://files.pythonhosted.org/packages/91/ab/ffc82c70adc3ab1e21eb7594a3606054109f5082c923c8f69f03bbde3b3d/plugable-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4ab7c552983eb0201258345edf473845", "sha256": "7ca313081bff485b2c6be5e1c92684d4999059d540161e465aadbe9e03a88e42"}, "downloads": -1, "filename": "plugable-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4ab7c552983eb0201258345edf473845", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4104, "upload_time": "2020-03-10T22:31:35", "upload_time_iso_8601": "2020-03-10T22:31:35.589851Z", "url": "https://files.pythonhosted.org/packages/de/ba/d811ee7a785952e0f4cadfab8589ca2983e85b3f5fb28e2b804b5800864a/plugable-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca84351ff8439a01ce89b1753df616af", "sha256": "4b3aabbfb6c8127b7f2ef95d86202d518e3798871a323c4ba22ed27855518c9c"}, "downloads": -1, "filename": "plugable-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ca84351ff8439a01ce89b1753df616af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3657, "upload_time": "2020-03-10T22:31:36", "upload_time_iso_8601": "2020-03-10T22:31:36.620593Z", "url": "https://files.pythonhosted.org/packages/17/3a/d814855dc64b4195f14ae8437370079a9b3677136328a8083517b8f41027/plugable-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4ab7c552983eb0201258345edf473845", "sha256": "7ca313081bff485b2c6be5e1c92684d4999059d540161e465aadbe9e03a88e42"}, "downloads": -1, "filename": "plugable-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4ab7c552983eb0201258345edf473845", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4104, "upload_time": "2020-03-10T22:31:35", "upload_time_iso_8601": "2020-03-10T22:31:35.589851Z", "url": "https://files.pythonhosted.org/packages/de/ba/d811ee7a785952e0f4cadfab8589ca2983e85b3f5fb28e2b804b5800864a/plugable-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca84351ff8439a01ce89b1753df616af", "sha256": "4b3aabbfb6c8127b7f2ef95d86202d518e3798871a323c4ba22ed27855518c9c"}, "downloads": -1, "filename": "plugable-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ca84351ff8439a01ce89b1753df616af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3657, "upload_time": "2020-03-10T22:31:36", "upload_time_iso_8601": "2020-03-10T22:31:36.620593Z", "url": "https://files.pythonhosted.org/packages/17/3a/d814855dc64b4195f14ae8437370079a9b3677136328a8083517b8f41027/plugable-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:52:29 2020"}