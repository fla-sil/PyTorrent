{"info": {"author": "vfdev-5", "author_email": "vfdev.5@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "\n# ImageDatasetViz \n[![Build Status](https://travis-ci.org/vfdev-5/ImageDatasetViz.svg?branch=master)](https://travis-ci.org/vfdev-5/ImageDatasetViz)\n[![Coverage Status](https://coveralls.io/repos/github/vfdev-5/ImageDatasetViz/badge.svg?branch=master)](https://coveralls.io/github/vfdev-5/ImageDatasetViz?branch=master)\n\nObserve dataset of images and targets in few shots\n\n![VEDAI example](examples/vedai_example.png)\n\n## Descriptions\n\nIdea is to create tools to store images, targets from a dataset as a few large images to observe the dataset \nin few shots.\n\n\n## Installation \n\n#### with pip\n\n```bash\n pip install image-dataset-viz \n```\n\n#### from sources\n```bash\npython setup.py install\n```\nor \n```bash\npip install git+https://github.com/vfdev-5/ImageDatasetViz.git\n```\n\n## Usage\n\n### Render a single datapoint\n\nFirst, we can just take a look on a single data point rendering. Let's assume that we\nhave `img` as, for example, `PIL.Image` and `target` as acceptable target type (`str` or list of points or \n`PIL.Image` mask, etc), thus we can generate a single image with target.\n\n```python\nfrom image_dataset_viz import render_datapoint\n\n# if target is a simple label\nres = render_datapoint(img, \"test label\", text_color=(0, 255, 0), text_size=10)\nplt.imshow(res)\n\n# if target is a mask image (PIL.Image)\nres = render_datapoint(img, target, blend_alpha=0.5)\nplt.imshow(res)\n\n# if target is a bounding box, e.g. np.array([[10, 10], [55, 10], [55, 77], [10, 77]])\nres = render_datapoint(img, target, geom_color=(255, 0, 0))\nplt.imshow(res)\n```\n\n#### Example output on Leaf Segmentation dataset from CVPPP2017\n\n![image with mask](examples/image_mask.png)  ![image with label](examples/image_label.png)  ![image with bbox label](examples/image_bbox_label.png)\n\n### Export complete dataset\nFor example, we have a dataset of image files and annotations files (polygons with labels):\n```python\nimg_files = [\n    '/path/to/image_1.ext',\n    '/path/to/image_2.ext',\n    ...\n    '/path/to/image_1000.ext',\n]\ntarget_files = [\n    '/path/to/target_1.ext2',\n    '/path/to/target_2.ext2',\n    ...\n    '/path/to/target_1000.ext2',\n]\n```\nWe can produce a single image composed of 20x50 small samples with targets to better visualize the whole dataset.\nLet's assume that we do need a particular processing to open the images in RGB 8bits format:\n```python\nfrom PIL import Image\n\ndef read_img_fn(img_filepath):\n    return Image.open(img_filepath).convert('RGB')\n```\nand let's say the annotations are just lines with points and a label, e.g. `12 23 34 45 56 67 car`\n```python\nfrom pathlib import Path\nimport numpy as np\n\ndef read_target_fn(target_filepath):\n    with Path(target_filepath).open('r') as handle:\n        points_labels = []\n        while True:\n            line = handle.readline()\n            if len(line) == 0:\n                break\n            splt = line[:-1].split(' ')  # Split into points and labels\n            label = splt[-1]\n            points = np.array(splt[:-1]).reshape(-1, 2)\n            points_labels.append((points, label))\n    return points_labels\n```\nNow we can export the dataset\n```python\nde = DatasetExporter(read_img_fn=read_img_fn, read_target_fn=read_target_fn,\n                     img_id_fn=lambda fp: Path(fp).stem, n_cols=20)\nde.export(img_files, target_files, output_folder=\"dataset_viz\")\n```\nand thus we should obtain a single png image with composed of 20x50 small samples.\n\n\n## Examples\n\n- [CIFAR10](examples/example_CIFAR10.ipynb)\n- [VEDAI](examples/example_VEDAI.ipynb)\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vfdev-5/ImageDatasetViz", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "image-dataset-viz", "package_url": "https://pypi.org/project/image-dataset-viz/", "platform": "", "project_url": "https://pypi.org/project/image-dataset-viz/", "project_urls": {"Homepage": "https://github.com/vfdev-5/ImageDatasetViz"}, "release_url": "https://pypi.org/project/image-dataset-viz/0.2.2/", "requires_dist": ["numpy", "Pillow", "tqdm", "pathlib2; python_version < \"3\""], "requires_python": "", "summary": "Observe dataset of images and targets in few shots", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <br># ImageDatasetViz <br>[![Build Status](https://travis-ci.org/vfdev-5/ImageDatasetViz.svg?branch=master)](https://travis-ci.org/vfdev-5/ImageDatasetViz)<br>[![Coverage Status](https://coveralls.io/repos/github/vfdev-5/ImageDatasetViz/badge.svg?branch=master)](https://coveralls.io/github/vfdev-5/ImageDatasetViz?branch=master)<br><br>Observe dataset of images and targets in few shots<br><br>![VEDAI example](examples/vedai_example.png)<br><br>## Descriptions<br><br>Idea is to create tools to store images, targets from a dataset as a few large images to observe the dataset <br>in few shots.<br><br><br>## Installation <br><br>#### with pip<br><br>```bash<br> pip install image-dataset-viz <br>```<br><br>#### from sources<br>```bash<br>python setup.py install<br>```<br>or <br>```bash<br>pip install git+https://github.com/vfdev-5/ImageDatasetViz.git<br>```<br><br>## Usage<br><br>### Render a single datapoint<br><br>First, we can just take a look on a single data point rendering. Let's assume that we<br>have `img` as, for example, `PIL.Image` and `target` as acceptable target type (`str` or list of points or <br>`PIL.Image` mask, etc), thus we can generate a single image with target.<br><br>```python<br>from image_dataset_viz import render_datapoint<br><br># if target is a simple label<br>res = render_datapoint(img, \"test label\", text_color=(0, 255, 0), text_size=10)<br>plt.imshow(res)<br><br># if target is a mask image (PIL.Image)<br>res = render_datapoint(img, target, blend_alpha=0.5)<br>plt.imshow(res)<br><br># if target is a bounding box, e.g. np.array([[10, 10], [55, 10], [55, 77], [10, 77]])<br>res = render_datapoint(img, target, geom_color=(255, 0, 0))<br>plt.imshow(res)<br>```<br><br>#### Example output on Leaf Segmentation dataset from CVPPP2017<br><br>![image with mask](examples/image_mask.png)  ![image with label](examples/image_label.png)  ![image with bbox label](examples/image_bbox_label.png)<br><br>### Export complete dataset<br>For example, we have a dataset of image files and annotations files (polygons with labels):<br>```python<br>img_files = [<br>    '/path/to/image_1.ext',<br>    '/path/to/image_2.ext',<br>    ...<br>    '/path/to/image_1000.ext',<br>]<br>target_files = [<br>    '/path/to/target_1.ext2',<br>    '/path/to/target_2.ext2',<br>    ...<br>    '/path/to/target_1000.ext2',<br>]<br>```<br>We can produce a single image composed of 20x50 small samples with targets to better visualize the whole dataset.<br>Let's assume that we do need a particular processing to open the images in RGB 8bits format:<br>```python<br>from PIL import Image<br><br>def read_img_fn(img_filepath):<br>    return Image.open(img_filepath).convert('RGB')<br>```<br>and let's say the annotations are just lines with points and a label, e.g. `12 23 34 45 56 67 car`<br>```python<br>from pathlib import Path<br>import numpy as np<br><br>def read_target_fn(target_filepath):<br>    with Path(target_filepath).open('r') as handle:<br>        points_labels = []<br>        while True:<br>            line = handle.readline()<br>            if len(line) == 0:<br>                break<br>            splt = line[:-1].split(' ')  # Split into points and labels<br>            label = splt[-1]<br>            points = np.array(splt[:-1]).reshape(-1, 2)<br>            points_labels.append((points, label))<br>    return points_labels<br>```<br>Now we can export the dataset<br>```python<br>de = DatasetExporter(read_img_fn=read_img_fn, read_target_fn=read_target_fn,<br>                     img_id_fn=lambda fp: Path(fp).stem, n_cols=20)<br>de.export(img_files, target_files, output_folder=\"dataset_viz\")<br>```<br>and thus we should obtain a single png image with composed of 20x50 small samples.<br><br><br>## Examples<br><br>- [CIFAR10](examples/example_CIFAR10.ipynb)<br>- [VEDAI](examples/example_VEDAI.ipynb)<br><br><br>\n          </div>"}, "last_serial": 4200136, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "2acbe57b7e8317d5e9e1b354da5bcd24", "sha256": "df47c734420de9ce1e8a95b6e6d2f1a6f565f6c0d84db301ee2b32b204566b49"}, "downloads": -1, "filename": "image_dataset_viz-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2acbe57b7e8317d5e9e1b354da5bcd24", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8612, "upload_time": "2018-06-02T10:06:06", "upload_time_iso_8601": "2018-06-02T10:06:06.780871Z", "url": "https://files.pythonhosted.org/packages/f3/e5/c87dd62ce0498bd265b02109346628da76b1f1920d935b20e6939d283e14/image_dataset_viz-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "90bc787a8618411f86fc1a61c19c588b", "sha256": "95826cbf5326c9dbb106be4974e7f3f8fac0b9acbd9c3ef8906809992c4b61bf"}, "downloads": -1, "filename": "image_dataset_viz-0.2.tar.gz", "has_sig": false, "md5_digest": "90bc787a8618411f86fc1a61c19c588b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8711, "upload_time": "2018-06-02T10:06:08", "upload_time_iso_8601": "2018-06-02T10:06:08.274928Z", "url": "https://files.pythonhosted.org/packages/25/83/05b6d87fb1c63110a18fe2fa8e84b1aadd40c1804cf32b53891b820b7523/image_dataset_viz-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "c5881b2a37c007baa66c7a3670152f03", "sha256": "17da991f1e9cd432486e0557dd1c945189ff75cdfbcf3cc6e2c24c154539b7bc"}, "downloads": -1, "filename": "image_dataset_viz-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c5881b2a37c007baa66c7a3670152f03", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8655, "upload_time": "2018-06-02T10:14:34", "upload_time_iso_8601": "2018-06-02T10:14:34.686577Z", "url": "https://files.pythonhosted.org/packages/30/2e/7123d35475c52399fae512cbdad263dccbacfe8427e2c664ca6cacd46abc/image_dataset_viz-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5182e915e9c9641e1a6c99c030b66c44", "sha256": "98a1412718675e8ea1d5951f885489d2e3cf685a6f7b1279187a87797ecf005b"}, "downloads": -1, "filename": "image_dataset_viz-0.2.1.tar.gz", "has_sig": false, "md5_digest": "5182e915e9c9641e1a6c99c030b66c44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8781, "upload_time": "2018-06-02T10:14:36", "upload_time_iso_8601": "2018-06-02T10:14:36.712439Z", "url": "https://files.pythonhosted.org/packages/f6/29/ac8f1ecb48a3c9f49895476c23c631524191517aa9d56c8e9a697691d69d/image_dataset_viz-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "af70cb9c97f33a796eb5ffe52e50b8ce", "sha256": "dcd879c48f7c916456898a81e604dec981967f4bba7e1dad5c35de07bdea826c"}, "downloads": -1, "filename": "image_dataset_viz-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "af70cb9c97f33a796eb5ffe52e50b8ce", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 387951, "upload_time": "2018-08-23T14:09:34", "upload_time_iso_8601": "2018-08-23T14:09:34.756723Z", "url": "https://files.pythonhosted.org/packages/05/fc/5b63dd6101991ff2a9f8e2df5cc27f5696c9e36d7c4bd22d0ed6c65fa05a/image_dataset_viz-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77f4db7763100cb9f1d5485b767ba826", "sha256": "04731971bea33b584db1566f703f6d9a3bb808e63cde5eec84c355e4e136cd1e"}, "downloads": -1, "filename": "image_dataset_viz-0.2.2-py3.5.egg", "has_sig": false, "md5_digest": "77f4db7763100cb9f1d5485b767ba826", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 396874, "upload_time": "2018-08-23T14:09:36", "upload_time_iso_8601": "2018-08-23T14:09:36.264352Z", "url": "https://files.pythonhosted.org/packages/1e/31/fa9a85638e770f1ced78e25fb8eabe7876881a0a627ca24d61a1615a6f68/image_dataset_viz-0.2.2-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "22a17a616ce3ba196e9ff555ec1c912c", "sha256": "459745f301956c28741226aa8916d76f3fee546e74cae938b12a0d53bfeece26"}, "downloads": -1, "filename": "image_dataset_viz-0.2.2.tar.gz", "has_sig": false, "md5_digest": "22a17a616ce3ba196e9ff555ec1c912c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 388826, "upload_time": "2018-08-23T14:09:38", "upload_time_iso_8601": "2018-08-23T14:09:38.133321Z", "url": "https://files.pythonhosted.org/packages/ae/7f/08ebf3e0b4015e2fbd4cbb891f7128aab38d34d15322475031f192c4f4b3/image_dataset_viz-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "af70cb9c97f33a796eb5ffe52e50b8ce", "sha256": "dcd879c48f7c916456898a81e604dec981967f4bba7e1dad5c35de07bdea826c"}, "downloads": -1, "filename": "image_dataset_viz-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "af70cb9c97f33a796eb5ffe52e50b8ce", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 387951, "upload_time": "2018-08-23T14:09:34", "upload_time_iso_8601": "2018-08-23T14:09:34.756723Z", "url": "https://files.pythonhosted.org/packages/05/fc/5b63dd6101991ff2a9f8e2df5cc27f5696c9e36d7c4bd22d0ed6c65fa05a/image_dataset_viz-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77f4db7763100cb9f1d5485b767ba826", "sha256": "04731971bea33b584db1566f703f6d9a3bb808e63cde5eec84c355e4e136cd1e"}, "downloads": -1, "filename": "image_dataset_viz-0.2.2-py3.5.egg", "has_sig": false, "md5_digest": "77f4db7763100cb9f1d5485b767ba826", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 396874, "upload_time": "2018-08-23T14:09:36", "upload_time_iso_8601": "2018-08-23T14:09:36.264352Z", "url": "https://files.pythonhosted.org/packages/1e/31/fa9a85638e770f1ced78e25fb8eabe7876881a0a627ca24d61a1615a6f68/image_dataset_viz-0.2.2-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "22a17a616ce3ba196e9ff555ec1c912c", "sha256": "459745f301956c28741226aa8916d76f3fee546e74cae938b12a0d53bfeece26"}, "downloads": -1, "filename": "image_dataset_viz-0.2.2.tar.gz", "has_sig": false, "md5_digest": "22a17a616ce3ba196e9ff555ec1c912c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 388826, "upload_time": "2018-08-23T14:09:38", "upload_time_iso_8601": "2018-08-23T14:09:38.133321Z", "url": "https://files.pythonhosted.org/packages/ae/7f/08ebf3e0b4015e2fbd4cbb891f7128aab38d34d15322475031f192c4f4b3/image_dataset_viz-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:53 2020"}