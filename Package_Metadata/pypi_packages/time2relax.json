{"info": {"author": "Raymond Wanyoike", "author_email": "raymond.wanyoike@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# time2relax: Python CouchDB Driver\n\n[![Travis (.org)](https://img.shields.io/travis/rwanyoike/time2relax.svg)](https://travis-ci.org/rwanyoike/time2relax)\n[![Codecov](https://img.shields.io/codecov/c/gh/rwanyoike/time2relax.svg)](https://codecov.io/gh/rwanyoike/time2relax)\n[![GitHub](https://img.shields.io/github/license/rwanyoike/time2relax)](LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/time2relax.svg)](https://pypi.python.org/pypi/time2relax)\n[![Code Style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n> A CouchDB driver for Python.\n\ntime2relax is a Python [CouchDB](https://couchdb.apache.org/) driver that tries to offer a minimal level of abstraction between you and CouchDB.\n\nBasic insert usage:\n\n```python\n>>> from time2relax import CouchDB\n>>> db = CouchDB('http://localhost:5984/dbname')\n>>> db.insert({'title': 'Ziggy Stardust'})\n<Response [201]>\n```\n\n<details>\n<summary>Table of Contents</summary>\n\n- [Feature Support](#feature-support)\n- [Installation](#installation)\n- [Documentation](#documentation)\n  - [Create a Database](#create-a-database)\n  - [Delete a Database](#delete-a-database)\n  - [Create/Update a Document](#createupdate-a-document)\n  - [Fetch a Document](#fetch-a-document)\n  - [Delete a Document](#delete-a-document)\n  - [Create/Update a Batch of Documents](#createupdate-a-batch-of-documents)\n  - [Fetch a Batch of Documents](#fetch-a-batch-of-documents)\n  - [Replicate a Database](#replicate-a-database)\n  - [Save an Attachment](#save-an-attachment)\n  - [Get an Attachment](#get-an-attachment)\n  - [Delete an Attachment](#delete-an-attachment)\n  - [Get Database Information](#get-database-information)\n  - [Compact a Database](#compact-a-database)\n  - [Run a List Function](#run-a-list-function)\n  - [Run a Show Function](#run-a-show-function)\n  - [Run a View Function](#run-a-view-function)\n- [How to Contribute](#how-to-contribute)\n\n<small><i><a href='http://ecotrust-canada.github.io/markdown-toc/'>Table of contents generated with markdown-toc</a></i></small>\n</details>\n\n## Feature Support\n\nInspired by [pouchdb](https://github.com/pouchdb/pouchdb)  and [couchdb-nano](https://github.com/apache/couchdb-nano) APIs, it features:\n\n* [Requests](https://requests.readthedocs.io/en/latest) (HTTP for Humans) under the hood.\n* Transparent URL and parameter encoding.\n* HTTP exceptions modeled from CouchDB [error codes](http://docs.couchdb.org/en/1.6.1/api/basics.html#http-status-codes).\n* Support for CouchDB 1.7.x.\n\ntime2relax officially supports **Python 3.6+**.\n\n## Installation\n\nTo install time2relax, simply run:\n\n```shell\n$ pip install -U time2relax\n\u2728\ud83d\udecb\u2728\n```\n\n## Documentation\n\nTo use time2relax in a project:\n\n```python\n>>> from time2relax import CouchDB\n>>> db = CouchDB('http://localhost:5984/dbname')\n```\n\nMost of the API is exposed as `db.FUNCTION(*args, **kwargs)`, where `**kwargs` are optional arguments that `requests.Session.request` can take.\n\n### Create a Database\n\nInitially the `CouchDB` object will check if the database exists, and try to create it if it does not. You can use `create_db=False` to skip this step:\n\n```python\n>>> db = CouchDB('http://localhost:5984/dbname', create_db=False)\n```\n\n### Delete a Database\n\nDelete a database:\n\n```python\n>>> db.destroy()\n<Response [200]>\n```\n\nFurther requests with the `CouchDB` object should raise a `time2relax.ResourceNotFound`:\n\n```python\n>>> db.info()\nResourceNotFound: ({'error': 'not_found', 'reason': 'missing'}, <Response [404]>)\n```\n\n### Create/Update a Document\n\nNote: There are some CouchDB restrictions on valid property names of the documents.\n\nCreate a new document:\n\n```python\n>>> db.insert({'_id': 'docid', 'title': 'Heros'})\n<Response [201]>\n```\n\nTo create a new document and let CouchDB auto-generate an `_id` for it:\n\n```python\n>>> db.insert({'title': 'Ziggy Stardust'})\n<Response [201]>\n```\n\nIf the document already exists, you must specify its revision `_rev`, otherwise a conflict will occur. You can update an existing document using `_rev`:\n\n```python\n>>> result = db.get('docid').json()\n>>> db.insert({'_id': result['_id'], '_rev': result['_rev'], 'title': 'Dance'})\n<Response [201]>\n```\n\n### Fetch a Document\n\nRetrieve a document:\n\n```python\n>>> db.get('docid')\n<Response [200]>\n```\n\n### Delete a Document\n\nYou must supply the `_rev` of the existing document.\n\nDelete a document:\n\n```python\n>>> result = db.get('docid').json()\n>>> db.remove(result['_id'], result['_rev'])\n<Response [200]>\n```\n\nYou can also delete a document by using `time2relax.CouchDB.insert` with `{'_deleted': True}`:\n\n```python\n>>> result = db.get('docid').json()\n>>> result['_deleted'] = True\n>>> db.insert(result)\n<Response [200]>\n```\n\n### Create/Update a Batch of Documents\n\nCreate multiple documents:\n\n```python\n>>> db.bulk_docs([\n...     {'_id': 'doc1', 'title': 'Lisa Says'},\n...     {'_id': 'doc2', 'title': 'Space Oddity'},\n... ])\n<Response [201]>\n```\n\nIf you omit the `_id` parameter on a given document, the database will create a new document and assign the ID for you:\n\n```python\n>>> db.bulk_docs([\n...     {'title': 'Lisa Says'},\n...     {'title': 'Space Oddity'},\n... ])\n<Response [201]>\n```\n\nTo update a document, you must include both an `_id` parameter and a `_rev` parameter, which should match the ID and revision of the document on which to base your updates:\n\n```python\n>>> db.bulk_docs([\n...     {\n...         '_id': 'doc1',\n...         '_rev': '1-84abc2a942007bee7cf55007cba56198',\n...         'title': 'Lisa Says',\n...         'artist': 'Velvet Underground',\n...     },\n...     {\n...         '_id': 'doc2',\n...         '_rev': '1-7b80fc50b6af7a905f368670429a757e',\n...         'title': 'Space Oddity',\n...         'artist': 'David Bowie',\n...     },\n... ])\n<Response [201]>\n```\n\nFinally, to delete a document, include a `_deleted` parameter with the value `True`:\n\n```python\n>>> db.bulk_docs([\n...     {\n...         '_id': 'doc1',\n...         '_rev': '1-84abc2a942007bee7cf55007cba56198',\n...         'title': 'Lisa Says',\n...         '_deleted': True,\n...     },\n...     {\n...         '_id': 'doc2',\n...         '_rev': '1-7b80fc50b6af7a905f368670429a757e',\n...         'title': 'Space Oddity',\n...         '_deleted': True,\n...     },\n... ])\n<Response [201]>\n```\n\n### Fetch a Batch of Documents\n\nFetch multiple documents:\n\n```python\n>>> params = {'include_docs': True, 'attachments': True}\n>>> db.all_docs(params)\n<Response [200]>\n```\n\nYou can use `startkey`/`endkey` to find all docs in a range:\n\n```python\n>>> params = {'startkey': 'bar', 'endkey': 'quux'}\n>>> db.all_docs(params)\n<Response [200]>\n```\n\nYou can also do a prefix search \u2013 i.e. \"give me all the documents whose `_id` start with `'foo'`\" \u2013 by using the special high Unicode character `'\\uffff'`:\n\n```python\n>>> params = {'startkey': 'foo', 'endkey': 'foo\\uffff'}\n>>> db.all_docs(params)\n<Response [200]>\n```\n\n### Replicate a Database\n\nNote: The target has to exist, you can use `json={'create_target': True}` to create it prior to replication.\n\nReplicate a database to a target:\n\n```python\n>>> db.replicate_to('http://localhost:5984/otherdb')\n<Response [200]>\n```\n\n### Save an Attachment\n\nThis method will update an existing document to add an attachment, so it requires a `_rev` if the document already exists. If the document doesn't already exist, then this method will create an empty document containing the attachment.\n\nAttach a text/plain file:\n\n```python\n>>> with open('/tmp/att.txt') as fp:\n...     db.insert_att('docid', None, 'att.txt', fp, 'text/plain')\n...\n<Response [201]>\n```\n\n### Get an Attachment\n\nGet attachment data:\n\n```python\n>>> db.get_att('docid', 'att.txt')\n<Response [200]>\n```\n\n### Delete an Attachment\n\nYou must supply the `_rev` of the existing document.\n\nDelete an attachment:\n\n```python\n>>> result = db.get('docid').json()\n>>> db.remove_att(result['_id'], result['_rev'], 'att.txt')\n<Response [200]>\n```\n\n### Get Database Information\n\nGet information about a database:\n\n```python\n>>> db.info()\n<Response [200]>\n```\n\n### Compact a Database\n\nThis reduces a database's size by removing unused and old data, namely non-leaf revisions and attachments that are no longer referenced by those revisions.\n\nTrigger a compaction operation:\n\n```python\n>>> db.compact()\n<Response [202]>\n```\n\n### Run a List Function\n\nMake sure you understand how list functions work in CouchDB. A good start is [the CouchDB guide entry on lists](http://guide.couchdb.org/draft/transforming.html):\n\n```python\n>>> db.insert({\n...     '_id': '_design/testid',\n...     'views': {\n...         'viewid': {\n...             'map': \"function (doc) {\"\n...                    \"    emit(doc._id, 'value');\"\n...                    \"}\",\n...         },\n...     },\n...     'lists': {\n...         'listid': \"function (head, req) {\"\n...                   \"    return 'Hello World!';\"\n...                   \"}\",\n...     },\n... })\n<Response [201]>\n>>> db.ddoc_list('testid', 'listid', 'viewid')\n<Response [200]>\n```\n\n### Run a Show Function\n\nMake sure you understand how show functions work in CouchDB. A good start is [the CouchDB guide entry on shows](http://guide.couchdb.org/draft/show.html):\n\n```python\n>>> db.insert({\n...     '_id': '_design/testid',\n...     'shows': {\n...         'showid': \"function (doc, req) {\"\n...                   \"    return {body: 'relax!'}\"\n...                   \"}\",\n...     },\n... })\n<Response [201]>\n>>> db.ddoc_show('testid', 'showid')\n<Response [200]>\n```\n\n### Run a View Function\n\nMake sure you understand how view functions work in CouchDB. A good start is [the CouchDB guide entry on views](http://guide.couchdb.org/draft/views.html):\n\n```python\n>>> db.insert({\n...     '_id': '_design/testid',\n...     'views': {\n...         'viewid': {\n...             'map': \"function (doc) {\"\n...                    \"    emit(doc.key);\"\n...                    \"}\",\n...         },\n...     },\n... })\n<Response [201]>\n>>> params = {'reduce': False, 'key': 'key2'}\n>>> db.ddoc_view('testid', 'viewid', params)\n<Response [200]>\n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rwanyoike/time2relax", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "time2relax", "package_url": "https://pypi.org/project/time2relax/", "platform": "", "project_url": "https://pypi.org/project/time2relax/", "project_urls": {"Homepage": "https://github.com/rwanyoike/time2relax", "Repository": "https://github.com/rwanyoike/time2relax"}, "release_url": "https://pypi.org/project/time2relax/0.6.0/", "requires_dist": ["requests (>=2.22,<3.0)"], "requires_python": ">=3.6,<4.0", "summary": "A CouchDB driver for Python.", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>time2relax: Python CouchDB Driver</h1>\n<p><a href=\"https://travis-ci.org/rwanyoike/time2relax\" rel=\"nofollow\"><img alt=\"Travis (.org)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/691fb0b540a413f63e875274da3c0a22c5122d19/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f7277616e796f696b652f74696d653272656c61782e737667\"></a>\n<a href=\"https://codecov.io/gh/rwanyoike/time2relax\" rel=\"nofollow\"><img alt=\"Codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/677d9c8068049dc2606aaad97c2f4e6f6c699b2b/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f67682f7277616e796f696b652f74696d653272656c61782e737667\"></a>\n<a href=\"LICENSE\" rel=\"nofollow\"><img alt=\"GitHub\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5d80401738053c07b162ddd200571d73ddcece97/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f7277616e796f696b652f74696d653272656c6178\"></a>\n<a href=\"https://pypi.python.org/pypi/time2relax\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e4923f50383d76381c215de750df8e7c272dca89/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f74696d653272656c61782e737667\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code Style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<blockquote>\n<p>A CouchDB driver for Python.</p>\n</blockquote>\n<p>time2relax is a Python <a href=\"https://couchdb.apache.org/\" rel=\"nofollow\">CouchDB</a> driver that tries to offer a minimal level of abstraction between you and CouchDB.</p>\n<p>Basic insert usage:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">time2relax</span> <span class=\"kn\">import</span> <span class=\"n\">CouchDB</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">CouchDB</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost:5984/dbname'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">({</span><span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'Ziggy Stardust'</span><span class=\"p\">})</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">201</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<details>\n<summary>Table of Contents</summary>\n<ul>\n<li><a href=\"#feature-support\" rel=\"nofollow\">Feature Support</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#documentation\" rel=\"nofollow\">Documentation</a>\n<ul>\n<li><a href=\"#create-a-database\" rel=\"nofollow\">Create a Database</a></li>\n<li><a href=\"#delete-a-database\" rel=\"nofollow\">Delete a Database</a></li>\n<li><a href=\"#createupdate-a-document\" rel=\"nofollow\">Create/Update a Document</a></li>\n<li><a href=\"#fetch-a-document\" rel=\"nofollow\">Fetch a Document</a></li>\n<li><a href=\"#delete-a-document\" rel=\"nofollow\">Delete a Document</a></li>\n<li><a href=\"#createupdate-a-batch-of-documents\" rel=\"nofollow\">Create/Update a Batch of Documents</a></li>\n<li><a href=\"#fetch-a-batch-of-documents\" rel=\"nofollow\">Fetch a Batch of Documents</a></li>\n<li><a href=\"#replicate-a-database\" rel=\"nofollow\">Replicate a Database</a></li>\n<li><a href=\"#save-an-attachment\" rel=\"nofollow\">Save an Attachment</a></li>\n<li><a href=\"#get-an-attachment\" rel=\"nofollow\">Get an Attachment</a></li>\n<li><a href=\"#delete-an-attachment\" rel=\"nofollow\">Delete an Attachment</a></li>\n<li><a href=\"#get-database-information\" rel=\"nofollow\">Get Database Information</a></li>\n<li><a href=\"#compact-a-database\" rel=\"nofollow\">Compact a Database</a></li>\n<li><a href=\"#run-a-list-function\" rel=\"nofollow\">Run a List Function</a></li>\n<li><a href=\"#run-a-show-function\" rel=\"nofollow\">Run a Show Function</a></li>\n<li><a href=\"#run-a-view-function\" rel=\"nofollow\">Run a View Function</a></li>\n</ul>\n</li>\n<li><a href=\"#how-to-contribute\" rel=\"nofollow\">How to Contribute</a></li>\n</ul>\n<p>&lt;small&gt;<i><a href=\"http://ecotrust-canada.github.io/markdown-toc/\" rel=\"nofollow\">Table of contents generated with markdown-toc</a></i>&lt;/small&gt;</p>\n</details>\n<h2>Feature Support</h2>\n<p>Inspired by <a href=\"https://github.com/pouchdb/pouchdb\" rel=\"nofollow\">pouchdb</a>  and <a href=\"https://github.com/apache/couchdb-nano\" rel=\"nofollow\">couchdb-nano</a> APIs, it features:</p>\n<ul>\n<li><a href=\"https://requests.readthedocs.io/en/latest\" rel=\"nofollow\">Requests</a> (HTTP for Humans) under the hood.</li>\n<li>Transparent URL and parameter encoding.</li>\n<li>HTTP exceptions modeled from CouchDB <a href=\"http://docs.couchdb.org/en/1.6.1/api/basics.html#http-status-codes\" rel=\"nofollow\">error codes</a>.</li>\n<li>Support for CouchDB 1.7.x.</li>\n</ul>\n<p>time2relax officially supports <strong>Python 3.6+</strong>.</p>\n<h2>Installation</h2>\n<p>To install time2relax, simply run:</p>\n<pre>$ pip install -U time2relax\n\u2728\ud83d\udecb\u2728\n</pre>\n<h2>Documentation</h2>\n<p>To use time2relax in a project:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">time2relax</span> <span class=\"kn\">import</span> <span class=\"n\">CouchDB</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">CouchDB</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost:5984/dbname'</span><span class=\"p\">)</span>\n</pre>\n<p>Most of the API is exposed as <code>db.FUNCTION(*args, **kwargs)</code>, where <code>**kwargs</code> are optional arguments that <code>requests.Session.request</code> can take.</p>\n<h3>Create a Database</h3>\n<p>Initially the <code>CouchDB</code> object will check if the database exists, and try to create it if it does not. You can use <code>create_db=False</code> to skip this step:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">CouchDB</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost:5984/dbname'</span><span class=\"p\">,</span> <span class=\"n\">create_db</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<h3>Delete a Database</h3>\n<p>Delete a database:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">destroy</span><span class=\"p\">()</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<p>Further requests with the <code>CouchDB</code> object should raise a <code>time2relax.ResourceNotFound</code>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">()</span>\n<span class=\"n\">ResourceNotFound</span><span class=\"p\">:</span> <span class=\"p\">({</span><span class=\"s1\">'error'</span><span class=\"p\">:</span> <span class=\"s1\">'not_found'</span><span class=\"p\">,</span> <span class=\"s1\">'reason'</span><span class=\"p\">:</span> <span class=\"s1\">'missing'</span><span class=\"p\">},</span> <span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">404</span><span class=\"p\">]</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n</pre>\n<h3>Create/Update a Document</h3>\n<p>Note: There are some CouchDB restrictions on valid property names of the documents.</p>\n<p>Create a new document:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">({</span><span class=\"s1\">'_id'</span><span class=\"p\">:</span> <span class=\"s1\">'docid'</span><span class=\"p\">,</span> <span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'Heros'</span><span class=\"p\">})</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">201</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<p>To create a new document and let CouchDB auto-generate an <code>_id</code> for it:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">({</span><span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'Ziggy Stardust'</span><span class=\"p\">})</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">201</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<p>If the document already exists, you must specify its revision <code>_rev</code>, otherwise a conflict will occur. You can update an existing document using <code>_rev</code>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'docid'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">({</span><span class=\"s1\">'_id'</span><span class=\"p\">:</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'_id'</span><span class=\"p\">],</span> <span class=\"s1\">'_rev'</span><span class=\"p\">:</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'_rev'</span><span class=\"p\">],</span> <span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'Dance'</span><span class=\"p\">})</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">201</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<h3>Fetch a Document</h3>\n<p>Retrieve a document:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'docid'</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<h3>Delete a Document</h3>\n<p>You must supply the <code>_rev</code> of the existing document.</p>\n<p>Delete a document:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'docid'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'_id'</span><span class=\"p\">],</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'_rev'</span><span class=\"p\">])</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<p>You can also delete a document by using <code>time2relax.CouchDB.insert</code> with <code>{'_deleted': True}</code>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'docid'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'_deleted'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<h3>Create/Update a Batch of Documents</h3>\n<p>Create multiple documents:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">bulk_docs</span><span class=\"p\">([</span>\n<span class=\"o\">...</span>     <span class=\"p\">{</span><span class=\"s1\">'_id'</span><span class=\"p\">:</span> <span class=\"s1\">'doc1'</span><span class=\"p\">,</span> <span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'Lisa Says'</span><span class=\"p\">},</span>\n<span class=\"o\">...</span>     <span class=\"p\">{</span><span class=\"s1\">'_id'</span><span class=\"p\">:</span> <span class=\"s1\">'doc2'</span><span class=\"p\">,</span> <span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'Space Oddity'</span><span class=\"p\">},</span>\n<span class=\"o\">...</span> <span class=\"p\">])</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">201</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<p>If you omit the <code>_id</code> parameter on a given document, the database will create a new document and assign the ID for you:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">bulk_docs</span><span class=\"p\">([</span>\n<span class=\"o\">...</span>     <span class=\"p\">{</span><span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'Lisa Says'</span><span class=\"p\">},</span>\n<span class=\"o\">...</span>     <span class=\"p\">{</span><span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'Space Oddity'</span><span class=\"p\">},</span>\n<span class=\"o\">...</span> <span class=\"p\">])</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">201</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<p>To update a document, you must include both an <code>_id</code> parameter and a <code>_rev</code> parameter, which should match the ID and revision of the document on which to base your updates:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">bulk_docs</span><span class=\"p\">([</span>\n<span class=\"o\">...</span>     <span class=\"p\">{</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'_id'</span><span class=\"p\">:</span> <span class=\"s1\">'doc1'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'_rev'</span><span class=\"p\">:</span> <span class=\"s1\">'1-84abc2a942007bee7cf55007cba56198'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'Lisa Says'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'artist'</span><span class=\"p\">:</span> <span class=\"s1\">'Velvet Underground'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"p\">},</span>\n<span class=\"o\">...</span>     <span class=\"p\">{</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'_id'</span><span class=\"p\">:</span> <span class=\"s1\">'doc2'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'_rev'</span><span class=\"p\">:</span> <span class=\"s1\">'1-7b80fc50b6af7a905f368670429a757e'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'Space Oddity'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'artist'</span><span class=\"p\">:</span> <span class=\"s1\">'David Bowie'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"p\">},</span>\n<span class=\"o\">...</span> <span class=\"p\">])</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">201</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<p>Finally, to delete a document, include a <code>_deleted</code> parameter with the value <code>True</code>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">bulk_docs</span><span class=\"p\">([</span>\n<span class=\"o\">...</span>     <span class=\"p\">{</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'_id'</span><span class=\"p\">:</span> <span class=\"s1\">'doc1'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'_rev'</span><span class=\"p\">:</span> <span class=\"s1\">'1-84abc2a942007bee7cf55007cba56198'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'Lisa Says'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'_deleted'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"p\">},</span>\n<span class=\"o\">...</span>     <span class=\"p\">{</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'_id'</span><span class=\"p\">:</span> <span class=\"s1\">'doc2'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'_rev'</span><span class=\"p\">:</span> <span class=\"s1\">'1-7b80fc50b6af7a905f368670429a757e'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'Space Oddity'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'_deleted'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"p\">},</span>\n<span class=\"o\">...</span> <span class=\"p\">])</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">201</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<h3>Fetch a Batch of Documents</h3>\n<p>Fetch multiple documents:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'include_docs'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">'attachments'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">all_docs</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<p>You can use <code>startkey</code>/<code>endkey</code> to find all docs in a range:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'startkey'</span><span class=\"p\">:</span> <span class=\"s1\">'bar'</span><span class=\"p\">,</span> <span class=\"s1\">'endkey'</span><span class=\"p\">:</span> <span class=\"s1\">'quux'</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">all_docs</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<p>You can also do a prefix search \u2013 i.e. \"give me all the documents whose <code>_id</code> start with <code>'foo'</code>\" \u2013 by using the special high Unicode character <code>'\\uffff'</code>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'startkey'</span><span class=\"p\">:</span> <span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"s1\">'endkey'</span><span class=\"p\">:</span> <span class=\"s1\">'foo</span><span class=\"se\">\\uffff</span><span class=\"s1\">'</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">all_docs</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<h3>Replicate a Database</h3>\n<p>Note: The target has to exist, you can use <code>json={'create_target': True}</code> to create it prior to replication.</p>\n<p>Replicate a database to a target:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">replicate_to</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost:5984/otherdb'</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<h3>Save an Attachment</h3>\n<p>This method will update an existing document to add an attachment, so it requires a <code>_rev</code> if the document already exists. If the document doesn't already exist, then this method will create an empty document containing the attachment.</p>\n<p>Attach a text/plain file:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'/tmp/att.txt'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fp</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">insert_att</span><span class=\"p\">(</span><span class=\"s1\">'docid'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s1\">'att.txt'</span><span class=\"p\">,</span> <span class=\"n\">fp</span><span class=\"p\">,</span> <span class=\"s1\">'text/plain'</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">201</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<h3>Get an Attachment</h3>\n<p>Get attachment data:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get_att</span><span class=\"p\">(</span><span class=\"s1\">'docid'</span><span class=\"p\">,</span> <span class=\"s1\">'att.txt'</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<h3>Delete an Attachment</h3>\n<p>You must supply the <code>_rev</code> of the existing document.</p>\n<p>Delete an attachment:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'docid'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">remove_att</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'_id'</span><span class=\"p\">],</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'_rev'</span><span class=\"p\">],</span> <span class=\"s1\">'att.txt'</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<h3>Get Database Information</h3>\n<p>Get information about a database:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">()</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<h3>Compact a Database</h3>\n<p>This reduces a database's size by removing unused and old data, namely non-leaf revisions and attachments that are no longer referenced by those revisions.</p>\n<p>Trigger a compaction operation:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">compact</span><span class=\"p\">()</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">202</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<h3>Run a List Function</h3>\n<p>Make sure you understand how list functions work in CouchDB. A good start is <a href=\"http://guide.couchdb.org/draft/transforming.html\" rel=\"nofollow\">the CouchDB guide entry on lists</a>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">({</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'_id'</span><span class=\"p\">:</span> <span class=\"s1\">'_design/testid'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'views'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'viewid'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"o\">...</span>             <span class=\"s1\">'map'</span><span class=\"p\">:</span> <span class=\"s2\">\"function (doc) {\"</span>\n<span class=\"o\">...</span>                    <span class=\"s2\">\"    emit(doc._id, 'value');\"</span>\n<span class=\"o\">...</span>                    <span class=\"s2\">\"}\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"p\">},</span>\n<span class=\"o\">...</span>     <span class=\"p\">},</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'lists'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'listid'</span><span class=\"p\">:</span> <span class=\"s2\">\"function (head, req) {\"</span>\n<span class=\"o\">...</span>                   <span class=\"s2\">\"    return 'Hello World!';\"</span>\n<span class=\"o\">...</span>                   <span class=\"s2\">\"}\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"p\">},</span>\n<span class=\"o\">...</span> <span class=\"p\">})</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">201</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">ddoc_list</span><span class=\"p\">(</span><span class=\"s1\">'testid'</span><span class=\"p\">,</span> <span class=\"s1\">'listid'</span><span class=\"p\">,</span> <span class=\"s1\">'viewid'</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<h3>Run a Show Function</h3>\n<p>Make sure you understand how show functions work in CouchDB. A good start is <a href=\"http://guide.couchdb.org/draft/show.html\" rel=\"nofollow\">the CouchDB guide entry on shows</a>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">({</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'_id'</span><span class=\"p\">:</span> <span class=\"s1\">'_design/testid'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'shows'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'showid'</span><span class=\"p\">:</span> <span class=\"s2\">\"function (doc, req) {\"</span>\n<span class=\"o\">...</span>                   <span class=\"s2\">\"    return {body: 'relax!'}\"</span>\n<span class=\"o\">...</span>                   <span class=\"s2\">\"}\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"p\">},</span>\n<span class=\"o\">...</span> <span class=\"p\">})</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">201</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">ddoc_show</span><span class=\"p\">(</span><span class=\"s1\">'testid'</span><span class=\"p\">,</span> <span class=\"s1\">'showid'</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n<h3>Run a View Function</h3>\n<p>Make sure you understand how view functions work in CouchDB. A good start is <a href=\"http://guide.couchdb.org/draft/views.html\" rel=\"nofollow\">the CouchDB guide entry on views</a>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">({</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'_id'</span><span class=\"p\">:</span> <span class=\"s1\">'_design/testid'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'views'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"o\">...</span>         <span class=\"s1\">'viewid'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"o\">...</span>             <span class=\"s1\">'map'</span><span class=\"p\">:</span> <span class=\"s2\">\"function (doc) {\"</span>\n<span class=\"o\">...</span>                    <span class=\"s2\">\"    emit(doc.key);\"</span>\n<span class=\"o\">...</span>                    <span class=\"s2\">\"}\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"p\">},</span>\n<span class=\"o\">...</span>     <span class=\"p\">},</span>\n<span class=\"o\">...</span> <span class=\"p\">})</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">201</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'reduce'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s1\">'key'</span><span class=\"p\">:</span> <span class=\"s1\">'key2'</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">ddoc_view</span><span class=\"p\">(</span><span class=\"s1\">'testid'</span><span class=\"p\">,</span> <span class=\"s1\">'viewid'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Response</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">]</span><span class=\"o\">&gt;</span>\n</pre>\n\n          </div>"}, "last_serial": 6534247, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "9fa41240f0522279045917d721f3c4c9", "sha256": "f6c2cabec4daad7a9fd8b3ae58ea1aa339bf02918617df91b3a23e8b3b649bee"}, "downloads": -1, "filename": "time2relax-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9fa41240f0522279045917d721f3c4c9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6166, "upload_time": "2016-12-10T09:10:27", "upload_time_iso_8601": "2016-12-10T09:10:27.325895Z", "url": "https://files.pythonhosted.org/packages/0d/97/6b3ae329e2e90d0376beaa81b15ba9e915d7f8fcb8b78122285c78e5d921/time2relax-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "27652a575e0522b78dd170e58ffe40d1", "sha256": "447f5dbfd8099344dc5fcc7c7b115bd86d964ae438e4366d81a608839760a5ed"}, "downloads": -1, "filename": "time2relax-0.1.0.tar.gz", "has_sig": false, "md5_digest": "27652a575e0522b78dd170e58ffe40d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29226, "upload_time": "2016-12-10T09:10:28", "upload_time_iso_8601": "2016-12-10T09:10:28.859819Z", "url": "https://files.pythonhosted.org/packages/e5/d7/7c5b7ad9a9bf7de5f825142b57698c08d7fb342f6030d5a117b0c90be4c6/time2relax-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "8f6328d94bb528ff943081e1879cb7e6", "sha256": "f38376864d2ea259cf821cfc7593429558fbf08bf919702151e11275b4658db7"}, "downloads": -1, "filename": "time2relax-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8f6328d94bb528ff943081e1879cb7e6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5933, "upload_time": "2016-12-12T22:57:33", "upload_time_iso_8601": "2016-12-12T22:57:33.268649Z", "url": "https://files.pythonhosted.org/packages/7b/02/725782fd2b8c5d1dbf0e127c19d862e68bb0638bebfe65f224bd82866a19/time2relax-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "52a6a617fd7e15acb2509e44eff65ce4", "sha256": "07cb11e35a14e112534552d2e3f08ac8d2490b66fcb03290a1b9b471e6207f93"}, "downloads": -1, "filename": "time2relax-0.2.0.tar.gz", "has_sig": false, "md5_digest": "52a6a617fd7e15acb2509e44eff65ce4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20674, "upload_time": "2016-12-12T22:57:34", "upload_time_iso_8601": "2016-12-12T22:57:34.743332Z", "url": "https://files.pythonhosted.org/packages/55/ce/ff794016b01f2c4694936daf3b39cbf8108115e2b0f3affe3c61f364c19e/time2relax-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "1bbf5d30948f322370fd8598e0caccb8", "sha256": "79e82c25841772422ccc2b58bf1fcaf395d6b8b6680810dc9e580860bd0dbdfe"}, "downloads": -1, "filename": "time2relax-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1bbf5d30948f322370fd8598e0caccb8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7540, "upload_time": "2017-03-03T16:41:40", "upload_time_iso_8601": "2017-03-03T16:41:40.210849Z", "url": "https://files.pythonhosted.org/packages/0a/57/0bffb1878fe70fc9346c7acf1d3ec284214517bab953329dcb75bc6cb1cb/time2relax-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "696f3e4f841cf687f08e39f4823b08bf", "sha256": "aa51c9d04717a8c20cb9da56fd584767e4934595397a724500f45e4ef660f2cd"}, "downloads": -1, "filename": "time2relax-0.3.0.tar.gz", "has_sig": false, "md5_digest": "696f3e4f841cf687f08e39f4823b08bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28300, "upload_time": "2017-03-03T16:41:46", "upload_time_iso_8601": "2017-03-03T16:41:46.215417Z", "url": "https://files.pythonhosted.org/packages/de/2b/98015a7e560e5b16169a487f8efbc44202c185a5d08f072c774e4ebbd9da/time2relax-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "5ce83dcde6b92cda1cf8edf9984aeffd", "sha256": "01507f415b6389fb31c2e3dd0457f1641ef451361917a20ca01b8ea5a860687c"}, "downloads": -1, "filename": "time2relax-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5ce83dcde6b92cda1cf8edf9984aeffd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11067, "upload_time": "2017-11-21T00:18:50", "upload_time_iso_8601": "2017-11-21T00:18:50.038125Z", "url": "https://files.pythonhosted.org/packages/b9/36/cbe0c4548eafd09e242e15d825400c55d6fcba2085f8ddeb53d76b51ba8c/time2relax-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89ead1f44e8442e1f785bdc87bfc026e", "sha256": "c5f179b124416a8c671c424a0b3eee331fd0be53c29ef641842047bd1f37126d"}, "downloads": -1, "filename": "time2relax-0.4.0.tar.gz", "has_sig": false, "md5_digest": "89ead1f44e8442e1f785bdc87bfc026e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21779, "upload_time": "2017-11-21T00:15:12", "upload_time_iso_8601": "2017-11-21T00:15:12.777164Z", "url": "https://files.pythonhosted.org/packages/c9/01/1ca6ab98670593917e264ebe53a2ef10e7136db97c729d8822808131d627/time2relax-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "9665658dc26f5bad28f7f2a1e5c1a927", "sha256": "a7647486b30d523cc1241c5f4d1a248e9cc2590dc2e8b193914b78034d6919cd"}, "downloads": -1, "filename": "time2relax-0.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9665658dc26f5bad28f7f2a1e5c1a927", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11133, "upload_time": "2017-11-21T07:12:54", "upload_time_iso_8601": "2017-11-21T07:12:54.530763Z", "url": "https://files.pythonhosted.org/packages/fc/7c/f1fae53633e87b54505757e9536ea014e3b370bfcc91062ebdf116e53dce/time2relax-0.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "381982b01e069afe434b158a7f726bc5", "sha256": "ab3f204ab9bc1a23da874c4965984d0bf2efb76734688978c492e6d9b08afd42"}, "downloads": -1, "filename": "time2relax-0.4.1.tar.gz", "has_sig": false, "md5_digest": "381982b01e069afe434b158a7f726bc5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27637, "upload_time": "2017-11-21T07:12:56", "upload_time_iso_8601": "2017-11-21T07:12:56.596694Z", "url": "https://files.pythonhosted.org/packages/e6/0f/5bd83288c0d1dada86244eb6f8de4b3cc77fde0d083ea2a7f53926ecb62e/time2relax-0.4.1.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "6d6bd63328198f5f1485e799237e30ec", "sha256": "0cb923e2dee78028392a2fc7dec96f5240ff4f32ea717c710d9bbeafb1973e8a"}, "downloads": -1, "filename": "time2relax-0.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6d6bd63328198f5f1485e799237e30ec", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11818, "upload_time": "2018-08-04T19:35:50", "upload_time_iso_8601": "2018-08-04T19:35:50.412295Z", "url": "https://files.pythonhosted.org/packages/7b/29/5c3cfa38fbfc6395b0fc98bfec91e625de9763191fa16d3fe4a4c1a15a04/time2relax-0.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d5ffd74b2499109a173e2e655b46ec4", "sha256": "82e146384bfef5c1c5a5c145d665e6d7b43010295af9aafa7b9cc07bb0b659af"}, "downloads": -1, "filename": "time2relax-0.5.1.tar.gz", "has_sig": false, "md5_digest": "2d5ffd74b2499109a173e2e655b46ec4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20493, "upload_time": "2018-08-04T19:35:52", "upload_time_iso_8601": "2018-08-04T19:35:52.070118Z", "url": "https://files.pythonhosted.org/packages/31/d7/7948ca2b8d06f1c6c59c3ce7c57df4b806b966cad2ce06cd0f85fe6ba889/time2relax-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "d7e6ddfa6428bd9399b4c2848d0e3514", "sha256": "43383f2454cc7e613ed2960d30715acf3c20d3d2e51ce2bab784330f7737ff54"}, "downloads": -1, "filename": "time2relax-0.5.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d7e6ddfa6428bd9399b4c2848d0e3514", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11829, "upload_time": "2018-08-04T19:41:27", "upload_time_iso_8601": "2018-08-04T19:41:27.857727Z", "url": "https://files.pythonhosted.org/packages/ed/6b/186b54f6d1bab6159d57f01680fcddf729e42efde141d3d3a5462524c6fa/time2relax-0.5.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "07d052c886d0b6b6a906d6bf0391803c", "sha256": "277d2a66f87673f657ce2f5a60ae99cd1f8db3a086bdab9957a9f46874b5f22c"}, "downloads": -1, "filename": "time2relax-0.5.2.tar.gz", "has_sig": false, "md5_digest": "07d052c886d0b6b6a906d6bf0391803c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20530, "upload_time": "2018-08-04T19:41:29", "upload_time_iso_8601": "2018-08-04T19:41:29.833034Z", "url": "https://files.pythonhosted.org/packages/bd/16/f516d8932e4db804f33bb7402d2bf006db3122b66996ac56d3a9868f4bc5/time2relax-0.5.2.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "91162270a372c54a71ff88507eeffc9d", "sha256": "fb5577818f2ea6da642e0b52a27304d254fbe86591c48ba6b93b3668758887a7"}, "downloads": -1, "filename": "time2relax-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "91162270a372c54a71ff88507eeffc9d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 11878, "upload_time": "2020-01-28T20:11:42", "upload_time_iso_8601": "2020-01-28T20:11:42.622191Z", "url": "https://files.pythonhosted.org/packages/db/f3/7fbc6e203c84a3379e03545525c48f1ebc8539152679c1d5646cbb3c4db7/time2relax-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e92a67bdf03733565c1cb48a48f21a3", "sha256": "ed84c87c8d3445cf0bc930c484e87f49e9957ecf9d59e2a4c2adbdc78d8635dc"}, "downloads": -1, "filename": "time2relax-0.6.0.tar.gz", "has_sig": false, "md5_digest": "8e92a67bdf03733565c1cb48a48f21a3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 13749, "upload_time": "2020-01-28T20:11:45", "upload_time_iso_8601": "2020-01-28T20:11:45.432625Z", "url": "https://files.pythonhosted.org/packages/ec/f6/7e33ba9586349e889dc1b92c1a90bc5dda8968bbaea417bc56527b3e30ab/time2relax-0.6.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "91162270a372c54a71ff88507eeffc9d", "sha256": "fb5577818f2ea6da642e0b52a27304d254fbe86591c48ba6b93b3668758887a7"}, "downloads": -1, "filename": "time2relax-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "91162270a372c54a71ff88507eeffc9d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 11878, "upload_time": "2020-01-28T20:11:42", "upload_time_iso_8601": "2020-01-28T20:11:42.622191Z", "url": "https://files.pythonhosted.org/packages/db/f3/7fbc6e203c84a3379e03545525c48f1ebc8539152679c1d5646cbb3c4db7/time2relax-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e92a67bdf03733565c1cb48a48f21a3", "sha256": "ed84c87c8d3445cf0bc930c484e87f49e9957ecf9d59e2a4c2adbdc78d8635dc"}, "downloads": -1, "filename": "time2relax-0.6.0.tar.gz", "has_sig": false, "md5_digest": "8e92a67bdf03733565c1cb48a48f21a3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 13749, "upload_time": "2020-01-28T20:11:45", "upload_time_iso_8601": "2020-01-28T20:11:45.432625Z", "url": "https://files.pythonhosted.org/packages/ec/f6/7e33ba9586349e889dc1b92c1a90bc5dda8968bbaea417bc56527b3e30ab/time2relax-0.6.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:53:38 2020"}