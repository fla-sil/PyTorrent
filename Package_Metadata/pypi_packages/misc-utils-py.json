{"info": {"author": "David Bradford", "author_email": "david.bradford@mongodb.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "# miscutils\n\nUtilities for working with python projects.\n\n## Usage\n\n### logging_config\n\nDefault configuration for structlog. \n\nConfigure json logging at the INFO level:\n```python\nfrom miscutils.logging_config import default_logging, LogFormat, Verbosity\n\ndefault_logging(Verbosity.INFO, LogFormat.JSON)\n```\n\nConfigure text logging at the DEBUG level:\n```python\nfrom miscutils.logging_config import default_logging, LogFormat, Verbosity\n\ndefault_logging(Verbosity.DEBUG, LogFormat.TEXT)\n```\n\nConfigure text logging at the DEBUG level and filter out external loggers:\n```python\nfrom miscutils.logging_config import default_logging, LogFormat, Verbosity\n\ndefault_logging(Verbosity.DEBUG, LogFormat.TEXT, [\"extern_logger_1\"])\n```\n\n### Log timing information for a function\n\nDecorator to add timing information to the logs:\n```python\nfrom miscutils.timer import timer\n\nimport structlog\n\n@timer(structlog.get_logger(__name__))\ndef some_function():\n    pass\n```\n\n### Create a namespace relative patch\n\nCreate namespace relative patches:\n```python\nimport some_package.sub_package.another_package as under_test\nfrom miscutils.testing import relative_patch_maker\n\npatch = relative_patch_maker(under_test.__name__)\n\nclass TestStuff:\n    #equivalent to @unittest.mock.patch(\"some_package.sub_package.another_package.something_to_patch\")\n    @patch(\"something_to_patch\")\n    def test_something(self, patched):\n        under_test.something()\n        patched.assert_called_once()\n\n    #equivalent to @unittest.mock.patch(\"some_package.sub_package.another_package.something_else_to_patch\")\n    @patch(\"something_else_to_patch\")\n    def test_something(self, patched):\n        under_test.something()\n        patched.assert_called_once()\n```\n\n## Testing\n\nTesting is done via pytest.\n\n```\n$ pip install -r requirements.txt\n$ pytest\n```\n\nTo get code coverage information, you can run pytest directly.\n\n```\n$ pip install -r requirements.txt\n$ pytest --cov=src --cov-report=html\n```\n\nThis will generate an html coverage report in `htmlcov/` directory.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dbradf/misc-utils-py", "keywords": "", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "misc-utils-py", "package_url": "https://pypi.org/project/misc-utils-py/", "platform": "", "project_url": "https://pypi.org/project/misc-utils-py/", "project_urls": {"Homepage": "https://github.com/dbradf/misc-utils-py"}, "release_url": "https://pypi.org/project/misc-utils-py/0.1.2/", "requires_dist": ["pylibversion (>=0.1)", "python-json-logger (>=0.1)", "structlog (>=19)"], "requires_python": "", "summary": "Misc utilities for python projects", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>miscutils</h1>\n<p>Utilities for working with python projects.</p>\n<h2>Usage</h2>\n<h3>logging_config</h3>\n<p>Default configuration for structlog.</p>\n<p>Configure json logging at the INFO level:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">miscutils.logging_config</span> <span class=\"kn\">import</span> <span class=\"n\">default_logging</span><span class=\"p\">,</span> <span class=\"n\">LogFormat</span><span class=\"p\">,</span> <span class=\"n\">Verbosity</span>\n\n<span class=\"n\">default_logging</span><span class=\"p\">(</span><span class=\"n\">Verbosity</span><span class=\"o\">.</span><span class=\"n\">INFO</span><span class=\"p\">,</span> <span class=\"n\">LogFormat</span><span class=\"o\">.</span><span class=\"n\">JSON</span><span class=\"p\">)</span>\n</pre>\n<p>Configure text logging at the DEBUG level:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">miscutils.logging_config</span> <span class=\"kn\">import</span> <span class=\"n\">default_logging</span><span class=\"p\">,</span> <span class=\"n\">LogFormat</span><span class=\"p\">,</span> <span class=\"n\">Verbosity</span>\n\n<span class=\"n\">default_logging</span><span class=\"p\">(</span><span class=\"n\">Verbosity</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">,</span> <span class=\"n\">LogFormat</span><span class=\"o\">.</span><span class=\"n\">TEXT</span><span class=\"p\">)</span>\n</pre>\n<p>Configure text logging at the DEBUG level and filter out external loggers:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">miscutils.logging_config</span> <span class=\"kn\">import</span> <span class=\"n\">default_logging</span><span class=\"p\">,</span> <span class=\"n\">LogFormat</span><span class=\"p\">,</span> <span class=\"n\">Verbosity</span>\n\n<span class=\"n\">default_logging</span><span class=\"p\">(</span><span class=\"n\">Verbosity</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">,</span> <span class=\"n\">LogFormat</span><span class=\"o\">.</span><span class=\"n\">TEXT</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"extern_logger_1\"</span><span class=\"p\">])</span>\n</pre>\n<h3>Log timing information for a function</h3>\n<p>Decorator to add timing information to the logs:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">miscutils.timer</span> <span class=\"kn\">import</span> <span class=\"n\">timer</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">structlog</span>\n\n<span class=\"nd\">@timer</span><span class=\"p\">(</span><span class=\"n\">structlog</span><span class=\"o\">.</span><span class=\"n\">get_logger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">))</span>\n<span class=\"k\">def</span> <span class=\"nf\">some_function</span><span class=\"p\">():</span>\n    <span class=\"k\">pass</span>\n</pre>\n<h3>Create a namespace relative patch</h3>\n<p>Create namespace relative patches:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">some_package.sub_package.another_package</span> <span class=\"k\">as</span> <span class=\"nn\">under_test</span>\n<span class=\"kn\">from</span> <span class=\"nn\">miscutils.testing</span> <span class=\"kn\">import</span> <span class=\"n\">relative_patch_maker</span>\n\n<span class=\"n\">patch</span> <span class=\"o\">=</span> <span class=\"n\">relative_patch_maker</span><span class=\"p\">(</span><span class=\"n\">under_test</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">TestStuff</span><span class=\"p\">:</span>\n    <span class=\"c1\">#equivalent to @unittest.mock.patch(\"some_package.sub_package.another_package.something_to_patch\")</span>\n    <span class=\"nd\">@patch</span><span class=\"p\">(</span><span class=\"s2\">\"something_to_patch\"</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">test_something</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">patched</span><span class=\"p\">):</span>\n        <span class=\"n\">under_test</span><span class=\"o\">.</span><span class=\"n\">something</span><span class=\"p\">()</span>\n        <span class=\"n\">patched</span><span class=\"o\">.</span><span class=\"n\">assert_called_once</span><span class=\"p\">()</span>\n\n    <span class=\"c1\">#equivalent to @unittest.mock.patch(\"some_package.sub_package.another_package.something_else_to_patch\")</span>\n    <span class=\"nd\">@patch</span><span class=\"p\">(</span><span class=\"s2\">\"something_else_to_patch\"</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">test_something</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">patched</span><span class=\"p\">):</span>\n        <span class=\"n\">under_test</span><span class=\"o\">.</span><span class=\"n\">something</span><span class=\"p\">()</span>\n        <span class=\"n\">patched</span><span class=\"o\">.</span><span class=\"n\">assert_called_once</span><span class=\"p\">()</span>\n</pre>\n<h2>Testing</h2>\n<p>Testing is done via pytest.</p>\n<pre><code>$ pip install -r requirements.txt\n$ pytest\n</code></pre>\n<p>To get code coverage information, you can run pytest directly.</p>\n<pre><code>$ pip install -r requirements.txt\n$ pytest --cov=src --cov-report=html\n</code></pre>\n<p>This will generate an html coverage report in <code>htmlcov/</code> directory.</p>\n\n          </div>"}, "last_serial": 6366368, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5896d639fd859a2f884342aa031966ea", "sha256": "e65169166db184d9c53ac72a1452e2daa4795cfa2802e40ec9f3b74746fe5f49"}, "downloads": -1, "filename": "misc_utils_py-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5896d639fd859a2f884342aa031966ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8400, "upload_time": "2019-11-11T02:14:23", "upload_time_iso_8601": "2019-11-11T02:14:23.730700Z", "url": "https://files.pythonhosted.org/packages/6d/76/d3e294ea2a4f34aeb239a0a2bb00437b200d7b2a4bf2cc95defef16d57af/misc_utils_py-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b181e5373ed40d0a23396de796461a4", "sha256": "0b3c8e3a5eef65739f62fdf96fe84a8d41541ce20624e7225e7c6166ee287e27"}, "downloads": -1, "filename": "misc-utils-py-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8b181e5373ed40d0a23396de796461a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4257, "upload_time": "2019-11-11T02:14:26", "upload_time_iso_8601": "2019-11-11T02:14:26.170841Z", "url": "https://files.pythonhosted.org/packages/85/ec/b992c9257279dedd2d62bd24bd5473769cae95f593d16fe474354e63b53b/misc-utils-py-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "9eaf48a82429beb9fc6ba8ef4e2171de", "sha256": "06dfc74f4233b071babf9cb14077229277e5cc84368492bf4ae52c890f7d7d3d"}, "downloads": -1, "filename": "misc_utils_py-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9eaf48a82429beb9fc6ba8ef4e2171de", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8429, "upload_time": "2019-11-11T21:25:00", "upload_time_iso_8601": "2019-11-11T21:25:00.327847Z", "url": "https://files.pythonhosted.org/packages/4f/12/998081890c93dddb3459348014c819b9eca94f935f3a7a15c612ca190946/misc_utils_py-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "33502bf97334ab2ebd7d6aa7b151788f", "sha256": "bd0f5569047144e4ff3ddda5b721cb1b84acba0f3a040c62db062ecd2fa98940"}, "downloads": -1, "filename": "misc-utils-py-0.1.1.tar.gz", "has_sig": false, "md5_digest": "33502bf97334ab2ebd7d6aa7b151788f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4293, "upload_time": "2019-11-11T21:25:01", "upload_time_iso_8601": "2019-11-11T21:25:01.944142Z", "url": "https://files.pythonhosted.org/packages/89/8f/3f6dcfae83a923d423f067da676d77d36f29a911681acfd8386a89f09e42/misc-utils-py-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "ed33413053a0a093cbccb0a088a272bb", "sha256": "692fd19d9464d5f1410f24558ec7635aa8bc0dc7e342721db896e60544564177"}, "downloads": -1, "filename": "misc_utils_py-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ed33413053a0a093cbccb0a088a272bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9114, "upload_time": "2019-12-27T18:34:33", "upload_time_iso_8601": "2019-12-27T18:34:33.189284Z", "url": "https://files.pythonhosted.org/packages/d9/b5/c8d0cce6662746773f61e58e36f734f3ebe7efcc687e4f9f32bf88e69ecf/misc_utils_py-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f7235b988e4bb8d27e80a04edaefadd", "sha256": "8f1add16f3173c47ffad919f001a8b445b5b7ce9ec640efaa0cd033a1491ffb6"}, "downloads": -1, "filename": "misc-utils-py-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7f7235b988e4bb8d27e80a04edaefadd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4840, "upload_time": "2019-12-27T18:34:34", "upload_time_iso_8601": "2019-12-27T18:34:34.715483Z", "url": "https://files.pythonhosted.org/packages/68/39/5bd0a61f09286ec75ab9ff1c0e1faf1d520c4d445a2158187a40f5e02a43/misc-utils-py-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ed33413053a0a093cbccb0a088a272bb", "sha256": "692fd19d9464d5f1410f24558ec7635aa8bc0dc7e342721db896e60544564177"}, "downloads": -1, "filename": "misc_utils_py-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ed33413053a0a093cbccb0a088a272bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9114, "upload_time": "2019-12-27T18:34:33", "upload_time_iso_8601": "2019-12-27T18:34:33.189284Z", "url": "https://files.pythonhosted.org/packages/d9/b5/c8d0cce6662746773f61e58e36f734f3ebe7efcc687e4f9f32bf88e69ecf/misc_utils_py-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f7235b988e4bb8d27e80a04edaefadd", "sha256": "8f1add16f3173c47ffad919f001a8b445b5b7ce9ec640efaa0cd033a1491ffb6"}, "downloads": -1, "filename": "misc-utils-py-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7f7235b988e4bb8d27e80a04edaefadd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4840, "upload_time": "2019-12-27T18:34:34", "upload_time_iso_8601": "2019-12-27T18:34:34.715483Z", "url": "https://files.pythonhosted.org/packages/68/39/5bd0a61f09286ec75ab9ff1c0e1faf1d520c4d445a2158187a40f5e02a43/misc-utils-py-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:06 2020"}