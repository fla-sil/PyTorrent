{"info": {"author": "jtara1", "author_email": "alex@solution10.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: 3.5"], "description": "================\nImgur Downloader\n================\n\nThis is a simple Python script that contains a class and command line interface\nthat allows you to download ann images at full resolution with any imgur link, all at once.\n\njtara1 Fork - Features\n----------------------\n\n- Here's some examples of the types of links that are now supported:\n\n - http://imgur.com/FVRUGe2\n - http://imgur.com/FVRUGe2.jpg\n - http://imgur.com/gallery/LHCvGPA\n - http://imgur.com/r/awwnime/W7N6A\n - http://i.imgur.com/j9W9tSi.jpg\n - http://imgur.com/a/SVq41\n - http://i.imgur.com/A61SaA1.gifv\n\n- Name of album folder or image is determined by HTML `<title>` value or passed parameters.\n- Prevents downloading of Imgur `Does Not Exist` image\n  by checking if direct link url got redirected & comparing the bytearrays of the direct link image with that of a local file.\n- Uses album/gallery/image title as folder title that's created and contains image(s) with key appended e.g.::\n\n    We don't have a blue backdrop, just tint the whole photo blue. (SnkkAVU).png\n\n- Add `--print-only` option to print the direct link of the imgur url.\n- Prevents downloading of imgur does not exist image if it is encountered.\n  It is implemented by comparing the bytes of the HTTP request\n  to that of a local imgur dne file in program.\n  This feature is toggleable in `init` parameter.\n\n - Added function `is_imgur_dne_image(self, img_path)`,\n   which returns `True`\n   if the image from `img_path` is the same image as the Imgur does not exist image\n   and return `False` otherwise.\n\n - Added function `are_files_equal(self, file1, file2)`,\n   which compares the bytes and returns `True` if the bytes are equal, and return `False` otherwise\n\n.. code:: python\n\n ImgurDownloader(\n     'http://i.imgur.com/removed.png', delete_dne=True, debug=True\n ).save_images()\n\n- Downloads imgur links with .gifv extension as a mp4 file\n\n.. code:: python\n\n ImgurDownloader('http://i.imgur.com/A61SaA1.gifv').save_images()\n\n* `save_images` & `direct_download` methods now return tuple of two integers.\n  The first integer represent successful downloads\n  and the second represent skipped download (either failed or Imgur DNE detected).\n  For example the value on the the last line of the output is what's returned from `save_images` method:\n\n.. code:: python\n\n # Code ran (url is an imgur Album with 5 images):\n print(\n     imguralbum.ImgurDownloader(\n         url, dir1, file_name=rand_name, debug=False\n     ).save_images()\n )\n # output: (5, 0)\n\n\nInit function parameter changes\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Second optional parameter, `dir_download=os.getcwd()`,\n  which allows for specific directory to download to (not adapted for cli), e.g.:\n\n.. code:: python\n\n ImgurDownloader('http://imgur.com/SnkkAVU', '/home/user/Downloads/')\n\n- Third optional parameter, `file_name=''`,\n  which allows user to specify name of file if input is single image\n  or folder if input is album.\n  Note this takes priority over the imgur key and the album webpage title e.g.:\n\n.. code:: python\n\n ImgurDownloader(\n     'http://imgur.com/SnkkAVU', '/home/user/Downloads/', 'my-img')\n\n- Fourth optional parameter, `delete_dne=True`,\n  which checks each image downloaded and deletes it if its bytes match that of imgur-dne.png, e.g.:\n\n.. code:: python\n\n ImgurDownloader(\n     'http://imgur.com/SnkkAVU', '/home/user/Downloads/', 'my-img', True)\n\n- Fifth optional parameter, debug=False,\n  which prints a number of variables throughout the code as it runs\n\n.. code:: python\n\n ImgurDownloader(\n     'http://imgur.com/SnkkAVU', '/home/user/Downloads/', 'my-img', True, True)\n\n\nRequirements\n------------\n\nPython >= 3.3\n\nCommand Line Usage\n------------------\n\n.. code:: bash\n\n $ imgur_downloader [album URL] [folder to save to]\n\nDownload all images from an album into the folder /Users/alex/images/downloaded\n\n.. code:: bash\n\n $ imgur_downloader http://imgur.com/a/uOOju /Users/alex/images/downloaded\n\nDownloads all images and puts them into an album in the current directory called \"uOOju\"\n\n.. code:: bash\n\n $ imgur_downloader http://imgur.com/a/uOOju\n\n\nIt can also be used with downloader such as `wget` using `--print-only` option.\n\n.. code:: bash\n\n $ imgur_downloader --print-only http://imgur.com/a/SVq41 | xargs wget\n\n\nClass Usage\n-----------\n\nThe class allows you to download imgur albums in your own Python programs without going\nthrough the command line. Here's an example of it's usage:\n\n.. code:: python\n\n downloader = ImgurDownloader(\"http://imgur.com/a/uOOju\")\n print(\"This albums has {} images\".format(downloader.num_images()))\n downloader.save_images()\n\nCallbacks\n^^^^^^^^^\n\nYou can hook into the classes process through a couple of callbacks:\n\n.. code:: python\n\n downloader.on_image_download()\n downloader.on_complete()\n\nYou can see what params and such your callback functions get by looking at the docblocks\nfor the on_* functions in the .py file.\n\nFull docs\n---------\n\nThe whole shebang, class and CLI is fully documented using string-docblock things in the single .py file\nso please read through that rather than rely on this readme which could drift out of date.\n\nLicense\n-------\n\nMIT\n\nCredits\n-------\n\nOriginally written by `Alex Gisby`_ (`@alexgisby`_)\n\nWith `Contributions from these amazing people`_!)\n\n.. _Alex Gisby: https://github.com/alexgisby\n.. _@alexgisby: http://twitter.com/alexgisby\n.. _Contributions from these amazing people: https://github.com/jtara1/imgur-downloader/graphs/contributors", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jtara1/imgur_downloader", "keywords": "imgur,downloader", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "imgur-downloader", "package_url": "https://pypi.org/project/imgur-downloader/", "platform": "", "project_url": "https://pypi.org/project/imgur-downloader/", "project_urls": {"Homepage": "https://github.com/jtara1/imgur_downloader"}, "release_url": "https://pypi.org/project/imgur-downloader/0.2.2/", "requires_dist": null, "requires_python": "", "summary": "Python script/class to download an entire Imgur album in  one go into a folder of your choice", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a simple Python script that contains a class and command line interface\nthat allows you to download ann images at full resolution with any imgur link, all at once.</p>\n<div id=\"jtara1-fork-features\">\n<h2>jtara1 Fork - Features</h2>\n<ul>\n<li>Here\u2019s some examples of the types of links that are now supported:</li>\n</ul>\n<blockquote>\n<ul>\n<li><a href=\"http://imgur.com/FVRUGe2\" rel=\"nofollow\">http://imgur.com/FVRUGe2</a></li>\n<li><a href=\"http://imgur.com/FVRUGe2.jpg\" rel=\"nofollow\">http://imgur.com/FVRUGe2.jpg</a></li>\n<li><a href=\"http://imgur.com/gallery/LHCvGPA\" rel=\"nofollow\">http://imgur.com/gallery/LHCvGPA</a></li>\n<li><a href=\"http://imgur.com/r/awwnime/W7N6A\" rel=\"nofollow\">http://imgur.com/r/awwnime/W7N6A</a></li>\n<li><a href=\"http://i.imgur.com/j9W9tSi.jpg\" rel=\"nofollow\">http://i.imgur.com/j9W9tSi.jpg</a></li>\n<li><a href=\"http://imgur.com/a/SVq41\" rel=\"nofollow\">http://imgur.com/a/SVq41</a></li>\n<li><a href=\"http://i.imgur.com/A61SaA1.gifv\" rel=\"nofollow\">http://i.imgur.com/A61SaA1.gifv</a></li>\n</ul>\n</blockquote>\n<ul>\n<li><p>Name of album folder or image is determined by HTML <cite>&lt;title&gt;</cite> value or passed parameters.</p>\n</li>\n<li><p>Prevents downloading of Imgur <cite>Does Not Exist</cite> image\nby checking if direct link url got redirected &amp; comparing the bytearrays of the direct link image with that of a local file.</p>\n</li>\n<li><p>Uses album/gallery/image title as folder title that\u2019s created and contains image(s) with key appended e.g.:</p>\n<pre>We don't have a blue backdrop, just tint the whole photo blue. (SnkkAVU).png\n</pre>\n</li>\n<li><p>Add <cite>\u2013print-only</cite> option to print the direct link of the imgur url.</p>\n</li>\n<li><p>Prevents downloading of imgur does not exist image if it is encountered.\nIt is implemented by comparing the bytes of the HTTP request\nto that of a local imgur dne file in program.\nThis feature is toggleable in <cite>init</cite> parameter.</p>\n</li>\n</ul>\n<blockquote>\n<ul>\n<li>Added function <cite>is_imgur_dne_image(self, img_path)</cite>,\nwhich returns <cite>True</cite>\nif the image from <cite>img_path</cite> is the same image as the Imgur does not exist image\nand return <cite>False</cite> otherwise.</li>\n<li>Added function <cite>are_files_equal(self, file1, file2)</cite>,\nwhich compares the bytes and returns <cite>True</cite> if the bytes are equal, and return <cite>False</cite> otherwise</li>\n</ul>\n</blockquote>\n<pre><span class=\"n\">ImgurDownloader</span><span class=\"p\">(</span>\n    <span class=\"s1\">'http://i.imgur.com/removed.png'</span><span class=\"p\">,</span> <span class=\"n\">delete_dne</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">save_images</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li>Downloads imgur links with .gifv extension as a mp4 file</li>\n</ul>\n<pre><span class=\"n\">ImgurDownloader</span><span class=\"p\">(</span><span class=\"s1\">'http://i.imgur.com/A61SaA1.gifv'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">save_images</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li><cite>save_images</cite> &amp; <cite>direct_download</cite> methods now return tuple of two integers.\nThe first integer represent successful downloads\nand the second represent skipped download (either failed or Imgur DNE detected).\nFor example the value on the the last line of the output is what\u2019s returned from <cite>save_images</cite> method:</li>\n</ul>\n<pre><span class=\"c1\"># Code ran (url is an imgur Album with 5 images):</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span>\n    <span class=\"n\">imguralbum</span><span class=\"o\">.</span><span class=\"n\">ImgurDownloader</span><span class=\"p\">(</span>\n        <span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">dir1</span><span class=\"p\">,</span> <span class=\"n\">file_name</span><span class=\"o\">=</span><span class=\"n\">rand_name</span><span class=\"p\">,</span> <span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n    <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">save_images</span><span class=\"p\">()</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># output: (5, 0)</span>\n</pre>\n<div id=\"init-function-parameter-changes\">\n<h3>Init function parameter changes</h3>\n<ul>\n<li>Second optional parameter, <cite>dir_download=os.getcwd()</cite>,\nwhich allows for specific directory to download to (not adapted for cli), e.g.:</li>\n</ul>\n<pre><span class=\"n\">ImgurDownloader</span><span class=\"p\">(</span><span class=\"s1\">'http://imgur.com/SnkkAVU'</span><span class=\"p\">,</span> <span class=\"s1\">'/home/user/Downloads/'</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Third optional parameter, <cite>file_name=\u2019\u2019</cite>,\nwhich allows user to specify name of file if input is single image\nor folder if input is album.\nNote this takes priority over the imgur key and the album webpage title e.g.:</li>\n</ul>\n<pre><span class=\"n\">ImgurDownloader</span><span class=\"p\">(</span>\n    <span class=\"s1\">'http://imgur.com/SnkkAVU'</span><span class=\"p\">,</span> <span class=\"s1\">'/home/user/Downloads/'</span><span class=\"p\">,</span> <span class=\"s1\">'my-img'</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Fourth optional parameter, <cite>delete_dne=True</cite>,\nwhich checks each image downloaded and deletes it if its bytes match that of imgur-dne.png, e.g.:</li>\n</ul>\n<pre><span class=\"n\">ImgurDownloader</span><span class=\"p\">(</span>\n    <span class=\"s1\">'http://imgur.com/SnkkAVU'</span><span class=\"p\">,</span> <span class=\"s1\">'/home/user/Downloads/'</span><span class=\"p\">,</span> <span class=\"s1\">'my-img'</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Fifth optional parameter, debug=False,\nwhich prints a number of variables throughout the code as it runs</li>\n</ul>\n<pre><span class=\"n\">ImgurDownloader</span><span class=\"p\">(</span>\n    <span class=\"s1\">'http://imgur.com/SnkkAVU'</span><span class=\"p\">,</span> <span class=\"s1\">'/home/user/Downloads/'</span><span class=\"p\">,</span> <span class=\"s1\">'my-img'</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>Python &gt;= 3.3</p>\n</div>\n<div id=\"command-line-usage\">\n<h2>Command Line Usage</h2>\n<pre>$ imgur_downloader <span class=\"o\">[</span>album URL<span class=\"o\">]</span> <span class=\"o\">[</span>folder to save to<span class=\"o\">]</span>\n</pre>\n<p>Download all images from an album into the folder /Users/alex/images/downloaded</p>\n<pre>$ imgur_downloader http://imgur.com/a/uOOju /Users/alex/images/downloaded\n</pre>\n<p>Downloads all images and puts them into an album in the current directory called \u201cuOOju\u201d</p>\n<pre>$ imgur_downloader http://imgur.com/a/uOOju\n</pre>\n<p>It can also be used with downloader such as <cite>wget</cite> using <cite>\u2013print-only</cite> option.</p>\n<pre>$ imgur_downloader --print-only http://imgur.com/a/SVq41 <span class=\"p\">|</span> xargs wget\n</pre>\n</div>\n<div id=\"class-usage\">\n<h2>Class Usage</h2>\n<p>The class allows you to download imgur albums in your own Python programs without going\nthrough the command line. Here\u2019s an example of it\u2019s usage:</p>\n<pre><span class=\"n\">downloader</span> <span class=\"o\">=</span> <span class=\"n\">ImgurDownloader</span><span class=\"p\">(</span><span class=\"s2\">\"http://imgur.com/a/uOOju\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"This albums has </span><span class=\"si\">{}</span><span class=\"s2\"> images\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">downloader</span><span class=\"o\">.</span><span class=\"n\">num_images</span><span class=\"p\">()))</span>\n<span class=\"n\">downloader</span><span class=\"o\">.</span><span class=\"n\">save_images</span><span class=\"p\">()</span>\n</pre>\n<div id=\"callbacks\">\n<h3>Callbacks</h3>\n<p>You can hook into the classes process through a couple of callbacks:</p>\n<pre><span class=\"n\">downloader</span><span class=\"o\">.</span><span class=\"n\">on_image_download</span><span class=\"p\">()</span>\n<span class=\"n\">downloader</span><span class=\"o\">.</span><span class=\"n\">on_complete</span><span class=\"p\">()</span>\n</pre>\n<p>You can see what params and such your callback functions get by looking at the docblocks\nfor the on_* functions in the .py file.</p>\n</div>\n</div>\n<div id=\"full-docs\">\n<h2>Full docs</h2>\n<p>The whole shebang, class and CLI is fully documented using string-docblock things in the single .py file\nso please read through that rather than rely on this readme which could drift out of date.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>MIT</p>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Originally written by <a href=\"https://github.com/alexgisby\" rel=\"nofollow\">Alex Gisby</a> (<a href=\"http://twitter.com/alexgisby\" rel=\"nofollow\">@alexgisby</a>)</p>\n<p>With <a href=\"https://github.com/jtara1/imgur-downloader/graphs/contributors\" rel=\"nofollow\">Contributions from these amazing people</a>!)</p>\n</div>\n\n          </div>"}, "last_serial": 4956743, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d2ecd46331a1e6ca876aeacced450500", "sha256": "1487ecdaa30ae567da136fd8d1ad76b1e06d301ebe8875b48e0eb2d4721038e3"}, "downloads": -1, "filename": "imgur_downloader-0.1.0-py3.5.egg", "has_sig": false, "md5_digest": "d2ecd46331a1e6ca876aeacced450500", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 35798, "upload_time": "2017-12-24T19:54:22", "upload_time_iso_8601": "2017-12-24T19:54:22.879374Z", "url": "https://files.pythonhosted.org/packages/a1/43/8af1cbc790f84a3e4f3ea594b91a3db532ff103f41092d3b7227e5812e31/imgur_downloader-0.1.0-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "58d79fac05aaf1768497c0bea2716ec5", "sha256": "9d2695060bcf6a6e7810674872b04235e2bb391474faf8018c4f6af47e3ae603"}, "downloads": -1, "filename": "imgur_downloader-0.1.0.tar.gz", "has_sig": false, "md5_digest": "58d79fac05aaf1768497c0bea2716ec5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13891, "upload_time": "2017-12-24T19:54:24", "upload_time_iso_8601": "2017-12-24T19:54:24.230721Z", "url": "https://files.pythonhosted.org/packages/c1/2e/9993d91c70860e6d09a67d0fffc3a0fb76cde0d355f4dc384c4a894e025d/imgur_downloader-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "204a3bbd7a35959e093a32bce27200ff", "sha256": "0354d4e29f4c017718a9429cdb1fd08069876252a81be65616becd0076352e84"}, "downloads": -1, "filename": "imgur_downloader-0.1.1.tar.gz", "has_sig": false, "md5_digest": "204a3bbd7a35959e093a32bce27200ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14787, "upload_time": "2017-12-24T22:35:17", "upload_time_iso_8601": "2017-12-24T22:35:17.349316Z", "url": "https://files.pythonhosted.org/packages/ba/c0/dc586142ecbdf7eb2e8981a65d5b1cdae077123664d6281ece7a3f77b238/imgur_downloader-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "cccccc82319e519d157d55f2cb6e56a2", "sha256": "65e12cdb513766722cf18b286135a311d6c72053ced446b0c1b489bb6632fc1e"}, "downloads": -1, "filename": "imgur_downloader-0.1.2-py3.5.egg", "has_sig": false, "md5_digest": "cccccc82319e519d157d55f2cb6e56a2", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 23821, "upload_time": "2017-12-24T23:09:30", "upload_time_iso_8601": "2017-12-24T23:09:30.743029Z", "url": "https://files.pythonhosted.org/packages/1c/d1/65db2a6adae79dbc782b6e97a7155b3d0a32c0ec5d598764775099a34c45/imgur_downloader-0.1.2-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5dedd5932d721400247d597b31c582b", "sha256": "4e1e5994fbb36f70521ad4ceffc8c96ed444657c6e6516bb29a0c25c255b41aa"}, "downloads": -1, "filename": "imgur_downloader-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b5dedd5932d721400247d597b31c582b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14786, "upload_time": "2017-12-24T23:09:32", "upload_time_iso_8601": "2017-12-24T23:09:32.377901Z", "url": "https://files.pythonhosted.org/packages/2c/13/3cc90e603558fa62eaabe08d273bc9940cece9a95c66b235fd563de989b7/imgur_downloader-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "f51fc3bb1b8d0f8dc3bb33c9d41a512c", "sha256": "a9fade27124ddd5747e9d0a4d51ecc1049e72873429278251bc36aca2b57ce58"}, "downloads": -1, "filename": "imgur_downloader-0.1.3.tar.gz", "has_sig": false, "md5_digest": "f51fc3bb1b8d0f8dc3bb33c9d41a512c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15128, "upload_time": "2017-12-26T01:34:42", "upload_time_iso_8601": "2017-12-26T01:34:42.051888Z", "url": "https://files.pythonhosted.org/packages/e4/8a/cf0329045f1381b743514f7ef853fd8cc81b75b5afc30496eddc3ebdb4e2/imgur_downloader-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "3d2bb557b7b22b49728fb105b39d67f9", "sha256": "d51b98d9a90f4e1bb738fd2d13a5f010ed79c7a3717ba266ccf0f02e903a072b"}, "downloads": -1, "filename": "imgur_downloader-0.1.4.tar.gz", "has_sig": false, "md5_digest": "3d2bb557b7b22b49728fb105b39d67f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15118, "upload_time": "2017-12-26T20:25:15", "upload_time_iso_8601": "2017-12-26T20:25:15.373103Z", "url": "https://files.pythonhosted.org/packages/0c/b0/af2f1410ecbde471bbc6f531d56a4c70c0c78aa4d4d62edfc8e8e6d8d0e5/imgur_downloader-0.1.4.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "610832bf025300ba16588e58bd6a49d4", "sha256": "522836644530b788db7faa647d502c990850b2ba378d7a9182d34c7a98a64f48"}, "downloads": -1, "filename": "imgur_downloader-0.1.6.tar.gz", "has_sig": false, "md5_digest": "610832bf025300ba16588e58bd6a49d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17328, "upload_time": "2017-12-26T22:57:56", "upload_time_iso_8601": "2017-12-26T22:57:56.089231Z", "url": "https://files.pythonhosted.org/packages/52/ab/6c7008116473db7062b50632182d6d14c50e8c3df4ca4348d53bcd446712/imgur_downloader-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "4ffedd685efb600f8826ac77ab7cabb9", "sha256": "4c0ae67d7e4ef0d4d3e112de87f9966257bb7dbd85923f931a02df57ecee59d7"}, "downloads": -1, "filename": "imgur_downloader-0.1.7.tar.gz", "has_sig": false, "md5_digest": "4ffedd685efb600f8826ac77ab7cabb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17335, "upload_time": "2018-01-11T21:13:45", "upload_time_iso_8601": "2018-01-11T21:13:45.619476Z", "url": "https://files.pythonhosted.org/packages/5e/25/fe20813b8fbdee96fb1fff60c90f8568b97a5bf14660c1e622838b49f304/imgur_downloader-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "491321c8d5b21f121899a0e2bb667cb3", "sha256": "3fec1ed1a1a458b057b3943a29e3b72180a9290e42e27018c69954ac6039b832"}, "downloads": -1, "filename": "imgur_downloader-0.1.8.tar.gz", "has_sig": false, "md5_digest": "491321c8d5b21f121899a0e2bb667cb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17152, "upload_time": "2018-10-20T22:29:13", "upload_time_iso_8601": "2018-10-20T22:29:13.626933Z", "url": "https://files.pythonhosted.org/packages/fa/d6/346e6b12cee521b4f4cd373a93b6339c6ea75c568974167ddaba63b48df3/imgur_downloader-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "fd6b0ceb9cbc7a8855cc6d96c9f792fb", "sha256": "6f22003f7d028995595ed59c116a70f435ff01ff7fb1458a577f36f4807d85dd"}, "downloads": -1, "filename": "imgur_downloader-0.1.9.tar.gz", "has_sig": false, "md5_digest": "fd6b0ceb9cbc7a8855cc6d96c9f792fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15732, "upload_time": "2018-10-29T00:53:17", "upload_time_iso_8601": "2018-10-29T00:53:17.017140Z", "url": "https://files.pythonhosted.org/packages/ce/a7/aef69b36a1c0f3b859aab9319e6ac8b280b22958ffb5c8cd338f1696751c/imgur_downloader-0.1.9.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "a60d81ebee2759330833695022334f00", "sha256": "a9fa9ddf9ce8fdcffa9a9332f51b49ef4c6d4df5e4686e727496ec6439fe782e"}, "downloads": -1, "filename": "imgur_downloader-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a60d81ebee2759330833695022334f00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17199, "upload_time": "2018-11-07T05:29:41", "upload_time_iso_8601": "2018-11-07T05:29:41.924648Z", "url": "https://files.pythonhosted.org/packages/42/75/d7ca62434c1d3072247e94d21fde859fc544a56bb4924b46b12170cddb3d/imgur_downloader-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "a3c3314a3a54016772221671529fc789", "sha256": "42b2a650cb7855cff1819ea88d4dd14b44a0c961d0e193e4e9160137ed27a53e"}, "downloads": -1, "filename": "imgur_downloader-0.2.1.tar.gz", "has_sig": false, "md5_digest": "a3c3314a3a54016772221671529fc789", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15890, "upload_time": "2019-03-11T00:41:49", "upload_time_iso_8601": "2019-03-11T00:41:49.453974Z", "url": "https://files.pythonhosted.org/packages/40/a2/850d11eddd26cbd7cd0a1320c36d7a07fff0029cbcf98f8f61bf1ac4a5b1/imgur_downloader-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "9da776300f7634f47f733dc6ccd49c87", "sha256": "42c5bcbe19142f027028c126c80625685958009d66404d9d34d6820e25440568"}, "downloads": -1, "filename": "imgur_downloader-0.2.2.tar.gz", "has_sig": false, "md5_digest": "9da776300f7634f47f733dc6ccd49c87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15918, "upload_time": "2019-03-19T02:56:02", "upload_time_iso_8601": "2019-03-19T02:56:02.915352Z", "url": "https://files.pythonhosted.org/packages/63/8e/397eb615f90c93590bee33e1fb2955c4300428384cfe2ece5766a8b1323e/imgur_downloader-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9da776300f7634f47f733dc6ccd49c87", "sha256": "42c5bcbe19142f027028c126c80625685958009d66404d9d34d6820e25440568"}, "downloads": -1, "filename": "imgur_downloader-0.2.2.tar.gz", "has_sig": false, "md5_digest": "9da776300f7634f47f733dc6ccd49c87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15918, "upload_time": "2019-03-19T02:56:02", "upload_time_iso_8601": "2019-03-19T02:56:02.915352Z", "url": "https://files.pythonhosted.org/packages/63/8e/397eb615f90c93590bee33e1fb2955c4300428384cfe2ece5766a8b1323e/imgur_downloader-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:40 2020"}