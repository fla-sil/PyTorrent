{"info": {"author": "Michael Freeborn", "author_email": "michaelfreeborn1@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: AsyncIO", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Internet :: WWW/HTTP :: HTTP Servers", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "FastAPI-SQLAlchemy\n==================\n\nFastAPI-SQLAlchemy provides a simple integration between FastAPI_ and SQLAlchemy_ in your application. It gives access to useful helpers to facilitate the completion of common tasks.\n\n\nInstalling\n----------\n\nInstall and update using pip_:\n\n.. code-block:: text\n\n  $ pip install fastapi-sqlalchemy\n\n\nExamples\n--------\n\nUsage inside of a route\n^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    from fastapi import FastAPI\n    from fastapi_sqlalchemy import DBSessionMiddleware  # middleware helper\n    from fastapi_sqlalchemy import db  # an object to provide global access to a database session\n\n    from app.models import User\n\n    app = FastAPI()\n\n    app.add_middleware(DBSessionMiddleware, db_url=\"sqlite://\")\n\n    # once the middleware is applied, any route can then access the database session \n    # from the global ``db``\n\n    @app.get(\"/users\")\n    def get_users():\n        users = db.session.query(User).all()\n\n        return users\n\nNote that the session object provided by ``db.session`` is based on the Python3.7+ ``ContextVar``. This means that\neach session is linked to the individual request context in which it was created.\n\nUsage outside of a route\n^^^^^^^^^^^^^^^^^^^^^^^^\n\nSometimes it is useful to be able to access the database outside the context of a request, such as in scheduled tasks which run in the background:\n\n.. code-block:: python\n\n    import pytz\n    from apscheduler.schedulers.asyncio import AsyncIOScheduler  # other schedulers are available\n    from fastapi import FastAPI\n    from fastapi_sqlalchemy import db\n\n    from app.models import User, UserCount\n\n    app = FastAPI()\n\n    app.add_middleware(DBSessionMiddleware, db_url=\"sqlite://\")\n\n\n    @app.on_event('startup')\n    async def startup_event():\n        scheduler = AsyncIOScheduler(timezone=pytz.utc)\n        scheduler.start()\n        scheduler.add_job(count_users_task, \"cron\", hour=0)  # runs every night at midnight\n\n\n    def count_users_task():\n        \"\"\"Count the number of users in the database and save it into the user_counts table.\"\"\"\n\n        # we are outside of a request context, therefore we cannot rely on ``DBSessionMiddleware``\n        # to create a database session for us. Instead, we can use the same ``db`` object and \n        # use it as a context manager, like so:\n\n        with db():\n            user_count = db.session.query(User).count()\n\n            db.session.add(UserCount(user_count))\n            db.session.commit()\n\n        # no longer able to access a database session once the db() context manager has ended\n\n        return users\n\n\n.. _FastAPI: https://github.com/tiangolo/fastapi\n.. _SQLAlchemy: https://github.com/pallets/flask-sqlalchemy\n.. _pip: https://pip.pypa.io/en/stable/quickstart/\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mfreeborn/fastapi-sqlalchemy", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "FastAPI-SQLAlchemy", "package_url": "https://pypi.org/project/FastAPI-SQLAlchemy/", "platform": "", "project_url": "https://pypi.org/project/FastAPI-SQLAlchemy/", "project_urls": {"Code": "https://github.com/mfreeborn/fastapi-sqlalchemy", "Homepage": "https://github.com/mfreeborn/fastapi-sqlalchemy", "Issue tracker": "https://github.com/mfreeborn/fastapi-sqlalchemy/issues"}, "release_url": "https://pypi.org/project/FastAPI-SQLAlchemy/0.1.3/", "requires_dist": ["starlette (<=0.12.9,>=0.12.9)", "SQLAlchemy (>=1.2)"], "requires_python": ">=3.7", "summary": "Adds simple SQLAlchemy support to FastAPI", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>FastAPI-SQLAlchemy provides a simple integration between <a href=\"https://github.com/tiangolo/fastapi\" rel=\"nofollow\">FastAPI</a> and <a href=\"https://github.com/pallets/flask-sqlalchemy\" rel=\"nofollow\">SQLAlchemy</a> in your application. It gives access to useful helpers to facilitate the completion of common tasks.</p>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>Install and update using <a href=\"https://pip.pypa.io/en/stable/quickstart/\" rel=\"nofollow\">pip</a>:</p>\n<pre>$ pip install fastapi-sqlalchemy\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<div id=\"usage-inside-of-a-route\">\n<h3>Usage inside of a route</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fastapi</span> <span class=\"kn\">import</span> <span class=\"n\">FastAPI</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fastapi_sqlalchemy</span> <span class=\"kn\">import</span> <span class=\"n\">DBSessionMiddleware</span>  <span class=\"c1\"># middleware helper</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fastapi_sqlalchemy</span> <span class=\"kn\">import</span> <span class=\"n\">db</span>  <span class=\"c1\"># an object to provide global access to a database session</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">app.models</span> <span class=\"kn\">import</span> <span class=\"n\">User</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">FastAPI</span><span class=\"p\">()</span>\n\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">add_middleware</span><span class=\"p\">(</span><span class=\"n\">DBSessionMiddleware</span><span class=\"p\">,</span> <span class=\"n\">db_url</span><span class=\"o\">=</span><span class=\"s2\">\"sqlite://\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># once the middleware is applied, any route can then access the database session</span>\n<span class=\"c1\"># from the global ``db``</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/users\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_users</span><span class=\"p\">():</span>\n    <span class=\"n\">users</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">users</span>\n</pre>\n<p>Note that the session object provided by <tt>db.session</tt> is based on the Python3.7+ <tt>ContextVar</tt>. This means that\neach session is linked to the individual request context in which it was created.</p>\n</div>\n<div id=\"usage-outside-of-a-route\">\n<h3>Usage outside of a route</h3>\n<p>Sometimes it is useful to be able to access the database outside the context of a request, such as in scheduled tasks which run in the background:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pytz</span>\n<span class=\"kn\">from</span> <span class=\"nn\">apscheduler.schedulers.asyncio</span> <span class=\"kn\">import</span> <span class=\"n\">AsyncIOScheduler</span>  <span class=\"c1\"># other schedulers are available</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fastapi</span> <span class=\"kn\">import</span> <span class=\"n\">FastAPI</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fastapi_sqlalchemy</span> <span class=\"kn\">import</span> <span class=\"n\">db</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">app.models</span> <span class=\"kn\">import</span> <span class=\"n\">User</span><span class=\"p\">,</span> <span class=\"n\">UserCount</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">FastAPI</span><span class=\"p\">()</span>\n\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">add_middleware</span><span class=\"p\">(</span><span class=\"n\">DBSessionMiddleware</span><span class=\"p\">,</span> <span class=\"n\">db_url</span><span class=\"o\">=</span><span class=\"s2\">\"sqlite://\"</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">on_event</span><span class=\"p\">(</span><span class=\"s1\">'startup'</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">startup_event</span><span class=\"p\">():</span>\n    <span class=\"n\">scheduler</span> <span class=\"o\">=</span> <span class=\"n\">AsyncIOScheduler</span><span class=\"p\">(</span><span class=\"n\">timezone</span><span class=\"o\">=</span><span class=\"n\">pytz</span><span class=\"o\">.</span><span class=\"n\">utc</span><span class=\"p\">)</span>\n    <span class=\"n\">scheduler</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n    <span class=\"n\">scheduler</span><span class=\"o\">.</span><span class=\"n\">add_job</span><span class=\"p\">(</span><span class=\"n\">count_users_task</span><span class=\"p\">,</span> <span class=\"s2\">\"cron\"</span><span class=\"p\">,</span> <span class=\"n\">hour</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>  <span class=\"c1\"># runs every night at midnight</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">count_users_task</span><span class=\"p\">():</span>\n    <span class=\"sd\">\"\"\"Count the number of users in the database and save it into the user_counts table.\"\"\"</span>\n\n    <span class=\"c1\"># we are outside of a request context, therefore we cannot rely on ``DBSessionMiddleware``</span>\n    <span class=\"c1\"># to create a database session for us. Instead, we can use the same ``db`` object and</span>\n    <span class=\"c1\"># use it as a context manager, like so:</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">db</span><span class=\"p\">():</span>\n        <span class=\"n\">user_count</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">()</span>\n\n        <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">UserCount</span><span class=\"p\">(</span><span class=\"n\">user_count</span><span class=\"p\">))</span>\n        <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># no longer able to access a database session once the db() context manager has ended</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">users</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6857167, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "50cda2d565e017f677ecc24690e0f3ac", "sha256": "8999689d6f5baa448b7720100216743be3ed716e68dc22666ce6d003812a0a3f"}, "downloads": -1, "filename": "FastAPI_SQLAlchemy-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "50cda2d565e017f677ecc24690e0f3ac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5242, "upload_time": "2019-11-10T18:16:23", "upload_time_iso_8601": "2019-11-10T18:16:23.751182Z", "url": "https://files.pythonhosted.org/packages/e5/75/0cef05be963f439a0d2ead94628dc5ad8d570c74009f396c74118e7b6bd0/FastAPI_SQLAlchemy-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "789d0227e9e114d55a120493a33a996f", "sha256": "f37c45ecc18ab96f4ea455b83990723423fa2560e715fb3dd3c57fdea15a7406"}, "downloads": -1, "filename": "FastAPI-SQLAlchemy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "789d0227e9e114d55a120493a33a996f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4095, "upload_time": "2019-11-10T18:16:26", "upload_time_iso_8601": "2019-11-10T18:16:26.111020Z", "url": "https://files.pythonhosted.org/packages/0d/54/cdb52eee8707387378d75dda49399b9c5331cf3070756ab8e4eb47143beb/FastAPI-SQLAlchemy-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "5533a76e49c63b7264f752a98848cef9", "sha256": "00f2bab2349e491262aaef6bb098105f00cc2218e8190c34139f7730686209c8"}, "downloads": -1, "filename": "FastAPI_SQLAlchemy-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5533a76e49c63b7264f752a98848cef9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 5242, "upload_time": "2019-11-10T21:06:21", "upload_time_iso_8601": "2019-11-10T21:06:21.852431Z", "url": "https://files.pythonhosted.org/packages/1e/f8/3f0b48c6537faccbc207137f1377a093443e28615f5be1ccbfe37b061618/FastAPI_SQLAlchemy-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "acf33bd8025921a5751582fea6035853", "sha256": "e8ddf9fb9d53b321eee841183d2b3b7e5b4e27fe1ce85696e5a814aa01d509a1"}, "downloads": -1, "filename": "FastAPI-SQLAlchemy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "acf33bd8025921a5751582fea6035853", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 4090, "upload_time": "2019-11-10T21:06:24", "upload_time_iso_8601": "2019-11-10T21:06:24.092272Z", "url": "https://files.pythonhosted.org/packages/56/08/8e090c0719b6ee2a815f71a556a8986b0b658680f19ef3a5d8366898b02e/FastAPI-SQLAlchemy-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "18d869e62c62c147cf2a8ecd5c195d9f", "sha256": "f276e7865e871d946365ba2b3eeb7d2f92792381d628c6a635abc6c7394c053d"}, "downloads": -1, "filename": "FastAPI_SQLAlchemy-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "18d869e62c62c147cf2a8ecd5c195d9f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 5328, "upload_time": "2020-03-04T18:11:11", "upload_time_iso_8601": "2020-03-04T18:11:11.462404Z", "url": "https://files.pythonhosted.org/packages/d6/67/aa44d943c259138891c7b6a7382b74a84603dc743e4c288f9700a4a07917/FastAPI_SQLAlchemy-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "84f5639d228dc9870aaddc75f3426cf0", "sha256": "8f34389ed645f602dde5c06de62b1ae68fe136248866f3f76838ed2d17b96955"}, "downloads": -1, "filename": "FastAPI-SQLAlchemy-0.1.2.tar.gz", "has_sig": false, "md5_digest": "84f5639d228dc9870aaddc75f3426cf0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3904, "upload_time": "2020-03-04T18:09:49", "upload_time_iso_8601": "2020-03-04T18:09:49.227332Z", "url": "https://files.pythonhosted.org/packages/77/5a/1f570b32259e39444556f174589dc71f6543f774704eceac2d73ae8e66f4/FastAPI-SQLAlchemy-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "e841acf9655bc0b5b3ae3817124cfb31", "sha256": "1a4505b5a7b15b7aa2f4ed944fbb945fa035614666a8c321c26108e4fd9be10b"}, "downloads": -1, "filename": "FastAPI_SQLAlchemy-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e841acf9655bc0b5b3ae3817124cfb31", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 5350, "upload_time": "2020-03-21T20:56:23", "upload_time_iso_8601": "2020-03-21T20:56:23.705545Z", "url": "https://files.pythonhosted.org/packages/95/dd/1de242184236ba44e5cfad85ac68552a18b4fa681c336d7be4ee714a1500/FastAPI_SQLAlchemy-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b669ac1141aa6cf6c8fb4a8fdf6569e1", "sha256": "6d62f64b074a47af82981084a0b83481103c1af468c37bef04fb12c5bfa7db96"}, "downloads": -1, "filename": "FastAPI-SQLAlchemy-0.1.3.tar.gz", "has_sig": false, "md5_digest": "b669ac1141aa6cf6c8fb4a8fdf6569e1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3940, "upload_time": "2020-03-21T20:56:24", "upload_time_iso_8601": "2020-03-21T20:56:24.627913Z", "url": "https://files.pythonhosted.org/packages/75/c9/6985dfe7cf2c83faf1ccd4540bb1ab36a748c6e476dd3293c7682c56529b/FastAPI-SQLAlchemy-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e841acf9655bc0b5b3ae3817124cfb31", "sha256": "1a4505b5a7b15b7aa2f4ed944fbb945fa035614666a8c321c26108e4fd9be10b"}, "downloads": -1, "filename": "FastAPI_SQLAlchemy-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e841acf9655bc0b5b3ae3817124cfb31", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 5350, "upload_time": "2020-03-21T20:56:23", "upload_time_iso_8601": "2020-03-21T20:56:23.705545Z", "url": "https://files.pythonhosted.org/packages/95/dd/1de242184236ba44e5cfad85ac68552a18b4fa681c336d7be4ee714a1500/FastAPI_SQLAlchemy-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b669ac1141aa6cf6c8fb4a8fdf6569e1", "sha256": "6d62f64b074a47af82981084a0b83481103c1af468c37bef04fb12c5bfa7db96"}, "downloads": -1, "filename": "FastAPI-SQLAlchemy-0.1.3.tar.gz", "has_sig": false, "md5_digest": "b669ac1141aa6cf6c8fb4a8fdf6569e1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3940, "upload_time": "2020-03-21T20:56:24", "upload_time_iso_8601": "2020-03-21T20:56:24.627913Z", "url": "https://files.pythonhosted.org/packages/75/c9/6985dfe7cf2c83faf1ccd4540bb1ab36a748c6e476dd3293c7682c56529b/FastAPI-SQLAlchemy-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:39 2020"}