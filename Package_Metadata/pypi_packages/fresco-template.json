{"info": {"author": "Oliver Cope", "author_email": "oliver@redgecko.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Internet :: WWW/HTTP :: WSGI", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "fresco-template - Templating for Fresco\n=======================================\n\n\nExample usage with Jinja2::\n\n    from fresco import FrescoApp\n    from fresco_template import Jinja2\n    from jinja2 import PackageLoader\n\n    app = FrescoApp()\n    jinja2 = Jinja2(loader=PackageLoader('mypackage', 'template/dir'))\n    jinja2.init_app(app)\n\n\n    @jinja2.contextprocessor\n    def default_context():\n        # Return a dictionary of variables always to be included in the\n        # template context.\n        #\n        # NB the fresco context object and urlfor function are already included\n        # in the template context by default.\n        return {}\n\n    @jinja2.render('page.html')\n    def myview():\n        return {'var': 'value'}\n\n\nSame example with Chameleon::\n\n    from fresco import FrescoApp\n    from fresco_template import Chameleon\n    from chameleon import PageTemplateLoader\n\n    app = FrescoApp()\n\n    loader = PageTemplateLoader(['template/dir'], auto_reload=True)\n    chameleon = Chameleon(loader)\n    chameleon.init_app(app)\n\n\n    @chameleon.contextprocessor\n    def default_context():\n        # Return a dictionary of variables always to be included in the\n        # template context.\n        #\n        # NB the fresco context object and urlfor function are already included\n        # in the template context by default.\n        return {}\n\n    @chameleon.render('page.html')\n    def myview():\n        return {'var': 'value'}\n\n\n0.3.1 (released 2016-11-29)\n---------------------------\n\n- Added support for the\n  `Piglet templating engine <https://pypi.python.org/pypi/piglet>`_.\n\n0.3.0 (released 2015-09-25)\n---------------------------\n\n- Added support for Kajiki\n\n- The ``environment`` variable has had its name changed to ``loader`` and\n  is no longer available directly on the TemplateEnvironment object but\n  via the ``plugin`` property. For example::\n\n    from jinja2 import Environment, FileSystemLoader\n    from fresco_template import Jinja2\n\n    # Old style - BROKEN in 0.3 release:\n    j2 = Jinja2(environment=Environment(FileSystemLoader('templates')))\n    j2.environment.install_gettext_translations(my_translation_module)\n\n    # New style:\n    j2 = Jinja2(Environment(autoescape=True, FileSystemLoader('templates')))\n    j2.plugin.loader.install_gettext_translations(my_translation_module)\n\n- Any custom plugins will need to be rewritten. Refer to any of the default\n  plugins for examples.\n\n0.2.1\n-----\n\n- The ``TemplateContent`` class now calls all context processors on\n  instantiation. This ensures context processors are always called before\n  response headers are sent.\n\n0.2\n---\n\nInitial release\n\n0.1\n---\n\n(unreleased version)\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "Apache", "maintainer": "", "maintainer_email": "", "name": "fresco-template", "package_url": "https://pypi.org/project/fresco-template/", "platform": "", "project_url": "https://pypi.org/project/fresco-template/", "project_urls": null, "release_url": "https://pypi.org/project/fresco-template/0.3.1/", "requires_dist": null, "requires_python": "", "summary": "Template system integration for fresco", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Example usage with Jinja2:</p>\n<pre>from fresco import FrescoApp\nfrom fresco_template import Jinja2\nfrom jinja2 import PackageLoader\n\napp = FrescoApp()\njinja2 = Jinja2(loader=PackageLoader('mypackage', 'template/dir'))\njinja2.init_app(app)\n\n\n@jinja2.contextprocessor\ndef default_context():\n    # Return a dictionary of variables always to be included in the\n    # template context.\n    #\n    # NB the fresco context object and urlfor function are already included\n    # in the template context by default.\n    return {}\n\n@jinja2.render('page.html')\ndef myview():\n    return {'var': 'value'}\n</pre>\n<p>Same example with Chameleon:</p>\n<pre>from fresco import FrescoApp\nfrom fresco_template import Chameleon\nfrom chameleon import PageTemplateLoader\n\napp = FrescoApp()\n\nloader = PageTemplateLoader(['template/dir'], auto_reload=True)\nchameleon = Chameleon(loader)\nchameleon.init_app(app)\n\n\n@chameleon.contextprocessor\ndef default_context():\n    # Return a dictionary of variables always to be included in the\n    # template context.\n    #\n    # NB the fresco context object and urlfor function are already included\n    # in the template context by default.\n    return {}\n\n@chameleon.render('page.html')\ndef myview():\n    return {'var': 'value'}\n</pre>\n<div id=\"released-2016-11-29\">\n<h2>0.3.1 (released 2016-11-29)</h2>\n<ul>\n<li>Added support for the\n<a href=\"https://pypi.python.org/pypi/piglet\" rel=\"nofollow\">Piglet templating engine</a>.</li>\n</ul>\n</div>\n<div id=\"released-2015-09-25\">\n<h2>0.3.0 (released 2015-09-25)</h2>\n<ul>\n<li><p>Added support for Kajiki</p>\n</li>\n<li><p>The <tt>environment</tt> variable has had its name changed to <tt>loader</tt> and\nis no longer available directly on the TemplateEnvironment object but\nvia the <tt>plugin</tt> property. For example:</p>\n<pre>from jinja2 import Environment, FileSystemLoader\nfrom fresco_template import Jinja2\n\n# Old style - BROKEN in 0.3 release:\nj2 = Jinja2(environment=Environment(FileSystemLoader('templates')))\nj2.environment.install_gettext_translations(my_translation_module)\n\n# New style:\nj2 = Jinja2(Environment(autoescape=True, FileSystemLoader('templates')))\nj2.plugin.loader.install_gettext_translations(my_translation_module)\n</pre>\n</li>\n<li><p>Any custom plugins will need to be rewritten. Refer to any of the default\nplugins for examples.</p>\n</li>\n</ul>\n</div>\n<div id=\"id1\">\n<h2>0.2.1</h2>\n<ul>\n<li>The <tt>TemplateContent</tt> class now calls all context processors on\ninstantiation. This ensures context processors are always called before\nresponse headers are sent.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h2>0.2</h2>\n<p>Initial release</p>\n</div>\n<div id=\"id3\">\n<h2>0.1</h2>\n<p>(unreleased version)</p>\n</div>\n\n          </div>"}, "last_serial": 2489447, "releases": {"0": [], "0.2": [{"comment_text": "", "digests": {"md5": "d80bdb433f5f7e044218f813a833b109", "sha256": "b14b1dd18c0bd2c9ca6d5f975bb094a2db031335e65d35823a7252dddc0ad9d0"}, "downloads": -1, "filename": "fresco-template-0.2.tar.gz", "has_sig": false, "md5_digest": "d80bdb433f5f7e044218f813a833b109", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8313, "upload_time": "2015-05-19T11:58:39", "upload_time_iso_8601": "2015-05-19T11:58:39.600329Z", "url": "https://files.pythonhosted.org/packages/49/2d/f6cd43a8332a1d88ef02acfe4afc76986de6f0f44328a1b591184dab5d77/fresco-template-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "d8a09750dbbe61adf76be2b2f54d5311", "sha256": "fd4cea5e81650ab0f31ebf5fc28ff1a1d84fe49762aa03de5ecc6100dbe7aae6"}, "downloads": -1, "filename": "fresco-template-0.2.1.tar.gz", "has_sig": false, "md5_digest": "d8a09750dbbe61adf76be2b2f54d5311", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8573, "upload_time": "2015-06-09T09:04:57", "upload_time_iso_8601": "2015-06-09T09:04:57.833447Z", "url": "https://files.pythonhosted.org/packages/94/01/d68c6a2b3c81f7dc43ff70fc7a51bc12ce1b2cdef15548f9817d41e74f15/fresco-template-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "1408c5d6542dc91f50efbe0bb8150c2d", "sha256": "f39770283844f3baa41972256dec84c7c38373202fda376c7c2e0a9d3e75c529"}, "downloads": -1, "filename": "fresco-template-0.3.0.tar.gz", "has_sig": false, "md5_digest": "1408c5d6542dc91f50efbe0bb8150c2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9359, "upload_time": "2015-09-25T09:39:09", "upload_time_iso_8601": "2015-09-25T09:39:09.182159Z", "url": "https://files.pythonhosted.org/packages/9c/77/bdfba2f87b076847aee014fb5930e78173fdc215efbe4f4ff95d277f3fa4/fresco-template-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "bb628f484685271e49828f98253fb89d", "sha256": "27094b063f458072c72b94c11f1331c23ae26dcb629fd8585d3c713cec5af4f0"}, "downloads": -1, "filename": "fresco-template-0.3.1.tar.gz", "has_sig": false, "md5_digest": "bb628f484685271e49828f98253fb89d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9497, "upload_time": "2016-11-29T10:17:40", "upload_time_iso_8601": "2016-11-29T10:17:40.611496Z", "url": "https://files.pythonhosted.org/packages/65/61/7cf532ebf42552625cf20b97afb091e7ed89b924c86bf7887cf56c2fde41/fresco-template-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bb628f484685271e49828f98253fb89d", "sha256": "27094b063f458072c72b94c11f1331c23ae26dcb629fd8585d3c713cec5af4f0"}, "downloads": -1, "filename": "fresco-template-0.3.1.tar.gz", "has_sig": false, "md5_digest": "bb628f484685271e49828f98253fb89d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9497, "upload_time": "2016-11-29T10:17:40", "upload_time_iso_8601": "2016-11-29T10:17:40.611496Z", "url": "https://files.pythonhosted.org/packages/65/61/7cf532ebf42552625cf20b97afb091e7ed89b924c86bf7887cf56c2fde41/fresco-template-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:24 2020"}