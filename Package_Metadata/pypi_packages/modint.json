{"info": {"author": "Shlomi Fish", "author_email": "shlomif@shlomifish.org", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "===============================\nModInt\n===============================\n\n\n.. image:: https://img.shields.io/pypi/v/modint.svg\n        :target: https://pypi.python.org/pypi/modint\n\n.. image:: https://img.shields.io/travis/shlomif/modint.svg\n        :target: https://travis-ci.org/shlomif/modint\n\n.. image:: https://readthedocs.org/projects/modint/badge/?version=latest\n        :target: https://modint.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n.. image:: https://pyup.io/repos/github/shlomif/modint/shield.svg\n     :target: https://pyup.io/repos/github/shlomif/modint/\n     :alt: Updates\n\n\nPython implementation of the Chinese Remainder algorithm\n\n\n* Free software: MIT license\n* Documentation: https://modint.readthedocs.io.\n\n\nFeatures\n--------\n\nA usable implementation of the Chinese Remainder algorithm (see\nhttps://en.wikipedia.org/wiki/Chinese_remainder_theorem ) under the permissive\nMIT/Expat licence. Written because none other similarly-licensed ones\ncould be found.\n\nWhat this does is given two-or-more pairwise coprime bases integers and their\ncorresponding moduli, it finds an integer that yields these moduli for all the\nbases.\n\nExample\n-------\n\nHere is an example::\n\n    from modint import ChineseRemainderConstructor, chinese_remainder\n\n    cr = ChineseRemainderConstructor([2, 5])\n    # Because 5 % 2 == 1 and 5 % 5 == 0\n    assert cr.rem([1, 0]) == 5\n    # Because 8 % 2 == 0 and 8 % 5 == 3\n    assert cr.rem([0, 3]) == 8\n\n    # Convenience function\n    assert chinese_remainder([2, 3, 7], [1, 2, 3]) == 17\n\nCredits\n---------\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n\n=======\nHistory\n=======\n\n0.2.1 (2018-05-02)\n------------------\n\n* Fix tests.\n\n0.2.0 (2017-12-09)\n------------------\n\n* Better documentation with synopses and examples.\n\n* Add Travis-CI.\n\n0.1.0 (2017-03-16)\n------------------\n\n* First release on PyPI.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/shlomif/modint", "keywords": "modint", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "modint", "package_url": "https://pypi.org/project/modint/", "platform": "", "project_url": "https://pypi.org/project/modint/", "project_urls": {"Homepage": "https://github.com/shlomif/modint"}, "release_url": "https://pypi.org/project/modint/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "Python implementation of the Chinese Remainder algorithm", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"modint\">\n<h2>ModInt</h2>\n<a href=\"https://pypi.python.org/pypi/modint\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/modint.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/60e845c68308c40b2ca74271f5d3b5aae7e4c0d2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6d6f64696e742e737667\"></a>\n<a href=\"https://travis-ci.org/shlomif/modint\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/shlomif/modint.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7883c5cf9c337251b7e37af2e83f1ee1fecbe845/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f73686c6f6d69662f6d6f64696e742e737667\"></a>\n<a href=\"https://modint.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/920846bc25a656ba5003b760190d0604a949e0f0/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6d6f64696e742f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://pyup.io/repos/github/shlomif/modint/\" rel=\"nofollow\"><img alt=\"Updates\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b650acc5db445f33a57098b4290535c71895ac87/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f73686c6f6d69662f6d6f64696e742f736869656c642e737667\"></a>\n<p>Python implementation of the Chinese Remainder algorithm</p>\n<ul>\n<li>Free software: MIT license</li>\n<li>Documentation: <a href=\"https://modint.readthedocs.io\" rel=\"nofollow\">https://modint.readthedocs.io</a>.</li>\n</ul>\n<div id=\"features\">\n<h3>Features</h3>\n<p>A usable implementation of the Chinese Remainder algorithm (see\n<a href=\"https://en.wikipedia.org/wiki/Chinese_remainder_theorem\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Chinese_remainder_theorem</a> ) under the permissive\nMIT/Expat licence. Written because none other similarly-licensed ones\ncould be found.</p>\n<p>What this does is given two-or-more pairwise coprime bases integers and their\ncorresponding moduli, it finds an integer that yields these moduli for all the\nbases.</p>\n</div>\n<div id=\"example\">\n<h3>Example</h3>\n<p>Here is an example:</p>\n<pre>from modint import ChineseRemainderConstructor, chinese_remainder\n\ncr = ChineseRemainderConstructor([2, 5])\n# Because 5 % 2 == 1 and 5 % 5 == 0\nassert cr.rem([1, 0]) == 5\n# Because 8 % 2 == 0 and 8 % 5 == 3\nassert cr.rem([0, 3]) == 8\n\n# Convenience function\nassert chinese_remainder([2, 3, 7], [1, 2, 3]) == 17\n</pre>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<p>This package was created with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> and the <a href=\"https://github.com/audreyr/cookiecutter-pypackage\" rel=\"nofollow\">audreyr/cookiecutter-pypackage</a> project template.</p>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.2.1 (2018-05-02)</h3>\n<ul>\n<li>Fix tests.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.2.0 (2017-12-09)</h3>\n<ul>\n<li>Better documentation with synopses and examples.</li>\n<li>Add Travis-CI.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1.0 (2017-03-16)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3827535, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "88fdbca8625fd5526ac36e051f905ace", "sha256": "117a3e75b9be8a60e8c5bce2b2b535f9db5ce8ed6bf491679ef840ea6e239c25"}, "downloads": -1, "filename": "modint-0.1.0.tar.gz", "has_sig": false, "md5_digest": "88fdbca8625fd5526ac36e051f905ace", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12865, "upload_time": "2017-12-05T13:22:48", "upload_time_iso_8601": "2017-12-05T13:22:48.336139Z", "url": "https://files.pythonhosted.org/packages/30/f5/7aa5652ee54a8852b6323295943778eba297ff654b5aaec90ce21699d88d/modint-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "4188785a2fd1bc6a0889481e6b6723c9", "sha256": "3a9f046086c4d9294b86232579d50a3e0fcc9f48c106c30d596b337ee0fb802a"}, "downloads": -1, "filename": "modint-0.2.0.tar.gz", "has_sig": false, "md5_digest": "4188785a2fd1bc6a0889481e6b6723c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12947, "upload_time": "2017-12-09T14:17:29", "upload_time_iso_8601": "2017-12-09T14:17:29.882217Z", "url": "https://files.pythonhosted.org/packages/86/7b/7c8148c1121f2cd2ec27ca5d50c3e9be934f5c1426601e9d96569b1d4985/modint-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "fb42cf35fd19af29598ce56cc0ee276f", "sha256": "6708e4bb6cad98fe7bfebc0594444c2597fee688f280daa3f2aaa4db14c0f974"}, "downloads": -1, "filename": "modint-0.2.1.tar.gz", "has_sig": false, "md5_digest": "fb42cf35fd19af29598ce56cc0ee276f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13461, "upload_time": "2018-05-02T15:55:40", "upload_time_iso_8601": "2018-05-02T15:55:40.440357Z", "url": "https://files.pythonhosted.org/packages/53/b7/09673d7f03d15a1b5a518415c036aebd47ae0cd0fcc4dc0531568c02bc98/modint-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fb42cf35fd19af29598ce56cc0ee276f", "sha256": "6708e4bb6cad98fe7bfebc0594444c2597fee688f280daa3f2aaa4db14c0f974"}, "downloads": -1, "filename": "modint-0.2.1.tar.gz", "has_sig": false, "md5_digest": "fb42cf35fd19af29598ce56cc0ee276f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13461, "upload_time": "2018-05-02T15:55:40", "upload_time_iso_8601": "2018-05-02T15:55:40.440357Z", "url": "https://files.pythonhosted.org/packages/53/b7/09673d7f03d15a1b5a518415c036aebd47ae0cd0fcc4dc0531568c02bc98/modint-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:48 2020"}