{"info": {"author": "Mahiro Ando", "author_email": "ma514y@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# pricegen\n\nThis utility helps simulate statistically randomized series of prices, based on the models below:\n\n* Geometric Brownian motion\n* Mean reversion (optional)\n\n## Generating a next price\n\n```\nfrom pricegen import random_price\n\ncurrent_price = 100\nnext_price = random_price(current_price, sigma=0.20)\n```\n\n## Generating a series of prices\n\n```\nfrom pricegen import random_price, generate_prices\n\ninitial_price = 100\n\n# Daily prices over a year (252 trading days)\nprice = initial_price\nfor _ in range(252):\n    price = random_price(price, sigma=0.20, time=1.0/252)\n    print(price)\n\n# Or equivalently:\nfor price in generate_prices(252, initial_price, sigma=0.20, time=1.0/252):\n    print(price)\n```\n\n## Volatility and time interval\n\n```\n# These two calls are roughly equivalent\n\n# Case 1:\nrandom_price(price, sigma=0.20, time=1.0/252)\n# Annual volatility: 20%\n# Time interval: (1.0 / 252) year\n\n# Case 2:\nrandom_price(price, sigma=0.20/math.sqrt(252)) # time == 1.0 by default\n# Daily volatility: 20% / sqrt(252)\n# Time interval: 1.0 day\n\n# Note:\n# \"time\" represents the time interval relative to 1.0.\n# \"sigma\" is interpreted as volatility for time == 1.0.\n# Internally, there is no assumption about the unit of time (year/month/day).\n```\n\n## Mean reversion\n\n```\nfrom pricegen import random_price\n\ninitial_price = 100\n\n# Daily prices over a year (252 trading days)\nprice = initial_price\nfor _ in range(252):\n    price = random_price(price, sigma=0.20, time=1.0/252, mean=initial_price)\n    print(price)\n\n# Mean reversion helps prevent the price from becoming too high or too low\n# by attracting the price to a targe while maintaining a specific volatility.\n```\n\n## Using a custom Random class\n\n```\nfrom pricegen import PriceGenerator\n\ngenerator = PriceGenerator(random=custom_random)\n# custom_random needs to have .gauss() method\n\ngenerator.random_price(100, 0.20)\n```\n\n## Ad-hoc random noise\n\n\n```\nfrom pricegen import random_price\n\nrandom_price(100, 0.20, noise=custom_gauss(0.0, 1.0))\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mahiro/python-pricegen", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pricegen", "package_url": "https://pypi.org/project/pricegen/", "platform": "", "project_url": "https://pypi.org/project/pricegen/", "project_urls": {"Homepage": "https://github.com/mahiro/python-pricegen"}, "release_url": "https://pypi.org/project/pricegen/0.0.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Random price generation", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pricegen</h1>\n<p>This utility helps simulate statistically randomized series of prices, based on the models below:</p>\n<ul>\n<li>Geometric Brownian motion</li>\n<li>Mean reversion (optional)</li>\n</ul>\n<h2>Generating a next price</h2>\n<pre><code>from pricegen import random_price\n\ncurrent_price = 100\nnext_price = random_price(current_price, sigma=0.20)\n</code></pre>\n<h2>Generating a series of prices</h2>\n<pre><code>from pricegen import random_price, generate_prices\n\ninitial_price = 100\n\n# Daily prices over a year (252 trading days)\nprice = initial_price\nfor _ in range(252):\n    price = random_price(price, sigma=0.20, time=1.0/252)\n    print(price)\n\n# Or equivalently:\nfor price in generate_prices(252, initial_price, sigma=0.20, time=1.0/252):\n    print(price)\n</code></pre>\n<h2>Volatility and time interval</h2>\n<pre><code># These two calls are roughly equivalent\n\n# Case 1:\nrandom_price(price, sigma=0.20, time=1.0/252)\n# Annual volatility: 20%\n# Time interval: (1.0 / 252) year\n\n# Case 2:\nrandom_price(price, sigma=0.20/math.sqrt(252)) # time == 1.0 by default\n# Daily volatility: 20% / sqrt(252)\n# Time interval: 1.0 day\n\n# Note:\n# \"time\" represents the time interval relative to 1.0.\n# \"sigma\" is interpreted as volatility for time == 1.0.\n# Internally, there is no assumption about the unit of time (year/month/day).\n</code></pre>\n<h2>Mean reversion</h2>\n<pre><code>from pricegen import random_price\n\ninitial_price = 100\n\n# Daily prices over a year (252 trading days)\nprice = initial_price\nfor _ in range(252):\n    price = random_price(price, sigma=0.20, time=1.0/252, mean=initial_price)\n    print(price)\n\n# Mean reversion helps prevent the price from becoming too high or too low\n# by attracting the price to a targe while maintaining a specific volatility.\n</code></pre>\n<h2>Using a custom Random class</h2>\n<pre><code>from pricegen import PriceGenerator\n\ngenerator = PriceGenerator(random=custom_random)\n# custom_random needs to have .gauss() method\n\ngenerator.random_price(100, 0.20)\n</code></pre>\n<h2>Ad-hoc random noise</h2>\n<pre><code>from pricegen import random_price\n\nrandom_price(100, 0.20, noise=custom_gauss(0.0, 1.0))\n</code></pre>\n\n          </div>"}, "last_serial": 6638810, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ba91341cf6be368297cc5f8177476889", "sha256": "b542f97f5707a8d97e5837167e1b818265c3cb599ebb1496cdd1bf56a7d3c206"}, "downloads": -1, "filename": "pricegen-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ba91341cf6be368297cc5f8177476889", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4414, "upload_time": "2020-02-16T05:02:38", "upload_time_iso_8601": "2020-02-16T05:02:38.545059Z", "url": "https://files.pythonhosted.org/packages/ed/60/4adad698e8359eb140bd6a4bbbce64e48b1e13e7a583b83e0752734835a4/pricegen-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eaced2f8a237e3500720de3d34dd4977", "sha256": "cd563761dde31cf68e45f1da65f40ab8899adbf93608b6d415da4738e5abeb9e"}, "downloads": -1, "filename": "pricegen-0.0.1.tar.gz", "has_sig": false, "md5_digest": "eaced2f8a237e3500720de3d34dd4977", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2914, "upload_time": "2020-02-16T05:02:40", "upload_time_iso_8601": "2020-02-16T05:02:40.884765Z", "url": "https://files.pythonhosted.org/packages/ea/51/ffce608b3cad3b7bb1a37382efdb6d9d1722b0225c0803458299263f65fc/pricegen-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ba91341cf6be368297cc5f8177476889", "sha256": "b542f97f5707a8d97e5837167e1b818265c3cb599ebb1496cdd1bf56a7d3c206"}, "downloads": -1, "filename": "pricegen-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ba91341cf6be368297cc5f8177476889", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4414, "upload_time": "2020-02-16T05:02:38", "upload_time_iso_8601": "2020-02-16T05:02:38.545059Z", "url": "https://files.pythonhosted.org/packages/ed/60/4adad698e8359eb140bd6a4bbbce64e48b1e13e7a583b83e0752734835a4/pricegen-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eaced2f8a237e3500720de3d34dd4977", "sha256": "cd563761dde31cf68e45f1da65f40ab8899adbf93608b6d415da4738e5abeb9e"}, "downloads": -1, "filename": "pricegen-0.0.1.tar.gz", "has_sig": false, "md5_digest": "eaced2f8a237e3500720de3d34dd4977", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2914, "upload_time": "2020-02-16T05:02:40", "upload_time_iso_8601": "2020-02-16T05:02:40.884765Z", "url": "https://files.pythonhosted.org/packages/ea/51/ffce608b3cad3b7bb1a37382efdb6d9d1722b0225c0803458299263f65fc/pricegen-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:19:29 2020"}