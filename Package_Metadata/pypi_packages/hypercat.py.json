{"info": {"author": "Pilgrim Beart", "author_email": "firstname.lastname@1248.io", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "Hypercat.py\n===========\n\nA minimal library for working with Hypercat 3.0 catalogues. For full details on\nHypercat please see: http://www.hypercat.io/standard.html\n\nOrigin\n------\n\nThis module is a simple repackaging of a Hypercat module original available\nhere: https://github.com/hypercatIoT/python-tools\n\nUse cases\n---------\n\nServers:\n\n* Create an empty Hypercat catalogue\n* Optionally, add metadata to describe it\n* Optionally, add items to the catalogue\n\n  * an item is either another catalogue or a resource\n\n* Output it as JSON, either minimally or prettyprinted\n* Find a specific part of a catalogue hierarchy\n\nClients:\n\n* Load and validate a Hypercat\n\nExample - Hypercat server\n-------------------------\n\nWe'll create a Hypercat catalogue with 2 items in it::\n\n      h\n     / \\\n    h2  r\n\nUsage::\n\n    from hypercat import hypercat\n\n    # Create a catalogue\n    h = hypercat.hypercat(\"CatalogueContainingOneCatalogueAndOneResource\")\n\n    # Create a second catalogue, and add it as a child of the first\n    h2 = hypercat.hypercat(\"ChildCatalogue\")\n    h.addItem(h2, \"/child_cat\")\n\n    # Create a resource, and add it as another child of the first catalogue\n    r = hypercat.resource(\"resource1\", \"application/vnd.hypercat.sensordata+json\")\n    h.addItem(r, \"/resource\")\n\n    # Print the raw JSON of the catalogue, and then with human-friendly formatting\n    print h.asJSON()\n    print h.prettyprint()\n\nThis should output::\n\n    {\n        \"catalogue-metadata\": [\n            {\n                \"rel\": \"urn:X-hypercat:rels:isContentType\",\n                \"val\": \"application/vnd.hypercat.catalogue+json\"\n            },\n            {\n                \"rel\": \"urn:X-hypercat:rels:hasDescription:en\",\n                \"val\": \"CatalogueContainingOneCatalogueAndOneResource\"\n            }\n        ],\n        \"items\": [\n            {\n                \"href\": \"/child_cat\",\n                \"item-metadata\": [\n                    {\n                        \"rel\": \"urn:X-hypercat:rels:isContentType\",\n                        \"val\": \"application/vnd.hypercat.catalogue+json\"\n                    },\n                    {\n                        \"rel\": \"urn:X-hypercat:rels:hasDescription:en\",\n                        \"val\": \"ChildCatalogue\"\n                    }\n                ]\n            },\n            {\n                \"href\": \"/resource\",\n                \"item-metadata\": [\n                    {\n                        \"rel\": \"urn:X-hypercat:rels:isContentType\",\n                        \"val\": \"application/vnd.hypercat.sensordata+json\"\n                    },\n                    {\n                        \"rel\": \"urn:X-hypercat:rels:hasDescription:en\",\n                        \"val\": \"resource1\"\n                    }\n                ]\n            }\n        ]\n    }\n\n\nExample - Hypercat Client\n-------------------------\n\nUsage::\n\n    from hypercat import hypercat\n\n    h = hypercat.loads(inString)  # Read-in and validate Hypercat\n    print \"Metadata is \",h.metadata\n\nHow this module works\n=====================\n\nAccording to the spec, each Catalogue has a (human-readable) description and a\nlist of metadata about it.  It also contains a list of \"items\", and each item\nhas an HREF and a list of metadata about it.  An item can be any kind of\nresource, including another catalogue.\n\nSo conceptually, catalogues can have many levels of hierarchy (i.e. a catalogue\ncan contain a catalogue which contains a catalogue and so on). Catalogues don't\njust have to be trees either, they can be graphs, contain loops etc., and\nclients of this module will often want to declare full catalogue structures\nseveral levels deep, i.e. build their entire hierarchy in one go.\n\nBut according to the spec only one level of catalogue can be output at a time,\ni.e. getting a catalogue will declare its child catalogues, but not its\ngrand-children (to see the grand-children, you'd have to get the child\ncatalogue)\n\nA further complication is some asymmetry in how attributes are declared when a\ncatalogue is the parent, vs. when it is the child\n\nTo deal with this, within this module we maintain a universal base class for\nevery hypercat object.  Then during output, we ignore grand-children, and\nmodify attributes as necessary.\n\nLicense\n=======\n\nThe software is released under an MIT license. Please see the details in\nLICENSE.txt.\n\nTODO\n====\n\n4.3.3 Says that it is optional to use isContentType to tag each member of\nitems[], however we treat it here as mandatory.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/thingful/hypercat-py", "keywords": "development hypercat", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "hypercat.py", "package_url": "https://pypi.org/project/hypercat.py/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/hypercat.py/", "project_urls": {"Homepage": "https://github.com/thingful/hypercat-py"}, "release_url": "https://pypi.org/project/hypercat.py/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "Module for working with Hypercat catalogues", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"hypercat-py\">\n<h2>Hypercat.py</h2>\n<p>A minimal library for working with Hypercat 3.0 catalogues. For full details on\nHypercat please see: <a href=\"http://www.hypercat.io/standard.html\" rel=\"nofollow\">http://www.hypercat.io/standard.html</a></p>\n<div id=\"origin\">\n<h3>Origin</h3>\n<p>This module is a simple repackaging of a Hypercat module original available\nhere: <a href=\"https://github.com/hypercatIoT/python-tools\" rel=\"nofollow\">https://github.com/hypercatIoT/python-tools</a></p>\n</div>\n<div id=\"use-cases\">\n<h3>Use cases</h3>\n<p>Servers:</p>\n<ul>\n<li>Create an empty Hypercat catalogue</li>\n<li>Optionally, add metadata to describe it</li>\n<li>Optionally, add items to the catalogue<ul>\n<li>an item is either another catalogue or a resource</li>\n</ul>\n</li>\n<li>Output it as JSON, either minimally or prettyprinted</li>\n<li>Find a specific part of a catalogue hierarchy</li>\n</ul>\n<p>Clients:</p>\n<ul>\n<li>Load and validate a Hypercat</li>\n</ul>\n</div>\n<div id=\"example-hypercat-server\">\n<h3>Example - Hypercat server</h3>\n<p>We\u2019ll create a Hypercat catalogue with 2 items in it:</p>\n<pre>  h\n / \\\nh2  r\n</pre>\n<p>Usage:</p>\n<pre>from hypercat import hypercat\n\n# Create a catalogue\nh = hypercat.hypercat(\"CatalogueContainingOneCatalogueAndOneResource\")\n\n# Create a second catalogue, and add it as a child of the first\nh2 = hypercat.hypercat(\"ChildCatalogue\")\nh.addItem(h2, \"/child_cat\")\n\n# Create a resource, and add it as another child of the first catalogue\nr = hypercat.resource(\"resource1\", \"application/vnd.hypercat.sensordata+json\")\nh.addItem(r, \"/resource\")\n\n# Print the raw JSON of the catalogue, and then with human-friendly formatting\nprint h.asJSON()\nprint h.prettyprint()\n</pre>\n<p>This should output:</p>\n<pre>{\n    \"catalogue-metadata\": [\n        {\n            \"rel\": \"urn:X-hypercat:rels:isContentType\",\n            \"val\": \"application/vnd.hypercat.catalogue+json\"\n        },\n        {\n            \"rel\": \"urn:X-hypercat:rels:hasDescription:en\",\n            \"val\": \"CatalogueContainingOneCatalogueAndOneResource\"\n        }\n    ],\n    \"items\": [\n        {\n            \"href\": \"/child_cat\",\n            \"item-metadata\": [\n                {\n                    \"rel\": \"urn:X-hypercat:rels:isContentType\",\n                    \"val\": \"application/vnd.hypercat.catalogue+json\"\n                },\n                {\n                    \"rel\": \"urn:X-hypercat:rels:hasDescription:en\",\n                    \"val\": \"ChildCatalogue\"\n                }\n            ]\n        },\n        {\n            \"href\": \"/resource\",\n            \"item-metadata\": [\n                {\n                    \"rel\": \"urn:X-hypercat:rels:isContentType\",\n                    \"val\": \"application/vnd.hypercat.sensordata+json\"\n                },\n                {\n                    \"rel\": \"urn:X-hypercat:rels:hasDescription:en\",\n                    \"val\": \"resource1\"\n                }\n            ]\n        }\n    ]\n}\n</pre>\n</div>\n<div id=\"example-hypercat-client\">\n<h3>Example - Hypercat Client</h3>\n<p>Usage:</p>\n<pre>from hypercat import hypercat\n\nh = hypercat.loads(inString)  # Read-in and validate Hypercat\nprint \"Metadata is \",h.metadata\n</pre>\n</div>\n</div>\n<div id=\"how-this-module-works\">\n<h2>How this module works</h2>\n<p>According to the spec, each Catalogue has a (human-readable) description and a\nlist of metadata about it.  It also contains a list of \u201citems\u201d, and each item\nhas an HREF and a list of metadata about it.  An item can be any kind of\nresource, including another catalogue.</p>\n<p>So conceptually, catalogues can have many levels of hierarchy (i.e. a catalogue\ncan contain a catalogue which contains a catalogue and so on). Catalogues don\u2019t\njust have to be trees either, they can be graphs, contain loops etc., and\nclients of this module will often want to declare full catalogue structures\nseveral levels deep, i.e. build their entire hierarchy in one go.</p>\n<p>But according to the spec only one level of catalogue can be output at a time,\ni.e. getting a catalogue will declare its child catalogues, but not its\ngrand-children (to see the grand-children, you\u2019d have to get the child\ncatalogue)</p>\n<p>A further complication is some asymmetry in how attributes are declared when a\ncatalogue is the parent, vs. when it is the child</p>\n<p>To deal with this, within this module we maintain a universal base class for\nevery hypercat object.  Then during output, we ignore grand-children, and\nmodify attributes as necessary.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The software is released under an MIT license. Please see the details in\nLICENSE.txt.</p>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<p>4.3.3 Says that it is optional to use isContentType to tag each member of\nitems[], however we treat it here as mandatory.</p>\n</div>\n\n          </div>"}, "last_serial": 2013290, "releases": {"0.1.0a1": [{"comment_text": "", "digests": {"md5": "674822d03a90a4ce0c16589536d626f3", "sha256": "603f378aef09132a07c14aad14bff35faf83a9f92b2f5703d2a044d157785696"}, "downloads": -1, "filename": "hypercat.py-0.1.0a1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "674822d03a90a4ce0c16589536d626f3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8371, "upload_time": "2016-02-26T17:53:15", "upload_time_iso_8601": "2016-02-26T17:53:15.692178Z", "url": "https://files.pythonhosted.org/packages/1f/ad/0396ff5b8fa4360be6ab9797cd200dcfdd7ec9517d9a430edf1eb14cd846/hypercat.py-0.1.0a1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d51d00baac28120f96269e0ec16201c5", "sha256": "256c1f01c05bf3171e7f9cc06475281e06fa08706aeb6736d1f75ce6d5194f92"}, "downloads": -1, "filename": "hypercat.py-0.1.0a1.tar.gz", "has_sig": false, "md5_digest": "d51d00baac28120f96269e0ec16201c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6357, "upload_time": "2016-02-26T17:53:28", "upload_time_iso_8601": "2016-02-26T17:53:28.431344Z", "url": "https://files.pythonhosted.org/packages/ad/87/3b5e7e800bef1940fb0452a534c02626b9ca4e3265942e95bac76a3f8c8d/hypercat.py-0.1.0a1.tar.gz", "yanked": false}], "0.1.0b1": [{"comment_text": "", "digests": {"md5": "90a117ba8f2c2c4ada2a2d918c315a66", "sha256": "b9766fc77c040eeae843b0de93a384669f8b16c2e32dd0e033155a30072bf78d"}, "downloads": -1, "filename": "hypercat.py-0.1.0b1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "90a117ba8f2c2c4ada2a2d918c315a66", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8377, "upload_time": "2016-02-26T17:53:22", "upload_time_iso_8601": "2016-02-26T17:53:22.104522Z", "url": "https://files.pythonhosted.org/packages/41/74/dabb601f552d9dc2581ff156acf134c1ced805d523c9e4d00345aa853b8c/hypercat.py-0.1.0b1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0065820d0d73973014e9afb34824d13f", "sha256": "abd834312f267e0eeab679eb0d60afc827cb27d7a0db8eb16c546f793b1bf212"}, "downloads": -1, "filename": "hypercat.py-0.1.0b1.tar.gz", "has_sig": false, "md5_digest": "0065820d0d73973014e9afb34824d13f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6359, "upload_time": "2016-02-26T17:53:33", "upload_time_iso_8601": "2016-02-26T17:53:33.612804Z", "url": "https://files.pythonhosted.org/packages/80/5c/d6926330416b944a89abf51769ffcfc9b93ce6baccb7f8ad6c211a768cb6/hypercat.py-0.1.0b1.tar.gz", "yanked": false}], "0.1.0b2": [{"comment_text": "", "digests": {"md5": "335efa4b8fab0bfbb8279c6db56dabae", "sha256": "151603aab19ed27a68305365ad38de2e9a08e458b0bb9fbc3dc9c5b608163920"}, "downloads": -1, "filename": "hypercat.py-0.1.0b2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "335efa4b8fab0bfbb8279c6db56dabae", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8376, "upload_time": "2016-02-26T17:56:52", "upload_time_iso_8601": "2016-02-26T17:56:52.887820Z", "url": "https://files.pythonhosted.org/packages/a7/74/85ecc87423226a1e343e10485ed661e907415a09efa3691aa8253791bf82/hypercat.py-0.1.0b2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1370b896489265ecf4d747535ff3c7d1", "sha256": "7cdb32870516d3a8fb70d051f77ff9ddb8b9068344d96983f4796117832634ec"}, "downloads": -1, "filename": "hypercat.py-0.1.0b2.tar.gz", "has_sig": false, "md5_digest": "1370b896489265ecf4d747535ff3c7d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6361, "upload_time": "2016-02-26T17:57:03", "upload_time_iso_8601": "2016-02-26T17:57:03.309937Z", "url": "https://files.pythonhosted.org/packages/1b/85/e083b9f3979e33ad34d592b4ca8bbb05d8bf4afb5d8f0d1a3c39694ac4ba/hypercat.py-0.1.0b2.tar.gz", "yanked": false}], "0.1.0b3": [{"comment_text": "", "digests": {"md5": "23cdf8c6695000c258b094f8b61c2675", "sha256": "60298265070abd6ee27794293b24f7432b2a8955d6d4823b34b26c1fb4f92e7a"}, "downloads": -1, "filename": "hypercat.py-0.1.0b3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "23cdf8c6695000c258b094f8b61c2675", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8375, "upload_time": "2016-02-27T12:39:31", "upload_time_iso_8601": "2016-02-27T12:39:31.837283Z", "url": "https://files.pythonhosted.org/packages/0d/af/98ca70885472d04a1545adde19f46d26ceb3520a40a15dcbcdb0e0b8b3ff/hypercat.py-0.1.0b3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69672226f6ebc92d47ccef4997056af3", "sha256": "f6a25099b1fdaae28caa2a27339e46f81fedf8165bd6ec700d87ba79ffb30c1a"}, "downloads": -1, "filename": "hypercat.py-0.1.0b3.tar.gz", "has_sig": false, "md5_digest": "69672226f6ebc92d47ccef4997056af3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6557, "upload_time": "2016-02-27T12:39:36", "upload_time_iso_8601": "2016-02-27T12:39:36.774284Z", "url": "https://files.pythonhosted.org/packages/71/a7/586c43660b1e6fc8de0dd8f3b9f303f1e974c4e3ad56dc41502b61beb2c5/hypercat.py-0.1.0b3.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "1211cd1a9cd99672f7de36fbb6ef9b08", "sha256": "200c5377674e56bb7531c8ac3f9e27d0bc3f013ef327acf5929d62e5389c7634"}, "downloads": -1, "filename": "hypercat.py-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1211cd1a9cd99672f7de36fbb6ef9b08", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8432, "upload_time": "2016-02-27T12:52:11", "upload_time_iso_8601": "2016-02-27T12:52:11.623515Z", "url": "https://files.pythonhosted.org/packages/56/3b/36eeded4bed6605d636c02e4689dd620e487ce4e0f1f02295680261cbd86/hypercat.py-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b8b753cd6c41cd271546284dddae145", "sha256": "443482f440dcee0de96592bfc9af9af0197596613f934b92a52c39055ea95cf1"}, "downloads": -1, "filename": "hypercat.py-0.1.1.tar.gz", "has_sig": false, "md5_digest": "0b8b753cd6c41cd271546284dddae145", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6597, "upload_time": "2016-02-27T12:52:20", "upload_time_iso_8601": "2016-02-27T12:52:20.067412Z", "url": "https://files.pythonhosted.org/packages/25/0e/01ceaa2f963c1ad4427a7e7d9d8dab0fa3ca03e4208dd4e52503b1d8f832/hypercat.py-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "6fd883ab7ce2f009cf329b98b1c7c865", "sha256": "f451a87a29ceaa9dda41878b82226af6976849b20a01448adc04940479e7b68b"}, "downloads": -1, "filename": "hypercat.py-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6fd883ab7ce2f009cf329b98b1c7c865", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8615, "upload_time": "2016-03-17T22:51:20", "upload_time_iso_8601": "2016-03-17T22:51:20.353459Z", "url": "https://files.pythonhosted.org/packages/7d/d8/7e37aef325c34bc6997e0db055d9815fc4bcc89f17634ceb915aba4d029f/hypercat.py-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a035f84e2cf1622fbc6b67ff97c4dab", "sha256": "3d1ff528b5ebf956e970edc307ac305d8cff8fd348ac6bfe50da7d31aadf5caf"}, "downloads": -1, "filename": "hypercat.py-0.1.2.tar.gz", "has_sig": false, "md5_digest": "5a035f84e2cf1622fbc6b67ff97c4dab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6733, "upload_time": "2016-03-17T22:51:26", "upload_time_iso_8601": "2016-03-17T22:51:26.541467Z", "url": "https://files.pythonhosted.org/packages/40/ec/877349c21d3379890f3b3a28135a74780ebe490727ff5b1298cdc8793017/hypercat.py-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6fd883ab7ce2f009cf329b98b1c7c865", "sha256": "f451a87a29ceaa9dda41878b82226af6976849b20a01448adc04940479e7b68b"}, "downloads": -1, "filename": "hypercat.py-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6fd883ab7ce2f009cf329b98b1c7c865", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8615, "upload_time": "2016-03-17T22:51:20", "upload_time_iso_8601": "2016-03-17T22:51:20.353459Z", "url": "https://files.pythonhosted.org/packages/7d/d8/7e37aef325c34bc6997e0db055d9815fc4bcc89f17634ceb915aba4d029f/hypercat.py-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a035f84e2cf1622fbc6b67ff97c4dab", "sha256": "3d1ff528b5ebf956e970edc307ac305d8cff8fd348ac6bfe50da7d31aadf5caf"}, "downloads": -1, "filename": "hypercat.py-0.1.2.tar.gz", "has_sig": false, "md5_digest": "5a035f84e2cf1622fbc6b67ff97c4dab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6733, "upload_time": "2016-03-17T22:51:26", "upload_time_iso_8601": "2016-03-17T22:51:26.541467Z", "url": "https://files.pythonhosted.org/packages/40/ec/877349c21d3379890f3b3a28135a74780ebe490727ff5b1298cdc8793017/hypercat.py-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:35 2020"}