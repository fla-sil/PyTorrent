{"info": {"author": "xRally Team", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Information Technology", "License :: OSI Approved :: Apache Software License", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "# xrally-kubernetes\n\nxRally plugins for [Kubernetes](https://kubernetes.io/) platform.\n\n## Getting started\n\nFirst of all, you need to create rally env for Kubernetes. There are two main\nways to communicate to Kubernetes cluster - specifying auth-token or\ncertifications. Choose what is suitable for your case and use one of the\nfollowing samples.\n\nTo create env using certifications, use spec `samples/platforms/cert-spec.yaml`:\n\n```console\nrally env create --name kubernetes --spec samples/platforms/cert-spec.yaml\n```\n\nFor using Kubernetes token authentication, you need to get API key and use\n`samples/platforms/apikey-spec.yaml` spec to create env:\n\n```console\nrally env create --name kubernetes --spec samples/platforms/apikey-spec.yaml\n``` \n\nFor initialization `Rally environment` to communicate to existing Kubernetes\ncluster you can also use system environment variables instead of making\nspecification json/yaml file. See the list of available options:\n\n* As like regular kubernetes client (kubectl) Rally can read kubeconfig file.\n  Call `rally env create --name kubernetes-created --from-sys-env` and Rally\n  with check `$HOME/.kube/config` file to the available configuration. Also,\n  you can specify `KUBECONFIG` variable with a path different to the default\n  `$HOME/.kube/config`.\n\n* Despite the fact that `kubectl` doesn't support specifying Kubernetes\n  credentials via separated system environment variables per separate option\n  (auth_url, api_key, etc) like other platforms support (OpenStack, Docker,\n  etc), Rally team provides this way. Check [existing@kubernetes plugin documentation](https://xrally.org/plugins/kubernetes/plugins/#existing-platform)\n  for the list of all available variables. Here is a simple example of this feature:\n\n  ```console\n  # the URL to the Kubernetes host.\n  export KUBERNETES_HOST=\"https://example.com:3030\" \n  #  a path to a file containing TLS certificate to use when connecting to the Kubernetes host.\n  export KUBERNETES_CERT_AUTH=\"~/.kube/cert_auth_file\"\n  # client API key to use as token when connecting to the Kubernetes host.\n  export KUBERNETES_API_KEY=\"foo\"\n  # client API key prefix to use in token when connecting to the Kubernetes host.\n  export KUBERNETES_API_KEY_PREFIX=\"bar\"\n  \n  # finally create a Rally environment\n  rally env create --name my-kubernetes --from-sysenv\n  ```\nCheck env availbility by the following command:\n\n```console\nrally env check\n```\n \n## Where the tasks and bugs are tracked ?!\n\nThe primary tracking system is\n[Issues at GitHub](https://github.com/xrally/xrally-kubernetes/issues).\n\nFor Rally framework related issues look at\n[Launchpad](https://bugs.launchpad.net/rally).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://xrally.org/plugins/kubernetes/overview", "keywords": "", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "xrally-kubernetes", "package_url": "https://pypi.org/project/xrally-kubernetes/", "platform": "", "project_url": "https://pypi.org/project/xrally-kubernetes/", "project_urls": {"Homepage": "https://xrally.org/plugins/kubernetes/overview"}, "release_url": "https://pypi.org/project/xrally-kubernetes/1.1.1/", "requires_dist": null, "requires_python": "", "summary": "A set of xRally plugins to run workloads against Kubernetes platform.", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>xrally-kubernetes</h1>\n<p>xRally plugins for <a href=\"https://kubernetes.io/\" rel=\"nofollow\">Kubernetes</a> platform.</p>\n<h2>Getting started</h2>\n<p>First of all, you need to create rally env for Kubernetes. There are two main\nways to communicate to Kubernetes cluster - specifying auth-token or\ncertifications. Choose what is suitable for your case and use one of the\nfollowing samples.</p>\n<p>To create env using certifications, use spec <code>samples/platforms/cert-spec.yaml</code>:</p>\n<pre><span class=\"go\">rally env create --name kubernetes --spec samples/platforms/cert-spec.yaml</span>\n</pre>\n<p>For using Kubernetes token authentication, you need to get API key and use\n<code>samples/platforms/apikey-spec.yaml</code> spec to create env:</p>\n<pre><span class=\"go\">rally env create --name kubernetes --spec samples/platforms/apikey-spec.yaml</span>\n</pre>\n<p>For initialization <code>Rally environment</code> to communicate to existing Kubernetes\ncluster you can also use system environment variables instead of making\nspecification json/yaml file. See the list of available options:</p>\n<ul>\n<li>\n<p>As like regular kubernetes client (kubectl) Rally can read kubeconfig file.\nCall <code>rally env create --name kubernetes-created --from-sys-env</code> and Rally\nwith check <code>$HOME/.kube/config</code> file to the available configuration. Also,\nyou can specify <code>KUBECONFIG</code> variable with a path different to the default\n<code>$HOME/.kube/config</code>.</p>\n</li>\n<li>\n<p>Despite the fact that <code>kubectl</code> doesn't support specifying Kubernetes\ncredentials via separated system environment variables per separate option\n(auth_url, api_key, etc) like other platforms support (OpenStack, Docker,\netc), Rally team provides this way. Check <a href=\"https://xrally.org/plugins/kubernetes/plugins/#existing-platform\" rel=\"nofollow\">existing@kubernetes plugin documentation</a>\nfor the list of all available variables. Here is a simple example of this feature:</p>\n<pre><span class=\"gp\">#</span> the URL to the Kubernetes host.\n<span class=\"go\">export KUBERNETES_HOST=\"https://example.com:3030\" </span>\n<span class=\"gp\">#</span>  a path to a file containing TLS certificate to use when connecting to the Kubernetes host.\n<span class=\"go\">export KUBERNETES_CERT_AUTH=\"~/.kube/cert_auth_file\"</span>\n<span class=\"gp\">#</span> client API key to use as token when connecting to the Kubernetes host.\n<span class=\"go\">export KUBERNETES_API_KEY=\"foo\"</span>\n<span class=\"gp\">#</span> client API key prefix to use in token when connecting to the Kubernetes host.\n<span class=\"go\">export KUBERNETES_API_KEY_PREFIX=\"bar\"</span>\n\n<span class=\"gp\">#</span> finally create a Rally environment\n<span class=\"go\">rally env create --name my-kubernetes --from-sysenv</span>\n</pre>\n</li>\n</ul>\n<p>Check env availbility by the following command:</p>\n<pre><span class=\"go\">rally env check</span>\n</pre>\n<h2>Where the tasks and bugs are tracked ?!</h2>\n<p>The primary tracking system is\n<a href=\"https://github.com/xrally/xrally-kubernetes/issues\" rel=\"nofollow\">Issues at GitHub</a>.</p>\n<p>For Rally framework related issues look at\n<a href=\"https://bugs.launchpad.net/rally\" rel=\"nofollow\">Launchpad</a>.</p>\n\n          </div>"}, "last_serial": 4319719, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "3c298108c018b49ffd5f109c93c544c6", "sha256": "4076f3e5793bd3d9be2865c002e8a0b6974f9b29ec7a0114599d532cf4965b52"}, "downloads": -1, "filename": "xrally-kubernetes-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3c298108c018b49ffd5f109c93c544c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26421, "upload_time": "2018-06-26T16:43:30", "upload_time_iso_8601": "2018-06-26T16:43:30.687636Z", "url": "https://files.pythonhosted.org/packages/e6/8f/266db7dd40ca76188034b19c60be1b1b8d53aea7c16e4bf6c058dcc08c05/xrally-kubernetes-1.0.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "b244e8e4b1a11ba6455b09fc6743ce47", "sha256": "aec1027ba12e724fe508c8f9842cf40fb6ee17519c7353b517956656411c97f5"}, "downloads": -1, "filename": "xrally_kubernetes-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b244e8e4b1a11ba6455b09fc6743ce47", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 43497, "upload_time": "2018-09-28T11:38:01", "upload_time_iso_8601": "2018-09-28T11:38:01.260227Z", "url": "https://files.pythonhosted.org/packages/9f/a2/b018f15b37f82b3f25f297538b900dc6aa41be3d397a82607366e8a5a12b/xrally_kubernetes-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1f44fc91f378f27a7f83fee42471bd5", "sha256": "dd2102a6855e624e5447bd7457a4ce7f53ff06347dda5c03b1134f1c100c1450"}, "downloads": -1, "filename": "xrally-kubernetes-1.1.1.tar.gz", "has_sig": false, "md5_digest": "e1f44fc91f378f27a7f83fee42471bd5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56286, "upload_time": "2018-09-28T11:37:48", "upload_time_iso_8601": "2018-09-28T11:37:48.444214Z", "url": "https://files.pythonhosted.org/packages/58/68/a04134bbfa2f49bf62ffe5db49b7985b240548eb1791f513433625950134/xrally-kubernetes-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b244e8e4b1a11ba6455b09fc6743ce47", "sha256": "aec1027ba12e724fe508c8f9842cf40fb6ee17519c7353b517956656411c97f5"}, "downloads": -1, "filename": "xrally_kubernetes-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b244e8e4b1a11ba6455b09fc6743ce47", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 43497, "upload_time": "2018-09-28T11:38:01", "upload_time_iso_8601": "2018-09-28T11:38:01.260227Z", "url": "https://files.pythonhosted.org/packages/9f/a2/b018f15b37f82b3f25f297538b900dc6aa41be3d397a82607366e8a5a12b/xrally_kubernetes-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1f44fc91f378f27a7f83fee42471bd5", "sha256": "dd2102a6855e624e5447bd7457a4ce7f53ff06347dda5c03b1134f1c100c1450"}, "downloads": -1, "filename": "xrally-kubernetes-1.1.1.tar.gz", "has_sig": false, "md5_digest": "e1f44fc91f378f27a7f83fee42471bd5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56286, "upload_time": "2018-09-28T11:37:48", "upload_time_iso_8601": "2018-09-28T11:37:48.444214Z", "url": "https://files.pythonhosted.org/packages/58/68/a04134bbfa2f49bf62ffe5db49b7985b240548eb1791f513433625950134/xrally-kubernetes-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:24:31 2020"}