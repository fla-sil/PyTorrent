{"info": {"author": "wuwentao", "author_email": "wwtg99@126.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Scrapy Accessory\n================\n\n# Introduction\n\nUseful accessory utilities for [Scrapy](https://scrapy.org/).\n\nContaining:\n\n- middleware\n- feed exporter storage backend\n\n# Installation\n\n```\npip install scrapy-accessory\n```\n\n# Usage\n\n## Middleware\n\n### RandomUserAgentDownloadMiddleware\n\nAdd random user-agent to requests.\n\nIn settings.py add\n\n```\n# USER_AGENT_LIST_FILE = 'path-to-files'\nUSER_AGENT_LIST = [\n    'Mozilla/5.0(compatible;MSIE9.0;WindowsNT6.1;Trident/5.0',\n    'Mozilla/5.0(WindowsNT6.1;rv:2.0.1)Gecko/20100101Firefox/4.0.1',\n]\n\nDOWNLOADER_MIDDLEWARES = {\n    'scrapy_accessory.middlewares.RandomUserAgentDownloadMiddleware': 200,\n}\n```\n\nYou can use either `USER_AGENT_LIST_FILE` or `USER_AGENT_LIST` to configure user-agents.\n`USER_AGENT_LIST_FILE` points to a text file containing one user-agent per line.\n`USER_AGENT_LIST` is a list or tuple of user-agents.\n\n### ProxyDownloadMiddleware\n\nAdd http or https proxy for requests.\n\nIn settings.py add\n\n```\nPROXY_ENABLED = True  # True to use proxy, default is False\n# PROXY_HOST = 'localhost:8080'  # default static proxy, format: <ip>:<port>, default empty\nPROXY_CACHE = 'redis://localhost:6379/0'  # cache for proxy, use redis://<host>:<port>/<db> to use redis cache, default dict in memory\nPROXY_TTL = 30 # proxy cache ttl in seconds, default 30s\nCHANGE_PROXY_STATUS = [429]  # a list of status codes that force to change proxy if received, default [429]\n```\n\nDefault is a static proxy configured in settings.py, you can add dynamic proxy from API or others.\nJust need to extend the `ProxyDownloadMiddleware` class and implement the `generate_proxy` method.\n\nExample:\n\n```\nclass DynamicProxyDownloadMiddleware(ProxyDownloadMiddleware):\n\n    api = 'http://api-to-get-proxy-ip'\n\n    def generate_proxy(self):\n        res = requests.get(self.api)\n        if res.status_code < 300:\n            return res.text  # return format <ip>:<port>\n        return None\n```\n\n## Feed exporter storage backend\n\n### ObsFeedStorage\n\nFeed exporter storage backend for huawei cloud OBS.\n\nInstall obs sdk first\n\n```\npip install esdk-obs-python\n```\n\nConfigure in settings.py\n\n```python\nFEED_STORAGES = {\n    'obs': 'scrapy_accessory.feedexporter.ObsFeedStorage',\n}\nHUAWEI_ACCESS_KEY_ID = '<your access key id>'\nHUAWEI_SECRET_ACCESS_KEY = '<your secret access key>'\nHUAWEI_OBS_ENDPOINT = '<your obs bucket endpoint> ex: https://obs.cn-north-4.myhuaweicloud.com'\n```\n\nOutput to OBS by obs schema `-o obs://<bucket>/<key>`\n\n### OssFeedStorage\n\nFeed exporter storage backend for ali cloud OSS.\n\nInstall oss sdk first\n\n```\npip install oss2\n```\n\nConfigure in settings.py\n\n```python\nFEED_STORAGES = {\n    'oss': 'scrapy_accessory.feedexporter.OssFeedStorage',\n}\nALI_ACCESS_KEY_ID = '<your access key id>'\nALI_SECRET_ACCESS_KEY = '<your secret access key>'\nALI_OSS_ENDPOINT = '<your oss bucket endpoint> ex: https://oss-cn-beijing.aliyuncs.com'\n```\n\nOutput to OSS by oss schema `-o oss://<bucket>/<key>`\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "scrapy middleware", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "scrapy-accessory", "package_url": "https://pypi.org/project/scrapy-accessory/", "platform": "any", "project_url": "https://pypi.org/project/scrapy-accessory/", "project_urls": null, "release_url": "https://pypi.org/project/scrapy-accessory/0.2.0/", "requires_dist": ["scrapy (>=1.7)"], "requires_python": ">=3.4", "summary": "A simple accessory tools for Scrapy.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Scrapy Accessory</h1>\n<h1>Introduction</h1>\n<p>Useful accessory utilities for <a href=\"https://scrapy.org/\" rel=\"nofollow\">Scrapy</a>.</p>\n<p>Containing:</p>\n<ul>\n<li>middleware</li>\n<li>feed exporter storage backend</li>\n</ul>\n<h1>Installation</h1>\n<pre><code>pip install scrapy-accessory\n</code></pre>\n<h1>Usage</h1>\n<h2>Middleware</h2>\n<h3>RandomUserAgentDownloadMiddleware</h3>\n<p>Add random user-agent to requests.</p>\n<p>In settings.py add</p>\n<pre><code># USER_AGENT_LIST_FILE = 'path-to-files'\nUSER_AGENT_LIST = [\n    'Mozilla/5.0(compatible;MSIE9.0;WindowsNT6.1;Trident/5.0',\n    'Mozilla/5.0(WindowsNT6.1;rv:2.0.1)Gecko/20100101Firefox/4.0.1',\n]\n\nDOWNLOADER_MIDDLEWARES = {\n    'scrapy_accessory.middlewares.RandomUserAgentDownloadMiddleware': 200,\n}\n</code></pre>\n<p>You can use either <code>USER_AGENT_LIST_FILE</code> or <code>USER_AGENT_LIST</code> to configure user-agents.\n<code>USER_AGENT_LIST_FILE</code> points to a text file containing one user-agent per line.\n<code>USER_AGENT_LIST</code> is a list or tuple of user-agents.</p>\n<h3>ProxyDownloadMiddleware</h3>\n<p>Add http or https proxy for requests.</p>\n<p>In settings.py add</p>\n<pre><code>PROXY_ENABLED = True  # True to use proxy, default is False\n# PROXY_HOST = 'localhost:8080'  # default static proxy, format: &lt;ip&gt;:&lt;port&gt;, default empty\nPROXY_CACHE = 'redis://localhost:6379/0'  # cache for proxy, use redis://&lt;host&gt;:&lt;port&gt;/&lt;db&gt; to use redis cache, default dict in memory\nPROXY_TTL = 30 # proxy cache ttl in seconds, default 30s\nCHANGE_PROXY_STATUS = [429]  # a list of status codes that force to change proxy if received, default [429]\n</code></pre>\n<p>Default is a static proxy configured in settings.py, you can add dynamic proxy from API or others.\nJust need to extend the <code>ProxyDownloadMiddleware</code> class and implement the <code>generate_proxy</code> method.</p>\n<p>Example:</p>\n<pre><code>class DynamicProxyDownloadMiddleware(ProxyDownloadMiddleware):\n\n    api = 'http://api-to-get-proxy-ip'\n\n    def generate_proxy(self):\n        res = requests.get(self.api)\n        if res.status_code &lt; 300:\n            return res.text  # return format &lt;ip&gt;:&lt;port&gt;\n        return None\n</code></pre>\n<h2>Feed exporter storage backend</h2>\n<h3>ObsFeedStorage</h3>\n<p>Feed exporter storage backend for huawei cloud OBS.</p>\n<p>Install obs sdk first</p>\n<pre><code>pip install esdk-obs-python\n</code></pre>\n<p>Configure in settings.py</p>\n<pre><span class=\"n\">FEED_STORAGES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'obs'</span><span class=\"p\">:</span> <span class=\"s1\">'scrapy_accessory.feedexporter.ObsFeedStorage'</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"n\">HUAWEI_ACCESS_KEY_ID</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;your access key id&gt;'</span>\n<span class=\"n\">HUAWEI_SECRET_ACCESS_KEY</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;your secret access key&gt;'</span>\n<span class=\"n\">HUAWEI_OBS_ENDPOINT</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;your obs bucket endpoint&gt; ex: https://obs.cn-north-4.myhuaweicloud.com'</span>\n</pre>\n<p>Output to OBS by obs schema <code>-o obs://&lt;bucket&gt;/&lt;key&gt;</code></p>\n<h3>OssFeedStorage</h3>\n<p>Feed exporter storage backend for ali cloud OSS.</p>\n<p>Install oss sdk first</p>\n<pre><code>pip install oss2\n</code></pre>\n<p>Configure in settings.py</p>\n<pre><span class=\"n\">FEED_STORAGES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'oss'</span><span class=\"p\">:</span> <span class=\"s1\">'scrapy_accessory.feedexporter.OssFeedStorage'</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"n\">ALI_ACCESS_KEY_ID</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;your access key id&gt;'</span>\n<span class=\"n\">ALI_SECRET_ACCESS_KEY</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;your secret access key&gt;'</span>\n<span class=\"n\">ALI_OSS_ENDPOINT</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;your oss bucket endpoint&gt; ex: https://oss-cn-beijing.aliyuncs.com'</span>\n</pre>\n<p>Output to OSS by oss schema <code>-o oss://&lt;bucket&gt;/&lt;key&gt;</code></p>\n\n          </div>"}, "last_serial": 6893511, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "fe4729ff722cceb6cbca62cb7099fe23", "sha256": "ff691d2bb8e7528fb468b80cbdb1a606bcf69e489f963cb465b15ee09021eb6e"}, "downloads": -1, "filename": "scrapy_accessory-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fe4729ff722cceb6cbca62cb7099fe23", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 6054, "upload_time": "2020-01-13T09:17:12", "upload_time_iso_8601": "2020-01-13T09:17:12.444487Z", "url": "https://files.pythonhosted.org/packages/c9/4f/a7aa665ce89a178a640cf8d04ae6c47458cc747763dc7f1fe29f6ab419ea/scrapy_accessory-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce7f44d8c3753268483eb19667a5d6e4", "sha256": "3b81863376466f64c48232ea974381c930d3e1c1d5ae2ea7b075c6cadc297902"}, "downloads": -1, "filename": "scrapy-accessory-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ce7f44d8c3753268483eb19667a5d6e4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 3686, "upload_time": "2020-01-13T09:17:14", "upload_time_iso_8601": "2020-01-13T09:17:14.932676Z", "url": "https://files.pythonhosted.org/packages/1d/58/9743fb030482aa4d1f3b97b9c096789aa5a3fe73ec44fd0902ec85619d71/scrapy-accessory-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "6ff0f8e3cb0b13e95c56853258f4571e", "sha256": "2be74e25249c961414d0d1effd418fea96279304853c396df451584eb0a30dea"}, "downloads": -1, "filename": "scrapy_accessory-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6ff0f8e3cb0b13e95c56853258f4571e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 7413, "upload_time": "2020-03-27T04:02:15", "upload_time_iso_8601": "2020-03-27T04:02:15.576102Z", "url": "https://files.pythonhosted.org/packages/bf/f5/84fab6d9e753374d242eef95145ce7167ee345c102408c5d4d9f3d14ea5d/scrapy_accessory-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f5f7b8c0b2750469046da789df0d5fce", "sha256": "947d20416cf0a252d737b1d6c9b135ca4f968eda0811ebac3d8f9e7be47edc29"}, "downloads": -1, "filename": "scrapy-accessory-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f5f7b8c0b2750469046da789df0d5fce", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 4858, "upload_time": "2020-03-27T04:02:17", "upload_time_iso_8601": "2020-03-27T04:02:17.090781Z", "url": "https://files.pythonhosted.org/packages/01/60/f9cb74633f2192eee40b02a3d2c3dd7620e6141ecd1edd840736731373b8/scrapy-accessory-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6ff0f8e3cb0b13e95c56853258f4571e", "sha256": "2be74e25249c961414d0d1effd418fea96279304853c396df451584eb0a30dea"}, "downloads": -1, "filename": "scrapy_accessory-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6ff0f8e3cb0b13e95c56853258f4571e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 7413, "upload_time": "2020-03-27T04:02:15", "upload_time_iso_8601": "2020-03-27T04:02:15.576102Z", "url": "https://files.pythonhosted.org/packages/bf/f5/84fab6d9e753374d242eef95145ce7167ee345c102408c5d4d9f3d14ea5d/scrapy_accessory-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f5f7b8c0b2750469046da789df0d5fce", "sha256": "947d20416cf0a252d737b1d6c9b135ca4f968eda0811ebac3d8f9e7be47edc29"}, "downloads": -1, "filename": "scrapy-accessory-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f5f7b8c0b2750469046da789df0d5fce", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 4858, "upload_time": "2020-03-27T04:02:17", "upload_time_iso_8601": "2020-03-27T04:02:17.090781Z", "url": "https://files.pythonhosted.org/packages/01/60/f9cb74633f2192eee40b02a3d2c3dd7620e6141ecd1edd840736731373b8/scrapy-accessory-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:50 2020"}