{"info": {"author": "Kyle Miller", "author_email": "kylemiller457@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "\u00ef\u00bb\u00bf# Galio ![](https://github.com/kcnklub/Galio/blob/master/Galiopic.png)\nGalio is a light wrapper for the Riot Games, League of Legends API. I built this for a learning project and for a future\nproject that I plan on working on. I used Darquiche's project as inspiration for this. \nCheck out his project [here](https://github.com/Darquiche/Riot-Observer).\n\n## Installation\n```\npip install Galio\n```\n## Parameters\nAlong with Galio there is a params file that can be used to access tag \nstrings and queue strings instead of manually typing them out. For \nexample for the ranked solo queue string. \n```python\n>>>from Galio import parameters as param\n>>>param.queue_ranked['solo']\nRANKED_SOLO_5x5\n```\nAlso with queue strings there are all of the string for regions and tags used in the static data API.\n## API Versions\n| Name | Version |\n--- | --- \nChampion | V3\nSummoner | V3\nSpectator | V3\nMatch | V3\nChampion Mastery | V3\nLeague | V3\nStatic Data | V3 \nMasteries | V3\nRunes | V3\n\n## Examples\n```python\nfrom Galio import Galio\nfrom Galio import GalioException\n\nx = Galio('your-api-key')\n```\n### Tip\nI found that Riots API switch between using the summoner id, 'id' in the summoner object, and the account id. I did my best to define which one to use with which functions. \n### Summoner API\nYou can get summoner information by name, id, and AccountId\n```python\nsummoner = x.get_summoner_by_name('summoner-id')\n```\n### Champion API\nThe champion API allows you to call for all champions or get a certain champion by id or free to play champions.\n```python\nall_champions = x.get_all_champions()\nFTP_champions = x.get_all_champions(free_to_play='true')\nekko = x.get_champion_by_id(245)\n```\n### Spectator API\nThis is used for getting Active games of players by id and Featured games. \n```python\nactive_match = x.get_active_game_info_by_summoner_id(summoner-id)\nfeatured_games = x.get_featured_games()\n```\n### Match API\nYou are able to get recent match history, ranked match history, match details, and match timelines from this API\n```python\nmatch = x.get_match_by_id(match-id)\nranked_match_history = x.get_ranked_matchlist(account-id)\nrecent_match_history = x.get_recent_matchlist(account-id)\nmatch_timeline = x.get_match_timeline(match-id)\n```\n### Champion Mastery API\nInformation about champion mastery based on account and champion.\n```python\nchampion_mastery_list = x.get_champion_mastery_by_summoner_id(summoner-id)\nchampion_mastery_champion = x.get_champion_mastery_by_summoner_id_and_champion_id(summoner-id, champion-id)\ntotal_mastery = x.get_total_mastery_score(summoner-id)\n```\n### League API\nGet ranked information\n```python\nchallenger = x.get_challenger_league()\nmaster = x.get_master_league()\nsummoner_league_information = x.get_league_by_summoner_id(summoner-id)\nladder_pos = x.get_ladder_position(summoner-id)\n```\n### Static Information\nGet static data about the game. Every call in the Riot's API is included since there is so many I am not going to write all of them.\n Take a look in source for the rest they are all documented and should\n be easy to understand. \n```python\nx.get_static_champions()\nx.get_static_champions_by_id(245)\nx.w.get_static_item()\nx.get_static_item_by_id(3029)\nx.get_static_masteries_by_id(6131)\nx.get_static_runes_by_id(5273)\nx.get_static_profile_icon()\nx.get_static_summoner_spells()\n```\n### Masteries\nGet the mastery information of a summoner\n```python\nmasteries = x.get_masteries_by_summoner_id(summoner-id)\n```\n### Runes\nGet the rune information of a summoner\n```python\nrunes = x.get_rune_pages_by_summoner_id(summoner-id)\n```\n\n### Contributing\nFeel free to if you find a bug with this code to start an issue on the github page it will be much appreciated. \n\n### Disclaimer\nGalio isn't endorsed by Riot Games and doesn't reflect the views or opinions of Riot Games or anyone officially involved in producing or managing League of Legends. League of Legends and Riot Games are trademarks or registered trademarks of Riot Games, Inc. League of Legends \u00c2\u00a9 Riot Games, Inc. ", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kcnklub/lol-api.py", "keywords": "league", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "Galio", "package_url": "https://pypi.org/project/Galio/", "platform": "", "project_url": "https://pypi.org/project/Galio/", "project_urls": {"Homepage": "https://github.com/kcnklub/lol-api.py"}, "release_url": "https://pypi.org/project/Galio/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Python wrapper for using riot games league of legends api", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            \u00ef\u00bb\u00bf# Galio ![](https://github.com/kcnklub/Galio/blob/master/Galiopic.png)<br>Galio is a light wrapper for the Riot Games, League of Legends API. I built this for a learning project and for a future<br>project that I plan on working on. I used Darquiche's project as inspiration for this. <br>Check out his project [here](https://github.com/Darquiche/Riot-Observer).<br><br>## Installation<br>```<br>pip install Galio<br>```<br>## Parameters<br>Along with Galio there is a params file that can be used to access tag <br>strings and queue strings instead of manually typing them out. For <br>example for the ranked solo queue string. <br>```python<br>&gt;&gt;&gt;from Galio import parameters as param<br>&gt;&gt;&gt;param.queue_ranked['solo']<br>RANKED_SOLO_5x5<br>```<br>Also with queue strings there are all of the string for regions and tags used in the static data API.<br>## API Versions<br>| Name | Version |<br>--- | --- <br>Champion | V3<br>Summoner | V3<br>Spectator | V3<br>Match | V3<br>Champion Mastery | V3<br>League | V3<br>Static Data | V3 <br>Masteries | V3<br>Runes | V3<br><br>## Examples<br>```python<br>from Galio import Galio<br>from Galio import GalioException<br><br>x = Galio('your-api-key')<br>```<br>### Tip<br>I found that Riots API switch between using the summoner id, 'id' in the summoner object, and the account id. I did my best to define which one to use with which functions. <br>### Summoner API<br>You can get summoner information by name, id, and AccountId<br>```python<br>summoner = x.get_summoner_by_name('summoner-id')<br>```<br>### Champion API<br>The champion API allows you to call for all champions or get a certain champion by id or free to play champions.<br>```python<br>all_champions = x.get_all_champions()<br>FTP_champions = x.get_all_champions(free_to_play='true')<br>ekko = x.get_champion_by_id(245)<br>```<br>### Spectator API<br>This is used for getting Active games of players by id and Featured games. <br>```python<br>active_match = x.get_active_game_info_by_summoner_id(summoner-id)<br>featured_games = x.get_featured_games()<br>```<br>### Match API<br>You are able to get recent match history, ranked match history, match details, and match timelines from this API<br>```python<br>match = x.get_match_by_id(match-id)<br>ranked_match_history = x.get_ranked_matchlist(account-id)<br>recent_match_history = x.get_recent_matchlist(account-id)<br>match_timeline = x.get_match_timeline(match-id)<br>```<br>### Champion Mastery API<br>Information about champion mastery based on account and champion.<br>```python<br>champion_mastery_list = x.get_champion_mastery_by_summoner_id(summoner-id)<br>champion_mastery_champion = x.get_champion_mastery_by_summoner_id_and_champion_id(summoner-id, champion-id)<br>total_mastery = x.get_total_mastery_score(summoner-id)<br>```<br>### League API<br>Get ranked information<br>```python<br>challenger = x.get_challenger_league()<br>master = x.get_master_league()<br>summoner_league_information = x.get_league_by_summoner_id(summoner-id)<br>ladder_pos = x.get_ladder_position(summoner-id)<br>```<br>### Static Information<br>Get static data about the game. Every call in the Riot's API is included since there is so many I am not going to write all of them.<br> Take a look in source for the rest they are all documented and should<br> be easy to understand. <br>```python<br>x.get_static_champions()<br>x.get_static_champions_by_id(245)<br>x.w.get_static_item()<br>x.get_static_item_by_id(3029)<br>x.get_static_masteries_by_id(6131)<br>x.get_static_runes_by_id(5273)<br>x.get_static_profile_icon()<br>x.get_static_summoner_spells()<br>```<br>### Masteries<br>Get the mastery information of a summoner<br>```python<br>masteries = x.get_masteries_by_summoner_id(summoner-id)<br>```<br>### Runes<br>Get the rune information of a summoner<br>```python<br>runes = x.get_rune_pages_by_summoner_id(summoner-id)<br>```<br><br>### Contributing<br>Feel free to if you find a bug with this code to start an issue on the github page it will be much appreciated. <br><br>### Disclaimer<br>Galio isn't endorsed by Riot Games and doesn't reflect the views or opinions of Riot Games or anyone officially involved in producing or managing League of Legends. League of Legends and Riot Games are trademarks or registered trademarks of Riot Games, Inc. League of Legends \u00c2\u00a9 Riot Games, Inc. \n          </div>"}, "last_serial": 3056976, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "86b02a094e14995e4f5f408348ba6865", "sha256": "fdb08bf6e7bc4a81e1d034218c7f9909803b0c76622c2191df535e890623ad21"}, "downloads": -1, "filename": "Galio-1.0.0.tar.gz", "has_sig": false, "md5_digest": "86b02a094e14995e4f5f408348ba6865", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6820, "upload_time": "2017-07-29T00:06:09", "upload_time_iso_8601": "2017-07-29T00:06:09.791173Z", "url": "https://files.pythonhosted.org/packages/32/65/8e1f1f49ed7f078f5142e4d8a9a23d60209a724e5aba4fdbea713e9d1d58/Galio-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "86b02a094e14995e4f5f408348ba6865", "sha256": "fdb08bf6e7bc4a81e1d034218c7f9909803b0c76622c2191df535e890623ad21"}, "downloads": -1, "filename": "Galio-1.0.0.tar.gz", "has_sig": false, "md5_digest": "86b02a094e14995e4f5f408348ba6865", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6820, "upload_time": "2017-07-29T00:06:09", "upload_time_iso_8601": "2017-07-29T00:06:09.791173Z", "url": "https://files.pythonhosted.org/packages/32/65/8e1f1f49ed7f078f5142e4d8a9a23d60209a724e5aba4fdbea713e9d1d58/Galio-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:59:16 2020"}