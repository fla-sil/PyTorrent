{"info": {"author": "Thomas Nipen", "author_email": "thomas.nipen@met.no", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Scientific/Engineering :: Atmospheric Science", "Topic :: Scientific/Engineering :: Information Analysis"], "description": "Weather generator software\n==========================\n\n.. image:: https://travis-ci.org/metno/wxgen.svg?branch=master\n  :target: https://travis-ci.org/metno/wxgen\n.. image:: https://coveralls.io/repos/metno/wxgen/badge.svg?branch=master&service=github\n  :target: https://coveralls.io/github/metno/wxgen?branch=master\n\n``wxgen`` is a command-line tool for generating arbitrarily long weather time-series. The generator\nproduces **gridded** output for **multiple variables** (e.g. temperature, precipitation) and aims to\nhave realistic covariances in space, time, and across variables.\n\nThe generator uses a database of past weather model simulations (e.g 15 day forecasts) and combines the segments\nstochastically. Longer trajectories are created by concatenating the shorter trajectories from the database.\nThis is done by matching the end state of one trajectory with the beginning state of another. The\nmatching is done using a specified metric, such as the sum of the square differences between states\n(with some kind of normalization strategy as each atmospheric variable has different variances).\n\nInstallation\n------------\n\n**Ubuntu**\n\nInstall the required pacakges:\n\n.. code-block:: bash\n\n  sudo apt-get update\n  sudo apt-get install netcdf-bin libnetcdf-dev libhdf5-serial-dev\n  sudo apt-get install python-setuptools python-pip\n  sudo apt-get install python-numpy python-scipy python-matplotlib python-mpltoolkits.basemap\n\nThen install ``wxgen`` by executing the following inside the extracted folder:\n\n.. code-block:: bash\n\n  sudo pip install .\n\nThis will create the executable ``/usr/local/bin/wxgen``. If ``/user/local/bin`` is not in your PATH\nenvironment variable, then add it (i.e add ``export PATH=/usr/local/bin/:$PATH`` to ``~/.bashrc``).\nIf you do not have sudo privileges do:\n\n\n.. code-block:: bash\n\n  pip install .\n\nThis will create the executable ``~/.local/bin/wxgen``. Add the folder to your PATH environment\nvariable (if necessary).\n\nIf you are working on the code, the -e flag ensures that you do not need to rerun pip install every\ntime you make changes to the code:\n\n.. code-block:: bash\n\n  sudo pip install -e .\n\nExample use\n-----------\n\nWxgen has three commands. The first simulates sequences of weather as follows:\n\n.. code-block:: bash\n\n   wxgen sim -db examples/database.nc -n 10 -t 1000 -o output.nc\n\nThis command uses a NetCDF database file and creates 10 trajectories that are 100 days long. Results\nare stored in output.nc. In order to evaluate the performance of the generated data, a \"truth\" file\ncan be created using the following command:\n\n.. code-block:: bash\n\n   wxgen truth -db examples/database.nc -o truth.nc\n\nThis command uses the day 1 forecasts from the database as the truth, and joins these together into\na sequence that spans the dates in the dataset.\n\nFinally, the generated sequences can be evaluated using th verif command:\n\n.. code-block:: bash\n\n   wxgen verif -truth truth.nc output.nc -m timeseries\n   wxgen verif -truth truth.nc output.nc -m variance\n\nThe -m switch selects the verification metric, in this case a timeseries.\n\n.. image:: examples/example.gif\n    :alt: Example plot\n    :width: 400\n    :align: center\n\nCopyright and license\n---------------------\nCopyright (C) 2017 MET Norway. Wxgen is licensed under `LGPL version 3\n<https://github.com/metno/wxgen/blob/master/LICENSE>`_ or (at your option) any later version.", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/metno/wxgen", "keywords": "meteorology generator stochastic weather", "license": "LGPL-3", "maintainer": null, "maintainer_email": null, "name": "wxgen", "package_url": "https://pypi.org/project/wxgen/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/wxgen/", "project_urls": {"Homepage": "https://github.com/metno/wxgen"}, "release_url": "https://pypi.org/project/wxgen/0.2.0a1/", "requires_dist": null, "requires_python": null, "summary": "A package for generating arbitrarily long weather time-series", "version": "0.2.0a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/metno/wxgen\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/metno/wxgen.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ac4fd85d4259a7fe412d69b7a65440fb142c7a3/68747470733a2f2f7472617669732d63692e6f72672f6d65746e6f2f777867656e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/metno/wxgen?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/metno/wxgen/badge.svg?branch=master&amp;service=github\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb12d2e486c911743d9b9b522f8929387c6347d1/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6d65746e6f2f777867656e2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562\"></a>\n<p><tt>wxgen</tt> is a command-line tool for generating arbitrarily long weather time-series. The generator\nproduces <strong>gridded</strong> output for <strong>multiple variables</strong> (e.g. temperature, precipitation) and aims to\nhave realistic covariances in space, time, and across variables.</p>\n<p>The generator uses a database of past weather model simulations (e.g 15 day forecasts) and combines the segments\nstochastically. Longer trajectories are created by concatenating the shorter trajectories from the database.\nThis is done by matching the end state of one trajectory with the beginning state of another. The\nmatching is done using a specified metric, such as the sum of the square differences between states\n(with some kind of normalization strategy as each atmospheric variable has different variances).</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><strong>Ubuntu</strong></p>\n<p>Install the required pacakges:</p>\n<pre>sudo apt-get update\nsudo apt-get install netcdf-bin libnetcdf-dev libhdf5-serial-dev\nsudo apt-get install python-setuptools python-pip\nsudo apt-get install python-numpy python-scipy python-matplotlib python-mpltoolkits.basemap\n</pre>\n<p>Then install <tt>wxgen</tt> by executing the following inside the extracted folder:</p>\n<pre>sudo pip install .\n</pre>\n<p>This will create the executable <tt>/usr/local/bin/wxgen</tt>. If <tt>/user/local/bin</tt> is not in your PATH\nenvironment variable, then add it (i.e add <tt>export <span class=\"pre\">PATH=/usr/local/bin/:$PATH</span></tt> to <tt><span class=\"pre\">~/.bashrc</span></tt>).\nIf you do not have sudo privileges do:</p>\n<pre>pip install .\n</pre>\n<p>This will create the executable <tt><span class=\"pre\">~/.local/bin/wxgen</span></tt>. Add the folder to your PATH environment\nvariable (if necessary).</p>\n<p>If you are working on the code, the -e flag ensures that you do not need to rerun pip install every\ntime you make changes to the code:</p>\n<pre>sudo pip install -e .\n</pre>\n</div>\n<div id=\"example-use\">\n<h2>Example use</h2>\n<p>Wxgen has three commands. The first simulates sequences of weather as follows:</p>\n<pre>wxgen sim -db examples/database.nc -n <span class=\"m\">10</span> -t <span class=\"m\">1000</span> -o output.nc\n</pre>\n<p>This command uses a NetCDF database file and creates 10 trajectories that are 100 days long. Results\nare stored in output.nc. In order to evaluate the performance of the generated data, a \u201ctruth\u201d file\ncan be created using the following command:</p>\n<pre>wxgen truth -db examples/database.nc -o truth.nc\n</pre>\n<p>This command uses the day 1 forecasts from the database as the truth, and joins these together into\na sequence that spans the dates in the dataset.</p>\n<p>Finally, the generated sequences can be evaluated using th verif command:</p>\n<pre>wxgen verif -truth truth.nc output.nc -m timeseries\nwxgen verif -truth truth.nc output.nc -m variance\n</pre>\n<p>The -m switch selects the verification metric, in this case a timeseries.</p>\n<img alt=\"Example plot\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8275d7911b96ce525949154abdcd66fa84f976c1/6578616d706c65732f6578616d706c652e676966\" width=\"400\">\n</div>\n<div id=\"copyright-and-license\">\n<h2>Copyright and license</h2>\n<p>Copyright (C) 2017 MET Norway. Wxgen is licensed under <a href=\"https://github.com/metno/wxgen/blob/master/LICENSE\" rel=\"nofollow\">LGPL version 3</a> or (at your option) any later version.</p>\n</div>\n\n          </div>"}, "last_serial": 2757591, "releases": {"0.2.0a1": [{"comment_text": "", "digests": {"md5": "922fcf6a47c09f35b64830dac5ecb70a", "sha256": "be60e14bc32eeed1e3eb7da4fc4c924f2a28cf9c61b3dbac214411e3f70d555b"}, "downloads": -1, "filename": "wxgen-0.2.0a1-py2-none-any.whl", "has_sig": false, "md5_digest": "922fcf6a47c09f35b64830dac5ecb70a", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 32066, "upload_time": "2017-04-06T13:34:36", "upload_time_iso_8601": "2017-04-06T13:34:36.606787Z", "url": "https://files.pythonhosted.org/packages/1a/0a/3c07153f0b1955ac4b03185a99f3fcc6c6be26e82f52b3af0445f571b260/wxgen-0.2.0a1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e280da5dc4a9150e1e21e92dfb7bb79", "sha256": "87a35fb44f3dc2447e8d17da483da280b88e3e3fb3559ef479aa43e96aff1b65"}, "downloads": -1, "filename": "wxgen-0.2.0a1.tar.gz", "has_sig": false, "md5_digest": "3e280da5dc4a9150e1e21e92dfb7bb79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27036, "upload_time": "2017-04-06T13:34:38", "upload_time_iso_8601": "2017-04-06T13:34:38.759666Z", "url": "https://files.pythonhosted.org/packages/f6/88/125fa229dae8a15f07217c4032d3d4ce7d4932b75516fab8edc0b0bba4ee/wxgen-0.2.0a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "922fcf6a47c09f35b64830dac5ecb70a", "sha256": "be60e14bc32eeed1e3eb7da4fc4c924f2a28cf9c61b3dbac214411e3f70d555b"}, "downloads": -1, "filename": "wxgen-0.2.0a1-py2-none-any.whl", "has_sig": false, "md5_digest": "922fcf6a47c09f35b64830dac5ecb70a", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 32066, "upload_time": "2017-04-06T13:34:36", "upload_time_iso_8601": "2017-04-06T13:34:36.606787Z", "url": "https://files.pythonhosted.org/packages/1a/0a/3c07153f0b1955ac4b03185a99f3fcc6c6be26e82f52b3af0445f571b260/wxgen-0.2.0a1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e280da5dc4a9150e1e21e92dfb7bb79", "sha256": "87a35fb44f3dc2447e8d17da483da280b88e3e3fb3559ef479aa43e96aff1b65"}, "downloads": -1, "filename": "wxgen-0.2.0a1.tar.gz", "has_sig": false, "md5_digest": "3e280da5dc4a9150e1e21e92dfb7bb79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27036, "upload_time": "2017-04-06T13:34:38", "upload_time_iso_8601": "2017-04-06T13:34:38.759666Z", "url": "https://files.pythonhosted.org/packages/f6/88/125fa229dae8a15f07217c4032d3d4ce7d4932b75516fab8edc0b0bba4ee/wxgen-0.2.0a1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:26:38 2020"}