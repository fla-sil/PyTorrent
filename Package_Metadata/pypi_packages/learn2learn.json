{"info": {"author": "Debajyoti Datta, Ian bunner, Seb Arnold, Praateek Mahajan", "author_email": "smr.arnold@gmail.com, praateekm@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "<p align=\"center\"><img src=\"https://raw.githubusercontent.com/learnables/learn2learn/gh-pages/assets/img/l2l-full.png\" height=\"120px\" /></p>\n\n--------------------------------------------------------------------------------\n\n[![Build Status](https://travis-ci.com/learnables/learn2learn.svg?branch=master)](https://travis-ci.com/learnables/learn2learn)\n\nlearn2learn is a PyTorch library for meta-learning implementations.\n\nThe goal of meta-learning is to enable agents to *learn how to learn*.\nThat is, we would like our agents to become better learners as they solve more and more tasks.\nFor example, the animation below shows an agent that learns to run after a only one parameter update.\n\n<p align=\"center\"><img src=\"http://learn2learn.net/assets/img/halfcheetah.gif\" height=\"250px\" /></p>\n\n**Features**\n\nlearn2learn provides high- and low-level utilities for meta-learning.\nThe high-level utilities allow arbitrary users to take advantage of exisiting meta-learning algorithms.\nThe low-level utilities enable researchers to develop new and better meta-learning algorithms.\n\nSome features of learn2learn include:\n\n* Modular API: implement your own training loops with our low-level utilities.\n* Provides various meta-learning algorithms (e.g. MAML, FOMAML, MetaSGD, ProtoNets, DiCE)\n* Task generator with unified API, compatible with torchvision, torchtext, torchaudio, and cherry.\n* Provides standardized meta-learning tasks for vision (Omniglot, mini-ImageNet), reinforcement learning (Particles, Mujoco), and even text (news classification).\n* 100% compatible with PyTorch -- use your own modules, datasets, or libraries!\n\n## Installation\n\n~~~bash\npip install learn2learn\n~~~\n\n## API Demo\n\nThe following is an example of using the high-level MAML implementation on MNIST.\nFor more algorithms and lower-level utilities, please refer to the [documentation](http://learn2learn.net/docs/learn2learn/) or the [examples](https://github.com/learnables/learn2learn/tree/master/examples).\n\n~~~python\nimport learn2learn as l2l\n\nmnist = torchvision.datasets.MNIST(root=\"/tmp/mnist\", train=True)\n\nmnist = l2l.data.MetaDataset(mnist)\ntrain_tasks = l2l.data.TaskDataset(mnist,\n                                   task_transforms=[\n                                        NWays(mnist, n=3),\n                                        KShots(mnist, k=1),\n                                        LoadData(mnist),\n                                   ],\n                                   num_tasks=10)\nmodel = Net()\nmaml = l2l.algorithms.MAML(model, lr=1e-3, first_order=False)\nopt = optim.Adam(maml.parameters(), lr=4e-3)\n\nfor iteration in range(num_iterations):\n    learner = maml.clone()  # Creates a clone of model\n    for task in train_tasks:\n        # Split task in adaptation_task and evalutation_task\n        # Fast adapt\n        for step in range(adaptation_steps):\n            error = compute_loss(adaptation_task)\n            learner.adapt(error)\n\n        # Compute evaluation loss\n        evaluation_error = compute_loss(evaluation_task)\n\n        # Meta-update the model parameters\n        opt.zero_grad()\n        evaluation_error.backward()\n        opt.step()\n~~~\n\n## Changelog\n\nA human-readable changelog is available in the [CHANGELOG.md](CHANGELOG.md) file.\n\n## Documentation\n\nDocumentation and tutorials are available on learn2learn\u2019s website: [http://learn2learn.net](http://learn2learn.net).\n\n## Citation\n\nTo cite the `learn2learn` repository in your academic publications, please use the following reference.\n\n> Sebastien M.R. Arnold, Praateek Mahajan, Debajyoti Datta, Ian Bunner. `\"learn2learn\"`. [https://github.com/learnables/learn2learn](https://github.com/learnables/learn2learn), 2019.\n\nYou can also use the following Bibtex entry.\n\n~~~bib\n@misc{learn2learn2019,\n    author       = {Sebastien M.R. Arnold, Praateek Mahajan, Debajyoti Datta, Ian Bunner},\n    title        = {learn2learn},\n    month        = sep,\n    year         = 2019,\n    url          = {https://github.com/learnables/learn2learn}\n    }\n~~~\n\n### Acknowledgements & Friends\n\n1. The RL environments are adapted from Tristan Deleu's [implementations](https://github.com/tristandeleu/pytorch-maml-rl) and from the ProMP [repository](https://github.com/jonasrothfuss/ProMP/). Both shared with permission, under the MIT License.\n2. [TorchMeta](https://github.com/tristandeleu/pytorch-meta) is similar library, with a focus on supervised meta-learning. If learn2learn were missing a particular functionality, we would go check if TorchMeta has it. But we would also open an issue ;)\n3. [higher](https://github.com/facebookresearch/higher) is a PyTorch library that also enables differentiating through optimization inner-loops. Their approach is different from learn2learn in that they monkey-patch nn.Module to be stateless. For more information, refer to [their ArXiv paper](https://arxiv.org/abs/1910.01727).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/learnables/learn2learn/archive/0.1.1.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/learnables/learn2learn", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "learn2learn", "package_url": "https://pypi.org/project/learn2learn/", "platform": "", "project_url": "https://pypi.org/project/learn2learn/", "project_urls": {"Download": "https://github.com/learnables/learn2learn/archive/0.1.1.zip", "Homepage": "https://github.com/learnables/learn2learn"}, "release_url": "https://pypi.org/project/learn2learn/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "PyTorch Meta-Learning Framework for Researchers", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\"><img height=\"120px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bae80b56acc961adca8c5acdfe2960ffb3d2f30d/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6c6561726e61626c65732f6c6561726e326c6561726e2f67682d70616765732f6173736574732f696d672f6c326c2d66756c6c2e706e67\"></p>\n<hr>\n<p><a href=\"https://travis-ci.com/learnables/learn2learn\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fa7120b8c5c07e31b8f3e20af5434eb05e48a714/68747470733a2f2f7472617669732d63692e636f6d2f6c6561726e61626c65732f6c6561726e326c6561726e2e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>learn2learn is a PyTorch library for meta-learning implementations.</p>\n<p>The goal of meta-learning is to enable agents to <em>learn how to learn</em>.\nThat is, we would like our agents to become better learners as they solve more and more tasks.\nFor example, the animation below shows an agent that learns to run after a only one parameter update.</p>\n<p align=\"center\"><img height=\"250px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c2fa86471a6c0e8f67599c5bf4c39c533a60572b/687474703a2f2f6c6561726e326c6561726e2e6e65742f6173736574732f696d672f68616c66636865657461682e676966\"></p>\n<p><strong>Features</strong></p>\n<p>learn2learn provides high- and low-level utilities for meta-learning.\nThe high-level utilities allow arbitrary users to take advantage of exisiting meta-learning algorithms.\nThe low-level utilities enable researchers to develop new and better meta-learning algorithms.</p>\n<p>Some features of learn2learn include:</p>\n<ul>\n<li>Modular API: implement your own training loops with our low-level utilities.</li>\n<li>Provides various meta-learning algorithms (e.g. MAML, FOMAML, MetaSGD, ProtoNets, DiCE)</li>\n<li>Task generator with unified API, compatible with torchvision, torchtext, torchaudio, and cherry.</li>\n<li>Provides standardized meta-learning tasks for vision (Omniglot, mini-ImageNet), reinforcement learning (Particles, Mujoco), and even text (news classification).</li>\n<li>100% compatible with PyTorch -- use your own modules, datasets, or libraries!</li>\n</ul>\n<h2>Installation</h2>\n<pre>pip install learn2learn\n</pre>\n<h2>API Demo</h2>\n<p>The following is an example of using the high-level MAML implementation on MNIST.\nFor more algorithms and lower-level utilities, please refer to the <a href=\"http://learn2learn.net/docs/learn2learn/\" rel=\"nofollow\">documentation</a> or the <a href=\"https://github.com/learnables/learn2learn/tree/master/examples\" rel=\"nofollow\">examples</a>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">learn2learn</span> <span class=\"k\">as</span> <span class=\"nn\">l2l</span>\n\n<span class=\"n\">mnist</span> <span class=\"o\">=</span> <span class=\"n\">torchvision</span><span class=\"o\">.</span><span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">MNIST</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"o\">=</span><span class=\"s2\">\"/tmp/mnist\"</span><span class=\"p\">,</span> <span class=\"n\">train</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">mnist</span> <span class=\"o\">=</span> <span class=\"n\">l2l</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">MetaDataset</span><span class=\"p\">(</span><span class=\"n\">mnist</span><span class=\"p\">)</span>\n<span class=\"n\">train_tasks</span> <span class=\"o\">=</span> <span class=\"n\">l2l</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">TaskDataset</span><span class=\"p\">(</span><span class=\"n\">mnist</span><span class=\"p\">,</span>\n                                   <span class=\"n\">task_transforms</span><span class=\"o\">=</span><span class=\"p\">[</span>\n                                        <span class=\"n\">NWays</span><span class=\"p\">(</span><span class=\"n\">mnist</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">),</span>\n                                        <span class=\"n\">KShots</span><span class=\"p\">(</span><span class=\"n\">mnist</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">),</span>\n                                        <span class=\"n\">LoadData</span><span class=\"p\">(</span><span class=\"n\">mnist</span><span class=\"p\">),</span>\n                                   <span class=\"p\">],</span>\n                                   <span class=\"n\">num_tasks</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Net</span><span class=\"p\">()</span>\n<span class=\"n\">maml</span> <span class=\"o\">=</span> <span class=\"n\">l2l</span><span class=\"o\">.</span><span class=\"n\">algorithms</span><span class=\"o\">.</span><span class=\"n\">MAML</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">1e-3</span><span class=\"p\">,</span> <span class=\"n\">first_order</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">opt</span> <span class=\"o\">=</span> <span class=\"n\">optim</span><span class=\"o\">.</span><span class=\"n\">Adam</span><span class=\"p\">(</span><span class=\"n\">maml</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">(),</span> <span class=\"n\">lr</span><span class=\"o\">=</span><span class=\"mf\">4e-3</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">iteration</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_iterations</span><span class=\"p\">):</span>\n    <span class=\"n\">learner</span> <span class=\"o\">=</span> <span class=\"n\">maml</span><span class=\"o\">.</span><span class=\"n\">clone</span><span class=\"p\">()</span>  <span class=\"c1\"># Creates a clone of model</span>\n    <span class=\"k\">for</span> <span class=\"n\">task</span> <span class=\"ow\">in</span> <span class=\"n\">train_tasks</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Split task in adaptation_task and evalutation_task</span>\n        <span class=\"c1\"># Fast adapt</span>\n        <span class=\"k\">for</span> <span class=\"n\">step</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">adaptation_steps</span><span class=\"p\">):</span>\n            <span class=\"n\">error</span> <span class=\"o\">=</span> <span class=\"n\">compute_loss</span><span class=\"p\">(</span><span class=\"n\">adaptation_task</span><span class=\"p\">)</span>\n            <span class=\"n\">learner</span><span class=\"o\">.</span><span class=\"n\">adapt</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Compute evaluation loss</span>\n        <span class=\"n\">evaluation_error</span> <span class=\"o\">=</span> <span class=\"n\">compute_loss</span><span class=\"p\">(</span><span class=\"n\">evaluation_task</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Meta-update the model parameters</span>\n        <span class=\"n\">opt</span><span class=\"o\">.</span><span class=\"n\">zero_grad</span><span class=\"p\">()</span>\n        <span class=\"n\">evaluation_error</span><span class=\"o\">.</span><span class=\"n\">backward</span><span class=\"p\">()</span>\n        <span class=\"n\">opt</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">()</span>\n</pre>\n<h2>Changelog</h2>\n<p>A human-readable changelog is available in the <a href=\"CHANGELOG.md\" rel=\"nofollow\">CHANGELOG.md</a> file.</p>\n<h2>Documentation</h2>\n<p>Documentation and tutorials are available on learn2learn\u2019s website: <a href=\"http://learn2learn.net\" rel=\"nofollow\">http://learn2learn.net</a>.</p>\n<h2>Citation</h2>\n<p>To cite the <code>learn2learn</code> repository in your academic publications, please use the following reference.</p>\n<blockquote>\n<p>Sebastien M.R. Arnold, Praateek Mahajan, Debajyoti Datta, Ian Bunner. <code>\"learn2learn\"</code>. <a href=\"https://github.com/learnables/learn2learn\" rel=\"nofollow\">https://github.com/learnables/learn2learn</a>, 2019.</p>\n</blockquote>\n<p>You can also use the following Bibtex entry.</p>\n<pre><span class=\"nc\">@misc</span><span class=\"p\">{</span><span class=\"nl\">learn2learn2019</span><span class=\"p\">,</span>\n    <span class=\"na\">author</span>       <span class=\"p\">=</span> <span class=\"s\">{Sebastien M.R. Arnold, Praateek Mahajan, Debajyoti Datta, Ian Bunner}</span><span class=\"p\">,</span>\n    <span class=\"na\">title</span>        <span class=\"p\">=</span> <span class=\"s\">{learn2learn}</span><span class=\"p\">,</span>\n    <span class=\"na\">month</span>        <span class=\"p\">=</span> <span class=\"nv\">sep</span><span class=\"p\">,</span>\n    <span class=\"na\">year</span>         <span class=\"p\">=</span> <span class=\"m\">2019</span><span class=\"p\">,</span>\n    <span class=\"na\">url</span>          <span class=\"p\">=</span> <span class=\"s\">{https://github.com/learnables/learn2learn}</span>\n    <span class=\"p\">}</span>\n</pre>\n<h3>Acknowledgements &amp; Friends</h3>\n<ol>\n<li>The RL environments are adapted from Tristan Deleu's <a href=\"https://github.com/tristandeleu/pytorch-maml-rl\" rel=\"nofollow\">implementations</a> and from the ProMP <a href=\"https://github.com/jonasrothfuss/ProMP/\" rel=\"nofollow\">repository</a>. Both shared with permission, under the MIT License.</li>\n<li><a href=\"https://github.com/tristandeleu/pytorch-meta\" rel=\"nofollow\">TorchMeta</a> is similar library, with a focus on supervised meta-learning. If learn2learn were missing a particular functionality, we would go check if TorchMeta has it. But we would also open an issue ;)</li>\n<li><a href=\"https://github.com/facebookresearch/higher\" rel=\"nofollow\">higher</a> is a PyTorch library that also enables differentiating through optimization inner-loops. Their approach is different from learn2learn in that they monkey-patch nn.Module to be stateless. For more information, refer to <a href=\"https://arxiv.org/abs/1910.01727\" rel=\"nofollow\">their ArXiv paper</a>.</li>\n</ol>\n\n          </div>"}, "last_serial": 7094484, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "eec687d404a924c125813d0ea9fde0d7", "sha256": "b11d395bb869525f670c41d227dc97fac3f87a6de668731a203d822a53cc5a08"}, "downloads": -1, "filename": "learn2learn-0.0.1.tar.gz", "has_sig": false, "md5_digest": "eec687d404a924c125813d0ea9fde0d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1367, "upload_time": "2019-05-08T16:37:11", "upload_time_iso_8601": "2019-05-08T16:37:11.096446Z", "url": "https://files.pythonhosted.org/packages/7a/03/726a924b4ccde231f9d223872b962447dc1cad3bd3bfe3096621eceb4a26/learn2learn-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "0b1ab2d4f2089bb727ef9a2effe2cb8e", "sha256": "6baa9795580c47731b602b0387c1448be24443353eb403dcbacc5b2af7fd99f1"}, "downloads": -1, "filename": "learn2learn-0.0.2.tar.gz", "has_sig": false, "md5_digest": "0b1ab2d4f2089bb727ef9a2effe2cb8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20114, "upload_time": "2019-08-13T05:42:53", "upload_time_iso_8601": "2019-08-13T05:42:53.358788Z", "url": "https://files.pythonhosted.org/packages/92/42/ad0c64fd5dda78bdcf476ac97fc49dca84248156e2190c03c807b30f58a0/learn2learn-0.0.2.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "c594b859e11fd87ef631c8ff785d0f41", "sha256": "2848943968deeb39fd747991b5c3a7e84edb0486f908ee6aa877be4d9b472f4c"}, "downloads": -1, "filename": "learn2learn-0.0.4.tar.gz", "has_sig": false, "md5_digest": "c594b859e11fd87ef631c8ff785d0f41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23954, "upload_time": "2019-09-12T05:12:44", "upload_time_iso_8601": "2019-09-12T05:12:44.452097Z", "url": "https://files.pythonhosted.org/packages/84/19/7b49dfb8958443ae97f2a714d5e7fbe3bcb4509d9234af04e4c10eb9aa20/learn2learn-0.0.4.tar.gz", "yanked": false}], "0.0.4.1": [{"comment_text": "", "digests": {"md5": "5c56ebebdc4a63c660992dd3b6fbdc92", "sha256": "e765d874315a3f8db579a247a53d1760c6a842ed77b6a9309503668c9e188323"}, "downloads": -1, "filename": "learn2learn-0.0.4.1.tar.gz", "has_sig": false, "md5_digest": "5c56ebebdc4a63c660992dd3b6fbdc92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25804, "upload_time": "2019-09-16T06:07:53", "upload_time_iso_8601": "2019-09-16T06:07:53.185637Z", "url": "https://files.pythonhosted.org/packages/b5/eb/1a198a8061529e8f2b82682af0dc2bcf06a90776d498f8434c563f1c4001/learn2learn-0.0.4.1.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "37666a5de950fb6c6d1ee1cd8a75fb63", "sha256": "d392056a10b8934a4ec028abbccc32dbdb1cd8ad6de821405de621d10687fad6"}, "downloads": -1, "filename": "learn2learn-0.0.5.tar.gz", "has_sig": false, "md5_digest": "37666a5de950fb6c6d1ee1cd8a75fb63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30599, "upload_time": "2019-11-07T17:29:54", "upload_time_iso_8601": "2019-11-07T17:29:54.229300Z", "url": "https://files.pythonhosted.org/packages/9e/31/da004bafc94300b7d1d2c6da297c9064ae5bab8181e5d2eb02f669279d4b/learn2learn-0.0.5.tar.gz", "yanked": false}], "0.0.5.1": [{"comment_text": "", "digests": {"md5": "2a99113ba2c9aaf6b5a7bb8cb52e7224", "sha256": "227d334499506f31fa9efac9f69658dc0fa880c3b65d44bc6d9429cc4371bcff"}, "downloads": -1, "filename": "learn2learn-0.0.5.1.tar.gz", "has_sig": false, "md5_digest": "2a99113ba2c9aaf6b5a7bb8cb52e7224", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30604, "upload_time": "2019-11-11T17:19:05", "upload_time_iso_8601": "2019-11-11T17:19:05.454669Z", "url": "https://files.pythonhosted.org/packages/e0/5b/cd23bf4398c4f4ea97b5de8ac4bb716401221a80c7a19b873d5daadf66b1/learn2learn-0.0.5.1.tar.gz", "yanked": false}], "0.0.5.2": [{"comment_text": "", "digests": {"md5": "49c84b24fa705dba405f1c1c050e7ea9", "sha256": "1143d09c6df27648162bb1c0d3f81dbfcd3272bc45d1f6e30be23e9e7a26f679"}, "downloads": -1, "filename": "learn2learn-0.0.5.2.tar.gz", "has_sig": false, "md5_digest": "49c84b24fa705dba405f1c1c050e7ea9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30880, "upload_time": "2019-12-04T20:12:08", "upload_time_iso_8601": "2019-12-04T20:12:08.719542Z", "url": "https://files.pythonhosted.org/packages/1f/b7/fa51f202c6fbb85ca2a7010df4a3373b5974f90e23e7e13b70aed4d84706/learn2learn-0.0.5.2.tar.gz", "yanked": false}], "0.0.6.0": [{"comment_text": "", "digests": {"md5": "b147a699fd58e2911869959f6740a86c", "sha256": "0c09c4adcccb7484b4b12e04b452b95148e758099a627ab3fd35dd8e649a6ea4"}, "downloads": -1, "filename": "learn2learn-0.0.6.0.tar.gz", "has_sig": false, "md5_digest": "b147a699fd58e2911869959f6740a86c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32712, "upload_time": "2019-12-08T02:52:31", "upload_time_iso_8601": "2019-12-08T02:52:31.108196Z", "url": "https://files.pythonhosted.org/packages/18/f8/8ddb18e7fa8a9f9679b048bff85d8ece47c7b17f83e4266030e50b7f88e4/learn2learn-0.0.6.0.tar.gz", "yanked": false}], "0.0.6.1": [{"comment_text": "", "digests": {"md5": "6e3b6f3b2b0b68d1506d64b738f66ad0", "sha256": "c8ed14b5dbd3b6e13d81bc8deb0dfd78c1e342b959fd61baf19fb592389ea01a"}, "downloads": -1, "filename": "learn2learn-0.0.6.1-py3.7-linux-x86_64.egg", "has_sig": false, "md5_digest": "6e3b6f3b2b0b68d1506d64b738f66ad0", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 742608, "upload_time": "2020-02-26T18:17:51", "upload_time_iso_8601": "2020-02-26T18:17:51.687221Z", "url": "https://files.pythonhosted.org/packages/ca/09/668075d5f620b2fead96d348467887a58deccf5bb663eefd0272fee81471/learn2learn-0.0.6.1-py3.7-linux-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "12b5fcc90a052b11ed2d574c2ffcc5c5", "sha256": "3964e56250c85ccbd0df7e44e8d355d3bf4fc4322652b0133b1657b12be9d351"}, "downloads": -1, "filename": "learn2learn-0.0.6.1.tar.gz", "has_sig": false, "md5_digest": "12b5fcc90a052b11ed2d574c2ffcc5c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33481, "upload_time": "2020-01-14T17:45:23", "upload_time_iso_8601": "2020-01-14T17:45:23.390353Z", "url": "https://files.pythonhosted.org/packages/d0/98/aefc116d869e9da29daf98fa1de13b3317be30930908dfa5893d0cccf7c2/learn2learn-0.0.6.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "4440dc4f1cfdd8a70d38cac8a1055df4", "sha256": "895233296601ef54370f7faf9fe21f34468563b119c014142629d8dbe66228fc"}, "downloads": -1, "filename": "learn2learn-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4440dc4f1cfdd8a70d38cac8a1055df4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1309305, "upload_time": "2020-03-01T08:48:16", "upload_time_iso_8601": "2020-03-01T08:48:16.983686Z", "url": "https://files.pythonhosted.org/packages/2a/1c/a3fd9a8d2bab64af5934e727131fcebf7045e5e617151ad44264a33f573a/learn2learn-0.1.0.tar.gz", "yanked": false}], "0.1.0.1": [{"comment_text": "", "digests": {"md5": "d6fb43ba05bcd3a532991e8115561e90", "sha256": "af666854fb0481f59fe4d1b18d05afaad22b44bd1e787550306a15eb427037d3"}, "downloads": -1, "filename": "learn2learn-0.1.0.1.tar.gz", "has_sig": false, "md5_digest": "d6fb43ba05bcd3a532991e8115561e90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 533838, "upload_time": "2020-03-02T03:18:40", "upload_time_iso_8601": "2020-03-02T03:18:40.105207Z", "url": "https://files.pythonhosted.org/packages/f8/a3/47acb68bd34354502b39827a6a4e5091e4b1601c70228bf7d77ca1c1bb88/learn2learn-0.1.0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "3947be837c3898e48d35bc3b5dfc6651", "sha256": "d79fa3c25736015c887aec8165ba27b2fbbc79fabd9c8385853a7fe7846ad3aa"}, "downloads": -1, "filename": "learn2learn-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3947be837c3898e48d35bc3b5dfc6651", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 528052, "upload_time": "2020-04-24T17:00:54", "upload_time_iso_8601": "2020-04-24T17:00:54.557898Z", "url": "https://files.pythonhosted.org/packages/de/4c/0f7565f495ef6b44a5d8fad2e8ecfda3ee55d20a8c13f3805091f490fe18/learn2learn-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3947be837c3898e48d35bc3b5dfc6651", "sha256": "d79fa3c25736015c887aec8165ba27b2fbbc79fabd9c8385853a7fe7846ad3aa"}, "downloads": -1, "filename": "learn2learn-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3947be837c3898e48d35bc3b5dfc6651", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 528052, "upload_time": "2020-04-24T17:00:54", "upload_time_iso_8601": "2020-04-24T17:00:54.557898Z", "url": "https://files.pythonhosted.org/packages/de/4c/0f7565f495ef6b44a5d8fad2e8ecfda3ee55d20a8c13f3805091f490fe18/learn2learn-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:17 2020"}