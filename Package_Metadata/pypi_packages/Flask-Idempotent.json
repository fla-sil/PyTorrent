{"info": {"author": "Franklyn Tackitt", "author_email": "frank@comanage.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "****************\r\nFlask-Idempotent\r\n****************\r\n\r\n|pypi| |build| |coverage|\r\n\r\n-----\r\n\r\nFlask-Idempotent is an exceedingly simple (by design) idempotent request handler for Flask. Implemented as an extension, using Redis as both a lock and response datastore for speed and ease of use and implementation, this will help you simply add idempotency to any endpoint on your Flask application.\r\n\r\n============\r\nInstallation\r\n============\r\n\r\n.. code-block:: bash\r\n\r\n    $ pip install flask-idempotent\r\n\r\n=====\r\nUsage\r\n=====\r\n\r\n.. code-block:: python\r\n\r\n    from flask import Flask\r\n    my_app = Flask(__name__)\r\n    Idempotent(my_app)\r\n\r\n.. code-block:: html\r\n\r\n    <form>\r\n      {{ idempotent_input() }}\r\n      <!-- the rest of your form -->\r\n    </form>\r\n\r\nAnd thats it! (well, if the defaults work for you)\r\n\r\n============\r\nHow it Works\r\n============\r\n\r\nAny request that includes **__idempotent_key** in the request arguments or post data, or **X-Idempotent-Key** in the request's headers will be tracked as a idempotent request. This only takes effect for 240 seconds by default, but this is configurable.\r\n\r\nWhen the first request with a key comes in, Flask-Idempotent will attempt to set IDEMPOTENT_{KEY} in redis. It will then process the request like normal, saving the response in redis for future requests to return. It also uses Redis' pub/sub infrastructure to send a notification to any other requests with the same key.\r\n\r\nAny subsequent (simultaneous or otherwise) requests will fail to set this key in Redis, as its already set. They will then wait for a pub/sub notification that the master request has finished, retrieve the prior response, and return that.\r\n\r\n==================\r\nWhy should I care?\r\n==================\r\n\r\nYou can't trust user input. Thats rule one of web development. This won't beat malicious attempts to attack your form submissions, but it will help when a user submits a page twice, or an api request is sent twice, due to network failure or otherwise. This will prevent those double submissions and any subsequent results of them.\r\n\r\n=============\r\nConfiguration\r\n=============\r\n\r\nFlask-Idempotent requires Redis to function. It defaults to using redis on the local machine, and the following configuration values are available. Just set them in your flask configuration\r\n\r\n.. code-block:: python\r\n\r\n    # The Redis host URL\r\n    REDIS_URL = 'redis://some-host:6379/'\r\n\r\n    # In seconds, the timeout for a slave request to wait for the first to\r\n    #  complete\r\n    IDEMPOTENT_TIMEOUT = 60\r\n\r\n    # In seconds, the amount of time to store the master response before\r\n    #  expiration in Redis\r\n    IDEMPOTENT_EXPIRE = 240\r\n\r\n\r\n\r\n.. |pypi| image:: https://img.shields.io/pypi/v/flask-idempotent.svg?style=flat-square&label=latest%20version\r\n    :target: https://pypi.python.org/pypi/flask-idempotent\r\n    :alt: Latest version released on PyPi\r\n\r\n.. |coverage| image:: https://img.shields.io/coveralls/DisruptiveLabs/flask-idempotent/master.svg?style=flat-square\r\n    :target: https://coveralls.io/r/DisruptiveLabs/flask-idempotent?branch=master\r\n    :alt: Test coverage\r\n\r\n.. |build| image:: https://img.shields.io/travis/DisruptiveLabs/flask-idempotent/master.svg?style=flat-square&label=build\r\n    :target: https://travis-ci.org/DisruptiveLabs/flask-idempotent\r\n    :alt: Build status of the master branch", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/DisruptiveLabs/flask-idempotent", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "Flask-Idempotent", "package_url": "https://pypi.org/project/Flask-Idempotent/", "platform": "any", "project_url": "https://pypi.org/project/Flask-Idempotent/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/DisruptiveLabs/flask-idempotent"}, "release_url": "https://pypi.org/project/Flask-Idempotent/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Idempotent requests for Flask applications", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/flask-idempotent\" rel=\"nofollow\"><img alt=\"Latest version released on PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/13377109dac2a668702d86d284604bfec8b9cc25/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f666c61736b2d6964656d706f74656e742e7376673f7374796c653d666c61742d737175617265266c6162656c3d6c617465737425323076657273696f6e\"></a> <a href=\"https://travis-ci.org/DisruptiveLabs/flask-idempotent\" rel=\"nofollow\"><img alt=\"Build status of the master branch\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f43c06f9ca9658d3d4bc07763977a8253d1b70d7/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f446973727570746976654c6162732f666c61736b2d6964656d706f74656e742f6d61737465722e7376673f7374796c653d666c61742d737175617265266c6162656c3d6275696c64\"></a> <a href=\"https://coveralls.io/r/DisruptiveLabs/flask-idempotent?branch=master\" rel=\"nofollow\"><img alt=\"Test coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b0904905b0e1dde5dd12870a538fb1d282b063e2/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f446973727570746976654c6162732f666c61736b2d6964656d706f74656e742f6d61737465722e7376673f7374796c653d666c61742d737175617265\"></a></p>\n<hr class=\"docutils\">\n<p>Flask-Idempotent is an exceedingly simple (by design) idempotent request handler for Flask. Implemented as an extension, using Redis as both a lock and response datastore for speed and ease of use and implementation, this will help you simply add idempotency to any endpoint on your Flask application.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install flask-idempotent\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"n\">my_app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">Idempotent</span><span class=\"p\">(</span><span class=\"n\">my_app</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">form</span><span class=\"p\">&gt;</span>\n  {{ idempotent_input() }}\n  <span class=\"c\">&lt;!-- the rest of your form --&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">form</span><span class=\"p\">&gt;</span>\n</pre>\n<p>And thats it! (well, if the defaults work for you)</p>\n</div>\n<div id=\"how-it-works\">\n<h2>How it Works</h2>\n<p>Any request that includes <strong>__idempotent_key</strong> in the request arguments or post data, or <strong>X-Idempotent-Key</strong> in the request\u2019s headers will be tracked as a idempotent request. This only takes effect for 240 seconds by default, but this is configurable.</p>\n<p>When the first request with a key comes in, Flask-Idempotent will attempt to set IDEMPOTENT_{KEY} in redis. It will then process the request like normal, saving the response in redis for future requests to return. It also uses Redis\u2019 pub/sub infrastructure to send a notification to any other requests with the same key.</p>\n<p>Any subsequent (simultaneous or otherwise) requests will fail to set this key in Redis, as its already set. They will then wait for a pub/sub notification that the master request has finished, retrieve the prior response, and return that.</p>\n</div>\n<div id=\"why-should-i-care\">\n<h2>Why should I care?</h2>\n<p>You can\u2019t trust user input. Thats rule one of web development. This won\u2019t beat malicious attempts to attack your form submissions, but it will help when a user submits a page twice, or an api request is sent twice, due to network failure or otherwise. This will prevent those double submissions and any subsequent results of them.</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Flask-Idempotent requires Redis to function. It defaults to using redis on the local machine, and the following configuration values are available. Just set them in your flask configuration</p>\n<pre><span class=\"c1\"># The Redis host URL</span>\n<span class=\"n\">REDIS_URL</span> <span class=\"o\">=</span> <span class=\"s1\">'redis://some-host:6379/'</span>\n\n<span class=\"c1\"># In seconds, the timeout for a slave request to wait for the first to</span>\n<span class=\"c1\">#  complete</span>\n<span class=\"n\">IDEMPOTENT_TIMEOUT</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>\n\n<span class=\"c1\"># In seconds, the amount of time to store the master response before</span>\n<span class=\"c1\">#  expiration in Redis</span>\n<span class=\"n\">IDEMPOTENT_EXPIRE</span> <span class=\"o\">=</span> <span class=\"mi\">240</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1805176, "releases": {"0.0.1": [], "0.0.2": [{"comment_text": "", "digests": {"md5": "e9e514160f7a7df40af273b3034a45d0", "sha256": "39a44c6899333b7189801dde164de759cda4b1ac81777eb8ed90c3613d1ed18c"}, "downloads": -1, "filename": "Flask-Idempotent-0.0.2.tar.gz", "has_sig": false, "md5_digest": "e9e514160f7a7df40af273b3034a45d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2284, "upload_time": "2015-11-06T21:06:37", "upload_time_iso_8601": "2015-11-06T21:06:37.700374Z", "url": "https://files.pythonhosted.org/packages/88/bc/89c00a57ebce54f1fac788f576f8e609f738e3109b8241b414e0f7b10aea/Flask-Idempotent-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "b2ac57b3518077c4b8a751397c84f8de", "sha256": "4ee836ea5c6412ffa757facca0211a7ed0df242bf37c46f3343d4e5fb2f1fd9c"}, "downloads": -1, "filename": "Flask-Idempotent-0.0.3.tar.gz", "has_sig": false, "md5_digest": "b2ac57b3518077c4b8a751397c84f8de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2328, "upload_time": "2015-11-06T21:10:03", "upload_time_iso_8601": "2015-11-06T21:10:03.253360Z", "url": "https://files.pythonhosted.org/packages/31/31/88d5b1ebd7382d32004616a3d2863363e95f991dc777270df8253dd5383f/Flask-Idempotent-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "f58677f7bf738b674799ca3b91a96f92", "sha256": "e9e6008a788bf85f8aa85d64f3b6f6e1f4c05746cd0a0ec222920ab69d968368"}, "downloads": -1, "filename": "Flask-Idempotent-0.0.4.tar.gz", "has_sig": false, "md5_digest": "f58677f7bf738b674799ca3b91a96f92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2540, "upload_time": "2015-11-06T21:34:44", "upload_time_iso_8601": "2015-11-06T21:34:44.419900Z", "url": "https://files.pythonhosted.org/packages/6f/8d/ec7989b8928176c8dddc571ad8c12d5e0d618c13a446c1d8a8682a915a61/Flask-Idempotent-0.0.4.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "d0c013f6ddbf20366fc8162d5ec228ae", "sha256": "e9358f848fd8a28bbc079eefb66a42c3e5607470be1f9eb1539207fdefa7597f"}, "downloads": -1, "filename": "Flask-Idempotent-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d0c013f6ddbf20366fc8162d5ec228ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4146, "upload_time": "2015-11-06T22:06:06", "upload_time_iso_8601": "2015-11-06T22:06:06.048342Z", "url": "https://files.pythonhosted.org/packages/84/31/321924b7e1a0b20359c77c402c98f19731ad5334757573f3c3cce6eeaacd/Flask-Idempotent-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d0c013f6ddbf20366fc8162d5ec228ae", "sha256": "e9358f848fd8a28bbc079eefb66a42c3e5607470be1f9eb1539207fdefa7597f"}, "downloads": -1, "filename": "Flask-Idempotent-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d0c013f6ddbf20366fc8162d5ec228ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4146, "upload_time": "2015-11-06T22:06:06", "upload_time_iso_8601": "2015-11-06T22:06:06.048342Z", "url": "https://files.pythonhosted.org/packages/84/31/321924b7e1a0b20359c77c402c98f19731ad5334757573f3c3cce6eeaacd/Flask-Idempotent-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:46 2020"}