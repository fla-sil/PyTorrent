{"info": {"author": "Mike Malinowski", "author_email": "mike@twisted.space", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "# Overview\nScibble is a mechanism to store dictionary information to a persistent\nstate. This allows the data to be easily retrieved and edited, making it\na good option when trying to store settings data. \n\nNote: Data saved within the ScribbleDictionary must be json serialisable.\n\nAn example of creating a persisten data block would be:\n```python\n    import os\n    import scribble\n    \n    \n    # -- Instance a scribble dictionary. We can treat this exactly\n    # -- as we treat a dictionary\n    data = scribble.get('foobar')\n    \n    # -- Set some key/value pairs in the ScribbleDictionary\n    data['option_a'] = True\n    data['option_b'] = 123\n    \n    # -- Calling .save() will trigger the dictionary\n    # -- to store its current state to a persistent state\n    data.save()\n    \n    # -- We can see the location the data is saved to, and we can\n    # -- see that it does indeed exist\n    print(data.location())\n    print(os.path.exists(data.location()))    \n```\n\n    \nEqually, we can re-retrieve that data in a completely new instance of python\nusing the following code:\n```python\n    # -- Instance a scribble dictionary with the same identifier\n    data = scribble.get('foobar')\n    \n    # -- Print the fact that we have retrieved the same \n    # -- infromation\n    print(data)\n    # {'option_a': True, 'option_b': 123}\n    \n    # -- We can then further edit the data\n    data['option_a'] = False\n    \n    # -- Calling .save() will trigger the dictionary\n    # -- to store its current state to a persistent state\n    data.save()\n```\nBy default scribble will store its data in the follow platform specific\nlocations:\n\n* Windows: %APPDATA%/pyscribble\n\n* Linux: %XDG_CONFIG_HOME%/pyscribble if the environment variable exists, otherwise %HOME%/.config/pyscribble\n\n* OSX: \u00cb\u0153HOME/Documents/pyscribble\n\nHowever, you can override these paths by setting an environment variable\nPYSCRIBBLE_STORAGE_DIR, if this is set then the path defined by that variable\nwill always be used over the default behaviour.\n\n## Compatability\n\nThis has been tested under Python 2.7.13 and Python 3.6.6 on both Ubuntu and Windows.\n\n## Contribute\n\nIf you would like to contribute thoughts, ideas, fixes or features please get in touch! mike@twisted.space", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mikemalinowski/scribble", "keywords": "scribble dictionary appdata persistent", "license": "", "maintainer": "", "maintainer_email": "", "name": "scribble", "package_url": "https://pypi.org/project/scribble/", "platform": "", "project_url": "https://pypi.org/project/scribble/", "project_urls": {"Homepage": "https://github.com/mikemalinowski/scribble"}, "release_url": "https://pypi.org/project/scribble/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Allows for persistent storage of dictionary data", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Overview</h1>\n<p>Scibble is a mechanism to store dictionary information to a persistent\nstate. This allows the data to be easily retrieved and edited, making it\na good option when trying to store settings data.</p>\n<p>Note: Data saved within the ScribbleDictionary must be json serialisable.</p>\n<p>An example of creating a persisten data block would be:</p>\n<pre>    <span class=\"kn\">import</span> <span class=\"nn\">os</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">scribble</span>\n    \n    \n    <span class=\"c1\"># -- Instance a scribble dictionary. We can treat this exactly</span>\n    <span class=\"c1\"># -- as we treat a dictionary</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">scribble</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'foobar'</span><span class=\"p\">)</span>\n    \n    <span class=\"c1\"># -- Set some key/value pairs in the ScribbleDictionary</span>\n    <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'option_a'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n    <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'option_b'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">123</span>\n    \n    <span class=\"c1\"># -- Calling .save() will trigger the dictionary</span>\n    <span class=\"c1\"># -- to store its current state to a persistent state</span>\n    <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n    \n    <span class=\"c1\"># -- We can see the location the data is saved to, and we can</span>\n    <span class=\"c1\"># -- see that it does indeed exist</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">())</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">()))</span>    \n</pre>\n<p>Equally, we can re-retrieve that data in a completely new instance of python\nusing the following code:</p>\n<pre>    <span class=\"c1\"># -- Instance a scribble dictionary with the same identifier</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">scribble</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'foobar'</span><span class=\"p\">)</span>\n    \n    <span class=\"c1\"># -- Print the fact that we have retrieved the same </span>\n    <span class=\"c1\"># -- infromation</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n    <span class=\"c1\"># {'option_a': True, 'option_b': 123}</span>\n    \n    <span class=\"c1\"># -- We can then further edit the data</span>\n    <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'option_a'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n    \n    <span class=\"c1\"># -- Calling .save() will trigger the dictionary</span>\n    <span class=\"c1\"># -- to store its current state to a persistent state</span>\n    <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre>\n<p>By default scribble will store its data in the follow platform specific\nlocations:</p>\n<ul>\n<li>\n<p>Windows: %APPDATA%/pyscribble</p>\n</li>\n<li>\n<p>Linux: %XDG_CONFIG_HOME%/pyscribble if the environment variable exists, otherwise %HOME%/.config/pyscribble</p>\n</li>\n<li>\n<p>OSX: \u00cb\u0153HOME/Documents/pyscribble</p>\n</li>\n</ul>\n<p>However, you can override these paths by setting an environment variable\nPYSCRIBBLE_STORAGE_DIR, if this is set then the path defined by that variable\nwill always be used over the default behaviour.</p>\n<h2>Compatability</h2>\n<p>This has been tested under Python 2.7.13 and Python 3.6.6 on both Ubuntu and Windows.</p>\n<h2>Contribute</h2>\n<p>If you would like to contribute thoughts, ideas, fixes or features please get in touch! <a href=\"mailto:mike@twisted.space\">mike@twisted.space</a></p>\n\n          </div>"}, "last_serial": 4891332, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "a40561f66f66952fbc6ff8193a809b5c", "sha256": "b49890a81b48cf489a93c77a7c34eeeeab58cc138c1e32f42db60772a85ee80a"}, "downloads": -1, "filename": "scribble-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a40561f66f66952fbc6ff8193a809b5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3596, "upload_time": "2019-03-03T17:02:19", "upload_time_iso_8601": "2019-03-03T17:02:19.599953Z", "url": "https://files.pythonhosted.org/packages/9a/a3/af722f355a285888d12cf4f5647f18fe6c7375fd974de6f0a3e605ad7c3f/scribble-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a40561f66f66952fbc6ff8193a809b5c", "sha256": "b49890a81b48cf489a93c77a7c34eeeeab58cc138c1e32f42db60772a85ee80a"}, "downloads": -1, "filename": "scribble-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a40561f66f66952fbc6ff8193a809b5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3596, "upload_time": "2019-03-03T17:02:19", "upload_time_iso_8601": "2019-03-03T17:02:19.599953Z", "url": "https://files.pythonhosted.org/packages/9a/a3/af722f355a285888d12cf4f5647f18fe6c7375fd974de6f0a3e605ad7c3f/scribble-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:35 2020"}