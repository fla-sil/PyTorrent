{"info": {"author": "Evan Prodromou", "author_email": "evan@fuzzy.io", "bugtrack_url": null, "classifiers": [], "description": "Fuzzy.io SDK for Python\n=======================\n\nA Python package for accessing the fuzzy.io API.\n\n  https://fuzzy.io/\n\nLicense\n-------\n\nCopyright 2015 9165584 Canada Corporation <legal@fuzzy.io>\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nInstallation\n------------\n\nYou can get this library by forking it from our Github repository::\n\n    git clone https://github.com/fuzzy-io/python.git\n\nAfter that, you can just use regular setup.py stuff to set it up.\n\nTesting\n-------\n\nIt uses pytest. However, you need to have a Fuzzy.io API key to make it work.\nYou can get one by going to::\n\n  https://fuzzy.io/signup\n\nThe test script (not the SDK itself!) looks for the API key in the FUZZY_IO_KEY\nenvironment variable. So you can run the test something like this::\n\n  FUZZY_IO_KEY=<yourkeyhere> python -m pytest\n\nBasic usage\n-----------\n\nWhen you use the fuzzyio module, you always have to provide your API key first.\nUse the setup() function to do that::\n\n  import fuzzyio\n\n  fuzzyio.setup(YOUR_API_KEY)\n\nTo have a Fuzzy.io agent make a decision for you, use the evaluate() function\nof the fuzzyio module::\n\n  from __future__ import print_function\n\n  agent_id = \"AGENTIDHERE\"\n\n  inputs = {\n    \"height\": 188\n    \"weight\": 88.7\n  }\n\n  outputs = fuzzyio.evaluate(agent_id, inputs)\n\n  print outputs[\"run_distance\"]\n\nIf you need to provide feedback on the evaluation, use the evaluate_with_id()\nfunction to get an ID for the evaluation, and then provide that to the\nfeedback() function::\n\n  agent_id = \"AGENTIDHERE\"\n\n  inputs = {\n    \"height\": 188\n    \"weight\": 88.7\n  }\n\n  (outputs, evaluation_id) = fuzzyio.evaluate_with_id(agent_id, inputs)\n\n  # Real-world usage of the run_distance will return some performance\n  # metric.\n\n  fuzzyio.feedback(evaluation_id, {\"weight_loss\": 0.25})\n\nAdvanced usage\n--------------\n\nAll of the Fuzzy.io API is available through this SDK.\n\nThe Agent class represents a single agent. It includes evaluate() and\nevaluate_with_id() methods as well as save() and delete() to change the agent\non the server. Use that last part carefully!\n\nThe Evaluation class represents a single evaluation. It includes a get() method\nto fetch details about the evaluation and the feedback() method to fetch\nfeedback on the evaluation.\n\nThe Feedback class represents a single feedback data point. It has a save()\nmethod to generate feedback for an evaluation.\n\nSee also\n--------\n\nYou can submit issues or make pull requests on Github.\n\n  https://github.com/fuzzy-io/python\n\nThanks for using Fuzzy.io.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fuzzy-io/python", "keywords": "", "license": "Apache 2.0", "maintainer": null, "maintainer_email": null, "name": "fuzzyio", "package_url": "https://pypi.org/project/fuzzyio/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/fuzzyio/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/fuzzy-io/python"}, "release_url": "https://pypi.org/project/fuzzyio/0.2.0.dev0/", "requires_dist": null, "requires_python": null, "summary": "fuzzy.io API", "version": "0.2.0.dev0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A Python package for accessing the fuzzy.io API.</p>\n<blockquote>\n<a href=\"https://fuzzy.io/\" rel=\"nofollow\">https://fuzzy.io/</a></blockquote>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright 2015 9165584 Canada Corporation &lt;<a href=\"mailto:legal%40fuzzy.io\">legal<span>@</span>fuzzy<span>.</span>io</a>&gt;</p>\n<p>Licensed under the Apache License, Version 2.0 (the \u201cLicense\u201d);\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n<blockquote>\n<a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">http://www.apache.org/licenses/LICENSE-2.0</a></blockquote>\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \u201cAS IS\u201d BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can get this library by forking it from our Github repository:</p>\n<pre>git clone https://github.com/fuzzy-io/python.git\n</pre>\n<p>After that, you can just use regular setup.py stuff to set it up.</p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>It uses pytest. However, you need to have a Fuzzy.io API key to make it work.\nYou can get one by going to:</p>\n<pre>https://fuzzy.io/signup\n</pre>\n<p>The test script (not the SDK itself!) looks for the API key in the FUZZY_IO_KEY\nenvironment variable. So you can run the test something like this:</p>\n<pre>FUZZY_IO_KEY=&lt;yourkeyhere&gt; python -m pytest\n</pre>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic usage</h2>\n<p>When you use the fuzzyio module, you always have to provide your API key first.\nUse the setup() function to do that:</p>\n<pre>import fuzzyio\n\nfuzzyio.setup(YOUR_API_KEY)\n</pre>\n<p>To have a Fuzzy.io agent make a decision for you, use the evaluate() function\nof the fuzzyio module:</p>\n<pre>from __future__ import print_function\n\nagent_id = \"AGENTIDHERE\"\n\ninputs = {\n  \"height\": 188\n  \"weight\": 88.7\n}\n\noutputs = fuzzyio.evaluate(agent_id, inputs)\n\nprint outputs[\"run_distance\"]\n</pre>\n<p>If you need to provide feedback on the evaluation, use the evaluate_with_id()\nfunction to get an ID for the evaluation, and then provide that to the\nfeedback() function:</p>\n<pre>agent_id = \"AGENTIDHERE\"\n\ninputs = {\n  \"height\": 188\n  \"weight\": 88.7\n}\n\n(outputs, evaluation_id) = fuzzyio.evaluate_with_id(agent_id, inputs)\n\n# Real-world usage of the run_distance will return some performance\n# metric.\n\nfuzzyio.feedback(evaluation_id, {\"weight_loss\": 0.25})\n</pre>\n</div>\n<div id=\"advanced-usage\">\n<h2>Advanced usage</h2>\n<p>All of the Fuzzy.io API is available through this SDK.</p>\n<p>The Agent class represents a single agent. It includes evaluate() and\nevaluate_with_id() methods as well as save() and delete() to change the agent\non the server. Use that last part carefully!</p>\n<p>The Evaluation class represents a single evaluation. It includes a get() method\nto fetch details about the evaluation and the feedback() method to fetch\nfeedback on the evaluation.</p>\n<p>The Feedback class represents a single feedback data point. It has a save()\nmethod to generate feedback for an evaluation.</p>\n</div>\n<div id=\"see-also\">\n<h2>See also</h2>\n<p>You can submit issues or make pull requests on Github.</p>\n<blockquote>\n<a href=\"https://github.com/fuzzy-io/python\" rel=\"nofollow\">https://github.com/fuzzy-io/python</a></blockquote>\n<p>Thanks for using Fuzzy.io.</p>\n</div>\n\n          </div>"}, "last_serial": 1673648, "releases": {"0.2.0.dev0": [{"comment_text": "", "digests": {"md5": "08e04e69adff8ee0ba893b5b0e07f039", "sha256": "709be54bb212b65e1ca5fcef09152205cd9201cccb77aec5cb88f423bf694238"}, "downloads": -1, "filename": "fuzzyio-0.2.0.dev0.tar.gz", "has_sig": false, "md5_digest": "08e04e69adff8ee0ba893b5b0e07f039", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5462, "upload_time": "2015-08-11T21:28:55", "upload_time_iso_8601": "2015-08-11T21:28:55.632009Z", "url": "https://files.pythonhosted.org/packages/f6/64/d761615b91781bd30d200afc6930a5578c323ee3add3b6ccc4e9384d1407/fuzzyio-0.2.0.dev0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "08e04e69adff8ee0ba893b5b0e07f039", "sha256": "709be54bb212b65e1ca5fcef09152205cd9201cccb77aec5cb88f423bf694238"}, "downloads": -1, "filename": "fuzzyio-0.2.0.dev0.tar.gz", "has_sig": false, "md5_digest": "08e04e69adff8ee0ba893b5b0e07f039", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5462, "upload_time": "2015-08-11T21:28:55", "upload_time_iso_8601": "2015-08-11T21:28:55.632009Z", "url": "https://files.pythonhosted.org/packages/f6/64/d761615b91781bd30d200afc6930a5578c323ee3add3b6ccc4e9384d1407/fuzzyio-0.2.0.dev0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:59:32 2020"}