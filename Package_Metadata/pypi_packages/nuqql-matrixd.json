{"info": {"author": "hwipl", "author_email": "nuqql-matrixd@hwipl.net", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "# nuqql-matrixd\n\nnuqql-matrixd is a network daemon that implements the nuqql interface and uses\nthe [Matrix Python SDK](https://github.com/matrix-org/matrix-python-sdk) to\nconnect to Matrix chat networks. It can be used as a backend for\n[nuqql](https://github.com/hwipl/nuqql) or as a standalone chat client daemon.\n\nnuqql-matrixd's dependencies are:\n* [nuqql-based](https://github.com/hwipl/nuqql-based)\n* [Matrix Python SDK](https://github.com/matrix-org/matrix-python-sdk)\n* [daemon](https://pypi.org/project/python-daemon/) (optional)\n\n\n## Quick Start\n\nYou can install nuqql-matrixd and its dependencies, for example, with pip for\nyour user only with the following command:\n\n```console\n$ pip install --user nuqql-matrixd\n```\n\nAfter the installation, you can run nuqql-matrixd by running the\n`nuqql-matrixd` command:\n\n```console\n$ nuqql-matrixd\n```\n\nBy default, it listens on TCP port 32000 on your local host. So, you can\nconnect with, e.g., telnet to it with the following command:\n\n```console\n$ telnet localhost 32000\n```\n\nIn the telnet session you can:\n* add Matrix accounts with: `account add matrix <account> <password>`.\n  * Note: the format of `<account>` is `<username>@<homeserver>`, e.g.,\n    `dummy_user@matrix.org`.\n* retrieve the list of accounts and their numbers/IDs with `account list`.\n* retrieve your buddy/room list with `account <id> buddies` or `account <id>\n  chat list`\n* send a message to a room with `account <id> chat send <room> <message>`\n\n\n## Usage\n\nSee `nuqql-matrixd --help` for a list of command line arguments:\n\n```\nusage: nuqql-matrixd [-h] [--version] [--af {inet,unix}] [--address ADDRESS]\n[--port PORT] [--sockfile SOCKFILE] [--dir DIR] [-d] [--loglevel\n{debug,info,warn,error}] [--disable-history]\n\nRun nuqql backend.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n  --af {inet,unix}      socket address family: \"inet\" for AF_INET, \"unix\" for AF_UNIX\n  --address ADDRESS     AF_INET listen address\n  --port PORT           AF_INET listen port\n  --sockfile SOCKFILE   AF_UNIX socket file in DIR\n  --dir DIR             working directory\n  -d, --daemonize       daemonize process\n  --loglevel {debug,info,warn,error}\n                        Logging level\n  --disable-history     disable message history\n```\n\n\n## Changes\n\n* v0.3:\n  * Use nuqql-based as dependency and adapt to nuqql-based changes\n  * Add setup.py for installation and package distribution\n  * Add python type annotations\n  * Restructure code\n  * Cleanups, fixes, and improvements\n* v0.2:\n  * Allow specification of the homeserver url in the account user when adding\n    an account. Thus, the following account users are possible:\n    * `<user>@<domain>` (defaults to https)\n    * `<user>@http://<domain>[:<port>]`\n    * `<user>@https://<domain>[:<port>]`\n  * Save sync token for each account in a file. So, only messages newer than\n    the last sync are retrieved after a restart of the backend.\n  * Add new commands:\n    * `bye`: disconnect from the backend.\n    * `quit`: quit the backend.\n    * `help`: show list of commands and their description.\n  * Add and use \"chat msg\" message format for group chat messages\n  * Store accounts in .ini file `accounts.ini` in the backend's working\n    directory. Note: existing accounts have to be re-added to the backend to\n    be usable with the .ini file.\n  * Add configuration file support: in addition to the command line arguments,\n    configuration parameters can now be set in the .ini file `config.ini` in\n    the backend's working directory.\n  * Add `loglevel` configuration parameter to command line arguments and\n    configuration file for setting the logging level to `debug`, `info`,\n    `warn`, or `error`. Default: `warn`.\n  * Make daemon python module optional\n  * Fixes and improvements\n* v0.1:\n  * First/initial release.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hwipl/nuqql-matrixd", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "nuqql-matrixd", "package_url": "https://pypi.org/project/nuqql-matrixd/", "platform": "", "project_url": "https://pypi.org/project/nuqql-matrixd/", "project_urls": {"Homepage": "https://github.com/hwipl/nuqql-matrixd"}, "release_url": "https://pypi.org/project/nuqql-matrixd/0.3/", "requires_dist": ["nuqql-based", "matrix-client"], "requires_python": ">=3.6", "summary": "Matrix client network daemon using the Matrix Python SDK", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>nuqql-matrixd</h1>\n<p>nuqql-matrixd is a network daemon that implements the nuqql interface and uses\nthe <a href=\"https://github.com/matrix-org/matrix-python-sdk\" rel=\"nofollow\">Matrix Python SDK</a> to\nconnect to Matrix chat networks. It can be used as a backend for\n<a href=\"https://github.com/hwipl/nuqql\" rel=\"nofollow\">nuqql</a> or as a standalone chat client daemon.</p>\n<p>nuqql-matrixd's dependencies are:</p>\n<ul>\n<li><a href=\"https://github.com/hwipl/nuqql-based\" rel=\"nofollow\">nuqql-based</a></li>\n<li><a href=\"https://github.com/matrix-org/matrix-python-sdk\" rel=\"nofollow\">Matrix Python SDK</a></li>\n<li><a href=\"https://pypi.org/project/python-daemon/\" rel=\"nofollow\">daemon</a> (optional)</li>\n</ul>\n<h2>Quick Start</h2>\n<p>You can install nuqql-matrixd and its dependencies, for example, with pip for\nyour user only with the following command:</p>\n<pre><span class=\"gp\">$</span> pip install --user nuqql-matrixd\n</pre>\n<p>After the installation, you can run nuqql-matrixd by running the\n<code>nuqql-matrixd</code> command:</p>\n<pre><span class=\"gp\">$</span> nuqql-matrixd\n</pre>\n<p>By default, it listens on TCP port 32000 on your local host. So, you can\nconnect with, e.g., telnet to it with the following command:</p>\n<pre><span class=\"gp\">$</span> telnet localhost <span class=\"m\">32000</span>\n</pre>\n<p>In the telnet session you can:</p>\n<ul>\n<li>add Matrix accounts with: <code>account add matrix &lt;account&gt; &lt;password&gt;</code>.\n<ul>\n<li>Note: the format of <code>&lt;account&gt;</code> is <code>&lt;username&gt;@&lt;homeserver&gt;</code>, e.g.,\n<code>dummy_user@matrix.org</code>.</li>\n</ul>\n</li>\n<li>retrieve the list of accounts and their numbers/IDs with <code>account list</code>.</li>\n<li>retrieve your buddy/room list with <code>account &lt;id&gt; buddies</code> or <code>account &lt;id&gt; chat list</code></li>\n<li>send a message to a room with <code>account &lt;id&gt; chat send &lt;room&gt; &lt;message&gt;</code></li>\n</ul>\n<h2>Usage</h2>\n<p>See <code>nuqql-matrixd --help</code> for a list of command line arguments:</p>\n<pre><code>usage: nuqql-matrixd [-h] [--version] [--af {inet,unix}] [--address ADDRESS]\n[--port PORT] [--sockfile SOCKFILE] [--dir DIR] [-d] [--loglevel\n{debug,info,warn,error}] [--disable-history]\n\nRun nuqql backend.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n  --af {inet,unix}      socket address family: \"inet\" for AF_INET, \"unix\" for AF_UNIX\n  --address ADDRESS     AF_INET listen address\n  --port PORT           AF_INET listen port\n  --sockfile SOCKFILE   AF_UNIX socket file in DIR\n  --dir DIR             working directory\n  -d, --daemonize       daemonize process\n  --loglevel {debug,info,warn,error}\n                        Logging level\n  --disable-history     disable message history\n</code></pre>\n<h2>Changes</h2>\n<ul>\n<li>v0.3:\n<ul>\n<li>Use nuqql-based as dependency and adapt to nuqql-based changes</li>\n<li>Add setup.py for installation and package distribution</li>\n<li>Add python type annotations</li>\n<li>Restructure code</li>\n<li>Cleanups, fixes, and improvements</li>\n</ul>\n</li>\n<li>v0.2:\n<ul>\n<li>Allow specification of the homeserver url in the account user when adding\nan account. Thus, the following account users are possible:\n<ul>\n<li><code>&lt;user&gt;@&lt;domain&gt;</code> (defaults to https)</li>\n<li><code>&lt;user&gt;@http://&lt;domain&gt;[:&lt;port&gt;]</code></li>\n<li><code>&lt;user&gt;@https://&lt;domain&gt;[:&lt;port&gt;]</code></li>\n</ul>\n</li>\n<li>Save sync token for each account in a file. So, only messages newer than\nthe last sync are retrieved after a restart of the backend.</li>\n<li>Add new commands:\n<ul>\n<li><code>bye</code>: disconnect from the backend.</li>\n<li><code>quit</code>: quit the backend.</li>\n<li><code>help</code>: show list of commands and their description.</li>\n</ul>\n</li>\n<li>Add and use \"chat msg\" message format for group chat messages</li>\n<li>Store accounts in .ini file <code>accounts.ini</code> in the backend's working\ndirectory. Note: existing accounts have to be re-added to the backend to\nbe usable with the .ini file.</li>\n<li>Add configuration file support: in addition to the command line arguments,\nconfiguration parameters can now be set in the .ini file <code>config.ini</code> in\nthe backend's working directory.</li>\n<li>Add <code>loglevel</code> configuration parameter to command line arguments and\nconfiguration file for setting the logging level to <code>debug</code>, <code>info</code>,\n<code>warn</code>, or <code>error</code>. Default: <code>warn</code>.</li>\n<li>Make daemon python module optional</li>\n<li>Fixes and improvements</li>\n</ul>\n</li>\n<li>v0.1:\n<ul>\n<li>First/initial release.</li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6345399, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "d1b4cee90766b4cef74dad9c8d9ff640", "sha256": "4a32b37d434cdc8ba407ea158baf7cbcb59f566158567adca5f19a9d439a5e21"}, "downloads": -1, "filename": "nuqql_matrixd-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d1b4cee90766b4cef74dad9c8d9ff640", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13155, "upload_time": "2019-12-21T19:33:29", "upload_time_iso_8601": "2019-12-21T19:33:29.800444Z", "url": "https://files.pythonhosted.org/packages/3a/ec/312d6d51589f9749e711cc1d719e0503c0096a8ee02d9c6904920ddfe957/nuqql_matrixd-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "92dee99b5e8975ad7e078388d38f3859", "sha256": "6e1ad2eb561fc543389dbd09116642b95ca0683e4e845ccfc4414835f9add797"}, "downloads": -1, "filename": "nuqql-matrixd-0.3.tar.gz", "has_sig": false, "md5_digest": "92dee99b5e8975ad7e078388d38f3859", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13007, "upload_time": "2019-12-21T19:33:32", "upload_time_iso_8601": "2019-12-21T19:33:32.272095Z", "url": "https://files.pythonhosted.org/packages/c3/fb/548ba7a19f549b8f098acac4779e018a96e3368823a4c47716ceefaef498/nuqql-matrixd-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d1b4cee90766b4cef74dad9c8d9ff640", "sha256": "4a32b37d434cdc8ba407ea158baf7cbcb59f566158567adca5f19a9d439a5e21"}, "downloads": -1, "filename": "nuqql_matrixd-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d1b4cee90766b4cef74dad9c8d9ff640", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13155, "upload_time": "2019-12-21T19:33:29", "upload_time_iso_8601": "2019-12-21T19:33:29.800444Z", "url": "https://files.pythonhosted.org/packages/3a/ec/312d6d51589f9749e711cc1d719e0503c0096a8ee02d9c6904920ddfe957/nuqql_matrixd-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "92dee99b5e8975ad7e078388d38f3859", "sha256": "6e1ad2eb561fc543389dbd09116642b95ca0683e4e845ccfc4414835f9add797"}, "downloads": -1, "filename": "nuqql-matrixd-0.3.tar.gz", "has_sig": false, "md5_digest": "92dee99b5e8975ad7e078388d38f3859", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13007, "upload_time": "2019-12-21T19:33:32", "upload_time_iso_8601": "2019-12-21T19:33:32.272095Z", "url": "https://files.pythonhosted.org/packages/c3/fb/548ba7a19f549b8f098acac4779e018a96e3368823a4c47716ceefaef498/nuqql-matrixd-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:07 2020"}