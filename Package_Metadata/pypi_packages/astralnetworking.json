{"info": {"author": "saluk", "author_email": "saluk64007@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Games/Entertainment", "Topic :: Software Development :: Libraries :: pygame", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "A python library to make setting up a multiplayer game more straightforward. The low level bits on the wire are totally abstracted. Higher level options for game state, syncing, client prediction, lag compensation techniques are available but customizable for different projects. My goal for the project is to easily adapt several of my non-networked games to have a multiplayer component with a minimum of special case work on each one.\r\n\r\nUses either Chris McCormick's PodSixNet or Geometrian's Mastermind networking library for the low level bits. (Both included with the source). Currently built and optimized for the TCP protocol. UDP is a big maybe for later!\r\n\r\nCurrent version works well with a demo that syncs the positio of multiple clients, and handles lag issues reliably.\r\n\r\nThe demo uses pygame, but the networking component is completely independant.", "description_content_type": null, "docs_url": null, "download_url": "https://astralnetworking.googlecode.com/hg/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://code.google.com/p/astralnetworking", "keywords": "", "license": "", "maintainer": "saluk", "maintainer_email": "saluk64007@gmail.com", "name": "astralnetworking", "package_url": "https://pypi.org/project/astralnetworking/", "platform": "", "project_url": "https://pypi.org/project/astralnetworking/", "project_urls": {"Download": "https://astralnetworking.googlecode.com/hg/", "Homepage": "http://code.google.com/p/astralnetworking"}, "release_url": "https://pypi.org/project/astralnetworking/0/", "requires_dist": null, "requires_python": null, "summary": "A very high level gaming network protocol built on top of podsixnet", "version": "0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A python library to make setting up a multiplayer game more straightforward. The low level bits on the wire are totally abstracted. Higher level options for game state, syncing, client prediction, lag compensation techniques are available but customizable for different projects. My goal for the project is to easily adapt several of my non-networked games to have a multiplayer component with a minimum of special case work on each one.</p>\n<p>Uses either Chris McCormick\u2019s PodSixNet or Geometrian\u2019s Mastermind networking library for the low level bits. (Both included with the source). Currently built and optimized for the TCP protocol. UDP is a big maybe for later!</p>\n<p>Current version works well with a demo that syncs the positio of multiple clients, and handles lag issues reliably.</p>\n<p>The demo uses pygame, but the networking component is completely independant.</p>\n\n          </div>"}, "last_serial": 215533, "releases": {"0": []}, "urls": [], "timestamp": "Thu May  7 18:16:50 2020"}