{"info": {"author": "UNICEF", "author_email": "dev@unicef.org", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "Intended Audience :: Developers", "Programming Language :: Python :: 3.8"], "description": "eTools Offline Collect - Backend Client\n=======================================\n\neTools Offline Collect makes use of `unicef_attachments` to handle the files.\n\n\nInstallation\n------------\n\n::\n\n   $ pip install etools-offline\n\n\nSetup\n-----\n\nAdd `etools_offline` to `INSTALLED_APPS` in settings\n\n::\n\n    INSTALLED_APPS = (\n      ...\n      'etools_offline',\n\n    )\n\n\nSet eTools Offline API settings;\n\n::\n\n    ETOOLS_OFFLINE_API = \"http://localhost:8000/api/remote/blueprint/\"\n    ETOOLS_OFFLINE_TOKEN = \"123\"\n\n\nUsage\n-----\n\nHooks happen in serializers, so update relevant serializers;\n\n::\n\n    from etools_offline import OfflineCollect\n\n    # add new blueprint\n    OfflineCollect().add(data={\n        \"code\": \"blueprint-123\",\n        \"form_title\": \"Blueprint 123\",\n        \"form_instructions\": json.dumps({\"key\": \"value\"}),\n        \"accessible_by\": [\"joe@example.com\", \"mary@example.com\"],\n        \"api_response_url\": \"http://example.com/response/\",\n    })\n\n    response = {\n        'id': 88,\n        'code':\n        'blueprint-123',\n        'form_title': 'Blueprint 123',\n        'form_instructions': {'key': 'value'},\n        'is_active': False,\n        'accessible_by': ['joe@example.com', 'mary@example.com'],\n        'expiry_date': '2021-02-18',\n        'max_forms_allowed': None,\n        'api_response_url': 'http://example.com/response/',\n        'created': '2020-02-19T15:41:10.016068Z',\n        'modified': '2020-02-19T15:41:10.016094Z'\n    }\n\n    # update blueprint\n    OfflineCollect().update(\n      accessible_by=\"<accessible_by>\",\n      expiry_date=\"<expiry_date>\",\n    )\n\n    # get list of blueprints\n    OfflineCollect().list()\n\n    # get specific blueprint\n    OfflineCollect().get(<code>)\n\n    # delete blueprint\n    OfflineCollect().delete(<code>)\n\n\nContributing\n------------\n\nConfigure development environment\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n   $ make develop\n\n\nRun tests\n~~~~~~~~~\n\n::\n\n   $ make test\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/unicef/etools-offline-collect", "keywords": "", "license": "UNICEF", "maintainer": "", "maintainer_email": "", "name": "etools-offline", "package_url": "https://pypi.org/project/etools-offline/", "platform": "linux", "project_url": "https://pypi.org/project/etools-offline/", "project_urls": {"Homepage": "https://github.com/unicef/etools-offline-collect"}, "release_url": "https://pypi.org/project/etools-offline/0.1.0/", "requires_dist": ["djangorestframework", "django", "requests", "unicef-attachments", "django-celery ; extra == 'test'", "coverage ; extra == 'test'", "factory-boy ; extra == 'test'", "faker ; extra == 'test'", "flake8 ; extra == 'test'", "isort ; extra == 'test'", "pytest ; extra == 'test'", "pytest-cov ; extra == 'test'", "pytest-django ; extra == 'test'", "pytest-echo ; extra == 'test'", "pytest-pythonpath ; extra == 'test'", "psycopg2-binary ; extra == 'test'", "responses ; extra == 'test'"], "requires_python": "", "summary": "eTools Offline Collect application", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>eTools Offline Collect makes use of <cite>unicef_attachments</cite> to handle the files.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install etools-offline\n</pre>\n</div>\n<div id=\"setup\">\n<h2>Setup</h2>\n<p>Add <cite>etools_offline</cite> to <cite>INSTALLED_APPS</cite> in settings</p>\n<pre>INSTALLED_APPS = (\n  ...\n  'etools_offline',\n\n)\n</pre>\n<p>Set eTools Offline API settings;</p>\n<pre>ETOOLS_OFFLINE_API = \"http://localhost:8000/api/remote/blueprint/\"\nETOOLS_OFFLINE_TOKEN = \"123\"\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Hooks happen in serializers, so update relevant serializers;</p>\n<pre>from etools_offline import OfflineCollect\n\n# add new blueprint\nOfflineCollect().add(data={\n    \"code\": \"blueprint-123\",\n    \"form_title\": \"Blueprint 123\",\n    \"form_instructions\": json.dumps({\"key\": \"value\"}),\n    \"accessible_by\": [\"joe@example.com\", \"mary@example.com\"],\n    \"api_response_url\": \"http://example.com/response/\",\n})\n\nresponse = {\n    'id': 88,\n    'code':\n    'blueprint-123',\n    'form_title': 'Blueprint 123',\n    'form_instructions': {'key': 'value'},\n    'is_active': False,\n    'accessible_by': ['joe@example.com', 'mary@example.com'],\n    'expiry_date': '2021-02-18',\n    'max_forms_allowed': None,\n    'api_response_url': 'http://example.com/response/',\n    'created': '2020-02-19T15:41:10.016068Z',\n    'modified': '2020-02-19T15:41:10.016094Z'\n}\n\n# update blueprint\nOfflineCollect().update(\n  accessible_by=\"&lt;accessible_by&gt;\",\n  expiry_date=\"&lt;expiry_date&gt;\",\n)\n\n# get list of blueprints\nOfflineCollect().list()\n\n# get specific blueprint\nOfflineCollect().get(&lt;code&gt;)\n\n# delete blueprint\nOfflineCollect().delete(&lt;code&gt;)\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<div id=\"configure-development-environment\">\n<h3>Configure development environment</h3>\n<pre>$ make develop\n</pre>\n</div>\n<div id=\"run-tests\">\n<h3>Run tests</h3>\n<pre>$ make test\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6712072, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d1212b2366dab8ecbc93eceedc7d5f74", "sha256": "e6b2e337d80f417175a1f2afa16910c90f8f8cd8abc7442f852b8898c5ed8f47"}, "downloads": -1, "filename": "etools_offline-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d1212b2366dab8ecbc93eceedc7d5f74", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18094, "upload_time": "2020-02-27T16:48:51", "upload_time_iso_8601": "2020-02-27T16:48:51.278064Z", "url": "https://files.pythonhosted.org/packages/7d/fa/38e06085fec4bd96869953763fa3deb3e1df562376c4572b907309e64498/etools_offline-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c86f483262f8bb3cb29eac9216b4fc8a", "sha256": "a552bf9d7be3593f2492c2fef08cc34c89b2d2bc46c0a8899547baf718712804"}, "downloads": -1, "filename": "etools_offline-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c86f483262f8bb3cb29eac9216b4fc8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18986, "upload_time": "2020-02-27T16:48:53", "upload_time_iso_8601": "2020-02-27T16:48:53.752016Z", "url": "https://files.pythonhosted.org/packages/db/90/bfeb3e84ce1140d166460e373dd866fa20a6375ea9b69f0563f8e9d1ba0c/etools_offline-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d1212b2366dab8ecbc93eceedc7d5f74", "sha256": "e6b2e337d80f417175a1f2afa16910c90f8f8cd8abc7442f852b8898c5ed8f47"}, "downloads": -1, "filename": "etools_offline-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d1212b2366dab8ecbc93eceedc7d5f74", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18094, "upload_time": "2020-02-27T16:48:51", "upload_time_iso_8601": "2020-02-27T16:48:51.278064Z", "url": "https://files.pythonhosted.org/packages/7d/fa/38e06085fec4bd96869953763fa3deb3e1df562376c4572b907309e64498/etools_offline-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c86f483262f8bb3cb29eac9216b4fc8a", "sha256": "a552bf9d7be3593f2492c2fef08cc34c89b2d2bc46c0a8899547baf718712804"}, "downloads": -1, "filename": "etools_offline-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c86f483262f8bb3cb29eac9216b4fc8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18986, "upload_time": "2020-02-27T16:48:53", "upload_time_iso_8601": "2020-02-27T16:48:53.752016Z", "url": "https://files.pythonhosted.org/packages/db/90/bfeb3e84ce1140d166460e373dd866fa20a6375ea9b69f0563f8e9d1ba0c/etools_offline-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:22 2020"}