{"info": {"author": "Marek Jagielski", "author_email": "marek.jagielski@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "========\nRuminaq\n========\n\nRuminaq python package is part of Ruminaq project https://github.com/systemincloud/ruminaq.\nThis package is an api for writing custom tasks in python.\n\n\nInstallation\n============\n\nInstall with pip.\n\n.. code:: bash\n\n    $ pip install ruminaq\n\n\nCode Demo\n=========\n\nDefine a custom task as follow:\n\n.. code:: python\n\n\t@python_task_info(generator=True, external_source=True)\n\t@parameter(name=\"param\")\n\tclass MyPythonTask(PythonTask):\n\t\n\t    def __init_ports__(self):\n\t        self.in1 = InputPort(name=\"in1\", data_type=Bool)\n\t        self.in2 = InputPort(name=\"in2\", data_type=Bool, asynchronous=True)\n\t        self.out = OutputPort(name=\"out\", data_type=Bool)\n\t\n\t    def execute_async(self, async_in):\n\t        \"\"\" this will run when asynchronous port\n\t            receive data \"\"\"\n\t\n\t    def execute_ext_src(self):\n\t        \"\"\" this will run after internal\n\t            request \"\"\"\n\t\n\t    def generate(self):\n\t        \"\"\" this will run periodicaly \"\"\"\n\t\n\t    def execute(self, grp):\n\t        \"\"\" this will run when all synchronous ports \n\t            from group receive data \"\"\"\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "Apache License version 2.0", "maintainer": "", "maintainer_email": "", "name": "ruminaq", "package_url": "https://pypi.org/project/ruminaq/", "platform": "", "project_url": "https://pypi.org/project/ruminaq/", "project_urls": null, "release_url": "https://pypi.org/project/ruminaq/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "python task api", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Ruminaq python package is part of Ruminaq project <a href=\"https://github.com/systemincloud/ruminaq\" rel=\"nofollow\">https://github.com/systemincloud/ruminaq</a>.\nThis package is an api for writing custom tasks in python.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install with pip.</p>\n<pre>$ pip install ruminaq\n</pre>\n</div>\n<div id=\"code-demo\">\n<h2>Code Demo</h2>\n<p>Define a custom task as follow:</p>\n<pre><span class=\"nd\">@python_task_info</span><span class=\"p\">(</span><span class=\"n\">generator</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">external_source</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nd\">@parameter</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"param\"</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">MyPythonTask</span><span class=\"p\">(</span><span class=\"n\">PythonTask</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__init_ports__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">in1</span> <span class=\"o\">=</span> <span class=\"n\">InputPort</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"in1\"</span><span class=\"p\">,</span> <span class=\"n\">data_type</span><span class=\"o\">=</span><span class=\"n\">Bool</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">in2</span> <span class=\"o\">=</span> <span class=\"n\">InputPort</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"in2\"</span><span class=\"p\">,</span> <span class=\"n\">data_type</span><span class=\"o\">=</span><span class=\"n\">Bool</span><span class=\"p\">,</span> <span class=\"n\">asynchronous</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"n\">OutputPort</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"out\"</span><span class=\"p\">,</span> <span class=\"n\">data_type</span><span class=\"o\">=</span><span class=\"n\">Bool</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">execute_async</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">async_in</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\" this will run when asynchronous port\n            receive data \"\"\"</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">execute_ext_src</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\" this will run after internal\n            request \"\"\"</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">generate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\" this will run periodicaly \"\"\"</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">execute</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">grp</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\" this will run when all synchronous ports\n            from group receive data \"\"\"</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4449929, "releases": {"1.0.2": [{"comment_text": "", "digests": {"md5": "3ba86166b8107c5f970c9266f56a5083", "sha256": "8603736d2b635a2e4da0f6b02ead46f7bbd0cf5748c2bcb0db1bbe83fcfd1f96"}, "downloads": -1, "filename": "ruminaq-1.0.2.tar.gz", "has_sig": false, "md5_digest": "3ba86166b8107c5f970c9266f56a5083", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6631, "upload_time": "2018-11-04T15:45:18", "upload_time_iso_8601": "2018-11-04T15:45:18.089368Z", "url": "https://files.pythonhosted.org/packages/37/8d/635a0deb4142d2ea4c09e991f5cebe7cf7d798c89a9710359fe04b84395e/ruminaq-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3ba86166b8107c5f970c9266f56a5083", "sha256": "8603736d2b635a2e4da0f6b02ead46f7bbd0cf5748c2bcb0db1bbe83fcfd1f96"}, "downloads": -1, "filename": "ruminaq-1.0.2.tar.gz", "has_sig": false, "md5_digest": "3ba86166b8107c5f970c9266f56a5083", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6631, "upload_time": "2018-11-04T15:45:18", "upload_time_iso_8601": "2018-11-04T15:45:18.089368Z", "url": "https://files.pythonhosted.org/packages/37/8d/635a0deb4142d2ea4c09e991f5cebe7cf7d798c89a9710359fe04b84395e/ruminaq-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:05 2020"}