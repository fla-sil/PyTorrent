{"info": {"author": "Daoud Clarke", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5"], "description": "PyPastry - the opinionated machine learning experimentation framework\n=====================================================================\n\nPyPastry is a framework for developers and data scientists to run\nmachine learning experiments. We enable you to:\n\n - Iterate quickly. The more experiments you do, the more likely you\n   are to find something that works well.\n - Experiment correctly and consistently. Anything else is not really\n   an experiment, is it?\n - Make experiments reproducible. That means keeping track of your\n   code state and results.\n - Experiment locally. None of that Spark rubbish.\n - Use standard tools. Everything is based on Scikit-learn, Pandas and Git.\n\nQuick start\n-----------\n\nPyPastry requires python 3.5 or greater.\n\n    > git clone https://github.com/datapastry/pypastry.git\n    > pip install -e pypastry\n\t> pastry init pastry-test\n    > cd pastry-test\n    > pastry run -m \"First experiment\"\n    Got dataset with 10 rows\n       Git hash Dataset hash            Run start                   Model          Score Duration (s)\n    0  aa87ce62     71e8f4fd  2019-08-28 06:39:07  DecisionTreeClassifier  0.933 \u00b1 0.067         0.03\n\nThe command `pastry init` creates a file called `pie.py` in the `pastry-test` directory. If you open\nthat up, you should see some code. The important bit is:\n\n    def get_experiment():\n        dataset = pd.DataFrame({\n            'feature': [1, 0, 1, 1, 0, 0, 1, 1, 0, 1],\n            'class': [True, False, True, True, False, False, True, True, False, False],\n        })\n        predictor = DecisionTreeClassifier()\n        cross_validator = StratifiedKFold(n_splits=5)\n        scorer = make_scorer(f1_score)\n        label_column = 'class'\n        return Experiment(dataset, label_column, predictor, cross_validator, scorer)\n\nThis returns an `Experiment` instance that specifies how the experiment should be run. An experiment\nconsists of:\n - `dataset`: a Pandas `DataFrame` where each row is an instance to be used in the experiment.\n - `label_column`: the name of the column in `dataset` that contains the label we wish to predict.\n - `predictor`: a Scikit-learn predictor, e.g. a classifier, regressor or `Pipeline` object.\n - `cross_validator`: a Scikit-learn cross validator that specifies how the data should be split\n   up when running the experiment.\n - `scorer` a Scikit-learn scorer that will be used as an indication of how well the classifier has\n   learnt to generate predictions.\n\nWhen you type `pastry run`, PyPastry does this:\n - Splits `dataset` into one or more train and test sets.\n - For each train and test set, it trains the `predictor` on the train set and generate predictions\n   on the test set, and computes the score on the test set using the `scorer`.\n - Generates a results file in JSON format and stores it in a folder called `results`\n - Adds the new file and any modified files to git staging and runs a git commit.\n - Outputs the results of the experiment.\n\nThe results includes:\n - Git hash: the commit identifier from git that allows you to return to this version of the code\n   at any later point in time.\n - Dataset hash: a hash generated from the dataset that will change if the dataset changes.\n - Run start: the time that the experiment run started\n - Model: the name of the `predictor` class used\n - Score: the mean \u00b1 the standard error in the mean, computed over the different folds generated\n   by the `cross_validator`.\n - Duration: how long the experiment took to run, in seconds.\n\nContributing\n------------\n\nPyPastry is at an early stage so there's plenty to do and we'd love to have your contribution.\n\nCheck out the issues for a list of things that need doing and post a comment if you'd like to take\nsomething on.\n\nIf you have an idea for something you'd like to do, create an issue.\n\nThanks for using PyPastry!\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/datapastry/pypastry", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pypastry", "package_url": "https://pypi.org/project/pypastry/", "platform": "", "project_url": "https://pypi.org/project/pypastry/", "project_urls": {"Homepage": "https://github.com/datapastry/pypastry"}, "release_url": "https://pypi.org/project/pypastry/0.0.1/", "requires_dist": ["tomlkit", "pandas", "scikit-learn", "pyarrow", "gitpython"], "requires_python": ">=3.5", "summary": "PyPastry machine learning experimentation framework", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyPastry - the opinionated machine learning experimentation framework</h1>\n<p>PyPastry is a framework for developers and data scientists to run\nmachine learning experiments. We enable you to:</p>\n<ul>\n<li>Iterate quickly. The more experiments you do, the more likely you\nare to find something that works well.</li>\n<li>Experiment correctly and consistently. Anything else is not really\nan experiment, is it?</li>\n<li>Make experiments reproducible. That means keeping track of your\ncode state and results.</li>\n<li>Experiment locally. None of that Spark rubbish.</li>\n<li>Use standard tools. Everything is based on Scikit-learn, Pandas and Git.</li>\n</ul>\n<h2>Quick start</h2>\n<p>PyPastry requires python 3.5 or greater.</p>\n<pre><code>&gt; git clone https://github.com/datapastry/pypastry.git\n&gt; pip install -e pypastry\n&gt; pastry init pastry-test\n&gt; cd pastry-test\n&gt; pastry run -m \"First experiment\"\nGot dataset with 10 rows\n   Git hash Dataset hash            Run start                   Model          Score Duration (s)\n0  aa87ce62     71e8f4fd  2019-08-28 06:39:07  DecisionTreeClassifier  0.933 \u00b1 0.067         0.03\n</code></pre>\n<p>The command <code>pastry init</code> creates a file called <code>pie.py</code> in the <code>pastry-test</code> directory. If you open\nthat up, you should see some code. The important bit is:</p>\n<pre><code>def get_experiment():\n    dataset = pd.DataFrame({\n        'feature': [1, 0, 1, 1, 0, 0, 1, 1, 0, 1],\n        'class': [True, False, True, True, False, False, True, True, False, False],\n    })\n    predictor = DecisionTreeClassifier()\n    cross_validator = StratifiedKFold(n_splits=5)\n    scorer = make_scorer(f1_score)\n    label_column = 'class'\n    return Experiment(dataset, label_column, predictor, cross_validator, scorer)\n</code></pre>\n<p>This returns an <code>Experiment</code> instance that specifies how the experiment should be run. An experiment\nconsists of:</p>\n<ul>\n<li><code>dataset</code>: a Pandas <code>DataFrame</code> where each row is an instance to be used in the experiment.</li>\n<li><code>label_column</code>: the name of the column in <code>dataset</code> that contains the label we wish to predict.</li>\n<li><code>predictor</code>: a Scikit-learn predictor, e.g. a classifier, regressor or <code>Pipeline</code> object.</li>\n<li><code>cross_validator</code>: a Scikit-learn cross validator that specifies how the data should be split\nup when running the experiment.</li>\n<li><code>scorer</code> a Scikit-learn scorer that will be used as an indication of how well the classifier has\nlearnt to generate predictions.</li>\n</ul>\n<p>When you type <code>pastry run</code>, PyPastry does this:</p>\n<ul>\n<li>Splits <code>dataset</code> into one or more train and test sets.</li>\n<li>For each train and test set, it trains the <code>predictor</code> on the train set and generate predictions\non the test set, and computes the score on the test set using the <code>scorer</code>.</li>\n<li>Generates a results file in JSON format and stores it in a folder called <code>results</code></li>\n<li>Adds the new file and any modified files to git staging and runs a git commit.</li>\n<li>Outputs the results of the experiment.</li>\n</ul>\n<p>The results includes:</p>\n<ul>\n<li>Git hash: the commit identifier from git that allows you to return to this version of the code\nat any later point in time.</li>\n<li>Dataset hash: a hash generated from the dataset that will change if the dataset changes.</li>\n<li>Run start: the time that the experiment run started</li>\n<li>Model: the name of the <code>predictor</code> class used</li>\n<li>Score: the mean \u00b1 the standard error in the mean, computed over the different folds generated\nby the <code>cross_validator</code>.</li>\n<li>Duration: how long the experiment took to run, in seconds.</li>\n</ul>\n<h2>Contributing</h2>\n<p>PyPastry is at an early stage so there's plenty to do and we'd love to have your contribution.</p>\n<p>Check out the issues for a list of things that need doing and post a comment if you'd like to take\nsomething on.</p>\n<p>If you have an idea for something you'd like to do, create an issue.</p>\n<p>Thanks for using PyPastry!</p>\n\n          </div>"}, "last_serial": 6125117, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "bb969f75805971294233a8b58d578c76", "sha256": "e2dd8622687f04e6645ea04fd9812204c453a53dd55f139659f3d49efbc3ef8f"}, "downloads": -1, "filename": "pypastry-0.0.1-py3.5.egg", "has_sig": false, "md5_digest": "bb969f75805971294233a8b58d578c76", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": ">=3.5", "size": 3564, "upload_time": "2019-11-10T10:30:04", "upload_time_iso_8601": "2019-11-10T10:30:04.138138Z", "url": "https://files.pythonhosted.org/packages/c9/77/7a4a5adc2efeae077fa8e58a4b6b8b894b0a2c16a330a58c0694634e6200/pypastry-0.0.1-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c83f7de587a722c261a10eac2fc9c390", "sha256": "7c7aa0b9c3da5fde482da03aebeda3eff896bf20b833ee0ab2ea33a818d8baa3"}, "downloads": -1, "filename": "pypastry-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c83f7de587a722c261a10eac2fc9c390", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4315, "upload_time": "2019-09-23T15:12:28", "upload_time_iso_8601": "2019-09-23T15:12:28.216497Z", "url": "https://files.pythonhosted.org/packages/1b/33/4ab31dc0a86fad607ba145395afb8e8ba3758454c689d32599107467c376/pypastry-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f1ebd03623b1cff9243f5bdd18b98869", "sha256": "a1c81cd0e01fe69637a9c6393dd6e97901d5c5fb8270553c9b6a61978fe0c063"}, "downloads": -1, "filename": "pypastry-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f1ebd03623b1cff9243f5bdd18b98869", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9031, "upload_time": "2019-09-23T15:12:34", "upload_time_iso_8601": "2019-09-23T15:12:34.674786Z", "url": "https://files.pythonhosted.org/packages/0f/74/9d9217e5e0772c5d152b387f08d61102fa7426058ac886c6a633385a053f/pypastry-0.0.1.tar.gz", "yanked": false}], "0.0.1.dev1": [{"comment_text": "", "digests": {"md5": "1b49135e1a4e168fd74ae6a3622e3310", "sha256": "fbe7d0228dee96078ddc7ede2c36d43436856a52d1b447d31ee3f505c8e08a0a"}, "downloads": -1, "filename": "pypastry-0.0.1.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "1b49135e1a4e168fd74ae6a3622e3310", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 11688, "upload_time": "2019-11-12T16:32:48", "upload_time_iso_8601": "2019-11-12T16:32:48.261682Z", "url": "https://files.pythonhosted.org/packages/a0/38/54954fb807fa3995f31ce6c866e4eb64fdb0fced34bb8de238a68b560ed4/pypastry-0.0.1.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f2496c28a945dbc1e31046b21314cb1", "sha256": "03a4f25921a4df1329458ae9170e6df93ee5de90971ac30c24ed366364f06e38"}, "downloads": -1, "filename": "pypastry-0.0.1.dev1.tar.gz", "has_sig": false, "md5_digest": "8f2496c28a945dbc1e31046b21314cb1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11179, "upload_time": "2019-11-12T16:32:49", "upload_time_iso_8601": "2019-11-12T16:32:49.761347Z", "url": "https://files.pythonhosted.org/packages/11/44/2fc24b29caee666c330f576bad82f4ffef815c7299a2f797d7fc0841c4d6/pypastry-0.0.1.dev1.tar.gz", "yanked": false}], "0.0.1a0": [{"comment_text": "", "digests": {"md5": "d09da012709ee0bf96291503b0486508", "sha256": "64bb48ef7ba56e96f50afbbd5ec360a850d4e7cf8e2b0742c17cd9df095caf89"}, "downloads": -1, "filename": "pypastry-0.0.1a0-py3-none-any.whl", "has_sig": false, "md5_digest": "d09da012709ee0bf96291503b0486508", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 10891, "upload_time": "2019-11-10T10:29:59", "upload_time_iso_8601": "2019-11-10T10:29:59.530555Z", "url": "https://files.pythonhosted.org/packages/ba/02/a02c371ab2264af940602ec58ff468dabd249811dc5b24cbdaa7e76673ae/pypastry-0.0.1a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9669eaea5ae58eae924e677c24987218", "sha256": "e6266f72bdf55ad0b93e3f589f4720574df066c8c879577ec0b2b0563f3f8aa5"}, "downloads": -1, "filename": "pypastry-0.0.1a0.tar.gz", "has_sig": false, "md5_digest": "9669eaea5ae58eae924e677c24987218", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 10617, "upload_time": "2019-11-10T10:30:02", "upload_time_iso_8601": "2019-11-10T10:30:02.754875Z", "url": "https://files.pythonhosted.org/packages/4a/3f/321e0971ebd8e729b36a15a0ddcffa077939132a0052e9c2044797018553/pypastry-0.0.1a0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bb969f75805971294233a8b58d578c76", "sha256": "e2dd8622687f04e6645ea04fd9812204c453a53dd55f139659f3d49efbc3ef8f"}, "downloads": -1, "filename": "pypastry-0.0.1-py3.5.egg", "has_sig": false, "md5_digest": "bb969f75805971294233a8b58d578c76", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": ">=3.5", "size": 3564, "upload_time": "2019-11-10T10:30:04", "upload_time_iso_8601": "2019-11-10T10:30:04.138138Z", "url": "https://files.pythonhosted.org/packages/c9/77/7a4a5adc2efeae077fa8e58a4b6b8b894b0a2c16a330a58c0694634e6200/pypastry-0.0.1-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c83f7de587a722c261a10eac2fc9c390", "sha256": "7c7aa0b9c3da5fde482da03aebeda3eff896bf20b833ee0ab2ea33a818d8baa3"}, "downloads": -1, "filename": "pypastry-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c83f7de587a722c261a10eac2fc9c390", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4315, "upload_time": "2019-09-23T15:12:28", "upload_time_iso_8601": "2019-09-23T15:12:28.216497Z", "url": "https://files.pythonhosted.org/packages/1b/33/4ab31dc0a86fad607ba145395afb8e8ba3758454c689d32599107467c376/pypastry-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f1ebd03623b1cff9243f5bdd18b98869", "sha256": "a1c81cd0e01fe69637a9c6393dd6e97901d5c5fb8270553c9b6a61978fe0c063"}, "downloads": -1, "filename": "pypastry-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f1ebd03623b1cff9243f5bdd18b98869", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9031, "upload_time": "2019-09-23T15:12:34", "upload_time_iso_8601": "2019-09-23T15:12:34.674786Z", "url": "https://files.pythonhosted.org/packages/0f/74/9d9217e5e0772c5d152b387f08d61102fa7426058ac886c6a633385a053f/pypastry-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:52 2020"}