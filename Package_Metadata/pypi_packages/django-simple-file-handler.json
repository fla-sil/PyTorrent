{"info": {"author": "Jonathan Rickard", "author_email": "jonathan.rickard@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.2", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "==========================\ndjango-simple-file-handler\n==========================\n\nThe django-simple-file-handler Django app uploads and manages documents and images. It is most useful when used to add these functions to your own apps, and it can also be used to add image processing and PDF generation from HTML templates.\n\nPlease note that \"private\" files and PDFs would be more accurately described as \"hidden.\" The app generates a proxy URL that will load the file for a logged-in user and stores the file with a name consisting of many random characters. Still, it is possible to load these files without logging in if the file path is known.\n\n-----------\nQuick start\n-----------\n\n1. Run ``pip install django-simple-file-handler``.\n\n2. Add django-simple-file-handler to your installed apps: ::\n\n    INSTALLED_APPS = (\n        ...\n        'django_simple_file_handler',\n    )\n\n3. Run ``python manage.py migrate``.\n\n4. Include the django-simple-file-handler URLconf in your project urls.py like this (this step is only required if you wish to use private files or PDFs): ::\n\n    urlpatterns = [\n        ...\n        path(\n            'private-file-pseudo-directory-path/',\n            include('django_simple_file_handler.urls'),\n        ),\n    ]\n\n------\nBasics\n------\n\nPublic and private document objects, as well as unprocessed image objects, can be created and managed via the admin site. Other types are read-only in the admin site.\n\nAll types can be created and accessed by subclassing or creating a foreign key in your own apps.\n\nTemporary documents and temporary PDFs are intended to be used when two or more objects might need to have the same title. These add a string of random characters to the ends of file names to prevent overwriting files.\n\n**Classes**\n\n* ``PublicDocument`` \u2014 Includes uploaded document file\n* ``PrivateDocument`` \u2014 Includes uploaded document file with a proxy URL requiring login\n* ``TemporaryDocument`` \u2014  Includes uploaded document file with a modified file name allowing title duplication\n* ``UnprocessedImage`` \u2014 Includes uploaded image file\n* ``ProcessedImage`` \u2014 Includes uploaded image file and processed image file\n* ``PublicPDF`` \u2014 Includes generated PDF file\n* ``PrivatePDF`` \u2014 Includes generated PDF file with a proxy URL requiring login\n* ``TemporaryPDF`` \u2014 Includes generated PDF file with a modified file name allowing title duplication\n\n**Attributes**\n\n* ``created`` \u2014 ``DateTimeField`` with automatically generated value\n* ``updated`` \u2014 ``DateTimeField`` with automatically generated value\n* ``title`` \u2014 ``CharField`` with ``max_length`` of 245 characters (not available for ``ProcessedImage``)\n* ``extra_text`` \u2014 ``TextField`` (optional)\n* ``saved_file`` \u2014 ``FileField`` for the uploaded file\n* ``processed_file`` \u2014 ``FileField`` for processed image (``ProcessedImage`` only)\n* ``output_width`` \u2014 ``PositiveIntegerField`` for processed image width in pixels (``ProcessedImage`` only)\n* ``output_height`` \u2014 ``PositiveIntegerField`` for processed image height in pixels (``ProcessedImage`` only)\n\n**Methods**\n\n* ``file_url`` \u2014 Returns URL of the uploaded file as a string\n* ``file_link`` \u2014 Returns an HTML link to the URL of the uploaded file as a string\n* ``proxy_url`` \u2014 Returns proxy URL for the uploaded file as a string (``PrivateDocument`` and ``PrivatePDF`` only)\n* ``proxy_link`` \u2014 Returns an HTML link to the proxy URL for the uploaded file as a string (``PrivateDocument`` and ``PrivatePDF`` only)\n* ``image_url`` \u2014 Returns URL of the processed image file as a string (``ProcessedImage`` only)\n* ``image_link`` \u2014 Returns  an HTML link to the URL of the processed image file as a string (``ProcessedImage`` only)\n* ``image_height`` \u2014 Returns an integer for the height of the processed image in pixels. (``ProcessedImage`` only)\n* ``image_width`` \u2014 Returns an integer for the width of the processed image in pixels. (``ProcessedImage`` only)\n* ``saved_file_height`` \u2014 Returns an integer for the height of the source image in pixels. (``ProcessedImage`` only)\n* ``saved_file_width`` \u2014 Returns an integer for the width of the source image in pixels. (``ProcessedImage`` only)\n\n----------------\nProcessed images\n----------------\n\nRefer to the `Pillow <https://github.com/python-pillow/Pillow>`_ documentation for allowed import formats or see the section below on file types to limit them in your forms.\n\nImages are processed when an instance is saved with a file assigned to the ``saved_file`` field and a value for one or both of the ``output_width`` and ``output_height`` fields. If one value is given, the image will be scaled proportionally. If both are supplied and they do not match the proportions of the source image, the image will be scaled and cropped on either the bottom or right side, depending on whether the source image is horizontal or vertical.\n\nThe processed image is stored in the ``processed_file`` field, while the original file assigned to ``saved_file`` is unchanged and can be processed again as needed. Refer to the attributes and methods list above for additional information.\n\nBy default, images are processed into PNGs with RGB mode. To change one or more of the output parameters, add a ``FILE_HANDLER_PILLOW`` setting with a dictionary containing parameters you wish to change, as in this example: ::\n\n    FILE_HANDLER_PILLOW = {\n        'output_mode': 'P',\n        'content_type': 'image/gif',\n        'file_format': 'GIF',\n        'file_extension': 'gif',\n    }\n\nRefer to Pillow documentation for options for these parameters.\n\n---------------\nGenerating PDFs\n---------------\n\nPDF generation will use `WeasyPrint <https://weasyprint.org/>`_ if it is installed and ``FILE_HANDLER_WEASYPRINT = True`` is present in Django settings. Otherwise, it will use `xhtml2pdf <https://github.com/xhtml2pdf/xhtml2pdf>`_, which wil be installed if not present. This app has been tested with WeasyPrint 0.28. Please refer to xhtml2pdf or WeasyPrint documentation for HTML template-formatting specifics.\n\nThe example code below uses ``PublicPDF``, but ``PrivatePDF`` and ``TemporaryPDF`` work the same way. ::\n\n    generated_pdf = PublicPDF.objects.create(\n        title='title of the generated PDF document',\n        extra_text='any additional text needed with the object',\n        template_location='path/to/your/html/template.html',\n        template_data={\n            'value_one': value_to_be_inserted_in_template,\n            'value_two': value_to_be_inserted_in_template,\n            'value_three': value_to_be_inserted_in_template,\n        },\n    )\n\nDatabase object attributes can then be changed without rewriting the PDF file. The file is only written when the ``template_data`` dictionary is given and the object is resaved.\n\n------------\nFile formats\n------------\n\nIf `python-magic <https://github.com/ahupp/python-magic>`_ is installed, django-simple-file-handler will use it to check uploaded file MIME types. Otherwise, it will use Python's built-in library. This package has been tested with python-magic 0.4.\n\nSupported document formats include PDF, ZIP, Word, Excel and PowerPoint. Supported unprocessed image formats include PNG, JPEG and GIF.\n\nTo support different file types, follow this example for your form: ::\n\n    class MyForm(ModelForm):\n        def __init__(self, *args, **kwargs):\n            super().__init__(*args, **kwargs)\n            self.fields['saved_file'].validators.append(CheckExtMIME(allowed_attributes=MY_DICTIONARY))\n\n        class Meta:\n            model = PublicDocument\n            fields = [\n                'title',\n                'extra_text',\n                'saved_file',\n            ]\n\nThe dictionary's format can optionally include keys with list values for file extensions, MIME types and verbose names for file formats (these will appear in error messages if given). Here is an example: ::\n\n    MY_DICTIONARY = {\n        'allowed_extensions' : [\n            'abc',\n            'def',\n            'ghi',\n        ],\n        'allowed_mimetypes' : [\n            'application/example1',\n            'application/example2',\n            'image/example3',\n        ],\n        'allowed_verbose' : [\n            'Format1',\n            'Format2',\n            'Format3',\n        ],\n    }\n\nDictionaries included in ``django_simple_file_handler.file_types`` include:\n\n* ``CHECK_DOC`` \u2014 Allows ZIP, Word, Excel and PowerPoint.\n* ``CHECK_WEB_IMAGE`` \u2014 Allows GIF, JPEG and PNG.\n* ``CHECK_RAW_IMAGE`` \u2014 Allows GIF, JPEG, PNG and TIFF.\n* ``CHECK_PDF`` \u2014 Allows PDF only.\n* ``CHECK_ALL_WEB`` \u2014 Allows GIF, JPEG, PNG ZIP, Word, Excel and PowerPoint.\n\n--------------\nFile locations\n--------------\n\nBy default, images will be stored in your ``media`` directory in subdirectories named ``documents``, ``images`` and ``pdf``. If you wish to change the directory where these subdirectories are created, add ``FILE_HANDLER_DIRECTORY = 'path/to/location/'`` to your settings.\n\n------------\nAdvanced use\n------------\n\nThe django-simple-file-handler models and admin classes make use of modular, reusable mixins and functions that can, of course, be imported for use with your own code.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.jonathanrickard.com/", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "django-simple-file-handler", "package_url": "https://pypi.org/project/django-simple-file-handler/", "platform": "", "project_url": "https://pypi.org/project/django-simple-file-handler/", "project_urls": {"Homepage": "http://www.jonathanrickard.com/"}, "release_url": "https://pypi.org/project/django-simple-file-handler/0.2.4/", "requires_dist": ["Django (<3.0,>=2.2.9)", "Pillow (>=5.0)", "xhtml2pdf (>=0.2.3)"], "requires_python": "", "summary": "A Django app for storing and processing documents and images", "version": "0.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The django-simple-file-handler Django app uploads and manages documents and images. It is most useful when used to add these functions to your own apps, and it can also be used to add image processing and PDF generation from HTML templates.</p>\n<p>Please note that \u201cprivate\u201d files and PDFs would be more accurately described as \u201chidden.\u201d The app generates a proxy URL that will load the file for a logged-in user and stores the file with a name consisting of many random characters. Still, it is possible to load these files without logging in if the file path is known.</p>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<ol>\n<li><p>Run <tt>pip install <span class=\"pre\">django-simple-file-handler</span></tt>.</p>\n</li>\n<li><p>Add django-simple-file-handler to your installed apps:</p>\n<pre>INSTALLED_APPS = (\n    ...\n    'django_simple_file_handler',\n)\n</pre>\n</li>\n<li><p>Run <tt>python manage.py migrate</tt>.</p>\n</li>\n<li><p>Include the django-simple-file-handler URLconf in your project urls.py like this (this step is only required if you wish to use private files or PDFs):</p>\n<pre>urlpatterns = [\n    ...\n    path(\n        'private-file-pseudo-directory-path/',\n        include('django_simple_file_handler.urls'),\n    ),\n]\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"basics\">\n<h2>Basics</h2>\n<p>Public and private document objects, as well as unprocessed image objects, can be created and managed via the admin site. Other types are read-only in the admin site.</p>\n<p>All types can be created and accessed by subclassing or creating a foreign key in your own apps.</p>\n<p>Temporary documents and temporary PDFs are intended to be used when two or more objects might need to have the same title. These add a string of random characters to the ends of file names to prevent overwriting files.</p>\n<p><strong>Classes</strong></p>\n<ul>\n<li><tt>PublicDocument</tt> \u2014 Includes uploaded document file</li>\n<li><tt>PrivateDocument</tt> \u2014 Includes uploaded document file with a proxy URL requiring login</li>\n<li><tt>TemporaryDocument</tt> \u2014  Includes uploaded document file with a modified file name allowing title duplication</li>\n<li><tt>UnprocessedImage</tt> \u2014 Includes uploaded image file</li>\n<li><tt>ProcessedImage</tt> \u2014 Includes uploaded image file and processed image file</li>\n<li><tt>PublicPDF</tt> \u2014 Includes generated PDF file</li>\n<li><tt>PrivatePDF</tt> \u2014 Includes generated PDF file with a proxy URL requiring login</li>\n<li><tt>TemporaryPDF</tt> \u2014 Includes generated PDF file with a modified file name allowing title duplication</li>\n</ul>\n<p><strong>Attributes</strong></p>\n<ul>\n<li><tt>created</tt> \u2014 <tt>DateTimeField</tt> with automatically generated value</li>\n<li><tt>updated</tt> \u2014 <tt>DateTimeField</tt> with automatically generated value</li>\n<li><tt>title</tt> \u2014 <tt>CharField</tt> with <tt>max_length</tt> of 245 characters (not available for <tt>ProcessedImage</tt>)</li>\n<li><tt>extra_text</tt> \u2014 <tt>TextField</tt> (optional)</li>\n<li><tt>saved_file</tt> \u2014 <tt>FileField</tt> for the uploaded file</li>\n<li><tt>processed_file</tt> \u2014 <tt>FileField</tt> for processed image (<tt>ProcessedImage</tt> only)</li>\n<li><tt>output_width</tt> \u2014 <tt>PositiveIntegerField</tt> for processed image width in pixels (<tt>ProcessedImage</tt> only)</li>\n<li><tt>output_height</tt> \u2014 <tt>PositiveIntegerField</tt> for processed image height in pixels (<tt>ProcessedImage</tt> only)</li>\n</ul>\n<p><strong>Methods</strong></p>\n<ul>\n<li><tt>file_url</tt> \u2014 Returns URL of the uploaded file as a string</li>\n<li><tt>file_link</tt> \u2014 Returns an HTML link to the URL of the uploaded file as a string</li>\n<li><tt>proxy_url</tt> \u2014 Returns proxy URL for the uploaded file as a string (<tt>PrivateDocument</tt> and <tt>PrivatePDF</tt> only)</li>\n<li><tt>proxy_link</tt> \u2014 Returns an HTML link to the proxy URL for the uploaded file as a string (<tt>PrivateDocument</tt> and <tt>PrivatePDF</tt> only)</li>\n<li><tt>image_url</tt> \u2014 Returns URL of the processed image file as a string (<tt>ProcessedImage</tt> only)</li>\n<li><tt>image_link</tt> \u2014 Returns  an HTML link to the URL of the processed image file as a string (<tt>ProcessedImage</tt> only)</li>\n<li><tt>image_height</tt> \u2014 Returns an integer for the height of the processed image in pixels. (<tt>ProcessedImage</tt> only)</li>\n<li><tt>image_width</tt> \u2014 Returns an integer for the width of the processed image in pixels. (<tt>ProcessedImage</tt> only)</li>\n<li><tt>saved_file_height</tt> \u2014 Returns an integer for the height of the source image in pixels. (<tt>ProcessedImage</tt> only)</li>\n<li><tt>saved_file_width</tt> \u2014 Returns an integer for the width of the source image in pixels. (<tt>ProcessedImage</tt> only)</li>\n</ul>\n</div>\n<div id=\"processed-images\">\n<h2>Processed images</h2>\n<p>Refer to the <a href=\"https://github.com/python-pillow/Pillow\" rel=\"nofollow\">Pillow</a> documentation for allowed import formats or see the section below on file types to limit them in your forms.</p>\n<p>Images are processed when an instance is saved with a file assigned to the <tt>saved_file</tt> field and a value for one or both of the <tt>output_width</tt> and <tt>output_height</tt> fields. If one value is given, the image will be scaled proportionally. If both are supplied and they do not match the proportions of the source image, the image will be scaled and cropped on either the bottom or right side, depending on whether the source image is horizontal or vertical.</p>\n<p>The processed image is stored in the <tt>processed_file</tt> field, while the original file assigned to <tt>saved_file</tt> is unchanged and can be processed again as needed. Refer to the attributes and methods list above for additional information.</p>\n<p>By default, images are processed into PNGs with RGB mode. To change one or more of the output parameters, add a <tt>FILE_HANDLER_PILLOW</tt> setting with a dictionary containing parameters you wish to change, as in this example:</p>\n<pre>FILE_HANDLER_PILLOW = {\n    'output_mode': 'P',\n    'content_type': 'image/gif',\n    'file_format': 'GIF',\n    'file_extension': 'gif',\n}\n</pre>\n<p>Refer to Pillow documentation for options for these parameters.</p>\n</div>\n<div id=\"generating-pdfs\">\n<h2>Generating PDFs</h2>\n<p>PDF generation will use <a href=\"https://weasyprint.org/\" rel=\"nofollow\">WeasyPrint</a> if it is installed and <tt>FILE_HANDLER_WEASYPRINT = True</tt> is present in Django settings. Otherwise, it will use <a href=\"https://github.com/xhtml2pdf/xhtml2pdf\" rel=\"nofollow\">xhtml2pdf</a>, which wil be installed if not present. This app has been tested with WeasyPrint 0.28. Please refer to xhtml2pdf or WeasyPrint documentation for HTML template-formatting specifics.</p>\n<p>The example code below uses <tt>PublicPDF</tt>, but <tt>PrivatePDF</tt> and <tt>TemporaryPDF</tt> work the same way.</p>\n<pre>generated_pdf = PublicPDF.objects.create(\n    title='title of the generated PDF document',\n    extra_text='any additional text needed with the object',\n    template_location='path/to/your/html/template.html',\n    template_data={\n        'value_one': value_to_be_inserted_in_template,\n        'value_two': value_to_be_inserted_in_template,\n        'value_three': value_to_be_inserted_in_template,\n    },\n)\n</pre>\n<p>Database object attributes can then be changed without rewriting the PDF file. The file is only written when the <tt>template_data</tt> dictionary is given and the object is resaved.</p>\n</div>\n<div id=\"file-formats\">\n<h2>File formats</h2>\n<p>If <a href=\"https://github.com/ahupp/python-magic\" rel=\"nofollow\">python-magic</a> is installed, django-simple-file-handler will use it to check uploaded file MIME types. Otherwise, it will use Python\u2019s built-in library. This package has been tested with python-magic 0.4.</p>\n<p>Supported document formats include PDF, ZIP, Word, Excel and PowerPoint. Supported unprocessed image formats include PNG, JPEG and GIF.</p>\n<p>To support different file types, follow this example for your form:</p>\n<pre>class MyForm(ModelForm):\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.fields['saved_file'].validators.append(CheckExtMIME(allowed_attributes=MY_DICTIONARY))\n\n    class Meta:\n        model = PublicDocument\n        fields = [\n            'title',\n            'extra_text',\n            'saved_file',\n        ]\n</pre>\n<p>The dictionary\u2019s format can optionally include keys with list values for file extensions, MIME types and verbose names for file formats (these will appear in error messages if given). Here is an example:</p>\n<pre>MY_DICTIONARY = {\n    'allowed_extensions' : [\n        'abc',\n        'def',\n        'ghi',\n    ],\n    'allowed_mimetypes' : [\n        'application/example1',\n        'application/example2',\n        'image/example3',\n    ],\n    'allowed_verbose' : [\n        'Format1',\n        'Format2',\n        'Format3',\n    ],\n}\n</pre>\n<p>Dictionaries included in <tt>django_simple_file_handler.file_types</tt> include:</p>\n<ul>\n<li><tt>CHECK_DOC</tt> \u2014 Allows ZIP, Word, Excel and PowerPoint.</li>\n<li><tt>CHECK_WEB_IMAGE</tt> \u2014 Allows GIF, JPEG and PNG.</li>\n<li><tt>CHECK_RAW_IMAGE</tt> \u2014 Allows GIF, JPEG, PNG and TIFF.</li>\n<li><tt>CHECK_PDF</tt> \u2014 Allows PDF only.</li>\n<li><tt>CHECK_ALL_WEB</tt> \u2014 Allows GIF, JPEG, PNG ZIP, Word, Excel and PowerPoint.</li>\n</ul>\n</div>\n<div id=\"file-locations\">\n<h2>File locations</h2>\n<p>By default, images will be stored in your <tt>media</tt> directory in subdirectories named <tt>documents</tt>, <tt>images</tt> and <tt>pdf</tt>. If you wish to change the directory where these subdirectories are created, add <tt>FILE_HANDLER_DIRECTORY = 'path/to/location/'</tt> to your settings.</p>\n</div>\n<div id=\"advanced-use\">\n<h2>Advanced use</h2>\n<p>The django-simple-file-handler models and admin classes make use of modular, reusable mixins and functions that can, of course, be imported for use with your own code.</p>\n</div>\n\n          </div>"}, "last_serial": 7174512, "releases": {"0.1.3": [{"comment_text": "", "digests": {"md5": "52b45c5d6aff69b70a9ca0a463294740", "sha256": "b3e3ad4e7e19d49b2833e8cfebcf4308ed4037278d4d5689b25b51a1e715623e"}, "downloads": -1, "filename": "django_simple_file_handler-0.1.3-py36-none-any.whl", "has_sig": false, "md5_digest": "52b45c5d6aff69b70a9ca0a463294740", "packagetype": "bdist_wheel", "python_version": "py36", "requires_python": null, "size": 20151, "upload_time": "2018-05-19T13:37:28", "upload_time_iso_8601": "2018-05-19T13:37:28.073498Z", "url": "https://files.pythonhosted.org/packages/91/15/0cba1fd506095aa41960d068cf201286c2dc62cb115ee63957500620066b/django_simple_file_handler-0.1.3-py36-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "377521676a1805e32b7e74153f0afeba", "sha256": "50e050a4482664ecfd50214cbd8bceb11f55468bbdc3b4767736bcfef184c013"}, "downloads": -1, "filename": "django_simple_file_handler-0.1.3.tar.gz", "has_sig": false, "md5_digest": "377521676a1805e32b7e74153f0afeba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16788, "upload_time": "2018-05-19T13:37:29", "upload_time_iso_8601": "2018-05-19T13:37:29.478383Z", "url": "https://files.pythonhosted.org/packages/f3/c1/89f50fce24651a7d07863580f3b54680c4ad2f6d7c5d26bb638c6d005174/django_simple_file_handler-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "dca72d9b9f5c0f93810a8b6460e9fcc7", "sha256": "3ec800aa00e3792cd9392f62984fe7476e86290eb66e5f95e32793245edcbb10"}, "downloads": -1, "filename": "django_simple_file_handler-0.1.4-py36-none-any.whl", "has_sig": false, "md5_digest": "dca72d9b9f5c0f93810a8b6460e9fcc7", "packagetype": "bdist_wheel", "python_version": "py36", "requires_python": null, "size": 20824, "upload_time": "2018-05-21T21:12:49", "upload_time_iso_8601": "2018-05-21T21:12:49.452886Z", "url": "https://files.pythonhosted.org/packages/7a/a4/11c2b992d7e1be31943601a5c43d69cc2b8cf412eb344fb330ba4c11f3db/django_simple_file_handler-0.1.4-py36-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "214e5b319a37920346bbf8361c1f448a", "sha256": "c29070d0a0af41e6d17825afc7771077f843c7a6862b499c9a2e44e00a8ef304"}, "downloads": -1, "filename": "django_simple_file_handler-0.1.4.tar.gz", "has_sig": false, "md5_digest": "214e5b319a37920346bbf8361c1f448a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16982, "upload_time": "2018-05-21T21:12:50", "upload_time_iso_8601": "2018-05-21T21:12:50.652405Z", "url": "https://files.pythonhosted.org/packages/02/29/9f833e4a1503e1540934850accf9d49ebf34cab32f15b07b15562ce00d5f/django_simple_file_handler-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "12e8480d3142719e937857d48feca2e2", "sha256": "f7a2104679e2bf8dce5f8c69cc4abb31fc877dd77dbf0dd4cb1d89bd64fce103"}, "downloads": -1, "filename": "django_simple_file_handler-0.1.5-py36-none-any.whl", "has_sig": false, "md5_digest": "12e8480d3142719e937857d48feca2e2", "packagetype": "bdist_wheel", "python_version": "py36", "requires_python": null, "size": 21123, "upload_time": "2018-05-25T15:44:00", "upload_time_iso_8601": "2018-05-25T15:44:00.439290Z", "url": "https://files.pythonhosted.org/packages/16/8a/9ce8c8a95c3cbca1eb74b9f87d983eb1ffed942a2938e36bd0855bf43506/django_simple_file_handler-0.1.5-py36-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e137801e97373b2aec491788ee748789", "sha256": "ec4b7c84ec1b70519988096d42f928cfc526679e0de4e42596b7c6333edc2d6e"}, "downloads": -1, "filename": "django_simple_file_handler-0.1.5.tar.gz", "has_sig": false, "md5_digest": "e137801e97373b2aec491788ee748789", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17089, "upload_time": "2018-05-25T15:44:01", "upload_time_iso_8601": "2018-05-25T15:44:01.871848Z", "url": "https://files.pythonhosted.org/packages/f0/86/87431055bda30ae3bf5ba578922c9e6071174cb493310c40fa1fe60b1882/django_simple_file_handler-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "6960307d05afb3add3cf68591af3ff4a", "sha256": "7706d9528586e2b2fb1837122f27ba8f40d6d2cfdf17469e1290b3a66838a0e5"}, "downloads": -1, "filename": "django_simple_file_handler-0.1.6-py36-none-any.whl", "has_sig": false, "md5_digest": "6960307d05afb3add3cf68591af3ff4a", "packagetype": "bdist_wheel", "python_version": "py36", "requires_python": null, "size": 24089, "upload_time": "2018-10-10T01:25:28", "upload_time_iso_8601": "2018-10-10T01:25:28.360615Z", "url": "https://files.pythonhosted.org/packages/43/ce/3b5ecccf3458f130caeffbfe6c141bca3e34af6f302b250b8ff4f3c61267/django_simple_file_handler-0.1.6-py36-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b41df85d01cdb08cbdf36b4b414fe967", "sha256": "1577450f169a68ec8a8465dee055ed1dca17a9159f5b8ebb6076296f8a1f2ac0"}, "downloads": -1, "filename": "django_simple_file_handler-0.1.6.tar.gz", "has_sig": false, "md5_digest": "b41df85d01cdb08cbdf36b4b414fe967", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18903, "upload_time": "2018-10-10T01:25:29", "upload_time_iso_8601": "2018-10-10T01:25:29.678456Z", "url": "https://files.pythonhosted.org/packages/46/5a/c9fa78f86aca219d5fb5d09a394892b0b6c5646f1e3bd52b4baa71262521/django_simple_file_handler-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "7bb678a895c8e1a677259deeb3a46e56", "sha256": "362dab1211f54fbd6fd3679370734904bee82022d7eb153bb7046de76d76f76f"}, "downloads": -1, "filename": "django_simple_file_handler-0.1.7-py37-none-any.whl", "has_sig": false, "md5_digest": "7bb678a895c8e1a677259deeb3a46e56", "packagetype": "bdist_wheel", "python_version": "py37", "requires_python": null, "size": 24613, "upload_time": "2019-01-30T21:43:15", "upload_time_iso_8601": "2019-01-30T21:43:15.824790Z", "url": "https://files.pythonhosted.org/packages/18/05/e7b87197f33df3297c0d769298085ea40f718ab3ed16ec5e5c8201de5985/django_simple_file_handler-0.1.7-py37-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "524720faaf9e50ae25a737001fea953e", "sha256": "d76d32a12f1b747b4b1e6c82945e522900adf8a7b7470d1f4b7dc85fd651ac2f"}, "downloads": -1, "filename": "django_simple_file_handler-0.1.7.tar.gz", "has_sig": false, "md5_digest": "524720faaf9e50ae25a737001fea953e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18998, "upload_time": "2019-01-30T21:43:16", "upload_time_iso_8601": "2019-01-30T21:43:16.883034Z", "url": "https://files.pythonhosted.org/packages/73/d1/c2d407061f0c3657db9a98edb639aadc8d1001d8265fb843cf24ccfed4de/django_simple_file_handler-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "85232ff822e52199f4cda805de6564b5", "sha256": "e14279541f7e65a38f77812528d8d64cde987b0ccf2da78a876c9c952ef59072"}, "downloads": -1, "filename": "django_simple_file_handler-0.1.8-py37-none-any.whl", "has_sig": false, "md5_digest": "85232ff822e52199f4cda805de6564b5", "packagetype": "bdist_wheel", "python_version": "py37", "requires_python": null, "size": 24679, "upload_time": "2019-02-20T21:06:53", "upload_time_iso_8601": "2019-02-20T21:06:53.216800Z", "url": "https://files.pythonhosted.org/packages/de/3c/1fd2292f5afc87da78355930b3d6c6b317d3abe9f0d562af3f57737b67f4/django_simple_file_handler-0.1.8-py37-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "52a320bc78c7305002968ac53b518429", "sha256": "8ce505751e205d829f4ea89ba49426baf29521e9806f54fdaac2ff50d2437aff"}, "downloads": -1, "filename": "django_simple_file_handler-0.1.8.tar.gz", "has_sig": false, "md5_digest": "52a320bc78c7305002968ac53b518429", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19056, "upload_time": "2019-02-20T21:06:54", "upload_time_iso_8601": "2019-02-20T21:06:54.751771Z", "url": "https://files.pythonhosted.org/packages/dd/ea/4c1f51f098300a494dec2f4b0e9ba3f91550bd15939ce97c0e5fa74c434a/django_simple_file_handler-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "5564439d883b40bc352a3e92a350aa92", "sha256": "95093d0ffd6cf347a614a2cc48c43a2c2239011704b6303a4f97c887241edc60"}, "downloads": -1, "filename": "django_simple_file_handler-0.1.9-py37-none-any.whl", "has_sig": false, "md5_digest": "5564439d883b40bc352a3e92a350aa92", "packagetype": "bdist_wheel", "python_version": "py37", "requires_python": null, "size": 26304, "upload_time": "2019-05-15T19:52:02", "upload_time_iso_8601": "2019-05-15T19:52:02.703358Z", "url": "https://files.pythonhosted.org/packages/39/05/743aba73e95d91604faee0129ad6e258041b33bb941b055a042f348b5f50/django_simple_file_handler-0.1.9-py37-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e47f00d3e1369e67ec4c016b1bc835d", "sha256": "bb7b2979c8d239a2fc66218032c55003429a23d6876850690f8bb34f2c7a25b9"}, "downloads": -1, "filename": "django_simple_file_handler-0.1.9.tar.gz", "has_sig": false, "md5_digest": "9e47f00d3e1369e67ec4c016b1bc835d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20847, "upload_time": "2019-05-15T19:52:04", "upload_time_iso_8601": "2019-05-15T19:52:04.498958Z", "url": "https://files.pythonhosted.org/packages/4d/99/2f0f25bdd5f838108a9b12e45b2e42e8e9f65235e0ff43d9851343c10f0c/django_simple_file_handler-0.1.9.tar.gz", "yanked": false}], "0.1.9.1": [{"comment_text": "", "digests": {"md5": "5cbed7fb5480d8a3ef3de3fbe6d56de1", "sha256": "478933fd179181f6936d4ee7e5fff5f3248d84b82d79bb296e13d10fa234fd55"}, "downloads": -1, "filename": "django_simple_file_handler-0.1.9.1-py37-none-any.whl", "has_sig": false, "md5_digest": "5cbed7fb5480d8a3ef3de3fbe6d56de1", "packagetype": "bdist_wheel", "python_version": "py37", "requires_python": null, "size": 26396, "upload_time": "2019-05-20T17:51:51", "upload_time_iso_8601": "2019-05-20T17:51:51.942785Z", "url": "https://files.pythonhosted.org/packages/d0/c6/b2e1f3421a0cdfed89ee9e64708c35ee502353cc50bb8b17f0b6e7305423/django_simple_file_handler-0.1.9.1-py37-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "13a75ff77a9fb422c50b974cf7529028", "sha256": "759490d46345cded81009d0c2790c3cfca23b803f62533200fa1d65eed7e1543"}, "downloads": -1, "filename": "django_simple_file_handler-0.1.9.1.tar.gz", "has_sig": false, "md5_digest": "13a75ff77a9fb422c50b974cf7529028", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20994, "upload_time": "2019-05-20T17:51:53", "upload_time_iso_8601": "2019-05-20T17:51:53.390778Z", "url": "https://files.pythonhosted.org/packages/da/0d/67cf677a3ba3e7ea1567fc21f7e98a71201cbef5c92fb1842ce1f55c0138/django_simple_file_handler-0.1.9.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "4d05123cf5be5baba60ce9e1e9b38ce2", "sha256": "886e4b6256252e61f78e138577ef7b82ca68a4b9b275ef43a32f225341b5bb6a"}, "downloads": -1, "filename": "django_simple_file_handler-0.2.0-py37-none-any.whl", "has_sig": false, "md5_digest": "4d05123cf5be5baba60ce9e1e9b38ce2", "packagetype": "bdist_wheel", "python_version": "py37", "requires_python": null, "size": 26279, "upload_time": "2019-06-10T19:27:10", "upload_time_iso_8601": "2019-06-10T19:27:10.745855Z", "url": "https://files.pythonhosted.org/packages/7b/fb/e76f30a0f9e1c24305faf1c8f0321fff561dcbd1b1b716b98138167c1abf/django_simple_file_handler-0.2.0-py37-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "82549823049079e66926a1a6e7d8bc08", "sha256": "333ac46b17dfcb7d3cf1699cc3ca9a0e283dd3e759b628b044962d697bca385f"}, "downloads": -1, "filename": "django_simple_file_handler-0.2.0.tar.gz", "has_sig": false, "md5_digest": "82549823049079e66926a1a6e7d8bc08", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20890, "upload_time": "2019-06-10T19:27:12", "upload_time_iso_8601": "2019-06-10T19:27:12.577455Z", "url": "https://files.pythonhosted.org/packages/38/27/c10ba4b2ece31b581f060521f32eabba0818ff9f87ebef856ceba6400836/django_simple_file_handler-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "4dc10742a6e8ae5d9ef4fee9a366d633", "sha256": "498dfe1e6c39d10173daca049b2667cc4bafee622a62e80a11c826cd5a4f1ac5"}, "downloads": -1, "filename": "django_simple_file_handler-0.2.1-py37-none-any.whl", "has_sig": false, "md5_digest": "4dc10742a6e8ae5d9ef4fee9a366d633", "packagetype": "bdist_wheel", "python_version": "py37", "requires_python": null, "size": 26319, "upload_time": "2019-08-02T17:29:14", "upload_time_iso_8601": "2019-08-02T17:29:14.824338Z", "url": "https://files.pythonhosted.org/packages/21/cd/2e23313d4c29c557787396975177a859ecece6b26071e6453eb458a13588/django_simple_file_handler-0.2.1-py37-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66ac143dc36762593566e6b78a051f21", "sha256": "680ee44a5e0e6620d6eb062a93029385162e925c16f9d15e5962afd750cc15f2"}, "downloads": -1, "filename": "django_simple_file_handler-0.2.1.tar.gz", "has_sig": false, "md5_digest": "66ac143dc36762593566e6b78a051f21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20933, "upload_time": "2019-08-02T17:29:16", "upload_time_iso_8601": "2019-08-02T17:29:16.221295Z", "url": "https://files.pythonhosted.org/packages/1d/0e/1d6edb2a62068cabd90ae9b3872f9e1ae8b39c4d182dd7476ca30826a4b0/django_simple_file_handler-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "ad2b3d40d2f15156e39a7b8de13ac3f0", "sha256": "9cb07b6d7018bb4fb2032c78d141f335da8687da34b983d7982b23c3722a14d7"}, "downloads": -1, "filename": "django_simple_file_handler-0.2.2-py37-none-any.whl", "has_sig": false, "md5_digest": "ad2b3d40d2f15156e39a7b8de13ac3f0", "packagetype": "bdist_wheel", "python_version": "py37", "requires_python": null, "size": 25865, "upload_time": "2020-02-03T22:35:32", "upload_time_iso_8601": "2020-02-03T22:35:32.466638Z", "url": "https://files.pythonhosted.org/packages/b9/55/48901c3f777ab2042f08c94782531b7f27f9d9ae7c8b0d907237c4ca7f55/django_simple_file_handler-0.2.2-py37-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a4f18e17fe22a8e0e8187c65161a6df", "sha256": "8cd507661b3999fcdf1e40579a7e29e12e198caf4fabde68578abccd33692e39"}, "downloads": -1, "filename": "django_simple_file_handler-0.2.2.tar.gz", "has_sig": false, "md5_digest": "3a4f18e17fe22a8e0e8187c65161a6df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20811, "upload_time": "2020-02-03T22:35:33", "upload_time_iso_8601": "2020-02-03T22:35:33.890060Z", "url": "https://files.pythonhosted.org/packages/49/0b/b1ba5e41e59d4bc7e783152ba358e7bd061fa9ebb4bacf0a0283b9488a7c/django_simple_file_handler-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "692e727f83d87096a74a1a18fdf09043", "sha256": "1ec4e8601e64a31afe12bb299ee6fa0b8848c3070d8d5915efd51c641a722b57"}, "downloads": -1, "filename": "django_simple_file_handler-0.2.3-py37-none-any.whl", "has_sig": false, "md5_digest": "692e727f83d87096a74a1a18fdf09043", "packagetype": "bdist_wheel", "python_version": "py37", "requires_python": null, "size": 25865, "upload_time": "2020-03-09T14:55:55", "upload_time_iso_8601": "2020-03-09T14:55:55.541903Z", "url": "https://files.pythonhosted.org/packages/0f/e4/ae701c7743f034a3833b00892380c2fdeab773533182491148fd599085a4/django_simple_file_handler-0.2.3-py37-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab31e641c6d017d0443ce73569748ddb", "sha256": "e695d4ce2fa8f0c6eb33f351197a22c7c75b42ca866165bed2d83ff102827825"}, "downloads": -1, "filename": "django_simple_file_handler-0.2.3.tar.gz", "has_sig": false, "md5_digest": "ab31e641c6d017d0443ce73569748ddb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20810, "upload_time": "2020-03-09T14:55:57", "upload_time_iso_8601": "2020-03-09T14:55:57.797126Z", "url": "https://files.pythonhosted.org/packages/ab/8a/4df400a02e3074f4506390365cad42677bb650e85fc20f9d727a05a4973b/django_simple_file_handler-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "e50579214d9b8977d663c4c0796c455a", "sha256": "d90d63b2e297d617409e81de70496970ed4e0ce9f3120ef947270a6e7ab26731"}, "downloads": -1, "filename": "django_simple_file_handler-0.2.4-py37-none-any.whl", "has_sig": false, "md5_digest": "e50579214d9b8977d663c4c0796c455a", "packagetype": "bdist_wheel", "python_version": "py37", "requires_python": null, "size": 25942, "upload_time": "2020-05-05T18:30:48", "upload_time_iso_8601": "2020-05-05T18:30:48.241908Z", "url": "https://files.pythonhosted.org/packages/d2/dc/6854aeb3d27ee22b9adc8e2f33f9d46f7e11c784602e1f66605705cbfe79/django_simple_file_handler-0.2.4-py37-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec7ae1979d8cea9352279ff4bd982835", "sha256": "30ab1cd36fe669816d17ea3457148ea4701c327bddfdca7a71cf88461454b48b"}, "downloads": -1, "filename": "django_simple_file_handler-0.2.4.tar.gz", "has_sig": false, "md5_digest": "ec7ae1979d8cea9352279ff4bd982835", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21844, "upload_time": "2020-05-05T18:30:49", "upload_time_iso_8601": "2020-05-05T18:30:49.678788Z", "url": "https://files.pythonhosted.org/packages/65/03/0cfc0f529c0534fdc55911babce0b5ea8f68aa06144d84eb13facf8769e9/django_simple_file_handler-0.2.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e50579214d9b8977d663c4c0796c455a", "sha256": "d90d63b2e297d617409e81de70496970ed4e0ce9f3120ef947270a6e7ab26731"}, "downloads": -1, "filename": "django_simple_file_handler-0.2.4-py37-none-any.whl", "has_sig": false, "md5_digest": "e50579214d9b8977d663c4c0796c455a", "packagetype": "bdist_wheel", "python_version": "py37", "requires_python": null, "size": 25942, "upload_time": "2020-05-05T18:30:48", "upload_time_iso_8601": "2020-05-05T18:30:48.241908Z", "url": "https://files.pythonhosted.org/packages/d2/dc/6854aeb3d27ee22b9adc8e2f33f9d46f7e11c784602e1f66605705cbfe79/django_simple_file_handler-0.2.4-py37-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec7ae1979d8cea9352279ff4bd982835", "sha256": "30ab1cd36fe669816d17ea3457148ea4701c327bddfdca7a71cf88461454b48b"}, "downloads": -1, "filename": "django_simple_file_handler-0.2.4.tar.gz", "has_sig": false, "md5_digest": "ec7ae1979d8cea9352279ff4bd982835", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21844, "upload_time": "2020-05-05T18:30:49", "upload_time_iso_8601": "2020-05-05T18:30:49.678788Z", "url": "https://files.pythonhosted.org/packages/65/03/0cfc0f529c0534fdc55911babce0b5ea8f68aa06144d84eb13facf8769e9/django_simple_file_handler-0.2.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:24 2020"}