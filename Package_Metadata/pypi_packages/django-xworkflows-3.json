{"info": {"author": "Rapha\u00ebl Barrois", "author_email": "raphael.barrois+django_xworkflows@polytechnique.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Django-XWorkflows\n=================\n\n.. image:: https://secure.travis-ci.org/rbarrois/django_xworkflows.png?branch=master\n    :target: http://travis-ci.org/rbarrois/django_xworkflows/\n\n.. image:: https://img.shields.io/pypi/v/django_xworkflows.svg\n    :target: https://django-xworkflows.readthedocs.io/en/latest/changelog.html\n    :alt: Latest Version\n\n.. image:: https://img.shields.io/pypi/pyversions/django_xworkflows.svg\n    :target: https://pypi.python.org/pypi/django_xworkflows/\n    :alt: Supported Python versions\n\n.. image:: https://img.shields.io/pypi/wheel/django_xworkflows.svg\n    :target: https://pypi.python.org/pypi/django_xworkflows/\n    :alt: Wheel status\n\n.. image:: https://img.shields.io/pypi/l/django_xworkflows.svg\n    :target: https://pypi.python.org/pypi/django_xworkflows/\n    :alt: License\n\nUse `XWorkflows <http://github.com/rbarrois/xworkflows/>`_ along with Django models.\n\nDjango-XWorkflows allow to bind a Django model to a workflow, with a few extra features:\n\n- Auto-save after transitions\n- Log each action into the database\n\nDefine a workflow and add it to a model:\n\n.. code-block:: python\n\n    from django import models\n    from django_xworkflows import models as xwf_models\n\n    class MyWorkflow(xwf_models.Workflow):\n        states = (\n            ('new', _(u\"New\")),\n            ('old', _(u\"Old\")),\n        )\n        transitions = (\n            ('get_old', 'new', 'old'),\n        )\n        initial_state = 'new'\n\n    class MyModel(xwf_models.WorkflowEnabled, models.Model):\n\n        state = xwf_models.StateField(MyWorkflow)\n\nUse the workflow:\n\n.. code-block:: python\n\n    >>> obj = MyModel()\n    >>> obj.state  # Defaults to the initial_state\n    State('new')\n    >>> # Perform a transition\n    >>> obj.get_old()\n    >>> obj.state\n    State('old')\n    >>> # Object was saved to the database\n    >>> obj.pk\n    1\n    >>> # Logs were saved to the database\n    >>> xwf_models.TransitionLog.objects.all()\n    [TransitionLog(MyModel: new -> old at 2012-04-14T12:10:00+0200)]\n\nLinks\n-----\n\n* Package on PyPI: http://pypi.python.org/pypi/django-xworkflows\n* Repository and issues on GitHub: http://github.com/rbarrois/django_xworkflows\n* Doc on https://django-xworkflows.readthedocs.io/\n* XWorkflows on GitHub: http://github.com/rbarrois/xworkflows\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "http://pypi.python.org/pypi/django-xworkflows-3/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lethe3000/django_xworkflows", "keywords": "django workflow state machine automaton", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "django-xworkflows-3", "package_url": "https://pypi.org/project/django-xworkflows-3/", "platform": "", "project_url": "https://pypi.org/project/django-xworkflows-3/", "project_urls": {"Download": "http://pypi.python.org/pypi/django-xworkflows-3/", "Homepage": "https://github.com/lethe3000/django_xworkflows"}, "release_url": "https://pypi.org/project/django-xworkflows-3/0.12.3.1/", "requires_dist": ["Django", "xworkflows"], "requires_python": "", "summary": "A django app enabling Django models to use xworkflows. Compatible with django 3", "version": "0.12.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://travis-ci.org/rbarrois/django_xworkflows/\" rel=\"nofollow\"><img alt=\"https://secure.travis-ci.org/rbarrois/django_xworkflows.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ae8bdf1bf28681f554bd959d1f97b995894dbda8/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f72626172726f69732f646a616e676f5f78776f726b666c6f77732e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://django-xworkflows.readthedocs.io/en/latest/changelog.html\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bf63a477f3887b1cd51a4f301981cfcc41663e12/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f5f78776f726b666c6f77732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/django_xworkflows/\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2dbcf350aaf0708f1cb082c4b997f798b787b157/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f646a616e676f5f78776f726b666c6f77732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/django_xworkflows/\" rel=\"nofollow\"><img alt=\"Wheel status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6a06b5adb7e12fae2a96a929fdf934344f5d86d6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f646a616e676f5f78776f726b666c6f77732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/django_xworkflows/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7b6cff8890b5141e2f7e3b7cae8ccbc71b8e107e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f646a616e676f5f78776f726b666c6f77732e737667\"></a>\n<p>Use <a href=\"http://github.com/rbarrois/xworkflows/\" rel=\"nofollow\">XWorkflows</a> along with Django models.</p>\n<p>Django-XWorkflows allow to bind a Django model to a workflow, with a few extra features:</p>\n<ul>\n<li>Auto-save after transitions</li>\n<li>Log each action into the database</li>\n</ul>\n<p>Define a workflow and add it to a model:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_xworkflows</span> <span class=\"kn\">import</span> <span class=\"n\">models</span> <span class=\"k\">as</span> <span class=\"n\">xwf_models</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyWorkflow</span><span class=\"p\">(</span><span class=\"n\">xwf_models</span><span class=\"o\">.</span><span class=\"n\">Workflow</span><span class=\"p\">):</span>\n    <span class=\"n\">states</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"s1\">'new'</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s2\">\"New\"</span><span class=\"p\">)),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'old'</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s2\">\"Old\"</span><span class=\"p\">)),</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">transitions</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"s1\">'get_old'</span><span class=\"p\">,</span> <span class=\"s1\">'new'</span><span class=\"p\">,</span> <span class=\"s1\">'old'</span><span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">initial_state</span> <span class=\"o\">=</span> <span class=\"s1\">'new'</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">xwf_models</span><span class=\"o\">.</span><span class=\"n\">WorkflowEnabled</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n\n    <span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"n\">xwf_models</span><span class=\"o\">.</span><span class=\"n\">StateField</span><span class=\"p\">(</span><span class=\"n\">MyWorkflow</span><span class=\"p\">)</span>\n</pre>\n<p>Use the workflow:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">MyModel</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">state</span>  <span class=\"c1\"># Defaults to the initial_state</span>\n<span class=\"n\">State</span><span class=\"p\">(</span><span class=\"s1\">'new'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Perform a transition</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">get_old</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">state</span>\n<span class=\"n\">State</span><span class=\"p\">(</span><span class=\"s1\">'old'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Object was saved to the database</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">pk</span>\n<span class=\"mi\">1</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Logs were saved to the database</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">xwf_models</span><span class=\"o\">.</span><span class=\"n\">TransitionLog</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"n\">TransitionLog</span><span class=\"p\">(</span><span class=\"n\">MyModel</span><span class=\"p\">:</span> <span class=\"n\">new</span> <span class=\"o\">-&gt;</span> <span class=\"n\">old</span> <span class=\"n\">at</span> <span class=\"mi\">2012</span><span class=\"o\">-</span><span class=\"mi\">04</span><span class=\"o\">-</span><span class=\"mi\">14</span><span class=\"n\">T12</span><span class=\"p\">:</span><span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"o\">+</span><span class=\"mi\">0200</span><span class=\"p\">)]</span>\n</pre>\n<div id=\"links\">\n<h2>Links</h2>\n<ul>\n<li>Package on PyPI: <a href=\"http://pypi.python.org/pypi/django-xworkflows\" rel=\"nofollow\">http://pypi.python.org/pypi/django-xworkflows</a></li>\n<li>Repository and issues on GitHub: <a href=\"http://github.com/rbarrois/django_xworkflows\" rel=\"nofollow\">http://github.com/rbarrois/django_xworkflows</a></li>\n<li>Doc on <a href=\"https://django-xworkflows.readthedocs.io/\" rel=\"nofollow\">https://django-xworkflows.readthedocs.io/</a></li>\n<li>XWorkflows on GitHub: <a href=\"http://github.com/rbarrois/xworkflows\" rel=\"nofollow\">http://github.com/rbarrois/xworkflows</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6754537, "releases": {"0.12.3.1": [{"comment_text": "", "digests": {"md5": "a835be7e8ae421cbb58b654b048b8c8c", "sha256": "4abbdb9cd8167577146347b2af30319585525dd34e7ccadd782c8e0d7d9331ac"}, "downloads": -1, "filename": "django_xworkflows_3-0.12.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a835be7e8ae421cbb58b654b048b8c8c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17512, "upload_time": "2020-03-05T11:06:11", "upload_time_iso_8601": "2020-03-05T11:06:11.866651Z", "url": "https://files.pythonhosted.org/packages/2e/63/ab5b2cc347af1e6b7496166dcdd6dcd66dc3f5f0c840b57553ad23c430ea/django_xworkflows_3-0.12.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da23317fd25f6f01436c3600b608f4e8", "sha256": "6bf53fa5f30b8aaf689d07b6bee4cd4a3447a8565189cb2861c6eeb762a5867c"}, "downloads": -1, "filename": "django_xworkflows_3-0.12.3.1.tar.gz", "has_sig": false, "md5_digest": "da23317fd25f6f01436c3600b608f4e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17300, "upload_time": "2020-03-05T11:06:14", "upload_time_iso_8601": "2020-03-05T11:06:14.705406Z", "url": "https://files.pythonhosted.org/packages/71/b9/72c71dfde9ecfb354f1d66cc9a3c3a6f33d0b846f4dd129dc35a067e67af/django_xworkflows_3-0.12.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a835be7e8ae421cbb58b654b048b8c8c", "sha256": "4abbdb9cd8167577146347b2af30319585525dd34e7ccadd782c8e0d7d9331ac"}, "downloads": -1, "filename": "django_xworkflows_3-0.12.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a835be7e8ae421cbb58b654b048b8c8c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17512, "upload_time": "2020-03-05T11:06:11", "upload_time_iso_8601": "2020-03-05T11:06:11.866651Z", "url": "https://files.pythonhosted.org/packages/2e/63/ab5b2cc347af1e6b7496166dcdd6dcd66dc3f5f0c840b57553ad23c430ea/django_xworkflows_3-0.12.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da23317fd25f6f01436c3600b608f4e8", "sha256": "6bf53fa5f30b8aaf689d07b6bee4cd4a3447a8565189cb2861c6eeb762a5867c"}, "downloads": -1, "filename": "django_xworkflows_3-0.12.3.1.tar.gz", "has_sig": false, "md5_digest": "da23317fd25f6f01436c3600b608f4e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17300, "upload_time": "2020-03-05T11:06:14", "upload_time_iso_8601": "2020-03-05T11:06:14.705406Z", "url": "https://files.pythonhosted.org/packages/71/b9/72c71dfde9ecfb354f1d66cc9a3c3a6f33d0b846f4dd129dc35a067e67af/django_xworkflows_3-0.12.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:47 2020"}