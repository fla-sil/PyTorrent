{"info": {"author": "Maxim Ivanov", "author_email": "ivanovmg@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Programming Language :: Python :: 3.6"], "description": "equator\n#######\n\nSet of tools for comparing complex objects\n\n\nQuickstart\n==========\n\nequator is available on PyPI and can be installed with `pip <https://pip.pypa.io>`_.\n\n.. code-block:: console\n\n    $ pip install equator\n\nAfter installing equator you can use it like any other Python module.\n\nHere is a simple example:\n\n.. code-block:: python\n\n   from equator import equals\n\n   item1 = [\n       {\n           1: [\n               {1: [1, 2]},\n               [1, 2.0001],\n           ],\n       },\n       [3, [4, [5]]],\n   ] \n\n   item2 = [\n       {\n           1: [\n               {1.0001: [1, 2.0001]},\n               [1.0001, 1.9999],\n           ],\n       },\n       [2.9999, [4, [5.002]]],\n   ]\n\n   result = equals.approx(item1, item2, rel_tol=1e-2)\n   assert result\n\nThe function ``approx`` allows one\nto compare approximately objects of various types.\n\nThe motivation to create this function was that ``pytest.approx``\ndoes not allow comparison of the complex objects.\nIn contrast, this function allows one iterate through ``__dict__``\nof arbitrary objects and make use of ``math.isclose``\nwhen encountering numeric types.\n\nTODO\n====\n\nCurrently one may expect issues with sets and ``Decimal``.\n\n\n.. _change-log-label:\n\nChange Log\n==========\n\nVersion History\n---------------\n\n0.0.1\n    * Project created.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ivanovmg/equator", "keywords": "equator", "license": "BSD license", "maintainer": "Maxim Ivanov", "maintainer_email": "ivanovmg@gmail.com", "name": "equator", "package_url": "https://pypi.org/project/equator/", "platform": "", "project_url": "https://pypi.org/project/equator/", "project_urls": {"Homepage": "https://github.com/ivanovmg/equator"}, "release_url": "https://pypi.org/project/equator/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Set of tools for comparing complex objects", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Set of tools for comparing complex objects</p>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>equator is available on PyPI and can be installed with <a href=\"https://pip.pypa.io\" rel=\"nofollow\">pip</a>.</p>\n<pre><span class=\"gp\">$</span> pip install equator\n</pre>\n<p>After installing equator you can use it like any other Python module.</p>\n<p>Here is a simple example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">equator</span> <span class=\"kn\">import</span> <span class=\"n\">equals</span>\n\n<span class=\"n\">item1</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"mi\">1</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]},</span>\n            <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mf\">2.0001</span><span class=\"p\">],</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]]],</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">item2</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"mi\">1</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span><span class=\"mf\">1.0001</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mf\">2.0001</span><span class=\"p\">]},</span>\n            <span class=\"p\">[</span><span class=\"mf\">1.0001</span><span class=\"p\">,</span> <span class=\"mf\">1.9999</span><span class=\"p\">],</span>\n        <span class=\"p\">],</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">[</span><span class=\"mf\">2.9999</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mf\">5.002</span><span class=\"p\">]]],</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">equals</span><span class=\"o\">.</span><span class=\"n\">approx</span><span class=\"p\">(</span><span class=\"n\">item1</span><span class=\"p\">,</span> <span class=\"n\">item2</span><span class=\"p\">,</span> <span class=\"n\">rel_tol</span><span class=\"o\">=</span><span class=\"mf\">1e-2</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">result</span>\n</pre>\n<p>The function <tt>approx</tt> allows one\nto compare approximately objects of various types.</p>\n<p>The motivation to create this function was that <tt>pytest.approx</tt>\ndoes not allow comparison of the complex objects.\nIn contrast, this function allows one iterate through <tt>__dict__</tt>\nof arbitrary objects and make use of <tt>math.isclose</tt>\nwhen encountering numeric types.</p>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<p>Currently one may expect issues with sets and <tt>Decimal</tt>.</p>\n</div>\n<div id=\"change-log\">\n<span id=\"change-log-label\"></span><h2>Change Log</h2>\n<h2 id=\"version-history\"><span class=\"section-subtitle\">Version History</span></h2>\n<dl>\n<dt>0.0.1</dt>\n<dd><ul>\n<li>Project created.</li>\n</ul>\n</dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 7005781, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a4843a58e4939675fa0f82a652f56f27", "sha256": "a42f5ea14a65c1d6681f215a83aa1da1dcd41ce93507b06b68fe9a5f980aa00b"}, "downloads": -1, "filename": "equator-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a4843a58e4939675fa0f82a652f56f27", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3037, "upload_time": "2020-04-12T18:50:29", "upload_time_iso_8601": "2020-04-12T18:50:29.046283Z", "url": "https://files.pythonhosted.org/packages/d0/bb/f566ed918b6986f47aef1450e9073b4c22a17d6f85c0bfe6453c2c0f151d/equator-0.0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a4843a58e4939675fa0f82a652f56f27", "sha256": "a42f5ea14a65c1d6681f215a83aa1da1dcd41ce93507b06b68fe9a5f980aa00b"}, "downloads": -1, "filename": "equator-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a4843a58e4939675fa0f82a652f56f27", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3037, "upload_time": "2020-04-12T18:50:29", "upload_time_iso_8601": "2020-04-12T18:50:29.046283Z", "url": "https://files.pythonhosted.org/packages/d0/bb/f566ed918b6986f47aef1450e9073b4c22a17d6f85c0bfe6453c2c0f151d/equator-0.0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:45:51 2020"}