{"info": {"author": "Suriyan Laohaprapanon, Gaurav Sood", "author_email": "suriyant@gmail.com, gsood07@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "ethnicolr: Predict Race and Ethnicity From Name\n----------------------------------------------------\n\n.. image:: https://travis-ci.org/appeler/ethnicolr.svg?branch=master\n    :target: https://travis-ci.org/appeler/ethnicolr\n.. image:: https://ci.appveyor.com/api/projects/status/u9fe72hn8nnhmaxt?svg=true\n    :target: https://ci.appveyor.com/project/soodoku/ethnicolr-m6u1p\n.. image:: https://img.shields.io/pypi/v/ethnicolr.svg\n    :target: https://pypi.python.org/pypi/ethnicolr\n.. image:: https://anaconda.org/soodoku/ethnicolr/badges/version.svg\n    :target: https://anaconda.org/soodoku/ethnicolr/\n.. image:: https://pepy.tech/badge/ethnicolr\n    :target: https://pepy.tech/project/ethnicolr\n\nWe exploit the US census data, the Florida voting registration data, and \nthe Wikipedia data collected by Skiena and colleagues, to predict race\nand ethnicity based on first and last name or just the last name. The granularity \nat which we predict the race depends on the dataset. For instance, \nSkiena et al.' Wikipedia data is at the ethnic group level, while the \ncensus data we use in the model (the raw data has additional categories of \nNative Americans and Bi-racial) merely categorizes between Non-Hispanic Whites, \nNon-Hispanic Blacks, Asians, and Hispanics.\n\nDIME Race\n-----------\nData on race of all the people in the `DIME data <https://data.stanford.edu/dime>`__ \nis posted `here <http://dx.doi.org/10.7910/DVN/M5K7VR>`__ The underlying python scripts \nare posted `here <https://github.com/appeler/dime_race>`__ \n\nCaveats and Notes\n-----------------------\n\nIf you picked a random individual with last name 'Smith' from the US in 2010  \nand asked us to guess this person's race (measured as crudely as by the census),\nthe best guess would be based on what is available from the aggregated Census file. \nIt is the Bayes Optimal Solution. So what good are last name only predictive models\nfor? A few things---if you want to impute ethnicity at a more granular level,\nguess the race of people in different years (than when the census was conducted \nif some assumptions hold), guess the race of people in different countries (again if some \nassumptions hold), when names are slightly different (again with some assumptions), etc. \nThe big benefit comes from when both the first name and last name is known.\n\nInstall\n----------\n\nWe strongly recommend installing `ethnicolor` inside a Python virtual environment\n(see `venv documentation <https://docs.python.org/3/library/venv.html#creating-virtual-environments>`__)\n\n::\n\n    pip install ethnicolr\n\nOr ::\n   \n   conda install ethnicolr\n\nNote: If you are installing on Windows, Theano installation typically needs admin. privileges on the shell.\n\nGeneral API\n------------------\n\nTo see the available command line options for any function, please type in \n``<function-name> --help``\n\n::\n\n   # census_ln --help\n   usage: census_ln [-h] [-y {2000,2010}] [-o OUTPUT] -l LAST input\n\n   Appends Census columns by last name\n\n   positional arguments:\n     input                 Input file\n\n   optional arguments:\n     -h, --help            show this help message and exit\n     -y {2000,2010}, --year {2000,2010}\n                           Year of Census data (default=2000)\n     -o OUTPUT, --output OUTPUT\n                           Output file with Census data columns\n     -l LAST, --last LAST  Name or index location of column contains the last\n                           name\n\n\nExamples\n----------\n\nTo append census data from 2010 to a `file without column headers <ethnicolr/data/input-without-header.csv>`__ and the first column carries the last name, use ``-l 0``\n\n::\n\n   census_ln -y 2010 -o output-census2010.csv -l 0 input-without-header.csv\n\nTo append census data from 2010 to a `file with column header in the first row <ethnicolr/data/input-with-header.csv>`__, specify the column name carrying last names using the ``-l`` option, keeping the rest the same:\n\n::\n\n   census_ln -y 2010 -o output-census2010.csv -l last_name input-with-header.csv   \n\n\nTo predict race/ethnicity using `Wikipedia full name model <ethnicolr/models/ethnicolr_keras_lstm_wiki_name.ipynb>`__, if the input file doesn't have any column headers, you must using ``-l`` and ``-f`` to specify the index of column carrying the last name and first name respectively (first column has index 0).\n\n::\n\n   pred_wiki_name -o output-wiki-pred-race.csv -l 0 -f 1 input-without-header.csv\n\n\nAnd to predict race/ethnicity using `Wikipedia full name model <ethnicolr/models/ethnicolr_keras_lstm_wiki_name.ipynb>`__ for a file with column headers, you can specify the column name of last name and first name by using ``-l`` and ``-f`` flags respectively.\n\n::\n\n   pred_wiki_name -o output-wiki-pred-race.csv -l last_name -f first_name input-with-header.csv\n\n\nFunctions\n----------\n\nWe expose 6 functions, each of which either take a pandas DataFrame or a CSV. If the CSV doesn't have a header,\nwe make some assumptions about where the data is\n\n-  **census\\_ln**\n\n   -  Input: pandas DataFrame or CSV and a string or list of the name or\n      location of the column containing the last name.\n\n   -  What it does:\n\n      -  Removes extra space.\n      -  For names in the `census file <ethnicolr/data/census>`__, it appends relevant data.\n\n   -  Options:\n\n      -  year: 2000 or 2010\n      -  if no year is given, data from the 2000 census is appended\n\n   -  Output: Appends the following columns to the pandas DataFrame or CSV:\n      pctwhite, pctblack, pctapi, pctaian, pct2prace, pcthispanic\n\n-  **pred\\_census\\_ln**\n\n   -  Input: pandas DataFrame or CSV and string or list of the name or\n      location of the column containing the last name.\n\n   -  What it does:\n\n      -  Removes extra space.\n      -  Uses the `last name census 2000\n         model <ethnicolr/models/ethnicolr_keras_lstm_census2000_ln.ipynb>`__\n         or `last name census 2010\n         model <ethnicolr/models/ethnicolr_keras_lstm_census2010_ln.ipynb>`__\n         to predict the race and ethnicity.\n\n   -  Options:\n\n      -  year: 2000 or 2010\n\n   -  Output: Appends the following columns to the pandas DataFrame or CSV:\n      race (white, black, asian, or hispanic), api (percentage chance asian),\n      black, hispanic, white.\n\n-  **pred\\_wiki\\_ln**\n\n   -  Input: pandas DataFrame or CSV and string or list of the name or\n      location of the column containing the last name.\n\n   -  What it does:\n\n      -  Removes extra space.\n      -  Uses the `last name wiki model <ethnicolr/models/ethnicolr_keras_lstm_wiki_ln.ipynb>`__\n         to predict the race and ethnicity.\n\n   -  Output: Appends the following columns to the pandas DataFrame or CSV:\n      race (categorical variable --- category with the highest probability), \n      \"Asian,GreaterEastAsian,EastAsian\", \"Asian,GreaterEastAsian,Japanese\", \n      \"Asian,IndianSubContinent\", \"GreaterAfrican,Africans\", \"GreaterAfrican,Muslim\",\n      \"GreaterEuropean,British\",\"GreaterEuropean,EastEuropean\", \n      \"GreaterEuropean,Jewish\",\"GreaterEuropean,WestEuropean,French\",\n      \"GreaterEuropean,WestEuropean,Germanic\",\"GreaterEuropean,WestEuropean,Hispanic\",\n      \"GreaterEuropean,WestEuropean,Italian\",\"GreaterEuropean,WestEuropean,Nordic\"\n\n-  **pred\\_wiki\\_name**\n\n   -  Input: pandas DataFrame or CSV and string or list containing the name or\n      location of the column containing the first name, last name, middle\n      name, and suffix, if there. The first name and last name columns are\n      required. If no middle name of suffix columns are there, it is\n      assumed that there are no middle names or suffixes.\n\n   -  What it does:\n\n      -  Removes extra space.\n      -  Uses the `full name wiki\n         model <ethnicolr/models/ethnicolr_keras_lstm_wiki_name.ipynb>`__ to predict the\n         race and ethnicity.\n\n   -  Output: Appends the following columns to the pandas DataFrame or CSV:\n      race (categorical variable---category with the highest probability), \n      \"Asian,GreaterEastAsian,EastAsian\", \"Asian,GreaterEastAsian,Japanese\", \n      \"Asian,IndianSubContinent\", \"GreaterAfrican,Africans\", \"GreaterAfrican,Muslim\",\n      \"GreaterEuropean,British\",\"GreaterEuropean,EastEuropean\", \n      \"GreaterEuropean,Jewish\",\"GreaterEuropean,WestEuropean,French\",\n      \"GreaterEuropean,WestEuropean,Germanic\",\"GreaterEuropean,WestEuropean,Hispanic\",\n      \"GreaterEuropean,WestEuropean,Italian\",\"GreaterEuropean,WestEuropean,Nordic\"\n\n-  **pred\\_fl\\_reg\\_ln**\n\n   -  Input: pandas DataFrame or CSV and string or list of the name or location\n      of the column containing the last name.\n\n   -  What it does?:\n\n      -  Removes extra space, if there.\n      -  Uses the `last name FL registration\n         model <ethnicolr/models/ethnicolr_keras_lstm_fl_voter_ln.ipynb>`__ to predict the race\n         and ethnicity.\n\n   -  Output: Appends the following columns to the pandas DataFrame or CSV:\n      race (white, black, asian, or hispanic), asian (percentage chance Asian),\n      hispanic, nh_black, nh_white\n\n-  **pred\\_fl\\_reg\\_name**\n\n   -  Input: pandas DataFrame or CSV and string or list containing the name or\n      location of the column containing the first name, last name, middle\n      name, and suffix, if there. The first name and last name columns are\n      required. If no middle name of suffix columns are there, it is\n      assumed that there are no middle names or suffixes.\n\n   -  What it does:\n\n      -  Removes extra space.\n      -  Uses the `full name wiki\n         model <ethnicolr/models/ethnicolr_keras_lstm_fl_voter_name.ipynb>`__ to predict the\n         race and ethnicity.\n\n   -  Output: Appends the following columns to the pandas DataFrame or CSV:\n      race (white, black, asian, or hispanic), asian (percentage chance Asian),\n      hispanic, nh_black, nh_white\n\nUsing ethnicolr\n----------------\n\n::\n\n   >>> import pandas as pd\n\n   >>> from ethnicolr import census_ln, pred_census_ln\n   Using TensorFlow backend.\n\n   >>> names = [{'name': 'smith'},\n   ...         {'name': 'zhang'},\n   ...         {'name': 'jackson'}]\n\n   >>> df = pd.DataFrame(names)\n\n   >>> df\n         name\n   0    smith\n   1    zhang\n   2  jackson\n\n   >>> census_ln(df, 'name')\n         name pctwhite pctblack pctapi pctaian pct2prace pcthispanic\n   0    smith    73.35    22.22   0.40    0.85      1.63        1.56\n   1    zhang     0.61     0.09  98.16    0.02      0.96        0.16\n   2  jackson    41.93    53.02   0.31    1.04      2.18        1.53\n\n   >>> census_ln(df, 'name', 2010)\n         name   race pctwhite pctblack pctapi pctaian pct2prace pcthispanic\n   0    smith  white     70.9    23.11    0.5    0.89      2.19         2.4\n   1    zhang    api     0.99     0.16  98.06    0.02      0.62        0.15\n   2  jackson  black    39.89    53.04   0.39    1.06      3.12         2.5\n\n   >>> pred_census_ln(df, 'name')\n         name   race       api     black  hispanic     white\n   0    smith  white  0.002019  0.247235  0.014485  0.736260\n   1    zhang    api  0.997807  0.000149  0.000470  0.001574\n   2  jackson  black  0.002797  0.528193  0.014605  0.454405\n\n   >>> help(pred_census_ln)\n   Help on function pred_census_ln in module ethnicolr.pred_census_ln:\n\n   pred_census_ln(df, namecol, year=2000)\n       Predict the race/ethnicity by the last name using Census model.\n\n       Using the Census last name model to predict the race/ethnicity of the input\n       DataFrame.\n\n       Args:\n           df (:obj:`DataFrame`): Pandas DataFrame containing the last name\n               column.\n           namecol (str or int): Column's name or location of the name in\n               DataFrame.\n           year (int): The year of Census model to be used. (2000 or 2010)\n               (default is 2000)\n\n       Returns:\n           DataFrame: Pandas DataFrame with additional columns:\n               - `race` the predict result\n               - `black`, `api`, `white`, `hispanic` are the prediction\n                   probability.\n\nApplication\n--------------\n\nTo illustrate how the package can be used, we impute the race of the campaign contributors recorded by FEC for the years 2000 and 2010 and tally campaign contributions by race.\n\n- `Contrib 2000/2010 using census_ln <ethnicolr/examples/ethnicolr_app_contrib20xx-census_ln.ipynb>`__\n- `Contrib 2000/2010 using pred_census_ln <ethnicolr/examples/ethnicolr_app_contrib20xx.ipynb>`__\n- `Contrib 2000/2010 using pred_fl_reg_name <ethnicolr/examples/ethnicolr_app_contrib20xx-fl_reg.ipynb>`__\n\nData on race of all the people in the `DIME data <https://data.stanford.edu/dime>`__ is posted `here <http://dx.doi.org/10.7910/DVN/M5K7VR>`__ The underlying python scripts are posted `here <https://github.com/appeler/dime_race>`__ \n\nData\n----------\n\nIn particular, we utilize the last-name--race data from the `2000\ncensus <http://www.census.gov/topics/population/genealogy/data/2000_surnames.html>`__\nand `2010\ncensus <http://www.census.gov/topics/population/genealogy/data/2010_surnames.html>`__,\nthe `Wikipedia data <ethnicolr/data/wiki/>`__ collected by Skiena and colleagues,\nand the Florida voter registration data from early 2017.\n\n-  `Census <ethnicolr/data/census/>`__\n-  `The Wikipedia dataset <ethnicolr/data/wiki/>`__\n-  `Florida voter registration database <http://dx.doi.org/10.7910/DVN/UBIG3F>`__\n\nAuthors\n----------\n\nSuriyan Laohaprapanon and Gaurav Sood\n\nContributor Code of Conduct\n---------------------------------\n\nThe project welcomes contributions from everyone! In fact, it depends on\nit. To maintain this welcoming atmosphere, and to collaborate in a fun\nand productive way, we expect contributors to the project to abide by\nthe `Contributor Code of\nConduct <http://contributor-covenant.org/version/1/0/0/>`__.\n\nLicense\n----------\n\nThe package is released under the `MIT\nLicense <https://opensource.org/licenses/MIT>`__.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/appeler/ethnicolr", "keywords": "race ethnicity names", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ethnicolr", "package_url": "https://pypi.org/project/ethnicolr/", "platform": "", "project_url": "https://pypi.org/project/ethnicolr/", "project_urls": {"Homepage": "https://github.com/appeler/ethnicolr"}, "release_url": "https://pypi.org/project/ethnicolr/0.3.0/", "requires_dist": null, "requires_python": "", "summary": "Predict Race/Ethnicity Based on Name", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"ethnicolr-predict-race-and-ethnicity-from-name\">\n<h2>ethnicolr: Predict Race and Ethnicity From Name</h2>\n<a href=\"https://travis-ci.org/appeler/ethnicolr\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/appeler/ethnicolr.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/edf1eb316eea2069edf7291fe343402a6d81fb20/68747470733a2f2f7472617669732d63692e6f72672f617070656c65722f6574686e69636f6c722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/soodoku/ethnicolr-m6u1p\" rel=\"nofollow\"><img alt=\"https://ci.appveyor.com/api/projects/status/u9fe72hn8nnhmaxt?svg=true\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3210a1614b0ee8340182e7c9bb161c51c7736ad5/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f753966653732686e386e6e686d6178743f7376673d74727565\"></a>\n<a href=\"https://pypi.python.org/pypi/ethnicolr\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/ethnicolr.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eebf26d008ebff7d6854595c97a0e70959778eb9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6574686e69636f6c722e737667\"></a>\n<a href=\"https://anaconda.org/soodoku/ethnicolr/\" rel=\"nofollow\"><img alt=\"https://anaconda.org/soodoku/ethnicolr/badges/version.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/de9605733d85eaf05c92987145f75f45b2806400/68747470733a2f2f616e61636f6e64612e6f72672f736f6f646f6b752f6574686e69636f6c722f6261646765732f76657273696f6e2e737667\"></a>\n<a href=\"https://pepy.tech/project/ethnicolr\" rel=\"nofollow\"><img alt=\"https://pepy.tech/badge/ethnicolr\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b4a3a37f7846de58303524d505b00908081d0765/68747470733a2f2f706570792e746563682f62616467652f6574686e69636f6c72\"></a>\n<p>We exploit the US census data, the Florida voting registration data, and\nthe Wikipedia data collected by Skiena and colleagues, to predict race\nand ethnicity based on first and last name or just the last name. The granularity\nat which we predict the race depends on the dataset. For instance,\nSkiena et al.\u2019 Wikipedia data is at the ethnic group level, while the\ncensus data we use in the model (the raw data has additional categories of\nNative Americans and Bi-racial) merely categorizes between Non-Hispanic Whites,\nNon-Hispanic Blacks, Asians, and Hispanics.</p>\n</div>\n<div id=\"dime-race\">\n<h2>DIME Race</h2>\n<p>Data on race of all the people in the <a href=\"https://data.stanford.edu/dime\" rel=\"nofollow\">DIME data</a>\nis posted <a href=\"http://dx.doi.org/10.7910/DVN/M5K7VR\" rel=\"nofollow\">here</a> The underlying python scripts\nare posted <a href=\"https://github.com/appeler/dime_race\" rel=\"nofollow\">here</a></p>\n</div>\n<div id=\"caveats-and-notes\">\n<h2>Caveats and Notes</h2>\n<p>If you picked a random individual with last name \u2018Smith\u2019 from the US in 2010\nand asked us to guess this person\u2019s race (measured as crudely as by the census),\nthe best guess would be based on what is available from the aggregated Census file.\nIt is the Bayes Optimal Solution. So what good are last name only predictive models\nfor? A few things\u2014if you want to impute ethnicity at a more granular level,\nguess the race of people in different years (than when the census was conducted\nif some assumptions hold), guess the race of people in different countries (again if some\nassumptions hold), when names are slightly different (again with some assumptions), etc.\nThe big benefit comes from when both the first name and last name is known.</p>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>We strongly recommend installing <cite>ethnicolor</cite> inside a Python virtual environment\n(see <a href=\"https://docs.python.org/3/library/venv.html#creating-virtual-environments\" rel=\"nofollow\">venv documentation</a>)</p>\n<pre>pip install ethnicolr\n</pre>\n<p>Or</p>\n<pre>conda install ethnicolr\n</pre>\n<p>Note: If you are installing on Windows, Theano installation typically needs admin. privileges on the shell.</p>\n</div>\n<div id=\"general-api\">\n<h2>General API</h2>\n<p>To see the available command line options for any function, please type in\n<tt><span class=\"pre\">&lt;function-name&gt;</span> <span class=\"pre\">--help</span></tt></p>\n<pre># census_ln --help\nusage: census_ln [-h] [-y {2000,2010}] [-o OUTPUT] -l LAST input\n\nAppends Census columns by last name\n\npositional arguments:\n  input                 Input file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -y {2000,2010}, --year {2000,2010}\n                        Year of Census data (default=2000)\n  -o OUTPUT, --output OUTPUT\n                        Output file with Census data columns\n  -l LAST, --last LAST  Name or index location of column contains the last\n                        name\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>To append census data from 2010 to a <a href=\"ethnicolr/data/input-without-header.csv\" rel=\"nofollow\">file without column headers</a> and the first column carries the last name, use <tt><span class=\"pre\">-l</span> 0</tt></p>\n<pre>census_ln -y 2010 -o output-census2010.csv -l 0 input-without-header.csv\n</pre>\n<p>To append census data from 2010 to a <a href=\"ethnicolr/data/input-with-header.csv\" rel=\"nofollow\">file with column header in the first row</a>, specify the column name carrying last names using the <tt><span class=\"pre\">-l</span></tt> option, keeping the rest the same:</p>\n<pre>census_ln -y 2010 -o output-census2010.csv -l last_name input-with-header.csv\n</pre>\n<p>To predict race/ethnicity using <a href=\"ethnicolr/models/ethnicolr_keras_lstm_wiki_name.ipynb\" rel=\"nofollow\">Wikipedia full name model</a>, if the input file doesn\u2019t have any column headers, you must using <tt><span class=\"pre\">-l</span></tt> and <tt><span class=\"pre\">-f</span></tt> to specify the index of column carrying the last name and first name respectively (first column has index 0).</p>\n<pre>pred_wiki_name -o output-wiki-pred-race.csv -l 0 -f 1 input-without-header.csv\n</pre>\n<p>And to predict race/ethnicity using <a href=\"ethnicolr/models/ethnicolr_keras_lstm_wiki_name.ipynb\" rel=\"nofollow\">Wikipedia full name model</a> for a file with column headers, you can specify the column name of last name and first name by using <tt><span class=\"pre\">-l</span></tt> and <tt><span class=\"pre\">-f</span></tt> flags respectively.</p>\n<pre>pred_wiki_name -o output-wiki-pred-race.csv -l last_name -f first_name input-with-header.csv\n</pre>\n</div>\n<div id=\"functions\">\n<h2>Functions</h2>\n<p>We expose 6 functions, each of which either take a pandas DataFrame or a CSV. If the CSV doesn\u2019t have a header,\nwe make some assumptions about where the data is</p>\n<ul>\n<li><strong>census_ln</strong><ul>\n<li>Input: pandas DataFrame or CSV and a string or list of the name or\nlocation of the column containing the last name.</li>\n<li>What it does:<ul>\n<li>Removes extra space.</li>\n<li>For names in the <a href=\"ethnicolr/data/census\" rel=\"nofollow\">census file</a>, it appends relevant data.</li>\n</ul>\n</li>\n<li>Options:<ul>\n<li>year: 2000 or 2010</li>\n<li>if no year is given, data from the 2000 census is appended</li>\n</ul>\n</li>\n<li>Output: Appends the following columns to the pandas DataFrame or CSV:\npctwhite, pctblack, pctapi, pctaian, pct2prace, pcthispanic</li>\n</ul>\n</li>\n<li><strong>pred_census_ln</strong><ul>\n<li>Input: pandas DataFrame or CSV and string or list of the name or\nlocation of the column containing the last name.</li>\n<li>What it does:<ul>\n<li>Removes extra space.</li>\n<li>Uses the <a href=\"ethnicolr/models/ethnicolr_keras_lstm_census2000_ln.ipynb\" rel=\"nofollow\">last name census 2000\nmodel</a>\nor <a href=\"ethnicolr/models/ethnicolr_keras_lstm_census2010_ln.ipynb\" rel=\"nofollow\">last name census 2010\nmodel</a>\nto predict the race and ethnicity.</li>\n</ul>\n</li>\n<li>Options:<ul>\n<li>year: 2000 or 2010</li>\n</ul>\n</li>\n<li>Output: Appends the following columns to the pandas DataFrame or CSV:\nrace (white, black, asian, or hispanic), api (percentage chance asian),\nblack, hispanic, white.</li>\n</ul>\n</li>\n<li><strong>pred_wiki_ln</strong><ul>\n<li>Input: pandas DataFrame or CSV and string or list of the name or\nlocation of the column containing the last name.</li>\n<li>What it does:<ul>\n<li>Removes extra space.</li>\n<li>Uses the <a href=\"ethnicolr/models/ethnicolr_keras_lstm_wiki_ln.ipynb\" rel=\"nofollow\">last name wiki model</a>\nto predict the race and ethnicity.</li>\n</ul>\n</li>\n<li>Output: Appends the following columns to the pandas DataFrame or CSV:\nrace (categorical variable \u2014 category with the highest probability),\n\u201cAsian,GreaterEastAsian,EastAsian\u201d, \u201cAsian,GreaterEastAsian,Japanese\u201d,\n\u201cAsian,IndianSubContinent\u201d, \u201cGreaterAfrican,Africans\u201d, \u201cGreaterAfrican,Muslim\u201d,\n\u201cGreaterEuropean,British\u201d,\u201dGreaterEuropean,EastEuropean\u201d,\n\u201cGreaterEuropean,Jewish\u201d,\u201dGreaterEuropean,WestEuropean,French\u201d,\n\u201cGreaterEuropean,WestEuropean,Germanic\u201d,\u201dGreaterEuropean,WestEuropean,Hispanic\u201d,\n\u201cGreaterEuropean,WestEuropean,Italian\u201d,\u201dGreaterEuropean,WestEuropean,Nordic\u201d</li>\n</ul>\n</li>\n<li><strong>pred_wiki_name</strong><ul>\n<li>Input: pandas DataFrame or CSV and string or list containing the name or\nlocation of the column containing the first name, last name, middle\nname, and suffix, if there. The first name and last name columns are\nrequired. If no middle name of suffix columns are there, it is\nassumed that there are no middle names or suffixes.</li>\n<li>What it does:<ul>\n<li>Removes extra space.</li>\n<li>Uses the <a href=\"ethnicolr/models/ethnicolr_keras_lstm_wiki_name.ipynb\" rel=\"nofollow\">full name wiki\nmodel</a> to predict the\nrace and ethnicity.</li>\n</ul>\n</li>\n<li>Output: Appends the following columns to the pandas DataFrame or CSV:\nrace (categorical variable\u2014category with the highest probability),\n\u201cAsian,GreaterEastAsian,EastAsian\u201d, \u201cAsian,GreaterEastAsian,Japanese\u201d,\n\u201cAsian,IndianSubContinent\u201d, \u201cGreaterAfrican,Africans\u201d, \u201cGreaterAfrican,Muslim\u201d,\n\u201cGreaterEuropean,British\u201d,\u201dGreaterEuropean,EastEuropean\u201d,\n\u201cGreaterEuropean,Jewish\u201d,\u201dGreaterEuropean,WestEuropean,French\u201d,\n\u201cGreaterEuropean,WestEuropean,Germanic\u201d,\u201dGreaterEuropean,WestEuropean,Hispanic\u201d,\n\u201cGreaterEuropean,WestEuropean,Italian\u201d,\u201dGreaterEuropean,WestEuropean,Nordic\u201d</li>\n</ul>\n</li>\n<li><strong>pred_fl_reg_ln</strong><ul>\n<li>Input: pandas DataFrame or CSV and string or list of the name or location\nof the column containing the last name.</li>\n<li>What it does?:<ul>\n<li>Removes extra space, if there.</li>\n<li>Uses the <a href=\"ethnicolr/models/ethnicolr_keras_lstm_fl_voter_ln.ipynb\" rel=\"nofollow\">last name FL registration\nmodel</a> to predict the race\nand ethnicity.</li>\n</ul>\n</li>\n<li>Output: Appends the following columns to the pandas DataFrame or CSV:\nrace (white, black, asian, or hispanic), asian (percentage chance Asian),\nhispanic, nh_black, nh_white</li>\n</ul>\n</li>\n<li><strong>pred_fl_reg_name</strong><ul>\n<li>Input: pandas DataFrame or CSV and string or list containing the name or\nlocation of the column containing the first name, last name, middle\nname, and suffix, if there. The first name and last name columns are\nrequired. If no middle name of suffix columns are there, it is\nassumed that there are no middle names or suffixes.</li>\n<li>What it does:<ul>\n<li>Removes extra space.</li>\n<li>Uses the <a href=\"ethnicolr/models/ethnicolr_keras_lstm_fl_voter_name.ipynb\" rel=\"nofollow\">full name wiki\nmodel</a> to predict the\nrace and ethnicity.</li>\n</ul>\n</li>\n<li>Output: Appends the following columns to the pandas DataFrame or CSV:\nrace (white, black, asian, or hispanic), asian (percentage chance Asian),\nhispanic, nh_black, nh_white</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"using-ethnicolr\">\n<h2>Using ethnicolr</h2>\n<pre>&gt;&gt;&gt; import pandas as pd\n\n&gt;&gt;&gt; from ethnicolr import census_ln, pred_census_ln\nUsing TensorFlow backend.\n\n&gt;&gt;&gt; names = [{'name': 'smith'},\n...         {'name': 'zhang'},\n...         {'name': 'jackson'}]\n\n&gt;&gt;&gt; df = pd.DataFrame(names)\n\n&gt;&gt;&gt; df\n      name\n0    smith\n1    zhang\n2  jackson\n\n&gt;&gt;&gt; census_ln(df, 'name')\n      name pctwhite pctblack pctapi pctaian pct2prace pcthispanic\n0    smith    73.35    22.22   0.40    0.85      1.63        1.56\n1    zhang     0.61     0.09  98.16    0.02      0.96        0.16\n2  jackson    41.93    53.02   0.31    1.04      2.18        1.53\n\n&gt;&gt;&gt; census_ln(df, 'name', 2010)\n      name   race pctwhite pctblack pctapi pctaian pct2prace pcthispanic\n0    smith  white     70.9    23.11    0.5    0.89      2.19         2.4\n1    zhang    api     0.99     0.16  98.06    0.02      0.62        0.15\n2  jackson  black    39.89    53.04   0.39    1.06      3.12         2.5\n\n&gt;&gt;&gt; pred_census_ln(df, 'name')\n      name   race       api     black  hispanic     white\n0    smith  white  0.002019  0.247235  0.014485  0.736260\n1    zhang    api  0.997807  0.000149  0.000470  0.001574\n2  jackson  black  0.002797  0.528193  0.014605  0.454405\n\n&gt;&gt;&gt; help(pred_census_ln)\nHelp on function pred_census_ln in module ethnicolr.pred_census_ln:\n\npred_census_ln(df, namecol, year=2000)\n    Predict the race/ethnicity by the last name using Census model.\n\n    Using the Census last name model to predict the race/ethnicity of the input\n    DataFrame.\n\n    Args:\n        df (:obj:`DataFrame`): Pandas DataFrame containing the last name\n            column.\n        namecol (str or int): Column's name or location of the name in\n            DataFrame.\n        year (int): The year of Census model to be used. (2000 or 2010)\n            (default is 2000)\n\n    Returns:\n        DataFrame: Pandas DataFrame with additional columns:\n            - `race` the predict result\n            - `black`, `api`, `white`, `hispanic` are the prediction\n                probability.\n</pre>\n</div>\n<div id=\"application\">\n<h2>Application</h2>\n<p>To illustrate how the package can be used, we impute the race of the campaign contributors recorded by FEC for the years 2000 and 2010 and tally campaign contributions by race.</p>\n<ul>\n<li><a href=\"ethnicolr/examples/ethnicolr_app_contrib20xx-census_ln.ipynb\" rel=\"nofollow\">Contrib 2000/2010 using census_ln</a></li>\n<li><a href=\"ethnicolr/examples/ethnicolr_app_contrib20xx.ipynb\" rel=\"nofollow\">Contrib 2000/2010 using pred_census_ln</a></li>\n<li><a href=\"ethnicolr/examples/ethnicolr_app_contrib20xx-fl_reg.ipynb\" rel=\"nofollow\">Contrib 2000/2010 using pred_fl_reg_name</a></li>\n</ul>\n<p>Data on race of all the people in the <a href=\"https://data.stanford.edu/dime\" rel=\"nofollow\">DIME data</a> is posted <a href=\"http://dx.doi.org/10.7910/DVN/M5K7VR\" rel=\"nofollow\">here</a> The underlying python scripts are posted <a href=\"https://github.com/appeler/dime_race\" rel=\"nofollow\">here</a></p>\n</div>\n<div id=\"data\">\n<h2>Data</h2>\n<p>In particular, we utilize the last-name\u2013race data from the <a href=\"http://www.census.gov/topics/population/genealogy/data/2000_surnames.html\" rel=\"nofollow\">2000\ncensus</a>\nand <a href=\"http://www.census.gov/topics/population/genealogy/data/2010_surnames.html\" rel=\"nofollow\">2010\ncensus</a>,\nthe <a href=\"ethnicolr/data/wiki/\" rel=\"nofollow\">Wikipedia data</a> collected by Skiena and colleagues,\nand the Florida voter registration data from early 2017.</p>\n<ul>\n<li><a href=\"ethnicolr/data/census/\" rel=\"nofollow\">Census</a></li>\n<li><a href=\"ethnicolr/data/wiki/\" rel=\"nofollow\">The Wikipedia dataset</a></li>\n<li><a href=\"http://dx.doi.org/10.7910/DVN/UBIG3F\" rel=\"nofollow\">Florida voter registration database</a></li>\n</ul>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<p>Suriyan Laohaprapanon and Gaurav Sood</p>\n</div>\n<div id=\"contributor-code-of-conduct\">\n<h2>Contributor Code of Conduct</h2>\n<p>The project welcomes contributions from everyone! In fact, it depends on\nit. To maintain this welcoming atmosphere, and to collaborate in a fun\nand productive way, we expect contributors to the project to abide by\nthe <a href=\"http://contributor-covenant.org/version/1/0/0/\" rel=\"nofollow\">Contributor Code of\nConduct</a>.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The package is released under the <a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\">MIT\nLicense</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6656349, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "b0e6704274220003d349b65efd66827c", "sha256": "15002c6fc4e8ffbebe6f1de0e654e74305f4a01f597befa5951e7bb7f32dddff"}, "downloads": -1, "filename": "ethnicolr-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b0e6704274220003d349b65efd66827c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17146791, "upload_time": "2017-05-29T04:58:47", "upload_time_iso_8601": "2017-05-29T04:58:47.803699Z", "url": "https://files.pythonhosted.org/packages/64/34/26492694a2dab13c4fab12c12daabffff14c64b2bb5a080c3c9fbd7b11fa/ethnicolr-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "0c678deb2f722eec01ce5aa8b370f73e", "sha256": "7c000de0502b162076cec8c0c29b7cccd1f2af28e0e5677c6a8a8569d8725a85"}, "downloads": -1, "filename": "ethnicolr-0.1.3.tar.gz", "has_sig": false, "md5_digest": "0c678deb2f722eec01ce5aa8b370f73e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17146838, "upload_time": "2017-09-17T11:03:22", "upload_time_iso_8601": "2017-09-17T11:03:22.513964Z", "url": "https://files.pythonhosted.org/packages/f8/89/0896f10f77a37be9b1b5e8ee2cc111c9977aa5d6f6573f2898e07dca975b/ethnicolr-0.1.3.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "b96b89065b7301cbee9161a07d2cb626", "sha256": "35da754a3fa323322c1e27243b4e9b92a5552df21c779fd5b8b45c4ab42ecec9"}, "downloads": -1, "filename": "ethnicolr-0.1.5.tar.gz", "has_sig": false, "md5_digest": "b96b89065b7301cbee9161a07d2cb626", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17155755, "upload_time": "2018-02-07T14:57:58", "upload_time_iso_8601": "2018-02-07T14:57:58.919968Z", "url": "https://files.pythonhosted.org/packages/3d/36/f2c938835c821d3ea7d1c0fc7e50341f5784e133eb14b8a010e825d31093/ethnicolr-0.1.5.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "554ec1d0b0a2fd26e54d6d69faeef85a", "sha256": "1372dfc726f389bcb2f3fa5cd00f72cd4a1d115b9e2436982e8a411cbf58b183"}, "downloads": -1, "filename": "ethnicolr-0.1.7.tar.gz", "has_sig": false, "md5_digest": "554ec1d0b0a2fd26e54d6d69faeef85a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16944791, "upload_time": "2018-05-07T14:18:50", "upload_time_iso_8601": "2018-05-07T14:18:50.052634Z", "url": "https://files.pythonhosted.org/packages/01/21/9f975639aa45c527cdca801e14d234f715c507d0559f12f144b87813e31e/ethnicolr-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "fd2dab3b638acaba85623af6b5998088", "sha256": "3f932acf5b62f8e1684509d58c411360cb60023cd539eaf251304e0fcd38c996"}, "downloads": -1, "filename": "ethnicolr-0.1.8.tar.gz", "has_sig": false, "md5_digest": "fd2dab3b638acaba85623af6b5998088", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25296448, "upload_time": "2018-11-02T08:19:56", "upload_time_iso_8601": "2018-11-02T08:19:56.554278Z", "url": "https://files.pythonhosted.org/packages/b4/3d/c5aa889a6d1938f09138b87297c255505226ee48d7930d3ea5cf4368ccb0/ethnicolr-0.1.8.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "a8e712579e23cc01c400b37738f7cbe5", "sha256": "c62ae6c0e168fa07da3ff959a98cf507a28cfcc3b2b03ff759350aa365030e7a"}, "downloads": -1, "filename": "ethnicolr-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a8e712579e23cc01c400b37738f7cbe5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25296695, "upload_time": "2018-11-09T14:59:06", "upload_time_iso_8601": "2018-11-09T14:59:06.088010Z", "url": "https://files.pythonhosted.org/packages/97/ec/ed4d5930059c77c0bab4d101580691d137b5b891020ae5a2931c89983a19/ethnicolr-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "0bc1f64163b5efca9232464468345bfa", "sha256": "17ab4e287476d37705c9b8b072cfb2cc40025eb340230772981fcebb042a9563"}, "downloads": -1, "filename": "ethnicolr-0.2.1.tar.gz", "has_sig": false, "md5_digest": "0bc1f64163b5efca9232464468345bfa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25296563, "upload_time": "2019-06-26T13:17:40", "upload_time_iso_8601": "2019-06-26T13:17:40.929898Z", "url": "https://files.pythonhosted.org/packages/0a/92/547262319b2695300275f063b1d3a189263b5f9679544b0d89f5beaa62a2/ethnicolr-0.2.1.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "fbdac820d5d2b728fd17ec5fd424c389", "sha256": "a3e0802f05d50ee69712ac6a49be5c9b5fdeeced9df4dcb753ea3b27c8c4660e"}, "downloads": -1, "filename": "ethnicolr-0.2.4.tar.gz", "has_sig": false, "md5_digest": "fbdac820d5d2b728fd17ec5fd424c389", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25296572, "upload_time": "2019-09-21T03:53:59", "upload_time_iso_8601": "2019-09-21T03:53:59.228327Z", "url": "https://files.pythonhosted.org/packages/f4/0c/e91e33a93c97a216e0ee9c7b795d26f3718730301b40adffd018a979ae50/ethnicolr-0.2.4.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "e3d49fc2186f4759fc52baff15cab43f", "sha256": "c67b5f362f082733f9863c5e482363592bf57d7ec1d83839bc64e90001015998"}, "downloads": -1, "filename": "ethnicolr-0.3.0.tar.gz", "has_sig": false, "md5_digest": "e3d49fc2186f4759fc52baff15cab43f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25296612, "upload_time": "2019-11-05T13:14:26", "upload_time_iso_8601": "2019-11-05T13:14:26.464419Z", "url": "https://files.pythonhosted.org/packages/51/35/932d531aaf8ea933de62ea52ff0d300028bd9eb33a54caa42512efc35a8e/ethnicolr-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e3d49fc2186f4759fc52baff15cab43f", "sha256": "c67b5f362f082733f9863c5e482363592bf57d7ec1d83839bc64e90001015998"}, "downloads": -1, "filename": "ethnicolr-0.3.0.tar.gz", "has_sig": false, "md5_digest": "e3d49fc2186f4759fc52baff15cab43f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25296612, "upload_time": "2019-11-05T13:14:26", "upload_time_iso_8601": "2019-11-05T13:14:26.464419Z", "url": "https://files.pythonhosted.org/packages/51/35/932d531aaf8ea933de62ea52ff0d300028bd9eb33a54caa42512efc35a8e/ethnicolr-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:26 2020"}