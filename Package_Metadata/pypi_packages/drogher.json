{"info": {"author": "Jason Bittel", "author_email": "jason.bittel@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "drogher\n=======\n\nIdentify shippers and valid tracking numbers from package barcodes.\n\nA package barcode string is tested against known shipper barcode types, matching the format and calculating\nchecksum validity to identify the type provided. The module supports these barcode formats:\n\n   * DHL\n   * FedEx Express\n   * FedEx Ground \"96\"\n   * OnTrac\n   * UPS\n   * USPS IMpb\n   * USPS UPU S10\n   * USPS 20\n\n**Note:** For some shippers the package barcode is the same as the tracking number, while for others the tracking\nnumber is a subset of the barcode. Inputting a tracking number instead of a barcode will work in some cases but\nnot others.\n\nUsage\n-----\n\nBegin by importing the Drogher module::\n\n   >>> import drogher\n\nNow, call the ``barcode`` function with a package barcode string::\n\n   >>> package = drogher.barcode('1Z999AA10123456784')\n\nThat returns a ``Package`` subclass containing some useful information::\n\n   >>> package.barcode\n   '1Z999AA10123456784'\n   >>> package.shipper\n   'UPS'\n   >>> package.tracking_number\n   '1Z999AA10123456784'\n\nWe can also ensure the package is valid, which tells us the barcode matched an expected format and the\ncalculated checksum matches the check digit::\n\n   >>> package.is_valid\n   True\n\nIf a barcode cannot be matched with a shipper, the class does not validate and the shipper is ``None``::\n\n   >>> package = drogher.barcode('123456')\n   >>> package.is_valid\n   False\n   >>> package.shipper\n   None\n\nFor some shippers, the barcode is not the same as the tracking number::\n\n   >>> package = drogher.barcode('420221539101026837331000039521')\n   >>> package.barcode\n   '420221539101026837331000039521'\n   >>> package.tracking_number\n   '9101026837331000039521'\n   >>> package.shipper\n   'USPS'\n\nChangelog\n---------\n\nVersion 0.0.2\n\n   * Improved pattern match for USPS IMpb barcodes\n   * Added support for 20 character USPS barcodes\n\nVersion 0.0.1\n\n   * Initial release", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jbittel/drogher", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "drogher", "package_url": "https://pypi.org/project/drogher/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/drogher/", "project_urls": {"Homepage": "https://github.com/jbittel/drogher"}, "release_url": "https://pypi.org/project/drogher/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Identify shippers and valid tracking numbers from package barcodes", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Identify shippers and valid tracking numbers from package barcodes.</p>\n<p>A package barcode string is tested against known shipper barcode types, matching the format and calculating\nchecksum validity to identify the type provided. The module supports these barcode formats:</p>\n<blockquote>\n<ul>\n<li>DHL</li>\n<li>FedEx Express</li>\n<li>FedEx Ground \u201c96\u201d</li>\n<li>OnTrac</li>\n<li>UPS</li>\n<li>USPS IMpb</li>\n<li>USPS UPU S10</li>\n<li>USPS 20</li>\n</ul>\n</blockquote>\n<p><strong>Note:</strong> For some shippers the package barcode is the same as the tracking number, while for others the tracking\nnumber is a subset of the barcode. Inputting a tracking number instead of a barcode will work in some cases but\nnot others.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Begin by importing the Drogher module:</p>\n<pre>&gt;&gt;&gt; import drogher\n</pre>\n<p>Now, call the <tt>barcode</tt> function with a package barcode string:</p>\n<pre>&gt;&gt;&gt; package = drogher.barcode('1Z999AA10123456784')\n</pre>\n<p>That returns a <tt>Package</tt> subclass containing some useful information:</p>\n<pre>&gt;&gt;&gt; package.barcode\n'1Z999AA10123456784'\n&gt;&gt;&gt; package.shipper\n'UPS'\n&gt;&gt;&gt; package.tracking_number\n'1Z999AA10123456784'\n</pre>\n<p>We can also ensure the package is valid, which tells us the barcode matched an expected format and the\ncalculated checksum matches the check digit:</p>\n<pre>&gt;&gt;&gt; package.is_valid\nTrue\n</pre>\n<p>If a barcode cannot be matched with a shipper, the class does not validate and the shipper is <tt>None</tt>:</p>\n<pre>&gt;&gt;&gt; package = drogher.barcode('123456')\n&gt;&gt;&gt; package.is_valid\nFalse\n&gt;&gt;&gt; package.shipper\nNone\n</pre>\n<p>For some shippers, the barcode is not the same as the tracking number:</p>\n<pre>&gt;&gt;&gt; package = drogher.barcode('420221539101026837331000039521')\n&gt;&gt;&gt; package.barcode\n'420221539101026837331000039521'\n&gt;&gt;&gt; package.tracking_number\n'9101026837331000039521'\n&gt;&gt;&gt; package.shipper\n'USPS'\n</pre>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<p>Version 0.0.2</p>\n<blockquote>\n<ul>\n<li>Improved pattern match for USPS IMpb barcodes</li>\n<li>Added support for 20 character USPS barcodes</li>\n</ul>\n</blockquote>\n<p>Version 0.0.1</p>\n<blockquote>\n<ul>\n<li>Initial release</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 2219562, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "5a6d8693dafd7e0607b208513aefb6c2", "sha256": "c1d176328ecebb9547579f28f638f1e467797debcbe68a4ac9ec88baf3f44da2"}, "downloads": -1, "filename": "drogher-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5a6d8693dafd7e0607b208513aefb6c2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19371, "upload_time": "2016-06-07T22:45:34", "upload_time_iso_8601": "2016-06-07T22:45:34.689065Z", "url": "https://files.pythonhosted.org/packages/40/ca/d7a6f44a02baff9676364e531f84acc02aad41d9e0ca5f8626543d8eddd1/drogher-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ca6cd4cbbe2a00fee4e156e023b2f26", "sha256": "afce17b0a2e80b3b4106a199b3eb2c3e6df55a85eaf71b2aaa3e2760ef232cf9"}, "downloads": -1, "filename": "drogher-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5ca6cd4cbbe2a00fee4e156e023b2f26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5488, "upload_time": "2016-06-07T22:45:19", "upload_time_iso_8601": "2016-06-07T22:45:19.555307Z", "url": "https://files.pythonhosted.org/packages/54/a8/65b73cb797b92ddb450c64cd8a289d99e430004111d27b15a16cec1635a3/drogher-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "93838ef9aa5a233c9751627a5d493baa", "sha256": "d1bdfa34ded1c1034e9a20f1d824e33c9a9256adf63f6480183c74e0d1f0acff"}, "downloads": -1, "filename": "drogher-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "93838ef9aa5a233c9751627a5d493baa", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21142, "upload_time": "2016-07-13T20:33:40", "upload_time_iso_8601": "2016-07-13T20:33:40.493611Z", "url": "https://files.pythonhosted.org/packages/e7/5e/11becbb068238f118e49696159c01d418ed98f69ffaf40f70afdbba814bf/drogher-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6e8a643798b8d14a94ebc4a92c825bca", "sha256": "d7c7137091be5772f9c3fef31405636ea868b6a43964031fd21ad57e1560b854"}, "downloads": -1, "filename": "drogher-0.0.2.tar.gz", "has_sig": false, "md5_digest": "6e8a643798b8d14a94ebc4a92c825bca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5732, "upload_time": "2016-07-13T20:33:23", "upload_time_iso_8601": "2016-07-13T20:33:23.930395Z", "url": "https://files.pythonhosted.org/packages/b9/c0/7c72bb24cf5ab0f92750d4ee13754721a1659f365db6c63bba24f6457b12/drogher-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "93838ef9aa5a233c9751627a5d493baa", "sha256": "d1bdfa34ded1c1034e9a20f1d824e33c9a9256adf63f6480183c74e0d1f0acff"}, "downloads": -1, "filename": "drogher-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "93838ef9aa5a233c9751627a5d493baa", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21142, "upload_time": "2016-07-13T20:33:40", "upload_time_iso_8601": "2016-07-13T20:33:40.493611Z", "url": "https://files.pythonhosted.org/packages/e7/5e/11becbb068238f118e49696159c01d418ed98f69ffaf40f70afdbba814bf/drogher-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6e8a643798b8d14a94ebc4a92c825bca", "sha256": "d7c7137091be5772f9c3fef31405636ea868b6a43964031fd21ad57e1560b854"}, "downloads": -1, "filename": "drogher-0.0.2.tar.gz", "has_sig": false, "md5_digest": "6e8a643798b8d14a94ebc4a92c825bca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5732, "upload_time": "2016-07-13T20:33:23", "upload_time_iso_8601": "2016-07-13T20:33:23.930395Z", "url": "https://files.pythonhosted.org/packages/b9/c0/7c72bb24cf5ab0f92750d4ee13754721a1659f365db6c63bba24f6457b12/drogher-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:34 2020"}