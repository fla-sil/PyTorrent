{"info": {"author": "Matthew Bonig<matthew.bonig@gmail.com>", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved", "Operating System :: OS Independent", "Programming Language :: JavaScript", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Typing :: Typed"], "description": "# SPA + CICD Website Construct\n\nThis CDK construct is used to create a static website with a CodePipeline to deploy\nfrom source code on pushes to `master`. The goal of this construct is to be able to\npoint it at a git repository, give it a url,\nand you've got a continuously deployed static website.\n\n# This is a pre-release!\n\nThis is a quick first-draft. All the options that will likely need to be added to accomodate a large\nnumber of use-cases are still needed. If you'd like to make requests or help update this construct, please\nopen an [Issue](https://github.com/mbonig/cicd-spa-website/issues) or a [PR](https://github.com/mbonig/cicd-spa-website/pulls).\n\n## What Gets Created\n\nAt the base level, the following will be built:\n\n* An S3 bucket for build artifacts\n* An S3 bucket for the website content\n* CICD Pipeline - CodePipeline sourced from Github, built using CodeBuild and deployed to an S3 bucket.\n\nIf a certificate is supplied or requested:\n\n* An ACM certificate will be provisioned via DNS if requested\n* A CloudFront Distribution pointing to the S3 bucket.\n\n## Example\n\nThis will create the website, the deployment pipeline, and add a generated certificate (and CloudFront) for HTTPS support.\n\n```python\n# Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826\nCicdSpaWebsite(stack, \"public-site\",\n    url=\"www.matthewbonig.com\",\n    github_source={\n        \"owner\": \"mbonig\",\n        \"repo\": \"public_site\",\n        \"oauth_token\": SecretValue.secrets_manager(\"github-oauth-token\")\n    },\n    hosted_zone={\n        \"hosted_zone_id\": \"ABCDEFGHIJKLM\",\n        \"zone_name\": \"matthewbonig.com\"\n    },\n    certificate=True\n)\n```\n\n## Input Properties\n\n|property|description|example\n|---|---|---\n|url|The url you'd like your website to be available at. Must be full url and must be controlled by the given HostedZone| www.matthewbonig.com\n|githubSource.owner|The Github repository's owner | mbonig\n|githubSource.repo|The GH repo name | public_site\n|githubSource.branch|An optional branch name. Defaults to 'master'| qa\n|githubSource.oauthToken|An ISecret pointing to an oauthToken. | SecretValue.secretsManager('github-oauth-token')\n|hostedZone|(Optional) - If provided, used to create DNS Records.\n|hostedZone.hostedZoneId|The hostedZone ID for the 'url's domain | ABCDEFGHI\n|hostedZone.zoneName|The hostedZone's name | matthewbonig.com\n|certificate|(Optional) - If provided, creates a CloudFront Distribution with the given certificate. If 'true' is provided, then a certificate will be generated.| true\n|buildSpec|(Optional) - If provided, will override the default BuildSpec in the CodeBuild project. Accepts either a string value (the filename in the source code) or an object. The object is passed to the [BuildSpec.fromObject()](https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-codebuild.BuildSpec.html#static-from-wbr-objectvalue). If not provided, see [BuildSpec](#buildspec).|build-prod.yaml\n\n## Design Notes\n\n### Certificates\n\nIf a certificate is required to provide HTTPS support then a simple S3 Bucket with website hosting will not work. This construct chooses to put a CloudFront Distribution in front of it when a certificate is required.\n\nIf that certificate already exists, it can be supplied as an ICertificate. If not, then it will be created using a [DNSValidatedCertificate](https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-certificatemanager.DnsValidatedCertificate.html).\n\nIf no certificate is supplied or requested, then the site will be hosted using a public S3 Bucket with Website Hosting enabled. No CloudFront Distribution will be created in that case.\n\n### Github Sources\n\nGithub source information is provided through props for the construct.\n\nIf you'd like to see support for another type of Source action, please open an [Issue](https://github.com/mbonig/cicd-spa-website/issues) or a [PR](https://github.com/mbonig/cicd-spa-website/pulls).\n\n### BuildSpec\n\nThe default buildspec is defined at [DEFAULT_BUILD_SPEC](./lib/cicd_spa_website.ts). It uses a Node v12 runtime, runs an `npm install` and then an `npm run build` and assumes the static deliverables are in the `dist` directory.\n\nYou may override the BuildSpec with either your own object or by passing a string which will be interpreted as a filename within the source to use.\n\n## Contributing\n\nPlease open Pull Requests and Issues on the [Github Repo](https://github.com/mbonig/cicd-spa-website).\n\n## License\n\nMIT", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mbonig/cicd-spa-website", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mbonig.cicd-spa-website", "package_url": "https://pypi.org/project/mbonig.cicd-spa-website/", "platform": "", "project_url": "https://pypi.org/project/mbonig.cicd-spa-website/", "project_urls": {"Homepage": "https://github.com/mbonig/cicd-spa-website", "Source": "https://github.com/mbonig/cicd-spa-website"}, "release_url": "https://pypi.org/project/mbonig.cicd-spa-website/0.1.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A CDK construct which creates a pipeline that pulls code from a source repository, builds it, then deploys to an S3 bucket (with CloudFront if a certificate is required)", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SPA + CICD Website Construct</h1>\n<p>This CDK construct is used to create a static website with a CodePipeline to deploy\nfrom source code on pushes to <code>master</code>. The goal of this construct is to be able to\npoint it at a git repository, give it a url,\nand you've got a continuously deployed static website.</p>\n<h1>This is a pre-release!</h1>\n<p>This is a quick first-draft. All the options that will likely need to be added to accomodate a large\nnumber of use-cases are still needed. If you'd like to make requests or help update this construct, please\nopen an <a href=\"https://github.com/mbonig/cicd-spa-website/issues\" rel=\"nofollow\">Issue</a> or a <a href=\"https://github.com/mbonig/cicd-spa-website/pulls\" rel=\"nofollow\">PR</a>.</p>\n<h2>What Gets Created</h2>\n<p>At the base level, the following will be built:</p>\n<ul>\n<li>An S3 bucket for build artifacts</li>\n<li>An S3 bucket for the website content</li>\n<li>CICD Pipeline - CodePipeline sourced from Github, built using CodeBuild and deployed to an S3 bucket.</li>\n</ul>\n<p>If a certificate is supplied or requested:</p>\n<ul>\n<li>An ACM certificate will be provisioned via DNS if requested</li>\n<li>A CloudFront Distribution pointing to the S3 bucket.</li>\n</ul>\n<h2>Example</h2>\n<p>This will create the website, the deployment pipeline, and add a generated certificate (and CloudFront) for HTTPS support.</p>\n<pre><span class=\"c1\"># Example automatically generated without compilation. See https://github.com/aws/jsii/issues/826</span>\n<span class=\"n\">CicdSpaWebsite</span><span class=\"p\">(</span><span class=\"n\">stack</span><span class=\"p\">,</span> <span class=\"s2\">\"public-site\"</span><span class=\"p\">,</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">\"www.matthewbonig.com\"</span><span class=\"p\">,</span>\n    <span class=\"n\">github_source</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">\"owner\"</span><span class=\"p\">:</span> <span class=\"s2\">\"mbonig\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"repo\"</span><span class=\"p\">:</span> <span class=\"s2\">\"public_site\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"oauth_token\"</span><span class=\"p\">:</span> <span class=\"n\">SecretValue</span><span class=\"o\">.</span><span class=\"n\">secrets_manager</span><span class=\"p\">(</span><span class=\"s2\">\"github-oauth-token\"</span><span class=\"p\">)</span>\n    <span class=\"p\">},</span>\n    <span class=\"n\">hosted_zone</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">\"hosted_zone_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ABCDEFGHIJKLM\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"zone_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"matthewbonig.com\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"n\">certificate</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>Input Properties</h2>\n<table>\n<thead>\n<tr>\n<th>property</th>\n<th>description</th>\n<th>example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>The url you'd like your website to be available at. Must be full url and must be controlled by the given HostedZone</td>\n<td><a href=\"http://www.matthewbonig.com\" rel=\"nofollow\">www.matthewbonig.com</a></td>\n</tr>\n<tr>\n<td>githubSource.owner</td>\n<td>The Github repository's owner</td>\n<td>mbonig</td>\n</tr>\n<tr>\n<td>githubSource.repo</td>\n<td>The GH repo name</td>\n<td>public_site</td>\n</tr>\n<tr>\n<td>githubSource.branch</td>\n<td>An optional branch name. Defaults to 'master'</td>\n<td>qa</td>\n</tr>\n<tr>\n<td>githubSource.oauthToken</td>\n<td>An ISecret pointing to an oauthToken.</td>\n<td>SecretValue.secretsManager('github-oauth-token')</td>\n</tr>\n<tr>\n<td>hostedZone</td>\n<td>(Optional) - If provided, used to create DNS Records.</td>\n<td></td>\n</tr>\n<tr>\n<td>hostedZone.hostedZoneId</td>\n<td>The hostedZone ID for the 'url's domain</td>\n<td>ABCDEFGHI</td>\n</tr>\n<tr>\n<td>hostedZone.zoneName</td>\n<td>The hostedZone's name</td>\n<td>matthewbonig.com</td>\n</tr>\n<tr>\n<td>certificate</td>\n<td>(Optional) - If provided, creates a CloudFront Distribution with the given certificate. If 'true' is provided, then a certificate will be generated.</td>\n<td>true</td>\n</tr>\n<tr>\n<td>buildSpec</td>\n<td>(Optional) - If provided, will override the default BuildSpec in the CodeBuild project. Accepts either a string value (the filename in the source code) or an object. The object is passed to the <a href=\"https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-codebuild.BuildSpec.html#static-from-wbr-objectvalue\" rel=\"nofollow\">BuildSpec.fromObject()</a>. If not provided, see <a href=\"#buildspec\" rel=\"nofollow\">BuildSpec</a>.</td>\n<td>build-prod.yaml</td>\n</tr></tbody></table>\n<h2>Design Notes</h2>\n<h3>Certificates</h3>\n<p>If a certificate is required to provide HTTPS support then a simple S3 Bucket with website hosting will not work. This construct chooses to put a CloudFront Distribution in front of it when a certificate is required.</p>\n<p>If that certificate already exists, it can be supplied as an ICertificate. If not, then it will be created using a <a href=\"https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-certificatemanager.DnsValidatedCertificate.html\" rel=\"nofollow\">DNSValidatedCertificate</a>.</p>\n<p>If no certificate is supplied or requested, then the site will be hosted using a public S3 Bucket with Website Hosting enabled. No CloudFront Distribution will be created in that case.</p>\n<h3>Github Sources</h3>\n<p>Github source information is provided through props for the construct.</p>\n<p>If you'd like to see support for another type of Source action, please open an <a href=\"https://github.com/mbonig/cicd-spa-website/issues\" rel=\"nofollow\">Issue</a> or a <a href=\"https://github.com/mbonig/cicd-spa-website/pulls\" rel=\"nofollow\">PR</a>.</p>\n<h3>BuildSpec</h3>\n<p>The default buildspec is defined at <a href=\"./lib/cicd_spa_website.ts\" rel=\"nofollow\">DEFAULT_BUILD_SPEC</a>. It uses a Node v12 runtime, runs an <code>npm install</code> and then an <code>npm run build</code> and assumes the static deliverables are in the <code>dist</code> directory.</p>\n<p>You may override the BuildSpec with either your own object or by passing a string which will be interpreted as a filename within the source to use.</p>\n<h2>Contributing</h2>\n<p>Please open Pull Requests and Issues on the <a href=\"https://github.com/mbonig/cicd-spa-website\" rel=\"nofollow\">Github Repo</a>.</p>\n<h2>License</h2>\n<p>MIT</p>\n\n          </div>"}, "last_serial": 6756273, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "3c429bf92cddd40ca1a361d0eb805ff8", "sha256": "b0a98d2b97f7ba41cb8c90b63e3e6f5b1a1cff0d45788135c9c2d7f57506f035"}, "downloads": -1, "filename": "mbonig.cicd-spa-website-0.0.2.tar.gz", "has_sig": false, "md5_digest": "3c429bf92cddd40ca1a361d0eb805ff8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 36341, "upload_time": "2020-03-05T16:15:18", "upload_time_iso_8601": "2020-03-05T16:15:18.365112Z", "url": "https://files.pythonhosted.org/packages/8a/39/8ee83b3fefe26355d47a452b8690ac9f60e22c9d3e75dbf28cc61142f6ac/mbonig.cicd-spa-website-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "b123d5b71c2eec8123ad72ef1e35a1cb", "sha256": "5b1ec1609f523be3cf049a4e7a76ea22c2511f87f96374f562e84fede9a2ff4c"}, "downloads": -1, "filename": "mbonig.cicd-spa-website-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b123d5b71c2eec8123ad72ef1e35a1cb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 38121, "upload_time": "2020-03-05T16:34:42", "upload_time_iso_8601": "2020-03-05T16:34:42.795319Z", "url": "https://files.pythonhosted.org/packages/5e/92/de51ab80ede0c5ae45b08cfe92e2bc14f34f77eb30a1fd0a89a5cdb56f31/mbonig.cicd-spa-website-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "49f1b58ec548cba1e527d70a457398e5", "sha256": "2137157ba837b429b6e3d83062aeb0d751c8a2266e14a3a633c22f38d1723f9b"}, "downloads": -1, "filename": "mbonig.cicd-spa-website-0.1.1.tar.gz", "has_sig": false, "md5_digest": "49f1b58ec548cba1e527d70a457398e5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 38156, "upload_time": "2020-03-05T16:43:32", "upload_time_iso_8601": "2020-03-05T16:43:32.469962Z", "url": "https://files.pythonhosted.org/packages/9b/a0/fd606134c97ff6dd8315fa793c70711fade02b830899d21bd33a0ffb1287/mbonig.cicd-spa-website-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "cfc13a281acf754cba5c09ac3b689080", "sha256": "6bd88f818d0fdd5cb93496776260fb70c07838d5631abe1d0d3d383f33e2f757"}, "downloads": -1, "filename": "mbonig.cicd-spa-website-0.1.2.tar.gz", "has_sig": false, "md5_digest": "cfc13a281acf754cba5c09ac3b689080", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 38142, "upload_time": "2020-03-05T16:56:17", "upload_time_iso_8601": "2020-03-05T16:56:17.572562Z", "url": "https://files.pythonhosted.org/packages/3a/e5/037ee0180cca656e5b0a0cec688593fb0bf1b9cc19f65de98f01060b939b/mbonig.cicd-spa-website-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cfc13a281acf754cba5c09ac3b689080", "sha256": "6bd88f818d0fdd5cb93496776260fb70c07838d5631abe1d0d3d383f33e2f757"}, "downloads": -1, "filename": "mbonig.cicd-spa-website-0.1.2.tar.gz", "has_sig": false, "md5_digest": "cfc13a281acf754cba5c09ac3b689080", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 38142, "upload_time": "2020-03-05T16:56:17", "upload_time_iso_8601": "2020-03-05T16:56:17.572562Z", "url": "https://files.pythonhosted.org/packages/3a/e5/037ee0180cca656e5b0a0cec688593fb0bf1b9cc19f65de98f01060b939b/mbonig.cicd-spa-website-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:02 2020"}