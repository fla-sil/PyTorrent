{"info": {"author": "Lindon Roberts", "author_email": "lindon.roberts@maths.ox.ac.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Framework :: IPython", "Framework :: Jupyter", "Intended Audience :: Financial and Insurance Industry", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Mathematics"], "description": "====================================================================\nPy-BOBYQA: Derivative-Free Solver for Bound-Constrained Minimization\n====================================================================\n\n.. image::  https://travis-ci.org/numericalalgorithmsgroup/pybobyqa.svg?branch=master\n   :target: https://travis-ci.org/numericalalgorithmsgroup/pybobyqa\n   :alt: Build Status\n\n.. image::  https://img.shields.io/badge/License-GPL%20v3-blue.svg\n   :target: https://www.gnu.org/licenses/gpl-3.0\n   :alt: GNU GPL v3 License\n\n.. image:: https://img.shields.io/pypi/v/Py-BOBYQA.svg\n   :target: https://pypi.python.org/pypi/Py-BOBYQA\n   :alt: Latest PyPI version\n\n.. image:: https://zenodo.org/badge/DOI/10.5281/zenodo.2630437.svg\n   :target: https://doi.org/10.5281/zenodo.2630437\n   :alt: DOI:10.5281/zenodo.2630437\n\nPy-BOBYQA is a flexible package for solving bound-constrained general objective minimization, without requiring derivatives of the objective. It is a Python implementation of the BOBYQA algorithm by Powell. Py-BOBYQA is particularly useful when evaluations of the objective function are expensive and/or noisy.\n\nMore details about Py-BOBYQA can be found in our papers: \n\n1. Coralia Cartis, Jan Fiala, Benjamina Marteau and Lindon Roberts, `Improving the Flexibility and Robustness of Model-Based Derivative-Free Optimization Solvers <https://doi.org/10.1145/3338517>`_, *ACM Transactions on Mathematical Software*, 45:3 (2019), pp. 32:1-32:41 [`preprint <https://arxiv.org/abs/1804.00154>`_] \n2. Coralia Cartis, Lindon Roberts and Oliver Sheridan-Methven, `Escaping local minima with derivative-free methods: a numerical investigation <https://arxiv.org/abs/1812.11343>`_, technical report, University of Oxford, (2018). \n\nPlease cite [1] when using Py-BOBYQA for local optimization, and [1,2] when using Py-BOBYQA's global optimization heuristic functionality. For reproducibility of all figures, please feel free to contact the authors.\n\nThe original paper by Powell is: M. J. D. Powell, The BOBYQA algorithm for bound constrained optimization without derivatives, technical report DAMTP 2009/NA06, University of Cambridge (2009), and the original Fortran implementation is available `here <http://mat.uc.pt/~zhang/software.html>`_.\n\nIf you are interested in solving least-squares minimization problems, you may wish to try `DFO-LS <https://github.com/numericalalgorithmsgroup/dfols>`_, which has the same features as Py-BOBYQA (plus some more), and exploits the least-squares problem structure, so performs better on such problems.\n\nDocumentation\n-------------\nSee manual.pdf or the `online manual <https://numericalalgorithmsgroup.github.io/pybobyqa/>`_.\n\nCitation\n--------\nIf you use Py-BOBYQA in a paper, please cite:\n\nCartis, C., Fiala, J., Marteau, B. and Roberts, L., Improving the Flexibility and Robustness of Model-Based Derivative-Free Optimization Solvers, *ACM Transactions on Mathematical Software*, 45:3 (2019), pp. 32:1-32:41.\n\nIf you use Py-BOBYQA's global optimization heuristic, please cite the above and also\n\nCartis, C., Roberts, L. and Sheridan-Methven, O., Escaping local minima with derivative-free methods: a numerical investigation, technical report, University of Oxford, (2018). \n\nRequirements\n------------\nPy-BOBYQA requires the following software to be installed:\n\n* Python 2.7 or Python 3 (http://www.python.org/)\n\nAdditionally, the following python packages should be installed (these will be installed automatically if using *pip*, see `Installation using pip`_):\n\n* NumPy 1.11 or higher (http://www.numpy.org/)\n* SciPy 0.18 or higher (http://www.scipy.org/)\n* Pandas 0.17 or higher (http://pandas.pydata.org/)\n\n**Optional package:** Py-BOBYQA versions 1.2 and higher also support the `trustregion <https://github.com/lindonroberts/trust-region>`_ package for fast trust-region subproblem solutions. To install this, make sure you have a Fortran compiler (e.g. `gfortran <https://gcc.gnu.org/wiki/GFortran>`_) and NumPy installed, then run :code:`pip install trustregion`. You do not have to have trustregion installed for Py-BOBYQA to work, and it is not installed by default.\n\nInstallation using pip\n----------------------\nFor easy installation, use `pip <http://www.pip-installer.org/>`_ as root:\n\n .. code-block:: bash\n\n    $ [sudo] pip install Py-BOBYQA\n\nor alternatively *easy_install*:\n\n .. code-block:: bash\n\n    $ [sudo] easy_install Py-BOBYQA\n\nIf you do not have root privileges or you want to install Py-BOBYQA for your private use, you can use:\n\n .. code-block:: bash\n\n    $ pip install --user Py-BOBYQA\n\nwhich will install Py-BOBYQA in your home directory.\n\nNote that if an older install of Py-BOBYQA is present on your system you can use:\n\n .. code-block:: bash\n\n    $ [sudo] pip install --upgrade Py-BOBYQA\n\nto upgrade Py-BOBYQA to the latest version.\n\nManual installation\n-------------------\nAlternatively, you can download the source code from `Github <https://github.com/numericalalgorithmsgroup/pybobyqa>`_ and unpack as follows:\n\n .. code-block:: bash\n\n    $ git clone https://github.com/numericalalgorithmsgroup/pybobyqa\n    $ cd pybobyqa\n\nPy-BOBYQA is written in pure Python and requires no compilation. It can be installed using:\n\n .. code-block:: bash\n\n    $ [sudo] pip install .\n\nIf you do not have root privileges or you want to install Py-BOBYQA for your private use, you can use:\n\n .. code-block:: bash\n\n    $ pip install --user .\n\ninstead.\n\nTo upgrade Py-BOBYQA to the latest version, navigate to the top-level directory (i.e. the one containing :code:`setup.py`) and rerun the installation using :code:`pip`, as above:\n\n .. code-block:: bash\n\n    $ git pull\n    $ [sudo] pip install .  # with admin privileges\n\nTesting\n-------\nIf you installed Py-BOBYQA manually, you can test your installation by running:\n\n .. code-block:: bash\n\n    $ python setup.py test\n\nAlternatively, the HTML documentation provides some simple examples of how to run Py-BOBYQA.\n\nExamples\n--------\nExamples of how to run Py-BOBYQA are given in the `online documentation <https://numericalalgorithmsgroup.github.io/pybobyqa/>`_, and the `examples directory <https://github.com/numericalalgorithmsgroup/pybobyqa/tree/master/examples>`_ in Github.\n\nUninstallation\n--------------\nIf Py-BOBYQA was installed using *pip* you can uninstall as follows:\n\n .. code-block:: bash\n\n    $ [sudo] pip uninstall Py-BOBYQA\n\nIf Py-BOBYQA was installed manually you have to remove the installed files by hand (located in your python site-packages directory).\n\nBugs\n----\nPlease report any bugs using GitHub's issue tracker.\n\nLicense\n-------\nThis algorithm is released under the GNU GPL license. Please `contact NAG <http://www.nag.com/content/worldwide-contact-information>`_ for alternative licensing.", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/numericalalgorithmsgroup/pybobyqa/archive/v1.2.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/numericalalgorithmsgroup/pybobyqa/", "keywords": "mathematics derivative free optimization", "license": "GNU GPL", "maintainer": "", "maintainer_email": "", "name": "Py-BOBYQA", "package_url": "https://pypi.org/project/Py-BOBYQA/", "platform": "", "project_url": "https://pypi.org/project/Py-BOBYQA/", "project_urls": {"Download": "https://github.com/numericalalgorithmsgroup/pybobyqa/archive/v1.2.tar.gz", "Homepage": "https://github.com/numericalalgorithmsgroup/pybobyqa/"}, "release_url": "https://pypi.org/project/Py-BOBYQA/1.2/", "requires_dist": null, "requires_python": "", "summary": "A flexible derivative-free solver for (bound constrained) general objective minimization", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/numericalalgorithmsgroup/pybobyqa\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/477b5e6f06402cbf5de586d60533fdc333f0352d/68747470733a2f2f7472617669732d63692e6f72672f6e756d65726963616c616c676f726974686d7367726f75702f7079626f627971612e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://www.gnu.org/licenses/gpl-3.0\" rel=\"nofollow\"><img alt=\"GNU GPL v3 License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b8e7bd0619920735e058483fd428ecbeb267eb7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c25323076332d626c75652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/Py-BOBYQA\" rel=\"nofollow\"><img alt=\"Latest PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6b1c13fe50230f84323663faa36cf3333ab4063d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f50792d424f425951412e737667\"></a>\n<a href=\"https://doi.org/10.5281/zenodo.2630437\" rel=\"nofollow\"><img alt=\"DOI:10.5281/zenodo.2630437\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/81b09abc7469c018379d4dcd96e29c2f01ace923/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e323633303433372e737667\"></a>\n<p>Py-BOBYQA is a flexible package for solving bound-constrained general objective minimization, without requiring derivatives of the objective. It is a Python implementation of the BOBYQA algorithm by Powell. Py-BOBYQA is particularly useful when evaluations of the objective function are expensive and/or noisy.</p>\n<p>More details about Py-BOBYQA can be found in our papers:</p>\n<ol>\n<li>Coralia Cartis, Jan Fiala, Benjamina Marteau and Lindon Roberts, <a href=\"https://doi.org/10.1145/3338517\" rel=\"nofollow\">Improving the Flexibility and Robustness of Model-Based Derivative-Free Optimization Solvers</a>, <em>ACM Transactions on Mathematical Software</em>, 45:3 (2019), pp. 32:1-32:41 [<a href=\"https://arxiv.org/abs/1804.00154\" rel=\"nofollow\">preprint</a>]</li>\n<li>Coralia Cartis, Lindon Roberts and Oliver Sheridan-Methven, <a href=\"https://arxiv.org/abs/1812.11343\" rel=\"nofollow\">Escaping local minima with derivative-free methods: a numerical investigation</a>, technical report, University of Oxford, (2018).</li>\n</ol>\n<p>Please cite [1] when using Py-BOBYQA for local optimization, and [1,2] when using Py-BOBYQA\u2019s global optimization heuristic functionality. For reproducibility of all figures, please feel free to contact the authors.</p>\n<p>The original paper by Powell is: M. J. D. Powell, The BOBYQA algorithm for bound constrained optimization without derivatives, technical report DAMTP 2009/NA06, University of Cambridge (2009), and the original Fortran implementation is available <a href=\"http://mat.uc.pt/~zhang/software.html\" rel=\"nofollow\">here</a>.</p>\n<p>If you are interested in solving least-squares minimization problems, you may wish to try <a href=\"https://github.com/numericalalgorithmsgroup/dfols\" rel=\"nofollow\">DFO-LS</a>, which has the same features as Py-BOBYQA (plus some more), and exploits the least-squares problem structure, so performs better on such problems.</p>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>See manual.pdf or the <a href=\"https://numericalalgorithmsgroup.github.io/pybobyqa/\" rel=\"nofollow\">online manual</a>.</p>\n</div>\n<div id=\"citation\">\n<h2>Citation</h2>\n<p>If you use Py-BOBYQA in a paper, please cite:</p>\n<p>Cartis, C., Fiala, J., Marteau, B. and Roberts, L., Improving the Flexibility and Robustness of Model-Based Derivative-Free Optimization Solvers, <em>ACM Transactions on Mathematical Software</em>, 45:3 (2019), pp. 32:1-32:41.</p>\n<p>If you use Py-BOBYQA\u2019s global optimization heuristic, please cite the above and also</p>\n<p>Cartis, C., Roberts, L. and Sheridan-Methven, O., Escaping local minima with derivative-free methods: a numerical investigation, technical report, University of Oxford, (2018).</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>Py-BOBYQA requires the following software to be installed:</p>\n<ul>\n<li>Python 2.7 or Python 3 (<a href=\"http://www.python.org/\" rel=\"nofollow\">http://www.python.org/</a>)</li>\n</ul>\n<p>Additionally, the following python packages should be installed (these will be installed automatically if using <em>pip</em>, see <a href=\"#installation-using-pip\" rel=\"nofollow\">Installation using pip</a>):</p>\n<ul>\n<li>NumPy 1.11 or higher (<a href=\"http://www.numpy.org/\" rel=\"nofollow\">http://www.numpy.org/</a>)</li>\n<li>SciPy 0.18 or higher (<a href=\"http://www.scipy.org/\" rel=\"nofollow\">http://www.scipy.org/</a>)</li>\n<li>Pandas 0.17 or higher (<a href=\"http://pandas.pydata.org/\" rel=\"nofollow\">http://pandas.pydata.org/</a>)</li>\n</ul>\n<p><strong>Optional package:</strong> Py-BOBYQA versions 1.2 and higher also support the <a href=\"https://github.com/lindonroberts/trust-region\" rel=\"nofollow\">trustregion</a> package for fast trust-region subproblem solutions. To install this, make sure you have a Fortran compiler (e.g. <a href=\"https://gcc.gnu.org/wiki/GFortran\" rel=\"nofollow\">gfortran</a>) and NumPy installed, then run <code>pip install trustregion</code>. You do not have to have trustregion installed for Py-BOBYQA to work, and it is not installed by default.</p>\n</div>\n<div id=\"installation-using-pip\">\n<h2>Installation using pip</h2>\n<p>For easy installation, use <a href=\"http://www.pip-installer.org/\" rel=\"nofollow\">pip</a> as root:</p>\n<blockquote>\n<pre>$ <span class=\"o\">[</span>sudo<span class=\"o\">]</span> pip install Py-BOBYQA\n</pre>\n</blockquote>\n<p>or alternatively <em>easy_install</em>:</p>\n<blockquote>\n<pre>$ <span class=\"o\">[</span>sudo<span class=\"o\">]</span> easy_install Py-BOBYQA\n</pre>\n</blockquote>\n<p>If you do not have root privileges or you want to install Py-BOBYQA for your private use, you can use:</p>\n<blockquote>\n<pre>$ pip install --user Py-BOBYQA\n</pre>\n</blockquote>\n<p>which will install Py-BOBYQA in your home directory.</p>\n<p>Note that if an older install of Py-BOBYQA is present on your system you can use:</p>\n<blockquote>\n<pre>$ <span class=\"o\">[</span>sudo<span class=\"o\">]</span> pip install --upgrade Py-BOBYQA\n</pre>\n</blockquote>\n<p>to upgrade Py-BOBYQA to the latest version.</p>\n</div>\n<div id=\"manual-installation\">\n<h2>Manual installation</h2>\n<p>Alternatively, you can download the source code from <a href=\"https://github.com/numericalalgorithmsgroup/pybobyqa\" rel=\"nofollow\">Github</a> and unpack as follows:</p>\n<blockquote>\n<pre>$ git clone https://github.com/numericalalgorithmsgroup/pybobyqa\n$ <span class=\"nb\">cd</span> pybobyqa\n</pre>\n</blockquote>\n<p>Py-BOBYQA is written in pure Python and requires no compilation. It can be installed using:</p>\n<blockquote>\n<pre>$ <span class=\"o\">[</span>sudo<span class=\"o\">]</span> pip install .\n</pre>\n</blockquote>\n<p>If you do not have root privileges or you want to install Py-BOBYQA for your private use, you can use:</p>\n<blockquote>\n<pre>$ pip install --user .\n</pre>\n</blockquote>\n<p>instead.</p>\n<p>To upgrade Py-BOBYQA to the latest version, navigate to the top-level directory (i.e. the one containing <code>setup.py</code>) and rerun the installation using <code>pip</code>, as above:</p>\n<blockquote>\n<pre>$ git pull\n$ <span class=\"o\">[</span>sudo<span class=\"o\">]</span> pip install .  <span class=\"c1\"># with admin privileges</span>\n</pre>\n</blockquote>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>If you installed Py-BOBYQA manually, you can test your installation by running:</p>\n<blockquote>\n<pre>$ python setup.py <span class=\"nb\">test</span>\n</pre>\n</blockquote>\n<p>Alternatively, the HTML documentation provides some simple examples of how to run Py-BOBYQA.</p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Examples of how to run Py-BOBYQA are given in the <a href=\"https://numericalalgorithmsgroup.github.io/pybobyqa/\" rel=\"nofollow\">online documentation</a>, and the <a href=\"https://github.com/numericalalgorithmsgroup/pybobyqa/tree/master/examples\" rel=\"nofollow\">examples directory</a> in Github.</p>\n</div>\n<div id=\"uninstallation\">\n<h2>Uninstallation</h2>\n<p>If Py-BOBYQA was installed using <em>pip</em> you can uninstall as follows:</p>\n<blockquote>\n<pre>$ <span class=\"o\">[</span>sudo<span class=\"o\">]</span> pip uninstall Py-BOBYQA\n</pre>\n</blockquote>\n<p>If Py-BOBYQA was installed manually you have to remove the installed files by hand (located in your python site-packages directory).</p>\n</div>\n<div id=\"bugs\">\n<h2>Bugs</h2>\n<p>Please report any bugs using GitHub\u2019s issue tracker.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This algorithm is released under the GNU GPL license. Please <a href=\"http://www.nag.com/content/worldwide-contact-information\" rel=\"nofollow\">contact NAG</a> for alternative licensing.</p>\n</div>\n\n          </div>"}, "last_serial": 6694538, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "603f00c9838e6efb3147d8f9b5b586e4", "sha256": "aabcfc88576e0117423bbc26107c5032df7bad33b1be36a806a8a2a6f8c09d3c"}, "downloads": -1, "filename": "Py-BOBYQA-1.0.tar.gz", "has_sig": false, "md5_digest": "603f00c9838e6efb3147d8f9b5b586e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33320, "upload_time": "2018-02-06T11:55:22", "upload_time_iso_8601": "2018-02-06T11:55:22.643899Z", "url": "https://files.pythonhosted.org/packages/55/5c/770540dd000ac81f88c350c849260b46911a44524b87d054775d98d771f4/Py-BOBYQA-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "b0acbef96ea415895f5982d7415eff1b", "sha256": "660f0869803bcc748cace58b04d8866d22054f7c8a25f029bef88e5964641815"}, "downloads": -1, "filename": "Py-BOBYQA-1.0.1.tar.gz", "has_sig": false, "md5_digest": "b0acbef96ea415895f5982d7415eff1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33639, "upload_time": "2018-02-20T17:04:12", "upload_time_iso_8601": "2018-02-20T17:04:12.956935Z", "url": "https://files.pythonhosted.org/packages/ba/8b/1a8c039b14799c817c42bef80907f93867609bede2725417d5cfb86f7212/Py-BOBYQA-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "096602df4792e6a6c1586de28ba6f9c2", "sha256": "0fa0db97c7ec48f2238466eef4fa63d5fca4bf084f5648fff9f2cd7199478512"}, "downloads": -1, "filename": "Py-BOBYQA-1.0.2.tar.gz", "has_sig": false, "md5_digest": "096602df4792e6a6c1586de28ba6f9c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34252, "upload_time": "2018-06-20T11:51:27", "upload_time_iso_8601": "2018-06-20T11:51:27.931365Z", "url": "https://files.pythonhosted.org/packages/c2/20/baa1227c8a17c77e6afb2571a49dfb20bb0ec142344f0bfab2a8c13cc901/Py-BOBYQA-1.0.2.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "922b2586643d0f5b5c422405e394e38c", "sha256": "88e75467cbee24518ad64684ce7e616dc9e77b2670ae090fdd3f8dd291e41f87"}, "downloads": -1, "filename": "Py-BOBYQA-1.1.tar.gz", "has_sig": false, "md5_digest": "922b2586643d0f5b5c422405e394e38c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34783, "upload_time": "2018-12-24T15:51:21", "upload_time_iso_8601": "2018-12-24T15:51:21.155123Z", "url": "https://files.pythonhosted.org/packages/39/28/ff2da0aa9591da309342963728fc454035d207aa92a74a9ac06974c71d11/Py-BOBYQA-1.1.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "8481c88857882278c0651577b80d96c7", "sha256": "f0d4ea179e2ffba81b0ee7ff3924ff10b86139dce12156bf77889bbcb250a221"}, "downloads": -1, "filename": "Py-BOBYQA-1.1.1.tar.gz", "has_sig": false, "md5_digest": "8481c88857882278c0651577b80d96c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35154, "upload_time": "2019-04-05T12:21:05", "upload_time_iso_8601": "2019-04-05T12:21:05.760143Z", "url": "https://files.pythonhosted.org/packages/23/06/ff3de2358b46aa6755815729bdefaa38c4a8bd6b27353d37ca2440bffab4/Py-BOBYQA-1.1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "46c548c7a57cae2b757719994e67f8cd", "sha256": "df878e2546bb360cea6e1dc70d92529775218fba8ff561bf22d23dfd7334e696"}, "downloads": -1, "filename": "Py-BOBYQA-1.2.tar.gz", "has_sig": false, "md5_digest": "46c548c7a57cae2b757719994e67f8cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37172, "upload_time": "2020-02-25T06:07:15", "upload_time_iso_8601": "2020-02-25T06:07:15.706249Z", "url": "https://files.pythonhosted.org/packages/08/0f/f1611fad02a3720c57a4c8e2a263a714b92de3c233c734937eb540b2ea92/Py-BOBYQA-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "46c548c7a57cae2b757719994e67f8cd", "sha256": "df878e2546bb360cea6e1dc70d92529775218fba8ff561bf22d23dfd7334e696"}, "downloads": -1, "filename": "Py-BOBYQA-1.2.tar.gz", "has_sig": false, "md5_digest": "46c548c7a57cae2b757719994e67f8cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37172, "upload_time": "2020-02-25T06:07:15", "upload_time_iso_8601": "2020-02-25T06:07:15.706249Z", "url": "https://files.pythonhosted.org/packages/08/0f/f1611fad02a3720c57a4c8e2a263a714b92de3c233c734937eb540b2ea92/Py-BOBYQA-1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:05 2020"}