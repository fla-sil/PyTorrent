{"info": {"author": "Colin Wood", "author_email": "cwood06@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Topic :: Software Development :: Libraries :: Java Libraries"], "description": "pyJolokia\n================\n\nThis is a pure pyhon jolokia client. I moduled its usage after the javascript version.\nCurrently this will only support the protocol version 6.\n\nCheck the jolokia users guide for more information on how jolokia works. All options are available\non ``pyjolokia`` as joloka supports.\n\nCheck -> http://www.jolokia.org/reference/html/index.html for more information.\n\n.. image:: https://travis-ci.org/cwood/pyjolokia.png?branch=master\n     :target: https://travis-ci.org/cwood/pyjolokia\n\nFeatures\n-------------\n\n* Post Request\n* Bulk Request\n* Proxy Support\n* Read, Write, List, Search, Exec.\n\nSetup\n---------------\n\n.. code-block:: sh\n\n    $ python2.7 setup.py build\n    $ python2.7 setup.py install\n\nExamples\n=====================\n\nOne Request\n----------------\n\n.. code-block:: python\n\n    from pyjolokia import Jolokia\n    # Enter the jolokia url\n    j4p = Jolokia('http://localhost:8080/jolokia/')\n    # Put in the type, the mbean, or other options. Check the jolokia users guide for more info\n    # This then will return back a python dictionary of what happend to the request\n    data = j4p.request(type = 'read', mbean='java.lang:type=Threading', attribute='ThreadCount')\n\nWrite Request\n-------------------\n\n.. code-block:: python\n\n    from pyjolokia import Jolokia\n\n    j4p = Jolokia('http://localhost:8080/jolokia/')\n    j4p.request(type = 'write', mbean = 'java.lang:type=Memory', attribute = 'verbose', value='true')\n    >> {u'request': {u'attribute': u'Verbose',\n                     u'mbean': u'java.lang:type=Memory',\n                     u'type': u'write',\n                     u'value': u'true'},\n        u'status': 200,\n        u'timestamp': 1324256998,\n        u'value': False}\n\nExec Request\n-------------------------\n\n.. code-block:: python\n\n    from pyjolokia import Jolokia\n\n    j4p = Jolokia('http://localhost:8080/jolokia/')\n    j4p.request(type = 'exec', mbean='java.lang:type=Threading', operation='dumpAllThreads', arguments = [True, True])\n    >> {u'request': {u'arguments': [True, True],\n                     u'mbean': u'java.lang:type=Threading',\n                     u'operation': u'dumpAllThreads',\n                     u'type': u'exec'},\n        u'status': 200,\n        u'timestamp': 1324257601,\n        u'value': [{u'blockedCount': 34,\n                    u'blockedTime': -1,\n                    ...\n\nSearch Request\n--------------------------\n\n\n.. code-block:: python\n\n    from pyjolokia import Jolokia\n\n    j4p = Jolokia('http://localhost:8080/jolokia/')\n    j4p.request(type = 'search', mbean='java.lang:*')\n    >> {u'request': {u'mbean': u'java.lang:*', u'type': u'search'},\n        u'status': 200,\n        u'timestamp': 1324257899,\n        u'value': [u'java.lang:name=CMS Old Gen,type=MemoryPool',\n                   u'java.lang:type=Memory',\n                   u'java.lang:name=Code Cache,type=MemoryPool',\n                   u'java.lang:type=Runtime',\n                   u'java.lang:type=ClassLoading',\n                   u'java.lang:name=ConcurrentMarkSweep,type=GarbageCollector',\n                   u'java.lang:type=Threading',\n                   u'java.lang:name=ParNew,type=GarbageCollector',\n                   u'java.lang:type=Compilation',\n                   u'java.lang:name=Par Eden Space,type=MemoryPool',\n                   u'java.lang:name=CMS Perm Gen,type=MemoryPool',\n                   u'java.lang:type=OperatingSystem',\n                   u'java.lang:name=Par Survivor Space,type=MemoryPool',\n                   u'java.lang:name=CodeCacheManager,type=MemoryManager']}\n\n\nList Request\n-----------------\n\n\n.. code-block:: python\n\n    from pyjolokia import Jolokia\n    j4p = Jolokia('http://localhost:8080/jolokia/')\n    j4p.request(type = 'list', path='java.lang/type=Memory')\n    >> {u'request': {u'path': u'java.lang/type=Memory', u'type': u'list'},\n                     u'status': 200,\n                     u'timestamp': 1324258206,\n        u'value': {u'attr': {u'HeapMemoryUsage': {u'desc': u'HeapMemoryUsage',\n                                                  u'rw': False,\n                                                  u'type': u'javax.management.openmbean.CompositeData'},\n                                                  ...\n\nBulk Requsts\n-----------------\n\n\n.. code-block:: python\n\n    from pyjolokia import Jolokia\n    # Enter the jolokia url\n    j4p = Jolokia('http://localhost:8080/jolokia/')\n    '''\n        Put as many requests as you want.\n    '''\n    j4p.add_request(type = 'read', mbean='java.lang:type=Memory')\n    j4p.add_request(type = 'read', mbean='java.lang:type=Threading', attribute='ThreadCount')\n\n    # Actull json request will be sent here\n    bulkdata = j4p.getRequests()\n\nProxy Mode\n------------------\n\n.. code-block:: python\n\n    from pyjolokia import Jolokia\n    j4p = Jolokia('http://localhost:8080/jolokia/')\n    j4p.proxy(url = 'service:jmx:rmi://localhost:8080', user = 'SomeUser', password = 'somePassword')\n\n    # Do normal requests here. All requests ill have the proxy info.\n    ...\n\nHTTP Basic Authentication\n--------------------------\n\n.. code-block:: python\n\n    from pyjolokia import Jolokia\n    j4p = Jolokia('http://localhost:8080/jolokia/')\n    j4p.auth(httpusername='this', httppassword='that')\n\n    # Do normal requests here. All requests ill have the proxy info.\n    ...", "description_content_type": null, "docs_url": null, "download_url": "http://github.com/cwood/pyjolokia/tarball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cwood/pyjolokia", "keywords": "jolokia,jmx", "license": "Apache License Version 2.0", "maintainer": null, "maintainer_email": null, "name": "pyjolokia", "package_url": "https://pypi.org/project/pyjolokia/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyjolokia/", "project_urls": {"Download": "http://github.com/cwood/pyjolokia/tarball/master", "Homepage": "https://github.com/cwood/pyjolokia"}, "release_url": "https://pypi.org/project/pyjolokia/0.3.1/", "requires_dist": null, "requires_python": null, "summary": "Pure Python based Jolokia client", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pyjolokia\">\n<h2>pyJolokia</h2>\n<p>This is a pure pyhon jolokia client. I moduled its usage after the javascript version.\nCurrently this will only support the protocol version 6.</p>\n<p>Check the jolokia users guide for more information on how jolokia works. All options are available\non <tt>pyjolokia</tt> as joloka supports.</p>\n<p>Check -&gt; <a href=\"http://www.jolokia.org/reference/html/index.html\" rel=\"nofollow\">http://www.jolokia.org/reference/html/index.html</a> for more information.</p>\n<a href=\"https://travis-ci.org/cwood/pyjolokia\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/cwood/pyjolokia.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/51d5fd2792eb975ce0bd894a79312f71511d9274/68747470733a2f2f7472617669732d63692e6f72672f63776f6f642f70796a6f6c6f6b69612e706e673f6272616e63683d6d6173746572\"></a>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Post Request</li>\n<li>Bulk Request</li>\n<li>Proxy Support</li>\n<li>Read, Write, List, Search, Exec.</li>\n</ul>\n</div>\n<div id=\"setup\">\n<h3>Setup</h3>\n<pre>$ python2.7 setup.py build\n$ python2.7 setup.py install\n</pre>\n</div>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<div id=\"one-request\">\n<h3>One Request</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyjolokia</span> <span class=\"kn\">import</span> <span class=\"n\">Jolokia</span>\n<span class=\"c1\"># Enter the jolokia url</span>\n<span class=\"n\">j4p</span> <span class=\"o\">=</span> <span class=\"n\">Jolokia</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost:8080/jolokia/'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Put in the type, the mbean, or other options. Check the jolokia users guide for more info</span>\n<span class=\"c1\"># This then will return back a python dictionary of what happend to the request</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">j4p</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"s1\">'read'</span><span class=\"p\">,</span> <span class=\"n\">mbean</span><span class=\"o\">=</span><span class=\"s1\">'java.lang:type=Threading'</span><span class=\"p\">,</span> <span class=\"n\">attribute</span><span class=\"o\">=</span><span class=\"s1\">'ThreadCount'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"write-request\">\n<h3>Write Request</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyjolokia</span> <span class=\"kn\">import</span> <span class=\"n\">Jolokia</span>\n\n<span class=\"n\">j4p</span> <span class=\"o\">=</span> <span class=\"n\">Jolokia</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost:8080/jolokia/'</span><span class=\"p\">)</span>\n<span class=\"n\">j4p</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"s1\">'write'</span><span class=\"p\">,</span> <span class=\"n\">mbean</span> <span class=\"o\">=</span> <span class=\"s1\">'java.lang:type=Memory'</span><span class=\"p\">,</span> <span class=\"n\">attribute</span> <span class=\"o\">=</span> <span class=\"s1\">'verbose'</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s1\">'true'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"p\">{</span><span class=\"sa\">u</span><span class=\"s1\">'request'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"sa\">u</span><span class=\"s1\">'attribute'</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s1\">'Verbose'</span><span class=\"p\">,</span>\n                 <span class=\"sa\">u</span><span class=\"s1\">'mbean'</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s1\">'java.lang:type=Memory'</span><span class=\"p\">,</span>\n                 <span class=\"sa\">u</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s1\">'write'</span><span class=\"p\">,</span>\n                 <span class=\"sa\">u</span><span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s1\">'true'</span><span class=\"p\">},</span>\n    <span class=\"sa\">u</span><span class=\"s1\">'status'</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">,</span>\n    <span class=\"sa\">u</span><span class=\"s1\">'timestamp'</span><span class=\"p\">:</span> <span class=\"mi\">1324256998</span><span class=\"p\">,</span>\n    <span class=\"sa\">u</span><span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"exec-request\">\n<h3>Exec Request</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyjolokia</span> <span class=\"kn\">import</span> <span class=\"n\">Jolokia</span>\n\n<span class=\"n\">j4p</span> <span class=\"o\">=</span> <span class=\"n\">Jolokia</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost:8080/jolokia/'</span><span class=\"p\">)</span>\n<span class=\"n\">j4p</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"s1\">'exec'</span><span class=\"p\">,</span> <span class=\"n\">mbean</span><span class=\"o\">=</span><span class=\"s1\">'java.lang:type=Threading'</span><span class=\"p\">,</span> <span class=\"n\">operation</span><span class=\"o\">=</span><span class=\"s1\">'dumpAllThreads'</span><span class=\"p\">,</span> <span class=\"n\">arguments</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"p\">{</span><span class=\"sa\">u</span><span class=\"s1\">'request'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"sa\">u</span><span class=\"s1\">'arguments'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">],</span>\n                 <span class=\"sa\">u</span><span class=\"s1\">'mbean'</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s1\">'java.lang:type=Threading'</span><span class=\"p\">,</span>\n                 <span class=\"sa\">u</span><span class=\"s1\">'operation'</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s1\">'dumpAllThreads'</span><span class=\"p\">,</span>\n                 <span class=\"sa\">u</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s1\">'exec'</span><span class=\"p\">},</span>\n    <span class=\"sa\">u</span><span class=\"s1\">'status'</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">,</span>\n    <span class=\"sa\">u</span><span class=\"s1\">'timestamp'</span><span class=\"p\">:</span> <span class=\"mi\">1324257601</span><span class=\"p\">,</span>\n    <span class=\"sa\">u</span><span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"sa\">u</span><span class=\"s1\">'blockedCount'</span><span class=\"p\">:</span> <span class=\"mi\">34</span><span class=\"p\">,</span>\n                <span class=\"sa\">u</span><span class=\"s1\">'blockedTime'</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"o\">...</span>\n</pre>\n</div>\n<div id=\"search-request\">\n<h3>Search Request</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyjolokia</span> <span class=\"kn\">import</span> <span class=\"n\">Jolokia</span>\n\n<span class=\"n\">j4p</span> <span class=\"o\">=</span> <span class=\"n\">Jolokia</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost:8080/jolokia/'</span><span class=\"p\">)</span>\n<span class=\"n\">j4p</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"s1\">'search'</span><span class=\"p\">,</span> <span class=\"n\">mbean</span><span class=\"o\">=</span><span class=\"s1\">'java.lang:*'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"p\">{</span><span class=\"sa\">u</span><span class=\"s1\">'request'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"sa\">u</span><span class=\"s1\">'mbean'</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s1\">'java.lang:*'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s1\">'search'</span><span class=\"p\">},</span>\n    <span class=\"sa\">u</span><span class=\"s1\">'status'</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">,</span>\n    <span class=\"sa\">u</span><span class=\"s1\">'timestamp'</span><span class=\"p\">:</span> <span class=\"mi\">1324257899</span><span class=\"p\">,</span>\n    <span class=\"sa\">u</span><span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"sa\">u</span><span class=\"s1\">'java.lang:name=CMS Old Gen,type=MemoryPool'</span><span class=\"p\">,</span>\n               <span class=\"sa\">u</span><span class=\"s1\">'java.lang:type=Memory'</span><span class=\"p\">,</span>\n               <span class=\"sa\">u</span><span class=\"s1\">'java.lang:name=Code Cache,type=MemoryPool'</span><span class=\"p\">,</span>\n               <span class=\"sa\">u</span><span class=\"s1\">'java.lang:type=Runtime'</span><span class=\"p\">,</span>\n               <span class=\"sa\">u</span><span class=\"s1\">'java.lang:type=ClassLoading'</span><span class=\"p\">,</span>\n               <span class=\"sa\">u</span><span class=\"s1\">'java.lang:name=ConcurrentMarkSweep,type=GarbageCollector'</span><span class=\"p\">,</span>\n               <span class=\"sa\">u</span><span class=\"s1\">'java.lang:type=Threading'</span><span class=\"p\">,</span>\n               <span class=\"sa\">u</span><span class=\"s1\">'java.lang:name=ParNew,type=GarbageCollector'</span><span class=\"p\">,</span>\n               <span class=\"sa\">u</span><span class=\"s1\">'java.lang:type=Compilation'</span><span class=\"p\">,</span>\n               <span class=\"sa\">u</span><span class=\"s1\">'java.lang:name=Par Eden Space,type=MemoryPool'</span><span class=\"p\">,</span>\n               <span class=\"sa\">u</span><span class=\"s1\">'java.lang:name=CMS Perm Gen,type=MemoryPool'</span><span class=\"p\">,</span>\n               <span class=\"sa\">u</span><span class=\"s1\">'java.lang:type=OperatingSystem'</span><span class=\"p\">,</span>\n               <span class=\"sa\">u</span><span class=\"s1\">'java.lang:name=Par Survivor Space,type=MemoryPool'</span><span class=\"p\">,</span>\n               <span class=\"sa\">u</span><span class=\"s1\">'java.lang:name=CodeCacheManager,type=MemoryManager'</span><span class=\"p\">]}</span>\n</pre>\n</div>\n<div id=\"list-request\">\n<h3>List Request</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyjolokia</span> <span class=\"kn\">import</span> <span class=\"n\">Jolokia</span>\n<span class=\"n\">j4p</span> <span class=\"o\">=</span> <span class=\"n\">Jolokia</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost:8080/jolokia/'</span><span class=\"p\">)</span>\n<span class=\"n\">j4p</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"s1\">'list'</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s1\">'java.lang/type=Memory'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"p\">{</span><span class=\"sa\">u</span><span class=\"s1\">'request'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"sa\">u</span><span class=\"s1\">'path'</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s1\">'java.lang/type=Memory'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s1\">'list'</span><span class=\"p\">},</span>\n                 <span class=\"sa\">u</span><span class=\"s1\">'status'</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">,</span>\n                 <span class=\"sa\">u</span><span class=\"s1\">'timestamp'</span><span class=\"p\">:</span> <span class=\"mi\">1324258206</span><span class=\"p\">,</span>\n    <span class=\"sa\">u</span><span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"sa\">u</span><span class=\"s1\">'attr'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"sa\">u</span><span class=\"s1\">'HeapMemoryUsage'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"sa\">u</span><span class=\"s1\">'desc'</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s1\">'HeapMemoryUsage'</span><span class=\"p\">,</span>\n                                              <span class=\"sa\">u</span><span class=\"s1\">'rw'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n                                              <span class=\"sa\">u</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s1\">'javax.management.openmbean.CompositeData'</span><span class=\"p\">},</span>\n                                              <span class=\"o\">...</span>\n</pre>\n</div>\n<div id=\"bulk-requsts\">\n<h3>Bulk Requsts</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyjolokia</span> <span class=\"kn\">import</span> <span class=\"n\">Jolokia</span>\n<span class=\"c1\"># Enter the jolokia url</span>\n<span class=\"n\">j4p</span> <span class=\"o\">=</span> <span class=\"n\">Jolokia</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost:8080/jolokia/'</span><span class=\"p\">)</span>\n<span class=\"sd\">'''\n    Put as many requests as you want.\n'''</span>\n<span class=\"n\">j4p</span><span class=\"o\">.</span><span class=\"n\">add_request</span><span class=\"p\">(</span><span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"s1\">'read'</span><span class=\"p\">,</span> <span class=\"n\">mbean</span><span class=\"o\">=</span><span class=\"s1\">'java.lang:type=Memory'</span><span class=\"p\">)</span>\n<span class=\"n\">j4p</span><span class=\"o\">.</span><span class=\"n\">add_request</span><span class=\"p\">(</span><span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"s1\">'read'</span><span class=\"p\">,</span> <span class=\"n\">mbean</span><span class=\"o\">=</span><span class=\"s1\">'java.lang:type=Threading'</span><span class=\"p\">,</span> <span class=\"n\">attribute</span><span class=\"o\">=</span><span class=\"s1\">'ThreadCount'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Actull json request will be sent here</span>\n<span class=\"n\">bulkdata</span> <span class=\"o\">=</span> <span class=\"n\">j4p</span><span class=\"o\">.</span><span class=\"n\">getRequests</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"proxy-mode\">\n<h3>Proxy Mode</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyjolokia</span> <span class=\"kn\">import</span> <span class=\"n\">Jolokia</span>\n<span class=\"n\">j4p</span> <span class=\"o\">=</span> <span class=\"n\">Jolokia</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost:8080/jolokia/'</span><span class=\"p\">)</span>\n<span class=\"n\">j4p</span><span class=\"o\">.</span><span class=\"n\">proxy</span><span class=\"p\">(</span><span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s1\">'service:jmx:rmi://localhost:8080'</span><span class=\"p\">,</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"s1\">'SomeUser'</span><span class=\"p\">,</span> <span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"s1\">'somePassword'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Do normal requests here. All requests ill have the proxy info.</span>\n<span class=\"o\">...</span>\n</pre>\n</div>\n<div id=\"http-basic-authentication\">\n<h3>HTTP Basic Authentication</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyjolokia</span> <span class=\"kn\">import</span> <span class=\"n\">Jolokia</span>\n<span class=\"n\">j4p</span> <span class=\"o\">=</span> <span class=\"n\">Jolokia</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost:8080/jolokia/'</span><span class=\"p\">)</span>\n<span class=\"n\">j4p</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"p\">(</span><span class=\"n\">httpusername</span><span class=\"o\">=</span><span class=\"s1\">'this'</span><span class=\"p\">,</span> <span class=\"n\">httppassword</span><span class=\"o\">=</span><span class=\"s1\">'that'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Do normal requests here. All requests ill have the proxy info.</span>\n<span class=\"o\">...</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1053655, "releases": {"0.1": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "411d5b487eda9dbc526039c86645b0e2", "sha256": "e43e94ad67a2a6d25aa2918e6889a77295ec0bc5fa2d0f382e03b2e4329c620f"}, "downloads": -1, "filename": "pyjolokia-0.1.1.tar.gz", "has_sig": false, "md5_digest": "411d5b487eda9dbc526039c86645b0e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1679, "upload_time": "2012-12-12T14:31:50", "upload_time_iso_8601": "2012-12-12T14:31:50.844862Z", "url": "https://files.pythonhosted.org/packages/b2/d3/1c158b5205a94fe4153cfaa483cf21ea05a5d8b4341e813b972dc846416a/pyjolokia-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "ed912f76a87e2722fab9dfda65162f85", "sha256": "eb148052fc44edc33fe727e883a2a7501196dc32535591ea39a05e4263cfb1d9"}, "downloads": -1, "filename": "pyjolokia-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ed912f76a87e2722fab9dfda65162f85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4072, "upload_time": "2013-09-30T00:08:54", "upload_time_iso_8601": "2013-09-30T00:08:54.620771Z", "url": "https://files.pythonhosted.org/packages/3a/6a/03b76286ebc13b47487ac14285d00623b1239d6c12e5f8331afa726365a7/pyjolokia-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "660837b9009fd82a725133a5e2ca24a2", "sha256": "2b400ebb55e900acae092c1a3fd7f61dce00729e700143587493da0a6b6d656b"}, "downloads": -1, "filename": "pyjolokia-0.3.0-py2.7.egg", "has_sig": false, "md5_digest": "660837b9009fd82a725133a5e2ca24a2", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 6564, "upload_time": "2013-12-01T03:26:08", "upload_time_iso_8601": "2013-12-01T03:26:08.873592Z", "url": "https://files.pythonhosted.org/packages/56/e5/76717104b8e9eb68beef54b1534a75a2bc400053df2af5512421f3ccb40f/pyjolokia-0.3.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e89b4e64e86a06f4bb46396c1aeb78f3", "sha256": "a6bfc2e7263daf48dfbad02d08ae6a4023a4e80f8e8648d4484f0beff8c5e6df"}, "downloads": -1, "filename": "pyjolokia-0.3.0.tar.gz", "has_sig": false, "md5_digest": "e89b4e64e86a06f4bb46396c1aeb78f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 160861, "upload_time": "2013-10-03T02:46:13", "upload_time_iso_8601": "2013-10-03T02:46:13.359482Z", "url": "https://files.pythonhosted.org/packages/5b/3f/61b08d3c1e0d4409289fd6ba967da942c72df095eb08526afbf4aba9d67d/pyjolokia-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "fbdb3962c2cfe087c2e64a4e1434481f", "sha256": "3c16ca0a8526db7341df3c511142803a6c148b471e885bfdf16760c1b1ab2769"}, "downloads": -1, "filename": "pyjolokia-0.3.1.tar.gz", "has_sig": false, "md5_digest": "fbdb3962c2cfe087c2e64a4e1434481f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 161066, "upload_time": "2014-04-07T13:18:06", "upload_time_iso_8601": "2014-04-07T13:18:06.671349Z", "url": "https://files.pythonhosted.org/packages/16/ae/921bde64437f1fa27aa405c34c30be4456a5e9f80fe6a5fcc0ae9e36eee5/pyjolokia-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fbdb3962c2cfe087c2e64a4e1434481f", "sha256": "3c16ca0a8526db7341df3c511142803a6c148b471e885bfdf16760c1b1ab2769"}, "downloads": -1, "filename": "pyjolokia-0.3.1.tar.gz", "has_sig": false, "md5_digest": "fbdb3962c2cfe087c2e64a4e1434481f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 161066, "upload_time": "2014-04-07T13:18:06", "upload_time_iso_8601": "2014-04-07T13:18:06.671349Z", "url": "https://files.pythonhosted.org/packages/16/ae/921bde64437f1fa27aa405c34c30be4456a5e9f80fe6a5fcc0ae9e36eee5/pyjolokia-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:45 2020"}