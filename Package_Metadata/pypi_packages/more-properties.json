{"info": {"author": "Robert Wright", "author_email": "madman.bob@hotmail.co.uk", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# `more_properties`\n\nA collection of `property` variants.\n\n## Basic Usage\n\nVariants behave mostly as the built-in `property`, except where noted.\n\nGiven the following class,\n\n```python\nfrom more_properties import property, class_property, static_property\n\n\nclass Parrot:\n    @property\n    def name(self):\n        return \"Fred\"\n\n    @class_property\n    def order(cls):\n        return Psittaciformes\n\n    @static_property\n    def planet():\n        return Earth\n```\n\nthe properties may be accessed like so:\n\n```pycon\n>>> Parrot().name\n'Fred'\n>>> Parrot.order\n<class 'Psittaciformes'>\n>>> Parrot.planet\n<class 'Earth'>\n```\n\n## Setters/Deleters\n\nSetters and deleters are defined in the same way as the built-in `property`.\nEither with the decorator method\n\n```python\nfrom more_properties import class_property\n\n\nclass Foo:\n    name = \"Foo\"\n\n    @class_property\n    def identifier(cls):\n        \"\"\"Object identifier\"\"\"\n        return cls.name.lower()\n\n    @identifier.setter\n    def identifier(cls, value):\n        cls.name = value.title()\n\n    @identifier.deleter\n    def identifier(cls):\n        cls.name = None\n```\n\nor the inline method\n\n```python\nfrom more_properties import class_property\n\n\nclass Foo:\n    name = \"Foo\"\n\n    @classmethod\n    def get_identifier(cls):\n        return cls.name.lower()\n\n    @classmethod\n    def set_identifier(cls, value):\n        cls.name = value.title()\n\n    @classmethod\n    def del_identifier(cls):\n        cls.name = None\n\n    identifier = class_property(\n        get_identifier,\n        set_identifier,\n        del_identifier,\n        \"Object identifier\"\n    )\n```\n\n## Reference\n\n### `property`\n\nA modified version of the built-in [`property`](https://docs.python.org/3/library/functions.html#property).\n\nAlways behaves as a\n[data descriptor](https://docs.python.org/3/howto/descriptor.html#descriptor-protocol),\nregardless of which (if any) of getter, setter, and deleter are set.\n\nBehaviour when accessed on a class, is undefined.\n\n### `class_property`\n\nA `property` for classes.\nBoth `cls.x` and `instance.x` call the getter with the class.\nSetting `instance.x` calls the setter with the class and value.\nDeleting `instance.x` call the deleter with the class only.\n\n```python\nfrom more_properties import class_property\n\n\nclass Foo:\n    @class_property\n    def identifier(cls):\n        \"\"\"Class identifier\"\"\"\n        return cls.__name__.lower()\n\n\nclass Bar(Foo):\n    pass\n```\n\n```pycon\n>>> Foo.identifier\n'foo'\n>>> Foo().identifier\n'foo'\n```\n\n```pycon\n>>> Bar.identifier\n'bar'\n>>> Bar().identifier\n'bar'\n```\n\n`classproperty` provided as a synonym, for consistency with `classmethod`.\n\n<aside class=\"warning\">\n    <p>\n        Due to the\n        <a href=\"https://docs.python.org/3/reference/datamodel.html#object.__set__\">Python data model</a>,\n        using the setters/deleters on <em>classes</em> may not work as intended.\n    </p>\n    <p>\n        Getters always work as intended, and using setters/deleters on <em>instances</em> work as intended.\n    </p>\n</aside>\n\n### `static_property`\n\nA `property` independent of its accessor.\nBoth `cls.x` and `instance.x` call the getter with no parameters.\nSetting `instance.x` calls the setter with the value only.\nDeleting `instance.x` call the deleter with no parameters.\n\n```python\nfrom more_properties import static_property\n\n\nx = \"bar\"\n\nclass Foo:\n    @static_property\n    def val():\n        return x\n```\n\n```pycon\n>>> Foo.val\n'bar'\n>>> Foo().val\n'bar'\n```\n\n`staticproperty` provided as a synonym, for consistency with `staticmethod`.\n\n<aside class=\"warning\">\n    <p>\n        Due to the\n        <a href=\"https://docs.python.org/3/reference/datamodel.html#object.__set__\">Python data model</a>,\n        using the setters/deleters on <em>classes</em> may not work as intended.\n    </p>\n    <p>\n        Getters always work as intended, and using setters/deleters on <em>instances</em> work as intended.\n    </p>\n</aside>\n\n### `cached_property`\n### `cached_class_property`\n### `cached_static_property`\n\nVariants of `property`, `class_property`, and `static_property`, respectively.\n\nThey are each used in the same way as the originals,\nbut cache the value of the getters.\n\n```python\nfrom dataclasses import dataclass\n\nfrom more_properties import cached_property\n\n\n@dataclass\nclass Foo:\n    x: int\n\n    @cached_property\n    def y(self):\n        print(\"Doing work\")\n        return self.x + 1\n```\n\n```pycon\n>>> bar = Foo(1)\n>>> bar.y\nDoing work\n2\n>>> bar.y\n2\n```\n\n## Installation\n\nInstall and update using the standard Python package manager [pip](https://pip.pypa.io/en/stable/):\n\n```bash\npip install more_properties\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/madman-bob/python-more-properties", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "more-properties", "package_url": "https://pypi.org/project/more-properties/", "platform": "", "project_url": "https://pypi.org/project/more-properties/", "project_urls": {"Homepage": "https://github.com/madman-bob/python-more-properties"}, "release_url": "https://pypi.org/project/more-properties/1.0.0/", "requires_dist": ["dataclasses"], "requires_python": ">=3.6", "summary": "A collection of property variants", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1><code>more_properties</code></h1>\n<p>A collection of <code>property</code> variants.</p>\n<h2>Basic Usage</h2>\n<p>Variants behave mostly as the built-in <code>property</code>, except where noted.</p>\n<p>Given the following class,</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">more_properties</span> <span class=\"kn\">import</span> <span class=\"nb\">property</span><span class=\"p\">,</span> <span class=\"n\">class_property</span><span class=\"p\">,</span> <span class=\"n\">static_property</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Parrot</span><span class=\"p\">:</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">\"Fred\"</span>\n\n    <span class=\"nd\">@class_property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">order</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">Psittaciformes</span>\n\n    <span class=\"nd\">@static_property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">planet</span><span class=\"p\">():</span>\n        <span class=\"k\">return</span> <span class=\"n\">Earth</span>\n</pre>\n<p>the properties may be accessed like so:</p>\n<pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Parrot</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">name</span>\n<span class=\"go\">'Fred'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Parrot</span><span class=\"o\">.</span><span class=\"n\">order</span>\n<span class=\"go\">&lt;class 'Psittaciformes'&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Parrot</span><span class=\"o\">.</span><span class=\"n\">planet</span>\n<span class=\"go\">&lt;class 'Earth'&gt;</span>\n</pre>\n<h2>Setters/Deleters</h2>\n<p>Setters and deleters are defined in the same way as the built-in <code>property</code>.\nEither with the decorator method</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">more_properties</span> <span class=\"kn\">import</span> <span class=\"n\">class_property</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Foo</span><span class=\"p\">:</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"Foo\"</span>\n\n    <span class=\"nd\">@class_property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">identifier</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Object identifier\"\"\"</span>\n        <span class=\"k\">return</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@identifier</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">identifier</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@identifier</span><span class=\"o\">.</span><span class=\"n\">deleter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">identifier</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">):</span>\n        <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n</pre>\n<p>or the inline method</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">more_properties</span> <span class=\"kn\">import</span> <span class=\"n\">class_property</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Foo</span><span class=\"p\">:</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"Foo\"</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_identifier</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_identifier</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">del_identifier</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">):</span>\n        <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"n\">identifier</span> <span class=\"o\">=</span> <span class=\"n\">class_property</span><span class=\"p\">(</span>\n        <span class=\"n\">get_identifier</span><span class=\"p\">,</span>\n        <span class=\"n\">set_identifier</span><span class=\"p\">,</span>\n        <span class=\"n\">del_identifier</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"Object identifier\"</span>\n    <span class=\"p\">)</span>\n</pre>\n<h2>Reference</h2>\n<h3><code>property</code></h3>\n<p>A modified version of the built-in <a href=\"https://docs.python.org/3/library/functions.html#property\" rel=\"nofollow\"><code>property</code></a>.</p>\n<p>Always behaves as a\n<a href=\"https://docs.python.org/3/howto/descriptor.html#descriptor-protocol\" rel=\"nofollow\">data descriptor</a>,\nregardless of which (if any) of getter, setter, and deleter are set.</p>\n<p>Behaviour when accessed on a class, is undefined.</p>\n<h3><code>class_property</code></h3>\n<p>A <code>property</code> for classes.\nBoth <code>cls.x</code> and <code>instance.x</code> call the getter with the class.\nSetting <code>instance.x</code> calls the setter with the class and value.\nDeleting <code>instance.x</code> call the deleter with the class only.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">more_properties</span> <span class=\"kn\">import</span> <span class=\"n\">class_property</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Foo</span><span class=\"p\">:</span>\n    <span class=\"nd\">@class_property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">identifier</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Class identifier\"\"\"</span>\n        <span class=\"k\">return</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Bar</span><span class=\"p\">(</span><span class=\"n\">Foo</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre>\n<pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Foo</span><span class=\"o\">.</span><span class=\"n\">identifier</span>\n<span class=\"go\">'foo'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Foo</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">identifier</span>\n<span class=\"go\">'foo'</span>\n</pre>\n<pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Bar</span><span class=\"o\">.</span><span class=\"n\">identifier</span>\n<span class=\"go\">'bar'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Bar</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">identifier</span>\n<span class=\"go\">'bar'</span>\n</pre>\n<p><code>classproperty</code> provided as a synonym, for consistency with <code>classmethod</code>.</p>\n&lt;aside class=\"warning\"&gt;\n    <p>\n        Due to the\n        <a href=\"https://docs.python.org/3/reference/datamodel.html#object.__set__\" rel=\"nofollow\">Python data model</a>,\n        using the setters/deleters on <em>classes</em> may not work as intended.\n    </p>\n    <p>\n        Getters always work as intended, and using setters/deleters on <em>instances</em> work as intended.\n    </p>\n&lt;/aside&gt;\n<h3><code>static_property</code></h3>\n<p>A <code>property</code> independent of its accessor.\nBoth <code>cls.x</code> and <code>instance.x</code> call the getter with no parameters.\nSetting <code>instance.x</code> calls the setter with the value only.\nDeleting <code>instance.x</code> call the deleter with no parameters.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">more_properties</span> <span class=\"kn\">import</span> <span class=\"n\">static_property</span>\n\n\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"s2\">\"bar\"</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Foo</span><span class=\"p\">:</span>\n    <span class=\"nd\">@static_property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">val</span><span class=\"p\">():</span>\n        <span class=\"k\">return</span> <span class=\"n\">x</span>\n</pre>\n<pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Foo</span><span class=\"o\">.</span><span class=\"n\">val</span>\n<span class=\"go\">'bar'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Foo</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">val</span>\n<span class=\"go\">'bar'</span>\n</pre>\n<p><code>staticproperty</code> provided as a synonym, for consistency with <code>staticmethod</code>.</p>\n&lt;aside class=\"warning\"&gt;\n    <p>\n        Due to the\n        <a href=\"https://docs.python.org/3/reference/datamodel.html#object.__set__\" rel=\"nofollow\">Python data model</a>,\n        using the setters/deleters on <em>classes</em> may not work as intended.\n    </p>\n    <p>\n        Getters always work as intended, and using setters/deleters on <em>instances</em> work as intended.\n    </p>\n&lt;/aside&gt;\n<h3><code>cached_property</code></h3>\n<h3><code>cached_class_property</code></h3>\n<h3><code>cached_static_property</code></h3>\n<p>Variants of <code>property</code>, <code>class_property</code>, and <code>static_property</code>, respectively.</p>\n<p>They are each used in the same way as the originals,\nbut cache the value of the getters.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dataclasses</span> <span class=\"kn\">import</span> <span class=\"n\">dataclass</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">more_properties</span> <span class=\"kn\">import</span> <span class=\"n\">cached_property</span>\n\n\n<span class=\"nd\">@dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">Foo</span><span class=\"p\">:</span>\n    <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n\n    <span class=\"nd\">@cached_property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">y</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Doing work\"</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n</pre>\n<pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bar</span> <span class=\"o\">=</span> <span class=\"n\">Foo</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bar</span><span class=\"o\">.</span><span class=\"n\">y</span>\n<span class=\"go\">Doing work</span>\n<span class=\"go\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bar</span><span class=\"o\">.</span><span class=\"n\">y</span>\n<span class=\"go\">2</span>\n</pre>\n<h2>Installation</h2>\n<p>Install and update using the standard Python package manager <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a>:</p>\n<pre>pip install more_properties\n</pre>\n\n          </div>"}, "last_serial": 6791674, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "6f3eaa9f3258fb75573970d918994baa", "sha256": "9ac7ce42491f2dc6fbc3d2df279fc105fe819a84a4fd11618e7b653101612e77"}, "downloads": -1, "filename": "more_properties-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6f3eaa9f3258fb75573970d918994baa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7176, "upload_time": "2020-03-11T11:50:29", "upload_time_iso_8601": "2020-03-11T11:50:29.676327Z", "url": "https://files.pythonhosted.org/packages/bf/07/ce6c33fddaae7441ad1cd7b7f2064b6f145e563191829068780a9b271018/more_properties-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5166f4f2a4f443b515943d968d7e4ae", "sha256": "54e57ca7420678299d13a311cbbfb6a627e32ad18575791e8b7ad86af5e75c33"}, "downloads": -1, "filename": "more_properties-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c5166f4f2a4f443b515943d968d7e4ae", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5596, "upload_time": "2020-03-11T11:50:32", "upload_time_iso_8601": "2020-03-11T11:50:32.056434Z", "url": "https://files.pythonhosted.org/packages/10/d2/d85a2b844b34b4c3a6ce666e8fed1a7227edec3583d713ce58b477b7a921/more_properties-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6f3eaa9f3258fb75573970d918994baa", "sha256": "9ac7ce42491f2dc6fbc3d2df279fc105fe819a84a4fd11618e7b653101612e77"}, "downloads": -1, "filename": "more_properties-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6f3eaa9f3258fb75573970d918994baa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7176, "upload_time": "2020-03-11T11:50:29", "upload_time_iso_8601": "2020-03-11T11:50:29.676327Z", "url": "https://files.pythonhosted.org/packages/bf/07/ce6c33fddaae7441ad1cd7b7f2064b6f145e563191829068780a9b271018/more_properties-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5166f4f2a4f443b515943d968d7e4ae", "sha256": "54e57ca7420678299d13a311cbbfb6a627e32ad18575791e8b7ad86af5e75c33"}, "downloads": -1, "filename": "more_properties-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c5166f4f2a4f443b515943d968d7e4ae", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5596, "upload_time": "2020-03-11T11:50:32", "upload_time_iso_8601": "2020-03-11T11:50:32.056434Z", "url": "https://files.pythonhosted.org/packages/10/d2/d85a2b844b34b4c3a6ce666e8fed1a7227edec3583d713ce58b477b7a921/more_properties-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:49 2020"}