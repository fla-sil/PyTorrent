{"info": {"author": "Oliver Palmer", "author_email": "opalmer@opalmer.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: System :: Networking"], "description": ".. warning::\r\n\r\n    **This package is deprecated.  The original netifaces has been updated making this package unnecessary moving forward.**\r\n\r\nOriginal Credits\r\n================\r\n\r\nThis package is not my own.  Full credit for the original code goes to \r\nAlastair Houghton [alastair AT alastairs-place DOT net] for his netifaces \r\npackage.  Credit also goes to Kevin Kelley [kelleyk AT kelleyk D0T net] for\r\nporting the original netifaces code to Python 3.x and creating the \r\nnetifaces-py3 package.\r\n\r\n\r\nWhat's Different\r\n================\r\n\r\nThis package is a fork from https://github.com/kelleyk/py3k-netifaces with\r\nminor changes.  These changes include:\r\n\r\n    * A version number that follows the standard major.minor.micro naming spec.\r\n    * Update to setup.py which fixes some issues with Python 2.5 (the original\r\n      package support Python 2.5\r\n    * Removal of minisix as a dependency\r\n    * merged code from https://gist.github.com/opalmer/6558607 which fixes a\r\n      bug during compilation on Windows.  This patch was submitted to the\r\n      original author of netifaces but was never responded to.\r\n\r\n\r\nWhy This Package Was Created\r\n============================\r\n\r\nNormally when problems are encountered in open source Python packages you should\r\nsubmit a patch to the author, have it reviewed, and then finally merged.  \r\nSometimes this doesn't happen however and for one reason or another the package\r\nis replicated, fixed, and then released under another name.\r\n\r\nSo why was netifaces-merged created?  There are a few reasons why I've \r\ncreated this package but overall the reasons are cross-platform stability and\r\nso that a single package can be used across Python versions without the need\r\nfor external dependencies.\r\n\r\nThe first problem when trying to accomplish this was that netifaces contained\r\na bug which broke the Windows build.  I emailed the author about it and included\r\na patch but unfortunately never received a reply back.  Although there were\r\nways to work around it, such as monkey patching the source when running one of\r\nmy setup.py files, I didn't think this was a great solution either for my own\r\nlibraries or for anyone else using netifaces in the future.\r\n\r\nFast forward a few more months and I started working on converting some of my\r\nlibraries to Python 3.x.  netifaces still had not been updated unfortunately but\r\nsomeone, thank you Kevin Kelley, was nice enough to port it to Python 3.  The \r\nproblem this time was the setup.py wasn't designed to operate in older versions\r\nof Python and also relied on a module that as of this writing didn't exist in\r\nPyPi and was not package with netifaces-py3.  In addition to this the\r\nexisting package in PyPi, which is classed as a dumb binary, failed to install\r\ninto a virtual environment using pip.\r\n\r\nI welcome the opportunity to merge both my work and Kevin's into netifaces\r\nbut until that happens I'll be maintaining this package for the foreseeable\r\nfuture.\r\n\r\nnetifaces 0.9.0\r\n===============\r\n\r\n1. What is this?\r\n----------------\r\n\r\nIt's been annoying me for some time that there's no easy way to get the\r\naddress(es) of the machine's network interfaces from Python.  There is\r\na good reason for this difficulty, which is that it is virtually impossible\r\nto do so in a portable manner.  However, it seems to me that there should\r\nbe a package you can easy_install that will take care of working out the\r\ndetails of doing so on the machine you're using, then you can get on with\r\nwriting Python code without concerning yourself with the nitty gritty of\r\nsystem-dependent low-level networking APIs.\r\n\r\nThis package attempts to solve that problem.\r\n\r\n2. How do I use it?\r\n-------------------\r\n\r\nFirst you need to install it, which you can do by typing\r\n\r\n  tar xvzf netifaces-0.4.tar.gz\r\n  cd netifaces-0.4\r\n  python setup.py install\r\n\r\nOnce that's done, you'll need to start Python and do something like the\r\nfollowing:\r\n\r\n  >>> import netifaces\r\n\r\nThen if you enter\r\n\r\n  >>> netifaces.interfaces()\r\n  ['lo0', 'gif0', 'stf0', 'en0', 'en1', 'fw0']\r\n\r\nyou'll see the list of interface identifiers for your machine.\r\n\r\nYou can ask for the addresses of a particular interface by doing\r\n\r\n  >>> netifaces.ifaddresses('lo0')\r\n  {18: [{'addr': ''}], 2: [{'peer': '127.0.0.1', 'netmask': '255.0.0.0', 'addr': '127.0.0.1'}], 30: [{'peer': '::1', 'netmask': 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff', 'addr': '::1'}, {'peer': '', 'netmask': 'ffff:ffff:ffff:ffff::', 'addr': 'fe80::1%lo0'}]}\r\n\r\nHmmmm.  That result looks a bit cryptic; let's break it apart and explain\r\nwhat each piece means.  It returned a dictionary, so let's look there first:\r\n\r\n  { 18: [...], 2: [...], 30: [...] }\r\n\r\nEach of the numbers refers to a particular address family.  In this case, we\r\nhave three address families listed; on my system, 18 is AF_LINK (which means\r\nthe link layer interface, e.g. Ethernet), 2 is AF_INET (normal Internet\r\naddresses), and 30 is AF_INET6 (IPv6).\r\n\r\nBut wait!  Don't use these numbers in your code.  The numeric values here are\r\nsystem dependent; fortunately, I thought of that when writing netifaces, so\r\nthe module declares a range of values that you might need.  e.g.\r\n\r\n  >>> netifaces.AF_LINK\r\n  18\r\n\r\nAgain, on your system, the number may be different.\r\n\r\nSo, what we've established is that the dictionary that's returned has one\r\nentry for each address family for which this interface has an address.  Let's\r\ntake a look at the AF_INET addresses now:\r\n\r\n  >>> addrs = netifaces.ifaddresses('lo0')\r\n  >>> addrs[netifaces.AF_INET]\r\n  [{'peer': '127.0.0.1', 'netmask': '255.0.0.0', 'addr': '127.0.0.1'}]\r\n\r\nYou might be wondering why this value is a list.  The reason is that it's\r\npossible for an interface to have more than one address, even within the\r\nsame family.  I'll say that again: *you can have more than one address of\r\nthe same type associated with each interface*.\r\n\r\n*Asking for \"the\" address of a particular interface doesn't make sense.*\r\n\r\nRight, so, we can see that this particular interface only has one address,\r\nand, because it's a loopback interface, it's point-to-point and therefore\r\nhas a *peer* address rather than a broadcast address.\r\n\r\nLet's look at a more interesting interface.\r\n\r\n  >>> addrs = netifaces.ifaddresses('en0')\r\n  >>> addrs[netifaces.AF_INET]\r\n  [{'broadcast': '10.15.255.255', 'netmask': '255.240.0.0', 'addr': '10.0.1.4'}, {'broadcast': '192.168.0.255', 'addr': '192.168.0.47'}]\r\n\r\nThis interface has two addresses (see, I told you...)  Both of them are\r\nregular IPv4 addresses, although in one case the netmask has been changed\r\nfrom its default.  The netmask *may not* appear on your system if it's set\r\nto the default for the address range.\r\n\r\nBecause this interface isn't point-to-point, it also has broadcast addresses.\r\n\r\nNow, say we want, instead of the IP addresses, to get the MAC address; that\r\nis, the hardware address of the Ethernet adapter running this interface.  We\r\ncan do\r\n\r\n  >>> addrs[netifaces.AF_LINK]\r\n  [{'addr': '00:12:34:56:78:9a'}]\r\n\r\nNote that this may not be available on platforms without getifaddrs(), unless\r\nthey happen to implement SIOCGIFHWADDR.  Note also that you just get the\r\naddress; it's unlikely that you'll see anything else with an AF_LINK address.\r\nOh, and don't assume that all AF_LINK addresses are Ethernet; you might, for\r\ninstance, be on a Mac, in which case:\r\n\r\n  >>> addrs = netifaces.ifaddresses('fw0')\r\n  >>> addrs[netifaces.AF_LINK]\r\n  [{'addr': '00:12:34:56:78:9a:bc:de'}]\r\n\r\nNo, that isn't an exceptionally long Ethernet MAC address---it's a FireWire\r\naddress.\r\n\r\n3. This is great!  What platforms does it work on?\r\n--------------------------------------------------\r\n\r\nWell, see, here's the thing.  It's been tested on Mac OS X, and it seems to\r\nwork.  (OS X helpfully has some of the SIOCGIFxxx ioctl()s, which means that\r\nmost of those have been tested too, the only glaring exception being the\r\nSIOCGIFHWADDR ioctl(), which OS X just doesn't have.)\r\n\r\nIt should probably work on most of the other UNIX-like systems with relatively\r\nminor changes.  If you do have to change something, send it to me at\r\n<alastair AT alastairs-place.net> and I'll see if I can merge it in.\r\n\r\nIt also works just fine on Windows, using the GetAdaptersInfo() function.\r\nNote, though, that on Windows it isn't possible (yet) to retrieve IPv6\r\naddresses.  I don't use Windows at the moment, so this isn't a priority for\r\nme.  If you know how to fix it, drop me a line and I'll consider adding any\r\nnecessary code.\r\n\r\n4. What license is this under?\r\n------------------------------\r\n\r\nIt's an MIT-style license.  Here goes:\r\n\r\n| Copyright (c) 2007, 2008 Alastair Houghton\r\n| Copyright (c) 2011 Kevin Kelley\r\n| Copyright (c) 2013 Oliver Palmer\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\n.. warning::\r\n\r\n    **This package is deprecated.  The original netifaces has been updated making this package unnecessary moving forward.**", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/opalmer/netifaces-merged", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "netifaces-merged", "package_url": "https://pypi.org/project/netifaces-merged/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/netifaces-merged/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/opalmer/netifaces-merged"}, "release_url": "https://pypi.org/project/netifaces-merged/0.9.0/", "requires_dist": null, "requires_python": null, "summary": "Portable network interface information.", "version": "0.9.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n<p>Warning</p>\n<p><strong>This package is deprecated.  The original netifaces has been updated making this package unnecessary moving forward.</strong></p>\n</div>\n<div id=\"original-credits\">\n<h2>Original Credits</h2>\n<p>This package is not my own.  Full credit for the original code goes to\nAlastair Houghton [alastair AT alastairs-place DOT net] for his netifaces\npackage.  Credit also goes to Kevin Kelley [kelleyk AT kelleyk D0T net] for\nporting the original netifaces code to Python 3.x and creating the\nnetifaces-py3 package.</p>\n</div>\n<div id=\"what-s-different\">\n<h2>What\u2019s Different</h2>\n<p>This package is a fork from <a href=\"https://github.com/kelleyk/py3k-netifaces\" rel=\"nofollow\">https://github.com/kelleyk/py3k-netifaces</a> with\nminor changes.  These changes include:</p>\n<blockquote>\n<ul>\n<li>A version number that follows the standard major.minor.micro naming spec.</li>\n<li>Update to setup.py which fixes some issues with Python 2.5 (the original\npackage support Python 2.5</li>\n<li>Removal of minisix as a dependency</li>\n<li>merged code from <a href=\"https://gist.github.com/opalmer/6558607\" rel=\"nofollow\">https://gist.github.com/opalmer/6558607</a> which fixes a\nbug during compilation on Windows.  This patch was submitted to the\noriginal author of netifaces but was never responded to.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"why-this-package-was-created\">\n<h2>Why This Package Was Created</h2>\n<p>Normally when problems are encountered in open source Python packages you should\nsubmit a patch to the author, have it reviewed, and then finally merged.\nSometimes this doesn\u2019t happen however and for one reason or another the package\nis replicated, fixed, and then released under another name.</p>\n<p>So why was netifaces-merged created?  There are a few reasons why I\u2019ve\ncreated this package but overall the reasons are cross-platform stability and\nso that a single package can be used across Python versions without the need\nfor external dependencies.</p>\n<p>The first problem when trying to accomplish this was that netifaces contained\na bug which broke the Windows build.  I emailed the author about it and included\na patch but unfortunately never received a reply back.  Although there were\nways to work around it, such as monkey patching the source when running one of\nmy setup.py files, I didn\u2019t think this was a great solution either for my own\nlibraries or for anyone else using netifaces in the future.</p>\n<p>Fast forward a few more months and I started working on converting some of my\nlibraries to Python 3.x.  netifaces still had not been updated unfortunately but\nsomeone, thank you Kevin Kelley, was nice enough to port it to Python 3.  The\nproblem this time was the setup.py wasn\u2019t designed to operate in older versions\nof Python and also relied on a module that as of this writing didn\u2019t exist in\nPyPi and was not package with netifaces-py3.  In addition to this the\nexisting package in PyPi, which is classed as a dumb binary, failed to install\ninto a virtual environment using pip.</p>\n<p>I welcome the opportunity to merge both my work and Kevin\u2019s into netifaces\nbut until that happens I\u2019ll be maintaining this package for the foreseeable\nfuture.</p>\n</div>\n<div id=\"netifaces-0-9-0\">\n<h2>netifaces 0.9.0</h2>\n<div id=\"what-is-this\">\n<h3>1. What is this?</h3>\n<p>It\u2019s been annoying me for some time that there\u2019s no easy way to get the\naddress(es) of the machine\u2019s network interfaces from Python.  There is\na good reason for this difficulty, which is that it is virtually impossible\nto do so in a portable manner.  However, it seems to me that there should\nbe a package you can easy_install that will take care of working out the\ndetails of doing so on the machine you\u2019re using, then you can get on with\nwriting Python code without concerning yourself with the nitty gritty of\nsystem-dependent low-level networking APIs.</p>\n<p>This package attempts to solve that problem.</p>\n</div>\n<div id=\"how-do-i-use-it\">\n<h3>2. How do I use it?</h3>\n<p>First you need to install it, which you can do by typing</p>\n<blockquote>\ntar xvzf netifaces-0.4.tar.gz\ncd netifaces-0.4\npython setup.py install</blockquote>\n<p>Once that\u2019s done, you\u2019ll need to start Python and do something like the\nfollowing:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import netifaces\n</pre>\n</blockquote>\n<p>Then if you enter</p>\n<blockquote>\n<pre>&gt;&gt;&gt; netifaces.interfaces()\n['lo0', 'gif0', 'stf0', 'en0', 'en1', 'fw0']\n</pre>\n</blockquote>\n<p>you\u2019ll see the list of interface identifiers for your machine.</p>\n<p>You can ask for the addresses of a particular interface by doing</p>\n<blockquote>\n<pre>&gt;&gt;&gt; netifaces.ifaddresses('lo0')\n{18: [{'addr': ''}], 2: [{'peer': '127.0.0.1', 'netmask': '255.0.0.0', 'addr': '127.0.0.1'}], 30: [{'peer': '::1', 'netmask': 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff', 'addr': '::1'}, {'peer': '', 'netmask': 'ffff:ffff:ffff:ffff::', 'addr': 'fe80::1%lo0'}]}\n</pre>\n</blockquote>\n<p>Hmmmm.  That result looks a bit cryptic; let\u2019s break it apart and explain\nwhat each piece means.  It returned a dictionary, so let\u2019s look there first:</p>\n<blockquote>\n{ 18: [\u2026], 2: [\u2026], 30: [\u2026] }</blockquote>\n<p>Each of the numbers refers to a particular address family.  In this case, we\nhave three address families listed; on my system, 18 is AF_LINK (which means\nthe link layer interface, e.g. Ethernet), 2 is AF_INET (normal Internet\naddresses), and 30 is AF_INET6 (IPv6).</p>\n<p>But wait!  Don\u2019t use these numbers in your code.  The numeric values here are\nsystem dependent; fortunately, I thought of that when writing netifaces, so\nthe module declares a range of values that you might need.  e.g.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; netifaces.AF_LINK\n18\n</pre>\n</blockquote>\n<p>Again, on your system, the number may be different.</p>\n<p>So, what we\u2019ve established is that the dictionary that\u2019s returned has one\nentry for each address family for which this interface has an address.  Let\u2019s\ntake a look at the AF_INET addresses now:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; addrs = netifaces.ifaddresses('lo0')\n&gt;&gt;&gt; addrs[netifaces.AF_INET]\n[{'peer': '127.0.0.1', 'netmask': '255.0.0.0', 'addr': '127.0.0.1'}]\n</pre>\n</blockquote>\n<p>You might be wondering why this value is a list.  The reason is that it\u2019s\npossible for an interface to have more than one address, even within the\nsame family.  I\u2019ll say that again: <em>you can have more than one address of\nthe same type associated with each interface</em>.</p>\n<p><em>Asking for \u201cthe\u201d address of a particular interface doesn\u2019t make sense.</em></p>\n<p>Right, so, we can see that this particular interface only has one address,\nand, because it\u2019s a loopback interface, it\u2019s point-to-point and therefore\nhas a <em>peer</em> address rather than a broadcast address.</p>\n<p>Let\u2019s look at a more interesting interface.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; addrs = netifaces.ifaddresses('en0')\n&gt;&gt;&gt; addrs[netifaces.AF_INET]\n[{'broadcast': '10.15.255.255', 'netmask': '255.240.0.0', 'addr': '10.0.1.4'}, {'broadcast': '192.168.0.255', 'addr': '192.168.0.47'}]\n</pre>\n</blockquote>\n<p>This interface has two addresses (see, I told you\u2026)  Both of them are\nregular IPv4 addresses, although in one case the netmask has been changed\nfrom its default.  The netmask <em>may not</em> appear on your system if it\u2019s set\nto the default for the address range.</p>\n<p>Because this interface isn\u2019t point-to-point, it also has broadcast addresses.</p>\n<p>Now, say we want, instead of the IP addresses, to get the MAC address; that\nis, the hardware address of the Ethernet adapter running this interface.  We\ncan do</p>\n<blockquote>\n<pre>&gt;&gt;&gt; addrs[netifaces.AF_LINK]\n[{'addr': '00:12:34:56:78:9a'}]\n</pre>\n</blockquote>\n<p>Note that this may not be available on platforms without getifaddrs(), unless\nthey happen to implement SIOCGIFHWADDR.  Note also that you just get the\naddress; it\u2019s unlikely that you\u2019ll see anything else with an AF_LINK address.\nOh, and don\u2019t assume that all AF_LINK addresses are Ethernet; you might, for\ninstance, be on a Mac, in which case:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; addrs = netifaces.ifaddresses('fw0')\n&gt;&gt;&gt; addrs[netifaces.AF_LINK]\n[{'addr': '00:12:34:56:78:9a:bc:de'}]\n</pre>\n</blockquote>\n<p>No, that isn\u2019t an exceptionally long Ethernet MAC address\u2014it\u2019s a FireWire\naddress.</p>\n</div>\n<div id=\"this-is-great-what-platforms-does-it-work-on\">\n<h3>3. This is great!  What platforms does it work on?</h3>\n<p>Well, see, here\u2019s the thing.  It\u2019s been tested on Mac OS X, and it seems to\nwork.  (OS X helpfully has some of the SIOCGIFxxx ioctl()s, which means that\nmost of those have been tested too, the only glaring exception being the\nSIOCGIFHWADDR ioctl(), which OS X just doesn\u2019t have.)</p>\n<p>It should probably work on most of the other UNIX-like systems with relatively\nminor changes.  If you do have to change something, send it to me at\n&lt;alastair AT alastairs-place.net&gt; and I\u2019ll see if I can merge it in.</p>\n<p>It also works just fine on Windows, using the GetAdaptersInfo() function.\nNote, though, that on Windows it isn\u2019t possible (yet) to retrieve IPv6\naddresses.  I don\u2019t use Windows at the moment, so this isn\u2019t a priority for\nme.  If you know how to fix it, drop me a line and I\u2019ll consider adding any\nnecessary code.</p>\n</div>\n<div id=\"what-license-is-this-under\">\n<h3>4. What license is this under?</h3>\n<p>It\u2019s an MIT-style license.  Here goes:</p>\n<div>\n<div>Copyright (c) 2007, 2008 Alastair Houghton</div>\n<div>Copyright (c) 2011 Kevin Kelley</div>\n<div>Copyright (c) 2013 Oliver Palmer</div>\n</div>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \u201cSoftware\u201d), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.</p>\n<div>\n<p>Warning</p>\n<p><strong>This package is deprecated.  The original netifaces has been updated making this package unnecessary moving forward.</strong></p>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1194784, "releases": {"0.9.0": [{"comment_text": "", "digests": {"md5": "a1283bc8f561a90565aecf2865ec9541", "sha256": "4ff742f700b61b9b02aada7eeec401cff56c337fc9fcc2d13209803dd962a974"}, "downloads": -1, "filename": "netifaces_merged-0.9.0-py2.6-linux-x86_64.egg", "has_sig": false, "md5_digest": "a1283bc8f561a90565aecf2865ec9541", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 21078, "upload_time": "2014-01-11T19:53:30", "upload_time_iso_8601": "2014-01-11T19:53:30.154837Z", "url": "https://files.pythonhosted.org/packages/72/c6/e28bea02f78288503e2f67bb4f860904825274e972cf6808c83517031b60/netifaces_merged-0.9.0-py2.6-linux-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "30719b6b37e5afb7d5d6cae11d2f134b", "sha256": "08cf2583c10a23595458ef672404377ee65a5b71c7b04fa0c2cc7990032e3428"}, "downloads": -1, "filename": "netifaces_merged-0.9.0-py2.6-macosx-10.9-intel.egg", "has_sig": false, "md5_digest": "30719b6b37e5afb7d5d6cae11d2f134b", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 12965, "upload_time": "2014-01-11T20:13:22", "upload_time_iso_8601": "2014-01-11T20:13:22.664094Z", "url": "https://files.pythonhosted.org/packages/b5/7f/ba62490881f1094406f98c76c73211f20748dcd332b66698d9a994b98915/netifaces_merged-0.9.0-py2.6-macosx-10.9-intel.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f37e9ef8ec55fdfd91edcb5eee4f83e", "sha256": "91a0aa0f5115d0e02769020805a4eb7a55652aa9acf7f2f167a7a11edf39225b"}, "downloads": -1, "filename": "netifaces_merged-0.9.0-py2.6-win32.egg", "has_sig": false, "md5_digest": "8f37e9ef8ec55fdfd91edcb5eee4f83e", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 12456, "upload_time": "2014-01-14T00:46:37", "upload_time_iso_8601": "2014-01-14T00:46:37.107362Z", "url": "https://files.pythonhosted.org/packages/af/d0/293126e85a16aee865e11510cd155aaabae6397244d209cdd1a610707da8/netifaces_merged-0.9.0-py2.6-win32.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e8d30ab9d52c4b0cba8f78c15fd7cfe6", "sha256": "4007eea8ba446403a545d4a9bd14a3b3c4926aefadf01797335ee6706e511b51"}, "downloads": -1, "filename": "netifaces_merged-0.9.0-py2.7-linux-x86_64.egg", "has_sig": false, "md5_digest": "e8d30ab9d52c4b0cba8f78c15fd7cfe6", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 21163, "upload_time": "2014-01-11T19:53:19", "upload_time_iso_8601": "2014-01-11T19:53:19.510944Z", "url": "https://files.pythonhosted.org/packages/b1/95/956cf85e1e2fee792b0f0c3d4b28ca406693372d124263a073c22a21cb37/netifaces_merged-0.9.0-py2.7-linux-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2c0a0652d166438aa0d3a8d8d3787b2", "sha256": "2e2902f8b81fb62826a044cd9d0e8b4a02bc8ed088d2c74727fc9f58f7fdf3a7"}, "downloads": -1, "filename": "netifaces_merged-0.9.0-py2.7-macosx-10.9-intel.egg", "has_sig": false, "md5_digest": "f2c0a0652d166438aa0d3a8d8d3787b2", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 12964, "upload_time": "2014-01-11T20:13:17", "upload_time_iso_8601": "2014-01-11T20:13:17.005660Z", "url": "https://files.pythonhosted.org/packages/0c/60/49cf3690fafcf9b504b47700670b770626d32f17b2feba43f5138a4bffc5/netifaces_merged-0.9.0-py2.7-macosx-10.9-intel.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "13b5f8124bfc5ffbd3cd3d7c18764b65", "sha256": "360a229c50282c2cf259b232dd6be0d4d3c85463485c5b0de5d4a156358c0f04"}, "downloads": -1, "filename": "netifaces_merged-0.9.0-py2.7-win32.egg", "has_sig": false, "md5_digest": "13b5f8124bfc5ffbd3cd3d7c18764b65", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 12199, "upload_time": "2014-01-14T00:46:53", "upload_time_iso_8601": "2014-01-14T00:46:53.693715Z", "url": "https://files.pythonhosted.org/packages/ef/8e/b9ffd9a89ffafe121f05cfa291f64ef1645655ea055bb77032e3df9634c6/netifaces_merged-0.9.0-py2.7-win32.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "269c66235a25e83509b0cbdc2dab28e9", "sha256": "4bcd697b6126685b61a5c716b8afef86a03f1fb17d510541a507c64c079d1653"}, "downloads": -1, "filename": "netifaces_merged-0.9.0-py3.3-linux-x86_64.egg", "has_sig": false, "md5_digest": "269c66235a25e83509b0cbdc2dab28e9", "packagetype": "bdist_egg", "python_version": "3.3", "requires_python": null, "size": 21601, "upload_time": "2014-01-11T19:52:27", "upload_time_iso_8601": "2014-01-11T19:52:27.553868Z", "url": "https://files.pythonhosted.org/packages/59/d5/4ab988067b23f048903181111fe57eb7ab0cf411815f7273e756e4b31931/netifaces_merged-0.9.0-py3.3-linux-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "8bb39ca3beae018f0bb47dc242c3dd3c", "sha256": "ac02c24551669727f01c8f8e8af69527c9cc8362d75e4b66a72f9d6f34ee14d1"}, "downloads": -1, "filename": "netifaces_merged-0.9.0-py3.3-macosx-10.9-x86_64.egg", "has_sig": false, "md5_digest": "8bb39ca3beae018f0bb47dc242c3dd3c", "packagetype": "bdist_egg", "python_version": "3.3", "requires_python": null, "size": 10301, "upload_time": "2014-01-11T20:12:52", "upload_time_iso_8601": "2014-01-11T20:12:52.239136Z", "url": "https://files.pythonhosted.org/packages/fa/28/2502a503522d61ed898633210a1b5f48eb954b3f7beff7b4b45564077c9c/netifaces_merged-0.9.0-py3.3-macosx-10.9-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "99c8984641044f0b1453bce84d2f835f", "sha256": "4271d3536e0605e6e2b543dbed91afe90f8d56efe7eeca75eefcecaf5987bcd4"}, "downloads": -1, "filename": "netifaces_merged-0.9.0-py3.3-win32.egg", "has_sig": false, "md5_digest": "99c8984641044f0b1453bce84d2f835f", "packagetype": "bdist_egg", "python_version": "3.3", "requires_python": null, "size": 12896, "upload_time": "2014-01-14T00:59:44", "upload_time_iso_8601": "2014-01-14T00:59:44.407804Z", "url": "https://files.pythonhosted.org/packages/7a/a7/ea0a131e1bd52d4aabc8f4096063cb729b337d792b70ab42355c7ac38d9d/netifaces_merged-0.9.0-py3.3-win32.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f649b7a3cf69cb7bc3e6f15f72d44bcc", "sha256": "a3b9e175f0b101be1ccd0146476ae61b09b89b5edd75d31bbaf96c75a7d0dc99"}, "downloads": -1, "filename": "netifaces-merged-0.9.0.tar.gz", "has_sig": false, "md5_digest": "f649b7a3cf69cb7bc3e6f15f72d44bcc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21798, "upload_time": "2014-01-11T19:52:24", "upload_time_iso_8601": "2014-01-11T19:52:24.277632Z", "url": "https://files.pythonhosted.org/packages/5d/65/afaea4b9a48cdfa1f512c82be3871582faeb709a9055bbabfa8049a38459/netifaces-merged-0.9.0.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "2107390c03235f24499bd7a36274e4a2", "sha256": "72e1154fbdfcdbb67dedcae9ff3b8e6913702a24584f3d95d33533053359a4cf"}, "downloads": -1, "filename": "netifaces-merged-0.9.0.win32-py2.6.exe", "has_sig": false, "md5_digest": "2107390c03235f24499bd7a36274e4a2", "packagetype": "bdist_wininst", "python_version": "2.6", "requires_python": null, "size": 218506, "upload_time": "2014-01-14T01:01:57", "upload_time_iso_8601": "2014-01-14T01:01:57.370623Z", "url": "https://files.pythonhosted.org/packages/fc/ba/646cf7fbc59e313e10d0b5687b86d3d9dd47896c6bf685a349b285c8ade4/netifaces-merged-0.9.0.win32-py2.6.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "2dd97e4fdbfbbf638baaa9b0c715fbdb", "sha256": "fa2f0d5dbc07c59b28e6d02b4c38459db34baeda3f2654d45f1a75a8d69defee"}, "downloads": -1, "filename": "netifaces-merged-0.9.0.win32-py2.7.exe", "has_sig": false, "md5_digest": "2dd97e4fdbfbbf638baaa9b0c715fbdb", "packagetype": "bdist_wininst", "python_version": "2.7", "requires_python": null, "size": 218252, "upload_time": "2014-01-14T01:01:49", "upload_time_iso_8601": "2014-01-14T01:01:49.245566Z", "url": "https://files.pythonhosted.org/packages/af/05/adf73933037ffa520948ff1041b36520eac3e7aab06a2f216e3cbc4e5f1f/netifaces-merged-0.9.0.win32-py2.7.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "91e616cfb9e2d71ccd22815b518ff5e0", "sha256": "91712400ef7458f14f826b55715ceb49e76ccdf1953b07a19784dc52d0ac8e2d"}, "downloads": -1, "filename": "netifaces-merged-0.9.0.win32-py3.3.exe", "has_sig": false, "md5_digest": "91e616cfb9e2d71ccd22815b518ff5e0", "packagetype": "bdist_wininst", "python_version": "3.3", "requires_python": null, "size": 213778, "upload_time": "2014-01-14T01:01:38", "upload_time_iso_8601": "2014-01-14T01:01:38.816485Z", "url": "https://files.pythonhosted.org/packages/2f/48/9350e7faa71406919be5c026e5904b18f985cf94bcf20ea129827e020426/netifaces-merged-0.9.0.win32-py3.3.exe", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a1283bc8f561a90565aecf2865ec9541", "sha256": "4ff742f700b61b9b02aada7eeec401cff56c337fc9fcc2d13209803dd962a974"}, "downloads": -1, "filename": "netifaces_merged-0.9.0-py2.6-linux-x86_64.egg", "has_sig": false, "md5_digest": "a1283bc8f561a90565aecf2865ec9541", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 21078, "upload_time": "2014-01-11T19:53:30", "upload_time_iso_8601": "2014-01-11T19:53:30.154837Z", "url": "https://files.pythonhosted.org/packages/72/c6/e28bea02f78288503e2f67bb4f860904825274e972cf6808c83517031b60/netifaces_merged-0.9.0-py2.6-linux-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "30719b6b37e5afb7d5d6cae11d2f134b", "sha256": "08cf2583c10a23595458ef672404377ee65a5b71c7b04fa0c2cc7990032e3428"}, "downloads": -1, "filename": "netifaces_merged-0.9.0-py2.6-macosx-10.9-intel.egg", "has_sig": false, "md5_digest": "30719b6b37e5afb7d5d6cae11d2f134b", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 12965, "upload_time": "2014-01-11T20:13:22", "upload_time_iso_8601": "2014-01-11T20:13:22.664094Z", "url": "https://files.pythonhosted.org/packages/b5/7f/ba62490881f1094406f98c76c73211f20748dcd332b66698d9a994b98915/netifaces_merged-0.9.0-py2.6-macosx-10.9-intel.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f37e9ef8ec55fdfd91edcb5eee4f83e", "sha256": "91a0aa0f5115d0e02769020805a4eb7a55652aa9acf7f2f167a7a11edf39225b"}, "downloads": -1, "filename": "netifaces_merged-0.9.0-py2.6-win32.egg", "has_sig": false, "md5_digest": "8f37e9ef8ec55fdfd91edcb5eee4f83e", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 12456, "upload_time": "2014-01-14T00:46:37", "upload_time_iso_8601": "2014-01-14T00:46:37.107362Z", "url": "https://files.pythonhosted.org/packages/af/d0/293126e85a16aee865e11510cd155aaabae6397244d209cdd1a610707da8/netifaces_merged-0.9.0-py2.6-win32.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e8d30ab9d52c4b0cba8f78c15fd7cfe6", "sha256": "4007eea8ba446403a545d4a9bd14a3b3c4926aefadf01797335ee6706e511b51"}, "downloads": -1, "filename": "netifaces_merged-0.9.0-py2.7-linux-x86_64.egg", "has_sig": false, "md5_digest": "e8d30ab9d52c4b0cba8f78c15fd7cfe6", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 21163, "upload_time": "2014-01-11T19:53:19", "upload_time_iso_8601": "2014-01-11T19:53:19.510944Z", "url": "https://files.pythonhosted.org/packages/b1/95/956cf85e1e2fee792b0f0c3d4b28ca406693372d124263a073c22a21cb37/netifaces_merged-0.9.0-py2.7-linux-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2c0a0652d166438aa0d3a8d8d3787b2", "sha256": "2e2902f8b81fb62826a044cd9d0e8b4a02bc8ed088d2c74727fc9f58f7fdf3a7"}, "downloads": -1, "filename": "netifaces_merged-0.9.0-py2.7-macosx-10.9-intel.egg", "has_sig": false, "md5_digest": "f2c0a0652d166438aa0d3a8d8d3787b2", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 12964, "upload_time": "2014-01-11T20:13:17", "upload_time_iso_8601": "2014-01-11T20:13:17.005660Z", "url": "https://files.pythonhosted.org/packages/0c/60/49cf3690fafcf9b504b47700670b770626d32f17b2feba43f5138a4bffc5/netifaces_merged-0.9.0-py2.7-macosx-10.9-intel.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "13b5f8124bfc5ffbd3cd3d7c18764b65", "sha256": "360a229c50282c2cf259b232dd6be0d4d3c85463485c5b0de5d4a156358c0f04"}, "downloads": -1, "filename": "netifaces_merged-0.9.0-py2.7-win32.egg", "has_sig": false, "md5_digest": "13b5f8124bfc5ffbd3cd3d7c18764b65", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 12199, "upload_time": "2014-01-14T00:46:53", "upload_time_iso_8601": "2014-01-14T00:46:53.693715Z", "url": "https://files.pythonhosted.org/packages/ef/8e/b9ffd9a89ffafe121f05cfa291f64ef1645655ea055bb77032e3df9634c6/netifaces_merged-0.9.0-py2.7-win32.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "269c66235a25e83509b0cbdc2dab28e9", "sha256": "4bcd697b6126685b61a5c716b8afef86a03f1fb17d510541a507c64c079d1653"}, "downloads": -1, "filename": "netifaces_merged-0.9.0-py3.3-linux-x86_64.egg", "has_sig": false, "md5_digest": "269c66235a25e83509b0cbdc2dab28e9", "packagetype": "bdist_egg", "python_version": "3.3", "requires_python": null, "size": 21601, "upload_time": "2014-01-11T19:52:27", "upload_time_iso_8601": "2014-01-11T19:52:27.553868Z", "url": "https://files.pythonhosted.org/packages/59/d5/4ab988067b23f048903181111fe57eb7ab0cf411815f7273e756e4b31931/netifaces_merged-0.9.0-py3.3-linux-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "8bb39ca3beae018f0bb47dc242c3dd3c", "sha256": "ac02c24551669727f01c8f8e8af69527c9cc8362d75e4b66a72f9d6f34ee14d1"}, "downloads": -1, "filename": "netifaces_merged-0.9.0-py3.3-macosx-10.9-x86_64.egg", "has_sig": false, "md5_digest": "8bb39ca3beae018f0bb47dc242c3dd3c", "packagetype": "bdist_egg", "python_version": "3.3", "requires_python": null, "size": 10301, "upload_time": "2014-01-11T20:12:52", "upload_time_iso_8601": "2014-01-11T20:12:52.239136Z", "url": "https://files.pythonhosted.org/packages/fa/28/2502a503522d61ed898633210a1b5f48eb954b3f7beff7b4b45564077c9c/netifaces_merged-0.9.0-py3.3-macosx-10.9-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "99c8984641044f0b1453bce84d2f835f", "sha256": "4271d3536e0605e6e2b543dbed91afe90f8d56efe7eeca75eefcecaf5987bcd4"}, "downloads": -1, "filename": "netifaces_merged-0.9.0-py3.3-win32.egg", "has_sig": false, "md5_digest": "99c8984641044f0b1453bce84d2f835f", "packagetype": "bdist_egg", "python_version": "3.3", "requires_python": null, "size": 12896, "upload_time": "2014-01-14T00:59:44", "upload_time_iso_8601": "2014-01-14T00:59:44.407804Z", "url": "https://files.pythonhosted.org/packages/7a/a7/ea0a131e1bd52d4aabc8f4096063cb729b337d792b70ab42355c7ac38d9d/netifaces_merged-0.9.0-py3.3-win32.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f649b7a3cf69cb7bc3e6f15f72d44bcc", "sha256": "a3b9e175f0b101be1ccd0146476ae61b09b89b5edd75d31bbaf96c75a7d0dc99"}, "downloads": -1, "filename": "netifaces-merged-0.9.0.tar.gz", "has_sig": false, "md5_digest": "f649b7a3cf69cb7bc3e6f15f72d44bcc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21798, "upload_time": "2014-01-11T19:52:24", "upload_time_iso_8601": "2014-01-11T19:52:24.277632Z", "url": "https://files.pythonhosted.org/packages/5d/65/afaea4b9a48cdfa1f512c82be3871582faeb709a9055bbabfa8049a38459/netifaces-merged-0.9.0.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "2107390c03235f24499bd7a36274e4a2", "sha256": "72e1154fbdfcdbb67dedcae9ff3b8e6913702a24584f3d95d33533053359a4cf"}, "downloads": -1, "filename": "netifaces-merged-0.9.0.win32-py2.6.exe", "has_sig": false, "md5_digest": "2107390c03235f24499bd7a36274e4a2", "packagetype": "bdist_wininst", "python_version": "2.6", "requires_python": null, "size": 218506, "upload_time": "2014-01-14T01:01:57", "upload_time_iso_8601": "2014-01-14T01:01:57.370623Z", "url": "https://files.pythonhosted.org/packages/fc/ba/646cf7fbc59e313e10d0b5687b86d3d9dd47896c6bf685a349b285c8ade4/netifaces-merged-0.9.0.win32-py2.6.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "2dd97e4fdbfbbf638baaa9b0c715fbdb", "sha256": "fa2f0d5dbc07c59b28e6d02b4c38459db34baeda3f2654d45f1a75a8d69defee"}, "downloads": -1, "filename": "netifaces-merged-0.9.0.win32-py2.7.exe", "has_sig": false, "md5_digest": "2dd97e4fdbfbbf638baaa9b0c715fbdb", "packagetype": "bdist_wininst", "python_version": "2.7", "requires_python": null, "size": 218252, "upload_time": "2014-01-14T01:01:49", "upload_time_iso_8601": "2014-01-14T01:01:49.245566Z", "url": "https://files.pythonhosted.org/packages/af/05/adf73933037ffa520948ff1041b36520eac3e7aab06a2f216e3cbc4e5f1f/netifaces-merged-0.9.0.win32-py2.7.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "91e616cfb9e2d71ccd22815b518ff5e0", "sha256": "91712400ef7458f14f826b55715ceb49e76ccdf1953b07a19784dc52d0ac8e2d"}, "downloads": -1, "filename": "netifaces-merged-0.9.0.win32-py3.3.exe", "has_sig": false, "md5_digest": "91e616cfb9e2d71ccd22815b518ff5e0", "packagetype": "bdist_wininst", "python_version": "3.3", "requires_python": null, "size": 213778, "upload_time": "2014-01-14T01:01:38", "upload_time_iso_8601": "2014-01-14T01:01:38.816485Z", "url": "https://files.pythonhosted.org/packages/2f/48/9350e7faa71406919be5c026e5904b18f985cf94bcf20ea129827e020426/netifaces-merged-0.9.0.win32-py3.3.exe", "yanked": false}], "timestamp": "Fri May  8 00:45:57 2020"}