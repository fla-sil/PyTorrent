{"info": {"author": "Michael Schilonka", "author_email": "michael@blueshoe.de", "bugtrack_url": null, "classifiers": ["Framework :: Django", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP"], "description": "djangocms-concurrent-users  \n==========================  \n\nA Django-CMS plugin for blocking pages which are edited by another user.\nThis provides a simple mechanism to prevent two users working on the same page. Due to the\nfact, that only the version of the last user hitting the save button is stored, data loss is very likely.\n\nThis plugin adds a hidden toolbar item in order to provide the required code to the client. Once the browser\nenters a page, it checks for another user and gets blocked in case the page has been locked. If the page is\nnot edited at this moment, the client acquires a lock and hence blocks it for other users for the time of working.\nThe check if performed by polling the server with an specified interval. Once the client lefts the page, the lock \nis released and the next user will be able to make changes.\n\n\n\nFeatures\n========\n\n* blocks a page with an overlay in case another user is already working on it\n* reloads the page once it is released, in order to fetch the latest changes\n* displays the username and time of the blocking user\n\n\nInstallation\n============\n\nTo get started using ``djangocms-concurrent-users``:\n\n- install it with ``pip``::\n\n    $ pip install djangocms-concurrent-users\n\n\n- add the plugins to ``INSTALLED_APPS``::\n\n    INSTALLED_APPS = (\n        ...\n        'djangocms-concurrent-users',\n        ...\n    )\n\n\n- run ``migrate``.\n\n- add ``url(r'', include('djangocms_concurrent_users.urls', namespace='concurrent_users'), ),`` to your urls\n\n\nConfiguration\n=============\n\n * ``CONCURRENT_BLOCKING_OFFSET``: Time to wait until the page is release just after the user left; is ``20`` by default; Must not be shorter than ``CONCURRENT_POLLING_INTERVAL``\n * ``CONCURRENT_POLLING_INTERVAL``: Interval for the clients to poll the server; is ``20`` by default; Must not be greater than ``CONCURRENT_BLOCKING_OFFSET``\n * ``CONCURRENT_BLOCK_EDITING``: Specifies if the blocking actually happens; is ``True`` by default;", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Blueshoe/djangocms-concurrent-users", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "djangocms-concurrent-users", "package_url": "https://pypi.org/project/djangocms-concurrent-users/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/djangocms-concurrent-users/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/Blueshoe/djangocms-concurrent-users"}, "release_url": "https://pypi.org/project/djangocms-concurrent-users/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "Django-CMS Plugin for blocking pages which are edited by another user", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"djangocms-concurrent-users\">\n<h2>djangocms-concurrent-users</h2>\n<p>A Django-CMS plugin for blocking pages which are edited by another user.\nThis provides a simple mechanism to prevent two users working on the same page. Due to the\nfact, that only the version of the last user hitting the save button is stored, data loss is very likely.</p>\n<p>This plugin adds a hidden toolbar item in order to provide the required code to the client. Once the browser\nenters a page, it checks for another user and gets blocked in case the page has been locked. If the page is\nnot edited at this moment, the client acquires a lock and hence blocks it for other users for the time of working.\nThe check if performed by polling the server with an specified interval. Once the client lefts the page, the lock\nis released and the next user will be able to make changes.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>blocks a page with an overlay in case another user is already working on it</li>\n<li>reloads the page once it is released, in order to fetch the latest changes</li>\n<li>displays the username and time of the blocking user</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To get started using <tt><span class=\"pre\">djangocms-concurrent-users</span></tt>:</p>\n<ul>\n<li><p>install it with <tt>pip</tt>:</p>\n<pre>$ pip install djangocms-concurrent-users\n</pre>\n</li>\n<li><p>add the plugins to <tt>INSTALLED_APPS</tt>:</p>\n<pre>INSTALLED_APPS = (\n    ...\n    'djangocms-concurrent-users',\n    ...\n)\n</pre>\n</li>\n<li><p>run <tt>migrate</tt>.</p>\n</li>\n<li><p>add <tt><span class=\"pre\">url(r'',</span> <span class=\"pre\">include('djangocms_concurrent_users.urls',</span> <span class=\"pre\">namespace='concurrent_users'),</span> ),</tt> to your urls</p>\n</li>\n</ul>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<blockquote>\n<ul>\n<li><tt>CONCURRENT_BLOCKING_OFFSET</tt>: Time to wait until the page is release just after the user left; is <tt>20</tt> by default; Must not be shorter than <tt>CONCURRENT_POLLING_INTERVAL</tt></li>\n<li><tt>CONCURRENT_POLLING_INTERVAL</tt>: Interval for the clients to poll the server; is <tt>20</tt> by default; Must not be greater than <tt>CONCURRENT_BLOCKING_OFFSET</tt></li>\n<li><tt>CONCURRENT_BLOCK_EDITING</tt>: Specifies if the blocking actually happens; is <tt>True</tt> by default;</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 5995408, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "dd4f888f9c24f2e4b7d24905b9305f3d", "sha256": "fe1412f5dd797e6372e91d9e7b79a48a88e20cdb0aae4fa0699e8e41dbae2b9b"}, "downloads": -1, "filename": "djangocms_concurrent_users-0.0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "dd4f888f9c24f2e4b7d24905b9305f3d", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 631661, "upload_time": "2017-03-24T18:06:31", "upload_time_iso_8601": "2017-03-24T18:06:31.524993Z", "url": "https://files.pythonhosted.org/packages/1c/76/7f5c853e95c38e96c04a1431bf81198ffd2b24dbd77f506c9a7c5898e709/djangocms_concurrent_users-0.0.5-py2-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dd4f888f9c24f2e4b7d24905b9305f3d", "sha256": "fe1412f5dd797e6372e91d9e7b79a48a88e20cdb0aae4fa0699e8e41dbae2b9b"}, "downloads": -1, "filename": "djangocms_concurrent_users-0.0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "dd4f888f9c24f2e4b7d24905b9305f3d", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 631661, "upload_time": "2017-03-24T18:06:31", "upload_time_iso_8601": "2017-03-24T18:06:31.524993Z", "url": "https://files.pythonhosted.org/packages/1c/76/7f5c853e95c38e96c04a1431bf81198ffd2b24dbd77f506c9a7c5898e709/djangocms_concurrent_users-0.0.5-py2-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:37:04 2020"}