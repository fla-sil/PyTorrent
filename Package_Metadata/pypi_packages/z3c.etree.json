{"info": {"author": "Michael Kerrin", "author_email": "michael.kerrin@openapp.ie", "bugtrack_url": null, "classifiers": ["Framework :: Zope3", "Intended Audience :: Developers", "License :: OSI Approved :: Zope Public License", "Programming Language :: Python", "Topic :: Software Development :: Testing"], "description": "=========\nz3c.etree\n=========\n\n*z3c.etree* provides some mechanisms (a common interface) for integrating any\nElementTree engine with the Zope component architecture. This allows\napplications to look up a engine against this interface. As such this package\ndoes not implement the ElementTree API.\n\n*z3c.etree* also provides a set of utilities that can be used to make\ntesting XML output in doctests easier. This functionality can also be called\nfrom a python based unit test via the *assertXMLEqual* method.\n\nDevelopers\n==========\n\n  >>> import z3c.etree\n  >>> import z3c.etree.testing\n  >>> engine = z3c.etree.testing.etreeSetup()\n\nHere are some examples for how to use *z3c.etree* with your own code.\n\nTo generate a Element object with the tag *DAV:getcontenttype* all we have\nto do is:\n\n  >>> etree = z3c.etree.getEngine()\n  >>> elem = etree.Element(\"{DAV:}getcontenttype\")\n  >>> elem #doctest:+ELLIPSIS\n  <Element ...>\n  >>> z3c.etree.testing.assertXMLEqual(etree.tostring(elem), \"\"\"\n  ...    <getcontenttype xmlns=\"DAV:\"/>\"\"\")\n\nNow to add a value this element use just use the *elem* variable has the API\nsuggests.\n\n  >>> elem.text = \"text/plain\"\n  >>> z3c.etree.testing.assertXMLEqual(etree.tostring(elem), \"\"\"\n  ...    <getcontenttype xmlns=\"DAV:\">text/plain</getcontenttype>\"\"\")\n\nTear-down\n=========\n\n  >>> z3c.etree.testing.etreeTearDown()\n\n\n====================\nChanges in z3c.etree\n====================\n\n0.9.2\n=====\n\n- Bug: Fix Python 2.5 support.\n\n- Bug: Declared z3c as a namespace.\n\n- Implemented a way of comparing two XML fragments while ignoring the\n  ordering of elements at the same level.\n\n- Allow the use of NORMALIZE_WHITESPACE with tag contents.\n\n0.9.1\n=====\n\n- fix bug in getting access to the elementree engine\n\n0.9\n===\n\n- Start registering the elmenttree modules directly instead of using some\n  proxy objects.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://svn.zope.org/z3c.etree", "keywords": null, "license": "ZPL", "maintainer": null, "maintainer_email": null, "name": "z3c.etree", "package_url": "https://pypi.org/project/z3c.etree/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/z3c.etree/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://svn.zope.org/z3c.etree"}, "release_url": "https://pypi.org/project/z3c.etree/0.9.2/", "requires_dist": null, "requires_python": null, "summary": "Abstracts out the implementation of elementtree behind the zope component architecture. And provides helper functions for testing XML output in tests.", "version": "0.9.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"z3c-etree\">\n<h2>z3c.etree</h2>\n<p><em>z3c.etree</em> provides some mechanisms (a common interface) for integrating any\nElementTree engine with the Zope component architecture. This allows\napplications to look up a engine against this interface. As such this package\ndoes not implement the ElementTree API.</p>\n<p><em>z3c.etree</em> also provides a set of utilities that can be used to make\ntesting XML output in doctests easier. This functionality can also be called\nfrom a python based unit test via the <em>assertXMLEqual</em> method.</p>\n<div id=\"developers\">\n<h3>Developers</h3>\n<blockquote>\n<pre>&gt;&gt;&gt; import z3c.etree\n&gt;&gt;&gt; import z3c.etree.testing\n&gt;&gt;&gt; engine = z3c.etree.testing.etreeSetup()\n</pre>\n</blockquote>\n<p>Here are some examples for how to use <em>z3c.etree</em> with your own code.</p>\n<p>To generate a Element object with the tag <em>DAV:getcontenttype</em> all we have\nto do is:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; etree = z3c.etree.getEngine()\n&gt;&gt;&gt; elem = etree.Element(\"{DAV:}getcontenttype\")\n&gt;&gt;&gt; elem #doctest:+ELLIPSIS\n&lt;Element ...&gt;\n&gt;&gt;&gt; z3c.etree.testing.assertXMLEqual(etree.tostring(elem), \"\"\"\n...    &lt;getcontenttype xmlns=\"DAV:\"/&gt;\"\"\")\n</pre>\n</blockquote>\n<p>Now to add a value this element use just use the <em>elem</em> variable has the API\nsuggests.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; elem.text = \"text/plain\"\n&gt;&gt;&gt; z3c.etree.testing.assertXMLEqual(etree.tostring(elem), \"\"\"\n...    &lt;getcontenttype xmlns=\"DAV:\"&gt;text/plain&lt;/getcontenttype&gt;\"\"\")\n</pre>\n</blockquote>\n</div>\n<div id=\"tear-down\">\n<h3>Tear-down</h3>\n<blockquote>\n<pre>&gt;&gt;&gt; z3c.etree.testing.etreeTearDown()\n</pre>\n</blockquote>\n</div>\n</div>\n<div id=\"changes-in-z3c-etree\">\n<h2>Changes in z3c.etree</h2>\n<div id=\"id1\">\n<h3>0.9.2</h3>\n<ul>\n<li>Bug: Fix Python 2.5 support.</li>\n<li>Bug: Declared z3c as a namespace.</li>\n<li>Implemented a way of comparing two XML fragments while ignoring the\nordering of elements at the same level.</li>\n<li>Allow the use of NORMALIZE_WHITESPACE with tag contents.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.9.1</h3>\n<ul>\n<li>fix bug in getting access to the elementree engine</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.9</h3>\n<ul>\n<li>Start registering the elmenttree modules directly instead of using some\nproxy objects.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 802018, "releases": {"0.9": [{"comment_text": "", "digests": {"md5": "de189da3611f62649ae7fd7a289c3d6e", "sha256": "7bca456e9cd864a7f258161ddf41c5aea908b0d6119efbf8b2c86dc0535fbac3"}, "downloads": -1, "filename": "z3c.etree-0.9.tar.gz", "has_sig": false, "md5_digest": "de189da3611f62649ae7fd7a289c3d6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9715, "upload_time": "2007-07-03T18:43:25", "upload_time_iso_8601": "2007-07-03T18:43:25Z", "url": "https://files.pythonhosted.org/packages/6b/a4/caf980b25f173cb3b4de5db2580428812e649b31ddafb8c2876b1706ab83/z3c.etree-0.9.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "9d73672e0aa991b2c27f046b9ce8f331", "sha256": "86d2a2b4210c871897fad9e24aa03c23d4b5bad5af395004f071cdaa1d91cf06"}, "downloads": -1, "filename": "z3c.etree-0.9.1.tar.gz", "has_sig": false, "md5_digest": "9d73672e0aa991b2c27f046b9ce8f331", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9871, "upload_time": "2007-07-03T19:08:56", "upload_time_iso_8601": "2007-07-03T19:08:56Z", "url": "https://files.pythonhosted.org/packages/52/60/dda75d70885e1e8fb0587eab19e1b91219e323ff32492bd53cf4b3617293/z3c.etree-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "b92ea245aa471074c4a6891f58bc9fe6", "sha256": "2bc74352095267e2b8f30106b308c68589c57c44750d47bbb4905d85393cde83"}, "downloads": -1, "filename": "z3c.etree-0.9.2.tar.gz", "has_sig": false, "md5_digest": "b92ea245aa471074c4a6891f58bc9fe6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11957, "upload_time": "2008-02-22T18:20:25", "upload_time_iso_8601": "2008-02-22T18:20:25Z", "url": "https://files.pythonhosted.org/packages/41/ea/8b17f5acf2196643632cc590b91e6e9c30318c0eb424fb10a971969363d8/z3c.etree-0.9.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b92ea245aa471074c4a6891f58bc9fe6", "sha256": "2bc74352095267e2b8f30106b308c68589c57c44750d47bbb4905d85393cde83"}, "downloads": -1, "filename": "z3c.etree-0.9.2.tar.gz", "has_sig": false, "md5_digest": "b92ea245aa471074c4a6891f58bc9fe6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11957, "upload_time": "2008-02-22T18:20:25", "upload_time_iso_8601": "2008-02-22T18:20:25Z", "url": "https://files.pythonhosted.org/packages/41/ea/8b17f5acf2196643632cc590b91e6e9c30318c0eb424fb10a971969363d8/z3c.etree-0.9.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:21:04 2020"}