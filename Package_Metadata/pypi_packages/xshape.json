{"info": {"author": "Michael Delgado", "author_email": "delgado.michaelt@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "======\nxshape\n======\n\n\n.. image:: https://img.shields.io/pypi/v/xshape.svg\n        :target: https://pypi.python.org/pypi/xshape\n\n.. image:: https://img.shields.io/travis/ClimateImpactLab/xshape.svg\n        :target: https://travis-ci.org/ClimateImpactLab/xshape\n\n.. image:: https://readthedocs.org/projects/xshape/badge/?version=latest\n        :target: https://xshape.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n.. image:: https://pyup.io/repos/github/ClimateImpactLab/xshape/shield.svg\n     :target: https://pyup.io/repos/github/ClimateImpactLab/xshape/\n     :alt: Updates\n\n\nTools for working with shapefiles, topographies, and polygons in xarray\n\n\n* Free software: MIT license\n* Documentation: https://xshape.readthedocs.io.\n\n\nFeatures\n--------\n\n* Read a shapefile and obtain an xarray DataArray of field records\n* Draw shapefile boundaries on gridded data\n* Plot xarray DataArray data indexed by shapefile records as a choropleth\n\nUsage\n-----\n\nGetting records for fields in a shapefile\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: python\n\n    In [1]: import xshape\n\n    In [2]: fields, polygons = xshape.parse_shapefile(\n       ...:     'tests/data/shapefiles/CA_counties/CA_counties',\n       ...:     encoding='latin1')\n\n    In [3]: fields\n    Out[3]: \n    <xarray.Dataset>\n    Dimensions:   (shape: 58)\n    Coordinates:\n      * shape     (shape) int64 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 ...\n    Data variables:\n        STATEFP   (shape) <U22 '06' '06' '06' '06' '06' '06' '06' '06' '06' '06' ...\n        COUNTYFP  (shape) <U22 '107' '009' '047' '079' '097' '041' '023' '051' ...\n        COUNTYNS  (shape) <U22 '00277318' '01675885' '00277288' '00277304' ...\n        GEOID     (shape) <U22 '06107' '06009' '06047' '06079' '06097' '06041' ...\n        NAME      (shape) <U22 'Tulare' 'Calaveras' 'Merced' 'San Luis Obispo' ...\n        NAMELSAD  (shape) <U22 'Tulare County' 'Calaveras County' ...\n        LSAD      (shape) <U22 '06' '06' '06' '06' '06' '06' '06' '06' '06' '06' ...\n        CLASSFP   (shape) <U22 'H1' 'H1' 'H1' 'H1' 'H1' 'H1' 'H1' 'H1' 'H1' 'H1' ...\n        MTFCC     (shape) <U22 'G4020' 'G4020' 'G4020' 'G4020' 'G4020' 'G4020' ...\n        CSAFP     (shape) <U22 '' '' '' '' '488' '488' '' '' '' '' '488' '472' ...\n        CBSAFP    (shape) <U22 '47300' '' '32900' '42020' '42220' '41860' ...\n        METDIVFP  (shape) <U22 '' '' '' '' '' '41884' '' '' '' '' '36084' '' '' ...\n        FUNCSTAT  (shape) <U22 'A' 'A' 'A' 'A' 'A' 'A' 'A' 'A' 'A' 'A' 'A' 'A' ...\n        ALAND     (shape) <U22 '12494707314' '2641820029' '5011554680' ...\n        AWATER    (shape) <U22 '37391604' '43810423' '112760479' '820974619' ...\n        INTPTLAT  (shape) <U22 '+36.2288317' '+38.1846184' '+37.1948063' ...\n        INTPTLON  (shape) <U22 '-118.7810618' '-120.5593996' '-120.7228019' ...\n\nDrawing shape boundaries on gridded data\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: python\n\n    In [4]: import xarray as xr, numpy as np, xshape\n\n    # generate sample data\n    In [5]: da = xr.DataArray(\n       ...:    np.cos((\n       ...:         np.arange(41*45).reshape((41, 45)) * np.arange(41*45).reshape((45, 41)\n       ...:         ).T)/4e5),\n       ...:    dims=('lat', 'lon'),\n       ...:    coords={\n       ...:        'lon': np.linspace(-125, -114, 45),\n       ...:        'lat': np.linspace(32, 42, 41)})\n       ...:\n\n    In [6]: da.xshape.overlay(\n       ...:     'tests/data/shapefiles/CA_counties/CA_counties',\n       ...:     encoding='latin1',\n       ...:     cmap='YlGnBu');\n       ...:\n\n.. figure:: docs/images/california_map.png\n\n\nPlotting regional data in a choropleth\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nUsing the xarray extension, we can plot ``DataArray`` data directly:\n\n.. code-block:: python\n\n    In [7]: import xshape, xarray as xr, pandas as pd\n\n    In [8]: df = pd.read_csv('tests/data/datasets/co-est2016.csv', encoding='latin1')\n       ...: ca = df[(df['STATE'] == 6) & (df['COUNTY'] > 0)].copy()\n       ...: ca['fips'] = df['STATE'] * 1000 + df['COUNTY']\n       ...: da = ca.set_index(['fips'])['POPESTIMATE2016'].to_xarray()\n       ...: da.coords['GEOID'] = ('fips', ), list(map('{:05}'.format, da.fips.values))\n       ...: da = da.swap_dims({'fips': 'GEOID'})\n\n    In [9]: da.xshape.plot(\n       ...:     'tests/data/shapefiles/CA_counties/CA_counties',\n       ...:     encoding='latin1',\n       ...:     cmap='YlGnBu');\n       ...:\n\n.. figure:: docs/images/california_map_pop.png\n\nWe can also combine the information from the fields with the data contained in the DataArray:\n\n.. code-block:: python\n\n    In [10]: land_area = (\n       ....:     fields\n       ....:     .set_coords('GEOID')\n       ....:     .swap_dims({'shape': 'GEOID'})\n       ....:     .ALAND.astype(float))\n\n    In [11]: np.log(da / land_area).xshape.plot(\n       ....:     'tests/data/shapefiles/CA_counties/CA_counties',\n       ....:     encoding='latin1',\n       ....:     cmap='YlGnBu');\n       ....:\n\n.. figure:: docs/images/california_map_pop_per_m2.png\n\nTODO\n----\n\n* Use shapefiles to reshape gridded/pixel data\n\n\n=======\nHistory\n=======\n\n0.1.0 (2018-01-13)\n------------------\n\n* First release on PyPI.\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.python.org/pypi", "keywords": "xshape", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "xshape", "package_url": "https://pypi.org/project/xshape/", "platform": "", "project_url": "https://pypi.org/project/xshape/", "project_urls": {"Homepage": "https://pypi.python.org/pypi"}, "release_url": "https://pypi.org/project/xshape/0.1.1/", "requires_dist": ["Click (>=6.0)", "pyshp", "xarray", "numpy", "pandas", "matplotlib"], "requires_python": "", "summary": "Tools for working with shapefiles, topographies, and polygons in xarray", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"xshape\">\n<h2>xshape</h2>\n<a href=\"https://pypi.python.org/pypi/xshape\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/xshape.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/db44186d8439a3c451645ce260c25b658dd6a0c1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7873686170652e737667\"></a>\n<a href=\"https://travis-ci.org/ClimateImpactLab/xshape\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/ClimateImpactLab/xshape.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8a01acbc154032ab53b04537b3b0b583598e9f71/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f436c696d617465496d706163744c61622f7873686170652e737667\"></a>\n<a href=\"https://xshape.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b0b1e90e92d45156ffe0402f9299daed80bb6b0d/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7873686170652f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://pyup.io/repos/github/ClimateImpactLab/xshape/\" rel=\"nofollow\"><img alt=\"Updates\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cfd2468ed0b2d78c3421baaa5c452dc8e7034764/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f436c696d617465496d706163744c61622f7873686170652f736869656c642e737667\"></a>\n<p>Tools for working with shapefiles, topographies, and polygons in xarray</p>\n<ul>\n<li>Free software: MIT license</li>\n<li>Documentation: <a href=\"https://xshape.readthedocs.io\" rel=\"nofollow\">https://xshape.readthedocs.io</a>.</li>\n</ul>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Read a shapefile and obtain an xarray DataArray of field records</li>\n<li>Draw shapefile boundaries on gridded data</li>\n<li>Plot xarray DataArray data indexed by shapefile records as a choropleth</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<div id=\"getting-records-for-fields-in-a-shapefile\">\n<h4>Getting records for fields in a shapefile</h4>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"kn\">import</span> <span class=\"nn\">xshape</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"n\">fields</span><span class=\"p\">,</span> <span class=\"n\">polygons</span> <span class=\"o\">=</span> <span class=\"n\">xshape</span><span class=\"o\">.</span><span class=\"n\">parse_shapefile</span><span class=\"p\">(</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"s1\">'tests/data/shapefiles/CA_counties/CA_counties'</span><span class=\"p\">,</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'latin1'</span><span class=\"p\">)</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"n\">fields</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span>\n<span class=\"o\">&lt;</span><span class=\"n\">xarray</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"o\">&gt;</span>\n<span class=\"n\">Dimensions</span><span class=\"p\">:</span>   <span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">:</span> <span class=\"mi\">58</span><span class=\"p\">)</span>\n<span class=\"n\">Coordinates</span><span class=\"p\">:</span>\n  <span class=\"o\">*</span> <span class=\"n\">shape</span>     <span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">)</span> <span class=\"n\">int64</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"mi\">3</span> <span class=\"mi\">4</span> <span class=\"mi\">5</span> <span class=\"mi\">6</span> <span class=\"mi\">7</span> <span class=\"mi\">8</span> <span class=\"mi\">9</span> <span class=\"mi\">10</span> <span class=\"mi\">11</span> <span class=\"mi\">12</span> <span class=\"mi\">13</span> <span class=\"mi\">14</span> <span class=\"mi\">15</span> <span class=\"mi\">16</span> <span class=\"mi\">17</span> <span class=\"mi\">18</span> <span class=\"o\">...</span>\n<span class=\"n\">Data</span> <span class=\"n\">variables</span><span class=\"p\">:</span>\n    <span class=\"n\">STATEFP</span>   <span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">U22</span> <span class=\"s1\">'06'</span> <span class=\"s1\">'06'</span> <span class=\"s1\">'06'</span> <span class=\"s1\">'06'</span> <span class=\"s1\">'06'</span> <span class=\"s1\">'06'</span> <span class=\"s1\">'06'</span> <span class=\"s1\">'06'</span> <span class=\"s1\">'06'</span> <span class=\"s1\">'06'</span> <span class=\"o\">...</span>\n    <span class=\"n\">COUNTYFP</span>  <span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">U22</span> <span class=\"s1\">'107'</span> <span class=\"s1\">'009'</span> <span class=\"s1\">'047'</span> <span class=\"s1\">'079'</span> <span class=\"s1\">'097'</span> <span class=\"s1\">'041'</span> <span class=\"s1\">'023'</span> <span class=\"s1\">'051'</span> <span class=\"o\">...</span>\n    <span class=\"n\">COUNTYNS</span>  <span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">U22</span> <span class=\"s1\">'00277318'</span> <span class=\"s1\">'01675885'</span> <span class=\"s1\">'00277288'</span> <span class=\"s1\">'00277304'</span> <span class=\"o\">...</span>\n    <span class=\"n\">GEOID</span>     <span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">U22</span> <span class=\"s1\">'06107'</span> <span class=\"s1\">'06009'</span> <span class=\"s1\">'06047'</span> <span class=\"s1\">'06079'</span> <span class=\"s1\">'06097'</span> <span class=\"s1\">'06041'</span> <span class=\"o\">...</span>\n    <span class=\"n\">NAME</span>      <span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">U22</span> <span class=\"s1\">'Tulare'</span> <span class=\"s1\">'Calaveras'</span> <span class=\"s1\">'Merced'</span> <span class=\"s1\">'San Luis Obispo'</span> <span class=\"o\">...</span>\n    <span class=\"n\">NAMELSAD</span>  <span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">U22</span> <span class=\"s1\">'Tulare County'</span> <span class=\"s1\">'Calaveras County'</span> <span class=\"o\">...</span>\n    <span class=\"n\">LSAD</span>      <span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">U22</span> <span class=\"s1\">'06'</span> <span class=\"s1\">'06'</span> <span class=\"s1\">'06'</span> <span class=\"s1\">'06'</span> <span class=\"s1\">'06'</span> <span class=\"s1\">'06'</span> <span class=\"s1\">'06'</span> <span class=\"s1\">'06'</span> <span class=\"s1\">'06'</span> <span class=\"s1\">'06'</span> <span class=\"o\">...</span>\n    <span class=\"n\">CLASSFP</span>   <span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">U22</span> <span class=\"s1\">'H1'</span> <span class=\"s1\">'H1'</span> <span class=\"s1\">'H1'</span> <span class=\"s1\">'H1'</span> <span class=\"s1\">'H1'</span> <span class=\"s1\">'H1'</span> <span class=\"s1\">'H1'</span> <span class=\"s1\">'H1'</span> <span class=\"s1\">'H1'</span> <span class=\"s1\">'H1'</span> <span class=\"o\">...</span>\n    <span class=\"n\">MTFCC</span>     <span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">U22</span> <span class=\"s1\">'G4020'</span> <span class=\"s1\">'G4020'</span> <span class=\"s1\">'G4020'</span> <span class=\"s1\">'G4020'</span> <span class=\"s1\">'G4020'</span> <span class=\"s1\">'G4020'</span> <span class=\"o\">...</span>\n    <span class=\"n\">CSAFP</span>     <span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">U22</span> <span class=\"s1\">''</span> <span class=\"s1\">''</span> <span class=\"s1\">''</span> <span class=\"s1\">''</span> <span class=\"s1\">'488'</span> <span class=\"s1\">'488'</span> <span class=\"s1\">''</span> <span class=\"s1\">''</span> <span class=\"s1\">''</span> <span class=\"s1\">''</span> <span class=\"s1\">'488'</span> <span class=\"s1\">'472'</span> <span class=\"o\">...</span>\n    <span class=\"n\">CBSAFP</span>    <span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">U22</span> <span class=\"s1\">'47300'</span> <span class=\"s1\">''</span> <span class=\"s1\">'32900'</span> <span class=\"s1\">'42020'</span> <span class=\"s1\">'42220'</span> <span class=\"s1\">'41860'</span> <span class=\"o\">...</span>\n    <span class=\"n\">METDIVFP</span>  <span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">U22</span> <span class=\"s1\">''</span> <span class=\"s1\">''</span> <span class=\"s1\">''</span> <span class=\"s1\">''</span> <span class=\"s1\">''</span> <span class=\"s1\">'41884'</span> <span class=\"s1\">''</span> <span class=\"s1\">''</span> <span class=\"s1\">''</span> <span class=\"s1\">''</span> <span class=\"s1\">'36084'</span> <span class=\"s1\">''</span> <span class=\"s1\">''</span> <span class=\"o\">...</span>\n    <span class=\"n\">FUNCSTAT</span>  <span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">U22</span> <span class=\"s1\">'A'</span> <span class=\"s1\">'A'</span> <span class=\"s1\">'A'</span> <span class=\"s1\">'A'</span> <span class=\"s1\">'A'</span> <span class=\"s1\">'A'</span> <span class=\"s1\">'A'</span> <span class=\"s1\">'A'</span> <span class=\"s1\">'A'</span> <span class=\"s1\">'A'</span> <span class=\"s1\">'A'</span> <span class=\"s1\">'A'</span> <span class=\"o\">...</span>\n    <span class=\"n\">ALAND</span>     <span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">U22</span> <span class=\"s1\">'12494707314'</span> <span class=\"s1\">'2641820029'</span> <span class=\"s1\">'5011554680'</span> <span class=\"o\">...</span>\n    <span class=\"n\">AWATER</span>    <span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">U22</span> <span class=\"s1\">'37391604'</span> <span class=\"s1\">'43810423'</span> <span class=\"s1\">'112760479'</span> <span class=\"s1\">'820974619'</span> <span class=\"o\">...</span>\n    <span class=\"n\">INTPTLAT</span>  <span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">U22</span> <span class=\"s1\">'+36.2288317'</span> <span class=\"s1\">'+38.1846184'</span> <span class=\"s1\">'+37.1948063'</span> <span class=\"o\">...</span>\n    <span class=\"n\">INTPTLON</span>  <span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">U22</span> <span class=\"s1\">'-118.7810618'</span> <span class=\"s1\">'-120.5593996'</span> <span class=\"s1\">'-120.7228019'</span> <span class=\"o\">...</span>\n</pre>\n</div>\n<div id=\"drawing-shape-boundaries-on-gridded-data\">\n<h4>Drawing shape boundaries on gridded data</h4>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"kn\">import</span> <span class=\"nn\">xarray</span> <span class=\"k\">as</span> <span class=\"nn\">xr</span><span class=\"o\">,</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span><span class=\"o\">,</span> <span class=\"nn\">xshape</span>\n\n<span class=\"c1\"># generate sample data</span>\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]:</span> <span class=\"n\">da</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"o\">.</span><span class=\"n\">DataArray</span><span class=\"p\">(</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>    <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">((</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>         <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">41</span><span class=\"o\">*</span><span class=\"mi\">45</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">41</span><span class=\"p\">,</span> <span class=\"mi\">45</span><span class=\"p\">))</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">41</span><span class=\"o\">*</span><span class=\"mi\">45</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"mi\">45</span><span class=\"p\">,</span> <span class=\"mi\">41</span><span class=\"p\">)</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>         <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mf\">4e5</span><span class=\"p\">),</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>    <span class=\"n\">dims</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'lat'</span><span class=\"p\">,</span> <span class=\"s1\">'lon'</span><span class=\"p\">),</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>    <span class=\"n\">coords</span><span class=\"o\">=</span><span class=\"p\">{</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>        <span class=\"s1\">'lon'</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">125</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">114</span><span class=\"p\">,</span> <span class=\"mi\">45</span><span class=\"p\">),</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>        <span class=\"s1\">'lat'</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"mi\">42</span><span class=\"p\">,</span> <span class=\"mi\">41</span><span class=\"p\">)})</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]:</span> <span class=\"n\">da</span><span class=\"o\">.</span><span class=\"n\">xshape</span><span class=\"o\">.</span><span class=\"n\">overlay</span><span class=\"p\">(</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"s1\">'tests/data/shapefiles/CA_counties/CA_counties'</span><span class=\"p\">,</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'latin1'</span><span class=\"p\">,</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">'YlGnBu'</span><span class=\"p\">);</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>\n</pre>\n<div>\n<img alt=\"docs/images/california_map.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2b5337ab88c380a17514751468617d6e97a7e6c9/646f63732f696d616765732f63616c69666f726e69615f6d61702e706e67\">\n</div>\n</div>\n<div id=\"plotting-regional-data-in-a-choropleth\">\n<h4>Plotting regional data in a choropleth</h4>\n<p>Using the xarray extension, we can plot <tt>DataArray</tt> data directly:</p>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]:</span> <span class=\"kn\">import</span> <span class=\"nn\">xshape</span><span class=\"o\">,</span> <span class=\"nn\">xarray</span> <span class=\"k\">as</span> <span class=\"nn\">xr</span><span class=\"o\">,</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]:</span> <span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s1\">'tests/data/datasets/co-est2016.csv'</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'latin1'</span><span class=\"p\">)</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"n\">ca</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"p\">[(</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'STATE'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">6</span><span class=\"p\">)</span> <span class=\"o\">&amp;</span> <span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'COUNTY'</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">)]</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"n\">ca</span><span class=\"p\">[</span><span class=\"s1\">'fips'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'STATE'</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mi\">1000</span> <span class=\"o\">+</span> <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'COUNTY'</span><span class=\"p\">]</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"n\">da</span> <span class=\"o\">=</span> <span class=\"n\">ca</span><span class=\"o\">.</span><span class=\"n\">set_index</span><span class=\"p\">([</span><span class=\"s1\">'fips'</span><span class=\"p\">])[</span><span class=\"s1\">'POPESTIMATE2016'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">to_xarray</span><span class=\"p\">()</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"n\">da</span><span class=\"o\">.</span><span class=\"n\">coords</span><span class=\"p\">[</span><span class=\"s1\">'GEOID'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'fips'</span><span class=\"p\">,</span> <span class=\"p\">),</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">{:05}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">,</span> <span class=\"n\">da</span><span class=\"o\">.</span><span class=\"n\">fips</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">))</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"n\">da</span> <span class=\"o\">=</span> <span class=\"n\">da</span><span class=\"o\">.</span><span class=\"n\">swap_dims</span><span class=\"p\">({</span><span class=\"s1\">'fips'</span><span class=\"p\">:</span> <span class=\"s1\">'GEOID'</span><span class=\"p\">})</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">]:</span> <span class=\"n\">da</span><span class=\"o\">.</span><span class=\"n\">xshape</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"s1\">'tests/data/shapefiles/CA_counties/CA_counties'</span><span class=\"p\">,</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'latin1'</span><span class=\"p\">,</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>     <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">'YlGnBu'</span><span class=\"p\">);</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span>\n</pre>\n<div>\n<img alt=\"docs/images/california_map_pop.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f7ae8edaf48c693e6deaaaede2f3ce96c6d45492/646f63732f696d616765732f63616c69666f726e69615f6d61705f706f702e706e67\">\n</div>\n<p>We can also combine the information from the fields with the data contained in the DataArray:</p>\n<pre><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]:</span> <span class=\"n\">land_area</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n   <span class=\"o\">....</span><span class=\"p\">:</span>     <span class=\"n\">fields</span>\n   <span class=\"o\">....</span><span class=\"p\">:</span>     <span class=\"o\">.</span><span class=\"n\">set_coords</span><span class=\"p\">(</span><span class=\"s1\">'GEOID'</span><span class=\"p\">)</span>\n   <span class=\"o\">....</span><span class=\"p\">:</span>     <span class=\"o\">.</span><span class=\"n\">swap_dims</span><span class=\"p\">({</span><span class=\"s1\">'shape'</span><span class=\"p\">:</span> <span class=\"s1\">'GEOID'</span><span class=\"p\">})</span>\n   <span class=\"o\">....</span><span class=\"p\">:</span>     <span class=\"o\">.</span><span class=\"n\">ALAND</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">))</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">]:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">da</span> <span class=\"o\">/</span> <span class=\"n\">land_area</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">xshape</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span>\n   <span class=\"o\">....</span><span class=\"p\">:</span>     <span class=\"s1\">'tests/data/shapefiles/CA_counties/CA_counties'</span><span class=\"p\">,</span>\n   <span class=\"o\">....</span><span class=\"p\">:</span>     <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'latin1'</span><span class=\"p\">,</span>\n   <span class=\"o\">....</span><span class=\"p\">:</span>     <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">'YlGnBu'</span><span class=\"p\">);</span>\n   <span class=\"o\">....</span><span class=\"p\">:</span>\n</pre>\n<div>\n<img alt=\"docs/images/california_map_pop_per_m2.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ec679e53209b3700b24ece56c009d671f0a497f7/646f63732f696d616765732f63616c69666f726e69615f6d61705f706f705f7065725f6d322e706e67\">\n</div>\n</div>\n</div>\n<div id=\"todo\">\n<h3>TODO</h3>\n<ul>\n<li>Use shapefiles to reshape gridded/pixel data</li>\n</ul>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1.0 (2018-01-13)</span></h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 3525451, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "21c991a7cd697586afdc39f56207a154", "sha256": "adce4b94ddeb2262b8e815096cb6f55ce2b621ad51c6f7a2d62bc59a23e31b95"}, "downloads": -1, "filename": "xshape-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "21c991a7cd697586afdc39f56207a154", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8975, "upload_time": "2018-01-16T03:02:41", "upload_time_iso_8601": "2018-01-16T03:02:41.469947Z", "url": "https://files.pythonhosted.org/packages/22/11/58d87bf6fb9354e55ca6c2d4df48febd85adeb0af034ceeea7165c5a8a4b/xshape-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a1a1bafeac501ebebb02071ee5a328d", "sha256": "c0aa766d233e8f9dfe54fe0cf8597c8d8baed6d1b4c6bbcd921546a3370bcbff"}, "downloads": -1, "filename": "xshape-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9a1a1bafeac501ebebb02071ee5a328d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3002892, "upload_time": "2018-01-16T03:02:55", "upload_time_iso_8601": "2018-01-16T03:02:55.969205Z", "url": "https://files.pythonhosted.org/packages/58/62/750a9360fb9ca6d74501e8e9116b3267f6a7c4528f099664e42d1250ed61/xshape-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "917a63a71f038d82ed8aad1183b39f27", "sha256": "0139de2b25e1b74dfab9867776e355b02a24155c511ca53554703b1787192cf2"}, "downloads": -1, "filename": "xshape-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "917a63a71f038d82ed8aad1183b39f27", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8962, "upload_time": "2018-01-26T22:30:41", "upload_time_iso_8601": "2018-01-26T22:30:41.407631Z", "url": "https://files.pythonhosted.org/packages/97/d8/00e17177ba152d832c7a043a498bd6e12a1555b7b843271c98d888fd5770/xshape-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "022dfafeb1937c01440a36e1b10cba46", "sha256": "a7eb34e55fe8aeb31ece1dd6a679b2bdb4ebe1dd0427e3138220373ea5f56c18"}, "downloads": -1, "filename": "xshape-0.1.1.tar.gz", "has_sig": false, "md5_digest": "022dfafeb1937c01440a36e1b10cba46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3002994, "upload_time": "2018-01-26T22:30:55", "upload_time_iso_8601": "2018-01-26T22:30:55.550199Z", "url": "https://files.pythonhosted.org/packages/32/bc/5508489663182c16ebbc7ddec6f20e478345a67f8e017fd73938058d77ed/xshape-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "917a63a71f038d82ed8aad1183b39f27", "sha256": "0139de2b25e1b74dfab9867776e355b02a24155c511ca53554703b1787192cf2"}, "downloads": -1, "filename": "xshape-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "917a63a71f038d82ed8aad1183b39f27", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8962, "upload_time": "2018-01-26T22:30:41", "upload_time_iso_8601": "2018-01-26T22:30:41.407631Z", "url": "https://files.pythonhosted.org/packages/97/d8/00e17177ba152d832c7a043a498bd6e12a1555b7b843271c98d888fd5770/xshape-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "022dfafeb1937c01440a36e1b10cba46", "sha256": "a7eb34e55fe8aeb31ece1dd6a679b2bdb4ebe1dd0427e3138220373ea5f56c18"}, "downloads": -1, "filename": "xshape-0.1.1.tar.gz", "has_sig": false, "md5_digest": "022dfafeb1937c01440a36e1b10cba46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3002994, "upload_time": "2018-01-26T22:30:55", "upload_time_iso_8601": "2018-01-26T22:30:55.550199Z", "url": "https://files.pythonhosted.org/packages/32/bc/5508489663182c16ebbc7ddec6f20e478345a67f8e017fd73938058d77ed/xshape-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:24:24 2020"}