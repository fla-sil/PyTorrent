{"info": {"author": "Sam Rushing, Eric Huss, IronPort Engineering", "author_email": "sam-coro@rushing.nightmare.com", "bugtrack_url": null, "classifiers": [], "description": "This Python library was evolved at IronPort Systems and has been provided\nas open source by Cisco Systems under an MIT license.\n\nIntro\n=====\n\nShrapnel is a library for high-performance concurrency.  It uses\ncoroutines to implement user threads on top of either kqueue (FreeBSD,\nOS X) or /dev/epoll (linux), and is written mostly in Pyrex/Cython,\nsupporting both 32-bit and 64-bit platforms.  It is the culmination of\nabout 8 years of work at IronPort Systems, a provider of high-speed\nmail appliances.  It was open-sourced by Cisco Systems in late 2011.\n\nStatus\n======\n\nApr 18, 2013: I've recently merged in a long chain of branches for several\nimportant features:\n\n * Support for pure-cython servers (branch 'pxdfix')\n * Full DNS resolver implementation (branch 'dns-cache')\n * Updated postgres support (branch 'postgres')\n * Included OpenSSL support\n\n\nFeatures\n========\n\n * Lightweight threads, event-driven scheduler.\n * Underneath: non-blocking operations on descriptors, like sockets and pipes.\n * On top, synchronous API for straight-line, simple code.\n * Highly scalable - tens or hundreds of thousands of connections/threads.\n * Thread synchronization primitives, like mutexes, semaphores, etc...\n * with_timeout(): wrap any funcall with a timeout.\n * Wait on kqueue events like file/directory changes, signals, processes, etc... [kqueue only]\n * DNS resolver and cache\n * HTTP server and client (plus WebSocket, RFC6455 & hixie-76)\n * Support for TLS via tlslite and openssl (plus NPN for both)\n * other protocols/codecs: ldap, asn1, ftp, mysql, postgres, AMQP.\n * `MIT License`_.\n \nAdvantages\n==========\n\nCompared to other concurrency packages available for Python,\nShrapnel gives you:\n\n * Speed and Efficiency: the entire scheduler, poller, socket layer,\n   synchronization objects, etc... are written in Cython, with an\n   emphasis on performance and low memory usage.\n * Stock Python: Shrapnel works with out-of-the-box CPython [2.X].  No\n   special variants of Python are needed, it will even work with your\n   OS's OEM python installation. So you can use all the external\n   libraries/modules you've come to rely on.\n * No Callbacks: no need to cuisinart your application into a thousand\n   callbacks.  No need to decompose every action into a state\n   machine.  Write simple, performant code now without having to send\n   your programmers to class.\n * Drop to Cython for speed: all the capabilities of the system are\n   available from Cython, so you can e.g. write a server entirely in\n   Cython for speed.  You can interface with external libraries, and\n   do thread switches from Cython or C.  It's even possible to have\n   external C code call back into shrapnel.  This makes it easy to\n   prototype your application in Python, and then push only the hot\n   spots into Cython.\n * Timeouts: Shrapnel provides a general timeout mechanism that can be\n   used to wrap any function call with a timeout.\n * Profiler: Thread-aware profiler generates HTML reports.\n\n\nTutorial\n========\n\nSee http://ironport.github.com/shrapnel/tutorial.html\n\nAPI Documentation\n=================\n\nSee http://ironport.github.com/shrapnel/\n\n.. _MIT License: http://www.opensource.org/licenses/mit-license.html\n\n", "description_content_type": null, "docs_url": null, "download_url": "https://pypi.python.org/pypi?name=coro", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/ironport/shrapnel", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "coro", "package_url": "https://pypi.org/project/coro/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/coro/", "project_urls": {"Download": "https://pypi.python.org/pypi?name=coro", "Homepage": "http://github.com/ironport/shrapnel"}, "release_url": "https://pypi.org/project/coro/1.0.5/", "requires_dist": null, "requires_python": null, "summary": "IronPort Coroutine/Threading Library", "version": "1.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This Python library was evolved at IronPort Systems and has been provided\nas open source by Cisco Systems under an MIT license.</p>\n<div id=\"intro\">\n<h2>Intro</h2>\n<p>Shrapnel is a library for high-performance concurrency.  It uses\ncoroutines to implement user threads on top of either kqueue (FreeBSD,\nOS X) or /dev/epoll (linux), and is written mostly in Pyrex/Cython,\nsupporting both 32-bit and 64-bit platforms.  It is the culmination of\nabout 8 years of work at IronPort Systems, a provider of high-speed\nmail appliances.  It was open-sourced by Cisco Systems in late 2011.</p>\n</div>\n<div id=\"status\">\n<h2>Status</h2>\n<p>Apr 18, 2013: I\u2019ve recently merged in a long chain of branches for several\nimportant features:</p>\n<blockquote>\n<ul>\n<li>Support for pure-cython servers (branch \u2018pxdfix\u2019)</li>\n<li>Full DNS resolver implementation (branch \u2018dns-cache\u2019)</li>\n<li>Updated postgres support (branch \u2018postgres\u2019)</li>\n<li>Included OpenSSL support</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<blockquote>\n<ul>\n<li>Lightweight threads, event-driven scheduler.</li>\n<li>Underneath: non-blocking operations on descriptors, like sockets and pipes.</li>\n<li>On top, synchronous API for straight-line, simple code.</li>\n<li>Highly scalable - tens or hundreds of thousands of connections/threads.</li>\n<li>Thread synchronization primitives, like mutexes, semaphores, etc\u2026</li>\n<li>with_timeout(): wrap any funcall with a timeout.</li>\n<li>Wait on kqueue events like file/directory changes, signals, processes, etc\u2026 [kqueue only]</li>\n<li>DNS resolver and cache</li>\n<li>HTTP server and client (plus WebSocket, RFC6455 &amp; hixie-76)</li>\n<li>Support for TLS via tlslite and openssl (plus NPN for both)</li>\n<li>other protocols/codecs: ldap, asn1, ftp, mysql, postgres, AMQP.</li>\n<li><a href=\"http://www.opensource.org/licenses/mit-license.html\" rel=\"nofollow\">MIT License</a>.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"advantages\">\n<h2>Advantages</h2>\n<p>Compared to other concurrency packages available for Python,\nShrapnel gives you:</p>\n<blockquote>\n<ul>\n<li>Speed and Efficiency: the entire scheduler, poller, socket layer,\nsynchronization objects, etc\u2026 are written in Cython, with an\nemphasis on performance and low memory usage.</li>\n<li>Stock Python: Shrapnel works with out-of-the-box CPython [2.X].  No\nspecial variants of Python are needed, it will even work with your\nOS\u2019s OEM python installation. So you can use all the external\nlibraries/modules you\u2019ve come to rely on.</li>\n<li>No Callbacks: no need to cuisinart your application into a thousand\ncallbacks.  No need to decompose every action into a state\nmachine.  Write simple, performant code now without having to send\nyour programmers to class.</li>\n<li>Drop to Cython for speed: all the capabilities of the system are\navailable from Cython, so you can e.g. write a server entirely in\nCython for speed.  You can interface with external libraries, and\ndo thread switches from Cython or C.  It\u2019s even possible to have\nexternal C code call back into shrapnel.  This makes it easy to\nprototype your application in Python, and then push only the hot\nspots into Cython.</li>\n<li>Timeouts: Shrapnel provides a general timeout mechanism that can be\nused to wrap any function call with a timeout.</li>\n<li>Profiler: Thread-aware profiler generates HTML reports.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"tutorial\">\n<h2>Tutorial</h2>\n<p>See <a href=\"http://ironport.github.com/shrapnel/tutorial.html\" rel=\"nofollow\">http://ironport.github.com/shrapnel/tutorial.html</a></p>\n</div>\n<div id=\"api-documentation\">\n<h2>API Documentation</h2>\n<p>See <a href=\"http://ironport.github.com/shrapnel/\" rel=\"nofollow\">http://ironport.github.com/shrapnel/</a></p>\n</div>\n\n          </div>"}, "last_serial": 1514714, "releases": {"1.0.0-000": [], "1.0.1-000": [], "1.0.2-000": [], "1.0.3-000": [{"comment_text": "", "digests": {"md5": "b5dd8db0f767274553729b49e336082b", "sha256": "d6e70908fb844225cf9410bf84ad42d9c1f17ea57b0d9dcd31d337246f1e1f4d"}, "downloads": -1, "filename": "coro-1.0.3-000.tar.gz", "has_sig": true, "md5_digest": "b5dd8db0f767274553729b49e336082b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 212355, "upload_time": "2015-02-20T20:51:34", "upload_time_iso_8601": "2015-02-20T20:51:34.223138Z", "url": "https://files.pythonhosted.org/packages/83/8e/164dc045b94bbd17a45ef1496599da6623976d1ed217a14cf928ef5438c0/coro-1.0.3-000.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "9d211d5d240bc0823eec1e1764d5bfba", "sha256": "344b98b02c73a551a5217b7fc683c64dce6c627435ee3e9ed89297b130582e24"}, "downloads": -1, "filename": "coro-1.0.5.tar.gz", "has_sig": false, "md5_digest": "9d211d5d240bc0823eec1e1764d5bfba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 305796, "upload_time": "2015-04-21T15:17:51", "upload_time_iso_8601": "2015-04-21T15:17:51.046930Z", "url": "https://files.pythonhosted.org/packages/2f/72/75725eafbf1393091c57001aad24109908904ebfc454b259dce2f57d0ef8/coro-1.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9d211d5d240bc0823eec1e1764d5bfba", "sha256": "344b98b02c73a551a5217b7fc683c64dce6c627435ee3e9ed89297b130582e24"}, "downloads": -1, "filename": "coro-1.0.5.tar.gz", "has_sig": false, "md5_digest": "9d211d5d240bc0823eec1e1764d5bfba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 305796, "upload_time": "2015-04-21T15:17:51", "upload_time_iso_8601": "2015-04-21T15:17:51.046930Z", "url": "https://files.pythonhosted.org/packages/2f/72/75725eafbf1393091c57001aad24109908904ebfc454b259dce2f57d0ef8/coro-1.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:08 2020"}