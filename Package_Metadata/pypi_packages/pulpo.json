{"info": {"author": "Pavlos Mitsoulis Ntompos, Fedor Alexandre Parfenov", "author_email": "p.mitsoulis@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "**Build Status**\n\nmaster: [![Build Status](https://travis-ci.org/pm3310/pulpo.svg?branch=master)](https://travis-ci.org/pm3310/pulpo)\n\n# pulpo\n\nA library and sdk for non-contextual and contextual Multi-Armed-Bandit (MAB) algorithms for multiple use cases. The sdk version enables you to deploy it on AWS. \n\n## Installation\n\n### Prerequisites\n\npulpo requires Python 3.6+\n\n### Install pulpo\n\nAt the command line:\n\n    pip install pulpo\n\n## How To\n\n### Library\n\nPulpo can be used as a library to instantiate and run online MABs. The core of the library are the bandit implementations under `pulpo/badnits` module. The super class of them is `OnlineBandit` if you wish to implement your own MAB implementation.\n\nCurrently, the following MAB implementations are available:\n- Epsilon Greedy (`EGreedy`)\n\nThe usage of this library starts from `Pulpo` class. For example, let's say that we want to run 1 online bandit with 3 arms using `EGreedy`, then:\n```Python\nfrom pulpo.bandits.dataclasses import EpsilonGreedyArm\nfrom pulpo.bandits.epsilon_greedy import EGreedy\nfrom pulpo.pulpo import Pulpo\n\narm_names = [\"article1\", \"article2\", \"article3\"]\narms = [EpsilonGreedyArm(name, 1, 0) for name in arm_names]  # priors for n=1 and sum=0, i.e. steps and total reward so far\n\nbandit = EGreedy(\"article_recommendation\", arms, epsilon=0.9)\n\npulpo = Pulpo([bandit])  # Instantiate Pulpo\n\narm_id = pulpo.choose(bandit.bandit_id)  # to get an arm decision\n\n# get some feedback for the arm decision and pass it to back\n\nfeedback = 1.0\npulpo.update(bandit.bandit_id, arm_id, feedback)\n```\n\nAlternatively, the `Pulpo` class can be instantiated in the following manner:\n```Python\nimport json\n\nfrom pulpo.pulpo import Pulpo\n\nbandit_id = \"article_recommendation\"\nconfig = config = [{\"bandit_id\": bandit_id, \"bandit_type\": \"epsilon_greedy\", \"arm_ids\": [\"article1\", \"article2\", \"article3\"]}]\npulpo = Pulpo.make_from_json(json.dumps(config))  # Instantiate Pulpo\n\narm_id = pulpo.choose(bandit_id)  # to get an arm decision\n\n# get some feedback for the arm decision and pass it to back\n\nfeedback = 1.0\npulpo.update(bandit_id, arm_id, feedback)\n```\n\n### AWS SDK\n\nPulpo can be used as an sdk to deploy and run MABs on AWS. Soon...", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pm3310/pulpo", "keywords": "multi-arm-bandit reinforcement-learning machine-learning aws", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pulpo", "package_url": "https://pypi.org/project/pulpo/", "platform": "", "project_url": "https://pypi.org/project/pulpo/", "project_urls": {"Homepage": "https://github.com/pm3310/pulpo"}, "release_url": "https://pypi.org/project/pulpo/0.0.1/", "requires_dist": null, "requires_python": "~=3.6", "summary": "Multi-Arm-Bandit library", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>Build Status</strong></p>\n<p>master: <a href=\"https://travis-ci.org/pm3310/pulpo\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a3d05de53d7f238487c34c57c1d34f5695e0e8f5/68747470733a2f2f7472617669732d63692e6f72672f706d333331302f70756c706f2e7376673f6272616e63683d6d6173746572\"></a></p>\n<h1>pulpo</h1>\n<p>A library and sdk for non-contextual and contextual Multi-Armed-Bandit (MAB) algorithms for multiple use cases. The sdk version enables you to deploy it on AWS.</p>\n<h2>Installation</h2>\n<h3>Prerequisites</h3>\n<p>pulpo requires Python 3.6+</p>\n<h3>Install pulpo</h3>\n<p>At the command line:</p>\n<pre><code>pip install pulpo\n</code></pre>\n<h2>How To</h2>\n<h3>Library</h3>\n<p>Pulpo can be used as a library to instantiate and run online MABs. The core of the library are the bandit implementations under <code>pulpo/badnits</code> module. The super class of them is <code>OnlineBandit</code> if you wish to implement your own MAB implementation.</p>\n<p>Currently, the following MAB implementations are available:</p>\n<ul>\n<li>Epsilon Greedy (<code>EGreedy</code>)</li>\n</ul>\n<p>The usage of this library starts from <code>Pulpo</code> class. For example, let's say that we want to run 1 online bandit with 3 arms using <code>EGreedy</code>, then:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pulpo.bandits.dataclasses</span> <span class=\"kn\">import</span> <span class=\"n\">EpsilonGreedyArm</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pulpo.bandits.epsilon_greedy</span> <span class=\"kn\">import</span> <span class=\"n\">EGreedy</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pulpo.pulpo</span> <span class=\"kn\">import</span> <span class=\"n\">Pulpo</span>\n\n<span class=\"n\">arm_names</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"article1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"article2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"article3\"</span><span class=\"p\">]</span>\n<span class=\"n\">arms</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">EpsilonGreedyArm</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">arm_names</span><span class=\"p\">]</span>  <span class=\"c1\"># priors for n=1 and sum=0, i.e. steps and total reward so far</span>\n\n<span class=\"n\">bandit</span> <span class=\"o\">=</span> <span class=\"n\">EGreedy</span><span class=\"p\">(</span><span class=\"s2\">\"article_recommendation\"</span><span class=\"p\">,</span> <span class=\"n\">arms</span><span class=\"p\">,</span> <span class=\"n\">epsilon</span><span class=\"o\">=</span><span class=\"mf\">0.9</span><span class=\"p\">)</span>\n\n<span class=\"n\">pulpo</span> <span class=\"o\">=</span> <span class=\"n\">Pulpo</span><span class=\"p\">([</span><span class=\"n\">bandit</span><span class=\"p\">])</span>  <span class=\"c1\"># Instantiate Pulpo</span>\n\n<span class=\"n\">arm_id</span> <span class=\"o\">=</span> <span class=\"n\">pulpo</span><span class=\"o\">.</span><span class=\"n\">choose</span><span class=\"p\">(</span><span class=\"n\">bandit</span><span class=\"o\">.</span><span class=\"n\">bandit_id</span><span class=\"p\">)</span>  <span class=\"c1\"># to get an arm decision</span>\n\n<span class=\"c1\"># get some feedback for the arm decision and pass it to back</span>\n\n<span class=\"n\">feedback</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n<span class=\"n\">pulpo</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">bandit</span><span class=\"o\">.</span><span class=\"n\">bandit_id</span><span class=\"p\">,</span> <span class=\"n\">arm_id</span><span class=\"p\">,</span> <span class=\"n\">feedback</span><span class=\"p\">)</span>\n</pre>\n<p>Alternatively, the <code>Pulpo</code> class can be instantiated in the following manner:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pulpo.pulpo</span> <span class=\"kn\">import</span> <span class=\"n\">Pulpo</span>\n\n<span class=\"n\">bandit_id</span> <span class=\"o\">=</span> <span class=\"s2\">\"article_recommendation\"</span>\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">[{</span><span class=\"s2\">\"bandit_id\"</span><span class=\"p\">:</span> <span class=\"n\">bandit_id</span><span class=\"p\">,</span> <span class=\"s2\">\"bandit_type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"epsilon_greedy\"</span><span class=\"p\">,</span> <span class=\"s2\">\"arm_ids\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"article1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"article2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"article3\"</span><span class=\"p\">]}]</span>\n<span class=\"n\">pulpo</span> <span class=\"o\">=</span> <span class=\"n\">Pulpo</span><span class=\"o\">.</span><span class=\"n\">make_from_json</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">))</span>  <span class=\"c1\"># Instantiate Pulpo</span>\n\n<span class=\"n\">arm_id</span> <span class=\"o\">=</span> <span class=\"n\">pulpo</span><span class=\"o\">.</span><span class=\"n\">choose</span><span class=\"p\">(</span><span class=\"n\">bandit_id</span><span class=\"p\">)</span>  <span class=\"c1\"># to get an arm decision</span>\n\n<span class=\"c1\"># get some feedback for the arm decision and pass it to back</span>\n\n<span class=\"n\">feedback</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n<span class=\"n\">pulpo</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">bandit_id</span><span class=\"p\">,</span> <span class=\"n\">arm_id</span><span class=\"p\">,</span> <span class=\"n\">feedback</span><span class=\"p\">)</span>\n</pre>\n<h3>AWS SDK</h3>\n<p>Pulpo can be used as an sdk to deploy and run MABs on AWS. Soon...</p>\n\n          </div>"}, "last_serial": 6949434, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b9fe79326e8c659e7f0d50960ef49348", "sha256": "c903c22c25e47f88b91e1710a1ff516d5b2d8bb10f7ad159ed85a3542401be6b"}, "downloads": -1, "filename": "pulpo-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b9fe79326e8c659e7f0d50960ef49348", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 7593, "upload_time": "2020-04-04T12:44:47", "upload_time_iso_8601": "2020-04-04T12:44:47.883164Z", "url": "https://files.pythonhosted.org/packages/dd/da/105c2d5795a1d28a38e0fbec6d146d7a68a324c9a2b0f8f827e7d791fdae/pulpo-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b9fe79326e8c659e7f0d50960ef49348", "sha256": "c903c22c25e47f88b91e1710a1ff516d5b2d8bb10f7ad159ed85a3542401be6b"}, "downloads": -1, "filename": "pulpo-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b9fe79326e8c659e7f0d50960ef49348", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 7593, "upload_time": "2020-04-04T12:44:47", "upload_time_iso_8601": "2020-04-04T12:44:47.883164Z", "url": "https://files.pythonhosted.org/packages/dd/da/105c2d5795a1d28a38e0fbec6d146d7a68a324c9a2b0f8f827e7d791fdae/pulpo-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:17 2020"}