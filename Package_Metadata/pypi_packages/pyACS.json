{"info": {"author": "Nils Haentjens", "author_email": "nils.haentjens@maine.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "pyACS\n=====\n\n_Python package to unpack and calibrate binary data from a WetLabs ACS_\n\nThe ACS module can be loaded and used in a script or can be used as it stands to convert binary files recorded by Compass Software to CSV files.\n\n## Installation\nThe package runs with python 3 only. Install it with PyPI using the command:\n\n    pip install pyACS\n\nOr from the sources available on [GitHub repository](https://github.com/OceanOptics/pyACS/).\nThe distribution archive can be generated using:\n\n    python3 setup.py sdist bdist_wheel\n\n## Convert binary to CSV files\nThe package can be used as it stands from the command line to convert binary files to \n\n    python -m pyACS [-h] [-v] [--version] [--auxiliaries] dvc src dst\n\npositional arguments:\n  dvc            Device file.\n  src            Source file to decode and calibrate.\n  dst            Destination file of decoded and calibrated data.\n\noptional arguments:\n  -h, --help     show this help message and exit\n  -v, --verbose  Enable verbosity.\n  --version      Prints version information.\n  --auxiliaries  Output auxiliary data (internal and external temperatures).\n\n## Embed in other Software\nThe class `ACS` provides key methods to handle the binary ACS data\n* `read_device_file`: Parse device file to be able to unpack and calibrate binary frame\n* `unpack_frame`: Unpack/Decode binary frame into named tuple `FrameContainer`\n* `calibrate_frame`: Convert engineering units (counts) into scientific units (1/m for a and c)\n\nThe class `BinReader` helps to separate individual frames looking the registration bytes `b'\\xff\\x00\\xff\\x00'`. An example of usage of that class is `ConvertBinToCSV` which converts a binary file recorded with Compass into a CSV file. \n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/OceanOptics/pyACS/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyACS", "package_url": "https://pypi.org/project/pyACS/", "platform": "", "project_url": "https://pypi.org/project/pyACS/", "project_urls": {"Homepage": "https://github.com/OceanOptics/pyACS/"}, "release_url": "https://pypi.org/project/pyACS/0.0.1/", "requires_dist": ["numpy"], "requires_python": "", "summary": "Unpack and calibrate binary data from a WetLabs ACS", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyACS</h1>\n<p><em>Python package to unpack and calibrate binary data from a WetLabs ACS</em></p>\n<p>The ACS module can be loaded and used in a script or can be used as it stands to convert binary files recorded by Compass Software to CSV files.</p>\n<h2>Installation</h2>\n<p>The package runs with python 3 only. Install it with PyPI using the command:</p>\n<pre><code>pip install pyACS\n</code></pre>\n<p>Or from the sources available on <a href=\"https://github.com/OceanOptics/pyACS/\" rel=\"nofollow\">GitHub repository</a>.\nThe distribution archive can be generated using:</p>\n<pre><code>python3 setup.py sdist bdist_wheel\n</code></pre>\n<h2>Convert binary to CSV files</h2>\n<p>The package can be used as it stands from the command line to convert binary files to</p>\n<pre><code>python -m pyACS [-h] [-v] [--version] [--auxiliaries] dvc src dst\n</code></pre>\n<p>positional arguments:\ndvc            Device file.\nsrc            Source file to decode and calibrate.\ndst            Destination file of decoded and calibrated data.</p>\n<p>optional arguments:\n-h, --help     show this help message and exit\n-v, --verbose  Enable verbosity.\n--version      Prints version information.\n--auxiliaries  Output auxiliary data (internal and external temperatures).</p>\n<h2>Embed in other Software</h2>\n<p>The class <code>ACS</code> provides key methods to handle the binary ACS data</p>\n<ul>\n<li><code>read_device_file</code>: Parse device file to be able to unpack and calibrate binary frame</li>\n<li><code>unpack_frame</code>: Unpack/Decode binary frame into named tuple <code>FrameContainer</code></li>\n<li><code>calibrate_frame</code>: Convert engineering units (counts) into scientific units (1/m for a and c)</li>\n</ul>\n<p>The class <code>BinReader</code> helps to separate individual frames looking the registration bytes <code>b'\\xff\\x00\\xff\\x00'</code>. An example of usage of that class is <code>ConvertBinToCSV</code> which converts a binary file recorded with Compass into a CSV file.</p>\n\n          </div>"}, "last_serial": 4649992, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b122f47fc2f66ddf2e948dea0e01706b", "sha256": "77c9e10248e8c5cc3314c36717918d6e28b70c1d7d856278544b34c3f7eb952a"}, "downloads": -1, "filename": "pyACS-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b122f47fc2f66ddf2e948dea0e01706b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11692, "upload_time": "2019-01-01T12:06:33", "upload_time_iso_8601": "2019-01-01T12:06:33.758363Z", "url": "https://files.pythonhosted.org/packages/46/1a/f8854d33b07d7483e2059fdd60b8da56de083e738c14da201ee2f5f405fc/pyACS-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a3abee82ec705c08f692086ca7e5462", "sha256": "a94b6e3bd9ef7c8688a50da7f61702932ce6421a1bf434275a87b3a483c76457"}, "downloads": -1, "filename": "pyACS-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3a3abee82ec705c08f692086ca7e5462", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10818, "upload_time": "2019-01-01T12:06:36", "upload_time_iso_8601": "2019-01-01T12:06:36.352345Z", "url": "https://files.pythonhosted.org/packages/5e/88/4ede33e3ebac0459c48232afba5a950cf900919fc7129693499f0ee91d6f/pyACS-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b122f47fc2f66ddf2e948dea0e01706b", "sha256": "77c9e10248e8c5cc3314c36717918d6e28b70c1d7d856278544b34c3f7eb952a"}, "downloads": -1, "filename": "pyACS-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b122f47fc2f66ddf2e948dea0e01706b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11692, "upload_time": "2019-01-01T12:06:33", "upload_time_iso_8601": "2019-01-01T12:06:33.758363Z", "url": "https://files.pythonhosted.org/packages/46/1a/f8854d33b07d7483e2059fdd60b8da56de083e738c14da201ee2f5f405fc/pyACS-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a3abee82ec705c08f692086ca7e5462", "sha256": "a94b6e3bd9ef7c8688a50da7f61702932ce6421a1bf434275a87b3a483c76457"}, "downloads": -1, "filename": "pyACS-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3a3abee82ec705c08f692086ca7e5462", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10818, "upload_time": "2019-01-01T12:06:36", "upload_time_iso_8601": "2019-01-01T12:06:36.352345Z", "url": "https://files.pythonhosted.org/packages/5e/88/4ede33e3ebac0459c48232afba5a950cf900919fc7129693499f0ee91d6f/pyACS-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:03 2020"}