{"info": {"author": "Joe Crobak", "author_email": "joecrow@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "parquet-python\n==============\n\n.. image:: https://travis-ci.org/jcrobak/parquet-python.svg?branch=master\n    :target: https://travis-ci.org/jcrobak/parquet-python\n\nparquet-python is a pure-python implementation (currently with only\nread-support) of the `parquet\nformat <https://github.com/Parquet/parquet-format>`_. It comes with a\nscript for reading parquet files and outputting the data to stdout as\nJSON or TSV (without the overhead of JVM startup). Performance has not\nyet been optimized, but it's useful for debugging and quick viewing of\ndata in files.\n\nNot all parts of the parquet-format have been implemented yet or tested\ne.g. nested data\u2014see Todos below for a full list. With that said,\nparquet-python is capable of reading all the data files from the\n`parquet-compatability <https://github.com/Parquet/parquet-compatibility>`_\nproject.\n\nrequirements\n============\n\nparquet-python has been tested on python 2.7, 3.6, and 3.7. It depends\non ``pythrift2`` and optionally on ``python-snappy`` (for snappy compressed\nfiles, please also install ``parquet-python[snappy]``).\n\ngetting started\n===============\n\nparquet-python is available via PyPi and can be installed using\n`pip install parquet`. The package includes the `parquet`\ncommand for reading python files, e.g. `parquet test.parquet`.\nSee `parquet --help` for full usage.\n\nExample\n-------\n\nparquet-python currently has two programatic interfaces with similar\nfunctionality to Python's csv reader. First, it supports a DictReader\nwhich returns a dictionary per row. Second, it has a reader which\nreturns a list of values for each row. Both function require a file-like\nobject and support an optional ``columns`` field to only read the\nspecified columns.\n\n.. code:: python\n\n\n    import parquet\n    import json\n\n    ## assuming parquet file with two rows and three columns:\n    ## foo bar baz\n    ## 1   2   3\n    ## 4   5   6\n\n    with open(\"test.parquet\") as fo:\n       # prints:\n       # {\"foo\": 1, \"bar\": 2}\n       # {\"foo\": 4, \"bar\": 5}\n       for row in parquet.DictReader(fo, columns=['foo', 'bar']):\n           print(json.dumps(row))\n\n\n    with open(\"test.parquet\") as fo:\n       # prints:\n       # 1,2\n       # 4,5\n       for row in parquet.reader(fo, columns=['foo', 'bar]):\n           print(\",\".join([str(r) for r in row]))\n\nTodos\n=====\n\n-  Support the deprecated bitpacking\n-  Fix handling of repetition-levels and definition-levels\n-  Tests for nested schemas, null data\n-  Support reading of data from HDFS via snakebite and/or webhdfs.\n-  Implement writing\n-  performance evaluation and optimization (i.e. how does it compare to\n   the c++, java implementations)\n\nContributing\n============\n\nIs done via Pull Requests. Please include tests with your changes and\nfollow `pep8 <http://www.python.org/dev/peps/pep-0008/>`_.\n\nTo run the tests you must install and execute ``tox`` (``pip install tox``) to\nrun for all supported versions. If you want to run just for your current\nversion, execute: ``pip install -r requirements-development.txt`` and then\n``nosetests``.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jcrobak/parquet-python", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "parquet", "package_url": "https://pypi.org/project/parquet/", "platform": "", "project_url": "https://pypi.org/project/parquet/", "project_urls": {"Homepage": "https://github.com/jcrobak/parquet-python"}, "release_url": "https://pypi.org/project/parquet/1.3.1/", "requires_dist": ["thriftpy2", "backports.csv ; python_version==\"2.7\"", "python-snappy ; extra == 'snappy'"], "requires_python": "", "summary": "Python support for Parquet file format", "version": "1.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"parquet-python\">\n<h2>parquet-python</h2>\n<a href=\"https://travis-ci.org/jcrobak/parquet-python\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/jcrobak/parquet-python.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e1b45feb65690e0f8d2837fba7f67312918ccc04/68747470733a2f2f7472617669732d63692e6f72672f6a63726f62616b2f706172717565742d707974686f6e2e7376673f6272616e63683d6d6173746572\"></a>\n<p>parquet-python is a pure-python implementation (currently with only\nread-support) of the <a href=\"https://github.com/Parquet/parquet-format\" rel=\"nofollow\">parquet\nformat</a>. It comes with a\nscript for reading parquet files and outputting the data to stdout as\nJSON or TSV (without the overhead of JVM startup). Performance has not\nyet been optimized, but it\u2019s useful for debugging and quick viewing of\ndata in files.</p>\n<p>Not all parts of the parquet-format have been implemented yet or tested\ne.g. nested data\u2014see Todos below for a full list. With that said,\nparquet-python is capable of reading all the data files from the\n<a href=\"https://github.com/Parquet/parquet-compatibility\" rel=\"nofollow\">parquet-compatability</a>\nproject.</p>\n</div>\n<div id=\"requirements\">\n<h2>requirements</h2>\n<p>parquet-python has been tested on python 2.7, 3.6, and 3.7. It depends\non <tt>pythrift2</tt> and optionally on <tt><span class=\"pre\">python-snappy</span></tt> (for snappy compressed\nfiles, please also install <tt><span class=\"pre\">parquet-python[snappy]</span></tt>).</p>\n</div>\n<div id=\"getting-started\">\n<h2>getting started</h2>\n<p>parquet-python is available via PyPi and can be installed using\n<cite>pip install parquet</cite>. The package includes the <cite>parquet</cite>\ncommand for reading python files, e.g. <cite>parquet test.parquet</cite>.\nSee <cite>parquet \u2013help</cite> for full usage.</p>\n<div id=\"example\">\n<h3>Example</h3>\n<p>parquet-python currently has two programatic interfaces with similar\nfunctionality to Python\u2019s csv reader. First, it supports a DictReader\nwhich returns a dictionary per row. Second, it has a reader which\nreturns a list of values for each row. Both function require a file-like\nobject and support an optional <tt>columns</tt> field to only read the\nspecified columns.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">parquet</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"c1\">## assuming parquet file with two rows and three columns:</span>\n<span class=\"c1\">## foo bar baz</span>\n<span class=\"c1\">## 1   2   3</span>\n<span class=\"c1\">## 4   5   6</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"test.parquet\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fo</span><span class=\"p\">:</span>\n   <span class=\"c1\"># prints:</span>\n   <span class=\"c1\"># {\"foo\": 1, \"bar\": 2}</span>\n   <span class=\"c1\"># {\"foo\": 4, \"bar\": 5}</span>\n   <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">parquet</span><span class=\"o\">.</span><span class=\"n\">DictReader</span><span class=\"p\">(</span><span class=\"n\">fo</span><span class=\"p\">,</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"s1\">'bar'</span><span class=\"p\">]):</span>\n       <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"test.parquet\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fo</span><span class=\"p\">:</span>\n   <span class=\"c1\"># prints:</span>\n   <span class=\"c1\"># 1,2</span>\n   <span class=\"c1\"># 4,5</span>\n   <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">parquet</span><span class=\"o\">.</span><span class=\"n\">reader</span><span class=\"p\">(</span><span class=\"n\">fo</span><span class=\"p\">,</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"s1\">'bar]):</span>\n       <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\",\"</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"n\">row</span><span class=\"p\">]))</span>\n</pre>\n</div>\n</div>\n<div id=\"todos\">\n<h2>Todos</h2>\n<ul>\n<li>Support the deprecated bitpacking</li>\n<li>Fix handling of repetition-levels and definition-levels</li>\n<li>Tests for nested schemas, null data</li>\n<li>Support reading of data from HDFS via snakebite and/or webhdfs.</li>\n<li>Implement writing</li>\n<li>performance evaluation and optimization (i.e. how does it compare to\nthe c++, java implementations)</li>\n</ul>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Is done via Pull Requests. Please include tests with your changes and\nfollow <a href=\"http://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\">pep8</a>.</p>\n<p>To run the tests you must install and execute <tt>tox</tt> (<tt>pip install tox</tt>) to\nrun for all supported versions. If you want to run just for your current\nversion, execute: <tt>pip install <span class=\"pre\">-r</span> <span class=\"pre\">requirements-development.txt</span></tt> and then\n<tt>nosetests</tt>.</p>\n</div>\n\n          </div>"}, "last_serial": 7134098, "releases": {"0.0.0": [], "1.0": [{"comment_text": "", "digests": {"md5": "2324d29645b302ffc4390942c4683681", "sha256": "ccb686ad551756c0873b4b4c0f18fe1e35865d1248d86b2a8506f96e7b6c72cc"}, "downloads": -1, "filename": "parquet-1.0.tar.gz", "has_sig": false, "md5_digest": "2324d29645b302ffc4390942c4683681", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16332, "upload_time": "2016-03-14T03:06:58", "upload_time_iso_8601": "2016-03-14T03:06:58.429548Z", "url": "https://files.pythonhosted.org/packages/cf/eb/64fe14d3b477537920e7bc80df394b147eabec04e0620f629e8265017470/parquet-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "06b5483e47506c742836ea85a630031f", "sha256": "bcc318decb1d6f14d779838a6a8206840cd4febdaa923b9139b6b1bd9a71f1f6"}, "downloads": -1, "filename": "parquet-1.1-py2-none-any.whl", "has_sig": true, "md5_digest": "06b5483e47506c742836ea85a630031f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 18254, "upload_time": "2016-08-16T02:18:32", "upload_time_iso_8601": "2016-08-16T02:18:32.692731Z", "url": "https://files.pythonhosted.org/packages/86/3e/6abf522cb2543104623b842e91e3f59bec58112d29d86a6f9b8d02825e43/parquet-1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "36e9cd8dcf8fa7c12ee7b10bba3f7f9b", "sha256": "6116d9722c2eedbd34375f5a3a93a6cb31c86ec7d67225918d0caa4593447565"}, "downloads": -1, "filename": "parquet-1.1-py3-none-any.whl", "has_sig": true, "md5_digest": "36e9cd8dcf8fa7c12ee7b10bba3f7f9b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18256, "upload_time": "2016-08-16T02:18:36", "upload_time_iso_8601": "2016-08-16T02:18:36.123048Z", "url": "https://files.pythonhosted.org/packages/8d/e3/a4976155440533ccde527f65d4783e77b7a1ad3a66c9de223cc181deebd9/parquet-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1882bb10b2cc4ac613a9bddda784986d", "sha256": "a962f4ad7581b1f1c689989c85d69eff6380d68418538546a296168e8acfbe8f"}, "downloads": -1, "filename": "parquet-1.1.tar.gz", "has_sig": true, "md5_digest": "1882bb10b2cc4ac613a9bddda784986d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18230, "upload_time": "2016-08-16T02:18:39", "upload_time_iso_8601": "2016-08-16T02:18:39.734569Z", "url": "https://files.pythonhosted.org/packages/6f/25/ca111c6428ad610b617469c6ec0a90783b9b1fcd50e2335a2f1e7a6521c6/parquet-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "63f9785af4d486dcfd708846e0590a55", "sha256": "ff39f63160a1b6226eb0257c0cd6a3d6f015e10681bdd6e4e0713c9df5e8b94e"}, "downloads": -1, "filename": "parquet-1.2-py2-none-any.whl", "has_sig": true, "md5_digest": "63f9785af4d486dcfd708846e0590a55", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 20231, "upload_time": "2017-05-26T02:33:10", "upload_time_iso_8601": "2017-05-26T02:33:10.697632Z", "url": "https://files.pythonhosted.org/packages/4b/a3/c0aae38ac1bc7137a510d326fb99482ddd6cb6d468e9875e28be011bb833/parquet-1.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c536aaea853f87cd685e0573e86c7a5f", "sha256": "67a9ac65b3748a4ae1185facd70540cfb5534416b43d0a1650422dbb4f52eb91"}, "downloads": -1, "filename": "parquet-1.2-py3-none-any.whl", "has_sig": true, "md5_digest": "c536aaea853f87cd685e0573e86c7a5f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20231, "upload_time": "2017-05-26T02:33:12", "upload_time_iso_8601": "2017-05-26T02:33:12.834191Z", "url": "https://files.pythonhosted.org/packages/d4/2c/31867848b0238fb1cf0b2fcb60296b3bd7e3c455b97c92026b6be652d34c/parquet-1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "05aacec0620ac63ecd7dd77bf7fb9fee", "sha256": "5b45b63f3381af8d059ecc301954fa15babb6ba96e95939382e42c94520e8045"}, "downloads": -1, "filename": "parquet-1.2.tar.gz", "has_sig": true, "md5_digest": "05aacec0620ac63ecd7dd77bf7fb9fee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21453, "upload_time": "2017-05-26T02:33:14", "upload_time_iso_8601": "2017-05-26T02:33:14.627173Z", "url": "https://files.pythonhosted.org/packages/74/b5/bc459aab0566fc3cf3397467922c37411ab6e3361bab9e0ca165e1089ce8/parquet-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "63132536fe7b3d95f60ae0a2d0fdee0c", "sha256": "e36e6c92b9603193848124b20b144abc7b6cd988d29fbbb26eba731dfffaf4f4"}, "downloads": -1, "filename": "parquet-1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "63132536fe7b3d95f60ae0a2d0fdee0c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23196, "upload_time": "2020-04-30T00:57:20", "upload_time_iso_8601": "2020-04-30T00:57:20.846501Z", "url": "https://files.pythonhosted.org/packages/53/be/0f8bd4a31728cd954cc8093e88fabb90a307dbc41e928ec6c6fda2d879d2/parquet-1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1cd818946989d856dbe0f5955909f36", "sha256": "82151b2f3ffd9df67db24bf5451ce25a87a03c032a5b1d91090d180910883acb"}, "downloads": -1, "filename": "parquet-1.3.tar.gz", "has_sig": false, "md5_digest": "b1cd818946989d856dbe0f5955909f36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21588, "upload_time": "2020-04-30T00:57:22", "upload_time_iso_8601": "2020-04-30T00:57:22.408891Z", "url": "https://files.pythonhosted.org/packages/89/c5/a3e70e2c4266aec53b411c12603c9b5d3add627d59579cb563435e200c32/parquet-1.3.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "c2ce908f97beb2e24929b586ca00d721", "sha256": "a492a08643b51af8b4c2a25d97e1667170a483fc68ca408979b080ae9d771f51"}, "downloads": -1, "filename": "parquet-1.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c2ce908f97beb2e24929b586ca00d721", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24579, "upload_time": "2020-04-30T01:06:39", "upload_time_iso_8601": "2020-04-30T01:06:39.057320Z", "url": "https://files.pythonhosted.org/packages/14/a6/d57a2fe5caac3e0e0cdb78c0e450f30f953a590ecf94478065f33feb3d8f/parquet-1.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04e7aaa557a67e3408ae4c4d40c74ed2", "sha256": "fb1c90768c1b9159d4d6a9b3112ea8107b0b46d7491c5ac452ba7350f333bf0a"}, "downloads": -1, "filename": "parquet-1.3.1.tar.gz", "has_sig": false, "md5_digest": "04e7aaa557a67e3408ae4c4d40c74ed2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23081, "upload_time": "2020-04-30T01:06:40", "upload_time_iso_8601": "2020-04-30T01:06:40.195370Z", "url": "https://files.pythonhosted.org/packages/39/06/56482f6834135a67dfc5a2bfce071a75be5c8c91edd8e319d69eb56b4644/parquet-1.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c2ce908f97beb2e24929b586ca00d721", "sha256": "a492a08643b51af8b4c2a25d97e1667170a483fc68ca408979b080ae9d771f51"}, "downloads": -1, "filename": "parquet-1.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c2ce908f97beb2e24929b586ca00d721", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24579, "upload_time": "2020-04-30T01:06:39", "upload_time_iso_8601": "2020-04-30T01:06:39.057320Z", "url": "https://files.pythonhosted.org/packages/14/a6/d57a2fe5caac3e0e0cdb78c0e450f30f953a590ecf94478065f33feb3d8f/parquet-1.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04e7aaa557a67e3408ae4c4d40c74ed2", "sha256": "fb1c90768c1b9159d4d6a9b3112ea8107b0b46d7491c5ac452ba7350f333bf0a"}, "downloads": -1, "filename": "parquet-1.3.1.tar.gz", "has_sig": false, "md5_digest": "04e7aaa557a67e3408ae4c4d40c74ed2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23081, "upload_time": "2020-04-30T01:06:40", "upload_time_iso_8601": "2020-04-30T01:06:40.195370Z", "url": "https://files.pythonhosted.org/packages/39/06/56482f6834135a67dfc5a2bfce071a75be5c8c91edd8e319d69eb56b4644/parquet-1.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:24 2020"}