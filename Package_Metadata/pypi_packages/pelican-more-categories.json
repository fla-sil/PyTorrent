{"info": {"author": "Oliver Urs Lenz", "author_email": "oliver.urs.lenz@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Framework :: Pelican", "Framework :: Pelican :: Plugins", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU Affero General Public License v3", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# more-categories\n\n[![Build Status](https://img.shields.io/github/workflow/status/pelican-plugins/more-categories/build)](https://github.com/pelican-plugins/more-categories/actions)\n\nThis plugin adds support for multiple categories per article, and for nested\ncategories. It requires Pelican 4.0.0 or newer.\n\n## Multiple categories\nTo indicate that an article belongs to multiple categories, use a\ncomma-separated string:\n\n    Category: foo, bar, bazz\n\nThis will add the article to the categories `foo`, `bar` and `bazz`.\n\n### Templates\nExisting themes that use `article.category` will display only the first of\nthese categories, `foo`. This plugin adds `article.categories` that you can\nloop over instead. To accomodate this plugin in a theme whether it is present\nor not, use:\n\n    {% for cat in article.categories or [article.category] %}\n        <a href=\"{{ SITEURL }}/{{ cat.url }}\">{{ cat }}</a>{{ ', ' if not loop.last }}\n    {% endfor %}\n\n## Nested categories\n(This is a reimplementation of the `subcategory` plugin.)\n\nTo indicate that a category is a child of another category, use a\nslash-separated string:\n\n    Category: foo/bar/bazz\n\nThis will add the article to the categories `foo/bar/bazz`, `foo/bar` and\n`foo`.\n\n### Templates\nExisting themes that use `article.category` will display the full path to the\nmost specific of these categories, `foo/bar/bazz`. For any category `cat`, this\nplugin adds `cat.shortname`, which in this case is `bazz`, `cat.parent`, which\nin this case is the category `foo/bar`, and `cat.ancestors`, which is a list of\nthe category's ancestors, ending with the category itself. For instance, to\nalso include a link to each of the ancestor categories on an article page, in\ncase this plugin in present, use:\n\n    {% for cat in article.category.ancestors or [article.category] %}\n        <a href=\"{{ SITEURL }}/{{ cat.url }}\">{{ cat.shortname or cat }}</a>{{ '/' if not loop.last }}\n    {% endfor %}\n\nLikewise, `category.shortname`, `category.parent` and `category.ancestors` can\nalso be used on the category template.\n\n### Slug\nThe slug of a category is generated recursively by slugifying the shortname of\nthe category and its ancestors, and preserving slashes:\n\n    slug-of-(foo/bar/baz) := slug-of-foo/slug-of-bar/slug-of-baz\n\n### Category folders\nTo specify categories using the directory structure, you can configure\n`PATH_METADATA` to extract the article path into the `category` metadata. The\nfollowing settings would use the entire structure:\n\n    PATH_METADATA = '(?P<category>.*)/.*'\n\nIf you store all articles in a single `articles/` folder that you want to\nignore for this purpose, use:\n\n    PATH_METADATA = 'articles/(?P<category>.*)/.*'\n\n### Categories in templates\nThe list `categories` of all pairs of categories with their corresponding\narticles, which is available in the context and can be used in templates (e.g.\nto make a menu of available categories), is ordered lexicographically, so\ncategories always follow their parent:\n\n    aba\n    aba/dat\n    abaala\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pelican-plugins/more-categories", "keywords": "pelican,plugin", "license": "AGPL-3.0", "maintainer": "", "maintainer_email": "", "name": "pelican-more-categories", "package_url": "https://pypi.org/project/pelican-more-categories/", "platform": "", "project_url": "https://pypi.org/project/pelican-more-categories/", "project_urls": {"Documentation": "https://docs.getpelican.com/", "Funding": "https://donate.getpelican.com/", "Homepage": "https://github.com/pelican-plugins/more-categories", "Repository": "https://github.com/pelican-plugins/more-categories", "Source": "https://github.com/pelican-plugins/more-categories", "Tracker": "https://github.com/pelican-plugins/more-categories/issues"}, "release_url": "https://pypi.org/project/pelican-more-categories/0.0.0/", "requires_dist": ["pelican (>=4.2,<5.0)", "markdown (>=3.1.1,<4.0.0); extra == \"markdown\""], "requires_python": ">=3.6,<4.0", "summary": "Enables nested categories and multiple categories per article", "version": "0.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>more-categories</h1>\n<p><a href=\"https://github.com/pelican-plugins/more-categories/actions\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d77868011bf85fe44d3a29027adf811699df5ec0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f70656c6963616e2d706c7567696e732f6d6f72652d63617465676f726965732f6275696c64\"></a></p>\n<p>This plugin adds support for multiple categories per article, and for nested\ncategories. It requires Pelican 4.0.0 or newer.</p>\n<h2>Multiple categories</h2>\n<p>To indicate that an article belongs to multiple categories, use a\ncomma-separated string:</p>\n<pre><code>Category: foo, bar, bazz\n</code></pre>\n<p>This will add the article to the categories <code>foo</code>, <code>bar</code> and <code>bazz</code>.</p>\n<h3>Templates</h3>\n<p>Existing themes that use <code>article.category</code> will display only the first of\nthese categories, <code>foo</code>. This plugin adds <code>article.categories</code> that you can\nloop over instead. To accomodate this plugin in a theme whether it is present\nor not, use:</p>\n<pre><code>{% for cat in article.categories or [article.category] %}\n    &lt;a href=\"{{ SITEURL }}/{{ cat.url }}\"&gt;{{ cat }}&lt;/a&gt;{{ ', ' if not loop.last }}\n{% endfor %}\n</code></pre>\n<h2>Nested categories</h2>\n<p>(This is a reimplementation of the <code>subcategory</code> plugin.)</p>\n<p>To indicate that a category is a child of another category, use a\nslash-separated string:</p>\n<pre><code>Category: foo/bar/bazz\n</code></pre>\n<p>This will add the article to the categories <code>foo/bar/bazz</code>, <code>foo/bar</code> and\n<code>foo</code>.</p>\n<h3>Templates</h3>\n<p>Existing themes that use <code>article.category</code> will display the full path to the\nmost specific of these categories, <code>foo/bar/bazz</code>. For any category <code>cat</code>, this\nplugin adds <code>cat.shortname</code>, which in this case is <code>bazz</code>, <code>cat.parent</code>, which\nin this case is the category <code>foo/bar</code>, and <code>cat.ancestors</code>, which is a list of\nthe category's ancestors, ending with the category itself. For instance, to\nalso include a link to each of the ancestor categories on an article page, in\ncase this plugin in present, use:</p>\n<pre><code>{% for cat in article.category.ancestors or [article.category] %}\n    &lt;a href=\"{{ SITEURL }}/{{ cat.url }}\"&gt;{{ cat.shortname or cat }}&lt;/a&gt;{{ '/' if not loop.last }}\n{% endfor %}\n</code></pre>\n<p>Likewise, <code>category.shortname</code>, <code>category.parent</code> and <code>category.ancestors</code> can\nalso be used on the category template.</p>\n<h3>Slug</h3>\n<p>The slug of a category is generated recursively by slugifying the shortname of\nthe category and its ancestors, and preserving slashes:</p>\n<pre><code>slug-of-(foo/bar/baz) := slug-of-foo/slug-of-bar/slug-of-baz\n</code></pre>\n<h3>Category folders</h3>\n<p>To specify categories using the directory structure, you can configure\n<code>PATH_METADATA</code> to extract the article path into the <code>category</code> metadata. The\nfollowing settings would use the entire structure:</p>\n<pre><code>PATH_METADATA = '(?P&lt;category&gt;.*)/.*'\n</code></pre>\n<p>If you store all articles in a single <code>articles/</code> folder that you want to\nignore for this purpose, use:</p>\n<pre><code>PATH_METADATA = 'articles/(?P&lt;category&gt;.*)/.*'\n</code></pre>\n<h3>Categories in templates</h3>\n<p>The list <code>categories</code> of all pairs of categories with their corresponding\narticles, which is available in the context and can be used in templates (e.g.\nto make a menu of available categories), is ordered lexicographically, so\ncategories always follow their parent:</p>\n<pre><code>aba\naba/dat\nabaala\n</code></pre>\n\n          </div>"}, "last_serial": 7075600, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "bdaf7a0f561b016c173acc2ef3625d3b", "sha256": "6ac9f4d5d90d466c32a5b6dfc3fe597f5d22491e0b8e65d17c05d1c04d77835d"}, "downloads": -1, "filename": "pelican_more_categories-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bdaf7a0f561b016c173acc2ef3625d3b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 17560, "upload_time": "2020-04-22T07:00:55", "upload_time_iso_8601": "2020-04-22T07:00:55.478505Z", "url": "https://files.pythonhosted.org/packages/1d/35/95b2ebb960be68f09d3f77f96805f0c5556b7d7f70b76c77d0858535f086/pelican_more_categories-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d597c8263a2d659a72f8cd079f6857c", "sha256": "69a2c2e802352a51fb0b023d5d6be1d4eaea60a800141ab32c3a615e01882517"}, "downloads": -1, "filename": "pelican-more-categories-0.0.0.tar.gz", "has_sig": false, "md5_digest": "8d597c8263a2d659a72f8cd079f6857c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 16778, "upload_time": "2020-04-22T07:00:53", "upload_time_iso_8601": "2020-04-22T07:00:53.379627Z", "url": "https://files.pythonhosted.org/packages/86/69/1f4804356eda819e9bde8b1308c70003dab9f13c3ba3bb00fd38318903a1/pelican-more-categories-0.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bdaf7a0f561b016c173acc2ef3625d3b", "sha256": "6ac9f4d5d90d466c32a5b6dfc3fe597f5d22491e0b8e65d17c05d1c04d77835d"}, "downloads": -1, "filename": "pelican_more_categories-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bdaf7a0f561b016c173acc2ef3625d3b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 17560, "upload_time": "2020-04-22T07:00:55", "upload_time_iso_8601": "2020-04-22T07:00:55.478505Z", "url": "https://files.pythonhosted.org/packages/1d/35/95b2ebb960be68f09d3f77f96805f0c5556b7d7f70b76c77d0858535f086/pelican_more_categories-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d597c8263a2d659a72f8cd079f6857c", "sha256": "69a2c2e802352a51fb0b023d5d6be1d4eaea60a800141ab32c3a615e01882517"}, "downloads": -1, "filename": "pelican-more-categories-0.0.0.tar.gz", "has_sig": false, "md5_digest": "8d597c8263a2d659a72f8cd079f6857c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 16778, "upload_time": "2020-04-22T07:00:53", "upload_time_iso_8601": "2020-04-22T07:00:53.379627Z", "url": "https://files.pythonhosted.org/packages/86/69/1f4804356eda819e9bde8b1308c70003dab9f13c3ba3bb00fd38318903a1/pelican-more-categories-0.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:38 2020"}