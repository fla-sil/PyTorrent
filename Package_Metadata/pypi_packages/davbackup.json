{"info": {"author": "Javier Llopis", "author_email": "javier@llopis.me", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: End Users/Desktop", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3 :: Only", "Topic :: Internet :: WWW/HTTP", "Topic :: System :: Archiving :: Backup", "Topic :: System :: Archiving :: Mirroring", "Topic :: Utilities"], "description": "DAVBACKUP\n=========\n\nDownloads an entire tree from a DAV server. This can be used to make backups from an owncloud/nextcloud server.\n\nUsage\n-----\n\nThe following output of the ``--help`` option shows the usage::\n\n    $ python3 davbackup.py --help\n    usage: davbackup.py [-h] [--config FILE] [--destdir DIR] [--start RMT_DIR]\n\n    Download content from DAV server.\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --config FILE, -c FILE\n                            Specify a config file other than the default.\n      --destdir DIR, -d DIR\n                            Specify destination directory.\n      --start RMT_DIR, -s RMT_DIR\n                            Download only the specified subtree.\n\nConfiguration file\n------------------\n\nA sample configuration file is provided with the name ``davbackup.json.sample``. Rename and edit to suit your needs.\n\nThe configuration is a json file whose fields are self explanatory, except perhaps the ``nbackups`` field, explained below. Note that the password is base64 encoded. This makes it obscure, not secure, but the program is meant to be run on a trusted machine::\n\n    {\n        \"protocol\": \"https\",\n        \"server\": \"nextcloud.samplesite.com\",\n        \"username\": \"fred\",\n        \"password\": \"YWJyYWNhZGFicmE=\",\n        \"davstart\": \"/remote.php/dav/files/fred\",\n        \"nbackups\": 4\n    }\n\n\nThe field ``nbackups`` is the number of backups copy to keep. When the local directory exists already, it is presumed to contain a previous backup, and it is renamed with an extension .001, if a directory with a .001 extension exists, it is renamed to .002 and so on until the specified number of backups is reached. Directories that would have a higher number than the number of backups are simply deleted.\n\nInstalling\n----------\n\nUse the provided setup.py utility to install::\n\n    $ python3 setup.py install\n\nOr simply use `pip` to install from the the Pypi site::\n\n    $ pip install davbackup\n\n\nRunning\n-------\n\nOnce you have a valid configuration file as described above, just run::\n\n    $ davbackup --config <configfile> --destdir <localdir>\n\n\nYou can use the arguments described above.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/destrangis/davbackup", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "davbackup", "package_url": "https://pypi.org/project/davbackup/", "platform": "", "project_url": "https://pypi.org/project/davbackup/", "project_urls": {"Homepage": "https://github.com/destrangis/davbackup"}, "release_url": "https://pypi.org/project/davbackup/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Make backups of a DAV Server.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Downloads an entire tree from a DAV server. This can be used to make backups from an owncloud/nextcloud server.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The following output of the <tt><span class=\"pre\">--help</span></tt> option shows the usage:</p>\n<pre>$ python3 davbackup.py --help\nusage: davbackup.py [-h] [--config FILE] [--destdir DIR] [--start RMT_DIR]\n\nDownload content from DAV server.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --config FILE, -c FILE\n                        Specify a config file other than the default.\n  --destdir DIR, -d DIR\n                        Specify destination directory.\n  --start RMT_DIR, -s RMT_DIR\n                        Download only the specified subtree.\n</pre>\n</div>\n<div id=\"configuration-file\">\n<h2>Configuration file</h2>\n<p>A sample configuration file is provided with the name <tt>davbackup.json.sample</tt>. Rename and edit to suit your needs.</p>\n<p>The configuration is a json file whose fields are self explanatory, except perhaps the <tt>nbackups</tt> field, explained below. Note that the password is base64 encoded. This makes it obscure, not secure, but the program is meant to be run on a trusted machine:</p>\n<pre>{\n    \"protocol\": \"https\",\n    \"server\": \"nextcloud.samplesite.com\",\n    \"username\": \"fred\",\n    \"password\": \"YWJyYWNhZGFicmE=\",\n    \"davstart\": \"/remote.php/dav/files/fred\",\n    \"nbackups\": 4\n}\n</pre>\n<p>The field <tt>nbackups</tt> is the number of backups copy to keep. When the local directory exists already, it is presumed to contain a previous backup, and it is renamed with an extension .001, if a directory with a .001 extension exists, it is renamed to .002 and so on until the specified number of backups is reached. Directories that would have a higher number than the number of backups are simply deleted.</p>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>Use the provided setup.py utility to install:</p>\n<pre>$ python3 setup.py install\n</pre>\n<p>Or simply use <cite>pip</cite> to install from the the Pypi site:</p>\n<pre>$ pip install davbackup\n</pre>\n</div>\n<div id=\"running\">\n<h2>Running</h2>\n<p>Once you have a valid configuration file as described above, just run:</p>\n<pre>$ davbackup --config &lt;configfile&gt; --destdir &lt;localdir&gt;\n</pre>\n<p>You can use the arguments described above.</p>\n</div>\n\n          </div>"}, "last_serial": 4896087, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "10f26b53a875164fa94a056e67a83447", "sha256": "5de298115258c826f9ff7a4c60596fe38d0b55ee9c5cd64a690699a00d33a05d"}, "downloads": -1, "filename": "davbackup-0.1.1.tar.gz", "has_sig": false, "md5_digest": "10f26b53a875164fa94a056e67a83447", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5634, "upload_time": "2019-03-04T20:32:07", "upload_time_iso_8601": "2019-03-04T20:32:07.145143Z", "url": "https://files.pythonhosted.org/packages/86/cd/a0665a002566e38ebf658fab5c40006e56ed8af711bd331c1d651d547637/davbackup-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "10f26b53a875164fa94a056e67a83447", "sha256": "5de298115258c826f9ff7a4c60596fe38d0b55ee9c5cd64a690699a00d33a05d"}, "downloads": -1, "filename": "davbackup-0.1.1.tar.gz", "has_sig": false, "md5_digest": "10f26b53a875164fa94a056e67a83447", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5634, "upload_time": "2019-03-04T20:32:07", "upload_time_iso_8601": "2019-03-04T20:32:07.145143Z", "url": "https://files.pythonhosted.org/packages/86/cd/a0665a002566e38ebf658fab5c40006e56ed8af711bd331c1d651d547637/davbackup-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:02 2020"}