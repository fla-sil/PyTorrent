{"info": {"author": "Lin Chen", "author_email": "linchen04@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# py-grpc-prometheus\n\nInstrument library to provide prometheus metrics similar to:\n\n- https://github.com/grpc-ecosystem/java-grpc-prometheus\n- https://github.com/grpc-ecosystem/go-grpc-prometheus\n\n\n## Status\nCurrently, the library has the parity metrics with the Java and Go library.\n\n### Server side:\n- grpc_server_started_total\n- grpc_server_handled_total\n- grpc_server_handled_latency_seconds\n- grpc_server_msg_received_total\n- grpc_server_msg_sent_total\n\n### Client side:\n- grpc_client_started_total\n- grpc_client_completed\n- grpc_client_completed_latency_seconds\n- grpc_client_msg_sent_total\n- grpc_client_msg_received_total\n\n## How to use\n\n```\npip install py-grpc-prometheus\n```\n\n## Client side:\nClient metrics monitoring is done by intercepting the gPRC channel.\n\n```python\nimport grpc\nfrom py_grpc_prometheus.prometheus_client_interceptor import PromClientInterceptor\n\nchannel = grpc.intercept_channel(grpc.insecure_channel('server:6565'),\n                                         PromClientInterceptor())  \n# Start an end point to expose metrics.\nstart_http_server(metrics_port)\n```\n\n## Server side:\nServer metrics are exposed by adding the interceptor when the gRPC server is started. Take a look at\n`tests/integration/hello_world/hello_world_client.py` for the complete example.\n\n```python\nimport grpc\nfrom concurrent import futures\nfrom py_grpc_prometheus.prometheus_server_interceptor import PromServerInterceptor\nfrom prometheus_client import start_http_server\n```\n\nStart the gRPC server with the interceptor, take a look at\n`tests/integration/hello_world/hello_world_server.py` for the complete example.\n\n```python\nserver = grpc.server(futures.ThreadPoolExecutor(max_workers=10),\n                         interceptors=(PromServerInterceptor(),))\n# Start an end point to expose metrics.\nstart_http_server(metrics_port)\n```\n\n## How to run and test\n1. Run the testing server\n\n```bash\npython -m tests.integration.hello_world.hello_world_sever\n```\n\n2. Run the testing client\n```bash\npython -m tests.integration.hello_world.hello_world_client\n```\n\n3. Open http://localhost:50052 for the server side metrics\n4. Open http://localhost:50053 for the client side metrics\n\n## TODO:\n- Unit test with https://github.com/census-instrumentation/opencensus-python/blob/master/tests/unit/trace/ext/grpc/test_server_interceptor.py\n\n## Reference\n- https://grpc.io/grpc/python/grpc.html\n- https://github.com/census-instrumentation/opencensus-python/blob/master/opencensus/trace/ext/grpc/utils.py\n- https://github.com/opentracing-contrib/python-grpc/blob/b4bdc7ce81fa75ede00f7c6bcf5dab8fae47332a/grpc_opentracing/grpcext/grpc_interceptor/server_interceptor.py\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lchenn/py-grpc-prometheus", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "py-grpc-prometheus", "package_url": "https://pypi.org/project/py-grpc-prometheus/", "platform": "", "project_url": "https://pypi.org/project/py-grpc-prometheus/", "project_urls": {"Homepage": "https://github.com/lchenn/py-grpc-prometheus"}, "release_url": "https://pypi.org/project/py-grpc-prometheus/0.2.0/", "requires_dist": ["setuptools (>=39.0.1)", "grpcio (>=1.10.0)", "prometheus-client (>=0.3.0)"], "requires_python": "", "summary": "Python gRPC Prometheus Interceptors", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>py-grpc-prometheus</h1>\n<p>Instrument library to provide prometheus metrics similar to:</p>\n<ul>\n<li><a href=\"https://github.com/grpc-ecosystem/java-grpc-prometheus\" rel=\"nofollow\">https://github.com/grpc-ecosystem/java-grpc-prometheus</a></li>\n<li><a href=\"https://github.com/grpc-ecosystem/go-grpc-prometheus\" rel=\"nofollow\">https://github.com/grpc-ecosystem/go-grpc-prometheus</a></li>\n</ul>\n<h2>Status</h2>\n<p>Currently, the library has the parity metrics with the Java and Go library.</p>\n<h3>Server side:</h3>\n<ul>\n<li>grpc_server_started_total</li>\n<li>grpc_server_handled_total</li>\n<li>grpc_server_handled_latency_seconds</li>\n<li>grpc_server_msg_received_total</li>\n<li>grpc_server_msg_sent_total</li>\n</ul>\n<h3>Client side:</h3>\n<ul>\n<li>grpc_client_started_total</li>\n<li>grpc_client_completed</li>\n<li>grpc_client_completed_latency_seconds</li>\n<li>grpc_client_msg_sent_total</li>\n<li>grpc_client_msg_received_total</li>\n</ul>\n<h2>How to use</h2>\n<pre><code>pip install py-grpc-prometheus\n</code></pre>\n<h2>Client side:</h2>\n<p>Client metrics monitoring is done by intercepting the gPRC channel.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">grpc</span>\n<span class=\"kn\">from</span> <span class=\"nn\">py_grpc_prometheus.prometheus_client_interceptor</span> <span class=\"kn\">import</span> <span class=\"n\">PromClientInterceptor</span>\n\n<span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"n\">grpc</span><span class=\"o\">.</span><span class=\"n\">intercept_channel</span><span class=\"p\">(</span><span class=\"n\">grpc</span><span class=\"o\">.</span><span class=\"n\">insecure_channel</span><span class=\"p\">(</span><span class=\"s1\">'server:6565'</span><span class=\"p\">),</span>\n                                         <span class=\"n\">PromClientInterceptor</span><span class=\"p\">())</span>  \n<span class=\"c1\"># Start an end point to expose metrics.</span>\n<span class=\"n\">start_http_server</span><span class=\"p\">(</span><span class=\"n\">metrics_port</span><span class=\"p\">)</span>\n</pre>\n<h2>Server side:</h2>\n<p>Server metrics are exposed by adding the interceptor when the gRPC server is started. Take a look at\n<code>tests/integration/hello_world/hello_world_client.py</code> for the complete example.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">grpc</span>\n<span class=\"kn\">from</span> <span class=\"nn\">concurrent</span> <span class=\"kn\">import</span> <span class=\"n\">futures</span>\n<span class=\"kn\">from</span> <span class=\"nn\">py_grpc_prometheus.prometheus_server_interceptor</span> <span class=\"kn\">import</span> <span class=\"n\">PromServerInterceptor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">prometheus_client</span> <span class=\"kn\">import</span> <span class=\"n\">start_http_server</span>\n</pre>\n<p>Start the gRPC server with the interceptor, take a look at\n<code>tests/integration/hello_world/hello_world_server.py</code> for the complete example.</p>\n<pre><span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">grpc</span><span class=\"o\">.</span><span class=\"n\">server</span><span class=\"p\">(</span><span class=\"n\">futures</span><span class=\"o\">.</span><span class=\"n\">ThreadPoolExecutor</span><span class=\"p\">(</span><span class=\"n\">max_workers</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">),</span>\n                         <span class=\"n\">interceptors</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">PromServerInterceptor</span><span class=\"p\">(),))</span>\n<span class=\"c1\"># Start an end point to expose metrics.</span>\n<span class=\"n\">start_http_server</span><span class=\"p\">(</span><span class=\"n\">metrics_port</span><span class=\"p\">)</span>\n</pre>\n<h2>How to run and test</h2>\n<ol>\n<li>Run the testing server</li>\n</ol>\n<pre>python -m tests.integration.hello_world.hello_world_sever\n</pre>\n<ol>\n<li>Run the testing client</li>\n</ol>\n<pre>python -m tests.integration.hello_world.hello_world_client\n</pre>\n<ol>\n<li>Open <a href=\"http://localhost:50052\" rel=\"nofollow\">http://localhost:50052</a> for the server side metrics</li>\n<li>Open <a href=\"http://localhost:50053\" rel=\"nofollow\">http://localhost:50053</a> for the client side metrics</li>\n</ol>\n<h2>TODO:</h2>\n<ul>\n<li>Unit test with <a href=\"https://github.com/census-instrumentation/opencensus-python/blob/master/tests/unit/trace/ext/grpc/test_server_interceptor.py\" rel=\"nofollow\">https://github.com/census-instrumentation/opencensus-python/blob/master/tests/unit/trace/ext/grpc/test_server_interceptor.py</a></li>\n</ul>\n<h2>Reference</h2>\n<ul>\n<li><a href=\"https://grpc.io/grpc/python/grpc.html\" rel=\"nofollow\">https://grpc.io/grpc/python/grpc.html</a></li>\n<li><a href=\"https://github.com/census-instrumentation/opencensus-python/blob/master/opencensus/trace/ext/grpc/utils.py\" rel=\"nofollow\">https://github.com/census-instrumentation/opencensus-python/blob/master/opencensus/trace/ext/grpc/utils.py</a></li>\n<li><a href=\"https://github.com/opentracing-contrib/python-grpc/blob/b4bdc7ce81fa75ede00f7c6bcf5dab8fae47332a/grpc_opentracing/grpcext/grpc_interceptor/server_interceptor.py\" rel=\"nofollow\">https://github.com/opentracing-contrib/python-grpc/blob/b4bdc7ce81fa75ede00f7c6bcf5dab8fae47332a/grpc_opentracing/grpcext/grpc_interceptor/server_interceptor.py</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6324321, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "0986af8f4c7bb9090c2bfcc795a61e71", "sha256": "43b91a02015e6780643860e0b02a448decc7828a8a4b9b87e93e7936aa068b26"}, "downloads": -1, "filename": "py_grpc_prometheus-0.0.1.tar.gz", "has_sig": false, "md5_digest": "0986af8f4c7bb9090c2bfcc795a61e71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1931, "upload_time": "2018-07-16T19:22:36", "upload_time_iso_8601": "2018-07-16T19:22:36.923652Z", "url": "https://files.pythonhosted.org/packages/01/38/d07e4cf6e200ca10c2153819225627989a34668eb9252c6a97c5060a25ba/py_grpc_prometheus-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "1f0175cae7115d72b1700697ca9357cb", "sha256": "3aa0bab3a09b842411391bf5c493047dfd412c72baa0fd9aec7787732e93eeec"}, "downloads": -1, "filename": "py_grpc_prometheus-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1f0175cae7115d72b1700697ca9357cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9027, "upload_time": "2018-12-15T09:52:18", "upload_time_iso_8601": "2018-12-15T09:52:18.273018Z", "url": "https://files.pythonhosted.org/packages/87/af/741df66e061b0a3077f0a30182f2ed7b65ed2d0fadbf5515b60d60390740/py_grpc_prometheus-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0c458f8bee48d1e2a5e79cca67e0cf1", "sha256": "5c69593666e228bd51e7fa81ca215337a19357311498849f2fbe7197622769e0"}, "downloads": -1, "filename": "py_grpc_prometheus-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c0c458f8bee48d1e2a5e79cca67e0cf1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3316, "upload_time": "2018-12-15T09:52:19", "upload_time_iso_8601": "2018-12-15T09:52:19.400066Z", "url": "https://files.pythonhosted.org/packages/14/cb/327dad3158c276dfb1492a88782d8c962d030de8f4dbb729996830ddf92b/py_grpc_prometheus-0.0.2.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "c1acff40d9f3fd4e2d018c8a70c8f486", "sha256": "2a3a580c66d2ca98f794a365aac07fc6057c1939c4c1a006086f79b9eb852667"}, "downloads": -1, "filename": "py_grpc_prometheus-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c1acff40d9f3fd4e2d018c8a70c8f486", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10607, "upload_time": "2018-12-15T21:57:39", "upload_time_iso_8601": "2018-12-15T21:57:39.470010Z", "url": "https://files.pythonhosted.org/packages/a5/a0/31c33d3a936aa353515aa1face909603af851063cdd18caa49f04b8c0929/py_grpc_prometheus-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f300832732823c66935563565e30c1c", "sha256": "dfb2f443decd08c929b9b4d746bb2b3b42be3b8968b51e70e6be8a8f6e4e3585"}, "downloads": -1, "filename": "py_grpc_prometheus-0.1.2.tar.gz", "has_sig": false, "md5_digest": "6f300832732823c66935563565e30c1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4406, "upload_time": "2018-12-15T21:57:40", "upload_time_iso_8601": "2018-12-15T21:57:40.723415Z", "url": "https://files.pythonhosted.org/packages/7a/1f/479f540448cb2955b3ec0238e97238f4c80b4198068eaf2d51c00fa01b72/py_grpc_prometheus-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "2900c9a60dbd69361c80fc62cf402a92", "sha256": "ab3f7a8495bbe2ae5de98fade38247a38341cb151e24ce9f64c6f072ac813d42"}, "downloads": -1, "filename": "py_grpc_prometheus-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2900c9a60dbd69361c80fc62cf402a92", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10606, "upload_time": "2019-12-18T09:12:09", "upload_time_iso_8601": "2019-12-18T09:12:09.047223Z", "url": "https://files.pythonhosted.org/packages/30/f4/60114fb31f4c7710c6dce4c746d48c47e98e4853977533523c1c545ea7e4/py_grpc_prometheus-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94514e8600c6fb751fc4b673f28d4971", "sha256": "e933c9fd96247c0773a2d872fa66382680b32eb2ebf013cf45749d9dd21f33ad"}, "downloads": -1, "filename": "py_grpc_prometheus-0.2.0.tar.gz", "has_sig": false, "md5_digest": "94514e8600c6fb751fc4b673f28d4971", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4402, "upload_time": "2019-12-18T09:12:10", "upload_time_iso_8601": "2019-12-18T09:12:10.649015Z", "url": "https://files.pythonhosted.org/packages/d3/37/dcc34edc40a1f6c00aff4df28d2366b8115388d6669c753043ff3707564f/py_grpc_prometheus-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2900c9a60dbd69361c80fc62cf402a92", "sha256": "ab3f7a8495bbe2ae5de98fade38247a38341cb151e24ce9f64c6f072ac813d42"}, "downloads": -1, "filename": "py_grpc_prometheus-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2900c9a60dbd69361c80fc62cf402a92", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10606, "upload_time": "2019-12-18T09:12:09", "upload_time_iso_8601": "2019-12-18T09:12:09.047223Z", "url": "https://files.pythonhosted.org/packages/30/f4/60114fb31f4c7710c6dce4c746d48c47e98e4853977533523c1c545ea7e4/py_grpc_prometheus-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94514e8600c6fb751fc4b673f28d4971", "sha256": "e933c9fd96247c0773a2d872fa66382680b32eb2ebf013cf45749d9dd21f33ad"}, "downloads": -1, "filename": "py_grpc_prometheus-0.2.0.tar.gz", "has_sig": false, "md5_digest": "94514e8600c6fb751fc4b673f28d4971", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4402, "upload_time": "2019-12-18T09:12:10", "upload_time_iso_8601": "2019-12-18T09:12:10.649015Z", "url": "https://files.pythonhosted.org/packages/d3/37/dcc34edc40a1f6c00aff4df28d2366b8115388d6669c753043ff3707564f/py_grpc_prometheus-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:38 2020"}