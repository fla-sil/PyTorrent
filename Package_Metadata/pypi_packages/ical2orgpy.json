{"info": {"author": "Aitor Soroa", "author_email": "a.soroa@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "ical2orgpy\n==========\n\nThis script converts an ical calendar (for instance, as exported from google\ncalendar) into an org-mode document. It is conceived as a replacement of the\nawk script located here:\n\nhttp://orgmode.org/worg/org-tutorials/org-google-sync.html\n\nThe main difference is that ical2orgpy correctly manages recurring events\nof \"yearly\", \"daily\" and \"weekly\" types. ical2orgpy duplicates all\nrecurring events falling into a specified time-frame into the exported\norg-document.\n\nInstallation\n============\n\nThe command `ical2orgpy` is provided by means of python package `ical2orgpy`.\n\nUse `pip` (recommended to install into virtualenv)::\n\n    $ pip install ical2orgpy\n\n\nInstalling from source code\n===========================\n\nYou can install the package directly from git source like this::\n\n    $ cd <to project folder>\n    $ pip install --user .\n\nTo use the script, just call::\n\n  $ ~/.local/bin/ical2orgpy\n\nAlternatively, you can use the `pipsi` package, by just doing::\n\n  $ curl https://raw.githubusercontent.com/mitsuhiko/pipsi/master/get-pipsi.py | python\n  $ cd <to project folder>\n  $ pipsi install .\n\n\nUsage\n=====\nSimply use the `ical2orgpy` command::\n\n    $ ical2orgpy --help\n\nor, if installed locally from the git repo::\n\n    $ ~/.local/bin/ical2orgpy\n\n.. highlight:: bash\n\t\t\t\t   \nThe script requires two files, the input ics and the output org\ndocument. Usually, `ical2orgpy` is called within a script that grabs the\nical file from some source (i.e. Google Calendar), and generates the\nappropriate org document. Such an script would have the following shape::\n\n               #!/bin/bash\n               \n               # customize these\n               WGET=<path to wget>\n               ICS2ORG=<path to ical2org>\n               ICSFILE=$(mktemp)\n               ORGFILE=<path to orgfile>\n               URL=<url to your private Google calendar>\n               \n               # no customization needed below\n    \n               $WGET -O $ICSFILE $URL\n               $ICS2ORG $ICSFILE $ORGFILE\n               rm -f $ICSFILE\n  \nSee further instructions here:\n\nhttp://orgmode.org/worg/org-tutorials/org-google-sync.html\n\nDevelopment\n===========\nClone the repository and cd into it.\n\nAssuming you have Python 2.7 and `tox` package installed::\n\n    $ tox -e py27\n\nThen activate the virtualenv::\n\n    $ source .tox/py27/bin/activate\n    (py27)$\n\nAnd use here the package.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/asoroa/ical2org.py", "keywords": "calendar", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "ical2orgpy", "package_url": "https://pypi.org/project/ical2orgpy/", "platform": "", "project_url": "https://pypi.org/project/ical2orgpy/", "project_urls": {"Homepage": "https://github.com/asoroa/ical2org.py"}, "release_url": "https://pypi.org/project/ical2orgpy/0.3.0/", "requires_dist": null, "requires_python": "", "summary": "Converting ICAL file into org-mode format.", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            ical2orgpy<br>==========<br><br>This script converts an ical calendar (for instance, as exported from google<br>calendar) into an org-mode document. It is conceived as a replacement of the<br>awk script located here:<br><br>http://orgmode.org/worg/org-tutorials/org-google-sync.html<br><br>The main difference is that ical2orgpy correctly manages recurring events<br>of \"yearly\", \"daily\" and \"weekly\" types. ical2orgpy duplicates all<br>recurring events falling into a specified time-frame into the exported<br>org-document.<br><br>Installation<br>============<br><br>The command `ical2orgpy` is provided by means of python package `ical2orgpy`.<br><br>Use `pip` (recommended to install into virtualenv)::<br><br>    $ pip install ical2orgpy<br><br><br>Installing from source code<br>===========================<br><br>You can install the package directly from git source like this::<br><br>    $ cd &lt;to project folder&gt;<br>    $ pip install --user .<br><br>To use the script, just call::<br><br>  $ ~/.local/bin/ical2orgpy<br><br>Alternatively, you can use the `pipsi` package, by just doing::<br><br>  $ curl https://raw.githubusercontent.com/mitsuhiko/pipsi/master/get-pipsi.py | python<br>  $ cd &lt;to project folder&gt;<br>  $ pipsi install .<br><br><br>Usage<br>=====<br>Simply use the `ical2orgpy` command::<br><br>    $ ical2orgpy --help<br><br>or, if installed locally from the git repo::<br><br>    $ ~/.local/bin/ical2orgpy<br><br>.. highlight:: bash<br>\t\t\t\t   <br>The script requires two files, the input ics and the output org<br>document. Usually, `ical2orgpy` is called within a script that grabs the<br>ical file from some source (i.e. Google Calendar), and generates the<br>appropriate org document. Such an script would have the following shape::<br><br>               #!/bin/bash<br>               <br>               # customize these<br>               WGET=&lt;path to wget&gt;<br>               ICS2ORG=&lt;path to ical2org&gt;<br>               ICSFILE=$(mktemp)<br>               ORGFILE=&lt;path to orgfile&gt;<br>               URL=&lt;url to your private Google calendar&gt;<br>               <br>               # no customization needed below<br>    <br>               $WGET -O $ICSFILE $URL<br>               $ICS2ORG $ICSFILE $ORGFILE<br>               rm -f $ICSFILE<br>  <br>See further instructions here:<br><br>http://orgmode.org/worg/org-tutorials/org-google-sync.html<br><br>Development<br>===========<br>Clone the repository and cd into it.<br><br>Assuming you have Python 2.7 and `tox` package installed::<br><br>    $ tox -e py27<br><br>Then activate the virtualenv::<br><br>    $ source .tox/py27/bin/activate<br>    (py27)$<br><br>And use here the package.\n          </div>"}, "last_serial": 4468698, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "992b9334c26eb0d242db94c6d605c227", "sha256": "e0fd53bda5f17b05ef18d35ecd81eb30ce0607e5bd992afd2c235d9a56ef6f4b"}, "downloads": -1, "filename": "ical2orgpy-0.2.0.tar.gz", "has_sig": false, "md5_digest": "992b9334c26eb0d242db94c6d605c227", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25029, "upload_time": "2018-01-08T15:24:00", "upload_time_iso_8601": "2018-01-08T15:24:00.150851Z", "url": "https://files.pythonhosted.org/packages/5a/4a/68309b3d90e9b36c44bc16525430dd71d9f85165212f3d6cd5ba172c76dc/ical2orgpy-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "dbb230013eea42fd19e1bfdf74b9cf1a", "sha256": "43779b23b092e8605e42e359e33f51a2a653cf22649806b24d6b4559c7c5ba37"}, "downloads": -1, "filename": "ical2orgpy-0.3.0.tar.gz", "has_sig": false, "md5_digest": "dbb230013eea42fd19e1bfdf74b9cf1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25387, "upload_time": "2018-11-09T09:18:58", "upload_time_iso_8601": "2018-11-09T09:18:58.903522Z", "url": "https://files.pythonhosted.org/packages/e9/bd/709e900b6efdc9ca69812fd140dc73aff2db0f692f704e6b77c9eb12d6c2/ical2orgpy-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dbb230013eea42fd19e1bfdf74b9cf1a", "sha256": "43779b23b092e8605e42e359e33f51a2a653cf22649806b24d6b4559c7c5ba37"}, "downloads": -1, "filename": "ical2orgpy-0.3.0.tar.gz", "has_sig": false, "md5_digest": "dbb230013eea42fd19e1bfdf74b9cf1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25387, "upload_time": "2018-11-09T09:18:58", "upload_time_iso_8601": "2018-11-09T09:18:58.903522Z", "url": "https://files.pythonhosted.org/packages/e9/bd/709e900b6efdc9ca69812fd140dc73aff2db0f692f704e6b77c9eb12d6c2/ical2orgpy-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:09 2020"}