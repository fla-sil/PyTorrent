{"info": {"author": "Emitrom Inc.", "author_email": "support@emitrom.com", "bugtrack_url": null, "classifiers": [], "description": "==================\nintegra-sdk-python\n==================\n\n* The Integra Python SDK can be used to seemelessly communicate with an Integra reactor.\n* The Integra REST documentation and additional SDKs can be obtained at `Integra REST`_.\n* The Integra documentation can be found at `Integra Docs`_.\n\n.. _Integra REST: http://docs.emitrom.com/docs/integra/1.0.0/downloads.html\n.. _Integra Docs: http://wiki.emitrom.com/wiki/index.php/Integra\n\nDependencies\n============\n\n* python 2.6+\n* lxml\n* requests\n* integra_major_minor_build\n\nBuild your own integra_major_minor_build\n========================================\n\n* Download the `Integra XSD`_.\n* Install `pip`_\n* pip install lxml\n* pip install requests\n* pip install generateDS\n* generateDS.py -o integra_major_minor_build.py integra.xsd\n \n.. _Integra XSD: http://docs.emitrom.com/docs/integra/1.0.0/ns0.xsd\n.. _pip: https://pip.pypa.io/en/latest/\n\nUsage\n=====\n\n1- Init RestTemplate::\n\n RestTemplate().init('https://localhost:8443/rest', 'admin', 'integra')\n\n2- Invoke RestTemplate REST methods:\n\n* post  \n* get_all  \n* get_by_id  \n* put  \n* delete  \n\nRestTemplate contains a static list of REST resource end points. Example putting it all together; creating a provider::\n\n class ProviderServiceTest(unittest.TestCase):\n\n  description = 'test desc'\n  hostname = 'localhost'\n  name = 'test name'\n  password = 'password'\n  port = 9999\n  timeout = 1000\n    \n  def setUp(self):\n   RestTemplate().init('https://localhost:8443/rest', 'admin', 'integra')\n\n  def test_create(self):\n   prov = self._get_provider()\n        \n   prov = RestTemplate().post(RestTemplate.PROVIDERS, prov)\n   self.assertIsNotNone(prov, 'Unable to create provider')\n   self.assertIsNotNone(prov.get_id())\n      \n  def _get_provider(self):\n   prov = provider()\n   prov.set_description(self.description)\n   prov.set_hostname(self.hostname)\n   prov.set_name(self.name)\n   prov.set_password(self.password)\n   prov.set_port(self.port)\n   prov.set_secured(True)\n   prov.set_timeout(self.timeout)\n      \n   return prov\n      \n if __name__ == \"__main__\":\n  unittest.main()\n\nLicense\n=======\n\nThe Integra Python SDK is Open Source software released under the `Apache 2.0 license`_.\n\n.. _Apache 2.0 license: http://www.apache.org/licenses/LICENSE-2.0.html", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/integra-sdk/", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "integra-sdk", "package_url": "https://pypi.org/project/integra-sdk/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/integra-sdk/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/integra-sdk/"}, "release_url": "https://pypi.org/project/integra-sdk/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Integra SDK", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <ul>\n<li>The Integra Python SDK can be used to seemelessly communicate with an Integra reactor.</li>\n<li>The Integra REST documentation and additional SDKs can be obtained at <a href=\"http://docs.emitrom.com/docs/integra/1.0.0/downloads.html\" rel=\"nofollow\">Integra REST</a>.</li>\n<li>The Integra documentation can be found at <a href=\"http://wiki.emitrom.com/wiki/index.php/Integra\" rel=\"nofollow\">Integra Docs</a>.</li>\n</ul>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li>python 2.6+</li>\n<li>lxml</li>\n<li>requests</li>\n<li>integra_major_minor_build</li>\n</ul>\n</div>\n<div id=\"build-your-own-integra-major-minor-build\">\n<h2>Build your own integra_major_minor_build</h2>\n<ul>\n<li>Download the <a href=\"http://docs.emitrom.com/docs/integra/1.0.0/ns0.xsd\" rel=\"nofollow\">Integra XSD</a>.</li>\n<li>Install <a href=\"https://pip.pypa.io/en/latest/\" rel=\"nofollow\">pip</a></li>\n<li>pip install lxml</li>\n<li>pip install requests</li>\n<li>pip install generateDS</li>\n<li>generateDS.py -o integra_major_minor_build.py integra.xsd</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>1- Init RestTemplate:</p>\n<pre>RestTemplate().init('https://localhost:8443/rest', 'admin', 'integra')\n</pre>\n<p>2- Invoke RestTemplate REST methods:</p>\n<ul>\n<li>post</li>\n<li>get_all</li>\n<li>get_by_id</li>\n<li>put</li>\n<li>delete</li>\n</ul>\n<p>RestTemplate contains a static list of REST resource end points. Example putting it all together; creating a provider:</p>\n<pre>class ProviderServiceTest(unittest.TestCase):\n\n description = 'test desc'\n hostname = 'localhost'\n name = 'test name'\n password = 'password'\n port = 9999\n timeout = 1000\n\n def setUp(self):\n  RestTemplate().init('https://localhost:8443/rest', 'admin', 'integra')\n\n def test_create(self):\n  prov = self._get_provider()\n\n  prov = RestTemplate().post(RestTemplate.PROVIDERS, prov)\n  self.assertIsNotNone(prov, 'Unable to create provider')\n  self.assertIsNotNone(prov.get_id())\n\n def _get_provider(self):\n  prov = provider()\n  prov.set_description(self.description)\n  prov.set_hostname(self.hostname)\n  prov.set_name(self.name)\n  prov.set_password(self.password)\n  prov.set_port(self.port)\n  prov.set_secured(True)\n  prov.set_timeout(self.timeout)\n\n  return prov\n\nif __name__ == \"__main__\":\n unittest.main()\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The Integra Python SDK is Open Source software released under the <a href=\"http://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"nofollow\">Apache 2.0 license</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 1434213, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "1ca1e17e33bb9ae7f4e0a0633eda5284", "sha256": "9a20fbf067d14adaa19123d37d5dd494dd485e1d14d2dd0df83961f7e537ab3f"}, "downloads": -1, "filename": "integra-sdk-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1ca1e17e33bb9ae7f4e0a0633eda5284", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24392, "upload_time": "2015-02-23T03:43:20", "upload_time_iso_8601": "2015-02-23T03:43:20.850426Z", "url": "https://files.pythonhosted.org/packages/b6/76/90a56c379dea1176897b141bb4b445c10eab1ccf4a779a6b2838866fbe39/integra-sdk-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1ca1e17e33bb9ae7f4e0a0633eda5284", "sha256": "9a20fbf067d14adaa19123d37d5dd494dd485e1d14d2dd0df83961f7e537ab3f"}, "downloads": -1, "filename": "integra-sdk-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1ca1e17e33bb9ae7f4e0a0633eda5284", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24392, "upload_time": "2015-02-23T03:43:20", "upload_time_iso_8601": "2015-02-23T03:43:20.850426Z", "url": "https://files.pythonhosted.org/packages/b6/76/90a56c379dea1176897b141bb4b445c10eab1ccf4a779a6b2838866fbe39/integra-sdk-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:33 2020"}