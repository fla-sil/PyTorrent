{"info": {"author": "Mathieu Fourment", "author_email": "mathieu.fourment@uts.edu.au", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "# phylostan: phylogenetic inference using Stan\n\n## Introduction\n\n*phylostan* is a tool written in python for inferring phylogenetic trees from nucleotide datasets. \nIt generates a variety of phylogenetic models using the Stan language.\n Through the pystan library, *phylostan* has access to Stan's variational inference and sampling (NUTS and HMC) engines.\nThe program has been described and its performance evaluated in a [preprint](https://doi.org/10.1101/702944). The data and scripts used to generate the results can be found [here](examples/README.md).\n\n## Features\nPhylogenetic model components:\n- Nucleotide substitution models: JC69, HKY, GTR\n- Rate heterogeneity: discretized Weibull distribution and general discrete distribution\n- Tree without clock constraint with uniform prior on topology\n- Time tree:\n  - Homochronous sequences: same sampling date\n  - Heterochronous sequences: sequences sampled at different time points\n - Molecular clocks:\n   - Strict\n   - [Autocorrelated](https://doi.org/10.1093/oxfordjournals.molbev.a025892)\n   - [Uncorrelated](https://dx.doi.org/10.1371%2Fjournal.pbio.0040088): log-normal hierarchical prior\n - Coalescent models:\n   - Constant population size\n   - [Skyride](https://doi.org/10.1093/molbev/msn090)\n   - [Skygrid](https://doi.org/10.1093/molbev/mss265)\n\nAlgorithms provided by Stan:\n- Variational inference:\n  - Mean-field distribution\n  - Full-rank distribution\n- No U-Turn Sampler ([NUTS](https://arxiv.org/abs/1111.4246))\n- Hamiltonian Monte Carlo (HMC)\n\n## Prerequisites\n\n| Program/Library    | Version | Description |\n|----------- | --------| -- |\n| python | Tested on python 2.7, 3.5, 3.6, 3.7           | |\n| [pystan](https://pystan.readthedocs.io/)    | >=2.19 | API for [Stan](https://mc-stan.org) |\n| [dendropy](https://www.dendropy.org)      |   | Library for manipulating trees and alignments|\n| numpy   | >=1.7    | |\n\n\n## You can install phylostan using pip\n```bash\npip install phylostan\n```\n\n## You can also run it locally\n```bash\npython -m phylostan.phylostan <COMMAND>\n```\nwhere `<COMMAND>` is either the *build* or *run* command.\n\n## Command-line usage\n\n*phylostan* is decomposed into two sub-commands:\n- *build*: creates a Stan file: a text file containing the model.\n- *run*: runs a Stan file with the data.\n\nThese two steps are separated so the user can edit the Stan model. The main reason would be to modify the priors.\n\nTo get some help about the *build* or *run* commands:\n```bash\nphylostan build --help\nphylostan run --help\n```\n\n## Quickstart\n\nWe are going to use the `fluA.fa` alignment and `fluA.tree` tree files. This dataset contains 69 influenza A virus haemagglutinin nucleotide sequences isolated between 1981 and 1998.  \n\nFirst, a Stan script needs to be generated using the *build* command:\n```bash\ncd examples/fluA\nphylostan build -s fluA-GTR-W4.stan  -m HKY -C 4 \\\n --heterochronous --estimate_rate --clock strict --coalescent constant\n```\n\nThis command is going to create a Stan file `fluA-GTR-W4.stan` with the following model:\n- Hasegawa, Kishino and Yano (HKY) nucleotide substitution model\n- Rate heterogeneity with 4 rate categories using the Weibull distribution\n- Assumes that sequences were sampled are different time points (heterochronous)\n- Constant effective population size\n- The substitution rate will be estimated\n\nIn the second step we compile and run the script with our data\n```bash\nphylostan run -s fluA-GTR-W4.stan  -m HKY -C 4 \\\n --heterochronous --estimate_rate --clock strict --coalescent constant \\\n -i fluA.fa -t fluA.tree -o fluA -q meanfield\n```\n\nThe *run* command requires the data (tree and alignment) and an output parameter.\nIt also needs the parameters that were provided to the *build* command.\nThe output will consists of 4 files:\n- `fluA`: this file is the output file of Stan. It contains the samples drawn from the variational distribution (or MCMC samples).\n- `fluA.diag`: this file is also generated by Stan and it contains some information such as the ELBO at each iteration.\n- `fluA.trees`: this file is a nexus file containing trees. It can be opened with a program such as [FigTree](https://github.com/rambaut/figtree) or summarized using *treeannotator* from [BEAST](https://beast.community/treeannotator) or [BEAST2](https://www.beast2.org/treeannotator/).\n- `fluA-GTR-W4.pkl`: the Stan script is compiled into this binary file. This file can be reused automatically by *phylostan* unless it must be recompiled, then the option `--compile` can be used.\n\nAt the end of the run, *phylostan* will print on the screen the mean and 95% credibility interval of the parameters of interest:\n```\nWeibull (shape) mean: 0.488 95% CI: (0.383,0.616)\nStrict clock (rate) mean: 0.00499 95% CI: (0.00432,0.00577)\nConstant population size (theta) mean: 4.03 95% CI: (3.14,5.05)\nHKY (kappa) mean: 5.58 95% CI: (4.37 7.039)\nRoot height mean: 18.96 95% CI: (18.36 19.74)\n```\nIn this example we have used a mean-field distribution (`-q meanfield`) to approximate the posterior using variational inference.\nThe Stan model is already compiled so we can run the NUTS algorithm without re-generating the script file, simply issue the command:\n```bash\nphylostan run -s fluA-GTR-W4.stan  -m HKY -C 4 \\\n --heterochronous --estimate_rate --clock strict --coalescent constant \\\n -i fluA.fa -t fluA.tree -o fluA -a nuts\n```\n\nThe NUTS algorithm is much slower (and more accurate) than variational inference so it should be used on a small dataset.\n\n## Reference\nMathieu Fourment and Aaron E. Darling. Evaluating probabilistic programming and fast variational Bayesian inference in phylogenetics. _bioRxiv_. doi: [10.1101/702944](https://doi.org/10.1101/702944). \n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/4ment/phylostan", "keywords": "", "license": "GPL3", "maintainer": "", "maintainer_email": "", "name": "phylostan", "package_url": "https://pypi.org/project/phylostan/", "platform": "", "project_url": "https://pypi.org/project/phylostan/", "project_urls": {"Homepage": "https://github.com/4ment/phylostan"}, "release_url": "https://pypi.org/project/phylostan/1.0.3/", "requires_dist": ["pystan (>=2.19)", "DendroPy", "numpy (>=1.7)"], "requires_python": "", "summary": "Phylogenetic inference with Stan", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>phylostan: phylogenetic inference using Stan</h1>\n<h2>Introduction</h2>\n<p><em>phylostan</em> is a tool written in python for inferring phylogenetic trees from nucleotide datasets.\nIt generates a variety of phylogenetic models using the Stan language.\nThrough the pystan library, <em>phylostan</em> has access to Stan's variational inference and sampling (NUTS and HMC) engines.\nThe program has been described and its performance evaluated in a <a href=\"https://doi.org/10.1101/702944\" rel=\"nofollow\">preprint</a>. The data and scripts used to generate the results can be found <a href=\"examples/README.md\" rel=\"nofollow\">here</a>.</p>\n<h2>Features</h2>\n<p>Phylogenetic model components:</p>\n<ul>\n<li>Nucleotide substitution models: JC69, HKY, GTR</li>\n<li>Rate heterogeneity: discretized Weibull distribution and general discrete distribution</li>\n<li>Tree without clock constraint with uniform prior on topology</li>\n<li>Time tree:\n<ul>\n<li>Homochronous sequences: same sampling date</li>\n<li>Heterochronous sequences: sequences sampled at different time points</li>\n</ul>\n</li>\n<li>Molecular clocks:\n<ul>\n<li>Strict</li>\n<li><a href=\"https://doi.org/10.1093/oxfordjournals.molbev.a025892\" rel=\"nofollow\">Autocorrelated</a></li>\n<li><a href=\"https://dx.doi.org/10.1371%2Fjournal.pbio.0040088\" rel=\"nofollow\">Uncorrelated</a>: log-normal hierarchical prior</li>\n</ul>\n</li>\n<li>Coalescent models:\n<ul>\n<li>Constant population size</li>\n<li><a href=\"https://doi.org/10.1093/molbev/msn090\" rel=\"nofollow\">Skyride</a></li>\n<li><a href=\"https://doi.org/10.1093/molbev/mss265\" rel=\"nofollow\">Skygrid</a></li>\n</ul>\n</li>\n</ul>\n<p>Algorithms provided by Stan:</p>\n<ul>\n<li>Variational inference:\n<ul>\n<li>Mean-field distribution</li>\n<li>Full-rank distribution</li>\n</ul>\n</li>\n<li>No U-Turn Sampler (<a href=\"https://arxiv.org/abs/1111.4246\" rel=\"nofollow\">NUTS</a>)</li>\n<li>Hamiltonian Monte Carlo (HMC)</li>\n</ul>\n<h2>Prerequisites</h2>\n<table>\n<thead>\n<tr>\n<th>Program/Library</th>\n<th>Version</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>python</td>\n<td>Tested on python 2.7, 3.5, 3.6, 3.7</td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://pystan.readthedocs.io/\" rel=\"nofollow\">pystan</a></td>\n<td>&gt;=2.19</td>\n<td>API for <a href=\"https://mc-stan.org\" rel=\"nofollow\">Stan</a></td>\n</tr>\n<tr>\n<td><a href=\"https://www.dendropy.org\" rel=\"nofollow\">dendropy</a></td>\n<td></td>\n<td>Library for manipulating trees and alignments</td>\n</tr>\n<tr>\n<td>numpy</td>\n<td>&gt;=1.7</td>\n<td></td>\n</tr></tbody></table>\n<h2>You can install phylostan using pip</h2>\n<pre>pip install phylostan\n</pre>\n<h2>You can also run it locally</h2>\n<pre>python -m phylostan.phylostan &lt;COMMAND&gt;\n</pre>\n<p>where <code>&lt;COMMAND&gt;</code> is either the <em>build</em> or <em>run</em> command.</p>\n<h2>Command-line usage</h2>\n<p><em>phylostan</em> is decomposed into two sub-commands:</p>\n<ul>\n<li><em>build</em>: creates a Stan file: a text file containing the model.</li>\n<li><em>run</em>: runs a Stan file with the data.</li>\n</ul>\n<p>These two steps are separated so the user can edit the Stan model. The main reason would be to modify the priors.</p>\n<p>To get some help about the <em>build</em> or <em>run</em> commands:</p>\n<pre>phylostan build --help\nphylostan run --help\n</pre>\n<h2>Quickstart</h2>\n<p>We are going to use the <code>fluA.fa</code> alignment and <code>fluA.tree</code> tree files. This dataset contains 69 influenza A virus haemagglutinin nucleotide sequences isolated between 1981 and 1998.</p>\n<p>First, a Stan script needs to be generated using the <em>build</em> command:</p>\n<pre><span class=\"nb\">cd</span> examples/fluA\nphylostan build -s fluA-GTR-W4.stan  -m HKY -C <span class=\"m\">4</span> <span class=\"se\">\\</span>\n --heterochronous --estimate_rate --clock strict --coalescent constant\n</pre>\n<p>This command is going to create a Stan file <code>fluA-GTR-W4.stan</code> with the following model:</p>\n<ul>\n<li>Hasegawa, Kishino and Yano (HKY) nucleotide substitution model</li>\n<li>Rate heterogeneity with 4 rate categories using the Weibull distribution</li>\n<li>Assumes that sequences were sampled are different time points (heterochronous)</li>\n<li>Constant effective population size</li>\n<li>The substitution rate will be estimated</li>\n</ul>\n<p>In the second step we compile and run the script with our data</p>\n<pre>phylostan run -s fluA-GTR-W4.stan  -m HKY -C <span class=\"m\">4</span> <span class=\"se\">\\</span>\n --heterochronous --estimate_rate --clock strict --coalescent constant <span class=\"se\">\\</span>\n -i fluA.fa -t fluA.tree -o fluA -q meanfield\n</pre>\n<p>The <em>run</em> command requires the data (tree and alignment) and an output parameter.\nIt also needs the parameters that were provided to the <em>build</em> command.\nThe output will consists of 4 files:</p>\n<ul>\n<li><code>fluA</code>: this file is the output file of Stan. It contains the samples drawn from the variational distribution (or MCMC samples).</li>\n<li><code>fluA.diag</code>: this file is also generated by Stan and it contains some information such as the ELBO at each iteration.</li>\n<li><code>fluA.trees</code>: this file is a nexus file containing trees. It can be opened with a program such as <a href=\"https://github.com/rambaut/figtree\" rel=\"nofollow\">FigTree</a> or summarized using <em>treeannotator</em> from <a href=\"https://beast.community/treeannotator\" rel=\"nofollow\">BEAST</a> or <a href=\"https://www.beast2.org/treeannotator/\" rel=\"nofollow\">BEAST2</a>.</li>\n<li><code>fluA-GTR-W4.pkl</code>: the Stan script is compiled into this binary file. This file can be reused automatically by <em>phylostan</em> unless it must be recompiled, then the option <code>--compile</code> can be used.</li>\n</ul>\n<p>At the end of the run, <em>phylostan</em> will print on the screen the mean and 95% credibility interval of the parameters of interest:</p>\n<pre><code>Weibull (shape) mean: 0.488 95% CI: (0.383,0.616)\nStrict clock (rate) mean: 0.00499 95% CI: (0.00432,0.00577)\nConstant population size (theta) mean: 4.03 95% CI: (3.14,5.05)\nHKY (kappa) mean: 5.58 95% CI: (4.37 7.039)\nRoot height mean: 18.96 95% CI: (18.36 19.74)\n</code></pre>\n<p>In this example we have used a mean-field distribution (<code>-q meanfield</code>) to approximate the posterior using variational inference.\nThe Stan model is already compiled so we can run the NUTS algorithm without re-generating the script file, simply issue the command:</p>\n<pre>phylostan run -s fluA-GTR-W4.stan  -m HKY -C <span class=\"m\">4</span> <span class=\"se\">\\</span>\n --heterochronous --estimate_rate --clock strict --coalescent constant <span class=\"se\">\\</span>\n -i fluA.fa -t fluA.tree -o fluA -a nuts\n</pre>\n<p>The NUTS algorithm is much slower (and more accurate) than variational inference so it should be used on a small dataset.</p>\n<h2>Reference</h2>\n<p>Mathieu Fourment and Aaron E. Darling. Evaluating probabilistic programming and fast variational Bayesian inference in phylogenetics. <em>bioRxiv</em>. doi: <a href=\"https://doi.org/10.1101/702944\" rel=\"nofollow\">10.1101/702944</a>.</p>\n\n          </div>"}, "last_serial": 5981470, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "9d0f58fa735809d6721d48e26e34cda3", "sha256": "942efd75cf6006dd5c6afb30d70f1fa4cf9e84293e450dbfd94590e45ed5956a"}, "downloads": -1, "filename": "phylostan-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9d0f58fa735809d6721d48e26e34cda3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27257, "upload_time": "2019-07-07T10:31:43", "upload_time_iso_8601": "2019-07-07T10:31:43.693559Z", "url": "https://files.pythonhosted.org/packages/c5/22/200bc2c5644249e969a3528b7714e0f9cd613257575f8f8d1877f342e938/phylostan-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "121a67fc96967705c63e4c5c77d4189b", "sha256": "1a5831ac54c33562f064b7fb14f3d8544afdeba965adba9589fde73632f9f4cf"}, "downloads": -1, "filename": "phylostan-1.0.1.tar.gz", "has_sig": false, "md5_digest": "121a67fc96967705c63e4c5c77d4189b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16151, "upload_time": "2019-07-07T10:31:45", "upload_time_iso_8601": "2019-07-07T10:31:45.527663Z", "url": "https://files.pythonhosted.org/packages/00/fa/60a6e9de3aaaabc0440e697d3e3a9908c394ca3c007ff12beb8a1c28bbbe/phylostan-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "3eac08db97f11462a99f67ca1a318e5d", "sha256": "581314134894c8c56105068e1d111b801be4ac39078e839736574685dcafa1b7"}, "downloads": -1, "filename": "phylostan-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3eac08db97f11462a99f67ca1a318e5d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27694, "upload_time": "2019-07-15T22:05:33", "upload_time_iso_8601": "2019-07-15T22:05:33.693203Z", "url": "https://files.pythonhosted.org/packages/94/47/183f96ef86ee12b80c9431b0e882155ac0178d6436a0da8f4286bfcc1efe/phylostan-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "47764b70eb9431a3f19841607aa39137", "sha256": "11f45e5ea0414bbbfbdcb3199b670ef880d73f5a4b061279406abf96846d974e"}, "downloads": -1, "filename": "phylostan-1.0.2.tar.gz", "has_sig": false, "md5_digest": "47764b70eb9431a3f19841607aa39137", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16803, "upload_time": "2019-07-15T22:05:35", "upload_time_iso_8601": "2019-07-15T22:05:35.880668Z", "url": "https://files.pythonhosted.org/packages/9b/17/a7526375a038972d4d1adf91e83d5881705849b126e3214194e882843406/phylostan-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "4c1c4e8e7137e8fee1ddbf333bdfc95d", "sha256": "12fcb132e6371a45e686ccfffa00c236b3ba85a60e97dd1059bd8a041ee6a039"}, "downloads": -1, "filename": "phylostan-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4c1c4e8e7137e8fee1ddbf333bdfc95d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27821, "upload_time": "2019-10-16T06:28:35", "upload_time_iso_8601": "2019-10-16T06:28:35.819198Z", "url": "https://files.pythonhosted.org/packages/ae/8b/fbede8d099d7acccc11d6fc60724b59b4fc149c4057c3fecac0a04cac73e/phylostan-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aaaeb411b661da7f9ed4a0e3e17e52e3", "sha256": "22f2b05c5b8f87d5611c477b4e12fc324862ad254e8d034aaf123fe98d4bf1e6"}, "downloads": -1, "filename": "phylostan-1.0.3.tar.gz", "has_sig": false, "md5_digest": "aaaeb411b661da7f9ed4a0e3e17e52e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17014, "upload_time": "2019-10-16T06:28:40", "upload_time_iso_8601": "2019-10-16T06:28:40.998784Z", "url": "https://files.pythonhosted.org/packages/7c/b8/4c00a075f5f3b7442ceb5ac19f1af807b4cb1b427093deb1f6ec51064a44/phylostan-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4c1c4e8e7137e8fee1ddbf333bdfc95d", "sha256": "12fcb132e6371a45e686ccfffa00c236b3ba85a60e97dd1059bd8a041ee6a039"}, "downloads": -1, "filename": "phylostan-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4c1c4e8e7137e8fee1ddbf333bdfc95d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27821, "upload_time": "2019-10-16T06:28:35", "upload_time_iso_8601": "2019-10-16T06:28:35.819198Z", "url": "https://files.pythonhosted.org/packages/ae/8b/fbede8d099d7acccc11d6fc60724b59b4fc149c4057c3fecac0a04cac73e/phylostan-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aaaeb411b661da7f9ed4a0e3e17e52e3", "sha256": "22f2b05c5b8f87d5611c477b4e12fc324862ad254e8d034aaf123fe98d4bf1e6"}, "downloads": -1, "filename": "phylostan-1.0.3.tar.gz", "has_sig": false, "md5_digest": "aaaeb411b661da7f9ed4a0e3e17e52e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17014, "upload_time": "2019-10-16T06:28:40", "upload_time_iso_8601": "2019-10-16T06:28:40.998784Z", "url": "https://files.pythonhosted.org/packages/7c/b8/4c00a075f5f3b7442ceb5ac19f1af807b4cb1b427093deb1f6ec51064a44/phylostan-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:13 2020"}