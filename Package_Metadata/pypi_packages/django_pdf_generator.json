{"info": {"author": "Charles TISSIER", "author_email": "charles@vingtcinq.io", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Django :: 1.10", "Framework :: Django :: 1.9", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.3", "Programming Language :: Python :: 2.4", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "|django-pdf-generator v0.1.3 on PyPi| |MIT license| |Stable|\n\ndjango-pdf-generator\n====================\n\nConvert HTML to pdf with django using phantomjs\n\nRequirements\n------------\n\n-  Python (2.7) (Need to be tested for 3.x)\n-  Django (1.10, 1.9) (Need to be tested for previous versions)\n-  PhantomJS\n\nInstallation\n------------\n\nInstall using ``pip`` :\n\n``pip install django_pdf_generator``\n\nAdd ``pdf_generator`` to your INSTALLED\\_APPS setting.\n\n.. code:: python\n\n        INSTALLED_APPS = (\n            ...\n            'pdf_generator',\n        )\n\nPut phantomjs binary on your path or set the path manually in your\nsettings using ``PHANTOMJS_BIN_PATH`` settings (see below).\n\nExample\n-------\n\nGenerate a PDF with PDFGenerator class\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nGenerate a pdf from an url\n\n.. code:: python\n\n        from pdf_generator.generators import PDFGenerator\n\n        pdf = PDFGenerator(url=\"https://github.com/charlesthk/django-pdf-generator\",\n\nSave it to the database using PdfDoc models :\n\n.. code:: python\n\n        pdf.save(\n                filename='pdf_generator',\n                title=\"pdf_generator on github\",\n                description=\"Convert HTML to pdf with django using phantomjs\")\n\nGet the PDF as a Django ContentFile named 'my\\_pdf\\_file.pdf' :\n\n.. code:: python\n\n        pdf_content_file = pdf.get_content_file('my_pdf_file') \n\n        # Return a Django HttpResponse with the PDF Attached named 'my_pdf_file.pdf':\n        return pdf.get_http_response('my_pdf_file')\n\nReturn a Django HttpResponse with the PDF Attached named\n'my\\_pdf\\_file.pdf':\n\n.. code:: python\n\n        return pdf.get_http_response('my_pdf_file')\n\nGenerate a pdf just like Django ``render`` function :\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nurls.py\n\n.. code:: python\n\n        url(r'^invoice$', views.invoice, name='invoice'),\n\nviews.py\n\n.. code:: python\n\n        from pdf_generator.renderers import render_pdf\n\n        def invoice(request):\n            \"\"\"\n            Render an invoice\n            The invoice.pdf file is returned\n            \"\"\"\n            return render_pdf('invoice', request, 'front/invoice.html')\n\nJuste add ``?html=1`` to the url to view the HTML instead of getting the\npdf file.\n\n``PDFGenerator`` options\n------------------------\n\nThe ``PDFGenerator`` class accepts the following arguments :\n\n-  url [required]\n-  paperformat [Required] default to 'A4', examples: \"5in*7.5in\",\n   \"10cm*\\ 20cm\", \"A4\", \"Letter\"\n-  zoom [Optional] default to 1.\n-  script [Optional] default to DEFAULT\\_RASTERIZE\\_SCRIPT, defines\n   which render script to use.\n-  temp\\_dir [Optional] default to DEFAULT\\_TEMP\\_DIR, defines which\n   temp dir to use.\n\nModel used for saving PDF\n-------------------------\n\nWhen using ``save(filename, title='', description='')`` method of\n``PDFGenerator``, the following model is used:\n\n::\n\n    class PdfDoc(models.Model):\n        \"\"\"\n        Store each generated pdf\n        \"\"\"\n        title = models.CharField(verbose_name=_(\"Title\"), max_length=255, blank=True)\n        description = models.TextField(verbose_name=_(\"Description\"), blank=True)\n        document = models.FileField(verbose_name=_(\"Document PDF\"), upload_to=pdf_settings.UPLOAD_TO)\n        created_at = models.DateTimeField(auto_now=False, auto_now_add=True, verbose_name=_('Creation'))\n        updated_at = models.DateTimeField(auto_now=True, auto_now_add=False, verbose_name=_('Update'))\n\nSettings\n--------\n\nAdd your settings to your main django settings file. The settings are\nset by default to :\n\n::\n\n    PDF_GENERATOR = {\n        'UPLOAD_TO': 'pdfs',\n        'PHANTOMJS_BIN_PATH': 'phantomjs',\n        'DEFAULT_RASTERIZE_SCRIPT': os.path.join(PDF_GENERATOR_DIR, 'rasterize.js'),\n        'DEFAULT_TEMP_DIR': os.path.join(PDF_GENERATOR_DIR, 'temp'),\n        'TEMPLATES_DIR': os.path.join(PDF_GENERATOR_DIR, 'templates/pdf_generator')\n    }\n\n``UPLOAD_TO``\n~~~~~~~~~~~~~\n\nDefine the directory or the function to be used when saving PDFs,\ndefault to ``pdfs``.\n\n``PHANTOMJS_BIN_PATH``\n~~~~~~~~~~~~~~~~~~~~~~\n\nDefine the path to Phantomjs binary, default to ``phantomjs``.\n\n``DEFAULT_RASTERIZE_SCRIPT``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDefine which render\\_script to use by default, default to\n``rasterize.js`` inside the package.\n\n``DEFAULT_TEMP_DIR``\n~~~~~~~~~~~~~~~~~~~~\n\nDefine the directory to use for temporarily generated pdf by PhantomJS.\ndefault to ``pdf_temp``.\n\n``TEMPLATES_DIR``\n~~~~~~~~~~~~~~~~~\n\nDefine the directory to use for temporarily generated HTML files by\nPhantomJS. default to ``pdf_temp``.\n\nSupport\n-------\n\nIf you are having issues, please let us know or submit a pull request.\n\nLicense\n-------\n\nThe project is licensed under the MIT License.\n\n.. |django-pdf-generator v0.1.3 on PyPi| image:: https://img.shields.io/badge/pypi-0.1.3-green.svg\n   :target: https://pypi.python.org/pypi/django-pdf-generator\n.. |MIT license| image:: https://img.shields.io/badge/licence-MIT-blue.svg\n.. |Stable| image:: https://img.shields.io/badge/status-stable-green.svg", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/charlesthk/django-pdf-generator", "keywords": "python django pdf html phantomjs", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django_pdf_generator", "package_url": "https://pypi.org/project/django_pdf_generator/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django_pdf_generator/", "project_urls": {"Homepage": "https://github.com/charlesthk/django-pdf-generator"}, "release_url": "https://pypi.org/project/django_pdf_generator/0.1.3/", "requires_dist": null, "requires_python": "", "summary": "Generate PDF from HTML with django", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/django-pdf-generator\" rel=\"nofollow\"><img alt=\"django-pdf-generator v0.1.3 on PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b9f0f202c4b7e84f1000e2c5f23c57a0221ed0e9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707970692d302e312e332d677265656e2e737667\"></a> <img alt=\"MIT license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/14f142b6cfb9c2ee9a81568b5d441940c06924cc/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e63652d4d49542d626c75652e737667\"> <img alt=\"Stable\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1bb67b3a6efe045bfa065b326d3d2a3fef5847b9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7374617475732d737461626c652d677265656e2e737667\"></p>\n<div id=\"django-pdf-generator\">\n<h2>django-pdf-generator</h2>\n<p>Convert HTML to pdf with django using phantomjs</p>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ul>\n<li>Python (2.7) (Need to be tested for 3.x)</li>\n<li>Django (1.10, 1.9) (Need to be tested for previous versions)</li>\n<li>PhantomJS</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Install using <tt>pip</tt> :</p>\n<p><tt>pip install django_pdf_generator</tt></p>\n<p>Add <tt>pdf_generator</tt> to your INSTALLED_APPS setting.</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'pdf_generator'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Put phantomjs binary on your path or set the path manually in your\nsettings using <tt>PHANTOMJS_BIN_PATH</tt> settings (see below).</p>\n</div>\n<div id=\"example\">\n<h3>Example</h3>\n<div id=\"generate-a-pdf-with-pdfgenerator-class\">\n<h4>Generate a PDF with PDFGenerator class</h4>\n<p>Generate a pdf from an url</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pdf_generator.generators</span> <span class=\"kn\">import</span> <span class=\"n\">PDFGenerator</span>\n\n<span class=\"n\">pdf</span> <span class=\"o\">=</span> <span class=\"n\">PDFGenerator</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">\"https://github.com/charlesthk/django-pdf-generator\"</span><span class=\"p\">,</span>\n</pre>\n<p>Save it to the database using PdfDoc models :</p>\n<pre><span class=\"n\">pdf</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span>\n        <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">'pdf_generator'</span><span class=\"p\">,</span>\n        <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"pdf_generator on github\"</span><span class=\"p\">,</span>\n        <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"Convert HTML to pdf with django using phantomjs\"</span><span class=\"p\">)</span>\n</pre>\n<p>Get the PDF as a Django ContentFile named \u2018my_pdf_file.pdf\u2019 :</p>\n<pre><span class=\"n\">pdf_content_file</span> <span class=\"o\">=</span> <span class=\"n\">pdf</span><span class=\"o\">.</span><span class=\"n\">get_content_file</span><span class=\"p\">(</span><span class=\"s1\">'my_pdf_file'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Return a Django HttpResponse with the PDF Attached named 'my_pdf_file.pdf':</span>\n<span class=\"k\">return</span> <span class=\"n\">pdf</span><span class=\"o\">.</span><span class=\"n\">get_http_response</span><span class=\"p\">(</span><span class=\"s1\">'my_pdf_file'</span><span class=\"p\">)</span>\n</pre>\n<p>Return a Django HttpResponse with the PDF Attached named\n\u2018my_pdf_file.pdf\u2019:</p>\n<pre><span class=\"k\">return</span> <span class=\"n\">pdf</span><span class=\"o\">.</span><span class=\"n\">get_http_response</span><span class=\"p\">(</span><span class=\"s1\">'my_pdf_file'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"generate-a-pdf-just-like-django-render-function\">\n<h4>Generate a pdf just like Django <tt>render</tt> function :</h4>\n<p>urls.py</p>\n<pre><span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^invoice$'</span><span class=\"p\">,</span> <span class=\"n\">views</span><span class=\"o\">.</span><span class=\"n\">invoice</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'invoice'</span><span class=\"p\">),</span>\n</pre>\n<p>views.py</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pdf_generator.renderers</span> <span class=\"kn\">import</span> <span class=\"n\">render_pdf</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">invoice</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"\n    Render an invoice\n    The invoice.pdf file is returned\n    \"\"\"</span>\n    <span class=\"k\">return</span> <span class=\"n\">render_pdf</span><span class=\"p\">(</span><span class=\"s1\">'invoice'</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s1\">'front/invoice.html'</span><span class=\"p\">)</span>\n</pre>\n<p>Juste add <tt><span class=\"pre\">?html=1</span></tt> to the url to view the HTML instead of getting the\npdf file.</p>\n</div>\n</div>\n<div id=\"pdfgenerator-options\">\n<h3><tt>PDFGenerator</tt> options</h3>\n<p>The <tt>PDFGenerator</tt> class accepts the following arguments :</p>\n<ul>\n<li>url [required]</li>\n<li>paperformat [Required] default to \u2018A4\u2019, examples: \u201c5in*7.5in\u201d,\n\u201c10cm*20cm\u201d, \u201cA4\u201d, \u201cLetter\u201d</li>\n<li>zoom [Optional] default to 1.</li>\n<li>script [Optional] default to DEFAULT_RASTERIZE_SCRIPT, defines\nwhich render script to use.</li>\n<li>temp_dir [Optional] default to DEFAULT_TEMP_DIR, defines which\ntemp dir to use.</li>\n</ul>\n</div>\n<div id=\"model-used-for-saving-pdf\">\n<h3>Model used for saving PDF</h3>\n<p>When using <tt>save(filename, <span class=\"pre\">title='',</span> <span class=\"pre\">description='')</span></tt> method of\n<tt>PDFGenerator</tt>, the following model is used:</p>\n<pre>class PdfDoc(models.Model):\n    \"\"\"\n    Store each generated pdf\n    \"\"\"\n    title = models.CharField(verbose_name=_(\"Title\"), max_length=255, blank=True)\n    description = models.TextField(verbose_name=_(\"Description\"), blank=True)\n    document = models.FileField(verbose_name=_(\"Document PDF\"), upload_to=pdf_settings.UPLOAD_TO)\n    created_at = models.DateTimeField(auto_now=False, auto_now_add=True, verbose_name=_('Creation'))\n    updated_at = models.DateTimeField(auto_now=True, auto_now_add=False, verbose_name=_('Update'))\n</pre>\n</div>\n<div id=\"settings\">\n<h3>Settings</h3>\n<p>Add your settings to your main django settings file. The settings are\nset by default to :</p>\n<pre>PDF_GENERATOR = {\n    'UPLOAD_TO': 'pdfs',\n    'PHANTOMJS_BIN_PATH': 'phantomjs',\n    'DEFAULT_RASTERIZE_SCRIPT': os.path.join(PDF_GENERATOR_DIR, 'rasterize.js'),\n    'DEFAULT_TEMP_DIR': os.path.join(PDF_GENERATOR_DIR, 'temp'),\n    'TEMPLATES_DIR': os.path.join(PDF_GENERATOR_DIR, 'templates/pdf_generator')\n}\n</pre>\n<div id=\"upload-to\">\n<h4><tt>UPLOAD_TO</tt></h4>\n<p>Define the directory or the function to be used when saving PDFs,\ndefault to <tt>pdfs</tt>.</p>\n</div>\n<div id=\"phantomjs-bin-path\">\n<h4><tt>PHANTOMJS_BIN_PATH</tt></h4>\n<p>Define the path to Phantomjs binary, default to <tt>phantomjs</tt>.</p>\n</div>\n<div id=\"default-rasterize-script\">\n<h4><tt>DEFAULT_RASTERIZE_SCRIPT</tt></h4>\n<p>Define which render_script to use by default, default to\n<tt>rasterize.js</tt> inside the package.</p>\n</div>\n<div id=\"default-temp-dir\">\n<h4><tt>DEFAULT_TEMP_DIR</tt></h4>\n<p>Define the directory to use for temporarily generated pdf by PhantomJS.\ndefault to <tt>pdf_temp</tt>.</p>\n</div>\n<div id=\"templates-dir\">\n<h4><tt>TEMPLATES_DIR</tt></h4>\n<p>Define the directory to use for temporarily generated HTML files by\nPhantomJS. default to <tt>pdf_temp</tt>.</p>\n</div>\n</div>\n<div id=\"support\">\n<h3>Support</h3>\n<p>If you are having issues, please let us know or submit a pull request.</p>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>The project is licensed under the MIT License.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2584507, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "1a6e8bc934fefb4519899bf7feb17f97", "sha256": "e95506ecf92cb129932e8ec8e83955119eb59e4339b8de8f34f6906432e590d0"}, "downloads": -1, "filename": "django_pdf_generator-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1a6e8bc934fefb4519899bf7feb17f97", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12570, "upload_time": "2017-01-17T23:56:17", "upload_time_iso_8601": "2017-01-17T23:56:17.496602Z", "url": "https://files.pythonhosted.org/packages/5c/68/37d5ec87b58d38c616b3c351cad3cfb22e37879d9a69d7ba232496f956c0/django_pdf_generator-0.1.0-py2.py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "f440b842182dbbb81ed9c038ef706cd0", "sha256": "dfb3430c8af6514468e674df5771a1777565a6c9ee9858cadb8b6e211afcc0b2"}, "downloads": -1, "filename": "django_pdf_generator-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f440b842182dbbb81ed9c038ef706cd0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12568, "upload_time": "2017-01-18T10:10:00", "upload_time_iso_8601": "2017-01-18T10:10:00.921125Z", "url": "https://files.pythonhosted.org/packages/2d/5e/c85a06513e1b80a593bd29dbf8efdfc15691cb54af0358b8146fe660b3f2/django_pdf_generator-0.1.1-py2.py3-none-any.whl", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "95309cc31bb3e9aa38dbf5e46cf0a3ff", "sha256": "a48021803f68b9b065eb1e350ef706ab43a238ae337593a10c6ca056cd578b16"}, "downloads": -1, "filename": "django_pdf_generator-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "95309cc31bb3e9aa38dbf5e46cf0a3ff", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12904, "upload_time": "2017-01-18T10:14:42", "upload_time_iso_8601": "2017-01-18T10:14:42.465274Z", "url": "https://files.pythonhosted.org/packages/d1/04/fc134d3a3c592ae3edc2e331ae76b99176c1a7b61a00477c86e871ffae71/django_pdf_generator-0.1.2-py2.py3-none-any.whl", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "c3ffeb40f1de46301015c0d0cc1dd505", "sha256": "4f812a25c453612ad8bcdfea483f6c43cdc215c1ee1bd4a71746488ec528ccc1"}, "downloads": -1, "filename": "django_pdf_generator-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c3ffeb40f1de46301015c0d0cc1dd505", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12920, "upload_time": "2017-01-19T09:43:25", "upload_time_iso_8601": "2017-01-19T09:43:25.732279Z", "url": "https://files.pythonhosted.org/packages/a4/fa/d3c0e9f88fc3d29027e849f9ecc00d8ee55bc7e3ccfb262fdb3b5cd475d8/django_pdf_generator-0.1.3-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c3ffeb40f1de46301015c0d0cc1dd505", "sha256": "4f812a25c453612ad8bcdfea483f6c43cdc215c1ee1bd4a71746488ec528ccc1"}, "downloads": -1, "filename": "django_pdf_generator-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c3ffeb40f1de46301015c0d0cc1dd505", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12920, "upload_time": "2017-01-19T09:43:25", "upload_time_iso_8601": "2017-01-19T09:43:25.732279Z", "url": "https://files.pythonhosted.org/packages/a4/fa/d3c0e9f88fc3d29027e849f9ecc00d8ee55bc7e3ccfb262fdb3b5cd475d8/django_pdf_generator-0.1.3-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:55:10 2020"}