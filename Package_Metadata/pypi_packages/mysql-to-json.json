{"info": {"author": "Seth Black", "author_email": "sblack@sethserver.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3 :: Only", "Topic :: Database"], "description": "Connects to a MySQL database and exports selected data to JSON.\n\n## Usage\n```\nmysql-to-json [-h] [-d DATABASE] [-H HOSTNAME] [-P PORT] [-u USER] [-p]\n                     [-e QUERY]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -d DATABASE, --database DATABASE\n                        MySQL database name.\n  -H HOSTNAME, --hostname HOSTNAME\n                        MySQL host name.\n  -P PORT, --port PORT  MySQL port number.\n  -u USER, --user USER  MySQL username.\n  -p, --password        Shh! It's a secret.\n  -e QUERY, --query QUERY\n                        Query to run.\n```\n\n## Examples\n\nAll examples simple select all table information from `information_schema` and save it to `tables.json`\n\n### Simple\n\nThis assumes we have full access to the mysql database from localhost.\n\n```\n$> mysql-to-json -e 'SELECT * FROM information_schema.tables' > tables.json\n```\n\n### Medium Complexity\n\nThis explicitly sets a user and asks for a password, while still connecting to localhost.\n\n```\n$> mysql-to-json -d mysql -u seth -p -e 'SELECT * FROM information_schema.tables' > tables.json\n```\n\n### All The Things!\n\nThis explicitly sets every command line option available.\n\n```\n$> mysql-to-json -h mydbserver.myhost.com -P 3306 -d mysql -u seth -p -e 'SELECT * FROM information_schema.tables' > tables.json\n```\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sethblack/mysql-to-json", "keywords": "mysql", "license": "", "maintainer": "", "maintainer_email": "", "name": "mysql-to-json", "package_url": "https://pypi.org/project/mysql-to-json/", "platform": "", "project_url": "https://pypi.org/project/mysql-to-json/", "project_urls": {"Homepage": "https://github.com/sethblack/mysql-to-json"}, "release_url": "https://pypi.org/project/mysql-to-json/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Connects to a MySQL database and exports selected data to JSON.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            Connects to a MySQL database and exports selected data to JSON.<br><br>## Usage<br>```<br>mysql-to-json [-h] [-d DATABASE] [-H HOSTNAME] [-P PORT] [-u USER] [-p]<br>                     [-e QUERY]<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  -d DATABASE, --database DATABASE<br>                        MySQL database name.<br>  -H HOSTNAME, --hostname HOSTNAME<br>                        MySQL host name.<br>  -P PORT, --port PORT  MySQL port number.<br>  -u USER, --user USER  MySQL username.<br>  -p, --password        Shh! It's a secret.<br>  -e QUERY, --query QUERY<br>                        Query to run.<br>```<br><br>## Examples<br><br>All examples simple select all table information from `information_schema` and save it to `tables.json`<br><br>### Simple<br><br>This assumes we have full access to the mysql database from localhost.<br><br>```<br>$&gt; mysql-to-json -e 'SELECT * FROM information_schema.tables' &gt; tables.json<br>```<br><br>### Medium Complexity<br><br>This explicitly sets a user and asks for a password, while still connecting to localhost.<br><br>```<br>$&gt; mysql-to-json -d mysql -u seth -p -e 'SELECT * FROM information_schema.tables' &gt; tables.json<br>```<br><br>### All The Things!<br><br>This explicitly sets every command line option available.<br><br>```<br>$&gt; mysql-to-json -h mydbserver.myhost.com -P 3306 -d mysql -u seth -p -e 'SELECT * FROM information_schema.tables' &gt; tables.json<br>```<br>\n          </div>"}, "last_serial": 3585094, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "34252cf7c643186d62fd90f7ef959101", "sha256": "5c2085709fe900cc412a5afd8a681bf65ec348fc1706cb3c73c69666af4b3c94"}, "downloads": -1, "filename": "mysql-to-json-1.0.0.tar.gz", "has_sig": false, "md5_digest": "34252cf7c643186d62fd90f7ef959101", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2719, "upload_time": "2018-02-15T17:06:59", "upload_time_iso_8601": "2018-02-15T17:06:59.967987Z", "url": "https://files.pythonhosted.org/packages/cd/14/2a1eb38a53a8288ad75155f49c9790a4d6de6505c4795b503c8a12cde898/mysql-to-json-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "34252cf7c643186d62fd90f7ef959101", "sha256": "5c2085709fe900cc412a5afd8a681bf65ec348fc1706cb3c73c69666af4b3c94"}, "downloads": -1, "filename": "mysql-to-json-1.0.0.tar.gz", "has_sig": false, "md5_digest": "34252cf7c643186d62fd90f7ef959101", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2719, "upload_time": "2018-02-15T17:06:59", "upload_time_iso_8601": "2018-02-15T17:06:59.967987Z", "url": "https://files.pythonhosted.org/packages/cd/14/2a1eb38a53a8288ad75155f49c9790a4d6de6505c4795b503c8a12cde898/mysql-to-json-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:01 2020"}