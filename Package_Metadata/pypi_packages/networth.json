{"info": {"author": "Ken Kundert", "author_email": "networth@nurdletech.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Natural Language :: English", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Utilities"], "description": "Networth: Summarize Your Net Worth\n==================================\n\n| Version: 0.7.0\n| Released: 2020-03-06\n|\n\n*Networth* works with `Avendesora <https://avendesora.readthedocs.io>`_ to \ngenerate a summary of your networth. *Networth* reads *estimated_value* fields \nfrom *Avendesora* accounts and summarizes the result.  It is often used with, \nand shares fields with, `PostMortem <https://github.com/KenKundert/postmortem>`_.\n\nPlease report all bugs and suggestions to networth@nurdletech.com\n\nGetting Started\n---------------\n\nYou download and install *Networth* with::\n\n    pip3 install --user networth\n\nOnce installed, you will need at least two configuration files. The \nconfiguration files are Python code.  The first file contains settings that are \nshared between all profiles.  It is ~/.config/networth/config. The remaining \nfiles are specific to profiles.  You would generally have one profile for \nyourself, but you might also have profiles for organizations or people that you \nare monitoring.\n\nIn general, any setting may be in either the config file or the profile file.  \nHowever, the following two settings should in the config file:\n\n**default_profile**\n\nA string that contains the name of the profile to use if the one is not \nexplicitly specified on the command line.  The name specified in this setting \nmust also be one of the names specified in *profile_names*.\n\n**profile_names**\n\nA list the contains the names of the known profiles.  For every name given there \nshould be a profile file in the settings directory. Thus, if *me* is one of the \nprofile names, then there should be a file ~/.config/networth/me.prof that \ncontains the settings associated to the *me* profile.\n\nIn addition, the following settings are available:\n\n**avendesora_fieldname**\n\nThe name of the *Avendesora* account field that contains the networth \ninformation.\n\n**value_updated_subfieldname**\n\nThe name of the subfield of *estimated_value* that contains the date the \nvalue was last updated.  Typically *updated*.\n\n**max_account_value_age**\n\nNumber of days. Values that are older than this are called out as being \nstale.\n\n**date_formats**\n\nA string that contains the allowed date formats separated by white space.  \nAny spaces is a specific format is replaced by an underscore so that it is \nnot confused as more than one format. For example a format of 'MMMM YYYY' \nwould be represented as 'MMMM_YYYY'. The formats allowed are those supported \nby Arrow.\n\nMay also be a list of strings, where each represents a valid date format.  \n\nBy default the following formats are accepted: 'MMMM YYYY', 'MMM YYYY', \n'YYYY-M-D', and 'YYMMDD'. So the following dates would be accepted: 'January \n2019', 'Jan 2019', '2019-1-1' and '190101'.\n\n**asset_color**\n\nThe color to used for positive values. May be black, white, blue, cyan, \ngreen, red, magenta, or yellow. The default is green.\n\n**debt_color**\n\nThe color to used for negative values. May be black, white, blue, cyan, \ngreen, red, magenta, or yellow. The default is red.\n\n**screen_width**\n\nAn integer that contains the width of the screen.\n\n**aliases**\n\nA dictionary that is used to map an account name to something that is easier \nto read.\n\n**coins**\n\nA list of crytpocurrency tokens that should be available for use.\n\n**coin_prices_filename**\n\nName of the file used as the cryptocurrency price cache.\n\n**securities**\n\nA list of security symbols that should be available for use.\n\n**security_prices_filename**\n\nName of the file used as the security price cache.\n\n**iexcloud_token**\n\nThe security prices are downloaded from the IEXcloud. You must sign up with them \nto use this service. The free account is more than sufficient for your needs.  \nOnce you sign up you can get an API token, which you give as the value for this \nfield.  This field must be given if you specify securities.\n\n**max_price_age**\n\nMaximum age in seconds of the price caches. If the prices are older than \nthis, the cache is flushed and the prices are updated.\n\n\nExample Configuration Files\n---------------------------\n\nHere is an example *config* file::\n\n    default_profile='me'\n    profile_names = 'me parents'.split()\n\n    # account value settings\n    avendesora_fieldname = 'estimated_value'\n    value_updated_subfieldname = 'updated'\n    max_account_value_age = 120 # days\n    date_formats = 'MMMM YYYY'\n\n    # bar settings\n    screen_width = 110\n\n    # API token needed to download securities\n    iexcloud_token = 'pk_9eb3acfc7dbe4055a795ff179d46a980'\n\nHere is a example profile file::\n\n    # account aliases\n    aliases = dict(\n        quickenloans = 'mortgage',\n        wellsfargo = 'wells fargo',\n    )\n\n    # available symbols\n    coins = 'USD BTC ETH BCH ZEC EOS'.split()\n    securities = 'GOOG AMZN'.split()\n\n\nEstimated Values\n----------------\n\nNext, you need to add *estimated_value* fields to your *Avendesora* accounts, \nthe value of which is a dictionary. It may contain a *updated* subfield that \ngives the date the value was last updated.  In addition, it may contain \nsubfields for various asset classes or coins or securities.  The values may \neither be real numbers or strings that contain quantities (values plus units).  \nHere are some examples::\n\n    class ChaseBank(Account):\n        ...\n        estimated_value = dict(updated='December 2018', cash=2181.16+5121.79)\n\n    class QuickenLoans(Account):\n        ...\n        estimated_value = dict(updated='October 2018', real_estate='-$294,058')\n\n    class Vanguard(Account):\n        ...\n        estimated_value = dict(updated='November 2018', retirement='$74,327')\n\n    class TDAmeritrade(Account):\n        ...\n        estimated_value = dict( updated='November 2018', retirement='$74,327+$111,554')\n\n    class Fidelity(Account):\n        ...\n        estimated_value = dict( updated='November 2018', retirement='''\n            $62,976.22 +    # 401k\n            $26,704.85      # IRA\n        ''')\n\n    class UnitedAirlines(Account):\n        ...\n        estimated_value = dict(updated='July 2018', miles='7,384_miles')\n\n    class CoinBase(Account):\n        ...\n        estimated_value = dict(updated='August 2018', ETH=2, BTC=4, cash=24.52)\n\n    class TD_Ameritrade(Account):\n        ...\n        estimated_value = dict(updated='January 2019', GOOG=10, AMZN=5, cash=327.53)\n\nThe value of securities are given is number of shares. The value given for \ncryptocurrencies is number of tokens. All other values are assumed to be in \ndollars if the units are not given. If the units are given and they are not \ndollars (such as miles for frequent flier programs), then those values are \nsummarized but not included in your total networth.\n\nSpecifying the *updated* date is optional. If specified, then *networth* will \nindicate the values as stale if they exceed *max_account_value_age*.\n\nIt is also specify information about a loan, and *networth* will compute its \ncurrent balance.  This is done by giving the principal on a particular date, the \ndate for the given principal, the monthly payments, the interest rate, and \noptionally, the share. The rate and the share can be given in percent, meaning \nthat an rate of 4% can either be specified as 4% or as 0.04. Similarly a share \nhalf share can be indicated as 50% or 0.5.  For example::\n\n    class QuickenLoans(Account):\n        ...\n        estimated_value = dict(\n            real_estate = '''\n                principal=-$294,058\n                date=09/04/2013\n                payment=$1,500.00\n                rate=4.375%\n                share=50%\n            '''\n        )\n\nthe key=value pairs can be separated by any white space, but there must be no\nwhite space surrounding the = sign. For mortgages that you owe, the principal \nshould be negative. You can also use this feature to describe an automatic \nsavings plan into an interest bearing account.  In this case the principal would \nbe your starting balance and the payment would be your monthly investment \namount.  In this case the starting balance would be positive.\n\n\nUsage\n-----\n\nWhen running the command, you may specify a profile. If you do not, you get the \ndefault profile.  For example::\n\n    > networth me\n    By Account:\n            betterment:    $22k equities=$9k, cash=$3k, retirement=$9k\n                 chase:     $7k cash\n             southwest:      $0 miles=78kmiles\n              coindesk:  $15.3k cryptocurrency\n\n    By Type:\n        cryptocurrency:  $15.3k (35.3%) \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n                  cash:    $10k (23.1%) \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n              equities:     $9k (20.8%) \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n            retirement:     $9k (20.8%) \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n\n                 TOTAL:  $43.3k (assets = $43.3k, debt = $0)\n\nIn this run, the values associated with the various asset classes (ex. equities, \ncash, retirement, etc.) are taken as is. As such, you must be diligent about \nkeeping these values up to date, which is a manual operation. You might consider \nupdating your *estimated values* every 3-6 months.  However the current prices \nfor your configured securities and cryptocurrencies are downloaded and \nmultiplied by the given number of shares or tokens to get the up-to-date values \nof your equities and cryptocurrency holdings. Thus you only need update them \nafter a transaction. Finally, mortgage balances are also kept up to date. You \nonly need update mortgages if you decide to change the payment amount in order \nto pay off the loan faster.\n\n\nReleases\n--------\n**Latest Development Version**:\n    | Version: 0.7.0\n    | Released: 2020-03-06\n\n**0.7 (2020-03-06)**:\n    - Now uses `QuantiPhy Eval <https://github.com/KenKundert/quantiphy_eval>`_ \n      to allow you to use expressions within strings for estimated values.\n\n**0.6 (2020-01-08)**:\n    - Added --prices and --clear-cache command line options.\n    - Support using a proxy\n\n**0.5 (2019-07-18)**:\n\n**0.4 (2019-06-15)**:\n    - Convert to using new IEXcloud API for downloading security prices.\n\n**0.3 (2019-04-20)**:\n    - Allow arbitrary date format in mortgages\n    - Improve error reporting\n    - Change the sign of the principal in mortgages\n\n**0.1 (2019-03-23)**:\n    - Initial release\n    - Add mortgage balance calculations\n\n**0.0 (2019-01-31)**:\n    - Initial version", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/kenkundert/networth/tarball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kenkundert/networth", "keywords": "networth", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "networth", "package_url": "https://pypi.org/project/networth/", "platform": "", "project_url": "https://pypi.org/project/networth/", "project_urls": {"Download": "https://github.com/kenkundert/networth/tarball/master", "Homepage": "https://github.com/kenkundert/networth"}, "release_url": "https://pypi.org/project/networth/0.7.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Summarize net worth", "version": "0.7.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n<div>Version: 0.7.0</div>\n<div>Released: 2020-03-06</div>\n<div><br></div>\n</div>\n<p><em>Networth</em> works with <a href=\"https://avendesora.readthedocs.io\" rel=\"nofollow\">Avendesora</a> to\ngenerate a summary of your networth. <em>Networth</em> reads <em>estimated_value</em> fields\nfrom <em>Avendesora</em> accounts and summarizes the result.  It is often used with,\nand shares fields with, <a href=\"https://github.com/KenKundert/postmortem\" rel=\"nofollow\">PostMortem</a>.</p>\n<p>Please report all bugs and suggestions to <a href=\"mailto:networth%40nurdletech.com\">networth<span>@</span>nurdletech<span>.</span>com</a></p>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<p>You download and install <em>Networth</em> with:</p>\n<pre>pip3 install --user networth\n</pre>\n<p>Once installed, you will need at least two configuration files. The\nconfiguration files are Python code.  The first file contains settings that are\nshared between all profiles.  It is ~/.config/networth/config. The remaining\nfiles are specific to profiles.  You would generally have one profile for\nyourself, but you might also have profiles for organizations or people that you\nare monitoring.</p>\n<p>In general, any setting may be in either the config file or the profile file.\nHowever, the following two settings should in the config file:</p>\n<p><strong>default_profile</strong></p>\n<p>A string that contains the name of the profile to use if the one is not\nexplicitly specified on the command line.  The name specified in this setting\nmust also be one of the names specified in <em>profile_names</em>.</p>\n<p><strong>profile_names</strong></p>\n<p>A list the contains the names of the known profiles.  For every name given there\nshould be a profile file in the settings directory. Thus, if <em>me</em> is one of the\nprofile names, then there should be a file ~/.config/networth/me.prof that\ncontains the settings associated to the <em>me</em> profile.</p>\n<p>In addition, the following settings are available:</p>\n<p><strong>avendesora_fieldname</strong></p>\n<p>The name of the <em>Avendesora</em> account field that contains the networth\ninformation.</p>\n<p><strong>value_updated_subfieldname</strong></p>\n<p>The name of the subfield of <em>estimated_value</em> that contains the date the\nvalue was last updated.  Typically <em>updated</em>.</p>\n<p><strong>max_account_value_age</strong></p>\n<p>Number of days. Values that are older than this are called out as being\nstale.</p>\n<p><strong>date_formats</strong></p>\n<p>A string that contains the allowed date formats separated by white space.\nAny spaces is a specific format is replaced by an underscore so that it is\nnot confused as more than one format. For example a format of \u2018MMMM YYYY\u2019\nwould be represented as \u2018MMMM_YYYY\u2019. The formats allowed are those supported\nby Arrow.</p>\n<p>May also be a list of strings, where each represents a valid date format.</p>\n<p>By default the following formats are accepted: \u2018MMMM YYYY\u2019, \u2018MMM YYYY\u2019,\n\u2018YYYY-M-D\u2019, and \u2018YYMMDD\u2019. So the following dates would be accepted: \u2018January\n2019\u2019, \u2018Jan 2019\u2019, \u20182019-1-1\u2019 and \u2018190101\u2019.</p>\n<p><strong>asset_color</strong></p>\n<p>The color to used for positive values. May be black, white, blue, cyan,\ngreen, red, magenta, or yellow. The default is green.</p>\n<p><strong>debt_color</strong></p>\n<p>The color to used for negative values. May be black, white, blue, cyan,\ngreen, red, magenta, or yellow. The default is red.</p>\n<p><strong>screen_width</strong></p>\n<p>An integer that contains the width of the screen.</p>\n<p><strong>aliases</strong></p>\n<p>A dictionary that is used to map an account name to something that is easier\nto read.</p>\n<p><strong>coins</strong></p>\n<p>A list of crytpocurrency tokens that should be available for use.</p>\n<p><strong>coin_prices_filename</strong></p>\n<p>Name of the file used as the cryptocurrency price cache.</p>\n<p><strong>securities</strong></p>\n<p>A list of security symbols that should be available for use.</p>\n<p><strong>security_prices_filename</strong></p>\n<p>Name of the file used as the security price cache.</p>\n<p><strong>iexcloud_token</strong></p>\n<p>The security prices are downloaded from the IEXcloud. You must sign up with them\nto use this service. The free account is more than sufficient for your needs.\nOnce you sign up you can get an API token, which you give as the value for this\nfield.  This field must be given if you specify securities.</p>\n<p><strong>max_price_age</strong></p>\n<p>Maximum age in seconds of the price caches. If the prices are older than\nthis, the cache is flushed and the prices are updated.</p>\n</div>\n<div id=\"example-configuration-files\">\n<h2>Example Configuration Files</h2>\n<p>Here is an example <em>config</em> file:</p>\n<pre>default_profile='me'\nprofile_names = 'me parents'.split()\n\n# account value settings\navendesora_fieldname = 'estimated_value'\nvalue_updated_subfieldname = 'updated'\nmax_account_value_age = 120 # days\ndate_formats = 'MMMM YYYY'\n\n# bar settings\nscreen_width = 110\n\n# API token needed to download securities\niexcloud_token = 'pk_9eb3acfc7dbe4055a795ff179d46a980'\n</pre>\n<p>Here is a example profile file:</p>\n<pre># account aliases\naliases = dict(\n    quickenloans = 'mortgage',\n    wellsfargo = 'wells fargo',\n)\n\n# available symbols\ncoins = 'USD BTC ETH BCH ZEC EOS'.split()\nsecurities = 'GOOG AMZN'.split()\n</pre>\n</div>\n<div id=\"estimated-values\">\n<h2>Estimated Values</h2>\n<p>Next, you need to add <em>estimated_value</em> fields to your <em>Avendesora</em> accounts,\nthe value of which is a dictionary. It may contain a <em>updated</em> subfield that\ngives the date the value was last updated.  In addition, it may contain\nsubfields for various asset classes or coins or securities.  The values may\neither be real numbers or strings that contain quantities (values plus units).\nHere are some examples:</p>\n<pre>class ChaseBank(Account):\n    ...\n    estimated_value = dict(updated='December 2018', cash=2181.16+5121.79)\n\nclass QuickenLoans(Account):\n    ...\n    estimated_value = dict(updated='October 2018', real_estate='-$294,058')\n\nclass Vanguard(Account):\n    ...\n    estimated_value = dict(updated='November 2018', retirement='$74,327')\n\nclass TDAmeritrade(Account):\n    ...\n    estimated_value = dict( updated='November 2018', retirement='$74,327+$111,554')\n\nclass Fidelity(Account):\n    ...\n    estimated_value = dict( updated='November 2018', retirement='''\n        $62,976.22 +    # 401k\n        $26,704.85      # IRA\n    ''')\n\nclass UnitedAirlines(Account):\n    ...\n    estimated_value = dict(updated='July 2018', miles='7,384_miles')\n\nclass CoinBase(Account):\n    ...\n    estimated_value = dict(updated='August 2018', ETH=2, BTC=4, cash=24.52)\n\nclass TD_Ameritrade(Account):\n    ...\n    estimated_value = dict(updated='January 2019', GOOG=10, AMZN=5, cash=327.53)\n</pre>\n<p>The value of securities are given is number of shares. The value given for\ncryptocurrencies is number of tokens. All other values are assumed to be in\ndollars if the units are not given. If the units are given and they are not\ndollars (such as miles for frequent flier programs), then those values are\nsummarized but not included in your total networth.</p>\n<p>Specifying the <em>updated</em> date is optional. If specified, then <em>networth</em> will\nindicate the values as stale if they exceed <em>max_account_value_age</em>.</p>\n<p>It is also specify information about a loan, and <em>networth</em> will compute its\ncurrent balance.  This is done by giving the principal on a particular date, the\ndate for the given principal, the monthly payments, the interest rate, and\noptionally, the share. The rate and the share can be given in percent, meaning\nthat an rate of 4% can either be specified as 4% or as 0.04. Similarly a share\nhalf share can be indicated as 50% or 0.5.  For example:</p>\n<pre>class QuickenLoans(Account):\n    ...\n    estimated_value = dict(\n        real_estate = '''\n            principal=-$294,058\n            date=09/04/2013\n            payment=$1,500.00\n            rate=4.375%\n            share=50%\n        '''\n    )\n</pre>\n<p>the key=value pairs can be separated by any white space, but there must be no\nwhite space surrounding the = sign. For mortgages that you owe, the principal\nshould be negative. You can also use this feature to describe an automatic\nsavings plan into an interest bearing account.  In this case the principal would\nbe your starting balance and the payment would be your monthly investment\namount.  In this case the starting balance would be positive.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>When running the command, you may specify a profile. If you do not, you get the\ndefault profile.  For example:</p>\n<pre>&gt; networth me\nBy Account:\n        betterment:    $22k equities=$9k, cash=$3k, retirement=$9k\n             chase:     $7k cash\n         southwest:      $0 miles=78kmiles\n          coindesk:  $15.3k cryptocurrency\n\nBy Type:\n    cryptocurrency:  $15.3k (35.3%) \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n              cash:    $10k (23.1%) \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n          equities:     $9k (20.8%) \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n        retirement:     $9k (20.8%) \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n\n             TOTAL:  $43.3k (assets = $43.3k, debt = $0)\n</pre>\n<p>In this run, the values associated with the various asset classes (ex. equities,\ncash, retirement, etc.) are taken as is. As such, you must be diligent about\nkeeping these values up to date, which is a manual operation. You might consider\nupdating your <em>estimated values</em> every 3-6 months.  However the current prices\nfor your configured securities and cryptocurrencies are downloaded and\nmultiplied by the given number of shares or tokens to get the up-to-date values\nof your equities and cryptocurrency holdings. Thus you only need update them\nafter a transaction. Finally, mortgage balances are also kept up to date. You\nonly need update mortgages if you decide to change the payment amount in order\nto pay off the loan faster.</p>\n</div>\n<div id=\"releases\">\n<h2>Releases</h2>\n<dl>\n<dt><strong>Latest Development Version</strong>:</dt>\n<dd><div>\n<div>Version: 0.7.0</div>\n<div>Released: 2020-03-06</div>\n</div>\n</dd>\n<dt><strong>0.7 (2020-03-06)</strong>:</dt>\n<dd><ul>\n<li>Now uses <a href=\"https://github.com/KenKundert/quantiphy_eval\" rel=\"nofollow\">QuantiPhy Eval</a>\nto allow you to use expressions within strings for estimated values.</li>\n</ul>\n</dd>\n<dt><strong>0.6 (2020-01-08)</strong>:</dt>\n<dd><ul>\n<li>Added \u2013prices and \u2013clear-cache command line options.</li>\n<li>Support using a proxy</li>\n</ul>\n</dd>\n</dl>\n<p><strong>0.5 (2019-07-18)</strong>:</p>\n<dl>\n<dt><strong>0.4 (2019-06-15)</strong>:</dt>\n<dd><ul>\n<li>Convert to using new IEXcloud API for downloading security prices.</li>\n</ul>\n</dd>\n<dt><strong>0.3 (2019-04-20)</strong>:</dt>\n<dd><ul>\n<li>Allow arbitrary date format in mortgages</li>\n<li>Improve error reporting</li>\n<li>Change the sign of the principal in mortgages</li>\n</ul>\n</dd>\n<dt><strong>0.1 (2019-03-23)</strong>:</dt>\n<dd><ul>\n<li>Initial release</li>\n<li>Add mortgage balance calculations</li>\n</ul>\n</dd>\n<dt><strong>0.0 (2019-01-31)</strong>:</dt>\n<dd><ul>\n<li>Initial version</li>\n</ul>\n</dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 6765734, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a158b79d3290bb5831277c5e1f71fc53", "sha256": "0441af49ed789b16856c9822bdd1f8e5b11655abd82137738d0f393ed8298a61"}, "downloads": -1, "filename": "networth-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a158b79d3290bb5831277c5e1f71fc53", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10571, "upload_time": "2019-03-23T18:43:16", "upload_time_iso_8601": "2019-03-23T18:43:16.439441Z", "url": "https://files.pythonhosted.org/packages/80/8c/6e178d4275ff502a8a5ef2dd755762fb883fb58f996ef3dfab210f549c4e/networth-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "deebd387ff593e8a92a14107a5fb4056", "sha256": "6cb24bd3919b839fc8edcb88f4ded2bc30d3a6b842ed685e2d6fac1c836e9515"}, "downloads": -1, "filename": "networth-0.2.0.tar.gz", "has_sig": false, "md5_digest": "deebd387ff593e8a92a14107a5fb4056", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11406, "upload_time": "2019-03-24T00:00:45", "upload_time_iso_8601": "2019-03-24T00:00:45.444883Z", "url": "https://files.pythonhosted.org/packages/e5/78/b75fbdb416c384c412584f1fe0e6c42ad2401be3ae2c887777129c09e6f0/networth-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "d7e2c8ec31a7e20824d884aab41a5d09", "sha256": "03837e5e05574d85d5dbb46965ff5f644ce7d301c1c8e1e373fc5cc63897267c"}, "downloads": -1, "filename": "networth-0.3.0.tar.gz", "has_sig": false, "md5_digest": "d7e2c8ec31a7e20824d884aab41a5d09", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11536, "upload_time": "2019-04-21T04:00:48", "upload_time_iso_8601": "2019-04-21T04:00:48.113783Z", "url": "https://files.pythonhosted.org/packages/85/2d/7e0c2138a2b206e3de984c2ab12c4eee8b8e06fe9030b9bfd94abe732fc3/networth-0.3.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "db523a6f10f0c64d772d1da81978c6b1", "sha256": "4cab07fa8482270092710cce6b8f5b56af8584f377630b566c89ab16d065fd80"}, "downloads": -1, "filename": "networth-0.7.0.tar.gz", "has_sig": false, "md5_digest": "db523a6f10f0c64d772d1da81978c6b1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15615, "upload_time": "2020-03-06T23:24:06", "upload_time_iso_8601": "2020-03-06T23:24:06.500148Z", "url": "https://files.pythonhosted.org/packages/d0/4f/060f604d628f4e04cf2655fe3359c6a650cab4562c84c56c99faadf22539/networth-0.7.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "db523a6f10f0c64d772d1da81978c6b1", "sha256": "4cab07fa8482270092710cce6b8f5b56af8584f377630b566c89ab16d065fd80"}, "downloads": -1, "filename": "networth-0.7.0.tar.gz", "has_sig": false, "md5_digest": "db523a6f10f0c64d772d1da81978c6b1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15615, "upload_time": "2020-03-06T23:24:06", "upload_time_iso_8601": "2020-03-06T23:24:06.500148Z", "url": "https://files.pythonhosted.org/packages/d0/4f/060f604d628f4e04cf2655fe3359c6a650cab4562c84c56c99faadf22539/networth-0.7.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:49 2020"}