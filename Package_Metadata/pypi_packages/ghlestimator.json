{"info": {"author": "Damian Draxler", "author_email": "damiandraxler01@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.7"], "description": "# ghlestimator\n\nLinear Generalized Huber Regressor compatible with scikit-learn. A detailed \nexplanation of the underlying generalized Huber objective function can be found\n[here](https://towardsdatascience.com/generalized-huber-regression-505afaff24c).\n\nThe Generalized Huber Regressor depends on the definition of a invertible link function ``g`` and optimizes a term proportional to \n``(y - ginv(X'w))**2`` for samples where \n``|g(y) - (X'w)| <= epsilon`` and a term proportional to \n``|y - ginv(X'w)|`` for samples where \n``|g(y) - (X'w)| > epsilon``, where w is to be optimized and ``ginv`` denotes the inverse of ``g``.  \n\nParameters\n----------\n\n    class GeneralizedHuberRegressor(epsilon=1.0,max_iter=100,tol=1e-5, scale=10,\n    fit_intercept=True, link_dict={'g':_log,'ginv':_loginv,'ginvp':_loginvp})\n\n**epsilon : float, default 1.0**\n\n    The parameter epsilon defines the crossover between the rmse type of loss \n    and the mae type of loss.  \n**max_iter : int, default 100**\n\n    Maximum number of iterations that\n    scipy.optimize.minimize(method=\"L-BFGS-B\") should run for.\n**fit_intercept : bool, default True**\n\n    Whether or not to fit the intercept.\n**tol : float, default 1e-5**\n\n    The iteration will stop when max{|proj g_i | i = 1, ..., n} <= tol\n    where pg_i is the i-th component of the projected gradient.\n**scale : float, default 10.0**\n\n    Preconditioner for better numerical stability. Input array is internally \n    divided by scale.\n**link_dict : dictionary, default {'g':_log,'ginv':_loginv,'ginvp':_loginvp}**\n\n    The link function 'g', it's inverse 'ginv' and the derivative of the \n    latter 'ginvp' have to be specified as callables. \n    The default link function is g(x) = sign(x)log(1+|x|).              \nAttributes\n----------\n**coef_ : array, shape (n_features,)**\n\n    Fitted coefficients got by optimizing the generalized Huber loss.\n**intercept_ : float**\n\n    The bias.\n**n_iter_ : int**\n\n    Number of iterations that\n    scipy.optimize.minimize(method=\"L-BFGS-B\") has run for.\nMethods\n----------\n**fit(self, X, y)**\n\n    Fit the model to the given training features X and target y both given as \n    ndarrays.\n\n**predict(self, X)**\n\n    Predict using the fitted linear model.\n\n**score(self, X, y)**\n\n    Return the coefficient of determination R^2 of the prediction.\n## Installation\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install ghlestimator.\n\n```bash\npip install ghlestimator\n```\n\n## Usage\n\n```python\nfrom ghlestimator import GeneralizedHuberRegressor\n\nghl = GeneralizedHuberRegressor() # initializes default ghl estimator \nghl.fit(X, y) # fit on features X and target y\nghl.score(X, y) # compute the R^2 score\nghl.predict(X) # make pedictions\n``` \n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/damiandraxler/ghlestimator", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ghlestimator", "package_url": "https://pypi.org/project/ghlestimator/", "platform": "", "project_url": "https://pypi.org/project/ghlestimator/", "project_urls": {"Homepage": "https://github.com/damiandraxler/ghlestimator"}, "release_url": "https://pypi.org/project/ghlestimator/1.0.0/", "requires_dist": ["numpy (==1.18.1)", "scipy (==1.4.1)", "twine (==1.13.0)"], "requires_python": ">=3.7", "summary": "Linear generalized Huber estimator compatible with scikit-learn.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ghlestimator</h1>\n<p>Linear Generalized Huber Regressor compatible with scikit-learn. A detailed\nexplanation of the underlying generalized Huber objective function can be found\n<a href=\"https://towardsdatascience.com/generalized-huber-regression-505afaff24c\" rel=\"nofollow\">here</a>.</p>\n<p>The Generalized Huber Regressor depends on the definition of a invertible link function <code>g</code> and optimizes a term proportional to\n<code>(y - ginv(X'w))**2</code> for samples where\n<code>|g(y) - (X'w)| &lt;= epsilon</code> and a term proportional to\n<code>|y - ginv(X'w)|</code> for samples where\n<code>|g(y) - (X'w)| &gt; epsilon</code>, where w is to be optimized and <code>ginv</code> denotes the inverse of <code>g</code>.</p>\n<h2>Parameters</h2>\n<pre><code>class GeneralizedHuberRegressor(epsilon=1.0,max_iter=100,tol=1e-5, scale=10,\nfit_intercept=True, link_dict={'g':_log,'ginv':_loginv,'ginvp':_loginvp})\n</code></pre>\n<p><strong>epsilon : float, default 1.0</strong></p>\n<pre><code>The parameter epsilon defines the crossover between the rmse type of loss \nand the mae type of loss.  \n</code></pre>\n<p><strong>max_iter : int, default 100</strong></p>\n<pre><code>Maximum number of iterations that\nscipy.optimize.minimize(method=\"L-BFGS-B\") should run for.\n</code></pre>\n<p><strong>fit_intercept : bool, default True</strong></p>\n<pre><code>Whether or not to fit the intercept.\n</code></pre>\n<p><strong>tol : float, default 1e-5</strong></p>\n<pre><code>The iteration will stop when max{|proj g_i | i = 1, ..., n} &lt;= tol\nwhere pg_i is the i-th component of the projected gradient.\n</code></pre>\n<p><strong>scale : float, default 10.0</strong></p>\n<pre><code>Preconditioner for better numerical stability. Input array is internally \ndivided by scale.\n</code></pre>\n<p><strong>link_dict : dictionary, default {'g':_log,'ginv':_loginv,'ginvp':_loginvp}</strong></p>\n<pre><code>The link function 'g', it's inverse 'ginv' and the derivative of the \nlatter 'ginvp' have to be specified as callables. \nThe default link function is g(x) = sign(x)log(1+|x|).              \n</code></pre>\n<h2>Attributes</h2>\n<p><strong>coef_ : array, shape (n_features,)</strong></p>\n<pre><code>Fitted coefficients got by optimizing the generalized Huber loss.\n</code></pre>\n<p><strong>intercept_ : float</strong></p>\n<pre><code>The bias.\n</code></pre>\n<p><strong>n_iter_ : int</strong></p>\n<pre><code>Number of iterations that\nscipy.optimize.minimize(method=\"L-BFGS-B\") has run for.\n</code></pre>\n<h2>Methods</h2>\n<p><strong>fit(self, X, y)</strong></p>\n<pre><code>Fit the model to the given training features X and target y both given as \nndarrays.\n</code></pre>\n<p><strong>predict(self, X)</strong></p>\n<pre><code>Predict using the fitted linear model.\n</code></pre>\n<p><strong>score(self, X, y)</strong></p>\n<pre><code>Return the coefficient of determination R^2 of the prediction.\n</code></pre>\n<h2>Installation</h2>\n<p>Use the package manager <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a> to install ghlestimator.</p>\n<pre>pip install ghlestimator\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ghlestimator</span> <span class=\"kn\">import</span> <span class=\"n\">GeneralizedHuberRegressor</span>\n\n<span class=\"n\">ghl</span> <span class=\"o\">=</span> <span class=\"n\">GeneralizedHuberRegressor</span><span class=\"p\">()</span> <span class=\"c1\"># initializes default ghl estimator </span>\n<span class=\"n\">ghl</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"c1\"># fit on features X and target y</span>\n<span class=\"n\">ghl</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"c1\"># compute the R^2 score</span>\n<span class=\"n\">ghl</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">)</span> <span class=\"c1\"># make pedictions</span>\n</pre>\n<h2>License</h2>\n<p><a href=\"https://choosealicense.com/licenses/mit/\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 6762672, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b3fb48a9f3949aba8ca678a57fc8bce1", "sha256": "19df160cfbf2d0f7461d43bbf04db77e46880bf232f6619f26e45fe0ec3d0150"}, "downloads": -1, "filename": "ghlestimator-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b3fb48a9f3949aba8ca678a57fc8bce1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6921, "upload_time": "2020-02-26T22:34:11", "upload_time_iso_8601": "2020-02-26T22:34:11.101897Z", "url": "https://files.pythonhosted.org/packages/85/90/6797f1de943878fd1f9cb0a7178e60564d3c76eb4d766aef20ba31da2369/ghlestimator-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bfbbd45a372133092f04b5b0bc6de695", "sha256": "720fc9a863120ecc481ee0fff423d1ed273e3d1684bb7d453111c903d429b8e4"}, "downloads": -1, "filename": "ghlestimator-0.0.1.tar.gz", "has_sig": false, "md5_digest": "bfbbd45a372133092f04b5b0bc6de695", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 5509, "upload_time": "2020-02-26T22:34:12", "upload_time_iso_8601": "2020-02-26T22:34:12.636474Z", "url": "https://files.pythonhosted.org/packages/67/ff/323f8fe8441dc0001b8af2ea651e8cbd2eb9c266a6689e489c7ba7227d64/ghlestimator-0.0.1.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "246ce36a2b6ed17a284745f1fff9282a", "sha256": "01768f63d89cfd47c4678894e11c104267b1b755e6d2aa8e75181c82ec8ef9e1"}, "downloads": -1, "filename": "ghlestimator-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "246ce36a2b6ed17a284745f1fff9282a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6925, "upload_time": "2020-02-26T22:55:16", "upload_time_iso_8601": "2020-02-26T22:55:16.449037Z", "url": "https://files.pythonhosted.org/packages/20/7a/34c36e21429340a7e5b3790408908f2997c23dcb1a36c96f433d015b7e0e/ghlestimator-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d93ae7c735f3b3f6961cd749a531cf9", "sha256": "e7bccda26cdf3ca4abcc6551c0b51447d8837782e23ac953576de472bd471d4d"}, "downloads": -1, "filename": "ghlestimator-0.0.3.tar.gz", "has_sig": false, "md5_digest": "3d93ae7c735f3b3f6961cd749a531cf9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 5519, "upload_time": "2020-02-26T22:55:17", "upload_time_iso_8601": "2020-02-26T22:55:17.868125Z", "url": "https://files.pythonhosted.org/packages/3c/6e/f46340efed81efddb221f0811ea1f79764b68abfb938622604a4a86311a3/ghlestimator-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "bb72039f9051aeeb16ab47aeb06c8ef1", "sha256": "6b0fa4cfc439fe9aa0623ac8540cae7652a6db13513cb83bdb7263d86fba3476"}, "downloads": -1, "filename": "ghlestimator-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "bb72039f9051aeeb16ab47aeb06c8ef1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6978, "upload_time": "2020-03-06T15:20:25", "upload_time_iso_8601": "2020-03-06T15:20:25.224031Z", "url": "https://files.pythonhosted.org/packages/89/6f/ca7fac3d717369408ff57dd5e4e430287eb1af514da734f0ec9b04a6a922/ghlestimator-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "567baf9998ac158f14ca927a0f610241", "sha256": "a5f6cfdf95ca32ebd786490d485dd2e76481f06bee4cd115d822644dd7c79f47"}, "downloads": -1, "filename": "ghlestimator-0.0.4.tar.gz", "has_sig": false, "md5_digest": "567baf9998ac158f14ca927a0f610241", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 5529, "upload_time": "2020-03-06T15:20:26", "upload_time_iso_8601": "2020-03-06T15:20:26.673723Z", "url": "https://files.pythonhosted.org/packages/31/5b/b21b2c80cc1b2fa656ff80cbab41f8cd824375fffada83459ba51db6b7ff/ghlestimator-0.0.4.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "eab2b229a1005b2d58fa9782e5d76a39", "sha256": "8c9593da69eabfdbe944b418869e5fc1d0ee1527a5d33dacec3c74c0da7710ae"}, "downloads": -1, "filename": "ghlestimator-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "eab2b229a1005b2d58fa9782e5d76a39", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6978, "upload_time": "2020-03-06T15:27:41", "upload_time_iso_8601": "2020-03-06T15:27:41.786816Z", "url": "https://files.pythonhosted.org/packages/e3/43/5d32ff6c07bbb0dc97b4ede83192e21bb5695666a9578686ab3f9a07d440/ghlestimator-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d06809283c5ccbb80280cf9077e5ac48", "sha256": "272847542a6af45cba8ef1994577afb2b08265fe67e376b027faec5c21d38f6c"}, "downloads": -1, "filename": "ghlestimator-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d06809283c5ccbb80280cf9077e5ac48", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 5534, "upload_time": "2020-03-06T15:27:42", "upload_time_iso_8601": "2020-03-06T15:27:42.964879Z", "url": "https://files.pythonhosted.org/packages/d7/b6/41afd77a0c3a9daf4fb6e384fe7a60532f80321df28c530246d6623707ad/ghlestimator-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eab2b229a1005b2d58fa9782e5d76a39", "sha256": "8c9593da69eabfdbe944b418869e5fc1d0ee1527a5d33dacec3c74c0da7710ae"}, "downloads": -1, "filename": "ghlestimator-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "eab2b229a1005b2d58fa9782e5d76a39", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6978, "upload_time": "2020-03-06T15:27:41", "upload_time_iso_8601": "2020-03-06T15:27:41.786816Z", "url": "https://files.pythonhosted.org/packages/e3/43/5d32ff6c07bbb0dc97b4ede83192e21bb5695666a9578686ab3f9a07d440/ghlestimator-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d06809283c5ccbb80280cf9077e5ac48", "sha256": "272847542a6af45cba8ef1994577afb2b08265fe67e376b027faec5c21d38f6c"}, "downloads": -1, "filename": "ghlestimator-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d06809283c5ccbb80280cf9077e5ac48", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 5534, "upload_time": "2020-03-06T15:27:42", "upload_time_iso_8601": "2020-03-06T15:27:42.964879Z", "url": "https://files.pythonhosted.org/packages/d7/b6/41afd77a0c3a9daf4fb6e384fe7a60532f80321df28c530246d6623707ad/ghlestimator-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:33 2020"}