{"info": {"author": "Justin Engel", "author_email": "jtengel08@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3"], "description": "==============\nclass property\n==============\n\nInstall\n=======\n\n.. code-block:: bash\n\n    pip install class_property\n\n\nUtilities\n=========\n\n  * class_value - Hold a single value for a class and all instances.\n  * class_property - Like a property, but works on `MyClass.class_prop = value`\n  * metaclass - Create a metaclass that looks for class_value and class_property to register them.\n  * decorate - Decorate a class to register any class_value and class_property.\n\n**A class must use the metaclass or decorate functions.** Subclasses do not need to use decorate or metaclass.\nThe metaclass is how the class object works with the descriptor.\n\n\nRun\n===\n\nClass value usage.\n\nExample:\n\n.. code-block :: python\n\n    from class_property import class_value\n\n    @class_value.decorate\n    class MyClass(object):\n        value = class_value(1)\n\n    mc = MyClass()\n    assert mc.value == 1\n    assert MyClass.value == 1\n\n    MyClass.value = 3\n    assert mc.value == 3\n    assert MyClass.value == 3\n\n    mc.value = 2\n    assert mc.value == 2\n    assert MyClass.value == 2\n\n\n    class SubClass(MyClass):\n        hello = class_value(\"World\")\n\n    sub = SubClass()\n    SubClass.hello = 'name'\n    assert sub.hello == 'name'\n    assert SubClass.hello == 'name'\n\n    sub.hello = 'John Doe'\n    assert sub.hello == 'John Doe'\n    assert SubClass.hello == 'John Doe'\n\n    sub.value = 7\n    assert SubClass.value == 7\n    assert sub.value == 7\n    assert mc.value == 7\n    assert MyClass.value == 7\n\n\nClass property usage.\n\nExample:\n\n.. code-block :: python\n\n    from class_property import class_value, class_property, decorate, metaclass\n\n    global GLOB\n    GLOB = 'Hello'\n\n    def get_glob():\n        \"\"\"Return the global GLOB value\"\"\"\n        global GLOB\n        return GLOB\n\n    def set_glob(value):\n        global GLOB\n        GLOB = value\n\n    # doesn't matter if class_value.decorate, class_property.decorate, or decorate (same with metaclass)\n    class MyClass(object, metaclass=metaclass()):\n        _VALUE = None\n\n        @class_property\n        def value(self):\n            return MyClass._VALUE\n\n        @value.setter\n        def value(self, value):\n            MyClass._VALUE = value\n\n        # Also works with no arguments\n        @class_property\n        def value2():\n            return MyClass._VALUE\n\n        @value2.setter\n        def value2(value):\n            MyClass._VALUE = value\n\n        glob = class_property(get_glob, set_glob)\n\n    mc = MyClass()\n    assert mc.value is None\n    assert MyClass.value is None\n    MyClass.value = 3\n    assert mc.value == 3\n    assert MyClass.value == 3\n    mc.value = 2\n    assert mc.value == 2\n    assert MyClass.value == 2\n\n    assert mc.value2 == 2\n    assert MyClass.value2 == 2\n    mc.value2 = 5\n    assert mc.value == 5\n    assert MyClass.value == 5\n    assert mc.value2 == 5\n    assert MyClass.value2 == 5\n\n    assert MyClass.glob == 'Hello'\n    assert mc.glob == 'Hello'\n    MyClass.glob = 'Jack'\n    assert MyClass.glob == 'Jack'\n    assert mc.glob == 'Jack'\n    mc.glob = 'Jill'\n    assert MyClass.glob == 'Jill'\n    assert mc.glob == 'Jill'\n\n\n    class SubClass(MyClass):\n        pass\n\n    sub = SubClass()\n    sub.glob = 'John'\n    assert SubClass.glob == 'John'\n    assert sub.glob == 'John'\n    assert MyClass.glob == 'John'\n    assert mc.glob == 'John'", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/justengel/class_property/archive/v0.0.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/justengel/class_property", "keywords": "class property class value class_property class_value classproperty classvalue", "license": "Proprietary", "maintainer": "", "maintainer_email": "", "name": "class-property", "package_url": "https://pypi.org/project/class-property/", "platform": "any", "project_url": "https://pypi.org/project/class-property/", "project_urls": {"Download": "https://github.com/justengel/class_property/archive/v0.0.1.tar.gz", "Homepage": "https://github.com/justengel/class_property"}, "release_url": "https://pypi.org/project/class-property/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Class property that shares the same value with the class and any instance.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"install\">\n<h2>Install</h2>\n<pre>pip install class_property\n</pre>\n</div>\n<div id=\"utilities\">\n<h2>Utilities</h2>\n<blockquote>\n<ul>\n<li>class_value - Hold a single value for a class and all instances.</li>\n<li>class_property - Like a property, but works on <cite>MyClass.class_prop = value</cite></li>\n<li>metaclass - Create a metaclass that looks for class_value and class_property to register them.</li>\n<li>decorate - Decorate a class to register any class_value and class_property.</li>\n</ul>\n</blockquote>\n<p><strong>A class must use the metaclass or decorate functions.</strong> Subclasses do not need to use decorate or metaclass.\nThe metaclass is how the class object works with the descriptor.</p>\n</div>\n<div id=\"run\">\n<h2>Run</h2>\n<p>Class value usage.</p>\n<p>Example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">class_property</span> <span class=\"kn\">import</span> <span class=\"n\">class_value</span>\n\n<span class=\"nd\">@class_value</span><span class=\"o\">.</span><span class=\"n\">decorate</span>\n<span class=\"k\">class</span> <span class=\"nc\">MyClass</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">class_value</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">mc</span> <span class=\"o\">=</span> <span class=\"n\">MyClass</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">1</span>\n<span class=\"k\">assert</span> <span class=\"n\">MyClass</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">1</span>\n\n<span class=\"n\">MyClass</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n<span class=\"k\">assert</span> <span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">3</span>\n<span class=\"k\">assert</span> <span class=\"n\">MyClass</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">3</span>\n\n<span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"k\">assert</span> <span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>\n<span class=\"k\">assert</span> <span class=\"n\">MyClass</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">SubClass</span><span class=\"p\">(</span><span class=\"n\">MyClass</span><span class=\"p\">):</span>\n    <span class=\"n\">hello</span> <span class=\"o\">=</span> <span class=\"n\">class_value</span><span class=\"p\">(</span><span class=\"s2\">\"World\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">sub</span> <span class=\"o\">=</span> <span class=\"n\">SubClass</span><span class=\"p\">()</span>\n<span class=\"n\">SubClass</span><span class=\"o\">.</span><span class=\"n\">hello</span> <span class=\"o\">=</span> <span class=\"s1\">'name'</span>\n<span class=\"k\">assert</span> <span class=\"n\">sub</span><span class=\"o\">.</span><span class=\"n\">hello</span> <span class=\"o\">==</span> <span class=\"s1\">'name'</span>\n<span class=\"k\">assert</span> <span class=\"n\">SubClass</span><span class=\"o\">.</span><span class=\"n\">hello</span> <span class=\"o\">==</span> <span class=\"s1\">'name'</span>\n\n<span class=\"n\">sub</span><span class=\"o\">.</span><span class=\"n\">hello</span> <span class=\"o\">=</span> <span class=\"s1\">'John Doe'</span>\n<span class=\"k\">assert</span> <span class=\"n\">sub</span><span class=\"o\">.</span><span class=\"n\">hello</span> <span class=\"o\">==</span> <span class=\"s1\">'John Doe'</span>\n<span class=\"k\">assert</span> <span class=\"n\">SubClass</span><span class=\"o\">.</span><span class=\"n\">hello</span> <span class=\"o\">==</span> <span class=\"s1\">'John Doe'</span>\n\n<span class=\"n\">sub</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"mi\">7</span>\n<span class=\"k\">assert</span> <span class=\"n\">SubClass</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">7</span>\n<span class=\"k\">assert</span> <span class=\"n\">sub</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">7</span>\n<span class=\"k\">assert</span> <span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">7</span>\n<span class=\"k\">assert</span> <span class=\"n\">MyClass</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">7</span>\n</pre>\n<p>Class property usage.</p>\n<p>Example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">class_property</span> <span class=\"kn\">import</span> <span class=\"n\">class_value</span><span class=\"p\">,</span> <span class=\"n\">class_property</span><span class=\"p\">,</span> <span class=\"n\">decorate</span><span class=\"p\">,</span> <span class=\"n\">metaclass</span>\n\n<span class=\"k\">global</span> <span class=\"n\">GLOB</span>\n<span class=\"n\">GLOB</span> <span class=\"o\">=</span> <span class=\"s1\">'Hello'</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">get_glob</span><span class=\"p\">():</span>\n    <span class=\"sd\">\"\"\"Return the global GLOB value\"\"\"</span>\n    <span class=\"k\">global</span> <span class=\"n\">GLOB</span>\n    <span class=\"k\">return</span> <span class=\"n\">GLOB</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">set_glob</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"k\">global</span> <span class=\"n\">GLOB</span>\n    <span class=\"n\">GLOB</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n<span class=\"c1\"># doesn't matter if class_value.decorate, class_property.decorate, or decorate (same with metaclass)</span>\n<span class=\"k\">class</span> <span class=\"nc\">MyClass</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">,</span> <span class=\"n\">metaclass</span><span class=\"o\">=</span><span class=\"n\">metaclass</span><span class=\"p\">()):</span>\n    <span class=\"n\">_VALUE</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@class_property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">MyClass</span><span class=\"o\">.</span><span class=\"n\">_VALUE</span>\n\n    <span class=\"nd\">@value</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"n\">MyClass</span><span class=\"o\">.</span><span class=\"n\">_VALUE</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n    <span class=\"c1\"># Also works with no arguments</span>\n    <span class=\"nd\">@class_property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">value2</span><span class=\"p\">():</span>\n        <span class=\"k\">return</span> <span class=\"n\">MyClass</span><span class=\"o\">.</span><span class=\"n\">_VALUE</span>\n\n    <span class=\"nd\">@value2</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">value2</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"n\">MyClass</span><span class=\"o\">.</span><span class=\"n\">_VALUE</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n    <span class=\"n\">glob</span> <span class=\"o\">=</span> <span class=\"n\">class_property</span><span class=\"p\">(</span><span class=\"n\">get_glob</span><span class=\"p\">,</span> <span class=\"n\">set_glob</span><span class=\"p\">)</span>\n\n<span class=\"n\">mc</span> <span class=\"o\">=</span> <span class=\"n\">MyClass</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span>\n<span class=\"k\">assert</span> <span class=\"n\">MyClass</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span>\n<span class=\"n\">MyClass</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n<span class=\"k\">assert</span> <span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">3</span>\n<span class=\"k\">assert</span> <span class=\"n\">MyClass</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">3</span>\n<span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"k\">assert</span> <span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>\n<span class=\"k\">assert</span> <span class=\"n\">MyClass</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">value2</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>\n<span class=\"k\">assert</span> <span class=\"n\">MyClass</span><span class=\"o\">.</span><span class=\"n\">value2</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>\n<span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">value2</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n<span class=\"k\">assert</span> <span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">5</span>\n<span class=\"k\">assert</span> <span class=\"n\">MyClass</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">5</span>\n<span class=\"k\">assert</span> <span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">value2</span> <span class=\"o\">==</span> <span class=\"mi\">5</span>\n<span class=\"k\">assert</span> <span class=\"n\">MyClass</span><span class=\"o\">.</span><span class=\"n\">value2</span> <span class=\"o\">==</span> <span class=\"mi\">5</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">MyClass</span><span class=\"o\">.</span><span class=\"n\">glob</span> <span class=\"o\">==</span> <span class=\"s1\">'Hello'</span>\n<span class=\"k\">assert</span> <span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">glob</span> <span class=\"o\">==</span> <span class=\"s1\">'Hello'</span>\n<span class=\"n\">MyClass</span><span class=\"o\">.</span><span class=\"n\">glob</span> <span class=\"o\">=</span> <span class=\"s1\">'Jack'</span>\n<span class=\"k\">assert</span> <span class=\"n\">MyClass</span><span class=\"o\">.</span><span class=\"n\">glob</span> <span class=\"o\">==</span> <span class=\"s1\">'Jack'</span>\n<span class=\"k\">assert</span> <span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">glob</span> <span class=\"o\">==</span> <span class=\"s1\">'Jack'</span>\n<span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">glob</span> <span class=\"o\">=</span> <span class=\"s1\">'Jill'</span>\n<span class=\"k\">assert</span> <span class=\"n\">MyClass</span><span class=\"o\">.</span><span class=\"n\">glob</span> <span class=\"o\">==</span> <span class=\"s1\">'Jill'</span>\n<span class=\"k\">assert</span> <span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">glob</span> <span class=\"o\">==</span> <span class=\"s1\">'Jill'</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">SubClass</span><span class=\"p\">(</span><span class=\"n\">MyClass</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"n\">sub</span> <span class=\"o\">=</span> <span class=\"n\">SubClass</span><span class=\"p\">()</span>\n<span class=\"n\">sub</span><span class=\"o\">.</span><span class=\"n\">glob</span> <span class=\"o\">=</span> <span class=\"s1\">'John'</span>\n<span class=\"k\">assert</span> <span class=\"n\">SubClass</span><span class=\"o\">.</span><span class=\"n\">glob</span> <span class=\"o\">==</span> <span class=\"s1\">'John'</span>\n<span class=\"k\">assert</span> <span class=\"n\">sub</span><span class=\"o\">.</span><span class=\"n\">glob</span> <span class=\"o\">==</span> <span class=\"s1\">'John'</span>\n<span class=\"k\">assert</span> <span class=\"n\">MyClass</span><span class=\"o\">.</span><span class=\"n\">glob</span> <span class=\"o\">==</span> <span class=\"s1\">'John'</span>\n<span class=\"k\">assert</span> <span class=\"n\">mc</span><span class=\"o\">.</span><span class=\"n\">glob</span> <span class=\"o\">==</span> <span class=\"s1\">'John'</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6786714, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "681f45abc8fee30ab53e5db5f3a9444b", "sha256": "7f821376cea2f19b80f53fb3313691b6b4f4ba975b6b4fc05a4cbad97104d210"}, "downloads": -1, "filename": "class_property-0.0.1.tar.gz", "has_sig": false, "md5_digest": "681f45abc8fee30ab53e5db5f3a9444b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5713, "upload_time": "2020-03-10T18:00:24", "upload_time_iso_8601": "2020-03-10T18:00:24.208284Z", "url": "https://files.pythonhosted.org/packages/6e/70/2e413603ae591c31b476af83e164d990ca1383e842acd70b26ffc723ac45/class_property-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "681f45abc8fee30ab53e5db5f3a9444b", "sha256": "7f821376cea2f19b80f53fb3313691b6b4f4ba975b6b4fc05a4cbad97104d210"}, "downloads": -1, "filename": "class_property-0.0.1.tar.gz", "has_sig": false, "md5_digest": "681f45abc8fee30ab53e5db5f3a9444b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5713, "upload_time": "2020-03-10T18:00:24", "upload_time_iso_8601": "2020-03-10T18:00:24.208284Z", "url": "https://files.pythonhosted.org/packages/6e/70/2e413603ae591c31b476af83e164d990ca1383e842acd70b26ffc723ac45/class_property-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:08 2020"}