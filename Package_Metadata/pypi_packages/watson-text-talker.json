{"info": {"author": "Jeff Greenberg", "author_email": "jeff@ziligy.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Home Automation", "Topic :: Multimedia :: Sound/Audio :: Speech"], "description": "# watson-text-talker\n\n### About\nI created this interface for a voice-based-bot that I'm running on a Raspberry Pi 3B. I'm using the AIY Voice HAT, but I was very displeased with the robotic-voice that's supplied by Google. After studying a few other voice options I decided on IBM's Watson because of it's high quality cadence and intonation. I added some features for my purposes and decided others may find some benefit in my effort. The package should work in other internet-connected & sound-output-capable devices.\n\n### Installation\n\n    pip3 install watson-text-talker --user\n\n### Get [IBM credentials](https://console.bluemix.net/catalog/services/text-to-speech) for Watson Text-To-Speech, Lite Plan is *FREE*\n\n### Simple Use\n\n```python\nfrom watson_text_talker import *\n\ntext_talker = TextTalker(username='your-watson-tts-credentials-username', password='your-watson-tts-credentials-password')\n\ntext_talker.say(\"Hello world!\")\n```\n\n### Features\n\n* #### Voice file cacheing\n    - lowers cloud round-trips\n    - keeps cost down\n* #### Phrase grouping\n    - segments phrases/sentences\n    - each segment can have it's own importance factor\n* #### Importance factors\n    - optional percentage chance that a phrase will be voiced\n* #### Quiet level\n    - optional quiet level factor can be applied to all optional phrases\n    - increases or decreases the likelihood that an optional phrase will be voiced\n* #### Uses high-quality Waston voices\n    - very realistic sounding, with appropriate cadence and intonation\n    - voice selection: [see here for selection available](https://www.ibm.com/watson/developercloud/text-to-speech/api/v1/curl.html?curl#get-voice)\n    - free tier plan: no credit card required, 10,000 characters per month at no cost\n\n### Voice file cacheing\nThe package *always* caches new phrases to a file. The cache directory defaults to `./voice_mp3s`, but can also be defined in TT_Config. To regulate the filename I slugify the phrase. This has the advantage of making it human readable. The only caveat is the phrase MUST be limited to 255 characters.\n\n### Phrase grouping\nPhrase grouping is based on array of tuples.\n\n```python\n    from watson_text_talker import *\n\n    text_talker = TextTalker(username='credentials-username', password='credentials-password')\n\n    importance = TT_Importance()\n\n    grouping_example = [(importance.SAY_30_PERCENT, \"I'm your assistant.\"), (importance.SAY_50_PERCENT, \"How are you?\"), (importance.SAY_ALWAYS, \"Nice to meet you\") ]\n\n    text_talker.say_group(grouping_example)\n```\n\nTuples are made up of the importance & the text phrase.\n\n### Importance factors\n```python\n# TT_Importance is a class of numeric constants\n    SAY_ALWAYS = 1\n    SAY_90_PERCENT = 2\n    SAY_80_PERCENT = 3\n    SAY_70_PERCENT = 4\n    SAY_60_PERCENT = 5\n    SAY_50_PERCENT = 6\n    SAY_40_PERCENT = 7\n    SAY_30_PERCENT = 8\n    SAY_20_PERCENT = 9\n    SAY_10_PERCENT = 10\n    SAY_NEVER = 11\n```\n\nFor the same as above we could have just as easily said:\n```python\n    from watson_text_talker import *\n\n    text_talker = TextTalker(username='credentials-username', password='credentials-password')\n\n    grouping_example = [(8, \"I'm your assistant.\"), (6, \"How are you?\"), (1, \"Nice to meet you\") ]\n\n    text_talker.say_group(grouping_example)\n```\n\n### Quiet level\nThe package includes a globally applied `quite level` that increases or decreases the likelihood that an optional phrase will be voiced.\n\n```python\n    from watson_text_talker import *\n\n    text_talker = TextTalker(username='credentials-username', password='credentials-password')\n\n    importance = TT_Importance()\n\n    grouping_example = [(importance.SAY_30_PERCENT, \"I'm your assistant.\"), (importance.SAY_ALWAYS, \"Nice to meet you\") ]\n\n    text_talker.quiet_level = +2\n\n    text_talker.say_group(grouping_example)\n```\n\nIn the above example the `I'm your assistant` phrase will only be said 10% of the time because of the +2 assigned to quiet level. The `Nice to meet you` is not effected.\n\n### Config\nuse the TT_Config class to override configuration defaults\n\n```python\n# TT_Config's standard defaults\n\n    USERNAME='--watson tts credentials username goes here--'\n    PASSWORD='--watson tts credentials password goes here--'\n\n    TTS_VOICE = 'en-US_AllisonVoice'\n    TTS_ACCEPT = 'audio/mp3'\n\n    CACHE_DIRECTORY = 'voice_mp3s'\n    CACHE_DIRECTORY_IS_RELATIVE = True\n    VOICE_FILE_EXTENSION = 'mp3'\n```\n\nUse it like so:\n```python\n    from watson_text_talker import *\n\n    config = TT_Config()\n    config.CREDENTIALS_USERNAME='your watson credentials'\n    config.CREDENTIALS_PASSWORD='your watson password'\n    config.TTS_Voice = 'en-US_MichaelVoice'\n    congig.CACHE_DIRECTORY = 'custom_cache'\n\n    text_talker = TextTalker(config=config)\n\n    text_talker.say(\"Hello world!\")\n```\n\n### Attributions\n\n* [pygame](https://github.com/pygame/pygame) is used to process the mp3 voice files\n* [python-slugify](https://github.com/un33k/python-slugify) is used to create cache file names\n\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ziligy/watson-text-talker", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "watson-text-talker", "package_url": "https://pypi.org/project/watson-text-talker/", "platform": "", "project_url": "https://pypi.org/project/watson-text-talker/", "project_urls": {"Homepage": "https://github.com/ziligy/watson-text-talker"}, "release_url": "https://pypi.org/project/watson-text-talker/0.8.10/", "requires_dist": ["watson-developer-cloud", "pygame", "python-slugify"], "requires_python": "", "summary": "Simple Text-to-Speech Interface for Raspberry Pi using IBM's Watson TTS", "version": "0.8.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>watson-text-talker</h1>\n<h3>About</h3>\n<p>I created this interface for a voice-based-bot that I'm running on a Raspberry Pi 3B. I'm using the AIY Voice HAT, but I was very displeased with the robotic-voice that's supplied by Google. After studying a few other voice options I decided on IBM's Watson because of it's high quality cadence and intonation. I added some features for my purposes and decided others may find some benefit in my effort. The package should work in other internet-connected &amp; sound-output-capable devices.</p>\n<h3>Installation</h3>\n<pre><code>pip3 install watson-text-talker --user\n</code></pre>\n<h3>Get <a href=\"https://console.bluemix.net/catalog/services/text-to-speech\" rel=\"nofollow\">IBM credentials</a> for Watson Text-To-Speech, Lite Plan is <em>FREE</em></h3>\n<h3>Simple Use</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">watson_text_talker</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"n\">text_talker</span> <span class=\"o\">=</span> <span class=\"n\">TextTalker</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'your-watson-tts-credentials-username'</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'your-watson-tts-credentials-password'</span><span class=\"p\">)</span>\n\n<span class=\"n\">text_talker</span><span class=\"o\">.</span><span class=\"n\">say</span><span class=\"p\">(</span><span class=\"s2\">\"Hello world!\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Features</h3>\n<ul>\n<li>\n<h4>Voice file cacheing</h4>\n<ul>\n<li>lowers cloud round-trips</li>\n<li>keeps cost down</li>\n</ul>\n</li>\n<li>\n<h4>Phrase grouping</h4>\n<ul>\n<li>segments phrases/sentences</li>\n<li>each segment can have it's own importance factor</li>\n</ul>\n</li>\n<li>\n<h4>Importance factors</h4>\n<ul>\n<li>optional percentage chance that a phrase will be voiced</li>\n</ul>\n</li>\n<li>\n<h4>Quiet level</h4>\n<ul>\n<li>optional quiet level factor can be applied to all optional phrases</li>\n<li>increases or decreases the likelihood that an optional phrase will be voiced</li>\n</ul>\n</li>\n<li>\n<h4>Uses high-quality Waston voices</h4>\n<ul>\n<li>very realistic sounding, with appropriate cadence and intonation</li>\n<li>voice selection: <a href=\"https://www.ibm.com/watson/developercloud/text-to-speech/api/v1/curl.html?curl#get-voice\" rel=\"nofollow\">see here for selection available</a></li>\n<li>free tier plan: no credit card required, 10,000 characters per month at no cost</li>\n</ul>\n</li>\n</ul>\n<h3>Voice file cacheing</h3>\n<p>The package <em>always</em> caches new phrases to a file. The cache directory defaults to <code>./voice_mp3s</code>, but can also be defined in TT_Config. To regulate the filename I slugify the phrase. This has the advantage of making it human readable. The only caveat is the phrase MUST be limited to 255 characters.</p>\n<h3>Phrase grouping</h3>\n<p>Phrase grouping is based on array of tuples.</p>\n<pre>    <span class=\"kn\">from</span> <span class=\"nn\">watson_text_talker</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n    <span class=\"n\">text_talker</span> <span class=\"o\">=</span> <span class=\"n\">TextTalker</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'credentials-username'</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'credentials-password'</span><span class=\"p\">)</span>\n\n    <span class=\"n\">importance</span> <span class=\"o\">=</span> <span class=\"n\">TT_Importance</span><span class=\"p\">()</span>\n\n    <span class=\"n\">grouping_example</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">importance</span><span class=\"o\">.</span><span class=\"n\">SAY_30_PERCENT</span><span class=\"p\">,</span> <span class=\"s2\">\"I'm your assistant.\"</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">importance</span><span class=\"o\">.</span><span class=\"n\">SAY_50_PERCENT</span><span class=\"p\">,</span> <span class=\"s2\">\"How are you?\"</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">importance</span><span class=\"o\">.</span><span class=\"n\">SAY_ALWAYS</span><span class=\"p\">,</span> <span class=\"s2\">\"Nice to meet you\"</span><span class=\"p\">)</span> <span class=\"p\">]</span>\n\n    <span class=\"n\">text_talker</span><span class=\"o\">.</span><span class=\"n\">say_group</span><span class=\"p\">(</span><span class=\"n\">grouping_example</span><span class=\"p\">)</span>\n</pre>\n<p>Tuples are made up of the importance &amp; the text phrase.</p>\n<h3>Importance factors</h3>\n<pre><span class=\"c1\"># TT_Importance is a class of numeric constants</span>\n    <span class=\"n\">SAY_ALWAYS</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"n\">SAY_90_PERCENT</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n    <span class=\"n\">SAY_80_PERCENT</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n    <span class=\"n\">SAY_70_PERCENT</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>\n    <span class=\"n\">SAY_60_PERCENT</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n    <span class=\"n\">SAY_50_PERCENT</span> <span class=\"o\">=</span> <span class=\"mi\">6</span>\n    <span class=\"n\">SAY_40_PERCENT</span> <span class=\"o\">=</span> <span class=\"mi\">7</span>\n    <span class=\"n\">SAY_30_PERCENT</span> <span class=\"o\">=</span> <span class=\"mi\">8</span>\n    <span class=\"n\">SAY_20_PERCENT</span> <span class=\"o\">=</span> <span class=\"mi\">9</span>\n    <span class=\"n\">SAY_10_PERCENT</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n    <span class=\"n\">SAY_NEVER</span> <span class=\"o\">=</span> <span class=\"mi\">11</span>\n</pre>\n<p>For the same as above we could have just as easily said:</p>\n<pre>    <span class=\"kn\">from</span> <span class=\"nn\">watson_text_talker</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n    <span class=\"n\">text_talker</span> <span class=\"o\">=</span> <span class=\"n\">TextTalker</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'credentials-username'</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'credentials-password'</span><span class=\"p\">)</span>\n\n    <span class=\"n\">grouping_example</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"s2\">\"I'm your assistant.\"</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"s2\">\"How are you?\"</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">\"Nice to meet you\"</span><span class=\"p\">)</span> <span class=\"p\">]</span>\n\n    <span class=\"n\">text_talker</span><span class=\"o\">.</span><span class=\"n\">say_group</span><span class=\"p\">(</span><span class=\"n\">grouping_example</span><span class=\"p\">)</span>\n</pre>\n<h3>Quiet level</h3>\n<p>The package includes a globally applied <code>quite level</code> that increases or decreases the likelihood that an optional phrase will be voiced.</p>\n<pre>    <span class=\"kn\">from</span> <span class=\"nn\">watson_text_talker</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n    <span class=\"n\">text_talker</span> <span class=\"o\">=</span> <span class=\"n\">TextTalker</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'credentials-username'</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'credentials-password'</span><span class=\"p\">)</span>\n\n    <span class=\"n\">importance</span> <span class=\"o\">=</span> <span class=\"n\">TT_Importance</span><span class=\"p\">()</span>\n\n    <span class=\"n\">grouping_example</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">importance</span><span class=\"o\">.</span><span class=\"n\">SAY_30_PERCENT</span><span class=\"p\">,</span> <span class=\"s2\">\"I'm your assistant.\"</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">importance</span><span class=\"o\">.</span><span class=\"n\">SAY_ALWAYS</span><span class=\"p\">,</span> <span class=\"s2\">\"Nice to meet you\"</span><span class=\"p\">)</span> <span class=\"p\">]</span>\n\n    <span class=\"n\">text_talker</span><span class=\"o\">.</span><span class=\"n\">quiet_level</span> <span class=\"o\">=</span> <span class=\"o\">+</span><span class=\"mi\">2</span>\n\n    <span class=\"n\">text_talker</span><span class=\"o\">.</span><span class=\"n\">say_group</span><span class=\"p\">(</span><span class=\"n\">grouping_example</span><span class=\"p\">)</span>\n</pre>\n<p>In the above example the <code>I'm your assistant</code> phrase will only be said 10% of the time because of the +2 assigned to quiet level. The <code>Nice to meet you</code> is not effected.</p>\n<h3>Config</h3>\n<p>use the TT_Config class to override configuration defaults</p>\n<pre><span class=\"c1\"># TT_Config's standard defaults</span>\n\n    <span class=\"n\">USERNAME</span><span class=\"o\">=</span><span class=\"s1\">'--watson tts credentials username goes here--'</span>\n    <span class=\"n\">PASSWORD</span><span class=\"o\">=</span><span class=\"s1\">'--watson tts credentials password goes here--'</span>\n\n    <span class=\"n\">TTS_VOICE</span> <span class=\"o\">=</span> <span class=\"s1\">'en-US_AllisonVoice'</span>\n    <span class=\"n\">TTS_ACCEPT</span> <span class=\"o\">=</span> <span class=\"s1\">'audio/mp3'</span>\n\n    <span class=\"n\">CACHE_DIRECTORY</span> <span class=\"o\">=</span> <span class=\"s1\">'voice_mp3s'</span>\n    <span class=\"n\">CACHE_DIRECTORY_IS_RELATIVE</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n    <span class=\"n\">VOICE_FILE_EXTENSION</span> <span class=\"o\">=</span> <span class=\"s1\">'mp3'</span>\n</pre>\n<p>Use it like so:</p>\n<pre>    <span class=\"kn\">from</span> <span class=\"nn\">watson_text_talker</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n    <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">TT_Config</span><span class=\"p\">()</span>\n    <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">CREDENTIALS_USERNAME</span><span class=\"o\">=</span><span class=\"s1\">'your watson credentials'</span>\n    <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">CREDENTIALS_PASSWORD</span><span class=\"o\">=</span><span class=\"s1\">'your watson password'</span>\n    <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">TTS_Voice</span> <span class=\"o\">=</span> <span class=\"s1\">'en-US_MichaelVoice'</span>\n    <span class=\"n\">congig</span><span class=\"o\">.</span><span class=\"n\">CACHE_DIRECTORY</span> <span class=\"o\">=</span> <span class=\"s1\">'custom_cache'</span>\n\n    <span class=\"n\">text_talker</span> <span class=\"o\">=</span> <span class=\"n\">TextTalker</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config</span><span class=\"p\">)</span>\n\n    <span class=\"n\">text_talker</span><span class=\"o\">.</span><span class=\"n\">say</span><span class=\"p\">(</span><span class=\"s2\">\"Hello world!\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Attributions</h3>\n<ul>\n<li><a href=\"https://github.com/pygame/pygame\" rel=\"nofollow\">pygame</a> is used to process the mp3 voice files</li>\n<li><a href=\"https://github.com/un33k/python-slugify\" rel=\"nofollow\">python-slugify</a> is used to create cache file names</li>\n</ul>\n\n          </div>"}, "last_serial": 4138341, "releases": {"0.8.10": [{"comment_text": "", "digests": {"md5": "efd5681de87e2a2e290c0eaa63b18e8e", "sha256": "fb0eb23c61609f3a249b5697721ef1928f62ba042d9c9dc45cd4576dae85245c"}, "downloads": -1, "filename": "watson_text_talker-0.8.10-py3-none-any.whl", "has_sig": false, "md5_digest": "efd5681de87e2a2e290c0eaa63b18e8e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5442, "upload_time": "2018-08-05T20:37:08", "upload_time_iso_8601": "2018-08-05T20:37:08.453065Z", "url": "https://files.pythonhosted.org/packages/bf/e7/d8e960daa4cc08f80b33084b5e18f59656db63e25b21fe217dd31c02b95b/watson_text_talker-0.8.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7169048761c2b3d314b922e9fae23c3", "sha256": "cdcd1c531b3e3d6b0380e430120094352e9a5dd0f47b0a6bc9804df86d8a2757"}, "downloads": -1, "filename": "watson_text_talker-0.8.10.tar.gz", "has_sig": false, "md5_digest": "e7169048761c2b3d314b922e9fae23c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4878, "upload_time": "2018-08-05T20:37:09", "upload_time_iso_8601": "2018-08-05T20:37:09.611974Z", "url": "https://files.pythonhosted.org/packages/59/3b/3c0ad1c9cdc41a905456aa87e6feeed14021183198aa92a8ba8e625fdedb/watson_text_talker-0.8.10.tar.gz", "yanked": false}], "0.8.8": [{"comment_text": "", "digests": {"md5": "fb28f5104089d45b827940ba694274f8", "sha256": "c5990b73397da2771fc28c093f0d5ab39160e559c888c507716381d5cffb24ae"}, "downloads": -1, "filename": "watson_text_talker-0.8.8-py3-none-any.whl", "has_sig": false, "md5_digest": "fb28f5104089d45b827940ba694274f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3339, "upload_time": "2018-08-03T12:05:03", "upload_time_iso_8601": "2018-08-03T12:05:03.799207Z", "url": "https://files.pythonhosted.org/packages/cb/e0/1e4b2b0d1aa6e5b0714cc94555d484d9275b734c0b72e9a27723fe219dc4/watson_text_talker-0.8.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee814b89ef699e3175be03988a48c2a4", "sha256": "203cf2e4cba200017a6ecc904463e9a5569b2804706016b3eeb7469bc7b30472"}, "downloads": -1, "filename": "watson_text_talker-0.8.8.tar.gz", "has_sig": false, "md5_digest": "ee814b89ef699e3175be03988a48c2a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2626, "upload_time": "2018-08-03T12:05:04", "upload_time_iso_8601": "2018-08-03T12:05:04.896948Z", "url": "https://files.pythonhosted.org/packages/f0/39/599f5266bf534572f666aec897fba8385aabcaaa9d4774b40ec0c06a79b8/watson_text_talker-0.8.8.tar.gz", "yanked": false}], "0.8.9": [{"comment_text": "", "digests": {"md5": "66535ddce6d404bce07d228f9995baec", "sha256": "d53fabe77513fda550a598df323e2d30f92c905c8f8673d587b325f9f108b88f"}, "downloads": -1, "filename": "watson_text_talker-0.8.9-py3-none-any.whl", "has_sig": false, "md5_digest": "66535ddce6d404bce07d228f9995baec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3532, "upload_time": "2018-08-03T18:56:03", "upload_time_iso_8601": "2018-08-03T18:56:03.934239Z", "url": "https://files.pythonhosted.org/packages/e4/74/5f2d1dfe086eab8c9f3c9498333b776772ee267e9eee202e724cfb214610/watson_text_talker-0.8.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e8449419ffb7d59f20d4b5fb55b48583", "sha256": "011d68140a21881fd8d4e47b32ecfdfc116402a22f280b1760894d7824f8c9c1"}, "downloads": -1, "filename": "watson_text_talker-0.8.9.tar.gz", "has_sig": false, "md5_digest": "e8449419ffb7d59f20d4b5fb55b48583", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2847, "upload_time": "2018-08-03T18:56:05", "upload_time_iso_8601": "2018-08-03T18:56:05.054414Z", "url": "https://files.pythonhosted.org/packages/8f/da/374317ee9a953fa5affc574eadf07d79bf54e2417477429df974399a5c97/watson_text_talker-0.8.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "efd5681de87e2a2e290c0eaa63b18e8e", "sha256": "fb0eb23c61609f3a249b5697721ef1928f62ba042d9c9dc45cd4576dae85245c"}, "downloads": -1, "filename": "watson_text_talker-0.8.10-py3-none-any.whl", "has_sig": false, "md5_digest": "efd5681de87e2a2e290c0eaa63b18e8e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5442, "upload_time": "2018-08-05T20:37:08", "upload_time_iso_8601": "2018-08-05T20:37:08.453065Z", "url": "https://files.pythonhosted.org/packages/bf/e7/d8e960daa4cc08f80b33084b5e18f59656db63e25b21fe217dd31c02b95b/watson_text_talker-0.8.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7169048761c2b3d314b922e9fae23c3", "sha256": "cdcd1c531b3e3d6b0380e430120094352e9a5dd0f47b0a6bc9804df86d8a2757"}, "downloads": -1, "filename": "watson_text_talker-0.8.10.tar.gz", "has_sig": false, "md5_digest": "e7169048761c2b3d314b922e9fae23c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4878, "upload_time": "2018-08-05T20:37:09", "upload_time_iso_8601": "2018-08-05T20:37:09.611974Z", "url": "https://files.pythonhosted.org/packages/59/3b/3c0ad1c9cdc41a905456aa87e6feeed14021183198aa92a8ba8e625fdedb/watson_text_talker-0.8.10.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:32:00 2020"}