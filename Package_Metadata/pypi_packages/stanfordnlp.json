{"info": {"author": "Stanford Natural Language Processing Group", "author_email": "jebolton@stanford.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "# StanfordNLP: A Python NLP Library for Many Human Languages\n\n[![Travis Status](https://travis-ci.com/stanfordnlp/stanfordnlp.svg?token=RPNzRzNDQRoq2x3J2juj&branch=master)](https://travis-ci.com/stanfordnlp/stanfordnlp)\n[![PyPI version](https://img.shields.io/pypi/v/stanfordnlp.svg?colorB=blue)](https://pypi.org/project/stanfordnlp/)\n\nThe Stanford NLP Group's official Python NLP library. It contains packages for running our latest fully neural pipeline from the CoNLL 2018 Shared Task and for accessing the Java Stanford CoreNLP server. For detailed information please visit our [official website](https://stanfordnlp.github.io/stanfordnlp/).\n\n### References\n\nIf you use our neural pipeline including the tokenizer, the multi-word token expansion model, the lemmatizer, the POS/morphological features tagger, or the dependency parser in your research, please kindly cite our CoNLL 2018 Shared Task [system description paper](https://nlp.stanford.edu/pubs/qi2018universal.pdf):\n\n```bibtex\n@inproceedings{qi2018universal,\n address = {Brussels, Belgium},\n author = {Qi, Peng  and  Dozat, Timothy  and  Zhang, Yuhao  and  Manning, Christopher D.},\n booktitle = {Proceedings of the {CoNLL} 2018 Shared Task: Multilingual Parsing from Raw Text to Universal Dependencies},\n month = {October},\n pages = {160--170},\n publisher = {Association for Computational Linguistics},\n title = {Universal Dependency Parsing from Scratch},\n url = {https://nlp.stanford.edu/pubs/qi2018universal.pdf},\n year = {2018}\n}\n```\nThe PyTorch implementation of the neural pipeline in this repository is due to [Peng Qi](http://qipeng.me) and [Yuhao Zhang](http://yuhao.im), with help from [Tim Dozat](https://web.stanford.edu/~tdozat/) and [Jason Bolton](mailto:jebolton@stanford.edu).\n\nThis release is not the same as Stanford's CoNLL 2018 Shared Task system. The tokenizer, lemmatizer, morphological features, and multi-word term systems are a cleaned up version of the shared task code, but in the competition we used a  [Tensorflow version](https://github.com/tdozat/Parser-v3) of the tagger and parser by [Tim Dozat](https://web.stanford.edu/~tdozat/), which has been approximately reproduced in PyTorch (though with a few deviations from the original) for this release.\n\nIf you use the CoreNLP server, please cite the CoreNLP software package and the respective modules as described [here](https://stanfordnlp.github.io/CoreNLP/#citing-stanford-corenlp-in-papers) (\"Citing Stanford CoreNLP in papers\"). The CoreNLP client is mostly written by [Arun Chaganty](http://arun.chagantys.org/), and [Jason Bolton](mailto:jebolton@stanford.edu) spearheaded merging the two projects together.\n\n## Issues and Usage Q&A\n\nPlease use the following channels for questions and issue reports.\n\n| Purpose | Channel |\n|---|---|\n| Usage Q&A | [Google Group](https://groups.google.com/forum/#!forum/stanfordnlp) |\n| Bug Reports and Feature Requests | [GitHub Issue Tracker](https://github.com/stanfordnlp/stanfordnlp/issues) |\n\n## Setup\n\nStanfordNLP supports Python 3.6 or later. We strongly recommend that you install StanfordNLP from PyPI. If you already have [pip installed](https://pip.pypa.io/en/stable/installing/), simply run\n```bash\npip install stanfordnlp\n```\nthis should also help resolve all of the dependencies of StanfordNLP, for instance [PyTorch](https://pytorch.org/) 1.0.0 or above.\n\nAlternatively, you can also install from source of this git repository, which will give you more flexibility in developing on top of StanfordNLP and training your own models. For this option, run\n```bash\ngit clone git@github.com:stanfordnlp/stanfordnlp.git\ncd stanfordnlp\npip install -e .\n```\n\n## Running StanfordNLP\n\n### Getting Started with the neural pipeline\n\nTo run your first StanfordNLP pipeline, simply following these steps in your Python interactive interpreter:\n\n```python\n>>> import stanfordnlp\n>>> stanfordnlp.download('en')   # This downloads the English models for the neural pipeline\n>>> nlp = stanfordnlp.Pipeline() # This sets up a default neural pipeline in English\n>>> doc = nlp(\"Barack Obama was born in Hawaii.  He was elected president in 2008.\")\n>>> doc.sentences[0].print_dependencies()\n```\n\nThe last command will print out the words in the first sentence in the input string (or `Document`, as it is represented in StanfordNLP), as well as the indices for the word that governs it in the Universal Dependencies parse of that sentence (its \"head\"), along with the dependency relation between the words. The output should look like:\n\n```\n('Barack', '4', 'nsubj:pass')\n('Obama', '1', 'flat')\n('was', '4', 'aux:pass')\n('born', '0', 'root')\n('in', '6', 'case')\n('Hawaii', '4', 'obl')\n('.', '4', 'punct')\n```\n\n**Note:** If you are running into issues like `OSError: [Errno 22] Invalid argument`, it's very likely that you are affected by a [known Python issue](https://bugs.python.org/issue24658), and we would recommend Python 3.6.8 or later and Python 3.7.2 or later.\n\nWe also provide a multilingual [demo script](https://github.com/stanfordnlp/stanfordnlp/blob/master/demo/pipeline_demo.py) that demonstrates how one uses StanfordNLP in other languages than English, for example Chinese (traditional)\n\n```bash\npython demo/pipeline_demo.py -l zh\n```\n\nSee [our getting started guide](https://stanfordnlp.github.io/stanfordnlp/installation_download.html#getting-started) for more details.\n\n### Access to Java Stanford CoreNLP Server\n\nAside from the neural pipeline, this project also includes an official wrapper for acessing the Java Stanford CoreNLP Server with Python code.\n\nThere are a few initial setup steps.\n\n* Download [Stanford CoreNLP](https://stanfordnlp.github.io/CoreNLP/) and models for the language you wish to use.\n* Put the model jars in the distribution folder\n* Tell the python code where Stanford CoreNLP is located: `export CORENLP_HOME=/path/to/stanford-corenlp-full-2018-10-05`\n\nWe provide another [demo script](https://github.com/stanfordnlp/stanfordnlp/blob/master/demo/corenlp.py) that shows how one can use the CoreNLP client and extract various annotations from it.\n\n\n### Trained Models for the Neural Pipeline\n\nWe currently provide models for all of the treebanks in the CoNLL 2018 Shared Task. You can find instructions for downloading and using these models [here](https://stanfordnlp.github.io/stanfordnlp/installation_download.html#models-for-human-languages).\n\n### Batching To Maximize Pipeline Speed\n\nTo maximize speed performance, it is essential to run the pipeline on batches of documents. Running a for loop\non one sentence at a time will be very slow. The best approach at this time is to concatenate documents together,\nwith each document separated by a blank line (i.e., two line breaks `\\n\\n`).  The tokenizer will recognize blank lines as sentence breaks.\nWe are actively working on improving multi-document processing.\n\n## Training your own neural pipelines\n\nAll neural modules in this library, including the tokenizer, the multi-word token (MWT) expander, the POS/morphological features tagger, the lemmatizer and the dependency parser, can be trained with your own [CoNLL-U](https://universaldependencies.org/format.html) format data. Currently, we do not support model training via the `Pipeline` interface. Therefore, to train your own models, you need to clone this git repository and set up from source.\n\nFor detailed step-by-step guidance on how to train and evaluate your own models, please visit our [training documentation](https://stanfordnlp.github.io/stanfordnlp/training.html).\n\n## LICENSE\n\nStanfordNLP is released under the Apache License, Version 2.0. See the [LICENSE](https://github.com/stanfordnlp/stanfordnlp/blob/master/LICENSE) file for more details.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/stanfordnlp/stanfordnlp.git", "keywords": "natural-language-processing nlp natural-language-understanding stanford-nlp", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "stanfordnlp", "package_url": "https://pypi.org/project/stanfordnlp/", "platform": "", "project_url": "https://pypi.org/project/stanfordnlp/", "project_urls": {"Homepage": "https://github.com/stanfordnlp/stanfordnlp.git"}, "release_url": "https://pypi.org/project/stanfordnlp/0.2.0/", "requires_dist": ["numpy", "protobuf", "requests", "torch (>=1.0.0)", "tqdm", "check-manifest ; extra == 'dev'", "coverage ; extra == 'test'"], "requires_python": "", "summary": "Official Stanford NLP Python Library", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>StanfordNLP: A Python NLP Library for Many Human Languages</h1>\n<p><a href=\"https://travis-ci.com/stanfordnlp/stanfordnlp\" rel=\"nofollow\"><img alt=\"Travis Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7eb06f508e80d5f17d8ec39a3c1c5ba3b28b5fe9/68747470733a2f2f7472617669732d63692e636f6d2f7374616e666f72646e6c702f7374616e666f72646e6c702e7376673f746f6b656e3d52504e7a527a4e4451526f713278334a326a756a266272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/stanfordnlp/\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c4d41700e1f3411592d9fe19de2e4cb73a366895/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7374616e666f72646e6c702e7376673f636f6c6f72423d626c7565\"></a></p>\n<p>The Stanford NLP Group's official Python NLP library. It contains packages for running our latest fully neural pipeline from the CoNLL 2018 Shared Task and for accessing the Java Stanford CoreNLP server. For detailed information please visit our <a href=\"https://stanfordnlp.github.io/stanfordnlp/\" rel=\"nofollow\">official website</a>.</p>\n<h3>References</h3>\n<p>If you use our neural pipeline including the tokenizer, the multi-word token expansion model, the lemmatizer, the POS/morphological features tagger, or the dependency parser in your research, please kindly cite our CoNLL 2018 Shared Task <a href=\"https://nlp.stanford.edu/pubs/qi2018universal.pdf\" rel=\"nofollow\">system description paper</a>:</p>\n<pre><span class=\"nc\">@inproceedings</span><span class=\"p\">{</span><span class=\"nl\">qi2018universal</span><span class=\"p\">,</span>\n <span class=\"na\">address</span> <span class=\"p\">=</span> <span class=\"s\">{Brussels, Belgium}</span><span class=\"p\">,</span>\n <span class=\"na\">author</span> <span class=\"p\">=</span> <span class=\"s\">{Qi, Peng  and  Dozat, Timothy  and  Zhang, Yuhao  and  Manning, Christopher D.}</span><span class=\"p\">,</span>\n <span class=\"na\">booktitle</span> <span class=\"p\">=</span> <span class=\"s\">{Proceedings of the {CoNLL} 2018 Shared Task: Multilingual Parsing from Raw Text to Universal Dependencies}</span><span class=\"p\">,</span>\n <span class=\"na\">month</span> <span class=\"p\">=</span> <span class=\"s\">{October}</span><span class=\"p\">,</span>\n <span class=\"na\">pages</span> <span class=\"p\">=</span> <span class=\"s\">{160--170}</span><span class=\"p\">,</span>\n <span class=\"na\">publisher</span> <span class=\"p\">=</span> <span class=\"s\">{Association for Computational Linguistics}</span><span class=\"p\">,</span>\n <span class=\"na\">title</span> <span class=\"p\">=</span> <span class=\"s\">{Universal Dependency Parsing from Scratch}</span><span class=\"p\">,</span>\n <span class=\"na\">url</span> <span class=\"p\">=</span> <span class=\"s\">{https://nlp.stanford.edu/pubs/qi2018universal.pdf}</span><span class=\"p\">,</span>\n <span class=\"na\">year</span> <span class=\"p\">=</span> <span class=\"s\">{2018}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>The PyTorch implementation of the neural pipeline in this repository is due to <a href=\"http://qipeng.me\" rel=\"nofollow\">Peng Qi</a> and <a href=\"http://yuhao.im\" rel=\"nofollow\">Yuhao Zhang</a>, with help from <a href=\"https://web.stanford.edu/%7Etdozat/\" rel=\"nofollow\">Tim Dozat</a> and <a href=\"mailto:jebolton@stanford.edu\">Jason Bolton</a>.</p>\n<p>This release is not the same as Stanford's CoNLL 2018 Shared Task system. The tokenizer, lemmatizer, morphological features, and multi-word term systems are a cleaned up version of the shared task code, but in the competition we used a  <a href=\"https://github.com/tdozat/Parser-v3\" rel=\"nofollow\">Tensorflow version</a> of the tagger and parser by <a href=\"https://web.stanford.edu/%7Etdozat/\" rel=\"nofollow\">Tim Dozat</a>, which has been approximately reproduced in PyTorch (though with a few deviations from the original) for this release.</p>\n<p>If you use the CoreNLP server, please cite the CoreNLP software package and the respective modules as described <a href=\"https://stanfordnlp.github.io/CoreNLP/#citing-stanford-corenlp-in-papers\" rel=\"nofollow\">here</a> (\"Citing Stanford CoreNLP in papers\"). The CoreNLP client is mostly written by <a href=\"http://arun.chagantys.org/\" rel=\"nofollow\">Arun Chaganty</a>, and <a href=\"mailto:jebolton@stanford.edu\">Jason Bolton</a> spearheaded merging the two projects together.</p>\n<h2>Issues and Usage Q&amp;A</h2>\n<p>Please use the following channels for questions and issue reports.</p>\n<table>\n<thead>\n<tr>\n<th>Purpose</th>\n<th>Channel</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Usage Q&amp;A</td>\n<td><a href=\"https://groups.google.com/forum/#!forum/stanfordnlp\" rel=\"nofollow\">Google Group</a></td>\n</tr>\n<tr>\n<td>Bug Reports and Feature Requests</td>\n<td><a href=\"https://github.com/stanfordnlp/stanfordnlp/issues\" rel=\"nofollow\">GitHub Issue Tracker</a></td>\n</tr></tbody></table>\n<h2>Setup</h2>\n<p>StanfordNLP supports Python 3.6 or later. We strongly recommend that you install StanfordNLP from PyPI. If you already have <a href=\"https://pip.pypa.io/en/stable/installing/\" rel=\"nofollow\">pip installed</a>, simply run</p>\n<pre>pip install stanfordnlp\n</pre>\n<p>this should also help resolve all of the dependencies of StanfordNLP, for instance <a href=\"https://pytorch.org/\" rel=\"nofollow\">PyTorch</a> 1.0.0 or above.</p>\n<p>Alternatively, you can also install from source of this git repository, which will give you more flexibility in developing on top of StanfordNLP and training your own models. For this option, run</p>\n<pre>git clone git@github.com:stanfordnlp/stanfordnlp.git\n<span class=\"nb\">cd</span> stanfordnlp\npip install -e .\n</pre>\n<h2>Running StanfordNLP</h2>\n<h3>Getting Started with the neural pipeline</h3>\n<p>To run your first StanfordNLP pipeline, simply following these steps in your Python interactive interpreter:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">stanfordnlp</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">stanfordnlp</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"s1\">'en'</span><span class=\"p\">)</span>   <span class=\"c1\"># This downloads the English models for the neural pipeline</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">nlp</span> <span class=\"o\">=</span> <span class=\"n\">stanfordnlp</span><span class=\"o\">.</span><span class=\"n\">Pipeline</span><span class=\"p\">()</span> <span class=\"c1\"># This sets up a default neural pipeline in English</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"n\">nlp</span><span class=\"p\">(</span><span class=\"s2\">\"Barack Obama was born in Hawaii.  He was elected president in 2008.\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">sentences</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">print_dependencies</span><span class=\"p\">()</span>\n</pre>\n<p>The last command will print out the words in the first sentence in the input string (or <code>Document</code>, as it is represented in StanfordNLP), as well as the indices for the word that governs it in the Universal Dependencies parse of that sentence (its \"head\"), along with the dependency relation between the words. The output should look like:</p>\n<pre><code>('Barack', '4', 'nsubj:pass')\n('Obama', '1', 'flat')\n('was', '4', 'aux:pass')\n('born', '0', 'root')\n('in', '6', 'case')\n('Hawaii', '4', 'obl')\n('.', '4', 'punct')\n</code></pre>\n<p><strong>Note:</strong> If you are running into issues like <code>OSError: [Errno 22] Invalid argument</code>, it's very likely that you are affected by a <a href=\"https://bugs.python.org/issue24658\" rel=\"nofollow\">known Python issue</a>, and we would recommend Python 3.6.8 or later and Python 3.7.2 or later.</p>\n<p>We also provide a multilingual <a href=\"https://github.com/stanfordnlp/stanfordnlp/blob/master/demo/pipeline_demo.py\" rel=\"nofollow\">demo script</a> that demonstrates how one uses StanfordNLP in other languages than English, for example Chinese (traditional)</p>\n<pre>python demo/pipeline_demo.py -l zh\n</pre>\n<p>See <a href=\"https://stanfordnlp.github.io/stanfordnlp/installation_download.html#getting-started\" rel=\"nofollow\">our getting started guide</a> for more details.</p>\n<h3>Access to Java Stanford CoreNLP Server</h3>\n<p>Aside from the neural pipeline, this project also includes an official wrapper for acessing the Java Stanford CoreNLP Server with Python code.</p>\n<p>There are a few initial setup steps.</p>\n<ul>\n<li>Download <a href=\"https://stanfordnlp.github.io/CoreNLP/\" rel=\"nofollow\">Stanford CoreNLP</a> and models for the language you wish to use.</li>\n<li>Put the model jars in the distribution folder</li>\n<li>Tell the python code where Stanford CoreNLP is located: <code>export CORENLP_HOME=/path/to/stanford-corenlp-full-2018-10-05</code></li>\n</ul>\n<p>We provide another <a href=\"https://github.com/stanfordnlp/stanfordnlp/blob/master/demo/corenlp.py\" rel=\"nofollow\">demo script</a> that shows how one can use the CoreNLP client and extract various annotations from it.</p>\n<h3>Trained Models for the Neural Pipeline</h3>\n<p>We currently provide models for all of the treebanks in the CoNLL 2018 Shared Task. You can find instructions for downloading and using these models <a href=\"https://stanfordnlp.github.io/stanfordnlp/installation_download.html#models-for-human-languages\" rel=\"nofollow\">here</a>.</p>\n<h3>Batching To Maximize Pipeline Speed</h3>\n<p>To maximize speed performance, it is essential to run the pipeline on batches of documents. Running a for loop\non one sentence at a time will be very slow. The best approach at this time is to concatenate documents together,\nwith each document separated by a blank line (i.e., two line breaks <code>\\n\\n</code>).  The tokenizer will recognize blank lines as sentence breaks.\nWe are actively working on improving multi-document processing.</p>\n<h2>Training your own neural pipelines</h2>\n<p>All neural modules in this library, including the tokenizer, the multi-word token (MWT) expander, the POS/morphological features tagger, the lemmatizer and the dependency parser, can be trained with your own <a href=\"https://universaldependencies.org/format.html\" rel=\"nofollow\">CoNLL-U</a> format data. Currently, we do not support model training via the <code>Pipeline</code> interface. Therefore, to train your own models, you need to clone this git repository and set up from source.</p>\n<p>For detailed step-by-step guidance on how to train and evaluate your own models, please visit our <a href=\"https://stanfordnlp.github.io/stanfordnlp/training.html\" rel=\"nofollow\">training documentation</a>.</p>\n<h2>LICENSE</h2>\n<p>StanfordNLP is released under the Apache License, Version 2.0. See the <a href=\"https://github.com/stanfordnlp/stanfordnlp/blob/master/LICENSE\" rel=\"nofollow\">LICENSE</a> file for more details.</p>\n\n          </div>"}, "last_serial": 5276210, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "48bad1d338f38539f7d841c2ba8f4931", "sha256": "8df1d528001fb3b941d1d6cca1c715cbd549b3b398ceb7138a8784bfa81abc4a"}, "downloads": -1, "filename": "stanfordnlp-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "48bad1d338f38539f7d841c2ba8f4931", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 133160, "upload_time": "2019-01-29T10:42:14", "upload_time_iso_8601": "2019-01-29T10:42:14.498442Z", "url": "https://files.pythonhosted.org/packages/6a/d1/3582b93ac37918d6ca0d88ccb11d6d56cd08a102b7f54f6e35f3e168aa26/stanfordnlp-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d1f6833ee09b36e0f6ac6a6556973b3", "sha256": "986600e81f9fca852c47a1f21c96be85f1a8b845d45a066f36a149da5a177344"}, "downloads": -1, "filename": "stanfordnlp-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6d1f6833ee09b36e0f6ac6a6556973b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100500, "upload_time": "2019-01-29T10:42:16", "upload_time_iso_8601": "2019-01-29T10:42:16.279980Z", "url": "https://files.pythonhosted.org/packages/2b/fe/99a1e4406cc6e7e9621a101f5d76dfb44b2db28bc0eeb98c056bc273e4d6/stanfordnlp-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "adf43feb6ebfaca59f85e30002c173b0", "sha256": "78e4c9c5a132914f645e4e89d5f64d550e884aff413309621e1b8975fb4818e7"}, "downloads": -1, "filename": "stanfordnlp-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "adf43feb6ebfaca59f85e30002c173b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 133486, "upload_time": "2019-01-31T03:41:06", "upload_time_iso_8601": "2019-01-31T03:41:06.685183Z", "url": "https://files.pythonhosted.org/packages/89/26/069d061ec8e3ea5cadffb00f941f6c79c7557821df8cc0439cbf1906cf53/stanfordnlp-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a003ba07f59983f0239e4b0ca968ce61", "sha256": "43cc7cef01568b6d77e227fa0eef53f2a881877abb4c106b9f972cdcdeeae38a"}, "downloads": -1, "filename": "stanfordnlp-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a003ba07f59983f0239e4b0ca968ce61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 101187, "upload_time": "2019-01-31T03:41:08", "upload_time_iso_8601": "2019-01-31T03:41:08.598472Z", "url": "https://files.pythonhosted.org/packages/b5/76/04ee0094138681bca135aa1f22ae15076ae243e4ae8c6391b6b478af2b5c/stanfordnlp-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "a9ab29d525981ceebfcb353ec8f403c0", "sha256": "31cc42575415c6822d3dfb8ec533baec521dd88b9cc02570a9ce1b186b20d590"}, "downloads": -1, "filename": "stanfordnlp-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a9ab29d525981ceebfcb353ec8f403c0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 135117, "upload_time": "2019-02-26T22:49:45", "upload_time_iso_8601": "2019-02-26T22:49:45.279736Z", "url": "https://files.pythonhosted.org/packages/c6/53/86245cebb380fb5f7f5e16eccfe78afed8c3c2c7ef218331cbcafce2be18/stanfordnlp-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3363d73ecd8fa8cbfa5207097a10f0c6", "sha256": "5efc6e4a7e41c932482c5f23c17bd942aa8de8451606291aa1bf7e28db580001"}, "downloads": -1, "filename": "stanfordnlp-0.1.2.tar.gz", "has_sig": false, "md5_digest": "3363d73ecd8fa8cbfa5207097a10f0c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 101761, "upload_time": "2019-02-26T22:49:47", "upload_time_iso_8601": "2019-02-26T22:49:47.014091Z", "url": "https://files.pythonhosted.org/packages/d0/b9/f2671058d5ae6acfc95d72c4ee9ec5505064103e27c116a481f9cee9344e/stanfordnlp-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "ce73739cb9d4652b725defa10b89937d", "sha256": "66450f0b422e649e8b31f171260930b733324b000ebfe81c436328b424425902"}, "downloads": -1, "filename": "stanfordnlp-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ce73739cb9d4652b725defa10b89937d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 158797, "upload_time": "2019-05-16T08:14:26", "upload_time_iso_8601": "2019-05-16T08:14:26.624584Z", "url": "https://files.pythonhosted.org/packages/41/bf/5d2898febb6e993fcccd90484cba3c46353658511a41430012e901824e94/stanfordnlp-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fcfc1a58a030fcc6db9b55540a0c71f1", "sha256": "a8bd56dfef23cbb1e1c461469ac5bdd4563c24f360befe300a7d97cb51b49a49"}, "downloads": -1, "filename": "stanfordnlp-0.2.0.tar.gz", "has_sig": false, "md5_digest": "fcfc1a58a030fcc6db9b55540a0c71f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 119723, "upload_time": "2019-05-16T08:14:28", "upload_time_iso_8601": "2019-05-16T08:14:28.646794Z", "url": "https://files.pythonhosted.org/packages/08/47/956a1cdfc1de6777437728a97f60b00deac37e5f48e981e0ab3abba17ada/stanfordnlp-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ce73739cb9d4652b725defa10b89937d", "sha256": "66450f0b422e649e8b31f171260930b733324b000ebfe81c436328b424425902"}, "downloads": -1, "filename": "stanfordnlp-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ce73739cb9d4652b725defa10b89937d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 158797, "upload_time": "2019-05-16T08:14:26", "upload_time_iso_8601": "2019-05-16T08:14:26.624584Z", "url": "https://files.pythonhosted.org/packages/41/bf/5d2898febb6e993fcccd90484cba3c46353658511a41430012e901824e94/stanfordnlp-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fcfc1a58a030fcc6db9b55540a0c71f1", "sha256": "a8bd56dfef23cbb1e1c461469ac5bdd4563c24f360befe300a7d97cb51b49a49"}, "downloads": -1, "filename": "stanfordnlp-0.2.0.tar.gz", "has_sig": false, "md5_digest": "fcfc1a58a030fcc6db9b55540a0c71f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 119723, "upload_time": "2019-05-16T08:14:28", "upload_time_iso_8601": "2019-05-16T08:14:28.646794Z", "url": "https://files.pythonhosted.org/packages/08/47/956a1cdfc1de6777437728a97f60b00deac37e5f48e981e0ab3abba17ada/stanfordnlp-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:42 2020"}