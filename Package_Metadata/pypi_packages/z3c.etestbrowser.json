{"info": {"author": "Christian Theune", "author_email": "mail@gocept.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Zope :: 3", "Intended Audience :: Developers", "License :: OSI Approved :: Zope Public License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP"], "description": "=====================================\nExtensions for the Zope 3 testbrowser\n=====================================\n\nThis package is intended to provide extended versions of the Zope 3\ntestbrowser_. Especially those extensions that introduce dependencies to more\nexternal products, like lxml.\n\n.. _testbrowser: https://pypi.org/project/zope.testbrowser/\n\n.. contents::\n\nExtension: lxml-support\n=======================\n\nAll HTML pages are parsed and provided as an element-tree.\n\n\nExtended testbrowser\n--------------------\n\nThis package provides some extensions to ``zope.testbrowser``.  These are not\nincluded in the core because they have extra dependencies, such as ``lxml``.\n\n\nRequirements\n~~~~~~~~~~~~\n\n - lxml\n\n\netree support\n~~~~~~~~~~~~~\n\nThe extended test browser allows parsing of the result of a request into an\netree using lxml (if the content type is text/html or text/xml).\n\nThis is useful to perform more detailed analysis of web pages using e.g. XPath\nand related XML technologies.\n\nExample:\n\n  >>> from z3c.etestbrowser.testing import ExtendedTestBrowser\n  >>> browser = ExtendedTestBrowser()\n  >>> browser.open(\"http://localhost/\")\n  >>> print(browser.contents)\n  <!DOCTYPE ...>\n  ...\n  </html>\n  >>> browser.etree\n  <Element html at ...>\n  >>> browser.etree.xpath('//body')\n  [<Element body at ...>]\n\n\nStrict XML\n++++++++++\n\nIt is possible to force the test browser to use the xml parser:\n\n  >>> browser.xml_strict\n  False\n  >>> browser.xml_strict = True\n  >>> browser.open(\"http://localhost/\")\n  >>> browser.etree\n  <Element {http://www.w3.org/1999/xhtml}html at ...>\n  >>> browser.etree.xpath(\n  ...     '//html:body', namespaces={'html': 'http://www.w3.org/1999/xhtml'})\n  [<Element {http://www.w3.org/1999/xhtml}body at ...>]\n\nLXML unicode support\n++++++++++++++++++++\n\nA couple of variations of libxml2 might interpret UTF-8 encoded strings\nincorrectly. We have a workaround for that. Let's have a look at a view that\ncontains a German umlaut:\n\n  >>> browser.xml_strict = False\n  >>> browser.open('http://localhost/lxml.html')\n  >>> browser.etree.xpath(\"//span\")[0].text == u'K\\xfcgelblitz.'\n  True\n\nInvalid XML/HTML responses\n++++++++++++++++++++++++++\n\nResponses that contain a body with invalid XML/HTML will cause an error when\naccessing the etree or normalized_contents attribute, but will load fine for\ngeneral TestBrowser use:\n\n  >>> browser.open(\"http://localhost/empty.html\")\n  >>> browser.contents\n  ''\n  >>> browser.etree\n  Traceback (most recent call last):\n  ValueError: ...\n  >>> browser.normalized_contents\n  Traceback (most recent call last):\n  ValueError: ...\n\n\nHTML/XML normalization\n~~~~~~~~~~~~~~~~~~~~~~\n\nThe extended test browser allows normalized output of HTML and XML which makes\ntesting examples with HTML or XML a bit easier when unimportant details like\nwhitespace are changing:\n\n  >>> browser.open('http://localhost/funny.html')\n  >>> print(browser.contents)\n  <html>\n    <head>\n      <title>Foo</title>\n  </head>\n      <body>\n            <h1>\n        Title\n      </h1>\n          </body>\n              </html>\n  <BLANKLINE>\n\nversus\n\n  >>> print(browser.normalized_contents)\n  <html>\n    <head>\n      <title>Foo</title>\n    </head>\n    <body>\n      <h1>\n        Title\n      </h1>\n    </body>\n  </html>\n\n\nDeprecated special support for zope.testbrowser.wsgi\n----------------------------------------------------\n\nThere was also a variant in ``z3c.etestbrowser.wsgi`` which could be used for\nthe WSGI variant of ``zope.testbrowser``. It is no longer necessary because.\n``z3c.etestbrowser.testing`` now speaks WSGI. It will be removed in the next\nmajor release.\n\nExample:\n\n  >>> import z3c.etestbrowser.wsgi\n  >>> browser = z3c.etestbrowser.wsgi.Browser(wsgi_app=wsgi_app)\n  >>> browser.open(\"http://localhost/\")\n  >>> print(browser.contents)\n  <!DOCTYPE ...>\n  ...\n  </html>\n  >>> browser.etree\n  <Element html at ...>\n  >>> browser.etree.xpath('//body')\n  [<Element body at ...>]\n\n\n\nUsing testbrowser on the internet\n---------------------------------\n\nThe ``z3c.etestbrowser.browser`` module exposes an ``ExtendedTestBrowser``\nclass that simulates a web browser similar to Mozilla Firefox or IE.\n\n    >>> from z3c.etestbrowser.browser import ExtendedTestBrowser\n    >>> browser = ExtendedTestBrowser()\n\nIt can send arbitrary headers; this is helpful for setting the language value,\nso that your tests format values the way you expect in your tests, if you rely\non zope.i18n locale-based formatting or a similar approach.\n\n    >>> browser.addHeader('Accept-Language', 'en-US')\n\nThe browser can `open` web pages:\n\n    >>> # This is tricky, since in Germany I am forwarded to google.de usually;\n    >>> # The `ncr` forces to really go to google.com.\n    >>> browser.open('http://google.com/ncr')\n    Traceback (most recent call last):\n    ...\n    RobotExclusionError: HTTP Error 403: request disallowed by robots.txt\n\nOops!  Google doesn't let robots use their search engine.  Oh well.\n\n\n=======\nCHANGES\n=======\n\n3.0.1 (2019-03-05)\n==================\n\n- Fix deprecation declaration in ``.wsgi``.\n\n\n3.0 (2019-03-04)\n================\n\nBackwards incompatible changes\n------------------------------\n\n- Add support for ``zope.testbrowser >= 5.0`` which speaks WSGI this requires\n  tests to be updated to WSGI.\n\n- Deprecate ``z3c.etestbrowser.wsgi`` which used to contain the WSGI variant\n  as it is now the default.\n\n- Drop the ``zope.app.testing`` extra introduced in version 2.0.0 as\n  it dropped its special ``zope.testbrowser`` support.\n\n- Drop ``.browser.ExtendedTestBrowser.pretty_print`` as its requirements are\n  deprecated or even removed from Python's StdLib.\n\n- Adapt the code to newer ``lxml`` versions which no longer raise an exception\n  if the string to be parsed by ``lxml.etree`` is empty. We now raise a\n  ``ValueError`` in this case.\n\nFeatures\n--------\n\n- Add support for Python 3.6 up to 3.7.\n\n\n2.0.1 (2015-11-09)\n==================\n\n- Fix `over_the_wire.txt`\n\n\n2.0.0 (2011-10-13)\n==================\n\n- No longer depending on ``zope.app.wsgi`` but on ``zope.testbrowser`` >= 4.0\n  for the WSGI flavor of testbrowser.\n\n- Added a `zope.app.testing` extra. You should use this extra if you want to\n  use the browser in ``z3c.etestbrowser.testing``. (The base testbrowser used\n  there has been moved from ``zope.testbrowser`` to ``zope.app.testing`` in\n  version 4.0.)\n\n- Renamed ``z3c.etestbrowser.wsgi.ExtendedTestBrowser`` to ``Browser`` for\n  equality with ``zope.testbrowser`` but kept ``ExtendedTestBrowser`` for\n  backwards compatibility.\n\n1.5.0 (2010-08-22)\n==================\n\n- Added ``z3c.etestbrowser.wsgi.ExtendedTestBrowser``, a variant that can be\n  used when the test layer was set up using ``using\n  zope.app.wsgi.testlayer``. see\n  `Deprecated special support for zope.testbrowser.wsgi`_.\n\n\n1.4.0 (2010-07-08)\n==================\n\n- Took ``zope.securitypolicy`` refactoring and ``zope.testing.doctest``\n  deprecation into account.\n\n- Added ``z3c.etestbrowser.browser.ExtendedTestBrowser``, a variant that\n  speaks HTTP instead of directly talking to the publisher talks to the\n  publisher, see `Using testbrowser on the internet`_.\n\n\n1.3.1 (2010-01-18)\n==================\n\n- Added doctest to `long_description` to show up on pypi.\n\n1.3.0 (2009-07-23)\n==================\n\n- Updgraded pacakge to lxml 2.2.\n\n- Fixed bug with `normalized_contents` which would break the `open` function\n  of test browser if content wasn't parsable as HTML/XML.\n\n1.2.0 (2008-05-29)\n==================\n\n- Added `normalized_contents` attribute that reindents and normalizes the\n  etree structure of a document and allows easier to read HTML/XML examples in\n  doctests.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zopefoundation/z3c.etestbrowser", "keywords": "zope3 testbrowser lxml", "license": "ZPL 2.1", "maintainer": "", "maintainer_email": "", "name": "z3c.etestbrowser", "package_url": "https://pypi.org/project/z3c.etestbrowser/", "platform": "", "project_url": "https://pypi.org/project/z3c.etestbrowser/", "project_urls": {"Homepage": "https://github.com/zopefoundation/z3c.etestbrowser"}, "release_url": "https://pypi.org/project/z3c.etestbrowser/3.0.1/", "requires_dist": ["lxml (>=2.2)", "setuptools", "six", "zope.deferredimport", "zope.testbrowser (>=5.0)", "zope.annotation; extra == 'test'", "zope.app.appsetup; extra == 'test'", "zope.app.publication; extra == 'test'", "zope.app.wsgi[testlayer] (>=4.0dev); extra == 'test'", "zope.authentication; extra == 'test'", "zope.browserpage; extra == 'test'", "zope.component; extra == 'test'", "zope.container; extra == 'test'", "zope.location; extra == 'test'", "zope.principalregistry; extra == 'test'", "zope.publisher; extra == 'test'", "zope.security; extra == 'test'", "zope.securitypolicy; extra == 'test'", "zope.site; extra == 'test'", "zope.testbrowser[test]; extra == 'test'", "zope.testing; extra == 'test'", "zope.testrunner; extra == 'test'", "zope.traversing; extra == 'test'"], "requires_python": "", "summary": "Extensions for zope.testbrowser", "version": "3.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"extensions-for-the-zope-3-testbrowser\">\n<h2><a href=\"#id10\" rel=\"nofollow\">Extensions for the Zope 3 testbrowser</a></h2>\n<p>This package is intended to provide extended versions of the Zope 3\n<a href=\"https://pypi.org/project/zope.testbrowser/\" rel=\"nofollow\">testbrowser</a>. Especially those extensions that introduce dependencies to more\nexternal products, like lxml.</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#extensions-for-the-zope-3-testbrowser\" id=\"id10\" rel=\"nofollow\">Extensions for the Zope 3 testbrowser</a><ul>\n<li><a href=\"#extension-lxml-support\" id=\"id11\" rel=\"nofollow\">Extension: lxml-support</a><ul>\n<li><a href=\"#extended-testbrowser\" id=\"id12\" rel=\"nofollow\">Extended testbrowser</a><ul>\n<li><a href=\"#requirements\" id=\"id13\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#etree-support\" id=\"id14\" rel=\"nofollow\">etree support</a><ul>\n<li><a href=\"#strict-xml\" id=\"id15\" rel=\"nofollow\">Strict XML</a></li>\n<li><a href=\"#lxml-unicode-support\" id=\"id16\" rel=\"nofollow\">LXML unicode support</a></li>\n<li><a href=\"#invalid-xml-html-responses\" id=\"id17\" rel=\"nofollow\">Invalid XML/HTML responses</a></li>\n</ul>\n</li>\n<li><a href=\"#html-xml-normalization\" id=\"id18\" rel=\"nofollow\">HTML/XML normalization</a></li>\n</ul>\n</li>\n<li><a href=\"#deprecated-special-support-for-zope-testbrowser-wsgi\" id=\"id19\" rel=\"nofollow\">Deprecated special support for zope.testbrowser.wsgi</a></li>\n<li><a href=\"#using-testbrowser-on-the-internet\" id=\"id20\" rel=\"nofollow\">Using testbrowser on the internet</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#changes\" id=\"id21\" rel=\"nofollow\">CHANGES</a><ul>\n<li><a href=\"#id1\" id=\"id22\" rel=\"nofollow\">3.0.1 (2019-03-05)</a></li>\n<li><a href=\"#id2\" id=\"id23\" rel=\"nofollow\">3.0 (2019-03-04)</a><ul>\n<li><a href=\"#backwards-incompatible-changes\" id=\"id24\" rel=\"nofollow\">Backwards incompatible changes</a></li>\n<li><a href=\"#features\" id=\"id25\" rel=\"nofollow\">Features</a></li>\n</ul>\n</li>\n<li><a href=\"#id3\" id=\"id26\" rel=\"nofollow\">2.0.1 (2015-11-09)</a></li>\n<li><a href=\"#id4\" id=\"id27\" rel=\"nofollow\">2.0.0 (2011-10-13)</a></li>\n<li><a href=\"#id5\" id=\"id28\" rel=\"nofollow\">1.5.0 (2010-08-22)</a></li>\n<li><a href=\"#id6\" id=\"id29\" rel=\"nofollow\">1.4.0 (2010-07-08)</a></li>\n<li><a href=\"#id7\" id=\"id30\" rel=\"nofollow\">1.3.1 (2010-01-18)</a></li>\n<li><a href=\"#id8\" id=\"id31\" rel=\"nofollow\">1.3.0 (2009-07-23)</a></li>\n<li><a href=\"#id9\" id=\"id32\" rel=\"nofollow\">1.2.0 (2008-05-29)</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"extension-lxml-support\">\n<h3><a href=\"#id11\" rel=\"nofollow\">Extension: lxml-support</a></h3>\n<p>All HTML pages are parsed and provided as an element-tree.</p>\n<div id=\"extended-testbrowser\">\n<h4><a href=\"#id12\" rel=\"nofollow\">Extended testbrowser</a></h4>\n<p>This package provides some extensions to <tt>zope.testbrowser</tt>.  These are not\nincluded in the core because they have extra dependencies, such as <tt>lxml</tt>.</p>\n<div id=\"requirements\">\n<h5><a href=\"#id13\" rel=\"nofollow\">Requirements</a></h5>\n<blockquote>\n<ul>\n<li>lxml</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"etree-support\">\n<h5><a href=\"#id14\" rel=\"nofollow\">etree support</a></h5>\n<p>The extended test browser allows parsing of the result of a request into an\netree using lxml (if the content type is text/html or text/xml).</p>\n<p>This is useful to perform more detailed analysis of web pages using e.g. XPath\nand related XML technologies.</p>\n<p>Example:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from z3c.etestbrowser.testing import ExtendedTestBrowser\n&gt;&gt;&gt; browser = ExtendedTestBrowser()\n&gt;&gt;&gt; browser.open(\"http://localhost/\")\n&gt;&gt;&gt; print(browser.contents)\n&lt;!DOCTYPE ...&gt;\n...\n&lt;/html&gt;\n&gt;&gt;&gt; browser.etree\n&lt;Element html at ...&gt;\n&gt;&gt;&gt; browser.etree.xpath('//body')\n[&lt;Element body at ...&gt;]\n</pre>\n</blockquote>\n<div id=\"strict-xml\">\n<h6><a href=\"#id15\" rel=\"nofollow\">Strict XML</a></h6>\n<p>It is possible to force the test browser to use the xml parser:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.xml_strict\nFalse\n&gt;&gt;&gt; browser.xml_strict = True\n&gt;&gt;&gt; browser.open(\"http://localhost/\")\n&gt;&gt;&gt; browser.etree\n&lt;Element {http://www.w3.org/1999/xhtml}html at ...&gt;\n&gt;&gt;&gt; browser.etree.xpath(\n...     '//html:body', namespaces={'html': 'http://www.w3.org/1999/xhtml'})\n[&lt;Element {http://www.w3.org/1999/xhtml}body at ...&gt;]\n</pre>\n</blockquote>\n</div>\n<div id=\"lxml-unicode-support\">\n<h6><a href=\"#id16\" rel=\"nofollow\">LXML unicode support</a></h6>\n<p>A couple of variations of libxml2 might interpret UTF-8 encoded strings\nincorrectly. We have a workaround for that. Let\u2019s have a look at a view that\ncontains a German umlaut:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.xml_strict = False\n&gt;&gt;&gt; browser.open('http://localhost/lxml.html')\n&gt;&gt;&gt; browser.etree.xpath(\"//span\")[0].text == u'K\\xfcgelblitz.'\nTrue\n</pre>\n</blockquote>\n</div>\n<div id=\"invalid-xml-html-responses\">\n<h6><a href=\"#id17\" rel=\"nofollow\">Invalid XML/HTML responses</a></h6>\n<p>Responses that contain a body with invalid XML/HTML will cause an error when\naccessing the etree or normalized_contents attribute, but will load fine for\ngeneral TestBrowser use:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.open(\"http://localhost/empty.html\")\n&gt;&gt;&gt; browser.contents\n''\n&gt;&gt;&gt; browser.etree\nTraceback (most recent call last):\nValueError: ...\n&gt;&gt;&gt; browser.normalized_contents\nTraceback (most recent call last):\nValueError: ...\n</pre>\n</blockquote>\n</div>\n</div>\n<div id=\"html-xml-normalization\">\n<h5><a href=\"#id18\" rel=\"nofollow\">HTML/XML normalization</a></h5>\n<p>The extended test browser allows normalized output of HTML and XML which makes\ntesting examples with HTML or XML a bit easier when unimportant details like\nwhitespace are changing:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.open('http://localhost/funny.html')\n&gt;&gt;&gt; print(browser.contents)\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Foo&lt;/title&gt;\n&lt;/head&gt;\n    &lt;body&gt;\n          &lt;h1&gt;\n      Title\n    &lt;/h1&gt;\n        &lt;/body&gt;\n            &lt;/html&gt;\n&lt;BLANKLINE&gt;\n</pre>\n</blockquote>\n<p>versus</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print(browser.normalized_contents)\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Foo&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;\n      Title\n    &lt;/h1&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n</blockquote>\n</div>\n</div>\n<div id=\"deprecated-special-support-for-zope-testbrowser-wsgi\">\n<h4><a href=\"#id19\" rel=\"nofollow\">Deprecated special support for zope.testbrowser.wsgi</a></h4>\n<p>There was also a variant in <tt>z3c.etestbrowser.wsgi</tt> which could be used for\nthe WSGI variant of <tt>zope.testbrowser</tt>. It is no longer necessary because.\n<tt>z3c.etestbrowser.testing</tt> now speaks WSGI. It will be removed in the next\nmajor release.</p>\n<p>Example:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import z3c.etestbrowser.wsgi\n&gt;&gt;&gt; browser = z3c.etestbrowser.wsgi.Browser(wsgi_app=wsgi_app)\n&gt;&gt;&gt; browser.open(\"http://localhost/\")\n&gt;&gt;&gt; print(browser.contents)\n&lt;!DOCTYPE ...&gt;\n...\n&lt;/html&gt;\n&gt;&gt;&gt; browser.etree\n&lt;Element html at ...&gt;\n&gt;&gt;&gt; browser.etree.xpath('//body')\n[&lt;Element body at ...&gt;]\n</pre>\n</blockquote>\n</div>\n<div id=\"using-testbrowser-on-the-internet\">\n<h4><a href=\"#id20\" rel=\"nofollow\">Using testbrowser on the internet</a></h4>\n<p>The <tt>z3c.etestbrowser.browser</tt> module exposes an <tt>ExtendedTestBrowser</tt>\nclass that simulates a web browser similar to Mozilla Firefox or IE.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from z3c.etestbrowser.browser import ExtendedTestBrowser\n&gt;&gt;&gt; browser = ExtendedTestBrowser()\n</pre>\n</blockquote>\n<p>It can send arbitrary headers; this is helpful for setting the language value,\nso that your tests format values the way you expect in your tests, if you rely\non zope.i18n locale-based formatting or a similar approach.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.addHeader('Accept-Language', 'en-US')\n</pre>\n</blockquote>\n<p>The browser can <cite>open</cite> web pages:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; # This is tricky, since in Germany I am forwarded to google.de usually;\n&gt;&gt;&gt; # The `ncr` forces to really go to google.com.\n&gt;&gt;&gt; browser.open('http://google.com/ncr')\nTraceback (most recent call last):\n...\nRobotExclusionError: HTTP Error 403: request disallowed by robots.txt\n</pre>\n</blockquote>\n<p>Oops!  Google doesn\u2019t let robots use their search engine.  Oh well.</p>\n</div>\n</div>\n</div>\n<div id=\"changes\">\n<h2><a href=\"#id21\" rel=\"nofollow\">CHANGES</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id22\" rel=\"nofollow\">3.0.1 (2019-03-05)</a></h3>\n<ul>\n<li>Fix deprecation declaration in <tt>.wsgi</tt>.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id23\" rel=\"nofollow\">3.0 (2019-03-04)</a></h3>\n<div id=\"backwards-incompatible-changes\">\n<h4><a href=\"#id24\" rel=\"nofollow\">Backwards incompatible changes</a></h4>\n<ul>\n<li>Add support for <tt>zope.testbrowser &gt;= 5.0</tt> which speaks WSGI this requires\ntests to be updated to WSGI.</li>\n<li>Deprecate <tt>z3c.etestbrowser.wsgi</tt> which used to contain the WSGI variant\nas it is now the default.</li>\n<li>Drop the <tt>zope.app.testing</tt> extra introduced in version 2.0.0 as\nit dropped its special <tt>zope.testbrowser</tt> support.</li>\n<li>Drop <tt>.browser.ExtendedTestBrowser.pretty_print</tt> as its requirements are\ndeprecated or even removed from Python\u2019s StdLib.</li>\n<li>Adapt the code to newer <tt>lxml</tt> versions which no longer raise an exception\nif the string to be parsed by <tt>lxml.etree</tt> is empty. We now raise a\n<tt>ValueError</tt> in this case.</li>\n</ul>\n</div>\n<div id=\"features\">\n<h4><a href=\"#id25\" rel=\"nofollow\">Features</a></h4>\n<ul>\n<li>Add support for Python 3.6 up to 3.7.</li>\n</ul>\n</div>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id26\" rel=\"nofollow\">2.0.1 (2015-11-09)</a></h3>\n<ul>\n<li>Fix <cite>over_the_wire.txt</cite></li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3><a href=\"#id27\" rel=\"nofollow\">2.0.0 (2011-10-13)</a></h3>\n<ul>\n<li>No longer depending on <tt>zope.app.wsgi</tt> but on <tt>zope.testbrowser</tt> &gt;= 4.0\nfor the WSGI flavor of testbrowser.</li>\n<li>Added a <cite>zope.app.testing</cite> extra. You should use this extra if you want to\nuse the browser in <tt>z3c.etestbrowser.testing</tt>. (The base testbrowser used\nthere has been moved from <tt>zope.testbrowser</tt> to <tt>zope.app.testing</tt> in\nversion 4.0.)</li>\n<li>Renamed <tt>z3c.etestbrowser.wsgi.ExtendedTestBrowser</tt> to <tt>Browser</tt> for\nequality with <tt>zope.testbrowser</tt> but kept <tt>ExtendedTestBrowser</tt> for\nbackwards compatibility.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3><a href=\"#id28\" rel=\"nofollow\">1.5.0 (2010-08-22)</a></h3>\n<ul>\n<li>Added <tt>z3c.etestbrowser.wsgi.ExtendedTestBrowser</tt>, a variant that can be\nused when the test layer was set up using <tt>using\nzope.app.wsgi.testlayer</tt>. see\n<a href=\"#deprecated-special-support-for-zope-testbrowser-wsgi\" rel=\"nofollow\">Deprecated special support for zope.testbrowser.wsgi</a>.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3><a href=\"#id29\" rel=\"nofollow\">1.4.0 (2010-07-08)</a></h3>\n<ul>\n<li>Took <tt>zope.securitypolicy</tt> refactoring and <tt>zope.testing.doctest</tt>\ndeprecation into account.</li>\n<li>Added <tt>z3c.etestbrowser.browser.ExtendedTestBrowser</tt>, a variant that\nspeaks HTTP instead of directly talking to the publisher talks to the\npublisher, see <a href=\"#using-testbrowser-on-the-internet\" rel=\"nofollow\">Using testbrowser on the internet</a>.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3><a href=\"#id30\" rel=\"nofollow\">1.3.1 (2010-01-18)</a></h3>\n<ul>\n<li>Added doctest to <cite>long_description</cite> to show up on pypi.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3><a href=\"#id31\" rel=\"nofollow\">1.3.0 (2009-07-23)</a></h3>\n<ul>\n<li>Updgraded pacakge to lxml 2.2.</li>\n<li>Fixed bug with <cite>normalized_contents</cite> which would break the <cite>open</cite> function\nof test browser if content wasn\u2019t parsable as HTML/XML.</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3><a href=\"#id32\" rel=\"nofollow\">1.2.0 (2008-05-29)</a></h3>\n<ul>\n<li>Added <cite>normalized_contents</cite> attribute that reindents and normalizes the\netree structure of a document and allows easier to read HTML/XML examples in\ndoctests.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4898055, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "68ebdc555d6e8cccaeca2a3a00999c36", "sha256": "5268830aad290982a245a516e400fef4946decd5173fee638f917625eab3193b"}, "downloads": -1, "filename": "z3c.etestbrowser-1.0-py2.4.egg", "has_sig": false, "md5_digest": "68ebdc555d6e8cccaeca2a3a00999c36", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 5990, "upload_time": "2007-01-12T10:11:34", "upload_time_iso_8601": "2007-01-12T10:11:34Z", "url": "https://files.pythonhosted.org/packages/9f/55/205768e484034356ffa346906db74e737e46fe0cc96d9b2cbd28c27cb305/z3c.etestbrowser-1.0-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b496d2a36754fd5703f60809c94a3c8", "sha256": "9ac979679baff48dee15c309f2ef9191153ef37dfde5a3c4f5908dac179493a3"}, "downloads": -1, "filename": "z3c.etestbrowser-1.0.tar.gz", "has_sig": false, "md5_digest": "3b496d2a36754fd5703f60809c94a3c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9905, "upload_time": "2007-01-12T10:12:12", "upload_time_iso_8601": "2007-01-12T10:12:12Z", "url": "https://files.pythonhosted.org/packages/69/77/e72e19ea730c9e9e863e4df0a7d3548fbfe4bac445484c4888a75985950a/z3c.etestbrowser-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "f3d5b595fba5b18ce50d86c1826b71b4", "sha256": "5a71fbacfb975f9d94a032a38fd4c71a27f42d652c11c3c885d22339980254f3"}, "downloads": -1, "filename": "z3c.etestbrowser-1.0.1.tar.gz", "has_sig": false, "md5_digest": "f3d5b595fba5b18ce50d86c1826b71b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10261, "upload_time": "2007-05-15T14:30:33", "upload_time_iso_8601": "2007-05-15T14:30:33Z", "url": "https://files.pythonhosted.org/packages/d2/61/06b1eb304e60098c58575ceb9ac55bb760d9576333010bdf99fcd869c63e/z3c.etestbrowser-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "4532992c5941d3a5af903226db01f7ed", "sha256": "a7ba1083879cdcd8485a7ddf6819d82d74cff291c3b42cdd52b02d1f86870817"}, "downloads": -1, "filename": "z3c.etestbrowser-1.0.2.tar.gz", "has_sig": false, "md5_digest": "4532992c5941d3a5af903226db01f7ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4715, "upload_time": "2007-09-11T13:56:20", "upload_time_iso_8601": "2007-09-11T13:56:20Z", "url": "https://files.pythonhosted.org/packages/2d/65/d5fa0f3b2dab864f2c8aa73423f3fee486c34b72bfe2dd0247857b3507f2/z3c.etestbrowser-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "924cccd318a73071bdb879e37657f632", "sha256": "62c3c0182e1c7427807c0324869e961b111a24eaafa4f7a466c7bcec7b09d802"}, "downloads": -1, "filename": "z3c.etestbrowser-1.0.3.tar.gz", "has_sig": false, "md5_digest": "924cccd318a73071bdb879e37657f632", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4885, "upload_time": "2007-09-11T14:02:43", "upload_time_iso_8601": "2007-09-11T14:02:43Z", "url": "https://files.pythonhosted.org/packages/23/a2/82e822953a83d210eda2941cf4632b5e409907106e340f3d3cf07adc5284/z3c.etestbrowser-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "8f83db53ecacec884bffc2a35a1becf1", "sha256": "19cbec313295b13a83177401108fd8ff30bd06e85d1547f28794937638713517"}, "downloads": -1, "filename": "z3c.etestbrowser-1.0.4.tar.gz", "has_sig": false, "md5_digest": "8f83db53ecacec884bffc2a35a1becf1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5332, "upload_time": "2007-11-01T09:31:22", "upload_time_iso_8601": "2007-11-01T09:31:22Z", "url": "https://files.pythonhosted.org/packages/fa/67/b51da8a8fb8ccd79f8fc1c196d7b5674414188e2464e13c2c214a5ef32de/z3c.etestbrowser-1.0.4.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "2a5c6567dcd26fb36a0db2e1e892bfb4", "sha256": "d9ecf6a20c82de42d570afc9cb810a3c69e67a7df62b727c67db90143ae6a589"}, "downloads": -1, "filename": "z3c.etestbrowser-1.1.0.tar.gz", "has_sig": false, "md5_digest": "2a5c6567dcd26fb36a0db2e1e892bfb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5848, "upload_time": "2008-02-05T17:13:52", "upload_time_iso_8601": "2008-02-05T17:13:52Z", "url": "https://files.pythonhosted.org/packages/9f/e3/e51a25f52a962d703e068ddb5db72060f394d375927dc42d7e74e047efb5/z3c.etestbrowser-1.1.0.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "7d5d5160da7e863ed1bb202643bc7843", "sha256": "e4d4ed8cfb610206dfbcda557c0bf2ec9cb51b4faaf3d0ea320006660c343981"}, "downloads": -1, "filename": "z3c.etestbrowser-1.2.tar.gz", "has_sig": false, "md5_digest": "7d5d5160da7e863ed1bb202643bc7843", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6076, "upload_time": "2008-05-29T12:01:42", "upload_time_iso_8601": "2008-05-29T12:01:42Z", "url": "https://files.pythonhosted.org/packages/1e/3f/10bba4f29feb0b84c6047c2b74e2577334a459dad3ff4b8446b4aa5b117b/z3c.etestbrowser-1.2.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "a3194d7876d854727cf5d6d153a00775", "sha256": "f7bf5f38d352c5b5f9b56008439ef6fc6ca8e1b9f94908cfdcdbe7077213c720"}, "downloads": -1, "filename": "z3c.etestbrowser-1.2.1.tar.gz", "has_sig": false, "md5_digest": "a3194d7876d854727cf5d6d153a00775", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6442, "upload_time": "2008-06-18T10:46:14", "upload_time_iso_8601": "2008-06-18T10:46:14Z", "url": "https://files.pythonhosted.org/packages/65/94/d66063711ed59118a5b0bc48cad52466626d824bc8875cf6b983f47af14c/z3c.etestbrowser-1.2.1.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "4191934b786a3b89fbab283fd27c29ae", "sha256": "708d8cc8ea2547954dd1fa77a560e3995e9108819f5606dadb43741e604a89df"}, "downloads": -1, "filename": "z3c.etestbrowser-1.3.0.tar.gz", "has_sig": false, "md5_digest": "4191934b786a3b89fbab283fd27c29ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6642, "upload_time": "2009-07-23T20:16:24", "upload_time_iso_8601": "2009-07-23T20:16:24.885474Z", "url": "https://files.pythonhosted.org/packages/de/eb/b12dba772cb26c0cd145b33f822a8f464a0adeed28628c0c4e72fd101a50/z3c.etestbrowser-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "9714cab28546be1b9a4a253b1e5185e8", "sha256": "85bcecf686298e045d3969f1241396e35f92496453ef33ce5ca5a1b25024fa2a"}, "downloads": -1, "filename": "z3c.etestbrowser-1.3.1.tar.gz", "has_sig": false, "md5_digest": "9714cab28546be1b9a4a253b1e5185e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7504, "upload_time": "2010-01-18T20:53:34", "upload_time_iso_8601": "2010-01-18T20:53:34.491817Z", "url": "https://files.pythonhosted.org/packages/a1/74/e5b7c9a4785e34d9207ade4334cfbf6c243e025643634be85df359489d60/z3c.etestbrowser-1.3.1.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "fcc2bcfc43c36941d6575964fbf66041", "sha256": "f6294f596b2f43a04627657e9322704f2fc2fcfbf0c5d8fb8f3d97803d6e3a1b"}, "downloads": -1, "filename": "z3c.etestbrowser-1.4.0.tar.gz", "has_sig": true, "md5_digest": "fcc2bcfc43c36941d6575964fbf66041", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12167, "upload_time": "2010-07-08T18:30:44", "upload_time_iso_8601": "2010-07-08T18:30:44.401023Z", "url": "https://files.pythonhosted.org/packages/5c/9d/db82d30497adda793f65e95e2dc9ca6f1ff3a8be90e23d36a8c7ea1a879a/z3c.etestbrowser-1.4.0.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "ec40671ca43e8a91be281055133e75a4", "sha256": "997f5ecbe98c9c2cba7129013fcb19185c2dd8aa8042db5db8f3ece792e07ea7"}, "downloads": -1, "filename": "z3c.etestbrowser-1.5.0.tar.gz", "has_sig": false, "md5_digest": "ec40671ca43e8a91be281055133e75a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11556, "upload_time": "2010-08-22T14:17:54", "upload_time_iso_8601": "2010-08-22T14:17:54.694204Z", "url": "https://files.pythonhosted.org/packages/99/67/9bf518c60bc6078760843124021c082bcc383610d7a418f05d4adedff86f/z3c.etestbrowser-1.5.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "5277dd7e2111143b25cbe7aac69fe9da", "sha256": "ad603ef7a8e7380b3365d70f08493994fb12ea75c794f61b585b9f79f54e053d"}, "downloads": -1, "filename": "z3c.etestbrowser-2.0.0.tar.gz", "has_sig": false, "md5_digest": "5277dd7e2111143b25cbe7aac69fe9da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13984, "upload_time": "2011-10-13T11:37:54", "upload_time_iso_8601": "2011-10-13T11:37:54.805914Z", "url": "https://files.pythonhosted.org/packages/25/66/48e70b1516ba0b919aeefca93db22443ae5ca6f9a29dbc3e681191d1118c/z3c.etestbrowser-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "a74da105c6600de417d4d8489007d135", "sha256": "71ef48312ec0c3237dad24297e2bc0b332b61187496da7442ff4eecf9565e60d"}, "downloads": -1, "filename": "z3c.etestbrowser-2.0.1.tar.gz", "has_sig": false, "md5_digest": "a74da105c6600de417d4d8489007d135", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13534, "upload_time": "2015-11-09T14:09:33", "upload_time_iso_8601": "2015-11-09T14:09:33.289614Z", "url": "https://files.pythonhosted.org/packages/2c/42/5ead3d40c40f45b9b9d31f661a7ffdd194d5e981ad8d586cfede4947bd52/z3c.etestbrowser-2.0.1.tar.gz", "yanked": false}], "3.0": [{"comment_text": "", "digests": {"md5": "5e95c208446994a1e17969d5f7d921fa", "sha256": "6588eb2bc2f8151a01ef3be5aade2d60f83e7f24f3df076c3fa2fa133194ee37"}, "downloads": -1, "filename": "z3c.etestbrowser-3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5e95c208446994a1e17969d5f7d921fa", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18162, "upload_time": "2019-03-04T16:16:35", "upload_time_iso_8601": "2019-03-04T16:16:35.538989Z", "url": "https://files.pythonhosted.org/packages/1b/44/8fb113c281cca702a698a58263340217843501189fb783b3c0115d17d9de/z3c.etestbrowser-3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d5329c0403e2dd6146157f9d051d96c9", "sha256": "b6c25d360fc811ded0b8796200d7caeebbfb9e571bc442ec567bbb7bd3806672"}, "downloads": -1, "filename": "z3c.etestbrowser-3.0.tar.gz", "has_sig": false, "md5_digest": "d5329c0403e2dd6146157f9d051d96c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12889, "upload_time": "2019-03-04T16:16:37", "upload_time_iso_8601": "2019-03-04T16:16:37.409323Z", "url": "https://files.pythonhosted.org/packages/10/e0/33ba6653e486d70046f3e74251ddcf2a54f490084a1838e2871a5f790a83/z3c.etestbrowser-3.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "bc21ef66d04f9bcad2ca85bfd47100a6", "sha256": "b5593fd986b85ee9ed351450eeaa622b05b157d5bb0d2c9f32be9fcf5491cf2b"}, "downloads": -1, "filename": "z3c.etestbrowser-3.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bc21ef66d04f9bcad2ca85bfd47100a6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18229, "upload_time": "2019-03-05T08:35:38", "upload_time_iso_8601": "2019-03-05T08:35:38.710374Z", "url": "https://files.pythonhosted.org/packages/32/62/93345e791f3af87f52956ece0fdca4765ba83ddba2a4686d22fb38d14aff/z3c.etestbrowser-3.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a19c6afe588de4cff790fbfca5ed54ca", "sha256": "62388d8cac494ca69b6ffc46dfe2b3d5c8053c00b6c594ae34da954077414690"}, "downloads": -1, "filename": "z3c.etestbrowser-3.0.1.tar.gz", "has_sig": false, "md5_digest": "a19c6afe588de4cff790fbfca5ed54ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15087, "upload_time": "2019-03-05T08:35:40", "upload_time_iso_8601": "2019-03-05T08:35:40.887820Z", "url": "https://files.pythonhosted.org/packages/5b/34/1ad092998f164fa53cd06cda0849914a1ac69601f1f241c36c9ba8236916/z3c.etestbrowser-3.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bc21ef66d04f9bcad2ca85bfd47100a6", "sha256": "b5593fd986b85ee9ed351450eeaa622b05b157d5bb0d2c9f32be9fcf5491cf2b"}, "downloads": -1, "filename": "z3c.etestbrowser-3.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bc21ef66d04f9bcad2ca85bfd47100a6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18229, "upload_time": "2019-03-05T08:35:38", "upload_time_iso_8601": "2019-03-05T08:35:38.710374Z", "url": "https://files.pythonhosted.org/packages/32/62/93345e791f3af87f52956ece0fdca4765ba83ddba2a4686d22fb38d14aff/z3c.etestbrowser-3.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a19c6afe588de4cff790fbfca5ed54ca", "sha256": "62388d8cac494ca69b6ffc46dfe2b3d5c8053c00b6c594ae34da954077414690"}, "downloads": -1, "filename": "z3c.etestbrowser-3.0.1.tar.gz", "has_sig": false, "md5_digest": "a19c6afe588de4cff790fbfca5ed54ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15087, "upload_time": "2019-03-05T08:35:40", "upload_time_iso_8601": "2019-03-05T08:35:40.887820Z", "url": "https://files.pythonhosted.org/packages/5b/34/1ad092998f164fa53cd06cda0849914a1ac69601f1f241c36c9ba8236916/z3c.etestbrowser-3.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:21:04 2020"}