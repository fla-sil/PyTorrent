{"info": {"author": "Patrick Altman", "author_email": "paltman@eldarion.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "==========\nprivileges\n==========\n\n``privileges`` makes segmenting authenticated users easy and extensible.\n\nUnlike Django permissions, ``privileges`` is not tied to operations on \nindividual models. It operates at a higher level of abstraction and is instead\nconcerned more with providing the site developer complete freedom in determining\nwho can do what. There certainly is some overlap with the built in permissions\nsystem, and while you could use ``privileges`` to replace it, at least large\nparts of it, that is not the aim of this app.\n\nInstead, think of ``privileges`` allowing the site developer to control\naccess to certain features. Operating at the template and view layers the site\ndeveloper can paint as broad or as fine of strokes to suit their needs.\n\nIt is extensible in the sense that the site developer can define and register\ntheir own privilege validation handlers. In fact they must define at least one\nhandler. There is a template tag for checking privileges in templates and a\ndecorator for checking privileges when a view is called.\n\nThere is a model that stores the named privileges which are nothing more than\nnamed slugs. The records carry no special meeting to ``privileges`` in isolation\nbut depend on the site developer to impart meaning through reference in his\nsite.\n\n\nSponsorship\n-----------\n\ndevelopment sponsored by `Midwest Communications`_\n\n\n.. _`Midwest Communications`: http://mwcradio.com/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/eldarion/privileges", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "privileges", "package_url": "https://pypi.org/project/privileges/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/privileges/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/eldarion/privileges"}, "release_url": "https://pypi.org/project/privileges/0.1/", "requires_dist": null, "requires_python": null, "summary": "a privileges app for Django", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>privileges</tt> makes segmenting authenticated users easy and extensible.</p>\n<p>Unlike Django permissions, <tt>privileges</tt> is not tied to operations on\nindividual models. It operates at a higher level of abstraction and is instead\nconcerned more with providing the site developer complete freedom in determining\nwho can do what. There certainly is some overlap with the built in permissions\nsystem, and while you could use <tt>privileges</tt> to replace it, at least large\nparts of it, that is not the aim of this app.</p>\n<p>Instead, think of <tt>privileges</tt> allowing the site developer to control\naccess to certain features. Operating at the template and view layers the site\ndeveloper can paint as broad or as fine of strokes to suit their needs.</p>\n<p>It is extensible in the sense that the site developer can define and register\ntheir own privilege validation handlers. In fact they must define at least one\nhandler. There is a template tag for checking privileges in templates and a\ndecorator for checking privileges when a view is called.</p>\n<p>There is a model that stores the named privileges which are nothing more than\nnamed slugs. The records carry no special meeting to <tt>privileges</tt> in isolation\nbut depend on the site developer to impart meaning through reference in his\nsite.</p>\n<div id=\"sponsorship\">\n<h2>Sponsorship</h2>\n<p>development sponsored by <a href=\"http://mwcradio.com/\" rel=\"nofollow\">Midwest Communications</a></p>\n</div>\n\n          </div>"}, "last_serial": 796703, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "ffa835799870c8b7e3d56258402164ff", "sha256": "ea18cfefb617e0cebc83c9500b1c43d239e03d98e9e70e023d068d51b5857da8"}, "downloads": -1, "filename": "privileges-0.1.tar.gz", "has_sig": false, "md5_digest": "ffa835799870c8b7e3d56258402164ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9895, "upload_time": "2012-07-17T20:15:54", "upload_time_iso_8601": "2012-07-17T20:15:54.177283Z", "url": "https://files.pythonhosted.org/packages/1c/76/0adaf30f08c61fabcbb8807e9c807ae2980bf861b6cc8b429ebc8156e6ab/privileges-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ffa835799870c8b7e3d56258402164ff", "sha256": "ea18cfefb617e0cebc83c9500b1c43d239e03d98e9e70e023d068d51b5857da8"}, "downloads": -1, "filename": "privileges-0.1.tar.gz", "has_sig": false, "md5_digest": "ffa835799870c8b7e3d56258402164ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9895, "upload_time": "2012-07-17T20:15:54", "upload_time_iso_8601": "2012-07-17T20:15:54.177283Z", "url": "https://files.pythonhosted.org/packages/1c/76/0adaf30f08c61fabcbb8807e9c807ae2980bf861b6cc8b429ebc8156e6ab/privileges-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:19:07 2020"}