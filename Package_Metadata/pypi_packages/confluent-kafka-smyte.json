{"info": {"author": "Confluent Inc", "author_email": "support@confluent.io", "bugtrack_url": null, "classifiers": [], "description": "Smyte fork\n==========\n\nWe created a fork to get timestamps working. This will be removed as soon as our\n[pull request](https://github.com/confluentinc/confluent-kafka-python/pull/50)\nhas been merged into the mainline\n\nConfluent's Apache Kafka client for Python\n==========================================\n\nConfluent's Kafka client for Python wraps the librdkafka C library, providing\nfull Kafka protocol support with great performance and reliability.\n\nThe Python bindings provides a high-level Producer and Consumer with support\nfor the balanced consumer groups of Apache Kafka 0.9.\n\nSee the [API documentation](http://docs.confluent.io/current/clients/confluent-kafka-python/index.html) for more info.\n\n**License**: [Apache License v2.0](http://www.apache.org/licenses/LICENSE-2.0)\n\n\nUsage\n=====\n\n**Producer:**\n\n```python\nfrom confluent_kafka_smyte import Producer\n\np = Producer({'bootstrap.servers': 'mybroker,mybroker2'})\nfor data in some_data_source:\n    p.produce('mytopic', data.encode('utf-8'))\np.flush()\n```\n\n\n**High-level Consumer:**\n\n```python\nfrom confluent_kafka_smyte import Consumer, KafkaError\n\nc = Consumer({'bootstrap.servers': 'mybroker', 'group.id': 'mygroup',\n              'default.topic.config': {'auto.offset.reset': 'smallest'}})\nc.subscribe(['mytopic'])\nrunning = True\nwhile running:\n    msg = c.poll()\n    if not msg.error():\n        print('Received message: %s' % msg.value().decode('utf-8'))\n    elif msg.error().code() != KafkaError._PARTITION_EOF:\n        print(msg.error())\n        running = False\nc.close()\n```\n\nSee [examples](examples) for more examples.\n\n\nBroker compatibility\n====================\nThe Python client (as well as the underlying C library librdkafka) supports\nall broker versions &gt;= 0.8.\nBut due to the nature of the Kafka protocol in broker versions 0.8 and 0.9 it\nis not safe for a client to assume what protocol version is actually supported\nby the broker, thus you will need to hint the Python client what protocol\nversion it may use. This is done through two configuration settings:\n\n * `broker.version.fallback=YOUR_BROKER_VERSION` (default 0.9.0.1)\n * `api.version.request=true|false` (default false)\n\nWhen using a Kafka 0.10 broker or later you only need to set\n`api.version.request=true`.\nIf you use Kafka broker 0.9 or 0.8 you should leave\n`api.version.request=false` (default) and set\n`broker.version.fallback` to your broker version,\ne.g `broker.version.fallback=0.9.0.1`.\n\nMore info here:\nhttps://github.com/edenhill/librdkafka/wiki/Broker-version-compatibility\n\n\nPrerequisites\n=============\n\n * Python >= 2.7 or Python 3.x\n * [librdkafka](https://github.com/edenhill/librdkafka) >= 0.9.1\n\n\nInstall\n=======\n\n**Install from PyPi:**\n\n    $ pip install confluent-kafka\n\n\n**Install from source / tarball:**\n\n    $ pip install .\n\n\nBuild\n=====\n\n    $ python setup.py build\n\nIf librdkafka is installed in a non-standard location provide the include and library directories with:\n\n    $ C_INCLUDE_PATH=/path/to/include LIBRARY_PATH=/path/to/lib python setup.py ...\n\n\nTests\n=====\n\n\n**Run unit-tests:**\n\n    $ py.test\n\n**NOTE**: Requires `py.test`, install by `pip install pytest`\n\n\n**Run integration tests:**\n\n    $ examples/integration_test.py <kafka-broker>\n\n**WARNING**: These tests require an active Kafka cluster and will make use of a topic named 'test'.\n\n\n\n\nGenerate documentation\n======================\nInstall sphinx and sphinx_rtd_theme packages and then:\n\n    $ make docs\n\nor:\n\n    $ python setup.py build_sphinx\n\nDocumentation will be generated in `docs/_build/`.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/smyte-forks/confluent-kafka-python", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "confluent-kafka-smyte", "package_url": "https://pypi.org/project/confluent-kafka-smyte/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/confluent-kafka-smyte/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/smyte-forks/confluent-kafka-python"}, "release_url": "https://pypi.org/project/confluent-kafka-smyte/0.9.3/", "requires_dist": null, "requires_python": null, "summary": "Smyte fork of Confluent's Apache Kafka client for Python", "version": "0.9.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            Smyte fork<br>==========<br><br>We created a fork to get timestamps working. This will be removed as soon as our<br>[pull request](https://github.com/confluentinc/confluent-kafka-python/pull/50)<br>has been merged into the mainline<br><br>Confluent's Apache Kafka client for Python<br>==========================================<br><br>Confluent's Kafka client for Python wraps the librdkafka C library, providing<br>full Kafka protocol support with great performance and reliability.<br><br>The Python bindings provides a high-level Producer and Consumer with support<br>for the balanced consumer groups of Apache Kafka 0.9.<br><br>See the [API documentation](http://docs.confluent.io/current/clients/confluent-kafka-python/index.html) for more info.<br><br>**License**: [Apache License v2.0](http://www.apache.org/licenses/LICENSE-2.0)<br><br><br>Usage<br>=====<br><br>**Producer:**<br><br>```python<br>from confluent_kafka_smyte import Producer<br><br>p = Producer({'bootstrap.servers': 'mybroker,mybroker2'})<br>for data in some_data_source:<br>    p.produce('mytopic', data.encode('utf-8'))<br>p.flush()<br>```<br><br><br>**High-level Consumer:**<br><br>```python<br>from confluent_kafka_smyte import Consumer, KafkaError<br><br>c = Consumer({'bootstrap.servers': 'mybroker', 'group.id': 'mygroup',<br>              'default.topic.config': {'auto.offset.reset': 'smallest'}})<br>c.subscribe(['mytopic'])<br>running = True<br>while running:<br>    msg = c.poll()<br>    if not msg.error():<br>        print('Received message: %s' % msg.value().decode('utf-8'))<br>    elif msg.error().code() != KafkaError._PARTITION_EOF:<br>        print(msg.error())<br>        running = False<br>c.close()<br>```<br><br>See [examples](examples) for more examples.<br><br><br>Broker compatibility<br>====================<br>The Python client (as well as the underlying C library librdkafka) supports<br>all broker versions &amp;gt;= 0.8.<br>But due to the nature of the Kafka protocol in broker versions 0.8 and 0.9 it<br>is not safe for a client to assume what protocol version is actually supported<br>by the broker, thus you will need to hint the Python client what protocol<br>version it may use. This is done through two configuration settings:<br><br> * `broker.version.fallback=YOUR_BROKER_VERSION` (default 0.9.0.1)<br> * `api.version.request=true|false` (default false)<br><br>When using a Kafka 0.10 broker or later you only need to set<br>`api.version.request=true`.<br>If you use Kafka broker 0.9 or 0.8 you should leave<br>`api.version.request=false` (default) and set<br>`broker.version.fallback` to your broker version,<br>e.g `broker.version.fallback=0.9.0.1`.<br><br>More info here:<br>https://github.com/edenhill/librdkafka/wiki/Broker-version-compatibility<br><br><br>Prerequisites<br>=============<br><br> * Python &gt;= 2.7 or Python 3.x<br> * [librdkafka](https://github.com/edenhill/librdkafka) &gt;= 0.9.1<br><br><br>Install<br>=======<br><br>**Install from PyPi:**<br><br>    $ pip install confluent-kafka<br><br><br>**Install from source / tarball:**<br><br>    $ pip install .<br><br><br>Build<br>=====<br><br>    $ python setup.py build<br><br>If librdkafka is installed in a non-standard location provide the include and library directories with:<br><br>    $ C_INCLUDE_PATH=/path/to/include LIBRARY_PATH=/path/to/lib python setup.py ...<br><br><br>Tests<br>=====<br><br><br>**Run unit-tests:**<br><br>    $ py.test<br><br>**NOTE**: Requires `py.test`, install by `pip install pytest`<br><br><br>**Run integration tests:**<br><br>    $ examples/integration_test.py &lt;kafka-broker&gt;<br><br>**WARNING**: These tests require an active Kafka cluster and will make use of a topic named 'test'.<br><br><br><br><br>Generate documentation<br>======================<br>Install sphinx and sphinx_rtd_theme packages and then:<br><br>    $ make docs<br><br>or:<br><br>    $ python setup.py build_sphinx<br><br>Documentation will be generated in `docs/_build/`.<br>\n          </div>"}, "last_serial": 2448220, "releases": {"0.9.3": [{"comment_text": "", "digests": {"md5": "743412f0b88ffd84e249a00e402f2fcd", "sha256": "d9f11a61faa3638d996b0c0e99840ea7bb77fb64fb8cd828f88738e8d2911ed7"}, "downloads": -1, "filename": "confluent-kafka-smyte-0.9.3.tar.gz", "has_sig": false, "md5_digest": "743412f0b88ffd84e249a00e402f2fcd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27209, "upload_time": "2016-11-08T01:48:47", "upload_time_iso_8601": "2016-11-08T01:48:47.481899Z", "url": "https://files.pythonhosted.org/packages/c9/07/54c79fa7dd420cb5f67936623056f1d238e5718f38e393c8d02bcb8cf9a4/confluent-kafka-smyte-0.9.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "743412f0b88ffd84e249a00e402f2fcd", "sha256": "d9f11a61faa3638d996b0c0e99840ea7bb77fb64fb8cd828f88738e8d2911ed7"}, "downloads": -1, "filename": "confluent-kafka-smyte-0.9.3.tar.gz", "has_sig": false, "md5_digest": "743412f0b88ffd84e249a00e402f2fcd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27209, "upload_time": "2016-11-08T01:48:47", "upload_time_iso_8601": "2016-11-08T01:48:47.481899Z", "url": "https://files.pythonhosted.org/packages/c9/07/54c79fa7dd420cb5f67936623056f1d238e5718f38e393c8d02bcb8cf9a4/confluent-kafka-smyte-0.9.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:49 2020"}