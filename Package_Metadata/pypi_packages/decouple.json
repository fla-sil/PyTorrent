{"info": {"author": "Andrey Avdeev", "author_email": "seorazer@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Decouple\n## Say NO to monolithic architecture.\nDecouple complex system to separated modules by mediator.\n\n```shell script\npip install decouple\n```\n\n## Register event handler\n![register event handler](https://raw.githubusercontent.com/andrey-avdeev/decouple/master/docs/img/01_register.png)\n\n## Dispatch events\n![dispatch events](https://raw.githubusercontent.com/andrey-avdeev/decouple/master/docs/img/02_handle.png)\n\n## Example\n### Simple usage\nCode of example is [here](https://github.com/andrey-avdeev/decouple/tree/master/examples/simple)\n\n1. Write ModuleA - publisher\n```python\nfrom dataclasses import dataclass\n\nfrom decouple import Module, Event, Mediator\n\n\nclass ModuleA(Module):\n    def __init__(self, mediator: Mediator = Mediator()):\n        super().__init__(mediator)\n\n    def start(self):\n        self.pub(StartEvent(a=7))\n\n\n@dataclass\nclass StartEvent(Event):\n    a: int = 0  # must be serializable\n```\n\n2. Write ModuleB - subscriber\n```python\nfrom decouple import Module\nfrom examples.simple.module_a import StartEvent\n\n\nclass ModuleB(Module):\n    def __init__(self):\n        super().__init__()\n\n        self.sub(StartEvent, self.handle_a)\n\n    def handle_start(self, event: StartEvent):\n        print(f'field a:{event.a}')\n\n```\n\n3. Compose both modules to the whole\n```python\nfrom examples.simple.module_a import ModuleA\nfrom examples.simple.module_b import ModuleB\n\n\nmodule_a = ModuleA()\nmodule_a.add(ModuleB())\n\nmodule_a.start()\n```\n\n### Priorities\nManual control\n```python\nfrom decouple import Module\nfrom examples.simple.module_a import StartEvent\n\n\nclass ModuleB(Module):\n    def __init__(self):\n        super().__init__()\n\n        # handler with higher priority will be triggered early\n        self.sub(StartEvent, self.handle_b, priority=0)\n        self.sub(StartEvent, self.handle_a, priority=100)\n\n    def handle_a(self, event: StartEvent):\n        # will be triggered first\n        print(f'field a:{event.a}')\n\n    def handle_b(self, event: StartEvent):\n        # will be triggered second\n        print(f'event.uuid:{event.uuid}, event.timestamp:{event.timestamp}')\n```\nDefault priority depends on registration order\n```python\nfrom decouple import Module\nfrom examples.simple.module_a import StartEvent\n\n\nclass ModuleB(Module):\n    def __init__(self):\n        super().__init__()\n\n        # priority of handlers call increased by 1 every registration for the same event\n        self.sub(StartEvent, self.handle_b)   # priority=1\n        self.sub(StartEvent, self.handle_a)   # priority=2\n\n    def handle_a(self, event: StartEvent):\n        # will be triggered second\n        print(f'field a:{event.a}')\n\n    def handle_b(self, event: StartEvent):\n        # will be triggered first\n        print(f'event.uuid:{event.uuid}, event.timestamp:{event.timestamp}')\n```\n\n# Feedback\nI will be glad to read your feedback in issues and pull requests.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/andrey-avdeev/decouple", "keywords": "decouple mediator decoupling", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "decouple", "package_url": "https://pypi.org/project/decouple/", "platform": "", "project_url": "https://pypi.org/project/decouple/", "project_urls": {"Homepage": "https://github.com/andrey-avdeev/decouple"}, "release_url": "https://pypi.org/project/decouple/0.0.7/", "requires_dist": null, "requires_python": ">=3.7", "summary": "Decoupling logic", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Decouple</h1>\n<h2>Say NO to monolithic architecture.</h2>\n<p>Decouple complex system to separated modules by mediator.</p>\n<pre>pip install decouple\n</pre>\n<h2>Register event handler</h2>\n<p><img alt=\"register event handler\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49672ba73ec606ff1b3ca45804325e9f857de691/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f616e647265792d6176646565762f6465636f75706c652f6d61737465722f646f63732f696d672f30315f72656769737465722e706e67\"></p>\n<h2>Dispatch events</h2>\n<p><img alt=\"dispatch events\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/90be56f0de71f0dfacf6acf8e7b9cbf48ec3ede5/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f616e647265792d6176646565762f6465636f75706c652f6d61737465722f646f63732f696d672f30325f68616e646c652e706e67\"></p>\n<h2>Example</h2>\n<h3>Simple usage</h3>\n<p>Code of example is <a href=\"https://github.com/andrey-avdeev/decouple/tree/master/examples/simple\" rel=\"nofollow\">here</a></p>\n<ol>\n<li>Write ModuleA - publisher</li>\n</ol>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dataclasses</span> <span class=\"kn\">import</span> <span class=\"n\">dataclass</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">decouple</span> <span class=\"kn\">import</span> <span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Event</span><span class=\"p\">,</span> <span class=\"n\">Mediator</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ModuleA</span><span class=\"p\">(</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">mediator</span><span class=\"p\">:</span> <span class=\"n\">Mediator</span> <span class=\"o\">=</span> <span class=\"n\">Mediator</span><span class=\"p\">()):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">mediator</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">start</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pub</span><span class=\"p\">(</span><span class=\"n\">StartEvent</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">))</span>\n\n\n<span class=\"nd\">@dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">StartEvent</span><span class=\"p\">(</span><span class=\"n\">Event</span><span class=\"p\">):</span>\n    <span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>  <span class=\"c1\"># must be serializable</span>\n</pre>\n<ol>\n<li>Write ModuleB - subscriber</li>\n</ol>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">decouple</span> <span class=\"kn\">import</span> <span class=\"n\">Module</span>\n<span class=\"kn\">from</span> <span class=\"nn\">examples.simple.module_a</span> <span class=\"kn\">import</span> <span class=\"n\">StartEvent</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ModuleB</span><span class=\"p\">(</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"n\">StartEvent</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">handle_a</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">handle_start</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">StartEvent</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'field a:</span><span class=\"si\">{</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">a</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre>\n<ol>\n<li>Compose both modules to the whole</li>\n</ol>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">examples.simple.module_a</span> <span class=\"kn\">import</span> <span class=\"n\">ModuleA</span>\n<span class=\"kn\">from</span> <span class=\"nn\">examples.simple.module_b</span> <span class=\"kn\">import</span> <span class=\"n\">ModuleB</span>\n\n\n<span class=\"n\">module_a</span> <span class=\"o\">=</span> <span class=\"n\">ModuleA</span><span class=\"p\">()</span>\n<span class=\"n\">module_a</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">ModuleB</span><span class=\"p\">())</span>\n\n<span class=\"n\">module_a</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n</pre>\n<h3>Priorities</h3>\n<p>Manual control</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">decouple</span> <span class=\"kn\">import</span> <span class=\"n\">Module</span>\n<span class=\"kn\">from</span> <span class=\"nn\">examples.simple.module_a</span> <span class=\"kn\">import</span> <span class=\"n\">StartEvent</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ModuleB</span><span class=\"p\">(</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># handler with higher priority will be triggered early</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"n\">StartEvent</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">handle_b</span><span class=\"p\">,</span> <span class=\"n\">priority</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"n\">StartEvent</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">handle_a</span><span class=\"p\">,</span> <span class=\"n\">priority</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">handle_a</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">StartEvent</span><span class=\"p\">):</span>\n        <span class=\"c1\"># will be triggered first</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'field a:</span><span class=\"si\">{</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">a</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">handle_b</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">StartEvent</span><span class=\"p\">):</span>\n        <span class=\"c1\"># will be triggered second</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'event.uuid:</span><span class=\"si\">{</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">uuid</span><span class=\"si\">}</span><span class=\"s1\">, event.timestamp:</span><span class=\"si\">{</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">timestamp</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre>\n<p>Default priority depends on registration order</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">decouple</span> <span class=\"kn\">import</span> <span class=\"n\">Module</span>\n<span class=\"kn\">from</span> <span class=\"nn\">examples.simple.module_a</span> <span class=\"kn\">import</span> <span class=\"n\">StartEvent</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ModuleB</span><span class=\"p\">(</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># priority of handlers call increased by 1 every registration for the same event</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"n\">StartEvent</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">handle_b</span><span class=\"p\">)</span>   <span class=\"c1\"># priority=1</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"n\">StartEvent</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">handle_a</span><span class=\"p\">)</span>   <span class=\"c1\"># priority=2</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">handle_a</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">StartEvent</span><span class=\"p\">):</span>\n        <span class=\"c1\"># will be triggered second</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'field a:</span><span class=\"si\">{</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">a</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">handle_b</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"n\">StartEvent</span><span class=\"p\">):</span>\n        <span class=\"c1\"># will be triggered first</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'event.uuid:</span><span class=\"si\">{</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">uuid</span><span class=\"si\">}</span><span class=\"s1\">, event.timestamp:</span><span class=\"si\">{</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">timestamp</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre>\n<h1>Feedback</h1>\n<p>I will be glad to read your feedback in issues and pull requests.</p>\n\n          </div>"}, "last_serial": 6375673, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "a4680ac6e32664e343b8f22079d201d3", "sha256": "d372ff2bfab8ffa8f19bd607ab004003d7a5ba1bda801402714f3b35e6e5a58e"}, "downloads": -1, "filename": "decouple-0.0.3.tar.gz", "has_sig": false, "md5_digest": "a4680ac6e32664e343b8f22079d201d3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 2339, "upload_time": "2019-12-22T16:35:11", "upload_time_iso_8601": "2019-12-22T16:35:11.166138Z", "url": "https://files.pythonhosted.org/packages/74/de/ff52f72a2a14319394763d96dbdb442ddfaa9c93dce1f9cf8755b6cb1e3d/decouple-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "e5103baab3888c9112a3378b04962848", "sha256": "bace717ac61eb828a7d1a71bed0c34be7a27e81ee45c607bb05386a3c82b1f71"}, "downloads": -1, "filename": "decouple-0.0.4.tar.gz", "has_sig": false, "md5_digest": "e5103baab3888c9112a3378b04962848", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3316, "upload_time": "2019-12-22T20:46:21", "upload_time_iso_8601": "2019-12-22T20:46:21.850274Z", "url": "https://files.pythonhosted.org/packages/98/92/bbbdf225f21d2135d95468997eaca140370e3d3a87e66733d00b8a5c725f/decouple-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "08b7ae1c8ccbb0b17865b7a1d9156379", "sha256": "c1617d8db36cc434ed3b3514e05098275390cfe206753cebf5c6339e62c0ef79"}, "downloads": -1, "filename": "decouple-0.0.5.tar.gz", "has_sig": false, "md5_digest": "08b7ae1c8ccbb0b17865b7a1d9156379", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3294, "upload_time": "2019-12-22T20:52:41", "upload_time_iso_8601": "2019-12-22T20:52:41.663210Z", "url": "https://files.pythonhosted.org/packages/97/26/0c6e355ed186c8fc71eab0a0b20b55e99150e08a9c40883950f56f56b5a3/decouple-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "08ead25cc35afbfc8fd67e1fa0c6852e", "sha256": "4d5246f34cfc2510868d3d4aa2a763a1cd20ece99c96c0ac191d2db2e7d795a3"}, "downloads": -1, "filename": "decouple-0.0.6.tar.gz", "has_sig": false, "md5_digest": "08ead25cc35afbfc8fd67e1fa0c6852e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3316, "upload_time": "2019-12-22T21:00:11", "upload_time_iso_8601": "2019-12-22T21:00:11.392840Z", "url": "https://files.pythonhosted.org/packages/74/70/5957373e2dd892c8202b700762e2a58bd92bdd53042c87060dd6c9290a2f/decouple-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "4ffeaebb883be335262292aece329c04", "sha256": "c253c1cc62b76e9720a066f334552548c6de1884bc3bdf456ddb62d61b867b09"}, "downloads": -1, "filename": "decouple-0.0.7.tar.gz", "has_sig": false, "md5_digest": "4ffeaebb883be335262292aece329c04", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3324, "upload_time": "2019-12-25T15:01:39", "upload_time_iso_8601": "2019-12-25T15:01:39.824240Z", "url": "https://files.pythonhosted.org/packages/6c/e3/f70681dd89a96a701f22055caedc79cf88cebdeac9df827a5720bca80278/decouple-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4ffeaebb883be335262292aece329c04", "sha256": "c253c1cc62b76e9720a066f334552548c6de1884bc3bdf456ddb62d61b867b09"}, "downloads": -1, "filename": "decouple-0.0.7.tar.gz", "has_sig": false, "md5_digest": "4ffeaebb883be335262292aece329c04", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3324, "upload_time": "2019-12-25T15:01:39", "upload_time_iso_8601": "2019-12-25T15:01:39.824240Z", "url": "https://files.pythonhosted.org/packages/6c/e3/f70681dd89a96a701f22055caedc79cf88cebdeac9df827a5720bca80278/decouple-0.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:33 2020"}