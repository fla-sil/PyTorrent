{"info": {"author": "Martin Skarzynski", "author_email": "marskar@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# The `scattr` Python package\n\nThe `scattr` package has one function, `scattr`,\nthat provides an easy way to\n**S**et **C**lass **ATTR**ibutes of classes derived\nfrom pre-existing Python classes.\n\nThe `scattr` function takes \n- a class object and\n- the name of a helper script\nand returns a subclass called `SubClassAttributes`\nthat contains the methods defined in the helper script.\n\nEssentially, this is an easy way to\nadd user-defined functions to classes.\n\nClass variables, method and classes can be added dynamically:\n```python\nimport pandas as pd\nimport math\n# add pi to a pandas DataFrame\npd.DataFrame.pi = math.pi\n```\n\nThe `scattr` package provides a cleaner way to \nadd new attributes, because it creates a new subclass and\nuses method and class defined in a separate helper script. \n\nThe `scattr` function only adds\ncallable objects(methods and classes), not variables.\n\n## Pandas DataFrame example\n```python\nimport pandas as pd\nfrom scattr import scattr\n\n# create a new class that inherits from pd.DataFrame\n# and includes methods defined in a 'helper.py' file\nScattrFrame = scattr(cls=pd.DataFrame, src='helper')\n\n# instantiate the new class\ndf = ScattrFrame(data=pd.read_csv('risk_factors_cervical_cancer.csv'))\n\n# test methods added from helper file\ndf.say_hi()\n\n# test CowClass added from helper file\ndf.CowClass.say_moo()\n\n# test method from parent class\ndf.head(n=1)\n\n# confirm that df is an instance of pd.DataFrame and PydyFrame\nisinstance(df, (pd.DataFrame, ScattrFrame))\n\n# confirm that ScattrFrame is a subclass of pd.DataFrame\nissubclass(ScattrFrame, pd.DataFrame)\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/marskar/scattr", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "scattr", "package_url": "https://pypi.org/project/scattr/", "platform": "", "project_url": "https://pypi.org/project/scattr/", "project_urls": {"Homepage": "https://github.com/marskar/scattr"}, "release_url": "https://pypi.org/project/scattr/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Add user-defined methods to Python classes.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>The <code>scattr</code> Python package</h1>\n<p>The <code>scattr</code> package has one function, <code>scattr</code>,\nthat provides an easy way to\n<strong>S</strong>et <strong>C</strong>lass <strong>ATTR</strong>ibutes of classes derived\nfrom pre-existing Python classes.</p>\n<p>The <code>scattr</code> function takes</p>\n<ul>\n<li>a class object and</li>\n<li>the name of a helper script\nand returns a subclass called <code>SubClassAttributes</code>\nthat contains the methods defined in the helper script.</li>\n</ul>\n<p>Essentially, this is an easy way to\nadd user-defined functions to classes.</p>\n<p>Class variables, method and classes can be added dynamically:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"c1\"># add pi to a pandas DataFrame</span>\n<span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">=</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span>\n</pre>\n<p>The <code>scattr</code> package provides a cleaner way to\nadd new attributes, because it creates a new subclass and\nuses method and class defined in a separate helper script.</p>\n<p>The <code>scattr</code> function only adds\ncallable objects(methods and classes), not variables.</p>\n<h2>Pandas DataFrame example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">from</span> <span class=\"nn\">scattr</span> <span class=\"kn\">import</span> <span class=\"n\">scattr</span>\n\n<span class=\"c1\"># create a new class that inherits from pd.DataFrame</span>\n<span class=\"c1\"># and includes methods defined in a 'helper.py' file</span>\n<span class=\"n\">ScattrFrame</span> <span class=\"o\">=</span> <span class=\"n\">scattr</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"o\">=</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">,</span> <span class=\"n\">src</span><span class=\"o\">=</span><span class=\"s1\">'helper'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># instantiate the new class</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">ScattrFrame</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s1\">'risk_factors_cervical_cancer.csv'</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># test methods added from helper file</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">say_hi</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># test CowClass added from helper file</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">CowClass</span><span class=\"o\">.</span><span class=\"n\">say_moo</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># test method from parent class</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># confirm that df is an instance of pd.DataFrame and PydyFrame</span>\n<span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">,</span> <span class=\"n\">ScattrFrame</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># confirm that ScattrFrame is a subclass of pd.DataFrame</span>\n<span class=\"nb\">issubclass</span><span class=\"p\">(</span><span class=\"n\">ScattrFrame</span><span class=\"p\">,</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 4325249, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a610ef63a448a73baa456ef4e12239b9", "sha256": "fdfbb75f73cb97af032aaa9bda8dac3f4f1c102194d757155fbcee7806530b01"}, "downloads": -1, "filename": "scattr-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a610ef63a448a73baa456ef4e12239b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2349, "upload_time": "2018-09-30T16:03:40", "upload_time_iso_8601": "2018-09-30T16:03:40.246794Z", "url": "https://files.pythonhosted.org/packages/38/8b/d36fc549f998ff9745ab3cbc247f575f826448d26cde4963bb73df655883/scattr-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dfce05d527dc10eef5aa56aa11d667fb", "sha256": "d920b3b56342a9abea603068844572f95c437943f0f5c4c991d7284540a6d6ae"}, "downloads": -1, "filename": "scattr-0.0.1.tar.gz", "has_sig": false, "md5_digest": "dfce05d527dc10eef5aa56aa11d667fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2065, "upload_time": "2018-09-30T16:03:41", "upload_time_iso_8601": "2018-09-30T16:03:41.624523Z", "url": "https://files.pythonhosted.org/packages/a8/28/a6c69e338098553d2566636687e968046c6a704700487ce885b84b32e395/scattr-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a610ef63a448a73baa456ef4e12239b9", "sha256": "fdfbb75f73cb97af032aaa9bda8dac3f4f1c102194d757155fbcee7806530b01"}, "downloads": -1, "filename": "scattr-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a610ef63a448a73baa456ef4e12239b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2349, "upload_time": "2018-09-30T16:03:40", "upload_time_iso_8601": "2018-09-30T16:03:40.246794Z", "url": "https://files.pythonhosted.org/packages/38/8b/d36fc549f998ff9745ab3cbc247f575f826448d26cde4963bb73df655883/scattr-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dfce05d527dc10eef5aa56aa11d667fb", "sha256": "d920b3b56342a9abea603068844572f95c437943f0f5c4c991d7284540a6d6ae"}, "downloads": -1, "filename": "scattr-0.0.1.tar.gz", "has_sig": false, "md5_digest": "dfce05d527dc10eef5aa56aa11d667fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2065, "upload_time": "2018-09-30T16:03:41", "upload_time_iso_8601": "2018-09-30T16:03:41.624523Z", "url": "https://files.pythonhosted.org/packages/a8/28/a6c69e338098553d2566636687e968046c6a704700487ce885b84b32e395/scattr-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:00 2020"}