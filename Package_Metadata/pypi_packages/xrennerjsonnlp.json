{"info": {"author": "Damir Cavar, Oren Baldinger, Maanvitha Gongalla, Anurag Kumar, Murali Kammili, Boli Fang", "author_email": "damir@cavar.me", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Xrenner to JSON-NLP\n\n(C) 2019 by [Damir Cavar], [Oren Baldinger], Maanvitha Gongalla, Anurag Kumar, Murali Kammili, Boli Fang\n\nBrought to you by the [NLP-Lab.org]!\n\n\n## Introduction\n\n[Xrenner] wrapper for [JSON-NLP]. [Xrenner] specializes in coreference and anaphora resolution, in a more highly annotated manner \nthan just a coreference chain.\n\n## Required Dependency Parse\n\nXrenner requires a [Dependency Parse](https://en.wikipedia.org/wiki/Dependency_grammar) in [CoNLL-U] format. \nThis can come from [CoreNLP], or another parser that provides universal dependencies in [CoNNL-U] format.\nThere are two ways to accomplish this:\n\n### CoreNLP Server\n\nThe `XrennerPipeline` class will take care of the details, however it requires an available [CoreNLP] server.\nThe easiest way to create one is with [Docker]:\n\n    docker pull nlpbox/corenlp\n    docker run -p 9000:9000 -ti nlpbox/corenlp\n\nTo test this, open a new tab,\n\n    wget -q --post-data \"Although they didn't like it, they accepted the offer.\"   'localhost:9000/?properties={\"annotators\":\"depparse\",\"outputFormat\":\"conll\"}' -O /dev/stdout\n\nYou then need to create a `.env` file in the root of the project, follow the example in `sample_env`.\nThe default entry that corresponds to the [Docker] command above is: \n\n    CORENLP_SERVER=http://localhost:9000\n\n### Provide your own CoNLL-U\n\nUse the `XrennerPipeline.process_conll` function, with your conll data passed as a string via\nthe `conll` argument.\n\nYou may find the `pyjsonnlp.conversion.to_conllu` function helpful for converting [JSON-NLP],\nmaybe from [spaCy], to [CoNLL-U].\n\n\n## Microservice\n\nThe [JSON-NLP] repository provides a Microservice class, with a pre-built implementation of [Flask]. To run it, execute:\n\n    python xrennerjsonnlp/server.py\n\nSince `server.py` extends the [Flask] app, a WSGI file would contain:\n\n    from xrennerjsonnlp.server import app as application\n\nText is provided to the microservice with the `text` parameter, via either `GET` or `POST`. If you pass `url` as a parameter, the microservice will scrape that url and process the text of the website.\n\nHere is an example `GET` call:\n\n    http://localhost:5000?text=John went to the store. He bought some milk.\n\nThe `process_conll` endpoint mentioned above is available at the `/process_conll`\nURI. Instead of passing `text`, pass `conll`. A POST operation will be easier than GET \nin this situation.\n\n\n\n[Damir Cavar]: http://damir.cavar.me/ \"Damir Cavar\"\n[Oren Baldinger]: https://oren.baldinger.me/ \"Oren Baldinger\"\n[NLP-Lab.org]: http://nlp-lab.org/ \"NLP-Lab.org\"\n[JSON-NLP]: https://github.com/dcavar/JSON-NLP \"JSON-NLP\"\n[Flair]: https://github.com/zalandoresearch/flair \"Flair\"\n[spaCy]: https://spacy.io/ \"spaCy\"\n[NLTK]: http://nltk.org/ \"Natural Language Processing Toolkit\"\n[Polyglot]: https://github.com/aboSamoor/polyglot \"Polyglot\"\n[Xrenner]: https://github.com/amir-zeldes/xrenner \"Xrenner\"\n[CONLL-U]: https://universaldependencies.org/format.html \"CONLL-U\"\n[Docker]: https://www.docker.com/ \"Docker\"\n[CoreNLP]: https://stanfordnlp.github.io/CoreNLP/ \"Stanford CoreNLP\"\n[Flask]: http://flask.pocoo.org/ \"Flask\"\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dcavar/Xrenner-JSON-NLP", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "xrennerjsonnlp", "package_url": "https://pypi.org/project/xrennerjsonnlp/", "platform": "", "project_url": "https://pypi.org/project/xrennerjsonnlp/", "project_urls": {"Homepage": "https://github.com/dcavar/Xrenner-JSON-NLP"}, "release_url": "https://pypi.org/project/xrennerjsonnlp/0.0.5/", "requires_dist": ["xrenner (>=2.0.2.0)", "pyjsonnlp (>=0.2.11)", "beautifulsoup4 (>=4.6.3)", "nltk (>=3.4)", "python-dotenv (>=0.10.1)"], "requires_python": "", "summary": "The Python Xrenner JSON-NLP package", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Xrenner to JSON-NLP</h1>\n<p>(C) 2019 by <a href=\"http://damir.cavar.me/\" rel=\"nofollow\" title=\"Damir Cavar\">Damir Cavar</a>, <a href=\"https://oren.baldinger.me/\" rel=\"nofollow\" title=\"Oren Baldinger\">Oren Baldinger</a>, Maanvitha Gongalla, Anurag Kumar, Murali Kammili, Boli Fang</p>\n<p>Brought to you by the <a href=\"http://nlp-lab.org/\" rel=\"nofollow\" title=\"NLP-Lab.org\">NLP-Lab.org</a>!</p>\n<h2>Introduction</h2>\n<p><a href=\"https://github.com/amir-zeldes/xrenner\" rel=\"nofollow\" title=\"Xrenner\">Xrenner</a> wrapper for <a href=\"https://github.com/dcavar/JSON-NLP\" rel=\"nofollow\" title=\"JSON-NLP\">JSON-NLP</a>. <a href=\"https://github.com/amir-zeldes/xrenner\" rel=\"nofollow\" title=\"Xrenner\">Xrenner</a> specializes in coreference and anaphora resolution, in a more highly annotated manner\nthan just a coreference chain.</p>\n<h2>Required Dependency Parse</h2>\n<p>Xrenner requires a <a href=\"https://en.wikipedia.org/wiki/Dependency_grammar\" rel=\"nofollow\">Dependency Parse</a> in <a href=\"https://universaldependencies.org/format.html\" rel=\"nofollow\" title=\"CONLL-U\">CoNLL-U</a> format.\nThis can come from <a href=\"https://stanfordnlp.github.io/CoreNLP/\" rel=\"nofollow\" title=\"Stanford CoreNLP\">CoreNLP</a>, or another parser that provides universal dependencies in [CoNNL-U] format.\nThere are two ways to accomplish this:</p>\n<h3>CoreNLP Server</h3>\n<p>The <code>XrennerPipeline</code> class will take care of the details, however it requires an available <a href=\"https://stanfordnlp.github.io/CoreNLP/\" rel=\"nofollow\" title=\"Stanford CoreNLP\">CoreNLP</a> server.\nThe easiest way to create one is with <a href=\"https://www.docker.com/\" rel=\"nofollow\" title=\"Docker\">Docker</a>:</p>\n<pre><code>docker pull nlpbox/corenlp\ndocker run -p 9000:9000 -ti nlpbox/corenlp\n</code></pre>\n<p>To test this, open a new tab,</p>\n<pre><code>wget -q --post-data \"Although they didn't like it, they accepted the offer.\"   'localhost:9000/?properties={\"annotators\":\"depparse\",\"outputFormat\":\"conll\"}' -O /dev/stdout\n</code></pre>\n<p>You then need to create a <code>.env</code> file in the root of the project, follow the example in <code>sample_env</code>.\nThe default entry that corresponds to the <a href=\"https://www.docker.com/\" rel=\"nofollow\" title=\"Docker\">Docker</a> command above is:</p>\n<pre><code>CORENLP_SERVER=http://localhost:9000\n</code></pre>\n<h3>Provide your own CoNLL-U</h3>\n<p>Use the <code>XrennerPipeline.process_conll</code> function, with your conll data passed as a string via\nthe <code>conll</code> argument.</p>\n<p>You may find the <code>pyjsonnlp.conversion.to_conllu</code> function helpful for converting <a href=\"https://github.com/dcavar/JSON-NLP\" rel=\"nofollow\" title=\"JSON-NLP\">JSON-NLP</a>,\nmaybe from <a href=\"https://spacy.io/\" rel=\"nofollow\" title=\"spaCy\">spaCy</a>, to <a href=\"https://universaldependencies.org/format.html\" rel=\"nofollow\" title=\"CONLL-U\">CoNLL-U</a>.</p>\n<h2>Microservice</h2>\n<p>The <a href=\"https://github.com/dcavar/JSON-NLP\" rel=\"nofollow\" title=\"JSON-NLP\">JSON-NLP</a> repository provides a Microservice class, with a pre-built implementation of <a href=\"http://flask.pocoo.org/\" rel=\"nofollow\" title=\"Flask\">Flask</a>. To run it, execute:</p>\n<pre><code>python xrennerjsonnlp/server.py\n</code></pre>\n<p>Since <code>server.py</code> extends the <a href=\"http://flask.pocoo.org/\" rel=\"nofollow\" title=\"Flask\">Flask</a> app, a WSGI file would contain:</p>\n<pre><code>from xrennerjsonnlp.server import app as application\n</code></pre>\n<p>Text is provided to the microservice with the <code>text</code> parameter, via either <code>GET</code> or <code>POST</code>. If you pass <code>url</code> as a parameter, the microservice will scrape that url and process the text of the website.</p>\n<p>Here is an example <code>GET</code> call:</p>\n<pre><code>http://localhost:5000?text=John went to the store. He bought some milk.\n</code></pre>\n<p>The <code>process_conll</code> endpoint mentioned above is available at the <code>/process_conll</code>\nURI. Instead of passing <code>text</code>, pass <code>conll</code>. A POST operation will be easier than GET\nin this situation.</p>\n\n          </div>"}, "last_serial": 5317150, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a41495c05b6993e1af61bdf4640b175f", "sha256": "a72086797f9be4c88bf6124f433c229d9173117f34c73595292daf44d425db99"}, "downloads": -1, "filename": "xrennerjsonnlp-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a41495c05b6993e1af61bdf4640b175f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14747, "upload_time": "2019-04-09T19:51:15", "upload_time_iso_8601": "2019-04-09T19:51:15.618683Z", "url": "https://files.pythonhosted.org/packages/fd/5a/76b73b2ecb5090b890cf5c68d27576aed00d1d78d628a538574f3b699848/xrennerjsonnlp-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "939f61d54a45e516369b63b14892a486", "sha256": "ce80df4ccbc996eebf7bb817f50c2281c87ee6059a6ab4046447df1a03b49063"}, "downloads": -1, "filename": "xrennerjsonnlp-0.0.1.tar.gz", "has_sig": false, "md5_digest": "939f61d54a45e516369b63b14892a486", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10235, "upload_time": "2019-04-09T19:51:17", "upload_time_iso_8601": "2019-04-09T19:51:17.765847Z", "url": "https://files.pythonhosted.org/packages/05/88/e85a2b14312fabad742616eb375000f4736f884c3e41b067673c8547aac0/xrennerjsonnlp-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "ad531000adfb1c46256719fa416b61ad", "sha256": "280556d29ed6946f3e325455f5459cdeb46a504212641b194f18e8e26b5aabb6"}, "downloads": -1, "filename": "xrennerjsonnlp-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ad531000adfb1c46256719fa416b61ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17760, "upload_time": "2019-04-23T18:50:47", "upload_time_iso_8601": "2019-04-23T18:50:47.195392Z", "url": "https://files.pythonhosted.org/packages/b9/02/ead9161292f9d54e089cd09897f68a803f6347e76dd8b99bdd4e218a8418/xrennerjsonnlp-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "704979e1e0fa057d05e77c1a3ba26e1d", "sha256": "4702a3f0c794436e1bfde6bbbb27981c7cc42cd794020f494322176b4c8a6b4a"}, "downloads": -1, "filename": "xrennerjsonnlp-0.0.2.tar.gz", "has_sig": false, "md5_digest": "704979e1e0fa057d05e77c1a3ba26e1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13929, "upload_time": "2019-04-23T18:50:48", "upload_time_iso_8601": "2019-04-23T18:50:48.410602Z", "url": "https://files.pythonhosted.org/packages/07/b3/a218c0d3b81196e46ddfea095093b7270a67224c0d9dd2be86427bcf761a/xrennerjsonnlp-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "698f3e64775851be67387936463b4463", "sha256": "561216df1cddf8a013f77af9b23f56b6a200d4863ba3c195f4cd4ad68f34cb3f"}, "downloads": -1, "filename": "xrennerjsonnlp-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "698f3e64775851be67387936463b4463", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18270, "upload_time": "2019-04-29T17:30:53", "upload_time_iso_8601": "2019-04-29T17:30:53.502780Z", "url": "https://files.pythonhosted.org/packages/d5/ab/08b685d380925101f3ae7896715f95f069e510d92500f0cb16295e95ec61/xrennerjsonnlp-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "473f161330bc2b098035019eddb434d9", "sha256": "830dbd80a891ee36e34fe1d5f9ceca3ed235aea8b975da0bea85f87bfeabf834"}, "downloads": -1, "filename": "xrennerjsonnlp-0.0.3.tar.gz", "has_sig": false, "md5_digest": "473f161330bc2b098035019eddb434d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14801, "upload_time": "2019-04-29T17:30:58", "upload_time_iso_8601": "2019-04-29T17:30:58.302863Z", "url": "https://files.pythonhosted.org/packages/fb/db/e149d26965eccdfecca914987fc5811dbce9b6302288fe1d3c01d8182afd/xrennerjsonnlp-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "9a0f2dc6342a8c239985a1772b512a0d", "sha256": "993fd30029ca02c4d7b3ea06cd651173cd4ccca533c60a0cc77a509821739f13"}, "downloads": -1, "filename": "xrennerjsonnlp-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "9a0f2dc6342a8c239985a1772b512a0d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18272, "upload_time": "2019-05-15T20:10:37", "upload_time_iso_8601": "2019-05-15T20:10:37.574801Z", "url": "https://files.pythonhosted.org/packages/50/02/cc735233293dfcba407d0c7f5a2752cad0fdd247e4e663f34864d8f6ca85/xrennerjsonnlp-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "670034b636cb0b38fae391238d2c854f", "sha256": "d019e1fb9c5825eb1b5f435084d2d1228095d34091aa8a341d19e23edced99d0"}, "downloads": -1, "filename": "xrennerjsonnlp-0.0.4.tar.gz", "has_sig": false, "md5_digest": "670034b636cb0b38fae391238d2c854f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14815, "upload_time": "2019-05-15T20:10:38", "upload_time_iso_8601": "2019-05-15T20:10:38.994058Z", "url": "https://files.pythonhosted.org/packages/80/bf/3146bb0bb213c659a1d0516b24358ff79f900e70e4ee19d63fa53ff1ab93/xrennerjsonnlp-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "0422d51894443f05fc0e3fdbc17e96ea", "sha256": "a190be4470d5f352d4ed51e7bd634b584bddd6555078260bd00356b73048db9f"}, "downloads": -1, "filename": "xrennerjsonnlp-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "0422d51894443f05fc0e3fdbc17e96ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18280, "upload_time": "2019-05-25T19:12:42", "upload_time_iso_8601": "2019-05-25T19:12:42.050859Z", "url": "https://files.pythonhosted.org/packages/d8/b0/96196b72e87fcc67072ec07dd0485d68780ae22d4c9df1cd3ba094da2bb8/xrennerjsonnlp-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59a93fc9a59172922f397983e66f39f3", "sha256": "b8e8290b2d3499b87af9eb126aa47360f2da5a386a6cd2fa90866730a5784d7a"}, "downloads": -1, "filename": "xrennerjsonnlp-0.0.5.tar.gz", "has_sig": false, "md5_digest": "59a93fc9a59172922f397983e66f39f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14824, "upload_time": "2019-05-25T19:12:43", "upload_time_iso_8601": "2019-05-25T19:12:43.310475Z", "url": "https://files.pythonhosted.org/packages/a4/e7/dfc5ba641d865bc4bfcc8469e790a1ba4ebc9cb728cc2ca0b09702095dc3/xrennerjsonnlp-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0422d51894443f05fc0e3fdbc17e96ea", "sha256": "a190be4470d5f352d4ed51e7bd634b584bddd6555078260bd00356b73048db9f"}, "downloads": -1, "filename": "xrennerjsonnlp-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "0422d51894443f05fc0e3fdbc17e96ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18280, "upload_time": "2019-05-25T19:12:42", "upload_time_iso_8601": "2019-05-25T19:12:42.050859Z", "url": "https://files.pythonhosted.org/packages/d8/b0/96196b72e87fcc67072ec07dd0485d68780ae22d4c9df1cd3ba094da2bb8/xrennerjsonnlp-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59a93fc9a59172922f397983e66f39f3", "sha256": "b8e8290b2d3499b87af9eb126aa47360f2da5a386a6cd2fa90866730a5784d7a"}, "downloads": -1, "filename": "xrennerjsonnlp-0.0.5.tar.gz", "has_sig": false, "md5_digest": "59a93fc9a59172922f397983e66f39f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14824, "upload_time": "2019-05-25T19:12:43", "upload_time_iso_8601": "2019-05-25T19:12:43.310475Z", "url": "https://files.pythonhosted.org/packages/a4/e7/dfc5ba641d865bc4bfcc8469e790a1ba4ebc9cb728cc2ca0b09702095dc3/xrennerjsonnlp-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:24:29 2020"}