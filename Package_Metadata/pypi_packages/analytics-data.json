{"info": {"author": "Claudio Pose", "author_email": "claudio.pose@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "analytics-data\n==============\n\nProvides an API wrapper for third party analytics services for easy data\nretrieval\n\nMain Features\n=============\n\n-  Webtrekk JSON/RPC v1.1\n-  Quintly REST v0.9\n-  Credential manager\n\nQuintly API\n===========\n\nTo use the Quintly API through analytics-data, the QuintlyAPI class can\nbe used.\n\n.. code:: python\n\n    # Import the module\n    from analytics import quintly\n    import datetime\n\n    # Instantiate the class with your client id and secret\n    quintly = quintly.QuintlyAPI('client_id', 'client_secret')\n\n    # Available profiles are loaded after instantiation\n    profiles = quintly.get_profiles()\n\n    # Available groups are loaded after instantiation\n    groups = quintly.get_groups()\n\n    # To run the query, the profile ids are required. They can either be\n    # retrieved through a group or by providing a list of profile names\n\n    profile_ids_from_group = quintly.get_profile_ids_from_group_name('group_name')\n    profile_ids_from_profile_names = quintly.get_profile_ids_from_names(['profile_name_1', 'profile_name_2'])\n\n\n    # A query must specify the profiles for which the metrics should be retrieved...\n    profile_ids = profile_ids_from_group\n\n    #... the table from which the metrics should be retrieved...\n    table = 'facebookInsights'\n\n    #... the fields which are of interest...\n    fields = ['profileId', 'time', 'page_impressions_unique']\n\n    # ... a start and end date\n    start_date = datetime.date(2019, 2, 1)\n    end_date = datetime.date(2019, 2, 11)\n\n\n    # You can run the query with the run_query method. It returns a pandas DataFrame\n    df = quintly.run_query(profile_ids, table, fields, start_date, end_date)\n\n    # The default interval is daily but can be changed using the interval parameter\n    df = quintly.run_query(profile_ids, table, fields, start_date, end_date,\n            interval='monthly')\n\n    # If the query is too big due to too many profiles, the query can be split up\n    # into subqueries by setting split_profiles to True -> for each profile one subquery\n\n    df = quintly.run_query(profile_ids, table, fields, start_date, end_date,\n            split_profiles=True)\n\n    # If the query is too big due to a too large time range, the query can be split\n    # into subqueries by setting the number of days of the split_days parameter\n    # -> for each chunk with the size of the specified amount of days a subquery is run\n\n    df = quintly.run_query(profile_ids, table, fields, start_date, end_date,\n            split_days=28)\n\n    # split_profiles and split_days can also be combined.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/claudio-pose/analytics-data/archive/0.7.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/claudio-pose/analytics-data", "keywords": "analytics,api,webtrekk,quintly,wrapper", "license": "GNU General Public License v3.0", "maintainer": "", "maintainer_email": "", "name": "analytics-data", "package_url": "https://pypi.org/project/analytics-data/", "platform": "", "project_url": "https://pypi.org/project/analytics-data/", "project_urls": {"Download": "https://github.com/claudio-pose/analytics-data/archive/0.7.0.tar.gz", "Homepage": "https://github.com/claudio-pose/analytics-data"}, "release_url": "https://pypi.org/project/analytics-data/0.7.0/", "requires_dist": ["requests (>=2)", "keyring (>=11)", "SecretStorage (>=2)"], "requires_python": "", "summary": "Provides an API wrapper for easy data retrieval from third party analytics services", "version": "0.7.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"analytics-data\">\n<h2>analytics-data</h2>\n<p>Provides an API wrapper for third party analytics services for easy data\nretrieval</p>\n</div>\n<div id=\"main-features\">\n<h2>Main Features</h2>\n<ul>\n<li>Webtrekk JSON/RPC v1.1</li>\n<li>Quintly REST v0.9</li>\n<li>Credential manager</li>\n</ul>\n</div>\n<div id=\"quintly-api\">\n<h2>Quintly API</h2>\n<p>To use the Quintly API through analytics-data, the QuintlyAPI class can\nbe used.</p>\n<pre><span class=\"c1\"># Import the module</span>\n<span class=\"kn\">from</span> <span class=\"nn\">analytics</span> <span class=\"kn\">import</span> <span class=\"n\">quintly</span>\n<span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n\n<span class=\"c1\"># Instantiate the class with your client id and secret</span>\n<span class=\"n\">quintly</span> <span class=\"o\">=</span> <span class=\"n\">quintly</span><span class=\"o\">.</span><span class=\"n\">QuintlyAPI</span><span class=\"p\">(</span><span class=\"s1\">'client_id'</span><span class=\"p\">,</span> <span class=\"s1\">'client_secret'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Available profiles are loaded after instantiation</span>\n<span class=\"n\">profiles</span> <span class=\"o\">=</span> <span class=\"n\">quintly</span><span class=\"o\">.</span><span class=\"n\">get_profiles</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Available groups are loaded after instantiation</span>\n<span class=\"n\">groups</span> <span class=\"o\">=</span> <span class=\"n\">quintly</span><span class=\"o\">.</span><span class=\"n\">get_groups</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># To run the query, the profile ids are required. They can either be</span>\n<span class=\"c1\"># retrieved through a group or by providing a list of profile names</span>\n\n<span class=\"n\">profile_ids_from_group</span> <span class=\"o\">=</span> <span class=\"n\">quintly</span><span class=\"o\">.</span><span class=\"n\">get_profile_ids_from_group_name</span><span class=\"p\">(</span><span class=\"s1\">'group_name'</span><span class=\"p\">)</span>\n<span class=\"n\">profile_ids_from_profile_names</span> <span class=\"o\">=</span> <span class=\"n\">quintly</span><span class=\"o\">.</span><span class=\"n\">get_profile_ids_from_names</span><span class=\"p\">([</span><span class=\"s1\">'profile_name_1'</span><span class=\"p\">,</span> <span class=\"s1\">'profile_name_2'</span><span class=\"p\">])</span>\n\n\n<span class=\"c1\"># A query must specify the profiles for which the metrics should be retrieved...</span>\n<span class=\"n\">profile_ids</span> <span class=\"o\">=</span> <span class=\"n\">profile_ids_from_group</span>\n\n<span class=\"c1\">#... the table from which the metrics should be retrieved...</span>\n<span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"s1\">'facebookInsights'</span>\n\n<span class=\"c1\">#... the fields which are of interest...</span>\n<span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'profileId'</span><span class=\"p\">,</span> <span class=\"s1\">'time'</span><span class=\"p\">,</span> <span class=\"s1\">'page_impressions_unique'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># ... a start and end date</span>\n<span class=\"n\">start_date</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">end_date</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># You can run the query with the run_query method. It returns a pandas DataFrame</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">quintly</span><span class=\"o\">.</span><span class=\"n\">run_query</span><span class=\"p\">(</span><span class=\"n\">profile_ids</span><span class=\"p\">,</span> <span class=\"n\">table</span><span class=\"p\">,</span> <span class=\"n\">fields</span><span class=\"p\">,</span> <span class=\"n\">start_date</span><span class=\"p\">,</span> <span class=\"n\">end_date</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># The default interval is daily but can be changed using the interval parameter</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">quintly</span><span class=\"o\">.</span><span class=\"n\">run_query</span><span class=\"p\">(</span><span class=\"n\">profile_ids</span><span class=\"p\">,</span> <span class=\"n\">table</span><span class=\"p\">,</span> <span class=\"n\">fields</span><span class=\"p\">,</span> <span class=\"n\">start_date</span><span class=\"p\">,</span> <span class=\"n\">end_date</span><span class=\"p\">,</span>\n        <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s1\">'monthly'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># If the query is too big due to too many profiles, the query can be split up</span>\n<span class=\"c1\"># into subqueries by setting split_profiles to True -&gt; for each profile one subquery</span>\n\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">quintly</span><span class=\"o\">.</span><span class=\"n\">run_query</span><span class=\"p\">(</span><span class=\"n\">profile_ids</span><span class=\"p\">,</span> <span class=\"n\">table</span><span class=\"p\">,</span> <span class=\"n\">fields</span><span class=\"p\">,</span> <span class=\"n\">start_date</span><span class=\"p\">,</span> <span class=\"n\">end_date</span><span class=\"p\">,</span>\n        <span class=\"n\">split_profiles</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># If the query is too big due to a too large time range, the query can be split</span>\n<span class=\"c1\"># into subqueries by setting the number of days of the split_days parameter</span>\n<span class=\"c1\"># -&gt; for each chunk with the size of the specified amount of days a subquery is run</span>\n\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">quintly</span><span class=\"o\">.</span><span class=\"n\">run_query</span><span class=\"p\">(</span><span class=\"n\">profile_ids</span><span class=\"p\">,</span> <span class=\"n\">table</span><span class=\"p\">,</span> <span class=\"n\">fields</span><span class=\"p\">,</span> <span class=\"n\">start_date</span><span class=\"p\">,</span> <span class=\"n\">end_date</span><span class=\"p\">,</span>\n        <span class=\"n\">split_days</span><span class=\"o\">=</span><span class=\"mi\">28</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># split_profiles and split_days can also be combined.</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 5129311, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "15a9f28de957a8a7339faa46580c62ee", "sha256": "9402e034bde0e935a4961a5f26083bd81bbe08fac1f2fc7a3ab09c15e84fe109"}, "downloads": -1, "filename": "analytics_data-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "15a9f28de957a8a7339faa46580c62ee", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6630, "upload_time": "2018-02-21T21:45:35", "upload_time_iso_8601": "2018-02-21T21:45:35.898101Z", "url": "https://files.pythonhosted.org/packages/8b/c5/62adef7dc6d604788466d2882170d2af4e42e61572b3ba42dc41d43bcaae/analytics_data-0.1.1-py2.py3-none-any.whl", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "b57a564fb9ff4f19e178e0744966e0ad", "sha256": "1c5255c984d5becfc9af793ad8fe157462c86ec864c1c278b122b7697c9c2566"}, "downloads": -1, "filename": "analytics_data-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b57a564fb9ff4f19e178e0744966e0ad", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7875, "upload_time": "2018-02-22T21:28:28", "upload_time_iso_8601": "2018-02-22T21:28:28.558114Z", "url": "https://files.pythonhosted.org/packages/8a/4d/7afd86e7086d5da9ee65b3b907908394c4c0bd2aca8726f5ab559c74afb1/analytics_data-0.2.1-py2.py3-none-any.whl", "yanked": false}], "0.3.13": [{"comment_text": "", "digests": {"md5": "7e829f2e762af3e9de0d4d27526927ce", "sha256": "5213d7bceaa45f10ab42e77fddc21ae1828efc978f68ace1147af90822a10724"}, "downloads": -1, "filename": "analytics_data-0.3.13-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7e829f2e762af3e9de0d4d27526927ce", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6208, "upload_time": "2018-02-24T19:42:23", "upload_time_iso_8601": "2018-02-24T19:42:23.527543Z", "url": "https://files.pythonhosted.org/packages/54/3d/2b2e1aa5755300232fa1d2acd22e38ed179037e1b3e55000867544994811/analytics_data-0.3.13-py2.py3-none-any.whl", "yanked": false}], "0.3.15": [{"comment_text": "", "digests": {"md5": "172006012de4b702d088e9a2dbb79538", "sha256": "ce065c9dd6f3dd23ec6d05a32946e589d57977fbd72e038f0aae8ac256924067"}, "downloads": -1, "filename": "analytics_data-0.3.15-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "172006012de4b702d088e9a2dbb79538", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6212, "upload_time": "2018-02-28T14:32:10", "upload_time_iso_8601": "2018-02-28T14:32:10.719744Z", "url": "https://files.pythonhosted.org/packages/9b/06/5084ab7d65c1838052546b8f5a97bd6ec0a3b3d297632efde50bb599dc74/analytics_data-0.3.15-py2.py3-none-any.whl", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "42600199377cef72b85d9e60885ae8ec", "sha256": "fca56fd7f65e6dd011ccac23727c6cd21e3955d11ffb00cd13b87e7a62794691"}, "downloads": -1, "filename": "analytics_data-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "42600199377cef72b85d9e60885ae8ec", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6294, "upload_time": "2018-03-04T20:27:15", "upload_time_iso_8601": "2018-03-04T20:27:15.372626Z", "url": "https://files.pythonhosted.org/packages/98/e1/d844008d8241d6a6a4905e05a16481c0aa34c1819b3b2e225c642a90c5a4/analytics_data-0.4.0-py2.py3-none-any.whl", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "5444206bb3ce0e88c074ae05075b3d51", "sha256": "0d3241900b217aacf8842d46568aa2e0c2c0d9ffd0078fb082ca5e012fc944a2"}, "downloads": -1, "filename": "analytics_data-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5444206bb3ce0e88c074ae05075b3d51", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6395, "upload_time": "2019-01-09T08:40:12", "upload_time_iso_8601": "2019-01-09T08:40:12.674625Z", "url": "https://files.pythonhosted.org/packages/c3/0b/1a6c7bbc0f44f802ff2b56295a9e7c1911623ccfad8f2d8eb54b994a4a7c/analytics_data-0.5.0-py2.py3-none-any.whl", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "977d621948a62268e0e997ed7fa8777e", "sha256": "2a1b7f21a49b85cc713a46ac7600db4188413dc8ada7734e4d2fbbddbe9cb0c0"}, "downloads": -1, "filename": "analytics_data-0.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "977d621948a62268e0e997ed7fa8777e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6434, "upload_time": "2019-01-10T12:14:49", "upload_time_iso_8601": "2019-01-10T12:14:49.264186Z", "url": "https://files.pythonhosted.org/packages/a5/85/d41b25fd81a49752dfce5a63362a74c7cbf2abf556dd06e5bfd7edf96e2a/analytics_data-0.6.0-py2.py3-none-any.whl", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "802459d83b315cdb9d94e7b245770da1", "sha256": "5197e4a97372657a1c24d8d1ccaef43e9aeb0d50f0b564d3f8891ec7a1863ec0"}, "downloads": -1, "filename": "analytics_data-0.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "802459d83b315cdb9d94e7b245770da1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6440, "upload_time": "2019-01-10T12:15:24", "upload_time_iso_8601": "2019-01-10T12:15:24.684493Z", "url": "https://files.pythonhosted.org/packages/7e/5d/cd55dbb3a6a32d81aeeb207164e16dcaed1887fe184316683b2870c9a765/analytics_data-0.6.1-py2.py3-none-any.whl", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "15607ebe3dcfe68593c7271ef55dd176", "sha256": "766e0ee72a2f49f88fc8b0bbce22e2094b81b8fc292bda2c3a2f68b34f54c555"}, "downloads": -1, "filename": "analytics_data-0.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "15607ebe3dcfe68593c7271ef55dd176", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9575, "upload_time": "2019-04-11T14:40:44", "upload_time_iso_8601": "2019-04-11T14:40:44.049260Z", "url": "https://files.pythonhosted.org/packages/63/aa/f7eecfb11cfc93df12d516227b902038b757455bbd4d08ca71f1bf502bc2/analytics_data-0.7.0-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "15607ebe3dcfe68593c7271ef55dd176", "sha256": "766e0ee72a2f49f88fc8b0bbce22e2094b81b8fc292bda2c3a2f68b34f54c555"}, "downloads": -1, "filename": "analytics_data-0.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "15607ebe3dcfe68593c7271ef55dd176", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9575, "upload_time": "2019-04-11T14:40:44", "upload_time_iso_8601": "2019-04-11T14:40:44.049260Z", "url": "https://files.pythonhosted.org/packages/63/aa/f7eecfb11cfc93df12d516227b902038b757455bbd4d08ca71f1bf502bc2/analytics_data-0.7.0-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 18:18:16 2020"}