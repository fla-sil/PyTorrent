{"info": {"author": "Danylo Ulianych", "author_email": "d.ulianych@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Pretty inspect\n\n[![Build Status](https://travis-ci.org/dizcza/pinspect.svg?branch=master)](https://travis-ci.org/dizcza/pinspect)\n[![Coverage Status](https://coveralls.io/repos/github/dizcza/pinspect/badge.svg?branch=master)](https://coveralls.io/github/dizcza/pinspect?branch=master)\n[![Documentation Status](https://readthedocs.org/projects/pinspect/badge/?version=latest)](https://pinspect.readthedocs.io/en/latest/?badge=latest)\n\n\nInspired by the complexity of [Neo](https://github.com/NeuralEnsemble/python-neo).\n\nWhen browsing/inspecting an object, you want to collect all methods and attributes that match the key.\n\n### Example\n\nBrowsing the documentation of `neo.io.BlackrockIO` and looking for the ways of extracting `Epoch`s, you found `read_epoch()` method. But calling this method raises `AssertionError`. You need to go deeper.\n1. Run `pip install pinspect neo`\n2. Download BlackRock [sampledata.zip](http://www.blackrockmicro.com/wp-content/software/sampledata.zip)\n\n```\nwget http://www.blackrockmicro.com/wp-content/software/sampledata.zip\nunzip sampledata.zip\n```\n\n3. In python,\n\n```python\nfrom neo.io import BlackrockIO\nfrom pinspect import find\n\nsession = BlackrockIO('sampleData')\ngraph = find(session, 'epoch', verbose=True)\n```\n\nOutput:\n\n```\nBlackrockIO.rescale_epoch_duration() -> 'TypeError'\nBlackrockIO.read_epoch() -> 'AssertionError'\nBlackrockIO._rescale_epoch_duration() -> 'TypeError'\nBlackrockIO.read()[0].segments[0].epochs -> 'list of size 0'\nBlackrockIO.read()[0].segments[0].events[0].to_epoch() -> 'Epoch'\n```\n\nThe last two lines are candidates to explore manually.\n\n### Graph visualization\n\nYou can pass `visualize=True` and enjoy the beautiful `networkx` with `pyvis` interacting graph rendering.\nHover over the nodes (objects) and edges (methods and attributes) to explore the graph in details and inspect how a particular object has been generated.\n\n![](screenshots/neo_BlackRockIO_Epoch.png)\n\n#### Unfiltered graph\n\nBelow is the full unfiltered graph of `neo.BlackRockIO` of all possible method and attribute calls. Can you find the green dot?\n\n![](screenshots/neo_BlackRockIO.png)\n\n### Requirements\n\n1. Python 3.6+\n2. [requirements.txt](requirements.txt)\n\n### Alternative\n\nAnother package to inspect python variables is [objbrowser](https://github.com/titusjan/objbrowser).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dizcza/pinspect", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pinspect", "package_url": "https://pypi.org/project/pinspect/", "platform": "", "project_url": "https://pypi.org/project/pinspect/", "project_urls": {"Homepage": "https://github.com/dizcza/pinspect"}, "release_url": "https://pypi.org/project/pinspect/0.0.2/", "requires_dist": ["networkx (>=2.4)", "pyvis (>=0.1.7.0)", "tqdm"], "requires_python": ">=3.6", "summary": "Pretty inspect object", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Pretty inspect</h1>\n<p><a href=\"https://travis-ci.org/dizcza/pinspect\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c9fb898c734c9bf5bb5a8b35c52e5f630e3c1ca0/68747470733a2f2f7472617669732d63692e6f72672f64697a637a612f70696e73706563742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/dizcza/pinspect?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/77db6461889b70d98b45258b623440029c468bc2/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f64697a637a612f70696e73706563742f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pinspect.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f99f28103201ffc55033714baf2d5aff935549c/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f70696e73706563742f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<p>Inspired by the complexity of <a href=\"https://github.com/NeuralEnsemble/python-neo\" rel=\"nofollow\">Neo</a>.</p>\n<p>When browsing/inspecting an object, you want to collect all methods and attributes that match the key.</p>\n<h3>Example</h3>\n<p>Browsing the documentation of <code>neo.io.BlackrockIO</code> and looking for the ways of extracting <code>Epoch</code>s, you found <code>read_epoch()</code> method. But calling this method raises <code>AssertionError</code>. You need to go deeper.</p>\n<ol>\n<li>Run <code>pip install pinspect neo</code></li>\n<li>Download BlackRock <a href=\"http://www.blackrockmicro.com/wp-content/software/sampledata.zip\" rel=\"nofollow\">sampledata.zip</a></li>\n</ol>\n<pre><code>wget http://www.blackrockmicro.com/wp-content/software/sampledata.zip\nunzip sampledata.zip\n</code></pre>\n<ol>\n<li>In python,</li>\n</ol>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">neo.io</span> <span class=\"kn\">import</span> <span class=\"n\">BlackrockIO</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pinspect</span> <span class=\"kn\">import</span> <span class=\"n\">find</span>\n\n<span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">BlackrockIO</span><span class=\"p\">(</span><span class=\"s1\">'sampleData'</span><span class=\"p\">)</span>\n<span class=\"n\">graph</span> <span class=\"o\">=</span> <span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"p\">,</span> <span class=\"s1\">'epoch'</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre><code>BlackrockIO.rescale_epoch_duration() -&gt; 'TypeError'\nBlackrockIO.read_epoch() -&gt; 'AssertionError'\nBlackrockIO._rescale_epoch_duration() -&gt; 'TypeError'\nBlackrockIO.read()[0].segments[0].epochs -&gt; 'list of size 0'\nBlackrockIO.read()[0].segments[0].events[0].to_epoch() -&gt; 'Epoch'\n</code></pre>\n<p>The last two lines are candidates to explore manually.</p>\n<h3>Graph visualization</h3>\n<p>You can pass <code>visualize=True</code> and enjoy the beautiful <code>networkx</code> with <code>pyvis</code> interacting graph rendering.\nHover over the nodes (objects) and edges (methods and attributes) to explore the graph in details and inspect how a particular object has been generated.</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6a65b2fefcea21631eaf7ae25e994ea376312921/73637265656e73686f74732f6e656f5f426c61636b526f636b494f5f45706f63682e706e67\"></p>\n<h4>Unfiltered graph</h4>\n<p>Below is the full unfiltered graph of <code>neo.BlackRockIO</code> of all possible method and attribute calls. Can you find the green dot?</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f44a101e117a5fc048c912a6437915d368087a22/73637265656e73686f74732f6e656f5f426c61636b526f636b494f2e706e67\"></p>\n<h3>Requirements</h3>\n<ol>\n<li>Python 3.6+</li>\n<li><a href=\"requirements.txt\" rel=\"nofollow\">requirements.txt</a></li>\n</ol>\n<h3>Alternative</h3>\n<p>Another package to inspect python variables is <a href=\"https://github.com/titusjan/objbrowser\" rel=\"nofollow\">objbrowser</a>.</p>\n\n          </div>"}, "last_serial": 6152262, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d3852d4a3bd83b729aa6664bf9ab36be", "sha256": "0149e05a783c0a59fe5e1c57cf7f10e8657c7fa54dc19c2e8f5c65529b27ab79"}, "downloads": -1, "filename": "pinspect-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d3852d4a3bd83b729aa6664bf9ab36be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1729, "upload_time": "2019-11-03T22:28:49", "upload_time_iso_8601": "2019-11-03T22:28:49.508735Z", "url": "https://files.pythonhosted.org/packages/93/65/4a4d1834f5dd0064fa55114824c5de88a682fc0d669a6e58e392ea36aea7/pinspect-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "8d2e267dd93a937857bd5e08dc8dee24", "sha256": "0e485ed244cb11b29b01832dc5c180916c720b17c3ad3472f2a822fa11bdc903"}, "downloads": -1, "filename": "pinspect-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8d2e267dd93a937857bd5e08dc8dee24", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8813, "upload_time": "2019-11-17T23:24:25", "upload_time_iso_8601": "2019-11-17T23:24:25.686173Z", "url": "https://files.pythonhosted.org/packages/cf/5a/0fa37c325b5dcd760c4d37ab3fe5e36e42a5a442231d033241b623c3bebf/pinspect-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9cf38fb9e27b0acf71c7b4402bdabdf1", "sha256": "d96c3a95e17122d43f3a183f43200673e64a8c4e35562c4b40ad5433daad9000"}, "downloads": -1, "filename": "pinspect-0.0.2.tar.gz", "has_sig": false, "md5_digest": "9cf38fb9e27b0acf71c7b4402bdabdf1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8097, "upload_time": "2019-11-17T23:24:27", "upload_time_iso_8601": "2019-11-17T23:24:27.627800Z", "url": "https://files.pythonhosted.org/packages/5d/32/52d267a38c92771f27406d6f5080837844fbb7cddacfc28a61360edb7f48/pinspect-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8d2e267dd93a937857bd5e08dc8dee24", "sha256": "0e485ed244cb11b29b01832dc5c180916c720b17c3ad3472f2a822fa11bdc903"}, "downloads": -1, "filename": "pinspect-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8d2e267dd93a937857bd5e08dc8dee24", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8813, "upload_time": "2019-11-17T23:24:25", "upload_time_iso_8601": "2019-11-17T23:24:25.686173Z", "url": "https://files.pythonhosted.org/packages/cf/5a/0fa37c325b5dcd760c4d37ab3fe5e36e42a5a442231d033241b623c3bebf/pinspect-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9cf38fb9e27b0acf71c7b4402bdabdf1", "sha256": "d96c3a95e17122d43f3a183f43200673e64a8c4e35562c4b40ad5433daad9000"}, "downloads": -1, "filename": "pinspect-0.0.2.tar.gz", "has_sig": false, "md5_digest": "9cf38fb9e27b0acf71c7b4402bdabdf1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8097, "upload_time": "2019-11-17T23:24:27", "upload_time_iso_8601": "2019-11-17T23:24:27.627800Z", "url": "https://files.pythonhosted.org/packages/5d/32/52d267a38c92771f27406d6f5080837844fbb7cddacfc28a61360edb7f48/pinspect-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:27 2020"}