{"info": {"author": "Dan Michael Hegg\u00f8", "author_email": "danmichaelo@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Text Processing :: Markup"], "description": "mwtemplates\n==================\n\n.. image:: http://img.shields.io/travis/danmichaelo/mwtemplates.svg?style=flat\n   :target: https://travis-ci.org/danmichaelo/mwtemplates\n   :alt: Build status\n\n.. image:: http://img.shields.io/coveralls/danmichaelo/mwtemplates.svg?style=flat\n   :target: https://coveralls.io/r/danmichaelo/mwtemplates\n   :alt: Test coverage\n\n.. image:: https://pypip.in/version/mwtemplates/badge.svg?style=flat\n   :target: https://pypi.python.org/pypi/mwtemplates/\n   :alt: Latest Version\n\n.. image:: https://pypip.in/py_versions/mwtemplates/badge.svg?style=flat\n   :target: https://pypi.python.org/pypi/mwtemplates/\n   :alt: Supported Python versions\n\n.. image:: https://pypip.in/download/mwtemplates/badge.svg?period=month&style=flat\n   :target: https://pypi.python.org/pypi/mwtemplates/\n   :alt: Downloads\n\nmwtemplates is a MediaWiki wikitext template parser and editor, based on a Python rewrite of the MediaWiki preprocessorDOM.php.\nTested with python 2.7, 3.3, 3.4, 3.5\n\n\nInstallation\n-------------------\n\nThe package is on `PyPI <https://pypi.python.org/pypi/mwtemplates>`_, so you can install it\nusing `pip`, `easy_install` or similar:\n\n.. code-block:: console\n\n   $ pip install -U mwtemplates\n\nOr you can grab the latest zip from `releases <https://github.com/danmichaelo/mwtemplates/releases>`_.\n\nIntroduction\n------------\n\nLet's start by importing `TemplateEditor` and giving it some wikitext to eat:\n\n.. code-block:: python\n\n    >>> from mwtemplates import TemplateEditor\n    >>> txt = u\"\"\"{{Infobox cheese\n    ... | name = Mozzarella\n    ... | protein = 7\n    ... }}\n    ... Mozzarella is a cheese\u2026{{tr}}\"\"\"\n    >>> te = TemplateEditor(txt)\n\nFirst, we can see what templates the editor found in the text:\n\n.. code-block:: python\n\n    >>> te.templates\n    [<Template:\"Infobox cheese\" at line 2>, <Template:\"Tr\" at line 6>]\n\nEach template is an instance of a `Template` class. Also notice that template names are normalized by upper-casing the first character. Now, we can try investigating the `Infobox cheese` template:\n\n.. code-block:: python\n\n    >>> te.templates['Infobox cheese']\n    [<Template:\"Infobox cheese\" at line 2>]\n\nSince there can be several instances of the same template, an array is always returned, and so we need to ask for `te.templates['Infobox cheese'][0]` to get the actual `Template`. To get the parameters:\n\n.. code-block:: python\n\n    >>> te.templates['Infobox cheese'][0].parameters\n    <Parameters: name=\"Mozzarella\", protein=\"10\">\n\nLet's say we want to change the value of the `protein` parameter from 10 to 7. We then use\nthe `wikitext()` method to return our new wikitext:\n\n.. code-block:: python\n\n    >>> te.templates['Infobox cheese'][0].parameters['protein'] = 7\n    >>> print te.wikitext()\n    {{Infobox cheese\n    | name = Mozzarella\n    | protein = 10\n    }}\n    Mozzarella is a cheese\u2026{{tr}}\n\nNotice that formatting is preserved. We could now go and add a new parameter like so:\n\n.. code-block:: python\n\n    >>> te.templates['Infobox cheese'][0].parameters['fat'] = 25\n    >>> print te.wikitext()\n    {{Infobox cheese\n    | name = Mozzarella\n    | protein = 7\n    | fat = 25\n    }}\n    Mozzarella is a cheese\u2026{{tr}}\n\n\nUsage with mwclient to edit pages on Wikipedia\n----------------------------------------------\n\nUpdating a page on Wikipedia using `mwclient <https://github.com/mwclient/mwclient>`_\n\n.. code-block:: python\n\n   from mwclient import Site\n   from mwtemplates import TemplateEditor\n\n   site = Site('en.wikipedia.org')\n   site.login('USERNAME', 'PASSWORD')\n   page = site.pages['SOME_PAGE']\n   te = TemplateEditor(page.text())\n   if 'SOME_TEMPLATE' in page.templates:\n      tpl = te.templates['SOME_TEMPLATE'][0]\n      tpl.parameters['test'] = 'Hello'\n   page.save(te.wikitext(), summary='...')\n\nRemoving a template argument:\n\n.. code-block:: python\n\n    from mwtemplates import TemplateEditor\n    te = TemplateEditor(u\"Hello {{mytpl | a=2 | b=3 | c=4 }} world\")\n    te.templates['mytpl'].parameters.remove('b')\n\nRemoving the first instance of a template:\n\n.. code-block:: python\n\n    from mwtemplates import TemplateEditor\n    te = TemplateEditor(u\"Hello {{mytpl}} world {{mytpl}}\")\n    te.templates['mytpl'][0].remove()\n\n\nContributing\n------------\n\nPull requests are very welcome. Please run tests before submitting:\n\n.. code-block:: console\n\n    $ python setup.py test", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/danmichaelo/mwtemplates", "keywords": "mediawiki wikipedia", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "mwtemplates", "package_url": "https://pypi.org/project/mwtemplates/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mwtemplates/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/danmichaelo/mwtemplates"}, "release_url": "https://pypi.org/project/mwtemplates/0.4.0/", "requires_dist": null, "requires_python": null, "summary": "MediaWiki template parser and editor", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/danmichaelo/mwtemplates\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fe088bb3a08d6aeccc95ff1d09e3c1d1543ca397/687474703a2f2f696d672e736869656c64732e696f2f7472617669732f64616e6d69636861656c6f2f6d7774656d706c617465732e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://coveralls.io/r/danmichaelo/mwtemplates\" rel=\"nofollow\"><img alt=\"Test coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9f9206ba56bb5da6f244bae6747fd579abeaafd1/687474703a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f64616e6d69636861656c6f2f6d7774656d706c617465732e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://pypi.python.org/pypi/mwtemplates/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a279711216e492dbf7d893db766dbf295bcb1b9e/68747470733a2f2f70797069702e696e2f76657273696f6e2f6d7774656d706c617465732f62616467652e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://pypi.python.org/pypi/mwtemplates/\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5a8df4b0e17d60efb6f8367da0157f919e551783/68747470733a2f2f70797069702e696e2f70795f76657273696f6e732f6d7774656d706c617465732f62616467652e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://pypi.python.org/pypi/mwtemplates/\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01a10b20d4dee1817bbade5a7730f1116896581b/68747470733a2f2f70797069702e696e2f646f776e6c6f61642f6d7774656d706c617465732f62616467652e7376673f706572696f643d6d6f6e7468267374796c653d666c6174\"></a>\n<p>mwtemplates is a MediaWiki wikitext template parser and editor, based on a Python rewrite of the MediaWiki preprocessorDOM.php.\nTested with python 2.7, 3.3, 3.4, 3.5</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The package is on <a href=\"https://pypi.python.org/pypi/mwtemplates\" rel=\"nofollow\">PyPI</a>, so you can install it\nusing <cite>pip</cite>, <cite>easy_install</cite> or similar:</p>\n<pre><span class=\"gp\">$</span> pip install -U mwtemplates\n</pre>\n<p>Or you can grab the latest zip from <a href=\"https://github.com/danmichaelo/mwtemplates/releases\" rel=\"nofollow\">releases</a>.</p>\n</div>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>Let\u2019s start by importing <cite>TemplateEditor</cite> and giving it some wikitext to eat:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">mwtemplates</span> <span class=\"kn\">import</span> <span class=\"n\">TemplateEditor</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">txt</span> <span class=\"o\">=</span> <span class=\"sa\">u</span><span class=\"s2\">\"\"\"{{Infobox cheese\n... | name = Mozzarella\n... | protein = 7\n... }}\n... Mozzarella is a cheese\u2026{{tr}}\"\"\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">te</span> <span class=\"o\">=</span> <span class=\"n\">TemplateEditor</span><span class=\"p\">(</span><span class=\"n\">txt</span><span class=\"p\">)</span>\n</pre>\n<p>First, we can see what templates the editor found in the text:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">te</span><span class=\"o\">.</span><span class=\"n\">templates</span>\n<span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">Template</span><span class=\"p\">:</span><span class=\"s2\">\"Infobox cheese\"</span> <span class=\"n\">at</span> <span class=\"n\">line</span> <span class=\"mi\">2</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Template</span><span class=\"p\">:</span><span class=\"s2\">\"Tr\"</span> <span class=\"n\">at</span> <span class=\"n\">line</span> <span class=\"mi\">6</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n</pre>\n<p>Each template is an instance of a <cite>Template</cite> class. Also notice that template names are normalized by upper-casing the first character. Now, we can try investigating the <cite>Infobox cheese</cite> template:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">te</span><span class=\"o\">.</span><span class=\"n\">templates</span><span class=\"p\">[</span><span class=\"s1\">'Infobox cheese'</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">Template</span><span class=\"p\">:</span><span class=\"s2\">\"Infobox cheese\"</span> <span class=\"n\">at</span> <span class=\"n\">line</span> <span class=\"mi\">2</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n</pre>\n<p>Since there can be several instances of the same template, an array is always returned, and so we need to ask for <cite>te.templates[\u2018Infobox cheese\u2019][0]</cite> to get the actual <cite>Template</cite>. To get the parameters:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">te</span><span class=\"o\">.</span><span class=\"n\">templates</span><span class=\"p\">[</span><span class=\"s1\">'Infobox cheese'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">parameters</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Parameters</span><span class=\"p\">:</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Mozzarella\"</span><span class=\"p\">,</span> <span class=\"n\">protein</span><span class=\"o\">=</span><span class=\"s2\">\"10\"</span><span class=\"o\">&gt;</span>\n</pre>\n<p>Let\u2019s say we want to change the value of the <cite>protein</cite> parameter from 10 to 7. We then use\nthe <cite>wikitext()</cite> method to return our new wikitext:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">te</span><span class=\"o\">.</span><span class=\"n\">templates</span><span class=\"p\">[</span><span class=\"s1\">'Infobox cheese'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">[</span><span class=\"s1\">'protein'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">7</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span> <span class=\"n\">te</span><span class=\"o\">.</span><span class=\"n\">wikitext</span><span class=\"p\">()</span>\n<span class=\"p\">{{</span><span class=\"n\">Infobox</span> <span class=\"n\">cheese</span>\n<span class=\"o\">|</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">Mozzarella</span>\n<span class=\"o\">|</span> <span class=\"n\">protein</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n<span class=\"p\">}}</span>\n<span class=\"n\">Mozzarella</span> <span class=\"ow\">is</span> <span class=\"n\">a</span> <span class=\"n\">cheese</span><span class=\"err\">\u2026</span><span class=\"p\">{{</span><span class=\"n\">tr</span><span class=\"p\">}}</span>\n</pre>\n<p>Notice that formatting is preserved. We could now go and add a new parameter like so:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">te</span><span class=\"o\">.</span><span class=\"n\">templates</span><span class=\"p\">[</span><span class=\"s1\">'Infobox cheese'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">[</span><span class=\"s1\">'fat'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">25</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span> <span class=\"n\">te</span><span class=\"o\">.</span><span class=\"n\">wikitext</span><span class=\"p\">()</span>\n<span class=\"p\">{{</span><span class=\"n\">Infobox</span> <span class=\"n\">cheese</span>\n<span class=\"o\">|</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">Mozzarella</span>\n<span class=\"o\">|</span> <span class=\"n\">protein</span> <span class=\"o\">=</span> <span class=\"mi\">7</span>\n<span class=\"o\">|</span> <span class=\"n\">fat</span> <span class=\"o\">=</span> <span class=\"mi\">25</span>\n<span class=\"p\">}}</span>\n<span class=\"n\">Mozzarella</span> <span class=\"ow\">is</span> <span class=\"n\">a</span> <span class=\"n\">cheese</span><span class=\"err\">\u2026</span><span class=\"p\">{{</span><span class=\"n\">tr</span><span class=\"p\">}}</span>\n</pre>\n</div>\n<div id=\"usage-with-mwclient-to-edit-pages-on-wikipedia\">\n<h2>Usage with mwclient to edit pages on Wikipedia</h2>\n<p>Updating a page on Wikipedia using <a href=\"https://github.com/mwclient/mwclient\" rel=\"nofollow\">mwclient</a></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mwclient</span> <span class=\"kn\">import</span> <span class=\"n\">Site</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mwtemplates</span> <span class=\"kn\">import</span> <span class=\"n\">TemplateEditor</span>\n\n<span class=\"n\">site</span> <span class=\"o\">=</span> <span class=\"n\">Site</span><span class=\"p\">(</span><span class=\"s1\">'en.wikipedia.org'</span><span class=\"p\">)</span>\n<span class=\"n\">site</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span><span class=\"s1\">'USERNAME'</span><span class=\"p\">,</span> <span class=\"s1\">'PASSWORD'</span><span class=\"p\">)</span>\n<span class=\"n\">page</span> <span class=\"o\">=</span> <span class=\"n\">site</span><span class=\"o\">.</span><span class=\"n\">pages</span><span class=\"p\">[</span><span class=\"s1\">'SOME_PAGE'</span><span class=\"p\">]</span>\n<span class=\"n\">te</span> <span class=\"o\">=</span> <span class=\"n\">TemplateEditor</span><span class=\"p\">(</span><span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">())</span>\n<span class=\"k\">if</span> <span class=\"s1\">'SOME_TEMPLATE'</span> <span class=\"ow\">in</span> <span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">templates</span><span class=\"p\">:</span>\n   <span class=\"n\">tpl</span> <span class=\"o\">=</span> <span class=\"n\">te</span><span class=\"o\">.</span><span class=\"n\">templates</span><span class=\"p\">[</span><span class=\"s1\">'SOME_TEMPLATE'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n   <span class=\"n\">tpl</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">[</span><span class=\"s1\">'test'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'Hello'</span>\n<span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">te</span><span class=\"o\">.</span><span class=\"n\">wikitext</span><span class=\"p\">(),</span> <span class=\"n\">summary</span><span class=\"o\">=</span><span class=\"s1\">'...'</span><span class=\"p\">)</span>\n</pre>\n<p>Removing a template argument:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mwtemplates</span> <span class=\"kn\">import</span> <span class=\"n\">TemplateEditor</span>\n<span class=\"n\">te</span> <span class=\"o\">=</span> <span class=\"n\">TemplateEditor</span><span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s2\">\"Hello {{mytpl | a=2 | b=3 | c=4 }} world\"</span><span class=\"p\">)</span>\n<span class=\"n\">te</span><span class=\"o\">.</span><span class=\"n\">templates</span><span class=\"p\">[</span><span class=\"s1\">'mytpl'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"s1\">'b'</span><span class=\"p\">)</span>\n</pre>\n<p>Removing the first instance of a template:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mwtemplates</span> <span class=\"kn\">import</span> <span class=\"n\">TemplateEditor</span>\n<span class=\"n\">te</span> <span class=\"o\">=</span> <span class=\"n\">TemplateEditor</span><span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s2\">\"Hello {{mytpl}} world {{mytpl}}\"</span><span class=\"p\">)</span>\n<span class=\"n\">te</span><span class=\"o\">.</span><span class=\"n\">templates</span><span class=\"p\">[</span><span class=\"s1\">'mytpl'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Pull requests are very welcome. Please run tests before submitting:</p>\n<pre><span class=\"gp\">$</span> python setup.py <span class=\"nb\">test</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2004613, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "521fc1e2de2c90b3eef63deac4abe480", "sha256": "b6142d30fed1dd6e01583ffb24c93275e22a85937089e1147eafe4e870a21b4c"}, "downloads": -1, "filename": "mwtemplates-0.1.tar.gz", "has_sig": false, "md5_digest": "521fc1e2de2c90b3eef63deac4abe480", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14236, "upload_time": "2013-05-13T19:48:55", "upload_time_iso_8601": "2013-05-13T19:48:55.078427Z", "url": "https://files.pythonhosted.org/packages/37/89/1c6d1f85914bc8d815d102569820793fe33b25df02aef94f83afa88622d0/mwtemplates-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "473bd6320a104d8250865641c4bded34", "sha256": "358771321ff897134862f1960c242bfac5d150310942462f0841aae22dd125ec"}, "downloads": -1, "filename": "mwtemplates-0.2.tar.gz", "has_sig": false, "md5_digest": "473bd6320a104d8250865641c4bded34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14489, "upload_time": "2013-09-01T13:33:00", "upload_time_iso_8601": "2013-09-01T13:33:00.664620Z", "url": "https://files.pythonhosted.org/packages/78/de/2a507d1b613fb4fbe536236647a3117bae55c61d8a0c3f7bdbf30f49e252/mwtemplates-0.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "22b69b6ffdf9bf48b1b7bedb9b2488fb", "sha256": "7adf9d7ae426961b9f6cd831f2d9d0e4b356bd17aa84381b6b698c75412d8e17"}, "downloads": -1, "filename": "mwtemplates-0.3.0.tar.gz", "has_sig": false, "md5_digest": "22b69b6ffdf9bf48b1b7bedb9b2488fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10885, "upload_time": "2014-08-02T12:49:54", "upload_time_iso_8601": "2014-08-02T12:49:54.914545Z", "url": "https://files.pythonhosted.org/packages/41/b0/64708e4fe4bb1d7821a97cbd80245d1604db9ec1d71e3eecd98c55807041/mwtemplates-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "83c658d21cf4130f0f2de704ec67b788", "sha256": "d769a96d81c2e0cfe880020513abc227d770cfb341d8ff20f1520c0f95cad5da"}, "downloads": -1, "filename": "mwtemplates-0.3.1.tar.gz", "has_sig": false, "md5_digest": "83c658d21cf4130f0f2de704ec67b788", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10961, "upload_time": "2014-10-25T16:59:44", "upload_time_iso_8601": "2014-10-25T16:59:44.401587Z", "url": "https://files.pythonhosted.org/packages/d5/37/5f0a78274316bebdebedd9efd190197270fb2f27033003f62fb297270e62/mwtemplates-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "e1e41bade4732fb5022feb3d05e22174", "sha256": "f483caf5d95d9dfe5eb1da48dc0d3c9beec551308674329ea60bda8858413b98"}, "downloads": -1, "filename": "mwtemplates-0.3.2.tar.gz", "has_sig": false, "md5_digest": "e1e41bade4732fb5022feb3d05e22174", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10987, "upload_time": "2014-10-25T17:12:01", "upload_time_iso_8601": "2014-10-25T17:12:01.524834Z", "url": "https://files.pythonhosted.org/packages/ee/7d/faa12ec725f84908311004c1acce090413e8ebea71e77590070cb86f0a51/mwtemplates-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "8e8b147eebd779aedbf7631d6943fb18", "sha256": "a680d85ad4e6454af8588b033086cafd9c8397421a3a3342f76de23a137686a3"}, "downloads": -1, "filename": "mwtemplates-0.3.3.tar.gz", "has_sig": false, "md5_digest": "8e8b147eebd779aedbf7631d6943fb18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11778, "upload_time": "2014-11-22T22:04:17", "upload_time_iso_8601": "2014-11-22T22:04:17.739162Z", "url": "https://files.pythonhosted.org/packages/c0/50/99ba4e0005c0f496b04120b55268b77ec32bea4e1348b1893829eb34919c/mwtemplates-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "041341197f02c68613c2bad9a33291d2", "sha256": "0a38079f1ab9fb78b00a653ee41a6fe7ae2de4cced6bc0e14f6810810141e71f"}, "downloads": -1, "filename": "mwtemplates-0.3.4.tar.gz", "has_sig": false, "md5_digest": "041341197f02c68613c2bad9a33291d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11975, "upload_time": "2015-12-22T01:01:09", "upload_time_iso_8601": "2015-12-22T01:01:09.911787Z", "url": "https://files.pythonhosted.org/packages/45/ec/82ba0652bc2d99a38da4496aec0d74977c467525e0c4945d2755c2532f25/mwtemplates-0.3.4.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "6ad21d1045fb3fecb2e456422b910e6f", "sha256": "a265958c469d33d7609f91a263b321dee8afac89ba57d918b03ee59eba2a8a28"}, "downloads": -1, "filename": "mwtemplates-0.4.0.tar.gz", "has_sig": false, "md5_digest": "6ad21d1045fb3fecb2e456422b910e6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12201, "upload_time": "2016-03-13T17:53:18", "upload_time_iso_8601": "2016-03-13T17:53:18.503793Z", "url": "https://files.pythonhosted.org/packages/df/24/0fb60d8b32695def78bcd27adf749c178638a42dc3de4ea859a4b15290f2/mwtemplates-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6ad21d1045fb3fecb2e456422b910e6f", "sha256": "a265958c469d33d7609f91a263b321dee8afac89ba57d918b03ee59eba2a8a28"}, "downloads": -1, "filename": "mwtemplates-0.4.0.tar.gz", "has_sig": false, "md5_digest": "6ad21d1045fb3fecb2e456422b910e6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12201, "upload_time": "2016-03-13T17:53:18", "upload_time_iso_8601": "2016-03-13T17:53:18.503793Z", "url": "https://files.pythonhosted.org/packages/df/24/0fb60d8b32695def78bcd27adf749c178638a42dc3de4ea859a4b15290f2/mwtemplates-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:56 2020"}