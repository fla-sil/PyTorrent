{"info": {"author": "007gzs", "author_email": "007gzs@sina.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Build Tools"], "description": "#############################\nDjango REST_framework APIView\n#############################\n.. image:: https://travis-ci.org/007gzs/django_restframework_apiview.svg?branch=master\n       :target: https://travis-ci.org/007gzs/django_restframework_apiview\n\n***********\nScreenshots\n***********\n.. image:: https://github.com/007gzs/django_restframework_apiview/raw/master/img/demo.jpg\n\n****************\nUse in your app\n****************\nInstall using pip::\n\n    pip install django_restframework_apiview\n\nAdd 'apiview' to your INSTALLED_APPS setting::\n\n    INSTALLED_APPS = (\n        ...\n        'apiview',\n    )\n\nJSONP Renderer And debug apiview with paramslist::\n\n    REST_FRAMEWORK = {\n        ...\n        'DEFAULT_RENDERER_CLASSES': [\n            ...\n            'apiview.renderers.JSONPRenderer',\n        ],\n    }\n    if DEBUG:\n        REST_FRAMEWORK['DEFAULT_RENDERER_CLASSES'].append('apiview.renderers.BrowsableAPIRenderer')\n\nAdd error code to settings.py::\n    \n    ERROR_CODE_DEFINE = (\n        ('ERR_AUTH_NOLOGIN',            10001,  'No login'),\n        ('ERR_AUTH_USER_EXISTS',        10002,  'User name has exists'),\n        ('ERR_AUTH_USER_NOT_EXISTS',    10003,  'User not exists'),\n        ('ERR_AUTH_PASSWORD',           10005,  'Password error'),\n    )\n\nedit myapp/views.py::\n    \n    #! usr/bin/env python\n    # encoding: utf-8\n    from __future__ import absolute_import, unicode_literals\n\n    from django.db import IntegrityError, transaction\n    from django.contrib.auth import authenticate, login\n    from django.contrib.auth.models import User\n    from apiview.err_code import ErrCode\n    from apiview.exceptions import CustomError\n    from apiview.view import APIView\n    from apiview.views import ViewSite\n    from apiview.views import fields\n\n\n    site = ViewSite(name='base', app_name='base')\n\n\n    class APIBase(APIView):\n\n        class Meta:\n            path = '/'\n            param_fields = (\n                ('channel', fields.CharField(help_text='App Channel', required=False)),\n                ('version', fields.CharField(help_text='App Version', required=False)),\n            )\n\n\n    class UserAPIBase(APIBase):\n\n        def check_user_permission(self, request):\n            user = request.user\n            if not user.is_authenticated() or not isinstance(user, User):\n                raise CustomError(ErrCode.ERR_AUTH_NOLOGIN)\n\n        def view(self, request, *args, **kwargs):\n            self.check_user_permission(request)\n            return super(APIBase, self).view(request, *args, **kwargs)\n\n        class Meta:\n            path = '/user'\n\n\n    @site\n    class Login(APIBase):\n\n        name = '\u7528\u6237\u767b\u9646'\n\n        def get_context(self, request, *args, **kwargs):\n            user = authenticate(username=request.params.username, password=request.params.password)\n            if user is None:\n                raise CustomError(ErrCode.ERR_AUTH_PASSWORD)\n            login(request, user)\n            return self.get_default_context(user_info={'username':request.user.username, 'email':request.user.email})\n\n        class Meta:\n            path = 'user/login'\n            param_fields = (\n                ('username', fields.CharField(help_text='\u7528\u6237\u540d')),\n                ('password', fields.CharField(help_text='\u5bc6\u7801')),\n            )\n\n\n    @site\n    class Register(APIBase):\n\n        name = '\u7528\u6237\u6ce8\u518c'\n\n        def get_context(self, request, *args, **kwargs):\n            try:\n                user = User.objects.create_user(request.params.username, request.params.email, request.params.password)\n            except IntegrityError:\n                raise CustomError(ErrCode.ERR_AUTH_USER_EXISTS)\n            return self.get_default_context()\n\n        class Meta:\n            path = 'user/register'\n            param_fields = (\n                ('username', fields.RegexField(help_text='\u7528\u6237\u540d', regex=r'^[a-zA-Z0-9_]{3,10}$')),\n                ('password', fields.CharField(help_text='\u5bc6\u7801')),\n                ('email', fields.EmailField(help_text='Email')),\n            )\n\n    @site\n    class Info(UserAPIBase):\n\n        name = '\u7528\u6237\u4fe1\u606f'\n\n        def get_context(self, request, *args, **kwargs):\n            user_info = {'username':request.user.username, 'email':request.user.email}\n\n            return self.get_default_context(user_info=user_info)\n\n\n    @site\n    class Logout(UserAPIBase):\n\n        name = '\u9000\u51fa\u767b\u9646'\n\n        def get_context(self, request, *args, **kwargs):\n            logout(request)\n\n            return self.get_default_context()\n\n    urlpatterns = site.urlpatterns\n\nadd to urls.py end:\n\n    urlpatterns.append(url(r'^test/', include(\"myapp.views\")))\n\n*******\nExample\n*******\nrun example::\n\n    git clone https://github.com/007gzs/django_restframework_apiview.git\n    cd django_restframework_apiview/example\n    pip install -r requirements.txt\n    python manage.py makemigrations\n    python manage.py migrate\n    python manage.py runserver\n    open http://127.0.0.1:8000/example.html in browser\n\n\napi demo::\n    http://127.0.0.1:8000/example/param_filed_info", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/007gzs/django_restframework_apiview", "keywords": "django rest framework api view", "license": "LGPL v3", "maintainer": "", "maintainer_email": "", "name": "apiview", "package_url": "https://pypi.org/project/apiview/", "platform": "", "project_url": "https://pypi.org/project/apiview/", "project_urls": {"Homepage": "https://github.com/007gzs/django_restframework_apiview"}, "release_url": "https://pypi.org/project/apiview/1.3.25/", "requires_dist": null, "requires_python": "", "summary": "Django REST_framework APIView", "version": "1.3.25", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/007gzs/django_restframework_apiview\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/007gzs/django_restframework_apiview.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/37f76cf1332fd87363ba6b9d6e9c9ba0a0705ba9/68747470733a2f2f7472617669732d63692e6f72672f303037677a732f646a616e676f5f726573746672616d65776f726b5f617069766965772e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"screenshots\">\n<h2>Screenshots</h2>\n<img alt=\"https://github.com/007gzs/django_restframework_apiview/raw/master/img/demo.jpg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/18da647d2474c7e8ed6e9311868fe31e8668c078/68747470733a2f2f6769746875622e636f6d2f303037677a732f646a616e676f5f726573746672616d65776f726b5f617069766965772f7261772f6d61737465722f696d672f64656d6f2e6a7067\">\n</div>\n<div id=\"use-in-your-app\">\n<h2>Use in your app</h2>\n<p>Install using pip:</p>\n<pre>pip install django_restframework_apiview\n</pre>\n<p>Add \u2018apiview\u2019 to your INSTALLED_APPS setting:</p>\n<pre>INSTALLED_APPS = (\n    ...\n    'apiview',\n)\n</pre>\n<p>JSONP Renderer And debug apiview with paramslist:</p>\n<pre>REST_FRAMEWORK = {\n    ...\n    'DEFAULT_RENDERER_CLASSES': [\n        ...\n        'apiview.renderers.JSONPRenderer',\n    ],\n}\nif DEBUG:\n    REST_FRAMEWORK['DEFAULT_RENDERER_CLASSES'].append('apiview.renderers.BrowsableAPIRenderer')\n</pre>\n<p>Add error code to settings.py:</p>\n<pre>ERROR_CODE_DEFINE = (\n    ('ERR_AUTH_NOLOGIN',            10001,  'No login'),\n    ('ERR_AUTH_USER_EXISTS',        10002,  'User name has exists'),\n    ('ERR_AUTH_USER_NOT_EXISTS',    10003,  'User not exists'),\n    ('ERR_AUTH_PASSWORD',           10005,  'Password error'),\n)\n</pre>\n<p>edit myapp/views.py:</p>\n<pre>#! usr/bin/env python\n# encoding: utf-8\nfrom __future__ import absolute_import, unicode_literals\n\nfrom django.db import IntegrityError, transaction\nfrom django.contrib.auth import authenticate, login\nfrom django.contrib.auth.models import User\nfrom apiview.err_code import ErrCode\nfrom apiview.exceptions import CustomError\nfrom apiview.view import APIView\nfrom apiview.views import ViewSite\nfrom apiview.views import fields\n\n\nsite = ViewSite(name='base', app_name='base')\n\n\nclass APIBase(APIView):\n\n    class Meta:\n        path = '/'\n        param_fields = (\n            ('channel', fields.CharField(help_text='App Channel', required=False)),\n            ('version', fields.CharField(help_text='App Version', required=False)),\n        )\n\n\nclass UserAPIBase(APIBase):\n\n    def check_user_permission(self, request):\n        user = request.user\n        if not user.is_authenticated() or not isinstance(user, User):\n            raise CustomError(ErrCode.ERR_AUTH_NOLOGIN)\n\n    def view(self, request, *args, **kwargs):\n        self.check_user_permission(request)\n        return super(APIBase, self).view(request, *args, **kwargs)\n\n    class Meta:\n        path = '/user'\n\n\n@site\nclass Login(APIBase):\n\n    name = '\u7528\u6237\u767b\u9646'\n\n    def get_context(self, request, *args, **kwargs):\n        user = authenticate(username=request.params.username, password=request.params.password)\n        if user is None:\n            raise CustomError(ErrCode.ERR_AUTH_PASSWORD)\n        login(request, user)\n        return self.get_default_context(user_info={'username':request.user.username, 'email':request.user.email})\n\n    class Meta:\n        path = 'user/login'\n        param_fields = (\n            ('username', fields.CharField(help_text='\u7528\u6237\u540d')),\n            ('password', fields.CharField(help_text='\u5bc6\u7801')),\n        )\n\n\n@site\nclass Register(APIBase):\n\n    name = '\u7528\u6237\u6ce8\u518c'\n\n    def get_context(self, request, *args, **kwargs):\n        try:\n            user = User.objects.create_user(request.params.username, request.params.email, request.params.password)\n        except IntegrityError:\n            raise CustomError(ErrCode.ERR_AUTH_USER_EXISTS)\n        return self.get_default_context()\n\n    class Meta:\n        path = 'user/register'\n        param_fields = (\n            ('username', fields.RegexField(help_text='\u7528\u6237\u540d', regex=r'^[a-zA-Z0-9_]{3,10}$')),\n            ('password', fields.CharField(help_text='\u5bc6\u7801')),\n            ('email', fields.EmailField(help_text='Email')),\n        )\n\n@site\nclass Info(UserAPIBase):\n\n    name = '\u7528\u6237\u4fe1\u606f'\n\n    def get_context(self, request, *args, **kwargs):\n        user_info = {'username':request.user.username, 'email':request.user.email}\n\n        return self.get_default_context(user_info=user_info)\n\n\n@site\nclass Logout(UserAPIBase):\n\n    name = '\u9000\u51fa\u767b\u9646'\n\n    def get_context(self, request, *args, **kwargs):\n        logout(request)\n\n        return self.get_default_context()\n\nurlpatterns = site.urlpatterns\n</pre>\n<p>add to urls.py end:</p>\n<blockquote>\nurlpatterns.append(url(r\u2019^test/\u2019, include(\u201cmyapp.views\u201d)))</blockquote>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>run example:</p>\n<pre>git clone https://github.com/007gzs/django_restframework_apiview.git\ncd django_restframework_apiview/example\npip install -r requirements.txt\npython manage.py makemigrations\npython manage.py migrate\npython manage.py runserver\nopen http://127.0.0.1:8000/example.html in browser\n</pre>\n<dl>\n<dt>api demo::</dt>\n<dd><a href=\"http://127.0.0.1:8000/example/param_filed_info\" rel=\"nofollow\">http://127.0.0.1:8000/example/param_filed_info</a></dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 6442117, "releases": {"1.3.24": [{"comment_text": "", "digests": {"md5": "0d3d1bbf8f62db92b4d5e99e348a94d3", "sha256": "cdd56c2f040ccd0efa502473aa774513f4e1b7116643e0832555cf77f497594f"}, "downloads": -1, "filename": "apiview-1.3.24.tar.gz", "has_sig": false, "md5_digest": "0d3d1bbf8f62db92b4d5e99e348a94d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60832, "upload_time": "2020-01-06T10:34:57", "upload_time_iso_8601": "2020-01-06T10:34:57.545512Z", "url": "https://files.pythonhosted.org/packages/54/bc/da86c709054ae3107d163db0f7ff02b9a054cef00c904f6a1e42b9c214dc/apiview-1.3.24.tar.gz", "yanked": false}], "1.3.25": [{"comment_text": "", "digests": {"md5": "9c39b49544e1da7835879d02552b8360", "sha256": "1b5445f16fbc5fbe83da5ef355d2251d1e19abee44d35824d90ccc8b67bc387c"}, "downloads": -1, "filename": "apiview-1.3.25.tar.gz", "has_sig": false, "md5_digest": "9c39b49544e1da7835879d02552b8360", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60884, "upload_time": "2020-01-13T02:43:40", "upload_time_iso_8601": "2020-01-13T02:43:40.394814Z", "url": "https://files.pythonhosted.org/packages/df/b5/c3555e1fdabc4c424a3e1b36fe706007ef61f672063ef1f8f6e5d8b67d8d/apiview-1.3.25.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9c39b49544e1da7835879d02552b8360", "sha256": "1b5445f16fbc5fbe83da5ef355d2251d1e19abee44d35824d90ccc8b67bc387c"}, "downloads": -1, "filename": "apiview-1.3.25.tar.gz", "has_sig": false, "md5_digest": "9c39b49544e1da7835879d02552b8360", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60884, "upload_time": "2020-01-13T02:43:40", "upload_time_iso_8601": "2020-01-13T02:43:40.394814Z", "url": "https://files.pythonhosted.org/packages/df/b5/c3555e1fdabc4c424a3e1b36fe706007ef61f672063ef1f8f6e5d8b67d8d/apiview-1.3.25.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:44 2020"}