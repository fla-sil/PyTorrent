{"info": {"author": "Yuri Pirola", "author_email": "yuri.pirola@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "by `Yuri Pirola <http://algolab.eu/pirola>`_\n\nStarted: September 27, 2010\n\nCurrent release: **2.1.5** (March 21, 2016)\n\n--------------\n\nIntroduction\n------------\n\nThis program is based on a reduction of the *Haplotype Configuration\nwith Recombinations and Errors* problem to *Boolean Satisfiability*,\nwhich is then solved by a SAT solver. A haplotype configuration is\nfinally recovered from the satisfying assignment.\n\nThe algorithm is described in the following papers:\n\nYuri Pirola, Gianluca Della Vedova, Stefano Biffani, Alessandra Stella,\nand Paola Bonizzoni. *A fast and practical approach to genotype phasing\nand imputation on a pedigree with erroneous and incomplete information*.\nIEEE/ACM Transactions on Computational Biology and Bioinformatics\n(2012). `Link <http://dx.doi.org/10.1109/TCBB.2012.100>`__\n\nYuri Pirola, Gianluca Della Vedova, Stefano Biffani, Alessandra Stella,\nand Paola Bonizzoni. *A fast and practical approach to genotype phasing\nand imputation on a pedigree with erroneous and incomplete information*.\nIn: Proc. of IEEE 2nd International Conference on Computational Advances\nin Bio and Medical Sciences, ICCABS 2012.\n`Link <http://dx.doi.org/10.1109/ICCABS.2012.6182643>`__\n\nDownload and Installation\n-------------------------\n\nreHC-\\* is currently distributed only on source form. It has been\ndeveloped on Ubuntu Linux machines (10.04 and later) and has been tested\non both 32 and 64 bit. The program should work on (or should be easily\nported to) on MacOS X but has not been tested and it is not supported on\nthis operating system.\n\nDependencies\n~~~~~~~~~~~~\n\n-  Python (>= 2.7)\n-  CMake (>= 2.8)\n-  GNU make\n-  Boost FileSystem, System, DateTime, ProgramOptions, IOStreams, and\n   other include-only libraries (tested with 1.42)\n-  Apache Log4cxx (tested with 0.10.0)\n\nAutomatic Download and Installation\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe easiest way for having reHC-\\* correctly installed on your machine\nis through `PyPI <https://pypi.python.org/pypi>`_ with the command:\n\n::\n\n    $ pip install -v reHCstar\n\n(Please be patient, because it can take some time to build the package.)\n\nIf ``pip`` is not available on your system (and you cannot install it\nfollowing `these\ninstructions <https://pip.pypa.io/en/latest/installing.html>`_, you can\nmanually download the reHC-\\* package from\nhttps://github.com/yp/reHCstar/tarball/master, unpack it in a directory\nof your choice, and then build it with the command:\n\n::\n\n    $ python setup.py install\n\nAlternatively, you can proceed with the manual download, compilation,\nand installation as detailed below.\n\nManual Download\n~~~~~~~~~~~~~~~\n\nreHC-\\* is developed on the ``yp/reHCstar`` Git repository hosted by\nGitHub. The repository can be explored using the GitHub web interface at\nhttps://github.com/yp/reHCstar.\n\nThe latest stable version of reHC-\\* can be downloaded in either\n`.tar.gz <https://github.com/yp/reHCstar/tarball/master>`_ or in\n`.zip <https://github.com/yp/reHCstar/zipball/master>`_ format. Previous\nstable releases can be downloaded from\nhttps://github.com/yp/reHCstar/archives/master.\n\nIt is also possible to clone the entire repository using the following\ncommand:\n\n::\n\n    $ git clone git://github.com/yp/reHCstar.git\n\nOr, if you have a GitHub account, you can fork the project from the\n`repository web page <https://github.com/yp/reHCstar>`_.\n\nManual Compilation\n~~~~~~~~~~~~~~~~~~\n\nThe program can be compiled by issuing the command at the command\nprompt:\n\n::\n\n    $ make STATUS=Release\n\nThe program can be compiled in three different variants:\n\n1. **with** an integrated SAT solver and **without** the ability to\n   invoke an external SAT solver. This is the default variant, and\n   should be the most efficient on both time and memory.\n2. **with** an integrated SAT solver and **with** the ability to invoke\n   an external SAT solver. This is the most flexible variant, but it is\n   also the variant that uses more time and memory than the others.\n3. **without** an integrated SAT solver but **with** the ability to\n   invoke an external SAT solver. This variant should be preferred when\n   one wants to use an external SAT solver, since it is more memory- and\n   time-efficient than the previous one.\n\nCurrently, the SAT solvers that can be directly integrated into reHC-\\*\nare `CryptoMiniSat v2.9.1 <http://gitorious.org/cryptominisat>`_ by Mate\nSoos and `MiniSat v2.2.0 <http://www.minisat.se/MiniSat.html>`_ by\nNiklas Een and Niklas Sorensson. reHC-\\* can interact (in the 2nd and\n3rd variants) with any SAT solver that follow the standard\n`requirements <http://www.satcompetition.org/2004/format-solvers2004.html>`_\nof the last SAT competitions. The variant can be specified by modifying\nthe file ``CMakeOptions.txt`` in the root directory. In particular, two\noptions have to be used to specify the variant:\n\n-  ``INTEGRATE_SAT_SOLVER``, which specifies if the SAT solver should be\n   integrated into reHC-\\*;\n-  ``DISABLE_EXTERNAL_SAT_SOLVERS``, which specifies if the invocation\n   of external SAT solvers is allowed.\n\nThe following combinations are allowed:\n\n-  ``INTEGRATE_SAT_SOLVER=ON`` and ``DISABLE_EXTERNAL_SAT_SOLVERS=ON``,\n   (**default**), which corresponds to the **first** variant;\n-  ``INTEGRATE_SAT_SOLVER=ON`` and ``DISABLE_EXTERNAL_SAT_SOLVERS=OFF``,\n   which corresponds to the **second** variant;\n-  ``INTEGRATE_SAT_SOLVER=OFF`` and\n   ``DISABLE_EXTERNAL_SAT_SOLVERS=OFF``, which corresponds to the\n   **third** variant.\n\nThe SAT solver that will be integrated (if ``INTEGRATE_SAT_SOLVER`` is\n``ON``) can be specified by setting ``USE_CRYPTOMINISAT`` or\n``USE_MINISAT`` to ``ON`` in the file ``CMakeOptions.txt``.\n\nBy default, reHC-\\* generates SAT instances in a augmented CNF format\nwhere the \"extended clauses\" can also be XORs of literals. The SAT\ninstance is generally smaller if XORs are allowed, represents better the\n\"internal structure\" of the Boolean formula, and *should be used* if it\nis supported by the SAT solver. The SAT solver embedded by default,\nCryptoMiniSat, supports this functionality, while MiniSat does not. If\nMiniSat is chosen instead of CryptoMiniSat by editing the file\n``CMakeOptions.txt``, then XOR-clauses are automatically disabled. To\ndisable the augmented CNF format, reHC-\\* *must be rebuilt* specifying\nthe preprocessor symbol ``AVOID_XOR_CLAUSES`` in the ``CXXFLAGS``. For\nexample, if the program is compiled in a bash shell in Linux, it\nsuffices the following command to enable the \"pure\" CNF format:\n\n::\n\n    $ CXXFLAGS=\"-DAVOID_XOR_CLAUSES\" make STATUS=Release\n\nUsage\n-----\n\nThe program takes as input a genotyped pedigree (with missing genotypes)\nand returns (if possible) a complete haplotype configuration with at\nmost *r* recombinations and *e* errors. (The file formats are described\nbelow.) Depending on the variant that has been compiled, the program\nworks in four different modes that have to be specified on the command\nline as program parameter:\n\n1. ``--create`` (short form ``-1``), that, given a genotyped pedigree,\n   creates the associated SAT instance. (Available only on variants *2*\n   and *3*.)\n2. ``--read`` (short form ``-2``), that, given a genotyped pedigree,\n   reads a satisfying model of the associated SAT instance (if such a\n   model exists) and computes the associated haplotype configuration.\n   (Available only on variants *2* and *3*.)\n3. ``--create-read`` (short form ``-3``), that, given a genotyped\n   pedigree, creates the associated SAT instance, invokes the external\n   SAT solver, reads a satisfying model of the SAT instance (if such a\n   model exists), and computes the associated haplotype configuration.\n   This mode essentially combines the previous two modes by\n   automatically invoking the external SAT solver. (Available only on\n   variants *2* and *3*.)\n4. ``--solve-internal`` (short form ``-4``), that, given a genotyped\n   pedigree, creates the associated SAT instance, uses the integrated\n   SAT solver for solving the instance, and, if the SAT instance is\n   satisfiable, computes the associated haplotype configuration.\n   (Available only on variant *1*.)\n\nThe following options are used to specify the input/output files:\n\n-  ``--pedigree`` (short form ``-p``), that specifies the file\n   containing the genotyped pedigree (input file);\n-  ``--sat`` (short form ``-s``), that specifies the file containing the\n   SAT instance associated with the genotyped pedigree (output file);\n-  ``--result`` (short form ``-r``), that specifies the file containing\n   the results computed by the external SAT solver for the SAT instance\n   associated with the genotyped pedigree (input file);\n-  ``--haplotypes`` (short form ``-h``), that specifies the file that\n   will contain the haplotype configuration of the genotyped pedigree\n   computed by reHC-\\* (output file);\n-  ``--assumptions`` (short form ``-a``), that specifies an *optional*\n   file that contains additional assumptions that *must* be satisfied by\n   the resulting haplotype configuration. Assumptions are specified one\n   for each row with the following syntax:\n\n   ::\n\n       <variable kind> <individual id> <locus> <value>\n\nWhere ``<variable kind>`` is one of ``sp`` (paternal source), ``sm``\n(maternal source), ``p`` (paternal allele), ``m`` (maternal allele),\n``rp`` (paternal recombination), ``rm`` (maternal recombination), and\n``e`` (genotyping error), ``<individual id>`` is the numerical\nidentifier of the individual (1-based), ``<locus>`` is the genotype\nlocus, and ``<value>`` is the boolean value (0/1) that the variable must\nhave. Please note that biallelic and multi-allelic loci are treated\ndifferently, thus they have different set of variables.\n\nFor the ``--create-read`` mode, the command-line that has to be used to\ninvoke the external SAT must be specified by using the ``--sat-cmdline``\n(short form ``-c``) program option. The strings ``%%INPUT%%`` and\n``%%OUTPUT%%`` are placeholders for, respectively, the input and the\noutput files of the SAT solver. If the SAT solver can read the SAT\ninstance from its standard input, then it is possible to write the SAT\ninstance to the solver's standard input by specifying the option\n``--pipe``. In this case, the placeholder ``%%INPUT%%`` will *not* be\nused.\n\nOptions for Recombinations and Errors\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBy default, reHC-\\* search for a haplotype configuration with zero\nrecombinations and zero errors. To enable recombinations in the\nhaplotyping process, the program options ``--global-recomb`` and either\n``--global-recomb-rate=XX`` or ``--global-recomb-number=YY`` *must be\nspecified*. Here ``XX`` is a number between ``0.0`` and ``1.0`` that\nrepresents the maximum number of recombinations *r* as a fraction of the\ntotal number of possible recombination loci, while ``YY`` is (directly)\nthe maximum number of recombinations *r*. Moreover, if option\n``--global-recomb`` is enabled and ``--global-recomb-number`` is used,\nit is also possible to search for a haplotype configuration with a given\nminimum number of recombinations by specifying the option\n``--global-recomb-min-number=ZZ``, where ``ZZ`` is the sought lower\nbound. This option should only be used to specify a lower bound that has\nbeen already proved since the resulting haplotype configuration could\ninduce unnecessary recombination in order to satisfy the given lower\nbound.\n\nSimilarly, to enable genotyping errors in the computed haplotype\nconfiguration, the program options ``--global-error`` and either\n``--global-error-rate=XX`` or ``--global-error-number=YY`` *must be\nspecified*. As before, ``XX`` is a number between ``0.0`` and ``1.0``\nthat represents the maximum number of errors *e* as a fraction of the\nnumber of non-missing genotypes, while ``YY`` is (directly) the maximum\nnumber of errors *e*.\n\nOther program options allow a finer control over the distribution of\nrecombinations and errors. Please refer to the help of the program (that\ncan be obtained by specifying the ``--help`` program option) for their\npresentation and explanation.\n\nOther Options\n~~~~~~~~~~~~~\n\nreHC-\\* can also read and write files compressed by GZip. The GZip\ncompression allows to save some space and, especially for large\ninstances and when an external SAT solver is used, it could reduce the\nrunning time, since it greatly reduces to time spent for I/O operations.\nIt is disabled by default since not all the SAT solvers support it.\nThree options regulates the GZip compression:\n\n-  ``--compress-input``, which enables the GZip compression of some\n   files that are read by reHC-\\* (currently only the ``--pedigree``\n   file);\n-  ``--compress-output``, which enables the GZip compression of some\n   files that are written by reHC-\\* (currently the ``--sat`` and\n   ``--haplotypes`` files);\n-  ``--compress`` (short form ``-z``), which is equivalent to specify\n   both ``--compress-input`` and ``--compress-output``;\n-  ``--compress-sat``, which enables the GZip compression only for the\n   file that contains the computed SAT instance.\n\nTemporary files of the ``--create-read`` mode are automatically removed\nby default. To keep them (for example, for manual inspection), the\nprogram option ``--keep`` (short form ``-k``) has to be specified.\n\nA summary of the available program options can be printed by invoking\nreHC-\\* with the ``--help`` (short form ``-?``) option.\n\nExample\n~~~~~~~\n\nFor example, if the genotyped pedigree is described in file\n``genotyped-pedigree.txt``, the following commands perform the complete\nhaplotype inference process (saving the resulting haplotype\nconfiguration in file ``haplotype-configuration.txt``).\n\nUsing the integrated SAT solver (variant *1* or *2*):\n\n::\n\n    $ ./bin/reHCstar -4  \\\n          -p genotyped-pedigree.txt  \\\n          -h haplotype-configuration.txt\n\nUsing an external SAT solver (variant *2* or *3*) with *manual*\ninvocation of the SAT solver:\n\n::\n\n    $ ./bin/reHCstar -1  \\\n          -p genotyped-pedigree.txt  \\\n          -s instance.cnf\n    # ...execution of the external SAT solver, assuming that\n    #    it writes the results in file sat-result.txt\n    $ ./bin/reHCstar -2  \\\n          -p genotyped-pedigree.txt  \\\n          -r sat-result.txt  \\\n          -h haplotype-configuration.txt\n\nUsing an external SAT solver (variant *2* or *3*) with *automatic*\ninvocation of the SAT solver:\n\n::\n\n    $ ./bin/reHCstar -3  \\\n          -p genotyped-pedigree.txt  \\\n          -h haplotype-configuration.txt  \\\n          -c \"./external-sat-solver %%INPUT%% %%OUTPUT%%\"\n\nOr, if the SAT solver reads the SAT instance from its standard input:\n\n::\n\n    $ ./bin/reHCstar -3  \\\n          -p genotyped-pedigree.txt  \\\n          -h haplotype-configuration.txt  \\\n          --pipe  \\\n          -c \"./external-sat-solver %%OUTPUT%%\"\n\nOptimization Version\n--------------------\n\nreHC-\\* also includes a program that uses the basic ``reHCstar``\nexecutable in order to achieve two different aims:\n\n-  finding (by a bisect-like search) the haplotype configuration that\n   induces the minimum number of recombinations;\n-  splitting long input genotypes into smaller overlapping blocks on\n   which a partial haplotype configuration is computed independently and\n   then used to reconstruct the complete haplotype configuration.\n\nPlease notice that the optimality of the solution (in term of number of\nrecombinations) is guaranteed if the genotypes are *not* split into\nsmaller blocks.\n\nThese functionalities are provided by the program ``reHCstar-mgr``\nwritten in `Python <http://www.python.org>`_ version 3 and later.\n\n``reHCstar-mgr`` requires two parameters, ``-p`` and ``-r``, that\nspecify, respectively, the file containing the input genotyped pedigree\nand the file on which the computed haplotype configuration will be\nsaved.\n\nBy default, ``reHCstar-mgr`` invokes the ``reHCstar`` executable in the\ncurrent directory using the internal SAT solver mode (option\n``--solve-internal`` described above). To change the default, the\ncomplete command line must be provided as argument of the program option\n``--cmd`` and must contain the following three placeholders\n``{pedigree}``, ``{haplotypes}``, and ``{assumptions}`` that will be\nreplaced, respectively, with the input pedigree file, the output\nhaplotype configuration file, and the input additional assumption file.\n\nFor example, the default value of the ``--cmd`` option (i.e. the default\ncommand line) is:\n\n::\n\n    ./reHCstar -4 -p \"{pedigree}\" -h \"{haplotypes}\" -a \"{assumptions}\"\n\nThe command line used to invoke the ``reHCstar`` executable is composed\nby concatenating the argument of the previous option with the arguments\nof two other options: ``--cmd-rec`` and ``--cmd-time``. The first one,\n``--cmd-rec``, specifies the options (of ``reHCstar``) that regulates\nthe maximum (and, possibly, minimum) number of recombinations. In\nparticular, the argument must include the placeholder ``{number}`` which\nwill be replaced before invocation with the actual maximum number of\nrecombinations. Moreover, the argument may include the placeholder\n``{min_number}`` which will be replaced before invocation with the\nlargest lower bound on the number of recombinations computed so far.\n\nFor example, the default value of the ``--cmd-rec`` option is:\n\n::\n\n    --global-recomb --global-recomb-number \"{number}\" --global-recomb-min-number \"{min_number}\"\n\nThe last option that regulates the final command line of ``reHCstar`` is\n``--cmd-time`` and, if specified, must include the placeholder\n``{time}`` which will be replaced before invocation with the maximum CPU\ntime of the ``reHCstar`` execution (in seconds). An empty argument\ndisables the running time limit control (albeit it could be enforced\nanyway via OS services).\n\nFor example, the default value of the ``--cmd-time`` option is:\n\n::\n\n    --time-limit {time}\n\nThe following sections present the other main features of\n``reHCstar-mgr`` while the full list of its options is available in the\nintegrated help (option ``-h``).\n\nAutomatic Genotype Partition\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe subdivision of the input genotypes in (smaller) overlapping blocks\nis regulated by the following two options: ``--block-length`` (short\nform ``-l``, default ``50``) and ``--lookahead-length`` (short form\n``-a``, default ``0``). The first option specifies the non-overlapping\n(maximum) length of each block which the genotypes are divided into,\nwhile the second option specifies the number of loci (in addition to a\nsingle fixed locus) which two consecutive blocks overlap on. In other\nwords, a single block can be considered as composed by three parts: the\nfirst part spans ``block-length`` loci, the second is composed by a\nsingle locus, and the third (optional) part spans ``lookahead-length``\nloci. (Hence, the total length of a block is ``block-length`` + ``1`` +\n``lookahead-length``.) The second part of a block always overlaps with\nthe first locus of the first part of the next genotype block. Moreover\nthe haplotype configuration computed on this locus during the solution\nof the \"current\" block is used as assumptions during the solution of the\nnext block (thus coincide). The third part of a block, the \"look-ahead\"\npart, if it is present overlaps with the next block starting from its\nsecond locus. This part is used to compute a haplotype configuration of\nthe \"current\" block, but the solution is then discarded when the next\nblock is considered (thus it may not coincide). Its purpose is to\nprovide a hint of the structure of the next block and it should be\nparticularly useful when the proportion of missing genotypes is\nrelevant, since when the overlapping locus has many missing genotypes,\nthe solution of the current block could impute the genotypes in a way\nthat is locally optimal, but globally sub-optimal.\n\nPlease notice that ``reHCstar-mgr`` finds a solution that requires the\nminimum number of recombinations only if the genotypes are *not* divided\ninto blocks.\n\nInitial Bounds on the Number of Recombinations\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nInitial lower and upper bounds on the number of recombinations may be\nspecified with the options ``--initial-recomb-lb=XX`` and\n``--initial-recomb-ub=YY``, respectively. The options' arguments, ``XX``\nand ``YY``, are non-negative numbers such that a haplotype configuration\nwith ``XX`` recombinations does not exist and a haplotype configuration\nwith ``YY`` recombinations certainly exists. The default value of both\nof them is ``-1`` which means that no bound is known/provided. Moreover\nit is possible to specify a file containing an initial haplotype\nconfiguration that ``reHCstar-mgr`` tries to improve (in terms of number\nof recombinations). In this case, the initial haplotype configuration is\nread and the number of recombinations that it induces is used as initial\nupper bound. If not better solution is found (for example, due to time\nlimits), then ``reHCstar-mgr`` outputs the initial haplotype\nconfiguration. The file containing the initial haplotype configuration\nis specified as argument of the ``--initial-haplotype-configuration``\nprogram option. Please notice that options\n``--initial-haplotype-configuration`` and ``--initial-recomb-ub`` cannot\nbe used together. These options could help to speed-up the process of\nsearching the solution with the minimum number of recombinations since\nthey provide the initial interval which the bisect-like search is\nperformed on.\n\nIf an initial upper bound is known but an initial lower bound is not, it\nis possible to enable a *bootstrap* phase that attempts to quickly\nidentify an initial lower bound and then the execution continues by\nbisecting the interval so determined. The bootstrap phase can be\nactivated by specifying the ``--bootstrap`` switch, while the maximum\nCPU time spent in the bootstrap phase can be specified with the\n``--bootstrap-time-limit=XX`` parameter, where ``XX`` is the time limit\nexpressed in seconds.\n\nRunning Time Management\n~~~~~~~~~~~~~~~~~~~~~~~\n\n``reHCstar-mgr`` provides basic tools for limiting its total running\ntime (CPU time). In particular, option ``--time-limit=SS`` specifies the\nmaximum running time of the program (``SS`` seconds). For the proper\nfunctioning of this feature, the option ``--cmd-time`` must be valid. If\nthe program execution exceeds the given time limit, then\n``reHCstar-mgr`` tries to save the solution computed so far in a file\nwhose name is the name specified by the option ``--results``\nconcatenated with the (fixed) extension ``.part``. The saved solution\ncould be *partial* (if the original instance has been partitioned in\nblocks) and/or *suboptimal* (if the minimum number of recombinations has\nnot been computed within the time limit). The status of the solution is\nsaved as a comment line in the same file of the solution. We suggest to\nenable the verbose mode (with ``-v`` or ``-vv``) for getting additional\ninformation.\n\nFile Formats\n------------\n\nInput: Genotyped Pedigrees\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nGenotyped pedigrees are described by a single file with the standard PED\nformat used in\n`plink <http://pngu.mgh.harvard.edu/~purcell/plink/data.shtml#ped>`_.\nIn particular, each line of the pedigree file fully describes a single\nindividual and it is composed by at least *six* whitespace-separated\nfields. The first (mandatory) six fields are:\n\n-  ``Family ID`` (numeric only)\n-  ``Individual ID`` (numeric only, greater than ``0``)\n-  ``Paternal ID`` (the ID of the father, ``0`` if unknown/not present)\n-  ``Maternal ID`` (the ID of the mother, ``0`` if unknown/not present)\n-  ``Sex`` (``1`` = male, ``2`` = female)\n-  ``Phenotype`` (ignored, could be any string not containing a\n   whitespace)\n\n**Remark:** reHC-\\* currently works only on single-family pedigrees,\nthus the ``Family ID`` *must be* the same for all the individuals.\n\nThe remaining fields (field 7 onwards) represent the genotype of the\nindividual, where each field represents a single allele of a single SNP\n**biallelic** locus. Both the alleles of each locus *must be* specified\n(they can be missing alleles), thus the total number of fields of each\nrow *must be* even. Major and minor alleles are encoded by the\ncharacters ``1`` and ``2``. Missing genotypes are encoded by the pair\n``0 0`` (i.e. by two fields containing the missing allele ``0``). The\npairs composed by a valid allele (``1`` or ``2``) and a missing allele\n(``0``) *are not valid*. Since reHC-\\* 2.0.0, there could also be\n**multi-allelic** loci. Alleles are encoded by a number greater than\n``0`` (which is always considered the missing allele code).\n\nRows starting with the character ``#`` are considered as comments and\nignored.\n\n**Remark:** The order of the two alleles on each locus is meaningless\n(i.e., the pair ``2 1`` is considered the same as the pair ``1 2``).\n\nA simple single-family pedigree composed by 5 individuals genotyped over\n5 biallelic loci is as follows.\n\n::\n\n    0 1 0 0 1 phenotype 1 1 2 2 2 2 2 2 1 1\n    0 2 0 0 2 phenotype 2 2 1 1 1 1 1 1 1 1\n    0 3 1 2 2 phenotype 1 2 0 0 1 2 1 2 1 1\n    0 4 0 0 1 phenotype 1 2 1 2 1 1 1 1 0 0\n    0 5 4 3 1 phenotype 1 2 1 2 0 0 1 1 1 2\n\nOutput: Haplotype Configuration\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe haplotype configuration computed by reHC-\\* is represented in a\nPED-like format. In particular, the first six fields are equal to the\nPED format. The remaining fields represent the computed haplotype pair\nof the individual, where *each* field represents the two alleles on a\nsingle locus (separated by the character ``|``). In this case, the order\nof the two alleles is important and represents the *phase* of each\nlocus. The first allele in each pair is the paternal allele, while the\nsecond one is the maternal allele.\n\nFor the example, a zero-recombinant haplotype configuration for the\nprevious genotyped pedigree is as follows.\n\n::\n\n    0 1 0 0 1 phenotype 1|1 2|2 2|2 2|2 1|1\n    0 2 0 0 2 phenotype 2|2 1|1 1|1 1|1 1|1\n    0 3 1 2 2 phenotype 1|2 2|1 2|1 2|1 1|1\n    0 4 0 0 1 phenotype 2|1 1|2 1|1 1|1 2|2\n    0 5 4 3 1 phenotype 1|2 2|1 1|1 1|1 2|1\n\nwhere the two (multi-locus) haplotypes of individual ``5`` are ``12112``\n(paternal haplotype) and ``21111`` (maternal haplotype).\n\nLicense\n-------\n\nreHC-\\* is released under the terms of the GNU General Public License\n(GPL) as published by the Free Software Foundation, either version 3 of\nthe License, or (at your option) any later version.\n\nreHC-\\* is distributed in the hope that it will be useful, but WITHOUT\nANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\nFITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\nmore details.\n\nPlease refer to file ``COPYING`` or to the `GNU\nwebsite <http://www.gnu.org/licenses/>`_ for a copy of the GNU General\nPublic License.\n\nAcknowledgments\n---------------\n\nThe template of reHC-\\* is based on the\n`cpp-project-template <http://code.google.com/p/cpp-project-template/>`_\nby Michael Aaron Safyan.\n\nreHC-\\* incorporates the following SAT solvers:\n\n-  `CryptoMiniSat <http://gitorious.org/cryptominisat>`_ version 2.9.1\n   (commit e819ab3236e, date 26/May/2011) by Mate Soos, which is\n   distributed under the GNU General Public License version 3;\n-  `MiniSat <http://www.minisat.se/MiniSat.html>`_ version 2.2.0 by\n   Niklas Een and Niklas Sorensson, which is distributed under the MIT\n   license.\n\nFor extracting source version information from git repository tags,\nreHC-\\* uses\n`autorevision <https://github.com/Autorevision/autorevision>`_ by dak180\nand others, which is distributed under the MIT license.\n\nWe would like to thank Gianluca Della Vedova for useful discussions.\n\nContacts\n--------\n\nPlease contact *Yuri Pirola* for additional information.\n\nE-mail: yuri.pirola@gmail.com\n\nWeb page: http://algolab.eu/pirola", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://rehcstar.algolab.eu/", "keywords": "haplotypes SNPs genotypes", "license": "GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.", "maintainer": null, "maintainer_email": null, "name": "reHCstar", "package_url": "https://pypi.org/project/reHCstar/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/reHCstar/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://rehcstar.algolab.eu/"}, "release_url": "https://pypi.org/project/reHCstar/2.1.5/", "requires_dist": null, "requires_python": null, "summary": "A SAT-based program to compute a haplotype configuration on pedigrees with recombinations, genotyping errors, and missing genotypes over biallelic and multi-allelic loci.", "version": "2.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>by <a href=\"http://algolab.eu/pirola\" rel=\"nofollow\">Yuri Pirola</a></p>\n<p>Started: September 27, 2010</p>\n<p>Current release: <strong>2.1.5</strong> (March 21, 2016)</p>\n<hr class=\"docutils\">\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>This program is based on a reduction of the <em>Haplotype Configuration\nwith Recombinations and Errors</em> problem to <em>Boolean Satisfiability</em>,\nwhich is then solved by a SAT solver. A haplotype configuration is\nfinally recovered from the satisfying assignment.</p>\n<p>The algorithm is described in the following papers:</p>\n<p>Yuri Pirola, Gianluca Della Vedova, Stefano Biffani, Alessandra Stella,\nand Paola Bonizzoni. <em>A fast and practical approach to genotype phasing\nand imputation on a pedigree with erroneous and incomplete information</em>.\nIEEE/ACM Transactions on Computational Biology and Bioinformatics\n(2012). <a href=\"http://dx.doi.org/10.1109/TCBB.2012.100\" rel=\"nofollow\">Link</a></p>\n<p>Yuri Pirola, Gianluca Della Vedova, Stefano Biffani, Alessandra Stella,\nand Paola Bonizzoni. <em>A fast and practical approach to genotype phasing\nand imputation on a pedigree with erroneous and incomplete information</em>.\nIn: Proc. of IEEE 2nd International Conference on Computational Advances\nin Bio and Medical Sciences, ICCABS 2012.\n<a href=\"http://dx.doi.org/10.1109/ICCABS.2012.6182643\" rel=\"nofollow\">Link</a></p>\n</div>\n<div id=\"download-and-installation\">\n<h2>Download and Installation</h2>\n<p>reHC-* is currently distributed only on source form. It has been\ndeveloped on Ubuntu Linux machines (10.04 and later) and has been tested\non both 32 and 64 bit. The program should work on (or should be easily\nported to) on MacOS X but has not been tested and it is not supported on\nthis operating system.</p>\n<div id=\"dependencies\">\n<h3>Dependencies</h3>\n<ul>\n<li>Python (&gt;= 2.7)</li>\n<li>CMake (&gt;= 2.8)</li>\n<li>GNU make</li>\n<li>Boost FileSystem, System, DateTime, ProgramOptions, IOStreams, and\nother include-only libraries (tested with 1.42)</li>\n<li>Apache Log4cxx (tested with 0.10.0)</li>\n</ul>\n</div>\n<div id=\"automatic-download-and-installation\">\n<h3>Automatic Download and Installation</h3>\n<p>The easiest way for having reHC-* correctly installed on your machine\nis through <a href=\"https://pypi.python.org/pypi\" rel=\"nofollow\">PyPI</a> with the command:</p>\n<pre>$ pip install -v reHCstar\n</pre>\n<p>(Please be patient, because it can take some time to build the package.)</p>\n<p>If <tt>pip</tt> is not available on your system (and you cannot install it\nfollowing <a href=\"https://pip.pypa.io/en/latest/installing.html\" rel=\"nofollow\">these\ninstructions</a>, you can\nmanually download the reHC-* package from\n<a href=\"https://github.com/yp/reHCstar/tarball/master\" rel=\"nofollow\">https://github.com/yp/reHCstar/tarball/master</a>, unpack it in a directory\nof your choice, and then build it with the command:</p>\n<pre>$ python setup.py install\n</pre>\n<p>Alternatively, you can proceed with the manual download, compilation,\nand installation as detailed below.</p>\n</div>\n<div id=\"manual-download\">\n<h3>Manual Download</h3>\n<p>reHC-* is developed on the <tt>yp/reHCstar</tt> Git repository hosted by\nGitHub. The repository can be explored using the GitHub web interface at\n<a href=\"https://github.com/yp/reHCstar\" rel=\"nofollow\">https://github.com/yp/reHCstar</a>.</p>\n<p>The latest stable version of reHC-* can be downloaded in either\n<a href=\"https://github.com/yp/reHCstar/tarball/master\" rel=\"nofollow\">.tar.gz</a> or in\n<a href=\"https://github.com/yp/reHCstar/zipball/master\" rel=\"nofollow\">.zip</a> format. Previous\nstable releases can be downloaded from\n<a href=\"https://github.com/yp/reHCstar/archives/master\" rel=\"nofollow\">https://github.com/yp/reHCstar/archives/master</a>.</p>\n<p>It is also possible to clone the entire repository using the following\ncommand:</p>\n<pre>$ git clone git://github.com/yp/reHCstar.git\n</pre>\n<p>Or, if you have a GitHub account, you can fork the project from the\n<a href=\"https://github.com/yp/reHCstar\" rel=\"nofollow\">repository web page</a>.</p>\n</div>\n<div id=\"manual-compilation\">\n<h3>Manual Compilation</h3>\n<p>The program can be compiled by issuing the command at the command\nprompt:</p>\n<pre>$ make STATUS=Release\n</pre>\n<p>The program can be compiled in three different variants:</p>\n<ol>\n<li><strong>with</strong> an integrated SAT solver and <strong>without</strong> the ability to\ninvoke an external SAT solver. This is the default variant, and\nshould be the most efficient on both time and memory.</li>\n<li><strong>with</strong> an integrated SAT solver and <strong>with</strong> the ability to invoke\nan external SAT solver. This is the most flexible variant, but it is\nalso the variant that uses more time and memory than the others.</li>\n<li><strong>without</strong> an integrated SAT solver but <strong>with</strong> the ability to\ninvoke an external SAT solver. This variant should be preferred when\none wants to use an external SAT solver, since it is more memory- and\ntime-efficient than the previous one.</li>\n</ol>\n<p>Currently, the SAT solvers that can be directly integrated into reHC-*\nare <a href=\"http://gitorious.org/cryptominisat\" rel=\"nofollow\">CryptoMiniSat v2.9.1</a> by Mate\nSoos and <a href=\"http://www.minisat.se/MiniSat.html\" rel=\"nofollow\">MiniSat v2.2.0</a> by\nNiklas Een and Niklas Sorensson. reHC-* can interact (in the 2nd and\n3rd variants) with any SAT solver that follow the standard\n<a href=\"http://www.satcompetition.org/2004/format-solvers2004.html\" rel=\"nofollow\">requirements</a>\nof the last SAT competitions. The variant can be specified by modifying\nthe file <tt>CMakeOptions.txt</tt> in the root directory. In particular, two\noptions have to be used to specify the variant:</p>\n<ul>\n<li><tt>INTEGRATE_SAT_SOLVER</tt>, which specifies if the SAT solver should be\nintegrated into reHC-*;</li>\n<li><tt>DISABLE_EXTERNAL_SAT_SOLVERS</tt>, which specifies if the invocation\nof external SAT solvers is allowed.</li>\n</ul>\n<p>The following combinations are allowed:</p>\n<ul>\n<li><tt>INTEGRATE_SAT_SOLVER=ON</tt> and <tt>DISABLE_EXTERNAL_SAT_SOLVERS=ON</tt>,\n(<strong>default</strong>), which corresponds to the <strong>first</strong> variant;</li>\n<li><tt>INTEGRATE_SAT_SOLVER=ON</tt> and <tt>DISABLE_EXTERNAL_SAT_SOLVERS=OFF</tt>,\nwhich corresponds to the <strong>second</strong> variant;</li>\n<li><tt>INTEGRATE_SAT_SOLVER=OFF</tt> and\n<tt>DISABLE_EXTERNAL_SAT_SOLVERS=OFF</tt>, which corresponds to the\n<strong>third</strong> variant.</li>\n</ul>\n<p>The SAT solver that will be integrated (if <tt>INTEGRATE_SAT_SOLVER</tt> is\n<tt>ON</tt>) can be specified by setting <tt>USE_CRYPTOMINISAT</tt> or\n<tt>USE_MINISAT</tt> to <tt>ON</tt> in the file <tt>CMakeOptions.txt</tt>.</p>\n<p>By default, reHC-* generates SAT instances in a augmented CNF format\nwhere the \u201cextended clauses\u201d can also be XORs of literals. The SAT\ninstance is generally smaller if XORs are allowed, represents better the\n\u201cinternal structure\u201d of the Boolean formula, and <em>should be used</em> if it\nis supported by the SAT solver. The SAT solver embedded by default,\nCryptoMiniSat, supports this functionality, while MiniSat does not. If\nMiniSat is chosen instead of CryptoMiniSat by editing the file\n<tt>CMakeOptions.txt</tt>, then XOR-clauses are automatically disabled. To\ndisable the augmented CNF format, reHC-* <em>must be rebuilt</em> specifying\nthe preprocessor symbol <tt>AVOID_XOR_CLAUSES</tt> in the <tt>CXXFLAGS</tt>. For\nexample, if the program is compiled in a bash shell in Linux, it\nsuffices the following command to enable the \u201cpure\u201d CNF format:</p>\n<pre>$ CXXFLAGS=\"-DAVOID_XOR_CLAUSES\" make STATUS=Release\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The program takes as input a genotyped pedigree (with missing genotypes)\nand returns (if possible) a complete haplotype configuration with at\nmost <em>r</em> recombinations and <em>e</em> errors. (The file formats are described\nbelow.) Depending on the variant that has been compiled, the program\nworks in four different modes that have to be specified on the command\nline as program parameter:</p>\n<ol>\n<li><tt><span class=\"pre\">--create</span></tt> (short form <tt><span class=\"pre\">-1</span></tt>), that, given a genotyped pedigree,\ncreates the associated SAT instance. (Available only on variants <em>2</em>\nand <em>3</em>.)</li>\n<li><tt><span class=\"pre\">--read</span></tt> (short form <tt><span class=\"pre\">-2</span></tt>), that, given a genotyped pedigree,\nreads a satisfying model of the associated SAT instance (if such a\nmodel exists) and computes the associated haplotype configuration.\n(Available only on variants <em>2</em> and <em>3</em>.)</li>\n<li><tt><span class=\"pre\">--create-read</span></tt> (short form <tt><span class=\"pre\">-3</span></tt>), that, given a genotyped\npedigree, creates the associated SAT instance, invokes the external\nSAT solver, reads a satisfying model of the SAT instance (if such a\nmodel exists), and computes the associated haplotype configuration.\nThis mode essentially combines the previous two modes by\nautomatically invoking the external SAT solver. (Available only on\nvariants <em>2</em> and <em>3</em>.)</li>\n<li><tt><span class=\"pre\">--solve-internal</span></tt> (short form <tt><span class=\"pre\">-4</span></tt>), that, given a genotyped\npedigree, creates the associated SAT instance, uses the integrated\nSAT solver for solving the instance, and, if the SAT instance is\nsatisfiable, computes the associated haplotype configuration.\n(Available only on variant <em>1</em>.)</li>\n</ol>\n<p>The following options are used to specify the input/output files:</p>\n<ul>\n<li><p><tt><span class=\"pre\">--pedigree</span></tt> (short form <tt><span class=\"pre\">-p</span></tt>), that specifies the file\ncontaining the genotyped pedigree (input file);</p>\n</li>\n<li><p><tt><span class=\"pre\">--sat</span></tt> (short form <tt><span class=\"pre\">-s</span></tt>), that specifies the file containing the\nSAT instance associated with the genotyped pedigree (output file);</p>\n</li>\n<li><p><tt><span class=\"pre\">--result</span></tt> (short form <tt><span class=\"pre\">-r</span></tt>), that specifies the file containing\nthe results computed by the external SAT solver for the SAT instance\nassociated with the genotyped pedigree (input file);</p>\n</li>\n<li><p><tt><span class=\"pre\">--haplotypes</span></tt> (short form <tt><span class=\"pre\">-h</span></tt>), that specifies the file that\nwill contain the haplotype configuration of the genotyped pedigree\ncomputed by reHC-* (output file);</p>\n</li>\n<li><p><tt><span class=\"pre\">--assumptions</span></tt> (short form <tt><span class=\"pre\">-a</span></tt>), that specifies an <em>optional</em>\nfile that contains additional assumptions that <em>must</em> be satisfied by\nthe resulting haplotype configuration. Assumptions are specified one\nfor each row with the following syntax:</p>\n<pre>&lt;variable kind&gt; &lt;individual id&gt; &lt;locus&gt; &lt;value&gt;\n</pre>\n</li>\n</ul>\n<p>Where <tt>&lt;variable kind&gt;</tt> is one of <tt>sp</tt> (paternal source), <tt>sm</tt>\n(maternal source), <tt>p</tt> (paternal allele), <tt>m</tt> (maternal allele),\n<tt>rp</tt> (paternal recombination), <tt>rm</tt> (maternal recombination), and\n<tt>e</tt> (genotyping error), <tt>&lt;individual id&gt;</tt> is the numerical\nidentifier of the individual (1-based), <tt>&lt;locus&gt;</tt> is the genotype\nlocus, and <tt>&lt;value&gt;</tt> is the boolean value (0/1) that the variable must\nhave. Please note that biallelic and multi-allelic loci are treated\ndifferently, thus they have different set of variables.</p>\n<p>For the <tt><span class=\"pre\">--create-read</span></tt> mode, the command-line that has to be used to\ninvoke the external SAT must be specified by using the <tt><span class=\"pre\">--sat-cmdline</span></tt>\n(short form <tt><span class=\"pre\">-c</span></tt>) program option. The strings <tt>%%INPUT%%</tt> and\n<tt>%%OUTPUT%%</tt> are placeholders for, respectively, the input and the\noutput files of the SAT solver. If the SAT solver can read the SAT\ninstance from its standard input, then it is possible to write the SAT\ninstance to the solver\u2019s standard input by specifying the option\n<tt><span class=\"pre\">--pipe</span></tt>. In this case, the placeholder <tt>%%INPUT%%</tt> will <em>not</em> be\nused.</p>\n<div id=\"options-for-recombinations-and-errors\">\n<h3>Options for Recombinations and Errors</h3>\n<p>By default, reHC-* search for a haplotype configuration with zero\nrecombinations and zero errors. To enable recombinations in the\nhaplotyping process, the program options <tt><span class=\"pre\">--global-recomb</span></tt> and either\n<tt><span class=\"pre\">--global-recomb-rate=XX</span></tt> or <tt><span class=\"pre\">--global-recomb-number=YY</span></tt> <em>must be\nspecified</em>. Here <tt>XX</tt> is a number between <tt>0.0</tt> and <tt>1.0</tt> that\nrepresents the maximum number of recombinations <em>r</em> as a fraction of the\ntotal number of possible recombination loci, while <tt>YY</tt> is (directly)\nthe maximum number of recombinations <em>r</em>. Moreover, if option\n<tt><span class=\"pre\">--global-recomb</span></tt> is enabled and <tt><span class=\"pre\">--global-recomb-number</span></tt> is used,\nit is also possible to search for a haplotype configuration with a given\nminimum number of recombinations by specifying the option\n<tt><span class=\"pre\">--global-recomb-min-number=ZZ</span></tt>, where <tt>ZZ</tt> is the sought lower\nbound. This option should only be used to specify a lower bound that has\nbeen already proved since the resulting haplotype configuration could\ninduce unnecessary recombination in order to satisfy the given lower\nbound.</p>\n<p>Similarly, to enable genotyping errors in the computed haplotype\nconfiguration, the program options <tt><span class=\"pre\">--global-error</span></tt> and either\n<tt><span class=\"pre\">--global-error-rate=XX</span></tt> or <tt><span class=\"pre\">--global-error-number=YY</span></tt> <em>must be\nspecified</em>. As before, <tt>XX</tt> is a number between <tt>0.0</tt> and <tt>1.0</tt>\nthat represents the maximum number of errors <em>e</em> as a fraction of the\nnumber of non-missing genotypes, while <tt>YY</tt> is (directly) the maximum\nnumber of errors <em>e</em>.</p>\n<p>Other program options allow a finer control over the distribution of\nrecombinations and errors. Please refer to the help of the program (that\ncan be obtained by specifying the <tt><span class=\"pre\">--help</span></tt> program option) for their\npresentation and explanation.</p>\n</div>\n<div id=\"other-options\">\n<h3>Other Options</h3>\n<p>reHC-* can also read and write files compressed by GZip. The GZip\ncompression allows to save some space and, especially for large\ninstances and when an external SAT solver is used, it could reduce the\nrunning time, since it greatly reduces to time spent for I/O operations.\nIt is disabled by default since not all the SAT solvers support it.\nThree options regulates the GZip compression:</p>\n<ul>\n<li><tt><span class=\"pre\">--compress-input</span></tt>, which enables the GZip compression of some\nfiles that are read by reHC-* (currently only the <tt><span class=\"pre\">--pedigree</span></tt>\nfile);</li>\n<li><tt><span class=\"pre\">--compress-output</span></tt>, which enables the GZip compression of some\nfiles that are written by reHC-* (currently the <tt><span class=\"pre\">--sat</span></tt> and\n<tt><span class=\"pre\">--haplotypes</span></tt> files);</li>\n<li><tt><span class=\"pre\">--compress</span></tt> (short form <tt><span class=\"pre\">-z</span></tt>), which is equivalent to specify\nboth <tt><span class=\"pre\">--compress-input</span></tt> and <tt><span class=\"pre\">--compress-output</span></tt>;</li>\n<li><tt><span class=\"pre\">--compress-sat</span></tt>, which enables the GZip compression only for the\nfile that contains the computed SAT instance.</li>\n</ul>\n<p>Temporary files of the <tt><span class=\"pre\">--create-read</span></tt> mode are automatically removed\nby default. To keep them (for example, for manual inspection), the\nprogram option <tt><span class=\"pre\">--keep</span></tt> (short form <tt><span class=\"pre\">-k</span></tt>) has to be specified.</p>\n<p>A summary of the available program options can be printed by invoking\nreHC-* with the <tt><span class=\"pre\">--help</span></tt> (short form <tt><span class=\"pre\">-?</span></tt>) option.</p>\n</div>\n<div id=\"example\">\n<h3>Example</h3>\n<p>For example, if the genotyped pedigree is described in file\n<tt><span class=\"pre\">genotyped-pedigree.txt</span></tt>, the following commands perform the complete\nhaplotype inference process (saving the resulting haplotype\nconfiguration in file <tt><span class=\"pre\">haplotype-configuration.txt</span></tt>).</p>\n<p>Using the integrated SAT solver (variant <em>1</em> or <em>2</em>):</p>\n<pre>$ ./bin/reHCstar -4  \\\n      -p genotyped-pedigree.txt  \\\n      -h haplotype-configuration.txt\n</pre>\n<p>Using an external SAT solver (variant <em>2</em> or <em>3</em>) with <em>manual</em>\ninvocation of the SAT solver:</p>\n<pre>$ ./bin/reHCstar -1  \\\n      -p genotyped-pedigree.txt  \\\n      -s instance.cnf\n# ...execution of the external SAT solver, assuming that\n#    it writes the results in file sat-result.txt\n$ ./bin/reHCstar -2  \\\n      -p genotyped-pedigree.txt  \\\n      -r sat-result.txt  \\\n      -h haplotype-configuration.txt\n</pre>\n<p>Using an external SAT solver (variant <em>2</em> or <em>3</em>) with <em>automatic</em>\ninvocation of the SAT solver:</p>\n<pre>$ ./bin/reHCstar -3  \\\n      -p genotyped-pedigree.txt  \\\n      -h haplotype-configuration.txt  \\\n      -c \"./external-sat-solver %%INPUT%% %%OUTPUT%%\"\n</pre>\n<p>Or, if the SAT solver reads the SAT instance from its standard input:</p>\n<pre>$ ./bin/reHCstar -3  \\\n      -p genotyped-pedigree.txt  \\\n      -h haplotype-configuration.txt  \\\n      --pipe  \\\n      -c \"./external-sat-solver %%OUTPUT%%\"\n</pre>\n</div>\n</div>\n<div id=\"optimization-version\">\n<h2>Optimization Version</h2>\n<p>reHC-* also includes a program that uses the basic <tt>reHCstar</tt>\nexecutable in order to achieve two different aims:</p>\n<ul>\n<li>finding (by a bisect-like search) the haplotype configuration that\ninduces the minimum number of recombinations;</li>\n<li>splitting long input genotypes into smaller overlapping blocks on\nwhich a partial haplotype configuration is computed independently and\nthen used to reconstruct the complete haplotype configuration.</li>\n</ul>\n<p>Please notice that the optimality of the solution (in term of number of\nrecombinations) is guaranteed if the genotypes are <em>not</em> split into\nsmaller blocks.</p>\n<p>These functionalities are provided by the program <tt><span class=\"pre\">reHCstar-mgr</span></tt>\nwritten in <a href=\"http://www.python.org\" rel=\"nofollow\">Python</a> version 3 and later.</p>\n<p><tt><span class=\"pre\">reHCstar-mgr</span></tt> requires two parameters, <tt><span class=\"pre\">-p</span></tt> and <tt><span class=\"pre\">-r</span></tt>, that\nspecify, respectively, the file containing the input genotyped pedigree\nand the file on which the computed haplotype configuration will be\nsaved.</p>\n<p>By default, <tt><span class=\"pre\">reHCstar-mgr</span></tt> invokes the <tt>reHCstar</tt> executable in the\ncurrent directory using the internal SAT solver mode (option\n<tt><span class=\"pre\">--solve-internal</span></tt> described above). To change the default, the\ncomplete command line must be provided as argument of the program option\n<tt><span class=\"pre\">--cmd</span></tt> and must contain the following three placeholders\n<tt>{pedigree}</tt>, <tt>{haplotypes}</tt>, and <tt>{assumptions}</tt> that will be\nreplaced, respectively, with the input pedigree file, the output\nhaplotype configuration file, and the input additional assumption file.</p>\n<p>For example, the default value of the <tt><span class=\"pre\">--cmd</span></tt> option (i.e. the default\ncommand line) is:</p>\n<pre>./reHCstar -4 -p \"{pedigree}\" -h \"{haplotypes}\" -a \"{assumptions}\"\n</pre>\n<p>The command line used to invoke the <tt>reHCstar</tt> executable is composed\nby concatenating the argument of the previous option with the arguments\nof two other options: <tt><span class=\"pre\">--cmd-rec</span></tt> and <tt><span class=\"pre\">--cmd-time</span></tt>. The first one,\n<tt><span class=\"pre\">--cmd-rec</span></tt>, specifies the options (of <tt>reHCstar</tt>) that regulates\nthe maximum (and, possibly, minimum) number of recombinations. In\nparticular, the argument must include the placeholder <tt>{number}</tt> which\nwill be replaced before invocation with the actual maximum number of\nrecombinations. Moreover, the argument may include the placeholder\n<tt>{min_number}</tt> which will be replaced before invocation with the\nlargest lower bound on the number of recombinations computed so far.</p>\n<p>For example, the default value of the <tt><span class=\"pre\">--cmd-rec</span></tt> option is:</p>\n<pre>--global-recomb --global-recomb-number \"{number}\" --global-recomb-min-number \"{min_number}\"\n</pre>\n<p>The last option that regulates the final command line of <tt>reHCstar</tt> is\n<tt><span class=\"pre\">--cmd-time</span></tt> and, if specified, must include the placeholder\n<tt>{time}</tt> which will be replaced before invocation with the maximum CPU\ntime of the <tt>reHCstar</tt> execution (in seconds). An empty argument\ndisables the running time limit control (albeit it could be enforced\nanyway via OS services).</p>\n<p>For example, the default value of the <tt><span class=\"pre\">--cmd-time</span></tt> option is:</p>\n<pre>--time-limit {time}\n</pre>\n<p>The following sections present the other main features of\n<tt><span class=\"pre\">reHCstar-mgr</span></tt> while the full list of its options is available in the\nintegrated help (option <tt><span class=\"pre\">-h</span></tt>).</p>\n<div id=\"automatic-genotype-partition\">\n<h3>Automatic Genotype Partition</h3>\n<p>The subdivision of the input genotypes in (smaller) overlapping blocks\nis regulated by the following two options: <tt><span class=\"pre\">--block-length</span></tt> (short\nform <tt><span class=\"pre\">-l</span></tt>, default <tt>50</tt>) and <tt><span class=\"pre\">--lookahead-length</span></tt> (short form\n<tt><span class=\"pre\">-a</span></tt>, default <tt>0</tt>). The first option specifies the non-overlapping\n(maximum) length of each block which the genotypes are divided into,\nwhile the second option specifies the number of loci (in addition to a\nsingle fixed locus) which two consecutive blocks overlap on. In other\nwords, a single block can be considered as composed by three parts: the\nfirst part spans <tt><span class=\"pre\">block-length</span></tt> loci, the second is composed by a\nsingle locus, and the third (optional) part spans <tt><span class=\"pre\">lookahead-length</span></tt>\nloci. (Hence, the total length of a block is <tt><span class=\"pre\">block-length</span></tt> + <tt>1</tt> +\n<tt><span class=\"pre\">lookahead-length</span></tt>.) The second part of a block always overlaps with\nthe first locus of the first part of the next genotype block. Moreover\nthe haplotype configuration computed on this locus during the solution\nof the \u201ccurrent\u201d block is used as assumptions during the solution of the\nnext block (thus coincide). The third part of a block, the \u201clook-ahead\u201d\npart, if it is present overlaps with the next block starting from its\nsecond locus. This part is used to compute a haplotype configuration of\nthe \u201ccurrent\u201d block, but the solution is then discarded when the next\nblock is considered (thus it may not coincide). Its purpose is to\nprovide a hint of the structure of the next block and it should be\nparticularly useful when the proportion of missing genotypes is\nrelevant, since when the overlapping locus has many missing genotypes,\nthe solution of the current block could impute the genotypes in a way\nthat is locally optimal, but globally sub-optimal.</p>\n<p>Please notice that <tt><span class=\"pre\">reHCstar-mgr</span></tt> finds a solution that requires the\nminimum number of recombinations only if the genotypes are <em>not</em> divided\ninto blocks.</p>\n</div>\n<div id=\"initial-bounds-on-the-number-of-recombinations\">\n<h3>Initial Bounds on the Number of Recombinations</h3>\n<p>Initial lower and upper bounds on the number of recombinations may be\nspecified with the options <tt><span class=\"pre\">--initial-recomb-lb=XX</span></tt> and\n<tt><span class=\"pre\">--initial-recomb-ub=YY</span></tt>, respectively. The options\u2019 arguments, <tt>XX</tt>\nand <tt>YY</tt>, are non-negative numbers such that a haplotype configuration\nwith <tt>XX</tt> recombinations does not exist and a haplotype configuration\nwith <tt>YY</tt> recombinations certainly exists. The default value of both\nof them is <tt><span class=\"pre\">-1</span></tt> which means that no bound is known/provided. Moreover\nit is possible to specify a file containing an initial haplotype\nconfiguration that <tt><span class=\"pre\">reHCstar-mgr</span></tt> tries to improve (in terms of number\nof recombinations). In this case, the initial haplotype configuration is\nread and the number of recombinations that it induces is used as initial\nupper bound. If not better solution is found (for example, due to time\nlimits), then <tt><span class=\"pre\">reHCstar-mgr</span></tt> outputs the initial haplotype\nconfiguration. The file containing the initial haplotype configuration\nis specified as argument of the <tt><span class=\"pre\">--initial-haplotype-configuration</span></tt>\nprogram option. Please notice that options\n<tt><span class=\"pre\">--initial-haplotype-configuration</span></tt> and <tt><span class=\"pre\">--initial-recomb-ub</span></tt> cannot\nbe used together. These options could help to speed-up the process of\nsearching the solution with the minimum number of recombinations since\nthey provide the initial interval which the bisect-like search is\nperformed on.</p>\n<p>If an initial upper bound is known but an initial lower bound is not, it\nis possible to enable a <em>bootstrap</em> phase that attempts to quickly\nidentify an initial lower bound and then the execution continues by\nbisecting the interval so determined. The bootstrap phase can be\nactivated by specifying the <tt><span class=\"pre\">--bootstrap</span></tt> switch, while the maximum\nCPU time spent in the bootstrap phase can be specified with the\n<tt><span class=\"pre\">--bootstrap-time-limit=XX</span></tt> parameter, where <tt>XX</tt> is the time limit\nexpressed in seconds.</p>\n</div>\n<div id=\"running-time-management\">\n<h3>Running Time Management</h3>\n<p><tt><span class=\"pre\">reHCstar-mgr</span></tt> provides basic tools for limiting its total running\ntime (CPU time). In particular, option <tt><span class=\"pre\">--time-limit=SS</span></tt> specifies the\nmaximum running time of the program (<tt>SS</tt> seconds). For the proper\nfunctioning of this feature, the option <tt><span class=\"pre\">--cmd-time</span></tt> must be valid. If\nthe program execution exceeds the given time limit, then\n<tt><span class=\"pre\">reHCstar-mgr</span></tt> tries to save the solution computed so far in a file\nwhose name is the name specified by the option <tt><span class=\"pre\">--results</span></tt>\nconcatenated with the (fixed) extension <tt>.part</tt>. The saved solution\ncould be <em>partial</em> (if the original instance has been partitioned in\nblocks) and/or <em>suboptimal</em> (if the minimum number of recombinations has\nnot been computed within the time limit). The status of the solution is\nsaved as a comment line in the same file of the solution. We suggest to\nenable the verbose mode (with <tt><span class=\"pre\">-v</span></tt> or <tt><span class=\"pre\">-vv</span></tt>) for getting additional\ninformation.</p>\n</div>\n</div>\n<div id=\"file-formats\">\n<h2>File Formats</h2>\n<div id=\"input-genotyped-pedigrees\">\n<h3>Input: Genotyped Pedigrees</h3>\n<p>Genotyped pedigrees are described by a single file with the standard PED\nformat used in\n<a href=\"http://pngu.mgh.harvard.edu/~purcell/plink/data.shtml#ped\" rel=\"nofollow\">plink</a>.\nIn particular, each line of the pedigree file fully describes a single\nindividual and it is composed by at least <em>six</em> whitespace-separated\nfields. The first (mandatory) six fields are:</p>\n<ul>\n<li><tt>Family ID</tt> (numeric only)</li>\n<li><tt>Individual ID</tt> (numeric only, greater than <tt>0</tt>)</li>\n<li><tt>Paternal ID</tt> (the ID of the father, <tt>0</tt> if unknown/not present)</li>\n<li><tt>Maternal ID</tt> (the ID of the mother, <tt>0</tt> if unknown/not present)</li>\n<li><tt>Sex</tt> (<tt>1</tt> = male, <tt>2</tt> = female)</li>\n<li><tt>Phenotype</tt> (ignored, could be any string not containing a\nwhitespace)</li>\n</ul>\n<p><strong>Remark:</strong> reHC-* currently works only on single-family pedigrees,\nthus the <tt>Family ID</tt> <em>must be</em> the same for all the individuals.</p>\n<p>The remaining fields (field 7 onwards) represent the genotype of the\nindividual, where each field represents a single allele of a single SNP\n<strong>biallelic</strong> locus. Both the alleles of each locus <em>must be</em> specified\n(they can be missing alleles), thus the total number of fields of each\nrow <em>must be</em> even. Major and minor alleles are encoded by the\ncharacters <tt>1</tt> and <tt>2</tt>. Missing genotypes are encoded by the pair\n<tt>0 0</tt> (i.e. by two fields containing the missing allele <tt>0</tt>). The\npairs composed by a valid allele (<tt>1</tt> or <tt>2</tt>) and a missing allele\n(<tt>0</tt>) <em>are not valid</em>. Since reHC-* 2.0.0, there could also be\n<strong>multi-allelic</strong> loci. Alleles are encoded by a number greater than\n<tt>0</tt> (which is always considered the missing allele code).</p>\n<p>Rows starting with the character <tt>#</tt> are considered as comments and\nignored.</p>\n<p><strong>Remark:</strong> The order of the two alleles on each locus is meaningless\n(i.e., the pair <tt>2 1</tt> is considered the same as the pair <tt>1 2</tt>).</p>\n<p>A simple single-family pedigree composed by 5 individuals genotyped over\n5 biallelic loci is as follows.</p>\n<pre>0 1 0 0 1 phenotype 1 1 2 2 2 2 2 2 1 1\n0 2 0 0 2 phenotype 2 2 1 1 1 1 1 1 1 1\n0 3 1 2 2 phenotype 1 2 0 0 1 2 1 2 1 1\n0 4 0 0 1 phenotype 1 2 1 2 1 1 1 1 0 0\n0 5 4 3 1 phenotype 1 2 1 2 0 0 1 1 1 2\n</pre>\n</div>\n<div id=\"output-haplotype-configuration\">\n<h3>Output: Haplotype Configuration</h3>\n<p>The haplotype configuration computed by reHC-* is represented in a\nPED-like format. In particular, the first six fields are equal to the\nPED format. The remaining fields represent the computed haplotype pair\nof the individual, where <em>each</em> field represents the two alleles on a\nsingle locus (separated by the character <tt>|</tt>). In this case, the order\nof the two alleles is important and represents the <em>phase</em> of each\nlocus. The first allele in each pair is the paternal allele, while the\nsecond one is the maternal allele.</p>\n<p>For the example, a zero-recombinant haplotype configuration for the\nprevious genotyped pedigree is as follows.</p>\n<pre>0 1 0 0 1 phenotype 1|1 2|2 2|2 2|2 1|1\n0 2 0 0 2 phenotype 2|2 1|1 1|1 1|1 1|1\n0 3 1 2 2 phenotype 1|2 2|1 2|1 2|1 1|1\n0 4 0 0 1 phenotype 2|1 1|2 1|1 1|1 2|2\n0 5 4 3 1 phenotype 1|2 2|1 1|1 1|1 2|1\n</pre>\n<p>where the two (multi-locus) haplotypes of individual <tt>5</tt> are <tt>12112</tt>\n(paternal haplotype) and <tt>21111</tt> (maternal haplotype).</p>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>reHC-* is released under the terms of the GNU General Public License\n(GPL) as published by the Free Software Foundation, either version 3 of\nthe License, or (at your option) any later version.</p>\n<p>reHC-* is distributed in the hope that it will be useful, but WITHOUT\nANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\nFITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\nmore details.</p>\n<p>Please refer to file <tt>COPYING</tt> or to the <a href=\"http://www.gnu.org/licenses/\" rel=\"nofollow\">GNU\nwebsite</a> for a copy of the GNU General\nPublic License.</p>\n</div>\n<div id=\"acknowledgments\">\n<h2>Acknowledgments</h2>\n<p>The template of reHC-* is based on the\n<a href=\"http://code.google.com/p/cpp-project-template/\" rel=\"nofollow\">cpp-project-template</a>\nby Michael Aaron Safyan.</p>\n<p>reHC-* incorporates the following SAT solvers:</p>\n<ul>\n<li><a href=\"http://gitorious.org/cryptominisat\" rel=\"nofollow\">CryptoMiniSat</a> version 2.9.1\n(commit e819ab3236e, date 26/May/2011) by Mate Soos, which is\ndistributed under the GNU General Public License version 3;</li>\n<li><a href=\"http://www.minisat.se/MiniSat.html\" rel=\"nofollow\">MiniSat</a> version 2.2.0 by\nNiklas Een and Niklas Sorensson, which is distributed under the MIT\nlicense.</li>\n</ul>\n<p>For extracting source version information from git repository tags,\nreHC-* uses\n<a href=\"https://github.com/Autorevision/autorevision\" rel=\"nofollow\">autorevision</a> by dak180\nand others, which is distributed under the MIT license.</p>\n<p>We would like to thank Gianluca Della Vedova for useful discussions.</p>\n</div>\n<div id=\"contacts\">\n<h2>Contacts</h2>\n<p>Please contact <em>Yuri Pirola</em> for additional information.</p>\n<p>E-mail: <a href=\"mailto:yuri.pirola%40gmail.com\">yuri<span>.</span>pirola<span>@</span>gmail<span>.</span>com</a></p>\n<p>Web page: <a href=\"http://algolab.eu/pirola\" rel=\"nofollow\">http://algolab.eu/pirola</a></p>\n</div>\n\n          </div>"}, "last_serial": 2019463, "releases": {"2.1.3": [{"comment_text": "", "digests": {"md5": "ac7dbec1435581ecdd00a7939e0e5d46", "sha256": "9386019f8e3ae4a259aeea0e95602d805eb2c8935429704617c0dd1df9f85ed9"}, "downloads": -1, "filename": "reHCstar-2.1.3.tar.gz", "has_sig": false, "md5_digest": "ac7dbec1435581ecdd00a7939e0e5d46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 348899, "upload_time": "2015-07-03T15:14:21", "upload_time_iso_8601": "2015-07-03T15:14:21.928265Z", "url": "https://files.pythonhosted.org/packages/2f/42/07bcf72cb8fb555579b629d052396b1b59ddc1f64a8c01ccf7ad03cb0713/reHCstar-2.1.3.tar.gz", "yanked": false}], "2.1.4": [{"comment_text": "", "digests": {"md5": "3e530313f86a4d5e032842e1b1669279", "sha256": "41096a231b5e90f441d934b6c113799c5e6d6ce6cc5463455e1e208239531d37"}, "downloads": -1, "filename": "reHCstar-2.1.4.tar.gz", "has_sig": false, "md5_digest": "3e530313f86a4d5e032842e1b1669279", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 347766, "upload_time": "2016-03-14T17:54:29", "upload_time_iso_8601": "2016-03-14T17:54:29.832925Z", "url": "https://files.pythonhosted.org/packages/36/51/38cba0dc700028648cff524782299042ff256f3b1e1b5bc9f48a58c304e1/reHCstar-2.1.4.tar.gz", "yanked": false}], "2.1.5": [{"comment_text": "", "digests": {"md5": "a8fa34851d4252116cfc776e4e92e42c", "sha256": "60d7fe7507d70905560e2c517b550c6745b4c212b3d819186358f5458870c77a"}, "downloads": -1, "filename": "reHCstar-2.1.5.tar.gz", "has_sig": false, "md5_digest": "a8fa34851d4252116cfc776e4e92e42c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 347763, "upload_time": "2016-03-21T21:42:18", "upload_time_iso_8601": "2016-03-21T21:42:18.946155Z", "url": "https://files.pythonhosted.org/packages/50/6a/8d3271a5727e893487429cd6f1ac5512cb40241e7036a060068a01731826/reHCstar-2.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a8fa34851d4252116cfc776e4e92e42c", "sha256": "60d7fe7507d70905560e2c517b550c6745b4c212b3d819186358f5458870c77a"}, "downloads": -1, "filename": "reHCstar-2.1.5.tar.gz", "has_sig": false, "md5_digest": "a8fa34851d4252116cfc776e4e92e42c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 347763, "upload_time": "2016-03-21T21:42:18", "upload_time_iso_8601": "2016-03-21T21:42:18.946155Z", "url": "https://files.pythonhosted.org/packages/50/6a/8d3271a5727e893487429cd6f1ac5512cb40241e7036a060068a01731826/reHCstar-2.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:08 2020"}