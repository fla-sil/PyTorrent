{"info": {"author": "UNKNOWN", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "mincss\n======\n\n.. image:: https://travis-ci.org/myint/mincss.png?branch=master\n    :target: https://travis-ci.org/myint/mincss\n    :alt: Build status\n\nClears the junk out of your CSS by finding out which selectors are\nactually not used in your HTML.\n\nThis is an unofficial fork (of https://pypi.python.org/pypi/mincss) that runs\non both Python 2 and 3.\n\nExample\n-------\n\n::\n\n    $ mincss https://github.com\n\n\nInstallation\n------------\n\nFrom pip::\n\n    $ pip install --upgrade mincss3k\n\nWhy?\n----\n\nWith the onslaught of Twitter Bootstrap upon the world it's very\ntempting to just download their whole fat 80+Kb CSS and serve it up even\nthough you're not using half of the HTML that it styles.\n\nThere's also the case of websites that have changed over time but\nwithout the CSS getting the same amount of love refactoring. Then it's\nvery likely that you get CSS selectors that you're no longer or never\nusing.\n\nThis tool can help you get started reducing all those selectors that\nyou're not using.\n\nWhitespace compression?\n-----------------------\n\nNo, that's a separate concern. This tool works independent of whitespace\ncompression/optimization.\n\nFor example, if you have a build step or a runtime step that converts\nall your CSS files into one (concatenation) and trims away all the\nexcess whitespace (compression) then the output CSS can still contain\nselectors that are never actually used.\n\nWhat about AJAX?\n----------------\n\nIf you have a script that creates DOM elements in some sort of\n``window.onload`` event then ``mincss`` will not be able to know this\nbecause at the moment ``mincss`` is entirely static.\n\nSo what is a web developer to do? Simple, use ``/* no mincss */`` like\nthis for example:\n\n::\n\n    .logged-in-info {\n        /* no mincss */\n    color: pink;\n    }\n\nThat tells ``mincss`` to ignore the whole block and all its selectors.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/myint/mincss", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "mincss3k", "package_url": "https://pypi.org/project/mincss3k/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mincss3k/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/myint/mincss"}, "release_url": "https://pypi.org/project/mincss3k/0.9/", "requires_dist": null, "requires_python": null, "summary": "Clears the junk out of your CSS.", "version": "0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/myint/mincss\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3d2b66eac0b3865986bcdcd5c6d33fd486b460b1/68747470733a2f2f7472617669732d63692e6f72672f6d79696e742f6d696e6373732e706e673f6272616e63683d6d6173746572\"></a>\n<p>Clears the junk out of your CSS by finding out which selectors are\nactually not used in your HTML.</p>\n<p>This is an unofficial fork (of <a href=\"https://pypi.python.org/pypi/mincss\" rel=\"nofollow\">https://pypi.python.org/pypi/mincss</a>) that runs\non both Python 2 and 3.</p>\n<div id=\"example\">\n<h2>Example</h2>\n<pre>$ mincss https://github.com\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>From pip:</p>\n<pre>$ pip install --upgrade mincss3k\n</pre>\n</div>\n<div id=\"why\">\n<h2>Why?</h2>\n<p>With the onslaught of Twitter Bootstrap upon the world it\u2019s very\ntempting to just download their whole fat 80+Kb CSS and serve it up even\nthough you\u2019re not using half of the HTML that it styles.</p>\n<p>There\u2019s also the case of websites that have changed over time but\nwithout the CSS getting the same amount of love refactoring. Then it\u2019s\nvery likely that you get CSS selectors that you\u2019re no longer or never\nusing.</p>\n<p>This tool can help you get started reducing all those selectors that\nyou\u2019re not using.</p>\n</div>\n<div id=\"whitespace-compression\">\n<h2>Whitespace compression?</h2>\n<p>No, that\u2019s a separate concern. This tool works independent of whitespace\ncompression/optimization.</p>\n<p>For example, if you have a build step or a runtime step that converts\nall your CSS files into one (concatenation) and trims away all the\nexcess whitespace (compression) then the output CSS can still contain\nselectors that are never actually used.</p>\n</div>\n<div id=\"what-about-ajax\">\n<h2>What about AJAX?</h2>\n<p>If you have a script that creates DOM elements in some sort of\n<tt>window.onload</tt> event then <tt>mincss</tt> will not be able to know this\nbecause at the moment <tt>mincss</tt> is entirely static.</p>\n<p>So what is a web developer to do? Simple, use <tt>/* no mincss */</tt> like\nthis for example:</p>\n<pre>.logged-in-info {\n    /* no mincss */\ncolor: pink;\n}\n</pre>\n<p>That tells <tt>mincss</tt> to ignore the whole block and all its selectors.</p>\n</div>\n\n          </div>"}, "last_serial": 1267916, "releases": {"0.9": [{"comment_text": "", "digests": {"md5": "ac04973c4d8e26c107422541638cde5f", "sha256": "26d1a9092278a6287b7e1849fe575a3d38421a47736988adf9ba39c8b345cde0"}, "downloads": -1, "filename": "mincss3k-0.9.tar.gz", "has_sig": false, "md5_digest": "ac04973c4d8e26c107422541638cde5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11070, "upload_time": "2014-10-12T21:02:52", "upload_time_iso_8601": "2014-10-12T21:02:52.248177Z", "url": "https://files.pythonhosted.org/packages/99/ec/db79d48a7253fd7cf4d4eee2f9d641726166976dc49134d88d975f02ce66/mincss3k-0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ac04973c4d8e26c107422541638cde5f", "sha256": "26d1a9092278a6287b7e1849fe575a3d38421a47736988adf9ba39c8b345cde0"}, "downloads": -1, "filename": "mincss3k-0.9.tar.gz", "has_sig": false, "md5_digest": "ac04973c4d8e26c107422541638cde5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11070, "upload_time": "2014-10-12T21:02:52", "upload_time_iso_8601": "2014-10-12T21:02:52.248177Z", "url": "https://files.pythonhosted.org/packages/99/ec/db79d48a7253fd7cf4d4eee2f9d641726166976dc49134d88d975f02ce66/mincss3k-0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:34 2020"}