{"info": {"author": "Chris Horsley", "author_email": "chris.horsley@csirtfoundry.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2.7"], "description": "DSMS CLI tool\n--------------------\n\ndsms_cli is a command line interface for exporting reports from a DSMS\nsystem.\n\n============\nInstallation\n============\n\n``pip install dsms-cli``\n\n========\nSetup\n========\n\nBefore you'll begin, you'll need several settings set as environment variables:\n\n* DSMS_SERVER    (e.g. https://mydsmsserver)\n* DSMS_USER      (e.g. tom)\n* DSMS_PASS      (e.g. ThisIsMyPassword)\n* DSMS_SERVER_CERT (optional: e.g. /usr/share/ca-certificates/dsmserver.crt)\n\n=========\nAdding targets\n=========\n\nTo add targets, you'll firstly need the ID numbers of the schedules, profiles\nand severities you wish to add. You can do this with::\n\n    dsms_cli list schedules\n    dsms_cli list profiles\n    dsms_cli list severities\n\nThen, you're ready to add targets. For example::\n\n    dsms_cli add location --profile=1 --schedule=1 http://example.com\n    dsms_cli add file --profile=2 --schedule=1 mysample.exe\n\nFor file types, the local file path you specify will be uploaded to DSMS.\n\n=========\nRunning reports\n=========\n\n\nYou can also run searches of DSMS results using the same filter syntax as the\nweb application. For example, to get all active phishing targets, run::\n\n    dsms_cli export --query=\"status:Active type:Phishing\"\n\nYou can also redact potentially sensitive information in target information\nby supplying the --redact switch. This will replace URLs like\nhttp://example.com/?id=me@example.com with\nhttp://example.com/?id=REDACTED@REDACTED.\n\n=========\nReport formats\n=========\n\nDSMS has a simple build-in report template, but you may create templates in any\nformat you like. Reports are generated by the Jinja2 template engine. See\nhttp://jinja.pocoo.org/docs/dev/templates/ for details of the format. \n\nIf you'd like to add report formats:\n\n1) Create a directory to house your templates, e.g. $HOME/dsms_templates.\n2) Create your template using the .j2 extension, e.g.\n   $HOME/dsms_templates/my_format.j2.\n3) Templates must adhere to Jinja2 format. You can find a simple example of\n   the DSMS standard template at\n   https://gist.github.com/chorsley/d52f8e8bf3c6df4901b38ed316af5889.\n4) Variable names map to the API fields for \"Target filter report\" under\n   the \"results\" key. Please see\n   https://bitbucket.org/irtools/dsms/wiki/UsingDSMSAPI for more information.\n5) Finally, run the report. Using our example values:\n   ``dsms_cli export --template_dir=$HOME/dsms_templates --template=my_format``.\n   Naturally, you can combine this with --query, --redact etc to filter the\n   targets that will appear in the report.\n\n=========\nSSL errors\n=========\n\nIf you're using DSMS with a self-signed SSL certificate, you may run into the\nfollowing error::\n\n    RuntimeError: Error during login: bad handshake: Error([('SSL routines',\n    'SSL3_GET_SERVER_CERTIFICATE', 'certificate verify failed')],)\n\nThere are two options to avoid this.\n\n1) You can specify the path to a trusted SSL certificate using the\nDSMS_SERVER_CERT environment setting. To get this cert, you can run::\n\n    openssl s_client -showcerts -connect [YOUR DSMS HOST]:443 </dev/null \\\n    2>/dev/null|openssl x509 -outform PEM >dsms_server_cert.crt\n\nThen, set the cert path to the file you downloaded::\n\n    export DSMS_SERVER_CERT=dsms_server_cert.crt\n\n2) While not recommended, you can also ignore all SSL errors by appending\n--ignore_ssl_errs to your dsms_cli command.\n\n=========\nFurther help\n=========\n\nTo see all command line switches, you can run::\n\n    dsms_cli --help", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/dsms/dsms_report_cli", "keywords": "DSMS", "license": "Apache 2.0", "maintainer": null, "maintainer_email": null, "name": "dsms_cli", "package_url": "https://pypi.org/project/dsms_cli/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/dsms_cli/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.org/dsms/dsms_report_cli"}, "release_url": "https://pypi.org/project/dsms_cli/1.1.8/", "requires_dist": null, "requires_python": null, "summary": "DSMS CLI tool", "version": "1.1.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            DSMS CLI tool<br>--------------------<br><br>dsms_cli is a command line interface for exporting reports from a DSMS<br>system.<br><br>============<br>Installation<br>============<br><br>``pip install dsms-cli``<br><br>========<br>Setup<br>========<br><br>Before you'll begin, you'll need several settings set as environment variables:<br><br>* DSMS_SERVER    (e.g. https://mydsmsserver)<br>* DSMS_USER      (e.g. tom)<br>* DSMS_PASS      (e.g. ThisIsMyPassword)<br>* DSMS_SERVER_CERT (optional: e.g. /usr/share/ca-certificates/dsmserver.crt)<br><br>=========<br>Adding targets<br>=========<br><br>To add targets, you'll firstly need the ID numbers of the schedules, profiles<br>and severities you wish to add. You can do this with::<br><br>    dsms_cli list schedules<br>    dsms_cli list profiles<br>    dsms_cli list severities<br><br>Then, you're ready to add targets. For example::<br><br>    dsms_cli add location --profile=1 --schedule=1 http://example.com<br>    dsms_cli add file --profile=2 --schedule=1 mysample.exe<br><br>For file types, the local file path you specify will be uploaded to DSMS.<br><br>=========<br>Running reports<br>=========<br><br><br>You can also run searches of DSMS results using the same filter syntax as the<br>web application. For example, to get all active phishing targets, run::<br><br>    dsms_cli export --query=\"status:Active type:Phishing\"<br><br>You can also redact potentially sensitive information in target information<br>by supplying the --redact switch. This will replace URLs like<br>http://example.com/?id=me@example.com with<br>http://example.com/?id=REDACTED@REDACTED.<br><br>=========<br>Report formats<br>=========<br><br>DSMS has a simple build-in report template, but you may create templates in any<br>format you like. Reports are generated by the Jinja2 template engine. See<br>http://jinja.pocoo.org/docs/dev/templates/ for details of the format. <br><br>If you'd like to add report formats:<br><br>1) Create a directory to house your templates, e.g. $HOME/dsms_templates.<br>2) Create your template using the .j2 extension, e.g.<br>   $HOME/dsms_templates/my_format.j2.<br>3) Templates must adhere to Jinja2 format. You can find a simple example of<br>   the DSMS standard template at<br>   https://gist.github.com/chorsley/d52f8e8bf3c6df4901b38ed316af5889.<br>4) Variable names map to the API fields for \"Target filter report\" under<br>   the \"results\" key. Please see<br>   https://bitbucket.org/irtools/dsms/wiki/UsingDSMSAPI for more information.<br>5) Finally, run the report. Using our example values:<br>   ``dsms_cli export --template_dir=$HOME/dsms_templates --template=my_format``.<br>   Naturally, you can combine this with --query, --redact etc to filter the<br>   targets that will appear in the report.<br><br>=========<br>SSL errors<br>=========<br><br>If you're using DSMS with a self-signed SSL certificate, you may run into the<br>following error::<br><br>    RuntimeError: Error during login: bad handshake: Error([('SSL routines',<br>    'SSL3_GET_SERVER_CERTIFICATE', 'certificate verify failed')],)<br><br>There are two options to avoid this.<br><br>1) You can specify the path to a trusted SSL certificate using the<br>DSMS_SERVER_CERT environment setting. To get this cert, you can run::<br><br>    openssl s_client -showcerts -connect [YOUR DSMS HOST]:443 &lt;/dev/null \\<br>    2&gt;/dev/null|openssl x509 -outform PEM &gt;dsms_server_cert.crt<br><br>Then, set the cert path to the file you downloaded::<br><br>    export DSMS_SERVER_CERT=dsms_server_cert.crt<br><br>2) While not recommended, you can also ignore all SSL errors by appending<br>--ignore_ssl_errs to your dsms_cli command.<br><br>=========<br>Further help<br>=========<br><br>To see all command line switches, you can run::<br><br>    dsms_cli --help\n          </div>"}, "last_serial": 2077739, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "5e49cfa37f233b8d8e34b932c046af7f", "sha256": "06f56d9c53d187af672040379780367b0cb8de0d5b34e5c4798624d2c01e0509"}, "downloads": -1, "filename": "dsms_cli-1.1.0.tar.gz", "has_sig": false, "md5_digest": "5e49cfa37f233b8d8e34b932c046af7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8507, "upload_time": "2016-01-11T09:15:43", "upload_time_iso_8601": "2016-01-11T09:15:43.855558Z", "url": "https://files.pythonhosted.org/packages/9b/06/5d19814c873cf9ce1c3f7c0c446d075f9b075bfad2fb02b2853da004327b/dsms_cli-1.1.0.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "7213b007ed34ac594c2de811dfc74bbd", "sha256": "4098e6fa754a364c9f3f48861ab1c2b2ccce076cc6695654ed0b3b33ee561da7"}, "downloads": -1, "filename": "dsms_cli-1.1.2.tar.gz", "has_sig": false, "md5_digest": "7213b007ed34ac594c2de811dfc74bbd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9217, "upload_time": "2016-02-03T06:46:44", "upload_time_iso_8601": "2016-02-03T06:46:44.995762Z", "url": "https://files.pythonhosted.org/packages/4c/9f/d4a7e356b610f2952ba781dfd3516ec09f0532a668b845bc237a0a28cab8/dsms_cli-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "7f4a606858aa732702b573b886a3ff5c", "sha256": "b2c2beb7d4883d50751f7e9a2542c03d264dfff5418cc34efa8298fab20c88c2"}, "downloads": -1, "filename": "dsms_cli-1.1.3.tar.gz", "has_sig": false, "md5_digest": "7f4a606858aa732702b573b886a3ff5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9230, "upload_time": "2016-02-03T06:50:38", "upload_time_iso_8601": "2016-02-03T06:50:38.554140Z", "url": "https://files.pythonhosted.org/packages/39/16/6535269fca328b512f9ab2af37b1e5290465881580126ac6e5053e90bcc1/dsms_cli-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "5d3542321c71b7e96d592fad859ba6fd", "sha256": "25113a66698ac14d1bc8f55a811273b26fd0d4c13e309598a52bfb7304625353"}, "downloads": -1, "filename": "dsms_cli-1.1.4.tar.gz", "has_sig": false, "md5_digest": "5d3542321c71b7e96d592fad859ba6fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9441, "upload_time": "2016-04-12T05:10:55", "upload_time_iso_8601": "2016-04-12T05:10:55.973122Z", "url": "https://files.pythonhosted.org/packages/1b/44/ad7bbea9322da7f6c1afc13665968ac624a5a8480cf2e1a18ba3fdcbccf5/dsms_cli-1.1.4.tar.gz", "yanked": false}], "1.1.5": [{"comment_text": "", "digests": {"md5": "369e45a0d3a14ad0d9d63ee2a17becf1", "sha256": "735f7c83a4f2f79686e241cf7b3abc673193598548145b5e07c6c8cefcfc0879"}, "downloads": -1, "filename": "dsms_cli-1.1.5.tar.gz", "has_sig": false, "md5_digest": "369e45a0d3a14ad0d9d63ee2a17becf1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9469, "upload_time": "2016-04-21T10:28:20", "upload_time_iso_8601": "2016-04-21T10:28:20.599668Z", "url": "https://files.pythonhosted.org/packages/c7/d3/52aa9212c4f60b9dcebf5934d964f8d359304445ae4052d672e901913443/dsms_cli-1.1.5.tar.gz", "yanked": false}], "1.1.6": [{"comment_text": "", "digests": {"md5": "df1c17a7ad847dccc7dca424019687f4", "sha256": "c32f4488770daab96920e4beeb7fc8fead3b138f8d1c1dee398814b4ad7a40db"}, "downloads": -1, "filename": "dsms_cli-1.1.6.tar.gz", "has_sig": false, "md5_digest": "df1c17a7ad847dccc7dca424019687f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9913, "upload_time": "2016-04-21T10:45:09", "upload_time_iso_8601": "2016-04-21T10:45:09.931326Z", "url": "https://files.pythonhosted.org/packages/51/c4/75c3db28e6bea7f27f4f1a8b30a1aa2d01a871639409491e546fab7791c7/dsms_cli-1.1.6.tar.gz", "yanked": false}], "1.1.7": [{"comment_text": "", "digests": {"md5": "31639dee4c0e61a470501a5b1ce76c95", "sha256": "2b5f55c14a3903546609e9e1fceebf8082551f6b4172289ba9e79569c5dafba4"}, "downloads": -1, "filename": "dsms_cli-1.1.7.tar.gz", "has_sig": false, "md5_digest": "31639dee4c0e61a470501a5b1ce76c95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9992, "upload_time": "2016-04-22T01:10:45", "upload_time_iso_8601": "2016-04-22T01:10:45.175380Z", "url": "https://files.pythonhosted.org/packages/ab/0b/1f71f3c6975e3f4e8cf07150e83d3a736ec3888fd33fa066e7ee9bed0eef/dsms_cli-1.1.7.tar.gz", "yanked": false}], "1.1.8": [{"comment_text": "", "digests": {"md5": "736fa8dadf5b33e3e4440f26793a1aca", "sha256": "368b2b38949685f25ff0b1ea1fa4c325493d06f8533741605f4bb2e9c0884cd1"}, "downloads": -1, "filename": "dsms_cli-1.1.8.tar.gz", "has_sig": false, "md5_digest": "736fa8dadf5b33e3e4440f26793a1aca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10127, "upload_time": "2016-04-22T07:47:49", "upload_time_iso_8601": "2016-04-22T07:47:49.274466Z", "url": "https://files.pythonhosted.org/packages/53/bf/df5a43d00aad25af81792b8df74802b07c1f84ad0ed9be10594219aeaf5e/dsms_cli-1.1.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "736fa8dadf5b33e3e4440f26793a1aca", "sha256": "368b2b38949685f25ff0b1ea1fa4c325493d06f8533741605f4bb2e9c0884cd1"}, "downloads": -1, "filename": "dsms_cli-1.1.8.tar.gz", "has_sig": false, "md5_digest": "736fa8dadf5b33e3e4440f26793a1aca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10127, "upload_time": "2016-04-22T07:47:49", "upload_time_iso_8601": "2016-04-22T07:47:49.274466Z", "url": "https://files.pythonhosted.org/packages/53/bf/df5a43d00aad25af81792b8df74802b07c1f84ad0ed9be10594219aeaf5e/dsms_cli-1.1.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:21 2020"}