{"info": {"author": "Nina Pavlich", "author_email": "nina@cgparntersllc.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "django-social-share-settings\n=======================\n\nModel and front end library for choosing and integrating social media share widgets, similar to AddThis.\n\n\n#Install\n\nAdd to your requirements.txt file:\n```python\n#requirements.txt\n\n-e git+https://github.com/ninapavlich/django-social-share-settings.git@2ac1309c5f2e4a816263ee689bcc60655a0643b5#egg=django-social-share-settings-dev\n\n```\nRun install:\n```\n> pip install -r requirements.txt\n```\n\n#CMS Usage:\n\nTo make social settings administerable, include django_social_share_settings and rake the database:\n```python\n#settings.py\n\n\n\tINSTALLED_APPS = (\n    ...\n    'django_social_share_settings',\n    ...\n    )\n```\n\n```\n> python manage.py schemamigration django_social_share_settings --initial\n> python manage.py migrate django_social_share_settings\n```\n\nTo make track social shares:\n\n```python\n#urls.py\n(r'^', include('django_social_share_settings.urls')),    \n```\n\n\n\n#Template Usage:\nTo output share icons based on the settings from the cms, use the \n\"social_share_settings_tags\" template tags. In this case I'm using \n\"Font Awesome\" to render the icons.\n```\n#social-share-partial.html\n{% load social_share_settings_tags %}\n\n{% get_social_share_links as social_links %}\n\n{% if social_links|length > 0 %}\n<ul class=\"social sticky\">\n\t{% for link in social_links %}\n\t\t{% get_social_share_link link object.get_absolute_url object.title as link_url %}\n\t\t<li>\n\t\t\t<a href=\"{{ link_url }}\" target=\"_blank\">\n\t\t\t\t<i class=\"fa fa-{{link.font_awesome_class}}\"></i>\n\t\t\t</a>\n\t\t</li>\n\t{% endfor %}\t\n</ul>\n{% endif %}\n```\n\n\n#Sticky Usage\nFor sticky behavior, include or compile in the styles and javscript.\n\nSee screencast of sticky widget in action: http://screencast.com/t/Gm8Sah4IMQ\n```html\n#base-template.html\n<!-- Include Font Awesome  for easier social icons -->\n<link href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css\" rel=\"stylesheet\" />\n\n<!-- Include js plugin and css or compile into your source js -->\n<link rel=\"stylesheet\" href=\"{% static 'ccl/sticky.min.css' %}\"/>\n<script src=\"{% static 'js/sticky.jqueryplugin.js'%}\"></script>\n<script>\n    $(\".sticky\").sticky({\n        topSelector : \"#main\",\n        bottomSelector : \"#footer\",\n        fixedMargin : 160,\n        topMargin : 0,\n        bottomMargin : 0\n    });\n</script>\n```\n*topSelector* is the selector for the item the sticky widget should top-align with.\n\n*bottomSelector* is the selector for the item the sticky widget should not go below.\n\n*topMargin* refers to the top margin the sticky item will have when aligned to the top selector item\n\n![topMargin example](/../master/docs/screenshots/top_margin.png?raw=true \"topMargin example\")\n\n*fixedMargin* refers to the top margin the sticky item will have when the screen has scrolled past the top selector item\n\n![fixedMargin example](/../master/docs/screenshots/fixed_margin.png?raw=true \"fixedMargin example\")\n\n*bottomMargin* refers to the bottom margin the sticky item will have when aligned to the bottom selector item\n\n![bottomMargin example](/../master/docs/screenshots/bottom_margin.png?raw=true \"bottomMargin example\")", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ninapavlich/django-social-share-settings", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-social-share-settings", "package_url": "https://pypi.org/project/django-social-share-settings/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-social-share-settings/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ninapavlich/django-social-share-settings"}, "release_url": "https://pypi.org/project/django-social-share-settings/0.2/", "requires_dist": null, "requires_python": null, "summary": "Model and front end library for choosing and integrating social media share widgets.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            django-social-share-settings<br>=======================<br><br>Model and front end library for choosing and integrating social media share widgets, similar to AddThis.<br><br><br>#Install<br><br>Add to your requirements.txt file:<br>```python<br>#requirements.txt<br><br>-e git+https://github.com/ninapavlich/django-social-share-settings.git@2ac1309c5f2e4a816263ee689bcc60655a0643b5#egg=django-social-share-settings-dev<br><br>```<br>Run install:<br>```<br>&gt; pip install -r requirements.txt<br>```<br><br>#CMS Usage:<br><br>To make social settings administerable, include django_social_share_settings and rake the database:<br>```python<br>#settings.py<br><br><br>\tINSTALLED_APPS = (<br>    ...<br>    'django_social_share_settings',<br>    ...<br>    )<br>```<br><br>```<br>&gt; python manage.py schemamigration django_social_share_settings --initial<br>&gt; python manage.py migrate django_social_share_settings<br>```<br><br>To make track social shares:<br><br>```python<br>#urls.py<br>(r'^', include('django_social_share_settings.urls')),    <br>```<br><br><br><br>#Template Usage:<br>To output share icons based on the settings from the cms, use the <br>\"social_share_settings_tags\" template tags. In this case I'm using <br>\"Font Awesome\" to render the icons.<br>```<br>#social-share-partial.html<br>{% load social_share_settings_tags %}<br><br>{% get_social_share_links as social_links %}<br><br>{% if social_links|length &gt; 0 %}<br>&lt;ul class=\"social sticky\"&gt;<br>\t{% for link in social_links %}<br>\t\t{% get_social_share_link link object.get_absolute_url object.title as link_url %}<br>\t\t&lt;li&gt;<br>\t\t\t&lt;a href=\"{{ link_url }}\" target=\"_blank\"&gt;<br>\t\t\t\t&lt;i class=\"fa fa-{{link.font_awesome_class}}\"&gt;&lt;/i&gt;<br>\t\t\t&lt;/a&gt;<br>\t\t&lt;/li&gt;<br>\t{% endfor %}\t<br>&lt;/ul&gt;<br>{% endif %}<br>```<br><br><br>#Sticky Usage<br>For sticky behavior, include or compile in the styles and javscript.<br><br>See screencast of sticky widget in action: http://screencast.com/t/Gm8Sah4IMQ<br>```html<br>#base-template.html<br>&lt;!-- Include Font Awesome  for easier social icons --&gt;<br>&lt;link href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css\" rel=\"stylesheet\" /&gt;<br><br>&lt;!-- Include js plugin and css or compile into your source js --&gt;<br>&lt;link rel=\"stylesheet\" href=\"{% static 'ccl/sticky.min.css' %}\"/&gt;<br>&lt;script src=\"{% static 'js/sticky.jqueryplugin.js'%}\"&gt;&lt;/script&gt;<br>&lt;script&gt;<br>    $(\".sticky\").sticky({<br>        topSelector : \"#main\",<br>        bottomSelector : \"#footer\",<br>        fixedMargin : 160,<br>        topMargin : 0,<br>        bottomMargin : 0<br>    });<br>&lt;/script&gt;<br>```<br>*topSelector* is the selector for the item the sticky widget should top-align with.<br><br>*bottomSelector* is the selector for the item the sticky widget should not go below.<br><br>*topMargin* refers to the top margin the sticky item will have when aligned to the top selector item<br><br>![topMargin example](/../master/docs/screenshots/top_margin.png?raw=true \"topMargin example\")<br><br>*fixedMargin* refers to the top margin the sticky item will have when the screen has scrolled past the top selector item<br><br>![fixedMargin example](/../master/docs/screenshots/fixed_margin.png?raw=true \"fixedMargin example\")<br><br>*bottomMargin* refers to the bottom margin the sticky item will have when aligned to the bottom selector item<br><br>![bottomMargin example](/../master/docs/screenshots/bottom_margin.png?raw=true \"bottomMargin example\")\n          </div>"}, "last_serial": 1478033, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "e246b8453afc96fc436a2d59be24ae6e", "sha256": "fa40201b691ee086a8e0b8b3bc8313fa9b471ca2c7b62ad39348f27ee257c1cc"}, "downloads": -1, "filename": "django-social-share-settings-0.2.tar.gz", "has_sig": false, "md5_digest": "e246b8453afc96fc436a2d59be24ae6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10227, "upload_time": "2015-03-26T01:39:13", "upload_time_iso_8601": "2015-03-26T01:39:13.904428Z", "url": "https://files.pythonhosted.org/packages/61/c8/5442fa60b93cd2fd8c187d6490a1a6e292f0be44d79bd3db49f3050e6f5e/django-social-share-settings-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e246b8453afc96fc436a2d59be24ae6e", "sha256": "fa40201b691ee086a8e0b8b3bc8313fa9b471ca2c7b62ad39348f27ee257c1cc"}, "downloads": -1, "filename": "django-social-share-settings-0.2.tar.gz", "has_sig": false, "md5_digest": "e246b8453afc96fc436a2d59be24ae6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10227, "upload_time": "2015-03-26T01:39:13", "upload_time_iso_8601": "2015-03-26T01:39:13.904428Z", "url": "https://files.pythonhosted.org/packages/61/c8/5442fa60b93cd2fd8c187d6490a1a6e292f0be44d79bd3db49f3050e6f5e/django-social-share-settings-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:06 2020"}