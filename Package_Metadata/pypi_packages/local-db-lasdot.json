{"info": {"author": "Kelechi Ogudu", "author_email": "icheleck25@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Local Database\n\n## Description: \nPopluate and query local mongo server with \nenergy api data\n<hr>\n\n## Installation Steps:\n### Requirements:\n`numpy:` 1.18.2\n<br>\n`pandas:` 1.0.3\n<br>\n `pymongo:` 3.10.1\n <br>\n `tqdm:` 4.45.0\n\n <b>note:</b> Please ensure that mongodb is installed and active before running.\n\n### Installation:\n`pip install local-db-lasdot==0.0.1`\n\n\n### Import Statement:\n~~~\nfrom local_db.create_db import CreateDb\n\nfrom local_db.query_db import QueryDb\n~~~\n\n\n# Populate Database Section\n## Sample Usage\n\n### Batch insertion:\n~~~~\ncreate_db = CreateDb(db_name='example_db')\ncreate_db.batch_insert('folder_path')\n~~~~\n\n### Single insert:\n~~~~\ncreate = CreateDb(db_name='example_db')\ncreate.single_insert(time_collection='time_(1_min|15_min)', data_file_dir='data folder path', meta_file_dir='metadata folder path')\n~~~~\n\n# Query Database Section\n## Sample Usage\n\n### Query with filter\n~~~\nquery = QueryDb(db_name='example_db')\nquery_param = ['nest', 'grid', 'solar', 'clotheswasher1', 'dishwasher1']\ndata, id_list = query.query_df(query_param, 'time_15_min', db_op='OR', city=['all'])\ntry:\n    data = QueryDb.filter_by(data, dataid='6139', city='austin')\nexcept Exception as e:\n    print(e)\n~~~\n\n### Query with dictionary parameter\n~~~\nquery = QueryDb(db_name='example_db')\nquery_param = ['air1', 'nest', {'first_floor_square_footage': 2148}]\n\ndata, id_list = query.query_df(\n    query_param,\n    time_collection='time_15_min',\n    db_op='AND',\n    city=['all']\n    first_floor_sqft_tol=0\n)\n~~~\n\n### Test scripts\nMust have test json files to implement this.\n<br>\n<b>note: </b> commands must be implemented from command line ./local_db directory\n\n~~~\npython -m unittest tester.TestCreateDbClass.test_db_server\n\npython -m unittest tester.TestCreateDbClass.test_batch_insert\n\npython -m unittest tester.TestCreateDbClass.test_query_error_check\n\npython -m unittest tester.TestCreateDbClass.test_query_empty\n\npython -m unittest tester.TestCreateDbClass.test_query_db_op\n~~~\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Leko25/LocalDb.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "local-db-lasdot", "package_url": "https://pypi.org/project/local-db-lasdot/", "platform": "", "project_url": "https://pypi.org/project/local-db-lasdot/", "project_urls": {"Homepage": "https://github.com/Leko25/LocalDb.git"}, "release_url": "https://pypi.org/project/local-db-lasdot/0.0.2/", "requires_dist": null, "requires_python": ">=3.5", "summary": "light weight package for populating mongo database and query it with energy data", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Local Database</h1>\n<h2>Description:</h2>\n<p>Popluate and query local mongo server with\nenergy api data</p>\n<hr>\n<h2>Installation Steps:</h2>\n<h3>Requirements:</h3>\n<p><code>numpy:</code> 1.18.2\n<br>\n<code>pandas:</code> 1.0.3\n<br>\n<code>pymongo:</code> 3.10.1\n<br>\n<code>tqdm:</code> 4.45.0</p>\n<p><b>note:</b> Please ensure that mongodb is installed and active before running.</p>\n<h3>Installation:</h3>\n<p><code>pip install local-db-lasdot==0.0.1</code></p>\n<h3>Import Statement:</h3>\n<pre><code>from local_db.create_db import CreateDb\n\nfrom local_db.query_db import QueryDb\n</code></pre>\n<h1>Populate Database Section</h1>\n<h2>Sample Usage</h2>\n<h3>Batch insertion:</h3>\n<pre><code>create_db = CreateDb(db_name='example_db')\ncreate_db.batch_insert('folder_path')\n</code></pre>\n<h3>Single insert:</h3>\n<pre><code>create = CreateDb(db_name='example_db')\ncreate.single_insert(time_collection='time_(1_min|15_min)', data_file_dir='data folder path', meta_file_dir='metadata folder path')\n</code></pre>\n<h1>Query Database Section</h1>\n<h2>Sample Usage</h2>\n<h3>Query with filter</h3>\n<pre><code>query = QueryDb(db_name='example_db')\nquery_param = ['nest', 'grid', 'solar', 'clotheswasher1', 'dishwasher1']\ndata, id_list = query.query_df(query_param, 'time_15_min', db_op='OR', city=['all'])\ntry:\n    data = QueryDb.filter_by(data, dataid='6139', city='austin')\nexcept Exception as e:\n    print(e)\n</code></pre>\n<h3>Query with dictionary parameter</h3>\n<pre><code>query = QueryDb(db_name='example_db')\nquery_param = ['air1', 'nest', {'first_floor_square_footage': 2148}]\n\ndata, id_list = query.query_df(\n    query_param,\n    time_collection='time_15_min',\n    db_op='AND',\n    city=['all']\n    first_floor_sqft_tol=0\n)\n</code></pre>\n<h3>Test scripts</h3>\n<p>Must have test json files to implement this.\n<br>\n<b>note: </b> commands must be implemented from command line ./local_db directory</p>\n<pre><code>python -m unittest tester.TestCreateDbClass.test_db_server\n\npython -m unittest tester.TestCreateDbClass.test_batch_insert\n\npython -m unittest tester.TestCreateDbClass.test_query_error_check\n\npython -m unittest tester.TestCreateDbClass.test_query_empty\n\npython -m unittest tester.TestCreateDbClass.test_query_db_op\n</code></pre>\n\n          </div>"}, "last_serial": 7029481, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "189882ee325d032d8b11adbf98421d5e", "sha256": "2d3176f2f6695bcc0843c864e451fda0bd0e8bd3624cfd97601cfd3c7c3a9568"}, "downloads": -1, "filename": "local_db_lasdot-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "189882ee325d032d8b11adbf98421d5e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 20449, "upload_time": "2020-04-15T01:56:00", "upload_time_iso_8601": "2020-04-15T01:56:00.095232Z", "url": "https://files.pythonhosted.org/packages/79/2d/7a616bed40654fb3aef60126a7db46c29e15d3c7011b183ca9163a02903c/local_db_lasdot-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "269c18225db9c2c13f74f2ab1d12ff23", "sha256": "1c19739d07c668d4b3a32ccac9445f20302fb6a379cf4bcc94d5b000cd9146f1"}, "downloads": -1, "filename": "local_db-lasdot-0.0.1.tar.gz", "has_sig": false, "md5_digest": "269c18225db9c2c13f74f2ab1d12ff23", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7725, "upload_time": "2020-04-15T01:56:02", "upload_time_iso_8601": "2020-04-15T01:56:02.015929Z", "url": "https://files.pythonhosted.org/packages/25/bf/dd312c5d92b24bce4aecb46199198ccf824df42c04fae86f89ca6c544177/local_db-lasdot-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "03433332a6884aef05684d1f7237c11e", "sha256": "1e19995a675bbea69a527d870845808e3204c6b68261c8892db2d376a9c3ac44"}, "downloads": -1, "filename": "local_db_lasdot-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "03433332a6884aef05684d1f7237c11e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 20616, "upload_time": "2020-04-16T04:43:41", "upload_time_iso_8601": "2020-04-16T04:43:41.460820Z", "url": "https://files.pythonhosted.org/packages/19/b6/f66ad44e1834d5f45f895e7605c25f4cbb6b68835482e3c1206172d800ba/local_db_lasdot-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5cb41ac1d38fb48ae801e5eac94aae5f", "sha256": "4c5627256cf18e2025f7d1c0af858cf960b58e84dff754489dafda171040c79a"}, "downloads": -1, "filename": "local_db-lasdot-0.0.2.tar.gz", "has_sig": false, "md5_digest": "5cb41ac1d38fb48ae801e5eac94aae5f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8002, "upload_time": "2020-04-16T04:43:42", "upload_time_iso_8601": "2020-04-16T04:43:42.236634Z", "url": "https://files.pythonhosted.org/packages/82/86/2d2dd089158950b6a75891e2c903f1227c7cea6f4b5dd5d6876154dcfa36/local_db-lasdot-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "03433332a6884aef05684d1f7237c11e", "sha256": "1e19995a675bbea69a527d870845808e3204c6b68261c8892db2d376a9c3ac44"}, "downloads": -1, "filename": "local_db_lasdot-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "03433332a6884aef05684d1f7237c11e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 20616, "upload_time": "2020-04-16T04:43:41", "upload_time_iso_8601": "2020-04-16T04:43:41.460820Z", "url": "https://files.pythonhosted.org/packages/19/b6/f66ad44e1834d5f45f895e7605c25f4cbb6b68835482e3c1206172d800ba/local_db_lasdot-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5cb41ac1d38fb48ae801e5eac94aae5f", "sha256": "4c5627256cf18e2025f7d1c0af858cf960b58e84dff754489dafda171040c79a"}, "downloads": -1, "filename": "local_db-lasdot-0.0.2.tar.gz", "has_sig": false, "md5_digest": "5cb41ac1d38fb48ae801e5eac94aae5f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8002, "upload_time": "2020-04-16T04:43:42", "upload_time_iso_8601": "2020-04-16T04:43:42.236634Z", "url": "https://files.pythonhosted.org/packages/82/86/2d2dd089158950b6a75891e2c903f1227c7cea6f4b5dd5d6876154dcfa36/local_db-lasdot-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:38 2020"}