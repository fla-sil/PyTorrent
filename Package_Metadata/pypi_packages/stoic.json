{"info": {"author": "Mark Haines", "author_email": "mjark@negativecurvature.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2"], "description": "Stoic\n        =====\n        \n        A more reliable way to run programs.\n        \n        Features\n        --------\n        \n        * Restarts your process when it dies.\n        * Doesn't tightloop if your process immediately dies again.\n        * Captures stdout and stderr from your process and logs them with\n          timestamps[1]_.\n        * Can be run in the background as a daemon[2]_.\n        * Gracefully move between different stoic processses, waiting for the previous\n          process to stop and release any ports before starting the next[3]_.\n        * Notifies by email[4]_, IRC[5]_ or HTTP[6]_ when the process restarts.\n        \n        .. [1] Timestamps in log files not implemented yet.\n        .. [2] Daemonising not implemented yet.\n        .. [3] Graceful restarts not implemented yet.\n        .. [4] Email notifications not implemented yet.\n        .. [5] IRC notifications not implemented yet.\n        .. [6] HTTP notifications not implemented yet.\n        \n        Usage\n        -----\n        \n        .. code:: sh\n        \n            # Run a command\n            stoic -- myprogram myarguments\n        \n            # Run a process in the background.\n            stoic --daemon --log-file=stoic.log --socket=stoic.control -- myprogram\n        \n            # Replace a running process\n            stoic --replace --log-file=stoic.log --socket=stoic.control -- myprogram\n        \n        Installation\n        ------------\n        \n        .. code:: sh\n        \n            pip install stoic", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/NegativeMjark/stoic", "keywords": "shell", "license": "Apache License, Version 2.0", "maintainer": null, "maintainer_email": null, "name": "stoic", "package_url": "https://pypi.org/project/stoic/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/stoic/", "project_urls": {"Homepage": "https://github.com/NegativeMjark/stoic"}, "release_url": "https://pypi.org/project/stoic/0.1/", "requires_dist": null, "requires_python": null, "summary": "A reliable way to run programs", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Stoic<br>        =====<br>        <br>        A more reliable way to run programs.<br>        <br>        Features<br>        --------<br>        <br>        * Restarts your process when it dies.<br>        * Doesn't tightloop if your process immediately dies again.<br>        * Captures stdout and stderr from your process and logs them with<br>          timestamps[1]_.<br>        * Can be run in the background as a daemon[2]_.<br>        * Gracefully move between different stoic processses, waiting for the previous<br>          process to stop and release any ports before starting the next[3]_.<br>        * Notifies by email[4]_, IRC[5]_ or HTTP[6]_ when the process restarts.<br>        <br>        .. [1] Timestamps in log files not implemented yet.<br>        .. [2] Daemonising not implemented yet.<br>        .. [3] Graceful restarts not implemented yet.<br>        .. [4] Email notifications not implemented yet.<br>        .. [5] IRC notifications not implemented yet.<br>        .. [6] HTTP notifications not implemented yet.<br>        <br>        Usage<br>        -----<br>        <br>        .. code:: sh<br>        <br>            # Run a command<br>            stoic -- myprogram myarguments<br>        <br>            # Run a process in the background.<br>            stoic --daemon --log-file=stoic.log --socket=stoic.control -- myprogram<br>        <br>            # Replace a running process<br>            stoic --replace --log-file=stoic.log --socket=stoic.control -- myprogram<br>        <br>        Installation<br>        ------------<br>        <br>        .. code:: sh<br>        <br>            pip install stoic\n          </div>"}, "last_serial": 1423214, "releases": {"0.1": []}, "urls": [], "timestamp": "Fri May  8 03:01:43 2020"}