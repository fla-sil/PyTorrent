{"info": {"author": "Rafael Goncalves Martins", "author_email": "rafael@rafaelmartins.eng.br", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Multimedia :: Sound/Audio", "Topic :: Multimedia :: Video"], "description": "marrie\n======\n\n``marrie`` is a simple podcast client that runs on the Command Line Interface.\nIt is pretty simple and just does the basic tasks: fetch and play podcast\nchapters listed on a feed.\n\n\nInstallation\n------------\n\n.. _`PyPI Package Index`: http://pypi.python.org/pypi\n.. _Gentoo: http://www.gentoo.org/\n\n``marrie`` is available on the `PyPI Package Index`_, and you can install it\nusing ``pip``::\n\n    # pip install marrie\n\nIf you are a Gentoo_ user, you can install it using your favorite package\nmanager::\n\n    # emerge -av media-sound/marrie\n\n\nConfiguration\n-------------\n\nWith ``marrie`` installed, you'll need a configuration file, with your list of\nfeeds and the commands to be used to fetch and play the podcast chapters.\n\nTo create it, just run the main script without arguments::\n\n    $ marrie\n\nThis command will raise an error, but will create a sample configuration file\nfor you at ``~/.marrie``. Edit it as follows.\n\n``[config]`` section\n~~~~~~~~~~~~~~~~~~~~\n\nThe main section of the configuration file.\n\n- ``fetch_command``: The command used to fetch the chapters. The default\n  command will use ``wget``. If you want to change it, make sure that the\n  variables ``%(file)s`` and ``%(url)s`` are correctly used on your command.\n- ``player_command``: The command used to play the chapters. The default\n  command will use ``mplayer``. If you want to change it, make sure that the\n  variable ``%(file)s`` is correctly used on your command.\n- ``media_dir``: The directory where the chapters will be stored. Defaults to\n  ``~/podcasts``. A subfolder will be created for each feed.\n\n``[podcast]`` section\n~~~~~~~~~~~~~~~~~~~~~\n\nThe section with the URLs of your feeds. Each ``key=value`` pair represents\na feed URL. The key is the identifier of the feed (it will be used later\nto choose the feed to be used by ``marrie``) and the value is the URL of\nthe feed. ::\n\n    [podcast]\n    my_podcast = http://example.org/feed.rss\n\nYou can add as many feeds as you want.\n\n\nBasic usage\n-----------\n\nAfter having ``marrie`` installed and configured, you should syncronize your\nfeeds::\n\n    $ marrie --sync\n\nIf you want to sync a single feed, you just need to provide its identifier::\n\n    $ marrie --sync my_podcast\n\n``marrie`` will not provide any auto-sync feature. It is simple! If you want\nto syncronize periodically, feel free to create a cron job on your system.\n\nWith a fresh list of feeds in cache, you'll want to download a chapter. If\nyou just want to get the latest chapter published in a feed, type::\n\n    $ marrie --get my_podcast\n\nIf you want to download a specific chapter, you'll need to list all the\navailable chapters first::\n\n    $ marrie --list my_podcast\n    ...\n\n    Remote files available for \"my_podcast\" (reverse sorted by date):\n\n        1: chapter_100.mp3 (Fri, 19 Dec 2014 03:00:00 +0000)\n        2: chapter_99.mp3 (Fri, 19 Dec 2014 02:00:00 +0000)\n        3: chapter_98.mp3 (Fri, 19 Dec 2014 01:00:00 +0000)\n    ...\n\nIf you want to download the ``chapter_99.mp3``, just type::\n\n    $ marrie --get my_podcast 2\n\nWhere ``2`` is the numeric identifier of the wanted chapter.\n\nAfter the download, you'll want to play the chapter. To play the latest\nchapter fetched by ``marrie`` (that isn't exactly the latest chapter published\non the feed, it is actually the latest chapter that was downloaded to your\nfilesystem), just type::\n\n    $ marrie --play my_podcast\n\nTo play a specific chapter (after download it, obviously), you'll need to list\nthe chapters available on your disk::\n\n    $ marrie --list my_podcast\n    Fetched files available for \"nageral\" (sorted by name):\n\n        1: chapter_1.mp3\n        2: chapter_2.mp3\n        3: chapter_2.mp3\n    ...\n\nThis is the same command used to list the available chapters to download. The\noutput will contains both lists.\n\nIf you want to play ``chapter_2.mp3``, just type::\n\n    $ marrie --play my_podcast 2\n\nWhere ``2`` is the numeric identifier of the wanted chapter.\n\nIf you are bored with the absence of new chapters of your favorite podcast,\nyou can ask ``marrie`` to play a random old chapter for you. It will pick any\nof the chapters that were previously fetched and will play for you::\n\n    $ marrie --play-random my_podcast\n\nThat's it. This is pretty much everything that ``marrie`` can do for you!\n\n\nContributions\n-------------\n\nYou can send patches to my email address:\n\nrafael@rafaelmartins.eng.br .\n\nPatches should be created against the Git repository:\n\nhttps://github.com/rafaelmartins/marrie/\n\nAny patch that heavily increases the complexity of the script will be rejected!", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rafaelmartins/marrie", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "marrie", "package_url": "https://pypi.org/project/marrie/", "platform": "", "project_url": "https://pypi.org/project/marrie/", "project_urls": {"Homepage": "https://github.com/rafaelmartins/marrie"}, "release_url": "https://pypi.org/project/marrie/0.4/", "requires_dist": null, "requires_python": "", "summary": "A simple podcast client that runs on the Command Line Interface.", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>marrie</tt> is a simple podcast client that runs on the Command Line Interface.\nIt is pretty simple and just does the basic tasks: fetch and play podcast\nchapters listed on a feed.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>marrie</tt> is available on the <a href=\"http://pypi.python.org/pypi\" rel=\"nofollow\">PyPI Package Index</a>, and you can install it\nusing <tt>pip</tt>:</p>\n<pre># pip install marrie\n</pre>\n<p>If you are a <a href=\"http://www.gentoo.org/\" rel=\"nofollow\">Gentoo</a> user, you can install it using your favorite package\nmanager:</p>\n<pre># emerge -av media-sound/marrie\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>With <tt>marrie</tt> installed, you\u2019ll need a configuration file, with your list of\nfeeds and the commands to be used to fetch and play the podcast chapters.</p>\n<p>To create it, just run the main script without arguments:</p>\n<pre>$ marrie\n</pre>\n<p>This command will raise an error, but will create a sample configuration file\nfor you at <tt><span class=\"pre\">~/.marrie</span></tt>. Edit it as follows.</p>\n<div id=\"config-section\">\n<h3><tt>[config]</tt> section</h3>\n<p>The main section of the configuration file.</p>\n<ul>\n<li><tt>fetch_command</tt>: The command used to fetch the chapters. The default\ncommand will use <tt>wget</tt>. If you want to change it, make sure that the\nvariables <tt>%(file)s</tt> and <tt>%(url)s</tt> are correctly used on your command.</li>\n<li><tt>player_command</tt>: The command used to play the chapters. The default\ncommand will use <tt>mplayer</tt>. If you want to change it, make sure that the\nvariable <tt>%(file)s</tt> is correctly used on your command.</li>\n<li><tt>media_dir</tt>: The directory where the chapters will be stored. Defaults to\n<tt>~/podcasts</tt>. A subfolder will be created for each feed.</li>\n</ul>\n</div>\n<div id=\"podcast-section\">\n<h3><tt>[podcast]</tt> section</h3>\n<p>The section with the URLs of your feeds. Each <tt>key=value</tt> pair represents\na feed URL. The key is the identifier of the feed (it will be used later\nto choose the feed to be used by <tt>marrie</tt>) and the value is the URL of\nthe feed.</p>\n<pre>[podcast]\nmy_podcast = http://example.org/feed.rss\n</pre>\n<p>You can add as many feeds as you want.</p>\n</div>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic usage</h2>\n<p>After having <tt>marrie</tt> installed and configured, you should syncronize your\nfeeds:</p>\n<pre>$ marrie --sync\n</pre>\n<p>If you want to sync a single feed, you just need to provide its identifier:</p>\n<pre>$ marrie --sync my_podcast\n</pre>\n<p><tt>marrie</tt> will not provide any auto-sync feature. It is simple! If you want\nto syncronize periodically, feel free to create a cron job on your system.</p>\n<p>With a fresh list of feeds in cache, you\u2019ll want to download a chapter. If\nyou just want to get the latest chapter published in a feed, type:</p>\n<pre>$ marrie --get my_podcast\n</pre>\n<p>If you want to download a specific chapter, you\u2019ll need to list all the\navailable chapters first:</p>\n<pre>$ marrie --list my_podcast\n...\n\nRemote files available for \"my_podcast\" (reverse sorted by date):\n\n    1: chapter_100.mp3 (Fri, 19 Dec 2014 03:00:00 +0000)\n    2: chapter_99.mp3 (Fri, 19 Dec 2014 02:00:00 +0000)\n    3: chapter_98.mp3 (Fri, 19 Dec 2014 01:00:00 +0000)\n...\n</pre>\n<p>If you want to download the <tt>chapter_99.mp3</tt>, just type:</p>\n<pre>$ marrie --get my_podcast 2\n</pre>\n<p>Where <tt>2</tt> is the numeric identifier of the wanted chapter.</p>\n<p>After the download, you\u2019ll want to play the chapter. To play the latest\nchapter fetched by <tt>marrie</tt> (that isn\u2019t exactly the latest chapter published\non the feed, it is actually the latest chapter that was downloaded to your\nfilesystem), just type:</p>\n<pre>$ marrie --play my_podcast\n</pre>\n<p>To play a specific chapter (after download it, obviously), you\u2019ll need to list\nthe chapters available on your disk:</p>\n<pre>$ marrie --list my_podcast\nFetched files available for \"nageral\" (sorted by name):\n\n    1: chapter_1.mp3\n    2: chapter_2.mp3\n    3: chapter_2.mp3\n...\n</pre>\n<p>This is the same command used to list the available chapters to download. The\noutput will contains both lists.</p>\n<p>If you want to play <tt>chapter_2.mp3</tt>, just type:</p>\n<pre>$ marrie --play my_podcast 2\n</pre>\n<p>Where <tt>2</tt> is the numeric identifier of the wanted chapter.</p>\n<p>If you are bored with the absence of new chapters of your favorite podcast,\nyou can ask <tt>marrie</tt> to play a random old chapter for you. It will pick any\nof the chapters that were previously fetched and will play for you:</p>\n<pre>$ marrie --play-random my_podcast\n</pre>\n<p>That\u2019s it. This is pretty much everything that <tt>marrie</tt> can do for you!</p>\n</div>\n<div id=\"contributions\">\n<h2>Contributions</h2>\n<p>You can send patches to my email address:</p>\n<p><a href=\"mailto:rafael%40rafaelmartins.eng.br\">rafael<span>@</span>rafaelmartins<span>.</span>eng<span>.</span>br</a> .</p>\n<p>Patches should be created against the Git repository:</p>\n<p><a href=\"https://github.com/rafaelmartins/marrie/\" rel=\"nofollow\">https://github.com/rafaelmartins/marrie/</a></p>\n<p>Any patch that heavily increases the complexity of the script will be rejected!</p>\n</div>\n\n          </div>"}, "last_serial": 6461016, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "d34751c4f1447b737953f55f5bdd092b", "sha256": "67ef89aa4d56789b6674a8599b3a53ada76dffd83ce0d4737921111f1db7c047"}, "downloads": -1, "filename": "marrie-0.2.tar.gz", "has_sig": false, "md5_digest": "d34751c4f1447b737953f55f5bdd092b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4663, "upload_time": "2010-05-13T06:00:37", "upload_time_iso_8601": "2010-05-13T06:00:37.746145Z", "url": "https://files.pythonhosted.org/packages/f0/19/8c48426648092f841f72e1b172c36e782f39d594a70ac012e2786ac2b99b/marrie-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "2f1510796e10b023b851208b47f55e62", "sha256": "8431d0380f105920fe2b2955eb03bba21d874dc3776a9a06fadc4204c1147639"}, "downloads": -1, "filename": "marrie-0.2.1.tar.gz", "has_sig": false, "md5_digest": "2f1510796e10b023b851208b47f55e62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4728, "upload_time": "2010-08-13T05:24:10", "upload_time_iso_8601": "2010-08-13T05:24:10.993717Z", "url": "https://files.pythonhosted.org/packages/88/39/f2eac6c5d71b5f14d25cabd9791a7a7f01429cef32777ab1cb25427c7be1/marrie-0.2.1.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "2d69452b0950d52aae5468fbd3208b76", "sha256": "ec83a3ee9ececd94f4751d73f48b65241f290a1c0b665512c572542f9a0f6383"}, "downloads": -1, "filename": "marrie-0.3.tar.gz", "has_sig": false, "md5_digest": "2d69452b0950d52aae5468fbd3208b76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7565, "upload_time": "2012-11-22T03:51:02", "upload_time_iso_8601": "2012-11-22T03:51:02.175225Z", "url": "https://files.pythonhosted.org/packages/f6/cb/14a840c5a469afad6b13426541159ffb95a10a7563150566b5bd8b951791/marrie-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "203ebb1156401d8595bde46010139baa", "sha256": "5440d3b945e1789761373fbe0f0c60d75214250ef7393b1761e32c4bbcc667a3"}, "downloads": -1, "filename": "marrie-0.3.1.tar.gz", "has_sig": false, "md5_digest": "203ebb1156401d8595bde46010139baa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7479, "upload_time": "2013-05-13T01:24:51", "upload_time_iso_8601": "2013-05-13T01:24:51.289137Z", "url": "https://files.pythonhosted.org/packages/aa/04/9566106a9c219348d82cc3b06b410c66cf01fdc1204a56062b645a67816b/marrie-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "8fbfaf3ef50eaa4ec7073af265ba64a3", "sha256": "be65ca0f2a238ec811d778db938d98488f72a8df2d323fed0a7730f3b7e29258"}, "downloads": -1, "filename": "marrie-0.3.2.tar.gz", "has_sig": false, "md5_digest": "8fbfaf3ef50eaa4ec7073af265ba64a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7626, "upload_time": "2014-12-21T17:25:41", "upload_time_iso_8601": "2014-12-21T17:25:41.383532Z", "url": "https://files.pythonhosted.org/packages/43/0e/8a88a3c9eb4fb1adef355ae2a1124c86cd71e554661719a4d42a9468b05e/marrie-0.3.2.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "fb94701df917cb710aebf8b9b89f2676", "sha256": "68e0e0c66a70a0900c3aec492b50d8f5f95a9a3831bdbf1d41a033f1eb75af66"}, "downloads": -1, "filename": "marrie-0.4.tar.gz", "has_sig": false, "md5_digest": "fb94701df917cb710aebf8b9b89f2676", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7775, "upload_time": "2020-01-15T20:12:37", "upload_time_iso_8601": "2020-01-15T20:12:37.548199Z", "url": "https://files.pythonhosted.org/packages/71/22/3827aa5b192dfe7b73c6ae00c38cf00f7aa1575380a104becde742d1b412/marrie-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fb94701df917cb710aebf8b9b89f2676", "sha256": "68e0e0c66a70a0900c3aec492b50d8f5f95a9a3831bdbf1d41a033f1eb75af66"}, "downloads": -1, "filename": "marrie-0.4.tar.gz", "has_sig": false, "md5_digest": "fb94701df917cb710aebf8b9b89f2676", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7775, "upload_time": "2020-01-15T20:12:37", "upload_time_iso_8601": "2020-01-15T20:12:37.548199Z", "url": "https://files.pythonhosted.org/packages/71/22/3827aa5b192dfe7b73c6ae00c38cf00f7aa1575380a104becde742d1b412/marrie-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:38 2020"}