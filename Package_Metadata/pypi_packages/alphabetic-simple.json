{"info": {"author": "Arpaso", "author_email": "arvid@arpaso.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "Operating System :: OS Independent", "Topic :: Software Development"], "description": "Django Template tag for building alphabetical index\n===================================================\n\nLink to repository: https://github.com/Arpaso/alphabetic-simple\n\nBuilds alpabetic index to navigate through collection sorted by firstletter.\nSupports **english** and **russian** groups of alphabets.\n\nUsage\n=====\n\n**view.py**::\n\n    from django.views.generic.list_detail import object_list\n    from alphabetic.utils import alphabetic_setup\n    from .models import MyModel\n\n        def myview(request):\n            ...\n            queryset = MyModel.objects.all()\n            return object_list(request, alphabetic_setup(request, queryset, 'last_name'), template_name=template)\n\n**template.html**::\n\n    {% show_alphabetic_filter %}\n\n\n**alphabetic_setup(request, queryset, 'last_name')** - returns sorted queryset in alphabetical order by firstletter of\nthe attribute name, e.g. **last_name** or whatever attribute of the model you specified.  \n\n**show_alphabetic_filter** - template tag shows clickable alphabet in the template.\n\nClicking on the letter will produce GET request to the current url with a tail **?firstletter=X**,\nwhere **X** is the clicked letter.\n\n\nWritten by the development team of Arpaso company: http://arpaso.com", "description_content_type": null, "docs_url": null, "download_url": "http://github.com/Arpaso/alphabetic-simple/tarball/0.2", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/Arpaso/alphabetic-simple", "keywords": "", "license": "UNKNOWN", "maintainer": "", "maintainer_email": "", "name": "alphabetic-simple", "package_url": "https://pypi.org/project/alphabetic-simple/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/alphabetic-simple/", "project_urls": {"Download": "http://github.com/Arpaso/alphabetic-simple/tarball/0.2", "Homepage": "http://github.com/Arpaso/alphabetic-simple"}, "release_url": "https://pypi.org/project/alphabetic-simple/0.2/", "requires_dist": null, "requires_python": null, "summary": "Alphabetic template tag to filter django queryset", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-template-tag-for-building-alphabetical-index\">\n<h2>Django Template tag for building alphabetical index</h2>\n<p>Link to repository: <a href=\"https://github.com/Arpaso/alphabetic-simple\" rel=\"nofollow\">https://github.com/Arpaso/alphabetic-simple</a></p>\n<p>Builds alpabetic index to navigate through collection sorted by firstletter.\nSupports <strong>english</strong> and <strong>russian</strong> groups of alphabets.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p><strong>view.py</strong>:</p>\n<pre>from django.views.generic.list_detail import object_list\nfrom alphabetic.utils import alphabetic_setup\nfrom .models import MyModel\n\n    def myview(request):\n        ...\n        queryset = MyModel.objects.all()\n        return object_list(request, alphabetic_setup(request, queryset, 'last_name'), template_name=template)\n</pre>\n<p><strong>template.html</strong>:</p>\n<pre>{% show_alphabetic_filter %}\n</pre>\n<p><strong>alphabetic_setup(request, queryset, \u2018last_name\u2019)</strong> - returns sorted queryset in alphabetical order by firstletter of\nthe attribute name, e.g. <strong>last_name</strong> or whatever attribute of the model you specified.</p>\n<p><strong>show_alphabetic_filter</strong> - template tag shows clickable alphabet in the template.</p>\n<p>Clicking on the letter will produce GET request to the current url with a tail <strong>?firstletter=X</strong>,\nwhere <strong>X</strong> is the clicked letter.</p>\n<p>Written by the development team of Arpaso company: <a href=\"http://arpaso.com\" rel=\"nofollow\">http://arpaso.com</a></p>\n</div>\n\n          </div>"}, "last_serial": 836316, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "964512d5318d3e1ccad009bcecc5fc44", "sha256": "c44b5e9b98cc4c16584aa9b21995b94e4eed9107a694e28ab6bb02a33d57ef3d"}, "downloads": -1, "filename": "alphabetic-simple-0.2.tar.gz", "has_sig": false, "md5_digest": "964512d5318d3e1ccad009bcecc5fc44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6374, "upload_time": "2013-08-08T08:20:39", "upload_time_iso_8601": "2013-08-08T08:20:39.898822Z", "url": "https://files.pythonhosted.org/packages/a4/39/b1c35c8667d3ad6b3a292efca37ce26bc3952ddec876087d3c57ac82a76e/alphabetic-simple-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "964512d5318d3e1ccad009bcecc5fc44", "sha256": "c44b5e9b98cc4c16584aa9b21995b94e4eed9107a694e28ab6bb02a33d57ef3d"}, "downloads": -1, "filename": "alphabetic-simple-0.2.tar.gz", "has_sig": false, "md5_digest": "964512d5318d3e1ccad009bcecc5fc44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6374, "upload_time": "2013-08-08T08:20:39", "upload_time_iso_8601": "2013-08-08T08:20:39.898822Z", "url": "https://files.pythonhosted.org/packages/a4/39/b1c35c8667d3ad6b3a292efca37ce26bc3952ddec876087d3c57ac82a76e/alphabetic-simple-0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:19:18 2020"}