{"info": {"author": "Pintaudi Giorgio", "author_email": "giorgio-pintaudi-kx@ynu.jp", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Environment :: X11 Applications", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: Unix", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# WAGASCI run database v0.6.0\n\nSimple database viewer for WAGASCI runs. Many features are not implemented yet\n but it is a handy tool to quickly retrieve info about each run.\n\n![](gui/wagascidb_viewer.gif)\n\n## Installation\n\nThe GUI interface is written in Python and is compatible only with Python 3.4+.\nOn the other hand, the backend modules included in the (separate) pip package\n 'wagascianpy' are compatible with Python2.7 and Python 3.4+.\n\n### Download\n\nYou can either install directly from pip or clone the GitLab repository and\n install as you wish. The repository is located at: [https://git.t2k.org\n /wagasci_babymind/wagasci-db.git ](https://git.t2k.org/wagasci_babymind/wagasci-db.git)\n\n### Linux\n\n```shell script\npython3 -m pip install --user --upgrade .[with_borg]\n```\n\nTo run the program open a terminal and type\n\n```shell script\n$HOME/.local/bin/wagascidb_viewer.py\n```\n\n### MacOS\n\nCurrently the support for MacOS is only partial. The SSH connection is broken\nbecause of some issues internal to the [Python paramiko\nmodule](http://www.paramiko.org/), so the program can be used in local mode\nonly. I tried to fix the issue but the problem is beyond my skills.  Probably in\nthe following months the paramiko developers will come up with a solution. At\nthe time of writing, the current (broken) version of paramiko is 2.7.1. When a\nnew version of paramiko is released, try again to run the software and see what\nhappens.\n\nI have tested the program only in MacOS Mojave and MacOS Catalina. Both showed\nmore or less the same problems. You can try older versions of MacOS and might\nhave better luck.\n\n#### MacOS Mojave/Catalina\n\nBecause MacOS Mojave does not bundle Python3 we need to install it manually. The\neasiest way is by using the package manager brew. The following commands are\ntaken from this [webpage](https://installpython3.com/mac/).\n\nThe first step is to install the Apple's Xcode suite. Most probably you already\nhave it already installed, in that case you can skip this step. In your Terminal\napp, run the following command to install XCode and its command-line tools:\n\n```shell script\n$ xcode-select --install\n```\n\nNext install Homebrew by copy/pasting the following command into Terminal and\nthen type Enter:\n\n```shell script\n$ ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\nbrew update\n```\n\nTo confirm Homebrew installed correctly, run this command:\n```shell script\n$ brew doctor\nYour system is ready to brew.\n```\n\nNow we can install the latest version of Python 3. Type the following command\ninto Terminal and press Enter:\n\n```shell script\n$ brew install python3\n```\n\nTo confirm which version of Python 3 was installed, run the following command in\nTerminal:\n\n```shell script\n$ /usr/local/bin/python3 --version\nPython 3.7.7\n```\n\nMany functions of the WAGASCI database viewer use borgbackup. We can easily\ninstall it using brew.\n\n```shell script\nbrew cask install borgbackup\n```\n\nFor other ways of installing borg refer to the \n[borg website](https://borgbackup.readthedocs.io/en/stable/installation.html).\n\nThen we can finally install the wagascidb package\n\n```shell script\n/usr/local/bin/python3 -m pip install --user --upgrade .\n```\n\nTo run the GUI open a Terminal and type the command\n\n```shell script\n$HOME/.local/bin/python3 wagascidb_viewer.py\n```\n\nIf you use MacOS Catalina continue reading the next section.\n\n#### MacOS Catalina - troubleshooting\n\n**MacOS Catalina comes with its own version of Python3. However \n[as stated in the Python website](https://www.python.org/download/mac/tcltk/) \nthe Apple-supplied Tcl/Tk 8.5 has serious bugs that can cause application crashes.**\n\nSo follow the same instructions as MacOS Mojave but also install tkinter:\n```shell script\nbrew install tcl-tk\n```\n\n## GUI\nThe GUI can be partially customized using the \n[PyGubu](https://github.com/alejandroautalan/pygubu) program. PyGubu is\n automatically installed by pip as a dependence of this package.\n\n To customize the GUI open a terminal and\n ```shell script\nmkdir -p $HOME/.wagascidbviewer/gui\ncp $HOME/.local/wagascidbviewer/gui.ui $HOME/.wagascidbviewer/gui\npygubu-designer $HOME/.wagascidbviewer/gui\n```\nThe program tries to load the GUI in this order:\n- `~/.wagascidbviewer/gui/gui.ui`\n- `~/.local/wagascidbviewer/gui/gui.ui`\n- `/usr/local/wagascidbviewer/gui.ui`\n- `../gui/gui.ui`\n\nTo revert to the default GUI just remove the `~/.wagascidbviewer/gui/gui.ui\n` file.\n\n## Usage\n\n### WAGASCI run repository\n\nThe word repository refers to the place where the runs are backed up. It might\nbe a simple repository where the runs are stored without encription (plain file\nand folders), or a borg repository where all the files are encripted. The\nrepository can be either local (same machine) or remote (remote machine\nreachable by SSH). In case of a borg repository it is necessary for borgbackup\nto be installed on both the local machine and the remote machine.\n\n* **Simple repository** : Unencripted repository\n* **Borg repository** : Borg repository\n* **Repository location** : For a remote repository the syntax is\n  `<hostname>:<path of repository>`. The SSH configuration is taken from the\n  user `~/.ssh/config` file by looking for `<hostname>`, so make sure that you\n  can connect to the remote machine by just opening the terminal and `ssh\n  <hostname>`. In case of local repository just insert the repository path. For\n  more info about how to connect to KEKCC by SSH refer to the [WAGASCI expert\n  shifter manual](https://ja.overleaf.com/7887288445tmqmnjknrynm)\n  (Troubleshooting - KEKCC (8.6)).\n\n#### Disclaimer about WAGASCI run repository\n\nSimple remote WAGASCI repositories are not implemented yet. For the time being you can\nonly use one of the following three combinations:\n\n* Simple local: OK\n* Borg local: OK\n* Borg remote: OK\n* Simple remote: not implemented\n\n### WAGASCI run database\n\nLocation of the WAGASCI run database. The database is a file (usually named\n`wagascidb.db`) that contains some info about each run. If the update database\ncheckbox is checked, the software checks if the database is synchronized with\nthe repository (if the database describes the current state of the repository).\n\n* **Database location**: location of the database file. Usually it is the same\n  as the repository. In case you specify a different location, enter the\n  filename too. Leave as it is if in doubt.\n* **Update database**: If left unchecked the database is read as is. If checked,\n  the runs that are present in both the repository and database the database are\n  not updated and only the runs that are present in the repository but not in\n  the database are added. Leave disabled if in doubt.\n* **Rebuild database**: If checked each run in the repository is\n  inserted/overwritten into the database even if already present. Leave disabled\n  if in doubt.\n* **WAGASCI library**: local path to the `libwagasci.so` library. It is used to get\n  the topology information about the detectors. Useful only if you are adding\n  new runs to the database. You need to install the WAGASCI analysis software if\n  you want to use this feature.\n\n### Beam Summary Data repository\n\nThe word repository refers to the place where the Beam Summary Data files are\nstored.  The local repository can be an empty folder or a folder containing\nthe BSD files.  If the remote repository field is left empty the program assumes\nthat the BSD files are already present in the local folder. If the remote\nrepository field is filled, the remote repository and the local repository are\nsynchronized using rsync.\n\n\n* **Local repository** : Location of BSD files in the local machine.\n* **Remote repository** : Location of the BSD files in the remote machine (the\n  syntax is the same as the WAGASCI run repository). If left empty only the\n  local repository is used.\n\n### Beam Summary Data database\n\nLocation of the BSD database. The database is a file (usually named `bsddb.db`)\nthat contains some info about each BSD file. If the update or rebuild database\ncheckbox is checked, the software checks if the database is synchronized with\nthe repository (if the database describes the current state of the repository).\n\n* **Database location**: location of the database file. Usually it is the same\n  as the repository. In case you specify a different location, enter the\n  filename too. Leave as it is if in doubt.\n* **Update database**: If left unchecked the database is read as is. If checked,\n  the runs that are present in both the repository and database the database are\n  not updated and only the runs that are present in the repository but not in\n  the database are added. Leave disabled if in doubt.\n* **Rebuild database**: If checked each run in the repository is\n  inserted/overwritten into the database even if already present. Leave disabled\n  if in doubt.\n\n### Query\n\n* **Get interval**: Select an interval and the push the Get interval button. In the\n  Run list frame will appear all the runs in that period.\n* **Get all**: Get all runs regardless of the interval.\n* **Start Data Quality**: not implemented yet.\n* **Download**: download the selected runs on the local machine.\n* Only good runs: select only the runs marked as good (all the runs for the time\n  being). This may change in future when the runs are analyzed.\n* **Include overlapping runs**: If unchecked only the runs that start AND stop\n  inside the time interval are shown. If checked all the runs that start OR stop\n  inside the interval are shown.\n* **Topology**: select which sub-detectors to download or analyze\n\n### Run list\n\nList of runs that meet the conditions in the query. You can click on the run\nname to show more info about that particular run.\n\n### Run info\n\nShow all the info about one particular run.\n\n### Troubleshooting\n\n- If you get an error about SSH trying to set a different locale in the KEKCC repository\ntry the solution explained in this \n[stackoverflow post](https://stackoverflow.com/questions/29609371/how-do-not-pass-locale-through-ssh).\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://git.t2k.org/wagasci_babymind/wagasci-db", "keywords": "WAGASCI run database", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "wagascidbviewer", "package_url": "https://pypi.org/project/wagascidbviewer/", "platform": "", "project_url": "https://pypi.org/project/wagascidbviewer/", "project_urls": {"Homepage": "https://git.t2k.org/wagasci_babymind/wagasci-db"}, "release_url": "https://pypi.org/project/wagascidbviewer/0.6.0/", "requires_dist": ["setuptools", "paramiko (~=2.7.1)", "scp (~=0.13.2)", "pytz (~=2020.1)", "tinydb (~=3.15.2)", "pygubu (~=0.9.8.6)", "wagascianpy (~=0.2.1)", "borgbackup (>=1.1.11) ; extra == 'with_borg'"], "requires_python": "", "summary": "Simple databased for WAGASCI runs based on TinyDB", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>WAGASCI run database v0.6.0</h1>\n<p>Simple database viewer for WAGASCI runs. Many features are not implemented yet\nbut it is a handy tool to quickly retrieve info about each run.</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7026afd928a4a525394ee2932b8a12d250592301/6775692f7761676173636964625f7669657765722e676966\"></p>\n<h2>Installation</h2>\n<p>The GUI interface is written in Python and is compatible only with Python 3.4+.\nOn the other hand, the backend modules included in the (separate) pip package\n'wagascianpy' are compatible with Python2.7 and Python 3.4+.</p>\n<h3>Download</h3>\n<p>You can either install directly from pip or clone the GitLab repository and\ninstall as you wish. The repository is located at: <a href=\"https://git.t2k.org/wagasci_babymind/wagasci-db.git\" rel=\"nofollow\">https://git.t2k.org\n/wagasci_babymind/wagasci-db.git </a></p>\n<h3>Linux</h3>\n<pre>python3 -m pip install --user --upgrade .<span class=\"o\">[</span>with_borg<span class=\"o\">]</span>\n</pre>\n<p>To run the program open a terminal and type</p>\n<pre><span class=\"nv\">$HOME</span>/.local/bin/wagascidb_viewer.py\n</pre>\n<h3>MacOS</h3>\n<p>Currently the support for MacOS is only partial. The SSH connection is broken\nbecause of some issues internal to the <a href=\"http://www.paramiko.org/\" rel=\"nofollow\">Python paramiko\nmodule</a>, so the program can be used in local mode\nonly. I tried to fix the issue but the problem is beyond my skills.  Probably in\nthe following months the paramiko developers will come up with a solution. At\nthe time of writing, the current (broken) version of paramiko is 2.7.1. When a\nnew version of paramiko is released, try again to run the software and see what\nhappens.</p>\n<p>I have tested the program only in MacOS Mojave and MacOS Catalina. Both showed\nmore or less the same problems. You can try older versions of MacOS and might\nhave better luck.</p>\n<h4>MacOS Mojave/Catalina</h4>\n<p>Because MacOS Mojave does not bundle Python3 we need to install it manually. The\neasiest way is by using the package manager brew. The following commands are\ntaken from this <a href=\"https://installpython3.com/mac/\" rel=\"nofollow\">webpage</a>.</p>\n<p>The first step is to install the Apple's Xcode suite. Most probably you already\nhave it already installed, in that case you can skip this step. In your Terminal\napp, run the following command to install XCode and its command-line tools:</p>\n<pre>$ xcode-select --install\n</pre>\n<p>Next install Homebrew by copy/pasting the following command into Terminal and\nthen type Enter:</p>\n<pre>$ ruby -e <span class=\"s2\">\"</span><span class=\"k\">$(</span>curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install<span class=\"k\">)</span><span class=\"s2\">\"</span>\nbrew update\n</pre>\n<p>To confirm Homebrew installed correctly, run this command:</p>\n<pre>$ brew doctor\nYour system is ready to brew.\n</pre>\n<p>Now we can install the latest version of Python 3. Type the following command\ninto Terminal and press Enter:</p>\n<pre>$ brew install python3\n</pre>\n<p>To confirm which version of Python 3 was installed, run the following command in\nTerminal:</p>\n<pre>$ /usr/local/bin/python3 --version\nPython <span class=\"m\">3</span>.7.7\n</pre>\n<p>Many functions of the WAGASCI database viewer use borgbackup. We can easily\ninstall it using brew.</p>\n<pre>brew cask install borgbackup\n</pre>\n<p>For other ways of installing borg refer to the\n<a href=\"https://borgbackup.readthedocs.io/en/stable/installation.html\" rel=\"nofollow\">borg website</a>.</p>\n<p>Then we can finally install the wagascidb package</p>\n<pre>/usr/local/bin/python3 -m pip install --user --upgrade .\n</pre>\n<p>To run the GUI open a Terminal and type the command</p>\n<pre><span class=\"nv\">$HOME</span>/.local/bin/python3 wagascidb_viewer.py\n</pre>\n<p>If you use MacOS Catalina continue reading the next section.</p>\n<h4>MacOS Catalina - troubleshooting</h4>\n<p><strong>MacOS Catalina comes with its own version of Python3. However\n<a href=\"https://www.python.org/download/mac/tcltk/\" rel=\"nofollow\">as stated in the Python website</a>\nthe Apple-supplied Tcl/Tk 8.5 has serious bugs that can cause application crashes.</strong></p>\n<p>So follow the same instructions as MacOS Mojave but also install tkinter:</p>\n<pre>brew install tcl-tk\n</pre>\n<h2>GUI</h2>\n<p>The GUI can be partially customized using the\n<a href=\"https://github.com/alejandroautalan/pygubu\" rel=\"nofollow\">PyGubu</a> program. PyGubu is\nautomatically installed by pip as a dependence of this package.</p>\n<p>To customize the GUI open a terminal and</p>\n<pre>mkdir -p <span class=\"nv\">$HOME</span>/.wagascidbviewer/gui\ncp <span class=\"nv\">$HOME</span>/.local/wagascidbviewer/gui.ui <span class=\"nv\">$HOME</span>/.wagascidbviewer/gui\npygubu-designer <span class=\"nv\">$HOME</span>/.wagascidbviewer/gui\n</pre>\n<p>The program tries to load the GUI in this order:</p>\n<ul>\n<li><code>~/.wagascidbviewer/gui/gui.ui</code></li>\n<li><code>~/.local/wagascidbviewer/gui/gui.ui</code></li>\n<li><code>/usr/local/wagascidbviewer/gui.ui</code></li>\n<li><code>../gui/gui.ui</code></li>\n</ul>\n<p>To revert to the default GUI just remove the <code>~/.wagascidbviewer/gui/gui.ui</code> file.</p>\n<h2>Usage</h2>\n<h3>WAGASCI run repository</h3>\n<p>The word repository refers to the place where the runs are backed up. It might\nbe a simple repository where the runs are stored without encription (plain file\nand folders), or a borg repository where all the files are encripted. The\nrepository can be either local (same machine) or remote (remote machine\nreachable by SSH). In case of a borg repository it is necessary for borgbackup\nto be installed on both the local machine and the remote machine.</p>\n<ul>\n<li><strong>Simple repository</strong> : Unencripted repository</li>\n<li><strong>Borg repository</strong> : Borg repository</li>\n<li><strong>Repository location</strong> : For a remote repository the syntax is\n<code>&lt;hostname&gt;:&lt;path of repository&gt;</code>. The SSH configuration is taken from the\nuser <code>~/.ssh/config</code> file by looking for <code>&lt;hostname&gt;</code>, so make sure that you\ncan connect to the remote machine by just opening the terminal and <code>ssh &lt;hostname&gt;</code>. In case of local repository just insert the repository path. For\nmore info about how to connect to KEKCC by SSH refer to the <a href=\"https://ja.overleaf.com/7887288445tmqmnjknrynm\" rel=\"nofollow\">WAGASCI expert\nshifter manual</a>\n(Troubleshooting - KEKCC (8.6)).</li>\n</ul>\n<h4>Disclaimer about WAGASCI run repository</h4>\n<p>Simple remote WAGASCI repositories are not implemented yet. For the time being you can\nonly use one of the following three combinations:</p>\n<ul>\n<li>Simple local: OK</li>\n<li>Borg local: OK</li>\n<li>Borg remote: OK</li>\n<li>Simple remote: not implemented</li>\n</ul>\n<h3>WAGASCI run database</h3>\n<p>Location of the WAGASCI run database. The database is a file (usually named\n<code>wagascidb.db</code>) that contains some info about each run. If the update database\ncheckbox is checked, the software checks if the database is synchronized with\nthe repository (if the database describes the current state of the repository).</p>\n<ul>\n<li><strong>Database location</strong>: location of the database file. Usually it is the same\nas the repository. In case you specify a different location, enter the\nfilename too. Leave as it is if in doubt.</li>\n<li><strong>Update database</strong>: If left unchecked the database is read as is. If checked,\nthe runs that are present in both the repository and database the database are\nnot updated and only the runs that are present in the repository but not in\nthe database are added. Leave disabled if in doubt.</li>\n<li><strong>Rebuild database</strong>: If checked each run in the repository is\ninserted/overwritten into the database even if already present. Leave disabled\nif in doubt.</li>\n<li><strong>WAGASCI library</strong>: local path to the <code>libwagasci.so</code> library. It is used to get\nthe topology information about the detectors. Useful only if you are adding\nnew runs to the database. You need to install the WAGASCI analysis software if\nyou want to use this feature.</li>\n</ul>\n<h3>Beam Summary Data repository</h3>\n<p>The word repository refers to the place where the Beam Summary Data files are\nstored.  The local repository can be an empty folder or a folder containing\nthe BSD files.  If the remote repository field is left empty the program assumes\nthat the BSD files are already present in the local folder. If the remote\nrepository field is filled, the remote repository and the local repository are\nsynchronized using rsync.</p>\n<ul>\n<li><strong>Local repository</strong> : Location of BSD files in the local machine.</li>\n<li><strong>Remote repository</strong> : Location of the BSD files in the remote machine (the\nsyntax is the same as the WAGASCI run repository). If left empty only the\nlocal repository is used.</li>\n</ul>\n<h3>Beam Summary Data database</h3>\n<p>Location of the BSD database. The database is a file (usually named <code>bsddb.db</code>)\nthat contains some info about each BSD file. If the update or rebuild database\ncheckbox is checked, the software checks if the database is synchronized with\nthe repository (if the database describes the current state of the repository).</p>\n<ul>\n<li><strong>Database location</strong>: location of the database file. Usually it is the same\nas the repository. In case you specify a different location, enter the\nfilename too. Leave as it is if in doubt.</li>\n<li><strong>Update database</strong>: If left unchecked the database is read as is. If checked,\nthe runs that are present in both the repository and database the database are\nnot updated and only the runs that are present in the repository but not in\nthe database are added. Leave disabled if in doubt.</li>\n<li><strong>Rebuild database</strong>: If checked each run in the repository is\ninserted/overwritten into the database even if already present. Leave disabled\nif in doubt.</li>\n</ul>\n<h3>Query</h3>\n<ul>\n<li><strong>Get interval</strong>: Select an interval and the push the Get interval button. In the\nRun list frame will appear all the runs in that period.</li>\n<li><strong>Get all</strong>: Get all runs regardless of the interval.</li>\n<li><strong>Start Data Quality</strong>: not implemented yet.</li>\n<li><strong>Download</strong>: download the selected runs on the local machine.</li>\n<li>Only good runs: select only the runs marked as good (all the runs for the time\nbeing). This may change in future when the runs are analyzed.</li>\n<li><strong>Include overlapping runs</strong>: If unchecked only the runs that start AND stop\ninside the time interval are shown. If checked all the runs that start OR stop\ninside the interval are shown.</li>\n<li><strong>Topology</strong>: select which sub-detectors to download or analyze</li>\n</ul>\n<h3>Run list</h3>\n<p>List of runs that meet the conditions in the query. You can click on the run\nname to show more info about that particular run.</p>\n<h3>Run info</h3>\n<p>Show all the info about one particular run.</p>\n<h3>Troubleshooting</h3>\n<ul>\n<li>If you get an error about SSH trying to set a different locale in the KEKCC repository\ntry the solution explained in this\n<a href=\"https://stackoverflow.com/questions/29609371/how-do-not-pass-locale-through-ssh\" rel=\"nofollow\">stackoverflow post</a>.</li>\n</ul>\n\n          </div>"}, "last_serial": 7151220, "releases": {"0.6.0": [{"comment_text": "", "digests": {"md5": "98bde0eeab1d4b5aabeef461025d65e4", "sha256": "cb557be8075736f5ceed833e45d449b7094217736f9521fde940c22b5eb54c8c"}, "downloads": -1, "filename": "wagascidbviewer-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "98bde0eeab1d4b5aabeef461025d65e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1062646, "upload_time": "2020-05-02T12:19:05", "upload_time_iso_8601": "2020-05-02T12:19:05.017534Z", "url": "https://files.pythonhosted.org/packages/c3/a1/4cc65a3dac7cdbddeb7cb3e5625d3e303911c5b95441289284336d5a0c38/wagascidbviewer-0.6.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "98bde0eeab1d4b5aabeef461025d65e4", "sha256": "cb557be8075736f5ceed833e45d449b7094217736f9521fde940c22b5eb54c8c"}, "downloads": -1, "filename": "wagascidbviewer-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "98bde0eeab1d4b5aabeef461025d65e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1062646, "upload_time": "2020-05-02T12:19:05", "upload_time_iso_8601": "2020-05-02T12:19:05.017534Z", "url": "https://files.pythonhosted.org/packages/c3/a1/4cc65a3dac7cdbddeb7cb3e5625d3e303911c5b95441289284336d5a0c38/wagascidbviewer-0.6.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:33:13 2020"}