{"info": {"author": "Will McCutchen", "author_email": "will@mccutch.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Artistic Software", "Topic :: Multimedia :: Graphics", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "============\nTriangulizor\n============\n\nTriangulizor is a little Python script to apply a \u201ctriangular pixel\u201d\neffect to images, like so:\n\n.. image:: https://github.com/mccutchen/triangulizor/raw/master/examples/in.jpg\n\n\u21ca\u2601\u21ca\n\n.. image:: https://github.com/mccutchen/triangulizor/raw/master/examples/out.png\n\n\nInstallation\n============\n\nUse `pip`_ to install::\n\n    pip install triangulizor\n\n\nUsage\n=====\n\nCommand Line Usage\n------------------\n\nFirst, find an image to triangulize! To generate the example above,\neither of these commands will do the trick::\n\n    $ triangulizor --show --tile-size=16 examples/in.jpg\n\nThe ``--show`` flag will cause the resulting image to be displayed\nimmediately instead of written to ``stdout`` or to disk. You can also\npass in the URL to an image that you want to process::\n\n    $ triangulizor --show --tile-size=16 https://github.com/mccutchen/triangulizor/raw/master/examples/in.jpg\n\nAll command line options are given below::\n\n    $ triangulizor --help\n\nOutputs::\n\n    usage: triangulizor [-h] [-t TILE_SIZE] [-v] [-vv] [-s] [infile] [outfile]\n\n    Applies a \"triangular pixel\" effect to an image.\n\n    positional arguments:\n      infile                Image to process (path or URL; defaults to STDIN)\n      outfile               Output file (defaults to STDOUT)\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -t TILE_SIZE, --tile-size TILE_SIZE\n                            Tile size (should be divisible by 2)\n      -v, --verbose         Verbose output\n      -vv                   Very verbose output\n      -s, --show            Immediately display image instead of writing to\n                            OUTFILE.\n\nLibrary Usage\n-------------\n\nTriangulizor can also be used as a plain old Python library::\n\n    >>> import triangulizor\n    >>> triangulizor.triangulize('examples/in.jpg', 24)\n    <Image._ImageCrop image mode=RGB size=384x216 at 0x10A5BA758>\n\n\nCredits\n=======\n\nThis was inspired entirely by `this awesomely helpful blog post`_ by\n`@revdancatt`_.\n\n.. _pip: http://www.pip-installer.org/\n.. _this awesomely helpful blog post: http://revdancatt.com/2012/03/31/the-pxl-effect-with-javascript-and-canvas-and-maths/\n.. _@revdancatt: http://twitter.com/revdancatt", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mccutchen/triangulizor", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "triangulizor", "package_url": "https://pypi.org/project/triangulizor/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/triangulizor/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/mccutchen/triangulizor"}, "release_url": "https://pypi.org/project/triangulizor/1.0.2/", "requires_dist": null, "requires_python": null, "summary": "Triangulize your images!", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Triangulizor is a little Python script to apply a \u201ctriangular pixel\u201d\neffect to images, like so:</p>\n<img alt=\"https://github.com/mccutchen/triangulizor/raw/master/examples/in.jpg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eb3237b424567aa73c4ae8772b570742b88c7671/68747470733a2f2f6769746875622e636f6d2f6d636375746368656e2f747269616e67756c697a6f722f7261772f6d61737465722f6578616d706c65732f696e2e6a7067\">\n<p>\u21ca\u2601\u21ca</p>\n<img alt=\"https://github.com/mccutchen/triangulizor/raw/master/examples/out.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1c54dd45fac25abb995ac0aa8187464c2481af5e/68747470733a2f2f6769746875622e636f6d2f6d636375746368656e2f747269616e67756c697a6f722f7261772f6d61737465722f6578616d706c65732f6f75742e706e67\">\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Use <a href=\"http://www.pip-installer.org/\" rel=\"nofollow\">pip</a> to install:</p>\n<pre>pip install triangulizor\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"command-line-usage\">\n<h3>Command Line Usage</h3>\n<p>First, find an image to triangulize! To generate the example above,\neither of these commands will do the trick:</p>\n<pre>$ triangulizor --show --tile-size=16 examples/in.jpg\n</pre>\n<p>The <tt><span class=\"pre\">--show</span></tt> flag will cause the resulting image to be displayed\nimmediately instead of written to <tt>stdout</tt> or to disk. You can also\npass in the URL to an image that you want to process:</p>\n<pre>$ triangulizor --show --tile-size=16 https://github.com/mccutchen/triangulizor/raw/master/examples/in.jpg\n</pre>\n<p>All command line options are given below:</p>\n<pre>$ triangulizor --help\n</pre>\n<p>Outputs:</p>\n<pre>usage: triangulizor [-h] [-t TILE_SIZE] [-v] [-vv] [-s] [infile] [outfile]\n\nApplies a \"triangular pixel\" effect to an image.\n\npositional arguments:\n  infile                Image to process (path or URL; defaults to STDIN)\n  outfile               Output file (defaults to STDOUT)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -t TILE_SIZE, --tile-size TILE_SIZE\n                        Tile size (should be divisible by 2)\n  -v, --verbose         Verbose output\n  -vv                   Very verbose output\n  -s, --show            Immediately display image instead of writing to\n                        OUTFILE.\n</pre>\n</div>\n<div id=\"library-usage\">\n<h3>Library Usage</h3>\n<p>Triangulizor can also be used as a plain old Python library:</p>\n<pre>&gt;&gt;&gt; import triangulizor\n&gt;&gt;&gt; triangulizor.triangulize('examples/in.jpg', 24)\n&lt;Image._ImageCrop image mode=RGB size=384x216 at 0x10A5BA758&gt;\n</pre>\n</div>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>This was inspired entirely by <a href=\"http://revdancatt.com/2012/03/31/the-pxl-effect-with-javascript-and-canvas-and-maths/\" rel=\"nofollow\">this awesomely helpful blog post</a> by\n<a href=\"http://twitter.com/revdancatt\" rel=\"nofollow\">@revdancatt</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 1031542, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "e9e6a0a295d38820ff2c8427f44c4d83", "sha256": "3b3853ace0f669c2fbc5915e4ce5d10946cfd5b3dbe918ae5d8e099775e726a3"}, "downloads": -1, "filename": "triangulizor-1.0.0.tar.gz", "has_sig": false, "md5_digest": "e9e6a0a295d38820ff2c8427f44c4d83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5154, "upload_time": "2012-12-03T22:52:23", "upload_time_iso_8601": "2012-12-03T22:52:23.406106Z", "url": "https://files.pythonhosted.org/packages/f7/78/1100dcce4c2fad5dd594e490dc9dd26dc0435fb3b30fc79057f1ee1164c0/triangulizor-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "81b171dcca6027d1f463802bb01aee04", "sha256": "ff9d69ed33b28a07eff4594ef1fcca853258486863bb332b90e1a5ddf24f9dc5"}, "downloads": -1, "filename": "triangulizor-1.0.1.tar.gz", "has_sig": false, "md5_digest": "81b171dcca6027d1f463802bb01aee04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6001, "upload_time": "2013-04-02T17:57:18", "upload_time_iso_8601": "2013-04-02T17:57:18.292101Z", "url": "https://files.pythonhosted.org/packages/97/7b/1109264e396c19370f871ce3d997e03cfa111e6928ff86aef618bfa96592/triangulizor-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "ccb85ea055445f5342db8b6cd1c97b54", "sha256": "1a5fd22fa52fbe02b681b9138b2575e3c0d58748e0ce0dafe5efbb5870887142"}, "downloads": -1, "filename": "triangulizor-1.0.2.tar.gz", "has_sig": false, "md5_digest": "ccb85ea055445f5342db8b6cd1c97b54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6041, "upload_time": "2014-03-16T18:24:43", "upload_time_iso_8601": "2014-03-16T18:24:43.004492Z", "url": "https://files.pythonhosted.org/packages/2a/ba/88dfa1d1c1791e58eb84d1c7323e5476d6f8fb4016634845da329f591a65/triangulizor-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ccb85ea055445f5342db8b6cd1c97b54", "sha256": "1a5fd22fa52fbe02b681b9138b2575e3c0d58748e0ce0dafe5efbb5870887142"}, "downloads": -1, "filename": "triangulizor-1.0.2.tar.gz", "has_sig": false, "md5_digest": "ccb85ea055445f5342db8b6cd1c97b54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6041, "upload_time": "2014-03-16T18:24:43", "upload_time_iso_8601": "2014-03-16T18:24:43.004492Z", "url": "https://files.pythonhosted.org/packages/2a/ba/88dfa1d1c1791e58eb84d1c7323e5476d6f8fb4016634845da329f591a65/triangulizor-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:47:20 2020"}