{"info": {"author": "Ola Widlund", "author_email": "ola.widlund@ri.se", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Manufacturing", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering"], "description": "Introduction\n============\n\nParsim is a tool for working with parameterized simulation models.\nThe primary objective is to facilitate quality assurance of simulation projects.\nThe tool supports a scripted and automated workflow, where verified and validated simulation models\nare parameterized, so that they can be altered/modified in well-defined ways and reused with minimal user invention.\nAll events are logged on several levels, to support traceability, project documentation and quality control.\n\nParsim provides basic functionality for generating studies based on common design-of experiments\n(DOE) methods, for example using factorial designs, response surface methods or random sampling,\nlike Monte Carlo or Latin Hypercube.\n\nParsim can also be used as an interface to the `Dakota <https://dakota.sandia.gov>`_ library;\nDakota is run as a subprocess, generating cases from a Parsim model template.\n\nHow it works\n============\n\nOnce a prototype simulation case has been developed, a corresponding simulation\n*model template* is created by collecting all simulation input files, data\nfiles and scripts into a *template directory*. The text files in a model\ntemplate can then be parameterized by replacing numerical values, or text\nstrings with macro names. Parsim uses the pyexpander macro processing library, which\nsupports embedding of arbitrarly complex Python code in the template files.\nThis can be used for advanced parameterization needs, for example to compute data\ntables from functions, generate graphs for reports, generate content in loops or\nconditionals, etc.\n\nWhen a simulation case is created, the model template directory is recursively\nreplicated to create a *case directory*. Parsim operations can also be carried\nout on a *study*, containing multiple cases. A study is a directory containing\nmultiple case directories.\n\nYou operate on your cases (either individually or on all cases of a study at once)\nby executing scripts written to perform specific tasks, e.g.\nmeshing operations, starting a simulation, or post-processing of results.\n\nYour simulation project lives in a Parsim *project directory*, which holds all\ncases and studies of the project. The project directory holds Parsim\nconfiguration settings and logs project events, like creation of cases and\nstudies, serious errors, change of configuration settings, etc.\n\nSummary of features:\n\n* Flexible and full-featured support for parameterization of text-based simulation models.\n* Cases and parameter studies kept together in projects.\n* Scripted workflow can be applied to individual cases as well as to large parameter studies.\n* Logging and error handling, for traceability and project documentation.\n* Python API can be conveniently used for post-processing and analysis, with input parameters\n  and output available as pandas DataFrames.\n* Support for many common design-of-experiments (DOE) methods.\n* Can be used as an interface to the Dakota library, for complex uncertainty quantification and optimization tasks.\n* Based on Python (as of version 2.0 Python3 only).\n* One simple workflow for any kind of simulation application.\n* Platform independent: Works in both Linux, Windows and MacOS environments.\n* Simple installation from public Python repositories (install with pip, in any Python installation).\n* Available under open-source license (GNU Public License v. 3)\n\n\nInstallation\n============\n\nParsim is available at the `PyPI, the Python Package Index <https://pypi.python.org/pypi>`_.\nIt is installed in your ordinary Python environment using the pip installer.\n\nThe Parsim installation requires and automatically installs the\nPython library `pyexpander <http://pyexpander.sourceforge.net>`_,\nwhich is used for macro and parameter expansion (parameterization of input files).\nThe DOE (Design of Experiments) functionality is provided by the `pyDOE2 <https://github.com/clicumu/pyDOE2>`_,\nnumpy and scipy libraries. The pandas library has also been included, so that the Python API can\nprovide results and caselist data as pandas DataFrames.\n\nIt is recommended to first make a clean and fully functional installation\nof the NumPy, SciPy and pandas libraries.\nThe best way to do this depends on which Python distribution you use.\nThe `anaconda Python distribution <https://www.continuum.io/downloads>`_\nis highly recommended. It works well on both Windows and Linux.\nIn an anaconda distribution, you simply install the conda packages for NumPy, SciPy and pandas.\nThey are usually installed by default. Otherwise use the conda package manager: ::\n\n    conda install numpy scipy pandas\n\nThen use `pip` to install parsim:\n\n    pip install parsim\n\nThis will install also the `pyexpander <http://pyexpander.sourceforge.net>`_\nand `pyDOE2 <https://github.com/clicumu/pyDOE2>`_ packages, which in turn will check for NumPy and SciPy.\n\nDocumentation\n=============\n\nThe Parsim documentation is hosted at `ReadTheDocs <https://parsim.readthedocs.io>`_.\n\nAuthor\n======\n\nParsim was developed by `Ola Widlund <https://www.ri.se/en/ola-widlund>`_,\n`RISE Research Institutes of Sweden <https://www.ri.se/en>`_, to\nprovide basic and generic functionality for uncertainty quantification\nand quality assurance of parameterized simulation models.\n\nLicensing\n=========\n\nParsim is licensed under the GNU Public License, GPL, version 3 or later.\nCopyright belongs to `RISE Research Institutes of Sweden AB <https://www.ri.se/en>`_.\n\nSource code and reporting of issues\n===================================\n\nThe source code is hosted at `GitLab.com <https://gitlab.com/olwi/psm>`_.\nHere you can also report issues and suggest improvements.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/olwi/psm", "keywords": "simulation,numerical modeling,doe,design of experiments,sampling,dakota,quality assurance,qa,uq,uncertainty quantification,parameterization,parameterized models", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "parsim", "package_url": "https://pypi.org/project/parsim/", "platform": "", "project_url": "https://pypi.org/project/parsim/", "project_urls": {"Homepage": "https://gitlab.com/olwi/psm"}, "release_url": "https://pypi.org/project/parsim/2.0.0.post1/", "requires_dist": ["pyexpander (>=1.6)", "numpy", "scipy", "pyDOE2 (>=1.2.1)", "pandas", "sphinx ; extra == 'dev'", "sphinx-argparse ; extra == 'dev'", "sphinx ; extra == 'doc'", "sphinx-argparse ; extra == 'doc'"], "requires_python": ">=3", "summary": "A tool for working with parameterized simulation models", "version": "2.0.0.post1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>Parsim is a tool for working with parameterized simulation models.\nThe primary objective is to facilitate quality assurance of simulation projects.\nThe tool supports a scripted and automated workflow, where verified and validated simulation models\nare parameterized, so that they can be altered/modified in well-defined ways and reused with minimal user invention.\nAll events are logged on several levels, to support traceability, project documentation and quality control.</p>\n<p>Parsim provides basic functionality for generating studies based on common design-of experiments\n(DOE) methods, for example using factorial designs, response surface methods or random sampling,\nlike Monte Carlo or Latin Hypercube.</p>\n<p>Parsim can also be used as an interface to the <a href=\"https://dakota.sandia.gov\" rel=\"nofollow\">Dakota</a> library;\nDakota is run as a subprocess, generating cases from a Parsim model template.</p>\n</div>\n<div id=\"how-it-works\">\n<h2>How it works</h2>\n<p>Once a prototype simulation case has been developed, a corresponding simulation\n<em>model template</em> is created by collecting all simulation input files, data\nfiles and scripts into a <em>template directory</em>. The text files in a model\ntemplate can then be parameterized by replacing numerical values, or text\nstrings with macro names. Parsim uses the pyexpander macro processing library, which\nsupports embedding of arbitrarly complex Python code in the template files.\nThis can be used for advanced parameterization needs, for example to compute data\ntables from functions, generate graphs for reports, generate content in loops or\nconditionals, etc.</p>\n<p>When a simulation case is created, the model template directory is recursively\nreplicated to create a <em>case directory</em>. Parsim operations can also be carried\nout on a <em>study</em>, containing multiple cases. A study is a directory containing\nmultiple case directories.</p>\n<p>You operate on your cases (either individually or on all cases of a study at once)\nby executing scripts written to perform specific tasks, e.g.\nmeshing operations, starting a simulation, or post-processing of results.</p>\n<p>Your simulation project lives in a Parsim <em>project directory</em>, which holds all\ncases and studies of the project. The project directory holds Parsim\nconfiguration settings and logs project events, like creation of cases and\nstudies, serious errors, change of configuration settings, etc.</p>\n<p>Summary of features:</p>\n<ul>\n<li>Flexible and full-featured support for parameterization of text-based simulation models.</li>\n<li>Cases and parameter studies kept together in projects.</li>\n<li>Scripted workflow can be applied to individual cases as well as to large parameter studies.</li>\n<li>Logging and error handling, for traceability and project documentation.</li>\n<li>Python API can be conveniently used for post-processing and analysis, with input parameters\nand output available as pandas DataFrames.</li>\n<li>Support for many common design-of-experiments (DOE) methods.</li>\n<li>Can be used as an interface to the Dakota library, for complex uncertainty quantification and optimization tasks.</li>\n<li>Based on Python (as of version 2.0 Python3 only).</li>\n<li>One simple workflow for any kind of simulation application.</li>\n<li>Platform independent: Works in both Linux, Windows and MacOS environments.</li>\n<li>Simple installation from public Python repositories (install with pip, in any Python installation).</li>\n<li>Available under open-source license (GNU Public License v. 3)</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Parsim is available at the <a href=\"https://pypi.python.org/pypi\" rel=\"nofollow\">PyPI, the Python Package Index</a>.\nIt is installed in your ordinary Python environment using the pip installer.</p>\n<p>The Parsim installation requires and automatically installs the\nPython library <a href=\"http://pyexpander.sourceforge.net\" rel=\"nofollow\">pyexpander</a>,\nwhich is used for macro and parameter expansion (parameterization of input files).\nThe DOE (Design of Experiments) functionality is provided by the <a href=\"https://github.com/clicumu/pyDOE2\" rel=\"nofollow\">pyDOE2</a>,\nnumpy and scipy libraries. The pandas library has also been included, so that the Python API can\nprovide results and caselist data as pandas DataFrames.</p>\n<p>It is recommended to first make a clean and fully functional installation\nof the NumPy, SciPy and pandas libraries.\nThe best way to do this depends on which Python distribution you use.\nThe <a href=\"https://www.continuum.io/downloads\" rel=\"nofollow\">anaconda Python distribution</a>\nis highly recommended. It works well on both Windows and Linux.\nIn an anaconda distribution, you simply install the conda packages for NumPy, SciPy and pandas.\nThey are usually installed by default. Otherwise use the conda package manager:</p>\n<pre>conda install numpy scipy pandas\n</pre>\n<p>Then use <cite>pip</cite> to install parsim:</p>\n<blockquote>\npip install parsim</blockquote>\n<p>This will install also the <a href=\"http://pyexpander.sourceforge.net\" rel=\"nofollow\">pyexpander</a>\nand <a href=\"https://github.com/clicumu/pyDOE2\" rel=\"nofollow\">pyDOE2</a> packages, which in turn will check for NumPy and SciPy.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>The Parsim documentation is hosted at <a href=\"https://parsim.readthedocs.io\" rel=\"nofollow\">ReadTheDocs</a>.</p>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<p>Parsim was developed by <a href=\"https://www.ri.se/en/ola-widlund\" rel=\"nofollow\">Ola Widlund</a>,\n<a href=\"https://www.ri.se/en\" rel=\"nofollow\">RISE Research Institutes of Sweden</a>, to\nprovide basic and generic functionality for uncertainty quantification\nand quality assurance of parameterized simulation models.</p>\n</div>\n<div id=\"licensing\">\n<h2>Licensing</h2>\n<p>Parsim is licensed under the GNU Public License, GPL, version 3 or later.\nCopyright belongs to <a href=\"https://www.ri.se/en\" rel=\"nofollow\">RISE Research Institutes of Sweden AB</a>.</p>\n</div>\n<div id=\"source-code-and-reporting-of-issues\">\n<h2>Source code and reporting of issues</h2>\n<p>The source code is hosted at <a href=\"https://gitlab.com/olwi/psm\" rel=\"nofollow\">GitLab.com</a>.\nHere you can also report issues and suggest improvements.</p>\n</div>\n\n          </div>"}, "last_serial": 5902311, "releases": {"0.6.2": [{"comment_text": "", "digests": {"md5": "5881eb0ac64c5d270a43088dcd1e452b", "sha256": "e47865c577710a8cd1af45689e75912fbebf4104c65092842d2dc3b7d61786da"}, "downloads": -1, "filename": "parsim-0.6.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5881eb0ac64c5d270a43088dcd1e452b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 41225, "upload_time": "2017-06-20T19:05:12", "upload_time_iso_8601": "2017-06-20T19:05:12.066763Z", "url": "https://files.pythonhosted.org/packages/f6/99/ade61d604354633510b30efb9119a64d5d9709a5b2b6af682b44850b27bb/parsim-0.6.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4822d282fd2aabe7844ed4ba91b7a45c", "sha256": "58208b5149492841f48027e7872f29b849377715b71c4ffe92d120cebba87feb"}, "downloads": -1, "filename": "parsim-0.6.2.tar.gz", "has_sig": false, "md5_digest": "4822d282fd2aabe7844ed4ba91b7a45c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33548, "upload_time": "2017-06-20T19:05:14", "upload_time_iso_8601": "2017-06-20T19:05:14.122797Z", "url": "https://files.pythonhosted.org/packages/b1/f2/e60acbc392315e482b054a444e176ed11bea39ba0b05cec701f4889dd58b/parsim-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "a789726a445933fea9c0138ebddf677b", "sha256": "388c330d4162b416f3b613020c147a8e76206446b445370a70f099de535cc643"}, "downloads": -1, "filename": "parsim-0.6.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a789726a445933fea9c0138ebddf677b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 41738, "upload_time": "2017-06-21T18:51:44", "upload_time_iso_8601": "2017-06-21T18:51:44.367201Z", "url": "https://files.pythonhosted.org/packages/43/05/7b9f8b5030eb29d1f8d5c65ece57908868444dcbb4eead2ddc0c39b9ad19/parsim-0.6.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee048ffd74b8ccfe8d21340c845106bc", "sha256": "70ca829e0c5fadf899dada9b6ac7076a7cf07af690a8a99de4ca721a36b6a823"}, "downloads": -1, "filename": "parsim-0.6.3.tar.gz", "has_sig": false, "md5_digest": "ee048ffd74b8ccfe8d21340c845106bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33952, "upload_time": "2017-06-21T18:51:51", "upload_time_iso_8601": "2017-06-21T18:51:51.782076Z", "url": "https://files.pythonhosted.org/packages/c2/92/67d533f45c03271e29b9b175121c70b1a52ae9eb0a84aa191708a55693f1/parsim-0.6.3.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "c09e3c215cc243093630f1ef5d3fa964", "sha256": "298dd69370c708e1c70eb525dba05a54acc28881ea46fd97cb14be74ff87e484"}, "downloads": -1, "filename": "parsim-0.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c09e3c215cc243093630f1ef5d3fa964", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 45939, "upload_time": "2018-07-27T15:12:45", "upload_time_iso_8601": "2018-07-27T15:12:45.959094Z", "url": "https://files.pythonhosted.org/packages/a9/d3/3c1a101bca39b0fc643c2a247de732997d15367f5a32e57e99b2cd62990e/parsim-0.7.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab3ec083bc0d9f903352fa9a90457431", "sha256": "a66f8403f857a166c9f540075ee01dbb638cd448a2b9a312373214e17a46875a"}, "downloads": -1, "filename": "parsim-0.7.0.tar.gz", "has_sig": false, "md5_digest": "ab3ec083bc0d9f903352fa9a90457431", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41377, "upload_time": "2018-07-27T15:12:48", "upload_time_iso_8601": "2018-07-27T15:12:48.130372Z", "url": "https://files.pythonhosted.org/packages/6a/b2/7be41c75878375f61c74183c8e6e326b33575d1a00e7ec78abc2d9e1af75/parsim-0.7.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "abff81de7fe092dfc439c70e4b76bba4", "sha256": "7ebc4291cbb3ed243a2d220ce001875dea14629b9e0f25976f70b67017000ba4"}, "downloads": -1, "filename": "parsim-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "abff81de7fe092dfc439c70e4b76bba4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 58739, "upload_time": "2018-12-19T12:40:49", "upload_time_iso_8601": "2018-12-19T12:40:49.491615Z", "url": "https://files.pythonhosted.org/packages/43/cf/0894fc953d776431b5f22dd8305d576a34f33655e90cf6a66777728fc725/parsim-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2412bf4171bee0ff5d6e0d1d4dc4543", "sha256": "d3a53547d78e37b88d1f6f30bcdd7c65403b87518a76802081245ff2b3ed1e89"}, "downloads": -1, "filename": "parsim-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d2412bf4171bee0ff5d6e0d1d4dc4543", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41689, "upload_time": "2018-12-19T12:40:51", "upload_time_iso_8601": "2018-12-19T12:40:51.334231Z", "url": "https://files.pythonhosted.org/packages/47/0a/4c705804b4420c14800ce29392f97d0d7b2b391be56beb57a7b85fda1bff/parsim-1.0.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "28e2e9da9be7546594f09f9979c3b2c0", "sha256": "03068a416b98954d30dc1c3b4891cad95bfe34087ddef36df80f7497c8153f59"}, "downloads": -1, "filename": "parsim-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "28e2e9da9be7546594f09f9979c3b2c0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 57406, "upload_time": "2019-09-27T10:54:29", "upload_time_iso_8601": "2019-09-27T10:54:29.881419Z", "url": "https://files.pythonhosted.org/packages/18/9f/3c03a0f82a189769ff1a7249fa8081459b112aab266ad7f759e4f9efa6f3/parsim-2.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "36b5e1a089a584f582d6f9d4fe363ccb", "sha256": "6c75d0514c3c36afa206fad56445f76ea866e5e21c6e4bda7305aa28c3d60c1a"}, "downloads": -1, "filename": "parsim-2.0.0.tar.gz", "has_sig": false, "md5_digest": "36b5e1a089a584f582d6f9d4fe363ccb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45158, "upload_time": "2019-09-27T12:09:49", "upload_time_iso_8601": "2019-09-27T12:09:49.404332Z", "url": "https://files.pythonhosted.org/packages/be/c7/eee91f91bc68f466153205baaa239b83777fa10be9213cbb4d522d6f2a8d/parsim-2.0.0.tar.gz", "yanked": false}], "2.0.0.post1": [{"comment_text": "", "digests": {"md5": "6abf8702d5951b44fa8c4df85bfa0606", "sha256": "6f81674ad71138a348f96ceac0036c53be91a9119e3faf733d322e9e20f9d295"}, "downloads": -1, "filename": "parsim-2.0.0.post1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6abf8702d5951b44fa8c4df85bfa0606", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3", "size": 59996, "upload_time": "2019-09-29T10:14:47", "upload_time_iso_8601": "2019-09-29T10:14:47.762759Z", "url": "https://files.pythonhosted.org/packages/35/be/2ca85ab5c16522541e57ff3e4df83a09cfa59916b525a2cf651a3ee8978b/parsim-2.0.0.post1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8a871c5fd0ea208ea4d8b55a07af148", "sha256": "d357a032fe5def94d069748d56083fe16d4089fcdd7f0a93422bd84e19aa1542"}, "downloads": -1, "filename": "parsim-2.0.0.post1.tar.gz", "has_sig": false, "md5_digest": "b8a871c5fd0ea208ea4d8b55a07af148", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 45205, "upload_time": "2019-09-29T10:14:49", "upload_time_iso_8601": "2019-09-29T10:14:49.691035Z", "url": "https://files.pythonhosted.org/packages/2d/93/cae7878bd1c9b601fc276e56bd699c4e96c49e1e8382fb2c56e22df31ad5/parsim-2.0.0.post1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6abf8702d5951b44fa8c4df85bfa0606", "sha256": "6f81674ad71138a348f96ceac0036c53be91a9119e3faf733d322e9e20f9d295"}, "downloads": -1, "filename": "parsim-2.0.0.post1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6abf8702d5951b44fa8c4df85bfa0606", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3", "size": 59996, "upload_time": "2019-09-29T10:14:47", "upload_time_iso_8601": "2019-09-29T10:14:47.762759Z", "url": "https://files.pythonhosted.org/packages/35/be/2ca85ab5c16522541e57ff3e4df83a09cfa59916b525a2cf651a3ee8978b/parsim-2.0.0.post1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8a871c5fd0ea208ea4d8b55a07af148", "sha256": "d357a032fe5def94d069748d56083fe16d4089fcdd7f0a93422bd84e19aa1542"}, "downloads": -1, "filename": "parsim-2.0.0.post1.tar.gz", "has_sig": false, "md5_digest": "b8a871c5fd0ea208ea4d8b55a07af148", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 45205, "upload_time": "2019-09-29T10:14:49", "upload_time_iso_8601": "2019-09-29T10:14:49.691035Z", "url": "https://files.pythonhosted.org/packages/2d/93/cae7878bd1c9b601fc276e56bd699c4e96c49e1e8382fb2c56e22df31ad5/parsim-2.0.0.post1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:16 2020"}