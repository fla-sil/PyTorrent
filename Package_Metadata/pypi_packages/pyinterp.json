{"info": {"author": "CNES/CLS", "author_email": "fbriol@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering :: Physics"], "description": "[![Build Status](https://dev.azure.com/fbriol/pangeo-pyinterp/_apis/build/status/CNES.pangeo-pyinterp?branchName=master)](https://dev.azure.com/fbriol/pangeo-pyinterp/_build/latest?definitionId=2&branchName=master)\n[![conda](https://anaconda.org/conda-forge/pyinterp/badges/installer/conda.svg?service=github)](https://www.anaconda.com/distribution/)\n[![downloads](https://anaconda.org/conda-forge/pyinterp/badges/downloads.svg?service=github)](https://www.anaconda.com/distribution/)\n[![platforms](https://anaconda.org/conda-forge/pyinterp/badges/platforms.svg?service=github)](https://anaconda.org/conda-forge/pyinterp)\n[![latest-release-date](https://anaconda.org/conda-forge/pyinterp/badges/latest_release_date.svg?service=github)](https://github.com/CNES/pangeo-pyinterp/commits/master)\n[![license](https://anaconda.org/conda-forge/pyinterp/badges/license.svg?service=github)](https://opensource.org/licenses/BSD-3-Clause)\n[![Binder](https://binder.pangeo.io/badge_logo.svg)](https://binder.pangeo.io/v2/gh/CNES/pangeo-pyinterp/master?filepath=notebooks)\n\n\n# pangeo-pyinterp\nPython library for optimized geo-referenced interpolation.\n\n## About\nThe motivation of this project is to provide tools for interpolating\ngeo-referenced data used in the field of geosciences. Other libraries cover this\nproblem, but written entirely in Python, the performance of these projects was\nnot quite sufficient for our needs. That is why this project started.\n\nWith this library, you can interpolate\n[2D](https://pangeo-pyinterp.readthedocs.io/en/latest/generated/pyinterp.grid.Grid2D.html#pyinterp.grid.Grid2D),\n[3D](https://pangeo-pyinterp.readthedocs.io/en/latest/generated/pyinterp.grid.Grid3D.html#pyinterp.grid.Grid3D),\nor\n[4D](https://pangeo-pyinterp.readthedocs.io/en/latest/generated/pyinterp.grid.Grid4D.html#pyinterp.grid.Grid4D)\nfields using `n-variate` and `bicubic`\n[interpolators](https://pangeo-pyinterp.readthedocs.io/en/latest/api.html#cartesian-interpolators)\nand [unstructured\ngrids](https://pangeo-pyinterp.readthedocs.io/en/latest/generated/pyinterp.RTree.html).\nYou can also apply for a data\n[binning](https://pangeo-pyinterp.readthedocs.io/en/latest/api.html#binning) on\nthe bivariate area by simple or linear binning.\n\nThe library core is written in C++ using the [Boost C++\nLibraries](https://www.boost.org/), [Eigen3](http://eigen.tuxfamily.org/),\n[GNU Scientific Library,](https://www.gnu.org/software/gsl/) and\n[pybind11](https://github.com/pybind/pybind11/) libraries.\n\nThis software also uses [CMake](https://cmake.org/) to configure the project\nand [Googletest](https://github.com/google/googletest) to perform unit testing\nof the library kernel.\n\n## Fill undefined values\n\nThe undefined values in the grids do not allow interpolation of values located\nin the neighborhood. This behavior is a concern when you need to interpolate\nvalues near the mask of some fields. The library provides utilities to fill the\nundefined values:\n\n* [loess](https://pangeo-pyinterp.readthedocs.io/en/latest/generated/pyinterp.fill.loess.html)\n  to fill the undefined values on the boundary between the defined/undefined\n  values using local regression.\n* [gauss_seidel](https://pangeo-pyinterp.readthedocs.io/en/latest/generated/pyinterp.fill.gauss_seidel.html)\n  to fill all undefined values in a grid using the Gauss-Seidel method by\n  relaxation.\n\n## Geographic indexers\n\n### N-Dimensional Grids\n\nN-dimensional grid is a grid defined by a matrix, in a 2D space, by a cube in a\n3D space, etc. Each dimension of the grid is associated with a vector\ncorresponding to its coordinates or axes. Axes used to locate a pixel in the\ngrid from the coordinates of a point. These axes are either:\n\n* *regular*: a vector of 181 latitudes spaced a degree from -90 to 90 degrees;\n* *irregular*: a vector of 109 latitudes irregularly spaced from -90 to\n  89.940374 degrees.\n\nThese objects are manipulated by the class\n[pyinterp.Axis](https://pangeo-pyinterp.readthedocs.io/en/latest/generated/pyinterp.Axis.html),\nwhich will choose, according to Axis definition, the best implementation. This\nobject will allow you to find the two indexes framing a given value. This\noperating mode allows better performance when searching for a regular axis (a\nsimple calculation will enable you to see the index of a point immediately). In\ncontrast, in the case of an irregular axis, the search will be performed using a\nbinary search.\n\nFinally, this class can define a circular axis from a vector to correctly\nlocate a value on the circle. This type of Axis will is used handling\nlongitudes.\n\n### Temporal Axes\n\nThe\n[pyinterp.TemporalAxis](https://pangeo-pyinterp.readthedocs.io/en/latest/generated/pyinterp.TemporalAxis.html)\nclass handles temporal axes, i.e., axes defined by 64-bit integer vectors, which\nis the encoding used by\n[numpy](https://docs.scipy.org/doc/numpy/reference/arrays.datetime.html) to\ncontrol dates. This class allows handling dates without loss of information when\nthe precision of the times is the nanosecond. These objects are used by\nspatiotemporal grids to perform temporal interpolations.\n\n### Unstructured Grids\n\nIn the case of unstructured grids, the index used is a *R\\*Tree*. These trees\nhave better performance than the *KDTree* generally found in Python library\nimplementations.\n\nThe tree used here is the implementation provided by the [C++ Boost\nlibrary](https://www.boost.org/doc/libs/1_70_0/libs/geometry/doc/html/geometry/reference/spatial_indexes/boost__geometry__index__rtree.html).\n\nAn adaptation has introduced to address spherical equatorial coordinates\neffectively. Although the Boost library allows these coordinates to manipulated\nnatively, the performance is lower than in the case of Cartesian space. Thus, we\nhave chosen to implement a conversion of Longitude Latitude Altitude (*LLA*)\ncoordinates into Earth-Centered, Earth-Fixed (*ECEF*) coordinates transparently\nfor the user to ensure that we can preserve excellent performance. The\ndisadvantage of this implementation is that it requires a little more memory, as\none more element gets used to index the value of the Cartesian space.\n\nThe management of the\n[LLA](https://pangeo-pyinterp.readthedocs.io/en/latest/generated/pyinterp.geodetic.Coordinates.ecef_to_lla.html)/[ECEF](https://pangeo-pyinterp.readthedocs.io/en/latest/generated/pyinterp.geodetic.Coordinates.lla_to_ecef.html)\ncoordinate conversion is managed to use the [Olson,\nD.K.](https://ieeexplore.ieee.org/document/481290) algorithm. It has excellent\nperformance with an accuracy of 1e-8 meters for altitude.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CNES/pangeo-pyinterp", "keywords": "", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "pyinterp", "package_url": "https://pypi.org/project/pyinterp/", "platform": "POSIX", "project_url": "https://pypi.org/project/pyinterp/", "project_urls": {"Homepage": "https://github.com/CNES/pangeo-pyinterp"}, "release_url": "https://pypi.org/project/pyinterp/0.3.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Interpolation of geo-referenced data for Python.", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://dev.azure.com/fbriol/pangeo-pyinterp/_build/latest?definitionId=2&amp;branchName=master\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2156a33c1711f960f031a85f0fe36176219760ab/68747470733a2f2f6465762e617a7572652e636f6d2f666272696f6c2f70616e67656f2d7079696e746572702f5f617069732f6275696c642f7374617475732f434e45532e70616e67656f2d7079696e746572703f6272616e63684e616d653d6d6173746572\"></a>\n<a href=\"https://www.anaconda.com/distribution/\" rel=\"nofollow\"><img alt=\"conda\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b825c0de03cf4a0994dbab52ae5f2357608af0a3/68747470733a2f2f616e61636f6e64612e6f72672f636f6e64612d666f7267652f7079696e746572702f6261646765732f696e7374616c6c65722f636f6e64612e7376673f736572766963653d676974687562\"></a>\n<a href=\"https://www.anaconda.com/distribution/\" rel=\"nofollow\"><img alt=\"downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/adb6fd2e024b98a400277ae47cba9f15ab653934/68747470733a2f2f616e61636f6e64612e6f72672f636f6e64612d666f7267652f7079696e746572702f6261646765732f646f776e6c6f6164732e7376673f736572766963653d676974687562\"></a>\n<a href=\"https://anaconda.org/conda-forge/pyinterp\" rel=\"nofollow\"><img alt=\"platforms\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a585f10e842d74f2eb4fb851e1c4870626800b13/68747470733a2f2f616e61636f6e64612e6f72672f636f6e64612d666f7267652f7079696e746572702f6261646765732f706c6174666f726d732e7376673f736572766963653d676974687562\"></a>\n<a href=\"https://github.com/CNES/pangeo-pyinterp/commits/master\" rel=\"nofollow\"><img alt=\"latest-release-date\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8a880b60140fc13ee1ec0c51d385033cdc721204/68747470733a2f2f616e61636f6e64612e6f72672f636f6e64612d666f7267652f7079696e746572702f6261646765732f6c61746573745f72656c656173655f646174652e7376673f736572766963653d676974687562\"></a>\n<a href=\"https://opensource.org/licenses/BSD-3-Clause\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/95b6686bce3e45df0c73c190a0adff26cdc48613/68747470733a2f2f616e61636f6e64612e6f72672f636f6e64612d666f7267652f7079696e746572702f6261646765732f6c6963656e73652e7376673f736572766963653d676974687562\"></a>\n<a href=\"https://binder.pangeo.io/v2/gh/CNES/pangeo-pyinterp/master?filepath=notebooks\" rel=\"nofollow\"><img alt=\"Binder\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6ab6fbbfd74b7ffcd0823b4b3933874af7149386/68747470733a2f2f62696e6465722e70616e67656f2e696f2f62616467655f6c6f676f2e737667\"></a></p>\n<h1>pangeo-pyinterp</h1>\n<p>Python library for optimized geo-referenced interpolation.</p>\n<h2>About</h2>\n<p>The motivation of this project is to provide tools for interpolating\ngeo-referenced data used in the field of geosciences. Other libraries cover this\nproblem, but written entirely in Python, the performance of these projects was\nnot quite sufficient for our needs. That is why this project started.</p>\n<p>With this library, you can interpolate\n<a href=\"https://pangeo-pyinterp.readthedocs.io/en/latest/generated/pyinterp.grid.Grid2D.html#pyinterp.grid.Grid2D\" rel=\"nofollow\">2D</a>,\n<a href=\"https://pangeo-pyinterp.readthedocs.io/en/latest/generated/pyinterp.grid.Grid3D.html#pyinterp.grid.Grid3D\" rel=\"nofollow\">3D</a>,\nor\n<a href=\"https://pangeo-pyinterp.readthedocs.io/en/latest/generated/pyinterp.grid.Grid4D.html#pyinterp.grid.Grid4D\" rel=\"nofollow\">4D</a>\nfields using <code>n-variate</code> and <code>bicubic</code>\n<a href=\"https://pangeo-pyinterp.readthedocs.io/en/latest/api.html#cartesian-interpolators\" rel=\"nofollow\">interpolators</a>\nand <a href=\"https://pangeo-pyinterp.readthedocs.io/en/latest/generated/pyinterp.RTree.html\" rel=\"nofollow\">unstructured\ngrids</a>.\nYou can also apply for a data\n<a href=\"https://pangeo-pyinterp.readthedocs.io/en/latest/api.html#binning\" rel=\"nofollow\">binning</a> on\nthe bivariate area by simple or linear binning.</p>\n<p>The library core is written in C++ using the <a href=\"https://www.boost.org/\" rel=\"nofollow\">Boost C++\nLibraries</a>, <a href=\"http://eigen.tuxfamily.org/\" rel=\"nofollow\">Eigen3</a>,\n<a href=\"https://www.gnu.org/software/gsl/\" rel=\"nofollow\">GNU Scientific Library,</a> and\n<a href=\"https://github.com/pybind/pybind11/\" rel=\"nofollow\">pybind11</a> libraries.</p>\n<p>This software also uses <a href=\"https://cmake.org/\" rel=\"nofollow\">CMake</a> to configure the project\nand <a href=\"https://github.com/google/googletest\" rel=\"nofollow\">Googletest</a> to perform unit testing\nof the library kernel.</p>\n<h2>Fill undefined values</h2>\n<p>The undefined values in the grids do not allow interpolation of values located\nin the neighborhood. This behavior is a concern when you need to interpolate\nvalues near the mask of some fields. The library provides utilities to fill the\nundefined values:</p>\n<ul>\n<li><a href=\"https://pangeo-pyinterp.readthedocs.io/en/latest/generated/pyinterp.fill.loess.html\" rel=\"nofollow\">loess</a>\nto fill the undefined values on the boundary between the defined/undefined\nvalues using local regression.</li>\n<li><a href=\"https://pangeo-pyinterp.readthedocs.io/en/latest/generated/pyinterp.fill.gauss_seidel.html\" rel=\"nofollow\">gauss_seidel</a>\nto fill all undefined values in a grid using the Gauss-Seidel method by\nrelaxation.</li>\n</ul>\n<h2>Geographic indexers</h2>\n<h3>N-Dimensional Grids</h3>\n<p>N-dimensional grid is a grid defined by a matrix, in a 2D space, by a cube in a\n3D space, etc. Each dimension of the grid is associated with a vector\ncorresponding to its coordinates or axes. Axes used to locate a pixel in the\ngrid from the coordinates of a point. These axes are either:</p>\n<ul>\n<li><em>regular</em>: a vector of 181 latitudes spaced a degree from -90 to 90 degrees;</li>\n<li><em>irregular</em>: a vector of 109 latitudes irregularly spaced from -90 to\n89.940374 degrees.</li>\n</ul>\n<p>These objects are manipulated by the class\n<a href=\"https://pangeo-pyinterp.readthedocs.io/en/latest/generated/pyinterp.Axis.html\" rel=\"nofollow\">pyinterp.Axis</a>,\nwhich will choose, according to Axis definition, the best implementation. This\nobject will allow you to find the two indexes framing a given value. This\noperating mode allows better performance when searching for a regular axis (a\nsimple calculation will enable you to see the index of a point immediately). In\ncontrast, in the case of an irregular axis, the search will be performed using a\nbinary search.</p>\n<p>Finally, this class can define a circular axis from a vector to correctly\nlocate a value on the circle. This type of Axis will is used handling\nlongitudes.</p>\n<h3>Temporal Axes</h3>\n<p>The\n<a href=\"https://pangeo-pyinterp.readthedocs.io/en/latest/generated/pyinterp.TemporalAxis.html\" rel=\"nofollow\">pyinterp.TemporalAxis</a>\nclass handles temporal axes, i.e., axes defined by 64-bit integer vectors, which\nis the encoding used by\n<a href=\"https://docs.scipy.org/doc/numpy/reference/arrays.datetime.html\" rel=\"nofollow\">numpy</a> to\ncontrol dates. This class allows handling dates without loss of information when\nthe precision of the times is the nanosecond. These objects are used by\nspatiotemporal grids to perform temporal interpolations.</p>\n<h3>Unstructured Grids</h3>\n<p>In the case of unstructured grids, the index used is a <em>R*Tree</em>. These trees\nhave better performance than the <em>KDTree</em> generally found in Python library\nimplementations.</p>\n<p>The tree used here is the implementation provided by the <a href=\"https://www.boost.org/doc/libs/1_70_0/libs/geometry/doc/html/geometry/reference/spatial_indexes/boost__geometry__index__rtree.html\" rel=\"nofollow\">C++ Boost\nlibrary</a>.</p>\n<p>An adaptation has introduced to address spherical equatorial coordinates\neffectively. Although the Boost library allows these coordinates to manipulated\nnatively, the performance is lower than in the case of Cartesian space. Thus, we\nhave chosen to implement a conversion of Longitude Latitude Altitude (<em>LLA</em>)\ncoordinates into Earth-Centered, Earth-Fixed (<em>ECEF</em>) coordinates transparently\nfor the user to ensure that we can preserve excellent performance. The\ndisadvantage of this implementation is that it requires a little more memory, as\none more element gets used to index the value of the Cartesian space.</p>\n<p>The management of the\n<a href=\"https://pangeo-pyinterp.readthedocs.io/en/latest/generated/pyinterp.geodetic.Coordinates.ecef_to_lla.html\" rel=\"nofollow\">LLA</a>/<a href=\"https://pangeo-pyinterp.readthedocs.io/en/latest/generated/pyinterp.geodetic.Coordinates.lla_to_ecef.html\" rel=\"nofollow\">ECEF</a>\ncoordinate conversion is managed to use the <a href=\"https://ieeexplore.ieee.org/document/481290\" rel=\"nofollow\">Olson,\nD.K.</a> algorithm. It has excellent\nperformance with an accuracy of 1e-8 meters for altitude.</p>\n\n          </div>"}, "last_serial": 7105136, "releases": {"0.0.4": [{"comment_text": "", "digests": {"md5": "449a353c47d3b1894a1faaa4974da779", "sha256": "db6daf1e9300ea9b7be7a917df81cee32f1a77021700affde3f8270b68758e75"}, "downloads": -1, "filename": "pyinterp-0.0.4.tar.gz", "has_sig": false, "md5_digest": "449a353c47d3b1894a1faaa4974da779", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5730604, "upload_time": "2019-09-16T10:00:54", "upload_time_iso_8601": "2019-09-16T10:00:54.862955Z", "url": "https://files.pythonhosted.org/packages/32/e8/4f7bf5af1d93cf899b165961ec3bb3a72a20fadfdbe05a8de99d63ebf03f/pyinterp-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "a4c0d982f9bd3896755201595ad0e640", "sha256": "dd62ac89846b76db92326eb8accbe0a12e195e2b44ba53336ebba984511f1869"}, "downloads": -1, "filename": "pyinterp-0.0.5.tar.gz", "has_sig": false, "md5_digest": "a4c0d982f9bd3896755201595ad0e640", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5413725, "upload_time": "2019-09-19T17:28:32", "upload_time_iso_8601": "2019-09-19T17:28:32.658148Z", "url": "https://files.pythonhosted.org/packages/1d/90/3c3a3acc046b9b6db68cff0868ef715bcadb701c96ad80f7e7f7f94fd960/pyinterp-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "7d674d8cf7aacd148969a3f4e860b45d", "sha256": "5bda74b2580668895143c19bda8b9bf51d24e8fb26066f6f0aadbcdd9579856f"}, "downloads": -1, "filename": "pyinterp-0.0.6.tar.gz", "has_sig": false, "md5_digest": "7d674d8cf7aacd148969a3f4e860b45d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5256929, "upload_time": "2019-10-05T19:23:13", "upload_time_iso_8601": "2019-10-05T19:23:13.747286Z", "url": "https://files.pythonhosted.org/packages/bf/1f/4f1007dee63d7d6a182093cbea139be49b55a8e7b74a43512d33def15df2/pyinterp-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "504394beae0545c8d4a209cc375883df", "sha256": "b88365b07383d50ebfbbc66ab2c8c08623a6352afcb84b2caa82902224b46ade"}, "downloads": -1, "filename": "pyinterp-0.0.7.tar.gz", "has_sig": false, "md5_digest": "504394beae0545c8d4a209cc375883df", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5020314, "upload_time": "2019-11-14T08:13:45", "upload_time_iso_8601": "2019-11-14T08:13:45.778137Z", "url": "https://files.pythonhosted.org/packages/d1/f0/4f36a6c11aae3fb0d4e03daee0d70a16bdefc8ba4753f3468878ab6fa885/pyinterp-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "00b73e544a51bedee4bdf50bb05f0d0e", "sha256": "c8213e41876536def11ae5bd1052b180768fca0d8f2baa23cb0c1633ce1af251"}, "downloads": -1, "filename": "pyinterp-0.0.8.tar.gz", "has_sig": false, "md5_digest": "00b73e544a51bedee4bdf50bb05f0d0e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8564850, "upload_time": "2019-12-08T16:22:26", "upload_time_iso_8601": "2019-12-08T16:22:26.882780Z", "url": "https://files.pythonhosted.org/packages/2a/4e/09e84e5b0c76dcda4236732f8a23d785b2d07615be444a9735a6d097bd2e/pyinterp-0.0.8.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "ffc27703cdda259d72fea064194e12bf", "sha256": "f7a6a612a264f98d6f1ba3ea9b305c98291ef08629304f73b2e202e133ff8da6"}, "downloads": -1, "filename": "pyinterp-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ffc27703cdda259d72fea064194e12bf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8589411, "upload_time": "2020-02-16T16:03:33", "upload_time_iso_8601": "2020-02-16T16:03:33.397840Z", "url": "https://files.pythonhosted.org/packages/29/c7/3e8669a88f1f29d7ac5e64042bec9b44daf6575f584e5e40db4507a525ea/pyinterp-0.2.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "6b9950453550fe1232c359f9949ca8ec", "sha256": "f7132c918709bc78a43017b6034bf36595dfb149e3f591292ccfb3a5c43e4053"}, "downloads": -1, "filename": "pyinterp-0.3.1.tar.gz", "has_sig": false, "md5_digest": "6b9950453550fe1232c359f9949ca8ec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5043584, "upload_time": "2020-04-26T13:58:59", "upload_time_iso_8601": "2020-04-26T13:58:59.773570Z", "url": "https://files.pythonhosted.org/packages/83/dc/f90947010b8c39518c192e314088ac2947b2b7fa35a74fbce5a6cddc929d/pyinterp-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6b9950453550fe1232c359f9949ca8ec", "sha256": "f7132c918709bc78a43017b6034bf36595dfb149e3f591292ccfb3a5c43e4053"}, "downloads": -1, "filename": "pyinterp-0.3.1.tar.gz", "has_sig": false, "md5_digest": "6b9950453550fe1232c359f9949ca8ec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5043584, "upload_time": "2020-04-26T13:58:59", "upload_time_iso_8601": "2020-04-26T13:58:59.773570Z", "url": "https://files.pythonhosted.org/packages/83/dc/f90947010b8c39518c192e314088ac2947b2b7fa35a74fbce5a6cddc929d/pyinterp-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:57 2020"}