{"info": {"author": "Reuben Cummings", "author_email": "reubano@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "pygogo: a Python logger with super powers\n=========================================\n\n|travis| |versions| |pypi|\n\n.. image:: https://raw.githubusercontent.com/reubano/pygogo/master/gogo.png\n    :alt: sample pygogo usage\n    :width: 800\n    :align: center\n\nIndex\n-----\n`Introduction`_ | `Requirements`_ | `Motivation`_ | `Usage`_ | `Installation`_ |\n`Project Structure`_ | `Design Principles`_ | `Structured Logging`_ |\n`Formatters`_ | `Handlers`_ | `Scripts`_ | `Contributing`_ | `License`_\n\nIntroduction\n------------\n\npygogo is a Python logging `library`_ and `command-line interface`_ with super powers.\npygogo leverages the standard Python `logging module`_ under the hood, so there's\nno need to learn yet-another logging library. The default implementation sends\nall messages to ``stdout``, and any messages at level ``WARNING`` or above also to ``stderr``.\n\nWith pygogo, you can\n\n- Log via different handlers depending on the event severity\n- Format log messages as plain text, csv, json, and more..\n- Send logs to stdout, stderr, file, email, sockets, and more..\n- Inter-operate with the standard python logging module\n- and much more...\n\nRequirements\n------------\n\npygogo has been tested and is known to work on Python 3.6, 3.7, and 3.8; and PyPy3.6.\n\nMotivation\n----------\n\nThe standard logging module is great, but requires a ton of boilerplate before\nyou can do anything really interesting with it. I designed pygogo to provide\nmany useful logging use-cases out of the box. A reimplementation of\n`Using LoggerAdapters to impart contextual information`_ is shown below:\n\n.. _Using LoggerAdapters to impart contextual information: https://docs.python.org/2/howto/logging-cookbook.html#using-loggeradapters-to-impart-contextual-information\n\n.. code-block:: python\n\n    import pygogo as gogo\n\n    logger = gogo.Gogo(__name__).get_structured_logger(connid='1234')\n    logger.info('log message')\n\n    # Prints the following to stdout\n\n    {\"message\": \"log message\", \"connid\": \"1234\"}\n\nUsage\n-----\n\npygogo is intended to be used either directly as a Python `library`_ or from\nthe terminal via the `command-line interface`_.\n\nLibrary\n~~~~~~~\n\nExamples\n^^^^^^^^\n\n*Hello World*\n\n.. code-block:: python\n\n    from pygogo import logger\n\n    logger.debug('hello world')\n    logger.error('hello error')\n\n    # Prints the following to `stdout`\n\n    hello world\n    hello error\n\n    # Prints the following to `stderr`\n\n    hello error\n\n*Log based debugging*\n\n.. code-block:: python\n\n    import pygogo as gogo\n\n    def main(verbose=False):\n        logger = gogo.Gogo(__name__, verbose=verbose).logger\n        logger.debug('I will log to `stdout` only if `verbose` is True')\n        logger.info('I will log to `stdout` always')\n        logger.warning('I will log to both `stdout` and `stderr` always')\n\n*Disabled dual logging*\n\n.. code-block:: python\n\n    import pygogo as gogo\n\n    logger = gogo.Gogo(monolog=True).logger\n    logger.debug('debug message')\n    logger.info('info message')\n    logger.warning('warning message')\n    logger.error('error message')\n    logger.critical('critical message')\n\n    # Prints the following to `stdout.log` (all messages at level `INFO` or below):\n\n    debug message\n    info message\n\n    # Prints the following to `stderr` (messages at level `WARNING` or above):\n\n    warning message\n    error message\n    critical message\n\n*Custom formatter* [1]_\n\n.. code-block:: python\n\n    import logging\n    import pygogo as gogo\n\n    log_format = '%(asctime)s - %(name)s - %(levelname)s - %(message)s'\n    formatter = logging.Formatter(log_format)\n\n    logger = gogo.Gogo(\n        'examples.fmt',\n        low_hdlr=gogo.handlers.file_hdlr('custom_fmt.log'),\n        low_formatter=formatter,\n        high_level='error',\n        high_formatter=formatter).logger\n\n    # Now let's log something!\n\n    logger.debug('debug message')\n    logger.info('info message')\n    logger.warn('warn message')\n    logger.error('error message')\n    logger.critical('critical message')\n\n    # Prints the following to `custom_fmt.log` (all messages):\n\n    2015-12-18 18:51:30,416 - examples.fmt.base - DEBUG - debug message\n    2015-12-18 18:51:30,416 - examples.fmt.base - INFO - info message\n    2015-12-18 18:51:30,416 - examples.fmt.base - WARNING - warn message\n    2015-12-18 18:51:30,416 - examples.fmt.base - ERROR - error message\n    2015-12-18 18:51:30,416 - examples.fmt.base - CRITICAL - critical message\n\n    # Prints the following to `stderr` (messages at level `ERROR` or above):\n\n    2015-12-18 18:51:30,416 - examples.fmt.base - ERROR - error message\n    2015-12-18 18:51:30,416 - examples.fmt.base - CRITICAL - critical message\n\n*Structured logging* [2]_\n\n.. code-block:: python\n\n    import pygogo as gogo\n\n    formatter = gogo.formatters.structured_formatter\n    kwargs = {'low_level': 'info', 'low_formatter': formatter}\n    logger = gogo.Gogo('examples.structured', **kwargs).logger\n    extra = {'set_value': set([1, 2, 3]), 'snowman': '\u2603'}\n    logger.info('log message', extra=extra)  # doctest: +ELLIPSIS\n\n    # Prints the following to `stdout`:\n\n    {\"snowman\": \"\\u2603\", \"name\": \"examples.structured.base\", \"level\": \"INFO\", \"message\": \"log message\", \"time\": \"2015-12-18 18:52:39\", \"msecs\": 58.973073959350586, \"set_value\": [1, 2, 3]}\n\n*Using Filters to impart contextual information* [3]_\n\n.. code-block:: python\n\n    import logging\n    import pygogo as gogo\n\n    levels = ('DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL')\n    log_frmt = (\n       '%(asctime)-4s %(name)-5s %(levelname)-8s IP: %(ip)-15s User: '\n       '%(user)-8s %(message)s')\n\n    formatter = logging.Formatter(log_frmt)\n    going = gogo.Gogo('a', low_formatter=formatter)\n    a1 = going.get_logger('b.c', ip='123.231.231.123', user='fred')\n    a2 = going.get_logger('e.f', ip='192.168.0.1', user='sheila')\n\n    # Now let's log something!\n\n    a1.debug('A debug message')\n    a1.info('An info %s', 'message')\n\n    for level in [getattr(logging, l) for l in levels]:\n       name = logging.getLevelName(level)\n       a2.log(level, 'A %s msg', name)\n\n    # Prints the following to `stdout` (all messages):\n\n    2015-12-19 10:12:24,479 a.b.c DEBUG    IP: 123.231.231.123 User: fred     A debug message\n    2015-12-19 10:12:24,479 a.b.c INFO     IP: 123.231.231.123 User: fred     An info message\n    2015-12-19 10:12:24,479 a.e.f DEBUG    IP: 192.168.0.1     User: sheila   A DEBUG msg\n    2015-12-19 10:12:24,479 a.e.f INFO     IP: 192.168.0.1     User: sheila   AN INFO msg\n    2015-12-19 10:12:24,479 a.e.f WARNING  IP: 192.168.0.1     User: sheila   A WARNING msg\n    2015-12-19 10:12:24,479 a.e.f ERROR    IP: 192.168.0.1     User: sheila   AN ERROR msg\n    2015-12-19 10:12:24,479 a.e.f CRITICAL IP: 192.168.0.1     User: sheila   A CRITICAL msg\n\n    # Prints the following to `stderr` (messages at level `WARNING` or above):\n\n    2015-12-19 10:12:24,479 a.e.f WARNING  IP: 192.168.0.1     User: sheila   A WARNING msg\n    2015-12-19 10:12:24,479 a.e.f ERROR    IP: 192.168.0.1     User: sheila   AN ERROR msg\n    2015-12-19 10:12:24,479 a.e.f CRITICAL IP: 192.168.0.1     User: sheila   A CRITICAL msg\n\n*Multiple loggers* [4]_\n\n.. code-block:: python\n\n    import pygogo as gogo\n\n    going = gogo.Gogo(\n        'examples.lggrs',\n        low_hdlr=gogo.handlers.file_hdlr('multi_lggrs.log'),\n        low_formatter=gogo.formatters.fixed_formatter,\n        high_level='info',\n        high_formatter=gogo.formatters.console_formatter)\n\n    root = going.logger\n    logger1 = going.get_logger('area1')\n    logger2 = going.get_logger('area2')\n\n    # Now let's log something!\n\n    root.info('Jackdaws love my big sphinx.')\n    logger1.debug('Quick zephyrs blow, daft Jim.')\n    logger1.info('How daft jumping zebras vex.')\n    logger2.warning('Jail zesty vixen who grabbed pay.')\n    logger2.error('The five boxing wizards jump.')\n\n    # Prints the following to `multi_lggrs.log` (all messages):\n\n    2015-12-18 17:21:37.417 examples.lggrs.base INFO     Jackdaws love my big sphinx.\n    2015-12-18 17:21:37.417 examples.lggrs.area1 DEBUG    Quick zephyrs blow, daft Jim.\n    2015-12-18 17:21:37.417 examples.lggrs.area1 INFO     How daft jumping zebras vex.\n    2015-12-18 17:21:37.417 examples.lggrs.area2 WARNING  Jail zesty vixen who grabbed pay.\n    2015-12-18 17:21:37.417 examples.lggrs.area2 ERROR    The five boxing wizards jump.\n\n    # Prints the following to `stderr` (messages at level `INFO` or above):\n\n    examples.lggrs.base: INFO     Jackdaws love my big sphinx.\n    examples.lggrs.area1: INFO     How daft jumping zebras vex.\n    examples.lggrs.area2: WARNING  Jail zesty vixen who grabbed pay.\n    examples.lggrs.area2: ERROR    The five boxing wizards jump.\n\nNotes\n^^^^^\n\n.. [1] https://docs.python.org/2/howto/logging-cookbook.html#multiple-handlers-and-formatters\n.. [2] https://docs.python.org/2/howto/logging-cookbook.html#implementing-structured-logging\n.. [3] https://docs.python.org/2/howto/logging-cookbook.html#using-filters-to-impart-contextual-information\n.. [4] https://docs.python.org/2/howto/logging-cookbook.html#logging-to-multiple-destinations\n\nCommand-line Interface\n~~~~~~~~~~~~~~~~~~~~~~\n\nExamples\n^^^^^^^^\n\n*Basic Usage*\n\n.. code-block:: bash\n\n    gogo [options] <message>\n\n*show help*\n\n.. code-block:: bash\n\n    gogo -h\n\n*CLI usage*\n\n    usage: gogo [options] <message>\n\n    description: Logs a given message\n\n    positional arguments:\n      message               The message to log (defaults to reading from stdin).\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -l LEVEL, --msg-level LEVEL\n                            The level to log the message (default: info).\n                            Must be one of: critical, error, warning, info, debug.\n\n      -n NAME, --name NAME  The logger name (default: pygogo)\n      -D HANDLER, --high-hdlr HANDLER\n                            The high pass log handler (default: stderr).\n                            Must be one of: buffered, email, file, fileobj,\n                            socket, stderr, stdout, syslog, webhook.\n\n      -d HANDLER, --low-hdlr HANDLER\n                            The low pass log handler (default: stdout).\n                            Must be one of: buffered, email, file, fileobj,\n                            socket, stderr, stdout, syslog, webhook.\n\n      -L LEVEL, --high-level LEVEL\n                            Min level to log to the high pass handler\n                            (default: warning).\n                            Must be one of: buffered, email, file, fileobj,\n                            socket, stderr, stdout, syslog, webhook.\n\n      -e LEVEL, --low-level LEVEL\n                            Min level to log to the low pass handler\n                            (default: debug).\n                            Must be one of: buffered, email, file, fileobj,\n                            socket, stderr, stdout, syslog, webhook.\n\n      -F FORMAT, --high-format FORMAT\n                            High pass handler log format (default: basic).\n                            Must be one of: basic, bom, console, csv,\n                            fixed, json, structured.\n\n      -o FORMAT, --low-format FORMAT\n                            Low pass handler log format (default: basic).\n                            Must be one of: basic, bom, console, csv,\n                            fixed, json, structured.\n\n      -m, --monolog         Log high level events only to high pass handler.\n      -f FILENAME, --filename FILENAME\n                            The filename to log to.\n                            Required for the follow handlers: file.\n\n      -s SUBJECT, --subject SUBJECT\n                            The log subject (default: You've got mail).\n                            Used in the follow handlers: email.\n\n      -u URL, --url URL     The log url. Required for the follow handlers: webhook.\n      -H HOST, --host HOST  The host.\n                            Used in the follow handlers: socket and syslog.\n\n      -p NUM, --port NUM    The port number.\n                            Used in the follow handlers: socket and syslog.\n\n      -t, --tcp             Use TCP instead of UDP.\n                            Used in the follow handlers: socket and syslog.\n\n      -g, --get             Use a GET request instead of POST.\n                            Used in the follow handlers: webhook.\n\n      -v, --version         Show version and exit.\n      -V, --verbose         Increase output verbosity.\n\n*Hello World*\n\n.. code-block:: bash\n\n    gogo 'hello world'\n\n*Log based debugging*\n\n.. code-block:: bash\n\n    gogo 'default info level will log to `stdout`'\n    gogo --level=debug \"debug won't log\"\n    gogo --level=debug -V 'verbose will log to `stdout`'\n    gogo --level=info 'info will log to `stdout`'\n    gogo --level=warning 'warning will log to both `stdout` and `stderr`'\n\n    # Prints the following to `stdout`:\n\n    default info level will log to `stdout`\n    verbose will log to `stdout`\n    info will log to `stdout`\n    warning will log to both `stdout` and `stderr`\n\n    # Prints the following to `stderr`:\n\n    warning will log to both `stdout` and `stderr`\n\n*Disable dual logging*\n\n.. code-block:: bash\n\n    gogo --level=debug -V 'debug message'\n    gogo --level=info 'info message'\n    gogo --level=warning -m 'warning message'\n    gogo --level=error -m 'error message'\n    gogo --level=critical -m 'critical message'\n\n    # Prints the following to `stdout.log` (all messages at level `INFO` or below):\n\n    debug message\n    info message\n\n    # Prints the following to `stderr` (messages at level `WARNING` or above):\n\n    warning message\n    error message\n    critical message\n\n*Structured logging*\n\n.. code-block:: bash\n\n    gogo --low-format=json 'log message'\n\n    # Prints the following to `stdout`:\n\n    {\"time\": \"2015-12-19 11:26:53.776\", \"name\": \"pygogo.runner\", \"level\": \"INFO\", \"message\": \"log message\"}\n\n*Alternate handler*\n\n.. code-block:: bash\n\n    gogo --low-hdlr=file 'log message'\n\n    # Prints the following to `pygogo.log` in the current dir (assuming the current dir is named `pygogo`):\n\n    {\"time\": \"2015-12-19 11:26:53.776\", \"name\": \"pygogo.runner\", \"level\": \"INFO\", \"message\": \"log message\"}\n\nInstallation\n------------\n\n(You are using a `virtualenv`_, right?)\n\nAt the command line, install pygogo using either ``pip`` (*recommended*)\n\n.. code-block:: bash\n\n    pip install pygogo\n\nor ``easy_install``\n\n.. code-block:: bash\n\n    easy_install pygogo\n\nPlease see the `installation doc`_ for more details.\n\nProject Structure\n-----------------\n\n.. code-block:: bash\n\n    \u250c\u2500\u2500 bin\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 gogo\n    \u251c\u2500\u2500 docs\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 AUTHORS.rst\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 CHANGES.rst\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 INSTALLATION.rst\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 TODO.rst\n    \u251c\u2500\u2500 helpers\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 check-stage\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 clean\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 pippy\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 srcdist\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 wheel\n    \u251c\u2500\u2500 pygogo\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 formatters.py\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 handlers.py\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 main.py\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 utils.py\n    \u251c\u2500\u2500 tests\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 standard.rc\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 test.py\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 test_main.py\n    \u251c\u2500\u2500 CONTRIBUTING.rst\n    \u251c\u2500\u2500 LICENSE\n    \u251c\u2500\u2500 MANIFEST.in\n    \u251c\u2500\u2500 Makefile\n    \u251c\u2500\u2500 README.rst\n    \u251c\u2500\u2500 dev-requirements.txt\n    \u251c\u2500\u2500 examples.py\n    \u251c\u2500\u2500 manage.py\n    \u251c\u2500\u2500 py2-requirements.txt\n    \u251c\u2500\u2500 setup.cfg\n    \u251c\u2500\u2500 setup.py\n    \u2514\u2500\u2500 tox.ini\n\nDesign Principles\n-----------------\n\n- the built-in ``logging`` module isn't broken so don't reinvent the wheel\n- prefer functions over objects\n- keep the API as simple as possible\n\nStructured Logging\n------------------\n\nThere are severals ways to get structured (machine readable) log messages using pygogo.\nEach method makes a different customization/complexity trade-off which is\noutlined below:\n\nSetup\n~~~~~\n\nThe following methods make use of these variables.\n\n.. code-block:: python\n\n    import pygogo as gogo\n\n    kwargs = {'contextual': True}\n    extra = {'additional': True}\n\nMethods\n~~~~~~~\n\nbasic structured logger\n^^^^^^^^^^^^^^^^^^^^^^^\n\nThe simplest to use. Useful if you don\u2019t need message metadata, i.e., log level,\nlog name, and log time.\n\n.. code-block:: python\n\n    logger = gogo.Gogo('basic').get_structured_logger('base', **kwargs)\n    logger.debug('message', extra=extra)\n\n    # Prints the following to `stdout`:\n\n    {\"additional\": true, \"contextual\": true, \"message\": \"message\"}\n\nstructured formatter\n^^^^^^^^^^^^^^^^^^^^\n\nRequires an additional step of specifying a formatter. Useful if you need\nmessage metadata, i.e., log level, log name, and log time.\n\n.. code-block:: python\n\n    formatter = gogo.formatters.structured_formatter\n    logger = gogo.Gogo('struct', low_formatter=formatter).get_logger(**kwargs)\n    logger.debug('message', extra=extra)\n\n    # Prints the following to `stdout`:\n\n     {\"additional\": true, \"contextual\": true, \"level\": \"DEBUG\", \"message\": \"message\", \"msecs\": 760.5140209197998, \"name\": \"struct.base\", \"time\": \"2015-12-19 14:25:58\"}\n\nJSON formatter\n^^^^^^^^^^^^^^\n\nRequires an additional step of specifying a formatter. Useful if you require\nmillisecond precision in the date. If you are ok with having the milliseconds\nin a separate field, consider the ``structured formatter`` since it supports\nthe ``extra`` keyword and contextual information.\n\n.. code-block:: python\n\n    formatter = gogo.formatters.json_formatter\n    logger = gogo.Gogo('json', low_formatter=formatter).get_logger(**kwargs)\n    logger.debug('message', extra=extra)\n\n    # Prints the following to `stdout`:\n\n    {\"level\": \"DEBUG\", \"message\": \"message\", \"name\": \"json.base\", \"time\": \"2015-12-19 14:25:58.760\"}\n\n    # Note that both `extra` and `kwargs` were ignored\n\ncustom logger\n^^^^^^^^^^^^^\n\nThe most complex and customizable. Useful if you need a custom\nlog or date format not provided by the above methods. However, even though this\nmethod supports the ``extra`` keyword when logging, it is static (unlike the\n``structured logger`` or ``structured formatter``). This is because the log\nformat must be specified at the time of the log's creation and therefore can't\nadapt to log messages with differing ``extra`` parameters.\n\n.. code-block:: python\n\n    logfmt = (\n        '{\"time\": \"%(asctime)s.%(msecs)d\", \"name\": \"%(name)s\", \"level\":'\n        ' \"%(levelname)s\", \"message\": \"%(message)s\", '\n        '\"contextual\": \"%(contextual)s\", \"additional\": \"%(additional)s\"}')\n\n    fmtr = logging.Formatter(logfmt, datefmt=gogo.formatters.DATEFMT)\n    logger = gogo.Gogo('custom', low_formatter=fmtr).get_logger(**kwargs)\n    logger.debug('message', extra=extra)\n\n    # Prints the following to `stdout`:\n\n    {\"additional\": \"True\", \"contextual\": \"True\", \"level\": \"DEBUG\", \"message\": \"message\", \"name\": \"custom.logger\", \"time\": \"2015-12-19 14:25:58.760\"}\n\nSummary\n~~~~~~~\n\nThe following table can help make sense of the different methods:\n\n+-------------------------------+-------------------+----------------------+----------------+---------------+\n|                               | structured logger | structured formatter | json formatter | custom logger |\n+===============================+===================+======================+================+===============+\n| contextual information        | \u2714                 | \u2714                    |                | \u2714             |\n+-------------------------------+-------------------+----------------------+----------------+---------------+\n| ``extra`` param support       | \u2714                 | \u2714                    |                | \u2714             |\n+-------------------------------+-------------------+----------------------+----------------+---------------+\n| dynamic ``extra`` support     | \u2714                 | \u2714                    |                |               |\n+-------------------------------+-------------------+----------------------+----------------+---------------+\n| message metadata              |                   | \u2714                    | \u2714              | \u2714             |\n+-------------------------------+-------------------+----------------------+----------------+---------------+\n| available via the command line|                   | \u2714                    | \u2714              |               |\n+-------------------------------+-------------------+----------------------+----------------+---------------+\n| ``msecs`` field               |                   | \u2714                    |                |               |\n+-------------------------------+-------------------+----------------------+----------------+---------------+\n| milliseconds in time field    |                   |                      | \u2714              | \u2714             |\n+-------------------------------+-------------------+----------------------+----------------+---------------+\n| custom date format            |                   |                      |                | \u2714             |\n+-------------------------------+-------------------+----------------------+----------------+---------------+\n| custom log format             |                   |                      |                | \u2714             |\n+-------------------------------+-------------------+----------------------+----------------+---------------+\n\nFormatters\n----------\n\npygogo has several builtin formatters and also supports any ``logging.Formatter``\ninstance.\n\nExamples\n~~~~~~~~\n\nbuiltin CSV format in python\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    import pygogo as gogo\n\n    formatter = gogo.formatters.csv_formatter\n    gogo.Gogo('csv', low_formatter=formatter).logger.debug('message')\n\n    # Prints the following to `stdout`:\n\n    2015-12-19 17:03:48.99,csv.base,DEBUG,\"message\"\n\n\n``logging.Formatter`` instance in python\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    import logging\n    import pygogo as gogo\n\n    datefmt = gogo.formatters.DATEFMT\n    formatter = logging.Formatter(gogo.formatters.CSV_FORMAT, datefmt=datefmt)\n    gogo.Gogo('csv', low_format=formatter).get_logger('custom').debug('message')\n\n    # Prints the following to `stdout`:\n\n    2015-12-19 17:03:48.99,csv.custom,DEBUG,\"message\"\n\nbuiltin CSV format via CLI\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: bash\n\n    gogo --low-format=csv 'message'\n\n    # Prints the following to `stdout`:\n\n    2015-12-19 15:51:32.16,pygogo.runner,INFO,\"message\"\n\nSummary\n~~~~~~~\n\nThe following table can help make sense of the different builtin formatters:\n\n+------------+------------------------------------------------------------------------------------------------------------------+\n| name       | message                                                                                                          |\n+============+==================================================================================================================+\n| basic      | message                                                                                                          |\n+------------+------------------------------------------------------------------------------------------------------------------+\n| bom        | message                                                                                                          |\n+------------+------------------------------------------------------------------------------------------------------------------+\n| console    | name: INFO     message                                                                                           |\n+------------+------------------------------------------------------------------------------------------------------------------+\n| csv        | 2015-12-19 15:51:32.16,name,INFO,\"message\"                                                                       |\n+------------+------------------------------------------------------------------------------------------------------------------+\n| fixed      | 2015-12-19 15:51:32.16 name INFO     message                                                                     |\n+------------+------------------------------------------------------------------------------------------------------------------+\n| json       | {\"level\": \"INFO\", \"message\": \"message\", \"name\": \"name\", \"time\": \"2015-12-19 15:51:32.16\"}                        |\n+------------+------------------------------------------------------------------------------------------------------------------+\n| structured | {\"level\": \"INFO\", \"message\": \"message\", \"msecs\": 16.5140209197998, \"name\": \"name\", \"time\": \"2015-12-19 15:51:32\"}|\n+------------+------------------------------------------------------------------------------------------------------------------+\n\nHandlers\n--------\n\npygogo has several builtin handlers and also supports any instance from the\n``logging.handlers`` module.\n\nExamples\n~~~~~~~~\n\nbuiltin stdout handler in python\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    import pygogo as gogo\n\n    hdlr = gogo.handlers.stdout_hdlr()\n    gogo.Gogo('stdout', low_hdlr=hdlr).logger.debug('message')\n\n    # Prints 'message' to `stdout`\n\n``logging.StreamHandler`` instance in python\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    import logging\n    import sys\n    import pygogo as gogo\n\n    hdlr = logging.StreamHandler(sys.stdout)\n    gogo.Gogo('stdout', low_hdlr=hdlr).get_logger('custom').debug('message')\n\n    # Prints 'message' to `stdout`\n\nbuiltin CSV format via CLI\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: bash\n\n    gogo --low-hdlr=stdout 'message'\n\n    # Prints 'message' to `stdout`\n\nSummary\n~~~~~~~\n\nThe following table can help make sense of the different builtin handlers:\n\n+------------+------------------------------------------+\n| name       | description                              |\n+============+==========================================+\n| buffered   | Holds log in memory until it reaches its |\n|            | capacity, or it logs a message with a    |\n|            | level at or above the flush level        |\n+------------+------------------------------------------+\n| email      | Emails log to a given email address      |\n+------------+------------------------------------------+\n| file       | Writes log to a given filename           |\n+------------+------------------------------------------+\n| fileobj    | Writes log to a given file-like object   |\n+------------+------------------------------------------+\n| socket     | Writes log to a given network socket     |\n+------------+------------------------------------------+\n| stderr     | Writes log to standard error             |\n+------------+------------------------------------------+\n| stdout     | Writes log to standard output            |\n+------------+------------------------------------------+\n| syslog     | Writes log to syslog                     |\n+------------+------------------------------------------+\n| webhook    | POSTs log to a url                       |\n+------------+------------------------------------------+\n\nScripts\n-------\n\npygogo comes with a built in task manager ``manage.py``\n\nSetup\n~~~~~\n\n.. code-block:: bash\n\n    pip install -r dev-requirements.txt\n\nExamples\n~~~~~~~~\n\n*Run python linter and nose tests*\n\n.. code-block:: bash\n\n    manage lint\n    manage test\n\nContributing\n------------\n\nPlease mimic the coding style/conventions used in this repo.\nIf you add new classes or functions, please add the appropriate doc blocks with\nexamples. Also, make sure the python linter and nose tests pass.\n\nPlease see the `contributing doc`_ for more details.\n\nLicense\n-------\n\npygogo is distributed under the `MIT License`_.\n\n.. |travis| image:: https://img.shields.io/travis/reubano/pygogo/master.svg\n    :target: https://travis-ci.org/reubano/pygogo\n\n.. |versions| image:: https://img.shields.io/pypi/pyversions/pygogo.svg\n    :target: https://pypi.python.org/pypi/pygogo\n\n.. |pypi| image:: https://img.shields.io/pypi/v/pygogo.svg\n    :target: https://pypi.python.org/pypi/pygogo\n\n.. _MIT License: http://opensource.org/licenses/MIT\n.. _logging module: https://docs.python.org/2/library/logging.html\n.. _virtualenv: http://www.virtualenv.org/en/latest/index.html\n.. _contributing doc: https://github.com/reubano/pygogo/blob/master/CONTRIBUTING.rst\n.. _installation doc: https://github.com/reubano/pygogo/blob/master/docs/INSTALLATION.rst\n\n\nChangelog\n=========\n\n%%version%% (unreleased)\n------------------------\n\nNew\n~~~\n\n- Add changelog.\n\n- Add quick logger instantiation.\n\nBugfixes\n~~~~~~~~\n\n- Don\u2019t parse args unless running as script.\n\n- Fix CLI usage text.\n\n- Fix examples.\n\n- Fix packaging scripts.\n\n- Update docs, fix requirements, and remove sphinx.\n\nv0.8.13 (2016-01-01)\n--------------------\n\nBugfixes\n~~~~~~~~\n\n- Fix new year bug.\n\nv0.8.10 (2015-12-30)\n--------------------\n\nBugfixes\n~~~~~~~~\n\n- Fix capitalization.\n\n- Fix optional dependency parsing.\n\n- Fix spacing and remove unneeded marker.\n\nv0.8.9 (2015-12-30)\n-------------------\n\nBugfixes\n~~~~~~~~\n\n- Fix conditional dependency configuration.\n\n- Fix requirements.\n\nv0.8.8 (2015-12-29)\n-------------------\n\nBugfixes\n~~~~~~~~\n\n- Fix project name.\n\nv0.8.7 (2015-12-29)\n-------------------\n\nBugfixes\n~~~~~~~~\n\n- Add pygogo to script path.\n\n- Add pygogo to test path.\n\nv0.8.6 (2015-12-29)\n-------------------\n\nBugfixes\n~~~~~~~~\n\n- Fix doccheck errors.\n\nv0.8.5 (2015-12-29)\n-------------------\n\nBugfixes\n~~~~~~~~\n\n- Add missing helper script.\n\nv0.8.4 (2015-12-29)\n-------------------\n\nBugfixes\n~~~~~~~~\n\n- Fix setup.py (again!)\n\nv0.8.3 (2015-12-29)\n-------------------\n\nBugfixes\n~~~~~~~~\n\n- Fix setup.py.\n\nv0.8.2 (2015-12-29)\n-------------------\n\nBugfixes\n~~~~~~~~\n\n- Fix travis.\n\nv0.8.1 (2015-12-29)\n-------------------\n\nBugfixes\n~~~~~~~~\n\n- Fix tox config and tests.\n\n- Change helper script name.\n\n- Fix spacing.\n\n- Fix makefile error.\n\n- Only clean once.\n\nv0.8.0 (2015-12-25)\n-------------------\n\nBugfixes\n~~~~~~~~\n\n- Fix sphinx.\n\n- Fix tox.\n\n- Fix lint errors.\n\n- Fix tests.\n\nv0.7.0 (2015-12-23)\n-------------------\n\nBugfixes\n~~~~~~~~\n\n- Fix lint error.\n\nv0.6.3 (2015-12-22)\n-------------------\n\nBugfixes\n~~~~~~~~\n\n- Fix pylint errors.\n\n- Fix pylint and make check optional.\n\n- Don\u2019t overwrite fmtrs argument.\n\nv0.5.0 (2015-12-20)\n-------------------\n\nBugfixes\n~~~~~~~~\n\n- Fix duplicate handler/filter bug.\n\n- Fix tests.\n\n- Fix assertion arg orders.\n\nv0.4.0 (2015-12-19)\n-------------------\n\nNew\n~~~\n\n- Add BOM formatter.\n\nBugfixes\n~~~~~~~~\n\n- Fix spelling and spacing.\n\n- Fix lint errors.\n\n- Fix example.\n\n- Fix lint errors and add msecs to formatter.\n\n- Remove \u2018ascitime\u2019 from StructuredFormatter.\n\n- Use port if given.\n\n- Fix docblocks.\n\nv0.2.2 (2015-12-07)\n-------------------\n\nBugfixes\n~~~~~~~~\n\n- Fix typo.\n\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/reubano/pygogo/archive/v0.13.2.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/reubano/pygogo", "keywords": "pygogo,A,Python,logging,library,with,super,powers", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pygogo", "package_url": "https://pypi.org/project/pygogo/", "platform": "MacOS X", "project_url": "https://pypi.org/project/pygogo/", "project_urls": {"Download": "https://github.com/reubano/pygogo/archive/v0.13.2.tar.gz", "Homepage": "https://github.com/reubano/pygogo"}, "release_url": "https://pypi.org/project/pygogo/0.13.2/", "requires_dist": ["black (<20.0,>=19.3b0); extra == 'develop'", "coverage (<5.0.0,>=4.3.4); extra == 'develop'", "docutils (<0.15,>=0.14); extra == 'develop'", "flake8 (<4.0.0,>=3.7.9); extra == 'develop'", "flake8-black (<0.2.0,>=0.1.1); extra == 'develop'", "manage.py (<0.3.0,>=0.2.10); extra == 'develop'", "nose (<2.0.0,>=1.3.7); extra == 'develop'", "pylint (<3.0.0,>=2.5.0); extra == 'develop'", "Pygments (<3.0.0,>=2.0.2); extra == 'develop'", "setuptools (<40.0.0,>=38.7.0); extra == 'develop'", "scripttest (<2.0,>=1.3); extra == 'develop'", "tox (<4.0.0,>=3.14.3); extra == 'develop'", "twine (<4.0.0,>=3.1.1); extra == 'develop'", "wheel (<0.32.0,>=0.29.0); extra == 'develop'", "pkutils (<2.0.0,>=1.0.0); extra == 'develop'"], "requires_python": "", "summary": "A Python logging library with super powers", "version": "0.13.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pygogo-a-python-logger-with-super-powers\">\n<h2>pygogo: a Python logger with super powers</h2>\n<p><a href=\"https://travis-ci.org/reubano/pygogo\" rel=\"nofollow\"><img alt=\"travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2a2ad8b6cc97ea358c1595370633a5e04d70ba7d/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f72657562616e6f2f7079676f676f2f6d61737465722e737667\"></a> <a href=\"https://pypi.python.org/pypi/pygogo\" rel=\"nofollow\"><img alt=\"versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8753a54051b6c5d57c17c2bf19dfc68410387a9c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7079676f676f2e737667\"></a> <a href=\"https://pypi.python.org/pypi/pygogo\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a6869eb6c1bcd9e1b6f63c947a46a028cb1f1049/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079676f676f2e737667\"></a></p>\n<img alt=\"sample pygogo usage\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a060efefb5232b657544f99cdb6170099627e068/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f72657562616e6f2f7079676f676f2f6d61737465722f676f676f2e706e67\" width=\"800\">\n<div id=\"index\">\n<h3>Index</h3>\n<p><a href=\"#introduction\" rel=\"nofollow\">Introduction</a> | <a href=\"#requirements\" rel=\"nofollow\">Requirements</a> | <a href=\"#motivation\" rel=\"nofollow\">Motivation</a> | <a href=\"#usage\" rel=\"nofollow\">Usage</a> | <a href=\"#installation\" rel=\"nofollow\">Installation</a> |\n<a href=\"#project-structure\" rel=\"nofollow\">Project Structure</a> | <a href=\"#design-principles\" rel=\"nofollow\">Design Principles</a> | <a href=\"#structured-logging\" rel=\"nofollow\">Structured Logging</a> |\n<a href=\"#formatters\" rel=\"nofollow\">Formatters</a> | <a href=\"#handlers\" rel=\"nofollow\">Handlers</a> | <a href=\"#scripts\" rel=\"nofollow\">Scripts</a> | <a href=\"#contributing\" rel=\"nofollow\">Contributing</a> | <a href=\"#license\" rel=\"nofollow\">License</a></p>\n</div>\n<div id=\"introduction\">\n<h3>Introduction</h3>\n<p>pygogo is a Python logging <a href=\"#library\" rel=\"nofollow\">library</a> and <a href=\"#command-line-interface\" rel=\"nofollow\">command-line interface</a> with super powers.\npygogo leverages the standard Python <a href=\"https://docs.python.org/2/library/logging.html\" rel=\"nofollow\">logging module</a> under the hood, so there\u2019s\nno need to learn yet-another logging library. The default implementation sends\nall messages to <tt>stdout</tt>, and any messages at level <tt>WARNING</tt> or above also to <tt>stderr</tt>.</p>\n<p>With pygogo, you can</p>\n<ul>\n<li>Log via different handlers depending on the event severity</li>\n<li>Format log messages as plain text, csv, json, and more..</li>\n<li>Send logs to stdout, stderr, file, email, sockets, and more..</li>\n<li>Inter-operate with the standard python logging module</li>\n<li>and much more\u2026</li>\n</ul>\n</div>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<p>pygogo has been tested and is known to work on Python 3.6, 3.7, and 3.8; and PyPy3.6.</p>\n</div>\n<div id=\"motivation\">\n<h3>Motivation</h3>\n<p>The standard logging module is great, but requires a ton of boilerplate before\nyou can do anything really interesting with it. I designed pygogo to provide\nmany useful logging use-cases out of the box. A reimplementation of\n<a href=\"https://docs.python.org/2/howto/logging-cookbook.html#using-loggeradapters-to-impart-contextual-information\" rel=\"nofollow\">Using LoggerAdapters to impart contextual information</a> is shown below:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pygogo</span> <span class=\"k\">as</span> <span class=\"nn\">gogo</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">Gogo</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_structured_logger</span><span class=\"p\">(</span><span class=\"n\">connid</span><span class=\"o\">=</span><span class=\"s1\">'1234'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'log message'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Prints the following to stdout</span>\n\n<span class=\"p\">{</span><span class=\"s2\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"log message\"</span><span class=\"p\">,</span> <span class=\"s2\">\"connid\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1234\"</span><span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>pygogo is intended to be used either directly as a Python <a href=\"#library\" rel=\"nofollow\">library</a> or from\nthe terminal via the <a href=\"#command-line-interface\" rel=\"nofollow\">command-line interface</a>.</p>\n<div id=\"library\">\n<h4>Library</h4>\n<div id=\"examples\">\n<h5>Examples</h5>\n<p><em>Hello World</em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pygogo</span> <span class=\"kn\">import</span> <span class=\"n\">logger</span>\n\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'hello world'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s1\">'hello error'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Prints the following to `stdout`</span>\n\n<span class=\"n\">hello</span> <span class=\"n\">world</span>\n<span class=\"n\">hello</span> <span class=\"n\">error</span>\n\n<span class=\"c1\"># Prints the following to `stderr`</span>\n\n<span class=\"n\">hello</span> <span class=\"n\">error</span>\n</pre>\n<p><em>Log based debugging</em></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pygogo</span> <span class=\"k\">as</span> <span class=\"nn\">gogo</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">Gogo</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">logger</span>\n    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'I will log to `stdout` only if `verbose` is True'</span><span class=\"p\">)</span>\n    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'I will log to `stdout` always'</span><span class=\"p\">)</span>\n    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s1\">'I will log to both `stdout` and `stderr` always'</span><span class=\"p\">)</span>\n</pre>\n<p><em>Disabled dual logging</em></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pygogo</span> <span class=\"k\">as</span> <span class=\"nn\">gogo</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">Gogo</span><span class=\"p\">(</span><span class=\"n\">monolog</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">logger</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'debug message'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'info message'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s1\">'warning message'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s1\">'error message'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">critical</span><span class=\"p\">(</span><span class=\"s1\">'critical message'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Prints the following to `stdout.log` (all messages at level `INFO` or below):</span>\n\n<span class=\"n\">debug</span> <span class=\"n\">message</span>\n<span class=\"n\">info</span> <span class=\"n\">message</span>\n\n<span class=\"c1\"># Prints the following to `stderr` (messages at level `WARNING` or above):</span>\n\n<span class=\"n\">warning</span> <span class=\"n\">message</span>\n<span class=\"n\">error</span> <span class=\"n\">message</span>\n<span class=\"n\">critical</span> <span class=\"n\">message</span>\n</pre>\n<p><em>Custom formatter</em> <a href=\"#id5\" id=\"id1\" rel=\"nofollow\">[1]</a></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pygogo</span> <span class=\"k\">as</span> <span class=\"nn\">gogo</span>\n\n<span class=\"n\">log_format</span> <span class=\"o\">=</span> <span class=\"s1\">'</span><span class=\"si\">%(asctime)s</span><span class=\"s1\"> - </span><span class=\"si\">%(name)s</span><span class=\"s1\"> - </span><span class=\"si\">%(levelname)s</span><span class=\"s1\"> - </span><span class=\"si\">%(message)s</span><span class=\"s1\">'</span>\n<span class=\"n\">formatter</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">Formatter</span><span class=\"p\">(</span><span class=\"n\">log_format</span><span class=\"p\">)</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">Gogo</span><span class=\"p\">(</span>\n    <span class=\"s1\">'examples.fmt'</span><span class=\"p\">,</span>\n    <span class=\"n\">low_hdlr</span><span class=\"o\">=</span><span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">handlers</span><span class=\"o\">.</span><span class=\"n\">file_hdlr</span><span class=\"p\">(</span><span class=\"s1\">'custom_fmt.log'</span><span class=\"p\">),</span>\n    <span class=\"n\">low_formatter</span><span class=\"o\">=</span><span class=\"n\">formatter</span><span class=\"p\">,</span>\n    <span class=\"n\">high_level</span><span class=\"o\">=</span><span class=\"s1\">'error'</span><span class=\"p\">,</span>\n    <span class=\"n\">high_formatter</span><span class=\"o\">=</span><span class=\"n\">formatter</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">logger</span>\n\n<span class=\"c1\"># Now let's log something!</span>\n\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'debug message'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'info message'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"s1\">'warn message'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s1\">'error message'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">critical</span><span class=\"p\">(</span><span class=\"s1\">'critical message'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Prints the following to `custom_fmt.log` (all messages):</span>\n\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">18</span> <span class=\"mi\">18</span><span class=\"p\">:</span><span class=\"mi\">51</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"p\">,</span><span class=\"mi\">416</span> <span class=\"o\">-</span> <span class=\"n\">examples</span><span class=\"o\">.</span><span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">base</span> <span class=\"o\">-</span> <span class=\"n\">DEBUG</span> <span class=\"o\">-</span> <span class=\"n\">debug</span> <span class=\"n\">message</span>\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">18</span> <span class=\"mi\">18</span><span class=\"p\">:</span><span class=\"mi\">51</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"p\">,</span><span class=\"mi\">416</span> <span class=\"o\">-</span> <span class=\"n\">examples</span><span class=\"o\">.</span><span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">base</span> <span class=\"o\">-</span> <span class=\"n\">INFO</span> <span class=\"o\">-</span> <span class=\"n\">info</span> <span class=\"n\">message</span>\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">18</span> <span class=\"mi\">18</span><span class=\"p\">:</span><span class=\"mi\">51</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"p\">,</span><span class=\"mi\">416</span> <span class=\"o\">-</span> <span class=\"n\">examples</span><span class=\"o\">.</span><span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">base</span> <span class=\"o\">-</span> <span class=\"n\">WARNING</span> <span class=\"o\">-</span> <span class=\"n\">warn</span> <span class=\"n\">message</span>\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">18</span> <span class=\"mi\">18</span><span class=\"p\">:</span><span class=\"mi\">51</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"p\">,</span><span class=\"mi\">416</span> <span class=\"o\">-</span> <span class=\"n\">examples</span><span class=\"o\">.</span><span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">base</span> <span class=\"o\">-</span> <span class=\"n\">ERROR</span> <span class=\"o\">-</span> <span class=\"n\">error</span> <span class=\"n\">message</span>\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">18</span> <span class=\"mi\">18</span><span class=\"p\">:</span><span class=\"mi\">51</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"p\">,</span><span class=\"mi\">416</span> <span class=\"o\">-</span> <span class=\"n\">examples</span><span class=\"o\">.</span><span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">base</span> <span class=\"o\">-</span> <span class=\"n\">CRITICAL</span> <span class=\"o\">-</span> <span class=\"n\">critical</span> <span class=\"n\">message</span>\n\n<span class=\"c1\"># Prints the following to `stderr` (messages at level `ERROR` or above):</span>\n\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">18</span> <span class=\"mi\">18</span><span class=\"p\">:</span><span class=\"mi\">51</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"p\">,</span><span class=\"mi\">416</span> <span class=\"o\">-</span> <span class=\"n\">examples</span><span class=\"o\">.</span><span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">base</span> <span class=\"o\">-</span> <span class=\"n\">ERROR</span> <span class=\"o\">-</span> <span class=\"n\">error</span> <span class=\"n\">message</span>\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">18</span> <span class=\"mi\">18</span><span class=\"p\">:</span><span class=\"mi\">51</span><span class=\"p\">:</span><span class=\"mi\">30</span><span class=\"p\">,</span><span class=\"mi\">416</span> <span class=\"o\">-</span> <span class=\"n\">examples</span><span class=\"o\">.</span><span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">base</span> <span class=\"o\">-</span> <span class=\"n\">CRITICAL</span> <span class=\"o\">-</span> <span class=\"n\">critical</span> <span class=\"n\">message</span>\n</pre>\n<p><em>Structured logging</em> <a href=\"#id6\" id=\"id2\" rel=\"nofollow\">[2]</a></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pygogo</span> <span class=\"k\">as</span> <span class=\"nn\">gogo</span>\n\n<span class=\"n\">formatter</span> <span class=\"o\">=</span> <span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">formatters</span><span class=\"o\">.</span><span class=\"n\">structured_formatter</span>\n<span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'low_level'</span><span class=\"p\">:</span> <span class=\"s1\">'info'</span><span class=\"p\">,</span> <span class=\"s1\">'low_formatter'</span><span class=\"p\">:</span> <span class=\"n\">formatter</span><span class=\"p\">}</span>\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">Gogo</span><span class=\"p\">(</span><span class=\"s1\">'examples.structured'</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">logger</span>\n<span class=\"n\">extra</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'set_value'</span><span class=\"p\">:</span> <span class=\"nb\">set</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]),</span> <span class=\"s1\">'snowman'</span><span class=\"p\">:</span> <span class=\"s1\">'\u2603'</span><span class=\"p\">}</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'log message'</span><span class=\"p\">,</span> <span class=\"n\">extra</span><span class=\"o\">=</span><span class=\"n\">extra</span><span class=\"p\">)</span>  <span class=\"c1\"># doctest: +ELLIPSIS</span>\n\n<span class=\"c1\"># Prints the following to `stdout`:</span>\n\n<span class=\"p\">{</span><span class=\"s2\">\"snowman\"</span><span class=\"p\">:</span> <span class=\"s2\">\"</span><span class=\"se\">\\u2603</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"examples.structured.base\"</span><span class=\"p\">,</span> <span class=\"s2\">\"level\"</span><span class=\"p\">:</span> <span class=\"s2\">\"INFO\"</span><span class=\"p\">,</span> <span class=\"s2\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"log message\"</span><span class=\"p\">,</span> <span class=\"s2\">\"time\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2015-12-18 18:52:39\"</span><span class=\"p\">,</span> <span class=\"s2\">\"msecs\"</span><span class=\"p\">:</span> <span class=\"mf\">58.973073959350586</span><span class=\"p\">,</span> <span class=\"s2\">\"set_value\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]}</span>\n</pre>\n<p><em>Using Filters to impart contextual information</em> <a href=\"#id7\" id=\"id3\" rel=\"nofollow\">[3]</a></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pygogo</span> <span class=\"k\">as</span> <span class=\"nn\">gogo</span>\n\n<span class=\"n\">levels</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'DEBUG'</span><span class=\"p\">,</span> <span class=\"s1\">'INFO'</span><span class=\"p\">,</span> <span class=\"s1\">'WARNING'</span><span class=\"p\">,</span> <span class=\"s1\">'ERROR'</span><span class=\"p\">,</span> <span class=\"s1\">'CRITICAL'</span><span class=\"p\">)</span>\n<span class=\"n\">log_frmt</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n   <span class=\"s1\">'</span><span class=\"si\">%(asctime)-4s</span><span class=\"s1\"> </span><span class=\"si\">%(name)-5s</span><span class=\"s1\"> </span><span class=\"si\">%(levelname)-8s</span><span class=\"s1\"> IP: </span><span class=\"si\">%(ip)-15s</span><span class=\"s1\"> User: '</span>\n   <span class=\"s1\">'</span><span class=\"si\">%(user)-8s</span><span class=\"s1\"> </span><span class=\"si\">%(message)s</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n<span class=\"n\">formatter</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">Formatter</span><span class=\"p\">(</span><span class=\"n\">log_frmt</span><span class=\"p\">)</span>\n<span class=\"n\">going</span> <span class=\"o\">=</span> <span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">Gogo</span><span class=\"p\">(</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"n\">low_formatter</span><span class=\"o\">=</span><span class=\"n\">formatter</span><span class=\"p\">)</span>\n<span class=\"n\">a1</span> <span class=\"o\">=</span> <span class=\"n\">going</span><span class=\"o\">.</span><span class=\"n\">get_logger</span><span class=\"p\">(</span><span class=\"s1\">'b.c'</span><span class=\"p\">,</span> <span class=\"n\">ip</span><span class=\"o\">=</span><span class=\"s1\">'123.231.231.123'</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"s1\">'fred'</span><span class=\"p\">)</span>\n<span class=\"n\">a2</span> <span class=\"o\">=</span> <span class=\"n\">going</span><span class=\"o\">.</span><span class=\"n\">get_logger</span><span class=\"p\">(</span><span class=\"s1\">'e.f'</span><span class=\"p\">,</span> <span class=\"n\">ip</span><span class=\"o\">=</span><span class=\"s1\">'192.168.0.1'</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"s1\">'sheila'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Now let's log something!</span>\n\n<span class=\"n\">a1</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'A debug message'</span><span class=\"p\">)</span>\n<span class=\"n\">a1</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'An info </span><span class=\"si\">%s</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"s1\">'message'</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">level</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"p\">,</span> <span class=\"n\">l</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">l</span> <span class=\"ow\">in</span> <span class=\"n\">levels</span><span class=\"p\">]:</span>\n   <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLevelName</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"p\">)</span>\n   <span class=\"n\">a2</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"p\">,</span> <span class=\"s1\">'A </span><span class=\"si\">%s</span><span class=\"s1\"> msg'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Prints the following to `stdout` (all messages):</span>\n\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">19</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">24</span><span class=\"p\">,</span><span class=\"mi\">479</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">c</span> <span class=\"n\">DEBUG</span>    <span class=\"n\">IP</span><span class=\"p\">:</span> <span class=\"mf\">123.231</span><span class=\"o\">.</span><span class=\"mf\">231.123</span> <span class=\"n\">User</span><span class=\"p\">:</span> <span class=\"n\">fred</span>     <span class=\"n\">A</span> <span class=\"n\">debug</span> <span class=\"n\">message</span>\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">19</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">24</span><span class=\"p\">,</span><span class=\"mi\">479</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">c</span> <span class=\"n\">INFO</span>     <span class=\"n\">IP</span><span class=\"p\">:</span> <span class=\"mf\">123.231</span><span class=\"o\">.</span><span class=\"mf\">231.123</span> <span class=\"n\">User</span><span class=\"p\">:</span> <span class=\"n\">fred</span>     <span class=\"n\">An</span> <span class=\"n\">info</span> <span class=\"n\">message</span>\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">19</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">24</span><span class=\"p\">,</span><span class=\"mi\">479</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">f</span> <span class=\"n\">DEBUG</span>    <span class=\"n\">IP</span><span class=\"p\">:</span> <span class=\"mf\">192.168</span><span class=\"o\">.</span><span class=\"mf\">0.1</span>     <span class=\"n\">User</span><span class=\"p\">:</span> <span class=\"n\">sheila</span>   <span class=\"n\">A</span> <span class=\"n\">DEBUG</span> <span class=\"n\">msg</span>\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">19</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">24</span><span class=\"p\">,</span><span class=\"mi\">479</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">f</span> <span class=\"n\">INFO</span>     <span class=\"n\">IP</span><span class=\"p\">:</span> <span class=\"mf\">192.168</span><span class=\"o\">.</span><span class=\"mf\">0.1</span>     <span class=\"n\">User</span><span class=\"p\">:</span> <span class=\"n\">sheila</span>   <span class=\"n\">AN</span> <span class=\"n\">INFO</span> <span class=\"n\">msg</span>\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">19</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">24</span><span class=\"p\">,</span><span class=\"mi\">479</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">f</span> <span class=\"n\">WARNING</span>  <span class=\"n\">IP</span><span class=\"p\">:</span> <span class=\"mf\">192.168</span><span class=\"o\">.</span><span class=\"mf\">0.1</span>     <span class=\"n\">User</span><span class=\"p\">:</span> <span class=\"n\">sheila</span>   <span class=\"n\">A</span> <span class=\"n\">WARNING</span> <span class=\"n\">msg</span>\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">19</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">24</span><span class=\"p\">,</span><span class=\"mi\">479</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">f</span> <span class=\"n\">ERROR</span>    <span class=\"n\">IP</span><span class=\"p\">:</span> <span class=\"mf\">192.168</span><span class=\"o\">.</span><span class=\"mf\">0.1</span>     <span class=\"n\">User</span><span class=\"p\">:</span> <span class=\"n\">sheila</span>   <span class=\"n\">AN</span> <span class=\"n\">ERROR</span> <span class=\"n\">msg</span>\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">19</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">24</span><span class=\"p\">,</span><span class=\"mi\">479</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">f</span> <span class=\"n\">CRITICAL</span> <span class=\"n\">IP</span><span class=\"p\">:</span> <span class=\"mf\">192.168</span><span class=\"o\">.</span><span class=\"mf\">0.1</span>     <span class=\"n\">User</span><span class=\"p\">:</span> <span class=\"n\">sheila</span>   <span class=\"n\">A</span> <span class=\"n\">CRITICAL</span> <span class=\"n\">msg</span>\n\n<span class=\"c1\"># Prints the following to `stderr` (messages at level `WARNING` or above):</span>\n\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">19</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">24</span><span class=\"p\">,</span><span class=\"mi\">479</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">f</span> <span class=\"n\">WARNING</span>  <span class=\"n\">IP</span><span class=\"p\">:</span> <span class=\"mf\">192.168</span><span class=\"o\">.</span><span class=\"mf\">0.1</span>     <span class=\"n\">User</span><span class=\"p\">:</span> <span class=\"n\">sheila</span>   <span class=\"n\">A</span> <span class=\"n\">WARNING</span> <span class=\"n\">msg</span>\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">19</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">24</span><span class=\"p\">,</span><span class=\"mi\">479</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">f</span> <span class=\"n\">ERROR</span>    <span class=\"n\">IP</span><span class=\"p\">:</span> <span class=\"mf\">192.168</span><span class=\"o\">.</span><span class=\"mf\">0.1</span>     <span class=\"n\">User</span><span class=\"p\">:</span> <span class=\"n\">sheila</span>   <span class=\"n\">AN</span> <span class=\"n\">ERROR</span> <span class=\"n\">msg</span>\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">19</span> <span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">24</span><span class=\"p\">,</span><span class=\"mi\">479</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">f</span> <span class=\"n\">CRITICAL</span> <span class=\"n\">IP</span><span class=\"p\">:</span> <span class=\"mf\">192.168</span><span class=\"o\">.</span><span class=\"mf\">0.1</span>     <span class=\"n\">User</span><span class=\"p\">:</span> <span class=\"n\">sheila</span>   <span class=\"n\">A</span> <span class=\"n\">CRITICAL</span> <span class=\"n\">msg</span>\n</pre>\n<p><em>Multiple loggers</em> <a href=\"#id8\" id=\"id4\" rel=\"nofollow\">[4]</a></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pygogo</span> <span class=\"k\">as</span> <span class=\"nn\">gogo</span>\n\n<span class=\"n\">going</span> <span class=\"o\">=</span> <span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">Gogo</span><span class=\"p\">(</span>\n    <span class=\"s1\">'examples.lggrs'</span><span class=\"p\">,</span>\n    <span class=\"n\">low_hdlr</span><span class=\"o\">=</span><span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">handlers</span><span class=\"o\">.</span><span class=\"n\">file_hdlr</span><span class=\"p\">(</span><span class=\"s1\">'multi_lggrs.log'</span><span class=\"p\">),</span>\n    <span class=\"n\">low_formatter</span><span class=\"o\">=</span><span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">formatters</span><span class=\"o\">.</span><span class=\"n\">fixed_formatter</span><span class=\"p\">,</span>\n    <span class=\"n\">high_level</span><span class=\"o\">=</span><span class=\"s1\">'info'</span><span class=\"p\">,</span>\n    <span class=\"n\">high_formatter</span><span class=\"o\">=</span><span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">formatters</span><span class=\"o\">.</span><span class=\"n\">console_formatter</span><span class=\"p\">)</span>\n\n<span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">going</span><span class=\"o\">.</span><span class=\"n\">logger</span>\n<span class=\"n\">logger1</span> <span class=\"o\">=</span> <span class=\"n\">going</span><span class=\"o\">.</span><span class=\"n\">get_logger</span><span class=\"p\">(</span><span class=\"s1\">'area1'</span><span class=\"p\">)</span>\n<span class=\"n\">logger2</span> <span class=\"o\">=</span> <span class=\"n\">going</span><span class=\"o\">.</span><span class=\"n\">get_logger</span><span class=\"p\">(</span><span class=\"s1\">'area2'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Now let's log something!</span>\n\n<span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'Jackdaws love my big sphinx.'</span><span class=\"p\">)</span>\n<span class=\"n\">logger1</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'Quick zephyrs blow, daft Jim.'</span><span class=\"p\">)</span>\n<span class=\"n\">logger1</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'How daft jumping zebras vex.'</span><span class=\"p\">)</span>\n<span class=\"n\">logger2</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s1\">'Jail zesty vixen who grabbed pay.'</span><span class=\"p\">)</span>\n<span class=\"n\">logger2</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s1\">'The five boxing wizards jump.'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Prints the following to `multi_lggrs.log` (all messages):</span>\n\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">18</span> <span class=\"mi\">17</span><span class=\"p\">:</span><span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"mf\">37.417</span> <span class=\"n\">examples</span><span class=\"o\">.</span><span class=\"n\">lggrs</span><span class=\"o\">.</span><span class=\"n\">base</span> <span class=\"n\">INFO</span>     <span class=\"n\">Jackdaws</span> <span class=\"n\">love</span> <span class=\"n\">my</span> <span class=\"n\">big</span> <span class=\"n\">sphinx</span><span class=\"o\">.</span>\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">18</span> <span class=\"mi\">17</span><span class=\"p\">:</span><span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"mf\">37.417</span> <span class=\"n\">examples</span><span class=\"o\">.</span><span class=\"n\">lggrs</span><span class=\"o\">.</span><span class=\"n\">area1</span> <span class=\"n\">DEBUG</span>    <span class=\"n\">Quick</span> <span class=\"n\">zephyrs</span> <span class=\"n\">blow</span><span class=\"p\">,</span> <span class=\"n\">daft</span> <span class=\"n\">Jim</span><span class=\"o\">.</span>\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">18</span> <span class=\"mi\">17</span><span class=\"p\">:</span><span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"mf\">37.417</span> <span class=\"n\">examples</span><span class=\"o\">.</span><span class=\"n\">lggrs</span><span class=\"o\">.</span><span class=\"n\">area1</span> <span class=\"n\">INFO</span>     <span class=\"n\">How</span> <span class=\"n\">daft</span> <span class=\"n\">jumping</span> <span class=\"n\">zebras</span> <span class=\"n\">vex</span><span class=\"o\">.</span>\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">18</span> <span class=\"mi\">17</span><span class=\"p\">:</span><span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"mf\">37.417</span> <span class=\"n\">examples</span><span class=\"o\">.</span><span class=\"n\">lggrs</span><span class=\"o\">.</span><span class=\"n\">area2</span> <span class=\"n\">WARNING</span>  <span class=\"n\">Jail</span> <span class=\"n\">zesty</span> <span class=\"n\">vixen</span> <span class=\"n\">who</span> <span class=\"n\">grabbed</span> <span class=\"n\">pay</span><span class=\"o\">.</span>\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">18</span> <span class=\"mi\">17</span><span class=\"p\">:</span><span class=\"mi\">21</span><span class=\"p\">:</span><span class=\"mf\">37.417</span> <span class=\"n\">examples</span><span class=\"o\">.</span><span class=\"n\">lggrs</span><span class=\"o\">.</span><span class=\"n\">area2</span> <span class=\"n\">ERROR</span>    <span class=\"n\">The</span> <span class=\"n\">five</span> <span class=\"n\">boxing</span> <span class=\"n\">wizards</span> <span class=\"n\">jump</span><span class=\"o\">.</span>\n\n<span class=\"c1\"># Prints the following to `stderr` (messages at level `INFO` or above):</span>\n\n<span class=\"n\">examples</span><span class=\"o\">.</span><span class=\"n\">lggrs</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"p\">:</span> <span class=\"n\">INFO</span>     <span class=\"n\">Jackdaws</span> <span class=\"n\">love</span> <span class=\"n\">my</span> <span class=\"n\">big</span> <span class=\"n\">sphinx</span><span class=\"o\">.</span>\n<span class=\"n\">examples</span><span class=\"o\">.</span><span class=\"n\">lggrs</span><span class=\"o\">.</span><span class=\"n\">area1</span><span class=\"p\">:</span> <span class=\"n\">INFO</span>     <span class=\"n\">How</span> <span class=\"n\">daft</span> <span class=\"n\">jumping</span> <span class=\"n\">zebras</span> <span class=\"n\">vex</span><span class=\"o\">.</span>\n<span class=\"n\">examples</span><span class=\"o\">.</span><span class=\"n\">lggrs</span><span class=\"o\">.</span><span class=\"n\">area2</span><span class=\"p\">:</span> <span class=\"n\">WARNING</span>  <span class=\"n\">Jail</span> <span class=\"n\">zesty</span> <span class=\"n\">vixen</span> <span class=\"n\">who</span> <span class=\"n\">grabbed</span> <span class=\"n\">pay</span><span class=\"o\">.</span>\n<span class=\"n\">examples</span><span class=\"o\">.</span><span class=\"n\">lggrs</span><span class=\"o\">.</span><span class=\"n\">area2</span><span class=\"p\">:</span> <span class=\"n\">ERROR</span>    <span class=\"n\">The</span> <span class=\"n\">five</span> <span class=\"n\">boxing</span> <span class=\"n\">wizards</span> <span class=\"n\">jump</span><span class=\"o\">.</span>\n</pre>\n</div>\n<div id=\"notes\">\n<h5>Notes</h5>\n<table id=\"id5\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id1\" rel=\"nofollow\">[1]</a></td><td><a href=\"https://docs.python.org/2/howto/logging-cookbook.html#multiple-handlers-and-formatters\" rel=\"nofollow\">https://docs.python.org/2/howto/logging-cookbook.html#multiple-handlers-and-formatters</a></td></tr>\n</tbody>\n</table>\n<table id=\"id6\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id2\" rel=\"nofollow\">[2]</a></td><td><a href=\"https://docs.python.org/2/howto/logging-cookbook.html#implementing-structured-logging\" rel=\"nofollow\">https://docs.python.org/2/howto/logging-cookbook.html#implementing-structured-logging</a></td></tr>\n</tbody>\n</table>\n<table id=\"id7\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id3\" rel=\"nofollow\">[3]</a></td><td><a href=\"https://docs.python.org/2/howto/logging-cookbook.html#using-filters-to-impart-contextual-information\" rel=\"nofollow\">https://docs.python.org/2/howto/logging-cookbook.html#using-filters-to-impart-contextual-information</a></td></tr>\n</tbody>\n</table>\n<table id=\"id8\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id4\" rel=\"nofollow\">[4]</a></td><td><a href=\"https://docs.python.org/2/howto/logging-cookbook.html#logging-to-multiple-destinations\" rel=\"nofollow\">https://docs.python.org/2/howto/logging-cookbook.html#logging-to-multiple-destinations</a></td></tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"command-line-interface\">\n<h4>Command-line Interface</h4>\n<h4 id=\"id9\"><span class=\"section-subtitle\">Examples</span></h4>\n<p><em>Basic Usage</em></p>\n<pre>gogo <span class=\"o\">[</span>options<span class=\"o\">]</span> &lt;message&gt;\n</pre>\n<p><em>show help</em></p>\n<pre>gogo -h\n</pre>\n<p><em>CLI usage</em></p>\n<blockquote>\n<p>usage: gogo [options] &lt;message&gt;</p>\n<p>description: Logs a given message</p>\n<dl>\n<dt>positional arguments:</dt>\n<dd>message               The message to log (defaults to reading from stdin).</dd>\n<dt>optional arguments:</dt>\n<dd><table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">-h</span>, <span class=\"option\">--help</span></kbd></td>\n<td>show this help message and exit</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-l <var>LEVEL</var></span>, <span class=\"option\">--msg-level <var>LEVEL</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>The level to log the message (default: info).\nMust be one of: critical, error, warning, info, debug.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-n <var>NAME</var></span>, <span class=\"option\">--name <var>NAME</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>The logger name (default: pygogo)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-D <var>HANDLER</var></span>, <span class=\"option\">--high-hdlr <var>HANDLER</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>The high pass log handler (default: stderr).\nMust be one of: buffered, email, file, fileobj,\nsocket, stderr, stdout, syslog, webhook.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-d <var>HANDLER</var></span>, <span class=\"option\">--low-hdlr <var>HANDLER</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>The low pass log handler (default: stdout).\nMust be one of: buffered, email, file, fileobj,\nsocket, stderr, stdout, syslog, webhook.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-L <var>LEVEL</var></span>, <span class=\"option\">--high-level <var>LEVEL</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Min level to log to the high pass handler\n(default: warning).\nMust be one of: buffered, email, file, fileobj,\nsocket, stderr, stdout, syslog, webhook.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-e <var>LEVEL</var></span>, <span class=\"option\">--low-level <var>LEVEL</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Min level to log to the low pass handler\n(default: debug).\nMust be one of: buffered, email, file, fileobj,\nsocket, stderr, stdout, syslog, webhook.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-F <var>FORMAT</var></span>, <span class=\"option\">--high-format <var>FORMAT</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>High pass handler log format (default: basic).\nMust be one of: basic, bom, console, csv,\nfixed, json, structured.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-o <var>FORMAT</var></span>, <span class=\"option\">--low-format <var>FORMAT</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Low pass handler log format (default: basic).\nMust be one of: basic, bom, console, csv,\nfixed, json, structured.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-m</span>, <span class=\"option\">--monolog</span></kbd></td>\n<td>Log high level events only to high pass handler.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-f <var>FILENAME</var></span>, <span class=\"option\">--filename <var>FILENAME</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>The filename to log to.\nRequired for the follow handlers: file.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-s <var>SUBJECT</var></span>, <span class=\"option\">--subject <var>SUBJECT</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>The log subject (default: You\u2019ve got mail).\nUsed in the follow handlers: email.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-u <var>URL</var></span>, <span class=\"option\">--url <var>URL</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>The log url. Required for the follow handlers: webhook.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-H <var>HOST</var></span>, <span class=\"option\">--host <var>HOST</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>The host.\nUsed in the follow handlers: socket and syslog.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-p <var>NUM</var></span>, <span class=\"option\">--port <var>NUM</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>The port number.\nUsed in the follow handlers: socket and syslog.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-t</span>, <span class=\"option\">--tcp</span></kbd></td>\n<td>Use TCP instead of UDP.\nUsed in the follow handlers: socket and syslog.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-g</span>, <span class=\"option\">--get</span></kbd></td>\n<td>Use a GET request instead of POST.\nUsed in the follow handlers: webhook.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-v</span>, <span class=\"option\">--version</span></kbd></td>\n<td>Show version and exit.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-V</span>, <span class=\"option\">--verbose</span></kbd></td>\n<td>Increase output verbosity.</td></tr>\n</tbody>\n</table>\n</dd>\n</dl>\n</blockquote>\n<p><em>Hello World</em></p>\n<pre>gogo <span class=\"s1\">'hello world'</span>\n</pre>\n<p><em>Log based debugging</em></p>\n<pre>gogo <span class=\"s1\">'default info level will log to `stdout`'</span>\ngogo --level<span class=\"o\">=</span>debug <span class=\"s2\">\"debug won't log\"</span>\ngogo --level<span class=\"o\">=</span>debug -V <span class=\"s1\">'verbose will log to `stdout`'</span>\ngogo --level<span class=\"o\">=</span>info <span class=\"s1\">'info will log to `stdout`'</span>\ngogo --level<span class=\"o\">=</span>warning <span class=\"s1\">'warning will log to both `stdout` and `stderr`'</span>\n\n<span class=\"c1\"># Prints the following to `stdout`:\n</span>\ndefault info level will log to <span class=\"sb\">`</span>stdout<span class=\"sb\">`</span>\nverbose will log to <span class=\"sb\">`</span>stdout<span class=\"sb\">`</span>\ninfo will log to <span class=\"sb\">`</span>stdout<span class=\"sb\">`</span>\nwarning will log to both <span class=\"sb\">`</span>stdout<span class=\"sb\">`</span> and <span class=\"sb\">`</span>stderr<span class=\"sb\">`</span>\n\n<span class=\"c1\"># Prints the following to `stderr`:\n</span>\nwarning will log to both <span class=\"sb\">`</span>stdout<span class=\"sb\">`</span> and <span class=\"sb\">`</span>stderr<span class=\"sb\">`</span>\n</pre>\n<p><em>Disable dual logging</em></p>\n<pre>gogo --level<span class=\"o\">=</span>debug -V <span class=\"s1\">'debug message'</span>\ngogo --level<span class=\"o\">=</span>info <span class=\"s1\">'info message'</span>\ngogo --level<span class=\"o\">=</span>warning -m <span class=\"s1\">'warning message'</span>\ngogo --level<span class=\"o\">=</span>error -m <span class=\"s1\">'error message'</span>\ngogo --level<span class=\"o\">=</span>critical -m <span class=\"s1\">'critical message'</span>\n\n<span class=\"c1\"># Prints the following to `stdout.log` (all messages at level `INFO` or below):\n</span>\ndebug message\ninfo message\n\n<span class=\"c1\"># Prints the following to `stderr` (messages at level `WARNING` or above):\n</span>\nwarning message\nerror message\ncritical message\n</pre>\n<p><em>Structured logging</em></p>\n<pre>gogo --low-format<span class=\"o\">=</span>json <span class=\"s1\">'log message'</span>\n\n<span class=\"c1\"># Prints the following to `stdout`:\n</span>\n<span class=\"o\">{</span><span class=\"s2\">\"time\"</span>: <span class=\"s2\">\"2015-12-19 11:26:53.776\"</span>, <span class=\"s2\">\"name\"</span>: <span class=\"s2\">\"pygogo.runner\"</span>, <span class=\"s2\">\"level\"</span>: <span class=\"s2\">\"INFO\"</span>, <span class=\"s2\">\"message\"</span>: <span class=\"s2\">\"log message\"</span><span class=\"o\">}</span>\n</pre>\n<p><em>Alternate handler</em></p>\n<pre>gogo --low-hdlr<span class=\"o\">=</span>file <span class=\"s1\">'log message'</span>\n\n<span class=\"c1\"># Prints the following to `pygogo.log` in the current dir (assuming the current dir is named `pygogo`):\n</span>\n<span class=\"o\">{</span><span class=\"s2\">\"time\"</span>: <span class=\"s2\">\"2015-12-19 11:26:53.776\"</span>, <span class=\"s2\">\"name\"</span>: <span class=\"s2\">\"pygogo.runner\"</span>, <span class=\"s2\">\"level\"</span>: <span class=\"s2\">\"INFO\"</span>, <span class=\"s2\">\"message\"</span>: <span class=\"s2\">\"log message\"</span><span class=\"o\">}</span>\n</pre>\n</div>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>(You are using a <a href=\"http://www.virtualenv.org/en/latest/index.html\" rel=\"nofollow\">virtualenv</a>, right?)</p>\n<p>At the command line, install pygogo using either <tt>pip</tt> (<em>recommended</em>)</p>\n<pre>pip install pygogo\n</pre>\n<p>or <tt>easy_install</tt></p>\n<pre>easy_install pygogo\n</pre>\n<p>Please see the <a href=\"https://github.com/reubano/pygogo/blob/master/docs/INSTALLATION.rst\" rel=\"nofollow\">installation doc</a> for more details.</p>\n</div>\n<div id=\"project-structure\">\n<h3>Project Structure</h3>\n<pre>\u250c\u2500\u2500 bin\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 gogo\n\u251c\u2500\u2500 docs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 AUTHORS.rst\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 CHANGES.rst\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 INSTALLATION.rst\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 TODO.rst\n\u251c\u2500\u2500 helpers\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 check-stage\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 clean\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 pippy\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 srcdist\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 wheel\n\u251c\u2500\u2500 pygogo\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 formatters.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 handlers.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 main.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 utils.py\n\u251c\u2500\u2500 tests\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 standard.rc\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 test.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 test_main.py\n\u251c\u2500\u2500 CONTRIBUTING.rst\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 MANIFEST.in\n\u251c\u2500\u2500 Makefile\n\u251c\u2500\u2500 README.rst\n\u251c\u2500\u2500 dev-requirements.txt\n\u251c\u2500\u2500 examples.py\n\u251c\u2500\u2500 manage.py\n\u251c\u2500\u2500 py2-requirements.txt\n\u251c\u2500\u2500 setup.cfg\n\u251c\u2500\u2500 setup.py\n\u2514\u2500\u2500 tox.ini\n</pre>\n</div>\n<div id=\"design-principles\">\n<h3>Design Principles</h3>\n<ul>\n<li>the built-in <tt>logging</tt> module isn\u2019t broken so don\u2019t reinvent the wheel</li>\n<li>prefer functions over objects</li>\n<li>keep the API as simple as possible</li>\n</ul>\n</div>\n<div id=\"structured-logging\">\n<h3>Structured Logging</h3>\n<p>There are severals ways to get structured (machine readable) log messages using pygogo.\nEach method makes a different customization/complexity trade-off which is\noutlined below:</p>\n<div id=\"setup\">\n<h4>Setup</h4>\n<p>The following methods make use of these variables.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pygogo</span> <span class=\"k\">as</span> <span class=\"nn\">gogo</span>\n\n<span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'contextual'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n<span class=\"n\">extra</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'additional'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"methods\">\n<h4>Methods</h4>\n<div id=\"basic-structured-logger\">\n<h5>basic structured logger</h5>\n<p>The simplest to use. Useful if you don\u2019t need message metadata, i.e., log level,\nlog name, and log time.</p>\n<pre><span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">Gogo</span><span class=\"p\">(</span><span class=\"s1\">'basic'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_structured_logger</span><span class=\"p\">(</span><span class=\"s1\">'base'</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'message'</span><span class=\"p\">,</span> <span class=\"n\">extra</span><span class=\"o\">=</span><span class=\"n\">extra</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Prints the following to `stdout`:</span>\n\n<span class=\"p\">{</span><span class=\"s2\">\"additional\"</span><span class=\"p\">:</span> <span class=\"n\">true</span><span class=\"p\">,</span> <span class=\"s2\">\"contextual\"</span><span class=\"p\">:</span> <span class=\"n\">true</span><span class=\"p\">,</span> <span class=\"s2\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"message\"</span><span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"structured-formatter\">\n<h5>structured formatter</h5>\n<p>Requires an additional step of specifying a formatter. Useful if you need\nmessage metadata, i.e., log level, log name, and log time.</p>\n<pre><span class=\"n\">formatter</span> <span class=\"o\">=</span> <span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">formatters</span><span class=\"o\">.</span><span class=\"n\">structured_formatter</span>\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">Gogo</span><span class=\"p\">(</span><span class=\"s1\">'struct'</span><span class=\"p\">,</span> <span class=\"n\">low_formatter</span><span class=\"o\">=</span><span class=\"n\">formatter</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_logger</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'message'</span><span class=\"p\">,</span> <span class=\"n\">extra</span><span class=\"o\">=</span><span class=\"n\">extra</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Prints the following to `stdout`:</span>\n\n <span class=\"p\">{</span><span class=\"s2\">\"additional\"</span><span class=\"p\">:</span> <span class=\"n\">true</span><span class=\"p\">,</span> <span class=\"s2\">\"contextual\"</span><span class=\"p\">:</span> <span class=\"n\">true</span><span class=\"p\">,</span> <span class=\"s2\">\"level\"</span><span class=\"p\">:</span> <span class=\"s2\">\"DEBUG\"</span><span class=\"p\">,</span> <span class=\"s2\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"message\"</span><span class=\"p\">,</span> <span class=\"s2\">\"msecs\"</span><span class=\"p\">:</span> <span class=\"mf\">760.5140209197998</span><span class=\"p\">,</span> <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"struct.base\"</span><span class=\"p\">,</span> <span class=\"s2\">\"time\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2015-12-19 14:25:58\"</span><span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"json-formatter\">\n<h5>JSON formatter</h5>\n<p>Requires an additional step of specifying a formatter. Useful if you require\nmillisecond precision in the date. If you are ok with having the milliseconds\nin a separate field, consider the <tt>structured formatter</tt> since it supports\nthe <tt>extra</tt> keyword and contextual information.</p>\n<pre><span class=\"n\">formatter</span> <span class=\"o\">=</span> <span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">formatters</span><span class=\"o\">.</span><span class=\"n\">json_formatter</span>\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">Gogo</span><span class=\"p\">(</span><span class=\"s1\">'json'</span><span class=\"p\">,</span> <span class=\"n\">low_formatter</span><span class=\"o\">=</span><span class=\"n\">formatter</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_logger</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'message'</span><span class=\"p\">,</span> <span class=\"n\">extra</span><span class=\"o\">=</span><span class=\"n\">extra</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Prints the following to `stdout`:</span>\n\n<span class=\"p\">{</span><span class=\"s2\">\"level\"</span><span class=\"p\">:</span> <span class=\"s2\">\"DEBUG\"</span><span class=\"p\">,</span> <span class=\"s2\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"message\"</span><span class=\"p\">,</span> <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"json.base\"</span><span class=\"p\">,</span> <span class=\"s2\">\"time\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2015-12-19 14:25:58.760\"</span><span class=\"p\">}</span>\n\n<span class=\"c1\"># Note that both `extra` and `kwargs` were ignored</span>\n</pre>\n</div>\n<div id=\"custom-logger\">\n<h5>custom logger</h5>\n<p>The most complex and customizable. Useful if you need a custom\nlog or date format not provided by the above methods. However, even though this\nmethod supports the <tt>extra</tt> keyword when logging, it is static (unlike the\n<tt>structured logger</tt> or <tt>structured formatter</tt>). This is because the log\nformat must be specified at the time of the log\u2019s creation and therefore can\u2019t\nadapt to log messages with differing <tt>extra</tt> parameters.</p>\n<pre><span class=\"n\">logfmt</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"s1\">'{\"time\": \"</span><span class=\"si\">%(asctime)s</span><span class=\"s1\">.</span><span class=\"si\">%(msecs)d</span><span class=\"s1\">\", \"name\": \"</span><span class=\"si\">%(name)s</span><span class=\"s1\">\", \"level\":'</span>\n    <span class=\"s1\">' \"</span><span class=\"si\">%(levelname)s</span><span class=\"s1\">\", \"message\": \"</span><span class=\"si\">%(message)s</span><span class=\"s1\">\", '</span>\n    <span class=\"s1\">'\"contextual\": \"</span><span class=\"si\">%(contextual)s</span><span class=\"s1\">\", \"additional\": \"</span><span class=\"si\">%(additional)s</span><span class=\"s1\">\"}'</span><span class=\"p\">)</span>\n\n<span class=\"n\">fmtr</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">Formatter</span><span class=\"p\">(</span><span class=\"n\">logfmt</span><span class=\"p\">,</span> <span class=\"n\">datefmt</span><span class=\"o\">=</span><span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">formatters</span><span class=\"o\">.</span><span class=\"n\">DATEFMT</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">Gogo</span><span class=\"p\">(</span><span class=\"s1\">'custom'</span><span class=\"p\">,</span> <span class=\"n\">low_formatter</span><span class=\"o\">=</span><span class=\"n\">fmtr</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_logger</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'message'</span><span class=\"p\">,</span> <span class=\"n\">extra</span><span class=\"o\">=</span><span class=\"n\">extra</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Prints the following to `stdout`:</span>\n\n<span class=\"p\">{</span><span class=\"s2\">\"additional\"</span><span class=\"p\">:</span> <span class=\"s2\">\"True\"</span><span class=\"p\">,</span> <span class=\"s2\">\"contextual\"</span><span class=\"p\">:</span> <span class=\"s2\">\"True\"</span><span class=\"p\">,</span> <span class=\"s2\">\"level\"</span><span class=\"p\">:</span> <span class=\"s2\">\"DEBUG\"</span><span class=\"p\">,</span> <span class=\"s2\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"message\"</span><span class=\"p\">,</span> <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"custom.logger\"</span><span class=\"p\">,</span> <span class=\"s2\">\"time\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2015-12-19 14:25:58.760\"</span><span class=\"p\">}</span>\n</pre>\n</div>\n</div>\n<div id=\"summary\">\n<h4>Summary</h4>\n<p>The following table can help make sense of the different methods:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>\u00a0</th>\n<th>structured logger</th>\n<th>structured formatter</th>\n<th>json formatter</th>\n<th>custom logger</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>contextual information</td>\n<td>\u2714</td>\n<td>\u2714</td>\n<td>\u00a0</td>\n<td>\u2714</td>\n</tr>\n<tr><td><tt>extra</tt> param support</td>\n<td>\u2714</td>\n<td>\u2714</td>\n<td>\u00a0</td>\n<td>\u2714</td>\n</tr>\n<tr><td>dynamic <tt>extra</tt> support</td>\n<td>\u2714</td>\n<td>\u2714</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>message metadata</td>\n<td>\u00a0</td>\n<td>\u2714</td>\n<td>\u2714</td>\n<td>\u2714</td>\n</tr>\n<tr><td>available via the command line</td>\n<td>\u00a0</td>\n<td>\u2714</td>\n<td>\u2714</td>\n<td>\u00a0</td>\n</tr>\n<tr><td><tt>msecs</tt> field</td>\n<td>\u00a0</td>\n<td>\u2714</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>milliseconds in time field</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u2714</td>\n<td>\u2714</td>\n</tr>\n<tr><td>custom date format</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u2714</td>\n</tr>\n<tr><td>custom log format</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u2714</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"formatters\">\n<h3>Formatters</h3>\n<p>pygogo has several builtin formatters and also supports any <tt>logging.Formatter</tt>\ninstance.</p>\n<div id=\"id10\">\n<h4>Examples</h4>\n<div id=\"builtin-csv-format-in-python\">\n<h5>builtin CSV format in python</h5>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pygogo</span> <span class=\"k\">as</span> <span class=\"nn\">gogo</span>\n\n<span class=\"n\">formatter</span> <span class=\"o\">=</span> <span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">formatters</span><span class=\"o\">.</span><span class=\"n\">csv_formatter</span>\n<span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">Gogo</span><span class=\"p\">(</span><span class=\"s1\">'csv'</span><span class=\"p\">,</span> <span class=\"n\">low_formatter</span><span class=\"o\">=</span><span class=\"n\">formatter</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'message'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Prints the following to `stdout`:</span>\n\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">19</span> <span class=\"mi\">17</span><span class=\"p\">:</span><span class=\"mi\">03</span><span class=\"p\">:</span><span class=\"mf\">48.99</span><span class=\"p\">,</span><span class=\"n\">csv</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"p\">,</span><span class=\"n\">DEBUG</span><span class=\"p\">,</span><span class=\"s2\">\"message\"</span>\n</pre>\n</div>\n<div id=\"logging-formatter-instance-in-python\">\n<h5><tt>logging.Formatter</tt> instance in python</h5>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pygogo</span> <span class=\"k\">as</span> <span class=\"nn\">gogo</span>\n\n<span class=\"n\">datefmt</span> <span class=\"o\">=</span> <span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">formatters</span><span class=\"o\">.</span><span class=\"n\">DATEFMT</span>\n<span class=\"n\">formatter</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">Formatter</span><span class=\"p\">(</span><span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">formatters</span><span class=\"o\">.</span><span class=\"n\">CSV_FORMAT</span><span class=\"p\">,</span> <span class=\"n\">datefmt</span><span class=\"o\">=</span><span class=\"n\">datefmt</span><span class=\"p\">)</span>\n<span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">Gogo</span><span class=\"p\">(</span><span class=\"s1\">'csv'</span><span class=\"p\">,</span> <span class=\"n\">low_format</span><span class=\"o\">=</span><span class=\"n\">formatter</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_logger</span><span class=\"p\">(</span><span class=\"s1\">'custom'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'message'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Prints the following to `stdout`:</span>\n\n<span class=\"mi\">2015</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">19</span> <span class=\"mi\">17</span><span class=\"p\">:</span><span class=\"mi\">03</span><span class=\"p\">:</span><span class=\"mf\">48.99</span><span class=\"p\">,</span><span class=\"n\">csv</span><span class=\"o\">.</span><span class=\"n\">custom</span><span class=\"p\">,</span><span class=\"n\">DEBUG</span><span class=\"p\">,</span><span class=\"s2\">\"message\"</span>\n</pre>\n</div>\n<div id=\"builtin-csv-format-via-cli\">\n<h5>builtin CSV format via CLI</h5>\n<pre>gogo --low-format<span class=\"o\">=</span>csv <span class=\"s1\">'message'</span>\n\n<span class=\"c1\"># Prints the following to `stdout`:\n</span>\n<span class=\"m\">2015</span>-12-19 <span class=\"m\">15</span>:51:32.16,pygogo.runner,INFO,<span class=\"s2\">\"message\"</span>\n</pre>\n</div>\n</div>\n<div id=\"id11\">\n<h4>Summary</h4>\n<p>The following table can help make sense of the different builtin formatters:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>name</th>\n<th>message</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>basic</td>\n<td>message</td>\n</tr>\n<tr><td>bom</td>\n<td>message</td>\n</tr>\n<tr><td>console</td>\n<td>name: INFO     message</td>\n</tr>\n<tr><td>csv</td>\n<td>2015-12-19 15:51:32.16,name,INFO,\u201dmessage\u201d</td>\n</tr>\n<tr><td>fixed</td>\n<td>2015-12-19 15:51:32.16 name INFO     message</td>\n</tr>\n<tr><td>json</td>\n<td>{\u201clevel\u201d: \u201cINFO\u201d, \u201cmessage\u201d: \u201cmessage\u201d, \u201cname\u201d: \u201cname\u201d, \u201ctime\u201d: \u201c2015-12-19 15:51:32.16\u201d}</td>\n</tr>\n<tr><td>structured</td>\n<td>{\u201clevel\u201d: \u201cINFO\u201d, \u201cmessage\u201d: \u201cmessage\u201d, \u201cmsecs\u201d: 16.5140209197998, \u201cname\u201d: \u201cname\u201d, \u201ctime\u201d: \u201c2015-12-19 15:51:32\u201d}</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"handlers\">\n<h3>Handlers</h3>\n<p>pygogo has several builtin handlers and also supports any instance from the\n<tt>logging.handlers</tt> module.</p>\n<div id=\"id12\">\n<h4>Examples</h4>\n<div id=\"builtin-stdout-handler-in-python\">\n<h5>builtin stdout handler in python</h5>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pygogo</span> <span class=\"k\">as</span> <span class=\"nn\">gogo</span>\n\n<span class=\"n\">hdlr</span> <span class=\"o\">=</span> <span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">handlers</span><span class=\"o\">.</span><span class=\"n\">stdout_hdlr</span><span class=\"p\">()</span>\n<span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">Gogo</span><span class=\"p\">(</span><span class=\"s1\">'stdout'</span><span class=\"p\">,</span> <span class=\"n\">low_hdlr</span><span class=\"o\">=</span><span class=\"n\">hdlr</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'message'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Prints 'message' to `stdout`</span>\n</pre>\n</div>\n<div id=\"logging-streamhandler-instance-in-python\">\n<h5><tt>logging.StreamHandler</tt> instance in python</h5>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pygogo</span> <span class=\"k\">as</span> <span class=\"nn\">gogo</span>\n\n<span class=\"n\">hdlr</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">StreamHandler</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">)</span>\n<span class=\"n\">gogo</span><span class=\"o\">.</span><span class=\"n\">Gogo</span><span class=\"p\">(</span><span class=\"s1\">'stdout'</span><span class=\"p\">,</span> <span class=\"n\">low_hdlr</span><span class=\"o\">=</span><span class=\"n\">hdlr</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_logger</span><span class=\"p\">(</span><span class=\"s1\">'custom'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'message'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Prints 'message' to `stdout`</span>\n</pre>\n</div>\n<div id=\"id13\">\n<h5>builtin CSV format via CLI</h5>\n<pre>gogo --low-hdlr<span class=\"o\">=</span>stdout <span class=\"s1\">'message'</span>\n\n<span class=\"c1\"># Prints 'message' to `stdout`</span>\n</pre>\n</div>\n</div>\n<div id=\"id14\">\n<h4>Summary</h4>\n<p>The following table can help make sense of the different builtin handlers:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>name</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>buffered</td>\n<td>Holds log in memory until it reaches its\ncapacity, or it logs a message with a\nlevel at or above the flush level</td>\n</tr>\n<tr><td>email</td>\n<td>Emails log to a given email address</td>\n</tr>\n<tr><td>file</td>\n<td>Writes log to a given filename</td>\n</tr>\n<tr><td>fileobj</td>\n<td>Writes log to a given file-like object</td>\n</tr>\n<tr><td>socket</td>\n<td>Writes log to a given network socket</td>\n</tr>\n<tr><td>stderr</td>\n<td>Writes log to standard error</td>\n</tr>\n<tr><td>stdout</td>\n<td>Writes log to standard output</td>\n</tr>\n<tr><td>syslog</td>\n<td>Writes log to syslog</td>\n</tr>\n<tr><td>webhook</td>\n<td>POSTs log to a url</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"scripts\">\n<h3>Scripts</h3>\n<p>pygogo comes with a built in task manager <tt>manage.py</tt></p>\n<div id=\"id15\">\n<h4>Setup</h4>\n<pre>pip install -r dev-requirements.txt\n</pre>\n</div>\n<div id=\"id16\">\n<h4>Examples</h4>\n<p><em>Run python linter and nose tests</em></p>\n<pre>manage lint\nmanage <span class=\"nb\">test</span>\n</pre>\n</div>\n</div>\n<div id=\"contributing\">\n<h3>Contributing</h3>\n<p>Please mimic the coding style/conventions used in this repo.\nIf you add new classes or functions, please add the appropriate doc blocks with\nexamples. Also, make sure the python linter and nose tests pass.</p>\n<p>Please see the <a href=\"https://github.com/reubano/pygogo/blob/master/CONTRIBUTING.rst\" rel=\"nofollow\">contributing doc</a> for more details.</p>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>pygogo is distributed under the <a href=\"http://opensource.org/licenses/MIT\" rel=\"nofollow\">MIT License</a>.</p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"version-unreleased\">\n<h3>%%version%% (unreleased)</h3>\n<div id=\"new\">\n<h4>New</h4>\n<ul>\n<li>Add changelog.</li>\n<li>Add quick logger instantiation.</li>\n</ul>\n</div>\n<div id=\"bugfixes\">\n<h4>Bugfixes</h4>\n<ul>\n<li>Don\u2019t parse args unless running as script.</li>\n<li>Fix CLI usage text.</li>\n<li>Fix examples.</li>\n<li>Fix packaging scripts.</li>\n<li>Update docs, fix requirements, and remove sphinx.</li>\n</ul>\n</div>\n</div>\n<div id=\"v0-8-13-2016-01-01\">\n<h3>v0.8.13 (2016-01-01)</h3>\n<h3 id=\"id17\"><span class=\"section-subtitle\">Bugfixes</span></h3>\n<ul>\n<li>Fix new year bug.</li>\n</ul>\n</div>\n<div id=\"v0-8-10-2015-12-30\">\n<h3>v0.8.10 (2015-12-30)</h3>\n<h3 id=\"id18\"><span class=\"section-subtitle\">Bugfixes</span></h3>\n<ul>\n<li>Fix capitalization.</li>\n<li>Fix optional dependency parsing.</li>\n<li>Fix spacing and remove unneeded marker.</li>\n</ul>\n</div>\n<div id=\"v0-8-9-2015-12-30\">\n<h3>v0.8.9 (2015-12-30)</h3>\n<h3 id=\"id19\"><span class=\"section-subtitle\">Bugfixes</span></h3>\n<ul>\n<li>Fix conditional dependency configuration.</li>\n<li>Fix requirements.</li>\n</ul>\n</div>\n<div id=\"v0-8-8-2015-12-29\">\n<h3>v0.8.8 (2015-12-29)</h3>\n<h3 id=\"id20\"><span class=\"section-subtitle\">Bugfixes</span></h3>\n<ul>\n<li>Fix project name.</li>\n</ul>\n</div>\n<div id=\"v0-8-7-2015-12-29\">\n<h3>v0.8.7 (2015-12-29)</h3>\n<h3 id=\"id21\"><span class=\"section-subtitle\">Bugfixes</span></h3>\n<ul>\n<li>Add pygogo to script path.</li>\n<li>Add pygogo to test path.</li>\n</ul>\n</div>\n<div id=\"v0-8-6-2015-12-29\">\n<h3>v0.8.6 (2015-12-29)</h3>\n<h3 id=\"id22\"><span class=\"section-subtitle\">Bugfixes</span></h3>\n<ul>\n<li>Fix doccheck errors.</li>\n</ul>\n</div>\n<div id=\"v0-8-5-2015-12-29\">\n<h3>v0.8.5 (2015-12-29)</h3>\n<h3 id=\"id23\"><span class=\"section-subtitle\">Bugfixes</span></h3>\n<ul>\n<li>Add missing helper script.</li>\n</ul>\n</div>\n<div id=\"v0-8-4-2015-12-29\">\n<h3>v0.8.4 (2015-12-29)</h3>\n<h3 id=\"id24\"><span class=\"section-subtitle\">Bugfixes</span></h3>\n<ul>\n<li>Fix setup.py (again!)</li>\n</ul>\n</div>\n<div id=\"v0-8-3-2015-12-29\">\n<h3>v0.8.3 (2015-12-29)</h3>\n<h3 id=\"id25\"><span class=\"section-subtitle\">Bugfixes</span></h3>\n<ul>\n<li>Fix setup.py.</li>\n</ul>\n</div>\n<div id=\"v0-8-2-2015-12-29\">\n<h3>v0.8.2 (2015-12-29)</h3>\n<h3 id=\"id26\"><span class=\"section-subtitle\">Bugfixes</span></h3>\n<ul>\n<li>Fix travis.</li>\n</ul>\n</div>\n<div id=\"v0-8-1-2015-12-29\">\n<h3>v0.8.1 (2015-12-29)</h3>\n<h3 id=\"id27\"><span class=\"section-subtitle\">Bugfixes</span></h3>\n<ul>\n<li>Fix tox config and tests.</li>\n<li>Change helper script name.</li>\n<li>Fix spacing.</li>\n<li>Fix makefile error.</li>\n<li>Only clean once.</li>\n</ul>\n</div>\n<div id=\"v0-8-0-2015-12-25\">\n<h3>v0.8.0 (2015-12-25)</h3>\n<h3 id=\"id28\"><span class=\"section-subtitle\">Bugfixes</span></h3>\n<ul>\n<li>Fix sphinx.</li>\n<li>Fix tox.</li>\n<li>Fix lint errors.</li>\n<li>Fix tests.</li>\n</ul>\n</div>\n<div id=\"v0-7-0-2015-12-23\">\n<h3>v0.7.0 (2015-12-23)</h3>\n<h3 id=\"id29\"><span class=\"section-subtitle\">Bugfixes</span></h3>\n<ul>\n<li>Fix lint error.</li>\n</ul>\n</div>\n<div id=\"v0-6-3-2015-12-22\">\n<h3>v0.6.3 (2015-12-22)</h3>\n<h3 id=\"id30\"><span class=\"section-subtitle\">Bugfixes</span></h3>\n<ul>\n<li>Fix pylint errors.</li>\n<li>Fix pylint and make check optional.</li>\n<li>Don\u2019t overwrite fmtrs argument.</li>\n</ul>\n</div>\n<div id=\"v0-5-0-2015-12-20\">\n<h3>v0.5.0 (2015-12-20)</h3>\n<h3 id=\"id31\"><span class=\"section-subtitle\">Bugfixes</span></h3>\n<ul>\n<li>Fix duplicate handler/filter bug.</li>\n<li>Fix tests.</li>\n<li>Fix assertion arg orders.</li>\n</ul>\n</div>\n<div id=\"v0-4-0-2015-12-19\">\n<h3>v0.4.0 (2015-12-19)</h3>\n<div id=\"id32\">\n<h4>New</h4>\n<ul>\n<li>Add BOM formatter.</li>\n</ul>\n</div>\n<div id=\"id33\">\n<h4>Bugfixes</h4>\n<ul>\n<li>Fix spelling and spacing.</li>\n<li>Fix lint errors.</li>\n<li>Fix example.</li>\n<li>Fix lint errors and add msecs to formatter.</li>\n<li>Remove \u2018ascitime\u2019 from StructuredFormatter.</li>\n<li>Use port if given.</li>\n<li>Fix docblocks.</li>\n</ul>\n</div>\n</div>\n<div id=\"v0-2-2-2015-12-07\">\n<h3>v0.2.2 (2015-12-07)</h3>\n<h3 id=\"id34\"><span class=\"section-subtitle\">Bugfixes</span></h3>\n<ul>\n<li>Fix typo.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7160489, "releases": {"0.10.0": [{"comment_text": "", "digests": {"md5": "a44d8629f71503173dce5a5ee0757548", "sha256": "e67d7bfb9e02b8786e5bdf60e4a1a7d402fe71b95867b98583f9b02e84410db3"}, "downloads": -1, "filename": "pygogo-0.10.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "a44d8629f71503173dce5a5ee0757548", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 29239, "upload_time": "2017-02-28T12:16:59", "upload_time_iso_8601": "2017-02-28T12:16:59.274224Z", "url": "https://files.pythonhosted.org/packages/1f/cd/789ba0528ec5839078267611cfa1bc2be124a09a061a144c53c2b2e0aaeb/pygogo-0.10.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "143fa2e72ab56b2ef16bffaf463cde5b", "sha256": "95411116e41ee95f5d369eebcaffd00a8b43dce2bcf798cad701146dbdd54693"}, "downloads": -1, "filename": "pygogo-0.10.0.tar.gz", "has_sig": true, "md5_digest": "143fa2e72ab56b2ef16bffaf463cde5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44554, "upload_time": "2017-02-28T12:17:04", "upload_time_iso_8601": "2017-02-28T12:17:04.260820Z", "url": "https://files.pythonhosted.org/packages/28/28/a4f38b1d9d8f942fd1dd84ae179ef931284587ba52854b6da82d71cb9394/pygogo-0.10.0.tar.gz", "yanked": false}], "0.11.0": [{"comment_text": "", "digests": {"md5": "192c21485f93434493eeaba526b7db23", "sha256": "f0548d88fdee3920dec9f1baf9dc1c29f6a96a156e82b469970b85d9ecdad14d"}, "downloads": -1, "filename": "pygogo-0.11.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "192c21485f93434493eeaba526b7db23", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21062, "upload_time": "2018-04-05T18:20:36", "upload_time_iso_8601": "2018-04-05T18:20:36.266641Z", "url": "https://files.pythonhosted.org/packages/01/5c/3594d1433f8d07c944533db28bd73a7044f2cf4ff5f23c882acc65d0fba4/pygogo-0.11.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cbc8807e64df5b58a051ebde0d72c2db", "sha256": "4718d324bebd3895c73c958caa445527b025874c85832f33e05c7ed3cc870de6"}, "downloads": -1, "filename": "pygogo-0.11.0.tar.gz", "has_sig": true, "md5_digest": "cbc8807e64df5b58a051ebde0d72c2db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44625, "upload_time": "2018-04-05T18:20:37", "upload_time_iso_8601": "2018-04-05T18:20:37.904600Z", "url": "https://files.pythonhosted.org/packages/85/97/3091f8fb2b9fec86ea4be9807cfb894e2e9e2cc3a89505efd56abaaf6137/pygogo-0.11.0.tar.gz", "yanked": false}], "0.12.0": [{"comment_text": "", "digests": {"md5": "34a66808fd10325d82d067de4cc2975d", "sha256": "595ff156e9fbf0ec6a3180ae2a6f5e5dcd5fe676860810576a49422058505c69"}, "downloads": -1, "filename": "pygogo-0.12.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "34a66808fd10325d82d067de4cc2975d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21048, "upload_time": "2018-04-07T12:53:09", "upload_time_iso_8601": "2018-04-07T12:53:09.525226Z", "url": "https://files.pythonhosted.org/packages/ad/27/d6be8d255a96e3a301771695f8e868a02c082e5c4c61382a0ed23e16a432/pygogo-0.12.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4da9aa2f80ebdb1eb8f1b0b909174881", "sha256": "3e121efba1c202c10df54a84db88e3579741883a47465a4fa318d226d8477f51"}, "downloads": -1, "filename": "pygogo-0.12.0.tar.gz", "has_sig": true, "md5_digest": "4da9aa2f80ebdb1eb8f1b0b909174881", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44660, "upload_time": "2018-04-07T12:53:21", "upload_time_iso_8601": "2018-04-07T12:53:21.760244Z", "url": "https://files.pythonhosted.org/packages/0f/eb/116d9bc06dc0912574154e094fa784af00289ebc890bef66391f6c8762c2/pygogo-0.12.0.tar.gz", "yanked": false}], "0.13.2": [{"comment_text": "", "digests": {"md5": "b8a2208baf5a44eaf8265718983f21f8", "sha256": "3d3b1b0cb8a271e6c51bcf64652369b6d8b59b24aacb5f2090fefc6d313ab100"}, "downloads": -1, "filename": "pygogo-0.13.2-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "b8a2208baf5a44eaf8265718983f21f8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20731, "upload_time": "2020-05-04T00:01:03", "upload_time_iso_8601": "2020-05-04T00:01:03.240784Z", "url": "https://files.pythonhosted.org/packages/d1/e2/f1e86e2882c2d626843103e2fa701969be91594de88aa45f6330b0cb9a5b/pygogo-0.13.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0069199a668b6545b1379d661428927b", "sha256": "73c72e53b80a90c89a6aabe67c9b9972989528e7119e25e071d95fb350ac8052"}, "downloads": -1, "filename": "pygogo-0.13.2.tar.gz", "has_sig": true, "md5_digest": "0069199a668b6545b1379d661428927b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46037, "upload_time": "2020-05-04T00:01:05", "upload_time_iso_8601": "2020-05-04T00:01:05.301225Z", "url": "https://files.pythonhosted.org/packages/be/79/eefbe54944403ed5da456a01554cd275a181f6019aae37ae40a81af86a12/pygogo-0.13.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "ff421b5dfda1d2273f38caf413c39d2b", "sha256": "5641ec56ad5bc5e7a93d901a4d7cfd58e3b49b2f254e7294548e582607790db5"}, "downloads": -1, "filename": "pygogo-0.3.0-py27-none-any.whl", "has_sig": true, "md5_digest": "ff421b5dfda1d2273f38caf413c39d2b", "packagetype": "bdist_wheel", "python_version": "py27", "requires_python": null, "size": 11947, "upload_time": "2015-12-07T15:44:55", "upload_time_iso_8601": "2015-12-07T15:44:55.286751Z", "url": "https://files.pythonhosted.org/packages/bd/9e/74f751a371b2e60cb3bf9dc6c72a1a7318135fe582a8a063903361d40a53/pygogo-0.3.0-py27-none-any.whl", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "319cf38bb5c524f07f5333bcfefb95dc", "sha256": "2cd63435a541caa41834a90716c4fcfdcd4ac92f46b0960e8224f74d7461e648"}, "downloads": -1, "filename": "pygogo-0.8.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "319cf38bb5c524f07f5333bcfefb95dc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20950, "upload_time": "2015-12-29T10:10:45", "upload_time_iso_8601": "2015-12-29T10:10:45.043449Z", "url": "https://files.pythonhosted.org/packages/bc/0a/89a0ae663de292560e0bccd3df90c79d673dfc5c60c1aea454fe4069388f/pygogo-0.8.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ecc32b1faaf61f631ef9e7c02397046d", "sha256": "e974aab0bd59f977c48ab98dfad422a8bdc3fee6edbe18aa6c6949a92a166a98"}, "downloads": -1, "filename": "pygogo-0.8.1.tar.gz", "has_sig": true, "md5_digest": "ecc32b1faaf61f631ef9e7c02397046d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30871, "upload_time": "2015-12-29T10:10:53", "upload_time_iso_8601": "2015-12-29T10:10:53.505061Z", "url": "https://files.pythonhosted.org/packages/57/fc/868f7772ad7ad26af00ed711b1a1682e9ce1ad36dc00c9c38a9e4c0a64b8/pygogo-0.8.1.tar.gz", "yanked": false}], "0.8.10": [{"comment_text": "", "digests": {"md5": "139e8418f8957f9f7536497b65596d29", "sha256": "d7e9335fd91e7e1ccfcb4231ba994e355ac24fe1403ba2e203e47086fbab2305"}, "downloads": -1, "filename": "pygogo-0.8.10-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "139e8418f8957f9f7536497b65596d29", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27615, "upload_time": "2015-12-30T16:09:04", "upload_time_iso_8601": "2015-12-30T16:09:04.223947Z", "url": "https://files.pythonhosted.org/packages/58/72/9a5834e9955cdee047896549a3ba42e862a9a3fb4e4f5dd420227e8444b9/pygogo-0.8.10-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "951575c15f5ec5bc0fcf35f43a8649b0", "sha256": "3ed436d1adc64f35a80550ecfaccbd095c535dce9797fd2a249adae2ad1d1c47"}, "downloads": -1, "filename": "pygogo-0.8.10.tar.gz", "has_sig": true, "md5_digest": "951575c15f5ec5bc0fcf35f43a8649b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39613, "upload_time": "2015-12-30T16:09:10", "upload_time_iso_8601": "2015-12-30T16:09:10.965304Z", "url": "https://files.pythonhosted.org/packages/12/0b/42977870de89f03b7aa04ad1e5fc295d4f6126047dcbe7b2d1e9082c2015/pygogo-0.8.10.tar.gz", "yanked": false}], "0.8.13": [{"comment_text": "", "digests": {"md5": "f874dd9739419e836e842e5bff6b3ea3", "sha256": "d17e853d0818fd8f5326d30c0a2ad29c3d3585a5a083ae7d559ed4e821bf0e19"}, "downloads": -1, "filename": "pygogo-0.8.13-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "f874dd9739419e836e842e5bff6b3ea3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27739, "upload_time": "2016-01-01T10:59:22", "upload_time_iso_8601": "2016-01-01T10:59:22.366261Z", "url": "https://files.pythonhosted.org/packages/9e/4c/85e2f3d93bd9abab4a53013a100a86fa90f7e777fc8b3e9975ee22ea53b7/pygogo-0.8.13-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad63eea6dc723f7eab3f9068f6691e41", "sha256": "345430063f1a66db4f4eb639debf9bfff7a1555b849c362799275ac341f67fc0"}, "downloads": -1, "filename": "pygogo-0.8.13.tar.gz", "has_sig": true, "md5_digest": "ad63eea6dc723f7eab3f9068f6691e41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39828, "upload_time": "2016-01-01T10:59:45", "upload_time_iso_8601": "2016-01-01T10:59:45.034139Z", "url": "https://files.pythonhosted.org/packages/66/05/8dc93320d1758c488b7721757e2fcfa9a6866def31a623753fccc30e6e7b/pygogo-0.8.13.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "b0d7245919a246826f27222e280c6917", "sha256": "2c544af84c376b3794edc9453da088c95dc131e045beaf9af1ee4929dfea3d6e"}, "downloads": -1, "filename": "pygogo-0.8.3-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "b0d7245919a246826f27222e280c6917", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21060, "upload_time": "2015-12-29T10:26:20", "upload_time_iso_8601": "2015-12-29T10:26:20.434042Z", "url": "https://files.pythonhosted.org/packages/45/c8/227001ac5e3150e23999f192c23f00c8d395fd15f7f8c3faa2cf14f5ed33/pygogo-0.8.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cedf89ef4829984d25e7852871466390", "sha256": "3dba25bcd54e9e0ccf68bc1dbf6f598d86fd8f28e8fb737e11e01752d9ab8ea2"}, "downloads": -1, "filename": "pygogo-0.8.3.tar.gz", "has_sig": true, "md5_digest": "cedf89ef4829984d25e7852871466390", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30972, "upload_time": "2015-12-29T10:26:45", "upload_time_iso_8601": "2015-12-29T10:26:45.319806Z", "url": "https://files.pythonhosted.org/packages/a7/8a/a4db583e0befb7c9a5b8c8f23bcac6833d3261e049620c3313e43aa2cc98/pygogo-0.8.3.tar.gz", "yanked": false}], "0.8.7": [{"comment_text": "", "digests": {"md5": "9bb284b7e2e12cc9a630ffd3fe1b188c", "sha256": "5292984b08424b15e827aea21ae8cdbdcc24c4393dc13f94bf266766e83210da"}, "downloads": -1, "filename": "pygogo-0.8.7-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "9bb284b7e2e12cc9a630ffd3fe1b188c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27359, "upload_time": "2015-12-29T11:51:33", "upload_time_iso_8601": "2015-12-29T11:51:33.530978Z", "url": "https://files.pythonhosted.org/packages/78/c4/06640672aa77c35a45411ee97fdbed8dba76cb9ab048bd006967d14af753/pygogo-0.8.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ebe9af6242c06b6744ef5148042c25c", "sha256": "904f10e9008cf056a7a3954b3f5ff1e13a04a363b88dbe10b33def3116330755"}, "downloads": -1, "filename": "pygogo-0.8.7.tar.gz", "has_sig": true, "md5_digest": "2ebe9af6242c06b6744ef5148042c25c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39121, "upload_time": "2015-12-29T11:52:01", "upload_time_iso_8601": "2015-12-29T11:52:01.979657Z", "url": "https://files.pythonhosted.org/packages/04/0d/659f838b369f96f941aed76198c631474314de985e5580c9fef7defe5f7e/pygogo-0.8.7.tar.gz", "yanked": false}], "0.8.8": [{"comment_text": "", "digests": {"md5": "63ecaac08cf8ff50707c5de36c28004a", "sha256": "88a62341136e9cb08da634347bde996c821357abcad5ae8e1b3d95f7b0d46ee7"}, "downloads": -1, "filename": "pygogo-0.8.8-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "63ecaac08cf8ff50707c5de36c28004a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27417, "upload_time": "2015-12-29T16:11:51", "upload_time_iso_8601": "2015-12-29T16:11:51.204985Z", "url": "https://files.pythonhosted.org/packages/2a/c0/287510a1a0b1558af3d64f1d3ce6baa0c251dd5c6739c48112b373606866/pygogo-0.8.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9311a09ce834b26bdd45f50ac8cc203d", "sha256": "a7ae274a94e4cf91fd1938a8c3b412396f31abda70e64d07a005b7304c30b75a"}, "downloads": -1, "filename": "pygogo-0.8.8.tar.gz", "has_sig": true, "md5_digest": "9311a09ce834b26bdd45f50ac8cc203d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39190, "upload_time": "2015-12-29T16:11:58", "upload_time_iso_8601": "2015-12-29T16:11:58.260730Z", "url": "https://files.pythonhosted.org/packages/9e/52/1928bb558981459a18ec3f56891533955a39410a0a8e1f4f3472fc74fc46/pygogo-0.8.8.tar.gz", "yanked": false}], "0.8.9": [{"comment_text": "", "digests": {"md5": "4b7513c82c6a801d24d5e95e6f68c447", "sha256": "e57a883ea51244201c24004a763147501d0924c8d4abacea23ee9299cd5e8039"}, "downloads": -1, "filename": "pygogo-0.8.9-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "4b7513c82c6a801d24d5e95e6f68c447", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27467, "upload_time": "2015-12-30T14:45:24", "upload_time_iso_8601": "2015-12-30T14:45:24.522319Z", "url": "https://files.pythonhosted.org/packages/d1/80/57ebfe93745e504c40e32ec7f96551e7e173289c5ba06d09c84cb3b10d47/pygogo-0.8.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "05fd053a25f8c4e46eaa80a9e4f0cd55", "sha256": "0ba728eb850d6ffb1b384d1663acccd1cd49808720556961e936662fdcb681ba"}, "downloads": -1, "filename": "pygogo-0.8.9.tar.gz", "has_sig": true, "md5_digest": "05fd053a25f8c4e46eaa80a9e4f0cd55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39274, "upload_time": "2015-12-30T14:45:43", "upload_time_iso_8601": "2015-12-30T14:45:43.975574Z", "url": "https://files.pythonhosted.org/packages/ce/12/3adff210943dc05533d19f90a60859e688c7d40d22dbe47d7aabd99141f2/pygogo-0.8.9.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "3151b09aecf26ea8727e7ff5c015024b", "sha256": "9f1e2d70d70798e76b3391f13990a2190f15a900cc89a5a458cfd0b5213a72fb"}, "downloads": -1, "filename": "pygogo-0.9.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "3151b09aecf26ea8727e7ff5c015024b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28778, "upload_time": "2016-07-22T19:24:25", "upload_time_iso_8601": "2016-07-22T19:24:25.020536Z", "url": "https://files.pythonhosted.org/packages/19/23/5a57d70980000321846d6f1cb577e7ad93e138f1eedaca97c43a1324571a/pygogo-0.9.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50c1a52d71595068e13511e9c3d95743", "sha256": "6a47f510082c0d077edf2ce9da00f681424d4790e83167e74497838c7caf8467"}, "downloads": -1, "filename": "pygogo-0.9.0.tar.gz", "has_sig": true, "md5_digest": "50c1a52d71595068e13511e9c3d95743", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44187, "upload_time": "2016-07-22T19:24:30", "upload_time_iso_8601": "2016-07-22T19:24:30.138997Z", "url": "https://files.pythonhosted.org/packages/ca/bc/6d3e8eb8b10569075397eb693aac1de854e59deb8ae9141ab230da14d059/pygogo-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "3e7008498c4787e57b4782de4bbc8c07", "sha256": "b23369460a2035b2d8897852c94fa356d5a785373b85bd409b4e5ef7ef1cd2cc"}, "downloads": -1, "filename": "pygogo-0.9.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "3e7008498c4787e57b4782de4bbc8c07", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28793, "upload_time": "2016-08-20T11:42:54", "upload_time_iso_8601": "2016-08-20T11:42:54.962796Z", "url": "https://files.pythonhosted.org/packages/87/f2/622c790a525ba1924bcdd814e2b830179339bdcd43c3d9ef85ae7bf58874/pygogo-0.9.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3180a56042ebd835b7ac3da4aeb4512b", "sha256": "ea909b7f0653049acc4eb5f3b6ba0a8df042293ec171da0d6bc452f687d0379e"}, "downloads": -1, "filename": "pygogo-0.9.1.tar.gz", "has_sig": true, "md5_digest": "3180a56042ebd835b7ac3da4aeb4512b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44196, "upload_time": "2016-08-20T11:43:01", "upload_time_iso_8601": "2016-08-20T11:43:01.303092Z", "url": "https://files.pythonhosted.org/packages/d8/30/831b7e64864592538ea31e16de7a296a08d9fa338a32811c94c1591c92b8/pygogo-0.9.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b8a2208baf5a44eaf8265718983f21f8", "sha256": "3d3b1b0cb8a271e6c51bcf64652369b6d8b59b24aacb5f2090fefc6d313ab100"}, "downloads": -1, "filename": "pygogo-0.13.2-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "b8a2208baf5a44eaf8265718983f21f8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20731, "upload_time": "2020-05-04T00:01:03", "upload_time_iso_8601": "2020-05-04T00:01:03.240784Z", "url": "https://files.pythonhosted.org/packages/d1/e2/f1e86e2882c2d626843103e2fa701969be91594de88aa45f6330b0cb9a5b/pygogo-0.13.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0069199a668b6545b1379d661428927b", "sha256": "73c72e53b80a90c89a6aabe67c9b9972989528e7119e25e071d95fb350ac8052"}, "downloads": -1, "filename": "pygogo-0.13.2.tar.gz", "has_sig": true, "md5_digest": "0069199a668b6545b1379d661428927b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46037, "upload_time": "2020-05-04T00:01:05", "upload_time_iso_8601": "2020-05-04T00:01:05.301225Z", "url": "https://files.pythonhosted.org/packages/be/79/eefbe54944403ed5da456a01554cd275a181f6019aae37ae40a81af86a12/pygogo-0.13.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:47 2020"}