{"info": {"author": "Jarn AS", "author_email": "info@jarn.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Plone", "Framework :: ZODB", "Framework :: Zope2", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License (GPL)", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Networking :: Monitoring"], "description": "Introduction\n------------\n\nThis package provides munin plugins for monitoring `zc.async`_ queues.\n\nIt uses `gocept.munin`_ for plugin registration and was based on `munin.zope`_. Please refer to its\ndocumentation if you want to write new plugins.\n\n\nPlugins\n-------\n\nCurrently there is 3 plugins available providing:\n\n* Size of the job queue\n\nand\n\n* Started jobs in the poll interval.\n* Successful jobs in the poll interval.\n* Failed jobs in the poll interval\n* Jobs with yet unknown state in the poll interval.\n\nand \n\n* time it took to run the longest successful job\n* time it took to run the shortest successful job\n* time it took to run the longest failed job\n* time it took to run the shortest failed job\n\n\nHow to use it\n-------------\n\n* First include the package in your buildout `instance` slot::\n\n    [instance]\n    ...\n    eggs =\n        ...\n        munin.async\n    zcml =\n        ...\n        munin.async\n\n* To create the pluging helper script you'll also need to include the\n  following, additional section and extend your `parts` definition::\n\n    [buildout]\n    parts =\n        ...\n        munin\n\n    [munin]\n    recipe = zc.recipe.egg\n    eggs = munin.async\n    arguments = http_address='${worker:http-address}', user='${worker:user}'\n\n  The `arguments` option is used to pass configuration values to the generated\n  helper script, which is then used as the actual munin plugin (see below).\n  Any settings for `ip-address`, `http-address`, `port-base` and `user` given\n  in the `instance` section should be repeated here, separated by commas.\n\n    .. |---| unicode:: U+2014  .. em dash\n\n  Please be aware, that the variable names use underscores instead of dashes\n  here |---| the following list shows all supported settings and their\n  respective default values:\n\n  * ip_address='<ip-address>'    ['localhost']\n  * http_address=<http-address>  [8080]\n  * port_base=<port-base>        [0]\n  * user=<user-credentials>      [n.a.]\n\n  Either literal values or references to the `worker` part can be used here,\n  i.e. \"http_address='${worker:http-address}', user='${worker:user}'\".\n  Please note that the resulting line will be verbosely copied into the\n  generated `bin/munin` script, so the extra quoting is required.\n\n* When monitoring more than one worker instance, i.e. in a ZEO setup, separate\n  helper scripts need to be generated.  In order to do so the `scripts`\n  option of `zc.recipe.egg` can be used like so::\n\n    [buildout]\n    parts =\n        ...\n        munin1\n        munin2\n\n    [munin1]\n    recipe = zc.recipe.egg\n    eggs = munin.async\n    scripts = munin=munin1\n    arguments = http_address='${worker1:http-address}', user='${worker1:user}'\n\n    [munin2]\n    recipe = zc.recipe.egg\n    eggs = munin.async\n    scripts = munin=munin2\n    arguments = http_address='${worker2:http-address}', user='${worker2:user}'\n\n  The necessary symlinks can then be created with each of the scripts in turn\n  (see below).  Please note, that in this case you should explicitly provide\n  at least a differing `prefix` argument.\n\n  Now you should be able to call the plugins as follows:\n\n  * http://localhost:8080/@@munin.async.plugins/zcasyncqueuesize to get information on how many jobs completed successfully or failed.\n  * http://localhost:8080/@@munin.async.plugins/zcasyncjobstatistics to get information on how many jobs completed successfully or failed.\n  * http://localhost:8080/@@munin.async.plugins/zcasynctimestatistics to get information on max/min time jobs needed to complete.\n\n  Please note that for security reasons the view requires the `View management\n  screens` permission.\n\n* Next you need to make symlinks from the helper script inside your\n  buildout's `bin/` to the munin plugin directory.  The helper script itself\n  can assist you with this::\n\n    $ bin/munin install /opt/munin/etc/plugins [<prefix>] [<suffix>]\n\n  This will install the necessary symlinks in the given directory using\n  either the provided prefix and suffix or else the hostname and current\n  directory to assemble their names (see below).\n\n  Alternatively, you may also install the desired symlinks yourself::\n\n    $ cd /opt/munin/etc/plugins\n    $ ln -s ~/zope/bin/munin company_zcasyncqueuesize_worker1\n    $ ln -s ~/zope/bin/munin company_zcasyncjobstatistics_worker1\n    $ ln -s ~/zope/bin/munin company_zcasynctimestatistics_worker1\n\n  Here `/opt/munin/etc/plugins` is your munin directory, `~/zope/` is the\n  root directory of your buildout, `company` a placeholder for an arbitrary \n  prefix and `worker1` the name which will be shown in munin.\n\n* Finally configure the plugin in munin (this step can be skipped if you have\n  correctly set up the `arguments` option as described in step 2 above)::\n\n    $ cd /opt/munin/etc/plugin-conf.d/\n    $ vi munin.async.conf\n    ... [company_*_site1]\n    ... env.AUTH myuser:myuser\n    ... env.URL http://localhost:8080/@@munin.async.plugins/%s\n\n  Here `myuser:myuser` are your Zope user credentials and `localhost:8080`\n  your site url.  Please check `munin`_ for more information about plugin\n  configuration.\n\n\nReferences\n----------\n* `zc.async`_ at pypi\n* `munin.zope`_ at pypi\n* `gocept.munin`_ at pypi\n* `munin`_ project\n\n  .. _zc.async: http://pypi.python.org/pypi/zc.async/\n  .. _munin.zope: http://pypi.python.org/pypi/munin.zope/\n  .. _gocept.munin: http://pypi.python.org/pypi/gocept.munin/\n  .. _munin: http://munin.projects.linpro.no/\n\nChangelog\n=========\n\n0.5 - 2011-03-04\n----------------\n\n* Measure the correct queue lengths (not the poll lengths) in the job\n  queue browserview.\n  [mj]\n\n0.4 - 2011-03-04\n----------------\n\n* Corrected a typo in the new plugin graph definition.\n  [mj]\n\n0.3 - 2011-03-04\n----------------\n\n* Add a graph for the job queue size (total of all queues)\n  [mj]\n\n0.2 - 2010-12-14\n----------------\n\n* Initial release to pypi\n  [ggozad]\n\n0.1 - 2010-08-31\n----------------\n\n* Initial release\n  [ggozad, stefan]", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://plone.org/products/munin.async", "keywords": "plone zope munin monitoring zc.async", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "munin.async", "package_url": "https://pypi.org/project/munin.async/", "platform": "Any", "project_url": "https://pypi.org/project/munin.async/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://plone.org/products/munin.async"}, "release_url": "https://pypi.org/project/munin.async/0.5/", "requires_dist": null, "requires_python": null, "summary": "Munin plugins for zc.async.", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>This package provides munin plugins for monitoring <a href=\"http://pypi.python.org/pypi/zc.async/\" rel=\"nofollow\">zc.async</a> queues.</p>\n<p>It uses <a href=\"http://pypi.python.org/pypi/gocept.munin/\" rel=\"nofollow\">gocept.munin</a> for plugin registration and was based on <a href=\"http://pypi.python.org/pypi/munin.zope/\" rel=\"nofollow\">munin.zope</a>. Please refer to its\ndocumentation if you want to write new plugins.</p>\n</div>\n<div id=\"plugins\">\n<h2>Plugins</h2>\n<p>Currently there is 3 plugins available providing:</p>\n<ul>\n<li>Size of the job queue</li>\n</ul>\n<p>and</p>\n<ul>\n<li>Started jobs in the poll interval.</li>\n<li>Successful jobs in the poll interval.</li>\n<li>Failed jobs in the poll interval</li>\n<li>Jobs with yet unknown state in the poll interval.</li>\n</ul>\n<p>and</p>\n<ul>\n<li>time it took to run the longest successful job</li>\n<li>time it took to run the shortest successful job</li>\n<li>time it took to run the longest failed job</li>\n<li>time it took to run the shortest failed job</li>\n</ul>\n</div>\n<div id=\"how-to-use-it\">\n<h2>How to use it</h2>\n<ul>\n<li><p>First include the package in your buildout <cite>instance</cite> slot:</p>\n<pre>[instance]\n...\neggs =\n    ...\n    munin.async\nzcml =\n    ...\n    munin.async\n</pre>\n</li>\n<li><p>To create the pluging helper script you\u2019ll also need to include the\nfollowing, additional section and extend your <cite>parts</cite> definition:</p>\n<pre>[buildout]\nparts =\n    ...\n    munin\n\n[munin]\nrecipe = zc.recipe.egg\neggs = munin.async\narguments = http_address='${worker:http-address}', user='${worker:user}'\n</pre>\n<p>The <cite>arguments</cite> option is used to pass configuration values to the generated\nhelper script, which is then used as the actual munin plugin (see below).\nAny settings for <cite>ip-address</cite>, <cite>http-address</cite>, <cite>port-base</cite> and <cite>user</cite> given\nin the <cite>instance</cite> section should be repeated here, separated by commas.</p>\n<blockquote>\n</blockquote>\n<p>Please be aware, that the variable names use underscores instead of dashes\nhere \u2014 the following list shows all supported settings and their\nrespective default values:</p>\n<ul>\n<li>ip_address=\u2019&lt;ip-address&gt;\u2019    [\u2018localhost\u2019]</li>\n<li>http_address=&lt;http-address&gt;  [8080]</li>\n<li>port_base=&lt;port-base&gt;        [0]</li>\n<li>user=&lt;user-credentials&gt;      [n.a.]</li>\n</ul>\n<p>Either literal values or references to the <cite>worker</cite> part can be used here,\ni.e. \u201chttp_address=\u2019${worker:http-address}\u2019, user=\u2019${worker:user}\u2019\u201d.\nPlease note that the resulting line will be verbosely copied into the\ngenerated <cite>bin/munin</cite> script, so the extra quoting is required.</p>\n</li>\n<li><p>When monitoring more than one worker instance, i.e. in a ZEO setup, separate\nhelper scripts need to be generated.  In order to do so the <cite>scripts</cite>\noption of <cite>zc.recipe.egg</cite> can be used like so:</p>\n<pre>[buildout]\nparts =\n    ...\n    munin1\n    munin2\n\n[munin1]\nrecipe = zc.recipe.egg\neggs = munin.async\nscripts = munin=munin1\narguments = http_address='${worker1:http-address}', user='${worker1:user}'\n\n[munin2]\nrecipe = zc.recipe.egg\neggs = munin.async\nscripts = munin=munin2\narguments = http_address='${worker2:http-address}', user='${worker2:user}'\n</pre>\n<p>The necessary symlinks can then be created with each of the scripts in turn\n(see below).  Please note, that in this case you should explicitly provide\nat least a differing <cite>prefix</cite> argument.</p>\n<p>Now you should be able to call the plugins as follows:</p>\n<ul>\n<li><a href=\"http://localhost:8080/@@munin.async.plugins/zcasyncqueuesize\" rel=\"nofollow\">http://localhost:8080/@@munin.async.plugins/zcasyncqueuesize</a> to get information on how many jobs completed successfully or failed.</li>\n<li><a href=\"http://localhost:8080/@@munin.async.plugins/zcasyncjobstatistics\" rel=\"nofollow\">http://localhost:8080/@@munin.async.plugins/zcasyncjobstatistics</a> to get information on how many jobs completed successfully or failed.</li>\n<li><a href=\"http://localhost:8080/@@munin.async.plugins/zcasynctimestatistics\" rel=\"nofollow\">http://localhost:8080/@@munin.async.plugins/zcasynctimestatistics</a> to get information on max/min time jobs needed to complete.</li>\n</ul>\n<p>Please note that for security reasons the view requires the <cite>View management\nscreens</cite> permission.</p>\n</li>\n<li><p>Next you need to make symlinks from the helper script inside your\nbuildout\u2019s <cite>bin/</cite> to the munin plugin directory.  The helper script itself\ncan assist you with this:</p>\n<pre>$ bin/munin install /opt/munin/etc/plugins [&lt;prefix&gt;] [&lt;suffix&gt;]\n</pre>\n<p>This will install the necessary symlinks in the given directory using\neither the provided prefix and suffix or else the hostname and current\ndirectory to assemble their names (see below).</p>\n<p>Alternatively, you may also install the desired symlinks yourself:</p>\n<pre>$ cd /opt/munin/etc/plugins\n$ ln -s ~/zope/bin/munin company_zcasyncqueuesize_worker1\n$ ln -s ~/zope/bin/munin company_zcasyncjobstatistics_worker1\n$ ln -s ~/zope/bin/munin company_zcasynctimestatistics_worker1\n</pre>\n<p>Here <cite>/opt/munin/etc/plugins</cite> is your munin directory, <cite>~/zope/</cite> is the\nroot directory of your buildout, <cite>company</cite> a placeholder for an arbitrary\nprefix and <cite>worker1</cite> the name which will be shown in munin.</p>\n</li>\n<li><p>Finally configure the plugin in munin (this step can be skipped if you have\ncorrectly set up the <cite>arguments</cite> option as described in step 2 above):</p>\n<pre>$ cd /opt/munin/etc/plugin-conf.d/\n$ vi munin.async.conf\n... [company_*_site1]\n... env.AUTH myuser:myuser\n... env.URL http://localhost:8080/@@munin.async.plugins/%s\n</pre>\n<p>Here <cite>myuser:myuser</cite> are your Zope user credentials and <cite>localhost:8080</cite>\nyour site url.  Please check <a href=\"http://munin.projects.linpro.no/\" rel=\"nofollow\">munin</a> for more information about plugin\nconfiguration.</p>\n</li>\n</ul>\n</div>\n<div id=\"references\">\n<h2>References</h2>\n<ul>\n<li><a href=\"http://pypi.python.org/pypi/zc.async/\" rel=\"nofollow\">zc.async</a> at pypi</li>\n<li><a href=\"http://pypi.python.org/pypi/munin.zope/\" rel=\"nofollow\">munin.zope</a> at pypi</li>\n<li><a href=\"http://pypi.python.org/pypi/gocept.munin/\" rel=\"nofollow\">gocept.munin</a> at pypi</li>\n<li><a href=\"http://munin.projects.linpro.no/\" rel=\"nofollow\">munin</a> project</li>\n</ul>\n<div id=\"changelog\">\n<h3>Changelog</h3>\n</div>\n</div>\n<div id=\"id1\">\n<h2>0.5 - 2011-03-04</h2>\n<ul>\n<li>Measure the correct queue lengths (not the poll lengths) in the job\nqueue browserview.\n[mj]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h2>0.4 - 2011-03-04</h2>\n<ul>\n<li>Corrected a typo in the new plugin graph definition.\n[mj]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h2>0.3 - 2011-03-04</h2>\n<ul>\n<li>Add a graph for the job queue size (total of all queues)\n[mj]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h2>0.2 - 2010-12-14</h2>\n<ul>\n<li>Initial release to pypi\n[ggozad]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h2>0.1 - 2010-08-31</h2>\n<ul>\n<li>Initial release\n[ggozad, stefan]</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 657073, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "9211ecead2b718967ce06ca52743c295", "sha256": "9b95885cbff76838c6ee77a20b6aa7cb17703ebaa1dd62a7a321e584747cfdd5"}, "downloads": -1, "filename": "munin.async-0.2.zip", "has_sig": false, "md5_digest": "9211ecead2b718967ce06ca52743c295", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14616, "upload_time": "2010-12-14T10:38:58", "upload_time_iso_8601": "2010-12-14T10:38:58.404254Z", "url": "https://files.pythonhosted.org/packages/9a/27/a77b54558c6cc31942027853d0bdece0f19ca00435bee48e9054b873e3dd/munin.async-0.2.zip", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "a68e88b5b212e5e41e5a71bd8985f28e", "sha256": "b410c1e3e3cfe4b793bf0d9d40a99e33f5b38a9e9b31260149d72ff139ef4840"}, "downloads": -1, "filename": "munin.async-0.3.zip", "has_sig": false, "md5_digest": "a68e88b5b212e5e41e5a71bd8985f28e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14973, "upload_time": "2011-03-04T13:39:16", "upload_time_iso_8601": "2011-03-04T13:39:16.724131Z", "url": "https://files.pythonhosted.org/packages/d6/fe/3cfb8b374fe3236888c365ad210f1c365b597d8add362a72206a8abba0cb/munin.async-0.3.zip", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "5ee3e68c710e259f28d6265a92696b13", "sha256": "896a2bbc60212b4e7c158e748b2a2c5b1a8657a0c893a1d9b6f7b41553ea3aec"}, "downloads": -1, "filename": "munin.async-0.4.zip", "has_sig": false, "md5_digest": "5ee3e68c710e259f28d6265a92696b13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15059, "upload_time": "2011-03-04T14:28:08", "upload_time_iso_8601": "2011-03-04T14:28:08.219420Z", "url": "https://files.pythonhosted.org/packages/05/66/2a6411c7b7bddad426b1d553892ddc3fc68af9f75949c25c4ba396a11906/munin.async-0.4.zip", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "e5144f5e71fe8a44fc8c008a9392cd6a", "sha256": "81e50b8da5b8f2afe8c0539409684624bd67837d03d6a5786922a6ca48beb295"}, "downloads": -1, "filename": "munin.async-0.5.zip", "has_sig": false, "md5_digest": "e5144f5e71fe8a44fc8c008a9392cd6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15239, "upload_time": "2011-03-04T14:46:51", "upload_time_iso_8601": "2011-03-04T14:46:51.450906Z", "url": "https://files.pythonhosted.org/packages/9d/83/f19accf9fcd1f7cf93be408179e673fb6fedf9b739d81a537c236fbfc3b8/munin.async-0.5.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e5144f5e71fe8a44fc8c008a9392cd6a", "sha256": "81e50b8da5b8f2afe8c0539409684624bd67837d03d6a5786922a6ca48beb295"}, "downloads": -1, "filename": "munin.async-0.5.zip", "has_sig": false, "md5_digest": "e5144f5e71fe8a44fc8c008a9392cd6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15239, "upload_time": "2011-03-04T14:46:51", "upload_time_iso_8601": "2011-03-04T14:46:51.450906Z", "url": "https://files.pythonhosted.org/packages/9d/83/f19accf9fcd1f7cf93be408179e673fb6fedf9b739d81a537c236fbfc3b8/munin.async-0.5.zip", "yanked": false}], "timestamp": "Fri May  8 00:50:16 2020"}