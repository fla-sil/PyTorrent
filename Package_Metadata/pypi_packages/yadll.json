{"info": {"author": "Philippe Chavanne", "author_email": "philippe.chavanne@gmail.com", "bugtrack_url": null, "classifiers": [], "description": ".. image:: https://travis-ci.org/pchavanne/yadll.svg\n    :target: https://travis-ci.org/pchavanne/yadll\n\n.. image:: https://coveralls.io/repos/github/pchavanne/yadll/badge.svg?branch=master\n    :target: https://coveralls.io/github/pchavanne/yadll?branch=master\n\n.. image:: https://img.shields.io/badge/license-MIT-blue.svg\n    :target: https://github.com/pchavanne/yadll/blob/master/LICENSE\n\n.. image:: https://readthedocs.org/projects/yadll/badge/\n    :target: http://yadll.readthedocs.io/en/latest/\n\n\n=====\nYadll\n=====\n\n\n**Y**\\ et **a**\\ nother **d**\\ eep **l**\\ earning **l**\\ ab.\n\nThis is an ultra light deep learning framework written in Python and based on Theano_.\nIt allows you to very quickly start building Deep Learning models and play with toy examples.\n\nIf you are looking for a light deep learning API I would recommend using Lasagne_ or keras_ instead of yadll, both are mature, well documented and contributed projects.\n\nRead the documentation at `Read the doc`_\n\n.. _Theano: https://github.com/Theano/Theano\n.. _`Theano's Deep Learning Tutorials`: http://deeplearning.net/tutorial/contents.html\n.. _Lasagne: https://github.com/Lasagne/Lasagne\n.. _keras: https://github.com/fchollet/keras\n.. _blocks: https://github.com/mila-udem/blocks\n.. _`Read the doc`: http://yadll.readthedocs.io/en/latest/\n\n\nIts main features are:\n\n* **Layers**:\n\n  * Input Layer\n  * Dropout Layer\n  * Pool Layer\n  * Conv Layer:\n\n    * ConvPool Layer\n  * Dense Layer:\n\n    * Logistic Regression\n    * Dropconnect\n    * Unsupervised Layer:\n\n      * Autoencoder (denoising autoencoder)\n      * Restricted Boltzmann Machine\n  * RNN\n  * LSTM\n  * GRU\n\n* **Optimisation**:\n\n  * Sgd\n  * Momentum\n  * Nesterov momentum\n  * Adagrad\n  * Adadelta\n  * Rmsprop\n  * Adam\n  * Adamax\n\n\n\n* **Hyperparameters grid search**\n\nInstallation\n------------\n\n.. code-block:: bash\n\n  git clone git@github.com:pchavanne/yadll.git\n  cd yadll\n  pip install -e .\n\nExample\n-------\n\nDifferent networks tested on mnist:\n\n* Logisitic Regression\n* Multi Layer Perceptron\n* MLP with dropout\n* MLP with dropconnect\n* Conv Pool\n* LeNet-5\n* Autoencoder\n* Denoising Autoencoder\n* Gaussian Denoising Autoencoder\n* Contractive Denoising Autoencoder\n* Stacked Denoising Autoencoder\n* Restricted Boltzmann Machine\n* Deep Belief Network\n* Recurrent Neural Networks\n* Long Short-Term Memory\n* Gated Recurrent unit\n\nget the list of available networks:\n\n.. code-block:: bash\n\n  python mnist_dl.py --network_list\n\n\ntrainning a model for example lenet5:\n\n.. code-block:: bash\n\n  python mnist_dl.py lenet5\n\n\ngrid search on the hyperparameters:\n\n.. code-block:: bash\n\n  python hp_grid_search.py", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pchavanne/yadll", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "yadll", "package_url": "https://pypi.org/project/yadll/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/yadll/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/pchavanne/yadll"}, "release_url": "https://pypi.org/project/yadll/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Yet Another Deep Learning Lab. Ultra light Deep Learning framework based on Theano", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/pchavanne/yadll\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/pchavanne/yadll.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a0dcf096e93c700f1845280272213ce33ea53e0f/68747470733a2f2f7472617669732d63692e6f72672f7063686176616e6e652f7961646c6c2e737667\"></a>\n<a href=\"https://coveralls.io/github/pchavanne/yadll?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/pchavanne/yadll/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/44a3ac1892292413387e02c17c3836eccc30c3d3/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f7063686176616e6e652f7961646c6c2f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/pchavanne/yadll/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/license-MIT-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c88fab50b4a1dc0cd91faeb7ba5654d56e380260/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667\"></a>\n<a href=\"http://yadll.readthedocs.io/en/latest/\" rel=\"nofollow\"><img alt=\"https://readthedocs.org/projects/yadll/badge/\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/95223987cb26edceda29d4ef52e398336a0285db/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7961646c6c2f62616467652f\"></a>\n<div id=\"yadll\">\n<h2>Yadll</h2>\n<p><strong>Y</strong>et <strong>a</strong>nother <strong>d</strong>eep <strong>l</strong>earning <strong>l</strong>ab.</p>\n<p>This is an ultra light deep learning framework written in Python and based on <a href=\"https://github.com/Theano/Theano\" rel=\"nofollow\">Theano</a>.\nIt allows you to very quickly start building Deep Learning models and play with toy examples.</p>\n<p>If you are looking for a light deep learning API I would recommend using <a href=\"https://github.com/Lasagne/Lasagne\" rel=\"nofollow\">Lasagne</a> or <a href=\"https://github.com/fchollet/keras\" rel=\"nofollow\">keras</a> instead of yadll, both are mature, well documented and contributed projects.</p>\n<p>Read the documentation at <a href=\"http://yadll.readthedocs.io/en/latest/\" rel=\"nofollow\">Read the doc</a></p>\n<p>Its main features are:</p>\n<ul>\n<li><strong>Layers</strong>:<ul>\n<li>Input Layer</li>\n<li>Dropout Layer</li>\n<li>Pool Layer</li>\n<li>Conv Layer:<ul>\n<li>ConvPool Layer</li>\n</ul>\n</li>\n<li>Dense Layer:<ul>\n<li>Logistic Regression</li>\n<li>Dropconnect</li>\n<li>Unsupervised Layer:<ul>\n<li>Autoencoder (denoising autoencoder)</li>\n<li>Restricted Boltzmann Machine</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>RNN</li>\n<li>LSTM</li>\n<li>GRU</li>\n</ul>\n</li>\n<li><strong>Optimisation</strong>:<ul>\n<li>Sgd</li>\n<li>Momentum</li>\n<li>Nesterov momentum</li>\n<li>Adagrad</li>\n<li>Adadelta</li>\n<li>Rmsprop</li>\n<li>Adam</li>\n<li>Adamax</li>\n</ul>\n</li>\n<li><strong>Hyperparameters grid search</strong></li>\n</ul>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>git clone git@github.com:pchavanne/yadll.git\n<span class=\"nb\">cd</span> yadll\npip install -e .\n</pre>\n</div>\n<div id=\"example\">\n<h3>Example</h3>\n<p>Different networks tested on mnist:</p>\n<ul>\n<li>Logisitic Regression</li>\n<li>Multi Layer Perceptron</li>\n<li>MLP with dropout</li>\n<li>MLP with dropconnect</li>\n<li>Conv Pool</li>\n<li>LeNet-5</li>\n<li>Autoencoder</li>\n<li>Denoising Autoencoder</li>\n<li>Gaussian Denoising Autoencoder</li>\n<li>Contractive Denoising Autoencoder</li>\n<li>Stacked Denoising Autoencoder</li>\n<li>Restricted Boltzmann Machine</li>\n<li>Deep Belief Network</li>\n<li>Recurrent Neural Networks</li>\n<li>Long Short-Term Memory</li>\n<li>Gated Recurrent unit</li>\n</ul>\n<p>get the list of available networks:</p>\n<pre>python mnist_dl.py --network_list\n</pre>\n<p>trainning a model for example lenet5:</p>\n<pre>python mnist_dl.py lenet5\n</pre>\n<p>grid search on the hyperparameters:</p>\n<pre>python hp_grid_search.py\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2893469, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "29ecf4089dcddcb00d79d715bcd5a843", "sha256": "f5ef1c4b49e9395098797bfe19c3f962e21894292143fd04207412a41b5b99d2"}, "downloads": -1, "filename": "yadll-0.0.1.tar.gz", "has_sig": false, "md5_digest": "29ecf4089dcddcb00d79d715bcd5a843", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48884, "upload_time": "2017-05-23T15:06:26", "upload_time_iso_8601": "2017-05-23T15:06:26.939215Z", "url": "https://files.pythonhosted.org/packages/67/85/ae7098967c3fac24ed3daf5c2c595af412ea1fc24d30f7005b60bf9a4618/yadll-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "29ecf4089dcddcb00d79d715bcd5a843", "sha256": "f5ef1c4b49e9395098797bfe19c3f962e21894292143fd04207412a41b5b99d2"}, "downloads": -1, "filename": "yadll-0.0.1.tar.gz", "has_sig": false, "md5_digest": "29ecf4089dcddcb00d79d715bcd5a843", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48884, "upload_time": "2017-05-23T15:06:26", "upload_time_iso_8601": "2017-05-23T15:06:26.939215Z", "url": "https://files.pythonhosted.org/packages/67/85/ae7098967c3fac24ed3daf5c2c595af412ea1fc24d30f7005b60bf9a4618/yadll-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:23:45 2020"}