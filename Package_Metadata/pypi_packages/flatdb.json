{"info": {"author": "James Socol", "author_email": "james@todaysmeet.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7"], "description": "======\nFlatDB\n======\n\n\nFlatDB is a thin HTTP wrapper around LevelDB. LevelDB is a simple,\npersistent key-value store.\n\n\nAPI\n===\n\nThere are three endpoints. Each accepts multiple values at a time. All\nuse HTTP GET. (This is not a RESTful interface.)\n\n\n``/get``\n--------\n\n::\n\n    GET /get?key=foo&key=bar HTTP/1.1\n\nGet one or more values from the database. The response will be a JSON\nobject with a key for each ``key`` found in the database.\n\n\n``/getrange``\n-------------\n\n::\n\n    GET /getrange?from=from_key HTTP/1.1\n\nGet a range starting at ``from_key``.\n\n\n``/put``\n--------\n\n::\n\n    GET /put?foo=bar&baz=qux HTTP/1.1\n\nStore one or more values in the database. If multiple key/value pairs\nare specified, they will be written atomically as a batch. If the write\nsucceeds, the return status will be 201. If the write fails, it will\nnot.\n\n\n``/delete``\n-----------\n\n::\n\n    GET /delete?key=foo&key=baz HTTP/1.1\n\nDelete one or more keys from the database. If multiple keys are\nspecified, they will be deleted atomically as a batch. If the delete\nsucceeeds, the return status will be 200.\n\n\nWhy FlatDB?\n===========\n\n`LevelDB <http://leveldb.googlecode.com/svn/trunk/doc/index.html>`_ is\nan ideal solution for a persistent, fast key-value store. (RocksDB is an\nalternative from Facebook that has a lot in common, but is also very\nnew.) Since LevelDB (and RocksDB) is a library-level data store, FlatDB\nprovides a simple, service-oriented interface to it.\n\nOther projects, like RevelDB and the Python leveldb-server package,\nprovide similar functionality, but:\n\n* RevelDB barely built and then segfaulted on startup.\n* leveldb-server is weird and tornadoy and undocumented.\n\n\nRunning FlatDB\n==============\n\nFlatDB installs two executable scripts: ``flatdb`` and ``flatdb-dev``.\n\n::\n\n    $ flatdb -h\n    usage: flatdb [-h] [-d] [-p PORT] [-b DATABASE] [-H HOST]\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -d, --debug\n      -p PORT, --port PORT\n      -b DATABASE, --database DATABASE\n      -H HOST, --host HOST\n\n``--port``:\n    Port to listen on. (``7532``)\n``--host``:\n    Address to bind to. (``127.0.0.1``)\n``--database``:\n    Path to a LevelDB (will be created if it doesn't exist).\n\n``flatdb`` runs a `gevent <http://gevent.org/>`_ server. ``flatdb-dev``\nruns the built-in Flask server.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/todaysmeet/flatdb", "keywords": null, "license": "Apache Software License", "maintainer": null, "maintainer_email": null, "name": "flatdb", "package_url": "https://pypi.org/project/flatdb/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/flatdb/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/todaysmeet/flatdb"}, "release_url": "https://pypi.org/project/flatdb/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "HTTP access to a LevelDB.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>FlatDB is a thin HTTP wrapper around LevelDB. LevelDB is a simple,\npersistent key-value store.</p>\n<div id=\"api\">\n<h2>API</h2>\n<p>There are three endpoints. Each accepts multiple values at a time. All\nuse HTTP GET. (This is not a RESTful interface.)</p>\n<div id=\"get\">\n<h3><tt>/get</tt></h3>\n<pre>GET /get?key=foo&amp;key=bar HTTP/1.1\n</pre>\n<p>Get one or more values from the database. The response will be a JSON\nobject with a key for each <tt>key</tt> found in the database.</p>\n</div>\n<div id=\"getrange\">\n<h3><tt>/getrange</tt></h3>\n<pre>GET /getrange?from=from_key HTTP/1.1\n</pre>\n<p>Get a range starting at <tt>from_key</tt>.</p>\n</div>\n<div id=\"put\">\n<h3><tt>/put</tt></h3>\n<pre>GET /put?foo=bar&amp;baz=qux HTTP/1.1\n</pre>\n<p>Store one or more values in the database. If multiple key/value pairs\nare specified, they will be written atomically as a batch. If the write\nsucceeds, the return status will be 201. If the write fails, it will\nnot.</p>\n</div>\n<div id=\"delete\">\n<h3><tt>/delete</tt></h3>\n<pre>GET /delete?key=foo&amp;key=baz HTTP/1.1\n</pre>\n<p>Delete one or more keys from the database. If multiple keys are\nspecified, they will be deleted atomically as a batch. If the delete\nsucceeeds, the return status will be 200.</p>\n</div>\n</div>\n<div id=\"why-flatdb\">\n<h2>Why FlatDB?</h2>\n<p><a href=\"http://leveldb.googlecode.com/svn/trunk/doc/index.html\" rel=\"nofollow\">LevelDB</a> is\nan ideal solution for a persistent, fast key-value store. (RocksDB is an\nalternative from Facebook that has a lot in common, but is also very\nnew.) Since LevelDB (and RocksDB) is a library-level data store, FlatDB\nprovides a simple, service-oriented interface to it.</p>\n<p>Other projects, like RevelDB and the Python leveldb-server package,\nprovide similar functionality, but:</p>\n<ul>\n<li>RevelDB barely built and then segfaulted on startup.</li>\n<li>leveldb-server is weird and tornadoy and undocumented.</li>\n</ul>\n</div>\n<div id=\"running-flatdb\">\n<h2>Running FlatDB</h2>\n<p>FlatDB installs two executable scripts: <tt>flatdb</tt> and <tt><span class=\"pre\">flatdb-dev</span></tt>.</p>\n<pre>$ flatdb -h\nusage: flatdb [-h] [-d] [-p PORT] [-b DATABASE] [-H HOST]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -d, --debug\n  -p PORT, --port PORT\n  -b DATABASE, --database DATABASE\n  -H HOST, --host HOST\n</pre>\n<dl>\n<dt><tt><span class=\"pre\">--port</span></tt>:</dt>\n<dd>Port to listen on. (<tt>7532</tt>)</dd>\n<dt><tt><span class=\"pre\">--host</span></tt>:</dt>\n<dd>Address to bind to. (<tt>127.0.0.1</tt>)</dd>\n<dt><tt><span class=\"pre\">--database</span></tt>:</dt>\n<dd>Path to a LevelDB (will be created if it doesn\u2019t exist).</dd>\n</dl>\n<p><tt>flatdb</tt> runs a <a href=\"http://gevent.org/\" rel=\"nofollow\">gevent</a> server. <tt><span class=\"pre\">flatdb-dev</span></tt>\nruns the built-in Flask server.</p>\n</div>\n\n          </div>"}, "last_serial": 1387973, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "09e955480a0d0bddda49b11e2b0f0626", "sha256": "15cd2f1e0bc804113de902e8970ad7c2ac864fc0e84ceb6a3910d7a146eb0b27"}, "downloads": -1, "filename": "flatdb-0.1.0.tar.gz", "has_sig": false, "md5_digest": "09e955480a0d0bddda49b11e2b0f0626", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3521, "upload_time": "2015-01-19T15:25:53", "upload_time_iso_8601": "2015-01-19T15:25:53.969650Z", "url": "https://files.pythonhosted.org/packages/f5/82/9fbaf0e408311dad474747de7106d7a9c308cd01ec03dc3af0f769e3e7d0/flatdb-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "09e955480a0d0bddda49b11e2b0f0626", "sha256": "15cd2f1e0bc804113de902e8970ad7c2ac864fc0e84ceb6a3910d7a146eb0b27"}, "downloads": -1, "filename": "flatdb-0.1.0.tar.gz", "has_sig": false, "md5_digest": "09e955480a0d0bddda49b11e2b0f0626", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3521, "upload_time": "2015-01-19T15:25:53", "upload_time_iso_8601": "2015-01-19T15:25:53.969650Z", "url": "https://files.pythonhosted.org/packages/f5/82/9fbaf0e408311dad474747de7106d7a9c308cd01ec03dc3af0f769e3e7d0/flatdb-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:04 2020"}