{"info": {"author": "Arto Nyk\u00e4nen", "author_email": "arto.nykanen@digia.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Plugins", "Environment :: Web Environment", "Framework :: Trac", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python"], "description": "Description\n===========\n\nTracKanbanBoard is a Trac wiki macro for managing tickets with agile Kanban method. Add KanbanBoard macro to wiki page and use it to prioritize and manage tickets in the project.\n\nMain features:\n\n- Define board columns and how they map to ticket states\n- Change ticket state by dragging tickets on the board\n- Add existing tickets to board by drag-and-dropping ticket links\n- Create new tickets directly from board\n- View and modify ticket fields (summary, description, etc.) and add comments from ticket detail dialog\n- Define what ticket fields are visible on ticket detail dialog\n\nInstallation\n============\n\n#. Clone the repository::\n\n    git clone https://projects.developer.nokia.com/git/TracKanbanBoard.git trackanbanboard\n\n#. Run setup script::\n\n    cd trackanbanboard\n    python setup.py install\n\n#. Enable component in Trac configuration::\n\n    [components]\n    trackanbanboard.* = enabled\n\n#. Create/modify wiki page and put `KanbanBoard` processor in it. Empty data will give an error but also the detailed usage instructions::\n\n    This is wiki text:\n    {{{\n    #!KanbanBoard\n    }}}\n\nData storage\n============\n\nPlugin uses Trac tickets as kanban board \"cards\". Any existing ticket from project can be added to the board and modifed either from board or from default Trac ticket view.\n\nBoard configuration and state is stored on wiki page inside `KanbanBoard` processor block in JSON format (see example below). When cards are moved around, plugin updates the state and rewrites the wiki page.\n\nExample\n=======\n\nHere's an example macro definition that produces Kanban board with three columns (New, Ongoing and Done) and shows status and priority fields in ticket dialog. First column contains three tickets (in order from top to bottom: #23, #24 and #25), second column one ticket and third column is empty. Invalid ticket IDs in configuration are ignored and removed automatically when board state is saved. ::\n\n    {{{\n    #!KanbanBoard height=250px\n    {\n      \"columns\": [\n        { \"id\": 1, \"name\": \"New\", \"states\": [\"new\"], \"tickets\": [23, 24, 25], \"wip\": 3 },\n        { \"id\": 2, \"name\": \"Ongoing\", \"states\": [\"assigned\", \"accepted\", \"reopened\"], \"tickets\": [21], \"wip\": 3 },\n        { \"id\": 3, \"name\": \"Done\", \"states\": [\"closed\"], \"tickets\": [], \"wip\": 5 }\n      ],\n      \"fields\": [\n        \"status\", \"priority\"\n      ]\n    }\n    }}}\n\nDescription for different options and properties can be displayed with `[[MacroList(KanbanBoard)]]` macro.\n\nHow to use\n==========\n\nTickets can be added to board by drag-and-dropping ticket links to board. Links can be dragged from same page as board, separate browser window or from the ticket query dialog which can be opened by clicking the 'Add tickets' button.\n\nNew ticket can be created by clicking the 'New ticket' button and entering ticket details. Tickets created this way are added to board automatically.\n\nEach \"card\" on board displays ticket ID and summary. Additional details can be viewed in ticket detail dialog which can be opened by clicking individual cards. Detail dialog contains:\n\n- Link to corresponding Trac ticket page (in title bar)\n- Ticket creation and modification times\n- Summary\n- Any user defined fields (as defined by \"fields\" property in macro definition)\n- Ticket description as plain text\n- Change history\n- Comment field\n\nIf user has TICKET_MODIFY and WIKI_MODIFY permissions, summary, description, custom fields and comment are editable and changes can be saved by clicking 'Save' button.\n\nTickets can be removed from board by clicking 'Remove from board' button in ticket detail dialog. Removing ticket from board does not modify or delete the ticket.\n\nIf user has proper permissions ticket status can also be modified by dragging tickets from one column to another. In this case ticket's new status is the first status of destination column's \"states\" property.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://projects.developer.nokia.com/TracKanbanBoard", "keywords": "trac plugin kanban", "license": "BSD-new", "maintainer": null, "maintainer_email": null, "name": "TracKanbanBoard", "package_url": "https://pypi.org/project/TracKanbanBoard/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/TracKanbanBoard/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://projects.developer.nokia.com/TracKanbanBoard"}, "release_url": "https://pypi.org/project/TracKanbanBoard/0.2/", "requires_dist": null, "requires_python": null, "summary": "Kanban board plugin for Trac", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"description\">\n<h2>Description</h2>\n<p>TracKanbanBoard is a Trac wiki macro for managing tickets with agile Kanban method. Add KanbanBoard macro to wiki page and use it to prioritize and manage tickets in the project.</p>\n<p>Main features:</p>\n<ul>\n<li>Define board columns and how they map to ticket states</li>\n<li>Change ticket state by dragging tickets on the board</li>\n<li>Add existing tickets to board by drag-and-dropping ticket links</li>\n<li>Create new tickets directly from board</li>\n<li>View and modify ticket fields (summary, description, etc.) and add comments from ticket detail dialog</li>\n<li>Define what ticket fields are visible on ticket detail dialog</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li><p>Clone the repository:</p>\n<pre>git clone https://projects.developer.nokia.com/git/TracKanbanBoard.git trackanbanboard\n</pre>\n</li>\n<li><p>Run setup script:</p>\n<pre>cd trackanbanboard\npython setup.py install\n</pre>\n</li>\n<li><p>Enable component in Trac configuration:</p>\n<pre>[components]\ntrackanbanboard.* = enabled\n</pre>\n</li>\n<li><p>Create/modify wiki page and put <cite>KanbanBoard</cite> processor in it. Empty data will give an error but also the detailed usage instructions:</p>\n<pre>This is wiki text:\n{{{\n#!KanbanBoard\n}}}\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"data-storage\">\n<h2>Data storage</h2>\n<p>Plugin uses Trac tickets as kanban board \u201ccards\u201d. Any existing ticket from project can be added to the board and modifed either from board or from default Trac ticket view.</p>\n<p>Board configuration and state is stored on wiki page inside <cite>KanbanBoard</cite> processor block in JSON format (see example below). When cards are moved around, plugin updates the state and rewrites the wiki page.</p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>Here\u2019s an example macro definition that produces Kanban board with three columns (New, Ongoing and Done) and shows status and priority fields in ticket dialog. First column contains three tickets (in order from top to bottom: #23, #24 and #25), second column one ticket and third column is empty. Invalid ticket IDs in configuration are ignored and removed automatically when board state is saved.</p>\n<pre>{{{\n#!KanbanBoard height=250px\n{\n  \"columns\": [\n    { \"id\": 1, \"name\": \"New\", \"states\": [\"new\"], \"tickets\": [23, 24, 25], \"wip\": 3 },\n    { \"id\": 2, \"name\": \"Ongoing\", \"states\": [\"assigned\", \"accepted\", \"reopened\"], \"tickets\": [21], \"wip\": 3 },\n    { \"id\": 3, \"name\": \"Done\", \"states\": [\"closed\"], \"tickets\": [], \"wip\": 5 }\n  ],\n  \"fields\": [\n    \"status\", \"priority\"\n  ]\n}\n}}}\n</pre>\n<p>Description for different options and properties can be displayed with <cite>[[MacroList(KanbanBoard)]]</cite> macro.</p>\n</div>\n<div id=\"how-to-use\">\n<h2>How to use</h2>\n<p>Tickets can be added to board by drag-and-dropping ticket links to board. Links can be dragged from same page as board, separate browser window or from the ticket query dialog which can be opened by clicking the \u2018Add tickets\u2019 button.</p>\n<p>New ticket can be created by clicking the \u2018New ticket\u2019 button and entering ticket details. Tickets created this way are added to board automatically.</p>\n<p>Each \u201ccard\u201d on board displays ticket ID and summary. Additional details can be viewed in ticket detail dialog which can be opened by clicking individual cards. Detail dialog contains:</p>\n<ul>\n<li>Link to corresponding Trac ticket page (in title bar)</li>\n<li>Ticket creation and modification times</li>\n<li>Summary</li>\n<li>Any user defined fields (as defined by \u201cfields\u201d property in macro definition)</li>\n<li>Ticket description as plain text</li>\n<li>Change history</li>\n<li>Comment field</li>\n</ul>\n<p>If user has TICKET_MODIFY and WIKI_MODIFY permissions, summary, description, custom fields and comment are editable and changes can be saved by clicking \u2018Save\u2019 button.</p>\n<p>Tickets can be removed from board by clicking \u2018Remove from board\u2019 button in ticket detail dialog. Removing ticket from board does not modify or delete the ticket.</p>\n<p>If user has proper permissions ticket status can also be modified by dragging tickets from one column to another. In this case ticket\u2019s new status is the first status of destination column\u2019s \u201cstates\u201d property.</p>\n</div>\n\n          </div>"}, "last_serial": 785861, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "9736e99f7544985c494c54882add6c99", "sha256": "fabfd30a8748c542ceed39da42e3cdd8f411ffafa9552156e6ed1603b52dfe3d"}, "downloads": -1, "filename": "TracKanbanBoard-0.1.tar.gz", "has_sig": false, "md5_digest": "9736e99f7544985c494c54882add6c99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 152457, "upload_time": "2012-12-19T08:48:55", "upload_time_iso_8601": "2012-12-19T08:48:55.655693Z", "url": "https://files.pythonhosted.org/packages/e2/82/a76e169164a5613ff81bec93c598a96fdfe5eb19b6230d83504506b4d246/TracKanbanBoard-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "547837cf1ff2d72bf80b5cbb53fb9f16", "sha256": "ab286fb14eacff519f84cd7f8ed5cc5f96e43374e62a6d4dd617385dbb952dbd"}, "downloads": -1, "filename": "TracKanbanBoard-0.2.tar.gz", "has_sig": false, "md5_digest": "547837cf1ff2d72bf80b5cbb53fb9f16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 152617, "upload_time": "2012-12-21T08:41:39", "upload_time_iso_8601": "2012-12-21T08:41:39.036228Z", "url": "https://files.pythonhosted.org/packages/c3/8f/8d041a6977a9f71a8e1cbbd1af1c804fe459ccabba166d37127317f3806e/TracKanbanBoard-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "547837cf1ff2d72bf80b5cbb53fb9f16", "sha256": "ab286fb14eacff519f84cd7f8ed5cc5f96e43374e62a6d4dd617385dbb952dbd"}, "downloads": -1, "filename": "TracKanbanBoard-0.2.tar.gz", "has_sig": false, "md5_digest": "547837cf1ff2d72bf80b5cbb53fb9f16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 152617, "upload_time": "2012-12-21T08:41:39", "upload_time_iso_8601": "2012-12-21T08:41:39.036228Z", "url": "https://files.pythonhosted.org/packages/c3/8f/8d041a6977a9f71a8e1cbbd1af1c804fe459ccabba166d37127317f3806e/TracKanbanBoard-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:48:52 2020"}