{"info": {"author": "Eunika Wu", "author_email": "eunika@pdxcodeguild.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# D.A.V.E.\nMeet DAVE, the screenwriting bot. \nDAVE generates formatted screenplays from other screenplays.\n\n\n## Install\n```\npip install davebot\n```\n\n## Use\n### Stanley module\n#### Generate screenplays\n`DAVE.nlp.Stanley` uses all the modules below (except web scraping) to generate formatted screenplays (PDF and plaintext).\n\nExample:\n```py\nfrom DAVE.nlp.Stanley import Stanley\ncharacters = ['HAL', 'DAVE', 'Stanley Kubrick', 'Discovery One', \n              'Arthur C. Clarke', 'The Sentinel']\nsource = ['2001-A-Space-Odyssey.txt', '2012.txt']\n\ndirector = Stanley(source, characters, destination='output', title='2013', author='DAVE')\ndirector.direct(length=100)\n```\n\nDAVE will create two files in the `destination` directory: `<title>.pdf` and `<title>.txt`.\n\n### Scraper module\n#### Scraping Screenplays\n`DAVE.scraper.DiscoveryOne` scrapes from IMSDB using BeautifulSoup\n```py\nfrom DAVE.scraper import DiscoveryOne, Sentinel\nDiscoveryOne.crawl(path, directory='.', pattern=GENRE):\n```\n\n#### Parse\n`DAVE.scraper.Sentinel`  and parses screenplays into subsections: headings, transitions, actions, parentheticals, and dialogue, to be further prepared into Markov models.\n```py\nSentinel.parse(*sources, destination='.', write=True)\n```\n\nOr, parse recursively using `Sentinel.parse_directory`\n```py\nSentinel.parse_directory(source='.', destination='parsed_categories', genre='All')`\n```\n\n### NLP module\n#### Serialize markov models\n`DAVE.nlp.HAL` generates Markov chains from the parsed categories made by `DAVE.scraper.Sentinel` and serializes the models into JSON.\n\nTo create the Markov models:\n```py\nfrom DAVE.nlp.HAL import HAL\nHAL.generate_models(source='parsed_categories', destination='.')\n```\n\n\n## Inspiration\n#### A Space Odyssey\nInspiration from the name D.A.V.E. came from Stanley Kubrick's masterpiece film *2001: A Space Odyssey*. The names of this package's modules all reflect characters, creators, texts, and important people involved in A Space Odyssey. \n\n\n#### Sunspring\nThe original inspiration for this project comes from a short science fiction film: *Sunspring*.\n\nDescription (from Ars Technica):\n\n> In the wake of Google's AI Go victory, filmmaker Oscar Sharp turned to his technologist collaborator Ross Goodwin to build a machine that could write screenplays. They created \"Jetson\" and fueled him with hundreds of sci-fi TV and movie scripts. Building a team including Thomas Middleditch, star of HBO's Silicon Valley, they gave themselves 48 hours to shoot and edit whatever Jetson decided to write.\n\n\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=LY7x2Ihqjmc\" target=\"_blank\"><img src=\"http://img.youtube.com/vi/LY7x2Ihqjmc/0.jpg\" \nalt=\"Sunspring Short Film\" width=\"240\" height=\"180\" border=\"10\" /></a>\n\nClick the image above to see the full video.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/DED8IRD/D.A.V.E", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "davebot", "package_url": "https://pypi.org/project/davebot/", "platform": "", "project_url": "https://pypi.org/project/davebot/", "project_urls": {"Homepage": "https://github.com/DED8IRD/D.A.V.E"}, "release_url": "https://pypi.org/project/davebot/1.0.1/", "requires_dist": ["beautifulsoup4 (==4.8.0)", "fpdf (==1.7.2)", "markovify (==0.7.2)", "requests (==2.22.0)"], "requires_python": "", "summary": "A screenplay bot", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>D.A.V.E.</h1>\n<p>Meet DAVE, the screenwriting bot.\nDAVE generates formatted screenplays from other screenplays.</p>\n<h2>Install</h2>\n<pre><code>pip install davebot\n</code></pre>\n<h2>Use</h2>\n<h3>Stanley module</h3>\n<h4>Generate screenplays</h4>\n<p><code>DAVE.nlp.Stanley</code> uses all the modules below (except web scraping) to generate formatted screenplays (PDF and plaintext).</p>\n<p>Example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">DAVE.nlp.Stanley</span> <span class=\"kn\">import</span> <span class=\"n\">Stanley</span>\n<span class=\"n\">characters</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'HAL'</span><span class=\"p\">,</span> <span class=\"s1\">'DAVE'</span><span class=\"p\">,</span> <span class=\"s1\">'Stanley Kubrick'</span><span class=\"p\">,</span> <span class=\"s1\">'Discovery One'</span><span class=\"p\">,</span> \n              <span class=\"s1\">'Arthur C. Clarke'</span><span class=\"p\">,</span> <span class=\"s1\">'The Sentinel'</span><span class=\"p\">]</span>\n<span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'2001-A-Space-Odyssey.txt'</span><span class=\"p\">,</span> <span class=\"s1\">'2012.txt'</span><span class=\"p\">]</span>\n\n<span class=\"n\">director</span> <span class=\"o\">=</span> <span class=\"n\">Stanley</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"n\">characters</span><span class=\"p\">,</span> <span class=\"n\">destination</span><span class=\"o\">=</span><span class=\"s1\">'output'</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">'2013'</span><span class=\"p\">,</span> <span class=\"n\">author</span><span class=\"o\">=</span><span class=\"s1\">'DAVE'</span><span class=\"p\">)</span>\n<span class=\"n\">director</span><span class=\"o\">.</span><span class=\"n\">direct</span><span class=\"p\">(</span><span class=\"n\">length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n</pre>\n<p>DAVE will create two files in the <code>destination</code> directory: <code>&lt;title&gt;.pdf</code> and <code>&lt;title&gt;.txt</code>.</p>\n<h3>Scraper module</h3>\n<h4>Scraping Screenplays</h4>\n<p><code>DAVE.scraper.DiscoveryOne</code> scrapes from IMSDB using BeautifulSoup</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">DAVE.scraper</span> <span class=\"kn\">import</span> <span class=\"n\">DiscoveryOne</span><span class=\"p\">,</span> <span class=\"n\">Sentinel</span>\n<span class=\"n\">DiscoveryOne</span><span class=\"o\">.</span><span class=\"n\">crawl</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">directory</span><span class=\"o\">=</span><span class=\"s1\">'.'</span><span class=\"p\">,</span> <span class=\"n\">pattern</span><span class=\"o\">=</span><span class=\"n\">GENRE</span><span class=\"p\">):</span>\n</pre>\n<h4>Parse</h4>\n<p><code>DAVE.scraper.Sentinel</code>  and parses screenplays into subsections: headings, transitions, actions, parentheticals, and dialogue, to be further prepared into Markov models.</p>\n<pre><span class=\"n\">Sentinel</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">sources</span><span class=\"p\">,</span> <span class=\"n\">destination</span><span class=\"o\">=</span><span class=\"s1\">'.'</span><span class=\"p\">,</span> <span class=\"n\">write</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Or, parse recursively using <code>Sentinel.parse_directory</code></p>\n<pre><span class=\"n\">Sentinel</span><span class=\"o\">.</span><span class=\"n\">parse_directory</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"o\">=</span><span class=\"s1\">'.'</span><span class=\"p\">,</span> <span class=\"n\">destination</span><span class=\"o\">=</span><span class=\"s1\">'parsed_categories'</span><span class=\"p\">,</span> <span class=\"n\">genre</span><span class=\"o\">=</span><span class=\"s1\">'All'</span><span class=\"p\">)</span><span class=\"err\">`</span>\n</pre>\n<h3>NLP module</h3>\n<h4>Serialize markov models</h4>\n<p><code>DAVE.nlp.HAL</code> generates Markov chains from the parsed categories made by <code>DAVE.scraper.Sentinel</code> and serializes the models into JSON.</p>\n<p>To create the Markov models:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">DAVE.nlp.HAL</span> <span class=\"kn\">import</span> <span class=\"n\">HAL</span>\n<span class=\"n\">HAL</span><span class=\"o\">.</span><span class=\"n\">generate_models</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"o\">=</span><span class=\"s1\">'parsed_categories'</span><span class=\"p\">,</span> <span class=\"n\">destination</span><span class=\"o\">=</span><span class=\"s1\">'.'</span><span class=\"p\">)</span>\n</pre>\n<h2>Inspiration</h2>\n<h4>A Space Odyssey</h4>\n<p>Inspiration from the name D.A.V.E. came from Stanley Kubrick's masterpiece film <em>2001: A Space Odyssey</em>. The names of this package's modules all reflect characters, creators, texts, and important people involved in A Space Odyssey.</p>\n<h4>Sunspring</h4>\n<p>The original inspiration for this project comes from a short science fiction film: <em>Sunspring</em>.</p>\n<p>Description (from Ars Technica):</p>\n<blockquote>\n<p>In the wake of Google's AI Go victory, filmmaker Oscar Sharp turned to his technologist collaborator Ross Goodwin to build a machine that could write screenplays. They created \"Jetson\" and fueled him with hundreds of sci-fi TV and movie scripts. Building a team including Thomas Middleditch, star of HBO's Silicon Valley, they gave themselves 48 hours to shoot and edit whatever Jetson decided to write.</p>\n</blockquote>\n<p><a href=\"http://www.youtube.com/watch?feature=player_embedded&amp;v=LY7x2Ihqjmc\" rel=\"nofollow\"><img alt=\"Sunspring Short Film\" height=\"180\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dfed4b9b46454095ac2077c0476c80857b918574/687474703a2f2f696d672e796f75747562652e636f6d2f76692f4c593778324968716a6d632f302e6a7067\" width=\"240\"></a></p>\n<p>Click the image above to see the full video.</p>\n\n          </div>"}, "last_serial": 5833455, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "2899be3d87aa2fc670dafdca8d4e5100", "sha256": "666e3acd7d856b5ceaf8c0e42a8174079d1d03c1442d0a1073fdc63f8af59901"}, "downloads": -1, "filename": "davebot-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2899be3d87aa2fc670dafdca8d4e5100", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23859, "upload_time": "2019-09-16T00:41:35", "upload_time_iso_8601": "2019-09-16T00:41:35.006134Z", "url": "https://files.pythonhosted.org/packages/f8/6f/1186ef471e9213739041eb471e5d8b4646452b7209f3be47ff38a8109605/davebot-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc53ee53a164beaacdc2d3cec96fb968", "sha256": "470563a59c76fad0018f1cb9970d6e08ed00c4bdd0f5f6fab534d5fcb6651879"}, "downloads": -1, "filename": "davebot-1.0.0.tar.gz", "has_sig": false, "md5_digest": "bc53ee53a164beaacdc2d3cec96fb968", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8156, "upload_time": "2019-09-16T00:41:37", "upload_time_iso_8601": "2019-09-16T00:41:37.531166Z", "url": "https://files.pythonhosted.org/packages/14/43/0b06c7a5bd4dfff011cbec3a87fdc66d7d1d2e87e9b1c341fc60f4c47532/davebot-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "05b2c9d5046c2bb70e1306edcc6a1c20", "sha256": "f93f132de4430d2ed70dc4eb34b9696b2a9974884d612f70ed4fcb585065bd6d"}, "downloads": -1, "filename": "davebot-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "05b2c9d5046c2bb70e1306edcc6a1c20", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23932, "upload_time": "2019-09-16T01:10:57", "upload_time_iso_8601": "2019-09-16T01:10:57.608186Z", "url": "https://files.pythonhosted.org/packages/b0/07/3e1196b7c48ee3fc41545efd023f9610c07615e20c5ce3cf5f9c40788f65/davebot-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eeee8811f5d545cbcd02c6503fbc39a1", "sha256": "df9809269e3bd43b187b579e3f50e5aecb8b8c0fb49b268fd976e4a33323a6a8"}, "downloads": -1, "filename": "davebot-1.0.1.tar.gz", "has_sig": false, "md5_digest": "eeee8811f5d545cbcd02c6503fbc39a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8251, "upload_time": "2019-09-16T01:10:59", "upload_time_iso_8601": "2019-09-16T01:10:59.088604Z", "url": "https://files.pythonhosted.org/packages/3f/e9/fdf7f52cf47def8d01a5f257a31cf9b081bf6838a50673b2e6606637ad26/davebot-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "05b2c9d5046c2bb70e1306edcc6a1c20", "sha256": "f93f132de4430d2ed70dc4eb34b9696b2a9974884d612f70ed4fcb585065bd6d"}, "downloads": -1, "filename": "davebot-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "05b2c9d5046c2bb70e1306edcc6a1c20", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23932, "upload_time": "2019-09-16T01:10:57", "upload_time_iso_8601": "2019-09-16T01:10:57.608186Z", "url": "https://files.pythonhosted.org/packages/b0/07/3e1196b7c48ee3fc41545efd023f9610c07615e20c5ce3cf5f9c40788f65/davebot-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eeee8811f5d545cbcd02c6503fbc39a1", "sha256": "df9809269e3bd43b187b579e3f50e5aecb8b8c0fb49b268fd976e4a33323a6a8"}, "downloads": -1, "filename": "davebot-1.0.1.tar.gz", "has_sig": false, "md5_digest": "eeee8811f5d545cbcd02c6503fbc39a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8251, "upload_time": "2019-09-16T01:10:59", "upload_time_iso_8601": "2019-09-16T01:10:59.088604Z", "url": "https://files.pythonhosted.org/packages/3f/e9/fdf7f52cf47def8d01a5f257a31cf9b081bf6838a50673b2e6606637ad26/davebot-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:02 2020"}