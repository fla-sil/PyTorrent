{"info": {"author": "Matthias Urlichs", "author_email": "matthias@urlichs.de", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Intended Audience :: Developers", "Intended Audience :: Education", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Networking :: Monitoring"], "description": "--------\naio_ping\n--------\n\nAn asyncio-based python ping implementation using raw sockets.\n\n* Compatible with Python 3.5 ff.\n\n* Note that ICMP messages can only be sent from processes running as root   (in Windows, you must run this script as 'Administrator').\n\n----------------\nOriginal Version\n----------------\n\n* `Matthew Dixon Cowles <ftp://ftp.visi.com/users/mdc/ping.py>`_\n\n* copyleft 1989-2016 by the python-ping team, see `AUTHORS <https://github.com/l4m3rx/python-ping/blob/master/AUTHORS>`_ for more details.\n\n* license: GNU GPL v2, see `LICENSE <https://github.com/l4m3rx/python-ping/blob/master/LICENSE>`_ for more details.\n\nUsage\n=====\n\n::\n\n    usage: ping [-h] [-w TIMEOUT] [-c COUNT] [-i INTERVAL] [-4] [-6]\n                [-I SOURCEINTF] [-s NUMDATABYTES] [-T] [-S SOURCEIP]\n                hostname\n    \n    A pure python implementation of the ping protocol. *REQUIRES ROOT*\n    \n    positional arguments:\n      hostname              The address to attempt to ping.\n    \n    optional arguments:\n      -h, --help            show this help message and exit\n      -w TIMEOUT, --deadline TIMEOUT\n                            The maximum amount of time to wait until ping times\n                            out.\n      -c COUNT, --request_count COUNT\n                            The number of attempts to make. Zero=infinite.\n      -i INTERVAL, --interval INTERVAL\n                            Time between ping attempts\n      -4, --ipv4            Flag to use IPv4.\n      -6, --ipv6            Flag to use IPv6.\n      -I SOURCEINTF, --interface SOURCEINTF\n                            Interface to use.\n      -s NUMDATABYTES, --packet_size NUMDATABYTES\n                            Designate the amount of data to send per packet.\n      -T, --test_case       Flag to run the default test case suite.\n      -S SOURCEIP, --source_address SOURCEIP\n                            Source address from which ICMP Echo packets will be\n                            sent.\n\nUsing as lib\n============\n\n::\n\n    # python3\n    >>> from aio_ping import ping\n    >>> ping('google.com', timeout=3000, count=3, delay=0.5)\n    True\n    >>> ping('google.com', timeout=3000, count=3, delay=0.5, verbose=True)\n    \n    PYTHON PING google.com (216.58.212.46): 1300 data bytes\n    72 bytes from 216.58.212.46: icmp_seq=0 ttl=59 time=4.42 ms\n    72 bytes from 216.58.212.46: icmp_seq=1 ttl=59 time=4.70 ms\n    72 bytes from 216.58.212.46: icmp_seq=2 ttl=59 time=4.44 ms\n    72 bytes from 216.58.212.46: icmp_seq=3 ttl=59 time=4.47 ms\n    \n    ----216.58.212.46 PYTHON PING Statistics----\n    4 packets transmitted, 4 packets received, 0.0% packet loss\n    round-trip (ms)  min/avg/max = 4.4/4.5/4.7\n    \n    1\n\nAsync usage is via the {Ping} class, which can be used like this:\n\n::\n\n    from aio_ping import Ping,VerbosePing\n    async def ping(hostname, verbose=True, handle_signals=False, **kw):\n        \"\"\"\n        Send @count ping to @hostname with the given @timeout\n        \"\"\"\n        ping = (VerbosePing if verbose else Ping)(verbose=verbose, **kw)\n        if handle_signals: ping.add_signal_handler()\n        await ping.init(hostname)\n        res = await ping.looped()\n        if verbose:\n            ping.print_stats()\n        ping.close()\n        return res\n\n----------\ncontribute\n----------\n\n`Fork this repo <http://help.github.com/fork-a-repo/>`_ on `GitHub <https://github.com/M-o-a-T/aioping/>`_ and `send pull requests <http://help.github.com/send-pull-requests/>`_. Thank you.\n\n----------------\nRevision history\n----------------\n\n`Revision history <https://github.com/M-o-a-T/aioping/commits/master>`_\n\n-----\nLinks\n-----\n\n+----------------------+---------------------------------------+\n| Sourcecode at GitHub | `https://github.com/M-o-a-T/aioping`_ |\n+----------------------+---------------------------------------+\n\n.. _https://github.com/M-o-a-T/aioping: https://github.com/M-o-a-T/aioping", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/M-o-a-T/aioping/", "keywords": "asyncio ping icmp network latency", "license": "", "maintainer": "", "maintainer_email": "", "name": "aio_ping", "package_url": "https://pypi.org/project/aio_ping/", "platform": "", "project_url": "https://pypi.org/project/aio_ping/", "project_urls": {"Homepage": "https://github.com/M-o-a-T/aioping/"}, "release_url": "https://pypi.org/project/aio_ping/0.1.3/", "requires_dist": null, "requires_python": "", "summary": "An async python ICMP ping implementation using raw sockets.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"aio-ping\">\n<h2>aio_ping</h2>\n<p>An asyncio-based python ping implementation using raw sockets.</p>\n<ul>\n<li>Compatible with Python 3.5 ff.</li>\n<li>Note that ICMP messages can only be sent from processes running as root   (in Windows, you must run this script as \u2018Administrator\u2019).</li>\n</ul>\n</div>\n<div id=\"original-version\">\n<h2>Original Version</h2>\n<ul>\n<li><a>Matthew Dixon Cowles</a></li>\n<li>copyleft 1989-2016 by the python-ping team, see <a href=\"https://github.com/l4m3rx/python-ping/blob/master/AUTHORS\" rel=\"nofollow\">AUTHORS</a> for more details.</li>\n<li>license: GNU GPL v2, see <a href=\"https://github.com/l4m3rx/python-ping/blob/master/LICENSE\" rel=\"nofollow\">LICENSE</a> for more details.</li>\n</ul>\n<div id=\"usage\">\n<h3>Usage</h3>\n<pre>usage: ping [-h] [-w TIMEOUT] [-c COUNT] [-i INTERVAL] [-4] [-6]\n            [-I SOURCEINTF] [-s NUMDATABYTES] [-T] [-S SOURCEIP]\n            hostname\n\nA pure python implementation of the ping protocol. *REQUIRES ROOT*\n\npositional arguments:\n  hostname              The address to attempt to ping.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -w TIMEOUT, --deadline TIMEOUT\n                        The maximum amount of time to wait until ping times\n                        out.\n  -c COUNT, --request_count COUNT\n                        The number of attempts to make. Zero=infinite.\n  -i INTERVAL, --interval INTERVAL\n                        Time between ping attempts\n  -4, --ipv4            Flag to use IPv4.\n  -6, --ipv6            Flag to use IPv6.\n  -I SOURCEINTF, --interface SOURCEINTF\n                        Interface to use.\n  -s NUMDATABYTES, --packet_size NUMDATABYTES\n                        Designate the amount of data to send per packet.\n  -T, --test_case       Flag to run the default test case suite.\n  -S SOURCEIP, --source_address SOURCEIP\n                        Source address from which ICMP Echo packets will be\n                        sent.\n</pre>\n</div>\n<div id=\"using-as-lib\">\n<h3>Using as lib</h3>\n<pre># python3\n&gt;&gt;&gt; from aio_ping import ping\n&gt;&gt;&gt; ping('google.com', timeout=3000, count=3, delay=0.5)\nTrue\n&gt;&gt;&gt; ping('google.com', timeout=3000, count=3, delay=0.5, verbose=True)\n\nPYTHON PING google.com (216.58.212.46): 1300 data bytes\n72 bytes from 216.58.212.46: icmp_seq=0 ttl=59 time=4.42 ms\n72 bytes from 216.58.212.46: icmp_seq=1 ttl=59 time=4.70 ms\n72 bytes from 216.58.212.46: icmp_seq=2 ttl=59 time=4.44 ms\n72 bytes from 216.58.212.46: icmp_seq=3 ttl=59 time=4.47 ms\n\n----216.58.212.46 PYTHON PING Statistics----\n4 packets transmitted, 4 packets received, 0.0% packet loss\nround-trip (ms)  min/avg/max = 4.4/4.5/4.7\n\n1\n</pre>\n<p>Async usage is via the {Ping} class, which can be used like this:</p>\n<pre>from aio_ping import Ping,VerbosePing\nasync def ping(hostname, verbose=True, handle_signals=False, **kw):\n    \"\"\"\n    Send @count ping to @hostname with the given @timeout\n    \"\"\"\n    ping = (VerbosePing if verbose else Ping)(verbose=verbose, **kw)\n    if handle_signals: ping.add_signal_handler()\n    await ping.init(hostname)\n    res = await ping.looped()\n    if verbose:\n        ping.print_stats()\n    ping.close()\n    return res\n</pre>\n</div>\n</div>\n<div id=\"contribute\">\n<h2>contribute</h2>\n<p><a href=\"http://help.github.com/fork-a-repo/\" rel=\"nofollow\">Fork this repo</a> on <a href=\"https://github.com/M-o-a-T/aioping/\" rel=\"nofollow\">GitHub</a> and <a href=\"http://help.github.com/send-pull-requests/\" rel=\"nofollow\">send pull requests</a>. Thank you.</p>\n</div>\n<div id=\"revision-history\">\n<h2>Revision history</h2>\n<p><a href=\"https://github.com/M-o-a-T/aioping/commits/master\" rel=\"nofollow\">Revision history</a></p>\n</div>\n<div id=\"links\">\n<h2>Links</h2>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td>Sourcecode at GitHub</td>\n<td><a href=\"https://github.com/M-o-a-T/aioping\" rel=\"nofollow\">https://github.com/M-o-a-T/aioping</a></td>\n</tr>\n</tbody>\n</table>\n</div>\n\n          </div>"}, "last_serial": 3049298, "releases": {"0.1.3": [{"comment_text": "", "digests": {"md5": "77f7cf12e90962dc264f30c9db0fbc48", "sha256": "1d84610ff2830480a8762d350172d512add01bb1fa1957ea4e8ba843b57c4bd7"}, "downloads": -1, "filename": "aio_ping-0.1.3.tar.gz", "has_sig": false, "md5_digest": "77f7cf12e90962dc264f30c9db0fbc48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10352, "upload_time": "2017-07-26T06:11:19", "upload_time_iso_8601": "2017-07-26T06:11:19.542013Z", "url": "https://files.pythonhosted.org/packages/0b/89/f58d745ac40cedc1884374a38cebee746d41e6ec50279b12198bcf889ad0/aio_ping-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "77f7cf12e90962dc264f30c9db0fbc48", "sha256": "1d84610ff2830480a8762d350172d512add01bb1fa1957ea4e8ba843b57c4bd7"}, "downloads": -1, "filename": "aio_ping-0.1.3.tar.gz", "has_sig": false, "md5_digest": "77f7cf12e90962dc264f30c9db0fbc48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10352, "upload_time": "2017-07-26T06:11:19", "upload_time_iso_8601": "2017-07-26T06:11:19.542013Z", "url": "https://files.pythonhosted.org/packages/0b/89/f58d745ac40cedc1884374a38cebee746d41e6ec50279b12198bcf889ad0/aio_ping-0.1.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:56 2020"}