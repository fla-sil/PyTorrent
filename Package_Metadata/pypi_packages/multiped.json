{"info": {"author": "walchko", "author_email": "walchko@users.noreply.github.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Multiped\n\n[![](https://img.shields.io/pypi/v/quadruped.svg)](https://github.com/MultipedRobotics/multiped)\n[![](https://img.shields.io/pypi/l/quadruped.svg)](https://github.com/MultipedRobotics/multiped)\n\nMy walking robot software.\n\nNature loves animals/insects with legs. Even birds have legs! Legs allow for easier\nnavigation across rough terrain. The more legs you have, the more redundant and\nrobust you are. If you are a centipede and you break a few legs, no big deal.\nHowever, if you are a human and break one leg, then walking (forget running)\nbecomes extremely difficult.\n\nIn robotics you see many different types of walking robots. Common ones are:\n2 legs, four legs, and 6 legs. There are advantages and disadvantages for each\nof these types of robots.\n\n- 2 legs\n    - balancing and shifting the body's center of mass is critical to the\nrobot not falling over\n    - the 2 legs are generally need to be more powerful to lift the body mass\n- 4 legs:\n    - there is an inherent stability with this configuration. You only need 3\n    legs (tripod) to keep the robot standing, leaving one leg to move freely\n    as needed\n    - each of the legs can be weaker than its 2 legged counter part\n    - However, there is still a lot of motors, data lines, coordination complexity\n    than if you only had 2 legs\n- 6 (or more) legs:\n    - having more than 4 legs contains all of the same advantages/disadvantages\n    of 4 legs\n    - you also have more redundancy, essentially able to loose 2 legs and keep\n    walking\n    - there are also more types of gaits available to you, which is a fancy word\n    for how you control your leg moves when walking, trotting, running, etc\n    - You can even use some of your lets as arms to move objects around while still\n    maintaining a stable tripod stance\n    - However, more motors, more weight, more power consumption drives you to needing\n    larger and more expensive batteries\n    - at some point (maybe a centipede) more legs doesn't really add any advantage\n\n[Robot based on Robotis XL320 Servos](https://github.com/MultipedRobotics/quadruped-XL320):\n\n* [YouTube](https://www.youtube.com/watch?v=kH2hlxUfCNg)\n* [Vimeo](https://player.vimeo.com/video/194676675)\n\n[Robot based on Robotis AX12 Servos](https://github.com/MultipedRobotics/quadruped-AX12)\n\n* Not fully working yet\n\n## Required Software\n\nThis software requires [`pyservos`](https://github.com/MomsFriendlyRobotCompany/pyservos)\nto run. This software talks to both the XL-320 and AX-12A servos from Robotis.\n\n# Class Layout\n\n![](pics/quad-movement.png)\n\nHere is *sort* of the layout of the code:\n\n```\n      cmd      3d pts      DH angles        servo packet\nrobot --> gait -----> legs --------> engine -----------> servos\n```\n\n- **Robot(data):**\n    - Holds all of the other classes: Kinematics, Gait, Engine\n    - Holds all sensors\n    - Runs any logic/AI for the robot\n- **Gait:**\n    - Gait calculates the foot positions for 1 cycle of a movement\n        - All values are in (x,y,z) of units mm\n    - command() - plans all feet through 1 gait cycle (say 15 steps)\n- **Engine:**\n    - Engine takes the output from kinematics and translates it to servo space\n      for each time stop and each leg in the cycle. It then sends the commands\n      (in bulk) to move the servos each step\n      - legs[4]\n          - servos[3-4]\n              - current angle\n              - ID\n              - angle offset (based on kinematics to align with DH reference frame)\n- **Kinematics:**\n    Takes the 3d positions from gait and performs the inverse kinematics\n    - leg parts: coxa, femur, tibia, *[tarsus]*\n    - *forward()* - forward kinematics\n    - *inverse()* - inverse kinematics\n\nThe example quadruped (in the examples folder), takes a dictionary (or you can\nuse a json file). Currently it takes:\n\n```json\ndata = {\n    \"numLegs\": 4,\n    \"numServosPerLeg\": 4,\n    \"coxa\":   [52, 150],\n    \"femur\":  [90, 123],\n    \"tibia\":  [89, 194],\n    \"tarsus\": [90, 167],\n\n    \"sit\": [80, 0, 1],\n    \"stand\": [120, 0, -70],\n\n    \"servoType\": 1,\n    \"bcm_pin\": 11,\n    \"serialPort\": \"/dev/tty.usbserial-AL034G2K\"\n}\n```\n\nIf you don't pass it a serial port, then it falls back to a simulated serial\nport which does nothing but is useful for testing.\n\n## Bulk Writing\n\nNormally, you would send an individual command to each servo and get a response\nback from it. That creates a lot of back an forth communications. Instead,\nthis library uses a bulk write to send commands to all servos at once with no reply.\nThis results in smoother motion and greatly reduced data transmission.\n\n## Building and Documentation\n\nDetails for how to build the robot and other information are in the `docs` folder\nin the [git repo](https://github.com/MultipedRobotics/multiped/tree/master/docs)\n\n# Tools\n\nThis directory contains several tools for the robot:\n\n- get_leg_angles.py: prints out the joint angles for all 4 legs\n\n```bash\n$ ./get_leg_angles.py /dev/tty.usbserial-AL034G2K\nOpened /dev/tty.usbserial-AL034G2K @ 1000000\n\nServos: 1 - 12\nAll angles are in degrees\n         Leg 1 |         Leg 2 |         Leg 3 |         Leg 4 |\n   ID | Angle  |   ID | Angle  |   ID | Angle  |   ID | Angle  |\n-----------------------------------------------------------------\n    1 | 149.56 |    4 | 149.56 |    7 | 149.56 |   10 | 149.56\n    2 | 239.88 |    5 | 271.55 |    8 | 269.79 |   11 | 270.38\n    3 |  99.41 |    6 | 100.29 |    9 | 100.00 |   12 |  99.41\n-----------------------------------------------------------------\n```\n\n- get_leg_info.py: prints out servo information for all 12 servos on the robot\n\n\n```bash\n$ ./get_leg_info.py /dev/tty.usbserial-AL034G2K\nOpened /dev/tty.usbserial-AL034G2K @ 1000000\n\nServos: 1 - 12\n--------------------------------------------------\nServo: 1          HW Error: 0\nPosition [deg]: 149.6  Load:   0.0% CCW\nVoltage [V]  7.0     Temperature [F]:  80.6\n--------------------------------------------------\nServo: 2          HW Error: 0\nPosition [deg]: 239.6  Load:   0.0% CCW\nVoltage [V]  7.2     Temperature [F]:  80.6\n--------------------------------------------------\nServo: 3          HW Error: 0\nPosition [deg]:  99.4  Load:   0.0% CCW\nVoltage [V]  7.2     Temperature [F]:  82.4\n--------------------------------------------------\nServo: 4          HW Error: 0\nPosition [deg]: 149.6  Load:   0.0% CCW\nVoltage [V]  7.3     Temperature [F]:  80.6\n--------------------------------------------------\nServo: 5          HW Error: 0\nPosition [deg]: 271.6  Load:   0.0% CCW\nVoltage [V]  7.2     Temperature [F]:  80.6\n--------------------------------------------------\nServo: 6          HW Error: 0\nPosition [deg]: 100.3  Load:   0.0% CCW\nVoltage [V]  7.4     Temperature [F]:  82.4\n--------------------------------------------------\nServo: 7          HW Error: 0\nPosition [deg]: 149.6  Load:   0.0% CCW\nVoltage [V]  7.2     Temperature [F]:  80.6\n--------------------------------------------------\nServo: 8          HW Error: 0\nPosition [deg]: 269.8  Load:   0.0% CCW\nVoltage [V]  7.1     Temperature [F]:  78.8\n--------------------------------------------------\nServo: 9          HW Error: 0\nPosition [deg]:  99.4  Load:   0.8% CCW\nVoltage [V]  7.2     Temperature [F]:  82.4\n--------------------------------------------------\nServo: 10          HW Error: 0\nPosition [deg]: 149.9  Load:   0.0% CCW\nVoltage [V]  7.1     Temperature [F]:  80.6\n--------------------------------------------------\nServo: 11          HW Error: 0\nPosition [deg]: 270.1  Load:   0.0% CCW\nVoltage [V]  7.2     Temperature [F]:  80.6\n--------------------------------------------------\nServo: 12          HW Error: 0\nPosition [deg]:  99.4  Load:   0.0% CCW\nVoltage [V]  7.1     Temperature [F]:  84.2\n--------------------------------------------------\n```\n\n## History\n\n### RC Servos\n\n<img src=\"pics/rc-spider.jpg\" width=\"400px\">\n\nThis was the original version, shown above around Aug 2016. It used toy RC\nservos (9 g's), they didn't work that great. I think I lost the code, because\nI can't find it.\n\n### XL-320 Servos\n\n<img src=\"pics/xl-320-spider.jpg\" width=\"400px\">\n\n**work on this robot has stopped** This worked OK, see the movie above.\nThe servos were not very strong and the lego like rivets were kind of\na pain to use. The rivets also didn't hold things together very tight\nso there was a lot of wiggle. Overall, I prefer nuts/bolts.\n\n### AX-12A Servos\n\n<img src=\"pics/ax-12a-spider.jpg\" width=\"400px\">\n\n**this is the current robot I am focusing on** All of the current code\nis designed for this robot. I *sort of* maintain backwards compatability\nwith the XL-320, but I don't guarentee it.\n\n\n# ToDo\n\n- change more return values to `tuples` instead of `lists` for performance\n- do CM shifting\n- make generic, so I can do 6 or 8 legs\n- flush out the config file better, I have hard coded too many things\n\n# Change Log\n\n| Date | Version | Notes |\n|---|---|---|\n| 2018-11-27 | 0.6.0 | Reorg'd, moved robots to own repo |\n| 2017-12-25 | 0.5.0 | Clean up and reorg, removed unnecessary libraries |\n| 2017-06-07 | 0.4.1 | broke out into package and published to PyPi |\n| 2016-08-10 | 0.0.1 | init |\n\n\n# MIT Software License\n\n**Copyright (c) 2016 Kevin J. Walchko**\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.org/project/multiped/", "keywords": "dynamixel,servo,smart,multiped,hexapod,quadruped", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "multiped", "package_url": "https://pypi.org/project/multiped/", "platform": "", "project_url": "https://pypi.org/project/multiped/", "project_urls": {"Homepage": "https://pypi.org/project/multiped/", "Repository": "http://github.com/MultipedRobotics/multiped"}, "release_url": "https://pypi.org/project/multiped/0.5.1/", "requires_dist": ["colorama", "pyservos (>=2.0.1)", "simplejson"], "requires_python": ">=3.6", "summary": "Yet another robot python driver", "version": "0.5.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Multiped</h1>\n<p><a href=\"https://github.com/MultipedRobotics/multiped\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6e976b65415868f3d39cfcdbf69c91f7f97ac997/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7175616472757065642e737667\"></a>\n<a href=\"https://github.com/MultipedRobotics/multiped\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9d7d6000aeac8a6185c73a51e279c4d78623a70a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f7175616472757065642e737667\"></a></p>\n<p>My walking robot software.</p>\n<p>Nature loves animals/insects with legs. Even birds have legs! Legs allow for easier\nnavigation across rough terrain. The more legs you have, the more redundant and\nrobust you are. If you are a centipede and you break a few legs, no big deal.\nHowever, if you are a human and break one leg, then walking (forget running)\nbecomes extremely difficult.</p>\n<p>In robotics you see many different types of walking robots. Common ones are:\n2 legs, four legs, and 6 legs. There are advantages and disadvantages for each\nof these types of robots.</p>\n<ul>\n<li>2 legs\n<ul>\n<li>balancing and shifting the body's center of mass is critical to the\nrobot not falling over</li>\n<li>the 2 legs are generally need to be more powerful to lift the body mass</li>\n</ul>\n</li>\n<li>4 legs:\n<ul>\n<li>there is an inherent stability with this configuration. You only need 3\nlegs (tripod) to keep the robot standing, leaving one leg to move freely\nas needed</li>\n<li>each of the legs can be weaker than its 2 legged counter part</li>\n<li>However, there is still a lot of motors, data lines, coordination complexity\nthan if you only had 2 legs</li>\n</ul>\n</li>\n<li>6 (or more) legs:\n<ul>\n<li>having more than 4 legs contains all of the same advantages/disadvantages\nof 4 legs</li>\n<li>you also have more redundancy, essentially able to loose 2 legs and keep\nwalking</li>\n<li>there are also more types of gaits available to you, which is a fancy word\nfor how you control your leg moves when walking, trotting, running, etc</li>\n<li>You can even use some of your lets as arms to move objects around while still\nmaintaining a stable tripod stance</li>\n<li>However, more motors, more weight, more power consumption drives you to needing\nlarger and more expensive batteries</li>\n<li>at some point (maybe a centipede) more legs doesn't really add any advantage</li>\n</ul>\n</li>\n</ul>\n<p><a href=\"https://github.com/MultipedRobotics/quadruped-XL320\" rel=\"nofollow\">Robot based on Robotis XL320 Servos</a>:</p>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=kH2hlxUfCNg\" rel=\"nofollow\">YouTube</a></li>\n<li><a href=\"https://player.vimeo.com/video/194676675\" rel=\"nofollow\">Vimeo</a></li>\n</ul>\n<p><a href=\"https://github.com/MultipedRobotics/quadruped-AX12\" rel=\"nofollow\">Robot based on Robotis AX12 Servos</a></p>\n<ul>\n<li>Not fully working yet</li>\n</ul>\n<h2>Required Software</h2>\n<p>This software requires <a href=\"https://github.com/MomsFriendlyRobotCompany/pyservos\" rel=\"nofollow\"><code>pyservos</code></a>\nto run. This software talks to both the XL-320 and AX-12A servos from Robotis.</p>\n<h1>Class Layout</h1>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7ab97576efd9ff084fd493cac0779cea923069e7/706963732f717561642d6d6f76656d656e742e706e67\"></p>\n<p>Here is <em>sort</em> of the layout of the code:</p>\n<pre><code>      cmd      3d pts      DH angles        servo packet\nrobot --&gt; gait -----&gt; legs --------&gt; engine -----------&gt; servos\n</code></pre>\n<ul>\n<li><strong>Robot(data):</strong>\n<ul>\n<li>Holds all of the other classes: Kinematics, Gait, Engine</li>\n<li>Holds all sensors</li>\n<li>Runs any logic/AI for the robot</li>\n</ul>\n</li>\n<li><strong>Gait:</strong>\n<ul>\n<li>Gait calculates the foot positions for 1 cycle of a movement\n<ul>\n<li>All values are in (x,y,z) of units mm</li>\n</ul>\n</li>\n<li>command() - plans all feet through 1 gait cycle (say 15 steps)</li>\n</ul>\n</li>\n<li><strong>Engine:</strong>\n<ul>\n<li>Engine takes the output from kinematics and translates it to servo space\nfor each time stop and each leg in the cycle. It then sends the commands\n(in bulk) to move the servos each step\n<ul>\n<li>legs[4]\n<ul>\n<li>servos[3-4]\n<ul>\n<li>current angle</li>\n<li>ID</li>\n<li>angle offset (based on kinematics to align with DH reference frame)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>Kinematics:</strong>\nTakes the 3d positions from gait and performs the inverse kinematics\n<ul>\n<li>leg parts: coxa, femur, tibia, <em>[tarsus]</em></li>\n<li><em>forward()</em> - forward kinematics</li>\n<li><em>inverse()</em> - inverse kinematics</li>\n</ul>\n</li>\n</ul>\n<p>The example quadruped (in the examples folder), takes a dictionary (or you can\nuse a json file). Currently it takes:</p>\n<pre><span class=\"err\">data</span> <span class=\"err\">=</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"numLegs\"</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"numServosPerLeg\"</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"coxa\"</span><span class=\"p\">:</span>   <span class=\"p\">[</span><span class=\"mi\">52</span><span class=\"p\">,</span> <span class=\"mi\">150</span><span class=\"p\">],</span>\n    <span class=\"nt\">\"femur\"</span><span class=\"p\">:</span>  <span class=\"p\">[</span><span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">123</span><span class=\"p\">],</span>\n    <span class=\"nt\">\"tibia\"</span><span class=\"p\">:</span>  <span class=\"p\">[</span><span class=\"mi\">89</span><span class=\"p\">,</span> <span class=\"mi\">194</span><span class=\"p\">],</span>\n    <span class=\"nt\">\"tarsus\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">167</span><span class=\"p\">],</span>\n\n    <span class=\"nt\">\"sit\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">80</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n    <span class=\"nt\">\"stand\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">120</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">-70</span><span class=\"p\">],</span>\n\n    <span class=\"nt\">\"servoType\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"bcm_pin\"</span><span class=\"p\">:</span> <span class=\"mi\">11</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"serialPort\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/dev/tty.usbserial-AL034G2K\"</span>\n<span class=\"p\">}</span>\n</pre>\n<p>If you don't pass it a serial port, then it falls back to a simulated serial\nport which does nothing but is useful for testing.</p>\n<h2>Bulk Writing</h2>\n<p>Normally, you would send an individual command to each servo and get a response\nback from it. That creates a lot of back an forth communications. Instead,\nthis library uses a bulk write to send commands to all servos at once with no reply.\nThis results in smoother motion and greatly reduced data transmission.</p>\n<h2>Building and Documentation</h2>\n<p>Details for how to build the robot and other information are in the <code>docs</code> folder\nin the <a href=\"https://github.com/MultipedRobotics/multiped/tree/master/docs\" rel=\"nofollow\">git repo</a></p>\n<h1>Tools</h1>\n<p>This directory contains several tools for the robot:</p>\n<ul>\n<li>get_leg_angles.py: prints out the joint angles for all 4 legs</li>\n</ul>\n<pre>$ ./get_leg_angles.py /dev/tty.usbserial-AL034G2K\nOpened /dev/tty.usbserial-AL034G2K @ <span class=\"m\">1000000</span>\n\nServos: <span class=\"m\">1</span> - <span class=\"m\">12</span>\nAll angles are in degrees\n         Leg <span class=\"m\">1</span> <span class=\"p\">|</span>         Leg <span class=\"m\">2</span> <span class=\"p\">|</span>         Leg <span class=\"m\">3</span> <span class=\"p\">|</span>         Leg <span class=\"m\">4</span> <span class=\"p\">|</span>\n   ID <span class=\"p\">|</span> Angle  <span class=\"p\">|</span>   ID <span class=\"p\">|</span> Angle  <span class=\"p\">|</span>   ID <span class=\"p\">|</span> Angle  <span class=\"p\">|</span>   ID <span class=\"p\">|</span> Angle  <span class=\"p\">|</span>\n-----------------------------------------------------------------\n    <span class=\"m\">1</span> <span class=\"p\">|</span> <span class=\"m\">149</span>.56 <span class=\"p\">|</span>    <span class=\"m\">4</span> <span class=\"p\">|</span> <span class=\"m\">149</span>.56 <span class=\"p\">|</span>    <span class=\"m\">7</span> <span class=\"p\">|</span> <span class=\"m\">149</span>.56 <span class=\"p\">|</span>   <span class=\"m\">10</span> <span class=\"p\">|</span> <span class=\"m\">149</span>.56\n    <span class=\"m\">2</span> <span class=\"p\">|</span> <span class=\"m\">239</span>.88 <span class=\"p\">|</span>    <span class=\"m\">5</span> <span class=\"p\">|</span> <span class=\"m\">271</span>.55 <span class=\"p\">|</span>    <span class=\"m\">8</span> <span class=\"p\">|</span> <span class=\"m\">269</span>.79 <span class=\"p\">|</span>   <span class=\"m\">11</span> <span class=\"p\">|</span> <span class=\"m\">270</span>.38\n    <span class=\"m\">3</span> <span class=\"p\">|</span>  <span class=\"m\">99</span>.41 <span class=\"p\">|</span>    <span class=\"m\">6</span> <span class=\"p\">|</span> <span class=\"m\">100</span>.29 <span class=\"p\">|</span>    <span class=\"m\">9</span> <span class=\"p\">|</span> <span class=\"m\">100</span>.00 <span class=\"p\">|</span>   <span class=\"m\">12</span> <span class=\"p\">|</span>  <span class=\"m\">99</span>.41\n-----------------------------------------------------------------\n</pre>\n<ul>\n<li>get_leg_info.py: prints out servo information for all 12 servos on the robot</li>\n</ul>\n<pre>$ ./get_leg_info.py /dev/tty.usbserial-AL034G2K\nOpened /dev/tty.usbserial-AL034G2K @ <span class=\"m\">1000000</span>\n\nServos: <span class=\"m\">1</span> - <span class=\"m\">12</span>\n--------------------------------------------------\nServo: <span class=\"m\">1</span>          HW Error: <span class=\"m\">0</span>\nPosition <span class=\"o\">[</span>deg<span class=\"o\">]</span>: <span class=\"m\">149</span>.6  Load:   <span class=\"m\">0</span>.0% CCW\nVoltage <span class=\"o\">[</span>V<span class=\"o\">]</span>  <span class=\"m\">7</span>.0     Temperature <span class=\"o\">[</span>F<span class=\"o\">]</span>:  <span class=\"m\">80</span>.6\n--------------------------------------------------\nServo: <span class=\"m\">2</span>          HW Error: <span class=\"m\">0</span>\nPosition <span class=\"o\">[</span>deg<span class=\"o\">]</span>: <span class=\"m\">239</span>.6  Load:   <span class=\"m\">0</span>.0% CCW\nVoltage <span class=\"o\">[</span>V<span class=\"o\">]</span>  <span class=\"m\">7</span>.2     Temperature <span class=\"o\">[</span>F<span class=\"o\">]</span>:  <span class=\"m\">80</span>.6\n--------------------------------------------------\nServo: <span class=\"m\">3</span>          HW Error: <span class=\"m\">0</span>\nPosition <span class=\"o\">[</span>deg<span class=\"o\">]</span>:  <span class=\"m\">99</span>.4  Load:   <span class=\"m\">0</span>.0% CCW\nVoltage <span class=\"o\">[</span>V<span class=\"o\">]</span>  <span class=\"m\">7</span>.2     Temperature <span class=\"o\">[</span>F<span class=\"o\">]</span>:  <span class=\"m\">82</span>.4\n--------------------------------------------------\nServo: <span class=\"m\">4</span>          HW Error: <span class=\"m\">0</span>\nPosition <span class=\"o\">[</span>deg<span class=\"o\">]</span>: <span class=\"m\">149</span>.6  Load:   <span class=\"m\">0</span>.0% CCW\nVoltage <span class=\"o\">[</span>V<span class=\"o\">]</span>  <span class=\"m\">7</span>.3     Temperature <span class=\"o\">[</span>F<span class=\"o\">]</span>:  <span class=\"m\">80</span>.6\n--------------------------------------------------\nServo: <span class=\"m\">5</span>          HW Error: <span class=\"m\">0</span>\nPosition <span class=\"o\">[</span>deg<span class=\"o\">]</span>: <span class=\"m\">271</span>.6  Load:   <span class=\"m\">0</span>.0% CCW\nVoltage <span class=\"o\">[</span>V<span class=\"o\">]</span>  <span class=\"m\">7</span>.2     Temperature <span class=\"o\">[</span>F<span class=\"o\">]</span>:  <span class=\"m\">80</span>.6\n--------------------------------------------------\nServo: <span class=\"m\">6</span>          HW Error: <span class=\"m\">0</span>\nPosition <span class=\"o\">[</span>deg<span class=\"o\">]</span>: <span class=\"m\">100</span>.3  Load:   <span class=\"m\">0</span>.0% CCW\nVoltage <span class=\"o\">[</span>V<span class=\"o\">]</span>  <span class=\"m\">7</span>.4     Temperature <span class=\"o\">[</span>F<span class=\"o\">]</span>:  <span class=\"m\">82</span>.4\n--------------------------------------------------\nServo: <span class=\"m\">7</span>          HW Error: <span class=\"m\">0</span>\nPosition <span class=\"o\">[</span>deg<span class=\"o\">]</span>: <span class=\"m\">149</span>.6  Load:   <span class=\"m\">0</span>.0% CCW\nVoltage <span class=\"o\">[</span>V<span class=\"o\">]</span>  <span class=\"m\">7</span>.2     Temperature <span class=\"o\">[</span>F<span class=\"o\">]</span>:  <span class=\"m\">80</span>.6\n--------------------------------------------------\nServo: <span class=\"m\">8</span>          HW Error: <span class=\"m\">0</span>\nPosition <span class=\"o\">[</span>deg<span class=\"o\">]</span>: <span class=\"m\">269</span>.8  Load:   <span class=\"m\">0</span>.0% CCW\nVoltage <span class=\"o\">[</span>V<span class=\"o\">]</span>  <span class=\"m\">7</span>.1     Temperature <span class=\"o\">[</span>F<span class=\"o\">]</span>:  <span class=\"m\">78</span>.8\n--------------------------------------------------\nServo: <span class=\"m\">9</span>          HW Error: <span class=\"m\">0</span>\nPosition <span class=\"o\">[</span>deg<span class=\"o\">]</span>:  <span class=\"m\">99</span>.4  Load:   <span class=\"m\">0</span>.8% CCW\nVoltage <span class=\"o\">[</span>V<span class=\"o\">]</span>  <span class=\"m\">7</span>.2     Temperature <span class=\"o\">[</span>F<span class=\"o\">]</span>:  <span class=\"m\">82</span>.4\n--------------------------------------------------\nServo: <span class=\"m\">10</span>          HW Error: <span class=\"m\">0</span>\nPosition <span class=\"o\">[</span>deg<span class=\"o\">]</span>: <span class=\"m\">149</span>.9  Load:   <span class=\"m\">0</span>.0% CCW\nVoltage <span class=\"o\">[</span>V<span class=\"o\">]</span>  <span class=\"m\">7</span>.1     Temperature <span class=\"o\">[</span>F<span class=\"o\">]</span>:  <span class=\"m\">80</span>.6\n--------------------------------------------------\nServo: <span class=\"m\">11</span>          HW Error: <span class=\"m\">0</span>\nPosition <span class=\"o\">[</span>deg<span class=\"o\">]</span>: <span class=\"m\">270</span>.1  Load:   <span class=\"m\">0</span>.0% CCW\nVoltage <span class=\"o\">[</span>V<span class=\"o\">]</span>  <span class=\"m\">7</span>.2     Temperature <span class=\"o\">[</span>F<span class=\"o\">]</span>:  <span class=\"m\">80</span>.6\n--------------------------------------------------\nServo: <span class=\"m\">12</span>          HW Error: <span class=\"m\">0</span>\nPosition <span class=\"o\">[</span>deg<span class=\"o\">]</span>:  <span class=\"m\">99</span>.4  Load:   <span class=\"m\">0</span>.0% CCW\nVoltage <span class=\"o\">[</span>V<span class=\"o\">]</span>  <span class=\"m\">7</span>.1     Temperature <span class=\"o\">[</span>F<span class=\"o\">]</span>:  <span class=\"m\">84</span>.2\n--------------------------------------------------\n</pre>\n<h2>History</h2>\n<h3>RC Servos</h3>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2a824426d1b270a0984195a9b26e02eb0df8abb9/706963732f72632d7370696465722e6a7067\" width=\"400px\">\n<p>This was the original version, shown above around Aug 2016. It used toy RC\nservos (9 g's), they didn't work that great. I think I lost the code, because\nI can't find it.</p>\n<h3>XL-320 Servos</h3>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9f2b251b92381bacb1502c94349f92fcb17c15fa/706963732f786c2d3332302d7370696465722e6a7067\" width=\"400px\">\n<p><strong>work on this robot has stopped</strong> This worked OK, see the movie above.\nThe servos were not very strong and the lego like rivets were kind of\na pain to use. The rivets also didn't hold things together very tight\nso there was a lot of wiggle. Overall, I prefer nuts/bolts.</p>\n<h3>AX-12A Servos</h3>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2ac1f0506ec9bc3de50392d792f861ecb75953e6/706963732f61782d3132612d7370696465722e6a7067\" width=\"400px\">\n<p><strong>this is the current robot I am focusing on</strong> All of the current code\nis designed for this robot. I <em>sort of</em> maintain backwards compatability\nwith the XL-320, but I don't guarentee it.</p>\n<h1>ToDo</h1>\n<ul>\n<li>change more return values to <code>tuples</code> instead of <code>lists</code> for performance</li>\n<li>do CM shifting</li>\n<li>make generic, so I can do 6 or 8 legs</li>\n<li>flush out the config file better, I have hard coded too many things</li>\n</ul>\n<h1>Change Log</h1>\n<table>\n<thead>\n<tr>\n<th>Date</th>\n<th>Version</th>\n<th>Notes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2018-11-27</td>\n<td>0.6.0</td>\n<td>Reorg'd, moved robots to own repo</td>\n</tr>\n<tr>\n<td>2017-12-25</td>\n<td>0.5.0</td>\n<td>Clean up and reorg, removed unnecessary libraries</td>\n</tr>\n<tr>\n<td>2017-06-07</td>\n<td>0.4.1</td>\n<td>broke out into package and published to PyPi</td>\n</tr>\n<tr>\n<td>2016-08-10</td>\n<td>0.0.1</td>\n<td>init</td>\n</tr></tbody></table>\n<h1>MIT Software License</h1>\n<p><strong>Copyright (c) 2016 Kevin J. Walchko</strong></p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>\n\n          </div>"}, "last_serial": 6560574, "releases": {"0.5.1": [{"comment_text": "", "digests": {"md5": "6e3876ca2d5c248ad3d59fff405c0bcf", "sha256": "37d777ddf8546a2fe9d3767b9e0ba3fd30b233a17729df42ec391dae80813f26"}, "downloads": -1, "filename": "multiped-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6e3876ca2d5c248ad3d59fff405c0bcf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 26693, "upload_time": "2020-02-03T02:16:51", "upload_time_iso_8601": "2020-02-03T02:16:51.894539Z", "url": "https://files.pythonhosted.org/packages/c0/ec/9957c7aeba22346c48982664ebfc71dd1c0515a4ddef4fda59d1d76a1b23/multiped-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "55037b3b2d394ed89de11f8ae3f21d8d", "sha256": "931d037adead8ff04d5ac9bafaaf9c591639dfa5634189a06564f1f673f3237d"}, "downloads": -1, "filename": "multiped-0.5.1.tar.gz", "has_sig": false, "md5_digest": "55037b3b2d394ed89de11f8ae3f21d8d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23786, "upload_time": "2020-02-03T02:16:54", "upload_time_iso_8601": "2020-02-03T02:16:54.117511Z", "url": "https://files.pythonhosted.org/packages/29/1a/77c122df3d451bf454bb810ac42e3f0d9bb744c3ffe631d76940f496b171/multiped-0.5.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6e3876ca2d5c248ad3d59fff405c0bcf", "sha256": "37d777ddf8546a2fe9d3767b9e0ba3fd30b233a17729df42ec391dae80813f26"}, "downloads": -1, "filename": "multiped-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6e3876ca2d5c248ad3d59fff405c0bcf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 26693, "upload_time": "2020-02-03T02:16:51", "upload_time_iso_8601": "2020-02-03T02:16:51.894539Z", "url": "https://files.pythonhosted.org/packages/c0/ec/9957c7aeba22346c48982664ebfc71dd1c0515a4ddef4fda59d1d76a1b23/multiped-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "55037b3b2d394ed89de11f8ae3f21d8d", "sha256": "931d037adead8ff04d5ac9bafaaf9c591639dfa5634189a06564f1f673f3237d"}, "downloads": -1, "filename": "multiped-0.5.1.tar.gz", "has_sig": false, "md5_digest": "55037b3b2d394ed89de11f8ae3f21d8d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23786, "upload_time": "2020-02-03T02:16:54", "upload_time_iso_8601": "2020-02-03T02:16:54.117511Z", "url": "https://files.pythonhosted.org/packages/29/1a/77c122df3d451bf454bb810ac42e3f0d9bb744c3ffe631d76940f496b171/multiped-0.5.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:23 2020"}