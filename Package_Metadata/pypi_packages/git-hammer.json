{"info": {"author": "Jaakko Kangasharju", "author_email": "ashar@iki.fi", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Git Hammer\n\n[![Build Status](https://travis-ci.com/asharov/git-hammer.svg?branch=master)](https://travis-ci.com/asharov/git-hammer)\n[![codecov](https://codecov.io/gh/asharov/git-hammer/branch/master/graph/badge.svg)](https://codecov.io/gh/asharov/git-hammer)\n[![PyPI](https://img.shields.io/pypi/v/git-hammer)](https://pypi.org/project/git-hammer/)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n\n---\nNOTE: If you have been using Git Hammer prior to December 4th,\n2019, your database is obsolete, and unfortunately you will need\nto rebuild it if you want to use the current version. This is\nbecause a necessary change in the database schema could not be\nautomatically migrated from the old version. Git Hammer has\nnow been set up to support database migrations better, and this\nsituation hopefully won't happen again. My apologies for the\ninconvenience.\n---\n\nGit Hammer is a statistics tool for projects in git repositories.\nIts major feature is tracking the number of lines authored by\neach person for every commit, but it currently includes some\nother useful statistics as well, and the data that it collects\ncould be used in multiple new ways as well.\n\nGit Hammer is under active maintenance. New features appear when\na need or desire for them exists. If Git Hammer lacks some\nfeature you would like, all kinds of contributions are welcome,\nfrom simple feature suggestions to complete pull requests\nimplementing the feature.\n\n## Setup\n\nBy default, Git Hammer stores the historical information from\nthe repository in an SQLite database file in the current\ndirectory. If you wish to change this default, set the\n`DATABASE_URL` environment variable to a database URL\naccording to the [SQLAlchemy engine documentation](https://docs.sqlalchemy.org/en/latest/core/engines.html).\nThis database will be created if it does not already exist.\nNote that if you wish to use a database other than SQLite,\nyou may need to install the appropriate Python module to\nconnect to the database.\n\nYou will need Python 3, at least version 3.5. It is a good\nidea to set up a virtual environment, like this:\n```bash\npython3 -m venv venv\nsource venv/bin/activate\n```\nRun these commands wherever you want to run Git Hammer. If\nyou only want to use Git Hammer, you can install it with\n`pip`:\n```bash\npip install git-hammer\n```\nIf you want to use the latest development version or\ncontribute to Git Hammer development, you need to clone\nthis repository and run\n```bash\npip install -r requirements.txt\n```\nin the directory where you cloned Git Hammer (in this\ncase you should create the virtual environment above in\nthat directory as well). The rest of the commands below\nassume that one of these has been done.\n\n## Creating a Project\n\nNow pick some git repository to run Git Hammer on. The examples\nbelow use a hypothetical project called \"baffle\". You should\nreplace the name with your own.\n\n```bash\npython -m githammer init-project baffle ~/projects/baffle\n```\nThis will create the database containing the project baffle\nfrom the repository directory (here `~/projects/baffle`;\nreplace that with the path to your repository). Git Hammer\nwill print out a progress report while it goes through all\nthe commits in the repository.\n\nUsually, you want your main development branch to be checked\nout in the repository, and not change the checked-out branch\nwhen updating Git Hammer data. This makes the statistics more\nrelevant for the whole development team.\n\nWhen the repository gets new development, first update the\ncode in the repository to the latest version, and then run\n```bash\npython -m githammer update-project baffle\n```\nThis will process all the new commits that were not yet seen\ninto the database.\n\nIf the repository is very old, with much history, you might\nnot be interested in capturing all of it. `init-project`\nhas the option `--earliest-commit-date` that provides a date\nso that commits prior to that date are not included. This\nwould be used like\n```bash\npython -m githammer init-project baffle ~/projects/baffle --earliest-commit-date 2018-01-01\n```\nIt is currently not possible to later add commits that were\nexcluded by date when the repository was added.\n\n## Showing Statistics\n\nAfter the project has been initialized and the repository added,\nyou can show some information on it. First try out\n```bash\npython -m githammer summary baffle\n```\nThis will print out three tables: The number of commits for\neach person, the number of lines of code written by each\nperson in the head version, and the number of tests written\nby each person in the head version. This last is only printed\nif the repository configuration includes test recognition (see\nbelow).\n\nThere are a few graphs that Git Hammer can display. To see the\ntypes of supported graphs, enter\n```bash\npython -m githammer graph --help\n```\nThe graphs are\n\nType | Description\n-----|------------\nline-count    | Number of lines in the project over time\nline-author-count | Same as above, except split per author\ntest-count | Number of tests in the project over time\ntest-author-count | Same as above, except split per author\nday-of-week | A histogram showing the number of commits for each day of the week\ntime-of-day | A histogram showing the number of commits for each hour of the day\n\n## Configuring Sources and Tests\n\nBy default, Git Hammer assumes that every file in the repository\nis a source file and that there are no tests. This can be\nmodified by creating a configuration file. The configuration\nfile is JSON having some predefined keys:\n```json\n{\n  \"sourceFiles\": [\n    \"Sources/**/*.py\",\n    \"Tests/**/*.py\",\n    ...\n  ],\n  \"excludedSourceFiles\": [\n    \"Sources/Contrib/**\"\n  ],\n  \"testFiles\": [\n    \"Tests/**/*.py\"\n  ],\n  \"testLineRegex\": \"def test_\"\n}\n```\n\nHere, `sourceFiles` is a list of patterns that match the source\nfiles. Any file not matching one of these patterns is not\nconsidered by Git Hammer. If `sourceFiles` captures too many\nfiles, for instance autogenerated sources, `excludedSourceFiles`\nis a list of patterns that will not be considered source even\nif they match some `sourceFiles` pattern.\n\nTo include test counts, `testFiles` needs to be specified. This\nis again, a list of patterns matching files that contain tests\n(it is up to you if you wish to define this to mean unit tests,\nintegration tests, UI tests, etc.). Git Hammer will look inside\neach of the test files. Any line matching the Python regular\nexpression `testLineRegex` is counted as one test. So\n`testLineRegex` should typically match whatever acts as the\nheader of a test. Here, it is the definition of a function\nnamed starting with `test_`. Other projects, and especially\nother languages, will have different conventions.\n\nAll the file name patterns above (`sourceFiles`,\n`excludedSourceFiles`, `testFiles`) are glob patterns as\ndefined by the\n[globber library](https://github.com/asharov/globber).\n\nThe configuration file can be given as an option to the\n`init-project` command:\n```bash\npython -m githammer init-project baffle ~/projects/baffle --configuration ./baffle-config.json\n```\nIf the `--configuration` option is not given, but the repository\ncontains a file named `git-hammer-config.json`, this file will\nbe read as the configuration. This way you can keep the Git\nHammer configuration for a repository in that repository.\n\nNote: The configuration file path, as well as the repository\npath, will be stored in the database, so they should not be\nmoved. If the configuration changes, data that was already\nin the database will not be reprocessed with the new\nconfiguration.\n\nThere is also a command to check what are the effects of a\nconfiguration. Run\n```bash\npython -m githammer list-sources ~/projects/baffle --configuration ./baffle-config.json\n```\nto print out a list of all files considered source or test files,\nand for each test file, the lines considered to be tests. A missing\n`--configuration` option is treated in the same way as with\n`init-project` above.\n\nA partial output of the `list-sources` command on the Git Hammer\nrepository looks like this:\n```\nS: githammer/dbtypes.py\nS: githammer/frequency.py\nS: githammer/hammer.py\nT: tests/__init__.py\nT: tests/check_regression.py\nT: tests/hammer_test.py\nT: tests/test_init.py\n|---    def test_plain_init_does_not_create_database(self):\n|---    def test_update_fails_when_database_not_created(self):\n```\nSource files are marked with `S`, test files with `T`, and after\neach test file, its test lines are printed indented with `|---`.\n\n## Multi-Repository Projects\n\nSometimes, a team works on multiple repositories that all still\nbelong to the same project. For instance, a piece of functionality\nmay be better to split off into a library in an independent\nrepository. Git Hammer supports such projects by not limiting\nthe project data to a single repository.\n\nTo add another repository to an existing project, just use\n`add-repository`:\n```bash\npython -m githammer add-repository baffle ~/projects/baffle-common\n```\nThis will process the new repository, adding it to the project\ndatabase. After this, any summary information will include\ndata from all repositories of the project. Like `init-project`,\n`add-repository` also accepts the `--configuration` and\n`--earliest-commit-date` options with the same semantics for\nthe added repository.\n\n## Database Migrations\n\nIf you update Git Hammer, it is possible that the database\nschema is updated in the new version. This means that you will\nneed to migrate any existing databases to the latest version.\nMigration is performed by running\n```bash\nHAMMER_DATABASE_URL=<URL of database to migrate> alembic upgrade head\n```\n(If you haven't installed Git Hammer with `pip`, run this command\nin the project directory and add `PYTHONPATH=.` at the beginning.)\n\nIt is safe to run this even if the database schema has not changed\nin the update, so there is no need to try and figure that out before\nrunning the migration.\n\n## License\n\nGit Hammer is licensed under the Apache Software License,\nversion 2.0. See the LICENSE file for precise license terms\nand conditions.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/asharov/git-hammer", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "git-hammer", "package_url": "https://pypi.org/project/git-hammer/", "platform": "", "project_url": "https://pypi.org/project/git-hammer/", "project_urls": {"Homepage": "https://github.com/asharov/git-hammer"}, "release_url": "https://pypi.org/project/git-hammer/0.3.1/", "requires_dist": ["gitpython", "sqlalchemy", "sqlalchemy-utils", "matplotlib", "python-dateutil", "globber", "beautifultable"], "requires_python": ">=3.5", "summary": "Statistics tool for git repositories", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Git Hammer</h1>\n<p><a href=\"https://travis-ci.com/asharov/git-hammer\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d13ca000af5944c5726375aa46e6abcd14376a7b/68747470733a2f2f7472617669732d63692e636f6d2f61736861726f762f6769742d68616d6d65722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/asharov/git-hammer\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fcdd54fe79275bbb162b63f677c37169ea361c6f/68747470733a2f2f636f6465636f762e696f2f67682f61736861726f762f6769742d68616d6d65722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.org/project/git-hammer/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fed50caa798b4843d26096dba7d65503cad4a994/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6769742d68616d6d6572\"></a>\n<a href=\"https://opensource.org/licenses/Apache-2.0\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b97ca76cf5d8fd16c7bc4731270e0bbe53df7aa1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667\"></a></p>\n<hr>\n<h2>NOTE: If you have been using Git Hammer prior to December 4th,\n2019, your database is obsolete, and unfortunately you will need\nto rebuild it if you want to use the current version. This is\nbecause a necessary change in the database schema could not be\nautomatically migrated from the old version. Git Hammer has\nnow been set up to support database migrations better, and this\nsituation hopefully won't happen again. My apologies for the\ninconvenience.</h2>\n<p>Git Hammer is a statistics tool for projects in git repositories.\nIts major feature is tracking the number of lines authored by\neach person for every commit, but it currently includes some\nother useful statistics as well, and the data that it collects\ncould be used in multiple new ways as well.</p>\n<p>Git Hammer is under active maintenance. New features appear when\na need or desire for them exists. If Git Hammer lacks some\nfeature you would like, all kinds of contributions are welcome,\nfrom simple feature suggestions to complete pull requests\nimplementing the feature.</p>\n<h2>Setup</h2>\n<p>By default, Git Hammer stores the historical information from\nthe repository in an SQLite database file in the current\ndirectory. If you wish to change this default, set the\n<code>DATABASE_URL</code> environment variable to a database URL\naccording to the <a href=\"https://docs.sqlalchemy.org/en/latest/core/engines.html\" rel=\"nofollow\">SQLAlchemy engine documentation</a>.\nThis database will be created if it does not already exist.\nNote that if you wish to use a database other than SQLite,\nyou may need to install the appropriate Python module to\nconnect to the database.</p>\n<p>You will need Python 3, at least version 3.5. It is a good\nidea to set up a virtual environment, like this:</p>\n<pre>python3 -m venv venv\n<span class=\"nb\">source</span> venv/bin/activate\n</pre>\n<p>Run these commands wherever you want to run Git Hammer. If\nyou only want to use Git Hammer, you can install it with\n<code>pip</code>:</p>\n<pre>pip install git-hammer\n</pre>\n<p>If you want to use the latest development version or\ncontribute to Git Hammer development, you need to clone\nthis repository and run</p>\n<pre>pip install -r requirements.txt\n</pre>\n<p>in the directory where you cloned Git Hammer (in this\ncase you should create the virtual environment above in\nthat directory as well). The rest of the commands below\nassume that one of these has been done.</p>\n<h2>Creating a Project</h2>\n<p>Now pick some git repository to run Git Hammer on. The examples\nbelow use a hypothetical project called \"baffle\". You should\nreplace the name with your own.</p>\n<pre>python -m githammer init-project baffle ~/projects/baffle\n</pre>\n<p>This will create the database containing the project baffle\nfrom the repository directory (here <code>~/projects/baffle</code>;\nreplace that with the path to your repository). Git Hammer\nwill print out a progress report while it goes through all\nthe commits in the repository.</p>\n<p>Usually, you want your main development branch to be checked\nout in the repository, and not change the checked-out branch\nwhen updating Git Hammer data. This makes the statistics more\nrelevant for the whole development team.</p>\n<p>When the repository gets new development, first update the\ncode in the repository to the latest version, and then run</p>\n<pre>python -m githammer update-project baffle\n</pre>\n<p>This will process all the new commits that were not yet seen\ninto the database.</p>\n<p>If the repository is very old, with much history, you might\nnot be interested in capturing all of it. <code>init-project</code>\nhas the option <code>--earliest-commit-date</code> that provides a date\nso that commits prior to that date are not included. This\nwould be used like</p>\n<pre>python -m githammer init-project baffle ~/projects/baffle --earliest-commit-date <span class=\"m\">2018</span>-01-01\n</pre>\n<p>It is currently not possible to later add commits that were\nexcluded by date when the repository was added.</p>\n<h2>Showing Statistics</h2>\n<p>After the project has been initialized and the repository added,\nyou can show some information on it. First try out</p>\n<pre>python -m githammer summary baffle\n</pre>\n<p>This will print out three tables: The number of commits for\neach person, the number of lines of code written by each\nperson in the head version, and the number of tests written\nby each person in the head version. This last is only printed\nif the repository configuration includes test recognition (see\nbelow).</p>\n<p>There are a few graphs that Git Hammer can display. To see the\ntypes of supported graphs, enter</p>\n<pre>python -m githammer graph --help\n</pre>\n<p>The graphs are</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>line-count</td>\n<td>Number of lines in the project over time</td>\n</tr>\n<tr>\n<td>line-author-count</td>\n<td>Same as above, except split per author</td>\n</tr>\n<tr>\n<td>test-count</td>\n<td>Number of tests in the project over time</td>\n</tr>\n<tr>\n<td>test-author-count</td>\n<td>Same as above, except split per author</td>\n</tr>\n<tr>\n<td>day-of-week</td>\n<td>A histogram showing the number of commits for each day of the week</td>\n</tr>\n<tr>\n<td>time-of-day</td>\n<td>A histogram showing the number of commits for each hour of the day</td>\n</tr></tbody></table>\n<h2>Configuring Sources and Tests</h2>\n<p>By default, Git Hammer assumes that every file in the repository\nis a source file and that there are no tests. This can be\nmodified by creating a configuration file. The configuration\nfile is JSON having some predefined keys:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"sourceFiles\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"Sources/**/*.py\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"Tests/**/*.py\"</span><span class=\"p\">,</span>\n    <span class=\"err\">...</span>\n  <span class=\"p\">],</span>\n  <span class=\"nt\">\"excludedSourceFiles\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"Sources/Contrib/**\"</span>\n  <span class=\"p\">],</span>\n  <span class=\"nt\">\"testFiles\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"Tests/**/*.py\"</span>\n  <span class=\"p\">],</span>\n  <span class=\"nt\">\"testLineRegex\"</span><span class=\"p\">:</span> <span class=\"s2\">\"def test_\"</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Here, <code>sourceFiles</code> is a list of patterns that match the source\nfiles. Any file not matching one of these patterns is not\nconsidered by Git Hammer. If <code>sourceFiles</code> captures too many\nfiles, for instance autogenerated sources, <code>excludedSourceFiles</code>\nis a list of patterns that will not be considered source even\nif they match some <code>sourceFiles</code> pattern.</p>\n<p>To include test counts, <code>testFiles</code> needs to be specified. This\nis again, a list of patterns matching files that contain tests\n(it is up to you if you wish to define this to mean unit tests,\nintegration tests, UI tests, etc.). Git Hammer will look inside\neach of the test files. Any line matching the Python regular\nexpression <code>testLineRegex</code> is counted as one test. So\n<code>testLineRegex</code> should typically match whatever acts as the\nheader of a test. Here, it is the definition of a function\nnamed starting with <code>test_</code>. Other projects, and especially\nother languages, will have different conventions.</p>\n<p>All the file name patterns above (<code>sourceFiles</code>,\n<code>excludedSourceFiles</code>, <code>testFiles</code>) are glob patterns as\ndefined by the\n<a href=\"https://github.com/asharov/globber\" rel=\"nofollow\">globber library</a>.</p>\n<p>The configuration file can be given as an option to the\n<code>init-project</code> command:</p>\n<pre>python -m githammer init-project baffle ~/projects/baffle --configuration ./baffle-config.json\n</pre>\n<p>If the <code>--configuration</code> option is not given, but the repository\ncontains a file named <code>git-hammer-config.json</code>, this file will\nbe read as the configuration. This way you can keep the Git\nHammer configuration for a repository in that repository.</p>\n<p>Note: The configuration file path, as well as the repository\npath, will be stored in the database, so they should not be\nmoved. If the configuration changes, data that was already\nin the database will not be reprocessed with the new\nconfiguration.</p>\n<p>There is also a command to check what are the effects of a\nconfiguration. Run</p>\n<pre>python -m githammer list-sources ~/projects/baffle --configuration ./baffle-config.json\n</pre>\n<p>to print out a list of all files considered source or test files,\nand for each test file, the lines considered to be tests. A missing\n<code>--configuration</code> option is treated in the same way as with\n<code>init-project</code> above.</p>\n<p>A partial output of the <code>list-sources</code> command on the Git Hammer\nrepository looks like this:</p>\n<pre><code>S: githammer/dbtypes.py\nS: githammer/frequency.py\nS: githammer/hammer.py\nT: tests/__init__.py\nT: tests/check_regression.py\nT: tests/hammer_test.py\nT: tests/test_init.py\n|---    def test_plain_init_does_not_create_database(self):\n|---    def test_update_fails_when_database_not_created(self):\n</code></pre>\n<p>Source files are marked with <code>S</code>, test files with <code>T</code>, and after\neach test file, its test lines are printed indented with <code>|---</code>.</p>\n<h2>Multi-Repository Projects</h2>\n<p>Sometimes, a team works on multiple repositories that all still\nbelong to the same project. For instance, a piece of functionality\nmay be better to split off into a library in an independent\nrepository. Git Hammer supports such projects by not limiting\nthe project data to a single repository.</p>\n<p>To add another repository to an existing project, just use\n<code>add-repository</code>:</p>\n<pre>python -m githammer add-repository baffle ~/projects/baffle-common\n</pre>\n<p>This will process the new repository, adding it to the project\ndatabase. After this, any summary information will include\ndata from all repositories of the project. Like <code>init-project</code>,\n<code>add-repository</code> also accepts the <code>--configuration</code> and\n<code>--earliest-commit-date</code> options with the same semantics for\nthe added repository.</p>\n<h2>Database Migrations</h2>\n<p>If you update Git Hammer, it is possible that the database\nschema is updated in the new version. This means that you will\nneed to migrate any existing databases to the latest version.\nMigration is performed by running</p>\n<pre><span class=\"nv\">HAMMER_DATABASE_URL</span><span class=\"o\">=</span>&lt;URL of database to migrate&gt; alembic upgrade head\n</pre>\n<p>(If you haven't installed Git Hammer with <code>pip</code>, run this command\nin the project directory and add <code>PYTHONPATH=.</code> at the beginning.)</p>\n<p>It is safe to run this even if the database schema has not changed\nin the update, so there is no need to try and figure that out before\nrunning the migration.</p>\n<h2>License</h2>\n<p>Git Hammer is licensed under the Apache Software License,\nversion 2.0. See the LICENSE file for precise license terms\nand conditions.</p>\n\n          </div>"}, "last_serial": 6720364, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "656eb00bd6a123cbabeaf306a70cba4e", "sha256": "da9debac1aa143a9bd6540972f7e327ef30419fe1a487e59e34e98beb717a17e"}, "downloads": -1, "filename": "git_hammer-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "656eb00bd6a123cbabeaf306a70cba4e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 21179, "upload_time": "2019-12-04T15:58:32", "upload_time_iso_8601": "2019-12-04T15:58:32.116866Z", "url": "https://files.pythonhosted.org/packages/1f/90/2dea0abbfdb451fbbff0876ceaf8830576981b4b32805ff63816fbb3d467/git_hammer-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "75273c2fb70c95e57ace583a3cd247d6", "sha256": "2cb5ce200560376804e04ed24e36d7da5a8f7c11526391440e9603a2c445096b"}, "downloads": -1, "filename": "git-hammer-0.1.1.tar.gz", "has_sig": false, "md5_digest": "75273c2fb70c95e57ace583a3cd247d6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 12943, "upload_time": "2019-12-04T15:58:33", "upload_time_iso_8601": "2019-12-04T15:58:33.648605Z", "url": "https://files.pythonhosted.org/packages/70/45/8b44c0cf581e6267f99a031c3dc6e04ae0cca50ef8df3d3a36d67250d514/git-hammer-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "2cb14ddbdcbf15617b0a9cb6199af298", "sha256": "f5e06ff4ff3fef34194cbc5de487a3930df59d1aa7f05d130d7e151110c09bdb"}, "downloads": -1, "filename": "git_hammer-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2cb14ddbdcbf15617b0a9cb6199af298", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 22717, "upload_time": "2019-12-17T16:15:27", "upload_time_iso_8601": "2019-12-17T16:15:27.600406Z", "url": "https://files.pythonhosted.org/packages/95/88/70b283d2adaf98cee1f0adebe5138b2115a8ab1cd319eb13dd6f26d974e1/git_hammer-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73bac05e4b5825e1b03db817a2b7b2a8", "sha256": "c9411501de0a1bc5fefd71d76d209a202bc8ce29a3df525164eb051419c1db21"}, "downloads": -1, "filename": "git-hammer-0.2.0.tar.gz", "has_sig": false, "md5_digest": "73bac05e4b5825e1b03db817a2b7b2a8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 14212, "upload_time": "2019-12-17T16:15:28", "upload_time_iso_8601": "2019-12-17T16:15:28.911497Z", "url": "https://files.pythonhosted.org/packages/f4/51/542f1704fdce838c490594e7ed6df728069ace73f48870b00104d38a2eae/git-hammer-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "06f0528468cff7320d0d99c349baa5b0", "sha256": "26beb38ab83c6634ec699ea991f72eef48235b9147b842b917c47234ca5d656f"}, "downloads": -1, "filename": "git_hammer-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "06f0528468cff7320d0d99c349baa5b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 23633, "upload_time": "2020-01-13T09:03:40", "upload_time_iso_8601": "2020-01-13T09:03:40.173570Z", "url": "https://files.pythonhosted.org/packages/18/fa/d4174a9509f966a7cfac6af5410c4e7e4f240bf72dc1ab47e25415da461c/git_hammer-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5181a7d4c04118359ec9943f2d11e9e9", "sha256": "8a47db80cc1bdf4a3972a38df24d74852812f4c52b184f190693ce42c3c16273"}, "downloads": -1, "filename": "git-hammer-0.3.0.tar.gz", "has_sig": false, "md5_digest": "5181a7d4c04118359ec9943f2d11e9e9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 15156, "upload_time": "2020-01-13T09:03:41", "upload_time_iso_8601": "2020-01-13T09:03:41.500671Z", "url": "https://files.pythonhosted.org/packages/7c/c5/0bae5b934cedd9475bf3bd6a4f5247ab04d818d8ba660d4caeb60595f62e/git-hammer-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "016b1acc3cf6242fe18b37a904a7e8ad", "sha256": "787f3eea13c6a3171f0bd30196f7b8f6da0f81093cc7c79625c6d7155a510a4b"}, "downloads": -1, "filename": "git_hammer-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "016b1acc3cf6242fe18b37a904a7e8ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 23801, "upload_time": "2020-02-28T20:52:40", "upload_time_iso_8601": "2020-02-28T20:52:40.902697Z", "url": "https://files.pythonhosted.org/packages/ba/2f/67e1b2c36fa45e43f203b363fea0c326d7e489191c395474fae796bac52b/git_hammer-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1cd06391025f4514bcd6f68114d2b2e6", "sha256": "86b976c202ed613f2640c0e27ce358982170b55998c8503d70668ff6ac8c6c9a"}, "downloads": -1, "filename": "git-hammer-0.3.1.tar.gz", "has_sig": false, "md5_digest": "1cd06391025f4514bcd6f68114d2b2e6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 15314, "upload_time": "2020-02-28T20:52:42", "upload_time_iso_8601": "2020-02-28T20:52:42.006469Z", "url": "https://files.pythonhosted.org/packages/a3/27/0a50faf0030e6fcc0c7814ecc408033f12a137737b8fee959585a70d50c9/git-hammer-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "016b1acc3cf6242fe18b37a904a7e8ad", "sha256": "787f3eea13c6a3171f0bd30196f7b8f6da0f81093cc7c79625c6d7155a510a4b"}, "downloads": -1, "filename": "git_hammer-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "016b1acc3cf6242fe18b37a904a7e8ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 23801, "upload_time": "2020-02-28T20:52:40", "upload_time_iso_8601": "2020-02-28T20:52:40.902697Z", "url": "https://files.pythonhosted.org/packages/ba/2f/67e1b2c36fa45e43f203b363fea0c326d7e489191c395474fae796bac52b/git_hammer-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1cd06391025f4514bcd6f68114d2b2e6", "sha256": "86b976c202ed613f2640c0e27ce358982170b55998c8503d70668ff6ac8c6c9a"}, "downloads": -1, "filename": "git-hammer-0.3.1.tar.gz", "has_sig": false, "md5_digest": "1cd06391025f4514bcd6f68114d2b2e6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 15314, "upload_time": "2020-02-28T20:52:42", "upload_time_iso_8601": "2020-02-28T20:52:42.006469Z", "url": "https://files.pythonhosted.org/packages/a3/27/0a50faf0030e6fcc0c7814ecc408033f12a137737b8fee959585a70d50c9/git-hammer-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:03 2020"}