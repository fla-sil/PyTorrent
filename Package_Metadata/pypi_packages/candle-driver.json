{"info": {"author": "Jurgis Bal\u010di\u016bnas", "author_email": "chemicstry@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "\n# candle_driver\n\nPython wrapper for the candle (gs_usb) windows driver which is published [here](https://github.com/HubertD/cangaroo/tree/master/src/driver/CandleApiDriver/api).\n\nUsed to communicate with candleLight, [CANable](https://canable.io/) (with candleLight [firmware](https://github.com/HubertD/candleLight_fw)) CAN-USB adapters.\n\n## Example usage\n\n```python\nimport candle_driver\n\n# lists all available candle devices\ndevices = candle_driver.list_devices()\n\nif not len(devices):\n  print('No candle devices found.')\n  exit()\n\nprint('Found {} candle devices.'.format(len(devices)))\n\n# use first availabel device\ndevice = devices[0]\n\nprint('Device path: {}'.format(device.path()))\nprint('Device name: {}'.format(device.name()))\nprint('Device channels: {}'.format(device.channel_count()))\n\n# open device (blocks other processes from using it)\ndevice.open()\n\nprint('Device timestamp: %d' % device.timestamp()) # in usec\n\n# open first channel\nch = device.channel(0)\n\nch.set_bitrate(1000000)\n# or\n# ch.set_timings(prop_seg=1, phase_seg1=12, phase_seg2=2, sjw=1, brp=3)\n\n# start receiving data\nch.start()\n\n# normal frame\nch.write(10, b'abcdefgh')\n# extended frame\nch.write(10235 | candle_driver.CANDLE_ID_EXTENDED, b'abcdefgh')\n\n# wait 1000ms for data\ntry:\n  frame_type, can_id, can_data, extended, ts = ch.read(1000)\n  print('Received {} from ID {} at {}'.format(can_data, can_id, ts))\nexcept TimeoutError:\n  print('CAN read timeout')\n\n# close everything\nch.stop()\ndevice.close()\n```\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details.\n\nWindows C driver is licensed under the GPLv3 License - see the [LICENSE](candle_api/LICENSE) file for details.\n\n## Acknowledgments\n\n* [Hubert Denkmair](https://github.com/HubertD) for the Windows C driver.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/chemicstry/candle_driver", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "candle-driver", "package_url": "https://pypi.org/project/candle-driver/", "platform": "", "project_url": "https://pypi.org/project/candle-driver/", "project_urls": {"Homepage": "https://github.com/chemicstry/candle_driver"}, "release_url": "https://pypi.org/project/candle-driver/0.1.3/", "requires_dist": null, "requires_python": ">=3.6.0", "summary": "Python wrapper for the candle (gs_usb) windows driver.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>candle_driver</h1>\n<p>Python wrapper for the candle (gs_usb) windows driver which is published <a href=\"https://github.com/HubertD/cangaroo/tree/master/src/driver/CandleApiDriver/api\" rel=\"nofollow\">here</a>.</p>\n<p>Used to communicate with candleLight, <a href=\"https://canable.io/\" rel=\"nofollow\">CANable</a> (with candleLight <a href=\"https://github.com/HubertD/candleLight_fw\" rel=\"nofollow\">firmware</a>) CAN-USB adapters.</p>\n<h2>Example usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">candle_driver</span>\n\n<span class=\"c1\"># lists all available candle devices</span>\n<span class=\"n\">devices</span> <span class=\"o\">=</span> <span class=\"n\">candle_driver</span><span class=\"o\">.</span><span class=\"n\">list_devices</span><span class=\"p\">()</span>\n\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">devices</span><span class=\"p\">):</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'No candle devices found.'</span><span class=\"p\">)</span>\n  <span class=\"n\">exit</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Found </span><span class=\"si\">{}</span><span class=\"s1\"> candle devices.'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">devices</span><span class=\"p\">)))</span>\n\n<span class=\"c1\"># use first availabel device</span>\n<span class=\"n\">device</span> <span class=\"o\">=</span> <span class=\"n\">devices</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Device path: </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Device name: </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Device channels: </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">channel_count</span><span class=\"p\">()))</span>\n\n<span class=\"c1\"># open device (blocks other processes from using it)</span>\n<span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Device timestamp: </span><span class=\"si\">%d</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">timestamp</span><span class=\"p\">())</span> <span class=\"c1\"># in usec</span>\n\n<span class=\"c1\"># open first channel</span>\n<span class=\"n\">ch</span> <span class=\"o\">=</span> <span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"n\">ch</span><span class=\"o\">.</span><span class=\"n\">set_bitrate</span><span class=\"p\">(</span><span class=\"mi\">1000000</span><span class=\"p\">)</span>\n<span class=\"c1\"># or</span>\n<span class=\"c1\"># ch.set_timings(prop_seg=1, phase_seg1=12, phase_seg2=2, sjw=1, brp=3)</span>\n\n<span class=\"c1\"># start receiving data</span>\n<span class=\"n\">ch</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># normal frame</span>\n<span class=\"n\">ch</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"sa\">b</span><span class=\"s1\">'abcdefgh'</span><span class=\"p\">)</span>\n<span class=\"c1\"># extended frame</span>\n<span class=\"n\">ch</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"mi\">10235</span> <span class=\"o\">|</span> <span class=\"n\">candle_driver</span><span class=\"o\">.</span><span class=\"n\">CANDLE_ID_EXTENDED</span><span class=\"p\">,</span> <span class=\"sa\">b</span><span class=\"s1\">'abcdefgh'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># wait 1000ms for data</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n  <span class=\"n\">frame_type</span><span class=\"p\">,</span> <span class=\"n\">can_id</span><span class=\"p\">,</span> <span class=\"n\">can_data</span><span class=\"p\">,</span> <span class=\"n\">extended</span><span class=\"p\">,</span> <span class=\"n\">ts</span> <span class=\"o\">=</span> <span class=\"n\">ch</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Received </span><span class=\"si\">{}</span><span class=\"s1\"> from ID </span><span class=\"si\">{}</span><span class=\"s1\"> at </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">can_data</span><span class=\"p\">,</span> <span class=\"n\">can_id</span><span class=\"p\">,</span> <span class=\"n\">ts</span><span class=\"p\">))</span>\n<span class=\"k\">except</span> <span class=\"ne\">TimeoutError</span><span class=\"p\">:</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'CAN read timeout'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># close everything</span>\n<span class=\"n\">ch</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n<span class=\"n\">device</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<h2>License</h2>\n<p>This project is licensed under the MIT License - see the <a href=\"LICENSE.md\" rel=\"nofollow\">LICENSE.md</a> file for details.</p>\n<p>Windows C driver is licensed under the GPLv3 License - see the <a href=\"candle_api/LICENSE\" rel=\"nofollow\">LICENSE</a> file for details.</p>\n<h2>Acknowledgments</h2>\n<ul>\n<li><a href=\"https://github.com/HubertD\" rel=\"nofollow\">Hubert Denkmair</a> for the Windows C driver.</li>\n</ul>\n\n          </div>"}, "last_serial": 5324247, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "26e0e42c00c3f5c7c7f63790921b6e98", "sha256": "55f3d666154680465a3b380cdee3978cf824d0b493fe0d1581b5a369e0916700"}, "downloads": -1, "filename": "candle_driver-0.1.0-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "26e0e42c00c3f5c7c7f63790921b6e98", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6.0", "size": 17283, "upload_time": "2019-05-24T14:43:07", "upload_time_iso_8601": "2019-05-24T14:43:07.273512Z", "url": "https://files.pythonhosted.org/packages/96/c8/b9706ba326e18e5bfa276b9c196ab2a7d278266b0f9453bb870391c958c9/candle_driver-0.1.0-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b5a2dc132217766d183480cf6cdb66c", "sha256": "8df8686a671026e8caca7bc1b765b33933bdeeeed92acf1d0e0c092fd1f8c04e"}, "downloads": -1, "filename": "candle_driver-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5b5a2dc132217766d183480cf6cdb66c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 12111, "upload_time": "2019-05-24T14:43:09", "upload_time_iso_8601": "2019-05-24T14:43:09.146175Z", "url": "https://files.pythonhosted.org/packages/e6/31/217d5553fccbf0c4ecc96eea9eccadcf57ab0b39cf6bd65717c58e560273/candle_driver-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ce98a238b4753a8d66982432f18112ee", "sha256": "fa8db3600843ba7da07dfed744bc8fa978450df1029080d93ca7eb2c01f08001"}, "downloads": -1, "filename": "candle_driver-0.1.1-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "ce98a238b4753a8d66982432f18112ee", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6.0", "size": 17351, "upload_time": "2019-05-24T14:54:49", "upload_time_iso_8601": "2019-05-24T14:54:49.040907Z", "url": "https://files.pythonhosted.org/packages/26/78/6fe3ad4adcc87627405a287b1ee1eb2044075302471eeadcf63271f797dc/candle_driver-0.1.1-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c42e64a81dfac51bd19012fe823e3d6d", "sha256": "c9c2c6bafee168b5be07fd428908a90e2c2cb60d4bb49e368523780b2b09d755"}, "downloads": -1, "filename": "candle_driver-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c42e64a81dfac51bd19012fe823e3d6d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 12198, "upload_time": "2019-05-24T14:54:50", "upload_time_iso_8601": "2019-05-24T14:54:50.600508Z", "url": "https://files.pythonhosted.org/packages/a9/ea/e1e776aa3d12d3a78100fb4a9dbafb557d3c53904a3bad82ef91e7bfd587/candle_driver-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "4425497bd97feae6e386de9d30b37f29", "sha256": "25bab5d6db6f952d327dceae561e04bd472c408a368988cb7bf925f797efcc09"}, "downloads": -1, "filename": "candle_driver-0.1.2-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "4425497bd97feae6e386de9d30b37f29", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6.0", "size": 17564, "upload_time": "2019-05-24T15:17:19", "upload_time_iso_8601": "2019-05-24T15:17:19.229542Z", "url": "https://files.pythonhosted.org/packages/35/9f/ebfdfd1468a2fb1fa13bbb8a0d307b578d7e1933e9535f5fb567b4ad9527/candle_driver-0.1.2-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "37384a4e4fe13d4a6939a0ca934378b9", "sha256": "19a07cfde622dfddfb907ba86b735cb4666bafb4e445fd2ca15daa174c0dbbcb"}, "downloads": -1, "filename": "candle_driver-0.1.2-py3.7-win-amd64.egg", "has_sig": false, "md5_digest": "37384a4e4fe13d4a6939a0ca934378b9", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.6.0", "size": 18000, "upload_time": "2019-05-27T23:16:19", "upload_time_iso_8601": "2019-05-27T23:16:19.543892Z", "url": "https://files.pythonhosted.org/packages/6e/64/9e89d040232b9219475e17af9c1fa3cb9af36228cff7a3bbf96edfcdf2f0/candle_driver-0.1.2-py3.7-win-amd64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "50f41d0cff3fbba9ab2c21bc364393ca", "sha256": "2cf039061da4b222306cb5623e409f1ab13a2881d9b2c3474c3bd7e8ffb08aed"}, "downloads": -1, "filename": "candle_driver-0.1.2.tar.gz", "has_sig": false, "md5_digest": "50f41d0cff3fbba9ab2c21bc364393ca", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 12370, "upload_time": "2019-05-24T15:17:20", "upload_time_iso_8601": "2019-05-24T15:17:20.395508Z", "url": "https://files.pythonhosted.org/packages/bf/63/9c943fae82b9f37b71b41077a49819a0c72af39345fc40c3ff649f4d2156/candle_driver-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "85a5187bf8ce97f5488b6fdacfe828bc", "sha256": "fce8de472490ed599e505edf306d2aeaa08a1e0a965f40191a928b8dc478c3fc"}, "downloads": -1, "filename": "candle_driver-0.1.3-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "85a5187bf8ce97f5488b6fdacfe828bc", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6.0", "size": 18113, "upload_time": "2019-05-27T23:16:17", "upload_time_iso_8601": "2019-05-27T23:16:17.870478Z", "url": "https://files.pythonhosted.org/packages/d1/05/8b9c71ccda8bb315541013352e410c3421f96954e4f21420a2059a9ccfa0/candle_driver-0.1.3-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99f0126fc4884ffddfb721ed3b8e6a8e", "sha256": "d5bd52de79d630b554e8da9ffa8c3a4c13a79722bea7970f149f0ca8e7bca655"}, "downloads": -1, "filename": "candle_driver-0.1.3.tar.gz", "has_sig": false, "md5_digest": "99f0126fc4884ffddfb721ed3b8e6a8e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 12912, "upload_time": "2019-05-27T23:17:04", "upload_time_iso_8601": "2019-05-27T23:17:04.675529Z", "url": "https://files.pythonhosted.org/packages/c2/2b/a160ad4a874a0e5db061b2607edad66cba3582085fa36f7768d0ca0c30aa/candle_driver-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "85a5187bf8ce97f5488b6fdacfe828bc", "sha256": "fce8de472490ed599e505edf306d2aeaa08a1e0a965f40191a928b8dc478c3fc"}, "downloads": -1, "filename": "candle_driver-0.1.3-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "85a5187bf8ce97f5488b6fdacfe828bc", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6.0", "size": 18113, "upload_time": "2019-05-27T23:16:17", "upload_time_iso_8601": "2019-05-27T23:16:17.870478Z", "url": "https://files.pythonhosted.org/packages/d1/05/8b9c71ccda8bb315541013352e410c3421f96954e4f21420a2059a9ccfa0/candle_driver-0.1.3-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99f0126fc4884ffddfb721ed3b8e6a8e", "sha256": "d5bd52de79d630b554e8da9ffa8c3a4c13a79722bea7970f149f0ca8e7bca655"}, "downloads": -1, "filename": "candle_driver-0.1.3.tar.gz", "has_sig": false, "md5_digest": "99f0126fc4884ffddfb721ed3b8e6a8e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 12912, "upload_time": "2019-05-27T23:17:04", "upload_time_iso_8601": "2019-05-27T23:17:04.675529Z", "url": "https://files.pythonhosted.org/packages/c2/2b/a160ad4a874a0e5db061b2607edad66cba3582085fa36f7768d0ca0c30aa/candle_driver-0.1.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:32 2020"}