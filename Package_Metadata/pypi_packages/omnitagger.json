{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "A CLI that beautifies your (old) music files, automatically adds metatags\nbased on fingerprinting, filename and metadata.\n\nHome-page: https://github.com/kkoomen/omnitagger\nAuthor: Kim Koomen\nAuthor-email: koomen@protonmail.com\nLicense: MIT\nDescription: # omnitagger\n        \n        [![Package Version](https://img.shields.io/pypi/v/omnitagger.svg)](https://pypi.python.org/pypi/omnitagger)\n        [![Code Climate](https://codeclimate.com/github/kkoomen/omnitagger/badges/gpa.svg)](https://codeclimate.com/github/kkoomen/omnitagger)\n        \n        Omnitagger is a CLI tool for beautifying your music files and adding metadata\n        automatically to your files. It provides fingerprint lookup via\n        [acoustid](https://github.com/beetbox/pyacoustid). Wether this is specified or\n        not: after that it will check for the `artist - title.{mp3,flac,ogg}` format.\n        If that pattern isn't found either, it will check the directory the file is in,\n        since it is a common case that when you download an album, the structure is:\n        \n        ```\n        artist-name/\n        \u251c\u2500\u2500 title.mp3\n        \u251c\u2500\u2500 title.mp3\n        \u251c\u2500\u2500 title.mp3\n        \u2514\u2500\u2500 title.mp3\n        ```\n        \n        If that isn't an options either, it will skip the file and continue to the next\n        one. For more information on how omnitagger works, visit the\n        [How it works](https://github.com/kkoomen/omnitagger/wiki/How-it-works) page on\n        the wiki.\n        \n        # Installation\n        \n        NOTE: If you have python 3.7+ installed, you won't be able to use the\n        fingerprint module. This due to it needs the Chromaprint module and this one is\n        not compatible yet with Python 3.7+.\n        \n        - `$ pip install omnitagger`\n        - Download the [Chromaprint](https://beets.readthedocs.io/en/v1.4.7/plugins/chroma.html#installing-the-library) library.\n        \n        # Documentation\n        Visit the [documentation](https://github.com/kkoomen/omnitagger/wiki/Documentation)\n        on the wiki for further details on how to use omnitagger.\n        \n        # The purpose of omnitagger\n        The purpose of omnitagger was a personal issue we all can relate to in the early\n        days: You download an album or song using a YouTube converter (or oldschool\n        Limewire/Frostwire back in those days) and the names do look horrible. Names\n        with numbers in front of it while it is already in the metatags, underscores\n        instead of spaces... you get it. This was an issue me and a friend of mine\n        always had and I suddenly had the idea to create a python script to make from an\n        ugly and horrible-looking filename a good-looking filename with metatags set\n        correctly automatically. Once I had the idea I kept building and building and\n        sometimes even rebuilding the whole script to make it better and more efficient.\n        \n        # License\n        \n        MIT.\n        \nKeywords: music,beautifier,mp3,ogg,flac,local,tagger\nPlatform: UNKNOWN\nClassifier: Intended Audience :: Developers\nClassifier: Development Status :: 5 - Production/Stable\nClassifier: Environment :: Console\nClassifier: License :: OSI Approved :: MIT License\nClassifier: Operating System :: POSIX\nClassifier: Programming Language :: Python :: 3.0\nClassifier: Programming Language :: Python :: 3.1\nClassifier: Programming Language :: Python :: 3.2\nClassifier: Programming Language :: Python :: 3.3\nClassifier: Programming Language :: Python :: 3.4\nClassifier: Programming Language :: Python :: 3.5\nClassifier: Programming Language :: Python :: 3.6\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "omnitagger", "package_url": "https://pypi.org/project/omnitagger/", "platform": "", "project_url": "https://pypi.org/project/omnitagger/", "project_urls": null, "release_url": "https://pypi.org/project/omnitagger/2.1.5/", "requires_dist": ["prettytable (>=0.7.2)", "mutagen (>=1.36)", "logger (>=1.4)", "titlecase (>=0.8.1)", "argparse (>=1.4.0)", "pyacoustid (>=1.1.4)"], "requires_python": "", "summary": "", "version": "2.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A CLI that beautifies your (old) music files, automatically adds metatags\nbased on fingerprinting, filename and metadata.</p>\n<p>Home-page: <a href=\"https://github.com/kkoomen/omnitagger\" rel=\"nofollow\">https://github.com/kkoomen/omnitagger</a>\nAuthor: Kim Koomen\nAuthor-email: <a href=\"mailto:koomen%40protonmail.com\">koomen<span>@</span>protonmail<span>.</span>com</a>\nLicense: MIT\nDescription: # omnitagger</p>\n<blockquote>\n<p>[![Package Version](<a href=\"https://img.shields.io/pypi/v/omnitagger.svg)%5D(https://pypi.python.org/pypi/omnitagger\" rel=\"nofollow\">https://img.shields.io/pypi/v/omnitagger.svg)](https://pypi.python.org/pypi/omnitagger</a>)\n[![Code Climate](<a href=\"https://codeclimate.com/github/kkoomen/omnitagger/badges/gpa.svg)%5D(https://codeclimate.com/github/kkoomen/omnitagger\" rel=\"nofollow\">https://codeclimate.com/github/kkoomen/omnitagger/badges/gpa.svg)](https://codeclimate.com/github/kkoomen/omnitagger</a>)</p>\n<p>Omnitagger is a CLI tool for beautifying your music files and adding metadata\nautomatically to your files. It provides fingerprint lookup via\n[acoustid](<a href=\"https://github.com/beetbox/pyacoustid\" rel=\"nofollow\">https://github.com/beetbox/pyacoustid</a>). Wether this is specified or\nnot: after that it will check for the <cite>artist - title.{mp3,flac,ogg}</cite> format.\nIf that pattern isn\u2019t found either, it will check the directory the file is in,\nsince it is a common case that when you download an album, the structure is:</p>\n<p><tt>`\n<span class=\"pre\">artist-name/</span>\n\u251c\u2500\u2500 title.mp3\n\u251c\u2500\u2500 title.mp3\n\u251c\u2500\u2500 title.mp3\n\u2514\u2500\u2500 title.mp3\n`</tt></p>\n<p>If that isn\u2019t an options either, it will skip the file and continue to the next\none. For more information on how omnitagger works, visit the\n[How it works](<a href=\"https://github.com/kkoomen/omnitagger/wiki/How-it-works\" rel=\"nofollow\">https://github.com/kkoomen/omnitagger/wiki/How-it-works</a>) page on\nthe wiki.</p>\n<p># Installation</p>\n<p>NOTE: If you have python 3.7+ installed, you won\u2019t be able to use the\nfingerprint module. This due to it needs the Chromaprint module and this one is\nnot compatible yet with Python 3.7+.</p>\n<ul>\n<li><cite>$ pip install omnitagger</cite></li>\n<li>Download the [Chromaprint](<a href=\"https://beets.readthedocs.io/en/v1.4.7/plugins/chroma.html#installing-the-library\" rel=\"nofollow\">https://beets.readthedocs.io/en/v1.4.7/plugins/chroma.html#installing-the-library</a>) library.</li>\n</ul>\n<p># Documentation\nVisit the [documentation](<a href=\"https://github.com/kkoomen/omnitagger/wiki/Documentation\" rel=\"nofollow\">https://github.com/kkoomen/omnitagger/wiki/Documentation</a>)\non the wiki for further details on how to use omnitagger.</p>\n<p># The purpose of omnitagger\nThe purpose of omnitagger was a personal issue we all can relate to in the early\ndays: You download an album or song using a YouTube converter (or oldschool\nLimewire/Frostwire back in those days) and the names do look horrible. Names\nwith numbers in front of it while it is already in the metatags, underscores\ninstead of spaces\u2026 you get it. This was an issue me and a friend of mine\nalways had and I suddenly had the idea to create a python script to make from an\nugly and horrible-looking filename a good-looking filename with metatags set\ncorrectly automatically. Once I had the idea I kept building and building and\nsometimes even rebuilding the whole script to make it better and more efficient.</p>\n<p># License</p>\n<p>MIT.</p>\n</blockquote>\n<p>Keywords: music,beautifier,mp3,ogg,flac,local,tagger\nPlatform: UNKNOWN\nClassifier: Intended Audience :: Developers\nClassifier: Development Status :: 5 - Production/Stable\nClassifier: Environment :: Console\nClassifier: License :: OSI Approved :: MIT License\nClassifier: Operating System :: POSIX\nClassifier: Programming Language :: Python :: 3.0\nClassifier: Programming Language :: Python :: 3.1\nClassifier: Programming Language :: Python :: 3.2\nClassifier: Programming Language :: Python :: 3.3\nClassifier: Programming Language :: Python :: 3.4\nClassifier: Programming Language :: Python :: 3.5\nClassifier: Programming Language :: Python :: 3.6</p>\n\n          </div>"}, "last_serial": 4602745, "releases": {"2.1.5": [{"comment_text": "", "digests": {"md5": "e750d29a489f5f94617d040c2c7accf9", "sha256": "4521c8759c019ea8c5874bbcc70f892339850e712d4577ebf95dc2c15c05d6ad"}, "downloads": -1, "filename": "omnitagger-2.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "e750d29a489f5f94617d040c2c7accf9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9499, "upload_time": "2018-12-15T14:05:20", "upload_time_iso_8601": "2018-12-15T14:05:20.434769Z", "url": "https://files.pythonhosted.org/packages/4a/6b/969f02889939eda869771a17f46909daf6a22b304886447a780e5cbb889e/omnitagger-2.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a24a02abedcfed8a11b02e71144f538", "sha256": "8c18d7a13d3eb8864c8bad3ced2dff0bb73f91899380ec50e27894b2fb87d3b9"}, "downloads": -1, "filename": "omnitagger-2.1.5.tar.gz", "has_sig": false, "md5_digest": "4a24a02abedcfed8a11b02e71144f538", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8111, "upload_time": "2018-12-15T14:05:21", "upload_time_iso_8601": "2018-12-15T14:05:21.531736Z", "url": "https://files.pythonhosted.org/packages/f4/a5/3c09472f9107e63c9f2aef9b59a54f9692321aa19db71adb000cab9e5119/omnitagger-2.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e750d29a489f5f94617d040c2c7accf9", "sha256": "4521c8759c019ea8c5874bbcc70f892339850e712d4577ebf95dc2c15c05d6ad"}, "downloads": -1, "filename": "omnitagger-2.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "e750d29a489f5f94617d040c2c7accf9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9499, "upload_time": "2018-12-15T14:05:20", "upload_time_iso_8601": "2018-12-15T14:05:20.434769Z", "url": "https://files.pythonhosted.org/packages/4a/6b/969f02889939eda869771a17f46909daf6a22b304886447a780e5cbb889e/omnitagger-2.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a24a02abedcfed8a11b02e71144f538", "sha256": "8c18d7a13d3eb8864c8bad3ced2dff0bb73f91899380ec50e27894b2fb87d3b9"}, "downloads": -1, "filename": "omnitagger-2.1.5.tar.gz", "has_sig": false, "md5_digest": "4a24a02abedcfed8a11b02e71144f538", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8111, "upload_time": "2018-12-15T14:05:21", "upload_time_iso_8601": "2018-12-15T14:05:21.531736Z", "url": "https://files.pythonhosted.org/packages/f4/a5/3c09472f9107e63c9f2aef9b59a54f9692321aa19db71adb000cab9e5119/omnitagger-2.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:25 2020"}