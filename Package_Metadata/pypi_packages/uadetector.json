{"info": {"author": "tell-k", "author_email": "ffk2005@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries"], "description": "WSGI Middleware and web framework extensions for handling User-Agent. Thanks to `woothee <https://github.com/woothee/woothee-python>`_ , UADetector supports various User-Agents. This library respects to `k0kubun/rack-user_agent <https://github.com/k0kubun/rack-user_agent>`_ .\n\n|travis| |coveralls| |version| |license|\n\nInstallation\n===================\n\n::\n\n $ pip install uadetector\n\n\nUsage\n=====================\n\nWSGI middleware\n----------------------\n\nThis middleware provides a ``uadetector.useragent.UserAgent`` object to handling User-agents. \n\n.. code-block:: python\n\n from wsgiref.simple_server import make_server\n\n # import middleware\n from uadetector import UADetector\n\n def app(environ, start_response):\n     start_response('200 OK', [('Content-Type', 'text/plain')])\n\n     # get 'UserAgent' object from environ dict.\n     ua = environ.get('uadetector.useragent')\n\n     ua.user_agent       #=> \"Mozilla/5.0 (Macintosh; ...\"\n     ua.device_type      #=> \"pc\"\n     ua.os               #=> \"Mac OSX\"\n     ua.browser          #=> \"Chrome\"\n     ua.from_pc          #=> True\n     ua.from_smartphone  #=> False\n\n     return [ua.os.encode('utf-8')]\n\n # Apply middleware\n application = UADetector(app)\n\n if __name__ == \"__main__\":\n     with make_server('127.0.0.1', 8000, application) as server:\n         print(\"Serving on port 8000...\")\n         server.serve_forever()\n\nYou can also replace the key of ``environ`` or the ``UserAgent`` class.\n\n.. code-block:: python\n\n from uadetector.useragent import UserAgent\n\n class MyUserAgent(UserAgent):\n      # Write your custom codes.\n\n # Apply middleware\n application = UADetector(\n    app,\n    envorion_key='your.favorite.key'\n    useragent_class='path.to.MyUserAgent'\n )\n\nSee also `WSGI example <https://github.com/tell-k/uadetector/blob/master/examples/wsgi/>`_.\n\nWeb framework extensions\n--------------------------------\n\nSome web frameworks provide a way to extend in a different way from WSGI Middleware. This library provide shortcuts according to that way.\n\n**Caution: I do not actively support individual frameworks. If you are worried, you should use WSGIMiddleware.**\n\nDjango\n~~~~~~~~~\n\nYou can use Django's ``MIDDLEWARE``.\n\n.. code-block:: python\n\n # settings.py\n\n MIDDLEWARE = [\n    # Add UADetecorMiddleware\n    'uadetector.django.middleware.UADetectorMiddleware',\n    # ... omit ...\n ]\n\n.. code-block:: python\n\n # views.py\n\n def index_view(request):\n     print(request.ua.from_smartphone) # => True or False\n     # ... omit ...\n\nCustomize property name of request object and replace UserAgent class.\n\n.. code-block:: python\n\n # settings.py\n\n UADETECTOR_REQUEST_PROPERTY_NAME = 'agent' # => You can use \"request.agent\"\n UADETECTOR_USERAGENT_CLASS = 'path.to.MyUserAgent'\n\nSee also `Dajngo example <https://github.com/tell-k/uadetector/blob/master/examples/django/>`_.\n\nTips: `Switch templates based on User-Agent <https://github.com/tell-k/django-variantmpl#switch-templates-based-on-user-agent>`_  (using `django-variantmpl <https://github.com/tell-k/django-variantmpl>`_ ).\n\nPyramid\n~~~~~~~~~\n\nYou can use ``config.add_request_method``.\n\n.. code-block:: python\n\n from uadetector.pyramid import ua_prop\n\n\n def index(request):\n     print(request.ua.from_smartphone) # => True or False\n     # ... omit ...\n\n\n with Configurator() as config:\n     config.add_route('index', '/')\n     config.add_view(index, route_name='index')\n\n     config.add_request_method(ua_prop(), name='ua', reify=True)\n     # ... omit ...\n\nCustomize property name of request object and replace UserAgent class.\n\n.. code-block:: python\n\n config.add_request_method(\n     ua_prop('path.to.MyUserAgent'),\n     name='agent',  # => You can use \"request.agent\"\n     reify=True\n )\n\nSee also `Pyramid example <https://github.com/tell-k/uadetector/blob/master/examples/pyramid/>`_.\n\nFlask\n~~~~~~~~~\n\nYou can use ``Flask Extension``.\n\n.. code-block:: python\n\n from flask import Flask, request\n from uadetector.flask import UADetector\n\n app = Flask(__name__)\n UADetector(app)\n\n @app.route('/')\n def index():\n     print(request.ua.from_smartphone) # => True or False\n     # ... omit ...\n\nCustomize property name of request object and replace UserAgent class.\n\n.. code-block:: python\n\n app = Flask(__name__)\n\n app.config['UADETECTOR_USERAGENT_CLASS'] = 'path.to.MyUserAgent'\n app.config['UADETECTOR_REQUEST_PROPERTY_NAME'] = 'agent' # => You can use \"request.agent\"\n\n UADetector(app)\n\nSee also `Flask example <https://github.com/tell-k/uadetector/blob/master/examples/flask/>`_.\n\nTornado\n~~~~~~~~~\n\nYou can use custom ``RequestHandler``.\n\n.. code-block:: python\n\n  from uadetector.tornado.web import RequestHandler\n\n  class IndexHandler(RequestHandler):\n\n      def get(self):\n          print(self.request.ua.from_smartphone) # => True or False\n          # ... omit ...\n\nCustomize property name of request object and replace UserAgent class.\n\n.. code-block:: python\n\n from tornado.options import define\n from uadetector.tornado.web import RequestHandler\n\n define(\n     'uadetector_request_property_name',\n     default='agent', # => You can use \"self.request.agent\"\n )\n define(\n     'uadetector_useragent_class',\n     default='path.to.MyUserAgent'\n )\n\n class IndexHandler(RequestHandler):\n\nSee also `Tornado example <https://github.com/tell-k/uadetector/blob/master/examples/tornado/>`_.\n\nUserAgent\n===================\n\nList of properties of ``uadetector.useragent.UserAgent`` object.\n\nattrs\n-----------\n\n* UserAgent.device_variant\n* UserAgent.device_type\n* UserAgent.os\n* UserAgent.os_version\n* UserAgent.browser\n* UserAgent.browser_version\n* UserAgent.browser_vendor\n\nhelpers\n-----------\n\n* UserAgent.from_pc\n* UserAgent.from_smartphone\n* UserAgent.from_mobilephone\n* UserAgent.from_appliance\n* UserAgent.from_crawler\n\ndetectors\n-----------\n\n* UserAgent.smartphone_version\n* UserAgent.from_iphone\n* UserAgent.from_ipad\n* UserAgent.from_ipod\n* UserAgent.from_android\n* UserAgent.from_android_tablet\n* UserAgent.from_windows_phone\n* UserAgent.from_ios\n* UserAgent.from_android_os\n\nTips\n===================\n\nIf you want a ``UserAgent`` object simply from the User-Agent string, Please use ``get_useruseragent``.\n\n.. code-block:: python\n\n from uadetector import get_useragent\n\n ua_string = \"Mozilla/5.0 (iPhone; CPU iPhone OS ...\"\n\n ua = get_useragent(ua_string)\n us.from_smartphone # => True\n\n # Use custom useragent class\n ua = get_useragent(ua_string, useragent_class='path.to.MyUserAgent')\n\nSupport\n========\n\nSupport latest 3 minor versions.\n\n* Python 3.4, 3.5, 3.6\n* Django 1.10, 1.11, 2.0\n* Pyramid 1.7, 1.8, 1.9\n* Flask 0.10, 0.11, 0.12\n* Tornado 4.5, 4.6, 4.7\n\nLicense\n========\n\nMIT License\n\nAuthors\n=======\n\n* tell-k <ffk2005 at gmail.com>\n\nHistory\n=======\n\n0.1.3(Feb 20, 2018)\n---------------------\n\n* `Lazy parsing User-Agent string <https://github.com/tell-k/uadetector/pull/1>`_ .\n\n0.1.2(Feb 19, 2018)\n---------------------\n\n* First release\n\n\n.. |travis| image:: https://travis-ci.org/tell-k/uadetector.svg?branch=master\n    :target: https://travis-ci.org/tell-k/uadetector\n\n.. |coveralls| image:: https://coveralls.io/repos/tell-k/uadetector/badge.png\n    :target: https://coveralls.io/r/tell-k/uadetector\n    :alt: coveralls.io\n\n.. |version| image:: https://img.shields.io/pypi/v/uadetector.svg\n    :target: http://pypi.python.org/pypi/uadetector/\n    :alt: latest version\n\n.. |license| image:: https://img.shields.io/pypi/l/uadetector.svg\n    :target: http://pypi.python.org/pypi/uadetector/\n    :alt: license\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tell-k/uadetector", "keywords": "user_agent,web,browser,detector,handling", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "uadetector", "package_url": "https://pypi.org/project/uadetector/", "platform": "", "project_url": "https://pypi.org/project/uadetector/", "project_urls": {"Homepage": "https://github.com/tell-k/uadetector"}, "release_url": "https://pypi.org/project/uadetector/0.1.3/", "requires_dist": ["woothee"], "requires_python": "", "summary": "WSGI Middleware and web framework extensions for handling User-Agent.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>WSGI Middleware and web framework extensions for handling User-Agent. Thanks to <a href=\"https://github.com/woothee/woothee-python\" rel=\"nofollow\">woothee</a> , UADetector supports various User-Agents. This library respects to <a href=\"https://github.com/k0kubun/rack-user_agent\" rel=\"nofollow\">k0kubun/rack-user_agent</a> .</p>\n<p><a href=\"https://travis-ci.org/tell-k/uadetector\" rel=\"nofollow\"><img alt=\"travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5b8010bc90760c6324d6284bb3da3f0b38e28055/68747470733a2f2f7472617669732d63692e6f72672f74656c6c2d6b2f75616465746563746f722e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/r/tell-k/uadetector\" rel=\"nofollow\"><img alt=\"coveralls.io\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ae3029d959ac535d9d89921f413498349c5db08c/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f74656c6c2d6b2f75616465746563746f722f62616467652e706e67\"></a> <a href=\"http://pypi.python.org/pypi/uadetector/\" rel=\"nofollow\"><img alt=\"latest version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/746639fe7a86acdaedb452d528f2812a7d0f65f1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f75616465746563746f722e737667\"></a> <a href=\"http://pypi.python.org/pypi/uadetector/\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/38d0b0af7617cfce804eb1c13b6a6df85dd18f31/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f75616465746563746f722e737667\"></a></p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install uadetector\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"wsgi-middleware\">\n<h3>WSGI middleware</h3>\n<p>This middleware provides a <tt>uadetector.useragent.UserAgent</tt> object to handling User-agents.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">wsgiref.simple_server</span> <span class=\"kn\">import</span> <span class=\"n\">make_server</span>\n\n<span class=\"c1\"># import middleware</span>\n<span class=\"kn\">from</span> <span class=\"nn\">uadetector</span> <span class=\"kn\">import</span> <span class=\"n\">UADetector</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">app</span><span class=\"p\">(</span><span class=\"n\">environ</span><span class=\"p\">,</span> <span class=\"n\">start_response</span><span class=\"p\">):</span>\n    <span class=\"n\">start_response</span><span class=\"p\">(</span><span class=\"s1\">'200 OK'</span><span class=\"p\">,</span> <span class=\"p\">[(</span><span class=\"s1\">'Content-Type'</span><span class=\"p\">,</span> <span class=\"s1\">'text/plain'</span><span class=\"p\">)])</span>\n\n    <span class=\"c1\"># get 'UserAgent' object from environ dict.</span>\n    <span class=\"n\">ua</span> <span class=\"o\">=</span> <span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'uadetector.useragent'</span><span class=\"p\">)</span>\n\n    <span class=\"n\">ua</span><span class=\"o\">.</span><span class=\"n\">user_agent</span>       <span class=\"c1\">#=&gt; \"Mozilla/5.0 (Macintosh; ...\"</span>\n    <span class=\"n\">ua</span><span class=\"o\">.</span><span class=\"n\">device_type</span>      <span class=\"c1\">#=&gt; \"pc\"</span>\n    <span class=\"n\">ua</span><span class=\"o\">.</span><span class=\"n\">os</span>               <span class=\"c1\">#=&gt; \"Mac OSX\"</span>\n    <span class=\"n\">ua</span><span class=\"o\">.</span><span class=\"n\">browser</span>          <span class=\"c1\">#=&gt; \"Chrome\"</span>\n    <span class=\"n\">ua</span><span class=\"o\">.</span><span class=\"n\">from_pc</span>          <span class=\"c1\">#=&gt; True</span>\n    <span class=\"n\">ua</span><span class=\"o\">.</span><span class=\"n\">from_smartphone</span>  <span class=\"c1\">#=&gt; False</span>\n\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">ua</span><span class=\"o\">.</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"s1\">'utf-8'</span><span class=\"p\">)]</span>\n\n<span class=\"c1\"># Apply middleware</span>\n<span class=\"n\">application</span> <span class=\"o\">=</span> <span class=\"n\">UADetector</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"k\">with</span> <span class=\"n\">make_server</span><span class=\"p\">(</span><span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span> <span class=\"mi\">8000</span><span class=\"p\">,</span> <span class=\"n\">application</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">server</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Serving on port 8000...\"</span><span class=\"p\">)</span>\n        <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">serve_forever</span><span class=\"p\">()</span>\n</pre>\n<p>You can also replace the key of <tt>environ</tt> or the <tt>UserAgent</tt> class.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">uadetector.useragent</span> <span class=\"kn\">import</span> <span class=\"n\">UserAgent</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyUserAgent</span><span class=\"p\">(</span><span class=\"n\">UserAgent</span><span class=\"p\">):</span>\n     <span class=\"c1\"># Write your custom codes.</span>\n\n<span class=\"c1\"># Apply middleware</span>\n<span class=\"n\">application</span> <span class=\"o\">=</span> <span class=\"n\">UADetector</span><span class=\"p\">(</span>\n   <span class=\"n\">app</span><span class=\"p\">,</span>\n   <span class=\"n\">envorion_key</span><span class=\"o\">=</span><span class=\"s1\">'your.favorite.key'</span>\n   <span class=\"n\">useragent_class</span><span class=\"o\">=</span><span class=\"s1\">'path.to.MyUserAgent'</span>\n<span class=\"p\">)</span>\n</pre>\n<p>See also <a href=\"https://github.com/tell-k/uadetector/blob/master/examples/wsgi/\" rel=\"nofollow\">WSGI example</a>.</p>\n</div>\n<div id=\"web-framework-extensions\">\n<h3>Web framework extensions</h3>\n<p>Some web frameworks provide a way to extend in a different way from WSGI Middleware. This library provide shortcuts according to that way.</p>\n<p><strong>Caution: I do not actively support individual frameworks. If you are worried, you should use WSGIMiddleware.</strong></p>\n<div id=\"django\">\n<h4>Django</h4>\n<p>You can use Django\u2019s <tt>MIDDLEWARE</tt>.</p>\n<pre><span class=\"c1\"># settings.py</span>\n\n<span class=\"n\">MIDDLEWARE</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n   <span class=\"c1\"># Add UADetecorMiddleware</span>\n   <span class=\"s1\">'uadetector.django.middleware.UADetectorMiddleware'</span><span class=\"p\">,</span>\n   <span class=\"c1\"># ... omit ...</span>\n<span class=\"p\">]</span>\n</pre>\n<pre><span class=\"c1\"># views.py</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">index_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">ua</span><span class=\"o\">.</span><span class=\"n\">from_smartphone</span><span class=\"p\">)</span> <span class=\"c1\"># =&gt; True or False</span>\n    <span class=\"c1\"># ... omit ...</span>\n</pre>\n<p>Customize property name of request object and replace UserAgent class.</p>\n<pre><span class=\"c1\"># settings.py</span>\n\n<span class=\"n\">UADETECTOR_REQUEST_PROPERTY_NAME</span> <span class=\"o\">=</span> <span class=\"s1\">'agent'</span> <span class=\"c1\"># =&gt; You can use \"request.agent\"</span>\n<span class=\"n\">UADETECTOR_USERAGENT_CLASS</span> <span class=\"o\">=</span> <span class=\"s1\">'path.to.MyUserAgent'</span>\n</pre>\n<p>See also <a href=\"https://github.com/tell-k/uadetector/blob/master/examples/django/\" rel=\"nofollow\">Dajngo example</a>.</p>\n<p>Tips: <a href=\"https://github.com/tell-k/django-variantmpl#switch-templates-based-on-user-agent\" rel=\"nofollow\">Switch templates based on User-Agent</a>  (using <a href=\"https://github.com/tell-k/django-variantmpl\" rel=\"nofollow\">django-variantmpl</a> ).</p>\n</div>\n<div id=\"pyramid\">\n<h4>Pyramid</h4>\n<p>You can use <tt>config.add_request_method</tt>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">uadetector.pyramid</span> <span class=\"kn\">import</span> <span class=\"n\">ua_prop</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">ua</span><span class=\"o\">.</span><span class=\"n\">from_smartphone</span><span class=\"p\">)</span> <span class=\"c1\"># =&gt; True or False</span>\n    <span class=\"c1\"># ... omit ...</span>\n\n\n<span class=\"k\">with</span> <span class=\"n\">Configurator</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">config</span><span class=\"p\">:</span>\n    <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">add_route</span><span class=\"p\">(</span><span class=\"s1\">'index'</span><span class=\"p\">,</span> <span class=\"s1\">'/'</span><span class=\"p\">)</span>\n    <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">add_view</span><span class=\"p\">(</span><span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"n\">route_name</span><span class=\"o\">=</span><span class=\"s1\">'index'</span><span class=\"p\">)</span>\n\n    <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">add_request_method</span><span class=\"p\">(</span><span class=\"n\">ua_prop</span><span class=\"p\">(),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'ua'</span><span class=\"p\">,</span> <span class=\"n\">reify</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"c1\"># ... omit ...</span>\n</pre>\n<p>Customize property name of request object and replace UserAgent class.</p>\n<pre><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">add_request_method</span><span class=\"p\">(</span>\n    <span class=\"n\">ua_prop</span><span class=\"p\">(</span><span class=\"s1\">'path.to.MyUserAgent'</span><span class=\"p\">),</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'agent'</span><span class=\"p\">,</span>  <span class=\"c1\"># =&gt; You can use \"request.agent\"</span>\n    <span class=\"n\">reify</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n</pre>\n<p>See also <a href=\"https://github.com/tell-k/uadetector/blob/master/examples/pyramid/\" rel=\"nofollow\">Pyramid example</a>.</p>\n</div>\n<div id=\"flask\">\n<h4>Flask</h4>\n<p>You can use <tt>Flask Extension</tt>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span><span class=\"p\">,</span> <span class=\"n\">request</span>\n<span class=\"kn\">from</span> <span class=\"nn\">uadetector.flask</span> <span class=\"kn\">import</span> <span class=\"n\">UADetector</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">UADetector</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">ua</span><span class=\"o\">.</span><span class=\"n\">from_smartphone</span><span class=\"p\">)</span> <span class=\"c1\"># =&gt; True or False</span>\n    <span class=\"c1\"># ... omit ...</span>\n</pre>\n<p>Customize property name of request object and replace UserAgent class.</p>\n<pre><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'UADETECTOR_USERAGENT_CLASS'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'path.to.MyUserAgent'</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'UADETECTOR_REQUEST_PROPERTY_NAME'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'agent'</span> <span class=\"c1\"># =&gt; You can use \"request.agent\"</span>\n\n<span class=\"n\">UADetector</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n</pre>\n<p>See also <a href=\"https://github.com/tell-k/uadetector/blob/master/examples/flask/\" rel=\"nofollow\">Flask example</a>.</p>\n</div>\n<div id=\"tornado\">\n<h4>Tornado</h4>\n<p>You can use custom <tt>RequestHandler</tt>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">uadetector.tornado.web</span> <span class=\"kn\">import</span> <span class=\"n\">RequestHandler</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">IndexHandler</span><span class=\"p\">(</span><span class=\"n\">RequestHandler</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">ua</span><span class=\"o\">.</span><span class=\"n\">from_smartphone</span><span class=\"p\">)</span> <span class=\"c1\"># =&gt; True or False</span>\n        <span class=\"c1\"># ... omit ...</span>\n</pre>\n<p>Customize property name of request object and replace UserAgent class.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tornado.options</span> <span class=\"kn\">import</span> <span class=\"n\">define</span>\n<span class=\"kn\">from</span> <span class=\"nn\">uadetector.tornado.web</span> <span class=\"kn\">import</span> <span class=\"n\">RequestHandler</span>\n\n<span class=\"n\">define</span><span class=\"p\">(</span>\n    <span class=\"s1\">'uadetector_request_property_name'</span><span class=\"p\">,</span>\n    <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">'agent'</span><span class=\"p\">,</span> <span class=\"c1\"># =&gt; You can use \"self.request.agent\"</span>\n<span class=\"p\">)</span>\n<span class=\"n\">define</span><span class=\"p\">(</span>\n    <span class=\"s1\">'uadetector_useragent_class'</span><span class=\"p\">,</span>\n    <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">'path.to.MyUserAgent'</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">IndexHandler</span><span class=\"p\">(</span><span class=\"n\">RequestHandler</span><span class=\"p\">):</span>\n</pre>\n<p>See also <a href=\"https://github.com/tell-k/uadetector/blob/master/examples/tornado/\" rel=\"nofollow\">Tornado example</a>.</p>\n</div>\n</div>\n</div>\n<div id=\"useragent\">\n<h2>UserAgent</h2>\n<p>List of properties of <tt>uadetector.useragent.UserAgent</tt> object.</p>\n<div id=\"attrs\">\n<h3>attrs</h3>\n<ul>\n<li>UserAgent.device_variant</li>\n<li>UserAgent.device_type</li>\n<li>UserAgent.os</li>\n<li>UserAgent.os_version</li>\n<li>UserAgent.browser</li>\n<li>UserAgent.browser_version</li>\n<li>UserAgent.browser_vendor</li>\n</ul>\n</div>\n<div id=\"helpers\">\n<h3>helpers</h3>\n<ul>\n<li>UserAgent.from_pc</li>\n<li>UserAgent.from_smartphone</li>\n<li>UserAgent.from_mobilephone</li>\n<li>UserAgent.from_appliance</li>\n<li>UserAgent.from_crawler</li>\n</ul>\n</div>\n<div id=\"detectors\">\n<h3>detectors</h3>\n<ul>\n<li>UserAgent.smartphone_version</li>\n<li>UserAgent.from_iphone</li>\n<li>UserAgent.from_ipad</li>\n<li>UserAgent.from_ipod</li>\n<li>UserAgent.from_android</li>\n<li>UserAgent.from_android_tablet</li>\n<li>UserAgent.from_windows_phone</li>\n<li>UserAgent.from_ios</li>\n<li>UserAgent.from_android_os</li>\n</ul>\n</div>\n</div>\n<div id=\"tips\">\n<h2>Tips</h2>\n<p>If you want a <tt>UserAgent</tt> object simply from the User-Agent string, Please use <tt>get_useruseragent</tt>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">uadetector</span> <span class=\"kn\">import</span> <span class=\"n\">get_useragent</span>\n\n<span class=\"n\">ua_string</span> <span class=\"o\">=</span> <span class=\"s2\">\"Mozilla/5.0 (iPhone; CPU iPhone OS ...\"</span>\n\n<span class=\"n\">ua</span> <span class=\"o\">=</span> <span class=\"n\">get_useragent</span><span class=\"p\">(</span><span class=\"n\">ua_string</span><span class=\"p\">)</span>\n<span class=\"n\">us</span><span class=\"o\">.</span><span class=\"n\">from_smartphone</span> <span class=\"c1\"># =&gt; True</span>\n\n<span class=\"c1\"># Use custom useragent class</span>\n<span class=\"n\">ua</span> <span class=\"o\">=</span> <span class=\"n\">get_useragent</span><span class=\"p\">(</span><span class=\"n\">ua_string</span><span class=\"p\">,</span> <span class=\"n\">useragent_class</span><span class=\"o\">=</span><span class=\"s1\">'path.to.MyUserAgent'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<p>Support latest 3 minor versions.</p>\n<ul>\n<li>Python 3.4, 3.5, 3.6</li>\n<li>Django 1.10, 1.11, 2.0</li>\n<li>Pyramid 1.7, 1.8, 1.9</li>\n<li>Flask 0.10, 0.11, 0.12</li>\n<li>Tornado 4.5, 4.6, 4.7</li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>MIT License</p>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<ul>\n<li>tell-k &lt;ffk2005 at gmail.com&gt;</li>\n</ul>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"feb-20-2018\">\n<h3>0.1.3(Feb 20, 2018)</h3>\n<ul>\n<li><a href=\"https://github.com/tell-k/uadetector/pull/1\" rel=\"nofollow\">Lazy parsing User-Agent string</a> .</li>\n</ul>\n</div>\n<div id=\"feb-19-2018\">\n<h3>0.1.2(Feb 19, 2018)</h3>\n<ul>\n<li>First release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3598734, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "e11c70a5a7fc73642a6b549ad01273f0", "sha256": "62d5197e3f03ea89a22f2bd33467379e4328d39582b6040015298bc4c86e786f"}, "downloads": -1, "filename": "uadetector-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e11c70a5a7fc73642a6b549ad01273f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12885, "upload_time": "2018-02-18T17:42:52", "upload_time_iso_8601": "2018-02-18T17:42:52.168772Z", "url": "https://files.pythonhosted.org/packages/95/fe/5ccc74eb340fbbc8140d564d742fcafc794457a8cbf8fe6de6104b083dc0/uadetector-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "98b5dea52e55cb39daf9c1d8bc9fbe3c", "sha256": "4b20a00b5093e274359f0b34b485fd224ca45330267f57546be4b30d667256dd"}, "downloads": -1, "filename": "uadetector-0.1.2.tar.gz", "has_sig": false, "md5_digest": "98b5dea52e55cb39daf9c1d8bc9fbe3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16125, "upload_time": "2018-02-18T17:42:54", "upload_time_iso_8601": "2018-02-18T17:42:54.994211Z", "url": "https://files.pythonhosted.org/packages/8e/7c/fda73e2a580cf004bfa4026706b7fe7e6ceac913f3bfd03631db3eada5fb/uadetector-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "ec1b91d1f59daa2571550be51a736f63", "sha256": "ef127eaae91bdbed626563878890c18be3b65153ab3d648e1fd4d917848a7d2c"}, "downloads": -1, "filename": "uadetector-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "ec1b91d1f59daa2571550be51a736f63", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13093, "upload_time": "2018-02-20T11:21:24", "upload_time_iso_8601": "2018-02-20T11:21:24.714519Z", "url": "https://files.pythonhosted.org/packages/54/cf/bc4833a8da4c8641a5414f5359352ef5e48af28f6848c95d0a55a906a175/uadetector-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56ede6bbfce13a24e03eedc34340f5b9", "sha256": "90058ed9cde3da208ae37cf6781daf9dfbabebd6947d5549be83d91a5c687a0b"}, "downloads": -1, "filename": "uadetector-0.1.3.tar.gz", "has_sig": false, "md5_digest": "56ede6bbfce13a24e03eedc34340f5b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16310, "upload_time": "2018-02-20T11:21:26", "upload_time_iso_8601": "2018-02-20T11:21:26.685367Z", "url": "https://files.pythonhosted.org/packages/36/dc/2a243a546e7b8e982f9a98cdaabc414c48853180c68039a4f5783feeb34f/uadetector-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ec1b91d1f59daa2571550be51a736f63", "sha256": "ef127eaae91bdbed626563878890c18be3b65153ab3d648e1fd4d917848a7d2c"}, "downloads": -1, "filename": "uadetector-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "ec1b91d1f59daa2571550be51a736f63", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13093, "upload_time": "2018-02-20T11:21:24", "upload_time_iso_8601": "2018-02-20T11:21:24.714519Z", "url": "https://files.pythonhosted.org/packages/54/cf/bc4833a8da4c8641a5414f5359352ef5e48af28f6848c95d0a55a906a175/uadetector-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56ede6bbfce13a24e03eedc34340f5b9", "sha256": "90058ed9cde3da208ae37cf6781daf9dfbabebd6947d5549be83d91a5c687a0b"}, "downloads": -1, "filename": "uadetector-0.1.3.tar.gz", "has_sig": false, "md5_digest": "56ede6bbfce13a24e03eedc34340f5b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16310, "upload_time": "2018-02-20T11:21:26", "upload_time_iso_8601": "2018-02-20T11:21:26.685367Z", "url": "https://files.pythonhosted.org/packages/36/dc/2a243a546e7b8e982f9a98cdaabc414c48853180c68039a4f5783feeb34f/uadetector-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:42:30 2020"}