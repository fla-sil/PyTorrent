{"info": {"author": "Maxim Millen & Minjie Zhu", "author_email": "mmi46@uclive.ac.nz", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering"], "description": ".. image:: https://travis-ci.org/eng-tools/o3seespy.svg?branch=master\n   :target: https://travis-ci.org/eng-tools/o3seespy\n   :alt: Testing Status\n\n.. image:: https://img.shields.io/pypi/v/o3seespy.svg\n   :target: https://pypi.python.org/pypi/o3seespy\n   :alt: PyPi version\n\n.. image:: https://coveralls.io/repos/github/o3seespy/o3seespy/badge.svg?branch=master\n   :target: https://coveralls.io/github/o3seespy/o3seespy?branch=master\n\n.. image:: https://readthedocs.org/projects/o3seespy/badge/?version=latest\n   :target: https://readthedocs.org/projects/o3seespy/badge/?version=latest\n\n\n********\no3seespy\n********\n\nObject-oriented native python version of OpenSees\n\nFeatures\n========\n\nThis package provides:\n\n 1. A 'pythonic' version of OpenSees\n    - all input parameters to create OpenSees objects are all lowercase key-value arguments\n    - all class objects are CamelCase\n    - static string variables defined in ALL_CAPS\n    - Where possible the exact name used in the original TCL version has been kept\n 2. Fully namespaced package allowing full auto-complete e.g. 'o3.uniaxial_material.Steel01(...)'\n 3. Replication of underlying object-oriented C++ source code using Python objects.\n 4. Type checking of inputs before calling C++ OpenSees code, so that python debugging and errors can be viewed\n 5. In code documentation using python docstrings - can view the documentation within your IDE\n 6. Additional features for using OpenSees in python:\n    - saving and loading data directly from OpenSees into numpy arrays\n    - saving and loading data directly from OpenSees into json files\n    - Save an entire model as a json file - allows efficient passing of models between servers\n 7. All object numbering handled by objects - no need for number tags!\n 8. Additional logic checking of optional inputs\n\n\nRelated packages\n================\n\nThe eco-system of Python packages that relate to this package are outlined in the figure below.\n\n.. image:: https://eng-tools.github.io/static/img/package-space.svg\n    :width: 80%\n    :align: center\n    :alt: Geotechnical Python packages\n\nHow to Use\n==========\n\nInstallation\n------------\n\n\n.. code:: bash\n\n    pip install o3seespy\n\n\nExample: Dynamic inelastic SDOF analysis\n----------------------------------------\n\n\n.. code:: python\n\n    import numpy as np\n    import matplotlib.pyplot as plt\n\n    import o3seespy as o3\n\n    from tests.conftest import TEST_DATA_DIR\n\n    # Load a ground motion\n    dt = 0.01\n    rec = np.loadtxt(TEST_DATA_DIR + 'test_motion_dt0p01.txt')\n\n    # Define inelastic SDOF\n    period = 1.0\n    xi = 0.05\n    mass = 1.0\n    f_yield = 1.5  # Reduce this to make it nonlinear\n    r_post = 0.0\n\n    # Initialise OpenSees instance\n    osi = o3.OpenSeesInstance(ndm=2, state=0)\n\n    # Establish nodes\n    bot_node = o3.node.Node(osi, 0, 0)\n    top_node = o3.node.Node(osi, 0, 0)\n\n    # Fix bottom node\n    o3.Fix3DOF(osi, top_node, o3.cc.FREE, o3.cc.FIXED, o3.cc.FIXED)\n    o3.Fix3DOF(osi, bot_node, o3.cc.FIXED, o3.cc.FIXED, o3.cc.FIXED)\n    # Set out-of-plane DOFs to be slaved\n    o3.EqualDOF(osi, top_node, bot_node, [o3.cc.Y, o3.cc.ROTZ])\n\n    # nodal mass (weight / g):\n    o3.Mass(osi, top_node, mass, 0., 0.)\n\n    # Define material\n    k_spring = 4 * np.pi ** 2 * mass / period ** 2\n    bilinear_mat = o3.uniaxial_material.Steel01(osi, fy=f_yield, e0=k_spring, b=r_post)\n\n    # Assign zero length element, # Note: pass actual node and material objects into element\n    o3.element.ZeroLength(osi, [bot_node, top_node], mats=[bilinear_mat], dirs=[o3.cc.DOF2D_X], r_flag=1)\n\n    # Define the dynamic analysis\n    load_tag_dynamic = 1\n    pattern_tag_dynamic = 1\n\n    # Define the dynamic analysis\n    acc_series = o3.time_series.Path(osi, dt=dt, values=-1 * rec)  # should be negative\n    o3.pattern.UniformExcitation(osi, dir=o3.cc.X, accel_series=acc_series)\n\n    # set damping based on first eigen mode\n    angular_freq = o3.get_eigen(osi, solver='fullGenLapack', n=1)[0] ** 0.5\n    beta_k = 2 * xi / angular_freq\n    o3.rayleigh.Rayleigh(osi, alpha_m=0.0, beta_k=beta_k, beta_k_init=0.0, beta_k_comm=0.0)\n\n    # Run the dynamic analysis\n    o3.wipe_analysis(osi)\n\n    # Run the dynamic analysis\n    o3.algorithm.Newton(osi)\n    o3.system.SparseGeneral(osi)\n    o3.numberer.RCM(osi)\n    o3.constraints.Transformation(osi)\n    o3.integrator.Newmark(osi, gamma=0.5, beta=0.25)\n    o3.analysis.Transient(osi)\n\n    o3.test_check.EnergyIncr(osi, tol=1.0e-10, max_iter=10)\n    analysis_time = (len(rec) - 1) * dt\n    analysis_dt = 0.001\n    outputs = {\n        \"time\": [],\n        \"rel_disp\": [],\n        \"rel_accel\": [],\n        \"rel_vel\": [],\n        \"force\": []\n    }\n\n    while o3.get_time(osi) < analysis_time:\n        o3.analyze(osi, 1, analysis_dt)\n        curr_time = o3.get_time(osi)\n        outputs[\"time\"].append(curr_time)\n        outputs[\"rel_disp\"].append(o3.get_node_disp(osi, top_node, o3.cc.X))\n        outputs[\"rel_vel\"].append(o3.get_node_vel(osi, top_node, o3.cc.X))\n        outputs[\"rel_accel\"].append(o3.get_node_accel(osi, top_node, o3.cc.X))\n        o3.gen_reactions(osi)\n        outputs[\"force\"].append(-o3.get_node_reaction(osi, bot_node, o3.cc.X))  # Negative since diff node\n    o3.wipe(osi)\n    for item in outputs:\n        outputs[item] = np.array(outputs[item])\n\n\n    plt.plot(outputs['time'], outputs['rel_disp'], label='o3seespy')\n    periods = np.array([period])\n\n    # Compare closed form elastic solution\n    from eqsig import sdof\n    resp_u, resp_v, resp_a = sdof.response_series(motion=rec, dt=dt, periods=periods, xi=xi)\n    plt.plot(np.arange(len(rec)) * dt, resp_u[0], ls='--', label='Elastic')\n    plt.legend()\n    plt.savefig('readme_example.png')\n    plt.show()\n\n\n.. image:: ./examples/readme_example.png\n  :width: 400\n  :alt: Output from example\n\nUseful material\n===============\n\n*\n\nContributing\n============\n\nHow do I get set up?\n--------------------\n\n1. Run ``pip install -r requirements.txt``\n\n\nPackage conventions\n-------------------\n\n* All names should be the same as the OpenSees tcl version, except:\n    - The name should be converted to snake_case for a parameter or function\n    - The name should be converted to CamelCase for an Object\n    - The name should be converted to ALL_CAPS for static variables\n    - If the name matches a python special name (e.g. lambda, in) then it should be adjusted according to the dictionary\n    - Objects should be namespaced based on the object type (e.g. element, material)\n    - For parameter that are used across many objects (e.g. atmospheric pressure) a standard name should be used\n    - OpenSees functions that collect a result are named 'get_<function-name>'\n    - OpenSees functions that generate results are named 'gen_<function-name>'\n\n* How should youngs modulus be named?\n* Should all two node elements use i_node, j_node. Or make them all enter nodes as a list?\n\n\n\nTesting\n-------\n\nTests are run with pytest\n\n* Locally run: ``pytest`` on the command line.\n\n* Tests are run on every push using travis, see the ``.travis.yml`` file\n\n\nDeployment\n----------\n\nTo deploy the package to pypi.com you need to:\n\n1. Push to the *pypi* branch. This executes the tests on circleci.com\n\n2. Create a git tag and push to github, run: ``trigger_deploy.py`` or manually:\n\n.. code:: bash\n\n    git tag 0.5.2 -m \"version 0.5.2\"\n    git push --tags origin pypi\n\n\nDocumentation\n-------------\n\nBuilt via Sphinx following: https://codeandchaos.wordpress.com/2012/07/30/sphinx-autodoc-tutorial-for-dummies/\n\nFor development mode\n\n 1. cd to docs\n 2. Run ``make html``\n\nDocstrings follow numpy convention (in progress): https://numpydoc.readthedocs.io/en/latest/format.html\n\nTo fix long_description in setup.py: ``pip install collective.checkdocs``, ``python setup.py checkdocs``", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT with OpenSees License", "maintainer": "", "maintainer_email": "", "name": "o3seespy", "package_url": "https://pypi.org/project/o3seespy/", "platform": "", "project_url": "https://pypi.org/project/o3seespy/", "project_urls": null, "release_url": "https://pypi.org/project/o3seespy/3.1.0.23/", "requires_dist": null, "requires_python": ">=3", "summary": "Object-oriented native python version of Opensees", "version": "3.1.0.23", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/eng-tools/o3seespy\" rel=\"nofollow\"><img alt=\"Testing Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/93faad378c9c0f07b1de515611793a85a499d8c2/68747470733a2f2f7472617669732d63692e6f72672f656e672d746f6f6c732f6f337365657370792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/o3seespy\" rel=\"nofollow\"><img alt=\"PyPi version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2209ef06b3c9739ddfcf89acd385e6e31d01c502/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6f337365657370792e737667\"></a>\n<a href=\"https://coveralls.io/github/o3seespy/o3seespy?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/o3seespy/o3seespy/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7223744b5cd37fd9fd01b0ea2faeaff304b52668/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6f337365657370792f6f337365657370792f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://readthedocs.org/projects/o3seespy/badge/?version=latest\" rel=\"nofollow\"><img alt=\"https://readthedocs.org/projects/o3seespy/badge/?version=latest\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c9df4380dc6cb05e27b07d285479faf3f3c66bbc/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6f337365657370792f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<div id=\"o3seespy\">\n<h2>o3seespy</h2>\n<p>Object-oriented native python version of OpenSees</p>\n<div id=\"features\">\n<h3>Features</h3>\n<p>This package provides:</p>\n<blockquote>\n<ol>\n<li>A \u2018pythonic\u2019 version of OpenSees\n- all input parameters to create OpenSees objects are all lowercase key-value arguments\n- all class objects are CamelCase\n- static string variables defined in ALL_CAPS\n- Where possible the exact name used in the original TCL version has been kept</li>\n<li>Fully namespaced package allowing full auto-complete e.g. \u2018o3.uniaxial_material.Steel01(\u2026)\u2019</li>\n<li>Replication of underlying object-oriented C++ source code using Python objects.</li>\n<li>Type checking of inputs before calling C++ OpenSees code, so that python debugging and errors can be viewed</li>\n<li>In code documentation using python docstrings - can view the documentation within your IDE</li>\n<li>Additional features for using OpenSees in python:\n- saving and loading data directly from OpenSees into numpy arrays\n- saving and loading data directly from OpenSees into json files\n- Save an entire model as a json file - allows efficient passing of models between servers</li>\n<li>All object numbering handled by objects - no need for number tags!</li>\n<li>Additional logic checking of optional inputs</li>\n</ol>\n</blockquote>\n</div>\n<div id=\"related-packages\">\n<h3>Related packages</h3>\n<p>The eco-system of Python packages that relate to this package are outlined in the figure below.</p>\n<img alt=\"Geotechnical Python packages\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ceaf85e03786ab22a936192c3c8d5083df29a4dc/68747470733a2f2f656e672d746f6f6c732e6769746875622e696f2f7374617469632f696d672f7061636b6167652d73706163652e737667\" width=\"80%\">\n</div>\n<div id=\"how-to-use\">\n<h3>How to Use</h3>\n<div id=\"installation\">\n<h4>Installation</h4>\n<pre>pip install o3seespy\n</pre>\n</div>\n<div id=\"example-dynamic-inelastic-sdof-analysis\">\n<h4>Example: Dynamic inelastic SDOF analysis</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">o3seespy</span> <span class=\"k\">as</span> <span class=\"nn\">o3</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">tests.conftest</span> <span class=\"kn\">import</span> <span class=\"n\">TEST_DATA_DIR</span>\n\n<span class=\"c1\"># Load a ground motion</span>\n<span class=\"n\">dt</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span>\n<span class=\"n\">rec</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">loadtxt</span><span class=\"p\">(</span><span class=\"n\">TEST_DATA_DIR</span> <span class=\"o\">+</span> <span class=\"s1\">'test_motion_dt0p01.txt'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Define inelastic SDOF</span>\n<span class=\"n\">period</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n<span class=\"n\">xi</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>\n<span class=\"n\">mass</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n<span class=\"n\">f_yield</span> <span class=\"o\">=</span> <span class=\"mf\">1.5</span>  <span class=\"c1\"># Reduce this to make it nonlinear</span>\n<span class=\"n\">r_post</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n\n<span class=\"c1\"># Initialise OpenSees instance</span>\n<span class=\"n\">osi</span> <span class=\"o\">=</span> <span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">OpenSeesInstance</span><span class=\"p\">(</span><span class=\"n\">ndm</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">state</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Establish nodes</span>\n<span class=\"n\">bot_node</span> <span class=\"o\">=</span> <span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">top_node</span> <span class=\"o\">=</span> <span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Fix bottom node</span>\n<span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">Fix3DOF</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">,</span> <span class=\"n\">top_node</span><span class=\"p\">,</span> <span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">cc</span><span class=\"o\">.</span><span class=\"n\">FREE</span><span class=\"p\">,</span> <span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">cc</span><span class=\"o\">.</span><span class=\"n\">FIXED</span><span class=\"p\">,</span> <span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">cc</span><span class=\"o\">.</span><span class=\"n\">FIXED</span><span class=\"p\">)</span>\n<span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">Fix3DOF</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">,</span> <span class=\"n\">bot_node</span><span class=\"p\">,</span> <span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">cc</span><span class=\"o\">.</span><span class=\"n\">FIXED</span><span class=\"p\">,</span> <span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">cc</span><span class=\"o\">.</span><span class=\"n\">FIXED</span><span class=\"p\">,</span> <span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">cc</span><span class=\"o\">.</span><span class=\"n\">FIXED</span><span class=\"p\">)</span>\n<span class=\"c1\"># Set out-of-plane DOFs to be slaved</span>\n<span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">EqualDOF</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">,</span> <span class=\"n\">top_node</span><span class=\"p\">,</span> <span class=\"n\">bot_node</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">cc</span><span class=\"o\">.</span><span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">cc</span><span class=\"o\">.</span><span class=\"n\">ROTZ</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># nodal mass (weight / g):</span>\n<span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">Mass</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">,</span> <span class=\"n\">top_node</span><span class=\"p\">,</span> <span class=\"n\">mass</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Define material</span>\n<span class=\"n\">k_spring</span> <span class=\"o\">=</span> <span class=\"mi\">4</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">**</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">mass</span> <span class=\"o\">/</span> <span class=\"n\">period</span> <span class=\"o\">**</span> <span class=\"mi\">2</span>\n<span class=\"n\">bilinear_mat</span> <span class=\"o\">=</span> <span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">uniaxial_material</span><span class=\"o\">.</span><span class=\"n\">Steel01</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">,</span> <span class=\"n\">fy</span><span class=\"o\">=</span><span class=\"n\">f_yield</span><span class=\"p\">,</span> <span class=\"n\">e0</span><span class=\"o\">=</span><span class=\"n\">k_spring</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"n\">r_post</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Assign zero length element, # Note: pass actual node and material objects into element</span>\n<span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">ZeroLength</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">bot_node</span><span class=\"p\">,</span> <span class=\"n\">top_node</span><span class=\"p\">],</span> <span class=\"n\">mats</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">bilinear_mat</span><span class=\"p\">],</span> <span class=\"n\">dirs</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">cc</span><span class=\"o\">.</span><span class=\"n\">DOF2D_X</span><span class=\"p\">],</span> <span class=\"n\">r_flag</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Define the dynamic analysis</span>\n<span class=\"n\">load_tag_dynamic</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"n\">pattern_tag_dynamic</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n\n<span class=\"c1\"># Define the dynamic analysis</span>\n<span class=\"n\">acc_series</span> <span class=\"o\">=</span> <span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">time_series</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"o\">=</span><span class=\"n\">dt</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"o\">=-</span><span class=\"mi\">1</span> <span class=\"o\">*</span> <span class=\"n\">rec</span><span class=\"p\">)</span>  <span class=\"c1\"># should be negative</span>\n<span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">pattern</span><span class=\"o\">.</span><span class=\"n\">UniformExcitation</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">,</span> <span class=\"nb\">dir</span><span class=\"o\">=</span><span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">cc</span><span class=\"o\">.</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">accel_series</span><span class=\"o\">=</span><span class=\"n\">acc_series</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># set damping based on first eigen mode</span>\n<span class=\"n\">angular_freq</span> <span class=\"o\">=</span> <span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">get_eigen</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">,</span> <span class=\"n\">solver</span><span class=\"o\">=</span><span class=\"s1\">'fullGenLapack'</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">**</span> <span class=\"mf\">0.5</span>\n<span class=\"n\">beta_k</span> <span class=\"o\">=</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">xi</span> <span class=\"o\">/</span> <span class=\"n\">angular_freq</span>\n<span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">rayleigh</span><span class=\"o\">.</span><span class=\"n\">Rayleigh</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">,</span> <span class=\"n\">alpha_m</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"n\">beta_k</span><span class=\"o\">=</span><span class=\"n\">beta_k</span><span class=\"p\">,</span> <span class=\"n\">beta_k_init</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"n\">beta_k_comm</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Run the dynamic analysis</span>\n<span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">wipe_analysis</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Run the dynamic analysis</span>\n<span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">algorithm</span><span class=\"o\">.</span><span class=\"n\">Newton</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">)</span>\n<span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"o\">.</span><span class=\"n\">SparseGeneral</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">)</span>\n<span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">numberer</span><span class=\"o\">.</span><span class=\"n\">RCM</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">)</span>\n<span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">constraints</span><span class=\"o\">.</span><span class=\"n\">Transformation</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">)</span>\n<span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">integrator</span><span class=\"o\">.</span><span class=\"n\">Newmark</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">,</span> <span class=\"n\">gamma</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"n\">beta</span><span class=\"o\">=</span><span class=\"mf\">0.25</span><span class=\"p\">)</span>\n<span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">analysis</span><span class=\"o\">.</span><span class=\"n\">Transient</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">)</span>\n\n<span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">test_check</span><span class=\"o\">.</span><span class=\"n\">EnergyIncr</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">,</span> <span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">1.0e-10</span><span class=\"p\">,</span> <span class=\"n\">max_iter</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">analysis_time</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">rec</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">dt</span>\n<span class=\"n\">analysis_dt</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>\n<span class=\"n\">outputs</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"time\"</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n    <span class=\"s2\">\"rel_disp\"</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n    <span class=\"s2\">\"rel_accel\"</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n    <span class=\"s2\">\"rel_vel\"</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n    <span class=\"s2\">\"force\"</span><span class=\"p\">:</span> <span class=\"p\">[]</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">while</span> <span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">get_time</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"n\">analysis_time</span><span class=\"p\">:</span>\n    <span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">analyze</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">analysis_dt</span><span class=\"p\">)</span>\n    <span class=\"n\">curr_time</span> <span class=\"o\">=</span> <span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">get_time</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">)</span>\n    <span class=\"n\">outputs</span><span class=\"p\">[</span><span class=\"s2\">\"time\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">curr_time</span><span class=\"p\">)</span>\n    <span class=\"n\">outputs</span><span class=\"p\">[</span><span class=\"s2\">\"rel_disp\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">get_node_disp</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">,</span> <span class=\"n\">top_node</span><span class=\"p\">,</span> <span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">cc</span><span class=\"o\">.</span><span class=\"n\">X</span><span class=\"p\">))</span>\n    <span class=\"n\">outputs</span><span class=\"p\">[</span><span class=\"s2\">\"rel_vel\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">get_node_vel</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">,</span> <span class=\"n\">top_node</span><span class=\"p\">,</span> <span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">cc</span><span class=\"o\">.</span><span class=\"n\">X</span><span class=\"p\">))</span>\n    <span class=\"n\">outputs</span><span class=\"p\">[</span><span class=\"s2\">\"rel_accel\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">get_node_accel</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">,</span> <span class=\"n\">top_node</span><span class=\"p\">,</span> <span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">cc</span><span class=\"o\">.</span><span class=\"n\">X</span><span class=\"p\">))</span>\n    <span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">gen_reactions</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">)</span>\n    <span class=\"n\">outputs</span><span class=\"p\">[</span><span class=\"s2\">\"force\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">get_node_reaction</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">,</span> <span class=\"n\">bot_node</span><span class=\"p\">,</span> <span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">cc</span><span class=\"o\">.</span><span class=\"n\">X</span><span class=\"p\">))</span>  <span class=\"c1\"># Negative since diff node</span>\n<span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">wipe</span><span class=\"p\">(</span><span class=\"n\">osi</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">outputs</span><span class=\"p\">:</span>\n    <span class=\"n\">outputs</span><span class=\"p\">[</span><span class=\"n\">item</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">outputs</span><span class=\"p\">[</span><span class=\"n\">item</span><span class=\"p\">])</span>\n\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">outputs</span><span class=\"p\">[</span><span class=\"s1\">'time'</span><span class=\"p\">],</span> <span class=\"n\">outputs</span><span class=\"p\">[</span><span class=\"s1\">'rel_disp'</span><span class=\"p\">],</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">'o3seespy'</span><span class=\"p\">)</span>\n<span class=\"n\">periods</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"n\">period</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Compare closed form elastic solution</span>\n<span class=\"kn\">from</span> <span class=\"nn\">eqsig</span> <span class=\"kn\">import</span> <span class=\"n\">sdof</span>\n<span class=\"n\">resp_u</span><span class=\"p\">,</span> <span class=\"n\">resp_v</span><span class=\"p\">,</span> <span class=\"n\">resp_a</span> <span class=\"o\">=</span> <span class=\"n\">sdof</span><span class=\"o\">.</span><span class=\"n\">response_series</span><span class=\"p\">(</span><span class=\"n\">motion</span><span class=\"o\">=</span><span class=\"n\">rec</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"o\">=</span><span class=\"n\">dt</span><span class=\"p\">,</span> <span class=\"n\">periods</span><span class=\"o\">=</span><span class=\"n\">periods</span><span class=\"p\">,</span> <span class=\"n\">xi</span><span class=\"o\">=</span><span class=\"n\">xi</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">rec</span><span class=\"p\">))</span> <span class=\"o\">*</span> <span class=\"n\">dt</span><span class=\"p\">,</span> <span class=\"n\">resp_u</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">ls</span><span class=\"o\">=</span><span class=\"s1\">'--'</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">'Elastic'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">'readme_example.png'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<img alt=\"Output from example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49db609c5efb95f5bc2db3a136eed7e567ad67b9/2e2f6578616d706c65732f726561646d655f6578616d706c652e706e67\" width=\"400\">\n</div>\n</div>\n<div id=\"useful-material\">\n<h3>Useful material</h3>\n<ul>\n<li>\n</ul>\n</div>\n<div id=\"contributing\">\n<h3>Contributing</h3>\n<div id=\"how-do-i-get-set-up\">\n<h4>How do I get set up?</h4>\n<ol>\n<li>Run <tt>pip install <span class=\"pre\">-r</span> requirements.txt</tt></li>\n</ol>\n</div>\n<div id=\"package-conventions\">\n<h4>Package conventions</h4>\n<ul>\n<li><dl>\n<dt>All names should be the same as the OpenSees tcl version, except:</dt>\n<dd><ul>\n<li>The name should be converted to snake_case for a parameter or function</li>\n<li>The name should be converted to CamelCase for an Object</li>\n<li>The name should be converted to ALL_CAPS for static variables</li>\n<li>If the name matches a python special name (e.g. lambda, in) then it should be adjusted according to the dictionary</li>\n<li>Objects should be namespaced based on the object type (e.g. element, material)</li>\n<li>For parameter that are used across many objects (e.g. atmospheric pressure) a standard name should be used</li>\n<li>OpenSees functions that collect a result are named \u2018get_&lt;function-name&gt;\u2019</li>\n<li>OpenSees functions that generate results are named \u2018gen_&lt;function-name&gt;\u2019</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>How should youngs modulus be named?</li>\n<li>Should all two node elements use i_node, j_node. Or make them all enter nodes as a list?</li>\n</ul>\n</div>\n<div id=\"testing\">\n<h4>Testing</h4>\n<p>Tests are run with pytest</p>\n<ul>\n<li>Locally run: <tt>pytest</tt> on the command line.</li>\n<li>Tests are run on every push using travis, see the <tt>.travis.yml</tt> file</li>\n</ul>\n</div>\n<div id=\"deployment\">\n<h4>Deployment</h4>\n<p>To deploy the package to pypi.com you need to:</p>\n<ol>\n<li>Push to the <em>pypi</em> branch. This executes the tests on circleci.com</li>\n<li>Create a git tag and push to github, run: <tt>trigger_deploy.py</tt> or manually:</li>\n</ol>\n<pre>git tag <span class=\"m\">0</span>.5.2 -m <span class=\"s2\">\"version 0.5.2\"</span>\ngit push --tags origin pypi\n</pre>\n</div>\n<div id=\"documentation\">\n<h4>Documentation</h4>\n<p>Built via Sphinx following: <a href=\"https://codeandchaos.wordpress.com/2012/07/30/sphinx-autodoc-tutorial-for-dummies/\" rel=\"nofollow\">https://codeandchaos.wordpress.com/2012/07/30/sphinx-autodoc-tutorial-for-dummies/</a></p>\n<p>For development mode</p>\n<blockquote>\n<ol>\n<li>cd to docs</li>\n<li>Run <tt>make html</tt></li>\n</ol>\n</blockquote>\n<p>Docstrings follow numpy convention (in progress): <a href=\"https://numpydoc.readthedocs.io/en/latest/format.html\" rel=\"nofollow\">https://numpydoc.readthedocs.io/en/latest/format.html</a></p>\n<p>To fix long_description in setup.py: <tt>pip install collective.checkdocs</tt>, <tt>python setup.py checkdocs</tt></p>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7191915, "releases": {"3.1.0.15": [{"comment_text": "", "digests": {"md5": "d5fc274bbae9a7e0b84665d247141ff0", "sha256": "0b66b57d96d1162387e09aa2fdef374e8bd325be3f56d167bd0bb6bb62943d9c"}, "downloads": -1, "filename": "o3seespy-3.1.0.15.tar.gz", "has_sig": false, "md5_digest": "d5fc274bbae9a7e0b84665d247141ff0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 123399, "upload_time": "2020-02-17T01:49:14", "upload_time_iso_8601": "2020-02-17T01:49:14.157473Z", "url": "https://files.pythonhosted.org/packages/ab/a1/933e37075ef3377a93304c58c82d5bce07117047ee17777846e933ce5616/o3seespy-3.1.0.15.tar.gz", "yanked": false}], "3.1.0.18": [{"comment_text": "", "digests": {"md5": "47153f5c32415eb7d813549e1288fa1a", "sha256": "957c97803a1b46eab2e5b1d33ca1c8a77928677695e4f637d73e49831412ff0f"}, "downloads": -1, "filename": "o3seespy-3.1.0.18.tar.gz", "has_sig": false, "md5_digest": "47153f5c32415eb7d813549e1288fa1a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 126323, "upload_time": "2020-02-25T23:19:40", "upload_time_iso_8601": "2020-02-25T23:19:40.534166Z", "url": "https://files.pythonhosted.org/packages/dc/aa/e998e58651173811b18e29068273236ffaca3f5c0ce4eb968231fcf97dae/o3seespy-3.1.0.18.tar.gz", "yanked": false}], "3.1.0.19": [{"comment_text": "", "digests": {"md5": "bf7f91bd7af198bc5db1ff65b4eb6615", "sha256": "6f5ac48ff173552d275ca5633f1ac8c447d4e0d4457d4f0942bc000fba3d1bde"}, "downloads": -1, "filename": "o3seespy-3.1.0.19.tar.gz", "has_sig": false, "md5_digest": "bf7f91bd7af198bc5db1ff65b4eb6615", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 125847, "upload_time": "2020-04-09T00:15:37", "upload_time_iso_8601": "2020-04-09T00:15:37.062552Z", "url": "https://files.pythonhosted.org/packages/fa/5f/b10765bea647759acfe50dbf5e5ae7ab55e842aa8e0d7f529d3b196e84f8/o3seespy-3.1.0.19.tar.gz", "yanked": false}], "3.1.0.20": [{"comment_text": "", "digests": {"md5": "3ee7ea03b7c7a4006f077435b09badbe", "sha256": "17bce15101c0a4ce4b817e0574d3758100eaf7f9aad96bcba5c53bc386904a4c"}, "downloads": -1, "filename": "o3seespy-3.1.0.20.tar.gz", "has_sig": false, "md5_digest": "3ee7ea03b7c7a4006f077435b09badbe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 125933, "upload_time": "2020-04-19T01:15:27", "upload_time_iso_8601": "2020-04-19T01:15:27.980273Z", "url": "https://files.pythonhosted.org/packages/8e/4f/bd6f4fb51259b21d668bbd3a84583779c925d853933fc7949d20a7f5822e/o3seespy-3.1.0.20.tar.gz", "yanked": false}], "3.1.0.21": [{"comment_text": "", "digests": {"md5": "dba1264d836ce1390bdd458b665a56b4", "sha256": "4baff7b57ab76167e2b7a8de3d81732f729d44256c90e8ecd6e2e061ee630cf1"}, "downloads": -1, "filename": "o3seespy-3.1.0.21.tar.gz", "has_sig": false, "md5_digest": "dba1264d836ce1390bdd458b665a56b4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 126232, "upload_time": "2020-04-28T21:36:38", "upload_time_iso_8601": "2020-04-28T21:36:38.120286Z", "url": "https://files.pythonhosted.org/packages/04/ad/e972578d8665abedf0d523e0e6dbf03bf9719627082dbdf49c981fdc38ad/o3seespy-3.1.0.21.tar.gz", "yanked": false}], "3.1.0.22": [{"comment_text": "", "digests": {"md5": "d354ecc6744890d274827c9cba875b08", "sha256": "895263252cbb25d149f2dbc8006069f296b39c5e93f0fca1b79744ac5ed2d4e4"}, "downloads": -1, "filename": "o3seespy-3.1.0.22.tar.gz", "has_sig": false, "md5_digest": "d354ecc6744890d274827c9cba875b08", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 126846, "upload_time": "2020-04-29T01:59:50", "upload_time_iso_8601": "2020-04-29T01:59:50.103368Z", "url": "https://files.pythonhosted.org/packages/3f/1f/35fd22d5c55392de8c9becb1f1f134526d1544bc2f382ceaf1bd170c688d/o3seespy-3.1.0.22.tar.gz", "yanked": false}], "3.1.0.23": [{"comment_text": "", "digests": {"md5": "d8a1fbbbfff3659c2872e626c2fb4796", "sha256": "917fab8a88307122068000d38ac3ffd98e581ba6ffa6ca974c7e0e701b4b95f8"}, "downloads": -1, "filename": "o3seespy-3.1.0.23.tar.gz", "has_sig": false, "md5_digest": "d8a1fbbbfff3659c2872e626c2fb4796", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 129868, "upload_time": "2020-05-07T21:20:15", "upload_time_iso_8601": "2020-05-07T21:20:15.213677Z", "url": "https://files.pythonhosted.org/packages/b3/9d/b86b66508e38c8dff02930f1a66e11a790b22a12fc089b552af889f4c338/o3seespy-3.1.0.23.tar.gz", "yanked": false}], "3.1.0.6": [{"comment_text": "", "digests": {"md5": "d25803fb0da4434e070f989aea45d91f", "sha256": "addbb6e68de952a0f82b83fcdc1747c25fa3c8e45f919efd4a1aaf22bb997cd2"}, "downloads": -1, "filename": "o3seespy-3.1.0.6.tar.gz", "has_sig": false, "md5_digest": "d25803fb0da4434e070f989aea45d91f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 109009, "upload_time": "2020-01-27T04:08:12", "upload_time_iso_8601": "2020-01-27T04:08:12.354575Z", "url": "https://files.pythonhosted.org/packages/3f/99/ad372f2cb3bc2350c8f6f6e95ec908cfebdef440ac84613b351051e0f7d9/o3seespy-3.1.0.6.tar.gz", "yanked": false}], "3.1.0.8": [{"comment_text": "", "digests": {"md5": "5c4ecd34986edebdc8fdf2e2a5cb43c7", "sha256": "cb9d6269d02ad4975de2292cbc4c01129416e75f84f057975d3dcbd4edd1cae3"}, "downloads": -1, "filename": "o3seespy-3.1.0.8.tar.gz", "has_sig": false, "md5_digest": "5c4ecd34986edebdc8fdf2e2a5cb43c7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 111780, "upload_time": "2020-01-29T04:43:30", "upload_time_iso_8601": "2020-01-29T04:43:30.114532Z", "url": "https://files.pythonhosted.org/packages/83/44/9bfeda8cec2f5225d3110ff36cf0e139baabc4760ff5b42931fa008a14b5/o3seespy-3.1.0.8.tar.gz", "yanked": false}], "3.1.0.9": [{"comment_text": "", "digests": {"md5": "5f72e78b84e8f9d2ad65d1870fd59574", "sha256": "0f23244a7b86397251da380515f1aeeaf91d22a0c7777f640e397898b0b84d9f"}, "downloads": -1, "filename": "o3seespy-3.1.0.9.tar.gz", "has_sig": false, "md5_digest": "5f72e78b84e8f9d2ad65d1870fd59574", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 113481, "upload_time": "2020-02-03T22:06:25", "upload_time_iso_8601": "2020-02-03T22:06:25.768411Z", "url": "https://files.pythonhosted.org/packages/fe/cb/9c9edb9fbf86c66f4066bec451a4dcbb9876eab53476e572a506b8777861/o3seespy-3.1.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d8a1fbbbfff3659c2872e626c2fb4796", "sha256": "917fab8a88307122068000d38ac3ffd98e581ba6ffa6ca974c7e0e701b4b95f8"}, "downloads": -1, "filename": "o3seespy-3.1.0.23.tar.gz", "has_sig": false, "md5_digest": "d8a1fbbbfff3659c2872e626c2fb4796", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 129868, "upload_time": "2020-05-07T21:20:15", "upload_time_iso_8601": "2020-05-07T21:20:15.213677Z", "url": "https://files.pythonhosted.org/packages/b3/9d/b86b66508e38c8dff02930f1a66e11a790b22a12fc089b552af889f4c338/o3seespy-3.1.0.23.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:57 2020"}