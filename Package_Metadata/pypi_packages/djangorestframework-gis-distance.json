{"info": {"author": "Fr\u00f6jd", "author_email": "martin@marteinn.se", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Topic :: Utilities"], "description": "|Build Status|\n\nDjango-Rest-Framework-Gis-Distance\n==================================\n\nThis is a extension to\n`Django-Rest-Framework-Gis <https://github.com/djangonauts/django-rest-framework-gis>`__\nthat adds sorting and distance distance to the\n`DistanceToPointerFilter <https://github.com/djangonauts/django-rest-framework-gis#distancetopointfilter>`__.\n\nRequirements\n------------\n\n-  Python 2.7\n-  Django 1.7+\n-  Django-Rest-Framework-Gis 0.10+\n\nInstallation\n------------\n\nInstall the library with pip:\n\n::\n\n    $ pip install djangorestframework-gis-distance\n\nQuick Setup\n-----------\n\nMake sure ``rest_framework_gis_distance`` is added to your\n``INSTALLED_APPS``, after ``rest_framework`` and ``restframework_gis``.\n\n.. code:: python\n\n    INSTALLED_APPS = (\n        # ...\n\n        'rest_framework',\n        'rest_framework_gis',\n        'rest_framework_gis_distance',\n    )\n\nUsage\n-----\n\nRegular implementation\n~~~~~~~~~~~~~~~~~~~~~~\n\nFirst include DistanceField in your serializer.\n\n.. code:: python\n\n    from restframework_gis_distance.fields import DistanceField\n\n    class RecordSerializer(serializers.ModelSerializer):\n        distance = DistanceField(unit='m')\n\n        class Meta:\n            model = Record\n            fields = ('location', 'title', 'created', 'distance')\n\nThen use the filter ``OrderedDistanceToPointFilter`` in your view.\n\n.. code:: python\n\n    from restframework_gis_distance.filters import OrderedDistanceToPointFilter\n\n    class RecordListView(mixins.ListModelMixin, generics.GenericAPIView):\n        permission_classes = (AllowAny,)\n        serializer_class = RecordSerializer\n        queryset = Record.objects.all()\n        filter_backends = (OrderedDistanceToPointFilter,)\n        distance_filter_field = 'location'\n        distance_filter_convert_meters = True\n        distance_filter_add_distance = True\n\nAfter this, set up your urls as usual and call your endpoint like this:\n``example.com/api/endpoint/?dist=1000&point=long,lat``\n\nOptional field\n~~~~~~~~~~~~~~\n\nUsing distance as a optional field (for the cases when you only want to\ndisplay distance when geo coordinates is supplied)\n\nInstead of declaring a straight DistanceField, wrap the DistanceField as\na SerializerMethodField, like this:\n\n.. code:: python\n\n    from restframework_gis_distance.filters import OrderedDistanceToPointFilter\n\n    class RecordOptionalSerializer(serializers.ModelSerializer):\n        distance = serializers.SerializerMethodField()\n\n        class Meta:\n            model = Record\n            fields = ('location', 'title', 'created', 'distance')\n\n        def get_distance(self, obj):\n            distance = getattr(obj, \"distance\", None)\n            return DistanceField(unit='m').to_representation(distance)\n\nOptions\n-------\n\nThese belong in your DRF view:\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n-  ``distance_filter_field``: Target geo filtering field (inherited from\n   DistanceToPointerFilter).\n-  ``distance_srid``: (Optional) The srid you want to use on your\n   distance. (Default ``4326``)\n-  ``distance_sort_order``: (Optional) Indicates the sort order, closest\n   (``True``) or farthest (``False``). (Default: ``True``)\n\nQuestions\n---------\n\n-  How do I change distance unit?\n\n   -  Add the param unit=DESIRED\\_UNIT to your DistanceField, make sure\n      you use a `django supported\n      unit <https://docs.djangoproject.com/en/1.9/ref/contrib/gis/measure/#supported-units>`__.\n\nTests\n-----\n\nThis library include tests, just run ``python runtests.py``.\n\nContributing\n------------\n\nWant to contribute? Awesome. Just send a pull request.\n\nLicense\n-------\n\nDjango-Rest-Framework-Gis-Distance is released under the `MIT\nLicense <http://www.opensource.org/licenses/MIT>`__.\n\n.. |Build Status| image:: https://travis-ci.org/Frojd/restframework-gis-distance.svg?branch=master\n   :target: https://travis-ci.org/Frojd/restframework-gis-distance", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Frojd/restframework-gis-distance", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "djangorestframework-gis-distance", "package_url": "https://pypi.org/project/djangorestframework-gis-distance/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/djangorestframework-gis-distance/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/Frojd/restframework-gis-distance"}, "release_url": "https://pypi.org/project/djangorestframework-gis-distance/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "UNKNOWN", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/Frojd/restframework-gis-distance\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/88f894566b6cc233ba9b5f36b816029fa3944ea0/68747470733a2f2f7472617669732d63692e6f72672f46726f6a642f726573746672616d65776f726b2d6769732d64697374616e63652e7376673f6272616e63683d6d6173746572\"></a></p>\n<div id=\"django-rest-framework-gis-distance\">\n<h2>Django-Rest-Framework-Gis-Distance</h2>\n<p>This is a extension to\n<a href=\"https://github.com/djangonauts/django-rest-framework-gis\" rel=\"nofollow\">Django-Rest-Framework-Gis</a>\nthat adds sorting and distance distance to the\n<a href=\"https://github.com/djangonauts/django-rest-framework-gis#distancetopointfilter\" rel=\"nofollow\">DistanceToPointerFilter</a>.</p>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ul>\n<li>Python 2.7</li>\n<li>Django 1.7+</li>\n<li>Django-Rest-Framework-Gis 0.10+</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Install the library with pip:</p>\n<pre>$ pip install djangorestframework-gis-distance\n</pre>\n</div>\n<div id=\"quick-setup\">\n<h3>Quick Setup</h3>\n<p>Make sure <tt>rest_framework_gis_distance</tt> is added to your\n<tt>INSTALLED_APPS</tt>, after <tt>rest_framework</tt> and <tt>restframework_gis</tt>.</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"c1\"># ...</span>\n\n    <span class=\"s1\">'rest_framework'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'rest_framework_gis'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'rest_framework_gis_distance'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<div id=\"regular-implementation\">\n<h4>Regular implementation</h4>\n<p>First include DistanceField in your serializer.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">restframework_gis_distance.fields</span> <span class=\"kn\">import</span> <span class=\"n\">DistanceField</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">RecordSerializer</span><span class=\"p\">(</span><span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\n    <span class=\"n\">distance</span> <span class=\"o\">=</span> <span class=\"n\">DistanceField</span><span class=\"p\">(</span><span class=\"n\">unit</span><span class=\"o\">=</span><span class=\"s1\">'m'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Record</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'location'</span><span class=\"p\">,</span> <span class=\"s1\">'title'</span><span class=\"p\">,</span> <span class=\"s1\">'created'</span><span class=\"p\">,</span> <span class=\"s1\">'distance'</span><span class=\"p\">)</span>\n</pre>\n<p>Then use the filter <tt>OrderedDistanceToPointFilter</tt> in your view.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">restframework_gis_distance.filters</span> <span class=\"kn\">import</span> <span class=\"n\">OrderedDistanceToPointFilter</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">RecordListView</span><span class=\"p\">(</span><span class=\"n\">mixins</span><span class=\"o\">.</span><span class=\"n\">ListModelMixin</span><span class=\"p\">,</span> <span class=\"n\">generics</span><span class=\"o\">.</span><span class=\"n\">GenericAPIView</span><span class=\"p\">):</span>\n    <span class=\"n\">permission_classes</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">AllowAny</span><span class=\"p\">,)</span>\n    <span class=\"n\">serializer_class</span> <span class=\"o\">=</span> <span class=\"n\">RecordSerializer</span>\n    <span class=\"n\">queryset</span> <span class=\"o\">=</span> <span class=\"n\">Record</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n    <span class=\"n\">filter_backends</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">OrderedDistanceToPointFilter</span><span class=\"p\">,)</span>\n    <span class=\"n\">distance_filter_field</span> <span class=\"o\">=</span> <span class=\"s1\">'location'</span>\n    <span class=\"n\">distance_filter_convert_meters</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n    <span class=\"n\">distance_filter_add_distance</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n</pre>\n<p>After this, set up your urls as usual and call your endpoint like this:\n<tt><span class=\"pre\">example.com/api/endpoint/?dist=1000&amp;point=long,lat</span></tt></p>\n</div>\n<div id=\"optional-field\">\n<h4>Optional field</h4>\n<p>Using distance as a optional field (for the cases when you only want to\ndisplay distance when geo coordinates is supplied)</p>\n<p>Instead of declaring a straight DistanceField, wrap the DistanceField as\na SerializerMethodField, like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">restframework_gis_distance.filters</span> <span class=\"kn\">import</span> <span class=\"n\">OrderedDistanceToPointFilter</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">RecordOptionalSerializer</span><span class=\"p\">(</span><span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\n    <span class=\"n\">distance</span> <span class=\"o\">=</span> <span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">SerializerMethodField</span><span class=\"p\">()</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Record</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'location'</span><span class=\"p\">,</span> <span class=\"s1\">'title'</span><span class=\"p\">,</span> <span class=\"s1\">'created'</span><span class=\"p\">,</span> <span class=\"s1\">'distance'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_distance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n        <span class=\"n\">distance</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"s2\">\"distance\"</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">DistanceField</span><span class=\"p\">(</span><span class=\"n\">unit</span><span class=\"o\">=</span><span class=\"s1\">'m'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to_representation</span><span class=\"p\">(</span><span class=\"n\">distance</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"options\">\n<h3>Options</h3>\n<h3 id=\"these-belong-in-your-drf-view\"><span class=\"section-subtitle\">These belong in your DRF view:</span></h3>\n<ul>\n<li><tt>distance_filter_field</tt>: Target geo filtering field (inherited from\nDistanceToPointerFilter).</li>\n<li><tt>distance_srid</tt>: (Optional) The srid you want to use on your\ndistance. (Default <tt>4326</tt>)</li>\n<li><tt>distance_sort_order</tt>: (Optional) Indicates the sort order, closest\n(<tt>True</tt>) or farthest (<tt>False</tt>). (Default: <tt>True</tt>)</li>\n</ul>\n</div>\n<div id=\"questions\">\n<h3>Questions</h3>\n<ul>\n<li>How do I change distance unit?<ul>\n<li>Add the param unit=DESIRED_UNIT to your DistanceField, make sure\nyou use a <a href=\"https://docs.djangoproject.com/en/1.9/ref/contrib/gis/measure/#supported-units\" rel=\"nofollow\">django supported\nunit</a>.</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"tests\">\n<h3>Tests</h3>\n<p>This library include tests, just run <tt>python runtests.py</tt>.</p>\n</div>\n<div id=\"contributing\">\n<h3>Contributing</h3>\n<p>Want to contribute? Awesome. Just send a pull request.</p>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>Django-Rest-Framework-Gis-Distance is released under the <a href=\"http://www.opensource.org/licenses/MIT\" rel=\"nofollow\">MIT\nLicense</a>.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1944545, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "083063c4816ceb782df1c7a4f61cb5d5", "sha256": "e2c9f643b02d0c43407cbb2b4a6f5f140a30fe61d1baa407deddfefa30926798"}, "downloads": -1, "filename": "djangorestframework-gis-distance-1.0.0.tar.gz", "has_sig": false, "md5_digest": "083063c4816ceb782df1c7a4f61cb5d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5517, "upload_time": "2016-02-07T19:04:59", "upload_time_iso_8601": "2016-02-07T19:04:59.307891Z", "url": "https://files.pythonhosted.org/packages/54/83/496719d20ec65ae1b4c4e6dcc72c13ef6683ec7036d2573f16fc6073d277/djangorestframework-gis-distance-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "083063c4816ceb782df1c7a4f61cb5d5", "sha256": "e2c9f643b02d0c43407cbb2b4a6f5f140a30fe61d1baa407deddfefa30926798"}, "downloads": -1, "filename": "djangorestframework-gis-distance-1.0.0.tar.gz", "has_sig": false, "md5_digest": "083063c4816ceb782df1c7a4f61cb5d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5517, "upload_time": "2016-02-07T19:04:59", "upload_time_iso_8601": "2016-02-07T19:04:59.307891Z", "url": "https://files.pythonhosted.org/packages/54/83/496719d20ec65ae1b4c4e6dcc72c13ef6683ec7036d2573f16fc6073d277/djangorestframework-gis-distance-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:07 2020"}