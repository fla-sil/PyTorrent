{"info": {"author": "Brandon Gillespie", "author_email": "bjg-pypi@solv.com", "bugtrack_url": null, "classifiers": [], "description": "One Time JWT\n\nSimple mechanism for cross service authorization.  Usage:\n\nClient side:\n\n    import onetimejwt\n\n    jwt = onetimejwt.generate('shared secret', 60) # shared secret, 60 second age\n\n    headers = {\n        \"Authorization\": \"Bearer \" + onetimejwt.generate('shared secret', 60)\n    }\n\nServer side, create a single instance of Manager and use it for all threads:\n\n    import onetimejwt\n\n    # at startup, creates a cleanup thread\n    # note: you can include any number of secrets\n    JTM = onetimejwt.Manager('shared secret', maxage=60)\n\n    JTM.housekeeper()\n\n    # during processing -- throws JwtFailed exception if not authorized\n    JTM.valid(headers.get('Authorization'))\n\nManager will keep a list of recognized JWTS, and uses logging of a warning level\nto report problems.\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/srevenant/onetimejwt/tarball/1.0", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/srevenant/onetimejwt", "keywords": "jwt,api,auth", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "onetimejwt", "package_url": "https://pypi.org/project/onetimejwt/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/onetimejwt/", "project_urls": {"Download": "https://github.com/srevenant/onetimejwt/tarball/1.0", "Homepage": "https://github.com/srevenant/onetimejwt"}, "release_url": "https://pypi.org/project/onetimejwt/1.0.2/", "requires_dist": null, "requires_python": null, "summary": "Simple one time jwt - server and client bits", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            One Time JWT<br><br>Simple mechanism for cross service authorization.  Usage:<br><br>Client side:<br><br>    import onetimejwt<br><br>    jwt = onetimejwt.generate('shared secret', 60) # shared secret, 60 second age<br><br>    headers = {<br>        \"Authorization\": \"Bearer \" + onetimejwt.generate('shared secret', 60)<br>    }<br><br>Server side, create a single instance of Manager and use it for all threads:<br><br>    import onetimejwt<br><br>    # at startup, creates a cleanup thread<br>    # note: you can include any number of secrets<br>    JTM = onetimejwt.Manager('shared secret', maxage=60)<br><br>    JTM.housekeeper()<br><br>    # during processing -- throws JwtFailed exception if not authorized<br>    JTM.valid(headers.get('Authorization'))<br><br>Manager will keep a list of recognized JWTS, and uses logging of a warning level<br>to report problems.<br>\n          </div>"}, "last_serial": 2200025, "releases": {"1.0.2": [{"comment_text": "", "digests": {"md5": "a542bf82eb6d1d1be3b60c7d9920119f", "sha256": "b6d4d381580409faa1fb755060abd4c6191bffa9bed54529fe13d3064c7d12cd"}, "downloads": -1, "filename": "onetimejwt-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a542bf82eb6d1d1be3b60c7d9920119f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2811, "upload_time": "2016-07-03T02:43:24", "upload_time_iso_8601": "2016-07-03T02:43:24.548152Z", "url": "https://files.pythonhosted.org/packages/5b/05/14aa8e8c6aff4c66792e52b566b1b71d6deff553eee0c87f8a7877543b36/onetimejwt-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a542bf82eb6d1d1be3b60c7d9920119f", "sha256": "b6d4d381580409faa1fb755060abd4c6191bffa9bed54529fe13d3064c7d12cd"}, "downloads": -1, "filename": "onetimejwt-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a542bf82eb6d1d1be3b60c7d9920119f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2811, "upload_time": "2016-07-03T02:43:24", "upload_time_iso_8601": "2016-07-03T02:43:24.548152Z", "url": "https://files.pythonhosted.org/packages/5b/05/14aa8e8c6aff4c66792e52b566b1b71d6deff553eee0c87f8a7877543b36/onetimejwt-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:57 2020"}