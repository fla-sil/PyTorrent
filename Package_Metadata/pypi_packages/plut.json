{"info": {"author": "Brandon Hsiao", "author_email": "bh@stoatlabs.com", "bugtrack_url": null, "classifiers": [], "description": "plut\n====\n\nWhen you're building several web apps simultaneously (an increasingly\ncommon situation with microservices) it's annoying to try and remember\nwhich app is on which port. plut (port lookup table) does it for you.\n\nInstallation\n------------\n\nRun ::\n\n  pip install plut\n\nUsage\n-----\n\nplut maps names to ports. You supply a name and get back the port it's mapped\nto.\n\nImagine you have a web app with two microservices responsible for\nauthentication and the user dashboard. Each of these services needs to know\nwhat port to bind to when it starts up, and what port the other is on, so they\ncan talk. In this case, you might code-name these services ``auth``\nand ``dashboard`` respectively.  Inside the authentication service, you'd say: ::\n\n  import plut\n\n  port = plut.port('userauth')\n\n  run_webserver(port=port)\n\nNow imagine the authentication service exposes an API. Inside the dashboard\nservice you could say: ::\n\n  import plut\n\n  base_url = 'http://localhost:%d/api/v1' % plut.port('userauth')\n  # use requests or something to send requests to base_url\n\nFunctions\n*********\n\n * ``plut.port(name)`` returns the port that ``name`` maps to.\n   The same port will be returned for each ``name``, user-wide.\n\n * ``plut.services()`` returns a dict mapping names to ports.\n\nCommand-Line\n************\n\n * ``plut`` shows all names and ports.\n\n * ``plut <name>`` shows the port of a name. This prints out a single\n   integer, so you can use its output as a command-line argument for another\n   program.\n\n * ``plut rm <name>`` removes a port. (There's no programmatic API for this\n   at the moment. Should I add it? I'm a bit lazy.)\n\nNotes\n-----\n\nplut saves everything to ``~/.plutfile``. If you delete this you'll\nlose (or voluntarily reset) your mappings.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/brhsiao/plut/tarball/0.5.3", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/brhsiao/plut", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "plut", "package_url": "https://pypi.org/project/plut/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/plut/", "project_urls": {"Download": "https://github.com/brhsiao/plut/tarball/0.5.3", "Homepage": "https://github.com/brhsiao/plut"}, "release_url": "https://pypi.org/project/plut/0.5.3/", "requires_dist": null, "requires_python": null, "summary": "Port manager for developing multiple local web apps.", "version": "0.5.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>When you\u2019re building several web apps simultaneously (an increasingly\ncommon situation with microservices) it\u2019s annoying to try and remember\nwhich app is on which port. plut (port lookup table) does it for you.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Run</p>\n<pre>pip install plut\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>plut maps names to ports. You supply a name and get back the port it\u2019s mapped\nto.</p>\n<p>Imagine you have a web app with two microservices responsible for\nauthentication and the user dashboard. Each of these services needs to know\nwhat port to bind to when it starts up, and what port the other is on, so they\ncan talk. In this case, you might code-name these services <tt>auth</tt>\nand <tt>dashboard</tt> respectively.  Inside the authentication service, you\u2019d say:</p>\n<pre>import plut\n\nport = plut.port('userauth')\n\nrun_webserver(port=port)\n</pre>\n<p>Now imagine the authentication service exposes an API. Inside the dashboard\nservice you could say:</p>\n<pre>import plut\n\nbase_url = 'http://localhost:%d/api/v1' % plut.port('userauth')\n# use requests or something to send requests to base_url\n</pre>\n<div id=\"functions\">\n<h3>Functions</h3>\n<blockquote>\n<ul>\n<li><tt>plut.port(name)</tt> returns the port that <tt>name</tt> maps to.\nThe same port will be returned for each <tt>name</tt>, user-wide.</li>\n<li><tt>plut.services()</tt> returns a dict mapping names to ports.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"command-line\">\n<h3>Command-Line</h3>\n<blockquote>\n<ul>\n<li><tt>plut</tt> shows all names and ports.</li>\n<li><tt>plut &lt;name&gt;</tt> shows the port of a name. This prints out a single\ninteger, so you can use its output as a command-line argument for another\nprogram.</li>\n<li><tt>plut rm &lt;name&gt;</tt> removes a port. (There\u2019s no programmatic API for this\nat the moment. Should I add it? I\u2019m a bit lazy.)</li>\n</ul>\n</blockquote>\n</div>\n</div>\n<div id=\"notes\">\n<h2>Notes</h2>\n<p>plut saves everything to <tt><span class=\"pre\">~/.plutfile</span></tt>. If you delete this you\u2019ll\nlose (or voluntarily reset) your mappings.</p>\n</div>\n\n          </div>"}, "last_serial": 1787438, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "480783a3661ab89455ce8b10dfa8834d", "sha256": "3217498ef4c8775eb327def9fd3df2d8e0f78b95a9fcfc27f62bdd3db98908c9"}, "downloads": -1, "filename": "plut-0.1.tar.gz", "has_sig": false, "md5_digest": "480783a3661ab89455ce8b10dfa8834d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2984, "upload_time": "2015-10-22T20:33:23", "upload_time_iso_8601": "2015-10-22T20:33:23.309952Z", "url": "https://files.pythonhosted.org/packages/24/22/793214d58434978a1e63019bdcd62add99f1b16ad9b4cbac03139b493dbb/plut-0.1.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "66f2c567495ecc4b4e23a68ec529c02b", "sha256": "af459465d023d092c5622335357cb53209968638d44a3a8a56f86805ba5c4ca3"}, "downloads": -1, "filename": "plut-0.3.tar.gz", "has_sig": false, "md5_digest": "66f2c567495ecc4b4e23a68ec529c02b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3001, "upload_time": "2015-10-22T20:42:34", "upload_time_iso_8601": "2015-10-22T20:42:34.940896Z", "url": "https://files.pythonhosted.org/packages/3b/b1/1ce72e26eff47145d232761466c7bfbce662c7acb3e7581ba62f68ffd2da/plut-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "b3a708d23780a9c2eaf6ad76ab80a46b", "sha256": "c42f9bf11e256776ada3bb4dd852b7aeb60ba6efbd787905203f13be8370727f"}, "downloads": -1, "filename": "plut-0.4.tar.gz", "has_sig": false, "md5_digest": "b3a708d23780a9c2eaf6ad76ab80a46b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3071, "upload_time": "2015-10-22T20:49:13", "upload_time_iso_8601": "2015-10-22T20:49:13.336841Z", "url": "https://files.pythonhosted.org/packages/0c/dc/07bccf74da95c4c3841c1d837e2480eb837e29dcb759988bb03d4ed34c25/plut-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "c3a48facefc786cc5aaa13c53107aa14", "sha256": "139057e1e21f40a701a1876cfbf13144f9900f09477075f8270849fc4b28f009"}, "downloads": -1, "filename": "plut-0.5.tar.gz", "has_sig": false, "md5_digest": "c3a48facefc786cc5aaa13c53107aa14", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2779, "upload_time": "2015-10-22T21:58:42", "upload_time_iso_8601": "2015-10-22T21:58:42.716813Z", "url": "https://files.pythonhosted.org/packages/ab/8b/d36d684391e15d74f02a30ce6ccbbbef95f9c6d7fee524c2933c8fc8875c/plut-0.5.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "44421bf7379adb5d2663167875349b48", "sha256": "dd2cf3095999e30e61bfeefb628e7d384d7e01806ed43db5aae2b67417420e7f"}, "downloads": -1, "filename": "plut-0.5.1.tar.gz", "has_sig": false, "md5_digest": "44421bf7379adb5d2663167875349b48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2831, "upload_time": "2015-10-22T22:23:00", "upload_time_iso_8601": "2015-10-22T22:23:00.650712Z", "url": "https://files.pythonhosted.org/packages/ce/ee/7d1e91a0ced3fa6703255743a0c1f17806be8ae2b81c855288aa1c770f60/plut-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "adccff3c53f2aa2351abb8a86cccc9af", "sha256": "cd4711738eb0f49ff483eda5da48b31fea981c74979b2a0c7b4b73b38e753b7e"}, "downloads": -1, "filename": "plut-0.5.2.tar.gz", "has_sig": false, "md5_digest": "adccff3c53f2aa2351abb8a86cccc9af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3321, "upload_time": "2015-10-26T22:10:37", "upload_time_iso_8601": "2015-10-26T22:10:37.148844Z", "url": "https://files.pythonhosted.org/packages/ec/1e/5de4cc0853beba8ebeeee912248d60c3c8d3dea735f57a053305d7c30d5b/plut-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "0ecd1669fa13586fb9498a63a21b85d3", "sha256": "798a5eafa00b8de500e82e3734af9bd62af23b4ab38876727db3fa4601b10595"}, "downloads": -1, "filename": "plut-0.5.3.tar.gz", "has_sig": false, "md5_digest": "0ecd1669fa13586fb9498a63a21b85d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3313, "upload_time": "2015-10-26T22:12:37", "upload_time_iso_8601": "2015-10-26T22:12:37.732082Z", "url": "https://files.pythonhosted.org/packages/c1/96/b73cffe95304d15a838c5ad633fc2d98be965d7aca211e68a8f0480da2ec/plut-0.5.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0ecd1669fa13586fb9498a63a21b85d3", "sha256": "798a5eafa00b8de500e82e3734af9bd62af23b4ab38876727db3fa4601b10595"}, "downloads": -1, "filename": "plut-0.5.3.tar.gz", "has_sig": false, "md5_digest": "0ecd1669fa13586fb9498a63a21b85d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3313, "upload_time": "2015-10-26T22:12:37", "upload_time_iso_8601": "2015-10-26T22:12:37.732082Z", "url": "https://files.pythonhosted.org/packages/c1/96/b73cffe95304d15a838c5ad633fc2d98be965d7aca211e68a8f0480da2ec/plut-0.5.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:52:24 2020"}