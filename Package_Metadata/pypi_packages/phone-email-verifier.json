{"info": {"author": "Christian BOGRO", "author_email": "bogrolcr@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# PHONE & EMAIL Verifier\n\n## Description\n Validation of the email and international or local telephone number.\n\n## Install\n\nIf you install with\n\n    pip install phone_email_verifier\n\n\n1 : Download here https://github.com/Bogro/phone_email_verifier/blob/develop/phone_email_verifier/code.txt and drop it at the root of your project.\n\n2 : Add the phone code dictionary path in the .env of your project.\n\n    #.env\n    DICT_CODE=\"dict_name.txt\"\n\nNote: This file is important for checking phone numbers\n\n\nFor direct downloads on github you do not need to follow the process above\n\n## Usage\n\n   ### E-mail\n\n\n    from phone_email_verifier.email_verifier import email_verifier as email_v\n\n\n    email = email_v()\n\n    email_list = ['test@mail.tx', 'demo@mail.test', 'e.mail@mailer.com']\n\n    >>> email.set_email_list(email_list) \n\n    or\n\n    >>> email.set_email_in_file(file_name)\n\n    >>> email.exec()\n\n    {'OK': ['test@mail.tx', 'e.mail@mailer.com'], 'ERROR': ['demo@mail.test']}\n\n#### Remarque:\nIt is possible to make a restriction on the country by making:\n\n    >>> email.set_email_list(email, 'FR')\n\n    or\n\n    >>> email.set_email_in_file(file_name, 'FR')\n\nand this will make a filter on any email not ending\n\n    .fr\n\nif the file used is a CSV, indicate the column of email\n\n    >>> email.set_email_in_file(file_name, colum=0)\n\n    or\n\n    >>> email.set_email_in_file(file_name, 'FR', 0)\n\n##### Reamarque\n    Les types de fichier utilisable sont:\n    CSV et TXT\n\n\n   ### Phone\n\n\n    from phone_email_verifier.phone_verifier import phone_verifier as phone_v\n\n    phone = phone_v()\n\n    phone_list = ['+22547000000', '+225-47-00-00-00', '+225 47 00 00 00 00', '+33 00 25 00 11', '47 02 00 00']\n\n\n#### simple use\n\n    >>> filter.set_phone_list(phone_list)\n\n    or\n\n    >>> filter.set_phone_in_file(file_name)\n\n    >>> filter.exec()\n\n    {'OK': ['+22547000000', '+22547000000', '+2254700000000', '+3300250011'], 'ERROR': ['47020000']}\n\n\n#### Advance use\n\nIt is possible to make a precision with the name of the country and is identifying code\n\n    >>> filter.set_phone_list(phone_list, 'FR', '+33')\n\n    or\n\n    >>> filter.set_phone_in_file(name_list, 'FR', '+33', colum=0) # colum is column of numbers\n\n    >>> filter.exec()\n\n    {'OK': ['+3300250011'], 'ERROR': ['47020000', '+22547000000', '+22547000000', '+2254700000000']}\n\n\nIt is important to specify the number column when the file is a csv file.\n\n\n# For code dictionary identify countries\n\nYou can add or reduce the list according to your usage.\nI advise you to reduce according to your use, to make fast execution\n\n## How to add\n\nTo add, go to the line and:\n\nThe name of the country, abbreviation of the name, identify code (+33 | 33 | 0033), length of the number without the identified code and the local code, the local code if it exists,\n\nExample:\n\nCountry name\n--------------\n    France\n\nAbbreviation country name\n------------------\n    FR\n\nIdentify code\n----------------\n    +33|33|0033\n\nLength phone number\n-----------------\n    8\n\nNote:\n\nIf the number can be several lengths, add it in ascending order with \" | \" as separator\n\n    6|7|8|9\n\nLocal code\n-------------\ns'il existe \n\n    0\n\nNote: if there are more than one, add with \" | \" as separator\n\n    0|1|2\n\nif it does not exist the line ends with a\n\n    ','\n\nin the end we have this line\n\n    France,FR,+33|33|0033,8,0,\n\n\n\n### Final note\n\n    * The spaces between the values \u200b\u200bare forbidden\n    * The finished line always with a \";\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/Bogro/phone_email_verifier/tarball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Bogro/phone_email_verifier", "keywords": "email,phone number,filter,blocking,text,phone local,phone international", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "phone-email-verifier", "package_url": "https://pypi.org/project/phone-email-verifier/", "platform": "", "project_url": "https://pypi.org/project/phone-email-verifier/", "project_urls": {"Download": "https://github.com/Bogro/phone_email_verifier/tarball/master", "Homepage": "https://github.com/Bogro/phone_email_verifier"}, "release_url": "https://pypi.org/project/phone-email-verifier/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "Validation of the email or international or local telephone number", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PHONE &amp; EMAIL Verifier</h1>\n<h2>Description</h2>\n<p>Validation of the email and international or local telephone number.</p>\n<h2>Install</h2>\n<p>If you install with</p>\n<pre><code>pip install phone_email_verifier\n</code></pre>\n<p>1 : Download here <a href=\"https://github.com/Bogro/phone_email_verifier/blob/develop/phone_email_verifier/code.txt\" rel=\"nofollow\">https://github.com/Bogro/phone_email_verifier/blob/develop/phone_email_verifier/code.txt</a> and drop it at the root of your project.</p>\n<p>2 : Add the phone code dictionary path in the .env of your project.</p>\n<pre><code>#.env\nDICT_CODE=\"dict_name.txt\"\n</code></pre>\n<p>Note: This file is important for checking phone numbers</p>\n<p>For direct downloads on github you do not need to follow the process above</p>\n<h2>Usage</h2>\n<h3>E-mail</h3>\n<pre><code>from phone_email_verifier.email_verifier import email_verifier as email_v\n\n\nemail = email_v()\n\nemail_list = ['test@mail.tx', 'demo@mail.test', 'e.mail@mailer.com']\n\n&gt;&gt;&gt; email.set_email_list(email_list) \n\nor\n\n&gt;&gt;&gt; email.set_email_in_file(file_name)\n\n&gt;&gt;&gt; email.exec()\n\n{'OK': ['test@mail.tx', 'e.mail@mailer.com'], 'ERROR': ['demo@mail.test']}\n</code></pre>\n<h4>Remarque:</h4>\n<p>It is possible to make a restriction on the country by making:</p>\n<pre><code>&gt;&gt;&gt; email.set_email_list(email, 'FR')\n\nor\n\n&gt;&gt;&gt; email.set_email_in_file(file_name, 'FR')\n</code></pre>\n<p>and this will make a filter on any email not ending</p>\n<pre><code>.fr\n</code></pre>\n<p>if the file used is a CSV, indicate the column of email</p>\n<pre><code>&gt;&gt;&gt; email.set_email_in_file(file_name, colum=0)\n\nor\n\n&gt;&gt;&gt; email.set_email_in_file(file_name, 'FR', 0)\n</code></pre>\n<h5>Reamarque</h5>\n<pre><code>Les types de fichier utilisable sont:\nCSV et TXT\n</code></pre>\n<h3>Phone</h3>\n<pre><code>from phone_email_verifier.phone_verifier import phone_verifier as phone_v\n\nphone = phone_v()\n\nphone_list = ['+22547000000', '+225-47-00-00-00', '+225 47 00 00 00 00', '+33 00 25 00 11', '47 02 00 00']\n</code></pre>\n<h4>simple use</h4>\n<pre><code>&gt;&gt;&gt; filter.set_phone_list(phone_list)\n\nor\n\n&gt;&gt;&gt; filter.set_phone_in_file(file_name)\n\n&gt;&gt;&gt; filter.exec()\n\n{'OK': ['+22547000000', '+22547000000', '+2254700000000', '+3300250011'], 'ERROR': ['47020000']}\n</code></pre>\n<h4>Advance use</h4>\n<p>It is possible to make a precision with the name of the country and is identifying code</p>\n<pre><code>&gt;&gt;&gt; filter.set_phone_list(phone_list, 'FR', '+33')\n\nor\n\n&gt;&gt;&gt; filter.set_phone_in_file(name_list, 'FR', '+33', colum=0) # colum is column of numbers\n\n&gt;&gt;&gt; filter.exec()\n\n{'OK': ['+3300250011'], 'ERROR': ['47020000', '+22547000000', '+22547000000', '+2254700000000']}\n</code></pre>\n<p>It is important to specify the number column when the file is a csv file.</p>\n<h1>For code dictionary identify countries</h1>\n<p>You can add or reduce the list according to your usage.\nI advise you to reduce according to your use, to make fast execution</p>\n<h2>How to add</h2>\n<p>To add, go to the line and:</p>\n<p>The name of the country, abbreviation of the name, identify code (+33 | 33 | 0033), length of the number without the identified code and the local code, the local code if it exists,</p>\n<p>Example:</p>\n<h2>Country name</h2>\n<pre><code>France\n</code></pre>\n<h2>Abbreviation country name</h2>\n<pre><code>FR\n</code></pre>\n<h2>Identify code</h2>\n<pre><code>+33|33|0033\n</code></pre>\n<h2>Length phone number</h2>\n<pre><code>8\n</code></pre>\n<p>Note:</p>\n<p>If the number can be several lengths, add it in ascending order with \" | \" as separator</p>\n<pre><code>6|7|8|9\n</code></pre>\n<h2>Local code</h2>\n<p>s'il existe</p>\n<pre><code>0\n</code></pre>\n<p>Note: if there are more than one, add with \" | \" as separator</p>\n<pre><code>0|1|2\n</code></pre>\n<p>if it does not exist the line ends with a</p>\n<pre><code>','\n</code></pre>\n<p>in the end we have this line</p>\n<pre><code>France,FR,+33|33|0033,8,0,\n</code></pre>\n<h3>Final note</h3>\n<pre><code>* The spaces between the values \u200b\u200bare forbidden\n* The finished line always with a \";\n</code></pre>\n\n          </div>"}, "last_serial": 5618587, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e3590a5637435dfb60838eaada6fd369", "sha256": "3f10ddd400c5b8fc15ca7590c8e0360a5e0e74b9870be8e17be1b9e69de59f2d"}, "downloads": -1, "filename": "phone_email_verifier-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e3590a5637435dfb60838eaada6fd369", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6779, "upload_time": "2019-07-29T17:27:38", "upload_time_iso_8601": "2019-07-29T17:27:38.035237Z", "url": "https://files.pythonhosted.org/packages/fb/4e/bbb09fd14a2458a954645249c460eec06f9e27a9a0a12d4d60d0a7cc2c90/phone_email_verifier-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8fd1d78a74bb7551502d1ba530567962", "sha256": "0d4d56378ac1129f9c4fe6234bfa003785160e0085db70b783c99f762103cd06"}, "downloads": -1, "filename": "phone_email_verifier-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8fd1d78a74bb7551502d1ba530567962", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3927, "upload_time": "2019-07-29T17:27:40", "upload_time_iso_8601": "2019-07-29T17:27:40.720560Z", "url": "https://files.pythonhosted.org/packages/4a/df/fb6289d081d784048419d8d4f2337126ea32e275bf497b8699fd6e9ca4a6/phone_email_verifier-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "01597d8a7163a087c8f6fda55c173f9c", "sha256": "6e7a9df3bdd6b281441647f104671a71fe78ac97ca3aced852ae2a3ba6c8eeef"}, "downloads": -1, "filename": "phone_email_verifier-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "01597d8a7163a087c8f6fda55c173f9c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7540, "upload_time": "2019-07-30T10:40:09", "upload_time_iso_8601": "2019-07-30T10:40:09.302309Z", "url": "https://files.pythonhosted.org/packages/f5/2d/7ed33280a4b29bd534ce4f7d77cb1eb664e31db34d8cc68500251820e605/phone_email_verifier-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08d6f5df43f3e9cf613afc09e78f457f", "sha256": "cbbf7ae2513e4129cc2a9f25fa40c70181eeca5754d525c0ebec4959bdc83b94"}, "downloads": -1, "filename": "phone_email_verifier-0.0.2.tar.gz", "has_sig": false, "md5_digest": "08d6f5df43f3e9cf613afc09e78f457f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4348, "upload_time": "2019-07-30T10:40:10", "upload_time_iso_8601": "2019-07-30T10:40:10.554799Z", "url": "https://files.pythonhosted.org/packages/62/01/8b3797767c3892c9437ef7dbed676910f647e6dbc9c8d1557eecb06358bf/phone_email_verifier-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "48b7582944124276673f17021d8bdf8f", "sha256": "52a315d523dad6cddec0b20708b6369036e1194a9ff2274200583137a5cb5010"}, "downloads": -1, "filename": "phone_email_verifier-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "48b7582944124276673f17021d8bdf8f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7732, "upload_time": "2019-07-30T12:20:41", "upload_time_iso_8601": "2019-07-30T12:20:41.636021Z", "url": "https://files.pythonhosted.org/packages/b1/6e/730b26e6e93373fc015c6246bd0d1351c8a9efdc19ca92ea3da556f0d982/phone_email_verifier-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d89119e7f2e67035465937f414b7829", "sha256": "48e0292030463aeb653ee637f54391f5df1de19c259e730b14b73df7360d9994"}, "downloads": -1, "filename": "phone_email_verifier-0.0.3.tar.gz", "has_sig": false, "md5_digest": "2d89119e7f2e67035465937f414b7829", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4534, "upload_time": "2019-07-30T12:20:43", "upload_time_iso_8601": "2019-07-30T12:20:43.098646Z", "url": "https://files.pythonhosted.org/packages/25/f9/e09deb73367f3fc5d9e3b35a23c914b050f0cee498e61e9bcd20a4db09c0/phone_email_verifier-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "97fd0cf96b48f371eba4057bd3fb6282", "sha256": "67d03a27ce84e9a8221dc9dcac354711888eb7bcc140e3163327031267bb6b7c"}, "downloads": -1, "filename": "phone_email_verifier-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "97fd0cf96b48f371eba4057bd3fb6282", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9924, "upload_time": "2019-08-01T12:38:55", "upload_time_iso_8601": "2019-08-01T12:38:55.822319Z", "url": "https://files.pythonhosted.org/packages/47/b0/89dbb313ba473a92571e9f75f8ef8fc1d673074a34c6d69264e32a8925e6/phone_email_verifier-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d38b431b0584bd1ca58297d50b7f2a20", "sha256": "84c712941e8b16e577de36d2158efe8dc015a1ba17a2f92c2252d8dd20a15dfe"}, "downloads": -1, "filename": "phone_email_verifier-0.0.4.tar.gz", "has_sig": false, "md5_digest": "d38b431b0584bd1ca58297d50b7f2a20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5850, "upload_time": "2019-08-01T12:38:58", "upload_time_iso_8601": "2019-08-01T12:38:58.160647Z", "url": "https://files.pythonhosted.org/packages/16/d1/e0db0ed9a1a2464d5e485f49c46b02ebb954d3011dc22eab7cbbf8bac322/phone_email_verifier-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "97fd0cf96b48f371eba4057bd3fb6282", "sha256": "67d03a27ce84e9a8221dc9dcac354711888eb7bcc140e3163327031267bb6b7c"}, "downloads": -1, "filename": "phone_email_verifier-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "97fd0cf96b48f371eba4057bd3fb6282", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9924, "upload_time": "2019-08-01T12:38:55", "upload_time_iso_8601": "2019-08-01T12:38:55.822319Z", "url": "https://files.pythonhosted.org/packages/47/b0/89dbb313ba473a92571e9f75f8ef8fc1d673074a34c6d69264e32a8925e6/phone_email_verifier-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d38b431b0584bd1ca58297d50b7f2a20", "sha256": "84c712941e8b16e577de36d2158efe8dc015a1ba17a2f92c2252d8dd20a15dfe"}, "downloads": -1, "filename": "phone_email_verifier-0.0.4.tar.gz", "has_sig": false, "md5_digest": "d38b431b0584bd1ca58297d50b7f2a20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5850, "upload_time": "2019-08-01T12:38:58", "upload_time_iso_8601": "2019-08-01T12:38:58.160647Z", "url": "https://files.pythonhosted.org/packages/16/d1/e0db0ed9a1a2464d5e485f49c46b02ebb954d3011dc22eab7cbbf8bac322/phone_email_verifier-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:28 2020"}