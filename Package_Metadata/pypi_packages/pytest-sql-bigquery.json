{"info": {"author": "TKNGUE", "author_email": "takegue@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "\n# Pytest plugin for Bigquery SQL\n\npytest-sql-bigquery is pytest-plugin which provides a sql-unitest-framework for BigQuery.\nThis plugin adopts an end-to-end approch that runnning SQL test on SQL engines.\n\n## Yet anthoer approch to tst SQL code\n\nSee following SQL codes:\n\n```sql\nwith dataset as (\n    select 1\n    union all select 2\n)\n, __check_sample as (\n    select 'test' as label, count(1) as actual, 2 as expected from dataset \n)\n\nselect * from dataset\n```\n\nThis code is minimal example including test case.\n`__check_sample` is a test case which makes sure the `dataset` view has just 2 record.\n\n\nOur idea is very simple: \"Verify SQL code by SQL-self.\"\n\nThis plugin generate SQL test codes from SQL and executed them on SQL-engine such as BigQuery.\n\nThe advantages of this approch are \n\n- SQL codes owns specification itself\n- Provide portability of logic and its test codes. \n- Free to hard-mocking database system\n\n\n# Get Started\n\n## Requirements\n\n- Python >= 3.7\n- sqlparse\n- google-cloud-bigquery (For BigQuery integration)\n\n- BigQuery (Google Cloud Project)\n\n## Install\n\n```\npip install pytest-bigquery-sql\n```\n\nThen, set up `confidist.py` for pytest settings.\n\n```python\nimport pytest\n\nfrom pytest_sql_bigquery.integrations.pytest import SQLReaderForChecking\n\nclass ChainPytestFile(pytest.File):\n\n    def __init__(self, path, parent, chains, **kwargs):\n        super().__init__(path, parent, **kwargs)\n        self.chains = chains\n\n    def collect(self):\n        for interpreter in self.chains:\n            yield from interpreter.collect()\n\ndef pytest_collect_file(parent, path):\n    if path.ext == \".sql\":\n        return ChainPytestFile(\n            path, parent,\n            [\n                SQLReaderForChecking(path, parent),\n            ])\n```\n\nRun test for `examples/sql` directory\n\n```\npytest run -vv examples/sql \n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "sql,bigquery,pytest", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pytest-sql-bigquery", "package_url": "https://pypi.org/project/pytest-sql-bigquery/", "platform": "", "project_url": "https://pypi.org/project/pytest-sql-bigquery/", "project_urls": null, "release_url": "https://pypi.org/project/pytest-sql-bigquery/0.0.3/", "requires_dist": ["sqlparse (==0.2.4)", "tabulate", "pytest", "google-cloud-bigquery"], "requires_python": ">=3.7,<4.0", "summary": "Yet another SQL-testing framework for BigQuery provided by pytest plugin ", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Pytest plugin for Bigquery SQL</h1>\n<p>pytest-sql-bigquery is pytest-plugin which provides a sql-unitest-framework for BigQuery.\nThis plugin adopts an end-to-end approch that runnning SQL test on SQL engines.</p>\n<h2>Yet anthoer approch to tst SQL code</h2>\n<p>See following SQL codes:</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">dataset</span> <span class=\"k\">as</span> <span class=\"p\">(</span>\n    <span class=\"k\">select</span> <span class=\"mi\">1</span>\n    <span class=\"k\">union</span> <span class=\"k\">all</span> <span class=\"k\">select</span> <span class=\"mi\">2</span>\n<span class=\"p\">)</span>\n<span class=\"p\">,</span> <span class=\"n\">__check_sample</span> <span class=\"k\">as</span> <span class=\"p\">(</span>\n    <span class=\"k\">select</span> <span class=\"s1\">'test'</span> <span class=\"k\">as</span> <span class=\"n\">label</span><span class=\"p\">,</span> <span class=\"k\">count</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">actual</span><span class=\"p\">,</span> <span class=\"mi\">2</span> <span class=\"k\">as</span> <span class=\"n\">expected</span> <span class=\"k\">from</span> <span class=\"n\">dataset</span> \n<span class=\"p\">)</span>\n\n<span class=\"k\">select</span> <span class=\"o\">*</span> <span class=\"k\">from</span> <span class=\"n\">dataset</span>\n</pre>\n<p>This code is minimal example including test case.\n<code>__check_sample</code> is a test case which makes sure the <code>dataset</code> view has just 2 record.</p>\n<p>Our idea is very simple: \"Verify SQL code by SQL-self.\"</p>\n<p>This plugin generate SQL test codes from SQL and executed them on SQL-engine such as BigQuery.</p>\n<p>The advantages of this approch are</p>\n<ul>\n<li>SQL codes owns specification itself</li>\n<li>Provide portability of logic and its test codes.</li>\n<li>Free to hard-mocking database system</li>\n</ul>\n<h1>Get Started</h1>\n<h2>Requirements</h2>\n<ul>\n<li>\n<p>Python &gt;= 3.7</p>\n</li>\n<li>\n<p>sqlparse</p>\n</li>\n<li>\n<p>google-cloud-bigquery (For BigQuery integration)</p>\n</li>\n<li>\n<p>BigQuery (Google Cloud Project)</p>\n</li>\n</ul>\n<h2>Install</h2>\n<pre><code>pip install pytest-bigquery-sql\n</code></pre>\n<p>Then, set up <code>confidist.py</code> for pytest settings.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pytest</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pytest_sql_bigquery.integrations.pytest</span> <span class=\"kn\">import</span> <span class=\"n\">SQLReaderForChecking</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ChainPytestFile</span><span class=\"p\">(</span><span class=\"n\">pytest</span><span class=\"o\">.</span><span class=\"n\">File</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"p\">,</span> <span class=\"n\">chains</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">chains</span> <span class=\"o\">=</span> <span class=\"n\">chains</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">collect</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">interpreter</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">chains</span><span class=\"p\">:</span>\n            <span class=\"k\">yield from</span> <span class=\"n\">interpreter</span><span class=\"o\">.</span><span class=\"n\">collect</span><span class=\"p\">()</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">pytest_collect_file</span><span class=\"p\">(</span><span class=\"n\">parent</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">ext</span> <span class=\"o\">==</span> <span class=\"s2\">\".sql\"</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">ChainPytestFile</span><span class=\"p\">(</span>\n            <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span>\n                <span class=\"n\">SQLReaderForChecking</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"p\">),</span>\n            <span class=\"p\">])</span>\n</pre>\n<p>Run test for <code>examples/sql</code> directory</p>\n<pre><code>pytest run -vv examples/sql \n</code></pre>\n\n          </div>"}, "last_serial": 6334242, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "0c0da4d93c023b94d2bb46c3a07836b0", "sha256": "e5dbcc48dd2e5b8e6cf40bb53736b2031fcfa101ed97ab7ccec7ce39da7b56c4"}, "downloads": -1, "filename": "pytest_sql_bigquery-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0c0da4d93c023b94d2bb46c3a07836b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 4496, "upload_time": "2019-12-19T01:32:49", "upload_time_iso_8601": "2019-12-19T01:32:49.474365Z", "url": "https://files.pythonhosted.org/packages/c5/af/4fb86894072a0fdab9a4e4814e0c5b4478245036bfbcbe378d027958cfc0/pytest_sql_bigquery-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b00fcd0a24e22c98dbd6b73490aeb8d7", "sha256": "31e5c36b3ae849977396563b3f1449302a608e9da938665a6893b71e87d142be"}, "downloads": -1, "filename": "pytest-sql-bigquery-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b00fcd0a24e22c98dbd6b73490aeb8d7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 3860, "upload_time": "2019-12-19T01:32:47", "upload_time_iso_8601": "2019-12-19T01:32:47.019000Z", "url": "https://files.pythonhosted.org/packages/74/a6/112d599e40e739e57ae25403a14ba6ae07e9b4de1e08038360d15e8bd7bf/pytest-sql-bigquery-0.0.1.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "898bdbddb15c5363ea884be97717e212", "sha256": "f65d4dfc0f1582625d3e8a95113e899287f081cd354b4a430ffa6f611f224023"}, "downloads": -1, "filename": "pytest_sql_bigquery-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "898bdbddb15c5363ea884be97717e212", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 5368, "upload_time": "2019-12-19T17:34:11", "upload_time_iso_8601": "2019-12-19T17:34:11.374189Z", "url": "https://files.pythonhosted.org/packages/6d/6f/b30630efda258f0468e47c5dda275309ae38339be1f8b5527851596b880a/pytest_sql_bigquery-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb9e1d4d90da54f629c87c31e6425491", "sha256": "37a7e99c1d00a70dd9793144c4892483031a2c5d0946630f52dee5b8faa645e2"}, "downloads": -1, "filename": "pytest_sql_bigquery-0.0.3.tar.gz", "has_sig": false, "md5_digest": "fb9e1d4d90da54f629c87c31e6425491", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 4981, "upload_time": "2019-12-19T17:34:12", "upload_time_iso_8601": "2019-12-19T17:34:12.858853Z", "url": "https://files.pythonhosted.org/packages/5a/8e/12961d1e8927c367944a612b0bbaac510f632b58b86501afc46057f05ece/pytest_sql_bigquery-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "898bdbddb15c5363ea884be97717e212", "sha256": "f65d4dfc0f1582625d3e8a95113e899287f081cd354b4a430ffa6f611f224023"}, "downloads": -1, "filename": "pytest_sql_bigquery-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "898bdbddb15c5363ea884be97717e212", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 5368, "upload_time": "2019-12-19T17:34:11", "upload_time_iso_8601": "2019-12-19T17:34:11.374189Z", "url": "https://files.pythonhosted.org/packages/6d/6f/b30630efda258f0468e47c5dda275309ae38339be1f8b5527851596b880a/pytest_sql_bigquery-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb9e1d4d90da54f629c87c31e6425491", "sha256": "37a7e99c1d00a70dd9793144c4892483031a2c5d0946630f52dee5b8faa645e2"}, "downloads": -1, "filename": "pytest_sql_bigquery-0.0.3.tar.gz", "has_sig": false, "md5_digest": "fb9e1d4d90da54f629c87c31e6425491", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 4981, "upload_time": "2019-12-19T17:34:12", "upload_time_iso_8601": "2019-12-19T17:34:12.858853Z", "url": "https://files.pythonhosted.org/packages/5a/8e/12961d1e8927c367944a612b0bbaac510f632b58b86501afc46057f05ece/pytest_sql_bigquery-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:40 2020"}