{"info": {"author": "Florian Scherf", "author_email": "f.scherf@pengutronix.de", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Internet :: WWW/HTTP"], "description": ".. image:: https://img.shields.io/pypi/v/aiohttp-json-rpc.svg\n   :target: https://pypi.org/project/aiohttp-json-rpc\n\n.. image:: https://img.shields.io/travis/com/pengutronix/aiohttp-json-rpc/master.svg?label=Linux%20build%20%40%20Travis%20CI\n   :target: http://travis-ci.com/pengutronix/aiohttp-json-rpc\n\n.. image:: https://img.shields.io/pypi/pyversions/aiohttp-json-rpc.svg\n\naiohttp-json-rpc\n================\n\nImplements `JSON-RPC 2.0 Specification <http://www.jsonrpc.org/specification>`_ using `aiohttp <http://aiohttp.readthedocs.org/en/stable/>`_\n\n+---------------+---------------+\n| Protocol      | Support       |\n+===============+===============+\n| Websocket     | since v0.1    |\n+---------------+---------------+\n| POST          | TODO          |\n+---------------+---------------+\n| GET           | TODO          |\n+---------------+---------------+\n\n\nInstallation\n------------\n\n.. code-block:: shell\n\n  pip install aiohttp-json-rpc\n\n\nUsage\n-----\n\nRPC methods can be added by using ``rpc.add_method()``.\n\nAll RPC methods are getting passed a ``aiohttp_json_rpc.communicaton.JsonRpcRequest``.\n\n\nServer\n~~~~~~\n\nThe following code implements a simple RPC server that serves the method ``ping`` on ``localhost:8080``.\n\n.. code-block:: python\n\n  from aiohttp.web import Application, run_app\n  from aiohttp_json_rpc import JsonRpc\n  import asyncio\n\n\n  async def ping(request):\n      return 'pong'\n\n\n  if __name__ == '__main__':\n      loop = asyncio.get_event_loop()\n\n      rpc = JsonRpc()\n      rpc.add_methods(\n          ('', ping),\n      )\n\n      app = Application(loop=loop)\n      app.router.add_route('*', '/', rpc.handle_request)\n\n      run_app(app, host='0.0.0.0', port=8080)\n\n\nClient (JS)\n~~~~~~~~~~~\n\nThe following code implements a simple RPC client that connects to the server above\nand prints all incoming messages to the console.\n\n.. code-block:: html\n\n  <script src=\"//code.jquery.com/jquery-2.2.1.js\"></script>\n  <script>\n    var ws = new WebSocket(\"ws://localhost:8080\");\n    var message_id = 0;\n\n    ws.onmessage = function(event) {\n      console.log(JSON.parse(event.data));\n    }\n\n    function ws_call_method(method, params) {\n      var request = {\n        jsonrpc: \"2.0\",\n        id: message_id,\n        method: method,\n        params: params\n      }\n\n      ws.send(JSON.stringify(request));\n      message_id++;\n    }\n  </script>\n\nThese are example responses the server would give if you call ``ws_call_method``.\n\n.. code-block:: html\n\n  --> ws_call_method(\"get_methods\")\n  <-- {\"jsonrpc\": \"2.0\", \"result\": [\"get_methods\", \"ping\"], \"id\": 1}\n\n  --> ws_call_method(\"ping\")\n  <-- {\"jsonrpc\": \"2.0\", \"method\": \"ping\", \"params\": \"pong\", \"id\": 2}\n\nClient (Python)\n~~~~~~~~~~~~~~~\n\nThere's also Python client, which can be used as follows:\n\n.. code-block:: python\n\n  from aiohttp_json_rpc import JsonRpcClient\n\n\n  async def ping_json_rpc():\n      \"\"\"Connect to ws://localhost:8080/, call ping() and disconnect.\"\"\"\n      rpc_client = JsonRpcClient()\n      try:\n          await rpc_client.connect('localhost', 8080)\n          call_result = await rpc_client.call('ping')\n          print(call_result)  # prints 'pong' (if that's return val of ping)\n      finally:\n          await rpc_client.disconnect()\n\n\n  asyncio.get_event_loop().run_until_complete(ping_json_rpc())\n\nOr use asynchronous context manager interface:\n\n.. code-block:: python\n\n  from aiohttp_json_rpc import JsonRpcClientContext\n  \n  \n  async def jrpc_coro():\n      async with JsonRpcClientContext('ws://localhost:8000/rpc') as jrpc:\n          # `some_other_method` will get request.params filled with `args` and\n          # `kwargs` keys:\n          method_res = await jrpc.some_other_method('arg1', key='arg2')\n  \n      return method_res\n  \n  asyncio.get_event_loop().run_until_complete(jrpc_coro())\n\n\nFeatures\n--------\n\nError Handling\n~~~~~~~~~~~~~~\n\nAll errors specified in the `error specification <http://www.jsonrpc.org/specification#error_object>`_ but the InvalidParamsError are handled internally.\n\nIf your coroutine got called with wrong params you can raise an ``aiohttp_json_rpc.RpcInvalidParamsError`` instead of sending an error by yourself.\n\nThe JSONRPC protocol defines a range for server defined errors.\n``aiohttp_json_rpc.RpcGenericServerDefinedError`` implements this feature.\n\n.. code-block:: python\n\n  from aiohttp_json_rpc import RpcInvalidParamsError\n\n\n  async def add(request):\n      try:\n          a = params.get('a')\n          b = params.get('b')\n\n          return a + b\n\n      except KeyError:\n          raise RpcInvalidParamsError\n\n\n    async def add(request):\n        raise RpcGenericServerDefinedError(\n            error_code=-32050,\n            message='Computer says no.',\n        )\n\n\nError Logging\n~~~~~~~~~~~~~\n\nEvery traceback caused by an RPC method will be caught and logged.\n\nThe RPC will send an RPC ServerError and proceed as if nothing happened.\n\n.. code-block:: python\n\n  async def divide(request):\n      return 1 / 0  # will raise a ZeroDivisionError\n\n.. code-block::\n\n  ERROR:JsonRpc: Traceback (most recent call last):\n  ERROR:JsonRpc:   File \"aiohttp_json_rpc/base.py\", line 289, in handle_websocket_request\n  ERROR:JsonRpc:     rsp = yield from methods[msg['method']](ws, msg)\n  ERROR:JsonRpc:   File \"./example.py\", line 12, in divide\n  ERROR:JsonRpc:     return 1 / 0\n  ERROR:JsonRpc: ZeroDivisionError: division by zero\n\n\nPublish Subscribe\n~~~~~~~~~~~~~~~~~\n\nAny client of an RPC object can subscribe to a topic using the built-in RPC method ``subscribe()``.\n\nTopics can be added using ``rpc.add_topics``.\n\n\nAuthentication\n~~~~~~~~~~~~~~\n\nThe auth system works like in Django with decorators.\nFor details see the corresponding Django documentation.\n\n+--------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| Decorator                                        | Django Equivalent                                                                                                                                                     |\n+==================================================+=======================================================================================================================================================================+\n| aiohttp_json_rpc.django.auth.login_required      | `django.contrib.auth.decorators.login_required <https://docs.djangoproject.com/en/1.8/topics/auth/default/#django.contrib.auth.decorators.login_required>`_           |\n+--------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| aiohttp_json_rpc.django.auth.permission_required | `django.contrib.auth.decorators.permission_required <https://docs.djangoproject.com/en/1.8/topics/auth/default/#django.contrib.auth.decorators.permission_required>`_ |\n+--------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| aiohttp_json_rpc.django.auth.user_passes_test    | `django.contrib.auth.decorators.user_passes_test <https://docs.djangoproject.com/en/1.8/topics/auth/default/#django.contrib.auth.decorators.user_passes_test>`_       |\n+--------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n\n.. code-block:: python\n\n  from aiohttp_json_rpc.auth import (\n      permission_required,\n      user_passes_test,\n      login_required,\n  )\n\n  from aiohttp_json_rpc.auth.django import DjangoAuthBackend\n  from aiohttp_json_rpc import JsonRpc\n\n  @login_required\n  @permission_required('ping')\n  @user_passes_test(lambda user: user.is_superuser)\n  async def ping(request):\n      return 'pong'\n\n  if __name__ == '__main__':\n      rpc = JsonRpc(auth_backend=DjangoAuthBackend())\n\n      rpc.add_methods(\n          ('', ping),\n      )\n\n      rpc.add_topics(\n          ('foo', [login_required, permission_required('foo')])\n      )\n\n\nUsing SSL Connections\n~~~~~~~~~~~~~~~~~~~~~\nIf you need to setup a secure RPC server (use own certification files for example) you can create a ssl.SSLContext instance and pass it into the aiohttp web application. \n\nThe following code implements a simple secure RPC server that serves the method ``ping`` on ``localhost:8080``\n\n.. code-block:: python\n\n  from aiohttp.web import Application, run_app\n  from aiohttp_json_rpc import JsonRpc\n  import asyncio\n  import ssl\n\n\n  async def ping(request):\n      return 'pong'\n\n\n  if __name__ == '__main__':\n      loop = asyncio.get_event_loop()\n\n      rpc = JsonRpc()\n      rpc.add_methods(\n          ('', ping),\n      )\n      \n      app = Application(loop=loop)\n      app.router.add_route('*', '/', rpc.handle_request)\n      \n      ssl_context = ssl.create_default_context(ssl.Purpose.CLIENT_AUTH)\n      ssl_context.load_cert_chain('path/to/server.crt', 'path/to/server.key')\n\n      run_app(app, host='0.0.0.0', port=8080, ssl_context=ssl_context)\n\nThe following code implements a secure RPC client using the ``JsonRpcClient`` Python client.\n\n.. code-block:: python\n\n  from aiohttp_json_rpc import JsonRpcClient\n  import ssl\n\n  async def ping_json_rpc():\n      \"\"\"Connect to wss://localhost:8080/, call ping() and disconnect.\"\"\"\n      rpc_client = JsonRpcClient()\n      ssl_context = ssl.create_default_context(ssl.Purpose.CLIENT_AUTH)\n      ssl_context.load_cert_chain('path/to/server.crt','path/to/server.key')\n      try:\n          await rpc_client.connect('localhost', 8080, ssl=ssl_context)\n          call_result = await rpc_client.call('ping')\n          print(call_result)  # prints 'pong' (if that's return val of ping)\n      finally:\n          await rpc_client.disconnect()\n\n\n  asyncio.get_event_loop().run_until_complete(ping_json_rpc())\n\nSee `aiohttp documentation <https://docs.aiohttp.org/en/stable/client_advanced.html#ssl-control-for-tcp-sockets>`_ for more details on SSL control for TCP sockets.\n\n\nClass References\n----------------\n\nclass aiohttp_json_rpc.JsonRpc(object)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nMethods\n'''''''\n\n``def add_methods(self, *args, prefix='')``\n  Args have to be tuple containing a prefix as string (may be empty) and a module,\n  object, coroutine or import string.\n\n  If second arg is module or object all coroutines in it are getting added.\n\n``async def get_methods()``\n  Returns list of all available RPC methods.\n\n``def filter(self, topics)``\n  Returns generator over all clients that have subscribed for given topic.\n\n  Topics can be string or a list of strings.\n\n``async def notify(self, topic, data)``\n  Send RPC notification to all connected clients subscribed to given topic.\n\n  Data has to be JSON serializable.\n\n  Uses ``filter()``.\n\n``async def subscribe(topics)``\n  Subscribe to a topic.\n\n  Topics can be string or a list of strings.\n\n``async def unsubscribe(topics)``\n  Unsubscribe from a topic.\n\n  Topics can be string or a list of strings.\n\n``async def get_topics()``\n  Get subscribable  topics as list of strings.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pengutronix/aiohttp-json-rpc/", "keywords": "aiohttp", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "aiohttp-json-rpc", "package_url": "https://pypi.org/project/aiohttp-json-rpc/", "platform": "", "project_url": "https://pypi.org/project/aiohttp-json-rpc/", "project_urls": {"Homepage": "https://github.com/pengutronix/aiohttp-json-rpc/"}, "release_url": "https://pypi.org/project/aiohttp-json-rpc/0.12.3/", "requires_dist": null, "requires_python": "", "summary": "Implementation JSON-RPC 2.0 server and client using aiohttp on top of websockets transport", "version": "0.12.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.org/project/aiohttp-json-rpc\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/aiohttp-json-rpc.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8430a67d6056eb71bb02b2a1654bd36ac73e9b9b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61696f687474702d6a736f6e2d7270632e737667\"></a>\n<a href=\"http://travis-ci.com/pengutronix/aiohttp-json-rpc\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/com/pengutronix/aiohttp-json-rpc/master.svg?label=Linux%20build%20%40%20Travis%20CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/30925efae2957cd7a88dd66ec90450f50dd9f072/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f636f6d2f70656e677574726f6e69782f61696f687474702d6a736f6e2d7270632f6d61737465722e7376673f6c6162656c3d4c696e75782532306275696c642532302534302532305472617669732532304349\"></a>\n<img alt=\"https://img.shields.io/pypi/pyversions/aiohttp-json-rpc.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6221649bdc8177d9909abbc53e1b1be5ebd44988/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f61696f687474702d6a736f6e2d7270632e737667\">\n<div id=\"aiohttp-json-rpc\">\n<h2>aiohttp-json-rpc</h2>\n<p>Implements <a href=\"http://www.jsonrpc.org/specification\" rel=\"nofollow\">JSON-RPC 2.0 Specification</a> using <a href=\"http://aiohttp.readthedocs.org/en/stable/\" rel=\"nofollow\">aiohttp</a></p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Protocol</th>\n<th>Support</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Websocket</td>\n<td>since v0.1</td>\n</tr>\n<tr><td>POST</td>\n<td>TODO</td>\n</tr>\n<tr><td>GET</td>\n<td>TODO</td>\n</tr>\n</tbody>\n</table>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>pip install aiohttp-json-rpc\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>RPC methods can be added by using <tt>rpc.add_method()</tt>.</p>\n<p>All RPC methods are getting passed a <tt>aiohttp_json_rpc.communicaton.JsonRpcRequest</tt>.</p>\n<div id=\"server\">\n<h4>Server</h4>\n<p>The following code implements a simple RPC server that serves the method <tt>ping</tt> on <tt>localhost:8080</tt>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aiohttp.web</span> <span class=\"kn\">import</span> <span class=\"n\">Application</span><span class=\"p\">,</span> <span class=\"n\">run_app</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp_json_rpc</span> <span class=\"kn\">import</span> <span class=\"n\">JsonRpc</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">ping</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'pong'</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n\n    <span class=\"n\">rpc</span> <span class=\"o\">=</span> <span class=\"n\">JsonRpc</span><span class=\"p\">()</span>\n    <span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">add_methods</span><span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">ping</span><span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Application</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"o\">=</span><span class=\"n\">loop</span><span class=\"p\">)</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">add_route</span><span class=\"p\">(</span><span class=\"s1\">'*'</span><span class=\"p\">,</span> <span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">handle_request</span><span class=\"p\">)</span>\n\n    <span class=\"n\">run_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'0.0.0.0'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">8080</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"client-js\">\n<h4>Client (JS)</h4>\n<p>The following code implements a simple RPC client that connects to the server above\nand prints all incoming messages to the console.</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"//code.jquery.com/jquery-2.2.1.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">ws</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">WebSocket</span><span class=\"p\">(</span><span class=\"s2\">\"ws://localhost:8080\"</span><span class=\"p\">);</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">message_id</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n\n  <span class=\"nx\">ws</span><span class=\"p\">.</span><span class=\"nx\">onmessage</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">event</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">parse</span><span class=\"p\">(</span><span class=\"nx\">event</span><span class=\"p\">.</span><span class=\"nx\">data</span><span class=\"p\">));</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"kd\">function</span> <span class=\"nx\">ws_call_method</span><span class=\"p\">(</span><span class=\"nx\">method</span><span class=\"p\">,</span> <span class=\"nx\">params</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">var</span> <span class=\"nx\">request</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n      <span class=\"nx\">jsonrpc</span><span class=\"o\">:</span> <span class=\"s2\">\"2.0\"</span><span class=\"p\">,</span>\n      <span class=\"nx\">id</span><span class=\"o\">:</span> <span class=\"nx\">message_id</span><span class=\"p\">,</span>\n      <span class=\"nx\">method</span><span class=\"o\">:</span> <span class=\"nx\">method</span><span class=\"p\">,</span>\n      <span class=\"nx\">params</span><span class=\"o\">:</span> <span class=\"nx\">params</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nx\">ws</span><span class=\"p\">.</span><span class=\"nx\">send</span><span class=\"p\">(</span><span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">(</span><span class=\"nx\">request</span><span class=\"p\">));</span>\n    <span class=\"nx\">message_id</span><span class=\"o\">++</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n</pre>\n<p>These are example responses the server would give if you call <tt>ws_call_method</tt>.</p>\n<pre>--&gt; ws_call_method(\"get_methods\")\n<span class=\"p\">&lt;</span><span class=\"nt\">--</span> <span class=\"err\">{\"</span><span class=\"na\">jsonrpc</span><span class=\"err\">\"</span><span class=\"na\">:</span> <span class=\"err\">\"</span><span class=\"na\">2</span><span class=\"err\">.</span><span class=\"na\">0</span><span class=\"err\">\",</span> <span class=\"err\">\"</span><span class=\"na\">result</span><span class=\"err\">\"</span><span class=\"na\">:</span> <span class=\"err\">[\"</span><span class=\"na\">get_methods</span><span class=\"err\">\",</span> <span class=\"err\">\"</span><span class=\"na\">ping</span><span class=\"err\">\"],</span> <span class=\"err\">\"</span><span class=\"na\">id</span><span class=\"err\">\"</span><span class=\"na\">:</span> <span class=\"na\">1</span><span class=\"err\">}</span>\n\n<span class=\"na\">--</span><span class=\"p\">&gt;</span> ws_call_method(\"ping\")\n<span class=\"p\">&lt;</span><span class=\"nt\">--</span> <span class=\"err\">{\"</span><span class=\"na\">jsonrpc</span><span class=\"err\">\"</span><span class=\"na\">:</span> <span class=\"err\">\"</span><span class=\"na\">2</span><span class=\"err\">.</span><span class=\"na\">0</span><span class=\"err\">\",</span> <span class=\"err\">\"</span><span class=\"na\">method</span><span class=\"err\">\"</span><span class=\"na\">:</span> <span class=\"err\">\"</span><span class=\"na\">ping</span><span class=\"err\">\",</span> <span class=\"err\">\"</span><span class=\"na\">params</span><span class=\"err\">\"</span><span class=\"na\">:</span> <span class=\"err\">\"</span><span class=\"na\">pong</span><span class=\"err\">\",</span> <span class=\"err\">\"</span><span class=\"na\">id</span><span class=\"err\">\"</span><span class=\"na\">:</span> <span class=\"na\">2</span><span class=\"err\">}</span>\n</pre>\n</div>\n<div id=\"client-python\">\n<h4>Client (Python)</h4>\n<p>There\u2019s also Python client, which can be used as follows:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aiohttp_json_rpc</span> <span class=\"kn\">import</span> <span class=\"n\">JsonRpcClient</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">ping_json_rpc</span><span class=\"p\">():</span>\n    <span class=\"sd\">\"\"\"Connect to ws://localhost:8080/, call ping() and disconnect.\"\"\"</span>\n    <span class=\"n\">rpc_client</span> <span class=\"o\">=</span> <span class=\"n\">JsonRpcClient</span><span class=\"p\">()</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">await</span> <span class=\"n\">rpc_client</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"mi\">8080</span><span class=\"p\">)</span>\n        <span class=\"n\">call_result</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">rpc_client</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"s1\">'ping'</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">call_result</span><span class=\"p\">)</span>  <span class=\"c1\"># prints 'pong' (if that's return val of ping)</span>\n    <span class=\"k\">finally</span><span class=\"p\">:</span>\n        <span class=\"k\">await</span> <span class=\"n\">rpc_client</span><span class=\"o\">.</span><span class=\"n\">disconnect</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">ping_json_rpc</span><span class=\"p\">())</span>\n</pre>\n<p>Or use asynchronous context manager interface:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aiohttp_json_rpc</span> <span class=\"kn\">import</span> <span class=\"n\">JsonRpcClientContext</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">jrpc_coro</span><span class=\"p\">():</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">JsonRpcClientContext</span><span class=\"p\">(</span><span class=\"s1\">'ws://localhost:8000/rpc'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">jrpc</span><span class=\"p\">:</span>\n        <span class=\"c1\"># `some_other_method` will get request.params filled with `args` and</span>\n        <span class=\"c1\"># `kwargs` keys:</span>\n        <span class=\"n\">method_res</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">jrpc</span><span class=\"o\">.</span><span class=\"n\">some_other_method</span><span class=\"p\">(</span><span class=\"s1\">'arg1'</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'arg2'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">method_res</span>\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">jrpc_coro</span><span class=\"p\">())</span>\n</pre>\n</div>\n</div>\n<div id=\"features\">\n<h3>Features</h3>\n<div id=\"error-handling\">\n<h4>Error Handling</h4>\n<p>All errors specified in the <a href=\"http://www.jsonrpc.org/specification#error_object\" rel=\"nofollow\">error specification</a> but the InvalidParamsError are handled internally.</p>\n<p>If your coroutine got called with wrong params you can raise an <tt>aiohttp_json_rpc.RpcInvalidParamsError</tt> instead of sending an error by yourself.</p>\n<p>The JSONRPC protocol defines a range for server defined errors.\n<tt>aiohttp_json_rpc.RpcGenericServerDefinedError</tt> implements this feature.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aiohttp_json_rpc</span> <span class=\"kn\">import</span> <span class=\"n\">RpcInvalidParamsError</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">params</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'a'</span><span class=\"p\">)</span>\n        <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">params</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'b'</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span>\n\n    <span class=\"k\">except</span> <span class=\"ne\">KeyError</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"n\">RpcInvalidParamsError</span>\n\n\n  <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n      <span class=\"k\">raise</span> <span class=\"n\">RpcGenericServerDefinedError</span><span class=\"p\">(</span>\n          <span class=\"n\">error_code</span><span class=\"o\">=-</span><span class=\"mi\">32050</span><span class=\"p\">,</span>\n          <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s1\">'Computer says no.'</span><span class=\"p\">,</span>\n      <span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"error-logging\">\n<h4>Error Logging</h4>\n<p>Every traceback caused by an RPC method will be caught and logged.</p>\n<p>The RPC will send an RPC ServerError and proceed as if nothing happened.</p>\n<pre><span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">divide</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"mi\">1</span> <span class=\"o\">/</span> <span class=\"mi\">0</span>  <span class=\"c1\"># will raise a ZeroDivisionError</span>\n</pre>\n<pre>ERROR:JsonRpc: Traceback (most recent call last):\nERROR:JsonRpc:   File \"aiohttp_json_rpc/base.py\", line 289, in handle_websocket_request\nERROR:JsonRpc:     rsp = yield from methods[msg['method']](ws, msg)\nERROR:JsonRpc:   File \"./example.py\", line 12, in divide\nERROR:JsonRpc:     return 1 / 0\nERROR:JsonRpc: ZeroDivisionError: division by zero\n</pre>\n</div>\n<div id=\"publish-subscribe\">\n<h4>Publish Subscribe</h4>\n<p>Any client of an RPC object can subscribe to a topic using the built-in RPC method <tt>subscribe()</tt>.</p>\n<p>Topics can be added using <tt>rpc.add_topics</tt>.</p>\n</div>\n<div id=\"authentication\">\n<h4>Authentication</h4>\n<p>The auth system works like in Django with decorators.\nFor details see the corresponding Django documentation.</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Decorator</th>\n<th>Django Equivalent</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>aiohttp_json_rpc.django.auth.login_required</td>\n<td><a href=\"https://docs.djangoproject.com/en/1.8/topics/auth/default/#django.contrib.auth.decorators.login_required\" rel=\"nofollow\">django.contrib.auth.decorators.login_required</a></td>\n</tr>\n<tr><td>aiohttp_json_rpc.django.auth.permission_required</td>\n<td><a href=\"https://docs.djangoproject.com/en/1.8/topics/auth/default/#django.contrib.auth.decorators.permission_required\" rel=\"nofollow\">django.contrib.auth.decorators.permission_required</a></td>\n</tr>\n<tr><td>aiohttp_json_rpc.django.auth.user_passes_test</td>\n<td><a href=\"https://docs.djangoproject.com/en/1.8/topics/auth/default/#django.contrib.auth.decorators.user_passes_test\" rel=\"nofollow\">django.contrib.auth.decorators.user_passes_test</a></td>\n</tr>\n</tbody>\n</table>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aiohttp_json_rpc.auth</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">permission_required</span><span class=\"p\">,</span>\n    <span class=\"n\">user_passes_test</span><span class=\"p\">,</span>\n    <span class=\"n\">login_required</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp_json_rpc.auth.django</span> <span class=\"kn\">import</span> <span class=\"n\">DjangoAuthBackend</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp_json_rpc</span> <span class=\"kn\">import</span> <span class=\"n\">JsonRpc</span>\n\n<span class=\"nd\">@login_required</span>\n<span class=\"nd\">@permission_required</span><span class=\"p\">(</span><span class=\"s1\">'ping'</span><span class=\"p\">)</span>\n<span class=\"nd\">@user_passes_test</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">user</span><span class=\"p\">:</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">is_superuser</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">ping</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'pong'</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">rpc</span> <span class=\"o\">=</span> <span class=\"n\">JsonRpc</span><span class=\"p\">(</span><span class=\"n\">auth_backend</span><span class=\"o\">=</span><span class=\"n\">DjangoAuthBackend</span><span class=\"p\">())</span>\n\n    <span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">add_methods</span><span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">ping</span><span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">add_topics</span><span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">login_required</span><span class=\"p\">,</span> <span class=\"n\">permission_required</span><span class=\"p\">(</span><span class=\"s1\">'foo'</span><span class=\"p\">)])</span>\n    <span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"using-ssl-connections\">\n<h4>Using SSL Connections</h4>\n<p>If you need to setup a secure RPC server (use own certification files for example) you can create a ssl.SSLContext instance and pass it into the aiohttp web application.</p>\n<p>The following code implements a simple secure RPC server that serves the method <tt>ping</tt> on <tt>localhost:8080</tt></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aiohttp.web</span> <span class=\"kn\">import</span> <span class=\"n\">Application</span><span class=\"p\">,</span> <span class=\"n\">run_app</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp_json_rpc</span> <span class=\"kn\">import</span> <span class=\"n\">JsonRpc</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">ssl</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">ping</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'pong'</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n\n    <span class=\"n\">rpc</span> <span class=\"o\">=</span> <span class=\"n\">JsonRpc</span><span class=\"p\">()</span>\n    <span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">add_methods</span><span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">ping</span><span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Application</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"o\">=</span><span class=\"n\">loop</span><span class=\"p\">)</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">add_route</span><span class=\"p\">(</span><span class=\"s1\">'*'</span><span class=\"p\">,</span> <span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">handle_request</span><span class=\"p\">)</span>\n\n    <span class=\"n\">ssl_context</span> <span class=\"o\">=</span> <span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">create_default_context</span><span class=\"p\">(</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">Purpose</span><span class=\"o\">.</span><span class=\"n\">CLIENT_AUTH</span><span class=\"p\">)</span>\n    <span class=\"n\">ssl_context</span><span class=\"o\">.</span><span class=\"n\">load_cert_chain</span><span class=\"p\">(</span><span class=\"s1\">'path/to/server.crt'</span><span class=\"p\">,</span> <span class=\"s1\">'path/to/server.key'</span><span class=\"p\">)</span>\n\n    <span class=\"n\">run_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'0.0.0.0'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">8080</span><span class=\"p\">,</span> <span class=\"n\">ssl_context</span><span class=\"o\">=</span><span class=\"n\">ssl_context</span><span class=\"p\">)</span>\n</pre>\n<p>The following code implements a secure RPC client using the <tt>JsonRpcClient</tt> Python client.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aiohttp_json_rpc</span> <span class=\"kn\">import</span> <span class=\"n\">JsonRpcClient</span>\n<span class=\"kn\">import</span> <span class=\"nn\">ssl</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">ping_json_rpc</span><span class=\"p\">():</span>\n    <span class=\"sd\">\"\"\"Connect to wss://localhost:8080/, call ping() and disconnect.\"\"\"</span>\n    <span class=\"n\">rpc_client</span> <span class=\"o\">=</span> <span class=\"n\">JsonRpcClient</span><span class=\"p\">()</span>\n    <span class=\"n\">ssl_context</span> <span class=\"o\">=</span> <span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">create_default_context</span><span class=\"p\">(</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">Purpose</span><span class=\"o\">.</span><span class=\"n\">CLIENT_AUTH</span><span class=\"p\">)</span>\n    <span class=\"n\">ssl_context</span><span class=\"o\">.</span><span class=\"n\">load_cert_chain</span><span class=\"p\">(</span><span class=\"s1\">'path/to/server.crt'</span><span class=\"p\">,</span><span class=\"s1\">'path/to/server.key'</span><span class=\"p\">)</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">await</span> <span class=\"n\">rpc_client</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"mi\">8080</span><span class=\"p\">,</span> <span class=\"n\">ssl</span><span class=\"o\">=</span><span class=\"n\">ssl_context</span><span class=\"p\">)</span>\n        <span class=\"n\">call_result</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">rpc_client</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"s1\">'ping'</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">call_result</span><span class=\"p\">)</span>  <span class=\"c1\"># prints 'pong' (if that's return val of ping)</span>\n    <span class=\"k\">finally</span><span class=\"p\">:</span>\n        <span class=\"k\">await</span> <span class=\"n\">rpc_client</span><span class=\"o\">.</span><span class=\"n\">disconnect</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">ping_json_rpc</span><span class=\"p\">())</span>\n</pre>\n<p>See <a href=\"https://docs.aiohttp.org/en/stable/client_advanced.html#ssl-control-for-tcp-sockets\" rel=\"nofollow\">aiohttp documentation</a> for more details on SSL control for TCP sockets.</p>\n</div>\n</div>\n<div id=\"class-references\">\n<h3>Class References</h3>\n<h3 id=\"class-aiohttp-json-rpc-jsonrpc-object\"><span class=\"section-subtitle\">class aiohttp_json_rpc.JsonRpc(object)</span></h3>\n<div id=\"methods\">\n<h4>Methods</h4>\n<dl>\n<dt><tt>def add_methods(self, *args, <span class=\"pre\">prefix='')</span></tt></dt>\n<dd><p>Args have to be tuple containing a prefix as string (may be empty) and a module,\nobject, coroutine or import string.</p>\n<p>If second arg is module or object all coroutines in it are getting added.</p>\n</dd>\n<dt><tt>async def get_methods()</tt></dt>\n<dd>Returns list of all available RPC methods.</dd>\n<dt><tt>def filter(self, topics)</tt></dt>\n<dd><p>Returns generator over all clients that have subscribed for given topic.</p>\n<p>Topics can be string or a list of strings.</p>\n</dd>\n<dt><tt>async def notify(self, topic, data)</tt></dt>\n<dd><p>Send RPC notification to all connected clients subscribed to given topic.</p>\n<p>Data has to be JSON serializable.</p>\n<p>Uses <tt>filter()</tt>.</p>\n</dd>\n<dt><tt>async def subscribe(topics)</tt></dt>\n<dd><p>Subscribe to a topic.</p>\n<p>Topics can be string or a list of strings.</p>\n</dd>\n<dt><tt>async def unsubscribe(topics)</tt></dt>\n<dd><p>Unsubscribe from a topic.</p>\n<p>Topics can be string or a list of strings.</p>\n</dd>\n<dt><tt>async def get_topics()</tt></dt>\n<dd>Get subscribable  topics as list of strings.</dd>\n</dl>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6775640, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "697f01616ca4eef397640d7b903e1f3f", "sha256": "ac57858d1a6355c8fe00ae60dff76e88e2a416d9daf0f3d6a4c813933e0d6ceb"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.1.tar.gz", "has_sig": false, "md5_digest": "697f01616ca4eef397640d7b903e1f3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2880, "upload_time": "2015-11-17T20:27:19", "upload_time_iso_8601": "2015-11-17T20:27:19.677558Z", "url": "https://files.pythonhosted.org/packages/b9/30/fad656a18209b45640019aeaa9c9620c3da355d944c50e5c6af6d3557694/aiohttp-json-rpc-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7314471f17b5212987b2dbbd0e418677", "sha256": "6845a2401a118bf18c87dac96ecec7073116ae3fc59a0555a8e6a680a175845a"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7314471f17b5212987b2dbbd0e418677", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2941, "upload_time": "2015-11-18T09:49:51", "upload_time_iso_8601": "2015-11-18T09:49:51.893290Z", "url": "https://files.pythonhosted.org/packages/a5/98/a4bb0c273d77eac2f3061e3ca7cc5942f51a06e0756fab12eea46c8d5787/aiohttp-json-rpc-0.1.1.tar.gz", "yanked": false}], "0.10": [{"comment_text": "", "digests": {"md5": "31754e0a39af99f6cb62bfcb11afb4a0", "sha256": "ebe74d620604a559c33537d2ce9a0869a7efe562e713a8c565974c9ae1e92cd7"}, "downloads": -1, "filename": "aiohttp_json_rpc-0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "31754e0a39af99f6cb62bfcb11afb4a0", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 26855, "upload_time": "2018-04-21T23:19:58", "upload_time_iso_8601": "2018-04-21T23:19:58.420434Z", "url": "https://files.pythonhosted.org/packages/71/f6/433dde3ab272bc12c77520f4ea26c8649d25aa11dbb3f8e42944f1545b49/aiohttp_json_rpc-0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "075f235af0e5b4090d331822672b01b1", "sha256": "702e24bf16bf33cbdd8f9363d04a38e67f915b769a49920a6fcb14b1088bac89"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.10.tar.gz", "has_sig": false, "md5_digest": "075f235af0e5b4090d331822672b01b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15295, "upload_time": "2018-04-21T23:19:56", "upload_time_iso_8601": "2018-04-21T23:19:56.583403Z", "url": "https://files.pythonhosted.org/packages/a9/b0/4fda5c82f5b697210df79ccbefc8376b78faa9bb66824108d5d8c59dc2bb/aiohttp-json-rpc-0.10.tar.gz", "yanked": false}], "0.10.1": [{"comment_text": "", "digests": {"md5": "83379ac514efad87b2866954a331bf2e", "sha256": "a876e8b014a1202a16ae100d0517eafbf7c4ccd5491f848bcb1f49affbdeea86"}, "downloads": -1, "filename": "aiohttp_json_rpc-0.10.1-py3-none-any.whl", "has_sig": false, "md5_digest": "83379ac514efad87b2866954a331bf2e", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 25090, "upload_time": "2018-06-07T13:47:11", "upload_time_iso_8601": "2018-06-07T13:47:11.813312Z", "url": "https://files.pythonhosted.org/packages/8b/ed/21d9e33f0d5654267a44de4e6531ff3288aea08e8a7d99d7fc07b3f2b46f/aiohttp_json_rpc-0.10.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "649dcc1567444c3c076e245dd063169a", "sha256": "a520847a947b6ffe950a83d02f524925c16bdf6954752a7508855a4de62d8dfe"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.10.1.tar.gz", "has_sig": false, "md5_digest": "649dcc1567444c3c076e245dd063169a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16839, "upload_time": "2018-06-07T13:47:09", "upload_time_iso_8601": "2018-06-07T13:47:09.908471Z", "url": "https://files.pythonhosted.org/packages/8e/32/719e189ae28ec1d948abdf478c9bff551fc758b2bb63b7c574f647ccaa06/aiohttp-json-rpc-0.10.1.tar.gz", "yanked": false}], "0.10.2": [{"comment_text": "", "digests": {"md5": "f4e2e482ca4ce56cf3ce17cf337f253e", "sha256": "0ef90fa887516880258bdb384a9ac423b281bd003907aa12facb775c8d100534"}, "downloads": -1, "filename": "aiohttp_json_rpc-0.10.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f4e2e482ca4ce56cf3ce17cf337f253e", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 25070, "upload_time": "2018-06-17T20:13:16", "upload_time_iso_8601": "2018-06-17T20:13:16.774152Z", "url": "https://files.pythonhosted.org/packages/ba/a4/367b05f297b61d97ca2778f0e5e85bb451fefae9c39002756e9705e04bd3/aiohttp_json_rpc-0.10.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "381aad7d4c3d22d056cff1db2f4c6750", "sha256": "9e5a418f881511a4f3038543cf2ecb9b0e77856543de61172c4058a4c1af04e3"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.10.2.tar.gz", "has_sig": false, "md5_digest": "381aad7d4c3d22d056cff1db2f4c6750", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16847, "upload_time": "2018-06-17T20:13:14", "upload_time_iso_8601": "2018-06-17T20:13:14.925886Z", "url": "https://files.pythonhosted.org/packages/b8/b6/e6b6924b18e7439d389ba88932095c3b89ccc61d2b733ac7b21b1282bde7/aiohttp-json-rpc-0.10.2.tar.gz", "yanked": false}], "0.10.3": [{"comment_text": "", "digests": {"md5": "bb85f35c9c2972506887477b7edeb178", "sha256": "921f4f7a06afa0c0ef97bae3e135d2cad2573798a8bef50209658c84a0df414f"}, "downloads": -1, "filename": "aiohttp_json_rpc-0.10.3-py3-none-any.whl", "has_sig": false, "md5_digest": "bb85f35c9c2972506887477b7edeb178", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 25821, "upload_time": "2018-07-02T15:18:15", "upload_time_iso_8601": "2018-07-02T15:18:15.877136Z", "url": "https://files.pythonhosted.org/packages/3a/33/7367d7d0d53cb3ea467b866adddf4226f53073322b9146ca2540ad6aafb5/aiohttp_json_rpc-0.10.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "947338a82f11d5c9caa7b89fee7c6f88", "sha256": "eec486a102ef8b488c31784bd06e1efed2445d21ad06f28188dd2c21d7c2798a"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.10.3.tar.gz", "has_sig": false, "md5_digest": "947338a82f11d5c9caa7b89fee7c6f88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17303, "upload_time": "2018-07-02T15:18:14", "upload_time_iso_8601": "2018-07-02T15:18:14.170363Z", "url": "https://files.pythonhosted.org/packages/b9/ef/3945db2e04f7899e704b230edc6c0515c9a2f402e293bcdc6f12917b7f1e/aiohttp-json-rpc-0.10.3.tar.gz", "yanked": false}], "0.11": [{"comment_text": "", "digests": {"md5": "64dc73fab3b9fc9bf1cb4c61ef2cdcc7", "sha256": "e1ae47d522a7857c612be8ba447cec3cad8c8b7d628353289a0889a1135166c8"}, "downloads": -1, "filename": "aiohttp_json_rpc-0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "64dc73fab3b9fc9bf1cb4c61ef2cdcc7", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 26532, "upload_time": "2018-08-02T14:11:05", "upload_time_iso_8601": "2018-08-02T14:11:05.795492Z", "url": "https://files.pythonhosted.org/packages/e9/54/caaf566df2ceff2b84224ea7daadf5ced79631f723406b24c19c70473980/aiohttp_json_rpc-0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d53674d03c08e98379f7b5b99b133d6c", "sha256": "bf1eb7e30949b60f74cb84731b5676bd7dc3f0298056ddbbe989d9219260008c"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.11.tar.gz", "has_sig": false, "md5_digest": "d53674d03c08e98379f7b5b99b133d6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17952, "upload_time": "2018-08-02T14:11:04", "upload_time_iso_8601": "2018-08-02T14:11:04.100377Z", "url": "https://files.pythonhosted.org/packages/e2/41/b880142110787f5a93d038031ab5b0b48a71109dd86ba2410abccf1b55f7/aiohttp-json-rpc-0.11.tar.gz", "yanked": false}], "0.11.1": [{"comment_text": "", "digests": {"md5": "b025d36dc8a2eb8f845b7e382dba6911", "sha256": "970806a3b9887c389095d2bde84e2b540fefeddd0bae0efcae03c65f092ce00e"}, "downloads": -1, "filename": "aiohttp_json_rpc-0.11.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b025d36dc8a2eb8f845b7e382dba6911", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 27550, "upload_time": "2018-09-03T14:11:44", "upload_time_iso_8601": "2018-09-03T14:11:44.526465Z", "url": "https://files.pythonhosted.org/packages/6c/45/74458f88a8838cbf1138a7ef27312f888b164470dc5ca5b2a1348340d7ab/aiohttp_json_rpc-0.11.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14cf550936588bf0c91ae367e864aa3c", "sha256": "d6f365067676e6089ac043ad31bcbabbf33d0343c42b57c36751a562fbe64fb6"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.11.1.tar.gz", "has_sig": false, "md5_digest": "14cf550936588bf0c91ae367e864aa3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18673, "upload_time": "2018-09-03T14:11:42", "upload_time_iso_8601": "2018-09-03T14:11:42.183273Z", "url": "https://files.pythonhosted.org/packages/62/3f/1ac9efce76b34c4fcad601da71cda2bec1ec036b5f59fd505137a98f6df9/aiohttp-json-rpc-0.11.1.tar.gz", "yanked": false}], "0.11.2": [{"comment_text": "", "digests": {"md5": "38c531c242a8383847c9b6bba25c13f8", "sha256": "00d72f40edfc7271578d545a8c47874c0e23cc5d3201ed8128481f6a4af47e32"}, "downloads": -1, "filename": "aiohttp_json_rpc-0.11.2-py3-none-any.whl", "has_sig": false, "md5_digest": "38c531c242a8383847c9b6bba25c13f8", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 26754, "upload_time": "2018-09-25T14:05:43", "upload_time_iso_8601": "2018-09-25T14:05:43.212408Z", "url": "https://files.pythonhosted.org/packages/8d/4b/0e99fd3548f7c34fd038132798c946bebafeff3e1d7363c1a991807a1917/aiohttp_json_rpc-0.11.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1c50cd12a19183c568fea8dbb45fefe", "sha256": "02d83b6998f8a0b7e59b46f0cb8a96b475bbf82600b1f9527df47135353f1ca8"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.11.2.tar.gz", "has_sig": false, "md5_digest": "b1c50cd12a19183c568fea8dbb45fefe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18149, "upload_time": "2018-09-25T14:05:41", "upload_time_iso_8601": "2018-09-25T14:05:41.565086Z", "url": "https://files.pythonhosted.org/packages/df/c3/dd5d3e094a64847a101df024a8045390f78916c3e306828a93997d4c23b5/aiohttp-json-rpc-0.11.2.tar.gz", "yanked": false}], "0.12": [{"comment_text": "", "digests": {"md5": "ab9df563f44f4879f7eddaba76ca7d27", "sha256": "1d040b7b10ff414f9174398ff6e9c647eb0434a00939450b33aa539177c51dcf"}, "downloads": -1, "filename": "aiohttp_json_rpc-0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "ab9df563f44f4879f7eddaba76ca7d27", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 26685, "upload_time": "2019-02-12T11:50:41", "upload_time_iso_8601": "2019-02-12T11:50:41.260248Z", "url": "https://files.pythonhosted.org/packages/27/82/4512c242ee6fbd1e2536813ab681ba7074a33726fc16f94ba5a9f8827c21/aiohttp_json_rpc-0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5116ef2ff3085d09d5c5867d83db900", "sha256": "5f5fb141c6263d2ea52a4173babe9449eef4029620dc49936dca45cdc17ac9dd"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.12.tar.gz", "has_sig": false, "md5_digest": "a5116ef2ff3085d09d5c5867d83db900", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22257, "upload_time": "2019-02-12T11:50:39", "upload_time_iso_8601": "2019-02-12T11:50:39.288314Z", "url": "https://files.pythonhosted.org/packages/f0/e9/3baecdfc509c29251624894a5f59e89342c56abdaef1ed6af88bed4229bb/aiohttp-json-rpc-0.12.tar.gz", "yanked": false}], "0.12.1": [{"comment_text": "", "digests": {"md5": "6f3a8e7335a70b671b63ae03430cbf14", "sha256": "14656d360211bcdb686be0c099f7a99d8c2ae8e2762b113e6df408a8f275323f"}, "downloads": -1, "filename": "aiohttp_json_rpc-0.12.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6f3a8e7335a70b671b63ae03430cbf14", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 26698, "upload_time": "2019-02-26T09:26:41", "upload_time_iso_8601": "2019-02-26T09:26:41.047520Z", "url": "https://files.pythonhosted.org/packages/3c/74/fc449e69a44ebec9ced0ed24190af4274847475904a15706fc8d44d1f891/aiohttp_json_rpc-0.12.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "664a2e0c63225acd9e81aec038afd8e6", "sha256": "9aa8a897fbe32b343ce7b14121491cc200395161316ca1296c6fab28449886bf"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.12.1.tar.gz", "has_sig": false, "md5_digest": "664a2e0c63225acd9e81aec038afd8e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22254, "upload_time": "2019-02-26T09:26:38", "upload_time_iso_8601": "2019-02-26T09:26:38.771536Z", "url": "https://files.pythonhosted.org/packages/17/6a/b2d2b936ef1266ec88d412be2074c8b2661be7fa31b21585551ce066475e/aiohttp-json-rpc-0.12.1.tar.gz", "yanked": false}], "0.12.2": [{"comment_text": "", "digests": {"md5": "bda6f2117bd7a301a61007dd58d6f84a", "sha256": "690373951a0147106b0cee58aaca4c5bb05a7cb59610caa9108af3599116182e"}, "downloads": -1, "filename": "aiohttp_json_rpc-0.12.2-py3-none-any.whl", "has_sig": false, "md5_digest": "bda6f2117bd7a301a61007dd58d6f84a", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 28251, "upload_time": "2020-01-22T08:31:42", "upload_time_iso_8601": "2020-01-22T08:31:42.730636Z", "url": "https://files.pythonhosted.org/packages/02/b2/603b0fbe05ec6116d701aea4142b0da5d7bf13bdc603e9daf2f2331149e5/aiohttp_json_rpc-0.12.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1f22022511a8b20e404de47e1286538", "sha256": "d370927e9cdb28613f9d6fb790cae2a5ab008409e49f56cf8274906cf59e9808"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.12.2.tar.gz", "has_sig": false, "md5_digest": "b1f22022511a8b20e404de47e1286538", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23412, "upload_time": "2020-01-22T08:31:40", "upload_time_iso_8601": "2020-01-22T08:31:40.007761Z", "url": "https://files.pythonhosted.org/packages/84/e7/4d0384a469f1294e4dec834630f286b59cb61d36da6da11123375e500255/aiohttp-json-rpc-0.12.2.tar.gz", "yanked": false}], "0.12.3": [{"comment_text": "", "digests": {"md5": "03bf083b6f26e2a18109aff89569af5c", "sha256": "2f317b8f48aaca3346c50439f7469921b807f38bacc25304b16f4e883717e84f"}, "downloads": -1, "filename": "aiohttp_json_rpc-0.12.3-py3-none-any.whl", "has_sig": false, "md5_digest": "03bf083b6f26e2a18109aff89569af5c", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 28623, "upload_time": "2020-03-09T09:07:32", "upload_time_iso_8601": "2020-03-09T09:07:32.340308Z", "url": "https://files.pythonhosted.org/packages/a5/a4/aa230ccf2dedf1356bc89f3f07b4796ce54c4a222e98aec4cb7e80355746/aiohttp_json_rpc-0.12.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f71f9c99638091df53ee1cab2bd7365", "sha256": "986a64ed57c0c05b1256fbbd624c75614828a57fe3892d8be7babca6851ab003"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.12.3.tar.gz", "has_sig": false, "md5_digest": "3f71f9c99638091df53ee1cab2bd7365", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26829, "upload_time": "2020-03-09T09:07:29", "upload_time_iso_8601": "2020-03-09T09:07:29.785161Z", "url": "https://files.pythonhosted.org/packages/ec/cf/f8b77a7cdfc650c76a3da5d66e6cc18a0d4a8e23fdc382baffe8dd3f293a/aiohttp-json-rpc-0.12.3.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "9a4f2cd9a34ce7bb9fdd387d11dc89b7", "sha256": "f555e1167ec1157966722e38139af957824d12011857171b7a290b74dcc1fc59"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.2.tar.gz", "has_sig": false, "md5_digest": "9a4f2cd9a34ce7bb9fdd387d11dc89b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2970, "upload_time": "2015-11-23T10:58:06", "upload_time_iso_8601": "2015-11-23T10:58:06.715794Z", "url": "https://files.pythonhosted.org/packages/48/96/da1f7044dda165b73f38ba65f1b50116f03056dd0ecdaa203c021ba8a98c/aiohttp-json-rpc-0.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "9c66be9bfe1c44b5fa9d2ffc1115e0e9", "sha256": "c7c20820fd2460aa3c42377aa553c1d61f537ccbab9257762c57c1a1fd67c3e3"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.2.0.tar.gz", "has_sig": false, "md5_digest": "9c66be9bfe1c44b5fa9d2ffc1115e0e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3238, "upload_time": "2015-11-25T23:34:41", "upload_time_iso_8601": "2015-11-25T23:34:41.022533Z", "url": "https://files.pythonhosted.org/packages/0d/ef/faf08abaf2114e9925a8db33307f92dd21e7961e16dfcff2635da1b7b5f1/aiohttp-json-rpc-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "7275fd1c41572411e46e7630285ca105", "sha256": "4b84fe3e57645cb5c5d8c7cf71af246d70430d72a2e8b4acab8dd007fb01922d"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.2.1.tar.gz", "has_sig": false, "md5_digest": "7275fd1c41572411e46e7630285ca105", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3307, "upload_time": "2015-11-26T14:25:18", "upload_time_iso_8601": "2015-11-26T14:25:18.671725Z", "url": "https://files.pythonhosted.org/packages/76/fd/ec3c6230a75121c2beb24c94cdf9b568544ecf423968059a9ac797578d57/aiohttp-json-rpc-0.2.1.tar.gz", "yanked": false}], "0.2.1.0": [{"comment_text": "", "digests": {"md5": "385d9468dfd4158b7bcc49c9a25f35f8", "sha256": "e717a5fcd390597dfb2da487b2f5ee6b7b3653892bf9181b1885d4aafdadc10d"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.2.1.0.tar.gz", "has_sig": false, "md5_digest": "385d9468dfd4158b7bcc49c9a25f35f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3305, "upload_time": "2015-11-30T15:30:24", "upload_time_iso_8601": "2015-11-30T15:30:24.946710Z", "url": "https://files.pythonhosted.org/packages/a4/bd/6f05c7b60c192214281e36adf48e0a25159deae05b0eef243318122fe941/aiohttp-json-rpc-0.2.1.0.tar.gz", "yanked": false}], "0.2.1.1": [{"comment_text": "", "digests": {"md5": "928efc37097a7be545d7f8c1e1586da4", "sha256": "f46b414279d6e4f3f203ed069fa894b618a1159874af03dac82dd39191800b6b"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.2.1.1.tar.gz", "has_sig": false, "md5_digest": "928efc37097a7be545d7f8c1e1586da4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3412, "upload_time": "2016-01-27T14:14:17", "upload_time_iso_8601": "2016-01-27T14:14:17.800281Z", "url": "https://files.pythonhosted.org/packages/13/47/d7adbc1932670102a0ab4450ae2bc5c42a829a813a77a9773f2db69e541f/aiohttp-json-rpc-0.2.1.1.tar.gz", "yanked": false}], "0.2.1.2": [{"comment_text": "", "digests": {"md5": "b23604f538d9cebce50d65e11dc398e2", "sha256": "57bcd2f491a92e83fd1d8db75cdce65c94396635bf7a1b403345f9df48a14aeb"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.2.1.2.tar.gz", "has_sig": false, "md5_digest": "b23604f538d9cebce50d65e11dc398e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3414, "upload_time": "2016-02-03T23:44:00", "upload_time_iso_8601": "2016-02-03T23:44:00.102653Z", "url": "https://files.pythonhosted.org/packages/e4/01/62a5dde586ebef9e5ce6a6c2ab747bfd749f6b06a51df290d232af20cf7c/aiohttp-json-rpc-0.2.1.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "b8eec9538cc792bb70de94893460f5c3", "sha256": "8b63e1f4c84b67f79e0e8a6c18516545b80527d3833cea4a3730860c95cc9b93"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.3.tar.gz", "has_sig": false, "md5_digest": "b8eec9538cc792bb70de94893460f5c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3524, "upload_time": "2016-02-08T22:36:08", "upload_time_iso_8601": "2016-02-08T22:36:08.107047Z", "url": "https://files.pythonhosted.org/packages/1a/d6/e4d2c2cf25eb8cc34f5dd5032d7afa3a488dc3a3c9ee5dbeef12925cb23d/aiohttp-json-rpc-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "e11513b4d97cfec7b19cf00cf6726038", "sha256": "f684d198323081189dc71bb1478d3e889175007fadc03bcfa29f2dd1ac9e4ad1"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.3.1.tar.gz", "has_sig": false, "md5_digest": "e11513b4d97cfec7b19cf00cf6726038", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3543, "upload_time": "2016-02-15T10:38:39", "upload_time_iso_8601": "2016-02-15T10:38:39.258053Z", "url": "https://files.pythonhosted.org/packages/3b/05/c3c0762fad1d779ed0f4020c2a43b0878dbc2eb41ae92b6fd7e7083fb730/aiohttp-json-rpc-0.3.1.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "eca8b9871fab105e970ea2a5cb5b502a", "sha256": "389ba9997f32f784ccf81ad3e0c5ed2f1fe650cfc0cb0beae44f8ecd3f911671"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.4.tar.gz", "has_sig": false, "md5_digest": "eca8b9871fab105e970ea2a5cb5b502a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5994, "upload_time": "2016-03-24T21:51:51", "upload_time_iso_8601": "2016-03-24T21:51:51.200264Z", "url": "https://files.pythonhosted.org/packages/ed/34/86f4b9d77c7e5639ae9a0fa808a8c2668900ea413e76549f6958d9807440/aiohttp-json-rpc-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "05babdead4d443240fe0352a5b080c65", "sha256": "217b8fff2699c8c9882c86ac2623bd448ba4ff56dfd9cf774a6ea73fa12a27eb"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.5.tar.gz", "has_sig": false, "md5_digest": "05babdead4d443240fe0352a5b080c65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6241, "upload_time": "2016-04-05T15:07:43", "upload_time_iso_8601": "2016-04-05T15:07:43.091884Z", "url": "https://files.pythonhosted.org/packages/aa/34/635bb54875280e61448545dcfd606a7d1e6f99e016510ab510ca909d878f/aiohttp-json-rpc-0.5.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "11ba906c51ff5bf8aab0b57004c3036d", "sha256": "2932af218f9002c97870b7d85cf107aacbe052218b15055945f883759d8fb204"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.5.1.tar.gz", "has_sig": false, "md5_digest": "11ba906c51ff5bf8aab0b57004c3036d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6636, "upload_time": "2016-04-22T14:08:45", "upload_time_iso_8601": "2016-04-22T14:08:45.579049Z", "url": "https://files.pythonhosted.org/packages/3b/a8/04a2b02bb68b8a7f9eff84ab2241fba8df14a2796613a830a70b8eeecaa6/aiohttp-json-rpc-0.5.1.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "03f9169a1329e9ddad54bd08f6e2d048", "sha256": "71203be1390a4e5ed4b685dcccf5711b2df1638aae38bd7fe2fb2e3575999fbe"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.6.tar.gz", "has_sig": false, "md5_digest": "03f9169a1329e9ddad54bd08f6e2d048", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7479, "upload_time": "2016-08-22T21:40:07", "upload_time_iso_8601": "2016-08-22T21:40:07.050563Z", "url": "https://files.pythonhosted.org/packages/22/fd/5c7b7ae3eb854fb770eabf3a93e22952c4ba8388577e6b8e57801792125f/aiohttp-json-rpc-0.6.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "bb6d90526110bab86b53c40b8d4f6392", "sha256": "a3e3c2df1027875480ac280499d6639e4126daf78ce030aed317d74ead0e6024"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.6.1.tar.gz", "has_sig": false, "md5_digest": "bb6d90526110bab86b53c40b8d4f6392", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7805, "upload_time": "2016-09-01T15:30:18", "upload_time_iso_8601": "2016-09-01T15:30:18.582512Z", "url": "https://files.pythonhosted.org/packages/d1/f3/f8364af749670037cbf41ab17189c6c8e1fbb53283a5f82ceb20ee364d3e/aiohttp-json-rpc-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "8278fb16c33d17245e9b571b952ffb13", "sha256": "5ccf85e11e7ad12939137b3eaf22e4782a0ebf472f0afd6bd480c3735f1afb74"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.6.2.tar.gz", "has_sig": false, "md5_digest": "8278fb16c33d17245e9b571b952ffb13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7827, "upload_time": "2016-10-26T14:34:10", "upload_time_iso_8601": "2016-10-26T14:34:10.697899Z", "url": "https://files.pythonhosted.org/packages/5d/45/002de4fee5f56ca86228046c93896f8887ffc30dd8fdeec7aaf2e666d4fa/aiohttp-json-rpc-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "d2024a9e14863af35a1bdf9b03948281", "sha256": "892869946883f9a3f123ed0264125e1c8094af38d04e9b47afc661683e201fc9"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.6.3.tar.gz", "has_sig": false, "md5_digest": "d2024a9e14863af35a1bdf9b03948281", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7804, "upload_time": "2016-11-15T14:02:27", "upload_time_iso_8601": "2016-11-15T14:02:27.971000Z", "url": "https://files.pythonhosted.org/packages/80/ca/85fb251640577cb53d567a0b1f9a5e6d820edb55bb02500558e1f28d71c9/aiohttp-json-rpc-0.6.3.tar.gz", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "cb7c949d3aecd3b530a06a7e4166a742", "sha256": "012908dda7e8336ddb34ca67e737a4988a34f7280f9afa770e63414ff996972b"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.6.4.tar.gz", "has_sig": false, "md5_digest": "cb7c949d3aecd3b530a06a7e4166a742", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7832, "upload_time": "2016-11-17T22:42:14", "upload_time_iso_8601": "2016-11-17T22:42:14.750907Z", "url": "https://files.pythonhosted.org/packages/a2/ed/f6469f829f00111bb8c95e5f677b93caf58979333f01115ba4cd9dd921a8/aiohttp-json-rpc-0.6.4.tar.gz", "yanked": false}], "0.6.5": [{"comment_text": "", "digests": {"md5": "4bc2c51061c8ad41127e044b8825f75c", "sha256": "e6740d2e40447eb845f2e16d66c069375d658f146cf028f1553dc11c5754f3b0"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.6.5.tar.gz", "has_sig": false, "md5_digest": "4bc2c51061c8ad41127e044b8825f75c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7843, "upload_time": "2016-11-21T16:23:11", "upload_time_iso_8601": "2016-11-21T16:23:11.407850Z", "url": "https://files.pythonhosted.org/packages/c2/e7/b3570a7b880f99e697da7251b639c813b0d92a36acbc1e75770619c130c4/aiohttp-json-rpc-0.6.5.tar.gz", "yanked": false}], "0.6.6": [{"comment_text": "", "digests": {"md5": "7aebeb59a42e40f854bd973390fb6166", "sha256": "0aad1f928bd4973c1ee431855d39a0d15feb3a80621f2db69fb927a9ced8e4c0"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.6.6.tar.gz", "has_sig": false, "md5_digest": "7aebeb59a42e40f854bd973390fb6166", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8313, "upload_time": "2016-12-06T15:47:33", "upload_time_iso_8601": "2016-12-06T15:47:33.191059Z", "url": "https://files.pythonhosted.org/packages/84/71/170dfd1206a35277e4fc2c0757cd9cb6f68059987b07946812e8f9e2e543/aiohttp-json-rpc-0.6.6.tar.gz", "yanked": false}], "0.6.6.1": [{"comment_text": "", "digests": {"md5": "de9851fd61192db2396662659ba72b14", "sha256": "8ef70213e8a9021a4e5c598690459e370911914de0faa3c5fa56fcbea667fd8c"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.6.6.1.tar.gz", "has_sig": false, "md5_digest": "de9851fd61192db2396662659ba72b14", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8339, "upload_time": "2016-12-08T15:03:39", "upload_time_iso_8601": "2016-12-08T15:03:39.979731Z", "url": "https://files.pythonhosted.org/packages/10/b0/907d9d765dca294b2a2278c1af972f56410dedaffcdb0d36c1d14fc5f7a6/aiohttp-json-rpc-0.6.6.1.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "4e23b18670385bbed7caed8e89120f82", "sha256": "4f6a2d72a693826cc8f76ebf6d67bc00fe006d9fff5023cc392ad7da97e75513"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.7.tar.gz", "has_sig": false, "md5_digest": "4e23b18670385bbed7caed8e89120f82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8331, "upload_time": "2016-12-14T13:29:47", "upload_time_iso_8601": "2016-12-14T13:29:47.393231Z", "url": "https://files.pythonhosted.org/packages/9c/fb/e5329232ae54d49d02f942b7073be5187ed702b77aa9beea060a0c6d3d2f/aiohttp-json-rpc-0.7.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "06bbbe21d539508e16bd2e0719431149", "sha256": "06ff3154158d4ad4c110c69724e466c4362ac6cdc0c2ba3ed08ac849aad4874f"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.7.1.tar.gz", "has_sig": false, "md5_digest": "06bbbe21d539508e16bd2e0719431149", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8342, "upload_time": "2017-03-02T22:16:55", "upload_time_iso_8601": "2017-03-02T22:16:55.564023Z", "url": "https://files.pythonhosted.org/packages/17/84/da8f0009e73b57791e2b5cdcb96dd10327cc0588d5f27a926bbfe36dc3ee/aiohttp-json-rpc-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "2b97fddb429c5972a998678cbf22835a", "sha256": "bf563d516925bb9e378044a9d318324f1fb96641ef1b753b67f3f1daf2a830e5"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.7.2.tar.gz", "has_sig": false, "md5_digest": "2b97fddb429c5972a998678cbf22835a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8298, "upload_time": "2017-03-06T14:16:16", "upload_time_iso_8601": "2017-03-06T14:16:16.729877Z", "url": "https://files.pythonhosted.org/packages/2d/ba/a704a92686ebfee2b0ce129cd057a3a42a8b4e23aac057e92e5426a3a6d1/aiohttp-json-rpc-0.7.2.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "92ea73058da603abfb2754c366bbed44", "sha256": "5e5cff5e64a3acceb81e6502fc99a3ba350302152c0c64169801246057bcfea2"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.8.tar.gz", "has_sig": false, "md5_digest": "92ea73058da603abfb2754c366bbed44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8259, "upload_time": "2017-05-09T20:21:40", "upload_time_iso_8601": "2017-05-09T20:21:40.258611Z", "url": "https://files.pythonhosted.org/packages/39/ea/f63e0f96a6dab65e074261ccdca0cc01b84bfd970595971a847afb1f8ded/aiohttp-json-rpc-0.8.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "0cafa37ac76b96ffa1e6fdfaf53805d9", "sha256": "dc5ff6edb9a8081f9b91b26bf3a31c36a9721aa008b00b252dda4941c3251e52"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.8.1.tar.gz", "has_sig": false, "md5_digest": "0cafa37ac76b96ffa1e6fdfaf53805d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11011, "upload_time": "2017-06-25T19:19:01", "upload_time_iso_8601": "2017-06-25T19:19:01.723649Z", "url": "https://files.pythonhosted.org/packages/53/30/341fbf8e95d39e6a5e79c3baa2a57bcb42b9293c1aba227b513f513ea1f8/aiohttp-json-rpc-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "6b1a385236e443dbe566c42a82d60ee7", "sha256": "8bc7d3218595cdb3f2b453cdfec5fcdf7e215459fef058f99819b941a5656753"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.8.2.tar.gz", "has_sig": false, "md5_digest": "6b1a385236e443dbe566c42a82d60ee7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11357, "upload_time": "2017-08-18T14:44:17", "upload_time_iso_8601": "2017-08-18T14:44:17.181916Z", "url": "https://files.pythonhosted.org/packages/5f/39/9c1728f0e3850069c0fa1cbe3bb7511ae6e2d68d8d4d2dcb7fe587e9b7a5/aiohttp-json-rpc-0.8.2.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "910b10054ecf27da02bf5480314c0906", "sha256": "e21b883f782f298c619a8ecd8ba36b97ef49aab905b8ee39f8288fa370d74b04"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.8.3.tar.gz", "has_sig": false, "md5_digest": "910b10054ecf27da02bf5480314c0906", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11283, "upload_time": "2017-09-27T10:15:04", "upload_time_iso_8601": "2017-09-27T10:15:04.954863Z", "url": "https://files.pythonhosted.org/packages/39/07/9a0f6a58550947ed7f62ddee94507105e9c12af1013aae3fd4548c2438e3/aiohttp-json-rpc-0.8.3.tar.gz", "yanked": false}], "0.8.4": [{"comment_text": "", "digests": {"md5": "dec70abb91a520da8253dc75fce1332b", "sha256": "815c01dc0d658efb18739b0b3d5814ae62434c035066377d88401fb4c0fcf5cb"}, "downloads": -1, "filename": "aiohttp_json_rpc-0.8.4-py3-none-any.whl", "has_sig": false, "md5_digest": "dec70abb91a520da8253dc75fce1332b", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 14232, "upload_time": "2017-09-28T08:17:49", "upload_time_iso_8601": "2017-09-28T08:17:49.230692Z", "url": "https://files.pythonhosted.org/packages/cb/de/f06964ec874e4fd0f04e83042d4378d0d57cf8fe67e2ac9cb23755d15c33/aiohttp_json_rpc-0.8.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e2c4895ba3403974ea05e1d5ff75c0b7", "sha256": "5b93db2d0e929e8d997c2c78393623e61ca698f04864512371bee692ea086a71"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.8.4.tar.gz", "has_sig": false, "md5_digest": "e2c4895ba3403974ea05e1d5ff75c0b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11738, "upload_time": "2017-09-28T08:17:47", "upload_time_iso_8601": "2017-09-28T08:17:47.920391Z", "url": "https://files.pythonhosted.org/packages/72/a8/34a555530a7822aef0785939a4f967b4a5c255e64fdf31099324cb5194eb/aiohttp-json-rpc-0.8.4.tar.gz", "yanked": false}], "0.8.4.2": [{"comment_text": "", "digests": {"md5": "766ca1716994fb860e8da03fbc48fbc5", "sha256": "f3592a064a33f0f1d099600672045f4e48c62012477b484a0131591cd1dfa226"}, "downloads": -1, "filename": "aiohttp_json_rpc-0.8.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "766ca1716994fb860e8da03fbc48fbc5", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 19232, "upload_time": "2017-09-28T13:57:38", "upload_time_iso_8601": "2017-09-28T13:57:38.048579Z", "url": "https://files.pythonhosted.org/packages/a1/d5/3b8bb762a481bdd212037dc02119fd8fdd3d8cccf6e9a72153365eb1522e/aiohttp_json_rpc-0.8.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd8fa7c98e912014560e8ddc38bd491d", "sha256": "7e3e1147a437cae308c73ae4997245c11c42cfaa59a9bca63edb32c761586759"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.8.4.2.tar.gz", "has_sig": false, "md5_digest": "fd8fa7c98e912014560e8ddc38bd491d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12504, "upload_time": "2017-09-28T13:57:36", "upload_time_iso_8601": "2017-09-28T13:57:36.476373Z", "url": "https://files.pythonhosted.org/packages/f8/25/97a3f6493cef3141bab7caad174d3b78f568f8c3720994c6db484d82986a/aiohttp-json-rpc-0.8.4.2.tar.gz", "yanked": false}], "0.8.4.3": [{"comment_text": "", "digests": {"md5": "6a0aff49bb7840eb97d4e3e6c5d33a6a", "sha256": "5d643d930aae7b6622389575dd08b87a03449c9f73c765f46208a391f54c20f0"}, "downloads": -1, "filename": "aiohttp_json_rpc-0.8.4.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6a0aff49bb7840eb97d4e3e6c5d33a6a", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 19537, "upload_time": "2017-09-28T14:02:49", "upload_time_iso_8601": "2017-09-28T14:02:49.119790Z", "url": "https://files.pythonhosted.org/packages/91/35/a033211bdb475c6c62547677965d7a2346bdbc03e4de8462f6d89f91cdf5/aiohttp_json_rpc-0.8.4.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4b2e7d51f9e85c40cebb83a1b3ca10f", "sha256": "127b08d9e82923c45e2dc9bd68793872e8a7266d29933860ca51032fbb1dfbe2"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.8.4.3.tar.gz", "has_sig": false, "md5_digest": "f4b2e7d51f9e85c40cebb83a1b3ca10f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12523, "upload_time": "2017-09-28T14:02:47", "upload_time_iso_8601": "2017-09-28T14:02:47.211714Z", "url": "https://files.pythonhosted.org/packages/4b/92/fa6be40033aab7c9c692edf2f006f48b6f73a0b2890a7e8d6eefba6c54c0/aiohttp-json-rpc-0.8.4.3.tar.gz", "yanked": false}], "0.8.4.4": [{"comment_text": "", "digests": {"md5": "2e04c93e380586682314513fa39500d3", "sha256": "336127592d4c5b4c557269d70f3fc602f214a0d901ebf9d20aed3b176e490a59"}, "downloads": -1, "filename": "aiohttp_json_rpc-0.8.4.4-py3-none-any.whl", "has_sig": false, "md5_digest": "2e04c93e380586682314513fa39500d3", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 23749, "upload_time": "2017-09-29T12:55:37", "upload_time_iso_8601": "2017-09-29T12:55:37.233603Z", "url": "https://files.pythonhosted.org/packages/6b/8e/53956a81e8cfc7ecd8a6974c6d6c3be6d38f1487ede4e1659ba6110fe283/aiohttp_json_rpc-0.8.4.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04646ffa50acba95ff8f02b4291aef53", "sha256": "9bfa13c94e08102002be15095e099d057c6e5fdc917234ae842e708a02aee27a"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.8.4.4.tar.gz", "has_sig": false, "md5_digest": "04646ffa50acba95ff8f02b4291aef53", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12538, "upload_time": "2017-09-29T12:55:35", "upload_time_iso_8601": "2017-09-29T12:55:35.494809Z", "url": "https://files.pythonhosted.org/packages/10/cd/16fcf1b5a746f2fbaaf144d5ae0996858e439b7859632d144e0fa9c6694a/aiohttp-json-rpc-0.8.4.4.tar.gz", "yanked": false}], "0.8.5": [{"comment_text": "", "digests": {"md5": "c59ecb09d77d90d309de27aa6f467f3c", "sha256": "46678cc63dd3ccfd226af79feaf8ae12cf0575585068dd7e7363c099b77a36a7"}, "downloads": -1, "filename": "aiohttp_json_rpc-0.8.5-py3-none-any.whl", "has_sig": false, "md5_digest": "c59ecb09d77d90d309de27aa6f467f3c", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 23752, "upload_time": "2017-10-19T10:36:37", "upload_time_iso_8601": "2017-10-19T10:36:37.122863Z", "url": "https://files.pythonhosted.org/packages/74/28/a9e044cd0f87a80bb2c3ec6451d0196846484a15b102573af71e520b863d/aiohttp_json_rpc-0.8.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a369cb3dcd12377efc72eb176afbcfa", "sha256": "5a559e8461f3ecea41f4b3a56baf2d54b18c8e2bbf23055e8cf3c4dfbd9fa488"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.8.5.tar.gz", "has_sig": false, "md5_digest": "5a369cb3dcd12377efc72eb176afbcfa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12572, "upload_time": "2017-10-19T10:36:35", "upload_time_iso_8601": "2017-10-19T10:36:35.562960Z", "url": "https://files.pythonhosted.org/packages/9f/8e/0951e7aa81134daef149c4ad5145f917031091f5b4b933aedefead176756/aiohttp-json-rpc-0.8.5.tar.gz", "yanked": false}], "0.8.6": [{"comment_text": "", "digests": {"md5": "878f663ca39f6dc3aeca9c767ea59435", "sha256": "e4f315c4a1eaf4b5e5797ea97daa2cf3ebe58a954b4f2f0b96784436d63e2d4d"}, "downloads": -1, "filename": "aiohttp_json_rpc-0.8.6-py3-none-any.whl", "has_sig": false, "md5_digest": "878f663ca39f6dc3aeca9c767ea59435", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 24256, "upload_time": "2017-10-24T13:54:04", "upload_time_iso_8601": "2017-10-24T13:54:04.838994Z", "url": "https://files.pythonhosted.org/packages/ed/8a/80151dc7425f75fade835985bf6ec3750819d66fefd047b9821c5a6b1232/aiohttp_json_rpc-0.8.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59df1335d9f160127d4e77302e1b576e", "sha256": "83a1ea63c608c8756fd9541681acb3bbdbd46b133eb73109ee50a5309f7d65a1"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.8.6.tar.gz", "has_sig": false, "md5_digest": "59df1335d9f160127d4e77302e1b576e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13109, "upload_time": "2017-10-24T13:54:00", "upload_time_iso_8601": "2017-10-24T13:54:00.781009Z", "url": "https://files.pythonhosted.org/packages/64/34/9760df9d19367c00c2921d2b1f7b849439a3f9ffb9aab2710c12d696628f/aiohttp-json-rpc-0.8.6.tar.gz", "yanked": false}], "0.8.7": [{"comment_text": "", "digests": {"md5": "ef0e3425e1aac648072ee1538632b713", "sha256": "9ec69ea70ce49c4af445f0ac56ac728708ccfad8b214272d2cc7e75bc0b31327"}, "downloads": -1, "filename": "aiohttp_json_rpc-0.8.7-py3-none-any.whl", "has_sig": false, "md5_digest": "ef0e3425e1aac648072ee1538632b713", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 26223, "upload_time": "2018-01-07T17:49:04", "upload_time_iso_8601": "2018-01-07T17:49:04.502154Z", "url": "https://files.pythonhosted.org/packages/33/45/9fd21ca1b42023858150784c2aee954f435dde77b0e42b4907f8a8807960/aiohttp_json_rpc-0.8.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe02231c5b075047b988e7b78d0aaac5", "sha256": "e2b8b49779d5d9b811f3a94e98092b1fa14af6d9adbf71c3afa6b20c641fa5d5"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.8.7.tar.gz", "has_sig": false, "md5_digest": "fe02231c5b075047b988e7b78d0aaac5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14775, "upload_time": "2018-01-07T17:49:02", "upload_time_iso_8601": "2018-01-07T17:49:02.667317Z", "url": "https://files.pythonhosted.org/packages/03/eb/224ef1db577d28a5aa460faf5b28a579e8ec66e30042c1594561061af8bd/aiohttp-json-rpc-0.8.7.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "7c5938c63496036e766cbed6113a015d", "sha256": "a29725397b0e2bbfe3bd45c801c3c9d995b8cdca3a49ce461610dc20fe63dd3b"}, "downloads": -1, "filename": "aiohttp_json_rpc-0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "7c5938c63496036e766cbed6113a015d", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 25613, "upload_time": "2018-02-15T10:50:46", "upload_time_iso_8601": "2018-02-15T10:50:46.383575Z", "url": "https://files.pythonhosted.org/packages/21/b8/f9b9cb8e2b08dd327ab2272829349b64e30260b695142f86d7588cb018cb/aiohttp_json_rpc-0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c71c796fb1e7818e45d14de7a85ee85", "sha256": "6c2badfdfdd14fd641915d827f38cd4c0fdb9c464a9600382c3d02a5f3f1223f"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.9.tar.gz", "has_sig": false, "md5_digest": "2c71c796fb1e7818e45d14de7a85ee85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14449, "upload_time": "2018-02-15T10:50:44", "upload_time_iso_8601": "2018-02-15T10:50:44.273131Z", "url": "https://files.pythonhosted.org/packages/6b/b3/12aa1f84cad7b0578f4372c65aad4fbfb50831f521cdbe042bbb7129411e/aiohttp-json-rpc-0.9.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "6c92b65e3e4b2fbc9c50a3b09a6ef884", "sha256": "926aaaa7f741ab3f3c76e89cc184375b7cac1a8dc068b6f76171d40d14b57940"}, "downloads": -1, "filename": "aiohttp_json_rpc-0.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6c92b65e3e4b2fbc9c50a3b09a6ef884", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 25651, "upload_time": "2018-02-15T10:48:27", "upload_time_iso_8601": "2018-02-15T10:48:27.296458Z", "url": "https://files.pythonhosted.org/packages/41/ac/7c1d7c58d5890912ba94bc81d1116666d1f0e256f3d2f8db1d5dd1fe5478/aiohttp_json_rpc-0.9.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b797d98dd07cae608ea72da91d080c74", "sha256": "b0665724d0ba0b61717302f2bae8d204782165865adaa612a4d9b115c4791239"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.9.1.tar.gz", "has_sig": false, "md5_digest": "b797d98dd07cae608ea72da91d080c74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14450, "upload_time": "2018-02-15T10:48:24", "upload_time_iso_8601": "2018-02-15T10:48:24.800984Z", "url": "https://files.pythonhosted.org/packages/8a/b9/212bdf78c43924f5d708b196c363cbac3a13aa9cd8db70bf5888a38b1489/aiohttp-json-rpc-0.9.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "03bf083b6f26e2a18109aff89569af5c", "sha256": "2f317b8f48aaca3346c50439f7469921b807f38bacc25304b16f4e883717e84f"}, "downloads": -1, "filename": "aiohttp_json_rpc-0.12.3-py3-none-any.whl", "has_sig": false, "md5_digest": "03bf083b6f26e2a18109aff89569af5c", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 28623, "upload_time": "2020-03-09T09:07:32", "upload_time_iso_8601": "2020-03-09T09:07:32.340308Z", "url": "https://files.pythonhosted.org/packages/a5/a4/aa230ccf2dedf1356bc89f3f07b4796ce54c4a222e98aec4cb7e80355746/aiohttp_json_rpc-0.12.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f71f9c99638091df53ee1cab2bd7365", "sha256": "986a64ed57c0c05b1256fbbd624c75614828a57fe3892d8be7babca6851ab003"}, "downloads": -1, "filename": "aiohttp-json-rpc-0.12.3.tar.gz", "has_sig": false, "md5_digest": "3f71f9c99638091df53ee1cab2bd7365", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26829, "upload_time": "2020-03-09T09:07:29", "upload_time_iso_8601": "2020-03-09T09:07:29.785161Z", "url": "https://files.pythonhosted.org/packages/ec/cf/f8b77a7cdfc650c76a3da5d66e6cc18a0d4a8e23fdc382baffe8dd3f293a/aiohttp-json-rpc-0.12.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:17 2020"}