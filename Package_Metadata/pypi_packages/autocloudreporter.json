{"info": {"author": "Adam Williamson", "author_email": "awilliam@redhat.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Topic :: Utilities"], "description": "autocloudreporter\n=================\n\n``autocloudreporter`` is a fedmsg consumer for reporting Autocloud\nresults to ResultsDB. It listens out for Autocloud fedmsg messages, and\nsubmits results using the resultsdb\\_conventions module for conveniently\nreporting results in 'conventional' format.\n\nThe code was written with Python 3 in mind, but it turns out that\nverification of fedmsg message signatures does not currently work in\nPython 3, so it should be run under Python 2 for now.\n\nRequirements\n------------\n\nPython libraries:\n\n-  fedmsg\n-  `fedfind <https://pagure.io/fedora-qa/fedfind>`__\n-  `resultsdb\\_api <https://pagure.io/taskotron/resultsdb_api>`__\n\nInstallation\n------------\n\nInstall the required external Python libraries, then use setuptools to\ninstall, e.g.:\n\n::\n\n        python setup.py install\n\nTest and production modes\n-------------------------\n\nTwo consumers are provided, a 'test' and a 'production' consumer. For\n'test':\n\n-  The consumer listens for ``dev`` (not ``prod``) messages\n-  The consumer does not validate message signatures\n-  The consumer reports to a ResultsDB instance running on localhost\n   port 5001\n\nIn this mode it is safe to play around with the consumer, and you can\nuse a tool like ``fedmsg-dg-replay`` to trigger event creation by\nreplaying a relevant fedmsg (which will show up with a ``dev`` topic\nrather than ``prod``).\n\nFor 'production':\n\n-  The consumer listens for ``prod`` (not ``dev``) messages\n-  The consumer validates message signatures\n-  The consumer reports to the production ResultsDB instance (if\n   permitted)\n\n**PLEASE** do not enable the production consumer on a system authorized\nto submit results to ResultsDB without checking with Fedora QA.\n\nThe fedmsg config keys for the consumers are\n``autocloudreporter.test.enabled`` and\n``autocloudreporter.prod.enabled`` respectively.\n\nLicense\n-------\n\n``autocloudreporter`` is released under the GPL, version 3 or later. See\n``COPYING`` and the header of ``autocloudreporter.py`` itself.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pagure.io/fedora-qa/autocloudreporter", "keywords": "fedora qa autocloud resultsdb fedmsg", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "autocloudreporter", "package_url": "https://pypi.org/project/autocloudreporter/", "platform": "", "project_url": "https://pypi.org/project/autocloudreporter/", "project_urls": {"Homepage": "https://pagure.io/fedora-qa/autocloudreporter"}, "release_url": "https://pypi.org/project/autocloudreporter/1.0.3/", "requires_dist": null, "requires_python": "", "summary": "Fedmsg consumer to report Autocloud results to ResultsDB", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>autocloudreporter</tt> is a fedmsg consumer for reporting Autocloud\nresults to ResultsDB. It listens out for Autocloud fedmsg messages, and\nsubmits results using the resultsdb_conventions module for conveniently\nreporting results in \u2018conventional\u2019 format.</p>\n<p>The code was written with Python 3 in mind, but it turns out that\nverification of fedmsg message signatures does not currently work in\nPython 3, so it should be run under Python 2 for now.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>Python libraries:</p>\n<ul>\n<li>fedmsg</li>\n<li><a href=\"https://pagure.io/fedora-qa/fedfind\" rel=\"nofollow\">fedfind</a></li>\n<li><a href=\"https://pagure.io/taskotron/resultsdb_api\" rel=\"nofollow\">resultsdb_api</a></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install the required external Python libraries, then use setuptools to\ninstall, e.g.:</p>\n<pre>python setup.py install\n</pre>\n</div>\n<div id=\"test-and-production-modes\">\n<h2>Test and production modes</h2>\n<p>Two consumers are provided, a \u2018test\u2019 and a \u2018production\u2019 consumer. For\n\u2018test\u2019:</p>\n<ul>\n<li>The consumer listens for <tt>dev</tt> (not <tt>prod</tt>) messages</li>\n<li>The consumer does not validate message signatures</li>\n<li>The consumer reports to a ResultsDB instance running on localhost\nport 5001</li>\n</ul>\n<p>In this mode it is safe to play around with the consumer, and you can\nuse a tool like <tt><span class=\"pre\">fedmsg-dg-replay</span></tt> to trigger event creation by\nreplaying a relevant fedmsg (which will show up with a <tt>dev</tt> topic\nrather than <tt>prod</tt>).</p>\n<p>For \u2018production\u2019:</p>\n<ul>\n<li>The consumer listens for <tt>prod</tt> (not <tt>dev</tt>) messages</li>\n<li>The consumer validates message signatures</li>\n<li>The consumer reports to the production ResultsDB instance (if\npermitted)</li>\n</ul>\n<p><strong>PLEASE</strong> do not enable the production consumer on a system authorized\nto submit results to ResultsDB without checking with Fedora QA.</p>\n<p>The fedmsg config keys for the consumers are\n<tt>autocloudreporter.test.enabled</tt> and\n<tt>autocloudreporter.prod.enabled</tt> respectively.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><tt>autocloudreporter</tt> is released under the GPL, version 3 or later. See\n<tt>COPYING</tt> and the header of <tt>autocloudreporter.py</tt> itself.</p>\n</div>\n\n          </div>"}, "last_serial": 2650513, "releases": {"1.0.1": [], "1.0.2": [{"comment_text": "", "digests": {"md5": "5b67320084d4de0f677b02b908d422b3", "sha256": "d8c3404bc871a05e4cb666226d04e697181f4a8b7ab642fc713a60d39e6aa91c"}, "downloads": -1, "filename": "autocloudreporter-1.0.2.tar.gz", "has_sig": false, "md5_digest": "5b67320084d4de0f677b02b908d422b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20178, "upload_time": "2017-02-17T16:48:30", "upload_time_iso_8601": "2017-02-17T16:48:30.872969Z", "url": "https://files.pythonhosted.org/packages/b9/42/97f9c37475b11b9da19665dd20d81c8711606b4e3d0fc21f891791ceacd6/autocloudreporter-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "69ac25ca625f788e3224bfb36d72ffb4", "sha256": "a152f3bef2597393650ce768479d02b70f4eed705ae34881ad0c4cb9b9d0a4bd"}, "downloads": -1, "filename": "autocloudreporter-1.0.3.tar.gz", "has_sig": false, "md5_digest": "69ac25ca625f788e3224bfb36d72ffb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20632, "upload_time": "2017-02-17T21:59:04", "upload_time_iso_8601": "2017-02-17T21:59:04.685817Z", "url": "https://files.pythonhosted.org/packages/43/39/9ffbd4ad321a8c9601edc4650beb6a37e8cdf6e4b57678f3145a7c1f2a14/autocloudreporter-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "69ac25ca625f788e3224bfb36d72ffb4", "sha256": "a152f3bef2597393650ce768479d02b70f4eed705ae34881ad0c4cb9b9d0a4bd"}, "downloads": -1, "filename": "autocloudreporter-1.0.3.tar.gz", "has_sig": false, "md5_digest": "69ac25ca625f788e3224bfb36d72ffb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20632, "upload_time": "2017-02-17T21:59:04", "upload_time_iso_8601": "2017-02-17T21:59:04.685817Z", "url": "https://files.pythonhosted.org/packages/43/39/9ffbd4ad321a8c9601edc4650beb6a37e8cdf6e4b57678f3145a7c1f2a14/autocloudreporter-1.0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:20 2020"}