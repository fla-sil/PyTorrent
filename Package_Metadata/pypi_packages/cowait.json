{"info": {"author": "Backtick Technologies", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# cowait\n\nCowait is a framework for creating containerized workflows with asynchronous Python. Tasks can be run locally with Docker or on a kubernetes cluster. The goal is complete flexibility with minimal setup and configuration.\n\nDocs: http://docs.cowait.io/\n\n## Getting Started\n\n**Requirements**\n- docker\n- python 3.6+\n\n**Installation**\n\n```bash\n$ pip3 install cowait\n```\n\n## Task Development\n\n### First Task\n\n1. **Write a task class.**\n\n```python\n# hello.py\nfrom cowait import Task\n\nclass Hello(Task):\n    async def run(self):\n        print('Hello World')\n```\n\n2. **Build the task image**\n\nAll files within a folder is bundled into a task image.\n\nIn the same folder as `hello.py`, run:\n\n```bash\n$ cowait build\n```\n\n3. **Run it locally in Docker.** Make sure you're in a pipenv shell.\n\nIn the same folder as `hello.py`, run:\n\n```bash\n$ cowait run hello\n```\n\n**Notes**\n- `hello` supplied to `cowait run` is the module name. This module should contain exactly *one* task class. Modules can be single python files or subdirectories with `__init__.py` files.\n- Class name does not matter, except for importing to other tasks.\n\n### Subtasks, Arguments & Return Values\n\nTasks can create subtasks, by importing and calling other tasks as if they were asynchronous python functions. Subtasks accept arguments and return results. Arguments and results must be JSON serializable.\n\n```python\nfrom cowait import Task\nfrom some_subtask import SomeSubtask\n\nclass MainTask(Task):\n    async def run(self, **inputs):\n        subtask_result = await SomeSubtask(custom_argument = 'hello')\n        print('Subtask finished with result', subtask_result)\n        return 'ok'\n```\n\n### Task Contexts\n\nTasks live in a *Task Context*. If you have not explicitly defined one, the enclosing folder will be used along with sensible defaults. A task context can be used to package multiple tasks into a single image, customize dockerfiles, and to add extra pip requirements.\n\n*Todo*\n\n### Pushing Task Images\n\nBefore you can run tasks on a remote cluster, they must be pushed to a docker registry accessible from the cluster. To do this, you must define a proper image name in the context configuration file.\n\n```yaml\nversion: 1\ncowait:\n    image: cowait/task-test\n```\n\nOnce the image url has been configured, you can push the image:\n\n```bash\n$ cowait push\n```\n\n## Cluster Deployment\n\n**Requiurements**\n- Configured kubernetes cluster context.\n- Docker registry accessible from the cluster.\n\nFirst, ensure that the image has been pushed to your docker registry.\n\n```\n$ cowait push\n```\n\n**Kubernetes Configuration**\n\nBefore you can run tasks on a kubernetes cluster, you need to apply some RBAC rules to allow pods to interact with other pods. A sample configuration is provided in `k8setup.yml`, which will allow pods owned by the default service account to create, list and destroy other pods.\n\n**Running Tasks**\n\nOnce the cluster has been configured, simply run a task with the kubernetes provider:\n\n```bash\n$ cowait run hello --provider kubernetes\n```\n\n## Development\n\n**Requirements**\n- docker\n- python 3.6+\n- pipenv/virtualenv (optional)\n\n**Installation**\n\n1. Clone repository\n1. `$ python3 -m pip install -e .`\n\nChanges to the `cowait/` directory require a rebuild of the base image. You can do this with the provided helper script in the root of the repository:\n\n```bash\n$ ./build.sh\n```\n\nIf you have access to `cowait` on Docker Hub you can also push it automatically:\n\n```bash\n$ ./build.sh --push\n```\n\n**Note:** Tasks will have to rebuilt with `cowait build` for the changes to take effect.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/backtick-se/cowait", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "cowait", "package_url": "https://pypi.org/project/cowait/", "platform": "", "project_url": "https://pypi.org/project/cowait/", "project_urls": {"Homepage": "https://github.com/backtick-se/cowait"}, "release_url": "https://pypi.org/project/cowait/0.1.4/", "requires_dist": ["click", "docker", "requests", "pyyaml", "dask", "distributed", "kubernetes", "marshmallow", "aiohttp", "pytest", "pytest-sugar", "pytest-cov", "pytest-asyncio", "nest-asyncio"], "requires_python": ">=3.6", "summary": "Cowait is a framework for creating containerized workflows with asynchronous Python.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>cowait</h1>\n<p>Cowait is a framework for creating containerized workflows with asynchronous Python. Tasks can be run locally with Docker or on a kubernetes cluster. The goal is complete flexibility with minimal setup and configuration.</p>\n<p>Docs: <a href=\"http://docs.cowait.io/\" rel=\"nofollow\">http://docs.cowait.io/</a></p>\n<h2>Getting Started</h2>\n<p><strong>Requirements</strong></p>\n<ul>\n<li>docker</li>\n<li>python 3.6+</li>\n</ul>\n<p><strong>Installation</strong></p>\n<pre>$ pip3 install cowait\n</pre>\n<h2>Task Development</h2>\n<h3>First Task</h3>\n<ol>\n<li><strong>Write a task class.</strong></li>\n</ol>\n<pre><span class=\"c1\"># hello.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cowait</span> <span class=\"kn\">import</span> <span class=\"n\">Task</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Hello</span><span class=\"p\">(</span><span class=\"n\">Task</span><span class=\"p\">):</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Hello World'</span><span class=\"p\">)</span>\n</pre>\n<ol>\n<li><strong>Build the task image</strong></li>\n</ol>\n<p>All files within a folder is bundled into a task image.</p>\n<p>In the same folder as <code>hello.py</code>, run:</p>\n<pre>$ cowait build\n</pre>\n<ol>\n<li><strong>Run it locally in Docker.</strong> Make sure you're in a pipenv shell.</li>\n</ol>\n<p>In the same folder as <code>hello.py</code>, run:</p>\n<pre>$ cowait run hello\n</pre>\n<p><strong>Notes</strong></p>\n<ul>\n<li><code>hello</code> supplied to <code>cowait run</code> is the module name. This module should contain exactly <em>one</em> task class. Modules can be single python files or subdirectories with <code>__init__.py</code> files.</li>\n<li>Class name does not matter, except for importing to other tasks.</li>\n</ul>\n<h3>Subtasks, Arguments &amp; Return Values</h3>\n<p>Tasks can create subtasks, by importing and calling other tasks as if they were asynchronous python functions. Subtasks accept arguments and return results. Arguments and results must be JSON serializable.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cowait</span> <span class=\"kn\">import</span> <span class=\"n\">Task</span>\n<span class=\"kn\">from</span> <span class=\"nn\">some_subtask</span> <span class=\"kn\">import</span> <span class=\"n\">SomeSubtask</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MainTask</span><span class=\"p\">(</span><span class=\"n\">Task</span><span class=\"p\">):</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">inputs</span><span class=\"p\">):</span>\n        <span class=\"n\">subtask_result</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">SomeSubtask</span><span class=\"p\">(</span><span class=\"n\">custom_argument</span> <span class=\"o\">=</span> <span class=\"s1\">'hello'</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Subtask finished with result'</span><span class=\"p\">,</span> <span class=\"n\">subtask_result</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'ok'</span>\n</pre>\n<h3>Task Contexts</h3>\n<p>Tasks live in a <em>Task Context</em>. If you have not explicitly defined one, the enclosing folder will be used along with sensible defaults. A task context can be used to package multiple tasks into a single image, customize dockerfiles, and to add extra pip requirements.</p>\n<p><em>Todo</em></p>\n<h3>Pushing Task Images</h3>\n<p>Before you can run tasks on a remote cluster, they must be pushed to a docker registry accessible from the cluster. To do this, you must define a proper image name in the context configuration file.</p>\n<pre><span class=\"nt\">version</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">1</span>\n<span class=\"nt\">cowait</span><span class=\"p\">:</span>\n    <span class=\"nt\">image</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">cowait/task-test</span>\n</pre>\n<p>Once the image url has been configured, you can push the image:</p>\n<pre>$ cowait push\n</pre>\n<h2>Cluster Deployment</h2>\n<p><strong>Requiurements</strong></p>\n<ul>\n<li>Configured kubernetes cluster context.</li>\n<li>Docker registry accessible from the cluster.</li>\n</ul>\n<p>First, ensure that the image has been pushed to your docker registry.</p>\n<pre><code>$ cowait push\n</code></pre>\n<p><strong>Kubernetes Configuration</strong></p>\n<p>Before you can run tasks on a kubernetes cluster, you need to apply some RBAC rules to allow pods to interact with other pods. A sample configuration is provided in <code>k8setup.yml</code>, which will allow pods owned by the default service account to create, list and destroy other pods.</p>\n<p><strong>Running Tasks</strong></p>\n<p>Once the cluster has been configured, simply run a task with the kubernetes provider:</p>\n<pre>$ cowait run hello --provider kubernetes\n</pre>\n<h2>Development</h2>\n<p><strong>Requirements</strong></p>\n<ul>\n<li>docker</li>\n<li>python 3.6+</li>\n<li>pipenv/virtualenv (optional)</li>\n</ul>\n<p><strong>Installation</strong></p>\n<ol>\n<li>Clone repository</li>\n<li><code>$ python3 -m pip install -e .</code></li>\n</ol>\n<p>Changes to the <code>cowait/</code> directory require a rebuild of the base image. You can do this with the provided helper script in the root of the repository:</p>\n<pre>$ ./build.sh\n</pre>\n<p>If you have access to <code>cowait</code> on Docker Hub you can also push it automatically:</p>\n<pre>$ ./build.sh --push\n</pre>\n<p><strong>Note:</strong> Tasks will have to rebuilt with <code>cowait build</code> for the changes to take effect.</p>\n\n          </div>"}, "last_serial": 7165199, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "4149fbbef1e86c5d701a84f8ba5e7107", "sha256": "eb1031d2564da415939003e1ba32825c0f754502dad88d9c0ae488e44b7672d2"}, "downloads": -1, "filename": "cowait-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4149fbbef1e86c5d701a84f8ba5e7107", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 68455, "upload_time": "2020-04-27T15:02:52", "upload_time_iso_8601": "2020-04-27T15:02:52.148594Z", "url": "https://files.pythonhosted.org/packages/82/1b/617963c8198f4a4168beba8bc504ef331a0ab7b1567b636c214b20f17761/cowait-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "582bed7e0db9769fc8eeb8764784d807", "sha256": "6569b3ea308872c1a5515ee5ba3f59bfbe4e605fbb1c87867d0f358377de19b9"}, "downloads": -1, "filename": "cowait-0.1.1.tar.gz", "has_sig": false, "md5_digest": "582bed7e0db9769fc8eeb8764784d807", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 36781, "upload_time": "2020-04-27T15:02:53", "upload_time_iso_8601": "2020-04-27T15:02:53.772227Z", "url": "https://files.pythonhosted.org/packages/33/f3/388e343bfa90fc4ef98d503736d77432c383f94118082b73ccbd162c97a6/cowait-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "3eef0a860dadecafb444d392ab99bf77", "sha256": "9bec5211c480331e00c264aa214e662eb14cbe51e512e42f27778a8c3e70361e"}, "downloads": -1, "filename": "cowait-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3eef0a860dadecafb444d392ab99bf77", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 72318, "upload_time": "2020-04-28T12:44:17", "upload_time_iso_8601": "2020-04-28T12:44:17.136595Z", "url": "https://files.pythonhosted.org/packages/d1/69/23f86c2a35d43eed6067afdbfe0db05e9feb93ddd369b53caf5ab6d724b4/cowait-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea1529e0ea906d13dd506be5e59a31e0", "sha256": "acc278455f1507350b677f68664963d87140b512c4438bd60b20ca37dc3a87a2"}, "downloads": -1, "filename": "cowait-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ea1529e0ea906d13dd506be5e59a31e0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 36977, "upload_time": "2020-04-28T12:44:19", "upload_time_iso_8601": "2020-04-28T12:44:19.121426Z", "url": "https://files.pythonhosted.org/packages/39/d9/112dba6d24ea22c080f6dfc417216a42c86175947403c800b8aca8513ca6/cowait-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "26af792ad39a65685c4876325fcb615b", "sha256": "f5c77a0fd6ee6cd9f70e4114fe37ab23f823191f7f20a65cf6026e4c6db36258"}, "downloads": -1, "filename": "cowait-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "26af792ad39a65685c4876325fcb615b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 72891, "upload_time": "2020-04-29T14:01:47", "upload_time_iso_8601": "2020-04-29T14:01:47.503999Z", "url": "https://files.pythonhosted.org/packages/2f/a3/2094d11d7d41229b311f03c7cb4d3f1f17b2975f91709e6bf91cb82abcae/cowait-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "346c99ffa193346454666b8024d43fb8", "sha256": "23376ec54d3ff759aaae793913dba68f3c6efa9d4874224e2334c0c89f95efad"}, "downloads": -1, "filename": "cowait-0.1.3.tar.gz", "has_sig": false, "md5_digest": "346c99ffa193346454666b8024d43fb8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 38564, "upload_time": "2020-04-29T14:01:50", "upload_time_iso_8601": "2020-04-29T14:01:50.171602Z", "url": "https://files.pythonhosted.org/packages/6e/a7/5c4ced1277b9226d38a912efdace3d15dfb5b0b902e9a6e329ac1793094d/cowait-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "73cbf89f412e1c7543687dc057d01d56", "sha256": "a1cfd6d71912d6d235f0cc595b72af5ec5d8229aa32259cdef5d0a6c8ab5731b"}, "downloads": -1, "filename": "cowait-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "73cbf89f412e1c7543687dc057d01d56", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 72991, "upload_time": "2020-05-04T15:32:31", "upload_time_iso_8601": "2020-05-04T15:32:31.892651Z", "url": "https://files.pythonhosted.org/packages/16/ff/58e95e2bd40a2df7896f284eae99e22e4ef39d27d950b2703d3b2ef51bb4/cowait-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b77abbf36b43e85a0e9264af2c18f776", "sha256": "4ab088461b3e5dfb9f3fffff4c34aa3d10d69df1d63907c46e2eaacf99650802"}, "downloads": -1, "filename": "cowait-0.1.4.tar.gz", "has_sig": false, "md5_digest": "b77abbf36b43e85a0e9264af2c18f776", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 37481, "upload_time": "2020-05-04T15:32:33", "upload_time_iso_8601": "2020-05-04T15:32:33.464375Z", "url": "https://files.pythonhosted.org/packages/91/41/08969eb2dcb9e6f09542f0924f0e72e93dda28da80e59d369e4140ff889d/cowait-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "73cbf89f412e1c7543687dc057d01d56", "sha256": "a1cfd6d71912d6d235f0cc595b72af5ec5d8229aa32259cdef5d0a6c8ab5731b"}, "downloads": -1, "filename": "cowait-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "73cbf89f412e1c7543687dc057d01d56", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 72991, "upload_time": "2020-05-04T15:32:31", "upload_time_iso_8601": "2020-05-04T15:32:31.892651Z", "url": "https://files.pythonhosted.org/packages/16/ff/58e95e2bd40a2df7896f284eae99e22e4ef39d27d950b2703d3b2ef51bb4/cowait-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b77abbf36b43e85a0e9264af2c18f776", "sha256": "4ab088461b3e5dfb9f3fffff4c34aa3d10d69df1d63907c46e2eaacf99650802"}, "downloads": -1, "filename": "cowait-0.1.4.tar.gz", "has_sig": false, "md5_digest": "b77abbf36b43e85a0e9264af2c18f776", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 37481, "upload_time": "2020-05-04T15:32:33", "upload_time_iso_8601": "2020-05-04T15:32:33.464375Z", "url": "https://files.pythonhosted.org/packages/91/41/08969eb2dcb9e6f09542f0924f0e72e93dda28da80e59d369e4140ff889d/cowait-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:44 2020"}