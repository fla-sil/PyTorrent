{"info": {"author": "Aalouane Soufiane", "author_email": "aalouane.s@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: POSIX :: Linux", "Operating System :: Unix", "Programming Language :: Python :: 3", "Topic :: System :: Monitoring", "Topic :: System :: Networking", "Topic :: System :: Networking :: Firewalls", "Topic :: System :: Networking :: Monitoring"], "description": "======================\nInmap\n======================\n\nIntroduction\n------------\n\ninmap is a python library which helps in using nmap port scanner. It allows to easilly manipulate nmap scan results and will be a perfect\ntool for systems administrators who want to automatize scanning task and reports.\n\nSupported Python Versions\n-------------------------\n\n* Python 3.4+\n\nInstalling nmap scanner\n-----------------------\n\ninmap requires the nmap scanner : `<https://nmap.org/download.html>`_\n\n**Debian based system**::  \n\n    sudo apt-get install nmap\n\n**Red Hat based system**::\n\n    yum install nmap \n\n**ArchLinux**:: \n\n    pacman -S nmap                       \n\n**OpenSuse**::\n\n    yast2 -i nmap          \n\n**Mac OS X**::  \n\n    brew install nmap          \n\nInstall inmap package\n---------------------\n\nIf you have `pip3 <https://pip.pypa.io/>`_ on your system, you can simply install or upgrade the Python bindings::\n\n    pip3 install inmap\n\nAlternately, you can download the source distribution from `PyPI <https://pypi.org/project/inmap/#files>`_ (e.g. inmap-1.2.4.tar.gz), unarchive it, and run::\n\n    python setup.py install\n\nExample 0: Port Scanning\n------------------------\n\n.. code-block:: python\n\n    import inmap\n\n    scan = inmap.ScanController()\n    host = inmap.HostModel()\n    port = inmap.PortModel()\n\n    scan.scan_ports(host='scantest.nmap.org', ports='0-200')\n    scan.scan_ports(host='scantest.nmap.org', ports='22')\n    # You can use the udp and|or pn option\n    scan.scan_ports(host=\"scantest.nmap.org\", ports='80', udp = True, pn = True)\n\n    # Fetch results\n    # =============\n\n    # for port infos the possible arguments are :  ip_address - port - proto - state - service -version\n\n    results = port.select()\n\n    # Or\n    results = port.select(state = 'open')\n    results = port.select(port = 80)\n    results = port.select(ip_address = \"10.10.10.5\")\n\n    # and so on\n\n    # Display results\n    # ===============\n    print(results)\n\n    # if we have a single line of result\n    prints(results['ip_address'])\n    prints(results['port'])\n    prints(results['proto'])\n    prints(results['state'])\n    prints(results['service'])\n    prints(results['version']) # for version info see the next example\n\n    # for many results\n    print(results[0]['port'])\n    print(results[1]['service'])\n\n    # Or\n    for result in results:\n        print(result['ip_address'], ' - ', result['port'], ' - ', result['proto'], ' - ', result['state'], ' - ', result['service'])\n\nExample 1: Port Scanning with their version\n-------------------------------------------\n\n.. code-block:: python\n\n    import inmap\n\n    scan = inmap.ScanController()\n    host = inmap.HostModel()\n    port = inmap.PortModel()\n\n    scan.scan_version_port(host=\"scantest.nmap.org\", ports='0-200')\n\n    # or\n    scan.scan_version_port(host=\"scantest.nmap.org\", ports='80')\n\n    # You can use the udp and|or pn option\n    scan.scan_version_port(host=\"scantest.nmap.org\", ports='80', udp = True, pn = True)\n\n    # For fetch and displaying results, see the example 0\n\nExample 2: scan the 10 most ports\n---------------------------------\n\n.. code-block:: python\n\n    import inmap\n\n    scan = inmap.ScanController()\n    host = inmap.HostModel()\n    port = inmap.PortModel()\n\n    scan.scan_most_ports(host='scantest.nmap.org')\n\n    # Or scan the 20 most ports\n    scan.scan_most_ports(host='10.10.10.3', number = 20)\n\n    # You can use the udp and|or pn option\n    scan.scan_most_ports(host='10.10.10.3', number = 20, udp = True, pn = True)\n\n    # For fetch and displaying results, see the example 0\n\nExample 3: all information that we can have about this host : OS Detection, Port Scanning ...\n---------------------------------------------------------------------------------------------\n\n.. code-block:: python\n\n    import inmap\n\n    scan = inmap.ScanController()\n    host = inmap.HostModel()\n    port = inmap.PortModel()\n\n    # Take more time and need root privilege\n    scan.scan_all(host='scantest.nmap.org')\n    # You can use the udp and|or pn option\n    scan.scan_most_ports(host='10.10.10.3', udp = True, pn = True)\n\n    # Or scan the 20 most ports\n    scan.scan_most_ports(host='10.10.10.3', number = 20)\n\n    # You can use the udp and|or pn option\n    scan.scan_most_ports(host='10.10.10.3', number = 20, udp = True, pn = True)\n\n    # Fetch results\n    # =============\n\n    # for host infos the possible arguments are :\n    # ip_address, mac_address, hostname, os_family, os_cpe, os_details, device_type, info_host, info_cpe, info_os, network_distance\n    results = host.select()\n\n    # Or\n    results = host.select(state = 'Up') # state : Up | Down\n    results = host.select(ip_address = \"10.10.10.5\")\n    results = host.select(mac_address = \"08:00:27:D3:EB:F1\")\n    results = host.select(hostname = \"scantest.nmap.org\")\n\n    # and so on, for port infos the possible arguments are :  ip_address - port - proto - state - service -version\n\n    # Display results\n    # ===============\n    print(results)\n\n    # if we have a single line of result\n    prints(results['ip_address'])\n    prints(results['mac_address'])\n    prints(results['hostname'])\n    prints(results['state'])\n    prints(results['os_details'])\n    prints(results['network_distance']) # for version info see the next example\n\n    # for many results\n    print(results[0]['state'])\n    print(results[1]['ip_address'])\n    print(results[1]['network_distance'])\n    print(results[1]['os_family'])\n\n    # Or\n    for result in results:\n        print(result['ip_address'], ' - ', result['mac_address'], ' - ', result['hostname'], ' - ', result['os_family'])\n\n    # For fetch and displaying port results, see the example 0\n\n\nUse The Source Luke!\n--------------------\n\nView source code online:\n\n+-----------+-------------------------------------------------------+\n| official: | https://github.com/aalouane/inmap                     |\n+-----------+-------------------------------------------------------+", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "nmap,portscanner,network,pentesting", "license": "gpl-3.0.txt", "maintainer": "", "maintainer_email": "", "name": "inmap", "package_url": "https://pypi.org/project/inmap/", "platform": "Operating System :: Linux", "project_url": "https://pypi.org/project/inmap/", "project_urls": null, "release_url": "https://pypi.org/project/inmap/1.2.7/", "requires_dist": null, "requires_python": "", "summary": "This is a python class to use nmap and access scan results from python3", "version": "1.2.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>inmap is a python library which helps in using nmap port scanner. It allows to easilly manipulate nmap scan results and will be a perfect\ntool for systems administrators who want to automatize scanning task and reports.</p>\n</div>\n<div id=\"supported-python-versions\">\n<h2>Supported Python Versions</h2>\n<ul>\n<li>Python 3.4+</li>\n</ul>\n</div>\n<div id=\"installing-nmap-scanner\">\n<h2>Installing nmap scanner</h2>\n<p>inmap requires the nmap scanner : <a href=\"https://nmap.org/download.html\" rel=\"nofollow\">https://nmap.org/download.html</a></p>\n<p><strong>Debian based system</strong>:</p>\n<pre>sudo apt-get install nmap\n</pre>\n<p><strong>Red Hat based system</strong>:</p>\n<pre>yum install nmap\n</pre>\n<p><strong>ArchLinux</strong>:</p>\n<pre>pacman -S nmap\n</pre>\n<p><strong>OpenSuse</strong>:</p>\n<pre>yast2 -i nmap\n</pre>\n<p><strong>Mac OS X</strong>:</p>\n<pre>brew install nmap\n</pre>\n</div>\n<div id=\"install-inmap-package\">\n<h2>Install inmap package</h2>\n<p>If you have <a href=\"https://pip.pypa.io/\" rel=\"nofollow\">pip3</a> on your system, you can simply install or upgrade the Python bindings:</p>\n<pre>pip3 install inmap\n</pre>\n<p>Alternately, you can download the source distribution from <a href=\"https://pypi.org/project/inmap/#files\" rel=\"nofollow\">PyPI</a> (e.g. inmap-1.2.4.tar.gz), unarchive it, and run:</p>\n<pre>python setup.py install\n</pre>\n</div>\n<div id=\"example-0-port-scanning\">\n<h2>Example 0: Port Scanning</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">inmap</span>\n\n<span class=\"n\">scan</span> <span class=\"o\">=</span> <span class=\"n\">inmap</span><span class=\"o\">.</span><span class=\"n\">ScanController</span><span class=\"p\">()</span>\n<span class=\"n\">host</span> <span class=\"o\">=</span> <span class=\"n\">inmap</span><span class=\"o\">.</span><span class=\"n\">HostModel</span><span class=\"p\">()</span>\n<span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"n\">inmap</span><span class=\"o\">.</span><span class=\"n\">PortModel</span><span class=\"p\">()</span>\n\n<span class=\"n\">scan</span><span class=\"o\">.</span><span class=\"n\">scan_ports</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'scantest.nmap.org'</span><span class=\"p\">,</span> <span class=\"n\">ports</span><span class=\"o\">=</span><span class=\"s1\">'0-200'</span><span class=\"p\">)</span>\n<span class=\"n\">scan</span><span class=\"o\">.</span><span class=\"n\">scan_ports</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'scantest.nmap.org'</span><span class=\"p\">,</span> <span class=\"n\">ports</span><span class=\"o\">=</span><span class=\"s1\">'22'</span><span class=\"p\">)</span>\n<span class=\"c1\"># You can use the udp and|or pn option</span>\n<span class=\"n\">scan</span><span class=\"o\">.</span><span class=\"n\">scan_ports</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s2\">\"scantest.nmap.org\"</span><span class=\"p\">,</span> <span class=\"n\">ports</span><span class=\"o\">=</span><span class=\"s1\">'80'</span><span class=\"p\">,</span> <span class=\"n\">udp</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Fetch results</span>\n<span class=\"c1\"># =============</span>\n\n<span class=\"c1\"># for port infos the possible arguments are :  ip_address - port - proto - state - service -version</span>\n\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">port</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Or</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">port</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"s1\">'open'</span><span class=\"p\">)</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">port</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"mi\">80</span><span class=\"p\">)</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">port</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">ip_address</span> <span class=\"o\">=</span> <span class=\"s2\">\"10.10.10.5\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># and so on</span>\n\n<span class=\"c1\"># Display results</span>\n<span class=\"c1\"># ===============</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># if we have a single line of result</span>\n<span class=\"n\">prints</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">'ip_address'</span><span class=\"p\">])</span>\n<span class=\"n\">prints</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">'port'</span><span class=\"p\">])</span>\n<span class=\"n\">prints</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">'proto'</span><span class=\"p\">])</span>\n<span class=\"n\">prints</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">'state'</span><span class=\"p\">])</span>\n<span class=\"n\">prints</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">'service'</span><span class=\"p\">])</span>\n<span class=\"n\">prints</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">'version'</span><span class=\"p\">])</span> <span class=\"c1\"># for version info see the next example</span>\n\n<span class=\"c1\"># for many results</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"s1\">'port'</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"s1\">'service'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Or</span>\n<span class=\"k\">for</span> <span class=\"n\">result</span> <span class=\"ow\">in</span> <span class=\"n\">results</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'ip_address'</span><span class=\"p\">],</span> <span class=\"s1\">' - '</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'port'</span><span class=\"p\">],</span> <span class=\"s1\">' - '</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'proto'</span><span class=\"p\">],</span> <span class=\"s1\">' - '</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'state'</span><span class=\"p\">],</span> <span class=\"s1\">' - '</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'service'</span><span class=\"p\">])</span>\n</pre>\n</div>\n<div id=\"example-1-port-scanning-with-their-version\">\n<h2>Example 1: Port Scanning with their version</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">inmap</span>\n\n<span class=\"n\">scan</span> <span class=\"o\">=</span> <span class=\"n\">inmap</span><span class=\"o\">.</span><span class=\"n\">ScanController</span><span class=\"p\">()</span>\n<span class=\"n\">host</span> <span class=\"o\">=</span> <span class=\"n\">inmap</span><span class=\"o\">.</span><span class=\"n\">HostModel</span><span class=\"p\">()</span>\n<span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"n\">inmap</span><span class=\"o\">.</span><span class=\"n\">PortModel</span><span class=\"p\">()</span>\n\n<span class=\"n\">scan</span><span class=\"o\">.</span><span class=\"n\">scan_version_port</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s2\">\"scantest.nmap.org\"</span><span class=\"p\">,</span> <span class=\"n\">ports</span><span class=\"o\">=</span><span class=\"s1\">'0-200'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># or</span>\n<span class=\"n\">scan</span><span class=\"o\">.</span><span class=\"n\">scan_version_port</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s2\">\"scantest.nmap.org\"</span><span class=\"p\">,</span> <span class=\"n\">ports</span><span class=\"o\">=</span><span class=\"s1\">'80'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># You can use the udp and|or pn option</span>\n<span class=\"n\">scan</span><span class=\"o\">.</span><span class=\"n\">scan_version_port</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s2\">\"scantest.nmap.org\"</span><span class=\"p\">,</span> <span class=\"n\">ports</span><span class=\"o\">=</span><span class=\"s1\">'80'</span><span class=\"p\">,</span> <span class=\"n\">udp</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># For fetch and displaying results, see the example 0</span>\n</pre>\n</div>\n<div id=\"example-2-scan-the-10-most-ports\">\n<h2>Example 2: scan the 10 most ports</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">inmap</span>\n\n<span class=\"n\">scan</span> <span class=\"o\">=</span> <span class=\"n\">inmap</span><span class=\"o\">.</span><span class=\"n\">ScanController</span><span class=\"p\">()</span>\n<span class=\"n\">host</span> <span class=\"o\">=</span> <span class=\"n\">inmap</span><span class=\"o\">.</span><span class=\"n\">HostModel</span><span class=\"p\">()</span>\n<span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"n\">inmap</span><span class=\"o\">.</span><span class=\"n\">PortModel</span><span class=\"p\">()</span>\n\n<span class=\"n\">scan</span><span class=\"o\">.</span><span class=\"n\">scan_most_ports</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'scantest.nmap.org'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Or scan the 20 most ports</span>\n<span class=\"n\">scan</span><span class=\"o\">.</span><span class=\"n\">scan_most_ports</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'10.10.10.3'</span><span class=\"p\">,</span> <span class=\"n\">number</span> <span class=\"o\">=</span> <span class=\"mi\">20</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># You can use the udp and|or pn option</span>\n<span class=\"n\">scan</span><span class=\"o\">.</span><span class=\"n\">scan_most_ports</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'10.10.10.3'</span><span class=\"p\">,</span> <span class=\"n\">number</span> <span class=\"o\">=</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">udp</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># For fetch and displaying results, see the example 0</span>\n</pre>\n</div>\n<div id=\"example-3-all-information-that-we-can-have-about-this-host-os-detection-port-scanning\">\n<h2>Example 3: all information that we can have about this host : OS Detection, Port Scanning \u2026</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">inmap</span>\n\n<span class=\"n\">scan</span> <span class=\"o\">=</span> <span class=\"n\">inmap</span><span class=\"o\">.</span><span class=\"n\">ScanController</span><span class=\"p\">()</span>\n<span class=\"n\">host</span> <span class=\"o\">=</span> <span class=\"n\">inmap</span><span class=\"o\">.</span><span class=\"n\">HostModel</span><span class=\"p\">()</span>\n<span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"n\">inmap</span><span class=\"o\">.</span><span class=\"n\">PortModel</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Take more time and need root privilege</span>\n<span class=\"n\">scan</span><span class=\"o\">.</span><span class=\"n\">scan_all</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'scantest.nmap.org'</span><span class=\"p\">)</span>\n<span class=\"c1\"># You can use the udp and|or pn option</span>\n<span class=\"n\">scan</span><span class=\"o\">.</span><span class=\"n\">scan_most_ports</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'10.10.10.3'</span><span class=\"p\">,</span> <span class=\"n\">udp</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Or scan the 20 most ports</span>\n<span class=\"n\">scan</span><span class=\"o\">.</span><span class=\"n\">scan_most_ports</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'10.10.10.3'</span><span class=\"p\">,</span> <span class=\"n\">number</span> <span class=\"o\">=</span> <span class=\"mi\">20</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># You can use the udp and|or pn option</span>\n<span class=\"n\">scan</span><span class=\"o\">.</span><span class=\"n\">scan_most_ports</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'10.10.10.3'</span><span class=\"p\">,</span> <span class=\"n\">number</span> <span class=\"o\">=</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">udp</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">pn</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Fetch results</span>\n<span class=\"c1\"># =============</span>\n\n<span class=\"c1\"># for host infos the possible arguments are :</span>\n<span class=\"c1\"># ip_address, mac_address, hostname, os_family, os_cpe, os_details, device_type, info_host, info_cpe, info_os, network_distance</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">host</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Or</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">host</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"s1\">'Up'</span><span class=\"p\">)</span> <span class=\"c1\"># state : Up | Down</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">host</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">ip_address</span> <span class=\"o\">=</span> <span class=\"s2\">\"10.10.10.5\"</span><span class=\"p\">)</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">host</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">mac_address</span> <span class=\"o\">=</span> <span class=\"s2\">\"08:00:27:D3:EB:F1\"</span><span class=\"p\">)</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">host</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">hostname</span> <span class=\"o\">=</span> <span class=\"s2\">\"scantest.nmap.org\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># and so on, for port infos the possible arguments are :  ip_address - port - proto - state - service -version</span>\n\n<span class=\"c1\"># Display results</span>\n<span class=\"c1\"># ===============</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># if we have a single line of result</span>\n<span class=\"n\">prints</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">'ip_address'</span><span class=\"p\">])</span>\n<span class=\"n\">prints</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">'mac_address'</span><span class=\"p\">])</span>\n<span class=\"n\">prints</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">'hostname'</span><span class=\"p\">])</span>\n<span class=\"n\">prints</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">'state'</span><span class=\"p\">])</span>\n<span class=\"n\">prints</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">'os_details'</span><span class=\"p\">])</span>\n<span class=\"n\">prints</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">'network_distance'</span><span class=\"p\">])</span> <span class=\"c1\"># for version info see the next example</span>\n\n<span class=\"c1\"># for many results</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"s1\">'state'</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"s1\">'ip_address'</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"s1\">'network_distance'</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"s1\">'os_family'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Or</span>\n<span class=\"k\">for</span> <span class=\"n\">result</span> <span class=\"ow\">in</span> <span class=\"n\">results</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'ip_address'</span><span class=\"p\">],</span> <span class=\"s1\">' - '</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'mac_address'</span><span class=\"p\">],</span> <span class=\"s1\">' - '</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'hostname'</span><span class=\"p\">],</span> <span class=\"s1\">' - '</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'os_family'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># For fetch and displaying port results, see the example 0</span>\n</pre>\n</div>\n<div id=\"use-the-source-luke\">\n<h2>Use The Source Luke!</h2>\n<p>View source code online:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td>official:</td>\n<td><a href=\"https://github.com/aalouane/inmap\" rel=\"nofollow\">https://github.com/aalouane/inmap</a></td>\n</tr>\n</tbody>\n</table>\n</div>\n\n          </div>"}, "last_serial": 4998376, "releases": {"1.2.7": [{"comment_text": "", "digests": {"md5": "26f68937b3caf33c46cc4cd09998c33e", "sha256": "87c97dd2ab0163e7ee87c9d73f3129dd4987e1b77e5e56f95d516c13d5dbcf26"}, "downloads": -1, "filename": "inmap-1.2.7.tar.gz", "has_sig": false, "md5_digest": "26f68937b3caf33c46cc4cd09998c33e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11115, "upload_time": "2019-03-28T15:41:34", "upload_time_iso_8601": "2019-03-28T15:41:34.983102Z", "url": "https://files.pythonhosted.org/packages/38/8e/a796dd323358b34c002e390512236b521810b50c3d9806e5e231f938e9a5/inmap-1.2.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "26f68937b3caf33c46cc4cd09998c33e", "sha256": "87c97dd2ab0163e7ee87c9d73f3129dd4987e1b77e5e56f95d516c13d5dbcf26"}, "downloads": -1, "filename": "inmap-1.2.7.tar.gz", "has_sig": false, "md5_digest": "26f68937b3caf33c46cc4cd09998c33e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11115, "upload_time": "2019-03-28T15:41:34", "upload_time_iso_8601": "2019-03-28T15:41:34.983102Z", "url": "https://files.pythonhosted.org/packages/38/8e/a796dd323358b34c002e390512236b521810b50c3d9806e5e231f938e9a5/inmap-1.2.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:54 2020"}