{"info": {"author": "Dougal Matthews", "author_email": "dougal@dougalmatthews.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "RFXCOM\n======\n\n.. image:: http://img.shields.io/travis/d0ugal/python-rfxcom.svg?style=flat\n   :alt: Build Status\n   :target: https://travis-ci.org/d0ugal/python-rfxcom\n\n.. image:: http://img.shields.io/coveralls/d0ugal/python-rfxcom.svg?style=flat\n   :alt: Coverage\n   :target: https://coveralls.io/r/d0ugal/python-rfxcom?branch=master\n\n.. image:: http://img.shields.io/pypi/v/rfxcom.svg?style=flat\n   :alt: PyPI Version\n   :target: https://pypi.python.org/pypi/rfxcom\n\n.. image:: http://img.shields.io/pypi/dm/rfxcom.svg?style=flat\n   :alt: PyPI Downloads\n   :target: https://pypi.python.org/pypi/rfxcom\n\n\nA Python library for working with your `RFXTrx`_ for automation projects.\n\nThis library is designed to work with Python 3.3+ [#]_ and `asyncio`_ (but\nother transports can be implemented). Currently it is primarily used by the\n`home`_ project, a dashboard for managing and visualising your home automation\ndevices.\n\nThis library is relatively new and thus the number of devices are limited to\nthose that @d0ugal owns. This means, that the current list of fully supported\nprotocols are:\n\n1. `Status Packets`_ from the `RFXTrx`_ itself.\n2. `Energy usage sensors`_ (such as the Owl CM119/160 and Owl CM180)\n3. `Temperature and humidity sensors`_ (such as the Oregon THGN132)\n4. `Lighting and power control`_ devices from LightwaveRF\n\nIf you want to use a device and you don't think its supported or you are unsure\nthen please `open an issue`_.\n\n\nInstallation\n------------\n\nIt is recommended that you get the latest version from PyPI with pip::\n\n    pip install rfxcom\n\nHowever, if you want to grab the latest development version you can download\nthe repository directly from github and run ``python setup.py install`` in the\nroot of the repository.\n\n\nDocumentation\n-------------\n\n`View the documentation on Read The Docs`_.\n\n\nQuick Example\n-------------\n\nThe following example shows some basic usage of this library, it sets up the\nasyncio event loop, points the library to the serial device path and attaches\na simple handler function which prints out information about all the packets it\nreceives. For example, see what it will `output for energy usage sensors`_.::\n\n    from asyncio import get_event_loop\n    from rfxcom.transport import AsyncioTransport\n\n    dev_name = '/dev/serial/by-id/usb-RFXCOM_RFXtrx433_A1WYT9NA-if00-port0'\n    loop = get_event_loop()\n\n    def handler(packet):\n        # Print out the packet - the string representation will show us the type.\n        print(packet)\n\n        # Each packet will have a dictionary which contains parsed data.\n        print(packet.data)\n\n        # You can access the raw bytes from the packet too.\n        print(packet.raw)\n\n    try:\n        rfxcom = AsyncioTransport(dev_name, loop, callback=handler)\n        loop.run_forever()\n    finally:\n        loop.close()\n\nYou can also use a coroutine as callback for AsyncioTransport::\n\n    from asyncio import get_event_loop, coroutine\n    from rfxcom.transport import AsyncioTransport\n\n    dev_name = '/dev/serial/by-id/usb-RFXCOM_RFXtrx433_A1WYT9NA-if00-port0'\n    loop = get_event_loop()\n\n    @coroutine\n    def handler(packet):\n        print(packet)\n        yield from some_io(packet)\n\n    try:\n        rfxcom = AsyncioTransport(dev_name, loop, callback=handler)\n        loop.run_forever()\n    finally:\n        loop.close()\n\n\nContributing\n------------\n\nIf you would like to contribute to python-rfxcom, you will need to use `tox`_\nto run the tests. This will test against Python 3.3, Python 3.4, pyflakes for\ncode linting and build the documentation. To do this, you simply need to\ninstall tox and then call tox from the root of the python-rfxcom git\nrepository. ::\n\n    pip install tox\n    tox\n\nDon't worry if you can't test against Python 3.3 and Python 3.4 locally, many\npeople will only have one installed. We use the brilliant `Travis CI`_ to\nverify all pull requests.\n\n.. _asyncio: https://docs.python.org/3/library/asyncio.html\n.. _Energy usage sensors: http://rfxcom.readthedocs.org/en/latest/ref/protocol/elec.html\n.. _home: https://github.com/d0ugal/home\n.. _Lighting and power control: http://rfxcom.readthedocs.org/en/latest/ref/protocol/lighting5.html\n.. _open an issue: https://github.com/d0ugal/python-rfxcom/issues/new\n.. _output for energy usage sensors: http://rfxcom.readthedocs.org/en/latest/ref/protocol/elec.html\n.. _RFXTrx: http://www.rfxcom.com/store/Transceivers/14103\n.. _Status Packets: http://rfxcom.readthedocs.org/en/latest/ref/protocol/status.html\n.. _Temperature and humidity sensors: http://rfxcom.readthedocs.org/en/latest/ref/protocol/temphumidity.html\n.. _tox: https://pypi.python.org/pypi/tox\n.. _Travis CI: https://travis-ci.org/d0ugal/python-rfxcom\n.. _View the documentation on Read The Docs: http://rfxcom.readthedocs.org/en/latest/\n\n.. [#] However, given enough interest previous versions can be supported:\n   https://github.com/d0ugal/python-rfxcom/pull/1", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/d0ugal/rfxcom", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "rfxcom", "package_url": "https://pypi.org/project/rfxcom/", "platform": "any", "project_url": "https://pypi.org/project/rfxcom/", "project_urls": {"Homepage": "https://github.com/d0ugal/rfxcom"}, "release_url": "https://pypi.org/project/rfxcom/0.5.0/", "requires_dist": ["pyserial (>=2.7)"], "requires_python": null, "summary": "RFXCOM RFXtrx Library for Python 3.3+", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/d0ugal/python-rfxcom\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3781d736a43ed3a35e6ce3e6c94ac8cc34755323/687474703a2f2f696d672e736869656c64732e696f2f7472617669732f64307567616c2f707974686f6e2d726678636f6d2e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://coveralls.io/r/d0ugal/python-rfxcom?branch=master\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/282259a9039582103b3325e6ef4c52cfb905558f/687474703a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f64307567616c2f707974686f6e2d726678636f6d2e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://pypi.python.org/pypi/rfxcom\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b0cf9585b8658378a1db76b1d07c199c31508ba6/687474703a2f2f696d672e736869656c64732e696f2f707970692f762f726678636f6d2e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://pypi.python.org/pypi/rfxcom\" rel=\"nofollow\"><img alt=\"PyPI Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/39b99b32ec30b756d65c226c48eb8f98d0a02d81/687474703a2f2f696d672e736869656c64732e696f2f707970692f646d2f726678636f6d2e7376673f7374796c653d666c6174\"></a>\n<p>A Python library for working with your <a href=\"http://www.rfxcom.com/store/Transceivers/14103\" rel=\"nofollow\">RFXTrx</a> for automation projects.</p>\n<p>This library is designed to work with Python 3.3+ <a href=\"#id2\" id=\"id1\" rel=\"nofollow\">[1]</a> and <a href=\"https://docs.python.org/3/library/asyncio.html\" rel=\"nofollow\">asyncio</a> (but\nother transports can be implemented). Currently it is primarily used by the\n<a href=\"https://github.com/d0ugal/home\" rel=\"nofollow\">home</a> project, a dashboard for managing and visualising your home automation\ndevices.</p>\n<p>This library is relatively new and thus the number of devices are limited to\nthose that @d0ugal owns. This means, that the current list of fully supported\nprotocols are:</p>\n<ol>\n<li><a href=\"http://rfxcom.readthedocs.org/en/latest/ref/protocol/status.html\" rel=\"nofollow\">Status Packets</a> from the <a href=\"http://www.rfxcom.com/store/Transceivers/14103\" rel=\"nofollow\">RFXTrx</a> itself.</li>\n<li><a href=\"http://rfxcom.readthedocs.org/en/latest/ref/protocol/elec.html\" rel=\"nofollow\">Energy usage sensors</a> (such as the Owl CM119/160 and Owl CM180)</li>\n<li><a href=\"http://rfxcom.readthedocs.org/en/latest/ref/protocol/temphumidity.html\" rel=\"nofollow\">Temperature and humidity sensors</a> (such as the Oregon THGN132)</li>\n<li><a href=\"http://rfxcom.readthedocs.org/en/latest/ref/protocol/lighting5.html\" rel=\"nofollow\">Lighting and power control</a> devices from LightwaveRF</li>\n</ol>\n<p>If you want to use a device and you don\u2019t think its supported or you are unsure\nthen please <a href=\"https://github.com/d0ugal/python-rfxcom/issues/new\" rel=\"nofollow\">open an issue</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>It is recommended that you get the latest version from PyPI with pip:</p>\n<pre>pip install rfxcom\n</pre>\n<p>However, if you want to grab the latest development version you can download\nthe repository directly from github and run <tt>python setup.py install</tt> in the\nroot of the repository.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p><a href=\"http://rfxcom.readthedocs.org/en/latest/\" rel=\"nofollow\">View the documentation on Read The Docs</a>.</p>\n</div>\n<div id=\"quick-example\">\n<h2>Quick Example</h2>\n<p>The following example shows some basic usage of this library, it sets up the\nasyncio event loop, points the library to the serial device path and attaches\na simple handler function which prints out information about all the packets it\nreceives. For example, see what it will <a href=\"http://rfxcom.readthedocs.org/en/latest/ref/protocol/elec.html\" rel=\"nofollow\">output for energy usage sensors</a>.:</p>\n<pre>from asyncio import get_event_loop\nfrom rfxcom.transport import AsyncioTransport\n\ndev_name = '/dev/serial/by-id/usb-RFXCOM_RFXtrx433_A1WYT9NA-if00-port0'\nloop = get_event_loop()\n\ndef handler(packet):\n    # Print out the packet - the string representation will show us the type.\n    print(packet)\n\n    # Each packet will have a dictionary which contains parsed data.\n    print(packet.data)\n\n    # You can access the raw bytes from the packet too.\n    print(packet.raw)\n\ntry:\n    rfxcom = AsyncioTransport(dev_name, loop, callback=handler)\n    loop.run_forever()\nfinally:\n    loop.close()\n</pre>\n<p>You can also use a coroutine as callback for AsyncioTransport:</p>\n<pre>from asyncio import get_event_loop, coroutine\nfrom rfxcom.transport import AsyncioTransport\n\ndev_name = '/dev/serial/by-id/usb-RFXCOM_RFXtrx433_A1WYT9NA-if00-port0'\nloop = get_event_loop()\n\n@coroutine\ndef handler(packet):\n    print(packet)\n    yield from some_io(packet)\n\ntry:\n    rfxcom = AsyncioTransport(dev_name, loop, callback=handler)\n    loop.run_forever()\nfinally:\n    loop.close()\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>If you would like to contribute to python-rfxcom, you will need to use <a href=\"https://pypi.python.org/pypi/tox\" rel=\"nofollow\">tox</a>\nto run the tests. This will test against Python 3.3, Python 3.4, pyflakes for\ncode linting and build the documentation. To do this, you simply need to\ninstall tox and then call tox from the root of the python-rfxcom git\nrepository.</p>\n<pre>pip install tox\ntox\n</pre>\n<p>Don\u2019t worry if you can\u2019t test against Python 3.3 and Python 3.4 locally, many\npeople will only have one installed. We use the brilliant <a href=\"https://travis-ci.org/d0ugal/python-rfxcom\" rel=\"nofollow\">Travis CI</a> to\nverify all pull requests.</p>\n<table id=\"id2\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id1\" rel=\"nofollow\">[1]</a></td><td>However, given enough interest previous versions can be supported:\n<a href=\"https://github.com/d0ugal/python-rfxcom/pull/1\" rel=\"nofollow\">https://github.com/d0ugal/python-rfxcom/pull/1</a></td></tr>\n</tbody>\n</table>\n</div>\n\n          </div>"}, "last_serial": 1672542, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a22bf70971ce46e33e18951c29ee9b73", "sha256": "dd08c4735dbf5ca3ef4ceb500ab03ac41447dfa8c840bfe1ec6f50f5e2a3b5af"}, "downloads": -1, "filename": "rfxcom-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a22bf70971ce46e33e18951c29ee9b73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6929, "upload_time": "2014-03-24T19:42:46", "upload_time_iso_8601": "2014-03-24T19:42:46.427731Z", "url": "https://files.pythonhosted.org/packages/cd/cc/80a7d4de28cdb446901041c7a5dac158a4b6919f43383054ab9bc35894a6/rfxcom-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "dd8b89ac51e746b909dfcf9920f87e83", "sha256": "e2de9fbe896cf2f96f313b328618146b89dfcf8db90878b3b4153fd0d7d7cddf"}, "downloads": -1, "filename": "rfxcom-0.1.0.tar.gz", "has_sig": false, "md5_digest": "dd8b89ac51e746b909dfcf9920f87e83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10232, "upload_time": "2014-05-09T11:30:56", "upload_time_iso_8601": "2014-05-09T11:30:56.560743Z", "url": "https://files.pythonhosted.org/packages/1d/ad/e4bbeb703b1349daaf1051d32ee2c8fa8873f7e668fa14d68ffc8c651691/rfxcom-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "984c78a93447f810c3160ee55aaa543e", "sha256": "1512075b1b3b734e9ce4341e325e66ffa962ee2ea2d67b91a19fa2cff0e43c94"}, "downloads": -1, "filename": "rfxcom-0.2.0.tar.gz", "has_sig": false, "md5_digest": "984c78a93447f810c3160ee55aaa543e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13358, "upload_time": "2014-05-21T08:42:16", "upload_time_iso_8601": "2014-05-21T08:42:16.997500Z", "url": "https://files.pythonhosted.org/packages/12/03/6226c0b77a0a6aa03df579e63f51209c49befc5968ed1585dc72509a89b9/rfxcom-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "25dae326e2e6516d6a5df783bb96c311", "sha256": "7042af359635a7f0c96d91cb806dcd9ae9eab5ed9ea54067b3ebc85948841fb1"}, "downloads": -1, "filename": "rfxcom-0.2.1.tar.gz", "has_sig": false, "md5_digest": "25dae326e2e6516d6a5df783bb96c311", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13722, "upload_time": "2014-05-21T19:46:49", "upload_time_iso_8601": "2014-05-21T19:46:49.552075Z", "url": "https://files.pythonhosted.org/packages/61/82/59fa5809708e965c52f939e60753e4db6a8ecd00b00c6038b7d34b1c0783/rfxcom-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "ae70ce773f3446eebedab030d2f9778e", "sha256": "dd1739f6e2472bf73533d382a4aa0a6fb4e4ff0943e71bb3bb97aca89c1dd725"}, "downloads": -1, "filename": "rfxcom-0.2.2.tar.gz", "has_sig": false, "md5_digest": "ae70ce773f3446eebedab030d2f9778e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13706, "upload_time": "2014-05-21T20:13:54", "upload_time_iso_8601": "2014-05-21T20:13:54.540162Z", "url": "https://files.pythonhosted.org/packages/79/e5/372d6dd387d356f28426214f3a4668342deb238dee219afc01ab33b0ec74/rfxcom-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "8a42c03a27a02e92340e36a2613e5732", "sha256": "e032bc8e0fedfbc93839ba4880077170aebd202dabf907c17476b3af51eae2e0"}, "downloads": -1, "filename": "rfxcom-0.2.3.tar.gz", "has_sig": false, "md5_digest": "8a42c03a27a02e92340e36a2613e5732", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13734, "upload_time": "2014-05-21T20:23:00", "upload_time_iso_8601": "2014-05-21T20:23:00.823980Z", "url": "https://files.pythonhosted.org/packages/c6/dc/f96d04326700d69e7b52202f568c5d24b541982bca92bcdfae1f280e93bf/rfxcom-0.2.3.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "8403d22f74d93f1ca6fc2415c465f649", "sha256": "3dcfd6d55bdf32aec4240951699bf3dcc5fdae84232bb6fbbbec010c718bf063"}, "downloads": -1, "filename": "rfxcom-0.3.0.tar.gz", "has_sig": false, "md5_digest": "8403d22f74d93f1ca6fc2415c465f649", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18138, "upload_time": "2014-06-30T20:19:37", "upload_time_iso_8601": "2014-06-30T20:19:37.698386Z", "url": "https://files.pythonhosted.org/packages/9e/37/6acc44d91bff8bbd3a36bb8e6307718bdd8bfe21763adab2061730dcfbbe/rfxcom-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "f28e2f0f78984e969b7cd8a9b1cca818", "sha256": "83181d86abeefeca97f807e3578a5ce1f587e03d296c7b66b984ff7ee2e04d09"}, "downloads": -1, "filename": "rfxcom-0.4.0-py2-none-any.whl", "has_sig": false, "md5_digest": "f28e2f0f78984e969b7cd8a9b1cca818", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 17786, "upload_time": "2015-08-06T10:46:10", "upload_time_iso_8601": "2015-08-06T10:46:10.147047Z", "url": "https://files.pythonhosted.org/packages/72/c2/5d706fdd124ce4b4cafff2ce2c88037193eb454b59b4360b017f6e27a260/rfxcom-0.4.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d293082d321539cc8566a578a745a490", "sha256": "78a729e0a0b0453ea653937ada5052c7a00228fd101bdab8828bcfc52d6cf1ae"}, "downloads": -1, "filename": "rfxcom-0.4.0.tar.gz", "has_sig": false, "md5_digest": "d293082d321539cc8566a578a745a490", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14187, "upload_time": "2015-08-06T10:46:13", "upload_time_iso_8601": "2015-08-06T10:46:13.600048Z", "url": "https://files.pythonhosted.org/packages/eb/66/9eaf01685814f05c0fd9d40d61216b95094a2f387fe3cebc946b75ab54fd/rfxcom-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "6c3539595d173250eda016d4216465f2", "sha256": "2635fe269a77e5e6c81b7e50f697fd50cdbe4db9e241269a239dce8220703a2c"}, "downloads": -1, "filename": "rfxcom-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6c3539595d173250eda016d4216465f2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18041, "upload_time": "2015-08-11T07:03:09", "upload_time_iso_8601": "2015-08-11T07:03:09.732138Z", "url": "https://files.pythonhosted.org/packages/92/55/6762d10b866a32b2e679b9ec77d24cb28bd32965995fb6240897340c2617/rfxcom-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5fcb370309041d236dddf40fd2a9bec", "sha256": "5f5081053fe9b86b459983afb927c5aac0f4fca0650e837dae0229685ee9d480"}, "downloads": -1, "filename": "rfxcom-0.5.0.tar.gz", "has_sig": false, "md5_digest": "b5fcb370309041d236dddf40fd2a9bec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14469, "upload_time": "2015-08-11T07:03:13", "upload_time_iso_8601": "2015-08-11T07:03:13.696147Z", "url": "https://files.pythonhosted.org/packages/e1/41/88076dc4e04620442e005af11c108ad5556704f843f00d25aaeab5a97c15/rfxcom-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6c3539595d173250eda016d4216465f2", "sha256": "2635fe269a77e5e6c81b7e50f697fd50cdbe4db9e241269a239dce8220703a2c"}, "downloads": -1, "filename": "rfxcom-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6c3539595d173250eda016d4216465f2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18041, "upload_time": "2015-08-11T07:03:09", "upload_time_iso_8601": "2015-08-11T07:03:09.732138Z", "url": "https://files.pythonhosted.org/packages/92/55/6762d10b866a32b2e679b9ec77d24cb28bd32965995fb6240897340c2617/rfxcom-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5fcb370309041d236dddf40fd2a9bec", "sha256": "5f5081053fe9b86b459983afb927c5aac0f4fca0650e837dae0229685ee9d480"}, "downloads": -1, "filename": "rfxcom-0.5.0.tar.gz", "has_sig": false, "md5_digest": "b5fcb370309041d236dddf40fd2a9bec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14469, "upload_time": "2015-08-11T07:03:13", "upload_time_iso_8601": "2015-08-11T07:03:13.696147Z", "url": "https://files.pythonhosted.org/packages/e1/41/88076dc4e04620442e005af11c108ad5556704f843f00d25aaeab5a97c15/rfxcom-0.5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:04 2020"}