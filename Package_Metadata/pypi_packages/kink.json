{"info": {"author": "Dawid Kraczkowski", "author_email": "dawid.kraczkowski@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Kink [![Build Status](https://travis-ci.org/kodemore/kink.svg?branch=master)](https://travis-ci.org/kodemore/kink) [![codecov](https://codecov.io/gh/kodemore/kink/branch/master/graph/badge.svg)](https://codecov.io/gh/kodemore/kink)\nDependency injection made for python\n\n## Features\n\n- Easy to use interface\n- Extensible with custom dependency resolvers\n- Automatic dependency injection\n- Lightweight\n\n\n## Installation\n\n```\npip install kink\n```\n\n# Usage\n\n## Adding service to dependency injection container\n\nDependency container is a dict-like object, adding new service to dependency container is as \nsimple as the following example:\n\n```python\nfrom kink import di\nfrom os import getenv\n\ndi[\"db_name\"] = getenv(\"DB_NAME\")\ndi[\"db_password\"] = getenv(\"DB_PASSWORD\")\n```\n\n## Adding service factory to dependency injection container\n\nKink also supports on-demand service creation. In order to define such a service, lambda function\nshould be used: \n\n```python\nfrom kink import di\nfrom sqlite3 import connect\n\ndi[\"db_connection\"] = lambda di: connect(di[\"db_name\"])\n```\n\nIn this scenario connection to database will not be established until service is requested.\n\n## Requesting services fromm dependency injection container\n\n```python\nfrom kink import di\nfrom sqlite3 import connect\n\n# Setting services\ndi[\"db_name\"] = \"test_db.db\"\ndi[\"db_connection\"] = lambda di: connect(di[\"db_name\"])\n\n\n# Getting service\n\nconnection = di[\"db_connection\"] # will return instance of sqlite3.Connection\nassert connection == di[\"db_connection\"] # True\n```\n\n## Autowiring dependencies\n\n```python\nfrom kink import di, inject\nfrom sqlite3 import connect, Connection\n\n\ndi[\"db_name\"] = \"test_db.db\"\ndi[\"db_connection\"] = lambda di: connect(di[\"db_name\"])\n\n# Inject connection from di, connection is established once function is called.\n@inject\ndef get_database(db_connection: Connection):\n    ...\n\n\nconnection = get_database()\nconnection_with_passed_connection = get_database(connect(\"temp.db\")) # will use passed connection\n```\n\n### Constructor injection\n```python\nfrom kink import inject, di\nimport MySQLdb\n\n# Set dependencies\ndi[\"db_host\"] = \"localhost\"\ndi[\"db_name\"] = \"test\"\ndi[\"db_user\"] = \"user\"\ndi[\"db_password\"] = \"password\"\ndi[\"db_connection\"] = lambda di: MySQLdb.connect(host=di[\"db_host\"], user=di[\"db_user\"], passwd=di[\"db_password\"], db=di[\"db_name\"])\n\n@inject\nclass AbstractRepository:\n    def __init__(self, db_connection):\n        self.connection = db_connection\n\n\nclass UserRepository(AbstractRepository):\n    ...\n\n\nrepository = UserRepository()\nrepository.connection # mysql db connection is resolved and available to use.\n```\n\nWhen class is annotated by `inject` annotation it will be automatically added to the container for future use (eg autowiring).\n\n\n### Services aliasing\n\nWhen you registering service with `@inject` decorator you can attach your own alias name, please consider the following example:\n\n```python\nfrom kink import inject\nfrom typing import Protocol\n\nclass IUserRepository(Protocol):\n    ...\n\n@inject(alias=IUserRepository)\nclass UserRepository:\n    ...\n\n\nassert di[IUserRepository] == di[UserRepository] # returns true\n```\n\nFor more examples check [tests](/tests) directory\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kodemore/kink", "keywords": "kink,dependency injection", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "kink", "package_url": "https://pypi.org/project/kink/", "platform": "", "project_url": "https://pypi.org/project/kink/", "project_urls": {"Documentation": "https://github.com/kodemore/kink", "Homepage": "https://github.com/kodemore/kink", "Repository": "https://github.com/kodemore/kink"}, "release_url": "https://pypi.org/project/kink/0.3.0/", "requires_dist": ["typing_extensions (>=3.7.4,<4.0.0)"], "requires_python": ">=3.7,<4.0", "summary": "Dependency injection for python.", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Kink <a href=\"https://travis-ci.org/kodemore/kink\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/223d474fa030ea4a7678ff9fc5d11df5048acb59/68747470733a2f2f7472617669732d63692e6f72672f6b6f64656d6f72652f6b696e6b2e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://codecov.io/gh/kodemore/kink\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/da0aad1899ce5c5e73edb80cec803c773317bf23/68747470733a2f2f636f6465636f762e696f2f67682f6b6f64656d6f72652f6b696e6b2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></h1>\n<p>Dependency injection made for python</p>\n<h2>Features</h2>\n<ul>\n<li>Easy to use interface</li>\n<li>Extensible with custom dependency resolvers</li>\n<li>Automatic dependency injection</li>\n<li>Lightweight</li>\n</ul>\n<h2>Installation</h2>\n<pre><code>pip install kink\n</code></pre>\n<h1>Usage</h1>\n<h2>Adding service to dependency injection container</h2>\n<p>Dependency container is a dict-like object, adding new service to dependency container is as\nsimple as the following example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">kink</span> <span class=\"kn\">import</span> <span class=\"n\">di</span>\n<span class=\"kn\">from</span> <span class=\"nn\">os</span> <span class=\"kn\">import</span> <span class=\"n\">getenv</span>\n\n<span class=\"n\">di</span><span class=\"p\">[</span><span class=\"s2\">\"db_name\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">\"DB_NAME\"</span><span class=\"p\">)</span>\n<span class=\"n\">di</span><span class=\"p\">[</span><span class=\"s2\">\"db_password\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">\"DB_PASSWORD\"</span><span class=\"p\">)</span>\n</pre>\n<h2>Adding service factory to dependency injection container</h2>\n<p>Kink also supports on-demand service creation. In order to define such a service, lambda function\nshould be used:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">kink</span> <span class=\"kn\">import</span> <span class=\"n\">di</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlite3</span> <span class=\"kn\">import</span> <span class=\"n\">connect</span>\n\n<span class=\"n\">di</span><span class=\"p\">[</span><span class=\"s2\">\"db_connection\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">di</span><span class=\"p\">:</span> <span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">di</span><span class=\"p\">[</span><span class=\"s2\">\"db_name\"</span><span class=\"p\">])</span>\n</pre>\n<p>In this scenario connection to database will not be established until service is requested.</p>\n<h2>Requesting services fromm dependency injection container</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">kink</span> <span class=\"kn\">import</span> <span class=\"n\">di</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlite3</span> <span class=\"kn\">import</span> <span class=\"n\">connect</span>\n\n<span class=\"c1\"># Setting services</span>\n<span class=\"n\">di</span><span class=\"p\">[</span><span class=\"s2\">\"db_name\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"test_db.db\"</span>\n<span class=\"n\">di</span><span class=\"p\">[</span><span class=\"s2\">\"db_connection\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">di</span><span class=\"p\">:</span> <span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">di</span><span class=\"p\">[</span><span class=\"s2\">\"db_name\"</span><span class=\"p\">])</span>\n\n\n<span class=\"c1\"># Getting service</span>\n\n<span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"n\">di</span><span class=\"p\">[</span><span class=\"s2\">\"db_connection\"</span><span class=\"p\">]</span> <span class=\"c1\"># will return instance of sqlite3.Connection</span>\n<span class=\"k\">assert</span> <span class=\"n\">connection</span> <span class=\"o\">==</span> <span class=\"n\">di</span><span class=\"p\">[</span><span class=\"s2\">\"db_connection\"</span><span class=\"p\">]</span> <span class=\"c1\"># True</span>\n</pre>\n<h2>Autowiring dependencies</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">kink</span> <span class=\"kn\">import</span> <span class=\"n\">di</span><span class=\"p\">,</span> <span class=\"n\">inject</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlite3</span> <span class=\"kn\">import</span> <span class=\"n\">connect</span><span class=\"p\">,</span> <span class=\"n\">Connection</span>\n\n\n<span class=\"n\">di</span><span class=\"p\">[</span><span class=\"s2\">\"db_name\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"test_db.db\"</span>\n<span class=\"n\">di</span><span class=\"p\">[</span><span class=\"s2\">\"db_connection\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">di</span><span class=\"p\">:</span> <span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">di</span><span class=\"p\">[</span><span class=\"s2\">\"db_name\"</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Inject connection from di, connection is established once function is called.</span>\n<span class=\"nd\">@inject</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_database</span><span class=\"p\">(</span><span class=\"n\">db_connection</span><span class=\"p\">:</span> <span class=\"n\">Connection</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n\n\n<span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"n\">get_database</span><span class=\"p\">()</span>\n<span class=\"n\">connection_with_passed_connection</span> <span class=\"o\">=</span> <span class=\"n\">get_database</span><span class=\"p\">(</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s2\">\"temp.db\"</span><span class=\"p\">))</span> <span class=\"c1\"># will use passed connection</span>\n</pre>\n<h3>Constructor injection</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">kink</span> <span class=\"kn\">import</span> <span class=\"n\">inject</span><span class=\"p\">,</span> <span class=\"n\">di</span>\n<span class=\"kn\">import</span> <span class=\"nn\">MySQLdb</span>\n\n<span class=\"c1\"># Set dependencies</span>\n<span class=\"n\">di</span><span class=\"p\">[</span><span class=\"s2\">\"db_host\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"localhost\"</span>\n<span class=\"n\">di</span><span class=\"p\">[</span><span class=\"s2\">\"db_name\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"test\"</span>\n<span class=\"n\">di</span><span class=\"p\">[</span><span class=\"s2\">\"db_user\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"user\"</span>\n<span class=\"n\">di</span><span class=\"p\">[</span><span class=\"s2\">\"db_password\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"password\"</span>\n<span class=\"n\">di</span><span class=\"p\">[</span><span class=\"s2\">\"db_connection\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">di</span><span class=\"p\">:</span> <span class=\"n\">MySQLdb</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"n\">di</span><span class=\"p\">[</span><span class=\"s2\">\"db_host\"</span><span class=\"p\">],</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"n\">di</span><span class=\"p\">[</span><span class=\"s2\">\"db_user\"</span><span class=\"p\">],</span> <span class=\"n\">passwd</span><span class=\"o\">=</span><span class=\"n\">di</span><span class=\"p\">[</span><span class=\"s2\">\"db_password\"</span><span class=\"p\">],</span> <span class=\"n\">db</span><span class=\"o\">=</span><span class=\"n\">di</span><span class=\"p\">[</span><span class=\"s2\">\"db_name\"</span><span class=\"p\">])</span>\n\n<span class=\"nd\">@inject</span>\n<span class=\"k\">class</span> <span class=\"nc\">AbstractRepository</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">db_connection</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"n\">db_connection</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">UserRepository</span><span class=\"p\">(</span><span class=\"n\">AbstractRepository</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n\n\n<span class=\"n\">repository</span> <span class=\"o\">=</span> <span class=\"n\">UserRepository</span><span class=\"p\">()</span>\n<span class=\"n\">repository</span><span class=\"o\">.</span><span class=\"n\">connection</span> <span class=\"c1\"># mysql db connection is resolved and available to use.</span>\n</pre>\n<p>When class is annotated by <code>inject</code> annotation it will be automatically added to the container for future use (eg autowiring).</p>\n<h3>Services aliasing</h3>\n<p>When you registering service with <code>@inject</code> decorator you can attach your own alias name, please consider the following example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">kink</span> <span class=\"kn\">import</span> <span class=\"n\">inject</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Protocol</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">IUserRepository</span><span class=\"p\">(</span><span class=\"n\">Protocol</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n\n<span class=\"nd\">@inject</span><span class=\"p\">(</span><span class=\"n\">alias</span><span class=\"o\">=</span><span class=\"n\">IUserRepository</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">UserRepository</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n\n\n<span class=\"k\">assert</span> <span class=\"n\">di</span><span class=\"p\">[</span><span class=\"n\">IUserRepository</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">di</span><span class=\"p\">[</span><span class=\"n\">UserRepository</span><span class=\"p\">]</span> <span class=\"c1\"># returns true</span>\n</pre>\n<p>For more examples check <a href=\"/tests\" rel=\"nofollow\">tests</a> directory</p>\n\n          </div>"}, "last_serial": 6998798, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "66cad94f2e3b48453d985fa346b65b29", "sha256": "e0acbd21ba431b09a188a0c1acdebefe7f0c6f2c51d7615b9160c238bad6f3ba"}, "downloads": -1, "filename": "kink-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "66cad94f2e3b48453d985fa346b65b29", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 6520, "upload_time": "2019-12-26T01:13:55", "upload_time_iso_8601": "2019-12-26T01:13:55.827343Z", "url": "https://files.pythonhosted.org/packages/7c/7c/1c1cd52204db4c18d7c083cba1a2044cdc789758c69aa56fd5ed0b1a1424/kink-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8446aa942c08cba066023c771201be12", "sha256": "52f78e67858066c4a9a39d42e45a763e0bab7271ebb2fa87821e1d7015cde40b"}, "downloads": -1, "filename": "kink-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8446aa942c08cba066023c771201be12", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 5171, "upload_time": "2019-12-26T01:13:58", "upload_time_iso_8601": "2019-12-26T01:13:58.691702Z", "url": "https://files.pythonhosted.org/packages/f8/09/e4efb77678747fa499a1e04eb27204a6adf6e1b0a817c017ec35d89a41cc/kink-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c928959b33353be5247f6220a5da184e", "sha256": "a59893d25175a8bb6144ce76b62eafb97c47e8406a63554544f3c1170b3a647d"}, "downloads": -1, "filename": "kink-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c928959b33353be5247f6220a5da184e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 6513, "upload_time": "2019-12-26T01:16:58", "upload_time_iso_8601": "2019-12-26T01:16:58.449284Z", "url": "https://files.pythonhosted.org/packages/85/d1/9abe3fb383bda7d07a15e83d53f284f72ef1a751611cd8e3ddac5de1e2fb/kink-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de9e812720a70196109d06db1a56aff2", "sha256": "9627498c2fd35eb888e1ad0a92f2cb6bd653ae39c7780039ef0aa96b6637b249"}, "downloads": -1, "filename": "kink-0.1.1.tar.gz", "has_sig": false, "md5_digest": "de9e812720a70196109d06db1a56aff2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 5164, "upload_time": "2019-12-26T01:16:59", "upload_time_iso_8601": "2019-12-26T01:16:59.709237Z", "url": "https://files.pythonhosted.org/packages/ae/db/c4de0efeaa5fa78f2e95c7782bdfd8ba1e0f7d620f3818ee4754a615d9ff/kink-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "7d8ae038def7fb5a0cf05a61e8f45f38", "sha256": "cdbf0739fbc2762d5dd14bdd614d925ebe847250a0d537d489d9d3e07d0a3d57"}, "downloads": -1, "filename": "kink-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "7d8ae038def7fb5a0cf05a61e8f45f38", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 6622, "upload_time": "2019-12-26T08:58:32", "upload_time_iso_8601": "2019-12-26T08:58:32.596395Z", "url": "https://files.pythonhosted.org/packages/2b/9d/d0db5352267ad412042fc139e7044b9d9f2ee4e99d32ee6157aaa9c6fbb5/kink-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5393d7cd841e9b1f70693225d9017006", "sha256": "154cfcfe40273da2243dac3e7a52b9e8ac3d1622c9e3042a3f416bbd42bc4842"}, "downloads": -1, "filename": "kink-0.1.2.tar.gz", "has_sig": false, "md5_digest": "5393d7cd841e9b1f70693225d9017006", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 5251, "upload_time": "2019-12-26T08:58:33", "upload_time_iso_8601": "2019-12-26T08:58:33.811179Z", "url": "https://files.pythonhosted.org/packages/e1/be/f0bf1a122b17f00604b1f747c45210412f90a205e8269ea6ea419a4fe752/kink-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "5cc94f7eaedb01c7e8d96e17840686cd", "sha256": "a30daa614087f9b052b85c6d76f4d18bc0e0da17d3e83292981c4f0f46dc6388"}, "downloads": -1, "filename": "kink-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5cc94f7eaedb01c7e8d96e17840686cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 6684, "upload_time": "2019-12-26T17:14:57", "upload_time_iso_8601": "2019-12-26T17:14:57.135036Z", "url": "https://files.pythonhosted.org/packages/fc/39/c47c343dc470af7a556463dee0fed8879915e6d4ea5946c01dc55993f5aa/kink-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9009048823eca1a9d526edb573cb1a66", "sha256": "9ce0cabeb31a341576051ccbb1ee710e5b3f741519d0fbe86d867ece10c9c54a"}, "downloads": -1, "filename": "kink-0.1.3.tar.gz", "has_sig": false, "md5_digest": "9009048823eca1a9d526edb573cb1a66", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 5303, "upload_time": "2019-12-26T17:14:58", "upload_time_iso_8601": "2019-12-26T17:14:58.908361Z", "url": "https://files.pythonhosted.org/packages/e7/4a/33c8d63aef0134a06954fe01beb574d0cc543729217a12f1fff1e5e9531f/kink-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "5a413989ad4946a35dce41ba5b6b74ce", "sha256": "12e54bf9b6991fb4e39707394b697e787acac9da02ff51d291cb3c448f9b293d"}, "downloads": -1, "filename": "kink-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5a413989ad4946a35dce41ba5b6b74ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 5315, "upload_time": "2019-12-31T14:33:32", "upload_time_iso_8601": "2019-12-31T14:33:32.394183Z", "url": "https://files.pythonhosted.org/packages/86/25/3988e4e865bac59e5ff29b9924cb08ffeb8ed1ead259b499e9c25cbb50a1/kink-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b60f222d9c6f313caf7b19cd77bbe35d", "sha256": "d75866d54e8fec1256b2ebd02168a708d4ed2093aa59d52ee7cdc76c82c9cc01"}, "downloads": -1, "filename": "kink-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b60f222d9c6f313caf7b19cd77bbe35d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 4621, "upload_time": "2019-12-31T14:33:34", "upload_time_iso_8601": "2019-12-31T14:33:34.263420Z", "url": "https://files.pythonhosted.org/packages/f2/f4/4e43cd8a254eb38ef76e04e41b74d18b95a83c7e4d1336955d31be259e1f/kink-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "61d9871c33a8fdeb0a556b5c58f32d9d", "sha256": "64ec514e39f141dc4af6a45f86994caa5d9cfb0aefb9cf9cca2af3fd0348b84e"}, "downloads": -1, "filename": "kink-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "61d9871c33a8fdeb0a556b5c58f32d9d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 5358, "upload_time": "2020-04-02T19:40:45", "upload_time_iso_8601": "2020-04-02T19:40:45.966363Z", "url": "https://files.pythonhosted.org/packages/5f/72/80a259afc503e08522d658865c21956f3d8b972e482c7a5c10b8718e00d8/kink-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "350e653475cb9e1c591381e6dcdbcbce", "sha256": "3856d1ba26f94123639602f8e201d7567cb6f2ab1e03e5c5a1bb28d3eb7b5633"}, "downloads": -1, "filename": "kink-0.2.1.tar.gz", "has_sig": false, "md5_digest": "350e653475cb9e1c591381e6dcdbcbce", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 4621, "upload_time": "2020-04-02T19:40:47", "upload_time_iso_8601": "2020-04-02T19:40:47.504706Z", "url": "https://files.pythonhosted.org/packages/86/84/99e2bc451bb1b101ac98bed809c6f5d3e6f9ab115a001c30157ebc709a3c/kink-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "c07fe484b3a4b3fd6b2e0669a8c87fe4", "sha256": "8d925115c5ad670288f04eda55b9f82335d19d994077dde3ac27810a956c5038"}, "downloads": -1, "filename": "kink-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c07fe484b3a4b3fd6b2e0669a8c87fe4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 6014, "upload_time": "2020-04-11T09:09:35", "upload_time_iso_8601": "2020-04-11T09:09:35.800875Z", "url": "https://files.pythonhosted.org/packages/b8/9c/0c05b11bb73b0620f5d02dacb967290e97fa5f8358099d3348543130afcf/kink-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5ea6109f877726f3a9198982c7deae5", "sha256": "a1af337e54831a0c30be653fdd9cefa8fdcc1267fcaa47f017a1d7d8dcbfaccd"}, "downloads": -1, "filename": "kink-0.3.0.tar.gz", "has_sig": false, "md5_digest": "c5ea6109f877726f3a9198982c7deae5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 5288, "upload_time": "2020-04-11T09:09:37", "upload_time_iso_8601": "2020-04-11T09:09:37.193272Z", "url": "https://files.pythonhosted.org/packages/b8/d4/b2df64cc3f3dc29da25b8902ee07da163ac7392bc3a59337a4817c2aa871/kink-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c07fe484b3a4b3fd6b2e0669a8c87fe4", "sha256": "8d925115c5ad670288f04eda55b9f82335d19d994077dde3ac27810a956c5038"}, "downloads": -1, "filename": "kink-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c07fe484b3a4b3fd6b2e0669a8c87fe4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 6014, "upload_time": "2020-04-11T09:09:35", "upload_time_iso_8601": "2020-04-11T09:09:35.800875Z", "url": "https://files.pythonhosted.org/packages/b8/9c/0c05b11bb73b0620f5d02dacb967290e97fa5f8358099d3348543130afcf/kink-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5ea6109f877726f3a9198982c7deae5", "sha256": "a1af337e54831a0c30be653fdd9cefa8fdcc1267fcaa47f017a1d7d8dcbfaccd"}, "downloads": -1, "filename": "kink-0.3.0.tar.gz", "has_sig": false, "md5_digest": "c5ea6109f877726f3a9198982c7deae5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 5288, "upload_time": "2020-04-11T09:09:37", "upload_time_iso_8601": "2020-04-11T09:09:37.193272Z", "url": "https://files.pythonhosted.org/packages/b8/d4/b2df64cc3f3dc29da25b8902ee07da163ac7392bc3a59337a4817c2aa871/kink-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:42 2020"}