{"info": {"author": "Daniel Mizyrycki", "author_email": "mzdaniel@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Testing"], "description": "###########################\ndjango-selenium-test-runner\n###########################\n\n`django-selenium-test-runner`_ incorporates functional testing into Django's\nmanage.py test subcommand using `Selenium web testing tools`_.\n\n\nBackground\n==========\n\nThis package was made to facilitate and simplify functional testing in Django\nusing Selenium tools.\n\nSelenium tests are code that emulate a user/web browser interaction allowing\nautomatic web server testing. These tests can be created using `selenium-ide`_\nand exported as python files for this test runner to use them. Selenium-ide\nallows to record in real time a user interaction with a web browser, in a\nsimilar way as a macro recorder in word processing applications.\n\n`Fixtures`_ are fixed data fed into the database at the beginning of each\ntest run. The idea is that each test run against a consistent predefined state.\nFixtures can be created using manage.py dumpdata [options] [appname ...]\n\n\nInstallation\n============\n\nIf you have `setuptools`_ installed, you can simply run the following command::\n\n    sudo easy_install django-selenium-test-runner\n\nIf you downloaded the package, you can just unpack it with::\n\n    tar zxvf django-selenium-test-runner-0.1.0.tar.gz\n\nand copy \"dstest\" directory tree to Python's site-packages directory, which is\nusually located at:\n\n    /usr/lib/python2.4/site-packages (Unix, Python 2.4)\n    /usr/lib/python2.5/site-packages (Unix, Python 2.5)\n    /usr/lib/python2.6/dist-packages (Unix, Python 2.6)\n\ndjango-selenium-test-runner is enabled in the project's settings.py with::\n\n    TEST_RUNNER = 'dstest.test_runner.run_tests'\n\n\nUsage\n=====\n\nBoth, django unittest and selenium tests will be run with the standard command::\n\n  python manage.py test [options] [appname ...]\n\nThe exported selenium tests will be searched in django_app_dir/tests/selenium/\ndirectories where django_app_dir is an application defined in INSTALLED_APPS.\nThis default can be changed with the setting SELENIUM_TESTS_PATH. Test names\nstart with \"test_\". As these tests will be imported, please be sure to create\ndjango_app_dir/tests/__init__.py and django_app_dir/tests/selenium/__init__.py\nfiles as any python package.\n\nFixture data is loaded by default from django_app_dir/fixtures/tests/data.json\nat the beginning of each selenium test. This default can be change using the\nFIXTURES setting.\n\n\nSettings\n========\n\nThere is only one required setting into your project's settings.py, assuming\ndjango-selenium-test-runner is correctly installed:\n\nTEST_RUNNER = 'dstest.test_runner.run_tests'\n\noptional settings are:\n\n* SELENIUM_TESTS_PATH - Changes default directories to look for Selenium tests\n    within the application directories. (Default: 'tests/selenium')\n\n* FIXTURES - List of fixture files to load within the django_app_dir/fixtures\n    directories. (Default: ['tests/data.json'])\n\n* SELENIUM_PATH - Directory path for Selenium RC jar its python driver\n   (i.e.: selenium-server.jar and selenium.py)\n   (Default: path where django-selenium-test-runner/dstest is installed)\n\n\nTesting the package\n===================\n\ndjango-selenium-test-runner comes with its own test suite based on the Django\n`tutorial`_. It is designed to serve as example in a Django admin application,\nand showcase django-selenium-test-runner capabilities. To run it, cd into the\ntests directory of the package and execute::\n\n    python runtests\n\n\nDependencies\n============\n\nMost dependencies are integrated in the django-selenium-test-runner package.\nFor now, either Sqlite 3 or Postgres is required as more testing is needed to\nmake it database agnostic.\n\nIncluded in django-selenium-test-runner package:\n\n* `Selenium RC server and python driver`_. Provide selenium testing engine.\n    Tested with selenium-server.jar and selenium.py v1.0.1\n\n* `CherryPy WSGI multi-thread web server`_. Provide a reliable web server.\n    Tested with wsgiserver.py v3.1.2\n\n* `Django mediahandler.py`_, by Artem Egorkine. Provide static media handler.\n\nNot included in the package:\n\n* `Python 2.x`_ where x >= 4. Tested with Python v2.6\n\n* `Django 1.x`_. Tested with Django v1.1\n\n* `Java VM command line runner`_. Provide selenium-server.jar dependency.\n    Tested with java openjdk-6-jre.\n\n* `Sqlite 3`. Provided by Python v2.5 or higher.\n\n* `Postgres`_ as a database engine. Provide database replication for fixtures.\n    Tested with Postgres v8.2\n\n* `Python-PostgreSQL database driver`_. Provide access to postgres database.\n    Tested with psycopg2 v2.0.5\n\n\n\n.. _django-selenium-test-runner: http://pypi.python.org/pypi/django-selenium-test-runner\n.. _Selenium web testing tools: http://seleniumhq.org/\n.. _selenium-ide: http://seleniumhq.org/movies/intro.mov\n.. _Fixtures: http://docs.djangoproject.com/en/dev/howto/initial-data/\n.. _setuptools: http://pypi.python.org/pypi/setuptools\n.. _tutorial: http://docs.djangoproject.com/en/dev/intro/tutorial01/\n.. _Selenium RC server and python driver: http://release.seleniumhq.org/selenium-remote-control/1.0.1/selenium-remote-control-1.0.1-dist.zip\n.. _CherryPy WSGI multi-thread web server: http://www.cherrypy.org/wiki/CherryPyInstall\n.. _Django mediahandler.py: http://www.arteme.fi/blog/2009/02/26/django-cherrypy-dev-server-and-static-files\n.. _Python 2.x: http://www.python.org/download/\n.. _Django 1.x: http://docs.djangoproject.com/en/dev/topics/install/\n.. _Java VM command line runner: http://openjdk.java.net/install/\n.. _Postgres: http://www.postgresql.org/download/\n.. _Python-PostgreSQL database driver: http://pypi.python.org/pypi/psycopg2/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/django-selenium-test-runner", "keywords": "django selenium testing", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-selenium-test-runner", "package_url": "https://pypi.org/project/django-selenium-test-runner/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-selenium-test-runner/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/django-selenium-test-runner"}, "release_url": "https://pypi.org/project/django-selenium-test-runner/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Django Selenium test runner.\n\nIncorporate functional testing into Django's manage.py test subcommand\nusing Selenium web testing tools.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            ###########################<br>django-selenium-test-runner<br>###########################<br><br>`django-selenium-test-runner`_ incorporates functional testing into Django's<br>manage.py test subcommand using `Selenium web testing tools`_.<br><br><br>Background<br>==========<br><br>This package was made to facilitate and simplify functional testing in Django<br>using Selenium tools.<br><br>Selenium tests are code that emulate a user/web browser interaction allowing<br>automatic web server testing. These tests can be created using `selenium-ide`_<br>and exported as python files for this test runner to use them. Selenium-ide<br>allows to record in real time a user interaction with a web browser, in a<br>similar way as a macro recorder in word processing applications.<br><br>`Fixtures`_ are fixed data fed into the database at the beginning of each<br>test run. The idea is that each test run against a consistent predefined state.<br>Fixtures can be created using manage.py dumpdata [options] [appname ...]<br><br><br>Installation<br>============<br><br>If you have `setuptools`_ installed, you can simply run the following command::<br><br>    sudo easy_install django-selenium-test-runner<br><br>If you downloaded the package, you can just unpack it with::<br><br>    tar zxvf django-selenium-test-runner-0.1.0.tar.gz<br><br>and copy \"dstest\" directory tree to Python's site-packages directory, which is<br>usually located at:<br><br>    /usr/lib/python2.4/site-packages (Unix, Python 2.4)<br>    /usr/lib/python2.5/site-packages (Unix, Python 2.5)<br>    /usr/lib/python2.6/dist-packages (Unix, Python 2.6)<br><br>django-selenium-test-runner is enabled in the project's settings.py with::<br><br>    TEST_RUNNER = 'dstest.test_runner.run_tests'<br><br><br>Usage<br>=====<br><br>Both, django unittest and selenium tests will be run with the standard command::<br><br>  python manage.py test [options] [appname ...]<br><br>The exported selenium tests will be searched in django_app_dir/tests/selenium/<br>directories where django_app_dir is an application defined in INSTALLED_APPS.<br>This default can be changed with the setting SELENIUM_TESTS_PATH. Test names<br>start with \"test_\". As these tests will be imported, please be sure to create<br>django_app_dir/tests/__init__.py and django_app_dir/tests/selenium/__init__.py<br>files as any python package.<br><br>Fixture data is loaded by default from django_app_dir/fixtures/tests/data.json<br>at the beginning of each selenium test. This default can be change using the<br>FIXTURES setting.<br><br><br>Settings<br>========<br><br>There is only one required setting into your project's settings.py, assuming<br>django-selenium-test-runner is correctly installed:<br><br>TEST_RUNNER = 'dstest.test_runner.run_tests'<br><br>optional settings are:<br><br>* SELENIUM_TESTS_PATH - Changes default directories to look for Selenium tests<br>    within the application directories. (Default: 'tests/selenium')<br><br>* FIXTURES - List of fixture files to load within the django_app_dir/fixtures<br>    directories. (Default: ['tests/data.json'])<br><br>* SELENIUM_PATH - Directory path for Selenium RC jar its python driver<br>   (i.e.: selenium-server.jar and selenium.py)<br>   (Default: path where django-selenium-test-runner/dstest is installed)<br><br><br>Testing the package<br>===================<br><br>django-selenium-test-runner comes with its own test suite based on the Django<br>`tutorial`_. It is designed to serve as example in a Django admin application,<br>and showcase django-selenium-test-runner capabilities. To run it, cd into the<br>tests directory of the package and execute::<br><br>    python runtests<br><br><br>Dependencies<br>============<br><br>Most dependencies are integrated in the django-selenium-test-runner package.<br>For now, either Sqlite 3 or Postgres is required as more testing is needed to<br>make it database agnostic.<br><br>Included in django-selenium-test-runner package:<br><br>* `Selenium RC server and python driver`_. Provide selenium testing engine.<br>    Tested with selenium-server.jar and selenium.py v1.0.1<br><br>* `CherryPy WSGI multi-thread web server`_. Provide a reliable web server.<br>    Tested with wsgiserver.py v3.1.2<br><br>* `Django mediahandler.py`_, by Artem Egorkine. Provide static media handler.<br><br>Not included in the package:<br><br>* `Python 2.x`_ where x &gt;= 4. Tested with Python v2.6<br><br>* `Django 1.x`_. Tested with Django v1.1<br><br>* `Java VM command line runner`_. Provide selenium-server.jar dependency.<br>    Tested with java openjdk-6-jre.<br><br>* `Sqlite 3`. Provided by Python v2.5 or higher.<br><br>* `Postgres`_ as a database engine. Provide database replication for fixtures.<br>    Tested with Postgres v8.2<br><br>* `Python-PostgreSQL database driver`_. Provide access to postgres database.<br>    Tested with psycopg2 v2.0.5<br><br><br><br>.. _django-selenium-test-runner: http://pypi.python.org/pypi/django-selenium-test-runner<br>.. _Selenium web testing tools: http://seleniumhq.org/<br>.. _selenium-ide: http://seleniumhq.org/movies/intro.mov<br>.. _Fixtures: http://docs.djangoproject.com/en/dev/howto/initial-data/<br>.. _setuptools: http://pypi.python.org/pypi/setuptools<br>.. _tutorial: http://docs.djangoproject.com/en/dev/intro/tutorial01/<br>.. _Selenium RC server and python driver: http://release.seleniumhq.org/selenium-remote-control/1.0.1/selenium-remote-control-1.0.1-dist.zip<br>.. _CherryPy WSGI multi-thread web server: http://www.cherrypy.org/wiki/CherryPyInstall<br>.. _Django mediahandler.py: http://www.arteme.fi/blog/2009/02/26/django-cherrypy-dev-server-and-static-files<br>.. _Python 2.x: http://www.python.org/download/<br>.. _Django 1.x: http://docs.djangoproject.com/en/dev/topics/install/<br>.. _Java VM command line runner: http://openjdk.java.net/install/<br>.. _Postgres: http://www.postgresql.org/download/<br>.. _Python-PostgreSQL database driver: http://pypi.python.org/pypi/psycopg2/\n          </div>"}, "last_serial": 790560, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e78ba28ba99e4a6e6a147808a249f104", "sha256": "7abcca84dc05cc5971d78a9871d427dabc3791e18bddd6f17767f802c34619f2"}, "downloads": -1, "filename": "django-selenium-test-runner-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e78ba28ba99e4a6e6a147808a249f104", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5257857, "upload_time": "2009-10-23T11:43:02", "upload_time_iso_8601": "2009-10-23T11:43:02.757612Z", "url": "https://files.pythonhosted.org/packages/a1/df/04057b926389fd62c9145a496cfa3322d5b19c066093d4338014c1c8d52c/django-selenium-test-runner-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e78ba28ba99e4a6e6a147808a249f104", "sha256": "7abcca84dc05cc5971d78a9871d427dabc3791e18bddd6f17767f802c34619f2"}, "downloads": -1, "filename": "django-selenium-test-runner-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e78ba28ba99e4a6e6a147808a249f104", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5257857, "upload_time": "2009-10-23T11:43:02", "upload_time_iso_8601": "2009-10-23T11:43:02.757612Z", "url": "https://files.pythonhosted.org/packages/a1/df/04057b926389fd62c9145a496cfa3322d5b19c066093d4338014c1c8d52c/django-selenium-test-runner-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:38 2020"}