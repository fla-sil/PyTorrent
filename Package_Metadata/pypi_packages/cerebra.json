{"info": {"author": "Lincoln Harris", "author_email": "lincoln.harris@czbiohub.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "cerebra\n================================\n\n[![image](https://img.shields.io/pypi/v/%7B%7B%20cookiecutter.repo_name%20%7D%7D.svg)](https://pypi.python.org/pypi/%7B%7B%20cookiecutter.repo_name%20%7D%7D)\n\n[![Build Status](https://travis-ci.org/czbiohub/cerebra.svg?branch=master)](https://travis-ci.org/czbiohub/cerebra)\n[![Code Coverage](https://codecov.io/gh/czbiohub/cerebra/branch/master/graph/badge.svg)](https://codecov.io/gh/czbiohub/cerebra)\n\nWhat is _cerebra_?\n-------------------------------------\n\nThis tool allows you to quickly extract meaningful variant information from a DNA or RNA sequencing experiment. If you're interested in learning what mutations are present in your DNA/RNA samples, variant callers like GATK [HaplotypeCaller](https://software.broadinstitute.org/gatk/documentation/tooldocs/3.8-0/org_broadinstitute_gatk_tools_walkers_haplotypecaller_HaplotypeCaller.php) can be used to generate variant calling format (.vcf) files following a sequencing experiment. However, a single sequencing run can generate on the order of 10^8 unique vcf entries, only a small portion of which contain meaningful biological signal. Thus drawing conclusions from .vcf files remains a substantial challange. _cerebra_ provides a fast and intuitive framework for summarizing vcf entries across samples. It is comprised of four modules that do the following:      \n\n        1) remove germline mutations from samples of interest        \n        2) count the total number of mutations in a given sample           \n        3) report amino acid level SNPs and indels for each sample             \n        4) report the ratio of total to variant reads to each mutation site      \n\n_cerebra_ gets its name from the eponymous X-men [character](https://en.wikipedia.org/wiki/Cerebra), who had the ability to detect mutant individuals among the general public. \n\nIf you're working with tumor data, it might be a good idea to limit the mutational search space to only known cancer variants. Therefore _cerebra_ implements an optional method for restricting to variants also found in the [COSMIC](https://cancer.sanger.ac.uk/cosmic) database.  \n\nNOTE: this framework was developed for, but is certainly not limited to, single-cell RNA sequencing data. \n\n-   Free software: MIT license\n\n\nWhat makes _cerebra_ different from traditional vcf parsers? \n-------------------------------------\nPython libraries exist (_ie._ [PyVCF](https://pyvcf.readthedocs.io/en/latest/) and [vcfpy](https://vcfpy.readthedocs.io/en/stable/index.html)) for extracting information from vcf files, and GATK has its own tool for the [task](https://software.broadinstitute.org/gatk/documentation/tooldocs/3.8-0/org_broadinstitute_gatk_tools_walkers_variantutils_VariantsToTable.php). In fact we integrate vcfpy into our tool. What makes _cerebra_ different is that it reports the RNA transcript and amino acid change associated with each variant. GATK _VariantsToTable_ produces a file that looks like: \n\n    CHROM    POS ID      QUAL    AC\n     1        10  .       50      1\n     1        20  rs10    99      10\n\nSuch a table contains only genomic (ie. DNA-level) coordinates. Often the next question is what specific gene and protein-level mutation is each variant associated with? _cerebra_ queries a reference genome (.fa) and annotation (.gtf) to match each DNA-level variant with its associated gene, probable transcript and probable amino-acid level mutation. _cerebra_ produces a table that looks like the following: \n![alt text](https://raw.githubusercontent.com/lincoln-harris/cerebra/master/cerebra_out_sample.png)\n\n_cerebra_ adheres to HGVS sequence variant [nomenclature](https://varnomen.hgvs.org/) in reporting peptide level variants\n\nInstallation\n------------\n\nThe latest version can be installed from PyPi:       \n```pip install cerebra```\n\nBefore running that you'll need to install a few dependencies. \n\nFor OSX:     \n```\nsudo pip install setuptools\nbrew update\nbrew install openssl\nbrew install zlib\n```\n\nFor Linux:     \n```\napt-get install libbz2-dev\napt-get install zlib1g-dev\napt-get install libssl-dev\n```\n\n\nUsage\n-----\n\n_cerebra_ should now be installed as a commandline executable. \n`$ cerebra` should return help information\n\n```\nUsage: cerebra  <command>\n\n  high-throughput summarizing of vcf entries following a sequencing\n  experiment\n\nOptions:\n  -h, --help  Show this message and exit.\n\nCommands:\n  count-mutations    count total number of mutations in each sample\n  find-aa-mutations  report amino-acid level SNPs and indels in each sample\n  germline-filter    filter out common SNPs/indels between germline samples...\n```\n\n\nFeatures\n--------\n***count-mutations:*** count total number of mutations in each sample         \n***find-aa-mutations:*** report amino-acid level SNPs and indels in each sample            \n***germline-filter:*** filter out common SNPs/indels between germline samples and samples of interest          \n\n\nAuthors\n--------\nThis work was produced by [Lincoln Harris](https://github.com/lincoln-harris), [Rohan Vanheusden](https://github.com/rvanheusden), [Olga Botvinnik](https://github.com/olgabot) and [Spyros Darmanis](https://spyrosdarmanis.wixsite.com/mylab) of the Chan Zuckerberg Biohub. For questions please contact lincoln.harris@czbiohub.org\n\n\nContributing\n--------\nWe welcome any bug reports, feature requests or other contributions. Please submit a well documented report on our [issue tracker](https://github.com/czbiohub/cerebra/issues). For substantial changes please fork this repo and submit a pull request for review. \n\nFeel free to clone but NOTE this project is still a work in progress. \n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/czbiohub/cerebra", "keywords": "cerebra", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cerebra", "package_url": "https://pypi.org/project/cerebra/", "platform": "", "project_url": "https://pypi.org/project/cerebra/", "project_urls": {"Homepage": "https://github.com/czbiohub/cerebra"}, "release_url": "https://pypi.org/project/cerebra/1.0.7/", "requires_dist": ["cython (>=0.29.1)", "pytest", "flake8", "coverage", "click", "setuptools (>=38.6.0)", "tqdm", "colorama", "numpy", "pandas", "vcfpy", "pathos", "ncls", "hgvs", "pyfaidx"], "requires_python": "", "summary": "finds mutants in your scRNA-seq experiment", "version": "1.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>cerebra</h1>\n<p><a href=\"https://pypi.python.org/pypi/%7B%7B%20cookiecutter.repo_name%20%7D%7D\" rel=\"nofollow\"><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e9016bef2f093c140d3d34d7264a33bfabae53aa/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f253742253742253230636f6f6b69656375747465722e7265706f5f6e616d652532302537442537442e737667\"></a></p>\n<p><a href=\"https://travis-ci.org/czbiohub/cerebra\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9d17281cef6cedc79107302b70c22cc757248e9f/68747470733a2f2f7472617669732d63692e6f72672f637a62696f6875622f636572656272612e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/czbiohub/cerebra\" rel=\"nofollow\"><img alt=\"Code Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/20148ba42c361b3ac490095203a5fe88b6b7bb87/68747470733a2f2f636f6465636f762e696f2f67682f637a62696f6875622f636572656272612f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<h2>What is <em>cerebra</em>?</h2>\n<p>This tool allows you to quickly extract meaningful variant information from a DNA or RNA sequencing experiment. If you're interested in learning what mutations are present in your DNA/RNA samples, variant callers like GATK <a href=\"https://software.broadinstitute.org/gatk/documentation/tooldocs/3.8-0/org_broadinstitute_gatk_tools_walkers_haplotypecaller_HaplotypeCaller.php\" rel=\"nofollow\">HaplotypeCaller</a> can be used to generate variant calling format (.vcf) files following a sequencing experiment. However, a single sequencing run can generate on the order of 10^8 unique vcf entries, only a small portion of which contain meaningful biological signal. Thus drawing conclusions from .vcf files remains a substantial challange. <em>cerebra</em> provides a fast and intuitive framework for summarizing vcf entries across samples. It is comprised of four modules that do the following:</p>\n<pre><code>    1) remove germline mutations from samples of interest        \n    2) count the total number of mutations in a given sample           \n    3) report amino acid level SNPs and indels for each sample             \n    4) report the ratio of total to variant reads to each mutation site      \n</code></pre>\n<p><em>cerebra</em> gets its name from the eponymous X-men <a href=\"https://en.wikipedia.org/wiki/Cerebra\" rel=\"nofollow\">character</a>, who had the ability to detect mutant individuals among the general public.</p>\n<p>If you're working with tumor data, it might be a good idea to limit the mutational search space to only known cancer variants. Therefore <em>cerebra</em> implements an optional method for restricting to variants also found in the <a href=\"https://cancer.sanger.ac.uk/cosmic\" rel=\"nofollow\">COSMIC</a> database.</p>\n<p>NOTE: this framework was developed for, but is certainly not limited to, single-cell RNA sequencing data.</p>\n<ul>\n<li>Free software: MIT license</li>\n</ul>\n<h2>What makes <em>cerebra</em> different from traditional vcf parsers?</h2>\n<p>Python libraries exist (<em>ie.</em> <a href=\"https://pyvcf.readthedocs.io/en/latest/\" rel=\"nofollow\">PyVCF</a> and <a href=\"https://vcfpy.readthedocs.io/en/stable/index.html\" rel=\"nofollow\">vcfpy</a>) for extracting information from vcf files, and GATK has its own tool for the <a href=\"https://software.broadinstitute.org/gatk/documentation/tooldocs/3.8-0/org_broadinstitute_gatk_tools_walkers_variantutils_VariantsToTable.php\" rel=\"nofollow\">task</a>. In fact we integrate vcfpy into our tool. What makes <em>cerebra</em> different is that it reports the RNA transcript and amino acid change associated with each variant. GATK <em>VariantsToTable</em> produces a file that looks like:</p>\n<pre><code>CHROM    POS ID      QUAL    AC\n 1        10  .       50      1\n 1        20  rs10    99      10\n</code></pre>\n<p>Such a table contains only genomic (ie. DNA-level) coordinates. Often the next question is what specific gene and protein-level mutation is each variant associated with? <em>cerebra</em> queries a reference genome (.fa) and annotation (.gtf) to match each DNA-level variant with its associated gene, probable transcript and probable amino-acid level mutation. <em>cerebra</em> produces a table that looks like the following:\n<img alt=\"alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/da116b7016ae0f31218c7d8dfb305b279f198326/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6c696e636f6c6e2d6861727269732f636572656272612f6d61737465722f636572656272615f6f75745f73616d706c652e706e67\"></p>\n<p><em>cerebra</em> adheres to HGVS sequence variant <a href=\"https://varnomen.hgvs.org/\" rel=\"nofollow\">nomenclature</a> in reporting peptide level variants</p>\n<h2>Installation</h2>\n<p>The latest version can be installed from PyPi:<br>\n<code>pip install cerebra</code></p>\n<p>Before running that you'll need to install a few dependencies.</p>\n<p>For OSX:</p>\n<pre><code>sudo pip install setuptools\nbrew update\nbrew install openssl\nbrew install zlib\n</code></pre>\n<p>For Linux:</p>\n<pre><code>apt-get install libbz2-dev\napt-get install zlib1g-dev\napt-get install libssl-dev\n</code></pre>\n<h2>Usage</h2>\n<p><em>cerebra</em> should now be installed as a commandline executable.\n<code>$ cerebra</code> should return help information</p>\n<pre><code>Usage: cerebra  &lt;command&gt;\n\n  high-throughput summarizing of vcf entries following a sequencing\n  experiment\n\nOptions:\n  -h, --help  Show this message and exit.\n\nCommands:\n  count-mutations    count total number of mutations in each sample\n  find-aa-mutations  report amino-acid level SNPs and indels in each sample\n  germline-filter    filter out common SNPs/indels between germline samples...\n</code></pre>\n<h2>Features</h2>\n<p><em><strong>count-mutations:</strong></em> count total number of mutations in each sample<br>\n<em><strong>find-aa-mutations:</strong></em> report amino-acid level SNPs and indels in each sample<br>\n<em><strong>germline-filter:</strong></em> filter out common SNPs/indels between germline samples and samples of interest</p>\n<h2>Authors</h2>\n<p>This work was produced by <a href=\"https://github.com/lincoln-harris\" rel=\"nofollow\">Lincoln Harris</a>, <a href=\"https://github.com/rvanheusden\" rel=\"nofollow\">Rohan Vanheusden</a>, <a href=\"https://github.com/olgabot\" rel=\"nofollow\">Olga Botvinnik</a> and <a href=\"https://spyrosdarmanis.wixsite.com/mylab\" rel=\"nofollow\">Spyros Darmanis</a> of the Chan Zuckerberg Biohub. For questions please contact <a href=\"mailto:lincoln.harris@czbiohub.org\">lincoln.harris@czbiohub.org</a></p>\n<h2>Contributing</h2>\n<p>We welcome any bug reports, feature requests or other contributions. Please submit a well documented report on our <a href=\"https://github.com/czbiohub/cerebra/issues\" rel=\"nofollow\">issue tracker</a>. For substantial changes please fork this repo and submit a pull request for review.</p>\n<p>Feel free to clone but NOTE this project is still a work in progress.</p>\n\n          </div>"}, "last_serial": 6721474, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "27e00965ef960b45237e9f8488ead9f4", "sha256": "fed91755b2fa01bb6301d9c7432bd5dd7214352391e9641351005cd63069ed83"}, "downloads": -1, "filename": "cerebra-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "27e00965ef960b45237e9f8488ead9f4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22659, "upload_time": "2020-02-01T00:43:26", "upload_time_iso_8601": "2020-02-01T00:43:26.427959Z", "url": "https://files.pythonhosted.org/packages/9b/2b/468ed6389724bed23d95f2eaf5e90b0002443449afdf37e7c3a65008ef46/cerebra-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b15d5b67af21aba2072e6df93096b941", "sha256": "b9fc6913d6a20e8bde62f5700cb8a05246999647cfc7b46b69a927a5b78c5e70"}, "downloads": -1, "filename": "cerebra-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b15d5b67af21aba2072e6df93096b941", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25135, "upload_time": "2020-02-01T00:43:28", "upload_time_iso_8601": "2020-02-01T00:43:28.418300Z", "url": "https://files.pythonhosted.org/packages/50/1b/2c1cb51aa270f1ed835adcfa35e814e2ec4932e9615647759f2c2a4a6f05/cerebra-1.0.0.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "a156bc93dcb720cd5e0e448ec3378c7a", "sha256": "6fcd700d4928ee1ff7134c0b39f25226afac437c236fd2a8fa88f4c4d41f1d7f"}, "downloads": -1, "filename": "cerebra-1.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a156bc93dcb720cd5e0e448ec3378c7a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 24844, "upload_time": "2020-02-28T22:54:31", "upload_time_iso_8601": "2020-02-28T22:54:31.771784Z", "url": "https://files.pythonhosted.org/packages/a4/37/f23dcff72399f22bc72b73ea5fb254bff4c9a0e48f5398816c4213ff6947/cerebra-1.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a9f01a9e1a6dde51924c353558aabc8", "sha256": "8ffaa81ce6d2a01d416b367f1e58bd90ea9e4f8381903b7d5cd5cf127982c553"}, "downloads": -1, "filename": "cerebra-1.0.5.tar.gz", "has_sig": false, "md5_digest": "7a9f01a9e1a6dde51924c353558aabc8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29868, "upload_time": "2020-02-28T22:52:04", "upload_time_iso_8601": "2020-02-28T22:52:04.003447Z", "url": "https://files.pythonhosted.org/packages/b4/4b/7d80e84606471d08c75c4995615301bd5c82502cd0b823cb7a1a9f2ac71a/cerebra-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "140108b210932e9b7f9f38e281eef443", "sha256": "fa0f6466921050c0f776962a1cf18ef049f390fe3fe12390417790d634cd7b3e"}, "downloads": -1, "filename": "cerebra-1.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "140108b210932e9b7f9f38e281eef443", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 24844, "upload_time": "2020-02-28T23:11:38", "upload_time_iso_8601": "2020-02-28T23:11:38.782788Z", "url": "https://files.pythonhosted.org/packages/d1/6f/60d814abce6485ea06320bf136606bb80ef3dadf98abfe9414c0d1cb159e/cerebra-1.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1958e27639b6fac6af957037237d9a90", "sha256": "0f1daef9c7540602aa3027f61fb632df320bc1c3b95ec5406e41ce627a2f815e"}, "downloads": -1, "filename": "cerebra-1.0.6.tar.gz", "has_sig": false, "md5_digest": "1958e27639b6fac6af957037237d9a90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30032, "upload_time": "2020-02-28T23:11:40", "upload_time_iso_8601": "2020-02-28T23:11:40.206707Z", "url": "https://files.pythonhosted.org/packages/d8/c6/9e349d9f7f0f4504738f5ed63b2888c64248258b1fc4c3393aa3b969db46/cerebra-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "365d89f1384f5bda180f1a6e532375ac", "sha256": "7f5bcbe0a423c5304f03cd30537e27b5bed42b9ef6d0e4cc3d4f89d3221f5664"}, "downloads": -1, "filename": "cerebra-1.0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "365d89f1384f5bda180f1a6e532375ac", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 24842, "upload_time": "2020-02-28T23:24:05", "upload_time_iso_8601": "2020-02-28T23:24:05.145499Z", "url": "https://files.pythonhosted.org/packages/bf/fb/89e0f00471380102df9271711e0f42b3b6d6cb72dec0426791aab2f9082b/cerebra-1.0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "906d64cb5bfd19e1260a9e196744d799", "sha256": "89977e23d138cf8b052319d550c0a4186cf5f9eb39e88956fdcc6ccd758853ae"}, "downloads": -1, "filename": "cerebra-1.0.7.tar.gz", "has_sig": false, "md5_digest": "906d64cb5bfd19e1260a9e196744d799", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30021, "upload_time": "2020-02-28T23:24:06", "upload_time_iso_8601": "2020-02-28T23:24:06.602653Z", "url": "https://files.pythonhosted.org/packages/a5/2e/4bc9ab91673327c1ee72150e26a399c0d9a492df16465eb8b43a27be91d8/cerebra-1.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "365d89f1384f5bda180f1a6e532375ac", "sha256": "7f5bcbe0a423c5304f03cd30537e27b5bed42b9ef6d0e4cc3d4f89d3221f5664"}, "downloads": -1, "filename": "cerebra-1.0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "365d89f1384f5bda180f1a6e532375ac", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 24842, "upload_time": "2020-02-28T23:24:05", "upload_time_iso_8601": "2020-02-28T23:24:05.145499Z", "url": "https://files.pythonhosted.org/packages/bf/fb/89e0f00471380102df9271711e0f42b3b6d6cb72dec0426791aab2f9082b/cerebra-1.0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "906d64cb5bfd19e1260a9e196744d799", "sha256": "89977e23d138cf8b052319d550c0a4186cf5f9eb39e88956fdcc6ccd758853ae"}, "downloads": -1, "filename": "cerebra-1.0.7.tar.gz", "has_sig": false, "md5_digest": "906d64cb5bfd19e1260a9e196744d799", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30021, "upload_time": "2020-02-28T23:24:06", "upload_time_iso_8601": "2020-02-28T23:24:06.602653Z", "url": "https://files.pythonhosted.org/packages/a5/2e/4bc9ab91673327c1ee72150e26a399c0d9a492df16465eb8b43a27be91d8/cerebra-1.0.7.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:47 2020"}