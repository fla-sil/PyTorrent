{"info": {"author": "deathbeds", "author_email": "tony.fast@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "A extended trait and type system for python using `jsonschema`. \n\n`wtypes` is an extended type and trait system for python.\n\n* [Documentation](https://wtypes.readthedocs.io/)\n* [Pypi](https://pypi.org/project/wtypes/)\n* [Tests](https://github.com/deathbeds/wtypes/actions)\n\n\n```bash\npip install wtypes\n```\n\n        from wtypes import *\n        \n<!--\n\n        import pydantic, traitlets, IPython, jupyter, genson, hypothesis_jsonschema, hypothesis, dataclasses\n\n-->\n\n`wtypes` provide:\n* Extended type system python validation that feature a `jsonschema` and symbollic type composition.\n    \n        Integer, Float, Dict, List, Email, Uri, Color, Datetime, Regex\n        \n* Configurable `dataclasses`.\n\n        class Thing(DataClass):\n            name: String\n            location: Uri|Jsonpointer\n\n        class Thing(DataClass):\n            name: String\n            location: Uri|Jsonpointer\n            \n        Thing(name='wtypes', location='https://github.com/deathbeds/wtypes')\n\n* Typed evented objects.\n\n        class Thing(evented.DataClass):\n            name: String\n            location: Uri|Jsonpointer\n            \n        Thing(name='wtypes', location='https://github.com/deathbeds/wtypes')\n\n\n* Generate examples of types with [`hypothesis_jsonschema`][hyposchema] and [`genson`][genson]\n\n        Uri.example(), Datetime.example(), Dict[{'a': Email}].example()\n\n* Mixed python and `jsonschema` types\n\n        t = Instance[range] | Integer\n        t(10), t(range(10))\n        \n* _future work_ will expand on semantic RDF type information.\n\n## Background\n\n`wtypes` is inspired by `traitlets` - the core trait library used by `IPython` and `jupyter` - and\n`pydantic` -  a `jsonschema` type system for python. Both `pydantic and traitlets` build type systems that can be validated. `pydantic` lacks interactive validate, a feature of `traitlets`. `traitlets` also provides an observable pattern for evented objects. Both `pydantic and traitlets` types are represented as python `object`s. `wtypes` includes features from these libraries in a composable `type` system. \n\n[pydantic]: https://pydantic-docs.helpmanual.io/usage/settings/\n[traitlets]: https://traitlets.readthedocs.io/en/stable/\n[ipython]: https://ipython.readthedocs.io/\n[hyposchema]: https://github.com/Zac-HD/hypothesis-jsonschema\n[genson]: https://pypi.org/project/genson/\n[dataclasses]: https://docs.python.org/3/library/dataclasses.html\n[wtypes]: https://github.com/deathbeds/wtypes\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/deathbeds/wtypes", "keywords": "", "license": "BSD-3-Clause", "maintainer": "", "maintainer_email": "", "name": "wtypes", "package_url": "https://pypi.org/project/wtypes/", "platform": "", "project_url": "https://pypi.org/project/wtypes/", "project_urls": {"Homepage": "https://github.com/deathbeds/wtypes"}, "release_url": "https://pypi.org/project/wtypes/0.0.2/", "requires_dist": ["jsonschema", "munch", "anyconfig", "pluggy", "hypothesis-jsonschema ; extra == \"examples\"", "genson ; extra == \"examples\"", "param ; extra == \"widgets\"", "ipywidgets ; extra == \"widgets\""], "requires_python": "", "summary": "extended python types for the web and json", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A extended trait and type system for python using <code>jsonschema</code>.</p>\n<p><code>wtypes</code> is an extended type and trait system for python.</p>\n<ul>\n<li><a href=\"https://wtypes.readthedocs.io/\" rel=\"nofollow\">Documentation</a></li>\n<li><a href=\"https://pypi.org/project/wtypes/\" rel=\"nofollow\">Pypi</a></li>\n<li><a href=\"https://github.com/deathbeds/wtypes/actions\" rel=\"nofollow\">Tests</a></li>\n</ul>\n<pre>pip install wtypes\n</pre>\n<pre><code>    from wtypes import *\n</code></pre>\n\n<p><code>wtypes</code> provide:</p>\n<ul>\n<li>\n<p>Extended type system python validation that feature a <code>jsonschema</code> and symbollic type composition.</p>\n<pre><code>  Integer, Float, Dict, List, Email, Uri, Color, Datetime, Regex\n</code></pre>\n</li>\n<li>\n<p>Configurable <code>dataclasses</code>.</p>\n<pre><code>  class Thing(DataClass):\n      name: String\n      location: Uri|Jsonpointer\n\n  class Thing(DataClass):\n      name: String\n      location: Uri|Jsonpointer\n      \n  Thing(name='wtypes', location='https://github.com/deathbeds/wtypes')\n</code></pre>\n</li>\n<li>\n<p>Typed evented objects.</p>\n<pre><code>  class Thing(evented.DataClass):\n      name: String\n      location: Uri|Jsonpointer\n      \n  Thing(name='wtypes', location='https://github.com/deathbeds/wtypes')\n</code></pre>\n</li>\n<li>\n<p>Generate examples of types with <a href=\"https://github.com/Zac-HD/hypothesis-jsonschema\" rel=\"nofollow\"><code>hypothesis_jsonschema</code></a> and <a href=\"https://pypi.org/project/genson/\" rel=\"nofollow\"><code>genson</code></a></p>\n<pre><code>  Uri.example(), Datetime.example(), Dict[{'a': Email}].example()\n</code></pre>\n</li>\n<li>\n<p>Mixed python and <code>jsonschema</code> types</p>\n<pre><code>  t = Instance[range] | Integer\n  t(10), t(range(10))\n</code></pre>\n</li>\n<li>\n<p><em>future work</em> will expand on semantic RDF type information.</p>\n</li>\n</ul>\n<h2>Background</h2>\n<p><code>wtypes</code> is inspired by <code>traitlets</code> - the core trait library used by <code>IPython</code> and <code>jupyter</code> - and\n<code>pydantic</code> -  a <code>jsonschema</code> type system for python. Both <code>pydantic and traitlets</code> build type systems that can be validated. <code>pydantic</code> lacks interactive validate, a feature of <code>traitlets</code>. <code>traitlets</code> also provides an observable pattern for evented objects. Both <code>pydantic and traitlets</code> types are represented as python <code>object</code>s. <code>wtypes</code> includes features from these libraries in a composable <code>type</code> system.</p>\n\n          </div>"}, "last_serial": 7033999, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "3e6d87823c66df3b82eb7c290d4513cc", "sha256": "51d968a3f6d536d2f7927b8b3b386bd432482d79911a4b5abe336a48bbc5a257"}, "downloads": -1, "filename": "wtypes-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3e6d87823c66df3b82eb7c290d4513cc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7538, "upload_time": "2020-04-09T16:27:24", "upload_time_iso_8601": "2020-04-09T16:27:24.239840Z", "url": "https://files.pythonhosted.org/packages/17/7b/6c29d631b946285e9308334dfb0e853985e176ca94a7dee845e530daddf1/wtypes-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b66058d4c7698d595a01ec0fa87f7c33", "sha256": "a229ae96d442b25e7190b068311aa4eb81e14e9149214a68f7e538cae5c35d8b"}, "downloads": -1, "filename": "wtypes-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b66058d4c7698d595a01ec0fa87f7c33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13424, "upload_time": "2020-04-09T16:27:26", "upload_time_iso_8601": "2020-04-09T16:27:26.520745Z", "url": "https://files.pythonhosted.org/packages/41/1d/67f188c4f8c63b8ecd8ddc757763231aa709d8c0ffcdf15f277373bdce81/wtypes-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "e559d01ba4bb980a323df5afbdbc55f4", "sha256": "2ced8b42a9e916a92ab551d8adbebbdf7c6f08f6270c85eaea5a4433ca473e15"}, "downloads": -1, "filename": "wtypes-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e559d01ba4bb980a323df5afbdbc55f4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23336, "upload_time": "2020-04-16T18:12:27", "upload_time_iso_8601": "2020-04-16T18:12:27.137386Z", "url": "https://files.pythonhosted.org/packages/88/41/cd720db5882fe94282726ef4ba1cdd90862255b92690535b8874b99f890a/wtypes-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21d743f863a9ab9a1f6e78c7d4a71add", "sha256": "23fe6d2fb6b5fedfdec9c90a073f910cf651b21c6cbd2294bd76b2b2b9108c13"}, "downloads": -1, "filename": "wtypes-0.0.2.tar.gz", "has_sig": false, "md5_digest": "21d743f863a9ab9a1f6e78c7d4a71add", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19515, "upload_time": "2020-04-16T18:12:28", "upload_time_iso_8601": "2020-04-16T18:12:28.046238Z", "url": "https://files.pythonhosted.org/packages/a0/9b/69993a012ede817d936377ee7556bd50326a5d7116d12a1bc35743351e96/wtypes-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e559d01ba4bb980a323df5afbdbc55f4", "sha256": "2ced8b42a9e916a92ab551d8adbebbdf7c6f08f6270c85eaea5a4433ca473e15"}, "downloads": -1, "filename": "wtypes-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e559d01ba4bb980a323df5afbdbc55f4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23336, "upload_time": "2020-04-16T18:12:27", "upload_time_iso_8601": "2020-04-16T18:12:27.137386Z", "url": "https://files.pythonhosted.org/packages/88/41/cd720db5882fe94282726ef4ba1cdd90862255b92690535b8874b99f890a/wtypes-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21d743f863a9ab9a1f6e78c7d4a71add", "sha256": "23fe6d2fb6b5fedfdec9c90a073f910cf651b21c6cbd2294bd76b2b2b9108c13"}, "downloads": -1, "filename": "wtypes-0.0.2.tar.gz", "has_sig": false, "md5_digest": "21d743f863a9ab9a1f6e78c7d4a71add", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19515, "upload_time": "2020-04-16T18:12:28", "upload_time_iso_8601": "2020-04-16T18:12:28.046238Z", "url": "https://files.pythonhosted.org/packages/a0/9b/69993a012ede817d936377ee7556bd50326a5d7116d12a1bc35743351e96/wtypes-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:26:48 2020"}