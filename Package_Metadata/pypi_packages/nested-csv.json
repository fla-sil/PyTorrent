{"info": {"author": "Kawamura Shintaro", "author_email": "kawasin73@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# nested_csv\n\n[![Actions Status](https://github.com/kawasin73/nested_csv/workflows/Python%20package/badge.svg)](https://github.com/kawasin73/nested_csv/actions)\n\nnested_csv generates CSV from nested `dict` `list` data structure such as JSON.\n\n`nested_csv.NestedDictWriter` have same interface (`writerow`, `writerows`, `writeheader`) with `csv.DictWriter`.\n\n## Install\n\n```bash\n$ pip install nested-csv\n```\n\n## Dependency\n\nnested_csv requires Python 3.\n\nnested_csv only use standard packages (`csv`, `itertools`, `re`).\n\n## How to Use\n\n### Estimate fields\n\n```python\nfrom nested_csv import generate_fieldnames\ndata = [\n  {\"hello\": {\"world\": \"value0\"}, \"list\": [[1,2,3], [4,5,6]], \"fixed\": [1,2]},\n  {\"hello\": {\"world\": \"value1\"}, \"list\": [[7,8], [10,11]], \"fixed\": [3,4]},\n]\nfieldnames = generate_fieldnames(data[0])\n# ['fixed[id]', 'fixed[]', 'hello.world', 'list[id]', 'list[][id]', 'list[][]']\n```\n\n### Generate Nested CSV\n\n```python\nimport io\nfrom nested_csv import NestedDictWriter\ndata = [\n  {\"hello\": {\"world\": \"value0\"}, \"list\": [[1,2,3], [4,5,6]], \"fixed\": [1,2]},\n  {\"hello\": {\"world\": \"value1\"}, \"list\": [[7,8], [10,11]], \"fixed\": [3,4]},\n]\nfieldnames = ['hello.world', 'list[id]', 'list[][id]', 'list[][]', 'fixed[1]']\nfile = io.StringIO()\nw = NestedDictWriter(file, fieldnames)\nw.writeheader()\nw.writerows(data)\nfile.seek(0)\nfile.read()\n# hello.world,list[id],list[][id],list[][],fixed[1]\n# value0,0,0,1,2\n# value0,0,1,2,2\n# value0,0,2,3,2\n# value0,1,0,4,2\n# value0,1,1,5,2\n# value0,1,2,6,2\n# value1,0,0,7,4\n# value1,0,1,8,4\n# value1,1,0,10,4\n# value1,1,1,11,4\n```\n\n## Field Format\n\nYou can generate fields format automatically by using `generate_fieldnames()`.\n\nBut `generate_fieldnames()` is sometimes not appropriate when ...\n\n- the order of csv row is important\n  - `generate_fieldnames()` will generate fields ordered by lexical order\n- the base object includes length list\n  - `generate_fieldnames()` can't estimate the scheme of empty object\n\nPlease set fieldnames manually on those situations.\n\nThe format of fieldnames is following.\n\n### nested keys\n\nNested dict key is joined by `.` (dot).\n\n```\nJSON : {\"a\": {\"b\": 1, \"c\": 2}}\nformat : [\"a.b\", \"a.c\"]\n--- CSV ---\n1,2\n```\n\n### id support\n\n`NestedDictWriter` will insert `id` passed on `writerow(rowdict, id=0)` or `writerows(rowdicts, first_id=0)`.\n\n```\nJSON : {\"a\": {\"b\": 1, \"c\": 2}}\nformat : [\"id\", \"a.b\", \"a.c\"]\n--- CSV ---\n0,1,2\n```\n\n### fixed size list\n\nWhen the size of the list is known, list elements can be specified by index `[<index number>]`.\n\n```\nJSON : {\"a\": [1,2], \"b\": [0]}\nformat : [\"a[0]\", \"a[1]\", \"b[0]\"]\n--- CSV ---\n1,2,0\n```\n\n### list\n\n`NestedDictWriter` unfolds the list elements into multiple rows when specified by `[]`.\n\nNested list is also supported.\n\nThe level of each list must match.\n\n- Bad Cases\n  - `\"a[]\"` + `\"a.b\"` : key and list at same level\n  - `\"a[]\"` + `\"b.c[]\"` : list level not match\n  - `\"a[][]\"` + `\"b[].c[]\"` : sub list level not match\n\nThe count of unfolding loop is maximum length of list at each level. If list size is shorter than maximum, the value of exceeded index is empty.\n\n```\nJSON : {\"a\": [[{\"x\": 1}], [{\"x\": 2}, {\"x\": 3}]], \"b\": [4, 5, 6], \"c\": [[7, 8, 9]]}\nformat : [\"a[][].x\", \"b[]\", \"c[][]\"]\n--- csv ---\n1,4,7\n,4,8\n,4,9\n2,5,\n3,5,\n,5,\n,6,\n,6,\n,6,\n```\n\n### list index\n\nThe unfolding loop index of list is specified by `[id]`.\n\n```\nJSON: {\"a\": [[1,2,3], [4,5]}\nformat : [\"a[id]\", \"a[][id]\", \"a[][]\"]\n--- csv ---\n0,0,1\n0,1,2\n0,2,3\n1,0,4\n1,1,5\n1,2,\n```\n\n## LICENSE\n\nMIT\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kawasin73/nested_csv", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "nested-csv", "package_url": "https://pypi.org/project/nested-csv/", "platform": "", "project_url": "https://pypi.org/project/nested-csv/", "project_urls": {"Homepage": "https://github.com/kawasin73/nested_csv"}, "release_url": "https://pypi.org/project/nested-csv/0.1.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "CSV generator for nested dict or list data structure such asJSON", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>nested_csv</h1>\n<p><a href=\"https://github.com/kawasin73/nested_csv/actions\" rel=\"nofollow\"><img alt=\"Actions Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d9dd67eda7d7cde8c5896ab6ec1b5e2bcd3c2534/68747470733a2f2f6769746875622e636f6d2f6b61776173696e37332f6e65737465645f6373762f776f726b666c6f77732f507974686f6e2532307061636b6167652f62616467652e737667\"></a></p>\n<p>nested_csv generates CSV from nested <code>dict</code> <code>list</code> data structure such as JSON.</p>\n<p><code>nested_csv.NestedDictWriter</code> have same interface (<code>writerow</code>, <code>writerows</code>, <code>writeheader</code>) with <code>csv.DictWriter</code>.</p>\n<h2>Install</h2>\n<pre>$ pip install nested-csv\n</pre>\n<h2>Dependency</h2>\n<p>nested_csv requires Python 3.</p>\n<p>nested_csv only use standard packages (<code>csv</code>, <code>itertools</code>, <code>re</code>).</p>\n<h2>How to Use</h2>\n<h3>Estimate fields</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nested_csv</span> <span class=\"kn\">import</span> <span class=\"n\">generate_fieldnames</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n  <span class=\"p\">{</span><span class=\"s2\">\"hello\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"world\"</span><span class=\"p\">:</span> <span class=\"s2\">\"value0\"</span><span class=\"p\">},</span> <span class=\"s2\">\"list\"</span><span class=\"p\">:</span> <span class=\"p\">[[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">]],</span> <span class=\"s2\">\"fixed\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">]},</span>\n  <span class=\"p\">{</span><span class=\"s2\">\"hello\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"world\"</span><span class=\"p\">:</span> <span class=\"s2\">\"value1\"</span><span class=\"p\">},</span> <span class=\"s2\">\"list\"</span><span class=\"p\">:</span> <span class=\"p\">[[</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">8</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">11</span><span class=\"p\">]],</span> <span class=\"s2\">\"fixed\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">]},</span>\n<span class=\"p\">]</span>\n<span class=\"n\">fieldnames</span> <span class=\"o\">=</span> <span class=\"n\">generate_fieldnames</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"c1\"># ['fixed[id]', 'fixed[]', 'hello.world', 'list[id]', 'list[][id]', 'list[][]']</span>\n</pre>\n<h3>Generate Nested CSV</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">io</span>\n<span class=\"kn\">from</span> <span class=\"nn\">nested_csv</span> <span class=\"kn\">import</span> <span class=\"n\">NestedDictWriter</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n  <span class=\"p\">{</span><span class=\"s2\">\"hello\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"world\"</span><span class=\"p\">:</span> <span class=\"s2\">\"value0\"</span><span class=\"p\">},</span> <span class=\"s2\">\"list\"</span><span class=\"p\">:</span> <span class=\"p\">[[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">]],</span> <span class=\"s2\">\"fixed\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">]},</span>\n  <span class=\"p\">{</span><span class=\"s2\">\"hello\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"world\"</span><span class=\"p\">:</span> <span class=\"s2\">\"value1\"</span><span class=\"p\">},</span> <span class=\"s2\">\"list\"</span><span class=\"p\">:</span> <span class=\"p\">[[</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">8</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">11</span><span class=\"p\">]],</span> <span class=\"s2\">\"fixed\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">]},</span>\n<span class=\"p\">]</span>\n<span class=\"n\">fieldnames</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'hello.world'</span><span class=\"p\">,</span> <span class=\"s1\">'list[id]'</span><span class=\"p\">,</span> <span class=\"s1\">'list[][id]'</span><span class=\"p\">,</span> <span class=\"s1\">'list[][]'</span><span class=\"p\">,</span> <span class=\"s1\">'fixed[1]'</span><span class=\"p\">]</span>\n<span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">StringIO</span><span class=\"p\">()</span>\n<span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"n\">NestedDictWriter</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">fieldnames</span><span class=\"p\">)</span>\n<span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">writeheader</span><span class=\"p\">()</span>\n<span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">writerows</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">seek</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n<span class=\"c1\"># hello.world,list[id],list[][id],list[][],fixed[1]</span>\n<span class=\"c1\"># value0,0,0,1,2</span>\n<span class=\"c1\"># value0,0,1,2,2</span>\n<span class=\"c1\"># value0,0,2,3,2</span>\n<span class=\"c1\"># value0,1,0,4,2</span>\n<span class=\"c1\"># value0,1,1,5,2</span>\n<span class=\"c1\"># value0,1,2,6,2</span>\n<span class=\"c1\"># value1,0,0,7,4</span>\n<span class=\"c1\"># value1,0,1,8,4</span>\n<span class=\"c1\"># value1,1,0,10,4</span>\n<span class=\"c1\"># value1,1,1,11,4</span>\n</pre>\n<h2>Field Format</h2>\n<p>You can generate fields format automatically by using <code>generate_fieldnames()</code>.</p>\n<p>But <code>generate_fieldnames()</code> is sometimes not appropriate when ...</p>\n<ul>\n<li>the order of csv row is important\n<ul>\n<li><code>generate_fieldnames()</code> will generate fields ordered by lexical order</li>\n</ul>\n</li>\n<li>the base object includes length list\n<ul>\n<li><code>generate_fieldnames()</code> can't estimate the scheme of empty object</li>\n</ul>\n</li>\n</ul>\n<p>Please set fieldnames manually on those situations.</p>\n<p>The format of fieldnames is following.</p>\n<h3>nested keys</h3>\n<p>Nested dict key is joined by <code>.</code> (dot).</p>\n<pre><code>JSON : {\"a\": {\"b\": 1, \"c\": 2}}\nformat : [\"a.b\", \"a.c\"]\n--- CSV ---\n1,2\n</code></pre>\n<h3>id support</h3>\n<p><code>NestedDictWriter</code> will insert <code>id</code> passed on <code>writerow(rowdict, id=0)</code> or <code>writerows(rowdicts, first_id=0)</code>.</p>\n<pre><code>JSON : {\"a\": {\"b\": 1, \"c\": 2}}\nformat : [\"id\", \"a.b\", \"a.c\"]\n--- CSV ---\n0,1,2\n</code></pre>\n<h3>fixed size list</h3>\n<p>When the size of the list is known, list elements can be specified by index <code>[&lt;index number&gt;]</code>.</p>\n<pre><code>JSON : {\"a\": [1,2], \"b\": [0]}\nformat : [\"a[0]\", \"a[1]\", \"b[0]\"]\n--- CSV ---\n1,2,0\n</code></pre>\n<h3>list</h3>\n<p><code>NestedDictWriter</code> unfolds the list elements into multiple rows when specified by <code>[]</code>.</p>\n<p>Nested list is also supported.</p>\n<p>The level of each list must match.</p>\n<ul>\n<li>Bad Cases\n<ul>\n<li><code>\"a[]\"</code> + <code>\"a.b\"</code> : key and list at same level</li>\n<li><code>\"a[]\"</code> + <code>\"b.c[]\"</code> : list level not match</li>\n<li><code>\"a[][]\"</code> + <code>\"b[].c[]\"</code> : sub list level not match</li>\n</ul>\n</li>\n</ul>\n<p>The count of unfolding loop is maximum length of list at each level. If list size is shorter than maximum, the value of exceeded index is empty.</p>\n<pre><code>JSON : {\"a\": [[{\"x\": 1}], [{\"x\": 2}, {\"x\": 3}]], \"b\": [4, 5, 6], \"c\": [[7, 8, 9]]}\nformat : [\"a[][].x\", \"b[]\", \"c[][]\"]\n--- csv ---\n1,4,7\n,4,8\n,4,9\n2,5,\n3,5,\n,5,\n,6,\n,6,\n,6,\n</code></pre>\n<h3>list index</h3>\n<p>The unfolding loop index of list is specified by <code>[id]</code>.</p>\n<pre><code>JSON: {\"a\": [[1,2,3], [4,5]}\nformat : [\"a[id]\", \"a[][id]\", \"a[][]\"]\n--- csv ---\n0,0,1\n0,1,2\n0,2,3\n1,0,4\n1,1,5\n1,2,\n</code></pre>\n<h2>LICENSE</h2>\n<p>MIT</p>\n\n          </div>"}, "last_serial": 6038024, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e10d43bba33ba4508ab8ca6d2be13536", "sha256": "37749e6b95ed840c8e1a1fc4ac6649e22282c060da6d6af5a41af570063a1829"}, "downloads": -1, "filename": "nested_csv-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e10d43bba33ba4508ab8ca6d2be13536", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5968, "upload_time": "2019-10-27T19:01:43", "upload_time_iso_8601": "2019-10-27T19:01:43.806256Z", "url": "https://files.pythonhosted.org/packages/c2/09/7d9c151c94857081addb7d26402b59ceb47486d926fe9e5df3f0b8071637/nested_csv-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2e0d8b5fe387a1ad672ff68ae14fd2c", "sha256": "0cd1f162af4a635d1f3e0b36cea3f9396422aa0c72684b53ed1a6a6197a1a6f5"}, "downloads": -1, "filename": "nested_csv-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b2e0d8b5fe387a1ad672ff68ae14fd2c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5703, "upload_time": "2019-10-27T19:01:46", "upload_time_iso_8601": "2019-10-27T19:01:46.623506Z", "url": "https://files.pythonhosted.org/packages/2d/e1/c77ab8c5d76ddf511de9aef4dfd74a3e3c4c9ea6967cf312019d0fa11519/nested_csv-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e10d43bba33ba4508ab8ca6d2be13536", "sha256": "37749e6b95ed840c8e1a1fc4ac6649e22282c060da6d6af5a41af570063a1829"}, "downloads": -1, "filename": "nested_csv-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e10d43bba33ba4508ab8ca6d2be13536", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5968, "upload_time": "2019-10-27T19:01:43", "upload_time_iso_8601": "2019-10-27T19:01:43.806256Z", "url": "https://files.pythonhosted.org/packages/c2/09/7d9c151c94857081addb7d26402b59ceb47486d926fe9e5df3f0b8071637/nested_csv-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2e0d8b5fe387a1ad672ff68ae14fd2c", "sha256": "0cd1f162af4a635d1f3e0b36cea3f9396422aa0c72684b53ed1a6a6197a1a6f5"}, "downloads": -1, "filename": "nested_csv-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b2e0d8b5fe387a1ad672ff68ae14fd2c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5703, "upload_time": "2019-10-27T19:01:46", "upload_time_iso_8601": "2019-10-27T19:01:46.623506Z", "url": "https://files.pythonhosted.org/packages/2d/e1/c77ab8c5d76ddf511de9aef4dfd74a3e3c4c9ea6967cf312019d0fa11519/nested_csv-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:23 2020"}