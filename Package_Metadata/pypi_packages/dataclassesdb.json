{"info": {"author": "Diogo Dutra", "author_email": "diogodutradamata@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Database"], "description": "# dataclassesdb\n\n<p align=\"center\" style=\"margin: 3em\">\n  <a href=\"https://github.com/dutradda/dataclassesdb\">\n    <img src=\"https://dutradda.github.io/dataclassesdb/dataclassesdb.svg\" alt=\"dataclassesdb\" width=\"300\"/>\n  </a>\n</p>\n\n<p align=\"center\">\n    <em>Generates <b>SQL</b> and <b>NoSQL</b> database models from @dataclass</em>\n</p>\n\n---\n\n**Documentation**: <a href=\"https://dutradda.github.io/dataclassesdb\" target=\"_blank\">https://dutradda.github.io/dataclassesdb</a>\n\n**Source Code**: <a href=\"https://github.com/dutradda/dataclassesdb\" target=\"_blank\">https://github.com/dutradda/dataclassesdb</a>\n\n---\n\n\n## Key Features\n\n- Fast start data modeling with persistence\n\n- Supports from simple database schemas to complex one\n\n- Integrate with:\n    + `SQLALchemy`\n    + `aioredis` (*soon*)\n    + `google-datastore` (*soon*)\n    + `mongodb` (*planned*)\n    + `elasticsearch` (*planned*)\n    + `aws-dynamodb` (*planned*)\n\n- Same interface as [`sqlalchemy.orm.session.Session`](https://docs.sqlalchemy.org/en/13/orm/session_api.html#sqlalchemy.orm.session.Session)\n\n- Easy integration with other data sources\n\n- Supports redis data structure (like hashs, sets, etc) to store objects\n\n\n## Requirements\n\nPython 3.7+\n\n\n## Instalation\n\n```\n$ pip install dataclassesdb \n```\n\n\n## Basic SQLAlchemy example\n\n```python\nimport asyncio\n\nfrom dataclassesdb import DataSourceType, SessionFactory\nfrom dataclasses import dataclass\n\n\n@dataclass\nclass Music:\n    name: str\n\n\n@dataclass\nclass Person:\n    name: str\n    age: int\n    music: Music\n\n\nsession = SessionFactory.make(\n    Music,\n    Person,\n    data_source=DataSourceType.RELATIONAL_SQLALCHEMY,\n    data_source_args=dict(\n        db_url='sqlite://',\n        backrefs=True,\n        create_tables=True,\n    )\n)\n\nperson = Person(\n    name='John',\n    age=40,\n    music=Music('Imagine')\n)\nsession.add(person)  # commit=True by default\n\nmusicQuery = session.query(Address)\nmusics = musicQuery.filter(name='Imagine').all()\n\nloop = asyncio.get_event_loop()\nprint(loop.run_until_complete(musics))\n```\n\n```bash\n[\n  Music(\n    name='Imagine',\n    _id=1,\n    backrefs=Backrefs(\n       person=[Person(age=40, name=John, _id=1)]\n    )\n  )\n]\n```\n\n\n## Basic aioredis with hash data type example\n\n```python\nimport asyncio\n\nfrom dataclassesdb import DataSourceType, SessionFactoryAsync\nfrom dataclasses import dataclass\n\n\n@dataclass\nclass Music:\n    name: str\n\n\n@dataclass\nclass Person:\n    name: str\n    age: int\n    music: Music\n\n\nasync def get_musics():\n    session = await SessionFactoryAsync.make(\n        Address,\n        Person,\n        data_source=DataSourceType.MEMORY_AIOREDIS,\n        data_source_args=dict(\n            db_url='redis://',\n            backrefs=True,\n        )\n    )\n\n    person = Person(\n        name='John',\n        age=40,\n        music=Music('Imagine')\n    )\n    await session.add(person)\n\n    musicQuery = await session.query(Address)\n    return await musicQuery.filter(name='Imagine').all()\n\nloop = asyncio.get_event_loop()\nprint(loop.run_until_complete(musics))\n```\n\n```python\n[\n  Music(\n    name='Imagine',\n    _id=1,\n    backrefs=Backrefs(\n       person=[Person(age=40, name=John, _id=1)]\n    )\n  )\n]\n```\n\n\n## Basic aioredis with sorted set data type example\n\n```python\nfrom dataclassesdb import (\n    DataSourceType,\n    MemorySortedSetRanked,\n    ModelKey,\n    SessionFactoryAsync,\n    SortedValue,\n)\nfrom dataclasses import dataclass\n\n\n@dataclass\nclass Music:\n    id: ModelKey(str)\n    name: str\n\n\nclass Playlist(MemorySortedSetRanked):\n    value_type = Music\n\n\n@dataclass\nclass Person:\n    name: str\n    age: int\n    playlist: Playlist\n\n\nsession = await SessionFactoryAsync.make(\n    Music,\n    Playlist,\n    Person,\n    data_source=DataSourceType.MEMORY_AIOREDIS,\n    data_source_args=dict(\n        db_url='redis://',\n        backrefs=True,\n    )\n)\n\nperson = Person(\n    name='John',\n    age=40,\n    playlist=Playlist(\n        Music(id='imagine', name='Imagine'),\n        Music(id='come-together', name='Come Together'),\n    )\n)\nawait session.add(person)\n\nplaylistQuery = await session.query(Playlist)\nplaylist = await playlistQuery.filter(Person.name=='John').one(withrank=True)\n\nprint(playlist)\n```\n\n```python\n[\n  SortedValue(\n    rank=1,\n    key='imagine'\n  ),\n  SortedValue(\n    rank=2,\n    key='come-together'\n  )\n]\n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dutradda/dataclassesdb", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "dataclassesdb", "package_url": "https://pypi.org/project/dataclassesdb/", "platform": "", "project_url": "https://pypi.org/project/dataclassesdb/", "project_urls": {"Documentation": "https://dutradda.github.io/dataclassesdb/", "Homepage": "https://github.com/dutradda/dataclassesdb"}, "release_url": "https://pypi.org/project/dataclassesdb/0.0.11/", "requires_dist": ["mkdocs; extra == \"doc\"", "mkdocs-material; extra == \"doc\"", "markdown-include; extra == \"doc\"", "black; extra == \"test\"", "isort; extra == \"test\"", "ipython; extra == \"test\"", "mypy; extra == \"test\"", "pytest-cov; extra == \"test\"", "pytest-mock; extra == \"test\"", "pytest>=5.1.1; extra == \"test\"", "tox; extra == \"test\""], "requires_python": ">=3.7", "summary": "Generates ***SQL*** and ***NoSQL*** Database Models from @dataclass", "version": "0.0.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>dataclassesdb</h1>\n<p align=\"center\">\n  <a href=\"https://github.com/dutradda/dataclassesdb\" rel=\"nofollow\">\n    <img alt=\"dataclassesdb\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c60287bb3cb1b301e367bf101be76ed6f483fc6d/68747470733a2f2f64757472616464612e6769746875622e696f2f64617461636c617373657364622f64617461636c617373657364622e737667\" width=\"300\">\n  </a>\n</p>\n<p align=\"center\">\n    <em>Generates <b>SQL</b> and <b>NoSQL</b> database models from @dataclass</em>\n</p>\n<hr>\n<p><strong>Documentation</strong>: <a href=\"https://dutradda.github.io/dataclassesdb\" rel=\"nofollow\"></a><a href=\"https://dutradda.github.io/dataclassesdb\" rel=\"nofollow\">https://dutradda.github.io/dataclassesdb</a></p>\n<p><strong>Source Code</strong>: <a href=\"https://github.com/dutradda/dataclassesdb\" rel=\"nofollow\"></a><a href=\"https://github.com/dutradda/dataclassesdb\" rel=\"nofollow\">https://github.com/dutradda/dataclassesdb</a></p>\n<hr>\n<h2>Key Features</h2>\n<ul>\n<li>\n<p>Fast start data modeling with persistence</p>\n</li>\n<li>\n<p>Supports from simple database schemas to complex one</p>\n</li>\n<li>\n<p>Integrate with:</p>\n<ul>\n<li><code>SQLALchemy</code></li>\n<li><code>aioredis</code> (<em>soon</em>)</li>\n<li><code>google-datastore</code> (<em>soon</em>)</li>\n<li><code>mongodb</code> (<em>planned</em>)</li>\n<li><code>elasticsearch</code> (<em>planned</em>)</li>\n<li><code>aws-dynamodb</code> (<em>planned</em>)</li>\n</ul>\n</li>\n<li>\n<p>Same interface as <a href=\"https://docs.sqlalchemy.org/en/13/orm/session_api.html#sqlalchemy.orm.session.Session\" rel=\"nofollow\"><code>sqlalchemy.orm.session.Session</code></a></p>\n</li>\n<li>\n<p>Easy integration with other data sources</p>\n</li>\n<li>\n<p>Supports redis data structure (like hashs, sets, etc) to store objects</p>\n</li>\n</ul>\n<h2>Requirements</h2>\n<p>Python 3.7+</p>\n<h2>Instalation</h2>\n<pre><code>$ pip install dataclassesdb \n</code></pre>\n<h2>Basic SQLAlchemy example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dataclassesdb</span> <span class=\"kn\">import</span> <span class=\"n\">DataSourceType</span><span class=\"p\">,</span> <span class=\"n\">SessionFactory</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dataclasses</span> <span class=\"kn\">import</span> <span class=\"n\">dataclass</span>\n\n\n<span class=\"nd\">@dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">Music</span><span class=\"p\">:</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n\n\n<span class=\"nd\">@dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">:</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">age</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n    <span class=\"n\">music</span><span class=\"p\">:</span> <span class=\"n\">Music</span>\n\n\n<span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">SessionFactory</span><span class=\"o\">.</span><span class=\"n\">make</span><span class=\"p\">(</span>\n    <span class=\"n\">Music</span><span class=\"p\">,</span>\n    <span class=\"n\">Person</span><span class=\"p\">,</span>\n    <span class=\"n\">data_source</span><span class=\"o\">=</span><span class=\"n\">DataSourceType</span><span class=\"o\">.</span><span class=\"n\">RELATIONAL_SQLALCHEMY</span><span class=\"p\">,</span>\n    <span class=\"n\">data_source_args</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span>\n        <span class=\"n\">db_url</span><span class=\"o\">=</span><span class=\"s1\">'sqlite://'</span><span class=\"p\">,</span>\n        <span class=\"n\">backrefs</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">create_tables</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">person</span> <span class=\"o\">=</span> <span class=\"n\">Person</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'John'</span><span class=\"p\">,</span>\n    <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">40</span><span class=\"p\">,</span>\n    <span class=\"n\">music</span><span class=\"o\">=</span><span class=\"n\">Music</span><span class=\"p\">(</span><span class=\"s1\">'Imagine'</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">person</span><span class=\"p\">)</span>  <span class=\"c1\"># commit=True by default</span>\n\n<span class=\"n\">musicQuery</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">Address</span><span class=\"p\">)</span>\n<span class=\"n\">musics</span> <span class=\"o\">=</span> <span class=\"n\">musicQuery</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Imagine'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">musics</span><span class=\"p\">))</span>\n</pre>\n<pre><span class=\"o\">[</span>\n  Music<span class=\"o\">(</span>\n    <span class=\"nv\">name</span><span class=\"o\">=</span><span class=\"s1\">'Imagine'</span>,\n    <span class=\"nv\">_id</span><span class=\"o\">=</span><span class=\"m\">1</span>,\n    <span class=\"nv\">backrefs</span><span class=\"o\">=</span>Backrefs<span class=\"o\">(</span>\n       <span class=\"nv\">person</span><span class=\"o\">=[</span>Person<span class=\"o\">(</span><span class=\"nv\">age</span><span class=\"o\">=</span><span class=\"m\">40</span>, <span class=\"nv\">name</span><span class=\"o\">=</span>John, <span class=\"nv\">_id</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"o\">)]</span>\n    <span class=\"o\">)</span>\n  <span class=\"o\">)</span>\n<span class=\"o\">]</span>\n</pre>\n<h2>Basic aioredis with hash data type example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dataclassesdb</span> <span class=\"kn\">import</span> <span class=\"n\">DataSourceType</span><span class=\"p\">,</span> <span class=\"n\">SessionFactoryAsync</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dataclasses</span> <span class=\"kn\">import</span> <span class=\"n\">dataclass</span>\n\n\n<span class=\"nd\">@dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">Music</span><span class=\"p\">:</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n\n\n<span class=\"nd\">@dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">:</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">age</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n    <span class=\"n\">music</span><span class=\"p\">:</span> <span class=\"n\">Music</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">get_musics</span><span class=\"p\">():</span>\n    <span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">SessionFactoryAsync</span><span class=\"o\">.</span><span class=\"n\">make</span><span class=\"p\">(</span>\n        <span class=\"n\">Address</span><span class=\"p\">,</span>\n        <span class=\"n\">Person</span><span class=\"p\">,</span>\n        <span class=\"n\">data_source</span><span class=\"o\">=</span><span class=\"n\">DataSourceType</span><span class=\"o\">.</span><span class=\"n\">MEMORY_AIOREDIS</span><span class=\"p\">,</span>\n        <span class=\"n\">data_source_args</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span>\n            <span class=\"n\">db_url</span><span class=\"o\">=</span><span class=\"s1\">'redis://'</span><span class=\"p\">,</span>\n            <span class=\"n\">backrefs</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">person</span> <span class=\"o\">=</span> <span class=\"n\">Person</span><span class=\"p\">(</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'John'</span><span class=\"p\">,</span>\n        <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">40</span><span class=\"p\">,</span>\n        <span class=\"n\">music</span><span class=\"o\">=</span><span class=\"n\">Music</span><span class=\"p\">(</span><span class=\"s1\">'Imagine'</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">await</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">person</span><span class=\"p\">)</span>\n\n    <span class=\"n\">musicQuery</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">Address</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"k\">await</span> <span class=\"n\">musicQuery</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Imagine'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">musics</span><span class=\"p\">))</span>\n</pre>\n<pre><span class=\"p\">[</span>\n  <span class=\"n\">Music</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Imagine'</span><span class=\"p\">,</span>\n    <span class=\"n\">_id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"n\">backrefs</span><span class=\"o\">=</span><span class=\"n\">Backrefs</span><span class=\"p\">(</span>\n       <span class=\"n\">person</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">40</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">John</span><span class=\"p\">,</span> <span class=\"n\">_id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)]</span>\n    <span class=\"p\">)</span>\n  <span class=\"p\">)</span>\n<span class=\"p\">]</span>\n</pre>\n<h2>Basic aioredis with sorted set data type example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dataclassesdb</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">DataSourceType</span><span class=\"p\">,</span>\n    <span class=\"n\">MemorySortedSetRanked</span><span class=\"p\">,</span>\n    <span class=\"n\">ModelKey</span><span class=\"p\">,</span>\n    <span class=\"n\">SessionFactoryAsync</span><span class=\"p\">,</span>\n    <span class=\"n\">SortedValue</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dataclasses</span> <span class=\"kn\">import</span> <span class=\"n\">dataclass</span>\n\n\n<span class=\"nd\">@dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">Music</span><span class=\"p\">:</span>\n    <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">ModelKey</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Playlist</span><span class=\"p\">(</span><span class=\"n\">MemorySortedSetRanked</span><span class=\"p\">):</span>\n    <span class=\"n\">value_type</span> <span class=\"o\">=</span> <span class=\"n\">Music</span>\n\n\n<span class=\"nd\">@dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">:</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">age</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n    <span class=\"n\">playlist</span><span class=\"p\">:</span> <span class=\"n\">Playlist</span>\n\n\n<span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">SessionFactoryAsync</span><span class=\"o\">.</span><span class=\"n\">make</span><span class=\"p\">(</span>\n    <span class=\"n\">Music</span><span class=\"p\">,</span>\n    <span class=\"n\">Playlist</span><span class=\"p\">,</span>\n    <span class=\"n\">Person</span><span class=\"p\">,</span>\n    <span class=\"n\">data_source</span><span class=\"o\">=</span><span class=\"n\">DataSourceType</span><span class=\"o\">.</span><span class=\"n\">MEMORY_AIOREDIS</span><span class=\"p\">,</span>\n    <span class=\"n\">data_source_args</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span>\n        <span class=\"n\">db_url</span><span class=\"o\">=</span><span class=\"s1\">'redis://'</span><span class=\"p\">,</span>\n        <span class=\"n\">backrefs</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">person</span> <span class=\"o\">=</span> <span class=\"n\">Person</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'John'</span><span class=\"p\">,</span>\n    <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">40</span><span class=\"p\">,</span>\n    <span class=\"n\">playlist</span><span class=\"o\">=</span><span class=\"n\">Playlist</span><span class=\"p\">(</span>\n        <span class=\"n\">Music</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'imagine'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Imagine'</span><span class=\"p\">),</span>\n        <span class=\"n\">Music</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'come-together'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Come Together'</span><span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"k\">await</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">person</span><span class=\"p\">)</span>\n\n<span class=\"n\">playlistQuery</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">Playlist</span><span class=\"p\">)</span>\n<span class=\"n\">playlist</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">playlistQuery</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">==</span><span class=\"s1\">'John'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">one</span><span class=\"p\">(</span><span class=\"n\">withrank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">playlist</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"p\">[</span>\n  <span class=\"n\">SortedValue</span><span class=\"p\">(</span>\n    <span class=\"n\">rank</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'imagine'</span>\n  <span class=\"p\">),</span>\n  <span class=\"n\">SortedValue</span><span class=\"p\">(</span>\n    <span class=\"n\">rank</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n    <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'come-together'</span>\n  <span class=\"p\">)</span>\n<span class=\"p\">]</span>\n</pre>\n\n          </div>"}, "last_serial": 5841163, "releases": {"0.0.10": [{"comment_text": "", "digests": {"md5": "40a4c7d51435ee31975048998ac63d32", "sha256": "e33270b8785457fa55559c243f45c9b22a6c41da422ed4b5cdf035ce400a57df"}, "downloads": -1, "filename": "dataclassesdb-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "40a4c7d51435ee31975048998ac63d32", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 4014, "upload_time": "2019-09-17T10:54:30", "upload_time_iso_8601": "2019-09-17T10:54:30.636863Z", "url": "https://files.pythonhosted.org/packages/f7/b1/da29063e51d0caf02fbb1f9720bf088766fac4170e088c6c862d0f43a8c4/dataclassesdb-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0f4dd05d88a895b67bb6a02fc260a6c", "sha256": "6bd41bebcd8f388fd450035eb378c0b93ce1f43ab2dad4a67738ebcd5521900f"}, "downloads": -1, "filename": "dataclassesdb-0.0.10.tar.gz", "has_sig": false, "md5_digest": "c0f4dd05d88a895b67bb6a02fc260a6c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 10392, "upload_time": "2019-09-17T10:54:34", "upload_time_iso_8601": "2019-09-17T10:54:34.441015Z", "url": "https://files.pythonhosted.org/packages/e9/ce/d6c824b26d3d2b06f4e2a93c533328962585c0fcebb6bfb36b39d8bf95e0/dataclassesdb-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "10fb013f04e94ef0c4ad0a07548c3f2d", "sha256": "4bcdf612415bc9dfe964981491c1ca3c2be580554fadf5635af7658688603925"}, "downloads": -1, "filename": "dataclassesdb-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "10fb013f04e94ef0c4ad0a07548c3f2d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 4014, "upload_time": "2019-09-17T11:15:46", "upload_time_iso_8601": "2019-09-17T11:15:46.636874Z", "url": "https://files.pythonhosted.org/packages/e6/b0/e50b687329be5bc1dc792c456765cf4ebdcdc13ce46bbace7b851c2d6594/dataclassesdb-0.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a20e6d5b4014740c9bf09d8bc0ff494b", "sha256": "978c2137e6a58d43a40791d543170b213dd33c4d8218322c15da35f3e053d664"}, "downloads": -1, "filename": "dataclassesdb-0.0.11.tar.gz", "has_sig": false, "md5_digest": "a20e6d5b4014740c9bf09d8bc0ff494b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 14731, "upload_time": "2019-09-17T11:15:49", "upload_time_iso_8601": "2019-09-17T11:15:49.038777Z", "url": "https://files.pythonhosted.org/packages/69/6a/8603b6ce811d946a4a16f7676e091beb9a682fcfa3636d553b4ff37ca00c/dataclassesdb-0.0.11.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "10fb013f04e94ef0c4ad0a07548c3f2d", "sha256": "4bcdf612415bc9dfe964981491c1ca3c2be580554fadf5635af7658688603925"}, "downloads": -1, "filename": "dataclassesdb-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "10fb013f04e94ef0c4ad0a07548c3f2d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 4014, "upload_time": "2019-09-17T11:15:46", "upload_time_iso_8601": "2019-09-17T11:15:46.636874Z", "url": "https://files.pythonhosted.org/packages/e6/b0/e50b687329be5bc1dc792c456765cf4ebdcdc13ce46bbace7b851c2d6594/dataclassesdb-0.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a20e6d5b4014740c9bf09d8bc0ff494b", "sha256": "978c2137e6a58d43a40791d543170b213dd33c4d8218322c15da35f3e053d664"}, "downloads": -1, "filename": "dataclassesdb-0.0.11.tar.gz", "has_sig": false, "md5_digest": "a20e6d5b4014740c9bf09d8bc0ff494b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 14731, "upload_time": "2019-09-17T11:15:49", "upload_time_iso_8601": "2019-09-17T11:15:49.038777Z", "url": "https://files.pythonhosted.org/packages/69/6a/8603b6ce811d946a4a16f7676e091beb9a682fcfa3636d553b4ff37ca00c/dataclassesdb-0.0.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:28 2020"}