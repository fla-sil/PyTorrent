{"info": {"author": null, "author_email": null, "bugtrack_url": null, "classifiers": [], "description": "Django User Map\n=================\n\nDjango User Map is a reusable django application for making community user's map. This app relies on the active auth user model and extend that model with OneToOne relationship. Users can add themselves on the map by providing some additional information:\n\n1. Location on the map\n2. Roles (the choices can be configured through setting)\n3. Image, and\n4. Website\n\nRead here for the documentation: www.akbargumbira.com/django-user-map\n\n## Installation\n* Install django-user-map with pip:\n\n```python\npip install django-user-map\n```\n\n* Make sure you have these modules in INSTALLED_APPS of your django project settings.py:\n\n```python\nINSTALLED_APPS = (\n    'django.contrib.gis',\n    'user_map',\n    'leaflet',\n    'bootstrapform',\n    'rest_framework',\n    'rest_framework_gis'\n)\n```\n\n* Include user-map URLconf in your project urls.py with namespace user_map (required) e.g:\n\n```python\nurl(r'^user-map/', include('user_map.urls', namespace='user_map')),\n```\n\n* Configure user map with USER_MAP variable in your project's settings.py or override some templates. See [Configurations](#configurations) section for further information.\n\n* Run ```python manage.py migrate user_map``` to migrate the ```user_map``` \nmodels. \n\n* Visit the URL that you set before to see the apps.\n\n\n## Configurations\nYou can configure Django User Map with one single USER_MAP variable in project's settings.py. The setting below is the default. Add this default to your project's setting and configure the necessary bits that you want to change:\n\n```python   \nUSER_MAP = {\n    'project_name': 'Django',\n    'favicon_file': '',\n    'login_view': 'django.contrib.auth.views.login',\n    'marker': {\n        # See leaflet icon valid options here:\n        # http://leafletjs.com /reference.html#icon-iconurl\n        'iconUrl': 'static/user_map/img/user-icon.png',\n        'shadowUrl': 'static/user_map/img/shadow-icon.png',\n        'iconSize': [19, 32],\n        'shadowSize': [42, 35],\n        'iconAnchor': [10, 0],\n        'shadowAnchor': [12, 0],\n    },\n    'leaflet_config': {\n        'TILES': [(\n            # The title\n            'MapQuest',\n            # Tile's URL\n            'http://otile{s}.mqcdn.com/tiles/1.0.0/osm/{z}/{x}/{y}.png',\n            # More valid leaflet option are passed here\n            # See here: http://leafletjs.com/reference.html#tilelayer\n            {\n                'attribution':\n                    '\u00a9 <a href=\"http://www.openstreetmap.org\" '\n                    'target=\"_parent\">OpenStreetMap'\n                    '</a> and contributors, under an <a '\n                    'href=\"http://www.openstreetmap.org/copyright\" '\n                    'target=\"_parent\">open license</a>. Tiles Courtesy of '\n                    '<a '\n                    'href=\"http://www.mapquest.com/\">MapQuest</a> <img '\n                    'src=\"http://developer.mapquest.com/content/osm/mq_logo'\n                    '.png\"',\n                'subdomains': '1234'\n\n            }\n        )]\n    },\n    'roles': [\n        {\n            'id': 1,\n            'name': 'Django User',\n            'badge': 'user_map/img/badge-user.png'\n        },\n        {\n            'id': 2,\n            'name': 'Django Trainer',\n            'badge': 'user_map/img/badge-trainer.png'\n        },\n        {\n            'id': 3,\n            'name': 'Django Developer',\n            'badge': 'user_map/img/badge-developer.png'\n        }\n    ],\n    'api_user_fields': [\n        # e.g 'username', 'first_name', 'last_name'\n    ],\n}\n```\n\n### Project Name\nThis variable (```project_name```) represents the project name of the apps. If this is not specified, 'Django' will be used.\n\n### Favicon\nThis variable (```favicon_file```) represents the file path to the favicon on the browser's tab. You can point it to any files in your static dirs from any apps.\n   \n### Login View\nDjango User Map relies on the auth user model in your project. For users to be able to add (or update) themselves, they need to log in first. You can point it to the view function e.g ```'login_view': 'django.contrib.auth.views.login'``` or even to the view name e.g ```'login_view': 'fe_login'```\n\n### Marker\nThis variable represents the marker icon on the map. You can use any valid Leaflet ```L.icon``` options. Read here for the valid options http://leafletjs.com/reference.html#icon-iconurl \n\nAn example for this variable:\n\n```python\n'marker': {\n    'iconUrl': 'static/user_map/img/user-icon.png',\n    'shadowUrl': 'static/user_map/img/shadow-icon.png',\n    'iconSize': [19, 32],\n    'shadowSize': [42, 35],\n    'iconAnchor': [10, 0],\n    'shadowAnchor': [12, 0],\n}\n```\n\n### Map Configuration\nYou can configure the basemap of the form that uses LeafletWidget and the basemap of the homepage through  ```leaflet_config``` variable in settings.py. You can also pass leaflet tile layer options (read here: http://leafletjs.com/reference.html#tilelayer):\n\n```python\n'leaflet_config': {\n    'TILES': [(\n        # The title\n        'MapQuest',\n        # Tile's URL\n        'http://otile{s}.mqcdn.com/tiles/1.0.0/osm/{z}/{x}/{y}.png',\n        # More valid leaflet option are passed here\n        {\n            'attribution':\n                '\u00a9 <a href=\"http://www.openstreetmap.org\" '\n                'target=\"_parent\">OpenStreetMap'\n                '</a> and contributors, under an <a '\n                'href=\"http://www.openstreetmap.org/copyright\" '\n                'target=\"_parent\">open license</a>. Tiles Courtesy of '\n                '<a '\n                'href=\"http://www.mapquest.com/\">MapQuest</a> <img '\n                'src=\"http://developer.mapquest.com/content/osm/mq_logo'\n                '.png\"',\n            'subdomains': '1234'\n\n        }\n    )]\n},\n```\n\n### Roles\n\nUsing ```roles```, you can specify the user's role, its name, and its badge path. User can select multiple roles. On the map, visitors of the apps can also filter the marker (users) based on their role(s).If not specified, this variable will take this as the default:\n   \n```python\n'roles': [\n        {\n            'id': 1,\n            'name': 'Django User',\n            'badge': 'user_map/img/badge-user.png'\n        },\n        {\n            'id': 2,\n            'name': 'Django Trainer',\n            'badge': 'user_map/img/badge-trainer.png'\n        },\n        {\n            'id': 3,\n            'name': 'Django Developer',\n            'badge': 'user_map/img/badge-developer.png'\n        }\n    ],\n}\n```\n   \n### User Fields\nUser fields are list of field from user model (AUTH_USER_MODEL) that will be shown on the popup content and will be added to the REST API. To specify which fields that should be visible from user model, you can configure it through ```api_user_fields``` as a list of fields. For example if you want to show username field from the user model, you must add this setting:`\n\n```python\n'api_user_fields': ['username'],\n```\n\n## Updating Roles\nIf in any case you need to update or change roles in ```settings.py``` after the ```user_map``` models are migrated, you must run django management command:\n \n```python\npython manage.py update_roles\n```\n\nBear in mind that you should not change the id's and just change the name or the badge path. \n\nThis command also will only update the role table, not the usermap table that uses the role table. So, adding roles is fine (as long as the new id's are unique). Removing roles has no effect (it will not remove the row in the table). Well, it could give you problems as it means that some of the users might not have valid roles defined in the role table.\n\n\n## Changing Template\nYou can change the content of the data privacy (the modal popped up when user clicks 'Data Privacy' link at the bottom left of the map) or add navigation  menu. By  default, there is no navigation menu - the map will use the whole screen.\n \n### Data Privacy\nTo modify data privacy content, create a directory ```user_map``` under ```templates``` dir of your Django project and create html file named ```data_privacy.html```. The default content of this template looks like this:\n\n```html\n<script id=\"data-privacy-content-section\" type=\"text/template\">\n  The data you enter on this site may be visible to others. We suggest that\n  you approximate your physical location to the nearest\n  town or major center. Parts of your data will be made available for\n  others to download and use. Click the REST API link to see the data that are\n  available for public to use.\n</script>\n```\n\nIn the new ```data_privacy.html``` file, copy that and edit the wording yourself. Note that the ```<script>``` tag is needed completely with the same ```id``` and ```type```.\n\n\n### Navigation\nBy default, the map showing all users does not have navigation menu. This is how it looks like without the navigation menu:\n\n![User Map without Navigation](docs/img/without_nav.png)\n\nBut you can add a navigation menu so it looks like this as an example:\n\n![User Map with Navigation](docs/img/with_nav.png)\n\nTo add navigation menu, add html file named ```navigation.html``` in ```user_map/templates/``` dir under your project's directory (along with your custom data privacy content) \n\nIf you need more style or javascript resources to create this navigation menu, please add another template named ```extra_resources.html``` and save it in the same directory with the ```navigation.html```. These additional resources will be included in the head tag, so the content could be something like:\n \n```html\n<link rel=\"stylesheet\" href=\"/static/style/new/basic.css\" type=\"text/css\" />\n<link rel=\"stylesheet\" href=\"/static/bootstrap/css/bootstrap.min.css\" type=\"text/css\" />\n<link rel=\"stylesheet\" href=\"/static/style/new/qgis-style.css\" type=\"text/css\" />\n<link rel=\"stylesheet\" href=\"/static/bootstrap/css/bootstrap-responsive.min.css\" type=\"text/css\" />\n<link rel=\"stylesheet\" href=\"/static/font-awesome/css/font-awesome.min.css\">\n\n\n<style>\n  body {\n    padding-top : 0px !important;\n  }\n  .navbar-fixed-top {\n    position: relative;\n  }\n</style>\n```\n \n## Testing\n\nYou can run the test suite by using django manage.py from your django project:\n```\npython manage.py test user_map\n```\n\nor you can do it from the root of this django apps by running:\n```\npython setup.py test\n```\n\n## Status\n[![Develop Branch](https://api.travis-ci.org/akbargumbira/django-user-map.svg?branch=develop)](https://travis-ci.org/akbargumbira/django-user-map)\n[![Coverage Status](https://coveralls.io/repos/github/akbargumbira/django-user-map/badge.svg?branch=develop)](https://coveralls.io/github/akbargumbira/django-user-map?branch=develop)\n", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": null, "keywords": null, "license": null, "maintainer": null, "maintainer_email": null, "name": "django-user-map", "package_url": "https://pypi.org/project/django-user-map/", "platform": null, "project_url": "https://pypi.org/project/django-user-map/", "project_urls": null, "release_url": "https://pypi.org/project/django-user-map/1.1.1/", "requires_dist": null, "requires_python": null, "summary": null, "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Django User Map<br>=================<br><br>Django User Map is a reusable django application for making community user's map. This app relies on the active auth user model and extend that model with OneToOne relationship. Users can add themselves on the map by providing some additional information:<br><br>1. Location on the map<br>2. Roles (the choices can be configured through setting)<br>3. Image, and<br>4. Website<br><br>Read here for the documentation: www.akbargumbira.com/django-user-map<br><br>## Installation<br>* Install django-user-map with pip:<br><br>```python<br>pip install django-user-map<br>```<br><br>* Make sure you have these modules in INSTALLED_APPS of your django project settings.py:<br><br>```python<br>INSTALLED_APPS = (<br>    'django.contrib.gis',<br>    'user_map',<br>    'leaflet',<br>    'bootstrapform',<br>    'rest_framework',<br>    'rest_framework_gis'<br>)<br>```<br><br>* Include user-map URLconf in your project urls.py with namespace user_map (required) e.g:<br><br>```python<br>url(r'^user-map/', include('user_map.urls', namespace='user_map')),<br>```<br><br>* Configure user map with USER_MAP variable in your project's settings.py or override some templates. See [Configurations](#configurations) section for further information.<br><br>* Run ```python manage.py migrate user_map``` to migrate the ```user_map``` <br>models. <br><br>* Visit the URL that you set before to see the apps.<br><br><br>## Configurations<br>You can configure Django User Map with one single USER_MAP variable in project's settings.py. The setting below is the default. Add this default to your project's setting and configure the necessary bits that you want to change:<br><br>```python   <br>USER_MAP = {<br>    'project_name': 'Django',<br>    'favicon_file': '',<br>    'login_view': 'django.contrib.auth.views.login',<br>    'marker': {<br>        # See leaflet icon valid options here:<br>        # http://leafletjs.com /reference.html#icon-iconurl<br>        'iconUrl': 'static/user_map/img/user-icon.png',<br>        'shadowUrl': 'static/user_map/img/shadow-icon.png',<br>        'iconSize': [19, 32],<br>        'shadowSize': [42, 35],<br>        'iconAnchor': [10, 0],<br>        'shadowAnchor': [12, 0],<br>    },<br>    'leaflet_config': {<br>        'TILES': [(<br>            # The title<br>            'MapQuest',<br>            # Tile's URL<br>            'http://otile{s}.mqcdn.com/tiles/1.0.0/osm/{z}/{x}/{y}.png',<br>            # More valid leaflet option are passed here<br>            # See here: http://leafletjs.com/reference.html#tilelayer<br>            {<br>                'attribution':<br>                    '\u00a9 &lt;a href=\"http://www.openstreetmap.org\" '<br>                    'target=\"_parent\"&gt;OpenStreetMap'<br>                    '&lt;/a&gt; and contributors, under an &lt;a '<br>                    'href=\"http://www.openstreetmap.org/copyright\" '<br>                    'target=\"_parent\"&gt;open license&lt;/a&gt;. Tiles Courtesy of '<br>                    '&lt;a '<br>                    'href=\"http://www.mapquest.com/\"&gt;MapQuest&lt;/a&gt; &lt;img '<br>                    'src=\"http://developer.mapquest.com/content/osm/mq_logo'<br>                    '.png\"',<br>                'subdomains': '1234'<br><br>            }<br>        )]<br>    },<br>    'roles': [<br>        {<br>            'id': 1,<br>            'name': 'Django User',<br>            'badge': 'user_map/img/badge-user.png'<br>        },<br>        {<br>            'id': 2,<br>            'name': 'Django Trainer',<br>            'badge': 'user_map/img/badge-trainer.png'<br>        },<br>        {<br>            'id': 3,<br>            'name': 'Django Developer',<br>            'badge': 'user_map/img/badge-developer.png'<br>        }<br>    ],<br>    'api_user_fields': [<br>        # e.g 'username', 'first_name', 'last_name'<br>    ],<br>}<br>```<br><br>### Project Name<br>This variable (```project_name```) represents the project name of the apps. If this is not specified, 'Django' will be used.<br><br>### Favicon<br>This variable (```favicon_file```) represents the file path to the favicon on the browser's tab. You can point it to any files in your static dirs from any apps.<br>   <br>### Login View<br>Django User Map relies on the auth user model in your project. For users to be able to add (or update) themselves, they need to log in first. You can point it to the view function e.g ```'login_view': 'django.contrib.auth.views.login'``` or even to the view name e.g ```'login_view': 'fe_login'```<br><br>### Marker<br>This variable represents the marker icon on the map. You can use any valid Leaflet ```L.icon``` options. Read here for the valid options http://leafletjs.com/reference.html#icon-iconurl <br><br>An example for this variable:<br><br>```python<br>'marker': {<br>    'iconUrl': 'static/user_map/img/user-icon.png',<br>    'shadowUrl': 'static/user_map/img/shadow-icon.png',<br>    'iconSize': [19, 32],<br>    'shadowSize': [42, 35],<br>    'iconAnchor': [10, 0],<br>    'shadowAnchor': [12, 0],<br>}<br>```<br><br>### Map Configuration<br>You can configure the basemap of the form that uses LeafletWidget and the basemap of the homepage through  ```leaflet_config``` variable in settings.py. You can also pass leaflet tile layer options (read here: http://leafletjs.com/reference.html#tilelayer):<br><br>```python<br>'leaflet_config': {<br>    'TILES': [(<br>        # The title<br>        'MapQuest',<br>        # Tile's URL<br>        'http://otile{s}.mqcdn.com/tiles/1.0.0/osm/{z}/{x}/{y}.png',<br>        # More valid leaflet option are passed here<br>        {<br>            'attribution':<br>                '\u00a9 &lt;a href=\"http://www.openstreetmap.org\" '<br>                'target=\"_parent\"&gt;OpenStreetMap'<br>                '&lt;/a&gt; and contributors, under an &lt;a '<br>                'href=\"http://www.openstreetmap.org/copyright\" '<br>                'target=\"_parent\"&gt;open license&lt;/a&gt;. Tiles Courtesy of '<br>                '&lt;a '<br>                'href=\"http://www.mapquest.com/\"&gt;MapQuest&lt;/a&gt; &lt;img '<br>                'src=\"http://developer.mapquest.com/content/osm/mq_logo'<br>                '.png\"',<br>            'subdomains': '1234'<br><br>        }<br>    )]<br>},<br>```<br><br>### Roles<br><br>Using ```roles```, you can specify the user's role, its name, and its badge path. User can select multiple roles. On the map, visitors of the apps can also filter the marker (users) based on their role(s).If not specified, this variable will take this as the default:<br>   <br>```python<br>'roles': [<br>        {<br>            'id': 1,<br>            'name': 'Django User',<br>            'badge': 'user_map/img/badge-user.png'<br>        },<br>        {<br>            'id': 2,<br>            'name': 'Django Trainer',<br>            'badge': 'user_map/img/badge-trainer.png'<br>        },<br>        {<br>            'id': 3,<br>            'name': 'Django Developer',<br>            'badge': 'user_map/img/badge-developer.png'<br>        }<br>    ],<br>}<br>```<br>   <br>### User Fields<br>User fields are list of field from user model (AUTH_USER_MODEL) that will be shown on the popup content and will be added to the REST API. To specify which fields that should be visible from user model, you can configure it through ```api_user_fields``` as a list of fields. For example if you want to show username field from the user model, you must add this setting:`<br><br>```python<br>'api_user_fields': ['username'],<br>```<br><br>## Updating Roles<br>If in any case you need to update or change roles in ```settings.py``` after the ```user_map``` models are migrated, you must run django management command:<br> <br>```python<br>python manage.py update_roles<br>```<br><br>Bear in mind that you should not change the id's and just change the name or the badge path. <br><br>This command also will only update the role table, not the usermap table that uses the role table. So, adding roles is fine (as long as the new id's are unique). Removing roles has no effect (it will not remove the row in the table). Well, it could give you problems as it means that some of the users might not have valid roles defined in the role table.<br><br><br>## Changing Template<br>You can change the content of the data privacy (the modal popped up when user clicks 'Data Privacy' link at the bottom left of the map) or add navigation  menu. By  default, there is no navigation menu - the map will use the whole screen.<br> <br>### Data Privacy<br>To modify data privacy content, create a directory ```user_map``` under ```templates``` dir of your Django project and create html file named ```data_privacy.html```. The default content of this template looks like this:<br><br>```html<br>&lt;script id=\"data-privacy-content-section\" type=\"text/template\"&gt;<br>  The data you enter on this site may be visible to others. We suggest that<br>  you approximate your physical location to the nearest<br>  town or major center. Parts of your data will be made available for<br>  others to download and use. Click the REST API link to see the data that are<br>  available for public to use.<br>&lt;/script&gt;<br>```<br><br>In the new ```data_privacy.html``` file, copy that and edit the wording yourself. Note that the ```&lt;script&gt;``` tag is needed completely with the same ```id``` and ```type```.<br><br><br>### Navigation<br>By default, the map showing all users does not have navigation menu. This is how it looks like without the navigation menu:<br><br>![User Map without Navigation](docs/img/without_nav.png)<br><br>But you can add a navigation menu so it looks like this as an example:<br><br>![User Map with Navigation](docs/img/with_nav.png)<br><br>To add navigation menu, add html file named ```navigation.html``` in ```user_map/templates/``` dir under your project's directory (along with your custom data privacy content) <br><br>If you need more style or javascript resources to create this navigation menu, please add another template named ```extra_resources.html``` and save it in the same directory with the ```navigation.html```. These additional resources will be included in the head tag, so the content could be something like:<br> <br>```html<br>&lt;link rel=\"stylesheet\" href=\"/static/style/new/basic.css\" type=\"text/css\" /&gt;<br>&lt;link rel=\"stylesheet\" href=\"/static/bootstrap/css/bootstrap.min.css\" type=\"text/css\" /&gt;<br>&lt;link rel=\"stylesheet\" href=\"/static/style/new/qgis-style.css\" type=\"text/css\" /&gt;<br>&lt;link rel=\"stylesheet\" href=\"/static/bootstrap/css/bootstrap-responsive.min.css\" type=\"text/css\" /&gt;<br>&lt;link rel=\"stylesheet\" href=\"/static/font-awesome/css/font-awesome.min.css\"&gt;<br><br><br>&lt;style&gt;<br>  body {<br>    padding-top : 0px !important;<br>  }<br>  .navbar-fixed-top {<br>    position: relative;<br>  }<br>&lt;/style&gt;<br>```<br> <br>## Testing<br><br>You can run the test suite by using django manage.py from your django project:<br>```<br>python manage.py test user_map<br>```<br><br>or you can do it from the root of this django apps by running:<br>```<br>python setup.py test<br>```<br><br>## Status<br>[![Develop Branch](https://api.travis-ci.org/akbargumbira/django-user-map.svg?branch=develop)](https://travis-ci.org/akbargumbira/django-user-map)<br>[![Coverage Status](https://coveralls.io/repos/github/akbargumbira/django-user-map/badge.svg?branch=develop)](https://coveralls.io/github/akbargumbira/django-user-map?branch=develop)<br>\n          </div>"}, "last_serial": 2139354, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a84243d0d925784fa139758bc47cd4c4", "sha256": "0a827f0edb1a7b790786b40491e0b42da5ffd02d9487d90607f7769c3ed32f2e"}, "downloads": -1, "filename": "django-user-map-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a84243d0d925784fa139758bc47cd4c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 212504, "upload_time": "2014-09-11T09:51:55", "upload_time_iso_8601": "2014-09-11T09:51:55.881999Z", "url": "https://files.pythonhosted.org/packages/18/ba/861935558d53fcf330a26d6abb109f9e8659b9d42f34ca22182c0a402292/django-user-map-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "06890f9ef862c97dc63253c4afd4201f", "sha256": "f3059aa08595d48089387ad54279badc75ef550eb32694f1d1ef36e7d808f2ac"}, "downloads": -1, "filename": "django-user-map-0.1.1.tar.gz", "has_sig": false, "md5_digest": "06890f9ef862c97dc63253c4afd4201f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 215384, "upload_time": "2014-09-30T08:41:31", "upload_time_iso_8601": "2014-09-30T08:41:31.526330Z", "url": "https://files.pythonhosted.org/packages/b1/16/1ec917df21ef17f4c5eaf4bbcc1cb909665dd04343c40325d01610dafb8c/django-user-map-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "b207044e341bfdfc3762cfd7aef6fbbf", "sha256": "112e3397b39d84192a3063534df9149b7e2583580e17c3c4238b5d5037100ef2"}, "downloads": -1, "filename": "django-user-map-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b207044e341bfdfc3762cfd7aef6fbbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 215145, "upload_time": "2014-11-12T07:43:00", "upload_time_iso_8601": "2014-11-12T07:43:00.949055Z", "url": "https://files.pythonhosted.org/packages/96/0d/611497c751c903d2dcb7d1662f44b9cc1bd7e42af5216aa44a8c4125eaa4/django-user-map-0.1.2.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "921df2040558a6fe8098b51df08a94ff", "sha256": "d653eca65d084e1af3186588a7ad2dd1796a05d6d50becf27a7304ec7c40ac24"}, "downloads": -1, "filename": "django-user-map-1.0.0.tar.gz", "has_sig": false, "md5_digest": "921df2040558a6fe8098b51df08a94ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 221750, "upload_time": "2016-03-06T21:06:15", "upload_time_iso_8601": "2016-03-06T21:06:15.822160Z", "url": "https://files.pythonhosted.org/packages/49/27/b1226653665a4a94aa26d1ccc743ec74b82dd06e833495a2e8e523dc27b0/django-user-map-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "96e48889cd9bedb76c29a262ddeb2083", "sha256": "aaa1dcbcd8fcbc5bfda4014f7c214ce1e07009d81f31bdef73c162d6ea85b3c5"}, "downloads": -1, "filename": "django-user-map-1.1.0.tar.gz", "has_sig": false, "md5_digest": "96e48889cd9bedb76c29a262ddeb2083", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 240226, "upload_time": "2016-03-10T22:54:09", "upload_time_iso_8601": "2016-03-10T22:54:09.622399Z", "url": "https://files.pythonhosted.org/packages/6a/01/1f38ce68599d9c64a27ddd2464c312f8db0f104ce2be8a35d91458251504/django-user-map-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "6db5bb16165cc9f07d1e874793918b44", "sha256": "45e2592086bdc92b492bea9887368c010aac12a7c4b52c35f2c7ebd6aeb8829e"}, "downloads": -1, "filename": "django-user-map-1.1.1.tar.gz", "has_sig": false, "md5_digest": "6db5bb16165cc9f07d1e874793918b44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 240260, "upload_time": "2016-05-29T10:29:14", "upload_time_iso_8601": "2016-05-29T10:29:14.082733Z", "url": "https://files.pythonhosted.org/packages/c1/62/e351c66f1f393797a09bcefa256df1d678fda1470a62ece20b48f6c56c95/django-user-map-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6db5bb16165cc9f07d1e874793918b44", "sha256": "45e2592086bdc92b492bea9887368c010aac12a7c4b52c35f2c7ebd6aeb8829e"}, "downloads": -1, "filename": "django-user-map-1.1.1.tar.gz", "has_sig": false, "md5_digest": "6db5bb16165cc9f07d1e874793918b44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 240260, "upload_time": "2016-05-29T10:29:14", "upload_time_iso_8601": "2016-05-29T10:29:14.082733Z", "url": "https://files.pythonhosted.org/packages/c1/62/e351c66f1f393797a09bcefa256df1d678fda1470a62ece20b48f6c56c95/django-user-map-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:08 2020"}