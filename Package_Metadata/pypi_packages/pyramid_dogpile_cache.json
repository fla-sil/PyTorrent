{"info": {"author": "Moriyoshi Koizumi", "author_email": "mozo@mozo.jp", "bugtrack_url": null, "classifiers": ["Framework :: Pyramid", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "Introduction\n============\n\n``pyramid_dogpile_cache`` is a tiny dogpile cache factory for Pyramid. \n\nSetup\n=====\n\nPut ``config.include('pyramid_dogpile_cache')`` somewhere in your startup code:\n\n.. code-block:: python\n\n   config = Configurator(...)\n   config.include('pyramid_dogpile_cache')\n\nOr alternatively you can add ``pyramid_dogpile_cache`` to the ``pyramid.includes`` list in the configuration:\n\n.. code-block:: ini\n\n    pyramid.includes = pyramid_dogpile_cache\n\nUsage in Code\n=============\n\n``pyramid_dogpile_cache.get_region`` is the only API.\n\n.. code-block:: python\n\n   from pyramid_dogpile_cache import get_region\n   region = get_region('foo')\n   # ... do whatever operation on the cache region ...\n\n\nSettings\n========\n\n``dogpile_cache.regions``\n\n    A list of region names to initialize through the factory.\n    Regions can be separated by either spaces or commas.\n\n``dogpile_cache.backend``\n\n    The default backend for cache regions.  You can later override it with the region-specific setting.\n\n``dogpile_cache.expire``\n\n    The default expiration time for cache regions.  You can later override it with the region-specific setting.\n\n``dogpile_cache.arguments.*``\n\n    The arguments for the default backend.  You can later override it with the region-specific setting.\n\n\n``dogpile_cache.function_key_generator``\n\n    Passed to ``make_region()``.  \n\n``dogpile_cache.key_mangler``\n\n    Passed to ``make_region()``.\n\n``dogpile_cache.async_creation_runner``\n\n    Passed to ``make_region()``.\n\n``dogpile_cache.REGION.*``\n\n    Each set of region-specific settings is prefixed with the region name followed by the setting name.  For example, settings for region ``foo`` can be like the following:\n\n    .. code-block:: ini\n\n       ; global settings\n       dogpile_cache.backend = file\n\n       ; settings for foo\n       dogpile_cache.foo.backend = redis\n       dogpile_cache.foo.arguments.host = 127.0.0.1\n       dogpile_cache.foo.arguments.port = 6379\n       dogpile_cache.foo.arguments.db = 0\n       dogpile_cache.foo.arguments.redis_expiration_time = 7200\n       dogpile_cache.foo.arguments.distributed_lock = 1\n\n\n\nContributors\n============\n\n- Moriyoshi Koizumi\n\nChangelog\n=========\n\n0.0.1\n--------------------\n\n- first release\n\n\n0.0.2\n--------------------\n\n- minor documentation fixes\n\n0.0.3\n--------------------\n\n- license inclusion (MIT)\n\n0.0.4\n--------------------\n\n- packaging fix", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/moriyoshi/pyramid_dogpile_cache", "keywords": "web wsgi pylons pyramid dogpile cache", "license": "mit", "maintainer": null, "maintainer_email": null, "name": "pyramid_dogpile_cache", "package_url": "https://pypi.org/project/pyramid_dogpile_cache/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyramid_dogpile_cache/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/moriyoshi/pyramid_dogpile_cache"}, "release_url": "https://pypi.org/project/pyramid_dogpile_cache/0.0.4/", "requires_dist": null, "requires_python": null, "summary": "dogpile.cache factory for Pyramid", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p><tt>pyramid_dogpile_cache</tt> is a tiny dogpile cache factory for Pyramid.</p>\n</div>\n<div id=\"setup\">\n<h2>Setup</h2>\n<p>Put <tt><span class=\"pre\">config.include('pyramid_dogpile_cache')</span></tt> somewhere in your startup code:</p>\n<pre><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">Configurator</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'pyramid_dogpile_cache'</span><span class=\"p\">)</span>\n</pre>\n<p>Or alternatively you can add <tt>pyramid_dogpile_cache</tt> to the <tt>pyramid.includes</tt> list in the configuration:</p>\n<pre><span class=\"na\">pyramid.includes</span> <span class=\"o\">=</span> <span class=\"s\">pyramid_dogpile_cache</span>\n</pre>\n</div>\n<div id=\"usage-in-code\">\n<h2>Usage in Code</h2>\n<p><tt>pyramid_dogpile_cache.get_region</tt> is the only API.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyramid_dogpile_cache</span> <span class=\"kn\">import</span> <span class=\"n\">get_region</span>\n<span class=\"n\">region</span> <span class=\"o\">=</span> <span class=\"n\">get_region</span><span class=\"p\">(</span><span class=\"s1\">'foo'</span><span class=\"p\">)</span>\n<span class=\"c1\"># ... do whatever operation on the cache region ...</span>\n</pre>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p><tt>dogpile_cache.regions</tt></p>\n<blockquote>\nA list of region names to initialize through the factory.\nRegions can be separated by either spaces or commas.</blockquote>\n<p><tt>dogpile_cache.backend</tt></p>\n<blockquote>\nThe default backend for cache regions.  You can later override it with the region-specific setting.</blockquote>\n<p><tt>dogpile_cache.expire</tt></p>\n<blockquote>\nThe default expiration time for cache regions.  You can later override it with the region-specific setting.</blockquote>\n<p><tt>dogpile_cache.arguments.*</tt></p>\n<blockquote>\nThe arguments for the default backend.  You can later override it with the region-specific setting.</blockquote>\n<p><tt>dogpile_cache.function_key_generator</tt></p>\n<blockquote>\nPassed to <tt>make_region()</tt>.</blockquote>\n<p><tt>dogpile_cache.key_mangler</tt></p>\n<blockquote>\nPassed to <tt>make_region()</tt>.</blockquote>\n<p><tt>dogpile_cache.async_creation_runner</tt></p>\n<blockquote>\nPassed to <tt>make_region()</tt>.</blockquote>\n<p><tt>dogpile_cache.REGION.*</tt></p>\n<blockquote>\n<p>Each set of region-specific settings is prefixed with the region name followed by the setting name.  For example, settings for region <tt>foo</tt> can be like the following:</p>\n<pre><span class=\"c1\">; global settings</span>\n<span class=\"na\">dogpile_cache.backend</span> <span class=\"o\">=</span> <span class=\"s\">file</span>\n\n<span class=\"c1\">; settings for foo</span>\n<span class=\"na\">dogpile_cache.foo.backend</span> <span class=\"o\">=</span> <span class=\"s\">redis</span>\n<span class=\"na\">dogpile_cache.foo.arguments.host</span> <span class=\"o\">=</span> <span class=\"s\">127.0.0.1</span>\n<span class=\"na\">dogpile_cache.foo.arguments.port</span> <span class=\"o\">=</span> <span class=\"s\">6379</span>\n<span class=\"na\">dogpile_cache.foo.arguments.db</span> <span class=\"o\">=</span> <span class=\"s\">0</span>\n<span class=\"na\">dogpile_cache.foo.arguments.redis_expiration_time</span> <span class=\"o\">=</span> <span class=\"s\">7200</span>\n<span class=\"na\">dogpile_cache.foo.arguments.distributed_lock</span> <span class=\"o\">=</span> <span class=\"s\">1</span>\n</pre>\n</blockquote>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<ul>\n<li>Moriyoshi Koizumi</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.0.1</h3>\n<ul>\n<li>first release</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.0.2</h3>\n<ul>\n<li>minor documentation fixes</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.0.3</h3>\n<ul>\n<li>license inclusion (MIT)</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.0.4</h3>\n<ul>\n<li>packaging fix</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1231255, "releases": {"0.0.4": [{"comment_text": "", "digests": {"md5": "2184aeb42c78ad9b4e7f38c6b8d2942e", "sha256": "220ef5fc2bf78f579b56986b9eb9cb44e3256b106566c154745e0a0e9070bcc2"}, "downloads": -1, "filename": "pyramid_dogpile_cache-0.0.4.tar.gz", "has_sig": false, "md5_digest": "2184aeb42c78ad9b4e7f38c6b8d2942e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5217, "upload_time": "2014-09-20T01:28:58", "upload_time_iso_8601": "2014-09-20T01:28:58.533061Z", "url": "https://files.pythonhosted.org/packages/1d/ee/bc8129aec655b1a1d58e0b76d4dd46494924986115ade46fc4a00411392c/pyramid_dogpile_cache-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2184aeb42c78ad9b4e7f38c6b8d2942e", "sha256": "220ef5fc2bf78f579b56986b9eb9cb44e3256b106566c154745e0a0e9070bcc2"}, "downloads": -1, "filename": "pyramid_dogpile_cache-0.0.4.tar.gz", "has_sig": false, "md5_digest": "2184aeb42c78ad9b4e7f38c6b8d2942e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5217, "upload_time": "2014-09-20T01:28:58", "upload_time_iso_8601": "2014-09-20T01:28:58.533061Z", "url": "https://files.pythonhosted.org/packages/1d/ee/bc8129aec655b1a1d58e0b76d4dd46494924986115ade46fc4a00411392c/pyramid_dogpile_cache-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:29 2020"}