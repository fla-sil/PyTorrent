{"info": {"author": "Pahaz Blinov", "author_email": "pahaz.blinov@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Build Tools"], "description": "|CircleCI| |AppVeyor| |readthedocs| |coveralls| |version|\n\n|pyversions| |license|\n\n**Author**: `Pahaz Blinov`_\n\n**Repo**: https://github.com/pahaz/sshtunnel/\n\nInspired by https://github.com/jmagnusson/bgtunnel, but it doesn't work on\nWindows.\n\nSee also: https://github.com/paramiko/paramiko/blob/master/demos/forward.py\n\nRequirements\n-------------\n\n* `paramiko`_\n\nInstallation\n============\n\n`sshtunnel`_ is on PyPI, so simply run:\n\n::\n\n    pip install sshtunnel\n\nor ::\n\n    easy_install sshtunnel\n\nor ::\n\n    conda install -c conda-forge sshtunnel\n\nto have it installed in your environment.\n\nFor installing from source, clone the\n`repo <https://github.com/pahaz/sshtunnel>`_ and run::\n\n    python setup.py install\n\nTesting the package\n-------------------\n\nIn order to run the tests you first need\n`tox <https://testrun.org/tox/latest/>`_ and run::\n\n    python setup.py test\n\nUsage scenarios\n===============\n\nOne of the typical scenarios where ``sshtunnel`` is helpful is depicted in the\nfigure below. User may need to connect a port of a remote server (i.e. 8080)\nwhere only SSH port (usually port 22) is reachable. ::\n\n    ----------------------------------------------------------------------\n\n                                |\n    -------------+              |    +----------+\n        LOCAL    |              |    |  REMOTE  | :22 SSH\n        CLIENT   | <== SSH ========> |  SERVER  | :8080 web service\n    -------------+              |    +----------+\n                                |\n                             FIREWALL (only port 22 is open)\n\n    ----------------------------------------------------------------------\n\n**Fig1**: How to connect to a service blocked by a firewall through SSH tunnel.\n\n\nIf allowed by the SSH server, it is also possible to reach a private server\n(from the perspective of ``REMOTE SERVER``) not directly visible from the\noutside (``LOCAL CLIENT``'s perspective). ::\n\n    ----------------------------------------------------------------------\n\n                                |\n    -------------+              |    +----------+               +---------\n        LOCAL    |              |    |  REMOTE  |               | PRIVATE\n        CLIENT   | <== SSH ========> |  SERVER  | <== local ==> | SERVER\n    -------------+              |    +----------+               +---------\n                                |\n                             FIREWALL (only port 443 is open)\n\n    ----------------------------------------------------------------------\n\n**Fig2**: How to connect to ``PRIVATE SERVER`` through SSH tunnel.\n\n\nUsage examples\n==============\n\nAPI allows either initializing the tunnel and starting it or using a ``with``\ncontext, which will take care of starting **and stopping** the tunnel:\n\nExample 1\n---------\n\nCode corresponding to **Fig1** above follows, given remote server's address is\n``pahaz.urfuclub.ru``, password authentication and randomly assigned local bind\nport.\n\n.. code-block:: python\n\n    from sshtunnel import SSHTunnelForwarder\n\n    server = SSHTunnelForwarder(\n        'pahaz.urfuclub.ru',\n        ssh_username=\"pahaz\",\n        ssh_password=\"secret\",\n        remote_bind_address=('127.0.0.1', 8080)\n    )\n\n    server.start()\n\n    print(server.local_bind_port)  # show assigned local port\n    # work with `SECRET SERVICE` through `server.local_bind_port`.\n\n    server.stop()\n\nExample 2\n---------\n\nExample of a port forwarding to a private server not directly reachable,\nassuming password protected pkey authentication, remote server's SSH service is\nlistening on port 443 and that port is open in the firewall (**Fig2**):\n\n.. code-block:: python\n\n    import paramiko\n    import sshtunnel\n\n    with sshtunnel.open_tunnel(\n        (REMOTE_SERVER_IP, 443),\n        ssh_username=\"\",\n        ssh_pkey=\"/var/ssh/rsa_key\",\n        ssh_private_key_password=\"secret\",\n        remote_bind_address=(PRIVATE_SERVER_IP, 22),\n        local_bind_address=('0.0.0.0', 10022)\n    ) as tunnel:\n        client = paramiko.SSHClient()\n        client.load_system_host_keys()\n        client.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n        client.connect('127.0.0.1', 10022)\n        # do some operations with client session\n        client.close()\n\n    print('FINISH!')\n\nExample 3\n---------\n\nExample of a port forwarding for the Vagrant MySQL local port:\n\n.. code-block:: python\n\n    from sshtunnel import open_tunnel\n    from time import sleep\n\n    with open_tunnel(\n        ('localhost', 2222),\n        ssh_username=\"vagrant\",\n        ssh_password=\"vagrant\",\n        remote_bind_address=('127.0.0.1', 3306)\n    ) as server:\n\n        print(server.local_bind_port)\n        while True:\n            # press Ctrl-C for stopping\n            sleep(1)\n\n    print('FINISH!')\n\nOr simply using the CLI:\n\n.. code-block:: console\n\n    (bash)$ python -m sshtunnel -U vagrant -P vagrant -L :3306 -R 127.0.0.1:3306 -p 2222 localhost\n\nExample 4\n---------\n\nOpening an SSH session jumping over two tunnels. SSH transport and tunnels\nwill be daemonised, which will not wait for the connections to stop at close\ntime.\n\n.. code-block:: python\n\n    import sshtunnel\n    from paramiko import SSHClient\n\n\n    with sshtunnel.open_tunnel(\n        ssh_address_or_host=('GW1_ip', 20022),\n        remote_bind_address=('GW2_ip', 22),\n        block_on_close=False\n    ) as tunnel1:\n        print('Connection to tunnel1 (GW1_ip:GW1_port) OK...')\n        with sshtunnel.open_tunnel(\n            ssh_address_or_host=('localhost', tunnel1.local_bind_port),\n            remote_bind_address=('target_ip', 22),\n            ssh_username='GW2_user',\n            ssh_password='GW2_pwd',\n            block_on_close=False\n        ) as tunnel2:\n            print('Connection to tunnel2 (GW2_ip:GW2_port) OK...')\n            with SSHClient() as ssh:\n                ssh.connect('localhost',\n                    port=tunnel2.local_bind_port,\n                    username='target_user',\n                    password='target_pwd',\n                )\n                ssh.exec_command(...)\n\n\nCLI usage\n=========\n\n::\n\n    $ sshtunnel --help\n    usage: sshtunnel [-h] [-U SSH_USERNAME] [-p SSH_PORT] [-P SSH_PASSWORD] -R\n                     IP:PORT [IP:PORT ...] [-L [IP:PORT [IP:PORT ...]]]\n                     [-k SSH_HOST_KEY] [-K KEY_FILE] [-S KEY_PASSWORD] [-t] [-v]\n                     [-V] [-x IP:PORT] [-c SSH_CONFIG_FILE] [-z] [-n] [-d [FOLDER [FOLDER ...]]]\n                     ssh_address\n\n    Pure python ssh tunnel utils\n    Version 0.1.5\n\n    positional arguments:\n      ssh_address           SSH server IP address (GW for SSH tunnels)\n                            set with \"-- ssh_address\" if immediately after -R or -L\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -U SSH_USERNAME, --username SSH_USERNAME\n                            SSH server account username\n      -p SSH_PORT, --server_port SSH_PORT\n                            SSH server TCP port (default: 22)\n      -P SSH_PASSWORD, --password SSH_PASSWORD\n                            SSH server account password\n      -R IP:PORT [IP:PORT ...], --remote_bind_address IP:PORT [IP:PORT ...]\n                            Remote bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n                            Equivalent to ssh -Lxxxx:IP_ADDRESS:PORT\n                            If port is omitted, defaults to 22.\n                            Example: -R 10.10.10.10: 10.10.10.10:5900\n      -L [IP:PORT [IP:PORT ...]], --local_bind_address [IP:PORT [IP:PORT ...]]\n                            Local bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n                            Elements may also be valid UNIX socket domains:\n                            /tmp/foo.sock /tmp/bar.sock ... /tmp/baz.sock\n                            Equivalent to ssh -LPORT:xxxxxxxxx:xxxx, being the local IP address optional.\n                            By default it will listen in all interfaces (0.0.0.0) and choose a random port.\n                            Example: -L :40000\n      -k SSH_HOST_KEY, --ssh_host_key SSH_HOST_KEY\n                            Gateway's host key\n      -K KEY_FILE, --private_key_file KEY_FILE\n                            RSA/DSS/ECDSA private key file\n      -S KEY_PASSWORD, --private_key_password KEY_PASSWORD\n                            RSA/DSS/ECDSA private key password\n      -t, --threaded        Allow concurrent connections to each tunnel\n      -v, --verbose         Increase output verbosity (default: ERROR)\n      -V, --version         Show version number and quit\n      -x IP:PORT, --proxy IP:PORT\n                            IP and port of SSH proxy to destination\n      -c SSH_CONFIG_FILE, --config SSH_CONFIG_FILE\n                            SSH configuration file, defaults to ~/.ssh/config\n      -z, --compress        Request server for compression over SSH transport\n      -n, --noagent         Disable looking for keys from an SSH agent\n      -d [FOLDER [FOLDER ...]], --host_pkey_directories [FOLDER [FOLDER ...]]\n                            List of directories where SSH pkeys (in the format `id_*`) may be found\n\n.. _Pahaz Blinov: https://github.com/pahaz\n.. _sshtunnel: https://pypi.python.org/pypi/sshtunnel\n.. _paramiko: http://www.paramiko.org/\n.. |CircleCI| image:: https://circleci.com/gh/pahaz/sshtunnel.svg?style=svg\n   :target: https://circleci.com/gh/pahaz/sshtunnel\n.. |AppVeyor| image:: https://ci.appveyor.com/api/projects/status/oxg1vx2ycmnw3xr9?svg=true&passingText=Windows%20-%20OK&failingText=Windows%20-%20Fail\n   :target: https://ci.appveyor.com/project/pahaz/sshtunnel\n.. |readthedocs| image:: https://readthedocs.org/projects/sshtunnel/badge/?version=latest\n   :target: http://sshtunnel.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n.. |coveralls| image:: https://coveralls.io/repos/github/pahaz/sshtunnel/badge.svg?branch=master\n   :target: https://coveralls.io/github/pahaz/sshtunnel?branch=master\n.. |pyversions| image:: https://img.shields.io/pypi/pyversions/sshtunnel.svg\n.. |version| image:: https://img.shields.io/pypi/v/sshtunnel.svg\n   :target: `sshtunnel`_\n.. |license| image::  https://img.shields.io/pypi/l/sshtunnel.svg\n   :target: https://github.com/pahaz/sshtunnel/blob/master/LICENSE\n\nOnline documentation\n====================\n\nDocumentation may be found at `readthedocs`_.\n\n.. _readthedocs: https://sshtunnel.readthedocs.org/\n\nCONTRIBUTORS\n============\n\n- `Cameron Maske`_\n- `Gustavo Machado`_\n- `Colin Jermain`_\n- `JM Fern\u00e1ndez`_ - (big thanks!)\n- `Lewis Thompson`_\n- `Erik Rogers`_\n- `Mart S\u00f5mermaa`_\n- `Chronial`_\n- `Dan Harbin`_\n- `Ignacio Peluffo`_\n- `Niels Zeilemaker`_\n\nCHANGELOG\n=========\n\n- v.0.1.5 (`JM Fern\u00e1ndez`_)\n    + Introduce `block_on_close` attribute\n\n- v.0.1.4 (`Niels Zeilemaker`_)\n    + Allow loading pkeys from `~/.ssh`\n\n- v.0.1.3 (`Ignacio Peluffo`_ and others)\n    + ``pkey_file`` parameter updated to accept relative paths to user folder using ``~``\n    + Several bugfixes\n\n- v.0.1.2 (`JM Fern\u00e1ndez`_)\n    + Fix #77\n\n- v.0.1.1 (`JM Fern\u00e1ndez`_)\n    + Fix #72\n\n- v.0.1.0 (`JM Fern\u00e1ndez`_)\n    + Add `tunnel_bindings` property\n    + Several bugfixes (#49, #56, #57, #59, #60, #62, #64, #66, ...)\n      (`Pahaz Blinov`_, `JM Fern\u00e1ndez`_)\n    + Add TRACE logging level (`JM Fern\u00e1ndez`_)\n    + Code and tests refactoring (`JM Fern\u00e1ndez`_)\n    + Drop python3.2 support\n\n- v.0.0.8 (`JM Fern\u00e1ndez`_)\n    + Merge `#31`_: Support Unix domain socket (local) forwarding (`Dan Harbin`_)\n    + Simplify API (`JM Fern\u00e1ndez`_)\n    + Add sphinx-based documentation (`JM Fern\u00e1ndez`_)\n    + Add ``allow_agent`` (fixes `#36`_, `#46`_) (`JM Fern\u00e1ndez`_)\n    + Add ``compression`` (`JM Fern\u00e1ndez`_)\n    + Add ``__str__`` method (`JM Fern\u00e1ndez`_)\n    + Add test functions (`JM Fern\u00e1ndez`_)\n    + Fix default username when not provided and ssh_config file is skipped (`JM Fern\u00e1ndez`_)\n    + Fix gateway IP unresolvable exception catching (`JM Fern\u00e1ndez`_)\n    + Minor fixes (`JM Fern\u00e1ndez`_)\n    + Add AppVeyor support (`JM Fern\u00e1ndez`_)\n\n- v.0.0.7 (`JM Fern\u00e1ndez`_)\n    + Tunnels can now be stopped and started safely (`#41`_) (`JM Fern\u00e1ndez`_)\n    + Add timeout to SSH gateway and keep-alive messages (`#29`_) (`JM Fern\u00e1ndez`_)\n    + Allow sending a pkey directly (`#43`_) (`Chronial`_)\n    + Add ``-V`` CLI option to show current version (`JM Fern\u00e1ndez`_)\n    + Add coverage (`JM Fern\u00e1ndez`_)\n    + Refactoring (`JM Fern\u00e1ndez`_)\n\n- v.0.0.6 (`Pahaz Blinov`_)\n    + add ``-S`` CLI options for ssh private key password support (`Pahaz Blinov`_)\n\n- v.0.0.5 (`Pahaz Blinov`_)\n    + add ``ssh_proxy`` argument, as well as ``ssh_config(5)`` ``ProxyCommand`` support (`Lewis Thompson`_)\n    + add some python 2.6 compatibility fixes (`Mart S\u00f5mermaa`_)\n    + ``paramiko.transport`` inherits handlers of loggers passed to ``SSHTunnelForwarder`` (`JM Fern\u00e1ndez`_)\n    + fix `#34`_, `#33`_, code style and docs (`JM Fern\u00e1ndez`_)\n    + add tests (`Pahaz Blinov`_)\n    + add CI integration (`Pahaz Blinov`_)\n    + normal packaging (`Pahaz Blinov`_)\n    + disable check distenation socket connection by ``SSHTunnelForwarder.local_is_up`` (`Pahaz Blinov`_) [changed default behavior]\n    + use daemon mode = False in all threads by default; detail_ (`Pahaz Blinov`_) [changed default behavior]\n\n- v.0.0.4.4 (`Pahaz Blinov`_)\n   + fix issue `#24`_ - hide ssh password in logs (`Pahaz Blinov`_)\n\n- v.0.0.4.3 (`Pahaz Blinov`_)\n    + fix default port issue `#19`_ (`Pahaz Blinov`_)\n\n- v.0.0.4.2 (`Pahaz Blinov`_)\n    + fix Thread.daemon mode for Python < 3.3 `#16`_, `#21`_ (`Lewis Thompson`_, `Erik Rogers`_)\n\n- v.0.0.4.1 (`Pahaz Blinov`_)\n    + fix CLI issues `#13`_ (`Pahaz Blinov`_)\n\n- v.0.0.4 (`Pahaz Blinov`_)\n    + daemon mode by default for all threads (`JM Fern\u00e1ndez`_, `Pahaz Blinov`_) - *incompatible*\n    + move ``make_ssh_forward_server`` to ``SSHTunnelForwarder.make_ssh_forward_server`` (`Pahaz Blinov`_, `JM Fern\u00e1ndez`_) - *incompatible*\n    + move ``make_ssh_forward_handler`` to ``SSHTunnelForwarder.make_ssh_forward_handler_class`` (`Pahaz Blinov`_, `JM Fern\u00e1ndez`_) - *incompatible*\n    + rename ``open`` to ``open_tunnel`` (`JM Fern\u00e1ndez`_) - *incompatible*\n    + add CLI interface (`JM Fern\u00e1ndez`_)\n    + support opening several tunnels at once (`JM Fern\u00e1ndez`_)\n    + improve stability and readability (`JM Fern\u00e1ndez`_, `Pahaz Blinov`_)\n    + improve logging (`JM Fern\u00e1ndez`_, `Pahaz Blinov`_)\n    + add ``raise_exception_if_any_forwarder_have_a_problem`` argument for opening several tunnels at once (`Pahaz Blinov`_)\n    + add ``ssh_config_file`` argument support (`JM Fern\u00e1ndez`_)\n    + add Python 3 support (`JM Fern\u00e1ndez`_, `Pahaz Blinov`_)\n\n- v.0.0.3 (`Pahaz Blinov`_)\n    + add ``threaded`` option (`Cameron Maske`_)\n    + fix exception error message, correctly printing destination address (`Gustavo Machado`_)\n    + fix ``pip install`` failure (`Colin Jermain`_, `Pahaz Blinov`_)\n\n- v.0.0.1 (`Pahaz Blinov`_)\n    + ``SSHTunnelForwarder`` class (`Pahaz Blinov`_)\n    + ``open`` function (`Pahaz Blinov`_)\n\n\n.. _Cameron Maske: https://github.com/cameronmaske\n.. _Gustavo Machado: https://github.com/gdmachado\n.. _Colin Jermain: https://github.com/cjermain\n.. _JM Fern\u00e1ndez: https://github.com/fernandezcuesta\n.. _Lewis Thompson: https://github.com/lewisthompson\n.. _Erik Rogers: https://github.com/ewrogers\n.. _Mart S\u00f5mermaa: https://github.com/mrts\n.. _Chronial: https://github.com/Chronial\n.. _Dan Harbin: https://github.com/RasterBurn\n.. _Ignacio Peluffo: https://github.com/ipeluffo\n.. _Niels Zeilemaker: https://github.com/NielsZeilemaker\n.. _#13: https://github.com/pahaz/sshtunnel/issues/13\n.. _#16: https://github.com/pahaz/sshtunnel/issues/16\n.. _#19: https://github.com/pahaz/sshtunnel/issues/19\n.. _#21: https://github.com/pahaz/sshtunnel/issues/21\n.. _#24: https://github.com/pahaz/sshtunnel/issues/24\n.. _#29: https://github.com/pahaz/sshtunnel/issues/29\n.. _#31: https://github.com/pahaz/sshtunnel/issues/31\n.. _#33: https://github.com/pahaz/sshtunnel/issues/33\n.. _#34: https://github.com/pahaz/sshtunnel/issues/34\n.. _#36: https://github.com/pahaz/sshtunnel/issues/36\n.. _#41: https://github.com/pahaz/sshtunnel/issues/41\n.. _#43: https://github.com/pahaz/sshtunnel/issues/43\n.. _#46: https://github.com/pahaz/sshtunnel/issues/46\n.. _detail: https://github.com/pahaz/sshtunnel/commit/64af238b799b0e0057c4f9b386cda247e0006da9#diff-76bc1662a114401c2954deb92b740081R127", "description_content_type": "", "docs_url": null, "download_url": "https://pypi.python.org/packages/source/s/sshtunnel/sshtunnel-0.1.5.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pahaz/sshtunnel", "keywords": "ssh tunnel paramiko proxy tcp-forward", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "sshtunnel", "package_url": "https://pypi.org/project/sshtunnel/", "platform": "unix", "project_url": "https://pypi.org/project/sshtunnel/", "project_urls": {"Download": "https://pypi.python.org/packages/source/s/sshtunnel/sshtunnel-0.1.5.zip", "Homepage": "https://github.com/pahaz/sshtunnel"}, "release_url": "https://pypi.org/project/sshtunnel/0.1.5/", "requires_dist": null, "requires_python": "", "summary": "Pure python SSH tunnels", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://circleci.com/gh/pahaz/sshtunnel\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/333d3a7b333fcb363b7de76f9c3b1446525458f3/68747470733a2f2f636972636c6563692e636f6d2f67682f706168617a2f73736874756e6e656c2e7376673f7374796c653d737667\"></a> <a href=\"https://ci.appveyor.com/project/pahaz/sshtunnel\" rel=\"nofollow\"><img alt=\"AppVeyor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aec8efe47a6a458b86b45ecac17886ed1b559fbb/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6f78673176783279636d6e77337872393f7376673d747275652670617373696e67546578743d57696e646f77732532302d2532304f4b266661696c696e67546578743d57696e646f77732532302d2532304661696c\"></a> <a href=\"http://sshtunnel.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/35ad8ba30dbf40f5f67c51c15a6fb157ca72f8d9/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f73736874756e6e656c2f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://coveralls.io/github/pahaz/sshtunnel?branch=master\" rel=\"nofollow\"><img alt=\"coveralls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1481f1d170946ab70ec1772fb507055104404093/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f706168617a2f73736874756e6e656c2f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.python.org/pypi/sshtunnel\" rel=\"nofollow\"><img alt=\"version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f90625b8bc088768c5eaec62bfcd43f93f5e07e9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f73736874756e6e656c2e737667\"></a></p>\n<p><img alt=\"pyversions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/82cf7e52cef0c3c6547deaabfdf4eedb58dc159f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f73736874756e6e656c2e737667\"> <a href=\"https://github.com/pahaz/sshtunnel/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3d8f3b40ce15b9cbbe3f7f5cf8b3450fad7d3db4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f73736874756e6e656c2e737667\"></a></p>\n<p><strong>Author</strong>: <a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a></p>\n<p><strong>Repo</strong>: <a href=\"https://github.com/pahaz/sshtunnel/\" rel=\"nofollow\">https://github.com/pahaz/sshtunnel/</a></p>\n<p>Inspired by <a href=\"https://github.com/jmagnusson/bgtunnel\" rel=\"nofollow\">https://github.com/jmagnusson/bgtunnel</a>, but it doesn\u2019t work on\nWindows.</p>\n<p>See also: <a href=\"https://github.com/paramiko/paramiko/blob/master/demos/forward.py\" rel=\"nofollow\">https://github.com/paramiko/paramiko/blob/master/demos/forward.py</a></p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li><a href=\"http://www.paramiko.org/\" rel=\"nofollow\">paramiko</a></li>\n</ul>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p><a href=\"https://pypi.python.org/pypi/sshtunnel\" rel=\"nofollow\">sshtunnel</a> is on PyPI, so simply run:</p>\n<pre>pip install sshtunnel\n</pre>\n<p>or</p>\n<pre>easy_install sshtunnel\n</pre>\n<p>or</p>\n<pre>conda install -c conda-forge sshtunnel\n</pre>\n<p>to have it installed in your environment.</p>\n<p>For installing from source, clone the\n<a href=\"https://github.com/pahaz/sshtunnel\" rel=\"nofollow\">repo</a> and run:</p>\n<pre>python setup.py install\n</pre>\n</div>\n</div>\n<div id=\"testing-the-package\">\n<h2>Testing the package</h2>\n<p>In order to run the tests you first need\n<a href=\"https://testrun.org/tox/latest/\" rel=\"nofollow\">tox</a> and run:</p>\n<pre>python setup.py test\n</pre>\n<div id=\"usage-scenarios\">\n<h3>Usage scenarios</h3>\n<p>One of the typical scenarios where <tt>sshtunnel</tt> is helpful is depicted in the\nfigure below. User may need to connect a port of a remote server (i.e. 8080)\nwhere only SSH port (usually port 22) is reachable.</p>\n<pre>----------------------------------------------------------------------\n\n                            |\n-------------+              |    +----------+\n    LOCAL    |              |    |  REMOTE  | :22 SSH\n    CLIENT   | &lt;== SSH ========&gt; |  SERVER  | :8080 web service\n-------------+              |    +----------+\n                            |\n                         FIREWALL (only port 22 is open)\n\n----------------------------------------------------------------------\n</pre>\n<p><strong>Fig1</strong>: How to connect to a service blocked by a firewall through SSH tunnel.</p>\n<p>If allowed by the SSH server, it is also possible to reach a private server\n(from the perspective of <tt>REMOTE SERVER</tt>) not directly visible from the\noutside (<tt>LOCAL CLIENT</tt>\u2019s perspective).</p>\n<pre>----------------------------------------------------------------------\n\n                            |\n-------------+              |    +----------+               +---------\n    LOCAL    |              |    |  REMOTE  |               | PRIVATE\n    CLIENT   | &lt;== SSH ========&gt; |  SERVER  | &lt;== local ==&gt; | SERVER\n-------------+              |    +----------+               +---------\n                            |\n                         FIREWALL (only port 443 is open)\n\n----------------------------------------------------------------------\n</pre>\n<p><strong>Fig2</strong>: How to connect to <tt>PRIVATE SERVER</tt> through SSH tunnel.</p>\n</div>\n<div id=\"usage-examples\">\n<h3>Usage examples</h3>\n<p>API allows either initializing the tunnel and starting it or using a <tt>with</tt>\ncontext, which will take care of starting <strong>and stopping</strong> the tunnel:</p>\n</div>\n</div>\n<div id=\"example-1\">\n<h2>Example 1</h2>\n<p>Code corresponding to <strong>Fig1</strong> above follows, given remote server\u2019s address is\n<tt>pahaz.urfuclub.ru</tt>, password authentication and randomly assigned local bind\nport.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sshtunnel</span> <span class=\"kn\">import</span> <span class=\"n\">SSHTunnelForwarder</span>\n\n<span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">SSHTunnelForwarder</span><span class=\"p\">(</span>\n    <span class=\"s1\">'pahaz.urfuclub.ru'</span><span class=\"p\">,</span>\n    <span class=\"n\">ssh_username</span><span class=\"o\">=</span><span class=\"s2\">\"pahaz\"</span><span class=\"p\">,</span>\n    <span class=\"n\">ssh_password</span><span class=\"o\">=</span><span class=\"s2\">\"secret\"</span><span class=\"p\">,</span>\n    <span class=\"n\">remote_bind_address</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span> <span class=\"mi\">8080</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">local_bind_port</span><span class=\"p\">)</span>  <span class=\"c1\"># show assigned local port</span>\n<span class=\"c1\"># work with `SECRET SERVICE` through `server.local_bind_port`.</span>\n\n<span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"example-2\">\n<h2>Example 2</h2>\n<p>Example of a port forwarding to a private server not directly reachable,\nassuming password protected pkey authentication, remote server\u2019s SSH service is\nlistening on port 443 and that port is open in the firewall (<strong>Fig2</strong>):</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">paramiko</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sshtunnel</span>\n\n<span class=\"k\">with</span> <span class=\"n\">sshtunnel</span><span class=\"o\">.</span><span class=\"n\">open_tunnel</span><span class=\"p\">(</span>\n    <span class=\"p\">(</span><span class=\"n\">REMOTE_SERVER_IP</span><span class=\"p\">,</span> <span class=\"mi\">443</span><span class=\"p\">),</span>\n    <span class=\"n\">ssh_username</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"n\">ssh_pkey</span><span class=\"o\">=</span><span class=\"s2\">\"/var/ssh/rsa_key\"</span><span class=\"p\">,</span>\n    <span class=\"n\">ssh_private_key_password</span><span class=\"o\">=</span><span class=\"s2\">\"secret\"</span><span class=\"p\">,</span>\n    <span class=\"n\">remote_bind_address</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">PRIVATE_SERVER_IP</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">),</span>\n    <span class=\"n\">local_bind_address</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'0.0.0.0'</span><span class=\"p\">,</span> <span class=\"mi\">10022</span><span class=\"p\">)</span>\n<span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">tunnel</span><span class=\"p\">:</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">paramiko</span><span class=\"o\">.</span><span class=\"n\">SSHClient</span><span class=\"p\">()</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">load_system_host_keys</span><span class=\"p\">()</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">set_missing_host_key_policy</span><span class=\"p\">(</span><span class=\"n\">paramiko</span><span class=\"o\">.</span><span class=\"n\">AutoAddPolicy</span><span class=\"p\">())</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span> <span class=\"mi\">10022</span><span class=\"p\">)</span>\n    <span class=\"c1\"># do some operations with client session</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'FINISH!'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"example-3\">\n<h2>Example 3</h2>\n<p>Example of a port forwarding for the Vagrant MySQL local port:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sshtunnel</span> <span class=\"kn\">import</span> <span class=\"n\">open_tunnel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n\n<span class=\"k\">with</span> <span class=\"n\">open_tunnel</span><span class=\"p\">(</span>\n    <span class=\"p\">(</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"mi\">2222</span><span class=\"p\">),</span>\n    <span class=\"n\">ssh_username</span><span class=\"o\">=</span><span class=\"s2\">\"vagrant\"</span><span class=\"p\">,</span>\n    <span class=\"n\">ssh_password</span><span class=\"o\">=</span><span class=\"s2\">\"vagrant\"</span><span class=\"p\">,</span>\n    <span class=\"n\">remote_bind_address</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span> <span class=\"mi\">3306</span><span class=\"p\">)</span>\n<span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">server</span><span class=\"p\">:</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">local_bind_port</span><span class=\"p\">)</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"c1\"># press Ctrl-C for stopping</span>\n        <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'FINISH!'</span><span class=\"p\">)</span>\n</pre>\n<p>Or simply using the CLI:</p>\n<pre><span class=\"gp-VirtualEnv\">(bash)</span><span class=\"gp\">$</span> python -m sshtunnel -U vagrant -P vagrant -L :3306 -R <span class=\"m\">127</span>.0.0.1:3306 -p <span class=\"m\">2222</span> localhost\n</pre>\n</div>\n<div id=\"example-4\">\n<h2>Example 4</h2>\n<p>Opening an SSH session jumping over two tunnels. SSH transport and tunnels\nwill be daemonised, which will not wait for the connections to stop at close\ntime.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sshtunnel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">paramiko</span> <span class=\"kn\">import</span> <span class=\"n\">SSHClient</span>\n\n\n<span class=\"k\">with</span> <span class=\"n\">sshtunnel</span><span class=\"o\">.</span><span class=\"n\">open_tunnel</span><span class=\"p\">(</span>\n    <span class=\"n\">ssh_address_or_host</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'GW1_ip'</span><span class=\"p\">,</span> <span class=\"mi\">20022</span><span class=\"p\">),</span>\n    <span class=\"n\">remote_bind_address</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'GW2_ip'</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">),</span>\n    <span class=\"n\">block_on_close</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n<span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">tunnel1</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Connection to tunnel1 (GW1_ip:GW1_port) OK...'</span><span class=\"p\">)</span>\n    <span class=\"k\">with</span> <span class=\"n\">sshtunnel</span><span class=\"o\">.</span><span class=\"n\">open_tunnel</span><span class=\"p\">(</span>\n        <span class=\"n\">ssh_address_or_host</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"n\">tunnel1</span><span class=\"o\">.</span><span class=\"n\">local_bind_port</span><span class=\"p\">),</span>\n        <span class=\"n\">remote_bind_address</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'target_ip'</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">),</span>\n        <span class=\"n\">ssh_username</span><span class=\"o\">=</span><span class=\"s1\">'GW2_user'</span><span class=\"p\">,</span>\n        <span class=\"n\">ssh_password</span><span class=\"o\">=</span><span class=\"s1\">'GW2_pwd'</span><span class=\"p\">,</span>\n        <span class=\"n\">block_on_close</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n    <span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">tunnel2</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Connection to tunnel2 (GW2_ip:GW2_port) OK...'</span><span class=\"p\">)</span>\n        <span class=\"k\">with</span> <span class=\"n\">SSHClient</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">ssh</span><span class=\"p\">:</span>\n            <span class=\"n\">ssh</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span>\n                <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"n\">tunnel2</span><span class=\"o\">.</span><span class=\"n\">local_bind_port</span><span class=\"p\">,</span>\n                <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'target_user'</span><span class=\"p\">,</span>\n                <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'target_pwd'</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">ssh</span><span class=\"o\">.</span><span class=\"n\">exec_command</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n</pre>\n<div id=\"cli-usage\">\n<h3>CLI usage</h3>\n<pre>$ sshtunnel --help\nusage: sshtunnel [-h] [-U SSH_USERNAME] [-p SSH_PORT] [-P SSH_PASSWORD] -R\n                 IP:PORT [IP:PORT ...] [-L [IP:PORT [IP:PORT ...]]]\n                 [-k SSH_HOST_KEY] [-K KEY_FILE] [-S KEY_PASSWORD] [-t] [-v]\n                 [-V] [-x IP:PORT] [-c SSH_CONFIG_FILE] [-z] [-n] [-d [FOLDER [FOLDER ...]]]\n                 ssh_address\n\nPure python ssh tunnel utils\nVersion 0.1.5\n\npositional arguments:\n  ssh_address           SSH server IP address (GW for SSH tunnels)\n                        set with \"-- ssh_address\" if immediately after -R or -L\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -U SSH_USERNAME, --username SSH_USERNAME\n                        SSH server account username\n  -p SSH_PORT, --server_port SSH_PORT\n                        SSH server TCP port (default: 22)\n  -P SSH_PASSWORD, --password SSH_PASSWORD\n                        SSH server account password\n  -R IP:PORT [IP:PORT ...], --remote_bind_address IP:PORT [IP:PORT ...]\n                        Remote bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n                        Equivalent to ssh -Lxxxx:IP_ADDRESS:PORT\n                        If port is omitted, defaults to 22.\n                        Example: -R 10.10.10.10: 10.10.10.10:5900\n  -L [IP:PORT [IP:PORT ...]], --local_bind_address [IP:PORT [IP:PORT ...]]\n                        Local bind address sequence: ip_1:port_1 ip_2:port_2 ... ip_n:port_n\n                        Elements may also be valid UNIX socket domains:\n                        /tmp/foo.sock /tmp/bar.sock ... /tmp/baz.sock\n                        Equivalent to ssh -LPORT:xxxxxxxxx:xxxx, being the local IP address optional.\n                        By default it will listen in all interfaces (0.0.0.0) and choose a random port.\n                        Example: -L :40000\n  -k SSH_HOST_KEY, --ssh_host_key SSH_HOST_KEY\n                        Gateway's host key\n  -K KEY_FILE, --private_key_file KEY_FILE\n                        RSA/DSS/ECDSA private key file\n  -S KEY_PASSWORD, --private_key_password KEY_PASSWORD\n                        RSA/DSS/ECDSA private key password\n  -t, --threaded        Allow concurrent connections to each tunnel\n  -v, --verbose         Increase output verbosity (default: ERROR)\n  -V, --version         Show version number and quit\n  -x IP:PORT, --proxy IP:PORT\n                        IP and port of SSH proxy to destination\n  -c SSH_CONFIG_FILE, --config SSH_CONFIG_FILE\n                        SSH configuration file, defaults to ~/.ssh/config\n  -z, --compress        Request server for compression over SSH transport\n  -n, --noagent         Disable looking for keys from an SSH agent\n  -d [FOLDER [FOLDER ...]], --host_pkey_directories [FOLDER [FOLDER ...]]\n                        List of directories where SSH pkeys (in the format `id_*`) may be found\n</pre>\n</div>\n<div id=\"online-documentation\">\n<h3>Online documentation</h3>\n<p>Documentation may be found at <a href=\"https://sshtunnel.readthedocs.org/\" rel=\"nofollow\">readthedocs</a>.</p>\n</div>\n<div id=\"contributors\">\n<h3>CONTRIBUTORS</h3>\n<ul>\n<li><a href=\"https://github.com/cameronmaske\" rel=\"nofollow\">Cameron Maske</a></li>\n<li><a href=\"https://github.com/gdmachado\" rel=\"nofollow\">Gustavo Machado</a></li>\n<li><a href=\"https://github.com/cjermain\" rel=\"nofollow\">Colin Jermain</a></li>\n<li><a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a> - (big thanks!)</li>\n<li><a href=\"https://github.com/lewisthompson\" rel=\"nofollow\">Lewis Thompson</a></li>\n<li><a href=\"https://github.com/ewrogers\" rel=\"nofollow\">Erik Rogers</a></li>\n<li><a href=\"https://github.com/mrts\" rel=\"nofollow\">Mart S\u00f5mermaa</a></li>\n<li><a href=\"https://github.com/Chronial\" rel=\"nofollow\">Chronial</a></li>\n<li><a href=\"https://github.com/RasterBurn\" rel=\"nofollow\">Dan Harbin</a></li>\n<li><a href=\"https://github.com/ipeluffo\" rel=\"nofollow\">Ignacio Peluffo</a></li>\n<li><a href=\"https://github.com/NielsZeilemaker\" rel=\"nofollow\">Niels Zeilemaker</a></li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h3>CHANGELOG</h3>\n<ul>\n<li><dl>\n<dt>v.0.1.5 (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</dt>\n<dd><ul>\n<li>Introduce <cite>block_on_close</cite> attribute</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>v.0.1.4 (<a href=\"https://github.com/NielsZeilemaker\" rel=\"nofollow\">Niels Zeilemaker</a>)</dt>\n<dd><ul>\n<li>Allow loading pkeys from <cite>~/.ssh</cite></li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>v.0.1.3 (<a href=\"https://github.com/ipeluffo\" rel=\"nofollow\">Ignacio Peluffo</a> and others)</dt>\n<dd><ul>\n<li><tt>pkey_file</tt> parameter updated to accept relative paths to user folder using <tt>~</tt></li>\n<li>Several bugfixes</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>v.0.1.2 (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</dt>\n<dd><ul>\n<li>Fix #77</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>v.0.1.1 (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</dt>\n<dd><ul>\n<li>Fix #72</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>v.0.1.0 (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</dt>\n<dd><ul>\n<li>Add <cite>tunnel_bindings</cite> property</li>\n<li>Several bugfixes (#49, #56, #57, #59, #60, #62, #64, #66, \u2026)\n(<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>, <a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</li>\n<li>Add TRACE logging level (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</li>\n<li>Code and tests refactoring (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</li>\n<li>Drop python3.2 support</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>v.0.0.8 (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</dt>\n<dd><ul>\n<li>Merge <a href=\"https://github.com/pahaz/sshtunnel/issues/31\" rel=\"nofollow\">#31</a>: Support Unix domain socket (local) forwarding (<a href=\"https://github.com/RasterBurn\" rel=\"nofollow\">Dan Harbin</a>)</li>\n<li>Simplify API (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</li>\n<li>Add sphinx-based documentation (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</li>\n<li>Add <tt>allow_agent</tt> (fixes <a href=\"https://github.com/pahaz/sshtunnel/issues/36\" rel=\"nofollow\">#36</a>, <a href=\"https://github.com/pahaz/sshtunnel/issues/46\" rel=\"nofollow\">#46</a>) (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</li>\n<li>Add <tt>compression</tt> (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</li>\n<li>Add <tt>__str__</tt> method (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</li>\n<li>Add test functions (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</li>\n<li>Fix default username when not provided and ssh_config file is skipped (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</li>\n<li>Fix gateway IP unresolvable exception catching (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</li>\n<li>Minor fixes (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</li>\n<li>Add AppVeyor support (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>v.0.0.7 (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</dt>\n<dd><ul>\n<li>Tunnels can now be stopped and started safely (<a href=\"https://github.com/pahaz/sshtunnel/issues/41\" rel=\"nofollow\">#41</a>) (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</li>\n<li>Add timeout to SSH gateway and keep-alive messages (<a href=\"https://github.com/pahaz/sshtunnel/issues/29\" rel=\"nofollow\">#29</a>) (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</li>\n<li>Allow sending a pkey directly (<a href=\"https://github.com/pahaz/sshtunnel/issues/43\" rel=\"nofollow\">#43</a>) (<a href=\"https://github.com/Chronial\" rel=\"nofollow\">Chronial</a>)</li>\n<li>Add <tt><span class=\"pre\">-V</span></tt> CLI option to show current version (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</li>\n<li>Add coverage (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</li>\n<li>Refactoring (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>v.0.0.6 (<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>)</dt>\n<dd><ul>\n<li>add <tt><span class=\"pre\">-S</span></tt> CLI options for ssh private key password support (<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>)</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>v.0.0.5 (<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>)</dt>\n<dd><ul>\n<li>add <tt>ssh_proxy</tt> argument, as well as <tt>ssh_config(5)</tt> <tt>ProxyCommand</tt> support (<a href=\"https://github.com/lewisthompson\" rel=\"nofollow\">Lewis Thompson</a>)</li>\n<li>add some python 2.6 compatibility fixes (<a href=\"https://github.com/mrts\" rel=\"nofollow\">Mart S\u00f5mermaa</a>)</li>\n<li><tt>paramiko.transport</tt> inherits handlers of loggers passed to <tt>SSHTunnelForwarder</tt> (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</li>\n<li>fix <a href=\"https://github.com/pahaz/sshtunnel/issues/34\" rel=\"nofollow\">#34</a>, <a href=\"https://github.com/pahaz/sshtunnel/issues/33\" rel=\"nofollow\">#33</a>, code style and docs (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</li>\n<li>add tests (<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>)</li>\n<li>add CI integration (<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>)</li>\n<li>normal packaging (<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>)</li>\n<li>disable check distenation socket connection by <tt>SSHTunnelForwarder.local_is_up</tt> (<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>) [changed default behavior]</li>\n<li>use daemon mode = False in all threads by default; <a href=\"https://github.com/pahaz/sshtunnel/commit/64af238b799b0e0057c4f9b386cda247e0006da9#diff-76bc1662a114401c2954deb92b740081R127\" rel=\"nofollow\">detail</a> (<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>) [changed default behavior]</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>v.0.0.4.4 (<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>)</dt>\n<dd><ul>\n<li>fix issue <a href=\"https://github.com/pahaz/sshtunnel/issues/24\" rel=\"nofollow\">#24</a> - hide ssh password in logs (<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>)</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>v.0.0.4.3 (<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>)</dt>\n<dd><ul>\n<li>fix default port issue <a href=\"https://github.com/pahaz/sshtunnel/issues/19\" rel=\"nofollow\">#19</a> (<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>)</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>v.0.0.4.2 (<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>)</dt>\n<dd><ul>\n<li>fix Thread.daemon mode for Python &lt; 3.3 <a href=\"https://github.com/pahaz/sshtunnel/issues/16\" rel=\"nofollow\">#16</a>, <a href=\"https://github.com/pahaz/sshtunnel/issues/21\" rel=\"nofollow\">#21</a> (<a href=\"https://github.com/lewisthompson\" rel=\"nofollow\">Lewis Thompson</a>, <a href=\"https://github.com/ewrogers\" rel=\"nofollow\">Erik Rogers</a>)</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>v.0.0.4.1 (<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>)</dt>\n<dd><ul>\n<li>fix CLI issues <a href=\"https://github.com/pahaz/sshtunnel/issues/13\" rel=\"nofollow\">#13</a> (<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>)</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>v.0.0.4 (<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>)</dt>\n<dd><ul>\n<li>daemon mode by default for all threads (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>, <a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>) - <em>incompatible</em></li>\n<li>move <tt>make_ssh_forward_server</tt> to <tt>SSHTunnelForwarder.make_ssh_forward_server</tt> (<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>, <a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>) - <em>incompatible</em></li>\n<li>move <tt>make_ssh_forward_handler</tt> to <tt>SSHTunnelForwarder.make_ssh_forward_handler_class</tt> (<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>, <a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>) - <em>incompatible</em></li>\n<li>rename <tt>open</tt> to <tt>open_tunnel</tt> (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>) - <em>incompatible</em></li>\n<li>add CLI interface (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</li>\n<li>support opening several tunnels at once (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</li>\n<li>improve stability and readability (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>, <a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>)</li>\n<li>improve logging (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>, <a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>)</li>\n<li>add <tt>raise_exception_if_any_forwarder_have_a_problem</tt> argument for opening several tunnels at once (<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>)</li>\n<li>add <tt>ssh_config_file</tt> argument support (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>)</li>\n<li>add Python 3 support (<a href=\"https://github.com/fernandezcuesta\" rel=\"nofollow\">JM Fern\u00e1ndez</a>, <a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>)</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>v.0.0.3 (<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>)</dt>\n<dd><ul>\n<li>add <tt>threaded</tt> option (<a href=\"https://github.com/cameronmaske\" rel=\"nofollow\">Cameron Maske</a>)</li>\n<li>fix exception error message, correctly printing destination address (<a href=\"https://github.com/gdmachado\" rel=\"nofollow\">Gustavo Machado</a>)</li>\n<li>fix <tt>pip install</tt> failure (<a href=\"https://github.com/cjermain\" rel=\"nofollow\">Colin Jermain</a>, <a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>)</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>v.0.0.1 (<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>)</dt>\n<dd><ul>\n<li><tt>SSHTunnelForwarder</tt> class (<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>)</li>\n<li><tt>open</tt> function (<a href=\"https://github.com/pahaz\" rel=\"nofollow\">Pahaz Blinov</a>)</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5395388, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7905d7a37b60c0ba9a0cb7000c9b82fd", "sha256": "b1f765fb22a5c4d5c98bdc1dba762ffff09d6b1ec3ff15ec5da956ba15438fd0"}, "downloads": -1, "filename": "sshtunnel-0.0.1.zip", "has_sig": false, "md5_digest": "7905d7a37b60c0ba9a0cb7000c9b82fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8937, "upload_time": "2014-06-12T09:19:16", "upload_time_iso_8601": "2014-06-12T09:19:16.049487Z", "url": "https://files.pythonhosted.org/packages/36/75/d39a33c8035d30658377434d64dc50031a022b444a1f651bec99b77eac15/sshtunnel-0.0.1.zip", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d130e2f59bce6e01a58347a23f4c0062", "sha256": "1ac6196512ad8ca43830737b75e6ab748af7f67f3a9660299895dadac54f66b5"}, "downloads": -1, "filename": "sshtunnel-0.0.2-py2.7.egg", "has_sig": false, "md5_digest": "d130e2f59bce6e01a58347a23f4c0062", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 8456, "upload_time": "2015-02-16T18:58:40", "upload_time_iso_8601": "2015-02-16T18:58:40.540333Z", "url": "https://files.pythonhosted.org/packages/ee/cf/8094f8d7ae7c6e253940af7f1b6e882a3bfd0a864b161cd38f8725af4198/sshtunnel-0.0.2-py2.7.egg", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "9eaed9a9a570f12dd6f6da34fdbe81e0", "sha256": "2c344c40c3ffa7b4e4019aec965f23cf314d6198d42314b84fc58053a816830a"}, "downloads": -1, "filename": "sshtunnel-0.0.3.zip", "has_sig": false, "md5_digest": "9eaed9a9a570f12dd6f6da34fdbe81e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9633, "upload_time": "2015-02-16T19:28:32", "upload_time_iso_8601": "2015-02-16T19:28:32.436109Z", "url": "https://files.pythonhosted.org/packages/4b/4a/d828e6fe19118340c5aba765a61c8b2c2969a47bbbbcefe91398b8e203e4/sshtunnel-0.0.3.zip", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "9476d519994a15648a7f2e45f33e1887", "sha256": "8a5aa134f0cd2f52c644da4893ab2aeb9c7d4a55c495d8888ea3764f6ed90d4d"}, "downloads": -1, "filename": "sshtunnel-0.0.4.zip", "has_sig": false, "md5_digest": "9476d519994a15648a7f2e45f33e1887", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17621, "upload_time": "2015-06-17T18:55:04", "upload_time_iso_8601": "2015-06-17T18:55:04.216484Z", "url": "https://files.pythonhosted.org/packages/28/9f/28ec7dc4e4547b669e1fe9217a4307d340114969b771d7347f973c3a1fd4/sshtunnel-0.0.4.zip", "yanked": false}], "0.0.4.1": [{"comment_text": "", "digests": {"md5": "c075de2792c5b0652fe26c69c2e5bb64", "sha256": "e9a0e26a943b8201b6b10d42fc4df9507c996015c4152c13529399840900d065"}, "downloads": -1, "filename": "sshtunnel-0.0.4.1.zip", "has_sig": false, "md5_digest": "c075de2792c5b0652fe26c69c2e5bb64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17507, "upload_time": "2015-06-17T20:03:29", "upload_time_iso_8601": "2015-06-17T20:03:29.025578Z", "url": "https://files.pythonhosted.org/packages/fe/07/69f809f3a976ff63e8b5db41bc7ff88e99ad6c60847b46e7929ffa8d7649/sshtunnel-0.0.4.1.zip", "yanked": false}], "0.0.4.2": [{"comment_text": "", "digests": {"md5": "265da81591336fa14756e54b9665b869", "sha256": "54d860b214cde3814f4abf013b65fcd6f58395146fcfb85ff3f750e2795655b8"}, "downloads": -1, "filename": "sshtunnel-0.0.4.2.zip", "has_sig": false, "md5_digest": "265da81591336fa14756e54b9665b869", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17738, "upload_time": "2015-07-21T16:50:52", "upload_time_iso_8601": "2015-07-21T16:50:52.040983Z", "url": "https://files.pythonhosted.org/packages/86/64/1cf9e98856843fa1f4dc06f9618ce3076d722f7052e36d462c461fa5ce05/sshtunnel-0.0.4.2.zip", "yanked": false}], "0.0.4.3": [{"comment_text": "", "digests": {"md5": "7e9116be785d7a3ff1add74dbc291ad7", "sha256": "27095dd475efcbcdd76a99d732bdd50c4192eba68c34b44555fb07b5f0e09128"}, "downloads": -1, "filename": "sshtunnel-0.0.4.3.zip", "has_sig": false, "md5_digest": "7e9116be785d7a3ff1add74dbc291ad7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17805, "upload_time": "2015-07-21T17:05:50", "upload_time_iso_8601": "2015-07-21T17:05:50.160954Z", "url": "https://files.pythonhosted.org/packages/30/8b/f5a4f0e638ca10dcdb1c5bf3e083ee0d41e9ae9e6baf8eb1712452601be8/sshtunnel-0.0.4.3.zip", "yanked": false}], "0.0.4.4": [{"comment_text": "", "digests": {"md5": "d998c76f27b78cb0fa951287dd17b7e7", "sha256": "e7a744d064b711637b6f439d4772b8e946a328270dcd5212f9a1b6823dc6fae0"}, "downloads": -1, "filename": "sshtunnel-0.0.4.4.zip", "has_sig": false, "md5_digest": "d998c76f27b78cb0fa951287dd17b7e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17958, "upload_time": "2015-07-22T15:12:11", "upload_time_iso_8601": "2015-07-22T15:12:11.618235Z", "url": "https://files.pythonhosted.org/packages/81/6d/c7c6600140ee2d6b2576d0a84de8acc740ec9ead0045e26da2b10083ba78/sshtunnel-0.0.4.4.zip", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "5c36420a39da18a2dd68052c960dc512", "sha256": "591a9b86345135176039601462b29dde33682ac9e59638a12931e2fdf3d4353f"}, "downloads": -1, "filename": "sshtunnel-0.0.5.zip", "has_sig": false, "md5_digest": "5c36420a39da18a2dd68052c960dc512", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21597, "upload_time": "2015-12-20T19:02:09", "upload_time_iso_8601": "2015-12-20T19:02:09.119928Z", "url": "https://files.pythonhosted.org/packages/91/f6/810a54b368a733973216e71d1abd01631010cfd801228756ea92819d9fc3/sshtunnel-0.0.5.zip", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "a8f996ff3bc82a45290d0e5c96b00596", "sha256": "87a2b02b0b94b644fea5b3d1e55c69b6159ee2f3bafb003802010ca34fea4b14"}, "downloads": -1, "filename": "sshtunnel-0.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a8f996ff3bc82a45290d0e5c96b00596", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 12251, "upload_time": "2015-12-22T18:38:27", "upload_time_iso_8601": "2015-12-22T18:38:27.065130Z", "url": "https://files.pythonhosted.org/packages/56/5f/26cadaf39a77afbc4087ba9138975f77843fcf82af8842332f8a58da4389/sshtunnel-0.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e516522e4003b89da39e67bc06685e7", "sha256": "e4767ac38763e563fe17aa1169a629140798055d27dfc5322757f12dc4183398"}, "downloads": -1, "filename": "sshtunnel-0.0.6.zip", "has_sig": false, "md5_digest": "1e516522e4003b89da39e67bc06685e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23861, "upload_time": "2015-12-22T18:38:20", "upload_time_iso_8601": "2015-12-22T18:38:20.995421Z", "url": "https://files.pythonhosted.org/packages/ef/ba/40e5c2cc0e79d32008ea5966c543c19cf2c22c9ed649d2659996cb05472a/sshtunnel-0.0.6.zip", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "1ceb56afb42c40dcc6ee5417fed17d90", "sha256": "78b8d82301535340ed8cbf08a7773bebfcf02738386ad640f7cfa404a23cf878"}, "downloads": -1, "filename": "sshtunnel-0.0.7.tar.gz", "has_sig": false, "md5_digest": "1ceb56afb42c40dcc6ee5417fed17d90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20559, "upload_time": "2016-02-09T18:11:52", "upload_time_iso_8601": "2016-02-09T18:11:52.487559Z", "url": "https://files.pythonhosted.org/packages/19/4e/a6c1770945f64cb976dddf13a4c2a2db2b8476195ff8d6d01bcc42f323f3/sshtunnel-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "e8458dd1f6ae1c3bf3334fee806e83ab", "sha256": "60c7ccd521562fb647d7204844476b97ec7eea811b5f53789e6aa39b791c0026"}, "downloads": -1, "filename": "sshtunnel-0.0.8.tar.gz", "has_sig": false, "md5_digest": "e8458dd1f6ae1c3bf3334fee806e83ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32318, "upload_time": "2016-03-08T11:25:47", "upload_time_iso_8601": "2016-03-08T11:25:47.398507Z", "url": "https://files.pythonhosted.org/packages/fe/0e/41977c19f6ff56ad74b79bd29a43adf5e31f72987eefe10bf8a4037471d9/sshtunnel-0.0.8.tar.gz", "yanked": false}], "0.0.8.1": [{"comment_text": "", "digests": {"md5": "b50dd95a8b9d6e3be55a90be9878ad02", "sha256": "4afc5074e33080949033f49bf8e7c26418044061d7a1aedafbe0ebff87daa61a"}, "downloads": -1, "filename": "sshtunnel-0.0.8.1.tar.gz", "has_sig": false, "md5_digest": "b50dd95a8b9d6e3be55a90be9878ad02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32616, "upload_time": "2016-03-14T15:28:12", "upload_time_iso_8601": "2016-03-14T15:28:12.493040Z", "url": "https://files.pythonhosted.org/packages/89/05/e6f58ffaa2e73f2fb3d7661e2c2f556ed3f5f4392e9838b898cc5e4c5f11/sshtunnel-0.0.8.1.tar.gz", "yanked": false}], "0.0.8.2": [{"comment_text": "", "digests": {"md5": "ce8b4d5c04077e270f94224c779739c1", "sha256": "b57a9fe53f61de04dc8434c9b62374fd907baca3ef7f8185556e56bc96819e71"}, "downloads": -1, "filename": "sshtunnel-0.0.8.2.tar.gz", "has_sig": false, "md5_digest": "ce8b4d5c04077e270f94224c779739c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28816, "upload_time": "2016-04-10T12:13:31", "upload_time_iso_8601": "2016-04-10T12:13:31.841431Z", "url": "https://files.pythonhosted.org/packages/d4/38/edb6132ecabf6f06f57999d444f1f4a66ea161932745bb2e5cacd21e78bd/sshtunnel-0.0.8.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "fa4b43d3d2780204fe162f17b94751cf", "sha256": "86458c79771dec3a2c6b7b63d5292e1e9d99f423054fb2d2ae6656e1e165f645"}, "downloads": -1, "filename": "sshtunnel-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fa4b43d3d2780204fe162f17b94751cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34175, "upload_time": "2016-08-10T18:14:06", "upload_time_iso_8601": "2016-08-10T18:14:06.021435Z", "url": "https://files.pythonhosted.org/packages/39/50/07e03bfbcee2668cc7262c2d2cc35ed939e1322bc3b86d4f1f5f0c897365/sshtunnel-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "9326b83da3cbc504b930aa661bde2bf6", "sha256": "0cedb3c88b74181da3eba7fee6671f76babf7e3bafe79f1c242c850a562dbfbe"}, "downloads": -1, "filename": "sshtunnel-0.1.1.tar.gz", "has_sig": false, "md5_digest": "9326b83da3cbc504b930aa661bde2bf6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34217, "upload_time": "2016-09-30T13:39:43", "upload_time_iso_8601": "2016-09-30T13:39:43.245437Z", "url": "https://files.pythonhosted.org/packages/e9/f4/70604c34100d4a183696e6d548de4bbcd217db369f86483a8f2faec69d57/sshtunnel-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "a926d4c4617cc69e8e4184809af28b5e", "sha256": "61138098403746fc2b6243e96fc03710570d6920af37ea3c6b4005d6df209216"}, "downloads": -1, "filename": "sshtunnel-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a926d4c4617cc69e8e4184809af28b5e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27014, "upload_time": "2018-02-02T11:16:23", "upload_time_iso_8601": "2018-02-02T11:16:23.281617Z", "url": "https://files.pythonhosted.org/packages/e1/b0/e7f0e1cc62a69a93eea7c2f20913c1e3e8f8abd795fe9155995fdc5a02a0/sshtunnel-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e99dbebe0b643f6d68b26ed434f3acd9", "sha256": "11032e23af010da81366ef944e8cb1cf508731e1d953463a420075acdfc02047"}, "downloads": -1, "filename": "sshtunnel-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e99dbebe0b643f6d68b26ed434f3acd9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34425, "upload_time": "2016-10-27T15:47:02", "upload_time_iso_8601": "2016-10-27T15:47:02.101883Z", "url": "https://files.pythonhosted.org/packages/dc/06/1d9969bbe7ad6895983016666699af2ab0b24d270c0abdecf51797d126cc/sshtunnel-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "18d4879ec22260fb9790f260a517d051", "sha256": "8e3c7fdf8b70231b6b672bc891e909905eafa50122d4be8341f60ebadc78f956"}, "downloads": -1, "filename": "sshtunnel-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "18d4879ec22260fb9790f260a517d051", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27033, "upload_time": "2018-02-02T11:16:43", "upload_time_iso_8601": "2018-02-02T11:16:43.517628Z", "url": "https://files.pythonhosted.org/packages/c6/be/11a0a38cb89a0de78a7e09f145ad1443ec9fe4ea7945447fac0349852468/sshtunnel-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a6fce36dec45ebff11422565303b9c2", "sha256": "9673b26d91e8a5569e2513fc657c26b2574ccf222d1026612ba630438bceebb0"}, "downloads": -1, "filename": "sshtunnel-0.1.3.tar.gz", "has_sig": false, "md5_digest": "4a6fce36dec45ebff11422565303b9c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34958, "upload_time": "2018-02-02T11:16:45", "upload_time_iso_8601": "2018-02-02T11:16:45.440144Z", "url": "https://files.pythonhosted.org/packages/9b/24/0eccfd7f0321184ef9d535d465ed02ba66e657089f97f307e7376bb97b6b/sshtunnel-0.1.3.tar.gz", "yanked": false}], "0.1.3.1": [{"comment_text": "", "digests": {"md5": "0d3ad4f7ac4ed8a49a0aa45d6ad8d86a", "sha256": "23aecddd25273e202509f7e0735def282e14019fdc7f237772276e82007e9442"}, "downloads": -1, "filename": "sshtunnel-0.1.3.1.tar.gz", "has_sig": false, "md5_digest": "0d3ad4f7ac4ed8a49a0aa45d6ad8d86a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47184, "upload_time": "2018-06-08T14:54:06", "upload_time_iso_8601": "2018-06-08T14:54:06.722407Z", "url": "https://files.pythonhosted.org/packages/56/53/07fbbc1ca276b6db7ba5a10f6bbe776948c2eb184885e939d6c882f2de0f/sshtunnel-0.1.3.1.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "fb16cf0aec60451369ce23a0491c8b9b", "sha256": "f29ae41a1bd3afa64e9a31029bece2966e4be9a9641e8262372741e691c40d76"}, "downloads": -1, "filename": "sshtunnel-0.1.4.tar.gz", "has_sig": false, "md5_digest": "fb16cf0aec60451369ce23a0491c8b9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48330, "upload_time": "2018-06-12T11:14:42", "upload_time_iso_8601": "2018-06-12T11:14:42.504025Z", "url": "https://files.pythonhosted.org/packages/bf/8d/385c7e7c90e17934b3102ad2902e224c27a7173a6a57ef4805dcef8043b1/sshtunnel-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "8c781366ebfc5e5146d6dc36a9fa5b84", "sha256": "c813fdcda8e81c3936ffeac47cb69cfb2d1f5e77ad0de656c6dab56aeebd9249"}, "downloads": -1, "filename": "sshtunnel-0.1.5.tar.gz", "has_sig": false, "md5_digest": "8c781366ebfc5e5146d6dc36a9fa5b84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49345, "upload_time": "2019-06-13T10:39:09", "upload_time_iso_8601": "2019-06-13T10:39:09.605952Z", "url": "https://files.pythonhosted.org/packages/c5/5c/4b320d7ec4b0d5d4d6df1fdf66a5799625b3623d0ce4efe81719c6f8dfb3/sshtunnel-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8c781366ebfc5e5146d6dc36a9fa5b84", "sha256": "c813fdcda8e81c3936ffeac47cb69cfb2d1f5e77ad0de656c6dab56aeebd9249"}, "downloads": -1, "filename": "sshtunnel-0.1.5.tar.gz", "has_sig": false, "md5_digest": "8c781366ebfc5e5146d6dc36a9fa5b84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49345, "upload_time": "2019-06-13T10:39:09", "upload_time_iso_8601": "2019-06-13T10:39:09.605952Z", "url": "https://files.pythonhosted.org/packages/c5/5c/4b320d7ec4b0d5d4d6df1fdf66a5799625b3623d0ce4efe81719c6f8dfb3/sshtunnel-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:04 2020"}