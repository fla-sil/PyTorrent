{"info": {"author": "lmk", "author_email": "lminko.lmk@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "\n# MadMAC [![Build Status](https://travis-ci.com/laminko/madmac.svg?branch=master)](https://travis-ci.com/laminko/madmac)\n\nMAC address generator library for testers.\n\n## Content\n\n- [Installation](#installation)\n- [Usage](#usage)\n  - [Command](#as-a-command)\n  - [Module](#as-a-module)\n\n### Installation\n\nUsing `pip`:\n\n> `pip install madmac`\n\nUsing source:\n\n```bash\n$ git clone https://github.com/laminko/madmac.git\n$ cd madmac\n$ python setup.py install\n```\n\n### Usage\n\n#### As a command\n\nCan be used `madmac` as command. The following will generate random MAC address.\n\n```bash\nmadmac\n```\n\nTo see help, enter `madmac --help`.\n\n```bash\nmadmac --help\nusage: madmac [-h] [-o OUI] [-r START] [-s STOP] [-t TOTAL] [-d DELIMITER]\n              [-c CASE]\n\nMAC address generator library for testers.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -o OUI, --oui OUI     6-digit organizationally unique identifier\n  -r START, --start START\n                        NIC specific start address\n  -s STOP, --stop STOP  NIC specific end address\n  -t TOTAL, --total TOTAL\n                        Number of MACs to generate\n  -d DELIMITER, --delimiter DELIMITER\n                        Delimiter for MAC address\n  -c CASE, --case CASE  Use lower or upper\n```\n\n> **NOTE**: `madmac` is not a binary file. You need to install python 3.5 to execute the command.\n\n#### As a module\n\nImport `MacGenerator` class from `madmac` module. And create an object using `MacGenerator` and call its member `generate()` function. `generate()` function will return python generator object.\n\nThe following code will generate single MAC address using default values.\n\n```python\nfrom madmac import MacGenerator\n\nmacg = MacGenerator()\nmacs = macg.generate()  # generator object which contains one item\nfrom pprint import pprint\npprint(list(macs))\n```\n\nDefault values are as follows:\n\n```python\n# 'oui':  None,\n# 'start': None,\n# 'stop': None,\n# 'total': 1,\n# 'delimiter': ':',\n# 'case': 'lower'\n```\n\nOne can provide `oui`:\n\n```python\nfrom madmac import MacGenerator\n\nmacg = MacGenerator(oui='F0-9F-C2')\nlist(macg.generate())\n```\n\nAlso specify `start` address and `end` address if they are known:\n\n```python\nfrom madmac import MacGenerator\n\nstart = '00-B0-A0'\nstop = '00-B0-DF'\nmacg = MacGenerator(start=start, stop=stop)\n```\n\n> **NOTE**: Above snippet describes to use random `oui`, but to use certain range from `start` and `stop` values. It will ignore `total` parameter. Delimiter and Case will be default values.\n\nSometimes, we might want to generate certain amount of MAC addresses:\n\n```python\nfrom madmac import MacGenerator\n\nmacg = MacGenerator(total=100)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/laminko/madmac", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "madmac", "package_url": "https://pypi.org/project/madmac/", "platform": "", "project_url": "https://pypi.org/project/madmac/", "project_urls": {"Homepage": "https://github.com/laminko/madmac"}, "release_url": "https://pypi.org/project/madmac/1.0.1/", "requires_dist": null, "requires_python": ">=3.5.2", "summary": "madmac: MAC address generator", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>MadMAC <a href=\"https://travis-ci.com/laminko/madmac\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4d84b74f7887e2cd5be95475c06cdadab0c52028/68747470733a2f2f7472617669732d63692e636f6d2f6c616d696e6b6f2f6d61646d61632e7376673f6272616e63683d6d6173746572\"></a></h1>\n<p>MAC address generator library for testers.</p>\n<h2>Content</h2>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a>\n<ul>\n<li><a href=\"#as-a-command\" rel=\"nofollow\">Command</a></li>\n<li><a href=\"#as-a-module\" rel=\"nofollow\">Module</a></li>\n</ul>\n</li>\n</ul>\n<h3>Installation</h3>\n<p>Using <code>pip</code>:</p>\n<blockquote>\n<p><code>pip install madmac</code></p>\n</blockquote>\n<p>Using source:</p>\n<pre>$ git clone https://github.com/laminko/madmac.git\n$ <span class=\"nb\">cd</span> madmac\n$ python setup.py install\n</pre>\n<h3>Usage</h3>\n<h4>As a command</h4>\n<p>Can be used <code>madmac</code> as command. The following will generate random MAC address.</p>\n<pre>madmac\n</pre>\n<p>To see help, enter <code>madmac --help</code>.</p>\n<pre>madmac --help\nusage: madmac <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>-o OUI<span class=\"o\">]</span> <span class=\"o\">[</span>-r START<span class=\"o\">]</span> <span class=\"o\">[</span>-s STOP<span class=\"o\">]</span> <span class=\"o\">[</span>-t TOTAL<span class=\"o\">]</span> <span class=\"o\">[</span>-d DELIMITER<span class=\"o\">]</span>\n              <span class=\"o\">[</span>-c CASE<span class=\"o\">]</span>\n\nMAC address generator library <span class=\"k\">for</span> testers.\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -o OUI, --oui OUI     <span class=\"m\">6</span>-digit organizationally unique identifier\n  -r START, --start START\n                        NIC specific start address\n  -s STOP, --stop STOP  NIC specific end address\n  -t TOTAL, --total TOTAL\n                        Number of MACs to generate\n  -d DELIMITER, --delimiter DELIMITER\n                        Delimiter <span class=\"k\">for</span> MAC address\n  -c CASE, --case CASE  Use lower or upper\n</pre>\n<blockquote>\n<p><strong>NOTE</strong>: <code>madmac</code> is not a binary file. You need to install python 3.5 to execute the command.</p>\n</blockquote>\n<h4>As a module</h4>\n<p>Import <code>MacGenerator</code> class from <code>madmac</code> module. And create an object using <code>MacGenerator</code> and call its member <code>generate()</code> function. <code>generate()</code> function will return python generator object.</p>\n<p>The following code will generate single MAC address using default values.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">madmac</span> <span class=\"kn\">import</span> <span class=\"n\">MacGenerator</span>\n\n<span class=\"n\">macg</span> <span class=\"o\">=</span> <span class=\"n\">MacGenerator</span><span class=\"p\">()</span>\n<span class=\"n\">macs</span> <span class=\"o\">=</span> <span class=\"n\">macg</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">()</span>  <span class=\"c1\"># generator object which contains one item</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pprint</span> <span class=\"kn\">import</span> <span class=\"n\">pprint</span>\n<span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">macs</span><span class=\"p\">))</span>\n</pre>\n<p>Default values are as follows:</p>\n<pre><span class=\"c1\"># 'oui':  None,</span>\n<span class=\"c1\"># 'start': None,</span>\n<span class=\"c1\"># 'stop': None,</span>\n<span class=\"c1\"># 'total': 1,</span>\n<span class=\"c1\"># 'delimiter': ':',</span>\n<span class=\"c1\"># 'case': 'lower'</span>\n</pre>\n<p>One can provide <code>oui</code>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">madmac</span> <span class=\"kn\">import</span> <span class=\"n\">MacGenerator</span>\n\n<span class=\"n\">macg</span> <span class=\"o\">=</span> <span class=\"n\">MacGenerator</span><span class=\"p\">(</span><span class=\"n\">oui</span><span class=\"o\">=</span><span class=\"s1\">'F0-9F-C2'</span><span class=\"p\">)</span>\n<span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">macg</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">())</span>\n</pre>\n<p>Also specify <code>start</code> address and <code>end</code> address if they are known:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">madmac</span> <span class=\"kn\">import</span> <span class=\"n\">MacGenerator</span>\n\n<span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"s1\">'00-B0-A0'</span>\n<span class=\"n\">stop</span> <span class=\"o\">=</span> <span class=\"s1\">'00-B0-DF'</span>\n<span class=\"n\">macg</span> <span class=\"o\">=</span> <span class=\"n\">MacGenerator</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"o\">=</span><span class=\"n\">stop</span><span class=\"p\">)</span>\n</pre>\n<blockquote>\n<p><strong>NOTE</strong>: Above snippet describes to use random <code>oui</code>, but to use certain range from <code>start</code> and <code>stop</code> values. It will ignore <code>total</code> parameter. Delimiter and Case will be default values.</p>\n</blockquote>\n<p>Sometimes, we might want to generate certain amount of MAC addresses:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">madmac</span> <span class=\"kn\">import</span> <span class=\"n\">MacGenerator</span>\n\n<span class=\"n\">macg</span> <span class=\"o\">=</span> <span class=\"n\">MacGenerator</span><span class=\"p\">(</span><span class=\"n\">total</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 5389418, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "8d092033970136caf76d735f596812df", "sha256": "309c1a5ab1fe101eaa14a67205b6d43134a41b656c283381d5b70d0f0329344b"}, "downloads": -1, "filename": "madmac-0.3.0.tar.gz", "has_sig": false, "md5_digest": "8d092033970136caf76d735f596812df", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.2", "size": 4429, "upload_time": "2019-05-30T17:50:39", "upload_time_iso_8601": "2019-05-30T17:50:39.542425Z", "url": "https://files.pythonhosted.org/packages/18/16/f7f9a0ff6513ef52bf998935df4f8b47931409fbdfd9786629c6fa88f530/madmac-0.3.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "85051170829b94fd0726ce90dbc52e8b", "sha256": "b8a0ddfa039987d2901454c341d19222894beca215ad406837ae97847bbc7e06"}, "downloads": -1, "filename": "madmac-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "85051170829b94fd0726ce90dbc52e8b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.2", "size": 5137, "upload_time": "2019-06-07T15:35:26", "upload_time_iso_8601": "2019-06-07T15:35:26.999257Z", "url": "https://files.pythonhosted.org/packages/01/2f/8258917d741701d51e33571131e844e93fc197f49d9bb24c7d74f232848c/madmac-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "47d0a50907a6558d6031ecc31039458b", "sha256": "ca040e48766e50379a2cc733cd5523c84c6a44c264b5b6b3dab3f7dc1473f83e"}, "downloads": -1, "filename": "madmac-1.0.0.tar.gz", "has_sig": false, "md5_digest": "47d0a50907a6558d6031ecc31039458b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.2", "size": 5374, "upload_time": "2019-06-07T15:35:28", "upload_time_iso_8601": "2019-06-07T15:35:28.502937Z", "url": "https://files.pythonhosted.org/packages/04/c9/1c5c288a37b9f95622f27707299d7eb1e19667721efc9bc7a3588f1c21b0/madmac-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "cdcb7cd7060866bb3b3e5fa168f22778", "sha256": "af4da44b9d586fb176af6cc6a42ea0bda5408f247b6376714f1bebc7d968aaf7"}, "downloads": -1, "filename": "madmac-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cdcb7cd7060866bb3b3e5fa168f22778", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.2", "size": 5195, "upload_time": "2019-06-12T04:33:54", "upload_time_iso_8601": "2019-06-12T04:33:54.318767Z", "url": "https://files.pythonhosted.org/packages/db/ed/c41925b65b172728971c8e3618ff23dcb9d03218ac70fea846018f061f00/madmac-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99de1763e013cf553073727a8a1d0931", "sha256": "06b581352f827280c57e0f35282c635439eb98e9cfab9ed517fbade4db2acc9b"}, "downloads": -1, "filename": "madmac-1.0.1.tar.gz", "has_sig": false, "md5_digest": "99de1763e013cf553073727a8a1d0931", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.2", "size": 5426, "upload_time": "2019-06-12T04:33:55", "upload_time_iso_8601": "2019-06-12T04:33:55.668880Z", "url": "https://files.pythonhosted.org/packages/86/2c/3867b95f154f48164d927ef45f43e0d0d62ecf7ab099edb131caf4507bbb/madmac-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cdcb7cd7060866bb3b3e5fa168f22778", "sha256": "af4da44b9d586fb176af6cc6a42ea0bda5408f247b6376714f1bebc7d968aaf7"}, "downloads": -1, "filename": "madmac-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cdcb7cd7060866bb3b3e5fa168f22778", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.2", "size": 5195, "upload_time": "2019-06-12T04:33:54", "upload_time_iso_8601": "2019-06-12T04:33:54.318767Z", "url": "https://files.pythonhosted.org/packages/db/ed/c41925b65b172728971c8e3618ff23dcb9d03218ac70fea846018f061f00/madmac-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99de1763e013cf553073727a8a1d0931", "sha256": "06b581352f827280c57e0f35282c635439eb98e9cfab9ed517fbade4db2acc9b"}, "downloads": -1, "filename": "madmac-1.0.1.tar.gz", "has_sig": false, "md5_digest": "99de1763e013cf553073727a8a1d0931", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.2", "size": 5426, "upload_time": "2019-06-12T04:33:55", "upload_time_iso_8601": "2019-06-12T04:33:55.668880Z", "url": "https://files.pythonhosted.org/packages/86/2c/3867b95f154f48164d927ef45f43e0d0d62ecf7ab099edb131caf4507bbb/madmac-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:13 2020"}