{"info": {"author": "Piotr Rarus", "author_email": "piotr.rarus@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Coltrane\n\n## Description\n\nGeneral use, **pipeline-oriented** ML platform built on top of sklearn.\nLets user configure pipelines, load data, and evaluate pipeline against data. Who's said that improvising over `Giant Steps` has to be hard? This framework eases and standardizes research process. User can focus on configuring pipeline, or implementing core pipeline elements.\n\n## Features\n\n- processing research batches\n- some nice plots by plotly\n- data wrappers and loaders\n\n### Data set loaders\n\n#### Plain `.csv`\n\n- single label\n\n## Getting started\n\n```sh\npip install coltrane\n```\n\n\n## Inspection\n\nLoad data set.\n\n```py\nfrom pathlib import Path\n\nfrom coltrane.classification import Inspector\nfrom coltrane.file.io.csv.single import Data\n\n__LOG = Path('log')\n__DATA_IRIS = Path('coltrane/test/data/iris.csv')\n__RANDOM_STATE = 45625461\n\ndata = Data(path=__DATA_IRIS)\n```\n\nCreate `Inspector` instance and run inspection. This will output some stats to provided output directory.\n\n```py\ninspector = Inspector()\nsummary = inspector.inspect(data, output=__LOG)\n```\n\nYou can access some additional stats and plot them.\n\n```py\n\n# this one's useful for cost-sensitive learning\nclass_balance = inspector.get_class_balance(data)\ninspector.plot_class_balance(class_balance)\n```\n\nCheck notebook examples for more.\n\n## Processing\n\n```py\nfrom pathlib import Path\n\nfrom sklearn.metrics import (accuracy_score, f1_score, make_scorer,\n                             precision_score, recall_score)\nfrom sklearn.model_selection import RepeatedStratifiedKFold\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler\n\nfrom coltrane import Batch\nfrom coltrane.classification import Processor\nfrom coltrane.file.io.csv.single import Data\n\n\n__LOG = Path('log')\n__DATA_IRIS = Path('coltrane/test/data/iris.csv')\n__RANDOM_STATE = 45625461\n\n\nbatch = Batch(\n    Data(path=__DATA_IRIS),\n    pipeline=Pipeline(\n        steps=[\n            ('standard-scaler', StandardScaler()),\n            ('naive-bayes', GaussianNB())\n        ]\n    ),\n    selection=RepeatedStratifiedKFold(\n        n_splits=5,\n        n_repeats=4,\n        random_state=__RANDOM_STATE\n    ),\n    scorers={\n        'accuracy': make_scorer(accuracy_score),\n        'precision': make_scorer(precision_score, average='macro'),\n        'recall': make_scorer(recall_score, average='macro'),\n        'f1': make_scorer(f1_score, average='macro')\n    },\n    encoder=LabelEncoder()\n)\n\nprocessor = Processor()\nstats = processor.process(batch, output=__LOG)\n```\n\n### Authors\n\n- Piotr Rarus (piotr.rarus@gmail.com)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/piotr-rarus/coltrane", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "coltrane", "package_url": "https://pypi.org/project/coltrane/", "platform": "", "project_url": "https://pypi.org/project/coltrane/", "project_urls": {"Homepage": "https://github.com/piotr-rarus/coltrane"}, "release_url": "https://pypi.org/project/coltrane/0.1.1/", "requires_dist": ["austen (==0.2.7)", "joblib (==0.14.1)", "jupyter (==1.0.0)", "lazy (==1.4)", "numpy (==1.18.2)", "pandas (==1.0.3)", "plotly (==4.6.0)", "scikit-learn (==0.22.2)", "tqdm (==4.45.0)"], "requires_python": "", "summary": "Just another ML framework. Built on top of scikit-learn.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Coltrane</h1>\n<h2>Description</h2>\n<p>General use, <strong>pipeline-oriented</strong> ML platform built on top of sklearn.\nLets user configure pipelines, load data, and evaluate pipeline against data. Who's said that improvising over <code>Giant Steps</code> has to be hard? This framework eases and standardizes research process. User can focus on configuring pipeline, or implementing core pipeline elements.</p>\n<h2>Features</h2>\n<ul>\n<li>processing research batches</li>\n<li>some nice plots by plotly</li>\n<li>data wrappers and loaders</li>\n</ul>\n<h3>Data set loaders</h3>\n<h4>Plain <code>.csv</code></h4>\n<ul>\n<li>single label</li>\n</ul>\n<h2>Getting started</h2>\n<pre>pip install coltrane\n</pre>\n<h2>Inspection</h2>\n<p>Load data set.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">coltrane.classification</span> <span class=\"kn\">import</span> <span class=\"n\">Inspector</span>\n<span class=\"kn\">from</span> <span class=\"nn\">coltrane.file.io.csv.single</span> <span class=\"kn\">import</span> <span class=\"n\">Data</span>\n\n<span class=\"n\">__LOG</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">'log'</span><span class=\"p\">)</span>\n<span class=\"n\">__DATA_IRIS</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">'coltrane/test/data/iris.csv'</span><span class=\"p\">)</span>\n<span class=\"n\">__RANDOM_STATE</span> <span class=\"o\">=</span> <span class=\"mi\">45625461</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">Data</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">__DATA_IRIS</span><span class=\"p\">)</span>\n</pre>\n<p>Create <code>Inspector</code> instance and run inspection. This will output some stats to provided output directory.</p>\n<pre><span class=\"n\">inspector</span> <span class=\"o\">=</span> <span class=\"n\">Inspector</span><span class=\"p\">()</span>\n<span class=\"n\">summary</span> <span class=\"o\">=</span> <span class=\"n\">inspector</span><span class=\"o\">.</span><span class=\"n\">inspect</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">output</span><span class=\"o\">=</span><span class=\"n\">__LOG</span><span class=\"p\">)</span>\n</pre>\n<p>You can access some additional stats and plot them.</p>\n<pre><span class=\"c1\"># this one's useful for cost-sensitive learning</span>\n<span class=\"n\">class_balance</span> <span class=\"o\">=</span> <span class=\"n\">inspector</span><span class=\"o\">.</span><span class=\"n\">get_class_balance</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"n\">inspector</span><span class=\"o\">.</span><span class=\"n\">plot_class_balance</span><span class=\"p\">(</span><span class=\"n\">class_balance</span><span class=\"p\">)</span>\n</pre>\n<p>Check notebook examples for more.</p>\n<h2>Processing</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.metrics</span> <span class=\"kn\">import</span> <span class=\"p\">(</span><span class=\"n\">accuracy_score</span><span class=\"p\">,</span> <span class=\"n\">f1_score</span><span class=\"p\">,</span> <span class=\"n\">make_scorer</span><span class=\"p\">,</span>\n                             <span class=\"n\">precision_score</span><span class=\"p\">,</span> <span class=\"n\">recall_score</span><span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">RepeatedStratifiedKFold</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.naive_bayes</span> <span class=\"kn\">import</span> <span class=\"n\">GaussianNB</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.pipeline</span> <span class=\"kn\">import</span> <span class=\"n\">Pipeline</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.preprocessing</span> <span class=\"kn\">import</span> <span class=\"n\">LabelEncoder</span><span class=\"p\">,</span> <span class=\"n\">StandardScaler</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">coltrane</span> <span class=\"kn\">import</span> <span class=\"n\">Batch</span>\n<span class=\"kn\">from</span> <span class=\"nn\">coltrane.classification</span> <span class=\"kn\">import</span> <span class=\"n\">Processor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">coltrane.file.io.csv.single</span> <span class=\"kn\">import</span> <span class=\"n\">Data</span>\n\n\n<span class=\"n\">__LOG</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">'log'</span><span class=\"p\">)</span>\n<span class=\"n\">__DATA_IRIS</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">'coltrane/test/data/iris.csv'</span><span class=\"p\">)</span>\n<span class=\"n\">__RANDOM_STATE</span> <span class=\"o\">=</span> <span class=\"mi\">45625461</span>\n\n\n<span class=\"n\">batch</span> <span class=\"o\">=</span> <span class=\"n\">Batch</span><span class=\"p\">(</span>\n    <span class=\"n\">Data</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">__DATA_IRIS</span><span class=\"p\">),</span>\n    <span class=\"n\">pipeline</span><span class=\"o\">=</span><span class=\"n\">Pipeline</span><span class=\"p\">(</span>\n        <span class=\"n\">steps</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"p\">(</span><span class=\"s1\">'standard-scaler'</span><span class=\"p\">,</span> <span class=\"n\">StandardScaler</span><span class=\"p\">()),</span>\n            <span class=\"p\">(</span><span class=\"s1\">'naive-bayes'</span><span class=\"p\">,</span> <span class=\"n\">GaussianNB</span><span class=\"p\">())</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">),</span>\n    <span class=\"n\">selection</span><span class=\"o\">=</span><span class=\"n\">RepeatedStratifiedKFold</span><span class=\"p\">(</span>\n        <span class=\"n\">n_splits</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n        <span class=\"n\">n_repeats</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span>\n        <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"n\">__RANDOM_STATE</span>\n    <span class=\"p\">),</span>\n    <span class=\"n\">scorers</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">'accuracy'</span><span class=\"p\">:</span> <span class=\"n\">make_scorer</span><span class=\"p\">(</span><span class=\"n\">accuracy_score</span><span class=\"p\">),</span>\n        <span class=\"s1\">'precision'</span><span class=\"p\">:</span> <span class=\"n\">make_scorer</span><span class=\"p\">(</span><span class=\"n\">precision_score</span><span class=\"p\">,</span> <span class=\"n\">average</span><span class=\"o\">=</span><span class=\"s1\">'macro'</span><span class=\"p\">),</span>\n        <span class=\"s1\">'recall'</span><span class=\"p\">:</span> <span class=\"n\">make_scorer</span><span class=\"p\">(</span><span class=\"n\">recall_score</span><span class=\"p\">,</span> <span class=\"n\">average</span><span class=\"o\">=</span><span class=\"s1\">'macro'</span><span class=\"p\">),</span>\n        <span class=\"s1\">'f1'</span><span class=\"p\">:</span> <span class=\"n\">make_scorer</span><span class=\"p\">(</span><span class=\"n\">f1_score</span><span class=\"p\">,</span> <span class=\"n\">average</span><span class=\"o\">=</span><span class=\"s1\">'macro'</span><span class=\"p\">)</span>\n    <span class=\"p\">},</span>\n    <span class=\"n\">encoder</span><span class=\"o\">=</span><span class=\"n\">LabelEncoder</span><span class=\"p\">()</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">processor</span> <span class=\"o\">=</span> <span class=\"n\">Processor</span><span class=\"p\">()</span>\n<span class=\"n\">stats</span> <span class=\"o\">=</span> <span class=\"n\">processor</span><span class=\"o\">.</span><span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">batch</span><span class=\"p\">,</span> <span class=\"n\">output</span><span class=\"o\">=</span><span class=\"n\">__LOG</span><span class=\"p\">)</span>\n</pre>\n<h3>Authors</h3>\n<ul>\n<li>Piotr Rarus (<a href=\"mailto:piotr.rarus@gmail.com\">piotr.rarus@gmail.com</a>)</li>\n</ul>\n\n          </div>"}, "last_serial": 6989325, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "57f17039388fa556a0586ccd51be9c74", "sha256": "226d218b62db32c431e3ef839d39af67650cc01431a7bec8750edfb3dccf884d"}, "downloads": -1, "filename": "coltrane-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "57f17039388fa556a0586ccd51be9c74", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16691, "upload_time": "2019-11-07T09:40:03", "upload_time_iso_8601": "2019-11-07T09:40:03.002883Z", "url": "https://files.pythonhosted.org/packages/d3/39/ccb6a44dc30ddd0a6869141c2d57967c6db092bfdabbf5028ddffe232238/coltrane-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7441ca9988713f0a1ba9be0cdba3120", "sha256": "37b33fea5828f6ec8409dde97b7a2804151b04fab0f2e8245b6385516e359efc"}, "downloads": -1, "filename": "coltrane-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a7441ca9988713f0a1ba9be0cdba3120", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10588, "upload_time": "2019-11-07T09:40:05", "upload_time_iso_8601": "2019-11-07T09:40:05.334948Z", "url": "https://files.pythonhosted.org/packages/f3/88/52e4e17e5e9d9cdd40da42f140217c74fc72321ea954dfeb769e2f801b3c/coltrane-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "b8591e35c65fb533bc249b78c69d5329", "sha256": "5560ce9cf4efb0c97585d825ffd92c4ea295d6b8a104156d68289dfd07f557c6"}, "downloads": -1, "filename": "coltrane-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b8591e35c65fb533bc249b78c69d5329", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16717, "upload_time": "2019-11-07T10:04:56", "upload_time_iso_8601": "2019-11-07T10:04:56.079216Z", "url": "https://files.pythonhosted.org/packages/0d/74/bcccc4ac54c57583e8e69a54711bf32e9f7281eba3f22703ee86d7be3731/coltrane-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "32d8db9aa7b178f94e02a593c3a0880f", "sha256": "ced7faec208f079ad43dbc51603d6773967239501ba33d860d75fba48fcbf610"}, "downloads": -1, "filename": "coltrane-0.0.2.tar.gz", "has_sig": false, "md5_digest": "32d8db9aa7b178f94e02a593c3a0880f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10607, "upload_time": "2019-11-07T10:04:57", "upload_time_iso_8601": "2019-11-07T10:04:57.328058Z", "url": "https://files.pythonhosted.org/packages/28/28/494f299a1eb87421b7c9a617aa9af602fc22ecdb6800262f6d1c641189f4/coltrane-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "438ee6a2256f43a5459f7176cdd863e3", "sha256": "4bcd126bb5b7c03c300f5570b17a1d9e09617e76aa60010b3dffc1fc4ce38719"}, "downloads": -1, "filename": "coltrane-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "438ee6a2256f43a5459f7176cdd863e3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16722, "upload_time": "2019-11-14T15:20:14", "upload_time_iso_8601": "2019-11-14T15:20:14.043603Z", "url": "https://files.pythonhosted.org/packages/a1/14/9cf4d0c98515e03c60b881d5a969bdfab6442f037829e64c033406d271ea/coltrane-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b481031ce38c4b7325fceb6e5b4ce518", "sha256": "6adac56f5d0798c9f1a8c32bf37b20903069ba8ac90102bed8ec250056067623"}, "downloads": -1, "filename": "coltrane-0.0.3.tar.gz", "has_sig": false, "md5_digest": "b481031ce38c4b7325fceb6e5b4ce518", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10606, "upload_time": "2019-11-14T15:20:15", "upload_time_iso_8601": "2019-11-14T15:20:15.479301Z", "url": "https://files.pythonhosted.org/packages/7a/d8/8cf1f08b7c9ba326e9f8c0a9a07dcba9f0cdea406e724edd8223bca8fc04/coltrane-0.0.3.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "33a05964b6bbaa2bb3667d98c77e9c9c", "sha256": "cac10ea45ba48241884d5de776a4745692eaabc8bd13e99e504420cb267ea7d6"}, "downloads": -1, "filename": "coltrane-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "33a05964b6bbaa2bb3667d98c77e9c9c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16345, "upload_time": "2020-02-11T12:21:21", "upload_time_iso_8601": "2020-02-11T12:21:21.607877Z", "url": "https://files.pythonhosted.org/packages/6c/d0/280555122d16de6fa557ca0a668792e87321f20cdb500d407aa77e1b961e/coltrane-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "45956ab939adc8fdf6183971a115906a", "sha256": "e9b650f1ab46beda0d42644e1d32fe155a98de7068bb13943cf04dfdb3dce4cf"}, "downloads": -1, "filename": "coltrane-0.0.5.tar.gz", "has_sig": false, "md5_digest": "45956ab939adc8fdf6183971a115906a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10289, "upload_time": "2020-02-11T12:21:22", "upload_time_iso_8601": "2020-02-11T12:21:22.759471Z", "url": "https://files.pythonhosted.org/packages/43/a4/9639d95ab0d609ee9a0edb466222e93b31a9d5a002bd3e03e7cd1133879d/coltrane-0.0.5.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "325c8cb6f991a38835400f6d8a27cfef", "sha256": "58f2d0bb9bcca724d98e2f354109f4bb6eaf2ceeb4ab43dc6a324b71cca46f1a"}, "downloads": -1, "filename": "coltrane-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "325c8cb6f991a38835400f6d8a27cfef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17943, "upload_time": "2020-04-06T17:09:40", "upload_time_iso_8601": "2020-04-06T17:09:40.160149Z", "url": "https://files.pythonhosted.org/packages/a7/4e/e0882d4dba1774e9a2ee201410267c4fe5cc257e0e9dc6384c64d9856e7a/coltrane-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3058a74e8b623f879d3e34fd42befbd", "sha256": "1dbdd58e27932e4f42dd175614026f5041b43c55294788b25b68f38f08c0c1b2"}, "downloads": -1, "filename": "coltrane-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c3058a74e8b623f879d3e34fd42befbd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11959, "upload_time": "2020-04-06T17:09:41", "upload_time_iso_8601": "2020-04-06T17:09:41.653107Z", "url": "https://files.pythonhosted.org/packages/16/dc/87dea293bddcb4563b89401df949fe6641728616f4bbbfb6dafc1d103407/coltrane-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "a61284ababd330396ec7fbbf7d86cb60", "sha256": "3074a17b50fd79cc865d73dc5deb42c34f4d398c66352261b7b0a12dedab6b3e"}, "downloads": -1, "filename": "coltrane-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a61284ababd330396ec7fbbf7d86cb60", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14927, "upload_time": "2020-04-09T21:21:51", "upload_time_iso_8601": "2020-04-09T21:21:51.283509Z", "url": "https://files.pythonhosted.org/packages/93/01/9a50331e950c68f468ea647447281dd9f9f04279f5cedcd2523a82622156/coltrane-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe15af8bba0b9156440bcb88927a57d6", "sha256": "eb8c514d87ac6db66285359bb68b0d1048504142609c516f24e98731a215ed02"}, "downloads": -1, "filename": "coltrane-0.1.1.tar.gz", "has_sig": false, "md5_digest": "fe15af8bba0b9156440bcb88927a57d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9888, "upload_time": "2020-04-09T21:21:52", "upload_time_iso_8601": "2020-04-09T21:21:52.217573Z", "url": "https://files.pythonhosted.org/packages/84/4c/ac067ecac00d6bf4f38293765475e61743531f2153cc7dc461a0b090e04b/coltrane-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a61284ababd330396ec7fbbf7d86cb60", "sha256": "3074a17b50fd79cc865d73dc5deb42c34f4d398c66352261b7b0a12dedab6b3e"}, "downloads": -1, "filename": "coltrane-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a61284ababd330396ec7fbbf7d86cb60", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14927, "upload_time": "2020-04-09T21:21:51", "upload_time_iso_8601": "2020-04-09T21:21:51.283509Z", "url": "https://files.pythonhosted.org/packages/93/01/9a50331e950c68f468ea647447281dd9f9f04279f5cedcd2523a82622156/coltrane-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe15af8bba0b9156440bcb88927a57d6", "sha256": "eb8c514d87ac6db66285359bb68b0d1048504142609c516f24e98731a215ed02"}, "downloads": -1, "filename": "coltrane-0.1.1.tar.gz", "has_sig": false, "md5_digest": "fe15af8bba0b9156440bcb88927a57d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9888, "upload_time": "2020-04-09T21:21:52", "upload_time_iso_8601": "2020-04-09T21:21:52.217573Z", "url": "https://files.pythonhosted.org/packages/84/4c/ac067ecac00d6bf4f38293765475e61743531f2153cc7dc461a0b090e04b/coltrane-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:31 2020"}