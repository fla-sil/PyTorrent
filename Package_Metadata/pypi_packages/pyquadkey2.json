{"info": {"author": "Ferdinand M\u00fctsch", "author_email": "ferdinand@muetsch.io", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: POSIX :: Linux", "Operating System :: Unix", "Programming Language :: Cython", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: GIS", "Typing :: Typed"], "description": "# \ud83c\udf0d pyquadkey2\n[![Documentation](https://docs.muetsch.io/badge.svg)](https://docs.muetsch.io/pyquadkey2/)\n\nThis is a feature-rich Python implementation of [QuadKeys](https://docs.microsoft.com/en-us/bingmaps/articles/bing-maps-tile-system), an approach to **geographical tiling**, that was proposed by Microsoft to be used for Bing Maps.\n\nIn essence, the concept is to **recursively** divide the flat, two-dimensional world map into squares. Each square contains **four squares** as children, which again contain four squares and so on, up **centimeter-level precision**. Each of these squares is **uniquely identifiable with a string** like `021030032`.\n\nFor more details on the concept, please refer to the [original article](https://docs.microsoft.com/en-us/bingmaps/articles/bing-maps-tile-system).\n\n[n1try/pyquadkey2](https://github.com/n1try/pyquadkey2) originates from a **fork** of [buckhx/QuadKey](https://github.com/buckhx/QuadKey), which is not maintained anymore. It build on top of that project and adds:\n\n* \u2705 Several (critical) [bug fixes](https://github.com/buckhx/QuadKey/pull/15)\n* \u2705 Python 3 support\n* \u2705 [Type hints](https://docs.python.org/3.6/library/typing.html) for all methods\n* \u2705 Higher test coverage\n* \u2705 Cython backend for improved performance\n* \u2705 64-bit integer representation of QuadKeys\n* \u2705 Additional features and convenience methods\n\n## Installation\n### Requirements\nThis library requires **Python 3.6** or higher. To compile it by yourself, Cython is required in addition.\n\n### Using Pip\n* `pip3 install pyquadkey2`\n\nPip installation is only tested for Linux and Mac, yet. If you encounter problems with the installation on Windows, please report them as a new issue.\n\n### From archive\n* Download the latest [release](https://github.com/n1try/pyquadkey2/releases) as archive (`.tar.gz`) or wheel (`.whl`), e.g. `0.1.1.tar.gz`\n* Install it with pip: `pip3 install 0.1.1.tar.gz`\n\n### From source\n* Clone repository: `git clone https://github.com/n1try/pyquadkey2`\n* Make sure Cython is installed: `pip3 install cython`\n* Compile Cython modules: `cd pyquadkey2/quadkey/tilesystem && python3 setup.py build_ext --inplace && ../../`\n* Install the library with Pip: `pip3 install .`\n\n### Troubleshooting\n* `ImportError: cannot import name 'tilesystem'`: Simply try `pip3 install --upgrade pyquadkey2` once again. Second time usually works, as required build extensions are installed then. This is a known issue and will be fixed in the future.\n\n## License\nApache 2.0\n\n[![Buy me a coffee](https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png)](https://buymeacoff.ee/n1try)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/n1try/pyquadkey2", "keywords": "tiling quadkey quadtile geospatial geohash", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyquadkey2", "package_url": "https://pypi.org/project/pyquadkey2/", "platform": "", "project_url": "https://pypi.org/project/pyquadkey2/", "project_urls": {"Bug Tracker": "https://github.com/n1try/pyquadkey2/issues", "Documentation": "https://docs.muetsch.io/pyquadkey2/", "Homepage": "https://github.com/n1try/pyquadkey2", "Source Code": "https://github.com/n1try/pyquadkey2"}, "release_url": "https://pypi.org/project/pyquadkey2/0.2.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Python implementation of geographical tiling using QuadKeys as proposed by Microsoft", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>\ud83c\udf0d pyquadkey2</h1>\n<p><a href=\"https://docs.muetsch.io/pyquadkey2/\" rel=\"nofollow\"><img alt=\"Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/db4186fcbc6cf02e941663b56ddbdddc12c8544c/68747470733a2f2f646f63732e6d7565747363682e696f2f62616467652e737667\"></a></p>\n<p>This is a feature-rich Python implementation of <a href=\"https://docs.microsoft.com/en-us/bingmaps/articles/bing-maps-tile-system\" rel=\"nofollow\">QuadKeys</a>, an approach to <strong>geographical tiling</strong>, that was proposed by Microsoft to be used for Bing Maps.</p>\n<p>In essence, the concept is to <strong>recursively</strong> divide the flat, two-dimensional world map into squares. Each square contains <strong>four squares</strong> as children, which again contain four squares and so on, up <strong>centimeter-level precision</strong>. Each of these squares is <strong>uniquely identifiable with a string</strong> like <code>021030032</code>.</p>\n<p>For more details on the concept, please refer to the <a href=\"https://docs.microsoft.com/en-us/bingmaps/articles/bing-maps-tile-system\" rel=\"nofollow\">original article</a>.</p>\n<p><a href=\"https://github.com/n1try/pyquadkey2\" rel=\"nofollow\">n1try/pyquadkey2</a> originates from a <strong>fork</strong> of <a href=\"https://github.com/buckhx/QuadKey\" rel=\"nofollow\">buckhx/QuadKey</a>, which is not maintained anymore. It build on top of that project and adds:</p>\n<ul>\n<li>\u2705 Several (critical) <a href=\"https://github.com/buckhx/QuadKey/pull/15\" rel=\"nofollow\">bug fixes</a></li>\n<li>\u2705 Python 3 support</li>\n<li>\u2705 <a href=\"https://docs.python.org/3.6/library/typing.html\" rel=\"nofollow\">Type hints</a> for all methods</li>\n<li>\u2705 Higher test coverage</li>\n<li>\u2705 Cython backend for improved performance</li>\n<li>\u2705 64-bit integer representation of QuadKeys</li>\n<li>\u2705 Additional features and convenience methods</li>\n</ul>\n<h2>Installation</h2>\n<h3>Requirements</h3>\n<p>This library requires <strong>Python 3.6</strong> or higher. To compile it by yourself, Cython is required in addition.</p>\n<h3>Using Pip</h3>\n<ul>\n<li><code>pip3 install pyquadkey2</code></li>\n</ul>\n<p>Pip installation is only tested for Linux and Mac, yet. If you encounter problems with the installation on Windows, please report them as a new issue.</p>\n<h3>From archive</h3>\n<ul>\n<li>Download the latest <a href=\"https://github.com/n1try/pyquadkey2/releases\" rel=\"nofollow\">release</a> as archive (<code>.tar.gz</code>) or wheel (<code>.whl</code>), e.g. <code>0.1.1.tar.gz</code></li>\n<li>Install it with pip: <code>pip3 install 0.1.1.tar.gz</code></li>\n</ul>\n<h3>From source</h3>\n<ul>\n<li>Clone repository: <code>git clone https://github.com/n1try/pyquadkey2</code></li>\n<li>Make sure Cython is installed: <code>pip3 install cython</code></li>\n<li>Compile Cython modules: <code>cd pyquadkey2/quadkey/tilesystem &amp;&amp; python3 setup.py build_ext --inplace &amp;&amp; ../../</code></li>\n<li>Install the library with Pip: <code>pip3 install .</code></li>\n</ul>\n<h3>Troubleshooting</h3>\n<ul>\n<li><code>ImportError: cannot import name 'tilesystem'</code>: Simply try <code>pip3 install --upgrade pyquadkey2</code> once again. Second time usually works, as required build extensions are installed then. This is a known issue and will be fixed in the future.</li>\n</ul>\n<h2>License</h2>\n<p>Apache 2.0</p>\n<p><a href=\"https://buymeacoff.ee/n1try\" rel=\"nofollow\"><img alt=\"Buy me a coffee\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/320bf793359f29544369a3f1ecd7ec6a07a5dcd6/68747470733a2f2f7777772e6275796d6561636f666665652e636f6d2f6173736574732f696d672f637573746f6d5f696d616765732f6f72616e67655f696d672e706e67\"></a></p>\n\n          </div>"}, "last_serial": 6097814, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "b337fda79e798f5bcb42a9b6f1f15970", "sha256": "6c32b4fb8a3a7311b68f3b8d209d4dbdce4c70ca3eb2a833c4bc8611194fb60a"}, "downloads": -1, "filename": "pyquadkey2-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b337fda79e798f5bcb42a9b6f1f15970", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 43898, "upload_time": "2019-11-07T21:22:26", "upload_time_iso_8601": "2019-11-07T21:22:26.729908Z", "url": "https://files.pythonhosted.org/packages/c9/0d/ad4ec0d25068085df9d476da1476215e1a73e882c116a9d06baac2f644bb/pyquadkey2-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "1b0ab721013859c6622d43e191135d23", "sha256": "0ab7919384d2b5a1f81e427fe94fb9d223fc4de7bfd91f2327db54217f8ee757"}, "downloads": -1, "filename": "pyquadkey2-0.2.0.tar.gz", "has_sig": false, "md5_digest": "1b0ab721013859c6622d43e191135d23", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 40880, "upload_time": "2019-11-08T08:17:23", "upload_time_iso_8601": "2019-11-08T08:17:23.477181Z", "url": "https://files.pythonhosted.org/packages/f2/5e/671b87ea0da1066e5b65ab32ef7efb6ca5f8d0ce894e5dc3a60dc53f4c13/pyquadkey2-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1b0ab721013859c6622d43e191135d23", "sha256": "0ab7919384d2b5a1f81e427fe94fb9d223fc4de7bfd91f2327db54217f8ee757"}, "downloads": -1, "filename": "pyquadkey2-0.2.0.tar.gz", "has_sig": false, "md5_digest": "1b0ab721013859c6622d43e191135d23", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 40880, "upload_time": "2019-11-08T08:17:23", "upload_time_iso_8601": "2019-11-08T08:17:23.477181Z", "url": "https://files.pythonhosted.org/packages/f2/5e/671b87ea0da1066e5b65ab32ef7efb6ca5f8d0ce894e5dc3a60dc53f4c13/pyquadkey2-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:41 2020"}