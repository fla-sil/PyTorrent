{"info": {"author": "Ian Bicking", "author_email": "ianb@openplans.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Paste", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Topic :: Internet :: WWW/HTTP :: WSGI", "Topic :: Internet :: WWW/HTTP :: WSGI :: Application", "Topic :: Text Processing :: Markup :: HTML"], "description": "Script Transcluder\n==================\n\nThis simple script lets people include bits of your content (hosted on\nwhatever server you like) into their own pages.  It uses the age-old\ntechnique used by ads of issuing writes from a Javascript file.\n\nIf you mount this at ``http://example.com/includer.js`` then you can\nuse tags like::\n\n    <script\n     src=\"http://example.com/includer.js?url=encoded-url\"></script>\n\n    <script\n     src=\"http://example.com/includer.js?url=encoded-url%23fragment\"></script>\n\n    <script\n     src=\"http://example.com/includer.js?url=encoded-url&dest=otherId\"></script>\n\nThese each include the content from the ``encoded-url``.  If you give\na fragment, it grabs just the bit of identified text.  If you don't,\nit'll take all the text in the ``<body>`` of the page.\n\nIt will put the output exactly where the ``<script>`` tag is in the\npage.  If you want to put it someplace else, ``&dest=id`` will put it\nin the element with the given id.  In that case it adds a little\nonload(-like) handler, and then sets the ``innerHTML`` of element with\nthat id.  If you can't fetch the url, then it will put a small error\nmessage into the page in its place.\n\nBy default it restricts urls based on the opt-in wildcards of the\n``allowed_urls`` setting.  You can use ``allowed_urls = *`` to allow\nanything, but this is not recommended.  You can also use ``same_host =\ntrue`` to allow requests to the same host as where the includer is hosted.\n\nTo minimize backend traffic, set ``cache_dir`` to a location to save\nthe requested pages.  All the caching is handled by `httplib2\n<http://bitworking.org/projects/httplib2/ref/module-httplib2.html>`_.\n\nExample\n~~~~~~~\n\nTo run an example, install the package and use ``paster serve\ndevelopment.ini`` (``development.ini`` is in the tarball).  This will\nstart up a server on ``http://localhost:8080/`` where you can view an\nexample.\n\nNews\n~~~~\n\n0.2\n---\n\n* In some cases extra ``<body>`` tags would be included in the transcluded\n  content (when that tag should never be present).\n\n0.1\n---\n\nInitial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/ScriptTranscluder", "keywords": "tranclude web application javascript", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "ScriptTranscluder", "package_url": "https://pypi.org/project/ScriptTranscluder/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ScriptTranscluder/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/ScriptTranscluder"}, "release_url": "https://pypi.org/project/ScriptTranscluder/0.2/", "requires_dist": null, "requires_python": null, "summary": "Transclude content via <script> tags", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This simple script lets people include bits of your content (hosted on\nwhatever server you like) into their own pages.  It uses the age-old\ntechnique used by ads of issuing writes from a Javascript file.</p>\n<p>If you mount this at <tt><span class=\"pre\">http://example.com/includer.js</span></tt> then you can\nuse tags like:</p>\n<pre>&lt;script\n src=\"http://example.com/includer.js?url=encoded-url\"&gt;&lt;/script&gt;\n\n&lt;script\n src=\"http://example.com/includer.js?url=encoded-url%23fragment\"&gt;&lt;/script&gt;\n\n&lt;script\n src=\"http://example.com/includer.js?url=encoded-url&amp;dest=otherId\"&gt;&lt;/script&gt;\n</pre>\n<p>These each include the content from the <tt><span class=\"pre\">encoded-url</span></tt>.  If you give\na fragment, it grabs just the bit of identified text.  If you don\u2019t,\nit\u2019ll take all the text in the <tt>&lt;body&gt;</tt> of the page.</p>\n<p>It will put the output exactly where the <tt>&lt;script&gt;</tt> tag is in the\npage.  If you want to put it someplace else, <tt>&amp;dest=id</tt> will put it\nin the element with the given id.  In that case it adds a little\nonload(-like) handler, and then sets the <tt>innerHTML</tt> of element with\nthat id.  If you can\u2019t fetch the url, then it will put a small error\nmessage into the page in its place.</p>\n<p>By default it restricts urls based on the opt-in wildcards of the\n<tt>allowed_urls</tt> setting.  You can use <tt>allowed_urls = *</tt> to allow\nanything, but this is not recommended.  You can also use <tt>same_host =\ntrue</tt> to allow requests to the same host as where the includer is hosted.</p>\n<p>To minimize backend traffic, set <tt>cache_dir</tt> to a location to save\nthe requested pages.  All the caching is handled by <a href=\"http://bitworking.org/projects/httplib2/ref/module-httplib2.html\" rel=\"nofollow\">httplib2</a>.</p>\n<div id=\"example\">\n<h2>Example</h2>\n<p>To run an example, install the package and use <tt>paster serve\ndevelopment.ini</tt> (<tt>development.ini</tt> is in the tarball).  This will\nstart up a server on <tt><span class=\"pre\">http://localhost:8080/</span></tt> where you can view an\nexample.</p>\n</div>\n<div id=\"news\">\n<h2>News</h2>\n<div id=\"id1\">\n<h3>0.2</h3>\n<ul>\n<li>In some cases extra <tt>&lt;body&gt;</tt> tags would be included in the transcluded\ncontent (when that tag should never be present).</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1</h3>\n<p>Initial release</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 785615, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "21d8f170b971525b6a9aa09df1273227", "sha256": "6d29e664082df189808ee286cbc646f37d59edeaa488e4bf795b3678d975fe4e"}, "downloads": -1, "filename": "ScriptTranscluder-0.1-py2.4.egg", "has_sig": false, "md5_digest": "21d8f170b971525b6a9aa09df1273227", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 9567, "upload_time": "2007-10-13T23:55:24", "upload_time_iso_8601": "2007-10-13T23:55:24Z", "url": "https://files.pythonhosted.org/packages/b5/27/02d9e2f9173295e495e6f47a72683e5c8baf833e13157c478e227337a17c/ScriptTranscluder-0.1-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2d3b2f7dc1ecf4d51f1a6737d0de9c7", "sha256": "e4d1152ee27238d606650bcb612e284630780eda0536ba4c4974128b6d1deb95"}, "downloads": -1, "filename": "ScriptTranscluder-0.1-py2.5.egg", "has_sig": false, "md5_digest": "d2d3b2f7dc1ecf4d51f1a6737d0de9c7", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 9491, "upload_time": "2007-10-13T23:55:33", "upload_time_iso_8601": "2007-10-13T23:55:33Z", "url": "https://files.pythonhosted.org/packages/cc/9b/9105078b5112c711e2ba50a18e7a97c93aee01d33066d1f25df6f63fcbcb/ScriptTranscluder-0.1-py2.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "1932038f57f1b943fcb91d7dc9265684", "sha256": "450aef28d0c5bd7981ec02f76a73fcb83a179748ddcc2a0facc7bd8db5e35326"}, "downloads": -1, "filename": "ScriptTranscluder-0.1.tar.gz", "has_sig": false, "md5_digest": "1932038f57f1b943fcb91d7dc9265684", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6548, "upload_time": "2007-10-13T23:55:24", "upload_time_iso_8601": "2007-10-13T23:55:24Z", "url": "https://files.pythonhosted.org/packages/40/ee/459f6800180c02189299e1b5608304c0e25d252f4dd1dfa39fc6451a648a/ScriptTranscluder-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "2d88aeb0e0d48d67444ed6618466dcfe", "sha256": "6a2c706f80c040eb6e4c3cb09cb7a6499d8c59ec8657b6b73465b981742a1015"}, "downloads": -1, "filename": "ScriptTranscluder-0.2.tar.gz", "has_sig": false, "md5_digest": "2d88aeb0e0d48d67444ed6618466dcfe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8356, "upload_time": "2009-02-10T22:45:52", "upload_time_iso_8601": "2009-02-10T22:45:52.559744Z", "url": "https://files.pythonhosted.org/packages/22/a3/9ff69ee334a6212eebf4abaa8edd1b84ba4c8e6fa1edd906b12ad3f1716d/ScriptTranscluder-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2d88aeb0e0d48d67444ed6618466dcfe", "sha256": "6a2c706f80c040eb6e4c3cb09cb7a6499d8c59ec8657b6b73465b981742a1015"}, "downloads": -1, "filename": "ScriptTranscluder-0.2.tar.gz", "has_sig": false, "md5_digest": "2d88aeb0e0d48d67444ed6618466dcfe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8356, "upload_time": "2009-02-10T22:45:52", "upload_time_iso_8601": "2009-02-10T22:45:52.559744Z", "url": "https://files.pythonhosted.org/packages/22/a3/9ff69ee334a6212eebf4abaa8edd1b84ba4c8e6fa1edd906b12ad3f1716d/ScriptTranscluder-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:30 2020"}