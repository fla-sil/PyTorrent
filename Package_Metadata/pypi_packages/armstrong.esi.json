{"info": {"author": "Bay Citizen & Texas Tribune", "author_email": "dev@armstrongcms.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "armstrong.esi\n=============\nDjango application for handling `edge side include (ESI)`_\n\n.. _edge side include (ESI): http://en.wikipedia.org/wiki/Edge_Side_Includes\n\nUsage\n-----\nESI allows you to specify sections of the site that require different caching\nstrategies and can be sent to a smart caching layer for rendering.\n\nFor example, if you want to send a page that is identical for every user except\nfor a welcome message, you could render that message like::\n\n    <html>\n      <body>\n        <esi:include \"/esi/welcome-message\" />\n        ... the rest of the page ...\n      </body>\n    </html>\n\nA smart proxy such as `Varnish`_ and the middleware included with\n``armstrong.esi`` can cache this page, and send a request for /esi/welcome-message\nfor personalization. The next user hitting the page would get the cached version and\nyour application server would only need to render /esi/welcome-message\n\narmstrong.esi provides a template tag for rendering the correct urls with the same\nsyntax as django's url tag. For example, the above example becomes::\n\n    {% load esi %}\n    <html>\n      <body>\n        {% esi welcome_message %}\n        ... the rest of the page ...\n      </body>\n    </html>\n\nThis replaces our ``{% esi %}`` tag with a ``<esi:include>`` tag pointing to\nthe URL for that view.\n\n\n.. _Varnish: http://www.varnish-cache.org/\n\nUsing with Varnish\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n`Varnish`_ integrates fairly easily with armstrong.esi. The EsiHeaderMiddleware\nsets the 'X-ESI' header to 'true' if the page request has esi tags on it.  To\nenable esi processing in varnish for pages that need it, add the following to\nyour vcl_fetch method::\n\n    if (beresp.http.X-ESI) {\n        set beresp.do_esi = true;\n    }\n\n\nLoading without ESI\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nThe template tag reads the ``DEBUG`` settings value and if set to ``True``\nrenders the view with the current request rather than including the\n``<esi:include>`` tag. This makes it easy to see fully rendered pages in development.\n\n\nInstallation & Configuration\n----------------------------\nYou can install the latest release of ``armstrong.esi`` using `pip`_:\n\n::\n\n    pip install armstrong.apps.articles\n\nMake sure to add ``armstrong.esi`` to your ``INSTALLED_APPS``.  You can \nadd this however you like.  This works as a copy-and-paste solution:\n\n::\n\n    INSTALLED_APPS += [\"armstrong.esi\"]\n\nYou must also enable the armstrong.esi middleware. To do this, add the following \nline to your ``MIDDLEWARE_CLASSES``::\n\n    'armstrong.esi.middleware.EsiMiddleware'\n\n.. _pip: http://www.pip-installer.org/\n\n\nContributing\n------------\n\n* Create something awesome -- make the code better, add some functionality,\n  whatever (this is the hardest part).\n* `Fork it`_\n* Create a topic branch to house your changes\n* Get all of your commits in the new topic branch\n* Submit a `pull request`_\n\n.. _pull request: http://help.github.com/pull-requests/\n.. _Fork it: http://help.github.com/forking/\n\n\nState of Project\n----------------\nArmstrong is an open-source news platform that is freely available to any\norganization.  It is the result of a collaboration between the `Texas Tribune`_\nand `Bay Citizen`_, and a grant from the `John S. and James L. Knight\nFoundation`_.  The first release is scheduled for June, 2011.\n\nTo follow development, be sure to join the `Google Group`_.\n\n``armstrong.apps.articles`` is part of the `Armstrong`_ project.  You're\nprobably looking for that.\n\n.. _Texas Tribune: http://www.texastribune.org/\n.. _Bay Citizen: http://www.baycitizen.org/\n.. _John S. and James L. Knight Foundation: http://www.knightfoundation.org/\n.. _Google Group: http://groups.google.com/group/armstrongcms\n.. _Armstrong: http://www.armstrongcms.org/\n\n\nLicense\n-------\nCopyright 2011-2012 Bay Citizen and Texas Tribune\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/armstrong/armstrong.esi/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "armstrong.esi", "package_url": "https://pypi.org/project/armstrong.esi/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/armstrong.esi/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/armstrong/armstrong.esi/"}, "release_url": "https://pypi.org/project/armstrong.esi/1.1.0/", "requires_dist": null, "requires_python": null, "summary": "Utilities to help development of sites that utilize Edge Side Includes", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Django application for handling <a href=\"http://en.wikipedia.org/wiki/Edge_Side_Includes\" rel=\"nofollow\">edge side include (ESI)</a></p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>ESI allows you to specify sections of the site that require different caching\nstrategies and can be sent to a smart caching layer for rendering.</p>\n<p>For example, if you want to send a page that is identical for every user except\nfor a welcome message, you could render that message like:</p>\n<pre>&lt;html&gt;\n  &lt;body&gt;\n    &lt;esi:include \"/esi/welcome-message\" /&gt;\n    ... the rest of the page ...\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n<p>A smart proxy such as <a href=\"http://www.varnish-cache.org/\" rel=\"nofollow\">Varnish</a> and the middleware included with\n<tt>armstrong.esi</tt> can cache this page, and send a request for /esi/welcome-message\nfor personalization. The next user hitting the page would get the cached version and\nyour application server would only need to render /esi/welcome-message</p>\n<p>armstrong.esi provides a template tag for rendering the correct urls with the same\nsyntax as django\u2019s url tag. For example, the above example becomes:</p>\n<pre>{% load esi %}\n&lt;html&gt;\n  &lt;body&gt;\n    {% esi welcome_message %}\n    ... the rest of the page ...\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n<p>This replaces our <tt>{% esi %}</tt> tag with a <tt>&lt;esi:include&gt;</tt> tag pointing to\nthe URL for that view.</p>\n<div id=\"using-with-varnish\">\n<h3>Using with Varnish</h3>\n<p><a href=\"http://www.varnish-cache.org/\" rel=\"nofollow\">Varnish</a> integrates fairly easily with armstrong.esi. The EsiHeaderMiddleware\nsets the \u2018X-ESI\u2019 header to \u2018true\u2019 if the page request has esi tags on it.  To\nenable esi processing in varnish for pages that need it, add the following to\nyour vcl_fetch method:</p>\n<pre>if (beresp.http.X-ESI) {\n    set beresp.do_esi = true;\n}\n</pre>\n</div>\n<div id=\"loading-without-esi\">\n<h3>Loading without ESI</h3>\n<p>The template tag reads the <tt>DEBUG</tt> settings value and if set to <tt>True</tt>\nrenders the view with the current request rather than including the\n<tt>&lt;esi:include&gt;</tt> tag. This makes it easy to see fully rendered pages in development.</p>\n</div>\n</div>\n<div id=\"installation-configuration\">\n<h2>Installation &amp; Configuration</h2>\n<p>You can install the latest release of <tt>armstrong.esi</tt> using <a href=\"http://www.pip-installer.org/\" rel=\"nofollow\">pip</a>:</p>\n<pre>pip install armstrong.apps.articles\n</pre>\n<p>Make sure to add <tt>armstrong.esi</tt> to your <tt>INSTALLED_APPS</tt>.  You can\nadd this however you like.  This works as a copy-and-paste solution:</p>\n<pre>INSTALLED_APPS += [\"armstrong.esi\"]\n</pre>\n<p>You must also enable the armstrong.esi middleware. To do this, add the following\nline to your <tt>MIDDLEWARE_CLASSES</tt>:</p>\n<pre>'armstrong.esi.middleware.EsiMiddleware'\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<ul>\n<li>Create something awesome \u2013 make the code better, add some functionality,\nwhatever (this is the hardest part).</li>\n<li><a href=\"http://help.github.com/forking/\" rel=\"nofollow\">Fork it</a></li>\n<li>Create a topic branch to house your changes</li>\n<li>Get all of your commits in the new topic branch</li>\n<li>Submit a <a href=\"http://help.github.com/pull-requests/\" rel=\"nofollow\">pull request</a></li>\n</ul>\n</div>\n<div id=\"state-of-project\">\n<h2>State of Project</h2>\n<p>Armstrong is an open-source news platform that is freely available to any\norganization.  It is the result of a collaboration between the <a href=\"http://www.texastribune.org/\" rel=\"nofollow\">Texas Tribune</a>\nand <a href=\"http://www.baycitizen.org/\" rel=\"nofollow\">Bay Citizen</a>, and a grant from the <a href=\"http://www.knightfoundation.org/\" rel=\"nofollow\">John S. and James L. Knight\nFoundation</a>.  The first release is scheduled for June, 2011.</p>\n<p>To follow development, be sure to join the <a href=\"http://groups.google.com/group/armstrongcms\" rel=\"nofollow\">Google Group</a>.</p>\n<p><tt>armstrong.apps.articles</tt> is part of the <a href=\"http://www.armstrongcms.org/\" rel=\"nofollow\">Armstrong</a> project.  You\u2019re\nprobably looking for that.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright 2011-2012 Bay Citizen and Texas Tribune</p>\n<p>Licensed under the Apache License, Version 2.0 (the \u201cLicense\u201d);\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n<blockquote>\n<a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">http://www.apache.org/licenses/LICENSE-2.0</a></blockquote>\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \u201cAS IS\u201d BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n</div>\n\n          </div>"}, "last_serial": 828782, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "baf64dd73e2d6ceabbef7cde9998f258", "sha256": "a5d1626f8372f97c0a8d89cdd714349fe7ae1b92c862409b51e3718eed44c8f0"}, "downloads": -1, "filename": "armstrong.esi-1.0.0.tar.gz", "has_sig": false, "md5_digest": "baf64dd73e2d6ceabbef7cde9998f258", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12273, "upload_time": "2012-04-12T00:57:04", "upload_time_iso_8601": "2012-04-12T00:57:04.747998Z", "url": "https://files.pythonhosted.org/packages/7c/17/95f6f1573ed3e6b5998c825e4ac46f009381683b22fa7be07aa51a51eb46/armstrong.esi-1.0.0.tar.gz", "yanked": false}], "1.0.0.2": [{"comment_text": "", "digests": {"md5": "087fdbc2eaa63920d8bc7fc238340402", "sha256": "cb0770eb55d223639041d6e3d1f4705f90345458b1e90ba0833dc773c03d9c03"}, "downloads": -1, "filename": "armstrong.esi-1.0.0.2.tar.gz", "has_sig": false, "md5_digest": "087fdbc2eaa63920d8bc7fc238340402", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12282, "upload_time": "2012-04-12T00:56:37", "upload_time_iso_8601": "2012-04-12T00:56:37.640173Z", "url": "https://files.pythonhosted.org/packages/79/96/3aaccd70001567a43269842bc11841e82bada494fa75593cb3debd2e8606/armstrong.esi-1.0.0.2.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "40212effe54371acc533a6f0ddf0a708", "sha256": "2aae7a562bd7b41aef6e059474c71985b0295e6b3bc9cdb7805ad1d438d3f5ab"}, "downloads": -1, "filename": "armstrong.esi-1.0.1.tar.gz", "has_sig": false, "md5_digest": "40212effe54371acc533a6f0ddf0a708", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14165, "upload_time": "2012-11-16T18:21:28", "upload_time_iso_8601": "2012-11-16T18:21:28.210801Z", "url": "https://files.pythonhosted.org/packages/52/39/c53020e3b54b3e6475ffcb5d1df8baf98ea07912b4c2d8f6f6515f5149c2/armstrong.esi-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "79ce5fb6b8c1f0f14e2de3a0a7c26372", "sha256": "8c48e7e4c0e749a381b137f4bd39b3c4db8e9c8056d987b9071ba717c29771fc"}, "downloads": -1, "filename": "armstrong.esi-1.1.0.tar.gz", "has_sig": false, "md5_digest": "79ce5fb6b8c1f0f14e2de3a0a7c26372", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14508, "upload_time": "2013-06-29T18:50:10", "upload_time_iso_8601": "2013-06-29T18:50:10.087539Z", "url": "https://files.pythonhosted.org/packages/0b/6d/99c2804e96ea76498f1a4470f8f524c6d2de313d8914a62b87c7a539a791/armstrong.esi-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "79ce5fb6b8c1f0f14e2de3a0a7c26372", "sha256": "8c48e7e4c0e749a381b137f4bd39b3c4db8e9c8056d987b9071ba717c29771fc"}, "downloads": -1, "filename": "armstrong.esi-1.1.0.tar.gz", "has_sig": false, "md5_digest": "79ce5fb6b8c1f0f14e2de3a0a7c26372", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14508, "upload_time": "2013-06-29T18:50:10", "upload_time_iso_8601": "2013-06-29T18:50:10.087539Z", "url": "https://files.pythonhosted.org/packages/0b/6d/99c2804e96ea76498f1a4470f8f524c6d2de313d8914a62b87c7a539a791/armstrong.esi-1.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:12 2020"}