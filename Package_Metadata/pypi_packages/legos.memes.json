{"info": {"author": "Drew Pearce", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3"], "description": "# legos.memes\n\n[![Travis](https://img.shields.io/travis/drewpearce/legos.memes.svg)]() [![PyPI](https://img.shields.io/pypi/pyversions/legos.memes.svg)]() [![PyPI](https://img.shields.io/pypi/v/legos.memes.svg)]()\n\n[![PyPI](https://img.shields.io/pypi/wheel/legos.memes.svg)]() [![PyPI](https://img.shields.io/pypi/l/legos.memes.svg)]() [![PyPI](https://img.shields.io/pypi/status/legos.memes.svg)]()\n\nAutomatically create memes based on phrasing in this memes lego. Built using the [memegen API](https://memegen.link/api/), with inspiration derived from the [Hubot memecaptain API implementation](https://www.npmjs.com/package/hubot-meme)\n\nThe Lego module system and Legobot are a FOSS project lovingly crafted by [Bren Briggs](https://github.com/bbriggs) and friends. All code borrowed from Legobot is his (C).\n\n## Usage\n\n### Autodetect\n\nThis lego is invoked simply by speaking in meme phrases. Currently the following memes are supported (case insensitive.)\n\n- `y u no...`\n  - Generates a Y U No guy meme with your text on it.\n- `yo dawg...`\n  - Generates an Xzibit Yo Dawg meme with your message text on it.\n- `what if I told you...`\n  - Generates a Morpheus What if I told you meme with your message text on it.\n- `one does not simply...`\n  - Generates a Boromir One does not simply meme with your message text on it.\n- `brace yourselves...`\n  - Generates a Ned Stark brace yourselves meme with your message text on it.\n- `why not both`\n  - Generates a Why don't we have both girl meme.\n- `ermahgerd...`\n  - Generates a Ermahgerd! girl meme with your message text on it.\n- `NO!`\n  - Generates a Grumpy Cat meme.\n- `i have no idea what i'm doing`\n  - Generates a Computer Dog meme.\n- `it's a trap`\n  - Generates an Admiral Ackbar meme.\n- `can't... if you don't ...`\n  - Generates a Roll Safe meme with your message on it.\n\n### Manual Invocation\n\nYou can also generate memes manuall through the syntax `<keyword>: <top line text>, <bottom line text>`\n\nIf you only want one line of text, simply don't include the comma.\n\nExample: `fry: not sure if ai, or really fast coder` would generate this meme: ![Fry Meme](https://memegen.link/fry/not_sure_if_ai/or_really_fast_coder.jpg)\n\nYou can get a list of keywords in chat via `!help memes list` or you can visit [Meme Keyword List](https://memegen.link/api/templates/)\n\n### Custom Templates\n\nYou can generate memes with a custom image as well. Simply pass in a dictionary to the keyword `config` when adding the lego to the baseplate.\n\n```python\nbaseplate_proxy.add_child(Memes, font='impact', config={\n    'templates': {\n        'code': {\n            'name': 'My Custom Template',\n            'custom': 'http://...'\n        }\n    }\n})\n```\n\n- code is the code you want to use to trigger the custom template\n- name is whatever name you want to use\n- custom is the url to the custom background template\n\n## Installation\n\n`pip3 install legos.memes`\n\nThis is a Lego designed for use with [Legobot](https://github.com/bbriggs/Legobot), so you'll get Legobot along with this. To deploy it, import the package and add it to the active legos like so:\n\n```python\n# This is the legobot stuff\nfrom Legobot import Lego\n# This is your lego\nfrom legos.memes import Memes\n\n# Legobot stuff here\nlock = threading.Lock()\nbaseplate = Lego.start(None, lock)\nbaseplate_proxy = baseplate.proxy()\n\n# Add your lego\nbaseplate_proxy.add_child(Memes, font='impact')  # font adding is optional\n```\n\n## Tweaking\n\nWhile you can use this one as-is, you could also add a localized version to your Legobot deployment by grabbing [memes.py](legos/memes.py) and deploying is as a local module. [Example of a Legobot instance with local modules](https://github.com/voxpupuli/thevoxfox/)\n\n## Contributing\n\nAs always, pull requests are welcome.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/drewpearce/legos.memes", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "legos.memes", "package_url": "https://pypi.org/project/legos.memes/", "platform": "", "project_url": "https://pypi.org/project/legos.memes/", "project_urls": {"Homepage": "https://github.com/drewpearce/legos.memes"}, "release_url": "https://pypi.org/project/legos.memes/0.3.6/", "requires_dist": null, "requires_python": "", "summary": "Meme generator using the memegen api", "version": "0.3.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>legos.memes</h1>\n<p><a href=\"\" rel=\"nofollow\"><img alt=\"Travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d515f26c2a8e8de57b0449bbf3ee7a8a92804395/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f647265777065617263652f6c65676f732e6d656d65732e737667\"></a> <a href=\"\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7d49057e94d5d00269ecbe0492b891989e5653a8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6c65676f732e6d656d65732e737667\"></a> <a href=\"\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7a9a96b2792d692c46a07524e2063c6347db1673/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c65676f732e6d656d65732e737667\"></a></p>\n<p><a href=\"\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7c8430853857044b7042f5d3a3947295e796c847/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f6c65676f732e6d656d65732e737667\"></a> <a href=\"\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d22a6582029d66ab6f11b571e75fba8f8016b93b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6c65676f732e6d656d65732e737667\"></a> <a href=\"\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e6eff94d9db67fa385c610d90664f4962e480ddc/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f6c65676f732e6d656d65732e737667\"></a></p>\n<p>Automatically create memes based on phrasing in this memes lego. Built using the <a href=\"https://memegen.link/api/\" rel=\"nofollow\">memegen API</a>, with inspiration derived from the <a href=\"https://www.npmjs.com/package/hubot-meme\" rel=\"nofollow\">Hubot memecaptain API implementation</a></p>\n<p>The Lego module system and Legobot are a FOSS project lovingly crafted by <a href=\"https://github.com/bbriggs\" rel=\"nofollow\">Bren Briggs</a> and friends. All code borrowed from Legobot is his (C).</p>\n<h2>Usage</h2>\n<h3>Autodetect</h3>\n<p>This lego is invoked simply by speaking in meme phrases. Currently the following memes are supported (case insensitive.)</p>\n<ul>\n<li><code>y u no...</code>\n<ul>\n<li>Generates a Y U No guy meme with your text on it.</li>\n</ul>\n</li>\n<li><code>yo dawg...</code>\n<ul>\n<li>Generates an Xzibit Yo Dawg meme with your message text on it.</li>\n</ul>\n</li>\n<li><code>what if I told you...</code>\n<ul>\n<li>Generates a Morpheus What if I told you meme with your message text on it.</li>\n</ul>\n</li>\n<li><code>one does not simply...</code>\n<ul>\n<li>Generates a Boromir One does not simply meme with your message text on it.</li>\n</ul>\n</li>\n<li><code>brace yourselves...</code>\n<ul>\n<li>Generates a Ned Stark brace yourselves meme with your message text on it.</li>\n</ul>\n</li>\n<li><code>why not both</code>\n<ul>\n<li>Generates a Why don't we have both girl meme.</li>\n</ul>\n</li>\n<li><code>ermahgerd...</code>\n<ul>\n<li>Generates a Ermahgerd! girl meme with your message text on it.</li>\n</ul>\n</li>\n<li><code>NO!</code>\n<ul>\n<li>Generates a Grumpy Cat meme.</li>\n</ul>\n</li>\n<li><code>i have no idea what i'm doing</code>\n<ul>\n<li>Generates a Computer Dog meme.</li>\n</ul>\n</li>\n<li><code>it's a trap</code>\n<ul>\n<li>Generates an Admiral Ackbar meme.</li>\n</ul>\n</li>\n<li><code>can't... if you don't ...</code>\n<ul>\n<li>Generates a Roll Safe meme with your message on it.</li>\n</ul>\n</li>\n</ul>\n<h3>Manual Invocation</h3>\n<p>You can also generate memes manuall through the syntax <code>&lt;keyword&gt;: &lt;top line text&gt;, &lt;bottom line text&gt;</code></p>\n<p>If you only want one line of text, simply don't include the comma.</p>\n<p>Example: <code>fry: not sure if ai, or really fast coder</code> would generate this meme: <img alt=\"Fry Meme\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dfff3c6033d759017c938735282413925251311c/68747470733a2f2f6d656d6567656e2e6c696e6b2f6672792f6e6f745f737572655f69665f61692f6f725f7265616c6c795f666173745f636f6465722e6a7067\"></p>\n<p>You can get a list of keywords in chat via <code>!help memes list</code> or you can visit <a href=\"https://memegen.link/api/templates/\" rel=\"nofollow\">Meme Keyword List</a></p>\n<h3>Custom Templates</h3>\n<p>You can generate memes with a custom image as well. Simply pass in a dictionary to the keyword <code>config</code> when adding the lego to the baseplate.</p>\n<pre><span class=\"n\">baseplate_proxy</span><span class=\"o\">.</span><span class=\"n\">add_child</span><span class=\"p\">(</span><span class=\"n\">Memes</span><span class=\"p\">,</span> <span class=\"n\">font</span><span class=\"o\">=</span><span class=\"s1\">'impact'</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n    <span class=\"s1\">'templates'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'code'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'My Custom Template'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'custom'</span><span class=\"p\">:</span> <span class=\"s1\">'http://...'</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n</pre>\n<ul>\n<li>code is the code you want to use to trigger the custom template</li>\n<li>name is whatever name you want to use</li>\n<li>custom is the url to the custom background template</li>\n</ul>\n<h2>Installation</h2>\n<p><code>pip3 install legos.memes</code></p>\n<p>This is a Lego designed for use with <a href=\"https://github.com/bbriggs/Legobot\" rel=\"nofollow\">Legobot</a>, so you'll get Legobot along with this. To deploy it, import the package and add it to the active legos like so:</p>\n<pre><span class=\"c1\"># This is the legobot stuff</span>\n<span class=\"kn\">from</span> <span class=\"nn\">Legobot</span> <span class=\"kn\">import</span> <span class=\"n\">Lego</span>\n<span class=\"c1\"># This is your lego</span>\n<span class=\"kn\">from</span> <span class=\"nn\">legos.memes</span> <span class=\"kn\">import</span> <span class=\"n\">Memes</span>\n\n<span class=\"c1\"># Legobot stuff here</span>\n<span class=\"n\">lock</span> <span class=\"o\">=</span> <span class=\"n\">threading</span><span class=\"o\">.</span><span class=\"n\">Lock</span><span class=\"p\">()</span>\n<span class=\"n\">baseplate</span> <span class=\"o\">=</span> <span class=\"n\">Lego</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">lock</span><span class=\"p\">)</span>\n<span class=\"n\">baseplate_proxy</span> <span class=\"o\">=</span> <span class=\"n\">baseplate</span><span class=\"o\">.</span><span class=\"n\">proxy</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Add your lego</span>\n<span class=\"n\">baseplate_proxy</span><span class=\"o\">.</span><span class=\"n\">add_child</span><span class=\"p\">(</span><span class=\"n\">Memes</span><span class=\"p\">,</span> <span class=\"n\">font</span><span class=\"o\">=</span><span class=\"s1\">'impact'</span><span class=\"p\">)</span>  <span class=\"c1\"># font adding is optional</span>\n</pre>\n<h2>Tweaking</h2>\n<p>While you can use this one as-is, you could also add a localized version to your Legobot deployment by grabbing <a href=\"legos/memes.py\" rel=\"nofollow\">memes.py</a> and deploying is as a local module. <a href=\"https://github.com/voxpupuli/thevoxfox/\" rel=\"nofollow\">Example of a Legobot instance with local modules</a></p>\n<h2>Contributing</h2>\n<p>As always, pull requests are welcome.</p>\n\n          </div>"}, "last_serial": 6623452, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "63f2fd7a520b9329e6f825745f7a27dd", "sha256": "9f2e5a19d2db5708fd475ce7e3cf9eec635010ee3583a77c8c6f356364ae23ee"}, "downloads": -1, "filename": "legos.memes-0.1.0.tar.gz", "has_sig": false, "md5_digest": "63f2fd7a520b9329e6f825745f7a27dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3101, "upload_time": "2017-04-19T02:10:55", "upload_time_iso_8601": "2017-04-19T02:10:55.305236Z", "url": "https://files.pythonhosted.org/packages/f6/f3/3199d9fcd2b1c33e23d6a682bf5dafc3c5c31890c9347a8f4f8cc45e242c/legos.memes-0.1.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "dc4cbe102569927ea1cbb3695ea79416", "sha256": "4663d0851ab3e166879e40a6c83de83c13da795c858450156c176bb2b789f3c2"}, "downloads": -1, "filename": "legos.memes-0.2.1.tar.gz", "has_sig": false, "md5_digest": "dc4cbe102569927ea1cbb3695ea79416", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3778, "upload_time": "2018-05-10T14:38:27", "upload_time_iso_8601": "2018-05-10T14:38:27.434576Z", "url": "https://files.pythonhosted.org/packages/e1/44/333bd21018ecfeb5c3e767610a888a8cbfff74d2f015b5e684bb220f62c9/legos.memes-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "677893650d66b72d9223e31891574b54", "sha256": "0f6c966d6097598257057860e7ea8bf1e57bef55abf15144b2c68dba9459edc0"}, "downloads": -1, "filename": "legos.memes-0.2.2.tar.gz", "has_sig": false, "md5_digest": "677893650d66b72d9223e31891574b54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4067, "upload_time": "2018-05-10T18:54:20", "upload_time_iso_8601": "2018-05-10T18:54:20.092135Z", "url": "https://files.pythonhosted.org/packages/a0/e2/8509f64a8bb70b229ef66d22fc585b0b6a82f35ebebcc5bb238a5a14bbbc/legos.memes-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "2f34ad1c19d38371947006518aa37572", "sha256": "1d1f95327f692562d7196cf9b00069579cacfaa202030868c1a4f24407940635"}, "downloads": -1, "filename": "legos.memes-0.2.3.tar.gz", "has_sig": false, "md5_digest": "2f34ad1c19d38371947006518aa37572", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4079, "upload_time": "2018-05-10T22:09:47", "upload_time_iso_8601": "2018-05-10T22:09:47.461286Z", "url": "https://files.pythonhosted.org/packages/aa/78/660b2ff81a30b1b08ce621a8fbc3f1df5835d85b1bfb24029d91a8efb3ba/legos.memes-0.2.3.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "9d6ac161d9207970598c6b4bf3962bc3", "sha256": "d74263f55e6256856d1ee40dcf907ecdeef563002aa8913693b94a10d01e6d3f"}, "downloads": -1, "filename": "legos.memes-0.3.0.tar.gz", "has_sig": false, "md5_digest": "9d6ac161d9207970598c6b4bf3962bc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5495, "upload_time": "2018-12-12T20:41:36", "upload_time_iso_8601": "2018-12-12T20:41:36.496328Z", "url": "https://files.pythonhosted.org/packages/e5/f2/efd0ccf649df57fac47d2dd210473c336936c3db662f7356325eccca0793/legos.memes-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "29181d8044ea93af92215585624b1ec0", "sha256": "878a4266da288ee8da60359bc5e9aa57212c8aa3052f6abb47d0cb410ce0f4df"}, "downloads": -1, "filename": "legos.memes-0.3.1.tar.gz", "has_sig": false, "md5_digest": "29181d8044ea93af92215585624b1ec0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5525, "upload_time": "2018-12-13T17:24:46", "upload_time_iso_8601": "2018-12-13T17:24:46.390634Z", "url": "https://files.pythonhosted.org/packages/43/91/2d6d4839c46de355d7e13ea2525f1eb1db69773f9512a14e67488a87425e/legos.memes-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "3643bfd434ca9367bc11b517706b3b6c", "sha256": "cd745c338e6e16c0b53fcec2c4ebef400e9a7f4ca6e9cb97958c7b50a8bab808"}, "downloads": -1, "filename": "legos.memes-0.3.2.tar.gz", "has_sig": false, "md5_digest": "3643bfd434ca9367bc11b517706b3b6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5426, "upload_time": "2019-04-29T17:03:53", "upload_time_iso_8601": "2019-04-29T17:03:53.098779Z", "url": "https://files.pythonhosted.org/packages/b0/9b/6789bf0a773cd2ad193bbe4ab72897222838b650b15be14a00a54ae1a919/legos.memes-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "10f4450c17d45d7fbdfe6d5d6b6b8e1d", "sha256": "77c98b2f6b4741eebd2ca56a44e06c0851e576dd4435994a9da64186bef811f5"}, "downloads": -1, "filename": "legos.memes-0.3.3.tar.gz", "has_sig": false, "md5_digest": "10f4450c17d45d7fbdfe6d5d6b6b8e1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5381, "upload_time": "2019-12-12T15:10:03", "upload_time_iso_8601": "2019-12-12T15:10:03.825902Z", "url": "https://files.pythonhosted.org/packages/ea/a8/982540428cf3738ff41c415c8d70b147e96714ae518ba10713a562fe4e6e/legos.memes-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "96bb8adc75fd73be170f8daf231aad75", "sha256": "9f64433c44682e5c626bfd19685112d1b1e3992b72819a5c5d050267b641cd49"}, "downloads": -1, "filename": "legos.memes-0.3.4.tar.gz", "has_sig": false, "md5_digest": "96bb8adc75fd73be170f8daf231aad75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5400, "upload_time": "2020-01-14T16:38:23", "upload_time_iso_8601": "2020-01-14T16:38:23.142385Z", "url": "https://files.pythonhosted.org/packages/89/7e/79b7141c0262db06d74931dca78eee40cc53490fa1f3701e5d4d4bf84d25/legos.memes-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "575d39d1edd37b1aa055cc4c4f38f9ec", "sha256": "272726f6c6ce899e0e37e6717eede871519dca2b56481f1f5a5efe28e639bcb7"}, "downloads": -1, "filename": "legos.memes-0.3.5.tar.gz", "has_sig": false, "md5_digest": "575d39d1edd37b1aa055cc4c4f38f9ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6537, "upload_time": "2020-01-30T22:11:03", "upload_time_iso_8601": "2020-01-30T22:11:03.806038Z", "url": "https://files.pythonhosted.org/packages/85/63/e8e573e60740ba07ecc4e5a5cd54f3314c374e8655a02275111bb5a1439d/legos.memes-0.3.5.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "5ceeb53ee6e2e32012c820de4f4efe8b", "sha256": "1c98adb0765e0bc4761a2b4359f072e02e8291d3f5e16fc28eb3f75271b4d8ea"}, "downloads": -1, "filename": "legos.memes-0.3.6.tar.gz", "has_sig": false, "md5_digest": "5ceeb53ee6e2e32012c820de4f4efe8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6544, "upload_time": "2020-02-13T13:39:01", "upload_time_iso_8601": "2020-02-13T13:39:01.251124Z", "url": "https://files.pythonhosted.org/packages/6f/e2/6713c6d327c17f2d47b1d37ccf5656dc4a7a337f578ba2536b3de83c1f0a/legos.memes-0.3.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5ceeb53ee6e2e32012c820de4f4efe8b", "sha256": "1c98adb0765e0bc4761a2b4359f072e02e8291d3f5e16fc28eb3f75271b4d8ea"}, "downloads": -1, "filename": "legos.memes-0.3.6.tar.gz", "has_sig": false, "md5_digest": "5ceeb53ee6e2e32012c820de4f4efe8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6544, "upload_time": "2020-02-13T13:39:01", "upload_time_iso_8601": "2020-02-13T13:39:01.251124Z", "url": "https://files.pythonhosted.org/packages/6f/e2/6713c6d327c17f2d47b1d37ccf5656dc4a7a337f578ba2536b3de83c1f0a/legos.memes-0.3.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:11 2020"}