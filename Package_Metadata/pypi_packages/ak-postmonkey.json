{"info": {"author": "Eric Rasmussen", "author_email": "eric@chromaticleaves.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5"], "description": "PostMonkey 1.0b\n===============\n\n`PostMonkey` is a simple Python (2.6+) wrapper for MailChimp's API\nversion 1.3.\n\n\nFeatures\n========\n\n1) 100% test coverage\n2) Connection handling via the excellent `Requests <http://docs.python-requests.org>`_ library\n3) Configurable timeout\n4) Simple `Exceptions`\n\n\nInstallation\n============\n\nYou can install postmonkey via `easy_install`:\n\n.. code-block:: console\n\n    easy_install postmonkey\n\nOr by using `pip` (requires you to specify the version because latest is 1.0b):\n\n.. code-block:: console\n\n    pip install postmonkey==1.0b\n\nOr by placing the requirement in `install_requires` in your `setup.py` file:\n\n.. code-block:: python\n\n      install_requires=[\n          # all your other packages\n          'postmonkey==1.0b',\n      ]\n\n\nBasic Usage\n===========\n\nOnce you create a `PostMonkey` instance with your MailChimp API key,\nyou can use it to call MailChimp's API methods directly:\n\n.. code-block:: python\n\n    from postmonkey import PostMonkey\n    pm = PostMonkey('your_api_key')\n    pm.ping() # returns u\"Everything's Chimpy!\"\n\n\nIf the MailChimp method call accepts parameters, you can supply them in the form\nof keyword arguments. See `Examples`_ for common use cases, and refer to the\n`MailChimp API v1.3 official documentation\n<http://apidocs.mailchimp.com/api/rtfm/>`_ for a complete list of method calls,\nparameters, and response objects.\n\nMailChimp has established guidelines/limits for API usage, so please refer\nto their `FAQ <http://apidocs.mailchimp.com/api/faq/>`_ for information.\n\n**Note**: it is the caller's responsibility to supply valid method names and any\nrequired parameters. If MailChimp receives an invalid request, `PostMonkey`\nwill raise a `postmonkey.exceptions.MailChimpException` containing the\nerror code and message. See `MailChimp API v1.3 - Exceptions\n<http://apidocs.mailchimp.com/api/1.3/exceptions.field.php>`_ for additional\ndetails.\n\n\nExamples\n========\n\nCreate a new `PostMonkey` instance with a 10 second timeout for requests:\n\n.. code-block:: python\n\n    from postmonkey import PostMonkey\n    pm = PostMonkey('your_api_key', timeout=10)\n\n\nGet the IDs for your campaign lists:\n\n.. code-block:: python\n\n    lists = pm.lists()\n\n    # print the ID and name of each list\n    for list in lists['data']:\n        print list['id'], list['name']\n\n\nSubscribe \"emailaddress\" to list ID 5:\n\n.. code-block:: python\n\n    pm.listSubscribe(id=5, email_address=\"emailaddress\")\n\n\nCatch an exception returned by MailChimp (invalid list ID):\n\n.. code-block:: python\n\n    from postmonkey import MailChimpException\n    try:\n        pm.listSubscribe(id=42, email_address=\"emailaddress\")\n    except MailChimpException, e:\n        print e.code  # 200\n        print e.error # u'Invalid MailChimp List ID: 42'\n\n\nGet campaign data for all \"sent\" campaigns:\n\n.. code-block:: python\n\n    campaigns = pm.campaigns(filters=[{'status': 'sent'}])\n\n    # print the name and count of emails sent for each campaign\n    for c in campaigns['data']:\n        print c['title'], c['emails_sent']\n\n\n\n=========\nChangelog\n=========\n\n-Initial Release\n\n-2012-10-11: Quote JSON string before sending POST request\n\n-2013-07-03: Documentation updates and version bump (no code changes)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://postmonkey.readthedocs.org/", "keywords": "mailchimp", "license": "FreeBSD", "maintainer": null, "maintainer_email": null, "name": "ak-postmonkey", "package_url": "https://pypi.org/project/ak-postmonkey/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ak-postmonkey/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://postmonkey.readthedocs.org/"}, "release_url": "https://pypi.org/project/ak-postmonkey/1.0b1/", "requires_dist": null, "requires_python": null, "summary": "Appknox fork of Python wrapper for Mailchimp API", "version": "1.0b1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"postmonkey-1-0b\">\n<h2>PostMonkey 1.0b</h2>\n<p><cite>PostMonkey</cite> is a simple Python (2.6+) wrapper for MailChimp\u2019s API\nversion 1.3.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ol>\n<li>100% test coverage</li>\n<li>Connection handling via the excellent <a href=\"http://docs.python-requests.org\" rel=\"nofollow\">Requests</a> library</li>\n<li>Configurable timeout</li>\n<li>Simple <cite>Exceptions</cite></li>\n</ol>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install postmonkey via <cite>easy_install</cite>:</p>\n<pre><span class=\"go\">easy_install postmonkey</span>\n</pre>\n<p>Or by using <cite>pip</cite> (requires you to specify the version because latest is 1.0b):</p>\n<pre><span class=\"go\">pip install postmonkey==1.0b</span>\n</pre>\n<p>Or by placing the requirement in <cite>install_requires</cite> in your <cite>setup.py</cite> file:</p>\n<pre><span class=\"n\">install_requires</span><span class=\"o\">=</span><span class=\"p\">[</span>\n    <span class=\"c1\"># all your other packages</span>\n    <span class=\"s1\">'postmonkey==1.0b'</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic Usage</h2>\n<p>Once you create a <cite>PostMonkey</cite> instance with your MailChimp API key,\nyou can use it to call MailChimp\u2019s API methods directly:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">postmonkey</span> <span class=\"kn\">import</span> <span class=\"n\">PostMonkey</span>\n<span class=\"n\">pm</span> <span class=\"o\">=</span> <span class=\"n\">PostMonkey</span><span class=\"p\">(</span><span class=\"s1\">'your_api_key'</span><span class=\"p\">)</span>\n<span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"n\">ping</span><span class=\"p\">()</span> <span class=\"c1\"># returns u\"Everything's Chimpy!\"</span>\n</pre>\n<p>If the MailChimp method call accepts parameters, you can supply them in the form\nof keyword arguments. See <a href=\"#examples\" rel=\"nofollow\">Examples</a> for common use cases, and refer to the\n<a href=\"http://apidocs.mailchimp.com/api/rtfm/\" rel=\"nofollow\">MailChimp API v1.3 official documentation</a> for a complete list of method calls,\nparameters, and response objects.</p>\n<p>MailChimp has established guidelines/limits for API usage, so please refer\nto their <a href=\"http://apidocs.mailchimp.com/api/faq/\" rel=\"nofollow\">FAQ</a> for information.</p>\n<p><strong>Note</strong>: it is the caller\u2019s responsibility to supply valid method names and any\nrequired parameters. If MailChimp receives an invalid request, <cite>PostMonkey</cite>\nwill raise a <cite>postmonkey.exceptions.MailChimpException</cite> containing the\nerror code and message. See <a href=\"http://apidocs.mailchimp.com/api/1.3/exceptions.field.php\" rel=\"nofollow\">MailChimp API v1.3 - Exceptions</a> for additional\ndetails.</p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Create a new <cite>PostMonkey</cite> instance with a 10 second timeout for requests:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">postmonkey</span> <span class=\"kn\">import</span> <span class=\"n\">PostMonkey</span>\n<span class=\"n\">pm</span> <span class=\"o\">=</span> <span class=\"n\">PostMonkey</span><span class=\"p\">(</span><span class=\"s1\">'your_api_key'</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<p>Get the IDs for your campaign lists:</p>\n<pre><span class=\"n\">lists</span> <span class=\"o\">=</span> <span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"n\">lists</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># print the ID and name of each list</span>\n<span class=\"k\">for</span> <span class=\"nb\">list</span> <span class=\"ow\">in</span> <span class=\"n\">lists</span><span class=\"p\">[</span><span class=\"s1\">'data'</span><span class=\"p\">]:</span>\n    <span class=\"nb\">print</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">]</span>\n</pre>\n<p>Subscribe \u201cemailaddress\u201d to list ID 5:</p>\n<pre><span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"n\">listSubscribe</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">email_address</span><span class=\"o\">=</span><span class=\"s2\">\"emailaddress\"</span><span class=\"p\">)</span>\n</pre>\n<p>Catch an exception returned by MailChimp (invalid list ID):</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">postmonkey</span> <span class=\"kn\">import</span> <span class=\"n\">MailChimpException</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"n\">listSubscribe</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">,</span> <span class=\"n\">email_address</span><span class=\"o\">=</span><span class=\"s2\">\"emailaddress\"</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">MailChimpException</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">code</span>  <span class=\"c1\"># 200</span>\n    <span class=\"nb\">print</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">error</span> <span class=\"c1\"># u'Invalid MailChimp List ID: 42'</span>\n</pre>\n<p>Get campaign data for all \u201csent\u201d campaigns:</p>\n<pre><span class=\"n\">campaigns</span> <span class=\"o\">=</span> <span class=\"n\">pm</span><span class=\"o\">.</span><span class=\"n\">campaigns</span><span class=\"p\">(</span><span class=\"n\">filters</span><span class=\"o\">=</span><span class=\"p\">[{</span><span class=\"s1\">'status'</span><span class=\"p\">:</span> <span class=\"s1\">'sent'</span><span class=\"p\">}])</span>\n\n<span class=\"c1\"># print the name and count of emails sent for each campaign</span>\n<span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"n\">campaigns</span><span class=\"p\">[</span><span class=\"s1\">'data'</span><span class=\"p\">]:</span>\n    <span class=\"nb\">print</span> <span class=\"n\">c</span><span class=\"p\">[</span><span class=\"s1\">'title'</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"p\">[</span><span class=\"s1\">'emails_sent'</span><span class=\"p\">]</span>\n</pre>\n<div id=\"changelog\">\n<h3>Changelog</h3>\n<p>-Initial Release</p>\n<p>-2012-10-11: Quote JSON string before sending POST request</p>\n<p>-2013-07-03: Documentation updates and version bump (no code changes)</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3153324, "releases": {"1.0b1": [{"comment_text": "", "digests": {"md5": "cfe385f0020dc64455166814bfd31cc9", "sha256": "d9486fabc4bdac62b63d66dca36cd4f33f03c4015ac69c78c35c94e1deb1535e"}, "downloads": -1, "filename": "ak_postmonkey-1.0b1-py2-none-any.whl", "has_sig": false, "md5_digest": "cfe385f0020dc64455166814bfd31cc9", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 9348, "upload_time": "2016-02-23T04:15:48", "upload_time_iso_8601": "2016-02-23T04:15:48.594273Z", "url": "https://files.pythonhosted.org/packages/27/c7/ed3e6b33aba21b28cffa88a5f0a8bea9b5219b2e42500a9709d802013a5b/ak_postmonkey-1.0b1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee4a0bd0296837ad92d56c8166d02976", "sha256": "c611af5e5ef396fa24cf55ba1f6353c059ecc4de320098084ad489d629c0ced5"}, "downloads": -1, "filename": "ak-postmonkey-1.0b1.tar.gz", "has_sig": false, "md5_digest": "ee4a0bd0296837ad92d56c8166d02976", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6652, "upload_time": "2016-02-23T04:15:53", "upload_time_iso_8601": "2016-02-23T04:15:53.913134Z", "url": "https://files.pythonhosted.org/packages/8a/f6/1f32bea049cc98c8e53e2796892d3c7ce062de6a8b727a8569cab9b9b2f6/ak-postmonkey-1.0b1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cfe385f0020dc64455166814bfd31cc9", "sha256": "d9486fabc4bdac62b63d66dca36cd4f33f03c4015ac69c78c35c94e1deb1535e"}, "downloads": -1, "filename": "ak_postmonkey-1.0b1-py2-none-any.whl", "has_sig": false, "md5_digest": "cfe385f0020dc64455166814bfd31cc9", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 9348, "upload_time": "2016-02-23T04:15:48", "upload_time_iso_8601": "2016-02-23T04:15:48.594273Z", "url": "https://files.pythonhosted.org/packages/27/c7/ed3e6b33aba21b28cffa88a5f0a8bea9b5219b2e42500a9709d802013a5b/ak_postmonkey-1.0b1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee4a0bd0296837ad92d56c8166d02976", "sha256": "c611af5e5ef396fa24cf55ba1f6353c059ecc4de320098084ad489d629c0ced5"}, "downloads": -1, "filename": "ak-postmonkey-1.0b1.tar.gz", "has_sig": false, "md5_digest": "ee4a0bd0296837ad92d56c8166d02976", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6652, "upload_time": "2016-02-23T04:15:53", "upload_time_iso_8601": "2016-02-23T04:15:53.913134Z", "url": "https://files.pythonhosted.org/packages/8a/f6/1f32bea049cc98c8e53e2796892d3c7ce062de6a8b727a8569cab9b9b2f6/ak-postmonkey-1.0b1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:10 2020"}