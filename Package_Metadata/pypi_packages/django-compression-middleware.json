{"info": {"author": "Friedel Wolff", "author_email": "friedel@translate.org.za", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "Intended Audience :: Developers", "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Internet :: WWW/HTTP :: WSGI :: Middleware"], "description": "===========================================================================\nDjango Compression Middleware\n===========================================================================\n\n\nThis middleware implements compressed content encoding for HTTP. It is similar\nto Django's ``GZipMiddleware`` (`documentation`_), but additionally supports\nother compression methods. It is meant to be a drop-in replacement for Django's\n``GZipMiddleware``. Its documentation \u2014 including security warnings \u2014 therefore\napply here as well.\n\nThe middleware is focussed on the task of compressing typical Django responses\nsuch as HTML, JSON, etc.  Both normal (bulk) and streaming responses are\nsupported. For static file compression, have a look at other projects such as\n`WhiteNoise`_.\n\nZstandard is a new method for compression with little client support so far.\nMost browsers now support Brotli compression (check support status on `Can I\nuse... Brotli`_). The middleware will choose the best compression method\nsupported by the client as indicated in the request's ``Accept-Encoding``\nheader. In order of preference:\n\n- Zstandard\n- Brotli\n- gzip\n\nSummary of the project status:\n\n* .. image:: https://travis-ci.org/friedelwolff/django-compression-middleware.svg?branch=master\n     :target: https://travis-ci.org/friedelwolff/django-compression-middleware\n* .. image:: https://img.shields.io/pypi/djversions/django-compression-middleware.svg\n* .. image:: https://img.shields.io/pypi/pyversions/django-compression-middleware.svg\n* .. image:: https://img.shields.io/pypi/implementation/django-compression-middleware.svg\n\n.. _`documentation`: https://docs.djangoproject.com/en/dev/ref/middleware/#module-django.middleware.gzip\n.. _`WhiteNoise`: https://whitenoise.readthedocs.io/\n.. _`Can I use... Brotli`: http://caniuse.com/#search=brotli\n\nInstallation and usage\n----------------------\n\nThe following requirements are supported and tested in all reasonable\ncombinations:\n\n- Python versions: 2.7, 3.4, 3.5, 3.6, 3.7, 3.8.\n- Interpreters: CPython and PyPy.\n- Django versions: 1.11 (LTS), 2.0, 2.1, 2.2 (LTS), 3.0.\n\n.. code:: shell\n\n    pip install --upgrade django-compression-middleware\n\nTo apply compression to all the views served by Django, add\n``compression_middleware.middleware.CompressionMiddleware`` to the\n``MIDDLEWARE`` setting:\n\n.. code:: python\n\n    MIDDLEWARE = [\n        # ...\n        'compression_middleware.middleware.CompressionMiddleware',\n        # ...\n    ]\n\nRemove ``GZipMiddleware`` and ``BrotliMiddleware`` if you used it before.\nConsult the Django documentation on the correct `ordering of middleware`_.\n\n.. _`ordering of middleware`: https://docs.djangoproject.com/en/dev/ref/middleware/#module-django.middleware.gzip\n\nAlternatively you can decorate views individually to serve them with\ncompression:\n\n.. code:: python\n\n    from compression_middleware.decorators import compress_page\n\n    @compress_page\n    def index_view(request):\n        ...\n\nNote that your browser might not send the ``br`` entry in the ``Accept-Encoding``\nheader when you test without HTTPS (common on localhost). You can force it to\nsend the header, though. In Firefox, visit ``about:config`` and set\n``network.http.accept-encoding`` to indicate support. Note that you might\nencounter some problems on the web with such a setting (which is why Brotli is\nonly supported on secure connections by default).\n\nCredits and Resources\n---------------------\n\nThe code and tests in this project are based on Django's ``GZipMiddleware`` and\nVa\u0161ek Dohnal's ``django-brotli``. For compression, it uses the following modules\nto bind to fast C modules:\n\n- The `zstandard`_ bindings. It supports both a C module (for CPython) and CFFI\n  which should be appropriate for PyPy. See the documentation for full details.\n- The `Brotli`_ bindings or `brotlipy`_. The latter is preferred on PyPy since\n  it is implemented using cffi. But both should work on both Python\n  implementations.\n- Python's builtin `gzip`_ module.\n\n.. _zstandard: https://pypi.org/project/zstandard/\n.. _Brotli: https://pypi.org/project/Brotli/\n.. _brotlipy: https://pypi.org/project/brotlipy/\n.. _gzip: https://docs.python.org/3/library/gzip.html\n\nFurther readding on Wikipedia:\n\n- `HTTP compression <https://en.wikipedia.org/wiki/HTTP_compression>`__\n- `Zstandard <http://www.zstd.net/>`__\n- `Brotli <https://en.wikipedia.org/wiki/Brotli>`__\n- `gzip <https://en.wikipedia.org/wiki/Gzip>`__\n\nContributing\n------------\n\n1. Clone this repository (``git clone ...``)\n2. Create a virtualenv\n3. Install package dependencies: ``pip install --upgrade -r requirements_dev.txt``\n4. Change some code\n5. Run the tests: in the project root simply execute ``pytest``, and afterwards\n   preferably ``tox`` to test the full test matrix. Consider installing as many\n   supported interpreters as possible (having them in your ``PATH`` is often\n   sufficient).\n6. Submit a pull request and check for any errors reported by the Continuous\n   Integration service.\n\nLicense\n-------\n\nThe MPL 2.0 License\n\nCopyright (c) 2019 `Friedel Wolff <https://fwolff.net.za/>`_.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/friedelwolff/django-compression-middleware", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "django-compression-middleware", "package_url": "https://pypi.org/project/django-compression-middleware/", "platform": "", "project_url": "https://pypi.org/project/django-compression-middleware/", "project_urls": {"Homepage": "https://github.com/friedelwolff/django-compression-middleware"}, "release_url": "https://pypi.org/project/django-compression-middleware/0.4.1/", "requires_dist": ["django", "zstandard", "Brotli"], "requires_python": "", "summary": "Django middleware to compress responses using several algorithms.", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This middleware implements compressed content encoding for HTTP. It is similar\nto Django\u2019s <tt>GZipMiddleware</tt> (<a href=\"https://docs.djangoproject.com/en/dev/ref/middleware/#module-django.middleware.gzip\" rel=\"nofollow\">documentation</a>), but additionally supports\nother compression methods. It is meant to be a drop-in replacement for Django\u2019s\n<tt>GZipMiddleware</tt>. Its documentation \u2014 including security warnings \u2014 therefore\napply here as well.</p>\n<p>The middleware is focussed on the task of compressing typical Django responses\nsuch as HTML, JSON, etc.  Both normal (bulk) and streaming responses are\nsupported. For static file compression, have a look at other projects such as\n<a href=\"https://whitenoise.readthedocs.io/\" rel=\"nofollow\">WhiteNoise</a>.</p>\n<p>Zstandard is a new method for compression with little client support so far.\nMost browsers now support Brotli compression (check support status on <a href=\"http://caniuse.com/#search=brotli\" rel=\"nofollow\">Can I\nuse\u2026 Brotli</a>). The middleware will choose the best compression method\nsupported by the client as indicated in the request\u2019s <tt><span class=\"pre\">Accept-Encoding</span></tt>\nheader. In order of preference:</p>\n<ul>\n<li>Zstandard</li>\n<li>Brotli</li>\n<li>gzip</li>\n</ul>\n<p>Summary of the project status:</p>\n<ul>\n<li><a href=\"https://travis-ci.org/friedelwolff/django-compression-middleware\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/friedelwolff/django-compression-middleware.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a4c623a0a501cab5d881b59effb4cc880da3a806/68747470733a2f2f7472617669732d63692e6f72672f6672696564656c776f6c66662f646a616e676f2d636f6d7072657373696f6e2d6d6964646c65776172652e7376673f6272616e63683d6d6173746572\"></a>\n</li>\n<li><img alt=\"https://img.shields.io/pypi/djversions/django-compression-middleware.svg\" class=\"first\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/556de5b5ec8e1037bdcaaa70630c8126af29b698/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646a76657273696f6e732f646a616e676f2d636f6d7072657373696f6e2d6d6964646c65776172652e737667\">\n</li>\n<li><img alt=\"https://img.shields.io/pypi/pyversions/django-compression-middleware.svg\" class=\"first\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/64ef9bc0498bb9070f3c94b8f4e80f83558d74bd/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f646a616e676f2d636f6d7072657373696f6e2d6d6964646c65776172652e737667\">\n</li>\n<li><img alt=\"https://img.shields.io/pypi/implementation/django-compression-middleware.svg\" class=\"first\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/40a2bcdf4e83a6ed8ed0fe1c07d07e54d3452fb2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f696d706c656d656e746174696f6e2f646a616e676f2d636f6d7072657373696f6e2d6d6964646c65776172652e737667\">\n</li>\n</ul>\n<div id=\"installation-and-usage\">\n<h2>Installation and usage</h2>\n<p>The following requirements are supported and tested in all reasonable\ncombinations:</p>\n<ul>\n<li>Python versions: 2.7, 3.4, 3.5, 3.6, 3.7, 3.8.</li>\n<li>Interpreters: CPython and PyPy.</li>\n<li>Django versions: 1.11 (LTS), 2.0, 2.1, 2.2 (LTS), 3.0.</li>\n</ul>\n<pre>pip install --upgrade django-compression-middleware\n</pre>\n<p>To apply compression to all the views served by Django, add\n<tt>compression_middleware.middleware.CompressionMiddleware</tt> to the\n<tt>MIDDLEWARE</tt> setting:</p>\n<pre><span class=\"n\">MIDDLEWARE</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"s1\">'compression_middleware.middleware.CompressionMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"c1\"># ...</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Remove <tt>GZipMiddleware</tt> and <tt>BrotliMiddleware</tt> if you used it before.\nConsult the Django documentation on the correct <a href=\"https://docs.djangoproject.com/en/dev/ref/middleware/#module-django.middleware.gzip\" rel=\"nofollow\">ordering of middleware</a>.</p>\n<p>Alternatively you can decorate views individually to serve them with\ncompression:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">compression_middleware.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">compress_page</span>\n\n<span class=\"nd\">@compress_page</span>\n<span class=\"k\">def</span> <span class=\"nf\">index_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre>\n<p>Note that your browser might not send the <tt>br</tt> entry in the <tt><span class=\"pre\">Accept-Encoding</span></tt>\nheader when you test without HTTPS (common on localhost). You can force it to\nsend the header, though. In Firefox, visit <tt>about:config</tt> and set\n<tt><span class=\"pre\">network.http.accept-encoding</span></tt> to indicate support. Note that you might\nencounter some problems on the web with such a setting (which is why Brotli is\nonly supported on secure connections by default).</p>\n</div>\n<div id=\"credits-and-resources\">\n<h2>Credits and Resources</h2>\n<p>The code and tests in this project are based on Django\u2019s <tt>GZipMiddleware</tt> and\nVa\u0161ek Dohnal\u2019s <tt><span class=\"pre\">django-brotli</span></tt>. For compression, it uses the following modules\nto bind to fast C modules:</p>\n<ul>\n<li>The <a href=\"https://pypi.org/project/zstandard/\" rel=\"nofollow\">zstandard</a> bindings. It supports both a C module (for CPython) and CFFI\nwhich should be appropriate for PyPy. See the documentation for full details.</li>\n<li>The <a href=\"https://pypi.org/project/Brotli/\" rel=\"nofollow\">Brotli</a> bindings or <a href=\"https://pypi.org/project/brotlipy/\" rel=\"nofollow\">brotlipy</a>. The latter is preferred on PyPy since\nit is implemented using cffi. But both should work on both Python\nimplementations.</li>\n<li>Python\u2019s builtin <a href=\"https://docs.python.org/3/library/gzip.html\" rel=\"nofollow\">gzip</a> module.</li>\n</ul>\n<p>Further readding on Wikipedia:</p>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/HTTP_compression\" rel=\"nofollow\">HTTP compression</a></li>\n<li><a href=\"http://www.zstd.net/\" rel=\"nofollow\">Zstandard</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Brotli\" rel=\"nofollow\">Brotli</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Gzip\" rel=\"nofollow\">gzip</a></li>\n</ul>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<ol>\n<li>Clone this repository (<tt>git clone ...</tt>)</li>\n<li>Create a virtualenv</li>\n<li>Install package dependencies: <tt>pip install <span class=\"pre\">--upgrade</span> <span class=\"pre\">-r</span> requirements_dev.txt</tt></li>\n<li>Change some code</li>\n<li>Run the tests: in the project root simply execute <tt>pytest</tt>, and afterwards\npreferably <tt>tox</tt> to test the full test matrix. Consider installing as many\nsupported interpreters as possible (having them in your <tt>PATH</tt> is often\nsufficient).</li>\n<li>Submit a pull request and check for any errors reported by the Continuous\nIntegration service.</li>\n</ol>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The MPL 2.0 License</p>\n<p>Copyright (c) 2019 <a href=\"https://fwolff.net.za/\" rel=\"nofollow\">Friedel Wolff</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6768694, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "7543f4faa9c4f57590d12be5217489cc", "sha256": "7fe6c208b5d533c8ef650951aaec7c45a893585467d9065a5f7b5534f47bd333"}, "downloads": -1, "filename": "django_compression_middleware-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7543f4faa9c4f57590d12be5217489cc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7501, "upload_time": "2019-02-02T13:07:10", "upload_time_iso_8601": "2019-02-02T13:07:10.380927Z", "url": "https://files.pythonhosted.org/packages/aa/19/236c77946e5cbb19c29c93f947ab7fc72850193d8a4aa567f710cdbcc4bc/django_compression_middleware-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7a3bcc47f713d87741719f2f074911d", "sha256": "3e0d888d221dc4c62dc9488fbd811ac03192f8b4d4d3e4b9ffb6606c2102fe32"}, "downloads": -1, "filename": "django-compression-middleware-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e7a3bcc47f713d87741719f2f074911d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11465, "upload_time": "2019-02-02T13:07:12", "upload_time_iso_8601": "2019-02-02T13:07:12.957133Z", "url": "https://files.pythonhosted.org/packages/f4/21/749aa8b91386dc11d577ce01e33cd98cce93a157491df111edbbcc95583a/django-compression-middleware-0.1.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "70ab0598219fc81b6f7bac769782c2c3", "sha256": "ba6aa6d580861995a1edb3bf319b078e9554e13f53c6da888614c54cb00e0531"}, "downloads": -1, "filename": "django_compression_middleware-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "70ab0598219fc81b6f7bac769782c2c3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7283, "upload_time": "2019-02-08T09:00:03", "upload_time_iso_8601": "2019-02-08T09:00:03.327874Z", "url": "https://files.pythonhosted.org/packages/66/ba/8f3a566345c206c00b98e9199c29245255dbc5ec71eadb1a302760d678bb/django_compression_middleware-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "730761cf5b73013f579e597370916410", "sha256": "6c5e8d57efbaa4bc8a05de527e718eb9ab402df094ca0e10c6ecf1e0d75f409a"}, "downloads": -1, "filename": "django-compression-middleware-0.2.1.tar.gz", "has_sig": false, "md5_digest": "730761cf5b73013f579e597370916410", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17264, "upload_time": "2019-02-08T09:00:05", "upload_time_iso_8601": "2019-02-08T09:00:05.438164Z", "url": "https://files.pythonhosted.org/packages/06/87/b8c5d36e312677ea4477d90963809abf21042bbd2e35d50d100dd2bc1946/django-compression-middleware-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "2ef081699e8bca8332ece85baefe06a5", "sha256": "6f57d262a8f210f6f2d1a3a3b60fb10d7512be1f2da11040f85aab79885bc28b"}, "downloads": -1, "filename": "django_compression_middleware-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2ef081699e8bca8332ece85baefe06a5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8363, "upload_time": "2019-05-11T18:06:51", "upload_time_iso_8601": "2019-05-11T18:06:51.222012Z", "url": "https://files.pythonhosted.org/packages/94/3b/32fb6cf3e3853750c5521ae0dcbcc2ac87f6fbc2e0ca54cab5b29c2ffbb3/django_compression_middleware-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "35eae3375d2986a47a4e2921a38a8b71", "sha256": "c200790e70a73d7ca4cc976c5d8943b34789e82a3f2f2df5f23f01eb3c2edd9d"}, "downloads": -1, "filename": "django-compression-middleware-0.3.0.tar.gz", "has_sig": false, "md5_digest": "35eae3375d2986a47a4e2921a38a8b71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17845, "upload_time": "2019-05-11T18:06:53", "upload_time_iso_8601": "2019-05-11T18:06:53.528000Z", "url": "https://files.pythonhosted.org/packages/f0/88/018775530a219c3c17345b7d4261eec735ed27302251138678a974162548/django-compression-middleware-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "e269ce240ab0983bfa36bfe7521d0e43", "sha256": "3866f282574bbdf37d018509c8a24028a27c3966b61d98f87f6d5eba602f9a42"}, "downloads": -1, "filename": "django_compression_middleware-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e269ce240ab0983bfa36bfe7521d0e43", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8376, "upload_time": "2019-05-15T07:00:32", "upload_time_iso_8601": "2019-05-15T07:00:32.483712Z", "url": "https://files.pythonhosted.org/packages/58/33/a7006a07bd9624f579c867e8c16bfd29d0763b0c9cb30cfa3980af86080e/django_compression_middleware-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "22dc8bea5983281f2ee5dce2be5fc4fe", "sha256": "6061d476e2601e5ffd08d542c55789ce6b2bd8b9aab080d993a06d841cdaf98e"}, "downloads": -1, "filename": "django-compression-middleware-0.3.1.tar.gz", "has_sig": false, "md5_digest": "22dc8bea5983281f2ee5dce2be5fc4fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17876, "upload_time": "2019-05-15T07:00:34", "upload_time_iso_8601": "2019-05-15T07:00:34.587600Z", "url": "https://files.pythonhosted.org/packages/ce/b9/c96d79493a2271c7fd4c2eef43e899fb61cc85b36d98aef4af237f6f44cc/django-compression-middleware-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "18ec3045902c161ed7fe73475da3e0ba", "sha256": "a6dccb50b404ae2ec739d87280c9585c35055085452c422cf9ee48ccf451ea44"}, "downloads": -1, "filename": "django_compression_middleware-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "18ec3045902c161ed7fe73475da3e0ba", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8723, "upload_time": "2020-03-07T16:33:32", "upload_time_iso_8601": "2020-03-07T16:33:32.344524Z", "url": "https://files.pythonhosted.org/packages/d1/82/38079337f1db7e597d2bf02c9b3cf8b0e4583ab2c44e3215b15776247308/django_compression_middleware-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "86490815077ed33f708f6227de10b711", "sha256": "f22098c6511a329ba8be7d5fc3125213990da7af66624cacf540e69624021914"}, "downloads": -1, "filename": "django-compression-middleware-0.4.0.tar.gz", "has_sig": false, "md5_digest": "86490815077ed33f708f6227de10b711", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19157, "upload_time": "2020-03-07T16:33:34", "upload_time_iso_8601": "2020-03-07T16:33:34.561265Z", "url": "https://files.pythonhosted.org/packages/6f/48/fc1fe57d075f1fe4d5712c92ee12952695202d36b711e03282ff9fa3cfe1/django-compression-middleware-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "4f398e1cb0bf7bdfdf61944f29a7d22c", "sha256": "4895c1b1cb43ed04486e669037819aa5fe6854940934a6348a88316f856fcf73"}, "downloads": -1, "filename": "django_compression_middleware-0.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4f398e1cb0bf7bdfdf61944f29a7d22c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8106, "upload_time": "2020-03-07T16:42:50", "upload_time_iso_8601": "2020-03-07T16:42:50.827340Z", "url": "https://files.pythonhosted.org/packages/b9/5b/2808057bb2abfbb92b4948516eb2fdcce34787fd51c417a3cff241b771ce/django_compression_middleware-0.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a3658d6e415bb705dc81cb84b4a6adc", "sha256": "e9b3cd6ca0b9e7d703a1f2222f2f769961120c495c1ef927a7f1a44b71fc6b3c"}, "downloads": -1, "filename": "django-compression-middleware-0.4.1.tar.gz", "has_sig": false, "md5_digest": "2a3658d6e415bb705dc81cb84b4a6adc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17979, "upload_time": "2020-03-07T16:42:52", "upload_time_iso_8601": "2020-03-07T16:42:52.730614Z", "url": "https://files.pythonhosted.org/packages/97/79/a7eb8b0a42792d9a0e407e8ecdc447e26027070ab7c74c99a441d22ba5b1/django-compression-middleware-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4f398e1cb0bf7bdfdf61944f29a7d22c", "sha256": "4895c1b1cb43ed04486e669037819aa5fe6854940934a6348a88316f856fcf73"}, "downloads": -1, "filename": "django_compression_middleware-0.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4f398e1cb0bf7bdfdf61944f29a7d22c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8106, "upload_time": "2020-03-07T16:42:50", "upload_time_iso_8601": "2020-03-07T16:42:50.827340Z", "url": "https://files.pythonhosted.org/packages/b9/5b/2808057bb2abfbb92b4948516eb2fdcce34787fd51c417a3cff241b771ce/django_compression_middleware-0.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a3658d6e415bb705dc81cb84b4a6adc", "sha256": "e9b3cd6ca0b9e7d703a1f2222f2f769961120c495c1ef927a7f1a44b71fc6b3c"}, "downloads": -1, "filename": "django-compression-middleware-0.4.1.tar.gz", "has_sig": false, "md5_digest": "2a3658d6e415bb705dc81cb84b4a6adc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17979, "upload_time": "2020-03-07T16:42:52", "upload_time_iso_8601": "2020-03-07T16:42:52.730614Z", "url": "https://files.pythonhosted.org/packages/97/79/a7eb8b0a42792d9a0e407e8ecdc447e26027070ab7c74c99a441d22ba5b1/django-compression-middleware-0.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:55 2020"}