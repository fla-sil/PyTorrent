{"info": {"author": "deathbeds", "author_email": "tony.fast@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: IPython", "Framework :: Jupyter", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only"], "description": "__importnb__ imports notebooks as modules.  Notebooks are reusable as tests, source code, importable modules, and command line utilities.\n\n[![Binder](https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/deathbeds/importnb/master?urlpath=lab/tree/readme.ipynb)[![Documentation Status](https://readthedocs.org/projects/importnb/badge/?version=latest)](https://importnb.readthedocs.io/en/latest/?badge=latest)\n[![Build Status](https://travis-ci.org/deathbeds/importnb.svg?branch=master)](https://travis-ci.org/deathbeds/importnb)[![PyPI version](https://badge.fury.io/py/importnb.svg)](https://badge.fury.io/py/importnb)![PyPI - Python Version](https://img.shields.io/pypi/pyversions/importnb.svg)![PyPI - Format](https://img.shields.io/pypi/format/importnb.svg)![PyPI - Format](https://img.shields.io/pypi/l/importnb.svg)[\n![Conda](https://img.shields.io/conda/pn/conda-forge/importnb.svg)](https://anaconda.org/conda-forge/importnb)[\n![GitHub tag](https://img.shields.io/github/tag/deathbeds/importnb.svg)](https://github.com/deathbeds/importnb/tree/master/src/importnb) [![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n\n##### Installation\n\n    pip install importnb\n\n---\n\n    conda install -c conda-forge importnb\n\n---\n\n# `importnb` for testing\n\nAfter `importnb` is installed, [pytest](https://pytest.readthedocs.io/) will discover and import notebooks as tests.\n\n    pytest index.ipynb\n\n[`importnb`](https://github.com/deathbeds/importnb) imports notebooks as python modules, it does not compare outputs like [`nbval`](https://github.com/computationalmodelling/nbval).  \n\n[`importnb`](https://github.com/deathbeds/importnb) now captures `doctest`s in every __Markdown__ cell & block string expression.  The docstrings are tested with the [__--doctest-modules__ flag](https://doc.pytest.org/en/latest/doctest.html).\n\n    pytest index.ipynb --doctest-modules\n\nIt is recommended to use `importnb` with [__--nbval__](https://github.com/computationalmodelling/nbval) and the __--monotonic__ flag that checks if has notebook has be restarted and re-run.\n\n    pytest index.ipynb --nbval --monotonic\n\n---\n\n# `importnb` for the commmand line\n\n`importnb` can run notebooks as command line scripts.  Any literal variable in the notebook, may be applied as a parameter from the command line.\n\n    ipython -m importnb -- index.ipynb --foo \"A new value\"\n\n\n---\n\n# `importnb` for Python and IPython\n\n\nIt is suggested to execute `importnb-install` to make sure that notebooks for each IPython session.\n\n> Restart and run all or it didn't happen.\n\n`importnb` excels in an interactive environment and if a notebook will __Restart and Run All__ then it may reused as python code. The `Notebook` context manager will allow notebooks _with valid names_ to import with Python.\n\n\n```python\nfrom importnb import Notebook\n```\n\n### For brevity\n\n\n```python\n    with __import__('importnb').Notebook(): \n        import readme\n```\n\n> [`importnb.loader`](src/notebooks/loader.ipynb) will find notebooks available anywhere along the [`sys.path`](https://docs.python.org/2/library/sys.html#sys.path).\n\n#### or explicity \n\n\n```python\n    from importnb import Notebook\n    with Notebook(): \n        import readme\n```\n\n\n```python\n    foo = 42\n    with Notebook():\n        import readme\n    if __name__ == '__main__':\n        assert readme.foo == 42\n        assert readme.__file__.endswith('.ipynb')\n```\n\n[`importnb` readme](readme.ipynb)\n\n### Modules may be reloaded \n\nThe context manager is required to `reload` a module.\n\n\n```python\n    from importlib import reload\n    with Notebook(): __name__ == '__main__' and reload(readme)\n```\n\n### Lazy imports\n\nThe `lazy` option will delay the evaluation of a module until one of its attributes are accessed the first time.\n\n\n```python\n    with Notebook(lazy=True):\n        import readme\n```\n\n### Fuzzy File Names\n\n\n```python\n    if __name__ == '__main__':\n        with Notebook():\n            import __a_me\n\n        assert __a_me.__file__ == readme.__file__\n```\n\nPython does not provide a way to import file names starting with numbers of contains special characters.  `importnb` installs a fuzzy import logic to import files containing these edge cases.\n\n    import __2018__6_01_A_Blog_Post\n\nwill find the first file matching `*2018*6?01?A?Blog?Post`.  Importing `Untitled314519.ipynb` could be supported with the query below.\n\n    import __314519\n\n### Docstring\n\nThe first markdown cell will become the module docstring.\n\n\n```python\n    if __name__ == '__main__':\n        print(readme.__doc__.splitlines()[0])\n```\n\n    __importnb__ imports notebooks as modules.  Notebooks are reusable as tests, source code, importable modules, and command line utilities.\n\n\nMeaning non-code blocks can be executeb by [doctest]().\n\n\n```python\n    if __name__ == '__main__':\n        __import__('doctest').testmod(readme)\n```\n\n# Import notebooks from files\n\nNotebook names may not be valid Python paths.  In this case, use `Notebook.from_filename`.\n\n```python\n>>> Notebook.load('changelog.ipynb')\n<module 'changelog' from 'changelog.ipynb'>\n```\n\nImport under the `__main__` context.\n\n```python\n>>> Notebook('__main__').load('changelog.ipynb')\n<module 'changelog' from 'changelog.ipynb'>\n```\n\n# Parameterize Notebooks\n\nLiteral ast statements are converted to notebooks parameters.\n\nIn `readme`, `foo` is a parameter because it may be evaluated with ast.literal_val\n\n\n```python\n    if __name__ == '__main__':\n        from importnb.parameterize import Parameterize\n        f = Parameterize.load(readme.__file__)\n```\n\nThe parameterized module is a callable that evaluates with different literal statements.\n\n\n```python\n    if __name__ == '__main__': \n        assert callable(f)\n        f.__signature__\n\n        assert f().foo == 42\n        assert f(foo='importnb').foo == 'importnb'\n```\n\n# Run Notebooks from the command line\n\nRun any notebook from the command line with importnb.  Any parameterized expressions are available as parameters on the command line.\n\n\n\n```bash\nipython -m importnb -- index.ipynb --foo \"The new value\"\n```\n\n## Integrations\n\n\n### IPython\n\n#### [IPython Extension](src/importnb/ipython_extension.py#IPython-Extensions)\n\nAvoid the use of the context manager using loading importnb as IPython extension.\n\n```python\n%load_ext importnb\n```\n\n`%unload_ext importnb` will unload the extension.\n\n#### Default Extension\n\n`importnb` may allow notebooks to import by default with \n\n```bash\nimportnb-install\n```\n\n> If you'd like to play with source code on binder then you must execute the command above.  Toggle the markdown cell to a code cell and run it.\n\nThis extension will install a script into the default IPython profile startup that is called each time an IPython session is created.  \n\nUninstall the extension with `importnb-uninstall`.\n\n##### Run a notebook as a module\n\nWhen the default extension is loaded any notebook can be run from the command line. After the `importnb` extension is created notebooks can be execute from the command line.\n\n```bash\nipython -m readme\n```\n\nIn the command line context, `__file__ == sys.argv[0] and __name__ == '__main__'` .\n\n> See the [deploy step in the travis build](https://github.com/deathbeds/importnb/blob/docs/.travis.yml#L19).\n\n##### Parameterizable IPython commands\n\nInstalling the IPython extension allows notebooks to be computed from the command.  The notebooks are parameterizable from the command line.\n\n```bash\nipython -m readme -- --help\n```\n\n### py.test\n\n`importnb` installs a pytest plugin when it is setup.  Any notebook obeying the py.test discovery conventions can be used in to pytest.  _This is great because notebooks are generally your first test._\n\n```bash\nipython -m pytest -- src\n```\n\nWill find all the test notebooks and configurations as pytest would any Python file.\n\n### Setup\n\nTo package notebooks add `recursive-include package_name *.ipynb`\n\n## Developer\n\n* [Python Source](./src/importnb/)\n* [Tests](./tests)\n\n### Format and test the Source Code\n\n\n```python\n    if __name__ == '__main__':\n        if globals().get('__file__', None) == __import__('sys').argv[0]:\n            print(foo, __import__('sys').argv)\n        else:\n            !ipython -m pytest -- --cov=importnb --flake8 --isort --black tests \n            !jupyter nbconvert --to markdown --stdout index.ipynb > readme.md\n```\n\n    \u001b[22;0t\u001b]0;IPython: deathbeds/importnb\u0007\u001b[1m========================================== test session starts ==========================================\u001b[0m\n    platform linux -- Python 3.8.1, pytest-5.3.2, py-1.8.1, pluggy-0.13.1 -- /home/weg/projects/deathbeds/importnb/envs/importnb-dev/bin/python\n    cachedir: .pytest_cache\n    rootdir: /home/weg/projects/deathbeds/importnb, inifile: tox.ini\n    plugins: isort-0.3.1, black-0.3.7, flake8-1.0.4, cov-2.8.1, importnb-0.6.0\n    collected 22 items                                                                                      \u001b[0m\n\n    tests/foobar.py::FLAKE8 \u001b[33mSKIPPED\u001b[0m\u001b[33m                                                                   [  4%]\u001b[0m\n    tests/foobar.py::BLACK \u001b[33mSKIPPED\u001b[0m\u001b[33m                                                                    [  9%]\u001b[0m\n    tests/foobar.py::ISORT \u001b[33mSKIPPED\u001b[0m\u001b[33m                                                                    [ 13%]\u001b[0m\n    tests/test_importnb.ipynb::test_basic \u001b[32mPASSED\u001b[0m\u001b[32m                                                      [ 18%]\u001b[0m\n    tests/test_importnb.ipynb::test_package \u001b[32mPASSED\u001b[0m\u001b[32m                                                    [ 22%]\u001b[0m\n    tests/test_importnb.ipynb::test_reload \u001b[32mPASSED\u001b[0m\u001b[32m                                                     [ 27%]\u001b[0m\n    tests/test_importnb.ipynb::test_docstrings \u001b[32mPASSED\u001b[0m\u001b[32m                                                 [ 31%]\u001b[0m\n    tests/test_importnb.ipynb::test_docstring_opts \u001b[32mPASSED\u001b[0m\u001b[32m                                             [ 36%]\u001b[0m\n    tests/test_importnb.ipynb::test_from_file \u001b[32mPASSED\u001b[0m\u001b[32m                                                  [ 40%]\u001b[0m\n    tests/test_importnb.ipynb::test_lazy \u001b[32mPASSED\u001b[0m\u001b[32m                                                       [ 45%]\u001b[0m\n    tests/test_importnb.ipynb::test_module_source \u001b[32mPASSED\u001b[0m\u001b[32m                                              [ 50%]\u001b[0m\n    tests/test_importnb.ipynb::test_main \u001b[32mPASSED\u001b[0m\u001b[32m                                                       [ 54%]\u001b[0m\n    tests/test_importnb.ipynb::test_object_source \u001b[32mPASSED\u001b[0m\u001b[32m                                              [ 59%]\u001b[0m\n    tests/test_importnb.ipynb::test_python_file \u001b[32mPASSED\u001b[0m\u001b[32m                                                [ 63%]\u001b[0m\n    tests/test_importnb.ipynb::test_cli \u001b[32mPASSED\u001b[0m\u001b[32m                                                        [ 68%]\u001b[0m\n    tests/test_importnb.ipynb::test_parameterize \u001b[32mPASSED\u001b[0m\u001b[32m                                               [ 72%]\u001b[0m\n    tests/test_importnb.ipynb::test_minified_json \u001b[32mPASSED\u001b[0m\u001b[32m                                              [ 77%]\u001b[0m\n    tests/test_importnb.ipynb::test_fuzzy_finder \u001b[32mPASSED\u001b[0m\u001b[32m                                               [ 81%]\u001b[0m\n    tests/test_importnb.ipynb::test_remote \u001b[32mPASSED\u001b[0m\u001b[32m                                                     [ 86%]\u001b[0m\n    tests/foobaz/__init__.py::FLAKE8 \u001b[33mSKIPPED\u001b[0m\u001b[32m                                                          [ 90%]\u001b[0m\n    tests/foobaz/__init__.py::BLACK \u001b[33mSKIPPED\u001b[0m\u001b[32m                                                           [ 95%]\u001b[0m\n    tests/foobaz/__init__.py::ISORT \u001b[33mSKIPPED\u001b[0m\u001b[32m                                                           [100%]\u001b[0mCoverage.py warning: Module importnb was previously imported, but not measured (module-not-measured)\n\n\n    ----------- coverage: platform linux, python 3.8.1-final-0 -----------\n    Name                                    Stmts   Miss  Cover\n    -----------------------------------------------------------\n    src/importnb/__init__.py                    5      0   100%\n    src/importnb/__main__.py                    6      2    67%\n    src/importnb/_version.py                    1      0   100%\n    src/importnb/completer.py                  54     54     0%\n    src/importnb/decoder.py                    56      7    88%\n    src/importnb/docstrings.py                 43      7    84%\n    src/importnb/finder.py                     62      8    87%\n    src/importnb/ipython_extension.py          70     39    44%\n    src/importnb/loader.py                    159     31    81%\n    src/importnb/parameterize.py               95     12    87%\n    src/importnb/remote.py                     49      8    84%\n    src/importnb/utils/__init__.py              1      1     0%\n    src/importnb/utils/export.py               33     33     0%\n    src/importnb/utils/ipython.py              47     47     0%\n    src/importnb/utils/nbdoctest.py            32     32     0%\n    src/importnb/utils/pytest_importnb.py      32     19    41%\n    src/importnb/utils/setup.py                52     52     0%\n    -----------------------------------------------------------\n    TOTAL                                     797    352    56%\n\n\n    \u001b[32m===================================== \u001b[32m\u001b[1m16 passed\u001b[0m, \u001b[33m6 skipped\u001b[0m\u001b[32m in 1.58s\u001b[0m\u001b[32m =====================================\u001b[0m\n    [NbConvertApp] Converting notebook index.ipynb to markdown\n\n\n\n```python\n    if __name__ == '__main__':\n        try:\n            from IPython.display import display, Image\n            from IPython.utils.capture import capture_output\n            from IPython import get_ipython\n            with capture_output(): \n                get_ipython().system(\"cd docs && pyreverse importnb -opng -pimportnb\")\n            display(Image(url='docs/classes_importnb.png', ))\n        except: ...\n```\n\n\n<img src=\"docs/classes_importnb.png\"/>\n\n\n## CHANGELOG\n# 0.6.0\n\n* Support Python 3.8\n* `from_filename` replaced with `load`\n# 0.5.0\n\n* Mostly stable\n# 0.4.0\n\n* Fuzzy name completion.\n* A configurable extension system for magics.\n* `Interactive(shell=False)` is the default loader.\n# 0.3.2\n\n* Add `remote` loader.  Load notebooks from remote urls.\n* Support a fuzzy name import system.  Files with special characters and numbers are importable.\n* An IPython magic to allow relative imports during interactive computing.\n# 0.3.1\n\n* In loaders `Notebook`, `Interactive`, `Execute`, and `Parameterize`\n* Remove `Partial`, `Lazy`, and `NotebookTest` loaders.\n* The first Markdown cell imports as a docstrings, permitting doctests on markdown cells.\n* `Notebook(globals={})` passes global values to the module\n* `Notebook(dir=\"..\")` will change the working directory and path.\n* The code is pure python and uses IPython when possible.\n* `ipython -m importnb nodebook.ipynb` runs a notebook.\n# 0.2.9\n\n* Include `Partial`, `Lazy`, and `NotebookTest` loaders.\n* Transform markdown cells to literate block strings so they are included in the ast.\n    * `__doc__`'s are extracted from the first markdown cell or normal source code from a code cell.\n* Export the python source code with `black`.\n* `Notebook.from_filename` is a loader for paths and strings.\n* Add `importnb.nbtest` for notebook testing tools..\n* Benchmark `importnb` against existing notebooks.\n* Include a `watchdog` trick to watch tests..\n* Extend the project to >= 3.4\n* Use nbviewer/github hierachy for the docs.\n# 0.2.4\n\n* Use `tox` for testing\n* Use a source directory folder structure for pytest and tox testing.\n* Create a pytest plugin that discovers notebooks as tests.  With `importnb` notebooks can be used as fixtures in pytest.\n* Install `importnb` as an IPython extension.\n* Support running notebooks as modules from the `ipython` command line\n* Create a `setuptools` command to allow notebooks as packages. \n# 0.2.1\n\n* `importnb` supports notebook inputs from pure python environments.  Two compatible compiler were created from IPython and Python\n* `importnb.Partial` works appropriately by improving exceptions.\n* All of the IPython magic syntaxes were removed to support Pure Python.\n* The generated Python files are formatted with black.\n* Tests were added to:\n\n    * Validate the line number in tracebacks\n    * Test someone elses notebooks\n### 0.1.4\n- Pypi supports markdown long_description with the proper mimetype in long_description_content_type.\n### 0.1.3\n- Include the RST files in the `MANIFEST.in`.\n### 0.1.2 (Unreleased)\n- Use RST files to improve the literacy of the pypi description.\n### 0.1.1\n- Released on PyPi \n### 0.0.2\n- Initial Testing Release\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/deathbeds/importnb", "keywords": "", "license": "BSD-3-Clause", "maintainer": "", "maintainer_email": "", "name": "importnb", "package_url": "https://pypi.org/project/importnb/", "platform": "", "project_url": "https://pypi.org/project/importnb/", "project_urls": {"Homepage": "https://github.com/deathbeds/importnb"}, "release_url": "https://pypi.org/project/importnb/0.6.1/", "requires_dist": ["importlib-resources"], "requires_python": ">=3.4", "summary": "Import Jupyter (ne IPython) notebooks into tests and scripts.", "version": "0.6.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>importnb</strong> imports notebooks as modules.  Notebooks are reusable as tests, source code, importable modules, and command line utilities.</p>\n<p><a href=\"https://mybinder.org/v2/gh/deathbeds/importnb/master?urlpath=lab/tree/readme.ipynb\" rel=\"nofollow\"><img alt=\"Binder\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/86eb116bc9e98bea90d9454762d384d9cae5055c/68747470733a2f2f6d7962696e6465722e6f72672f62616467652e737667\"></a><a href=\"https://importnb.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b1088d239c64d594bd1c09932252d8958c57d7a0/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f696d706f72746e622f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://travis-ci.org/deathbeds/importnb\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7549d8dd282eb6ad9c09a1b7498d96ceed9dc1cb/68747470733a2f2f7472617669732d63692e6f72672f6465617468626564732f696d706f72746e622e7376673f6272616e63683d6d6173746572\"></a><a href=\"https://badge.fury.io/py/importnb\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fa2fbcf4692f7eb945b05bf38b8da52b20c5f8e1/68747470733a2f2f62616467652e667572792e696f2f70792f696d706f72746e622e737667\"></a><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9534d69362326a33428283fc0fe261a48c0bf9b4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f696d706f72746e622e737667\"><img alt=\"PyPI - Format\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/557f7054e0ad160ee45f2972657c437afbee0227/68747470733a2f2f696d672e736869656c64732e696f2f707970692f666f726d61742f696d706f72746e622e737667\"><img alt=\"PyPI - Format\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c056cb1e85290b045e7dc651381e841e52a79395/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f696d706f72746e622e737667\"><a href=\"https://anaconda.org/conda-forge/importnb\" rel=\"nofollow\">\n<img alt=\"Conda\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a50f612707576e636d080d814a1e32d0f9097f3d/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f706e2f636f6e64612d666f7267652f696d706f72746e622e737667\"></a><a href=\"https://github.com/deathbeds/importnb/tree/master/src/importnb\" rel=\"nofollow\">\n<img alt=\"GitHub tag\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dcd3511b26698fccf23033d8d178b9c726196b5c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f6465617468626564732f696d706f72746e622e737667\"></a> <a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<h5>Installation</h5>\n<pre><code>pip install importnb\n</code></pre>\n<hr>\n<pre><code>conda install -c conda-forge importnb\n</code></pre>\n<hr>\n<h1><code>importnb</code> for testing</h1>\n<p>After <code>importnb</code> is installed, <a href=\"https://pytest.readthedocs.io/\" rel=\"nofollow\">pytest</a> will discover and import notebooks as tests.</p>\n<pre><code>pytest index.ipynb\n</code></pre>\n<p><a href=\"https://github.com/deathbeds/importnb\" rel=\"nofollow\"><code>importnb</code></a> imports notebooks as python modules, it does not compare outputs like <a href=\"https://github.com/computationalmodelling/nbval\" rel=\"nofollow\"><code>nbval</code></a>.</p>\n<p><a href=\"https://github.com/deathbeds/importnb\" rel=\"nofollow\"><code>importnb</code></a> now captures <code>doctest</code>s in every <strong>Markdown</strong> cell &amp; block string expression.  The docstrings are tested with the <a href=\"https://doc.pytest.org/en/latest/doctest.html\" rel=\"nofollow\"><strong>--doctest-modules</strong> flag</a>.</p>\n<pre><code>pytest index.ipynb --doctest-modules\n</code></pre>\n<p>It is recommended to use <code>importnb</code> with <a href=\"https://github.com/computationalmodelling/nbval\" rel=\"nofollow\"><strong>--nbval</strong></a> and the <strong>--monotonic</strong> flag that checks if has notebook has be restarted and re-run.</p>\n<pre><code>pytest index.ipynb --nbval --monotonic\n</code></pre>\n<hr>\n<h1><code>importnb</code> for the commmand line</h1>\n<p><code>importnb</code> can run notebooks as command line scripts.  Any literal variable in the notebook, may be applied as a parameter from the command line.</p>\n<pre><code>ipython -m importnb -- index.ipynb --foo \"A new value\"\n</code></pre>\n<hr>\n<h1><code>importnb</code> for Python and IPython</h1>\n<p>It is suggested to execute <code>importnb-install</code> to make sure that notebooks for each IPython session.</p>\n<blockquote>\n<p>Restart and run all or it didn't happen.</p>\n</blockquote>\n<p><code>importnb</code> excels in an interactive environment and if a notebook will <strong>Restart and Run All</strong> then it may reused as python code. The <code>Notebook</code> context manager will allow notebooks <em>with valid names</em> to import with Python.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">importnb</span> <span class=\"kn\">import</span> <span class=\"n\">Notebook</span>\n</pre>\n<h3>For brevity</h3>\n<pre>    <span class=\"k\">with</span> <span class=\"nb\">__import__</span><span class=\"p\">(</span><span class=\"s1\">'importnb'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Notebook</span><span class=\"p\">():</span> \n        <span class=\"kn\">import</span> <span class=\"nn\">readme</span>\n</pre>\n<blockquote>\n<p><a href=\"src/notebooks/loader.ipynb\" rel=\"nofollow\"><code>importnb.loader</code></a> will find notebooks available anywhere along the <a href=\"https://docs.python.org/2/library/sys.html#sys.path\" rel=\"nofollow\"><code>sys.path</code></a>.</p>\n</blockquote>\n<h4>or explicity</h4>\n<pre>    <span class=\"kn\">from</span> <span class=\"nn\">importnb</span> <span class=\"kn\">import</span> <span class=\"n\">Notebook</span>\n    <span class=\"k\">with</span> <span class=\"n\">Notebook</span><span class=\"p\">():</span> \n        <span class=\"kn\">import</span> <span class=\"nn\">readme</span>\n</pre>\n<pre>    <span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"mi\">42</span>\n    <span class=\"k\">with</span> <span class=\"n\">Notebook</span><span class=\"p\">():</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">readme</span>\n    <span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n        <span class=\"k\">assert</span> <span class=\"n\">readme</span><span class=\"o\">.</span><span class=\"n\">foo</span> <span class=\"o\">==</span> <span class=\"mi\">42</span>\n        <span class=\"k\">assert</span> <span class=\"n\">readme</span><span class=\"o\">.</span><span class=\"vm\">__file__</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s1\">'.ipynb'</span><span class=\"p\">)</span>\n</pre>\n<p><a href=\"readme.ipynb\" rel=\"nofollow\"><code>importnb</code> readme</a></p>\n<h3>Modules may be reloaded</h3>\n<p>The context manager is required to <code>reload</code> a module.</p>\n<pre>    <span class=\"kn\">from</span> <span class=\"nn\">importlib</span> <span class=\"kn\">import</span> <span class=\"n\">reload</span>\n    <span class=\"k\">with</span> <span class=\"n\">Notebook</span><span class=\"p\">():</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span> <span class=\"ow\">and</span> <span class=\"n\">reload</span><span class=\"p\">(</span><span class=\"n\">readme</span><span class=\"p\">)</span>\n</pre>\n<h3>Lazy imports</h3>\n<p>The <code>lazy</code> option will delay the evaluation of a module until one of its attributes are accessed the first time.</p>\n<pre>    <span class=\"k\">with</span> <span class=\"n\">Notebook</span><span class=\"p\">(</span><span class=\"n\">lazy</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">readme</span>\n</pre>\n<h3>Fuzzy File Names</h3>\n<pre>    <span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n        <span class=\"k\">with</span> <span class=\"n\">Notebook</span><span class=\"p\">():</span>\n            <span class=\"kn\">import</span> <span class=\"nn\">__a_me</span>\n\n        <span class=\"k\">assert</span> <span class=\"n\">__a_me</span><span class=\"o\">.</span><span class=\"vm\">__file__</span> <span class=\"o\">==</span> <span class=\"n\">readme</span><span class=\"o\">.</span><span class=\"vm\">__file__</span>\n</pre>\n<p>Python does not provide a way to import file names starting with numbers of contains special characters.  <code>importnb</code> installs a fuzzy import logic to import files containing these edge cases.</p>\n<pre><code>import __2018__6_01_A_Blog_Post\n</code></pre>\n<p>will find the first file matching <code>*2018*6?01?A?Blog?Post</code>.  Importing <code>Untitled314519.ipynb</code> could be supported with the query below.</p>\n<pre><code>import __314519\n</code></pre>\n<h3>Docstring</h3>\n<p>The first markdown cell will become the module docstring.</p>\n<pre>    <span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">readme</span><span class=\"o\">.</span><span class=\"vm\">__doc__</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n</pre>\n<pre><code>__importnb__ imports notebooks as modules.  Notebooks are reusable as tests, source code, importable modules, and command line utilities.\n</code></pre>\n<p>Meaning non-code blocks can be executeb by <a href=\"\" rel=\"nofollow\">doctest</a>.</p>\n<pre>    <span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n        <span class=\"nb\">__import__</span><span class=\"p\">(</span><span class=\"s1\">'doctest'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">testmod</span><span class=\"p\">(</span><span class=\"n\">readme</span><span class=\"p\">)</span>\n</pre>\n<h1>Import notebooks from files</h1>\n<p>Notebook names may not be valid Python paths.  In this case, use <code>Notebook.from_filename</code>.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Notebook</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">'changelog.ipynb'</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">module</span> <span class=\"s1\">'changelog'</span> <span class=\"kn\">from</span> <span class=\"s1\">'changelog.ipynb'</span><span class=\"o\">&gt;</span>\n</pre>\n<p>Import under the <code>__main__</code> context.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Notebook</span><span class=\"p\">(</span><span class=\"s1\">'__main__'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">'changelog.ipynb'</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">module</span> <span class=\"s1\">'changelog'</span> <span class=\"kn\">from</span> <span class=\"s1\">'changelog.ipynb'</span><span class=\"o\">&gt;</span>\n</pre>\n<h1>Parameterize Notebooks</h1>\n<p>Literal ast statements are converted to notebooks parameters.</p>\n<p>In <code>readme</code>, <code>foo</code> is a parameter because it may be evaluated with ast.literal_val</p>\n<pre>    <span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">importnb.parameterize</span> <span class=\"kn\">import</span> <span class=\"n\">Parameterize</span>\n        <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">Parameterize</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">readme</span><span class=\"o\">.</span><span class=\"vm\">__file__</span><span class=\"p\">)</span>\n</pre>\n<p>The parameterized module is a callable that evaluates with different literal statements.</p>\n<pre>    <span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span> \n        <span class=\"k\">assert</span> <span class=\"n\">callable</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n        <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">__signature__</span>\n\n        <span class=\"k\">assert</span> <span class=\"n\">f</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">foo</span> <span class=\"o\">==</span> <span class=\"mi\">42</span>\n        <span class=\"k\">assert</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"o\">=</span><span class=\"s1\">'importnb'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">foo</span> <span class=\"o\">==</span> <span class=\"s1\">'importnb'</span>\n</pre>\n<h1>Run Notebooks from the command line</h1>\n<p>Run any notebook from the command line with importnb.  Any parameterized expressions are available as parameters on the command line.</p>\n<pre>ipython -m importnb -- index.ipynb --foo <span class=\"s2\">\"The new value\"</span>\n</pre>\n<h2>Integrations</h2>\n<h3>IPython</h3>\n<h4><a href=\"src/importnb/ipython_extension.py#IPython-Extensions\" rel=\"nofollow\">IPython Extension</a></h4>\n<p>Avoid the use of the context manager using loading importnb as IPython extension.</p>\n<pre><span class=\"o\">%</span><span class=\"n\">load_ext</span> <span class=\"n\">importnb</span>\n</pre>\n<p><code>%unload_ext importnb</code> will unload the extension.</p>\n<h4>Default Extension</h4>\n<p><code>importnb</code> may allow notebooks to import by default with</p>\n<pre>importnb-install\n</pre>\n<blockquote>\n<p>If you'd like to play with source code on binder then you must execute the command above.  Toggle the markdown cell to a code cell and run it.</p>\n</blockquote>\n<p>This extension will install a script into the default IPython profile startup that is called each time an IPython session is created.</p>\n<p>Uninstall the extension with <code>importnb-uninstall</code>.</p>\n<h5>Run a notebook as a module</h5>\n<p>When the default extension is loaded any notebook can be run from the command line. After the <code>importnb</code> extension is created notebooks can be execute from the command line.</p>\n<pre>ipython -m readme\n</pre>\n<p>In the command line context, <code>__file__ == sys.argv[0] and __name__ == '__main__'</code> .</p>\n<blockquote>\n<p>See the <a href=\"https://github.com/deathbeds/importnb/blob/docs/.travis.yml#L19\" rel=\"nofollow\">deploy step in the travis build</a>.</p>\n</blockquote>\n<h5>Parameterizable IPython commands</h5>\n<p>Installing the IPython extension allows notebooks to be computed from the command.  The notebooks are parameterizable from the command line.</p>\n<pre>ipython -m readme -- --help\n</pre>\n<h3>py.test</h3>\n<p><code>importnb</code> installs a pytest plugin when it is setup.  Any notebook obeying the py.test discovery conventions can be used in to pytest.  <em>This is great because notebooks are generally your first test.</em></p>\n<pre>ipython -m pytest -- src\n</pre>\n<p>Will find all the test notebooks and configurations as pytest would any Python file.</p>\n<h3>Setup</h3>\n<p>To package notebooks add <code>recursive-include package_name *.ipynb</code></p>\n<h2>Developer</h2>\n<ul>\n<li><a href=\"./src/importnb/\" rel=\"nofollow\">Python Source</a></li>\n<li><a href=\"./tests\" rel=\"nofollow\">Tests</a></li>\n</ul>\n<h3>Format and test the Source Code</h3>\n<pre>    <span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"nb\">globals</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'__file__'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"nb\">__import__</span><span class=\"p\">(</span><span class=\"s1\">'sys'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"p\">,</span> <span class=\"nb\">__import__</span><span class=\"p\">(</span><span class=\"s1\">'sys'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"err\">!</span><span class=\"n\">ipython</span> <span class=\"o\">-</span><span class=\"n\">m</span> <span class=\"n\">pytest</span> <span class=\"o\">--</span> <span class=\"o\">--</span><span class=\"n\">cov</span><span class=\"o\">=</span><span class=\"n\">importnb</span> <span class=\"o\">--</span><span class=\"n\">flake8</span> <span class=\"o\">--</span><span class=\"n\">isort</span> <span class=\"o\">--</span><span class=\"n\">black</span> <span class=\"n\">tests</span> \n            <span class=\"err\">!</span><span class=\"n\">jupyter</span> <span class=\"n\">nbconvert</span> <span class=\"o\">--</span><span class=\"n\">to</span> <span class=\"n\">markdown</span> <span class=\"o\">--</span><span class=\"n\">stdout</span> <span class=\"n\">index</span><span class=\"o\">.</span><span class=\"n\">ipynb</span> <span class=\"o\">&gt;</span> <span class=\"n\">readme</span><span class=\"o\">.</span><span class=\"n\">md</span>\n</pre>\n<pre><code>?[22;0t?]0;IPython: deathbeds/importnb??[1m========================================== test session starts ==========================================?[0m\nplatform linux -- Python 3.8.1, pytest-5.3.2, py-1.8.1, pluggy-0.13.1 -- /home/weg/projects/deathbeds/importnb/envs/importnb-dev/bin/python\ncachedir: .pytest_cache\nrootdir: /home/weg/projects/deathbeds/importnb, inifile: tox.ini\nplugins: isort-0.3.1, black-0.3.7, flake8-1.0.4, cov-2.8.1, importnb-0.6.0\ncollected 22 items                                                                                      ?[0m\n\ntests/foobar.py::FLAKE8 ?[33mSKIPPED?[0m?[33m                                                                   [  4%]?[0m\ntests/foobar.py::BLACK ?[33mSKIPPED?[0m?[33m                                                                    [  9%]?[0m\ntests/foobar.py::ISORT ?[33mSKIPPED?[0m?[33m                                                                    [ 13%]?[0m\ntests/test_importnb.ipynb::test_basic ?[32mPASSED?[0m?[32m                                                      [ 18%]?[0m\ntests/test_importnb.ipynb::test_package ?[32mPASSED?[0m?[32m                                                    [ 22%]?[0m\ntests/test_importnb.ipynb::test_reload ?[32mPASSED?[0m?[32m                                                     [ 27%]?[0m\ntests/test_importnb.ipynb::test_docstrings ?[32mPASSED?[0m?[32m                                                 [ 31%]?[0m\ntests/test_importnb.ipynb::test_docstring_opts ?[32mPASSED?[0m?[32m                                             [ 36%]?[0m\ntests/test_importnb.ipynb::test_from_file ?[32mPASSED?[0m?[32m                                                  [ 40%]?[0m\ntests/test_importnb.ipynb::test_lazy ?[32mPASSED?[0m?[32m                                                       [ 45%]?[0m\ntests/test_importnb.ipynb::test_module_source ?[32mPASSED?[0m?[32m                                              [ 50%]?[0m\ntests/test_importnb.ipynb::test_main ?[32mPASSED?[0m?[32m                                                       [ 54%]?[0m\ntests/test_importnb.ipynb::test_object_source ?[32mPASSED?[0m?[32m                                              [ 59%]?[0m\ntests/test_importnb.ipynb::test_python_file ?[32mPASSED?[0m?[32m                                                [ 63%]?[0m\ntests/test_importnb.ipynb::test_cli ?[32mPASSED?[0m?[32m                                                        [ 68%]?[0m\ntests/test_importnb.ipynb::test_parameterize ?[32mPASSED?[0m?[32m                                               [ 72%]?[0m\ntests/test_importnb.ipynb::test_minified_json ?[32mPASSED?[0m?[32m                                              [ 77%]?[0m\ntests/test_importnb.ipynb::test_fuzzy_finder ?[32mPASSED?[0m?[32m                                               [ 81%]?[0m\ntests/test_importnb.ipynb::test_remote ?[32mPASSED?[0m?[32m                                                     [ 86%]?[0m\ntests/foobaz/__init__.py::FLAKE8 ?[33mSKIPPED?[0m?[32m                                                          [ 90%]?[0m\ntests/foobaz/__init__.py::BLACK ?[33mSKIPPED?[0m?[32m                                                           [ 95%]?[0m\ntests/foobaz/__init__.py::ISORT ?[33mSKIPPED?[0m?[32m                                                           [100%]?[0mCoverage.py warning: Module importnb was previously imported, but not measured (module-not-measured)\n\n\n----------- coverage: platform linux, python 3.8.1-final-0 -----------\nName                                    Stmts   Miss  Cover\n-----------------------------------------------------------\nsrc/importnb/__init__.py                    5      0   100%\nsrc/importnb/__main__.py                    6      2    67%\nsrc/importnb/_version.py                    1      0   100%\nsrc/importnb/completer.py                  54     54     0%\nsrc/importnb/decoder.py                    56      7    88%\nsrc/importnb/docstrings.py                 43      7    84%\nsrc/importnb/finder.py                     62      8    87%\nsrc/importnb/ipython_extension.py          70     39    44%\nsrc/importnb/loader.py                    159     31    81%\nsrc/importnb/parameterize.py               95     12    87%\nsrc/importnb/remote.py                     49      8    84%\nsrc/importnb/utils/__init__.py              1      1     0%\nsrc/importnb/utils/export.py               33     33     0%\nsrc/importnb/utils/ipython.py              47     47     0%\nsrc/importnb/utils/nbdoctest.py            32     32     0%\nsrc/importnb/utils/pytest_importnb.py      32     19    41%\nsrc/importnb/utils/setup.py                52     52     0%\n-----------------------------------------------------------\nTOTAL                                     797    352    56%\n\n\n?[32m===================================== ?[32m?[1m16 passed?[0m, ?[33m6 skipped?[0m?[32m in 1.58s?[0m?[32m =====================================?[0m\n[NbConvertApp] Converting notebook index.ipynb to markdown\n</code></pre>\n<pre>    <span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"kn\">from</span> <span class=\"nn\">IPython.display</span> <span class=\"kn\">import</span> <span class=\"n\">display</span><span class=\"p\">,</span> <span class=\"n\">Image</span>\n            <span class=\"kn\">from</span> <span class=\"nn\">IPython.utils.capture</span> <span class=\"kn\">import</span> <span class=\"n\">capture_output</span>\n            <span class=\"kn\">from</span> <span class=\"nn\">IPython</span> <span class=\"kn\">import</span> <span class=\"n\">get_ipython</span>\n            <span class=\"k\">with</span> <span class=\"n\">capture_output</span><span class=\"p\">():</span> \n                <span class=\"n\">get_ipython</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"p\">(</span><span class=\"s2\">\"cd docs &amp;&amp; pyreverse importnb -opng -pimportnb\"</span><span class=\"p\">)</span>\n            <span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">Image</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'docs/classes_importnb.png'</span><span class=\"p\">,</span> <span class=\"p\">))</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span> <span class=\"o\">...</span>\n</pre>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aef41286c08772f83364a2b3b442444190e9ea1f/646f63732f636c61737365735f696d706f72746e622e706e67\">\n<h2>CHANGELOG</h2>\n<h1>0.6.0</h1>\n<ul>\n<li>Support Python 3.8</li>\n<li><code>from_filename</code> replaced with <code>load</code></li>\n</ul>\n<h1>0.5.0</h1>\n<ul>\n<li>Mostly stable</li>\n</ul>\n<h1>0.4.0</h1>\n<ul>\n<li>Fuzzy name completion.</li>\n<li>A configurable extension system for magics.</li>\n<li><code>Interactive(shell=False)</code> is the default loader.</li>\n</ul>\n<h1>0.3.2</h1>\n<ul>\n<li>Add <code>remote</code> loader.  Load notebooks from remote urls.</li>\n<li>Support a fuzzy name import system.  Files with special characters and numbers are importable.</li>\n<li>An IPython magic to allow relative imports during interactive computing.</li>\n</ul>\n<h1>0.3.1</h1>\n<ul>\n<li>In loaders <code>Notebook</code>, <code>Interactive</code>, <code>Execute</code>, and <code>Parameterize</code></li>\n<li>Remove <code>Partial</code>, <code>Lazy</code>, and <code>NotebookTest</code> loaders.</li>\n<li>The first Markdown cell imports as a docstrings, permitting doctests on markdown cells.</li>\n<li><code>Notebook(globals={})</code> passes global values to the module</li>\n<li><code>Notebook(dir=\"..\")</code> will change the working directory and path.</li>\n<li>The code is pure python and uses IPython when possible.</li>\n<li><code>ipython -m importnb nodebook.ipynb</code> runs a notebook.</li>\n</ul>\n<h1>0.2.9</h1>\n<ul>\n<li>Include <code>Partial</code>, <code>Lazy</code>, and <code>NotebookTest</code> loaders.</li>\n<li>Transform markdown cells to literate block strings so they are included in the ast.\n<ul>\n<li><code>__doc__</code>'s are extracted from the first markdown cell or normal source code from a code cell.</li>\n</ul>\n</li>\n<li>Export the python source code with <code>black</code>.</li>\n<li><code>Notebook.from_filename</code> is a loader for paths and strings.</li>\n<li>Add <code>importnb.nbtest</code> for notebook testing tools..</li>\n<li>Benchmark <code>importnb</code> against existing notebooks.</li>\n<li>Include a <code>watchdog</code> trick to watch tests..</li>\n<li>Extend the project to &gt;= 3.4</li>\n<li>Use nbviewer/github hierachy for the docs.</li>\n</ul>\n<h1>0.2.4</h1>\n<ul>\n<li>Use <code>tox</code> for testing</li>\n<li>Use a source directory folder structure for pytest and tox testing.</li>\n<li>Create a pytest plugin that discovers notebooks as tests.  With <code>importnb</code> notebooks can be used as fixtures in pytest.</li>\n<li>Install <code>importnb</code> as an IPython extension.</li>\n<li>Support running notebooks as modules from the <code>ipython</code> command line</li>\n<li>Create a <code>setuptools</code> command to allow notebooks as packages.</li>\n</ul>\n<h1>0.2.1</h1>\n<ul>\n<li>\n<p><code>importnb</code> supports notebook inputs from pure python environments.  Two compatible compiler were created from IPython and Python</p>\n</li>\n<li>\n<p><code>importnb.Partial</code> works appropriately by improving exceptions.</p>\n</li>\n<li>\n<p>All of the IPython magic syntaxes were removed to support Pure Python.</p>\n</li>\n<li>\n<p>The generated Python files are formatted with black.</p>\n</li>\n<li>\n<p>Tests were added to:</p>\n<ul>\n<li>Validate the line number in tracebacks</li>\n<li>Test someone elses notebooks</li>\n</ul>\n</li>\n</ul>\n<h3>0.1.4</h3>\n<ul>\n<li>Pypi supports markdown long_description with the proper mimetype in long_description_content_type.</li>\n</ul>\n<h3>0.1.3</h3>\n<ul>\n<li>Include the RST files in the <code>MANIFEST.in</code>.</li>\n</ul>\n<h3>0.1.2 (Unreleased)</h3>\n<ul>\n<li>Use RST files to improve the literacy of the pypi description.</li>\n</ul>\n<h3>0.1.1</h3>\n<ul>\n<li>Released on PyPi</li>\n</ul>\n<h3>0.0.2</h3>\n<ul>\n<li>Initial Testing Release</li>\n</ul>\n\n          </div>"}, "last_serial": 7034449, "releases": {"0.0.4": [{"comment_text": "", "digests": {"md5": "1943ba91811a8134380ecf057965a619", "sha256": "88633baa0bb52069cf726c5269fa3722291b25b1dcef35ae630d051904ee31b5"}, "downloads": -1, "filename": "importnb-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "1943ba91811a8134380ecf057965a619", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12531, "upload_time": "2018-04-23T03:26:30", "upload_time_iso_8601": "2018-04-23T03:26:30.136168Z", "url": "https://files.pythonhosted.org/packages/8c/74/b2603f257baa980fb565882483ffca7aad288c94a5355b7d66b6674c3002/importnb-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b76eb631e5b3cfee7593cbb3d31582e8", "sha256": "1f8416cfd0fdd50160da69e735147f78b5d1ba76e097c73c1154e83d17bd5c43"}, "downloads": -1, "filename": "importnb-0.0.4.tar.gz", "has_sig": false, "md5_digest": "b76eb631e5b3cfee7593cbb3d31582e8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7940, "upload_time": "2018-04-23T03:26:31", "upload_time_iso_8601": "2018-04-23T03:26:31.144890Z", "url": "https://files.pythonhosted.org/packages/0f/d9/b1cc7d6ec914f07b8e1ef6356685ebe462b378ec636212a0be65d0b838c9/importnb-0.0.4.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "b93ebdc55478f310588f73b0a7dd3c08", "sha256": "1d5b2c7decda2556297ae38f13806b059728e010b30b10148e64938bf2932113"}, "downloads": -1, "filename": "importnb-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b93ebdc55478f310588f73b0a7dd3c08", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12532, "upload_time": "2018-04-23T03:31:08", "upload_time_iso_8601": "2018-04-23T03:31:08.774514Z", "url": "https://files.pythonhosted.org/packages/98/e1/a28632996bc076ad5d98f5ef3d3e328b265399741f95d95c972856c0430e/importnb-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8e60075d4d518d59814fe0137431529", "sha256": "04e6cb9f6cf614c21c08bfb66faa9ed072b8ceca2c99c7216a56a8bed3cdcb59"}, "downloads": -1, "filename": "importnb-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b8e60075d4d518d59814fe0137431529", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7938, "upload_time": "2018-04-23T03:31:09", "upload_time_iso_8601": "2018-04-23T03:31:09.772496Z", "url": "https://files.pythonhosted.org/packages/6a/a1/0108f38d4f553f42324db04b3e3fa657a89d3afd919ef07820107e6f2778/importnb-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "d9e03682cce8856c58494db22fed19cc", "sha256": "b422a5ace6a045f0b4ade959c98f39ba402146d2a13fdfbb87e3883fbe02b47a"}, "downloads": -1, "filename": "importnb-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d9e03682cce8856c58494db22fed19cc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12537, "upload_time": "2018-04-23T03:36:22", "upload_time_iso_8601": "2018-04-23T03:36:22.300349Z", "url": "https://files.pythonhosted.org/packages/ce/ba/46a3723281a3109d0892bb74ae2ac78a3916f7d3afd897e70ddff436a84d/importnb-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "432ba28fa672bf0d23e6557db3abe670", "sha256": "15abf7c39ac652deaf2861b75a4a9994909e1f141b43667095eae8f238c9d9e8"}, "downloads": -1, "filename": "importnb-0.1.1.tar.gz", "has_sig": false, "md5_digest": "432ba28fa672bf0d23e6557db3abe670", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7938, "upload_time": "2018-04-23T03:36:23", "upload_time_iso_8601": "2018-04-23T03:36:23.280990Z", "url": "https://files.pythonhosted.org/packages/d3/07/4cd5eb3212c37bdb1af710b8d30cc8d28630fbc82d5ec7b565ab8f23ffdd/importnb-0.1.1.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "40aa0d1b01abbbbf4e81b00aacc54bf3", "sha256": "8800848af11047c8de65e02a4b168af18c3ef131f2c5e262e30c1ae5166f10d4"}, "downloads": -1, "filename": "importnb-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "40aa0d1b01abbbbf4e81b00aacc54bf3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12837, "upload_time": "2018-04-23T03:45:18", "upload_time_iso_8601": "2018-04-23T03:45:18.664550Z", "url": "https://files.pythonhosted.org/packages/3b/a5/b7dcc27d8b836ad15f89dcaaf98e6a682f8b2f50f9b0db63401331d07b01/importnb-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a5a7e5e4dea8db950eda467b6923515", "sha256": "6db24b4ac04727f4fa44a65102b20914b156c82043c7690b6bc33f7afb200351"}, "downloads": -1, "filename": "importnb-0.1.3.tar.gz", "has_sig": false, "md5_digest": "4a5a7e5e4dea8db950eda467b6923515", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8148, "upload_time": "2018-04-23T03:45:19", "upload_time_iso_8601": "2018-04-23T03:45:19.639378Z", "url": "https://files.pythonhosted.org/packages/cf/7f/d2b1703e418d84e4bc7e4b0a4aeed24dca4d5acb10ca094b85d50c749c52/importnb-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "2d0bcfcb69120ee6732dc020dfec5313", "sha256": "24d2dc50cfe7056fba91ff9b889736692657f7b0c144a777cb1ad0c51ce59c7c"}, "downloads": -1, "filename": "importnb-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "2d0bcfcb69120ee6732dc020dfec5313", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12805, "upload_time": "2018-04-23T03:50:43", "upload_time_iso_8601": "2018-04-23T03:50:43.948455Z", "url": "https://files.pythonhosted.org/packages/cc/a8/02d9a98d1046bd7bd08ba8b70c9b0fddf956042dc7990c6a054b2c98dac6/importnb-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9dc536a883642799fe4fedb43aa76c5a", "sha256": "04f4cf2340f4bee352b2a979ae0c04f169bb3e8f9561458bcf13d724f6ad7c63"}, "downloads": -1, "filename": "importnb-0.1.4.tar.gz", "has_sig": false, "md5_digest": "9dc536a883642799fe4fedb43aa76c5a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8128, "upload_time": "2018-04-23T03:50:45", "upload_time_iso_8601": "2018-04-23T03:50:45.127057Z", "url": "https://files.pythonhosted.org/packages/be/6e/9e6211fdae72d7751df2231d1116cdc1700af21133416101a7e55fbabe1c/importnb-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "6e6fe1a97912a28677a073ef493cf949", "sha256": "93e08756fe1ed39fc9789fe521b3d17a0948782f22ae995386708df15a15450c"}, "downloads": -1, "filename": "importnb-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "6e6fe1a97912a28677a073ef493cf949", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11353, "upload_time": "2018-05-05T17:33:24", "upload_time_iso_8601": "2018-05-05T17:33:24.700116Z", "url": "https://files.pythonhosted.org/packages/7f/38/f0f53d5e45693f03b87b3038229a617b9f5ac1832416ee135dda0376ea65/importnb-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a65fa5b0e2a531f1b1c522cc70c47d10", "sha256": "1b419b27f0e5f4e6b51122aed7f1c4f951a3466b14b293d14158e51db2a6cd11"}, "downloads": -1, "filename": "importnb-0.1.5.tar.gz", "has_sig": false, "md5_digest": "a65fa5b0e2a531f1b1c522cc70c47d10", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9125, "upload_time": "2018-05-05T17:33:25", "upload_time_iso_8601": "2018-05-05T17:33:25.801633Z", "url": "https://files.pythonhosted.org/packages/29/16/08be2dc38b2e8c1fa1461bc515f49e660fbf03aacb9c0caa9c32deef5c38/importnb-0.1.5.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "3f68d23c89aa6c505862ea674a2ee63f", "sha256": "0918898342deeb932b238b6a0486fbe52c3d20b5176ece6a9752ead80ec00aa6"}, "downloads": -1, "filename": "importnb-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3f68d23c89aa6c505862ea674a2ee63f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19002, "upload_time": "2018-04-26T04:48:01", "upload_time_iso_8601": "2018-04-26T04:48:01.172445Z", "url": "https://files.pythonhosted.org/packages/b0/2a/bf68ed4e13f7909a8b00a92287ca29b34f97e79504efcdb4ae0d85143333/importnb-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "43cfc6b05a31c2d5316a623a160796b8", "sha256": "3f042b562d0225512e19e9d61a1a5ed1dab08b4afe608413a153a0de352dd8c4"}, "downloads": -1, "filename": "importnb-0.2.1.tar.gz", "has_sig": false, "md5_digest": "43cfc6b05a31c2d5316a623a160796b8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9780, "upload_time": "2018-04-26T04:48:02", "upload_time_iso_8601": "2018-04-26T04:48:02.264875Z", "url": "https://files.pythonhosted.org/packages/a0/0c/914824fb338828cc49889b4ea45b641f424be6df8a45da9d4f0628528513/importnb-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "f641527f8b57291f2cc761895bf41268", "sha256": "91502020376fd399820f9788f931184352cf45dcf3e5a1c03426f5ab9db2c9da"}, "downloads": -1, "filename": "importnb-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f641527f8b57291f2cc761895bf41268", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20547, "upload_time": "2018-04-28T15:37:31", "upload_time_iso_8601": "2018-04-28T15:37:31.831702Z", "url": "https://files.pythonhosted.org/packages/3b/63/566781feedefaaa719009a72dffec862d2ace44e1b145fa5856907d1343d/importnb-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "021f6c082903ec8b817d6d0bbc7785b8", "sha256": "a8dbdaa822895a36a91aa8a2a8f7fbf0fdc374fdc583592c0e613268992a1dcd"}, "downloads": -1, "filename": "importnb-0.2.2.tar.gz", "has_sig": false, "md5_digest": "021f6c082903ec8b817d6d0bbc7785b8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10097, "upload_time": "2018-04-28T15:37:32", "upload_time_iso_8601": "2018-04-28T15:37:32.945422Z", "url": "https://files.pythonhosted.org/packages/66/ab/6e5c8c0d7c8cef8d6031caab6f674cd8a3a965926d998d19bb48ecf28ee1/importnb-0.2.2.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "6eeaf0a6de2df378d6e7f41952eb4d32", "sha256": "6cd342e1af5ae03a35dc585934384f2cfa8f803bdeaf74158d12baa663272bba"}, "downloads": -1, "filename": "importnb-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "6eeaf0a6de2df378d6e7f41952eb4d32", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14143, "upload_time": "2018-05-04T15:25:25", "upload_time_iso_8601": "2018-05-04T15:25:25.689257Z", "url": "https://files.pythonhosted.org/packages/c5/73/c0710f4aa856276af7e4559ee1d9cba6d79a78ebfa1acc2d8fe5c0e1c78e/importnb-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97c2b79ea1849da059a9ae4b4d4d792d", "sha256": "a31e489a324a83d825ee72a06db8916711e67c234dba7ad57e3159bb39ec71fb"}, "downloads": -1, "filename": "importnb-0.2.4.tar.gz", "has_sig": false, "md5_digest": "97c2b79ea1849da059a9ae4b4d4d792d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9064, "upload_time": "2018-05-04T15:25:26", "upload_time_iso_8601": "2018-05-04T15:25:26.784313Z", "url": "https://files.pythonhosted.org/packages/ff/c3/734c3419ff76064302727423f7e9c411e7523df1b8bc6303fb5eed79141d/importnb-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "02bae356ceb0f727fa46de86848f5297", "sha256": "d51d6fd54577b489ea5d5a7ef99f9a42daebeddc819494e0c33b812872a41154"}, "downloads": -1, "filename": "importnb-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "02bae356ceb0f727fa46de86848f5297", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12932, "upload_time": "2018-05-08T04:41:37", "upload_time_iso_8601": "2018-05-08T04:41:37.913851Z", "url": "https://files.pythonhosted.org/packages/32/ad/ac5c38d59873b9fb19dccfed64fcf5a0b1881696ab40bbe440b53aa10357/importnb-0.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b24800a4073152c1b5a763b8f9f2490b", "sha256": "9c38283ce4664ec105e78f068abb0e51d9ed165a2ddf3191b0d14a4888375ee6"}, "downloads": -1, "filename": "importnb-0.2.5.tar.gz", "has_sig": false, "md5_digest": "b24800a4073152c1b5a763b8f9f2490b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10518, "upload_time": "2018-05-08T04:41:39", "upload_time_iso_8601": "2018-05-08T04:41:39.333168Z", "url": "https://files.pythonhosted.org/packages/a6/31/67ab04ad69f8894a72965c4030996a404bc984b052c8f81304efe22d1d74/importnb-0.2.5.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "52ef32b4200ef7a8b8df576e1dec50e8", "sha256": "3eed4b187efd86b7a3a289e4602ac3c5a1d4017a56b310e0844ab9a84583dee2"}, "downloads": -1, "filename": "importnb-0.2.8-py3-none-any.whl", "has_sig": false, "md5_digest": "52ef32b4200ef7a8b8df576e1dec50e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 19869, "upload_time": "2018-05-14T03:13:03", "upload_time_iso_8601": "2018-05-14T03:13:03.266186Z", "url": "https://files.pythonhosted.org/packages/fa/b3/4959f2eaac70809a268c8436e91762ed21dfc16b9e98ced904053b0ad082/importnb-0.2.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ac0d2d807cb4f3057dfd4ef223e1931", "sha256": "6ddf67088f5cedd1b43694d515d695ad84a97cb08e1f605933f95318be96172f"}, "downloads": -1, "filename": "importnb-0.2.8.tar.gz", "has_sig": false, "md5_digest": "4ac0d2d807cb4f3057dfd4ef223e1931", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 15636, "upload_time": "2018-05-14T03:13:04", "upload_time_iso_8601": "2018-05-14T03:13:04.592508Z", "url": "https://files.pythonhosted.org/packages/be/49/1634d92a15b9f7f55ffed1a2494399a2fbfbe2fb3fa0b30494adac16c787/importnb-0.2.8.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "7c5c1677e234dbb29e26b21370c91c7c", "sha256": "4161022c3057aa3734b054841cebeae06ac923500446f5f13d89dd419c585691"}, "downloads": -1, "filename": "importnb-0.2.9-py3-none-any.whl", "has_sig": false, "md5_digest": "7c5c1677e234dbb29e26b21370c91c7c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 29969, "upload_time": "2018-05-21T15:26:41", "upload_time_iso_8601": "2018-05-21T15:26:41.202836Z", "url": "https://files.pythonhosted.org/packages/b8/0d/d1423e15c5c515f7ad035adf4fdcfc418b70bb7ac056866ea1f17c706339/importnb-0.2.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "47107192bbfe883a5a600423455fff2d", "sha256": "755682692932fa5e925626f8cfd9370742fcc52a47c59e98af40b91f8428b6a3"}, "downloads": -1, "filename": "importnb-0.2.9.tar.gz", "has_sig": false, "md5_digest": "47107192bbfe883a5a600423455fff2d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 24904, "upload_time": "2018-05-21T15:26:42", "upload_time_iso_8601": "2018-05-21T15:26:42.583777Z", "url": "https://files.pythonhosted.org/packages/10/f4/ec673a622918f6f9e6ea6767cdbffa6f62371cb299a256cd34d45ccc8b40/importnb-0.2.9.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "33f50205b16aa452ca88cb18c46a7612", "sha256": "eaee6c0d784392ecb79ec769d819808fd45fac82ec8b7c7cb3dc2ae8f1f2a829"}, "downloads": -1, "filename": "importnb-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "33f50205b16aa452ca88cb18c46a7612", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 54243, "upload_time": "2018-06-06T14:29:27", "upload_time_iso_8601": "2018-06-06T14:29:27.609405Z", "url": "https://files.pythonhosted.org/packages/cb/0f/8e971f91d5f10c1feb6c05fb81021a5a4081eac801489ab34c1366c9e328/importnb-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "35a429a94adeebb9beb1db7830a78741", "sha256": "a038aa456b7b3df7f23ded5696bec65340be19fc7fe3a0d17e861289bd17129d"}, "downloads": -1, "filename": "importnb-0.3.1.tar.gz", "has_sig": false, "md5_digest": "35a429a94adeebb9beb1db7830a78741", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 41647, "upload_time": "2018-06-06T14:29:28", "upload_time_iso_8601": "2018-06-06T14:29:28.443842Z", "url": "https://files.pythonhosted.org/packages/67/90/ba6f9cf8776a5ba2b9c1639cc732d31c91298c09a51c0854ca517c826759/importnb-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "d818e78db8f96b2fc67e9d702e5392b9", "sha256": "553fd2a98f3d8efe1626f627da6b5cc4c8470bd142200bdddd239746c9f94a8d"}, "downloads": -1, "filename": "importnb-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d818e78db8f96b2fc67e9d702e5392b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 69606, "upload_time": "2018-06-21T12:03:44", "upload_time_iso_8601": "2018-06-21T12:03:44.462746Z", "url": "https://files.pythonhosted.org/packages/25/1d/608e4bd7eabfba6b599982962d846cd4690706e9503145f190266daa5130/importnb-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "393ee0d059526d6454395d823bad0379", "sha256": "443fa0dcb61874226959ca3e979ff8a663def145ca9d270025878209c4a19726"}, "downloads": -1, "filename": "importnb-0.3.2.tar.gz", "has_sig": false, "md5_digest": "393ee0d059526d6454395d823bad0379", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 51792, "upload_time": "2018-06-21T12:03:45", "upload_time_iso_8601": "2018-06-21T12:03:45.690003Z", "url": "https://files.pythonhosted.org/packages/3c/6e/952abfdeb98684c034180285bf02556f5808fca2b61811206d53b5ce15e8/importnb-0.3.2.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "2b57702c3ae40682a78c0d8e8166cde8", "sha256": "68cbada5672036c4292363465d3f469d1826389334b0d122e4c4b7ebd2f5a6a2"}, "downloads": -1, "filename": "importnb-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2b57702c3ae40682a78c0d8e8166cde8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 77260, "upload_time": "2018-07-12T13:54:32", "upload_time_iso_8601": "2018-07-12T13:54:32.927637Z", "url": "https://files.pythonhosted.org/packages/ff/fa/58f71cf4c074c28c347af89e8124ad39fe204efcabd20ad0daf10d6672f0/importnb-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fca1918de36b2dbe944d54b915e1a3b8", "sha256": "270583a28d6dbc4db7e3ae742ef8ca00205bcedfdb54a08bc4f5b051485fbf55"}, "downloads": -1, "filename": "importnb-0.4.0.tar.gz", "has_sig": false, "md5_digest": "fca1918de36b2dbe944d54b915e1a3b8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 54678, "upload_time": "2018-07-12T13:54:33", "upload_time_iso_8601": "2018-07-12T13:54:33.956952Z", "url": "https://files.pythonhosted.org/packages/ef/9a/bc0a8c93756b9ed663bb9d3a7c503df8a24def1df8f683e412c2ad28b868/importnb-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "ebaf93580f551f8e24545fddd934e603", "sha256": "553ff6c3abf1794044bc7f611ae23aa2d766cc5707bc50600e95d77be0c8d9c6"}, "downloads": -1, "filename": "importnb-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ebaf93580f551f8e24545fddd934e603", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 77498, "upload_time": "2018-07-12T19:58:22", "upload_time_iso_8601": "2018-07-12T19:58:22.160926Z", "url": "https://files.pythonhosted.org/packages/6e/46/c48da80860aac82bbdbb77ea0fdafd4945955526da31303ae2e2b45475c6/importnb-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ca6a7f5660422972caf248c4ac8a33b", "sha256": "b80163f25d0933bc12153ce10d4b1023f90129c84ef236d289c1659595e92cbb"}, "downloads": -1, "filename": "importnb-0.4.1.tar.gz", "has_sig": false, "md5_digest": "7ca6a7f5660422972caf248c4ac8a33b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 54897, "upload_time": "2018-07-12T19:58:23", "upload_time_iso_8601": "2018-07-12T19:58:23.445457Z", "url": "https://files.pythonhosted.org/packages/31/78/2fda9e9f30f89b1df57d3aff89c56ba59af5651e078832a5a77ad0b421e7/importnb-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "80b5d3bd9ece84286c187e90821856e8", "sha256": "ec86465042d66a45ee3eaaaee242026ae389c01260f63052155a7837866089d3"}, "downloads": -1, "filename": "importnb-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "80b5d3bd9ece84286c187e90821856e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 54838, "upload_time": "2018-08-15T17:49:48", "upload_time_iso_8601": "2018-08-15T17:49:48.733249Z", "url": "https://files.pythonhosted.org/packages/07/29/4edcc4b63037a1ca406cfcaa1ea520c3f0a86ba67381dbbe7fefb1dd2845/importnb-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a77626adc5765897df178e9366d01fe", "sha256": "e5001bb6ac8b10cb76840b13352de5999b8f0cfefe91d1770636db6d9b7bde55"}, "downloads": -1, "filename": "importnb-0.4.2.tar.gz", "has_sig": false, "md5_digest": "3a77626adc5765897df178e9366d01fe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 40910, "upload_time": "2018-08-15T17:49:50", "upload_time_iso_8601": "2018-08-15T17:49:50.357348Z", "url": "https://files.pythonhosted.org/packages/3c/33/7dcc79dbdb878a9cfdfee56a781f7ad8590d8a665d95d8109525557c75c4/importnb-0.4.2.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "563f37703fb0269c1d9323eb8c37a16f", "sha256": "1305f32a86f8715fbea48425fd720c9f8d735c53c61ebd2927589ae378a7e480"}, "downloads": -1, "filename": "importnb-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "563f37703fb0269c1d9323eb8c37a16f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 56252, "upload_time": "2018-10-15T12:50:27", "upload_time_iso_8601": "2018-10-15T12:50:27.352420Z", "url": "https://files.pythonhosted.org/packages/81/67/8f14d59380e5da0ca2b2209b821b8f6645b1dda0aeb9e19eebcef7aa713a/importnb-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "455e904f0a33619985fa1fed1b151e67", "sha256": "e9a8135db2b8ff38301631a0b621572e248383bbc462a266c4e3a279158e1b27"}, "downloads": -1, "filename": "importnb-0.5.0.tar.gz", "has_sig": false, "md5_digest": "455e904f0a33619985fa1fed1b151e67", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 42973, "upload_time": "2018-10-15T12:50:28", "upload_time_iso_8601": "2018-10-15T12:50:28.829513Z", "url": "https://files.pythonhosted.org/packages/82/ef/5c940bb56ad22fb3783ac2be3cae4da0fc04830b20599bb5380b81d65a90/importnb-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "6ac9f9428767277498a39383f9ba09fb", "sha256": "5a0d9c440e2b2b709e0fa80025b155646ac779202ce09bb2195e0f0a447bbd20"}, "downloads": -1, "filename": "importnb-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6ac9f9428767277498a39383f9ba09fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 52387, "upload_time": "2018-11-22T00:13:30", "upload_time_iso_8601": "2018-11-22T00:13:30.436801Z", "url": "https://files.pythonhosted.org/packages/03/1d/b3fffcd754c7314916cc5d3a46d89899584bf3929580b39c8a8ac3f62dad/importnb-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1ceabf089d86df9cd9d5d6abd8e0fb6", "sha256": "80fd06461cc24e649df8ceefc040f37e647e781ab373c5413c177a8eeb075c7a"}, "downloads": -1, "filename": "importnb-0.5.1.tar.gz", "has_sig": false, "md5_digest": "b1ceabf089d86df9cd9d5d6abd8e0fb6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 40232, "upload_time": "2018-11-22T00:13:32", "upload_time_iso_8601": "2018-11-22T00:13:32.206643Z", "url": "https://files.pythonhosted.org/packages/1f/17/290625a659c8aad95b915368af9c8a297b9cc294f1727b36698422ee26d3/importnb-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "830beb0fbfc57acf393014069abbe7d5", "sha256": "90ce00815c7474db5f2be6abe28f3ab646235f0b210a19d078fde31070d316cb"}, "downloads": -1, "filename": "importnb-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "830beb0fbfc57acf393014069abbe7d5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 55426, "upload_time": "2018-12-05T13:54:26", "upload_time_iso_8601": "2018-12-05T13:54:26.637434Z", "url": "https://files.pythonhosted.org/packages/d9/3d/d5126c0eff43bd44ffaf47d2b2229cc6d7617e4654d6c75e14c8e210965f/importnb-0.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a85fba5603c5f44119b85721353d5054", "sha256": "649659ca7bc4151ca272bfa7cf6753501afbc5db28bf5bc0cc1e4039aea3892c"}, "downloads": -1, "filename": "importnb-0.5.2.tar.gz", "has_sig": false, "md5_digest": "a85fba5603c5f44119b85721353d5054", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 42872, "upload_time": "2018-12-05T13:54:28", "upload_time_iso_8601": "2018-12-05T13:54:28.515899Z", "url": "https://files.pythonhosted.org/packages/19/da/55c008d538ae44f34d02aa1074f03a91ff6cb3c81e3e8bac828a3af75522/importnb-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "42bbfcec0d6d51b5cde336cfad477d4f", "sha256": "0ed2f041406bc540447439445b94607b94c30346004c61affb96b58c71454375"}, "downloads": -1, "filename": "importnb-0.5.3-py3-none-any.whl", "has_sig": false, "md5_digest": "42bbfcec0d6d51b5cde336cfad477d4f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 54176, "upload_time": "2018-12-19T07:20:09", "upload_time_iso_8601": "2018-12-19T07:20:09.875466Z", "url": "https://files.pythonhosted.org/packages/75/53/9a5d5cf5b6b0f935f5d2de522f87150750708bf8ad86791f9731410520c8/importnb-0.5.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4afec6fa4fa0b48ce6ab0dd29d6a2003", "sha256": "21643b29fde1adb0c5d90d72ab194e74375487064cda38263b84f2a2bc9ea26a"}, "downloads": -1, "filename": "importnb-0.5.3.tar.gz", "has_sig": false, "md5_digest": "4afec6fa4fa0b48ce6ab0dd29d6a2003", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 43831, "upload_time": "2018-12-19T07:20:11", "upload_time_iso_8601": "2018-12-19T07:20:11.389290Z", "url": "https://files.pythonhosted.org/packages/eb/b0/6437cd64a8d918930b342732cc17c368323e57ff401b40656723406be5c2/importnb-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "41d357d8ea6595bc9aa2091b7d1600f1", "sha256": "fff750ef2e860e5dc62e3dcd201404fe4d597a56b3752b7a7b832a5323df0418"}, "downloads": -1, "filename": "importnb-0.5.4-py3-none-any.whl", "has_sig": false, "md5_digest": "41d357d8ea6595bc9aa2091b7d1600f1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 54198, "upload_time": "2018-12-19T07:45:36", "upload_time_iso_8601": "2018-12-19T07:45:36.204773Z", "url": "https://files.pythonhosted.org/packages/a8/07/c3c5efb55676549834bfc20923a30818d3b84998cc7670fe567b0e9b1a40/importnb-0.5.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "81b48c6017ace8a7a92062af11d84464", "sha256": "f5bf441a69a2698617b6bca5c961e435e97fa8c554f96b8a360ba514c88d2bc1"}, "downloads": -1, "filename": "importnb-0.5.4.tar.gz", "has_sig": false, "md5_digest": "81b48c6017ace8a7a92062af11d84464", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 43833, "upload_time": "2018-12-19T07:45:37", "upload_time_iso_8601": "2018-12-19T07:45:37.404026Z", "url": "https://files.pythonhosted.org/packages/ee/23/c36f95a032f803eebdae1b511725e5a60784097642d6c2362068c39f042f/importnb-0.5.4.tar.gz", "yanked": false}], "0.5.5": [{"comment_text": "", "digests": {"md5": "10c94774b84adcbe313583d506fc2d15", "sha256": "2aa4d8e39644e5491c495068b0436815055b6aa73dbf74d63d4b53847d28c2fb"}, "downloads": -1, "filename": "importnb-0.5.5-py3-none-any.whl", "has_sig": false, "md5_digest": "10c94774b84adcbe313583d506fc2d15", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 52616, "upload_time": "2018-12-19T14:30:30", "upload_time_iso_8601": "2018-12-19T14:30:30.549409Z", "url": "https://files.pythonhosted.org/packages/40/15/50adfb42973c2af5600945251c2975fba4fb9b447d5041bd177f660ff6b4/importnb-0.5.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ece613255165705911ba86794d1021a", "sha256": "96e93f51dec170e739b79d588fe48d26f6dd3f2f787562a45ba55e2e541cac59"}, "downloads": -1, "filename": "importnb-0.5.5.tar.gz", "has_sig": false, "md5_digest": "4ece613255165705911ba86794d1021a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 41705, "upload_time": "2018-12-19T14:30:32", "upload_time_iso_8601": "2018-12-19T14:30:32.069718Z", "url": "https://files.pythonhosted.org/packages/10/72/621bae37b9d4f7c0a956908711c9c7016b977743191e453950fba7fb3f93/importnb-0.5.5.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "68dddf1e0feec8666babb1343f3e617e", "sha256": "d7a6ef6ddee7bf8d8c86c1a609017f627735b287188a557d35207b11d09a7634"}, "downloads": -1, "filename": "importnb-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "68dddf1e0feec8666babb1343f3e617e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 26021, "upload_time": "2019-12-06T14:56:46", "upload_time_iso_8601": "2019-12-06T14:56:46.126783Z", "url": "https://files.pythonhosted.org/packages/0c/c6/399c3abafb851a1fe0ac9611333255f1b53410a3f693bf7b4108e0efcc10/importnb-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4e553a401d10607dd720b7aab715fd53", "sha256": "223d2d346de186b0578e702d1c146dfedaac6b853be7df9c4899725c847ec3cd"}, "downloads": -1, "filename": "importnb-0.6.0.tar.gz", "has_sig": false, "md5_digest": "4e553a401d10607dd720b7aab715fd53", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 25692, "upload_time": "2019-12-06T14:56:47", "upload_time_iso_8601": "2019-12-06T14:56:47.727556Z", "url": "https://files.pythonhosted.org/packages/9d/20/b1d7ba41340612b8eefc34d050a5ed7819d6bd42701b8c92c9da999e4771/importnb-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "d7a350695e5bb3652724ca87e8f91b2b", "sha256": "4dd7a374e4ff4b1a2af6836d4c4b6b374bef8bfda54f36b1733bf43cdf92d8e4"}, "downloads": -1, "filename": "importnb-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d7a350695e5bb3652724ca87e8f91b2b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 25083, "upload_time": "2020-04-16T19:24:05", "upload_time_iso_8601": "2020-04-16T19:24:05.878011Z", "url": "https://files.pythonhosted.org/packages/e3/0d/47799d2c6f5f38c9f57aa41f367a0f944fc5c691023c33bbbc8b569a8c29/importnb-0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b32cdf124d40db294f42c622f7e6f4b", "sha256": "3eb4fd366b14c554fad4bc50d5ea8de0854d09ad2bb09b61f1fdd002b0bb052e"}, "downloads": -1, "filename": "importnb-0.6.1.tar.gz", "has_sig": false, "md5_digest": "3b32cdf124d40db294f42c622f7e6f4b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 26687, "upload_time": "2020-04-16T19:24:07", "upload_time_iso_8601": "2020-04-16T19:24:07.931897Z", "url": "https://files.pythonhosted.org/packages/c1/7f/460a3e104ae00015d2d5b652318eeb1630fa80fbd0ee43bc009d763df56e/importnb-0.6.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d7a350695e5bb3652724ca87e8f91b2b", "sha256": "4dd7a374e4ff4b1a2af6836d4c4b6b374bef8bfda54f36b1733bf43cdf92d8e4"}, "downloads": -1, "filename": "importnb-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d7a350695e5bb3652724ca87e8f91b2b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 25083, "upload_time": "2020-04-16T19:24:05", "upload_time_iso_8601": "2020-04-16T19:24:05.878011Z", "url": "https://files.pythonhosted.org/packages/e3/0d/47799d2c6f5f38c9f57aa41f367a0f944fc5c691023c33bbbc8b569a8c29/importnb-0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b32cdf124d40db294f42c622f7e6f4b", "sha256": "3eb4fd366b14c554fad4bc50d5ea8de0854d09ad2bb09b61f1fdd002b0bb052e"}, "downloads": -1, "filename": "importnb-0.6.1.tar.gz", "has_sig": false, "md5_digest": "3b32cdf124d40db294f42c622f7e6f4b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 26687, "upload_time": "2020-04-16T19:24:07", "upload_time_iso_8601": "2020-04-16T19:24:07.931897Z", "url": "https://files.pythonhosted.org/packages/c1/7f/460a3e104ae00015d2d5b652318eeb1630fa80fbd0ee43bc009d763df56e/importnb-0.6.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:31 2020"}