{"info": {"author": "Arne", "author_email": "arecknag@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Flask", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "|Logo|\n\n|CI_CD| |pyPI| |Docs| |License| |py_versions| |Style|\n\n\n.. header-end\n\n\nProject Description\n-------------------\n\nThis extension provides an easy and safe way to add dev-only shortcuts to\nroutes in your flask application.\n\nThe main beneficiaries are microservices that need to be tested regularly in\nconjunction with their clients. If you need to assert working communication and\nbasic integration in a sufficiently complex ecosystem, clients that can not\nfreely chose how their requests are formed gain a lot from being able to\nreceive predictable responses. By skipping over the details of how the\nmicroservice is implemented, which bugs and minor changes it experiences over\ntime, testing basic API compatibility gets a lot more manageable.\n\n\nWhat is a Shortcut?\n-------------------\n\nIn the context of this package, a shortcut is a pair of condition -> response.\nThe response is `anything that an view function can return`_, and the\ncondition depends on one of the three possible mapping contexts.\n\nIn the first context, only the response is passed as the shortcut, and the\ncondition is assumed to always be true, effectively replacing the route to\nalways just return the given response. Showcased with the view ``foo``\nin the usage section.\n\nIn the second context, a dictionary that maps strings to responses is passed\nas the shortcut. The strings need to be deserializeable as json, and the\nfirst one that can be fully matched as a substructure into the request body\nwill see its condition as fulfilled, returning its associated response.\nIf none of them are valid sub-matches, the original view function will run.\nShowcased with the view ``bar`` in the usage section.\n\nIn the third context, either a single function or a list of functions is\npassed as the shortcut. The functions can run any code whatsoever and will\nbe executed one after the other as long as they return ``None``, which means\nthat their condition is not fulfilled. As soon as one of them returns\nsomething different, it is passed on as the response. If all of them return\n``None``, the original view function is executed. Showcased with the view\n``baz`` in the usage section.\n\n\nUsage\n-----\n\nYou can add shortcuts to your view functions either individually with\ndecorators, or in a single swoop once all routes have been defined. Both ways\nare functionally equivalent.\n\nApplying Shortcuts\n==================\n\n**With decorators:**\n\n.. code-block:: python\n\n    from flask import Flask\n    from flask_shortcut import Shortcut\n\n    app = Flask(__name__)\n    short = Shortcut(app)\n\n    @app.route('/foo', methods=['GET'])\n    @short.cut(('short_foo', 200))\n    def foo():\n        return 'foo'\n\n    @app.route('/bar', methods=['POST'])\n    @short.cut({\n        '{\"name\": \"TestUser\"}': ('short_bar', 200),\n        '{\"name\": \"UserTest\"}': ('longer_bar', 200),\n    })\n    def bar():\n        return 'bar'\n\n    @app.route('/baz', methods=['POST'])\n    @short.cut(lambda: (\"json_baz\", 200) if \"json\" in request.mimetype else None)\n    def baz():\n        return 'baz'\n\n\n**With a wire call**\n\n.. code-block:: python\n\n    from flask import Flask\n    from flask_shortcut import Shortcut\n\n    app = Flask(__name__)\n\n    @app.route('/foo', methods=['GET'])\n    def foo():\n        return 'foo'\n\n    @app.route('/bar', methods=['POST'])\n    def bar():\n        return 'bar'\n\n    @app.route('/baz', methods=['POST'])\n    def baz():\n        return 'baz'\n\n    Shortcut(app).wire(\n        {\n             '/foo': ('short_foo', 200),\n             '/bar': {\n                 '{\"name\": \"TestUser\"}': ('short_bar', 200),\n                 '{\"name\": \"UserTest\"}': ('longer_bar', 200),\n             }\n             '/baz': lambda: (\"json_baz\", 200) if \"json\" in request.mimetype else None\n        }\n    )\n\n\nWhat it looks like\n==================\n\nTo showcase how the shortcuts are supposed to work, here is the result\nof a couple of requests sent against the server from the example above\nif it were run with ``FLASK_ENV=test flask run``:\n\n.. code-block:: python\n\n  >>> from request import get, post\n  >>> get('http://127.0.0.1:5000/foo').text\n  'short_foo'  # the only response this route will give\n  >>> post('http://127.0.0.1:5000/bar', json={\"name\": \"me\"}).text\n  'bar'  # no shortcut match -> the original logic was executed\n  >>> post('http://127.0.0.1:5000/bar', json={\"name\": \"TestUser\"}).text\n  'short_bar'  # shortcut match\n  >>> post('http://127.0.0.1:5000/bar', json={\"name\": \"UserTest\", \"job\": None}).text\n  'longer_bar'  # shortcut only needs to be contained for a match\n  >>> post('http://127.0.0.1:5000/baz').text\n  'baz'  # no shortcut match -> the function returned None\n  >>> post('http://127.0.0.1:5000/baz', json={\"name\": \"me\"}).text\n  'json_baz'  # shortcut matched -> the function returned a valid response\n\nOne focus of this package is that a production deployment would remain\nas ignorant as possible about the existence of shortcuts. While the\nshortcut object is still created, it only delegates the view functions\nand no shortcut code has any chance of being run or showing up in .\n\n\nConfiguration\n-------------\n\nShortcuts will only be applied when ``FLASK_ENV`` is set to something\ndifferent from its default setting, ``production``. You can extend that list\nthrough the ``SHORTCUT_EXCLUSIONS`` config setting, either by adding it to\nyour app's config before creating any Shortcut objects, or preferably by\nsetting up the whole config `with a file`_.\n\nPossible values for it are all environments that you want to block other\nthan ``production`` separated by commas. For example ``staging,master`` will\nblock the envs ``production``, ``staging``, and ``master`` from receiving\nshortcuts.\n\n\n.. |Logo| image:: https://user-images.githubusercontent.com/2063412/79631833-c1b39400-815b-11ea-90da-d9264420ef68.png\n   :alt: Logo\n   :width: 1200\n   :target: https://github.com/a-recknagel/Flask-Shortcut\n\n.. |CI_CD| image:: https://github.com/a-recknagel/Flask-Shortcut/workflows/CI-CD/badge.svg\n   :alt: Main workflow status\n   :target: https://github.com/a-recknagel/Flask-Shortcut/actions\n\n.. |pyPI| image:: https://img.shields.io/pypi/v/flask-shortcut\n   :alt: Current pyPI version\n   :target: https://pypi.org/project/flask-shortcut/\n\n.. |Docs| image:: https://img.shields.io/badge/docs-github--pages-blue\n   :alt: Documentation home\n   :target: https://a-recknagel.github.io/Flask-Shortcut/\n\n.. |License| image:: https://img.shields.io/pypi/l/flask-shortcut\n   :alt: Package license\n   :target: https://pypi.org/project/flask-shortcut/\n\n.. |py_versions| image:: https://img.shields.io/pypi/pyversions/flask-shortcut\n   :alt: Supported on python versions\n   :target: https://pypi.org/project/flask-shortcut/\n\n.. |Style| image:: https://img.shields.io/badge/codestyle-black-black\n   :alt: Any color you want\n   :target: https://black.readthedocs.io/en/stable/\n\n.. _with a file: https://flask.palletsprojects.com/en/1.1.x/config/#configuring-from-files\n\n.. _anything that an view function can return: https://flask.palletsprojects.com/en/1.1.x/quickstart/#about-responses", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/a-recknagel/Flask-Shortcut", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "flask-shortcut", "package_url": "https://pypi.org/project/flask-shortcut/", "platform": "", "project_url": "https://pypi.org/project/flask-shortcut/", "project_urls": {"Homepage": "https://github.com/a-recknagel/Flask-Shortcut", "Repository": "https://github.com/a-recknagel/Flask-Shortcut"}, "release_url": "https://pypi.org/project/flask-shortcut/0.4.0/", "requires_dist": ["flask (>=1.1.2,<2.0.0)", "click (>=7.1.1,<8.0.0)", "importlib-metadata (>=1.6.0,<2.0.0)", "xmltodict (>=0.12.0,<0.13.0)"], "requires_python": ">=3.6,<4.0", "summary": "Extension that provides an easy way to add dev-only shortcuts to your routes.", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://github.com/a-recknagel/Flask-Shortcut\" rel=\"nofollow\"><img alt=\"Logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0cd690f379a4e519880202b288019de948503db9/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f323036333431322f37393633313833332d63316233393430302d383135622d313165612d393064612d6439323634343230656636382e706e67\" width=\"1200\"></a></p>\n<p><a href=\"https://github.com/a-recknagel/Flask-Shortcut/actions\" rel=\"nofollow\"><img alt=\"Main workflow status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3cac0e7cb2b47206df17f00a1460813832f5b8fe/68747470733a2f2f6769746875622e636f6d2f612d7265636b6e6167656c2f466c61736b2d53686f72746375742f776f726b666c6f77732f43492d43442f62616467652e737667\"></a> <a href=\"https://pypi.org/project/flask-shortcut/\" rel=\"nofollow\"><img alt=\"Current pyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6233c674eab4a07b5faa86f57a35f5d5171bfb7b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f666c61736b2d73686f7274637574\"></a> <a href=\"https://a-recknagel.github.io/Flask-Shortcut/\" rel=\"nofollow\"><img alt=\"Documentation home\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5398c31d0fcf918f33834567bea3d765ec6dcb5b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6769746875622d2d70616765732d626c7565\"></a> <a href=\"https://pypi.org/project/flask-shortcut/\" rel=\"nofollow\"><img alt=\"Package license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0422ea1514edfcb22822915ce52bcb2cbda73423/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f666c61736b2d73686f7274637574\"></a> <a href=\"https://pypi.org/project/flask-shortcut/\" rel=\"nofollow\"><img alt=\"Supported on python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3c034e47ae8932ea15f9a7ee7cbcec5e0cea489f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f666c61736b2d73686f7274637574\"></a> <a href=\"https://black.readthedocs.io/en/stable/\" rel=\"nofollow\"><img alt=\"Any color you want\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a96235f451d82cf7ffae24459828b914b68685c0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64657374796c652d626c61636b2d626c61636b\"></a></p>\n<div id=\"project-description\">\n<h2>Project Description</h2>\n<p>This extension provides an easy and safe way to add dev-only shortcuts to\nroutes in your flask application.</p>\n<p>The main beneficiaries are microservices that need to be tested regularly in\nconjunction with their clients. If you need to assert working communication and\nbasic integration in a sufficiently complex ecosystem, clients that can not\nfreely chose how their requests are formed gain a lot from being able to\nreceive predictable responses. By skipping over the details of how the\nmicroservice is implemented, which bugs and minor changes it experiences over\ntime, testing basic API compatibility gets a lot more manageable.</p>\n</div>\n<div id=\"what-is-a-shortcut\">\n<h2>What is a Shortcut?</h2>\n<p>In the context of this package, a shortcut is a pair of condition -&gt; response.\nThe response is <a href=\"https://flask.palletsprojects.com/en/1.1.x/quickstart/#about-responses\" rel=\"nofollow\">anything that an view function can return</a>, and the\ncondition depends on one of the three possible mapping contexts.</p>\n<p>In the first context, only the response is passed as the shortcut, and the\ncondition is assumed to always be true, effectively replacing the route to\nalways just return the given response. Showcased with the view <tt>foo</tt>\nin the usage section.</p>\n<p>In the second context, a dictionary that maps strings to responses is passed\nas the shortcut. The strings need to be deserializeable as json, and the\nfirst one that can be fully matched as a substructure into the request body\nwill see its condition as fulfilled, returning its associated response.\nIf none of them are valid sub-matches, the original view function will run.\nShowcased with the view <tt>bar</tt> in the usage section.</p>\n<p>In the third context, either a single function or a list of functions is\npassed as the shortcut. The functions can run any code whatsoever and will\nbe executed one after the other as long as they return <tt>None</tt>, which means\nthat their condition is not fulfilled. As soon as one of them returns\nsomething different, it is passed on as the response. If all of them return\n<tt>None</tt>, the original view function is executed. Showcased with the view\n<tt>baz</tt> in the usage section.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>You can add shortcuts to your view functions either individually with\ndecorators, or in a single swoop once all routes have been defined. Both ways\nare functionally equivalent.</p>\n<div id=\"applying-shortcuts\">\n<h3>Applying Shortcuts</h3>\n<p><strong>With decorators:</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_shortcut</span> <span class=\"kn\">import</span> <span class=\"n\">Shortcut</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">short</span> <span class=\"o\">=</span> <span class=\"n\">Shortcut</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/foo'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'GET'</span><span class=\"p\">])</span>\n<span class=\"nd\">@short</span><span class=\"o\">.</span><span class=\"n\">cut</span><span class=\"p\">((</span><span class=\"s1\">'short_foo'</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">))</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'foo'</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/bar'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">])</span>\n<span class=\"nd\">@short</span><span class=\"o\">.</span><span class=\"n\">cut</span><span class=\"p\">({</span>\n    <span class=\"s1\">'{\"name\": \"TestUser\"}'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s1\">'short_bar'</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">),</span>\n    <span class=\"s1\">'{\"name\": \"UserTest\"}'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s1\">'longer_bar'</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">),</span>\n<span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">bar</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'bar'</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/baz'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">])</span>\n<span class=\"nd\">@short</span><span class=\"o\">.</span><span class=\"n\">cut</span><span class=\"p\">(</span><span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s2\">\"json_baz\"</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"s2\">\"json\"</span> <span class=\"ow\">in</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">mimetype</span> <span class=\"k\">else</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">baz</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'baz'</span>\n</pre>\n<p><strong>With a wire call</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_shortcut</span> <span class=\"kn\">import</span> <span class=\"n\">Shortcut</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/foo'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'GET'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'foo'</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/bar'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">bar</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'bar'</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/baz'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">baz</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'baz'</span>\n\n<span class=\"n\">Shortcut</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">wire</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span>\n         <span class=\"s1\">'/foo'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s1\">'short_foo'</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">),</span>\n         <span class=\"s1\">'/bar'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n             <span class=\"s1\">'{\"name\": \"TestUser\"}'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s1\">'short_bar'</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">),</span>\n             <span class=\"s1\">'{\"name\": \"UserTest\"}'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s1\">'longer_bar'</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">),</span>\n         <span class=\"p\">}</span>\n         <span class=\"s1\">'/baz'</span><span class=\"p\">:</span> <span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s2\">\"json_baz\"</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"s2\">\"json\"</span> <span class=\"ow\">in</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">mimetype</span> <span class=\"k\">else</span> <span class=\"kc\">None</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"what-it-looks-like\">\n<h3>What it looks like</h3>\n<p>To showcase how the shortcuts are supposed to work, here is the result\nof a couple of requests sent against the server from the example above\nif it were run with <tt>FLASK_ENV=test flask run</tt>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">request</span> <span class=\"kn\">import</span> <span class=\"n\">get</span><span class=\"p\">,</span> <span class=\"n\">post</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://127.0.0.1:5000/foo'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">text</span>\n<span class=\"s1\">'short_foo'</span>  <span class=\"c1\"># the only response this route will give</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s1\">'http://127.0.0.1:5000/bar'</span><span class=\"p\">,</span> <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"me\"</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">text</span>\n<span class=\"s1\">'bar'</span>  <span class=\"c1\"># no shortcut match -&gt; the original logic was executed</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s1\">'http://127.0.0.1:5000/bar'</span><span class=\"p\">,</span> <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"TestUser\"</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">text</span>\n<span class=\"s1\">'short_bar'</span>  <span class=\"c1\"># shortcut match</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s1\">'http://127.0.0.1:5000/bar'</span><span class=\"p\">,</span> <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"UserTest\"</span><span class=\"p\">,</span> <span class=\"s2\">\"job\"</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">text</span>\n<span class=\"s1\">'longer_bar'</span>  <span class=\"c1\"># shortcut only needs to be contained for a match</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s1\">'http://127.0.0.1:5000/baz'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">text</span>\n<span class=\"s1\">'baz'</span>  <span class=\"c1\"># no shortcut match -&gt; the function returned None</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s1\">'http://127.0.0.1:5000/baz'</span><span class=\"p\">,</span> <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"me\"</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">text</span>\n<span class=\"s1\">'json_baz'</span>  <span class=\"c1\"># shortcut matched -&gt; the function returned a valid response</span>\n</pre>\n<p>One focus of this package is that a production deployment would remain\nas ignorant as possible about the existence of shortcuts. While the\nshortcut object is still created, it only delegates the view functions\nand no shortcut code has any chance of being run or showing up in .</p>\n</div>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Shortcuts will only be applied when <tt>FLASK_ENV</tt> is set to something\ndifferent from its default setting, <tt>production</tt>. You can extend that list\nthrough the <tt>SHORTCUT_EXCLUSIONS</tt> config setting, either by adding it to\nyour app\u2019s config before creating any Shortcut objects, or preferably by\nsetting up the whole config <a href=\"https://flask.palletsprojects.com/en/1.1.x/config/#configuring-from-files\" rel=\"nofollow\">with a file</a>.</p>\n<p>Possible values for it are all environments that you want to block other\nthan <tt>production</tt> separated by commas. For example <tt>staging,master</tt> will\nblock the envs <tt>production</tt>, <tt>staging</tt>, and <tt>master</tt> from receiving\nshortcuts.</p>\n</div>\n\n          </div>"}, "last_serial": 7074262, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "28e956f828bccd6670bd14ee7d3fa61d", "sha256": "0584219f768c55c291ac63bcd008f38ff2c2b8862de2fe580ce558981598f3e9"}, "downloads": -1, "filename": "flask_shortcut-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "28e956f828bccd6670bd14ee7d3fa61d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 4128, "upload_time": "2020-04-13T12:47:28", "upload_time_iso_8601": "2020-04-13T12:47:28.783351Z", "url": "https://files.pythonhosted.org/packages/fe/69/c54c9dfffdd35e77e821b22aca656cb6dea850b53ef068386c38215ac412/flask_shortcut-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f72f8f41d3d8b273709c2eccfab92372", "sha256": "abe6a3fd40fa69709362a09d36344761aca273de27e844d91287d08f304e60e6"}, "downloads": -1, "filename": "flask_shortcut-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f72f8f41d3d8b273709c2eccfab92372", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 3978, "upload_time": "2020-04-13T12:47:30", "upload_time_iso_8601": "2020-04-13T12:47:30.751114Z", "url": "https://files.pythonhosted.org/packages/e8/81/f48cefd91efbec9f50dce24df6dcec0f872ef622c19a86409faac99c7cd5/flask_shortcut-0.1.0.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "8fb781cb1b4bb56cfc3f875aacff8cab", "sha256": "32a5d7c25b19a0586e4f5a3242ca1909c60ae81e3583b79da4f1bd0b14efa97d"}, "downloads": -1, "filename": "flask_shortcut-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "8fb781cb1b4bb56cfc3f875aacff8cab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 5070, "upload_time": "2020-04-14T08:07:35", "upload_time_iso_8601": "2020-04-14T08:07:35.125095Z", "url": "https://files.pythonhosted.org/packages/5d/62/26a9b52d2c306632015fd08482a751732aa79b09ef36b9d40a217b6c74ec/flask_shortcut-0.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aca5250974bead828b2262abc51e769d", "sha256": "ff50e9ee530073af0f9be866f3ddbca65bf488dbfeea9cccc0dd38fa82772ea2"}, "downloads": -1, "filename": "flask_shortcut-0.2.5.tar.gz", "has_sig": false, "md5_digest": "aca5250974bead828b2262abc51e769d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4895, "upload_time": "2020-04-14T08:07:36", "upload_time_iso_8601": "2020-04-14T08:07:36.224760Z", "url": "https://files.pythonhosted.org/packages/a2/60/f92b466276c618855006255e6667c92860b47d0f257af518bb8f6f6ede48/flask_shortcut-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "1cd16a727c6a6538b714e6ab04baa908", "sha256": "03a7dadca9954ff945207ccee8400ec85817dcde71407b7dc3d7ce60a6a7e2e2"}, "downloads": -1, "filename": "flask_shortcut-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "1cd16a727c6a6538b714e6ab04baa908", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 5070, "upload_time": "2020-04-15T07:30:19", "upload_time_iso_8601": "2020-04-15T07:30:19.393099Z", "url": "https://files.pythonhosted.org/packages/dc/d9/66cb42067f75f679cb0c157f3205f00d4a33cffbc3b9c2cd522109da87bb/flask_shortcut-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c953495d73dcdb283360ad99d17d9a3", "sha256": "951c047a5bb4733c0ceb6923c374bedd50c21b67cc0bdc194aab4d867da6ab25"}, "downloads": -1, "filename": "flask_shortcut-0.2.6.tar.gz", "has_sig": false, "md5_digest": "9c953495d73dcdb283360ad99d17d9a3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4888, "upload_time": "2020-04-15T07:30:20", "upload_time_iso_8601": "2020-04-15T07:30:20.458624Z", "url": "https://files.pythonhosted.org/packages/7e/b3/7b1dc047d8da4f2abd2d6db259c5414cb8edab0cdec4086731e1028c7ff9/flask_shortcut-0.2.6.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "5c5b91111226cfad2bc3023a213ffc70", "sha256": "1e0ffe092930305d2a8b62e4ad1b46a788366b6fa56a31c77ac20e5212750090"}, "downloads": -1, "filename": "flask_shortcut-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5c5b91111226cfad2bc3023a213ffc70", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 6108, "upload_time": "2020-04-15T18:12:25", "upload_time_iso_8601": "2020-04-15T18:12:25.121464Z", "url": "https://files.pythonhosted.org/packages/b4/55/c779060aebe41500ed9473e05b2cc1204e58ce09e9995be5017ab63601ee/flask_shortcut-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5db6a0824ef13412441840fc3ff36a0", "sha256": "2c48089b582f5ada8ed7ce5e2a3eb293c281bfa11988732f7d6a00a9f8ef179e"}, "downloads": -1, "filename": "flask_shortcut-0.3.0.tar.gz", "has_sig": false, "md5_digest": "a5db6a0824ef13412441840fc3ff36a0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 5885, "upload_time": "2020-04-15T18:12:25", "upload_time_iso_8601": "2020-04-15T18:12:25.960721Z", "url": "https://files.pythonhosted.org/packages/4a/76/ee0d5c97804047aa46e4f1f060573dde1a807bb5169957b916b2eb304792/flask_shortcut-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "f3b62371296590b51dc5c44e600c4da7", "sha256": "0fd6dcaadda8d93571c2c21368701d7810cae6db4a5b645a7414d3ce7278f882"}, "downloads": -1, "filename": "flask_shortcut-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f3b62371296590b51dc5c44e600c4da7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 6982, "upload_time": "2020-04-17T21:17:53", "upload_time_iso_8601": "2020-04-17T21:17:53.242894Z", "url": "https://files.pythonhosted.org/packages/93/70/a623cf9e1d00012e58c219e61632d4379c9a2e8473cbe6ee1c5e52407ff8/flask_shortcut-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2816a9259522d3e0f5cf3942b3d89f65", "sha256": "3df373b943b4009b318879dad1080b1ed0e3bd57b358c7cd9d6b7a8a41e839d0"}, "downloads": -1, "filename": "flask_shortcut-0.3.1.tar.gz", "has_sig": false, "md5_digest": "2816a9259522d3e0f5cf3942b3d89f65", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 7205, "upload_time": "2020-04-17T21:17:54", "upload_time_iso_8601": "2020-04-17T21:17:54.236851Z", "url": "https://files.pythonhosted.org/packages/f0/d3/417059052bd5aac7d18d875d870676f920a0afc781b4baf6a3813f050bef/flask_shortcut-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "ea2e1bb38257dc6a04c05ea37191a7da", "sha256": "0049bdb133cf33e477500c41ad83fdec2b4a3cec124604dd5c33d51da4800f49"}, "downloads": -1, "filename": "flask_shortcut-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ea2e1bb38257dc6a04c05ea37191a7da", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 7758, "upload_time": "2020-04-18T17:41:12", "upload_time_iso_8601": "2020-04-18T17:41:12.485240Z", "url": "https://files.pythonhosted.org/packages/c3/a6/2c3250b0678288d1da8406a088e14d8f275da780cc5b756f593b078cd80d/flask_shortcut-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b13c291189eb3eb5ea3de19836d012ca", "sha256": "c7df5ee008c2e0275c712ab6a573a1330f2217fee82af12955ff502656e05a38"}, "downloads": -1, "filename": "flask_shortcut-0.3.2.tar.gz", "has_sig": false, "md5_digest": "b13c291189eb3eb5ea3de19836d012ca", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 8319, "upload_time": "2020-04-18T17:41:13", "upload_time_iso_8601": "2020-04-18T17:41:13.351845Z", "url": "https://files.pythonhosted.org/packages/83/0a/32e769f841ff8b555327178dfdce941e13159c2de8e48bf6b002d6891bf0/flask_shortcut-0.3.2.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "63f1147e5a878f64ddff14bbe2ba5eae", "sha256": "cc22beda6bdcb09f3c6846654fbe1a25a538861918c8e86589f0b25ec1461f4d"}, "downloads": -1, "filename": "flask_shortcut-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "63f1147e5a878f64ddff14bbe2ba5eae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 8855, "upload_time": "2020-04-22T06:30:05", "upload_time_iso_8601": "2020-04-22T06:30:05.940148Z", "url": "https://files.pythonhosted.org/packages/0e/c7/8279e11321dc4f48658c0c2826624280ed5ea17014622e2655c2f86a766d/flask_shortcut-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e6d16849441cc3ee15590599ef37efc", "sha256": "343ffa461e53f7018cc26918e390a38c9a446b80c4cf67ab2970a8e4cec16814"}, "downloads": -1, "filename": "flask_shortcut-0.4.0.tar.gz", "has_sig": false, "md5_digest": "1e6d16849441cc3ee15590599ef37efc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 9615, "upload_time": "2020-04-22T06:30:07", "upload_time_iso_8601": "2020-04-22T06:30:07.242190Z", "url": "https://files.pythonhosted.org/packages/c7/85/312a93e523e93f2fcce2a53697f14e753824b73d8e766f048f32c5f84e4e/flask_shortcut-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "63f1147e5a878f64ddff14bbe2ba5eae", "sha256": "cc22beda6bdcb09f3c6846654fbe1a25a538861918c8e86589f0b25ec1461f4d"}, "downloads": -1, "filename": "flask_shortcut-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "63f1147e5a878f64ddff14bbe2ba5eae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 8855, "upload_time": "2020-04-22T06:30:05", "upload_time_iso_8601": "2020-04-22T06:30:05.940148Z", "url": "https://files.pythonhosted.org/packages/0e/c7/8279e11321dc4f48658c0c2826624280ed5ea17014622e2655c2f86a766d/flask_shortcut-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e6d16849441cc3ee15590599ef37efc", "sha256": "343ffa461e53f7018cc26918e390a38c9a446b80c4cf67ab2970a8e4cec16814"}, "downloads": -1, "filename": "flask_shortcut-0.4.0.tar.gz", "has_sig": false, "md5_digest": "1e6d16849441cc3ee15590599ef37efc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 9615, "upload_time": "2020-04-22T06:30:07", "upload_time_iso_8601": "2020-04-22T06:30:07.242190Z", "url": "https://files.pythonhosted.org/packages/c7/85/312a93e523e93f2fcce2a53697f14e753824b73d8e766f048f32c5f84e4e/flask_shortcut-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:19 2020"}