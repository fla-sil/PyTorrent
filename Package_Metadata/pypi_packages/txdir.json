{"info": {"author": "Roland Puntaier", "author_email": "roland.puntaier@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Desktop Environment :: File Managers", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Filesystems", "Topic :: Utilities"], "description": "=================================\ntxdir(1) Version 2.0.0 \\| txdir\n=================================\n\nNAME\n====\n\n**txdir** \u2014 text tree from or to file tree\n\nSYNOPSIS\n========\n\n**txdir** [<infile>\\|<indir>\\|-] [<outdir>\\|-] [<options>]\n\n\nOptions::\n\n    -h: help\n    -v: version\n    -l: flat listing\n    -f: exclude files\n    -d: include dot files/directories\n    -n: exclude file content (don't reapply such a tree as it will empty all files)\n    -m: maximum depth\n    -c: commands to create directories (from https://github.com/gcmt/mktree)\n\nFiles/dirs are ignored via .gitignore.\n\nCommand line help::\n\n\n    usage: txdir  [infile] [outdir] [-h] [-v] [-a] [-b] [-l] [-f] [-d] [-n] [-m M] [-c [C [C ...]]]\n\n    Files/dirs are ignored via .gitignore. If the directory contains unignored binary files, exclude\n    files with '-f' or ignoring content with '-n'. Text file content must not have an empty first\n    line.\n\n    positional arguments:\n      infile          If a file, it is expected to contain a text representation of a directory, flat\n                      or indented (none or - is stdin). If a directory, the text view is created with\n                      file content (unless -n).\n      outdir          None or - means printing to stdout. If the parameter is an existing file,\n                      nothing is done. If not a directory, the directory is created. The file tree is\n                      created in the directory.\n\n    optional arguments:\n      -h              Print help information.\n      -v              Print version information.\n      -a              Use ASCII instead of unicode when printint the indented view.\n      -b              Include content of binary files as base64 encoded.\n      -l              Create a flat listing instead of an indented view.\n      -f              Omit files. Only list directories.\n      -d              Include dot files/directories.\n      -n              Omit file content.\n      -m M            Maximum directory depth to scan.\n      -c [C [C ...]]  Directories described with a DSL (',' = end of token, '.' = up dir, '/' = down)\n                      `txdir - . -c 'a/b/d.c/d..a/u,v,x,g\\.x'` produces the same as `mkdir -p\n                      a/{b,c}/d a/u a/v a/x a/g.x` If not within ', use \\\\ to escape.\n\n\nDESCRIPTION\n===========\n\n- Construct a *file tree* from a text tree.\n- Construct a *text tree* from a file tree.\n\nThis allows to edit a whole file tree within one file first,\nwithout the necessity to switch files.\n\nThe text tree can also be templated\nand first run through a tool like `stpl <https://github.com/rpuntaie/stpl>`__\nbefore being processed by ``txdir`` to produce the final file tree.\nThis usage is like `cookiecutter <https://github.com/cookiecutter/cookiecutter>`__,\nonly that it has the tree definition in one file.\n\nINSTALLATION\n============\n\nTo install for user only, do::\n\n   pip install --user txdir\n\nCOMMAND USAGE\n=============\n\nWithout arguments it expects input from ``stdin``::\n\n    txdir\n\nExit this via ``CTRL+C``.\nUse no input argument only in combination with piping, or when using `-c`.\n\nUse on a directory tree where\n\n- binary text files are only in dotted directories (e.g. .git) or\n- binary files are ignored via ``.gitignore``\n\n::\n\n    txdir .\n\nproduces text output to ``stdout``, similar to ``tree``, but with content,\nunless content is suppressed with ``-n``.\n\nYou can save the output in a file and edit it::\n\n    txdir -l . > tmp.txt\n\nThe ``-l`` option makes the output flat.\nYou can drop the ``-l``, if you want ``tmp.txt`` contain an indented tree.\n\nNO directory is created, unless a root is provided as second argument::\n\n    txdir tmp.txt .\n\nThis applies to the (edited) text tree in ``tmp.txt`` on the current directory.\n\n::\n\n    txdir . again\n\nproduces the same tree below ``again``, almost like a ``cp -R . again``.\nBut internally a text tree of the file tree is created and then applied to the new location.\n\nNote, that **text file content must not have an empty first line**.\n\nEXAMPLES\n--------\n\n::\n\n   cd ~/tmp\n   txdir -c r/a/x,y,z\n      \u2514\u2500 r/\n         \u2514\u2500 a/\n            \u251c\u2500 x/\n            \u251c\u2500 y/\n            \u2514\u2500 z/\n   txdir - . -c r/a/x,y,z\n   cd r\n   tree\n      .\n      \u2514\u2500\u2500 a\n          \u251c\u2500\u2500 x\n          \u251c\u2500\u2500 y\n          \u2514\u2500\u2500 z\n   txdir .\n      \u2514\u2500 a/\n         \u251c\u2500 x/\n         \u251c\u2500 y/\n         \u2514\u2500 z/\n   txdir . > tmp.txt\n   #edit tmp.txt\n   cat tmp.txt\n      \u251c\u2500 a/\n      \u2502  \u251c\u2500 x/\n            \u251c\u2500 x.txt\n                 This is content in x.txt\n      \u2502  \u251c\u2500 y/\n            \u251c\u2500 y.txt\n                 This is content in y.txt\n   txdir tmp.txt .\n   txdir .\n      \u251c\u2500 a/\n      \u2502  \u251c\u2500 x/\n      \u2502  \u2502  \u2514\u2500 x.txt\n                  This is content in x.txt\n      \u2502  \u251c\u2500 y/\n      \u2502  \u2502  \u2514\u2500 y.txt\n                  This is content in y.txt\n      \u2502  \u2514\u2500 z/\n      \u2514\u2500 tmp.txt\n            \u251c\u2500 a/\n            \u2502  \u251c\u2500 x/\n                  \u251c\u2500 x.txt\n                       This is content in x.txt\n            \u2502  \u251c\u2500 y/\n                  \u251c\u2500 y.txt\n                       This is content in y.txt\n   #Note, that what is below tmp.txt is content of tmp.txt, not actual directories.\n   #`txdir . | txdir - .` does not create the same tree below ``tmp.txt``,\n   #because tmp.txt exists as file and not as directory.\n   txdir a b\n   txdir . > tmp.txt\n   #edit tmp.txt adding {{txt}} and removing the tmp.txt line (else tmp.txt is emptied when applying)\n   cat tmp.txt\n      \u251c\u2500 a/\n      \u2502  \u251c\u2500 x/\n      \u2502  \u2502  \u2514\u2500 x.txt\n      \u2502  \u2502        {{txt}} x.txt\n      \u2502  \u251c\u2500 y/\n      \u2502  \u2502  \u2514\u2500 y.txt\n      \u2502  \u2502        {{txt}} y.txt\n      \u2502  \u2514\u2500 z/\n      \u251c\u2500 b/\n      \u2502  \u251c\u2500 x/\n      \u2502  \u2502  \u2514\u2500 x.txt\n      \u2502  \u2502        {{txt}} x.txt\n      \u2502  \u251c\u2500 y/\n      \u2502  \u2502  \u2514\u2500 y.txt\n      \u2502  \u2502        {{txt}} y.txt\n      \u2502  \u2514\u2500 z/\n   stpl tmp.txt - 'txt=\"Greeting from\"' | txdir - .\n   rm tmp.txt\n   txdir . -l\n      a/x/x.txt\n         Greeting from x.txt\n      a/y/y.txt\n         Greeting from y.txt\n      a/z/\n      b/x/x.txt\n         Greeting from x.txt\n      b/y/y.txt\n         Greeting from y.txt\n      b/z/\n   txdir . -l | sed -e \"s/ \\(.\\)\\.txt/ \\1/g\" | txdir - .\n   txdir . -l\n      a/x/x.txt\n         Greeting from x\n      a/y/y.txt\n         Greeting from y\n      a/z/\n      b/x/x.txt\n         Greeting from x\n      b/y/y.txt\n         Greeting from y\n      b/z/\n\nAPI USAGE\n=========\n\n``txtdir`` is a python module.\n\nNaming:\n\n- ``view`` refers to a text tree view\n- ``flat`` is a flat tree listing.\n- ``tree`` is the actual file tree\n\nFunctions:\n\n- ``set_ascii``, ``set_utf8``\n- ``view_to_tree``\n- ``tree_to_view``\n- ``flat_to_tree``\n- ``tree_to_flat``\n- ``to_tree`` decides whether ``flat_to_tree`` or ``view_to_tree`` should be used\n- ``main`` makes the command line functionality accessible to python\n\nClass:\n\n``TxDir`` can hold a file tree in memory. Its ``content`` represents\n\n- *directory* if *list* of other ``TxDir`` instances\n- *link* if *str* with path relative to the location as link target\n- *file* if *tuple* of text file lines\n\n``TxDir`` methods::\n\n   __init__(self, name='', parent=None, content=None)\n   __iter__(self) #leaves only\n   __lt__(self,other) #by name\n   __str__(self)\n   __repr__(self)\n   __call__ = cd\n   __truediv__(self, other) #changes and returns root\n   root(self)\n   path(self)\n   mkdir = cd #with content=[]\n   cd(self,apath,content=None) #cd or make node if content!=None\n   isfile(self)\n   isdir(self)\n   islink(self)\n   view(self)\n   flat(self)\n   create(self)\n\n\nstatic::\n\n    fromcmds(descs)\n    fromview(viewstr)\n    fromflat(flatstr)\n    fromfs(root)\n\nEXAMPLES\n--------\n\n::\n\n   >>> import os\n   >>> from os.path import expanduser\n   >>> from shutil import rmtree\n   >>> import sys\n   >>> from txdir import *\n\n   >>> os.chdir(expanduser('~/tmp'))\n\n   >>> t = t.fromcmds(['r/a'])\n   >>> TxDir('x.txt',t('r/a'),('Text in x',))\n   >>> t.view()\n   \u2514\u2500 r/\n      \u2514\u2500 a/\n         \u2514\u2500 x.txt\n               Text in x\n   >>> t.flat()\n   r/a/x.txt\n      Text in x\n\n   >>> rmtree('r',ignore_errors=True)\n   >>> t.create()\n\n   >>> t = TxDir.fromfs('r')\n   >>> t.view()\n   \u2514\u2500 a/\n      \u2514\u2500 x.txt\n            Text in x\n\n   >>> rmtree('r',ignore_errors=True)\n   >>> r = TxDir.fromcmds(['r'])\n   >>> r = r('r')/t('a') #root is returned\n   >>> t('a') == r('r/a') #r and t are roots\n   True\n   >>> r.flat()\n   r/a/x.txt\n      Text in x\n\n\nLicense\n-------\n\nMIT\n\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rpuntaie/txdir", "keywords": "text tree directory file content template", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "txdir", "package_url": "https://pypi.org/project/txdir/", "platform": "", "project_url": "https://pypi.org/project/txdir/", "project_urls": {"Homepage": "https://github.com/rpuntaie/txdir"}, "release_url": "https://pypi.org/project/txdir/2.0.0/", "requires_dist": ["pathspec"], "requires_python": ">=3.6", "summary": "Creating file tree from text tree and vice versa", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"name\">\n<h2>NAME</h2>\n<p><strong>txdir</strong> \u2014 text tree from or to file tree</p>\n</div>\n<div id=\"synopsis\">\n<h2>SYNOPSIS</h2>\n<p><strong>txdir</strong> [&lt;infile&gt;|&lt;indir&gt;|-] [&lt;outdir&gt;|-] [&lt;options&gt;]</p>\n<p>Options:</p>\n<pre>-h: help\n-v: version\n-l: flat listing\n-f: exclude files\n-d: include dot files/directories\n-n: exclude file content (don't reapply such a tree as it will empty all files)\n-m: maximum depth\n-c: commands to create directories (from https://github.com/gcmt/mktree)\n</pre>\n<p>Files/dirs are ignored via .gitignore.</p>\n<p>Command line help:</p>\n<pre>usage: txdir  [infile] [outdir] [-h] [-v] [-a] [-b] [-l] [-f] [-d] [-n] [-m M] [-c [C [C ...]]]\n\nFiles/dirs are ignored via .gitignore. If the directory contains unignored binary files, exclude\nfiles with '-f' or ignoring content with '-n'. Text file content must not have an empty first\nline.\n\npositional arguments:\n  infile          If a file, it is expected to contain a text representation of a directory, flat\n                  or indented (none or - is stdin). If a directory, the text view is created with\n                  file content (unless -n).\n  outdir          None or - means printing to stdout. If the parameter is an existing file,\n                  nothing is done. If not a directory, the directory is created. The file tree is\n                  created in the directory.\n\noptional arguments:\n  -h              Print help information.\n  -v              Print version information.\n  -a              Use ASCII instead of unicode when printint the indented view.\n  -b              Include content of binary files as base64 encoded.\n  -l              Create a flat listing instead of an indented view.\n  -f              Omit files. Only list directories.\n  -d              Include dot files/directories.\n  -n              Omit file content.\n  -m M            Maximum directory depth to scan.\n  -c [C [C ...]]  Directories described with a DSL (',' = end of token, '.' = up dir, '/' = down)\n                  `txdir - . -c 'a/b/d.c/d..a/u,v,x,g\\.x'` produces the same as `mkdir -p\n                  a/{b,c}/d a/u a/v a/x a/g.x` If not within ', use \\\\ to escape.\n</pre>\n</div>\n<div id=\"description\">\n<h2>DESCRIPTION</h2>\n<ul>\n<li>Construct a <em>file tree</em> from a text tree.</li>\n<li>Construct a <em>text tree</em> from a file tree.</li>\n</ul>\n<p>This allows to edit a whole file tree within one file first,\nwithout the necessity to switch files.</p>\n<p>The text tree can also be templated\nand first run through a tool like <a href=\"https://github.com/rpuntaie/stpl\" rel=\"nofollow\">stpl</a>\nbefore being processed by <tt>txdir</tt> to produce the final file tree.\nThis usage is like <a href=\"https://github.com/cookiecutter/cookiecutter\" rel=\"nofollow\">cookiecutter</a>,\nonly that it has the tree definition in one file.</p>\n</div>\n<div id=\"installation\">\n<h2>INSTALLATION</h2>\n<p>To install for user only, do:</p>\n<pre>pip install --user txdir\n</pre>\n</div>\n<div id=\"command-usage\">\n<h2>COMMAND USAGE</h2>\n<p>Without arguments it expects input from <tt>stdin</tt>:</p>\n<pre>txdir\n</pre>\n<p>Exit this via <tt>CTRL+C</tt>.\nUse no input argument only in combination with piping, or when using <cite>-c</cite>.</p>\n<p>Use on a directory tree where</p>\n<ul>\n<li>binary text files are only in dotted directories (e.g. .git) or</li>\n<li>binary files are ignored via <tt>.gitignore</tt></li>\n</ul>\n<pre>txdir .\n</pre>\n<p>produces text output to <tt>stdout</tt>, similar to <tt>tree</tt>, but with content,\nunless content is suppressed with <tt><span class=\"pre\">-n</span></tt>.</p>\n<p>You can save the output in a file and edit it:</p>\n<pre>txdir -l . &gt; tmp.txt\n</pre>\n<p>The <tt><span class=\"pre\">-l</span></tt> option makes the output flat.\nYou can drop the <tt><span class=\"pre\">-l</span></tt>, if you want <tt>tmp.txt</tt> contain an indented tree.</p>\n<p>NO directory is created, unless a root is provided as second argument:</p>\n<pre>txdir tmp.txt .\n</pre>\n<p>This applies to the (edited) text tree in <tt>tmp.txt</tt> on the current directory.</p>\n<pre>txdir . again\n</pre>\n<p>produces the same tree below <tt>again</tt>, almost like a <tt>cp <span class=\"pre\">-R</span> . again</tt>.\nBut internally a text tree of the file tree is created and then applied to the new location.</p>\n<p>Note, that <strong>text file content must not have an empty first line</strong>.</p>\n<div id=\"examples\">\n<h3>EXAMPLES</h3>\n<pre>cd ~/tmp\ntxdir -c r/a/x,y,z\n   \u2514\u2500 r/\n      \u2514\u2500 a/\n         \u251c\u2500 x/\n         \u251c\u2500 y/\n         \u2514\u2500 z/\ntxdir - . -c r/a/x,y,z\ncd r\ntree\n   .\n   \u2514\u2500\u2500 a\n       \u251c\u2500\u2500 x\n       \u251c\u2500\u2500 y\n       \u2514\u2500\u2500 z\ntxdir .\n   \u2514\u2500 a/\n      \u251c\u2500 x/\n      \u251c\u2500 y/\n      \u2514\u2500 z/\ntxdir . &gt; tmp.txt\n#edit tmp.txt\ncat tmp.txt\n   \u251c\u2500 a/\n   \u2502  \u251c\u2500 x/\n         \u251c\u2500 x.txt\n              This is content in x.txt\n   \u2502  \u251c\u2500 y/\n         \u251c\u2500 y.txt\n              This is content in y.txt\ntxdir tmp.txt .\ntxdir .\n   \u251c\u2500 a/\n   \u2502  \u251c\u2500 x/\n   \u2502  \u2502  \u2514\u2500 x.txt\n               This is content in x.txt\n   \u2502  \u251c\u2500 y/\n   \u2502  \u2502  \u2514\u2500 y.txt\n               This is content in y.txt\n   \u2502  \u2514\u2500 z/\n   \u2514\u2500 tmp.txt\n         \u251c\u2500 a/\n         \u2502  \u251c\u2500 x/\n               \u251c\u2500 x.txt\n                    This is content in x.txt\n         \u2502  \u251c\u2500 y/\n               \u251c\u2500 y.txt\n                    This is content in y.txt\n#Note, that what is below tmp.txt is content of tmp.txt, not actual directories.\n#`txdir . | txdir - .` does not create the same tree below ``tmp.txt``,\n#because tmp.txt exists as file and not as directory.\ntxdir a b\ntxdir . &gt; tmp.txt\n#edit tmp.txt adding {{txt}} and removing the tmp.txt line (else tmp.txt is emptied when applying)\ncat tmp.txt\n   \u251c\u2500 a/\n   \u2502  \u251c\u2500 x/\n   \u2502  \u2502  \u2514\u2500 x.txt\n   \u2502  \u2502        {{txt}} x.txt\n   \u2502  \u251c\u2500 y/\n   \u2502  \u2502  \u2514\u2500 y.txt\n   \u2502  \u2502        {{txt}} y.txt\n   \u2502  \u2514\u2500 z/\n   \u251c\u2500 b/\n   \u2502  \u251c\u2500 x/\n   \u2502  \u2502  \u2514\u2500 x.txt\n   \u2502  \u2502        {{txt}} x.txt\n   \u2502  \u251c\u2500 y/\n   \u2502  \u2502  \u2514\u2500 y.txt\n   \u2502  \u2502        {{txt}} y.txt\n   \u2502  \u2514\u2500 z/\nstpl tmp.txt - 'txt=\"Greeting from\"' | txdir - .\nrm tmp.txt\ntxdir . -l\n   a/x/x.txt\n      Greeting from x.txt\n   a/y/y.txt\n      Greeting from y.txt\n   a/z/\n   b/x/x.txt\n      Greeting from x.txt\n   b/y/y.txt\n      Greeting from y.txt\n   b/z/\ntxdir . -l | sed -e \"s/ \\(.\\)\\.txt/ \\1/g\" | txdir - .\ntxdir . -l\n   a/x/x.txt\n      Greeting from x\n   a/y/y.txt\n      Greeting from y\n   a/z/\n   b/x/x.txt\n      Greeting from x\n   b/y/y.txt\n      Greeting from y\n   b/z/\n</pre>\n</div>\n</div>\n<div id=\"api-usage\">\n<h2>API USAGE</h2>\n<p><tt>txtdir</tt> is a python module.</p>\n<p>Naming:</p>\n<ul>\n<li><tt>view</tt> refers to a text tree view</li>\n<li><tt>flat</tt> is a flat tree listing.</li>\n<li><tt>tree</tt> is the actual file tree</li>\n</ul>\n<p>Functions:</p>\n<ul>\n<li><tt>set_ascii</tt>, <tt>set_utf8</tt></li>\n<li><tt>view_to_tree</tt></li>\n<li><tt>tree_to_view</tt></li>\n<li><tt>flat_to_tree</tt></li>\n<li><tt>tree_to_flat</tt></li>\n<li><tt>to_tree</tt> decides whether <tt>flat_to_tree</tt> or <tt>view_to_tree</tt> should be used</li>\n<li><tt>main</tt> makes the command line functionality accessible to python</li>\n</ul>\n<p>Class:</p>\n<p><tt>TxDir</tt> can hold a file tree in memory. Its <tt>content</tt> represents</p>\n<ul>\n<li><em>directory</em> if <em>list</em> of other <tt>TxDir</tt> instances</li>\n<li><em>link</em> if <em>str</em> with path relative to the location as link target</li>\n<li><em>file</em> if <em>tuple</em> of text file lines</li>\n</ul>\n<p><tt>TxDir</tt> methods:</p>\n<pre>__init__(self, name='', parent=None, content=None)\n__iter__(self) #leaves only\n__lt__(self,other) #by name\n__str__(self)\n__repr__(self)\n__call__ = cd\n__truediv__(self, other) #changes and returns root\nroot(self)\npath(self)\nmkdir = cd #with content=[]\ncd(self,apath,content=None) #cd or make node if content!=None\nisfile(self)\nisdir(self)\nislink(self)\nview(self)\nflat(self)\ncreate(self)\n</pre>\n<p>static:</p>\n<pre>fromcmds(descs)\nfromview(viewstr)\nfromflat(flatstr)\nfromfs(root)\n</pre>\n<div id=\"id1\">\n<h3>EXAMPLES</h3>\n<pre>&gt;&gt;&gt; import os\n&gt;&gt;&gt; from os.path import expanduser\n&gt;&gt;&gt; from shutil import rmtree\n&gt;&gt;&gt; import sys\n&gt;&gt;&gt; from txdir import *\n\n&gt;&gt;&gt; os.chdir(expanduser('~/tmp'))\n\n&gt;&gt;&gt; t = t.fromcmds(['r/a'])\n&gt;&gt;&gt; TxDir('x.txt',t('r/a'),('Text in x',))\n&gt;&gt;&gt; t.view()\n\u2514\u2500 r/\n   \u2514\u2500 a/\n      \u2514\u2500 x.txt\n            Text in x\n&gt;&gt;&gt; t.flat()\nr/a/x.txt\n   Text in x\n\n&gt;&gt;&gt; rmtree('r',ignore_errors=True)\n&gt;&gt;&gt; t.create()\n\n&gt;&gt;&gt; t = TxDir.fromfs('r')\n&gt;&gt;&gt; t.view()\n\u2514\u2500 a/\n   \u2514\u2500 x.txt\n         Text in x\n\n&gt;&gt;&gt; rmtree('r',ignore_errors=True)\n&gt;&gt;&gt; r = TxDir.fromcmds(['r'])\n&gt;&gt;&gt; r = r('r')/t('a') #root is returned\n&gt;&gt;&gt; t('a') == r('r/a') #r and t are roots\nTrue\n&gt;&gt;&gt; r.flat()\nr/a/x.txt\n   Text in x\n</pre>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>MIT</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6171588, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "9cfa696a34e41c528abfc14d35c4b58a", "sha256": "ad21748d2989d29b7bcf66abe2e6f37672677d1b87b9a5b24cba80c1cc1f1dc6"}, "downloads": -1, "filename": "txdir-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9cfa696a34e41c528abfc14d35c4b58a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11913, "upload_time": "2019-11-18T18:07:48", "upload_time_iso_8601": "2019-11-18T18:07:48.114788Z", "url": "https://files.pythonhosted.org/packages/cc/50/9c58415e4e940f02e073cd2d4d88b980122a185780c4ac5cbd4b94dd8168/txdir-1.0.0-py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "00207e83703d9b00a13567ddf8c299ea", "sha256": "24721bb4dd1bbc16569568aa9f5a28f58038b7ccfbe4c3067dd8b3d978a954ad"}, "downloads": -1, "filename": "txdir-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "00207e83703d9b00a13567ddf8c299ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11910, "upload_time": "2019-11-18T18:13:40", "upload_time_iso_8601": "2019-11-18T18:13:40.201256Z", "url": "https://files.pythonhosted.org/packages/9b/01/90e2299fac25fb188ae3df260fa28dc8fae825b2807417f6ef02c8d7c129/txdir-1.0.1-py3-none-any.whl", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "0343e66a7c43c7422a4a8344b98717f9", "sha256": "d58a53e641d980983766b9d14639b6c8b9c83eb4611dae64f755b0549b02d6f4"}, "downloads": -1, "filename": "txdir-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0343e66a7c43c7422a4a8344b98717f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13260, "upload_time": "2019-11-18T22:55:35", "upload_time_iso_8601": "2019-11-18T22:55:35.589954Z", "url": "https://files.pythonhosted.org/packages/67/3c/5fae4da4aae95b2ff40b4769617de3085ba30a1b8c6568da44c640f89bf9/txdir-1.0.2-py3-none-any.whl", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "ae06bab82f07a4b3359ef5364df21ffb", "sha256": "6c160933d37b065e420086d364b5948de5331891461a12b9cf724554f1ca8f1d"}, "downloads": -1, "filename": "txdir-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ae06bab82f07a4b3359ef5364df21ffb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13571, "upload_time": "2019-11-19T18:56:54", "upload_time_iso_8601": "2019-11-19T18:56:54.996643Z", "url": "https://files.pythonhosted.org/packages/f0/34/3e531138189ba4f2dda8ececd298ccee05bd155ed3b396f69e432c0c517b/txdir-1.1.0-py3-none-any.whl", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "6dae6300acab75e5e2a3212ded4d8d44", "sha256": "4758720116b73a6b6092d420162358c770358554e624da0c2e351af864230e3f"}, "downloads": -1, "filename": "txdir-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6dae6300acab75e5e2a3212ded4d8d44", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16399, "upload_time": "2019-11-20T10:55:26", "upload_time_iso_8601": "2019-11-20T10:55:26.048454Z", "url": "https://files.pythonhosted.org/packages/ca/96/01bcd73844dcf935256a47ade1216be8b8430b8a9dda789e7e13dbdf1cb9/txdir-1.1.1-py3-none-any.whl", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "90ef3e3fc10643e20464a48a6d3595ce", "sha256": "3219e6e119c843054accb1197c439ecb057cc5eb9d7afe88392b2557f8d1aaa7"}, "downloads": -1, "filename": "txdir-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "90ef3e3fc10643e20464a48a6d3595ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16415, "upload_time": "2019-11-20T21:35:20", "upload_time_iso_8601": "2019-11-20T21:35:20.946810Z", "url": "https://files.pythonhosted.org/packages/14/9b/8a3f5f120dabbb222458c75e110f359b8ccac162356757cfad104e2018ac/txdir-2.0.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "90ef3e3fc10643e20464a48a6d3595ce", "sha256": "3219e6e119c843054accb1197c439ecb057cc5eb9d7afe88392b2557f8d1aaa7"}, "downloads": -1, "filename": "txdir-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "90ef3e3fc10643e20464a48a6d3595ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16415, "upload_time": "2019-11-20T21:35:20", "upload_time_iso_8601": "2019-11-20T21:35:20.946810Z", "url": "https://files.pythonhosted.org/packages/14/9b/8a3f5f120dabbb222458c75e110f359b8ccac162356757cfad104e2018ac/txdir-2.0.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:43:16 2020"}