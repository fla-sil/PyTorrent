{"info": {"author": "Sidney Radcliffe", "author_email": "sidneyradcliffe@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# PixHist\n\n\n[![](https://github.com/sradc/PixHist/workflows/Python%20package/badge.svg)](https://github.com/sradc/PixHist/commits/)\n\n\n`pip install pixhist`\n\n\n*PixHist - pixel histogram.*\n\n\nDependencies: [Numba](http://numba.pydata.org/), [NumPy](https://numpy.org/), and [Matplotlib](https://matplotlib.org/) to use `pixhist.rendering`.\n\n\n```python\nimport matplotlib.pyplot as plt\nfrom numba import njit\nimport numpy as np\nimport pixhist\nimport pixhist.rendering\n```\n\n## Example 1: create a pixhist from a generator\n\nThe generator should have no arguments, and return the values `x, y`:\n\n`generator() -> x, y`\n\nIt should be compiled with Numba's `njit` / `jit`.\n\n\n```python\n@njit\ndef gen():  \n    \"\"\"A Clifford Attractor\"\"\"\n    x, y = 0, 0\n    while True:\n        yield x, y\n        x_ = np.sin(2.27 * y) + 0.66 * np.cos(2.27 * x)\n        y_ = np.sin(1.13 * x) + 2.16 * np.cos(1.13 * y)\n        x, y = x_, y_\n\nr = pixhist.estimate_range(gen, n_iter=100_000)\nr = pixhist.scale_range(r, 1.2)\n\nN_ITER = 1000_000\nW = 500\nH = 400\nhist = pixhist.from_gen(gen, N_ITER, W, H, range=r, make_xy_proportional=True, log=True)\n\npixhist.rendering.plot(hist)\nplt.show()\n```\n\n\n![png](https://raw.githubusercontent.com/sradc/PixHist/master/assets/output_3_0.png)\n\n\n## Example 2: using a generator factory\n\nCreate a 'generator factory' to get around the fact that the generator should have no arguments.\n\n\n```python\ndef get_clifford_generator(a, b, c, d, x_i=0, y_i=0):\n    @njit\n    def gen():\n        x, y = x_i, y_i\n        while True:\n            yield x, y\n            x_ = np.sin(a * y) + c * np.cos(a * x)\n            y_ = np.sin(b * x) + d * np.cos(b * y)\n            x, y = x_, y_\n    return gen\n\nparams = [1.8, -1.4, -1.5, -0.71]\ngen = get_clifford_generator(*params)\nr = pixhist.estimate_range(gen, n_iter=100_000)\n\nN_ITER = 1000_000\nW, H = 500, 500\nhist = pixhist.from_gen(gen, N_ITER, W, H, range=r, make_xy_proportional=False, log=True)\n\npixhist.rendering.plot(hist, cmap='twilight')\nplt.show()\n```\n\n\n![png](https://raw.githubusercontent.com/sradc/PixHist/master/assets/output_5_0.png)\n\n\n## Example 3: pixhist from arrays\n\nCreate a pixel histogram from two arrays of the same length.\n\n\n```python\nx_vals = np.random.random(100_000)\ny_vals = np.sin(x_vals)**2 * np.random.random(100_000)\n\nW, H = 200, 300\nhist = pixhist.from_arrays(x_vals, y_vals, W, H, make_xy_proportional=True, log=True)\n\npixhist.rendering.plot(hist, cmap='nipy_spectral')\nplt.show()\n```\n\n\n![png](https://raw.githubusercontent.com/sradc/PixHist/master/assets/output_7_0.png)\n\n\n## Example 4: the advantage of using generators\n\nYou can have a large number of iterations, since you don't need to store the arrays `x_vals, y_vals` in memory. (Time becomes the limiting factor).\n\n\n```python\nfrom magic_timer import MagicTimer\n\nparams = [1.8, -1.4, -1.5, -0.71]\ngen = get_clifford_generator(*params)\n\nr = pixhist.estimate_range(gen, n_iter=100_000)\n\nN_ITER = 100_000_000\nW, H = 500, 500\n\nt = MagicTimer()\nhist = pixhist.from_gen(gen, N_ITER, W, H, range=r, make_xy_proportional=False, log=True)\nprint('Time elapsed:', t)\n\npixhist.rendering.plot(hist, cmap='twilight')\nplt.show()\n```\n\n    Time elapsed: 8.4 seconds\n\n\n\n![png](https://raw.githubusercontent.com/sradc/PixHist/master/assets/output_9_1.png)\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sradc/PixHist", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pixhist", "package_url": "https://pypi.org/project/pixhist/", "platform": "", "project_url": "https://pypi.org/project/pixhist/", "project_urls": {"Homepage": "https://github.com/sradc/PixHist"}, "release_url": "https://pypi.org/project/pixhist/0.0.2/", "requires_dist": ["numpy", "numba", "matplotlib ; extra == 'pixhist.rendering'"], "requires_python": ">=3.6", "summary": "Pixel histograms.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PixHist</h1>\n<p><a href=\"https://github.com/sradc/PixHist/commits/\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8971d6574c4dfac7feb9b6b1a5785714d0377d75/68747470733a2f2f6769746875622e636f6d2f73726164632f506978486973742f776f726b666c6f77732f507974686f6e2532307061636b6167652f62616467652e737667\"></a></p>\n<p><code>pip install pixhist</code></p>\n<p><em>PixHist - pixel histogram.</em></p>\n<p>Dependencies: <a href=\"http://numba.pydata.org/\" rel=\"nofollow\">Numba</a>, <a href=\"https://numpy.org/\" rel=\"nofollow\">NumPy</a>, and <a href=\"https://matplotlib.org/\" rel=\"nofollow\">Matplotlib</a> to use <code>pixhist.rendering</code>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">numba</span> <span class=\"kn\">import</span> <span class=\"n\">njit</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pixhist</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pixhist.rendering</span>\n</pre>\n<h2>Example 1: create a pixhist from a generator</h2>\n<p>The generator should have no arguments, and return the values <code>x, y</code>:</p>\n<p><code>generator() -&gt; x, y</code></p>\n<p>It should be compiled with Numba's <code>njit</code> / <code>jit</code>.</p>\n<pre><span class=\"nd\">@njit</span>\n<span class=\"k\">def</span> <span class=\"nf\">gen</span><span class=\"p\">():</span>  \n    <span class=\"sd\">\"\"\"A Clifford Attractor\"\"\"</span>\n    <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"k\">yield</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span>\n        <span class=\"n\">x_</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"mf\">2.27</span> <span class=\"o\">*</span> <span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mf\">0.66</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"mf\">2.27</span> <span class=\"o\">*</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n        <span class=\"n\">y_</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"mf\">1.13</span> <span class=\"o\">*</span> <span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mf\">2.16</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"mf\">1.13</span> <span class=\"o\">*</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n        <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">x_</span><span class=\"p\">,</span> <span class=\"n\">y_</span>\n\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">pixhist</span><span class=\"o\">.</span><span class=\"n\">estimate_range</span><span class=\"p\">(</span><span class=\"n\">gen</span><span class=\"p\">,</span> <span class=\"n\">n_iter</span><span class=\"o\">=</span><span class=\"mi\">100_000</span><span class=\"p\">)</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">pixhist</span><span class=\"o\">.</span><span class=\"n\">scale_range</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"mf\">1.2</span><span class=\"p\">)</span>\n\n<span class=\"n\">N_ITER</span> <span class=\"o\">=</span> <span class=\"mi\">1000_000</span>\n<span class=\"n\">W</span> <span class=\"o\">=</span> <span class=\"mi\">500</span>\n<span class=\"n\">H</span> <span class=\"o\">=</span> <span class=\"mi\">400</span>\n<span class=\"n\">hist</span> <span class=\"o\">=</span> <span class=\"n\">pixhist</span><span class=\"o\">.</span><span class=\"n\">from_gen</span><span class=\"p\">(</span><span class=\"n\">gen</span><span class=\"p\">,</span> <span class=\"n\">N_ITER</span><span class=\"p\">,</span> <span class=\"n\">W</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"nb\">range</span><span class=\"o\">=</span><span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">make_xy_proportional</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">log</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">pixhist</span><span class=\"o\">.</span><span class=\"n\">rendering</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">hist</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/131b57480c7506fe18d8b4516315d6a2f9db00e1/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f73726164632f506978486973742f6d61737465722f6173736574732f6f75747075745f335f302e706e67\"></p>\n<h2>Example 2: using a generator factory</h2>\n<p>Create a 'generator factory' to get around the fact that the generator should have no arguments.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">get_clifford_generator</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"p\">,</span> <span class=\"n\">x_i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">y_i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n    <span class=\"nd\">@njit</span>\n    <span class=\"k\">def</span> <span class=\"nf\">gen</span><span class=\"p\">():</span>\n        <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">x_i</span><span class=\"p\">,</span> <span class=\"n\">y_i</span>\n        <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n            <span class=\"k\">yield</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span>\n            <span class=\"n\">x_</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">a</span> <span class=\"o\">*</span> <span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">c</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">a</span> <span class=\"o\">*</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n            <span class=\"n\">y_</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">b</span> <span class=\"o\">*</span> <span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">d</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">b</span> <span class=\"o\">*</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n            <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">x_</span><span class=\"p\">,</span> <span class=\"n\">y_</span>\n    <span class=\"k\">return</span> <span class=\"n\">gen</span>\n\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">1.8</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.4</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.5</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.71</span><span class=\"p\">]</span>\n<span class=\"n\">gen</span> <span class=\"o\">=</span> <span class=\"n\">get_clifford_generator</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">params</span><span class=\"p\">)</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">pixhist</span><span class=\"o\">.</span><span class=\"n\">estimate_range</span><span class=\"p\">(</span><span class=\"n\">gen</span><span class=\"p\">,</span> <span class=\"n\">n_iter</span><span class=\"o\">=</span><span class=\"mi\">100_000</span><span class=\"p\">)</span>\n\n<span class=\"n\">N_ITER</span> <span class=\"o\">=</span> <span class=\"mi\">1000_000</span>\n<span class=\"n\">W</span><span class=\"p\">,</span> <span class=\"n\">H</span> <span class=\"o\">=</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mi\">500</span>\n<span class=\"n\">hist</span> <span class=\"o\">=</span> <span class=\"n\">pixhist</span><span class=\"o\">.</span><span class=\"n\">from_gen</span><span class=\"p\">(</span><span class=\"n\">gen</span><span class=\"p\">,</span> <span class=\"n\">N_ITER</span><span class=\"p\">,</span> <span class=\"n\">W</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"nb\">range</span><span class=\"o\">=</span><span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">make_xy_proportional</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">log</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">pixhist</span><span class=\"o\">.</span><span class=\"n\">rendering</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">hist</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">'twilight'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6e7238d8cb3410b8675b762a1ec9e546f861aaba/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f73726164632f506978486973742f6d61737465722f6173736574732f6f75747075745f355f302e706e67\"></p>\n<h2>Example 3: pixhist from arrays</h2>\n<p>Create a pixel histogram from two arrays of the same length.</p>\n<pre><span class=\"n\">x_vals</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">(</span><span class=\"mi\">100_000</span><span class=\"p\">)</span>\n<span class=\"n\">y_vals</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">x_vals</span><span class=\"p\">)</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">(</span><span class=\"mi\">100_000</span><span class=\"p\">)</span>\n\n<span class=\"n\">W</span><span class=\"p\">,</span> <span class=\"n\">H</span> <span class=\"o\">=</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">300</span>\n<span class=\"n\">hist</span> <span class=\"o\">=</span> <span class=\"n\">pixhist</span><span class=\"o\">.</span><span class=\"n\">from_arrays</span><span class=\"p\">(</span><span class=\"n\">x_vals</span><span class=\"p\">,</span> <span class=\"n\">y_vals</span><span class=\"p\">,</span> <span class=\"n\">W</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">make_xy_proportional</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">log</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">pixhist</span><span class=\"o\">.</span><span class=\"n\">rendering</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">hist</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">'nipy_spectral'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f46c1b8b3282442a8d79212297822cabbe1b1832/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f73726164632f506978486973742f6d61737465722f6173736574732f6f75747075745f375f302e706e67\"></p>\n<h2>Example 4: the advantage of using generators</h2>\n<p>You can have a large number of iterations, since you don't need to store the arrays <code>x_vals, y_vals</code> in memory. (Time becomes the limiting factor).</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">magic_timer</span> <span class=\"kn\">import</span> <span class=\"n\">MagicTimer</span>\n\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">1.8</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.4</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.5</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.71</span><span class=\"p\">]</span>\n<span class=\"n\">gen</span> <span class=\"o\">=</span> <span class=\"n\">get_clifford_generator</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">params</span><span class=\"p\">)</span>\n\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">pixhist</span><span class=\"o\">.</span><span class=\"n\">estimate_range</span><span class=\"p\">(</span><span class=\"n\">gen</span><span class=\"p\">,</span> <span class=\"n\">n_iter</span><span class=\"o\">=</span><span class=\"mi\">100_000</span><span class=\"p\">)</span>\n\n<span class=\"n\">N_ITER</span> <span class=\"o\">=</span> <span class=\"mi\">100_000_000</span>\n<span class=\"n\">W</span><span class=\"p\">,</span> <span class=\"n\">H</span> <span class=\"o\">=</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"mi\">500</span>\n\n<span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">MagicTimer</span><span class=\"p\">()</span>\n<span class=\"n\">hist</span> <span class=\"o\">=</span> <span class=\"n\">pixhist</span><span class=\"o\">.</span><span class=\"n\">from_gen</span><span class=\"p\">(</span><span class=\"n\">gen</span><span class=\"p\">,</span> <span class=\"n\">N_ITER</span><span class=\"p\">,</span> <span class=\"n\">W</span><span class=\"p\">,</span> <span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"nb\">range</span><span class=\"o\">=</span><span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">make_xy_proportional</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">log</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Time elapsed:'</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">)</span>\n\n<span class=\"n\">pixhist</span><span class=\"o\">.</span><span class=\"n\">rendering</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">hist</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">'twilight'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<pre><code>Time elapsed: 8.4 seconds\n</code></pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fc092ec381e9f93327d5e3368b92b71843724d37/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f73726164632f506978486973742f6d61737465722f6173736574732f6f75747075745f395f312e706e67\"></p>\n\n          </div>"}, "last_serial": 6984902, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "5551b9b4a641e8104bd7f0e9b0390224", "sha256": "7a6e3d09d31225bd77ae1efa5acaefb01fac50a97b94c546b0dfca5c119e914f"}, "downloads": -1, "filename": "pixhist-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5551b9b4a641e8104bd7f0e9b0390224", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8756, "upload_time": "2020-04-09T10:31:36", "upload_time_iso_8601": "2020-04-09T10:31:36.826430Z", "url": "https://files.pythonhosted.org/packages/bd/56/e64666af0caa75e44723dc7b66b84784af065f588bf9f180033fc16d0de3/pixhist-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "adb4cb763747c641c9060bd4c71276b7", "sha256": "6229d8ae9e226ef2fbf7482e0b2367f51c3d92e981ffb0215af5078765df96a8"}, "downloads": -1, "filename": "pixhist-0.0.2.tar.gz", "has_sig": false, "md5_digest": "adb4cb763747c641c9060bd4c71276b7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6918, "upload_time": "2020-04-09T10:31:38", "upload_time_iso_8601": "2020-04-09T10:31:38.324460Z", "url": "https://files.pythonhosted.org/packages/58/2b/6a6b01fb51c3b3017f3a20467a150c9bfaecd34322ace3c2f9ab7e107247/pixhist-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5551b9b4a641e8104bd7f0e9b0390224", "sha256": "7a6e3d09d31225bd77ae1efa5acaefb01fac50a97b94c546b0dfca5c119e914f"}, "downloads": -1, "filename": "pixhist-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5551b9b4a641e8104bd7f0e9b0390224", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8756, "upload_time": "2020-04-09T10:31:36", "upload_time_iso_8601": "2020-04-09T10:31:36.826430Z", "url": "https://files.pythonhosted.org/packages/bd/56/e64666af0caa75e44723dc7b66b84784af065f588bf9f180033fc16d0de3/pixhist-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "adb4cb763747c641c9060bd4c71276b7", "sha256": "6229d8ae9e226ef2fbf7482e0b2367f51c3d92e981ffb0215af5078765df96a8"}, "downloads": -1, "filename": "pixhist-0.0.2.tar.gz", "has_sig": false, "md5_digest": "adb4cb763747c641c9060bd4c71276b7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6918, "upload_time": "2020-04-09T10:31:38", "upload_time_iso_8601": "2020-04-09T10:31:38.324460Z", "url": "https://files.pythonhosted.org/packages/58/2b/6a6b01fb51c3b3017f3a20467a150c9bfaecd34322ace3c2f9ab7e107247/pixhist-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:55 2020"}