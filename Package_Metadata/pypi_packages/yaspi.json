{"info": {"author": "Samuel Albanie", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.7"], "description": "### yaspi - yet another slurm python interface\n\nThe goal of `yaspi` is to provide an interface to submitting [slurm](https://slurm.schedmd.com/documentation.html) jobs, thereby obviating the joys of sbatch files.  It does so through `recipes` - these are collections of templates and rules for generating sbatch scripts.\n\n\n### Installation\n\nInstall via `pip install yaspi`.  If you prefer to hack around with the source code, it's a [single python file](yaspi/yaspi.py).\n\nIt should be considered (highly) experimental.\n\n### Implementation\n\n`yaspi` makes heavy usage of slurm [job arrays](https://slurm.schedmd.com/job_array.html).  \n\n### Supported recipes:\n\n* `cpu-proc` - a generic recipe for submitting CPU jobs via a job array.\n* `gpu-proc` - a generic recipe for submitting GPU jobs via a job array.\n* `ray` - job submissions for the [ray scheduler](https://github.com/ray-project/ray).\n\n### Dependencies\n\n* `Python >= 3.6`\n* `watchlogs`\n\n### Requirements:\n\n`yaspi` has been tested on CentOS Linux release 7.7.1908 with slurm 18.08.7 and Python 3.7. YMMV on other platforms.\n\n### Usage and outputs\n\n`yaspi` can be used either from the command-line or directly from a python program.  Command-line usage is shown in the following examples (the effect of each argument is documented in the [implementation](yaspi/yaspi.py)).\n\n**Code - scheduling a slurm job array with CPUs**:\n```\nprep_command='echo \\\"optional preparation cmd\\\"'\ncommand='echo \\\"I am running on a CPU node\\\"'\nyaspi --job_name=example \\\n       --job_array_size=2 \\\n       --cpus_per_task=5 \\\n       --cmd=\"$command\" \\\n       --prep=\"$prep_command\" \\\n       --recipe=cpu-proc \\\n       --mem=10G\n```\n**Effect**: This will run the `command` value on two workers as part of a slurm [job array](https://slurm.schedmd.com/job_array.html).  Each worker will be allocated 5 CPUs and 10G of memory by the scheduler.  Each worker will also be passed two extra flags, `--slurm` (without options) and `--worker_id` (which will be given the 0-indexed value of the current worker index in the job array) which can be used to assign tasks to the worker.  The `--prep` flag is optional, and will run a commands prior to the main job (e.g. to change into an appropriate code directory).  The effect of the command will be to produce the following:\n\n```\n# run on CPU job array worker 0\noptional preparation cmd\nI am running on a CPU node --slurm --worker_id 0\n\n# run on CPU job array worker 1\noptional preparation cmd\nI am running on a CPU node --slurm --worker_id 1\n```\n\nWhen launched, a slightly more verbose (and colourized) output will be produced by [watchlogs](https://github.com/albanie/watchlogs) (this assumes your terminal supports color sequences):\n\n<img src=\"yaspi/misc/cpu-proc.png\" alt=\"cpu-proc-output\" title=\"cpu-proc output\"  height=\"200\" />\n\n\n**Code - scheduling a slurm job array with GPUs**:\n```\nprep_command='echo \\\"optional preparation cmd\\\"'\njob_queue=\"\\\"flags for worker 0\\\" \\\"flags for worker 1\\\"\"\ncommand='echo \\\"I am running on a GPU node\\\"'\nyaspi --job_name=example \\\n      --job_array_size=2 \\\n      --cpus_per_task=5 \\\n      --gpus_per_task=1 \\\n      --prep=\"$prep_command\" \\\n      --cmd=\"$command\" \\\n      --recipe=gpu-proc \\\n      --job_queue=\"$job_queue\" \\\n      --mem=10G\n```\n**Effect**: This command is similar to the `cpu-proc` recipe described above. Again, the `command` will be run on two workers as part of a slurm [job array](https://slurm.schedmd.com/job_array.html).  Each worker will be allocated 5 CPUs and 10G of memory by the scheduler, as well as one GPU. One further difference is that `gpu-proc` also takes an `job_queue` option that can be used to pass options to each GPU worker separately.\n\n<img src=\"yaspi/misc/gpu-proc.png\" alt=\"gpu-proc-output\" title=\"gpu-proc output\"  height=\"200\" />\n\n**Code - scheduling a job with the [ray](https://ray.readthedocs.io/en/latest/index.html) framework:**\n\n```\nyaspi_dir=$(yaspi --install_location)\ncommand=\"python $yaspi_dir/misc/minimal_ray_example.py\"\nyaspi --job_name=example \\\n      --cmd=\"$command\" \\\n      --job_array_size=3 \\\n      --cpus_per_task=2 \\\n      --gpus_per_task=1 \\\n      --mem=10G \\\n      --recipe=ray\n```\n\n**Effect**: Scheduling jobs with the ray framework operates in a slightly different manner to the previous two examples (both of which assume [embarrasingly parallel](https://en.wikipedia.org/wiki/Embarrassingly_parallel) processing i.e. no communication between the workers). The ray receipe similarly launches a slurm job array, but assigns the job at index 0 to be the *master*, and all other nodes as *worker* nodes. The command is run *only* on the master node, which then uses ray to allocate tasks to the worker nodes. The command above will launch a slurm job, with the name \"example\", that: (1) initialises a ray head node and a set of 2 ray workers via a SLURM array job; (2) launches `$command` from the head node. It will produce an output similar to the following:\n\n\n```\nstarted ray head node\ntimestamp from worker: 2020-02-17 06:40:44.861733\ntimestamp from worker: 2020-02-17 06:40:44.861793\ntimestamp from worker: 2020-02-17 06:40:45.062484\ntimestamp from worker: 2020-02-17 06:40:45.065494\n```\n\n**Code - using yaspi directly from python**:\n\nCreate a `Yaspi` object with the appropriate options and call its `submit()` method (for example, see how this is done in [yaspi](yaspi/yaspi.py)).\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/albanie/yaspi", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "yaspi", "package_url": "https://pypi.org/project/yaspi/", "platform": "", "project_url": "https://pypi.org/project/yaspi/", "project_urls": {"Homepage": "https://github.com/albanie/yaspi"}, "release_url": "https://pypi.org/project/yaspi/0.0.0.14/", "requires_dist": ["watchlogs", "typeguard"], "requires_python": ">=3.7", "summary": "Yet Another Slurm Python Interface", "version": "0.0.0.14", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h3>yaspi - yet another slurm python interface</h3>\n<p>The goal of <code>yaspi</code> is to provide an interface to submitting <a href=\"https://slurm.schedmd.com/documentation.html\" rel=\"nofollow\">slurm</a> jobs, thereby obviating the joys of sbatch files.  It does so through <code>recipes</code> - these are collections of templates and rules for generating sbatch scripts.</p>\n<h3>Installation</h3>\n<p>Install via <code>pip install yaspi</code>.  If you prefer to hack around with the source code, it's a <a href=\"yaspi/yaspi.py\" rel=\"nofollow\">single python file</a>.</p>\n<p>It should be considered (highly) experimental.</p>\n<h3>Implementation</h3>\n<p><code>yaspi</code> makes heavy usage of slurm <a href=\"https://slurm.schedmd.com/job_array.html\" rel=\"nofollow\">job arrays</a>.</p>\n<h3>Supported recipes:</h3>\n<ul>\n<li><code>cpu-proc</code> - a generic recipe for submitting CPU jobs via a job array.</li>\n<li><code>gpu-proc</code> - a generic recipe for submitting GPU jobs via a job array.</li>\n<li><code>ray</code> - job submissions for the <a href=\"https://github.com/ray-project/ray\" rel=\"nofollow\">ray scheduler</a>.</li>\n</ul>\n<h3>Dependencies</h3>\n<ul>\n<li><code>Python &gt;= 3.6</code></li>\n<li><code>watchlogs</code></li>\n</ul>\n<h3>Requirements:</h3>\n<p><code>yaspi</code> has been tested on CentOS Linux release 7.7.1908 with slurm 18.08.7 and Python 3.7. YMMV on other platforms.</p>\n<h3>Usage and outputs</h3>\n<p><code>yaspi</code> can be used either from the command-line or directly from a python program.  Command-line usage is shown in the following examples (the effect of each argument is documented in the <a href=\"yaspi/yaspi.py\" rel=\"nofollow\">implementation</a>).</p>\n<p><strong>Code - scheduling a slurm job array with CPUs</strong>:</p>\n<pre><code>prep_command='echo \\\"optional preparation cmd\\\"'\ncommand='echo \\\"I am running on a CPU node\\\"'\nyaspi --job_name=example \\\n       --job_array_size=2 \\\n       --cpus_per_task=5 \\\n       --cmd=\"$command\" \\\n       --prep=\"$prep_command\" \\\n       --recipe=cpu-proc \\\n       --mem=10G\n</code></pre>\n<p><strong>Effect</strong>: This will run the <code>command</code> value on two workers as part of a slurm <a href=\"https://slurm.schedmd.com/job_array.html\" rel=\"nofollow\">job array</a>.  Each worker will be allocated 5 CPUs and 10G of memory by the scheduler.  Each worker will also be passed two extra flags, <code>--slurm</code> (without options) and <code>--worker_id</code> (which will be given the 0-indexed value of the current worker index in the job array) which can be used to assign tasks to the worker.  The <code>--prep</code> flag is optional, and will run a commands prior to the main job (e.g. to change into an appropriate code directory).  The effect of the command will be to produce the following:</p>\n<pre><code># run on CPU job array worker 0\noptional preparation cmd\nI am running on a CPU node --slurm --worker_id 0\n\n# run on CPU job array worker 1\noptional preparation cmd\nI am running on a CPU node --slurm --worker_id 1\n</code></pre>\n<p>When launched, a slightly more verbose (and colourized) output will be produced by <a href=\"https://github.com/albanie/watchlogs\" rel=\"nofollow\">watchlogs</a> (this assumes your terminal supports color sequences):</p>\n<img alt=\"cpu-proc-output\" height=\"200\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7eb71e280b449ba2a65f525835bcb646f7cf1dae/79617370692f6d6973632f6370752d70726f632e706e67\">\n<p><strong>Code - scheduling a slurm job array with GPUs</strong>:</p>\n<pre><code>prep_command='echo \\\"optional preparation cmd\\\"'\njob_queue=\"\\\"flags for worker 0\\\" \\\"flags for worker 1\\\"\"\ncommand='echo \\\"I am running on a GPU node\\\"'\nyaspi --job_name=example \\\n      --job_array_size=2 \\\n      --cpus_per_task=5 \\\n      --gpus_per_task=1 \\\n      --prep=\"$prep_command\" \\\n      --cmd=\"$command\" \\\n      --recipe=gpu-proc \\\n      --job_queue=\"$job_queue\" \\\n      --mem=10G\n</code></pre>\n<p><strong>Effect</strong>: This command is similar to the <code>cpu-proc</code> recipe described above. Again, the <code>command</code> will be run on two workers as part of a slurm <a href=\"https://slurm.schedmd.com/job_array.html\" rel=\"nofollow\">job array</a>.  Each worker will be allocated 5 CPUs and 10G of memory by the scheduler, as well as one GPU. One further difference is that <code>gpu-proc</code> also takes an <code>job_queue</code> option that can be used to pass options to each GPU worker separately.</p>\n<img alt=\"gpu-proc-output\" height=\"200\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cc25a713f3086e69c1c0240612cd039185f9f5b0/79617370692f6d6973632f6770752d70726f632e706e67\">\n<p><strong>Code - scheduling a job with the <a href=\"https://ray.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">ray</a> framework:</strong></p>\n<pre><code>yaspi_dir=$(yaspi --install_location)\ncommand=\"python $yaspi_dir/misc/minimal_ray_example.py\"\nyaspi --job_name=example \\\n      --cmd=\"$command\" \\\n      --job_array_size=3 \\\n      --cpus_per_task=2 \\\n      --gpus_per_task=1 \\\n      --mem=10G \\\n      --recipe=ray\n</code></pre>\n<p><strong>Effect</strong>: Scheduling jobs with the ray framework operates in a slightly different manner to the previous two examples (both of which assume <a href=\"https://en.wikipedia.org/wiki/Embarrassingly_parallel\" rel=\"nofollow\">embarrasingly parallel</a> processing i.e. no communication between the workers). The ray receipe similarly launches a slurm job array, but assigns the job at index 0 to be the <em>master</em>, and all other nodes as <em>worker</em> nodes. The command is run <em>only</em> on the master node, which then uses ray to allocate tasks to the worker nodes. The command above will launch a slurm job, with the name \"example\", that: (1) initialises a ray head node and a set of 2 ray workers via a SLURM array job; (2) launches <code>$command</code> from the head node. It will produce an output similar to the following:</p>\n<pre><code>started ray head node\ntimestamp from worker: 2020-02-17 06:40:44.861733\ntimestamp from worker: 2020-02-17 06:40:44.861793\ntimestamp from worker: 2020-02-17 06:40:45.062484\ntimestamp from worker: 2020-02-17 06:40:45.065494\n</code></pre>\n<p><strong>Code - using yaspi directly from python</strong>:</p>\n<p>Create a <code>Yaspi</code> object with the appropriate options and call its <code>submit()</code> method (for example, see how this is done in <a href=\"yaspi/yaspi.py\" rel=\"nofollow\">yaspi</a>).</p>\n\n          </div>"}, "last_serial": 6937118, "releases": {"0.0.0.1": [{"comment_text": "", "digests": {"md5": "12c53efe95c43bafeb9b24bc33f00be3", "sha256": "7880b8720c6ec7b89380831a70870ea9c90a70fb72163bf5d06396b5463c224a"}, "downloads": -1, "filename": "yaspi-0.0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "12c53efe95c43bafeb9b24bc33f00be3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6925, "upload_time": "2020-02-17T06:56:59", "upload_time_iso_8601": "2020-02-17T06:56:59.484507Z", "url": "https://files.pythonhosted.org/packages/66/01/925908c30dad0922dc59327ea8c51e5ba11c4f6f8847318f2a69b4d86d0f/yaspi-0.0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d4574a2f6fd19657e5888ad552027005", "sha256": "f2845ae483908848e78b27796a6c9cdc2644c66836dddee657ff6eab13294bfe"}, "downloads": -1, "filename": "yaspi-0.0.0.1.tar.gz", "has_sig": false, "md5_digest": "d4574a2f6fd19657e5888ad552027005", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 6750, "upload_time": "2020-02-17T06:57:01", "upload_time_iso_8601": "2020-02-17T06:57:01.901054Z", "url": "https://files.pythonhosted.org/packages/b8/75/d8be839e1fab73de44077ac5663139ed4ee0307798c20520c8dfe6be3384/yaspi-0.0.0.1.tar.gz", "yanked": false}], "0.0.0.10": [{"comment_text": "", "digests": {"md5": "ca49efff98196247403622573dd0aca2", "sha256": "1ed6783167bd6a00e785ef9139d6b6fff159e9fa29081075b3824c41c52f71f5"}, "downloads": -1, "filename": "yaspi-0.0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "ca49efff98196247403622573dd0aca2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 12415, "upload_time": "2020-02-17T16:07:29", "upload_time_iso_8601": "2020-02-17T16:07:29.992905Z", "url": "https://files.pythonhosted.org/packages/c1/5b/4b18b260b59c10931b39367ab377738803db9d80418f1ef06a95070f31df/yaspi-0.0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd6a4276c8850715e74f42de90f9d598", "sha256": "59135bccfe0c0b81a5dcfc93a73a4bb06a840806a7086e07920a7bc1a96fc9d4"}, "downloads": -1, "filename": "yaspi-0.0.0.10.tar.gz", "has_sig": false, "md5_digest": "cd6a4276c8850715e74f42de90f9d598", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11615, "upload_time": "2020-02-17T16:07:31", "upload_time_iso_8601": "2020-02-17T16:07:31.200241Z", "url": "https://files.pythonhosted.org/packages/8d/0a/4a7eadedd9d7a9a41b395870122fe3c5e5446b2cd3a98d756b20a0f2e9a3/yaspi-0.0.0.10.tar.gz", "yanked": false}], "0.0.0.11": [{"comment_text": "", "digests": {"md5": "5d53da64bbaabc8f6b6f67b9cf02bcb3", "sha256": "52b2c53624fb1b7f1ec73803440a39a0f5255343a548ae178287b6c73b84d63e"}, "downloads": -1, "filename": "yaspi-0.0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "5d53da64bbaabc8f6b6f67b9cf02bcb3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 12584, "upload_time": "2020-02-17T16:18:15", "upload_time_iso_8601": "2020-02-17T16:18:15.814821Z", "url": "https://files.pythonhosted.org/packages/75/fe/1be9ded0ebe7ce5d14539b81ddc3d7164b7ace15229e0899dbabf7295585/yaspi-0.0.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "42331bebcc8554bf7062d9bdcc33fac2", "sha256": "570c62477d6a66ef12e29634ff9878bda69804c590b28c3496a765f56a53fea6"}, "downloads": -1, "filename": "yaspi-0.0.0.11.tar.gz", "has_sig": false, "md5_digest": "42331bebcc8554bf7062d9bdcc33fac2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11764, "upload_time": "2020-02-17T16:18:17", "upload_time_iso_8601": "2020-02-17T16:18:17.024926Z", "url": "https://files.pythonhosted.org/packages/bd/5f/9729fe6d5a2a7aaa90d95f5c29eb2a72bc1bb3bb942be4be324835ce1ca9/yaspi-0.0.0.11.tar.gz", "yanked": false}], "0.0.0.12": [{"comment_text": "", "digests": {"md5": "1fc557378d07bba51580e7a8dd2b6387", "sha256": "886176586ed024278a25a558285c2cc2f89bb97678eaa2adc8f9e79e3bd2ff35"}, "downloads": -1, "filename": "yaspi-0.0.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "1fc557378d07bba51580e7a8dd2b6387", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 12838, "upload_time": "2020-02-18T09:42:36", "upload_time_iso_8601": "2020-02-18T09:42:36.782165Z", "url": "https://files.pythonhosted.org/packages/78/0f/edfae8d568c16dacb93dcbad701aa9249cbb6ab55a07391dd2776405e520/yaspi-0.0.0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74788a659fe39bce4674f59d42cd4a5d", "sha256": "1c2947119c70e5357d3163e33fffe6994f617140f37a8a6f9be19bc04d79d2aa"}, "downloads": -1, "filename": "yaspi-0.0.0.12.tar.gz", "has_sig": false, "md5_digest": "74788a659fe39bce4674f59d42cd4a5d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 12016, "upload_time": "2020-02-18T09:42:38", "upload_time_iso_8601": "2020-02-18T09:42:38.254780Z", "url": "https://files.pythonhosted.org/packages/1a/81/bbfcc2d7f67e79df626e9b450cc6599fdeafdd38f9c275303ed6a354658a/yaspi-0.0.0.12.tar.gz", "yanked": false}], "0.0.0.13": [{"comment_text": "", "digests": {"md5": "9ff0b4b41c2b9088324a8a7a5b99eb30", "sha256": "916ac1cf7b91f5240237e40461ff9d3eece6dd11e50a1d8cae4cb9640bcab36b"}, "downloads": -1, "filename": "yaspi-0.0.0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "9ff0b4b41c2b9088324a8a7a5b99eb30", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 13175, "upload_time": "2020-03-29T16:19:18", "upload_time_iso_8601": "2020-03-29T16:19:18.449298Z", "url": "https://files.pythonhosted.org/packages/13/98/221350e92df8ceb8fe75d2e6eca07837f11fb8b9eb11119c51c36978774b/yaspi-0.0.0.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b18fabbcb44e08cbf46b4e08061749e", "sha256": "9c4b5861660772b8d9fa0129f68ba5695a733a98d3af7e2bfbcbca3c31fce0e0"}, "downloads": -1, "filename": "yaspi-0.0.0.13.tar.gz", "has_sig": false, "md5_digest": "4b18fabbcb44e08cbf46b4e08061749e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 12289, "upload_time": "2020-03-29T16:19:19", "upload_time_iso_8601": "2020-03-29T16:19:19.750881Z", "url": "https://files.pythonhosted.org/packages/6a/d6/ebd5f76dcfd01b976d7c4f7b17bb0f6ac26d055bc08db0f9be947e74152e/yaspi-0.0.0.13.tar.gz", "yanked": false}], "0.0.0.14": [{"comment_text": "", "digests": {"md5": "8a02500ff2882773a0ae9be0178afe11", "sha256": "20b2d075389882967228cece09292dfbf6537cf016d8501b7c4ab1b462458f05"}, "downloads": -1, "filename": "yaspi-0.0.0.14-py3-none-any.whl", "has_sig": false, "md5_digest": "8a02500ff2882773a0ae9be0178afe11", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 13211, "upload_time": "2020-04-02T16:50:13", "upload_time_iso_8601": "2020-04-02T16:50:13.765250Z", "url": "https://files.pythonhosted.org/packages/48/99/d044312ec9fc1877bc827c9085ae630ec07dfe972eec201b9cbc8243edf0/yaspi-0.0.0.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "36c51a1c67b4caad0e4223a1046dd711", "sha256": "8175e34625caef031a9d103d964fbd0b98f48c9c4e833ceac07095ca4c2fdb03"}, "downloads": -1, "filename": "yaspi-0.0.0.14.tar.gz", "has_sig": false, "md5_digest": "36c51a1c67b4caad0e4223a1046dd711", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 12331, "upload_time": "2020-04-02T16:50:15", "upload_time_iso_8601": "2020-04-02T16:50:15.345847Z", "url": "https://files.pythonhosted.org/packages/b4/b8/a80c7fa8e764a4beb799878a5058acfd35bd0e4f2e6729c52b42663dce7a/yaspi-0.0.0.14.tar.gz", "yanked": false}], "0.0.0.3": [{"comment_text": "", "digests": {"md5": "0b7b6ba669524bbe9d0d1f14bf32dde8", "sha256": "b29ba7716e7bd6098e4dde2c0bd2719c81ba1a862db4f402a6067e16c2887dc8"}, "downloads": -1, "filename": "yaspi-0.0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "0b7b6ba669524bbe9d0d1f14bf32dde8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 11585, "upload_time": "2020-02-17T08:13:34", "upload_time_iso_8601": "2020-02-17T08:13:34.086781Z", "url": "https://files.pythonhosted.org/packages/7a/bf/d3802ef4afb76569f8c6da1b10d2f11ec0dd5543d3ef77c4a2e41f9548aa/yaspi-0.0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58da44f0de12edc20db684537e1d4e8f", "sha256": "abfee8214acbcdad01499a47b3d4e4abe289d68334c834ed20e14c189c95c5b5"}, "downloads": -1, "filename": "yaspi-0.0.0.3.tar.gz", "has_sig": false, "md5_digest": "58da44f0de12edc20db684537e1d4e8f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11269, "upload_time": "2020-02-17T08:13:35", "upload_time_iso_8601": "2020-02-17T08:13:35.264755Z", "url": "https://files.pythonhosted.org/packages/d3/62/d2f0563d0fefe1c4b143d1447bb734cc8bd73fb1031730bedd077dddba94/yaspi-0.0.0.3.tar.gz", "yanked": false}], "0.0.0.4": [{"comment_text": "", "digests": {"md5": "358c322db252dde78af1e3be586a5c8d", "sha256": "33f5d5ebd021221914a8bb1c916d4446a93d53def0ba883d559996d0bbcb627a"}, "downloads": -1, "filename": "yaspi-0.0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "358c322db252dde78af1e3be586a5c8d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 11585, "upload_time": "2020-02-17T08:14:24", "upload_time_iso_8601": "2020-02-17T08:14:24.273202Z", "url": "https://files.pythonhosted.org/packages/a1/17/79ef31e2bab938f37fa22fdf173507776e2986ff24bb6018b5a974692106/yaspi-0.0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cbe1330cf5abc91b5ce9b57ee087606c", "sha256": "3310d9d5df5a6979497a7c4e803a68b6a776301476b0d1a40cd20a1af11418c6"}, "downloads": -1, "filename": "yaspi-0.0.0.4.tar.gz", "has_sig": false, "md5_digest": "cbe1330cf5abc91b5ce9b57ee087606c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11274, "upload_time": "2020-02-17T08:14:25", "upload_time_iso_8601": "2020-02-17T08:14:25.371593Z", "url": "https://files.pythonhosted.org/packages/8c/19/36573d399a104e46fb1752aae999803793ede2790e838c35417197993267/yaspi-0.0.0.4.tar.gz", "yanked": false}], "0.0.0.5": [{"comment_text": "", "digests": {"md5": "8e0d782cdda51598ecda35cded40e9ec", "sha256": "1059e6158607e1faa660869a5e930ff823c0251b5d641320baeecfe5154cba48"}, "downloads": -1, "filename": "yaspi-0.0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "8e0d782cdda51598ecda35cded40e9ec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 7000, "upload_time": "2020-02-17T08:21:16", "upload_time_iso_8601": "2020-02-17T08:21:16.824751Z", "url": "https://files.pythonhosted.org/packages/58/af/12d2a72a074b8fda7cf16fd5587408a704d09dbb6fd5324c8e6276c53d18/yaspi-0.0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "855f27e7e2b5ac2274fe24f45f459058", "sha256": "285701def54497b0ef74953dde23f1c7437062a6061e0663f5d9bb03e48ffd08"}, "downloads": -1, "filename": "yaspi-0.0.0.5.tar.gz", "has_sig": false, "md5_digest": "855f27e7e2b5ac2274fe24f45f459058", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 6913, "upload_time": "2020-02-17T08:21:18", "upload_time_iso_8601": "2020-02-17T08:21:18.398783Z", "url": "https://files.pythonhosted.org/packages/72/c4/bba3d8eb9b0573fb490824613a67da5000c29f06f689c6f6ad6f8c13f4fa/yaspi-0.0.0.5.tar.gz", "yanked": false}], "0.0.0.6": [{"comment_text": "", "digests": {"md5": "71ca52508835999da8394039795e8a03", "sha256": "3ffd137ba79cbdd1edefc46837ec5f0863825fcf193ece8f10b826f42a2ad406"}, "downloads": -1, "filename": "yaspi-0.0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "71ca52508835999da8394039795e8a03", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 7000, "upload_time": "2020-02-17T08:22:43", "upload_time_iso_8601": "2020-02-17T08:22:43.041364Z", "url": "https://files.pythonhosted.org/packages/79/01/7114bd8356d0d31204c38bd4586f614e924a743e138d83ff5c906d339175/yaspi-0.0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "27a3c2229b0bb149a0ac2fe69dcd2a6c", "sha256": "755fc6510765a6b6245062118cdc338d0338bf9d04440d6326fe83b07701f783"}, "downloads": -1, "filename": "yaspi-0.0.0.6.tar.gz", "has_sig": false, "md5_digest": "27a3c2229b0bb149a0ac2fe69dcd2a6c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 6920, "upload_time": "2020-02-17T08:22:44", "upload_time_iso_8601": "2020-02-17T08:22:44.228697Z", "url": "https://files.pythonhosted.org/packages/c9/9f/8cef2d26b9c95336f6534024f92224094bd2814a4ce6eb3f81fc3fa1f748/yaspi-0.0.0.6.tar.gz", "yanked": false}], "0.0.0.7": [{"comment_text": "", "digests": {"md5": "d677b93d0da0ec05bedd42692a67b73c", "sha256": "e0ff4e56369fb1ab1adac73b14ea414020f032378ea7e46882c1e0871d51b7f7"}, "downloads": -1, "filename": "yaspi-0.0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "d677b93d0da0ec05bedd42692a67b73c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 12226, "upload_time": "2020-02-17T08:30:53", "upload_time_iso_8601": "2020-02-17T08:30:53.584898Z", "url": "https://files.pythonhosted.org/packages/03/c3/95aad329404b6d216422418940b845dc597816538d623b02f8a51bf6b6dd/yaspi-0.0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "127db70b9f2b1538922f96a8e4e58eb4", "sha256": "5d598501276204d507d878161832096fc1680db99ebe8f530580a530d4efffef"}, "downloads": -1, "filename": "yaspi-0.0.0.7.tar.gz", "has_sig": false, "md5_digest": "127db70b9f2b1538922f96a8e4e58eb4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11446, "upload_time": "2020-02-17T08:30:55", "upload_time_iso_8601": "2020-02-17T08:30:55.064226Z", "url": "https://files.pythonhosted.org/packages/d2/1c/72bc1adda9dbebc34c4a261c1fef4f435f3c3b6bef7da3788494430482cf/yaspi-0.0.0.7.tar.gz", "yanked": false}], "0.0.0.9": [{"comment_text": "", "digests": {"md5": "e3a421939d739cdf138d843feee9f2ef", "sha256": "3ce0e6130da39862a20cad1dc255e66612a4e803b561c540b063e4b1dbb6cef1"}, "downloads": -1, "filename": "yaspi-0.0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "e3a421939d739cdf138d843feee9f2ef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 12306, "upload_time": "2020-02-17T09:19:32", "upload_time_iso_8601": "2020-02-17T09:19:32.460756Z", "url": "https://files.pythonhosted.org/packages/d7/bd/0d18e591578dde120b11835ff0ce1021c54ce83d85808dc6cdd2f435a567/yaspi-0.0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "709d1ce106bf7d18037e70f9f26a9a1d", "sha256": "712c51869ef0769822f191a7b2bc007df641c605a10e2d81561964f716ef2404"}, "downloads": -1, "filename": "yaspi-0.0.0.9.tar.gz", "has_sig": false, "md5_digest": "709d1ce106bf7d18037e70f9f26a9a1d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11512, "upload_time": "2020-02-17T09:19:33", "upload_time_iso_8601": "2020-02-17T09:19:33.929321Z", "url": "https://files.pythonhosted.org/packages/52/b5/e831b49dfad718d2e31ac6951472dfc4cd10f3f7d7f7df22dd19655e6262/yaspi-0.0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8a02500ff2882773a0ae9be0178afe11", "sha256": "20b2d075389882967228cece09292dfbf6537cf016d8501b7c4ab1b462458f05"}, "downloads": -1, "filename": "yaspi-0.0.0.14-py3-none-any.whl", "has_sig": false, "md5_digest": "8a02500ff2882773a0ae9be0178afe11", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 13211, "upload_time": "2020-04-02T16:50:13", "upload_time_iso_8601": "2020-04-02T16:50:13.765250Z", "url": "https://files.pythonhosted.org/packages/48/99/d044312ec9fc1877bc827c9085ae630ec07dfe972eec201b9cbc8243edf0/yaspi-0.0.0.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "36c51a1c67b4caad0e4223a1046dd711", "sha256": "8175e34625caef031a9d103d964fbd0b98f48c9c4e833ceac07095ca4c2fdb03"}, "downloads": -1, "filename": "yaspi-0.0.0.14.tar.gz", "has_sig": false, "md5_digest": "36c51a1c67b4caad0e4223a1046dd711", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 12331, "upload_time": "2020-04-02T16:50:15", "upload_time_iso_8601": "2020-04-02T16:50:15.345847Z", "url": "https://files.pythonhosted.org/packages/b4/b8/a80c7fa8e764a4beb799878a5058acfd35bd0e4f2e6729c52b42663dce7a/yaspi-0.0.0.14.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:22:46 2020"}