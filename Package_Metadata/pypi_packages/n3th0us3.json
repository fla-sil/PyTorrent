{"info": {"author": "Anzhela", "author_email": "dev.anzhela@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# N3th0us3\n\n**N3th0us3** is unofficial python package for _domains.nethouse.ru/domains_ service.\n\n## Description\n\nService _domains.nethouse.ru/domains_ lets you check domain name across multiple top-level domains (citation: \"checking the domain for occupancy, check whether the domain is occupied in all zones\").\n\nBut this checking is sequential, one by one. Ohhh...\n\n**N3th0us3**:\n - implements domain name checking function\n - lets to make it faster with multiprocess usage, not sequential\n - lets to make it at a time for multiple domains names\n - gives you interface for python\n\nYou can use **N3th0us3** for print result data in console or saving it at file or database.\nJust realize this business logic at your callback function.\n\n## Install\n\n```bash\n$ pip install n3th0us3\n```\n\n## Example\n\nNative usage:\n\n```python\nfrom n3th0us3 import pooled_domains_info\n\ndef your_callback_for_each_sub_request(data):\n    print(data)\n    \nif __name__ == '__main__':\n        \n    pooled_domains_info(\n        ['first-domain', 'second-domain',], \n        processes_count=16,\n        callback_method=your_callback_for_each_sub_request\n    )\n```\n\nor low-level usage of **N3th0us3** in your script with command line usage:\n\n```bash\npython3 your_script.py first-domain second-domain third-domain -p 10 -tld ru su com\n```\n\n```python\n# file: your_script.py\n\nimport multiprocessing\n\nfrom n3th0us3.domains import (\n    TLD,\n    formatted_print,\n    get_domain_info\n)\n\nif __name__ == '__main__':\n    from argparse import ArgumentParser\n\n    parser = ArgumentParser()\n    parser.add_argument(\"domain_name\",\n                        nargs='+',\n                        help=\"space separated domains names list\")\n    parser.add_argument(\"-p\", dest=\"processes_count\", default=4,\n                        type=int,\n                        help=\"count of processes\")\n    parser.add_argument(\"-tld\", dest=\"tld\",\n                        nargs='+', default=TLD,\n                        help=\"space separated top-level domains\")\n\n    args = parser.parse_args()\n\n    pool = multiprocessing.Pool(processes=args.processes_count)\n\n    for domain_name in args.domain_name:\n        for tld in args.tld:\n            pool.apply_async(get_domain_info, args=(domain_name, tld), callback=formatted_print)\n\n    pool.close()\n    pool.join()\n```\nresult is:\n```text\nthird-domain.su {'result': {'error': 'empty', 'domain': 'third-domain.su', 'errrr': '', 'is_premium_name': '', 'premium_price': ''}}\nthird-domain.com {'result': {'error': 'empty', 'domain': 'third-domain.com', 'errrr': '', 'is_premium_name': '', 'premium_price': ''}}\nfirst-domain.com {'result': {'error': 'occupy', 'domain': 'first-domain.com', 'errrr': '', 'error_message': '\u0414\u043e\u043c\u0435\u043d \u0437\u0430\u043d\u044f\u0442', 'type_error': 'busy'}}\nfirst-domain.su {'result': {'error': 'empty', 'domain': 'first-domain.su', 'errrr': '', 'is_premium_name': '', 'premium_price': ''}}\nthird-domain.ru {'result': {'error': 'empty', 'domain': 'third-domain.ru', 'errrr': '', 'is_premium_name': '', 'premium_price': ''}}\nsecond-domain.com {'result': {'error': 'occupy', 'domain': 'second-domain.com', 'errrr': '', 'error_message': '\u0414\u043e\u043c\u0435\u043d \u0437\u0430\u043d\u044f\u0442', 'type_error': 'busy'}}\nfirst-domain.ru {'result': {'error': 'empty', 'domain': 'first-domain.ru', 'errrr': '', 'is_premium_name': '', 'premium_price': ''}}\nsecond-domain.ru {'result': {'error': 'empty', 'domain': 'second-domain.ru', 'errrr': '', 'is_premium_name': '', 'premium_price': ''}}\nsecond-domain.su {'result': {'error': 'empty', 'domain': 'second-domain.su', 'errrr': '', 'is_premium_name': '', 'premium_price': ''}}\n```\n\n## To be continue...", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "n3th0us3", "package_url": "https://pypi.org/project/n3th0us3/", "platform": "", "project_url": "https://pypi.org/project/n3th0us3/", "project_urls": null, "release_url": "https://pypi.org/project/n3th0us3/1.1.2/", "requires_dist": null, "requires_python": ">=3.4", "summary": "Unofficial python package for domains.nethouse.ru service.", "version": "1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>N3th0us3</h1>\n<p><strong>N3th0us3</strong> is unofficial python package for <em>domains.nethouse.ru/domains</em> service.</p>\n<h2>Description</h2>\n<p>Service <em>domains.nethouse.ru/domains</em> lets you check domain name across multiple top-level domains (citation: \"checking the domain for occupancy, check whether the domain is occupied in all zones\").</p>\n<p>But this checking is sequential, one by one. Ohhh...</p>\n<p><strong>N3th0us3</strong>:</p>\n<ul>\n<li>implements domain name checking function</li>\n<li>lets to make it faster with multiprocess usage, not sequential</li>\n<li>lets to make it at a time for multiple domains names</li>\n<li>gives you interface for python</li>\n</ul>\n<p>You can use <strong>N3th0us3</strong> for print result data in console or saving it at file or database.\nJust realize this business logic at your callback function.</p>\n<h2>Install</h2>\n<pre>$ pip install n3th0us3\n</pre>\n<h2>Example</h2>\n<p>Native usage:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">n3th0us3</span> <span class=\"kn\">import</span> <span class=\"n\">pooled_domains_info</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">your_callback_for_each_sub_request</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n    \n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n        \n    <span class=\"n\">pooled_domains_info</span><span class=\"p\">(</span>\n        <span class=\"p\">[</span><span class=\"s1\">'first-domain'</span><span class=\"p\">,</span> <span class=\"s1\">'second-domain'</span><span class=\"p\">,],</span> \n        <span class=\"n\">processes_count</span><span class=\"o\">=</span><span class=\"mi\">16</span><span class=\"p\">,</span>\n        <span class=\"n\">callback_method</span><span class=\"o\">=</span><span class=\"n\">your_callback_for_each_sub_request</span>\n    <span class=\"p\">)</span>\n</pre>\n<p>or low-level usage of <strong>N3th0us3</strong> in your script with command line usage:</p>\n<pre>python3 your_script.py first-domain second-domain third-domain -p <span class=\"m\">10</span> -tld ru su com\n</pre>\n<pre><span class=\"c1\"># file: your_script.py</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">n3th0us3.domains</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">TLD</span><span class=\"p\">,</span>\n    <span class=\"n\">formatted_print</span><span class=\"p\">,</span>\n    <span class=\"n\">get_domain_info</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">argparse</span> <span class=\"kn\">import</span> <span class=\"n\">ArgumentParser</span>\n\n    <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">ArgumentParser</span><span class=\"p\">()</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">\"domain_name\"</span><span class=\"p\">,</span>\n                        <span class=\"n\">nargs</span><span class=\"o\">=</span><span class=\"s1\">'+'</span><span class=\"p\">,</span>\n                        <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">\"space separated domains names list\"</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">\"-p\"</span><span class=\"p\">,</span> <span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s2\">\"processes_count\"</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span>\n                        <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span>\n                        <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">\"count of processes\"</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">\"-tld\"</span><span class=\"p\">,</span> <span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s2\">\"tld\"</span><span class=\"p\">,</span>\n                        <span class=\"n\">nargs</span><span class=\"o\">=</span><span class=\"s1\">'+'</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"n\">TLD</span><span class=\"p\">,</span>\n                        <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">\"space separated top-level domains\"</span><span class=\"p\">)</span>\n\n    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span><span class=\"p\">()</span>\n\n    <span class=\"n\">pool</span> <span class=\"o\">=</span> <span class=\"n\">multiprocessing</span><span class=\"o\">.</span><span class=\"n\">Pool</span><span class=\"p\">(</span><span class=\"n\">processes</span><span class=\"o\">=</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">processes_count</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">domain_name</span> <span class=\"ow\">in</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">domain_name</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">tld</span> <span class=\"ow\">in</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">tld</span><span class=\"p\">:</span>\n            <span class=\"n\">pool</span><span class=\"o\">.</span><span class=\"n\">apply_async</span><span class=\"p\">(</span><span class=\"n\">get_domain_info</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">domain_name</span><span class=\"p\">,</span> <span class=\"n\">tld</span><span class=\"p\">),</span> <span class=\"n\">callback</span><span class=\"o\">=</span><span class=\"n\">formatted_print</span><span class=\"p\">)</span>\n\n    <span class=\"n\">pool</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n    <span class=\"n\">pool</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">()</span>\n</pre>\n<p>result is:</p>\n<pre>third-domain.su {'result': {'error': 'empty', 'domain': 'third-domain.su', 'errrr': '', 'is_premium_name': '', 'premium_price': ''}}\nthird-domain.com {'result': {'error': 'empty', 'domain': 'third-domain.com', 'errrr': '', 'is_premium_name': '', 'premium_price': ''}}\nfirst-domain.com {'result': {'error': 'occupy', 'domain': 'first-domain.com', 'errrr': '', 'error_message': '\u0414\u043e\u043c\u0435\u043d \u0437\u0430\u043d\u044f\u0442', 'type_error': 'busy'}}\nfirst-domain.su {'result': {'error': 'empty', 'domain': 'first-domain.su', 'errrr': '', 'is_premium_name': '', 'premium_price': ''}}\nthird-domain.ru {'result': {'error': 'empty', 'domain': 'third-domain.ru', 'errrr': '', 'is_premium_name': '', 'premium_price': ''}}\nsecond-domain.com {'result': {'error': 'occupy', 'domain': 'second-domain.com', 'errrr': '', 'error_message': '\u0414\u043e\u043c\u0435\u043d \u0437\u0430\u043d\u044f\u0442', 'type_error': 'busy'}}\nfirst-domain.ru {'result': {'error': 'empty', 'domain': 'first-domain.ru', 'errrr': '', 'is_premium_name': '', 'premium_price': ''}}\nsecond-domain.ru {'result': {'error': 'empty', 'domain': 'second-domain.ru', 'errrr': '', 'is_premium_name': '', 'premium_price': ''}}\nsecond-domain.su {'result': {'error': 'empty', 'domain': 'second-domain.su', 'errrr': '', 'is_premium_name': '', 'premium_price': ''}}\n</pre>\n<h2>To be continue...</h2>\n\n          </div>"}, "last_serial": 6743101, "releases": {"1.1.2": [{"comment_text": "", "digests": {"md5": "a93e714006254a42e1ff5b14de9b7d64", "sha256": "9856a2de434501804aefd8124956b4a6bcbdc9730725f7f3dc9e67edd5a2741a"}, "downloads": -1, "filename": "n3th0us3-1.1.2.tar.gz", "has_sig": false, "md5_digest": "a93e714006254a42e1ff5b14de9b7d64", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 4909, "upload_time": "2020-03-03T19:46:23", "upload_time_iso_8601": "2020-03-03T19:46:23.597088Z", "url": "https://files.pythonhosted.org/packages/e3/88/8b8c54bafd19d7a15cb145409f5a381005b72d5ef0eaeb5ea7a14787cedb/n3th0us3-1.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a93e714006254a42e1ff5b14de9b7d64", "sha256": "9856a2de434501804aefd8124956b4a6bcbdc9730725f7f3dc9e67edd5a2741a"}, "downloads": -1, "filename": "n3th0us3-1.1.2.tar.gz", "has_sig": false, "md5_digest": "a93e714006254a42e1ff5b14de9b7d64", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 4909, "upload_time": "2020-03-03T19:46:23", "upload_time_iso_8601": "2020-03-03T19:46:23.597088Z", "url": "https://files.pythonhosted.org/packages/e3/88/8b8c54bafd19d7a15cb145409f5a381005b72d5ef0eaeb5ea7a14787cedb/n3th0us3-1.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:55 2020"}