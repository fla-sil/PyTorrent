{"info": {"author": "Fr\u00e9d\u00e9ric Haziza", "author_email": "frederic.haziza@crg.eu", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Healthcare Industry", "Intended Audience :: Information Technology", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Operating System :: POSIX :: BSD", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: Security :: Cryptography"], "description": "[![Documentation Status](https://readthedocs.org/projects/crypt4gh/badge/?version=latest)](https://crypt4gh.readthedocs.io/en/latest/?badge=latest)\n[![Testsuite](https://github.com/EGA-archive/crypt4gh/workflows/Testsuite/badge.svg)](https://github.com/EGA-archive/crypt4gh/actions)\n\n# Crypt4GH Encryption Utility\n\n`crypt4gh`is a Python tool to encrypt, decrypt or re-encrypt files, according to the [GA4GH encryption file format](https://www.ga4gh.org/news/crypt4gh-a-secure-method-for-sharing-human-genetic-data/).\n\n\n## Installation\n\nPython `3.6+` required to use the crypt4gh encryption utility.\n\nInstall it from PyPI:\n\n```\npip install crypt4gh\n```\n\nor if you prefer the latest sources from Github:\n\n```\ngit clone https://github.com/EGA-archive/crypt4gh\npip install -r crypt4gh/requirements.txt\npip install ./crypt4gh\n```\n\nor\n\n```\npip install git+https://github.com/EGA-archive/crypt4gh.git\n```\n\n## Usage\n\nThe usual `-h` flag shows you the different options that the tool accepts.\n\n```bash\n$ crypt4gh -h\n\nUtility for the cryptographic GA4GH standard, reading from stdin and outputting to stdout.\n\nUsage:\n   {PROG} [-hv] [--log <file>] encrypt [--sk <path>] --recipient_pk <path> [--recipient_pk <path>]... [--range <start-end>]\n   {PROG} [-hv] [--log <file>] decrypt [--sk <path>] [--sender_pk <path>] [--range <start-end>]\n   {PROG} [-hv] [--log <file>] rearrange [--sk <path>] --range <start-end>\n   {PROG} [-hv] [--log <file>] reencrypt [--sk <path>] --recipient_pk <path> [--recipient_pk <path>]... [--trim]\n\nOptions:\n   -h, --help             Prints this help and exit\n   -v, --version          Prints the version and exits\n   --log <file>           Path to the logger file (in YML format)\n   --sk <keyfile>         Curve25519-based Private key.\n                          When encrypting, if neither the private key nor C4GH_SECRET_KEY are specified, we generate a new key \n   --recipient_pk <path>  Recipient's Curve25519-based Public key\n   --sender_pk <path>     Peer's Curve25519-based Public key to verify provenance (akin to signature)\n   --range <start-end>    Byte-range either as  <start-end> or just <start> (Start included, End excluded)\n   -t, --trim             Keep only header packets that you can decrypt\n\n\nEnvironment variables:\n   C4GH_LOG         If defined, it will be used as the default logger\n   C4GH_SECRET_KEY  If defined, it will be used as the default secret key (ie --sk ${C4GH_SECRET_KEY})\n   C4GH_DEBUG       If True, it will print (a lot of) debug information.\n                    (Watch out: the output contains secrets)\n\n```\n\n## Demonstration\n\nAlice and Bob generate both a pair of public/private keys.\n\n```bash\n$ crypt4gh-keygen --sk alice.sec --pk alice.pub\n$ crypt4gh-keygen --sk bob.sec --pk bob.pub\n```\n\nBob encrypts a file for Alice:\n\n```bash\n$ crypt4gh encrypt --sk bob.sec --recipient_pk alice.pub < file > file.c4gh\n```\n\nAlice decrypts the encrypted file:\n\n```bash\n$ crypt4gh decrypt --sk alice.sec < file.c4gh\n```\n\n[![asciicast](https://asciinema.org/a/mmCBfBdCFfcYCRBuTSe3kjCFs.svg)](https://asciinema.org/a/mmCBfBdCFfcYCRBuTSe3kjCFs)\n\n## File Format\n\nRefer to the [specifications](http://samtools.github.io/hts-specs/crypt4gh.pdf) or this [documentation](https://crypt4gh.readthedocs.io/en/latest/encryption.html).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.github.com/EGA-archive/crypt4gh", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "crypt4gh", "package_url": "https://pypi.org/project/crypt4gh/", "platform": "any", "project_url": "https://pypi.org/project/crypt4gh/", "project_urls": {"Homepage": "https://www.github.com/EGA-archive/crypt4gh"}, "release_url": "https://pypi.org/project/crypt4gh/1.3/", "requires_dist": ["pyYaml (>=5.1.2)", "docopt", "cryptography (>=2.8)", "pynacl (>=1.3.0)", "bcrypt"], "requires_python": ">=3.6", "summary": "GA4GH cryptographic utilities", "version": "1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://crypt4gh.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/34353a04c1e8526c0327e40916124ae31d4827c2/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f63727970743467682f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://github.com/EGA-archive/crypt4gh/actions\" rel=\"nofollow\"><img alt=\"Testsuite\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/80c1e7798f8f844a3443ac26a77a74afdb6c3d1d/68747470733a2f2f6769746875622e636f6d2f4547412d617263686976652f63727970743467682f776f726b666c6f77732f5465737473756974652f62616467652e737667\"></a></p>\n<h1>Crypt4GH Encryption Utility</h1>\n<p><code>crypt4gh</code>is a Python tool to encrypt, decrypt or re-encrypt files, according to the <a href=\"https://www.ga4gh.org/news/crypt4gh-a-secure-method-for-sharing-human-genetic-data/\" rel=\"nofollow\">GA4GH encryption file format</a>.</p>\n<h2>Installation</h2>\n<p>Python <code>3.6+</code> required to use the crypt4gh encryption utility.</p>\n<p>Install it from PyPI:</p>\n<pre><code>pip install crypt4gh\n</code></pre>\n<p>or if you prefer the latest sources from Github:</p>\n<pre><code>git clone https://github.com/EGA-archive/crypt4gh\npip install -r crypt4gh/requirements.txt\npip install ./crypt4gh\n</code></pre>\n<p>or</p>\n<pre><code>pip install git+https://github.com/EGA-archive/crypt4gh.git\n</code></pre>\n<h2>Usage</h2>\n<p>The usual <code>-h</code> flag shows you the different options that the tool accepts.</p>\n<pre>$ crypt4gh -h\n\nUtility <span class=\"k\">for</span> the cryptographic GA4GH standard, reading from stdin and outputting to stdout.\n\nUsage:\n   <span class=\"o\">{</span>PROG<span class=\"o\">}</span> <span class=\"o\">[</span>-hv<span class=\"o\">]</span> <span class=\"o\">[</span>--log &lt;file&gt;<span class=\"o\">]</span> encrypt <span class=\"o\">[</span>--sk &lt;path&gt;<span class=\"o\">]</span> --recipient_pk &lt;path&gt; <span class=\"o\">[</span>--recipient_pk &lt;path&gt;<span class=\"o\">]</span>... <span class=\"o\">[</span>--range &lt;start-end&gt;<span class=\"o\">]</span>\n   <span class=\"o\">{</span>PROG<span class=\"o\">}</span> <span class=\"o\">[</span>-hv<span class=\"o\">]</span> <span class=\"o\">[</span>--log &lt;file&gt;<span class=\"o\">]</span> decrypt <span class=\"o\">[</span>--sk &lt;path&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--sender_pk &lt;path&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--range &lt;start-end&gt;<span class=\"o\">]</span>\n   <span class=\"o\">{</span>PROG<span class=\"o\">}</span> <span class=\"o\">[</span>-hv<span class=\"o\">]</span> <span class=\"o\">[</span>--log &lt;file&gt;<span class=\"o\">]</span> rearrange <span class=\"o\">[</span>--sk &lt;path&gt;<span class=\"o\">]</span> --range &lt;start-end&gt;\n   <span class=\"o\">{</span>PROG<span class=\"o\">}</span> <span class=\"o\">[</span>-hv<span class=\"o\">]</span> <span class=\"o\">[</span>--log &lt;file&gt;<span class=\"o\">]</span> reencrypt <span class=\"o\">[</span>--sk &lt;path&gt;<span class=\"o\">]</span> --recipient_pk &lt;path&gt; <span class=\"o\">[</span>--recipient_pk &lt;path&gt;<span class=\"o\">]</span>... <span class=\"o\">[</span>--trim<span class=\"o\">]</span>\n\nOptions:\n   -h, --help             Prints this <span class=\"nb\">help</span> and <span class=\"nb\">exit</span>\n   -v, --version          Prints the version and exits\n   --log &lt;file&gt;           Path to the logger file <span class=\"o\">(</span>in YML format<span class=\"o\">)</span>\n   --sk &lt;keyfile&gt;         Curve25519-based Private key.\n                          When encrypting, <span class=\"k\">if</span> neither the private key nor C4GH_SECRET_KEY are specified, we generate a new key \n   --recipient_pk &lt;path&gt;  Recipient<span class=\"s1\">'s Curve25519-based Public key</span>\n<span class=\"s1\">   --sender_pk &lt;path&gt;     Peer'</span>s Curve25519-based Public key to verify provenance <span class=\"o\">(</span>akin to signature<span class=\"o\">)</span>\n   --range &lt;start-end&gt;    Byte-range either as  &lt;start-end&gt; or just &lt;start&gt; <span class=\"o\">(</span>Start included, End excluded<span class=\"o\">)</span>\n   -t, --trim             Keep only header packets that you can decrypt\n\n\nEnvironment variables:\n   C4GH_LOG         If defined, it will be used as the default logger\n   C4GH_SECRET_KEY  If defined, it will be used as the default secret key <span class=\"o\">(</span>ie --sk <span class=\"si\">${</span><span class=\"nv\">C4GH_SECRET_KEY</span><span class=\"si\">}</span><span class=\"o\">)</span>\n   C4GH_DEBUG       If True, it will print <span class=\"o\">(</span>a lot of<span class=\"o\">)</span> debug information.\n                    <span class=\"o\">(</span>Watch out: the output contains secrets<span class=\"o\">)</span>\n</pre>\n<h2>Demonstration</h2>\n<p>Alice and Bob generate both a pair of public/private keys.</p>\n<pre>$ crypt4gh-keygen --sk alice.sec --pk alice.pub\n$ crypt4gh-keygen --sk bob.sec --pk bob.pub\n</pre>\n<p>Bob encrypts a file for Alice:</p>\n<pre>$ crypt4gh encrypt --sk bob.sec --recipient_pk alice.pub &lt; file &gt; file.c4gh\n</pre>\n<p>Alice decrypts the encrypted file:</p>\n<pre>$ crypt4gh decrypt --sk alice.sec &lt; file.c4gh\n</pre>\n<p><a href=\"https://asciinema.org/a/mmCBfBdCFfcYCRBuTSe3kjCFs\" rel=\"nofollow\"><img alt=\"asciicast\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca0c9693b136cced4ffe0f266662eb7018b88440/68747470733a2f2f61736369696e656d612e6f72672f612f6d6d4342664264434666635943524275545365336b6a4346732e737667\"></a></p>\n<h2>File Format</h2>\n<p>Refer to the <a href=\"http://samtools.github.io/hts-specs/crypt4gh.pdf\" rel=\"nofollow\">specifications</a> or this <a href=\"https://crypt4gh.readthedocs.io/en/latest/encryption.html\" rel=\"nofollow\">documentation</a>.</p>\n\n          </div>"}, "last_serial": 6829827, "releases": {"1.1": [{"comment_text": "", "digests": {"md5": "e27519772bb8d5043ea104338200bdc8", "sha256": "6a67b4e2c183c8e22d1a37dbc8796bd7c3277be64ed55707124daa745198d383"}, "downloads": -1, "filename": "crypt4gh-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e27519772bb8d5043ea104338200bdc8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 31224, "upload_time": "2020-02-02T14:12:38", "upload_time_iso_8601": "2020-02-02T14:12:38.325569Z", "url": "https://files.pythonhosted.org/packages/46/75/2b951bd86a0023afd137b2833a84948cadda37a582e7075884bdca642a48/crypt4gh-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d763be960afb0acbc12b7f6adc6880b", "sha256": "283d7968d6160c52e665c22e8ac70b90bbd34db4eef616aa04a72ade78795b6c"}, "downloads": -1, "filename": "crypt4gh-1.1.tar.gz", "has_sig": false, "md5_digest": "4d763be960afb0acbc12b7f6adc6880b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22014, "upload_time": "2020-02-02T14:12:40", "upload_time_iso_8601": "2020-02-02T14:12:40.865222Z", "url": "https://files.pythonhosted.org/packages/ad/c8/118c278402a70010e703dce6d7e88625749d579cc0d4115c9da8638b4e59/crypt4gh-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "4777ed5a1d52c730960681a46ad0400d", "sha256": "b14a1b51054a2678b1b9f7f2c17f6501ef7e0b9e2fbbb20cc5bb52c7b0e3c7db"}, "downloads": -1, "filename": "crypt4gh-1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4777ed5a1d52c730960681a46ad0400d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 31464, "upload_time": "2020-03-13T21:35:16", "upload_time_iso_8601": "2020-03-13T21:35:16.760636Z", "url": "https://files.pythonhosted.org/packages/f5/40/e72d5c8be6c5aee9ed496d34a12e5c0051a4da683b736d653461a89e7d42/crypt4gh-1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11dd112350ba7baaa1492c3520e2e9fe", "sha256": "dca8d8bf37a870c7dd4a8c4a3cbedd63f2892f1576451e43810abe2a0929ba10"}, "downloads": -1, "filename": "crypt4gh-1.2.tar.gz", "has_sig": false, "md5_digest": "11dd112350ba7baaa1492c3520e2e9fe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22263, "upload_time": "2020-03-13T21:35:17", "upload_time_iso_8601": "2020-03-13T21:35:17.803021Z", "url": "https://files.pythonhosted.org/packages/c2/73/2326d6d1c394a22fc1d0cd7d1aa009e76bd1ca29c87edd938a61f024a1f1/crypt4gh-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "4c1ac8de54abba02c1ba8f785930208c", "sha256": "8bac1d1b48574055e061ccedb78bc5848d07277dcea61d0adc8d0c03e59a51c6"}, "downloads": -1, "filename": "crypt4gh-1.3a-py3-none-any.whl", "has_sig": false, "md5_digest": "4c1ac8de54abba02c1ba8f785930208c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 31694, "upload_time": "2020-03-17T16:38:05", "upload_time_iso_8601": "2020-03-17T16:38:05.874125Z", "url": "https://files.pythonhosted.org/packages/b7/89/fecdf5ec6f17f15c4ac2676d8faed8d44095973b487d4515b9ce1b514e35/crypt4gh-1.3a-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c516631cdc8e9517683b83e55ed90122", "sha256": "7205c96d70d451fccf095aea5ddf22cf1f6b6d93a65528192995007fd1d2d015"}, "downloads": -1, "filename": "crypt4gh-1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c516631cdc8e9517683b83e55ed90122", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 31694, "upload_time": "2020-03-17T16:38:04", "upload_time_iso_8601": "2020-03-17T16:38:04.852293Z", "url": "https://files.pythonhosted.org/packages/17/d2/46b407e218dc828d0385567d3e781d742b19e0b9140d485c886fef69c844/crypt4gh-1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7634271036834ced9aed6b51a6db680d", "sha256": "e33c4464c108cabef6ebf9d91262a3e1279b24cb2f82c19131e4bd787dd09a19"}, "downloads": -1, "filename": "crypt4gh-1.3.tar.gz", "has_sig": false, "md5_digest": "7634271036834ced9aed6b51a6db680d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22476, "upload_time": "2020-03-17T16:38:06", "upload_time_iso_8601": "2020-03-17T16:38:06.725179Z", "url": "https://files.pythonhosted.org/packages/14/6a/9d6f2cb658bc73d4bd33744cc200280aa477dfbe690ff961e19b9e20bcf6/crypt4gh-1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4c1ac8de54abba02c1ba8f785930208c", "sha256": "8bac1d1b48574055e061ccedb78bc5848d07277dcea61d0adc8d0c03e59a51c6"}, "downloads": -1, "filename": "crypt4gh-1.3a-py3-none-any.whl", "has_sig": false, "md5_digest": "4c1ac8de54abba02c1ba8f785930208c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 31694, "upload_time": "2020-03-17T16:38:05", "upload_time_iso_8601": "2020-03-17T16:38:05.874125Z", "url": "https://files.pythonhosted.org/packages/b7/89/fecdf5ec6f17f15c4ac2676d8faed8d44095973b487d4515b9ce1b514e35/crypt4gh-1.3a-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c516631cdc8e9517683b83e55ed90122", "sha256": "7205c96d70d451fccf095aea5ddf22cf1f6b6d93a65528192995007fd1d2d015"}, "downloads": -1, "filename": "crypt4gh-1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c516631cdc8e9517683b83e55ed90122", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 31694, "upload_time": "2020-03-17T16:38:04", "upload_time_iso_8601": "2020-03-17T16:38:04.852293Z", "url": "https://files.pythonhosted.org/packages/17/d2/46b407e218dc828d0385567d3e781d742b19e0b9140d485c886fef69c844/crypt4gh-1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7634271036834ced9aed6b51a6db680d", "sha256": "e33c4464c108cabef6ebf9d91262a3e1279b24cb2f82c19131e4bd787dd09a19"}, "downloads": -1, "filename": "crypt4gh-1.3.tar.gz", "has_sig": false, "md5_digest": "7634271036834ced9aed6b51a6db680d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22476, "upload_time": "2020-03-17T16:38:06", "upload_time_iso_8601": "2020-03-17T16:38:06.725179Z", "url": "https://files.pythonhosted.org/packages/14/6a/9d6f2cb658bc73d4bd33744cc200280aa477dfbe690ff961e19b9e20bcf6/crypt4gh-1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:04 2020"}