{"info": {"author": "Matt Saxon", "author_email": "saxonmatt@hotmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Home Automation"], "description": "=============\npysonofflanr3\n=============\n\n\n.. image:: https://img.shields.io/pypi/v/pysonofflanr3.svg\n    :target: https://pypi.python.org/pypi/pysonofflanr3\n    :alt: Latest PyPi Release\n\n.. image:: https://img.shields.io/pypi/pyversions/pysonofflanr3.svg?style=flat\n    :target: https://pypi.python.org/pypi/pysonofflanr3\n    :alt: Supported Python Versions\n\n.. image:: https://img.shields.io/travis/mattsaxon/pysonofflan.svg\n    :target: https://travis-ci.org/mattsaxon/pysonofflan\n    :alt: Build Status\n\n.. image:: https://readthedocs.org/projects/pysonofflanr3/badge/?version=latest\n    :target: https://pysonofflanr3.readthedocs.io/\n    :alt: Documentation Status\n\n.. image:: https://coveralls.io/repos/github/mattsaxon/pysonofflan/badge.svg\n    :target: https://coveralls.io/github/mattsaxon/pysonofflan\n    :alt: Code Coverage\n\n.. image:: https://img.shields.io/pypi/wheel/pysonofflanr3.svg\n    :target: https://pypi.org/project/pysonofflanr3/#files\n    :alt: Has Wheel Package\n\n.. image:: https://pyup.io/repos/github/mattsaxon/pysonofflan/shield.svg\n    :target: https://pyup.io/repos/github/mattsaxon/pysonofflan/\n    :alt: Updates\n\n.. image:: https://pyup.io/repos/github/mattsaxon/pysonofflan/python-3-shield.svg\n    :target: https://pyup.io/repos/github/mattsaxon/pysonofflan/\n    :alt: Python 3\n\n.. image:: https://www.buymeacoffee.com/assets/img/guidelines/download-assets-sm-2.svg\n    :target: https://www.buymeacoffee.com/XTOsBAc\n    :alt: Buy Me A Coffee\n\nControl Sonoff devices running original firmware, in LAN mode.\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo control Sonoff switches running the V3+ Itead firmware (tested on 3.0, 3.0.1, 3.1.0, 3.3.0), locally (LAN mode).\n\n**This will only work for Sonoff devices running V3+ of the stock (Itead / eWeLink) firmware. For users of V1.8.0 - V2.6.1, please use**  `PySonoffLAN <https://pypi.org/project/pysonofflan/>`_\n\n\nThis module provides a way to interface with Sonoff smart home devices,\nsuch as smart switches (e.g. Sonoff Basic), plugs (e.g. Sonoff S20),\nand wall switches (e.g. Sonoff Touch), when these devices are in LAN Mode.\n\nLAN Mode is a feature introduced by manufacturer Itead, to allow operation\nlocally when their servers are unavailable.\nFurther details can be found in the `eWeLink LAN Mode guide`__.\n\n__ https://help.ewelink.cc/hc/en-us/articles/360007134171-LAN-Mode-Tutorial\n\nSince mid 2018, the firmware Itead have shipped with most Sonoff devices\nhas provided this feature, allowing devices to be controlled directly\non the local network using a WebSocket connection on port 8081.\n\nFeatures\n--------\n\n* Discover all devices on local network\n* Read device state\n* Switch device ON/OFF\n* Listen for state changes announced by the device (e.g. by physical switch)\n* Activate inching/momentary device, with variable ON time (e.g. 1s)\n\nDocumentation\n------------------\n\n* Documentation: https://pysonofflanr3.readthedocs.io.\n\nInstall\n------------------\n::\n\n    $ pip install pysonofflanr3\n\nCommand-Line Usage\n------------------\n::\n\n    Usage: pysonofflanr3 [OPTIONS] COMMAND [ARGS]...\n\n      A cli tool for controlling Sonoff Smart Switches/Plugs in LAN Mode.\n\n    Options:\n      --host TEXT          IP address or hostname of the device to connect to.\n      --device_id TEXT     Device ID of the device to connect to.\n      --inching TEXT       Number of seconds of \"on\" time if this is an\n                           Inching/Momentary switch.\n      -l, --level LVL  Either CRITICAL, ERROR, WARNING, INFO or DEBUG\n      --help               Show this message and exit.\n      --api_key KEY        Needed for devices not in DIY mode. See https://github.com/mattsaxon/pysonofflan/wiki/Finding-the-API__Key\n\n    Commands:\n      discover  Discover devices in the network\n      listen    Connect to device, print state and repeat\n      off       Turn the device off.\n      on        Turn the device on.\n      state     Connect to device and print current state.\n\nUsage Example\n=======================\n::\n\n    $ pysonofflan discover\n    2019-01-31 00:45:32,074 - info: Attempting to discover Sonoff LAN Mode devices on the local network, please wait...\n    2019-01-31 00:46:24,007 - info: Found Sonoff LAN Mode device at IP 192.168.0.77\n\n    $ pysonofflan --host 192.168.0.77 state\n    2019-01-31 00:41:34,931 - info: Initialising SonoffSwitch with host 192.168.0.77\n    2019-01-31 00:41:35,016 - info: == Device: 10006866e9 (192.168.0.77) ==\n    2019-01-31 00:41:35,016 - info: State: OFF\n\n    $ pysonofflan --host 192.168.0.77 on\n    2019-01-31 00:49:40,334 - info: Initialising SonoffSwitch with host 192.168.0.77\n    2019-01-31 00:49:40,508 - info:\n    2019-01-31 00:49:40,508 - info: Initial state:\n    2019-01-31 00:49:40,508 - info: == Device: 10006866e9 (192.168.0.77) ==\n    2019-01-31 00:49:40,508 - info: State: OFF\n    2019-01-31 00:49:40,508 - info:\n    2019-01-31 00:49:40,508 - info: New state:\n    2019-01-31 00:49:40,508 - info: == Device: 10006866e9 (192.168.0.77) ==\n    2019-01-31 00:49:40,508 - info: State: ON\n\nLibrary Usage\n------------------\n\nAll common, shared functionality is available through :code:`SonoffSwitch` class::\n\n    x = SonoffSwitch(\"192.168.1.50\")\n\nUpon instantiating the SonoffSwitch class, a connection is\ninitiated and device state is populated, but no further action is taken.\n\nFor most use cases, you'll want to make use of the :code:`callback_after_update`\nparameter to do something with the device after a connection has been\ninitialised, for example::\n\n    async def print_state_callback(device):\n        if device.basic_info is not None:\n            print(\"ON\" if device.is_on else \"OFF\")\n            device.shutdown_event_loop()\n\n    SonoffSwitch(\n        host=\"192.168.1.50\",\n        callback_after_update=print_state_callback\n    )\n\nThis example simply connects to the device, prints whether it is currently\n\"ON\" or \"OFF\", then closes the connection. Note, the callback must be\nasynchronous.\n\nModule-specific errors are raised as Exceptions, and are expected\nto be handled by the user of the library.\n\nLicense\n-------\n\n* Free software: MIT license\n\nCredits\n-------\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\nHistory\n=======\n\n1.1.4 (2020-03-29)\n------------------\n* Enabled code to work if device IP address changes\n* Fixed faulty CLI introduced with 1.1.3 (https://github.com/mattsaxon/pysonofflan/issues/65)\n* Removed previous workaround code for earlier version of zeroconf (<=24.4)\n\n1.1.3 (2020-02-16)\n------------------\n* Fixed issue of reconnection that device remains unavailable until state changes\n* Fixed retry code for strip type devices\n\n1.1.2 (deleted release)\n-----------------------\n\n1.1.1 (2020-02-01)\n------------------\n* Optimisations to deal with later zeroconf versions which have some different behaviour\n* Improved error handling of unexpected errors\n\n1.1.0 (2020-01-10)\n------------------\n* First release on PyPI.\n* Forked from PySonoffLAN package (courtesy of Andrew Beveridge)\n* Works on V3 Itead firmware using mDNS for service discovery and REST for service invocation\n* Supports DIY mode as well as 'standard' mode (for standard mode API key is needed to be obtained, e.g. by sniffing LAN)\n* Supports all known devices for switching, although no sensors added at this point\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mattsaxon/pysonofflan", "keywords": "pysonofflanr3,homeassistant", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "pysonofflanr3", "package_url": "https://pypi.org/project/pysonofflanr3/", "platform": "", "project_url": "https://pypi.org/project/pysonofflanr3/", "project_urls": {"Bug Reports": "https://github.com/mattsaxon/pysonofflan/issues/", "Component Docs": "https://pysonofflanr3.readthedocs.io/", "Home Assistant component": "https://github.com/mattsaxon/sonoff-lan-mode-homeassistant/", "Homepage": "https://github.com/mattsaxon/pysonofflan", "Itead Dev Docs": "https://github.com/itead/Sonoff_Devices_DIY_Tools/tree/master/other/"}, "release_url": "https://pypi.org/project/pysonofflanr3/1.1.4/", "requires_dist": ["Click (>=7.0)", "click-log", "pycryptodome", "requests", "zeroconf (>=0.24.5)"], "requires_python": "", "summary": "Interface for Sonoff devices running v3+ Itead firmware.", "version": "1.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/pysonofflanr3\" rel=\"nofollow\"><img alt=\"Latest PyPi Release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/909ab41b705ddda81cfbfcad14d9d6d73627d0bc/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079736f6e6f66666c616e72332e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pysonofflanr3\" rel=\"nofollow\"><img alt=\"Supported Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/56dfa724fec6c160a36741721a81b9d76a12be9f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7079736f6e6f66666c616e72332e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://travis-ci.org/mattsaxon/pysonofflan\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/56c52a4207559c98c86b7e257899005c4a21ab6c/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6d6174747361786f6e2f7079736f6e6f66666c616e2e737667\"></a>\n<a href=\"https://pysonofflanr3.readthedocs.io/\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/784dca63f437801c64faea540d5137ef37b1e052/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7079736f6e6f66666c616e72332f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://coveralls.io/github/mattsaxon/pysonofflan\" rel=\"nofollow\"><img alt=\"Code Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/05e375b73f6cbab6ed76bcb4717ca168f864ea87/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d6174747361786f6e2f7079736f6e6f66666c616e2f62616467652e737667\"></a>\n<a href=\"https://pypi.org/project/pysonofflanr3/#files\" rel=\"nofollow\"><img alt=\"Has Wheel Package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7c28c37049e0848c06002592d1d12afcc3d7c14b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f7079736f6e6f66666c616e72332e737667\"></a>\n<a href=\"https://pyup.io/repos/github/mattsaxon/pysonofflan/\" rel=\"nofollow\"><img alt=\"Updates\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/38409d5f42d0cb440c5da3c04fbb256b8662be13/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f6d6174747361786f6e2f7079736f6e6f66666c616e2f736869656c642e737667\"></a>\n<a href=\"https://pyup.io/repos/github/mattsaxon/pysonofflan/\" rel=\"nofollow\"><img alt=\"Python 3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/45cf0a15605d7d5afe491149036f73bc26afaddc/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f6d6174747361786f6e2f7079736f6e6f66666c616e2f707974686f6e2d332d736869656c642e737667\"></a>\n<a href=\"https://www.buymeacoffee.com/XTOsBAc\" rel=\"nofollow\"><img alt=\"Buy Me A Coffee\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/35ee2a9a8675a07c9356e8e34124b05df2c3a5e0/68747470733a2f2f7777772e6275796d6561636f666665652e636f6d2f6173736574732f696d672f67756964656c696e65732f646f776e6c6f61642d6173736574732d736d2d322e737667\"></a>\n<div id=\"control-sonoff-devices-running-original-firmware-in-lan-mode\">\n<h2>Control Sonoff devices running original firmware, in LAN mode.</h2>\n<p>To control Sonoff switches running the V3+ Itead firmware (tested on 3.0, 3.0.1, 3.1.0, 3.3.0), locally (LAN mode).</p>\n<p><strong>This will only work for Sonoff devices running V3+ of the stock (Itead / eWeLink) firmware. For users of V1.8.0 - V2.6.1, please use</strong>  <a href=\"https://pypi.org/project/pysonofflan/\" rel=\"nofollow\">PySonoffLAN</a></p>\n<p>This module provides a way to interface with Sonoff smart home devices,\nsuch as smart switches (e.g. Sonoff Basic), plugs (e.g. Sonoff S20),\nand wall switches (e.g. Sonoff Touch), when these devices are in LAN Mode.</p>\n<p>LAN Mode is a feature introduced by manufacturer Itead, to allow operation\nlocally when their servers are unavailable.\nFurther details can be found in the <a href=\"https://help.ewelink.cc/hc/en-us/articles/360007134171-LAN-Mode-Tutorial\" rel=\"nofollow\">eWeLink LAN Mode guide</a>.</p>\n<p>Since mid 2018, the firmware Itead have shipped with most Sonoff devices\nhas provided this feature, allowing devices to be controlled directly\non the local network using a WebSocket connection on port 8081.</p>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Discover all devices on local network</li>\n<li>Read device state</li>\n<li>Switch device ON/OFF</li>\n<li>Listen for state changes announced by the device (e.g. by physical switch)</li>\n<li>Activate inching/momentary device, with variable ON time (e.g. 1s)</li>\n</ul>\n</div>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<ul>\n<li>Documentation: <a href=\"https://pysonofflanr3.readthedocs.io\" rel=\"nofollow\">https://pysonofflanr3.readthedocs.io</a>.</li>\n</ul>\n</div>\n<div id=\"install\">\n<h3>Install</h3>\n<pre>$ pip install pysonofflanr3\n</pre>\n</div>\n<div id=\"command-line-usage\">\n<h3>Command-Line Usage</h3>\n<pre>Usage: pysonofflanr3 [OPTIONS] COMMAND [ARGS]...\n\n  A cli tool for controlling Sonoff Smart Switches/Plugs in LAN Mode.\n\nOptions:\n  --host TEXT          IP address or hostname of the device to connect to.\n  --device_id TEXT     Device ID of the device to connect to.\n  --inching TEXT       Number of seconds of \"on\" time if this is an\n                       Inching/Momentary switch.\n  -l, --level LVL  Either CRITICAL, ERROR, WARNING, INFO or DEBUG\n  --help               Show this message and exit.\n  --api_key KEY        Needed for devices not in DIY mode. See https://github.com/mattsaxon/pysonofflan/wiki/Finding-the-API__Key\n\nCommands:\n  discover  Discover devices in the network\n  listen    Connect to device, print state and repeat\n  off       Turn the device off.\n  on        Turn the device on.\n  state     Connect to device and print current state.\n</pre>\n<div id=\"usage-example\">\n<h4>Usage Example</h4>\n<pre>$ pysonofflan discover\n2019-01-31 00:45:32,074 - info: Attempting to discover Sonoff LAN Mode devices on the local network, please wait...\n2019-01-31 00:46:24,007 - info: Found Sonoff LAN Mode device at IP 192.168.0.77\n\n$ pysonofflan --host 192.168.0.77 state\n2019-01-31 00:41:34,931 - info: Initialising SonoffSwitch with host 192.168.0.77\n2019-01-31 00:41:35,016 - info: == Device: 10006866e9 (192.168.0.77) ==\n2019-01-31 00:41:35,016 - info: State: OFF\n\n$ pysonofflan --host 192.168.0.77 on\n2019-01-31 00:49:40,334 - info: Initialising SonoffSwitch with host 192.168.0.77\n2019-01-31 00:49:40,508 - info:\n2019-01-31 00:49:40,508 - info: Initial state:\n2019-01-31 00:49:40,508 - info: == Device: 10006866e9 (192.168.0.77) ==\n2019-01-31 00:49:40,508 - info: State: OFF\n2019-01-31 00:49:40,508 - info:\n2019-01-31 00:49:40,508 - info: New state:\n2019-01-31 00:49:40,508 - info: == Device: 10006866e9 (192.168.0.77) ==\n2019-01-31 00:49:40,508 - info: State: ON\n</pre>\n</div>\n</div>\n<div id=\"library-usage\">\n<h3>Library Usage</h3>\n<p>All common, shared functionality is available through <code>SonoffSwitch</code> class:</p>\n<pre>x = SonoffSwitch(\"192.168.1.50\")\n</pre>\n<p>Upon instantiating the SonoffSwitch class, a connection is\ninitiated and device state is populated, but no further action is taken.</p>\n<p>For most use cases, you\u2019ll want to make use of the <code>callback_after_update</code>\nparameter to do something with the device after a connection has been\ninitialised, for example:</p>\n<pre>async def print_state_callback(device):\n    if device.basic_info is not None:\n        print(\"ON\" if device.is_on else \"OFF\")\n        device.shutdown_event_loop()\n\nSonoffSwitch(\n    host=\"192.168.1.50\",\n    callback_after_update=print_state_callback\n)\n</pre>\n<p>This example simply connects to the device, prints whether it is currently\n\u201cON\u201d or \u201cOFF\u201d, then closes the connection. Note, the callback must be\nasynchronous.</p>\n<p>Module-specific errors are raised as Exceptions, and are expected\nto be handled by the user of the library.</p>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<ul>\n<li>Free software: MIT license</li>\n</ul>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<p>This package was created with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> and the <a href=\"https://github.com/audreyr/cookiecutter-pypackage\" rel=\"nofollow\">audreyr/cookiecutter-pypackage</a> project template.</p>\n<div id=\"history\">\n<h4>History</h4>\n</div>\n</div>\n<div id=\"id2\">\n<h3>1.1.4 (2020-03-29)</h3>\n<ul>\n<li>Enabled code to work if device IP address changes</li>\n<li>Fixed faulty CLI introduced with 1.1.3 (<a href=\"https://github.com/mattsaxon/pysonofflan/issues/65\" rel=\"nofollow\">https://github.com/mattsaxon/pysonofflan/issues/65</a>)</li>\n<li>Removed previous workaround code for earlier version of zeroconf (&lt;=24.4)</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.1.3 (2020-02-16)</h3>\n<ul>\n<li>Fixed issue of reconnection that device remains unavailable until state changes</li>\n<li>Fixed retry code for strip type devices</li>\n</ul>\n</div>\n<div id=\"deleted-release\">\n<h3>1.1.2 (deleted release)</h3>\n</div>\n<div id=\"id4\">\n<h3>1.1.1 (2020-02-01)</h3>\n<ul>\n<li>Optimisations to deal with later zeroconf versions which have some different behaviour</li>\n<li>Improved error handling of unexpected errors</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.1.0 (2020-01-10)</h3>\n<ul>\n<li>First release on PyPI.</li>\n<li>Forked from PySonoffLAN package (courtesy of Andrew Beveridge)</li>\n<li>Works on V3 Itead firmware using mDNS for service discovery and REST for service invocation</li>\n<li>Supports DIY mode as well as \u2018standard\u2019 mode (for standard mode API key is needed to be obtained, e.g. by sniffing LAN)</li>\n<li>Supports all known devices for switching, although no sensors added at this point</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6907020, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "533b7d2179a116542df53f950177f029", "sha256": "1fd9cead4615a030e86a1320d3f164cd9561b8f8d722d42ea27fc1eb53b26c77"}, "downloads": -1, "filename": "pysonofflanr3-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "533b7d2179a116542df53f950177f029", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19843, "upload_time": "2020-01-10T16:29:51", "upload_time_iso_8601": "2020-01-10T16:29:51.786790Z", "url": "https://files.pythonhosted.org/packages/bc/76/947f71fa8399af69b1938f94d762806e2ddddaed6667f6b77585a15e2a7a/pysonofflanr3-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5f33a5468ef09b354edcd12c877ae9da", "sha256": "b10fa29f722a8a9fc4b6dbfd7ad2beb696fe60fb8bbc161533080dba83a3aa8f"}, "downloads": -1, "filename": "pysonofflanr3-1.1.0.tar.gz", "has_sig": false, "md5_digest": "5f33a5468ef09b354edcd12c877ae9da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25979, "upload_time": "2020-01-10T16:29:55", "upload_time_iso_8601": "2020-01-10T16:29:55.470954Z", "url": "https://files.pythonhosted.org/packages/42/9b/8fe782d6f293f4ff2a135a5c8fcc0cc70aa28aab9cd0323d4afa7599a243/pysonofflanr3-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "55e54d20316b9df140225a4b6b85863c", "sha256": "bf84980c5364a5e1b3737457b9ce670ca0028c9636e317db9b7750fec9f89295"}, "downloads": -1, "filename": "pysonofflanr3-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "55e54d20316b9df140225a4b6b85863c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20188, "upload_time": "2020-02-01T23:18:18", "upload_time_iso_8601": "2020-02-01T23:18:18.385208Z", "url": "https://files.pythonhosted.org/packages/88/1e/eb05eb1463b1d3f107e199dc7932636120ac46b7d0c2b63d5853fba4a109/pysonofflanr3-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dbb34f7103e2d8bb4b6b3c4b53535ad6", "sha256": "eb4412b3ab7d3ae3062eea76e44163c7015647220b2c6077a64d3779b54987d1"}, "downloads": -1, "filename": "pysonofflanr3-1.1.1.tar.gz", "has_sig": false, "md5_digest": "dbb34f7103e2d8bb4b6b3c4b53535ad6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26669, "upload_time": "2020-02-01T23:18:19", "upload_time_iso_8601": "2020-02-01T23:18:19.874609Z", "url": "https://files.pythonhosted.org/packages/49/cf/6e5ff0cd2a7bcbaa417d94d12d0889f43f39b4ef8244bc2ede4342985db5/pysonofflanr3-1.1.1.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "abe0562b227d403099e5b2063a7aaee8", "sha256": "3fbed7b305d5688a4558ae198c7282a478065e5357bf8a7450c764896feec25e"}, "downloads": -1, "filename": "pysonofflanr3-1.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "abe0562b227d403099e5b2063a7aaee8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20467, "upload_time": "2020-02-16T16:43:13", "upload_time_iso_8601": "2020-02-16T16:43:13.164674Z", "url": "https://files.pythonhosted.org/packages/b2/6b/29f9eb96e7c304262c58a70311f81007c2edb65702505428ccd173ce424a/pysonofflanr3-1.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e7880596efade230446d10992417e56", "sha256": "5179641ecd1d5cabdd62b6f13f4821aeec4982726dd3a0d37deb2260e2472b48"}, "downloads": -1, "filename": "pysonofflanr3-1.1.3.tar.gz", "has_sig": false, "md5_digest": "0e7880596efade230446d10992417e56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27787, "upload_time": "2020-02-16T16:43:14", "upload_time_iso_8601": "2020-02-16T16:43:14.427927Z", "url": "https://files.pythonhosted.org/packages/bd/72/5896ab70acc7437afc147749e2849a22285da6f04e68a9839aea7280034e/pysonofflanr3-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "3c823ba5cf68634f759422b0b6dcf759", "sha256": "fa8c4a2078de97266d15932c60e3c1e1b8b7032cc88ea1beef8d9b5ed1d75a72"}, "downloads": -1, "filename": "pysonofflanr3-1.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3c823ba5cf68634f759422b0b6dcf759", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20739, "upload_time": "2020-03-29T14:59:38", "upload_time_iso_8601": "2020-03-29T14:59:38.191699Z", "url": "https://files.pythonhosted.org/packages/3b/5b/9b5ae14700154a828d55c2fbb8906db7315f0ab8f8de8d9bce40cc7a0ea9/pysonofflanr3-1.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51303f9123055a283cb52014bc2b021a", "sha256": "fd77c2e4e8dec6b3d3408eaca41b333389720d75d722f630a64e999b0ea52a4a"}, "downloads": -1, "filename": "pysonofflanr3-1.1.4.tar.gz", "has_sig": false, "md5_digest": "51303f9123055a283cb52014bc2b021a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28185, "upload_time": "2020-03-29T14:59:39", "upload_time_iso_8601": "2020-03-29T14:59:39.188743Z", "url": "https://files.pythonhosted.org/packages/e0/b6/019eba10a301db90c3cb84cd696957ac12fcca38941a6e4576c4aa029888/pysonofflanr3-1.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3c823ba5cf68634f759422b0b6dcf759", "sha256": "fa8c4a2078de97266d15932c60e3c1e1b8b7032cc88ea1beef8d9b5ed1d75a72"}, "downloads": -1, "filename": "pysonofflanr3-1.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3c823ba5cf68634f759422b0b6dcf759", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20739, "upload_time": "2020-03-29T14:59:38", "upload_time_iso_8601": "2020-03-29T14:59:38.191699Z", "url": "https://files.pythonhosted.org/packages/3b/5b/9b5ae14700154a828d55c2fbb8906db7315f0ab8f8de8d9bce40cc7a0ea9/pysonofflanr3-1.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51303f9123055a283cb52014bc2b021a", "sha256": "fd77c2e4e8dec6b3d3408eaca41b333389720d75d722f630a64e999b0ea52a4a"}, "downloads": -1, "filename": "pysonofflanr3-1.1.4.tar.gz", "has_sig": false, "md5_digest": "51303f9123055a283cb52014bc2b021a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28185, "upload_time": "2020-03-29T14:59:39", "upload_time_iso_8601": "2020-03-29T14:59:39.188743Z", "url": "https://files.pythonhosted.org/packages/e0/b6/019eba10a301db90c3cb84cd696957ac12fcca38941a6e4576c4aa029888/pysonofflanr3-1.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:21 2020"}