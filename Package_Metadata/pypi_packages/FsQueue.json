{"info": {"author": "FUKUDA Masahiro", "author_email": "masahiro@fukuda.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: Python Software Foundation License", "Operating System :: POSIX", "Programming Language :: Python", "Topic :: Utilities"], "description": "==========\nFsQueue\n==========\n\npython FsQueue is a elastic synchronized queue class.\n\nSource code\n===========\nYou can find here\nhttps://github.com/masahif/python-FsQueue\n\nFeatures\n===========\nThe FsQueue module has almost same as python's queue class.\n\n- FsQueue is elastic.\n- FsQueue is multi process safe. Multi process can work with FsQueue.\n- FsQueue doesn't have max size feature so full() always return False.\n- FsQueue might work as FIFO queue.\n\n\nA quick example\n===================\n\nexample::\n  \n  import sys\n  from multiprocessing import Process\n  from FsQueue import Queue\n  from time import sleep\n  \n  def put(q, num):\n      for i in xrange(num):\n          print \"put:%d\" % i\n          sys.stdout.flush()\n          q.put(i)\n  \n  def get(q, num):\n      for i in xrange(num):\n          sys.stdout.flush()\n          print \"get:%d %d\" % (i, q.get())\n          q.task_done()\n  \n  def process_test():\n      q = Queue(init=True)\n      p0 = Process(target=put, args=(q,1000))\n      p0.start()\n      p0.join()\n      p1 = Process(target=get, args=(q,500))\n      p2 = Process(target=get, args=(q,500))\n      p1.start()\n      p2.start()\n      p1.join()\n      p2.join()\n  \n      if not q.empty():\n          print \"Queue should be empty.\"\n          raise Exception\n  \n  if __name__ == '__main__':\n      process_test()\n  \n\nRecent Change Log\n======================\n\nv1.2\n-------\n * A quick example was changed.\n\nv1.1\n-------\n * First release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/FsQueue/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "FsQueue", "package_url": "https://pypi.org/project/FsQueue/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/FsQueue/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/FsQueue/"}, "release_url": "https://pypi.org/project/FsQueue/1.2/", "requires_dist": null, "requires_python": null, "summary": "Elastic queue based on filesystem.", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>python FsQueue is a elastic synchronized queue class.</p>\n<div id=\"source-code\">\n<h2>Source code</h2>\n<p>You can find here\n<a href=\"https://github.com/masahif/python-FsQueue\" rel=\"nofollow\">https://github.com/masahif/python-FsQueue</a></p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<p>The FsQueue module has almost same as python\u2019s queue class.</p>\n<ul>\n<li>FsQueue is elastic.</li>\n<li>FsQueue is multi process safe. Multi process can work with FsQueue.</li>\n<li>FsQueue doesn\u2019t have max size feature so full() always return False.</li>\n<li>FsQueue might work as FIFO queue.</li>\n</ul>\n</div>\n<div id=\"a-quick-example\">\n<h2>A quick example</h2>\n<p>example:</p>\n<pre>import sys\nfrom multiprocessing import Process\nfrom FsQueue import Queue\nfrom time import sleep\n\ndef put(q, num):\n    for i in xrange(num):\n        print \"put:%d\" % i\n        sys.stdout.flush()\n        q.put(i)\n\ndef get(q, num):\n    for i in xrange(num):\n        sys.stdout.flush()\n        print \"get:%d %d\" % (i, q.get())\n        q.task_done()\n\ndef process_test():\n    q = Queue(init=True)\n    p0 = Process(target=put, args=(q,1000))\n    p0.start()\n    p0.join()\n    p1 = Process(target=get, args=(q,500))\n    p2 = Process(target=get, args=(q,500))\n    p1.start()\n    p2.start()\n    p1.join()\n    p2.join()\n\n    if not q.empty():\n        print \"Queue should be empty.\"\n        raise Exception\n\nif __name__ == '__main__':\n    process_test()\n</pre>\n</div>\n<div id=\"recent-change-log\">\n<h2>Recent Change Log</h2>\n<div id=\"v1-2\">\n<h3>v1.2</h3>\n<blockquote>\n<ul>\n<li>A quick example was changed.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"v1-1\">\n<h3>v1.1</h3>\n<blockquote>\n<ul>\n<li>First release</li>\n</ul>\n</blockquote>\n</div>\n</div>\n\n          </div>"}, "last_serial": 784385, "releases": {"1.1": [], "1.2": [{"comment_text": "", "digests": {"md5": "9e51c3a6a6aacd8ba6c82362d2acf89d", "sha256": "3e4c00d6edfda144ff3015a25b47e5a6cb613d02148cdaf48241f9a26e880615"}, "downloads": -1, "filename": "FsQueue-1.2.tar.gz", "has_sig": false, "md5_digest": "9e51c3a6a6aacd8ba6c82362d2acf89d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5063, "upload_time": "2011-04-14T09:27:12", "upload_time_iso_8601": "2011-04-14T09:27:12.620099Z", "url": "https://files.pythonhosted.org/packages/77/4e/68438e2fb9521729b86ffd72be71f3e08b1ab4dd89adb40bc9810acff2da/FsQueue-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9e51c3a6a6aacd8ba6c82362d2acf89d", "sha256": "3e4c00d6edfda144ff3015a25b47e5a6cb613d02148cdaf48241f9a26e880615"}, "downloads": -1, "filename": "FsQueue-1.2.tar.gz", "has_sig": false, "md5_digest": "9e51c3a6a6aacd8ba6c82362d2acf89d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5063, "upload_time": "2011-04-14T09:27:12", "upload_time_iso_8601": "2011-04-14T09:27:12.620099Z", "url": "https://files.pythonhosted.org/packages/77/4e/68438e2fb9521729b86ffd72be71f3e08b1ab4dd89adb40bc9810acff2da/FsQueue-1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:02 2020"}