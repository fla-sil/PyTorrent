{"info": {"author": "Nicolas No\u00e9", "author_email": "nicolas@niconoe.eu", "bugtrack_url": null, "classifiers": [], "description": "What is it ?\n============\n\nA simple Django TemplateTag (named compute\\_tag\\_cloud) to help in the\ncreation of tag clouds.\n\nTiny tutorial\n=============\n\nInstall the app in your Django project\n--------------------------------------\n\nThis should be as simple as \n\n::\n\n    pip install django-nuages-tag\n\nand adding \u2018django\\_nuages\\_tag\u2019 to your ``INSTALLED_APPS`` settings.\n\nExample usage\n-------------\n\n1. Source data\n~~~~~~~~~~~~~~\n\nGiven that we have a my\\_favourite\\_tools context variable defined like\nthis:\n\n::\n\n    my_favourite_tools = [{'name': 'Python', 'interest': 30},\n                          {'name': 'Django', 'interest': 70},\n                          {'name': 'Ruby', 'interest': 6}]\n\nNote: example shows a simple list, but **this also works with a Django\nQuerySet**.\n\n2. Compute the tag cloud\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nWe can now do:\n\n::\n\n    {% load django_nuages_tag %}\n    \n    {% compute_tag_cloud my_favourite_tools interest font_size 10 100 lin %}\n\ncompute\\_tag\\_cloud will add a ``font_size`` attribute to each element\nin ``my_favourite_tools`` that is contained between 10 and 100 and is\nrepresentative of the value of ``interest``. The last parameter\n(``lin``) asks to use a linear formula to compute this tag cloud.\nAnother option is to use a logarithmic formula (use the ``log``\nparameter). You should test both options, but ``log`` will probably give\nyou better results if there is a large variation in the values you want\nto compute. NOTE: 0 and negative values will be computed to 0 (with both formulas).\n\nOur source data now looks like:\n\n::\n\n    my_favourite_tools = [{'name': 'Python', 'interest': 30, 'font_size': 43.75},\n                          {'name': 'Django', 'interest': 70, 'font_size': 100},\n                          {'name': 'Ruby', 'interest': 6, 'font_size': 10}]\n\n3. Render the tag cloud\n~~~~~~~~~~~~~~~~~~~~~~~\n\nThis can be done very easily with the ``for`` tag and basic HTML/CSS.\nFor example:\n\n::\n\n    {% for tool in my_favourite_tools %}\n      <span style=\"font-size: {{ tool.font_size }}px;\"> {{ tool.name }} </span>\n    {% endfor %}\n\nNotes\n-----\n\n-  ``compute_tag_cloud`` can be called multiple times in a row to\n   generate multiple values. We can for example compute the font size\n   (between 10 and 55), but also the margin (between 5 and 28) and the\n   opacity (between 0.7 and 1) of the text with something like:\n\n   ::\n        \n       {% load django_nuages_tag %}\n\n       {% compute_tag_cloud my_favourite_tools interest font_size 10 55 lin %}\n       {% compute_tag_cloud my_favourite_tools interest margin 5 28 lin %}\n       {% compute_tag_cloud my_favourite_tools interest opacity 0.7 1 lin %}\n\n       {% for tool in my_favourite_tools %}\n         <span style=\"font-size: {{ tool.font_size }}px; margin: {{ tool.margin }}px; opacity: {{ tool.opacity }}\">{{ tool.name }}</span>\n       {% endfor %}\n       \n- The ``counter`` parameter (``interest`` in our example) can be an attribute, a method to be called or a dictionary key.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/niconoe/django-nuages-tag/", "keywords": null, "license": "BSD licence, see LICENCE.txt", "maintainer": null, "maintainer_email": null, "name": "django-nuages-tag", "package_url": "https://pypi.org/project/django-nuages-tag/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-nuages-tag/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/niconoe/django-nuages-tag/"}, "release_url": "https://pypi.org/project/django-nuages-tag/0.1.3/", "requires_dist": null, "requires_python": null, "summary": "A simple Django TemplateTag (compute_tag_cloud) to help in the creation of tag clouds.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"what-is-it\">\n<h2>What is it ?</h2>\n<p>A simple Django TemplateTag (named compute_tag_cloud) to help in the\ncreation of tag clouds.</p>\n</div>\n<div id=\"tiny-tutorial\">\n<h2>Tiny tutorial</h2>\n<div id=\"install-the-app-in-your-django-project\">\n<h3>Install the app in your Django project</h3>\n<p>This should be as simple as</p>\n<pre>pip install django-nuages-tag\n</pre>\n<p>and adding \u2018django_nuages_tag\u2019 to your <tt>INSTALLED_APPS</tt> settings.</p>\n</div>\n<div id=\"example-usage\">\n<h3>Example usage</h3>\n<div id=\"source-data\">\n<h4>1. Source data</h4>\n<p>Given that we have a my_favourite_tools context variable defined like\nthis:</p>\n<pre>my_favourite_tools = [{'name': 'Python', 'interest': 30},\n                      {'name': 'Django', 'interest': 70},\n                      {'name': 'Ruby', 'interest': 6}]\n</pre>\n<p>Note: example shows a simple list, but <strong>this also works with a Django\nQuerySet</strong>.</p>\n</div>\n<div id=\"compute-the-tag-cloud\">\n<h4>2. Compute the tag cloud</h4>\n<p>We can now do:</p>\n<pre>{% load django_nuages_tag %}\n\n{% compute_tag_cloud my_favourite_tools interest font_size 10 100 lin %}\n</pre>\n<p>compute_tag_cloud will add a <tt>font_size</tt> attribute to each element\nin <tt>my_favourite_tools</tt> that is contained between 10 and 100 and is\nrepresentative of the value of <tt>interest</tt>. The last parameter\n(<tt>lin</tt>) asks to use a linear formula to compute this tag cloud.\nAnother option is to use a logarithmic formula (use the <tt>log</tt>\nparameter). You should test both options, but <tt>log</tt> will probably give\nyou better results if there is a large variation in the values you want\nto compute. NOTE: 0 and negative values will be computed to 0 (with both formulas).</p>\n<p>Our source data now looks like:</p>\n<pre>my_favourite_tools = [{'name': 'Python', 'interest': 30, 'font_size': 43.75},\n                      {'name': 'Django', 'interest': 70, 'font_size': 100},\n                      {'name': 'Ruby', 'interest': 6, 'font_size': 10}]\n</pre>\n</div>\n<div id=\"render-the-tag-cloud\">\n<h4>3. Render the tag cloud</h4>\n<p>This can be done very easily with the <tt>for</tt> tag and basic HTML/CSS.\nFor example:</p>\n<pre>{% for tool in my_favourite_tools %}\n  &lt;span style=\"font-size: {{ tool.font_size }}px;\"&gt; {{ tool.name }} &lt;/span&gt;\n{% endfor %}\n</pre>\n</div>\n</div>\n<div id=\"notes\">\n<h3>Notes</h3>\n<ul>\n<li><p><tt>compute_tag_cloud</tt> can be called multiple times in a row to\ngenerate multiple values. We can for example compute the font size\n(between 10 and 55), but also the margin (between 5 and 28) and the\nopacity (between 0.7 and 1) of the text with something like:</p>\n<pre>{% load django_nuages_tag %}\n\n{% compute_tag_cloud my_favourite_tools interest font_size 10 55 lin %}\n{% compute_tag_cloud my_favourite_tools interest margin 5 28 lin %}\n{% compute_tag_cloud my_favourite_tools interest opacity 0.7 1 lin %}\n\n{% for tool in my_favourite_tools %}\n  &lt;span style=\"font-size: {{ tool.font_size }}px; margin: {{ tool.margin }}px; opacity: {{ tool.opacity }}\"&gt;{{ tool.name }}&lt;/span&gt;\n{% endfor %}\n</pre>\n</li>\n<li><p>The <tt>counter</tt> parameter (<tt>interest</tt> in our example) can be an attribute, a method to be called or a dictionary key.</p>\n</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 790182, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6fb149dcf11b6cb64fb21dc71d0e2c13", "sha256": "b50290f18980c011e9aa8c7738e8715294eeb6fba1e3f41c35407e4061654c89"}, "downloads": -1, "filename": "django-nuages-tag-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6fb149dcf11b6cb64fb21dc71d0e2c13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5476, "upload_time": "2012-08-09T11:42:19", "upload_time_iso_8601": "2012-08-09T11:42:19.555640Z", "url": "https://files.pythonhosted.org/packages/3d/d7/c49987052f014987eea07d0f48f00009ad21e400185c0cf6027858b9c188/django-nuages-tag-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "5e767e41908c844d3679f8a9b979772a", "sha256": "bce7f983df4f69035c55e5fe168c71a7c427eaf1098c089ba75f361869a40e26"}, "downloads": -1, "filename": "django-nuages-tag-0.1.1.tar.gz", "has_sig": false, "md5_digest": "5e767e41908c844d3679f8a9b979772a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5612, "upload_time": "2012-08-10T10:45:01", "upload_time_iso_8601": "2012-08-10T10:45:01.988760Z", "url": "https://files.pythonhosted.org/packages/b3/ae/ee228df327daa55aa1ab699b74342f6a6f3da20424734803e77609386cbb/django-nuages-tag-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "a698f45005d0ba25ebe9ad03a1a1c49c", "sha256": "247e5db4f907f50a73bdfaa6d247c352068013dde05c29b20c1e5390a059138d"}, "downloads": -1, "filename": "django-nuages-tag-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a698f45005d0ba25ebe9ad03a1a1c49c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5893, "upload_time": "2012-10-14T14:10:47", "upload_time_iso_8601": "2012-10-14T14:10:47.545073Z", "url": "https://files.pythonhosted.org/packages/b2/0a/c280190076e76f3d033ecc33172bab3afd259d3bf2402342c60ec08f9040/django-nuages-tag-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "e181a90e14aa2b7756a2afe703ba8b8f", "sha256": "c3281395a4369feb8d2a94d0495331c6ec399f4b2f4c576a7f1ae6aef3017004"}, "downloads": -1, "filename": "django-nuages-tag-0.1.3.tar.gz", "has_sig": false, "md5_digest": "e181a90e14aa2b7756a2afe703ba8b8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6171, "upload_time": "2013-02-12T20:45:47", "upload_time_iso_8601": "2013-02-12T20:45:47.027724Z", "url": "https://files.pythonhosted.org/packages/fc/c9/c13f0c6cc3e0f0ef38b8337cd06dbdb6cc722890c27977393f80b919c7aa/django-nuages-tag-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e181a90e14aa2b7756a2afe703ba8b8f", "sha256": "c3281395a4369feb8d2a94d0495331c6ec399f4b2f4c576a7f1ae6aef3017004"}, "downloads": -1, "filename": "django-nuages-tag-0.1.3.tar.gz", "has_sig": false, "md5_digest": "e181a90e14aa2b7756a2afe703ba8b8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6171, "upload_time": "2013-02-12T20:45:47", "upload_time_iso_8601": "2013-02-12T20:45:47.027724Z", "url": "https://files.pythonhosted.org/packages/fc/c9/c13f0c6cc3e0f0ef38b8337cd06dbdb6cc722890c27977393f80b919c7aa/django-nuages-tag-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:37 2020"}