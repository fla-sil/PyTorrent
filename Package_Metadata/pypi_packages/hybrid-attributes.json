{"info": {"author": "Daniel Neuh\u00e4user", "author_email": "ich@danielneuhaeuser.de", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: CPython"], "description": "Hybrid-Attributes\n=================\n\n.. image:: https://travis-ci.org/DasIch/hybrid-attributes.svg?branch=master\n   :target: https://travis-ci.org/DasIch/hybrid-attributes\n   :alt: Travis CI Status\n\n.. image:: https://codecov.io/gh/DasIch/hybrid-attributes/coverage.svg\n   :target: https://codecov.io/gh/DasIch/hybrid-attributes\n   :alt: Codecov Status\n\n.. image:: https://readthedocs.org/projects/hybrid-attributes/badge/?version=latest\n   :target: http://hybrid-attributes.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation\n\nHybrid-Attributes implements a `hybrid_property` and `hybrid_method`\ndescriptor, which call the underlying function both in a class and instance\ncontext.\n\nAssume you have a class like::\n\n  class Foo:\n      @classmethod\n      def spam(self):\n          return 'spam'\n\n      @property\n      def eggs(self):\n          return 'eggs'\n\n      def ham(self):\n          return 'ham'\n\nYou can get the values returned by calling `.spam()` on the class, accessing\n'.eggs' or calling `.ham()` on an instance:\n\n>>> Foo.spam()\n'spam'\n>>> foo = Foo()\n>>> foo.eggs\n'eggs'\n>>> foo.ham()\n'ham'\n\nIf you access these in a different context, `.spam()` will still be\ncalled with the class as first argument, `.eggs` will return a property object\nonly useful for introspection and `.ham()` will raise an exception because\nthere is no instance for it to be called with.\n\nHybrid-Attributes are different. They don't care about the object are accessed\nthrough, the underlying function will always be called with whatever object\nit's being accessed on. As an example, take this class::\n\n  class HybridFoo:\n      @hybrid_property\n      def spam(self):\n          return 'spam'\n\n      @hybrid_method\n      def eggs(self):\n          return 'eggs'\n\nYou can access the property and call the method on the class or on an instance:\n\n>>> Foo.spam\n'spam'\n>>> Foo.eggs()\n'eggs'\n>>> foo = Foo()\n>>> foo.spam\n'spam'\n>>> foo.eggs\n\nHybrid-Attributes is BSD licensed and available for Python 3.4 and later.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/DasIch/hybrid-attributes/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "hybrid-attributes", "package_url": "https://pypi.org/project/hybrid-attributes/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/hybrid-attributes/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/DasIch/hybrid-attributes/"}, "release_url": "https://pypi.org/project/hybrid-attributes/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Hybrid attributes", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/DasIch/hybrid-attributes\" rel=\"nofollow\"><img alt=\"Travis CI Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9bd952805f2f5ac808977e3fde9b169c16d5371b/68747470733a2f2f7472617669732d63692e6f72672f4461734963682f6879627269642d617474726962757465732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/DasIch/hybrid-attributes\" rel=\"nofollow\"><img alt=\"Codecov Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8bd41c903347c633d10aaa935c9e012a06c2566b/68747470733a2f2f636f6465636f762e696f2f67682f4461734963682f6879627269642d617474726962757465732f636f7665726167652e737667\"></a>\n<a href=\"http://hybrid-attributes.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/338bc33751b79f55d265b3df4cc615267cf2be45/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6879627269642d617474726962757465732f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<p>Hybrid-Attributes implements a <cite>hybrid_property</cite> and <cite>hybrid_method</cite>\ndescriptor, which call the underlying function both in a class and instance\ncontext.</p>\n<p>Assume you have a class like:</p>\n<pre>class Foo:\n    @classmethod\n    def spam(self):\n        return 'spam'\n\n    @property\n    def eggs(self):\n        return 'eggs'\n\n    def ham(self):\n        return 'ham'\n</pre>\n<p>You can get the values returned by calling <cite>.spam()</cite> on the class, accessing\n\u2018.eggs\u2019 or calling <cite>.ham()</cite> on an instance:</p>\n<pre>&gt;&gt;&gt; Foo.spam()\n'spam'\n&gt;&gt;&gt; foo = Foo()\n&gt;&gt;&gt; foo.eggs\n'eggs'\n&gt;&gt;&gt; foo.ham()\n'ham'\n</pre>\n<p>If you access these in a different context, <cite>.spam()</cite> will still be\ncalled with the class as first argument, <cite>.eggs</cite> will return a property object\nonly useful for introspection and <cite>.ham()</cite> will raise an exception because\nthere is no instance for it to be called with.</p>\n<p>Hybrid-Attributes are different. They don\u2019t care about the object are accessed\nthrough, the underlying function will always be called with whatever object\nit\u2019s being accessed on. As an example, take this class:</p>\n<pre>class HybridFoo:\n    @hybrid_property\n    def spam(self):\n        return 'spam'\n\n    @hybrid_method\n    def eggs(self):\n        return 'eggs'\n</pre>\n<p>You can access the property and call the method on the class or on an instance:</p>\n<pre>&gt;&gt;&gt; Foo.spam\n'spam'\n&gt;&gt;&gt; Foo.eggs()\n'eggs'\n&gt;&gt;&gt; foo = Foo()\n&gt;&gt;&gt; foo.spam\n'spam'\n&gt;&gt;&gt; foo.eggs\n</pre>\n<p>Hybrid-Attributes is BSD licensed and available for Python 3.4 and later.</p>\n\n          </div>"}, "last_serial": 2226397, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0609d83fd184698921501a3c91bd0059", "sha256": "86690cfbb9546fbd3a51268ee66ab1d7888d7d6db3c88bf6a5c5ebf3c71ddd49"}, "downloads": -1, "filename": "hybrid_attributes-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0609d83fd184698921501a3c91bd0059", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 5030, "upload_time": "2016-07-17T00:02:05", "upload_time_iso_8601": "2016-07-17T00:02:05.584176Z", "url": "https://files.pythonhosted.org/packages/90/38/8a08a1252eeb58a8d9b9d32a9ee6f4b22ac64dcf9613fa87547f5c338eb1/hybrid_attributes-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b1bde0698b73699eb9c755dd03615fe", "sha256": "225d359527abd504de2481e2326fb1b5dab8ac1a371488197efbc4c4c3516a9e"}, "downloads": -1, "filename": "hybrid-attributes-0.1.0.tar.gz", "has_sig": false, "md5_digest": "7b1bde0698b73699eb9c755dd03615fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11742, "upload_time": "2016-07-17T00:02:14", "upload_time_iso_8601": "2016-07-17T00:02:14.567913Z", "url": "https://files.pythonhosted.org/packages/db/40/5fdc85654f40abd47222129b84e987166d3c97ee39f24cbb379adc758b29/hybrid-attributes-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0609d83fd184698921501a3c91bd0059", "sha256": "86690cfbb9546fbd3a51268ee66ab1d7888d7d6db3c88bf6a5c5ebf3c71ddd49"}, "downloads": -1, "filename": "hybrid_attributes-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0609d83fd184698921501a3c91bd0059", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 5030, "upload_time": "2016-07-17T00:02:05", "upload_time_iso_8601": "2016-07-17T00:02:05.584176Z", "url": "https://files.pythonhosted.org/packages/90/38/8a08a1252eeb58a8d9b9d32a9ee6f4b22ac64dcf9613fa87547f5c338eb1/hybrid_attributes-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b1bde0698b73699eb9c755dd03615fe", "sha256": "225d359527abd504de2481e2326fb1b5dab8ac1a371488197efbc4c4c3516a9e"}, "downloads": -1, "filename": "hybrid-attributes-0.1.0.tar.gz", "has_sig": false, "md5_digest": "7b1bde0698b73699eb9c755dd03615fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11742, "upload_time": "2016-07-17T00:02:14", "upload_time_iso_8601": "2016-07-17T00:02:14.567913Z", "url": "https://files.pythonhosted.org/packages/db/40/5fdc85654f40abd47222129b84e987166d3c97ee39f24cbb379adc758b29/hybrid-attributes-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:41 2020"}