{"info": {"author": "RavenDB", "author_email": "support@ravendb.net", "bugtrack_url": null, "classifiers": [], "description": "Overview\n===============\n\nPyRavenDB is a python client api for [RavenDB](https://ravendb.net/), a NoSQL document database.\nThe API can handle most CRUD scenarios, including full support for replication, failover, dynamic queries, etc.\n\n\n.. code-block:: python\n\n    with document_store.DocumentStore(urls=[\"http://localhost:8080\"], database=\"PyRavenDB\") as store:\n        store.initialize()\n        with store.open_session() as session:\n        foo = session.load(\"foos/1\")\n\n\nInstallation\n=============\nThere are three ways to install pyravendb.\n\n1. Install from `PyPi <https://pypi.python.org/pypi>`_, as `pyravendb <https://pypi.python.org/pypi/pyravendb>`_.\n\t.. code-block:: bash\n\n\t    pip install pyravendb\n\n2. Install from source, via PyPi. From pyravendb, download, open the source (pyravendb-x.x.x.zip) and run setup.py.\n\t.. code-block:: bash\n\n          python setup.py install\n\n\n3. Install from source via `GitHub <https://github.com/ravendb/RavenDB-Python-Client>`_.\n\n\t.. code-block:: bash\n\n          git clone https://github.com/IdanHaim/RavenDB-Python-Client.git\n          cd RavenDB-Python-Client\n          git fetch <remote_name> v4.0\n          git checkout v4.0\n          git pull <remote_name> v4.0\n          python setup.py install\n\nUsage\n=====\nLoad a single or several document\\s from the store:\n----------------------------------------------------\n\n .. code-block:: python\n\n    from pyravendb.store import document_store\n\n    store =  document_store.DocumentStore(urls=[\"http://localhost:8080\"], database=\"PyRavenDB\")\n    store.initialize()\n    with store.open_session() as session:\n        foo = session.load(\"foos/1\")\n\n\nload method have the option to track entity for you the only thing you need to do is add ``object_type``  when you call to load\n(load method will return a dynamic_structure object by default) for class with nested object you can call load with ``nested_object_types`` dictionary for the other types. just put in the key the name of the object and in the value his class (without this option you will get the document as it is) .\n\n.. code-block:: python\n\n    foo = session.load(\"foos/1\", object_type=Foo)\n\n.. code-block:: python\n\n    class FooBar(object):\n        def __init__(self,name,foo):\n            self.name = name\n            self.foo = foo\n\n\tfoo_bar = session.load(\"FooBars/1\", object_type=FooBar, nested_object_types={\"foo\":Foo})\n\nTo load several documents at once, supply a list of ids to session.load.\n\n.. code-block:: python\n\n    foo = session.load([\"foos/1\", \"foos/2\", \"foos/3\"], object_type=Foo)\n\nDelete a document\n--------------------\nTo delete a document from the store,  use ```session.delete()``` with the id or entity you would like to delete.\n\n.. code-block:: python\n\n    with store.open_session() as session:\n        foo = session.delete(\"foos/1\")\n\nStore a new document\n-------------------------\nto store a new document, use ```session.store(entity)``` with the entity you would like to store (entity must be an object)\nFor storing with dict we will use database_commands the put command (see the source code for that).\n\n.. code-block:: python\n\n    class Foo(object):\n       def __init__(self, name, key = None):\n           self.name = name\n           self.key = key\n\n    class FooBar(object):\n        def __init__(self, name, foo):\n            self.name = name\n            self.foo = foo\n\n    with store.open_session() as session:\n        foo = Foo(\"PyRavenDB\")\n        session.store(foo)\n        session.save_changes()\n\n**To save all the changes we made we need to call ``session.save_changes()``.**\n\nQuery\n------------\n* ``object_type`` - Give the object type you want to get from query.\n* ``index_name`` -  The name of index you want the query to work on (If empty the index will be dynamic).\n* ``collection_name`` -  Name of the collection (mutually exclusive with indexName).\n* ``is_map_reduce`` - Whether we are querying a map/reduce index(modify how we treat identifier properties).\n* ``wait_for_non_stale_results`` - False by default if True the query will wait until the index will be non stale.\n* ``default_operator`` - The default query operator (OR or AND).\n* ``with_statistics`` - when True the qury will return stats about the query.\n* ``nested_object_types`` - A dict of classes for nested object the key will be the name of the class and the value will be the object we want to get for that attribute\n\n.. code-block:: python\n\n    with store.open_session() as session:\n        query_result = list(session.query().where_equals(\"name\", \"test101\")\n        query_result = list(session.query(object_type=Foo).where_starts_with(\"name\", \"n\"))\n        query_result = list(session.query(object_type=Foo).where_ends_with(\"name\", \"7\"))\n        query_result = list(session.query(object_type=FooBar,nested_object_types={\"foo\":Foo}).where(name=\"foo_bar\"))\n\nYou can also build the query with several options using the builder pattern.\n\n.. code-block:: python\n\n    with store.open_session() as session:\n        list(session.query(wait_for_non_stale_results=True).where_not_none(\"name\").order_by_descending(\"name\"))\n\nFor the query you can also use the ``where`` feature which can get a variable number of arguments (``**kwargs``)\n\n.. code-block:: python\n\n    with store.open_session() as session:\n        query_results = list(session.query().where(name=\"test101\", key=[4, 6, 90]))\n\n``name`` and ``key`` are the field names for which we query\n\nIncludes\n--------------\nA list of the properties we like to include in the query or in load.\nThe include property wont show in our result but when we load or query for it we wont requests it from the server.\nThe includes will save on the session cache.\n\n.. code-block:: python\n\n    class FooBar(object):\n        def __init__(name, foo_key)\n            self.name = name\n            self.foo = foo_key\n\n    store =  document_store.DocumentStore(urls=[\"http://localhost:8080\"], database=\"PyRavenDB\")\n    store.initialize()\n\n    with store.open_session() as session:\n        query_result = list(session.query().where_equals(\"name\", \"testing_includes\").include(\"foo\")\n        foo_bar = session.load(\"FooBars/1\", object_type=FooBar, includes=foo)\n\n\n\nChanges Api\n---------------\nThe RavenDB client offers a push notification feature that allows you to receive messages from a server about events that occurred there.\nYou are able to subscribe to events for all documents, indexes and operations as well as to indicate a particular\none that you are interested in. This mechanism lets you notify users if something has changed without\nthe need to do any expensive polling.\n\n**Example:**\n\n.. code-block:: python\n\n    with document_store.DocumentStore(urls=[\"http://localhost:8080\"], database=\"PyRavenDB\") as store:\n        store.initialize()\n        documents = []\n        indexes = []\n\n        observer = store.changes().all_docuemts()\n        observer.subscribe(documents.append)\n        observer.ensure_subscribe_now()\n\n        observer = store.changes().for_index('Users')\n        observer.subscribe(ActionObserver(on_next=indexes.append))\n        observer.ensure_subscribe_now()\n\n        index_definition_users = IndexDefinition(\"Users\", \"from doc in docs.Users select new {doc.Name}\")\n        index_definition_dogs = IndexDefinition(\"Dogs\", \"from doc in docs.Dogs select new {doc.brand}\")\n\n        store.maintenance.send(PutIndexesOperation(index_definition_dogs, index_definition_users))\n\n        with store.open_session() as session:\n            session.store(User(\"Idan\"), key=\"users/1\")\n            session.save_changes()\n\nIn this example we want to observe to changes from all documents and for index with the name of Users.\nAfter we register the observable we can subscribe for the notification and decide what to do with them (like append).\n\nIf you did not create an Observer for the subscription we will create one for you with the method you put.\n(To create Observer you can make any class that you want that will inherit from the class Observer\ncan be found in pyravendb.changes.observers or to use the ActionObserver).\n\n.. code-block:: python\n\n    class Observer(metaclass=ABCMeta):\n        @abstractmethod\n        def on_completed(self):\n            pass\n\n        @abstractmethod\n        def on_error(self, exception):\n           pass\n\n        @abstractmethod\n        def on_next(self, value):\n           pass\n\n\nWhat`s new\n=============\nMappers\n--------\nmappers have been added to ``DocumentConvention`` to be able to parse custom objects.\nFor using the mappers, only update ``conventions.mappers`` from the ``DocumentStore``\nwith your own dict.\nThe key of the mappers will be the type of the object you want to initialize and the value will be a key, value method:\nthe key will be the property name inside the object and the value will be the value of the property inside the document.\nlike before you must specify the ``object_type`` property to be able to fetch the mapper method that you supplied\nif ``nested_object_types`` is initialized the mappers won't work.\n\n**Example:**\n\n.. code-block:: python\n\n    class Address:\n        def __init__(self, street, city, state):\n            self.street = street\n            self.city = city\n            self.state = state\n\n\n    class Owner:\n        def __init__(self, name, address):\n            self.name = name\n            self.address = address\n\n\n    class Dog:\n        def __init__(self, name, owner):\n            self.name = name\n            self.owner = owner\n\n    # This method will be called for each of the object properties\n    def get_dog(key, value):\n        if not value:\n            return None\n        if key == \"address\":\n            return Address(**value)\n        elif key == \"owner\":\n            return Owner(**value)\n\n\n    address = Address(\"Rub\", \"Unknown\", \"Israel\")\n    owner = Owner(\"Idan\", address)\n    dog = Dog(name=\"Donald\", owner=owner)\n\n    with DocumentStore(urls=[\"http://localhost:8080\"], database=\"PyRavenDB\") as store:\n        store.conventions.mappers.update({Dog: get_dog})\n        store.initialize()\n        with store.open_session() as session:\n            result = session.load(\"dogs/1-A\", object_type=Dog)\n\nBug Tracker\n************\nhttp://issues.hibernatingrhinos.com/issues/RDBC\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ravendb/RavenDB-Python-Client", "keywords": "pyravendb", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyravendb", "package_url": "https://pypi.org/project/pyravendb/", "platform": "", "project_url": "https://pypi.org/project/pyravendb/", "project_urls": {"Homepage": "https://github.com/ravendb/RavenDB-Python-Client"}, "release_url": "https://pypi.org/project/pyravendb/4.0.6.2/", "requires_dist": ["requests (>=2.18.4)", "xxhash (>=1.0.1)", "pyOpenSSL (>=17.2.0)", "ijson (==2.3)", "websocket-client (>=0.46.0)", "inflect (>=1.0.0)"], "requires_python": "", "summary": "This is the official python client for RavenDB v4.0 document database", "version": "4.0.6.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p>PyRavenDB is a python client api for [RavenDB](<a href=\"https://ravendb.net/\" rel=\"nofollow\">https://ravendb.net/</a>), a NoSQL document database.\nThe API can handle most CRUD scenarios, including full support for replication, failover, dynamic queries, etc.</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">document_store</span><span class=\"o\">.</span><span class=\"n\">DocumentStore</span><span class=\"p\">(</span><span class=\"n\">urls</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"http://localhost:8080\"</span><span class=\"p\">],</span> <span class=\"n\">database</span><span class=\"o\">=</span><span class=\"s2\">\"PyRavenDB\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">store</span><span class=\"p\">:</span>\n    <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">initialize</span><span class=\"p\">()</span>\n    <span class=\"k\">with</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">open_session</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n    <span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"foos/1\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>There are three ways to install pyravendb.</p>\n<ol>\n<li><dl>\n<dt>Install from <a href=\"https://pypi.python.org/pypi\" rel=\"nofollow\">PyPi</a>, as <a href=\"https://pypi.python.org/pypi/pyravendb\" rel=\"nofollow\">pyravendb</a>.</dt>\n<dd><pre>pip install pyravendb\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Install from source, via PyPi. From pyravendb, download, open the source (pyravendb-x.x.x.zip) and run setup.py.</dt>\n<dd><pre>python setup.py install\n</pre>\n</dd>\n</dl>\n</li>\n<li><p>Install from source via <a href=\"https://github.com/ravendb/RavenDB-Python-Client\" rel=\"nofollow\">GitHub</a>.</p>\n<blockquote>\n<pre>git clone https://github.com/IdanHaim/RavenDB-Python-Client.git\n<span class=\"nb\">cd</span> RavenDB-Python-Client\ngit fetch &lt;remote_name&gt; v4.0\ngit checkout v4.0\ngit pull &lt;remote_name&gt; v4.0\npython setup.py install\n</pre>\n</blockquote>\n</li>\n</ol>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"load-a-single-or-several-documents-from-the-store\">\n<h3>Load a single or several documents from the store:</h3>\n<blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyravendb.store</span> <span class=\"kn\">import</span> <span class=\"n\">document_store</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span>  <span class=\"n\">document_store</span><span class=\"o\">.</span><span class=\"n\">DocumentStore</span><span class=\"p\">(</span><span class=\"n\">urls</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"http://localhost:8080\"</span><span class=\"p\">],</span> <span class=\"n\">database</span><span class=\"o\">=</span><span class=\"s2\">\"PyRavenDB\"</span><span class=\"p\">)</span>\n<span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">initialize</span><span class=\"p\">()</span>\n<span class=\"k\">with</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">open_session</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n    <span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"foos/1\"</span><span class=\"p\">)</span>\n</pre>\n</blockquote>\n<p>load method have the option to track entity for you the only thing you need to do is add <tt>object_type</tt>  when you call to load\n(load method will return a dynamic_structure object by default) for class with nested object you can call load with <tt>nested_object_types</tt> dictionary for the other types. just put in the key the name of the object and in the value his class (without this option you will get the document as it is) .</p>\n<pre><span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"foos/1\"</span><span class=\"p\">,</span> <span class=\"n\">object_type</span><span class=\"o\">=</span><span class=\"n\">Foo</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"k\">class</span> <span class=\"nc\">FooBar</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"n\">name</span><span class=\"p\">,</span><span class=\"n\">foo</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"n\">foo</span>\n\n    <span class=\"n\">foo_bar</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"FooBars/1\"</span><span class=\"p\">,</span> <span class=\"n\">object_type</span><span class=\"o\">=</span><span class=\"n\">FooBar</span><span class=\"p\">,</span> <span class=\"n\">nested_object_types</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"foo\"</span><span class=\"p\">:</span><span class=\"n\">Foo</span><span class=\"p\">})</span>\n</pre>\n<p>To load several documents at once, supply a list of ids to session.load.</p>\n<pre><span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">([</span><span class=\"s2\">\"foos/1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"foos/2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"foos/3\"</span><span class=\"p\">],</span> <span class=\"n\">object_type</span><span class=\"o\">=</span><span class=\"n\">Foo</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"delete-a-document\">\n<h3>Delete a document</h3>\n<p>To delete a document from the store,  use <tt><span class=\"pre\">`session.delete()`</span></tt> with the id or entity you would like to delete.</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">open_session</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n    <span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"s2\">\"foos/1\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"store-a-new-document\">\n<h3>Store a new document</h3>\n<p>to store a new document, use <tt>`session.store(entity)`</tt> with the entity you would like to store (entity must be an object)\nFor storing with dict we will use database_commands the put command (see the source code for that).</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Foo</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n   <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n       <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n       <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"n\">key</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">FooBar</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">foo</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"n\">foo</span>\n\n<span class=\"k\">with</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">open_session</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n    <span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"n\">Foo</span><span class=\"p\">(</span><span class=\"s2\">\"PyRavenDB\"</span><span class=\"p\">)</span>\n    <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">store</span><span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"p\">)</span>\n    <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">save_changes</span><span class=\"p\">()</span>\n</pre>\n<p><strong>To save all the changes we made we need to call ``session.save_changes()``.</strong></p>\n</div>\n<div id=\"query\">\n<h3>Query</h3>\n<ul>\n<li><tt>object_type</tt> - Give the object type you want to get from query.</li>\n<li><tt>index_name</tt> -  The name of index you want the query to work on (If empty the index will be dynamic).</li>\n<li><tt>collection_name</tt> -  Name of the collection (mutually exclusive with indexName).</li>\n<li><tt>is_map_reduce</tt> - Whether we are querying a map/reduce index(modify how we treat identifier properties).</li>\n<li><tt>wait_for_non_stale_results</tt> - False by default if True the query will wait until the index will be non stale.</li>\n<li><tt>default_operator</tt> - The default query operator (OR or AND).</li>\n<li><tt>with_statistics</tt> - when True the qury will return stats about the query.</li>\n<li><tt>nested_object_types</tt> - A dict of classes for nested object the key will be the name of the class and the value will be the object we want to get for that attribute</li>\n</ul>\n<pre><span class=\"k\">with</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">open_session</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n    <span class=\"n\">query_result</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">where_equals</span><span class=\"p\">(</span><span class=\"s2\">\"name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"test101\"</span><span class=\"p\">)</span>\n    <span class=\"n\">query_result</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">object_type</span><span class=\"o\">=</span><span class=\"n\">Foo</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">where_starts_with</span><span class=\"p\">(</span><span class=\"s2\">\"name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"n\"</span><span class=\"p\">))</span>\n    <span class=\"n\">query_result</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">object_type</span><span class=\"o\">=</span><span class=\"n\">Foo</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">where_ends_with</span><span class=\"p\">(</span><span class=\"s2\">\"name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"7\"</span><span class=\"p\">))</span>\n    <span class=\"n\">query_result</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">object_type</span><span class=\"o\">=</span><span class=\"n\">FooBar</span><span class=\"p\">,</span><span class=\"n\">nested_object_types</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"foo\"</span><span class=\"p\">:</span><span class=\"n\">Foo</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"foo_bar\"</span><span class=\"p\">))</span>\n</pre>\n<p>You can also build the query with several options using the builder pattern.</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">open_session</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n    <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">wait_for_non_stale_results</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">where_not_none</span><span class=\"p\">(</span><span class=\"s2\">\"name\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">order_by_descending</span><span class=\"p\">(</span><span class=\"s2\">\"name\"</span><span class=\"p\">))</span>\n</pre>\n<p>For the query you can also use the <tt>where</tt> feature which can get a variable number of arguments (<tt>**kwargs</tt>)</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">open_session</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n    <span class=\"n\">query_results</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"test101\"</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">]))</span>\n</pre>\n<p><tt>name</tt> and <tt>key</tt> are the field names for which we query</p>\n</div>\n<div id=\"includes\">\n<h3>Includes</h3>\n<p>A list of the properties we like to include in the query or in load.\nThe include property wont show in our result but when we load or query for it we wont requests it from the server.\nThe includes will save on the session cache.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">FooBar</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">foo_key</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">foo</span> <span class=\"o\">=</span> <span class=\"n\">foo_key</span>\n\n<span class=\"n\">store</span> <span class=\"o\">=</span>  <span class=\"n\">document_store</span><span class=\"o\">.</span><span class=\"n\">DocumentStore</span><span class=\"p\">(</span><span class=\"n\">urls</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"http://localhost:8080\"</span><span class=\"p\">],</span> <span class=\"n\">database</span><span class=\"o\">=</span><span class=\"s2\">\"PyRavenDB\"</span><span class=\"p\">)</span>\n<span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">initialize</span><span class=\"p\">()</span>\n\n<span class=\"k\">with</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">open_session</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n    <span class=\"n\">query_result</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">where_equals</span><span class=\"p\">(</span><span class=\"s2\">\"name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"testing_includes\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s2\">\"foo\"</span><span class=\"p\">)</span>\n    <span class=\"n\">foo_bar</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"FooBars/1\"</span><span class=\"p\">,</span> <span class=\"n\">object_type</span><span class=\"o\">=</span><span class=\"n\">FooBar</span><span class=\"p\">,</span> <span class=\"n\">includes</span><span class=\"o\">=</span><span class=\"n\">foo</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"changes-api\">\n<h3>Changes Api</h3>\n<p>The RavenDB client offers a push notification feature that allows you to receive messages from a server about events that occurred there.\nYou are able to subscribe to events for all documents, indexes and operations as well as to indicate a particular\none that you are interested in. This mechanism lets you notify users if something has changed without\nthe need to do any expensive polling.</p>\n<p><strong>Example:</strong></p>\n<pre><span class=\"k\">with</span> <span class=\"n\">document_store</span><span class=\"o\">.</span><span class=\"n\">DocumentStore</span><span class=\"p\">(</span><span class=\"n\">urls</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"http://localhost:8080\"</span><span class=\"p\">],</span> <span class=\"n\">database</span><span class=\"o\">=</span><span class=\"s2\">\"PyRavenDB\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">store</span><span class=\"p\">:</span>\n    <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">initialize</span><span class=\"p\">()</span>\n    <span class=\"n\">documents</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">indexes</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"n\">observer</span> <span class=\"o\">=</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">changes</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">all_docuemts</span><span class=\"p\">()</span>\n    <span class=\"n\">observer</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"n\">documents</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">)</span>\n    <span class=\"n\">observer</span><span class=\"o\">.</span><span class=\"n\">ensure_subscribe_now</span><span class=\"p\">()</span>\n\n    <span class=\"n\">observer</span> <span class=\"o\">=</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">changes</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">for_index</span><span class=\"p\">(</span><span class=\"s1\">'Users'</span><span class=\"p\">)</span>\n    <span class=\"n\">observer</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"n\">ActionObserver</span><span class=\"p\">(</span><span class=\"n\">on_next</span><span class=\"o\">=</span><span class=\"n\">indexes</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">))</span>\n    <span class=\"n\">observer</span><span class=\"o\">.</span><span class=\"n\">ensure_subscribe_now</span><span class=\"p\">()</span>\n\n    <span class=\"n\">index_definition_users</span> <span class=\"o\">=</span> <span class=\"n\">IndexDefinition</span><span class=\"p\">(</span><span class=\"s2\">\"Users\"</span><span class=\"p\">,</span> <span class=\"s2\">\"from doc in docs.Users select new </span><span class=\"si\">{doc.Name}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"n\">index_definition_dogs</span> <span class=\"o\">=</span> <span class=\"n\">IndexDefinition</span><span class=\"p\">(</span><span class=\"s2\">\"Dogs\"</span><span class=\"p\">,</span> <span class=\"s2\">\"from doc in docs.Dogs select new </span><span class=\"si\">{doc.brand}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n    <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">maintenance</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">PutIndexesOperation</span><span class=\"p\">(</span><span class=\"n\">index_definition_dogs</span><span class=\"p\">,</span> <span class=\"n\">index_definition_users</span><span class=\"p\">))</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">open_session</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n        <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">store</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">(</span><span class=\"s2\">\"Idan\"</span><span class=\"p\">),</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s2\">\"users/1\"</span><span class=\"p\">)</span>\n        <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">save_changes</span><span class=\"p\">()</span>\n</pre>\n<p>In this example we want to observe to changes from all documents and for index with the name of Users.\nAfter we register the observable we can subscribe for the notification and decide what to do with them (like append).</p>\n<p>If you did not create an Observer for the subscription we will create one for you with the method you put.\n(To create Observer you can make any class that you want that will inherit from the class Observer\ncan be found in pyravendb.changes.observers or to use the ActionObserver).</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Observer</span><span class=\"p\">(</span><span class=\"n\">metaclass</span><span class=\"o\">=</span><span class=\"n\">ABCMeta</span><span class=\"p\">):</span>\n    <span class=\"nd\">@abstractmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">on_completed</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@abstractmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">on_error</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">exception</span><span class=\"p\">):</span>\n       <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@abstractmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">on_next</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n       <span class=\"k\">pass</span>\n</pre>\n</div>\n</div>\n<div id=\"what-s-new\">\n<h2>What`s new</h2>\n<h2 id=\"mappers\"><span class=\"section-subtitle\">Mappers</span></h2>\n<p>mappers have been added to <tt>DocumentConvention</tt> to be able to parse custom objects.\nFor using the mappers, only update <tt>conventions.mappers</tt> from the <tt>DocumentStore</tt>\nwith your own dict.\nThe key of the mappers will be the type of the object you want to initialize and the value will be a key, value method:\nthe key will be the property name inside the object and the value will be the value of the property inside the document.\nlike before you must specify the <tt>object_type</tt> property to be able to fetch the mapper method that you supplied\nif <tt>nested_object_types</tt> is initialized the mappers won\u2019t work.</p>\n<p><strong>Example:</strong></p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Address</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">street</span><span class=\"p\">,</span> <span class=\"n\">city</span><span class=\"p\">,</span> <span class=\"n\">state</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">street</span> <span class=\"o\">=</span> <span class=\"n\">street</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">city</span> <span class=\"o\">=</span> <span class=\"n\">city</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"n\">state</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Owner</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"n\">address</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Dog</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">owner</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">owner</span> <span class=\"o\">=</span> <span class=\"n\">owner</span>\n\n<span class=\"c1\"># This method will be called for each of the object properties</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_dog</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">value</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n    <span class=\"k\">if</span> <span class=\"n\">key</span> <span class=\"o\">==</span> <span class=\"s2\">\"address\"</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">Address</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">value</span><span class=\"p\">)</span>\n    <span class=\"k\">elif</span> <span class=\"n\">key</span> <span class=\"o\">==</span> <span class=\"s2\">\"owner\"</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">Owner</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"n\">Address</span><span class=\"p\">(</span><span class=\"s2\">\"Rub\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Unknown\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Israel\"</span><span class=\"p\">)</span>\n<span class=\"n\">owner</span> <span class=\"o\">=</span> <span class=\"n\">Owner</span><span class=\"p\">(</span><span class=\"s2\">\"Idan\"</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"p\">)</span>\n<span class=\"n\">dog</span> <span class=\"o\">=</span> <span class=\"n\">Dog</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Donald\"</span><span class=\"p\">,</span> <span class=\"n\">owner</span><span class=\"o\">=</span><span class=\"n\">owner</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">DocumentStore</span><span class=\"p\">(</span><span class=\"n\">urls</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"http://localhost:8080\"</span><span class=\"p\">],</span> <span class=\"n\">database</span><span class=\"o\">=</span><span class=\"s2\">\"PyRavenDB\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">store</span><span class=\"p\">:</span>\n    <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">conventions</span><span class=\"o\">.</span><span class=\"n\">mappers</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span><span class=\"n\">Dog</span><span class=\"p\">:</span> <span class=\"n\">get_dog</span><span class=\"p\">})</span>\n    <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">initialize</span><span class=\"p\">()</span>\n    <span class=\"k\">with</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">open_session</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"dogs/1-A\"</span><span class=\"p\">,</span> <span class=\"n\">object_type</span><span class=\"o\">=</span><span class=\"n\">Dog</span><span class=\"p\">)</span>\n</pre>\n<div id=\"bug-tracker\">\n<h3>Bug Tracker</h3>\n<p><a href=\"http://issues.hibernatingrhinos.com/issues/RDBC\" rel=\"nofollow\">http://issues.hibernatingrhinos.com/issues/RDBC</a></p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5988151, "releases": {"3.5.3.10": [{"comment_text": "", "digests": {"md5": "403ca563cc20644b6116b1e8202a36df", "sha256": "4fb282878f8c937a0050e7985bd8a285ebc610958c77ddcf063caa3e65806e7a"}, "downloads": -1, "filename": "pyravendb-3.5.3.10.tar.gz", "has_sig": false, "md5_digest": "403ca563cc20644b6116b1e8202a36df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29974, "upload_time": "2017-12-12T09:29:21", "upload_time_iso_8601": "2017-12-12T09:29:21.309913Z", "url": "https://files.pythonhosted.org/packages/95/55/8017e06e27bfe1130c3ef2ae2a8e38afd8c1f9219663829bb671d21b8d2f/pyravendb-3.5.3.10.tar.gz", "yanked": false}], "3.5.3.3": [{"comment_text": "", "digests": {"md5": "463e38e5b4c5ab7634fbf2ee5cbdd65c", "sha256": "09470e44e818e8fad0c27dccc2159d6d44132b45d57506130668d470325205c3"}, "downloads": -1, "filename": "pyravendb-3.5.3.3.tar.gz", "has_sig": false, "md5_digest": "463e38e5b4c5ab7634fbf2ee5cbdd65c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29076, "upload_time": "2017-03-05T09:54:35", "upload_time_iso_8601": "2017-03-05T09:54:35.981591Z", "url": "https://files.pythonhosted.org/packages/87/a6/c956d8b0d30bbe71e0f4cf87732a9f3dd655e34d095aa2183e65cea13f4f/pyravendb-3.5.3.3.tar.gz", "yanked": false}], "3.5.3.4": [{"comment_text": "", "digests": {"md5": "75dfdbe6dbaef219d75132ed0937f8e8", "sha256": "65d3fbe0092dbfee9aae36dab92367ceb2fcb2e68e4cbe720c9c0168a4764769"}, "downloads": -1, "filename": "pyravendb-3.5.3.4.tar.gz", "has_sig": false, "md5_digest": "75dfdbe6dbaef219d75132ed0937f8e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29511, "upload_time": "2017-03-21T16:58:52", "upload_time_iso_8601": "2017-03-21T16:58:52.727841Z", "url": "https://files.pythonhosted.org/packages/b0/cb/6327c56abae6acee9c488a12f95770a15578ad8ba6611cb804dc7b5ab79d/pyravendb-3.5.3.4.tar.gz", "yanked": false}], "3.5.3.5": [{"comment_text": "", "digests": {"md5": "72d9a85dfad24add39758ce72146ff62", "sha256": "7ec9299b62f140e9e2811892a97e44eb862f0ac804d4fad38a06588f42b48a9c"}, "downloads": -1, "filename": "pyravendb-3.5.3.5.tar.gz", "has_sig": false, "md5_digest": "72d9a85dfad24add39758ce72146ff62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29769, "upload_time": "2017-03-22T10:02:09", "upload_time_iso_8601": "2017-03-22T10:02:09.179999Z", "url": "https://files.pythonhosted.org/packages/45/aa/46df1feafc5a48da76eee1350e5f7a846daff8fede24f5caf7f75af2baec/pyravendb-3.5.3.5.tar.gz", "yanked": false}], "3.5.3.6": [{"comment_text": "", "digests": {"md5": "a15cbc90f92a178a03777ddec6e5b2b5", "sha256": "afa46c00fa79d11c87aaac43344eed5b6e3b5e6519fa9e76038efe6b63cdc3dc"}, "downloads": -1, "filename": "pyravendb-3.5.3.6.tar.gz", "has_sig": false, "md5_digest": "a15cbc90f92a178a03777ddec6e5b2b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29796, "upload_time": "2017-03-30T11:19:26", "upload_time_iso_8601": "2017-03-30T11:19:26.602714Z", "url": "https://files.pythonhosted.org/packages/fb/3a/91dc28b7b9894ee3b51fed15a113da550d0371b75f5fa1a28523020b96c1/pyravendb-3.5.3.6.tar.gz", "yanked": false}], "3.5.3.7": [{"comment_text": "", "digests": {"md5": "1453fa870d4d5206921e18501e5ac18b", "sha256": "919022797559c41f104dc59b360861eea505e252f7b5a05dc06aeee00f24e5e7"}, "downloads": -1, "filename": "pyravendb-3.5.3.7.tar.gz", "has_sig": false, "md5_digest": "1453fa870d4d5206921e18501e5ac18b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29824, "upload_time": "2017-07-02T12:36:29", "upload_time_iso_8601": "2017-07-02T12:36:29.314682Z", "url": "https://files.pythonhosted.org/packages/8e/18/54e51991bc738c871fb0acd32b37630d9c7b1304954c118fdd40c4e79a31/pyravendb-3.5.3.7.tar.gz", "yanked": false}], "3.5.3.8": [{"comment_text": "", "digests": {"md5": "c87c55e852577363424874287365ae17", "sha256": "2496f0582cc6f366e2ada89cc0da3a261d7aadd6e2a988ca16c50ff7fa1358b6"}, "downloads": -1, "filename": "pyravendb-3.5.3.8.tar.gz", "has_sig": false, "md5_digest": "c87c55e852577363424874287365ae17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29715, "upload_time": "2017-12-05T10:37:47", "upload_time_iso_8601": "2017-12-05T10:37:47.851266Z", "url": "https://files.pythonhosted.org/packages/18/15/d6d943d8d90e92028db5d39edad47809541f5ea5234d3de496d22c8a2278/pyravendb-3.5.3.8.tar.gz", "yanked": false}], "3.5.3.9": [{"comment_text": "", "digests": {"md5": "035c1f8e61cc325731f15d62d11066f3", "sha256": "dc109ebeb9ddc3e0a6cbd2160a35c85e7618bc017809971da65507d4963f50b9"}, "downloads": -1, "filename": "pyravendb-3.5.3.9.tar.gz", "has_sig": false, "md5_digest": "035c1f8e61cc325731f15d62d11066f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30027, "upload_time": "2017-12-11T13:58:42", "upload_time_iso_8601": "2017-12-11T13:58:42.695446Z", "url": "https://files.pythonhosted.org/packages/7e/55/0870718d4ca529a03f71d6e4acdd9be8a169e3ddf4e1cdd94e4ea2a5bab3/pyravendb-3.5.3.9.tar.gz", "yanked": false}], "3.5.4.0": [{"comment_text": "", "digests": {"md5": "9b66bd4d42b721b724b99b5327dcf20e", "sha256": "06a998236785bfaa0125450347ea8e40fbfb95a48b5181735ceb65ca78b289f3"}, "downloads": -1, "filename": "pyravendb-3.5.4.0.tar.gz", "has_sig": false, "md5_digest": "9b66bd4d42b721b724b99b5327dcf20e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30050, "upload_time": "2017-12-14T08:23:36", "upload_time_iso_8601": "2017-12-14T08:23:36.635774Z", "url": "https://files.pythonhosted.org/packages/97/b3/9aa0ef8c6469b737b096330ebf6116d01c2bdabffb20d355cc23e2423486/pyravendb-3.5.4.0.tar.gz", "yanked": false}], "3.5.4.1": [{"comment_text": "", "digests": {"md5": "7f3349cd40141924bd344f51a8a4c9ef", "sha256": "ac25d52805384101af42389e484debe49d1d6016645e28429ce0386e2de1b8fe"}, "downloads": -1, "filename": "pyravendb-3.5.4.1.tar.gz", "has_sig": false, "md5_digest": "7f3349cd40141924bd344f51a8a4c9ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32615, "upload_time": "2017-12-20T10:28:39", "upload_time_iso_8601": "2017-12-20T10:28:39.665155Z", "url": "https://files.pythonhosted.org/packages/af/8c/d0accc7ac374425e7ed4ce7945da79ebe4a9cdfa1ffd8270b775ada0c58d/pyravendb-3.5.4.1.tar.gz", "yanked": false}], "3.5.4.2": [{"comment_text": "", "digests": {"md5": "5550d4811b2ec10a2d7e415fe5b90904", "sha256": "782992afd10903afb92c0664c41a1b835bb59bee0a6b0967c803035807480b27"}, "downloads": -1, "filename": "pyravendb-3.5.4.2.tar.gz", "has_sig": false, "md5_digest": "5550d4811b2ec10a2d7e415fe5b90904", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32646, "upload_time": "2018-03-05T12:20:49", "upload_time_iso_8601": "2018-03-05T12:20:49.525211Z", "url": "https://files.pythonhosted.org/packages/a8/42/b872dd79db8dc382ab343c010a7c404fe3855c82a9a3ab998c83721b1cad/pyravendb-3.5.4.2.tar.gz", "yanked": false}], "3.5.4.3": [{"comment_text": "", "digests": {"md5": "31938b689069fbf4cc9a896656e0be4e", "sha256": "24a1e2bee45ea4bf92c602613d4c6029c83c84768bd85ffa9dcc6dfd1a9ea74a"}, "downloads": -1, "filename": "pyravendb-3.5.4.3.tar.gz", "has_sig": false, "md5_digest": "31938b689069fbf4cc9a896656e0be4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31595, "upload_time": "2018-03-06T16:08:20", "upload_time_iso_8601": "2018-03-06T16:08:20.108140Z", "url": "https://files.pythonhosted.org/packages/78/c9/03601ad46e04f7125b6d52b6372455af922f28242dd0ba616881b501f3e1/pyravendb-3.5.4.3.tar.gz", "yanked": false}], "4.0.1.1": [{"comment_text": "", "digests": {"md5": "a190e82553019997cc968c0024a4ba24", "sha256": "53931ddd963d5af32141e80cc29b0317b01e1078191cc78a786dae32f837dd8f"}, "downloads": -1, "filename": "pyravendb-4.0.1.1.tar.gz", "has_sig": false, "md5_digest": "a190e82553019997cc968c0024a4ba24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51558, "upload_time": "2017-09-18T13:36:28", "upload_time_iso_8601": "2017-09-18T13:36:28.877171Z", "url": "https://files.pythonhosted.org/packages/42/4e/b90703a7d8f9dc76e115ccd6fb15e53ab545c07ef877389955198a8e83f2/pyravendb-4.0.1.1.tar.gz", "yanked": false}], "4.0.1.10": [{"comment_text": "", "digests": {"md5": "2f75e427ff135f1cda1287b8cb542948", "sha256": "fd37db50736af4187ef3f21830df33be0267da8a549f064bcf9af7bc89c0c096"}, "downloads": -1, "filename": "pyravendb-4.0.1.10.tar.gz", "has_sig": false, "md5_digest": "2f75e427ff135f1cda1287b8cb542948", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54854, "upload_time": "2018-01-04T16:03:26", "upload_time_iso_8601": "2018-01-04T16:03:26.632184Z", "url": "https://files.pythonhosted.org/packages/4e/8e/98cd5d705546a4b9b9bf2ae3847acfdaf652a39e7b4166cfa6423f2f4c35/pyravendb-4.0.1.10.tar.gz", "yanked": false}], "4.0.1.2": [{"comment_text": "", "digests": {"md5": "400bf2714f44abeab587614dce3346c4", "sha256": "d5970c915ae5dba6ec3fbe66a392c49f9f5d2416c84221372e8f95321ea171ac"}, "downloads": -1, "filename": "pyravendb-4.0.1.2.tar.gz", "has_sig": false, "md5_digest": "400bf2714f44abeab587614dce3346c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51569, "upload_time": "2017-09-18T13:40:45", "upload_time_iso_8601": "2017-09-18T13:40:45.055152Z", "url": "https://files.pythonhosted.org/packages/33/c6/74bc6d16df23936a02b030d767bb80a19cc704cdea5c4e9a45f8d72b5c44/pyravendb-4.0.1.2.tar.gz", "yanked": false}], "4.0.1.3": [{"comment_text": "", "digests": {"md5": "58e39cf5aceaefd04ba33c6db1f07571", "sha256": "7197b30079152e7d911bdd1d36f6c0b57a6b4a8258be6bf9714fe4970e7934b2"}, "downloads": -1, "filename": "pyravendb-4.0.1.3.tar.gz", "has_sig": false, "md5_digest": "58e39cf5aceaefd04ba33c6db1f07571", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51735, "upload_time": "2017-09-18T15:13:41", "upload_time_iso_8601": "2017-09-18T15:13:41.504782Z", "url": "https://files.pythonhosted.org/packages/4c/b8/54eaa5d6202da74e1afae6c69bdaea0541d23caa977cfe536cbf7f199b6b/pyravendb-4.0.1.3.tar.gz", "yanked": false}], "4.0.1.4": [{"comment_text": "", "digests": {"md5": "df9fec6900d58eb4e1feebe00b344371", "sha256": "5173fbb4820259717bedee82e8245c6998d8ac79cf0e64b7f9db2ebc12b6bb88"}, "downloads": -1, "filename": "pyravendb-4.0.1.4.tar.gz", "has_sig": false, "md5_digest": "df9fec6900d58eb4e1feebe00b344371", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53015, "upload_time": "2017-10-01T13:22:20", "upload_time_iso_8601": "2017-10-01T13:22:20.550198Z", "url": "https://files.pythonhosted.org/packages/f9/b5/02e084d47fd4cf67e0c7a8d330623e3d996e99a98614da2df95614b52cda/pyravendb-4.0.1.4.tar.gz", "yanked": false}], "4.0.1.5": [{"comment_text": "", "digests": {"md5": "4c4a123707a678207839aeb531bfb674", "sha256": "a5e0e8ddefbe3a26af3d6fa40e3349c2eef2f5e771a6aad069df5d56602b5277"}, "downloads": -1, "filename": "pyravendb-4.0.1.5.tar.gz", "has_sig": false, "md5_digest": "4c4a123707a678207839aeb531bfb674", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52967, "upload_time": "2017-10-30T20:46:21", "upload_time_iso_8601": "2017-10-30T20:46:21.987565Z", "url": "https://files.pythonhosted.org/packages/ea/e0/c92f31376cf90f35a93cd9b2f64cf24360c29cbdadb00839ef0599c7b655/pyravendb-4.0.1.5.tar.gz", "yanked": false}], "4.0.1.6": [{"comment_text": "", "digests": {"md5": "a8107b4fd0d1e430d8828919323b2dc3", "sha256": "f409cfdd127b15c5319bbdbef2b7492d68347d34e22236b195d2c2619f0bc9e8"}, "downloads": -1, "filename": "pyravendb-4.0.1.6.tar.gz", "has_sig": false, "md5_digest": "a8107b4fd0d1e430d8828919323b2dc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53570, "upload_time": "2017-11-21T14:56:36", "upload_time_iso_8601": "2017-11-21T14:56:36.155157Z", "url": "https://files.pythonhosted.org/packages/12/6c/75dc5e4cb96b81c2d3be79a471085c3fb343100034a79c146f1fbb7e10b9/pyravendb-4.0.1.6.tar.gz", "yanked": false}], "4.0.1.7": [{"comment_text": "", "digests": {"md5": "03156c0df459ca5de9278b0c504ab503", "sha256": "576720a37811fda0247df7e4fd023cdbb56352f4957df7d427a4f66942e572eb"}, "downloads": -1, "filename": "pyravendb-4.0.1.7.tar.gz", "has_sig": false, "md5_digest": "03156c0df459ca5de9278b0c504ab503", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54849, "upload_time": "2017-12-25T14:38:27", "upload_time_iso_8601": "2017-12-25T14:38:27.526351Z", "url": "https://files.pythonhosted.org/packages/fc/3d/384f0d48e6af14ef98b6334612ca135d3ebbbda012ad0a42af77dd828466/pyravendb-4.0.1.7.tar.gz", "yanked": false}], "4.0.1.8": [{"comment_text": "", "digests": {"md5": "8359f7afcdcb4c7245e882a56c290c5c", "sha256": "fe7deccec96f21b4b232c798085d14fd832cc8fa9e37b8373825cb535c6efe08"}, "downloads": -1, "filename": "pyravendb-4.0.1.8.tar.gz", "has_sig": false, "md5_digest": "8359f7afcdcb4c7245e882a56c290c5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54895, "upload_time": "2017-12-25T15:18:49", "upload_time_iso_8601": "2017-12-25T15:18:49.854329Z", "url": "https://files.pythonhosted.org/packages/74/36/104b05e5d05fb3279be5b29f06669a22a91b548c9cde657977cd35ba4bc8/pyravendb-4.0.1.8.tar.gz", "yanked": false}], "4.0.1.9": [{"comment_text": "", "digests": {"md5": "f04da917c69286067b09d6ae62bd913c", "sha256": "cc015462d60fd478256ac22791585317b1e6c5b261d0869c46e6e227a141ce2a"}, "downloads": -1, "filename": "pyravendb-4.0.1.9.tar.gz", "has_sig": false, "md5_digest": "f04da917c69286067b09d6ae62bd913c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54854, "upload_time": "2018-01-04T15:50:18", "upload_time_iso_8601": "2018-01-04T15:50:18.960871Z", "url": "https://files.pythonhosted.org/packages/d0/47/ea1d3dd0607ee8d4ffbfad74ae60362216d1eaa69bc89ce68449c6265262/pyravendb-4.0.1.9.tar.gz", "yanked": false}], "4.0.2.0": [{"comment_text": "", "digests": {"md5": "91b4b7dd10b068b6eb2f83a33266f508", "sha256": "f7ba65fb906a808da216a3ca9aacf9729cde034a6303a08f6e4135887611deec"}, "downloads": -1, "filename": "pyravendb-4.0.2.0.tar.gz", "has_sig": false, "md5_digest": "91b4b7dd10b068b6eb2f83a33266f508", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58920, "upload_time": "2018-01-30T14:15:33", "upload_time_iso_8601": "2018-01-30T14:15:33.938160Z", "url": "https://files.pythonhosted.org/packages/f3/95/7e8a143668bc21a77764d582d6bde762bdea6f0108fc491588bc23131ef2/pyravendb-4.0.2.0.tar.gz", "yanked": false}], "4.0.3.0": [{"comment_text": "", "digests": {"md5": "9d54c25dc5de1f15c79807eac36109db", "sha256": "828c3f8fefe6c8eb175b3cd64b5b3a66c77ed45a42459c1f546418b322c88e48"}, "downloads": -1, "filename": "pyravendb-4.0.3.0.tar.gz", "has_sig": false, "md5_digest": "9d54c25dc5de1f15c79807eac36109db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59723, "upload_time": "2018-03-06T15:57:59", "upload_time_iso_8601": "2018-03-06T15:57:59.707617Z", "url": "https://files.pythonhosted.org/packages/e7/21/ac990b6db053288160df50ad858cfddeb500bdcca1fadb5af8b0ed50418f/pyravendb-4.0.3.0.tar.gz", "yanked": false}], "4.0.3.1": [{"comment_text": "", "digests": {"md5": "6fcb8b4fe43eefd0b2103466ae568ee5", "sha256": "6eae71658a5543a4f495cbe25fca7f7033b48f333eaf143746932c4a238d52dc"}, "downloads": -1, "filename": "pyravendb-4.0.3.1.tar.gz", "has_sig": false, "md5_digest": "6fcb8b4fe43eefd0b2103466ae568ee5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59843, "upload_time": "2018-03-07T14:47:02", "upload_time_iso_8601": "2018-03-07T14:47:02.779066Z", "url": "https://files.pythonhosted.org/packages/54/2b/f0e7581c6afbdc7a7e6b174c276c58fee069471f0a60b7b7e80357f075ac/pyravendb-4.0.3.1.tar.gz", "yanked": false}], "4.0.4.0": [{"comment_text": "", "digests": {"md5": "c240367d614460489af1a11925e58d3e", "sha256": "60fa1b8697905e5edd7abaecbcdc6bca31bef3d5bd31183343dfe3e5cc187fa2"}, "downloads": -1, "filename": "pyravendb-4.0.4.0.tar.gz", "has_sig": false, "md5_digest": "c240367d614460489af1a11925e58d3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61467, "upload_time": "2018-03-21T13:49:56", "upload_time_iso_8601": "2018-03-21T13:49:56.376142Z", "url": "https://files.pythonhosted.org/packages/c4/82/71df250110630df726879a09be504731d14a08f131d1f84fb14fb6b6df04/pyravendb-4.0.4.0.tar.gz", "yanked": false}], "4.0.4.1": [{"comment_text": "", "digests": {"md5": "b3876847718223c51ae720740908f979", "sha256": "9f86c9487e53ad4a8a26ba2781fa61b6145661992428c297baa9e2abaa819161"}, "downloads": -1, "filename": "pyravendb-4.0.4.1.tar.gz", "has_sig": false, "md5_digest": "b3876847718223c51ae720740908f979", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62140, "upload_time": "2018-04-08T11:38:11", "upload_time_iso_8601": "2018-04-08T11:38:11.575077Z", "url": "https://files.pythonhosted.org/packages/ea/a1/9013a7638f9df090c83c3483267ddde8cb398e4f21a84d3babcdafcc5c4d/pyravendb-4.0.4.1.tar.gz", "yanked": false}], "4.0.4.2": [{"comment_text": "", "digests": {"md5": "abb1d93ef8438923b0c002c6ec683a9b", "sha256": "b8c2ad3d64d14a3419242913cc185a95c3cf190e6459001069874dd9594f6254"}, "downloads": -1, "filename": "pyravendb-4.0.4.2.tar.gz", "has_sig": false, "md5_digest": "abb1d93ef8438923b0c002c6ec683a9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62097, "upload_time": "2018-04-08T12:38:55", "upload_time_iso_8601": "2018-04-08T12:38:55.964082Z", "url": "https://files.pythonhosted.org/packages/9d/e6/4dc6e6193f2d8a999ddb1937e525f03386e9f2cf9bc3903b6fb3c385953e/pyravendb-4.0.4.2.tar.gz", "yanked": false}], "4.0.4.3": [{"comment_text": "", "digests": {"md5": "daa3c08a1099b3be0c1c7c098e7b1dba", "sha256": "b2cee3322f84ff2f0c109173935e0d8f66b18ad4a15e60e72ce9842db2c083ae"}, "downloads": -1, "filename": "pyravendb-4.0.4.3.tar.gz", "has_sig": false, "md5_digest": "daa3c08a1099b3be0c1c7c098e7b1dba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62122, "upload_time": "2018-06-28T11:24:48", "upload_time_iso_8601": "2018-06-28T11:24:48.601012Z", "url": "https://files.pythonhosted.org/packages/e5/ee/7e02c09fbbfc2fc8d07bcb3f0808b8eb0320060b7ac319aa060c451d52a2/pyravendb-4.0.4.3.tar.gz", "yanked": false}], "4.0.4.5": [{"comment_text": "", "digests": {"md5": "f5234c5338ff84487846679951928c53", "sha256": "d1e3fe0692603e178524e85e737992404d0865205f2b82a6f110f4768d819fe2"}, "downloads": -1, "filename": "pyravendb-4.0.4.5.tar.gz", "has_sig": false, "md5_digest": "f5234c5338ff84487846679951928c53", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68055, "upload_time": "2018-07-09T15:11:31", "upload_time_iso_8601": "2018-07-09T15:11:31.709612Z", "url": "https://files.pythonhosted.org/packages/c3/1d/26c25529bdcc27bd5c3b999ff60b1ab61665b178ca2907dfcfe8b202d275/pyravendb-4.0.4.5.tar.gz", "yanked": false}], "4.0.4.8": [{"comment_text": "", "digests": {"md5": "719b33a214c9f9465d2988b2f8d2164a", "sha256": "364cd8baba1bd768bd4181c6be2b03c74cdc8e9a67385603e958277c427cd070"}, "downloads": -1, "filename": "pyravendb-4.0.4.8.tar.gz", "has_sig": false, "md5_digest": "719b33a214c9f9465d2988b2f8d2164a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68047, "upload_time": "2018-07-12T14:58:20", "upload_time_iso_8601": "2018-07-12T14:58:20.609945Z", "url": "https://files.pythonhosted.org/packages/0c/41/4af50bed7887f4deba75675efd3aeb1fd4c24506101f11040bd3ee95166d/pyravendb-4.0.4.8.tar.gz", "yanked": false}], "4.0.4.9": [{"comment_text": "", "digests": {"md5": "b88172302c20ddbacdf491ab08d7aa29", "sha256": "1f57a97c2b55afe8122e7595a73014b29f1c0d63ff2861fb73020ec1df332a50"}, "downloads": -1, "filename": "pyravendb-4.0.4.9.tar.gz", "has_sig": false, "md5_digest": "b88172302c20ddbacdf491ab08d7aa29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68174, "upload_time": "2018-07-16T11:51:22", "upload_time_iso_8601": "2018-07-16T11:51:22.670517Z", "url": "https://files.pythonhosted.org/packages/0b/fa/e88def65abd0ce97b557433f66ccdfd90becad7d30367fd5e7fb5dc834e4/pyravendb-4.0.4.9.tar.gz", "yanked": false}], "4.0.5.0": [{"comment_text": "", "digests": {"md5": "5d689162fcc00c7db8a961a3dc427714", "sha256": "bb3939bb2ba7c12428f7c4fc73dc734528ba819781ffa42415f2d6d144c62ca2"}, "downloads": -1, "filename": "pyravendb-4.0.5.0.tar.gz", "has_sig": false, "md5_digest": "5d689162fcc00c7db8a961a3dc427714", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68188, "upload_time": "2018-08-02T14:59:52", "upload_time_iso_8601": "2018-08-02T14:59:52.325771Z", "url": "https://files.pythonhosted.org/packages/98/fb/57fb82281f1d1866567a9512bf1d7f5b440c79ee500e411e30e6df65e70e/pyravendb-4.0.5.0.tar.gz", "yanked": false}], "4.0.6.0": [{"comment_text": "", "digests": {"md5": "2c1d3a494e123d5e095c43ca26d5ce98", "sha256": "d6cc510f78cfc60bb82a7a8318fa891276fc6b90cc1397dba6ad4ac154e87fa0"}, "downloads": -1, "filename": "pyravendb-4.0.6.0.tar.gz", "has_sig": false, "md5_digest": "2c1d3a494e123d5e095c43ca26d5ce98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71172, "upload_time": "2018-12-10T16:15:45", "upload_time_iso_8601": "2018-12-10T16:15:45.905144Z", "url": "https://files.pythonhosted.org/packages/f6/31/31a332711a08ba2fc3f692e6b65e1487de2b6293849b514249ee9db9793a/pyravendb-4.0.6.0.tar.gz", "yanked": false}], "4.0.6.1": [{"comment_text": "", "digests": {"md5": "117908411340a9414c106cc3bec60219", "sha256": "411976c16cdb6679b3dd6ec4c49f85128fa50e356b60564fc0dfb83aec89ed40"}, "downloads": -1, "filename": "pyravendb-4.0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "117908411340a9414c106cc3bec60219", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 98195, "upload_time": "2019-02-27T09:10:33", "upload_time_iso_8601": "2019-02-27T09:10:33.180559Z", "url": "https://files.pythonhosted.org/packages/d8/6c/3476b0c3317c3bf925a356cb52e949cd99c3f14e714bdc9d85bb383635b9/pyravendb-4.0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6fd28d61142611577ff845cad5591ec4", "sha256": "b3acc088b0a215f77dedd978c152f2debeb6f925a44c4e03dead0fe3113a6095"}, "downloads": -1, "filename": "pyravendb-4.0.6.1.tar.gz", "has_sig": false, "md5_digest": "6fd28d61142611577ff845cad5591ec4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 70717, "upload_time": "2019-02-27T09:10:34", "upload_time_iso_8601": "2019-02-27T09:10:34.945295Z", "url": "https://files.pythonhosted.org/packages/d5/d2/e61114515d2db2b43761280dde27b4696f92920c83a20a713da5bb4cb66f/pyravendb-4.0.6.1.tar.gz", "yanked": false}], "4.0.6.2": [{"comment_text": "", "digests": {"md5": "4ee226c2df57562712f8195a79de3f21", "sha256": "7428fd79b01c1739c96ba144d9347ef3d470e7359225d1e5635d6f6239185c77"}, "downloads": -1, "filename": "pyravendb-4.0.6.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4ee226c2df57562712f8195a79de3f21", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 97936, "upload_time": "2019-10-17T07:37:22", "upload_time_iso_8601": "2019-10-17T07:37:22.608248Z", "url": "https://files.pythonhosted.org/packages/61/3f/dd9739a8ca3e15d084a2e34dc66c55a2cc0d152a98ead2a3ef92c8c5d599/pyravendb-4.0.6.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd979a51ef52bd4258e00872088adde7", "sha256": "1e9d2f45e31fba42cd98474d9b27d0c503dbafb888be23cf2a60b1e115dfdf96"}, "downloads": -1, "filename": "pyravendb-4.0.6.2.tar.gz", "has_sig": false, "md5_digest": "dd979a51ef52bd4258e00872088adde7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 70961, "upload_time": "2019-10-17T07:37:25", "upload_time_iso_8601": "2019-10-17T07:37:25.834876Z", "url": "https://files.pythonhosted.org/packages/cb/4d/62b41cc5256be863f241efb3135ff9839ef0c0b064b17dbd648306e2c0de/pyravendb-4.0.6.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4ee226c2df57562712f8195a79de3f21", "sha256": "7428fd79b01c1739c96ba144d9347ef3d470e7359225d1e5635d6f6239185c77"}, "downloads": -1, "filename": "pyravendb-4.0.6.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4ee226c2df57562712f8195a79de3f21", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 97936, "upload_time": "2019-10-17T07:37:22", "upload_time_iso_8601": "2019-10-17T07:37:22.608248Z", "url": "https://files.pythonhosted.org/packages/61/3f/dd9739a8ca3e15d084a2e34dc66c55a2cc0d152a98ead2a3ef92c8c5d599/pyravendb-4.0.6.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd979a51ef52bd4258e00872088adde7", "sha256": "1e9d2f45e31fba42cd98474d9b27d0c503dbafb888be23cf2a60b1e115dfdf96"}, "downloads": -1, "filename": "pyravendb-4.0.6.2.tar.gz", "has_sig": false, "md5_digest": "dd979a51ef52bd4258e00872088adde7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 70961, "upload_time": "2019-10-17T07:37:25", "upload_time_iso_8601": "2019-10-17T07:37:25.834876Z", "url": "https://files.pythonhosted.org/packages/cb/4d/62b41cc5256be863f241efb3135ff9839ef0c0b064b17dbd648306e2c0de/pyravendb-4.0.6.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:05 2020"}