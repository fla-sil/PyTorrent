{"info": {"author": "easydo.cn", "author_email": "info@easydo.cn", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: WSGI", "Topic :: Internet :: WWW/HTTP :: WSGI :: Middleware"], "description": "=========\ntusfilter\n=========\n\npython wsgi filter for tus protocol 1.0.0, `the tus resumable upload standard`_.\n\n.. _the tus resumable upload standard: http://tus.io/\n\n\ninstall\n-------\n\n::\n\n    pip install tusfilter\n\n\nArguments\n---------\n\napp\n    required, the wsgi server application\n\nupload_path\n    ``str``, required, path of the upload service\n\ntmp_dir\n    ``str``, optional, directory to store temporary files, default ``/upload``\n\nexpire\n    ``int``, optional, how long before cleanup old uploads in seconds, default ``60*60*60``\n\nsend_file\n    ``bool``, optional, ``False`` for send the absolute filepath in ``tmp_dir`` in the request body,\n    ``True`` for an actual file uploaded, default ``False``\n\nmax_size\n    ``int``, optional, maximum size of uploads in bytes, default ``2**30``, 1G\n\n\nExample\n-------\n\nflask ::\n\n    from tusfilter import TusFilter\n    from flask import Flask\n\n    app = Flask(__name__)\n\n    @app.route(\"/upload_resumable/<tmpfile>\", methods=['PATCH'])\n    def upload_resumable(tmpfile):\n        # do something else\n        return 'End of upload'\n\n    app.wsgi_app = TusFilter(\n        app.wsgi_app,\n        upload_path='/upload_resumable',\n        tmp_dir='/tmp/upload',\n    )", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/everydo/tusfilter", "keywords": "tus wsgi filter", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "tusfilter", "package_url": "https://pypi.org/project/tusfilter/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tusfilter/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/everydo/tusfilter"}, "release_url": "https://pypi.org/project/tusfilter/0.5.1/", "requires_dist": null, "requires_python": null, "summary": "python wsgi filter for tus protocol 1.0.0", "version": "0.5.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>python wsgi filter for tus protocol 1.0.0, <a href=\"http://tus.io/\" rel=\"nofollow\">the tus resumable upload standard</a>.</p>\n<div id=\"install\">\n<h2>install</h2>\n<pre>pip install tusfilter\n</pre>\n</div>\n<div id=\"arguments\">\n<h2>Arguments</h2>\n<dl>\n<dt>app</dt>\n<dd>required, the wsgi server application</dd>\n<dt>upload_path</dt>\n<dd><tt>str</tt>, required, path of the upload service</dd>\n<dt>tmp_dir</dt>\n<dd><tt>str</tt>, optional, directory to store temporary files, default <tt>/upload</tt></dd>\n<dt>expire</dt>\n<dd><tt>int</tt>, optional, how long before cleanup old uploads in seconds, default <tt>60*60*60</tt></dd>\n<dt>send_file</dt>\n<dd><tt>bool</tt>, optional, <tt>False</tt> for send the absolute filepath in <tt>tmp_dir</tt> in the request body,\n<tt>True</tt> for an actual file uploaded, default <tt>False</tt></dd>\n<dt>max_size</dt>\n<dd><tt>int</tt>, optional, maximum size of uploads in bytes, default <tt><span class=\"pre\">2**30</span></tt>, 1G</dd>\n</dl>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>flask</p>\n<pre>from tusfilter import TusFilter\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route(\"/upload_resumable/&lt;tmpfile&gt;\", methods=['PATCH'])\ndef upload_resumable(tmpfile):\n    # do something else\n    return 'End of upload'\n\napp.wsgi_app = TusFilter(\n    app.wsgi_app,\n    upload_path='/upload_resumable',\n    tmp_dir='/tmp/upload',\n)\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2084903, "releases": {"0.5.0": [{"comment_text": "", "digests": {"md5": "74ef9cfed9c6508c24ddae356db98694", "sha256": "19dc639a2924731a47b355b7dc60c8a1ecc2cc5e5310d05e82c8115f71309628"}, "downloads": -1, "filename": "tusfilter-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "74ef9cfed9c6508c24ddae356db98694", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7310, "upload_time": "2015-11-02T09:17:39", "upload_time_iso_8601": "2015-11-02T09:17:39.164212Z", "url": "https://files.pythonhosted.org/packages/29/d0/5329cdefacf6d2cece07c52c1880628dfa74225c98ea16643cd98c4a2b69/tusfilter-0.5.0-py2.py3-none-any.whl", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "c5f923a3c6303ef451ff3aa3b1994688", "sha256": "82908d730fcdd978ad9a12c7b8f4d9cdac1f7e2cee7a339d0f404f8c27811d58"}, "downloads": -1, "filename": "tusfilter-0.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c5f923a3c6303ef451ff3aa3b1994688", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7294, "upload_time": "2015-11-02T12:36:58", "upload_time_iso_8601": "2015-11-02T12:36:58.605113Z", "url": "https://files.pythonhosted.org/packages/31/f8/3686a356f687395658bbc0cb62ba1655559426ff68866848e0a173a6e6aa/tusfilter-0.5.1-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c5f923a3c6303ef451ff3aa3b1994688", "sha256": "82908d730fcdd978ad9a12c7b8f4d9cdac1f7e2cee7a339d0f404f8c27811d58"}, "downloads": -1, "filename": "tusfilter-0.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c5f923a3c6303ef451ff3aa3b1994688", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7294, "upload_time": "2015-11-02T12:36:58", "upload_time_iso_8601": "2015-11-02T12:36:58.605113Z", "url": "https://files.pythonhosted.org/packages/31/f8/3686a356f687395658bbc0cb62ba1655559426ff68866848e0a173a6e6aa/tusfilter-0.5.1-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:44:29 2020"}