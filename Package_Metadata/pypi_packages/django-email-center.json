{"info": {"author": "Shinneider Libanio da Silva", "author_email": "shinneider-libanio@hotmail.com", "bugtrack_url": null, "classifiers": [], "description": "DJANGO EMAIL CENTER\n===================\n  \n  \nThe 'Django Email Center' centralizes all email sending\n  \n# Install  \n  \n    pip install django-email-center\n\n# Usage\n  \n1. Add django application django_email_center to INSTALLED_APPS in settings.py\n  \n\t    INSTALLED_APPS = [  \n\t        ...  \n\t        'django_email_center',\n\t        ...  \n\t    ]  \n  \n\n2. Send a simple email\n  \n\t    from django_email_center.views.email_center import EmailCenter\n\t    ...  \n\n\t    email = EmailCenter()\n        email.send_email('testfrom@example.com', 'testto@example.com', 'subject here', 'body here' )\n        ...\n\n3. Send a simple email for several\n\n\t    from django_email_center.views.email_center import EmailCenter\n\t    ...\n\n\t    email = EmailCenter()\n        email.send_email('testfrom@example.com', ['testto1@example.com', 'testto2@example.com'], 'subject here', 'body here' )\n        ...\n\n4. Send a simple email for several in hidden copy\n\n\t    from django_email_center.views.email_center import EmailCenter\n\t    ...\n\n\t    email = EmailCenter()\n        email.send_email('testfrom@example.com', ['testto1@example.com', 'testto2@example.com'], 'subject here', 'body here', hidden_copy=True )\n        ...\n\n5. Send a simple email in asynchronous method\n\n\t    from django_email_center.views.email_center import EmailCenter\n\t    ...\n\n\t    email = EmailCenter()\n        email.send_email('testfrom@example.com', 'testto@example.com', 'subject here', 'body here' asynchronous=True)\n        ...\n\n6. Save but not send a simple email\n\n\t    from django_email_center.views.email_center import EmailCenter\n\t    ...\n\n\t    email = EmailCenter()\n        email.send_email('testfrom@example.com', 'testto@example.com', 'subject here', 'body here' no_send_email=True)\n        ...\n\n7. Send a email with html body\n\n\t    from django_email_center.views.email_center import EmailCenter\n\t    ...\n\n\t    body = render_to_string('html_template_here', parameters)\n\t    email = EmailCenter()\n        email.send_email('testfrom@example.com', 'testto@example.com', 'subject here', body, content_html=True )\n        ...\n\n8. Send a email with one attachment\n\n        from django_email_center.views.email_center import EmailCenter\n\t    ...\n\n        attachment = {}\n        attachment['filename'] = 'example.jpg'\n        attachment['content'] = File(open('/var/www/example.jpg', 'rb'))\n        ...\n        email.send_email('testfrom@example.com', 'testto@example.com', 'subject here', 'body here',  attachments=attachment)\n\n9. Send a email with multiple attachments\n\n        from django_email_center.views.email_center import EmailCenter\n\t    ...\n\n\t    attachments = []\n\n\t    for i in range(1,10):\n            attachment = {}\n            attachment['filename'] = 'example.jpg'\n            attachment['content'] = File(open('/var/www/example.jpg', 'rb'))\n\n            attachments.append(attachment)\n        ...\n        email.send_email('testfrom@example.com', 'testto@example.com', 'subject here', 'body here',  attachments=attachment)\n\n# Others features\n\n1. Optionals settings configuration (in settings.py)\n\n\t    ...\n\t    EMAIL_CENTER_NO_SEND_EMAIL = False  # (Default: False) if true, all email(s) are stored but no sended\n        EMAIL_CENTER_MAX_RETRY = 5  # (Default: 5) maximum number of attempts to send email(s) (Obs: in the future, I will create a job, for automatic retry, currently retry is manual, see \"Manual send email\" or \"Function for automatic send emails not sended\")\n        EMAIL_CENTER_ATTACHMENT_PATH = 'email_center/attachment/'  # (Default: 'email_center/attachment/') place where the attachments are stored\n        EMAIL_CENTER_ASYNCHRONOUS_SEND_EMAIL = False  # (Default: False) if true, all email(s) are sended in asynchronous method\n        EMAIL_CENTER_DJANGO_ADMIN_REGISTER = True  # if true, models are registered in Django Admin\n        ...\n\n2. Manual send email\n\n        from django_email_center.views.email_center import EmailCenter\n\t    ...\n\n\t    email = EmailCenter()\n\t    email.send_email_function(EmailLogObjectHere)\n\n\n        **returns:**\n        True - Sended successful\n        False - Error (view in EmailLogError DataBase)\n        None - Email exceeded maximum number of attempts (not try again), for this see \"Manual send email, that exceeded the maximum number of attempts\"\n\n3. Manual send email, that exceeded the maximum number of attempts\n\n        from django_email_center.views.email_center import EmailCenter\n\t    ...\n\n\t    email = EmailCenter()\n\t    email.send_email_function(EmailLogObjectHere, force_send=True)\n\n\n        **returns:**\n        True - if sended successful\n        False - if error (view in EmailLogError DataBase)\n\n4. Function for automatic send emails not sended\n\n        from django_email_center.utils import actions\n\t    ...\n\n        actions.send_emails_not_sended()\n\n5. Function for automatic send emails not sended, that exceeded the maximum number of attempts\n\n        from django_email_center.utils import actions\n\t    ...\n\n        actions.send_emails_not_sended(exceeded_max_retry=True)\n\n6. Update max retry exceeded for all not sended email\n\n        from django_email_center.views.email_center import EmailCenter\n\t    ...\n\n\t    email = EmailCenter()\n\t    email.update_exceeded_max_retry()\n\n\t    **returns:**\n        True - if sended successful\n\n7. Interact over Django Email Center Models\n\n        from django_email_center.models import *\n        ...\n\n        variable_name = EmailLog.objects.all()  # All email(s) informations\n        variable_name = EmailLogAttachment.objects.all()  # Email(s) attachments\n        variable_name = EmailLogErro.objects.all()  # If the submission generates an error, it will be saved here.\n        variable_name = EmailStatisticDate.objects.all()  # Statistics of email(s), sended, failed and registered by date\n\n# Uninstall Django Email Center\n\n    **in shell:**\n    python manage.py migrate --fake django_email_center zero\n    pip uninstall django-email-center\n\n\n    **in database:**\n    DROP TABLE django_email_center_emaillog;\n    DROP TABLE django_email_center_emaillogattachment;\n    DROP TABLE django_email_center_emaillogerro;\n    DROP TABLE django_email_center_emailstatisticdate;", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/shinneider/django_email_center", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-email-center", "package_url": "https://pypi.org/project/django-email-center/", "platform": "", "project_url": "https://pypi.org/project/django-email-center/", "project_urls": {"Homepage": "https://github.com/shinneider/django_email_center"}, "release_url": "https://pypi.org/project/django-email-center/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "The \"Django Email Center\" is a solutions for send your email(s)", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            DJANGO EMAIL CENTER<br>===================<br>  <br>  <br>The 'Django Email Center' centralizes all email sending<br>  <br># Install  <br>  <br>    pip install django-email-center<br><br># Usage<br>  <br>1. Add django application django_email_center to INSTALLED_APPS in settings.py<br>  <br>\t    INSTALLED_APPS = [  <br>\t        ...  <br>\t        'django_email_center',<br>\t        ...  <br>\t    ]  <br>  <br><br>2. Send a simple email<br>  <br>\t    from django_email_center.views.email_center import EmailCenter<br>\t    ...  <br><br>\t    email = EmailCenter()<br>        email.send_email('testfrom@example.com', 'testto@example.com', 'subject here', 'body here' )<br>        ...<br><br>3. Send a simple email for several<br><br>\t    from django_email_center.views.email_center import EmailCenter<br>\t    ...<br><br>\t    email = EmailCenter()<br>        email.send_email('testfrom@example.com', ['testto1@example.com', 'testto2@example.com'], 'subject here', 'body here' )<br>        ...<br><br>4. Send a simple email for several in hidden copy<br><br>\t    from django_email_center.views.email_center import EmailCenter<br>\t    ...<br><br>\t    email = EmailCenter()<br>        email.send_email('testfrom@example.com', ['testto1@example.com', 'testto2@example.com'], 'subject here', 'body here', hidden_copy=True )<br>        ...<br><br>5. Send a simple email in asynchronous method<br><br>\t    from django_email_center.views.email_center import EmailCenter<br>\t    ...<br><br>\t    email = EmailCenter()<br>        email.send_email('testfrom@example.com', 'testto@example.com', 'subject here', 'body here' asynchronous=True)<br>        ...<br><br>6. Save but not send a simple email<br><br>\t    from django_email_center.views.email_center import EmailCenter<br>\t    ...<br><br>\t    email = EmailCenter()<br>        email.send_email('testfrom@example.com', 'testto@example.com', 'subject here', 'body here' no_send_email=True)<br>        ...<br><br>7. Send a email with html body<br><br>\t    from django_email_center.views.email_center import EmailCenter<br>\t    ...<br><br>\t    body = render_to_string('html_template_here', parameters)<br>\t    email = EmailCenter()<br>        email.send_email('testfrom@example.com', 'testto@example.com', 'subject here', body, content_html=True )<br>        ...<br><br>8. Send a email with one attachment<br><br>        from django_email_center.views.email_center import EmailCenter<br>\t    ...<br><br>        attachment = {}<br>        attachment['filename'] = 'example.jpg'<br>        attachment['content'] = File(open('/var/www/example.jpg', 'rb'))<br>        ...<br>        email.send_email('testfrom@example.com', 'testto@example.com', 'subject here', 'body here',  attachments=attachment)<br><br>9. Send a email with multiple attachments<br><br>        from django_email_center.views.email_center import EmailCenter<br>\t    ...<br><br>\t    attachments = []<br><br>\t    for i in range(1,10):<br>            attachment = {}<br>            attachment['filename'] = 'example.jpg'<br>            attachment['content'] = File(open('/var/www/example.jpg', 'rb'))<br><br>            attachments.append(attachment)<br>        ...<br>        email.send_email('testfrom@example.com', 'testto@example.com', 'subject here', 'body here',  attachments=attachment)<br><br># Others features<br><br>1. Optionals settings configuration (in settings.py)<br><br>\t    ...<br>\t    EMAIL_CENTER_NO_SEND_EMAIL = False  # (Default: False) if true, all email(s) are stored but no sended<br>        EMAIL_CENTER_MAX_RETRY = 5  # (Default: 5) maximum number of attempts to send email(s) (Obs: in the future, I will create a job, for automatic retry, currently retry is manual, see \"Manual send email\" or \"Function for automatic send emails not sended\")<br>        EMAIL_CENTER_ATTACHMENT_PATH = 'email_center/attachment/'  # (Default: 'email_center/attachment/') place where the attachments are stored<br>        EMAIL_CENTER_ASYNCHRONOUS_SEND_EMAIL = False  # (Default: False) if true, all email(s) are sended in asynchronous method<br>        EMAIL_CENTER_DJANGO_ADMIN_REGISTER = True  # if true, models are registered in Django Admin<br>        ...<br><br>2. Manual send email<br><br>        from django_email_center.views.email_center import EmailCenter<br>\t    ...<br><br>\t    email = EmailCenter()<br>\t    email.send_email_function(EmailLogObjectHere)<br><br><br>        **returns:**<br>        True - Sended successful<br>        False - Error (view in EmailLogError DataBase)<br>        None - Email exceeded maximum number of attempts (not try again), for this see \"Manual send email, that exceeded the maximum number of attempts\"<br><br>3. Manual send email, that exceeded the maximum number of attempts<br><br>        from django_email_center.views.email_center import EmailCenter<br>\t    ...<br><br>\t    email = EmailCenter()<br>\t    email.send_email_function(EmailLogObjectHere, force_send=True)<br><br><br>        **returns:**<br>        True - if sended successful<br>        False - if error (view in EmailLogError DataBase)<br><br>4. Function for automatic send emails not sended<br><br>        from django_email_center.utils import actions<br>\t    ...<br><br>        actions.send_emails_not_sended()<br><br>5. Function for automatic send emails not sended, that exceeded the maximum number of attempts<br><br>        from django_email_center.utils import actions<br>\t    ...<br><br>        actions.send_emails_not_sended(exceeded_max_retry=True)<br><br>6. Update max retry exceeded for all not sended email<br><br>        from django_email_center.views.email_center import EmailCenter<br>\t    ...<br><br>\t    email = EmailCenter()<br>\t    email.update_exceeded_max_retry()<br><br>\t    **returns:**<br>        True - if sended successful<br><br>7. Interact over Django Email Center Models<br><br>        from django_email_center.models import *<br>        ...<br><br>        variable_name = EmailLog.objects.all()  # All email(s) informations<br>        variable_name = EmailLogAttachment.objects.all()  # Email(s) attachments<br>        variable_name = EmailLogErro.objects.all()  # If the submission generates an error, it will be saved here.<br>        variable_name = EmailStatisticDate.objects.all()  # Statistics of email(s), sended, failed and registered by date<br><br># Uninstall Django Email Center<br><br>    **in shell:**<br>    python manage.py migrate --fake django_email_center zero<br>    pip uninstall django-email-center<br><br><br>    **in database:**<br>    DROP TABLE django_email_center_emaillog;<br>    DROP TABLE django_email_center_emaillogattachment;<br>    DROP TABLE django_email_center_emaillogerro;<br>    DROP TABLE django_email_center_emailstatisticdate;\n          </div>"}, "last_serial": 3693647, "releases": {"0.0": [{"comment_text": "", "digests": {"md5": "e12e2f54d5a35c187045171ee5e4d9d0", "sha256": "650cbf0ac1def80367f80baa4e8c3a5b83e38f93395cd006c20fe085d6fab092"}, "downloads": -1, "filename": "django-email-center-0.0.tar.gz", "has_sig": false, "md5_digest": "e12e2f54d5a35c187045171ee5e4d9d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7321, "upload_time": "2018-03-18T20:27:09", "upload_time_iso_8601": "2018-03-18T20:27:09.048393Z", "url": "https://files.pythonhosted.org/packages/73/69/cf33a1c6fd67877e8ea5c78e99d779ce3328533dd00d274c32c952672fe0/django-email-center-0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "7e35b6c8b3714ee9133ea607913aeda6", "sha256": "916d7fd5313e483ea9928ca859543644572640080d547ab60bfb66715e860628"}, "downloads": -1, "filename": "django-email-center-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7e35b6c8b3714ee9133ea607913aeda6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7308, "upload_time": "2018-03-18T20:35:01", "upload_time_iso_8601": "2018-03-18T20:35:01.993301Z", "url": "https://files.pythonhosted.org/packages/46/7d/e08ebaf38fc43e07433b2d6719004eaf31fed22b1d73e54de101f34d39dc/django-email-center-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "2e435d1e8e68cec4b30916a8438c91c0", "sha256": "fb07432630ceaf05803408a1eb6eddef47b11ee12c33114315a524f31d1f562e"}, "downloads": -1, "filename": "django-email-center-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2e435d1e8e68cec4b30916a8438c91c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7347, "upload_time": "2018-03-18T21:01:00", "upload_time_iso_8601": "2018-03-18T21:01:00.023631Z", "url": "https://files.pythonhosted.org/packages/3c/40/87e6b24b0f782517d8ad1383400012dd996eef0faa87e6d5eeb0df5fdf59/django-email-center-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "aa4478b3518ff933df207da025e83e3a", "sha256": "8b9eeb313e87c1ac3f6d38b66a02a187a5ad22a3db10713c13665f2727dfc62c"}, "downloads": -1, "filename": "django-email-center-0.0.3.tar.gz", "has_sig": false, "md5_digest": "aa4478b3518ff933df207da025e83e3a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7618, "upload_time": "2018-03-21T23:35:52", "upload_time_iso_8601": "2018-03-21T23:35:52.329517Z", "url": "https://files.pythonhosted.org/packages/41/99/a50b836e4864a81b6b006363cf3d2e7fcd55355efa94af0e8419dbad3389/django-email-center-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aa4478b3518ff933df207da025e83e3a", "sha256": "8b9eeb313e87c1ac3f6d38b66a02a187a5ad22a3db10713c13665f2727dfc62c"}, "downloads": -1, "filename": "django-email-center-0.0.3.tar.gz", "has_sig": false, "md5_digest": "aa4478b3518ff933df207da025e83e3a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7618, "upload_time": "2018-03-21T23:35:52", "upload_time_iso_8601": "2018-03-21T23:35:52.329517Z", "url": "https://files.pythonhosted.org/packages/41/99/a50b836e4864a81b6b006363cf3d2e7fcd55355efa94af0e8419dbad3389/django-email-center-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:24 2020"}