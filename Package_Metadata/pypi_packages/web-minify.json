{"info": {"author": "Lennart Rolland", "author_email": "lennart@firtkissdesigns.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Other Audience", "Natural Language :: English", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.7", "Topic :: Other/Nonlisted Topic", "Topic :: Utilities"], "description": "# About web-minify\n\n## Introduction\nThe all-in-one just-works-out-of-the-box does-what-you-want highly-opinionated web minifier&trade;\n\nOne day I was looking for a thoroughbred Python KISS tool that would optimize the static files of my web app. I was in a hurry and didn't want to fiddle around.\n\nI was super happy when I found [css-html-js-minify](https://github.com/juancarlospaco/css-html-js-minify), which aaaalmost checked all my boxes.\n\n__Aaaaalmost.....__\n\nTurns out a few important pieces were missing;\n1. Support for image formats such as .png/.jpeg\n2. Support for svg\n3. Support for sass\n4. A command line tool that was smarter and did what I expected for directories\n\nI tried to incorporate the tool in my workflow as it was, but I soon gave up and ended up copying the full tool source into my project and adding the features I needed out of sheer frustration. Fast worward a few months and here we are. I am polishing it into a standalone open source tool for the world to enjoy. And the rest is as they say history!\n\n\n# Goals of this tool:\n\n> NOTE: We have not reached all these goals yet, please see next section.\n\n| Goal   |      Status |\n|--------|-------------|\n| All-in-one compressor/obfuscator/minifier/cruncher for most of the common static web formats | See [list of supported formats](#supported-formats). |\n| Does what you hoped by default (i.e. highly opinionated) | \u2611\ufe0f |\n| Can be tweaked to do what you didn't want (i.e. flexible) | \u2611\ufe0f |\n| Small and dependency free (i.e. implemented in pure python if possible) | Only tested/used on Linux. There is hope for OSX/BSD/Posix but YMMV on Windows. |\n| Available as library as well as command-line tool | \u2611\ufe0f |\n| Easily extensible; adding another backend can be done by writing one function | \u2611\ufe0f |\n| Cross platform, supports many Python 3.x versions | Only tested on Python 3.7 |\n\n# Getting started\n\n## Installing\n\n```shell\n\n# Install web-minify into your current Python environment\npip install web-minify\n\n```\n\n\nAfter installing, there are two ways to use this project:\n - As a command line tool\n - As a Python module\n\n## Use as a command line tool\n```shell\n\n# Run the web-minify cli tool with help argument to see detailed usage\nweb-minify --help\n\n```\n\n\nThe output looks like this:\n\n<details>\n\n```shell\n$ ./web-minify.py --help\nusage: web-minify.py [-h] [--version] [--format FORMAT] [--overwrite]\n                     [--on-change] [--verbose] [--zipy] [--disable-js]\n                     [--disable-css] [--disable-html] [--disable-svg]\n                     [--disable-png] [--disable-jpeg] [--output OUTPUT]\n                     [--sort] [--comments] [--timestamp] [--wrap]\n                     [--set-precision NUM] [--set-c-precision NUM]\n                     [--disable-simplify-colors] [--disable-style-to-xml]\n                     [--disable-group-collapsing] [--create-groups]\n                     [--keep-editor-data] [--keep-unreferenced-defs]\n                     [--renderer-workaround] [--no-renderer-workaround]\n                     [--strip-xml-prolog] [--remove-titles]\n                     [--remove-descriptions] [--remove-metadata]\n                     [--remove-descriptive-elements]\n                     [--enable-comment-stripping] [--disable-embed-rasters]\n                     [--enable-viewboxing] [--indent TYPE] [--nindent NUM]\n                     [--no-line-breaks] [--strip-xml-space]\n                     [--enable-id-stripping] [--shorten-ids]\n                     [--shorten-ids-prefix PREFIX] [--protect-ids-noninkscape]\n                     [--protect-ids-list LIST] [--protect-ids-prefix PREFIX]\n                     [--error-on-flowtext]\n                     input\n\noptional arguments:\n  -h, --help            show this help message and exit\n\ngeneral:\n  General options for this program\n\n  --version             show program's version number and exit\n  --format FORMAT       Format string used to generate any output filename.\n                        (Dangerous!!)\n  --overwrite           Allow overwrite files in-place. Default is skip and\n                        warn. NOTE: output fils are always overwritten.\n                        (Dangerous!!)\n  --on-change           Allow overwrite files only on source changed (detected\n                        by modify time).\n  --verbose             Show output during processing.\n  --zipy                GZIP Processed files as '*.gz'.\n  --disable-js          Copy .js files verbatim instead of processing\n  --disable-css         Copy .css files verbatim instead of processing\n  --disable-html        Copy .html files verbatim instead of processing\n  --disable-svg         Copy .svg files verbatim instead of processing\n  --disable-png         Copy .png files verbatim instead of processing\n  --disable-jpeg        Copy .jpeg files verbatim instead of processing\n  --output OUTPUT       Path to local output (file or folder).\n  input                 Path to local input (file or folder).\n\ncommon:\n  Options common to many formats\n\n  --sort                Alphabetically sort CSS Properties (CSS).\n  --comments            Keep comments (CSS/HTML).\n  --timestamp           Add a timestamp in output files (CSS/HTML/SVG).\n  --wrap                Wrap output to ~80 chars per line (CSS).\n\nsvg optimization:\n  Optimization options that are only available for SVG\n\n  --set-precision NUM   set number of significant digits (default: 5)\n  --set-c-precision NUM\n                        set number of significant digits for control points\n                        (default: same as '--set-precision')\n  --disable-simplify-colors\n                        won't convert colors to #RRGGBB format\n  --disable-style-to-xml\n                        won't convert styles into XML attributes\n  --disable-group-collapsing\n                        won't collapse <g> elements\n  --create-groups       create <g> elements for runs of elements with\n                        identical attributes\n  --keep-editor-data    won't remove Inkscape, Sodipodi, Adobe Illustrator or\n                        Sketch elements and attributes\n  --keep-unreferenced-defs\n                        won't remove elements within the defs container that\n                        are unreferenced\n  --renderer-workaround\n                        work around various renderer bugs (currently only\n                        librsvg) (default)\n  --no-renderer-workaround\n                        do not work around various renderer bugs (currently\n                        only librsvg)\n\nsvg document:\n  Document options that are only available for SVG\n\n  --strip-xml-prolog    won't output the XML prolog (<?xml ?>)\n  --remove-titles       remove <title> elements\n  --remove-descriptions\n                        remove <desc> elements\n  --remove-metadata     remove <metadata> elements (which may contain license\n                        or author information etc.)\n  --remove-descriptive-elements\n                        remove <title>, <desc> and <metadata> elements\n  --enable-comment-stripping\n                        remove all comments (<!-- -->)\n  --disable-embed-rasters\n                        won't embed rasters as base64-encoded data\n  --enable-viewboxing   changes document width / height to 100pct / 100pct and\n                        creates viewbox coordinates\n\nsvg output formatting:\n  Output formatting options that are only available for SVG\n\n  --indent TYPE         indentation of the output: none, space, tab (default:\n                        space)\n  --nindent NUM         depth of the indentation, i.e. number of spaces /\n                        tabs: (default: 1)\n  --no-line-breaks      do not create line breaks in output(also disables\n                        indentation; might be overridden by\n                        xml:space=\"preserve\")\n  --strip-xml-space     strip the xml:space=\"preserve\" attribute from the root\n                        SVG element\n\nsvg id attributes:\n  ID attribute options that are only available for SVG\n\n  --enable-id-stripping\n                        remove all unreferenced IDs\n  --shorten-ids         shorten all IDs to the least number of letters\n                        possible\n  --shorten-ids-prefix PREFIX\n                        add custom prefix to shortened IDs\n  --protect-ids-noninkscape\n                        don't remove IDs not ending with a digit\n  --protect-ids-list LIST\n                        don't remove IDs given in this comma-separated list\n  --protect-ids-prefix PREFIX\n                        don't remove IDs starting with the given prefix\n\nsvg compatability checks:\n  Compatibility check options that are only available for SVG\n\n  --error-on-flowtext   exit with error if the input SVG uses non-standard\n                        flowing text (only warn by default)\n\nweb-minify: Process all CSS/SASS/HTML/JS/SVG/PNG/JPEG found at input, either\nin single file or recursively Applies common transformation to each file: +\ncompile (SASS -> CSS) + strip whitespace + strip comments + strip metadata +\nincrease compression ratio (PNG/JPEG) + sort (CSS) + timestamp + hash Provides\nsome options for processing: + process files in-place + process files renaming\nto new form + compress results to .gz Available variables in format string\nare: + {EXT} + {HASH} + {PATH} + {BASE}\n\n```\n\n</details>\n\n\n## Use as a python module\n\n<details>\n\n```Python\nimport web_minify\n\nsettings = {\n    \"input\": \"my_originals_dir/\",\n    \"output\": \"my_processed_dir/\",\n}\n\n# Instanciate processor with settings we want to use\np = web_minify.processor.Processor(settings)\n\n\n# Process files as per settings (this is equivalent to the commandline mode)\np. process_file()\n\n\n# Process a list of files relative to input, and output them depending on settings\np. process_files_list([\"input_file.svg\", \"input_file.html\"])\n\n\n# Process a single file (disregard input/output from settings\np.process_file(\"some_input_file.svg\", \"some_output_file.svg\")\n\n```\n\n</details>\n\n# Supported Formats\n\n| Format   |       | Status | Tests|\n|----------|-------|--------|------|\n| *.html, *htm, *.tpl |  Hypertext Markup Language | Seems to work | Zero |\n| *.css | Cascading Style Sheets | Seems to work | Zero |\n| *.js | JavaScript | Buggy for modern syntax features | Zero |\n| *.sass | Syntactically Awesome Style Sheets | Seems to work | Zero |\n| *.png Portable Network Graphics | Seems to work | Zero |\n| *.jpg, *.jpeg | Joint Photographic Experts Group | Seems to work | Zero |\n| *.svg | Scalable Vector Graphics | Seems to work | Zero |\n| *.your_file | It is made to be [extensible](#extending-web-minify) | Submit your PR! | ? |\n\n\n## Extending web-minify\n\nweb-minify can be extended to support additional formats by a very simple interface:\n\n1. Put a module under web-minify/web_minify/handlers/your_format. This can either be a moduler folder or module python source file. See css/ or html.py for example implementations.\n2. Include the new function in __all__ in web-minify/web_minify/handlers/__init__.py\n3. Register the new function in self.processor_map in web-minify/web_minify/processor.py\n\nEasy as pie!\n\n# Other Notable Features\n\n1. Supports recursive scanning of directories\n2. Supports spitting out .gz versions of files to speed up serving of static files\n3. Supports some controls over each format's processing\n4. Supports change detection and watch mode\n5. Made to be somewhat [extensible](#extending-web-minify)\n\n# Known Limitations and Problems:\n\n1. Compression of modern .js haves some bugs. We welcome PRs!\n2. Some of the usage pattersn of the command line tool are not implemented yet. We welcome PRs!\n3. Codebase has ZERO tests. We welcome PRs!\n\n\n# We welcome PRs!\n\nIf you want to contribute we welcome your code contriburtions! We are proud fo the fact that this project is a true meritocracy.\n\n\n# License\n\nComplete license is in the file [LICENSE](LICENSE) in the root of the git repo.\n\n> GNU GPL and GNU LGPL or MIT.\n> This work is free software: You can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This work is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; Without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this work.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://gitlab.com/firstkiss/web-minify", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/firstkiss/web-minifier", "keywords": "python3,CSS,HTML,JS,SVG,PNG,JPEG,Compressor,CSS3,HTML5,Web,Javascript,Minifier,Minify,Uglify,Obfuscator", "license": "GPL-3 LGPL-3 MIT", "maintainer": "Lennart Rolland", "maintainer_email": "lennart@firtkissdesigns.com", "name": "web-minify", "package_url": "https://pypi.org/project/web-minify/", "platform": "Linux", "project_url": "https://pypi.org/project/web-minify/", "project_urls": {"Bugs": "https://gitlab.com/firstkiss/web-minify/-/issues", "C.I.": "https://gitlab.com/firstkiss/web-minify/pipelines", "Docs": "https://gitlab.com/firstkiss/web-minify/README.md", "Download": "https://gitlab.com/firstkiss/web-minify", "Homepage": "https://gitlab.com/firstkiss/web-minifier"}, "release_url": "https://pypi.org/project/web-minify/0.0.8/", "requires_dist": null, "requires_python": ">=3.7.4", "summary": "CSS HTML JS SVG PNG JPEG Minifier", "version": "0.0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>About web-minify</h1>\n<h2>Introduction</h2>\n<p>The all-in-one just-works-out-of-the-box does-what-you-want highly-opinionated web minifier\u2122</p>\n<p>One day I was looking for a thoroughbred Python KISS tool that would optimize the static files of my web app. I was in a hurry and didn't want to fiddle around.</p>\n<p>I was super happy when I found <a href=\"https://github.com/juancarlospaco/css-html-js-minify\" rel=\"nofollow\">css-html-js-minify</a>, which aaaalmost checked all my boxes.</p>\n<p><strong>Aaaaalmost.....</strong></p>\n<p>Turns out a few important pieces were missing;</p>\n<ol>\n<li>Support for image formats such as .png/.jpeg</li>\n<li>Support for svg</li>\n<li>Support for sass</li>\n<li>A command line tool that was smarter and did what I expected for directories</li>\n</ol>\n<p>I tried to incorporate the tool in my workflow as it was, but I soon gave up and ended up copying the full tool source into my project and adding the features I needed out of sheer frustration. Fast worward a few months and here we are. I am polishing it into a standalone open source tool for the world to enjoy. And the rest is as they say history!</p>\n<h1>Goals of this tool:</h1>\n<blockquote>\n<p>NOTE: We have not reached all these goals yet, please see next section.</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>Goal</th>\n<th>Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>All-in-one compressor/obfuscator/minifier/cruncher for most of the common static web formats</td>\n<td>See <a href=\"#supported-formats\" rel=\"nofollow\">list of supported formats</a>.</td>\n</tr>\n<tr>\n<td>Does what you hoped by default (i.e. highly opinionated)</td>\n<td>\u2611\ufe0f</td>\n</tr>\n<tr>\n<td>Can be tweaked to do what you didn't want (i.e. flexible)</td>\n<td>\u2611\ufe0f</td>\n</tr>\n<tr>\n<td>Small and dependency free (i.e. implemented in pure python if possible)</td>\n<td>Only tested/used on Linux. There is hope for OSX/BSD/Posix but YMMV on Windows.</td>\n</tr>\n<tr>\n<td>Available as library as well as command-line tool</td>\n<td>\u2611\ufe0f</td>\n</tr>\n<tr>\n<td>Easily extensible; adding another backend can be done by writing one function</td>\n<td>\u2611\ufe0f</td>\n</tr>\n<tr>\n<td>Cross platform, supports many Python 3.x versions</td>\n<td>Only tested on Python 3.7</td>\n</tr></tbody></table>\n<h1>Getting started</h1>\n<h2>Installing</h2>\n<pre><span class=\"c1\"># Install web-minify into your current Python environment</span>\npip install web-minify\n</pre>\n<p>After installing, there are two ways to use this project:</p>\n<ul>\n<li>As a command line tool</li>\n<li>As a Python module</li>\n</ul>\n<h2>Use as a command line tool</h2>\n<pre><span class=\"c1\"># Run the web-minify cli tool with help argument to see detailed usage</span>\nweb-minify --help\n</pre>\n<p>The output looks like this:</p>\n<details>\n<pre>$ ./web-minify.py --help\nusage: web-minify.py <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>--version<span class=\"o\">]</span> <span class=\"o\">[</span>--format FORMAT<span class=\"o\">]</span> <span class=\"o\">[</span>--overwrite<span class=\"o\">]</span>\n                     <span class=\"o\">[</span>--on-change<span class=\"o\">]</span> <span class=\"o\">[</span>--verbose<span class=\"o\">]</span> <span class=\"o\">[</span>--zipy<span class=\"o\">]</span> <span class=\"o\">[</span>--disable-js<span class=\"o\">]</span>\n                     <span class=\"o\">[</span>--disable-css<span class=\"o\">]</span> <span class=\"o\">[</span>--disable-html<span class=\"o\">]</span> <span class=\"o\">[</span>--disable-svg<span class=\"o\">]</span>\n                     <span class=\"o\">[</span>--disable-png<span class=\"o\">]</span> <span class=\"o\">[</span>--disable-jpeg<span class=\"o\">]</span> <span class=\"o\">[</span>--output OUTPUT<span class=\"o\">]</span>\n                     <span class=\"o\">[</span>--sort<span class=\"o\">]</span> <span class=\"o\">[</span>--comments<span class=\"o\">]</span> <span class=\"o\">[</span>--timestamp<span class=\"o\">]</span> <span class=\"o\">[</span>--wrap<span class=\"o\">]</span>\n                     <span class=\"o\">[</span>--set-precision NUM<span class=\"o\">]</span> <span class=\"o\">[</span>--set-c-precision NUM<span class=\"o\">]</span>\n                     <span class=\"o\">[</span>--disable-simplify-colors<span class=\"o\">]</span> <span class=\"o\">[</span>--disable-style-to-xml<span class=\"o\">]</span>\n                     <span class=\"o\">[</span>--disable-group-collapsing<span class=\"o\">]</span> <span class=\"o\">[</span>--create-groups<span class=\"o\">]</span>\n                     <span class=\"o\">[</span>--keep-editor-data<span class=\"o\">]</span> <span class=\"o\">[</span>--keep-unreferenced-defs<span class=\"o\">]</span>\n                     <span class=\"o\">[</span>--renderer-workaround<span class=\"o\">]</span> <span class=\"o\">[</span>--no-renderer-workaround<span class=\"o\">]</span>\n                     <span class=\"o\">[</span>--strip-xml-prolog<span class=\"o\">]</span> <span class=\"o\">[</span>--remove-titles<span class=\"o\">]</span>\n                     <span class=\"o\">[</span>--remove-descriptions<span class=\"o\">]</span> <span class=\"o\">[</span>--remove-metadata<span class=\"o\">]</span>\n                     <span class=\"o\">[</span>--remove-descriptive-elements<span class=\"o\">]</span>\n                     <span class=\"o\">[</span>--enable-comment-stripping<span class=\"o\">]</span> <span class=\"o\">[</span>--disable-embed-rasters<span class=\"o\">]</span>\n                     <span class=\"o\">[</span>--enable-viewboxing<span class=\"o\">]</span> <span class=\"o\">[</span>--indent TYPE<span class=\"o\">]</span> <span class=\"o\">[</span>--nindent NUM<span class=\"o\">]</span>\n                     <span class=\"o\">[</span>--no-line-breaks<span class=\"o\">]</span> <span class=\"o\">[</span>--strip-xml-space<span class=\"o\">]</span>\n                     <span class=\"o\">[</span>--enable-id-stripping<span class=\"o\">]</span> <span class=\"o\">[</span>--shorten-ids<span class=\"o\">]</span>\n                     <span class=\"o\">[</span>--shorten-ids-prefix PREFIX<span class=\"o\">]</span> <span class=\"o\">[</span>--protect-ids-noninkscape<span class=\"o\">]</span>\n                     <span class=\"o\">[</span>--protect-ids-list LIST<span class=\"o\">]</span> <span class=\"o\">[</span>--protect-ids-prefix PREFIX<span class=\"o\">]</span>\n                     <span class=\"o\">[</span>--error-on-flowtext<span class=\"o\">]</span>\n                     input\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n\ngeneral:\n  General options <span class=\"k\">for</span> this program\n\n  --version             show program<span class=\"s1\">'s version number and exit</span>\n<span class=\"s1\">  --format FORMAT       Format string used to generate any output filename.</span>\n<span class=\"s1\">                        (Dangerous!!)</span>\n<span class=\"s1\">  --overwrite           Allow overwrite files in-place. Default is skip and</span>\n<span class=\"s1\">                        warn. NOTE: output fils are always overwritten.</span>\n<span class=\"s1\">                        (Dangerous!!)</span>\n<span class=\"s1\">  --on-change           Allow overwrite files only on source changed (detected</span>\n<span class=\"s1\">                        by modify time).</span>\n<span class=\"s1\">  --verbose             Show output during processing.</span>\n<span class=\"s1\">  --zipy                GZIP Processed files as '</span>*.gz<span class=\"s1\">'.</span>\n<span class=\"s1\">  --disable-js          Copy .js files verbatim instead of processing</span>\n<span class=\"s1\">  --disable-css         Copy .css files verbatim instead of processing</span>\n<span class=\"s1\">  --disable-html        Copy .html files verbatim instead of processing</span>\n<span class=\"s1\">  --disable-svg         Copy .svg files verbatim instead of processing</span>\n<span class=\"s1\">  --disable-png         Copy .png files verbatim instead of processing</span>\n<span class=\"s1\">  --disable-jpeg        Copy .jpeg files verbatim instead of processing</span>\n<span class=\"s1\">  --output OUTPUT       Path to local output (file or folder).</span>\n<span class=\"s1\">  input                 Path to local input (file or folder).</span>\n\n<span class=\"s1\">common:</span>\n<span class=\"s1\">  Options common to many formats</span>\n\n<span class=\"s1\">  --sort                Alphabetically sort CSS Properties (CSS).</span>\n<span class=\"s1\">  --comments            Keep comments (CSS/HTML).</span>\n<span class=\"s1\">  --timestamp           Add a timestamp in output files (CSS/HTML/SVG).</span>\n<span class=\"s1\">  --wrap                Wrap output to ~80 chars per line (CSS).</span>\n\n<span class=\"s1\">svg optimization:</span>\n<span class=\"s1\">  Optimization options that are only available for SVG</span>\n\n<span class=\"s1\">  --set-precision NUM   set number of significant digits (default: 5)</span>\n<span class=\"s1\">  --set-c-precision NUM</span>\n<span class=\"s1\">                        set number of significant digits for control points</span>\n<span class=\"s1\">                        (default: same as '</span>--set-precision<span class=\"s1\">')</span>\n<span class=\"s1\">  --disable-simplify-colors</span>\n<span class=\"s1\">                        won'</span>t convert colors to <span class=\"c1\">#RRGGBB format</span>\n  --disable-style-to-xml\n                        won<span class=\"s1\">'t convert styles into XML attributes</span>\n<span class=\"s1\">  --disable-group-collapsing</span>\n<span class=\"s1\">                        won'</span>t collapse &lt;g&gt; elements\n  --create-groups       create &lt;g&gt; elements <span class=\"k\">for</span> runs of elements with\n                        identical attributes\n  --keep-editor-data    won<span class=\"s1\">'t remove Inkscape, Sodipodi, Adobe Illustrator or</span>\n<span class=\"s1\">                        Sketch elements and attributes</span>\n<span class=\"s1\">  --keep-unreferenced-defs</span>\n<span class=\"s1\">                        won'</span>t remove elements within the defs container that\n                        are unreferenced\n  --renderer-workaround\n                        work around various renderer bugs <span class=\"o\">(</span>currently only\n                        librsvg<span class=\"o\">)</span> <span class=\"o\">(</span>default<span class=\"o\">)</span>\n  --no-renderer-workaround\n                        <span class=\"k\">do</span> not work around various renderer bugs <span class=\"o\">(</span>currently\n                        only librsvg<span class=\"o\">)</span>\n\nsvg document:\n  Document options that are only available <span class=\"k\">for</span> SVG\n\n  --strip-xml-prolog    won<span class=\"s1\">'t output the XML prolog (&lt;?xml ?&gt;)</span>\n<span class=\"s1\">  --remove-titles       remove &lt;title&gt; elements</span>\n<span class=\"s1\">  --remove-descriptions</span>\n<span class=\"s1\">                        remove &lt;desc&gt; elements</span>\n<span class=\"s1\">  --remove-metadata     remove &lt;metadata&gt; elements (which may contain license</span>\n<span class=\"s1\">                        or author information etc.)</span>\n<span class=\"s1\">  --remove-descriptive-elements</span>\n<span class=\"s1\">                        remove &lt;title&gt;, &lt;desc&gt; and &lt;metadata&gt; elements</span>\n<span class=\"s1\">  --enable-comment-stripping</span>\n<span class=\"s1\">                        remove all comments (&lt;!-- --&gt;)</span>\n<span class=\"s1\">  --disable-embed-rasters</span>\n<span class=\"s1\">                        won'</span>t embed rasters as base64-encoded data\n  --enable-viewboxing   changes document width / height to 100pct / 100pct and\n                        creates viewbox coordinates\n\nsvg output formatting:\n  Output formatting options that are only available <span class=\"k\">for</span> SVG\n\n  --indent TYPE         indentation of the output: none, space, tab <span class=\"o\">(</span>default:\n                        space<span class=\"o\">)</span>\n  --nindent NUM         depth of the indentation, i.e. number of spaces /\n                        tabs: <span class=\"o\">(</span>default: <span class=\"m\">1</span><span class=\"o\">)</span>\n  --no-line-breaks      <span class=\"k\">do</span> not create line breaks in output<span class=\"o\">(</span>also disables\n                        indentation<span class=\"p\">;</span> might be overridden by\n                        xml:space<span class=\"o\">=</span><span class=\"s2\">\"preserve\"</span><span class=\"o\">)</span>\n  --strip-xml-space     strip the xml:space<span class=\"o\">=</span><span class=\"s2\">\"preserve\"</span> attribute from the root\n                        SVG element\n\nsvg id attributes:\n  ID attribute options that are only available <span class=\"k\">for</span> SVG\n\n  --enable-id-stripping\n                        remove all unreferenced IDs\n  --shorten-ids         shorten all IDs to the least number of letters\n                        possible\n  --shorten-ids-prefix PREFIX\n                        add custom prefix to shortened IDs\n  --protect-ids-noninkscape\n                        don<span class=\"s1\">'t remove IDs not ending with a digit</span>\n<span class=\"s1\">  --protect-ids-list LIST</span>\n<span class=\"s1\">                        don'</span>t remove IDs given in this comma-separated list\n  --protect-ids-prefix PREFIX\n                        don<span class=\"err\">'</span>t remove IDs starting with the given prefix\n\nsvg compatability checks:\n  Compatibility check options that are only available <span class=\"k\">for</span> SVG\n\n  --error-on-flowtext   <span class=\"nb\">exit</span> with error <span class=\"k\">if</span> the input SVG uses non-standard\n                        flowing text <span class=\"o\">(</span>only warn by default<span class=\"o\">)</span>\n\nweb-minify: Process all CSS/SASS/HTML/JS/SVG/PNG/JPEG found at input, either\nin single file or recursively Applies common transformation to each file: +\ncompile <span class=\"o\">(</span>SASS -&gt; CSS<span class=\"o\">)</span> + strip whitespace + strip comments + strip metadata +\nincrease compression ratio <span class=\"o\">(</span>PNG/JPEG<span class=\"o\">)</span> + sort <span class=\"o\">(</span>CSS<span class=\"o\">)</span> + timestamp + <span class=\"nb\">hash</span> Provides\nsome options <span class=\"k\">for</span> processing: + process files in-place + process files renaming\nto new form + compress results to .gz Available variables in format string\nare: + <span class=\"o\">{</span>EXT<span class=\"o\">}</span> + <span class=\"o\">{</span>HASH<span class=\"o\">}</span> + <span class=\"o\">{</span>PATH<span class=\"o\">}</span> + <span class=\"o\">{</span>BASE<span class=\"o\">}</span>\n</pre>\n</details>\n<h2>Use as a python module</h2>\n<details>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">web_minify</span>\n\n<span class=\"n\">settings</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"input\"</span><span class=\"p\">:</span> <span class=\"s2\">\"my_originals_dir/\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"output\"</span><span class=\"p\">:</span> <span class=\"s2\">\"my_processed_dir/\"</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># Instanciate processor with settings we want to use</span>\n<span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">web_minify</span><span class=\"o\">.</span><span class=\"n\">processor</span><span class=\"o\">.</span><span class=\"n\">Processor</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># Process files as per settings (this is equivalent to the commandline mode)</span>\n<span class=\"n\">p</span><span class=\"o\">.</span> <span class=\"n\">process_file</span><span class=\"p\">()</span>\n\n\n<span class=\"c1\"># Process a list of files relative to input, and output them depending on settings</span>\n<span class=\"n\">p</span><span class=\"o\">.</span> <span class=\"n\">process_files_list</span><span class=\"p\">([</span><span class=\"s2\">\"input_file.svg\"</span><span class=\"p\">,</span> <span class=\"s2\">\"input_file.html\"</span><span class=\"p\">])</span>\n\n\n<span class=\"c1\"># Process a single file (disregard input/output from settings</span>\n<span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">process_file</span><span class=\"p\">(</span><span class=\"s2\">\"some_input_file.svg\"</span><span class=\"p\">,</span> <span class=\"s2\">\"some_output_file.svg\"</span><span class=\"p\">)</span>\n</pre>\n</details>\n<h1>Supported Formats</h1>\n<table>\n<thead>\n<tr>\n<th>Format</th>\n<th></th>\n<th>Status</th>\n<th>Tests</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>*.html, *htm, *.tpl</td>\n<td>Hypertext Markup Language</td>\n<td>Seems to work</td>\n<td>Zero</td>\n</tr>\n<tr>\n<td>*.css</td>\n<td>Cascading Style Sheets</td>\n<td>Seems to work</td>\n<td>Zero</td>\n</tr>\n<tr>\n<td>*.js</td>\n<td>JavaScript</td>\n<td>Buggy for modern syntax features</td>\n<td>Zero</td>\n</tr>\n<tr>\n<td>*.sass</td>\n<td>Syntactically Awesome Style Sheets</td>\n<td>Seems to work</td>\n<td>Zero</td>\n</tr>\n<tr>\n<td>*.png Portable Network Graphics</td>\n<td>Seems to work</td>\n<td>Zero</td>\n<td></td>\n</tr>\n<tr>\n<td>*.jpg, *.jpeg</td>\n<td>Joint Photographic Experts Group</td>\n<td>Seems to work</td>\n<td>Zero</td>\n</tr>\n<tr>\n<td>*.svg</td>\n<td>Scalable Vector Graphics</td>\n<td>Seems to work</td>\n<td>Zero</td>\n</tr>\n<tr>\n<td>*.your_file</td>\n<td>It is made to be <a href=\"#extending-web-minify\" rel=\"nofollow\">extensible</a></td>\n<td>Submit your PR!</td>\n<td>?</td>\n</tr></tbody></table>\n<h2>Extending web-minify</h2>\n<p>web-minify can be extended to support additional formats by a very simple interface:</p>\n<ol>\n<li>Put a module under web-minify/web_minify/handlers/your_format. This can either be a moduler folder or module python source file. See css/ or html.py for example implementations.</li>\n<li>Include the new function in <strong>all</strong> in web-minify/web_minify/handlers/<strong>init</strong>.py</li>\n<li>Register the new function in self.processor_map in web-minify/web_minify/processor.py</li>\n</ol>\n<p>Easy as pie!</p>\n<h1>Other Notable Features</h1>\n<ol>\n<li>Supports recursive scanning of directories</li>\n<li>Supports spitting out .gz versions of files to speed up serving of static files</li>\n<li>Supports some controls over each format's processing</li>\n<li>Supports change detection and watch mode</li>\n<li>Made to be somewhat <a href=\"#extending-web-minify\" rel=\"nofollow\">extensible</a></li>\n</ol>\n<h1>Known Limitations and Problems:</h1>\n<ol>\n<li>Compression of modern .js haves some bugs. We welcome PRs!</li>\n<li>Some of the usage pattersn of the command line tool are not implemented yet. We welcome PRs!</li>\n<li>Codebase has ZERO tests. We welcome PRs!</li>\n</ol>\n<h1>We welcome PRs!</h1>\n<p>If you want to contribute we welcome your code contriburtions! We are proud fo the fact that this project is a true meritocracy.</p>\n<h1>License</h1>\n<p>Complete license is in the file <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> in the root of the git repo.</p>\n<blockquote>\n<p>GNU GPL and GNU LGPL or MIT.\nThis work is free software: You can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This work is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; Without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this work.</p>\n</blockquote>\n\n          </div>"}, "last_serial": 7088109, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7be4da5cdc9d3983f9783c8ef6330258", "sha256": "6c73c167a6bb2dbf9810b20efc323aa4de79490540b092fd5b6064b3817f43ae"}, "downloads": -1, "filename": "web-minify-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7be4da5cdc9d3983f9783c8ef6330258", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.4", "size": 83236, "upload_time": "2020-03-20T01:25:21", "upload_time_iso_8601": "2020-03-20T01:25:21.156778Z", "url": "https://files.pythonhosted.org/packages/b0/e9/88b1e7ded3d12fa44d9f036c078c8a0808dee7fb05fad55ea6712129386b/web-minify-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "29836de880ed318a8857650e16bed7ec", "sha256": "6945a0fa8de63625a7447d72b310996e15e3cf6b98f0511ddbd513570715ff03"}, "downloads": -1, "filename": "web-minify-0.0.2.tar.gz", "has_sig": false, "md5_digest": "29836de880ed318a8857650e16bed7ec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.4", "size": 83203, "upload_time": "2020-03-20T01:47:53", "upload_time_iso_8601": "2020-03-20T01:47:53.549460Z", "url": "https://files.pythonhosted.org/packages/74/86/8dc131ed1ed309cc2e7c6daf10d7c19ab80740d827ae1bb7ebf9ee3b1efd/web-minify-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "f7f6586df8e7a68d03ae98acda1262ad", "sha256": "2358612f7b18ed01efa9656168e5184ee27df10e2517e25465ddc3b3bc73490c"}, "downloads": -1, "filename": "web-minify-0.0.3.tar.gz", "has_sig": false, "md5_digest": "f7f6586df8e7a68d03ae98acda1262ad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.4", "size": 83292, "upload_time": "2020-03-20T01:50:59", "upload_time_iso_8601": "2020-03-20T01:50:59.603924Z", "url": "https://files.pythonhosted.org/packages/05/d8/f4d8049b92d688721f6b321c47e62f1c81409fdf5a8659e765109d7acdb5/web-minify-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "9d78c76fa2b9cd23249078659ee8981d", "sha256": "2d35f737a2bfbdecdba00330dd36eaf56e554c9a93690fa2c77e494a28c91f5e"}, "downloads": -1, "filename": "web-minify-0.0.4.tar.gz", "has_sig": false, "md5_digest": "9d78c76fa2b9cd23249078659ee8981d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.4", "size": 87790, "upload_time": "2020-04-11T16:46:23", "upload_time_iso_8601": "2020-04-11T16:46:23.299477Z", "url": "https://files.pythonhosted.org/packages/95/ba/7a1707d062f9fdcaec3ae432d22d15d47d7523ba08269c062784cff0064d/web-minify-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "5d2f8f9e1b0734546dc71849f7cd641a", "sha256": "9ae62cdadd7870e74318cfca891fe2d93ec324600b7b25d3e7285e1e3a4a9aaf"}, "downloads": -1, "filename": "web-minify-0.0.5.tar.gz", "has_sig": false, "md5_digest": "5d2f8f9e1b0734546dc71849f7cd641a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.4", "size": 88017, "upload_time": "2020-04-22T08:22:20", "upload_time_iso_8601": "2020-04-22T08:22:20.704104Z", "url": "https://files.pythonhosted.org/packages/c3/73/78fcf0f7fc01ad09d46ee9748dad8d7d63a27635c35524e1d055751ab85e/web-minify-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "966b07ba5fb1a0ba95cf1a81f10beaff", "sha256": "3361d3ac03de26d62e4e427f12c676c14fad67024649d986d5b3c123bd89fb6b"}, "downloads": -1, "filename": "web-minify-0.0.6.tar.gz", "has_sig": false, "md5_digest": "966b07ba5fb1a0ba95cf1a81f10beaff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.4", "size": 87994, "upload_time": "2020-04-22T09:35:15", "upload_time_iso_8601": "2020-04-22T09:35:15.804752Z", "url": "https://files.pythonhosted.org/packages/a3/1c/48817d0ccad715d63c664a3d0c1242c3415267aa8e7fbcbb1187ac692e80/web-minify-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "8b1259121632e3410119886c66ffa641", "sha256": "9372fb0c7fe8cc7a37d4b21c01f2bbf992170c691758ed1db4d59b862fa272ed"}, "downloads": -1, "filename": "web-minify-0.0.7.tar.gz", "has_sig": false, "md5_digest": "8b1259121632e3410119886c66ffa641", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.4", "size": 88790, "upload_time": "2020-04-23T21:44:29", "upload_time_iso_8601": "2020-04-23T21:44:29.890920Z", "url": "https://files.pythonhosted.org/packages/9e/60/4074b5ee1ace0357511394cdb9edd927a4b67e85a09a5047bb35657e29b0/web-minify-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "570fb6c0b4b971017b38db1c8120876a", "sha256": "b504f94b4038b945a63eb2d9eef4d025fde65bff2a185a1b2ce371eb1e606cb9"}, "downloads": -1, "filename": "web-minify-0.0.8.tar.gz", "has_sig": false, "md5_digest": "570fb6c0b4b971017b38db1c8120876a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.4", "size": 88776, "upload_time": "2020-04-23T21:50:01", "upload_time_iso_8601": "2020-04-23T21:50:01.165540Z", "url": "https://files.pythonhosted.org/packages/39/5c/1d72b348c4da4ba44278dad0c8ef32bf596551394ada397a7ab516186ed9/web-minify-0.0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "570fb6c0b4b971017b38db1c8120876a", "sha256": "b504f94b4038b945a63eb2d9eef4d025fde65bff2a185a1b2ce371eb1e606cb9"}, "downloads": -1, "filename": "web-minify-0.0.8.tar.gz", "has_sig": false, "md5_digest": "570fb6c0b4b971017b38db1c8120876a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.4", "size": 88776, "upload_time": "2020-04-23T21:50:01", "upload_time_iso_8601": "2020-04-23T21:50:01.165540Z", "url": "https://files.pythonhosted.org/packages/39/5c/1d72b348c4da4ba44278dad0c8ef32bf596551394ada397a7ab516186ed9/web-minify-0.0.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:30:59 2020"}