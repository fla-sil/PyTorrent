{"info": {"author": "mandrewcito", "author_email": "anbaalo@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3"], "description": "# SignalR core client\n[![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg?logo=paypal&style=flat-square)](https://www.paypal.me/mandrewcito/1)\n![Pypi](https://img.shields.io/pypi/v/signalrcore.svg)\n![Pypi - downloads month](https://img.shields.io/pypi/dm/signalrcore.svg)\n![Issues](https://img.shields.io/github/issues/mandrewcito/signalrcore.svg)\n![Open issues](https://img.shields.io/github/issues-raw/mandrewcito/signalrcore.svg)\n\n\n![logo alt](https://raw.githubusercontent.com/mandrewcito/signalrcore/master/docs/img/logo_temp.128.svg.png)\n\n\n# Links \n\n* [Dev to posts with library examples and implementation](https://dev.to/mandrewcito/singlar-core-python-client-58e7)\n\n* [Pypy](https://pypi.org/project/signalrcore/)\n\n* [Wiki - This Doc](https://mandrewcito.github.io/signalrcore/)\n\n# A tiny How To\n\n## Connect to a server without auth\n```python\nhub_connection = HubConnectionBuilder()\\\n    .with_url(server_url)\\\n    .configure_logging(logging.DEBUG)\\\n    .with_automatic_reconnect({\n        \"type\": \"raw\",\n        \"keep_alive_interval\": 10,\n        \"reconnect_interval\": 5,\n        \"max_attempts\": 5\n    }).build()\n```\n## Connect to a server with auth\n\nlogin_function must provide auth token\n\n```python\nhub_connection = HubConnectionBuilder()\\\n            .with_url(server_url,\n            options={\n                \"access_token_factory\": login_function,\n                \"headers\": {\n                    \"mycustomheader\": \"mycustomheadervalue\"\n                }\n            })\\\n            .configure_logging(logging.DEBUG)\\\n            .with_automatic_reconnect({\n                \"type\": \"raw\",\n                \"keep_alive_interval\": 10,\n                \"reconnect_interval\": 5,\n                \"max_attempts\": 5\n            }).build()\n```\n## Configure logging\n\n```python\nHubConnectionBuilder()\\\n    .with_url(server_url,\n    .configure_logging(logging.DEBUG)\n    ...\n```\n## Configure socket trace\n```python \nHubConnectionBuilder()\\\n    .with_url(server_url,\n    .configure_logging(logging.DEBUG, socket_trace=True) \n    ... \n ```\n ## Configure your own handler\n ```python\n import logging\nhandler = logging.StreamHandler()\nhandler.setLevel(logging.DEBUG)\nhub_connection = HubConnectionBuilder()\\\n    .with_url(server_url, options={\"verify_ssl\": False}) \\\n    .configure_logging(logging.DEBUG, socket_trace=True, handler=handler)\n    ...\n ```\n## Configuring reconection\nAfter reaching max_attemps an exeption will be thrown and on_disconnect event will be\nfired.\n```python\nhub_connection = HubConnectionBuilder()\\\n    .with_url(server_url)\\\n    ...\n    .build()\n```\n## Configuring aditional headers\n```python\nhub_connection = HubConnectionBuilder()\\\n            .with_url(server_url,\n            options={\n                \"headers\": {\n                    \"mycustomheader\": \"mycustomheadervalue\"\n                }\n            })\n            ...\n            .build()\n```\n## Configuring aditional querystring parameters\n```python\nserver_url =\"http.... /?myquerystringparam=134&foo=bar\"\nconnection = HubConnectionBuilder()\\\n            .with_url(server_url,\n            options={\n            })\\\n            .build()\n```\n## Congfigure skip negotiation\n```python\nhub_connection = HubConnectionBuilder() \\\n        .with_url(\"ws://\"+server_url, options={\n            \"verify_ssl\": False,\n            \"skip_negotiation\": False,\n            \"headers\": {\n            }\n        }) \\\n        .configure_logging(logging.DEBUG, socket_trace=True, handler=handler) \\\n        .build()\n\n```\n## Configuring ping(keep alive)\n\nkeep_alive_interval sets the secconds of ping message\n\n```python\nhub_connection = HubConnectionBuilder()\\\n    .with_url(server_url)\\\n    .configure_logging(logging.DEBUG)\\\n    .with_automatic_reconnect({\n        \"type\": \"raw\",\n        \"keep_alive_interval\": 10,\n        \"reconnect_interval\": 5,\n        \"max_attempts\": 5\n    }).build()\n```\n## Configuring logging\n```python\nhub_connection = HubConnectionBuilder()\\\n    .with_url(server_url)\\\n    .configure_logging(logging.DEBUG)\\\n    .with_automatic_reconnect({\n        \"type\": \"raw\",\n        \"keep_alive_interval\": 10,\n        \"reconnect_interval\": 5,\n        \"max_attempts\": 5\n    }).build()\n```\n## Events\n\n### On connect / On disconnect\non_open - fires when connection is openned and ready to send messages\non_close - fires when connection is closed\n```python\nhub_connection.on_open(lambda: print(\"connection opened and handshake received ready to send messages\"))\nhub_connection.on_close(lambda: print(\"connection closed\"))\n\n```\n### Register an operation \nReceiveMessage - signalr method\nprint - function that has as parameters args of signalr method\n```python\nhub_connection.on(\"ReceiveMessage\", print)\n```\n## Sending messages\nSendMessage - signalr method\nusername, message - parameters of signalrmethod\n```python\n    hub_connection.send(\"SendMessage\", [username, message])\n```\n## Requesting streaming (Server to client)\n```python\nhub_connection.stream(\n            \"Counter\",\n            [len(self.items), 500]).subscribe({\n                \"next\": self.on_next,\n                \"complete\": self.on_complete,\n                \"error\": self.on_error\n            })\n```\n## Client side Streaming\n```python\nfrom signalrcore.subject import  Subject\n\nsubject = Subject()\n\n# Start Streaming\nhub_connection.send(\"UploadStream\", subject)\n\n# Each iteration\nsubject.next(str(iteration))\n\n# End streaming\nsubject.complete()\n\n\n\n\n```\n# Full Examples\n\nUsing package from [aspnet core - SignalRChat](https://codeload.github.com/aspnet/Docs/zip/master) \nexample chat without auth\n```python\n\nfrom signalrcore.hub_connection_builder import HubConnectionBuilder\n\n\ndef input_with_default(input_text, default_value):\n    value = input(input_text.format(default_value))\n    return default_value if value is None or value.strip() == \"\" else value\n\n\nserver_url = input_with_default('Enter your server url(default: {0}): ', \"ws://localhost:62342/chathub\")\nusername = input_with_default('Enter your username (default: {0}): ', \"mandrewcito\")\n\nhub_connection = HubConnectionBuilder().with_url(server_url).with_automatic_reconnect({\n        \"type\": \"raw\",\n        \"keep_alive_interval\": 10,\n        \"reconnect_interval\": 5,\n        \"max_attempts\": 5\n    }).build()\nhub_connection.on(\"ReceiveMessage\", print)\nhub_connection.start()\nmessage = None\n# Do login\n\nwhile message != \"exit()\":\n    message = input(\">> \")\n    if message is not None and message is not \"\" and message is not \"exit()\":\n        hub_connection.send(\"SendMessage\", [username, message])\nhub_connection.stop()\n\n\n```\n\nUsing package from [aspnet core - SignalRAuthenticationSample](https://codeload.github.com/aspnet/Docs/zip/master) ,\n\n# Example with Auth\n```python\nimport requests\nfrom signalrcore.hub_connection_builder import HubConnectionBuilder\n\n\ndef input_with_default(input_text, default_value):\n    value = input(input_text.format(default_value))\n    return default_value if value is None or value.strip() == \"\" else value\n\n\ndef signalr_core_example_login(url, user, username_password):\n    response = requests.post(url, data={\"email\": user, \"password\": username_password})\n    return response.json()[\"token\"]\n\n\nlogin_url = input_with_default('Enter your server login url({0}):', \"http://localhost:50746/account/token\")\nserver_url = input_with_default('Enter your server url(default: {0}): ', \"ws://localhost:50746/hubs/chat\")\nusername = input_with_default('Enter your username (default: {0}): ', \"mandrewcito@mandrewcito.com\")\npassword = input_with_default('Enter your password (default: {0}): ', \"Abc123.--123?\")\n\nhub_connection = HubConnectionBuilder()\\\n    .with_url(server_url, options={\n        \"access_token_factory\": lambda: signalr_core_example_login(login_url, username, password)\n    }).with_automatic_reconnect({\n        \"type\": \"interval\",\n        \"keep_alive_interval\": 10,\n        \"intervals\": [1, 3, 5, 6, 7, 87, 3]\n    })\\\n    .build()\n\nhub_connection.on(\"ReceiveSystemMessage\", print)\nhub_connection.on(\"ReceiveChatMessage\", print)\nhub_connection.on(\"ReceiveDirectMessage\", print)\nhub_connection.start()\nmessage = None\nwhile message != \"exit()\":\n    message = input(\">> \")\n    if message is not None and message is not \"\" and message is not \"exit()\":\n        hub_connection.send(\"Send\", [message])\nhub_connection.stop()\n```\n# Example with streaming\n\nUsing package from [aspnet core - SignalRStreaming](https://codeload.github.com/aspnet/Docs/zip/master) ,\n\n```python\n\n\nimport time\nimport sys\nfrom signalrcore.hub_connection_builder import HubConnectionBuilder\n\n\ndef input_with_default(input_text, default_value):\n    value = input(input_text.format(default_value))\n    return default_value if value is None or value.strip() == \"\" else value\n\n\nserver_url = input_with_default('Enter your server url(default: {0}): ', \"ws://localhost:57957/streamHub\")\n\nhub_connection = HubConnectionBuilder().with_url(server_url).build()\nhub_connection.start()\ntime.sleep(10)\n\n\ndef bye(error, x):\n    if error:\n        print(\"error {0}\".format(x))\n    else:\n        print(\"complete! \")\n    global hub_connection\n    hub_connection.stop()\n    sys.exit(0)\n\n\nhub_connection.stream(\n    \"Counter\",\n    [10, 500]).subscribe({\n        \"next\": lambda x: print(\"next callback: \", x),\n        \"complete\": lambda x: bye(False, x),\n        \"error\": lambda x: bye(True, x)\n    })\n\n```\n\n# Example with client side streaming\n\nUsing package from [aspnet core - SignalRStreaming](https://docs.microsoft.com/es-es/aspnet/core/signalr/streaming?view=aspnetcore-3.1) ,\n\n\n\n````python\nfrom signalrcore.hub_connection_builder import HubConnectionBuilder\nfrom signalrcore.subject import Subject\n\n\ndef input_with_default(input_text, default_value):\n    value = input(input_text.format(default_value))\n    return default_value if value is None or value.strip() == \"\" else value\n\n\nserver_url = input_with_default('Enter your server url(default: {0}): ', \"wss://localhost:44376/chatHub\")\n\nhub_connection = HubConnectionBuilder()\\\n    .with_url(server_url, options={\"verify_ssl\": False}) \\\n    .configure_logging(logging.DEBUG) \\\n    .with_automatic_reconnect({\n            \"type\": \"interval\",\n            \"keep_alive_interval\": 10,\n            \"intervals\": [1, 3, 5, 6, 7, 87, 3]\n        })\\\n    .build()\nhub_connection.start()\ntime.sleep(10)\n\n\ndef bye(error, x):\n    if error:\n        print(\"error {0}\".format(x))\n    else:\n        print(\"complete! \")\n    global hub_connection\n    hub_connection.stop()\n    sys.exit(0)\n\n\niteration = 0\nsubject = Subject()\n\n\ndef interval_handle():\n    global iteration\n    iteration += 1\n    subject.next(str(iteration))\n    if iteration == 10:\n        subject.complete()\n\n\nhub_connection.send(\"UploadStream\", subject)\n\nwhile iteration != 10:\n    interval_handle()\n    time.sleep(0.5)\n\n````\n\n# Example azure functions\n\nUsing this [example](https://docs.microsoft.com/es-es/azure/azure-signalr/signalr-quickstart-azure-functions-javascript?WT.mc_id=signalrquickstart-github-antchu) ,\n\n```python\nimport logging\nimport sys\nimport requests\nfrom signalrcore.hub_connection_builder import HubConnectionBuilder\n\n\ndef input_with_default(input_text, default_value):\n    value = input(input_text.format(default_value))\n    return default_value if value is None or value.strip() == \"\" else value\n\n\nserver_url = input_with_default(\n    'Enter your server url(default: {0}): ',\n    \"localhost:7071/api\")\nusername = input_with_default('Enter your username (default: {0}): ', \"mandrewcito\")\nhandler = logging.StreamHandler()\nhandler.setLevel(logging.DEBUG)\nformatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')\nhandler.setFormatter(formatter)\nhub_connection = HubConnectionBuilder() \\\n        .with_url(\"ws://\"+server_url, options={\n            \"verify_ssl\": False,\n            \"skip_negotiation\": False,\n            \"headers\": {\n            }\n        }) \\\n        .configure_logging(logging.DEBUG, socket_trace=True, handler=handler) \\\n        .build()\n\nhub_connection.on_open(lambda: print(\"connection opened and handshake received ready to send messages\"))\nhub_connection.on_close(lambda: print(\"connection closed\"))\n\nhub_connection.on(\"newMessage\", print)\nhub_connection.start()\nmessage = None\n\n# Do login\n\nwhile message != \"exit()\":\n    message = input(\">> \")\n    if message is not None and message is not \"\" and message is not \"exit()\":\n        # hub_connection.send(\"sendMessage\", [username, message])\n        requests.post(\"http://localhost:7071/api/messages\", json={\"sender\": username, \"text\": message})\n\nhub_connection.stop()\n\nsys.exit(0)\n\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mandrewcito/signalrcore", "keywords": "signalr core client 3.0", "license": "", "maintainer": "", "maintainer_email": "", "name": "signalrcore", "package_url": "https://pypi.org/project/signalrcore/", "platform": "", "project_url": "https://pypi.org/project/signalrcore/", "project_urls": {"Homepage": "https://github.com/mandrewcito/signalrcore"}, "release_url": "https://pypi.org/project/signalrcore/0.8.4/", "requires_dist": ["requests (>=2.21.0)", "websocket-client (>=0.55.0)"], "requires_python": "", "summary": "A Python SignalR Core client, with invocation auth and two way streaming. Compatible with azure / serverless functions. Also with automatic reconnect and manually reconnect.", "version": "0.8.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SignalR core client</h1>\n<p><a href=\"https://www.paypal.me/mandrewcito/1\" rel=\"nofollow\"><img alt=\"Donate\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3bb22c67e9ddb1beb055a68d5707766480222b41/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f6e6174652d50617950616c2d677265656e2e7376673f6c6f676f3d70617970616c267374796c653d666c61742d737175617265\"></a>\n<img alt=\"Pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a77ce7963b363f2185183e019815330815647d8b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7369676e616c72636f72652e737667\">\n<img alt=\"Pypi - downloads month\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bfa0993663c34fdda76e961f9fee462c6d870686/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f7369676e616c72636f72652e737667\">\n<img alt=\"Issues\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4148a4c204f4ccd20b28c1da42f09c46018434e9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6d616e647265776369746f2f7369676e616c72636f72652e737667\">\n<img alt=\"Open issues\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ba86c1d588ab8d7698523d7f0e4cb4e5c749a9ab/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d7261772f6d616e647265776369746f2f7369676e616c72636f72652e737667\"></p>\n<p><img alt=\"logo alt\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6512d16cfe8929379f938cad926ca9519b6616b5/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d616e647265776369746f2f7369676e616c72636f72652f6d61737465722f646f63732f696d672f6c6f676f5f74656d702e3132382e7376672e706e67\"></p>\n<h1>Links</h1>\n<ul>\n<li>\n<p><a href=\"https://dev.to/mandrewcito/singlar-core-python-client-58e7\" rel=\"nofollow\">Dev to posts with library examples and implementation</a></p>\n</li>\n<li>\n<p><a href=\"https://pypi.org/project/signalrcore/\" rel=\"nofollow\">Pypy</a></p>\n</li>\n<li>\n<p><a href=\"https://mandrewcito.github.io/signalrcore/\" rel=\"nofollow\">Wiki - This Doc</a></p>\n</li>\n</ul>\n<h1>A tiny How To</h1>\n<h2>Connect to a server without auth</h2>\n<pre><span class=\"n\">hub_connection</span> <span class=\"o\">=</span> <span class=\"n\">HubConnectionBuilder</span><span class=\"p\">()</span>\\\n    <span class=\"o\">.</span><span class=\"n\">with_url</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"p\">)</span>\\\n    <span class=\"o\">.</span><span class=\"n\">configure_logging</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\\\n    <span class=\"o\">.</span><span class=\"n\">with_automatic_reconnect</span><span class=\"p\">({</span>\n        <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"raw\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"keep_alive_interval\"</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"reconnect_interval\"</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"max_attempts\"</span><span class=\"p\">:</span> <span class=\"mi\">5</span>\n    <span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n</pre>\n<h2>Connect to a server with auth</h2>\n<p>login_function must provide auth token</p>\n<pre><span class=\"n\">hub_connection</span> <span class=\"o\">=</span> <span class=\"n\">HubConnectionBuilder</span><span class=\"p\">()</span>\\\n            <span class=\"o\">.</span><span class=\"n\">with_url</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"p\">,</span>\n            <span class=\"n\">options</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                <span class=\"s2\">\"access_token_factory\"</span><span class=\"p\">:</span> <span class=\"n\">login_function</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"headers\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">\"mycustomheader\"</span><span class=\"p\">:</span> <span class=\"s2\">\"mycustomheadervalue\"</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">})</span>\\\n            <span class=\"o\">.</span><span class=\"n\">configure_logging</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\\\n            <span class=\"o\">.</span><span class=\"n\">with_automatic_reconnect</span><span class=\"p\">({</span>\n                <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"raw\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"keep_alive_interval\"</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"reconnect_interval\"</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"max_attempts\"</span><span class=\"p\">:</span> <span class=\"mi\">5</span>\n            <span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n</pre>\n<h2>Configure logging</h2>\n<pre><span class=\"n\">HubConnectionBuilder</span><span class=\"p\">()</span>\\\n    <span class=\"o\">.</span><span class=\"n\">with_url</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"p\">,</span>\n    <span class=\"o\">.</span><span class=\"n\">configure_logging</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n    <span class=\"o\">...</span>\n</pre>\n<h2>Configure socket trace</h2>\n<pre><span class=\"n\">HubConnectionBuilder</span><span class=\"p\">()</span>\\\n    <span class=\"o\">.</span><span class=\"n\">with_url</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"p\">,</span>\n    <span class=\"o\">.</span><span class=\"n\">configure_logging</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">,</span> <span class=\"n\">socket_trace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> \n    <span class=\"o\">...</span> \n</pre>\n<h2>Configure your own handler</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"n\">handler</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">StreamHandler</span><span class=\"p\">()</span>\n<span class=\"n\">handler</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n<span class=\"n\">hub_connection</span> <span class=\"o\">=</span> <span class=\"n\">HubConnectionBuilder</span><span class=\"p\">()</span>\\\n   <span class=\"o\">.</span><span class=\"n\">with_url</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"verify_ssl\"</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">})</span> \\\n   <span class=\"o\">.</span><span class=\"n\">configure_logging</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">,</span> <span class=\"n\">socket_trace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">handler</span><span class=\"o\">=</span><span class=\"n\">handler</span><span class=\"p\">)</span>\n   <span class=\"o\">...</span>\n</pre>\n<h2>Configuring reconection</h2>\n<p>After reaching max_attemps an exeption will be thrown and on_disconnect event will be\nfired.</p>\n<pre><span class=\"n\">hub_connection</span> <span class=\"o\">=</span> <span class=\"n\">HubConnectionBuilder</span><span class=\"p\">()</span>\\\n    <span class=\"o\">.</span><span class=\"n\">with_url</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"p\">)</span>\\\n    <span class=\"o\">...</span>\n    <span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n</pre>\n<h2>Configuring aditional headers</h2>\n<pre><span class=\"n\">hub_connection</span> <span class=\"o\">=</span> <span class=\"n\">HubConnectionBuilder</span><span class=\"p\">()</span>\\\n            <span class=\"o\">.</span><span class=\"n\">with_url</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"p\">,</span>\n            <span class=\"n\">options</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                <span class=\"s2\">\"headers\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">\"mycustomheader\"</span><span class=\"p\">:</span> <span class=\"s2\">\"mycustomheadervalue\"</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">})</span>\n            <span class=\"o\">...</span>\n            <span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n</pre>\n<h2>Configuring aditional querystring parameters</h2>\n<pre><span class=\"n\">server_url</span> <span class=\"o\">=</span><span class=\"s2\">\"http.... /?myquerystringparam=134&amp;foo=bar\"</span>\n<span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"n\">HubConnectionBuilder</span><span class=\"p\">()</span>\\\n            <span class=\"o\">.</span><span class=\"n\">with_url</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"p\">,</span>\n            <span class=\"n\">options</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"p\">})</span>\\\n            <span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n</pre>\n<h2>Congfigure skip negotiation</h2>\n<pre><span class=\"n\">hub_connection</span> <span class=\"o\">=</span> <span class=\"n\">HubConnectionBuilder</span><span class=\"p\">()</span> \\\n        <span class=\"o\">.</span><span class=\"n\">with_url</span><span class=\"p\">(</span><span class=\"s2\">\"ws://\"</span><span class=\"o\">+</span><span class=\"n\">server_url</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">\"verify_ssl\"</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"skip_negotiation\"</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"headers\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">})</span> \\\n        <span class=\"o\">.</span><span class=\"n\">configure_logging</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">,</span> <span class=\"n\">socket_trace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">handler</span><span class=\"o\">=</span><span class=\"n\">handler</span><span class=\"p\">)</span> \\\n        <span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n</pre>\n<h2>Configuring ping(keep alive)</h2>\n<p>keep_alive_interval sets the secconds of ping message</p>\n<pre><span class=\"n\">hub_connection</span> <span class=\"o\">=</span> <span class=\"n\">HubConnectionBuilder</span><span class=\"p\">()</span>\\\n    <span class=\"o\">.</span><span class=\"n\">with_url</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"p\">)</span>\\\n    <span class=\"o\">.</span><span class=\"n\">configure_logging</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\\\n    <span class=\"o\">.</span><span class=\"n\">with_automatic_reconnect</span><span class=\"p\">({</span>\n        <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"raw\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"keep_alive_interval\"</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"reconnect_interval\"</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"max_attempts\"</span><span class=\"p\">:</span> <span class=\"mi\">5</span>\n    <span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n</pre>\n<h2>Configuring logging</h2>\n<pre><span class=\"n\">hub_connection</span> <span class=\"o\">=</span> <span class=\"n\">HubConnectionBuilder</span><span class=\"p\">()</span>\\\n    <span class=\"o\">.</span><span class=\"n\">with_url</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"p\">)</span>\\\n    <span class=\"o\">.</span><span class=\"n\">configure_logging</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\\\n    <span class=\"o\">.</span><span class=\"n\">with_automatic_reconnect</span><span class=\"p\">({</span>\n        <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"raw\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"keep_alive_interval\"</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"reconnect_interval\"</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"max_attempts\"</span><span class=\"p\">:</span> <span class=\"mi\">5</span>\n    <span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n</pre>\n<h2>Events</h2>\n<h3>On connect / On disconnect</h3>\n<p>on_open - fires when connection is openned and ready to send messages\non_close - fires when connection is closed</p>\n<pre><span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">on_open</span><span class=\"p\">(</span><span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"connection opened and handshake received ready to send messages\"</span><span class=\"p\">))</span>\n<span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">on_close</span><span class=\"p\">(</span><span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"connection closed\"</span><span class=\"p\">))</span>\n</pre>\n<h3>Register an operation</h3>\n<p>ReceiveMessage - signalr method\nprint - function that has as parameters args of signalr method</p>\n<pre><span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s2\">\"ReceiveMessage\"</span><span class=\"p\">,</span> <span class=\"nb\">print</span><span class=\"p\">)</span>\n</pre>\n<h2>Sending messages</h2>\n<p>SendMessage - signalr method\nusername, message - parameters of signalrmethod</p>\n<pre>    <span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"s2\">\"SendMessage\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">])</span>\n</pre>\n<h2>Requesting streaming (Server to client)</h2>\n<pre><span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">stream</span><span class=\"p\">(</span>\n            <span class=\"s2\">\"Counter\"</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">),</span> <span class=\"mi\">500</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">({</span>\n                <span class=\"s2\">\"next\"</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">on_next</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"complete\"</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">on_complete</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"error\"</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">on_error</span>\n            <span class=\"p\">})</span>\n</pre>\n<h2>Client side Streaming</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">signalrcore.subject</span> <span class=\"kn\">import</span>  <span class=\"n\">Subject</span>\n\n<span class=\"n\">subject</span> <span class=\"o\">=</span> <span class=\"n\">Subject</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Start Streaming</span>\n<span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"s2\">\"UploadStream\"</span><span class=\"p\">,</span> <span class=\"n\">subject</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Each iteration</span>\n<span class=\"n\">subject</span><span class=\"o\">.</span><span class=\"n\">next</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">iteration</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># End streaming</span>\n<span class=\"n\">subject</span><span class=\"o\">.</span><span class=\"n\">complete</span><span class=\"p\">()</span>\n</pre>\n<h1>Full Examples</h1>\n<p>Using package from <a href=\"https://codeload.github.com/aspnet/Docs/zip/master\" rel=\"nofollow\">aspnet core - SignalRChat</a>\nexample chat without auth</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">signalrcore.hub_connection_builder</span> <span class=\"kn\">import</span> <span class=\"n\">HubConnectionBuilder</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">input_with_default</span><span class=\"p\">(</span><span class=\"n\">input_text</span><span class=\"p\">,</span> <span class=\"n\">default_value</span><span class=\"p\">):</span>\n    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"n\">input_text</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">default_value</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">default_value</span> <span class=\"k\">if</span> <span class=\"n\">value</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">or</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">\"\"</span> <span class=\"k\">else</span> <span class=\"n\">value</span>\n\n\n<span class=\"n\">server_url</span> <span class=\"o\">=</span> <span class=\"n\">input_with_default</span><span class=\"p\">(</span><span class=\"s1\">'Enter your server url(default: </span><span class=\"si\">{0}</span><span class=\"s1\">): '</span><span class=\"p\">,</span> <span class=\"s2\">\"ws://localhost:62342/chathub\"</span><span class=\"p\">)</span>\n<span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"n\">input_with_default</span><span class=\"p\">(</span><span class=\"s1\">'Enter your username (default: </span><span class=\"si\">{0}</span><span class=\"s1\">): '</span><span class=\"p\">,</span> <span class=\"s2\">\"mandrewcito\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">hub_connection</span> <span class=\"o\">=</span> <span class=\"n\">HubConnectionBuilder</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">with_url</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">with_automatic_reconnect</span><span class=\"p\">({</span>\n        <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"raw\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"keep_alive_interval\"</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"reconnect_interval\"</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"max_attempts\"</span><span class=\"p\">:</span> <span class=\"mi\">5</span>\n    <span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n<span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s2\">\"ReceiveMessage\"</span><span class=\"p\">,</span> <span class=\"nb\">print</span><span class=\"p\">)</span>\n<span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"c1\"># Do login</span>\n\n<span class=\"k\">while</span> <span class=\"n\">message</span> <span class=\"o\">!=</span> <span class=\"s2\">\"exit()\"</span><span class=\"p\">:</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s2\">\"&gt;&gt; \"</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">message</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"n\">message</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"s2\">\"\"</span> <span class=\"ow\">and</span> <span class=\"n\">message</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"s2\">\"exit()\"</span><span class=\"p\">:</span>\n        <span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"s2\">\"SendMessage\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">])</span>\n<span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n<p>Using package from <a href=\"https://codeload.github.com/aspnet/Docs/zip/master\" rel=\"nofollow\">aspnet core - SignalRAuthenticationSample</a> ,</p>\n<h1>Example with Auth</h1>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n<span class=\"kn\">from</span> <span class=\"nn\">signalrcore.hub_connection_builder</span> <span class=\"kn\">import</span> <span class=\"n\">HubConnectionBuilder</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">input_with_default</span><span class=\"p\">(</span><span class=\"n\">input_text</span><span class=\"p\">,</span> <span class=\"n\">default_value</span><span class=\"p\">):</span>\n    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"n\">input_text</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">default_value</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">default_value</span> <span class=\"k\">if</span> <span class=\"n\">value</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">or</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">\"\"</span> <span class=\"k\">else</span> <span class=\"n\">value</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">signalr_core_example_login</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">username_password</span><span class=\"p\">):</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"email\"</span><span class=\"p\">:</span> <span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"s2\">\"password\"</span><span class=\"p\">:</span> <span class=\"n\">username_password</span><span class=\"p\">})</span>\n    <span class=\"k\">return</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()[</span><span class=\"s2\">\"token\"</span><span class=\"p\">]</span>\n\n\n<span class=\"n\">login_url</span> <span class=\"o\">=</span> <span class=\"n\">input_with_default</span><span class=\"p\">(</span><span class=\"s1\">'Enter your server login url(</span><span class=\"si\">{0}</span><span class=\"s1\">):'</span><span class=\"p\">,</span> <span class=\"s2\">\"http://localhost:50746/account/token\"</span><span class=\"p\">)</span>\n<span class=\"n\">server_url</span> <span class=\"o\">=</span> <span class=\"n\">input_with_default</span><span class=\"p\">(</span><span class=\"s1\">'Enter your server url(default: </span><span class=\"si\">{0}</span><span class=\"s1\">): '</span><span class=\"p\">,</span> <span class=\"s2\">\"ws://localhost:50746/hubs/chat\"</span><span class=\"p\">)</span>\n<span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"n\">input_with_default</span><span class=\"p\">(</span><span class=\"s1\">'Enter your username (default: </span><span class=\"si\">{0}</span><span class=\"s1\">): '</span><span class=\"p\">,</span> <span class=\"s2\">\"mandrewcito@mandrewcito.com\"</span><span class=\"p\">)</span>\n<span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"n\">input_with_default</span><span class=\"p\">(</span><span class=\"s1\">'Enter your password (default: </span><span class=\"si\">{0}</span><span class=\"s1\">): '</span><span class=\"p\">,</span> <span class=\"s2\">\"Abc123.--123?\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">hub_connection</span> <span class=\"o\">=</span> <span class=\"n\">HubConnectionBuilder</span><span class=\"p\">()</span>\\\n    <span class=\"o\">.</span><span class=\"n\">with_url</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">\"access_token_factory\"</span><span class=\"p\">:</span> <span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"n\">signalr_core_example_login</span><span class=\"p\">(</span><span class=\"n\">login_url</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">)</span>\n    <span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">with_automatic_reconnect</span><span class=\"p\">({</span>\n        <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"interval\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"keep_alive_interval\"</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"intervals\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">87</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n    <span class=\"p\">})</span>\\\n    <span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n\n<span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s2\">\"ReceiveSystemMessage\"</span><span class=\"p\">,</span> <span class=\"nb\">print</span><span class=\"p\">)</span>\n<span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s2\">\"ReceiveChatMessage\"</span><span class=\"p\">,</span> <span class=\"nb\">print</span><span class=\"p\">)</span>\n<span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s2\">\"ReceiveDirectMessage\"</span><span class=\"p\">,</span> <span class=\"nb\">print</span><span class=\"p\">)</span>\n<span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"k\">while</span> <span class=\"n\">message</span> <span class=\"o\">!=</span> <span class=\"s2\">\"exit()\"</span><span class=\"p\">:</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s2\">\"&gt;&gt; \"</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">message</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"n\">message</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"s2\">\"\"</span> <span class=\"ow\">and</span> <span class=\"n\">message</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"s2\">\"exit()\"</span><span class=\"p\">:</span>\n        <span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"s2\">\"Send\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">message</span><span class=\"p\">])</span>\n<span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n<h1>Example with streaming</h1>\n<p>Using package from <a href=\"https://codeload.github.com/aspnet/Docs/zip/master\" rel=\"nofollow\">aspnet core - SignalRStreaming</a> ,</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">from</span> <span class=\"nn\">signalrcore.hub_connection_builder</span> <span class=\"kn\">import</span> <span class=\"n\">HubConnectionBuilder</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">input_with_default</span><span class=\"p\">(</span><span class=\"n\">input_text</span><span class=\"p\">,</span> <span class=\"n\">default_value</span><span class=\"p\">):</span>\n    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"n\">input_text</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">default_value</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">default_value</span> <span class=\"k\">if</span> <span class=\"n\">value</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">or</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">\"\"</span> <span class=\"k\">else</span> <span class=\"n\">value</span>\n\n\n<span class=\"n\">server_url</span> <span class=\"o\">=</span> <span class=\"n\">input_with_default</span><span class=\"p\">(</span><span class=\"s1\">'Enter your server url(default: </span><span class=\"si\">{0}</span><span class=\"s1\">): '</span><span class=\"p\">,</span> <span class=\"s2\">\"ws://localhost:57957/streamHub\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">hub_connection</span> <span class=\"o\">=</span> <span class=\"n\">HubConnectionBuilder</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">with_url</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n<span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">bye</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">error</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"error </span><span class=\"si\">{0}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">))</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"complete! \"</span><span class=\"p\">)</span>\n    <span class=\"k\">global</span> <span class=\"n\">hub_connection</span>\n    <span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">stream</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"Counter\"</span><span class=\"p\">,</span>\n    <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">({</span>\n        <span class=\"s2\">\"next\"</span><span class=\"p\">:</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"next callback: \"</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">),</span>\n        <span class=\"s2\">\"complete\"</span><span class=\"p\">:</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">bye</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">),</span>\n        <span class=\"s2\">\"error\"</span><span class=\"p\">:</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">bye</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n    <span class=\"p\">})</span>\n</pre>\n<h1>Example with client side streaming</h1>\n<p>Using package from <a href=\"https://docs.microsoft.com/es-es/aspnet/core/signalr/streaming?view=aspnetcore-3.1\" rel=\"nofollow\">aspnet core - SignalRStreaming</a> ,</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">signalrcore.hub_connection_builder</span> <span class=\"kn\">import</span> <span class=\"n\">HubConnectionBuilder</span>\n<span class=\"kn\">from</span> <span class=\"nn\">signalrcore.subject</span> <span class=\"kn\">import</span> <span class=\"n\">Subject</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">input_with_default</span><span class=\"p\">(</span><span class=\"n\">input_text</span><span class=\"p\">,</span> <span class=\"n\">default_value</span><span class=\"p\">):</span>\n    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"n\">input_text</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">default_value</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">default_value</span> <span class=\"k\">if</span> <span class=\"n\">value</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">or</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">\"\"</span> <span class=\"k\">else</span> <span class=\"n\">value</span>\n\n\n<span class=\"n\">server_url</span> <span class=\"o\">=</span> <span class=\"n\">input_with_default</span><span class=\"p\">(</span><span class=\"s1\">'Enter your server url(default: </span><span class=\"si\">{0}</span><span class=\"s1\">): '</span><span class=\"p\">,</span> <span class=\"s2\">\"wss://localhost:44376/chatHub\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">hub_connection</span> <span class=\"o\">=</span> <span class=\"n\">HubConnectionBuilder</span><span class=\"p\">()</span>\\\n    <span class=\"o\">.</span><span class=\"n\">with_url</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"verify_ssl\"</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">})</span> \\\n    <span class=\"o\">.</span><span class=\"n\">configure_logging</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span> \\\n    <span class=\"o\">.</span><span class=\"n\">with_automatic_reconnect</span><span class=\"p\">({</span>\n            <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"interval\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"keep_alive_interval\"</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"intervals\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">87</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n        <span class=\"p\">})</span>\\\n    <span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n<span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">bye</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">error</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"error </span><span class=\"si\">{0}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">))</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"complete! \"</span><span class=\"p\">)</span>\n    <span class=\"k\">global</span> <span class=\"n\">hub_connection</span>\n    <span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">iteration</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">subject</span> <span class=\"o\">=</span> <span class=\"n\">Subject</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">interval_handle</span><span class=\"p\">():</span>\n    <span class=\"k\">global</span> <span class=\"n\">iteration</span>\n    <span class=\"n\">iteration</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"n\">subject</span><span class=\"o\">.</span><span class=\"n\">next</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">iteration</span><span class=\"p\">))</span>\n    <span class=\"k\">if</span> <span class=\"n\">iteration</span> <span class=\"o\">==</span> <span class=\"mi\">10</span><span class=\"p\">:</span>\n        <span class=\"n\">subject</span><span class=\"o\">.</span><span class=\"n\">complete</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"s2\">\"UploadStream\"</span><span class=\"p\">,</span> <span class=\"n\">subject</span><span class=\"p\">)</span>\n\n<span class=\"k\">while</span> <span class=\"n\">iteration</span> <span class=\"o\">!=</span> <span class=\"mi\">10</span><span class=\"p\">:</span>\n    <span class=\"n\">interval_handle</span><span class=\"p\">()</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n</pre>\n<h1>Example azure functions</h1>\n<p>Using this <a href=\"https://docs.microsoft.com/es-es/azure/azure-signalr/signalr-quickstart-azure-functions-javascript?WT.mc_id=signalrquickstart-github-antchu\" rel=\"nofollow\">example</a> ,</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n<span class=\"kn\">from</span> <span class=\"nn\">signalrcore.hub_connection_builder</span> <span class=\"kn\">import</span> <span class=\"n\">HubConnectionBuilder</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">input_with_default</span><span class=\"p\">(</span><span class=\"n\">input_text</span><span class=\"p\">,</span> <span class=\"n\">default_value</span><span class=\"p\">):</span>\n    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"n\">input_text</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">default_value</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">default_value</span> <span class=\"k\">if</span> <span class=\"n\">value</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">or</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">\"\"</span> <span class=\"k\">else</span> <span class=\"n\">value</span>\n\n\n<span class=\"n\">server_url</span> <span class=\"o\">=</span> <span class=\"n\">input_with_default</span><span class=\"p\">(</span>\n    <span class=\"s1\">'Enter your server url(default: </span><span class=\"si\">{0}</span><span class=\"s1\">): '</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"localhost:7071/api\"</span><span class=\"p\">)</span>\n<span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"n\">input_with_default</span><span class=\"p\">(</span><span class=\"s1\">'Enter your username (default: </span><span class=\"si\">{0}</span><span class=\"s1\">): '</span><span class=\"p\">,</span> <span class=\"s2\">\"mandrewcito\"</span><span class=\"p\">)</span>\n<span class=\"n\">handler</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">StreamHandler</span><span class=\"p\">()</span>\n<span class=\"n\">handler</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n<span class=\"n\">formatter</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">Formatter</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">%(asctime)s</span><span class=\"s1\"> - </span><span class=\"si\">%(name)s</span><span class=\"s1\"> - </span><span class=\"si\">%(levelname)s</span><span class=\"s1\"> - </span><span class=\"si\">%(message)s</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n<span class=\"n\">handler</span><span class=\"o\">.</span><span class=\"n\">setFormatter</span><span class=\"p\">(</span><span class=\"n\">formatter</span><span class=\"p\">)</span>\n<span class=\"n\">hub_connection</span> <span class=\"o\">=</span> <span class=\"n\">HubConnectionBuilder</span><span class=\"p\">()</span> \\\n        <span class=\"o\">.</span><span class=\"n\">with_url</span><span class=\"p\">(</span><span class=\"s2\">\"ws://\"</span><span class=\"o\">+</span><span class=\"n\">server_url</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s2\">\"verify_ssl\"</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"skip_negotiation\"</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"headers\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">})</span> \\\n        <span class=\"o\">.</span><span class=\"n\">configure_logging</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">,</span> <span class=\"n\">socket_trace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">handler</span><span class=\"o\">=</span><span class=\"n\">handler</span><span class=\"p\">)</span> \\\n        <span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n\n<span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">on_open</span><span class=\"p\">(</span><span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"connection opened and handshake received ready to send messages\"</span><span class=\"p\">))</span>\n<span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">on_close</span><span class=\"p\">(</span><span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"connection closed\"</span><span class=\"p\">))</span>\n\n<span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">on</span><span class=\"p\">(</span><span class=\"s2\">\"newMessage\"</span><span class=\"p\">,</span> <span class=\"nb\">print</span><span class=\"p\">)</span>\n<span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n<span class=\"c1\"># Do login</span>\n\n<span class=\"k\">while</span> <span class=\"n\">message</span> <span class=\"o\">!=</span> <span class=\"s2\">\"exit()\"</span><span class=\"p\">:</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s2\">\"&gt;&gt; \"</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">message</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"n\">message</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"s2\">\"\"</span> <span class=\"ow\">and</span> <span class=\"n\">message</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"s2\">\"exit()\"</span><span class=\"p\">:</span>\n        <span class=\"c1\"># hub_connection.send(\"sendMessage\", [username, message])</span>\n        <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s2\">\"http://localhost:7071/api/messages\"</span><span class=\"p\">,</span> <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"sender\"</span><span class=\"p\">:</span> <span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"s2\">\"text\"</span><span class=\"p\">:</span> <span class=\"n\">message</span><span class=\"p\">})</span>\n\n<span class=\"n\">hub_connection</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n\n<span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6641852, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0507ca23746d2f258d6559e6c5ef1ea4", "sha256": "559e42aa5c22f99ef5d53da03848b4f380ed04087fad0d9aea30a8f88a502b4e"}, "downloads": -1, "filename": "signalrcore-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0507ca23746d2f258d6559e6c5ef1ea4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7765, "upload_time": "2019-02-24T16:04:58", "upload_time_iso_8601": "2019-02-24T16:04:58.442830Z", "url": "https://files.pythonhosted.org/packages/ae/d7/ef53b88f8ff300112adb072a4f998014f09dc0b17e1230186b4a5d6e6f44/signalrcore-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "25aa6c7620ed0d1d031862299d41ad9f", "sha256": "2854e94e1b9d12a627fac3af1581ca38a77fa597e5b3e6fdc508275394e19e17"}, "downloads": -1, "filename": "signalrcore-0.1.0.tar.gz", "has_sig": false, "md5_digest": "25aa6c7620ed0d1d031862299d41ad9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3645, "upload_time": "2019-02-24T16:05:00", "upload_time_iso_8601": "2019-02-24T16:05:00.461117Z", "url": "https://files.pythonhosted.org/packages/ca/30/042014298e17e2171f21adde6994e555a138e7e11394e12303c21e3bdb0f/signalrcore-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e2a6a4ff67125327ee5f8ebe57119566", "sha256": "c4e51d5edcf24ab46256e000f9356de7ab3887cbea47da3f08da7f51a0545f8b"}, "downloads": -1, "filename": "signalrcore-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e2a6a4ff67125327ee5f8ebe57119566", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8191, "upload_time": "2019-02-24T16:07:20", "upload_time_iso_8601": "2019-02-24T16:07:20.850363Z", "url": "https://files.pythonhosted.org/packages/ed/09/1b3e13419a9c0813c88747be81a5d8e566bb0de5038ece16842129ec0d0f/signalrcore-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "86601fdb1e16e5b39db25ed7736474fa", "sha256": "6fad93c84da699280f3acf12bca78239e4f4ed50badf91a6eb31630c496810f5"}, "downloads": -1, "filename": "signalrcore-0.1.1.tar.gz", "has_sig": false, "md5_digest": "86601fdb1e16e5b39db25ed7736474fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4119, "upload_time": "2019-02-24T16:07:22", "upload_time_iso_8601": "2019-02-24T16:07:22.717399Z", "url": "https://files.pythonhosted.org/packages/c2/17/77bfbcaa3024325a3299db05969478b12c9a629d42911853726d3e5c5fa4/signalrcore-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "9bc32a56b8795e01702012cbae4299c1", "sha256": "a6b19913d0e4415ca10eda9ff0c9059970273c78e0588c05fbb9154dc21d04dd"}, "downloads": -1, "filename": "signalrcore-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9bc32a56b8795e01702012cbae4299c1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8942, "upload_time": "2019-02-24T21:12:51", "upload_time_iso_8601": "2019-02-24T21:12:51.385612Z", "url": "https://files.pythonhosted.org/packages/5c/6d/d9d338a7a7cd4fb9ba32ee41d29cb676c3b0c0dc6c5a59e59af8f1dfd75c/signalrcore-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59e982daad8c986232244fce40b6330f", "sha256": "ec4374b3009a8d542d5ce3daea28e72fac9dd49df9bc85f7b0d2ddcc95a7586a"}, "downloads": -1, "filename": "signalrcore-0.2.0.tar.gz", "has_sig": false, "md5_digest": "59e982daad8c986232244fce40b6330f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5147, "upload_time": "2019-02-24T21:12:52", "upload_time_iso_8601": "2019-02-24T21:12:52.566111Z", "url": "https://files.pythonhosted.org/packages/f3/f0/a78e2d693f28c8afb5cbb486b4ff3088429f9eaaee4400e2ab66d6f22bdf/signalrcore-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "9604c922cfa86c93c9e277b4ad598730", "sha256": "807d977e556b14264a9da535d838e0f437aa3cf52bd10adacc08194e52aa7b3c"}, "downloads": -1, "filename": "signalrcore-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9604c922cfa86c93c9e277b4ad598730", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15347, "upload_time": "2019-03-03T21:11:05", "upload_time_iso_8601": "2019-03-03T21:11:05.990488Z", "url": "https://files.pythonhosted.org/packages/b0/62/9d977449d3d84359c47374093bbec2d5f6dffef53d9aa984188a20508449/signalrcore-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e61ac314454106d8d2614fa5a6a3f63", "sha256": "be20610ab51607e11ecbc56258969b1e67dda906f7d6262bcbec0c14d7782df6"}, "downloads": -1, "filename": "signalrcore-0.3.0.tar.gz", "has_sig": false, "md5_digest": "5e61ac314454106d8d2614fa5a6a3f63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8079, "upload_time": "2019-03-03T21:11:07", "upload_time_iso_8601": "2019-03-03T21:11:07.390115Z", "url": "https://files.pythonhosted.org/packages/fa/ef/9bdda2a998f23a067a8938b50b90410b1846b46afa8a2b23e724e4db6159/signalrcore-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "1b16d422d7a9e019898696932101bc63", "sha256": "f267b1ba2ea53463c96130078ecaeaf11f6603cf4bf195007a1dd7f511257555"}, "downloads": -1, "filename": "signalrcore-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1b16d422d7a9e019898696932101bc63", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15477, "upload_time": "2019-03-03T21:13:54", "upload_time_iso_8601": "2019-03-03T21:13:54.677614Z", "url": "https://files.pythonhosted.org/packages/1b/b8/fbde1602580e9d2e396dcad6f0937a91eacf1d2fc180af37b079ec22a9d0/signalrcore-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f706d4215ebeea04f80a9965f275454f", "sha256": "113a00370a34823a5e81e020330b4a35e859b13794a07c325597a22b05142ebb"}, "downloads": -1, "filename": "signalrcore-0.3.1.tar.gz", "has_sig": false, "md5_digest": "f706d4215ebeea04f80a9965f275454f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8363, "upload_time": "2019-03-03T21:13:55", "upload_time_iso_8601": "2019-03-03T21:13:55.869654Z", "url": "https://files.pythonhosted.org/packages/90/87/da80044f39c86aff0ab049d38cf1b33259594b08eefbae2c17a8a9d029a4/signalrcore-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "25bac4f5779a5bbb788110e0272803d5", "sha256": "69456b9eb4ef58ce689659f8ab000a9998d307c67d12a741e24ef8bdf8548f1c"}, "downloads": -1, "filename": "signalrcore-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "25bac4f5779a5bbb788110e0272803d5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15489, "upload_time": "2019-03-09T21:15:46", "upload_time_iso_8601": "2019-03-09T21:15:46.788469Z", "url": "https://files.pythonhosted.org/packages/13/46/5e4ed2a440d03123e1558040401fc4a95e855c8fea8c9423c1600b258570/signalrcore-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04c14ba54b071fd2feede551d9eb6327", "sha256": "c789e1a04459e9c79c37dde3f615853d326c4801c0bdb61e75ea365f7cc1c603"}, "downloads": -1, "filename": "signalrcore-0.4.0.tar.gz", "has_sig": false, "md5_digest": "04c14ba54b071fd2feede551d9eb6327", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8800, "upload_time": "2019-03-09T21:15:48", "upload_time_iso_8601": "2019-03-09T21:15:48.152640Z", "url": "https://files.pythonhosted.org/packages/34/7c/3ab75e5af384e563ff339e6327c2fc018042eb025ab4ef94725cef37277c/signalrcore-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "ce1f48e6c0dbaf2d80ce69dec83c7989", "sha256": "dd656f4b1540d15905c2d488931342e3e0dcf904a53f56addf30b2c88cff0f18"}, "downloads": -1, "filename": "signalrcore-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ce1f48e6c0dbaf2d80ce69dec83c7989", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15350, "upload_time": "2019-03-13T21:13:07", "upload_time_iso_8601": "2019-03-13T21:13:07.746162Z", "url": "https://files.pythonhosted.org/packages/06/30/c5358d3443aab8fe113b58ffb6161096aba0295d7331576d3b9caad87f90/signalrcore-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "232ab1eb52b9c70599f58d0adb9c62d9", "sha256": "50f1b4d44dfa78a98a145a211af52d3a974fc0501405a6adb35f2402ffc88bff"}, "downloads": -1, "filename": "signalrcore-0.4.1.tar.gz", "has_sig": false, "md5_digest": "232ab1eb52b9c70599f58d0adb9c62d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8665, "upload_time": "2019-03-13T21:13:09", "upload_time_iso_8601": "2019-03-13T21:13:09.295897Z", "url": "https://files.pythonhosted.org/packages/8b/16/7a1829d5c70d9e65adecd93d9ffb14a0ca7ed1d51d5cd5e606f285756576/signalrcore-0.4.1.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "4f6aafe77baf5adc410c6334bbe5dce2", "sha256": "37faecc882a436e5484917ec5aadc666ec428730fd4b10dc37078cec6697c66d"}, "downloads": -1, "filename": "signalrcore-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4f6aafe77baf5adc410c6334bbe5dce2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16064, "upload_time": "2019-05-17T07:34:50", "upload_time_iso_8601": "2019-05-17T07:34:50.527543Z", "url": "https://files.pythonhosted.org/packages/7d/81/96b9ea65af75d811e53ffc3ff8fa79bc9b5f20ef5a3bc39a6f925e14a6e4/signalrcore-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "38ed587ca4471cf5958aef48ce28f092", "sha256": "38da5cf11e8060ac0d262b8bd5175ffc9964ace3622b59d8992f506a9077f58f"}, "downloads": -1, "filename": "signalrcore-0.5.0.tar.gz", "has_sig": false, "md5_digest": "38ed587ca4471cf5958aef48ce28f092", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9149, "upload_time": "2019-05-17T07:34:52", "upload_time_iso_8601": "2019-05-17T07:34:52.286123Z", "url": "https://files.pythonhosted.org/packages/e3/e0/2c315e21a7478567bb8445961fe3bf288299066959b864ec254f08361d38/signalrcore-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "373ecb215ff66d99fdb48182ad5a00ba", "sha256": "786fe5076460986a3bed465c01f02d71c6e217570686e49892a2cb012d7d5167"}, "downloads": -1, "filename": "signalrcore-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "373ecb215ff66d99fdb48182ad5a00ba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16595, "upload_time": "2019-05-28T22:02:07", "upload_time_iso_8601": "2019-05-28T22:02:07.975268Z", "url": "https://files.pythonhosted.org/packages/4f/88/b91ce9a6c4eb36704a003e70c1a896cb3a44ae60aa319971a0c056bc374b/signalrcore-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f2c0328b7ea31d53b9c91a498c78b47", "sha256": "e026351d572581715987f2114524249c6fef538060fcb434b7f947793158f3b0"}, "downloads": -1, "filename": "signalrcore-0.6.0.tar.gz", "has_sig": false, "md5_digest": "6f2c0328b7ea31d53b9c91a498c78b47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9480, "upload_time": "2019-05-28T22:02:10", "upload_time_iso_8601": "2019-05-28T22:02:10.622820Z", "url": "https://files.pythonhosted.org/packages/7d/0b/cf22f1fd56aa8ff641be73b5e835ad2e45b8084b4be71b69ce40a09fd8ed/signalrcore-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "9342881cd9fc4af4c6b3c9c7bde474e2", "sha256": "94e2dc5f80f76057c9b153437985a40660e4d80449e60065844a03724b7a7b57"}, "downloads": -1, "filename": "signalrcore-0.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9342881cd9fc4af4c6b3c9c7bde474e2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18283, "upload_time": "2019-06-16T16:20:17", "upload_time_iso_8601": "2019-06-16T16:20:17.136929Z", "url": "https://files.pythonhosted.org/packages/1c/95/419102fb04dc13e7a6577d26e9f88ed3e6e6a9ecabc09e58019ebd8e6970/signalrcore-0.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e361234ca084c27726a0149a4c7752c5", "sha256": "4236648598a4f387391f4e7b8e1582561ec38e921bb0e229e85a344133eb20b1"}, "downloads": -1, "filename": "signalrcore-0.7.0.tar.gz", "has_sig": false, "md5_digest": "e361234ca084c27726a0149a4c7752c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10900, "upload_time": "2019-06-16T16:20:18", "upload_time_iso_8601": "2019-06-16T16:20:18.712231Z", "url": "https://files.pythonhosted.org/packages/e0/7f/bf003f20c35790c59e5a771858b4fc498b5c62946c61351236e4a7a3b20a/signalrcore-0.7.0.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "6e35f851d9472f4b619bc61571aebfe2", "sha256": "fe72bc764e9a4738d4aea11d04ba9f9149bd17d76dc269f1e0ae30bb29fcd80a"}, "downloads": -1, "filename": "signalrcore-0.7.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6e35f851d9472f4b619bc61571aebfe2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18480, "upload_time": "2019-07-20T07:56:19", "upload_time_iso_8601": "2019-07-20T07:56:19.952007Z", "url": "https://files.pythonhosted.org/packages/ca/3d/5b8fb0693cc30acf177a4e6b5cfd203dfaf31d3ccadff329f78f11c6f9b9/signalrcore-0.7.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2afbe9733d3f3745c1f887a44d474698", "sha256": "65c9eea29621dfc78c9f4ba373beaa119937d7f6e7cc5d7e0efdc03bb784604b"}, "downloads": -1, "filename": "signalrcore-0.7.3.tar.gz", "has_sig": false, "md5_digest": "2afbe9733d3f3745c1f887a44d474698", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11032, "upload_time": "2019-07-20T07:56:22", "upload_time_iso_8601": "2019-07-20T07:56:22.658762Z", "url": "https://files.pythonhosted.org/packages/1f/f7/47f4f158c5f9ce978aff7ab28d964d29af42fc8fb507dfcb30aaafe15404/signalrcore-0.7.3.tar.gz", "yanked": false}], "0.7.4": [{"comment_text": "", "digests": {"md5": "a7df18a84a8e268e52d35c5b0b99f0b8", "sha256": "a31fb431119dcee6a1681b0001dd6eb12c627c37232d4eff2ffeefa1b0894d13"}, "downloads": -1, "filename": "signalrcore-0.7.4-py3-none-any.whl", "has_sig": false, "md5_digest": "a7df18a84a8e268e52d35c5b0b99f0b8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18484, "upload_time": "2019-07-23T18:19:41", "upload_time_iso_8601": "2019-07-23T18:19:41.634233Z", "url": "https://files.pythonhosted.org/packages/89/3c/da60c14169622a3e54bc7e9c79e10ff8b2b0b0ec3929b2c301f698a10300/signalrcore-0.7.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f28c8fd709d1eb4afeb737a7f7176555", "sha256": "089bc525c3a214b821050b6233f974bd422f60385c31d14c1a3a4289d36d859f"}, "downloads": -1, "filename": "signalrcore-0.7.4.tar.gz", "has_sig": false, "md5_digest": "f28c8fd709d1eb4afeb737a7f7176555", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11042, "upload_time": "2019-07-23T18:19:44", "upload_time_iso_8601": "2019-07-23T18:19:44.684919Z", "url": "https://files.pythonhosted.org/packages/9c/67/9c9757dcd27470bed445c2d25d649d1e106a626e839cb59cde4ff1384261/signalrcore-0.7.4.tar.gz", "yanked": false}], "0.7.5": [{"comment_text": "", "digests": {"md5": "56c41c3eae808a23ffb93b951987f6ef", "sha256": "f1ba53608da5cee40ae8fbac4063916c5f2b950a71eff01c60c9c3d6a7a96287"}, "downloads": -1, "filename": "signalrcore-0.7.5-py3-none-any.whl", "has_sig": false, "md5_digest": "56c41c3eae808a23ffb93b951987f6ef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18487, "upload_time": "2019-08-05T16:10:58", "upload_time_iso_8601": "2019-08-05T16:10:58.978457Z", "url": "https://files.pythonhosted.org/packages/49/f1/3167a1705691f92dcfb2562f80e02f0f15d503e7584f414d804f0b955416/signalrcore-0.7.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ef5acfff9850dc461cf2c493ca85a69", "sha256": "c6020e6fe690237b9b4abaed79de010b36dc39011dfc815215d1db1f694cd106"}, "downloads": -1, "filename": "signalrcore-0.7.5.tar.gz", "has_sig": false, "md5_digest": "0ef5acfff9850dc461cf2c493ca85a69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11042, "upload_time": "2019-08-05T16:11:03", "upload_time_iso_8601": "2019-08-05T16:11:03.264035Z", "url": "https://files.pythonhosted.org/packages/ca/a4/ae7c0da36f4036d72d373ac802b2715564815b855c21312e749f315d58c7/signalrcore-0.7.5.tar.gz", "yanked": false}], "0.7.6": [{"comment_text": "", "digests": {"md5": "a5e4092c97bc77884c9fd8f056d5d275", "sha256": "458e90f3a07ec88473388480103a3f5f6519beb58e2b1695350f1ae90e1f906e"}, "downloads": -1, "filename": "signalrcore-0.7.6-py3-none-any.whl", "has_sig": false, "md5_digest": "a5e4092c97bc77884c9fd8f056d5d275", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19288, "upload_time": "2019-08-20T17:01:14", "upload_time_iso_8601": "2019-08-20T17:01:14.602195Z", "url": "https://files.pythonhosted.org/packages/90/d8/bec358993248f653965d1229626c254a3503d252d2c6ce0659e72a54ade8/signalrcore-0.7.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "75da32f8f6ac93d1148f14f6f0050f4f", "sha256": "01096afad28d2521ba41d2a6235910b8e1b4452cc00bea3979babbc637688f76"}, "downloads": -1, "filename": "signalrcore-0.7.6.tar.gz", "has_sig": false, "md5_digest": "75da32f8f6ac93d1148f14f6f0050f4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11966, "upload_time": "2019-08-20T17:01:20", "upload_time_iso_8601": "2019-08-20T17:01:20.589541Z", "url": "https://files.pythonhosted.org/packages/aa/93/a41c8d6a45be4729b9b93ee16ea5b386eb76491beafafa3e5e69484651e8/signalrcore-0.7.6.tar.gz", "yanked": false}], "0.7.7": [{"comment_text": "", "digests": {"md5": "302c95a177dd6ff522e6ffb11d5140b8", "sha256": "367d0a5ec6c3ace333017e07d3e175ce43203364fc69763c15747880bfde14a7"}, "downloads": -1, "filename": "signalrcore-0.7.7-py3-none-any.whl", "has_sig": false, "md5_digest": "302c95a177dd6ff522e6ffb11d5140b8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19515, "upload_time": "2019-09-29T12:45:23", "upload_time_iso_8601": "2019-09-29T12:45:23.406966Z", "url": "https://files.pythonhosted.org/packages/53/c6/372fb27f55af8622b30a677bfe3ad8b2d911aa737598c7aa31db1f451d1b/signalrcore-0.7.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a52c5fb5cd5302d4b16098b46c3db4e2", "sha256": "8ec56afd457dee006ec2ef59a8dec49782ebc92d55385bb3bc320b640fc0b835"}, "downloads": -1, "filename": "signalrcore-0.7.7.tar.gz", "has_sig": false, "md5_digest": "a52c5fb5cd5302d4b16098b46c3db4e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12205, "upload_time": "2019-09-29T12:45:25", "upload_time_iso_8601": "2019-09-29T12:45:25.178979Z", "url": "https://files.pythonhosted.org/packages/33/97/dd9a6edd0fab3ce0cfac33b5c925e6999e41ef1d70fb8341d5f168585679/signalrcore-0.7.7.tar.gz", "yanked": false}], "0.7.8": [{"comment_text": "", "digests": {"md5": "145e3e365032f3261bb314bb40c10bfe", "sha256": "3ffd26385f7357c3ba3a1bf3000fafc1cf3482e72645ea11f7ca86abb850a901"}, "downloads": -1, "filename": "signalrcore-0.7.8-py3-none-any.whl", "has_sig": false, "md5_digest": "145e3e365032f3261bb314bb40c10bfe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19601, "upload_time": "2019-09-29T14:34:24", "upload_time_iso_8601": "2019-09-29T14:34:24.726776Z", "url": "https://files.pythonhosted.org/packages/a9/d8/03506bcec8a89c372c6705c0c4609292b63f0aa8a6301246f8560f697701/signalrcore-0.7.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c8dd85fde8c92d212858554045c98cf", "sha256": "a0fb0c28ca36e2d53d0ebd5e28d4afdbb9b9648e65b24402d3c9e7bada1fbd21"}, "downloads": -1, "filename": "signalrcore-0.7.8.tar.gz", "has_sig": false, "md5_digest": "0c8dd85fde8c92d212858554045c98cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12282, "upload_time": "2019-09-29T14:34:29", "upload_time_iso_8601": "2019-09-29T14:34:29.234776Z", "url": "https://files.pythonhosted.org/packages/5f/fb/34ffee84067ca7b4be9ca1d7b88eb396d257ff07a2eadb862574c6dd7d2b/signalrcore-0.7.8.tar.gz", "yanked": false}], "0.7.9": [{"comment_text": "", "digests": {"md5": "f6d32bd6e566f25376aafbc530b8d2d3", "sha256": "ad7ecf966751887291ad053c5fb22980982b89f517a52f02b38810157cd1469c"}, "downloads": -1, "filename": "signalrcore-0.7.9-py3-none-any.whl", "has_sig": false, "md5_digest": "f6d32bd6e566f25376aafbc530b8d2d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19703, "upload_time": "2019-09-29T16:25:13", "upload_time_iso_8601": "2019-09-29T16:25:13.404131Z", "url": "https://files.pythonhosted.org/packages/e2/4e/15b0ff073b5a95dd2c5c966b0ef702572685f824f08c07121d89fcfc5acd/signalrcore-0.7.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "220a1d8699978f48127c0b1d710f8f0c", "sha256": "b1f12b9b5d4a414a48e271e7573002e31ac3c438636febe70b12e4a5086a7eeb"}, "downloads": -1, "filename": "signalrcore-0.7.9.tar.gz", "has_sig": false, "md5_digest": "220a1d8699978f48127c0b1d710f8f0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12350, "upload_time": "2019-09-29T16:25:17", "upload_time_iso_8601": "2019-09-29T16:25:17.207891Z", "url": "https://files.pythonhosted.org/packages/67/9e/85cbf1e566b6998815aa0aae93bac49991100681b1baa2ca25011384579d/signalrcore-0.7.9.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "811d5a0aedfdfb60f943b4dbb1b2e37c", "sha256": "1415943777f6ccb3e25aa7ca210f10918862f9b7322b2230d66cd698b5e72924"}, "downloads": -1, "filename": "signalrcore-0.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "811d5a0aedfdfb60f943b4dbb1b2e37c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21041, "upload_time": "2020-02-09T22:33:27", "upload_time_iso_8601": "2020-02-09T22:33:27.393822Z", "url": "https://files.pythonhosted.org/packages/b1/0b/5f10c86842937ade1c57ffc68bc0d5b6009e9818724925c55467e87feabd/signalrcore-0.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebcc18dad3a2954e869bc3528e036a4c", "sha256": "ba68ab737c20f8c2e4f070e1c51c1313ee108c14fceb9e8ca23e7c93c23c7313"}, "downloads": -1, "filename": "signalrcore-0.8.0.tar.gz", "has_sig": false, "md5_digest": "ebcc18dad3a2954e869bc3528e036a4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14038, "upload_time": "2020-02-09T22:33:37", "upload_time_iso_8601": "2020-02-09T22:33:37.248090Z", "url": "https://files.pythonhosted.org/packages/33/68/ca2300e3f505789936d4efadc736fcb16038246e8c4f483fae31a06dbbce/signalrcore-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "66f0671dcfcbc2ab72f83057baf46d31", "sha256": "3a3a3a06e1dfa42c044f2f6920f1a7907a1d168046bce19ecb065047d5f29648"}, "downloads": -1, "filename": "signalrcore-0.8.1-py3-none-any.whl", "has_sig": false, "md5_digest": "66f0671dcfcbc2ab72f83057baf46d31", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21340, "upload_time": "2020-02-11T15:23:20", "upload_time_iso_8601": "2020-02-11T15:23:20.181006Z", "url": "https://files.pythonhosted.org/packages/a4/26/0ab4fee593f66ef1c258ff794f828998ecb825691c2615d03e51b8ceb8de/signalrcore-0.8.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa9ae694746eb110cffaeed96bc3120a", "sha256": "3f8c16fa3d8f7a2526567145ae36e101bfe6c3c8206b3b7fd38f6557ae377af1"}, "downloads": -1, "filename": "signalrcore-0.8.1.tar.gz", "has_sig": false, "md5_digest": "aa9ae694746eb110cffaeed96bc3120a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14817, "upload_time": "2020-02-11T15:23:27", "upload_time_iso_8601": "2020-02-11T15:23:27.462780Z", "url": "https://files.pythonhosted.org/packages/dc/ae/637ab10cd2ef09d816a5d9d1c3499f84c8a3fa53d080591c029ec2c44bd7/signalrcore-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "0cd91c0ed77f16b6a8da52958109baa7", "sha256": "74dad3e88e168794aa20ef4d0e2a063e6cf5d38552cd89bf3f1735d59202296c"}, "downloads": -1, "filename": "signalrcore-0.8.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0cd91c0ed77f16b6a8da52958109baa7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21344, "upload_time": "2020-02-11T19:13:58", "upload_time_iso_8601": "2020-02-11T19:13:58.338651Z", "url": "https://files.pythonhosted.org/packages/68/05/5dcf1623cc2cc3231c7b2ae01b21624e3745d11cfc665a1c7e01b21c3398/signalrcore-0.8.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "624f6163a03bba04933cbff96f0e5ec9", "sha256": "49ff55698cfe7020be55f36cd172eceb3852eece9871c9c311ab10dbded49950"}, "downloads": -1, "filename": "signalrcore-0.8.2.tar.gz", "has_sig": false, "md5_digest": "624f6163a03bba04933cbff96f0e5ec9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14939, "upload_time": "2020-02-11T19:14:06", "upload_time_iso_8601": "2020-02-11T19:14:06.856794Z", "url": "https://files.pythonhosted.org/packages/b3/02/f9e702fb339b5f91c0e7ece28a42a6aa1782e99b8185872306e78f091faa/signalrcore-0.8.2.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "aa3a0d651c0ee529f30c92181a4a5244", "sha256": "96033a5bc1de0c64f09912772fd6971b28755d1e122026c642eeec59abc9a995"}, "downloads": -1, "filename": "signalrcore-0.8.3-py3-none-any.whl", "has_sig": false, "md5_digest": "aa3a0d651c0ee529f30c92181a4a5244", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21602, "upload_time": "2020-02-11T21:00:18", "upload_time_iso_8601": "2020-02-11T21:00:18.579114Z", "url": "https://files.pythonhosted.org/packages/41/d0/132ef8b7e30a9bbcaf7424454ddd36084f7e9adb01191fdf9f479940a2cb/signalrcore-0.8.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "abe068671a29128326fd1504c2a9d4e6", "sha256": "7c9946c09849579841fb88de14f5ee24e85680fd0986e584962aa5b36b66e144"}, "downloads": -1, "filename": "signalrcore-0.8.3.tar.gz", "has_sig": false, "md5_digest": "abe068671a29128326fd1504c2a9d4e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15249, "upload_time": "2020-02-11T21:00:27", "upload_time_iso_8601": "2020-02-11T21:00:27.925126Z", "url": "https://files.pythonhosted.org/packages/1b/35/7616e9a000c7e185af190cf247ccf422e0cc77b81bd16293eb00b1d1a949/signalrcore-0.8.3.tar.gz", "yanked": false}], "0.8.4": [{"comment_text": "", "digests": {"md5": "82c1887829e1415f14a84c95ceb24469", "sha256": "709c606b340830c981b7e4cfd3dd081d1e4fdd13295194212b5d73b30fe666cf"}, "downloads": -1, "filename": "signalrcore-0.8.4-py3-none-any.whl", "has_sig": false, "md5_digest": "82c1887829e1415f14a84c95ceb24469", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22119, "upload_time": "2020-02-16T18:52:01", "upload_time_iso_8601": "2020-02-16T18:52:01.604772Z", "url": "https://files.pythonhosted.org/packages/c6/c8/3bb29cc0ec387ffe0c762dccf7fb57beb29232a3def697e5ef2912042b87/signalrcore-0.8.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8822a1c11387579f2fa5552c62911ad", "sha256": "c41f48217d2a70eee11848ba4cdb0a12ae3c7555c261e0af2b70a5a6ae7e7b30"}, "downloads": -1, "filename": "signalrcore-0.8.4.tar.gz", "has_sig": false, "md5_digest": "d8822a1c11387579f2fa5552c62911ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16271, "upload_time": "2020-02-16T18:52:03", "upload_time_iso_8601": "2020-02-16T18:52:03.478619Z", "url": "https://files.pythonhosted.org/packages/63/5d/6e691eb0a466cd2d5f6d91cd30cc2c4abb00e1efb357ea6964263a188f42/signalrcore-0.8.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "82c1887829e1415f14a84c95ceb24469", "sha256": "709c606b340830c981b7e4cfd3dd081d1e4fdd13295194212b5d73b30fe666cf"}, "downloads": -1, "filename": "signalrcore-0.8.4-py3-none-any.whl", "has_sig": false, "md5_digest": "82c1887829e1415f14a84c95ceb24469", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22119, "upload_time": "2020-02-16T18:52:01", "upload_time_iso_8601": "2020-02-16T18:52:01.604772Z", "url": "https://files.pythonhosted.org/packages/c6/c8/3bb29cc0ec387ffe0c762dccf7fb57beb29232a3def697e5ef2912042b87/signalrcore-0.8.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8822a1c11387579f2fa5552c62911ad", "sha256": "c41f48217d2a70eee11848ba4cdb0a12ae3c7555c261e0af2b70a5a6ae7e7b30"}, "downloads": -1, "filename": "signalrcore-0.8.4.tar.gz", "has_sig": false, "md5_digest": "d8822a1c11387579f2fa5552c62911ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16271, "upload_time": "2020-02-16T18:52:03", "upload_time_iso_8601": "2020-02-16T18:52:03.478619Z", "url": "https://files.pythonhosted.org/packages/63/5d/6e691eb0a466cd2d5f6d91cd30cc2c4abb00e1efb357ea6964263a188f42/signalrcore-0.8.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:43 2020"}