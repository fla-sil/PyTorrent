{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Scientific/Engineering :: Physics", "Topic :: Scientific/Engineering :: Visualization", "Topic :: Utilities"], "description": "====\ncate\n====\n\n.. image:: https://gitlab.uni.lu/PCOG/cate/badges/master/pipeline.svg\n   :target: https://gitlab.uni.lu/PCOG/cate/commits/master\n   :alt: pipeline status\n\n.. image:: https://gitlab.uni.lu/PCOG/cate/badges/master/coverage.svg\n   :target: https://gitlab.uni.lu/PCOG/cate/commits/master\n   :alt: coverage report\n\n..\n\n\nCATE stands for Chaotic Attractor TEmplate.\n\n``cate`` is a libre software tool (licensed under GNU Lesser General Public\nLicense v3.0 only) to draw the templates of chaotic attractors.\n\n.. SPDX-License-Identifier: LGPL-3.0-only\n\n\nChaotic attractors are solutions of deterministic processes, of which the\ntopology can be described by templates.  We consider templates of chaotic\nattractors bounded by a genus-1 torus described by a linking matrix.\n\nThis tool first validates a linking matrix by checking continuity and\ndeterminism constraints.\nThe tool then draws the template corresponding to the linking matrix, and\noptimizes the compactness of the representation.  The representation is saved\nas a Scalable Vector Graphics (SVG) file.\n\n\nInstallation\n------------\n\n``cate`` is available as a regular Python package.  It hence can easily be\ninstalled with ``pip``.\n\nFor more details on how to install a Python package, one can refer to\nhttps://packaging.python.org/tutorials/installing-packages/\n\nThe latest stable (recommended) version can be installed with the following\ncommand (assuming ``pip`` is installed):\n\n  .. code-block:: sh\n\n     pip install cate\n\n..\n\nIt is recommended to use a virtual environment to install ``cate``.  Again, one\ncan refer to https://packaging.python.org/tutorials/installing-packages/ to get\na more comprehensive overview.\n\nOn a typical Linux environment, the typical commands to use would be:\n\n  .. code-block:: sh\n\n     python3 -m venv cate_venv\n     source cate_venv/bin/activate\n     pip install cate\n\n\nThis will create a new virtual environment in the ``cate_venv`` subdirectory,\nand configure the current shell to use it as the default ``python``\nenvironment.  This will then install ``cate`` in this new environment without\ninterfering with the already installed packages.\n\nOne would then exit this environment either by exiting the current shell, or by\ntyping the command ``deactivate``.\n\nFurther uses of ``cate`` only require to activate the virtual environment with\nthe following command:\n\n  .. code-block:: sh\n\n     source cate_venv/bin/activate\n\n\nUsage\n-----\n\nThe purpose of the ``cate`` is to draw template from a given linking matrix.\nFor instance, the matrix\n\n.. image:: https://gitlab.uni.lu/PCOG/cate/raw/master/doc/5x5_001_matrix.png\n   :target: https://gitlab.uni.lu/PCOG/cate/blob/master/doc/5x5_001_matrix.png\n   :align: center\n   :scale: 50\n   :alt: matrice 5x5\n\ndescribes a template made of five strips. The matrix has to be written using\nJSON format as follows in a file, for instance: `5x5_001.json`\n\n.. code-block:: json\n\n   [[2, 1, 0, 0, 0],\n    [1, 1, 0, 0, 0],\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 1, 1],\n    [0, 0, 0, 1, 2]]\n\nA simple example of usage could be: `cate file.json`\n\n.. code-block:: sh\n\n   cate examples/5x5_001.json\n   [  INFO  ] Input matrix\n   [  INFO  ]   [2, 1, 0, 0, 0]\n   [  INFO  ]   [1, 1, 0, 0, 0]\n   [  INFO  ]   [0, 0, 0, 0, 0]\n   [  INFO  ]   [0, 0, 0, 1, 1]\n   [  INFO  ]   [0, 0, 0, 1, 2]\n   [  INFO  ] Starting constructing the tree\n   [  INFO  ] Maximum possible template length: 2\n   [  INFO  ] Finished constructing the tree\n   [  INFO  ] Starting creation of the SVG template\n   [  INFO  ] Shortest template\n   [  INFO  ]   Level 1: (0, 1), (3, 4)\n   [  INFO  ] Finished creation of the SVG template\n\n\nThe output is a SVG file (`template.svg`) containing the template.\n\n.. image:: https://gitlab.uni.lu/PCOG/cate/raw/master/doc/5x5_001_template.png\n   :target: https://gitlab.uni.lu/PCOG/cate/blob/master/doc/5x5_001_template.png\n   :align: center\n   :scale: 50\n   :alt: template of the matrice 5x5\n\n\nThe comprehensive list of the supported options and their usage is available by\ntyping ``cate -h``.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.uni.lu/pcog/cate", "keywords": "chaotic attractor,dynamical system,template", "license": "LGPLv3", "maintainer": "Rapha\u00ebl Bleuse", "maintainer_email": "raphael.bleuse@uni.lu", "name": "cate", "package_url": "https://pypi.org/project/cate/", "platform": "", "project_url": "https://pypi.org/project/cate/", "project_urls": {"Homepage": "https://gitlab.uni.lu/pcog/cate"}, "release_url": "https://pypi.org/project/cate/0.0.1/", "requires_dist": ["svgwrite", "coverage; extra == 'test'", "pytest; extra == 'test'", "pytest-cov; extra == 'test'"], "requires_python": "", "summary": "Tool to draw the templates of chaotic attractors.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://gitlab.uni.lu/PCOG/cate/commits/master\" rel=\"nofollow\"><img alt=\"pipeline status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/efa5c2842268a4f92c9cce511d653fe3be18237d/68747470733a2f2f6769746c61622e756e692e6c752f50434f472f636174652f6261646765732f6d61737465722f706970656c696e652e737667\"></a>\n<a href=\"https://gitlab.uni.lu/PCOG/cate/commits/master\" rel=\"nofollow\"><img alt=\"coverage report\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/749f5c9b35e5964da485e67203b91293c7ff84be/68747470733a2f2f6769746c61622e756e692e6c752f50434f472f636174652f6261646765732f6d61737465722f636f7665726167652e737667\"></a>\n<p>CATE stands for Chaotic Attractor TEmplate.</p>\n<p><tt>cate</tt> is a libre software tool (licensed under GNU Lesser General Public\nLicense v3.0 only) to draw the templates of chaotic attractors.</p>\n<p>Chaotic attractors are solutions of deterministic processes, of which the\ntopology can be described by templates.  We consider templates of chaotic\nattractors bounded by a genus-1 torus described by a linking matrix.</p>\n<p>This tool first validates a linking matrix by checking continuity and\ndeterminism constraints.\nThe tool then draws the template corresponding to the linking matrix, and\noptimizes the compactness of the representation.  The representation is saved\nas a Scalable Vector Graphics (SVG) file.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>cate</tt> is available as a regular Python package.  It hence can easily be\ninstalled with <tt>pip</tt>.</p>\n<p>For more details on how to install a Python package, one can refer to\n<a href=\"https://packaging.python.org/tutorials/installing-packages/\" rel=\"nofollow\">https://packaging.python.org/tutorials/installing-packages/</a></p>\n<p>The latest stable (recommended) version can be installed with the following\ncommand (assuming <tt>pip</tt> is installed):</p>\n<blockquote>\n<pre>pip install cate\n</pre>\n</blockquote>\n<p>It is recommended to use a virtual environment to install <tt>cate</tt>.  Again, one\ncan refer to <a href=\"https://packaging.python.org/tutorials/installing-packages/\" rel=\"nofollow\">https://packaging.python.org/tutorials/installing-packages/</a> to get\na more comprehensive overview.</p>\n<p>On a typical Linux environment, the typical commands to use would be:</p>\n<blockquote>\n<pre>python3 -m venv cate_venv\n<span class=\"nb\">source</span> cate_venv/bin/activate\npip install cate\n</pre>\n</blockquote>\n<p>This will create a new virtual environment in the <tt>cate_venv</tt> subdirectory,\nand configure the current shell to use it as the default <tt>python</tt>\nenvironment.  This will then install <tt>cate</tt> in this new environment without\ninterfering with the already installed packages.</p>\n<p>One would then exit this environment either by exiting the current shell, or by\ntyping the command <tt>deactivate</tt>.</p>\n<p>Further uses of <tt>cate</tt> only require to activate the virtual environment with\nthe following command:</p>\n<blockquote>\n<pre><span class=\"nb\">source</span> cate_venv/bin/activate\n</pre>\n</blockquote>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The purpose of the <tt>cate</tt> is to draw template from a given linking matrix.\nFor instance, the matrix</p>\n<a href=\"https://gitlab.uni.lu/PCOG/cate/blob/master/doc/5x5_001_matrix.png\" rel=\"nofollow\"><img alt=\"matrice 5x5\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/abda2953d456d9102111da78bb1a6aa7b04d6286/68747470733a2f2f6769746c61622e756e692e6c752f50434f472f636174652f7261772f6d61737465722f646f632f3578355f3030315f6d61747269782e706e67\"></a>\n<p>describes a template made of five strips. The matrix has to be written using\nJSON format as follows in a file, for instance: <cite>5x5_001.json</cite></p>\n<pre><span class=\"p\">[[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]]</span>\n</pre>\n<p>A simple example of usage could be: <cite>cate file.json</cite></p>\n<pre>cate examples/5x5_001.json\n<span class=\"o\">[</span>  INFO  <span class=\"o\">]</span> Input matrix\n<span class=\"o\">[</span>  INFO  <span class=\"o\">]</span>   <span class=\"o\">[</span><span class=\"m\">2</span>, <span class=\"m\">1</span>, <span class=\"m\">0</span>, <span class=\"m\">0</span>, <span class=\"m\">0</span><span class=\"o\">]</span>\n<span class=\"o\">[</span>  INFO  <span class=\"o\">]</span>   <span class=\"o\">[</span><span class=\"m\">1</span>, <span class=\"m\">1</span>, <span class=\"m\">0</span>, <span class=\"m\">0</span>, <span class=\"m\">0</span><span class=\"o\">]</span>\n<span class=\"o\">[</span>  INFO  <span class=\"o\">]</span>   <span class=\"o\">[</span><span class=\"m\">0</span>, <span class=\"m\">0</span>, <span class=\"m\">0</span>, <span class=\"m\">0</span>, <span class=\"m\">0</span><span class=\"o\">]</span>\n<span class=\"o\">[</span>  INFO  <span class=\"o\">]</span>   <span class=\"o\">[</span><span class=\"m\">0</span>, <span class=\"m\">0</span>, <span class=\"m\">0</span>, <span class=\"m\">1</span>, <span class=\"m\">1</span><span class=\"o\">]</span>\n<span class=\"o\">[</span>  INFO  <span class=\"o\">]</span>   <span class=\"o\">[</span><span class=\"m\">0</span>, <span class=\"m\">0</span>, <span class=\"m\">0</span>, <span class=\"m\">1</span>, <span class=\"m\">2</span><span class=\"o\">]</span>\n<span class=\"o\">[</span>  INFO  <span class=\"o\">]</span> Starting constructing the tree\n<span class=\"o\">[</span>  INFO  <span class=\"o\">]</span> Maximum possible template length: <span class=\"m\">2</span>\n<span class=\"o\">[</span>  INFO  <span class=\"o\">]</span> Finished constructing the tree\n<span class=\"o\">[</span>  INFO  <span class=\"o\">]</span> Starting creation of the SVG template\n<span class=\"o\">[</span>  INFO  <span class=\"o\">]</span> Shortest template\n<span class=\"o\">[</span>  INFO  <span class=\"o\">]</span>   Level <span class=\"m\">1</span>: <span class=\"o\">(</span><span class=\"m\">0</span>, <span class=\"m\">1</span><span class=\"o\">)</span>, <span class=\"o\">(</span><span class=\"m\">3</span>, <span class=\"m\">4</span><span class=\"o\">)</span>\n<span class=\"o\">[</span>  INFO  <span class=\"o\">]</span> Finished creation of the SVG template\n</pre>\n<p>The output is a SVG file (<cite>template.svg</cite>) containing the template.</p>\n<a href=\"https://gitlab.uni.lu/PCOG/cate/blob/master/doc/5x5_001_template.png\" rel=\"nofollow\"><img alt=\"template of the matrice 5x5\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/667927e867d34a2e8a0e498ebdd736d3e7d97dd5/68747470733a2f2f6769746c61622e756e692e6c752f50434f472f636174652f7261772f6d61737465722f646f632f3578355f3030315f74656d706c6174652e706e67\"></a>\n<p>The comprehensive list of the supported options and their usage is available by\ntyping <tt>cate <span class=\"pre\">-h</span></tt>.</p>\n</div>\n\n          </div>"}, "last_serial": 4661822, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ad8db1098f1eabf093c59cd2f57d839c", "sha256": "495df232cdd2b80a3a6529831e11fc85054e73851bb35eef6df03551fe90f875"}, "downloads": -1, "filename": "cate-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ad8db1098f1eabf093c59cd2f57d839c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12616, "upload_time": "2018-07-27T15:13:52", "upload_time_iso_8601": "2018-07-27T15:13:52.917156Z", "url": "https://files.pythonhosted.org/packages/88/7f/937d06091a2f7275dbeac854954d9e280e673a0c96f0eac6de352799daa3/cate-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a5e2ddcd4a38de9c120b9b6f85e1aa9", "sha256": "e81f4d7bf398b18bfb3ceb60577a8f058e601179fb3b75d3c04dc1a84c2dd016"}, "downloads": -1, "filename": "cate-0.0.1.tar.gz", "has_sig": true, "md5_digest": "3a5e2ddcd4a38de9c120b9b6f85e1aa9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 86253, "upload_time": "2018-07-27T16:08:26", "upload_time_iso_8601": "2018-07-27T16:08:26.622296Z", "url": "https://files.pythonhosted.org/packages/fb/0d/3531d3bf71974b4d37d0f5ee1c72b3dae6f8ceb2cc741b90dc55ecf8770f/cate-0.0.1.tar.gz", "yanked": false}], "1.0b0": [{"comment_text": "", "digests": {"md5": "b87df52440a1deea367bcb73d3d4f32a", "sha256": "d925f2636506070093edaaa788121a0ec654e0b6eb9f074d9c5ae45f23662cdd"}, "downloads": -1, "filename": "cate-1.0b0-py3-none-any.whl", "has_sig": true, "md5_digest": "b87df52440a1deea367bcb73d3d4f32a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19753, "upload_time": "2019-01-04T21:23:39", "upload_time_iso_8601": "2019-01-04T21:23:39.518823Z", "url": "https://files.pythonhosted.org/packages/1f/d0/c14deeb6bbaf40f5e50119512bfa09737da8ec6eb206a9479effff2a25d7/cate-1.0b0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58344ba0d44a07090d22c93d5e05d89c", "sha256": "6d8aefbff4b3ae828f3cd28d8a3071841840eec6cceed2313472eabd478a1618"}, "downloads": -1, "filename": "cate-1.0b0.tar.gz", "has_sig": true, "md5_digest": "58344ba0d44a07090d22c93d5e05d89c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 104160, "upload_time": "2019-01-04T21:23:42", "upload_time_iso_8601": "2019-01-04T21:23:42.629762Z", "url": "https://files.pythonhosted.org/packages/c2/15/a1ec53c7dd9640675811a4cc360366baf8763fa6c1d9c28bee722785c67f/cate-1.0b0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ad8db1098f1eabf093c59cd2f57d839c", "sha256": "495df232cdd2b80a3a6529831e11fc85054e73851bb35eef6df03551fe90f875"}, "downloads": -1, "filename": "cate-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ad8db1098f1eabf093c59cd2f57d839c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12616, "upload_time": "2018-07-27T15:13:52", "upload_time_iso_8601": "2018-07-27T15:13:52.917156Z", "url": "https://files.pythonhosted.org/packages/88/7f/937d06091a2f7275dbeac854954d9e280e673a0c96f0eac6de352799daa3/cate-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a5e2ddcd4a38de9c120b9b6f85e1aa9", "sha256": "e81f4d7bf398b18bfb3ceb60577a8f058e601179fb3b75d3c04dc1a84c2dd016"}, "downloads": -1, "filename": "cate-0.0.1.tar.gz", "has_sig": true, "md5_digest": "3a5e2ddcd4a38de9c120b9b6f85e1aa9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 86253, "upload_time": "2018-07-27T16:08:26", "upload_time_iso_8601": "2018-07-27T16:08:26.622296Z", "url": "https://files.pythonhosted.org/packages/fb/0d/3531d3bf71974b4d37d0f5ee1c72b3dae6f8ceb2cc741b90dc55ecf8770f/cate-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:14 2020"}