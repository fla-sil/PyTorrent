{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: POSIX", "Programming Language :: Python :: 3.4", "Topic :: Utilities"], "description": "Usage\n=====\n\nCall ``getan`` or ``getan.py`` in a terminal to start\nwith an empty list of tasks that you want to track time for.\n\nUse the Insert-Key to add a new task to track.\n(A *task* is called *project* within getan.)\nYou will have to enter a project \"key\" and a project \"description\".\n\nNow select one of the projects with the arrow keys from your keyboard\nand press enter to start the clock. See ``INTRODUCTION`` for more keyboard\ncommands.\n\nThe time log entries will be saved in an sqlite database,\nby default getan will create ``~/.getan/time.db``.\nThe ``scripts/`` will help to generate reports from them.\n\nTree mode\n---------\nGetan supports a hierarchy of projects. A top level project key\nhas only one character, once you starting using a second character\nas project key, it will be the next level down in the hierarchy.\nExample::\n\n    a    Top level project\n    aa   1st second level project\n    ab   2nd second level project\n    aba  Third level Project\n\nUse the switch_project_order key which is ``f2`` by default\nto cycle to the hierarchical view.\n\n\nCustomization\n-------------\n\nUse ``~/.getan/getanrc`` or the system-wide ``/etc/getanrc``\nto customize keys and colors. See ``getan/config.py`` for\nthe recognized options. Example::\n\n    [keybindings]\n    # changes the insert function to be activated by the `)` key\n    insert: )\n\n    [theme]\n    header: light green, dark green\n    body: light green, black\n\n\n\nInstallation\n============\n\nGetan requires `urwid <http://urwid.org/>`_ in a version >= 1.0. Urwid is\na console user interface library written in Python. For console output e.g.\nzeiterfassung.py Getan also requires `Jinja2 <http://jinja.pocoo.org/>_`.\n\nInstall urwid\n-------------\n\nOn Debian GNU/Linux >= Wheezy just run as root:::\n\n    $ apt-get install python3-urwid\n\nOn other systems urwid may be installed via pip or directly put into the sources\nof getan.\n\nUsing pip\n^^^^^^^^^\n\nTo install urwid via pip run as root::\n\n    $ pip install urwid\n\nOr if you prefer using a virtualenv::\n\n    $ virtualenv getan-env\n    $ source getan-env/bin/activate\n    (getan-env)$ pip install -U pip  # to get the latest pip\n    (getan-env)$ pip install urwid\n\nUsing urwid sources\n^^^^^^^^^^^^^^^^^^^\n\nUrwid can be put as source to the getan directory when getan is run directly\nfrom the sources. Urwid source can be downloaded from `pypi\n<https://pypi.python.org/pypi/urwid/>`_.\n\nFor urwid 1.1.2 the direct download link from pypi is\n`<https://pypi.python.org/packages/source/u/urwid/urwid-1.1.2.tar.gz>`_\n(sha256sum is\nf56568b4f8459b3265c65d9e275ef72df6cb16ad0c291f0feb027cc911ea0f26).::\n\n    $ cd getan-source\n    $ v=urwid-1.1.2\n    $ curl -O https://pypi.python.org/packages/source/u/urwid/$v.tar.gz\n    $ sha256sum $v.tar.gz\n    $ tar -xzvf $v.tar.gz\n    $ ln -s $v/urwid urwid\n\nInstall Jinja2\n--------------\n\nOn Debian GNU/Linux just run as root:::\n\n    $ apt-get install python3-jinja2\n\nOn other systems jinja2 may be installed via pip or directly put into the\nsources of getan.\n\nUsing pip\n^^^^^^^^^\n\nTo install jinja2 via pip run as root::\n\n    $ pip install jinja2\n\nOr if you prefer using a virtualenv::\n\n    $ source getan-env/bin/activate\n    (getan-env)$ pip install jinja2\n\nInstall getan\n-------------\n\nA installation of getan is not required. It can also be run directly from the\nsources. To install getan system wide the following command must be run as root\nuser::\n\n    $ python3 setup.py install\n\nYou may need to install setuptools first, on Debian GNU/Linux just run as root:::\n\n    $ apt-get install python3-setuptools\n\n\nStarting getan\n==============\n\nGetan can be directly run from sources or after a system wide installation from\nthe bin dir (e.g. /usr/bin).\n\nRunning from Sources\n--------------------\n\nTo run getan from the sources run::\n\n    $ ./getan.py\n\nor::\n\n    $ ./getan.py /path/to/mytime.db\n\nto choose a different sqlite3 database then the default time.db\n\n\nRunning from installation\n-------------------------\n\nAfter installing getan it can be run with::\n\n    $ getan\n\nor::\n\n    $ getan /path/to/mytime.db\n\n\nWriting Templates\n=================\n\nExternal templates must be stored in ~/.getan/templates/ to be able to call\nthem.\n\nGetan uses the Jinja2 templating language. You can find more information\nat `Jinja2 <http://jinja.pocoo.org/>`_.\n\nIf a year or a week is specified, only the entries in this period will be\nloaded.\n\nVariables\n---------\n\ncurrent_week: The current week.\ncurrent_year: The current year.\n\nuser: What You indicated with -u.\nweek: What You indicated with -w.\nunix_week: What You indicated with -w, in unix notation.\nyear: What you indicated with -y.\n\nget_total_duration(): Total duration of all entries.\n\ndatabase: Path of the database.\n\nentries: List of all entries.\n    get_comment(): Description of the entry.\n    get_workpackage(): Work package of the entry.\n    desc: Work package and Description of the entry.\n\n    startisoday: Year, month and day in ISO format.\n    start: Start time as datetime.\n    end: End time as datetime.\n    get_duration(): Duration of the entry.\n\nprojects: List of all projects.\n    get_total_duration(): Total duration of all\n    entries in the project.\n    desc: Description of the project.\n    key: Key of the project.\n\n    entries: All entries in this project (See entries).\n\n\nIf -w is specified, only this week will be loaded from the database.\n\nyear(): All entries in this year.\nmonth(): All entries in this month.\nweek(): All entries in this week.\nday(): All entries in this day.\n\nExample\n-------\n\n{{ user }}, (KW {{ week }}, {{ year }})\n{% for i in user -%}\n=\n{%- endfor -%}\n\n{% for proj in projects %}\n# {{ proj.desc }}\n{% for entry in proj.entries|sort(attribute='start') -%}\n{{ entry.get_comment() }}\n{% endfor -%}\n# total time: {{ proj.get_total_duration()|human_time }}h\n{% endfor %}\n# total: {{ total_time|human_time }}h\n\n\nCREDITS\n=======\nGetan is Free Software licensed under the terms of GNU GPL v>=3.\nFor details see LICENSE coming with the source of 'getan'.\n\n\nMain development\n----------------\n2018-     Magnus Schieder <magnus.schieder@intevation.de> (current maintainer)\n2014-     Bernhard E. Reiter <bernhard@intevation.de>\n2011-2014 Bj\u00f6rn Ricks <bjoern.ricks@intevation.de>\n2010      Ingo Weinzierl <ingo.weinzierl@intevation.de>\n2009-2014 Thomas Arendsen Hein <thomas@intevation.de>\n2008-2010 Sascha L. Teichmann <sascha.teichmann@intevation.de>\n\nContributions\n-------------\nFrank Koormann\nStephan Holl\nTom Gottfried\n\nThanks\n------\nTo all users that gave feedback, especially at Intevation.\n\n\n.. vim: set ts=4 sw=4 tw=80 filetype=rst :\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "https://scm.wald.intevation.org/hg/getan/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://getan.wald.intevation.org/", "keywords": "", "license": "GPLv3+", "maintainer": "magnus.schieder", "maintainer_email": "magnus.schieder@intevation.de", "name": "getan", "package_url": "https://pypi.org/project/getan/", "platform": "", "project_url": "https://pypi.org/project/getan/", "project_urls": {"Download": "https://scm.wald.intevation.org/hg/getan/", "Homepage": "https://getan.wald.intevation.org/"}, "release_url": "https://pypi.org/project/getan/3.5/", "requires_dist": ["jinja2", "urwid (>=1.1.2)"], "requires_python": ">=3.4", "summary": "Terminal based time-tracking and reporting tool; comparable to 'worklog'.", "version": "3.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"usage\">\n<h2>Usage</h2>\n<p>Call <tt>getan</tt> or <tt>getan.py</tt> in a terminal to start\nwith an empty list of tasks that you want to track time for.</p>\n<p>Use the Insert-Key to add a new task to track.\n(A <em>task</em> is called <em>project</em> within getan.)\nYou will have to enter a project \u201ckey\u201d and a project \u201cdescription\u201d.</p>\n<p>Now select one of the projects with the arrow keys from your keyboard\nand press enter to start the clock. See <tt>INTRODUCTION</tt> for more keyboard\ncommands.</p>\n<p>The time log entries will be saved in an sqlite database,\nby default getan will create <tt><span class=\"pre\">~/.getan/time.db</span></tt>.\nThe <tt>scripts/</tt> will help to generate reports from them.</p>\n<div id=\"tree-mode\">\n<h3>Tree mode</h3>\n<p>Getan supports a hierarchy of projects. A top level project key\nhas only one character, once you starting using a second character\nas project key, it will be the next level down in the hierarchy.\nExample:</p>\n<pre>a    Top level project\naa   1st second level project\nab   2nd second level project\naba  Third level Project\n</pre>\n<p>Use the switch_project_order key which is <tt>f2</tt> by default\nto cycle to the hierarchical view.</p>\n</div>\n<div id=\"customization\">\n<h3>Customization</h3>\n<p>Use <tt><span class=\"pre\">~/.getan/getanrc</span></tt> or the system-wide <tt>/etc/getanrc</tt>\nto customize keys and colors. See <tt>getan/config.py</tt> for\nthe recognized options. Example:</p>\n<pre>[keybindings]\n# changes the insert function to be activated by the `)` key\ninsert: )\n\n[theme]\nheader: light green, dark green\nbody: light green, black\n</pre>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Getan requires <a href=\"http://urwid.org/\" rel=\"nofollow\">urwid</a> in a version &gt;= 1.0. Urwid is\na console user interface library written in Python. For console output e.g.\nzeiterfassung.py Getan also requires <cite>Jinja2 &lt;http://jinja.pocoo.org/&gt;_</cite>.</p>\n<div id=\"install-urwid\">\n<h3>Install urwid</h3>\n<p>On Debian GNU/Linux &gt;= Wheezy just run as root::</p>\n<pre>$ apt-get install python3-urwid\n</pre>\n<p>On other systems urwid may be installed via pip or directly put into the sources\nof getan.</p>\n<div id=\"using-pip\">\n<h4>Using pip</h4>\n<p>To install urwid via pip run as root:</p>\n<pre>$ pip install urwid\n</pre>\n<p>Or if you prefer using a virtualenv:</p>\n<pre>$ virtualenv getan-env\n$ source getan-env/bin/activate\n(getan-env)$ pip install -U pip  # to get the latest pip\n(getan-env)$ pip install urwid\n</pre>\n</div>\n<div id=\"using-urwid-sources\">\n<h4>Using urwid sources</h4>\n<p>Urwid can be put as source to the getan directory when getan is run directly\nfrom the sources. Urwid source can be downloaded from <a href=\"https://pypi.python.org/pypi/urwid/\" rel=\"nofollow\">pypi</a>.</p>\n<p>For urwid 1.1.2 the direct download link from pypi is\n<a href=\"https://pypi.python.org/packages/source/u/urwid/urwid-1.1.2.tar.gz\" rel=\"nofollow\">https://pypi.python.org/packages/source/u/urwid/urwid-1.1.2.tar.gz</a>\n(sha256sum is\nf56568b4f8459b3265c65d9e275ef72df6cb16ad0c291f0feb027cc911ea0f26).:</p>\n<pre>$ cd getan-source\n$ v=urwid-1.1.2\n$ curl -O https://pypi.python.org/packages/source/u/urwid/$v.tar.gz\n$ sha256sum $v.tar.gz\n$ tar -xzvf $v.tar.gz\n$ ln -s $v/urwid urwid\n</pre>\n</div>\n</div>\n<div id=\"install-jinja2\">\n<h3>Install Jinja2</h3>\n<p>On Debian GNU/Linux just run as root::</p>\n<pre>$ apt-get install python3-jinja2\n</pre>\n<p>On other systems jinja2 may be installed via pip or directly put into the\nsources of getan.</p>\n<div id=\"id1\">\n<h4>Using pip</h4>\n<p>To install jinja2 via pip run as root:</p>\n<pre>$ pip install jinja2\n</pre>\n<p>Or if you prefer using a virtualenv:</p>\n<pre>$ source getan-env/bin/activate\n(getan-env)$ pip install jinja2\n</pre>\n</div>\n</div>\n<div id=\"install-getan\">\n<h3>Install getan</h3>\n<p>A installation of getan is not required. It can also be run directly from the\nsources. To install getan system wide the following command must be run as root\nuser:</p>\n<pre>$ python3 setup.py install\n</pre>\n<p>You may need to install setuptools first, on Debian GNU/Linux just run as root::</p>\n<pre>$ apt-get install python3-setuptools\n</pre>\n</div>\n</div>\n<div id=\"starting-getan\">\n<h2>Starting getan</h2>\n<p>Getan can be directly run from sources or after a system wide installation from\nthe bin dir (e.g. /usr/bin).</p>\n<div id=\"running-from-sources\">\n<h3>Running from Sources</h3>\n<p>To run getan from the sources run:</p>\n<pre>$ ./getan.py\n</pre>\n<p>or:</p>\n<pre>$ ./getan.py /path/to/mytime.db\n</pre>\n<p>to choose a different sqlite3 database then the default time.db</p>\n</div>\n<div id=\"running-from-installation\">\n<h3>Running from installation</h3>\n<p>After installing getan it can be run with:</p>\n<pre>$ getan\n</pre>\n<p>or:</p>\n<pre>$ getan /path/to/mytime.db\n</pre>\n</div>\n</div>\n<div id=\"writing-templates\">\n<h2>Writing Templates</h2>\n<p>External templates must be stored in ~/.getan/templates/ to be able to call\nthem.</p>\n<p>Getan uses the Jinja2 templating language. You can find more information\nat <a href=\"http://jinja.pocoo.org/\" rel=\"nofollow\">Jinja2</a>.</p>\n<p>If a year or a week is specified, only the entries in this period will be\nloaded.</p>\n<div id=\"variables\">\n<h3>Variables</h3>\n<p>current_week: The current week.\ncurrent_year: The current year.</p>\n<p>user: What You indicated with -u.\nweek: What You indicated with -w.\nunix_week: What You indicated with -w, in unix notation.\nyear: What you indicated with -y.</p>\n<p>get_total_duration(): Total duration of all entries.</p>\n<p>database: Path of the database.</p>\n<dl>\n<dt>entries: List of all entries.</dt>\n<dd><p>get_comment(): Description of the entry.\nget_workpackage(): Work package of the entry.\ndesc: Work package and Description of the entry.</p>\n<p>startisoday: Year, month and day in ISO format.\nstart: Start time as datetime.\nend: End time as datetime.\nget_duration(): Duration of the entry.</p>\n</dd>\n<dt>projects: List of all projects.</dt>\n<dd><p>get_total_duration(): Total duration of all\nentries in the project.\ndesc: Description of the project.\nkey: Key of the project.</p>\n<p>entries: All entries in this project (See entries).</p>\n</dd>\n</dl>\n<p>If -w is specified, only this week will be loaded from the database.</p>\n<p>year(): All entries in this year.\nmonth(): All entries in this month.\nweek(): All entries in this week.\nday(): All entries in this day.</p>\n</div>\n<div id=\"example\">\n<h3>Example</h3>\n<p>{{ user }}, (KW {{ week }}, {{ year }})\n{% for i in user -%}\n=\n{%- endfor -%}</p>\n<p>{% for proj in projects %}\n# {{ proj.desc }}\n{% for entry in proj.entries|sort(attribute=\u2019start\u2019) -%}\n{{ entry.get_comment() }}\n{% endfor -%}\n# total time: {{ proj.get_total_duration()|human_time }}h\n{% endfor %}\n# total: {{ total_time|human_time }}h</p>\n</div>\n</div>\n<div id=\"credits\">\n<h2>CREDITS</h2>\n<p>Getan is Free Software licensed under the terms of GNU GPL v&gt;=3.\nFor details see LICENSE coming with the source of \u2018getan\u2019.</p>\n<div id=\"main-development\">\n<h3>Main development</h3>\n<p>2018-     Magnus Schieder &lt;<a href=\"mailto:magnus.schieder%40intevation.de\">magnus<span>.</span>schieder<span>@</span>intevation<span>.</span>de</a>&gt; (current maintainer)\n2014-     Bernhard E. Reiter &lt;<a href=\"mailto:bernhard%40intevation.de\">bernhard<span>@</span>intevation<span>.</span>de</a>&gt;\n2011-2014 Bj\u00f6rn Ricks &lt;<a href=\"mailto:bjoern.ricks%40intevation.de\">bjoern<span>.</span>ricks<span>@</span>intevation<span>.</span>de</a>&gt;\n2010      Ingo Weinzierl &lt;<a href=\"mailto:ingo.weinzierl%40intevation.de\">ingo<span>.</span>weinzierl<span>@</span>intevation<span>.</span>de</a>&gt;\n2009-2014 Thomas Arendsen Hein &lt;<a href=\"mailto:thomas%40intevation.de\">thomas<span>@</span>intevation<span>.</span>de</a>&gt;\n2008-2010 Sascha L. Teichmann &lt;<a href=\"mailto:sascha.teichmann%40intevation.de\">sascha<span>.</span>teichmann<span>@</span>intevation<span>.</span>de</a>&gt;</p>\n</div>\n<div id=\"contributions\">\n<h3>Contributions</h3>\n<p>Frank Koormann\nStephan Holl\nTom Gottfried</p>\n</div>\n<div id=\"thanks\">\n<h3>Thanks</h3>\n<p>To all users that gave feedback, especially at Intevation.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7086754, "releases": {"2.0.post1": [{"comment_text": "", "digests": {"md5": "60fba2c54187c10be785bbff06bc0054", "sha256": "f4b6369a262884534cb797bee802f72439d05362a84e6363afc2dbcb9719ca5c"}, "downloads": -1, "filename": "getan-2.0.post1-py2-none-any.whl", "has_sig": true, "md5_digest": "60fba2c54187c10be785bbff06bc0054", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 40803, "upload_time": "2017-05-03T15:35:32", "upload_time_iso_8601": "2017-05-03T15:35:32.665114Z", "url": "https://files.pythonhosted.org/packages/18/42/56ad94c4366731010bf641a0a0c62e2f003dc541a9c5e322e281cc513776/getan-2.0.post1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a768bf66f75836139369cc1dc2f5684f", "sha256": "cd3adff48a0e958412f78fb7b6c813f7a2758ebd740c0275c9b931255a76767e"}, "downloads": -1, "filename": "getan-2.0.post1.tar.gz", "has_sig": true, "md5_digest": "a768bf66f75836139369cc1dc2f5684f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30158, "upload_time": "2017-05-03T15:35:35", "upload_time_iso_8601": "2017-05-03T15:35:35.021922Z", "url": "https://files.pythonhosted.org/packages/39/4b/675c3536c807114d0b7aad85879bd63ba0719cdaf8195ab3d26ce716566f/getan-2.0.post1.tar.gz", "yanked": false}], "2.1": [{"comment_text": "", "digests": {"md5": "3e6ef3a1e5a65e15e6d902e0314b6abd", "sha256": "858babe1d5bd62cd2e0670723f8c9fdc0aa67bd4725641b1bb4bf7df99ef1109"}, "downloads": -1, "filename": "getan-2.1-py2-none-any.whl", "has_sig": true, "md5_digest": "3e6ef3a1e5a65e15e6d902e0314b6abd", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 41314, "upload_time": "2017-09-07T15:32:19", "upload_time_iso_8601": "2017-09-07T15:32:19.163970Z", "url": "https://files.pythonhosted.org/packages/3f/7a/fed687bf3610600b399f327b95309dc334382321a660cbb2e88a8e29d4b7/getan-2.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db6f43393ab242a5fb8c3769c76f9a5e", "sha256": "29e65cf3cfe4da78c56ad19302968034c8707c18901d8b132a8fc9c81d8b124f"}, "downloads": -1, "filename": "getan-2.1.tar.gz", "has_sig": true, "md5_digest": "db6f43393ab242a5fb8c3769c76f9a5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30498, "upload_time": "2017-09-07T15:32:23", "upload_time_iso_8601": "2017-09-07T15:32:23.145383Z", "url": "https://files.pythonhosted.org/packages/81/8a/5373001ff9f3156a89e9510e3bf2a541fd6540776edc0d70ab7cb6c93f6f/getan-2.1.tar.gz", "yanked": false}], "2.2": [{"comment_text": "", "digests": {"md5": "586d0277da271e8f7ef19cfc8188eef9", "sha256": "895228f7ff5abfa024b8d207c1aec51181de701b6962fc417706c9028c917395"}, "downloads": -1, "filename": "getan-2.2-py2-none-any.whl", "has_sig": true, "md5_digest": "586d0277da271e8f7ef19cfc8188eef9", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 41657, "upload_time": "2018-01-26T16:38:56", "upload_time_iso_8601": "2018-01-26T16:38:56.750507Z", "url": "https://files.pythonhosted.org/packages/85/45/56e04c90ed0fdf0006b63d6b256eef30420b29dcd370597b7967e63edbe0/getan-2.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3aa23084fcefe79d8ebc98eb502aa8a", "sha256": "83588fe8961ba375817324e4b9ceda0e6a156ba42b9f02512727d2f09e2fcac3"}, "downloads": -1, "filename": "getan-2.2.tar.gz", "has_sig": true, "md5_digest": "a3aa23084fcefe79d8ebc98eb502aa8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30703, "upload_time": "2018-01-26T16:38:59", "upload_time_iso_8601": "2018-01-26T16:38:59.101843Z", "url": "https://files.pythonhosted.org/packages/7b/56/68a91204dfcf8b8c69a19f7eebc0225597b8985985990c5e4e3693b7df67/getan-2.2.tar.gz", "yanked": false}], "3.1": [{"comment_text": "", "digests": {"md5": "26b1c63384c1fdc0756ad0b0e57dfc9f", "sha256": "de340d2c0733aca69804636546b8a514c90d44833306d391dff3f8d78edf9404"}, "downloads": -1, "filename": "getan-3.1.tar.gz", "has_sig": false, "md5_digest": "26b1c63384c1fdc0756ad0b0e57dfc9f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 22705, "upload_time": "2018-07-06T16:26:04", "upload_time_iso_8601": "2018-07-06T16:26:04.751810Z", "url": "https://files.pythonhosted.org/packages/60/2d/727e9456f3f942f7eea0c67f3cdcb6036e01edd0f2b4a7919ee94b628f39/getan-3.1.tar.gz", "yanked": false}], "3.2": [{"comment_text": "", "digests": {"md5": "d679deafabd1d23f8f257ee95e802e43", "sha256": "6d287d7854a16017b86dd74f18bb498fc1d69f4528a534bb3d3dc6b9f1e96dad"}, "downloads": -1, "filename": "getan-3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d679deafabd1d23f8f257ee95e802e43", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 44190, "upload_time": "2018-12-03T12:27:54", "upload_time_iso_8601": "2018-12-03T12:27:54.671258Z", "url": "https://files.pythonhosted.org/packages/15/33/baf743622e2f643ef4ea25d8a640595e3b9c9804112144544a3efbd7a00c/getan-3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "71342a73b3cb4189eee2fedff750de56", "sha256": "22e217bdebcdb6feffb8c9be6d1cbd6cd75ff5461288919fab2ad95ef3ebdede"}, "downloads": -1, "filename": "getan-3.2.tar.gz", "has_sig": false, "md5_digest": "71342a73b3cb4189eee2fedff750de56", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 25148, "upload_time": "2018-12-03T12:27:56", "upload_time_iso_8601": "2018-12-03T12:27:56.385607Z", "url": "https://files.pythonhosted.org/packages/13/3b/7a0bf3057518e72cde4f08c80a5ad56468362a42fb702ccc03169c262a26/getan-3.2.tar.gz", "yanked": false}], "3.4": [{"comment_text": "", "digests": {"md5": "c29f885d7bfd52b1642eb9b8d1f76aad", "sha256": "a9c597803e2043310b2b609d8831aec7a556fa66f56e36418a44120db9f1d934"}, "downloads": -1, "filename": "getan-3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c29f885d7bfd52b1642eb9b8d1f76aad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 45831, "upload_time": "2020-01-31T15:52:03", "upload_time_iso_8601": "2020-01-31T15:52:03.581073Z", "url": "https://files.pythonhosted.org/packages/4a/f8/f4b7ab13ce4fabf9bfc61a38a6f206536b28cdc868b27a900bb2f0676559/getan-3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fbd17ede8ca8169c68a64fa55f870e96", "sha256": "1894d754923e21734606b3f3f93e202a05fcb2eb9c886e7ebd4a7a931ed3b310"}, "downloads": -1, "filename": "getan-3.4.tar.gz", "has_sig": false, "md5_digest": "fbd17ede8ca8169c68a64fa55f870e96", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 26627, "upload_time": "2020-01-31T15:52:05", "upload_time_iso_8601": "2020-01-31T15:52:05.609567Z", "url": "https://files.pythonhosted.org/packages/0a/87/64c96f546a27bababf12d84fd209c1dcd07288388205cf151d50061c842f/getan-3.4.tar.gz", "yanked": false}], "3.5": [{"comment_text": "", "digests": {"md5": "9b2bf1a148439375d67c3b6722e267be", "sha256": "498ffe2c71348521889ea818a1bc33dee19f7e1dae222725d7c42842e8d457d6"}, "downloads": -1, "filename": "getan-3.5-py3-none-any.whl", "has_sig": false, "md5_digest": "9b2bf1a148439375d67c3b6722e267be", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 46391, "upload_time": "2020-04-23T19:25:16", "upload_time_iso_8601": "2020-04-23T19:25:16.633337Z", "url": "https://files.pythonhosted.org/packages/3a/2d/f0236ca10ba3a877d1ea783cedab728e4e600e28691ad976f2d12ac499e1/getan-3.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cde71534d3884a2fed1e36297ad9f442", "sha256": "68f667f8e5b897c3389e4cf532de6c6e8b8ab849c333b458116fac3283c12baa"}, "downloads": -1, "filename": "getan-3.5.tar.gz", "has_sig": false, "md5_digest": "cde71534d3884a2fed1e36297ad9f442", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 26765, "upload_time": "2020-04-23T19:25:18", "upload_time_iso_8601": "2020-04-23T19:25:18.529956Z", "url": "https://files.pythonhosted.org/packages/00/69/8c504812d8ca276eba47e5044dbd9773745bf1b061c0242dfba34ea29a1d/getan-3.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9b2bf1a148439375d67c3b6722e267be", "sha256": "498ffe2c71348521889ea818a1bc33dee19f7e1dae222725d7c42842e8d457d6"}, "downloads": -1, "filename": "getan-3.5-py3-none-any.whl", "has_sig": false, "md5_digest": "9b2bf1a148439375d67c3b6722e267be", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 46391, "upload_time": "2020-04-23T19:25:16", "upload_time_iso_8601": "2020-04-23T19:25:16.633337Z", "url": "https://files.pythonhosted.org/packages/3a/2d/f0236ca10ba3a877d1ea783cedab728e4e600e28691ad976f2d12ac499e1/getan-3.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cde71534d3884a2fed1e36297ad9f442", "sha256": "68f667f8e5b897c3389e4cf532de6c6e8b8ab849c333b458116fac3283c12baa"}, "downloads": -1, "filename": "getan-3.5.tar.gz", "has_sig": false, "md5_digest": "cde71534d3884a2fed1e36297ad9f442", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 26765, "upload_time": "2020-04-23T19:25:18", "upload_time_iso_8601": "2020-04-23T19:25:18.529956Z", "url": "https://files.pythonhosted.org/packages/00/69/8c504812d8ca276eba47e5044dbd9773745bf1b061c0242dfba34ea29a1d/getan-3.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:50 2020"}