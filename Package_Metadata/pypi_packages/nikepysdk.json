{"info": {"author": "Kelvin Fichter", "author_email": "kelvinfichter@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "nike-py-sdk\n===========\n\nThis is an *unofficial* Python3 API wrapper for Nike services. WIP.\n\nBasic Usage\n-----------\n\n.. code:: py\n\n    import nikepysdk\n\n    nike = nikepysdk.NikeSdk()\n\n    username = 'test@example.com'\n    password = 'Password123!'\n    access_token = nike.get_access_token(username, password)\n    print(access_token) # Some long access token\n\n    account_verified = nike.is_account_verified(access_token)\n    print(account_verified) # True or False\n\n    account_data = {\n        'email': 'newaccount@example.com',\n        'password': 'Password12345!',\n        'first_name': 'John',\n        'last_name': 'Smith',\n        'date_of_birth': '2000-01-01', # YYYY-MM-DD\n        'gender': 'male' # or female\n    }\n    account_created = nike.create_account(account_data)\n    print(account_created)\n\n    event = nike.get_event_by_id(88145)\n    print(event.event_id, event.title, event.location)\n\nSDK Documentation\n-----------------\n\n``nike.get_access_token``\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n``nike.get_access_token(username, password)``\n\nReturns an access token for an account given a username and password\nthat can be used to interact with authenticated API endpoints.\n\nParameters\n^^^^^^^^^^\n\n1. ``string`` - Username for the account\n2. ``string`` - Password for the account\n\nReturns\n^^^^^^^\n\n``string`` Access token in a string format\n\nExample\n^^^^^^^\n\n.. code:: py\n\n    username = 'example@test.com'\n    password = 'Password123!'\n    access_token = nike.get_access_token(username, password)\n    print(access_token) # Some long string\n\n``nike.create_account``\n~~~~~~~~~~~~~~~~~~~~~~~\n\n``nike.create_account(account_data)``\n\nCreates a new Nike+ account given the account data. ``account_data`` is\na dictionary with the following schema:\n\n::\n\n    {\n        'email': string,\n        'password': string,\n        'first_name': string,\n        'last_name': string,\n        'date_of_birth': string, # YYYY-MM-DD\n        'gender': string # 'male' or 'female'\n    }\n\nParameters\n^^^^^^^^^^\n\n1. ``dict`` - Account data as a dict\n\nReturns\n^^^^^^^\n\n``bool`` Success of the account creation\n\nExample\n^^^^^^^\n\n.. code:: py\n\n    account_data = {\n        'email': 'newaccount@example.com',\n        'password': 'Password12345!',\n        'first_name': 'John',\n        'last_name': 'Smith',\n        'date_of_birth': '2000-01-01', # YYYY-MM-DD\n        'gender': 'male' # or female\n    }\n    account_created = nike.create_account(account_data)\n    print(account_created) # True, hopefully\n\n``nike.is_account_verified``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n``nike.is_account_verified(access_token)``\n\nChecks if an account is verified given an account's valid access token\n\nParameters\n^^^^^^^^^^\n\n1. ``string`` - Account access token\n\nReturns\n^^^^^^^\n\n``bool`` If the account is verified or not\n\nExample\n^^^^^^^\n\n.. code:: py\n\n    is_verified = nike.create_account(access_token)\n    print(is_verified) # True, hopefully\n\n``nike.send_sms_code``\n~~~~~~~~~~~~~~~~~~~~~~\n\n``nike.send_sms_code(access_token, phone_number)``\n\nSends an SMS verification code to an account given its access token and\nphone number.\n\nParameters\n^^^^^^^^^^\n\n1. ``string`` - Account access token\n2. ``string`` - Phone number to send code to\n\nReturns\n^^^^^^^\n\n``bool`` Success of the operation\n\nExample\n^^^^^^^\n\n.. code:: py\n\n    phone_number = '1112223333'\n    sms_sent = nike.send_sms_code(access_token, phone_number)\n    print(sms_sent) # True, hopefully\n\n``nike.verify_sms_code``\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n``nike.verify_sms_code(access_token, sms_code)``\n\nVerifies the SMS code for an account.\n\nParameters\n^^^^^^^^^^\n\n1. ``string`` - Account access token\n2. ``string`` - SMS code that was received\n\nReturns\n^^^^^^^\n\n``bool`` Success of the operation\n\nExample\n^^^^^^^\n\n.. code:: py\n\n    sms_code = '123456'\n    sms_verified = nike.verify_sms_code(access_token, sms_code)\n    print(sms_verified) # True, hopefully\n\n``nike.add_shipping_address``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n``nike.add_shipping_address(access_token, shipping_info)``\n\nAdds a new shipping address to an account. ``shipping_info`` is a\ndictionary with the following schema:\n\n::\n\n    {\n        'first_name': string,\n        'last_name': string,\n        'address_1': string,\n        'address_2': string,\n        'city': string,\n        'state': string, # Initials\n        'zip': string,\n        'phone': string, # 1112223333\n    }\n\nParameters\n^^^^^^^^^^\n\n1. ``string`` - Access token for the account\\_\n2. ``dict`` - Shipping address data as a dict\n\nReturns\n^^^^^^^\n\n``string`` Address ID for use in adding billing info\n\nExample\n^^^^^^^\n\n.. code:: py\n\n    shipping_info = {\n        'first_name': 'John',\n        'last_name': 'Smith',\n        'address_1': '123 Main Street',\n        'address_2': 'APT 1A',\n        'city': 'Sometown',\n        'state': 'OH',\n        'zip': '12345',\n        'phone': '1234567890'\n    }\n    address_id = nike.add_shipping_address(access_token, shipping_info)\n    print(address_id) # Some uuid4 string\n\n``nike.add_card``\n~~~~~~~~~~~~~~~~~\n\n``nike.add_card(access_token, card_info)``\n\nAdds a new card to an account. ``card_info`` is a dictionary with the\nfollowing schema:\n\n::\n\n    {\n        'number': string,\n        'type': string, # VISA or similar\n        'exp_month': string, # XX\n        'exp_year': string, # XXXX\n        'cvv': string\n    }\n\nParameters\n^^^^^^^^^^\n\n1. ``string`` - Access token for the account\\_\n2. ``dict`` - Card data as a dict\n\nReturns\n^^^^^^^\n\n``string`` Card ID for use in adding billing info\n\nExample\n^^^^^^^\n\n.. code:: py\n\n    card_info = {\n        'number': '1111222233334444,\n        'type': 'VISA', # VISA or similar\n        'exp_month': '12', # XX\n        'exp_year': '2021', # XXXX\n        'cvv': '123'\n    }\n    card_id = nike.add_card(access_token, card_info)\n    print(card_id) # Some uuid4 string\n\n``nike.add_billing_info``\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n``nike.add_billing_info(access_token, access_token, billing_info, address_id, card_id)``\n\nAdds a new billing profile to an account. ``billing_info`` is a\ndictionary with the following schema:\n\n::\n\n    {\n        'first_name': string,\n        'last_name': string,\n        'address_1': string,\n        'address_2': string,\n        'city': string,\n        'state': string, # Initials\n        'zip': string,\n        'phone': string, # 1112223333\n    }\n\n``address_id`` and ``card_id`` are IDs returned by\n``add_shipping_address`` and ``add_card``.\n\nParameters\n^^^^^^^^^^\n\n1. ``string`` - Access token for the account\n2. ``dict`` - Billing data as a dict\n3. ``string`` - Address ID to add to the profile\n4. ``string`` - Card ID to add to the profile\n\nReturns\n^^^^^^^\n\n``bool`` Success of the operation\n\nExample\n^^^^^^^\n\n.. code:: py\n\n    billing_info = {\n        'first_name': 'John',\n        'last_name': 'Smith',\n        'address_1': '123 Main Street',\n        'address_2': 'APT 1A',\n        'city': 'Sometown',\n        'state': 'OH',\n        'zip': '12345',\n        'phone': '1234567890'\n    }\n    billing_added = nike.add_billing_info(access_token, billing_info, address_id, card_id)\n    print(billing_added) # True, hopefully\n\n``nike.get_event_by_id``\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n``nike.get_event_by_id(event_id)``\n\nReturns a ``NikeEvent`` object that contains information about an event\n\nParameters\n^^^^^^^^^^\n\n1. ``string`` - ID of the event\n\nReturns\n^^^^^^^\n\n``NikeEvent`` Event data as a ``NikeEvent`` object\n\nExample\n^^^^^^^\n\n.. code:: py\n\n    event_id = '12345'\n    event = nike.get_event_by_id(event_id)\n    print(event.title) # Some string\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kfichter/nike-py-sdk", "keywords": "nike sneakers development", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "nikepysdk", "package_url": "https://pypi.org/project/nikepysdk/", "platform": "", "project_url": "https://pypi.org/project/nikepysdk/", "project_urls": {"Homepage": "https://github.com/kfichter/nike-py-sdk"}, "release_url": "https://pypi.org/project/nikepysdk/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "A Python3 SDK for interacting with Nike services", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is an <em>unofficial</em> Python3 API wrapper for Nike services. WIP.</p>\n<div id=\"basic-usage\">\n<h2>Basic Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">nikepysdk</span>\n\n<span class=\"n\">nike</span> <span class=\"o\">=</span> <span class=\"n\">nikepysdk</span><span class=\"o\">.</span><span class=\"n\">NikeSdk</span><span class=\"p\">()</span>\n\n<span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"s1\">'test@example.com'</span>\n<span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"s1\">'Password123!'</span>\n<span class=\"n\">access_token</span> <span class=\"o\">=</span> <span class=\"n\">nike</span><span class=\"o\">.</span><span class=\"n\">get_access_token</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">access_token</span><span class=\"p\">)</span> <span class=\"c1\"># Some long access token</span>\n\n<span class=\"n\">account_verified</span> <span class=\"o\">=</span> <span class=\"n\">nike</span><span class=\"o\">.</span><span class=\"n\">is_account_verified</span><span class=\"p\">(</span><span class=\"n\">access_token</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">account_verified</span><span class=\"p\">)</span> <span class=\"c1\"># True or False</span>\n\n<span class=\"n\">account_data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'email'</span><span class=\"p\">:</span> <span class=\"s1\">'newaccount@example.com'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'password'</span><span class=\"p\">:</span> <span class=\"s1\">'Password12345!'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'first_name'</span><span class=\"p\">:</span> <span class=\"s1\">'John'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'last_name'</span><span class=\"p\">:</span> <span class=\"s1\">'Smith'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'date_of_birth'</span><span class=\"p\">:</span> <span class=\"s1\">'2000-01-01'</span><span class=\"p\">,</span> <span class=\"c1\"># YYYY-MM-DD</span>\n    <span class=\"s1\">'gender'</span><span class=\"p\">:</span> <span class=\"s1\">'male'</span> <span class=\"c1\"># or female</span>\n<span class=\"p\">}</span>\n<span class=\"n\">account_created</span> <span class=\"o\">=</span> <span class=\"n\">nike</span><span class=\"o\">.</span><span class=\"n\">create_account</span><span class=\"p\">(</span><span class=\"n\">account_data</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">account_created</span><span class=\"p\">)</span>\n\n<span class=\"n\">event</span> <span class=\"o\">=</span> <span class=\"n\">nike</span><span class=\"o\">.</span><span class=\"n\">get_event_by_id</span><span class=\"p\">(</span><span class=\"mi\">88145</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">event_id</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"sdk-documentation\">\n<h2>SDK Documentation</h2>\n<div id=\"nike-get-access-token\">\n<h3><tt>nike.get_access_token</tt></h3>\n<p><tt>nike.get_access_token(username, password)</tt></p>\n<p>Returns an access token for an account given a username and password\nthat can be used to interact with authenticated API endpoints.</p>\n<div id=\"parameters\">\n<h4>Parameters</h4>\n<ol>\n<li><tt>string</tt> - Username for the account</li>\n<li><tt>string</tt> - Password for the account</li>\n</ol>\n</div>\n<div id=\"returns\">\n<h4>Returns</h4>\n<p><tt>string</tt> Access token in a string format</p>\n</div>\n<div id=\"example\">\n<h4>Example</h4>\n<pre><span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"s1\">'example@test.com'</span>\n<span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"s1\">'Password123!'</span>\n<span class=\"n\">access_token</span> <span class=\"o\">=</span> <span class=\"n\">nike</span><span class=\"o\">.</span><span class=\"n\">get_access_token</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">access_token</span><span class=\"p\">)</span> <span class=\"c1\"># Some long string</span>\n</pre>\n</div>\n</div>\n<div id=\"nike-create-account\">\n<h3><tt>nike.create_account</tt></h3>\n<p><tt>nike.create_account(account_data)</tt></p>\n<p>Creates a new Nike+ account given the account data. <tt>account_data</tt> is\na dictionary with the following schema:</p>\n<pre>{\n    'email': string,\n    'password': string,\n    'first_name': string,\n    'last_name': string,\n    'date_of_birth': string, # YYYY-MM-DD\n    'gender': string # 'male' or 'female'\n}\n</pre>\n<div id=\"id1\">\n<h4>Parameters</h4>\n<ol>\n<li><tt>dict</tt> - Account data as a dict</li>\n</ol>\n</div>\n<div id=\"id2\">\n<h4>Returns</h4>\n<p><tt>bool</tt> Success of the account creation</p>\n</div>\n<div id=\"id3\">\n<h4>Example</h4>\n<pre><span class=\"n\">account_data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'email'</span><span class=\"p\">:</span> <span class=\"s1\">'newaccount@example.com'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'password'</span><span class=\"p\">:</span> <span class=\"s1\">'Password12345!'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'first_name'</span><span class=\"p\">:</span> <span class=\"s1\">'John'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'last_name'</span><span class=\"p\">:</span> <span class=\"s1\">'Smith'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'date_of_birth'</span><span class=\"p\">:</span> <span class=\"s1\">'2000-01-01'</span><span class=\"p\">,</span> <span class=\"c1\"># YYYY-MM-DD</span>\n    <span class=\"s1\">'gender'</span><span class=\"p\">:</span> <span class=\"s1\">'male'</span> <span class=\"c1\"># or female</span>\n<span class=\"p\">}</span>\n<span class=\"n\">account_created</span> <span class=\"o\">=</span> <span class=\"n\">nike</span><span class=\"o\">.</span><span class=\"n\">create_account</span><span class=\"p\">(</span><span class=\"n\">account_data</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">account_created</span><span class=\"p\">)</span> <span class=\"c1\"># True, hopefully</span>\n</pre>\n</div>\n</div>\n<div id=\"nike-is-account-verified\">\n<h3><tt>nike.is_account_verified</tt></h3>\n<p><tt>nike.is_account_verified(access_token)</tt></p>\n<p>Checks if an account is verified given an account\u2019s valid access token</p>\n<div id=\"id4\">\n<h4>Parameters</h4>\n<ol>\n<li><tt>string</tt> - Account access token</li>\n</ol>\n</div>\n<div id=\"id5\">\n<h4>Returns</h4>\n<p><tt>bool</tt> If the account is verified or not</p>\n</div>\n<div id=\"id6\">\n<h4>Example</h4>\n<pre><span class=\"n\">is_verified</span> <span class=\"o\">=</span> <span class=\"n\">nike</span><span class=\"o\">.</span><span class=\"n\">create_account</span><span class=\"p\">(</span><span class=\"n\">access_token</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">is_verified</span><span class=\"p\">)</span> <span class=\"c1\"># True, hopefully</span>\n</pre>\n</div>\n</div>\n<div id=\"nike-send-sms-code\">\n<h3><tt>nike.send_sms_code</tt></h3>\n<p><tt>nike.send_sms_code(access_token, phone_number)</tt></p>\n<p>Sends an SMS verification code to an account given its access token and\nphone number.</p>\n<div id=\"id7\">\n<h4>Parameters</h4>\n<ol>\n<li><tt>string</tt> - Account access token</li>\n<li><tt>string</tt> - Phone number to send code to</li>\n</ol>\n</div>\n<div id=\"id8\">\n<h4>Returns</h4>\n<p><tt>bool</tt> Success of the operation</p>\n</div>\n<div id=\"id9\">\n<h4>Example</h4>\n<pre><span class=\"n\">phone_number</span> <span class=\"o\">=</span> <span class=\"s1\">'1112223333'</span>\n<span class=\"n\">sms_sent</span> <span class=\"o\">=</span> <span class=\"n\">nike</span><span class=\"o\">.</span><span class=\"n\">send_sms_code</span><span class=\"p\">(</span><span class=\"n\">access_token</span><span class=\"p\">,</span> <span class=\"n\">phone_number</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">sms_sent</span><span class=\"p\">)</span> <span class=\"c1\"># True, hopefully</span>\n</pre>\n</div>\n</div>\n<div id=\"nike-verify-sms-code\">\n<h3><tt>nike.verify_sms_code</tt></h3>\n<p><tt>nike.verify_sms_code(access_token, sms_code)</tt></p>\n<p>Verifies the SMS code for an account.</p>\n<div id=\"id10\">\n<h4>Parameters</h4>\n<ol>\n<li><tt>string</tt> - Account access token</li>\n<li><tt>string</tt> - SMS code that was received</li>\n</ol>\n</div>\n<div id=\"id11\">\n<h4>Returns</h4>\n<p><tt>bool</tt> Success of the operation</p>\n</div>\n<div id=\"id12\">\n<h4>Example</h4>\n<pre><span class=\"n\">sms_code</span> <span class=\"o\">=</span> <span class=\"s1\">'123456'</span>\n<span class=\"n\">sms_verified</span> <span class=\"o\">=</span> <span class=\"n\">nike</span><span class=\"o\">.</span><span class=\"n\">verify_sms_code</span><span class=\"p\">(</span><span class=\"n\">access_token</span><span class=\"p\">,</span> <span class=\"n\">sms_code</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">sms_verified</span><span class=\"p\">)</span> <span class=\"c1\"># True, hopefully</span>\n</pre>\n</div>\n</div>\n<div id=\"nike-add-shipping-address\">\n<h3><tt>nike.add_shipping_address</tt></h3>\n<p><tt>nike.add_shipping_address(access_token, shipping_info)</tt></p>\n<p>Adds a new shipping address to an account. <tt>shipping_info</tt> is a\ndictionary with the following schema:</p>\n<pre>{\n    'first_name': string,\n    'last_name': string,\n    'address_1': string,\n    'address_2': string,\n    'city': string,\n    'state': string, # Initials\n    'zip': string,\n    'phone': string, # 1112223333\n}\n</pre>\n<div id=\"id13\">\n<h4>Parameters</h4>\n<ol>\n<li><tt>string</tt> - Access token for the account_</li>\n<li><tt>dict</tt> - Shipping address data as a dict</li>\n</ol>\n</div>\n<div id=\"id14\">\n<h4>Returns</h4>\n<p><tt>string</tt> Address ID for use in adding billing info</p>\n</div>\n<div id=\"id15\">\n<h4>Example</h4>\n<pre><span class=\"n\">shipping_info</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'first_name'</span><span class=\"p\">:</span> <span class=\"s1\">'John'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'last_name'</span><span class=\"p\">:</span> <span class=\"s1\">'Smith'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'address_1'</span><span class=\"p\">:</span> <span class=\"s1\">'123 Main Street'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'address_2'</span><span class=\"p\">:</span> <span class=\"s1\">'APT 1A'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Sometown'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'state'</span><span class=\"p\">:</span> <span class=\"s1\">'OH'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'zip'</span><span class=\"p\">:</span> <span class=\"s1\">'12345'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'phone'</span><span class=\"p\">:</span> <span class=\"s1\">'1234567890'</span>\n<span class=\"p\">}</span>\n<span class=\"n\">address_id</span> <span class=\"o\">=</span> <span class=\"n\">nike</span><span class=\"o\">.</span><span class=\"n\">add_shipping_address</span><span class=\"p\">(</span><span class=\"n\">access_token</span><span class=\"p\">,</span> <span class=\"n\">shipping_info</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">address_id</span><span class=\"p\">)</span> <span class=\"c1\"># Some uuid4 string</span>\n</pre>\n</div>\n</div>\n<div id=\"nike-add-card\">\n<h3><tt>nike.add_card</tt></h3>\n<p><tt>nike.add_card(access_token, card_info)</tt></p>\n<p>Adds a new card to an account. <tt>card_info</tt> is a dictionary with the\nfollowing schema:</p>\n<pre>{\n    'number': string,\n    'type': string, # VISA or similar\n    'exp_month': string, # XX\n    'exp_year': string, # XXXX\n    'cvv': string\n}\n</pre>\n<div id=\"id16\">\n<h4>Parameters</h4>\n<ol>\n<li><tt>string</tt> - Access token for the account_</li>\n<li><tt>dict</tt> - Card data as a dict</li>\n</ol>\n</div>\n<div id=\"id17\">\n<h4>Returns</h4>\n<p><tt>string</tt> Card ID for use in adding billing info</p>\n</div>\n<div id=\"id18\">\n<h4>Example</h4>\n<pre><span class=\"n\">card_info</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'number'</span><span class=\"p\">:</span> <span class=\"s1\">'1111222233334444,</span>\n    <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'VISA'</span><span class=\"p\">,</span> <span class=\"c1\"># VISA or similar</span>\n    <span class=\"s1\">'exp_month'</span><span class=\"p\">:</span> <span class=\"s1\">'12'</span><span class=\"p\">,</span> <span class=\"c1\"># XX</span>\n    <span class=\"s1\">'exp_year'</span><span class=\"p\">:</span> <span class=\"s1\">'2021'</span><span class=\"p\">,</span> <span class=\"c1\"># XXXX</span>\n    <span class=\"s1\">'cvv'</span><span class=\"p\">:</span> <span class=\"s1\">'123'</span>\n<span class=\"p\">}</span>\n<span class=\"n\">card_id</span> <span class=\"o\">=</span> <span class=\"n\">nike</span><span class=\"o\">.</span><span class=\"n\">add_card</span><span class=\"p\">(</span><span class=\"n\">access_token</span><span class=\"p\">,</span> <span class=\"n\">card_info</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">card_id</span><span class=\"p\">)</span> <span class=\"c1\"># Some uuid4 string</span>\n</pre>\n</div>\n</div>\n<div id=\"nike-add-billing-info\">\n<h3><tt>nike.add_billing_info</tt></h3>\n<p><tt>nike.add_billing_info(access_token, access_token, billing_info, address_id, card_id)</tt></p>\n<p>Adds a new billing profile to an account. <tt>billing_info</tt> is a\ndictionary with the following schema:</p>\n<pre>{\n    'first_name': string,\n    'last_name': string,\n    'address_1': string,\n    'address_2': string,\n    'city': string,\n    'state': string, # Initials\n    'zip': string,\n    'phone': string, # 1112223333\n}\n</pre>\n<p><tt>address_id</tt> and <tt>card_id</tt> are IDs returned by\n<tt>add_shipping_address</tt> and <tt>add_card</tt>.</p>\n<div id=\"id19\">\n<h4>Parameters</h4>\n<ol>\n<li><tt>string</tt> - Access token for the account</li>\n<li><tt>dict</tt> - Billing data as a dict</li>\n<li><tt>string</tt> - Address ID to add to the profile</li>\n<li><tt>string</tt> - Card ID to add to the profile</li>\n</ol>\n</div>\n<div id=\"id20\">\n<h4>Returns</h4>\n<p><tt>bool</tt> Success of the operation</p>\n</div>\n<div id=\"id21\">\n<h4>Example</h4>\n<pre><span class=\"n\">billing_info</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'first_name'</span><span class=\"p\">:</span> <span class=\"s1\">'John'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'last_name'</span><span class=\"p\">:</span> <span class=\"s1\">'Smith'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'address_1'</span><span class=\"p\">:</span> <span class=\"s1\">'123 Main Street'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'address_2'</span><span class=\"p\">:</span> <span class=\"s1\">'APT 1A'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Sometown'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'state'</span><span class=\"p\">:</span> <span class=\"s1\">'OH'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'zip'</span><span class=\"p\">:</span> <span class=\"s1\">'12345'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'phone'</span><span class=\"p\">:</span> <span class=\"s1\">'1234567890'</span>\n<span class=\"p\">}</span>\n<span class=\"n\">billing_added</span> <span class=\"o\">=</span> <span class=\"n\">nike</span><span class=\"o\">.</span><span class=\"n\">add_billing_info</span><span class=\"p\">(</span><span class=\"n\">access_token</span><span class=\"p\">,</span> <span class=\"n\">billing_info</span><span class=\"p\">,</span> <span class=\"n\">address_id</span><span class=\"p\">,</span> <span class=\"n\">card_id</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">billing_added</span><span class=\"p\">)</span> <span class=\"c1\"># True, hopefully</span>\n</pre>\n</div>\n</div>\n<div id=\"nike-get-event-by-id\">\n<h3><tt>nike.get_event_by_id</tt></h3>\n<p><tt>nike.get_event_by_id(event_id)</tt></p>\n<p>Returns a <tt>NikeEvent</tt> object that contains information about an event</p>\n<div id=\"id22\">\n<h4>Parameters</h4>\n<ol>\n<li><tt>string</tt> - ID of the event</li>\n</ol>\n</div>\n<div id=\"id23\">\n<h4>Returns</h4>\n<p><tt>NikeEvent</tt> Event data as a <tt>NikeEvent</tt> object</p>\n</div>\n<div id=\"id24\">\n<h4>Example</h4>\n<pre><span class=\"n\">event_id</span> <span class=\"o\">=</span> <span class=\"s1\">'12345'</span>\n<span class=\"n\">event</span> <span class=\"o\">=</span> <span class=\"n\">nike</span><span class=\"o\">.</span><span class=\"n\">get_event_by_id</span><span class=\"p\">(</span><span class=\"n\">event_id</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">)</span> <span class=\"c1\"># Some string</span>\n</pre>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3143581, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "1849e9865e5602b88232bb30cb3475d6", "sha256": "ac2f12ce00789e363389d4ccf1709f896d427194fcc6007e2ef4028c4943cb06"}, "downloads": -1, "filename": "nikepysdk-0.0.1.tar.gz", "has_sig": false, "md5_digest": "1849e9865e5602b88232bb30cb3475d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3917, "upload_time": "2017-08-31T16:37:30", "upload_time_iso_8601": "2017-08-31T16:37:30.470420Z", "url": "https://files.pythonhosted.org/packages/c3/c2/d7e48dd36f1736949aa4c1828d1c92dd43d687c0a5cd5f8dcbc1eb8f9993/nikepysdk-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "82229902985a2f69102492f5b07f2dbd", "sha256": "85139dcee76b1f3b823289b192f082a79544b91e39814d06336a72d637135311"}, "downloads": -1, "filename": "nikepysdk-0.0.2.tar.gz", "has_sig": false, "md5_digest": "82229902985a2f69102492f5b07f2dbd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6354, "upload_time": "2017-09-02T20:39:15", "upload_time_iso_8601": "2017-09-02T20:39:15.216455Z", "url": "https://files.pythonhosted.org/packages/7f/a7/13d56cf9466550170ce0304dac9bd60bd4ada3d5ba9943ec6cd825e81dc9/nikepysdk-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "82229902985a2f69102492f5b07f2dbd", "sha256": "85139dcee76b1f3b823289b192f082a79544b91e39814d06336a72d637135311"}, "downloads": -1, "filename": "nikepysdk-0.0.2.tar.gz", "has_sig": false, "md5_digest": "82229902985a2f69102492f5b07f2dbd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6354, "upload_time": "2017-09-02T20:39:15", "upload_time_iso_8601": "2017-09-02T20:39:15.216455Z", "url": "https://files.pythonhosted.org/packages/7f/a7/13d56cf9466550170ce0304dac9bd60bd4ada3d5ba9943ec6cd825e81dc9/nikepysdk-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:22 2020"}