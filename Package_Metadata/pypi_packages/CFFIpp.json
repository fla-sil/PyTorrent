{"info": {"author": "Ruben De Smet", "author_email": "ruben.de.smet@rubdos.be", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: GNU General Public License (GPL)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "CFFIpp\n======\n\nCFFIpp is like [cffi](https://cffi.readthedocs.org), but\ngenerates bindings for C++, by mapping them to C through cffi.\n\nLicense\n=======\n\n    CFFIpp is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    \n    CFFIpp is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n    \n    You should have received a copy of the GNU General Public License\n    along with CFFIpp.  If not, see <http://www.gnu.org/licenses/>.\n\nExample\n=======\n\nComes straight from a unit test:\n\n```python\nffi = FFIpp()\nffi.cdef(\"\"\"\n    class testClass {\n    public:\n        testClass();\n        void test(int);\n        int returnsInt(int);\n    private:\n        void shouldNotBeInModule();\n    };\n    \"\"\")\nself.assertTrue(ffi.has_class(\"testClass\"))\n\nffi.set_source(\"example_module\", \"\"\"\n    class testClass {\n    public:\n        testClass(){}\n        void test(int){/*nop*/}\n        int returnsInt(int){return 1;}\n    private:\n        void shouldNotBeInModule() {/*nop*/}\n    };\"\"\")\nffi.compile()\nimport example_module\nc = example_module.testClass()\nself.assertEqual(c.returnsInt(5), 1)\n```\n\nCaveats\n=======\n\n1. This is experimental software;\n2. Adds a (albeit tiny) layer between Python and your C++ classes,\n    using a stupid C wrapper.\n3. No overloading support, no type conversion yet, except for the `cffi`\n    stuff.\n4. Returning C++ objects from methods will not yield Python objects yet.\n5. Will only wrap classes, not mixable with C stuff at this moment.\n6. Ironically, you probably need CPython to run this, because it relies on\n   clang bindings to proprocess C++ code.\n\nDevelopment\n===========\n\nDevelopment takes place at [my GitLab repository](https://gitlab.com/rubdos/cffipp/).\nMerge requests and issues are welcome. If you want to start hacking on this project,\nfeel free to do so. Good starting places are the TODO.md file and the caveats listed before.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/rubdos/cffipp", "keywords": null, "license": "GPLv3", "maintainer": null, "maintainer_email": null, "name": "CFFIpp", "package_url": "https://pypi.org/project/CFFIpp/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/CFFIpp/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://gitlab.com/rubdos/cffipp"}, "release_url": "https://pypi.org/project/CFFIpp/0.1.0.dev2/", "requires_dist": null, "requires_python": null, "summary": "CFFI module for calling C++ code from within Python", "version": "0.1.0.dev2", "yanked": false, "html_description": "<div class=\"project-description\">\n            CFFIpp<br>======<br><br>CFFIpp is like [cffi](https://cffi.readthedocs.org), but<br>generates bindings for C++, by mapping them to C through cffi.<br><br>License<br>=======<br><br>    CFFIpp is free software: you can redistribute it and/or modify<br>    it under the terms of the GNU General Public License as published by<br>    the Free Software Foundation, either version 3 of the License, or<br>    (at your option) any later version.<br>    <br>    CFFIpp is distributed in the hope that it will be useful,<br>    but WITHOUT ANY WARRANTY; without even the implied warranty of<br>    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<br>    GNU General Public License for more details.<br>    <br>    You should have received a copy of the GNU General Public License<br>    along with CFFIpp.  If not, see &lt;http://www.gnu.org/licenses/&gt;.<br><br>Example<br>=======<br><br>Comes straight from a unit test:<br><br>```python<br>ffi = FFIpp()<br>ffi.cdef(\"\"\"<br>    class testClass {<br>    public:<br>        testClass();<br>        void test(int);<br>        int returnsInt(int);<br>    private:<br>        void shouldNotBeInModule();<br>    };<br>    \"\"\")<br>self.assertTrue(ffi.has_class(\"testClass\"))<br><br>ffi.set_source(\"example_module\", \"\"\"<br>    class testClass {<br>    public:<br>        testClass(){}<br>        void test(int){/*nop*/}<br>        int returnsInt(int){return 1;}<br>    private:<br>        void shouldNotBeInModule() {/*nop*/}<br>    };\"\"\")<br>ffi.compile()<br>import example_module<br>c = example_module.testClass()<br>self.assertEqual(c.returnsInt(5), 1)<br>```<br><br>Caveats<br>=======<br><br>1. This is experimental software;<br>2. Adds a (albeit tiny) layer between Python and your C++ classes,<br>    using a stupid C wrapper.<br>3. No overloading support, no type conversion yet, except for the `cffi`<br>    stuff.<br>4. Returning C++ objects from methods will not yield Python objects yet.<br>5. Will only wrap classes, not mixable with C stuff at this moment.<br>6. Ironically, you probably need CPython to run this, because it relies on<br>   clang bindings to proprocess C++ code.<br><br>Development<br>===========<br><br>Development takes place at [my GitLab repository](https://gitlab.com/rubdos/cffipp/).<br>Merge requests and issues are welcome. If you want to start hacking on this project,<br>feel free to do so. Good starting places are the TODO.md file and the caveats listed before.\n          </div>"}, "last_serial": 1935471, "releases": {"0.1.0.dev1": [{"comment_text": "", "digests": {"md5": "91e64876b53c18305210940e610f91f4", "sha256": "0f122d0c3439f485e313f42fa55bdc260e3aca0fa44ebe717ecf421fff222687"}, "downloads": -1, "filename": "CFFIpp-0.1.0.dev1.tar.gz", "has_sig": false, "md5_digest": "91e64876b53c18305210940e610f91f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4794, "upload_time": "2016-02-02T11:25:00", "upload_time_iso_8601": "2016-02-02T11:25:00.112882Z", "url": "https://files.pythonhosted.org/packages/79/ca/57edf0bd95c70825fe48bfbafae0567d0c6b4b52a62a4312009f2ec1d83e/CFFIpp-0.1.0.dev1.tar.gz", "yanked": false}], "0.1.0.dev2": [{"comment_text": "", "digests": {"md5": "3075ac481c49eed9dc9f322e809c2011", "sha256": "10ba373dee964c50358f6705bbc6eb219c03abbf23afe61d23d6c9ef060822dd"}, "downloads": -1, "filename": "CFFIpp-0.1.0.dev2.tar.gz", "has_sig": false, "md5_digest": "3075ac481c49eed9dc9f322e809c2011", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4772, "upload_time": "2016-02-02T11:55:58", "upload_time_iso_8601": "2016-02-02T11:55:58.656730Z", "url": "https://files.pythonhosted.org/packages/0c/e8/955f88d220d75f4a861fe4a44d4af2d40e44487400ed5ddc81ae886f7ca3/CFFIpp-0.1.0.dev2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3075ac481c49eed9dc9f322e809c2011", "sha256": "10ba373dee964c50358f6705bbc6eb219c03abbf23afe61d23d6c9ef060822dd"}, "downloads": -1, "filename": "CFFIpp-0.1.0.dev2.tar.gz", "has_sig": false, "md5_digest": "3075ac481c49eed9dc9f322e809c2011", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4772, "upload_time": "2016-02-02T11:55:58", "upload_time_iso_8601": "2016-02-02T11:55:58.656730Z", "url": "https://files.pythonhosted.org/packages/0c/e8/955f88d220d75f4a861fe4a44d4af2d40e44487400ed5ddc81ae886f7ca3/CFFIpp-0.1.0.dev2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:40 2020"}