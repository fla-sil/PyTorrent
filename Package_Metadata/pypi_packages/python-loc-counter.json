{"info": {"author": "Bryce Vonilten", "author_email": "ki6bpd@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Build Tools"], "description": "# python-loc-counter\n\nThe python-loc-counter module was built to count various LOC metrics:\n- source_loc (Everything thats not a comment or blank line)\n- single_comment_loc (Comments with the pound key)\n- single_docstring_loc (Docstrings with single quotes)\n- double_docstring_loc (Docstrings with double quotes)\n- total_comments_loc (single_comment_loc + single_docstring_loc + double_docstring_loc)\n- blank_loc (Any whitespace designated only with string.whitespace)\n- total_line_count (Typical line count)\n\nThis uses extensive regex to try to cover weird edge cases, like comments in the middle of a src line (I recommend a quick review about how comments are decidely handled in tests/randomFile.txt). This is written entirely in python with no dependencies outside the standard library. Made to be used as a library.\n\n### Installation\nThis package is locted on [github](https://github.com/BryceV/python_loc_counter) and [pypi](https://pypi.org/project/python-loc-counter/). If you have pip installed the easiest way to install is:\n\n```sh\n$ pip install python-loc-counter\n```\n\n### Example Usage\n\n```sh\nfrom python_loc_counter import LOCCounter\n\ndef main():\n    counter = LOCCounter(<file_name>)\n    loc_data = counter.getLOC()\n    print(loc_data)\n```\n\nThis will print a dictionary that might look something like:\n```sh\n{\n    total_src_loc:1757\n    total_single_comments_loc:75\n    total_single_docstrings_loc:0\n    total_double_docstrings_loc:179\n    total_blank_loc:516\n    total_comments_loc:254\n    total_line_count:2530\n}\n```\n\n### Development\nSee a feature or found a bug? Feel free to make suggestions or (better yet) contributions for future iterations!\n   \n### Example Projects\n- Originally this module was built for: https://github.com/bcdasilv/code-style-mining/tree/python_analysis.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/BryceV/python_loc_counter/archive/v.02.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/BryceV/python_loc_counter", "keywords": "python,lines of code,loc", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "python-loc-counter", "package_url": "https://pypi.org/project/python-loc-counter/", "platform": "", "project_url": "https://pypi.org/project/python-loc-counter/", "project_urls": {"Download": "https://github.com/BryceV/python_loc_counter/archive/v.02.tar.gz", "Homepage": "https://github.com/BryceV/python_loc_counter"}, "release_url": "https://pypi.org/project/python-loc-counter/0.2/", "requires_dist": null, "requires_python": "", "summary": "Get LOC metrics for python scripts", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>python-loc-counter</h1>\n<p>The python-loc-counter module was built to count various LOC metrics:</p>\n<ul>\n<li>source_loc (Everything thats not a comment or blank line)</li>\n<li>single_comment_loc (Comments with the pound key)</li>\n<li>single_docstring_loc (Docstrings with single quotes)</li>\n<li>double_docstring_loc (Docstrings with double quotes)</li>\n<li>total_comments_loc (single_comment_loc + single_docstring_loc + double_docstring_loc)</li>\n<li>blank_loc (Any whitespace designated only with string.whitespace)</li>\n<li>total_line_count (Typical line count)</li>\n</ul>\n<p>This uses extensive regex to try to cover weird edge cases, like comments in the middle of a src line (I recommend a quick review about how comments are decidely handled in tests/randomFile.txt). This is written entirely in python with no dependencies outside the standard library. Made to be used as a library.</p>\n<h3>Installation</h3>\n<p>This package is locted on <a href=\"https://github.com/BryceV/python_loc_counter\" rel=\"nofollow\">github</a> and <a href=\"https://pypi.org/project/python-loc-counter/\" rel=\"nofollow\">pypi</a>. If you have pip installed the easiest way to install is:</p>\n<pre>$ pip install python-loc-counter\n</pre>\n<h3>Example Usage</h3>\n<pre>from python_loc_counter import LOCCounter\n\ndef main<span class=\"o\">()</span>:\n    <span class=\"nv\">counter</span> <span class=\"o\">=</span> LOCCounter<span class=\"o\">(</span>&lt;file_name&gt;<span class=\"o\">)</span>\n    <span class=\"nv\">loc_data</span> <span class=\"o\">=</span> counter.getLOC<span class=\"o\">()</span>\n    print<span class=\"o\">(</span>loc_data<span class=\"o\">)</span>\n</pre>\n<p>This will print a dictionary that might look something like:</p>\n<pre><span class=\"o\">{</span>\n    total_src_loc:1757\n    total_single_comments_loc:75\n    total_single_docstrings_loc:0\n    total_double_docstrings_loc:179\n    total_blank_loc:516\n    total_comments_loc:254\n    total_line_count:2530\n<span class=\"o\">}</span>\n</pre>\n<h3>Development</h3>\n<p>See a feature or found a bug? Feel free to make suggestions or (better yet) contributions for future iterations!</p>\n<h3>Example Projects</h3>\n<ul>\n<li>Originally this module was built for: <a href=\"https://github.com/bcdasilv/code-style-mining/tree/python_analysis\" rel=\"nofollow\">https://github.com/bcdasilv/code-style-mining/tree/python_analysis</a>.</li>\n</ul>\n\n          </div>"}, "last_serial": 6104458, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "38fbd42ee12a1420faf66570da875ded", "sha256": "0027ab8964b82b2f41ea374d11d64f1ab799329d2f39c1a4e0cfb6bad485f19b"}, "downloads": -1, "filename": "python_loc_counter-0.1.tar.gz", "has_sig": false, "md5_digest": "38fbd42ee12a1420faf66570da875ded", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2543, "upload_time": "2019-11-07T23:23:55", "upload_time_iso_8601": "2019-11-07T23:23:55.985513Z", "url": "https://files.pythonhosted.org/packages/d1/a8/6e82f7bf119215db060dec8b714def05c88278fb95c031f4c4ab06d9d564/python_loc_counter-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "065db511ad02bd971303fa9b435398f7", "sha256": "04d5b1e3998f5a1d3006d279b1bf1d12842631d73fe282cdd8da93e5a5f8950b"}, "downloads": -1, "filename": "python_loc_counter-0.2.tar.gz", "has_sig": false, "md5_digest": "065db511ad02bd971303fa9b435398f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3823, "upload_time": "2019-11-09T02:14:48", "upload_time_iso_8601": "2019-11-09T02:14:48.776996Z", "url": "https://files.pythonhosted.org/packages/93/7c/5dc2139a46728353d76a1f9044c197e1594713228723f8767017060b0f7a/python_loc_counter-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "065db511ad02bd971303fa9b435398f7", "sha256": "04d5b1e3998f5a1d3006d279b1bf1d12842631d73fe282cdd8da93e5a5f8950b"}, "downloads": -1, "filename": "python_loc_counter-0.2.tar.gz", "has_sig": false, "md5_digest": "065db511ad02bd971303fa9b435398f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3823, "upload_time": "2019-11-09T02:14:48", "upload_time_iso_8601": "2019-11-09T02:14:48.776996Z", "url": "https://files.pythonhosted.org/packages/93/7c/5dc2139a46728353d76a1f9044c197e1594713228723f8767017060b0f7a/python_loc_counter-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:45 2020"}