{"info": {"author": "Stefan Codrescu", "author_email": "stefan.codrescu@noaa.gov", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6"], "description": "NetCDF Flag Wrapper (ncflag)\n============================\n\nSo\u2026 you want to inspect CF Compliant NetCDF flag variables?\n\nCF Compliant NetCDF Flag variables are integer flags associated with, or\nhaving:\n\n-  flag_values\n-  flag_meanings\n-  flag_masks (optionally)\n\nRead the `CF Conventions on\nflags <http://cfconventions.org/Data/cf-conventions/cf-conventions-1.7/cf-conventions.html#flags>`__\nfor more information.\n\nTL;DR\n-----\n\nInstall the utility with with pip:\n\n::\n\n   pip install ncflag\n\nOn the command line, use ``ncflag``:\n\n::\n\n   Usage: ncflag [OPTIONS] NCFILE FLAG\n\n   Options:\n     -v, --version                   Show the version and exit.\n     --show_flags PATH               Print the flags this tool can inspect.\n     --use_time_var TEXT\n     -l [DEBUG|INFO|WARNING|ERROR|CRITICAL]\n                                     log level\n     --help                          Show this message and exit.\n\nNotes:\n\nUse \u2013show_flags to discover what flags in a given file can be inspected.\n\nLimitation: can only inspect flags of at most one dimension. See details\nbelow for dealing with multidimensional flags.\n\nThe nominal output with \u2013use_time_var specified is shown below. Without\nuse_time_var, the index along the dimension will be printed instead of a\niso 8601 timestamp.\n\n.. code:: text\n\n   2017-11-27T21:07:41.543778: [u'data_quality_error']\n   2017-11-27T21:07:42.543812: [u'good_data']\n   2017-11-27T21:07:43.543807: [u'good_data']\n   2017-11-27T21:07:44.543802: [u'good_data']\n\nMultidimensional Flags\n----------------------\n\nOccasionally, by some poor misfortune, you may encounter\nmultidimensional flag variables. These are currently not supported by\nthe Command Line Interface (CLI), however, the FlagWrap class can still\nbe used in code, or through an interactive (IPython) session. The\n``FlagWrap.get_flags_set_at_index`` can be passed a tuple of indicies to\nget the flags set in a multidimensional flag variable. Below is an\nexample.\n\n.. code:: python\n\n   from ncflag import FlagWrap\n   import netCDF4 as nc\n\n   with nc.Dataset(\"somenetcdf.nc\") as nc_in:\n       v = nc_in.variables[\"mutidim_variable\"]\n       print(v.shape)  # --> (2, 10), is multidim.\n       w = FlagWrap.init_from_netcdf(v)\n       print(w.get_flags_set_at_index((0, 0)))  # --> [\"good_quality_qf\"]\n\nAPI and Documentation\n---------------------\n\nTo use the FlagWrap in your own code, see the example above for\nmultidimensional flags.\n\nFor documentation, please read ``flag_wrapper.py``. It is one file and\nis documented with comprehensive docstrings. The functions are named\ndescriptively. A following functions are available from a FlagWrap\ninstance.\n\n::\n\n   - get_flag(self, flag_meaning)\n   - reduce(self, exclude_mask, axis=-1)\n   - get_flag_at_index(self, flag_meaning, i)\n   - get_flags_set_at_index(self, i, exit_on_good=False)\n   - find_flag(self, options)\n   - set_flag(self, flag_meaning, should_be_set, zero_if_unset=True)\n   - set_flag_at_index(self, flag_meaning, i)\n   - get_value_for_meaning(self, flag_meaning)\n   - get_mask_for_meaning(self, flag_meaning)\n\nTesting\n-------\n\nThere are tests, using both synthetic flags, as well as some more\nserious tests for some fairly complex \u201cin the wild\u201d flags taken from a\nsample GOES-16 EXIS-L1b-SFXR product file.\n\n``test/test_theoretical.py`` is actually a very thourough read to help\nanyone really understand what\u2019s possible and what\u2019s going on with these\nflags.\n\n--------------\n\nDeploy to pip, after testing with python2 and python3:\n\n.. code:: bash\n\n   rm -r dist/\n   python setup.py bdist_wheel --universal\n   twine upload dist/*\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/5tefan/ncflag", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ncflag", "package_url": "https://pypi.org/project/ncflag/", "platform": "", "project_url": "https://pypi.org/project/ncflag/", "project_urls": {"Homepage": "https://github.com/5tefan/ncflag"}, "release_url": "https://pypi.org/project/ncflag/0.2.6/", "requires_dist": ["Click", "numpy", "netCDF4"], "requires_python": "", "summary": "Utility and library to interface with CF-Compliant NetCDF flag variables.", "version": "0.2.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>So\u2026 you want to inspect CF Compliant NetCDF flag variables?</p>\n<p>CF Compliant NetCDF Flag variables are integer flags associated with, or\nhaving:</p>\n<ul>\n<li>flag_values</li>\n<li>flag_meanings</li>\n<li>flag_masks (optionally)</li>\n</ul>\n<p>Read the <a href=\"http://cfconventions.org/Data/cf-conventions/cf-conventions-1.7/cf-conventions.html#flags\" rel=\"nofollow\">CF Conventions on\nflags</a>\nfor more information.</p>\n<div id=\"tl-dr\">\n<h2>TL;DR</h2>\n<p>Install the utility with with pip:</p>\n<pre>pip install ncflag\n</pre>\n<p>On the command line, use <tt>ncflag</tt>:</p>\n<pre>Usage: ncflag [OPTIONS] NCFILE FLAG\n\nOptions:\n  -v, --version                   Show the version and exit.\n  --show_flags PATH               Print the flags this tool can inspect.\n  --use_time_var TEXT\n  -l [DEBUG|INFO|WARNING|ERROR|CRITICAL]\n                                  log level\n  --help                          Show this message and exit.\n</pre>\n<p>Notes:</p>\n<p>Use \u2013show_flags to discover what flags in a given file can be inspected.</p>\n<p>Limitation: can only inspect flags of at most one dimension. See details\nbelow for dealing with multidimensional flags.</p>\n<p>The nominal output with \u2013use_time_var specified is shown below. Without\nuse_time_var, the index along the dimension will be printed instead of a\niso 8601 timestamp.</p>\n<pre>2017-11-27T21:07:41.543778: [u'data_quality_error']\n2017-11-27T21:07:42.543812: [u'good_data']\n2017-11-27T21:07:43.543807: [u'good_data']\n2017-11-27T21:07:44.543802: [u'good_data']\n</pre>\n</div>\n<div id=\"multidimensional-flags\">\n<h2>Multidimensional Flags</h2>\n<p>Occasionally, by some poor misfortune, you may encounter\nmultidimensional flag variables. These are currently not supported by\nthe Command Line Interface (CLI), however, the FlagWrap class can still\nbe used in code, or through an interactive (IPython) session. The\n<tt>FlagWrap.get_flags_set_at_index</tt> can be passed a tuple of indicies to\nget the flags set in a multidimensional flag variable. Below is an\nexample.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ncflag</span> <span class=\"kn\">import</span> <span class=\"n\">FlagWrap</span>\n<span class=\"kn\">import</span> <span class=\"nn\">netCDF4</span> <span class=\"k\">as</span> <span class=\"nn\">nc</span>\n\n<span class=\"k\">with</span> <span class=\"n\">nc</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">(</span><span class=\"s2\">\"somenetcdf.nc\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">nc_in</span><span class=\"p\">:</span>\n    <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">nc_in</span><span class=\"o\">.</span><span class=\"n\">variables</span><span class=\"p\">[</span><span class=\"s2\">\"mutidim_variable\"</span><span class=\"p\">]</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>  <span class=\"c1\"># --&gt; (2, 10), is multidim.</span>\n    <span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"n\">FlagWrap</span><span class=\"o\">.</span><span class=\"n\">init_from_netcdf</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">get_flags_set_at_index</span><span class=\"p\">((</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)))</span>  <span class=\"c1\"># --&gt; [\"good_quality_qf\"]</span>\n</pre>\n</div>\n<div id=\"api-and-documentation\">\n<h2>API and Documentation</h2>\n<p>To use the FlagWrap in your own code, see the example above for\nmultidimensional flags.</p>\n<p>For documentation, please read <tt>flag_wrapper.py</tt>. It is one file and\nis documented with comprehensive docstrings. The functions are named\ndescriptively. A following functions are available from a FlagWrap\ninstance.</p>\n<pre>- get_flag(self, flag_meaning)\n- reduce(self, exclude_mask, axis=-1)\n- get_flag_at_index(self, flag_meaning, i)\n- get_flags_set_at_index(self, i, exit_on_good=False)\n- find_flag(self, options)\n- set_flag(self, flag_meaning, should_be_set, zero_if_unset=True)\n- set_flag_at_index(self, flag_meaning, i)\n- get_value_for_meaning(self, flag_meaning)\n- get_mask_for_meaning(self, flag_meaning)\n</pre>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>There are tests, using both synthetic flags, as well as some more\nserious tests for some fairly complex \u201cin the wild\u201d flags taken from a\nsample GOES-16 EXIS-L1b-SFXR product file.</p>\n<p><tt>test/test_theoretical.py</tt> is actually a very thourough read to help\nanyone really understand what\u2019s possible and what\u2019s going on with these\nflags.</p>\n<hr class=\"docutils\">\n<p>Deploy to pip, after testing with python2 and python3:</p>\n<pre>rm -r dist/\npython setup.py bdist_wheel --universal\ntwine upload dist/*\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6945737, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "dba7fc12cadebeb30b03fc9b102442f9", "sha256": "ac5a6926f431224d969931b2ded5818f18a7a0d2d4fcf9444dcc2033f58a2169"}, "downloads": -1, "filename": "ncflag-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "dba7fc12cadebeb30b03fc9b102442f9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8464, "upload_time": "2017-11-28T21:55:28", "upload_time_iso_8601": "2017-11-28T21:55:28.114061Z", "url": "https://files.pythonhosted.org/packages/fe/ef/3c4c733138f4a756bf136fe0e037e6d3396e781b5e180a2d056b9ee3c80d/ncflag-0.0.1-py2.py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "00ed2fa748dc12e294a6d973316fb157", "sha256": "adc289fccdfa08624a3a1708de3a90fc8d17e111ca5d497f1749fed3173a2439"}, "downloads": -1, "filename": "ncflag-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "00ed2fa748dc12e294a6d973316fb157", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9801, "upload_time": "2018-05-31T21:41:19", "upload_time_iso_8601": "2018-05-31T21:41:19.380441Z", "url": "https://files.pythonhosted.org/packages/1f/b6/841d0977e7691cc5ed681f6a39af4d610674e8bfbd5bf785554ae4da137c/ncflag-0.0.3-py2.py3-none-any.whl", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "87df473c479d6ed08ae7c967b916a0f5", "sha256": "7d8916f8068e02434df46ca8c325126b1626523152f3ac3117c15925b4ca3959"}, "downloads": -1, "filename": "ncflag-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "87df473c479d6ed08ae7c967b916a0f5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10156, "upload_time": "2018-06-05T18:19:31", "upload_time_iso_8601": "2018-06-05T18:19:31.222484Z", "url": "https://files.pythonhosted.org/packages/b1/e0/610e5babdd57d747edc0fb802c4180a3bd7407abee80c449d76e8b02db5e/ncflag-0.1.0-py2.py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "351360ced6f07d673b6b7e723967d24f", "sha256": "f0a4061ea1810c3b08b91d2e5c35157c5323122881691a9ae5b1480570b0a51c"}, "downloads": -1, "filename": "ncflag-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "351360ced6f07d673b6b7e723967d24f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10287, "upload_time": "2018-06-05T20:51:39", "upload_time_iso_8601": "2018-06-05T20:51:39.704718Z", "url": "https://files.pythonhosted.org/packages/ac/5e/3c4e264cd8e1e449757fe0cf345a88dfa1226ee3b6a33736b4b1914994b0/ncflag-0.1.1-py2.py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "d76ee8a243da298c93a3dbc2e26245ea", "sha256": "7c095c8ab7e25d31e31c3f828576c4339aab581b631433c606aa8ab16f9c48f9"}, "downloads": -1, "filename": "ncflag-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d76ee8a243da298c93a3dbc2e26245ea", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11068, "upload_time": "2018-09-26T23:21:19", "upload_time_iso_8601": "2018-09-26T23:21:19.494289Z", "url": "https://files.pythonhosted.org/packages/95/72/0aac12abbfcbdc779716442b17b9900c95a6a60b6471c5bdec46cdd40156/ncflag-0.2.0-py2.py3-none-any.whl", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "7e2672885416969613fc1c617cd7e324", "sha256": "23a47ed15cae318062e7b996f10ac155c1bcf3b71b2f43eb2ec38499191b058b"}, "downloads": -1, "filename": "ncflag-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7e2672885416969613fc1c617cd7e324", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8611, "upload_time": "2018-12-10T22:00:11", "upload_time_iso_8601": "2018-12-10T22:00:11.557518Z", "url": "https://files.pythonhosted.org/packages/2b/9e/38e0a02508a85654323e13b808841567410fcd18299ec2ab942c145bc0a6/ncflag-0.2.1-py2.py3-none-any.whl", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "97d8ef24d67e4f1596473fd29c07762f", "sha256": "9bf29c82d464788e89ec466ebee81353766763b5a77d574028e5a4b7b4e5b38a"}, "downloads": -1, "filename": "ncflag-0.2.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "97d8ef24d67e4f1596473fd29c07762f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8811, "upload_time": "2018-12-10T22:52:33", "upload_time_iso_8601": "2018-12-10T22:52:33.187491Z", "url": "https://files.pythonhosted.org/packages/94/ab/0100a9dc5757ebd62597cda352588dceae6d8492f1a585af6272faa5759a/ncflag-0.2.3-py2.py3-none-any.whl", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "99fcd497082a869a5d46036ffcfa6625", "sha256": "4619183da4a05fa77591a0944dc94f2cb7decd5b92b5cedb82a89b9c7347001e"}, "downloads": -1, "filename": "ncflag-0.2.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "99fcd497082a869a5d46036ffcfa6625", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9857, "upload_time": "2019-12-16T21:28:32", "upload_time_iso_8601": "2019-12-16T21:28:32.857666Z", "url": "https://files.pythonhosted.org/packages/75/4e/f62298b88b0c1fb243e3ff5cd42bb79f977112e547b590fc9216278e7971/ncflag-0.2.5-py2.py3-none-any.whl", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "59afee43be812083de47237947c452cd", "sha256": "5ed10934f0cb57ffa7fb3f72a835018b6bf637fdbf2b1b50b6f47fc287aaa949"}, "downloads": -1, "filename": "ncflag-0.2.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "59afee43be812083de47237947c452cd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9939, "upload_time": "2020-04-03T20:01:16", "upload_time_iso_8601": "2020-04-03T20:01:16.442701Z", "url": "https://files.pythonhosted.org/packages/ab/e8/073be07a2df07872b7d7fcc43bc9ea950c8c9424fa778f42c75b737ad931/ncflag-0.2.6-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "59afee43be812083de47237947c452cd", "sha256": "5ed10934f0cb57ffa7fb3f72a835018b6bf637fdbf2b1b50b6f47fc287aaa949"}, "downloads": -1, "filename": "ncflag-0.2.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "59afee43be812083de47237947c452cd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9939, "upload_time": "2020-04-03T20:01:16", "upload_time_iso_8601": "2020-04-03T20:01:16.442701Z", "url": "https://files.pythonhosted.org/packages/ab/e8/073be07a2df07872b7d7fcc43bc9ea950c8c9424fa778f42c75b737ad931/ncflag-0.2.6-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:46:48 2020"}