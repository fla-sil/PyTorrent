{"info": {"author": "Antoine Millet", "author_email": "antoine@inaps.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: No Input/Output (Daemon)", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python :: 2.6", "Topic :: System :: Monitoring", "Topic :: System :: Networking :: Monitoring", "Topic :: Utilities"], "description": "GraphIT ?\n=========\n\nGraphIT is a really simple monitoring solution. Unlike other\nsolutions like Cacti, GraphIT is very quick to setup, and very easy\nto use. On the other side, GraphIT is not designed for large monitoring\ntask, and it targets geek who want to monitor their server in a simple\nway.\n\nGraphIT is client/server based, uses SQLite as database backend and\nHTTP as transport protocol. It use REST (Representational State \nTransfer) principle to exchange data between agents and server, and\nserver and frontend. All data are formated in JSON format.\n\nAgent is a simple HTTP client that support POST request. A Python\nlibrary is provided to facilitate agents creation in Python.\n\nFrontend is a simple web page with JavaScript that queries GraphIT\nserver with Ajax. Charts are rendered with flot JS library.\n\nSetup\n=====\n\nInstallation\n------------\n\nThe installation is *really* simple, you just have to type that\ncommand (after installing setuptools package on your distro):\n\n``easy_install graphit``\n\nConfiguration\n-------------\n\nConfiguration is exclusively made with help of ``graphitd`` command\nparameters. Type ``graphitd --help`` to have a list of available\nparameters.\n\nGraphITize installation\n-----------------------\n\nGraphITize is the JavaScript/HTML frontend of GraphIT. Download from\nhttp://idevelop.org/p/graphit/downloads/ \nthe latests version of GraphITize. Uncompress it on your web server.\n\nRely on provided index.html to understand how GraphITize work (it's so\nsimple !!).\n\nYou can host GraphITize on other server than GraphIT, and even run it\non your desktop, without web server.\n\nGraphIT implement ``JSONP`` and ``OPTIONS`` http method for Ajax Cross domain.\nJSONP is used by default because OPTIONS http method is only implemented\non recent Firefox and Webkit versions. To use this latter, remove the \n\"callback\" parameter in your URL when you call ``graphitize()``.\n\nUsing Watchers\n==============\n\nWatchers are prefabricated agents for GraphIT. They are distributed with\nGraphIT.\n\nWatchers needs to be run regulary, you can use a crontask to do that, \nand you just have to choose an interval (which depend on the need of\naccuracy on the data).\n\nSome watchers need a specific execution interval. For exemple \ngraphit-vnstat is used to get network trafic speed on a specified\ninterface. If you make a \"snapshot\" of speed every five minutes, you\nwill have data that will be not representative of average speed of the\nlast five minutes, but just during watcher's execution.\n\nTo prevent this problem, vnstat is executed for a time specified by user\n(60 seconds by default), and returns trafic speed average for this time.\n\nIn this case, you CAN'T execute watcher more than one time by time\nspecified, or many watcher instance will be executed at the same \ntime.\n\nWatchers binaries starts with \"graphit-\" prefix, and are installed at\nthe same location as graphid binary.\n\nAgent creation\n==============\n\nAgent Python library is installed with server package \n(see Setup/`Installation`_). To use it, you have to import \n``GraphItAgent`` in ``graphit.client`` :\n\n>>> from graphit.client import GraphItAgent\n\nThen, you have just to instanciate it :\n\n>>> agent = GraphItAgent('http://my-graphit-server/', login='graphit', passwd='secret')\n\nFinally, to submit monitoring data use add_value method :\n\n>>> agent.add_value(set='df', feed='sda', value=42, unit='%')\n\nIt's that easy!\n\nChangelog\n=========\n\n0.6:\n - ADD: New watchers: graphit-vnstat and graphit-disk.\n - FIX: graphit-mem free information now converted in Mb\n - Code cleanup\n\n0.5:\n - This release introduce \"Watchers\". Watchers are littles scripts that\n   uses Watchers framework and allow to submit data to GraphIT daemon \n   (through Python library for GraphIT). They are somehow prefabricated \n   GraphIT agents, distributed with GraphIT, and usable with a common \n   cli interface.\n   Watchers added in this release are graphit-loadavg and graphit-mem.\n   See setup to learn how to use it.\n   More coming soon.\n\n0.4.1:\n - Bugfix release for a bug introduced in 0.4 release. Graphit will\n   now start if index already exists on database.\n - Index will be automatically added if it doesnt exists.\n\n\n0.4:\n - Graphid database now use index on it database. That really improve \n   response time on query... The modification only concerns new database \n   creation, so, to create index on old database : ``sqlite3 <path to \n   database> \"CREATE INDEX \"main\".\"idx\" ON \"monitdata\" (\"date\" DESC, \n   \"set\" ASC, \"feed\" ASC)\"`` Thanks to Thibault VINCENT for idea.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://idevelop.org/p/graphit", "keywords": "monitoring graph chart restful", "license": "GPL3", "maintainer": null, "maintainer_email": null, "name": "graphit", "package_url": "https://pypi.org/project/graphit/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/graphit/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://idevelop.org/p/graphit"}, "release_url": "https://pypi.org/project/graphit/0.6/", "requires_dist": null, "requires_python": null, "summary": "A very simple server monitoring solution.", "version": "0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"graphit\">\n<h2>GraphIT ?</h2>\n<p>GraphIT is a really simple monitoring solution. Unlike other\nsolutions like Cacti, GraphIT is very quick to setup, and very easy\nto use. On the other side, GraphIT is not designed for large monitoring\ntask, and it targets geek who want to monitor their server in a simple\nway.</p>\n<p>GraphIT is client/server based, uses SQLite as database backend and\nHTTP as transport protocol. It use REST (Representational State\nTransfer) principle to exchange data between agents and server, and\nserver and frontend. All data are formated in JSON format.</p>\n<p>Agent is a simple HTTP client that support POST request. A Python\nlibrary is provided to facilitate agents creation in Python.</p>\n<p>Frontend is a simple web page with JavaScript that queries GraphIT\nserver with Ajax. Charts are rendered with flot JS library.</p>\n</div>\n<div id=\"setup\">\n<h2>Setup</h2>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>The installation is <em>really</em> simple, you just have to type that\ncommand (after installing setuptools package on your distro):</p>\n<p><tt>easy_install graphit</tt></p>\n</div>\n<div id=\"configuration\">\n<h3>Configuration</h3>\n<p>Configuration is exclusively made with help of <tt>graphitd</tt> command\nparameters. Type <tt>graphitd <span class=\"pre\">--help</span></tt> to have a list of available\nparameters.</p>\n</div>\n<div id=\"graphitize-installation\">\n<h3>GraphITize installation</h3>\n<p>GraphITize is the JavaScript/HTML frontend of GraphIT. Download from\n<a href=\"http://idevelop.org/p/graphit/downloads/\" rel=\"nofollow\">http://idevelop.org/p/graphit/downloads/</a>\nthe latests version of GraphITize. Uncompress it on your web server.</p>\n<p>Rely on provided index.html to understand how GraphITize work (it\u2019s so\nsimple !!).</p>\n<p>You can host GraphITize on other server than GraphIT, and even run it\non your desktop, without web server.</p>\n<p>GraphIT implement <tt>JSONP</tt> and <tt>OPTIONS</tt> http method for Ajax Cross domain.\nJSONP is used by default because OPTIONS http method is only implemented\non recent Firefox and Webkit versions. To use this latter, remove the\n\u201ccallback\u201d parameter in your URL when you call <tt>graphitize()</tt>.</p>\n</div>\n</div>\n<div id=\"using-watchers\">\n<h2>Using Watchers</h2>\n<p>Watchers are prefabricated agents for GraphIT. They are distributed with\nGraphIT.</p>\n<p>Watchers needs to be run regulary, you can use a crontask to do that,\nand you just have to choose an interval (which depend on the need of\naccuracy on the data).</p>\n<p>Some watchers need a specific execution interval. For exemple\ngraphit-vnstat is used to get network trafic speed on a specified\ninterface. If you make a \u201csnapshot\u201d of speed every five minutes, you\nwill have data that will be not representative of average speed of the\nlast five minutes, but just during watcher\u2019s execution.</p>\n<p>To prevent this problem, vnstat is executed for a time specified by user\n(60 seconds by default), and returns trafic speed average for this time.</p>\n<p>In this case, you CAN\u2019T execute watcher more than one time by time\nspecified, or many watcher instance will be executed at the same\ntime.</p>\n<p>Watchers binaries starts with \u201cgraphit-\u201d prefix, and are installed at\nthe same location as graphid binary.</p>\n</div>\n<div id=\"agent-creation\">\n<h2>Agent creation</h2>\n<p>Agent Python library is installed with server package\n(see Setup/<a href=\"#installation\" rel=\"nofollow\">Installation</a>). To use it, you have to import\n<tt>GraphItAgent</tt> in <tt>graphit.client</tt> :</p>\n<pre>&gt;&gt;&gt; from graphit.client import GraphItAgent\n</pre>\n<p>Then, you have just to instanciate it :</p>\n<pre>&gt;&gt;&gt; agent = GraphItAgent('http://my-graphit-server/', login='graphit', passwd='secret')\n</pre>\n<p>Finally, to submit monitoring data use add_value method :</p>\n<pre>&gt;&gt;&gt; agent.add_value(set='df', feed='sda', value=42, unit='%')\n</pre>\n<p>It\u2019s that easy!</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<dl>\n<dt>0.6:</dt>\n<dd><ul>\n<li>ADD: New watchers: graphit-vnstat and graphit-disk.</li>\n<li>FIX: graphit-mem free information now converted in Mb</li>\n<li>Code cleanup</li>\n</ul>\n</dd>\n<dt>0.5:</dt>\n<dd><ul>\n<li>This release introduce \u201cWatchers\u201d. Watchers are littles scripts that\nuses Watchers framework and allow to submit data to GraphIT daemon\n(through Python library for GraphIT). They are somehow prefabricated\nGraphIT agents, distributed with GraphIT, and usable with a common\ncli interface.\nWatchers added in this release are graphit-loadavg and graphit-mem.\nSee setup to learn how to use it.\nMore coming soon.</li>\n</ul>\n</dd>\n<dt>0.4.1:</dt>\n<dd><ul>\n<li>Bugfix release for a bug introduced in 0.4 release. Graphit will\nnow start if index already exists on database.</li>\n<li>Index will be automatically added if it doesnt exists.</li>\n</ul>\n</dd>\n<dt>0.4:</dt>\n<dd><ul>\n<li>Graphid database now use index on it database. That really improve\nresponse time on query\u2026 The modification only concerns new database\ncreation, so, to create index on old database : <tt>sqlite3 &lt;path to\ndatabase&gt; \"CREATE INDEX <span class=\"pre\">\"main\".\"idx\"</span> ON \"monitdata\" (\"date\" DESC,\n\"set\" ASC, \"feed\" ASC)\"</tt> Thanks to Thibault VINCENT for idea.</li>\n</ul>\n</dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 792665, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "11ab5b3071e4da4610027d2cd7dfb771", "sha256": "c0faacbe4e51e9c5372745f50cf61e3042a5ca3df2e67b34470dc5f192788b9e"}, "downloads": -1, "filename": "graphit-0.3-py2.6.egg", "has_sig": false, "md5_digest": "11ab5b3071e4da4610027d2cd7dfb771", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 14333, "upload_time": "2009-10-24T11:46:57", "upload_time_iso_8601": "2009-10-24T11:46:57.192414Z", "url": "https://files.pythonhosted.org/packages/f1/19/98801366782947a63b836ddcca782e4ad6cf420ce0cec8b8b340b7183a25/graphit-0.3-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8f46d84ced6da50888d711b1989039a", "sha256": "53745d5d8052023211062c8cab1f984896d599c0091ff0f0fea5d69914f73b1a"}, "downloads": -1, "filename": "graphit-0.3.tar.gz", "has_sig": false, "md5_digest": "b8f46d84ced6da50888d711b1989039a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7145, "upload_time": "2009-10-24T11:46:56", "upload_time_iso_8601": "2009-10-24T11:46:56.608459Z", "url": "https://files.pythonhosted.org/packages/07/18/d9464dfc74fa3221d2e102259e1888abe9f30ec506ac1524253d86662e66/graphit-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "dbad751f92835e5b8d466e87e1bc299b", "sha256": "9456d15fe8717b3b28b11479470e77efb891519faf47780ef243b96cb34bdf01"}, "downloads": -1, "filename": "graphit-0.4-py2.6.egg", "has_sig": false, "md5_digest": "dbad751f92835e5b8d466e87e1bc299b", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 14570, "upload_time": "2010-01-01T17:20:47", "upload_time_iso_8601": "2010-01-01T17:20:47.385182Z", "url": "https://files.pythonhosted.org/packages/22/16/cae1012aac108a61ec10c50bbab494b2a22d50484738509bdc0af11fd893/graphit-0.4-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "23977545923a406a4c8b25581e1bd078", "sha256": "70382e85373296b4aedc38aa40e3b0a28d75eceb5e43bfb82739c2052d796cd8"}, "downloads": -1, "filename": "graphit-0.4.tar.gz", "has_sig": false, "md5_digest": "23977545923a406a4c8b25581e1bd078", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7345, "upload_time": "2010-01-01T17:20:47", "upload_time_iso_8601": "2010-01-01T17:20:47.037659Z", "url": "https://files.pythonhosted.org/packages/bb/89/13348eb0c3fd2701f691895b4dfe2e02517e0e24ad8c1ab905d721b3fa0f/graphit-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "7742ba1ba5f721c3acbd984169dd0a44", "sha256": "99cb0ad451bb77d3f84bf566eb06a958eb92c69e2509c9fa02100014e63788b8"}, "downloads": -1, "filename": "graphit-0.5-py2.6.egg", "has_sig": false, "md5_digest": "7742ba1ba5f721c3acbd984169dd0a44", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 18894, "upload_time": "2010-03-16T16:14:32", "upload_time_iso_8601": "2010-03-16T16:14:32.534437Z", "url": "https://files.pythonhosted.org/packages/8a/f5/e1cb9b6bdb4866893add93d45a7b425efc0b94c8e9c71808e8e563ae69e4/graphit-0.5-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9cfa5d749530f39f39201909dbb265a", "sha256": "70d789bf54055c16b5fd457e066cccdb226a8590863a69428fbf21a9ba425556"}, "downloads": -1, "filename": "graphit-0.5.tar.gz", "has_sig": false, "md5_digest": "d9cfa5d749530f39f39201909dbb265a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9693, "upload_time": "2010-03-16T16:14:31", "upload_time_iso_8601": "2010-03-16T16:14:31.980442Z", "url": "https://files.pythonhosted.org/packages/7f/01/2a23fb710241626ea62499dffa11f1f89044fcf7426dde9db0f8962df1d5/graphit-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "0f541d53184d4bb1034f8b8cf39f2dc6", "sha256": "113ecf4330f296e8458a589bdfd95b22483305ddd8f17587015862d1ed9a0615"}, "downloads": -1, "filename": "graphit-0.6-py2.6.egg", "has_sig": false, "md5_digest": "0f541d53184d4bb1034f8b8cf39f2dc6", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 21074, "upload_time": "2010-03-29T00:09:57", "upload_time_iso_8601": "2010-03-29T00:09:57.414686Z", "url": "https://files.pythonhosted.org/packages/37/34/e67f8b5936e8958bd3ec8e13e7132baead385fbfe7a0081a72c61d87d291/graphit-0.6-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "6450af7c3b8e185860d25439ae5fdfc4", "sha256": "baee8500c3c959ce8a663ff51fb211d65745b5d20bbbb90cd16230b51911184e"}, "downloads": -1, "filename": "graphit-0.6.tar.gz", "has_sig": false, "md5_digest": "6450af7c3b8e185860d25439ae5fdfc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10711, "upload_time": "2010-03-29T00:09:56", "upload_time_iso_8601": "2010-03-29T00:09:56.760616Z", "url": "https://files.pythonhosted.org/packages/54/fa/2c230dd476a02020797ab82b7c827f73076b98b76d8526d1358303aba3c5/graphit-0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0f541d53184d4bb1034f8b8cf39f2dc6", "sha256": "113ecf4330f296e8458a589bdfd95b22483305ddd8f17587015862d1ed9a0615"}, "downloads": -1, "filename": "graphit-0.6-py2.6.egg", "has_sig": false, "md5_digest": "0f541d53184d4bb1034f8b8cf39f2dc6", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 21074, "upload_time": "2010-03-29T00:09:57", "upload_time_iso_8601": "2010-03-29T00:09:57.414686Z", "url": "https://files.pythonhosted.org/packages/37/34/e67f8b5936e8958bd3ec8e13e7132baead385fbfe7a0081a72c61d87d291/graphit-0.6-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "6450af7c3b8e185860d25439ae5fdfc4", "sha256": "baee8500c3c959ce8a663ff51fb211d65745b5d20bbbb90cd16230b51911184e"}, "downloads": -1, "filename": "graphit-0.6.tar.gz", "has_sig": false, "md5_digest": "6450af7c3b8e185860d25439ae5fdfc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10711, "upload_time": "2010-03-29T00:09:56", "upload_time_iso_8601": "2010-03-29T00:09:56.760616Z", "url": "https://files.pythonhosted.org/packages/54/fa/2c230dd476a02020797ab82b7c827f73076b98b76d8526d1358303aba3c5/graphit-0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:39 2020"}