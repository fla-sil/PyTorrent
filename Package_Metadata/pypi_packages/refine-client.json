{"info": {"author": "Paul Makepeace", "author_email": "paulm@paulm.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing"], "description": "===================================\nGoogle Refine Python Client Library\n===================================\n\nThe Google Refine Python Client Library provides an interface to\ncommunicating with a Google Refine server.\n\nCurrently, the following API is supported:\n\n- project creation/import, deletion, export\n- facet computation\n\n  - text\n  - text filter\n  - numeric\n  - blank\n  - starred & flagged\n  - ... extensible class\n\n- 'engine': managing multiple facets and their computation results\n- sorting & reordering\n- clustering\n- transforms\n- transposes\n- single and mass edits\n- annotation (star/flag)\n- column\n\n  - move\n  - add\n  - split\n  - rename\n  - reorder\n  - remove\n\n- reconciliation\n\n  - reconciliation judgment facet\n  - guessing column type\n  - querying reconciliation services preferences\n  - perform reconciliation\n\nConfiguration\n=============\n\nBy default the Google Refine server URL is http://127.0.0.1:3333\nThe environment variables ``GOOGLE_REFINE_HOST`` and ``GOOGLE_REFINE_PORT``\nenable overriding the host & port.\n\nIn order to run all tests, a live Refine server is needed. No existing projects\nare affected.\n\nInstallation\n============\n\n(Someone with more familiarity with python's byzantine collection of installation\nframeworks is very welcome to improve/\"best practice\" all this.)\n\n#. Install dependencies, which currently is ``urllib2_file``:\n\n   ``sudo pip install -r requirements.txt``\n\n#. Ensure you have a Refine server running somewhere and, if necessary, set\n   the envvars as above.\n\n#. Run tests, build, and install:\n\n   ``python setup.py test # to do a subset, e.g., --test-suite tests.test_facet``\n\n   ``python setup.py build``\n\n   ``python setup.py install``\n\nThere is a Makefile that will do this too, and more.\n\nTODO\n====\n\nThe API so far has been filled out from building a test suite to carry out the\nactions in `David Huynh's Refine tutorial <http://davidhuynh.net/spaces/nicar2011/tutorial.pdf>`_ which while certainly showing off a\nwide range of Refine features doesn't cover the entire suite. Notable exceptions\ncurrently include:\n\n- reconciliation support is useful but not complete\n- undo/redo\n- Freebase\n- join columns\n- columns from URL\n\nContribute\n============\n\nPatches welcome! Source is at https://github.com/PaulMakepeace/refine-client-py\n\nUseful Tools\n------------\n\nOne aspect of development is watching HTTP transactions. To that end, I found\n`Fiddler <http://www.fiddler2.com/>`_ on Windows and `HTTPScoop\n<http://www.tuffcode.com/>`_ invaluable. The latter won't URL-decode nor nicely\nformat JSON but the `Online JavaScript Beautifier <http://jsbeautifier.org/>`_\nwill.\n\nCredits\n=======\n\nPaul Makepeace, author, <paulm@paulm.com>\n\nDavid Huynh, `initial cut <http://groups.google.com/group/google-refine/msg/ee29cf8d660e66a9>`_\n\n`Artfinder <http://www.artfinder.com/>`_, inspiration\n\nSome data used in the test suite has been used from publicly available sources,\n\n- louisiana-elected-officials.csv: from\n  http://www.sos.louisiana.gov/tabid/136/Default.aspx\n\n- us_economic_assistance.csv: `\"The Green Book\" <http://www.data.gov/raw/1554>`_\n\n- eli-lilly.csv: `ProPublica's \"Docs for Dollars\" <http://projects.propublica.org/docdollars/>`_ leading to a `Lilly Faculty PDF <http://www.lillyfacultyregistry.com/documents/EliLillyFacultyRegistryQ22010.pdf>`_ processed by `David Huynh's ScraperWiki script <http://scraperwiki.com/scrapers/eli-lilly-dollars-for-docs-scraper/edit/>`_", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PaulMakepeace/refine-client-py", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "refine-client", "package_url": "https://pypi.org/project/refine-client/", "platform": "Any", "project_url": "https://pypi.org/project/refine-client/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/PaulMakepeace/refine-client-py"}, "release_url": "https://pypi.org/project/refine-client/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "The Google Refine Python Client Library provides an interface to communicating with a Google Refine server.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The Google Refine Python Client Library provides an interface to\ncommunicating with a Google Refine server.</p>\n<p>Currently, the following API is supported:</p>\n<ul>\n<li>project creation/import, deletion, export</li>\n<li>facet computation<ul>\n<li>text</li>\n<li>text filter</li>\n<li>numeric</li>\n<li>blank</li>\n<li>starred &amp; flagged</li>\n<li>\u2026 extensible class</li>\n</ul>\n</li>\n<li>\u2018engine\u2019: managing multiple facets and their computation results</li>\n<li>sorting &amp; reordering</li>\n<li>clustering</li>\n<li>transforms</li>\n<li>transposes</li>\n<li>single and mass edits</li>\n<li>annotation (star/flag)</li>\n<li>column<ul>\n<li>move</li>\n<li>add</li>\n<li>split</li>\n<li>rename</li>\n<li>reorder</li>\n<li>remove</li>\n</ul>\n</li>\n<li>reconciliation<ul>\n<li>reconciliation judgment facet</li>\n<li>guessing column type</li>\n<li>querying reconciliation services preferences</li>\n<li>perform reconciliation</li>\n</ul>\n</li>\n</ul>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>By default the Google Refine server URL is <a href=\"http://127.0.0.1:3333\" rel=\"nofollow\">http://127.0.0.1:3333</a>\nThe environment variables <tt>GOOGLE_REFINE_HOST</tt> and <tt>GOOGLE_REFINE_PORT</tt>\nenable overriding the host &amp; port.</p>\n<p>In order to run all tests, a live Refine server is needed. No existing projects\nare affected.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>(Someone with more familiarity with python\u2019s byzantine collection of installation\nframeworks is very welcome to improve/\u201dbest practice\u201d all this.)</p>\n<ol>\n<li><p>Install dependencies, which currently is <tt>urllib2_file</tt>:</p>\n<p><tt>sudo pip install <span class=\"pre\">-r</span> requirements.txt</tt></p>\n</li>\n<li><p>Ensure you have a Refine server running somewhere and, if necessary, set\nthe envvars as above.</p>\n</li>\n<li><p>Run tests, build, and install:</p>\n<p><tt>python setup.py test # to do a subset, e.g., <span class=\"pre\">--test-suite</span> tests.test_facet</tt></p>\n<p><tt>python setup.py build</tt></p>\n<p><tt>python setup.py install</tt></p>\n</li>\n</ol>\n<p>There is a Makefile that will do this too, and more.</p>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<p>The API so far has been filled out from building a test suite to carry out the\nactions in <a href=\"http://davidhuynh.net/spaces/nicar2011/tutorial.pdf\" rel=\"nofollow\">David Huynh\u2019s Refine tutorial</a> which while certainly showing off a\nwide range of Refine features doesn\u2019t cover the entire suite. Notable exceptions\ncurrently include:</p>\n<ul>\n<li>reconciliation support is useful but not complete</li>\n<li>undo/redo</li>\n<li>Freebase</li>\n<li>join columns</li>\n<li>columns from URL</li>\n</ul>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<p>Patches welcome! Source is at <a href=\"https://github.com/PaulMakepeace/refine-client-py\" rel=\"nofollow\">https://github.com/PaulMakepeace/refine-client-py</a></p>\n<div id=\"useful-tools\">\n<h3>Useful Tools</h3>\n<p>One aspect of development is watching HTTP transactions. To that end, I found\n<a href=\"http://www.fiddler2.com/\" rel=\"nofollow\">Fiddler</a> on Windows and <a href=\"http://www.tuffcode.com/\" rel=\"nofollow\">HTTPScoop</a> invaluable. The latter won\u2019t URL-decode nor nicely\nformat JSON but the <a href=\"http://jsbeautifier.org/\" rel=\"nofollow\">Online JavaScript Beautifier</a>\nwill.</p>\n</div>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Paul Makepeace, author, &lt;<a href=\"mailto:paulm%40paulm.com\">paulm<span>@</span>paulm<span>.</span>com</a>&gt;</p>\n<p>David Huynh, <a href=\"http://groups.google.com/group/google-refine/msg/ee29cf8d660e66a9\" rel=\"nofollow\">initial cut</a></p>\n<p><a href=\"http://www.artfinder.com/\" rel=\"nofollow\">Artfinder</a>, inspiration</p>\n<p>Some data used in the test suite has been used from publicly available sources,</p>\n<ul>\n<li>louisiana-elected-officials.csv: from\n<a href=\"http://www.sos.louisiana.gov/tabid/136/Default.aspx\" rel=\"nofollow\">http://www.sos.louisiana.gov/tabid/136/Default.aspx</a></li>\n<li>us_economic_assistance.csv: <a href=\"http://www.data.gov/raw/1554\" rel=\"nofollow\">\u201cThe Green Book\u201d</a></li>\n<li>eli-lilly.csv: <a href=\"http://projects.propublica.org/docdollars/\" rel=\"nofollow\">ProPublica\u2019s \u201cDocs for Dollars\u201d</a> leading to a <a href=\"http://www.lillyfacultyregistry.com/documents/EliLillyFacultyRegistryQ22010.pdf\" rel=\"nofollow\">Lilly Faculty PDF</a> processed by <a href=\"http://scraperwiki.com/scrapers/eli-lilly-dollars-for-docs-scraper/edit/\" rel=\"nofollow\">David Huynh\u2019s ScraperWiki script</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 798742, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "fe917131ecbfc93703af4cc77193b883", "sha256": "e1e079f6675ca99d36dda2f3a25017b31fcc3c1dada546de6845e926a9af7621"}, "downloads": -1, "filename": "refine-client-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fe917131ecbfc93703af4cc77193b883", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 540394, "upload_time": "2011-05-01T21:39:24", "upload_time_iso_8601": "2011-05-01T21:39:24.738470Z", "url": "https://files.pythonhosted.org/packages/f4/ec/987c6bfc59c9a8de5ae5647c0a4e16944f233173bece4d5f3007caf33822/refine-client-0.1.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "901820ddec5afb06959029bfd680b97a", "sha256": "05f82b559b060cc00634423fb5767153aa803bdec3f3e4f769f0442b305e6280"}, "downloads": -1, "filename": "refine-client-0.2.1.tar.gz", "has_sig": false, "md5_digest": "901820ddec5afb06959029bfd680b97a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 550920, "upload_time": "2011-07-22T12:55:44", "upload_time_iso_8601": "2011-07-22T12:55:44.923782Z", "url": "https://files.pythonhosted.org/packages/1e/cc/b5df9928f76fdf13371b4a8ba89c6d44d9ea9c9af96add379971bed8a912/refine-client-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "901820ddec5afb06959029bfd680b97a", "sha256": "05f82b559b060cc00634423fb5767153aa803bdec3f3e4f769f0442b305e6280"}, "downloads": -1, "filename": "refine-client-0.2.1.tar.gz", "has_sig": false, "md5_digest": "901820ddec5afb06959029bfd680b97a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 550920, "upload_time": "2011-07-22T12:55:44", "upload_time_iso_8601": "2011-07-22T12:55:44.923782Z", "url": "https://files.pythonhosted.org/packages/1e/cc/b5df9928f76fdf13371b4a8ba89c6d44d9ea9c9af96add379971bed8a912/refine-client-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:25 2020"}