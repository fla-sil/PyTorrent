{"info": {"author": "Marian Steinbach", "author_email": "marian@sendung.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Environment :: Web Environment", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Information Technology", "Intended Audience :: Manufacturing", "Intended Audience :: Science/Research", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: MacOS", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Topic :: Communications", "Topic :: Database", "Topic :: Internet", "Topic :: Scientific/Engineering :: Atmospheric Science", "Topic :: Scientific/Engineering :: GIS", "Topic :: Scientific/Engineering :: Human Machine Interfaces", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator", "Topic :: Scientific/Engineering :: Visualization", "Topic :: Software Development :: Libraries", "Topic :: System :: Archiving", "Topic :: Text Processing", "Topic :: Utilities"], "description": ".. image:: https://img.shields.io/badge/Python-2.7-green.svg\n    :target: https://github.com/hiveeyes/dwdweather2\n\n.. image:: https://img.shields.io/pypi/v/dwdweather2.svg\n    :target: https://pypi.org/project/dwdweather2/\n\n.. image:: https://img.shields.io/github/tag/hiveeyes/dwdweather2.svg\n    :target: https://github.com/hiveeyes/dwdweather2\n\n.. image:: https://assets.okfn.org/images/ok_buttons/od_80x15_red_green.png\n    :target: https://okfn.org/opendata/\n\n.. image:: https://assets.okfn.org/images/ok_buttons/oc_80x15_blue.png\n    :target: https://okfn.org/opendata/\n\n.. image:: https://assets.okfn.org/images/ok_buttons/os_80x15_orange_grey.png\n    :target: https://okfn.org/opendata/\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/python/black\n\n\n.. _dwdweather2-readme:\n\n###########\ndwdweather2\n###########\n\nPython client to access weather data from Deutscher Wetterdienst\n(`DWD <https://www.dwd.de/>`__), the federal meteorological service in\nGermany.\n\n************\nInstallation\n************\n::\n\n   pip install dwdweather2\n\n\n********\nSynopsis\n********\n\nCommand line usage\n==================\n\nGet all stations with ``hourly`` resolution (default)::\n\n    dwdweather stations\n\nGet all stations with ``10_minutes`` resolution::\n\n    dwdweather stations --resolution 10_minutes\n\nGet closest station (first argument is longitude, second is latitude)::\n\n    dwdweather station 7.0 51.0\n\nExport stations as CSV::\n\n    dwdweather stations --type csv --file stations.csv\n\nExport stations as GeoJSON::\n\n    dwdweather stations --type geojson --file stations.geojson\n\nGet weather at station for certain hour (UTC)::\n\n    dwdweather weather 2667 2019-06-01T15:00\n\nTo restrict the import to specified categories, run the program like::\n\n    dwdweather weather 2667 2019-06-01T15:00 --categories air_temperature precipitation pressure\n\nFinally, to drop the cache database before performing any work, use the ``--reset-cache`` option::\n\n    dwdweather stations --reset-cache\n\nChoose dataset with ``10_minutes`` resolution::\n\n    dwdweather weather 2667 2019-06-01T15:20 --resolution=10_minutes\n\n\nUsage as library\n================\n\n.. code:: python\n\n   from datetime import datetime\n   from dwdweather import DwdWeather\n\n   # Create client object.\n   dw = DwdWeather(resolution=\"hourly\")\n\n   # Find closest station to position.\n   closest = dw.nearest_station(lon=7.0, lat=51.0)\n\n   # The hour you're interested in.\n   # The example is 2014-03-22 12:00 (UTC).\n   query_hour = datetime(2014, 3, 22, 12)\n\n   result = dw.query(station_id=closest[\"station_id\"], timestamp=query_hour)\n   print(result)\n\n``DwdWeather.query()`` returns a dictionary with the full set of\npossible keys as outlined in ``doc/usage-library.rst``.\n\n\n*****\nNotes\n*****\n\n-  Data is cached in a local sqlite3 database to improve query\n   performance for consecutive invocations.\n-  The \"stations cache\" is filled upon first request to\n   ``DwdWeather.stations()`` or ``DwdWeather.nearest_station()``\n-  The \"stations cache\" will not be refreshed automatically. Use\n   ``DwdWeather.import_stations()`` to do this.\n-  The \"measures cache\" is filled upon first access to measures using\n   ``DwdWeather.query()`` and updated whenever a query cannot be\n   fulfilled from the cache.\n-  The cache by default resides in the ``~/.dwd-weather`` directory.\n   This can be controlled using the ``cachepath`` argument of\n   ``DwdWeather()``.\n-  The amount of data can be ~60 MB per station for full historic extent\n   and will obviously increase by time.\n-  If weather data is queried and the query can't be fulfilled from the\n   cache, data is loaded from the server - even if the data has been\n   updated a second before. If the server doesn't have data for the\n   requested time (e.g.\u00a0since it's not yet available), this\n   unnecessarily causes network traffic and wait time. Certainly space\n   for improvement here.\n\n\n********\nLicenses\n********\n\nCode license\n============\nLicensed under the MIT license. See file ``LICENSE`` for details.\n\nData license\n============\nThe DWD has information about their re-use policy in\n`German <https://www.dwd.de/DE/service/copyright/copyright_node.html>`__\nand\n`English <https://www.dwd.de/EN/service/copyright/copyright_node.html>`__.\n\n\n******\nStatus\n******\nThis piece of software is in a very early stage. No test cases yet. Only\ntested with Python 3.6. Use at your own risk.\n\nCredits\n=======\nThanks to `Marian Steinbach <https://github.com/marians>`__, `Philipp\nKlaus <https://github.com/pklaus>`__ and all people from\n`DWD <https://www.dwd.de/>`__.\n\nChangelog\n=========\nSee file ``CHANGES.rst``.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hiveeyes/dwdweather2", "keywords": "dwd cdc deutscher wetterdienst climate data center weather opendata data acquisition transformation export geospatial temporal timeseries sensor network observation http rest api json csvrdbms sql sqlite grafana", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "dwdweather2", "package_url": "https://pypi.org/project/dwdweather2/", "platform": "", "project_url": "https://pypi.org/project/dwdweather2/", "project_urls": {"Homepage": "https://github.com/hiveeyes/dwdweather2"}, "release_url": "https://pypi.org/project/dwdweather2/0.12.0/", "requires_dist": null, "requires_python": "", "summary": "Python client to access weather data from Deutscher Wetterdienst (DWD), the federal meteorological service in Germany.", "version": "0.12.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://github.com/hiveeyes/dwdweather2\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Python-2.7-green.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/abdedf5af7ee8678d2105b127747d1385b196df2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f507974686f6e2d322e372d677265656e2e737667\"></a>\n<a href=\"https://pypi.org/project/dwdweather2/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/dwdweather2.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/caa74a5b3d1a7f1d493b42bcc18e61e47a35d373/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f64776477656174686572322e737667\"></a>\n<a href=\"https://github.com/hiveeyes/dwdweather2\" rel=\"nofollow\"><img alt=\"https://img.shields.io/github/tag/hiveeyes/dwdweather2.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/12027393629fcad61672264436bf8404015367e6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f68697665657965732f64776477656174686572322e737667\"></a>\n<a href=\"https://okfn.org/opendata/\" rel=\"nofollow\"><img alt=\"https://assets.okfn.org/images/ok_buttons/od_80x15_red_green.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/26b271346fd63a2f0f6cebedcb9b441bf81042f2/68747470733a2f2f6173736574732e6f6b666e2e6f72672f696d616765732f6f6b5f627574746f6e732f6f645f38307831355f7265645f677265656e2e706e67\"></a>\n<a href=\"https://okfn.org/opendata/\" rel=\"nofollow\"><img alt=\"https://assets.okfn.org/images/ok_buttons/oc_80x15_blue.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5892a3b588d3344e47ccb5586e514e886804a601/68747470733a2f2f6173736574732e6f6b666e2e6f72672f696d616765732f6f6b5f627574746f6e732f6f635f38307831355f626c75652e706e67\"></a>\n<a href=\"https://okfn.org/opendata/\" rel=\"nofollow\"><img alt=\"https://assets.okfn.org/images/ok_buttons/os_80x15_orange_grey.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/281e8ffef33ab1cdef44c543030dd1a1cd40a44e/68747470733a2f2f6173736574732e6f6b666e2e6f72672f696d616765732f6f6b5f627574746f6e732f6f735f38307831355f6f72616e67655f677265792e706e67\"></a>\n<a href=\"https://github.com/python/black\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/code%20style-black-000000.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<div id=\"dwdweather2\">\n<span id=\"dwdweather2-readme\"></span><h2>dwdweather2</h2>\n<p>Python client to access weather data from Deutscher Wetterdienst\n(<a href=\"https://www.dwd.de/\" rel=\"nofollow\">DWD</a>), the federal meteorological service in\nGermany.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>pip install dwdweather2\n</pre>\n</div>\n<div id=\"synopsis\">\n<h3>Synopsis</h3>\n<div id=\"command-line-usage\">\n<h4>Command line usage</h4>\n<p>Get all stations with <tt>hourly</tt> resolution (default):</p>\n<pre>dwdweather stations\n</pre>\n<p>Get all stations with <tt>10_minutes</tt> resolution:</p>\n<pre>dwdweather stations --resolution 10_minutes\n</pre>\n<p>Get closest station (first argument is longitude, second is latitude):</p>\n<pre>dwdweather station 7.0 51.0\n</pre>\n<p>Export stations as CSV:</p>\n<pre>dwdweather stations --type csv --file stations.csv\n</pre>\n<p>Export stations as GeoJSON:</p>\n<pre>dwdweather stations --type geojson --file stations.geojson\n</pre>\n<p>Get weather at station for certain hour (UTC):</p>\n<pre>dwdweather weather 2667 2019-06-01T15:00\n</pre>\n<p>To restrict the import to specified categories, run the program like:</p>\n<pre>dwdweather weather 2667 2019-06-01T15:00 --categories air_temperature precipitation pressure\n</pre>\n<p>Finally, to drop the cache database before performing any work, use the <tt><span class=\"pre\">--reset-cache</span></tt> option:</p>\n<pre>dwdweather stations --reset-cache\n</pre>\n<p>Choose dataset with <tt>10_minutes</tt> resolution:</p>\n<pre>dwdweather weather 2667 2019-06-01T15:20 --resolution=10_minutes\n</pre>\n</div>\n<div id=\"usage-as-library\">\n<h4>Usage as library</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dwdweather</span> <span class=\"kn\">import</span> <span class=\"n\">DwdWeather</span>\n\n<span class=\"c1\"># Create client object.</span>\n<span class=\"n\">dw</span> <span class=\"o\">=</span> <span class=\"n\">DwdWeather</span><span class=\"p\">(</span><span class=\"n\">resolution</span><span class=\"o\">=</span><span class=\"s2\">\"hourly\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Find closest station to position.</span>\n<span class=\"n\">closest</span> <span class=\"o\">=</span> <span class=\"n\">dw</span><span class=\"o\">.</span><span class=\"n\">nearest_station</span><span class=\"p\">(</span><span class=\"n\">lon</span><span class=\"o\">=</span><span class=\"mf\">7.0</span><span class=\"p\">,</span> <span class=\"n\">lat</span><span class=\"o\">=</span><span class=\"mf\">51.0</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># The hour you're interested in.</span>\n<span class=\"c1\"># The example is 2014-03-22 12:00 (UTC).</span>\n<span class=\"n\">query_hour</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2014</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">22</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">)</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">dw</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">station_id</span><span class=\"o\">=</span><span class=\"n\">closest</span><span class=\"p\">[</span><span class=\"s2\">\"station_id\"</span><span class=\"p\">],</span> <span class=\"n\">timestamp</span><span class=\"o\">=</span><span class=\"n\">query_hour</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n</pre>\n<p><tt>DwdWeather.query()</tt> returns a dictionary with the full set of\npossible keys as outlined in <tt><span class=\"pre\">doc/usage-library.rst</span></tt>.</p>\n</div>\n</div>\n<div id=\"notes\">\n<h3>Notes</h3>\n<ul>\n<li>Data is cached in a local sqlite3 database to improve query\nperformance for consecutive invocations.</li>\n<li>The \u201cstations cache\u201d is filled upon first request to\n<tt>DwdWeather.stations()</tt> or <tt>DwdWeather.nearest_station()</tt></li>\n<li>The \u201cstations cache\u201d will not be refreshed automatically. Use\n<tt>DwdWeather.import_stations()</tt> to do this.</li>\n<li>The \u201cmeasures cache\u201d is filled upon first access to measures using\n<tt>DwdWeather.query()</tt> and updated whenever a query cannot be\nfulfilled from the cache.</li>\n<li>The cache by default resides in the <tt><span class=\"pre\">~/.dwd-weather</span></tt> directory.\nThis can be controlled using the <tt>cachepath</tt> argument of\n<tt>DwdWeather()</tt>.</li>\n<li>The amount of data can be ~60 MB per station for full historic extent\nand will obviously increase by time.</li>\n<li>If weather data is queried and the query can\u2019t be fulfilled from the\ncache, data is loaded from the server - even if the data has been\nupdated a second before. If the server doesn\u2019t have data for the\nrequested time (e.g.\u00a0since it\u2019s not yet available), this\nunnecessarily causes network traffic and wait time. Certainly space\nfor improvement here.</li>\n</ul>\n</div>\n<div id=\"licenses\">\n<h3>Licenses</h3>\n<div id=\"code-license\">\n<h4>Code license</h4>\n<p>Licensed under the MIT license. See file <tt>LICENSE</tt> for details.</p>\n</div>\n<div id=\"data-license\">\n<h4>Data license</h4>\n<p>The DWD has information about their re-use policy in\n<a href=\"https://www.dwd.de/DE/service/copyright/copyright_node.html\" rel=\"nofollow\">German</a>\nand\n<a href=\"https://www.dwd.de/EN/service/copyright/copyright_node.html\" rel=\"nofollow\">English</a>.</p>\n</div>\n</div>\n<div id=\"status\">\n<h3>Status</h3>\n<p>This piece of software is in a very early stage. No test cases yet. Only\ntested with Python 3.6. Use at your own risk.</p>\n<div id=\"credits\">\n<h4>Credits</h4>\n<p>Thanks to <a href=\"https://github.com/marians\" rel=\"nofollow\">Marian Steinbach</a>, <a href=\"https://github.com/pklaus\" rel=\"nofollow\">Philipp\nKlaus</a> and all people from\n<a href=\"https://www.dwd.de/\" rel=\"nofollow\">DWD</a>.</p>\n</div>\n<div id=\"changelog\">\n<h4>Changelog</h4>\n<p>See file <tt>CHANGES.rst</tt>.</p>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6864756, "releases": {"0.10.0": [{"comment_text": "", "digests": {"md5": "a01f818ef816d8f05c701c40d737b486", "sha256": "bd54cf2e1f570fde6dccdf449115edb83fdf54935467fde244b861fe9eee13dc"}, "downloads": -1, "filename": "dwdweather2-0.10.0.tar.gz", "has_sig": false, "md5_digest": "a01f818ef816d8f05c701c40d737b486", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18272, "upload_time": "2019-09-30T22:37:32", "upload_time_iso_8601": "2019-09-30T22:37:32.346779Z", "url": "https://files.pythonhosted.org/packages/e9/83/61099b2f85865905c7c2e1c0ff24611e10e77e73313a1755c9bca36159ef/dwdweather2-0.10.0.tar.gz", "yanked": false}], "0.11.0": [{"comment_text": "", "digests": {"md5": "fe94f03d4daf6247be5f091866c1ec90", "sha256": "bf4af9a79eb0bd6e0b0f3fb5aa243824459b2eaf8e9114f47cef0475c67ac839"}, "downloads": -1, "filename": "dwdweather2-0.11.0.tar.gz", "has_sig": false, "md5_digest": "fe94f03d4daf6247be5f091866c1ec90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18842, "upload_time": "2019-11-04T17:15:12", "upload_time_iso_8601": "2019-11-04T17:15:12.849340Z", "url": "https://files.pythonhosted.org/packages/de/a5/a1b84a62361b1888bf6ff96b4a1a274e6165975c5971440892c0616a6c81/dwdweather2-0.11.0.tar.gz", "yanked": false}], "0.11.1": [{"comment_text": "", "digests": {"md5": "48eafcee09863899dbbeb38ee34b4c7d", "sha256": "bd4a40b8bb83e7f1b5804132c8b91262fc173e034a814708e45ad7569eeb9c14"}, "downloads": -1, "filename": "dwdweather2-0.11.1.tar.gz", "has_sig": false, "md5_digest": "48eafcee09863899dbbeb38ee34b4c7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19008, "upload_time": "2019-11-04T17:34:34", "upload_time_iso_8601": "2019-11-04T17:34:34.215822Z", "url": "https://files.pythonhosted.org/packages/64/1b/8386ed02361410db4074008c8aae257713b52faba1c16279ebb4ede75d64/dwdweather2-0.11.1.tar.gz", "yanked": false}], "0.12.0": [{"comment_text": "", "digests": {"md5": "960e26ba850d1bfd723253e4348ec9cb", "sha256": "9678ff5fe58c0741a88cafb86e6476741775a1d779199fc21b72825968df7dc0"}, "downloads": -1, "filename": "dwdweather2-0.12.0.tar.gz", "has_sig": false, "md5_digest": "960e26ba850d1bfd723253e4348ec9cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19170, "upload_time": "2020-03-23T10:53:33", "upload_time_iso_8601": "2020-03-23T10:53:33.566578Z", "url": "https://files.pythonhosted.org/packages/68/fb/431b6a9e3de543c13e8ff128a05bce82365fb720aaf26cc8cebadcbbcf14/dwdweather2-0.12.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "6d3de4a8ed0d09753cfa2db44a5060be", "sha256": "faa7e7e6e915459e34f2e7463b17ee989d6ec57b0d8f6dc5b0e513f41d5d9c44"}, "downloads": -1, "filename": "dwdweather2-0.8.0.tar.gz", "has_sig": false, "md5_digest": "6d3de4a8ed0d09753cfa2db44a5060be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17506, "upload_time": "2019-06-03T01:25:47", "upload_time_iso_8601": "2019-06-03T01:25:47.093409Z", "url": "https://files.pythonhosted.org/packages/b9/0c/fb48f9e43f263a493f0a5e13d00bbe6ca0a31d11958b444836d218951a25/dwdweather2-0.8.0.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "9aefd01c0f5aee0ec731f8ebb3b05ee0", "sha256": "6d58750ff5d617b2e52f31dd56a997ad776e9471ce4ffb985d9195ad9b75222b"}, "downloads": -1, "filename": "dwdweather2-0.8.2.tar.gz", "has_sig": false, "md5_digest": "9aefd01c0f5aee0ec731f8ebb3b05ee0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17929, "upload_time": "2019-06-03T19:42:05", "upload_time_iso_8601": "2019-06-03T19:42:05.679327Z", "url": "https://files.pythonhosted.org/packages/33/02/7b08967b6ff9d8360e2fc1234ef860f70e858a7fc4cc9b09dcf3d189b992/dwdweather2-0.8.2.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "7c93704927352d720f654d57f8adcfd1", "sha256": "22be3b9d6466560f5edfda2ff3142367823e6e07b53c96816439aa4a1ba838a5"}, "downloads": -1, "filename": "dwdweather2-0.9.0.tar.gz", "has_sig": false, "md5_digest": "7c93704927352d720f654d57f8adcfd1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17834, "upload_time": "2019-06-27T01:20:36", "upload_time_iso_8601": "2019-06-27T01:20:36.764333Z", "url": "https://files.pythonhosted.org/packages/9c/c5/44867309d2baa85c8fc12a7216a941597848e4efeab1e060c9fd38af3296/dwdweather2-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "960e26ba850d1bfd723253e4348ec9cb", "sha256": "9678ff5fe58c0741a88cafb86e6476741775a1d779199fc21b72825968df7dc0"}, "downloads": -1, "filename": "dwdweather2-0.12.0.tar.gz", "has_sig": false, "md5_digest": "960e26ba850d1bfd723253e4348ec9cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19170, "upload_time": "2020-03-23T10:53:33", "upload_time_iso_8601": "2020-03-23T10:53:33.566578Z", "url": "https://files.pythonhosted.org/packages/68/fb/431b6a9e3de543c13e8ff128a05bce82365fb720aaf26cc8cebadcbbcf14/dwdweather2-0.12.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:51 2020"}