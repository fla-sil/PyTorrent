{"info": {"author": "Eugene Kalinin", "author_email": "e.v.kalinin@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "marktime.py\n===========\n\nSimple python module for mark time.\n\nInspired by two functions from node.js:\n\n  * `console.time <http://nodejs.org/api/all.html#all_console_time_label>`_\n  * `console.timeEnd <http://nodejs.org/api/all.html#all_console_timeend_label>`_\n\nMain features:\n\n  * easy to use\n  * no external dependencies\n  * 100% test coverage\n  * works with Python 2.7 and 3.3\n\n\nUsage\n-----\n\n.. code-block:: bash\n\n    $ pip install marktime\n\n.. code-block:: python\n\n    import marktime\n\n    marktime.start('some task')\n    marktime.start('some another task')\n\n    marktime.stop('some task')\n    8.757422924041748\n\n    marktime.stop('some another task').seconds\n    14.805735111236572\n\n    marktime.duration('some another task').msecs\n    14805.735111236572\n\n    marktime.start('some task # 3')\n\n    with marktime.stopwatch('some task # 4'):\n        marktime.time.sleep(1)\n\n    import json\n    print json.dumps(marktime.labels, indent=4)\n    {\n        \"some another task\": {\n            \"duration\": 14.805735111236572,\n            \"start_time\": 1370453758.064955,\n            \"end_time\": 1370453772.87069\n        },\n        \"some task # 3\": {\n            \"start_time\": 1370453892.025603,\n            \"end_time\": None\n        },\n        \"some task # 4\": {\n            \"duration\": 1.00120210647583,\n            \"start_time\": 1370638027.000799,\n            \"end_time\": 1370638028.002001\n        },\n        \"some task\": {\n            \"duration\": 8.757422924041748,\n            \"start_time\": 1370453753.185846,\n            \"end_time\": 1370453761.943269\n        }\n    }\n\n\nAPI\n---\n\n* **marktime.start** (label, at=None)\n\n  * ``label`` \u2014 marker label. String. Required.\n  * ``at`` \u2014 time to start the countdown. If ``None`` then uses ``time.time()``.\n\n* **marktime.stop** (label, remove_from_labels=False, stop_once=True)\n\n  * ``label`` \u2014 marker label. String. Required.\n  * ``at`` \u2014 time to stop the countdown. If ``None`` then uses ``time.time()``\n  * ``remove_from_labels`` \u2014 if ``True`` then ``label`` removed from global\n    dict ``marktime.labels``.\n  * ``stop_once`` \u2014 if ``False`` and the countdown for the certain ``label``\n    is allready stopped thet it stopped it again. And thereafter the duration\n    for the certain ``label`` will be increased. \n\n* **marktime.duration** (label, stop_it=True, stop_at=None)\n\n  * ``label`` \u2014 marker label. String. Required.\n  * ``stop_it`` \u2014 if ``True`` then the countdown for the certain ``label``\n    will be stopped. If ``False`` and the countdown for the certain ``label``\n    is not stopped then returns ``None``.\n  * ``stop_at`` \u2014 passed into ``stop`` function if ``stop_it`` == ``True``\n\n* **marktime.stopwatch** (label) \u2014 context manager (``with`` statement support)\n\n* **marktime.labels** \u2014 global ``dict`` that stores all the labels for time markers.\n\n\nLicense\n-------\n\nSee `LICENSE <https://github.com/ekalinin/marktime.py/blob/master/LICENSE>`_\nfile.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ekalinin/marktime.py", "keywords": "timer,stopwatch,time", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "marktime", "package_url": "https://pypi.org/project/marktime/", "platform": "any", "project_url": "https://pypi.org/project/marktime/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ekalinin/marktime.py"}, "release_url": "https://pypi.org/project/marktime/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "Python timer module for humans.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Simple python module for mark time.</p>\n<p>Inspired by two functions from node.js:</p>\n<blockquote>\n<ul>\n<li><a href=\"http://nodejs.org/api/all.html#all_console_time_label\" rel=\"nofollow\">console.time</a></li>\n<li><a href=\"http://nodejs.org/api/all.html#all_console_timeend_label\" rel=\"nofollow\">console.timeEnd</a></li>\n</ul>\n</blockquote>\n<p>Main features:</p>\n<blockquote>\n<ul>\n<li>easy to use</li>\n<li>no external dependencies</li>\n<li>100% test coverage</li>\n<li>works with Python 2.7 and 3.3</li>\n</ul>\n</blockquote>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>$ pip install marktime\n</pre>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">marktime</span>\n\n<span class=\"n\">marktime</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"s1\">'some task'</span><span class=\"p\">)</span>\n<span class=\"n\">marktime</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"s1\">'some another task'</span><span class=\"p\">)</span>\n\n<span class=\"n\">marktime</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">(</span><span class=\"s1\">'some task'</span><span class=\"p\">)</span>\n<span class=\"mf\">8.757422924041748</span>\n\n<span class=\"n\">marktime</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">(</span><span class=\"s1\">'some another task'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">seconds</span>\n<span class=\"mf\">14.805735111236572</span>\n\n<span class=\"n\">marktime</span><span class=\"o\">.</span><span class=\"n\">duration</span><span class=\"p\">(</span><span class=\"s1\">'some another task'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">msecs</span>\n<span class=\"mf\">14805.735111236572</span>\n\n<span class=\"n\">marktime</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"s1\">'some task # 3'</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">marktime</span><span class=\"o\">.</span><span class=\"n\">stopwatch</span><span class=\"p\">(</span><span class=\"s1\">'some task # 4'</span><span class=\"p\">):</span>\n    <span class=\"n\">marktime</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"nb\">print</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">marktime</span><span class=\"o\">.</span><span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n    <span class=\"s2\">\"some another task\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"duration\"</span><span class=\"p\">:</span> <span class=\"mf\">14.805735111236572</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"start_time\"</span><span class=\"p\">:</span> <span class=\"mf\">1370453758.064955</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"end_time\"</span><span class=\"p\">:</span> <span class=\"mf\">1370453772.87069</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"some task # 3\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"start_time\"</span><span class=\"p\">:</span> <span class=\"mf\">1370453892.025603</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"end_time\"</span><span class=\"p\">:</span> <span class=\"kc\">None</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"some task # 4\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"duration\"</span><span class=\"p\">:</span> <span class=\"mf\">1.00120210647583</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"start_time\"</span><span class=\"p\">:</span> <span class=\"mf\">1370638027.000799</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"end_time\"</span><span class=\"p\">:</span> <span class=\"mf\">1370638028.002001</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"some task\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"duration\"</span><span class=\"p\">:</span> <span class=\"mf\">8.757422924041748</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"start_time\"</span><span class=\"p\">:</span> <span class=\"mf\">1370453753.185846</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"end_time\"</span><span class=\"p\">:</span> <span class=\"mf\">1370453761.943269</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"api\">\n<h2>API</h2>\n<ul>\n<li><strong>marktime.start</strong> (label, at=None)<ul>\n<li><tt>label</tt> \u2014 marker label. String. Required.</li>\n<li><tt>at</tt> \u2014 time to start the countdown. If <tt>None</tt> then uses <tt>time.time()</tt>.</li>\n</ul>\n</li>\n<li><strong>marktime.stop</strong> (label, remove_from_labels=False, stop_once=True)<ul>\n<li><tt>label</tt> \u2014 marker label. String. Required.</li>\n<li><tt>at</tt> \u2014 time to stop the countdown. If <tt>None</tt> then uses <tt>time.time()</tt></li>\n<li><tt>remove_from_labels</tt> \u2014 if <tt>True</tt> then <tt>label</tt> removed from global\ndict <tt>marktime.labels</tt>.</li>\n<li><tt>stop_once</tt> \u2014 if <tt>False</tt> and the countdown for the certain <tt>label</tt>\nis allready stopped thet it stopped it again. And thereafter the duration\nfor the certain <tt>label</tt> will be increased.</li>\n</ul>\n</li>\n<li><strong>marktime.duration</strong> (label, stop_it=True, stop_at=None)<ul>\n<li><tt>label</tt> \u2014 marker label. String. Required.</li>\n<li><tt>stop_it</tt> \u2014 if <tt>True</tt> then the countdown for the certain <tt>label</tt>\nwill be stopped. If <tt>False</tt> and the countdown for the certain <tt>label</tt>\nis not stopped then returns <tt>None</tt>.</li>\n<li><tt>stop_at</tt> \u2014 passed into <tt>stop</tt> function if <tt>stop_it</tt> == <tt>True</tt></li>\n</ul>\n</li>\n<li><strong>marktime.stopwatch</strong> (label) \u2014 context manager (<tt>with</tt> statement support)</li>\n<li><strong>marktime.labels</strong> \u2014 global <tt>dict</tt> that stores all the labels for time markers.</li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>See <a href=\"https://github.com/ekalinin/marktime.py/blob/master/LICENSE\" rel=\"nofollow\">LICENSE</a>\nfile.</p>\n</div>\n\n          </div>"}, "last_serial": 762167, "releases": {"0.1.0": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "fff76e254366711787290dd52a32b81d", "sha256": "ef27c3e0c08dd656fc2895fe3ba3e0c764d25c8b83b0fd8098cbe548b30a156c"}, "downloads": -1, "filename": "marktime-0.1.1.tar.gz", "has_sig": false, "md5_digest": "fff76e254366711787290dd52a32b81d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2863, "upload_time": "2013-06-06T12:51:06", "upload_time_iso_8601": "2013-06-06T12:51:06.315258Z", "url": "https://files.pythonhosted.org/packages/d2/e2/b45d200f23f552f0acfb955584cda2bf7bc106b8d51715012b311c754bb0/marktime-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "1f2650b9bbc1226dbc05ea0696a4e382", "sha256": "2006f6cb9a649c537137bf9be617d8ad524ecaaa352b509a903578aceb983ffd"}, "downloads": -1, "filename": "marktime-0.2.0.tar.gz", "has_sig": false, "md5_digest": "1f2650b9bbc1226dbc05ea0696a4e382", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3228, "upload_time": "2013-06-07T21:08:28", "upload_time_iso_8601": "2013-06-07T21:08:28.962888Z", "url": "https://files.pythonhosted.org/packages/14/00/122c8fa4edebc084ae0273ed24079d10656d3d323e1e7a19d8e69b9d2002/marktime-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1f2650b9bbc1226dbc05ea0696a4e382", "sha256": "2006f6cb9a649c537137bf9be617d8ad524ecaaa352b509a903578aceb983ffd"}, "downloads": -1, "filename": "marktime-0.2.0.tar.gz", "has_sig": false, "md5_digest": "1f2650b9bbc1226dbc05ea0696a4e382", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3228, "upload_time": "2013-06-07T21:08:28", "upload_time_iso_8601": "2013-06-07T21:08:28.962888Z", "url": "https://files.pythonhosted.org/packages/14/00/122c8fa4edebc084ae0273ed24079d10656d3d323e1e7a19d8e69b9d2002/marktime-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:40 2020"}