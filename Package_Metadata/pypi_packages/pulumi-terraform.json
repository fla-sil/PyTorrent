{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# Pulumi Terraform Provider\n\nThe Terraform resource provider for Pulumi lets you consume the outputs\ncontained in Terraform state files from your Pulumi programs. The package\nprovides a `RemoteStateReference` resource which acts like a native Pulumi\n[`StackReference`][stackreference].\n\nTo use this package, please [install the Pulumi CLI first][pulumicli].\n\n## Installing\n\n### Node.js (JavaScript/TypeScript)\n\nTo use from JavaScript or TypeScript in Node.js, install using either `npm`:\n\n    $ npm install @pulumi/terraform\n\nor `yarn`:\n\n    $ yarn add @pulumi/terraform\n    \n### Python\n\nTo use from Python, install using `pip`:\n\n    $ pip install pulumi-terraform\n\n## Concepts\n\nThe `@pulumi/terraform` package provides a resource named `RemoteStateReference`\nwhich is used to read outputs from a Terraform state file stored in one of the\nsupported Terraform remote state backends.\n\n## Examples\n\n### S3\n\nThe following program will read a Terraform state file stored in S3:\n\n```typescript\nimport * as tf from \"@pulumi/terraform\";\n\nconst remoteState = new tf.state.RemoteStateReference(\"s3state\", {\n    backendType: \"s3\",\n    bucket: \"pulumi-terraform-state-test\",\n    key: \"test/terraform.tfstate\",\n    region: \"us-west-2\"\n});\n\n// Use the getOutput function on the resource to access root outputs\nconst vpcId= remoteState.getOutput(\"vpc_id\");\n```\n\n### Local file\n\nThe following program will read a Terraform state file stored locally in the\nfilesystem:\n\n```typescript\nimport * as tf from \"@pulumi/terraform\";\n\nconst remotestate = new tf.state.RemoteStateReference(\"localstate\", {\n   backendType: \"local\",\n   path: path.join(__dirname, \"terraform.tfstate\"),\n});\n\n// Use the getOutput function on the resource to access root outputs\nconst vpcId= remoteState.getOutput(\"vpc_id\");\n```\n\n### Terraform Enterprise\n\nFor state stored in Terraform Enterprise, the authentication token must be set\nvia the Pulumi configuration system - for example, using:\n\n    pulumi config set --secret terraformEnterpriseToken <value>\n\nThe following program will read a Terraform state file stored in Terraform\nEnterprise, using the value of `terraformEnterpriseToken` from above:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as tf from \"@pulumi/terraform\";\n\nconst config = new pulumi.Config();\n\nconst ref = new tf.state.RemoteStateReference(\"remote\", {\n    backendType: \"remote\",\n    organization: \"pulumi\",\n    token: config.requireSecret(\"terraformEnterpriseToken\"),\n    workspaces: {\n        name: \"test-state-file\"\n    }\n});\n\n// Use the getOutput function on the resource to access root outputs\nconst vpcId= remoteState.getOutput(\"vpc_id\");\n```\n\n[stackreference]: https://www.pulumi.com/docs/reference/organizing-stacks-projects/#inter-stack-dependencies\n[pulumicli]: https://pulumi.com/", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pulumi.io", "keywords": "pulumi terraform", "license": "Apache-2.0", "maintainer": "", "maintainer_email": "", "name": "pulumi-terraform", "package_url": "https://pypi.org/project/pulumi-terraform/", "platform": "", "project_url": "https://pypi.org/project/pulumi-terraform/", "project_urls": {"Homepage": "https://pulumi.io", "Repository": "https://github.com/pulumi/pulumi-terraform"}, "release_url": "https://pypi.org/project/pulumi-terraform/2.0.0/", "requires_dist": null, "requires_python": "", "summary": "A Pulumi package for consuming Terraform Remote State resources.", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Pulumi Terraform Provider</h1>\n<p>The Terraform resource provider for Pulumi lets you consume the outputs\ncontained in Terraform state files from your Pulumi programs. The package\nprovides a <code>RemoteStateReference</code> resource which acts like a native Pulumi\n<a href=\"https://www.pulumi.com/docs/reference/organizing-stacks-projects/#inter-stack-dependencies\" rel=\"nofollow\"><code>StackReference</code></a>.</p>\n<p>To use this package, please <a href=\"https://pulumi.com/\" rel=\"nofollow\">install the Pulumi CLI first</a>.</p>\n<h2>Installing</h2>\n<h3>Node.js (JavaScript/TypeScript)</h3>\n<p>To use from JavaScript or TypeScript in Node.js, install using either <code>npm</code>:</p>\n<pre><code>$ npm install @pulumi/terraform\n</code></pre>\n<p>or <code>yarn</code>:</p>\n<pre><code>$ yarn add @pulumi/terraform\n</code></pre>\n<h3>Python</h3>\n<p>To use from Python, install using <code>pip</code>:</p>\n<pre><code>$ pip install pulumi-terraform\n</code></pre>\n<h2>Concepts</h2>\n<p>The <code>@pulumi/terraform</code> package provides a resource named <code>RemoteStateReference</code>\nwhich is used to read outputs from a Terraform state file stored in one of the\nsupported Terraform remote state backends.</p>\n<h2>Examples</h2>\n<h3>S3</h3>\n<p>The following program will read a Terraform state file stored in S3:</p>\n<pre><span class=\"kr\">import</span> <span class=\"o\">*</span> <span class=\"kr\">as</span> <span class=\"nx\">tf</span> <span class=\"nx\">from</span> <span class=\"s2\">\"@pulumi/terraform\"</span><span class=\"p\">;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">remoteState</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">tf</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">RemoteStateReference</span><span class=\"p\">(</span><span class=\"s2\">\"s3state\"</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n    <span class=\"nx\">backendType</span><span class=\"o\">:</span> <span class=\"s2\">\"s3\"</span><span class=\"p\">,</span>\n    <span class=\"nx\">bucket</span><span class=\"o\">:</span> <span class=\"s2\">\"pulumi-terraform-state-test\"</span><span class=\"p\">,</span>\n    <span class=\"nx\">key</span><span class=\"o\">:</span> <span class=\"s2\">\"test/terraform.tfstate\"</span><span class=\"p\">,</span>\n    <span class=\"nx\">region</span><span class=\"o\">:</span> <span class=\"s2\">\"us-west-2\"</span>\n<span class=\"p\">});</span>\n\n<span class=\"c1\">// Use the getOutput function on the resource to access root outputs</span>\n<span class=\"kr\">const</span> <span class=\"nx\">vpcId</span><span class=\"o\">=</span> <span class=\"nx\">remoteState</span><span class=\"p\">.</span><span class=\"nx\">getOutput</span><span class=\"p\">(</span><span class=\"s2\">\"vpc_id\"</span><span class=\"p\">);</span>\n</pre>\n<h3>Local file</h3>\n<p>The following program will read a Terraform state file stored locally in the\nfilesystem:</p>\n<pre><span class=\"kr\">import</span> <span class=\"o\">*</span> <span class=\"kr\">as</span> <span class=\"nx\">tf</span> <span class=\"nx\">from</span> <span class=\"s2\">\"@pulumi/terraform\"</span><span class=\"p\">;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">remotestate</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">tf</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">RemoteStateReference</span><span class=\"p\">(</span><span class=\"s2\">\"localstate\"</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n   <span class=\"nx\">backendType</span><span class=\"o\">:</span> <span class=\"s2\">\"local\"</span><span class=\"p\">,</span>\n   <span class=\"nx\">path</span>: <span class=\"kt\">path.join</span><span class=\"p\">(</span><span class=\"nx\">__dirname</span><span class=\"p\">,</span> <span class=\"s2\">\"terraform.tfstate\"</span><span class=\"p\">),</span>\n<span class=\"p\">});</span>\n\n<span class=\"c1\">// Use the getOutput function on the resource to access root outputs</span>\n<span class=\"kr\">const</span> <span class=\"nx\">vpcId</span><span class=\"o\">=</span> <span class=\"nx\">remoteState</span><span class=\"p\">.</span><span class=\"nx\">getOutput</span><span class=\"p\">(</span><span class=\"s2\">\"vpc_id\"</span><span class=\"p\">);</span>\n</pre>\n<h3>Terraform Enterprise</h3>\n<p>For state stored in Terraform Enterprise, the authentication token must be set\nvia the Pulumi configuration system - for example, using:</p>\n<pre><code>pulumi config set --secret terraformEnterpriseToken &lt;value&gt;\n</code></pre>\n<p>The following program will read a Terraform state file stored in Terraform\nEnterprise, using the value of <code>terraformEnterpriseToken</code> from above:</p>\n<pre><span class=\"kr\">import</span> <span class=\"o\">*</span> <span class=\"kr\">as</span> <span class=\"nx\">pulumi</span> <span class=\"nx\">from</span> <span class=\"s2\">\"@pulumi/pulumi\"</span><span class=\"p\">;</span>\n<span class=\"kr\">import</span> <span class=\"o\">*</span> <span class=\"kr\">as</span> <span class=\"nx\">tf</span> <span class=\"nx\">from</span> <span class=\"s2\">\"@pulumi/terraform\"</span><span class=\"p\">;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">config</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">pulumi</span><span class=\"p\">.</span><span class=\"nx\">Config</span><span class=\"p\">();</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">ref</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">tf</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">RemoteStateReference</span><span class=\"p\">(</span><span class=\"s2\">\"remote\"</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n    <span class=\"nx\">backendType</span><span class=\"o\">:</span> <span class=\"s2\">\"remote\"</span><span class=\"p\">,</span>\n    <span class=\"nx\">organization</span><span class=\"o\">:</span> <span class=\"s2\">\"pulumi\"</span><span class=\"p\">,</span>\n    <span class=\"nx\">token</span>: <span class=\"kt\">config.requireSecret</span><span class=\"p\">(</span><span class=\"s2\">\"terraformEnterpriseToken\"</span><span class=\"p\">),</span>\n    <span class=\"nx\">workspaces</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"nx\">name</span><span class=\"o\">:</span> <span class=\"s2\">\"test-state-file\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">});</span>\n\n<span class=\"c1\">// Use the getOutput function on the resource to access root outputs</span>\n<span class=\"kr\">const</span> <span class=\"nx\">vpcId</span><span class=\"o\">=</span> <span class=\"nx\">remoteState</span><span class=\"p\">.</span><span class=\"nx\">getOutput</span><span class=\"p\">(</span><span class=\"s2\">\"vpc_id\"</span><span class=\"p\">);</span>\n</pre>\n\n          </div>"}, "last_serial": 7152901, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "fa803f071f3bfd8c9a3d7060cd7a19a8", "sha256": "4ee1718214a830a9e9ee6959cc700ac6e6cf852697c6852213fc7f021c31b87f"}, "downloads": -1, "filename": "pulumi_terraform-0.0.0.tar.gz", "has_sig": false, "md5_digest": "fa803f071f3bfd8c9a3d7060cd7a19a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13986, "upload_time": "2019-09-14T11:40:17", "upload_time_iso_8601": "2019-09-14T11:40:17.933922Z", "url": "https://files.pythonhosted.org/packages/de/0e/82f76e6c625b7a587ec30adca5abafecffec8fd5f1143ae39ffd41764d57/pulumi_terraform-0.0.0.tar.gz", "yanked": false}], "0.18.4.dev1568410757": [{"comment_text": "", "digests": {"md5": "578433cee881a9a9dc10a6cf69ce0385", "sha256": "34773aa893c51d783aed07ce089bc9ba819534c9ffe52d2eb662f326dc5add91"}, "downloads": -1, "filename": "pulumi_terraform-0.18.4.dev1568410757.tar.gz", "has_sig": false, "md5_digest": "578433cee881a9a9dc10a6cf69ce0385", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14022, "upload_time": "2019-09-13T22:38:20", "upload_time_iso_8601": "2019-09-13T22:38:20.455649Z", "url": "https://files.pythonhosted.org/packages/a1/53/30d82ce3ba228cbb569b4e0c09f3e00339d34cb2395534f8a1149c8088bd/pulumi_terraform-0.18.4.dev1568410757.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "3cc91eba34286c9fd497cbe939ead152", "sha256": "fedd93f4f910b34df52d1d3a720de9239ab78921d3b027db261f3d2f7957bc79"}, "downloads": -1, "filename": "pulumi_terraform-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3cc91eba34286c9fd497cbe939ead152", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11088, "upload_time": "2019-10-02T11:27:24", "upload_time_iso_8601": "2019-10-02T11:27:24.131756Z", "url": "https://files.pythonhosted.org/packages/d4/1b/294e70f7b8edbc118b9cf06f5b4489b139e9931dec0c2a52f560f25ebff4/pulumi_terraform-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "2b0ff43e5b10fb9498fa18b4c2233cf0", "sha256": "a80d1274cd2b3a7e987673fec30006517a334e99688d5de6fd990b7b0a81a710"}, "downloads": -1, "filename": "pulumi_terraform-1.1.0.tar.gz", "has_sig": false, "md5_digest": "2b0ff43e5b10fb9498fa18b4c2233cf0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11083, "upload_time": "2019-10-04T22:57:34", "upload_time_iso_8601": "2019-10-04T22:57:34.804405Z", "url": "https://files.pythonhosted.org/packages/46/59/dccd43938e48f10c0e775fe1ba8152ea6b80093a8271168d012b8ae2dc4d/pulumi_terraform-1.1.0.tar.gz", "yanked": false}], "1.2.0a1588355816": [{"comment_text": "", "digests": {"md5": "abac4d7b88a59964b7e11e595b04e3bf", "sha256": "0aa82ef50186939984efdb224303c7314a56012e3ea124b64ada05105a02e905"}, "downloads": -1, "filename": "pulumi_terraform-1.2.0a1588355816.tar.gz", "has_sig": false, "md5_digest": "abac4d7b88a59964b7e11e595b04e3bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11167, "upload_time": "2020-05-01T18:06:13", "upload_time_iso_8601": "2020-05-01T18:06:13.885886Z", "url": "https://files.pythonhosted.org/packages/44/17/7e9bb2c1b1b47d2aa941e60f7c2b99418fa7c5ebb44e279e82ff4dad07cf/pulumi_terraform-1.2.0a1588355816.tar.gz", "yanked": false}], "1.2.0a1588434738": [{"comment_text": "", "digests": {"md5": "35849de6ebe2a1aa09f9e9b5de335f5d", "sha256": "7cd606b4dc2afbd28170fd9ecebe00935e912094e4748536df33f5a5ce06b8ae"}, "downloads": -1, "filename": "pulumi_terraform-1.2.0a1588434738.tar.gz", "has_sig": false, "md5_digest": "35849de6ebe2a1aa09f9e9b5de335f5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11163, "upload_time": "2020-05-02T16:03:42", "upload_time_iso_8601": "2020-05-02T16:03:42.556478Z", "url": "https://files.pythonhosted.org/packages/51/3b/f31a450e0726cd5f8aea96f756929ce5881421d1fe4755f7d5f6b0730904/pulumi_terraform-1.2.0a1588434738.tar.gz", "yanked": false}], "1.2.0a1588434986": [{"comment_text": "", "digests": {"md5": "49cae0edab0a676a655432b91e74ba00", "sha256": "1a0ca7ce41c3cafb13386ed4f9e0b303242e96f934a007ba2862350e15523e06"}, "downloads": -1, "filename": "pulumi_terraform-1.2.0a1588434986.tar.gz", "has_sig": false, "md5_digest": "49cae0edab0a676a655432b91e74ba00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11166, "upload_time": "2020-05-02T16:08:24", "upload_time_iso_8601": "2020-05-02T16:08:24.862483Z", "url": "https://files.pythonhosted.org/packages/de/e2/f8f46a525dc2445c18dd7316b903393c7ebb6c8a4812500685762db12738/pulumi_terraform-1.2.0a1588434986.tar.gz", "yanked": false}], "1.2.0a1588443722": [{"comment_text": "", "digests": {"md5": "f65addf8f09ed23592626942c296ab6a", "sha256": "c378530cbc2ebad9c8cb551f1efc3ba0870e0f6e54d032e2177005456f418e31"}, "downloads": -1, "filename": "pulumi_terraform-1.2.0a1588443722.tar.gz", "has_sig": false, "md5_digest": "f65addf8f09ed23592626942c296ab6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11167, "upload_time": "2020-05-02T18:33:28", "upload_time_iso_8601": "2020-05-02T18:33:28.053955Z", "url": "https://files.pythonhosted.org/packages/84/fc/bb4f0f9046f50a7aefdfe83ff0f8635c9f758d293078d38083a496a735ab/pulumi_terraform-1.2.0a1588443722.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "f81c0a051f8facdfd7d283fc4562e8a7", "sha256": "85504eb41fcbd3f8ff9357cfa36dbc23db4a424325517532f8297d10b355a2fb"}, "downloads": -1, "filename": "pulumi_terraform-2.0.0.tar.gz", "has_sig": false, "md5_digest": "f81c0a051f8facdfd7d283fc4562e8a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11115, "upload_time": "2020-05-02T18:46:59", "upload_time_iso_8601": "2020-05-02T18:46:59.462269Z", "url": "https://files.pythonhosted.org/packages/ed/2a/10ce81da89b711631b4f20db9c010d5102df3569f7ccd66887b8246c83a3/pulumi_terraform-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f81c0a051f8facdfd7d283fc4562e8a7", "sha256": "85504eb41fcbd3f8ff9357cfa36dbc23db4a424325517532f8297d10b355a2fb"}, "downloads": -1, "filename": "pulumi_terraform-2.0.0.tar.gz", "has_sig": false, "md5_digest": "f81c0a051f8facdfd7d283fc4562e8a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11115, "upload_time": "2020-05-02T18:46:59", "upload_time_iso_8601": "2020-05-02T18:46:59.462269Z", "url": "https://files.pythonhosted.org/packages/ed/2a/10ce81da89b711631b4f20db9c010d5102df3569f7ccd66887b8246c83a3/pulumi_terraform-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:13:38 2020"}