{"info": {"author": "Nick Lehmann", "author_email": "nick@lehmann.sh", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Console", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Programming Language :: Python :: 3 :: Only", "Typing :: Typed"], "description": "![Generi logo](/docs/images/icon.png?raw=true \"Generi logo\")\n\n\ud83d\udcda [Documentation](https://generi.nicklehmann.sh/)\n\n\ud83d\udc33 About\n========\n\nGeneri is a tool to automatically create Dockerfiles and build images for a large combination of different factors. It is the right tool if you need to build many similar images with slightly different parameters. \n\nFor example, say you are developing an app. You might want to build one docker image for python 2.7, 3.6, 3.8. And for each python version, you need one with a database included or not. And all that for each tag. If you have experienced a scenario like this, try out Generi.\n\n\ud83c\udf87 Features\n===========\n\n- Configuration in yaml\n- Specify different parameter to form a build matrix\n- Generate Dockerfile for each combination\n- Build all variations of your image with one command\n- Push to the repository of your choice\n- Everything customisable using [Jinja](https://jinja.palletsprojects.com/en/2.10.x/)\n\n\u2708\ufe0f Quickstart\n=============\n\n`Generi` can be configured using a simple yaml file that defines your matrix build. \n\n*schema.yaml*\n\n```yaml\nparameters:\n  python_version:\n    - 2.7\n    - 3.5\n    - 3.6\n    - 3.7\n  operating_system:\n    - buster\n    - alpine\n\ntemplate: templates\noutput: \"output/{{ python_version }}/{{ operating_system }}\"\nimage: \"nicklehmann/myapplication:py{{ python_version }}-{{ operating_system }}\"\n\nregistry:\n  username: nicklehmann\n```\n\n*templates/Dockerfile*\n\n```dockerfile\nFROM python:{{ python_version }}-{{ operating_system }}\n\nCOPY main.py main.py\n\nCMD [\"python\", \"main.py\"]\n```\n\nFirst, render your dockerfiles by running\n\n```bash\n$ generi write schema.yaml\n```\n\nAfter that, build and optionally push your image.\n\n```bash\n$ generi build schema.yaml\n$ generi push schema.yaml\n```\n\nFor more examples, please see the [usage](https://generi.nicklehmann.sh/usage/usage.html) section of the documentation.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nick-lehmann/Generi", "keywords": "docker,CI,templating", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "generi", "package_url": "https://pypi.org/project/generi/", "platform": "", "project_url": "https://pypi.org/project/generi/", "project_urls": {"Bug Tracker": "https://github.com/nick-lehmann/Generi/issues", "Documentation": "https://generi.nicklehmann.sh", "Homepage": "https://github.com/nick-lehmann/Generi", "Repository": "https://github.com/nick-lehmann/Generi"}, "release_url": "https://pypi.org/project/generi/0.2.0/", "requires_dist": ["pyyaml (>=5.2,<6.0)", "Jinja2 (>=2.10.3,<3.0.0)", "aiodocker (>=0.17.0,<0.18.0)", "fire (>=0.2.1,<0.3.0)"], "requires_python": ">=3.7", "summary": "Manage huge sets of Docker images using matrix builds", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Generi logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c7d711b4764cc7b077997c7fadf6764bd87f7b7b/2f646f63732f696d616765732f69636f6e2e706e673f7261773d74727565\"></p>\n<p>\ud83d\udcda <a href=\"https://generi.nicklehmann.sh/\" rel=\"nofollow\">Documentation</a></p>\n<h1>\ud83d\udc33 About</h1>\n<p>Generi is a tool to automatically create Dockerfiles and build images for a large combination of different factors. It is the right tool if you need to build many similar images with slightly different parameters.</p>\n<p>For example, say you are developing an app. You might want to build one docker image for python 2.7, 3.6, 3.8. And for each python version, you need one with a database included or not. And all that for each tag. If you have experienced a scenario like this, try out Generi.</p>\n<h1>\ud83c\udf87 Features</h1>\n<ul>\n<li>Configuration in yaml</li>\n<li>Specify different parameter to form a build matrix</li>\n<li>Generate Dockerfile for each combination</li>\n<li>Build all variations of your image with one command</li>\n<li>Push to the repository of your choice</li>\n<li>Everything customisable using <a href=\"https://jinja.palletsprojects.com/en/2.10.x/\" rel=\"nofollow\">Jinja</a></li>\n</ul>\n<h1>\u2708\ufe0f Quickstart</h1>\n<p><code>Generi</code> can be configured using a simple yaml file that defines your matrix build.</p>\n<p><em>schema.yaml</em></p>\n<pre><span class=\"nt\">parameters</span><span class=\"p\">:</span>\n  <span class=\"nt\">python_version</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">2.7</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">3.5</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">3.6</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">3.7</span>\n  <span class=\"nt\">operating_system</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">buster</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">alpine</span>\n\n<span class=\"nt\">template</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">templates</span>\n<span class=\"nt\">output</span><span class=\"p\">:</span> <span class=\"s\">\"output/{{</span><span class=\"nv\"> </span><span class=\"s\">python_version</span><span class=\"nv\"> </span><span class=\"s\">}}/{{</span><span class=\"nv\"> </span><span class=\"s\">operating_system</span><span class=\"nv\"> </span><span class=\"s\">}}\"</span>\n<span class=\"nt\">image</span><span class=\"p\">:</span> <span class=\"s\">\"nicklehmann/myapplication:py{{</span><span class=\"nv\"> </span><span class=\"s\">python_version</span><span class=\"nv\"> </span><span class=\"s\">}}-{{</span><span class=\"nv\"> </span><span class=\"s\">operating_system</span><span class=\"nv\"> </span><span class=\"s\">}}\"</span>\n\n<span class=\"nt\">registry</span><span class=\"p\">:</span>\n  <span class=\"nt\">username</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">nicklehmann</span>\n</pre>\n<p><em>templates/Dockerfile</em></p>\n<pre><span class=\"k\">FROM</span> <span class=\"s\">python:{{</span> python_version <span class=\"o\">}}</span>-<span class=\"o\">{{</span> operating_system <span class=\"o\">}}</span>\n\n<span class=\"k\">COPY</span> main.py main.py\n\n<span class=\"k\">CMD</span> <span class=\"p\">[</span><span class=\"s2\">\"python\"</span><span class=\"p\">,</span> <span class=\"s2\">\"main.py\"</span><span class=\"p\">]</span>\n</pre>\n<p>First, render your dockerfiles by running</p>\n<pre>$ generi write schema.yaml\n</pre>\n<p>After that, build and optionally push your image.</p>\n<pre>$ generi build schema.yaml\n$ generi push schema.yaml\n</pre>\n<p>For more examples, please see the <a href=\"https://generi.nicklehmann.sh/usage/usage.html\" rel=\"nofollow\">usage</a> section of the documentation.</p>\n\n          </div>"}, "last_serial": 6363323, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "17d4ed662a3b9c3bddfd241c95e16c62", "sha256": "8e95c3caa8c6ab834c0fa82f1676ae89dc7605dd60ea8bbbed7d7837d830bbc7"}, "downloads": -1, "filename": "Generi-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "17d4ed662a3b9c3bddfd241c95e16c62", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8015, "upload_time": "2019-12-27T00:00:18", "upload_time_iso_8601": "2019-12-27T00:00:18.763994Z", "url": "https://files.pythonhosted.org/packages/3c/e5/bbfedb30da995d104733ce1342ad1676946067251d43642b65375ca181e4/Generi-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7484909b4236c6793733215e3bb6b74d", "sha256": "a22f77e56abdb94e30c3d4e8ab25420041a22f88275a3a73d5cf45f7a93bd07b"}, "downloads": -1, "filename": "Generi-0.1.0.tar.gz", "has_sig": false, "md5_digest": "7484909b4236c6793733215e3bb6b74d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5648, "upload_time": "2019-12-27T00:00:20", "upload_time_iso_8601": "2019-12-27T00:00:20.936454Z", "url": "https://files.pythonhosted.org/packages/ad/53/83f94d30c697808110b39d83cf2016672372e386f6f9b60755d9ed090dfd/Generi-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "ebf13c5f97358d289d6f62c7a2a5dcac", "sha256": "85b3a4c6bc804ba8c13ac1fca025f3208f2ab014ea69543fbb9043fe3ca2d668"}, "downloads": -1, "filename": "Generi-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ebf13c5f97358d289d6f62c7a2a5dcac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 9102, "upload_time": "2019-12-27T00:13:37", "upload_time_iso_8601": "2019-12-27T00:13:37.706297Z", "url": "https://files.pythonhosted.org/packages/38/63/d940932f57d4978def7408cc422c0248520eeeaf813b6852f4d4c4691103/Generi-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "33bac4a63c03e93d55bc0b3e990755da", "sha256": "ccd921169dadc292f521a86aedda05b6df21ce277b1e57bfb2c22098251a8ab8"}, "downloads": -1, "filename": "Generi-0.2.0.tar.gz", "has_sig": false, "md5_digest": "33bac4a63c03e93d55bc0b3e990755da", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 7845, "upload_time": "2019-12-27T00:13:39", "upload_time_iso_8601": "2019-12-27T00:13:39.183118Z", "url": "https://files.pythonhosted.org/packages/1c/a1/6bb7ce7d197a1b80c05d4335c58fe04f9ec2293c7a82ef3b8fcee8e1e4e8/Generi-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ebf13c5f97358d289d6f62c7a2a5dcac", "sha256": "85b3a4c6bc804ba8c13ac1fca025f3208f2ab014ea69543fbb9043fe3ca2d668"}, "downloads": -1, "filename": "Generi-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ebf13c5f97358d289d6f62c7a2a5dcac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 9102, "upload_time": "2019-12-27T00:13:37", "upload_time_iso_8601": "2019-12-27T00:13:37.706297Z", "url": "https://files.pythonhosted.org/packages/38/63/d940932f57d4978def7408cc422c0248520eeeaf813b6852f4d4c4691103/Generi-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "33bac4a63c03e93d55bc0b3e990755da", "sha256": "ccd921169dadc292f521a86aedda05b6df21ce277b1e57bfb2c22098251a8ab8"}, "downloads": -1, "filename": "Generi-0.2.0.tar.gz", "has_sig": false, "md5_digest": "33bac4a63c03e93d55bc0b3e990755da", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 7845, "upload_time": "2019-12-27T00:13:39", "upload_time_iso_8601": "2019-12-27T00:13:39.183118Z", "url": "https://files.pythonhosted.org/packages/1c/a1/6bb7ce7d197a1b80c05d4335c58fe04f9ec2293c7a82ef3b8fcee8e1e4e8/Generi-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:24 2020"}