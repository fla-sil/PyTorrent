{"info": {"author": "Christopher Crouzet", "author_email": "christopher.crouzet@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "Revl\n====\n\n.. image:: https://img.shields.io/pypi/v/revl.svg\n   :target: https://pypi.python.org/pypi/revl\n   :alt: PyPI latest version\n\n.. image:: https://readthedocs.org/projects/revl/badge/?version=latest\n   :target: https://revl.readthedocs.io\n   :alt: Documentation status\n\n.. image:: https://img.shields.io/pypi/l/revl.svg\n   :target: https://pypi.python.org/pypi/revl\n   :alt: License\n\n\nRevl is a Python library that helps to benchmark code for `Autodesk Maya`_.\n\nUpon writing a piece of code for Maya, it might be interesting to know how it\nperforms **under different conditions**, such as within scenes that are large\nor small, that define a deep DAG hiearchy or a flat one, that use many node\ntypes or only a few, and so on.\n\nFollowing sets of user-provided commands, Revl can **pseudo-randomly generate\nMaya scenes** with different properties against which the behaviour of a piece\nof code can be observed.\n\nThe random nature of the process can also help revealing potential bugs by\nexposing edge cases that were not thought of, thus making it also a good tool\nfor **unit testing**. See `Wikipedia's Fuzzing page`_.\n\nNote that Revl does *not* provide any sort of profiling tool to measure\nperformances. The built-in |timeit|_ module as well as other open-source\npackages can be used for this purpose.\n\n\nFeatures\n--------\n\n* generates scenes by running commands a given total number of times.\n* fine control over the probability distribution for each command.\n* scene generations are reproducible using a fixed seed.\n* extensible with custom commands.\n* allows for fuzz testing.\n* fast (using Maya's API, not the command layer).\n\n\nUsage\n-----\n\n.. code-block:: python\n\n   >>> import revl\n   >>> commands = [\n   ...     (4.0, revl.createTransform,),\n   ...     (1.0, revl.createPrimitive, (), {'parent': True}),\n   ... ]\n   >>> count = 100\n   >>> revl.run(commands, count, seed=1.23)\n\n\nIn this example, Revl invokes a total of 100 evaluations inequally shared\nbetween the two distinct commands provided, leading to create approximatively\n80% of transforms, and 20% of primitives (plus their associated transforms).\nAlso, the primitive type is picked randomly, and each primitive's transform is\nrandomly parented under another transform from the scene, possibly creating a\nscene with a deep DAG hierarchy.\n\nSee the `Tutorial`_ section from the documentation for more detailed examples\nand explanations on how to use Revl.\n\n\nDocumentation\n-------------\n\nRead the documentation online at `revl.readthedocs.io`_ or check its source in\nthe ``doc`` directory.\n\n\nOut There\n---------\n\nProjects using Revl include:\n\n* `bana <https://github.com/christophercrouzet/bana>`_\n\n\nAuthor\n------\n\nChristopher Crouzet\n<`christophercrouzet.com <https://christophercrouzet.com>`_>\n\n\n.. |timeit| replace:: ``timeit``\n\n.. _Autodesk Maya: http://www.autodesk.com/products/maya\n.. _revl.readthedocs.io: https://revl.readthedocs.io\n.. _timeit: https://docs.python.org/library/timeit.html\n.. _Tutorial: https://revl.readthedocs.io/en/latest/tutorial.html\n.. _Wikipedia's Fuzzing page: https://en.wikipedia.org/wiki/Fuzzing", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/christophercrouzet/revl", "keywords": "Autodesk Maya API benchmark test", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "revl", "package_url": "https://pypi.org/project/revl/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/revl/", "project_urls": {"Homepage": "https://github.com/christophercrouzet/revl"}, "release_url": "https://pypi.org/project/revl/0.2.0/", "requires_dist": ["coverage; extra == 'dev'", "sphinx (>=1.3); extra == 'dev'", "sphinx (>=1.3); extra == 'docs'"], "requires_python": "", "summary": "Helps to benchmark code for Autodesk Maya", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/revl\" rel=\"nofollow\"><img alt=\"PyPI latest version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f7d123a95259a9ab18201b452de3733b0ad52b1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7265766c2e737667\"></a>\n<a href=\"https://revl.readthedocs.io\" rel=\"nofollow\"><img alt=\"Documentation status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fd03abd17ebb622a6a2a246fd705379ddbe3cc71/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7265766c2f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://pypi.python.org/pypi/revl\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ddf13af1d3b98e5f8d09c672cf8d468cc15b6b14/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f7265766c2e737667\"></a>\n<p>Revl is a Python library that helps to benchmark code for <a href=\"http://www.autodesk.com/products/maya\" rel=\"nofollow\">Autodesk Maya</a>.</p>\n<p>Upon writing a piece of code for Maya, it might be interesting to know how it\nperforms <strong>under different conditions</strong>, such as within scenes that are large\nor small, that define a deep DAG hiearchy or a flat one, that use many node\ntypes or only a few, and so on.</p>\n<p>Following sets of user-provided commands, Revl can <strong>pseudo-randomly generate\nMaya scenes</strong> with different properties against which the behaviour of a piece\nof code can be observed.</p>\n<p>The random nature of the process can also help revealing potential bugs by\nexposing edge cases that were not thought of, thus making it also a good tool\nfor <strong>unit testing</strong>. See <a href=\"https://en.wikipedia.org/wiki/Fuzzing\" rel=\"nofollow\">Wikipedia\u2019s Fuzzing page</a>.</p>\n<p>Note that Revl does <em>not</em> provide any sort of profiling tool to measure\nperformances. The built-in <a href=\"https://docs.python.org/library/timeit.html\" rel=\"nofollow\"><tt>timeit</tt></a> module as well as other open-source\npackages can be used for this purpose.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>generates scenes by running commands a given total number of times.</li>\n<li>fine control over the probability distribution for each command.</li>\n<li>scene generations are reproducible using a fixed seed.</li>\n<li>extensible with custom commands.</li>\n<li>allows for fuzz testing.</li>\n<li>fast (using Maya\u2019s API, not the command layer).</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">revl</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">commands</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n<span class=\"o\">...</span>     <span class=\"p\">(</span><span class=\"mf\">4.0</span><span class=\"p\">,</span> <span class=\"n\">revl</span><span class=\"o\">.</span><span class=\"n\">createTransform</span><span class=\"p\">,),</span>\n<span class=\"o\">...</span>     <span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">revl</span><span class=\"o\">.</span><span class=\"n\">createPrimitive</span><span class=\"p\">,</span> <span class=\"p\">(),</span> <span class=\"p\">{</span><span class=\"s1\">'parent'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}),</span>\n<span class=\"o\">...</span> <span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">count</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">revl</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">commands</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"p\">,</span> <span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"mf\">1.23</span><span class=\"p\">)</span>\n</pre>\n<p>In this example, Revl invokes a total of 100 evaluations inequally shared\nbetween the two distinct commands provided, leading to create approximatively\n80% of transforms, and 20% of primitives (plus their associated transforms).\nAlso, the primitive type is picked randomly, and each primitive\u2019s transform is\nrandomly parented under another transform from the scene, possibly creating a\nscene with a deep DAG hierarchy.</p>\n<p>See the <a href=\"https://revl.readthedocs.io/en/latest/tutorial.html\" rel=\"nofollow\">Tutorial</a> section from the documentation for more detailed examples\nand explanations on how to use Revl.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Read the documentation online at <a href=\"https://revl.readthedocs.io\" rel=\"nofollow\">revl.readthedocs.io</a> or check its source in\nthe <tt>doc</tt> directory.</p>\n</div>\n<div id=\"out-there\">\n<h2>Out There</h2>\n<p>Projects using Revl include:</p>\n<ul>\n<li><a href=\"https://github.com/christophercrouzet/bana\" rel=\"nofollow\">bana</a></li>\n</ul>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<p>Christopher Crouzet\n&lt;<a href=\"https://christophercrouzet.com\" rel=\"nofollow\">christophercrouzet.com</a>&gt;</p>\n</div>\n\n          </div>"}, "last_serial": 2581503, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "7fbbcb2034986f9346c62234127afe25", "sha256": "73f9f7a5e710d3ab1941a265506ed3c009d28d183a6fbe8b22ee33b01adfdcc4"}, "downloads": -1, "filename": "revl-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7fbbcb2034986f9346c62234127afe25", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8224, "upload_time": "2016-12-29T06:20:34", "upload_time_iso_8601": "2016-12-29T06:20:34.028546Z", "url": "https://files.pythonhosted.org/packages/8a/61/6bcb571b6004232c3f79350d18fefd3f5fb59366c05f2a44167ddf11e412/revl-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b8a64e80916007686f761aac8efd231", "sha256": "c3e6dcf9a665fbf72343ba4f170a0da33c59333450c1254b3b414509859b0f00"}, "downloads": -1, "filename": "revl-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1b8a64e80916007686f761aac8efd231", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16667, "upload_time": "2016-12-29T06:20:36", "upload_time_iso_8601": "2016-12-29T06:20:36.900369Z", "url": "https://files.pythonhosted.org/packages/62/d7/de0f8d72ec85639c67f497b2b7d191b17fed447c27b80824e18b445a5a10/revl-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "867ec2c9410076a197810f7567bd2bcf", "sha256": "01dddc28a494ab4e7a13dabcb654bd17cf6a23a440b4cd40a858bf3c8c3c44c7"}, "downloads": -1, "filename": "revl-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "867ec2c9410076a197810f7567bd2bcf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11351, "upload_time": "2017-01-18T06:23:07", "upload_time_iso_8601": "2017-01-18T06:23:07.573845Z", "url": "https://files.pythonhosted.org/packages/0d/7d/d2b43d6203d95afc69643d1e18468c999418f12b4006b5872d100121fcec/revl-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7c40aefcb45f05909078be39fc1bd1fc", "sha256": "0d9c752166dcdaaf5cc64293da3c8a8bb6f18901d4e8114f0a1711692959f5ad"}, "downloads": -1, "filename": "revl-0.2.0.tar.gz", "has_sig": false, "md5_digest": "7c40aefcb45f05909078be39fc1bd1fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20066, "upload_time": "2017-01-18T06:23:10", "upload_time_iso_8601": "2017-01-18T06:23:10.512636Z", "url": "https://files.pythonhosted.org/packages/c5/dc/c4506aae2f32268d5c1bc29b079e518d63b335273eec5d5b64a98af1b454/revl-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "867ec2c9410076a197810f7567bd2bcf", "sha256": "01dddc28a494ab4e7a13dabcb654bd17cf6a23a440b4cd40a858bf3c8c3c44c7"}, "downloads": -1, "filename": "revl-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "867ec2c9410076a197810f7567bd2bcf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11351, "upload_time": "2017-01-18T06:23:07", "upload_time_iso_8601": "2017-01-18T06:23:07.573845Z", "url": "https://files.pythonhosted.org/packages/0d/7d/d2b43d6203d95afc69643d1e18468c999418f12b4006b5872d100121fcec/revl-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7c40aefcb45f05909078be39fc1bd1fc", "sha256": "0d9c752166dcdaaf5cc64293da3c8a8bb6f18901d4e8114f0a1711692959f5ad"}, "downloads": -1, "filename": "revl-0.2.0.tar.gz", "has_sig": false, "md5_digest": "7c40aefcb45f05909078be39fc1bd1fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20066, "upload_time": "2017-01-18T06:23:10", "upload_time_iso_8601": "2017-01-18T06:23:10.512636Z", "url": "https://files.pythonhosted.org/packages/c5/dc/c4506aae2f32268d5c1bc29b079e518d63b335273eec5d5b64a98af1b454/revl-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:16 2020"}