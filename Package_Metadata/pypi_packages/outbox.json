{"info": {"author": "Nathan Hoad", "author_email": "nathan@getoffmalawn.com", "bugtrack_url": null, "classifiers": [], "description": "Outbox.py: SMTP Client for Humans\n=================================\n\nThis is simplest SMTP client you'll ever see. It's 100% synchronous...\n\nUsage\n-----\n\nGive your app an outbox easily::\n\n    from outbox import Outbox, Email, Attachment\n\n    # io.StringIO for Python 3 folks\n    from StringIO import StringIO\n\n    attachments = [\n        Attachment('kittens.jpg', fileobj=open('ducks.jpg', 'rb')),\n        Attachment('my-transient-file.bin', fileobj=StringIO('some raw data')),\n    ]\n\n    outbox = Outbox(username='username', password='password',\n            server='server', port=1234, mode='SSL')\n\n    outbox.send(Email(subject='my subject', body='some nice sentiment',\n            recipients=['nathan@getoffmalawn.com']), attachments=attachments)\n\n    # html email with attachments\n    outbox.send(Email(subject='my subject', html_body='<b>SOME REALLY NICE SENTIMENT</b>',\n            recipients=['nathan@getoffmalawn.com']), attachments=attachments)\n\nThis method will log in to the server each time `send()` is called.\n\nAlternatively, you can use Outbox as a context manager::\n\n    with Outbox(username='username', password='password',\n            server='server', port=1234, mode='SSL') as outbox:\n\n        outbox.send(Email(subject='my subject', body='some nice sentiment',\n                recipients=['nathan@getoffmalawn.com']), attachments=attachments)\n\n        # html email with attachments\n        outbox.send(Email(subject='my subject', html_body='<b>SOME REALLY NICE SENTIMENT</b>',\n                recipients=['nathan@getoffmalawn.com']), attachments=attachments)\n\nUsing Outbox as a context manager has the added benefit of performing a single login to send all emails.\n\nInstallation\n------------\n\nInstalling Outbox.py is simple::\n\n    $ pip install outbox\n\nChange History\n--------------\n\n0.1.8 (24th June 2014)\n    - Thanks to Hideaki Takahashi for teh following contributions!\n    - Added RFC2047 style encoding support.\n    - Much improved support for multipart messages.\n0.1.7 (24th June 2014)\n    - Thanks to Hideaki Takahashi for submitting a MANIFEST, which allows `outbox` to be installed via pip again (broken in 0.1.6)\n0.1.6 (24th June 2014)\n    - Added `AnonymousOutbox`, a class for connecting to servers that don't perform authentication.\n    - Fleshed out documentation for `outbox.Email`.\n    - Fixed a bug when using Python 3 (calling iteritems on a dict).\n    - Moved the project to Github.\n0.1.5 (3rd March 2013)\n    - Thanks to Peter Naudus for the following contributions!\n    - Added debug argument to Outbox class, to switch smtplib's debugging.\n    - Added fields argument to Email class, to allow additional email fields to be set.\n    - Connection and disconnection are now exposed.\n    - Internal cleanup of some of the connection code.\n0.1.4 (29th October 2012)\n    - Handle passing a single recipient as a string, instead of forcing the recipient to be a list.\n    - Handle utf8 email properly. Thanks, Zhang Mingyuan!\n      I doubt I've covered every use case, so the charset to use can be passed in when constructing an Email.\n    - Added a sender_address method to the Outbox class, for when the username used for authentication isn't good enough.\n0.1.3 (3rd July 2012)\n    - Made a few lines of code a bit easier to follow. No functional changes.\n    - Updated the license to actually hold copyright in my name, instead of Kenneth Reitz. Does this mean he owned copyright on the library up until now? Can I even change the license? I'm unsure.\n0.1.2 (2nd June 2012)\n    - Made Outbox a context manager, so it can be used with the `with` statement.\n      As noted in the example, this has the added benefit of performing a single login to send all emails, you should get better performance using a with statement.\n    - Removed raw and filepath arguments to Attachment. They were both begging to point to a file-like object, so that's what you have now - an argument called `fileobj`\n    - Fixed annoying encoding error when trying to send binary attachments.\n    - The Email object does not have a `type` argument anymore. Instead, there is `body` and `html_body`, so you can send an email with both html and plain-text bodies.\n\n0.1.1 (27th May 2012)\n    - Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nathan-hoad/outbox", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "outbox", "package_url": "https://pypi.org/project/outbox/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/outbox/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/nathan-hoad/outbox"}, "release_url": "https://pypi.org/project/outbox/0.1.8/", "requires_dist": null, "requires_python": null, "summary": "SMTP client for Humans.", "version": "0.1.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is simplest SMTP client you\u2019ll ever see. It\u2019s 100% synchronous\u2026</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Give your app an outbox easily:</p>\n<pre>from outbox import Outbox, Email, Attachment\n\n# io.StringIO for Python 3 folks\nfrom StringIO import StringIO\n\nattachments = [\n    Attachment('kittens.jpg', fileobj=open('ducks.jpg', 'rb')),\n    Attachment('my-transient-file.bin', fileobj=StringIO('some raw data')),\n]\n\noutbox = Outbox(username='username', password='password',\n        server='server', port=1234, mode='SSL')\n\noutbox.send(Email(subject='my subject', body='some nice sentiment',\n        recipients=['nathan@getoffmalawn.com']), attachments=attachments)\n\n# html email with attachments\noutbox.send(Email(subject='my subject', html_body='&lt;b&gt;SOME REALLY NICE SENTIMENT&lt;/b&gt;',\n        recipients=['nathan@getoffmalawn.com']), attachments=attachments)\n</pre>\n<p>This method will log in to the server each time <cite>send()</cite> is called.</p>\n<p>Alternatively, you can use Outbox as a context manager:</p>\n<pre>with Outbox(username='username', password='password',\n        server='server', port=1234, mode='SSL') as outbox:\n\n    outbox.send(Email(subject='my subject', body='some nice sentiment',\n            recipients=['nathan@getoffmalawn.com']), attachments=attachments)\n\n    # html email with attachments\n    outbox.send(Email(subject='my subject', html_body='&lt;b&gt;SOME REALLY NICE SENTIMENT&lt;/b&gt;',\n            recipients=['nathan@getoffmalawn.com']), attachments=attachments)\n</pre>\n<p>Using Outbox as a context manager has the added benefit of performing a single login to send all emails.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Installing Outbox.py is simple:</p>\n<pre>$ pip install outbox\n</pre>\n</div>\n<div id=\"change-history\">\n<h2>Change History</h2>\n<dl>\n<dt>0.1.8 (24th June 2014)</dt>\n<dd><ul>\n<li>Thanks to Hideaki Takahashi for teh following contributions!</li>\n<li>Added RFC2047 style encoding support.</li>\n<li>Much improved support for multipart messages.</li>\n</ul>\n</dd>\n<dt>0.1.7 (24th June 2014)</dt>\n<dd><ul>\n<li>Thanks to Hideaki Takahashi for submitting a MANIFEST, which allows <cite>outbox</cite> to be installed via pip again (broken in 0.1.6)</li>\n</ul>\n</dd>\n<dt>0.1.6 (24th June 2014)</dt>\n<dd><ul>\n<li>Added <cite>AnonymousOutbox</cite>, a class for connecting to servers that don\u2019t perform authentication.</li>\n<li>Fleshed out documentation for <cite>outbox.Email</cite>.</li>\n<li>Fixed a bug when using Python 3 (calling iteritems on a dict).</li>\n<li>Moved the project to Github.</li>\n</ul>\n</dd>\n<dt>0.1.5 (3rd March 2013)</dt>\n<dd><ul>\n<li>Thanks to Peter Naudus for the following contributions!</li>\n<li>Added debug argument to Outbox class, to switch smtplib\u2019s debugging.</li>\n<li>Added fields argument to Email class, to allow additional email fields to be set.</li>\n<li>Connection and disconnection are now exposed.</li>\n<li>Internal cleanup of some of the connection code.</li>\n</ul>\n</dd>\n<dt>0.1.4 (29th October 2012)</dt>\n<dd><ul>\n<li>Handle passing a single recipient as a string, instead of forcing the recipient to be a list.</li>\n<li>Handle utf8 email properly. Thanks, Zhang Mingyuan!\nI doubt I\u2019ve covered every use case, so the charset to use can be passed in when constructing an Email.</li>\n<li>Added a sender_address method to the Outbox class, for when the username used for authentication isn\u2019t good enough.</li>\n</ul>\n</dd>\n<dt>0.1.3 (3rd July 2012)</dt>\n<dd><ul>\n<li>Made a few lines of code a bit easier to follow. No functional changes.</li>\n<li>Updated the license to actually hold copyright in my name, instead of Kenneth Reitz. Does this mean he owned copyright on the library up until now? Can I even change the license? I\u2019m unsure.</li>\n</ul>\n</dd>\n<dt>0.1.2 (2nd June 2012)</dt>\n<dd><ul>\n<li>Made Outbox a context manager, so it can be used with the <cite>with</cite> statement.\nAs noted in the example, this has the added benefit of performing a single login to send all emails, you should get better performance using a with statement.</li>\n<li>Removed raw and filepath arguments to Attachment. They were both begging to point to a file-like object, so that\u2019s what you have now - an argument called <cite>fileobj</cite></li>\n<li>Fixed annoying encoding error when trying to send binary attachments.</li>\n<li>The Email object does not have a <cite>type</cite> argument anymore. Instead, there is <cite>body</cite> and <cite>html_body</cite>, so you can send an email with both html and plain-text bodies.</li>\n</ul>\n</dd>\n<dt>0.1.1 (27th May 2012)</dt>\n<dd><ul>\n<li>Initial release</li>\n</ul>\n</dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 1147884, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "e917000faf85debd1d43be0ba31cd1ec", "sha256": "7f77879d0603868f67a5b8fcb6c7c4dd9fc394259eac75081e025d63fd8f8c44"}, "downloads": -1, "filename": "outbox-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e917000faf85debd1d43be0ba31cd1ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2747, "upload_time": "2012-05-27T12:54:01", "upload_time_iso_8601": "2012-05-27T12:54:01.464117Z", "url": "https://files.pythonhosted.org/packages/59/1f/3a805d5e2f2938003be3f8d96c3711a2c96de5af3599ba59deac2dda763f/outbox-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "59109746378b59a6cd6265ffca7a3bf9", "sha256": "144c57db1e4b67654f67eece3265b1fbad7e591809e6ed30958858e19c2a0fcc"}, "downloads": -1, "filename": "outbox-0.1.2.tar.gz", "has_sig": false, "md5_digest": "59109746378b59a6cd6265ffca7a3bf9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3451, "upload_time": "2012-06-02T07:32:52", "upload_time_iso_8601": "2012-06-02T07:32:52.203071Z", "url": "https://files.pythonhosted.org/packages/fd/6f/21593b42f3f33746de3a3175442720f1dd167565ebcd756169aa5475f8da/outbox-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "63f64bad92d55b1dd85e69568ba7e554", "sha256": "b177e7b578519b35ddeb4eff40e1fab2f1b327e6218549f5b71547f3b09a0757"}, "downloads": -1, "filename": "outbox-0.1.3.tar.gz", "has_sig": false, "md5_digest": "63f64bad92d55b1dd85e69568ba7e554", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3658, "upload_time": "2012-07-31T08:33:07", "upload_time_iso_8601": "2012-07-31T08:33:07.665625Z", "url": "https://files.pythonhosted.org/packages/ef/71/c7e6798927cfaa9b66c896c62116e26fce0b00efad0a48509658835e6d91/outbox-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "60db90818196d8619f649604da4f81ed", "sha256": "e72e2704a414503d69d680d3aaba1dfdd9512cb5c14163ae8e937c943bcd890e"}, "downloads": -1, "filename": "outbox-0.1.4.tar.gz", "has_sig": false, "md5_digest": "60db90818196d8619f649604da4f81ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4033, "upload_time": "2012-08-30T11:40:46", "upload_time_iso_8601": "2012-08-30T11:40:46.709735Z", "url": "https://files.pythonhosted.org/packages/39/d9/8758a4e62dadbd5eaa8dc1055b0b943b1c74f0bb30f3328b8d911cb2650f/outbox-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "e8cb1b4da0c2768e4b2fc497fd51617c", "sha256": "24754b4fffb8c30718c11861a5b5d19db0df97b3c67de3e7203ca26f42f58ac2"}, "downloads": -1, "filename": "outbox-0.1.5.tar.gz", "has_sig": false, "md5_digest": "e8cb1b4da0c2768e4b2fc497fd51617c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4341, "upload_time": "2013-03-03T11:37:08", "upload_time_iso_8601": "2013-03-03T11:37:08.589397Z", "url": "https://files.pythonhosted.org/packages/8b/85/a1b09bb7f87bf92382ad86b3c4d00011e811ff276c7d33d022082ce58c86/outbox-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "d45121d13ef3b425409b1055213e68d7", "sha256": "7391f6242b7ef5aedad16955913c14a655a083f3f4f8b68154c92333ff10be88"}, "downloads": -1, "filename": "outbox-0.1.6.tar.gz", "has_sig": false, "md5_digest": "d45121d13ef3b425409b1055213e68d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4293, "upload_time": "2014-06-24T07:36:13", "upload_time_iso_8601": "2014-06-24T07:36:13.841613Z", "url": "https://files.pythonhosted.org/packages/eb/97/ce22cb52af2d0452e8f39d879b33d395118185f4d706370ab8e37d407f03/outbox-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "e5aa109d57699bcf005b0f90aa058407", "sha256": "1077dffffc01965e1fafa8bfae340957ea01e845be754771e3bb8a8f70f32171"}, "downloads": -1, "filename": "outbox-0.1.7.tar.gz", "has_sig": false, "md5_digest": "e5aa109d57699bcf005b0f90aa058407", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5471, "upload_time": "2014-06-24T16:53:23", "upload_time_iso_8601": "2014-06-24T16:53:23.759301Z", "url": "https://files.pythonhosted.org/packages/68/2c/7415aeacec3bf1b4f990d64fbc115997c6f74a5ff921352e1d9c3fdea516/outbox-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "e710a8ce23dcac0e799a283e7bff17f3", "sha256": "a2d40ec72e8be9c7dc248db2868f3adff34f223dce9f14201fd5eb4363d21c6d"}, "downloads": -1, "filename": "outbox-0.1.8.tar.gz", "has_sig": false, "md5_digest": "e710a8ce23dcac0e799a283e7bff17f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5708, "upload_time": "2014-07-05T04:28:21", "upload_time_iso_8601": "2014-07-05T04:28:21.203960Z", "url": "https://files.pythonhosted.org/packages/5b/23/23bd26c27d1fa47fc18be54cb65fcfa3cfbfbbce0f9a04c66ac27bcb1d96/outbox-0.1.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e710a8ce23dcac0e799a283e7bff17f3", "sha256": "a2d40ec72e8be9c7dc248db2868f3adff34f223dce9f14201fd5eb4363d21c6d"}, "downloads": -1, "filename": "outbox-0.1.8.tar.gz", "has_sig": false, "md5_digest": "e710a8ce23dcac0e799a283e7bff17f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5708, "upload_time": "2014-07-05T04:28:21", "upload_time_iso_8601": "2014-07-05T04:28:21.203960Z", "url": "https://files.pythonhosted.org/packages/5b/23/23bd26c27d1fa47fc18be54cb65fcfa3cfbfbbce0f9a04c66ac27bcb1d96/outbox-0.1.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:43 2020"}