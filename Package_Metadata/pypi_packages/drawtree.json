{"info": {"author": "Madhusudan Banik", "author_email": "msbanik@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4"], "description": "drawtree\n========\n\n.. image:: https://img.shields.io/pypi/v/drawtree.svg?style=flat-square&label=latest%20version\n    :target: https://pypi.python.org/pypi/drawtree\n    :alt: Latest PyPI version\n\n\nDraw binary tree in plain text\n\nUsage\n-----\nDraw tree from level order traversal, '#' signifies a path terminator where no node exists below.\n\n.. code-block:: python\n\n    from drawtree import draw_level_order\n    draw_level_order('{3,9,20,#,#,15,7}')\n\n::\n\n      3\n     / \\\n    9  20\n       / \\\n      15  7\n\nDraw random binary search tree\n\n.. code-block:: python\n\n    from drawtree import draw_random_bst\n    draw_random_bst(10)\n\n::\n\n        64\n        / \\\n       /   \\\n      4    66\n       \\     \\\n       37    70\n       / \\\n      8  51\n     / \\\n    6  12\n         \\\n         21\n\nDraw binary search tree from integer array\n\n.. code-block:: python\n\n    from drawtree import draw_bst\n    nums = [55, 30, 10, 5, 2, 20, 15, 25, 40, 35, 70, 60, 80, 75, 95]\n    draw_bst(nums)\n\n::\n\n                 55\n                 / \\\n                /   \\\n               /     \\\n              /       \\\n             30       70\n            / \\       / \\\n           /   \\     /   \\\n          /     \\   60   80\n         10     40       / \\\n        / \\     /       /   \\\n       /   \\   35      75   95\n      5    20\n     /     / \\\n    2     /   \\\n         15   25\n\n\nCommand line\n------------\n\nFlags:\n -p, --preorder    interpet sequence as preorder    \n -b, --balanced    auto balance bst\n -l, --level-order interpet sequence as level-order\n\nPrint a bst:\n\n.. code-block:: bash\n\n    $ bst 10 5 8 4 6 \n    $ bst nodes.txt\n    $ echo \"colin eric dave\" | bst\n    $ cat nodes.txt | sort | uniq | bst\n\nPrint a balanced bst:\n\n.. code-block:: bash\n\n    $ bst -b 10 5 6 9 3\n    $ bst -b nodes.txt\n    $ bst -b < nodes.txt\n\nPrint a bst from a preorder expression:\n\n.. code-block:: bash\n\n    $ bst -p dave colin dan\n    $ echo \"1 2 3 4 5\" | bst -p\n    $ bst -p nodes.txt  \n\nPrint a binary tree from a level order expression:\n\n.. code-block:: bash\n\n    $ bst -l [4,#,7,5,9,#]   (leetcode format)\n    $ bst -l {4 # 7 5} \n\nPrint a random bst:\n\n.. code-block:: bash\n\n    $ bst           (random bst of 10 nodes)\n    $ bst 5         (random bst of 5 nodes)\n    $ bst -b 7      (random balanced bst of 7 nodes)\n\n\nInstallation\n------------\nTo install drawtree, simply:\n\n.. code-block:: bash\n\n    $ pip install drawtree\n\n\nLicence\n-------\nMIT\n\nReference\n---------\n`Draw tree <http://web.archive.org/web/20071224095835/http://www.openasthra.com/wp-content/uploads/2007/12/binary_trees1.c>`_\n\nAuthors\n-------\n\n`drawtree` was written by `Madhusudan Banik <msbanik@gmail.com>`_.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/msbanik/drawtree.git", "keywords": "tree draw ascii", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "drawtree", "package_url": "https://pypi.org/project/drawtree/", "platform": "", "project_url": "https://pypi.org/project/drawtree/", "project_urls": {"Homepage": "https://github.com/msbanik/drawtree.git"}, "release_url": "https://pypi.org/project/drawtree/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "Draw binary tree in plain text", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            drawtree<br>========<br><br>.. image:: https://img.shields.io/pypi/v/drawtree.svg?style=flat-square&amp;label=latest%20version<br>    :target: https://pypi.python.org/pypi/drawtree<br>    :alt: Latest PyPI version<br><br><br>Draw binary tree in plain text<br><br>Usage<br>-----<br>Draw tree from level order traversal, '#' signifies a path terminator where no node exists below.<br><br>.. code-block:: python<br><br>    from drawtree import draw_level_order<br>    draw_level_order('{3,9,20,#,#,15,7}')<br><br>::<br><br>      3<br>     / \\<br>    9  20<br>       / \\<br>      15  7<br><br>Draw random binary search tree<br><br>.. code-block:: python<br><br>    from drawtree import draw_random_bst<br>    draw_random_bst(10)<br><br>::<br><br>        64<br>        / \\<br>       /   \\<br>      4    66<br>       \\     \\<br>       37    70<br>       / \\<br>      8  51<br>     / \\<br>    6  12<br>         \\<br>         21<br><br>Draw binary search tree from integer array<br><br>.. code-block:: python<br><br>    from drawtree import draw_bst<br>    nums = [55, 30, 10, 5, 2, 20, 15, 25, 40, 35, 70, 60, 80, 75, 95]<br>    draw_bst(nums)<br><br>::<br><br>                 55<br>                 / \\<br>                /   \\<br>               /     \\<br>              /       \\<br>             30       70<br>            / \\       / \\<br>           /   \\     /   \\<br>          /     \\   60   80<br>         10     40       / \\<br>        / \\     /       /   \\<br>       /   \\   35      75   95<br>      5    20<br>     /     / \\<br>    2     /   \\<br>         15   25<br><br><br>Command line<br>------------<br><br>Flags:<br> -p, --preorder    interpet sequence as preorder    <br> -b, --balanced    auto balance bst<br> -l, --level-order interpet sequence as level-order<br><br>Print a bst:<br><br>.. code-block:: bash<br><br>    $ bst 10 5 8 4 6 <br>    $ bst nodes.txt<br>    $ echo \"colin eric dave\" | bst<br>    $ cat nodes.txt | sort | uniq | bst<br><br>Print a balanced bst:<br><br>.. code-block:: bash<br><br>    $ bst -b 10 5 6 9 3<br>    $ bst -b nodes.txt<br>    $ bst -b &lt; nodes.txt<br><br>Print a bst from a preorder expression:<br><br>.. code-block:: bash<br><br>    $ bst -p dave colin dan<br>    $ echo \"1 2 3 4 5\" | bst -p<br>    $ bst -p nodes.txt  <br><br>Print a binary tree from a level order expression:<br><br>.. code-block:: bash<br><br>    $ bst -l [4,#,7,5,9,#]   (leetcode format)<br>    $ bst -l {4 # 7 5} <br><br>Print a random bst:<br><br>.. code-block:: bash<br><br>    $ bst           (random bst of 10 nodes)<br>    $ bst 5         (random bst of 5 nodes)<br>    $ bst -b 7      (random balanced bst of 7 nodes)<br><br><br>Installation<br>------------<br>To install drawtree, simply:<br><br>.. code-block:: bash<br><br>    $ pip install drawtree<br><br><br>Licence<br>-------<br>MIT<br><br>Reference<br>---------<br>`Draw tree &lt;http://web.archive.org/web/20071224095835/http://www.openasthra.com/wp-content/uploads/2007/12/binary_trees1.c&gt;`_<br><br>Authors<br>-------<br><br>`drawtree` was written by `Madhusudan Banik &lt;msbanik@gmail.com&gt;`_.\n          </div>"}, "last_serial": 3510324, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "dcae069e4ef06f02e0115e33e062e607", "sha256": "55dd0fe6fa91c106c28f2b673edf646d12483db1bcf951ebe2d0d8257237d11a"}, "downloads": -1, "filename": "drawtree-0.1.1.tar.gz", "has_sig": false, "md5_digest": "dcae069e4ef06f02e0115e33e062e607", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4388, "upload_time": "2015-10-03T00:11:09", "upload_time_iso_8601": "2015-10-03T00:11:09.609678Z", "url": "https://files.pythonhosted.org/packages/40/bd/f810df4b5d68b9697520787e4e32250542ad2c58388719a517e3749618c0/drawtree-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "073ff54278b6aed2f3b22b7fb5d97ce2", "sha256": "862d26dfaffaa83d92bb3cefd53982b531bc2402bf3584492f1a6af086cc7ec8"}, "downloads": -1, "filename": "drawtree-0.1.2.tar.gz", "has_sig": false, "md5_digest": "073ff54278b6aed2f3b22b7fb5d97ce2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5395, "upload_time": "2018-01-22T07:15:51", "upload_time_iso_8601": "2018-01-22T07:15:51.410549Z", "url": "https://files.pythonhosted.org/packages/34/9c/4e9bc0c12958ec4299ad204af70ad577b8fe529767629b419b94365e4372/drawtree-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "073ff54278b6aed2f3b22b7fb5d97ce2", "sha256": "862d26dfaffaa83d92bb3cefd53982b531bc2402bf3584492f1a6af086cc7ec8"}, "downloads": -1, "filename": "drawtree-0.1.2.tar.gz", "has_sig": false, "md5_digest": "073ff54278b6aed2f3b22b7fb5d97ce2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5395, "upload_time": "2018-01-22T07:15:51", "upload_time_iso_8601": "2018-01-22T07:15:51.410549Z", "url": "https://files.pythonhosted.org/packages/34/9c/4e9bc0c12958ec4299ad204af70ad577b8fe529767629b419b94365e4372/drawtree-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:51 2020"}