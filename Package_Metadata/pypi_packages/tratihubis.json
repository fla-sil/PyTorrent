{"info": {"author": "Thomas Aglassinger", "author_email": "roskakori@users.sourceforge.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Bug Tracking"], "description": "Tratihubis converts Trac tickets to Github issues by using the following steps:\n\n1. The user manually exports the Trac tickets to convert to a CSV file.\n2. Tratihubis reads the CSV file and uses the data to create Github issues and milestones.\n\n\nInstallation\n============\n\nTo install tratihubis, use ``pip`` or ``easy_install``::\n\n  $ pip install tratihubis\n\nIf necessary, this also installs the `PyGithub <http://pypi.python.org/pypi/PyGithub/>`_ package.\n\n\nUsage\n=====\n\nInformation about Trac tickets to convert has to be provided in a CSV file. To obtain this CSV file, create a\nnew Trac queries using the SQL statement stored in\n`query_tickets.sql <https://github.com/roskakori/tratihubis/blob/master/query_tickets.sql>`_  and\n`query_comments.sql <https://github.com/roskakori/tratihubis/blob/master/query_comments.sql>`_.   Then\nexecute the queries and save the results by clicking \"Download in other formats: Comma-delimited Text\" and\nchoosing for example ``/Users/me/mytool/tickets.csv`` and ``/Users/me/mytool/comments.csv`` as output files.\n\nNext create a config file to describe how to login to Github and what to convert. For example, you could\nstore the following in ``~/mytool/tratihubis.cfg``::\n\n  [tratihubis]\n  user = someone\n  password = secret\n  repo = mytool\n  tickets = /Users/me/mytool/tickets.csv\n  comments = /Users/me/mytool/comments.csv\n\nThen run::\n\n  $ tratihubis ~/mytool/tratihubis.cfg\n\nThis tests that the input data and Github information is valid and writes a log to the console describing\nwhich operations would be performed.\n\nTo actually create the Github issues, you need to enable to command line option ``--really``::\n\n  $ tratihubis --really ~/mytool/tratihubis.cfg\n\nBe aware that Github issues and milestones cannot be deleted in case you mess up. Your only remedy is to\nremove the whole repository and start anew. So make sure that tratihubis does what you want before you\nenable ``--really``.\n\nMapping users\n-------------\n\nIn case the Trac users have different user names on Github, you can specify a mapping. For example::\n\n   users = johndoe: jdoe78, *: me\n\nThis would map the Trac user ``johndoe`` to the Github user ``jdoe78`` and everyone else to the user ``me``.\nThe default value is::\n\n  users = *:*\n\nThis maps every Trac user to a Github user with the same name.\n\nMapping labels\n--------------\n\nGithub labels somewhat mimic the functionality Trac stores in the ``type`` and ``resolution`` field of\ntickets. By default, Github supports the following labels:\n\n* bug\n* duplicate\n* enhancement\n* invalid\n* question\n* wontfix\n\nTrac on the other hand has a ``type`` field which by default can be:\n\n* bug\n* enhancement\n* task\n\nFurthermore closed Trac tickets have a ``resolution`` which, among others, can be:\n\n* duplicate\n* invalid\n* wontfix\n\nThe ``labels`` config option allows to map Trac fields to Github labels. For example::\n\n  labels = type=defect: bug, type=enhancement: enhancement, resolution=wontfix: wontfix\n\nHere, ``labels`` is a comma separated list of mappings taking the form\n``<trac-field>=<trac-value>:<github-label>``.\n\nIn case types or labels contain other characters than ASCII letters, digits and underscore (_), put them\nbetween quotes::\n\n  labels = type=\"software defect\": bug\n\n\nAttachments\n-----------\n\nYou can find some notes on this in `issue #19 <https://github.com/roskakori/tratihubis/issues/19>`: Add\ndocumentation for ``attachmentsprefix``.\n\n\nLimitations\n===========\n\nThe author of Github issues and comments always is the user specified in the config, even if a different\nuser opened the original Trac ticket or wrote the original Trac comment.\n\nGithub issues and comments have the current time as time stamp instead if time from Trac.\n\nGithub issue descriptions contains the raw Trac Wiki markup, there is no translation to Github markdown.\n\nThe due date of Trac milestones is not migrated to Github milestones, so when the conversion is done, you\nhave to set it manually.\n\nTrac Milestone without any tickets are not converted to Github milestone.\n\n\nSupport\n=======\n\nIn case of questions and problems, open an issue at <https://github.com/roskakori/tratihubis/issues>.\n\nTo obtain the source code or create your own fork to implement fixes or improvements, visit\n<https://github.com/roskakori/tratihubis>.\n\n\nLicense\n=======\n\nCopyright (c) 2012-2013, Thomas Aglassinger. All rights reserved. Distributed under the\n`BSD License <http://www.opensource.org/licenses/bsd-license.php>`_.\n\n\nChanges\n=======\n\nVersion 0.5, 2013-02-13\n\n(Contributed by Steven Di Rocco)\n\n* Added support for file attachments.\n* Added work around for information lost due GitHub API limitations:\n  * Added trac commenter and date at the top of each comment.\n  * Added automatic comment to each isseu showing original author, date authored, and last modification date.\n* Fixed API calls to work with PyGithub 1.8.\n\nVersion 0.4, 2012-05-04\n\n* Added config option ``labels`` to map Trac status and resolution to  Github labels.\n\nVersion 0.3, 2012-05-03\n\n* Added config option ``comments`` to convert Trac ticket comments.\n* Added closing of issue for which the corresponding Trac ticket has been closed already.\n* Added validation of users issues are assigned to. They must have an active Github user.\n\nVersion 0.2, 2012-05-02\n\n* Added config option ``users`` to map Trac users to Github users.\n* Added binary in order to run ``tratihubis`` instead of ``python -m tratihubis``.\n* Changed supposed issue number in log to take existing issues in account.\n\nVersion 0.1, 2012-05-01\n\n* Initial release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/tratihubis/", "keywords": "trac github ticket issue convert migrate", "license": "BSD License", "maintainer": null, "maintainer_email": null, "name": "tratihubis", "package_url": "https://pypi.org/project/tratihubis/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tratihubis/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/tratihubis/"}, "release_url": "https://pypi.org/project/tratihubis/0.5/", "requires_dist": null, "requires_python": null, "summary": "convert Trac tickets to Github issues", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Tratihubis converts Trac tickets to Github issues by using the following steps:</p>\n<ol>\n<li>The user manually exports the Trac tickets to convert to a CSV file.</li>\n<li>Tratihubis reads the CSV file and uses the data to create Github issues and milestones.</li>\n</ol>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install tratihubis, use <tt>pip</tt> or <tt>easy_install</tt>:</p>\n<pre>$ pip install tratihubis\n</pre>\n<p>If necessary, this also installs the <a href=\"http://pypi.python.org/pypi/PyGithub/\" rel=\"nofollow\">PyGithub</a> package.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Information about Trac tickets to convert has to be provided in a CSV file. To obtain this CSV file, create a\nnew Trac queries using the SQL statement stored in\n<a href=\"https://github.com/roskakori/tratihubis/blob/master/query_tickets.sql\" rel=\"nofollow\">query_tickets.sql</a>  and\n<a href=\"https://github.com/roskakori/tratihubis/blob/master/query_comments.sql\" rel=\"nofollow\">query_comments.sql</a>.   Then\nexecute the queries and save the results by clicking \u201cDownload in other formats: Comma-delimited Text\u201d and\nchoosing for example <tt>/Users/me/mytool/tickets.csv</tt> and <tt>/Users/me/mytool/comments.csv</tt> as output files.</p>\n<p>Next create a config file to describe how to login to Github and what to convert. For example, you could\nstore the following in <tt>~/mytool/tratihubis.cfg</tt>:</p>\n<pre>[tratihubis]\nuser = someone\npassword = secret\nrepo = mytool\ntickets = /Users/me/mytool/tickets.csv\ncomments = /Users/me/mytool/comments.csv\n</pre>\n<p>Then run:</p>\n<pre>$ tratihubis ~/mytool/tratihubis.cfg\n</pre>\n<p>This tests that the input data and Github information is valid and writes a log to the console describing\nwhich operations would be performed.</p>\n<p>To actually create the Github issues, you need to enable to command line option <tt><span class=\"pre\">--really</span></tt>:</p>\n<pre>$ tratihubis --really ~/mytool/tratihubis.cfg\n</pre>\n<p>Be aware that Github issues and milestones cannot be deleted in case you mess up. Your only remedy is to\nremove the whole repository and start anew. So make sure that tratihubis does what you want before you\nenable <tt><span class=\"pre\">--really</span></tt>.</p>\n<div id=\"mapping-users\">\n<h3>Mapping users</h3>\n<p>In case the Trac users have different user names on Github, you can specify a mapping. For example:</p>\n<pre>users = johndoe: jdoe78, *: me\n</pre>\n<p>This would map the Trac user <tt>johndoe</tt> to the Github user <tt>jdoe78</tt> and everyone else to the user <tt>me</tt>.\nThe default value is:</p>\n<pre>users = *:*\n</pre>\n<p>This maps every Trac user to a Github user with the same name.</p>\n</div>\n<div id=\"mapping-labels\">\n<h3>Mapping labels</h3>\n<p>Github labels somewhat mimic the functionality Trac stores in the <tt>type</tt> and <tt>resolution</tt> field of\ntickets. By default, Github supports the following labels:</p>\n<ul>\n<li>bug</li>\n<li>duplicate</li>\n<li>enhancement</li>\n<li>invalid</li>\n<li>question</li>\n<li>wontfix</li>\n</ul>\n<p>Trac on the other hand has a <tt>type</tt> field which by default can be:</p>\n<ul>\n<li>bug</li>\n<li>enhancement</li>\n<li>task</li>\n</ul>\n<p>Furthermore closed Trac tickets have a <tt>resolution</tt> which, among others, can be:</p>\n<ul>\n<li>duplicate</li>\n<li>invalid</li>\n<li>wontfix</li>\n</ul>\n<p>The <tt>labels</tt> config option allows to map Trac fields to Github labels. For example:</p>\n<pre>labels = type=defect: bug, type=enhancement: enhancement, resolution=wontfix: wontfix\n</pre>\n<p>Here, <tt>labels</tt> is a comma separated list of mappings taking the form\n<tt><span class=\"pre\">&lt;trac-field&gt;=&lt;trac-value&gt;:&lt;github-label&gt;</span></tt>.</p>\n<p>In case types or labels contain other characters than ASCII letters, digits and underscore (_), put them\nbetween quotes:</p>\n<pre>labels = type=\"software defect\": bug\n</pre>\n</div>\n<div id=\"attachments\">\n<h3>Attachments</h3>\n<p>You can find some notes on this in <cite>issue #19 &lt;https://github.com/roskakori/tratihubis/issues/19&gt;</cite>: Add\ndocumentation for <tt>attachmentsprefix</tt>.</p>\n</div>\n</div>\n<div id=\"limitations\">\n<h2>Limitations</h2>\n<p>The author of Github issues and comments always is the user specified in the config, even if a different\nuser opened the original Trac ticket or wrote the original Trac comment.</p>\n<p>Github issues and comments have the current time as time stamp instead if time from Trac.</p>\n<p>Github issue descriptions contains the raw Trac Wiki markup, there is no translation to Github markdown.</p>\n<p>The due date of Trac milestones is not migrated to Github milestones, so when the conversion is done, you\nhave to set it manually.</p>\n<p>Trac Milestone without any tickets are not converted to Github milestone.</p>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<p>In case of questions and problems, open an issue at &lt;<a href=\"https://github.com/roskakori/tratihubis/issues\" rel=\"nofollow\">https://github.com/roskakori/tratihubis/issues</a>&gt;.</p>\n<p>To obtain the source code or create your own fork to implement fixes or improvements, visit\n&lt;<a href=\"https://github.com/roskakori/tratihubis\" rel=\"nofollow\">https://github.com/roskakori/tratihubis</a>&gt;.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright (c) 2012-2013, Thomas Aglassinger. All rights reserved. Distributed under the\n<a href=\"http://www.opensource.org/licenses/bsd-license.php\" rel=\"nofollow\">BSD License</a>.</p>\n</div>\n<div id=\"changes\">\n<h2>Changes</h2>\n<p>Version 0.5, 2013-02-13</p>\n<p>(Contributed by Steven Di Rocco)</p>\n<ul>\n<li>Added support for file attachments.</li>\n<li>Added work around for information lost due GitHub API limitations:\n* Added trac commenter and date at the top of each comment.\n* Added automatic comment to each isseu showing original author, date authored, and last modification date.</li>\n<li>Fixed API calls to work with PyGithub 1.8.</li>\n</ul>\n<p>Version 0.4, 2012-05-04</p>\n<ul>\n<li>Added config option <tt>labels</tt> to map Trac status and resolution to  Github labels.</li>\n</ul>\n<p>Version 0.3, 2012-05-03</p>\n<ul>\n<li>Added config option <tt>comments</tt> to convert Trac ticket comments.</li>\n<li>Added closing of issue for which the corresponding Trac ticket has been closed already.</li>\n<li>Added validation of users issues are assigned to. They must have an active Github user.</li>\n</ul>\n<p>Version 0.2, 2012-05-02</p>\n<ul>\n<li>Added config option <tt>users</tt> to map Trac users to Github users.</li>\n<li>Added binary in order to run <tt>tratihubis</tt> instead of <tt>python <span class=\"pre\">-m</span> tratihubis</tt>.</li>\n<li>Changed supposed issue number in log to take existing issues in account.</li>\n</ul>\n<p>Version 0.1, 2012-05-01</p>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 800902, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "2e8f4ffec7dde169c7b7970ab1b7601b", "sha256": "d154cda50195892f46075d411410b87b1642c4e363ed869946fc0645390cea73"}, "downloads": -1, "filename": "tratihubis-0.1.zip", "has_sig": false, "md5_digest": "2e8f4ffec7dde169c7b7970ab1b7601b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17825, "upload_time": "2012-05-01T09:00:24", "upload_time_iso_8601": "2012-05-01T09:00:24.806398Z", "url": "https://files.pythonhosted.org/packages/4a/a6/53e3dafefb3542c90ac500b5ca56d822f3d2f5c07c2584bc8845fdee804d/tratihubis-0.1.zip", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "a41fb47971587f4fcc5606bf3a9b44a8", "sha256": "1e92ceae66caf1c3a2305000f29cbcd11f959407a9cec8aa8b7bb177a3c3df3b"}, "downloads": -1, "filename": "tratihubis-0.2.zip", "has_sig": false, "md5_digest": "a41fb47971587f4fcc5606bf3a9b44a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23795, "upload_time": "2012-05-02T07:36:42", "upload_time_iso_8601": "2012-05-02T07:36:42.924291Z", "url": "https://files.pythonhosted.org/packages/bd/94/539fa68e1e8f5a8355b81435dca2f8c25e8f725b4b08fa05ca32dee50267/tratihubis-0.2.zip", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "737fc7fd438874efe1857296054cde9c", "sha256": "48a7006ae11340de987189291a0b77a0b47b51f512e66c3f652b493b28ede54e"}, "downloads": -1, "filename": "tratihubis-0.3.zip", "has_sig": false, "md5_digest": "737fc7fd438874efe1857296054cde9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25226, "upload_time": "2012-05-04T00:48:08", "upload_time_iso_8601": "2012-05-04T00:48:08.594508Z", "url": "https://files.pythonhosted.org/packages/12/87/9fe360bfe47bb45a982941d5207820ec7409a07100a274e31c4c8c7bb2ad/tratihubis-0.3.zip", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "da6f7e2480a00631ecb3ea56b47f8e86", "sha256": "b0c7f9da0284238c82f06fd65925cb990048a43c9d12f763fdb75fc1b13e7d69"}, "downloads": -1, "filename": "tratihubis-0.4.zip", "has_sig": false, "md5_digest": "da6f7e2480a00631ecb3ea56b47f8e86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27807, "upload_time": "2012-05-04T21:16:33", "upload_time_iso_8601": "2012-05-04T21:16:33.733727Z", "url": "https://files.pythonhosted.org/packages/b1/5f/354b9a1f062efb52198403f4b907dd5d2e2d48e63bbc7906836847605b37/tratihubis-0.4.zip", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "788c1d344488d848a2e77b834dd916d4", "sha256": "b8bfcaffa2978f571542dc520bd962a821aa76100152c39416cb748c86fdc85f"}, "downloads": -1, "filename": "tratihubis-0.5.zip", "has_sig": false, "md5_digest": "788c1d344488d848a2e77b834dd916d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29758, "upload_time": "2013-02-16T20:15:31", "upload_time_iso_8601": "2013-02-16T20:15:31.200198Z", "url": "https://files.pythonhosted.org/packages/7c/69/7ef0f270f62a29a6b1b87e35cea78ba178556d47f382c86f2f6dec7350a8/tratihubis-0.5.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "788c1d344488d848a2e77b834dd916d4", "sha256": "b8bfcaffa2978f571542dc520bd962a821aa76100152c39416cb748c86fdc85f"}, "downloads": -1, "filename": "tratihubis-0.5.zip", "has_sig": false, "md5_digest": "788c1d344488d848a2e77b834dd916d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29758, "upload_time": "2013-02-16T20:15:31", "upload_time_iso_8601": "2013-02-16T20:15:31.200198Z", "url": "https://files.pythonhosted.org/packages/7c/69/7ef0f270f62a29a6b1b87e35cea78ba178556d47f382c86f2f6dec7350a8/tratihubis-0.5.zip", "yanked": false}], "timestamp": "Fri May  8 03:47:51 2020"}