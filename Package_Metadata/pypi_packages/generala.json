{"info": {"author": "Gabriel Gerlero", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Games/Entertainment", "Topic :: Software Development :: Libraries"], "description": "# generala\n\n**generala** is a probabilistic tool for the [dice game of Generala](https://en.wikipedia.org/wiki/Generala).\n\n**generala** helps you decide which dice to hold after each roll. Starting from the dice you have, the tool considers all possible future rolls to find which combinations of held dice give the best expected scores for the different categories. It uses every CPU core available to lower the computation times to just a few seconds.\n\nThe categories and scores in the tool correspond to the variant of the game played in my family. As there are many variants of the game\u2014each of which assigns scores to the categories differently\u2014you may want to check out the ```generala.categories``` module and modify it as desired.\n\n## Installation\n\n**generala** is available as a [Python package on PyPI](https://pypi.org/projects/generala). Assuming you have Python 3.5 or later, install it by running the command:\n\n```bash\n$ pip3 install generala\n```\n\nor:\n\n```bash\n$ python3 -m pip install generala\n```\n\nOptionally, a ```--user``` option can be added to the previous commands to install the tool for the current user only (to avoid the need for system administrator privileges).\n\n## Usage\n\n### Command-line usage\n\nSuppose we got the dice (4,4,1,2,6) on the first roll in a game. Run **generala** as:\n\n```bash\n$ generala 1 44126\n```\n\nor, alternatively:\n\n```bash\n$ python3 -m generala 1 44126\n```\n\nThe program responds with the best expected scores for each category. The third column (\"Hold dice\") tells us which dice we should hold for the expected score to apply. The final row (\"any\") looks to maximize the overall expected score irrespective of category.\n\n```\nComputing. This may take a few seconds....\n   Category    Expected score Hold dice\n      1s             2.22     1\n      2s             4.44     2\n      3s             4.58     none\n      4s            11.67     44\n      5s             7.64     none\n      6s            13.33     6\n   Straight          5.52     24\n  Full house        13.47     44\nFour of a kind      17.18     44\n   Generala          2.91     44\nDouble Generala      0.00     any\n      any           33.15     44\n```\n\nLet's say we kept (4,4) and got (5,4,3) on the second roll. We run **generala** again:\n\n```bash\n$ generala 2 44543\n```\n\nThe tool outputs:\n\n```\n   Category    Expected score Hold dice\n      1s             0.83     none\n      2s             1.67     none\n      3s             5.00     3\n      4s            13.33     444\n      5s             8.33     5\n      6s             5.00     none\n   Straight          3.33     345\n  Full house         8.33     4445 or 3444\nFour of a kind      22.22     444\n   Generala          2.78     444\nDouble Generala      0.00     any\n      any           38.61     444\n```\n\nAfter the third and final roll, the tool can give the final scores. Assuming we have the dice (4,4,4,3,2):\n\n```bash\n$ generala 3 44432\n```\n\n```\n   Category      Score   \n      1s            0\n      2s            2\n      3s            3\n      4s           12\n      5s            0\n      6s            0\n   Straight         0\n  Full house        0\nFour of a kind      0\n   Generala         0\nDouble Generala     0\n      any          12\n```\n\n#### Closed categories\n\nYou can also specify, via options, which categories are closed (i.e., no longer available for scoring). For example, with:\n\n```bash\n$ generala -46fpg 1 44126\n```\n\nwe tell the tool that the categories 4s, 6s, Full house, Four of a kind, and Generala are closed\u2014which results in those categories not being considered in the computation:\n\n```\n   Category    Expected score Hold dice\n      1s             2.22     1\n      2s             4.44     2\n      3s             4.58     none\n      5s             7.64     none\n   Straight          5.52     24\nDouble Generala      5.81     44\n      any           12.00     44\n```\n\nFor a list of all available options, run:\n\n```bash\n$ generala --help\n```\n\n### As a Python package\n\nIt is also possible to call into the functionality from a Python program. Here's an example.\n\n```python\nfrom generala import expected_score, counts, dice\nfrom generala.categories import straight, all_categories\n\nc = counts((4,4,1,2,6))\n\nscore, held = expected_score(category=straight, counts=c, roll=1, open_categories=all_categories, return_held=True)\n\nprint(\"Hold dice {}. Expected score: {:.2f}\".format(dice(held[0]), score))\n\n```\n\nWhen run, that snippet will print:\n\n```\nHold dice (2, 4). Expected score: 5.52\n```\n\nThat's all. Good luck!", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gerlero/generala", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "generala", "package_url": "https://pypi.org/project/generala/", "platform": "", "project_url": "https://pypi.org/project/generala/", "project_urls": {"Bug Tracker": "https://github.com/gerlero/generala/issues", "Homepage": "https://github.com/gerlero/generala", "Source Code": "https://github.com/gerlero/generala"}, "release_url": "https://pypi.org/project/generala/1.0.1/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Maximize your score in a turn of the Generala dice game", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>generala</h1>\n<p><strong>generala</strong> is a probabilistic tool for the <a href=\"https://en.wikipedia.org/wiki/Generala\" rel=\"nofollow\">dice game of Generala</a>.</p>\n<p><strong>generala</strong> helps you decide which dice to hold after each roll. Starting from the dice you have, the tool considers all possible future rolls to find which combinations of held dice give the best expected scores for the different categories. It uses every CPU core available to lower the computation times to just a few seconds.</p>\n<p>The categories and scores in the tool correspond to the variant of the game played in my family. As there are many variants of the game\u2014each of which assigns scores to the categories differently\u2014you may want to check out the <code>generala.categories</code> module and modify it as desired.</p>\n<h2>Installation</h2>\n<p><strong>generala</strong> is available as a <a href=\"https://pypi.org/projects/generala\" rel=\"nofollow\">Python package on PyPI</a>. Assuming you have Python 3.5 or later, install it by running the command:</p>\n<pre>$ pip3 install generala\n</pre>\n<p>or:</p>\n<pre>$ python3 -m pip install generala\n</pre>\n<p>Optionally, a <code>--user</code> option can be added to the previous commands to install the tool for the current user only (to avoid the need for system administrator privileges).</p>\n<h2>Usage</h2>\n<h3>Command-line usage</h3>\n<p>Suppose we got the dice (4,4,1,2,6) on the first roll in a game. Run <strong>generala</strong> as:</p>\n<pre>$ generala <span class=\"m\">1</span> <span class=\"m\">44126</span>\n</pre>\n<p>or, alternatively:</p>\n<pre>$ python3 -m generala <span class=\"m\">1</span> <span class=\"m\">44126</span>\n</pre>\n<p>The program responds with the best expected scores for each category. The third column (\"Hold dice\") tells us which dice we should hold for the expected score to apply. The final row (\"any\") looks to maximize the overall expected score irrespective of category.</p>\n<pre><code>Computing. This may take a few seconds....\n   Category    Expected score Hold dice\n      1s             2.22     1\n      2s             4.44     2\n      3s             4.58     none\n      4s            11.67     44\n      5s             7.64     none\n      6s            13.33     6\n   Straight          5.52     24\n  Full house        13.47     44\nFour of a kind      17.18     44\n   Generala          2.91     44\nDouble Generala      0.00     any\n      any           33.15     44\n</code></pre>\n<p>Let's say we kept (4,4) and got (5,4,3) on the second roll. We run <strong>generala</strong> again:</p>\n<pre>$ generala <span class=\"m\">2</span> <span class=\"m\">44543</span>\n</pre>\n<p>The tool outputs:</p>\n<pre><code>   Category    Expected score Hold dice\n      1s             0.83     none\n      2s             1.67     none\n      3s             5.00     3\n      4s            13.33     444\n      5s             8.33     5\n      6s             5.00     none\n   Straight          3.33     345\n  Full house         8.33     4445 or 3444\nFour of a kind      22.22     444\n   Generala          2.78     444\nDouble Generala      0.00     any\n      any           38.61     444\n</code></pre>\n<p>After the third and final roll, the tool can give the final scores. Assuming we have the dice (4,4,4,3,2):</p>\n<pre>$ generala <span class=\"m\">3</span> <span class=\"m\">44432</span>\n</pre>\n<pre><code>   Category      Score   \n      1s            0\n      2s            2\n      3s            3\n      4s           12\n      5s            0\n      6s            0\n   Straight         0\n  Full house        0\nFour of a kind      0\n   Generala         0\nDouble Generala     0\n      any          12\n</code></pre>\n<h4>Closed categories</h4>\n<p>You can also specify, via options, which categories are closed (i.e., no longer available for scoring). For example, with:</p>\n<pre>$ generala -46fpg <span class=\"m\">1</span> <span class=\"m\">44126</span>\n</pre>\n<p>we tell the tool that the categories 4s, 6s, Full house, Four of a kind, and Generala are closed\u2014which results in those categories not being considered in the computation:</p>\n<pre><code>   Category    Expected score Hold dice\n      1s             2.22     1\n      2s             4.44     2\n      3s             4.58     none\n      5s             7.64     none\n   Straight          5.52     24\nDouble Generala      5.81     44\n      any           12.00     44\n</code></pre>\n<p>For a list of all available options, run:</p>\n<pre>$ generala --help\n</pre>\n<h3>As a Python package</h3>\n<p>It is also possible to call into the functionality from a Python program. Here's an example.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">generala</span> <span class=\"kn\">import</span> <span class=\"n\">expected_score</span><span class=\"p\">,</span> <span class=\"n\">counts</span><span class=\"p\">,</span> <span class=\"n\">dice</span>\n<span class=\"kn\">from</span> <span class=\"nn\">generala.categories</span> <span class=\"kn\">import</span> <span class=\"n\">straight</span><span class=\"p\">,</span> <span class=\"n\">all_categories</span>\n\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">counts</span><span class=\"p\">((</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">))</span>\n\n<span class=\"n\">score</span><span class=\"p\">,</span> <span class=\"n\">held</span> <span class=\"o\">=</span> <span class=\"n\">expected_score</span><span class=\"p\">(</span><span class=\"n\">category</span><span class=\"o\">=</span><span class=\"n\">straight</span><span class=\"p\">,</span> <span class=\"n\">counts</span><span class=\"o\">=</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">roll</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">open_categories</span><span class=\"o\">=</span><span class=\"n\">all_categories</span><span class=\"p\">,</span> <span class=\"n\">return_held</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Hold dice </span><span class=\"si\">{}</span><span class=\"s2\">. Expected score: </span><span class=\"si\">{:.2f}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">dice</span><span class=\"p\">(</span><span class=\"n\">held</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"n\">score</span><span class=\"p\">))</span>\n</pre>\n<p>When run, that snippet will print:</p>\n<pre><code>Hold dice (2, 4). Expected score: 5.52\n</code></pre>\n<p>That's all. Good luck!</p>\n\n          </div>"}, "last_serial": 6533257, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "747921bee3b1bace669eda4be7282dcd", "sha256": "ec2e36ae1b8c9c1cc8d59c755e2afb5b8e9ed47f01b22ba58eb11fb549be6907"}, "downloads": -1, "filename": "generala-1.0.0.tar.gz", "has_sig": false, "md5_digest": "747921bee3b1bace669eda4be7282dcd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5839, "upload_time": "2020-01-28T16:04:09", "upload_time_iso_8601": "2020-01-28T16:04:09.230783Z", "url": "https://files.pythonhosted.org/packages/7a/4d/f885314d3065c2d68158c2bfc4c9713639f716cbae789c37e3e48d5a62e8/generala-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "bed4ddd70b79d5f596565450c2dbc3f9", "sha256": "b35f210c4053180764313bc12b12758d9876d9e88a9929c4c8288c056920a21f"}, "downloads": -1, "filename": "generala-1.0.1.tar.gz", "has_sig": false, "md5_digest": "bed4ddd70b79d5f596565450c2dbc3f9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6872, "upload_time": "2020-01-28T16:32:37", "upload_time_iso_8601": "2020-01-28T16:32:37.802687Z", "url": "https://files.pythonhosted.org/packages/ea/ca/3a88b3e3c2c755ca31f5c2d4a6851096296dbc65c0f18da1cea8833505a2/generala-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bed4ddd70b79d5f596565450c2dbc3f9", "sha256": "b35f210c4053180764313bc12b12758d9876d9e88a9929c4c8288c056920a21f"}, "downloads": -1, "filename": "generala-1.0.1.tar.gz", "has_sig": false, "md5_digest": "bed4ddd70b79d5f596565450c2dbc3f9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6872, "upload_time": "2020-01-28T16:32:37", "upload_time_iso_8601": "2020-01-28T16:32:37.802687Z", "url": "https://files.pythonhosted.org/packages/ea/ca/3a88b3e3c2c755ca31f5c2d4a6851096296dbc65c0f18da1cea8833505a2/generala-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:26 2020"}