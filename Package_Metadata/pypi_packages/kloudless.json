{"info": {"author": "Kloudless", "author_email": "hello@kloudless.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "Python library for the Kloudless API\n====================================\n\nPython library for the [Kloudless API](https://developers.kloudless.com).\n\n**You need to sign up and create an application first before using this SDK.**\n\nTable of Contents\n-----------------\n\n*   [Requirements](#requirements)\n*   [Installation](#installation)\n*   [Getting Started](#getting-started)\n*   [Making API Requests](#making-api-requests)\n*   [Integrating OAuth Flow](#integrating-oauth-flow)\n*   [Documentation](#documentation)\n\nRequirements\n-----------\n\nPython 2.7 or Python 3.5+\n\nInstallation\n------------\n\nInstall via pip:\n\n```bash\npip install kloudless\n```\n\nInstall from source:\n\n```bash\ngit clone git://github.com/kloudless/kloudless-python\ncd kloudless-python\npython setup.py install\n```\n\nGetting Started\n---------------\n\nMost Kloudless API endpoints require connecting to an upstream service\naccount first. Start by **navigating to**\n[API Explorer](https://developers.kloudless.com/api-explorer/) **and connecting\nan account.**\n\n![Get the Bearer Token](https://kloudless-static-assets.s3.amazonaws.com/p/platform/sdk/images/api-explorer-token.png)\n\nAfter the account has been connected, copy the Bearer Token from the text box\nand use it to initialize an Account object:\n\n```python\nfrom kloudless import Account\naccount = Account(token=\"YOUR_BEARER_TOKEN\")\n```\n\nMaking API Requests\n-------------------\n\nYou can now make an API request with the account instance you've created.\n\n### If Connecting to a Storage Service\n\n```python\n# retrieve folder contents\nroot_folder_contents = account.get('storage/folders/root/contents')\nfor resource in root_folder_contents:\n    print(resource.data)\n\n# download the first file in root_folder\nfor resource in root_folder_contents:\n    if resource.data['type'] == 'file':\n        filename = resource.data['name']\n        response = resource.get('contents')\n        with open(filename, 'wb') as f:\n            f.write(response.content)\n        break\n\n# upload a file to root_folder\nfile_name = 'FILE_NAME_TO_UPLOAD'\nheaders = {\n    'X-Kloudless-Metadata': json.dumps(\n        {'parent_id': 'root', 'name': file_name}\n    )\n}\nwith open(file_name, 'rb') as f:\n    file_resource = account.post('storage/files', data=f, headers=headers)\n```\n\n### If Connecting to a Calendar Service\n\n```python\n# retrieve primary calendar\ncalendar = account.get('cal/calendars/primary')\nprint('Primary Calendar: {}'.format(calendar.data['name']))\n\n# iterate through events in first page with page_size equals 5\nevents = calendar.get('events?page_size=5')\nfor e in events:\n    data = e.data\n    print('{}: {}~{}'.format(data['name'], data['start'], data['end']))\n\n# iterate thorough events in second page\nnext_page_events = events.get_next_page()\nfor e in next_page_events:\n    data = e.data\n    print('{}: {}~{}'.format(data['name'], data['start'], data['end']))\n\n# create a new event on primary calendar\nevent = events.post(json={\n    'start': '2019-01-01T12:30:00Z',\n    'end': '2019-01-01T13:30:00Z',\n    'name': 'Event test'}\n)\n```\n\nIntegrating OAuth Flow\n----------------------\n\nYou can use the [Authenticator JS library](https://github.com/kloudless/authenticator.js)\nto authenticate end-users via a pop-up and store the token server-side. \nBe sure to verify the token once it is transferred to your\nserver. See `kloudless.application.verify_token`.\n\nAn alternate approach is to use the OAuth Authorization Code grant flow to\nredirect the end-user to Kloudless to connect their account to your app.\n\n### OAuth Integration Demo server\n\n`examples/demo_server.py` provides the server-side logic of the 3-legged OAuth\nflow using helper methods from the Kloudless Python SDK. See \n`examples/README.md` for instructions on running the demo server.\n\n### Python Django Sample code\n\nInsert the following code into Django views under `views/` directory and\ncalling it via `urls.py`.\n\n```python\nfrom django.http import HttpResponseRedirect, HttpResponse\nfrom django.conf import settings\n\nfrom kloudless import get_authorization_url, get_token_from_code\n\n\ndef start_authorization_flow(request):\n    \"\"\"\n    Redirect the user to start authorization flow.\n    \"\"\"\n    url, state = get_authorization_url(app_id=settings.KLOUDLESS_APP_ID,\n                                       redirect_uri=settings.KLOUDLESS_REDIRECT_URL,\n                                       scope='any:normal.storage')\n\n    request.session['authorization_state'] = state\n    return HttpResponseRedirect(url)\n\n\ndef callback(request):\n    \"\"\"\n    The endpoint for settings.KLOUDLESS_REDIRECT_URL.\n    \"\"\"\n    params = request.GET.dict()\n    token = get_token_from_code(app_id=settings.KLOUDLESS_APP_ID,\n                                api_key=settings.KLOUDLESS_API_KEY,\n                                orig_state=request.session['authorization_state'],\n                                orig_redirect_uri=settings.KLOUDLESS_REDIRECT_URL,\n                                **params)\n\n    # store the token\n    request.user.kloudless_token = token\n    request.user.save()\n    return HttpResponse('Account connects successfully.')\n```\n\nDocumentation\n-------------\n\nFull documentation is hosted at\n[Read the docs](https://kloudless.readthedocs.io/en/latest/).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kloudless/kloudless-python/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "kloudless", "package_url": "https://pypi.org/project/kloudless/", "platform": "", "project_url": "https://pypi.org/project/kloudless/", "project_urls": {"Homepage": "https://github.com/kloudless/kloudless-python/"}, "release_url": "https://pypi.org/project/kloudless/2.0.0/", "requires_dist": ["requests (>=1.0)", "python-dateutil", "six"], "requires_python": "", "summary": "Python library for the Kloudless API", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Python library for the Kloudless API</h1>\n<p>Python library for the <a href=\"https://developers.kloudless.com\" rel=\"nofollow\">Kloudless API</a>.</p>\n<p><strong>You need to sign up and create an application first before using this SDK.</strong></p>\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#requirements\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#getting-started\" rel=\"nofollow\">Getting Started</a></li>\n<li><a href=\"#making-api-requests\" rel=\"nofollow\">Making API Requests</a></li>\n<li><a href=\"#integrating-oauth-flow\" rel=\"nofollow\">Integrating OAuth Flow</a></li>\n<li><a href=\"#documentation\" rel=\"nofollow\">Documentation</a></li>\n</ul>\n<h2>Requirements</h2>\n<p>Python 2.7 or Python 3.5+</p>\n<h2>Installation</h2>\n<p>Install via pip:</p>\n<pre>pip install kloudless\n</pre>\n<p>Install from source:</p>\n<pre>git clone git://github.com/kloudless/kloudless-python\n<span class=\"nb\">cd</span> kloudless-python\npython setup.py install\n</pre>\n<h2>Getting Started</h2>\n<p>Most Kloudless API endpoints require connecting to an upstream service\naccount first. Start by <strong>navigating to</strong>\n<a href=\"https://developers.kloudless.com/api-explorer/\" rel=\"nofollow\">API Explorer</a> <strong>and connecting\nan account.</strong></p>\n<p><img alt=\"Get the Bearer Token\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/45d97fd8bcbc43d506dd6e70d4c21bdd104627d6/68747470733a2f2f6b6c6f75646c6573732d7374617469632d6173736574732e73332e616d617a6f6e6177732e636f6d2f702f706c6174666f726d2f73646b2f696d616765732f6170692d6578706c6f7265722d746f6b656e2e706e67\"></p>\n<p>After the account has been connected, copy the Bearer Token from the text box\nand use it to initialize an Account object:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">kloudless</span> <span class=\"kn\">import</span> <span class=\"n\">Account</span>\n<span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"o\">=</span><span class=\"s2\">\"YOUR_BEARER_TOKEN\"</span><span class=\"p\">)</span>\n</pre>\n<h2>Making API Requests</h2>\n<p>You can now make an API request with the account instance you've created.</p>\n<h3>If Connecting to a Storage Service</h3>\n<pre><span class=\"c1\"># retrieve folder contents</span>\n<span class=\"n\">root_folder_contents</span> <span class=\"o\">=</span> <span class=\"n\">account</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'storage/folders/root/contents'</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">resource</span> <span class=\"ow\">in</span> <span class=\"n\">root_folder_contents</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># download the first file in root_folder</span>\n<span class=\"k\">for</span> <span class=\"n\">resource</span> <span class=\"ow\">in</span> <span class=\"n\">root_folder_contents</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'type'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">'file'</span><span class=\"p\">:</span>\n        <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">]</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'contents'</span><span class=\"p\">)</span>\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"s1\">'wb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">content</span><span class=\"p\">)</span>\n        <span class=\"k\">break</span>\n\n<span class=\"c1\"># upload a file to root_folder</span>\n<span class=\"n\">file_name</span> <span class=\"o\">=</span> <span class=\"s1\">'FILE_NAME_TO_UPLOAD'</span>\n<span class=\"n\">headers</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'X-Kloudless-Metadata'</span><span class=\"p\">:</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span>\n        <span class=\"p\">{</span><span class=\"s1\">'parent_id'</span><span class=\"p\">:</span> <span class=\"s1\">'root'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"n\">file_name</span><span class=\"p\">}</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">}</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">file_name</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">file_resource</span> <span class=\"o\">=</span> <span class=\"n\">account</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s1\">'storage/files'</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">)</span>\n</pre>\n<h3>If Connecting to a Calendar Service</h3>\n<pre><span class=\"c1\"># retrieve primary calendar</span>\n<span class=\"n\">calendar</span> <span class=\"o\">=</span> <span class=\"n\">account</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'cal/calendars/primary'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Primary Calendar: </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">calendar</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">]))</span>\n\n<span class=\"c1\"># iterate through events in first page with page_size equals 5</span>\n<span class=\"n\">events</span> <span class=\"o\">=</span> <span class=\"n\">calendar</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'events?page_size=5'</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">e</span> <span class=\"ow\">in</span> <span class=\"n\">events</span><span class=\"p\">:</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">data</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">{}</span><span class=\"s1\">: </span><span class=\"si\">{}</span><span class=\"s1\">~</span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">],</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'start'</span><span class=\"p\">],</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'end'</span><span class=\"p\">]))</span>\n\n<span class=\"c1\"># iterate thorough events in second page</span>\n<span class=\"n\">next_page_events</span> <span class=\"o\">=</span> <span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">get_next_page</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">e</span> <span class=\"ow\">in</span> <span class=\"n\">next_page_events</span><span class=\"p\">:</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">data</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">{}</span><span class=\"s1\">: </span><span class=\"si\">{}</span><span class=\"s1\">~</span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">],</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'start'</span><span class=\"p\">],</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'end'</span><span class=\"p\">]))</span>\n\n<span class=\"c1\"># create a new event on primary calendar</span>\n<span class=\"n\">event</span> <span class=\"o\">=</span> <span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">=</span><span class=\"p\">{</span>\n    <span class=\"s1\">'start'</span><span class=\"p\">:</span> <span class=\"s1\">'2019-01-01T12:30:00Z'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'end'</span><span class=\"p\">:</span> <span class=\"s1\">'2019-01-01T13:30:00Z'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Event test'</span><span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>Integrating OAuth Flow</h2>\n<p>You can use the <a href=\"https://github.com/kloudless/authenticator.js\" rel=\"nofollow\">Authenticator JS library</a>\nto authenticate end-users via a pop-up and store the token server-side.\nBe sure to verify the token once it is transferred to your\nserver. See <code>kloudless.application.verify_token</code>.</p>\n<p>An alternate approach is to use the OAuth Authorization Code grant flow to\nredirect the end-user to Kloudless to connect their account to your app.</p>\n<h3>OAuth Integration Demo server</h3>\n<p><code>examples/demo_server.py</code> provides the server-side logic of the 3-legged OAuth\nflow using helper methods from the Kloudless Python SDK. See\n<code>examples/README.md</code> for instructions on running the demo server.</p>\n<h3>Python Django Sample code</h3>\n<p>Insert the following code into Django views under <code>views/</code> directory and\ncalling it via <code>urls.py</code>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.http</span> <span class=\"kn\">import</span> <span class=\"n\">HttpResponseRedirect</span><span class=\"p\">,</span> <span class=\"n\">HttpResponse</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">kloudless</span> <span class=\"kn\">import</span> <span class=\"n\">get_authorization_url</span><span class=\"p\">,</span> <span class=\"n\">get_token_from_code</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">start_authorization_flow</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Redirect the user to start authorization flow.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"n\">get_authorization_url</span><span class=\"p\">(</span><span class=\"n\">app_id</span><span class=\"o\">=</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">KLOUDLESS_APP_ID</span><span class=\"p\">,</span>\n                                       <span class=\"n\">redirect_uri</span><span class=\"o\">=</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">KLOUDLESS_REDIRECT_URL</span><span class=\"p\">,</span>\n                                       <span class=\"n\">scope</span><span class=\"o\">=</span><span class=\"s1\">'any:normal.storage'</span><span class=\"p\">)</span>\n\n    <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"p\">[</span><span class=\"s1\">'authorization_state'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">state</span>\n    <span class=\"k\">return</span> <span class=\"n\">HttpResponseRedirect</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">callback</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    The endpoint for settings.KLOUDLESS_REDIRECT_URL.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">GET</span><span class=\"o\">.</span><span class=\"n\">dict</span><span class=\"p\">()</span>\n    <span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">get_token_from_code</span><span class=\"p\">(</span><span class=\"n\">app_id</span><span class=\"o\">=</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">KLOUDLESS_APP_ID</span><span class=\"p\">,</span>\n                                <span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">KLOUDLESS_API_KEY</span><span class=\"p\">,</span>\n                                <span class=\"n\">orig_state</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"p\">[</span><span class=\"s1\">'authorization_state'</span><span class=\"p\">],</span>\n                                <span class=\"n\">orig_redirect_uri</span><span class=\"o\">=</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">KLOUDLESS_REDIRECT_URL</span><span class=\"p\">,</span>\n                                <span class=\"o\">**</span><span class=\"n\">params</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># store the token</span>\n    <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">kloudless_token</span> <span class=\"o\">=</span> <span class=\"n\">token</span>\n    <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">HttpResponse</span><span class=\"p\">(</span><span class=\"s1\">'Account connects successfully.'</span><span class=\"p\">)</span>\n</pre>\n<h2>Documentation</h2>\n<p>Full documentation is hosted at\n<a href=\"https://kloudless.readthedocs.io/en/latest/\" rel=\"nofollow\">Read the docs</a>.</p>\n\n          </div>"}, "last_serial": 5127024, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "c37fa1f804df04cff8e11b2056add6e8", "sha256": "05975bbc0109bc970a15b955a585061b3b5df1e74ddd101884ba4509e14cfbd3"}, "downloads": -1, "filename": "kloudless-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c37fa1f804df04cff8e11b2056add6e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9121, "upload_time": "2014-04-28T22:00:18", "upload_time_iso_8601": "2014-04-28T22:00:18.290646Z", "url": "https://files.pythonhosted.org/packages/e5/24/ded75539fa2ac5e9bcc2f9db53f035bdacb15aef1666af32dd4e5ebf9fbb/kloudless-0.1.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "f5ff70cb238755a192e1e183db704c48", "sha256": "b56a40c0567fa9fb566003b4b42b00ae7ac31b51a0a1de67d47da8be89122734"}, "downloads": -1, "filename": "kloudless-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f5ff70cb238755a192e1e183db704c48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14563, "upload_time": "2017-04-11T21:07:12", "upload_time_iso_8601": "2017-04-11T21:07:12.958639Z", "url": "https://files.pythonhosted.org/packages/11/a9/1d9449eaf554535f9d175b5e46d4770b2fe8bb5f01f19f6007e52b0d7e8c/kloudless-1.0.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "650125721895451102d55bcbee700ee3", "sha256": "3755e2668754e1b0c6f1475975e1fb6f18839b4675a84f5fcf01afc88f91324e"}, "downloads": -1, "filename": "kloudless-1.1.1.tar.gz", "has_sig": false, "md5_digest": "650125721895451102d55bcbee700ee3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15702, "upload_time": "2017-04-11T21:44:54", "upload_time_iso_8601": "2017-04-11T21:44:54.943175Z", "url": "https://files.pythonhosted.org/packages/b7/98/4d417bbaacc058d764f901880cc6fd108073f659be635e01411c8a77c320/kloudless-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "2e1ec50dedb4904f22b3a510cd0c45e1", "sha256": "3a28d4e7c5ea024ebe6d5993ca450f616ce666d911380ec34661568477c33ed5"}, "downloads": -1, "filename": "kloudless-1.1.2.tar.gz", "has_sig": false, "md5_digest": "2e1ec50dedb4904f22b3a510cd0c45e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17190, "upload_time": "2017-10-03T20:11:14", "upload_time_iso_8601": "2017-10-03T20:11:14.206850Z", "url": "https://files.pythonhosted.org/packages/91/f2/056a6279ad08dfe52e0d10fa84b2971f81689ec822d2c5d918a1481b3a6a/kloudless-1.1.2.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "e9132d4eefecaf507fd69a4f4cd2d9b4", "sha256": "83eaa64f7d94083f48a29a5fe7e054b7721b9eff8acbd7bc1ec728f842452800"}, "downloads": -1, "filename": "kloudless-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e9132d4eefecaf507fd69a4f4cd2d9b4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16160, "upload_time": "2019-04-11T04:18:14", "upload_time_iso_8601": "2019-04-11T04:18:14.354371Z", "url": "https://files.pythonhosted.org/packages/82/7c/c12d30624bc4ce756cce9ae2e213b16580d39e6e9429db0a4a5ce6be5376/kloudless-2.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b9ab87f0e38c11a8c9df9fdf855736c5", "sha256": "a1d8a295d5180ccf703a03a53ca9ab4bc02342fbf6469e9504a2cc53e03a812d"}, "downloads": -1, "filename": "kloudless-2.0.0.tar.gz", "has_sig": false, "md5_digest": "b9ab87f0e38c11a8c9df9fdf855736c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11983, "upload_time": "2019-04-11T04:18:16", "upload_time_iso_8601": "2019-04-11T04:18:16.129402Z", "url": "https://files.pythonhosted.org/packages/ca/1d/a2c41451f73eeab3eeb643bd92917f796565f3ea3006ca18e116c65648c8/kloudless-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e9132d4eefecaf507fd69a4f4cd2d9b4", "sha256": "83eaa64f7d94083f48a29a5fe7e054b7721b9eff8acbd7bc1ec728f842452800"}, "downloads": -1, "filename": "kloudless-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e9132d4eefecaf507fd69a4f4cd2d9b4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16160, "upload_time": "2019-04-11T04:18:14", "upload_time_iso_8601": "2019-04-11T04:18:14.354371Z", "url": "https://files.pythonhosted.org/packages/82/7c/c12d30624bc4ce756cce9ae2e213b16580d39e6e9429db0a4a5ce6be5376/kloudless-2.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b9ab87f0e38c11a8c9df9fdf855736c5", "sha256": "a1d8a295d5180ccf703a03a53ca9ab4bc02342fbf6469e9504a2cc53e03a812d"}, "downloads": -1, "filename": "kloudless-2.0.0.tar.gz", "has_sig": false, "md5_digest": "b9ab87f0e38c11a8c9df9fdf855736c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11983, "upload_time": "2019-04-11T04:18:16", "upload_time_iso_8601": "2019-04-11T04:18:16.129402Z", "url": "https://files.pythonhosted.org/packages/ca/1d/a2c41451f73eeab3eeb643bd92917f796565f3ea3006ca18e116c65648c8/kloudless-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:19 2020"}