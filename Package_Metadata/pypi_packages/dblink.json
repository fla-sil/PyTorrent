{"info": {"author": "skyduy", "author_email": "cuteuy@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Build Tools"], "description": "# dblink\n\n[![PyPI version](https://badge.fury.io/py/dblink.svg)](https://badge.fury.io/py/dblink)\n[![Build Status](https://travis-ci.org/skyduy/dblink.svg?branch=master)](https://travis-ci.org/skyduy/dblink)\n\n> Aimed for easily using query, insert, update and delete with an exist table, the filter query syntax likes Django's. You can find out the simple usage in the code below.\n\n## Introduction\nSuppose you have two tables: `users` and `addresses` created by:\n\n```sql\nCREATE TABLE users (\n    id INTEGER NOT NULL,\n    name VARCHAR(50),\n    fullname VARCHAR(50),\n    password VARCHAR(12),\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE addresses (\n    id INTEGER NOT NULL,\n    email_address VARCHAR NOT NULL,\n    user_id INTEGER,\n    PRIMARY KEY (id),\n    FOREIGN KEY(user_id) REFERENCES users (id)\n);\n```\n\nYou can link to exist table in database using [Database Urls](http://docs.sqlalchemy.org/en/latest/core/engines.html#database-urls).\n\n```python\nfrom dblink import Database, Table\ndb = Database(url='sqlite:///:memory:')\nuser_table = Table('users', db)\n# ...\ndb.close()\n\nwith Database(url='postgresql://scott:tiger@localhost/mydatabase') as db:\n    address_table = Table('addresses', db)\n    # ...\n```\n\nHere is a simple example.\n\n```python\n\"\"\"\nSuppose you have two table: users and addresses.\n\"\"\"\nfrom dblink import Database, Table\n\n\nwith Database('sqlite:///:memory:') as db:\n    table_user = Table('users', db)\n    table_address = Table('addresses', db)\n\n    # show description\n    print(table_user.description)\n    print(table_address.description)\n\n    # chain query, you can call delete on the single table result\n    table_user.query.filter(id=1).one_or_none()\n\n    table_user.query.filter(id__gte=2) \\\n                    .order_by('name') \\\n                    .values_list('id', 'name')\n\n    table_user.query.filter(id__in=[1, 2, 3]) \\\n                    .filter(name__startswith='Yu').all()\n\n    table_user.query.order_by('-name') \\\n                    .values_list('fullname', flat=True, distinct=True)\n\n    table_user.query.distinct('name').values_list('name', flat=True)\n\n    table_user.query.filter(id__in=[1, 2, 3]).delete()\n\n    # join query\n    table_user.join(table_address) \\\n              .filter(id__lt=10000) \\\n              .filter(email_address__contains='gmail') \\\n              .filter(**{'addresses.id__gte': 100}) \\\n              .values_list('user_id', 'name', 'email_address',\n                           table_address.id, 'users.fullname')\n\n    # get or insert\n    instance, create = table_user.get_or_insert(id=1, name='jone')\n\n    # single record operation.\n    table_user.insert({'id': 1, 'name': 'YuJun', 'password': 'psw'})\n\n    table_user.update({'id': 1, 'name': 'skyduy', 'password': 'psw'},\n                      unique_fields=['id'], update_fields=['name', 'password'])\n\n    table_user.insert_or_update(\n        {'id': 1, 'name': 'skyduy', 'password': 'psw'},\n        unique_fields=['id'], update_fields=['name', 'password']\n    )\n\n    table_user.delete({'id': 1, 'name': \"I don't matter\"},\n                      unique_fields=['id'])\n\n    # bulk operation\n    items = [{'id': 1, 'name': 'yujun', 'password': 'haha'},\n             {'id': 2, 'name': 'skyduy', 'password': 'aha'},]\n    unique_fields = ['id']\n    update_fields = ['name']\n    table_user.bulk_insert(items)\n    table_user.bulk_delete(items, unique_fields)\n    table_user.bulk_update(items, unique_fields, update_fields)\n    table_user.bulk_insert_or_update(items, unique_fields, update_fields)\n```\n\n## History\n### V0.3.0 (2019/09/08)\n- Update requirements for security.\n- Fix the installation bugs on windows.\n\n### V0.2.1 (2018/05/09)\n\n- Add encoding option.\n- Improve package dependence.\n\n### V0.2.0 (2018/03/24)\n\n- Bug fix.\n  - Error closing cursor when operation on local sqlite db.\n  - Bugs in bulk_insert_or_update.\n\n- Improve Error tips.\n\n### V0.1.2 (2018/02/05)\n\n- Initial release.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/skyduy/dblink", "keywords": "sql orm dblink", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "dblink", "package_url": "https://pypi.org/project/dblink/", "platform": "", "project_url": "https://pypi.org/project/dblink/", "project_urls": {"Homepage": "https://github.com/skyduy/dblink"}, "release_url": "https://pypi.org/project/dblink/0.3.0/", "requires_dist": null, "requires_python": "", "summary": "DBLink tools makes operation on exists table easier.", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>dblink</h1>\n<p><a href=\"https://badge.fury.io/py/dblink\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5904587344fe8cfffe430152f3639f9e20db9d57/68747470733a2f2f62616467652e667572792e696f2f70792f64626c696e6b2e737667\"></a>\n<a href=\"https://travis-ci.org/skyduy/dblink\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6d799c3b8673f5072421463803a747dfee160787/68747470733a2f2f7472617669732d63692e6f72672f736b796475792f64626c696e6b2e7376673f6272616e63683d6d6173746572\"></a></p>\n<blockquote>\n<p>Aimed for easily using query, insert, update and delete with an exist table, the filter query syntax likes Django's. You can find out the simple usage in the code below.</p>\n</blockquote>\n<h2>Introduction</h2>\n<p>Suppose you have two tables: <code>users</code> and <code>addresses</code> created by:</p>\n<pre><span class=\"k\">CREATE</span> <span class=\"k\">TABLE</span> <span class=\"n\">users</span> <span class=\"p\">(</span>\n    <span class=\"n\">id</span> <span class=\"nb\">INTEGER</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span>\n    <span class=\"n\">name</span> <span class=\"nb\">VARCHAR</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">),</span>\n    <span class=\"n\">fullname</span> <span class=\"nb\">VARCHAR</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">),</span>\n    <span class=\"n\">password</span> <span class=\"nb\">VARCHAR</span><span class=\"p\">(</span><span class=\"mi\">12</span><span class=\"p\">),</span>\n    <span class=\"k\">PRIMARY</span> <span class=\"k\">KEY</span> <span class=\"p\">(</span><span class=\"n\">id</span><span class=\"p\">)</span>\n<span class=\"p\">);</span>\n\n<span class=\"k\">CREATE</span> <span class=\"k\">TABLE</span> <span class=\"n\">addresses</span> <span class=\"p\">(</span>\n    <span class=\"n\">id</span> <span class=\"nb\">INTEGER</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span>\n    <span class=\"n\">email_address</span> <span class=\"nb\">VARCHAR</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span>\n    <span class=\"n\">user_id</span> <span class=\"nb\">INTEGER</span><span class=\"p\">,</span>\n    <span class=\"k\">PRIMARY</span> <span class=\"k\">KEY</span> <span class=\"p\">(</span><span class=\"n\">id</span><span class=\"p\">),</span>\n    <span class=\"k\">FOREIGN</span> <span class=\"k\">KEY</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"p\">)</span> <span class=\"k\">REFERENCES</span> <span class=\"n\">users</span> <span class=\"p\">(</span><span class=\"n\">id</span><span class=\"p\">)</span>\n<span class=\"p\">);</span>\n</pre>\n<p>You can link to exist table in database using <a href=\"http://docs.sqlalchemy.org/en/latest/core/engines.html#database-urls\" rel=\"nofollow\">Database Urls</a>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dblink</span> <span class=\"kn\">import</span> <span class=\"n\">Database</span><span class=\"p\">,</span> <span class=\"n\">Table</span>\n<span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">Database</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'sqlite:///:memory:'</span><span class=\"p\">)</span>\n<span class=\"n\">user_table</span> <span class=\"o\">=</span> <span class=\"n\">Table</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"p\">)</span>\n<span class=\"c1\"># ...</span>\n<span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n<span class=\"k\">with</span> <span class=\"n\">Database</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'postgresql://scott:tiger@localhost/mydatabase'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">db</span><span class=\"p\">:</span>\n    <span class=\"n\">address_table</span> <span class=\"o\">=</span> <span class=\"n\">Table</span><span class=\"p\">(</span><span class=\"s1\">'addresses'</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"p\">)</span>\n    <span class=\"c1\"># ...</span>\n</pre>\n<p>Here is a simple example.</p>\n<pre><span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">Suppose you have two table: users and addresses.</span>\n<span class=\"sd\">\"\"\"</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dblink</span> <span class=\"kn\">import</span> <span class=\"n\">Database</span><span class=\"p\">,</span> <span class=\"n\">Table</span>\n\n\n<span class=\"k\">with</span> <span class=\"n\">Database</span><span class=\"p\">(</span><span class=\"s1\">'sqlite:///:memory:'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">db</span><span class=\"p\">:</span>\n    <span class=\"n\">table_user</span> <span class=\"o\">=</span> <span class=\"n\">Table</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"p\">)</span>\n    <span class=\"n\">table_address</span> <span class=\"o\">=</span> <span class=\"n\">Table</span><span class=\"p\">(</span><span class=\"s1\">'addresses'</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># show description</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">table_user</span><span class=\"o\">.</span><span class=\"n\">description</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">table_address</span><span class=\"o\">.</span><span class=\"n\">description</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># chain query, you can call delete on the single table result</span>\n    <span class=\"n\">table_user</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">one_or_none</span><span class=\"p\">()</span>\n\n    <span class=\"n\">table_user</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">id__gte</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span> \\\n                    <span class=\"o\">.</span><span class=\"n\">order_by</span><span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">)</span> \\\n                    <span class=\"o\">.</span><span class=\"n\">values_list</span><span class=\"p\">(</span><span class=\"s1\">'id'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">)</span>\n\n    <span class=\"n\">table_user</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">id__in</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span> \\\n                    <span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">name__startswith</span><span class=\"o\">=</span><span class=\"s1\">'Yu'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n\n    <span class=\"n\">table_user</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">order_by</span><span class=\"p\">(</span><span class=\"s1\">'-name'</span><span class=\"p\">)</span> \\\n                    <span class=\"o\">.</span><span class=\"n\">values_list</span><span class=\"p\">(</span><span class=\"s1\">'fullname'</span><span class=\"p\">,</span> <span class=\"n\">flat</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">distinct</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"n\">table_user</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">distinct</span><span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">values_list</span><span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"n\">flat</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"n\">table_user</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">id__in</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># join query</span>\n    <span class=\"n\">table_user</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">table_address</span><span class=\"p\">)</span> \\\n              <span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">id__lt</span><span class=\"o\">=</span><span class=\"mi\">10000</span><span class=\"p\">)</span> \\\n              <span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">email_address__contains</span><span class=\"o\">=</span><span class=\"s1\">'gmail'</span><span class=\"p\">)</span> \\\n              <span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"p\">{</span><span class=\"s1\">'addresses.id__gte'</span><span class=\"p\">:</span> <span class=\"mi\">100</span><span class=\"p\">})</span> \\\n              <span class=\"o\">.</span><span class=\"n\">values_list</span><span class=\"p\">(</span><span class=\"s1\">'user_id'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'email_address'</span><span class=\"p\">,</span>\n                           <span class=\"n\">table_address</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"s1\">'users.fullname'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># get or insert</span>\n    <span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">create</span> <span class=\"o\">=</span> <span class=\"n\">table_user</span><span class=\"o\">.</span><span class=\"n\">get_or_insert</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'jone'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># single record operation.</span>\n    <span class=\"n\">table_user</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">({</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'YuJun'</span><span class=\"p\">,</span> <span class=\"s1\">'password'</span><span class=\"p\">:</span> <span class=\"s1\">'psw'</span><span class=\"p\">})</span>\n\n    <span class=\"n\">table_user</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'skyduy'</span><span class=\"p\">,</span> <span class=\"s1\">'password'</span><span class=\"p\">:</span> <span class=\"s1\">'psw'</span><span class=\"p\">},</span>\n                      <span class=\"n\">unique_fields</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">],</span> <span class=\"n\">update_fields</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'password'</span><span class=\"p\">])</span>\n\n    <span class=\"n\">table_user</span><span class=\"o\">.</span><span class=\"n\">insert_or_update</span><span class=\"p\">(</span>\n        <span class=\"p\">{</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'skyduy'</span><span class=\"p\">,</span> <span class=\"s1\">'password'</span><span class=\"p\">:</span> <span class=\"s1\">'psw'</span><span class=\"p\">},</span>\n        <span class=\"n\">unique_fields</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">],</span> <span class=\"n\">update_fields</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'password'</span><span class=\"p\">]</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">table_user</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">({</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s2\">\"I don't matter\"</span><span class=\"p\">},</span>\n                      <span class=\"n\">unique_fields</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">])</span>\n\n    <span class=\"c1\"># bulk operation</span>\n    <span class=\"n\">items</span> <span class=\"o\">=</span> <span class=\"p\">[{</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'yujun'</span><span class=\"p\">,</span> <span class=\"s1\">'password'</span><span class=\"p\">:</span> <span class=\"s1\">'haha'</span><span class=\"p\">},</span>\n             <span class=\"p\">{</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'skyduy'</span><span class=\"p\">,</span> <span class=\"s1\">'password'</span><span class=\"p\">:</span> <span class=\"s1\">'aha'</span><span class=\"p\">},]</span>\n    <span class=\"n\">unique_fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">]</span>\n    <span class=\"n\">update_fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">]</span>\n    <span class=\"n\">table_user</span><span class=\"o\">.</span><span class=\"n\">bulk_insert</span><span class=\"p\">(</span><span class=\"n\">items</span><span class=\"p\">)</span>\n    <span class=\"n\">table_user</span><span class=\"o\">.</span><span class=\"n\">bulk_delete</span><span class=\"p\">(</span><span class=\"n\">items</span><span class=\"p\">,</span> <span class=\"n\">unique_fields</span><span class=\"p\">)</span>\n    <span class=\"n\">table_user</span><span class=\"o\">.</span><span class=\"n\">bulk_update</span><span class=\"p\">(</span><span class=\"n\">items</span><span class=\"p\">,</span> <span class=\"n\">unique_fields</span><span class=\"p\">,</span> <span class=\"n\">update_fields</span><span class=\"p\">)</span>\n    <span class=\"n\">table_user</span><span class=\"o\">.</span><span class=\"n\">bulk_insert_or_update</span><span class=\"p\">(</span><span class=\"n\">items</span><span class=\"p\">,</span> <span class=\"n\">unique_fields</span><span class=\"p\">,</span> <span class=\"n\">update_fields</span><span class=\"p\">)</span>\n</pre>\n<h2>History</h2>\n<h3>V0.3.0 (2019/09/08)</h3>\n<ul>\n<li>Update requirements for security.</li>\n<li>Fix the installation bugs on windows.</li>\n</ul>\n<h3>V0.2.1 (2018/05/09)</h3>\n<ul>\n<li>Add encoding option.</li>\n<li>Improve package dependence.</li>\n</ul>\n<h3>V0.2.0 (2018/03/24)</h3>\n<ul>\n<li>\n<p>Bug fix.</p>\n<ul>\n<li>Error closing cursor when operation on local sqlite db.</li>\n<li>Bugs in bulk_insert_or_update.</li>\n</ul>\n</li>\n<li>\n<p>Improve Error tips.</p>\n</li>\n</ul>\n<h3>V0.1.2 (2018/02/05)</h3>\n<ul>\n<li>Initial release.</li>\n</ul>\n\n          </div>"}, "last_serial": 5798098, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "5524a7d8a50c16939e76eac24addbf45", "sha256": "80d451e06d086fe656554b0e5162cf8475139b6340b332448b76da2d37095aed"}, "downloads": -1, "filename": "dblink-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5524a7d8a50c16939e76eac24addbf45", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 8917, "upload_time": "2018-02-05T07:33:14", "upload_time_iso_8601": "2018-02-05T07:33:14.163638Z", "url": "https://files.pythonhosted.org/packages/01/ec/c62151b02b01315d76e58c1d61ebb674ac763f121228b7a5b2ed55c5fffd/dblink-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c7aee01e89780d5e242a4e22294af84a", "sha256": "319d99ca4144d750b293ee3f660b7547fed1b864deb45cdeeb011d6939f04870"}, "downloads": -1, "filename": "dblink-0.1.2.tar.gz", "has_sig": false, "md5_digest": "c7aee01e89780d5e242a4e22294af84a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6514, "upload_time": "2018-02-05T07:32:56", "upload_time_iso_8601": "2018-02-05T07:32:56.880542Z", "url": "https://files.pythonhosted.org/packages/df/72/ea2068071839198c0d5922a87c87f80624174c29932ab1818db0b013b9e1/dblink-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "27622b71bf67919d38500b07d71ac6d2", "sha256": "80eec758d3e0f57ee1bb4b00dbcfb355b4d33f93569fc11f7873389ec36345a3"}, "downloads": -1, "filename": "dblink-0.2.0.tar.gz", "has_sig": false, "md5_digest": "27622b71bf67919d38500b07d71ac6d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6927, "upload_time": "2018-03-26T05:56:17", "upload_time_iso_8601": "2018-03-26T05:56:17.234383Z", "url": "https://files.pythonhosted.org/packages/55/b2/fff1eb3f46da694c727acb4c8c594a65beafde184550b42f88ce377d8fd3/dblink-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "7c58c20052e6ab8a2b43e06029925404", "sha256": "fbc44926995bb1b3a477313b25853168a11f22e30bd8435006c6aa5fc0242758"}, "downloads": -1, "filename": "dblink-0.2.1.tar.gz", "has_sig": false, "md5_digest": "7c58c20052e6ab8a2b43e06029925404", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6908, "upload_time": "2018-05-09T04:00:01", "upload_time_iso_8601": "2018-05-09T04:00:01.760555Z", "url": "https://files.pythonhosted.org/packages/c0/7f/7e60a407b110459345a087cad0e66b2ad92756075d62ed690d50585f899c/dblink-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "7fdc15049e37f5d306fe6a293b68b17e", "sha256": "1683d2f7cfc19a6f5b95a521e1e00c25903018b5f372b41b2d99633fdd64c7f4"}, "downloads": -1, "filename": "dblink-0.3.0.tar.gz", "has_sig": false, "md5_digest": "7fdc15049e37f5d306fe6a293b68b17e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6786, "upload_time": "2019-09-08T02:46:24", "upload_time_iso_8601": "2019-09-08T02:46:24.602898Z", "url": "https://files.pythonhosted.org/packages/be/ac/09f4ad930c19df562034198e1c962b499cfb80bc4e41a2255f94c9141e43/dblink-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7fdc15049e37f5d306fe6a293b68b17e", "sha256": "1683d2f7cfc19a6f5b95a521e1e00c25903018b5f372b41b2d99633fdd64c7f4"}, "downloads": -1, "filename": "dblink-0.3.0.tar.gz", "has_sig": false, "md5_digest": "7fdc15049e37f5d306fe6a293b68b17e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6786, "upload_time": "2019-09-08T02:46:24", "upload_time_iso_8601": "2019-09-08T02:46:24.602898Z", "url": "https://files.pythonhosted.org/packages/be/ac/09f4ad930c19df562034198e1c962b499cfb80bc4e41a2255f94c9141e43/dblink-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:56 2020"}