{"info": {"author": "Tim Santor", "author_email": "tsantor@xstudios.agency", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3.8"], "description": "SharePoint Too\n==============\n\nAuthor:Tim Santor tsantor@xstudios.agency\n\nOverview\n--------\n\nThis module will handle authentication for your SharePoint Online/O365\nsite, allowing you to make straightforward HTTP requests from Python. It\nextends the commonly used Requests module, meaning that returned objects\nare familliar, easy to work with and well documented. Leverages\n`requests_ntlm <https://github.com/requests/requests-ntlm>`__ for\nauthentication.\n\nInspired by `Sharepy <https://github.com/JonathanHolvey/sharepy>`__\nwhich seems to no longer be maintained.\n\n**NOTE:** Currently handles dealing with SharePoint Lists via handy\nshortcut methods, but you can currently also call\n``sp.get(url, *args, **kwargs)`` and ``sp.post(url, *args, **kwargs)``\nwith manually assembled SharePoint REST URLs and it will work.\n\nInstallation\n------------\n\nSharePoint Too can be installed from the Python Package Index, PyPI.\n\n::\n\n   pip install sharepoint-too\n\nInitiate a SharePoint session\n-----------------------------\n\n::\n\n   from sharepoint_too import SharePointSession\n   sp = SharePointSession(\"example.sharepoint.com\")\n\nMake an API call\n----------------\n\n::\n\n   r = sp.get_lists()\n\nThis will return a Requests ``response`` object. See the `requests\ndocumentation <http://docs.python-requests.org/en/master/>`__ for\ndetails. By default, the headers\n``accept: application/json;odata=verbose``\nand\\ ``content-type: application/json;odata=verbose`` are sent with all\nrequests, so API responses will be formatted as JSON where available.\n\nHeaders can be added or overridden by supplying a dictionary to the\nrelevant method:\n\n::\n\n   r = sp.get_lists(headers={\"Accept\": \"application/atom+xml\"})\n\nCurrently both the ``get()`` and ``post()`` methods will send a\n``x-requestdigest`` header, allowing modifications to be made to\nSharePoint objects.\n\nOther available methods\n-----------------------\n\n::\n\n   sp.get_list_metadata(weblist_url, list_guid=None, list_title=None)\n   sp.get_list_entity_type(weblist_url, list_guid=None, list_title=None)\n   sp.get_list_items(weblist_url, list_guid=None, list_title=None)\n   sp.get_list_item(weblist_url, item_id, list_guid=None, list_title=None)\n   sp.add_list_item(weblist_url, payload, list_guid=None, list_title=None)\n   sp.update_list_item(weblist_url, item_id, data, list_guid=None, list_title=None)\n   sp.upload(weblist_url, item_id, filename, list_guid=None, list_title=None)\n   sp.delete_list_item(weblist_url, item_id, list_guid=None, list_title=None)\n\n**NOTE:** Only ``list_guid`` or ``list_title`` need to be supplied, not\nboth.\n\nTests\n-----\n\nSince the tests require a SharePoint account you\u2019ll need to supply\nprivate values in order to run the tests:\n\nCreate a file called ``^/sharepoint_too/config.cfg``:\n\n::\n\n   [default]\n   domain=\n   user=\n   pwd=\n   site_url=https://example.sharepoint.com\n   weblist_url=https://example.sharepoint.com/_api/web/lists\n   list_title=\n   list_guid=\n   list_item_type=\n\nNow you can run:\n\n::\n\n   python -m pytest tests/test_sharepoint_too.py\n\nDocumentation\n-------------\n\nDocumentation is available at TODO\n\nRequirements\n------------\n\n-  `requests <https://github.com/psf/requests>`__\n-  `requests_ntlm <https://github.com/requests/requests-ntlm>`__\n\nIssues\n======\n\nIf you experience any issues, please create an\n`issue <https://bitbucket.org/tsantor/sharepoint-too/issues>`__ on\nBitbucket.\n\n\nHistory\n=======\n\nAll notable changes to this project will be documented in this file.\nThis project adheres to `Semantic Versioning <http://semver.org/>`__.\n\n0.1.0 (2020-04-27)\n------------------\n\n-  First release on PyPI.\n\n.. _section-1:\n\n0.1.1 (2020-04-27)\n------------------\n\n-  Updated license and installaton instructions due to typo.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://bitbucket.org/tsantor/sharepoint_too.git@0.1.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/tsantor/sharepoint_too", "keywords": "sharepoint-too,sharepoint_too", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "sharepoint-too", "package_url": "https://pypi.org/project/sharepoint-too/", "platform": "", "project_url": "https://pypi.org/project/sharepoint-too/", "project_urls": {"Download": "https://bitbucket.org/tsantor/sharepoint_too.git@0.1.1.tar.gz", "Homepage": "https://bitbucket.org/tsantor/sharepoint_too"}, "release_url": "https://pypi.org/project/sharepoint-too/0.1.1/", "requires_dist": ["requests-ntlm (~=1.1.0)", "requests (~=2.23.0)", "coverage ; extra == 'test'"], "requires_python": "", "summary": "This module will handle authentication for your SharePoint Online/O365 site, allowing you to make straightforward HTTP requests from Python. It extends the commonly used Requests module, meaning that returned objects are familliar, easy to work with and well documented.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"sharepoint-too\">\n<h2>SharePoint Too</h2>\n<p>Author:Tim Santor tsantor@xstudios.agency</p>\n<div id=\"overview\">\n<h3>Overview</h3>\n<p>This module will handle authentication for your SharePoint Online/O365\nsite, allowing you to make straightforward HTTP requests from Python. It\nextends the commonly used Requests module, meaning that returned objects\nare familliar, easy to work with and well documented. Leverages\n<a href=\"https://github.com/requests/requests-ntlm\" rel=\"nofollow\">requests_ntlm</a> for\nauthentication.</p>\n<p>Inspired by <a href=\"https://github.com/JonathanHolvey/sharepy\" rel=\"nofollow\">Sharepy</a>\nwhich seems to no longer be maintained.</p>\n<p><strong>NOTE:</strong> Currently handles dealing with SharePoint Lists via handy\nshortcut methods, but you can currently also call\n<tt>sp.get(url, *args, **kwargs)</tt> and <tt>sp.post(url, *args, **kwargs)</tt>\nwith manually assembled SharePoint REST URLs and it will work.</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>SharePoint Too can be installed from the Python Package Index, PyPI.</p>\n<pre>pip install sharepoint-too\n</pre>\n</div>\n<div id=\"initiate-a-sharepoint-session\">\n<h3>Initiate a SharePoint session</h3>\n<pre>from sharepoint_too import SharePointSession\nsp = SharePointSession(\"example.sharepoint.com\")\n</pre>\n</div>\n<div id=\"make-an-api-call\">\n<h3>Make an API call</h3>\n<pre>r = sp.get_lists()\n</pre>\n<p>This will return a Requests <tt>response</tt> object. See the <a href=\"http://docs.python-requests.org/en/master/\" rel=\"nofollow\">requests\ndocumentation</a> for\ndetails. By default, the headers\n<tt>accept: application/json;odata=verbose</tt>\nand<tt><span class=\"pre\">content-type:</span> application/json;odata=verbose</tt> are sent with all\nrequests, so API responses will be formatted as JSON where available.</p>\n<p>Headers can be added or overridden by supplying a dictionary to the\nrelevant method:</p>\n<pre>r = sp.get_lists(headers={\"Accept\": \"application/atom+xml\"})\n</pre>\n<p>Currently both the <tt>get()</tt> and <tt>post()</tt> methods will send a\n<tt><span class=\"pre\">x-requestdigest</span></tt> header, allowing modifications to be made to\nSharePoint objects.</p>\n</div>\n<div id=\"other-available-methods\">\n<h3>Other available methods</h3>\n<pre>sp.get_list_metadata(weblist_url, list_guid=None, list_title=None)\nsp.get_list_entity_type(weblist_url, list_guid=None, list_title=None)\nsp.get_list_items(weblist_url, list_guid=None, list_title=None)\nsp.get_list_item(weblist_url, item_id, list_guid=None, list_title=None)\nsp.add_list_item(weblist_url, payload, list_guid=None, list_title=None)\nsp.update_list_item(weblist_url, item_id, data, list_guid=None, list_title=None)\nsp.upload(weblist_url, item_id, filename, list_guid=None, list_title=None)\nsp.delete_list_item(weblist_url, item_id, list_guid=None, list_title=None)\n</pre>\n<p><strong>NOTE:</strong> Only <tt>list_guid</tt> or <tt>list_title</tt> need to be supplied, not\nboth.</p>\n</div>\n<div id=\"tests\">\n<h3>Tests</h3>\n<p>Since the tests require a SharePoint account you\u2019ll need to supply\nprivate values in order to run the tests:</p>\n<p>Create a file called <tt>^/sharepoint_too/config.cfg</tt>:</p>\n<pre>[default]\ndomain=\nuser=\npwd=\nsite_url=https://example.sharepoint.com\nweblist_url=https://example.sharepoint.com/_api/web/lists\nlist_title=\nlist_guid=\nlist_item_type=\n</pre>\n<p>Now you can run:</p>\n<pre>python -m pytest tests/test_sharepoint_too.py\n</pre>\n</div>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p>Documentation is available at TODO</p>\n</div>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ul>\n<li><a href=\"https://github.com/psf/requests\" rel=\"nofollow\">requests</a></li>\n<li><a href=\"https://github.com/requests/requests-ntlm\" rel=\"nofollow\">requests_ntlm</a></li>\n</ul>\n</div>\n</div>\n<div id=\"issues\">\n<h2>Issues</h2>\n<p>If you experience any issues, please create an\n<a href=\"https://bitbucket.org/tsantor/sharepoint-too/issues\" rel=\"nofollow\">issue</a> on\nBitbucket.</p>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<p>All notable changes to this project will be documented in this file.\nThis project adheres to <a href=\"http://semver.org/\" rel=\"nofollow\">Semantic Versioning</a>.</p>\n<div id=\"id1\">\n<h3>0.1.0 (2020-04-27)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<span id=\"section-1\"></span><h3>0.1.1 (2020-04-27)</h3>\n<ul>\n<li>Updated license and installaton instructions due to typo.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7114071, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "bfd5cc2ba39a7a6c0383dcee85a04188", "sha256": "972181cfb9e739f13ae09a27e3bfe33f96e082263ff5d898b480afbafbdf43ce"}, "downloads": -1, "filename": "sharepoint_too-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bfd5cc2ba39a7a6c0383dcee85a04188", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6605, "upload_time": "2020-04-27T18:47:59", "upload_time_iso_8601": "2020-04-27T18:47:59.892104Z", "url": "https://files.pythonhosted.org/packages/45/f4/2f77ddbc86e071353ca5d2195d92eaed5c236bb52cc05a9aab04cc8b612e/sharepoint_too-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f63b33597d598ec3d5037ccb736277f3", "sha256": "6dea848f9d005da8da6193dbef4095175b4c33788f3c193f47f21fc1df9feb26"}, "downloads": -1, "filename": "sharepoint-too-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f63b33597d598ec3d5037ccb736277f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 127006, "upload_time": "2020-04-27T18:48:02", "upload_time_iso_8601": "2020-04-27T18:48:02.383567Z", "url": "https://files.pythonhosted.org/packages/1a/7e/7b98a775c1c11245f6887ecac9fde4816ae08f443495fe43399b082524c6/sharepoint-too-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ed75b3c6ea2c011167763951b3dfc275", "sha256": "d4e827961b809048eda5a38e806271feec54545ad0e5bd84bb86c18f5f3e8d16"}, "downloads": -1, "filename": "sharepoint_too-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ed75b3c6ea2c011167763951b3dfc275", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6644, "upload_time": "2020-04-27T19:02:16", "upload_time_iso_8601": "2020-04-27T19:02:16.968939Z", "url": "https://files.pythonhosted.org/packages/34/26/338f7321805d6119905e66cac2c31044bf82b907f12cb4064b38252a2358/sharepoint_too-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1866cbb33f118da699297d4f770fcae8", "sha256": "ac5162b2bf7d0416a9a8c2b6b0e6611bb20b6c1788060585ca4d13f26bf117b4"}, "downloads": -1, "filename": "sharepoint-too-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1866cbb33f118da699297d4f770fcae8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 127105, "upload_time": "2020-04-27T19:02:18", "upload_time_iso_8601": "2020-04-27T19:02:18.364309Z", "url": "https://files.pythonhosted.org/packages/a8/d9/c2ef8cce88896e362520114a134991feb54a0de1bf9fdb25374d9340cbef/sharepoint-too-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ed75b3c6ea2c011167763951b3dfc275", "sha256": "d4e827961b809048eda5a38e806271feec54545ad0e5bd84bb86c18f5f3e8d16"}, "downloads": -1, "filename": "sharepoint_too-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ed75b3c6ea2c011167763951b3dfc275", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6644, "upload_time": "2020-04-27T19:02:16", "upload_time_iso_8601": "2020-04-27T19:02:16.968939Z", "url": "https://files.pythonhosted.org/packages/34/26/338f7321805d6119905e66cac2c31044bf82b907f12cb4064b38252a2358/sharepoint_too-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1866cbb33f118da699297d4f770fcae8", "sha256": "ac5162b2bf7d0416a9a8c2b6b0e6611bb20b6c1788060585ca4d13f26bf117b4"}, "downloads": -1, "filename": "sharepoint-too-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1866cbb33f118da699297d4f770fcae8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 127105, "upload_time": "2020-04-27T19:02:18", "upload_time_iso_8601": "2020-04-27T19:02:18.364309Z", "url": "https://files.pythonhosted.org/packages/a8/d9/c2ef8cce88896e362520114a134991feb54a0de1bf9fdb25374d9340cbef/sharepoint-too-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:13:36 2020"}