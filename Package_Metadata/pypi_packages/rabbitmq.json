{"info": {"author": "Jasper Bryant-Greene", "author_email": "jbg@rf.net.nz", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries"], "description": "rabbitmq\n========\n\nPython bindings to librabbitmq using CFFI\n\nThis is fairly rudimentary so far but does allow using librabbitmq on Python 3 to a basic degree, which was my primary motivation for this work.\n\nCurrently tested against librabbitmq 0.8.0 on Python 3.6 and 2.7. It is in production on Python 3.6 on two fairly heavily-loaded message queues.\n\nAvailable [on PyPI](https://pypi.python.org/pypi/rabbitmq), just `pip install rabbitmq`.\n\nProper documentation coming soon. Example usage:\n\n```python\nimport rabbitmq\n\nconn = rabbitmq.Connection()\nconn.open(AMQP_BROKER_HOST, AMQP_BROKER_PORT)\nconn.login(AMQP_BROKER_VHOST, 0, AMQP_BROKER_USER, AMQP_BROKER_PASSWORD)\nconn.open_channel(1)\nconn.declare_exchange(1, \"queuename\", \"direct\")\nconn.declare_queue(1, \"queuename\")\nconn.bind_queue(1, \"queuename\", \"queuename\", \"queuename\")\nconn.consume(1, \"queuename\")\n\npublish_conn = rabbitmq.Connection()\npublish_conn.open(AMQP_BROKER_HOST, AMQP_BROKER_PORT)\npublish_conn.login(AMQP_BROKER_VHOST, 0, AMQP_BROKER_USER, AMQP_BROKER_PASSWORD)\npublish_conn.open_channel(1)\npublish_conn.declare_exchange(1, \"exchangename\", \"direct\")\n\nwhile True:\n    envelope = conn.consume_message()\n    conn.ack(1, envelope.delivery_tag)\n\n    props = rabbitmq.Properties(content_type=\"...\", delivery_mode=1)\n    body = b\"...\"\n    if len(body) > 8192:\n        # example of compressing large message bodies\n        from bz2 import compress\n        body = compress(body)\n        props.content_encoding = \"bzip2\"\n    publish_conn.publish(1, \"exchangename\", envelope.message.properties.reply_to, body, props)\n```\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jbg/rabbitmq", "keywords": "rabbitmq amqp cffi", "license": "Apache-2.0", "maintainer": "", "maintainer_email": "", "name": "rabbitmq", "package_url": "https://pypi.org/project/rabbitmq/", "platform": "", "project_url": "https://pypi.org/project/rabbitmq/", "project_urls": {"Homepage": "https://github.com/jbg/rabbitmq"}, "release_url": "https://pypi.org/project/rabbitmq/0.2.0/", "requires_dist": ["cffi"], "requires_python": "", "summary": "CFFI bindings to librabbitmq 0.8.0", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            rabbitmq<br>========<br><br>Python bindings to librabbitmq using CFFI<br><br>This is fairly rudimentary so far but does allow using librabbitmq on Python 3 to a basic degree, which was my primary motivation for this work.<br><br>Currently tested against librabbitmq 0.8.0 on Python 3.6 and 2.7. It is in production on Python 3.6 on two fairly heavily-loaded message queues.<br><br>Available [on PyPI](https://pypi.python.org/pypi/rabbitmq), just `pip install rabbitmq`.<br><br>Proper documentation coming soon. Example usage:<br><br>```python<br>import rabbitmq<br><br>conn = rabbitmq.Connection()<br>conn.open(AMQP_BROKER_HOST, AMQP_BROKER_PORT)<br>conn.login(AMQP_BROKER_VHOST, 0, AMQP_BROKER_USER, AMQP_BROKER_PASSWORD)<br>conn.open_channel(1)<br>conn.declare_exchange(1, \"queuename\", \"direct\")<br>conn.declare_queue(1, \"queuename\")<br>conn.bind_queue(1, \"queuename\", \"queuename\", \"queuename\")<br>conn.consume(1, \"queuename\")<br><br>publish_conn = rabbitmq.Connection()<br>publish_conn.open(AMQP_BROKER_HOST, AMQP_BROKER_PORT)<br>publish_conn.login(AMQP_BROKER_VHOST, 0, AMQP_BROKER_USER, AMQP_BROKER_PASSWORD)<br>publish_conn.open_channel(1)<br>publish_conn.declare_exchange(1, \"exchangename\", \"direct\")<br><br>while True:<br>    envelope = conn.consume_message()<br>    conn.ack(1, envelope.delivery_tag)<br><br>    props = rabbitmq.Properties(content_type=\"...\", delivery_mode=1)<br>    body = b\"...\"<br>    if len(body) &gt; 8192:<br>        # example of compressing large message bodies<br>        from bz2 import compress<br>        body = compress(body)<br>        props.content_encoding = \"bzip2\"<br>    publish_conn.publish(1, \"exchangename\", envelope.message.properties.reply_to, body, props)<br>```<br><br><br>\n          </div>"}, "last_serial": 2931552, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "bc73124cf7a3ed30ed2ad7c0a5070f38", "sha256": "b2d365df1b500e2d0290d6e764b3a9e7067c5e1ea01ab12b3ba6c51de9455e64"}, "downloads": -1, "filename": "rabbitmq-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bc73124cf7a3ed30ed2ad7c0a5070f38", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6850, "upload_time": "2017-06-04T11:00:21", "upload_time_iso_8601": "2017-06-04T11:00:21.147511Z", "url": "https://files.pythonhosted.org/packages/b3/23/ade50103d4b449712328c5a9a9e65a826f0c5bcf73764e565642e4c687cf/rabbitmq-0.1.0-py2.py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "a3adaaacfebb786ae4143e9fa9ca8b5c", "sha256": "74cfbc0f365019a8f318cd1ad9b1f85682768568fa3816740df37509a6dfbc2d"}, "downloads": -1, "filename": "rabbitmq-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a3adaaacfebb786ae4143e9fa9ca8b5c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7865, "upload_time": "2017-06-07T08:46:41", "upload_time_iso_8601": "2017-06-07T08:46:41.716291Z", "url": "https://files.pythonhosted.org/packages/bc/1d/6b4397309786eaba2dee82285773c383d41ab4b3ffdb933d9af48de52025/rabbitmq-0.2.0-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a3adaaacfebb786ae4143e9fa9ca8b5c", "sha256": "74cfbc0f365019a8f318cd1ad9b1f85682768568fa3816740df37509a6dfbc2d"}, "downloads": -1, "filename": "rabbitmq-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a3adaaacfebb786ae4143e9fa9ca8b5c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7865, "upload_time": "2017-06-07T08:46:41", "upload_time_iso_8601": "2017-06-07T08:46:41.716291Z", "url": "https://files.pythonhosted.org/packages/bc/1d/6b4397309786eaba2dee82285773c383d41ab4b3ffdb933d9af48de52025/rabbitmq-0.2.0-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:08:09 2020"}