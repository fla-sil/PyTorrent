{"info": {"author": "Mirko M\u00e4licke", "author_email": "mirko@maelicke-online.de", "bugtrack_url": null, "classifiers": [], "description": "PyEDU\n=====\n\nThe Python Educational Suite (PyEDU) is a flask application for guided Python exercise creation and completion. It\nwas created for the Python I and Python II lectures at the Chair for remote sensing and landscape information systems\nat the Univeristy of Freiburg, but will however work with other exercises as well.\n\nThe application is meant to be run from the localhost so that the exercise code is run in a local Python environement.\nBefore running it on a remote server, one has to make sure that no harmful code is included in the exercises before\nrunning the code. However, the local application can connect to a local or remote database. For Python I and II these\nremote connections are already included in an encrypted file. As the user has the decryption key, the connection can\nbe used. In the supplementary folder is Jupyter notebook which can create such a file for other remote locations.\n\nInstallation\n~~~~~~~~~~~~\n\nAlthough the project will be on PyPI, the installation using git favored. One of the next updates will included\na version check and auto-update function, which will be based on git and might not work when PyEDU is installed\nusing pip. It can be installed using:\n\n.. code-block:: bash\n\n    git clone https://github.com/mmaelicke/pyedu.git\n    cd pyedu\n    pip install -r requirements.txt\n    python setup.py install\n\n\nUsing remote connections\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nIn order to use a remote connection you'll need a file with the decryption key in it. The connection and keys are in the\npyedu/enc folder. To use a remote connection as default, rename the .enc file you wish to use to 'remote.enc' and\nplace the key as 'remote.key' into the enc folder. Then the default flask settings will use this connection as\nthe default connection.\nFor one of the next updates, there will be the possibility to enter the cleartext key during the start process. Then\nthe user cannot manually decrypt the enc file anymore.\n\nStarting the application\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nIn order to start the application, in the pyedu/pyedu folder use:\n\n.. code-block:: bash\n\n    python manage.py runserver\n\nIf you like to use another flask configuration, like with enabled debug mode or a local connection, you can use the -c\n(--config) flag:\n\n.. code-block:: bash\n\n    python manage.py -c local_dev runserver\n\nOnce the server is running, the application can be accessed with your browser and activated Javascript at:\n\n.. code-block::\n\n    http://locahost:5000\n\nWith one of the next versions, the application will be able to create a shortcut on Windows or a executable symlink on\nLinux for starting the application.\n\n\nSecurity\n~~~~~~~~\n\nPlease note, that this application is not made for remote usage and still under active development. If you decide to\nrun this application with a remote database, please note that it is possbile to read the database connection and\nconnect externally. To come around external assingment injection, the application will include a different assign\nroute with a future release, that will shift the solution check to a remote REST API and therefore make the student\ndb user a read only db user.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyedu", "package_url": "https://pypi.org/project/pyedu/", "platform": "", "project_url": "https://pypi.org/project/pyedu/", "project_urls": null, "release_url": "https://pypi.org/project/pyedu/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "Leaning Python interactively", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The Python Educational Suite (PyEDU) is a flask application for guided Python exercise creation and completion. It\nwas created for the Python I and Python II lectures at the Chair for remote sensing and landscape information systems\nat the Univeristy of Freiburg, but will however work with other exercises as well.</p>\n<p>The application is meant to be run from the localhost so that the exercise code is run in a local Python environement.\nBefore running it on a remote server, one has to make sure that no harmful code is included in the exercises before\nrunning the code. However, the local application can connect to a local or remote database. For Python I and II these\nremote connections are already included in an encrypted file. As the user has the decryption key, the connection can\nbe used. In the supplementary folder is Jupyter notebook which can create such a file for other remote locations.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Although the project will be on PyPI, the installation using git favored. One of the next updates will included\na version check and auto-update function, which will be based on git and might not work when PyEDU is installed\nusing pip. It can be installed using:</p>\n<pre>git clone https://github.com/mmaelicke/pyedu.git\n<span class=\"nb\">cd</span> pyedu\npip install -r requirements.txt\npython setup.py install\n</pre>\n</div>\n<div id=\"using-remote-connections\">\n<h2>Using remote connections</h2>\n<p>In order to use a remote connection you\u2019ll need a file with the decryption key in it. The connection and keys are in the\npyedu/enc folder. To use a remote connection as default, rename the .enc file you wish to use to \u2018remote.enc\u2019 and\nplace the key as \u2018remote.key\u2019 into the enc folder. Then the default flask settings will use this connection as\nthe default connection.\nFor one of the next updates, there will be the possibility to enter the cleartext key during the start process. Then\nthe user cannot manually decrypt the enc file anymore.</p>\n</div>\n<div id=\"starting-the-application\">\n<h2>Starting the application</h2>\n<p>In order to start the application, in the pyedu/pyedu folder use:</p>\n<pre>python manage.py runserver\n</pre>\n<p>If you like to use another flask configuration, like with enabled debug mode or a local connection, you can use the -c\n(\u2013config) flag:</p>\n<pre>python manage.py -c local_dev runserver\n</pre>\n<p>Once the server is running, the application can be accessed with your browser and activated Javascript at:</p>\n<pre>http://locahost:5000\n</pre>\n<p>With one of the next versions, the application will be able to create a shortcut on Windows or a executable symlink on\nLinux for starting the application.</p>\n</div>\n<div id=\"security\">\n<h2>Security</h2>\n<p>Please note, that this application is not made for remote usage and still under active development. If you decide to\nrun this application with a remote database, please note that it is possbile to read the database connection and\nconnect externally. To come around external assingment injection, the application will include a different assign\nroute with a future release, that will shift the solution check to a remote REST API and therefore make the student\ndb user a read only db user.</p>\n</div>\n\n          </div>"}, "last_serial": 3150140, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "f41c814139ff1446ce188a511400668e", "sha256": "74cf99d36755242011c8dc3b17004b3b92a99fad70fcf1d27a08eb820db9ce5e"}, "downloads": -1, "filename": "pyedu-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f41c814139ff1446ce188a511400668e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21503, "upload_time": "2017-08-15T08:52:57", "upload_time_iso_8601": "2017-08-15T08:52:57.484810Z", "url": "https://files.pythonhosted.org/packages/96/0b/2383c3d155478505f807f6963dd6d1d048ade68c6a55e9db9815509e1277/pyedu-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "b6921132e6d883df8bce239ac0ecad35", "sha256": "85e4cc633106d1752bf3f4fdf1b21dddaa7d9111947540d31dcb19e1e9d52f06"}, "downloads": -1, "filename": "pyedu-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b6921132e6d883df8bce239ac0ecad35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21708, "upload_time": "2017-09-05T12:01:44", "upload_time_iso_8601": "2017-09-05T12:01:44.879620Z", "url": "https://files.pythonhosted.org/packages/71/f3/d92b719c05c9db0af351101ddac2a6f8e127f9b65337248da906cc7da8c4/pyedu-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b6921132e6d883df8bce239ac0ecad35", "sha256": "85e4cc633106d1752bf3f4fdf1b21dddaa7d9111947540d31dcb19e1e9d52f06"}, "downloads": -1, "filename": "pyedu-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b6921132e6d883df8bce239ac0ecad35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21708, "upload_time": "2017-09-05T12:01:44", "upload_time_iso_8601": "2017-09-05T12:01:44.879620Z", "url": "https://files.pythonhosted.org/packages/71/f3/d92b719c05c9db0af351101ddac2a6f8e127f9b65337248da906cc7da8c4/pyedu-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:31 2020"}