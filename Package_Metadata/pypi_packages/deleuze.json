{"info": {"author": "Eric Scrivner", "author_email": "eric.t.scrivner@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Deleuze\n\nA simple system for generating new python projects according to a resonable\ndefault skeleton. Example:\n\n`$ deleuze new supertool`\n\nThis will generate the following project directory structure:\n\n```\nsupertool\n|-- bin\n|    +-- supertool.py\n|-- reqs\n|    +-- common.txt\n|    +-- dev.txt\n|    +-- production.txt\n|    +-- test.txt\n|-- supertool\n|    +-- __init__.py\n|-- tests\n|    +-- __init__.py\n|    +-- base.py\n|    +-- factories.py\n|    +-- test_supertool.py\n+-- README.md\n+-- requirements.txt\n+-- setup.py\n```\n\nThis provides, what is solely in my opinion, a decent initial project structure.\nThe requirements files are preconfigured, reasonable testing defaults are added,\nand a failing unit-test is included in supertool/tests/test_supertool.py to\nremind you to start by writing some passing tests.\n\nNext I usually spin up a new virtualenv environment for this project, install\nthe requirements, and get to work on something more interesting.\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/etscrivner/deleuze", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/etscrivner/deleuze", "keywords": "project,project creation,scaffolding,scaffold", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "deleuze", "package_url": "https://pypi.org/project/deleuze/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/deleuze/", "project_urls": {"Download": "https://github.com/etscrivner/deleuze", "Homepage": "https://github.com/etscrivner/deleuze"}, "release_url": "https://pypi.org/project/deleuze/0.9/", "requires_dist": null, "requires_python": null, "summary": "Simple python project creation tool - inspired by Leiningen.", "version": "0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># Deleuze</p>\n<p>A simple system for generating new python projects according to a resonable\ndefault skeleton. Example:</p>\n<p><cite>$ deleuze new supertool</cite></p>\n<p>This will generate the following project directory structure:</p>\n<p><tt>`\nsupertool\n<span class=\"pre\">|--</span> bin\n|\u00a0\u00a0\u00a0 <span class=\"pre\">+--</span> supertool.py\n<span class=\"pre\">|--</span> reqs\n|\u00a0\u00a0\u00a0 <span class=\"pre\">+--</span> common.txt\n|\u00a0\u00a0\u00a0 <span class=\"pre\">+--</span> dev.txt\n|\u00a0\u00a0\u00a0 <span class=\"pre\">+--</span> production.txt\n|\u00a0\u00a0\u00a0 <span class=\"pre\">+--</span> test.txt\n<span class=\"pre\">|--</span> supertool\n|\u00a0\u00a0\u00a0 <span class=\"pre\">+--</span> __init__.py\n<span class=\"pre\">|--</span> tests\n|\u00a0\u00a0\u00a0 <span class=\"pre\">+--</span> __init__.py\n|\u00a0\u00a0\u00a0 <span class=\"pre\">+--</span> base.py\n|\u00a0\u00a0\u00a0 <span class=\"pre\">+--</span> factories.py\n|\u00a0\u00a0\u00a0 <span class=\"pre\">+--</span> test_supertool.py\n<span class=\"pre\">+--</span> README.md\n<span class=\"pre\">+--</span> requirements.txt\n<span class=\"pre\">+--</span> setup.py\n`</tt></p>\n<p>This provides, what is solely in my opinion, a decent initial project structure.\nThe requirements files are preconfigured, reasonable testing defaults are added,\nand a failing unit-test is included in supertool/tests/test_supertool.py to\nremind you to start by writing some passing tests.</p>\n<p>Next I usually spin up a new virtualenv environment for this project, install\nthe requirements, and get to work on something more interesting.</p>\n\n          </div>"}, "last_serial": 1166251, "releases": {"0.9": [{"comment_text": "", "digests": {"md5": "f965d303848f4c56fea5c548ee662b4d", "sha256": "ff9185158f883804f13a29d060ecc1735479a4aaa577a156ec2b248c36db6c71"}, "downloads": -1, "filename": "deleuze-0.9.tar.gz", "has_sig": false, "md5_digest": "f965d303848f4c56fea5c548ee662b4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4006, "upload_time": "2014-07-23T04:51:18", "upload_time_iso_8601": "2014-07-23T04:51:18.417632Z", "url": "https://files.pythonhosted.org/packages/6b/65/0100722b6d85eb8a504547eb39151cae32e58b783a88b42079364fb6488a/deleuze-0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f965d303848f4c56fea5c548ee662b4d", "sha256": "ff9185158f883804f13a29d060ecc1735479a4aaa577a156ec2b248c36db6c71"}, "downloads": -1, "filename": "deleuze-0.9.tar.gz", "has_sig": false, "md5_digest": "f965d303848f4c56fea5c548ee662b4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4006, "upload_time": "2014-07-23T04:51:18", "upload_time_iso_8601": "2014-07-23T04:51:18.417632Z", "url": "https://files.pythonhosted.org/packages/6b/65/0100722b6d85eb8a504547eb39151cae32e58b783a88b42079364fb6488a/deleuze-0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:12 2020"}