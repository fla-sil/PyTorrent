{"info": {"author": "Taotao Li", "author_email": "taotao.engineer@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Science/Research", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Topic :: Scientific/Engineering", "Topic :: Software Development"], "description": "|build status| |Documentation Status| |coverage| |PyPI Version|\n|Downloads|\n\n***Inspired by `IPython <http://ipython.org/>`__, built with love***\n====================================================================\n\nIPython-Dashboard\n=================\n\nA stand alone, light-weight web server for building, sharing graphs\ncreated in IPython. Build for data science, data analysis guys. Aiming\nat building an interactive visualization, collaborated dashboard, and\nreal-time streaming graph.\n\nUsage\n=====\n\n-  *Install prerequisite*\n\n   -  install the latest stable IPython-Dashboard:\n      ``pip install ipython-dashboard --upgrade``\n   -  install redis 2.6+ : `install\n      guide <http://redis.io/topics/quickstart>`__\n   -  [``option``, if you need run sql]install mysql :\n      ``brew install mysql`` or ``apt-get install mysql``\n   -  install IPython-Dashboard requirements [unneeded sometimes]:\n\n      -  ``cd ~/your python package path/IPython-Dashboard``\n      -  ``pip install -r requirements.txt``\n\n-  *[``option``, if you need run sql]Config mysql*\n\n   -  start mysql server : ``mysql.server start``\n   -  login in mysql using root : ``mysql -u root``\n   -  create a user and grant privileges;\n\n      -  take a look at current database user\n\n         ::\n\n             mysql> SELECT User,Host FROM mysql.user;\n             +------+-----------+\n             | User | Host      |\n             +------+-----------+\n             | root | 127.0.0.1 |\n             | root | ::1       |\n             |      | localhost |\n             | root | localhost |\n             |      | mac007    |\n             | root | mac007    |\n             +------+-----------+\n             6 rows in set (0.00 sec)\n\n      -  create a user for IPython-Dashboard\n\n      ::\n\n          mysql> create user 'ipd'@'localhost' identified by 'thanks';\n          Query OK, 0 rows affected (0.00 sec)\n\n          mysql> grant all privileges on *.* to ipd@localhost;\n          Query OK, 0 rows affected (0.00 sec)\n\n          mysql> SELECT User,Host FROM mysql.user;\n          +------+-----------+\n          | User | Host      |\n          +------+-----------+\n          | root | 127.0.0.1 |\n          | root | ::1       |\n          |      | localhost |\n          | ipd  | localhost |\n          | root | localhost |\n          |      | mac007    |\n          | root | mac007    |\n          +------+-----------+\n          7 rows in set (0.00 sec)\n\n          mysql> flush privileges;\n          Query OK, 0 rows affected (0.00 sec)\n\n   -  create tables;\n\n      ::\n\n          nosetests -s dashboard.tests.testCreateData:test_create_mysql_data\n\n-  *Create logging path*\n\n   -  create a folder to store log files. I put it under ``mnt``\n      currently: ``/mnt/ipython-dashboard/logs``\n   -  make sure the log folder is write-able, using ``chmod`` and\n      ``ls -l`` to confirm.\n\n      ::\n\n          chenshan@mac007:/mnt/ipython-dashboard$ls -l\n          total 0\n          drwxrwxrwx  9 root  wheel  306 Dec 15 22:09 logs\n\n-  *Config IPython-Dashboard server :\n   ``IPython-Dashboard/dashboard/config.py``*\n\n   -  ``app_host='ip_address:port'``\n\n-  *Start redis and IPython-Dashboard server*\n\n   ::\n\n       chenshan@mac007:~/Desktop/github/IPython-Dashboard$redis-server &\n\n       chenshan@mac007:~/Desktop/github/IPython-Dashboard$dash-server --help\n       usage: dash-server [-h] [-H HOST] [-p PORT] [-d DEBUG]\n\n       Start your IPython-Dashboard server ...\n\n       optional arguments:\n         -h, --help            show this help message and exit\n         -H HOST, --host HOST  server host, default localhost\n         -p PORT, --port PORT  server port, default 9090\n         -d DEBUG, --debug DEBUG\n                               server port, default true\n\n       chenshan@mac007:~/Desktop/github/IPython-Dashboard$dash-server\n       Namespace(debug=True, host='0.0.0.0', port=9090)\n        * Running on http://0.0.0.0:9090/\n        * Restarting with reloader\n       Namespace(debug=True, host='0.0.0.0', port=9090)\n\n-  *Do your exploring*\n\n   -  ***IPython-Dashboard-Tutorial.ipynb*** : `On\n      nbviewer <http://nbviewer.ipython.org/github/litaotao/IPython-Dashboard/blob/master/docs/IPython-Dashboard-Tutorial.ipynb>`__\n      or `On\n      github <https://github.com/litaotao/IPython-Dashboard/blob/master/docs/IPython-Dashboard-Tutorial.ipynb>`__\n\nGoal\n====\n\n-  support raw html visualization\n-  support python object visualization\n-  Editable\n-  Real-time fresh when rendering a variable python object\n-  Can be shared, both public and private [ need password ]\n-  In the notebook, can share an object to a dashboard [ that's\n   visualize that object in that dashboard ]\n\nUse Case\n========\n\n-  exploring in notebook, share/send the result/summary to people,\n   without the details.\n-  share some data in a private notebook.\n-  disappointed with the complicated code when drawing a graceful/staic\n   graph using matplotlib/seaborn/mpld3 etc.\n-  want an interactive graph, allow people to zoom in/out, resize, get\n   hover tips, change graph type easily.\n-  want a real-time graph.\n-  want an collaborated graph/dashboard.\n\n.. figure:: https://raw.githubusercontent.com/litaotao/IPython-Dashboard/v-0.1.5-sql-server-log/docs/wise-choice.jpg\n   :alt: wise-choice\n\n   wise-choice\n\nScreenshot and Demo\n===================\n\n| `Demo on\n  Youtube <https://www.youtube.com/watch?v=Sy_Kmi6FFUg&feature=youtu.be>`__\n| `Demo on Youku <http://v.youku.com/v_show/id_XMTM3MTc5MTAwMA>`__\n\n.. figure:: https://raw.githubusercontent.com/litaotao/IPython-Dashboard/v-0.1.5-sql-server-log/docs/template-screenshot-0.1.3-1.jpg\n   :alt: screenshot\n\n   screenshot\n\n.. figure:: https://raw.githubusercontent.com/litaotao/IPython-Dashboard/v-0.1.5-sql-server-log/docs/template-dashboard-0.1.5-2.jpg\n   :alt: screenshot\n\n   screenshot\n\n.. figure:: https://raw.githubusercontent.com/litaotao/IPython-Dashboard/v-0.1.5-sql-server-log/docs/template-screenshot-0.1.4-1.jpg\n   :alt: screenshot\n\n   screenshot\n\n.. figure:: https://raw.githubusercontent.com/litaotao/IPython-Dashboard/v-0.1.5-sql-server-log/docs/template-screenshot-0.1.5-1.jpg\n   :alt: screenshot\n\n   screenshot\n\nRun tests\n=========\n\njust run ``sudo nosetests --with-coverage --cover-package=dashboard``\nunder this repo\n\n::\n\n    taotao@mac007:~/Desktop/github/IPython-Dashboard$sudo nosetests --with-coverage --cover-package=dashboard\n    Password:\n    ../Users/chenshan/Desktop/github/IPython-Dashboard/dashboard/tests/testCreateData.py:69: Warning: Can't create database 'IPD_data'; database exists\n      conn.cursor().execute('CREATE DATABASE IF NOT EXISTS {};'.format(config.sql_db))\n    /Users/chenshan/Desktop/github/IPython-Dashboard/dashboard/server/utils.py:135: Warning: Unknown table 'ipd_data.businesses'\n      cursor.execute(sql)\n    /Library/Python/2.7/site-packages/pandas/io/sql.py:599: FutureWarning: The 'mysql' flavor with DBAPI connection is deprecated and will be removed in future versions. MySQL will be further supported with SQLAlchemy engines.\n      warnings.warn(_MYSQL_WARNING, FutureWarning)\n    ...\n    Name                                    Stmts   Miss  Cover   Missing\n    ---------------------------------------------------------------------\n    dashboard.py                               13      0   100%\n    dashboard/client.py                         1      0   100%\n    dashboard/client/sender.py                 11      3    73%   26-27, 33\n    dashboard/conf.py                           0      0   100%\n    dashboard/conf/config.py                   29      0   100%\n    dashboard/server.py                         0      0   100%\n    dashboard/server/resources.py               0      0   100%\n    dashboard/server/resources/dash.py         35     10    71%   36, 55-56, 67-69, 86-89\n    dashboard/server/resources/home.py         40     12    70%   25, 28-30, 83-91\n    dashboard/server/resources/sql.py          27     11    59%   30, 52-75\n    dashboard/server/resources/status.py        8      1    88%   19\n    dashboard/server/resources/storage.py      13      5    62%   26-28, 43-47\n    dashboard/server/utils.py                  79     18    77%   20-24, 78-80, 82-83, 86, 96, 99-100, 126-127, 140-142\n    dashboard/server/views.py                  21      1    95%   16\n    ---------------------------------------------------------------------\n    TOTAL                                     277     61    78%\n    ----------------------------------------------------------------------\n    Ran 5 tests in 9.885s\n\n    OK\n    taotao@mac007:~/Desktop/github/IPython-Dashboard$\n\n`Change Log <./CHANGES.md>`__\n=============================\n\n-  future\n\n   -  front side, databricks style\n   -  pep 8, code clean up & restructure\n   -  hover tips\n   -  edit modal can be resized\n   -  Share one graph\n   -  Share one dashboard\n   -  Presentation mode\n   -  footer\n   -  unified message display center\n   -  SQL Editor\n   -  login management\n   -  unified logger and exception report\n   -  server side log\n   -  client side log\n   -  support python3\n   -  create examples\n   -  render sql in dashboard\n   -  chart optimize\n\n-  ***V 0.1.6 : optimize-chart [ current develop version ]***\n\n   -  Dashboard\n\n      -  re-structure code, follow pep8 style\n      -  create 1 example\n      -  optimize chart\n\n   -  SQL Editor\n\n      -  optimize page\n      -  render sql result as graph\n\n-  ***V 0.1.5 : sql-server-log [ current stable version ]***\n\n   -  Dashboard\n\n      -  create 1 example\n      -  server side log\n      -  support x-axis as date format\n      -  research on real-time updated dataframe\n\n   -  SQL Editor\n\n      -  sql server develop : render sql result as table view\n\n.. |build status| image:: https://api.travis-ci.org/litaotao/IPython-Dashboard.svg?branch=master\n   :target: https://travis-ci.org/litaotao/IPython-Dashboard\n.. |Documentation Status| image:: https://readthedocs.org/projects/ipython-dashboard/badge/?version=latest\n   :target: http://ipython-dashboard.readthedocs.org/en/latest\n.. |coverage| image:: https://coveralls.io/repos/litaotao/IPython-Dashboard/badge.svg?branche=master&service=github\n   :target: https://coveralls.io/r/litaotao/IPython-Dashboard\n.. |PyPI Version| image:: http://img.shields.io/pypi/v/IPython-Dashboard.svg\n   :target: https://pypi.python.org/pypi/IPython-Dashboard\n.. |Downloads| image:: https://img.shields.io/pypi/dm/ipython-dashboard.svg\n   :target: https://pypi.python.org/pypi/IPython-Dashboard", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/litaotao/IPython-Dashboard/tree/v-0.1.5-sql-server-log", "keywords": "ipython,dashboard,interactive,visualization,data science,data analysis,streaming", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "IPython-Dashboard", "package_url": "https://pypi.org/project/IPython-Dashboard/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/IPython-Dashboard/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/litaotao/IPython-Dashboard/tree/v-0.1.5-sql-server-log"}, "release_url": "https://pypi.org/project/IPython-Dashboard/0.1.5/", "requires_dist": null, "requires_python": null, "summary": "An stand alone, light-weight web server for building, sharing graphs in created in ipython. Let ipython do what it focus, let this do what everyone needs for building a interactive, collaborated and real-time streaming dashboards.", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/litaotao/IPython-Dashboard\" rel=\"nofollow\"><img alt=\"build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/60e8fb98d941869fd80cb6e3e4b3e8b8f36b8836/68747470733a2f2f6170692e7472617669732d63692e6f72672f6c6974616f74616f2f49507974686f6e2d44617368626f6172642e7376673f6272616e63683d6d6173746572\"></a> <a href=\"http://ipython-dashboard.readthedocs.org/en/latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2bd48ad923519020bb04f00336e6efb692119132/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f69707974686f6e2d64617368626f6172642f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://coveralls.io/r/litaotao/IPython-Dashboard\" rel=\"nofollow\"><img alt=\"coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6933cc491bb68fcc76f94a2455f63f1c7f10c8f9/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6c6974616f74616f2f49507974686f6e2d44617368626f6172642f62616467652e7376673f6272616e6368653d6d617374657226736572766963653d676974687562\"></a> <a href=\"https://pypi.python.org/pypi/IPython-Dashboard\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/03e91254af0e6662e0956b51e6e6d9cf3c18a12d/687474703a2f2f696d672e736869656c64732e696f2f707970692f762f49507974686f6e2d44617368626f6172642e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/IPython-Dashboard\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d3aa887ceff3f40556117505f9a241703a28bf63/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f69707974686f6e2d64617368626f6172642e737667\"></a></p>\n<div id=\"inspired-by-ipython-http-ipython-org-built-with-love\">\n<h2><strong>*Inspired by `IPython &lt;http://ipython.org/&gt;`__, built with love*</strong></h2>\n</div>\n<div id=\"ipython-dashboard\">\n<h2>IPython-Dashboard</h2>\n<p>A stand alone, light-weight web server for building, sharing graphs\ncreated in IPython. Build for data science, data analysis guys. Aiming\nat building an interactive visualization, collaborated dashboard, and\nreal-time streaming graph.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<ul>\n<li><p><em>Install prerequisite</em></p>\n<ul>\n<li>install the latest stable IPython-Dashboard:\n<tt>pip install <span class=\"pre\">ipython-dashboard</span> <span class=\"pre\">--upgrade</span></tt></li>\n<li>install redis 2.6+ : <a href=\"http://redis.io/topics/quickstart\" rel=\"nofollow\">install\nguide</a></li>\n<li>[<tt>option</tt>, if you need run sql]install mysql :\n<tt>brew install mysql</tt> or <tt><span class=\"pre\">apt-get</span> install mysql</tt></li>\n<li>install IPython-Dashboard requirements [unneeded sometimes]:<ul>\n<li><tt>cd ~/your python package <span class=\"pre\">path/IPython-Dashboard</span></tt></li>\n<li><tt>pip install <span class=\"pre\">-r</span> requirements.txt</tt></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><em>[``option``, if you need run sql]Config mysql</em></p>\n<ul>\n<li><p>start mysql server : <tt>mysql.server start</tt></p>\n</li>\n<li><p>login in mysql using root : <tt>mysql <span class=\"pre\">-u</span> root</tt></p>\n</li>\n<li><p>create a user and grant privileges;</p>\n<ul>\n<li><p>take a look at current database user</p>\n<pre>mysql&gt; SELECT User,Host FROM mysql.user;\n+------+-----------+\n| User | Host      |\n+------+-----------+\n| root | 127.0.0.1 |\n| root | ::1       |\n|      | localhost |\n| root | localhost |\n|      | mac007    |\n| root | mac007    |\n+------+-----------+\n6 rows in set (0.00 sec)\n</pre>\n</li>\n<li><p>create a user for IPython-Dashboard</p>\n</li>\n</ul>\n<pre>mysql&gt; create user 'ipd'@'localhost' identified by 'thanks';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; grant all privileges on *.* to ipd@localhost;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; SELECT User,Host FROM mysql.user;\n+------+-----------+\n| User | Host      |\n+------+-----------+\n| root | 127.0.0.1 |\n| root | ::1       |\n|      | localhost |\n| ipd  | localhost |\n| root | localhost |\n|      | mac007    |\n| root | mac007    |\n+------+-----------+\n7 rows in set (0.00 sec)\n\nmysql&gt; flush privileges;\nQuery OK, 0 rows affected (0.00 sec)\n</pre>\n</li>\n<li><p>create tables;</p>\n<pre>nosetests -s dashboard.tests.testCreateData:test_create_mysql_data\n</pre>\n</li>\n</ul>\n</li>\n<li><p><em>Create logging path</em></p>\n<ul>\n<li><p>create a folder to store log files. I put it under <tt>mnt</tt>\ncurrently: <tt><span class=\"pre\">/mnt/ipython-dashboard/logs</span></tt></p>\n</li>\n<li><p>make sure the log folder is write-able, using <tt>chmod</tt> and\n<tt>ls <span class=\"pre\">-l</span></tt> to confirm.</p>\n<pre>chenshan@mac007:/mnt/ipython-dashboard$ls -l\ntotal 0\ndrwxrwxrwx  9 root  wheel  306 Dec 15 22:09 logs\n</pre>\n</li>\n</ul>\n</li>\n<li><p><em>Config IPython-Dashboard server :\n``IPython-Dashboard/dashboard/config.py``</em></p>\n<ul>\n<li><tt><span class=\"pre\">app_host='ip_address:port'</span></tt></li>\n</ul>\n</li>\n<li><p><em>Start redis and IPython-Dashboard server</em></p>\n<pre>chenshan@mac007:~/Desktop/github/IPython-Dashboard$redis-server &amp;\n\nchenshan@mac007:~/Desktop/github/IPython-Dashboard$dash-server --help\nusage: dash-server [-h] [-H HOST] [-p PORT] [-d DEBUG]\n\nStart your IPython-Dashboard server ...\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -H HOST, --host HOST  server host, default localhost\n  -p PORT, --port PORT  server port, default 9090\n  -d DEBUG, --debug DEBUG\n                        server port, default true\n\nchenshan@mac007:~/Desktop/github/IPython-Dashboard$dash-server\nNamespace(debug=True, host='0.0.0.0', port=9090)\n * Running on http://0.0.0.0:9090/\n * Restarting with reloader\nNamespace(debug=True, host='0.0.0.0', port=9090)\n</pre>\n</li>\n<li><p><em>Do your exploring</em></p>\n<ul>\n<li><strong>*IPython-Dashboard-Tutorial.ipynb*</strong> : <a href=\"http://nbviewer.ipython.org/github/litaotao/IPython-Dashboard/blob/master/docs/IPython-Dashboard-Tutorial.ipynb\" rel=\"nofollow\">On\nnbviewer</a>\nor <a href=\"https://github.com/litaotao/IPython-Dashboard/blob/master/docs/IPython-Dashboard-Tutorial.ipynb\" rel=\"nofollow\">On\ngithub</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"goal\">\n<h2>Goal</h2>\n<ul>\n<li>support raw html visualization</li>\n<li>support python object visualization</li>\n<li>Editable</li>\n<li>Real-time fresh when rendering a variable python object</li>\n<li>Can be shared, both public and private [ need password ]</li>\n<li>In the notebook, can share an object to a dashboard [ that\u2019s\nvisualize that object in that dashboard ]</li>\n</ul>\n</div>\n<div id=\"use-case\">\n<h2>Use Case</h2>\n<ul>\n<li>exploring in notebook, share/send the result/summary to people,\nwithout the details.</li>\n<li>share some data in a private notebook.</li>\n<li>disappointed with the complicated code when drawing a graceful/staic\ngraph using matplotlib/seaborn/mpld3 etc.</li>\n<li>want an interactive graph, allow people to zoom in/out, resize, get\nhover tips, change graph type easily.</li>\n<li>want a real-time graph.</li>\n<li>want an collaborated graph/dashboard.</li>\n</ul>\n<div>\n<img alt=\"wise-choice\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/64b71bd4b291c1275971156750ceadec92efb605/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6c6974616f74616f2f49507974686f6e2d44617368626f6172642f762d302e312e352d73716c2d7365727665722d6c6f672f646f63732f776973652d63686f6963652e6a7067\">\n<p>wise-choice</p>\n</div>\n</div>\n<div id=\"screenshot-and-demo\">\n<h2>Screenshot and Demo</h2>\n<div>\n<div><a href=\"https://www.youtube.com/watch?v=Sy_Kmi6FFUg&amp;feature=youtu.be\" rel=\"nofollow\">Demo on\nYoutube</a></div>\n<div><a href=\"http://v.youku.com/v_show/id_XMTM3MTc5MTAwMA\" rel=\"nofollow\">Demo on Youku</a></div>\n</div>\n<div>\n<img alt=\"screenshot\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/54bf624658fa72d78c52bbff7ba572d76129df71/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6c6974616f74616f2f49507974686f6e2d44617368626f6172642f762d302e312e352d73716c2d7365727665722d6c6f672f646f63732f74656d706c6174652d73637265656e73686f742d302e312e332d312e6a7067\">\n<p>screenshot</p>\n</div>\n<div>\n<img alt=\"screenshot\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/86fe53e92ef430301006a11b326d70e5fd5f5691/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6c6974616f74616f2f49507974686f6e2d44617368626f6172642f762d302e312e352d73716c2d7365727665722d6c6f672f646f63732f74656d706c6174652d64617368626f6172642d302e312e352d322e6a7067\">\n<p>screenshot</p>\n</div>\n<div>\n<img alt=\"screenshot\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ef6dc48383490007c7e9b72666ce8fbd8bd9e6b4/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6c6974616f74616f2f49507974686f6e2d44617368626f6172642f762d302e312e352d73716c2d7365727665722d6c6f672f646f63732f74656d706c6174652d73637265656e73686f742d302e312e342d312e6a7067\">\n<p>screenshot</p>\n</div>\n<div>\n<img alt=\"screenshot\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/37dbb3d4172b1ac68c82b5c24cb270b8835a40f0/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6c6974616f74616f2f49507974686f6e2d44617368626f6172642f762d302e312e352d73716c2d7365727665722d6c6f672f646f63732f74656d706c6174652d73637265656e73686f742d302e312e352d312e6a7067\">\n<p>screenshot</p>\n</div>\n</div>\n<div id=\"run-tests\">\n<h2>Run tests</h2>\n<p>just run <tt>sudo nosetests <span class=\"pre\">--with-coverage</span> <span class=\"pre\">--cover-package=dashboard</span></tt>\nunder this repo</p>\n<pre>taotao@mac007:~/Desktop/github/IPython-Dashboard$sudo nosetests --with-coverage --cover-package=dashboard\nPassword:\n../Users/chenshan/Desktop/github/IPython-Dashboard/dashboard/tests/testCreateData.py:69: Warning: Can't create database 'IPD_data'; database exists\n  conn.cursor().execute('CREATE DATABASE IF NOT EXISTS {};'.format(config.sql_db))\n/Users/chenshan/Desktop/github/IPython-Dashboard/dashboard/server/utils.py:135: Warning: Unknown table 'ipd_data.businesses'\n  cursor.execute(sql)\n/Library/Python/2.7/site-packages/pandas/io/sql.py:599: FutureWarning: The 'mysql' flavor with DBAPI connection is deprecated and will be removed in future versions. MySQL will be further supported with SQLAlchemy engines.\n  warnings.warn(_MYSQL_WARNING, FutureWarning)\n...\nName                                    Stmts   Miss  Cover   Missing\n---------------------------------------------------------------------\ndashboard.py                               13      0   100%\ndashboard/client.py                         1      0   100%\ndashboard/client/sender.py                 11      3    73%   26-27, 33\ndashboard/conf.py                           0      0   100%\ndashboard/conf/config.py                   29      0   100%\ndashboard/server.py                         0      0   100%\ndashboard/server/resources.py               0      0   100%\ndashboard/server/resources/dash.py         35     10    71%   36, 55-56, 67-69, 86-89\ndashboard/server/resources/home.py         40     12    70%   25, 28-30, 83-91\ndashboard/server/resources/sql.py          27     11    59%   30, 52-75\ndashboard/server/resources/status.py        8      1    88%   19\ndashboard/server/resources/storage.py      13      5    62%   26-28, 43-47\ndashboard/server/utils.py                  79     18    77%   20-24, 78-80, 82-83, 86, 96, 99-100, 126-127, 140-142\ndashboard/server/views.py                  21      1    95%   16\n---------------------------------------------------------------------\nTOTAL                                     277     61    78%\n----------------------------------------------------------------------\nRan 5 tests in 9.885s\n\nOK\ntaotao@mac007:~/Desktop/github/IPython-Dashboard$\n</pre>\n</div>\n<div id=\"change-log\">\n<h2><a href=\"./CHANGES.md\" rel=\"nofollow\">Change Log</a></h2>\n<ul>\n<li>future<ul>\n<li>front side, databricks style</li>\n<li>pep 8, code clean up &amp; restructure</li>\n<li>hover tips</li>\n<li>edit modal can be resized</li>\n<li>Share one graph</li>\n<li>Share one dashboard</li>\n<li>Presentation mode</li>\n<li>footer</li>\n<li>unified message display center</li>\n<li>SQL Editor</li>\n<li>login management</li>\n<li>unified logger and exception report</li>\n<li>server side log</li>\n<li>client side log</li>\n<li>support python3</li>\n<li>create examples</li>\n<li>render sql in dashboard</li>\n<li>chart optimize</li>\n</ul>\n</li>\n<li><strong>*V 0.1.6 : optimize-chart [ current develop version ]*</strong><ul>\n<li>Dashboard<ul>\n<li>re-structure code, follow pep8 style</li>\n<li>create 1 example</li>\n<li>optimize chart</li>\n</ul>\n</li>\n<li>SQL Editor<ul>\n<li>optimize page</li>\n<li>render sql result as graph</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>*V 0.1.5 : sql-server-log [ current stable version ]*</strong><ul>\n<li>Dashboard<ul>\n<li>create 1 example</li>\n<li>server side log</li>\n<li>support x-axis as date format</li>\n<li>research on real-time updated dataframe</li>\n</ul>\n</li>\n<li>SQL Editor<ul>\n<li>sql server develop : render sql result as table view</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1884394, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "fef0e793af406a1d1ea2aeb361b8bf7b", "sha256": "c317fe2201815230faf0e5695b032d193c5aa58a32a997ae29326abb994a02ab"}, "downloads": -1, "filename": "IPython-Dashboard-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fef0e793af406a1d1ea2aeb361b8bf7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 799760, "upload_time": "2015-10-18T15:39:59", "upload_time_iso_8601": "2015-10-18T15:39:59.073017Z", "url": "https://files.pythonhosted.org/packages/44/c2/a1b7e4ce8112ad0e4d928b7256c3f15f1bfb237c6ce96d7b309e9119f732/IPython-Dashboard-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e52b79905f131506f5467294a9d3f634", "sha256": "012e74e198db17fd3d0d10fef66ba60512cc2dbf87fb948dad65463330724b91"}, "downloads": -1, "filename": "IPython-Dashboard-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e52b79905f131506f5467294a9d3f634", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1051318, "upload_time": "2015-10-22T14:51:46", "upload_time_iso_8601": "2015-10-22T14:51:46.323389Z", "url": "https://files.pythonhosted.org/packages/25/b6/21f190b03d7b47a6b9a042cef834f7e7bf5b2481f157a4ccf2ca0adae38b/IPython-Dashboard-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "b4accb0732b6fa80dc47ee2e5409796f", "sha256": "3ce7b1a11c5b804f89cfd594969ebb52867fd3725c9e2f997670105b3ed21606"}, "downloads": -1, "filename": "IPython-Dashboard-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b4accb0732b6fa80dc47ee2e5409796f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1143360, "upload_time": "2015-11-10T15:12:12", "upload_time_iso_8601": "2015-11-10T15:12:12.108295Z", "url": "https://files.pythonhosted.org/packages/c9/ce/81f2bdc055e3e2f5e4951f9b4a8b76dc3b26227d796333fa4fc2f307f66c/IPython-Dashboard-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "31c188f2f5f6b2f0cbd75f6a60c4f577", "sha256": "20b37b82ca4ba42da7c15994b18f7d15c55b3006e3997f91ad2e361d5eea1474"}, "downloads": -1, "filename": "IPython-Dashboard-0.1.3.tar.gz", "has_sig": false, "md5_digest": "31c188f2f5f6b2f0cbd75f6a60c4f577", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1144693, "upload_time": "2015-11-17T02:06:50", "upload_time_iso_8601": "2015-11-17T02:06:50.037739Z", "url": "https://files.pythonhosted.org/packages/39/d9/f80c220488e5e10d5b24d80a0abe1de58f723b92b2fd8309e8df7a17fe39/IPython-Dashboard-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "76e17e1d6603ed30a01059fa3d5caf13", "sha256": "1175ab34716062ab2779b81c348f9b77c331ca97caf71824fe58d622dba1e1d4"}, "downloads": -1, "filename": "IPython-Dashboard-0.1.4.tar.gz", "has_sig": false, "md5_digest": "76e17e1d6603ed30a01059fa3d5caf13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1333521, "upload_time": "2015-12-02T13:41:30", "upload_time_iso_8601": "2015-12-02T13:41:30.130965Z", "url": "https://files.pythonhosted.org/packages/77/17/67d11130b745b7c4ee5091f85a7c4c7f244ea4e6bf3aecfa2c0d32a0c57b/IPython-Dashboard-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "e8ef2d693dea085ce6c428822cefb2f6", "sha256": "2e3ee8170b91e0203e7f14db7f52052f414540871a7ac1465be8919e8eff2419"}, "downloads": -1, "filename": "IPython-Dashboard-0.1.5.tar.gz", "has_sig": false, "md5_digest": "e8ef2d693dea085ce6c428822cefb2f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1336469, "upload_time": "2016-01-01T15:15:04", "upload_time_iso_8601": "2016-01-01T15:15:04.449792Z", "url": "https://files.pythonhosted.org/packages/d5/95/e46171b05f9a56f07bdcbee6bf81dbc26f02abb7b6080b396eb224920abe/IPython-Dashboard-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e8ef2d693dea085ce6c428822cefb2f6", "sha256": "2e3ee8170b91e0203e7f14db7f52052f414540871a7ac1465be8919e8eff2419"}, "downloads": -1, "filename": "IPython-Dashboard-0.1.5.tar.gz", "has_sig": false, "md5_digest": "e8ef2d693dea085ce6c428822cefb2f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1336469, "upload_time": "2016-01-01T15:15:04", "upload_time_iso_8601": "2016-01-01T15:15:04.449792Z", "url": "https://files.pythonhosted.org/packages/d5/95/e46171b05f9a56f07bdcbee6bf81dbc26f02abb7b6080b396eb224920abe/IPython-Dashboard-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:24 2020"}