{"info": {"author": "Markus Englund", "author_email": "jan.markus.englund@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "pandas-charm\n============\n\n|Build-Status| |Coverage-Status| |PyPI-Status| |License| |DOI-URI|\n\npandas-charm is a small Python package for getting character\nmatrices (alignments) into and out of `pandas <http://pandas.pydata.org>`_.\nUse this library to make pandas interoperable with\n`BioPython <http://biopython.org>`_ and `DendroPy <http://dendropy.org>`_.\n\nConvert between the following objects:\n\n* BioPython MultipleSeqAlignment <-> pandas DataFrame\n* DendroPy CharacterMatrix <-> pandas DataFrame\n* \"Sequence dictionary\" <-> pandas DataFrame\n\nThe code has been tested with Python 2.7, 3.5 and 3.6.\n\nSource repository: `<https://github.com/jmenglund/pandas-charm>`_\n\n------------------------------------------\n\n.. contents:: Table of contents\n   :backlinks: none\n   :local:\n\n\nInstallation\n------------\n\nFor most users, the easiest way is probably to install the latest version\nhosted on `PyPI <https://pypi.org/>`_:\n\n.. code-block::\n\n    $ pip install pandas-charm\n\nThe project is hosted at https://github.com/jmenglund/pandas-charm and\ncan also be installed using git:\n\n.. code-block::\n\n    $ git clone https://github.com/jmenglund/pandas-charm.git\n    $ cd pandas-charm\n    $ python setup.py install\n\n\nYou may consider installing pandas-charm and its required Python packages\nwithin a virtual environment in order to avoid cluttering your system's\nPython path. See for example the environment management system\n`conda <http://conda.pydata.org>`_ or the package\n`virtualenv <https://virtualenv.pypa.io/en/latest/>`_.\n\n\nRunning the tests\n-----------------\n\nTesting is carried out with `pytest <https://docs.pytest.org/>`_:\n\n.. code-block::\n\n    $ pytest -v test_pandascharm.py\n\nTest coverage can be calculated with `Coverage.py\n<https://coverage.readthedocs.io/>`_ using the following commands:\n\n.. code-block::\n\n    $ coverage run -m pytest\n    $ coverage report -m pandascharm.py\n\nThe code follow style conventions in `PEP8\n<https://www.python.org/dev/peps/pep-0008/>`_, which can be checked\nwith `pycodestyle <http://pycodestyle.pycqa.org>`_:\n\n.. code-block::\n\n    $ pycodestyle pandascharm.py test_pandascharm.py setup.py\n\n\nUsage\n-----\n\nThe following examples show how to use pandas-charm. The examples are\nwritten with Python 3 code, but pandas-charm should work also with\nPython 2.7+. You need to install BioPython and/or DendroPy manually\nbefore you start:\n\n.. code-block::\n\n    $ pip install biopython\n    $ pip install dendropy\n\n\nDendroPy CharacterMatrix to pandas DataFrame\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: pycon\n\n    >>> import pandas as pd\n    >>> import pandascharm as pc\n    >>> import dendropy\n    >>> dna_string = '3 5\\nt1  TCCAA\\nt2  TGCAA\\nt3  TG-AA\\n'\n    >>> print(dna_string)\n    3 5\n    t1  TCCAA\n    t2  TGCAA\n    t3  TG-AA\n\n    >>> matrix = dendropy.DnaCharacterMatrix.get(\n    ...     data=dna_string, schema='phylip')\n    >>> df = pc.from_charmatrix(matrix)\n    >>> df\n      t1 t2 t3\n    0  T  T  T\n    1  C  G  G\n    2  C  C  -\n    3  A  A  A\n    4  A  A  A\n\nBy default, characters are stored as rows and sequences as columns\nin the DataFrame. If you want rows to hold sequences, just transpose\nthe matrix in pandas:\n\n.. code-block:: pycon\n\n    >>> df.transpose()\n        0  1  2  3  4\n    t1  T  C  C  A  A\n    t2  T  G  C  A  A\n    t3  T  G  -  A  A\n\n\npandas DataFrame to Dendropy CharacterMatrix\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: pycon\n\n    >>> import pandas as pd\n    >>> import pandascharm as pc\n    >>> import dendropy\n    >>> df = pd.DataFrame({\n    ...     't1': ['T', 'C', 'C', 'A', 'A'],\n    ...     't2': ['T', 'G', 'C', 'A', 'A'],\n    ...     't3': ['T', 'G', '-', 'A', 'A']})\n    >>> df\n      t1 t2 t3\n    0  T  T  T\n    1  C  G  G\n    2  C  C  -\n    3  A  A  A\n    4  A  A  A\n\n    >>> matrix = pc.to_charmatrix(df, data_type='dna')\n    >>> print(matrix.as_string('phylip'))\n    3 5\n    t1  TCCAA\n    t2  TGCAA\n    t3  TG-AA\n\n\nBioPython MultipleSeqAlignment to pandas DataFrame\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: pycon\n\n    >>> from io import StringIO\n    >>> import pandas as pd\n    >>> import pandascharm as pc\n    >>> from Bio import AlignIO\n    >>> dna_string = '3 5\\nt1  TCCAA\\nt2  TGCAA\\nt3  TG-AA\\n'\n    >>> f = StringIO(dna_string)  # make the string a file-like object\n    >>> alignment = AlignIO.read(f, 'phylip-relaxed')\n    >>> print(alignment)\n    SingleLetterAlphabet() alignment with 3 rows and 5 columns\n    TCCAA t1\n    TGCAA t2\n    TG-AA t3\n    >>> df = pc.from_bioalignment(alignment)\n    >>> df\n      t1 t2 t3\n    0  T  T  T\n    1  C  G  G\n    2  C  C  -\n    3  A  A  A\n    4  A  A  A\n\n\npandas DataFrame to BioPython MultipleSeqAlignment\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: pycon\n\n    >>> import pandas as pd\n    >>> import pandascharm as pc\n    >>> import Bio\n    >>> df = pd.DataFrame({\n    ...     't1': ['T', 'C', 'C', 'A', 'A'],\n    ...     't2': ['T', 'G', 'C', 'A', 'A'],\n    ...     't3': ['T', 'G', '-', 'A', 'A']})\n    >>> df\n      t1 t2 t3\n    0  T  T  T\n    1  C  G  G\n    2  C  C  -\n    3  A  A  A\n    4  A  A  A\n\n    >>> alignment = pc.to_bioalignment(df, alphabet='generic_dna')\n    >>> print(alignment)\n    SingleLetterAlphabet() alignment with 3 rows and 5 columns\n    TCCAA t1\n    TGCAA t2\n    TG-AA t3\n\n\n\"Sequence dictionary\" to pandas DataFrame\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: pycon\n\n    >>> import pandas as pd\n    >>> import pandascharm as pc\n    >>> d = {\n    ...     't1': 'TCCAA',\n    ...     't2': 'TGCAA',\n    ...     't3': 'TG-AA'\n    ... }\n    >>> df = pc.from_sequence_dict(d)\n    >>> df\n      t1 t2 t3\n    0  T  T  T\n    1  C  G  G\n    2  C  C  -\n    3  A  A  A\n    4  A  A  A\n\n\npandas DataFrame to \"sequence dictionary\"\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: pycon\n\n    >>> import pandas as pd\n    >>> import pandascharm as pc\n    >>> df = pd.DataFrame({\n    ...     't1': ['T', 'C', 'C', 'A', 'A'],\n    ...     't2': ['T', 'G', 'C', 'A', 'A'],\n    ...     't3': ['T', 'G', '-', 'A', 'A']})\n    >>> pc.to_sequence_dict(df)\n    {'t1': 'TCCAA', 't2': 'TGCAA', 't3': 'TG-AA'}\n\n\nThe name\n--------\n\npandas-charm got its name from the pandas library plus an acronym for\nCHARacter Matrix.\n\n\nLicense\n-------\n\npandas-charm is distributed under the `MIT license <https://opensource.org/licenses/MIT>`_.\n\n\nCiting\n------\n\nIf you use results produced with this package in a scientific\npublication, please just mention the package name in the text and\ncite the Zenodo DOI of this project:\n\n|DOI-URI|\n\nChoose your preferred citation style in the \"Cite as\" section on the Zenodo\npage.\n\n\nAuthor\n------\n\nMarkus Englund, `orcid.org/0000-0003-1688-7112 <http://orcid.org/0000-0003-1688-7112>`_\n\n\n.. |Build-Status| image:: https://travis-ci.org/jmenglund/pandas-charm.svg?branch=master\n   :target: https://travis-ci.org/jmenglund/pandas-charm\n   :alt: Build status\n.. |Coverage-Status| image:: https://codecov.io/gh/jmenglund/pandas-charm/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/jmenglund/pandas-charm\n   :alt: Coverage status\n.. |PyPI-Status| image:: https://img.shields.io/pypi/v/pandas-charm.svg\n   :target: https://pypi.python.org/pypi/pandas-charm\n   :alt: PyPI status\n.. |License| image:: https://img.shields.io/pypi/l/pandas-charm.svg\n   :target: https://raw.githubusercontent.com/jmenglund/pandas-charm/master/LICENSE.txt\n   :alt: License\n.. |DOI-URI| image:: https://zenodo.org/badge/62513333.svg\n   :target: https://zenodo.org/badge/latestdoi/62513333\n   :alt: DOI\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jmenglund/pandas-charm", "keywords": "alignment,BioPython,DendroPy,pandas", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pandas-charm", "package_url": "https://pypi.org/project/pandas-charm/", "platform": "", "project_url": "https://pypi.org/project/pandas-charm/", "project_urls": {"Homepage": "https://github.com/jmenglund/pandas-charm"}, "release_url": "https://pypi.org/project/pandas-charm/0.3.0/", "requires_dist": ["pandas (>=0.21)", "coverage ; extra == 'testing'", "pytest ; extra == 'testing'", "biopython ; extra == 'testing'", "dendropy ; extra == 'testing'"], "requires_python": "", "summary": "A small Python library for getting character matrices (alignments) into and out of pandas", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/jmenglund/pandas-charm\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aca5982ed673258f92377b86f0d8a29f872f3512/68747470733a2f2f7472617669732d63692e6f72672f6a6d656e676c756e642f70616e6461732d636861726d2e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://codecov.io/gh/jmenglund/pandas-charm\" rel=\"nofollow\"><img alt=\"Coverage status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/45a762886c2fa621cc810f430a89f95e024c5f59/68747470733a2f2f636f6465636f762e696f2f67682f6a6d656e676c756e642f70616e6461732d636861726d2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a> <a href=\"https://pypi.python.org/pypi/pandas-charm\" rel=\"nofollow\"><img alt=\"PyPI status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/df1e6a030fccbd73eedcec720718d788352be256/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70616e6461732d636861726d2e737667\"></a> <a href=\"https://raw.githubusercontent.com/jmenglund/pandas-charm/master/LICENSE.txt\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ecf590099506373e361c60d1bf081c1688ee8419/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f70616e6461732d636861726d2e737667\"></a> <a href=\"https://zenodo.org/badge/latestdoi/62513333\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9bf1e79c885aed5090c6269a0aaa930a6960d99c/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f36323531333333332e737667\"></a></p>\n<p>pandas-charm is a small Python package for getting character\nmatrices (alignments) into and out of <a href=\"http://pandas.pydata.org\" rel=\"nofollow\">pandas</a>.\nUse this library to make pandas interoperable with\n<a href=\"http://biopython.org\" rel=\"nofollow\">BioPython</a> and <a href=\"http://dendropy.org\" rel=\"nofollow\">DendroPy</a>.</p>\n<p>Convert between the following objects:</p>\n<ul>\n<li>BioPython MultipleSeqAlignment &lt;-&gt; pandas DataFrame</li>\n<li>DendroPy CharacterMatrix &lt;-&gt; pandas DataFrame</li>\n<li>\u201cSequence dictionary\u201d &lt;-&gt; pandas DataFrame</li>\n</ul>\n<p>The code has been tested with Python 2.7, 3.5 and 3.6.</p>\n<p>Source repository: <a href=\"https://github.com/jmenglund/pandas-charm\" rel=\"nofollow\">https://github.com/jmenglund/pandas-charm</a></p>\n<hr class=\"docutils\">\n<div id=\"table-of-contents\">\n<p>Table of contents</p>\n<ul>\n<li><a href=\"#installation\" id=\"id1\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#running-the-tests\" id=\"id2\" rel=\"nofollow\">Running the tests</a></li>\n<li><a href=\"#usage\" id=\"id3\" rel=\"nofollow\">Usage</a><ul>\n<li><a href=\"#dendropy-charactermatrix-to-pandas-dataframe\" id=\"id4\" rel=\"nofollow\">DendroPy CharacterMatrix to pandas DataFrame</a></li>\n<li><a href=\"#pandas-dataframe-to-dendropy-charactermatrix\" id=\"id5\" rel=\"nofollow\">pandas DataFrame to Dendropy CharacterMatrix</a></li>\n<li><a href=\"#biopython-multipleseqalignment-to-pandas-dataframe\" id=\"id6\" rel=\"nofollow\">BioPython MultipleSeqAlignment to pandas DataFrame</a></li>\n<li><a href=\"#pandas-dataframe-to-biopython-multipleseqalignment\" id=\"id7\" rel=\"nofollow\">pandas DataFrame to BioPython MultipleSeqAlignment</a></li>\n<li><a href=\"#sequence-dictionary-to-pandas-dataframe\" id=\"id8\" rel=\"nofollow\">\u201cSequence dictionary\u201d to pandas DataFrame</a></li>\n<li><a href=\"#pandas-dataframe-to-sequence-dictionary\" id=\"id9\" rel=\"nofollow\">pandas DataFrame to \u201csequence dictionary\u201d</a></li>\n</ul>\n</li>\n<li><a href=\"#the-name\" id=\"id10\" rel=\"nofollow\">The name</a></li>\n<li><a href=\"#license\" id=\"id11\" rel=\"nofollow\">License</a></li>\n<li><a href=\"#citing\" id=\"id12\" rel=\"nofollow\">Citing</a></li>\n<li><a href=\"#author\" id=\"id13\" rel=\"nofollow\">Author</a></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>For most users, the easiest way is probably to install the latest version\nhosted on <a href=\"https://pypi.org/\" rel=\"nofollow\">PyPI</a>:</p>\n<pre>$ pip install pandas-charm\n</pre>\n<p>The project is hosted at <a href=\"https://github.com/jmenglund/pandas-charm\" rel=\"nofollow\">https://github.com/jmenglund/pandas-charm</a> and\ncan also be installed using git:</p>\n<pre>$ git clone https://github.com/jmenglund/pandas-charm.git\n$ cd pandas-charm\n$ python setup.py install\n</pre>\n<p>You may consider installing pandas-charm and its required Python packages\nwithin a virtual environment in order to avoid cluttering your system\u2019s\nPython path. See for example the environment management system\n<a href=\"http://conda.pydata.org\" rel=\"nofollow\">conda</a> or the package\n<a href=\"https://virtualenv.pypa.io/en/latest/\" rel=\"nofollow\">virtualenv</a>.</p>\n</div>\n<div id=\"running-the-tests\">\n<h2>Running the tests</h2>\n<p>Testing is carried out with <a href=\"https://docs.pytest.org/\" rel=\"nofollow\">pytest</a>:</p>\n<pre>$ pytest -v test_pandascharm.py\n</pre>\n<p>Test coverage can be calculated with <a href=\"https://coverage.readthedocs.io/\" rel=\"nofollow\">Coverage.py</a> using the following commands:</p>\n<pre>$ coverage run -m pytest\n$ coverage report -m pandascharm.py\n</pre>\n<p>The code follow style conventions in <a href=\"https://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\">PEP8</a>, which can be checked\nwith <a href=\"http://pycodestyle.pycqa.org\" rel=\"nofollow\">pycodestyle</a>:</p>\n<pre>$ pycodestyle pandascharm.py test_pandascharm.py setup.py\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The following examples show how to use pandas-charm. The examples are\nwritten with Python 3 code, but pandas-charm should work also with\nPython 2.7+. You need to install BioPython and/or DendroPy manually\nbefore you start:</p>\n<pre>$ pip install biopython\n$ pip install dendropy\n</pre>\n<div id=\"dendropy-charactermatrix-to-pandas-dataframe\">\n<h3>DendroPy CharacterMatrix to pandas DataFrame</h3>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pandascharm</span> <span class=\"k\">as</span> <span class=\"nn\">pc</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">dendropy</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dna_string</span> <span class=\"o\">=</span> <span class=\"s1\">'3 5</span><span class=\"se\">\\n</span><span class=\"s1\">t1  TCCAA</span><span class=\"se\">\\n</span><span class=\"s1\">t2  TGCAA</span><span class=\"se\">\\n</span><span class=\"s1\">t3  TG-AA</span><span class=\"se\">\\n</span><span class=\"s1\">'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">dna_string</span><span class=\"p\">)</span>\n<span class=\"go\">3 5\nt1  TCCAA\nt2  TGCAA\nt3  TG-AA\n\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">matrix</span> <span class=\"o\">=</span> <span class=\"n\">dendropy</span><span class=\"o\">.</span><span class=\"n\">DnaCharacterMatrix</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">dna_string</span><span class=\"p\">,</span> <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"s1\">'phylip'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pc</span><span class=\"o\">.</span><span class=\"n\">from_charmatrix</span><span class=\"p\">(</span><span class=\"n\">matrix</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">df</span>\n<span class=\"go\">  t1 t2 t3\n0  T  T  T\n1  C  G  G\n2  C  C  -\n3  A  A  A\n4  A  A  A</span>\n</pre>\n<p>By default, characters are stored as rows and sequences as columns\nin the DataFrame. If you want rows to hold sequences, just transpose\nthe matrix in pandas:</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">()</span>\n<span class=\"go\">    0  1  2  3  4\nt1  T  C  C  A  A\nt2  T  G  C  A  A\nt3  T  G  -  A  A</span>\n</pre>\n</div>\n<div id=\"pandas-dataframe-to-dendropy-charactermatrix\">\n<h3>pandas DataFrame to Dendropy CharacterMatrix</h3>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pandascharm</span> <span class=\"k\">as</span> <span class=\"nn\">pc</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">dendropy</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">'t1'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'T'</span><span class=\"p\">,</span> <span class=\"s1\">'C'</span><span class=\"p\">,</span> <span class=\"s1\">'C'</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">'t2'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'T'</span><span class=\"p\">,</span> <span class=\"s1\">'G'</span><span class=\"p\">,</span> <span class=\"s1\">'C'</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">'t3'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'T'</span><span class=\"p\">,</span> <span class=\"s1\">'G'</span><span class=\"p\">,</span> <span class=\"s1\">'-'</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">]})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">df</span>\n<span class=\"go\">  t1 t2 t3\n0  T  T  T\n1  C  G  G\n2  C  C  -\n3  A  A  A\n4  A  A  A\n\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">matrix</span> <span class=\"o\">=</span> <span class=\"n\">pc</span><span class=\"o\">.</span><span class=\"n\">to_charmatrix</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">,</span> <span class=\"n\">data_type</span><span class=\"o\">=</span><span class=\"s1\">'dna'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">matrix</span><span class=\"o\">.</span><span class=\"n\">as_string</span><span class=\"p\">(</span><span class=\"s1\">'phylip'</span><span class=\"p\">))</span>\n<span class=\"go\">3 5\nt1  TCCAA\nt2  TGCAA\nt3  TG-AA</span>\n</pre>\n</div>\n<div id=\"biopython-multipleseqalignment-to-pandas-dataframe\">\n<h3>BioPython MultipleSeqAlignment to pandas DataFrame</h3>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">io</span> <span class=\"kn\">import</span> <span class=\"n\">StringIO</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pandascharm</span> <span class=\"k\">as</span> <span class=\"nn\">pc</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">Bio</span> <span class=\"kn\">import</span> <span class=\"n\">AlignIO</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dna_string</span> <span class=\"o\">=</span> <span class=\"s1\">'3 5</span><span class=\"se\">\\n</span><span class=\"s1\">t1  TCCAA</span><span class=\"se\">\\n</span><span class=\"s1\">t2  TGCAA</span><span class=\"se\">\\n</span><span class=\"s1\">t3  TG-AA</span><span class=\"se\">\\n</span><span class=\"s1\">'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">StringIO</span><span class=\"p\">(</span><span class=\"n\">dna_string</span><span class=\"p\">)</span>  <span class=\"c1\"># make the string a file-like object</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">alignment</span> <span class=\"o\">=</span> <span class=\"n\">AlignIO</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"s1\">'phylip-relaxed'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">alignment</span><span class=\"p\">)</span>\n<span class=\"go\">SingleLetterAlphabet() alignment with 3 rows and 5 columns\nTCCAA t1\nTGCAA t2\nTG-AA t3\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pc</span><span class=\"o\">.</span><span class=\"n\">from_bioalignment</span><span class=\"p\">(</span><span class=\"n\">alignment</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">df</span>\n<span class=\"go\">  t1 t2 t3\n0  T  T  T\n1  C  G  G\n2  C  C  -\n3  A  A  A\n4  A  A  A</span>\n</pre>\n</div>\n<div id=\"pandas-dataframe-to-biopython-multipleseqalignment\">\n<h3>pandas DataFrame to BioPython MultipleSeqAlignment</h3>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pandascharm</span> <span class=\"k\">as</span> <span class=\"nn\">pc</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">Bio</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">'t1'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'T'</span><span class=\"p\">,</span> <span class=\"s1\">'C'</span><span class=\"p\">,</span> <span class=\"s1\">'C'</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">'t2'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'T'</span><span class=\"p\">,</span> <span class=\"s1\">'G'</span><span class=\"p\">,</span> <span class=\"s1\">'C'</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">'t3'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'T'</span><span class=\"p\">,</span> <span class=\"s1\">'G'</span><span class=\"p\">,</span> <span class=\"s1\">'-'</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">]})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">df</span>\n<span class=\"go\">  t1 t2 t3\n0  T  T  T\n1  C  G  G\n2  C  C  -\n3  A  A  A\n4  A  A  A\n\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">alignment</span> <span class=\"o\">=</span> <span class=\"n\">pc</span><span class=\"o\">.</span><span class=\"n\">to_bioalignment</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">,</span> <span class=\"n\">alphabet</span><span class=\"o\">=</span><span class=\"s1\">'generic_dna'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">alignment</span><span class=\"p\">)</span>\n<span class=\"go\">SingleLetterAlphabet() alignment with 3 rows and 5 columns\nTCCAA t1\nTGCAA t2\nTG-AA t3</span>\n</pre>\n</div>\n<div id=\"sequence-dictionary-to-pandas-dataframe\">\n<h3>\u201cSequence dictionary\u201d to pandas DataFrame</h3>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pandascharm</span> <span class=\"k\">as</span> <span class=\"nn\">pc</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">'t1'</span><span class=\"p\">:</span> <span class=\"s1\">'TCCAA'</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">'t2'</span><span class=\"p\">:</span> <span class=\"s1\">'TGCAA'</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">'t3'</span><span class=\"p\">:</span> <span class=\"s1\">'TG-AA'</span>\n<span class=\"gp\">... </span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pc</span><span class=\"o\">.</span><span class=\"n\">from_sequence_dict</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">df</span>\n<span class=\"go\">  t1 t2 t3\n0  T  T  T\n1  C  G  G\n2  C  C  -\n3  A  A  A\n4  A  A  A</span>\n</pre>\n</div>\n<div id=\"pandas-dataframe-to-sequence-dictionary\">\n<h3>pandas DataFrame to \u201csequence dictionary\u201d</h3>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pandascharm</span> <span class=\"k\">as</span> <span class=\"nn\">pc</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">'t1'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'T'</span><span class=\"p\">,</span> <span class=\"s1\">'C'</span><span class=\"p\">,</span> <span class=\"s1\">'C'</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">'t2'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'T'</span><span class=\"p\">,</span> <span class=\"s1\">'G'</span><span class=\"p\">,</span> <span class=\"s1\">'C'</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">'t3'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'T'</span><span class=\"p\">,</span> <span class=\"s1\">'G'</span><span class=\"p\">,</span> <span class=\"s1\">'-'</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">]})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pc</span><span class=\"o\">.</span><span class=\"n\">to_sequence_dict</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">)</span>\n<span class=\"go\">{'t1': 'TCCAA', 't2': 'TGCAA', 't3': 'TG-AA'}</span>\n</pre>\n</div>\n</div>\n<div id=\"the-name\">\n<h2>The name</h2>\n<p>pandas-charm got its name from the pandas library plus an acronym for\nCHARacter Matrix.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>pandas-charm is distributed under the <a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\">MIT license</a>.</p>\n</div>\n<div id=\"citing\">\n<h2>Citing</h2>\n<p>If you use results produced with this package in a scientific\npublication, please just mention the package name in the text and\ncite the Zenodo DOI of this project:</p>\n<p><a href=\"https://zenodo.org/badge/latestdoi/62513333\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9bf1e79c885aed5090c6269a0aaa930a6960d99c/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f36323531333333332e737667\"></a></p>\n<p>Choose your preferred citation style in the \u201cCite as\u201d section on the Zenodo\npage.</p>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<p>Markus Englund, <a href=\"http://orcid.org/0000-0003-1688-7112\" rel=\"nofollow\">orcid.org/0000-0003-1688-7112</a></p>\n</div>\n\n          </div>"}, "last_serial": 5288077, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "25a51d8425b965a3bc0b89bd12ba339a", "sha256": "e780c048815600f8be50dc823feb0fce08aeea1c5d298939c6fc3825267d36b2"}, "downloads": -1, "filename": "pandas_charm-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "25a51d8425b965a3bc0b89bd12ba339a", "packagetype": "bdist_wheel", "python_version": "any", "requires_python": null, "size": 7599, "upload_time": "2016-07-05T07:43:59", "upload_time_iso_8601": "2016-07-05T07:43:59.375020Z", "url": "https://files.pythonhosted.org/packages/f3/89/edc4409f127ec7c8431b92f7345eb175e43f4196e26c9a1f4f44aa1dc1fa/pandas_charm-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab29972cb32d53f520abbc6c0ecd1ef3", "sha256": "577417c34a481c1d4a1b316ceac2d89a1b8287a725b3b8b7f163b507d0e0c276"}, "downloads": -1, "filename": "pandas-charm-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ab29972cb32d53f520abbc6c0ecd1ef3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6252, "upload_time": "2016-07-05T07:43:26", "upload_time_iso_8601": "2016-07-05T07:43:26.331229Z", "url": "https://files.pythonhosted.org/packages/b3/98/f6bd3c770ee17239a5c5c5d24576f40522f7a7092139ebc460359c1c9be5/pandas-charm-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "868b061ebebf88e022b977e79f858b68", "sha256": "55161cb1c6274f5c5a072ace7c7e23a84ec8ddc61afc7f8a500496bd822ab95a"}, "downloads": -1, "filename": "pandas_charm-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "868b061ebebf88e022b977e79f858b68", "packagetype": "bdist_wheel", "python_version": "any", "requires_python": null, "size": 7628, "upload_time": "2016-07-05T13:01:32", "upload_time_iso_8601": "2016-07-05T13:01:32.678213Z", "url": "https://files.pythonhosted.org/packages/88/ec/1cb857e235840478f07dc14a791fc468ffe355530a2d4f1f276df7df2e61/pandas_charm-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6cf3053beb43b557e73196bf8e72a4d1", "sha256": "db3ffdfa57ee2cebda29cba6dad31980bc28bf220df576cbea355c05e6403b3d"}, "downloads": -1, "filename": "pandas-charm-0.1.1.tar.gz", "has_sig": false, "md5_digest": "6cf3053beb43b557e73196bf8e72a4d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6343, "upload_time": "2016-07-05T12:59:58", "upload_time_iso_8601": "2016-07-05T12:59:58.508906Z", "url": "https://files.pythonhosted.org/packages/46/f3/1322edc47e1ac299d20b619c600b43a79659ef3ceeafbe0ff46096690aac/pandas-charm-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "08a8d595abfe4ea7fad9d08c812961ce", "sha256": "95b8feaaf9dbb77c8b2fe9f73db6774e023f4b7a327e48c7706325e91cf0f835"}, "downloads": -1, "filename": "pandas_charm-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "08a8d595abfe4ea7fad9d08c812961ce", "packagetype": "bdist_wheel", "python_version": "any", "requires_python": null, "size": 8176, "upload_time": "2016-08-08T11:12:29", "upload_time_iso_8601": "2016-08-08T11:12:29.387931Z", "url": "https://files.pythonhosted.org/packages/e5/66/8b476e09a6b917685052b43ea8b74d49a248fcc717504f0475f7d62487b3/pandas_charm-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b2af2e2de792be200a8561cd365b255", "sha256": "88f29e507944f1d158f851b0ada5ee1c0d1c163cd2d4c552921d6b55707b88ae"}, "downloads": -1, "filename": "pandas-charm-0.1.2.tar.gz", "has_sig": false, "md5_digest": "0b2af2e2de792be200a8561cd365b255", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6847, "upload_time": "2016-08-08T11:11:56", "upload_time_iso_8601": "2016-08-08T11:11:56.935567Z", "url": "https://files.pythonhosted.org/packages/36/c0/85f15c6860a6d93a6d34ba58a23879f39c9836695ce4890cdf28b042afba/pandas-charm-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "0bd0d559966e1e32d14d0e8f1dfb54c9", "sha256": "1e20832e49c6d2537f2c710112e419e6d7e53b783ea183c49cee5e63f12167b4"}, "downloads": -1, "filename": "pandas_charm-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0bd0d559966e1e32d14d0e8f1dfb54c9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8150, "upload_time": "2017-08-25T16:31:32", "upload_time_iso_8601": "2017-08-25T16:31:32.097903Z", "url": "https://files.pythonhosted.org/packages/65/3e/53fb8916b037a92dfe6518c057065bcb5a234d552e180ab85140502a72ae/pandas_charm-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69b169a658003c32a9775662c141624b", "sha256": "e0ed773d70ab552a35ef08afb46211d88915bd6c1cde7e9c88eae5d0d64340d2"}, "downloads": -1, "filename": "pandas-charm-0.1.3.tar.gz", "has_sig": false, "md5_digest": "69b169a658003c32a9775662c141624b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7028, "upload_time": "2017-08-25T16:31:34", "upload_time_iso_8601": "2017-08-25T16:31:34.716876Z", "url": "https://files.pythonhosted.org/packages/ec/bd/cf68b1f84b914f8305da5828b97791ee596e443d7631f8dfcb1c72ef308f/pandas-charm-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "67f4287b45402f240cefa5c937883c6e", "sha256": "38403e2fc6844916fc84bfe671c2f075d97bff84a0b2a25ee68fd02084c39e0d"}, "downloads": -1, "filename": "pandas_charm-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "67f4287b45402f240cefa5c937883c6e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5206, "upload_time": "2019-02-23T18:47:08", "upload_time_iso_8601": "2019-02-23T18:47:08.044851Z", "url": "https://files.pythonhosted.org/packages/d7/20/37a55f19c42e71e328da38b1e671009b90fe3c800b26f8fe4c6b56e7278f/pandas_charm-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bb12866de0ca3abea3787f777df012b2", "sha256": "9d28082adb3d94197e8644f1beb86121b0d5504523fb15ff01a4e9e1f502c235"}, "downloads": -1, "filename": "pandas-charm-0.2.0.tar.gz", "has_sig": false, "md5_digest": "bb12866de0ca3abea3787f777df012b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7479, "upload_time": "2019-02-23T18:47:09", "upload_time_iso_8601": "2019-02-23T18:47:09.430974Z", "url": "https://files.pythonhosted.org/packages/da/50/fcd96018838369e5f9774a4ee7cc62a15c70f0adb2a25544e3f39b0a5d2e/pandas-charm-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "0f0e4570ae82bafa641acb2dee59ddcc", "sha256": "242befd3a41fe4802c388ab5acaa16971ae2aacb816c490696dab4e05a731205"}, "downloads": -1, "filename": "pandas_charm-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0f0e4570ae82bafa641acb2dee59ddcc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6100, "upload_time": "2019-05-19T11:52:36", "upload_time_iso_8601": "2019-05-19T11:52:36.029387Z", "url": "https://files.pythonhosted.org/packages/30/6a/dacff58029f81bcd3b96ffd65bbe6269cadf59e5b459a77d36029a3eb8ea/pandas_charm-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d5f2d59537324f8e4490659529aec50", "sha256": "203d1c6c369d1f966fd7ff06053dd641db214f5bc16dd694e269f03de10ee45b"}, "downloads": -1, "filename": "pandas-charm-0.3.0.tar.gz", "has_sig": false, "md5_digest": "9d5f2d59537324f8e4490659529aec50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7597, "upload_time": "2019-05-19T11:52:38", "upload_time_iso_8601": "2019-05-19T11:52:38.065809Z", "url": "https://files.pythonhosted.org/packages/03/75/25aefca0824d8d9d1ae7de872fd418da4121859d4fb82010d0b63e4f1975/pandas-charm-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0f0e4570ae82bafa641acb2dee59ddcc", "sha256": "242befd3a41fe4802c388ab5acaa16971ae2aacb816c490696dab4e05a731205"}, "downloads": -1, "filename": "pandas_charm-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0f0e4570ae82bafa641acb2dee59ddcc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6100, "upload_time": "2019-05-19T11:52:36", "upload_time_iso_8601": "2019-05-19T11:52:36.029387Z", "url": "https://files.pythonhosted.org/packages/30/6a/dacff58029f81bcd3b96ffd65bbe6269cadf59e5b459a77d36029a3eb8ea/pandas_charm-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d5f2d59537324f8e4490659529aec50", "sha256": "203d1c6c369d1f966fd7ff06053dd641db214f5bc16dd694e269f03de10ee45b"}, "downloads": -1, "filename": "pandas-charm-0.3.0.tar.gz", "has_sig": false, "md5_digest": "9d5f2d59537324f8e4490659529aec50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7597, "upload_time": "2019-05-19T11:52:38", "upload_time_iso_8601": "2019-05-19T11:52:38.065809Z", "url": "https://files.pythonhosted.org/packages/03/75/25aefca0824d8d9d1ae7de872fd418da4121859d4fb82010d0b63e4f1975/pandas-charm-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:33 2020"}