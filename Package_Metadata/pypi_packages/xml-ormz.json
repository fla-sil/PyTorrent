{"info": {"author": "ZIJIAN JIANG", "author_email": "jiangzijian77@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Utilities"], "description": "# xml-ormz\n\n**Authors:** ZIJIAN JIANG\n\n**26 Oct 2019**: Alpha version.\n\n\n\nxml-ormz is a orm(Object-relational mapping) library for mapping a collection of relational xml files into native python object. It is able to parse xml document tree into hierarchical class `model` objects. When parsing xml document tree into objects, it will check the attributes' `field` type; value content; amount of elements; numbers; `regular expressions`; etc. These validation rules can all be defined by user intuitively. As another important feature, `object relationships` can be built by using `finders`  in xml-ormz, `finder` is a user customized callable object for recursively traverse the trees to build references between any of two or more objects. So in the end of it, you will get a validated mapped relational python objects model *(with no concern about invalid attribute type or values; missing attributes; wrong amount of elements; missing relationships; invalid schema...)*.  In my philosophy of data processing (xml format is one kind of highly complex hierarchical data), all input data should be validated before any following processes, must not let the malignant propagate, and xml-orm do that properly.\n\nAPI Reference: [https://callmenezha.github.io/xml-ormz/](https://callmenezha.github.io/xml-ormz/)\n\n> Readme is out of date now, please wait.\n\n# 1. Installation\n\n`pip install xml-ormz` \n\n\n# 2. Example\n\nIt always said one example is beyond any documentation, so let's take a look.\n\nHere is the project hierarchy:\n\n```python\n+ ProjectFolder/\n\tcontacts.xml\n\taddresses.xml\n\tmodel.py\n\tfinder.py\n\thello.py    # main entry\n```\n\nLet's say we have two xml files.\n\n```xml\n<!-- contacts.xml -->\n<Contacts>\n    <Person name=\"Alice\" address=\"Wonderland Street No.231\">\n        <Email>513754619@mail.com</Email>\n    \t<Phone number=\"513754619\"/>\n        <Phone number=\"611953242\"/>\n    </Person> \n    <Person name=\"Rabbit\" address=\"Moon Street No.1\">\n        <Email>645118456@gmail.com</Email>\n    \t<Phone number=\"645118456\"/>\n    </Person> \n</Contacts>\n```\n\n```xml\n<!-- addresses.xml -->\n<Addresses>\n\t<Apartment location=\"Wonderland Street No.231\" year=\"1898\" owner=\"Queen of Hearts\"/>\n    <Apartment location=\"Moon Street No.1\" year=\"2\" area=\"401\"/>\n</Addresses>\n```\n\n\n\n1. We create `model.py` for class model definitions.\n\n```python\n# model.py\n\nfrom xo.orm import Model, Optional, StringField, FloatField, IntegerField, ForeignKeyField\n\nclass Contacts(Model):\n\n    class Person(Model):\n        name    = StringField(re=r\"(Alice|Rabbit|John)\")  # regular expression validation\n        address = StringField()\n\n        class Email(Model):\n            __count__ = 1   # every person must have one and only one email\n            pass\t\t\t# email address is in email.text and text is not a attribute\n\n        class Phone(Model):\n            __count__ = (1, ) # every person must have at least one phone\n            number = IntegerField( primary_key=True )\n\n\nclass Addresses(Model):\n\n    class Apartment(Model):\n        location = StringField( primary_key=True )\n        year = IntegerField()\n        owner = Optional( StringField() ) # owner attribute can be none, not required (without it will raise an error)\n\t\t# forget to define `area` field here \n        # when you run the program it will warn you that:\n        # 2019-08-29 15:21:40 X root[7828] WARNING Try to assign extra attribute 'area' to undefined field of 'Addresses.Apartment', drop it.\n        # So your `area` attribute in addresses.xml will never appear in this object.\n```\n\n\n\n3. Create main entry of program `hello.py`\n\n```python\n# hello.py\n\nfrom model import Contacts, Addresses\nfrom xo.crawler import XmlMapper\n\naddress_map = XmlMapper(\"./addresses.xml\", Addresses).parse()\ncontact_map = XmlMapper(\"./contacts.xml\", Contacts).parse()\n```\n\n\n\n```python\nResult:\naddress_map - \n  +  '/Addresses':<class Addresses>\n      -  'childApartment':[<class Addresses.Apartment>]\n      -  'childHouse':[<class Addresses.House>]\n      -  'text':''\n  +  '/Addresses/Apartment[1]':<class Addresses.Apartment>\n      -  'location':'Wonderland Street No.231'\n      -  'owner':'Queen of Hearts'\n      -  'parentAddresses':<class Addresses>\n      -  'year':1898\n  +  '/Addresses/Apartment[2]':<class Addresses.Apartment>\n      -  'location':'Moon Street No.1'\n      -  'parentAddresses':<class Addresses>\n      -  'year':2\n\n\ncontact_map - \n  +  '/Contacts': <class Contacts>\n  +  '/Contacts/Person[1]': <class Contacts.Person>\n  +  '/Contacts/Person[1]/Email': <class Contacts.Person.Email>\n      -  'parentPerson':<class Contacts.Person>\n      -  'text':'513754619@mail.com'\n  +  '/Contacts/Person[1]/Phone[1]': <class Contacts.Person.Phone>\n  +  '/Contacts/Person[1]/Phone[2]': <class Contacts.Person.Phone>\n  +  '/Contacts/Person[2]': <class Contacts.Person>\n  +  '/Contacts/Person[2]/Email': <class Contacts.Person.Email>\n  +  '/Contacts/Person[2]/Phone': <class Contacts.Person.Phone>\n  ...\n\n```\n\n\n\nIf you have noticed all our xml file has been parsed into python native objects with all attributes have been validated. Now its time to take our further trip to object relationships.\n\n1. We add additional field into our already defined `model.py`\n\n```python\n# model.py\n\n+ from xo.orm import ForeignKeyField\n...\n    class Person(Model):\n        name    = StringField(re=r\"(Alice|Rabbit|John)\")  # regular expression validation\n        address = StringField()\n+       apartment = ForeignKeyField( 'Addresses.Apartment' )\n\t\t...\n\n```\n\n2. ~~Create finders in `finder.py`~~\n\n```python\n#finder.py\n\nfrom model import Addresses, Contacts\n\nclass Finder(object):\n    def __init__(self, orm_list):\n        # Here the parameter `orm_list` is assigned by xml-ormz, `orm_list = [ contact_map, addresses_map ]`\n        self.addresses = [m for m in orm_list if \"/Addresses\" in m][0]\n\n    def __call__(self, person):\n        # Here we find `address` using `person` object passed to us\n        try:\n            found = next(apartment for apartment in self.addresses if apartment.location == person.address)\n        except StopIteration:\n            return None # if we not found\n\n\nContacts.Person.getField(\"apartment\").finder = Finder\n```\n\n\n\n3. ~~Modify `hello.py` and see the result.~~\n\n```python\n# hello.py\n\nfrom model import Contacts, Addresses\nfrom xo.crawler import XmlMapper, XmlLinker\n+ import finder # don't forget to import the finders we wrote !\n\naddress_map = XmlMapper(\"./addresses.xml\", Addresses).parse()\ncontact_map = XmlMapper(\"./contacts.xml\", Contacts).parse()\n\n+ linker = XmlLinker( [ address_map, contact_map ], [ Addresses, Contacts ] )\n+ linker.link()\n\n# let's see if Person's apartment is found?\n+ print(contact_map[\"/Contacts/Person[1]\"].apartment)\n\n#Result: <class Addresses.Apartment>: {'location': 'Wonderland Street No.231', 'year': 1898, 'owner': 'Queen of Hearts', 'parentAddresses': <class Addresses>}\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CallmeNezha/xml-ormz", "keywords": "xml orm database", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "xml-ormz", "package_url": "https://pypi.org/project/xml-ormz/", "platform": "", "project_url": "https://pypi.org/project/xml-ormz/", "project_urls": {"Homepage": "https://github.com/CallmeNezha/xml-ormz"}, "release_url": "https://pypi.org/project/xml-ormz/0.0.12/", "requires_dist": ["lxml", "loguru", "jinja2"], "requires_python": "", "summary": "xml-ormz database library mapping collections of xml into python model objects", "version": "0.0.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>xml-ormz</h1>\n<p><strong>Authors:</strong> ZIJIAN JIANG</p>\n<p><strong>26 Oct 2019</strong>: Alpha version.</p>\n<p>xml-ormz is a orm(Object-relational mapping) library for mapping a collection of relational xml files into native python object. It is able to parse xml document tree into hierarchical class <code>model</code> objects. When parsing xml document tree into objects, it will check the attributes' <code>field</code> type; value content; amount of elements; numbers; <code>regular expressions</code>; etc. These validation rules can all be defined by user intuitively. As another important feature, <code>object relationships</code> can be built by using <code>finders</code>  in xml-ormz, <code>finder</code> is a user customized callable object for recursively traverse the trees to build references between any of two or more objects. So in the end of it, you will get a validated mapped relational python objects model <em>(with no concern about invalid attribute type or values; missing attributes; wrong amount of elements; missing relationships; invalid schema...)</em>.  In my philosophy of data processing (xml format is one kind of highly complex hierarchical data), all input data should be validated before any following processes, must not let the malignant propagate, and xml-orm do that properly.</p>\n<p>API Reference: <a href=\"https://callmenezha.github.io/xml-ormz/\" rel=\"nofollow\">https://callmenezha.github.io/xml-ormz/</a></p>\n<blockquote>\n<p>Readme is out of date now, please wait.</p>\n</blockquote>\n<h1>1. Installation</h1>\n<p><code>pip install xml-ormz</code></p>\n<h1>2. Example</h1>\n<p>It always said one example is beyond any documentation, so let's take a look.</p>\n<p>Here is the project hierarchy:</p>\n<pre><span class=\"o\">+</span> <span class=\"n\">ProjectFolder</span><span class=\"o\">/</span>\n\t<span class=\"n\">contacts</span><span class=\"o\">.</span><span class=\"n\">xml</span>\n\t<span class=\"n\">addresses</span><span class=\"o\">.</span><span class=\"n\">xml</span>\n\t<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">py</span>\n\t<span class=\"n\">finder</span><span class=\"o\">.</span><span class=\"n\">py</span>\n\t<span class=\"n\">hello</span><span class=\"o\">.</span><span class=\"n\">py</span>    <span class=\"c1\"># main entry</span>\n</pre>\n<p>Let's say we have two xml files.</p>\n<pre><span class=\"c\">&lt;!-- contacts.xml --&gt;</span>\n<span class=\"nt\">&lt;Contacts&gt;</span>\n    <span class=\"nt\">&lt;Person</span> <span class=\"na\">name=</span><span class=\"s\">\"Alice\"</span> <span class=\"na\">address=</span><span class=\"s\">\"Wonderland Street No.231\"</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;Email&gt;</span>513754619@mail.com<span class=\"nt\">&lt;/Email&gt;</span>\n    \t<span class=\"nt\">&lt;Phone</span> <span class=\"na\">number=</span><span class=\"s\">\"513754619\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;Phone</span> <span class=\"na\">number=</span><span class=\"s\">\"611953242\"</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/Person&gt;</span> \n    <span class=\"nt\">&lt;Person</span> <span class=\"na\">name=</span><span class=\"s\">\"Rabbit\"</span> <span class=\"na\">address=</span><span class=\"s\">\"Moon Street No.1\"</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;Email&gt;</span>645118456@gmail.com<span class=\"nt\">&lt;/Email&gt;</span>\n    \t<span class=\"nt\">&lt;Phone</span> <span class=\"na\">number=</span><span class=\"s\">\"645118456\"</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/Person&gt;</span> \n<span class=\"nt\">&lt;/Contacts&gt;</span>\n</pre>\n<pre><span class=\"c\">&lt;!-- addresses.xml --&gt;</span>\n<span class=\"nt\">&lt;Addresses&gt;</span>\n\t<span class=\"nt\">&lt;Apartment</span> <span class=\"na\">location=</span><span class=\"s\">\"Wonderland Street No.231\"</span> <span class=\"na\">year=</span><span class=\"s\">\"1898\"</span> <span class=\"na\">owner=</span><span class=\"s\">\"Queen of Hearts\"</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;Apartment</span> <span class=\"na\">location=</span><span class=\"s\">\"Moon Street No.1\"</span> <span class=\"na\">year=</span><span class=\"s\">\"2\"</span> <span class=\"na\">area=</span><span class=\"s\">\"401\"</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;/Addresses&gt;</span>\n</pre>\n<ol>\n<li>We create <code>model.py</code> for class model definitions.</li>\n</ol>\n<pre><span class=\"c1\"># model.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">xo.orm</span> <span class=\"kn\">import</span> <span class=\"n\">Model</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">StringField</span><span class=\"p\">,</span> <span class=\"n\">FloatField</span><span class=\"p\">,</span> <span class=\"n\">IntegerField</span><span class=\"p\">,</span> <span class=\"n\">ForeignKeyField</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Contacts</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n        <span class=\"n\">name</span>    <span class=\"o\">=</span> <span class=\"n\">StringField</span><span class=\"p\">(</span><span class=\"n\">re</span><span class=\"o\">=</span><span class=\"sa\">r</span><span class=\"s2\">\"(Alice|Rabbit|John)\"</span><span class=\"p\">)</span>  <span class=\"c1\"># regular expression validation</span>\n        <span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"n\">StringField</span><span class=\"p\">()</span>\n\n        <span class=\"k\">class</span> <span class=\"nc\">Email</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n            <span class=\"n\">__count__</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>   <span class=\"c1\"># every person must have one and only one email</span>\n            <span class=\"k\">pass</span>\t\t\t<span class=\"c1\"># email address is in email.text and text is not a attribute</span>\n\n        <span class=\"k\">class</span> <span class=\"nc\">Phone</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n            <span class=\"n\">__count__</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"p\">)</span> <span class=\"c1\"># every person must have at least one phone</span>\n            <span class=\"n\">number</span> <span class=\"o\">=</span> <span class=\"n\">IntegerField</span><span class=\"p\">(</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span> <span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Addresses</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Apartment</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n        <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"n\">StringField</span><span class=\"p\">(</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span> <span class=\"p\">)</span>\n        <span class=\"n\">year</span> <span class=\"o\">=</span> <span class=\"n\">IntegerField</span><span class=\"p\">()</span>\n        <span class=\"n\">owner</span> <span class=\"o\">=</span> <span class=\"n\">Optional</span><span class=\"p\">(</span> <span class=\"n\">StringField</span><span class=\"p\">()</span> <span class=\"p\">)</span> <span class=\"c1\"># owner attribute can be none, not required (without it will raise an error)</span>\n\t\t<span class=\"c1\"># forget to define `area` field here </span>\n        <span class=\"c1\"># when you run the program it will warn you that:</span>\n        <span class=\"c1\"># 2019-08-29 15:21:40 X root[7828] WARNING Try to assign extra attribute 'area' to undefined field of 'Addresses.Apartment', drop it.</span>\n        <span class=\"c1\"># So your `area` attribute in addresses.xml will never appear in this object.</span>\n</pre>\n<ol>\n<li>Create main entry of program <code>hello.py</code></li>\n</ol>\n<pre><span class=\"c1\"># hello.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">model</span> <span class=\"kn\">import</span> <span class=\"n\">Contacts</span><span class=\"p\">,</span> <span class=\"n\">Addresses</span>\n<span class=\"kn\">from</span> <span class=\"nn\">xo.crawler</span> <span class=\"kn\">import</span> <span class=\"n\">XmlMapper</span>\n\n<span class=\"n\">address_map</span> <span class=\"o\">=</span> <span class=\"n\">XmlMapper</span><span class=\"p\">(</span><span class=\"s2\">\"./addresses.xml\"</span><span class=\"p\">,</span> <span class=\"n\">Addresses</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">()</span>\n<span class=\"n\">contact_map</span> <span class=\"o\">=</span> <span class=\"n\">XmlMapper</span><span class=\"p\">(</span><span class=\"s2\">\"./contacts.xml\"</span><span class=\"p\">,</span> <span class=\"n\">Contacts</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">()</span>\n</pre>\n<pre><span class=\"n\">Result</span><span class=\"p\">:</span>\n<span class=\"n\">address_map</span> <span class=\"o\">-</span> \n  <span class=\"o\">+</span>  <span class=\"s1\">'/Addresses'</span><span class=\"p\">:</span><span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"nc\">Addresses</span><span class=\"o\">&gt;</span>\n      <span class=\"o\">-</span>  <span class=\"s1\">'childApartment'</span><span class=\"p\">:[</span><span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"nc\">Addresses</span><span class=\"o\">.</span><span class=\"n\">Apartment</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n      <span class=\"o\">-</span>  <span class=\"s1\">'childHouse'</span><span class=\"p\">:[</span><span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"nc\">Addresses</span><span class=\"o\">.</span><span class=\"n\">House</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n      <span class=\"o\">-</span>  <span class=\"s1\">'text'</span><span class=\"p\">:</span><span class=\"s1\">''</span>\n  <span class=\"o\">+</span>  <span class=\"s1\">'/Addresses/Apartment[1]'</span><span class=\"p\">:</span><span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"nc\">Addresses</span><span class=\"o\">.</span><span class=\"n\">Apartment</span><span class=\"o\">&gt;</span>\n      <span class=\"o\">-</span>  <span class=\"s1\">'location'</span><span class=\"p\">:</span><span class=\"s1\">'Wonderland Street No.231'</span>\n      <span class=\"o\">-</span>  <span class=\"s1\">'owner'</span><span class=\"p\">:</span><span class=\"s1\">'Queen of Hearts'</span>\n      <span class=\"o\">-</span>  <span class=\"s1\">'parentAddresses'</span><span class=\"p\">:</span><span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"nc\">Addresses</span><span class=\"o\">&gt;</span>\n      <span class=\"o\">-</span>  <span class=\"s1\">'year'</span><span class=\"p\">:</span><span class=\"mi\">1898</span>\n  <span class=\"o\">+</span>  <span class=\"s1\">'/Addresses/Apartment[2]'</span><span class=\"p\">:</span><span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"nc\">Addresses</span><span class=\"o\">.</span><span class=\"n\">Apartment</span><span class=\"o\">&gt;</span>\n      <span class=\"o\">-</span>  <span class=\"s1\">'location'</span><span class=\"p\">:</span><span class=\"s1\">'Moon Street No.1'</span>\n      <span class=\"o\">-</span>  <span class=\"s1\">'parentAddresses'</span><span class=\"p\">:</span><span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"nc\">Addresses</span><span class=\"o\">&gt;</span>\n      <span class=\"o\">-</span>  <span class=\"s1\">'year'</span><span class=\"p\">:</span><span class=\"mi\">2</span>\n\n\n<span class=\"n\">contact_map</span> <span class=\"o\">-</span> \n  <span class=\"o\">+</span>  <span class=\"s1\">'/Contacts'</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"nc\">Contacts</span><span class=\"o\">&gt;</span>\n  <span class=\"o\">+</span>  <span class=\"s1\">'/Contacts/Person[1]'</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"nc\">Contacts</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">&gt;</span>\n  <span class=\"o\">+</span>  <span class=\"s1\">'/Contacts/Person[1]/Email'</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"nc\">Contacts</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">Email</span><span class=\"o\">&gt;</span>\n      <span class=\"o\">-</span>  <span class=\"s1\">'parentPerson'</span><span class=\"p\">:</span><span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"nc\">Contacts</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">&gt;</span>\n      <span class=\"o\">-</span>  <span class=\"s1\">'text'</span><span class=\"p\">:</span><span class=\"s1\">'513754619@mail.com'</span>\n  <span class=\"o\">+</span>  <span class=\"s1\">'/Contacts/Person[1]/Phone[1]'</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"nc\">Contacts</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">Phone</span><span class=\"o\">&gt;</span>\n  <span class=\"o\">+</span>  <span class=\"s1\">'/Contacts/Person[1]/Phone[2]'</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"nc\">Contacts</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">Phone</span><span class=\"o\">&gt;</span>\n  <span class=\"o\">+</span>  <span class=\"s1\">'/Contacts/Person[2]'</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"nc\">Contacts</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">&gt;</span>\n  <span class=\"o\">+</span>  <span class=\"s1\">'/Contacts/Person[2]/Email'</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"nc\">Contacts</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">Email</span><span class=\"o\">&gt;</span>\n  <span class=\"o\">+</span>  <span class=\"s1\">'/Contacts/Person[2]/Phone'</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"nc\">Contacts</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">Phone</span><span class=\"o\">&gt;</span>\n  <span class=\"o\">...</span>\n</pre>\n<p>If you have noticed all our xml file has been parsed into python native objects with all attributes have been validated. Now its time to take our further trip to object relationships.</p>\n<ol>\n<li>We add additional field into our already defined <code>model.py</code></li>\n</ol>\n<pre><span class=\"c1\"># model.py</span>\n\n<span class=\"o\">+</span> <span class=\"kn\">from</span> <span class=\"nn\">xo.orm</span> <span class=\"kn\">import</span> <span class=\"n\">ForeignKeyField</span>\n<span class=\"o\">...</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n        <span class=\"n\">name</span>    <span class=\"o\">=</span> <span class=\"n\">StringField</span><span class=\"p\">(</span><span class=\"n\">re</span><span class=\"o\">=</span><span class=\"sa\">r</span><span class=\"s2\">\"(Alice|Rabbit|John)\"</span><span class=\"p\">)</span>  <span class=\"c1\"># regular expression validation</span>\n        <span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"n\">StringField</span><span class=\"p\">()</span>\n<span class=\"o\">+</span>       <span class=\"n\">apartment</span> <span class=\"o\">=</span> <span class=\"n\">ForeignKeyField</span><span class=\"p\">(</span> <span class=\"s1\">'Addresses.Apartment'</span> <span class=\"p\">)</span>\n\t\t<span class=\"o\">...</span>\n</pre>\n<ol>\n<li><del>Create finders in <code>finder.py</code></del></li>\n</ol>\n<pre><span class=\"c1\">#finder.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">model</span> <span class=\"kn\">import</span> <span class=\"n\">Addresses</span><span class=\"p\">,</span> <span class=\"n\">Contacts</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Finder</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">orm_list</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Here the parameter `orm_list` is assigned by xml-ormz, `orm_list = [ contact_map, addresses_map ]`</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">addresses</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">m</span> <span class=\"k\">for</span> <span class=\"n\">m</span> <span class=\"ow\">in</span> <span class=\"n\">orm_list</span> <span class=\"k\">if</span> <span class=\"s2\">\"/Addresses\"</span> <span class=\"ow\">in</span> <span class=\"n\">m</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">person</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Here we find `address` using `person` object passed to us</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">found</span> <span class=\"o\">=</span> <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"n\">apartment</span> <span class=\"k\">for</span> <span class=\"n\">apartment</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">addresses</span> <span class=\"k\">if</span> <span class=\"n\">apartment</span><span class=\"o\">.</span><span class=\"n\">location</span> <span class=\"o\">==</span> <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">address</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">StopIteration</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span> <span class=\"c1\"># if we not found</span>\n\n\n<span class=\"n\">Contacts</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">getField</span><span class=\"p\">(</span><span class=\"s2\">\"apartment\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">finder</span> <span class=\"o\">=</span> <span class=\"n\">Finder</span>\n</pre>\n<ol>\n<li><del>Modify <code>hello.py</code> and see the result.</del></li>\n</ol>\n<pre><span class=\"c1\"># hello.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">model</span> <span class=\"kn\">import</span> <span class=\"n\">Contacts</span><span class=\"p\">,</span> <span class=\"n\">Addresses</span>\n<span class=\"kn\">from</span> <span class=\"nn\">xo.crawler</span> <span class=\"kn\">import</span> <span class=\"n\">XmlMapper</span><span class=\"p\">,</span> <span class=\"n\">XmlLinker</span>\n<span class=\"o\">+</span> <span class=\"kn\">import</span> <span class=\"nn\">finder</span> <span class=\"c1\"># don't forget to import the finders we wrote !</span>\n\n<span class=\"n\">address_map</span> <span class=\"o\">=</span> <span class=\"n\">XmlMapper</span><span class=\"p\">(</span><span class=\"s2\">\"./addresses.xml\"</span><span class=\"p\">,</span> <span class=\"n\">Addresses</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">()</span>\n<span class=\"n\">contact_map</span> <span class=\"o\">=</span> <span class=\"n\">XmlMapper</span><span class=\"p\">(</span><span class=\"s2\">\"./contacts.xml\"</span><span class=\"p\">,</span> <span class=\"n\">Contacts</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">()</span>\n\n<span class=\"o\">+</span> <span class=\"n\">linker</span> <span class=\"o\">=</span> <span class=\"n\">XmlLinker</span><span class=\"p\">(</span> <span class=\"p\">[</span> <span class=\"n\">address_map</span><span class=\"p\">,</span> <span class=\"n\">contact_map</span> <span class=\"p\">],</span> <span class=\"p\">[</span> <span class=\"n\">Addresses</span><span class=\"p\">,</span> <span class=\"n\">Contacts</span> <span class=\"p\">]</span> <span class=\"p\">)</span>\n<span class=\"o\">+</span> <span class=\"n\">linker</span><span class=\"o\">.</span><span class=\"n\">link</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># let's see if Person's apartment is found?</span>\n<span class=\"o\">+</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">contact_map</span><span class=\"p\">[</span><span class=\"s2\">\"/Contacts/Person[1]\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">apartment</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#Result: &lt;class Addresses.Apartment&gt;: {'location': 'Wonderland Street No.231', 'year': 1898, 'owner': 'Queen of Hearts', 'parentAddresses': &lt;class Addresses&gt;}</span>\n</pre>\n\n          </div>"}, "last_serial": 6034256, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "5934b307a760a9bd6dc386e93c712813", "sha256": "b037bba00ba3c9872b450b9933e5610e620de6ca996e9b795878a7c4ce048fad"}, "downloads": -1, "filename": "xml_ormz-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5934b307a760a9bd6dc386e93c712813", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11051, "upload_time": "2019-08-29T08:31:29", "upload_time_iso_8601": "2019-08-29T08:31:29.128849Z", "url": "https://files.pythonhosted.org/packages/68/48/0e37b48e3d0419912e9ad2b3242233975ad0d5912b243528e198359e7888/xml_ormz-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e35ae38e0758d1a75b13faa6b899655", "sha256": "6ae3e9b337c8e2f512debf4e3486e0104badb8c176277a5fd705fb0d0c2b8de3"}, "downloads": -1, "filename": "xml-ormz-0.0.1.tar.gz", "has_sig": false, "md5_digest": "0e35ae38e0758d1a75b13faa6b899655", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9518, "upload_time": "2019-08-29T08:31:31", "upload_time_iso_8601": "2019-08-29T08:31:31.459923Z", "url": "https://files.pythonhosted.org/packages/73/c1/8e3c1e8627d229dc33cbc88132cf1b544bb893426e0e62ad27a089692ee9/xml-ormz-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "5623d29411c8176872d9cfa499b7703c", "sha256": "cd50b266d131cc1957452d9bcd9b1cc1585e5edc97cbaa9fbbdde92f18cce4ac"}, "downloads": -1, "filename": "xml_ormz-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "5623d29411c8176872d9cfa499b7703c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15842, "upload_time": "2019-09-24T02:46:59", "upload_time_iso_8601": "2019-09-24T02:46:59.286782Z", "url": "https://files.pythonhosted.org/packages/a8/b1/4c1d0acf629f8a1307205a598a023b480da4b7c3452362226299ad405dd2/xml_ormz-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5922eb0b0c642bdb245ca9f71067d093", "sha256": "bb78751789769f4ada57908fdd80a9755eb9e2fe612019092485f3f95a9d1b0f"}, "downloads": -1, "filename": "xml-ormz-0.0.10.tar.gz", "has_sig": false, "md5_digest": "5922eb0b0c642bdb245ca9f71067d093", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13113, "upload_time": "2019-09-24T02:47:01", "upload_time_iso_8601": "2019-09-24T02:47:01.283958Z", "url": "https://files.pythonhosted.org/packages/c1/7c/d5a13ff54230441204a03d9058f04580ce2fb1562c2673db04e8e6b0da89/xml-ormz-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "1409d62d73602ff8f01a1f4953410909", "sha256": "23e2193aab6e20f32f07c80c9ee1d4dee4aae633231f0d95a4b1ccec7c43dcf8"}, "downloads": -1, "filename": "xml_ormz-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "1409d62d73602ff8f01a1f4953410909", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15890, "upload_time": "2019-10-15T06:46:42", "upload_time_iso_8601": "2019-10-15T06:46:42.327665Z", "url": "https://files.pythonhosted.org/packages/cb/79/6c0b9077750fa62d4b86c7a7a1cc3de775cec4c1576fe0f8e4f6e1bcdd7e/xml_ormz-0.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0016fab9bfcc4ebf45a4a70e1dea8282", "sha256": "cdc0b0292656d3b706ee823e57975a779ea53c345a7b200edcd94dd646cec7a4"}, "downloads": -1, "filename": "xml-ormz-0.0.11.tar.gz", "has_sig": false, "md5_digest": "0016fab9bfcc4ebf45a4a70e1dea8282", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13157, "upload_time": "2019-10-15T06:46:44", "upload_time_iso_8601": "2019-10-15T06:46:44.506004Z", "url": "https://files.pythonhosted.org/packages/63/47/630042457ef2068726d66db40a97102912e02e8decc5d059bd795f117e70/xml-ormz-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "359ef43ec678a6ba4f4368f4d48ab758", "sha256": "ee5490aa685804d225c549e1f946400a041862ab767522ab991a8eeead9e43d3"}, "downloads": -1, "filename": "xml_ormz-0.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "359ef43ec678a6ba4f4368f4d48ab758", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18216, "upload_time": "2019-10-26T16:55:29", "upload_time_iso_8601": "2019-10-26T16:55:29.036678Z", "url": "https://files.pythonhosted.org/packages/4d/ff/701e7f67c18ab08bdbcf67f0ea7bd50400b6b5dac6e4c15b54bf5e735e9c/xml_ormz-0.0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eecb8e24cfcb086fcf752f9666cc5e73", "sha256": "0b403422a2d41360c480da093513f3ee1eabac00fbdc52a8cbcd0c7fc90594cc"}, "downloads": -1, "filename": "xml-ormz-0.0.12.tar.gz", "has_sig": false, "md5_digest": "eecb8e24cfcb086fcf752f9666cc5e73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15428, "upload_time": "2019-10-26T16:55:30", "upload_time_iso_8601": "2019-10-26T16:55:30.705298Z", "url": "https://files.pythonhosted.org/packages/a2/25/7c38701df3cff11ad30a125490b8e5ef32ffcc68ae505f9fb5983b3df67c/xml-ormz-0.0.12.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "14d99665e9d193e9d390144ad412d7fa", "sha256": "1dd0f1ab25ae64371ca418c431f925712d51d23d6cdf1f9f39fa2548a20bb117"}, "downloads": -1, "filename": "xml_ormz-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "14d99665e9d193e9d390144ad412d7fa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10984, "upload_time": "2019-09-02T05:44:52", "upload_time_iso_8601": "2019-09-02T05:44:52.525892Z", "url": "https://files.pythonhosted.org/packages/42/55/d92716cd1d2550b7dfa67fbf255ef7a2185e42377ec24c747b357549c15d/xml_ormz-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51133f55086b83b09d5178472784dbac", "sha256": "d982548ce8bf0939351586bf917f6383fffb96f4301627d595fdb463f1034ae0"}, "downloads": -1, "filename": "xml-ormz-0.0.2.tar.gz", "has_sig": false, "md5_digest": "51133f55086b83b09d5178472784dbac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9505, "upload_time": "2019-09-02T05:44:56", "upload_time_iso_8601": "2019-09-02T05:44:56.353962Z", "url": "https://files.pythonhosted.org/packages/6c/f6/502b56bbe396fd7a1462f66f1e15899a4609ad22910c314748502f6fd842/xml-ormz-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "508833431a91dd1c4187d48d18dfe9f6", "sha256": "e9f6cbaa273536857737c5d2331e9fb7774b0959d5ba4ab45463c1334123a9d1"}, "downloads": -1, "filename": "xml_ormz-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "508833431a91dd1c4187d48d18dfe9f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13184, "upload_time": "2019-09-03T07:59:01", "upload_time_iso_8601": "2019-09-03T07:59:01.415668Z", "url": "https://files.pythonhosted.org/packages/48/bc/810466e9f59b3256a34731504c61897831d7b005f351dc19f66be213c72e/xml_ormz-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ddc71fabe0a2db56bf2c24f68a3faaa9", "sha256": "9e0e0c01d384665b0643f3587dc8242e2004e977224a4a38481f82444c5d8fb8"}, "downloads": -1, "filename": "xml-ormz-0.0.3.tar.gz", "has_sig": false, "md5_digest": "ddc71fabe0a2db56bf2c24f68a3faaa9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10912, "upload_time": "2019-09-03T07:59:02", "upload_time_iso_8601": "2019-09-03T07:59:02.887256Z", "url": "https://files.pythonhosted.org/packages/3c/69/b29d58df2f4d32a4287bdc73daf261dff9d1912375521c6273a75c60af64/xml-ormz-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "7e27b7b815dca820ee7d9339b480bde6", "sha256": "931311ba19b750d0d5e414bc81b8a83f140ef2d4e4bf7e84896ff6e4b6bfa4d9"}, "downloads": -1, "filename": "xml_ormz-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "7e27b7b815dca820ee7d9339b480bde6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13700, "upload_time": "2019-09-03T08:23:17", "upload_time_iso_8601": "2019-09-03T08:23:17.131653Z", "url": "https://files.pythonhosted.org/packages/a0/a5/cbb4c885d5804029f553bbee7c135ba4c1fabb319803d7028e8be7916a28/xml_ormz-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5be93035c0963f96078b8e0bfbc94ac", "sha256": "5da1614de8553f76a1e249d4a51737672a51fb8030a3fea45567d878de3330d5"}, "downloads": -1, "filename": "xml-ormz-0.0.4.tar.gz", "has_sig": false, "md5_digest": "a5be93035c0963f96078b8e0bfbc94ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11263, "upload_time": "2019-09-03T08:23:18", "upload_time_iso_8601": "2019-09-03T08:23:18.651504Z", "url": "https://files.pythonhosted.org/packages/5c/d6/479bedb0f98a3145fde9220daa95cb28860c0d7b4568e5ee6045e47ba3e9/xml-ormz-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "df0ebcdb54526b978d7649defcb96905", "sha256": "f0fa0686d64753e575ae8668d46afc85dfb9e5dbc4b1fad57c6ec67fdb8d5e53"}, "downloads": -1, "filename": "xml_ormz-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "df0ebcdb54526b978d7649defcb96905", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13716, "upload_time": "2019-09-04T07:40:32", "upload_time_iso_8601": "2019-09-04T07:40:32.690619Z", "url": "https://files.pythonhosted.org/packages/8a/d1/219c7aea1f1ab039a31487d02c97b05213be6c8af4ad11286f0e1eef50b4/xml_ormz-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be2a3114b1c2919d7b1fa75dfbe152e6", "sha256": "e217e2a9a5331a6aba4aac8885f3143bb8b995a3a7bdd879388c49fd8adfefc6"}, "downloads": -1, "filename": "xml-ormz-0.0.5.tar.gz", "has_sig": false, "md5_digest": "be2a3114b1c2919d7b1fa75dfbe152e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11284, "upload_time": "2019-09-04T07:40:34", "upload_time_iso_8601": "2019-09-04T07:40:34.336191Z", "url": "https://files.pythonhosted.org/packages/67/eb/93a911b04b1ccfb1788e6ac0851accdd40d3171d4f20ed30b22f1b68c30f/xml-ormz-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "2ef5583a0dea161b6034a78c9067eaa5", "sha256": "a015dc6858d44f6dc0ef829526b3e83044a2d64926393c6bc7da571fc969bc81"}, "downloads": -1, "filename": "xml_ormz-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "2ef5583a0dea161b6034a78c9067eaa5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14794, "upload_time": "2019-09-09T08:17:47", "upload_time_iso_8601": "2019-09-09T08:17:47.286782Z", "url": "https://files.pythonhosted.org/packages/13/b0/9b4b3136ae30f4a36980ce00055d8e335652785cea649fdc78a43fd63869/xml_ormz-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "25983f539894d556942a32362443dc7d", "sha256": "3e4ee582e1eed55f8942945fce368d6fe92e05fcc8bc50f8146136de5bf50e2c"}, "downloads": -1, "filename": "xml-ormz-0.0.6.tar.gz", "has_sig": false, "md5_digest": "25983f539894d556942a32362443dc7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12020, "upload_time": "2019-09-09T08:17:57", "upload_time_iso_8601": "2019-09-09T08:17:57.857839Z", "url": "https://files.pythonhosted.org/packages/ca/ad/a095a3f27c20e283d9acfbd814b0675f90be6c1091314edd267107fdfc0d/xml-ormz-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "1bc6d49bd0678dc402901a7592a5c753", "sha256": "dad52ad85be08778f750c1c5c3be10fd4135e53e0fc3f157fbd2cc3542f63fac"}, "downloads": -1, "filename": "xml_ormz-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "1bc6d49bd0678dc402901a7592a5c753", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14805, "upload_time": "2019-09-09T09:48:02", "upload_time_iso_8601": "2019-09-09T09:48:02.888495Z", "url": "https://files.pythonhosted.org/packages/c1/68/fc75c3cec6cd41aabfcd777f03846d9e5d47f7495bc1e15a1428b54bf440/xml_ormz-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f6c6043c34ee6eb77fbadcd3bc08be2", "sha256": "e359a20fa4677dce30e482e5315a8647287c7995ba802bc746c20fa0af58cf4b"}, "downloads": -1, "filename": "xml-ormz-0.0.7.tar.gz", "has_sig": false, "md5_digest": "3f6c6043c34ee6eb77fbadcd3bc08be2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12027, "upload_time": "2019-09-09T09:48:04", "upload_time_iso_8601": "2019-09-09T09:48:04.714780Z", "url": "https://files.pythonhosted.org/packages/29/28/a4b3b368aacfc490ef93e670c9639285d1fa6fe65291f1d637afa76f76e5/xml-ormz-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "bd987c459a341d85d64c2b03617942fb", "sha256": "7c22cecc40e89ca13aa76ec2ebe0d1c00c521e16d90a5841b1710c577e144bc0"}, "downloads": -1, "filename": "xml_ormz-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "bd987c459a341d85d64c2b03617942fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15700, "upload_time": "2019-09-10T16:47:44", "upload_time_iso_8601": "2019-09-10T16:47:44.774312Z", "url": "https://files.pythonhosted.org/packages/bd/7d/67d89a352c45eba46dc09c7aa28650677533736f175f0bc69e2d1b008f1b/xml_ormz-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4706e63f3a409dad9eb3dd98d46fafc6", "sha256": "54962b6ce455a6f51f8f2c66c54733eef56f74fbe6c83ce91541ac7206d9b3ed"}, "downloads": -1, "filename": "xml-ormz-0.0.8.tar.gz", "has_sig": false, "md5_digest": "4706e63f3a409dad9eb3dd98d46fafc6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12992, "upload_time": "2019-09-10T16:47:47", "upload_time_iso_8601": "2019-09-10T16:47:47.122408Z", "url": "https://files.pythonhosted.org/packages/d9/a6/02c12b85f22f0e78f7be27ac737392995197b754618cf7b00eb0bdf221b9/xml-ormz-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "9a7051f8820121610d1cf5e9c53d887e", "sha256": "378e511bed374b24cd4838d3804ad13558a3c440ed61b25a422c25672bc35695"}, "downloads": -1, "filename": "xml_ormz-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "9a7051f8820121610d1cf5e9c53d887e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15706, "upload_time": "2019-09-10T17:26:40", "upload_time_iso_8601": "2019-09-10T17:26:40.134777Z", "url": "https://files.pythonhosted.org/packages/72/0f/a61f188218c5a356d1fa4df26e3da1ff483fc9f2d997f2fd1a54bea90a4d/xml_ormz-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b0568eb0f6fe271eab833d4c55770f80", "sha256": "9e8b79dd890224628b16586d36753acef33aaaf4b1dda5a232a8e3cd0dfc73dd"}, "downloads": -1, "filename": "xml-ormz-0.0.9.tar.gz", "has_sig": false, "md5_digest": "b0568eb0f6fe271eab833d4c55770f80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12979, "upload_time": "2019-09-10T17:26:42", "upload_time_iso_8601": "2019-09-10T17:26:42.501652Z", "url": "https://files.pythonhosted.org/packages/35/f3/08c91265d21514c17ad92cb90f45b16e0d8e935f8d67e973cf5cd62bb2e8/xml-ormz-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "359ef43ec678a6ba4f4368f4d48ab758", "sha256": "ee5490aa685804d225c549e1f946400a041862ab767522ab991a8eeead9e43d3"}, "downloads": -1, "filename": "xml_ormz-0.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "359ef43ec678a6ba4f4368f4d48ab758", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18216, "upload_time": "2019-10-26T16:55:29", "upload_time_iso_8601": "2019-10-26T16:55:29.036678Z", "url": "https://files.pythonhosted.org/packages/4d/ff/701e7f67c18ab08bdbcf67f0ea7bd50400b6b5dac6e4c15b54bf5e735e9c/xml_ormz-0.0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eecb8e24cfcb086fcf752f9666cc5e73", "sha256": "0b403422a2d41360c480da093513f3ee1eabac00fbdc52a8cbcd0c7fc90594cc"}, "downloads": -1, "filename": "xml-ormz-0.0.12.tar.gz", "has_sig": false, "md5_digest": "eecb8e24cfcb086fcf752f9666cc5e73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15428, "upload_time": "2019-10-26T16:55:30", "upload_time_iso_8601": "2019-10-26T16:55:30.705298Z", "url": "https://files.pythonhosted.org/packages/a2/25/7c38701df3cff11ad30a125490b8e5ef32ffcc68ae505f9fb5983b3df67c/xml-ormz-0.0.12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:24:58 2020"}