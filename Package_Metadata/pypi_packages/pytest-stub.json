{"info": {"author": "Igor `idle sign` Starikov", "author_email": "idlesign@yandex.ru", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Pytest", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Testing"], "description": "pytest-stub\n===========\nhttps://github.com/idlesign/pytest-stub\n\n|release| |lic| |ci| |coverage|\n\n.. |release| image:: https://img.shields.io/pypi/v/pytest-stub.svg\n    :target: https://pypi.python.org/pypi/pytest-stub\n\n.. |lic| image:: https://img.shields.io/pypi/l/pytest-stub.svg\n    :target: https://pypi.python.org/pypi/pytest-stub\n\n.. |ci| image:: https://img.shields.io/travis/idlesign/pytest-stub/master.svg\n    :target: https://travis-ci.org/idlesign/pytest-stub\n\n.. |coverage| image:: https://img.shields.io/coveralls/idlesign/pytest-stub/master.svg\n    :target: https://coveralls.io/r/idlesign/pytest-stub\n\n\nDescription\n-----------\n\n*Stub packages, modules and attributes.*\n\nThis pytest plugin allows you to replace dependencies with stubs.\n\nIt can be useful if you want to test some code using a dependency without actually having this dependency,\nfor example if you're testing your library, which uses some parts of another library.\n\n\nRequirements\n------------\n\n* Python 3.6+\n* pytest >= 2.9.0\n\n\nHow to use\n----------\n\nYou can stub dependencies either with your own custom objects or you may instruct ``pytest-stub``\nto generate functions or classes for you. Use ``stub`` fixture in your test functions, like this:\n\n.. code-block:: python\n\n    def test_django_related(stub):\n\n        stub.apply({\n            # Replace `call_command` with a generated function.\n            'django.core.management.call_command': '[func]',\n\n            # Replace `BaseCommand` with a generated class.\n            'django.core.management.base.BaseCommand': '[cls]',\n\n            # Replace `dummy` with generated MagicMock.\n            'django.dummy': '[mock]',\n\n            # Replace entire `cv2` module.\n            'cv2': '[mock]',\n\n            # Sometimes we need just a persistent (always the same) magic mock.\n            'numpy': '[mock_persist]',\n\n            # Stub multiple attributes in the same module with custom objects.\n            'django.conf': {\n                'settings': object(),\n                'some': True,\n            },\n\n        })\n\nIf we want to replace some dependency with a stub not in a fixture but globally, we can use ``stub_global()`` function\nin root ``conftest.py`` (this code will apply patch before tests, so tests will be safe to import code using dependencies).\n\n.. code-block:: python\n\n    from pytest_stub.toolbox import stub_global\n\n    stub_global({\n        'cv2': '[mock_persist]',\n    })\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/idlesign/pytest-stub", "keywords": "", "license": "BSD 3-Clause License", "maintainer": "", "maintainer_email": "", "name": "pytest-stub", "package_url": "https://pypi.org/project/pytest-stub/", "platform": "", "project_url": "https://pypi.org/project/pytest-stub/", "project_urls": {"Homepage": "https://github.com/idlesign/pytest-stub"}, "release_url": "https://pypi.org/project/pytest-stub/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "Stub packages, modules and attributes.", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://github.com/idlesign/pytest-stub\" rel=\"nofollow\">https://github.com/idlesign/pytest-stub</a></p>\n<p><a href=\"https://pypi.python.org/pypi/pytest-stub\" rel=\"nofollow\"><img alt=\"release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f44c470618c006007810770fcaa8ad8657088f0f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079746573742d737475622e737667\"></a> <a href=\"https://pypi.python.org/pypi/pytest-stub\" rel=\"nofollow\"><img alt=\"lic\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/48a9e5b10ade89f385bb4aa94c85a9e56f5373f6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f7079746573742d737475622e737667\"></a> <a href=\"https://travis-ci.org/idlesign/pytest-stub\" rel=\"nofollow\"><img alt=\"ci\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/775e083c952e52a68c5cf617d11d00eb36deaa8a/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f69646c657369676e2f7079746573742d737475622f6d61737465722e737667\"></a> <a href=\"https://coveralls.io/r/idlesign/pytest-stub\" rel=\"nofollow\"><img alt=\"coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/587be4dddc88ef0b205796ad1290cf2ad0d4acfa/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f69646c657369676e2f7079746573742d737475622f6d61737465722e737667\"></a></p>\n<div id=\"description\">\n<h2>Description</h2>\n<p><em>Stub packages, modules and attributes.</em></p>\n<p>This pytest plugin allows you to replace dependencies with stubs.</p>\n<p>It can be useful if you want to test some code using a dependency without actually having this dependency,\nfor example if you\u2019re testing your library, which uses some parts of another library.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python 3.6+</li>\n<li>pytest &gt;= 2.9.0</li>\n</ul>\n</div>\n<div id=\"how-to-use\">\n<h2>How to use</h2>\n<p>You can stub dependencies either with your own custom objects or you may instruct <tt><span class=\"pre\">pytest-stub</span></tt>\nto generate functions or classes for you. Use <tt>stub</tt> fixture in your test functions, like this:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">test_django_related</span><span class=\"p\">(</span><span class=\"n\">stub</span><span class=\"p\">):</span>\n\n    <span class=\"n\">stub</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">({</span>\n        <span class=\"c1\"># Replace `call_command` with a generated function.</span>\n        <span class=\"s1\">'django.core.management.call_command'</span><span class=\"p\">:</span> <span class=\"s1\">'[func]'</span><span class=\"p\">,</span>\n\n        <span class=\"c1\"># Replace `BaseCommand` with a generated class.</span>\n        <span class=\"s1\">'django.core.management.base.BaseCommand'</span><span class=\"p\">:</span> <span class=\"s1\">'[cls]'</span><span class=\"p\">,</span>\n\n        <span class=\"c1\"># Replace `dummy` with generated MagicMock.</span>\n        <span class=\"s1\">'django.dummy'</span><span class=\"p\">:</span> <span class=\"s1\">'[mock]'</span><span class=\"p\">,</span>\n\n        <span class=\"c1\"># Replace entire `cv2` module.</span>\n        <span class=\"s1\">'cv2'</span><span class=\"p\">:</span> <span class=\"s1\">'[mock]'</span><span class=\"p\">,</span>\n\n        <span class=\"c1\"># Sometimes we need just a persistent (always the same) magic mock.</span>\n        <span class=\"s1\">'numpy'</span><span class=\"p\">:</span> <span class=\"s1\">'[mock_persist]'</span><span class=\"p\">,</span>\n\n        <span class=\"c1\"># Stub multiple attributes in the same module with custom objects.</span>\n        <span class=\"s1\">'django.conf'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'settings'</span><span class=\"p\">:</span> <span class=\"nb\">object</span><span class=\"p\">(),</span>\n            <span class=\"s1\">'some'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n\n    <span class=\"p\">})</span>\n</pre>\n<p>If we want to replace some dependency with a stub not in a fixture but globally, we can use <tt>stub_global()</tt> function\nin root <tt>conftest.py</tt> (this code will apply patch before tests, so tests will be safe to import code using dependencies).</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytest_stub.toolbox</span> <span class=\"kn\">import</span> <span class=\"n\">stub_global</span>\n\n<span class=\"n\">stub_global</span><span class=\"p\">({</span>\n    <span class=\"s1\">'cv2'</span><span class=\"p\">:</span> <span class=\"s1\">'[mock_persist]'</span><span class=\"p\">,</span>\n<span class=\"p\">})</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 7118985, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f00baf3c27164ebd92e4528223bcffb0", "sha256": "0d5ecfaa01cc3682a3292b112e9c2d0223de69a43b29502b7568cb4e3c6635a5"}, "downloads": -1, "filename": "pytest_stub-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f00baf3c27164ebd92e4528223bcffb0", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 5501, "upload_time": "2018-12-28T12:37:58", "upload_time_iso_8601": "2018-12-28T12:37:58.031890Z", "url": "https://files.pythonhosted.org/packages/3b/6c/ab2ef432045e223b4cf424aa40ca04f4835a788c5aef27d82d9896b06a8f/pytest_stub-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "05a0dcea0c12051cf6eaf5be76e9ae93", "sha256": "849f9c8007e68b542b96db833037749a49e9d66c413a01dc5302510e62202d5e"}, "downloads": -1, "filename": "pytest-stub-0.1.0.tar.gz", "has_sig": false, "md5_digest": "05a0dcea0c12051cf6eaf5be76e9ae93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5068, "upload_time": "2018-12-28T12:37:55", "upload_time_iso_8601": "2018-12-28T12:37:55.164744Z", "url": "https://files.pythonhosted.org/packages/da/e4/dbce55853783e57b752d0b845ae560ce5b4a3f78519fce7efe3b05ec17e4/pytest-stub-0.1.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "fbb09ea51f617230edbde88a1ed9fd36", "sha256": "4490aec561f2f31e8dc201c303fdf766432fd95a5cbb9d1ccf3ea849cd31d86f"}, "downloads": -1, "filename": "pytest_stub-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fbb09ea51f617230edbde88a1ed9fd36", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 5114, "upload_time": "2020-04-18T09:42:18", "upload_time_iso_8601": "2020-04-18T09:42:18.639814Z", "url": "https://files.pythonhosted.org/packages/37/ea/8f3b30d7667cbe959e09f48e11a3947770ab4ee4778ed11cb48fdba9dd8d/pytest_stub-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fefe2663cb5fb9ee192ebbf2703c45b4", "sha256": "bbca1d48c468e6d8865172fd772b9f9abf6c3894cbd28bb8c6c9879850edb05a"}, "downloads": -1, "filename": "pytest-stub-1.0.0.tar.gz", "has_sig": false, "md5_digest": "fefe2663cb5fb9ee192ebbf2703c45b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5311, "upload_time": "2020-04-18T09:42:16", "upload_time_iso_8601": "2020-04-18T09:42:16.873561Z", "url": "https://files.pythonhosted.org/packages/b7/04/759811ad8a3b63b558bb863cdcadd4796e876212e7b55c3db8ca5aca0429/pytest-stub-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "cda735b5059c6cc8cbd0b498873751b1", "sha256": "5de0e3247f8e51321c4dc6d94bbe53c8a96a51edcf722d3df3cb20d4d32b27d7"}, "downloads": -1, "filename": "pytest_stub-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cda735b5059c6cc8cbd0b498873751b1", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 5700, "upload_time": "2020-04-28T10:31:23", "upload_time_iso_8601": "2020-04-28T10:31:23.943262Z", "url": "https://files.pythonhosted.org/packages/34/30/13f00e1af36577df3e355827cdc02e1a7cbb4fce31966a72a692573ae683/pytest_stub-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0218753ad620667547479794c1f4a1dc", "sha256": "276043d91cbad863ba56b99f6b781a4a1bc19e1d2e928a5f8e76979ee02c8099"}, "downloads": -1, "filename": "pytest-stub-1.1.0.tar.gz", "has_sig": false, "md5_digest": "0218753ad620667547479794c1f4a1dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5852, "upload_time": "2020-04-28T10:31:22", "upload_time_iso_8601": "2020-04-28T10:31:22.426263Z", "url": "https://files.pythonhosted.org/packages/32/67/d22676636e337c058b15178bcf6e3f1cd71b8fd52782791c46152bd79e4c/pytest-stub-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cda735b5059c6cc8cbd0b498873751b1", "sha256": "5de0e3247f8e51321c4dc6d94bbe53c8a96a51edcf722d3df3cb20d4d32b27d7"}, "downloads": -1, "filename": "pytest_stub-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cda735b5059c6cc8cbd0b498873751b1", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 5700, "upload_time": "2020-04-28T10:31:23", "upload_time_iso_8601": "2020-04-28T10:31:23.943262Z", "url": "https://files.pythonhosted.org/packages/34/30/13f00e1af36577df3e355827cdc02e1a7cbb4fce31966a72a692573ae683/pytest_stub-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0218753ad620667547479794c1f4a1dc", "sha256": "276043d91cbad863ba56b99f6b781a4a1bc19e1d2e928a5f8e76979ee02c8099"}, "downloads": -1, "filename": "pytest-stub-1.1.0.tar.gz", "has_sig": false, "md5_digest": "0218753ad620667547479794c1f4a1dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5852, "upload_time": "2020-04-28T10:31:22", "upload_time_iso_8601": "2020-04-28T10:31:22.426263Z", "url": "https://files.pythonhosted.org/packages/32/67/d22676636e337c058b15178bcf6e3f1cd71b8fd52782791c46152bd79e4c/pytest-stub-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:40 2020"}