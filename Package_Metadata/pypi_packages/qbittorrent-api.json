{"info": {"author": "Russell Martin", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Communications :: File Sharing", "Topic :: Utilities"], "description": "qBittorrent Web API Client\n================================\nPython client implementation for qBittorrent Web API. Supports qBittorrent v4.1.0+ (i.e. Web API v2.0+).\n\n  * [Features](#features)\n  * [Installation](#installation)\n  * [Getting Started](#getting-started)\n  * [Behavior & Configuration](#behavior--configuration)\n  * [Performance](#performance)\n  * [API Documentation](#api-documentation)\n  * [Direct API Endpoint Access](#direct-api-endpoint-access)\n  * [Interaction Layer Usage](#interaction-layer-usage)\n  * [Interaction Layer Notes](#interaction-layer-notes)\n  * [Interaction Layer Details](#interaction-layer-details)\n  * [Exceptions](#exceptions)\n\nThe full qBittorrent Web API specification is documented on their [wiki](https://github.com/qbittorrent/qBittorrent/wiki/Web-API-Documentation).\n\nFeatures\n------------\n* The entire qBittorent Web API is implemented.\n* qBittorrent version checking for an endpoint's existence/features is automatically handled.\n* All Python versions are supported.\n* If the authentication cookie expires, a new one is automatically requested in line with any API call.\n\nInstallation\n------------\n* Install via pip from [PyPI](https://pypi.org/project/qbittorrent-api/):\n  * `pip install qbittorrent-api`\n* Install specific release:\n  * `pip install git+https://github.com/rmartin16/qbittorrent-api.git@v0.3.2#egg=qbittorrent-api`\n* Install direct from master:\n  * `pip install git+https://github.com/rmartin16/qbittorrent-api.git#egg=qbittorrent-api`\n* Ensure urllib3, requests, and attrdict are installed. (These are installed automatically using the methods above.)\n* Enable WebUI in qBittorrent: Tools -> Preferences -> Web UI\n* If the Web API will be exposed to the Internet (i.e. made available outside your network), please [do it properly](https://github.com/qbittorrent/qBittorrent/wiki/Linux-WebUI-HTTPS-with-Let's-Encrypt-certificates-and-NGINX-SSL-reverse-proxy).\n\nGetting Started\n---------------\n```python\nimport qbittorrentapi\n\n# instantiate a Client using the appropriate WebUI configuration\nqbt_client = qbittorrentapi.Client(host='localhost:8080', username='admin', password='adminadmin')\n\n# the Client will automatically acquire/maintain a logged in state in line with any request.\n# therefore, this is not necessary; however, you many want to test the provided login credentials.\ntry:\n    qbt_client.auth_log_in()\nexcept qbittorrentapi.LoginFailed as e:\n    print(e)\n\n# display qBittorrent info\nprint(f'qBittorrent: {qbt_client.app.version}')\nprint(f'qBittorrent Web API: {qbt_client.app.web_api_version}')\nfor k,v in qbt_client.app.build_info.items(): print(f'{k}: {v}')\n\n# retrieve and show all torrents\nfor torrent in qbt_client.torrents_info():\n    print(f'{torrent.hash[-6:]}: {torrent.name} ({torrent.state})')\n\n# pause all torrents\nqbt_client.torrents.pause.all()\n```\n\nBehavior & Configuration\n-------------\n* **WARNING**: Using an untrusted (e.g. self-signed) certificate for HTTPS WebUI\n  * Instantiate Client with `VERIFY_WEBUI_CERTIFICATE=False` or set environment variable `PYTHON_QBITTORRENTAPI_DO_NOT_VERIFY_WEBUI_CERTIFICATE` to a non-null value.\n  * Failure to do this for will cause connections to qBittorrent to fail.\n  * As a word of caution, doing this actually does turn off certificate verification. Therefore, for instance, potential man-in-the-middle attacks will not be detected and reported (since the error is suppressed). However, the connection will remain encrypted.\n* Host, Username and password Defaults\n  * These can be provided when instantiating Client or calling `qbt_client.auth_log_in(username='...', password='...')`.\n  * Alternatively, set environment variables `PYTHON_QBITTORRENTAPI_HOST`, `PYTHON_QBITTORRENTAPI_USERNAME` and `PYTHON_QBITTORRENTAPI_PASSWORD`.\n* API Endpoints Not Yet Implemented in the qBittorrent Host\n  * By default, if a call is made to endpoint that doesn't yet exist on the host (e.g. the Search endpoints were introduced in Web API v2.1.1), there's a debug logger output and None is returned.\n  * To raise UnimplementedError instead, instantiate Client with `RAISE_UNIMPLEMENTEDERROR_FOR_UNIMPLEMENTED_API_ENDPOINTS=True`.\n* Disable Logging Debug Output\n  * Instantiate Client with `DISABLE_LOGGING_DEBUG_OUTPUT=True` or manually disable logging for the relevant packages:\n    * ```logging.getLogger('qbittorrentapi').setLevel(logging.INFO) ```\n    * ```logging.getLogger('requests').setLevel(logging.INFO) ```\n    * ```logging.getLogger('urllib3').setLevel(logging.INFO) ```\n\nPerformance\n---------------\nBy default, complex objects are returned from some endpoints. These objects allow for accessing the response's items as attributes and include methods for contextually relevant actions (such as `start()` and `stop()` for a torrent, for example).\n\nThis comes at the cost of performance, though. Generally, this cost isn't large; however, some endpoints, such as `torrents_files()`, may need to convert a large payload and the cost can be significant.\n\nThis client can be configured to always return only the simple JSON if desired. Simply set `SIMPLE_RESPONSES=True` when instantiating the client.\n```python\nqbt_client = qbittorrentapi.Client(host='localhost:8080', username='admin', password='adminadmin', SIMPLE_RESPONSES=True)\n```\n\nAlternatively, `SIMPLE_RESPONSES` can be set to True to return the simple JSON only for an individual method call.\n```python\nqbt_client.torrents.files(hash='...', SIMPLE_RESPONSES=True)\n```\n\nAPI Documentation\n---------------\nThe Client's methods all document their own description, expected arguments, possible exceptions, and return value.\n\nFor best results, use the \"most primitive\" form of the API call. So, `qbt_client.torrents_pause` instead of `qbt_client.torrents.pause`.\n\n```python\nhelp(qbt_client.torrents_add)\nhelp(qbt_client.torrents_add_trackers)\n```\n\nDirect API Endpoint Access\n--------------------------\nThe API is separated in to eight namespaces for the API endpoints:\n\n* Authentication (auth)\n* Application (app)\n* Log (log)\n* Sync (sync)\n* Transfer (transfer)\n* Torrent Management (torrents)\n* RSS (rss)\n* Search (search)\n\nTo use this package to directly access those endpoints:\n\n```python\nresponse = qbt_client.<name>_<api method>(<arguments>)\n```\nReplace `<name>` with one of the eight namespaces (from within the parentheses) above and `<api method>` with a relevant endpoint.\n\nFor instance:\n```python\ntorrent_list = qbt_client.torrents_info(status_filter='active')\n```\n\nThe responses from the API calls are strings (e.g. app/version) or an extended Dictionary or List object (e.g. torrents/trackers).\n\nEach namespace endpoint's method name is [PEP8](https://www.python.org/dev/peps/pep-0008/)-ified. However, they are all aliased to the endpoint's name as implemented in qBittorrent's Web API. So, for example, `qbt_client.app_web_api_version()` and `qbt_client.app_webapiVersion()` are equivalent. This is also true for the API methods' arguments; so, `qbt_client.torrents_add(urls='...', save_path='/torrents')` and `qbt_client.torrents_add(urls='...', savepath='/torrents')` are equivalent. This is intended to allow use of this Client only depending on qBittorrent's own [Web API documentation](https://github.com/qbittorrent/qBittorrent/wiki/Web-API-Documentation).\n\n\nInteraction Layer Usage\n--------------------------------------\nThe package also contains more robust interfaces to the API endpoints. For each of the eight namespaces, there is an interface to the relevant API endpoints. Of note, I created additional namespaces for torrent categories and torrent tags.\n\nAn example for the Application namespace:\n```Python\nver = qbt_client.app.version\napi_ver = qbt_client.app.api_web_version\nprefs = qbt_client.app.preferences\nis_dht_enabled = qbt_client.application.preferences.dht\nqbt_client.application.preferences = dict(dht=(not is_dht_enabled))\n```\n\nFor each namespace, all endpoints with a return value and no parameters are implemented as a property. All other endpoints are implemented as methods; some of the methods have extended usage as well.\n\nFor example, the log/main endpoint has extended usage:\n```python\ncomplete_log = qbt_client.log.main()\nnormal_log = qbt_client.log.main.normal()\nwarning_log = qbt_client.log.main.warning()\ncritical_log = qbt_client.log.main.critical()\n```\nThe most extended namespace is Torrents.\n```python\n# Gathering torrents\ntorrent_list = qbt_client.torrents.info()\ntorrent_list_active = qbt_client.torrents.info.active()\ntorrent_list_active_partial = qbt_client.torrents.active(limit=100, offset=200)\ntorrent_list_downloading = qbt_client.torrents.info.downloading()\n\n# Torrent looping\nfor torrent in torrent_list:\n  print(torrent.name)\n\n# Actions for multiple torrents\nqbt_client.torrents.pause(hashes=['...', '...'])\nqbt_client.torrents.recheck(hashes=['...', '...'])\n# or just do all torrent \nqbt_client.torrents.pause.all()\nqbt_client.torrents.recheck.all()\nqbt_client.torrents.resume.all()\n```\n\nOnce you have a torrent, there's also a litany of interactions.\n```python\nhash = torrent.info.hash  # as well the rest of the properties from torrents/info endpoint\nproperties = torrent.properties\ntrackers = torrent.trackers\nfiles = torrent.files\n# Action methods\ntorrent.edit_tracker(original_url=\"...\", new_url=\"...\")\ntorrent.remove_trackers(urls='http://127.0.0.2/')\ntorrent.rename(new_torrent_name=\"...\")\ntorrent.resume()\ntorrent.pause()\ntorrent.recheck()\ntorrent.torrents_top_priority()\ntorrent.set_location(location='/home/user/torrents/')\ntorrent.set_category(category='video')\n```\n\nSearch extended usage.\n```python\nsearch_job = qbt_client.search.start(pattern='Ubuntu', categories='all', plugins='all')\nwhile search_job.status()[0].status != 'Stopped':\n  time.sleep(.1)\nprint(search_job.results())\nsearch_job.delete()\n```\n\nInteraction Layer Notes\n-----------------------\n* All endpoints are available with and without the endpoint's namespace attached.\n  * So, `qbt_client.torrents.torrents_resume()` and `qbt_client.torrents.resume()` are the same.\n  * As mentioned in direct API access `qbt_client.app.web_api_version` and `qbt_client.app.webapiVersion` are the same.\n* When invoking the API calls, you can use the parameters implemented in the python code or those specified in the API documentation.\n  * So, `torrents_rename(hash='...', new_torrent_name=\"...\")` and `torrents_rename(hash='...', name=\"...\")` are the same.\n\nInteraction Layer Details\n-------------------------\n* Application\n  * Properties\n    * version\n    * web_api_version\n    * build_info\n    * default_save_path\n    * preferences (supports assignment)\n  * Methods\n    * shutdown\n* Log\n  * Methods\n    * main\n      * Methods\n        * info\n        * normal\n        * warning\n        * critical\n    * peers\n* Sync\n  * Methods\n    * maindata\n      * Methods\n        * delta\n        * reset_rid\n    * torrent_peers\n* Transfer\n  * Properties\n    * info\n    * speed_limits_mode (supports assignment)\n    * download_limit (supports assignment)\n    * upload_limit (supports assignment)\n  * Methods\n    * set_download_limit\n    * set_upload_limit\n    * toggle_speed_limits_mode\n* Torrents\n  * Methods\n    * Note: each of these \"methods\" supports the all() method\n    * info\n      * Methods\n        * downloading\n        * completed\n        * paused\n        * active\n        * inactive\n        * resumed\n    * resume\n    * pause\n    * delete\n    * recheck\n    * reannounce\n    * increase_priority\n    * decrease_priority\n    * top_priority\n    * bottom_priority\n    * download_limit\n    * set_download_limit\n    * set_share_limits\n    * upload_limit\n    * set_upload_limit\n    * set_location\n    * set_category\n    * set_auto_management\n    * toggle_sequential_download\n    * toggle_first_last_piece_priority\n    * set_force_start\n    * set_super_seeding\n* Torrent\n  * Properties\n    * info\n    * properties\n    * trackers\n    * webseeds\n    * files\n    * piece_states\n    * piece_hashes\n    * download_limit (supports assignment)\n    * upload_limit (supports assignment)\n  * Methods\n    * add_trackers\n    * edit_tracker\n    * remove_trackers\n    * file_priority\n    * filePrio\n    * rename\n    * set_location\n    * set_category\n    * set_auto_management\n    * set_force_feeding\n    * set_super_seeding\n    * AND all the Torrents methods above\n* Torrent Categories\n  * Properties\n    * categories\n  * Methods\n    * create_category\n    * edit_category\n    * remove_categories\n* Torrent Tags\n  * Properties\n    * tags\n  * Methods\n    * add_tags\n    * remove_tags\n    * create_tags\n    * delete_tags\n* RSS\n  * Properties\n    * rules\n  * Methods\n    * add_folder\n    * add_feed\n    * remove_item\n    * refresh_item\n    * move_item\n    * items\n      * Methods\n        * without_data\n        * with_data\n    * set_rule\n    * rename_rule\n    * remove_rule\n* Search\n  * Properties\n    * plugins\n  * Methods\n    * start\n    * stop\n    * status\n    * results\n    * delete\n    * categories\n    * install_plugin\n    * uninstall_plugin\n    * enable_plugin\n    * update_plugins\n* Seach Job\n  * Methods\n    * stop\n    * results\n    * status\n    * delete\n\nExceptions\n----------\nTo see the exceptions an endpoint can raise, use `help(qbt_client.<namespace>_<method>)`.\n\nFor example:\n```\n>>> import qbittorrentapi\n>>> help(qbittorrentapi.Client.torrents_add)\n\nHelp on function torrents_add in module qbittorrentapi.torrents:\n\ntorrents_add(self, urls=None, torrent_files=None, save_path=None, cookie=None, category=None, is_skip_checking=None, is_paused=None, is_root_folder=None, rename=None, upload_limit=None, download_limit=None, use_auto_torrent_management=None, is_sequential_download=None, is_first_last_piece_priority=None, **kwargs)\n    Add one or more torrents by URLs and/or torrent files.\n\n    Exceptions:\n        UnsupportedMediaType415Error if file is not a valid torrent file\n        TorrentFileNotFoundError if a torrent file doesn't exist\n        TorrentFilePermissionError if read permission is denied to torrent file\n\n    :param urls: List of URLs (http://, https://, magnet: and bc://bt/)\n    :param torrent_files: list of torrent files\n    :param save_path: location to save the torrent data\n    :param cookie: cookie to retrieve torrents by URL\n    :param category: category to assign to torrent(s)\n    :param is_skip_checking: skip hash checking\n    :param is_paused: True to start torrent(s) paused\n    :param is_root_folder: True or False to create root folder\n    :param rename: new name for torrent(s)\n    :param upload_limit: upload limit in bytes/second\n    :param download_limit: download limit in bytes/second\n    :param use_auto_torrent_management: True or False to use automatic torrent management\n    :param is_sequential_download: True or False for sequential download\n    :param is_first_last_piece_priority: True or False for first and last piece download priority\n    :return: \"Ok.\" for success and \"\"Fails.\" for failure\n```\n\n\n```python\nclass APIError(Exception):\n    \"\"\"\n    Base error for all exceptions from this Client.\n    \"\"\"\n    pass\n\n\nclass FileError(IOError, APIError):\n    \"\"\"\n    Base class for all exceptions for file handling.\n    \"\"\"\n    pass\n\n\nclass TorrentFileError(FileError):\n    \"\"\"\n    Base class for all exceptions for torrent files.\n    \"\"\"\n    pass\n\n\nclass TorrentFileNotFoundError(TorrentFileError):\n    \"\"\"\n    Specified torrent file does not appear to exist.\n    \"\"\"\n    pass\n\n\nclass TorrentFilePermissionError(TorrentFileError):\n    \"\"\"\n    Permission was denied to read the specified torrent file.\n    \"\"\"\n    pass\n\n\nclass APIConnectionError(RequestException, APIError):\n    \"\"\"\n    Base class for all communications errors including HTTP errors.\n    \"\"\"\n    pass\n\n\nclass LoginFailed(APIConnectionError):\n    \"\"\"\n    This can technically be raised with any request since log in may be attempted for any request and could fail.\n    \"\"\"\n    pass\n\n\nclass HTTPError(APIConnectionError):\n    \"\"\"\n    Base error for all HTTP errors. All errors following a successful connection to qBittorrent are returned as HTTP statuses.\n    \"\"\"\n    pass\n\n\nclass HTTP4XXError(HTTPError):\n    \"\"\"\n    Base error for all HTTP 4XX statuses.\n    \"\"\"\n    pass\n\n\nclass HTTP5XXError(HTTPError):\n    \"\"\"\n    Base error for all HTTP 5XX statuses.\n    \"\"\"\n    pass\n\n\nclass HTTP400Error(HTTP4XXError):\n    pass\n\n\nclass HTTP401Error(HTTP4XXError):\n    pass\n\n\nclass HTTP403Error(HTTP4XXError):\n    pass\n\n\nclass HTTP404Error(HTTP4XXError):\n    pass\n\n\nclass HTTP409Error(HTTP4XXError):\n    pass\n\n\nclass HTTP415Error(HTTP4XXError):\n    pass\n\n\nclass HTTP500Error(HTTP5XXError):\n    pass\n\n\nclass MissingRequiredParameters400Error(HTTP400Error):\n    \"\"\"\n    Endpoint call is missing one or more required parameters.\n    \"\"\"\n    pass\n\n\nclass InvalidRequest400Error(HTTP400Error):\n    \"\"\"\n    One or more endpoint arguments are malformed.\n    \"\"\"\n    pass\n\n\nclass Unauthorized401Error(HTTP401Error):\n    \"\"\"\n    Primarily reserved for XSS and host header issues.\n    \"\"\"\n    pass\n\n\nclass Forbidden403Error(HTTP403Error):\n    \"\"\"\n    Not logged in, IP has been banned, or calling an API method that isn't public.\n    \"\"\"\n    pass\n\n\nclass NotFound404Error(HTTP404Error):\n    \"\"\"\n    This should mean qBittorrent couldn't find a torrent for the torrent hash.\n    It is also possible this means the endpoint doesn't exist in qBittorrent...but that also means this Client has a bug.\n    \"\"\"\n    pass\n\n\nclass Conflict409Error(HTTP409Error):\n    \"\"\"\n    Returned if arguments don't make sense specific to the endpoint.\n    \"\"\"\n    pass\n\n\nclass UnsupportedMediaType415Error(HTTP415Error):\n    \"\"\"\n    torrents/add endpoint will return this for invalid URL(s) or files.\n    \"\"\"\n    pass\n\n\nclass InternalServerError500Error(HTTP500Error):\n    \"\"\"\n    Returned if qBittorent craps on itself while processing the request...\n    \"\"\"\n    pass\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rmartin16/qbittorrent-api", "keywords": "qbittorrent api", "license": "GPL-3", "maintainer": "", "maintainer_email": "", "name": "qbittorrent-api", "package_url": "https://pypi.org/project/qbittorrent-api/", "platform": "", "project_url": "https://pypi.org/project/qbittorrent-api/", "project_urls": {"Homepage": "https://github.com/rmartin16/qbittorrent-api"}, "release_url": "https://pypi.org/project/qbittorrent-api/2020.4.2/", "requires_dist": ["attrdict (>=2.0.0)", "requests (>=2.16.0)", "urllib3 (>=1.24.2)", "six"], "requires_python": "", "summary": "Python client for qBittorrent v4.1+ Web API", "version": "2020.4.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>qBittorrent Web API Client</h1>\n<p>Python client implementation for qBittorrent Web API. Supports qBittorrent v4.1.0+ (i.e. Web API v2.0+).</p>\n<ul>\n<li><a href=\"#features\" rel=\"nofollow\">Features</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#getting-started\" rel=\"nofollow\">Getting Started</a></li>\n<li><a href=\"#behavior--configuration\" rel=\"nofollow\">Behavior &amp; Configuration</a></li>\n<li><a href=\"#performance\" rel=\"nofollow\">Performance</a></li>\n<li><a href=\"#api-documentation\" rel=\"nofollow\">API Documentation</a></li>\n<li><a href=\"#direct-api-endpoint-access\" rel=\"nofollow\">Direct API Endpoint Access</a></li>\n<li><a href=\"#interaction-layer-usage\" rel=\"nofollow\">Interaction Layer Usage</a></li>\n<li><a href=\"#interaction-layer-notes\" rel=\"nofollow\">Interaction Layer Notes</a></li>\n<li><a href=\"#interaction-layer-details\" rel=\"nofollow\">Interaction Layer Details</a></li>\n<li><a href=\"#exceptions\" rel=\"nofollow\">Exceptions</a></li>\n</ul>\n<p>The full qBittorrent Web API specification is documented on their <a href=\"https://github.com/qbittorrent/qBittorrent/wiki/Web-API-Documentation\" rel=\"nofollow\">wiki</a>.</p>\n<h2>Features</h2>\n<ul>\n<li>The entire qBittorent Web API is implemented.</li>\n<li>qBittorrent version checking for an endpoint's existence/features is automatically handled.</li>\n<li>All Python versions are supported.</li>\n<li>If the authentication cookie expires, a new one is automatically requested in line with any API call.</li>\n</ul>\n<h2>Installation</h2>\n<ul>\n<li>Install via pip from <a href=\"https://pypi.org/project/qbittorrent-api/\" rel=\"nofollow\">PyPI</a>:\n<ul>\n<li><code>pip install qbittorrent-api</code></li>\n</ul>\n</li>\n<li>Install specific release:\n<ul>\n<li><code>pip install git+https://github.com/rmartin16/qbittorrent-api.git@v0.3.2#egg=qbittorrent-api</code></li>\n</ul>\n</li>\n<li>Install direct from master:\n<ul>\n<li><code>pip install git+https://github.com/rmartin16/qbittorrent-api.git#egg=qbittorrent-api</code></li>\n</ul>\n</li>\n<li>Ensure urllib3, requests, and attrdict are installed. (These are installed automatically using the methods above.)</li>\n<li>Enable WebUI in qBittorrent: Tools -&gt; Preferences -&gt; Web UI</li>\n<li>If the Web API will be exposed to the Internet (i.e. made available outside your network), please <a href=\"https://github.com/qbittorrent/qBittorrent/wiki/Linux-WebUI-HTTPS-with-Let's-Encrypt-certificates-and-NGINX-SSL-reverse-proxy\" rel=\"nofollow\">do it properly</a>.</li>\n</ul>\n<h2>Getting Started</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">qbittorrentapi</span>\n\n<span class=\"c1\"># instantiate a Client using the appropriate WebUI configuration</span>\n<span class=\"n\">qbt_client</span> <span class=\"o\">=</span> <span class=\"n\">qbittorrentapi</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'localhost:8080'</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'admin'</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'adminadmin'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># the Client will automatically acquire/maintain a logged in state in line with any request.</span>\n<span class=\"c1\"># therefore, this is not necessary; however, you many want to test the provided login credentials.</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">auth_log_in</span><span class=\"p\">()</span>\n<span class=\"k\">except</span> <span class=\"n\">qbittorrentapi</span><span class=\"o\">.</span><span class=\"n\">LoginFailed</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># display qBittorrent info</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'qBittorrent: </span><span class=\"si\">{</span><span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">version</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'qBittorrent Web API: </span><span class=\"si\">{</span><span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">web_api_version</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span><span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">build_info</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'</span><span class=\"si\">{</span><span class=\"n\">k</span><span class=\"si\">}</span><span class=\"s1\">: </span><span class=\"si\">{</span><span class=\"n\">v</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># retrieve and show all torrents</span>\n<span class=\"k\">for</span> <span class=\"n\">torrent</span> <span class=\"ow\">in</span> <span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">torrents_info</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'</span><span class=\"si\">{</span><span class=\"n\">torrent</span><span class=\"o\">.</span><span class=\"n\">hash</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"p\">:]</span><span class=\"si\">}</span><span class=\"s1\">: </span><span class=\"si\">{</span><span class=\"n\">torrent</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s1\"> (</span><span class=\"si\">{</span><span class=\"n\">torrent</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"si\">}</span><span class=\"s1\">)'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># pause all torrents</span>\n<span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">torrents</span><span class=\"o\">.</span><span class=\"n\">pause</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n</pre>\n<h2>Behavior &amp; Configuration</h2>\n<ul>\n<li><strong>WARNING</strong>: Using an untrusted (e.g. self-signed) certificate for HTTPS WebUI\n<ul>\n<li>Instantiate Client with <code>VERIFY_WEBUI_CERTIFICATE=False</code> or set environment variable <code>PYTHON_QBITTORRENTAPI_DO_NOT_VERIFY_WEBUI_CERTIFICATE</code> to a non-null value.</li>\n<li>Failure to do this for will cause connections to qBittorrent to fail.</li>\n<li>As a word of caution, doing this actually does turn off certificate verification. Therefore, for instance, potential man-in-the-middle attacks will not be detected and reported (since the error is suppressed). However, the connection will remain encrypted.</li>\n</ul>\n</li>\n<li>Host, Username and password Defaults\n<ul>\n<li>These can be provided when instantiating Client or calling <code>qbt_client.auth_log_in(username='...', password='...')</code>.</li>\n<li>Alternatively, set environment variables <code>PYTHON_QBITTORRENTAPI_HOST</code>, <code>PYTHON_QBITTORRENTAPI_USERNAME</code> and <code>PYTHON_QBITTORRENTAPI_PASSWORD</code>.</li>\n</ul>\n</li>\n<li>API Endpoints Not Yet Implemented in the qBittorrent Host\n<ul>\n<li>By default, if a call is made to endpoint that doesn't yet exist on the host (e.g. the Search endpoints were introduced in Web API v2.1.1), there's a debug logger output and None is returned.</li>\n<li>To raise UnimplementedError instead, instantiate Client with <code>RAISE_UNIMPLEMENTEDERROR_FOR_UNIMPLEMENTED_API_ENDPOINTS=True</code>.</li>\n</ul>\n</li>\n<li>Disable Logging Debug Output\n<ul>\n<li>Instantiate Client with <code>DISABLE_LOGGING_DEBUG_OUTPUT=True</code> or manually disable logging for the relevant packages:\n<ul>\n<li><code>logging.getLogger('qbittorrentapi').setLevel(logging.INFO)</code></li>\n<li><code>logging.getLogger('requests').setLevel(logging.INFO)</code></li>\n<li><code>logging.getLogger('urllib3').setLevel(logging.INFO)</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2>Performance</h2>\n<p>By default, complex objects are returned from some endpoints. These objects allow for accessing the response's items as attributes and include methods for contextually relevant actions (such as <code>start()</code> and <code>stop()</code> for a torrent, for example).</p>\n<p>This comes at the cost of performance, though. Generally, this cost isn't large; however, some endpoints, such as <code>torrents_files()</code>, may need to convert a large payload and the cost can be significant.</p>\n<p>This client can be configured to always return only the simple JSON if desired. Simply set <code>SIMPLE_RESPONSES=True</code> when instantiating the client.</p>\n<pre><span class=\"n\">qbt_client</span> <span class=\"o\">=</span> <span class=\"n\">qbittorrentapi</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'localhost:8080'</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'admin'</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'adminadmin'</span><span class=\"p\">,</span> <span class=\"n\">SIMPLE_RESPONSES</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Alternatively, <code>SIMPLE_RESPONSES</code> can be set to True to return the simple JSON only for an individual method call.</p>\n<pre><span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">torrents</span><span class=\"o\">.</span><span class=\"n\">files</span><span class=\"p\">(</span><span class=\"nb\">hash</span><span class=\"o\">=</span><span class=\"s1\">'...'</span><span class=\"p\">,</span> <span class=\"n\">SIMPLE_RESPONSES</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h2>API Documentation</h2>\n<p>The Client's methods all document their own description, expected arguments, possible exceptions, and return value.</p>\n<p>For best results, use the \"most primitive\" form of the API call. So, <code>qbt_client.torrents_pause</code> instead of <code>qbt_client.torrents.pause</code>.</p>\n<pre><span class=\"n\">help</span><span class=\"p\">(</span><span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">torrents_add</span><span class=\"p\">)</span>\n<span class=\"n\">help</span><span class=\"p\">(</span><span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">torrents_add_trackers</span><span class=\"p\">)</span>\n</pre>\n<h2>Direct API Endpoint Access</h2>\n<p>The API is separated in to eight namespaces for the API endpoints:</p>\n<ul>\n<li>Authentication (auth)</li>\n<li>Application (app)</li>\n<li>Log (log)</li>\n<li>Sync (sync)</li>\n<li>Transfer (transfer)</li>\n<li>Torrent Management (torrents)</li>\n<li>RSS (rss)</li>\n<li>Search (search)</li>\n</ul>\n<p>To use this package to directly access those endpoints:</p>\n<pre><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">qbt_client</span><span class=\"o\">.&lt;</span><span class=\"n\">name</span><span class=\"o\">&gt;</span><span class=\"n\">_</span><span class=\"o\">&lt;</span><span class=\"n\">api</span> <span class=\"n\">method</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">arguments</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n</pre>\n<p>Replace <code>&lt;name&gt;</code> with one of the eight namespaces (from within the parentheses) above and <code>&lt;api method&gt;</code> with a relevant endpoint.</p>\n<p>For instance:</p>\n<pre><span class=\"n\">torrent_list</span> <span class=\"o\">=</span> <span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">torrents_info</span><span class=\"p\">(</span><span class=\"n\">status_filter</span><span class=\"o\">=</span><span class=\"s1\">'active'</span><span class=\"p\">)</span>\n</pre>\n<p>The responses from the API calls are strings (e.g. app/version) or an extended Dictionary or List object (e.g. torrents/trackers).</p>\n<p>Each namespace endpoint's method name is <a href=\"https://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\">PEP8</a>-ified. However, they are all aliased to the endpoint's name as implemented in qBittorrent's Web API. So, for example, <code>qbt_client.app_web_api_version()</code> and <code>qbt_client.app_webapiVersion()</code> are equivalent. This is also true for the API methods' arguments; so, <code>qbt_client.torrents_add(urls='...', save_path='/torrents')</code> and <code>qbt_client.torrents_add(urls='...', savepath='/torrents')</code> are equivalent. This is intended to allow use of this Client only depending on qBittorrent's own <a href=\"https://github.com/qbittorrent/qBittorrent/wiki/Web-API-Documentation\" rel=\"nofollow\">Web API documentation</a>.</p>\n<h2>Interaction Layer Usage</h2>\n<p>The package also contains more robust interfaces to the API endpoints. For each of the eight namespaces, there is an interface to the relevant API endpoints. Of note, I created additional namespaces for torrent categories and torrent tags.</p>\n<p>An example for the Application namespace:</p>\n<pre><span class=\"n\">ver</span> <span class=\"o\">=</span> <span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">version</span>\n<span class=\"n\">api_ver</span> <span class=\"o\">=</span> <span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">api_web_version</span>\n<span class=\"n\">prefs</span> <span class=\"o\">=</span> <span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">preferences</span>\n<span class=\"n\">is_dht_enabled</span> <span class=\"o\">=</span> <span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">application</span><span class=\"o\">.</span><span class=\"n\">preferences</span><span class=\"o\">.</span><span class=\"n\">dht</span>\n<span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">application</span><span class=\"o\">.</span><span class=\"n\">preferences</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">dht</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"ow\">not</span> <span class=\"n\">is_dht_enabled</span><span class=\"p\">))</span>\n</pre>\n<p>For each namespace, all endpoints with a return value and no parameters are implemented as a property. All other endpoints are implemented as methods; some of the methods have extended usage as well.</p>\n<p>For example, the log/main endpoint has extended usage:</p>\n<pre><span class=\"n\">complete_log</span> <span class=\"o\">=</span> <span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">()</span>\n<span class=\"n\">normal_log</span> <span class=\"o\">=</span> <span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">()</span>\n<span class=\"n\">warning_log</span> <span class=\"o\">=</span> <span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">()</span>\n<span class=\"n\">critical_log</span> <span class=\"o\">=</span> <span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">critical</span><span class=\"p\">()</span>\n</pre>\n<p>The most extended namespace is Torrents.</p>\n<pre><span class=\"c1\"># Gathering torrents</span>\n<span class=\"n\">torrent_list</span> <span class=\"o\">=</span> <span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">torrents</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">()</span>\n<span class=\"n\">torrent_list_active</span> <span class=\"o\">=</span> <span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">torrents</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">active</span><span class=\"p\">()</span>\n<span class=\"n\">torrent_list_active_partial</span> <span class=\"o\">=</span> <span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">torrents</span><span class=\"o\">.</span><span class=\"n\">active</span><span class=\"p\">(</span><span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n<span class=\"n\">torrent_list_downloading</span> <span class=\"o\">=</span> <span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">torrents</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">downloading</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Torrent looping</span>\n<span class=\"k\">for</span> <span class=\"n\">torrent</span> <span class=\"ow\">in</span> <span class=\"n\">torrent_list</span><span class=\"p\">:</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">torrent</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Actions for multiple torrents</span>\n<span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">torrents</span><span class=\"o\">.</span><span class=\"n\">pause</span><span class=\"p\">(</span><span class=\"n\">hashes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'...'</span><span class=\"p\">,</span> <span class=\"s1\">'...'</span><span class=\"p\">])</span>\n<span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">torrents</span><span class=\"o\">.</span><span class=\"n\">recheck</span><span class=\"p\">(</span><span class=\"n\">hashes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'...'</span><span class=\"p\">,</span> <span class=\"s1\">'...'</span><span class=\"p\">])</span>\n<span class=\"c1\"># or just do all torrent </span>\n<span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">torrents</span><span class=\"o\">.</span><span class=\"n\">pause</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n<span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">torrents</span><span class=\"o\">.</span><span class=\"n\">recheck</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n<span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">torrents</span><span class=\"o\">.</span><span class=\"n\">resume</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n</pre>\n<p>Once you have a torrent, there's also a litany of interactions.</p>\n<pre><span class=\"nb\">hash</span> <span class=\"o\">=</span> <span class=\"n\">torrent</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">hash</span>  <span class=\"c1\"># as well the rest of the properties from torrents/info endpoint</span>\n<span class=\"n\">properties</span> <span class=\"o\">=</span> <span class=\"n\">torrent</span><span class=\"o\">.</span><span class=\"n\">properties</span>\n<span class=\"n\">trackers</span> <span class=\"o\">=</span> <span class=\"n\">torrent</span><span class=\"o\">.</span><span class=\"n\">trackers</span>\n<span class=\"n\">files</span> <span class=\"o\">=</span> <span class=\"n\">torrent</span><span class=\"o\">.</span><span class=\"n\">files</span>\n<span class=\"c1\"># Action methods</span>\n<span class=\"n\">torrent</span><span class=\"o\">.</span><span class=\"n\">edit_tracker</span><span class=\"p\">(</span><span class=\"n\">original_url</span><span class=\"o\">=</span><span class=\"s2\">\"...\"</span><span class=\"p\">,</span> <span class=\"n\">new_url</span><span class=\"o\">=</span><span class=\"s2\">\"...\"</span><span class=\"p\">)</span>\n<span class=\"n\">torrent</span><span class=\"o\">.</span><span class=\"n\">remove_trackers</span><span class=\"p\">(</span><span class=\"n\">urls</span><span class=\"o\">=</span><span class=\"s1\">'http://127.0.0.2/'</span><span class=\"p\">)</span>\n<span class=\"n\">torrent</span><span class=\"o\">.</span><span class=\"n\">rename</span><span class=\"p\">(</span><span class=\"n\">new_torrent_name</span><span class=\"o\">=</span><span class=\"s2\">\"...\"</span><span class=\"p\">)</span>\n<span class=\"n\">torrent</span><span class=\"o\">.</span><span class=\"n\">resume</span><span class=\"p\">()</span>\n<span class=\"n\">torrent</span><span class=\"o\">.</span><span class=\"n\">pause</span><span class=\"p\">()</span>\n<span class=\"n\">torrent</span><span class=\"o\">.</span><span class=\"n\">recheck</span><span class=\"p\">()</span>\n<span class=\"n\">torrent</span><span class=\"o\">.</span><span class=\"n\">torrents_top_priority</span><span class=\"p\">()</span>\n<span class=\"n\">torrent</span><span class=\"o\">.</span><span class=\"n\">set_location</span><span class=\"p\">(</span><span class=\"n\">location</span><span class=\"o\">=</span><span class=\"s1\">'/home/user/torrents/'</span><span class=\"p\">)</span>\n<span class=\"n\">torrent</span><span class=\"o\">.</span><span class=\"n\">set_category</span><span class=\"p\">(</span><span class=\"n\">category</span><span class=\"o\">=</span><span class=\"s1\">'video'</span><span class=\"p\">)</span>\n</pre>\n<p>Search extended usage.</p>\n<pre><span class=\"n\">search_job</span> <span class=\"o\">=</span> <span class=\"n\">qbt_client</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"o\">=</span><span class=\"s1\">'Ubuntu'</span><span class=\"p\">,</span> <span class=\"n\">categories</span><span class=\"o\">=</span><span class=\"s1\">'all'</span><span class=\"p\">,</span> <span class=\"n\">plugins</span><span class=\"o\">=</span><span class=\"s1\">'all'</span><span class=\"p\">)</span>\n<span class=\"k\">while</span> <span class=\"n\">search_job</span><span class=\"o\">.</span><span class=\"n\">status</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">!=</span> <span class=\"s1\">'Stopped'</span><span class=\"p\">:</span>\n  <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"o\">.</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">search_job</span><span class=\"o\">.</span><span class=\"n\">results</span><span class=\"p\">())</span>\n<span class=\"n\">search_job</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n</pre>\n<h2>Interaction Layer Notes</h2>\n<ul>\n<li>All endpoints are available with and without the endpoint's namespace attached.\n<ul>\n<li>So, <code>qbt_client.torrents.torrents_resume()</code> and <code>qbt_client.torrents.resume()</code> are the same.</li>\n<li>As mentioned in direct API access <code>qbt_client.app.web_api_version</code> and <code>qbt_client.app.webapiVersion</code> are the same.</li>\n</ul>\n</li>\n<li>When invoking the API calls, you can use the parameters implemented in the python code or those specified in the API documentation.\n<ul>\n<li>So, <code>torrents_rename(hash='...', new_torrent_name=\"...\")</code> and <code>torrents_rename(hash='...', name=\"...\")</code> are the same.</li>\n</ul>\n</li>\n</ul>\n<h2>Interaction Layer Details</h2>\n<ul>\n<li>Application\n<ul>\n<li>Properties\n<ul>\n<li>version</li>\n<li>web_api_version</li>\n<li>build_info</li>\n<li>default_save_path</li>\n<li>preferences (supports assignment)</li>\n</ul>\n</li>\n<li>Methods\n<ul>\n<li>shutdown</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Log\n<ul>\n<li>Methods\n<ul>\n<li>main\n<ul>\n<li>Methods\n<ul>\n<li>info</li>\n<li>normal</li>\n<li>warning</li>\n<li>critical</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>peers</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Sync\n<ul>\n<li>Methods\n<ul>\n<li>maindata\n<ul>\n<li>Methods\n<ul>\n<li>delta</li>\n<li>reset_rid</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>torrent_peers</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Transfer\n<ul>\n<li>Properties\n<ul>\n<li>info</li>\n<li>speed_limits_mode (supports assignment)</li>\n<li>download_limit (supports assignment)</li>\n<li>upload_limit (supports assignment)</li>\n</ul>\n</li>\n<li>Methods\n<ul>\n<li>set_download_limit</li>\n<li>set_upload_limit</li>\n<li>toggle_speed_limits_mode</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Torrents\n<ul>\n<li>Methods\n<ul>\n<li>Note: each of these \"methods\" supports the all() method</li>\n<li>info\n<ul>\n<li>Methods\n<ul>\n<li>downloading</li>\n<li>completed</li>\n<li>paused</li>\n<li>active</li>\n<li>inactive</li>\n<li>resumed</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>resume</li>\n<li>pause</li>\n<li>delete</li>\n<li>recheck</li>\n<li>reannounce</li>\n<li>increase_priority</li>\n<li>decrease_priority</li>\n<li>top_priority</li>\n<li>bottom_priority</li>\n<li>download_limit</li>\n<li>set_download_limit</li>\n<li>set_share_limits</li>\n<li>upload_limit</li>\n<li>set_upload_limit</li>\n<li>set_location</li>\n<li>set_category</li>\n<li>set_auto_management</li>\n<li>toggle_sequential_download</li>\n<li>toggle_first_last_piece_priority</li>\n<li>set_force_start</li>\n<li>set_super_seeding</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Torrent\n<ul>\n<li>Properties\n<ul>\n<li>info</li>\n<li>properties</li>\n<li>trackers</li>\n<li>webseeds</li>\n<li>files</li>\n<li>piece_states</li>\n<li>piece_hashes</li>\n<li>download_limit (supports assignment)</li>\n<li>upload_limit (supports assignment)</li>\n</ul>\n</li>\n<li>Methods\n<ul>\n<li>add_trackers</li>\n<li>edit_tracker</li>\n<li>remove_trackers</li>\n<li>file_priority</li>\n<li>filePrio</li>\n<li>rename</li>\n<li>set_location</li>\n<li>set_category</li>\n<li>set_auto_management</li>\n<li>set_force_feeding</li>\n<li>set_super_seeding</li>\n<li>AND all the Torrents methods above</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Torrent Categories\n<ul>\n<li>Properties\n<ul>\n<li>categories</li>\n</ul>\n</li>\n<li>Methods\n<ul>\n<li>create_category</li>\n<li>edit_category</li>\n<li>remove_categories</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Torrent Tags\n<ul>\n<li>Properties\n<ul>\n<li>tags</li>\n</ul>\n</li>\n<li>Methods\n<ul>\n<li>add_tags</li>\n<li>remove_tags</li>\n<li>create_tags</li>\n<li>delete_tags</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>RSS\n<ul>\n<li>Properties\n<ul>\n<li>rules</li>\n</ul>\n</li>\n<li>Methods\n<ul>\n<li>add_folder</li>\n<li>add_feed</li>\n<li>remove_item</li>\n<li>refresh_item</li>\n<li>move_item</li>\n<li>items\n<ul>\n<li>Methods\n<ul>\n<li>without_data</li>\n<li>with_data</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>set_rule</li>\n<li>rename_rule</li>\n<li>remove_rule</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Search\n<ul>\n<li>Properties\n<ul>\n<li>plugins</li>\n</ul>\n</li>\n<li>Methods\n<ul>\n<li>start</li>\n<li>stop</li>\n<li>status</li>\n<li>results</li>\n<li>delete</li>\n<li>categories</li>\n<li>install_plugin</li>\n<li>uninstall_plugin</li>\n<li>enable_plugin</li>\n<li>update_plugins</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Seach Job\n<ul>\n<li>Methods\n<ul>\n<li>stop</li>\n<li>results</li>\n<li>status</li>\n<li>delete</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2>Exceptions</h2>\n<p>To see the exceptions an endpoint can raise, use <code>help(qbt_client.&lt;namespace&gt;_&lt;method&gt;)</code>.</p>\n<p>For example:</p>\n<pre><code>&gt;&gt;&gt; import qbittorrentapi\n&gt;&gt;&gt; help(qbittorrentapi.Client.torrents_add)\n\nHelp on function torrents_add in module qbittorrentapi.torrents:\n\ntorrents_add(self, urls=None, torrent_files=None, save_path=None, cookie=None, category=None, is_skip_checking=None, is_paused=None, is_root_folder=None, rename=None, upload_limit=None, download_limit=None, use_auto_torrent_management=None, is_sequential_download=None, is_first_last_piece_priority=None, **kwargs)\n    Add one or more torrents by URLs and/or torrent files.\n\n    Exceptions:\n        UnsupportedMediaType415Error if file is not a valid torrent file\n        TorrentFileNotFoundError if a torrent file doesn't exist\n        TorrentFilePermissionError if read permission is denied to torrent file\n\n    :param urls: List of URLs (http://, https://, magnet: and bc://bt/)\n    :param torrent_files: list of torrent files\n    :param save_path: location to save the torrent data\n    :param cookie: cookie to retrieve torrents by URL\n    :param category: category to assign to torrent(s)\n    :param is_skip_checking: skip hash checking\n    :param is_paused: True to start torrent(s) paused\n    :param is_root_folder: True or False to create root folder\n    :param rename: new name for torrent(s)\n    :param upload_limit: upload limit in bytes/second\n    :param download_limit: download limit in bytes/second\n    :param use_auto_torrent_management: True or False to use automatic torrent management\n    :param is_sequential_download: True or False for sequential download\n    :param is_first_last_piece_priority: True or False for first and last piece download priority\n    :return: \"Ok.\" for success and \"\"Fails.\" for failure\n</code></pre>\n<pre><span class=\"k\">class</span> <span class=\"nc\">APIError</span><span class=\"p\">(</span><span class=\"ne\">Exception</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Base error for all exceptions from this Client.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">FileError</span><span class=\"p\">(</span><span class=\"ne\">IOError</span><span class=\"p\">,</span> <span class=\"n\">APIError</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Base class for all exceptions for file handling.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">TorrentFileError</span><span class=\"p\">(</span><span class=\"n\">FileError</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Base class for all exceptions for torrent files.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">TorrentFileNotFoundError</span><span class=\"p\">(</span><span class=\"n\">TorrentFileError</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Specified torrent file does not appear to exist.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">TorrentFilePermissionError</span><span class=\"p\">(</span><span class=\"n\">TorrentFileError</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Permission was denied to read the specified torrent file.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">APIConnectionError</span><span class=\"p\">(</span><span class=\"n\">RequestException</span><span class=\"p\">,</span> <span class=\"n\">APIError</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Base class for all communications errors including HTTP errors.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">LoginFailed</span><span class=\"p\">(</span><span class=\"n\">APIConnectionError</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    This can technically be raised with any request since log in may be attempted for any request and could fail.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">HTTPError</span><span class=\"p\">(</span><span class=\"n\">APIConnectionError</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Base error for all HTTP errors. All errors following a successful connection to qBittorrent are returned as HTTP statuses.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">HTTP4XXError</span><span class=\"p\">(</span><span class=\"n\">HTTPError</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Base error for all HTTP 4XX statuses.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">HTTP5XXError</span><span class=\"p\">(</span><span class=\"n\">HTTPError</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Base error for all HTTP 5XX statuses.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">HTTP400Error</span><span class=\"p\">(</span><span class=\"n\">HTTP4XXError</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">HTTP401Error</span><span class=\"p\">(</span><span class=\"n\">HTTP4XXError</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">HTTP403Error</span><span class=\"p\">(</span><span class=\"n\">HTTP4XXError</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">HTTP404Error</span><span class=\"p\">(</span><span class=\"n\">HTTP4XXError</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">HTTP409Error</span><span class=\"p\">(</span><span class=\"n\">HTTP4XXError</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">HTTP415Error</span><span class=\"p\">(</span><span class=\"n\">HTTP4XXError</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">HTTP500Error</span><span class=\"p\">(</span><span class=\"n\">HTTP5XXError</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MissingRequiredParameters400Error</span><span class=\"p\">(</span><span class=\"n\">HTTP400Error</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Endpoint call is missing one or more required parameters.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">InvalidRequest400Error</span><span class=\"p\">(</span><span class=\"n\">HTTP400Error</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    One or more endpoint arguments are malformed.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Unauthorized401Error</span><span class=\"p\">(</span><span class=\"n\">HTTP401Error</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Primarily reserved for XSS and host header issues.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Forbidden403Error</span><span class=\"p\">(</span><span class=\"n\">HTTP403Error</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Not logged in, IP has been banned, or calling an API method that isn't public.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">NotFound404Error</span><span class=\"p\">(</span><span class=\"n\">HTTP404Error</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    This should mean qBittorrent couldn't find a torrent for the torrent hash.</span>\n<span class=\"sd\">    It is also possible this means the endpoint doesn't exist in qBittorrent...but that also means this Client has a bug.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Conflict409Error</span><span class=\"p\">(</span><span class=\"n\">HTTP409Error</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Returned if arguments don't make sense specific to the endpoint.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">UnsupportedMediaType415Error</span><span class=\"p\">(</span><span class=\"n\">HTTP415Error</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    torrents/add endpoint will return this for invalid URL(s) or files.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">InternalServerError500Error</span><span class=\"p\">(</span><span class=\"n\">HTTP500Error</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Returned if qBittorent craps on itself while processing the request...</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">pass</span>\n</pre>\n\n          </div>"}, "last_serial": 7101704, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "03e43e1554f1ef1224631376dcca1860", "sha256": "9feb01da5a0259d225b0b5f46f656f07b2e0b39d66850eb5859e3752d06de6cb"}, "downloads": -1, "filename": "qbittorrent_api-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "03e43e1554f1ef1224631376dcca1860", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27150, "upload_time": "2019-05-07T20:14:49", "upload_time_iso_8601": "2019-05-07T20:14:49.935145Z", "url": "https://files.pythonhosted.org/packages/79/21/c1e7698219c64ec3f1baffbadc333017cd72657053ce28734cc42da72204/qbittorrent_api-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5eb6233157405e2477f501fe13ad122c", "sha256": "e2a1f9199a0fceecb22ae2296f9b1ac8d67964712db38dd91583e795e699742f"}, "downloads": -1, "filename": "qbittorrent-api-0.1.tar.gz", "has_sig": false, "md5_digest": "5eb6233157405e2477f501fe13ad122c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13973, "upload_time": "2019-05-07T20:14:52", "upload_time_iso_8601": "2019-05-07T20:14:52.272473Z", "url": "https://files.pythonhosted.org/packages/15/97/5ab1a5a879daabd236963971728848d500e166a9026f868d6fd844f47ccd/qbittorrent-api-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "88975bf1b87657beffdd52a4fa34106a", "sha256": "e8257569f79f0ba9640b4eb83a0ac24716777d6c39972911ab400deb518527aa"}, "downloads": -1, "filename": "qbittorrent-api-0.1.1.tar.gz", "has_sig": false, "md5_digest": "88975bf1b87657beffdd52a4fa34106a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14036, "upload_time": "2019-05-07T21:11:47", "upload_time_iso_8601": "2019-05-07T21:11:47.107700Z", "url": "https://files.pythonhosted.org/packages/8d/31/32a3deffac31f71f3a2102b0ec2f05153d5d7eca9d930993361b20ebdc00/qbittorrent-api-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "e80e96844dce3209fe87325b54d0fe1a", "sha256": "7b6a8f09336de61f3e96f9638e1838c24b0113789f80c559f42e3b4c5b58c7f9"}, "downloads": -1, "filename": "qbittorrent_api-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e80e96844dce3209fe87325b54d0fe1a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26906, "upload_time": "2019-05-07T21:51:25", "upload_time_iso_8601": "2019-05-07T21:51:25.458658Z", "url": "https://files.pythonhosted.org/packages/1a/14/4e9f8328854833b0313baa0de6426a0f8aad5077c753df343e1ae1e97546/qbittorrent_api-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cefc1db423e2d3611f9b78e712b8ffed", "sha256": "5c3126caa0ce15cddaa5e4e03bf2f1abaa9afc7094304bf9b207e38d922312fe"}, "downloads": -1, "filename": "qbittorrent-api-0.1.2.tar.gz", "has_sig": false, "md5_digest": "cefc1db423e2d3611f9b78e712b8ffed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26076, "upload_time": "2019-05-07T21:51:26", "upload_time_iso_8601": "2019-05-07T21:51:26.959890Z", "url": "https://files.pythonhosted.org/packages/6e/aa/299f5b0d364aecb798c16afdb76e258d8d102d5f1a7e37a63ab7b4e23ca8/qbittorrent-api-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "29ce3354ff3ee5f2e758d2d27347f714", "sha256": "929cdcd5943b4cf396c30a057379cf8ba8817c8f0f58eba4e83cfe9f543db2b3"}, "downloads": -1, "filename": "qbittorrent_api-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "29ce3354ff3ee5f2e758d2d27347f714", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26910, "upload_time": "2019-05-07T21:56:59", "upload_time_iso_8601": "2019-05-07T21:56:59.197284Z", "url": "https://files.pythonhosted.org/packages/67/92/82a2841ccf32d8351ff17b53ca6a99f3dc704130d111aea4996f117a4c5c/qbittorrent_api-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99f02b84847e62421400c74a84b9df21", "sha256": "1af01ff0a4b7f88c8f5b9e955de6a129d16759f4311c1dc6725dc4c259161972"}, "downloads": -1, "filename": "qbittorrent-api-0.1.3.tar.gz", "has_sig": false, "md5_digest": "99f02b84847e62421400c74a84b9df21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26078, "upload_time": "2019-05-07T21:57:00", "upload_time_iso_8601": "2019-05-07T21:57:00.666388Z", "url": "https://files.pythonhosted.org/packages/87/19/a6cd4879b9b758f484606b9277e049052200409125d609e7e238c2c143f4/qbittorrent-api-0.1.3.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "a1b04c46532aed72a4fb36efcda9cf51", "sha256": "8d0c24519fc176f6cc52a48566f97fdb49eb0f55d9e435f51ca8c00191953e73"}, "downloads": -1, "filename": "qbittorrent_api-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a1b04c46532aed72a4fb36efcda9cf51", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38470, "upload_time": "2019-05-13T05:01:16", "upload_time_iso_8601": "2019-05-13T05:01:16.662015Z", "url": "https://files.pythonhosted.org/packages/28/5e/c6a2ddac4e7427dd707759776700dd0db8886bbd1f65aacde7cea72964fe/qbittorrent_api-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b75bce3628c911754ef7f0e2a0627198", "sha256": "b73cdef7a648e412ad864f7b0640b66ad3b6e26f85bc416244d92866bafb1dba"}, "downloads": -1, "filename": "qbittorrent-api-0.2.tar.gz", "has_sig": false, "md5_digest": "b75bce3628c911754ef7f0e2a0627198", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38468, "upload_time": "2019-05-13T05:01:18", "upload_time_iso_8601": "2019-05-13T05:01:18.462207Z", "url": "https://files.pythonhosted.org/packages/b1/85/50c9d31dad89269fe277fc6ee0ae57c7410e53e7165aa534ebf38d3f5f87/qbittorrent-api-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "22d9e4c60f1b9ef999511922f10c2591", "sha256": "858d1bf16ab198cc61307e50460617a1cb3ad012d21ee84cb9cd775eff0035bf"}, "downloads": -1, "filename": "qbittorrent_api-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "22d9e4c60f1b9ef999511922f10c2591", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 40448, "upload_time": "2019-05-14T20:01:59", "upload_time_iso_8601": "2019-05-14T20:01:59.506848Z", "url": "https://files.pythonhosted.org/packages/0a/03/5e9298bbdfa22c3681d8e3a714671fce8bdd5656cb7178008e5dfc0619d1/qbittorrent_api-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4dc3dd6feedb4f6e2810c1b4cf472c43", "sha256": "cdd1db50c301c12e1440fa1144e0c3caa5cff8c84e9205a0c339114821e18bca"}, "downloads": -1, "filename": "qbittorrent-api-0.2.1.tar.gz", "has_sig": false, "md5_digest": "4dc3dd6feedb4f6e2810c1b4cf472c43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40041, "upload_time": "2019-05-14T20:02:01", "upload_time_iso_8601": "2019-05-14T20:02:01.529929Z", "url": "https://files.pythonhosted.org/packages/de/59/68322f1425f592bdd6c5967d7a2d7bc9c3b13881588f390b2d8a1217dbb6/qbittorrent-api-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "d2f6a3552f088dad8d2f15eb9e3d1259", "sha256": "ef42f06254a2a31c4fecc9142628755c2e7740e1a0cfb4f805e248d373c8ffd8"}, "downloads": -1, "filename": "qbittorrent_api-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d2f6a3552f088dad8d2f15eb9e3d1259", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 40460, "upload_time": "2019-05-14T20:10:36", "upload_time_iso_8601": "2019-05-14T20:10:36.391224Z", "url": "https://files.pythonhosted.org/packages/5d/b6/27552e10190ad56a6df03497051bb7b8b4d9d9035086dab4505b0fbf1d35/qbittorrent_api-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d1208dff16d20c9a6c356634fdc5facb", "sha256": "2ce09096a1efdf8d68e47c084955380afcf5ee39c88c64c2a4dc876bef631abc"}, "downloads": -1, "filename": "qbittorrent-api-0.2.2.tar.gz", "has_sig": false, "md5_digest": "d1208dff16d20c9a6c356634fdc5facb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40040, "upload_time": "2019-05-14T20:10:38", "upload_time_iso_8601": "2019-05-14T20:10:38.379120Z", "url": "https://files.pythonhosted.org/packages/eb/e5/6daadbedc59c49902ec1d446892c820ee34520c6533741a108acfa7bb8fc/qbittorrent-api-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "68cae307a75545ed207582c72985aa40", "sha256": "4af0cd5dd47e479fde2f693101d6b2c814cce6ea3caa74fb7033572853f0d376"}, "downloads": -1, "filename": "qbittorrent_api-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "68cae307a75545ed207582c72985aa40", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 40462, "upload_time": "2019-05-25T02:32:13", "upload_time_iso_8601": "2019-05-25T02:32:13.519640Z", "url": "https://files.pythonhosted.org/packages/15/44/7d49b8de39e1c06fe0bbbe48b3b47c1de660aa8d2d2fb5dba38fa011e6f8/qbittorrent_api-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ada7cd379f3173171cc5b369d368add2", "sha256": "ca7023e8dcf93401576abfd339465740b9745b4ced9af9c872471195372ff036"}, "downloads": -1, "filename": "qbittorrent-api-0.2.3.tar.gz", "has_sig": false, "md5_digest": "ada7cd379f3173171cc5b369d368add2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40067, "upload_time": "2019-05-25T02:32:15", "upload_time_iso_8601": "2019-05-25T02:32:15.335798Z", "url": "https://files.pythonhosted.org/packages/5e/08/0c7d98b12705203095f4070bca5c0e78e3a7f7e70177ff4344c6da4b40c0/qbittorrent-api-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "dcf5b2d24ed7e869b7e6f1afa761fe36", "sha256": "f8ef8136eb773401e3a83076b588a0095538e11d60ae76b104aba7d18bf32723"}, "downloads": -1, "filename": "qbittorrent_api-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "dcf5b2d24ed7e869b7e6f1afa761fe36", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 40478, "upload_time": "2019-05-25T03:39:06", "upload_time_iso_8601": "2019-05-25T03:39:06.358976Z", "url": "https://files.pythonhosted.org/packages/ce/d3/3503c07d21111db259ee7052ee9151e5c23ca82e628c9d1ac30f57117752/qbittorrent_api-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dfeff29f0719bb9029581b334125958c", "sha256": "d968192ccfac48b9a20cf9d9d0468b82aa8cd92ef82a5266b3f8dddd4a6ff5d2"}, "downloads": -1, "filename": "qbittorrent-api-0.2.4.tar.gz", "has_sig": false, "md5_digest": "dfeff29f0719bb9029581b334125958c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40079, "upload_time": "2019-05-25T03:39:08", "upload_time_iso_8601": "2019-05-25T03:39:08.210354Z", "url": "https://files.pythonhosted.org/packages/26/0b/f72271dcc9aaf8e5c0147e2829b01257bc5b250bbd2a1d86ea7f8b53587b/qbittorrent-api-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "83acf1b7903628153206b24bb3ac6928", "sha256": "7b2be3c569a8388b20afe5fc3c4c2007a35910b036844dc84a175b4a90e9e99e"}, "downloads": -1, "filename": "qbittorrent_api-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "83acf1b7903628153206b24bb3ac6928", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 40481, "upload_time": "2019-05-26T03:22:59", "upload_time_iso_8601": "2019-05-26T03:22:59.085444Z", "url": "https://files.pythonhosted.org/packages/15/78/659394e1c01738e509363d344cbf0d36199e5d7c2d359179984f7570d0c1/qbittorrent_api-0.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08b0561643b28d9742524190f5117946", "sha256": "d6a31b71d4d8391c6f1e57c53bb93bac268cb3199ad211754d20e16ca90e7403"}, "downloads": -1, "filename": "qbittorrent-api-0.2.5.tar.gz", "has_sig": false, "md5_digest": "08b0561643b28d9742524190f5117946", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40075, "upload_time": "2019-05-26T03:23:01", "upload_time_iso_8601": "2019-05-26T03:23:01.045011Z", "url": "https://files.pythonhosted.org/packages/12/cb/72fdaa645114b234494e44aeceb78a19a364060f7b4b8564dc3734c45ffc/qbittorrent-api-0.2.5.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "6849a89a5ea316aab5191b1a8e3e5030", "sha256": "199542874b1b6978d59df545e9d5ee5d24bf9502f070f5f17e09467b4a6106c3"}, "downloads": -1, "filename": "qbittorrent_api-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6849a89a5ea316aab5191b1a8e3e5030", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 39362, "upload_time": "2019-06-02T02:39:41", "upload_time_iso_8601": "2019-06-02T02:39:41.902830Z", "url": "https://files.pythonhosted.org/packages/0c/44/dd50c16d53a0a5e51aeb89341befa7e2273c2aa2203ac70c3cbe342c57d7/qbittorrent_api-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff18431f3a06db14b06bcabe9397de66", "sha256": "78ee6468fa48ef35afcecb13744ccb8741ac091eccfce587eac6c131a2a24138"}, "downloads": -1, "filename": "qbittorrent-api-0.3.tar.gz", "has_sig": false, "md5_digest": "ff18431f3a06db14b06bcabe9397de66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39203, "upload_time": "2019-06-02T02:39:43", "upload_time_iso_8601": "2019-06-02T02:39:43.545292Z", "url": "https://files.pythonhosted.org/packages/71/5f/dc038cf64c69fc49da8ab7306ec7a8e1397f52fa57585ebe86b8073fd8d3/qbittorrent-api-0.3.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "71e09cd5a4bd9d25401bcdb1be68bb73", "sha256": "78efcfd5ae48809c542d07761b67aba608f10d0be3f0dd0c24186dabd4c85787"}, "downloads": -1, "filename": "qbittorrent_api-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "71e09cd5a4bd9d25401bcdb1be68bb73", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 45860, "upload_time": "2019-06-28T14:59:50", "upload_time_iso_8601": "2019-06-28T14:59:50.530901Z", "url": "https://files.pythonhosted.org/packages/2b/56/5b79dc08257f12db583eda6a079aea5c94eb80b851a0a3e5f2fb05eef5ed/qbittorrent_api-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77246999358d7af3a3413ff41d1e1e45", "sha256": "338be10f31ca6b5caa73a64c822f3ccc1c849a1d0ea3dd08ea6e3a1d1ff38870"}, "downloads": -1, "filename": "qbittorrent-api-0.3.2.tar.gz", "has_sig": false, "md5_digest": "77246999358d7af3a3413ff41d1e1e45", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39928, "upload_time": "2019-06-28T14:59:52", "upload_time_iso_8601": "2019-06-28T14:59:52.442410Z", "url": "https://files.pythonhosted.org/packages/b4/f9/ee90f81ff29dce2803ef1e2d65b6ce57c2d7cdb937b76a30d741ef34b74c/qbittorrent-api-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "50e5b260b99b5305b914b4cb903d0d6b", "sha256": "948f2b44d292bc8fecdf0f85dd28ebbd9f06f0aaa2f754fc5973446f89a18c4d"}, "downloads": -1, "filename": "qbittorrent_api-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "50e5b260b99b5305b914b4cb903d0d6b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 47136, "upload_time": "2019-09-30T02:41:53", "upload_time_iso_8601": "2019-09-30T02:41:53.767980Z", "url": "https://files.pythonhosted.org/packages/09/88/e311498a6c9c3aa1ad48ccd1704ab0136901e93c8f6b3e724e8490326d38/qbittorrent_api-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a583d558246c029ffe81fdbf1498172c", "sha256": "4abfe6c1c3b94971b5f3da5872d14ed9fdf9435cb6d8fd9baafdf5fa3867d4f4"}, "downloads": -1, "filename": "qbittorrent-api-0.3.3.tar.gz", "has_sig": false, "md5_digest": "a583d558246c029ffe81fdbf1498172c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41575, "upload_time": "2019-09-30T02:41:56", "upload_time_iso_8601": "2019-09-30T02:41:56.793570Z", "url": "https://files.pythonhosted.org/packages/4f/b0/3e86211d4f065ab31057c151e99e0b732cd6dc407c0fec4316a4952e6f0c/qbittorrent-api-0.3.3.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "a2fcda51784c3f49a4eb85456c7250a8", "sha256": "d8b0d70ad837bea28e9fa11ba1b8e56930bb530623049451b7f22501119182f7"}, "downloads": -1, "filename": "qbittorrent_api-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a2fcda51784c3f49a4eb85456c7250a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 47960, "upload_time": "2019-12-04T21:12:37", "upload_time_iso_8601": "2019-12-04T21:12:37.937527Z", "url": "https://files.pythonhosted.org/packages/7f/fc/c472a5906d7dd763703c46c37d3d456b22d2980aeec817ce88363aa1f40b/qbittorrent_api-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ab682ebeff4fbc86f837a5951454992", "sha256": "7cd643b7ba804b082d5a77667a7e7ea9242590596aa99adbaff8f4ba6aec76d6"}, "downloads": -1, "filename": "qbittorrent-api-0.4.1.tar.gz", "has_sig": false, "md5_digest": "4ab682ebeff4fbc86f837a5951454992", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43977, "upload_time": "2019-12-04T21:12:39", "upload_time_iso_8601": "2019-12-04T21:12:39.870783Z", "url": "https://files.pythonhosted.org/packages/56/17/a4a09f8824fbbb129329022a8906552ebc3e23faae7baa1e60392c107ddc/qbittorrent-api-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "184a94e48186a7c6f93837df82a0059e", "sha256": "9f4bef962f1bf6deef5bee680833c34ddc6438254753aa4c57c2a789c69f49cc"}, "downloads": -1, "filename": "qbittorrent_api-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "184a94e48186a7c6f93837df82a0059e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49612, "upload_time": "2019-12-05T21:06:31", "upload_time_iso_8601": "2019-12-05T21:06:31.927729Z", "url": "https://files.pythonhosted.org/packages/72/17/29675b8c7b17cd8ea60a0ed7985da500a7e3eabbc5a5fce8b82764b86cd5/qbittorrent_api-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21b2a3877026fc42de9dd88aa6c8117f", "sha256": "c6b5842353b05e948dd51788530ed6b267bcc283f64dea70abe77607f2a0d9cb"}, "downloads": -1, "filename": "qbittorrent-api-0.4.2.tar.gz", "has_sig": false, "md5_digest": "21b2a3877026fc42de9dd88aa6c8117f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46594, "upload_time": "2019-12-05T21:06:33", "upload_time_iso_8601": "2019-12-05T21:06:33.791527Z", "url": "https://files.pythonhosted.org/packages/4f/0d/5693518d5bc47ce8c95d23630143f3c1294a5fe5074e214b13d603fda938/qbittorrent-api-0.4.2.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "a53c3d18d4a61d46fbcef03cf6a19b0d", "sha256": "123bafd114b438726ad1ebf6e050960fe76fc1af1ba881fb2789cf787c143d96"}, "downloads": -1, "filename": "qbittorrent_api-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a53c3d18d4a61d46fbcef03cf6a19b0d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49761, "upload_time": "2020-01-03T02:57:29", "upload_time_iso_8601": "2020-01-03T02:57:29.804138Z", "url": "https://files.pythonhosted.org/packages/3b/78/39e28f05adfab0dc2dbf6345866c38749ba06f1060c0209596d0337c915a/qbittorrent_api-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae09289384a417018108d35691271c85", "sha256": "c01bb75810c2a4862ce0ac2464e92cd70c189a598c551b8f4d1aff02da654029"}, "downloads": -1, "filename": "qbittorrent-api-0.5.0.tar.gz", "has_sig": false, "md5_digest": "ae09289384a417018108d35691271c85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46970, "upload_time": "2020-01-03T02:57:31", "upload_time_iso_8601": "2020-01-03T02:57:31.934183Z", "url": "https://files.pythonhosted.org/packages/d3/ae/38705faed2607578c84f1ab3d1ad87685551cb4374487ae9f4fb508af4b1/qbittorrent-api-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "7ef08574aa4c8cc881efba18296c4400", "sha256": "f54133c3cee53ce53f6e4f09228bd73117ab0e63a1283c8f901dfbba13d8b3f1"}, "downloads": -1, "filename": "qbittorrent_api-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7ef08574aa4c8cc881efba18296c4400", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49760, "upload_time": "2020-01-03T03:14:45", "upload_time_iso_8601": "2020-01-03T03:14:45.822628Z", "url": "https://files.pythonhosted.org/packages/24/41/6cee0038c1dbeaf1fe3040c04ec5e1855ca998437ea3d7f7a15e861535cf/qbittorrent_api-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "23b4a968a9efc3a20ad58b55da8ff662", "sha256": "b292df03d56e13ed3b9d88aafed5c710cae4a304ce166c9562e7859eb4dc6adc"}, "downloads": -1, "filename": "qbittorrent-api-0.5.1.tar.gz", "has_sig": false, "md5_digest": "23b4a968a9efc3a20ad58b55da8ff662", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46999, "upload_time": "2020-01-03T03:14:47", "upload_time_iso_8601": "2020-01-03T03:14:47.508280Z", "url": "https://files.pythonhosted.org/packages/1c/d2/27282d40a19f5499c49c5ed7dc1a40316ebb39e0ca6a16b33df3552cedda/qbittorrent-api-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "cb55dce794cf251b0b95bdb62b0a9710", "sha256": "1af61035a386b5547e5989066c7c413a927188b13cd9a24acb6bc3e3e66b5acd"}, "downloads": -1, "filename": "qbittorrent_api-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "cb55dce794cf251b0b95bdb62b0a9710", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49774, "upload_time": "2020-04-19T21:36:31", "upload_time_iso_8601": "2020-04-19T21:36:31.702046Z", "url": "https://files.pythonhosted.org/packages/89/37/7ff821590695163ad008a906d5db0853da79f18b7574baead05680a5cc50/qbittorrent_api-0.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "603cde7acd1549406fcbef4e782c2317", "sha256": "914e587443ecc4aa0d8eab7cb467ea0c342d582bce6bbcf52b946392f06a870a"}, "downloads": -1, "filename": "qbittorrent-api-0.5.2.tar.gz", "has_sig": false, "md5_digest": "603cde7acd1549406fcbef4e782c2317", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48010, "upload_time": "2020-04-19T21:36:33", "upload_time_iso_8601": "2020-04-19T21:36:33.336400Z", "url": "https://files.pythonhosted.org/packages/17/03/270603b7a698d4aa699eecf504710ab75da3fcb0f97d0a6219eed9bf6d68/qbittorrent-api-0.5.2.tar.gz", "yanked": false}], "2020.4.1": [{"comment_text": "", "digests": {"md5": "2e1e98b1acb186d55692b28a1484bb8c", "sha256": "0c8e28383e153fd7e32d57d4c358503197027d8d08a3f7f3729241c0f193f7b2"}, "downloads": -1, "filename": "qbittorrent_api-2020.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2e1e98b1acb186d55692b28a1484bb8c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 50744, "upload_time": "2020-04-25T20:28:16", "upload_time_iso_8601": "2020-04-25T20:28:16.778965Z", "url": "https://files.pythonhosted.org/packages/6e/1e/cd4d13f88f02ee149d086b51c49411fbd1c6b3ae25121708c5c88fd2da60/qbittorrent_api-2020.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a29020d2317168db40c1f2eda123dab", "sha256": "7aaef3a86170e37c28d3f4ae4119e6ff0b7a981f19797a80d22a046e64722533"}, "downloads": -1, "filename": "qbittorrent-api-2020.4.1.tar.gz", "has_sig": false, "md5_digest": "1a29020d2317168db40c1f2eda123dab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49315, "upload_time": "2020-04-25T20:28:18", "upload_time_iso_8601": "2020-04-25T20:28:18.049169Z", "url": "https://files.pythonhosted.org/packages/a6/12/0c0c1cb8ef742dd7cdaf28549ca3cfbfe4512fe092c6c05c9da11083865b/qbittorrent-api-2020.4.1.tar.gz", "yanked": false}], "2020.4.2": [{"comment_text": "", "digests": {"md5": "07e5f2db606c839c2c3e4f9967d60f0b", "sha256": "e411f6b3efd675e82e35b1a3cf66e256b2fdb0e8a34514e56024eb4208b1d4ee"}, "downloads": -1, "filename": "qbittorrent_api-2020.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "07e5f2db606c839c2c3e4f9967d60f0b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 50858, "upload_time": "2020-04-25T23:14:13", "upload_time_iso_8601": "2020-04-25T23:14:13.188899Z", "url": "https://files.pythonhosted.org/packages/5e/e0/f81415e54503e95e19877cb02f967b19123b1941ddb438063a8dd7881ba9/qbittorrent_api-2020.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a666e4f33c4789fd861c43c78eb6913", "sha256": "e6d5a7864eb59226f49873dcd397dd00ef55f20dc9c44ad641a48cdad5b1b840"}, "downloads": -1, "filename": "qbittorrent-api-2020.4.2.tar.gz", "has_sig": false, "md5_digest": "8a666e4f33c4789fd861c43c78eb6913", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49529, "upload_time": "2020-04-25T23:14:14", "upload_time_iso_8601": "2020-04-25T23:14:14.504277Z", "url": "https://files.pythonhosted.org/packages/21/4c/30584c6c1428fac9b652fac5300f39113c9899488eb264e1d6a7a1fb186a/qbittorrent-api-2020.4.2.tar.gz", "yanked": false}], "6.0.0": [{"comment_text": "", "digests": {"md5": "93418ef63ce861dba3a698ca635400b0", "sha256": "9b6c250c9b308a930ded19e3d430e88a6760c31a825326244f77cba4a22c23c8"}, "downloads": -1, "filename": "qbittorrent_api-6.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "93418ef63ce861dba3a698ca635400b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 50481, "upload_time": "2020-04-23T04:02:29", "upload_time_iso_8601": "2020-04-23T04:02:29.728168Z", "url": "https://files.pythonhosted.org/packages/24/b9/c5fe18448fc7404288e382d266db91375b6dcef8a426fc559455680bfe47/qbittorrent_api-6.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd85fd82661b8191b0ffa4ea4935bc50", "sha256": "6f2fdec31fc85fbfd92e726c263a653b16ccec62294ae405b48f5cf0f7d9cba3"}, "downloads": -1, "filename": "qbittorrent-api-6.0.0.tar.gz", "has_sig": false, "md5_digest": "fd85fd82661b8191b0ffa4ea4935bc50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48773, "upload_time": "2020-04-23T04:02:31", "upload_time_iso_8601": "2020-04-23T04:02:31.345867Z", "url": "https://files.pythonhosted.org/packages/36/02/332b4c5faf3f6ba012d81e95f3c6edee1a65892cd8e697f5424546c999ab/qbittorrent-api-6.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "07e5f2db606c839c2c3e4f9967d60f0b", "sha256": "e411f6b3efd675e82e35b1a3cf66e256b2fdb0e8a34514e56024eb4208b1d4ee"}, "downloads": -1, "filename": "qbittorrent_api-2020.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "07e5f2db606c839c2c3e4f9967d60f0b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 50858, "upload_time": "2020-04-25T23:14:13", "upload_time_iso_8601": "2020-04-25T23:14:13.188899Z", "url": "https://files.pythonhosted.org/packages/5e/e0/f81415e54503e95e19877cb02f967b19123b1941ddb438063a8dd7881ba9/qbittorrent_api-2020.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a666e4f33c4789fd861c43c78eb6913", "sha256": "e6d5a7864eb59226f49873dcd397dd00ef55f20dc9c44ad641a48cdad5b1b840"}, "downloads": -1, "filename": "qbittorrent-api-2020.4.2.tar.gz", "has_sig": false, "md5_digest": "8a666e4f33c4789fd861c43c78eb6913", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49529, "upload_time": "2020-04-25T23:14:14", "upload_time_iso_8601": "2020-04-25T23:14:14.504277Z", "url": "https://files.pythonhosted.org/packages/21/4c/30584c6c1428fac9b652fac5300f39113c9899488eb264e1d6a7a1fb186a/qbittorrent-api-2020.4.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:06 2020"}