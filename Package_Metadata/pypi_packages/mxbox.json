{"info": {"author": "Lyken from TuSimple", "author_email": "lykensyu+github@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# MXbox: Simple, efficient and flexible vision toolbox for mxnet framework.\n\nMXbox is a toolbox aiming to provide a general and simple interface for vision tasks. This project is greatly inspired by [PyTorch](https://github.com/pytorch/pytorch) and [torchvision](https://github.com/pytorch/vision). Detailed copyright files are on the way. Improvements and suggestions are welcome.\n\n\n## Installation\n```bash\npip install mxbox\n```\n\n## Features\n1. Define **preprocess** as a flow\n\n```python\ntransform = transforms.Compose([\n    transforms.RandomSizedCrop(224),\n    transforms.RandomHorizontalFlip(),\n    transforms.mx.ToNdArray(),\n    transforms.mx.Normalize(mean = [ 0.485, 0.456, 0.406 ],\n                            std  = [ 0.229, 0.224, 0.225 ]),\n])\n```\n\nPS: By default, mxbox uses `PIL` to read and transform images. But it also supports other backends like `accimage` and `skimage`.\n\nMore examples can be found in XXX.\n\n2) Build **DataLoader** in several lines\n\n```python\nfeedin_shapes = {\n    'batch_size': 8,\n    'data': [mx.io.DataDesc(name='data', shape=(8, 3, 32, 32), layout='NCHW')],\n    'label': [mx.io.DataDesc(name='softmax_label', shape=(8, 1), layout='N')]\n}\n\ndst = Dataset(root='../../data', transform=img_transform, label_transform=label_transform)\nloader = DataLoader(dst, feedin_shapes, threads=8, shuffle=True)\n```\n\nAlso, common datasets such as `cifar10`, `cifar100`, `SVHN`, `MNIST` are out-of-the-box. You can simply load them from `mxbox.datasets`.  \n\n3) Load popular model with pretrained weights\n\n```python\nvgg = mxbox.models.vgg(num_classes=10, pretrained=True)\nresnet = mxbox.models.resnet152(num_classes=10, pretrained=True)\n```\n\n\n\n##  Documentation\n\nUnder construction, coming soon.\n\n\n## TODO list\n\n1) Efficient multi-thread reading (Prefetch wanted\n\n2) Common Models preparation.\n\n3) More friendly error logging.\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lyken17/mxbox", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "mxbox", "package_url": "https://pypi.org/project/mxbox/", "platform": "", "project_url": "https://pypi.org/project/mxbox/", "project_urls": {"Homepage": "https://github.com/lyken17/mxbox"}, "release_url": "https://pypi.org/project/mxbox/0.0.22/", "requires_dist": ["numpy", "pillow", "six"], "requires_python": "", "summary": "Image and video datasets and models for mxnet deep learning", "version": "0.0.22", "yanked": false, "html_description": "<div class=\"project-description\">\n            # MXbox: Simple, efficient and flexible vision toolbox for mxnet framework.<br><br>MXbox is a toolbox aiming to provide a general and simple interface for vision tasks. This project is greatly inspired by [PyTorch](https://github.com/pytorch/pytorch) and [torchvision](https://github.com/pytorch/vision). Detailed copyright files are on the way. Improvements and suggestions are welcome.<br><br><br>## Installation<br>```bash<br>pip install mxbox<br>```<br><br>## Features<br>1. Define **preprocess** as a flow<br><br>```python<br>transform = transforms.Compose([<br>    transforms.RandomSizedCrop(224),<br>    transforms.RandomHorizontalFlip(),<br>    transforms.mx.ToNdArray(),<br>    transforms.mx.Normalize(mean = [ 0.485, 0.456, 0.406 ],<br>                            std  = [ 0.229, 0.224, 0.225 ]),<br>])<br>```<br><br>PS: By default, mxbox uses `PIL` to read and transform images. But it also supports other backends like `accimage` and `skimage`.<br><br>More examples can be found in XXX.<br><br>2) Build **DataLoader** in several lines<br><br>```python<br>feedin_shapes = {<br>    'batch_size': 8,<br>    'data': [mx.io.DataDesc(name='data', shape=(8, 3, 32, 32), layout='NCHW')],<br>    'label': [mx.io.DataDesc(name='softmax_label', shape=(8, 1), layout='N')]<br>}<br><br>dst = Dataset(root='../../data', transform=img_transform, label_transform=label_transform)<br>loader = DataLoader(dst, feedin_shapes, threads=8, shuffle=True)<br>```<br><br>Also, common datasets such as `cifar10`, `cifar100`, `SVHN`, `MNIST` are out-of-the-box. You can simply load them from `mxbox.datasets`.  <br><br>3) Load popular model with pretrained weights<br><br>```python<br>vgg = mxbox.models.vgg(num_classes=10, pretrained=True)<br>resnet = mxbox.models.resnet152(num_classes=10, pretrained=True)<br>```<br><br><br><br>##  Documentation<br><br>Under construction, coming soon.<br><br><br>## TODO list<br><br>1) Efficient multi-thread reading (Prefetch wanted<br><br>2) Common Models preparation.<br><br>3) More friendly error logging.<br><br>\n          </div>"}, "last_serial": 3079866, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "eecdc7e0a12a5af9678ed76a59a295d3", "sha256": "3c8829997a351b9e3fc14afa72eb02ae59048501609834424b03cc4d20bbdd73"}, "downloads": -1, "filename": "mxbox-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "eecdc7e0a12a5af9678ed76a59a295d3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9930, "upload_time": "2017-06-29T01:33:46", "upload_time_iso_8601": "2017-06-29T01:33:46.851907Z", "url": "https://files.pythonhosted.org/packages/df/19/12a9d134aadd876176a212936e6fba23530be21e79a2f4da6e482da143ec/mxbox-0.0.1-py2.py3-none-any.whl", "yanked": false}], "0.0.21": [{"comment_text": "", "digests": {"md5": "eb7371d2f91ad8ff3cb070b776c0e626", "sha256": "29d00a43108b1edcd6b3fdbbc9d3957566273abd976048dcadd25c09e8637c63"}, "downloads": -1, "filename": "mxbox-0.0.21-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "eb7371d2f91ad8ff3cb070b776c0e626", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22041, "upload_time": "2017-07-16T23:45:06", "upload_time_iso_8601": "2017-07-16T23:45:06.430166Z", "url": "https://files.pythonhosted.org/packages/5b/e9/22cf7aabda001ddd3177442075da44e2e5b4f3c5497a06de195724266bb6/mxbox-0.0.21-py2.py3-none-any.whl", "yanked": false}], "0.0.22": [{"comment_text": "", "digests": {"md5": "5ab2ce456be92a8fd1e75a3d3bd5e512", "sha256": "d75aad70c4c00b17b750f3e063b1b4ac4e85f2a86ba961dfadfc63ab135ce299"}, "downloads": -1, "filename": "mxbox-0.0.22-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5ab2ce456be92a8fd1e75a3d3bd5e512", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 33230, "upload_time": "2017-08-08T01:21:47", "upload_time_iso_8601": "2017-08-08T01:21:47.734387Z", "url": "https://files.pythonhosted.org/packages/59/85/16e5858f761c2d876d0af1df38dd8b96d0715c503cc77ebc4570729b8465/mxbox-0.0.22-py2.py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "11dfc4ab772e2040c26c68cd16d29381", "sha256": "a32f014478d50b0f54526ed876996c2a8e4538066dcf7047efc4c258f5fa02af"}, "downloads": -1, "filename": "mxbox-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "11dfc4ab772e2040c26c68cd16d29381", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26331, "upload_time": "2017-07-06T00:13:18", "upload_time_iso_8601": "2017-07-06T00:13:18.629657Z", "url": "https://files.pythonhosted.org/packages/0d/f5/1bca0c45e3e202699b0feb41e52e8f11cc2b2e0de851052fbc4543a77b69/mxbox-0.0.3-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5ab2ce456be92a8fd1e75a3d3bd5e512", "sha256": "d75aad70c4c00b17b750f3e063b1b4ac4e85f2a86ba961dfadfc63ab135ce299"}, "downloads": -1, "filename": "mxbox-0.0.22-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5ab2ce456be92a8fd1e75a3d3bd5e512", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 33230, "upload_time": "2017-08-08T01:21:47", "upload_time_iso_8601": "2017-08-08T01:21:47.734387Z", "url": "https://files.pythonhosted.org/packages/59/85/16e5858f761c2d876d0af1df38dd8b96d0715c503cc77ebc4570729b8465/mxbox-0.0.22-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:49:55 2020"}