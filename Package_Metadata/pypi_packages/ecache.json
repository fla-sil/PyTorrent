{"info": {"author": "Mrkiven", "author_email": "kiven.mr@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Ecache for sqlalchemy\n=====================\n\n\nRun test\n--------\n\n.. code:: bash\n\n    make unittest\n\n\nInstallation / Rquirements\n--------------------------\n\n.. code::\n\n    pip intall ecache\n\n\nUsage\n-----\n\nWith Flask Integrate\n~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    from flask import Flask, jsonify\n    from flask_sqlalchemy import SQLAlchemy\n\n    from ecache.ext.flask_cache import CacheableMixin, query_callable, regions\n\n    app = Flask(__name__)\n    app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:////tmp/test.db'\n    app.debug = True\n    db = SQLAlchemy(app)\n\n    class User(db.Model, CacheableMixin):\n        \"\"\"Default backend is redis and expiration time is 1 hour, default\n        region name is `default`, you can override this:\n\n            cache_regions = your_regions\n            cache_label = your_label\n        \"\"\"\n\n        id = db.Column(db.Integer, primary_key=True)\n        name = db.Column(db.String)\n\n    @app.route('/users')\n    def all_users():\n        \"\"\"Result will try to get from cache first. load from db if cache miss.\n        \"\"\"\n        users = [user.to_dict() for user in User.cache.filter()]\n        return jsonify(users=users)\n\n\n    @app.route('/users/<int:user_id')\n    def view_user(user_id):\n        \"\"\"Result will try to get from cache first. load from db if cache miss.\n        \"\"\"\n        user = User.cache.get(user_id)\n        return jsonify(user.to_dict())\n\nMore detail see `example`_\n\n.. _`example`: https://github.com/MrKiven/ECache/blob/master/ecache/ext/example.py\n\n\nWith Pure SQLAlchemy model Integrate\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    # -*- coding: utf-8 -*-\n\n    import redis\n    from sqlalchemy import (Column, Integer, String, SmallInteger)\n\n    from ecache.core import cache_mixin\n    from ecache.db import db_manager, model_base\n\n    # alsosee :class:`ecache.db.DBManager`\n    DBSession = db_manager.get_session('test')\n    cache_client = redis.StrictRedis()\n    CacheMixin = cache_mixin()\n    DeclarativeBase = model_base()\n\n\n    class TodoListModel(DeclarativeBase, CacheMixin):\n        __tablename__ == 'todo_list'\n        TABLE_CACHE_EXPIRATION_TIME = 3600\n\n        id = Column(Integer, primary_key=True)\n        title = Column(String, default='')\n        is_done = Column(SmallInteger, default=0)\n\n        @classmethod\n        def get_todo(cls, todo_id):\n            todo = cls.get(todo_id)  # `cls.get` inherited from `CacheMixin`\n            return todo\n\n        @classmethod\n        def add(cls, title):\n            todo = cls(title=title)\n            s = DBSession()\n            s.add(todo)\n            s.commit()", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MrKiven/ECache", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "ecache", "package_url": "https://pypi.org/project/ecache/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ecache/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/MrKiven/ECache"}, "release_url": "https://pypi.org/project/ecache/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "Cache integration with sqlalchemy.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"run-test\">\n<h2>Run test</h2>\n<pre>make unittest\n</pre>\n</div>\n<div id=\"installation-rquirements\">\n<h2>Installation / Rquirements</h2>\n<pre>pip intall ecache\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"with-flask-integrate\">\n<h3>With Flask Integrate</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span><span class=\"p\">,</span> <span class=\"n\">jsonify</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_sqlalchemy</span> <span class=\"kn\">import</span> <span class=\"n\">SQLAlchemy</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">ecache.ext.flask_cache</span> <span class=\"kn\">import</span> <span class=\"n\">CacheableMixin</span><span class=\"p\">,</span> <span class=\"n\">query_callable</span><span class=\"p\">,</span> <span class=\"n\">regions</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'SQLALCHEMY_DATABASE_URI'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'sqlite:////tmp/test.db'</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">debug</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">SQLAlchemy</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">,</span> <span class=\"n\">CacheableMixin</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Default backend is redis and expiration time is 1 hour, default\n    region name is `default`, you can override this:\n\n        cache_regions = your_regions\n        cache_label = your_label\n    \"\"\"</span>\n\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/users'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">all_users</span><span class=\"p\">():</span>\n    <span class=\"sd\">\"\"\"Result will try to get from cache first. load from db if cache miss.\n    \"\"\"</span>\n    <span class=\"n\">users</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">to_dict</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">user</span> <span class=\"ow\">in</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">()]</span>\n    <span class=\"k\">return</span> <span class=\"n\">jsonify</span><span class=\"p\">(</span><span class=\"n\">users</span><span class=\"o\">=</span><span class=\"n\">users</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/users/&lt;int:user_id'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">view_user</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Result will try to get from cache first. load from db if cache miss.\n    \"\"\"</span>\n    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">jsonify</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">to_dict</span><span class=\"p\">())</span>\n</pre>\n<p>More detail see <a href=\"https://github.com/MrKiven/ECache/blob/master/ecache/ext/example.py\" rel=\"nofollow\">example</a></p>\n</div>\n<div id=\"with-pure-sqlalchemy-model-integrate\">\n<h3>With Pure SQLAlchemy model Integrate</h3>\n<pre><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">redis</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy</span> <span class=\"kn\">import</span> <span class=\"p\">(</span><span class=\"n\">Column</span><span class=\"p\">,</span> <span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">String</span><span class=\"p\">,</span> <span class=\"n\">SmallInteger</span><span class=\"p\">)</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">ecache.core</span> <span class=\"kn\">import</span> <span class=\"n\">cache_mixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ecache.db</span> <span class=\"kn\">import</span> <span class=\"n\">db_manager</span><span class=\"p\">,</span> <span class=\"n\">model_base</span>\n\n<span class=\"c1\"># alsosee :class:`ecache.db.DBManager`</span>\n<span class=\"n\">DBSession</span> <span class=\"o\">=</span> <span class=\"n\">db_manager</span><span class=\"o\">.</span><span class=\"n\">get_session</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>\n<span class=\"n\">cache_client</span> <span class=\"o\">=</span> <span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">StrictRedis</span><span class=\"p\">()</span>\n<span class=\"n\">CacheMixin</span> <span class=\"o\">=</span> <span class=\"n\">cache_mixin</span><span class=\"p\">()</span>\n<span class=\"n\">DeclarativeBase</span> <span class=\"o\">=</span> <span class=\"n\">model_base</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">TodoListModel</span><span class=\"p\">(</span><span class=\"n\">DeclarativeBase</span><span class=\"p\">,</span> <span class=\"n\">CacheMixin</span><span class=\"p\">):</span>\n    <span class=\"n\">__tablename__</span> <span class=\"o\">==</span> <span class=\"s1\">'todo_list'</span>\n    <span class=\"n\">TABLE_CACHE_EXPIRATION_TIME</span> <span class=\"o\">=</span> <span class=\"mi\">3600</span>\n\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">)</span>\n    <span class=\"n\">is_done</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">SmallInteger</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_todo</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">todo_id</span><span class=\"p\">):</span>\n        <span class=\"n\">todo</span> <span class=\"o\">=</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">todo_id</span><span class=\"p\">)</span>  <span class=\"c1\"># `cls.get` inherited from `CacheMixin`</span>\n        <span class=\"k\">return</span> <span class=\"n\">todo</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"p\">):</span>\n        <span class=\"n\">todo</span> <span class=\"o\">=</span> <span class=\"bp\">cls</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"n\">title</span><span class=\"p\">)</span>\n        <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">DBSession</span><span class=\"p\">()</span>\n        <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">todo</span><span class=\"p\">)</span>\n        <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2456348, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "2bf0f3c7d92db5ba9b57b61341983652", "sha256": "66064dd5277dca4f36c83b07dba3a49fdb93a5494051a4286fa643881c52bb3e"}, "downloads": -1, "filename": "ecache-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2bf0f3c7d92db5ba9b57b61341983652", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1859, "upload_time": "2016-11-12T08:12:14", "upload_time_iso_8601": "2016-11-12T08:12:14.817006Z", "url": "https://files.pythonhosted.org/packages/3b/1a/dbcff8814765308c79d8fdac96674dda5e76d1df59724df3e4f9d1d26ebb/ecache-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "a3e5eac299e5d8446648e6dea4c6acd1", "sha256": "bd7b3d9aa529477ca76a0ef39316e506257a79c8fdb9d111dd4e95327ca1d9d2"}, "downloads": -1, "filename": "ecache-0.0.2.tar.gz", "has_sig": false, "md5_digest": "a3e5eac299e5d8446648e6dea4c6acd1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11419, "upload_time": "2016-11-12T08:50:29", "upload_time_iso_8601": "2016-11-12T08:50:29.066861Z", "url": "https://files.pythonhosted.org/packages/42/42/f22bd61448cf397c4665be508193c52062d3bf00ac32143f0780faf0156d/ecache-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "e76067315809aaf315e428ff72006532", "sha256": "f3f779e97972357db838728dafe20d2f10219bfe5e906c040b3a8f146600a773"}, "downloads": -1, "filename": "ecache-0.0.3.tar.gz", "has_sig": false, "md5_digest": "e76067315809aaf315e428ff72006532", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11404, "upload_time": "2016-11-12T08:57:07", "upload_time_iso_8601": "2016-11-12T08:57:07.442773Z", "url": "https://files.pythonhosted.org/packages/aa/6f/d45746098332ef7a22e83a44f6dbbf47c6afb35da90d8398f4918ede5f02/ecache-0.0.3.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "d70004aa513b9f87a65cb13f499a75a8", "sha256": "1a730cd9fd4d60749ff78054747c53ed886dc120f79ebf783e82b41a44f1791e"}, "downloads": -1, "filename": "ecache-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d70004aa513b9f87a65cb13f499a75a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11512, "upload_time": "2016-11-12T09:09:08", "upload_time_iso_8601": "2016-11-12T09:09:08.717238Z", "url": "https://files.pythonhosted.org/packages/69/53/f73d6bae598f611efa8f6f951ca21f5ae88c8a13150bdcf05b7f7544dcd7/ecache-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "491243a3dceeaf2ea07ef9175ff93488", "sha256": "032319abf128492e8fe36931e1c2ab1b3e940200235390548211a31c964f3e37"}, "downloads": -1, "filename": "ecache-0.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "491243a3dceeaf2ea07ef9175ff93488", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 16676, "upload_time": "2016-11-12T09:33:30", "upload_time_iso_8601": "2016-11-12T09:33:30.271203Z", "url": "https://files.pythonhosted.org/packages/07/ff/ad7880dd6e3a8decc259d1fc9442b0e7660d95f0a25a455e5896f80fd0d4/ecache-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cee93449107559a32a6e586ee55a2d42", "sha256": "36a653e42aae94e7184e606d7a7406429217e58d940e73815e0d88ed506dfe9c"}, "downloads": -1, "filename": "ecache-0.1.1.tar.gz", "has_sig": false, "md5_digest": "cee93449107559a32a6e586ee55a2d42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11915, "upload_time": "2016-11-12T09:33:26", "upload_time_iso_8601": "2016-11-12T09:33:26.894415Z", "url": "https://files.pythonhosted.org/packages/74/8a/0593ebff93339624284dec50a5f32bd68abfacc4ae6ee131890a66939bb7/ecache-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "38c815d2fe1001219b036cebdd333bf7", "sha256": "b6775d27993086110427a72bc7ffe94ecd17ae4b71fbef52ef3951e5d2b7988e"}, "downloads": -1, "filename": "ecache-0.1.2-py2-none-any.whl", "has_sig": false, "md5_digest": "38c815d2fe1001219b036cebdd333bf7", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 16712, "upload_time": "2016-11-12T09:36:10", "upload_time_iso_8601": "2016-11-12T09:36:10.201186Z", "url": "https://files.pythonhosted.org/packages/ef/39/c84485775a4dbab646bddb0071f90389549157323aeb6862c978c48c30bb/ecache-0.1.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ef1e21ce0d07143d1091951869babcf", "sha256": "31c7fb9a2827a8609a8c25b4b8decdcf837726b276b1aaed4b69ea09546e2304"}, "downloads": -1, "filename": "ecache-0.1.2.tar.gz", "has_sig": false, "md5_digest": "2ef1e21ce0d07143d1091951869babcf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11927, "upload_time": "2016-11-12T09:36:06", "upload_time_iso_8601": "2016-11-12T09:36:06.812422Z", "url": "https://files.pythonhosted.org/packages/ad/6e/c62aa9904b2fad1247b14c7f3b8ce07555ccb6b567a4017874c48a014a23/ecache-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "38c815d2fe1001219b036cebdd333bf7", "sha256": "b6775d27993086110427a72bc7ffe94ecd17ae4b71fbef52ef3951e5d2b7988e"}, "downloads": -1, "filename": "ecache-0.1.2-py2-none-any.whl", "has_sig": false, "md5_digest": "38c815d2fe1001219b036cebdd333bf7", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 16712, "upload_time": "2016-11-12T09:36:10", "upload_time_iso_8601": "2016-11-12T09:36:10.201186Z", "url": "https://files.pythonhosted.org/packages/ef/39/c84485775a4dbab646bddb0071f90389549157323aeb6862c978c48c30bb/ecache-0.1.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ef1e21ce0d07143d1091951869babcf", "sha256": "31c7fb9a2827a8609a8c25b4b8decdcf837726b276b1aaed4b69ea09546e2304"}, "downloads": -1, "filename": "ecache-0.1.2.tar.gz", "has_sig": false, "md5_digest": "2ef1e21ce0d07143d1091951869babcf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11927, "upload_time": "2016-11-12T09:36:06", "upload_time_iso_8601": "2016-11-12T09:36:06.812422Z", "url": "https://files.pythonhosted.org/packages/ad/6e/c62aa9904b2fad1247b14c7f3b8ce07555ccb6b567a4017874c48a014a23/ecache-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:04 2020"}