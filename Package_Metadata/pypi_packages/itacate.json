{"info": {"author": "Abraham Toriz Cruz", "author_email": "awonderfulcode@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Itacate\n=======\n\n.. image:: https://travis-ci.org/categulario/itacate.svg?branch=master\n    :target: https://travis-ci.org/categulario/itacate\n\n*Itacatl: Provisi\u00f3n de comida que se lleva para un viaje o un paseo, o que ha sobrado de una fiesta y se da a algunos invitados.*\n\nEl m\u00f3dulo de configuraci\u00f3n de flask para el resto del mundo, por que me gusta c\u00f3mo funciona. Escribe tus configuraciones en archivos python e imp\u00f3rtalas seg\u00fan el entorno, sobreescribi\u00e9ndolas en cascada.\n\nThe `config` module from `flask` for the rest of the world, just because I like how it works. Write your config files in normal python files and import them depending on environment variables. Overwrite them in cascade.\n\nC\u00f3mo usar / Usage\n-----------------\n\n.. code-block:: python\n\n   # settings.py\n   DEBUG = False\n   BE_MAGIC = True\n   SECREY_KEY = ''\n   FIZ_BOZ = 15\n   STORAGE_DIR = 'media'\n   DB_NAME = 'mysql'\n\n.. code-block:: python\n\n   # settings_develop.py\n   DEBUG = True\n\n.. code-block:: json\n\n   # settings.json\n   {\n      \"FIZ_BOZ\": 10\n   }\n\n.. code-block:: python\n\n   # module.py\n   from itacate import Config\n   import os\n\n   class MyObject:\n      STORAGE_DIR = '/var/www/media'\n\n   DB_NAME = 'postgres'\n\n   config = Config(os.path.dirname(os.path.realpath(__file__)))\n   config.from_pyfile('settings.py')\n   config.from_envvar('MY_APP_SETTINGS', silent=False) # export MY_APP_SETTINGS=/path/to/settings_develop.py\n   config.from_mapping({\n      'SECREY_KEY': 'lalala',\n   })\n   config.from_json('settings.json')\n   config.from_object(MyObject)\n   config.from_object(__name__) # from this same module!\n\n   assert config.BE_MAGIC == True\n   assert config.DEBUG == True\n   assert config.FIZ_BOZ == 10\n   assert config.SECREY_KEY == 'lalala'\n   assert config.STORAGE_DIR == '/var/www/media'\n   assert config.DB_NAME == 'postgres'\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/categulario/itacate", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "itacate", "package_url": "https://pypi.org/project/itacate/", "platform": "any", "project_url": "https://pypi.org/project/itacate/", "project_urls": {"Homepage": "https://github.com/categulario/itacate"}, "release_url": "https://pypi.org/project/itacate/1.0.3/", "requires_dist": ["pytest (>=3); extra == 'dev'", "tox; extra == 'dev'"], "requires_python": "", "summary": "Configuration module from flask, for the rest of the world", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/categulario/itacate\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/categulario/itacate.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b50091d257a94f7fba8f7daf826218daeda69443/68747470733a2f2f7472617669732d63692e6f72672f6361746567756c6172696f2f697461636174652e7376673f6272616e63683d6d6173746572\"></a>\n<p><em>Itacatl: Provisi\u00f3n de comida que se lleva para un viaje o un paseo, o que ha sobrado de una fiesta y se da a algunos invitados.</em></p>\n<p>El m\u00f3dulo de configuraci\u00f3n de flask para el resto del mundo, por que me gusta c\u00f3mo funciona. Escribe tus configuraciones en archivos python e imp\u00f3rtalas seg\u00fan el entorno, sobreescribi\u00e9ndolas en cascada.</p>\n<p>The <cite>config</cite> module from <cite>flask</cite> for the rest of the world, just because I like how it works. Write your config files in normal python files and import them depending on environment variables. Overwrite them in cascade.</p>\n<div id=\"como-usar-usage\">\n<h2>C\u00f3mo usar / Usage</h2>\n<pre><span class=\"c1\"># settings.py</span>\n<span class=\"n\">DEBUG</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"n\">BE_MAGIC</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"n\">SECREY_KEY</span> <span class=\"o\">=</span> <span class=\"s1\">''</span>\n<span class=\"n\">FIZ_BOZ</span> <span class=\"o\">=</span> <span class=\"mi\">15</span>\n<span class=\"n\">STORAGE_DIR</span> <span class=\"o\">=</span> <span class=\"s1\">'media'</span>\n<span class=\"n\">DB_NAME</span> <span class=\"o\">=</span> <span class=\"s1\">'mysql'</span>\n</pre>\n<pre><span class=\"c1\"># settings_develop.py</span>\n<span class=\"n\">DEBUG</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n</pre>\n<pre><span class=\"err\">#</span> <span class=\"err\">settings.json</span>\n<span class=\"p\">{</span>\n   <span class=\"nt\">\"FIZ_BOZ\"</span><span class=\"p\">:</span> <span class=\"mi\">10</span>\n<span class=\"p\">}</span>\n</pre>\n<pre><span class=\"c1\"># module.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">itacate</span> <span class=\"kn\">import</span> <span class=\"n\">Config</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyObject</span><span class=\"p\">:</span>\n   <span class=\"n\">STORAGE_DIR</span> <span class=\"o\">=</span> <span class=\"s1\">'/var/www/media'</span>\n\n<span class=\"n\">DB_NAME</span> <span class=\"o\">=</span> <span class=\"s1\">'postgres'</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">Config</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">realpath</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)))</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_pyfile</span><span class=\"p\">(</span><span class=\"s1\">'settings.py'</span><span class=\"p\">)</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_envvar</span><span class=\"p\">(</span><span class=\"s1\">'MY_APP_SETTINGS'</span><span class=\"p\">,</span> <span class=\"n\">silent</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span> <span class=\"c1\"># export MY_APP_SETTINGS=/path/to/settings_develop.py</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_mapping</span><span class=\"p\">({</span>\n   <span class=\"s1\">'SECREY_KEY'</span><span class=\"p\">:</span> <span class=\"s1\">'lalala'</span><span class=\"p\">,</span>\n<span class=\"p\">})</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_json</span><span class=\"p\">(</span><span class=\"s1\">'settings.json'</span><span class=\"p\">)</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_object</span><span class=\"p\">(</span><span class=\"n\">MyObject</span><span class=\"p\">)</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">from_object</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span> <span class=\"c1\"># from this same module!</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">BE_MAGIC</span> <span class=\"o\">==</span> <span class=\"kc\">True</span>\n<span class=\"k\">assert</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span> <span class=\"o\">==</span> <span class=\"kc\">True</span>\n<span class=\"k\">assert</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">FIZ_BOZ</span> <span class=\"o\">==</span> <span class=\"mi\">10</span>\n<span class=\"k\">assert</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">SECREY_KEY</span> <span class=\"o\">==</span> <span class=\"s1\">'lalala'</span>\n<span class=\"k\">assert</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">STORAGE_DIR</span> <span class=\"o\">==</span> <span class=\"s1\">'/var/www/media'</span>\n<span class=\"k\">assert</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">DB_NAME</span> <span class=\"o\">==</span> <span class=\"s1\">'postgres'</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3578920, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "4c3452dad8a5fbe459e081aa66b0dadb", "sha256": "203599f3f033216e0f01b8b43060ff8d84de753541722d837e51f31f64a7eb5f"}, "downloads": -1, "filename": "itacate-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4c3452dad8a5fbe459e081aa66b0dadb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7760, "upload_time": "2018-02-13T14:54:57", "upload_time_iso_8601": "2018-02-13T14:54:57.506888Z", "url": "https://files.pythonhosted.org/packages/80/4b/b9b063279b6d27d1fb7142c2e91422b27b84bff014ab973e07c9c2b86b18/itacate-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb31deaf877006cfbc60a78bfc43d286", "sha256": "86de5656caa624a76fa84206ef16dd30a2eef4b843362b0e916f1a9bac736e47"}, "downloads": -1, "filename": "itacate-1.0.0.tar.gz", "has_sig": false, "md5_digest": "fb31deaf877006cfbc60a78bfc43d286", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6964, "upload_time": "2018-02-13T14:55:00", "upload_time_iso_8601": "2018-02-13T14:55:00.340920Z", "url": "https://files.pythonhosted.org/packages/77/07/7a33b9e18b3731d925ddd3d4b5894ba4b4fb672b2beebe0c53accc7dba12/itacate-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "b3829e88c890dbfda551b2f30d0fcb51", "sha256": "13ca07ef87129e2cba8abf9a5dc7a8f66eafaeccefe4c0e64043f5982d858faf"}, "downloads": -1, "filename": "itacate-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b3829e88c890dbfda551b2f30d0fcb51", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7756, "upload_time": "2018-02-13T15:00:40", "upload_time_iso_8601": "2018-02-13T15:00:40.406408Z", "url": "https://files.pythonhosted.org/packages/de/c6/f961b088891814731de97e69f558e10d80a24341d85d47cab2eae77c58ed/itacate-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "24c99a4d980ccadfc27e5baf3ddf5aaa", "sha256": "7d1c38ca51c0aade07779b8f257b3f61c8e568eb7932af881a2ec488f3e6252a"}, "downloads": -1, "filename": "itacate-1.0.1.tar.gz", "has_sig": false, "md5_digest": "24c99a4d980ccadfc27e5baf3ddf5aaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6966, "upload_time": "2018-02-13T15:00:43", "upload_time_iso_8601": "2018-02-13T15:00:43.995464Z", "url": "https://files.pythonhosted.org/packages/48/7c/288203c30389fd60603ca33683ea37599522dff03cc7060d312f44d6b8ac/itacate-1.0.1.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "cbd84aaad6cd49c19ec817b708c0c4b0", "sha256": "982a22cfefeaf58ae8ab122815a7d0a8386bebc042dbbefe33ab89d5ad285931"}, "downloads": -1, "filename": "itacate-1.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cbd84aaad6cd49c19ec817b708c0c4b0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8649, "upload_time": "2018-02-13T16:39:17", "upload_time_iso_8601": "2018-02-13T16:39:17.281783Z", "url": "https://files.pythonhosted.org/packages/a0/12/9a643c2ea6a4fb5d69a66032a614dcde4733a6430642ddfb63b8273334af/itacate-1.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "78c8f65383d10d7d067fefa607fbd16e", "sha256": "aa3acf3c3269fdc70b40ca1dd8e76aa93919f4b46a079b887c55a915a49b10ee"}, "downloads": -1, "filename": "itacate-1.0.3.tar.gz", "has_sig": false, "md5_digest": "78c8f65383d10d7d067fefa607fbd16e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7776, "upload_time": "2018-02-13T16:39:18", "upload_time_iso_8601": "2018-02-13T16:39:18.487206Z", "url": "https://files.pythonhosted.org/packages/35/2b/4585514cef695bccbb9db6e7b6807d5cc5e7cd770456eb8e2d0f5ad67a92/itacate-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cbd84aaad6cd49c19ec817b708c0c4b0", "sha256": "982a22cfefeaf58ae8ab122815a7d0a8386bebc042dbbefe33ab89d5ad285931"}, "downloads": -1, "filename": "itacate-1.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cbd84aaad6cd49c19ec817b708c0c4b0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8649, "upload_time": "2018-02-13T16:39:17", "upload_time_iso_8601": "2018-02-13T16:39:17.281783Z", "url": "https://files.pythonhosted.org/packages/a0/12/9a643c2ea6a4fb5d69a66032a614dcde4733a6430642ddfb63b8273334af/itacate-1.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "78c8f65383d10d7d067fefa607fbd16e", "sha256": "aa3acf3c3269fdc70b40ca1dd8e76aa93919f4b46a079b887c55a915a49b10ee"}, "downloads": -1, "filename": "itacate-1.0.3.tar.gz", "has_sig": false, "md5_digest": "78c8f65383d10d7d067fefa607fbd16e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7776, "upload_time": "2018-02-13T16:39:18", "upload_time_iso_8601": "2018-02-13T16:39:18.487206Z", "url": "https://files.pythonhosted.org/packages/35/2b/4585514cef695bccbb9db6e7b6807d5cc5e7cd770456eb8e2d0f5ad67a92/itacate-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:51 2020"}