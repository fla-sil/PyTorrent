{"info": {"author": "Dan Kruchinin", "author_email": "dan.kruchinin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Monitoring"], "description": "Sanic prometheus metrics\n=========================\n|Build Status| |PyPI| |PyPI version|\n\nAfter googling for a while I didn't find a library that would enable some `prometheus <https://prometheus.io/>`_ metrics for `Sanic <https://github.com/channelcat/sanic>`_-based apps, so I had to write one. It makes adding monitoring to your Sanic app super easy, just add one line to your code (ok, two if you count import :) and point Prometheus to a newly appeared `/metrics` endpoint.\n\nInstallation and enabling monitoring\n-------------------------------------\n\nInstallatio:\n\n.. code:: bash\n\n  pip install prometheus-sanic\n\nEasy-peasy:\n\n.. code:: python\n\n  from sanic import Sanic\n  from prometheus_sanic import monitor\n\n  app = Sanic()\n  ...\n\n  if __name__ == \"__main__\":\n    monitor(app).expose_endpoint() # adds /metrics endpoint to your Sanic server\n    app.run(host=\"0.0.0.0\", port=8000)\n\n\nActually, there're two ways to run monitoring:\n\n\n1. The one you've seen above, ``monitor(app).expose_endpoint()``. \n   It just adds a new ``route`` to your Sanic app, exposing ``/metrics`` endpoint\n   on the same host and port your Sanic server runs. It might be useful if you run your\n   app in a container and you do not want to expose different ports for metrics and everything else.\n   You can customize the ``/metrics`` endpoint by passing the ``metrics_path`` keyword argument:\n   ``monitor(app, metrics_path='/my_metrics_path').expose_endpoint()``.\n2. ``monitor(app).start_server(addr=..., port=...)``.\n   Runs a HTTP server on given address and port and exposes ``/metrics`` endpoint on it.\n   This might be useful if you want to restrict access to your ``/metrics`` endpoint using some\n   firewall rules\n\n\nVersions compatibility\n----------------------\n\n* \u2611\ufe0e use **0.1.0** for Sanic <= 0.4.1\n* \u2611\ufe0e use **0.1.3** for Sanic >= 0.5.0\n* \u2611\ufe0e use >= **0.1.4** if you need multiprocessing support\n* \u2611\ufe0e use **0.1.6** if you have to use `promtheus-client` <= 0.4.2\n* \u2611\ufe0e use **0.1.8** with `prometheus-client` >= 0.5.0\n* \u2611\ufe0e use **0.2.0** with `prometheus-client` >= 0.7.1 and Sanic >= 18.12\n\nExposed metrics\n-----------------\n\nAt the moment ``prometheus-sanic`` provides four metrics:\n\n* **sanic_request_count** - total number of requests (labels: *method*, *endpoint*, *status*) [`counter <https://prometheus.io/docs/concepts/metric_types/#counter>`_]\n* **sanic_request_latency_sec** - request latency in seconds (labels: *method*, *endpoint*) [`histogram <https://prometheus.io/docs/concepts/metric_types/#histogram>`_]\n* **sanic_mem_rss_bytes** - resident memory used by the process (in bytes) [`gauge <https://prometheus.io/docs/concepts/metric_types/#gauge>`_]\n* **sanic_mem_rss_perc** - a percent of total physical memory used by the process running Sanic [`gauge <https://prometheus.io/docs/concepts/metric_types/#gauge>`_]\n  \nLabels\n-----------------\n\n* **method**: a HTTP method (i.e. GET/POST/DELETE/etc)\n* **endpoint**: just a string, a name identifying a point handling a group of requests. By default it's just the first element of the relative path of the URL being called (i.e. for http://myhost/a/b/c you'll end up having ``/a`` as your endpoint). It is quite configurable, in fact it's up you what's gonna get to the ``endpoint`` label (see ``help(prometheus_sanic.monitor)`` for more details)\n* **http_status**: a HTTP status code\n\nMultiprocess mode\n-----------------\n\nSanic allows to launch multiple worker processes to utilise parallelisation, which is great but makes metrics collection much trickier (`read more <https://github.com/prometheus/client_python/blob/master/README.md#multiprocess-mode-gunicorn>`_) and introduces some limitations. \n\nIn order to collect metrics from multiple workers, create a directory and point a ``prometheus_multiproc_dir`` environment variable to it. Make sure the directory is empty before you launch your service::\n\n\n     % rm -rf /path/to/your/directory/*\n     % env prometheus_multiproc_dir=/path/to/your/directory python your_sanic_app.py\n\n\nUnfortunately you can not use ``monitor(app).start_server(addr=..., port=...)`` in multiprocess mode as it exposes a prometheus endpoint from a newly created process.\n\nConfiguration\n-----------------\n\nBest you can do is::\n\n     % ipython\n     In [1]: from prometheus_sanic import monitor\n     In [2]: help(monitor)\n\n\nPrometheus quering examples:\n-----------------------------\n\n* *Average latency over last 30 minutes*::\n\n    rate(sanic_request_latency_sec_sum{endpoint='/your-endpoint'}[30m]) / \n    rate(sanic_request_latency_sec_count{endpoint='/your-endpoint'}[30m])\n\n* *95th percentile of request latency*:: \n\n    histogram_quantile(0.95, sum(rate(sanic_request_latency_sec_bucket[5m])) by (le))\n\n* *Physical memory usage percent over last 10 minutes*::\n\n    rate(sanic_mem_rss_perc[10m])\n\n.. |Build Status| image:: https://github.com/skar404/prometheus-sanic/workflows/Tests/badge.svg\n   :target: https://github.com/skar404/prometheus-sanic/actions/\n.. |PyPI| image:: https://img.shields.io/pypi/v/prometheus-sanic.svg\n   :target: https://pypi.python.org/pypi/prometheus-sanic/\n.. |PyPI version| image:: https://img.shields.io/pypi/pyversions/prometheus-sanic.svg\n   :target: https://pypi.python.org/pypi/prometheus-sanic/\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/skar404/prometheus-sanic", "keywords": "python,prometheus,sanic,monitoring,python-library", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "prometheus-sanic", "package_url": "https://pypi.org/project/prometheus-sanic/", "platform": "", "project_url": "https://pypi.org/project/prometheus-sanic/", "project_urls": {"Homepage": "https://github.com/skar404/prometheus-sanic", "Repository": "https://github.com/skar404/prometheus-sanic"}, "release_url": "https://pypi.org/project/prometheus-sanic/2.1.1/", "requires_dist": ["sanic (>=0.7.0)", "prometheus-client (>=0.7.1,<0.8.0)"], "requires_python": ">=3.6,<4.0", "summary": "Exposes Prometheus monitoring metrics of Sanic apps.", "version": "2.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://github.com/skar404/prometheus-sanic/actions/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/79bebb64cc77918144ccaf9d1fa8bf40bfce95a0/68747470733a2f2f6769746875622e636f6d2f736b61723430342f70726f6d6574686575732d73616e69632f776f726b666c6f77732f54657374732f62616467652e737667\"></a> <a href=\"https://pypi.python.org/pypi/prometheus-sanic/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f62ed157f979c72829dc52da7eef68fc9ae3e7c9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70726f6d6574686575732d73616e69632e737667\"></a> <a href=\"https://pypi.python.org/pypi/prometheus-sanic/\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eaf54a919cda173530f3c86febc99c615505f161/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f70726f6d6574686575732d73616e69632e737667\"></a></p>\n<p>After googling for a while I didn\u2019t find a library that would enable some <a href=\"https://prometheus.io/\" rel=\"nofollow\">prometheus</a> metrics for <a href=\"https://github.com/channelcat/sanic\" rel=\"nofollow\">Sanic</a>-based apps, so I had to write one. It makes adding monitoring to your Sanic app super easy, just add one line to your code (ok, two if you count import :) and point Prometheus to a newly appeared <cite>/metrics</cite> endpoint.</p>\n<div id=\"installation-and-enabling-monitoring\">\n<h2>Installation and enabling monitoring</h2>\n<p>Installatio:</p>\n<pre>pip install prometheus-sanic\n</pre>\n<p>Easy-peasy:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sanic</span> <span class=\"kn\">import</span> <span class=\"n\">Sanic</span>\n<span class=\"kn\">from</span> <span class=\"nn\">prometheus_sanic</span> <span class=\"kn\">import</span> <span class=\"n\">monitor</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Sanic</span><span class=\"p\">()</span>\n<span class=\"o\">...</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n  <span class=\"n\">monitor</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">expose_endpoint</span><span class=\"p\">()</span> <span class=\"c1\"># adds /metrics endpoint to your Sanic server</span>\n  <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s2\">\"0.0.0.0\"</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">8000</span><span class=\"p\">)</span>\n</pre>\n<p>Actually, there\u2019re two ways to run monitoring:</p>\n<ol>\n<li>The one you\u2019ve seen above, <tt><span class=\"pre\">monitor(app).expose_endpoint()</span></tt>.\nIt just adds a new <tt>route</tt> to your Sanic app, exposing <tt>/metrics</tt> endpoint\non the same host and port your Sanic server runs. It might be useful if you run your\napp in a container and you do not want to expose different ports for metrics and everything else.\nYou can customize the <tt>/metrics</tt> endpoint by passing the <tt>metrics_path</tt> keyword argument:\n<tt>monitor(app, <span class=\"pre\">metrics_path='/my_metrics_path').expose_endpoint()</span></tt>.</li>\n<li><tt><span class=\"pre\">monitor(app).start_server(addr=...,</span> <span class=\"pre\">port=...)</span></tt>.\nRuns a HTTP server on given address and port and exposes <tt>/metrics</tt> endpoint on it.\nThis might be useful if you want to restrict access to your <tt>/metrics</tt> endpoint using some\nfirewall rules</li>\n</ol>\n</div>\n<div id=\"versions-compatibility\">\n<h2>Versions compatibility</h2>\n<ul>\n<li>\u2611\ufe0e use <strong>0.1.0</strong> for Sanic &lt;= 0.4.1</li>\n<li>\u2611\ufe0e use <strong>0.1.3</strong> for Sanic &gt;= 0.5.0</li>\n<li>\u2611\ufe0e use &gt;= <strong>0.1.4</strong> if you need multiprocessing support</li>\n<li>\u2611\ufe0e use <strong>0.1.6</strong> if you have to use <cite>promtheus-client</cite> &lt;= 0.4.2</li>\n<li>\u2611\ufe0e use <strong>0.1.8</strong> with <cite>prometheus-client</cite> &gt;= 0.5.0</li>\n<li>\u2611\ufe0e use <strong>0.2.0</strong> with <cite>prometheus-client</cite> &gt;= 0.7.1 and Sanic &gt;= 18.12</li>\n</ul>\n</div>\n<div id=\"exposed-metrics\">\n<h2>Exposed metrics</h2>\n<p>At the moment <tt><span class=\"pre\">prometheus-sanic</span></tt> provides four metrics:</p>\n<ul>\n<li><strong>sanic_request_count</strong> - total number of requests (labels: <em>method</em>, <em>endpoint</em>, <em>status</em>) [<a href=\"https://prometheus.io/docs/concepts/metric_types/#counter\" rel=\"nofollow\">counter</a>]</li>\n<li><strong>sanic_request_latency_sec</strong> - request latency in seconds (labels: <em>method</em>, <em>endpoint</em>) [<a href=\"https://prometheus.io/docs/concepts/metric_types/#histogram\" rel=\"nofollow\">histogram</a>]</li>\n<li><strong>sanic_mem_rss_bytes</strong> - resident memory used by the process (in bytes) [<a href=\"https://prometheus.io/docs/concepts/metric_types/#gauge\" rel=\"nofollow\">gauge</a>]</li>\n<li><strong>sanic_mem_rss_perc</strong> - a percent of total physical memory used by the process running Sanic [<a href=\"https://prometheus.io/docs/concepts/metric_types/#gauge\" rel=\"nofollow\">gauge</a>]</li>\n</ul>\n</div>\n<div id=\"labels\">\n<h2>Labels</h2>\n<ul>\n<li><strong>method</strong>: a HTTP method (i.e. GET/POST/DELETE/etc)</li>\n<li><strong>endpoint</strong>: just a string, a name identifying a point handling a group of requests. By default it\u2019s just the first element of the relative path of the URL being called (i.e. for <a href=\"http://myhost/a/b/c\" rel=\"nofollow\">http://myhost/a/b/c</a> you\u2019ll end up having <tt>/a</tt> as your endpoint). It is quite configurable, in fact it\u2019s up you what\u2019s gonna get to the <tt>endpoint</tt> label (see <tt>help(prometheus_sanic.monitor)</tt> for more details)</li>\n<li><strong>http_status</strong>: a HTTP status code</li>\n</ul>\n</div>\n<div id=\"multiprocess-mode\">\n<h2>Multiprocess mode</h2>\n<p>Sanic allows to launch multiple worker processes to utilise parallelisation, which is great but makes metrics collection much trickier (<a href=\"https://github.com/prometheus/client_python/blob/master/README.md#multiprocess-mode-gunicorn\" rel=\"nofollow\">read more</a>) and introduces some limitations.</p>\n<p>In order to collect metrics from multiple workers, create a directory and point a <tt>prometheus_multiproc_dir</tt> environment variable to it. Make sure the directory is empty before you launch your service:</p>\n<pre>% rm -rf /path/to/your/directory/*\n% env prometheus_multiproc_dir=/path/to/your/directory python your_sanic_app.py\n</pre>\n<p>Unfortunately you can not use <tt><span class=\"pre\">monitor(app).start_server(addr=...,</span> <span class=\"pre\">port=...)</span></tt> in multiprocess mode as it exposes a prometheus endpoint from a newly created process.</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Best you can do is:</p>\n<pre>% ipython\nIn [1]: from prometheus_sanic import monitor\nIn [2]: help(monitor)\n</pre>\n</div>\n<div id=\"prometheus-quering-examples\">\n<h2>Prometheus quering examples:</h2>\n<ul>\n<li><p><em>Average latency over last 30 minutes</em>:</p>\n<pre>rate(sanic_request_latency_sec_sum{endpoint='/your-endpoint'}[30m]) /\nrate(sanic_request_latency_sec_count{endpoint='/your-endpoint'}[30m])\n</pre>\n</li>\n<li><p><em>95th percentile of request latency</em>:</p>\n<pre>histogram_quantile(0.95, sum(rate(sanic_request_latency_sec_bucket[5m])) by (le))\n</pre>\n</li>\n<li><p><em>Physical memory usage percent over last 10 minutes</em>:</p>\n<pre>rate(sanic_mem_rss_perc[10m])\n</pre>\n</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 7031757, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e7123a34bcd4abc1cd863216fba95b2d", "sha256": "35cc28098d0eecd995c6befeac584e619a94429bd33322c06ae3dc335d8cec02"}, "downloads": -1, "filename": "prometheus_sanic-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e7123a34bcd4abc1cd863216fba95b2d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 5467, "upload_time": "2019-11-04T12:39:54", "upload_time_iso_8601": "2019-11-04T12:39:54.445635Z", "url": "https://files.pythonhosted.org/packages/48/96/d55aca40b5c9771abf20f45572c78cf28f0103fd55b528f360c10dca077e/prometheus_sanic-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "63780571a4cc615a1f00c2757bc3cca7", "sha256": "39b0d4903f6968a37ab7be3b6caa892c17dd9cd5b43cb936b4b0d8beb981bc8c"}, "downloads": -1, "filename": "prometheus-sanic-0.1.0.tar.gz", "has_sig": false, "md5_digest": "63780571a4cc615a1f00c2757bc3cca7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4373, "upload_time": "2019-11-04T12:39:52", "upload_time_iso_8601": "2019-11-04T12:39:52.143145Z", "url": "https://files.pythonhosted.org/packages/d0/f7/2306eb8229c214b3d648a3ea30533642656fefc05e348a7909987e3aea5d/prometheus-sanic-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "aca054e430a8f30e07cf3e4bc7a2903a", "sha256": "6619e28fb392da69a0f8fabc8117179c7a6599916defbc2b6c42a503db70d9fd"}, "downloads": -1, "filename": "prometheus_sanic-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "aca054e430a8f30e07cf3e4bc7a2903a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5934, "upload_time": "2019-11-04T12:50:35", "upload_time_iso_8601": "2019-11-04T12:50:35.685780Z", "url": "https://files.pythonhosted.org/packages/82/0a/5d1306bb4f9cfd02a604fb79fc8579e220c59f1011dc18a4b06f44cb99cf/prometheus_sanic-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65b5673059094b2e557cf5ffceda105d", "sha256": "f0e4688924467fe06b84b85c2849e85b1e5cfe51afceabecbc131fa60f9677df"}, "downloads": -1, "filename": "prometheus-sanic-0.2.0.tar.gz", "has_sig": false, "md5_digest": "65b5673059094b2e557cf5ffceda105d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5890, "upload_time": "2019-11-04T12:50:38", "upload_time_iso_8601": "2019-11-04T12:50:38.038787Z", "url": "https://files.pythonhosted.org/packages/c9/ca/ac6d003c91b4ce1852dc2878bce0d81ba0b2b985d7cb7ae8f8fc9963ff5f/prometheus-sanic-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "01b967d5edf1097a462726cab19c56a4", "sha256": "3a8c3d30c4151986b2bfd35625896d6ab040cfadbcef5ea44a03d0cf011bd1b5"}, "downloads": -1, "filename": "prometheus_sanic-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "01b967d5edf1097a462726cab19c56a4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5939, "upload_time": "2019-11-04T13:28:10", "upload_time_iso_8601": "2019-11-04T13:28:10.565044Z", "url": "https://files.pythonhosted.org/packages/18/0c/8e769b56e757695b48d4930adb68286d7e98d88e1d1e2369b15281c85a3d/prometheus_sanic-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49f6c0e3a8501d854b43739e1ffa3e58", "sha256": "e4a6d51f7f11998983ec8f459bc5c8f526ff506381d108338073b5524d641f1c"}, "downloads": -1, "filename": "prometheus-sanic-0.2.1.tar.gz", "has_sig": false, "md5_digest": "49f6c0e3a8501d854b43739e1ffa3e58", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5801, "upload_time": "2019-11-04T13:28:12", "upload_time_iso_8601": "2019-11-04T13:28:12.517491Z", "url": "https://files.pythonhosted.org/packages/7a/fb/1719e6033c99ac1b9cc4e956be64b8d6fa7aa83a5031553b2d93fd876052/prometheus-sanic-0.2.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "ce19432ebd36124fae2e672acfddab9e", "sha256": "7dd62b1a6ca2df5005467e0d2cb70060f1327bc7bef3b2ccd10171e4da780ea8"}, "downloads": -1, "filename": "prometheus_sanic-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ce19432ebd36124fae2e672acfddab9e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 7746, "upload_time": "2019-11-04T17:04:38", "upload_time_iso_8601": "2019-11-04T17:04:38.285461Z", "url": "https://files.pythonhosted.org/packages/0b/e6/a96f9de71de168a85523986c6a59e5f9f2470f63da5161b6274dcef74bf9/prometheus_sanic-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "71d96c6094ef7d938275e7bbcbdc13e4", "sha256": "afde6f17419ba8fcfefa3b0b2221eba4e50c475fc08a4ca651fe11094902ea79"}, "downloads": -1, "filename": "prometheus-sanic-1.0.0.tar.gz", "has_sig": false, "md5_digest": "71d96c6094ef7d938275e7bbcbdc13e4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 7407, "upload_time": "2019-11-04T17:04:36", "upload_time_iso_8601": "2019-11-04T17:04:36.533816Z", "url": "https://files.pythonhosted.org/packages/a8/09/c89c17192d3b85c49e05559f24d161e26c11da476e70219179da0cbcf7e6/prometheus-sanic-1.0.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "b04eca79f86a664cb174080d89a6d3ed", "sha256": "bb24c66a706d960aa8d56948cfad522bfeba7cb30ef3fff5e7cf44510f44088f"}, "downloads": -1, "filename": "prometheus_sanic-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b04eca79f86a664cb174080d89a6d3ed", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 8613, "upload_time": "2020-01-26T19:54:57", "upload_time_iso_8601": "2020-01-26T19:54:57.743917Z", "url": "https://files.pythonhosted.org/packages/1c/98/7440e9c4f3e910dbcaf6a7713013dd8a4176f748ff0c74dd862abe810955/prometheus_sanic-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31663b8c9b681ab3bc796a177a1d3636", "sha256": "6d122c76b82f83e3d9c28d73f6e355d5866cf5205dd937a13c7794c3256790fe"}, "downloads": -1, "filename": "prometheus-sanic-2.0.0.tar.gz", "has_sig": false, "md5_digest": "31663b8c9b681ab3bc796a177a1d3636", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 9395, "upload_time": "2020-01-26T19:54:55", "upload_time_iso_8601": "2020-01-26T19:54:55.815433Z", "url": "https://files.pythonhosted.org/packages/6d/2e/91de6bcb3143380385095f6add0de1178c7554c12ecc92c4be0ba4cabe9e/prometheus-sanic-2.0.0.tar.gz", "yanked": false}], "2.0.0a1": [{"comment_text": "", "digests": {"md5": "22131724a8786299dbe369c551622bd3", "sha256": "e8b85819181f3a2ad8517136810610f611693d93b1a8e0f44424484b075965ba"}, "downloads": -1, "filename": "prometheus_sanic-2.0.0a1-py3-none-any.whl", "has_sig": false, "md5_digest": "22131724a8786299dbe369c551622bd3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 8609, "upload_time": "2019-12-10T09:27:52", "upload_time_iso_8601": "2019-12-10T09:27:52.995378Z", "url": "https://files.pythonhosted.org/packages/22/6e/1da9aca4005d15e3c05343fd9c6b23766863ce3a24cee3a836621209dac3/prometheus_sanic-2.0.0a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe4d60d809fd32d8909938010d30c740", "sha256": "c2bfca87458215619f34ad611b2cc92f176e5e85c08f4804f02902530c4416b7"}, "downloads": -1, "filename": "prometheus-sanic-2.0.0a1.tar.gz", "has_sig": false, "md5_digest": "fe4d60d809fd32d8909938010d30c740", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 7900, "upload_time": "2019-12-10T09:27:50", "upload_time_iso_8601": "2019-12-10T09:27:50.882802Z", "url": "https://files.pythonhosted.org/packages/db/ab/163a58a2b6171b96005944b8d642be275aed6ead49cc322f50f3261430e1/prometheus-sanic-2.0.0a1.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "dfca9876336a4bc421891a1fcdd4f654", "sha256": "94042b28e710c5cca2a3ee32e3480e9f1e164eb13e64ffb2eb2aa764935482eb"}, "downloads": -1, "filename": "prometheus_sanic-2.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "dfca9876336a4bc421891a1fcdd4f654", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 8639, "upload_time": "2020-04-16T12:11:49", "upload_time_iso_8601": "2020-04-16T12:11:49.586144Z", "url": "https://files.pythonhosted.org/packages/3d/41/4c5b38a4a1f34eb3648016209af405849350f4b79f55691e7362431dd265/prometheus_sanic-2.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "908c0a00392d023fb0058ebeee47ac67", "sha256": "a43ad113bd01c52293f2415b67911c03babb04770b8f269c78eb43c9a49933a8"}, "downloads": -1, "filename": "prometheus-sanic-2.1.0.tar.gz", "has_sig": false, "md5_digest": "908c0a00392d023fb0058ebeee47ac67", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 9422, "upload_time": "2020-04-16T12:11:47", "upload_time_iso_8601": "2020-04-16T12:11:47.894436Z", "url": "https://files.pythonhosted.org/packages/f8/1b/77ea0322ad162a57b88ca23165c8c83cd316f9ed179fbb476bbc7073ec7f/prometheus-sanic-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "9aa1532c5e021ecff5236402d094f466", "sha256": "b5d45be586aaf00c46618ce5d13b7c9897735effdefe4c1f149225ed45b57287"}, "downloads": -1, "filename": "prometheus_sanic-2.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9aa1532c5e021ecff5236402d094f466", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 8642, "upload_time": "2020-04-16T12:17:06", "upload_time_iso_8601": "2020-04-16T12:17:06.946798Z", "url": "https://files.pythonhosted.org/packages/57/f0/50f344ef2fbe225a8c44870b3f15d50e329c0b0ef27737f71ec92a88d640/prometheus_sanic-2.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef50e59c120120d8c0517e1dfc1f2ffd", "sha256": "9f0dc8a3246c32cf66f0fa49598ef97166f20176b7bdf42d1d0d9509cbce3d3d"}, "downloads": -1, "filename": "prometheus-sanic-2.1.1.tar.gz", "has_sig": false, "md5_digest": "ef50e59c120120d8c0517e1dfc1f2ffd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 9425, "upload_time": "2020-04-16T12:17:05", "upload_time_iso_8601": "2020-04-16T12:17:05.532266Z", "url": "https://files.pythonhosted.org/packages/b2/64/0428cf41946df7fa9a4351a3371b27611cb27a3d15cf123f48be9ca87234/prometheus-sanic-2.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9aa1532c5e021ecff5236402d094f466", "sha256": "b5d45be586aaf00c46618ce5d13b7c9897735effdefe4c1f149225ed45b57287"}, "downloads": -1, "filename": "prometheus_sanic-2.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9aa1532c5e021ecff5236402d094f466", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 8642, "upload_time": "2020-04-16T12:17:06", "upload_time_iso_8601": "2020-04-16T12:17:06.946798Z", "url": "https://files.pythonhosted.org/packages/57/f0/50f344ef2fbe225a8c44870b3f15d50e329c0b0ef27737f71ec92a88d640/prometheus_sanic-2.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef50e59c120120d8c0517e1dfc1f2ffd", "sha256": "9f0dc8a3246c32cf66f0fa49598ef97166f20176b7bdf42d1d0d9509cbce3d3d"}, "downloads": -1, "filename": "prometheus-sanic-2.1.1.tar.gz", "has_sig": false, "md5_digest": "ef50e59c120120d8c0517e1dfc1f2ffd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 9425, "upload_time": "2020-04-16T12:17:05", "upload_time_iso_8601": "2020-04-16T12:17:05.532266Z", "url": "https://files.pythonhosted.org/packages/b2/64/0428cf41946df7fa9a4351a3371b27611cb27a3d15cf123f48be9ca87234/prometheus-sanic-2.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:07 2020"}