{"info": {"author": "Rami Al-Rfou", "author_email": "rmyeid@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: C++", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Text Processing :: Linguistic"], "description": "# PYCLD2 - Python Bindings to CLD2\n\nPython bindings for the Compact Langauge Detect 2 (CLD2).\n\n[![Downloads](https://img.shields.io/pypi/dm/pycld2.svg)](https://pypi.python.org/pypi/pycld2)\n[![Latest version](https://img.shields.io/pypi/v/pycld2.svg)](https://pypi.python.org/pypi/pycld2)\n[![Supported Python versions](https://img.shields.io/pypi/pyversions/pycld2.svg)](https://pypi.python.org/pypi/pycld2)\n[![Development Status](https://img.shields.io/pypi/status/pycld2.svg)](https://pypi.python.org/pypi/pycld2)\n[![Download format](https://img.shields.io/pypi/format/pycld2.svg)](https://pypi.python.org/pypi/pycld2)\n[![Build status](https://travis-ci.org/aboSamoor/pycld2.png?branch=master)](https://travis-ci.org/aboSamoor/pycld2)\n\nThis package contains forks of:\n\n- The [`cld2` C++ library](https://github.com/CLD2Owners/cld2), developed by Dick Sites\n- The [`chromium-compact-language-detector` C++ extension module](https://github.com/mikemccand/chromium-compact-language-detector),\n  originally created by Mike McCandless, which has been modified post-fork.\n  These bindings, among other changes, make the support of over 165 languages\n  the default.\n\nThe goal of this project is to consolidate the upstream library with its bindings, so the user can `pip install` one package instead of two.\n\nThe LICENSE is the same as Chromium's LICENSE and is included in the\nLICENSE file for reference.\n\n## Installing\n\n```bash\n$ python -m pip install -U pycld2\n```\n\n## Example\n\n```python\nimport pycld2 as cld2\n\nisReliable, textBytesFound, details = cld2.detect(\n    \"\u0430 \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430 \u0434\u043d \u043d\u0430\u0437\u0430\u0434\"\n)\n\nprint(isReliable)\n# True\ndetails[0]\n# ('RUSSIAN', 'ru', 98, 404.0)\n\nfr_en_Latn = \"\"\"\\\nFrance is the largest country in Western Europe and the third-largest in Europe as a whole.\nA acc\u00e8s aux chiens et aux frontaux qui lui ont \u00e9t\u00e9 il peut consulter et modifier ses collections\net exporter Cet article concerne le pays europ\u00e9en aujourd\u2019hui appel\u00e9 R\u00e9publique fran\u00e7aise.\nPour d\u2019autres usages du nom France, Pour une aide rapide et effective, veuiller trouver votre aide\ndans le menu ci-dessus.\nMotoring events began soon after the construction of the first successful gasoline-fueled automobiles.\nThe quick brown fox jumped over the lazy dog.\"\"\"\n\nisReliable, textBytesFound, details, vectors = cld2.detect(\n    fr_en_Latn, returnVectors=True\n)\nprint(vectors)\n# ((0, 94, 'ENGLISH', 'en'), (94, 329, 'FRENCH', 'fr'), (423, 139, 'ENGLISH', 'en'))\n```\n\n## API\n\nThis package exports one function, `detect()`. See `help(detect)` for the full docstring.\n\nThe first parameter (`utf8Bytes`) is the text for which you want to detect language.\n\n`utf8Bytes` may be either:\n\n- `str` (example: `\"\u00bc cup of flour\"`)\n- `bytes` that have been encoded using UTF-8 (example: `\"\u00bc cup of flour\".encode(\"utf-8\")`)\n\nBytes that are *not* UTF-8 encoded will raise a `pycld2.error`.  For example, passing\nb\"\\xbc cup of flour\" (which is `\"\u00bc cup of flour\".encode(\"latin-1\")`) will raise.\n\nAll other parameters are optional:\n\n| Parameter | Type/Default | Use |\n| --------- | ------------ | --- |\n| `utf8Bytes` | `str` or `bytes`\\* | The text to detect language for. |\n| `isPlainText` | `bool`, default `False` | If `False`, then the input is HTML and CLD will skip HTML tags, expand HTML entities, detect HTML `<lang ...>` tags, etc. |\n| `hintTopLevelDomain` | `str` | E.g., `'id'` boosts Indonesian. |\n| `hintLanguage` | `str` | E.g., `'ITALIAN'` or `'it'` boosts Italian; see `cld.LANGUAGES` for all known languages. |\n| `hintLanguageHTTPHeaders` | `str` | E.g., `'mi,en'` boosts Maori and English. |\n| `hintEncoding` | `str` | E.g, `'SJS'` boosts Japanese; see `cld.ENCODINGS` for all known encodings. |\n| `returnVectors` |  `bool`, default `False` | If `True`, then the vectors indicating which language was detected in which byte range are returned in addition to details.  The vectors are a sequence of `(bytesOffset, bytesLength, languageName, languageCode)`, in order. `bytesOffset` is the start of the vector, `bytesLength `is the length of the vector.  Note that there is some added CPU cost if this is True.  (Approx. 2x performance hit.) |\n| `debugScoreAsQuads` | `bool`, default `False` | Normally, several languages are detected solely by their Unicode script.  Combined with appropritate lookup tables, this flag forces them instead to be detected via quadgrams. This can be a useful refinement when looking for meaningful text in these languages, instead of just character sets. The default tables do not support this use. |\n| `debugHTML` | `bool`, default `False` | For each detection call, write an HTML file to stderr, showing the text chunks and their detected languages. See `cld2/docs/InterpretingCLD2UnitTestOutput.pdf` to interpret this output. |\n| `debugCR` | `bool`, default `False` | In that HTML file, force a new line for each chunk. |\n| `debugVerbose` | `bool`, default `False` | In that HTML file, show every lookup entry. |\n| `debugQuiet` | `bool`, default `False` | In that HTML file, suppress most of the output detail. |\n| `debugEcho` | `bool`, default `False` | Echo every input buffer to stderr. |\n| `bestEffort` | `bool`, default `False` | If `True`, then allow low-quality results for short text, rather than forcing the result to `\"UNKNOWN_LANGUAGE\"`.  This may be of use for those desiring approximate results on short input text, but there is no claim that these result are very good. |\n\n<sup>\\*If `bytes`, must be UTF-8 encoded bytes.</sup>\n\n## Constants\n\nThis package exports these global constants:\n\n| Constant | Description |\n| -------- | ----------- |\n| `pycld2.ENCODINGS` | list of the encoding names CLD recognizes (if you provide `hintEncoding`, it must be one of these names). |\n| `pycld2.LANGUAGES` | list of languages and their codes (if you provide `hintLanguageCode`, it must be one of the codes from these codes). |\n| `pycld2.EXTERNAL_LANGUAGES` | list of external languages and their codes. |\n| `pycld2.DETECTED_LANGUAGES` | list of all detectable languages. |\n\n## What About CLD3?\n\nPython bindings for [CLD3](https://github.com/google/cld3/) are available as a separate project, [`pycld3`](https://github.com/bsolomon1124/pycld3).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aboSamoor/pycld2", "keywords": "", "license": "Apache2", "maintainer": "Brad Solomon", "maintainer_email": "brad.solomon.1124@gmail.com", "name": "pycld2", "package_url": "https://pypi.org/project/pycld2/", "platform": "", "project_url": "https://pypi.org/project/pycld2/", "project_urls": {"Homepage": "https://github.com/aboSamoor/pycld2"}, "release_url": "https://pypi.org/project/pycld2/0.41/", "requires_dist": null, "requires_python": "", "summary": "Python bindings around Google Chromium's embedded compact language detection library (CLD2)", "version": "0.41", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PYCLD2 - Python Bindings to CLD2</h1>\n<p>Python bindings for the Compact Langauge Detect 2 (CLD2).</p>\n<p><a href=\"https://pypi.python.org/pypi/pycld2\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/df37c4603f8d3d792e46595f3ea91c1968307f71/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f7079636c64322e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pycld2\" rel=\"nofollow\"><img alt=\"Latest version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aeeeeaa7fb01ff94bedc2b32eb058edf668dfa59/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079636c64322e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pycld2\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/27537e619bdd31a4beeac4806fd21e36c1bfd032/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7079636c64322e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pycld2\" rel=\"nofollow\"><img alt=\"Development Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ccc621b5db12f02735813e20a243ad1715f3901d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f7079636c64322e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pycld2\" rel=\"nofollow\"><img alt=\"Download format\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b53a07dea5d4cc34e647c249ba9f9dd1d3c99202/68747470733a2f2f696d672e736869656c64732e696f2f707970692f666f726d61742f7079636c64322e737667\"></a>\n<a href=\"https://travis-ci.org/aboSamoor/pycld2\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/91af89b5eabc638159f9ceff41e82982d9739b47/68747470733a2f2f7472617669732d63692e6f72672f61626f53616d6f6f722f7079636c64322e706e673f6272616e63683d6d6173746572\"></a></p>\n<p>This package contains forks of:</p>\n<ul>\n<li>The <a href=\"https://github.com/CLD2Owners/cld2\" rel=\"nofollow\"><code>cld2</code> C++ library</a>, developed by Dick Sites</li>\n<li>The <a href=\"https://github.com/mikemccand/chromium-compact-language-detector\" rel=\"nofollow\"><code>chromium-compact-language-detector</code> C++ extension module</a>,\noriginally created by Mike McCandless, which has been modified post-fork.\nThese bindings, among other changes, make the support of over 165 languages\nthe default.</li>\n</ul>\n<p>The goal of this project is to consolidate the upstream library with its bindings, so the user can <code>pip install</code> one package instead of two.</p>\n<p>The LICENSE is the same as Chromium's LICENSE and is included in the\nLICENSE file for reference.</p>\n<h2>Installing</h2>\n<pre>$ python -m pip install -U pycld2\n</pre>\n<h2>Example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pycld2</span> <span class=\"k\">as</span> <span class=\"nn\">cld2</span>\n\n<span class=\"n\">isReliable</span><span class=\"p\">,</span> <span class=\"n\">textBytesFound</span><span class=\"p\">,</span> <span class=\"n\">details</span> <span class=\"o\">=</span> <span class=\"n\">cld2</span><span class=\"o\">.</span><span class=\"n\">detect</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"\u0430 \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0430 \u0434\u043d \u043d\u0430\u0437\u0430\u0434\"</span>\n<span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">isReliable</span><span class=\"p\">)</span>\n<span class=\"c1\"># True</span>\n<span class=\"n\">details</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"c1\"># ('RUSSIAN', 'ru', 98, 404.0)</span>\n\n<span class=\"n\">fr_en_Latn</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span><span class=\"se\">\\</span>\n<span class=\"s2\">France is the largest country in Western Europe and the third-largest in Europe as a whole.</span>\n<span class=\"s2\">A acc\u00e8s aux chiens et aux frontaux qui lui ont \u00e9t\u00e9 il peut consulter et modifier ses collections</span>\n<span class=\"s2\">et exporter Cet article concerne le pays europ\u00e9en aujourd\u2019hui appel\u00e9 R\u00e9publique fran\u00e7aise.</span>\n<span class=\"s2\">Pour d\u2019autres usages du nom France, Pour une aide rapide et effective, veuiller trouver votre aide</span>\n<span class=\"s2\">dans le menu ci-dessus.</span>\n<span class=\"s2\">Motoring events began soon after the construction of the first successful gasoline-fueled automobiles.</span>\n<span class=\"s2\">The quick brown fox jumped over the lazy dog.\"\"\"</span>\n\n<span class=\"n\">isReliable</span><span class=\"p\">,</span> <span class=\"n\">textBytesFound</span><span class=\"p\">,</span> <span class=\"n\">details</span><span class=\"p\">,</span> <span class=\"n\">vectors</span> <span class=\"o\">=</span> <span class=\"n\">cld2</span><span class=\"o\">.</span><span class=\"n\">detect</span><span class=\"p\">(</span>\n    <span class=\"n\">fr_en_Latn</span><span class=\"p\">,</span> <span class=\"n\">returnVectors</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">vectors</span><span class=\"p\">)</span>\n<span class=\"c1\"># ((0, 94, 'ENGLISH', 'en'), (94, 329, 'FRENCH', 'fr'), (423, 139, 'ENGLISH', 'en'))</span>\n</pre>\n<h2>API</h2>\n<p>This package exports one function, <code>detect()</code>. See <code>help(detect)</code> for the full docstring.</p>\n<p>The first parameter (<code>utf8Bytes</code>) is the text for which you want to detect language.</p>\n<p><code>utf8Bytes</code> may be either:</p>\n<ul>\n<li><code>str</code> (example: <code>\"\u00bc cup of flour\"</code>)</li>\n<li><code>bytes</code> that have been encoded using UTF-8 (example: <code>\"\u00bc cup of flour\".encode(\"utf-8\")</code>)</li>\n</ul>\n<p>Bytes that are <em>not</em> UTF-8 encoded will raise a <code>pycld2.error</code>.  For example, passing\nb\"\\xbc cup of flour\" (which is <code>\"\u00bc cup of flour\".encode(\"latin-1\")</code>) will raise.</p>\n<p>All other parameters are optional:</p>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type/Default</th>\n<th>Use</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>utf8Bytes</code></td>\n<td><code>str</code> or <code>bytes</code>*</td>\n<td>The text to detect language for.</td>\n</tr>\n<tr>\n<td><code>isPlainText</code></td>\n<td><code>bool</code>, default <code>False</code></td>\n<td>If <code>False</code>, then the input is HTML and CLD will skip HTML tags, expand HTML entities, detect HTML <code>&lt;lang ...&gt;</code> tags, etc.</td>\n</tr>\n<tr>\n<td><code>hintTopLevelDomain</code></td>\n<td><code>str</code></td>\n<td>E.g., <code>'id'</code> boosts Indonesian.</td>\n</tr>\n<tr>\n<td><code>hintLanguage</code></td>\n<td><code>str</code></td>\n<td>E.g., <code>'ITALIAN'</code> or <code>'it'</code> boosts Italian; see <code>cld.LANGUAGES</code> for all known languages.</td>\n</tr>\n<tr>\n<td><code>hintLanguageHTTPHeaders</code></td>\n<td><code>str</code></td>\n<td>E.g., <code>'mi,en'</code> boosts Maori and English.</td>\n</tr>\n<tr>\n<td><code>hintEncoding</code></td>\n<td><code>str</code></td>\n<td>E.g, <code>'SJS'</code> boosts Japanese; see <code>cld.ENCODINGS</code> for all known encodings.</td>\n</tr>\n<tr>\n<td><code>returnVectors</code></td>\n<td><code>bool</code>, default <code>False</code></td>\n<td>If <code>True</code>, then the vectors indicating which language was detected in which byte range are returned in addition to details.  The vectors are a sequence of <code>(bytesOffset, bytesLength, languageName, languageCode)</code>, in order. <code>bytesOffset</code> is the start of the vector, <code>bytesLength</code>is the length of the vector.  Note that there is some added CPU cost if this is True.  (Approx. 2x performance hit.)</td>\n</tr>\n<tr>\n<td><code>debugScoreAsQuads</code></td>\n<td><code>bool</code>, default <code>False</code></td>\n<td>Normally, several languages are detected solely by their Unicode script.  Combined with appropritate lookup tables, this flag forces them instead to be detected via quadgrams. This can be a useful refinement when looking for meaningful text in these languages, instead of just character sets. The default tables do not support this use.</td>\n</tr>\n<tr>\n<td><code>debugHTML</code></td>\n<td><code>bool</code>, default <code>False</code></td>\n<td>For each detection call, write an HTML file to stderr, showing the text chunks and their detected languages. See <code>cld2/docs/InterpretingCLD2UnitTestOutput.pdf</code> to interpret this output.</td>\n</tr>\n<tr>\n<td><code>debugCR</code></td>\n<td><code>bool</code>, default <code>False</code></td>\n<td>In that HTML file, force a new line for each chunk.</td>\n</tr>\n<tr>\n<td><code>debugVerbose</code></td>\n<td><code>bool</code>, default <code>False</code></td>\n<td>In that HTML file, show every lookup entry.</td>\n</tr>\n<tr>\n<td><code>debugQuiet</code></td>\n<td><code>bool</code>, default <code>False</code></td>\n<td>In that HTML file, suppress most of the output detail.</td>\n</tr>\n<tr>\n<td><code>debugEcho</code></td>\n<td><code>bool</code>, default <code>False</code></td>\n<td>Echo every input buffer to stderr.</td>\n</tr>\n<tr>\n<td><code>bestEffort</code></td>\n<td><code>bool</code>, default <code>False</code></td>\n<td>If <code>True</code>, then allow low-quality results for short text, rather than forcing the result to <code>\"UNKNOWN_LANGUAGE\"</code>.  This may be of use for those desiring approximate results on short input text, but there is no claim that these result are very good.</td>\n</tr></tbody></table>\n<p><sup>*If <code>bytes</code>, must be UTF-8 encoded bytes.</sup></p>\n<h2>Constants</h2>\n<p>This package exports these global constants:</p>\n<table>\n<thead>\n<tr>\n<th>Constant</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>pycld2.ENCODINGS</code></td>\n<td>list of the encoding names CLD recognizes (if you provide <code>hintEncoding</code>, it must be one of these names).</td>\n</tr>\n<tr>\n<td><code>pycld2.LANGUAGES</code></td>\n<td>list of languages and their codes (if you provide <code>hintLanguageCode</code>, it must be one of the codes from these codes).</td>\n</tr>\n<tr>\n<td><code>pycld2.EXTERNAL_LANGUAGES</code></td>\n<td>list of external languages and their codes.</td>\n</tr>\n<tr>\n<td><code>pycld2.DETECTED_LANGUAGES</code></td>\n<td>list of all detectable languages.</td>\n</tr></tbody></table>\n<h2>What About CLD3?</h2>\n<p>Python bindings for <a href=\"https://github.com/google/cld3/\" rel=\"nofollow\">CLD3</a> are available as a separate project, <a href=\"https://github.com/bsolomon1124/pycld3\" rel=\"nofollow\"><code>pycld3</code></a>.</p>\n\n          </div>"}, "last_serial": 5972065, "releases": {"0.23": [{"comment_text": "", "digests": {"md5": "a26c200a53ba8127901720fd488e158d", "sha256": "8f252c70576abd742f11e32feb9778bb97c8e82b66020bd56bea3e1f196817ae"}, "downloads": -1, "filename": "pycld2-0.23.tar.gz", "has_sig": false, "md5_digest": "a26c200a53ba8127901720fd488e158d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14330411, "upload_time": "2015-03-03T16:50:08", "upload_time_iso_8601": "2015-03-03T16:50:08.156761Z", "url": "https://files.pythonhosted.org/packages/49/02/bd1932e947f18cc54cc8937f21f6a78aee84610a9f6bae2f7923b585d878/pycld2-0.23.tar.gz", "yanked": false}], "0.24": [{"comment_text": "", "digests": {"md5": "cdc96c67c4be2a2feb1b3fa73b4a84a0", "sha256": "b230c4b9e2e910f033c058ae88d8746dc0d4dbf2370b2f1766f422417c27b76b"}, "downloads": -1, "filename": "pycld2-0.24.tar.gz", "has_sig": false, "md5_digest": "cdc96c67c4be2a2feb1b3fa73b4a84a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14328085, "upload_time": "2015-03-03T17:05:41", "upload_time_iso_8601": "2015-03-03T17:05:41.823653Z", "url": "https://files.pythonhosted.org/packages/33/4d/8af30ec250274328df4829a89d28134218badd822f0536c2852ceefc6669/pycld2-0.24.tar.gz", "yanked": false}], "0.30": [{"comment_text": "", "digests": {"md5": "e068be7e7cfe211ead6aa30010925a99", "sha256": "a89b5d3562c00235726890bcd30ee30e382d3a56650994586a8f0c2c63aa8c93"}, "downloads": -1, "filename": "pycld2-0.30.tar.gz", "has_sig": false, "md5_digest": "e068be7e7cfe211ead6aa30010925a99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14333928, "upload_time": "2015-03-15T02:26:17", "upload_time_iso_8601": "2015-03-15T02:26:17.044649Z", "url": "https://files.pythonhosted.org/packages/7f/af/a23829c2dbd6f19f2c07f9f670dfaf061723154f00048e647020c3c5cc09/pycld2-0.30.tar.gz", "yanked": false}], "0.31": [{"comment_text": "", "digests": {"md5": "4949eaf68723300b3cc1c0324fa7b16d", "sha256": "7d0f51b1550a6f964409f55f02b1f784d59a0d1b2718efa87c14d43344078403"}, "downloads": -1, "filename": "pycld2-0.31.tar.gz", "has_sig": false, "md5_digest": "4949eaf68723300b3cc1c0324fa7b16d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14333187, "upload_time": "2015-03-15T02:51:16", "upload_time_iso_8601": "2015-03-15T02:51:16.016100Z", "url": "https://files.pythonhosted.org/packages/21/77/8525fe5f147bf2819c7c9942c717c4a79b83f8003da1a3847759fb560909/pycld2-0.31.tar.gz", "yanked": false}], "0.40": [{"comment_text": "", "digests": {"md5": "08c2862021aa3be1fa830a65046c6e5b", "sha256": "98da2bf94903a03ff5162dfe5aab71f3cd0c89f88197dc87b46c3478cabbf87f"}, "downloads": -1, "filename": "pycld2-0.40.tar.gz", "has_sig": false, "md5_digest": "08c2862021aa3be1fa830a65046c6e5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41401674, "upload_time": "2019-10-09T04:22:11", "upload_time_iso_8601": "2019-10-09T04:22:11.662079Z", "url": "https://files.pythonhosted.org/packages/19/8e/6427a3dd5f2605fbc2a41327400b4a86fc626e12fc6e593bf3cf5fd1863b/pycld2-0.40.tar.gz", "yanked": false}], "0.41": [{"comment_text": "", "digests": {"md5": "cff427c2cfa50bb9d11055a03a291042", "sha256": "a42f6e974df8fdd70685c2baa8a9f523069a260e1140ce604fb9f1fb6c3064df"}, "downloads": -1, "filename": "pycld2-0.41.tar.gz", "has_sig": false, "md5_digest": "cff427c2cfa50bb9d11055a03a291042", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41405351, "upload_time": "2019-10-14T15:23:39", "upload_time_iso_8601": "2019-10-14T15:23:39.130781Z", "url": "https://files.pythonhosted.org/packages/21/d2/8b0def84a53c88d0eb27c67b05269fbd16ad68df8c78849e7b5d65e6aec3/pycld2-0.41.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cff427c2cfa50bb9d11055a03a291042", "sha256": "a42f6e974df8fdd70685c2baa8a9f523069a260e1140ce604fb9f1fb6c3064df"}, "downloads": -1, "filename": "pycld2-0.41.tar.gz", "has_sig": false, "md5_digest": "cff427c2cfa50bb9d11055a03a291042", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41405351, "upload_time": "2019-10-14T15:23:39", "upload_time_iso_8601": "2019-10-14T15:23:39.130781Z", "url": "https://files.pythonhosted.org/packages/21/d2/8b0def84a53c88d0eb27c67b05269fbd16ad68df8c78849e7b5d65e6aec3/pycld2-0.41.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:25 2020"}