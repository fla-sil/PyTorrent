{"info": {"author": "Pu Anlai", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3 :: Only", "Topic :: Internet :: WWW/HTTP :: Browsers"], "description": "Well, \"manager\" might be stretching it a bit. The idea is not having to\nmanually look up and install updates when using a Chromium-like browser\nthat doesn't use the WebStore plugin to handle these things. This is\ndone by employing\n`this <https://developer.chrome.com/extensions/external_extensions#preferences>`__\nmethod which uses JSON preference files to point to local extension\npackages.\n\nInstallation\n------------\n\nIf you're on ArchLinux, you can install maninex via the Arch User Repository. Use your favorite AUR helper or simply git:\n\n::\n\n    git clone https://aur.archlinux.org/maninex.git\n    cd maninex\n    makepkg -sri\n\nOn other distros you can use pip to install maninex and handle dependencies (one: requests).\n::\n\n    pip install maninex\n\nManinex won't run on Python versions lower than 3.5.\n\nUsage\n-----\n\n::\n\n    usage: maninex [option]\n\n    options:\n      -h, --help        show this help message and exit\n      -c, --clean       clean up (i.e. remove) backed up extension files\n      -i, --install     install all extensions that aren't already installed\n      -l, --list        list all extensions and their current status\n      -p, --print-skel  print the contents of a skeleton config file to stdout\n      -r, --remove      remove all extensions that are installed but not in the\n                        config file\n      -s, --scan        scan for installed extensions not in the config file and\n                        add them to the config file\n      -u, --update      update all extensions\n\n    set up paths and extensions in maninex.conf\n\nManinex depends on a configuration file named \"maninex.conf\" for which\nit will look in three places: First in $XDG\\_CONFIG\\_HOME, then in\n$HOME/.config and finally in the same directory that the script is in.\n``maninex --print-skel`` prints out a base config file with some basic\ninstructions. Therefore, to get started you can run\n``maninex --print-skel > ~/.config/maninex.conf``.\n\nEdit maninex.conf and add extensions by their ids under the [extension]\nheader. You can use the scan option to add extensions you manually\ninstalled before (see below). To find out an extension's id, search for\nthe it on the `Chrome\nWebStore <https://chrome.google.com/webstore/category/extensions>`__.\nThe final part of the extension page's URL is the id. For example,\n`this <https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm>`__\nis the url of uBlock Origin and its id is therefore\n\"cjpalhdlnbpafiamejdnhcphjbkeiagm\". Every extension id should occupy one\nline under the [extension] header. Optionally you can prepend an\nidentifier for the extension like this:\n``uBlock Origin = cjpalhdlnbpafiamejdnhcphjbkeiagm``\n\nThis is recommended as it will make messages more descriptive, for\nexample ``Extension \"cjpalhdlnb\u2026\" installed.`` will become\n``Extension \"uBlock Origin\" installed.``\n\nRun ``maninex -i`` to install all the extensions in the config file. Run\n``maninex -u`` to look up and download updates.\n\nOther functionality\n-------------------\n\n--clean\n~~~~~~~\n\nThis will remove old extension files that were backed up during previous\nupdates.\n\n--list\n~~~~~~\n\nList all extensions in the config file and whether or not they are\ninstalled already.\n\n--scan\n~~~~~~\n\nScan the extension directory and add all extensions to the config file\nthat aren't included already.\n\n--remove\n~~~~~~~~\n\nThe opposite of scan. Remove all extensions that aren't included in the\nconfig file.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/InspectorMustache/maninex", "keywords": "chromium extension webstore inox iridium", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "maninex", "package_url": "https://pypi.org/project/maninex/", "platform": "", "project_url": "https://pypi.org/project/maninex/", "project_urls": {"Homepage": "https://github.com/InspectorMustache/maninex"}, "release_url": "https://pypi.org/project/maninex/0.4/", "requires_dist": ["requests"], "requires_python": ">=3.5", "summary": "An extension manager to replace Google's WebStore", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Well, \u201cmanager\u201d might be stretching it a bit. The idea is not having to\nmanually look up and install updates when using a Chromium-like browser\nthat doesn\u2019t use the WebStore plugin to handle these things. This is\ndone by employing\n<a href=\"https://developer.chrome.com/extensions/external_extensions#preferences\" rel=\"nofollow\">this</a>\nmethod which uses JSON preference files to point to local extension\npackages.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>If you\u2019re on ArchLinux, you can install maninex via the Arch User Repository. Use your favorite AUR helper or simply git:</p>\n<pre>git clone https://aur.archlinux.org/maninex.git\ncd maninex\nmakepkg -sri\n</pre>\n<p>On other distros you can use pip to install maninex and handle dependencies (one: requests).</p>\n<pre>pip install maninex\n</pre>\n<p>Maninex won\u2019t run on Python versions lower than 3.5.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>usage: maninex [option]\n\noptions:\n  -h, --help        show this help message and exit\n  -c, --clean       clean up (i.e. remove) backed up extension files\n  -i, --install     install all extensions that aren't already installed\n  -l, --list        list all extensions and their current status\n  -p, --print-skel  print the contents of a skeleton config file to stdout\n  -r, --remove      remove all extensions that are installed but not in the\n                    config file\n  -s, --scan        scan for installed extensions not in the config file and\n                    add them to the config file\n  -u, --update      update all extensions\n\nset up paths and extensions in maninex.conf\n</pre>\n<p>Maninex depends on a configuration file named \u201cmaninex.conf\u201d for which\nit will look in three places: First in $XDG_CONFIG_HOME, then in\n$HOME/.config and finally in the same directory that the script is in.\n<tt>maninex <span class=\"pre\">--print-skel</span></tt> prints out a base config file with some basic\ninstructions. Therefore, to get started you can run\n<tt>maninex <span class=\"pre\">--print-skel</span> &gt; <span class=\"pre\">~/.config/maninex.conf</span></tt>.</p>\n<p>Edit maninex.conf and add extensions by their ids under the [extension]\nheader. You can use the scan option to add extensions you manually\ninstalled before (see below). To find out an extension\u2019s id, search for\nthe it on the <a href=\"https://chrome.google.com/webstore/category/extensions\" rel=\"nofollow\">Chrome\nWebStore</a>.\nThe final part of the extension page\u2019s URL is the id. For example,\n<a href=\"https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm\" rel=\"nofollow\">this</a>\nis the url of uBlock Origin and its id is therefore\n\u201ccjpalhdlnbpafiamejdnhcphjbkeiagm\u201d. Every extension id should occupy one\nline under the [extension] header. Optionally you can prepend an\nidentifier for the extension like this:\n<tt>uBlock Origin = cjpalhdlnbpafiamejdnhcphjbkeiagm</tt></p>\n<p>This is recommended as it will make messages more descriptive, for\nexample <tt>Extension \"cjpalhdlnb\u2026\" installed.</tt> will become\n<tt>Extension \"uBlock Origin\" installed.</tt></p>\n<p>Run <tt>maninex <span class=\"pre\">-i</span></tt> to install all the extensions in the config file. Run\n<tt>maninex <span class=\"pre\">-u</span></tt> to look up and download updates.</p>\n</div>\n<div id=\"other-functionality\">\n<h2>Other functionality</h2>\n<div id=\"clean\">\n<h3>\u2013clean</h3>\n<p>This will remove old extension files that were backed up during previous\nupdates.</p>\n</div>\n<div id=\"list\">\n<h3>\u2013list</h3>\n<p>List all extensions in the config file and whether or not they are\ninstalled already.</p>\n</div>\n<div id=\"scan\">\n<h3>\u2013scan</h3>\n<p>Scan the extension directory and add all extensions to the config file\nthat aren\u2019t included already.</p>\n</div>\n<div id=\"remove\">\n<h3>\u2013remove</h3>\n<p>The opposite of scan. Remove all extensions that aren\u2019t included in the\nconfig file.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3679220, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "33cee9e720d9ae2981a3cf9ee04c72be", "sha256": "abae4220ef5256cb4820e3c99f56bd0992619ff7bfb17c98daa13b268d3652f1"}, "downloads": -1, "filename": "maninex-0.1-py3-none-any.whl", "has_sig": true, "md5_digest": "33cee9e720d9ae2981a3cf9ee04c72be", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.3", "size": 8714, "upload_time": "2017-10-04T16:00:57", "upload_time_iso_8601": "2017-10-04T16:00:57.684315Z", "url": "https://files.pythonhosted.org/packages/fb/c6/cfd7b4f5cf5bdf9fb7cc54add36fa0f46a0b165de960f93e5dc595e70a2b/maninex-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9f4b60f90a0d36ca016a8d58d5a2d4a", "sha256": "7134a914cb4da7a49c5947768008146e467dff8fd16ebf593d3d6c362f024627"}, "downloads": -1, "filename": "maninex-0.1.tar.gz", "has_sig": true, "md5_digest": "a9f4b60f90a0d36ca016a8d58d5a2d4a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 6289, "upload_time": "2017-10-04T16:01:01", "upload_time_iso_8601": "2017-10-04T16:01:01.535904Z", "url": "https://files.pythonhosted.org/packages/a6/9d/9b33b73fae4dc90dfd8776508a1a7c130f0ad6e5fc536a8bc6a09d1da4b4/maninex-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "9844db7fd4b1f91f7289cc5a4d6ee651", "sha256": "694cd3bc868fe49fbfec5f677657f4f57701110375065d48141d46929492cd25"}, "downloads": -1, "filename": "maninex-0.1.1-py3-none-any.whl", "has_sig": true, "md5_digest": "9844db7fd4b1f91f7289cc5a4d6ee651", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.3", "size": 9740, "upload_time": "2017-10-05T16:24:23", "upload_time_iso_8601": "2017-10-05T16:24:23.909826Z", "url": "https://files.pythonhosted.org/packages/ed/09/690ffdccc6468c8f1887671a6ec9aeb2ba0799dfea89638d058aa177592f/maninex-0.1.1-py3-none-any.whl", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "b1fd3014008fb0fa8096716c92261055", "sha256": "d34756b2663d79fe9db41460fc6a1c2f7b6ebe46a1b48e10528c61251bd7077b"}, "downloads": -1, "filename": "maninex-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b1fd3014008fb0fa8096716c92261055", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.3", "size": 9801, "upload_time": "2017-12-23T00:42:13", "upload_time_iso_8601": "2017-12-23T00:42:13.448752Z", "url": "https://files.pythonhosted.org/packages/84/19/d60580fb3ade0d429d194e26cd861bbd931d02af08476dfd63038b11a32e/maninex-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e90091047169014620a2e04164374482", "sha256": "ebe0937562d16f8d4f081b88808fbf31c411566263f458de5ec4e301ae6322a0"}, "downloads": -1, "filename": "maninex-0.2.tar.gz", "has_sig": true, "md5_digest": "e90091047169014620a2e04164374482", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 7029, "upload_time": "2017-12-23T00:42:17", "upload_time_iso_8601": "2017-12-23T00:42:17.111147Z", "url": "https://files.pythonhosted.org/packages/de/ee/e502263280fe3460d22ea925933274484e9b56f5ff49aeff5e9e274a8b79/maninex-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "9c328f0a95aa26680df72f1425b97856", "sha256": "f2bac32bfda4f3525381df3c386b17cb7a48b4c9e01cc05f5233b245908f8a4b"}, "downloads": -1, "filename": "maninex-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9c328f0a95aa26680df72f1425b97856", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.3", "size": 9891, "upload_time": "2018-01-27T13:29:49", "upload_time_iso_8601": "2018-01-27T13:29:49.176326Z", "url": "https://files.pythonhosted.org/packages/5b/2b/884aaa33ee96aad719828491f2529f5b14725463e643c0b2ef15c13d01f9/maninex-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7be996184f64dd8add128000ecd8903e", "sha256": "536e1c6cd6e8ef07b4a54c365d0d851f1c712332b0770fb3855a24326eeb65d6"}, "downloads": -1, "filename": "maninex-0.3.tar.gz", "has_sig": true, "md5_digest": "7be996184f64dd8add128000ecd8903e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 7103, "upload_time": "2018-01-27T13:29:50", "upload_time_iso_8601": "2018-01-27T13:29:50.356095Z", "url": "https://files.pythonhosted.org/packages/82/0a/cd28b1c311446d7b3c8c19af36448415e6477a63644b6a3a68d806436b84/maninex-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "286e7dd0a45566bb530094df07e5c179", "sha256": "2529c3266ae1dd4fdae27fc9543f40b41370a05187aa400fe2210533c86172d1"}, "downloads": -1, "filename": "maninex-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "286e7dd0a45566bb530094df07e5c179", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 10138, "upload_time": "2018-03-17T17:38:19", "upload_time_iso_8601": "2018-03-17T17:38:19.464444Z", "url": "https://files.pythonhosted.org/packages/08/1c/07eae2896fdab392bed60c534e04c4b03aa1fbf5c97bcdb6ba95b685d620/maninex-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "422d9fe2bec4efd5d18ed13fdf494e79", "sha256": "bbd0db10117ed9ad2b86ae20ee813ec672a1508e5099b4bc937a3e0cf11e68aa"}, "downloads": -1, "filename": "maninex-0.4.tar.gz", "has_sig": true, "md5_digest": "422d9fe2bec4efd5d18ed13fdf494e79", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7254, "upload_time": "2018-03-17T17:38:20", "upload_time_iso_8601": "2018-03-17T17:38:20.956619Z", "url": "https://files.pythonhosted.org/packages/3e/a7/432ac767595f1a24d8e2860f71aa3097ca24e01e2daebee6ebffa94eb820/maninex-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "286e7dd0a45566bb530094df07e5c179", "sha256": "2529c3266ae1dd4fdae27fc9543f40b41370a05187aa400fe2210533c86172d1"}, "downloads": -1, "filename": "maninex-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "286e7dd0a45566bb530094df07e5c179", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 10138, "upload_time": "2018-03-17T17:38:19", "upload_time_iso_8601": "2018-03-17T17:38:19.464444Z", "url": "https://files.pythonhosted.org/packages/08/1c/07eae2896fdab392bed60c534e04c4b03aa1fbf5c97bcdb6ba95b685d620/maninex-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "422d9fe2bec4efd5d18ed13fdf494e79", "sha256": "bbd0db10117ed9ad2b86ae20ee813ec672a1508e5099b4bc937a3e0cf11e68aa"}, "downloads": -1, "filename": "maninex-0.4.tar.gz", "has_sig": true, "md5_digest": "422d9fe2bec4efd5d18ed13fdf494e79", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7254, "upload_time": "2018-03-17T17:38:20", "upload_time_iso_8601": "2018-03-17T17:38:20.956619Z", "url": "https://files.pythonhosted.org/packages/3e/a7/432ac767595f1a24d8e2860f71aa3097ca24e01e2daebee6ebffa94eb820/maninex-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:31 2020"}