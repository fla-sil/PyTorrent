{"info": {"author": "Rocksci", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Financial and Insurance Industry", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.7", "Topic :: Office/Business :: Financial"], "description": "# async_blp\n\n[![Build Status](https://travis-ci.com/rockscie/async_blp.svg?branch=master)](https://travis-ci.com/rockscie/async_blp)\n\n## Overview\n\nThe goal of `async_blp` is to create simple and fast Bloomberg Open API wrapper that can be used in highload environments. \nIt allows asynchronous processing of hundreds of \nBloomberg request simultaneously. Currently `async_blp` provides support for reference and historical data, \ninstruments lookup and field search, as well as subscriptions.\nMore request types will be added in the future.\n\n## Features\n\n- *Fast*. Using `asyncio` allows to process Bloomberg requests simultaneously while creating little overhead\n- *Simple*. `async_blp` takes care of creating and managing Bloomberg sessions as well as of parsing responses\n- *User-friendly output*. Data is returned as a `pandas.DataFrame` object\n- *Error handling*. Security and field errors are returned in a separate object that can be easily inspected\n\n## Installation\n\nYou can install async_blp from PyPI using\n\n```cmd\npip install async_blp\n```\n\n## Requirements\n\n- [Python 3.7+](https://www.python.org)\n\n- [Pandas](https://pandas.pydata.org)\n\n- [Bloomberg C++ SDK version 3.12.1+](https://www.bloomberg.com/professional/support/api-library/)\n\n- Bloomberg API for Python (more info here: https://www.bloomberg.com/professional/support/api-library/)\n  ```\n  python -m pip install --index-url=https://bloomberg.bintray.com/pip/simple blpapi\n  ```\n\n## Documentation\n\nhttps://async-blp.readthedocs.io/en/latest/\n\n## Examples\n\nBefore using **async_blp**, install **blpapi** from the link above and login in the Bloomberg Terminal.\n\n```python\nimport async_blp\n\nasync def blp_example(loop):\n    bloomberg = async_blp.AsyncBloomberg(loop=loop)\n\n    data, _ = await bloomberg.get_reference_data(['F US Equity'], ['LAST_PRICE'])\n\n    # it is important to wait until Bloomberg successfully closes all the sessions\n    await bloomberg.stop()\n\n    return data\n```\n\nMore examples can be found here: https://github.com/rockscie/async_blp/tree/master/examples\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rockscie/async_blp", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "async-blp", "package_url": "https://pypi.org/project/async-blp/", "platform": "any", "project_url": "https://pypi.org/project/async-blp/", "project_urls": {"Homepage": "https://github.com/rockscie/async_blp"}, "release_url": "https://pypi.org/project/async-blp/0.0.1/", "requires_dist": ["pandas (>=0.20.0)"], "requires_python": "", "summary": "Async wrapper for Bloomberg Open API", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>async_blp</h1>\n<p><a href=\"https://travis-ci.com/rockscie/async_blp\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eeef543025bfad17a40db6af6de2c65840332843/68747470733a2f2f7472617669732d63692e636f6d2f726f636b736369652f6173796e635f626c702e7376673f6272616e63683d6d6173746572\"></a></p>\n<h2>Overview</h2>\n<p>The goal of <code>async_blp</code> is to create simple and fast Bloomberg Open API wrapper that can be used in highload environments.\nIt allows asynchronous processing of hundreds of\nBloomberg request simultaneously. Currently <code>async_blp</code> provides support for reference and historical data,\ninstruments lookup and field search, as well as subscriptions.\nMore request types will be added in the future.</p>\n<h2>Features</h2>\n<ul>\n<li><em>Fast</em>. Using <code>asyncio</code> allows to process Bloomberg requests simultaneously while creating little overhead</li>\n<li><em>Simple</em>. <code>async_blp</code> takes care of creating and managing Bloomberg sessions as well as of parsing responses</li>\n<li><em>User-friendly output</em>. Data is returned as a <code>pandas.DataFrame</code> object</li>\n<li><em>Error handling</em>. Security and field errors are returned in a separate object that can be easily inspected</li>\n</ul>\n<h2>Installation</h2>\n<p>You can install async_blp from PyPI using</p>\n<pre>pip install async_blp\n</pre>\n<h2>Requirements</h2>\n<ul>\n<li>\n<p><a href=\"https://www.python.org\" rel=\"nofollow\">Python 3.7+</a></p>\n</li>\n<li>\n<p><a href=\"https://pandas.pydata.org\" rel=\"nofollow\">Pandas</a></p>\n</li>\n<li>\n<p><a href=\"https://www.bloomberg.com/professional/support/api-library/\" rel=\"nofollow\">Bloomberg C++ SDK version 3.12.1+</a></p>\n</li>\n<li>\n<p>Bloomberg API for Python (more info here: <a href=\"https://www.bloomberg.com/professional/support/api-library/\" rel=\"nofollow\">https://www.bloomberg.com/professional/support/api-library/</a>)</p>\n<pre><code>python -m pip install --index-url=https://bloomberg.bintray.com/pip/simple blpapi\n</code></pre>\n</li>\n</ul>\n<h2>Documentation</h2>\n<p><a href=\"https://async-blp.readthedocs.io/en/latest/\" rel=\"nofollow\">https://async-blp.readthedocs.io/en/latest/</a></p>\n<h2>Examples</h2>\n<p>Before using <strong>async_blp</strong>, install <strong>blpapi</strong> from the link above and login in the Bloomberg Terminal.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">async_blp</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">blp_example</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"p\">):</span>\n    <span class=\"n\">bloomberg</span> <span class=\"o\">=</span> <span class=\"n\">async_blp</span><span class=\"o\">.</span><span class=\"n\">AsyncBloomberg</span><span class=\"p\">(</span><span class=\"n\">loop</span><span class=\"o\">=</span><span class=\"n\">loop</span><span class=\"p\">)</span>\n\n    <span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">bloomberg</span><span class=\"o\">.</span><span class=\"n\">get_reference_data</span><span class=\"p\">([</span><span class=\"s1\">'F US Equity'</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">'LAST_PRICE'</span><span class=\"p\">])</span>\n\n    <span class=\"c1\"># it is important to wait until Bloomberg successfully closes all the sessions</span>\n    <span class=\"k\">await</span> <span class=\"n\">bloomberg</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">data</span>\n</pre>\n<p>More examples can be found here: <a href=\"https://github.com/rockscie/async_blp/tree/master/examples\" rel=\"nofollow\">https://github.com/rockscie/async_blp/tree/master/examples</a></p>\n\n          </div>"}, "last_serial": 5730062, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "dea13d07bbdffb20bfc5aa2ddd1787b1", "sha256": "7db44e461c7b2cae627a5f3b8df7015aecb3058fbfaa38ed757863bf7ed6dda8"}, "downloads": -1, "filename": "async_blp-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "dea13d07bbdffb20bfc5aa2ddd1787b1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24097, "upload_time": "2019-08-26T10:22:39", "upload_time_iso_8601": "2019-08-26T10:22:39.641653Z", "url": "https://files.pythonhosted.org/packages/e7/aa/653727fb97b0856496be418974a4cb6e6dd02b97f824fc319b6047f41560/async_blp-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7c3f993c99981904592541e80537fcc4", "sha256": "7e81df81c0d5082a2e62f49732f07a878567029c33eb14e7776712f3bd41b4c1"}, "downloads": -1, "filename": "async_blp-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7c3f993c99981904592541e80537fcc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18038, "upload_time": "2019-08-26T10:22:42", "upload_time_iso_8601": "2019-08-26T10:22:42.309818Z", "url": "https://files.pythonhosted.org/packages/2a/12/29ec96b16689d7e93e01bb5db1831096823d2970199493137a205b7bc479/async_blp-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dea13d07bbdffb20bfc5aa2ddd1787b1", "sha256": "7db44e461c7b2cae627a5f3b8df7015aecb3058fbfaa38ed757863bf7ed6dda8"}, "downloads": -1, "filename": "async_blp-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "dea13d07bbdffb20bfc5aa2ddd1787b1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24097, "upload_time": "2019-08-26T10:22:39", "upload_time_iso_8601": "2019-08-26T10:22:39.641653Z", "url": "https://files.pythonhosted.org/packages/e7/aa/653727fb97b0856496be418974a4cb6e6dd02b97f824fc319b6047f41560/async_blp-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7c3f993c99981904592541e80537fcc4", "sha256": "7e81df81c0d5082a2e62f49732f07a878567029c33eb14e7776712f3bd41b4c1"}, "downloads": -1, "filename": "async_blp-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7c3f993c99981904592541e80537fcc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18038, "upload_time": "2019-08-26T10:22:42", "upload_time_iso_8601": "2019-08-26T10:22:42.309818Z", "url": "https://files.pythonhosted.org/packages/2a/12/29ec96b16689d7e93e01bb5db1831096823d2970199493137a205b7bc479/async_blp-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:46 2020"}