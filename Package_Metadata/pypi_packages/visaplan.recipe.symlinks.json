{"info": {"author": "Tobias Herp", "author_email": "tobias.herp@visaplan.com", "bugtrack_url": null, "classifiers": ["Framework :: Buildout", "Framework :: Zope", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 2.7"], "description": ".. This README is meant for consumption by humans and pypi. Pypi can render rst files so please do not use Sphinx features.\n   If you want to learn more about writing documentation, please check out: http://docs.plone.org/about/documentation_styleguide.html\n   This text does not appear on pypi or github. It is a comment.\n\n========================\nvisaplan.recipe.symlinks\n========================\n\n**Not working yet - resource detection missing**\n\nCreates symbolic links to the resources which are registered by the installed\nZope products / packages.  Allows to exclude all ``/++resource++*`` paths from the\nRewriteRule which hands the requests over to ZServer.\nThis serves two purposes:\n\n- The ``/++resource++*`` paths can be handled by your front http server, e.g. Apache,\n  instead of the Zope server, which is likely to be better in this task\n- All changes to those resources are effective immediately when they are next requested,\n  not requiring a Zope restart nor a refresh of the compilation,\n  which is useful during develoment.\n\nCurrently this recipe requires an operating system which provides native\nsymbolic links support via the ``os.symlink`` function.\n\nFeatures\n--------\n\n- Creates symbolic links for every resource which is registered to a Zope\n  instance.\n\n  This allows those resources to be served by the front http server rather than\n  proceeding them to the Zope server and thus unburden the Python threads.\n\n  It also allows to use ``/++resource++*`` paths in error pages including those\n  which are used by the front-end server to indicate the Zope process to be\n  down (HTTP status codes 5xx).\n\n\nUsage\n-----\n\nAdd a visaplan.recipe.symlinks part to your buildout::\n\n    [buildout]\n\n    ...\n    parts =\n        ...\n        symlinks\n\n    [symlinks]\n    recipe = visaplan.recipe.symlinks\n    document-root = ${buildout:parts-directory}/htdocs\n    eggs = ${instance:eggs}\n\nand then run ``bin/buildout``.\n\n\nOptions\n-------\n\ndocument-root\n    The ``DocumentRoot`` of your ``VirtualHost`` (in Apache-speak),\n    which is the location your http server will start looking for the files to\n    serve.\n\n    The default is a ``htdocs`` subdirectory of ``${buildout:parts-directory}``;\n    it will be created unless already present.\n\neggs\n    The list of eggs which are installed to your Zope instance;\n    if you have an ``[instance]`` section in your buildout script,\n    ``${instance:eggs}`` will be the default.\n\n    *(not yet implemented)*\n\nrelative-links\n    Determines whether relative links will be created.\n    Allowed values are:\n\n    yes, on\n        use paths relative to ``document-root`` (or to the created\n        directories, respectively).\n\n        Might fail in cases the use of relative paths is not possible or not\n        advisable, e.g. if the path to ``document-root`` contains symbolic links.\n\n        *(No such checks implemented currently)*\n\n    no, off\n        use absolute paths as link targets\n\nlink-leaves\n    Allowed values are:\n\n    yes, on\n        For products which register a resource directory, create a matching\n        directory below ``document-root`` and create a dedicated symbolic link\n        for each single resource (\"leaf\").  This can be considered a little bit\n        more safe, as it won't make available any resource which was added\n        after built time.\n\n    no, off\n        For products which register a resource directory, simply create a\n        symbolic link to that directory.\n\n        This comes in handy for development.\n\n    auto\n        Create symbolic links to resource directories for development packages\n        (like ``yes``), and leaf links for all other packages.\n\n        Once implemented, this will likely become the default.\n\n    For now, the ``auto`` choice is not yet implemented.\n\n\nContribute\n----------\n\n- Issue Tracker: https://github.com/visaplan/visaplan.recipe.symlinks/issues\n- Source Code: https://github.com/visaplan/visaplan.recipe.symlinks\n\n\nSupport\n-------\n\nIf you are having issues, please let us know;\nplease use the issue tracker mentioned above.\n\n\nLicense\n-------\n\nThe project is licensed under the GPLv2.\n\n.. vim: tw=79 cc=+1 sw=4 sts=4 si et\n\n\nContributors\n============\n\n- Tobias Herp, tobias.herp@visaplan.com\n\n\nChangelog\n=========\n\n\n0.1.dev1 (unreleased)\n---------------------\n\n- Initial release.\n  No working resources detection yet. \n  [tobiasherp]\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.org/project/visaplan.recipe.symlinks", "keywords": "", "license": "GPL version 2", "maintainer": "", "maintainer_email": "", "name": "visaplan.recipe.symlinks", "package_url": "https://pypi.org/project/visaplan.recipe.symlinks/", "platform": "", "project_url": "https://pypi.org/project/visaplan.recipe.symlinks/", "project_urls": {"Homepage": "https://pypi.org/project/visaplan.recipe.symlinks"}, "release_url": "https://pypi.org/project/visaplan.recipe.symlinks/0.1.dev1/", "requires_dist": null, "requires_python": "", "summary": "Create resource symlinks for Zope instances", "version": "0.1.dev1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>Not working yet - resource detection missing</strong></p>\n<p>Creates symbolic links to the resources which are registered by the installed\nZope products / packages.  Allows to exclude all <tt><span class=\"pre\">/++resource++*</span></tt> paths from the\nRewriteRule which hands the requests over to ZServer.\nThis serves two purposes:</p>\n<ul>\n<li>The <tt><span class=\"pre\">/++resource++*</span></tt> paths can be handled by your front http server, e.g. Apache,\ninstead of the Zope server, which is likely to be better in this task</li>\n<li>All changes to those resources are effective immediately when they are next requested,\nnot requiring a Zope restart nor a refresh of the compilation,\nwhich is useful during develoment.</li>\n</ul>\n<p>Currently this recipe requires an operating system which provides native\nsymbolic links support via the <tt>os.symlink</tt> function.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li><p>Creates symbolic links for every resource which is registered to a Zope\ninstance.</p>\n<p>This allows those resources to be served by the front http server rather than\nproceeding them to the Zope server and thus unburden the Python threads.</p>\n<p>It also allows to use <tt><span class=\"pre\">/++resource++*</span></tt> paths in error pages including those\nwhich are used by the front-end server to indicate the Zope process to be\ndown (HTTP status codes 5xx).</p>\n</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Add a visaplan.recipe.symlinks part to your buildout:</p>\n<pre>[buildout]\n\n...\nparts =\n    ...\n    symlinks\n\n[symlinks]\nrecipe = visaplan.recipe.symlinks\ndocument-root = ${buildout:parts-directory}/htdocs\neggs = ${instance:eggs}\n</pre>\n<p>and then run <tt>bin/buildout</tt>.</p>\n</div>\n<div id=\"options\">\n<h2>Options</h2>\n<dl>\n<dt>document-root</dt>\n<dd><p>The <tt>DocumentRoot</tt> of your <tt>VirtualHost</tt> (in Apache-speak),\nwhich is the location your http server will start looking for the files to\nserve.</p>\n<p>The default is a <tt>htdocs</tt> subdirectory of <tt><span class=\"pre\">${buildout:parts-directory}</span></tt>;\nit will be created unless already present.</p>\n</dd>\n<dt>eggs</dt>\n<dd><p>The list of eggs which are installed to your Zope instance;\nif you have an <tt>[instance]</tt> section in your buildout script,\n<tt>${instance:eggs}</tt> will be the default.</p>\n<p><em>(not yet implemented)</em></p>\n</dd>\n<dt>relative-links</dt>\n<dd><p>Determines whether relative links will be created.\nAllowed values are:</p>\n<dl>\n<dt>yes, on</dt>\n<dd><p>use paths relative to <tt><span class=\"pre\">document-root</span></tt> (or to the created\ndirectories, respectively).</p>\n<p>Might fail in cases the use of relative paths is not possible or not\nadvisable, e.g. if the path to <tt><span class=\"pre\">document-root</span></tt> contains symbolic links.</p>\n<p><em>(No such checks implemented currently)</em></p>\n</dd>\n<dt>no, off</dt>\n<dd>use absolute paths as link targets</dd>\n</dl>\n</dd>\n<dt>link-leaves</dt>\n<dd><p>Allowed values are:</p>\n<dl>\n<dt>yes, on</dt>\n<dd>For products which register a resource directory, create a matching\ndirectory below <tt><span class=\"pre\">document-root</span></tt> and create a dedicated symbolic link\nfor each single resource (\u201cleaf\u201d).  This can be considered a little bit\nmore safe, as it won\u2019t make available any resource which was added\nafter built time.</dd>\n<dt>no, off</dt>\n<dd><p>For products which register a resource directory, simply create a\nsymbolic link to that directory.</p>\n<p>This comes in handy for development.</p>\n</dd>\n<dt>auto</dt>\n<dd><p>Create symbolic links to resource directories for development packages\n(like <tt>yes</tt>), and leaf links for all other packages.</p>\n<p>Once implemented, this will likely become the default.</p>\n</dd>\n</dl>\n<p>For now, the <tt>auto</tt> choice is not yet implemented.</p>\n</dd>\n</dl>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<ul>\n<li>Issue Tracker: <a href=\"https://github.com/visaplan/visaplan.recipe.symlinks/issues\" rel=\"nofollow\">https://github.com/visaplan/visaplan.recipe.symlinks/issues</a></li>\n<li>Source Code: <a href=\"https://github.com/visaplan/visaplan.recipe.symlinks\" rel=\"nofollow\">https://github.com/visaplan/visaplan.recipe.symlinks</a></li>\n</ul>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<p>If you are having issues, please let us know;\nplease use the issue tracker mentioned above.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The project is licensed under the GPLv2.</p>\n<div id=\"contributors\">\n<h3>Contributors</h3>\n<ul>\n<li>Tobias Herp, <a href=\"mailto:tobias.herp%40visaplan.com\">tobias<span>.</span>herp<span>@</span>visaplan<span>.</span>com</a></li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h3>Changelog</h3>\n</div>\n</div>\n<div id=\"dev1-unreleased\">\n<h2>0.1.dev1 (unreleased)</h2>\n<ul>\n<li>Initial release.\nNo working resources detection yet.\n[tobiasherp]</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4131775, "releases": {"0.1.dev1": [{"comment_text": "", "digests": {"md5": "b8de3ad1690261ed193adf4755f94e53", "sha256": "39434d6eef4b4b8c20b7a1a62949831bff41cf9a1537ea86cf7762b37aa34cc8"}, "downloads": -1, "filename": "visaplan.recipe.symlinks-0.1.dev1.tar.gz", "has_sig": false, "md5_digest": "b8de3ad1690261ed193adf4755f94e53", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19640, "upload_time": "2018-08-03T09:33:05", "upload_time_iso_8601": "2018-08-03T09:33:05.206195Z", "url": "https://files.pythonhosted.org/packages/e7/e6/59f5132d44434068b137f9e1bbb078586610f7fd81911c53e715ce78d8c8/visaplan.recipe.symlinks-0.1.dev1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b8de3ad1690261ed193adf4755f94e53", "sha256": "39434d6eef4b4b8c20b7a1a62949831bff41cf9a1537ea86cf7762b37aa34cc8"}, "downloads": -1, "filename": "visaplan.recipe.symlinks-0.1.dev1.tar.gz", "has_sig": false, "md5_digest": "b8de3ad1690261ed193adf4755f94e53", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19640, "upload_time": "2018-08-03T09:33:05", "upload_time_iso_8601": "2018-08-03T09:33:05.206195Z", "url": "https://files.pythonhosted.org/packages/e7/e6/59f5132d44434068b137f9e1bbb078586610f7fd81911c53e715ce78d8c8/visaplan.recipe.symlinks-0.1.dev1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:35:22 2020"}