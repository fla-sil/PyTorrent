{"info": {"author": "qu1j0t3", "author_email": "support@telegraphics.com.au", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Multimedia :: Graphics", "Topic :: Multimedia :: Graphics :: Capture :: Scanners"], "description": "# hough - Skew detection in scanned images\n\n<p align=\"center\">\n<a href=\"https://github.com/wohali/hough/actions\"><img alt=\"Actions Status\" src=\"https://github.com/wohali/hough/workflows/Tests/badge.svg\"></a>\n<a href=\"https://pypi.org/project/hough/\"><img alt=\"PyPI\" src=\"https://img.shields.io/pypi/v/hough\"></a>\n<a href=\"https://pypi.org/project/hough/\"><img alt=\"PyPI - Python Version\" src=\"https://img.shields.io/pypi/pyversions/hough\"></a>\n<a href=\"https://github.com/wohali/hough/blob/master/COPYING\"><img src=\"https://img.shields.io/github/license/wohali/hough.svg\" alt=\"GPL v2.0 License\" /></a>\n<a href=\"https://github.com/psf/black\"><img alt=\"Code style: black\" src=\"https://img.shields.io/badge/code%20style-black-000000.svg\"></a>\n<a href=\"https://codecov.io/gh/wohali/hough\"><img alt=\"Coverage stats\" src=\"https://codecov.io/gh/wohali/hough/branch/master/graph/badge.svg\" /></a>\n</p>\n\n_Hough_ finds skew angles in scanned document pages, using the Hough transform.\n\nIt is oriented to batch processing, and can make use of multiple cores. (You'll\nwant this - analysis and image processing is very CPU intensive!)\n\n# Installation and usage\n\n## Installation\n\n```\npip install -U pip\npip install hough\n```\n\nThe first line is required to update `pip` to a new enough version to be\ncompatible with `manylinux` wheel packaging, required for PyMuPDF.\n\nOlder versions of `pip` are fine, but you'll have to install MuPDF, its\nheaders, and a compiler first, so PyMuPDF can be compiled locally.\n\n## Usage\n\nTo get started right away, here's some examples.\n\nGenerate angles (in CSV form) for a bunch of TIFF page images, one page per file:\n\n```\nhough --csv in/*.tif\n```\n\nThe same, but for a PDF file, and display a histogram at the end:\n\n```\nhough --histogram Able_Attach_Sep83.pdf\n```\n\nThe same, but show progress while running:\n\n```\nhough -v --histogram Able_Attach_Sep83.pdf\n```\n\n\nThe deskewing results are placed in the `results.csv` file. Example:\n\n```csv\n\"Input File\",\"Page Number\",\"Computed angle\",\"Variance of computed angles\",\"Image width (px)\",\"Image height (px)\"\n\"/home/toby/my-pages/orig/a--0000.pgm.tif\",,-0.07699791151672428,0.001073874144832815,5014,6659\n\"/home/toby/my-pages/orig/a--0001.pgm.tif\",,,,5018,6630\n\"/home/toby/my-pages/orig/a--0002.pgm.tif\",,0.24936351676615068,0.005137031681286154,5021,6629\n\"/home/toby/my-pages/orig/a--0003.pgm.tif\",,,,5020,6608\n\"/home/toby/my-pages/orig/a--0004.pgm.tif\",,-0.037485115754500545,0.025945115897015238,5021,6616\n```\n\nThe program should work on various image input formats, and with both grey scale\nand RGB images. _Hough_ works best with images \u2265300dpi.\n\nHere's a histogram sample:\n\n```\n=== Skew statistics ===\n0.00\u00b0 - 0.10\u00b0  [57]  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n0.10\u00b0 - 0.20\u00b0  [39]  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d\n0.20\u00b0 - 0.30\u00b0  [30]  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n0.30\u00b0 - 0.40\u00b0  [30]  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n0.40\u00b0 - 0.50\u00b0  [11]  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a\n0.50\u00b0 - 0.60\u00b0  [11]  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a\n0.60\u00b0 - 0.70\u00b0  [ 3]  \u2588\u2588\u258f\n0.70\u00b0 - 0.80\u00b0  [ 4]  \u2588\u2588\u258a\n0.80\u00b0 - 0.90\u00b0  [ 0]\n0.90\u00b0 - 1.00\u00b0  [ 1]  \u258a\n1.00\u00b0 - 1.10\u00b0  [ 1]  \u258a\n1.10\u00b0 - 1.20\u00b0  [ 0]\n1.20\u00b0 - 1.30\u00b0  [ 1]  \u258a\n1.30\u00b0 - 1.40\u00b0  [ 1]  \u258a\n1.40\u00b0 - 1.50\u00b0  [ 1]  \u258a\n1.50\u00b0 - 1.60\u00b0  [ 2]  \u2588\u258d\n1.60\u00b0 - 1.70\u00b0  [ 0]\n1.70\u00b0 - 1.80\u00b0  [ 1]  \u258a\n1.80\u00b0 - 1.90\u00b0  [ 2]  \u2588\u258d\n1.90\u00b0 - 2.00\u00b0  [ 0]\nSamples: 195\n50th percentile: 0.20\u00b0\n90th percentile: 0.55\u00b0\n99th percentile: 1.77\u00b0\n```\n\n## Command line options\n\nYou can list them by running `hough --help`:\n\n```\nhough - straighten scanned pages using the Hough transform.\n\nUsage:\n  hough (-h | --help)\n  hough [options] [FILE] ...\n  hough [options] [--results=<file>] [FILE] ...\n  hough (-r | --rotate) [options] [--results=<file>]\n  hough (-r | --rotate) [options] [--results=<file>] [FILE] ...\n\nArguments:\n  FILE                          input files to analyze/rotate\n\nOptions:\n  -h --help                     display this help and exit\n  --version                     display the version number and exit\n  -v --verbose                  print status messages\n  -d --debug                    retain debug image output in debug/ dir\n                                (also enables --verbose)\n  --histogram                   display rotation angle histogram summary\n  -o DIR, --out=DIR             store output results/images in named\n                                directory. Directory is created if it\n                                does not exist [default: out/TIMESTAMP]\n  --results=<file>              save results in FILE under output path,\n                                or specify path to results file for\n                                rotation [default: results.csv]\n  -w <workers> --workers=<#>    specify the number of workers to run\n                                simultaneously. Default: total # of CPUs\n  -r --rotate                   rotates the files passed on the command\n                                line, or if none given, those listed\n                                in the results file.\n```\n\n# Examples\n\nJust about all of [these files](http://docs.telegraphics.com.au/) have been\ndeskewed this way.\n\n# Getting the best results\n\n### NOTE: This is a beta product!\n\nThere's a few guidelines you should follow to get the best deskewing results\nfrom your document scans:\n\n1. Bilevel (black-and-white) bitmaps will produce lower quality results.\n   For best results, scan to greyscale or RGB first, deskew with _Hough_, then\n   reduce the colour depth to bilevel.\n1. Hough deskewing is an inexact process, with many heuristics discovered\n   by trial and error. _Hough_ may not work well on your material without tuning\n   and further modification. (We'd love your pull requests!)\n\n## Debugging output\n\nYou can spy on _Hough_'s attempts to perform deskewing by passing the `--debug`\nflag on the command line. The generated images, and any detected lines in them,\nare placed in the `debug/<datetime>/` directory.\n\nNote that _Hough_ cannot always determine a skew for a page (e.g. blank pages\nin particular), and will very occasionally get the skew wrong (depending on\nsource material). It's worth reviewing these images if _Hough_ makes a bad\ndecision on your scans. Please submit these files along with the original image\nwhen filing an issue!\n\n## Recommended scanners\n\nThe authors have tested this software with output from the following scanners:\n\n* Fujitsu fi-4530C, USB\n  * Fast\n  * Cheap on eBay\n  * Requires a Windows XP VirtualBox for drivers\n* Brother ADS-2700W, USB + Ethernet + WiFi\n  * Fast\n  * Can scan directly to the network or to a memory stick\n  * Factory reconditioned models stilll available (March 2020)\n  * Very low skew out of the box\n* Epson WF-7610, USB + Ethernet + WiFi\n  * 11\"x17\" and duplex capable\n  * Can scan directly to the network or to a memory stick\n\n# Developing\n\nFirst, clone this repo.\n\nYou'll need to install [Poetry](https://python-poetry.org/docs/#installation),\nthen run:\n\n```\npoetry run pip install -U pip setuptools\npoetry install\npoetry shell\n```\n\n# License notice\n\n```\nThis file is part of \"hough\", which detects skew angles in scanned images\nCopyright (C) 2016-2020 Toby Thain <toby@telegraphics.com.au>\nCopyright (C) 2020 Joan Touzet <wohali@apache.org>\n\nThis program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 2 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program; if not, write to the Free Software\nFoundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wohali/hough", "keywords": "hough,scan,rotate,skew", "license": "GPL-2.0-only", "maintainer": "Joan Touzet", "maintainer_email": "wohali@apache.org", "name": "hough", "package_url": "https://pypi.org/project/hough/", "platform": "", "project_url": "https://pypi.org/project/hough/", "project_urls": {"Homepage": "https://github.com/wohali/hough", "Repository": "https://github.com/wohali/hough"}, "release_url": "https://pypi.org/project/hough/0.2.1/", "requires_dist": ["docopt-ng (>=0.7.2,<0.8.0)", "imageio (>=2.8.0,<3.0.0)", "numpy (>=1.18.2,<2.0.0)", "scikit-image (>=0.16.2,<0.17.0)", "scipy (>=1.4.1,<2.0.0)", "termplotlib (>=0.3.0,<0.4.0)", "pip (==20.0.2)", "pymupdf (>=1.16.15,<2.0.0)", "filetype (>=1.0.6,<2.0.0)", "tqdm (>=4.43.0,<5.0.0)", "coverage[toml] (>=5.0.4,<6.0.0)", "importlib_metadata (>=1.6.0,<2.0.0); python_version < \"3.8\""], "requires_python": ">=3.6.1,<4.0.0", "summary": "Skew detection and correction in scanned images", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>hough - Skew detection in scanned images</h1>\n<p align=\"center\">\n<a href=\"https://github.com/wohali/hough/actions\" rel=\"nofollow\"><img alt=\"Actions Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7a37d42c7a8d7daf5403a77d949cd61d70872ad6/68747470733a2f2f6769746875622e636f6d2f776f68616c692f686f7567682f776f726b666c6f77732f54657374732f62616467652e737667\"></a>\n<a href=\"https://pypi.org/project/hough/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/463e0fe4abefb3134a2d039948ba191759174be4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f686f756768\"></a>\n<a href=\"https://pypi.org/project/hough/\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/279181935889f23c3d342d4c0600348e1d1200e6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f686f756768\"></a>\n<a href=\"https://github.com/wohali/hough/blob/master/COPYING\" rel=\"nofollow\"><img alt=\"GPL v2.0 License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5c1b0b8ebc672c3d713d1dbe0d6c43926a4b7d27/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f776f68616c692f686f7567682e737667\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<a href=\"https://codecov.io/gh/wohali/hough\" rel=\"nofollow\"><img alt=\"Coverage stats\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49601a2967d9e647dcfb7bf0347afbb56770b73f/68747470733a2f2f636f6465636f762e696f2f67682f776f68616c692f686f7567682f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n</p>\n<p><em>Hough</em> finds skew angles in scanned document pages, using the Hough transform.</p>\n<p>It is oriented to batch processing, and can make use of multiple cores. (You'll\nwant this - analysis and image processing is very CPU intensive!)</p>\n<h1>Installation and usage</h1>\n<h2>Installation</h2>\n<pre><code>pip install -U pip\npip install hough\n</code></pre>\n<p>The first line is required to update <code>pip</code> to a new enough version to be\ncompatible with <code>manylinux</code> wheel packaging, required for PyMuPDF.</p>\n<p>Older versions of <code>pip</code> are fine, but you'll have to install MuPDF, its\nheaders, and a compiler first, so PyMuPDF can be compiled locally.</p>\n<h2>Usage</h2>\n<p>To get started right away, here's some examples.</p>\n<p>Generate angles (in CSV form) for a bunch of TIFF page images, one page per file:</p>\n<pre><code>hough --csv in/*.tif\n</code></pre>\n<p>The same, but for a PDF file, and display a histogram at the end:</p>\n<pre><code>hough --histogram Able_Attach_Sep83.pdf\n</code></pre>\n<p>The same, but show progress while running:</p>\n<pre><code>hough -v --histogram Able_Attach_Sep83.pdf\n</code></pre>\n<p>The deskewing results are placed in the <code>results.csv</code> file. Example:</p>\n<pre>\"Input File\",\"Page Number\",\"Computed angle\",\"Variance of computed angles\",\"Image width (px)\",\"Image height (px)\"\n\"/home/toby/my-pages/orig/a--0000.pgm.tif\",,-0.07699791151672428,0.001073874144832815,5014,6659\n\"/home/toby/my-pages/orig/a--0001.pgm.tif\",,,,5018,6630\n\"/home/toby/my-pages/orig/a--0002.pgm.tif\",,0.24936351676615068,0.005137031681286154,5021,6629\n\"/home/toby/my-pages/orig/a--0003.pgm.tif\",,,,5020,6608\n\"/home/toby/my-pages/orig/a--0004.pgm.tif\",,-0.037485115754500545,0.025945115897015238,5021,6616\n</pre>\n<p>The program should work on various image input formats, and with both grey scale\nand RGB images. <em>Hough</em> works best with images \u2265300dpi.</p>\n<p>Here's a histogram sample:</p>\n<pre><code>=== Skew statistics ===\n0.00\u00b0 - 0.10\u00b0  [57]  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n0.10\u00b0 - 0.20\u00b0  [39]  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d\n0.20\u00b0 - 0.30\u00b0  [30]  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n0.30\u00b0 - 0.40\u00b0  [30]  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n0.40\u00b0 - 0.50\u00b0  [11]  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a\n0.50\u00b0 - 0.60\u00b0  [11]  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a\n0.60\u00b0 - 0.70\u00b0  [ 3]  \u2588\u2588\u258f\n0.70\u00b0 - 0.80\u00b0  [ 4]  \u2588\u2588\u258a\n0.80\u00b0 - 0.90\u00b0  [ 0]\n0.90\u00b0 - 1.00\u00b0  [ 1]  \u258a\n1.00\u00b0 - 1.10\u00b0  [ 1]  \u258a\n1.10\u00b0 - 1.20\u00b0  [ 0]\n1.20\u00b0 - 1.30\u00b0  [ 1]  \u258a\n1.30\u00b0 - 1.40\u00b0  [ 1]  \u258a\n1.40\u00b0 - 1.50\u00b0  [ 1]  \u258a\n1.50\u00b0 - 1.60\u00b0  [ 2]  \u2588\u258d\n1.60\u00b0 - 1.70\u00b0  [ 0]\n1.70\u00b0 - 1.80\u00b0  [ 1]  \u258a\n1.80\u00b0 - 1.90\u00b0  [ 2]  \u2588\u258d\n1.90\u00b0 - 2.00\u00b0  [ 0]\nSamples: 195\n50th percentile: 0.20\u00b0\n90th percentile: 0.55\u00b0\n99th percentile: 1.77\u00b0\n</code></pre>\n<h2>Command line options</h2>\n<p>You can list them by running <code>hough --help</code>:</p>\n<pre><code>hough - straighten scanned pages using the Hough transform.\n\nUsage:\n  hough (-h | --help)\n  hough [options] [FILE] ...\n  hough [options] [--results=&lt;file&gt;] [FILE] ...\n  hough (-r | --rotate) [options] [--results=&lt;file&gt;]\n  hough (-r | --rotate) [options] [--results=&lt;file&gt;] [FILE] ...\n\nArguments:\n  FILE                          input files to analyze/rotate\n\nOptions:\n  -h --help                     display this help and exit\n  --version                     display the version number and exit\n  -v --verbose                  print status messages\n  -d --debug                    retain debug image output in debug/ dir\n                                (also enables --verbose)\n  --histogram                   display rotation angle histogram summary\n  -o DIR, --out=DIR             store output results/images in named\n                                directory. Directory is created if it\n                                does not exist [default: out/TIMESTAMP]\n  --results=&lt;file&gt;              save results in FILE under output path,\n                                or specify path to results file for\n                                rotation [default: results.csv]\n  -w &lt;workers&gt; --workers=&lt;#&gt;    specify the number of workers to run\n                                simultaneously. Default: total # of CPUs\n  -r --rotate                   rotates the files passed on the command\n                                line, or if none given, those listed\n                                in the results file.\n</code></pre>\n<h1>Examples</h1>\n<p>Just about all of <a href=\"http://docs.telegraphics.com.au/\" rel=\"nofollow\">these files</a> have been\ndeskewed this way.</p>\n<h1>Getting the best results</h1>\n<h3>NOTE: This is a beta product!</h3>\n<p>There's a few guidelines you should follow to get the best deskewing results\nfrom your document scans:</p>\n<ol>\n<li>Bilevel (black-and-white) bitmaps will produce lower quality results.\nFor best results, scan to greyscale or RGB first, deskew with <em>Hough</em>, then\nreduce the colour depth to bilevel.</li>\n<li>Hough deskewing is an inexact process, with many heuristics discovered\nby trial and error. <em>Hough</em> may not work well on your material without tuning\nand further modification. (We'd love your pull requests!)</li>\n</ol>\n<h2>Debugging output</h2>\n<p>You can spy on <em>Hough</em>'s attempts to perform deskewing by passing the <code>--debug</code>\nflag on the command line. The generated images, and any detected lines in them,\nare placed in the <code>debug/&lt;datetime&gt;/</code> directory.</p>\n<p>Note that <em>Hough</em> cannot always determine a skew for a page (e.g. blank pages\nin particular), and will very occasionally get the skew wrong (depending on\nsource material). It's worth reviewing these images if <em>Hough</em> makes a bad\ndecision on your scans. Please submit these files along with the original image\nwhen filing an issue!</p>\n<h2>Recommended scanners</h2>\n<p>The authors have tested this software with output from the following scanners:</p>\n<ul>\n<li>Fujitsu fi-4530C, USB\n<ul>\n<li>Fast</li>\n<li>Cheap on eBay</li>\n<li>Requires a Windows XP VirtualBox for drivers</li>\n</ul>\n</li>\n<li>Brother ADS-2700W, USB + Ethernet + WiFi\n<ul>\n<li>Fast</li>\n<li>Can scan directly to the network or to a memory stick</li>\n<li>Factory reconditioned models stilll available (March 2020)</li>\n<li>Very low skew out of the box</li>\n</ul>\n</li>\n<li>Epson WF-7610, USB + Ethernet + WiFi\n<ul>\n<li>11\"x17\" and duplex capable</li>\n<li>Can scan directly to the network or to a memory stick</li>\n</ul>\n</li>\n</ul>\n<h1>Developing</h1>\n<p>First, clone this repo.</p>\n<p>You'll need to install <a href=\"https://python-poetry.org/docs/#installation\" rel=\"nofollow\">Poetry</a>,\nthen run:</p>\n<pre><code>poetry run pip install -U pip setuptools\npoetry install\npoetry shell\n</code></pre>\n<h1>License notice</h1>\n<pre><code>This file is part of \"hough\", which detects skew angles in scanned images\nCopyright (C) 2016-2020 Toby Thain &lt;toby@telegraphics.com.au&gt;\nCopyright (C) 2020 Joan Touzet &lt;wohali@apache.org&gt;\n\nThis program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 2 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program; if not, write to the Free Software\nFoundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n</code></pre>\n\n          </div>"}, "last_serial": 6921928, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "57256d5f28b5d799e5747cdde97e1773", "sha256": "284258b26910e6ff3ae1ef5e728038b180d9cf04edf6258427675064d86c8f79"}, "downloads": -1, "filename": "hough-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "57256d5f28b5d799e5747cdde97e1773", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.1,<4.0.0", "size": 14300, "upload_time": "2020-03-31T16:41:19", "upload_time_iso_8601": "2020-03-31T16:41:19.993548Z", "url": "https://files.pythonhosted.org/packages/41/e4/9c142f6ca053fb95610afc7cbc0fe389339d572308f3357cdf295167d255/hough-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d44cc6ad29de92d5a4305cf615ae5d5c", "sha256": "c4d7d8f267837c4301b9ffeaadf0c64d28d65ef253127109c922724a84f9c4b8"}, "downloads": -1, "filename": "hough-0.2.0.tar.gz", "has_sig": false, "md5_digest": "d44cc6ad29de92d5a4305cf615ae5d5c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1,<4.0.0", "size": 17630, "upload_time": "2020-03-31T16:41:22", "upload_time_iso_8601": "2020-03-31T16:41:22.248598Z", "url": "https://files.pythonhosted.org/packages/49/1f/67eca7601d70582242473a08a5b4e45ef630ec2bf720e35ec7b4383d902b/hough-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "796567302dfba8e6335879e2a7888c36", "sha256": "332368c84f53751b29e3d3941199b552440776db143e2c350aa19734aeb22278"}, "downloads": -1, "filename": "hough-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "796567302dfba8e6335879e2a7888c36", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.1,<4.0.0", "size": 14532, "upload_time": "2020-03-31T18:10:15", "upload_time_iso_8601": "2020-03-31T18:10:15.550919Z", "url": "https://files.pythonhosted.org/packages/99/f4/2e64cce0b578b2bb5de37c8b84fd6b25c5a6bd0bf1592328df1903e008fa/hough-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed1d2d4285c15a366fbc086977ee68c6", "sha256": "44b2ad64c67fa278876eede09af8a1952a1b6610de3ef38b5ecf48289c85a445"}, "downloads": -1, "filename": "hough-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ed1d2d4285c15a366fbc086977ee68c6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1,<4.0.0", "size": 17960, "upload_time": "2020-03-31T18:10:16", "upload_time_iso_8601": "2020-03-31T18:10:16.367302Z", "url": "https://files.pythonhosted.org/packages/5b/2b/fad1a17558e657a2d933e872096355354ea22830a7b90e58efebe4afc32a/hough-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "796567302dfba8e6335879e2a7888c36", "sha256": "332368c84f53751b29e3d3941199b552440776db143e2c350aa19734aeb22278"}, "downloads": -1, "filename": "hough-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "796567302dfba8e6335879e2a7888c36", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.1,<4.0.0", "size": 14532, "upload_time": "2020-03-31T18:10:15", "upload_time_iso_8601": "2020-03-31T18:10:15.550919Z", "url": "https://files.pythonhosted.org/packages/99/f4/2e64cce0b578b2bb5de37c8b84fd6b25c5a6bd0bf1592328df1903e008fa/hough-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed1d2d4285c15a366fbc086977ee68c6", "sha256": "44b2ad64c67fa278876eede09af8a1952a1b6610de3ef38b5ecf48289c85a445"}, "downloads": -1, "filename": "hough-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ed1d2d4285c15a366fbc086977ee68c6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1,<4.0.0", "size": 17960, "upload_time": "2020-03-31T18:10:16", "upload_time_iso_8601": "2020-03-31T18:10:16.367302Z", "url": "https://files.pythonhosted.org/packages/5b/2b/fad1a17558e657a2d933e872096355354ea22830a7b90e58efebe4afc32a/hough-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:30 2020"}