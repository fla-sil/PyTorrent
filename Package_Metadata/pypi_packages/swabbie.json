{"info": {"author": "Caroline Gallagher", "author_email": "caroline@rokoid.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License"], "description": "Swabbie\n=======\n\nAbout\n-----\n\nSwabbie is a command-line utility designed to help you manage your\n`docker <https://www.docker.com/>`__ images and containers.\n\nSwabbie can clean up your dangling containers and images, restore docker\nto a fresh install, and keep track of containers and images more\nefficiently.\n\nBy using swabbie, you remove the need for shell scripts and bash aliases\nto manage docker images and containers. Let swabbie keep track of those\ncommands for you!\n\nInstallation\n------------\n\nCurrently, to install swabbie as a package, download swabbie by cloning\nthis repo, create a virtualenv, and run\n\n::\n\n    pip install --editable .\n\non the command line from inside the main swabbie folder.\n\nUsage\n-----\n\n``swabbie`` will list all of the commands that swabbie supports, which\nare currently:\n\n-  ``list``: lists images and containers (all or only running containers\n   and correctly built images)\n-  ``count``: tallies the total number of images and containers, as well\n   as those that are functional\n-  ``clean``: removes all dangling images and exited containers\n-  ``nuke``: removes all images and containers; resets docker to fresh\n   install state\n-  ``shell``: reference guide for container and image access commands;\n   has sub-arguments\n\nDevelopment\n-----------\n\nTo add features to swabbie, set up your virtualenv and run\n\n::\n\n    pip install -r requirements.txt\n\nTo install swabbie as a local package so that it will update\nautomatically during development, run\n\n::\n\n    pip install --editable .\n\nfrom the main folder.\n\nTesting\n~~~~~~~\n\nSwabbie uses `nose <https://github.com/nose-devs/nose>`__ for unit\ntesting, so run ``nosetests`` from the main folder to execute the test\nsuite.\n\nTo install dependencies for running the tests, use\n\n::\n\n    pip install -r requirements-test.txt\n\nVersioning\n~~~~~~~~~~\n\nSwabbie uses the\n`bumpversion <https://github.com/peritus/bumpversion>`__ package for\nversioning. The bumpversion.cfg file contains the necessary information\nfor updating the version, so just run\n\n::\n\n    bumpversion <major/minor/patch>\n\nand bumpversion will do the rest.\n\nUpdating README\n~~~~~~~~~~~~~~~\n\nThe readme is provided in both markdown and rst. One approach is to\nwrite the readme in markdown, and then use pandoc to convert to rst:\n\n::\n\n    pandoc --from=markdown --to=rst --output=README.rst README.md\n\nLicense\n-------\n\nMIT license, see LICENSE.txt.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cgallag/swabbie", "keywords": "docker,clean,nuke,dangling images", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "swabbie", "package_url": "https://pypi.org/project/swabbie/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/swabbie/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/cgallag/swabbie"}, "release_url": "https://pypi.org/project/swabbie/0.1.4/", "requires_dist": null, "requires_python": null, "summary": "Helps manage your docker environment", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about\">\n<h2>About</h2>\n<p>Swabbie is a command-line utility designed to help you manage your\n<a href=\"https://www.docker.com/\" rel=\"nofollow\">docker</a> images and containers.</p>\n<p>Swabbie can clean up your dangling containers and images, restore docker\nto a fresh install, and keep track of containers and images more\nefficiently.</p>\n<p>By using swabbie, you remove the need for shell scripts and bash aliases\nto manage docker images and containers. Let swabbie keep track of those\ncommands for you!</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Currently, to install swabbie as a package, download swabbie by cloning\nthis repo, create a virtualenv, and run</p>\n<pre>pip install --editable .\n</pre>\n<p>on the command line from inside the main swabbie folder.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p><tt>swabbie</tt> will list all of the commands that swabbie supports, which\nare currently:</p>\n<ul>\n<li><tt>list</tt>: lists images and containers (all or only running containers\nand correctly built images)</li>\n<li><tt>count</tt>: tallies the total number of images and containers, as well\nas those that are functional</li>\n<li><tt>clean</tt>: removes all dangling images and exited containers</li>\n<li><tt>nuke</tt>: removes all images and containers; resets docker to fresh\ninstall state</li>\n<li><tt>shell</tt>: reference guide for container and image access commands;\nhas sub-arguments</li>\n</ul>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>To add features to swabbie, set up your virtualenv and run</p>\n<pre>pip install -r requirements.txt\n</pre>\n<p>To install swabbie as a local package so that it will update\nautomatically during development, run</p>\n<pre>pip install --editable .\n</pre>\n<p>from the main folder.</p>\n<div id=\"testing\">\n<h3>Testing</h3>\n<p>Swabbie uses <a href=\"https://github.com/nose-devs/nose\" rel=\"nofollow\">nose</a> for unit\ntesting, so run <tt>nosetests</tt> from the main folder to execute the test\nsuite.</p>\n<p>To install dependencies for running the tests, use</p>\n<pre>pip install -r requirements-test.txt\n</pre>\n</div>\n<div id=\"versioning\">\n<h3>Versioning</h3>\n<p>Swabbie uses the\n<a href=\"https://github.com/peritus/bumpversion\" rel=\"nofollow\">bumpversion</a> package for\nversioning. The bumpversion.cfg file contains the necessary information\nfor updating the version, so just run</p>\n<pre>bumpversion &lt;major/minor/patch&gt;\n</pre>\n<p>and bumpversion will do the rest.</p>\n</div>\n<div id=\"updating-readme\">\n<h3>Updating README</h3>\n<p>The readme is provided in both markdown and rst. One approach is to\nwrite the readme in markdown, and then use pandoc to convert to rst:</p>\n<pre>pandoc --from=markdown --to=rst --output=README.rst README.md\n</pre>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>MIT license, see LICENSE.txt.</p>\n</div>\n\n          </div>"}, "last_serial": 2213515, "releases": {"0.1.4": [{"comment_text": "", "digests": {"md5": "543418b95c6c2a909cfb1b197b71c749", "sha256": "daefbd4e61f06ca5ea1b647a55fffd3544be705343c5fb574d625a5cf92a89a6"}, "downloads": -1, "filename": "swabbie-0.1.4.tar.gz", "has_sig": false, "md5_digest": "543418b95c6c2a909cfb1b197b71c749", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5187, "upload_time": "2016-07-11T04:45:28", "upload_time_iso_8601": "2016-07-11T04:45:28.901634Z", "url": "https://files.pythonhosted.org/packages/d5/2f/5858c81846aa2b6fba90a1481fa75e3869d7bbddf4bf4e9019c6228176f4/swabbie-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "543418b95c6c2a909cfb1b197b71c749", "sha256": "daefbd4e61f06ca5ea1b647a55fffd3544be705343c5fb574d625a5cf92a89a6"}, "downloads": -1, "filename": "swabbie-0.1.4.tar.gz", "has_sig": false, "md5_digest": "543418b95c6c2a909cfb1b197b71c749", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5187, "upload_time": "2016-07-11T04:45:28", "upload_time_iso_8601": "2016-07-11T04:45:28.901634Z", "url": "https://files.pythonhosted.org/packages/d5/2f/5858c81846aa2b6fba90a1481fa75e3869d7bbddf4bf4e9019c6228176f4/swabbie-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:47 2020"}