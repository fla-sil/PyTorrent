{"info": {"author": "The Galaxy Community", "author_email": "galaxy-dev@lists.galaxyproject.org", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3"], "description": ".. figure:: https://raw.githubusercontent.com/galaxyproject/starforge/master/docs/starforge_logo.png\n   :alt: Starforge Logo\n   :align: center\n   :figwidth: 100%\n   :target: https://github.com/galaxyproject/Starforge\n\nStarforge: Build `Galaxy`_ things in virtualization\n\nThings you can do with Starforge:\n\n- Build `Galaxy Tool Shed`_ dependencies\n- Build `Python Wheels`_ (e.g. for the `Galaxy Wheels Server`_)\n- Rebuild Debian or Ubuntu source packages (for modifications)\n\nThese things will be built in Docker. Additionally, wheels can be built in\nQEMU/KVM virtualized systems.\n\nDocumentation can be found at `starforge.readthedocs.org\n<http://starforge.readthedocs.org/>`_\n\nStarforge is maintained by the `Galaxy`_ Project and community. A `list of\ncontributors <https://github.com/galaxyproject/starforge/graphs/contributors>`_\nto the project can be found on GitHub.\n\nQuick Start\n-----------\n\nFor all types of builds, begin by `installing Docker`_.\n\n----------------------\nTool Shed Dependencies\n----------------------\n\nThere are two scripts that can be used, depending on the package recipes\navailable:\n\n.. sourcecode:: console\n\n    $ ./build.sh <package>\n    $ python build.py <package> --version 1.0\n\n``build.sh`` is the older format, and simply uses a single\n``<package>build.sh`` file, like Atlas. `build.py` is the newer format, and\nuses yaml metadata in ``<package>/<version>/build.yml``.\n\nThe base image for Galaxy packages is Debian Squeeze. This will hopefully\nproduce binaries usable on Galaxy's targeted platforms (at time of writing:\nCentOS 6+, Debian 6.0+, Ubuntu 12.04+).\n\n.. sourcecode:: console\n\n    $ ./build galaxy <package>\n    $ python build.py <package>\n\nTo build packages against a different OS, you can use the `--image` flag, e.g.:\n\n.. sourcecode:: console\n\n    $ ./build <dist>[:tag] <package>\n    $ python build.py <package> --image <dist>[:tag]\n\ne.g.\n\n.. sourcecode:: console\n\n    $ ./build ubuntu:trusty nginx\n    $ python build.py nginx --image debian:squeeze\n\n**Building all the things:**\n\nThere's a separate ``build-all.sh`` which allows you to build all of the\npackages using their preferred build mechanism\n\nNotes on the two build scripts\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n**build.py**\n\nThe ``<version>`` option is optional, and defaults to the string ``'default'``,\nwhich is useful for recipes that don't have version specific changes (E.g.\nbcftools 1.0 builds identically to 1.2)\n\n-------------\nPython Wheels\n-------------\n\nStarforge can build both pure Python and C-extension Python modules into wheels\nfor Linux under Docker and for Mac OS X under QEMU/KVM. To do this, you'll want\nto install Starforge (preferably in a Python virtualenv) using ``pip install\nstarforge`` (to install from PyPI_) or ``python setup.py install`` to install\nfrom the source.\n\nDocker (and QEMU) images to use are specified in `starforge/config/default.yml\n<https://github.com/galaxyproject/starforge/blob/master/starforge/config/default.yml>`_.\nTo modify this file, copy it to\n``$XDG_CONFIG_HOME/galaxy-starforge/config.yml`` (``$XDG_CONFIG_HOME`` is, by\ndefault ``~/.config``). The sample file `wheels/build/wheels.yml`_ is used to\ndetermine what wheels can be built and their rules for building. To use this\nfile, use the ``--wheels-config`` argument to ``starforge wheel`` or copy\n``wheels.yml`` to ``$XDG_CONFIG_HOME/galaxy-starforge/wheels.yml``.\n\nWheels can be built using ``starforge wheel <package>``, e.g.:\n\n.. sourcecode:: console\n\n    $ starforge wheel pycrypto\n    $ starforge wheel --no-qemu pysam   # only build on docker\n\nSee the output of ``starforge --help`` for help using the Starforge command-line interface.\n\nPull Request wheel builder\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nPull requests to the `Starforge`_ repository on Github that modify\n`wheels/build/wheels.yml`_ can automatically be built for all specified\nplatforms on a dedicated Starforge build server by the `Galaxy Jenkins`_\nservice. To utilize, modify wheels.yml as appropriate and create a pull\nrequest. Any member of the `Galaxy Committers`_ group can then authorize\nJenkins to initiate the build. If it fails, you can modify the pull request and\nfurther builds can be triggered.\n\nNotes on images\n^^^^^^^^^^^^^^^\n\n**Linux**\n\nImages used to build wheels are uploaded to the `Starforge Docker Hub`_ repo\nand will be pulled as necessary. Typically you will only use the\n`manylinux1-wheel <https://hub.docker.com/r/starforge/manylinux1-wheel/>`_ and\n`manylinux1-32-wheel\n<https://hub.docker.com/r/starforge/manylinux1-32-wheel/>`_ images, which are\n`manylinux <https://github.com/pypa/manylinux>`_ CentOS 5-based images that\nwill usually produce wheels usable on all Galaxy-supported platforms.\n\nYou can also produce \"platform-specific\" wheels by using the ``full-wheel``\nimageset. This is useful if you want to link to distribution-specific system\nversions of non-standard libraries without bundling them in to the wheel.\n\n**Mac OS X**\n\nMac OS X images are not provided due to legal reasons. Consult the `osx`\ndocumentation for details.\n\n.. _Galaxy: http://galaxyproject.org/\n.. _Galaxy Tool Shed: http://toolshed.g2.bx.psu.edu/\n.. _Python Wheels: http://pythonwheels.com/\n.. _Galaxy Wheels Server: http://wheels.galaxyproject.org/\n.. _installing Docker: https://docs.docker.com/engine/installation/\n.. _PyPI: https://pypi.python.org/\n.. _Starforge Docker Hub: https://hub.docker.com/r/starforge/\n.. _wheels/build/wheels.yml:\n.. _Galaxy Jenkins: http://jenkins.galaxyproject.org\n.. _Starforge: https://github.com/galaxyproject/starforge/\n.. _Galaxy Committers: https://github.com/galaxyproject/galaxy/blob/dev/doc/source/project/organization.rst\n\n\n.. :changelog:\n\nHistory\n-------\n\n.. to_doc\n\n---------------------\n0.4.0 (2018-04-25)\n---------------------\n\n---------------------\n0.3.6 (2018-04-25)\n---------------------\n\n- Python 3-compatible ``setup.py`` wrapping. `Pull Request 171`_    \n- Fix for pip 10. `c516bae`_\n\n---------------------\n0.3.5 (2017-10-01)\n---------------------\n\n- Support xz/lzma tarballs for wheel builds `Pull Request 166`_\n\n---------------------\n0.3.4 (2017-09-12)\n---------------------\n\n- Native support for auditwheel and delocate. (#160)\n\n---------------------\n0.3.3 (2017-09-08)\n---------------------\n\n- Do not build sdists with the `wheel` subcommand by default. (#155)\n\n---------------------\n0.3.2 (2017-09-08)\n---------------------\n\n- Fix a bug where the wrong working directory was set when building wheels with\n  multiple sources. (#154)\n\n---------------------\n0.3.1 (2017-09-08)\n---------------------\n\n- Fix a bug with ``sudo`` and ``brew install`` on macOS. (#151).\n- Short circuit platform caching on OS X (#150).\n\n---------------------\n0.3 (2017-01-10)\n---------------------\n\n- Drop the dependency on the \"Galaxy\" wheel fork, which makes installation much\n  easier. \"Platform-specific\" wheels can still be built.\n- When building Docker images, install Starforge from the local source instead\n  of installing from PyPI or Github.\n\n---------------------\n0.2.1 (2016-05-27)\n---------------------\n\n- Do a case-insensitive comparison for cached tarball names (uWSGI's project\n  name is ``uWSGI`` but its source tarballs are named ``uwsgi-*``). 7672547_\n\n---------------------\n0.2 (2016-05-19)\n---------------------\n\n- Added support for building manylinux1 wheels. 0dbecb7_\n\n---------------------\n0.1.1 (2016-01-20)\n---------------------\n\n- Only running prebuild during wheel builds (and not sdists) was too naive,\n  since this prevents changing the version number of sdists in the prebuild\n  action (a common use of the prebuild action). Instead, allow for separate\n  ``wheel``, ``sdist``, and ``all`` prebuild actions.  Reverts the behavior of\n  9008c57_. `Issue 64`_\n- Install Galaxy pip from Github instead of wheels.galaxyproject.org so that\n  Starforge images can be built with new versions of Galaxy pip before they are\n  released. 97b4ba4_\n\n---------------------\n0.1 (2016-01-12)\n---------------------\n\n- Reimplemented the wheel building scripts as a library and ``starforge``\n  command line\n- Wrote some documentation\n\n---------------------\nOlder than 0.1\n---------------------\n\nOriginally Galaxy docker-build and later renamed Starforge, but as a collection\nof disjointed shell scripts, Python, and YAML used to build Galaxy Tool Shed\ndependencies, as well as rebuilding Debian and Ubuntu source packages with\nmodifications (which itself came from a project created to do the same via\nVagrant and Ansible called vadebuildsible).\n\n.. _Galaxy: http://galaxyproject.org/\n\n.. github_links\n.. _c516bae: https://github.com/galaxyproject/starforge/commit/c516bae4052d326034c07d10ca0a639e7c393830\n.. _Pull Request 171: https://github.com/galaxyproject/starforge/pull/171\n.. _Pull Request 166: https://github.com/galaxyproject/starforge/pull/166\n.. _9008c57: https://github.com/galaxyproject/starforge/commit/9008c57b09521298b919fac1de00fb62a448bcab\n.. _97b4ba4: https://github.com/galaxyproject/starforge/commit/97b4ba4a591e359b01dc69161925c301c9a7d1b7\n.. _0dbecb7: https://github.com/galaxyproject/starforge/commit/0dbecb79e28baecb62546b629cae9dbebf46df19\n.. _7672547: https://github.com/galaxyproject/starforge/commit/7672547adf3fe05d19f29d62a6a766ef114fd459\n.. _Issue 64: https://github.com/galaxyproject/starforge/issues/64\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/galaxyproject/starforge", "keywords": "starforge galaxy docker qemu", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "starforge", "package_url": "https://pypi.org/project/starforge/", "platform": "", "project_url": "https://pypi.org/project/starforge/", "project_urls": {"Homepage": "https://github.com/galaxyproject/starforge"}, "release_url": "https://pypi.org/project/starforge/0.3.6/", "requires_dist": ["pyyaml", "click", "requests", "six", "wheel", "ordereddict; python_version==\"2.6\"", "backports.lzma; python_version<=\"3.3\" and extra == 'lzma'", "lionshead; extra == 'platform_specific'"], "requires_python": "", "summary": "Build Galaxy things in virtualized environments", "version": "0.3.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n<a href=\"https://github.com/galaxyproject/Starforge\" rel=\"nofollow\"><img alt=\"Starforge Logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dc31be57b594410365ea986e200238eb71c36bb8/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f67616c61787970726f6a6563742f73746172666f7267652f6d61737465722f646f63732f73746172666f7267655f6c6f676f2e706e67\"></a>\n</div>\n<p>Starforge: Build <a href=\"http://galaxyproject.org/\" rel=\"nofollow\">Galaxy</a> things in virtualization</p>\n<p>Things you can do with Starforge:</p>\n<ul>\n<li>Build <a href=\"http://toolshed.g2.bx.psu.edu/\" rel=\"nofollow\">Galaxy Tool Shed</a> dependencies</li>\n<li>Build <a href=\"http://pythonwheels.com/\" rel=\"nofollow\">Python Wheels</a> (e.g. for the <a href=\"http://wheels.galaxyproject.org/\" rel=\"nofollow\">Galaxy Wheels Server</a>)</li>\n<li>Rebuild Debian or Ubuntu source packages (for modifications)</li>\n</ul>\n<p>These things will be built in Docker. Additionally, wheels can be built in\nQEMU/KVM virtualized systems.</p>\n<p>Documentation can be found at <a href=\"http://starforge.readthedocs.org/\" rel=\"nofollow\">starforge.readthedocs.org</a></p>\n<p>Starforge is maintained by the <a href=\"http://galaxyproject.org/\" rel=\"nofollow\">Galaxy</a> Project and community. A <a href=\"https://github.com/galaxyproject/starforge/graphs/contributors\" rel=\"nofollow\">list of\ncontributors</a>\nto the project can be found on GitHub.</p>\n<div id=\"quick-start\">\n<h2>Quick Start</h2>\n<p>For all types of builds, begin by <a href=\"https://docs.docker.com/engine/installation/\" rel=\"nofollow\">installing Docker</a>.</p>\n<div id=\"tool-shed-dependencies\">\n<h3>Tool Shed Dependencies</h3>\n<p>There are two scripts that can be used, depending on the package recipes\navailable:</p>\n<pre><span class=\"gp\">$</span> ./build.sh &lt;package&gt;\n<span class=\"gp\">$</span> python build.py &lt;package&gt; --version <span class=\"m\">1</span>.0\n</pre>\n<p><tt>build.sh</tt> is the older format, and simply uses a single\n<tt>&lt;package&gt;build.sh</tt> file, like Atlas. <cite>build.py</cite> is the newer format, and\nuses yaml metadata in <tt><span class=\"pre\">&lt;package&gt;/&lt;version&gt;/build.yml</span></tt>.</p>\n<p>The base image for Galaxy packages is Debian Squeeze. This will hopefully\nproduce binaries usable on Galaxy\u2019s targeted platforms (at time of writing:\nCentOS 6+, Debian 6.0+, Ubuntu 12.04+).</p>\n<pre><span class=\"gp\">$</span> ./build galaxy &lt;package&gt;\n<span class=\"gp\">$</span> python build.py &lt;package&gt;\n</pre>\n<p>To build packages against a different OS, you can use the <cite>\u2013image</cite> flag, e.g.:</p>\n<pre><span class=\"gp\">$</span> ./build &lt;dist&gt;<span class=\"o\">[</span>:tag<span class=\"o\">]</span> &lt;package&gt;\n<span class=\"gp\">$</span> python build.py &lt;package&gt; --image &lt;dist&gt;<span class=\"o\">[</span>:tag<span class=\"o\">]</span>\n</pre>\n<p>e.g.</p>\n<pre><span class=\"gp\">$</span> ./build ubuntu:trusty nginx\n<span class=\"gp\">$</span> python build.py nginx --image debian:squeeze\n</pre>\n<p><strong>Building all the things:</strong></p>\n<p>There\u2019s a separate <tt><span class=\"pre\">build-all.sh</span></tt> which allows you to build all of the\npackages using their preferred build mechanism</p>\n<div id=\"notes-on-the-two-build-scripts\">\n<h4>Notes on the two build scripts</h4>\n<p><strong>build.py</strong></p>\n<p>The <tt>&lt;version&gt;</tt> option is optional, and defaults to the string <tt>'default'</tt>,\nwhich is useful for recipes that don\u2019t have version specific changes (E.g.\nbcftools 1.0 builds identically to 1.2)</p>\n</div>\n</div>\n<div id=\"python-wheels\">\n<h3>Python Wheels</h3>\n<p>Starforge can build both pure Python and C-extension Python modules into wheels\nfor Linux under Docker and for Mac OS X under QEMU/KVM. To do this, you\u2019ll want\nto install Starforge (preferably in a Python virtualenv) using <tt>pip install\nstarforge</tt> (to install from <a href=\"https://pypi.python.org/\" rel=\"nofollow\">PyPI</a>) or <tt>python setup.py install</tt> to install\nfrom the source.</p>\n<p>Docker (and QEMU) images to use are specified in <a href=\"https://github.com/galaxyproject/starforge/blob/master/starforge/config/default.yml\" rel=\"nofollow\">starforge/config/default.yml</a>.\nTo modify this file, copy it to\n<tt><span class=\"pre\">$XDG_CONFIG_HOME/galaxy-starforge/config.yml</span></tt> (<tt>$XDG_CONFIG_HOME</tt> is, by\ndefault <tt><span class=\"pre\">~/.config</span></tt>). The sample file <a href=\"http://jenkins.galaxyproject.org\" rel=\"nofollow\">wheels/build/wheels.yml</a> is used to\ndetermine what wheels can be built and their rules for building. To use this\nfile, use the <tt><span class=\"pre\">--wheels-config</span></tt> argument to <tt>starforge wheel</tt> or copy\n<tt>wheels.yml</tt> to <tt><span class=\"pre\">$XDG_CONFIG_HOME/galaxy-starforge/wheels.yml</span></tt>.</p>\n<p>Wheels can be built using <tt>starforge wheel &lt;package&gt;</tt>, e.g.:</p>\n<pre><span class=\"gp\">$</span> starforge wheel pycrypto\n<span class=\"gp\">$</span> starforge wheel --no-qemu pysam   <span class=\"c1\"># only build on docker</span>\n</pre>\n<p>See the output of <tt>starforge <span class=\"pre\">--help</span></tt> for help using the Starforge command-line interface.</p>\n<div id=\"pull-request-wheel-builder\">\n<h4>Pull Request wheel builder</h4>\n<p>Pull requests to the <a href=\"https://github.com/galaxyproject/starforge/\" rel=\"nofollow\">Starforge</a> repository on Github that modify\n<a href=\"http://jenkins.galaxyproject.org\" rel=\"nofollow\">wheels/build/wheels.yml</a> can automatically be built for all specified\nplatforms on a dedicated Starforge build server by the <a href=\"http://jenkins.galaxyproject.org\" rel=\"nofollow\">Galaxy Jenkins</a>\nservice. To utilize, modify wheels.yml as appropriate and create a pull\nrequest. Any member of the <a href=\"https://github.com/galaxyproject/galaxy/blob/dev/doc/source/project/organization.rst\" rel=\"nofollow\">Galaxy Committers</a> group can then authorize\nJenkins to initiate the build. If it fails, you can modify the pull request and\nfurther builds can be triggered.</p>\n</div>\n<div id=\"notes-on-images\">\n<h4>Notes on images</h4>\n<p><strong>Linux</strong></p>\n<p>Images used to build wheels are uploaded to the <a href=\"https://hub.docker.com/r/starforge/\" rel=\"nofollow\">Starforge Docker Hub</a> repo\nand will be pulled as necessary. Typically you will only use the\n<a href=\"https://hub.docker.com/r/starforge/manylinux1-wheel/\" rel=\"nofollow\">manylinux1-wheel</a> and\n<a href=\"https://hub.docker.com/r/starforge/manylinux1-32-wheel/\" rel=\"nofollow\">manylinux1-32-wheel</a> images, which are\n<a href=\"https://github.com/pypa/manylinux\" rel=\"nofollow\">manylinux</a> CentOS 5-based images that\nwill usually produce wheels usable on all Galaxy-supported platforms.</p>\n<p>You can also produce \u201cplatform-specific\u201d wheels by using the <tt><span class=\"pre\">full-wheel</span></tt>\nimageset. This is useful if you want to link to distribution-specific system\nversions of non-standard libraries without bundling them in to the wheel.</p>\n<p><strong>Mac OS X</strong></p>\n<p>Mac OS X images are not provided due to legal reasons. Consult the <cite>osx</cite>\ndocumentation for details.</p>\n</div>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id2\">\n<h3>0.4.0 (2018-04-25)</h3>\n</div>\n<div id=\"id3\">\n<h3>0.3.6 (2018-04-25)</h3>\n<ul>\n<li>Python 3-compatible <tt>setup.py</tt> wrapping. <a href=\"https://github.com/galaxyproject/starforge/pull/171\" rel=\"nofollow\">Pull Request 171</a></li>\n<li>Fix for pip 10. <a href=\"https://github.com/galaxyproject/starforge/commit/c516bae4052d326034c07d10ca0a639e7c393830\" rel=\"nofollow\">c516bae</a></li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.3.5 (2017-10-01)</h3>\n<ul>\n<li>Support xz/lzma tarballs for wheel builds <a href=\"https://github.com/galaxyproject/starforge/pull/166\" rel=\"nofollow\">Pull Request 166</a></li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.3.4 (2017-09-12)</h3>\n<ul>\n<li>Native support for auditwheel and delocate. (#160)</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.3.3 (2017-09-08)</h3>\n<ul>\n<li>Do not build sdists with the <cite>wheel</cite> subcommand by default. (#155)</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.3.2 (2017-09-08)</h3>\n<ul>\n<li>Fix a bug where the wrong working directory was set when building wheels with\nmultiple sources. (#154)</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.3.1 (2017-09-08)</h3>\n<ul>\n<li>Fix a bug with <tt>sudo</tt> and <tt>brew install</tt> on macOS. (#151).</li>\n<li>Short circuit platform caching on OS X (#150).</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.3 (2017-01-10)</h3>\n<ul>\n<li>Drop the dependency on the \u201cGalaxy\u201d wheel fork, which makes installation much\neasier. \u201cPlatform-specific\u201d wheels can still be built.</li>\n<li>When building Docker images, install Starforge from the local source instead\nof installing from PyPI or Github.</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.2.1 (2016-05-27)</h3>\n<ul>\n<li>Do a case-insensitive comparison for cached tarball names (uWSGI\u2019s project\nname is <tt>uWSGI</tt> but its source tarballs are named <tt><span class=\"pre\">uwsgi-*</span></tt>). <a href=\"https://github.com/galaxyproject/starforge/commit/7672547adf3fe05d19f29d62a6a766ef114fd459\" rel=\"nofollow\">7672547</a></li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>0.2 (2016-05-19)</h3>\n<ul>\n<li>Added support for building manylinux1 wheels. <a href=\"https://github.com/galaxyproject/starforge/commit/0dbecb79e28baecb62546b629cae9dbebf46df19\" rel=\"nofollow\">0dbecb7</a></li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>0.1.1 (2016-01-20)</h3>\n<ul>\n<li>Only running prebuild during wheel builds (and not sdists) was too naive,\nsince this prevents changing the version number of sdists in the prebuild\naction (a common use of the prebuild action). Instead, allow for separate\n<tt>wheel</tt>, <tt>sdist</tt>, and <tt>all</tt> prebuild actions.  Reverts the behavior of\n<a href=\"https://github.com/galaxyproject/starforge/commit/9008c57b09521298b919fac1de00fb62a448bcab\" rel=\"nofollow\">9008c57</a>. <a href=\"https://github.com/galaxyproject/starforge/issues/64\" rel=\"nofollow\">Issue 64</a></li>\n<li>Install Galaxy pip from Github instead of wheels.galaxyproject.org so that\nStarforge images can be built with new versions of Galaxy pip before they are\nreleased. <a href=\"https://github.com/galaxyproject/starforge/commit/97b4ba4a591e359b01dc69161925c301c9a7d1b7\" rel=\"nofollow\">97b4ba4</a></li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>0.1 (2016-01-12)</h3>\n<ul>\n<li>Reimplemented the wheel building scripts as a library and <tt>starforge</tt>\ncommand line</li>\n<li>Wrote some documentation</li>\n</ul>\n</div>\n<div id=\"older-than-0-1\">\n<h3>Older than 0.1</h3>\n<p>Originally Galaxy docker-build and later renamed Starforge, but as a collection\nof disjointed shell scripts, Python, and YAML used to build Galaxy Tool Shed\ndependencies, as well as rebuilding Debian and Ubuntu source packages with\nmodifications (which itself came from a project created to do the same via\nVagrant and Ansible called vadebuildsible).</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3807278, "releases": {"0.0.1.dev0": [], "0.1": [{"comment_text": "", "digests": {"md5": "0c4142f9ba5d8802bb5e16e3b17a2162", "sha256": "59b10b93d93b4179457c303855186e6749fbb3216b07197e48b30d7de7b18435"}, "downloads": -1, "filename": "starforge-0.1-py2-none-any.whl", "has_sig": true, "md5_digest": "0c4142f9ba5d8802bb5e16e3b17a2162", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 30294, "upload_time": "2016-01-12T17:52:14", "upload_time_iso_8601": "2016-01-12T17:52:14.726100Z", "url": "https://files.pythonhosted.org/packages/64/70/02b5a49938b49da7b43012be9132d374574b295efaacae482c0819edcc03/starforge-0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b0e3a930299a0d82c5aae3003585c73", "sha256": "71fd0636251c476a4736e5283d5d1d9f910e26b74068c2b554de2d000a9828cd"}, "downloads": -1, "filename": "starforge-0.1.tar.gz", "has_sig": true, "md5_digest": "4b0e3a930299a0d82c5aae3003585c73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19491, "upload_time": "2016-01-12T17:52:20", "upload_time_iso_8601": "2016-01-12T17:52:20.165208Z", "url": "https://files.pythonhosted.org/packages/7f/d2/dd022f7ae07fe21b36440a3064c5207521004050bb2eda07b2ad313e3454/starforge-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c56c4681f3140b7abf1269f2f40b5bba", "sha256": "7b4240436d96ff522825a5df1e68968a2bcd9a69bde724ac9425a4d2b3278608"}, "downloads": -1, "filename": "starforge-0.1.1-py2-none-any.whl", "has_sig": true, "md5_digest": "c56c4681f3140b7abf1269f2f40b5bba", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 31216, "upload_time": "2016-01-28T17:32:53", "upload_time_iso_8601": "2016-01-28T17:32:53.876410Z", "url": "https://files.pythonhosted.org/packages/a8/21/3d050e314ab7c9c1c3406968729f5ac9bf4371b6d2c961bd90c0377a0336/starforge-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97d51e3b1975b4daaacabc5ed97973b5", "sha256": "ab39f6c74671e7994cdac0738890eb4dd6963b3bfafe6658fe119efb3b6a585a"}, "downloads": -1, "filename": "starforge-0.1.1.tar.gz", "has_sig": true, "md5_digest": "97d51e3b1975b4daaacabc5ed97973b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21000, "upload_time": "2016-01-28T17:33:02", "upload_time_iso_8601": "2016-01-28T17:33:02.261575Z", "url": "https://files.pythonhosted.org/packages/f6/db/3408f910ddf7bbfd6f868700f374840873c132876a9e3f77cb231dfc7aad/starforge-0.1.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "b3d0cc3fe74b31afe063072735bb66f6", "sha256": "8ce9edb93edd133ba43883b05f283a5d3470452e933d4b5275bd2273a66fe061"}, "downloads": -1, "filename": "starforge-0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "b3d0cc3fe74b31afe063072735bb66f6", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 31648, "upload_time": "2016-05-19T19:04:26", "upload_time_iso_8601": "2016-05-19T19:04:26.067233Z", "url": "https://files.pythonhosted.org/packages/04/d8/7946fb781d631d6f1facc341eb25483be73eb7d66f6d5b274900d16f9f93/starforge-0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a4926049a0b806f39540654ca8c851a", "sha256": "eb38a0cb41d402172bc4722e61122a40563ce419ed01e6fa68cf4e8570412eac"}, "downloads": -1, "filename": "starforge-0.2.tar.gz", "has_sig": false, "md5_digest": "4a4926049a0b806f39540654ca8c851a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21473, "upload_time": "2016-05-19T19:04:35", "upload_time_iso_8601": "2016-05-19T19:04:35.633036Z", "url": "https://files.pythonhosted.org/packages/7e/41/e5212b1f0a3a6bfb56573d3d90a7db1866b7d9812040cc19748d4c4e054f/starforge-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "92672624292bbaaaaf11cf00edbd92da", "sha256": "7e52dbc29022ef94506c519ffc0f437b852374d4a0bf9eb8ecf8c1d781c72c49"}, "downloads": -1, "filename": "starforge-0.2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "92672624292bbaaaaf11cf00edbd92da", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 31938, "upload_time": "2016-05-27T15:23:36", "upload_time_iso_8601": "2016-05-27T15:23:36.377440Z", "url": "https://files.pythonhosted.org/packages/26/05/e55dfcd3ce2b02fce88978839e989a877de24806cf9ebebb8e2b11792afb/starforge-0.2.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9bf0b0add60bdc6b362223797debde93", "sha256": "65c0c130a0c7fdbf2a808d122c0716e1b942bf09b6c0ad820f830408f5749ee1"}, "downloads": -1, "filename": "starforge-0.2.1.tar.gz", "has_sig": false, "md5_digest": "9bf0b0add60bdc6b362223797debde93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21659, "upload_time": "2016-05-27T15:23:40", "upload_time_iso_8601": "2016-05-27T15:23:40.367454Z", "url": "https://files.pythonhosted.org/packages/e9/8b/cbb980ea610a61b8b4d0bfcc49233418282f7a92fa77291a21d43465d11b/starforge-0.2.1.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "950abec3b4540c296335a8b5de3c958c", "sha256": "e954f8bae0ea786a69fa32a7bf3d8af8121e6898cfbb7173a89a91ece5cf1454"}, "downloads": -1, "filename": "starforge-0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "950abec3b4540c296335a8b5de3c958c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 34156, "upload_time": "2017-01-11T15:47:16", "upload_time_iso_8601": "2017-01-11T15:47:16.136414Z", "url": "https://files.pythonhosted.org/packages/b6/51/78f30256d323f29ec3ad08dae4ff0cbeb84bc832234a8104cee512cdab98/starforge-0.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5974d3925e5202185b537f91bb81237", "sha256": "820cdfa0159a946560d34652de46a8b0090f10ac616cd5a7c4fb091ad15d5bb2"}, "downloads": -1, "filename": "starforge-0.3.tar.gz", "has_sig": false, "md5_digest": "b5974d3925e5202185b537f91bb81237", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26890, "upload_time": "2017-01-11T15:47:17", "upload_time_iso_8601": "2017-01-11T15:47:17.970687Z", "url": "https://files.pythonhosted.org/packages/fc/70/069c1c64e506c6badc4f42279aa936ef27e4d2f67f2de673d63138cece68/starforge-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "f4f427172f533e75b8a26a9ed330f8b3", "sha256": "1c69488512db8dfd3dfc9d8bf6a3ea2bc8461edf7a83924d0bbf6efccdbf71b1"}, "downloads": -1, "filename": "starforge-0.3.1-py2-none-any.whl", "has_sig": true, "md5_digest": "f4f427172f533e75b8a26a9ed330f8b3", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 34405, "upload_time": "2017-09-08T14:41:33", "upload_time_iso_8601": "2017-09-08T14:41:33.549701Z", "url": "https://files.pythonhosted.org/packages/82/ad/91a684c0fe9132ea644b6a4fcadbdf9465210568bfef0abd1d89476a6dd7/starforge-0.3.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "39be7436c39188e8f8b1e318a640f6eb", "sha256": "43e4dc5151a1199b6de23243794697d98230e1360ccb5ad6e973f498204313b1"}, "downloads": -1, "filename": "starforge-0.3.1.tar.gz", "has_sig": true, "md5_digest": "39be7436c39188e8f8b1e318a640f6eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23683, "upload_time": "2017-09-08T14:41:36", "upload_time_iso_8601": "2017-09-08T14:41:36.439612Z", "url": "https://files.pythonhosted.org/packages/df/fb/bb5634678408c217b7628c81368e0130af6af9c40f843728569fbef18212/starforge-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "6a2e9b96abb73432c29e36f091765f28", "sha256": "ea3e02f5948c675b8e994ac138c8fbcbc1d7ace38dfe5149cdc48309c9dcdf7f"}, "downloads": -1, "filename": "starforge-0.3.2-py2-none-any.whl", "has_sig": true, "md5_digest": "6a2e9b96abb73432c29e36f091765f28", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 34505, "upload_time": "2017-09-08T16:51:13", "upload_time_iso_8601": "2017-09-08T16:51:13.312158Z", "url": "https://files.pythonhosted.org/packages/62/6f/193b92dbbbdc696c3ef88ebf6ca475b58296896f3d312b4a772d695d30b5/starforge-0.3.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4af33d0ae3894912ab48e6681800501a", "sha256": "234f64673c3ccd74c519a906d5e5fd7887eeb092652327bfc02df5645e91ce8d"}, "downloads": -1, "filename": "starforge-0.3.2.tar.gz", "has_sig": true, "md5_digest": "4af33d0ae3894912ab48e6681800501a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23884, "upload_time": "2017-09-08T16:51:17", "upload_time_iso_8601": "2017-09-08T16:51:17.117229Z", "url": "https://files.pythonhosted.org/packages/3c/f2/1e98af460e50288dbe2e8b689f491671caae9869eb88ee17f826baa68295/starforge-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "8d98d6ba36ef1062c327f2215b2604af", "sha256": "f70704d5a0967ab5eaba2aac58183712f8c02c9f3669693092d350cab19293f3"}, "downloads": -1, "filename": "starforge-0.3.3-py2-none-any.whl", "has_sig": true, "md5_digest": "8d98d6ba36ef1062c327f2215b2604af", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 34614, "upload_time": "2017-09-08T21:23:52", "upload_time_iso_8601": "2017-09-08T21:23:52.740274Z", "url": "https://files.pythonhosted.org/packages/47/ef/4bec27db6fd3edc8fdbae42b95a8e9a4f76f144abfd343d4a6f1f8c966f8/starforge-0.3.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "709b1a1f392f18a35b3135134ec42ac8", "sha256": "31da7c57920f77b8ad8fb26142d4ed19e52b999a4f7f773e038e21783d8452e5"}, "downloads": -1, "filename": "starforge-0.3.3.tar.gz", "has_sig": true, "md5_digest": "709b1a1f392f18a35b3135134ec42ac8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23845, "upload_time": "2017-09-08T21:23:54", "upload_time_iso_8601": "2017-09-08T21:23:54.033348Z", "url": "https://files.pythonhosted.org/packages/fc/04/741c754d4190ef75a374a187a22ed68b71f5ef8be0c6cfe800c0af0d6a7e/starforge-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "506cbd6ef41f13ffdb6125e529eab9f2", "sha256": "449ddf890b3bd148057bf5d26d53db0c1c100e61b5c559e87e9db339d5c6b507"}, "downloads": -1, "filename": "starforge-0.3.4-py2-none-any.whl", "has_sig": true, "md5_digest": "506cbd6ef41f13ffdb6125e529eab9f2", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 34900, "upload_time": "2017-09-12T07:16:13", "upload_time_iso_8601": "2017-09-12T07:16:13.939612Z", "url": "https://files.pythonhosted.org/packages/ae/68/b59b9a4ac8cbde8f8ee40bf75c6cbf6c8ff41ff073cd013f22c7879b072f/starforge-0.3.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1fe7f148cce1fe8282de4f696992df43", "sha256": "57ac12466def60aa5c0da3d0adb91f0d5b5af40e18ff52bfc1bcf42bd4c4dcc5"}, "downloads": -1, "filename": "starforge-0.3.4.tar.gz", "has_sig": true, "md5_digest": "1fe7f148cce1fe8282de4f696992df43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24022, "upload_time": "2017-09-12T07:16:16", "upload_time_iso_8601": "2017-09-12T07:16:16.108735Z", "url": "https://files.pythonhosted.org/packages/7c/29/bd11200ee88ecec24f7529079d84c060570d040e8666f32d691c352e127a/starforge-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "0a85b8a5c67f64477ad6d82b267c6828", "sha256": "4a26c6bcef1708cb7a823be5684915641b393fb3e07ef0a722f0313e57f7f50a"}, "downloads": -1, "filename": "starforge-0.3.5-py2-none-any.whl", "has_sig": false, "md5_digest": "0a85b8a5c67f64477ad6d82b267c6828", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 35583, "upload_time": "2017-10-01T14:03:43", "upload_time_iso_8601": "2017-10-01T14:03:43.913366Z", "url": "https://files.pythonhosted.org/packages/56/16/0a96f16a71d1babdb7d2e2bd180a553ea2ff2099e218c5a3a0e42437a273/starforge-0.3.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fcfb6df0aaaaac61271b73a763915fa4", "sha256": "a2135ddea6c2108956d4924134c74c3c6746f8a32ee8e73e0f443b01c25f96ec"}, "downloads": -1, "filename": "starforge-0.3.5.tar.gz", "has_sig": false, "md5_digest": "fcfb6df0aaaaac61271b73a763915fa4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25867, "upload_time": "2017-10-01T14:03:45", "upload_time_iso_8601": "2017-10-01T14:03:45.890160Z", "url": "https://files.pythonhosted.org/packages/c7/78/0ff493e4aa52505ea1eba1f6a667899826466682292fb914f9590dd788e1/starforge-0.3.5.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "2d25fe2b70bcb7bf5e8894404f811df0", "sha256": "4bf2f71ea3e8353d574b77b64a46d5b577503131daff191af5214c15834b3980"}, "downloads": -1, "filename": "starforge-0.3.6-py2-none-any.whl", "has_sig": false, "md5_digest": "2d25fe2b70bcb7bf5e8894404f811df0", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 35818, "upload_time": "2018-04-25T15:36:47", "upload_time_iso_8601": "2018-04-25T15:36:47.402950Z", "url": "https://files.pythonhosted.org/packages/bc/bc/8d38476429c39a028904dddc27678bd24e6b502544b8e8e989789af30470/starforge-0.3.6-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e427097a5357679391b8f5fc04ac7815", "sha256": "1b31b563583bdd12270b745aa86b7cd84c3716b364f0ac67f4bb397f6126dd5e"}, "downloads": -1, "filename": "starforge-0.3.6.tar.gz", "has_sig": false, "md5_digest": "e427097a5357679391b8f5fc04ac7815", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26101, "upload_time": "2018-04-25T15:36:48", "upload_time_iso_8601": "2018-04-25T15:36:48.645075Z", "url": "https://files.pythonhosted.org/packages/61/22/8845091eba84a7288fd4865d2b53c38c990b66ff12c2d14aea32d8b3e41a/starforge-0.3.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2d25fe2b70bcb7bf5e8894404f811df0", "sha256": "4bf2f71ea3e8353d574b77b64a46d5b577503131daff191af5214c15834b3980"}, "downloads": -1, "filename": "starforge-0.3.6-py2-none-any.whl", "has_sig": false, "md5_digest": "2d25fe2b70bcb7bf5e8894404f811df0", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 35818, "upload_time": "2018-04-25T15:36:47", "upload_time_iso_8601": "2018-04-25T15:36:47.402950Z", "url": "https://files.pythonhosted.org/packages/bc/bc/8d38476429c39a028904dddc27678bd24e6b502544b8e8e989789af30470/starforge-0.3.6-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e427097a5357679391b8f5fc04ac7815", "sha256": "1b31b563583bdd12270b745aa86b7cd84c3716b364f0ac67f4bb397f6126dd5e"}, "downloads": -1, "filename": "starforge-0.3.6.tar.gz", "has_sig": false, "md5_digest": "e427097a5357679391b8f5fc04ac7815", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26101, "upload_time": "2018-04-25T15:36:48", "upload_time_iso_8601": "2018-04-25T15:36:48.645075Z", "url": "https://files.pythonhosted.org/packages/61/22/8845091eba84a7288fd4865d2b53c38c990b66ff12c2d14aea32d8b3e41a/starforge-0.3.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:39 2020"}