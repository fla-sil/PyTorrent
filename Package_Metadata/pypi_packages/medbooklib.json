{"info": {"author": "Ted Goldstein and Robert Baertsch", "author_email": "baertsch@soe.ucsc.edu", "bugtrack_url": null, "classifiers": [], "description": "MedBookLib provides a python interface to MedBook (R version should come next).\n\nPYTHON\n\n  MedBookConnection(<name optional>, <password optional>)\n    You begin the conversation by creating a MedBook Connection object which will be used\n\n    MedBookConnection(\"ted@soe.ucsc.edu\", \"test1234\");\n\n    or using the MedBook environment  variables: MEDBOOKUSER, MEDBOOKPASSWORD\n\n    medbook = MedBookConnection();\n\n    This will throw an exception object if it does not make authenticated connection to the MedBook server. \n\n`\n  MedBookConnection.find(<collection required>, <mongo query optional>, <keyword querys optional>)\n\n    The simplest find command will return all of the data objects in a collection. For example\n\n        data = medbook.find(\"Clinical_Info\");\n\n\n\n    Some tables such as Expression2 are very large and if just need one gene from one study, you can do this by simply doing:\n\n        data = medbook.find(\"Expression2\", { \"Study_ID\": \"prad_wcdt\", \"gene\": \"BRCA1\" });\n\n\n    This can be more easily expressed using the python keyword idiom:\n\n        data = medbook.find(\"Expression2\", Study_ID=\"prad_wcdt\", gene=\"BRCA1\");\n\n\n    But use the mongo syntax to express complicated queriess, \n\n        data = medbook.find(\"Expression2\", { \"Study_ID\": {\"$in\": [ \"prad_tcga\", \"prad_wcdt\"] },  \"gene\": { \"$in\": [\"EGFR\",\"BRCA1\"]}});\n\n\n    You cannot combine keyword queries and mongo queries.\n\n\n\nOPTIONAL ENVIRONEMNT VARIABLE CREDENTIALS \n    You must provide credentials to MedBook in the form of a name and password. There are two ways\n    to do this:\n\n    Preferred way: Set the MEDBOOKUSER and MEDBOOKPASSWORD environment variables. For exmaple:\n        export MEDBOOKUSER=ted@soe.ucsc.edu\n        export MEDBOOKPASSWORD=test1234\n\n\n    There is also a MEDBOOKSERVER environment variable.  If no server is specificed\n    The default server is https://medbook.ucsc.edu. But you can also set the server to be your laptop.\n\n    Common ones are:\n\n        export MEDBOOKSERVER=https://su2c-dev.ucsc.edu/\n        \n        export MEDBOOKSERVER=http://su2c-dev.ucsc.edu:20012/\n        \n        export MEDBOOKSERVER=http://localhost:20012/\n\n    Alternatively, you can provide the name and password in the parameters of the MedBookConnection object (see above).\n\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://medbook.ucsc.edu", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "medbooklib", "package_url": "https://pypi.org/project/medbooklib/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/medbooklib/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://medbook.ucsc.edu"}, "release_url": "https://pypi.org/project/medbooklib/1.0/", "requires_dist": null, "requires_python": null, "summary": "MedBook Platform for Cancer Data Capture, Analysis and Sharing", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            MedBookLib provides a python interface to MedBook (R version should come next).<br><br>PYTHON<br><br>  MedBookConnection(&lt;name optional&gt;, &lt;password optional&gt;)<br>    You begin the conversation by creating a MedBook Connection object which will be used<br><br>    MedBookConnection(\"ted@soe.ucsc.edu\", \"test1234\");<br><br>    or using the MedBook environment  variables: MEDBOOKUSER, MEDBOOKPASSWORD<br><br>    medbook = MedBookConnection();<br><br>    This will throw an exception object if it does not make authenticated connection to the MedBook server. <br><br>`<br>  MedBookConnection.find(&lt;collection required&gt;, &lt;mongo query optional&gt;, &lt;keyword querys optional&gt;)<br><br>    The simplest find command will return all of the data objects in a collection. For example<br><br>        data = medbook.find(\"Clinical_Info\");<br><br><br><br>    Some tables such as Expression2 are very large and if just need one gene from one study, you can do this by simply doing:<br><br>        data = medbook.find(\"Expression2\", { \"Study_ID\": \"prad_wcdt\", \"gene\": \"BRCA1\" });<br><br><br>    This can be more easily expressed using the python keyword idiom:<br><br>        data = medbook.find(\"Expression2\", Study_ID=\"prad_wcdt\", gene=\"BRCA1\");<br><br><br>    But use the mongo syntax to express complicated queriess, <br><br>        data = medbook.find(\"Expression2\", { \"Study_ID\": {\"$in\": [ \"prad_tcga\", \"prad_wcdt\"] },  \"gene\": { \"$in\": [\"EGFR\",\"BRCA1\"]}});<br><br><br>    You cannot combine keyword queries and mongo queries.<br><br><br><br>OPTIONAL ENVIRONEMNT VARIABLE CREDENTIALS <br>    You must provide credentials to MedBook in the form of a name and password. There are two ways<br>    to do this:<br><br>    Preferred way: Set the MEDBOOKUSER and MEDBOOKPASSWORD environment variables. For exmaple:<br>        export MEDBOOKUSER=ted@soe.ucsc.edu<br>        export MEDBOOKPASSWORD=test1234<br><br><br>    There is also a MEDBOOKSERVER environment variable.  If no server is specificed<br>    The default server is https://medbook.ucsc.edu. But you can also set the server to be your laptop.<br><br>    Common ones are:<br><br>        export MEDBOOKSERVER=https://su2c-dev.ucsc.edu/<br>        <br>        export MEDBOOKSERVER=http://su2c-dev.ucsc.edu:20012/<br>        <br>        export MEDBOOKSERVER=http://localhost:20012/<br><br>    Alternatively, you can provide the name and password in the parameters of the MedBookConnection object (see above).<br><br><br><br>\n          </div>"}, "last_serial": 1555849, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "b1082c312a3954f8d5eda9f5b2feda69", "sha256": "e8bcd9657a77f607e35fbe546ba334df979e867411147d52680e2ea703b1845c"}, "downloads": -1, "filename": "medbooklib-1.0.tar.gz", "has_sig": false, "md5_digest": "b1082c312a3954f8d5eda9f5b2feda69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3043, "upload_time": "2015-05-21T00:50:37", "upload_time_iso_8601": "2015-05-21T00:50:37.753948Z", "url": "https://files.pythonhosted.org/packages/89/c2/dbb49bfff525db4c1540f1764d7d5acae303c33da6dfb3ba208fb6cc1384/medbooklib-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b1082c312a3954f8d5eda9f5b2feda69", "sha256": "e8bcd9657a77f607e35fbe546ba334df979e867411147d52680e2ea703b1845c"}, "downloads": -1, "filename": "medbooklib-1.0.tar.gz", "has_sig": false, "md5_digest": "b1082c312a3954f8d5eda9f5b2feda69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3043, "upload_time": "2015-05-21T00:50:37", "upload_time_iso_8601": "2015-05-21T00:50:37.753948Z", "url": "https://files.pythonhosted.org/packages/89/c2/dbb49bfff525db4c1540f1764d7d5acae303c33da6dfb3ba208fb6cc1384/medbooklib-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:38 2020"}