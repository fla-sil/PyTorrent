{"info": {"author": "Amir Szekely", "author_email": "kichik+pyndef@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: zlib/libpng License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "#################################################\nPython Module for NFC Data Exchange Format (NDEF)\n#################################################\n\nRelease v0.2 -- January 7th, 2020\n\nThe **ndef** modules provides methods for encoding and decoding messages and records in the NDEF format according to NFC\nForum technical specification. Its main purpose is to provide comprehensive verification of raw NDEF messages. It can be\nused to verify messages before writing them to an actual tag.\n\nAvailable on PyPI_.\n\n.. _PyPI: https://pypi.python.org/pypi/ndef/\n\n.. image:: https://travis-ci.org/kichik/pyndef.svg?branch=master\n   :target: https://travis-ci.org/kichik/pyndef\n\n.. image:: https://badge.fury.io/py/pyndef.svg\n    :target: https://badge.fury.io/py/ndef\n\n\nUsage\n-----\n\nValid Message\n~~~~~~~~~~~~~\n\n  >>> import ndef\n  >>> message_data = 'D1010F5402656E48656C6C6F20776F726C6421'.decode('hex')\n  >>> message = ndef.NdefMessage(message_data)\n  >>> record = message.records[0]\n  >>> record.tnf\n  1\n  >>> record.type\n  'T'\n  >>> record.id\n  >>> record.payload\n  '\\x02enHello world!'\n  >>>\n\nInvalid Message\n~~~~~~~~~~~~~~~\n\n  >>> import ndef\n  >>> message_data = '9901050155610123456761'.decode('hex')\n  >>> message = ndef.NdefMessage(message_data)\n  Traceback (most recent call last):\n    File \"<stdin>\", line 1, in <module>\n    File \"ndef\\ndef.py\", line 274, in __init__\n      self.verify()\n    File \"ndef\\ndef.py\", line 278, in verify\n      self._verify_begin_end()\n    File \"ndef\\ndef.py\", line 296, in _verify_begin_end\n      raise InvalidNdefMessage(\"last record's ME flag is off\")\n  ndef.ndef.InvalidNdefMessage: last record's ME flag is off\n  >>>\n\nCreate Message\n~~~~~~~~~~~~~~\n\n  >>> import ndef\n  >>> text_record = (ndef.TNF_WELL_KNOWN, ndef.RTD_TEXT, 'id', 'hello world')\n  >>> text_message = ndef.new_message(text_record)\n  >>> text_raw_ndef = text_message.to_buffer()\n  >>> text_raw_ndef.encode('hex')\n  'd9010b0254696468656c6c6f20776f726c64'\n  >>>\n\nAlternatives\n------------\n\n- nfcpy_: full implementation of spec including actual communication code\n- `Python NDEF library and tools`_: aimed at security research\n- `pynfc`_: pythonic interface for the libnfc library\n\n.. _nfcpy: http://nfcpy.readthedocs.org/\n.. _Python NDEF library and tools: http://mulliner.org/nfc/feed/collins_nfcndef_python_stuff.tgz\n.. _pynfc: https://code.google.com/p/pynfc/\n\nLicense\n-------\n\n::\n\n  Copyright (c) 2014 Amir Szekely\n\n  This software is provided 'as-is', without any express or implied\n  warranty. In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n     1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n\n     2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n\n     3. This notice may not be removed or altered from any source\n     distribution.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/kichik/pyndef", "keywords": "", "license": "zlib/libpng", "maintainer": "", "maintainer_email": "", "name": "ndef", "package_url": "https://pypi.org/project/ndef/", "platform": "", "project_url": "https://pypi.org/project/ndef/", "project_urls": {"Homepage": "http://github.com/kichik/pyndef"}, "release_url": "https://pypi.org/project/ndef/0.2/", "requires_dist": ["six"], "requires_python": "", "summary": "NDEF (NFC Data Exchange Format) parser and verifier", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Release v0.2 \u2013 January 7th, 2020</p>\n<p>The <strong>ndef</strong> modules provides methods for encoding and decoding messages and records in the NDEF format according to NFC\nForum technical specification. Its main purpose is to provide comprehensive verification of raw NDEF messages. It can be\nused to verify messages before writing them to an actual tag.</p>\n<p>Available on <a href=\"https://pypi.python.org/pypi/ndef/\" rel=\"nofollow\">PyPI</a>.</p>\n<a href=\"https://travis-ci.org/kichik/pyndef\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/kichik/pyndef.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/edb85d135ddf7592885eb622bb780c19a192252c/68747470733a2f2f7472617669732d63692e6f72672f6b696368696b2f70796e6465662e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/ndef\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/pyndef.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e77b0186af98b5a24bd6f237d5df7f0c4f64e411/68747470733a2f2f62616467652e667572792e696f2f70792f70796e6465662e737667\"></a>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"valid-message\">\n<h3>Valid Message</h3>\n<blockquote>\n<pre>&gt;&gt;&gt; import ndef\n&gt;&gt;&gt; message_data = 'D1010F5402656E48656C6C6F20776F726C6421'.decode('hex')\n&gt;&gt;&gt; message = ndef.NdefMessage(message_data)\n&gt;&gt;&gt; record = message.records[0]\n&gt;&gt;&gt; record.tnf\n1\n&gt;&gt;&gt; record.type\n'T'\n&gt;&gt;&gt; record.id\n&gt;&gt;&gt; record.payload\n'\\x02enHello world!'\n&gt;&gt;&gt;\n</pre>\n</blockquote>\n</div>\n<div id=\"invalid-message\">\n<h3>Invalid Message</h3>\n<blockquote>\n<pre>&gt;&gt;&gt; import ndef\n&gt;&gt;&gt; message_data = '9901050155610123456761'.decode('hex')\n&gt;&gt;&gt; message = ndef.NdefMessage(message_data)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n  File \"ndef\\ndef.py\", line 274, in __init__\n    self.verify()\n  File \"ndef\\ndef.py\", line 278, in verify\n    self._verify_begin_end()\n  File \"ndef\\ndef.py\", line 296, in _verify_begin_end\n    raise InvalidNdefMessage(\"last record's ME flag is off\")\nndef.ndef.InvalidNdefMessage: last record's ME flag is off\n&gt;&gt;&gt;\n</pre>\n</blockquote>\n</div>\n<div id=\"create-message\">\n<h3>Create Message</h3>\n<blockquote>\n<pre>&gt;&gt;&gt; import ndef\n&gt;&gt;&gt; text_record = (ndef.TNF_WELL_KNOWN, ndef.RTD_TEXT, 'id', 'hello world')\n&gt;&gt;&gt; text_message = ndef.new_message(text_record)\n&gt;&gt;&gt; text_raw_ndef = text_message.to_buffer()\n&gt;&gt;&gt; text_raw_ndef.encode('hex')\n'd9010b0254696468656c6c6f20776f726c64'\n&gt;&gt;&gt;\n</pre>\n</blockquote>\n</div>\n</div>\n<div id=\"alternatives\">\n<h2>Alternatives</h2>\n<ul>\n<li><a href=\"http://nfcpy.readthedocs.org/\" rel=\"nofollow\">nfcpy</a>: full implementation of spec including actual communication code</li>\n<li><a href=\"http://mulliner.org/nfc/feed/collins_nfcndef_python_stuff.tgz\" rel=\"nofollow\">Python NDEF library and tools</a>: aimed at security research</li>\n<li><a href=\"https://code.google.com/p/pynfc/\" rel=\"nofollow\">pynfc</a>: pythonic interface for the libnfc library</li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<pre>Copyright (c) 2014 Amir Szekely\n\nThis software is provided 'as-is', without any express or implied\nwarranty. In no event will the authors be held liable for any damages\narising from the use of this software.\n\nPermission is granted to anyone to use this software for any purpose,\nincluding commercial applications, and to alter it and redistribute it\nfreely, subject to the following restrictions:\n\n   1. The origin of this software must not be misrepresented; you must not\n   claim that you wrote the original software. If you use this software\n   in a product, an acknowledgment in the product documentation would be\n   appreciated but is not required.\n\n   2. Altered source versions must be plainly marked as such, and must not be\n   misrepresented as being the original software.\n\n   3. This notice may not be removed or altered from any source\n   distribution.\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6412785, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "2a36f6f706760c0e328b5fa3b03b8a5e", "sha256": "fcdf15c4284843db77cdbb1330d48d2575c697b819da488af208ad3d22f97a5a"}, "downloads": -1, "filename": "ndef-0.1.zip", "has_sig": false, "md5_digest": "2a36f6f706760c0e328b5fa3b03b8a5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9810, "upload_time": "2014-02-22T21:14:48", "upload_time_iso_8601": "2014-02-22T21:14:48.400080Z", "url": "https://files.pythonhosted.org/packages/0e/40/3271e732557464fb62a39698cfb1deb0838457d7ac82028b6c052a024bd4/ndef-0.1.zip", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "02412d07f4839d5b1037cd4507814408", "sha256": "c6d963690a7d8b05afd6c452d5a72c8a36d46c20662b138aea9fdaad6c18a806"}, "downloads": -1, "filename": "ndef-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "02412d07f4839d5b1037cd4507814408", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6688, "upload_time": "2020-01-08T02:18:49", "upload_time_iso_8601": "2020-01-08T02:18:49.577342Z", "url": "https://files.pythonhosted.org/packages/f5/02/95e0b1f12b222fb9e6c9bd7479ed5b3ea070ecaabc22fb20d457aea963d6/ndef-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d18727ff978e126c27d4ce064997c21", "sha256": "7443321f5bd3808a600a8496d40fdc1e2dd2b5fd86283b657a14c209e4ba22d4"}, "downloads": -1, "filename": "ndef-0.2.tar.gz", "has_sig": false, "md5_digest": "1d18727ff978e126c27d4ce064997c21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5718, "upload_time": "2020-01-08T02:18:51", "upload_time_iso_8601": "2020-01-08T02:18:51.010963Z", "url": "https://files.pythonhosted.org/packages/57/46/8f4cf56acab4d9795747d3a3f9285c3d20d7a329879fad96664a2e5690b1/ndef-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "02412d07f4839d5b1037cd4507814408", "sha256": "c6d963690a7d8b05afd6c452d5a72c8a36d46c20662b138aea9fdaad6c18a806"}, "downloads": -1, "filename": "ndef-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "02412d07f4839d5b1037cd4507814408", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6688, "upload_time": "2020-01-08T02:18:49", "upload_time_iso_8601": "2020-01-08T02:18:49.577342Z", "url": "https://files.pythonhosted.org/packages/f5/02/95e0b1f12b222fb9e6c9bd7479ed5b3ea070ecaabc22fb20d457aea963d6/ndef-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d18727ff978e126c27d4ce064997c21", "sha256": "7443321f5bd3808a600a8496d40fdc1e2dd2b5fd86283b657a14c209e4ba22d4"}, "downloads": -1, "filename": "ndef-0.2.tar.gz", "has_sig": false, "md5_digest": "1d18727ff978e126c27d4ce064997c21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5718, "upload_time": "2020-01-08T02:18:51", "upload_time_iso_8601": "2020-01-08T02:18:51.010963Z", "url": "https://files.pythonhosted.org/packages/57/46/8f4cf56acab4d9795747d3a3f9285c3d20d7a329879fad96664a2e5690b1/ndef-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:44 2020"}