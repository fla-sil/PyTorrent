{"info": {"author": "leucothia", "author_email": "devops@oceanprotocol.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "[![banner](https://raw.githubusercontent.com/oceanprotocol/art/master/github/repo-banner%402x.png)](https://oceanprotocol.com)\n\n# provider\n\n> \ud83d\udc0b Provide an off-chain database store for data assets metadata and registration and perform part of access control in collaboration with the keeper-contracts.\n> [oceanprotocol.com](https://oceanprotocol.com)\n\n[![Docker Build Status](https://img.shields.io/docker/build/oceanprotocol/provider.svg)](https://hub.docker.com/r/oceanprotocol/provider/) [![Travis (.com)](https://img.shields.io/travis/com/oceanprotocol/provider.svg)](https://travis-ci.com/oceanprotocol/provider) [![Codacy coverage](https://img.shields.io/codacy/coverage/0fa4c47049434406ad80932712f7ee6f.svg)](https://app.codacy.com/project/ocean-protocol/provider/dashboard) [![PyPI](https://img.shields.io/pypi/v/ocean-provider.svg)](https://pypi.org/project/ocean-provider/) [![GitHub contributors](https://img.shields.io/github/contributors/oceanprotocol/provider.svg)](https://github.com/oceanprotocol/provider/graphs/contributors)\n\n---\n\n**\ud83d\udc32\ud83e\udd91 THERE BE DRAGONS AND SQUIDS. This is in alpha state and you can expect running into problems. If you run into them, please open up [a new issue](https://github.com/oceanprotocol/provider/issues). \ud83e\udd91\ud83d\udc32**\n\n---\n\n## Table of Contents\n\n  - [Features](#features)\n  - [Prerequisites](#prerequisites)\n  - [Quick Start](#quick-start)\n  - [API documentation](#api-documentation)\n  - [Configuration](#configuration)\n  - [Code style](#code-style)\n  - [Testing](#testing)\n  - [New Version](#new-version)\n  - [License](#license)\n\n---\n\n\n## Features\n\nThe Provider handles all non-blockchain related core functionality, including compute and storage interfaces, and connections to Ocean Keepers. Additionally, the Provider implements Ocean's Service Integrity and Orchestration capabilities, allowing for services to be requested, ordered, scheduled, verfied, and curated. \n\n## Running Locally, for Dev and Test\n\nIf you want to contribute to the development of the Provider, then you could do the following. (If you want to run a Provider in production, then you will have to do something else.)\n\nFirst, clone this repository:\n\n```bash\ngit clone git@github.com:oceanprotocol/provider.git\ncd provider/\n```\n\nThen run some things that the Provider expects to be running:\n\n```bash\ncd docker\ndocker-compose up\n```\n\nYou can see what that runs by reading [docker/docker-compose.yml](docker/docker-compose.yml).\nNote that it runs MongoDB but the Provider can also work with BigchainDB or Elasticsearch.\nIt also runs [Ganache](https://github.com/trufflesuite/ganache) with all [Ocean Protocol Keeper Contracts](https://github.com/oceanprotocol/keeper-contracts) and [Ganache CLI](https://github.com/trufflesuite/ganache-cli).\n\nThe most simple way to start is:\n\n```bash\npip install -r requirements_dev.txt # or requirements_conda.txt if using Conda\nexport FLASK_APP=provider/run.py\nexport CONFIG_FILE=oceandb.ini\n./scripts/deploy\nflask run\n```\n\nThat will use HTTP (i.e. not SSL/TLS).\n\nThe proper way to run the Flask application is using an application server such as Gunicorn. This allow you to run using SSL/TLS.\nYou can generate some certificates for testing by doing:\n\n```bash\nopenssl req -x509 -newkey rsa:4096 -nodes -out cert.pem -keyout key.pem -days 365\n```\n\nand when it asks for the Common Name (CN), answer `localhost`\n\nThen edit the config file `oceandb.ini` so that:\n\n```yaml\nprovider.scheme = https\nprovider.host = localhost\nprovider.port = 5000\n```\n\nThen execute this command:\n\n```bash\ngunicorn --certfile cert.pem --keyfile key.pem -b 0.0.0.0:5000 -w 1 provider.run:app\n```\n\n## API documentation\n\nOnce you have your application running you can get access to the documentation at:\n\n```bash\nhttps://127.0.0.1:5000/api/v1/docs\n```\n\n(or `http` if you're using HTTP.)\n\nTip: if your browser shows the swagger header across the top but says \"Failed to load spec.\" then we found that, in Chrome, if we went to chrome://flags/#allow-insecure-localhost and toggled it to Enabled, then relaunched Chrome, it worked.\n\nIf you want to know more about the ontology of the metadata, you can find all the information in\n[OEP-8](https://github.com/oceanprotocol/OEPs/tree/master/8).\n\n## Configuration\n\nYou can pass the configuration using the CONFIG_FILE environment variable (recommended) or locating your configuration in oceandb.ini file.\n\nIn the configuration there are now three sections:\n\n- oceandb: Contains different values to connect with oceandb. You can find more information about how to use OceanDB [here](https://github.com/oceanprotocol/oceandb-driver-interface).\n- keeper-contracts: This section help you to connect with the network where you have deployed the contracts. You can find more information of how to configure [here](https://github.com/oceanprotocol/squid-py#quick-start).\n    ```yaml\n    [keeper-contracts]\n    keeper.host=0.0.0.0\n    keeper.port=8545\n    #contracts.folder=venv/contracts\n    market.address=0xbc0be3598a31715bac5235718f96bb242804e61e\n    auth.address=0x6ba5f72e5399aa67db5b22ee791851937d4910f5\n    token.address=0xfd83b273b395b1029c41bb32071500bf662e6a8a\n    provider.address=\n    ```\n- resources: This section have properties to connect with the different resourcer provideres. At the moment we are only using Azure but this is going to increase quickly.\n    ```yaml\n    [resources]\n    azure.account.name=testocnfiles\n    azure.account.key=k2Vk4yfb88WNlWW+W54a8ytJm8MYO1GW9IgiV7TNGKSdmKyVNXzyhiRZ3U1OHRotj/vTYdhJj+ho30HPyJpuYQ==\n    azure.container=testfiles\n    ```\n\n\n## Code style\n\nThe information about code style in python is documented in this two links [python-developer-guide](https://github.com/oceanprotocol/dev-ocean/blob/master/doc/development/python-developer-guide.md)\nand [python-style-guide](https://github.com/oceanprotocol/dev-ocean/blob/master/doc/development/python-style-guide.md).\n\n## Testing\n\nAutomatic tests are setup via Travis, executing `tox`.\nOur test use pytest framework.\n\n## New Version\n\nThe `bumpversion.sh` script helps to bump the project version. You can execute the script using as first argument {major|minor|patch} to bump accordingly the version.\n\n## License\n\n```\nCopyright 2018 Ocean Protocol Foundation Ltd.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/oceanprotocol/provider", "keywords": "ocean-provider", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "ocean-provider", "package_url": "https://pypi.org/project/ocean-provider/", "platform": "", "project_url": "https://pypi.org/project/ocean-provider/", "project_urls": {"Homepage": "https://github.com/oceanprotocol/provider"}, "release_url": "https://pypi.org/project/ocean-provider/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "\ud83d\udc33 Ocean Provider.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://oceanprotocol.com\" rel=\"nofollow\"><img alt=\"banner\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fc369063dc398ae56147254a18c41557f71ae913/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6f6365616e70726f746f636f6c2f6172742f6d61737465722f6769746875622f7265706f2d62616e6e657225343032782e706e67\"></a></p>\n<h1>provider</h1>\n<blockquote>\n<p>\ud83d\udc0b Provide an off-chain database store for data assets metadata and registration and perform part of access control in collaboration with the keeper-contracts.\n<a href=\"https://oceanprotocol.com\" rel=\"nofollow\">oceanprotocol.com</a></p>\n</blockquote>\n<p><a href=\"https://hub.docker.com/r/oceanprotocol/provider/\" rel=\"nofollow\"><img alt=\"Docker Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/685b48755aac25231c435b3efe82a0ccff062af0/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f6275696c642f6f6365616e70726f746f636f6c2f70726f76696465722e737667\"></a> <a href=\"https://travis-ci.com/oceanprotocol/provider\" rel=\"nofollow\"><img alt=\"Travis (.com)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7b88656f04117e0de638ac565a3a3be759be4532/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f636f6d2f6f6365616e70726f746f636f6c2f70726f76696465722e737667\"></a> <a href=\"https://app.codacy.com/project/ocean-protocol/provider/dashboard\" rel=\"nofollow\"><img alt=\"Codacy coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8a867d7ef98c5ca6fc68685735fc8269a8c1c609/68747470733a2f2f696d672e736869656c64732e696f2f636f646163792f636f7665726167652f30666134633437303439343334343036616438303933323731326637656536662e737667\"></a> <a href=\"https://pypi.org/project/ocean-provider/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7d836429e94b8e9dbfb172a4d0a402a8c5979899/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6f6365616e2d70726f76696465722e737667\"></a> <a href=\"https://github.com/oceanprotocol/provider/graphs/contributors\" rel=\"nofollow\"><img alt=\"GitHub contributors\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/27d422756aa578606a815e15982ebade2a787ba9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f6f6365616e70726f746f636f6c2f70726f76696465722e737667\"></a></p>\n<hr>\n<p><strong>\ud83d\udc32\ud83e\udd91 THERE BE DRAGONS AND SQUIDS. This is in alpha state and you can expect running into problems. If you run into them, please open up <a href=\"https://github.com/oceanprotocol/provider/issues\" rel=\"nofollow\">a new issue</a>. \ud83e\udd91\ud83d\udc32</strong></p>\n<hr>\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#features\" rel=\"nofollow\">Features</a></li>\n<li><a href=\"#prerequisites\" rel=\"nofollow\">Prerequisites</a></li>\n<li><a href=\"#quick-start\" rel=\"nofollow\">Quick Start</a></li>\n<li><a href=\"#api-documentation\" rel=\"nofollow\">API documentation</a></li>\n<li><a href=\"#configuration\" rel=\"nofollow\">Configuration</a></li>\n<li><a href=\"#code-style\" rel=\"nofollow\">Code style</a></li>\n<li><a href=\"#testing\" rel=\"nofollow\">Testing</a></li>\n<li><a href=\"#new-version\" rel=\"nofollow\">New Version</a></li>\n<li><a href=\"#license\" rel=\"nofollow\">License</a></li>\n</ul>\n<hr>\n<h2>Features</h2>\n<p>The Provider handles all non-blockchain related core functionality, including compute and storage interfaces, and connections to Ocean Keepers. Additionally, the Provider implements Ocean's Service Integrity and Orchestration capabilities, allowing for services to be requested, ordered, scheduled, verfied, and curated.</p>\n<h2>Running Locally, for Dev and Test</h2>\n<p>If you want to contribute to the development of the Provider, then you could do the following. (If you want to run a Provider in production, then you will have to do something else.)</p>\n<p>First, clone this repository:</p>\n<pre>git clone git@github.com:oceanprotocol/provider.git\n<span class=\"nb\">cd</span> provider/\n</pre>\n<p>Then run some things that the Provider expects to be running:</p>\n<pre><span class=\"nb\">cd</span> docker\ndocker-compose up\n</pre>\n<p>You can see what that runs by reading <a href=\"docker/docker-compose.yml\" rel=\"nofollow\">docker/docker-compose.yml</a>.\nNote that it runs MongoDB but the Provider can also work with BigchainDB or Elasticsearch.\nIt also runs <a href=\"https://github.com/trufflesuite/ganache\" rel=\"nofollow\">Ganache</a> with all <a href=\"https://github.com/oceanprotocol/keeper-contracts\" rel=\"nofollow\">Ocean Protocol Keeper Contracts</a> and <a href=\"https://github.com/trufflesuite/ganache-cli\" rel=\"nofollow\">Ganache CLI</a>.</p>\n<p>The most simple way to start is:</p>\n<pre>pip install -r requirements_dev.txt <span class=\"c1\"># or requirements_conda.txt if using Conda</span>\n<span class=\"nb\">export</span> <span class=\"nv\">FLASK_APP</span><span class=\"o\">=</span>provider/run.py\n<span class=\"nb\">export</span> <span class=\"nv\">CONFIG_FILE</span><span class=\"o\">=</span>oceandb.ini\n./scripts/deploy\nflask run\n</pre>\n<p>That will use HTTP (i.e. not SSL/TLS).</p>\n<p>The proper way to run the Flask application is using an application server such as Gunicorn. This allow you to run using SSL/TLS.\nYou can generate some certificates for testing by doing:</p>\n<pre>openssl req -x509 -newkey rsa:4096 -nodes -out cert.pem -keyout key.pem -days <span class=\"m\">365</span>\n</pre>\n<p>and when it asks for the Common Name (CN), answer <code>localhost</code></p>\n<p>Then edit the config file <code>oceandb.ini</code> so that:</p>\n<pre><span class=\"l l-Scalar l-Scalar-Plain\">provider.scheme = https</span>\n<span class=\"l l-Scalar l-Scalar-Plain\">provider.host = localhost</span>\n<span class=\"l l-Scalar l-Scalar-Plain\">provider.port = 5000</span>\n</pre>\n<p>Then execute this command:</p>\n<pre>gunicorn --certfile cert.pem --keyfile key.pem -b <span class=\"m\">0</span>.0.0.0:5000 -w <span class=\"m\">1</span> provider.run:app\n</pre>\n<h2>API documentation</h2>\n<p>Once you have your application running you can get access to the documentation at:</p>\n<pre>https://127.0.0.1:5000/api/v1/docs\n</pre>\n<p>(or <code>http</code> if you're using HTTP.)</p>\n<p>Tip: if your browser shows the swagger header across the top but says \"Failed to load spec.\" then we found that, in Chrome, if we went to chrome://flags/#allow-insecure-localhost and toggled it to Enabled, then relaunched Chrome, it worked.</p>\n<p>If you want to know more about the ontology of the metadata, you can find all the information in\n<a href=\"https://github.com/oceanprotocol/OEPs/tree/master/8\" rel=\"nofollow\">OEP-8</a>.</p>\n<h2>Configuration</h2>\n<p>You can pass the configuration using the CONFIG_FILE environment variable (recommended) or locating your configuration in oceandb.ini file.</p>\n<p>In the configuration there are now three sections:</p>\n<ul>\n<li>oceandb: Contains different values to connect with oceandb. You can find more information about how to use OceanDB <a href=\"https://github.com/oceanprotocol/oceandb-driver-interface\" rel=\"nofollow\">here</a>.</li>\n<li>keeper-contracts: This section help you to connect with the network where you have deployed the contracts. You can find more information of how to configure <a href=\"https://github.com/oceanprotocol/squid-py#quick-start\" rel=\"nofollow\">here</a>.\n<pre><span class=\"p p-Indicator\">[</span><span class=\"nv\">keeper-contracts</span><span class=\"p p-Indicator\">]</span>\n<span class=\"l l-Scalar l-Scalar-Plain\">keeper.host=0.0.0.0</span>\n<span class=\"l l-Scalar l-Scalar-Plain\">keeper.port=8545</span>\n<span class=\"l l-Scalar l-Scalar-Plain\">#contracts.folder=venv/contracts</span>\n<span class=\"l l-Scalar l-Scalar-Plain\">market.address=0xbc0be3598a31715bac5235718f96bb242804e61e</span>\n<span class=\"l l-Scalar l-Scalar-Plain\">auth.address=0x6ba5f72e5399aa67db5b22ee791851937d4910f5</span>\n<span class=\"l l-Scalar l-Scalar-Plain\">token.address=0xfd83b273b395b1029c41bb32071500bf662e6a8a</span>\n<span class=\"l l-Scalar l-Scalar-Plain\">provider.address=</span>\n</pre>\n</li>\n<li>resources: This section have properties to connect with the different resourcer provideres. At the moment we are only using Azure but this is going to increase quickly.\n<pre><span class=\"p p-Indicator\">[</span><span class=\"nv\">resources</span><span class=\"p p-Indicator\">]</span>\n<span class=\"l l-Scalar l-Scalar-Plain\">azure.account.name=testocnfiles</span>\n<span class=\"l l-Scalar l-Scalar-Plain\">azure.account.key=k2Vk4yfb88WNlWW+W54a8ytJm8MYO1GW9IgiV7TNGKSdmKyVNXzyhiRZ3U1OHRotj/vTYdhJj+ho30HPyJpuYQ==</span>\n<span class=\"l l-Scalar l-Scalar-Plain\">azure.container=testfiles</span>\n</pre>\n</li>\n</ul>\n<h2>Code style</h2>\n<p>The information about code style in python is documented in this two links <a href=\"https://github.com/oceanprotocol/dev-ocean/blob/master/doc/development/python-developer-guide.md\" rel=\"nofollow\">python-developer-guide</a>\nand <a href=\"https://github.com/oceanprotocol/dev-ocean/blob/master/doc/development/python-style-guide.md\" rel=\"nofollow\">python-style-guide</a>.</p>\n<h2>Testing</h2>\n<p>Automatic tests are setup via Travis, executing <code>tox</code>.\nOur test use pytest framework.</p>\n<h2>New Version</h2>\n<p>The <code>bumpversion.sh</code> script helps to bump the project version. You can execute the script using as first argument {major|minor|patch} to bump accordingly the version.</p>\n<h2>License</h2>\n<pre><code>Copyright 2018 Ocean Protocol Foundation Ltd.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n</code></pre>\n\n          </div>"}, "last_serial": 4385837, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d27932a1910cc95359854f8cd5bc2276", "sha256": "d9cc7213287bbc952c1f59a7db6078279c013b024af898dad4bd24abdbd0879a"}, "downloads": -1, "filename": "ocean_provider-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d27932a1910cc95359854f8cd5bc2276", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15181, "upload_time": "2018-08-17T07:36:38", "upload_time_iso_8601": "2018-08-17T07:36:38.097342Z", "url": "https://files.pythonhosted.org/packages/bd/f6/1303496c1f3533d2d8e0683a80c3d695af721a2694057a5f6139de1edaf8/ocean_provider-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d8003004046c4c65ab8b089690a7474", "sha256": "734d3583c36b839e9a223e7da06aa81dff15754793acd317e3b63d402ebfcede"}, "downloads": -1, "filename": "ocean-provider-0.1.0.tar.gz", "has_sig": false, "md5_digest": "3d8003004046c4c65ab8b089690a7474", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 101791, "upload_time": "2018-08-17T07:36:39", "upload_time_iso_8601": "2018-08-17T07:36:39.898955Z", "url": "https://files.pythonhosted.org/packages/ac/e9/ce80017a10fc20a942409437078c1a241d4a46d38d42b9569748a4857b13/ocean-provider-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e8178b0c14946e54d74c81d03a207c02", "sha256": "b1aba8119fad096ac60853db9ceadb600ef417aecd02af407cbf0b0b708bbb91"}, "downloads": -1, "filename": "ocean_provider-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e8178b0c14946e54d74c81d03a207c02", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18695, "upload_time": "2018-10-17T10:45:41", "upload_time_iso_8601": "2018-10-17T10:45:41.505984Z", "url": "https://files.pythonhosted.org/packages/00/14/bf84e806e1c8c2363bb2f27dfdab32f0e5f3f734942ca7919836655672b9/ocean_provider-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ccfef0316ceb74a15d849582768c3a04", "sha256": "939cbc43a60b9d843f2bec74314fb73ab20d94f01113bf39ce28b5f83755dd48"}, "downloads": -1, "filename": "ocean-provider-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ccfef0316ceb74a15d849582768c3a04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22805, "upload_time": "2018-10-17T10:45:43", "upload_time_iso_8601": "2018-10-17T10:45:43.261956Z", "url": "https://files.pythonhosted.org/packages/50/62/e6913ab0e20d59c9384bf32217e96fc9b4377e4b99268c554e6bdfdc55d5/ocean-provider-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e8178b0c14946e54d74c81d03a207c02", "sha256": "b1aba8119fad096ac60853db9ceadb600ef417aecd02af407cbf0b0b708bbb91"}, "downloads": -1, "filename": "ocean_provider-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e8178b0c14946e54d74c81d03a207c02", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18695, "upload_time": "2018-10-17T10:45:41", "upload_time_iso_8601": "2018-10-17T10:45:41.505984Z", "url": "https://files.pythonhosted.org/packages/00/14/bf84e806e1c8c2363bb2f27dfdab32f0e5f3f734942ca7919836655672b9/ocean_provider-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ccfef0316ceb74a15d849582768c3a04", "sha256": "939cbc43a60b9d843f2bec74314fb73ab20d94f01113bf39ce28b5f83755dd48"}, "downloads": -1, "filename": "ocean-provider-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ccfef0316ceb74a15d849582768c3a04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22805, "upload_time": "2018-10-17T10:45:43", "upload_time_iso_8601": "2018-10-17T10:45:43.261956Z", "url": "https://files.pythonhosted.org/packages/50/62/e6913ab0e20d59c9384bf32217e96fc9b4377e4b99268c554e6bdfdc55d5/ocean-provider-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:43 2020"}