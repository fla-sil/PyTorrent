{"info": {"author": "Pierre-Yves Chibon", "author_email": "pingou@pingoured.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries"], "description": "flask-multistatic\n=================\n\n:Author: Pierre-Yves Chibon <pingou@pingoured.fr>\n\n\nThis project is a simple `flask`_ plugin to add support for overriding static\nfiles.\n\nDependencies:\n-------------\n.. _python: http://www.python.org\n.. _Flask: http://flask.pocoo.org/\n\nThe dependency list is therefore:\n\n- `python`_ (2.5 minimum)\n- `flask`_\n\n\nUsage:\n------\n\nIn your flask application:\n\n::\n\n  import flask\n  from flask_multistatic import MultiStaticFlask\n\nAnd replace the way you build you flask application from\n\n::\n\n  APP = flask.Flask(__name__)\n\nby\n\n::\n\n  APP = MultiStaticFlask(__name__)\n\nYou can then specify multiple folder where static files are located, for\nexample:\n\n::\n\n    APP.static_folder = [\n        os.path.join(APP.root_path, 'static', APP.config['THEME_FOLDER']),\n        os.path.join(APP.root_path, 'static', 'default')\n    ]\n\n.. note:: The order of the folder is important, the last folder should be the one\n        where most files are present, the other folders are where you override\n        the static files.\n        So in the example above, all the default static files are in\n        `/static/default/` and the files specific for one theme are under\n        `/static/<theme_name>/`.\n\n\nProduction:\n-----------\n\nNote that this is most likely less efficient than having apache serve the static\nfiles itself, but even if you do that you might want to have multiple static\ndirectories and have apache fallback.\n\nIn this case, you can use the example.conf file that is shipped as part of this\nrepository.\n\nThe example.conf file has an example configuration that will try to serve a file\nfrom an instance-specific theme directory, and only if the file was not found, fall\nback to the application default theme.\n\n\nLicense:\n--------\n\nThis project is licensed GPLv3+.\n", "description_content_type": null, "docs_url": null, "download_url": "https://pagure.io/releases/flask-multistatic/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pagure.io/flask-multistatic", "keywords": null, "license": "GPLv3+", "maintainer": null, "maintainer_email": null, "name": "flask-multistatic", "package_url": "https://pypi.org/project/flask-multistatic/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/flask-multistatic/", "project_urls": {"Download": "https://pagure.io/releases/flask-multistatic/", "Homepage": "https://pagure.io/flask-multistatic"}, "release_url": "https://pypi.org/project/flask-multistatic/1.0/", "requires_dist": null, "requires_python": null, "summary": "Simple flask plugin to allow overriding static files", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>Author:</th>\n<td>Pierre-Yves Chibon &lt;<a href=\"mailto:pingou%40pingoured.fr\">pingou<span>@</span>pingoured<span>.</span>fr</a>&gt;</td></tr>\n</tbody>\n</table>\n<p>This project is a simple <a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">flask</a> plugin to add support for overriding static\nfiles.</p>\n<div id=\"dependencies\">\n<h2>Dependencies:</h2>\n<p>The dependency list is therefore:</p>\n<ul>\n<li><a href=\"http://www.python.org\" rel=\"nofollow\">python</a> (2.5 minimum)</li>\n<li><a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">flask</a></li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage:</h2>\n<p>In your flask application:</p>\n<pre>import flask\nfrom flask_multistatic import MultiStaticFlask\n</pre>\n<p>And replace the way you build you flask application from</p>\n<pre>APP = flask.Flask(__name__)\n</pre>\n<p>by</p>\n<pre>APP = MultiStaticFlask(__name__)\n</pre>\n<p>You can then specify multiple folder where static files are located, for\nexample:</p>\n<pre>APP.static_folder = [\n    os.path.join(APP.root_path, 'static', APP.config['THEME_FOLDER']),\n    os.path.join(APP.root_path, 'static', 'default')\n]\n</pre>\n<div>\n<p>Note</p>\n<p>The order of the folder is important, the last folder should be the one\nwhere most files are present, the other folders are where you override\nthe static files.\nSo in the example above, all the default static files are in\n<cite>/static/default/</cite> and the files specific for one theme are under\n<cite>/static/&lt;theme_name&gt;/</cite>.</p>\n</div>\n</div>\n<div id=\"production\">\n<h2>Production:</h2>\n<p>Note that this is most likely less efficient than having apache serve the static\nfiles itself, but even if you do that you might want to have multiple static\ndirectories and have apache fallback.</p>\n<p>In this case, you can use the example.conf file that is shipped as part of this\nrepository.</p>\n<p>The example.conf file has an example configuration that will try to serve a file\nfrom an instance-specific theme directory, and only if the file was not found, fall\nback to the application default theme.</p>\n</div>\n<div id=\"license\">\n<h2>License:</h2>\n<p>This project is licensed GPLv3+.</p>\n</div>\n\n          </div>"}, "last_serial": 1950846, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "230b3ca67ff93f0346a3b0d409006a8a", "sha256": "f5e9c8e451dceb18dc6343a72021c93c5fc509fdf960fa41639c98cd33289b5c"}, "downloads": -1, "filename": "flask-multistatic-1.0.tar.gz", "has_sig": false, "md5_digest": "230b3ca67ff93f0346a3b0d409006a8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15487, "upload_time": "2016-02-11T10:09:49", "upload_time_iso_8601": "2016-02-11T10:09:49.787556Z", "url": "https://files.pythonhosted.org/packages/60/41/518271e2155db6dfdcfa20cafdc53c5076b103734d7f0b20aeffdd49b165/flask-multistatic-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "230b3ca67ff93f0346a3b0d409006a8a", "sha256": "f5e9c8e451dceb18dc6343a72021c93c5fc509fdf960fa41639c98cd33289b5c"}, "downloads": -1, "filename": "flask-multistatic-1.0.tar.gz", "has_sig": false, "md5_digest": "230b3ca67ff93f0346a3b0d409006a8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15487, "upload_time": "2016-02-11T10:09:49", "upload_time_iso_8601": "2016-02-11T10:09:49.787556Z", "url": "https://files.pythonhosted.org/packages/60/41/518271e2155db6dfdcfa20cafdc53c5076b103734d7f0b20aeffdd49b165/flask-multistatic-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:36 2020"}