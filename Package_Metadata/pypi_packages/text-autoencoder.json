{"info": {"author": "Solumilken", "author_email": "", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: 3.6"], "description": "# text-autoencoder\n\n[![travis][travis-image]][travis-url]\n[![pypi][pypi-image]][pypi-url]\n\n[travis-image]: https://img.shields.io/travis/Yoctol/text-autoencoder.svg?style=flat\n[travis-url]: https://travis-ci.org/Yoctol/text-autoencoder\n[pypi-image]: https://img.shields.io/pypi/v/text-autoencoder.svg?style=flat\n[pypi-url]: https://pypi.python.org/pypi/text-autoencoder\n\nVarious autoencoder for text data.\n\n## Usage\n\n### Grab one autoencoder first\n```python\nfrom text_autoencoder.variational_autoencoders import VAEXXX\nmodel = VAEXXX(n_steps=..., latent_size=..., state_size=..., ...)\n```\n\n### How to train\n- Warning: please preprocess your data to be a numpy array with shape (data_size, maxlen, embedding_size)\n```python\nmodel.fit(x=..., mask=..., epochs=10)\n```\n\n### How to save model\n```python\nmodel.save(output_path)\n```\n\n### How to get latent vector `z`\n```python\nmodel.get_latent_vector(x=..., mask=..., batch_size=1)\n```\n\n### How to get output of encoder\n```python\nmodel.encode(x=..., mask=..., batch_size=1)\n```\n\n### How to load a trained model\n```python\nmodel.load(path)\n```\n\n### How to monitor the training process\n- get the output_dir you input when calling `model.fit`\n- monitor training loss\n```shell\n> tensorboard --logdir=\"<output_dir>/summary/subtrain/\"\n```\n\n- monitor validation loss\n```shell\n> tensorboard --logdir=\"<output_dir>/summary/valid/\"\n```\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "text-autoencoder", "package_url": "https://pypi.org/project/text-autoencoder/", "platform": "", "project_url": "https://pypi.org/project/text-autoencoder/", "project_urls": null, "release_url": "https://pypi.org/project/text-autoencoder/0.0.1/", "requires_dist": ["numpy (==1.14.2)", "tensorflow (==1.7.0)", "bistiming (==0.1.1)", "mkdir-p (==0.1.1)", "pyyaml (==3.13)", "u-msgpack-python (==2.5.0)", "tqdm (==4.23.4)", "serving-utils (==0.4.3)"], "requires_python": ">=3.6", "summary": "Yoctol Natural Language Text Autoencoder", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # text-autoencoder<br><br>[![travis][travis-image]][travis-url]<br>[![pypi][pypi-image]][pypi-url]<br><br>[travis-image]: https://img.shields.io/travis/Yoctol/text-autoencoder.svg?style=flat<br>[travis-url]: https://travis-ci.org/Yoctol/text-autoencoder<br>[pypi-image]: https://img.shields.io/pypi/v/text-autoencoder.svg?style=flat<br>[pypi-url]: https://pypi.python.org/pypi/text-autoencoder<br><br>Various autoencoder for text data.<br><br>## Usage<br><br>### Grab one autoencoder first<br>```python<br>from text_autoencoder.variational_autoencoders import VAEXXX<br>model = VAEXXX(n_steps=..., latent_size=..., state_size=..., ...)<br>```<br><br>### How to train<br>- Warning: please preprocess your data to be a numpy array with shape (data_size, maxlen, embedding_size)<br>```python<br>model.fit(x=..., mask=..., epochs=10)<br>```<br><br>### How to save model<br>```python<br>model.save(output_path)<br>```<br><br>### How to get latent vector `z`<br>```python<br>model.get_latent_vector(x=..., mask=..., batch_size=1)<br>```<br><br>### How to get output of encoder<br>```python<br>model.encode(x=..., mask=..., batch_size=1)<br>```<br><br>### How to load a trained model<br>```python<br>model.load(path)<br>```<br><br>### How to monitor the training process<br>- get the output_dir you input when calling `model.fit`<br>- monitor training loss<br>```shell<br>&gt; tensorboard --logdir=\"&lt;output_dir&gt;/summary/subtrain/\"<br>```<br><br>- monitor validation loss<br>```shell<br>&gt; tensorboard --logdir=\"&lt;output_dir&gt;/summary/valid/\"<br>```<br><br><br>\n          </div>"}, "last_serial": 4156217, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "bd10162fd842fe3d40c0a3656ce60a6e", "sha256": "e545c8bb4394064cc051e6615fc54ebc0bd823688d5245eceb8b8e5de69b6aa6"}, "downloads": -1, "filename": "text_autoencoder-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bd10162fd842fe3d40c0a3656ce60a6e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 111155, "upload_time": "2018-08-10T09:27:05", "upload_time_iso_8601": "2018-08-10T09:27:05.116429Z", "url": "https://files.pythonhosted.org/packages/9a/1a/7cd77d8db8903c89b6262c12e29b47bd78ef74e98916d6073850d1349d43/text_autoencoder-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8c3c89957886213d04399d8690218d6b", "sha256": "f9f0dbdebae68c0880e1eeaa83af4493f486835fcdca81173da896f555c93d6e"}, "downloads": -1, "filename": "text-autoencoder-0.0.0.tar.gz", "has_sig": false, "md5_digest": "8c3c89957886213d04399d8690218d6b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 51599, "upload_time": "2018-08-10T09:27:07", "upload_time_iso_8601": "2018-08-10T09:27:07.818467Z", "url": "https://files.pythonhosted.org/packages/db/34/3318de97fffc3b11b9e34e6691a9352d15e60e4d2ecf2d3e570a96f114ed/text-autoencoder-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "e3032ac7eca9a0058e3032c9c871c7d2", "sha256": "8a74e3a3cef1e5b02bd931e1bd40f1b30802dc4f4434e64b1010ea7e21af01a1"}, "downloads": -1, "filename": "text_autoencoder-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e3032ac7eca9a0058e3032c9c871c7d2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 111279, "upload_time": "2018-08-10T10:09:05", "upload_time_iso_8601": "2018-08-10T10:09:05.490927Z", "url": "https://files.pythonhosted.org/packages/37/bd/3620ae4eeacffc6b105533738f6e740d2bab0088a7569e2c8ac4a4f32ba0/text_autoencoder-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08416d3cae2b194ed9c62484f2c22da1", "sha256": "674b8e3085fc062fa231e285e37efad9ba06bdad08e5df01507f0f16426a6176"}, "downloads": -1, "filename": "text-autoencoder-0.0.1.tar.gz", "has_sig": false, "md5_digest": "08416d3cae2b194ed9c62484f2c22da1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 51851, "upload_time": "2018-08-10T10:09:08", "upload_time_iso_8601": "2018-08-10T10:09:08.150387Z", "url": "https://files.pythonhosted.org/packages/ea/f4/35cbfb645398b3b1d61a115f5a28bea3ba6b8b288e623ff57427ff84a3b6/text-autoencoder-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e3032ac7eca9a0058e3032c9c871c7d2", "sha256": "8a74e3a3cef1e5b02bd931e1bd40f1b30802dc4f4434e64b1010ea7e21af01a1"}, "downloads": -1, "filename": "text_autoencoder-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e3032ac7eca9a0058e3032c9c871c7d2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 111279, "upload_time": "2018-08-10T10:09:05", "upload_time_iso_8601": "2018-08-10T10:09:05.490927Z", "url": "https://files.pythonhosted.org/packages/37/bd/3620ae4eeacffc6b105533738f6e740d2bab0088a7569e2c8ac4a4f32ba0/text_autoencoder-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08416d3cae2b194ed9c62484f2c22da1", "sha256": "674b8e3085fc062fa231e285e37efad9ba06bdad08e5df01507f0f16426a6176"}, "downloads": -1, "filename": "text-autoencoder-0.0.1.tar.gz", "has_sig": false, "md5_digest": "08416d3cae2b194ed9c62484f2c22da1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 51851, "upload_time": "2018-08-10T10:09:08", "upload_time_iso_8601": "2018-08-10T10:09:08.150387Z", "url": "https://files.pythonhosted.org/packages/ea/f4/35cbfb645398b3b1d61a115f5a28bea3ba6b8b288e623ff57427ff84a3b6/text-autoencoder-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:07 2020"}