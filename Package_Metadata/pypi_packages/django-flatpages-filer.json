{"info": {"author": "('Chris Clarke', 'Lendl Smith')", "author_email": "cclarke@chrisdev.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7"], "description": "======================\nDjango Flatpage Filer\n======================\n\n.. image:: https://secure.travis-ci.org/chrisdev/django-flatpages-filer.png?branch=master\n   :target: http://travis-ci.org/chrisdev/django-flatpages-filer\n.. image:: https://coveralls.io/repos/chrisdev/django-flatpages-filer/badge.png?branch=master\n   :target: https://coveralls.io/r/chrisdev/django-flatpages-filer\n\nAn extension to provide easy integration between ``django.contrib.flatpages`` \nand  `Django-filer`_ \n\n    \"A file management application for django that makes handling of files \n    and images a breeze\".\n\nThw ``django-flapages-filer`` app aims to provide a seamless experience \nto users of the\nstandard flatpages app. It enhances the standard flatpages Admin \nwith inline forms that allow you to include references to your filer based \nimages and files (attachments). It also allows you to easily maintain content \nusing a markup format such as ``Markdown``.\n\nHowever, the ``contrib.Flatpage`` model (content, titles) \nis not be affected by installing or removing this app.\nYour templates do not have to be modified as they will\nstill utilize the  ``{{ flatpage.content }}`` and ``{{ flatpage.title }}``\ncontext variables.  Once it is installed, content changes are actually \nstored in a related  model ``flatpages_filer.models.Revisions`` usually \nin a markup format. The Revision model which also keeps track of\ncontent changes making it easy to revert to an earlier versions.\nThe modified ``Admin ChangeForm`` ensures you can view the latest \nversion of your content in the appropriate markup format and when \nyou save a ``flatpage`` this markup content  will be rendered to\nto html via a  specified parser. \n\nAdditionally, ``django-flatpages-filer``:\n\n- Comes with a default ``Markdown`` parser. By default the\n  ``codehilite`` and ``extra`` extensions are supported but you can specify \n  your own list of extensions in your Django settings\n\n- You can easily write your own parser to support to support markup \n  formats such as rst or creole.\n\n- Provides optional support for the excellent **markItUp**  widget. \n  This requires the installation ``django-markitup``.\n\n- Provides templatetags to support *HTML metatags* such as keywords and\n  descriptions in flatpages.\n\n.. _Django-filer: https://pypi.python.org/pypi/django-filer/\n\nContributors\n============\n* `Christopher Clarke <https://github.com/chrisdev>`_\n* `Lendl R Smith <https://github.com/ilendl2>`_\n* `Mikhail Andreev <https://github.com/adw0rd>`_\n* `Raumkraut <https://github.com/Raumkraut>`_\n\nQuickstart\n===========\nCreate a virtual environment for your project and activate it::\n\n    $ virtualenv mysite-env\n    $ source mysite-env/bin/activate\n    (mysite-env)$\n\nNext install ``flatpages_filer`` ::\n\n    (mysite-env)$ pip install django-flatpages-filer\n\nAdd ``flatpages_filer`` to your INSTALLED_APPS setting.\n\nInside your project run::\n\n    (mysite-env)$ python manage.py syncdb \n\nDjango-flatpages-filer comes with support for\n`Markdown <http://daringfireball.net/projects/markdown/syntax/>`_\n\nTo include filer images in your content use a standard markdown image\nreference ::\n\n     ![Atl text][filer_image.pk]\n\nFor a link to a file ::\n\n     [Atl text][filer_file.pk]\n    \nWhere ``pk`` refers to the primary key of the filer file or image.\nTo facilitate easy inclusion of the images and file attachments in your markdown\ncontent the ``Flatpages Admin`` now contains Inline image and file attachment\nforms which allow you to to associate the filer images or files with \nthe ``flatpage`` once you save the ``flatpage`` the correct markdown \nimage/file reference should is visible in Inline image form.\n\nmarkItUp support\n------------------\nIf you want to use the excellent markItUp! editor widget. Install django-markItUp::\n\n    (mysite-env)$ pip install django-markitup\n\nYou need a few configuration steps\n\n1. Add 'markitup' to your INSTALLED_APPS setting.\n\n2. Add the following to settings::\n\n     MARKITUP_SET = 'markitup/sets/markdown'\n     MARKITUP_SKIN = 'markitup/skins/markitup'\n     MARKITUP_FILTER = ('markdown.markdown', {'safe_mode': True})\n\n3. You need to use the AJAX-based preview for the admin widget::\n\n     url(r'^markitup/', include('markitup.urls'))\n\nin your root URLconf.\n\nMarkup Parsers\n--------------\nDjango-flatpages-filer includes a Markdown parser that\nsupports  ``codehilite`` and ``extra`` extensions. You can \nsupport additional extensions by first installing the extension\nan adding the following to you Django settings ::\n\n    FLATPAGES_FILER_PARSER= [\"flatpages_filer.markdown_parser.parse\",\n                            {'extensions': ['codehilite','extra', 'abbr']}]\n\n\nYou can also supply your own parser by setting the value for \n``FLATPAGES_FILER_PARSER`` to point to your parser ::\n\n    FLATPAGES_FILER_PARSER= [\"myproject.myapp.creole_parser.parse\",\n                            {'emitter': FilerEmmiter}]\n\nNote we expect that your ``parse`` would have the following signature ::\n    \n    parse(text, [list of `extensions, emitters etc.])\n\nMigrating From Flatpages-x\n---------------------------\nBefore installing to ``django-flatpage-filer`` dump the data in the Revison\nmodel ::\n\n    python manage.py dumpdata flatpages_x.Revision > revision.json\n\nRemove ``flatpage_x`` from you settings and install django-flatpages-filer and \nadd ``flatpages_filer`` to the settings. To import your revision data edit\n``revision.json`` and change all occurences of  ``flatpages_x.revision`` \nto ``flatpages_filer.revision``. Finally, run ::  \n\n    python manage.py loaddata ~/usr/folder/revision.json\n\n\n.. end-here\n\nDocumentation\n--------------\n\nSee the `full documentation`_ for more details.\n\n.. _full documentation: http://django-flatpages-filer.readthedocs.org/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/chrisdev/django-flatpages-filer", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-flatpages-filer", "package_url": "https://pypi.org/project/django-flatpages-filer/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-flatpages-filer/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/chrisdev/django-flatpages-filer"}, "release_url": "https://pypi.org/project/django-flatpages-filer/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Some Basic extensions for django-contrib-flatpages", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://travis-ci.org/chrisdev/django-flatpages-filer\" rel=\"nofollow\"><img alt=\"https://secure.travis-ci.org/chrisdev/django-flatpages-filer.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7b7b0859aa596e86dde8c68ca28d52ad8ce31203/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f63687269736465762f646a616e676f2d666c617470616765732d66696c65722e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/chrisdev/django-flatpages-filer\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/chrisdev/django-flatpages-filer/badge.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/db9c75a2d9e4b0d6f67e2cb8a514761de2b59ac8/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f63687269736465762f646a616e676f2d666c617470616765732d66696c65722f62616467652e706e673f6272616e63683d6d6173746572\"></a>\n<p>An extension to provide easy integration between <tt>django.contrib.flatpages</tt>\nand  <a href=\"https://pypi.python.org/pypi/django-filer/\" rel=\"nofollow\">Django-filer</a></p>\n<blockquote>\n\u201cA file management application for django that makes handling of files\nand images a breeze\u201d.</blockquote>\n<p>Thw <tt><span class=\"pre\">django-flapages-filer</span></tt> app aims to provide a seamless experience\nto users of the\nstandard flatpages app. It enhances the standard flatpages Admin\nwith inline forms that allow you to include references to your filer based\nimages and files (attachments). It also allows you to easily maintain content\nusing a markup format such as <tt>Markdown</tt>.</p>\n<p>However, the <tt>contrib.Flatpage</tt> model (content, titles)\nis not be affected by installing or removing this app.\nYour templates do not have to be modified as they will\nstill utilize the  <tt>{{ flatpage.content }}</tt> and <tt>{{ flatpage.title }}</tt>\ncontext variables.  Once it is installed, content changes are actually\nstored in a related  model <tt>flatpages_filer.models.Revisions</tt> usually\nin a markup format. The Revision model which also keeps track of\ncontent changes making it easy to revert to an earlier versions.\nThe modified <tt>Admin ChangeForm</tt> ensures you can view the latest\nversion of your content in the appropriate markup format and when\nyou save a <tt>flatpage</tt> this markup content  will be rendered to\nto html via a  specified parser.</p>\n<p>Additionally, <tt><span class=\"pre\">django-flatpages-filer</span></tt>:</p>\n<ul>\n<li>Comes with a default <tt>Markdown</tt> parser. By default the\n<tt>codehilite</tt> and <tt>extra</tt> extensions are supported but you can specify\nyour own list of extensions in your Django settings</li>\n<li>You can easily write your own parser to support to support markup\nformats such as rst or creole.</li>\n<li>Provides optional support for the excellent <strong>markItUp</strong>  widget.\nThis requires the installation <tt><span class=\"pre\">django-markitup</span></tt>.</li>\n<li>Provides templatetags to support <em>HTML metatags</em> such as keywords and\ndescriptions in flatpages.</li>\n</ul>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/chrisdev\" rel=\"nofollow\">Christopher Clarke</a></li>\n<li><a href=\"https://github.com/ilendl2\" rel=\"nofollow\">Lendl R Smith</a></li>\n<li><a href=\"https://github.com/adw0rd\" rel=\"nofollow\">Mikhail Andreev</a></li>\n<li><a href=\"https://github.com/Raumkraut\" rel=\"nofollow\">Raumkraut</a></li>\n</ul>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>Create a virtual environment for your project and activate it:</p>\n<pre>$ virtualenv mysite-env\n$ source mysite-env/bin/activate\n(mysite-env)$\n</pre>\n<p>Next install <tt>flatpages_filer</tt></p>\n<pre>(mysite-env)$ pip install django-flatpages-filer\n</pre>\n<p>Add <tt>flatpages_filer</tt> to your INSTALLED_APPS setting.</p>\n<p>Inside your project run:</p>\n<pre>(mysite-env)$ python manage.py syncdb\n</pre>\n<p>Django-flatpages-filer comes with support for\n<a href=\"http://daringfireball.net/projects/markdown/syntax/\" rel=\"nofollow\">Markdown</a></p>\n<p>To include filer images in your content use a standard markdown image\nreference</p>\n<pre>![Atl text][filer_image.pk]\n</pre>\n<p>For a link to a file</p>\n<pre>[Atl text][filer_file.pk]\n</pre>\n<p>Where <tt>pk</tt> refers to the primary key of the filer file or image.\nTo facilitate easy inclusion of the images and file attachments in your markdown\ncontent the <tt>Flatpages Admin</tt> now contains Inline image and file attachment\nforms which allow you to to associate the filer images or files with\nthe <tt>flatpage</tt> once you save the <tt>flatpage</tt> the correct markdown\nimage/file reference should is visible in Inline image form.</p>\n<div id=\"markitup-support\">\n<h3>markItUp support</h3>\n<p>If you want to use the excellent markItUp! editor widget. Install django-markItUp:</p>\n<pre>(mysite-env)$ pip install django-markitup\n</pre>\n<p>You need a few configuration steps</p>\n<ol>\n<li><p>Add \u2018markitup\u2019 to your INSTALLED_APPS setting.</p>\n</li>\n<li><p>Add the following to settings:</p>\n<pre>MARKITUP_SET = 'markitup/sets/markdown'\nMARKITUP_SKIN = 'markitup/skins/markitup'\nMARKITUP_FILTER = ('markdown.markdown', {'safe_mode': True})\n</pre>\n</li>\n<li><p>You need to use the AJAX-based preview for the admin widget:</p>\n<pre>url(r'^markitup/', include('markitup.urls'))\n</pre>\n</li>\n</ol>\n<p>in your root URLconf.</p>\n</div>\n<div id=\"markup-parsers\">\n<h3>Markup Parsers</h3>\n<p>Django-flatpages-filer includes a Markdown parser that\nsupports  <tt>codehilite</tt> and <tt>extra</tt> extensions. You can\nsupport additional extensions by first installing the extension\nan adding the following to you Django settings</p>\n<pre>FLATPAGES_FILER_PARSER= [\"flatpages_filer.markdown_parser.parse\",\n                        {'extensions': ['codehilite','extra', 'abbr']}]\n</pre>\n<p>You can also supply your own parser by setting the value for\n<tt>FLATPAGES_FILER_PARSER</tt> to point to your parser</p>\n<pre>FLATPAGES_FILER_PARSER= [\"myproject.myapp.creole_parser.parse\",\n                        {'emitter': FilerEmmiter}]\n</pre>\n<p>Note we expect that your <tt>parse</tt> would have the following signature</p>\n<pre>parse(text, [list of `extensions, emitters etc.])\n</pre>\n</div>\n<div id=\"migrating-from-flatpages-x\">\n<h3>Migrating From Flatpages-x</h3>\n<p>Before installing to <tt><span class=\"pre\">django-flatpage-filer</span></tt> dump the data in the Revison\nmodel</p>\n<pre>python manage.py dumpdata flatpages_x.Revision &gt; revision.json\n</pre>\n<p>Remove <tt>flatpage_x</tt> from you settings and install django-flatpages-filer and\nadd <tt>flatpages_filer</tt> to the settings. To import your revision data edit\n<tt>revision.json</tt> and change all occurences of  <tt>flatpages_x.revision</tt>\nto <tt>flatpages_filer.revision</tt>. Finally, run</p>\n<pre>python manage.py loaddata ~/usr/folder/revision.json\n</pre>\n</div>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p>See the <a href=\"http://django-flatpages-filer.readthedocs.org/\" rel=\"nofollow\">full documentation</a> for more details.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 833627, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d102e2e97db5ed6e710db17058e15859", "sha256": "72ff47349d9db78903536c83670e14f488aab542c69073d6d9fb05787426f90d"}, "downloads": -1, "filename": "django-flatpages-filer-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d102e2e97db5ed6e710db17058e15859", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 90747, "upload_time": "2013-08-06T16:09:36", "upload_time_iso_8601": "2013-08-06T16:09:36.532175Z", "url": "https://files.pythonhosted.org/packages/1a/8f/ef3ec58f29ac3b797cc4015a6be4a85fc0bea144a3b6c99ea841e19288f7/django-flatpages-filer-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d102e2e97db5ed6e710db17058e15859", "sha256": "72ff47349d9db78903536c83670e14f488aab542c69073d6d9fb05787426f90d"}, "downloads": -1, "filename": "django-flatpages-filer-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d102e2e97db5ed6e710db17058e15859", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 90747, "upload_time": "2013-08-06T16:09:36", "upload_time_iso_8601": "2013-08-06T16:09:36.532175Z", "url": "https://files.pythonhosted.org/packages/1a/8f/ef3ec58f29ac3b797cc4015a6be4a85fc0bea144a3b6c99ea841e19288f7/django-flatpages-filer-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:06 2020"}