{"info": {"author": "Torsten Kurbad", "author_email": "t.kurbad@iwm-kmrc.de", "bugtrack_url": null, "classifiers": [], "description": "Recipe for setting up a blobstorage\n===================================\n\nThis recipe can be used to define a blobstorage.  It creates a ZConfig\nfile-storage database specification supporting blobs via zope.file that\ncan be used by other recipes to generate ZConfig configuration files. \n\nThis recipe takes an optional combination of a path and a blob_dir option.\nIf one is specified, the other is mandatory. If none are given (recommended),\nthe recipe creates and uses a subdirectory of the buildout parts directory\nwith the same name as the part and a subdirectory 'blobs' therein.\n\nAdditional options, like cache-size, can be given via the\nstorage-options\n    Parameter.\n\nThe recipe was derived from Jim's zc.filestorage recipe.\n\nOriginal README follows:\n========================\n\nThe recipe records a zconfig option for use by other recipes.\n\nWe'll show a couple of examples, using a dictionary as a simulated buildout\nobject::\n\n    >>> import zc.recipe.filestorage\n    >>> buildout = dict(\n    ...   buildout = {\n    ...      'directory': '/buildout',\n    ...      },\n    ...   db = {\n    ...      'path': 'foo/Main.fs',\n    ...      },\n    ...   )\n    >>> recipe = zc.recipe.filestorage.Recipe(\n    ...                   buildout, 'db', buildout['db'])\n\n    >>> print buildout['db']['path']\n    /buildout/foo/Main.fs\n\n    >>> print buildout['db']['zconfig'],\n    <zodb>\n      <filestorage>\n        path /buildout/foo/Main.fs\n      </filestorage>\n    </zodb>\n\n    >>> recipe.install()\n    ()\n\n    >>> import tempfile\n    >>> d = tempfile.mkdtemp()\n    >>> buildout = dict(\n    ...   buildout = {\n    ...      'parts-directory': d,\n    ...      },\n    ...   db = {},\n    ...   )\n\n    >>> recipe = zc.recipe.filestorage.Recipe(\n    ...                   buildout, 'db', buildout['db'])\n\n    >>> print buildout['db']['path']\n    /tmp/tmpQo0DTB/db/Data.fs\n\n    >>> print buildout['db']['blob-dir']\n    /tmp/tmpQo0DTB/db/blobs\n\n    >>> print buildout['db']['zconfig'],\n    <zodb>\n      <blobstorage>\n        blob-dir /tmp/tmpQo0DTB/db/blobs\n        <filestorage>\n          path /tmp/tmpQo0DTB/db/Data.fs\n        </filestorage>\n      </blobstorage>\n    </zodb>\n\n    >>> recipe.install()\n    ()\n\n    >>> import os\n    >>> os.listdir(d)\n    ['db']\n\nThe update method doesn't do anything, as the database part's directory\nalready exists, but it is present, so buildout doesn't complain and doesn't\naccidentally run install() again::\n\n    >>> recipe.update()\n\n\nTo do\n-----\n\n- Add support for various file-storage options\n\n- Create a ZODB-configuration recipe that is meant to be a base class for\n  storage recipes and provides database-configuration options.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://svn.kmrc.de/projects/devel/iwm.recipe.blobstorage", "keywords": "zope3 bebop blobstorage", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "iwm.recipe.blobstorage", "package_url": "https://pypi.org/project/iwm.recipe.blobstorage/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/iwm.recipe.blobstorage/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://svn.kmrc.de/projects/devel/iwm.recipe.blobstorage"}, "release_url": "https://pypi.org/project/iwm.recipe.blobstorage/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "ZC Buildout recipe for defining a blob-storage", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            Recipe for setting up a blobstorage<br>===================================<br><br>This recipe can be used to define a blobstorage.  It creates a ZConfig<br>file-storage database specification supporting blobs via zope.file that<br>can be used by other recipes to generate ZConfig configuration files. <br><br>This recipe takes an optional combination of a path and a blob_dir option.<br>If one is specified, the other is mandatory. If none are given (recommended),<br>the recipe creates and uses a subdirectory of the buildout parts directory<br>with the same name as the part and a subdirectory 'blobs' therein.<br><br>Additional options, like cache-size, can be given via the<br>storage-options<br>    Parameter.<br><br>The recipe was derived from Jim's zc.filestorage recipe.<br><br>Original README follows:<br>========================<br><br>The recipe records a zconfig option for use by other recipes.<br><br>We'll show a couple of examples, using a dictionary as a simulated buildout<br>object::<br><br>    &gt;&gt;&gt; import zc.recipe.filestorage<br>    &gt;&gt;&gt; buildout = dict(<br>    ...   buildout = {<br>    ...      'directory': '/buildout',<br>    ...      },<br>    ...   db = {<br>    ...      'path': 'foo/Main.fs',<br>    ...      },<br>    ...   )<br>    &gt;&gt;&gt; recipe = zc.recipe.filestorage.Recipe(<br>    ...                   buildout, 'db', buildout['db'])<br><br>    &gt;&gt;&gt; print buildout['db']['path']<br>    /buildout/foo/Main.fs<br><br>    &gt;&gt;&gt; print buildout['db']['zconfig'],<br>    &lt;zodb&gt;<br>      &lt;filestorage&gt;<br>        path /buildout/foo/Main.fs<br>      &lt;/filestorage&gt;<br>    &lt;/zodb&gt;<br><br>    &gt;&gt;&gt; recipe.install()<br>    ()<br><br>    &gt;&gt;&gt; import tempfile<br>    &gt;&gt;&gt; d = tempfile.mkdtemp()<br>    &gt;&gt;&gt; buildout = dict(<br>    ...   buildout = {<br>    ...      'parts-directory': d,<br>    ...      },<br>    ...   db = {},<br>    ...   )<br><br>    &gt;&gt;&gt; recipe = zc.recipe.filestorage.Recipe(<br>    ...                   buildout, 'db', buildout['db'])<br><br>    &gt;&gt;&gt; print buildout['db']['path']<br>    /tmp/tmpQo0DTB/db/Data.fs<br><br>    &gt;&gt;&gt; print buildout['db']['blob-dir']<br>    /tmp/tmpQo0DTB/db/blobs<br><br>    &gt;&gt;&gt; print buildout['db']['zconfig'],<br>    &lt;zodb&gt;<br>      &lt;blobstorage&gt;<br>        blob-dir /tmp/tmpQo0DTB/db/blobs<br>        &lt;filestorage&gt;<br>          path /tmp/tmpQo0DTB/db/Data.fs<br>        &lt;/filestorage&gt;<br>      &lt;/blobstorage&gt;<br>    &lt;/zodb&gt;<br><br>    &gt;&gt;&gt; recipe.install()<br>    ()<br><br>    &gt;&gt;&gt; import os<br>    &gt;&gt;&gt; os.listdir(d)<br>    ['db']<br><br>The update method doesn't do anything, as the database part's directory<br>already exists, but it is present, so buildout doesn't complain and doesn't<br>accidentally run install() again::<br><br>    &gt;&gt;&gt; recipe.update()<br><br><br>To do<br>-----<br><br>- Add support for various file-storage options<br><br>- Create a ZODB-configuration recipe that is meant to be a base class for<br>  storage recipes and provides database-configuration options.\n          </div>"}, "last_serial": 737982, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "9108237ccdb6efe183848bc0831366d7", "sha256": "60224fa30e17596fb6a7f6300357d8c26433cd38b3deea6569057f42e99e3121"}, "downloads": -1, "filename": "iwm.recipe.blobstorage-0.0.2-py2.4.egg", "has_sig": false, "md5_digest": "9108237ccdb6efe183848bc0831366d7", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 7459, "upload_time": "2007-07-16T15:33:07", "upload_time_iso_8601": "2007-07-16T15:33:07Z", "url": "https://files.pythonhosted.org/packages/26/3a/567fa9e3abaaa207fd8242bfd63a54a75dbb35a89006f0366fa596d43693/iwm.recipe.blobstorage-0.0.2-py2.4.egg", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9108237ccdb6efe183848bc0831366d7", "sha256": "60224fa30e17596fb6a7f6300357d8c26433cd38b3deea6569057f42e99e3121"}, "downloads": -1, "filename": "iwm.recipe.blobstorage-0.0.2-py2.4.egg", "has_sig": false, "md5_digest": "9108237ccdb6efe183848bc0831366d7", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 7459, "upload_time": "2007-07-16T15:33:07", "upload_time_iso_8601": "2007-07-16T15:33:07Z", "url": "https://files.pythonhosted.org/packages/26/3a/567fa9e3abaaa207fd8242bfd63a54a75dbb35a89006f0366fa596d43693/iwm.recipe.blobstorage-0.0.2-py2.4.egg", "yanked": false}], "timestamp": "Fri May  8 00:53:31 2020"}