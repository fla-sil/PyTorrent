{"info": {"author": "Nick Sinopoli", "author_email": "nsinopoli@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "lucido\n======\n\nEver wanted to release a project to the open source community, if only it weren't for the hassle of having to strip out sensitive data like API keys every time you commit?\n\nOr maybe you've had to rewrite your version control history because you accidentally committed something that the rest of the world wasn't supposed to see?\n\n**lucido** (pronounced loo-CHEE-dough) is a simple script designed to make these problems a thing of the past. On its own, it can strip and restore sensitive data with ease. Within a git repository, lucido prevents you from committing your sensitive data, and automatically restores it for you after any merges.\n\nInstallation\n------------\n\nFrom the command line::\n\n    pip install lucido\n\nIf lucido is already installed, you can upgrade to the latest version with::\n\n    pip install --upgrade lucido\n\nYou'll also need to have Perl installed [1]_. For most people, this shouldn't be an issue.\n\nGetting Started\n---------------\n\nYou'll want to create a file named ``luci.yml``. (If you're doing this within a git repository, make sure ``luci.yml`` is at the root of the repository.) It should contain, at the very least, a ``sensitive`` key, which will take a list of values that should be scrubbed by lucido.  It can also contain an ``exclude`` key, which can take a list of directories which should not be scrubbed.\n\nHere's an example::\n\n    exclude:\n    - .git\n    sensitive:\n    - qqhPKzffeZu0\n    - ALpeJmcMs7TG\n    - z-1JWjRdbXzN\n    - 3r_h1q_1TEs3\n\nNote that you can also use regular expressions::\n\n    exclude:\n    - .git\n    sensitive:\n    - \\w{12}\n\nUsage\n-----\n\nIf you plan to use lucido within a git repository, you'll only need to run the following::\n\n    luci -i\n\nThis will create git hooks for you so that scrubbing/restoring is done automatically. (Technically, scrubbing is not automatic, as pre-commit hooks should not change the content of the files that are to be committed. But if sensitive data is found, the commit will fail and you'll be given a helpful message about how to scrub the data.)\n\nIf you're not using lucido within a git repository, you'll want to run these commands::\n\n    # check for sensitive data\n    luci -c\n    # if present, scrub the sensitive data\n    luci -s\n    # at a later time, restore the sensitive data\n    luci -r\n\nOptions\n~~~~~~~\n\n::\n\n    -c, --check: Checks for sensitive data in the current working directory.\n    -i, --init: Creates git hooks and adds luci.yml to .gitignore if run within a git repository.\n    -s, --scrub: Scrubs sensitive data in the current working directory.\n    -r, --restore: Restores sensitive data in the current working directory.\n\nGit Hooks\n---------\n\nWhen initialized in a git repository, lucido adds the following git hooks:\n\n* ``pre-commit``: Before committing, lucido will check the repository for sensitive data. If sensitive data is present, the commit will not be created.\n* ``post-commit, post-merge``: After committing or merging in new changes, lucido will restore the sensitive data in your repository so that your code will work as expected.\n\nVersion Information\n-------------------\n\nCurrent stable release is v0.3, last updated on November 3, 2012.\n\nContributing\n------------\n\nFeel free to file any issues on the project's `bug tracker`_.\n\nOr, if you're in a more philanthropic mood, consider leaving a `Gittip`_.\n\n.. [1] lucido makes use of Perl in order to perform sed-like replacements in files. The reason sed itself isn't used is because it doesn't support literal (non-regex) search/replace, and juggling the escape characters is a circus feat I don't have the patience to perform.\n.. _`bug tracker`: https://github.com/NSinopoli/lucido/issues\n.. _`Gittip`: https://www.gittip.com/NSinopoli/\n\n\nChangelog\n=========\n\nv0.3\n----\n\n* Add Python 2.7 compatibility\n\nv0.2\n----\n\n* Prevent possibility of shell injection\n* Add support for regexes\n\nv0.1\n----\n\n* Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://git.io/lucido", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "lucido", "package_url": "https://pypi.org/project/lucido/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/lucido/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://git.io/lucido"}, "release_url": "https://pypi.org/project/lucido/0.3/", "requires_dist": null, "requires_python": null, "summary": "An automatic sensitive data scrubber and restorer.", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"lucido\">\n<h2>lucido</h2>\n<p>Ever wanted to release a project to the open source community, if only it weren\u2019t for the hassle of having to strip out sensitive data like API keys every time you commit?</p>\n<p>Or maybe you\u2019ve had to rewrite your version control history because you accidentally committed something that the rest of the world wasn\u2019t supposed to see?</p>\n<p><strong>lucido</strong> (pronounced loo-CHEE-dough) is a simple script designed to make these problems a thing of the past. On its own, it can strip and restore sensitive data with ease. Within a git repository, lucido prevents you from committing your sensitive data, and automatically restores it for you after any merges.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>From the command line:</p>\n<pre>pip install lucido\n</pre>\n<p>If lucido is already installed, you can upgrade to the latest version with:</p>\n<pre>pip install --upgrade lucido\n</pre>\n<p>You\u2019ll also need to have Perl installed <a href=\"#id2\" id=\"id1\" rel=\"nofollow\">[1]</a>. For most people, this shouldn\u2019t be an issue.</p>\n</div>\n<div id=\"getting-started\">\n<h3>Getting Started</h3>\n<p>You\u2019ll want to create a file named <tt>luci.yml</tt>. (If you\u2019re doing this within a git repository, make sure <tt>luci.yml</tt> is at the root of the repository.) It should contain, at the very least, a <tt>sensitive</tt> key, which will take a list of values that should be scrubbed by lucido.  It can also contain an <tt>exclude</tt> key, which can take a list of directories which should not be scrubbed.</p>\n<p>Here\u2019s an example:</p>\n<pre>exclude:\n- .git\nsensitive:\n- qqhPKzffeZu0\n- ALpeJmcMs7TG\n- z-1JWjRdbXzN\n- 3r_h1q_1TEs3\n</pre>\n<p>Note that you can also use regular expressions:</p>\n<pre>exclude:\n- .git\nsensitive:\n- \\w{12}\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>If you plan to use lucido within a git repository, you\u2019ll only need to run the following:</p>\n<pre>luci -i\n</pre>\n<p>This will create git hooks for you so that scrubbing/restoring is done automatically. (Technically, scrubbing is not automatic, as pre-commit hooks should not change the content of the files that are to be committed. But if sensitive data is found, the commit will fail and you\u2019ll be given a helpful message about how to scrub the data.)</p>\n<p>If you\u2019re not using lucido within a git repository, you\u2019ll want to run these commands:</p>\n<pre># check for sensitive data\nluci -c\n# if present, scrub the sensitive data\nluci -s\n# at a later time, restore the sensitive data\nluci -r\n</pre>\n<div id=\"options\">\n<h4>Options</h4>\n<pre>-c, --check: Checks for sensitive data in the current working directory.\n-i, --init: Creates git hooks and adds luci.yml to .gitignore if run within a git repository.\n-s, --scrub: Scrubs sensitive data in the current working directory.\n-r, --restore: Restores sensitive data in the current working directory.\n</pre>\n</div>\n</div>\n<div id=\"git-hooks\">\n<h3>Git Hooks</h3>\n<p>When initialized in a git repository, lucido adds the following git hooks:</p>\n<ul>\n<li><tt><span class=\"pre\">pre-commit</span></tt>: Before committing, lucido will check the repository for sensitive data. If sensitive data is present, the commit will not be created.</li>\n<li><tt><span class=\"pre\">post-commit,</span> <span class=\"pre\">post-merge</span></tt>: After committing or merging in new changes, lucido will restore the sensitive data in your repository so that your code will work as expected.</li>\n</ul>\n</div>\n<div id=\"version-information\">\n<h3>Version Information</h3>\n<p>Current stable release is v0.3, last updated on November 3, 2012.</p>\n</div>\n<div id=\"contributing\">\n<h3>Contributing</h3>\n<p>Feel free to file any issues on the project\u2019s <a href=\"https://github.com/NSinopoli/lucido/issues\" rel=\"nofollow\">bug tracker</a>.</p>\n<p>Or, if you\u2019re in a more philanthropic mood, consider leaving a <a href=\"https://www.gittip.com/NSinopoli/\" rel=\"nofollow\">Gittip</a>.</p>\n<table id=\"id2\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id1\" rel=\"nofollow\">[1]</a></td><td>lucido makes use of Perl in order to perform sed-like replacements in files. The reason sed itself isn\u2019t used is because it doesn\u2019t support literal (non-regex) search/replace, and juggling the escape characters is a circus feat I don\u2019t have the patience to perform.</td></tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"v0-3\">\n<h3>v0.3</h3>\n<ul>\n<li>Add Python 2.7 compatibility</li>\n</ul>\n</div>\n<div id=\"v0-2\">\n<h3>v0.2</h3>\n<ul>\n<li>Prevent possibility of shell injection</li>\n<li>Add support for regexes</li>\n</ul>\n</div>\n<div id=\"v0-1\">\n<h3>v0.1</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1059227, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "716ef50301df294ba3857b11622f4b78", "sha256": "03e941b0faae09dc49e44a543ad8d74a01c8d84b23f35e95aedff47ec1fbb56b"}, "downloads": -1, "filename": "lucido-0.1.tar.gz", "has_sig": false, "md5_digest": "716ef50301df294ba3857b11622f4b78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6205, "upload_time": "2012-10-23T16:50:51", "upload_time_iso_8601": "2012-10-23T16:50:51.497917Z", "url": "https://files.pythonhosted.org/packages/d7/01/d31d7585da2e22dbddedc4c1fb84dc664e3b5347862404f4d5efd04fb45b/lucido-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "b5b21e27f2df9460492b62c058d5b9f2", "sha256": "0f2b997f508780306cddd88d53ec7fa18d5dd2ac29a0bb89b6ae300bd814e09c"}, "downloads": -1, "filename": "lucido-0.2.tar.gz", "has_sig": false, "md5_digest": "b5b21e27f2df9460492b62c058d5b9f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6570, "upload_time": "2012-11-03T18:36:55", "upload_time_iso_8601": "2012-11-03T18:36:55.010576Z", "url": "https://files.pythonhosted.org/packages/86/60/50ecd2d977cc058bdb374066d769b3902ece1f29594ec2218d0798986eb7/lucido-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "1937d690ef444c41b4f065ee0d311f43", "sha256": "e8620823a86fa11e9be7a0398cb8d0f4f9137c759ef5c37f7bd82171cdfc3615"}, "downloads": -1, "filename": "lucido-0.3.tar.gz", "has_sig": false, "md5_digest": "1937d690ef444c41b4f065ee0d311f43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6685, "upload_time": "2014-04-13T16:54:22", "upload_time_iso_8601": "2014-04-13T16:54:22.614673Z", "url": "https://files.pythonhosted.org/packages/30/98/3540fe73fb6eb88f5da6c3b41baafa5637ea7cd2e7da983fabfbf08b6776/lucido-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1937d690ef444c41b4f065ee0d311f43", "sha256": "e8620823a86fa11e9be7a0398cb8d0f4f9137c759ef5c37f7bd82171cdfc3615"}, "downloads": -1, "filename": "lucido-0.3.tar.gz", "has_sig": false, "md5_digest": "1937d690ef444c41b4f065ee0d311f43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6685, "upload_time": "2014-04-13T16:54:22", "upload_time_iso_8601": "2014-04-13T16:54:22.614673Z", "url": "https://files.pythonhosted.org/packages/30/98/3540fe73fb6eb88f5da6c3b41baafa5637ea7cd2e7da983fabfbf08b6776/lucido-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:19 2020"}