{"info": {"author": "Aman Jain", "author_email": "amanjain5221@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Legal Industry", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Topic :: Utilities"], "description": "# Atarashi\n\n[![Build Status](https://travis-ci.com/fossology/atarashi.svg?branch=master)](https://travis-ci.com/fossology/atarashi)\n\nOpen source software is licensed using open source licenses. There are many\nof open source licenses around and adding to that, open source software\npackages involve sometimes multiple licenses for different files.\n\nAtarashi provides different methods for scanning for license statements in\nopen source software. Unlike existing rule-based approaches - such as the\nNomos license scanner from the FOSSology project - atarashi implements multiple\ntext statistics and information retrieval algorithms.\n\nAnticipated advantages is an improved precision while offering an as easy\nas possible approach to add new license texts or new license references.\n\nAtarashi is designed to work stand-alone and with FOSSology. More info at\nhttp://fossology.github.io/atarashi\n\n### Requirements\n\n- Python >= v3.5\n- pip >= 18.1\n- `code_comments` (See installation bellow)\n\n## Steps for Installation\n\n### Install\n\n#### Install from PyPi\n- Install additional depencency code-comment\n    - `pip install code_comment@git+https://github.com/amanjain97/code_comment@master#egg=code_comment`\n- `pip install atarashi`\n\n#### Source install\n- Install additional dependency code-comment\n    - `pip install code_comment@git+https://github.com/amanjain97/code_comment@master#egg=code_comment`\n- `pip install .`\n- It will download all dependencies required and trigger build as well.\n- Build will generate 3 new files in your current directory\n    1.  `data/Ngram_keywords.json`\n    2.  `licenses/<SPDX-version>.csv`\n    3.  `licenses/processedList.csv`\n- These files will be placed to their appropriate places by the install script.\n\n### Installing just dependencies\n\n- `pip install -r requirements.txt`\n\n### Build (optional)\n\n- `$ python3 setup.py build`\n\n## How to run\n\nGet the help by running `atarashi -h` or `atarashi --help`\n\n### Example\n\n- Running **DLD** agent\n\n    `atarashi -a DLD /path/to/file.c`\n- Running **wordFrequencySimilarity** agent\n\n    `atarashi -a wordFrequencySimilarity /path/to/file.c`\n- Running **tfidf** agent\n    - With **Cosine similarity**\n\n        `atarashi -a tfidf /path/to/file.c`\n\n        `atarashi -a tfidf -s CosineSim /path/to/file.c`\n    - With **Score similarity**\n\n        `atarashi -a tfidf -s ScoreSim /path/to/file.c`\n- Running **Ngram** agent\n    - With **Cosine similarity**\n\n        `atarashi -a Ngram /path/to/file.c`\n\n        `atarashi -a Ngram -s CosineSim /path/to/file.c`\n    - With **Dice similarity**\n\n        `atarashi -a Ngram -s DiceSim /path/to/file.c`\n    - With **Bigram Cosine similarity**\n\n        `atarashi -a Ngram -s BigramCosineSim /path/to/file.c`\n- Running in **verbose** mode\n\n    `atarashi -a DLD -v /path/to/file.c`\n- Running with custom CSVs and JSONs\n    - Please reffer to the build instructions to get the CSV and JSON\n    understandable by atarashi.\n    - `atarashi -a DLD -l /path/to/processedList.csv /path/to/file.c`\n    - `atarashi -a Ngram -l /path/to/processedList.csv -j /path/to/ngram.json /path/to/file.c`\n\n### Running Docker image\n1. Pull Docker image\n\n    `docker pull fossology/atarashi:latest`\n2. Run the image\n\n    `docker run --rm -v <path/to/scan>:/project fossology/atarashi:latest <options> /project/<path/to/file>`\n\nSince docker can not access host fs directly, we mount a volume from the\ndirectory containing the files to scan to `/project` in the container. Simply\npass the options and path to the file relative to the mounted path.\n\n### Test\n\n- Run imtihaan (meaning *Exam* in Hindi) with the name of the Agent.\n- eg. `python atarashi/imtihaan.py /path/to/processedList.csv <DLD|tfidf|Ngram> <testfile>`\n- See `python atarashi/imtihaan.py --help` for more\n\n## Creating Debian packages\n\n- Install dependencies\n```\n# apt-get install python3-setuptools python3-all debhelper\n# pip install stdeb\n```\n- Create Debian packages\n```\n$ python3 setup.py --command-packages=stdeb.command bdist_deb\n```\n- Locate the files under `deb_dist`\n\n## License\n\nSPDX-License-Identifier: GPL-2.0\n\nThis program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License version 2\nas published by the Free Software Foundation.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\nSee the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program; if not, write to the Free Software Foundation,\nInc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n## How to generate the documentation using sphinx\n\n1. Go to project directory 'atarashi'.\n2. Install Sphinx and m2r `pip install sphinx m2r` (Since this project is based on python so `pip` is already installed).\n3. Initialise `docs/` directory with `sphinx-quickstart`\n\n    ```bash\n    mkdir docs\n    cd docs/\n    sphinx-quickstart\n    ```\n   - `Root path for the documentation [.]: .`\n   - `Separate source and build directories (y/n) [n]: n`\n   - `autodoc: automatically insert docstrings from modules (y/n) [n]: y`\n   - `intersphinx: link between Sphinx documentation of different projects (y/n) [n]: y`\n   - Else use the default option\n4. Setup the `conf.py` and include `README.md`\n   - Enable the following lines and change the insert path:\n\n        ```python\n        import os\n        import sys\n        sys.path.insert(0, os.path.abspath('../'))\n        ```\n   - Enable `m2r` to insert `.md` files in Sphinx documentation:\n\n        ```python\n        [...]\n        extensions = [\n          ...\n          'm2r',\n        ]\n        [...]\n        source_suffix = ['.rst', '.md']\n        ```\n   - Include `README.md` by editing `index.rst`\n\n        ```rst\n        .. toctree::\n            [...]\n            readme\n\n        .. mdinclude:: ../README.md\n        ```\n5. Auto-generate the `.rst` files in `docs/source` which will be used to generate documentation\n\n    ```bash\n    cd docs/\n    sphinx-apidoc -o source/ ../atarashi\n    ```\n6. `cd docs`\n7. `make html`\n\nThis will generate file in `docs/_build/html`. Go to: index.html\n\nYou can change the theme of the documentation by changing `html_theme` in config.py file in `docs/` folder.\nYou can choose from {'alabaster', 'classic', 'sphinxdoc', 'scrolls', 'agogo', 'traditional', 'nature', 'haiku', 'pyramid', 'bizstyle'}\n[Reference](http://www.sphinx-doc.org/en/master/theming.html)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fossology/atarashi", "keywords": "atarashi,license,license-scanner,oss,oss-compliance", "license": "GPL-2.0-only", "maintainer": "", "maintainer_email": "", "name": "atarashi", "package_url": "https://pypi.org/project/atarashi/", "platform": "", "project_url": "https://pypi.org/project/atarashi/", "project_urls": {"Homepage": "https://github.com/fossology/atarashi"}, "release_url": "https://pypi.org/project/atarashi/0.0.10/", "requires_dist": ["setuptools (>=39.2.0)", "numpy (>=1.16.0)", "tqdm (>=4.23.4)", "pandas (>=0.23.1)", "scikit-learn (>=0.18.1)", "scipy (>=0.18.1)", "textdistance (>=3.0.3)", "pyxDamerauLevenshtein (>=1.5)", "urllib3 (>=1.24.1)"], "requires_python": ">=3.5", "summary": "An intelligent license scanner.", "version": "0.0.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Atarashi</h1>\n<p><a href=\"https://travis-ci.com/fossology/atarashi\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f1691134b7a2b58b41a41ff76c296552f37e2da2/68747470733a2f2f7472617669732d63692e636f6d2f666f73736f6c6f67792f61746172617368692e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Open source software is licensed using open source licenses. There are many\nof open source licenses around and adding to that, open source software\npackages involve sometimes multiple licenses for different files.</p>\n<p>Atarashi provides different methods for scanning for license statements in\nopen source software. Unlike existing rule-based approaches - such as the\nNomos license scanner from the FOSSology project - atarashi implements multiple\ntext statistics and information retrieval algorithms.</p>\n<p>Anticipated advantages is an improved precision while offering an as easy\nas possible approach to add new license texts or new license references.</p>\n<p>Atarashi is designed to work stand-alone and with FOSSology. More info at\n<a href=\"http://fossology.github.io/atarashi\" rel=\"nofollow\">http://fossology.github.io/atarashi</a></p>\n<h3>Requirements</h3>\n<ul>\n<li>Python &gt;= v3.5</li>\n<li>pip &gt;= 18.1</li>\n<li><code>code_comments</code> (See installation bellow)</li>\n</ul>\n<h2>Steps for Installation</h2>\n<h3>Install</h3>\n<h4>Install from PyPi</h4>\n<ul>\n<li>Install additional depencency code-comment\n<ul>\n<li><code>pip install code_comment@git+https://github.com/amanjain97/code_comment@master#egg=code_comment</code></li>\n</ul>\n</li>\n<li><code>pip install atarashi</code></li>\n</ul>\n<h4>Source install</h4>\n<ul>\n<li>Install additional dependency code-comment\n<ul>\n<li><code>pip install code_comment@git+https://github.com/amanjain97/code_comment@master#egg=code_comment</code></li>\n</ul>\n</li>\n<li><code>pip install .</code></li>\n<li>It will download all dependencies required and trigger build as well.</li>\n<li>Build will generate 3 new files in your current directory\n<ol>\n<li><code>data/Ngram_keywords.json</code></li>\n<li><code>licenses/&lt;SPDX-version&gt;.csv</code></li>\n<li><code>licenses/processedList.csv</code></li>\n</ol>\n</li>\n<li>These files will be placed to their appropriate places by the install script.</li>\n</ul>\n<h3>Installing just dependencies</h3>\n<ul>\n<li><code>pip install -r requirements.txt</code></li>\n</ul>\n<h3>Build (optional)</h3>\n<ul>\n<li><code>$ python3 setup.py build</code></li>\n</ul>\n<h2>How to run</h2>\n<p>Get the help by running <code>atarashi -h</code> or <code>atarashi --help</code></p>\n<h3>Example</h3>\n<ul>\n<li>\n<p>Running <strong>DLD</strong> agent</p>\n<p><code>atarashi -a DLD /path/to/file.c</code></p>\n</li>\n<li>\n<p>Running <strong>wordFrequencySimilarity</strong> agent</p>\n<p><code>atarashi -a wordFrequencySimilarity /path/to/file.c</code></p>\n</li>\n<li>\n<p>Running <strong>tfidf</strong> agent</p>\n<ul>\n<li>\n<p>With <strong>Cosine similarity</strong></p>\n<p><code>atarashi -a tfidf /path/to/file.c</code></p>\n<p><code>atarashi -a tfidf -s CosineSim /path/to/file.c</code></p>\n</li>\n<li>\n<p>With <strong>Score similarity</strong></p>\n<p><code>atarashi -a tfidf -s ScoreSim /path/to/file.c</code></p>\n</li>\n</ul>\n</li>\n<li>\n<p>Running <strong>Ngram</strong> agent</p>\n<ul>\n<li>\n<p>With <strong>Cosine similarity</strong></p>\n<p><code>atarashi -a Ngram /path/to/file.c</code></p>\n<p><code>atarashi -a Ngram -s CosineSim /path/to/file.c</code></p>\n</li>\n<li>\n<p>With <strong>Dice similarity</strong></p>\n<p><code>atarashi -a Ngram -s DiceSim /path/to/file.c</code></p>\n</li>\n<li>\n<p>With <strong>Bigram Cosine similarity</strong></p>\n<p><code>atarashi -a Ngram -s BigramCosineSim /path/to/file.c</code></p>\n</li>\n</ul>\n</li>\n<li>\n<p>Running in <strong>verbose</strong> mode</p>\n<p><code>atarashi -a DLD -v /path/to/file.c</code></p>\n</li>\n<li>\n<p>Running with custom CSVs and JSONs</p>\n<ul>\n<li>Please reffer to the build instructions to get the CSV and JSON\nunderstandable by atarashi.</li>\n<li><code>atarashi -a DLD -l /path/to/processedList.csv /path/to/file.c</code></li>\n<li><code>atarashi -a Ngram -l /path/to/processedList.csv -j /path/to/ngram.json /path/to/file.c</code></li>\n</ul>\n</li>\n</ul>\n<h3>Running Docker image</h3>\n<ol>\n<li>\n<p>Pull Docker image</p>\n<p><code>docker pull fossology/atarashi:latest</code></p>\n</li>\n<li>\n<p>Run the image</p>\n<p><code>docker run --rm -v &lt;path/to/scan&gt;:/project fossology/atarashi:latest &lt;options&gt; /project/&lt;path/to/file&gt;</code></p>\n</li>\n</ol>\n<p>Since docker can not access host fs directly, we mount a volume from the\ndirectory containing the files to scan to <code>/project</code> in the container. Simply\npass the options and path to the file relative to the mounted path.</p>\n<h3>Test</h3>\n<ul>\n<li>Run imtihaan (meaning <em>Exam</em> in Hindi) with the name of the Agent.</li>\n<li>eg. <code>python atarashi/imtihaan.py /path/to/processedList.csv &lt;DLD|tfidf|Ngram&gt; &lt;testfile&gt;</code></li>\n<li>See <code>python atarashi/imtihaan.py --help</code> for more</li>\n</ul>\n<h2>Creating Debian packages</h2>\n<ul>\n<li>Install dependencies</li>\n</ul>\n<pre><code># apt-get install python3-setuptools python3-all debhelper\n# pip install stdeb\n</code></pre>\n<ul>\n<li>Create Debian packages</li>\n</ul>\n<pre><code>$ python3 setup.py --command-packages=stdeb.command bdist_deb\n</code></pre>\n<ul>\n<li>Locate the files under <code>deb_dist</code></li>\n</ul>\n<h2>License</h2>\n<p>SPDX-License-Identifier: GPL-2.0</p>\n<p>This program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License version 2\nas published by the Free Software Foundation.</p>\n<p>This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\nSee the GNU General Public License for more details.</p>\n<p>You should have received a copy of the GNU General Public License\nalong with this program; if not, write to the Free Software Foundation,\nInc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.</p>\n<h2>How to generate the documentation using sphinx</h2>\n<ol>\n<li>\n<p>Go to project directory 'atarashi'.</p>\n</li>\n<li>\n<p>Install Sphinx and m2r <code>pip install sphinx m2r</code> (Since this project is based on python so <code>pip</code> is already installed).</p>\n</li>\n<li>\n<p>Initialise <code>docs/</code> directory with <code>sphinx-quickstart</code></p>\n<pre>mkdir docs\n<span class=\"nb\">cd</span> docs/\nsphinx-quickstart\n</pre>\n<ul>\n<li><code>Root path for the documentation [.]: .</code></li>\n<li><code>Separate source and build directories (y/n) [n]: n</code></li>\n<li><code>autodoc: automatically insert docstrings from modules (y/n) [n]: y</code></li>\n<li><code>intersphinx: link between Sphinx documentation of different projects (y/n) [n]: y</code></li>\n<li>Else use the default option</li>\n</ul>\n</li>\n<li>\n<p>Setup the <code>conf.py</code> and include <code>README.md</code></p>\n<ul>\n<li>\n<p>Enable the following lines and change the insert path:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">abspath</span><span class=\"p\">(</span><span class=\"s1\">'../'</span><span class=\"p\">))</span>\n</pre>\n</li>\n<li>\n<p>Enable <code>m2r</code> to insert <code>.md</code> files in Sphinx documentation:</p>\n<pre><span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"n\">extensions</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n  <span class=\"o\">...</span>\n  <span class=\"s1\">'m2r'</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">]</span>\n<span class=\"n\">source_suffix</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'.rst'</span><span class=\"p\">,</span> <span class=\"s1\">'.md'</span><span class=\"p\">]</span>\n</pre>\n</li>\n<li>\n<p>Include <code>README.md</code> by editing <code>index.rst</code></p>\n<pre><span class=\"p\">..</span> <span class=\"ow\">toctree</span><span class=\"p\">::</span>\n    [...]\n    readme\n\n<span class=\"p\">..</span> <span class=\"ow\">mdinclude</span><span class=\"p\">::</span> ../README.md\n</pre>\n</li>\n</ul>\n</li>\n<li>\n<p>Auto-generate the <code>.rst</code> files in <code>docs/source</code> which will be used to generate documentation</p>\n<pre><span class=\"nb\">cd</span> docs/\nsphinx-apidoc -o source/ ../atarashi\n</pre>\n</li>\n<li>\n<p><code>cd docs</code></p>\n</li>\n<li>\n<p><code>make html</code></p>\n</li>\n</ol>\n<p>This will generate file in <code>docs/_build/html</code>. Go to: index.html</p>\n<p>You can change the theme of the documentation by changing <code>html_theme</code> in config.py file in <code>docs/</code> folder.\nYou can choose from {'alabaster', 'classic', 'sphinxdoc', 'scrolls', 'agogo', 'traditional', 'nature', 'haiku', 'pyramid', 'bizstyle'}\n<a href=\"http://www.sphinx-doc.org/en/master/theming.html\" rel=\"nofollow\">Reference</a></p>\n\n          </div>"}, "last_serial": 5713454, "releases": {"0.0.10": [{"comment_text": "", "digests": {"md5": "6fe79e5f0511ccb048d6602797d91933", "sha256": "afa3f5420d5a65629b677647f895d192f1c3f92b4e2631d9846855bf6e75eb01"}, "downloads": -1, "filename": "atarashi-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "6fe79e5f0511ccb048d6602797d91933", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 11018701, "upload_time": "2019-08-22T06:21:11", "upload_time_iso_8601": "2019-08-22T06:21:11.327596Z", "url": "https://files.pythonhosted.org/packages/0d/60/33541db530688e744930b50f8c79d8d48ab9d05e1d61ff99e251aabe4b34/atarashi-0.0.10-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6fe79e5f0511ccb048d6602797d91933", "sha256": "afa3f5420d5a65629b677647f895d192f1c3f92b4e2631d9846855bf6e75eb01"}, "downloads": -1, "filename": "atarashi-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "6fe79e5f0511ccb048d6602797d91933", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 11018701, "upload_time": "2019-08-22T06:21:11", "upload_time_iso_8601": "2019-08-22T06:21:11.327596Z", "url": "https://files.pythonhosted.org/packages/0d/60/33541db530688e744930b50f8c79d8d48ab9d05e1d61ff99e251aabe4b34/atarashi-0.0.10-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 18:16:39 2020"}