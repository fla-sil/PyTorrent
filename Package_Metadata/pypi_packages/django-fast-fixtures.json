{"info": {"author": "Martin Owens", "author_email": "doctormo@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "The fast_fixtures django application provides apps with a way to export fixtures which note the state of the database when they were made.\n\nThey then allow the database to move to that state when loading the data or warn the user about the discrepencies (if they want to play it save)\n\nThis module is very new and it's ideas are pretty radical. Please test and consider contributing to the code.\n\nCaveats:\n\n * Output only supports json right now. This is a limitation of django's serializer structure.\n\nFeatures:\n\n * Json file is backwards compatible and new data is ignored if not relivent.\n * Will not run any migrations for test fixtures, but this tools could be used to upgrade those fixtures.\n\nInstallation:\n\n```python\n  pip install django-fast-fixtures\n\n  INSTALLED_APPS = (\n    ...\n    'fast_fixtures',\n  )\n```\n\nUse:\n\n```bash\n  manage.py dumpdata --migrated > fixture.json\n\n  manage.py migrate ... or another website instance\n\n  manage.py loaddata fixture.json\n```\n\nData Created:\n\n  The data created in the json file is almost exactly the same, except for a new header object which appears at the start of the data stream:\n\n```json\n  [\n  {\n    \"model\": \"auth.user\",\n    \"fields\": {},\n    \"migrations\": {\n      \"app_label\": \"last_migration_label\",\n      ...\n    },\n  },\n  ...\n  other data\n  ]\n```\n\n  The model and fields entries are there so the header is ignored by a normal loaddata process. Migrations lists all the apps that are included in this dump and their last applied migration in order.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/doctormo/django-fast-fixtures", "keywords": null, "license": "LGPLv3", "maintainer": null, "maintainer_email": null, "name": "django-fast-fixtures", "package_url": "https://pypi.org/project/django-fast-fixtures/", "platform": "linux", "project_url": "https://pypi.org/project/django-fast-fixtures/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/doctormo/django-fast-fixtures"}, "release_url": "https://pypi.org/project/django-fast-fixtures/0.7/", "requires_dist": null, "requires_python": null, "summary": "Replace dumpdata and loaddata with migration aware fixture commands.", "version": "0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            The fast_fixtures django application provides apps with a way to export fixtures which note the state of the database when they were made.<br><br>They then allow the database to move to that state when loading the data or warn the user about the discrepencies (if they want to play it save)<br><br>This module is very new and it's ideas are pretty radical. Please test and consider contributing to the code.<br><br>Caveats:<br><br> * Output only supports json right now. This is a limitation of django's serializer structure.<br><br>Features:<br><br> * Json file is backwards compatible and new data is ignored if not relivent.<br> * Will not run any migrations for test fixtures, but this tools could be used to upgrade those fixtures.<br><br>Installation:<br><br>```python<br>  pip install django-fast-fixtures<br><br>  INSTALLED_APPS = (<br>    ...<br>    'fast_fixtures',<br>  )<br>```<br><br>Use:<br><br>```bash<br>  manage.py dumpdata --migrated &gt; fixture.json<br><br>  manage.py migrate ... or another website instance<br><br>  manage.py loaddata fixture.json<br>```<br><br>Data Created:<br><br>  The data created in the json file is almost exactly the same, except for a new header object which appears at the start of the data stream:<br><br>```json<br>  [<br>  {<br>    \"model\": \"auth.user\",<br>    \"fields\": {},<br>    \"migrations\": {<br>      \"app_label\": \"last_migration_label\",<br>      ...<br>    },<br>  },<br>  ...<br>  other data<br>  ]<br>```<br><br>  The model and fields entries are there so the header is ignored by a normal loaddata process. Migrations lists all the apps that are included in this dump and their last applied migration in order.\n          </div>"}, "last_serial": 1475865, "releases": {"0.7": [{"comment_text": "", "digests": {"md5": "b9bc6617fb8b5e0a4301ac5c5becec1e", "sha256": "cd5ef56696cf6c019b74ed5ea9c8128b95b60e3dd37d2d402cf204d160d77de9"}, "downloads": -1, "filename": "django-fast-fixtures-0.7.tar.gz", "has_sig": false, "md5_digest": "b9bc6617fb8b5e0a4301ac5c5becec1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4339, "upload_time": "2015-03-24T19:34:44", "upload_time_iso_8601": "2015-03-24T19:34:44.688871Z", "url": "https://files.pythonhosted.org/packages/5f/b8/2f44cf5776661a8434957500764dd19bb1ad6e887c1fdc584031bfe6e76e/django-fast-fixtures-0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b9bc6617fb8b5e0a4301ac5c5becec1e", "sha256": "cd5ef56696cf6c019b74ed5ea9c8128b95b60e3dd37d2d402cf204d160d77de9"}, "downloads": -1, "filename": "django-fast-fixtures-0.7.tar.gz", "has_sig": false, "md5_digest": "b9bc6617fb8b5e0a4301ac5c5becec1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4339, "upload_time": "2015-03-24T19:34:44", "upload_time_iso_8601": "2015-03-24T19:34:44.688871Z", "url": "https://files.pythonhosted.org/packages/5f/b8/2f44cf5776661a8434957500764dd19bb1ad6e887c1fdc584031bfe6e76e/django-fast-fixtures-0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:13 2020"}