{"info": {"author": "Ryan Raaum", "author_email": "code@raaum.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "oldowan.mtconvert is a small, pure Python, bioinformatic utility to (1)\ntransform human mitochondral DNA sequence data into variant sites relative to\nthe revised Cambridge Reference Sequence (rCRS) and (2) transform variant sites\ndata into DNA sequence. Further information on the rCRS and variant site\nnomenclature for human mtDNA sequences is available at the mtconvert_ website. \n\nInstallation Instructions\n=========================\n\nThis package is pure Python and has no dependencies outside of the standard\nlibrary. The easist way to install is using ``easy_install`` from the\nsetuptools_ package.  This usually goes something like this::\n\n\t$ easy_install oldowan.mtconvert\n\nor on a unix-like system, assuming you are installing to the main Python\n``site-packages`` directory as a non-privileged user, this::\n\n\t$ sudo easy_install oldowan.mtconvert\n\nYou may also use the standard python distutils setup method. Download the\ncurrent source archive from the file list towards the bottom of this page,\nunarchive it, and install. On Mac OS X and many other unix-like systems, having\ndownloaded the archive and changed to the directory containing this archive in\nyour shell, this might go something like::\n\n\t$ tar xvzf oldowan.mtconvert*\n\t$ cd oldowan.mtconvert*\n\t$ python setup.py install\n\nQuick Start\n===========\n\nImport ``seq2sites`` and ``sites2seq`` from oldowan.mtconvert::\n\n  >>> from oldowan.mtconvert import seq2sites, sites2seq\n\nConvert sequence to sites::\n\n  >>> seq = \"\"\"TTCTTTCATGGGGAAGCAGATTTGGGTACCACCCAA\n  GTATTGACTCACCCATCAACAACCGCTATGTATTTCGTACATTACTGCC\n  AGCCACCATGAATATTGTACAGTACCATAAATACTTGACCACCTGTAGT\n  ACATAAAAACCCAATCCACATCAAAACCCCCTCCCCATGCTTACAAGCA\n  AGTACAGCAATCAACCTTCAACTATCACACATCAACTGCAACTCCAAAG\n  CCACCCCTCACCCACTAGGATACCAACAAACCTACCCACCCTTAACAGT\n  ACATAGTACATAAAGCCATTTACCGTACATAGCACATTACAGTCAAATC\n  CCTTCTCGTCCC\"\"\"\n  >>> seq2sites(seq)\n\nSequences must be contiguous! Separate runs of sequence, such as HVR1 and HVR2\nwithout the intervening sequence interval, must be analyzed separately.\n\nThere is also a cutoff on the number of ambigous sites (N) allowed in the\nsequence. By default, this is 10 - but this is an option that can be set::\n\n  >>> seq2sites(seq, ambig_cutoff=20)\n\nConvert a list of variable sites to sequence. The default sequence region that\nis returned is hypervariable region 1 (HVR1), which is positions 16024 to 16365\nof the rCRS (in biological one-based numbering)::\n\n  >>> sites2seq('16129A 16223T')\n\nPredefined sequence regions are:\n\n- HVR1: 16024-16365\n- HVR2: 73-340\n- HVR1to2: 16024-340\n- coding: 577-15992\n- all: 1-16559\n\nSo, to convert a list of HVR2 sites to sequence::\n\n  >>> sites2seq('73G', region='HVR2')\n\nSites may also be provided in a list::\n\n  >>> sites2seq(['16129A', '16223T', '73G'], region='HVR1to2')\n\nThe rCRS sequence will be returned given an empty string, empty list, or the\nstring 'rCRS'. All of the following are equivalent::\n\n  >>> sites2seq('')\n  >>> sites2seq([])\n  >>> sites2seq('rCRS')\n\nArbitrary positions may be selected by passing a list of sites to the\n``region`` option::\n\n  >>> sites2seq('', region=[1,2,3])\n\nThe Python range function is convenient for this, but you must remember that\nthe range does not include its ending position::\n\n  >>> sites2seq('', region=range(73,341))  # include 340, but not 341\n    \nRelease History ===============\n\n1.0.0 (March 25, 2009)\n    initial release of module.\n\n1.0.1 (March 25, 2009)\n    minor versioning fix\n\n1.0.2 (May 27, 2009)\n    partial RFLP implementation\n\n1.0.3 (June 22, 2015)\n    add fix for spurious deletions at end of query\n\n1.0.4 (June 22, 2015)\n    improve fix for spurious deletions at end of query\n\n1.0.5 (June 22, 2015)\n    sites outside requested region should pass silently; fix for insertions\n\n1.0.6 (August 4, 2015)\n    fix version number install problem\n\n\n.. _setuptools: http://peak.telecommunity.com/DevCenter/EasyInstall", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.raaum.org", "keywords": "bioinformatics", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "oldowan.mtconvert", "package_url": "https://pypi.org/project/oldowan.mtconvert/", "platform": "Any", "project_url": "https://pypi.org/project/oldowan.mtconvert/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.raaum.org"}, "release_url": "https://pypi.org/project/oldowan.mtconvert/1.0.6/", "requires_dist": null, "requires_python": null, "summary": "Transform human mtDNA sequence to variant sites and vice versa.", "version": "1.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            oldowan.mtconvert is a small, pure Python, bioinformatic utility to (1)<br>transform human mitochondral DNA sequence data into variant sites relative to<br>the revised Cambridge Reference Sequence (rCRS) and (2) transform variant sites<br>data into DNA sequence. Further information on the rCRS and variant site<br>nomenclature for human mtDNA sequences is available at the mtconvert_ website. <br><br>Installation Instructions<br>=========================<br><br>This package is pure Python and has no dependencies outside of the standard<br>library. The easist way to install is using ``easy_install`` from the<br>setuptools_ package.  This usually goes something like this::<br><br>\t$ easy_install oldowan.mtconvert<br><br>or on a unix-like system, assuming you are installing to the main Python<br>``site-packages`` directory as a non-privileged user, this::<br><br>\t$ sudo easy_install oldowan.mtconvert<br><br>You may also use the standard python distutils setup method. Download the<br>current source archive from the file list towards the bottom of this page,<br>unarchive it, and install. On Mac OS X and many other unix-like systems, having<br>downloaded the archive and changed to the directory containing this archive in<br>your shell, this might go something like::<br><br>\t$ tar xvzf oldowan.mtconvert*<br>\t$ cd oldowan.mtconvert*<br>\t$ python setup.py install<br><br>Quick Start<br>===========<br><br>Import ``seq2sites`` and ``sites2seq`` from oldowan.mtconvert::<br><br>  &gt;&gt;&gt; from oldowan.mtconvert import seq2sites, sites2seq<br><br>Convert sequence to sites::<br><br>  &gt;&gt;&gt; seq = \"\"\"TTCTTTCATGGGGAAGCAGATTTGGGTACCACCCAA<br>  GTATTGACTCACCCATCAACAACCGCTATGTATTTCGTACATTACTGCC<br>  AGCCACCATGAATATTGTACAGTACCATAAATACTTGACCACCTGTAGT<br>  ACATAAAAACCCAATCCACATCAAAACCCCCTCCCCATGCTTACAAGCA<br>  AGTACAGCAATCAACCTTCAACTATCACACATCAACTGCAACTCCAAAG<br>  CCACCCCTCACCCACTAGGATACCAACAAACCTACCCACCCTTAACAGT<br>  ACATAGTACATAAAGCCATTTACCGTACATAGCACATTACAGTCAAATC<br>  CCTTCTCGTCCC\"\"\"<br>  &gt;&gt;&gt; seq2sites(seq)<br><br>Sequences must be contiguous! Separate runs of sequence, such as HVR1 and HVR2<br>without the intervening sequence interval, must be analyzed separately.<br><br>There is also a cutoff on the number of ambigous sites (N) allowed in the<br>sequence. By default, this is 10 - but this is an option that can be set::<br><br>  &gt;&gt;&gt; seq2sites(seq, ambig_cutoff=20)<br><br>Convert a list of variable sites to sequence. The default sequence region that<br>is returned is hypervariable region 1 (HVR1), which is positions 16024 to 16365<br>of the rCRS (in biological one-based numbering)::<br><br>  &gt;&gt;&gt; sites2seq('16129A 16223T')<br><br>Predefined sequence regions are:<br><br>- HVR1: 16024-16365<br>- HVR2: 73-340<br>- HVR1to2: 16024-340<br>- coding: 577-15992<br>- all: 1-16559<br><br>So, to convert a list of HVR2 sites to sequence::<br><br>  &gt;&gt;&gt; sites2seq('73G', region='HVR2')<br><br>Sites may also be provided in a list::<br><br>  &gt;&gt;&gt; sites2seq(['16129A', '16223T', '73G'], region='HVR1to2')<br><br>The rCRS sequence will be returned given an empty string, empty list, or the<br>string 'rCRS'. All of the following are equivalent::<br><br>  &gt;&gt;&gt; sites2seq('')<br>  &gt;&gt;&gt; sites2seq([])<br>  &gt;&gt;&gt; sites2seq('rCRS')<br><br>Arbitrary positions may be selected by passing a list of sites to the<br>``region`` option::<br><br>  &gt;&gt;&gt; sites2seq('', region=[1,2,3])<br><br>The Python range function is convenient for this, but you must remember that<br>the range does not include its ending position::<br><br>  &gt;&gt;&gt; sites2seq('', region=range(73,341))  # include 340, but not 341<br>    <br>Release History ===============<br><br>1.0.0 (March 25, 2009)<br>    initial release of module.<br><br>1.0.1 (March 25, 2009)<br>    minor versioning fix<br><br>1.0.2 (May 27, 2009)<br>    partial RFLP implementation<br><br>1.0.3 (June 22, 2015)<br>    add fix for spurious deletions at end of query<br><br>1.0.4 (June 22, 2015)<br>    improve fix for spurious deletions at end of query<br><br>1.0.5 (June 22, 2015)<br>    sites outside requested region should pass silently; fix for insertions<br><br>1.0.6 (August 4, 2015)<br>    fix version number install problem<br><br><br>.. _setuptools: http://peak.telecommunity.com/DevCenter/EasyInstall\n          </div>"}, "last_serial": 1664126, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "b5cfd636b66096d3f0b822a8c9773861", "sha256": "8550bb911edeea8b63b79c1c67f0935abbff3edc804f43e5565a2424622c07bb"}, "downloads": -1, "filename": "oldowan.mtconvert-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b5cfd636b66096d3f0b822a8c9773861", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30203, "upload_time": "2009-03-25T16:58:09", "upload_time_iso_8601": "2009-03-25T16:58:09.638274Z", "url": "https://files.pythonhosted.org/packages/74/02/8ffc5be511f49ae60cb983e8216064f6d46540ce0ce402cf052e772f064d/oldowan.mtconvert-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "48f8ba9581324488227b945c3df25509", "sha256": "dd1fc4bf4cbe894445d432deac58a91f24a1dd99d3ad90dd682e5faa94bc6e8f"}, "downloads": -1, "filename": "oldowan.mtconvert-1.0.1.tar.gz", "has_sig": false, "md5_digest": "48f8ba9581324488227b945c3df25509", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30479, "upload_time": "2009-03-26T14:15:30", "upload_time_iso_8601": "2009-03-26T14:15:30.475462Z", "url": "https://files.pythonhosted.org/packages/b7/b1/b8595d00c201858711b65bfb12b53511a8cbdada8767b0faa70156c9e5f6/oldowan.mtconvert-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "78f310c07572a2fe263a91b771143133", "sha256": "df874dcacc1f9a898c510d9d2cbc3e9cda3f9dd0e56f29d9207af6e0e91176b0"}, "downloads": -1, "filename": "oldowan.mtconvert-1.0.2.tar.gz", "has_sig": false, "md5_digest": "78f310c07572a2fe263a91b771143133", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30510, "upload_time": "2009-03-27T01:45:50", "upload_time_iso_8601": "2009-03-27T01:45:50.580618Z", "url": "https://files.pythonhosted.org/packages/b8/d1/6acf1fbab40b5c82a8ea40af1944548a6308855eaa12c8fee12db8715d29/oldowan.mtconvert-1.0.2.tar.gz", "yanked": false}], "1.0.5a": [{"comment_text": "", "digests": {"md5": "8d6c6aea1fa04859296c4c74b38c4bf0", "sha256": "b89b2fba3c28ed2c0bec3661f353ed02daa1d6a6c74af12a3a976a26ad2eaca4"}, "downloads": -1, "filename": "oldowan.mtconvert-1.0.5a.tar.gz", "has_sig": false, "md5_digest": "8d6c6aea1fa04859296c4c74b38c4bf0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34597, "upload_time": "2015-08-04T17:57:24", "upload_time_iso_8601": "2015-08-04T17:57:24.324033Z", "url": "https://files.pythonhosted.org/packages/24/33/06ee33c47fdf244b51dcb644c6cb5f95b8c9add4af37f3ac28546d10d167/oldowan.mtconvert-1.0.5a.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "4aebb371df7b6c8b5dc89ef9308cfc4e", "sha256": "bdd8c2f11c36ea78ce664e6760fcd7d38f37eaaa0624cbd7754883f10fb16ff5"}, "downloads": -1, "filename": "oldowan.mtconvert-1.0.6.tar.gz", "has_sig": false, "md5_digest": "4aebb371df7b6c8b5dc89ef9308cfc4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34618, "upload_time": "2015-08-04T18:18:57", "upload_time_iso_8601": "2015-08-04T18:18:57.047057Z", "url": "https://files.pythonhosted.org/packages/a4/8d/fcf16641e7d8c1c3fd962496e704f7ee9259bef7063b6204e4d7ef056b52/oldowan.mtconvert-1.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4aebb371df7b6c8b5dc89ef9308cfc4e", "sha256": "bdd8c2f11c36ea78ce664e6760fcd7d38f37eaaa0624cbd7754883f10fb16ff5"}, "downloads": -1, "filename": "oldowan.mtconvert-1.0.6.tar.gz", "has_sig": false, "md5_digest": "4aebb371df7b6c8b5dc89ef9308cfc4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34618, "upload_time": "2015-08-04T18:18:57", "upload_time_iso_8601": "2015-08-04T18:18:57.047057Z", "url": "https://files.pythonhosted.org/packages/a4/8d/fcf16641e7d8c1c3fd962496e704f7ee9259bef7063b6204e4d7ef056b52/oldowan.mtconvert-1.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:41 2020"}