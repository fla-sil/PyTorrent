{"info": {"author": "Suriya Subramanian", "author_email": "suriya@alumni.cs.utexas.edu", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "================\ndjango-xvalidate\n================\n\n.. image:: https://travis-ci.org/suriya/django-xvalidate.svg?branch=master\n    :target: https://travis-ci.org/suriya/django-xvalidate\n.. image:: https://coveralls.io/repos/suriya/django-xvalidate/badge.svg?branch=master&service=github\n  :target: https://coveralls.io/github/suriya/django-xvalidate?branch=master\n.. image:: https://img.shields.io/pypi/v/django-xvalidate.svg\n    :target: https://pypi.python.org/pypi/django-xvalidate\n    :alt: Latest PyPI version\n\ndjango-xvalidate allows you to declare cross-field validators within a\nDjango model.\n\nAs an example, consider a Django model named :code:`Event`.\n\n.. code:: python\n\n  from django.db import models\n\n  class Event(models.Model):\n      title = models.CharField(max_length=255)\n      start_date = models.DateField()\n      end_date = models.DateField()\n\ndjango-xvalidate allows you to declare that the start date precedes the end\ndate as follows:\n\n.. code:: python\n\n  from django.db import models\n  from xvalidate import XValidatedModel, XLe\n\n  class Event(XValidatedModel, models.Model):\n      title = models.CharField(max_length=255)\n      start_date = models.DateField()\n      end_date = models.DateField()\n\n      class XVMeta(XValidatedModel.XVMeta):\n          spec = [\n              XLe('start_date', 'end_date').message(\n                  'The start date should precede the end date')\n          ]\n\n:code:`XValidatedModel` ensures that this specification is maintained\ninvoking :code:`Event.clean()` and raises :code:`ValidationError` as\nappropriate.\n\nWhy use django-xvalidate?\n-------------------------\ndjango-xvalidate allows you to specify how to validate your model instances\nin a more declarative manner than writing imperative code within your\n:code:`clean()` methods. Without django-xvalidate you would have to\nimplement the above example as\n\n.. code:: python\n\n    def clean(self):\n        super(Event, self).clean()\n        if (self.start_date is not None) and (self.end_date is not None):\n            if (self.end_date < self.start_date):\n                raise ValidationError('The start date should precede the end date')\n\nWith a more declarative format we have the option at some point in the\nfuture to automate the creation of test data that passes (or fails)\nvalidation.\n\ndjango-xvalidate comes some operator overloading that brings syntactic\nsugar to your declarations making them very easy to read. For instance,\nyou could specify:\n\n.. code:: python\n\n    ((XF('end_date') - 'start_date') > datetime.timedelta(days=4)).message(\n        'Event should last at least 5 days'\n    )\n\ndjango-xvalidate also allows the use of Django's double-underscore (`__`)\nsyntax to dereference related objects, enabling succinct definitions such\nas the following\n\n.. code:: python\n\n    (XF('registration_date') <= 'event__end_date').message(\n        'Must register before the event ends')", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.github.com/suriya/django-xvalidate", "keywords": null, "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "django-xvalidate", "package_url": "https://pypi.org/project/django-xvalidate/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-xvalidate/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://www.github.com/suriya/django-xvalidate"}, "release_url": "https://pypi.org/project/django-xvalidate/0.4.2/", "requires_dist": null, "requires_python": null, "summary": "Cross-field validators within a Django model", "version": "0.4.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/suriya/django-xvalidate\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/suriya/django-xvalidate.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/19e05d23f30ef4aecfd743eff27fda516ecb03c4/68747470733a2f2f7472617669732d63692e6f72672f7375726979612f646a616e676f2d7876616c69646174652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/suriya/django-xvalidate?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/suriya/django-xvalidate/badge.svg?branch=master&amp;service=github\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eb153489260bbd9ab22b6e5f5373d00489b1833c/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f7375726979612f646a616e676f2d7876616c69646174652f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562\"></a>\n<a href=\"https://pypi.python.org/pypi/django-xvalidate\" rel=\"nofollow\"><img alt=\"Latest PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7c0bb009c6851ffbfccf70ec53132c0b529a54c5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d7876616c69646174652e737667\"></a>\n<p>django-xvalidate allows you to declare cross-field validators within a\nDjango model.</p>\n<p>As an example, consider a Django model named <code>Event</code>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Event</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">)</span>\n    <span class=\"n\">start_date</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateField</span><span class=\"p\">()</span>\n    <span class=\"n\">end_date</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateField</span><span class=\"p\">()</span>\n</pre>\n<p>django-xvalidate allows you to declare that the start date precedes the end\ndate as follows:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">xvalidate</span> <span class=\"kn\">import</span> <span class=\"n\">XValidatedModel</span><span class=\"p\">,</span> <span class=\"n\">XLe</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Event</span><span class=\"p\">(</span><span class=\"n\">XValidatedModel</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">)</span>\n    <span class=\"n\">start_date</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateField</span><span class=\"p\">()</span>\n    <span class=\"n\">end_date</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateField</span><span class=\"p\">()</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">XVMeta</span><span class=\"p\">(</span><span class=\"n\">XValidatedModel</span><span class=\"o\">.</span><span class=\"n\">XVMeta</span><span class=\"p\">):</span>\n        <span class=\"n\">spec</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">XLe</span><span class=\"p\">(</span><span class=\"s1\">'start_date'</span><span class=\"p\">,</span> <span class=\"s1\">'end_date'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">(</span>\n                <span class=\"s1\">'The start date should precede the end date'</span><span class=\"p\">)</span>\n        <span class=\"p\">]</span>\n</pre>\n<p><code>XValidatedModel</code> ensures that this specification is maintained\ninvoking <code>Event.clean()</code> and raises <code>ValidationError</code> as\nappropriate.</p>\n<div id=\"why-use-django-xvalidate\">\n<h2>Why use django-xvalidate?</h2>\n<p>django-xvalidate allows you to specify how to validate your model instances\nin a more declarative manner than writing imperative code within your\n<code>clean()</code> methods. Without django-xvalidate you would have to\nimplement the above example as</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">clean</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">Event</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">start_date</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">end_date</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">end_date</span> <span class=\"o\">&lt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">start_date</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"n\">ValidationError</span><span class=\"p\">(</span><span class=\"s1\">'The start date should precede the end date'</span><span class=\"p\">)</span>\n</pre>\n<p>With a more declarative format we have the option at some point in the\nfuture to automate the creation of test data that passes (or fails)\nvalidation.</p>\n<p>django-xvalidate comes some operator overloading that brings syntactic\nsugar to your declarations making them very easy to read. For instance,\nyou could specify:</p>\n<pre><span class=\"p\">((</span><span class=\"n\">XF</span><span class=\"p\">(</span><span class=\"s1\">'end_date'</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"s1\">'start_date'</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">days</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">(</span>\n    <span class=\"s1\">'Event should last at least 5 days'</span>\n<span class=\"p\">)</span>\n</pre>\n<p>django-xvalidate also allows the use of Django\u2019s double-underscore (<cite>__</cite>)\nsyntax to dereference related objects, enabling succinct definitions such\nas the following</p>\n<pre><span class=\"p\">(</span><span class=\"n\">XF</span><span class=\"p\">(</span><span class=\"s1\">'registration_date'</span><span class=\"p\">)</span> <span class=\"o\">&lt;=</span> <span class=\"s1\">'event__end_date'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">(</span>\n    <span class=\"s1\">'Must register before the event ends'</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2702073, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "c01a5443137a0a345d56ac71ff0c11ea", "sha256": "c2606d036b2cfe4dee1ae0c667c713eaee9d2985010e1e345327ff47fa723fd9"}, "downloads": -1, "filename": "django-xvalidate-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c01a5443137a0a345d56ac71ff0c11ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4271, "upload_time": "2015-09-27T14:53:51", "upload_time_iso_8601": "2015-09-27T14:53:51.075844Z", "url": "https://files.pythonhosted.org/packages/1e/0c/c39036e338e7de675ef14c60ebc4c8b66bb38584796cf280fe1241f4f1aa/django-xvalidate-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "29d2224e8b5d0cbd6eadc1e0c1fb8c22", "sha256": "e2212d3197a6e59666a708d272a67e00696d73ec2470e13d1fa74b156f98c602"}, "downloads": -1, "filename": "django-xvalidate-0.2.0.tar.gz", "has_sig": false, "md5_digest": "29d2224e8b5d0cbd6eadc1e0c1fb8c22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4615, "upload_time": "2015-10-04T17:35:56", "upload_time_iso_8601": "2015-10-04T17:35:56.859166Z", "url": "https://files.pythonhosted.org/packages/1a/ae/1b173bddcc94af51bf81aa1e28d7d2bfbb521ee225c4a37460c5a488c7cd/django-xvalidate-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "c500284f8d442b61879998753b37a3cc", "sha256": "ba8fcabad889f9db928b3025575192f29c70572a5421ca571b58759aaa60d1d0"}, "downloads": -1, "filename": "django-xvalidate-0.3.0.tar.gz", "has_sig": false, "md5_digest": "c500284f8d442b61879998753b37a3cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4819, "upload_time": "2015-10-05T08:24:25", "upload_time_iso_8601": "2015-10-05T08:24:25.361614Z", "url": "https://files.pythonhosted.org/packages/74/a9/ed1c5591ea614e06caeff99e262a8a3e1e1af63940436e04b75a56d8014b/django-xvalidate-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "25ee8e41bf1fc6db68e795236cd3b7e4", "sha256": "fc84f087ad7dc9cfb06b855188d0dfbb00dc2b02c53514811da8fb02b7c2d520"}, "downloads": -1, "filename": "django-xvalidate-0.3.1.tar.gz", "has_sig": false, "md5_digest": "25ee8e41bf1fc6db68e795236cd3b7e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4817, "upload_time": "2015-10-13T07:12:03", "upload_time_iso_8601": "2015-10-13T07:12:03.916631Z", "url": "https://files.pythonhosted.org/packages/91/8c/84c73883dbb0928c476aaa0c10bad29d9e4ac54dc2daf9777ecd7a738944/django-xvalidate-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "06b872a8d37da75ea61b9bffae94f04f", "sha256": "feddc20bd6cea40875ae4504cba7956c156fd50ef27953d95a9e7422cc81ccb2"}, "downloads": -1, "filename": "django-xvalidate-0.4.0.tar.gz", "has_sig": false, "md5_digest": "06b872a8d37da75ea61b9bffae94f04f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5522, "upload_time": "2016-04-17T09:19:12", "upload_time_iso_8601": "2016-04-17T09:19:12.164643Z", "url": "https://files.pythonhosted.org/packages/ad/63/ee8320c3eecd7daf4211ffa8826fe7c5dbbd97ae92e54630f994a9b2ae27/django-xvalidate-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "f747f1aadf06bc8fd45ba6795ab10a5b", "sha256": "f4b331fd68ec7b87d144c9aa12fc9828ab3086d4b419707dafa5e37ff55feba1"}, "downloads": -1, "filename": "django-xvalidate-0.4.1.tar.gz", "has_sig": false, "md5_digest": "f747f1aadf06bc8fd45ba6795ab10a5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5445, "upload_time": "2016-08-12T04:52:15", "upload_time_iso_8601": "2016-08-12T04:52:15.061206Z", "url": "https://files.pythonhosted.org/packages/ee/56/bc054a1f7a8808cfe60d3268231aa2dda59d2cffb144cd813c4c123b15a7/django-xvalidate-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "7f64b4713c6c32beac0baa06891aea16", "sha256": "5f78409948f2ba56ba0c7a712eea325f3548803cac35b28a65030559af56f75a"}, "downloads": -1, "filename": "django-xvalidate-0.4.2.tar.gz", "has_sig": false, "md5_digest": "7f64b4713c6c32beac0baa06891aea16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5537, "upload_time": "2017-03-13T10:40:39", "upload_time_iso_8601": "2017-03-13T10:40:39.163669Z", "url": "https://files.pythonhosted.org/packages/7d/ac/a9a574315038cba8438c8dba47d16809bd49b7ab41316b5f6fdf63d2451c/django-xvalidate-0.4.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7f64b4713c6c32beac0baa06891aea16", "sha256": "5f78409948f2ba56ba0c7a712eea325f3548803cac35b28a65030559af56f75a"}, "downloads": -1, "filename": "django-xvalidate-0.4.2.tar.gz", "has_sig": false, "md5_digest": "7f64b4713c6c32beac0baa06891aea16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5537, "upload_time": "2017-03-13T10:40:39", "upload_time_iso_8601": "2017-03-13T10:40:39.163669Z", "url": "https://files.pythonhosted.org/packages/7d/ac/a9a574315038cba8438c8dba47d16809bd49b7ab41316b5f6fdf63d2451c/django-xvalidate-0.4.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:47 2020"}