{"info": {"author": "Brandon Bocklund", "author_email": "brandonbocklund@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering :: Chemistry", "Topic :: Scientific/Engineering :: Physics"], "description": "=========================================\nDFTTK: Density Functional Theory Tool Kit\n=========================================\n\n**Ultimate goals:** For a given structure and elements, calculate the free energy with respect to possible internal degree of freedoms.\n\n- Features\n\n - High-throughput. It can run plenty of structures with one simple command.\n - Simple. Only the structure file is required.\n\n- The following workflows are currently implemented:\n\n - Gibbs energy workflow for stable structures\n - Minimum volume finding workflow\n\n**Note:** This repo contains the custom workflows developed by the Phases Research Lab that do not fit into the scope of the public atomate repository.\n\n\nInstallation\n============\n\nDFTTK requires Python 3. Python 2 support for NumPy ends 2019-01-01.\n\nCreate virtual environment (optional)\n-------------------------------------\n\nAnaconda_ or Miniconda_ is required. (Another option is using virtualenv_)\n\n.. code-block:: bash\n\n    #conda create -n ENV_NAME python=VERSION\n    conda create -n dfttk python=3.6\n    #Activate\n    conda activate dfttk\n    #Deactivate\n    conda deactivate\n\n.. _virtualenv: https://github.com/pypa/virtualenv\n.. _Anaconda: https://www.anaconda.com/\n.. _Miniconda: https://docs.conda.io/en/latest/miniconda.html\n\n\nInstall dfttk\n-------------\n\nTo install dfttk, there are several ways.\n\n- pip\n\nFrom the command line, run ``pip install dfttk``\n\n- conda\n\nAnaconda packages of DFTTK are currently not supported. If you are using Anaconda, you should be able to install with pip.\n\n- development versions\n\n.. code-block:: bash\n\n    git clone https://github.com/phasesresearchlab/dfttk\n    cd dfttk\n    pip install -e .\n\nConfiguration\n=============\n\nPreparation\n-----------\n\nPrepare following files.\n\n.. code-block:: bash\n\n    current_folder\n    \u251c\u2500\u2500 psp                          [specified by -psp]\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 pseudopotential_content  [required if you didnot configurate pymatgen]\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 ...\n    \u251c\u2500\u2500 config                       [specified by -c parameter]\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 db.json                  [required]\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 my_launchpad.yaml        [required]\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 FW_config.yaml           [optional]\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 my_fworker.yaml          [optional]\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 my_qadapter.yaml         [optional]\n    \u2514\u2500\u2500 vaspjob.pbs                  [optional, specified by -q parameter]\n\n\nConfig\n------\n\nAfter prepared above files, simply run\n\n.. code-block:: bash\n\n    dfttk config -all\n\n**PRL GROUP NOTE:** If you use ACI cluster at PRL group, you can get the pseudopotentials from ACI\n\n.. code-block:: bash\n\n    dfttk config -all -aci\n\nFor more details, ref. Configuration_\n\n.. _Configuration: docs/Configuration.md\n\nUse\n===\n\n1. Prepare structure file(s), e.g. POSCAR\n2. Simply run ``dfttk run -f POSCAR``\n\nFor more details, ref. Get_Started_\n\n.. _Get_Started: docs/Get_started.md\n\nContributing\n============\n\nSee CONTRIBUTING.rst_\n\n.. _CONTRIBUTING.rst: CONTRIBUTING.rst\n\nLicense\n-------\n\nDFTTK is MIT licensed. See LICENSE_\n\n.. _LICENSE: LICENSE", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/phasesresearchlab/dfttk", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "dfttk", "package_url": "https://pypi.org/project/dfttk/", "platform": "", "project_url": "https://pypi.org/project/dfttk/", "project_urls": {"Homepage": "https://github.com/phasesresearchlab/dfttk"}, "release_url": "https://pypi.org/project/dfttk/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "Density functional theory workflows for finite temperature thermodynamics based on atomate workflows. Created by the Phases Research Lab", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>Ultimate goals:</strong> For a given structure and elements, calculate the free energy with respect to possible internal degree of freedoms.</p>\n<ul>\n<li>Features</li>\n</ul>\n<blockquote>\n<ul>\n<li>High-throughput. It can run plenty of structures with one simple command.</li>\n<li>Simple. Only the structure file is required.</li>\n</ul>\n</blockquote>\n<ul>\n<li>The following workflows are currently implemented:</li>\n</ul>\n<blockquote>\n<ul>\n<li>Gibbs energy workflow for stable structures</li>\n<li>Minimum volume finding workflow</li>\n</ul>\n</blockquote>\n<p><strong>Note:</strong> This repo contains the custom workflows developed by the Phases Research Lab that do not fit into the scope of the public atomate repository.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>DFTTK requires Python 3. Python 2 support for NumPy ends 2019-01-01.</p>\n<div id=\"create-virtual-environment-optional\">\n<h3>Create virtual environment (optional)</h3>\n<p><a href=\"https://www.anaconda.com/\" rel=\"nofollow\">Anaconda</a> or <a href=\"https://docs.conda.io/en/latest/miniconda.html\" rel=\"nofollow\">Miniconda</a> is required. (Another option is using <a href=\"https://github.com/pypa/virtualenv\" rel=\"nofollow\">virtualenv</a>)</p>\n<pre><span class=\"c1\">#conda create -n ENV_NAME python=VERSION\n</span>conda create -n dfttk <span class=\"nv\">python</span><span class=\"o\">=</span><span class=\"m\">3</span>.6\n<span class=\"c1\">#Activate\n</span>conda activate dfttk\n<span class=\"c1\">#Deactivate\n</span>conda deactivate\n</pre>\n</div>\n<div id=\"install-dfttk\">\n<h3>Install dfttk</h3>\n<p>To install dfttk, there are several ways.</p>\n<ul>\n<li>pip</li>\n</ul>\n<p>From the command line, run <tt>pip install dfttk</tt></p>\n<ul>\n<li>conda</li>\n</ul>\n<p>Anaconda packages of DFTTK are currently not supported. If you are using Anaconda, you should be able to install with pip.</p>\n<ul>\n<li>development versions</li>\n</ul>\n<pre>git clone https://github.com/phasesresearchlab/dfttk\n<span class=\"nb\">cd</span> dfttk\npip install -e .\n</pre>\n</div>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<div id=\"preparation\">\n<h3>Preparation</h3>\n<p>Prepare following files.</p>\n<pre>current_folder\n\u251c\u2500\u2500 psp                          <span class=\"o\">[</span>specified by -psp<span class=\"o\">]</span>\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 pseudopotential_content  <span class=\"o\">[</span>required <span class=\"k\">if</span> you didnot configurate pymatgen<span class=\"o\">]</span>\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 config                       <span class=\"o\">[</span>specified by -c parameter<span class=\"o\">]</span>\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 db.json                  <span class=\"o\">[</span>required<span class=\"o\">]</span>\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 my_launchpad.yaml        <span class=\"o\">[</span>required<span class=\"o\">]</span>\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 FW_config.yaml           <span class=\"o\">[</span>optional<span class=\"o\">]</span>\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 my_fworker.yaml          <span class=\"o\">[</span>optional<span class=\"o\">]</span>\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 my_qadapter.yaml         <span class=\"o\">[</span>optional<span class=\"o\">]</span>\n\u2514\u2500\u2500 vaspjob.pbs                  <span class=\"o\">[</span>optional, specified by -q parameter<span class=\"o\">]</span>\n</pre>\n</div>\n<div id=\"config\">\n<h3>Config</h3>\n<p>After prepared above files, simply run</p>\n<pre>dfttk config -all\n</pre>\n<p><strong>PRL GROUP NOTE:</strong> If you use ACI cluster at PRL group, you can get the pseudopotentials from ACI</p>\n<pre>dfttk config -all -aci\n</pre>\n<p>For more details, ref. <a href=\"docs/Configuration.md\" rel=\"nofollow\">Configuration</a></p>\n</div>\n</div>\n<div id=\"use\">\n<h2>Use</h2>\n<ol>\n<li>Prepare structure file(s), e.g. POSCAR</li>\n<li>Simply run <tt>dfttk run <span class=\"pre\">-f</span> POSCAR</tt></li>\n</ol>\n<p>For more details, ref. <a href=\"docs/Get_started.md\" rel=\"nofollow\">Get_Started</a></p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>See <a href=\"CONTRIBUTING.rst\" rel=\"nofollow\">CONTRIBUTING.rst</a></p>\n<div id=\"license\">\n<h3>License</h3>\n<p>DFTTK is MIT licensed. See <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a></p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7189024, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "1b500c2ec53619021d6dac0f3203f839", "sha256": "de90b1c79ab57e23a7f4d301ae29ddaebef1ca00eb06591b9ad05ee8697b68cb"}, "downloads": -1, "filename": "dfttk-0.1.tar.gz", "has_sig": false, "md5_digest": "1b500c2ec53619021d6dac0f3203f839", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30756, "upload_time": "2018-08-28T18:10:01", "upload_time_iso_8601": "2018-08-28T18:10:01.530979Z", "url": "https://files.pythonhosted.org/packages/d7/2f/ff1adf4d6697241708b7c01e7979279075e9a85f13e5465ce674d81fabfb/dfttk-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "01dd650d96700732852bd77e3ea21705", "sha256": "c7b7d48dbcd9e26c98b0fe3168b3e3b556550f229e2a30aee21e760cc29a79c2"}, "downloads": -1, "filename": "dfttk-0.1.1.tar.gz", "has_sig": false, "md5_digest": "01dd650d96700732852bd77e3ea21705", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44867, "upload_time": "2018-08-28T18:18:33", "upload_time_iso_8601": "2018-08-28T18:18:33.737011Z", "url": "https://files.pythonhosted.org/packages/04/cf/b63a38319901f476244f01d64cb4609eee06e9270a33aca835240371ad88/dfttk-0.1.1.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "8ffc1c3c78fa2f7496b1ca7f1c50b28e", "sha256": "d268062096c1000b6fc343007c6ac3891c97d3d4867b23e7e41fd33ba2ca13b6"}, "downloads": -1, "filename": "dfttk-0.2.1.tar.gz", "has_sig": false, "md5_digest": "8ffc1c3c78fa2f7496b1ca7f1c50b28e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 442787, "upload_time": "2020-05-07T14:28:36", "upload_time_iso_8601": "2020-05-07T14:28:36.082803Z", "url": "https://files.pythonhosted.org/packages/c8/a0/a3b6e3a33ffb82bace3fb50005944ee390517c53d82c574d473784ec8442/dfttk-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8ffc1c3c78fa2f7496b1ca7f1c50b28e", "sha256": "d268062096c1000b6fc343007c6ac3891c97d3d4867b23e7e41fd33ba2ca13b6"}, "downloads": -1, "filename": "dfttk-0.2.1.tar.gz", "has_sig": false, "md5_digest": "8ffc1c3c78fa2f7496b1ca7f1c50b28e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 442787, "upload_time": "2020-05-07T14:28:36", "upload_time_iso_8601": "2020-05-07T14:28:36.082803Z", "url": "https://files.pythonhosted.org/packages/c8/a0/a3b6e3a33ffb82bace3fb50005944ee390517c53d82c574d473784ec8442/dfttk-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:44 2020"}