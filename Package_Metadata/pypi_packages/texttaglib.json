{"info": {"author": "Le Tuan Anh", "author_email": "tuananh.ke@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Plugins", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing", "Topic :: Text Processing :: Linguistic"], "description": "Python library for managing and annotating textual corpus using TextTagLib (TTL) format\n\n# Installation\n\ntexttaglib is availble on PyPI.\n```bash\npip install texttaglib\n# or more explicit\npython3 -m pip install texttaglib\n```\n\n# Basic usage\n```python\n>>> from texttaglib import ttl\n>>> doc = ttl.Document('mydoc')\n>>> sent = doc.new_sent(\"I am a sentence.\")\n>>> sent\n#1: I am a sentence.\n>>> sent.ID\n1\n>>> sent.text\n'I am a sentence.'\n>>> sent.import_tokens([\"I\", \"am\", \"a\", \"sentence\", \".\"])\n>>> >>> sent.tokens\n[`I`<0:1>, `am`<2:4>, `a`<5:6>, `sentence`<7:15>, `.`<15:16>]\n>>> doc.write_ttl()\n```\n\nThe script above will generate this corpus\n```\n-rw-rw-r--.  1 tuananh tuananh       0  3\u6708 29 13:10 mydoc_concepts.txt\n-rw-rw-r--.  1 tuananh tuananh       0  3\u6708 29 13:10 mydoc_links.txt\n-rw-rw-r--.  1 tuananh tuananh      20  3\u6708 29 13:10 mydoc_sents.txt\n-rw-rw-r--.  1 tuananh tuananh       0  3\u6708 29 13:10 mydoc_tags.txt\n-rw-rw-r--.  1 tuananh tuananh      58  3\u6708 29 13:10 mydoc_tokens.txt\n```\n\n# ELAN support\nTTL can extract metadata and annotations from ELAN transcripts using Python.\n``` python\nfrom texttaglib.elan import parse_eaf_stream\n\n# Test ELAN reader function in texttaglib\nwith open('./data/test.eaf') as eaf_stream:\n    elan = parse_eaf_stream(eaf_stream)\n\n# accessing metadata\nprint(\"Author: {} | Date: {} | Format: {} | Version: {}\".format(elan.author, elan.date, elan.fileformat, elan.version))\nprint(\"Media file: {}\".format(elan.media_file))\nprint(\"Time units: {}\".format(elan.time_units))\nprint(\"Media URL: {} | MIME type: {}\".format(elan.media_url, elan.mime_type))\nprint(\"Media relative URL: {}\".format(elan.relative_media_url))\n\n# accessing tiers & annotations\nfor tier in elan.tiers():\n    print(\"{} | Participant: {} | Type: {}\".format(tier.ID, tier.participant, tier.type_ref))\n    for anno in tier.annotations:\n        print(\"{}. [{} -- {}] {}\".format(anno.ID.rjust(4, ' '), anno.from_ts.ts, anno.to_ts.ts, anno.value))\n```\n\n# SQLite support\nTTL data can be stored in a SQLite database for better corpus analysis.\nSample code will be added soon.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/letuananh/texttaglib", "keywords": "nlp", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "texttaglib", "package_url": "https://pypi.org/project/texttaglib/", "platform": "any", "project_url": "https://pypi.org/project/texttaglib/", "project_urls": {"Bug Tracker": "https://github.com/letuananh/texttaglib/issues", "Homepage": "https://github.com/letuananh/texttaglib", "Source Code": "https://github.com/letuananh/texttaglib/"}, "release_url": "https://pypi.org/project/texttaglib/0.1a5/", "requires_dist": null, "requires_python": "", "summary": "Python library for managing and annotating textual corpus using TextTagLib (TTL) format", "version": "0.1a5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python library for managing and annotating textual corpus using TextTagLib (TTL) format</p>\n<h1>Installation</h1>\n<p>texttaglib is availble on PyPI.</p>\n<pre>pip install texttaglib\n<span class=\"c1\"># or more explicit</span>\npython3 -m pip install texttaglib\n</pre>\n<h1>Basic usage</h1>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">texttaglib</span> <span class=\"kn\">import</span> <span class=\"n\">ttl</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"n\">ttl</span><span class=\"o\">.</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s1\">'mydoc'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sent</span> <span class=\"o\">=</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">new_sent</span><span class=\"p\">(</span><span class=\"s2\">\"I am a sentence.\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sent</span>\n<span class=\"c1\">#1: I am a sentence.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sent</span><span class=\"o\">.</span><span class=\"n\">ID</span>\n<span class=\"mi\">1</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sent</span><span class=\"o\">.</span><span class=\"n\">text</span>\n<span class=\"s1\">'I am a sentence.'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sent</span><span class=\"o\">.</span><span class=\"n\">import_tokens</span><span class=\"p\">([</span><span class=\"s2\">\"I\"</span><span class=\"p\">,</span> <span class=\"s2\">\"am\"</span><span class=\"p\">,</span> <span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"s2\">\"sentence\"</span><span class=\"p\">,</span> <span class=\"s2\">\".\"</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sent</span><span class=\"o\">.</span><span class=\"n\">tokens</span>\n<span class=\"p\">[</span><span class=\"err\">`</span><span class=\"n\">I</span><span class=\"err\">`</span><span class=\"o\">&lt;</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"err\">`</span><span class=\"n\">am</span><span class=\"err\">`</span><span class=\"o\">&lt;</span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"mi\">4</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"err\">`</span><span class=\"n\">a</span><span class=\"err\">`</span><span class=\"o\">&lt;</span><span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"mi\">6</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"err\">`</span><span class=\"n\">sentence</span><span class=\"err\">`</span><span class=\"o\">&lt;</span><span class=\"mi\">7</span><span class=\"p\">:</span><span class=\"mi\">15</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"err\">`</span><span class=\"o\">.</span><span class=\"err\">`</span><span class=\"o\">&lt;</span><span class=\"mi\">15</span><span class=\"p\">:</span><span class=\"mi\">16</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">write_ttl</span><span class=\"p\">()</span>\n</pre>\n<p>The script above will generate this corpus</p>\n<pre><code>-rw-rw-r--.  1 tuananh tuananh       0  3\u6708 29 13:10 mydoc_concepts.txt\n-rw-rw-r--.  1 tuananh tuananh       0  3\u6708 29 13:10 mydoc_links.txt\n-rw-rw-r--.  1 tuananh tuananh      20  3\u6708 29 13:10 mydoc_sents.txt\n-rw-rw-r--.  1 tuananh tuananh       0  3\u6708 29 13:10 mydoc_tags.txt\n-rw-rw-r--.  1 tuananh tuananh      58  3\u6708 29 13:10 mydoc_tokens.txt\n</code></pre>\n<h1>ELAN support</h1>\n<p>TTL can extract metadata and annotations from ELAN transcripts using Python.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">texttaglib.elan</span> <span class=\"kn\">import</span> <span class=\"n\">parse_eaf_stream</span>\n\n<span class=\"c1\"># Test ELAN reader function in texttaglib</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'./data/test.eaf'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">eaf_stream</span><span class=\"p\">:</span>\n    <span class=\"n\">elan</span> <span class=\"o\">=</span> <span class=\"n\">parse_eaf_stream</span><span class=\"p\">(</span><span class=\"n\">eaf_stream</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># accessing metadata</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Author: </span><span class=\"si\">{}</span><span class=\"s2\"> | Date: </span><span class=\"si\">{}</span><span class=\"s2\"> | Format: </span><span class=\"si\">{}</span><span class=\"s2\"> | Version: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">elan</span><span class=\"o\">.</span><span class=\"n\">author</span><span class=\"p\">,</span> <span class=\"n\">elan</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">,</span> <span class=\"n\">elan</span><span class=\"o\">.</span><span class=\"n\">fileformat</span><span class=\"p\">,</span> <span class=\"n\">elan</span><span class=\"o\">.</span><span class=\"n\">version</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Media file: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">elan</span><span class=\"o\">.</span><span class=\"n\">media_file</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Time units: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">elan</span><span class=\"o\">.</span><span class=\"n\">time_units</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Media URL: </span><span class=\"si\">{}</span><span class=\"s2\"> | MIME type: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">elan</span><span class=\"o\">.</span><span class=\"n\">media_url</span><span class=\"p\">,</span> <span class=\"n\">elan</span><span class=\"o\">.</span><span class=\"n\">mime_type</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Media relative URL: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">elan</span><span class=\"o\">.</span><span class=\"n\">relative_media_url</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># accessing tiers &amp; annotations</span>\n<span class=\"k\">for</span> <span class=\"n\">tier</span> <span class=\"ow\">in</span> <span class=\"n\">elan</span><span class=\"o\">.</span><span class=\"n\">tiers</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\"> | Participant: </span><span class=\"si\">{}</span><span class=\"s2\"> | Type: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">tier</span><span class=\"o\">.</span><span class=\"n\">ID</span><span class=\"p\">,</span> <span class=\"n\">tier</span><span class=\"o\">.</span><span class=\"n\">participant</span><span class=\"p\">,</span> <span class=\"n\">tier</span><span class=\"o\">.</span><span class=\"n\">type_ref</span><span class=\"p\">))</span>\n    <span class=\"k\">for</span> <span class=\"n\">anno</span> <span class=\"ow\">in</span> <span class=\"n\">tier</span><span class=\"o\">.</span><span class=\"n\">annotations</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\">. [</span><span class=\"si\">{}</span><span class=\"s2\"> -- </span><span class=\"si\">{}</span><span class=\"s2\">] </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">anno</span><span class=\"o\">.</span><span class=\"n\">ID</span><span class=\"o\">.</span><span class=\"n\">rjust</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">' '</span><span class=\"p\">),</span> <span class=\"n\">anno</span><span class=\"o\">.</span><span class=\"n\">from_ts</span><span class=\"o\">.</span><span class=\"n\">ts</span><span class=\"p\">,</span> <span class=\"n\">anno</span><span class=\"o\">.</span><span class=\"n\">to_ts</span><span class=\"o\">.</span><span class=\"n\">ts</span><span class=\"p\">,</span> <span class=\"n\">anno</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">))</span>\n</pre>\n<h1>SQLite support</h1>\n<p>TTL data can be stored in a SQLite database for better corpus analysis.\nSample code will be added soon.</p>\n\n          </div>"}, "last_serial": 7066450, "releases": {"0.1a1": [{"comment_text": "", "digests": {"md5": "fa833474e6536d1795496e990b10e4ce", "sha256": "ad30b98e891aad1ff3a2d2569e7f8b74457c8f8258f012304a22a12ba2e50e05"}, "downloads": -1, "filename": "texttaglib-0.1a1.tar.gz", "has_sig": false, "md5_digest": "fa833474e6536d1795496e990b10e4ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3476, "upload_time": "2018-03-29T05:15:31", "upload_time_iso_8601": "2018-03-29T05:15:31.219734Z", "url": "https://files.pythonhosted.org/packages/25/8c/6f71012b4fdce2dbdfa49c0c29addb094d954d82b0c6b10b0be3be0864d9/texttaglib-0.1a1.tar.gz", "yanked": false}], "0.1a2": [{"comment_text": "", "digests": {"md5": "d78756a00fdacd2e937291e893c22561", "sha256": "c91e5be5dc90baf8252f1432a20c16de516a2b2b96eaf1cf9471b32a5261c729"}, "downloads": -1, "filename": "texttaglib-0.1a2.tar.gz", "has_sig": false, "md5_digest": "d78756a00fdacd2e937291e893c22561", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6999, "upload_time": "2018-04-02T13:31:41", "upload_time_iso_8601": "2018-04-02T13:31:41.289644Z", "url": "https://files.pythonhosted.org/packages/6b/a6/be47af60547d742ec17d8c992b169ad5c2a56a6517f60ed436fce02bf609/texttaglib-0.1a2.tar.gz", "yanked": false}], "0.1a3": [{"comment_text": "", "digests": {"md5": "c3e8be8f3cdb7311910b6b69fc31120a", "sha256": "93af65f6562736b1ec1b852572796c8f82c31e8a8d3ca5965a73db05198ec985"}, "downloads": -1, "filename": "texttaglib-0.1a3.tar.gz", "has_sig": false, "md5_digest": "c3e8be8f3cdb7311910b6b69fc31120a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7069, "upload_time": "2018-04-03T08:03:24", "upload_time_iso_8601": "2018-04-03T08:03:24.520615Z", "url": "https://files.pythonhosted.org/packages/7f/3b/083a04036915b2026e8ff82fedd4e8d4ffbac79bdf94819b5fd4c21ea801/texttaglib-0.1a3.tar.gz", "yanked": false}], "0.1a4": [{"comment_text": "", "digests": {"md5": "117a5908afcfde330b7f3ba469ce84b2", "sha256": "8d7ec4bba32d38689ddde855a2c9b827cf360ba588644ea79555132b960365b2"}, "downloads": -1, "filename": "texttaglib-0.1a4.tar.gz", "has_sig": false, "md5_digest": "117a5908afcfde330b7f3ba469ce84b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19352, "upload_time": "2018-07-18T12:56:34", "upload_time_iso_8601": "2018-07-18T12:56:34.696003Z", "url": "https://files.pythonhosted.org/packages/a4/21/dd5315235bdcf9a3bc994812d16acd02e6cddcf2c775325271ae00d1e2e4/texttaglib-0.1a4.tar.gz", "yanked": false}], "0.1a5": [{"comment_text": "", "digests": {"md5": "e48cec39797cc769f4c2d9771bb9d742", "sha256": "2df81ce3fd38770fd3228b136029309d502d0e8f7d24702baaf39555d6e7daf9"}, "downloads": -1, "filename": "texttaglib-0.1a5.tar.gz", "has_sig": false, "md5_digest": "e48cec39797cc769f4c2d9771bb9d742", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25459, "upload_time": "2020-04-21T08:41:33", "upload_time_iso_8601": "2020-04-21T08:41:33.421424Z", "url": "https://files.pythonhosted.org/packages/59/90/f2e1455fc4a475b1087f9c9edbd5daffd61018238e752ac3e855cf965c8a/texttaglib-0.1a5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e48cec39797cc769f4c2d9771bb9d742", "sha256": "2df81ce3fd38770fd3228b136029309d502d0e8f7d24702baaf39555d6e7daf9"}, "downloads": -1, "filename": "texttaglib-0.1a5.tar.gz", "has_sig": false, "md5_digest": "e48cec39797cc769f4c2d9771bb9d742", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25459, "upload_time": "2020-04-21T08:41:33", "upload_time_iso_8601": "2020-04-21T08:41:33.421424Z", "url": "https://files.pythonhosted.org/packages/59/90/f2e1455fc4a475b1087f9c9edbd5daffd61018238e752ac3e855cf965c8a/texttaglib-0.1a5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:56 2020"}