{"info": {"author": "Diogo Munaro Vieira, Thiago Pereira Fernandes", "author_email": "diogo.mvieira@gmail.com, thiago.fernandes210@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Topic :: Database", "Topic :: Office/Business", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "Pentaho DB Changer\n******************\n\nChange dynamically Pentaho database connections from kjb, ktr and xml files\n\nInstallation\n============\n\n::\n\n    pip install pentaho-db-changer\n\n\nHow to Use\n==========\n\nBefore execute the program you need to configure .ini file (config.ini) with your database settings.\n\nYou can follow this example:\n\nFirst of all use a section 'connect' to select which database you will use.\n\n::\n\n    [connect]\n    connect = connect_local\n\nThen, create a default section with the absolute path for pdi files.\n\n::\n\n    [default]\n    path = /home/pdi\n\nAt last, create a section for each connection that you want to use and change easily.\n\n::\n\n    [conect_server]\n    server = xxxxxx\n    username = xxxxxx\n    password = my_pass\n\n    [conect_local]\n    server = localhost\n    username = root\n    password = other_pass\n\nJust execute \\__init__.py file as follow:\n\n::\n\n    cd set_db_pdi\n    python __init__.py\n\nUsing as a Module\n=================\n\nDownload this project with:\n\n::\n\n    git clone https://github.com/kappius/pentaho-db-changer.git\n\nAll modules are in **set_db_pdi** folder and you can copy this folder and put inside your modules folder.\n\nThen, import using:\n\n::\n\n    from set_db_pdi import SetDB\n\nYou can set a custom configuration file name using:\n\n::\n\n    SetDB('settings.ini').write_file_pdi()\n    \n\nIf your password is encrypted (using right pdi format), then call:\n\n::\n\n    SetDB().write_file_pdi(encrypt=False)\n\nIf not, then:\n\n::\n\n    SetDB().write_file_pdi() # this is default call when you execute __init__.py file\n\nYou know if it is encrypted if password in config.ini is in format:\n\n::\n\n    password = Encrypted 1ad32da2de2da7886\n\nUsing in reports\n================\n\nIt works with Pentaho Report Designer's files (.prpt) too, but only using \n**encrypt=False** since this issue was solved: http://jira.pentaho.com/browse/PRD-3608\n\nJust unzip .prpt files and get file datasources\\sql-ds.xml\n\nThis file (sql-ds.xml) is like .kjb and .ktr files and use same connection names.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/kappius/pyheaderfile/archive/0.0.3.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kappius/pyheaderfile", "keywords": "pentaho,kettle,report,ktr,kjb,xml,txt", "license": "Apache", "maintainer": null, "maintainer_email": null, "name": "pentaho-db-changer", "package_url": "https://pypi.org/project/pentaho-db-changer/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pentaho-db-changer/", "project_urls": {"Download": "https://github.com/kappius/pyheaderfile/archive/0.0.3.tar.gz", "Homepage": "https://github.com/kappius/pyheaderfile"}, "release_url": "https://pypi.org/project/pentaho-db-changer/0.0.3/", "requires_dist": null, "requires_python": null, "summary": "Change dynamically Pentaho database connections from kjb, ktr and xml files", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Change dynamically Pentaho database connections from kjb, ktr and xml files</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install pentaho-db-changer\n</pre>\n</div>\n<div id=\"how-to-use\">\n<h2>How to Use</h2>\n<p>Before execute the program you need to configure .ini file (config.ini) with your database settings.</p>\n<p>You can follow this example:</p>\n<p>First of all use a section \u2018connect\u2019 to select which database you will use.</p>\n<pre>[connect]\nconnect = connect_local\n</pre>\n<p>Then, create a default section with the absolute path for pdi files.</p>\n<pre>[default]\npath = /home/pdi\n</pre>\n<p>At last, create a section for each connection that you want to use and change easily.</p>\n<pre>[conect_server]\nserver = xxxxxx\nusername = xxxxxx\npassword = my_pass\n\n[conect_local]\nserver = localhost\nusername = root\npassword = other_pass\n</pre>\n<p>Just execute __init__.py file as follow:</p>\n<pre>cd set_db_pdi\npython __init__.py\n</pre>\n</div>\n<div id=\"using-as-a-module\">\n<h2>Using as a Module</h2>\n<p>Download this project with:</p>\n<pre>git clone https://github.com/kappius/pentaho-db-changer.git\n</pre>\n<p>All modules are in <strong>set_db_pdi</strong> folder and you can copy this folder and put inside your modules folder.</p>\n<p>Then, import using:</p>\n<pre>from set_db_pdi import SetDB\n</pre>\n<p>You can set a custom configuration file name using:</p>\n<pre>SetDB('settings.ini').write_file_pdi()\n</pre>\n<p>If your password is encrypted (using right pdi format), then call:</p>\n<pre>SetDB().write_file_pdi(encrypt=False)\n</pre>\n<p>If not, then:</p>\n<pre>SetDB().write_file_pdi() # this is default call when you execute __init__.py file\n</pre>\n<p>You know if it is encrypted if password in config.ini is in format:</p>\n<pre>password = Encrypted 1ad32da2de2da7886\n</pre>\n</div>\n<div id=\"using-in-reports\">\n<h2>Using in reports</h2>\n<p>It works with Pentaho Report Designer\u2019s files (.prpt) too, but only using\n<strong>encrypt=False</strong> since this issue was solved: <a href=\"http://jira.pentaho.com/browse/PRD-3608\" rel=\"nofollow\">http://jira.pentaho.com/browse/PRD-3608</a></p>\n<p>Just unzip .prpt files and get file datasourcessql-ds.xml</p>\n<p>This file (sql-ds.xml) is like .kjb and .ktr files and use same connection names.</p>\n</div>\n\n          </div>"}, "last_serial": 1463081, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "15fc6ec37049e94b721789a0fdf00d04", "sha256": "3adc1a11c66def64d11a70c1f11877a7f916d3c70d63ad5c85f65c83b4722c57"}, "downloads": -1, "filename": "pentaho-db-changer-0.0.1.tar.gz", "has_sig": false, "md5_digest": "15fc6ec37049e94b721789a0fdf00d04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3864, "upload_time": "2015-03-16T16:49:06", "upload_time_iso_8601": "2015-03-16T16:49:06.288752Z", "url": "https://files.pythonhosted.org/packages/f8/ff/b3fa6d96a45543f82419e978c961b9126fe24f1db43b8dc0c6206f2c73ff/pentaho-db-changer-0.0.1.tar.gz", "yanked": false}], "0.0.2": [], "0.0.3": [{"comment_text": "", "digests": {"md5": "88cac6ebaf94838de1446ca97f8067af", "sha256": "9e7dfab6f43ac5dc43a37419248f19fc87d269f064a7483d2265d298ee632ecd"}, "downloads": -1, "filename": "pentaho-db-changer-0.0.3.tar.gz", "has_sig": false, "md5_digest": "88cac6ebaf94838de1446ca97f8067af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3877, "upload_time": "2015-03-16T16:54:15", "upload_time_iso_8601": "2015-03-16T16:54:15.595226Z", "url": "https://files.pythonhosted.org/packages/48/2a/46cb6696b438114b9d20f178a1b3022a2dc6ed3cf7f395c5fcc7c33a9ec3/pentaho-db-changer-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "88cac6ebaf94838de1446ca97f8067af", "sha256": "9e7dfab6f43ac5dc43a37419248f19fc87d269f064a7483d2265d298ee632ecd"}, "downloads": -1, "filename": "pentaho-db-changer-0.0.3.tar.gz", "has_sig": false, "md5_digest": "88cac6ebaf94838de1446ca97f8067af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3877, "upload_time": "2015-03-16T16:54:15", "upload_time_iso_8601": "2015-03-16T16:54:15.595226Z", "url": "https://files.pythonhosted.org/packages/48/2a/46cb6696b438114b9d20f178a1b3022a2dc6ed3cf7f395c5fcc7c33a9ec3/pentaho-db-changer-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:29 2020"}