{"info": {"author": "Leland McInnes", "author_email": "leland.mcinnes@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: C", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering", "Topic :: Software Development"], "description": ".. image:: https://badge.fury.io/py/pervect.svg\n    :target: https://pypi.org/project/pervect/0.0.1/\n.. image:: https://travis-ci.org/scikit-tda/pervect.svg?branch=master\n    :target: https://travis-ci.org/scikit-tda/pervect\n.. image:: https://codecov.io/gh/scikit-tda/pervect/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/scikit-tda/pervect\n.. image:: https://img.shields.io/badge/License-BSD%203--Clause-blue.svg\n    :target: https://opensource.org/licenses/BSD-3-Clause\n\n=======\nPerVect\n=======\n\nVectorization of persistence diagrams and approximate Wasserstein distance. This is\nmanaged by approximating persistence diagrams with Gaussian mixture models and then\nmeasuring the Wasserstein distance between the Gaussian mixtures. As the number of\ncomponents in mixture model increases the accuracy of the approximation increases\naccordingly until, with equivalence in the limit.\n\nThe library is implemented as a `Scikit-learn <https://scikit-learn.org/stable/>`_\ntransformer -- taking a list of\npersistence diagrams (preferably in birth-lifetime format) as input, and transforming\nit into a vector representation (specifically the component weights for a Gaussian\nmixture model fit to the union of all the diagrams). Distances can then be computed\nas Wassterstein distance over a ground-distance matrix provided as an attribute of the\ntransformer. Alternatively UMAP can be used to convert toa lower dimensional\nEuclidean distance representation.\n\n------------------\nHow to use PerVect\n------------------\n\nThe pervect library inheritis from sklearn classes and can be used as an sklearn\ntransformer.\n\n.. code:: python\n\n    import pervect\n    vects = pervect.PersistenceVectorizer().fit_transform(diagrams)\n\nIt can also be used in standard sklearn pipelines along with other machine learning\ntools including clustering and classifiers.\n\n------------\nInstallation\n------------\n\nRequirements:\n\n* Python >= 3.6\n* scikit-learn\n* umap-learn\n* numba\n* joblib\n* pot\n\nYou can install pervect from PyPI with pip:\n\n.. code:: bash\n\n    pip install pervect\n\nFor a manual install get this package:\n\n.. code:: bash\n\n    wget https://github.com/scikit-tda/pervect/archive/master.zip\n    unzip master.zip\n    rm master.zip\n    cd pervect-master\n\nInstall the requirements\n\n.. code:: bash\n\n    sudo pip install -r requirements.txt\n\nInstall the package\n\n.. code:: bash\n\n    pip install .\n\n-------\nLicense\n-------\n\nThe pervect package is 3-clause BSD licensed.\n\nWe would like to note that the pervect package makes heavy use of\nNumFOCUS sponsored projects, and would not be possible without\ntheir support of those projects, so please `consider contributing to NumFOCUS <https://www.numfocus.org/membership>`_.\n\n------------\nContributing\n------------\n\nContributions are more than welcome! There are lots of opportunities\nfor potential projects, so please get in touch if you would like to\nhelp out. Everything from code to notebooks to\nexamples and documentation are all *equally valuable* so please don't feel\nyou can't contribute. To contribute please\n`fork the project <https://github.com/scikit-tda/pervect/issues#fork-destination-box>`_\nmake your changes and\nsubmit a pull request. We will do our best to work through any issues with\nyou and get your code merged into the main branch.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/scikit-tda/pervect", "keywords": "persistence,persistent homology,diagram,vectorizer", "license": "BSD", "maintainer": "Leland McInnes", "maintainer_email": "leland.mcinnes@gmail.com", "name": "pervect", "package_url": "https://pypi.org/project/pervect/", "platform": "", "project_url": "https://pypi.org/project/pervect/", "project_urls": {"Homepage": "http://github.com/scikit-tda/pervect"}, "release_url": "https://pypi.org/project/pervect/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Persistence Diagram Vectorizer", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.org/project/pervect/0.0.1/\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/pervect.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/67279a4aece035fe283ae6531abb2311ac19b149/68747470733a2f2f62616467652e667572792e696f2f70792f706572766563742e737667\"></a>\n<a href=\"https://travis-ci.org/scikit-tda/pervect\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/scikit-tda/pervect.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/baebc61147cf4720cd5a5742532eb5ce2af467ee/68747470733a2f2f7472617669732d63692e6f72672f7363696b69742d7464612f706572766563742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/scikit-tda/pervect\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/scikit-tda/pervect/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2ebe01628db9d8e86b417e8821916f4ede06dea6/68747470733a2f2f636f6465636f762e696f2f67682f7363696b69742d7464612f706572766563742f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://opensource.org/licenses/BSD-3-Clause\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/License-BSD%203--Clause-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/110fcca60a43a8ea37b1a5bda616e639325f2f30/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d425344253230332d2d436c617573652d626c75652e737667\"></a>\n<div id=\"pervect\">\n<h2>PerVect</h2>\n<p>Vectorization of persistence diagrams and approximate Wasserstein distance. This is\nmanaged by approximating persistence diagrams with Gaussian mixture models and then\nmeasuring the Wasserstein distance between the Gaussian mixtures. As the number of\ncomponents in mixture model increases the accuracy of the approximation increases\naccordingly until, with equivalence in the limit.</p>\n<p>The library is implemented as a <a href=\"https://scikit-learn.org/stable/\" rel=\"nofollow\">Scikit-learn</a>\ntransformer \u2013 taking a list of\npersistence diagrams (preferably in birth-lifetime format) as input, and transforming\nit into a vector representation (specifically the component weights for a Gaussian\nmixture model fit to the union of all the diagrams). Distances can then be computed\nas Wassterstein distance over a ground-distance matrix provided as an attribute of the\ntransformer. Alternatively UMAP can be used to convert toa lower dimensional\nEuclidean distance representation.</p>\n<div id=\"how-to-use-pervect\">\n<h3>How to use PerVect</h3>\n<p>The pervect library inheritis from sklearn classes and can be used as an sklearn\ntransformer.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pervect</span>\n<span class=\"n\">vects</span> <span class=\"o\">=</span> <span class=\"n\">pervect</span><span class=\"o\">.</span><span class=\"n\">PersistenceVectorizer</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">fit_transform</span><span class=\"p\">(</span><span class=\"n\">diagrams</span><span class=\"p\">)</span>\n</pre>\n<p>It can also be used in standard sklearn pipelines along with other machine learning\ntools including clustering and classifiers.</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Requirements:</p>\n<ul>\n<li>Python &gt;= 3.6</li>\n<li>scikit-learn</li>\n<li>umap-learn</li>\n<li>numba</li>\n<li>joblib</li>\n<li>pot</li>\n</ul>\n<p>You can install pervect from PyPI with pip:</p>\n<pre>pip install pervect\n</pre>\n<p>For a manual install get this package:</p>\n<pre>wget https://github.com/scikit-tda/pervect/archive/master.zip\nunzip master.zip\nrm master.zip\n<span class=\"nb\">cd</span> pervect-master\n</pre>\n<p>Install the requirements</p>\n<pre>sudo pip install -r requirements.txt\n</pre>\n<p>Install the package</p>\n<pre>pip install .\n</pre>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>The pervect package is 3-clause BSD licensed.</p>\n<p>We would like to note that the pervect package makes heavy use of\nNumFOCUS sponsored projects, and would not be possible without\ntheir support of those projects, so please <a href=\"https://www.numfocus.org/membership\" rel=\"nofollow\">consider contributing to NumFOCUS</a>.</p>\n</div>\n<div id=\"contributing\">\n<h3>Contributing</h3>\n<p>Contributions are more than welcome! There are lots of opportunities\nfor potential projects, so please get in touch if you would like to\nhelp out. Everything from code to notebooks to\nexamples and documentation are all <em>equally valuable</em> so please don\u2019t feel\nyou can\u2019t contribute. To contribute please\n<a href=\"https://github.com/scikit-tda/pervect/issues#fork-destination-box\" rel=\"nofollow\">fork the project</a>\nmake your changes and\nsubmit a pull request. We will do our best to work through any issues with\nyou and get your code merged into the main branch.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6538247, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b74709824fdee226a20d40228b6e5f44", "sha256": "62869e694bb8523ba354cde6c2729b8530bab37f96140a37357b02da4ec1c8f1"}, "downloads": -1, "filename": "pervect-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b74709824fdee226a20d40228b6e5f44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8872, "upload_time": "2020-01-29T13:59:01", "upload_time_iso_8601": "2020-01-29T13:59:01.363256Z", "url": "https://files.pythonhosted.org/packages/a1/46/a4ae640542e3d56f0c029bec6e3644db9897674f7c3018fc9dd110aedd87/pervect-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "89e674c38588e7f2ecaad77a366b4979", "sha256": "47c22ad793715414cb40b1e34b550eb030bdde9abdfdc99eda818ec8c942e351"}, "downloads": -1, "filename": "pervect-0.0.2.tar.gz", "has_sig": false, "md5_digest": "89e674c38588e7f2ecaad77a366b4979", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9146, "upload_time": "2020-01-29T14:41:35", "upload_time_iso_8601": "2020-01-29T14:41:35.926473Z", "url": "https://files.pythonhosted.org/packages/28/6e/d8208d280dbe56d87308f8e3114b55dea4a63b762a60115e9164ee5e4239/pervect-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "89e674c38588e7f2ecaad77a366b4979", "sha256": "47c22ad793715414cb40b1e34b550eb030bdde9abdfdc99eda818ec8c942e351"}, "downloads": -1, "filename": "pervect-0.0.2.tar.gz", "has_sig": false, "md5_digest": "89e674c38588e7f2ecaad77a366b4979", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9146, "upload_time": "2020-01-29T14:41:35", "upload_time_iso_8601": "2020-01-29T14:41:35.926473Z", "url": "https://files.pythonhosted.org/packages/28/6e/d8208d280dbe56d87308f8e3114b55dea4a63b762a60115e9164ee5e4239/pervect-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:06 2020"}