{"info": {"author": "Jesse Shapiro", "author_email": "jesse@jesseshapiro.net", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "kodipydent\n==========\nA complete Python client for the Kodi JSON-RPC API\n\n\nWhy?\n----\nBecause JSON-RPC is one of the trickier communication schemes to write for. And if you want to code for it, then you're probably going to get into bit of a dysfunctional relationship with the documentation. \n\nWhat?\n-----\nA native-Python JSON-RPC client. Loads all the methods from your Kodi instance each time it gets instantiated, so you know you're never behind. And, it puts it in some semblance of a reasonable object structure.\n\nFuture updates will bundle a carefully-manicured static hive that will give you a better object structure at the cost of not always being completely up-to-date.\n\nHow?\n----\n\n.. code:: python\n\n    >>> from kodipydent import Kodi\n    >>> my_kodi = Kodi('192.168.1.1')\n    >>> movies = my_kodi.VideoLibrary.GetMovies()\n\nSimple as that. beekeeper makes it easy to use and easy to learn; if you don't know the name of the method you want to use, just do this:\n\n.. code:: python\n\n    >>> print(my_kodi)\n\nand you'll get a printout of all the methods available, and all the variables each one takes.\n\nInstallation\n------------\n\n.. code:: bash\n\n    $ pip install kodipydent\n\nUnder the Hood\n--------------\n\nkodipydent is driven by beekeeper, the family-friendly, object-oriented Python REST library. With beekeeper, even JSON-RPC clients are relatively simple to write. Don't believe me? Read the code. And you can check out `kodipydent/hive.json` to see what a full hive looks like.\n\nHere's the full signature of the method to create your API:\n\n.. code:: python\n\n    Kodi(hostname[, port=8080, username='kodi', password=None])\n\n\"Advanced\" Usage\n----------------\n\nkodipydent supports Kodi installations that have usernames and passwords set up. If you've created a password for web access, then simply construct your kodipydent instance as follows:\n\n.. code:: python\n\n    Kodi('localhost', username='kodi', password='myawesomepassword')\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/haikuginger/kodipydent", "keywords": "Kodi JSON-RPC JSONRPC RPC JSON client XBMC", "license": "", "maintainer": "", "maintainer_email": "", "name": "kodipydent", "package_url": "https://pypi.org/project/kodipydent/", "platform": "", "project_url": "https://pypi.org/project/kodipydent/", "project_urls": {"Homepage": "https://github.com/haikuginger/kodipydent"}, "release_url": "https://pypi.org/project/kodipydent/0.3.1/", "requires_dist": ["beekeeper (==0.9.2)"], "requires_python": "", "summary": "", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A complete Python client for the Kodi JSON-RPC API</p>\n<div id=\"why\">\n<h2>Why?</h2>\n<p>Because JSON-RPC is one of the trickier communication schemes to write for. And if you want to code for it, then you\u2019re probably going to get into bit of a dysfunctional relationship with the documentation.</p>\n</div>\n<div id=\"what\">\n<h2>What?</h2>\n<p>A native-Python JSON-RPC client. Loads all the methods from your Kodi instance each time it gets instantiated, so you know you\u2019re never behind. And, it puts it in some semblance of a reasonable object structure.</p>\n<p>Future updates will bundle a carefully-manicured static hive that will give you a better object structure at the cost of not always being completely up-to-date.</p>\n</div>\n<div id=\"how\">\n<h2>How?</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">kodipydent</span> <span class=\"kn\">import</span> <span class=\"n\">Kodi</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">my_kodi</span> <span class=\"o\">=</span> <span class=\"n\">Kodi</span><span class=\"p\">(</span><span class=\"s1\">'192.168.1.1'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">movies</span> <span class=\"o\">=</span> <span class=\"n\">my_kodi</span><span class=\"o\">.</span><span class=\"n\">VideoLibrary</span><span class=\"o\">.</span><span class=\"n\">GetMovies</span><span class=\"p\">()</span>\n</pre>\n<p>Simple as that. beekeeper makes it easy to use and easy to learn; if you don\u2019t know the name of the method you want to use, just do this:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_kodi</span><span class=\"p\">)</span>\n</pre>\n<p>and you\u2019ll get a printout of all the methods available, and all the variables each one takes.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install kodipydent\n</pre>\n</div>\n<div id=\"under-the-hood\">\n<h2>Under the Hood</h2>\n<p>kodipydent is driven by beekeeper, the family-friendly, object-oriented Python REST library. With beekeeper, even JSON-RPC clients are relatively simple to write. Don\u2019t believe me? Read the code. And you can check out <cite>kodipydent/hive.json</cite> to see what a full hive looks like.</p>\n<p>Here\u2019s the full signature of the method to create your API:</p>\n<pre><span class=\"n\">Kodi</span><span class=\"p\">(</span><span class=\"n\">hostname</span><span class=\"p\">[,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">8080</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'kodi'</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">])</span>\n</pre>\n</div>\n<div id=\"advanced-usage\">\n<h2>\u201cAdvanced\u201d Usage</h2>\n<p>kodipydent supports Kodi installations that have usernames and passwords set up. If you\u2019ve created a password for web access, then simply construct your kodipydent instance as follows:</p>\n<pre><span class=\"n\">Kodi</span><span class=\"p\">(</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'kodi'</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'myawesomepassword'</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2978082, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "e3b9288ec0add9b4c0581576c1ea598c", "sha256": "fa516428cc657f292b21906d59e0a0e643f2ec552e4c93409fc4d0eec72334bf"}, "downloads": -1, "filename": "kodipydent-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e3b9288ec0add9b4c0581576c1ea598c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5319, "upload_time": "2016-04-09T01:18:40", "upload_time_iso_8601": "2016-04-09T01:18:40.445204Z", "url": "https://files.pythonhosted.org/packages/f4/77/c63866b2142e07e9fd40ac12fea69c1d1fa2b639b4fb2902aa5568b2bccc/kodipydent-0.1-py2.py3-none-any.whl", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "38e3756f25b780e2bd97cd34bf6d12d0", "sha256": "2bb9383a0f34a0aef8de1a5995f4a815aacfdb1a9166b3e75abbf5ba6b335943"}, "downloads": -1, "filename": "kodipydent-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "38e3756f25b780e2bd97cd34bf6d12d0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5772, "upload_time": "2017-03-08T00:03:54", "upload_time_iso_8601": "2017-03-08T00:03:54.354690Z", "url": "https://files.pythonhosted.org/packages/ce/7e/14be9988809ae1b4c3fe28bad2084731213652b87bad3e4d4d09abf48f63/kodipydent-0.2-py2.py3-none-any.whl", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "2ce8a96afd19f336e5bf402e2cd26189", "sha256": "68b5582f6cd01b2360c8a3e1bf5d40b73cc4fb9c35892327504ec64a2b415d4a"}, "downloads": -1, "filename": "kodipydent-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2ce8a96afd19f336e5bf402e2cd26189", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5859, "upload_time": "2017-06-10T12:38:47", "upload_time_iso_8601": "2017-06-10T12:38:47.586394Z", "url": "https://files.pythonhosted.org/packages/66/05/010164fcff90a48ecf3740d278f49c35fc23667a5f47ab69fd5587567060/kodipydent-0.3-py3-none-any.whl", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "5c34fdfcd83a43b1fc7765b649e412a9", "sha256": "3873852a90c38d0b7349a7738d389e59d4e32e1f3d10923b7389018cf4033f90"}, "downloads": -1, "filename": "kodipydent-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5c34fdfcd83a43b1fc7765b649e412a9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5894, "upload_time": "2017-06-25T21:44:32", "upload_time_iso_8601": "2017-06-25T21:44:32.887349Z", "url": "https://files.pythonhosted.org/packages/6d/5b/cb476da8d6c1ce415bc9f1c886677421ebdc9c87e6829dc249b15504e91a/kodipydent-0.3.1-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5c34fdfcd83a43b1fc7765b649e412a9", "sha256": "3873852a90c38d0b7349a7738d389e59d4e32e1f3d10923b7389018cf4033f90"}, "downloads": -1, "filename": "kodipydent-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5c34fdfcd83a43b1fc7765b649e412a9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5894, "upload_time": "2017-06-25T21:44:32", "upload_time_iso_8601": "2017-06-25T21:44:32.887349Z", "url": "https://files.pythonhosted.org/packages/6d/5b/cb476da8d6c1ce415bc9f1c886677421ebdc9c87e6829dc249b15504e91a/kodipydent-0.3.1-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:49:08 2020"}