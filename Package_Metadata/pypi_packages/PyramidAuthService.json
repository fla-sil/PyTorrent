{"info": {"author": "Steven Locke", "author_email": "steve.m.locke@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Pyramid", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"], "description": "AuthService README\n==================\n\nGetting Started\n---------------\n\ninclude secret in pyramid application as well as any jwt auth settings if using jwt and session based auth(web auth)\n\nEXAMPLE ADDITION TO INI\n=======================\n\nsecret = seekrit\njwt.private_key = seekrit\njwt.expiration = 43200\n\n========================\n\nnext include the package in the __init__.py like so:\n\nweb auth\n========\nconfig.include('authservice.views.web_auth')\nconfig.include('authservice.web_security')\n\njwt auth\n========\nconfig.include('authservice.views.jwt_auth')\nconfig.include('authservice.jwt_security')\n\n\n==========================================\n\nYou will also want to include an initialize_auth_db.py script in your scripts directory\n\ninitialize_auth_db.ini\n======================\n\nimport os\nimport sys\nfrom authservice.scripts import initializedb\n\nfrom pyramid.paster import (\n    get_appsettings,\n    setup_logging,\n    )\n\nfrom pyramid.scripts.common import parse_vars\n\n\ndef usage(argv):\n    cmd = os.path.basename(argv[0])\n    print('usage: %s <config_uri> [var=value]\\n'\n          '(example: \"%s development.ini\")' % (cmd, cmd))\n    sys.exit(1)\n\n\ndef main(argv=sys.argv):\n    if len(argv) < 2:\n        usage(argv)\n    config_uri = argv[1]\n    options = parse_vars(argv[2:])\n    setup_logging(config_uri)\n    settings = get_appsettings(config_uri, options=options)\n    inv = initializedb.InitializeDb(settings['sqlalchemy.url'])\n    inv.initialize_db()\n\n======================================================\n\nAlso add this as an entry point in setup.py\n\n[console_scripts]\n      initialize_auth_db = myapp.scripts.initialize_auth_db:main\n\n\nThen after running python setup.py develop you can initialize the auth db like so:\n\ninitialize_auth_db development.ini\n\n0.0\n---\n\n-  Initial version", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": "pyramid jwt auth", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "PyramidAuthService", "package_url": "https://pypi.org/project/PyramidAuthService/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/PyramidAuthService/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/PyramidAuthService/0.1/", "requires_dist": null, "requires_python": null, "summary": "Pyramid AuthService", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            AuthService README<br>==================<br><br>Getting Started<br>---------------<br><br>include secret in pyramid application as well as any jwt auth settings if using jwt and session based auth(web auth)<br><br>EXAMPLE ADDITION TO INI<br>=======================<br><br>secret = seekrit<br>jwt.private_key = seekrit<br>jwt.expiration = 43200<br><br>========================<br><br>next include the package in the __init__.py like so:<br><br>web auth<br>========<br>config.include('authservice.views.web_auth')<br>config.include('authservice.web_security')<br><br>jwt auth<br>========<br>config.include('authservice.views.jwt_auth')<br>config.include('authservice.jwt_security')<br><br><br>==========================================<br><br>You will also want to include an initialize_auth_db.py script in your scripts directory<br><br>initialize_auth_db.ini<br>======================<br><br>import os<br>import sys<br>from authservice.scripts import initializedb<br><br>from pyramid.paster import (<br>    get_appsettings,<br>    setup_logging,<br>    )<br><br>from pyramid.scripts.common import parse_vars<br><br><br>def usage(argv):<br>    cmd = os.path.basename(argv[0])<br>    print('usage: %s &lt;config_uri&gt; [var=value]\\n'<br>          '(example: \"%s development.ini\")' % (cmd, cmd))<br>    sys.exit(1)<br><br><br>def main(argv=sys.argv):<br>    if len(argv) &lt; 2:<br>        usage(argv)<br>    config_uri = argv[1]<br>    options = parse_vars(argv[2:])<br>    setup_logging(config_uri)<br>    settings = get_appsettings(config_uri, options=options)<br>    inv = initializedb.InitializeDb(settings['sqlalchemy.url'])<br>    inv.initialize_db()<br><br>======================================================<br><br>Also add this as an entry point in setup.py<br><br>[console_scripts]<br>      initialize_auth_db = myapp.scripts.initialize_auth_db:main<br><br><br>Then after running python setup.py develop you can initialize the auth db like so:<br><br>initialize_auth_db development.ini<br><br>0.0<br>---<br><br>-  Initial version\n          </div>"}, "last_serial": 2388546, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "8d924c3a5fe976ffb8d3c6196a2a621d", "sha256": "8bd6cfa0ae3321781e47b34eb803e24ff12f2f839322d1f35bf4fe139ddf4fc2"}, "downloads": -1, "filename": "PyramidAuthService-0.1.tar.gz", "has_sig": false, "md5_digest": "8d924c3a5fe976ffb8d3c6196a2a621d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7690, "upload_time": "2016-10-08T18:22:20", "upload_time_iso_8601": "2016-10-08T18:22:20.225906Z", "url": "https://files.pythonhosted.org/packages/61/3b/16ea3a8ecbbf17758b9a5a07a9c49e465e04ee6300055e103ec75109f58b/PyramidAuthService-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8d924c3a5fe976ffb8d3c6196a2a621d", "sha256": "8bd6cfa0ae3321781e47b34eb803e24ff12f2f839322d1f35bf4fe139ddf4fc2"}, "downloads": -1, "filename": "PyramidAuthService-0.1.tar.gz", "has_sig": false, "md5_digest": "8d924c3a5fe976ffb8d3c6196a2a621d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7690, "upload_time": "2016-10-08T18:22:20", "upload_time_iso_8601": "2016-10-08T18:22:20.225906Z", "url": "https://files.pythonhosted.org/packages/61/3b/16ea3a8ecbbf17758b9a5a07a9c49e465e04ee6300055e103ec75109f58b/PyramidAuthService-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:32 2020"}