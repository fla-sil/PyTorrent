{"info": {"author": "Eduard S. Markelov", "author_email": "markeloveduard@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Affero General Public License v3", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# uc_tftp  \nImplementation of classes and functions for working with files via tftp.  \n\nIt is part of the Unicon project.\n\nhttps://unicon.10k.me\n\n## Usage:\n\n##### Install\n```sh\npip install --user uc-tftp\n```\n##### and use\n\n```python\nfrom uc_tftp import TFTPReceiver\n```\n\n## Examples:  \n**as iterator**  \n\n```python\nreceiver = TFTPReceiver(timeout=3)  \nfor data in receiver:  \n\tprint(data)  \n```\n\n**as function**  \n\n```python\nreceiver = TFTPReceiver(timeout=3)  \nreceiver.recvto(\"/path/to/destination\")  \n```\n\n**with filename**\n\n```python\nreceiver = TFTPReceiver(timeout=3)  \nreceiver.open()  \nwith open(receiver.filename, \"w\") as file:  \n    for block in receiver:  \n        file.write(block)  \n```\n\n## Exceptions  \nMay raise exceptions in the following cases:  \n\n**NoWRQPacket**  \n\nIf the connected client tried to perform a non-WRQ operation (data recording).  \n\n**NoIncomingConnection**  \n\nIf there were no connections in the allotted time.  \n\n**ErrorReceived**  \n\nIf error packet was received from client.  \n\n**UnexpectedOpcode**\n\nIf an unexpected opcode is received during data transfer.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dentist128/uc_tftp", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "uc-tftp", "package_url": "https://pypi.org/project/uc-tftp/", "platform": "", "project_url": "https://pypi.org/project/uc-tftp/", "project_urls": {"Homepage": "https://github.com/dentist128/uc_tftp"}, "release_url": "https://pypi.org/project/uc-tftp/0.0.1/", "requires_dist": null, "requires_python": ">=2.6, <4", "summary": "Implementation of classes and functions for working with files via tftp.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>uc_tftp</h1>\n<p>Implementation of classes and functions for working with files via tftp.</p>\n<p>It is part of the Unicon project.</p>\n<p><a href=\"https://unicon.10k.me\" rel=\"nofollow\">https://unicon.10k.me</a></p>\n<h2>Usage:</h2>\n<h5>Install</h5>\n<pre>pip install --user uc-tftp\n</pre>\n<h5>and use</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">uc_tftp</span> <span class=\"kn\">import</span> <span class=\"n\">TFTPReceiver</span>\n</pre>\n<h2>Examples:</h2>\n<p><strong>as iterator</strong></p>\n<pre><span class=\"n\">receiver</span> <span class=\"o\">=</span> <span class=\"n\">TFTPReceiver</span><span class=\"p\">(</span><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>  \n<span class=\"k\">for</span> <span class=\"n\">data</span> <span class=\"ow\">in</span> <span class=\"n\">receiver</span><span class=\"p\">:</span>  \n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>  \n</pre>\n<p><strong>as function</strong></p>\n<pre><span class=\"n\">receiver</span> <span class=\"o\">=</span> <span class=\"n\">TFTPReceiver</span><span class=\"p\">(</span><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>  \n<span class=\"n\">receiver</span><span class=\"o\">.</span><span class=\"n\">recvto</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/destination\"</span><span class=\"p\">)</span>  \n</pre>\n<p><strong>with filename</strong></p>\n<pre><span class=\"n\">receiver</span> <span class=\"o\">=</span> <span class=\"n\">TFTPReceiver</span><span class=\"p\">(</span><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>  \n<span class=\"n\">receiver</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">()</span>  \n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">receiver</span><span class=\"o\">.</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"s2\">\"w\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">file</span><span class=\"p\">:</span>  \n    <span class=\"k\">for</span> <span class=\"n\">block</span> <span class=\"ow\">in</span> <span class=\"n\">receiver</span><span class=\"p\">:</span>  \n        <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">block</span><span class=\"p\">)</span>  \n</pre>\n<h2>Exceptions</h2>\n<p>May raise exceptions in the following cases:</p>\n<p><strong>NoWRQPacket</strong></p>\n<p>If the connected client tried to perform a non-WRQ operation (data recording).</p>\n<p><strong>NoIncomingConnection</strong></p>\n<p>If there were no connections in the allotted time.</p>\n<p><strong>ErrorReceived</strong></p>\n<p>If error packet was received from client.</p>\n<p><strong>UnexpectedOpcode</strong></p>\n<p>If an unexpected opcode is received during data transfer.</p>\n\n          </div>"}, "last_serial": 7143982, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e55d9405d92349beaa8d3d08b6b23c9c", "sha256": "00afe4db18d5a5e7fda86b81f1f2adce0278aa92ae137a6fa68570ff3fe3eefa"}, "downloads": -1, "filename": "uc_tftp-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e55d9405d92349beaa8d3d08b6b23c9c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.6, <4", "size": 15934, "upload_time": "2020-05-01T10:01:57", "upload_time_iso_8601": "2020-05-01T10:01:57.959654Z", "url": "https://files.pythonhosted.org/packages/53/eb/da9a749226803b90b0689312299b884c3a38e5c26df44ebdb4ef5943cae0/uc_tftp-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "07f3b2f2a8d7641a74dec1ec635da486", "sha256": "b8495e4b748274f2162f42ad59d966403b1c583271358a5f26127b555e5e9a64"}, "downloads": -1, "filename": "uc_tftp-0.0.1.tar.gz", "has_sig": false, "md5_digest": "07f3b2f2a8d7641a74dec1ec635da486", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, <4", "size": 3638, "upload_time": "2020-05-01T10:01:59", "upload_time_iso_8601": "2020-05-01T10:01:59.994777Z", "url": "https://files.pythonhosted.org/packages/ca/f2/da6c4779d95e7e9893d5f00d253461856a91c20cfe90c93603b94b6a1c3a/uc_tftp-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e55d9405d92349beaa8d3d08b6b23c9c", "sha256": "00afe4db18d5a5e7fda86b81f1f2adce0278aa92ae137a6fa68570ff3fe3eefa"}, "downloads": -1, "filename": "uc_tftp-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e55d9405d92349beaa8d3d08b6b23c9c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.6, <4", "size": 15934, "upload_time": "2020-05-01T10:01:57", "upload_time_iso_8601": "2020-05-01T10:01:57.959654Z", "url": "https://files.pythonhosted.org/packages/53/eb/da9a749226803b90b0689312299b884c3a38e5c26df44ebdb4ef5943cae0/uc_tftp-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "07f3b2f2a8d7641a74dec1ec635da486", "sha256": "b8495e4b748274f2162f42ad59d966403b1c583271358a5f26127b555e5e9a64"}, "downloads": -1, "filename": "uc_tftp-0.0.1.tar.gz", "has_sig": false, "md5_digest": "07f3b2f2a8d7641a74dec1ec635da486", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, <4", "size": 3638, "upload_time": "2020-05-01T10:01:59", "upload_time_iso_8601": "2020-05-01T10:01:59.994777Z", "url": "https://files.pythonhosted.org/packages/ca/f2/da6c4779d95e7e9893d5f00d253461856a91c20cfe90c93603b94b6a1c3a/uc_tftp-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:42:05 2020"}