{"info": {"author": "Ryan Stevens", "author_email": "ryan.louis.stevens@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Patent Scraper\nA python package to scrape patents from 'https://patents.google.com/'. The package is made up of a single python class, scraper_class. This scraper can be used both to retreive parsed html of a single patents page or a list of patents.\n\nThe main elements returned by the scraper class are:\n\n    application_number        (str)   : application number\n    inventor_name             (json)  : inventors of patent \n    assignee_name_orig        (json)  : original assignees to patent\n    assignee_name_current     (json)  : current assignees to patent\n    pub_date                  (str)   : publication date\n    filing_date               (str)   : filing date\n    priority_date             (str)   : priority date\n    grant_date                (str)   : grant date\n    forward_cites_no_family   (json)  : forward citations that are not family-to-family cites\n    forward_cites_yes_family  (json)  : forward citations that are family-to-family cites\n    backward_cites_no_family  (json)  : backward citations that are not family-to-family cites\n    backward_cites_yes_family (json)  : backward citations that are family-to-family cites\n\n## Package Installation\nThe package is available on PyPi, and can be installed using pip:\n\n```python\npip install google_patent_scraper\n```\n\n## Main Use Cases\n\nThere are two primary ways to use this package:\n1. Scrape a single patent\n\n``` python\n# ~ Import packages ~ #\nfrom google_patent_scraper import scraper_class\n\n# ~ Initialize scraper class ~ #\nscraper=scraper_class() \n\n# ~~ Scrape patents individually ~~ #\npatent_1 = 'US2668287A'\npatent_2 = 'US266827A'\nerr_1, soup_1, url_1 = scraper.request_single_patent(patent_1)\nerr_2, soup_2, url_2 = scraper.request_single_patent(patent_2)\n\n# ~ Parse results of scrape ~ #\npatent_1_parsed = scraper.get_scraped_data(soup_1,patent_1,url_1)\npatent_2_parsed = scraper.get_scraped_data(soup_2,patetn_2,url_2)\n```\n\n2. Scrape a list of patents\n\n```python\n# ~ Import packages ~ #\nfrom google_patent_scraper import scraper_class\nimport json\n\n# ~ Initialize scraper class ~ #\nscraper=scraper_class()\n\n# ~ Add patents to list ~ #\nscraper.add_patents('US2668287A')\nscraper.add_patents('US266827A')\n\n# ~ Scrape all patents ~ #\nscraper.scrape_all_patents()\n\n# ~ Get results of scrape ~ #\npatent_1_parsed = scraper.parsed_patents['US2668287A']\npatent_2_parsed = scraper.parsed_patents['US266827A']\n\n# ~ Print inventors of patent US2668287A ~ #\nfor inventor in json.loads(patent_1_parsed['inventor_name']):\n  print('Patent inventor : {0}'.format(inventor['inventor_name']))\n```\n\n\n### Example Files\n\nI have provided two seperate example scripts for usage of this package in the /example/ folder:\n  1. Examples from this readme: readme_example\n  2. Scrape multiple patents using Python's multiprocessing package: multiprocess_example\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rls542/patent_scraper/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "google-patent-scraper", "package_url": "https://pypi.org/project/google-patent-scraper/", "platform": "", "project_url": "https://pypi.org/project/google-patent-scraper/", "project_urls": {"Homepage": "https://github.com/rls542/patent_scraper/"}, "release_url": "https://pypi.org/project/google-patent-scraper/1.0.8/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A package to scrape patents from 'https://patents.google.com/'", "version": "1.0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Patent Scraper</h1>\n<p>A python package to scrape patents from '<a href=\"https://patents.google.com/\" rel=\"nofollow\">https://patents.google.com/</a>'. The package is made up of a single python class, scraper_class. This scraper can be used both to retreive parsed html of a single patents page or a list of patents.</p>\n<p>The main elements returned by the scraper class are:</p>\n<pre><code>application_number        (str)   : application number\ninventor_name             (json)  : inventors of patent \nassignee_name_orig        (json)  : original assignees to patent\nassignee_name_current     (json)  : current assignees to patent\npub_date                  (str)   : publication date\nfiling_date               (str)   : filing date\npriority_date             (str)   : priority date\ngrant_date                (str)   : grant date\nforward_cites_no_family   (json)  : forward citations that are not family-to-family cites\nforward_cites_yes_family  (json)  : forward citations that are family-to-family cites\nbackward_cites_no_family  (json)  : backward citations that are not family-to-family cites\nbackward_cites_yes_family (json)  : backward citations that are family-to-family cites\n</code></pre>\n<h2>Package Installation</h2>\n<p>The package is available on PyPi, and can be installed using pip:</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">google_patent_scraper</span>\n</pre>\n<h2>Main Use Cases</h2>\n<p>There are two primary ways to use this package:</p>\n<ol>\n<li>Scrape a single patent</li>\n</ol>\n<pre><span class=\"c1\"># ~ Import packages ~ #</span>\n<span class=\"kn\">from</span> <span class=\"nn\">google_patent_scraper</span> <span class=\"kn\">import</span> <span class=\"n\">scraper_class</span>\n\n<span class=\"c1\"># ~ Initialize scraper class ~ #</span>\n<span class=\"n\">scraper</span><span class=\"o\">=</span><span class=\"n\">scraper_class</span><span class=\"p\">()</span> \n\n<span class=\"c1\"># ~~ Scrape patents individually ~~ #</span>\n<span class=\"n\">patent_1</span> <span class=\"o\">=</span> <span class=\"s1\">'US2668287A'</span>\n<span class=\"n\">patent_2</span> <span class=\"o\">=</span> <span class=\"s1\">'US266827A'</span>\n<span class=\"n\">err_1</span><span class=\"p\">,</span> <span class=\"n\">soup_1</span><span class=\"p\">,</span> <span class=\"n\">url_1</span> <span class=\"o\">=</span> <span class=\"n\">scraper</span><span class=\"o\">.</span><span class=\"n\">request_single_patent</span><span class=\"p\">(</span><span class=\"n\">patent_1</span><span class=\"p\">)</span>\n<span class=\"n\">err_2</span><span class=\"p\">,</span> <span class=\"n\">soup_2</span><span class=\"p\">,</span> <span class=\"n\">url_2</span> <span class=\"o\">=</span> <span class=\"n\">scraper</span><span class=\"o\">.</span><span class=\"n\">request_single_patent</span><span class=\"p\">(</span><span class=\"n\">patent_2</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># ~ Parse results of scrape ~ #</span>\n<span class=\"n\">patent_1_parsed</span> <span class=\"o\">=</span> <span class=\"n\">scraper</span><span class=\"o\">.</span><span class=\"n\">get_scraped_data</span><span class=\"p\">(</span><span class=\"n\">soup_1</span><span class=\"p\">,</span><span class=\"n\">patent_1</span><span class=\"p\">,</span><span class=\"n\">url_1</span><span class=\"p\">)</span>\n<span class=\"n\">patent_2_parsed</span> <span class=\"o\">=</span> <span class=\"n\">scraper</span><span class=\"o\">.</span><span class=\"n\">get_scraped_data</span><span class=\"p\">(</span><span class=\"n\">soup_2</span><span class=\"p\">,</span><span class=\"n\">patetn_2</span><span class=\"p\">,</span><span class=\"n\">url_2</span><span class=\"p\">)</span>\n</pre>\n<ol>\n<li>Scrape a list of patents</li>\n</ol>\n<pre><span class=\"c1\"># ~ Import packages ~ #</span>\n<span class=\"kn\">from</span> <span class=\"nn\">google_patent_scraper</span> <span class=\"kn\">import</span> <span class=\"n\">scraper_class</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"c1\"># ~ Initialize scraper class ~ #</span>\n<span class=\"n\">scraper</span><span class=\"o\">=</span><span class=\"n\">scraper_class</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># ~ Add patents to list ~ #</span>\n<span class=\"n\">scraper</span><span class=\"o\">.</span><span class=\"n\">add_patents</span><span class=\"p\">(</span><span class=\"s1\">'US2668287A'</span><span class=\"p\">)</span>\n<span class=\"n\">scraper</span><span class=\"o\">.</span><span class=\"n\">add_patents</span><span class=\"p\">(</span><span class=\"s1\">'US266827A'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># ~ Scrape all patents ~ #</span>\n<span class=\"n\">scraper</span><span class=\"o\">.</span><span class=\"n\">scrape_all_patents</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># ~ Get results of scrape ~ #</span>\n<span class=\"n\">patent_1_parsed</span> <span class=\"o\">=</span> <span class=\"n\">scraper</span><span class=\"o\">.</span><span class=\"n\">parsed_patents</span><span class=\"p\">[</span><span class=\"s1\">'US2668287A'</span><span class=\"p\">]</span>\n<span class=\"n\">patent_2_parsed</span> <span class=\"o\">=</span> <span class=\"n\">scraper</span><span class=\"o\">.</span><span class=\"n\">parsed_patents</span><span class=\"p\">[</span><span class=\"s1\">'US266827A'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># ~ Print inventors of patent US2668287A ~ #</span>\n<span class=\"k\">for</span> <span class=\"n\">inventor</span> <span class=\"ow\">in</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">patent_1_parsed</span><span class=\"p\">[</span><span class=\"s1\">'inventor_name'</span><span class=\"p\">]):</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Patent inventor : </span><span class=\"si\">{0}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">inventor</span><span class=\"p\">[</span><span class=\"s1\">'inventor_name'</span><span class=\"p\">]))</span>\n</pre>\n<h3>Example Files</h3>\n<p>I have provided two seperate example scripts for usage of this package in the /example/ folder:</p>\n<ol>\n<li>Examples from this readme: readme_example</li>\n<li>Scrape multiple patents using Python's multiprocessing package: multiprocess_example</li>\n</ol>\n\n          </div>"}, "last_serial": 7188539, "releases": {"1.0.5": [{"comment_text": "", "digests": {"md5": "ff3c511374840a29e7fbd0ae3650ece5", "sha256": "5f6189674c9416add7154438c4535b21b9fba2d03b98558fc3cf7a852f5f55a5"}, "downloads": -1, "filename": "google_patent_scraper-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "ff3c511374840a29e7fbd0ae3650ece5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5563, "upload_time": "2019-09-05T18:25:43", "upload_time_iso_8601": "2019-09-05T18:25:43.099429Z", "url": "https://files.pythonhosted.org/packages/52/42/c831a84680f08964f56d35e9f6ff214791587d5b8fe0337d3fb655526b11/google_patent_scraper-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1fdf57bff03f2671ebf0b333962b0499", "sha256": "ddc8dabe04d05cd6e144e86d242857648e2c023607d0b029bae329ea110abffd"}, "downloads": -1, "filename": "google_patent_scraper-1.0.5.tar.gz", "has_sig": false, "md5_digest": "1fdf57bff03f2671ebf0b333962b0499", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4673, "upload_time": "2019-09-05T18:25:46", "upload_time_iso_8601": "2019-09-05T18:25:46.945257Z", "url": "https://files.pythonhosted.org/packages/b7/43/f0af085129718d607eb73b2ac9fb54498d924493b80b4a985c37d72efe7c/google_patent_scraper-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "a655099cab1d8b6d72ec93435d8571d4", "sha256": "4db45a2e74cfc261b6e15d84044b4493e4bdd7f40051d8678b95cf135a2d8c10"}, "downloads": -1, "filename": "google_patent_scraper-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "a655099cab1d8b6d72ec93435d8571d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6918, "upload_time": "2020-05-07T11:48:04", "upload_time_iso_8601": "2020-05-07T11:48:04.813824Z", "url": "https://files.pythonhosted.org/packages/47/35/ba59dbf2f9bbe339f5e509ecdcc477063e140a214160662e8d4985ff1360/google_patent_scraper-1.0.6-py3-none-any.whl", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "5b249ec563bed30fe8f75184c29e7298", "sha256": "17be2be4cc65cab9464ebf0eeb2baa8f962cc83172d09df9b27be2f11edc6281"}, "downloads": -1, "filename": "google_patent_scraper-1.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "5b249ec563bed30fe8f75184c29e7298", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6919, "upload_time": "2020-05-07T11:59:37", "upload_time_iso_8601": "2020-05-07T11:59:37.805177Z", "url": "https://files.pythonhosted.org/packages/fb/3e/6e311dfac38e9113d004dd1f12e4342997d576dec29a3f29f82ab698c7cd/google_patent_scraper-1.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba2161a1b4c5760cb8b848a37d2c8fd3", "sha256": "1d81eb8b39b1e0a996dca0faa5ac19c4935d88686b47c1379d5c986f39211019"}, "downloads": -1, "filename": "google_patent_scraper-1.0.7.tar.gz", "has_sig": false, "md5_digest": "ba2161a1b4c5760cb8b848a37d2c8fd3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5010, "upload_time": "2020-05-07T11:59:38", "upload_time_iso_8601": "2020-05-07T11:59:38.941571Z", "url": "https://files.pythonhosted.org/packages/24/6c/3cd9be8123f0ded1d223af122bff1ad411292e34535d53b79c07588c478d/google_patent_scraper-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "09b02fd7dc6866cdd964eeced5397060", "sha256": "26f9813ce2bf433285bdd756b9c7dc5501e9f0210e97019e3ee2a45ec85c3b2a"}, "downloads": -1, "filename": "google_patent_scraper-1.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "09b02fd7dc6866cdd964eeced5397060", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6926, "upload_time": "2020-05-07T13:25:01", "upload_time_iso_8601": "2020-05-07T13:25:01.216370Z", "url": "https://files.pythonhosted.org/packages/47/31/552cd9979c17331be0ba66e1eb10c70a9c33d8aa323b93aef85295906708/google_patent_scraper-1.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cfb9dea37088040f61ff7b37fcee54db", "sha256": "cfe6abade27867c94a4d3abb522f76d4a7da2827942c1c548fbd10608731ea48"}, "downloads": -1, "filename": "google_patent_scraper-1.0.8.tar.gz", "has_sig": false, "md5_digest": "cfb9dea37088040f61ff7b37fcee54db", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5014, "upload_time": "2020-05-07T13:25:02", "upload_time_iso_8601": "2020-05-07T13:25:02.710846Z", "url": "https://files.pythonhosted.org/packages/41/65/b791565a7dd1488142cc159222c285cad8dd63a6c9ece4ee8586f7c28e64/google_patent_scraper-1.0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "09b02fd7dc6866cdd964eeced5397060", "sha256": "26f9813ce2bf433285bdd756b9c7dc5501e9f0210e97019e3ee2a45ec85c3b2a"}, "downloads": -1, "filename": "google_patent_scraper-1.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "09b02fd7dc6866cdd964eeced5397060", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6926, "upload_time": "2020-05-07T13:25:01", "upload_time_iso_8601": "2020-05-07T13:25:01.216370Z", "url": "https://files.pythonhosted.org/packages/47/31/552cd9979c17331be0ba66e1eb10c70a9c33d8aa323b93aef85295906708/google_patent_scraper-1.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cfb9dea37088040f61ff7b37fcee54db", "sha256": "cfe6abade27867c94a4d3abb522f76d4a7da2827942c1c548fbd10608731ea48"}, "downloads": -1, "filename": "google_patent_scraper-1.0.8.tar.gz", "has_sig": false, "md5_digest": "cfb9dea37088040f61ff7b37fcee54db", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5014, "upload_time": "2020-05-07T13:25:02", "upload_time_iso_8601": "2020-05-07T13:25:02.710846Z", "url": "https://files.pythonhosted.org/packages/41/65/b791565a7dd1488142cc159222c285cad8dd63a6c9ece4ee8586f7c28e64/google_patent_scraper-1.0.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:34 2020"}