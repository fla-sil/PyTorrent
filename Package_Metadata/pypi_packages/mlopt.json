{"info": {"author": "Johannes Petrat", "author_email": "petrat.johannes@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Build Tools"], "description": "HyperparameterOptimisation\n==========================\n\nImplementation of several black-box optimisation methods to tune\nhyperparameters of machine learning models.\n\nThe goal is to apply this to models built with Scikit-Learn,\nStatsmodels, Keras (and possibly other libraries) with an easy, unified\ninterface.\n\nAuthor: Johannes Petrat\n\nInstall\n-------\n\nThis package requires scikit-learn with version 0.19.0 or higher. If\nscikit-learn is not yet install run\n``pip install scikit-learn==0.19.0``.\n\nAfterwards install mlopt using ``pip install mlopt`` and you're ready to\ngo.\n\nFeatures\n--------\n\nAt the moment this library includes: \\* Random Search \\* A simple\nGenetic Algorithm \\* Bayesian Optimisation\n\nTODOs\n-----\n\n1. algorithms:\n\n-  Hyperopt\n-  more options for genetic algorithms\n-  grid search\n-  meta heuristics/swarm optimisation (ant colony etc)\n\n2. functionality\n\n-  cross-validation for scoring; atm only optimises over training scores\n   -> over-fitting\n-  early stopping if there is no significant improvement after x\n   iterations\n-  parallelization??\n-  add optional cross validation\n-  automatic detection if Keras, Scikit-learn, XGBoost or statsmodels\n\n3. usability\n\n-  add categorical parameters\n-  distinguish continuous, discrete and categorical parameters\n-  unified APIs\n-  docstrings\n-  better documenation\n\nAssumptions\n-----------\n\nWhen developing I assumed that this library would be applied to models\nthat are expensive to train i.e. that take a lot of computational\nresources and potentially take a long time to train. That's why I have\nput a focus on implementing as many (useful) algorithms as possible.\nThings like parallelisation and Cython implementations are not in the\nscope at the moment. There are many algorithms (including random search,\ngrid search and genetic algorithms) that do benefit from\nparallelisation, though. So I may work on that in the future.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/johannespetrat/HyperparameterOptimisation", "keywords": "optimisation machine learning hyperparameter bayesian gridsearch", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mlopt", "package_url": "https://pypi.org/project/mlopt/", "platform": "", "project_url": "https://pypi.org/project/mlopt/", "project_urls": {"Homepage": "https://github.com/johannespetrat/HyperparameterOptimisation"}, "release_url": "https://pypi.org/project/mlopt/0.0.1.dev1/", "requires_dist": null, "requires_python": "", "summary": "A library for hyperparameter optimization of ML models", "version": "0.0.1.dev1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Implementation of several black-box optimisation methods to tune\nhyperparameters of machine learning models.</p>\n<p>The goal is to apply this to models built with Scikit-Learn,\nStatsmodels, Keras (and possibly other libraries) with an easy, unified\ninterface.</p>\n<p>Author: Johannes Petrat</p>\n<div id=\"install\">\n<h2>Install</h2>\n<p>This package requires scikit-learn with version 0.19.0 or higher. If\nscikit-learn is not yet install run\n<tt>pip install <span class=\"pre\">scikit-learn==0.19.0</span></tt>.</p>\n<p>Afterwards install mlopt using <tt>pip install mlopt</tt> and you\u2019re ready to\ngo.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<p>At the moment this library includes: * Random Search * A simple\nGenetic Algorithm * Bayesian Optimisation</p>\n</div>\n<div id=\"todos\">\n<h2>TODOs</h2>\n<ol>\n<li>algorithms:</li>\n</ol>\n<ul>\n<li>Hyperopt</li>\n<li>more options for genetic algorithms</li>\n<li>grid search</li>\n<li>meta heuristics/swarm optimisation (ant colony etc)</li>\n</ul>\n<ol>\n<li>functionality</li>\n</ol>\n<ul>\n<li>cross-validation for scoring; atm only optimises over training scores\n-&gt; over-fitting</li>\n<li>early stopping if there is no significant improvement after x\niterations</li>\n<li>parallelization??</li>\n<li>add optional cross validation</li>\n<li>automatic detection if Keras, Scikit-learn, XGBoost or statsmodels</li>\n</ul>\n<ol>\n<li>usability</li>\n</ol>\n<ul>\n<li>add categorical parameters</li>\n<li>distinguish continuous, discrete and categorical parameters</li>\n<li>unified APIs</li>\n<li>docstrings</li>\n<li>better documenation</li>\n</ul>\n</div>\n<div id=\"assumptions\">\n<h2>Assumptions</h2>\n<p>When developing I assumed that this library would be applied to models\nthat are expensive to train i.e. that take a lot of computational\nresources and potentially take a long time to train. That\u2019s why I have\nput a focus on implementing as many (useful) algorithms as possible.\nThings like parallelisation and Cython implementations are not in the\nscope at the moment. There are many algorithms (including random search,\ngrid search and genetic algorithms) that do benefit from\nparallelisation, though. So I may work on that in the future.</p>\n</div>\n\n          </div>"}, "last_serial": 3290470, "releases": {"0.0.1.dev1": [{"comment_text": "", "digests": {"md5": "5e60f9901c463e5e378e59717c5cd394", "sha256": "92786029b37457337170ed2c146cda744e0b3298225b881c491ac58344af8532"}, "downloads": -1, "filename": "mlopt-0.0.1.dev1.tar.gz", "has_sig": false, "md5_digest": "5e60f9901c463e5e378e59717c5cd394", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8336, "upload_time": "2017-10-30T10:16:06", "upload_time_iso_8601": "2017-10-30T10:16:06.636907Z", "url": "https://files.pythonhosted.org/packages/dd/ce/6940aa89a8c70a4f73f8b18aeb9e73f19486df7a6da218888519af2420c4/mlopt-0.0.1.dev1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5e60f9901c463e5e378e59717c5cd394", "sha256": "92786029b37457337170ed2c146cda744e0b3298225b881c491ac58344af8532"}, "downloads": -1, "filename": "mlopt-0.0.1.dev1.tar.gz", "has_sig": false, "md5_digest": "5e60f9901c463e5e378e59717c5cd394", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8336, "upload_time": "2017-10-30T10:16:06", "upload_time_iso_8601": "2017-10-30T10:16:06.636907Z", "url": "https://files.pythonhosted.org/packages/dd/ce/6940aa89a8c70a4f73f8b18aeb9e73f19486df7a6da218888519af2420c4/mlopt-0.0.1.dev1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:26 2020"}