{"info": {"author": "Alexander Abbasov, django-split-json-widget", "author_email": "abbasovalex@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP"], "description": "django-split-json-widget\n===\n\n[![Build Status](https://travis-ci.org/abbasovalex/django-SplitJSONWidget-form.svg?branch=master)](https://travis-ci.org/abbasovalex/django-SplitJSONWidget-form)\n\nA widget that renders JSON data as separate editable inputs.\n\n## Installation\n\n```pip install django-split-json-widget```\nor\n```pip install git+https://github.com/abbasovalex/django-SplitJSONWidget-form.git```\n\n### Example \u21161\n\n#### forms.py\n\n```python\n# -*- coding: utf-8 -*-\nfrom django import forms\nfrom splitjson.widgets import SplitJSONWidget\n\n\nclass testForm(forms.Form):\n    attrs = {'class': 'special', 'size': '40'}\n    data = forms.CharField(widget=SplitJSONWidget(attrs=attrs, debug=True))\n```\n\n#### views.py\n```python\n# -*- coding: utf-8 -*-\nfrom django.shortcuts import render_to_response\nfrom django.template import RequestContext\nfrom forms import testForm\n\ndef test_dict(request):\n    json = {'a': 1,\n            'b': 2,\n            'c': 3,\n            'd': 4}\n    form = testForm(request.POST or None, initial={'data': json})\n    if form.is_valid():\n        # validate and save\n        pass\n\n    template = 'test_template.html'\n    context = RequestContext(request, {'form': form})\n    return render_to_response(template, context)\n```\n\n#### test_template.py\n```html\n<!doctype html>\n<html>\n    <head></head>\n\t<body>\n\t\tErrors: \n        {% for field, error in form.errors.items %}\n            <ul>\n            <li>{{ error }}</li>\n            </ul>\n        {% empty %}\n            no errors \n        {% endfor %}\n        <hr/>\n        List of:\n\t\t\t<form action=\"\" method=\"post\">\n\t\t\t\t{% csrf_token %}\n\t\t\t\t{{ form.as_p}}\n\t\t\t\t<input type=\"submit\" value=\"Submit\" />\n\t\t\t</form>\n\t</body>\n</html>\n```\n\n#### Result (with debug mode enabled)\n\n![simple dict](https://github.com/abbasovalex/django-SplitJSONWidget-form/blob/master/doc/sreenshots/test_dict.png?raw=true)\n\n\n### Example \u21162\n\n#### forms.py\n```python\n# -*- coding: utf-8 -*-\nfrom django import forms\nfrom splitjson.widgets import SplitJSONWidget\n\n\nclass testForm(forms.Form):\n    attrs = {'class': 'special', 'size': '40'}\n    data = forms.CharField(widget=SplitJSONWidget(attrs=attrs, debug=True))\n```\n\n#### views.py\n```python\n# -*- coding: utf-8 -*-\nfrom django.shortcuts import render_to_response\nfrom django.template import RequestContext\nfrom forms import testForm\n\ndef test_nested_dict(request):\n    json = {'a': {'aa': 1},\n            'b': [2, 2, {'q': 'qq',\n                         'w': 'ww',\n                         'z': [1, 2, 3, 4, {'five': 'number',\n                                            'six': 'number'}, 7]}],\n            'c': 3,\n            'd': {'e':'ee', 'f':'ff'},\n            'listA': [99, 98, 97, {'text': 'string'}],\n            'ListA': [{'name': 'A', 'value': 'No'},\n                      {'name': 'B', 'value': 'No'},\n                      {'name': 'C', 'value': 'Yes'}]}\n    form = testForm(request.POST or None, initial={'data': json})\n    if form.is_valid():\n        # validate and save\n        pass\n\n    template = 'test_template.html'\n    context = RequestContext(request, {'form': form})\n    return render_to_response(template, context)\n```\n\n#### test_template.py\n```html\n<!doctype html>\n<html>\n\t<head></head>\n\t<body>\n\t\tErrors: \n        {% for field, error in form.errors.items %}\n            <ul>\n            <li>{{ error }}</li>\n            </ul>\n        {% empty %}\n            no errors \n        {% endfor %}\n        <hr/>\n        List of:\n\t\t\t<form action=\"\" method=\"post\">\n\t\t\t\t{% csrf_token %}\n\t\t\t\t{{ form.as_p}}\n\t\t\t\t<input type=\"submit\" value=\"Submit\" />\n\t\t\t</form>\n\t</body>\n</html>\n```\n\n#### Result (debug mode is enabled)\n\n![test](https://github.com/abbasovalex/django-SplitJSONWidget-form/blob/master/doc/sreenshots/test_nested_dict.png?raw=true)\n\n\n\n### Example \u21163\n\n#### forms.py\n```python\n# -*- coding: utf-8 -*-\nfrom django import forms\nfrom splitjson.widgets import SplitJSONWidget\n\n\nclass testForm(forms.Form):\n    attrs = {'class': 'special', 'size': '40'}\n    data = forms.CharField(widget=SplitJSONWidget(attrs=attrs, debug=True))\n```\n\n#### views.py\n```python\n# -*- coding: utf-8 -*-\nfrom django.shortcuts import render_to_response\nfrom django.template import RequestContext\nfrom forms import testForm\n\ndef test_list(request):\n    json = ['a', 'b', 'c']\n    form = testForm(request.POST or None, initial={'data': json})\n    if form.is_valid():\n        # validate and save\n        pass\n\n    template = 'test_template.html'\n    context = RequestContext(request, {'form': form})\n    return render_to_response(template, context)\n```\n\n#### test_template.py\n```html\n<!doctype html>\n<html>\n\t<head></head>\n\t<body>\n\t\tErrors: \n        {% for field, error in form.errors.items %}\n            <ul>\n            <li>{{ error }}</li>\n            </ul>\n        {% empty %}\n            no errors \n        {% endfor %}\n        <hr/>\n        List of:\n\t\t\t<form action=\"\" method=\"post\">\n\t\t\t\t{% csrf_token %}\n\t\t\t\t{{ form.as_p}}\n\t\t\t\t<input type=\"submit\" value=\"Submit\" />\n\t\t\t</form>\n\t</body>\n</html>\n```\n\n#### Result (debug mode is enabled)\n\n![simple list](https://github.com/abbasovalex/django-SplitJSONWidget-form/blob/master/doc/sreenshots/test_list_.png?raw=true)\n\n\n### Example \u21164\n\n#### forms.py\n```python\n# -*- coding: utf-8 -*-\nfrom django import forms\nfrom splitjson.widgets import SplitJSONWidget\n\n\nclass testForm(forms.Form):\n    attrs = {'class': 'special', 'size': '40'}\n    data = forms.CharField(widget=SplitJSONWidget(attrs=attrs, debug=True))\n```\n\n#### views.py\n```python\n# -*- coding: utf-8 -*-\nfrom django.shortcuts import render_to_response\nfrom django.template import RequestContext\nfrom forms import testForm\n\ndef test_nested_list(request):\n    json = [['a', 'b', [1, 2, 3]], {'c': 'best'}, 'd']\n    form = testForm(request.POST or None, initial={'data': json})\n    if form.is_valid():\n        # validate and save\n        pass\n\n    template = 'test_template.html'\n    context = RequestContext(request, {'form': form})\n    return render_to_response(template, context)\n```\n\n#### test_template.py\n```html\n<!doctype html>\n<html>\n\t<head></head>\n\t<body>\n\t\tErrors: \n        {% for field, error in form.errors.items %}\n            <ul>\n            <li>{{ error }}</li>\n            </ul>\n        {% empty %}\n            no errors \n        {% endfor %}\n        <hr/>\n        List of:\n\t\t\t<form action=\"\" method=\"post\">\n\t\t\t\t{% csrf_token %}\n\t\t\t\t{{ form.as_p}}\n\t\t\t\t<input type=\"submit\" value=\"Submit\" />\n\t\t\t</form>\n\t</body>\n</html>\n```\n\n#### Result (debug mode is enabled)\n\n![nested list](https://github.com/abbasovalex/django-SplitJSONWidget-form/blob/master/doc/sreenshots/test_nested_list%20.png?raw=true)\n\n## Known issues\nSee https://github.com/abbasovalex/django-SplitJSONWidget-form/issues?labels=bug&page=1&state=open\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/abbasovalex/django-splitjsonwidget-form/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/abbasovalex/django-SplitJSONWidget-form", "keywords": "json django widget", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-split-json-widget", "package_url": "https://pypi.org/project/django-split-json-widget/", "platform": "any", "project_url": "https://pypi.org/project/django-split-json-widget/", "project_urls": {"Homepage": "https://github.com/abbasovalex/django-SplitJSONWidget-form"}, "release_url": "https://pypi.org/project/django-split-json-widget/1.16/", "requires_dist": null, "requires_python": "", "summary": "Provides a widget that renders JSON data as separate, editable inputs.", "version": "1.16", "yanked": false, "html_description": "<div class=\"project-description\">\n            django-split-json-widget<br>===<br><br>[![Build Status](https://travis-ci.org/abbasovalex/django-SplitJSONWidget-form.svg?branch=master)](https://travis-ci.org/abbasovalex/django-SplitJSONWidget-form)<br><br>A widget that renders JSON data as separate editable inputs.<br><br>## Installation<br><br>```pip install django-split-json-widget```<br>or<br>```pip install git+https://github.com/abbasovalex/django-SplitJSONWidget-form.git```<br><br>### Example \u21161<br><br>#### forms.py<br><br>```python<br># -*- coding: utf-8 -*-<br>from django import forms<br>from splitjson.widgets import SplitJSONWidget<br><br><br>class testForm(forms.Form):<br>    attrs = {'class': 'special', 'size': '40'}<br>    data = forms.CharField(widget=SplitJSONWidget(attrs=attrs, debug=True))<br>```<br><br>#### views.py<br>```python<br># -*- coding: utf-8 -*-<br>from django.shortcuts import render_to_response<br>from django.template import RequestContext<br>from forms import testForm<br><br>def test_dict(request):<br>    json = {'a': 1,<br>            'b': 2,<br>            'c': 3,<br>            'd': 4}<br>    form = testForm(request.POST or None, initial={'data': json})<br>    if form.is_valid():<br>        # validate and save<br>        pass<br><br>    template = 'test_template.html'<br>    context = RequestContext(request, {'form': form})<br>    return render_to_response(template, context)<br>```<br><br>#### test_template.py<br>```html<br>&lt;!doctype html&gt;<br>&lt;html&gt;<br>    &lt;head&gt;&lt;/head&gt;<br>\t&lt;body&gt;<br>\t\tErrors: <br>        {% for field, error in form.errors.items %}<br>            &lt;ul&gt;<br>            &lt;li&gt;{{ error }}&lt;/li&gt;<br>            &lt;/ul&gt;<br>        {% empty %}<br>            no errors <br>        {% endfor %}<br>        &lt;hr/&gt;<br>        List of:<br>\t\t\t&lt;form action=\"\" method=\"post\"&gt;<br>\t\t\t\t{% csrf_token %}<br>\t\t\t\t{{ form.as_p}}<br>\t\t\t\t&lt;input type=\"submit\" value=\"Submit\" /&gt;<br>\t\t\t&lt;/form&gt;<br>\t&lt;/body&gt;<br>&lt;/html&gt;<br>```<br><br>#### Result (with debug mode enabled)<br><br>![simple dict](https://github.com/abbasovalex/django-SplitJSONWidget-form/blob/master/doc/sreenshots/test_dict.png?raw=true)<br><br><br>### Example \u21162<br><br>#### forms.py<br>```python<br># -*- coding: utf-8 -*-<br>from django import forms<br>from splitjson.widgets import SplitJSONWidget<br><br><br>class testForm(forms.Form):<br>    attrs = {'class': 'special', 'size': '40'}<br>    data = forms.CharField(widget=SplitJSONWidget(attrs=attrs, debug=True))<br>```<br><br>#### views.py<br>```python<br># -*- coding: utf-8 -*-<br>from django.shortcuts import render_to_response<br>from django.template import RequestContext<br>from forms import testForm<br><br>def test_nested_dict(request):<br>    json = {'a': {'aa': 1},<br>            'b': [2, 2, {'q': 'qq',<br>                         'w': 'ww',<br>                         'z': [1, 2, 3, 4, {'five': 'number',<br>                                            'six': 'number'}, 7]}],<br>            'c': 3,<br>            'd': {'e':'ee', 'f':'ff'},<br>            'listA': [99, 98, 97, {'text': 'string'}],<br>            'ListA': [{'name': 'A', 'value': 'No'},<br>                      {'name': 'B', 'value': 'No'},<br>                      {'name': 'C', 'value': 'Yes'}]}<br>    form = testForm(request.POST or None, initial={'data': json})<br>    if form.is_valid():<br>        # validate and save<br>        pass<br><br>    template = 'test_template.html'<br>    context = RequestContext(request, {'form': form})<br>    return render_to_response(template, context)<br>```<br><br>#### test_template.py<br>```html<br>&lt;!doctype html&gt;<br>&lt;html&gt;<br>\t&lt;head&gt;&lt;/head&gt;<br>\t&lt;body&gt;<br>\t\tErrors: <br>        {% for field, error in form.errors.items %}<br>            &lt;ul&gt;<br>            &lt;li&gt;{{ error }}&lt;/li&gt;<br>            &lt;/ul&gt;<br>        {% empty %}<br>            no errors <br>        {% endfor %}<br>        &lt;hr/&gt;<br>        List of:<br>\t\t\t&lt;form action=\"\" method=\"post\"&gt;<br>\t\t\t\t{% csrf_token %}<br>\t\t\t\t{{ form.as_p}}<br>\t\t\t\t&lt;input type=\"submit\" value=\"Submit\" /&gt;<br>\t\t\t&lt;/form&gt;<br>\t&lt;/body&gt;<br>&lt;/html&gt;<br>```<br><br>#### Result (debug mode is enabled)<br><br>![test](https://github.com/abbasovalex/django-SplitJSONWidget-form/blob/master/doc/sreenshots/test_nested_dict.png?raw=true)<br><br><br><br>### Example \u21163<br><br>#### forms.py<br>```python<br># -*- coding: utf-8 -*-<br>from django import forms<br>from splitjson.widgets import SplitJSONWidget<br><br><br>class testForm(forms.Form):<br>    attrs = {'class': 'special', 'size': '40'}<br>    data = forms.CharField(widget=SplitJSONWidget(attrs=attrs, debug=True))<br>```<br><br>#### views.py<br>```python<br># -*- coding: utf-8 -*-<br>from django.shortcuts import render_to_response<br>from django.template import RequestContext<br>from forms import testForm<br><br>def test_list(request):<br>    json = ['a', 'b', 'c']<br>    form = testForm(request.POST or None, initial={'data': json})<br>    if form.is_valid():<br>        # validate and save<br>        pass<br><br>    template = 'test_template.html'<br>    context = RequestContext(request, {'form': form})<br>    return render_to_response(template, context)<br>```<br><br>#### test_template.py<br>```html<br>&lt;!doctype html&gt;<br>&lt;html&gt;<br>\t&lt;head&gt;&lt;/head&gt;<br>\t&lt;body&gt;<br>\t\tErrors: <br>        {% for field, error in form.errors.items %}<br>            &lt;ul&gt;<br>            &lt;li&gt;{{ error }}&lt;/li&gt;<br>            &lt;/ul&gt;<br>        {% empty %}<br>            no errors <br>        {% endfor %}<br>        &lt;hr/&gt;<br>        List of:<br>\t\t\t&lt;form action=\"\" method=\"post\"&gt;<br>\t\t\t\t{% csrf_token %}<br>\t\t\t\t{{ form.as_p}}<br>\t\t\t\t&lt;input type=\"submit\" value=\"Submit\" /&gt;<br>\t\t\t&lt;/form&gt;<br>\t&lt;/body&gt;<br>&lt;/html&gt;<br>```<br><br>#### Result (debug mode is enabled)<br><br>![simple list](https://github.com/abbasovalex/django-SplitJSONWidget-form/blob/master/doc/sreenshots/test_list_.png?raw=true)<br><br><br>### Example \u21164<br><br>#### forms.py<br>```python<br># -*- coding: utf-8 -*-<br>from django import forms<br>from splitjson.widgets import SplitJSONWidget<br><br><br>class testForm(forms.Form):<br>    attrs = {'class': 'special', 'size': '40'}<br>    data = forms.CharField(widget=SplitJSONWidget(attrs=attrs, debug=True))<br>```<br><br>#### views.py<br>```python<br># -*- coding: utf-8 -*-<br>from django.shortcuts import render_to_response<br>from django.template import RequestContext<br>from forms import testForm<br><br>def test_nested_list(request):<br>    json = [['a', 'b', [1, 2, 3]], {'c': 'best'}, 'd']<br>    form = testForm(request.POST or None, initial={'data': json})<br>    if form.is_valid():<br>        # validate and save<br>        pass<br><br>    template = 'test_template.html'<br>    context = RequestContext(request, {'form': form})<br>    return render_to_response(template, context)<br>```<br><br>#### test_template.py<br>```html<br>&lt;!doctype html&gt;<br>&lt;html&gt;<br>\t&lt;head&gt;&lt;/head&gt;<br>\t&lt;body&gt;<br>\t\tErrors: <br>        {% for field, error in form.errors.items %}<br>            &lt;ul&gt;<br>            &lt;li&gt;{{ error }}&lt;/li&gt;<br>            &lt;/ul&gt;<br>        {% empty %}<br>            no errors <br>        {% endfor %}<br>        &lt;hr/&gt;<br>        List of:<br>\t\t\t&lt;form action=\"\" method=\"post\"&gt;<br>\t\t\t\t{% csrf_token %}<br>\t\t\t\t{{ form.as_p}}<br>\t\t\t\t&lt;input type=\"submit\" value=\"Submit\" /&gt;<br>\t\t\t&lt;/form&gt;<br>\t&lt;/body&gt;<br>&lt;/html&gt;<br>```<br><br>#### Result (debug mode is enabled)<br><br>![nested list](https://github.com/abbasovalex/django-SplitJSONWidget-form/blob/master/doc/sreenshots/test_nested_list%20.png?raw=true)<br><br>## Known issues<br>See https://github.com/abbasovalex/django-SplitJSONWidget-form/issues?labels=bug&amp;page=1&amp;state=open<br><br><br>[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/abbasovalex/django-splitjsonwidget-form/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n          </div>"}, "last_serial": 3240521, "releases": {"1.15": [{"comment_text": "", "digests": {"md5": "3e9fac8e3aed1b19f507f6738403a205", "sha256": "1e1a936701caf8f25def49ccba7e96a6230b6ee734624a5605dd977b9810f916"}, "downloads": -1, "filename": "django-split-json-widget-1.15.tar.gz", "has_sig": false, "md5_digest": "3e9fac8e3aed1b19f507f6738403a205", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5903, "upload_time": "2015-08-27T16:50:38", "upload_time_iso_8601": "2015-08-27T16:50:38.272968Z", "url": "https://files.pythonhosted.org/packages/d7/00/1baf54dd9a23520e261ae39377b602ac81eb6127c10a168a7fc16d9b59a6/django-split-json-widget-1.15.tar.gz", "yanked": false}], "1.16": [{"comment_text": "", "digests": {"md5": "2a8c96cc579fdcbbd22e99a686e7648f", "sha256": "e6f9f7b0fdddcb8ba5ba457ca45ffd64b3381a9fa6cd98c46c9a543f3ee9cc9b"}, "downloads": -1, "filename": "django-split-json-widget-1.16.tar.gz", "has_sig": false, "md5_digest": "2a8c96cc579fdcbbd22e99a686e7648f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5912, "upload_time": "2017-10-10T20:54:30", "upload_time_iso_8601": "2017-10-10T20:54:30.036368Z", "url": "https://files.pythonhosted.org/packages/1a/43/a624427c6a90daf634919e6acb65bbcb8b3f98f87eeed87d1ee3bf9be268/django-split-json-widget-1.16.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2a8c96cc579fdcbbd22e99a686e7648f", "sha256": "e6f9f7b0fdddcb8ba5ba457ca45ffd64b3381a9fa6cd98c46c9a543f3ee9cc9b"}, "downloads": -1, "filename": "django-split-json-widget-1.16.tar.gz", "has_sig": false, "md5_digest": "2a8c96cc579fdcbbd22e99a686e7648f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5912, "upload_time": "2017-10-10T20:54:30", "upload_time_iso_8601": "2017-10-10T20:54:30.036368Z", "url": "https://files.pythonhosted.org/packages/1a/43/a624427c6a90daf634919e6acb65bbcb8b3f98f87eeed87d1ee3bf9be268/django-split-json-widget-1.16.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:02 2020"}