{"info": {"author": "Olivier Pieters", "author_email": "me@olivierpieters.be", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Text Processing :: Markup :: LaTeX"], "description": "Dynamic Number\n==============\n\nWhat is it?\n-----------\n\nDynamic Number dynamically typesets values generated in different kinds\nof scripts in LaTeX through the use of symbolic links. The aim is to\nreduce errors resulting from out-of-date numbers by directly setting\nthem in the number generating file and importing a symbolic link in the\nLaTeX source file.\n\nIt can be used to import not only numerical values into LaTeX, but even\nstrings and pieces of code are possible. The main repository is located\nin `this <https://github.com/opieters/DynamicNumber>`__ repository.\n\n**Attention** The symbolic links mentioned here are ***NOT*** related in\nany kind to the symbolic links used in UNIX systems. See example below\nto see what is meant with a symbolic link.\n\nInstallation\n------------\n\nDepending on your desires, one or more might not be applicable. All the\nsupported languages have a file in the ``languages`` folder. Currently\nonly MATLAB and Python are supported to produce Dynamic Number (dn) list\nfiles (also called symbolic link lists).\n\nLaTeX\n~~~~~\n\nCurrently the package is also available on CTAN. This is the preferred\nway of installing LaTeX packages. You can thus download it using your\nfavourite (La)TeX package manager. The instructions below are thus\nobsolete.\n\nMATLAB\n~~~~~~\n\nAdd the necessary functions to MATLAB's path.\n\n1. Clone the directory in your MATLAB folder (``Documents/MATLAB``).\n2. Now the contents should be in ``Documents/MATLAB/DynamicNumber``.\n3. Open MATLAB.\n4. Set path to include the cloned folder. The Set path can be found in\n   the File menu on older MATLAB installations or HOME, Environment in\n   newer installations.\n\nPython\n~~~~~~\n\nInstall with ``pip``: ``sudo pip install dynamicnumber``\n\nQuick start\n-----------\n\nLaTeX\n~~~~~\n\nLaTeX usage is very straightforward. Load the package with\n``\\usepackage{dynamicnumber}`` and next load a symbolic link lists with\n``\\dnreadfile{list}``. Now you can start using your dynamic variables\nwith ``\\dnget{variable}``.\n\nMore information and additional commands can be found in the\ndocumentation.\n\n**Attention!** Do not attempt to create a ``pgfkey`` with the name\n``dynamicnumber``, it will conflict with the internal workings of the\npackage.\n\nMATLAB and Python\n~~~~~~~~~~~~~~~~~\n\nCreate a symbolic link lists with the ``dn()`` command, then add\nsymbolic links with the ``add``-method.\n\nThe ``add``-method requires at least 2 arguments: the symbolic link name\nand a value (either numerical or string). The optional third can specify\na unit for the value. The symbolic link will be stored to typeset both\nnumber and unit in a nice way, with the ``units`` package\n(``\\unit{<value}{<unit>}``).\n\nExample (in Python, MATLAB code is almost identical)\n\n.. code:: python\n\n    # Some computations and sensor readout to predict temperature tomorrow:\n    temperature = 23.4\n    temp_predictions = dn('TemperaturePredictions')\n    temp_predictions.add('tomorrow',temparture,'C') # or \\\\Celcius instead of C\n\n**Note!**: If you wish to use special LaTeX commands such as\n``\\Celcius`` or ``\\metre``, your need to be careful with the use of the\nbackslash. In MATLAB you only need to add one backslash because of the\nway it is parsed, but in Python you need to add two of them! This is\nneeded because the backslash is also used for escape sequences.\n\nContributions\n-------------\n\nThe libraries are basic in a sense that they do not have a lot of\nfeatures or options. This is intentional. Users can easily adopt them to\nsuit their own needs without having to go through 100s of lines of code\nand the learning curve is very small. So the main goal is to have a\nlibrary that support many platforms, is (almost) identical on all these\nplatforms and is simple to use.\n\nBug fixes and small feature improvements are always welcome, you can use\na pull request to add must-have features or perform bug fixes.\n\nLicense\n-------\n\nSee the ``LICENSE.txt`` file.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/opieters/DynamicNumber", "keywords": "dynamic number latex typesetting reporting", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "dynamicnumber", "package_url": "https://pypi.org/project/dynamicnumber/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/dynamicnumber/", "project_urls": {"Homepage": "https://github.com/opieters/DynamicNumber"}, "release_url": "https://pypi.org/project/dynamicnumber/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "Dynamically export variables for reporting in LaTeX.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"what-is-it\">\n<h2>What is it?</h2>\n<p>Dynamic Number dynamically typesets values generated in different kinds\nof scripts in LaTeX through the use of symbolic links. The aim is to\nreduce errors resulting from out-of-date numbers by directly setting\nthem in the number generating file and importing a symbolic link in the\nLaTeX source file.</p>\n<p>It can be used to import not only numerical values into LaTeX, but even\nstrings and pieces of code are possible. The main repository is located\nin <a href=\"https://github.com/opieters/DynamicNumber\" rel=\"nofollow\">this</a> repository.</p>\n<p><strong>Attention</strong> The symbolic links mentioned here are <strong>*NOT*</strong> related in\nany kind to the symbolic links used in UNIX systems. See example below\nto see what is meant with a symbolic link.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Depending on your desires, one or more might not be applicable. All the\nsupported languages have a file in the <tt>languages</tt> folder. Currently\nonly MATLAB and Python are supported to produce Dynamic Number (dn) list\nfiles (also called symbolic link lists).</p>\n<div id=\"latex\">\n<h3>LaTeX</h3>\n<p>Currently the package is also available on CTAN. This is the preferred\nway of installing LaTeX packages. You can thus download it using your\nfavourite (La)TeX package manager. The instructions below are thus\nobsolete.</p>\n</div>\n<div id=\"matlab\">\n<h3>MATLAB</h3>\n<p>Add the necessary functions to MATLAB\u2019s path.</p>\n<ol>\n<li>Clone the directory in your MATLAB folder (<tt>Documents/MATLAB</tt>).</li>\n<li>Now the contents should be in <tt>Documents/MATLAB/DynamicNumber</tt>.</li>\n<li>Open MATLAB.</li>\n<li>Set path to include the cloned folder. The Set path can be found in\nthe File menu on older MATLAB installations or HOME, Environment in\nnewer installations.</li>\n</ol>\n</div>\n<div id=\"python\">\n<h3>Python</h3>\n<p>Install with <tt>pip</tt>: <tt>sudo pip install dynamicnumber</tt></p>\n</div>\n</div>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<div id=\"id1\">\n<h3>LaTeX</h3>\n<p>LaTeX usage is very straightforward. Load the package with\n<tt>\\usepackage{dynamicnumber}</tt> and next load a symbolic link lists with\n<tt>\\dnreadfile{list}</tt>. Now you can start using your dynamic variables\nwith <tt>\\dnget{variable}</tt>.</p>\n<p>More information and additional commands can be found in the\ndocumentation.</p>\n<p><strong>Attention!</strong> Do not attempt to create a <tt>pgfkey</tt> with the name\n<tt>dynamicnumber</tt>, it will conflict with the internal workings of the\npackage.</p>\n</div>\n<div id=\"matlab-and-python\">\n<h3>MATLAB and Python</h3>\n<p>Create a symbolic link lists with the <tt>dn()</tt> command, then add\nsymbolic links with the <tt>add</tt>-method.</p>\n<p>The <tt>add</tt>-method requires at least 2 arguments: the symbolic link name\nand a value (either numerical or string). The optional third can specify\na unit for the value. The symbolic link will be stored to typeset both\nnumber and unit in a nice way, with the <tt>units</tt> package\n(<tt><span class=\"pre\">\\unit{&lt;value}{&lt;unit&gt;}</span></tt>).</p>\n<p>Example (in Python, MATLAB code is almost identical)</p>\n<pre><span class=\"c1\"># Some computations and sensor readout to predict temperature tomorrow:</span>\n<span class=\"n\">temperature</span> <span class=\"o\">=</span> <span class=\"mf\">23.4</span>\n<span class=\"n\">temp_predictions</span> <span class=\"o\">=</span> <span class=\"n\">dn</span><span class=\"p\">(</span><span class=\"s1\">'TemperaturePredictions'</span><span class=\"p\">)</span>\n<span class=\"n\">temp_predictions</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s1\">'tomorrow'</span><span class=\"p\">,</span><span class=\"n\">temparture</span><span class=\"p\">,</span><span class=\"s1\">'C'</span><span class=\"p\">)</span> <span class=\"c1\"># or \\\\Celcius instead of C</span>\n</pre>\n<p><strong>Note!</strong>: If you wish to use special LaTeX commands such as\n<tt>\\Celcius</tt> or <tt>\\metre</tt>, your need to be careful with the use of the\nbackslash. In MATLAB you only need to add one backslash because of the\nway it is parsed, but in Python you need to add two of them! This is\nneeded because the backslash is also used for escape sequences.</p>\n</div>\n</div>\n<div id=\"contributions\">\n<h2>Contributions</h2>\n<p>The libraries are basic in a sense that they do not have a lot of\nfeatures or options. This is intentional. Users can easily adopt them to\nsuit their own needs without having to go through 100s of lines of code\nand the learning curve is very small. So the main goal is to have a\nlibrary that support many platforms, is (almost) identical on all these\nplatforms and is simple to use.</p>\n<p>Bug fixes and small feature improvements are always welcome, you can use\na pull request to add must-have features or perform bug fixes.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>See the <tt>LICENSE.txt</tt> file.</p>\n</div>\n\n          </div>"}, "last_serial": 1758064, "releases": {"0.1.1": [], "0.1.2": [{"comment_text": "", "digests": {"md5": "e21140a8bbf40856d862ab877cb1b662", "sha256": "cfcaf1d49c45d3a56a0b2223b19d23a62b7bfb9e6124064730d2dc3ca83d3cf7"}, "downloads": -1, "filename": "dynamicnumber-0.1.2-cp27-none-macosx_10_10_x86_64.whl", "has_sig": false, "md5_digest": "e21140a8bbf40856d862ab877cb1b662", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 5841, "upload_time": "2015-10-08T10:32:01", "upload_time_iso_8601": "2015-10-08T10:32:01.299689Z", "url": "https://files.pythonhosted.org/packages/8b/c6/5cf79dd9c57f38ac305bc17c48f73452e8b07852788166dcf5c7069098d0/dynamicnumber-0.1.2-cp27-none-macosx_10_10_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e40e5fb7c88ea82683f0dcbc78f80687", "sha256": "c9c053025d03dc51fb76ac0fd8e19b4c35f99194c123362377347b7d7cbaee6d"}, "downloads": -1, "filename": "dynamicnumber-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e40e5fb7c88ea82683f0dcbc78f80687", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3787, "upload_time": "2015-10-08T10:32:14", "upload_time_iso_8601": "2015-10-08T10:32:14.903766Z", "url": "https://files.pythonhosted.org/packages/0c/fa/aff2d7ef2625656ccdc5b24e37b215989b9f69d2d499bfef6628b2280aa7/dynamicnumber-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e21140a8bbf40856d862ab877cb1b662", "sha256": "cfcaf1d49c45d3a56a0b2223b19d23a62b7bfb9e6124064730d2dc3ca83d3cf7"}, "downloads": -1, "filename": "dynamicnumber-0.1.2-cp27-none-macosx_10_10_x86_64.whl", "has_sig": false, "md5_digest": "e21140a8bbf40856d862ab877cb1b662", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 5841, "upload_time": "2015-10-08T10:32:01", "upload_time_iso_8601": "2015-10-08T10:32:01.299689Z", "url": "https://files.pythonhosted.org/packages/8b/c6/5cf79dd9c57f38ac305bc17c48f73452e8b07852788166dcf5c7069098d0/dynamicnumber-0.1.2-cp27-none-macosx_10_10_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e40e5fb7c88ea82683f0dcbc78f80687", "sha256": "c9c053025d03dc51fb76ac0fd8e19b4c35f99194c123362377347b7d7cbaee6d"}, "downloads": -1, "filename": "dynamicnumber-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e40e5fb7c88ea82683f0dcbc78f80687", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3787, "upload_time": "2015-10-08T10:32:14", "upload_time_iso_8601": "2015-10-08T10:32:14.903766Z", "url": "https://files.pythonhosted.org/packages/0c/fa/aff2d7ef2625656ccdc5b24e37b215989b9f69d2d499bfef6628b2280aa7/dynamicnumber-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:43 2020"}