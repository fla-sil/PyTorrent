{"info": {"author": "Shane Hathaway", "author_email": "shane@hathawaymix.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: Repoze Public License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: System :: Monitoring"], "description": "=============\n perfmetrics\n=============\n\nThe perfmetrics package provides a simple way to add software performance\nmetrics to Python libraries and applications.  Use perfmetrics to find the\ntrue bottlenecks in a production application.\n\nThe perfmetrics package is a client of the Statsd daemon by Etsy, which\nis in turn a client of Graphite (specifically, the Carbon daemon).  Because\nthe perfmetrics package sends UDP packets to Statsd, perfmetrics adds\nno I/O delays to applications and little CPU overhead.  It can work\nequally well in threaded (synchronous) or event-driven (asynchronous)\nsoftware.\n\nComplete documentation is hosted at https://perfmetrics.readthedocs.io\n\n.. image:: https://img.shields.io/pypi/v/perfmetrics.svg\n   :target: https://pypi.org/project/perfmetrics/\n   :alt: Latest release\n\n.. image:: https://img.shields.io/pypi/pyversions/perfmetrics.svg\n   :target: https://pypi.org/project/perfmetrics/\n   :alt: Supported Python versions\n\n.. image:: https://travis-ci.org/zodb/perfmetrics.svg?branch=master\n   :target: https://travis-ci.org/zodb/perfmetrics\n   :alt: Travis CI Build Status\n\n.. image:: https://coveralls.io/repos/github/zodb/perfmetrics/badge.svg\n   :target: https://coveralls.io/github/zodb/perfmetrics\n   :alt: Code Coverage\n\n.. image:: https://readthedocs.org/projects/perfmetrics/badge/?version=latest\n   :target: https://perfmetrics.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\nUsage\n=====\n\nUse the ``@metric`` and ``@metricmethod`` decorators to wrap functions\nand methods that should send timing and call statistics to Statsd.\nAdd the decorators to any function or method that could be a bottleneck,\nincluding library functions.\n\n.. caution::\n\n   These decorators are generic and cause the actual function\n   signature to be lost, replaced with ``*args, **kwargs``. This can\n   break certain types of introspection, including `zope.interface\n   validation <https://github.com/zodb/perfmetrics/issues/15>`_. As a\n   workaround, setting the environment variable\n   ``PERFMETRICS_DISABLE_DECORATOR`` *before* importing perfmetrics or\n   code that uses it will cause ``@perfmetrics.metric``, ``@perfmetrics.metricmethod``,\n   ``@perfmetrics.Metric(...)`` and ``@perfmetrics.MetricMod(...)`` to\n   return the original function unchanged.\n\nSample::\n\n    from perfmetrics import metric\n    from perfmetrics import metricmethod\n\n    @metric\n    def myfunction():\n        \"\"\"Do something that might be expensive\"\"\"\n\n    class MyClass(object):\n    \t@metricmethod\n    \tdef mymethod(self):\n    \t    \"\"\"Do some other possibly expensive thing\"\"\"\n\nNext, tell perfmetrics how to connect to Statsd.  (Until you do, the\ndecorators have no effect.)  Ideally, either your application should read the\nStatsd URI from a configuration file at startup time, or you should set\nthe STATSD_URI environment variable.  The example below uses a\nhard-coded URI::\n\n    from perfmetrics import set_statsd_client\n    set_statsd_client('statsd://localhost:8125')\n\n    for i in xrange(1000):\n        myfunction()\n        MyClass().mymethod()\n\nIf you run that code, it will fire 2000 UDP packets at port\n8125.  However, unless you have already installed Graphite and Statsd,\nall of those packets will be ignored and dropped.  Dropping is a good thing:\nyou don't want your production application to fail or slow down just\nbecause your performance monitoring system is stopped or not working.\n\nInstall Graphite and Statsd to receive and graph the metrics.  One good way\nto install them is the `graphite_buildout example`_ at github, which\ninstalls Graphite and Statsd in a custom location without root access.\n\n.. _`graphite_buildout example`: https://github.com/hathawsh/graphite_buildout\n\nPyramid and WSGI\n================\n\nIf you have a Pyramid app, you can set the ``statsd_uri`` for each\nrequest by including perfmetrics in your configuration::\n\n    config = Configuration(...)\n    config.include('perfmetrics')\n\nAlso add a ``statsd_uri`` setting such as ``statsd://localhost:8125``.\nOnce configured, the perfmetrics tween will set up a Statsd client for\nthe duration of each request.  This is especially useful if you run\nmultiple apps in one Python interpreter and you want a different\n``statsd_uri`` for each app.\n\nSimilar functionality exists for WSGI apps.  Add the app to your Paste Deploy\npipeline::\n\n    [statsd]\n    use = egg:perfmetrics#statsd\n    statsd_uri = statsd://localhost:8125\n\n    [pipeline:main]\n    pipeline =\n        statsd\n        egg:myapp#myentrypoint\n\nThreading\n=========\n\nWhile most programs send metrics from any thread to a single global\nStatsd server, some programs need to use a different Statsd server\nfor each thread.  If you only need a global Statsd server, use the\n``set_statsd_client`` function at application startup.  If you need\nto use a different Statsd server for each thread, use the\n``statsd_client_stack`` object in each thread.  Use the\n``push``, ``pop``, and ``clear`` methods.\n\n\nGraphite Tips\n=============\n\nGraphite stores each metric as a time series with multiple\nresolutions.  The sample graphite_buildout stores 10 second resolution\nfor 48 hours, 1 hour resolution for 31 days, and 1 day resolution for 5 years.\nTo produce a coarse grained value from a fine grained value, Graphite computes\nthe mean value (average) for each time span.\n\nBecause Graphite computes mean values implicitly, the most sensible way to\ntreat counters in Graphite is as a \"hits per second\" value.  That way,\na graph can produce correct results no matter which resolution level\nit uses.\n\nTreating counters as hits per second has unfortunate consequences, however.\nIf some metric sees a 1000 hit spike in one second, then falls to zero for\nat least 9 seconds, the Graphite chart for that metric will show a spike\nof 100, not 1000, since Graphite receives metrics every 10 seconds and the\nspike looks to Graphite like 100 hits per second over a 10 second period.\n\nIf you want your graph to show 1000 hits rather than 100 hits per second,\napply the Graphite ``hitcount()`` function, using a resolution of\n10 seconds or more.  The hitcount function converts per-second\nvalues to approximate raw hit counts.  Be sure\nto provide a resolution value large enough to be represented by at least\none pixel width on the resulting graph, otherwise Graphite will compute\naverages of hit counts and produce a confusing graph.\n\nIt usually makes sense to treat null values in Graphite as zero, though\nthat is not the default; by default, Graphite draws nothing for null values.\nYou can turn on that option for each graph.\n\n\n=========\n CHANGES\n=========\n\n3.0.0 (2019-09-03)\n==================\n\n- Drop support for EOL Python 2.6, 3.2, 3.3 and 3.4.\n\n- Add support for Python 3.5, 3.6, and 3.7.\n\n- Compile the performance-sensitive parts with Cython, leading to a\n  10-30% speed improvement. See\n  https://github.com/zodb/perfmetrics/issues/17.\n\n- Make decorated functions and methods configurable at runtime, not\n  just compile time. See\n  https://github.com/zodb/perfmetrics/issues/11.\n\n- Include support for testing applications instrumented with\n  perfmetrics in ``perfmetrics.testing``. This was previously release\n  externally as ``nti.fakestatsd``. See https://github.com/zodb/perfmetrics/issues/9.\n\n- Read the ``PERFMETRICS_DISABLE_DECORATOR`` environment variable when\n  ``perfmetrics`` is imported, and if it is set, make the decorators ``@metric``,\n  ``@metricmethod``, ``@Metric(...)`` and ``@MetricMod(...)`` return\n  the function unchanged. This can be helpful for certain kinds of\n  introspection tests. See https://github.com/zodb/perfmetrics/issues/15\n\n2.0 (2013-12-10)\n================\n\n- Added the ``@MetricMod`` decorator, which changes the name of\n  metrics in a given context. For example, ``@MetricMod('xyz.%s')``\n  adds a prefix.\n\n- Removed the \"gauge suffix\" feature. It was unnecessarily confusing.\n\n- Timing metrics produced by ``@metric``, ``@metricmethod``, and\n  ``@Metric`` now have a \".t\" suffix by default to avoid naming\n  conflicts.\n\n1.0 (2012-10-09)\n================\n\n- Added 'perfmetrics.tween' and 'perfmetrics.wsgi' stats for measuring\n  request timing and counts.\n\n0.9.5 (2012-09-22)\n==================\n\n- Added an optional Pyramid tween and a similar WSGI filter app\n  that sets up the Statsd client for each request.\n\n0.9.4 (2012-09-08)\n==================\n\n- Optimized the use of reduced sample rates.\n\n0.9.3 (2012-09-08)\n==================\n\n- Support the ``STATSD_URI`` environment variable.\n\n0.9.2 (2012-09-01)\n==================\n\n- ``Metric`` can now be used as either a decorator or a context\n  manager.\n\n- Made the signature of StatsdClient more like James Socol's\n  StatsClient.\n\n0.9.1 (2012-09-01)\n==================\n\n- Fixed package metadata.\n\n0.9 (2012-08-31)\n================\n\n- Initial release.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zodb/perfmetrics", "keywords": "statsd metrics performance monitoring", "license": "BSD-derived (http://www.repoze.org/LICENSE.txt)", "maintainer": "", "maintainer_email": "", "name": "perfmetrics", "package_url": "https://pypi.org/project/perfmetrics/", "platform": "", "project_url": "https://pypi.org/project/perfmetrics/", "project_urls": {"Bug Tracker": "https://github.com/zodb/perfmetrics/issues", "Documentation": "https://perfmetrics.readthedocs.io", "Homepage": "https://github.com/zodb/perfmetrics", "Source Code": "https://github.com/zodb/perfmetrics/"}, "release_url": "https://pypi.org/project/perfmetrics/3.0.0/", "requires_dist": ["setuptools", "Sphinx (>=2.1.2) ; extra == 'docs'", "repoze.sphinx.autointerface ; extra == 'docs'", "pyhamcrest ; extra == 'docs'", "sphinx-rtd-theme ; extra == 'docs'", "zope.testrunner ; extra == 'test'", "nti.testing ; extra == 'test'", "pyhamcrest ; extra == 'test'", "pyperf ; extra == 'test'"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "summary": "Send performance metrics about Python code to Statsd", "version": "3.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"perfmetrics\">\n<h2>perfmetrics</h2>\n<p>The perfmetrics package provides a simple way to add software performance\nmetrics to Python libraries and applications.  Use perfmetrics to find the\ntrue bottlenecks in a production application.</p>\n<p>The perfmetrics package is a client of the Statsd daemon by Etsy, which\nis in turn a client of Graphite (specifically, the Carbon daemon).  Because\nthe perfmetrics package sends UDP packets to Statsd, perfmetrics adds\nno I/O delays to applications and little CPU overhead.  It can work\nequally well in threaded (synchronous) or event-driven (asynchronous)\nsoftware.</p>\n<p>Complete documentation is hosted at <a href=\"https://perfmetrics.readthedocs.io\" rel=\"nofollow\">https://perfmetrics.readthedocs.io</a></p>\n<a href=\"https://pypi.org/project/perfmetrics/\" rel=\"nofollow\"><img alt=\"Latest release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49a01bb3e0cb22b4174603d079b00a86297e4fd7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f706572666d6574726963732e737667\"></a>\n<a href=\"https://pypi.org/project/perfmetrics/\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ab808eb058a91d762293cd411b893c52b4c3837a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f706572666d6574726963732e737667\"></a>\n<a href=\"https://travis-ci.org/zodb/perfmetrics\" rel=\"nofollow\"><img alt=\"Travis CI Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bec876430f963acd66395fddf8501b5334dfc923/68747470733a2f2f7472617669732d63692e6f72672f7a6f64622f706572666d6574726963732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/zodb/perfmetrics\" rel=\"nofollow\"><img alt=\"Code Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f5cd89c142a6d16cbfe6d64449c50c3e7e80231c/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f7a6f64622f706572666d6574726963732f62616467652e737667\"></a>\n<a href=\"https://perfmetrics.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/825f058052aceccd2ea9f61f83d2d7ee56ef404e/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f706572666d6574726963732f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>Use the <tt>@metric</tt> and <tt>@metricmethod</tt> decorators to wrap functions\nand methods that should send timing and call statistics to Statsd.\nAdd the decorators to any function or method that could be a bottleneck,\nincluding library functions.</p>\n<div>\n<p>Caution!</p>\n<p>These decorators are generic and cause the actual function\nsignature to be lost, replaced with <tt>*args, **kwargs</tt>. This can\nbreak certain types of introspection, including <a href=\"https://github.com/zodb/perfmetrics/issues/15\" rel=\"nofollow\">zope.interface\nvalidation</a>. As a\nworkaround, setting the environment variable\n<tt>PERFMETRICS_DISABLE_DECORATOR</tt> <em>before</em> importing perfmetrics or\ncode that uses it will cause <tt>@perfmetrics.metric</tt>, <tt>@perfmetrics.metricmethod</tt>,\n<tt><span class=\"pre\">@perfmetrics.Metric(...)</span></tt> and <tt><span class=\"pre\">@perfmetrics.MetricMod(...)</span></tt> to\nreturn the original function unchanged.</p>\n</div>\n<p>Sample:</p>\n<pre>from perfmetrics import metric\nfrom perfmetrics import metricmethod\n\n@metric\ndef myfunction():\n    \"\"\"Do something that might be expensive\"\"\"\n\nclass MyClass(object):\n    @metricmethod\n    def mymethod(self):\n        \"\"\"Do some other possibly expensive thing\"\"\"\n</pre>\n<p>Next, tell perfmetrics how to connect to Statsd.  (Until you do, the\ndecorators have no effect.)  Ideally, either your application should read the\nStatsd URI from a configuration file at startup time, or you should set\nthe STATSD_URI environment variable.  The example below uses a\nhard-coded URI:</p>\n<pre>from perfmetrics import set_statsd_client\nset_statsd_client('statsd://localhost:8125')\n\nfor i in xrange(1000):\n    myfunction()\n    MyClass().mymethod()\n</pre>\n<p>If you run that code, it will fire 2000 UDP packets at port\n8125.  However, unless you have already installed Graphite and Statsd,\nall of those packets will be ignored and dropped.  Dropping is a good thing:\nyou don\u2019t want your production application to fail or slow down just\nbecause your performance monitoring system is stopped or not working.</p>\n<p>Install Graphite and Statsd to receive and graph the metrics.  One good way\nto install them is the <a href=\"https://github.com/hathawsh/graphite_buildout\" rel=\"nofollow\">graphite_buildout example</a> at github, which\ninstalls Graphite and Statsd in a custom location without root access.</p>\n</div>\n<div id=\"pyramid-and-wsgi\">\n<h3>Pyramid and WSGI</h3>\n<p>If you have a Pyramid app, you can set the <tt>statsd_uri</tt> for each\nrequest by including perfmetrics in your configuration:</p>\n<pre>config = Configuration(...)\nconfig.include('perfmetrics')\n</pre>\n<p>Also add a <tt>statsd_uri</tt> setting such as <tt><span class=\"pre\">statsd://localhost:8125</span></tt>.\nOnce configured, the perfmetrics tween will set up a Statsd client for\nthe duration of each request.  This is especially useful if you run\nmultiple apps in one Python interpreter and you want a different\n<tt>statsd_uri</tt> for each app.</p>\n<p>Similar functionality exists for WSGI apps.  Add the app to your Paste Deploy\npipeline:</p>\n<pre>[statsd]\nuse = egg:perfmetrics#statsd\nstatsd_uri = statsd://localhost:8125\n\n[pipeline:main]\npipeline =\n    statsd\n    egg:myapp#myentrypoint\n</pre>\n</div>\n<div id=\"threading\">\n<h3>Threading</h3>\n<p>While most programs send metrics from any thread to a single global\nStatsd server, some programs need to use a different Statsd server\nfor each thread.  If you only need a global Statsd server, use the\n<tt>set_statsd_client</tt> function at application startup.  If you need\nto use a different Statsd server for each thread, use the\n<tt>statsd_client_stack</tt> object in each thread.  Use the\n<tt>push</tt>, <tt>pop</tt>, and <tt>clear</tt> methods.</p>\n</div>\n<div id=\"graphite-tips\">\n<h3>Graphite Tips</h3>\n<p>Graphite stores each metric as a time series with multiple\nresolutions.  The sample graphite_buildout stores 10 second resolution\nfor 48 hours, 1 hour resolution for 31 days, and 1 day resolution for 5 years.\nTo produce a coarse grained value from a fine grained value, Graphite computes\nthe mean value (average) for each time span.</p>\n<p>Because Graphite computes mean values implicitly, the most sensible way to\ntreat counters in Graphite is as a \u201chits per second\u201d value.  That way,\na graph can produce correct results no matter which resolution level\nit uses.</p>\n<p>Treating counters as hits per second has unfortunate consequences, however.\nIf some metric sees a 1000 hit spike in one second, then falls to zero for\nat least 9 seconds, the Graphite chart for that metric will show a spike\nof 100, not 1000, since Graphite receives metrics every 10 seconds and the\nspike looks to Graphite like 100 hits per second over a 10 second period.</p>\n<p>If you want your graph to show 1000 hits rather than 100 hits per second,\napply the Graphite <tt>hitcount()</tt> function, using a resolution of\n10 seconds or more.  The hitcount function converts per-second\nvalues to approximate raw hit counts.  Be sure\nto provide a resolution value large enough to be represented by at least\none pixel width on the resulting graph, otherwise Graphite will compute\naverages of hit counts and produce a confusing graph.</p>\n<p>It usually makes sense to treat null values in Graphite as zero, though\nthat is not the default; by default, Graphite draws nothing for null values.\nYou can turn on that option for each graph.</p>\n</div>\n</div>\n<div id=\"changes\">\n<h2>CHANGES</h2>\n<div id=\"id1\">\n<h3>3.0.0 (2019-09-03)</h3>\n<ul>\n<li>Drop support for EOL Python 2.6, 3.2, 3.3 and 3.4.</li>\n<li>Add support for Python 3.5, 3.6, and 3.7.</li>\n<li>Compile the performance-sensitive parts with Cython, leading to a\n10-30% speed improvement. See\n<a href=\"https://github.com/zodb/perfmetrics/issues/17\" rel=\"nofollow\">https://github.com/zodb/perfmetrics/issues/17</a>.</li>\n<li>Make decorated functions and methods configurable at runtime, not\njust compile time. See\n<a href=\"https://github.com/zodb/perfmetrics/issues/11\" rel=\"nofollow\">https://github.com/zodb/perfmetrics/issues/11</a>.</li>\n<li>Include support for testing applications instrumented with\nperfmetrics in <tt>perfmetrics.testing</tt>. This was previously release\nexternally as <tt>nti.fakestatsd</tt>. See <a href=\"https://github.com/zodb/perfmetrics/issues/9\" rel=\"nofollow\">https://github.com/zodb/perfmetrics/issues/9</a>.</li>\n<li>Read the <tt>PERFMETRICS_DISABLE_DECORATOR</tt> environment variable when\n<tt>perfmetrics</tt> is imported, and if it is set, make the decorators <tt>@metric</tt>,\n<tt>@metricmethod</tt>, <tt><span class=\"pre\">@Metric(...)</span></tt> and <tt><span class=\"pre\">@MetricMod(...)</span></tt> return\nthe function unchanged. This can be helpful for certain kinds of\nintrospection tests. See <a href=\"https://github.com/zodb/perfmetrics/issues/15\" rel=\"nofollow\">https://github.com/zodb/perfmetrics/issues/15</a></li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>2.0 (2013-12-10)</h3>\n<ul>\n<li>Added the <tt>@MetricMod</tt> decorator, which changes the name of\nmetrics in a given context. For example, <tt><span class=\"pre\">@MetricMod('xyz.%s')</span></tt>\nadds a prefix.</li>\n<li>Removed the \u201cgauge suffix\u201d feature. It was unnecessarily confusing.</li>\n<li>Timing metrics produced by <tt>@metric</tt>, <tt>@metricmethod</tt>, and\n<tt>@Metric</tt> now have a \u201c.t\u201d suffix by default to avoid naming\nconflicts.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.0 (2012-10-09)</h3>\n<ul>\n<li>Added \u2018perfmetrics.tween\u2019 and \u2018perfmetrics.wsgi\u2019 stats for measuring\nrequest timing and counts.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.9.5 (2012-09-22)</h3>\n<ul>\n<li>Added an optional Pyramid tween and a similar WSGI filter app\nthat sets up the Statsd client for each request.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.9.4 (2012-09-08)</h3>\n<ul>\n<li>Optimized the use of reduced sample rates.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.9.3 (2012-09-08)</h3>\n<ul>\n<li>Support the <tt>STATSD_URI</tt> environment variable.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.9.2 (2012-09-01)</h3>\n<ul>\n<li><tt>Metric</tt> can now be used as either a decorator or a context\nmanager.</li>\n<li>Made the signature of StatsdClient more like James Socol\u2019s\nStatsClient.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.9.1 (2012-09-01)</h3>\n<ul>\n<li>Fixed package metadata.</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.9 (2012-08-31)</h3>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6131909, "releases": {"0.9": [{"comment_text": "", "digests": {"md5": "c2b017448e4e9fd106decea62dec7e2f", "sha256": "78af3e1dd7c040f62874775a43780822a797041ab21e3dd7356f5e77e9d79a76"}, "downloads": -1, "filename": "perfmetrics-0.9.tar.gz", "has_sig": false, "md5_digest": "c2b017448e4e9fd106decea62dec7e2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13928, "upload_time": "2012-09-01T09:03:13", "upload_time_iso_8601": "2012-09-01T09:03:13.788511Z", "url": "https://files.pythonhosted.org/packages/ed/f5/d1f60dab9ba4750047c4ce6e4e343cbeb591e2ffbd68a90d8c699e0dd974/perfmetrics-0.9.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "3bdfff1de494e023c4d7f6cf6cd9729f", "sha256": "a295bdf1d65ca6254f2a326ab988f47ac7a6eacf0e6dfeb7f7878c2db761760b"}, "downloads": -1, "filename": "perfmetrics-0.9.1.tar.gz", "has_sig": false, "md5_digest": "3bdfff1de494e023c4d7f6cf6cd9729f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14337, "upload_time": "2012-09-01T10:23:44", "upload_time_iso_8601": "2012-09-01T10:23:44.134713Z", "url": "https://files.pythonhosted.org/packages/97/7f/f2276dd98374e81b975c1c04c96bbad54723815b03659632ca03aa497bd6/perfmetrics-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "ca008aedc7f06f669eb270f98ea2ec8a", "sha256": "89da6631ec8cae60185ba2e58aa5f7f1e3dd0f18a612d3c33a8c49d2a0b0632a"}, "downloads": -1, "filename": "perfmetrics-0.9.2.tar.gz", "has_sig": false, "md5_digest": "ca008aedc7f06f669eb270f98ea2ec8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15164, "upload_time": "2012-09-01T22:55:41", "upload_time_iso_8601": "2012-09-01T22:55:41.148370Z", "url": "https://files.pythonhosted.org/packages/c2/6e/221fb4577f9c1baf0811e3c023a28a01217f8cae4ffba31104b04bc510f1/perfmetrics-0.9.2.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "84159c159bd35ce595f64e66546d4a80", "sha256": "8956427da6422ba236240c2ed62b8f3ebad3b25755410c08595a48ddb4c2fb57"}, "downloads": -1, "filename": "perfmetrics-0.9.3.tar.gz", "has_sig": false, "md5_digest": "84159c159bd35ce595f64e66546d4a80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12086, "upload_time": "2012-09-08T19:31:35", "upload_time_iso_8601": "2012-09-08T19:31:35.502786Z", "url": "https://files.pythonhosted.org/packages/bc/65/52eeb10c09621aec452e1724bafa4278ffc490724070bb3c7d680f4b0b9f/perfmetrics-0.9.3.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "1a7b2ec947cc22b4ff10af1c77b11e5f", "sha256": "70c8cf5030a9866167426ef15e636d046721ecbac0ab9b8cac0568e9b4713183"}, "downloads": -1, "filename": "perfmetrics-0.9.4.tar.gz", "has_sig": false, "md5_digest": "1a7b2ec947cc22b4ff10af1c77b11e5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12567, "upload_time": "2012-09-08T21:54:17", "upload_time_iso_8601": "2012-09-08T21:54:17.348066Z", "url": "https://files.pythonhosted.org/packages/09/71/96f5ad9131ccf101e27c039f50a901ed196e07ba85f0f601260346eb0090/perfmetrics-0.9.4.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "569030534d4b5f4f02c0a87877da2173", "sha256": "6be56ef4959877a0fdabd5ac0ed680918e7b16e65cf168bdb4479bbcee45c595"}, "downloads": -1, "filename": "perfmetrics-0.9.5.tar.gz", "has_sig": false, "md5_digest": "569030534d4b5f4f02c0a87877da2173", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18147, "upload_time": "2012-09-22T17:55:36", "upload_time_iso_8601": "2012-09-22T17:55:36.925301Z", "url": "https://files.pythonhosted.org/packages/06/cd/e6a93611824fc2d5d2b6326afaf412a6a417804e25f993bf4c24742a05f9/perfmetrics-0.9.5.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "52b2b220de8cdc8bda213bca3cfdf59d", "sha256": "6978ac6dddc42e5a7e216d94520507e19d30e4dcf8a26b50bf1a11603f7deb4d"}, "downloads": -1, "filename": "perfmetrics-1.0.tar.gz", "has_sig": false, "md5_digest": "52b2b220de8cdc8bda213bca3cfdf59d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17026, "upload_time": "2012-10-09T18:15:56", "upload_time_iso_8601": "2012-10-09T18:15:56.691290Z", "url": "https://files.pythonhosted.org/packages/16/e2/1734fbbd4b316027a77ff184def0880cf7008ccbc2bf5d154e021ea57ab1/perfmetrics-1.0.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "0c6b6081bba2ce5428a5d9701b759c67", "sha256": "7d8370abe78abf92480d4ae01cd2831fdd4b9b7f1fce07aa56bd246e5f3a9781"}, "downloads": -1, "filename": "perfmetrics-2.0.tar.gz", "has_sig": false, "md5_digest": "0c6b6081bba2ce5428a5d9701b759c67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17399, "upload_time": "2013-12-10T16:00:36", "upload_time_iso_8601": "2013-12-10T16:00:36.117773Z", "url": "https://files.pythonhosted.org/packages/31/8b/a61d7d41944134094681f0359c2491f061482635e7d0e40267ab83a73eb7/perfmetrics-2.0.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "0943944a39db50338ee08b52ae9ce1e5", "sha256": "a2122d38518efce7c63af6c076244a567f67791dd8d9b4694fa37b7adcaef593"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp27-cp27m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "0943944a39db50338ee08b52ae9ce1e5", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 285128, "upload_time": "2019-11-13T17:29:25", "upload_time_iso_8601": "2019-11-13T17:29:25.835295Z", "url": "https://files.pythonhosted.org/packages/d2/c1/53352476072981af735a591ebb1eae213e5df57a400c30d96f5e25573dc9/perfmetrics-3.0.0-cp27-cp27m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "acddf39d5e4393d172a7a18d264e9fc1", "sha256": "b426a832cb0d5ee89bb6793246f66e1012054937ae4fed8b390c86dc30f37030"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp27-cp27m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "acddf39d5e4393d172a7a18d264e9fc1", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 285130, "upload_time": "2019-11-13T17:29:27", "upload_time_iso_8601": "2019-11-13T17:29:27.731521Z", "url": "https://files.pythonhosted.org/packages/1c/df/7e957c3d460ed82a976c82d703dd6829b5df17a96fc66ea2107271f9b49a/perfmetrics-3.0.0-cp27-cp27m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "15864543d7b52d2ca093f87db16b4afc", "sha256": "bca0e68ad2b5800ed4d8a535cf72a83b5cc890fbdb0ee5ec9197080d124dbda5"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "15864543d7b52d2ca093f87db16b4afc", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 285099, "upload_time": "2019-11-13T17:29:29", "upload_time_iso_8601": "2019-11-13T17:29:29.746078Z", "url": "https://files.pythonhosted.org/packages/99/c4/a00c79d9cd2ac989c555a82bc6541244068378ee8b24871f7f500932c4a6/perfmetrics-3.0.0-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b1b2294bcd21fe863dbcf254eea7be6", "sha256": "04cd96e9272c02912e1fbb89669aea348084d3687caaaa0c460c020263ba7550"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp27-cp27mu-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "5b1b2294bcd21fe863dbcf254eea7be6", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 285102, "upload_time": "2019-11-13T17:29:31", "upload_time_iso_8601": "2019-11-13T17:29:31.588744Z", "url": "https://files.pythonhosted.org/packages/96/1c/45d845980a269441c7b26c2fd69d958af480813b540527f70097b10a7b6a/perfmetrics-3.0.0-cp27-cp27mu-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "505a009f8c25738563b6b6eed1bb6142", "sha256": "e8ae49e9a2fb9364f307a43f28d3b5a1f5134402f728a1b238bae43b726f4114"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "505a009f8c25738563b6b6eed1bb6142", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 135099, "upload_time": "2019-09-03T12:37:38", "upload_time_iso_8601": "2019-09-03T12:37:38.386569Z", "url": "https://files.pythonhosted.org/packages/3f/5c/c5f646ce5ef246fa524db9cb452b1c17eb0c75163a0c955ae59da7ec445e/perfmetrics-3.0.0-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b0bbb15204a9eb4391edee0fb51ec3e9", "sha256": "bd2c7dd948f44e85147fc493e1ff67a5e95d1634defa12b198556510ea0cbe7f"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp27-cp27m-win_amd64.whl", "has_sig": false, "md5_digest": "b0bbb15204a9eb4391edee0fb51ec3e9", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 141540, "upload_time": "2019-09-03T12:38:21", "upload_time_iso_8601": "2019-09-03T12:38:21.302423Z", "url": "https://files.pythonhosted.org/packages/53/53/3af29d1bce1123782a7fdfcbabd8996d4487f0e67bfe5a85fbcadeba8e10/perfmetrics-3.0.0-cp27-cp27m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "22c48e7e67e1a10370114450441b9434", "sha256": "e71c8507b477eae9e21e1967bbdf09bd6f819e4085ca7b4344a72e559fb2baa6"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "22c48e7e67e1a10370114450441b9434", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 309019, "upload_time": "2019-11-13T17:29:33", "upload_time_iso_8601": "2019-11-13T17:29:33.668544Z", "url": "https://files.pythonhosted.org/packages/ef/2c/c687fac97be12db87035dd2c6e5982232bae2dea12f0cf9c1dc0a65f8c74/perfmetrics-3.0.0-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65361efcb22c1714538fa186ffe51d65", "sha256": "674dc61c7e2b86369e2b78b3e0abf081f2c0311cf67668f58acff159b4e25334"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp35-cp35m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "65361efcb22c1714538fa186ffe51d65", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 309020, "upload_time": "2019-11-13T17:29:35", "upload_time_iso_8601": "2019-11-13T17:29:35.327625Z", "url": "https://files.pythonhosted.org/packages/ea/5d/865a818279840a83a7cfe4c662abc3c911fb4ee069ff57fd206355c72de3/perfmetrics-3.0.0-cp35-cp35m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2ced911a962c8db03a1b1fe2cdd1ebe", "sha256": "e7a50d69d5202de95230c545a2da97605df09a053d0fcf51893311cadf2244a1"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp35-cp35m-win32.whl", "has_sig": false, "md5_digest": "b2ced911a962c8db03a1b1fe2cdd1ebe", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 135989, "upload_time": "2019-09-03T12:39:10", "upload_time_iso_8601": "2019-09-03T12:39:10.763130Z", "url": "https://files.pythonhosted.org/packages/e2/fe/6a02d0f16b5141f04ab1f363c74ecf5ce0f3c7a21b7e6c29aed42ee31a08/perfmetrics-3.0.0-cp35-cp35m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "402e327de8f4cfeb6f98aed0b0156dee", "sha256": "71ec9f0badec647f86ab31da3eb4f0afb3fbd1e2bb04e5c92218ba9e3659a7a1"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp35-cp35m-win_amd64.whl", "has_sig": false, "md5_digest": "402e327de8f4cfeb6f98aed0b0156dee", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 143598, "upload_time": "2019-09-03T12:39:53", "upload_time_iso_8601": "2019-09-03T12:39:53.531498Z", "url": "https://files.pythonhosted.org/packages/84/0e/ba94a1995cacfddd20766fd976ec06e931b87ee2dd87d4e983165854862b/perfmetrics-3.0.0-cp35-cp35m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0a951c28a5230c5aff1b968a5884fcc1", "sha256": "566898930c5c1454027b6dd0d84c198f6bd0bb49c27c73f6f81d63b9decd81cd"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "0a951c28a5230c5aff1b968a5884fcc1", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 313792, "upload_time": "2019-11-13T17:29:37", "upload_time_iso_8601": "2019-11-13T17:29:37.031378Z", "url": "https://files.pythonhosted.org/packages/b2/85/e5e9be9114150fb57a36effdb2bc82f2a25ace29aa85630d9969ecbcbab4/perfmetrics-3.0.0-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "412e9229be6e86c97e3674105b373f85", "sha256": "664f861b6048b3a8916b115a571f284495aeeae8588eb2e14bf26556d14e4c11"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp36-cp36m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "412e9229be6e86c97e3674105b373f85", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 313792, "upload_time": "2019-11-13T17:29:38", "upload_time_iso_8601": "2019-11-13T17:29:38.722440Z", "url": "https://files.pythonhosted.org/packages/96/c8/b833435781c734c3e483bba8885499c6726085b86687311a4c1c3e18c525/perfmetrics-3.0.0-cp36-cp36m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cbfcb4c99bab115e99551ec346f225fa", "sha256": "859f2ee2de6461f7ec21e94d2f646a565cb4a5609acda5943ffd96b2135a70a8"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp36-cp36m-win32.whl", "has_sig": false, "md5_digest": "cbfcb4c99bab115e99551ec346f225fa", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 136476, "upload_time": "2019-09-03T12:40:42", "upload_time_iso_8601": "2019-09-03T12:40:42.257476Z", "url": "https://files.pythonhosted.org/packages/43/23/c8a8f4afcf8ecf7e9270e7cbdc55dfd8a8350d6a5144fcb5fd63e03d080a/perfmetrics-3.0.0-cp36-cp36m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b5a48721552be773b66759355b893b3", "sha256": "88f553fc3e4111fdff3f855adf03efea6e2389cf2c0628af7f4cc54c4cabec1e"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "7b5a48721552be773b66759355b893b3", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 143828, "upload_time": "2019-09-03T12:41:31", "upload_time_iso_8601": "2019-09-03T12:41:31.905840Z", "url": "https://files.pythonhosted.org/packages/11/d6/ca464e89df9493cb722e0de0495c86afa4ff0b12eac2cde2789ce3eb4097/perfmetrics-3.0.0-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59eaa799ed0832776902c03238dcd0a1", "sha256": "88aa9dd89a48ae557f1e746b82e419a321c708f8f2fac56dc5e5ba6bbc572931"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "59eaa799ed0832776902c03238dcd0a1", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 145832, "upload_time": "2019-09-03T12:28:45", "upload_time_iso_8601": "2019-09-03T12:28:45.051010Z", "url": "https://files.pythonhosted.org/packages/b7/fa/13347cbf0c8e81a60d01c6d4b58d379bf6ca078f87a4807e718889c32098/perfmetrics-3.0.0-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "10705c763883291a119d8e2cd56521c1", "sha256": "20158673920eee718260fcfa340a8c2dae83683db6f79cab8dc55af4febb3d1d"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "10705c763883291a119d8e2cd56521c1", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 313534, "upload_time": "2019-11-13T17:29:40", "upload_time_iso_8601": "2019-11-13T17:29:40.747153Z", "url": "https://files.pythonhosted.org/packages/9a/d4/67409ba58ce30e8389fe5201e65994e6cf57c904411b7ca88f4cc7d003f8/perfmetrics-3.0.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b625a40b230a8b8716e4ab4a1b86f42", "sha256": "9f8c2d0c01fdcb125ee7dfb52f4bd8b52eac661e125affe0f7b9a9509267afde"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "0b625a40b230a8b8716e4ab4a1b86f42", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 313537, "upload_time": "2019-11-13T17:29:42", "upload_time_iso_8601": "2019-11-13T17:29:42.834695Z", "url": "https://files.pythonhosted.org/packages/88/b8/5876e04822432bb5dfbff2d386edac9600946e6be4b6ff12f15353a420a7/perfmetrics-3.0.0-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7c08be96874d49f4f72e44acac243c90", "sha256": "bf916a409639ddd3d56eafe72fcd91cc88b8755b4dfe17287b1e78bc7ee41f80"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp37-cp37m-win32.whl", "has_sig": false, "md5_digest": "7c08be96874d49f4f72e44acac243c90", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 136457, "upload_time": "2019-09-03T12:42:19", "upload_time_iso_8601": "2019-09-03T12:42:19.109647Z", "url": "https://files.pythonhosted.org/packages/e8/17/b73547d4c8d4ee8b1d03dd30b29a5346864e01beb3c9c98a73e3ec5e401e/perfmetrics-3.0.0-cp37-cp37m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f3a34a0e1d9dda0ecd9a8db035032ae9", "sha256": "ab6498872ec1405bd7855f881c2c574861ee5281716e43b7319ceae3f05f7d3b"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "f3a34a0e1d9dda0ecd9a8db035032ae9", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 143958, "upload_time": "2019-09-03T12:43:02", "upload_time_iso_8601": "2019-09-03T12:43:02.158963Z", "url": "https://files.pythonhosted.org/packages/ff/9e/35ef602ffc941dfca1a09e9c8f7741e6e6645b2986aaaa1afb59895a341d/perfmetrics-3.0.0-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d4b63fb476bcb5bdd11ba0fd281333e", "sha256": "2abc28e8258b8f3f44e25cd4a2e2c5eb4f2b600e68bbc14ede4d9e6e8ddf4ee2"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp38-cp38-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "8d4b63fb476bcb5bdd11ba0fd281333e", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 352615, "upload_time": "2019-11-13T17:29:44", "upload_time_iso_8601": "2019-11-13T17:29:44.438616Z", "url": "https://files.pythonhosted.org/packages/f4/1f/8dc8d73e31d0eea00df1f2139a5fb09828fc0b8d24b9e3f25f049300a4f9/perfmetrics-3.0.0-cp38-cp38-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a072189b62a595b8383cfdb121c536ed", "sha256": "2df3c5b9b5ea4ad26030f82e54432686d6c23c7f0ada70cb41abc7f537259e48"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp38-cp38-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "a072189b62a595b8383cfdb121c536ed", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 352618, "upload_time": "2019-11-13T17:29:46", "upload_time_iso_8601": "2019-11-13T17:29:46.687513Z", "url": "https://files.pythonhosted.org/packages/d7/2a/4fbe8950b36f5c1da91f4cf9eb262c22a9c384d8bfe3d9c2747b925f108f/perfmetrics-3.0.0-cp38-cp38-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2182f9d5ae6755349e93addb149320d", "sha256": "0f0816fb47f2cd21dee01aa9b7abcff1bb0ce4d1083eecade14727d5ad8ca7c1"}, "downloads": -1, "filename": "perfmetrics-3.0.0.tar.gz", "has_sig": false, "md5_digest": "a2182f9d5ae6755349e93addb149320d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 103601, "upload_time": "2019-09-03T12:28:47", "upload_time_iso_8601": "2019-09-03T12:28:47.485239Z", "url": "https://files.pythonhosted.org/packages/64/2e/4a8fca7dd81f606d246587574236f9b8799f41ffb8aa73effc47f1aade95/perfmetrics-3.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0943944a39db50338ee08b52ae9ce1e5", "sha256": "a2122d38518efce7c63af6c076244a567f67791dd8d9b4694fa37b7adcaef593"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp27-cp27m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "0943944a39db50338ee08b52ae9ce1e5", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 285128, "upload_time": "2019-11-13T17:29:25", "upload_time_iso_8601": "2019-11-13T17:29:25.835295Z", "url": "https://files.pythonhosted.org/packages/d2/c1/53352476072981af735a591ebb1eae213e5df57a400c30d96f5e25573dc9/perfmetrics-3.0.0-cp27-cp27m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "acddf39d5e4393d172a7a18d264e9fc1", "sha256": "b426a832cb0d5ee89bb6793246f66e1012054937ae4fed8b390c86dc30f37030"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp27-cp27m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "acddf39d5e4393d172a7a18d264e9fc1", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 285130, "upload_time": "2019-11-13T17:29:27", "upload_time_iso_8601": "2019-11-13T17:29:27.731521Z", "url": "https://files.pythonhosted.org/packages/1c/df/7e957c3d460ed82a976c82d703dd6829b5df17a96fc66ea2107271f9b49a/perfmetrics-3.0.0-cp27-cp27m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "15864543d7b52d2ca093f87db16b4afc", "sha256": "bca0e68ad2b5800ed4d8a535cf72a83b5cc890fbdb0ee5ec9197080d124dbda5"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "15864543d7b52d2ca093f87db16b4afc", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 285099, "upload_time": "2019-11-13T17:29:29", "upload_time_iso_8601": "2019-11-13T17:29:29.746078Z", "url": "https://files.pythonhosted.org/packages/99/c4/a00c79d9cd2ac989c555a82bc6541244068378ee8b24871f7f500932c4a6/perfmetrics-3.0.0-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b1b2294bcd21fe863dbcf254eea7be6", "sha256": "04cd96e9272c02912e1fbb89669aea348084d3687caaaa0c460c020263ba7550"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp27-cp27mu-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "5b1b2294bcd21fe863dbcf254eea7be6", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 285102, "upload_time": "2019-11-13T17:29:31", "upload_time_iso_8601": "2019-11-13T17:29:31.588744Z", "url": "https://files.pythonhosted.org/packages/96/1c/45d845980a269441c7b26c2fd69d958af480813b540527f70097b10a7b6a/perfmetrics-3.0.0-cp27-cp27mu-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "505a009f8c25738563b6b6eed1bb6142", "sha256": "e8ae49e9a2fb9364f307a43f28d3b5a1f5134402f728a1b238bae43b726f4114"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp27-cp27m-win32.whl", "has_sig": false, "md5_digest": "505a009f8c25738563b6b6eed1bb6142", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 135099, "upload_time": "2019-09-03T12:37:38", "upload_time_iso_8601": "2019-09-03T12:37:38.386569Z", "url": "https://files.pythonhosted.org/packages/3f/5c/c5f646ce5ef246fa524db9cb452b1c17eb0c75163a0c955ae59da7ec445e/perfmetrics-3.0.0-cp27-cp27m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b0bbb15204a9eb4391edee0fb51ec3e9", "sha256": "bd2c7dd948f44e85147fc493e1ff67a5e95d1634defa12b198556510ea0cbe7f"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp27-cp27m-win_amd64.whl", "has_sig": false, "md5_digest": "b0bbb15204a9eb4391edee0fb51ec3e9", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 141540, "upload_time": "2019-09-03T12:38:21", "upload_time_iso_8601": "2019-09-03T12:38:21.302423Z", "url": "https://files.pythonhosted.org/packages/53/53/3af29d1bce1123782a7fdfcbabd8996d4487f0e67bfe5a85fbcadeba8e10/perfmetrics-3.0.0-cp27-cp27m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "22c48e7e67e1a10370114450441b9434", "sha256": "e71c8507b477eae9e21e1967bbdf09bd6f819e4085ca7b4344a72e559fb2baa6"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "22c48e7e67e1a10370114450441b9434", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 309019, "upload_time": "2019-11-13T17:29:33", "upload_time_iso_8601": "2019-11-13T17:29:33.668544Z", "url": "https://files.pythonhosted.org/packages/ef/2c/c687fac97be12db87035dd2c6e5982232bae2dea12f0cf9c1dc0a65f8c74/perfmetrics-3.0.0-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65361efcb22c1714538fa186ffe51d65", "sha256": "674dc61c7e2b86369e2b78b3e0abf081f2c0311cf67668f58acff159b4e25334"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp35-cp35m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "65361efcb22c1714538fa186ffe51d65", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 309020, "upload_time": "2019-11-13T17:29:35", "upload_time_iso_8601": "2019-11-13T17:29:35.327625Z", "url": "https://files.pythonhosted.org/packages/ea/5d/865a818279840a83a7cfe4c662abc3c911fb4ee069ff57fd206355c72de3/perfmetrics-3.0.0-cp35-cp35m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2ced911a962c8db03a1b1fe2cdd1ebe", "sha256": "e7a50d69d5202de95230c545a2da97605df09a053d0fcf51893311cadf2244a1"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp35-cp35m-win32.whl", "has_sig": false, "md5_digest": "b2ced911a962c8db03a1b1fe2cdd1ebe", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 135989, "upload_time": "2019-09-03T12:39:10", "upload_time_iso_8601": "2019-09-03T12:39:10.763130Z", "url": "https://files.pythonhosted.org/packages/e2/fe/6a02d0f16b5141f04ab1f363c74ecf5ce0f3c7a21b7e6c29aed42ee31a08/perfmetrics-3.0.0-cp35-cp35m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "402e327de8f4cfeb6f98aed0b0156dee", "sha256": "71ec9f0badec647f86ab31da3eb4f0afb3fbd1e2bb04e5c92218ba9e3659a7a1"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp35-cp35m-win_amd64.whl", "has_sig": false, "md5_digest": "402e327de8f4cfeb6f98aed0b0156dee", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 143598, "upload_time": "2019-09-03T12:39:53", "upload_time_iso_8601": "2019-09-03T12:39:53.531498Z", "url": "https://files.pythonhosted.org/packages/84/0e/ba94a1995cacfddd20766fd976ec06e931b87ee2dd87d4e983165854862b/perfmetrics-3.0.0-cp35-cp35m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0a951c28a5230c5aff1b968a5884fcc1", "sha256": "566898930c5c1454027b6dd0d84c198f6bd0bb49c27c73f6f81d63b9decd81cd"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "0a951c28a5230c5aff1b968a5884fcc1", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 313792, "upload_time": "2019-11-13T17:29:37", "upload_time_iso_8601": "2019-11-13T17:29:37.031378Z", "url": "https://files.pythonhosted.org/packages/b2/85/e5e9be9114150fb57a36effdb2bc82f2a25ace29aa85630d9969ecbcbab4/perfmetrics-3.0.0-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "412e9229be6e86c97e3674105b373f85", "sha256": "664f861b6048b3a8916b115a571f284495aeeae8588eb2e14bf26556d14e4c11"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp36-cp36m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "412e9229be6e86c97e3674105b373f85", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 313792, "upload_time": "2019-11-13T17:29:38", "upload_time_iso_8601": "2019-11-13T17:29:38.722440Z", "url": "https://files.pythonhosted.org/packages/96/c8/b833435781c734c3e483bba8885499c6726085b86687311a4c1c3e18c525/perfmetrics-3.0.0-cp36-cp36m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cbfcb4c99bab115e99551ec346f225fa", "sha256": "859f2ee2de6461f7ec21e94d2f646a565cb4a5609acda5943ffd96b2135a70a8"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp36-cp36m-win32.whl", "has_sig": false, "md5_digest": "cbfcb4c99bab115e99551ec346f225fa", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 136476, "upload_time": "2019-09-03T12:40:42", "upload_time_iso_8601": "2019-09-03T12:40:42.257476Z", "url": "https://files.pythonhosted.org/packages/43/23/c8a8f4afcf8ecf7e9270e7cbdc55dfd8a8350d6a5144fcb5fd63e03d080a/perfmetrics-3.0.0-cp36-cp36m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b5a48721552be773b66759355b893b3", "sha256": "88f553fc3e4111fdff3f855adf03efea6e2389cf2c0628af7f4cc54c4cabec1e"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "7b5a48721552be773b66759355b893b3", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 143828, "upload_time": "2019-09-03T12:41:31", "upload_time_iso_8601": "2019-09-03T12:41:31.905840Z", "url": "https://files.pythonhosted.org/packages/11/d6/ca464e89df9493cb722e0de0495c86afa4ff0b12eac2cde2789ce3eb4097/perfmetrics-3.0.0-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59eaa799ed0832776902c03238dcd0a1", "sha256": "88aa9dd89a48ae557f1e746b82e419a321c708f8f2fac56dc5e5ba6bbc572931"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "59eaa799ed0832776902c03238dcd0a1", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 145832, "upload_time": "2019-09-03T12:28:45", "upload_time_iso_8601": "2019-09-03T12:28:45.051010Z", "url": "https://files.pythonhosted.org/packages/b7/fa/13347cbf0c8e81a60d01c6d4b58d379bf6ca078f87a4807e718889c32098/perfmetrics-3.0.0-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "10705c763883291a119d8e2cd56521c1", "sha256": "20158673920eee718260fcfa340a8c2dae83683db6f79cab8dc55af4febb3d1d"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "10705c763883291a119d8e2cd56521c1", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 313534, "upload_time": "2019-11-13T17:29:40", "upload_time_iso_8601": "2019-11-13T17:29:40.747153Z", "url": "https://files.pythonhosted.org/packages/9a/d4/67409ba58ce30e8389fe5201e65994e6cf57c904411b7ca88f4cc7d003f8/perfmetrics-3.0.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b625a40b230a8b8716e4ab4a1b86f42", "sha256": "9f8c2d0c01fdcb125ee7dfb52f4bd8b52eac661e125affe0f7b9a9509267afde"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "0b625a40b230a8b8716e4ab4a1b86f42", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 313537, "upload_time": "2019-11-13T17:29:42", "upload_time_iso_8601": "2019-11-13T17:29:42.834695Z", "url": "https://files.pythonhosted.org/packages/88/b8/5876e04822432bb5dfbff2d386edac9600946e6be4b6ff12f15353a420a7/perfmetrics-3.0.0-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7c08be96874d49f4f72e44acac243c90", "sha256": "bf916a409639ddd3d56eafe72fcd91cc88b8755b4dfe17287b1e78bc7ee41f80"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp37-cp37m-win32.whl", "has_sig": false, "md5_digest": "7c08be96874d49f4f72e44acac243c90", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 136457, "upload_time": "2019-09-03T12:42:19", "upload_time_iso_8601": "2019-09-03T12:42:19.109647Z", "url": "https://files.pythonhosted.org/packages/e8/17/b73547d4c8d4ee8b1d03dd30b29a5346864e01beb3c9c98a73e3ec5e401e/perfmetrics-3.0.0-cp37-cp37m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f3a34a0e1d9dda0ecd9a8db035032ae9", "sha256": "ab6498872ec1405bd7855f881c2c574861ee5281716e43b7319ceae3f05f7d3b"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "f3a34a0e1d9dda0ecd9a8db035032ae9", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 143958, "upload_time": "2019-09-03T12:43:02", "upload_time_iso_8601": "2019-09-03T12:43:02.158963Z", "url": "https://files.pythonhosted.org/packages/ff/9e/35ef602ffc941dfca1a09e9c8f7741e6e6645b2986aaaa1afb59895a341d/perfmetrics-3.0.0-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d4b63fb476bcb5bdd11ba0fd281333e", "sha256": "2abc28e8258b8f3f44e25cd4a2e2c5eb4f2b600e68bbc14ede4d9e6e8ddf4ee2"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp38-cp38-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "8d4b63fb476bcb5bdd11ba0fd281333e", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 352615, "upload_time": "2019-11-13T17:29:44", "upload_time_iso_8601": "2019-11-13T17:29:44.438616Z", "url": "https://files.pythonhosted.org/packages/f4/1f/8dc8d73e31d0eea00df1f2139a5fb09828fc0b8d24b9e3f25f049300a4f9/perfmetrics-3.0.0-cp38-cp38-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a072189b62a595b8383cfdb121c536ed", "sha256": "2df3c5b9b5ea4ad26030f82e54432686d6c23c7f0ada70cb41abc7f537259e48"}, "downloads": -1, "filename": "perfmetrics-3.0.0-cp38-cp38-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "a072189b62a595b8383cfdb121c536ed", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 352618, "upload_time": "2019-11-13T17:29:46", "upload_time_iso_8601": "2019-11-13T17:29:46.687513Z", "url": "https://files.pythonhosted.org/packages/d7/2a/4fbe8950b36f5c1da91f4cf9eb262c22a9c384d8bfe3d9c2747b925f108f/perfmetrics-3.0.0-cp38-cp38-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2182f9d5ae6755349e93addb149320d", "sha256": "0f0816fb47f2cd21dee01aa9b7abcff1bb0ce4d1083eecade14727d5ad8ca7c1"}, "downloads": -1, "filename": "perfmetrics-3.0.0.tar.gz", "has_sig": false, "md5_digest": "a2182f9d5ae6755349e93addb149320d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 103601, "upload_time": "2019-09-03T12:28:47", "upload_time_iso_8601": "2019-09-03T12:28:47.485239Z", "url": "https://files.pythonhosted.org/packages/64/2e/4a8fca7dd81f606d246587574236f9b8799f41ffb8aa73effc47f1aade95/perfmetrics-3.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:19 2020"}