{"info": {"author": "fyrestone", "author_email": "fyrestone@outlook.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Eclipse Public License 1.0 (EPL-1.0)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries", "Topic :: Utilities"], "description": "pydevd_reload\r\n==============\r\n\r\nThis is a reload library based on pydevd_reload.py from https://github.com/fabioz/PyDev.Debugger. The original library is used in PyDev & PyCharm.\r\n\r\n\r\nInstallation\r\n--------------\r\n\r\nIf you don't have much time, just perform\r\n\r\n `$ pip install pydevd_reload`\r\n\r\nwhich will install the module(without tests) on your system.\r\n\r\nAlso, you can just copy & paste the pydevd_reload.py which require no third-party dependency.\r\n\r\n\r\nUsage\r\n--------------\r\n\r\nJust import pydevd_reload and use pydevd_reload.xreload as the reload built-in function.\r\n\r\n.. code-block:: python\r\n\r\n    import pydevd_reload\r\n    pydevd_reload.xreload(module_instance)\r\n\r\nUpdate code by default\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nA running python program consists of code logic and corresponding data. Code logic is the logic of what the program perform. Corresponding data is the environment of logic running.\r\n\r\n- A program may contain modules, classes and functions.\r\n- A module may contain classes and functions.\r\n- A class may contain functions.\r\n\r\nSo, function is the basic logic structure of a program. The code logic hides in the high-level function object, reloading is based on replacing the code object of function object. The running environment may change, which means it's probably dangerous to manipulate logic relevant data, so pydevd_reload provide custom hooks which allow data updates in demands.\r\n\r\n1. pydevd_reload don't recreate the old namespace from new classes. Rather, it keeps the existing namespace, load a new version of it and update only some of the things pydevd_reload can inplace. That way, pydevd_reload don't break things such as singletons or end up with a second representation of the same class in memory.\r\n\r\n2. If pydevd_reload find it to be a __metaclass__, then try to update it as a regular class.\r\n\r\n3. pydevd_reload don't remove old attributes (and leave them lying around even if they're no longer used).\r\n\r\n4. Reload hooks were changed\r\n\r\nThese changes make it more stable, especially in the common case (where in a debug session only the\r\ncontents of a function are changed), besides providing flexibility for users that want to extend\r\non it.\r\n\r\nUpdate data by custom hooks\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\npydevd_reload reloads code objects in a module by default, and provides ``__xreload_old_new__`` and ``__xreload_after_reload_update__`` custom hooks which allow user to update data in a module. The hook functions can also be hot updated in a reload.\r\n\r\n1. To participate in the change of some attribute:\r\n\r\n    In a module:\r\n\r\n    .. code-block:: python\r\n\r\n        __xreload_old_new__(namespace, name, old, new):\r\n            pass\r\n\r\n    in a class:\r\n\r\n    .. code-block:: python\r\n\r\n        @classmethod\r\n        def __xreload_old_new__(cls, name, old, new):\r\n            pass\r\n\r\n    A class or module may include a method called '__xreload_old_new__' which is called when pydevd_reload is\r\n    unable to reload a given attribute.\r\n\r\n2. To do something after the whole reload is finished:\r\n\r\n    In a module:\r\n\r\n    .. code-block:: python\r\n\r\n        def __xreload_after_reload_update__(old_namespace, new_namespace):\r\n            pass\r\n\r\n    In a class:\r\n\r\n    .. code-block:: python\r\n\r\n        @classmethod\r\n        def __xreload_after_reload_update__(cls, old_namespace, new_namespace):\r\n            pass\r\n\r\n    A class or module may include a method called '__xreload_after_reload_update__' which is called\r\n    after the reload finishes.\r\n\r\nImportant: when providing a hook, always use the namespace or cls provided and not anything in the global\r\nnamespace, as the global namespace are only temporarily created during the reload and may not reflect the\r\nactual application state (while the cls and namespace passed are).\r\n\r\nImprovements\r\n--------------\r\n\r\nThis standalone pydevd_reload library has following improvements than original pydevd_reload.py:\r\n\r\n- Removed pydevd dependency.\r\n\r\n- Removed limitation that functions with decorators cannot be handled. *\r\n\r\n- Added support to update function closure. *\r\n\r\n- Added support to update callable object. *\r\n\r\n- Added support to update function annotation.\r\n\r\n- Added code object name check to avoid update monkey patched code. *\r\n\r\n- Refined reload hooks. (eg, __xreload_old_new__ and __xreload_after_reload_update__)\r\n\r\n- Fixed __file__ attribute in namespace so they will be updated.\r\n\r\n- Fixed compiled python file support.\r\n\r\n- Fixed reload failed when python code compiled from different paths.\r\n\r\nLimitations\r\n--------------\r\n\r\n- Attributes/constants are added, but not changed (so singletons and the application state is not\r\n  broken -- use provided hooks to workaround it).\r\n\r\n- Code using metaclasses may not always work.\r\n\r\n- Renamings are not handled correctly.\r\n\r\n- Dependent modules are not reloaded.\r\n\r\n- New __slots__ can't be added to existing classes.\r\n\r\nTesting\r\n--------------\r\nIf you have the source code you can run the tests with\r\n\r\n `$ python pydevd_reload/tests/test_pydevd_reload.py`\r\n\r\n\r\nRepository\r\n--------------\r\n\r\nThe project is hosted on GitHub. You can look at the source here:\r\n\r\n https://github.com/fyrestone/pydevd_reload\r\n\r\n\r\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fyrestone/pydevd_reload", "keywords": "reload generic utility", "license": "Eclipse Public License", "maintainer": "", "maintainer_email": "", "name": "pydevd-reload", "package_url": "https://pypi.org/project/pydevd-reload/", "platform": "All", "project_url": "https://pypi.org/project/pydevd-reload/", "project_urls": {"Homepage": "https://github.com/fyrestone/pydevd_reload"}, "release_url": "https://pypi.org/project/pydevd-reload/1.2/", "requires_dist": null, "requires_python": "", "summary": "An enhanced reload module from PyDev", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a reload library based on pydevd_reload.py from <a href=\"https://github.com/fabioz/PyDev.Debugger\" rel=\"nofollow\">https://github.com/fabioz/PyDev.Debugger</a>. The original library is used in PyDev &amp; PyCharm.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>If you don\u2019t have much time, just perform</p>\n<blockquote>\n<cite>$ pip install pydevd_reload</cite></blockquote>\n<p>which will install the module(without tests) on your system.</p>\n<p>Also, you can just copy &amp; paste the pydevd_reload.py which require no third-party dependency.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Just import pydevd_reload and use pydevd_reload.xreload as the reload built-in function.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pydevd_reload</span>\n<span class=\"n\">pydevd_reload</span><span class=\"o\">.</span><span class=\"n\">xreload</span><span class=\"p\">(</span><span class=\"n\">module_instance</span><span class=\"p\">)</span>\n</pre>\n<div id=\"update-code-by-default\">\n<h3>Update code by default</h3>\n<p>A running python program consists of code logic and corresponding data. Code logic is the logic of what the program perform. Corresponding data is the environment of logic running.</p>\n<ul>\n<li>A program may contain modules, classes and functions.</li>\n<li>A module may contain classes and functions.</li>\n<li>A class may contain functions.</li>\n</ul>\n<p>So, function is the basic logic structure of a program. The code logic hides in the high-level function object, reloading is based on replacing the code object of function object. The running environment may change, which means it\u2019s probably dangerous to manipulate logic relevant data, so pydevd_reload provide custom hooks which allow data updates in demands.</p>\n<ol>\n<li>pydevd_reload don\u2019t recreate the old namespace from new classes. Rather, it keeps the existing namespace, load a new version of it and update only some of the things pydevd_reload can inplace. That way, pydevd_reload don\u2019t break things such as singletons or end up with a second representation of the same class in memory.</li>\n<li>If pydevd_reload find it to be a __metaclass__, then try to update it as a regular class.</li>\n<li>pydevd_reload don\u2019t remove old attributes (and leave them lying around even if they\u2019re no longer used).</li>\n<li>Reload hooks were changed</li>\n</ol>\n<p>These changes make it more stable, especially in the common case (where in a debug session only the\ncontents of a function are changed), besides providing flexibility for users that want to extend\non it.</p>\n</div>\n<div id=\"update-data-by-custom-hooks\">\n<h3>Update data by custom hooks</h3>\n<p>pydevd_reload reloads code objects in a module by default, and provides <tt>__xreload_old_new__</tt> and <tt>__xreload_after_reload_update__</tt> custom hooks which allow user to update data in a module. The hook functions can also be hot updated in a reload.</p>\n<ol>\n<li><p>To participate in the change of some attribute:</p>\n<blockquote>\n<p>In a module:</p>\n<pre><span class=\"n\">__xreload_old_new__</span><span class=\"p\">(</span><span class=\"n\">namespace</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">old</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p>in a class:</p>\n<pre><span class=\"nd\">@classmethod</span>\n<span class=\"k\">def</span> <span class=\"nf\">__xreload_old_new__</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">old</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p>A class or module may include a method called \u2018__xreload_old_new__\u2019 which is called when pydevd_reload is\nunable to reload a given attribute.</p>\n</blockquote>\n</li>\n<li><p>To do something after the whole reload is finished:</p>\n<blockquote>\n<p>In a module:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">__xreload_after_reload_update__</span><span class=\"p\">(</span><span class=\"n\">old_namespace</span><span class=\"p\">,</span> <span class=\"n\">new_namespace</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p>In a class:</p>\n<pre><span class=\"nd\">@classmethod</span>\n<span class=\"k\">def</span> <span class=\"nf\">__xreload_after_reload_update__</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">old_namespace</span><span class=\"p\">,</span> <span class=\"n\">new_namespace</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p>A class or module may include a method called \u2018__xreload_after_reload_update__\u2019 which is called\nafter the reload finishes.</p>\n</blockquote>\n</li>\n</ol>\n<p>Important: when providing a hook, always use the namespace or cls provided and not anything in the global\nnamespace, as the global namespace are only temporarily created during the reload and may not reflect the\nactual application state (while the cls and namespace passed are).</p>\n</div>\n</div>\n<div id=\"improvements\">\n<h2>Improvements</h2>\n<p>This standalone pydevd_reload library has following improvements than original pydevd_reload.py:</p>\n<ul>\n<li>Removed pydevd dependency.</li>\n<li>Removed limitation that functions with decorators cannot be handled. *</li>\n<li>Added support to update function closure. *</li>\n<li>Added support to update callable object. *</li>\n<li>Added support to update function annotation.</li>\n<li>Added code object name check to avoid update monkey patched code. *</li>\n<li>Refined reload hooks. (eg, __xreload_old_new__ and __xreload_after_reload_update__)</li>\n<li>Fixed __file__ attribute in namespace so they will be updated.</li>\n<li>Fixed compiled python file support.</li>\n<li>Fixed reload failed when python code compiled from different paths.</li>\n</ul>\n</div>\n<div id=\"limitations\">\n<h2>Limitations</h2>\n<ul>\n<li>Attributes/constants are added, but not changed (so singletons and the application state is not\nbroken \u2013 use provided hooks to workaround it).</li>\n<li>Code using metaclasses may not always work.</li>\n<li>Renamings are not handled correctly.</li>\n<li>Dependent modules are not reloaded.</li>\n<li>New __slots__ can\u2019t be added to existing classes.</li>\n</ul>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>If you have the source code you can run the tests with</p>\n<blockquote>\n<cite>$ python pydevd_reload/tests/test_pydevd_reload.py</cite></blockquote>\n</div>\n<div id=\"repository\">\n<h2>Repository</h2>\n<p>The project is hosted on GitHub. You can look at the source here:</p>\n<blockquote>\n<a href=\"https://github.com/fyrestone/pydevd_reload\" rel=\"nofollow\">https://github.com/fyrestone/pydevd_reload</a></blockquote>\n</div>\n\n          </div>"}, "last_serial": 3584376, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "9bf9f32b853d3d2debe5592d01cad800", "sha256": "ed529aa0d30743e19ad924c4f66983071ab83b3fe2876e04c5d12e90b315f10b"}, "downloads": -1, "filename": "pydevd_reload-1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9bf9f32b853d3d2debe5592d01cad800", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9614, "upload_time": "2017-09-03T10:00:11", "upload_time_iso_8601": "2017-09-03T10:00:11.746523Z", "url": "https://files.pythonhosted.org/packages/58/4e/bcf358e9f6e7f432ad5494196e7216e93a14a64c8246f4b979cb48785d95/pydevd_reload-1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e47a04c9812bf7060222a172191fc45", "sha256": "e6c182f2100532a52e711621cd2b2c0063a307350a495c16be7c0148105987a4"}, "downloads": -1, "filename": "pydevd_reload-1.0.tar.gz", "has_sig": false, "md5_digest": "7e47a04c9812bf7060222a172191fc45", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7688, "upload_time": "2017-09-03T10:00:13", "upload_time_iso_8601": "2017-09-03T10:00:13.565507Z", "url": "https://files.pythonhosted.org/packages/69/d1/6e4ba72ed15cfbf203801bbc89b71e4c35fa2d7e46d00a3d51c224fcf2be/pydevd_reload-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "51cd114db8162845fa327bdd15911c44", "sha256": "7a8fb56d0bf99e6901a5fd0d7bc854854ce7f30cd5001ca378c904500c8c3eed"}, "downloads": -1, "filename": "pydevd_reload-1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "51cd114db8162845fa327bdd15911c44", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 11674, "upload_time": "2017-09-09T15:30:09", "upload_time_iso_8601": "2017-09-09T15:30:09.016131Z", "url": "https://files.pythonhosted.org/packages/d0/db/1daeeabee564ddc5b20fb9a5eae6a887cc90b43519e82eb4a57d37e6165d/pydevd_reload-1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b0bd91d96e7ac854b1a0a9430d25750", "sha256": "0270d50f3dfbbd7c25f84c3b1bb6aaaea84ee2a4b59c002378873b644baaca09"}, "downloads": -1, "filename": "pydevd_reload-1.1.tar.gz", "has_sig": false, "md5_digest": "7b0bd91d96e7ac854b1a0a9430d25750", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16457, "upload_time": "2017-09-09T15:30:03", "upload_time_iso_8601": "2017-09-09T15:30:03.831867Z", "url": "https://files.pythonhosted.org/packages/ee/16/48d14c9699f7da13f768307c8ddaf6d7f705d20c042b91eab4906f89be27/pydevd_reload-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "42911f4bbda33c02590135baa6c69bb7", "sha256": "48cdea86aa4b58fb28f9c205a2b89ff54c7ad1ed65928b9b9a57f2b78729e665"}, "downloads": -1, "filename": "pydevd_reload-1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "42911f4bbda33c02590135baa6c69bb7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12000, "upload_time": "2018-02-15T13:36:26", "upload_time_iso_8601": "2018-02-15T13:36:26.400610Z", "url": "https://files.pythonhosted.org/packages/a8/1e/52ada85da475c74d06d7caa594a6cc234cd6143e23d81d9b1592a8cc5a55/pydevd_reload-1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d3c6714d18833be00d8a1d5cc0b4005a", "sha256": "b0c440dcd7f78b916b8bb089dd97b887c67ccff1848092c9382aaa1356b8dfca"}, "downloads": -1, "filename": "pydevd_reload-1.2.tar.gz", "has_sig": false, "md5_digest": "d3c6714d18833be00d8a1d5cc0b4005a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17006, "upload_time": "2018-02-15T13:36:27", "upload_time_iso_8601": "2018-02-15T13:36:27.871810Z", "url": "https://files.pythonhosted.org/packages/fd/4c/b528d11d797795872e3404102cf6cc546cf875fd9965f1f4d2e189ff7ba7/pydevd_reload-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "42911f4bbda33c02590135baa6c69bb7", "sha256": "48cdea86aa4b58fb28f9c205a2b89ff54c7ad1ed65928b9b9a57f2b78729e665"}, "downloads": -1, "filename": "pydevd_reload-1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "42911f4bbda33c02590135baa6c69bb7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12000, "upload_time": "2018-02-15T13:36:26", "upload_time_iso_8601": "2018-02-15T13:36:26.400610Z", "url": "https://files.pythonhosted.org/packages/a8/1e/52ada85da475c74d06d7caa594a6cc234cd6143e23d81d9b1592a8cc5a55/pydevd_reload-1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d3c6714d18833be00d8a1d5cc0b4005a", "sha256": "b0c440dcd7f78b916b8bb089dd97b887c67ccff1848092c9382aaa1356b8dfca"}, "downloads": -1, "filename": "pydevd_reload-1.2.tar.gz", "has_sig": false, "md5_digest": "d3c6714d18833be00d8a1d5cc0b4005a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17006, "upload_time": "2018-02-15T13:36:27", "upload_time_iso_8601": "2018-02-15T13:36:27.871810Z", "url": "https://files.pythonhosted.org/packages/fd/4c/b528d11d797795872e3404102cf6cc546cf875fd9965f1f4d2e189ff7ba7/pydevd_reload-1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:07 2020"}