{"info": {"author": "MIT Data To AI Lab", "author_email": "dailabmit@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "<p align=\"left\">\n<img width=15% src=\"https://dai.lids.mit.edu/wp-content/uploads/2018/06/Logo_DAI_highres.png\" alt=\"SteganoGAN\" />\n<i>An open source project from Data to AI Lab at MIT.</i>\n</p>\n\n[![PyPI Shield](https://img.shields.io/pypi/v/steganogan.svg)](https://pypi.python.org/pypi/steganogan)\n[![Travis CI Shield](https://travis-ci.org/DAI-Lab/SteganoGAN.svg?branch=master)](https://travis-ci.org/DAI-Lab/SteganoGAN)\n[![Coverage Status](https://codecov.io/gh/DAI-Lab/SteganoGAN/branch/master/graph/badge.svg)](https://codecov.io/gh/DAI-Lab/SteganoGAN)\n[![Downloads](https://pepy.tech/badge/steganogan)](https://pepy.tech/project/steganogan)\n\n# SteganoGAN\n\n- License: MIT\n- Documentation: https://DAI-Lab.github.io/SteganoGAN\n- Homepage: https://github.com/DAI-Lab/SteganoGAN\n\n## Overview\n\n**SteganoGAN** is a tool for creating steganographic images using adversarial training.\n\n## Installation\n\nTo get started with **SteganoGAN**, we recommend using `pip`:\n\n```bash\npip install steganogan\n```\n\nAlternatively, you can clone the repository and install it from source by running `make install`:\n\n```bash\ngit clone git@github.com:DAI-Lab/SteganoGAN.git\ncd SteganoGAN\nmake install\n```\n\nFor development, you can use the `make install-develop` command instead in order to install all\nthe required dependencies for testing and linting.\n\n**NOTE** SteganoGAN currently requires `torch` version to be `1.0.0` in order to work properly.\n\n## Usage\n### Command Line\n\n**SteganoGAN** includes a simple command line interface for encoding and decoding steganographic images.\n\n#### Hide a message inside an image\n\nTo create a steganographic image, you simply need to supply the path to the cover image and the secret \nmessage:\n\n```\nsteganogan encode [options] path/to/cover/image.png \"Message to hide\"\n```\n\n#### Read a message from an image\n\nTo recover the secret message from a steganographic image, you simply supply the path to the steganographic \nimage that was generated by a compatible model:\n\n```\nsteganogan decode [options] path/to/generated/image.png\n```\n\n#### Additional options\n\nThe script has some additional options to control its behavior:\n\n* `-o, --output PATH`: Path where the generated image will be stored. Defaults to `output.png`.\n* `-a, --architecture ARCH`: Architecture to use, basic or dense. Defaults to dense.\n* `-v, --verbose`: Be verbose.\n* `--cpu`: force CPU usage even if CUDA is available. This might be needed if there is a GPU\n  available in the system but the VRAM amount is too low.\n\n**WARNING**: Make sure to use the same architecture specification (`--architecture`) during both \nthe encoding and decoding stage; otherwise, `SteganoGAN` will fail to decode the message.\n\n### Python\n\nThe primary way to interact with **SteganoGAN** from Python is through the `steganogan.SteganoGAN` \nclass. This class can be instantiated using a pretrained model:\n\n```\n>>> from steganogan import SteganoGAN\n>>> steganogan = SteganoGAN.load('steganogan/pretrained/dense.steg')\nUsing CUDA device\n```\n\nOnce we have loaded our model, we can give it the input image path, the output image path, and \nthe secret message:\n\n```\n>>> steganogan.encode('research/input.png', 'research/output.png', 'This is a super secret message!')\nEncoding completed.\n```\n\nThis will generate an `output.png` image that closely resembles the input image but contains the \nsecret message. In order to recover the message, we can simply pass `output.png` to the `decode` \nmethod:\n\n```\n>>> steganogan.decode('research/output.png')\n'This is a super secret message!'\n```\n\n## Research\n\nWe provide example scripts in the `research` folder which demonstrate how you can train your own\n`SteganoGAN` models from scratch on arbitrary datasets. In addition, we provide a convenience \nscript in `research/data` for downloading two popular image datasets.\n\n## What's next?\n\nFor more details about **SteganoGAN** and all its possibilities and features, please check the\n[project documentation site](https://DAI-Lab.github.io/SteganoGAN/)!\n\n## Citing SteganoGAN\n\nIf you use SteganoGAN for your research, please consider citing the following work:\n\nZhang, Kevin Alex and Cuesta-Infante, Alfredo and Veeramachaneni, Kalyan. SteganoGAN: High Capacity Image Steganography with GANs. MIT EECS, January 2019. ([PDF](https://arxiv.org/pdf/1901.03892.pdf))\n\n```\n@article{zhang2019steganogan,\n  title={SteganoGAN: High Capacity Image Steganography with GANs},\n  author={Zhang, Kevin Alex and Cuesta-Infante, Alfredo and Veeramachaneni, Kalyan},\n  journal={arXiv preprint arXiv:1901.03892},\n  year={2019},\n  url={https://arxiv.org/abs/1901.03892}\n}\n```\n\n\n# History\n\n## 0.1.3\n\n* Cap dependencies in order to avoid outside changes that caused `staganogan` to malfunctioned.\n\n### Resolved Issues\n\n* Issue #50: Cap pillow and other dependencies.\n* Issue #55: Update reedsolo.\n\n## 0.1.2\n\n* Add option to work with a custom pretrained model from CLI and Python\n* Refactorize Critics and Decoders to match Encoders code style\n* Make old pretrained models compatible with new code versions\n* Cleanup unneeded dependencies\n* Extensive unit testing\n\n## 0.1.1\n\n* Add better pretrained models.\n* Improve support for non CUDA devices.\n\n## 0.1.0 - First release to PyPi\n\n* SteganoGAN class which can be fitted, saved, loaded and used to encode and decode messages.\n* Basic command line interface that allow using pretrained models.\n* Basic and Dense pretrained models for demo purposes.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/DAI-Lab/SteganoGAN", "keywords": "steganogan", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "steganogan", "package_url": "https://pypi.org/project/steganogan/", "platform": "", "project_url": "https://pypi.org/project/steganogan/", "project_urls": {"Homepage": "https://github.com/DAI-Lab/SteganoGAN"}, "release_url": "https://pypi.org/project/steganogan/0.1.3/", "requires_dist": ["imageio (<2.5.0,>=2.4.1)", "reedsolo (==0.3)", "scipy (<1.2.0,>=1.1.0)", "tqdm (>=4.28.1)", "numpy (>=1.15.4<1.16.0)", "Pillow (<7.0.0,>=5.0.0)", "torch (==1.0.0)", "torchvision (==0.2.1)", "pip (>=9.0.1) ; extra == 'dev'", "bumpversion (<0.6,>=0.5.3) ; extra == 'dev'", "watchdog (<0.11,>=0.8.3) ; extra == 'dev'", "m2r (<0.3,>=0.2.0) ; extra == 'dev'", "Sphinx (<3,>=1.7.1) ; extra == 'dev'", "sphinx-rtd-theme (<0.5,>=0.2.4) ; extra == 'dev'", "flake8 (<4,>=3.7.7) ; extra == 'dev'", "isort (<5,>=4.3.4) ; extra == 'dev'", "autoflake (<2,>=1.1) ; extra == 'dev'", "autopep8 (<2,>=1.4.3) ; extra == 'dev'", "twine (<4,>=1.10.0) ; extra == 'dev'", "wheel (>=0.30.0) ; extra == 'dev'", "coverage (<6,>=4.5.1) ; extra == 'dev'", "tox (<4,>=2.9.1) ; extra == 'dev'", "jupyter (<2,>=1.0.0) ; extra == 'dev'", "pytest (>=3.4.2) ; extra == 'dev'", "pytest-cov (>=2.6.0) ; extra == 'dev'", "pytest (>=3.4.2) ; extra == 'test'", "pytest-cov (>=2.6.0) ; extra == 'test'"], "requires_python": ">=3.5", "summary": "Steganography tool based on DeepLearning GANs", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"left\">\n<img alt=\"SteganoGAN\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/80df0970db0e9e95cce463bc9fa595caf90dd1c7/68747470733a2f2f6461692e6c6964732e6d69742e6564752f77702d636f6e74656e742f75706c6f6164732f323031382f30362f4c6f676f5f4441495f686967687265732e706e67\" width=\"15%\">\n<i>An open source project from Data to AI Lab at MIT.</i>\n</p>\n<p><a href=\"https://pypi.python.org/pypi/steganogan\" rel=\"nofollow\"><img alt=\"PyPI Shield\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5023ffcdf9b3fd771e8b54064fb1f5a799fbcef0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f73746567616e6f67616e2e737667\"></a>\n<a href=\"https://travis-ci.org/DAI-Lab/SteganoGAN\" rel=\"nofollow\"><img alt=\"Travis CI Shield\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/47a3e00f7f83ded7b1c643d047729661e547be86/68747470733a2f2f7472617669732d63692e6f72672f4441492d4c61622f53746567616e6f47414e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/DAI-Lab/SteganoGAN\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/21f50c16374e11ab39c2817045602f5fd1164292/68747470733a2f2f636f6465636f762e696f2f67682f4441492d4c61622f53746567616e6f47414e2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pepy.tech/project/steganogan\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49d5b5aae938377451da9860ce3b374a4b5e0cb2/68747470733a2f2f706570792e746563682f62616467652f73746567616e6f67616e\"></a></p>\n<h1>SteganoGAN</h1>\n<ul>\n<li>License: MIT</li>\n<li>Documentation: <a href=\"https://DAI-Lab.github.io/SteganoGAN\" rel=\"nofollow\">https://DAI-Lab.github.io/SteganoGAN</a></li>\n<li>Homepage: <a href=\"https://github.com/DAI-Lab/SteganoGAN\" rel=\"nofollow\">https://github.com/DAI-Lab/SteganoGAN</a></li>\n</ul>\n<h2>Overview</h2>\n<p><strong>SteganoGAN</strong> is a tool for creating steganographic images using adversarial training.</p>\n<h2>Installation</h2>\n<p>To get started with <strong>SteganoGAN</strong>, we recommend using <code>pip</code>:</p>\n<pre>pip install steganogan\n</pre>\n<p>Alternatively, you can clone the repository and install it from source by running <code>make install</code>:</p>\n<pre>git clone git@github.com:DAI-Lab/SteganoGAN.git\n<span class=\"nb\">cd</span> SteganoGAN\nmake install\n</pre>\n<p>For development, you can use the <code>make install-develop</code> command instead in order to install all\nthe required dependencies for testing and linting.</p>\n<p><strong>NOTE</strong> SteganoGAN currently requires <code>torch</code> version to be <code>1.0.0</code> in order to work properly.</p>\n<h2>Usage</h2>\n<h3>Command Line</h3>\n<p><strong>SteganoGAN</strong> includes a simple command line interface for encoding and decoding steganographic images.</p>\n<h4>Hide a message inside an image</h4>\n<p>To create a steganographic image, you simply need to supply the path to the cover image and the secret\nmessage:</p>\n<pre><code>steganogan encode [options] path/to/cover/image.png \"Message to hide\"\n</code></pre>\n<h4>Read a message from an image</h4>\n<p>To recover the secret message from a steganographic image, you simply supply the path to the steganographic\nimage that was generated by a compatible model:</p>\n<pre><code>steganogan decode [options] path/to/generated/image.png\n</code></pre>\n<h4>Additional options</h4>\n<p>The script has some additional options to control its behavior:</p>\n<ul>\n<li><code>-o, --output PATH</code>: Path where the generated image will be stored. Defaults to <code>output.png</code>.</li>\n<li><code>-a, --architecture ARCH</code>: Architecture to use, basic or dense. Defaults to dense.</li>\n<li><code>-v, --verbose</code>: Be verbose.</li>\n<li><code>--cpu</code>: force CPU usage even if CUDA is available. This might be needed if there is a GPU\navailable in the system but the VRAM amount is too low.</li>\n</ul>\n<p><strong>WARNING</strong>: Make sure to use the same architecture specification (<code>--architecture</code>) during both\nthe encoding and decoding stage; otherwise, <code>SteganoGAN</code> will fail to decode the message.</p>\n<h3>Python</h3>\n<p>The primary way to interact with <strong>SteganoGAN</strong> from Python is through the <code>steganogan.SteganoGAN</code>\nclass. This class can be instantiated using a pretrained model:</p>\n<pre><code>&gt;&gt;&gt; from steganogan import SteganoGAN\n&gt;&gt;&gt; steganogan = SteganoGAN.load('steganogan/pretrained/dense.steg')\nUsing CUDA device\n</code></pre>\n<p>Once we have loaded our model, we can give it the input image path, the output image path, and\nthe secret message:</p>\n<pre><code>&gt;&gt;&gt; steganogan.encode('research/input.png', 'research/output.png', 'This is a super secret message!')\nEncoding completed.\n</code></pre>\n<p>This will generate an <code>output.png</code> image that closely resembles the input image but contains the\nsecret message. In order to recover the message, we can simply pass <code>output.png</code> to the <code>decode</code>\nmethod:</p>\n<pre><code>&gt;&gt;&gt; steganogan.decode('research/output.png')\n'This is a super secret message!'\n</code></pre>\n<h2>Research</h2>\n<p>We provide example scripts in the <code>research</code> folder which demonstrate how you can train your own\n<code>SteganoGAN</code> models from scratch on arbitrary datasets. In addition, we provide a convenience\nscript in <code>research/data</code> for downloading two popular image datasets.</p>\n<h2>What's next?</h2>\n<p>For more details about <strong>SteganoGAN</strong> and all its possibilities and features, please check the\n<a href=\"https://DAI-Lab.github.io/SteganoGAN/\" rel=\"nofollow\">project documentation site</a>!</p>\n<h2>Citing SteganoGAN</h2>\n<p>If you use SteganoGAN for your research, please consider citing the following work:</p>\n<p>Zhang, Kevin Alex and Cuesta-Infante, Alfredo and Veeramachaneni, Kalyan. SteganoGAN: High Capacity Image Steganography with GANs. MIT EECS, January 2019. (<a href=\"https://arxiv.org/pdf/1901.03892.pdf\" rel=\"nofollow\">PDF</a>)</p>\n<pre><code>@article{zhang2019steganogan,\n  title={SteganoGAN: High Capacity Image Steganography with GANs},\n  author={Zhang, Kevin Alex and Cuesta-Infante, Alfredo and Veeramachaneni, Kalyan},\n  journal={arXiv preprint arXiv:1901.03892},\n  year={2019},\n  url={https://arxiv.org/abs/1901.03892}\n}\n</code></pre>\n<h1>History</h1>\n<h2>0.1.3</h2>\n<ul>\n<li>Cap dependencies in order to avoid outside changes that caused <code>staganogan</code> to malfunctioned.</li>\n</ul>\n<h3>Resolved Issues</h3>\n<ul>\n<li>Issue #50: Cap pillow and other dependencies.</li>\n<li>Issue #55: Update reedsolo.</li>\n</ul>\n<h2>0.1.2</h2>\n<ul>\n<li>Add option to work with a custom pretrained model from CLI and Python</li>\n<li>Refactorize Critics and Decoders to match Encoders code style</li>\n<li>Make old pretrained models compatible with new code versions</li>\n<li>Cleanup unneeded dependencies</li>\n<li>Extensive unit testing</li>\n</ul>\n<h2>0.1.1</h2>\n<ul>\n<li>Add better pretrained models.</li>\n<li>Improve support for non CUDA devices.</li>\n</ul>\n<h2>0.1.0 - First release to PyPi</h2>\n<ul>\n<li>SteganoGAN class which can be fitted, saved, loaded and used to encode and decode messages.</li>\n<li>Basic command line interface that allow using pretrained models.</li>\n<li>Basic and Dense pretrained models for demo purposes.</li>\n</ul>\n\n          </div>"}, "last_serial": 7085713, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a8aa89e794e0161f62da3e9589ee109a", "sha256": "29388e4b9b8ad442b36e35e68e6797359574d0f0e9e9ad087cd93453236f90bc"}, "downloads": -1, "filename": "steganogan-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a8aa89e794e0161f62da3e9589ee109a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 1643298, "upload_time": "2018-12-22T21:49:07", "upload_time_iso_8601": "2018-12-22T21:49:07.962091Z", "url": "https://files.pythonhosted.org/packages/df/f9/b60692654a0d613958aac7eaf7a35637f09624a75d64a25b3387f0afd8ce/steganogan-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9564ac38d619929097a2a2d6f7229c2", "sha256": "2e09e8002d6e788f0a1c7a60a3b58fd8fc617779a07a0a8d4e09e95f05fd24df"}, "downloads": -1, "filename": "steganogan-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e9564ac38d619929097a2a2d6f7229c2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 1654389, "upload_time": "2018-12-22T21:49:36", "upload_time_iso_8601": "2018-12-22T21:49:36.674780Z", "url": "https://files.pythonhosted.org/packages/f6/08/07f16cdb8c788cd79ee7a432dfe2097855076df04aeae9116db823b92c3b/steganogan-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4fd4fdb82ea24d89e619662a38cdf080", "sha256": "f46b846b24ee977c148a2be0d17809e577e46984aab615ddbb5f03eea9d4679d"}, "downloads": -1, "filename": "steganogan-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4fd4fdb82ea24d89e619662a38cdf080", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 2815314, "upload_time": "2019-01-07T11:28:37", "upload_time_iso_8601": "2019-01-07T11:28:37.177889Z", "url": "https://files.pythonhosted.org/packages/7b/c6/51f9877b85b39d0c70ebf512f5afbafe089751f8e62f363381bbb12c1071/steganogan-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ac8facc01cb9342567e745863935121", "sha256": "45515bf3593595db7d68390bfb9534a6783205dd19b90ee977cc00f5bc634f7c"}, "downloads": -1, "filename": "steganogan-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8ac8facc01cb9342567e745863935121", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 2822503, "upload_time": "2019-01-07T11:29:24", "upload_time_iso_8601": "2019-01-07T11:29:24.385781Z", "url": "https://files.pythonhosted.org/packages/b4/f5/f78f0938794aa85270c9c44480041e8c7e837530010c3ea35022a163f258/steganogan-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "fc5599d38724f9b76cdc90b4d28d7de2", "sha256": "d1ca7fe18fb21e8646d90c84b9162803d7df07cfcfe643b3e59b6fd7b5c6bce7"}, "downloads": -1, "filename": "steganogan-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fc5599d38724f9b76cdc90b4d28d7de2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 2816362, "upload_time": "2019-02-05T15:24:53", "upload_time_iso_8601": "2019-02-05T15:24:53.766593Z", "url": "https://files.pythonhosted.org/packages/b4/4a/39ffd8404fac276f417d236b1906a6c7cea5e02efef7e3899c9332911f28/steganogan-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e193654ee44932f6388c1340e4062002", "sha256": "3090aa1da1ea981510a5bf7a696de0c615209d411d06d67c7e7e778a0de14914"}, "downloads": -1, "filename": "steganogan-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e193654ee44932f6388c1340e4062002", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4357904, "upload_time": "2019-02-05T15:24:59", "upload_time_iso_8601": "2019-02-05T15:24:59.374081Z", "url": "https://files.pythonhosted.org/packages/6a/f2/354cef2f9809d36b930a89a7427303a36e8ef100a9214e04e6e4761aab22/steganogan-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "fbde79984f50a579848c8b11b5e28da6", "sha256": "02b6a470948fd9a1b7734facf5f465af5e0a9fa83fb8c49d83df15b718ec135c"}, "downloads": -1, "filename": "steganogan-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fbde79984f50a579848c8b11b5e28da6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 2816757, "upload_time": "2020-04-23T16:31:02", "upload_time_iso_8601": "2020-04-23T16:31:02.475529Z", "url": "https://files.pythonhosted.org/packages/c1/81/ecf0986b7b16369e840e20fa20c323191052980f77ce0450006ba4ed6cfb/steganogan-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66e45a2f4c772f63039a06a42bc0ff1c", "sha256": "e08127d5cbe2e245ac0f89bdc34148133c31eaf95050272f40f003d1601bf188"}, "downloads": -1, "filename": "steganogan-0.1.3.tar.gz", "has_sig": false, "md5_digest": "66e45a2f4c772f63039a06a42bc0ff1c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4359223, "upload_time": "2020-04-23T16:31:07", "upload_time_iso_8601": "2020-04-23T16:31:07.781246Z", "url": "https://files.pythonhosted.org/packages/1f/91/76ef95a34807c224fb62a17f5b945044b787af805e1573e2751178c450f3/steganogan-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fbde79984f50a579848c8b11b5e28da6", "sha256": "02b6a470948fd9a1b7734facf5f465af5e0a9fa83fb8c49d83df15b718ec135c"}, "downloads": -1, "filename": "steganogan-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fbde79984f50a579848c8b11b5e28da6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 2816757, "upload_time": "2020-04-23T16:31:02", "upload_time_iso_8601": "2020-04-23T16:31:02.475529Z", "url": "https://files.pythonhosted.org/packages/c1/81/ecf0986b7b16369e840e20fa20c323191052980f77ce0450006ba4ed6cfb/steganogan-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66e45a2f4c772f63039a06a42bc0ff1c", "sha256": "e08127d5cbe2e245ac0f89bdc34148133c31eaf95050272f40f003d1601bf188"}, "downloads": -1, "filename": "steganogan-0.1.3.tar.gz", "has_sig": false, "md5_digest": "66e45a2f4c772f63039a06a42bc0ff1c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4359223, "upload_time": "2020-04-23T16:31:07", "upload_time_iso_8601": "2020-04-23T16:31:07.781246Z", "url": "https://files.pythonhosted.org/packages/1f/91/76ef95a34807c224fb62a17f5b945044b787af805e1573e2751178c450f3/steganogan-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:07 2020"}