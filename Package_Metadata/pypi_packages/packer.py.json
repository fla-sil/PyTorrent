{"info": {"author": "Matthew Aynalem", "author_email": "maynalem@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "==============\npacker.py\n==============\n.. image:: https://img.shields.io/pypi/v/packer.py.svg\n    :target: https://pypi.python.org/pypi/packer.py\n\n.. image:: https://travis-ci.org/mayn/packer.py.svg?branch=master\n    :target: https://travis-ci.org/mayn/packer.py\n\n.. image:: https://ci.appveyor.com/api/projects/status/n1627wlm52q12db8/branch/master?svg=true\n    :target: https://ci.appveyor.com/project/mayn/packer-py\n\n.. image:: https://coveralls.io/repos/github/mayn/packer.py/badge.svg?branch=master\n    :target: https://coveralls.io/github/mayn/packer.py\n\n\n\nAbout\n=====\n\npacker.py - python library for interacting with hashicorp `packer`_ CLI executable.\n\nProject follows `semantic versioning`_ , v0.x.x API should be considered unstable, API will change frequently, please plan accordingly.\n\n\n\nInstallation\n============\npacker.py can be installed via pip:\n\n.. code:: sh\n\n    $ pip install packer.py\n\n\nConfiguration\n=============\n\nPacker Executable\n******************\n\nSpecify Packer Location\n^^^^^^^^^^^^^^^^^^^^^^^\nAccess to hashicorp `packer`_ executable is needed in order to use `packer.py`_.\nWhen generating commands, if no location is specified, the following defaults are used.\n\n    :\\*nix: /usr/local/packer\n    :macOS: /usr/local/packer\n    :windows: packer.exe\n\nThese defaults can be overridden by explicitly setting the location of packer for your environment.\n\n\n.. code:: python\n\n    PackerExecutable(executable_path=\"/usr/local/bin/packer\")\n\nor\n\n.. code:: python\n\n    PackerExecutable(\"/usr/local/bin/packer\")\n\n\n\nMachine Readable Output\n^^^^^^^^^^^^^^^^^^^^^^^\nCommands are executed with packer's `machine readable format`_ enabled by default.\nThis can be disabled by setting\n\n.. code:: python\n\n    PackerExecutable(machine_readable=False)\n\n\n\n\nRunning Commands\n==================\nThe following commands are currently supported:\n\n* build\n* inspect\n* validate\n* version\n\nBelow is the packer.py equivalent of running these `packer CLI commands`_\n\n\nConfiguration\n******************\n\nTemplates\n^^^^^^^^^\nTemplates are specified by passing their filepath to the command.\n\n.. code:: python\n\n    template = 'tests/templates/test_template1.json'\n    PackerExecutable().validate(template)\n\nTemplates can also be specified as a string literal.\n\n.. code:: python\n\n    template = \"\"\"\n    {\n        \"variables\": {\n            \"my_var1\": \"{{env `key1`}}\"\n        },\n        \"builders\": [\n            {\n                \"type\": \"file\",\n                \"content\": \"Lorem ipsum dolor sit amet {{user `my_var1`}} \",\n                \"target\": \"/tmp/packer.test\"\n            }\n        ]\n    }\n    \"\"\"\n    PackerExecutable().validate(template)\n\n\n`packerlicious`_ templates can also be used and combined with packer.py.\n\n.. code:: python\n\n    from packerlicious import builder, Template, EnvVar\n    from packerpy import PackerExecutable\n    var1 = EnvVar(\"my_var1\")\n    var2 = EnvVar(\"my_var2\")\n    file_builder = builder.File()\n    file_builder = builder.File(content=\"{} more words {}\".format(var2.ref().data, var1.ref().data),\n                                target=\"/tmp/packer.test\"\n                                )\n    template = Template()\n    template.add_variable([var1, var2])\n    template.add_builder(file_builder)\n    p = PackerExecutable(\"/usr/local/bin/packer\")\n    template_vars = {'my_var1': 'my_val1', 'my_var2': 'my_val2'}\n    p.build(template.to_json(),\n            var=template_vars\n            )\n\n\nCommand Arguments\n^^^^^^^^^^^^^^^^^^\n`packer CLI commands`_ arguments can be specified by passing them as packer.py method arguments.\n\n    $ packer validate -syntax-only -var \"key1=my_value\" tests/templates/test_template1.json\n\n.. code:: python\n\n    p = PackerExecutable(\"/usr/local/bin/packer\")\n    template = 'tests/templates/test_template1.json'\n    p.validate(template,\n               syntax_only=True,\n               var=\"key1=my_value\"\n               )\n\n\nThe following rules are used by packer.py when converting to `packer CLI commands`.\n\nDashes in Packer Command Option Names\n+++++++++++++++++++++++++++++++++++++\nIf the packer command option has a dash in it, pass it to packer.py with an underscore.\n\n:``-on-error=cleanup``: ``on_error='cleanup'``\n\n\n\nBoolean Values and Implicit Value Command Options\n+++++++++++++++++++++++++++++++++++++++++++++++++\nIf the packer command option is either a boolean option or an option with an implicit value, pass it to packer.py as a boolean.\n\n:``-color=false``: ``color=False``\n:``-force``: ``force=True``\n\n\nRepeating Command Options\n+++++++++++++++++++++++++++\n\nIf the packer command options can be specified multiple times, pass the value as a dictionary to packer.py.\nMultiple ``-var`` option is an example of this.\n\n    $   packer build -var 'my_var1=my_val1' -var 'my_var2=my_val2' tests/templates/test_template1.json\n\n.. code:: python\n\n    from packerpy import PackerExecutable\n    p = PackerExecutable(\"/usr/local/bin/packer\")\n    template = 'tests/templates/test_template1.json'\n    template_vars = { 'my_var1': 'my_val1', 'my_var2': 'my_val2' }\n    p.build(template,\n               var=template_vars\n               )\n\n\nBuild\n*********\n    $   packer build template.json\n\n.. code:: python\n\n    >>> from packerpy import PackerExecutable\n    >>> p = PackerExecutable(\"/usr/local/bin/packer\")\n    >>> (ret, out, err) = p.build('tests/templates/test_template1.json')\n    >>> ret==0\n    True\n    >>> print(ret)\n    0\n    >>> print(out)\n    b\"1552841678,,ui,say,Build 'file' finished.\\n1552841678,,ui,say,\\\\n==> Builds finished. The artifacts of successful builds are:\\n1552841678,file,artifact-count,1\\n1552841678,file,artifact,0,builder-id,packer.file\\n1552841678,file,artifact,0,id,File\\n1552841678,file,artifact,0,string,Stored file: /tmp/packer.test \\n1552841678,file,artifact,0,files-count,1\\n1552841678,file,artifact,0,file,0,/tmp/packer.test \\n1552841678,file,artifact,0,end\\n1552841678,,ui,say,--> file: Stored file: /tmp/packer.test \\n\"\n    >>> print(err)\n    b''\n\n\nExample of a failed build.\n\n.. code:: python\n\n    >>> from packerpy import PackerExecutable\n    >>> p = PackerExecutable(\"/usr/local/bin/packer\")\n    >>> bad_template = \"\"\"{\n    ...     \"builders\": [\n    ...         {\n    ...             \"type\": \"amazon-ebs\",\n    ...             \"access_key\": \"...\"\n    ...         }\n    ...     ]\n    ... }\n    ... \"\"\"\n    >>> (ret, out, err) = p.build(bad_template)\n    >>> ret==0\n    False\n    >>> print(ret)\n    1\n    >>> print(out)\n    b'1552841800,,ui,error,5 error(s) occurred:\\\\n\\\\n* ami_name must be specified\\\\n* ami_name must be between 3 and 128 characters long\\\\n* An ssh_username must be specified\\\\n  Note: some builders used to default ssh_username to \"root\".\\\\n* A source_ami or source_ami_filter must be specified\\\\n* An instance_type must be specified\\n'\n    >>> print(err)\n    b''\n\n\n\nInspect\n*********\n    $   packer inspect template.json\n\n.. code:: python\n\n    >>> from packerpy import PackerExecutable\n    >>> p = PackerExecutable(\"/usr/local/bin/packer\")\n    >>> (ret, out, err) = p.inspect('tests/templates/test_template1.json')\n    >>> ret==0\n    True\n    >>> print(ret)\n    0\n    >>> print(out)\n    b\"1552841499,,ui,say,Optional variables and their defaults:\\\\n\\n1552841499,,template-variable,my_var1,{{env `key1`}},0\\n1552841499,,ui,say,  my_var1 = {{env `key1`}}\\n1552841499,,ui,say,\\n1552841499,,ui,say,Builders:\\\\n\\n1552841499,,template-builder,file,file\\n1552841499,,ui,say,  file\\n1552841499,,ui,say,\\n1552841499,,ui,say,Provisioners:\\\\n\\n1552841499,,ui,say,  <No provisioners>\\n1552841499,,ui,say,\\\\nNote: If your build names contain user variables or template\\\\nfunctions such as 'timestamp'%!(PACKER_COMMA) these are processed at build time%!(PACKER_COMMA)\\\\nand therefore only show in their raw form here.\\n\"\n    >>> print(err)\n    b''\n\n\n\nValidate\n*********\n    $   packer validate template.json\n\n.. code:: python\n\n    >>> from packerpy import PackerExecutable\n    >>> p = PackerExecutable(\"/usr/local/bin/packer\")\n    >>> (ret, out, err) = p.validate('tests/templates/test_template1.json')\n    >>> ret==0\n    True\n    >>> print(ret)\n    0\n    >>> print(out)\n    b'1552840497,,ui,say,Template validated successfully.\\n'\n    >>> print(err)\n    b''\n\n\nExample of a template which failed to validation.\n\n.. code:: python\n\n    >>> from packerpy import PackerExecutable\n    >>> p = PackerExecutable(\"/usr/local/bin/packer\")\n    >>> bad_template = \"\"\"{\n    ...     \"builders\": [\n    ...         {\n    ...             \"type\": \"amazon-ebs\",\n    ...             \"access_key\": \"...\"\n    ...         }\n    ...     ]\n    ... }\n    ... \"\"\"\n    >>> (ret, out, err) = p.validate(bad_template)\n    >>> ret==0\n    False\n    >>> print(ret)\n    1\n    >>> print(out)\n    b'1552840892,,ui,error,Template validation failed. Errors are shown below.\\\\n\\n1552840892,,ui,error,Errors validating build \\'amazon-ebs\\'. 5 error(s) occurred:\\\\n\\\\n* ami_name must be specified\\\\n* ami_name must be between 3 and 128 characters long\\\\n* An ssh_username must be specified\\\\n  Note: some builders used to default ssh_username to \"root\".\\\\n* A source_ami or source_ami_filter must be specified\\\\n* An instance_type must be specified\\n'\n    >>> print(err)\n    b''\n\n\n\nVersion\n*********\n    $   packer version\n\n.. code:: python\n\n    >>> from packerpy import PackerExecutable\n    >>> p = PackerExecutable(\"/usr/local/bin/packer\")\n    >>> (ret, out, err) = p.version()\n    >>> ret==0\n    True\n    >>> print(ret)\n    0\n    >>> print(out)\n    b'1552840138,,version,1.0.3\\n1552840138,,version-prelease,\\n1552840138,,version-commit,c0ddb4a+CHANGES\\n1552840138,,ui,say,Packer v1.0.3\\n1552840138,,ui,say,\\\\nYour version of Packer is out of date! The latest version\\\\nis 1.3.5. You can update by downloading from www.packer.io\\n'\n    >>> print(err)\n    b''\n\n\n\nLicensing\n=========\n\npacker.py is licensed under the `Apache license 2.0`_.\nSee `LICENSE`_ for the full license text.\n\n\n\n\n.. _`packer`: https://www.packer.io/\n.. _`packer.py`: https://github.com/mayn/packer.py\n.. _`packerlicious`: https://github.com/mayn/packerlicious\n.. _`machine readable format`: https://www.packer.io/docs/commands/index.html#machine-readable-output\n.. _`packer CLI commands`: https://www.packer.io/docs/commands/index.html\n.. _`LICENSE`: https://github.com/mayn/packer.py/blob/master/LICENSE\n.. _`Apache license 2.0`: https://opensource.org/licenses/Apache-2.0\n.. _`BSD 2-Clause license`: http://opensource.org/licenses/BSD-2-Clause\n.. _`semantic versioning`: http://semver.org/", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mayn/packer.py", "keywords": "hashicorp packer", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "packer.py", "package_url": "https://pypi.org/project/packer.py/", "platform": "", "project_url": "https://pypi.org/project/packer.py/", "project_urls": {"Homepage": "https://github.com/mayn/packer.py"}, "release_url": "https://pypi.org/project/packer.py/0.3.0/", "requires_dist": null, "requires_python": "", "summary": "packer.py - python library to run hashicorp packer CLI commands", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/packer.py\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/packer.py.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f2cfbb1a23ec95bd5ab4d165098e7e62c326945e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7061636b65722e70792e737667\"></a>\n<a href=\"https://travis-ci.org/mayn/packer.py\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/mayn/packer.py.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5155fa3e8026dcca2ad49cab9c5db0845f9b0e58/68747470733a2f2f7472617669732d63692e6f72672f6d61796e2f7061636b65722e70792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/mayn/packer-py\" rel=\"nofollow\"><img alt=\"https://ci.appveyor.com/api/projects/status/n1627wlm52q12db8/branch/master?svg=true\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/463eb46dac84c7391cd247960e23d47770352fcb/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6e31363237776c6d35327131326462382f6272616e63682f6d61737465723f7376673d74727565\"></a>\n<a href=\"https://coveralls.io/github/mayn/packer.py\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/mayn/packer.py/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/79eec2412327786b9c9dd35195bac832e0364106/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d61796e2f7061636b65722e70792f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"about\">\n<h2>About</h2>\n<p>packer.py - python library for interacting with hashicorp <a href=\"https://www.packer.io/\" rel=\"nofollow\">packer</a> CLI executable.</p>\n<p>Project follows <a href=\"http://semver.org/\" rel=\"nofollow\">semantic versioning</a> , v0.x.x API should be considered unstable, API will change frequently, please plan accordingly.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>packer.py can be installed via pip:</p>\n<pre>$ pip install packer.py\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<h2 id=\"packer-executable\"><span class=\"section-subtitle\">Packer Executable</span></h2>\n<div id=\"specify-packer-location\">\n<h3>Specify Packer Location</h3>\n<p>Access to hashicorp <a href=\"https://www.packer.io/\" rel=\"nofollow\">packer</a> executable is needed in order to use <a href=\"https://github.com/mayn/packer.py\" rel=\"nofollow\">packer.py</a>.\nWhen generating commands, if no location is specified, the following defaults are used.</p>\n<blockquote>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>*nix:</th><td>/usr/local/packer</td>\n</tr>\n<tr><th>macOS:</th><td>/usr/local/packer</td>\n</tr>\n<tr><th>windows:</th><td>packer.exe</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n<p>These defaults can be overridden by explicitly setting the location of packer for your environment.</p>\n<pre><span class=\"n\">PackerExecutable</span><span class=\"p\">(</span><span class=\"n\">executable_path</span><span class=\"o\">=</span><span class=\"s2\">\"/usr/local/bin/packer\"</span><span class=\"p\">)</span>\n</pre>\n<p>or</p>\n<pre><span class=\"n\">PackerExecutable</span><span class=\"p\">(</span><span class=\"s2\">\"/usr/local/bin/packer\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"machine-readable-output\">\n<h3>Machine Readable Output</h3>\n<p>Commands are executed with packer\u2019s <a href=\"https://www.packer.io/docs/commands/index.html#machine-readable-output\" rel=\"nofollow\">machine readable format</a> enabled by default.\nThis can be disabled by setting</p>\n<pre><span class=\"n\">PackerExecutable</span><span class=\"p\">(</span><span class=\"n\">machine_readable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"running-commands\">\n<h2>Running Commands</h2>\n<p>The following commands are currently supported:</p>\n<ul>\n<li>build</li>\n<li>inspect</li>\n<li>validate</li>\n<li>version</li>\n</ul>\n<p>Below is the packer.py equivalent of running these <a href=\"https://www.packer.io/docs/commands/index.html\" rel=\"nofollow\">packer CLI commands</a></p>\n<div id=\"id1\">\n<h3>Configuration</h3>\n<div id=\"templates\">\n<h4>Templates</h4>\n<p>Templates are specified by passing their filepath to the command.</p>\n<pre><span class=\"n\">template</span> <span class=\"o\">=</span> <span class=\"s1\">'tests/templates/test_template1.json'</span>\n<span class=\"n\">PackerExecutable</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">template</span><span class=\"p\">)</span>\n</pre>\n<p>Templates can also be specified as a string literal.</p>\n<pre><span class=\"n\">template</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"\n{\n    \"variables\": {\n        \"my_var1\": \"{{env `key1`}}\"\n    },\n    \"builders\": [\n        {\n            \"type\": \"file\",\n            \"content\": \"Lorem ipsum dolor sit amet {{user `my_var1`}} \",\n            \"target\": \"/tmp/packer.test\"\n        }\n    ]\n}\n\"\"\"</span>\n<span class=\"n\">PackerExecutable</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">template</span><span class=\"p\">)</span>\n</pre>\n<p><a href=\"https://github.com/mayn/packerlicious\" rel=\"nofollow\">packerlicious</a> templates can also be used and combined with packer.py.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">packerlicious</span> <span class=\"kn\">import</span> <span class=\"n\">builder</span><span class=\"p\">,</span> <span class=\"n\">Template</span><span class=\"p\">,</span> <span class=\"n\">EnvVar</span>\n<span class=\"kn\">from</span> <span class=\"nn\">packerpy</span> <span class=\"kn\">import</span> <span class=\"n\">PackerExecutable</span>\n<span class=\"n\">var1</span> <span class=\"o\">=</span> <span class=\"n\">EnvVar</span><span class=\"p\">(</span><span class=\"s2\">\"my_var1\"</span><span class=\"p\">)</span>\n<span class=\"n\">var2</span> <span class=\"o\">=</span> <span class=\"n\">EnvVar</span><span class=\"p\">(</span><span class=\"s2\">\"my_var2\"</span><span class=\"p\">)</span>\n<span class=\"n\">file_builder</span> <span class=\"o\">=</span> <span class=\"n\">builder</span><span class=\"o\">.</span><span class=\"n\">File</span><span class=\"p\">()</span>\n<span class=\"n\">file_builder</span> <span class=\"o\">=</span> <span class=\"n\">builder</span><span class=\"o\">.</span><span class=\"n\">File</span><span class=\"p\">(</span><span class=\"n\">content</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\"> more words </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">var2</span><span class=\"o\">.</span><span class=\"n\">ref</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">var1</span><span class=\"o\">.</span><span class=\"n\">ref</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">),</span>\n                            <span class=\"n\">target</span><span class=\"o\">=</span><span class=\"s2\">\"/tmp/packer.test\"</span>\n                            <span class=\"p\">)</span>\n<span class=\"n\">template</span> <span class=\"o\">=</span> <span class=\"n\">Template</span><span class=\"p\">()</span>\n<span class=\"n\">template</span><span class=\"o\">.</span><span class=\"n\">add_variable</span><span class=\"p\">([</span><span class=\"n\">var1</span><span class=\"p\">,</span> <span class=\"n\">var2</span><span class=\"p\">])</span>\n<span class=\"n\">template</span><span class=\"o\">.</span><span class=\"n\">add_builder</span><span class=\"p\">(</span><span class=\"n\">file_builder</span><span class=\"p\">)</span>\n<span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">PackerExecutable</span><span class=\"p\">(</span><span class=\"s2\">\"/usr/local/bin/packer\"</span><span class=\"p\">)</span>\n<span class=\"n\">template_vars</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'my_var1'</span><span class=\"p\">:</span> <span class=\"s1\">'my_val1'</span><span class=\"p\">,</span> <span class=\"s1\">'my_var2'</span><span class=\"p\">:</span> <span class=\"s1\">'my_val2'</span><span class=\"p\">}</span>\n<span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">(</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"n\">to_json</span><span class=\"p\">(),</span>\n        <span class=\"n\">var</span><span class=\"o\">=</span><span class=\"n\">template_vars</span>\n        <span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"command-arguments\">\n<h4>Command Arguments</h4>\n<p><a href=\"https://www.packer.io/docs/commands/index.html\" rel=\"nofollow\">packer CLI commands</a> arguments can be specified by passing them as packer.py method arguments.</p>\n<blockquote>\n$ packer validate -syntax-only -var \u201ckey1=my_value\u201d tests/templates/test_template1.json</blockquote>\n<pre><span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">PackerExecutable</span><span class=\"p\">(</span><span class=\"s2\">\"/usr/local/bin/packer\"</span><span class=\"p\">)</span>\n<span class=\"n\">template</span> <span class=\"o\">=</span> <span class=\"s1\">'tests/templates/test_template1.json'</span>\n<span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">template</span><span class=\"p\">,</span>\n           <span class=\"n\">syntax_only</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n           <span class=\"n\">var</span><span class=\"o\">=</span><span class=\"s2\">\"key1=my_value\"</span>\n           <span class=\"p\">)</span>\n</pre>\n<p>The following rules are used by packer.py when converting to <cite>packer CLI commands</cite>.</p>\n<div id=\"dashes-in-packer-command-option-names\">\n<h5>Dashes in Packer Command Option Names</h5>\n<p>If the packer command option has a dash in it, pass it to packer.py with an underscore.</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th><tt><span class=\"pre\">-on-error=cleanup</span></tt>:</th></tr>\n<tr><td>\u00a0</td><td><tt><span class=\"pre\">on_error='cleanup'</span></tt></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"boolean-values-and-implicit-value-command-options\">\n<h5>Boolean Values and Implicit Value Command Options</h5>\n<p>If the packer command option is either a boolean option or an option with an implicit value, pass it to packer.py as a boolean.</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th><tt><span class=\"pre\">-color=false</span></tt>:</th><td><tt>color=False</tt></td>\n</tr>\n<tr><th><tt><span class=\"pre\">-force</span></tt>:</th><td><tt>force=True</tt></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"repeating-command-options\">\n<h5>Repeating Command Options</h5>\n<p>If the packer command options can be specified multiple times, pass the value as a dictionary to packer.py.\nMultiple <tt><span class=\"pre\">-var</span></tt> option is an example of this.</p>\n<blockquote>\n$   packer build -var \u2018my_var1=my_val1\u2019 -var \u2018my_var2=my_val2\u2019 tests/templates/test_template1.json</blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">packerpy</span> <span class=\"kn\">import</span> <span class=\"n\">PackerExecutable</span>\n<span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">PackerExecutable</span><span class=\"p\">(</span><span class=\"s2\">\"/usr/local/bin/packer\"</span><span class=\"p\">)</span>\n<span class=\"n\">template</span> <span class=\"o\">=</span> <span class=\"s1\">'tests/templates/test_template1.json'</span>\n<span class=\"n\">template_vars</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s1\">'my_var1'</span><span class=\"p\">:</span> <span class=\"s1\">'my_val1'</span><span class=\"p\">,</span> <span class=\"s1\">'my_var2'</span><span class=\"p\">:</span> <span class=\"s1\">'my_val2'</span> <span class=\"p\">}</span>\n<span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">(</span><span class=\"n\">template</span><span class=\"p\">,</span>\n           <span class=\"n\">var</span><span class=\"o\">=</span><span class=\"n\">template_vars</span>\n           <span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n</div>\n<div id=\"build\">\n<h3>Build</h3>\n<blockquote>\n$   packer build template.json</blockquote>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">packerpy</span> <span class=\"kn\">import</span> <span class=\"n\">PackerExecutable</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">PackerExecutable</span><span class=\"p\">(</span><span class=\"s2\">\"/usr/local/bin/packer\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"n\">out</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">(</span><span class=\"s1\">'tests/templates/test_template1.json'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ret</span><span class=\"o\">==</span><span class=\"mi\">0</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">)</span>\n<span class=\"mi\">0</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s2\">\"1552841678,,ui,say,Build 'file' finished.</span><span class=\"se\">\\n</span><span class=\"s2\">1552841678,,ui,say,</span><span class=\"se\">\\\\</span><span class=\"s2\">n==&gt; Builds finished. The artifacts of successful builds are:</span><span class=\"se\">\\n</span><span class=\"s2\">1552841678,file,artifact-count,1</span><span class=\"se\">\\n</span><span class=\"s2\">1552841678,file,artifact,0,builder-id,packer.file</span><span class=\"se\">\\n</span><span class=\"s2\">1552841678,file,artifact,0,id,File</span><span class=\"se\">\\n</span><span class=\"s2\">1552841678,file,artifact,0,string,Stored file: /tmp/packer.test </span><span class=\"se\">\\n</span><span class=\"s2\">1552841678,file,artifact,0,files-count,1</span><span class=\"se\">\\n</span><span class=\"s2\">1552841678,file,artifact,0,file,0,/tmp/packer.test </span><span class=\"se\">\\n</span><span class=\"s2\">1552841678,file,artifact,0,end</span><span class=\"se\">\\n</span><span class=\"s2\">1552841678,,ui,say,--&gt; file: Stored file: /tmp/packer.test </span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s1\">''</span>\n</pre>\n<p>Example of a failed build.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">packerpy</span> <span class=\"kn\">import</span> <span class=\"n\">PackerExecutable</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">PackerExecutable</span><span class=\"p\">(</span><span class=\"s2\">\"/usr/local/bin/packer\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bad_template</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"{\n...     \"builders\": [\n...         {\n...             \"type\": \"amazon-ebs\",\n...             \"access_key\": \"...\"\n...         }\n...     ]\n... }\n... \"\"\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"n\">out</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">(</span><span class=\"n\">bad_template</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ret</span><span class=\"o\">==</span><span class=\"mi\">0</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">)</span>\n<span class=\"mi\">1</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s1\">'1552841800,,ui,error,5 error(s) occurred:</span><span class=\"se\">\\\\</span><span class=\"s1\">n</span><span class=\"se\">\\\\</span><span class=\"s1\">n* ami_name must be specified</span><span class=\"se\">\\\\</span><span class=\"s1\">n* ami_name must be between 3 and 128 characters long</span><span class=\"se\">\\\\</span><span class=\"s1\">n* An ssh_username must be specified</span><span class=\"se\">\\\\</span><span class=\"s1\">n  Note: some builders used to default ssh_username to \"root\".</span><span class=\"se\">\\\\</span><span class=\"s1\">n* A source_ami or source_ami_filter must be specified</span><span class=\"se\">\\\\</span><span class=\"s1\">n* An instance_type must be specified</span><span class=\"se\">\\n</span><span class=\"s1\">'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s1\">''</span>\n</pre>\n</div>\n<div id=\"inspect\">\n<h3>Inspect</h3>\n<blockquote>\n$   packer inspect template.json</blockquote>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">packerpy</span> <span class=\"kn\">import</span> <span class=\"n\">PackerExecutable</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">PackerExecutable</span><span class=\"p\">(</span><span class=\"s2\">\"/usr/local/bin/packer\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"n\">out</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">inspect</span><span class=\"p\">(</span><span class=\"s1\">'tests/templates/test_template1.json'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ret</span><span class=\"o\">==</span><span class=\"mi\">0</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">)</span>\n<span class=\"mi\">0</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s2\">\"1552841499,,ui,say,Optional variables and their defaults:</span><span class=\"se\">\\\\</span><span class=\"s2\">n</span><span class=\"se\">\\n</span><span class=\"s2\">1552841499,,template-variable,my_var1,{{env `key1`}},0</span><span class=\"se\">\\n</span><span class=\"s2\">1552841499,,ui,say,  my_var1 = {{env `key1`}}</span><span class=\"se\">\\n</span><span class=\"s2\">1552841499,,ui,say,</span><span class=\"se\">\\n</span><span class=\"s2\">1552841499,,ui,say,Builders:</span><span class=\"se\">\\\\</span><span class=\"s2\">n</span><span class=\"se\">\\n</span><span class=\"s2\">1552841499,,template-builder,file,file</span><span class=\"se\">\\n</span><span class=\"s2\">1552841499,,ui,say,  file</span><span class=\"se\">\\n</span><span class=\"s2\">1552841499,,ui,say,</span><span class=\"se\">\\n</span><span class=\"s2\">1552841499,,ui,say,Provisioners:</span><span class=\"se\">\\\\</span><span class=\"s2\">n</span><span class=\"se\">\\n</span><span class=\"s2\">1552841499,,ui,say,  &lt;No provisioners&gt;</span><span class=\"se\">\\n</span><span class=\"s2\">1552841499,,ui,say,</span><span class=\"se\">\\\\</span><span class=\"s2\">nNote: If your build names contain user variables or template</span><span class=\"se\">\\\\</span><span class=\"s2\">nfunctions such as 'timestamp'%!(PACKER_COMMA) these are processed at build time%!(PACKER_COMMA)</span><span class=\"se\">\\\\</span><span class=\"s2\">nand therefore only show in their raw form here.</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s1\">''</span>\n</pre>\n</div>\n<div id=\"validate\">\n<h3>Validate</h3>\n<blockquote>\n$   packer validate template.json</blockquote>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">packerpy</span> <span class=\"kn\">import</span> <span class=\"n\">PackerExecutable</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">PackerExecutable</span><span class=\"p\">(</span><span class=\"s2\">\"/usr/local/bin/packer\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"n\">out</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"s1\">'tests/templates/test_template1.json'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ret</span><span class=\"o\">==</span><span class=\"mi\">0</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">)</span>\n<span class=\"mi\">0</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s1\">'1552840497,,ui,say,Template validated successfully.</span><span class=\"se\">\\n</span><span class=\"s1\">'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s1\">''</span>\n</pre>\n<p>Example of a template which failed to validation.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">packerpy</span> <span class=\"kn\">import</span> <span class=\"n\">PackerExecutable</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">PackerExecutable</span><span class=\"p\">(</span><span class=\"s2\">\"/usr/local/bin/packer\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bad_template</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"{\n...     \"builders\": [\n...         {\n...             \"type\": \"amazon-ebs\",\n...             \"access_key\": \"...\"\n...         }\n...     ]\n... }\n... \"\"\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"n\">out</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">bad_template</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ret</span><span class=\"o\">==</span><span class=\"mi\">0</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">)</span>\n<span class=\"mi\">1</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s1\">'1552840892,,ui,error,Template validation failed. Errors are shown below.</span><span class=\"se\">\\\\</span><span class=\"s1\">n</span><span class=\"se\">\\n</span><span class=\"s1\">1552840892,,ui,error,Errors validating build </span><span class=\"se\">\\'</span><span class=\"s1\">amazon-ebs</span><span class=\"se\">\\'</span><span class=\"s1\">. 5 error(s) occurred:</span><span class=\"se\">\\\\</span><span class=\"s1\">n</span><span class=\"se\">\\\\</span><span class=\"s1\">n* ami_name must be specified</span><span class=\"se\">\\\\</span><span class=\"s1\">n* ami_name must be between 3 and 128 characters long</span><span class=\"se\">\\\\</span><span class=\"s1\">n* An ssh_username must be specified</span><span class=\"se\">\\\\</span><span class=\"s1\">n  Note: some builders used to default ssh_username to \"root\".</span><span class=\"se\">\\\\</span><span class=\"s1\">n* A source_ami or source_ami_filter must be specified</span><span class=\"se\">\\\\</span><span class=\"s1\">n* An instance_type must be specified</span><span class=\"se\">\\n</span><span class=\"s1\">'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s1\">''</span>\n</pre>\n</div>\n<div id=\"version\">\n<h3>Version</h3>\n<blockquote>\n$   packer version</blockquote>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">packerpy</span> <span class=\"kn\">import</span> <span class=\"n\">PackerExecutable</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">PackerExecutable</span><span class=\"p\">(</span><span class=\"s2\">\"/usr/local/bin/packer\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"n\">out</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">version</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ret</span><span class=\"o\">==</span><span class=\"mi\">0</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">)</span>\n<span class=\"mi\">0</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s1\">'1552840138,,version,1.0.3</span><span class=\"se\">\\n</span><span class=\"s1\">1552840138,,version-prelease,</span><span class=\"se\">\\n</span><span class=\"s1\">1552840138,,version-commit,c0ddb4a+CHANGES</span><span class=\"se\">\\n</span><span class=\"s1\">1552840138,,ui,say,Packer v1.0.3</span><span class=\"se\">\\n</span><span class=\"s1\">1552840138,,ui,say,</span><span class=\"se\">\\\\</span><span class=\"s1\">nYour version of Packer is out of date! The latest version</span><span class=\"se\">\\\\</span><span class=\"s1\">nis 1.3.5. You can update by downloading from www.packer.io</span><span class=\"se\">\\n</span><span class=\"s1\">'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s1\">''</span>\n</pre>\n</div>\n</div>\n<div id=\"licensing\">\n<h2>Licensing</h2>\n<p>packer.py is licensed under the <a href=\"https://opensource.org/licenses/Apache-2.0\" rel=\"nofollow\">Apache license 2.0</a>.\nSee <a href=\"https://github.com/mayn/packer.py/blob/master/LICENSE\" rel=\"nofollow\">LICENSE</a> for the full license text.</p>\n</div>\n\n          </div>"}, "last_serial": 4952625, "releases": {"0.0.1.dev0": [{"comment_text": "", "digests": {"md5": "0bd31ea2dd9931d11c038518f0445e18", "sha256": "8575599d82a60e5730215edb3e4db01ffe73c7af0e98f70bd05592c183082ccd"}, "downloads": -1, "filename": "packer.py-0.0.1.dev0.tar.gz", "has_sig": false, "md5_digest": "0bd31ea2dd9931d11c038518f0445e18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 869, "upload_time": "2018-03-21T18:17:47", "upload_time_iso_8601": "2018-03-21T18:17:47.179134Z", "url": "https://files.pythonhosted.org/packages/a7/dc/cc6979fdd3be911107593596373b6f25582c919885db47a43ed79ed0bf97/packer.py-0.0.1.dev0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ae0de2fe25eef89030f80327e6f0ef98", "sha256": "e44b4ee976043bf3c818ef8d549f98b350d689a20504f0467e7b6c7b05907500"}, "downloads": -1, "filename": "packer.py-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ae0de2fe25eef89030f80327e6f0ef98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3513, "upload_time": "2018-03-24T00:42:46", "upload_time_iso_8601": "2018-03-24T00:42:46.883436Z", "url": "https://files.pythonhosted.org/packages/e0/20/112d4ac90ab752988e119356da499f64be93b7ee37d63c14a88f9e989674/packer.py-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "9b3246ae0253bcae9bf155ff4a3c140e", "sha256": "2cb7dd2595bd32e7b3c02c9cc1f8b28841a0b659881089eb24b8b6dd469fb477"}, "downloads": -1, "filename": "packer.py-0.2.0.tar.gz", "has_sig": false, "md5_digest": "9b3246ae0253bcae9bf155ff4a3c140e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3558, "upload_time": "2018-03-27T01:42:02", "upload_time_iso_8601": "2018-03-27T01:42:02.963857Z", "url": "https://files.pythonhosted.org/packages/d7/a5/c39c84fe012fcfab95cf90b048856ca652f22b9faea92d1b6294caf3a50a/packer.py-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "23268ffb03f563c0cfc745cafd05a0d6", "sha256": "9aea9114cf83512eaa929bae1149dc476942a50fce23fb873983b9633a3c5674"}, "downloads": -1, "filename": "packer.py-0.3.0.tar.gz", "has_sig": false, "md5_digest": "23268ffb03f563c0cfc745cafd05a0d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6890, "upload_time": "2019-03-18T07:14:33", "upload_time_iso_8601": "2019-03-18T07:14:33.183699Z", "url": "https://files.pythonhosted.org/packages/bb/0c/43b4287a11e3d6997d5b3107169cae7eab93f16b92b01f8c99b02c45a111/packer.py-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "23268ffb03f563c0cfc745cafd05a0d6", "sha256": "9aea9114cf83512eaa929bae1149dc476942a50fce23fb873983b9633a3c5674"}, "downloads": -1, "filename": "packer.py-0.3.0.tar.gz", "has_sig": false, "md5_digest": "23268ffb03f563c0cfc745cafd05a0d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6890, "upload_time": "2019-03-18T07:14:33", "upload_time_iso_8601": "2019-03-18T07:14:33.183699Z", "url": "https://files.pythonhosted.org/packages/bb/0c/43b4287a11e3d6997d5b3107169cae7eab93f16b92b01f8c99b02c45a111/packer.py-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:07 2020"}