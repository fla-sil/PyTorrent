{"info": {"author": "Juan Carizza, Tim Zenderman, Emiliano Dalla Verde Marcozzi", "author_email": "juan.carizza@gmail.com, tzenderman@gmail.com, edvm@fedoraproject.org", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Utilities"], "description": "Django Phantom PDF\n==================\n\nA simple django app that takes the pain out of rendering PDFs from django views.\n\nQuick start\n-----------\n\n1. Install node and phantomjs:\n\n### On Mac OSX:\n\n    brew install node npm\n    npm install -g phantomjs\n\n### On Ubuntu:\n\n    apt-get install node npm\n    sudo npm install -g phantomjs\n\n\n2. Install django-phantom-pdf:\n\n\t\tpip install django-phantom-pdf\n\n3. That's it, you can now start using it in your django views like so and rendering PDFs!\n\n\t    from phantom_pdf import render_to_pdf\n    \tfrom django.http import HttpResponse\n\n\t    def home(request):\n    \t    # If 'print=pdf' in GET params, then render the PDF!\n        \tif request.GET.get(\"print\", None) == \"pdf\":\n            \tbasename = 'output'  # `.pdf` will be appended to this string.\n\t            return render_to_pdf(request, basename)\n                # If you want to change default format and orientation for this view\n                # return render_to_pdf(request, basename, format='A3', orientation='portrait')\n    \t    else:\n        \t    return HttpResponse(\"Hello World!\")\n\nAdvanced Use\n------------\n\nFor more advanced use and control, you can set the following variables in your setting.\nThey are already set to sane defaults, so it's not necessary unless you are looking for\nmore fine grained control.\n\n    PHANTOMJS_COOKIE_DIR = Directory where the temp cookies will be saved.\n    PHANTOMJS_PDF_DIR = Directory where you want to the PDF to be saved temporarily.\n    PHANTOMJS_BIN = Path to PhantomsJS binary.\n    PHANTOMJS_GENERATE_PDF = Path to generate_pdf.js file.\n    keep_pdf_files = Option to not delete the PDF file after rendering it.\n    PHANTOMJS_FORMAT = Page size to use\n    PHANTOMJS_ORIENTATION = How the page will be positioned when printing.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/BananaDesk/django-phantom-pdf/archive/v0.3.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/BananaDesk/django-phantom-pdf", "keywords": null, "license": "BSD License", "maintainer": null, "maintainer_email": null, "name": "django-phantom-pdf", "package_url": "https://pypi.org/project/django-phantom-pdf/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-phantom-pdf/", "project_urls": {"Download": "https://github.com/BananaDesk/django-phantom-pdf/archive/v0.3.tar.gz", "Homepage": "https://github.com/BananaDesk/django-phantom-pdf"}, "release_url": "https://pypi.org/project/django-phantom-pdf/0.3/", "requires_dist": null, "requires_python": null, "summary": "A simple django app for creating pdf files.", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            Django Phantom PDF<br>==================<br><br>A simple django app that takes the pain out of rendering PDFs from django views.<br><br>Quick start<br>-----------<br><br>1. Install node and phantomjs:<br><br>### On Mac OSX:<br><br>    brew install node npm<br>    npm install -g phantomjs<br><br>### On Ubuntu:<br><br>    apt-get install node npm<br>    sudo npm install -g phantomjs<br><br><br>2. Install django-phantom-pdf:<br><br>\t\tpip install django-phantom-pdf<br><br>3. That's it, you can now start using it in your django views like so and rendering PDFs!<br><br>\t    from phantom_pdf import render_to_pdf<br>    \tfrom django.http import HttpResponse<br><br>\t    def home(request):<br>    \t    # If 'print=pdf' in GET params, then render the PDF!<br>        \tif request.GET.get(\"print\", None) == \"pdf\":<br>            \tbasename = 'output'  # `.pdf` will be appended to this string.<br>\t            return render_to_pdf(request, basename)<br>                # If you want to change default format and orientation for this view<br>                # return render_to_pdf(request, basename, format='A3', orientation='portrait')<br>    \t    else:<br>        \t    return HttpResponse(\"Hello World!\")<br><br>Advanced Use<br>------------<br><br>For more advanced use and control, you can set the following variables in your setting.<br>They are already set to sane defaults, so it's not necessary unless you are looking for<br>more fine grained control.<br><br>    PHANTOMJS_COOKIE_DIR = Directory where the temp cookies will be saved.<br>    PHANTOMJS_PDF_DIR = Directory where you want to the PDF to be saved temporarily.<br>    PHANTOMJS_BIN = Path to PhantomsJS binary.<br>    PHANTOMJS_GENERATE_PDF = Path to generate_pdf.js file.<br>    keep_pdf_files = Option to not delete the PDF file after rendering it.<br>    PHANTOMJS_FORMAT = Page size to use<br>    PHANTOMJS_ORIENTATION = How the page will be positioned when printing.\n          </div>"}, "last_serial": 1463303, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "1f68d0ef93c62a0ace87bfc8755efed9", "sha256": "2703a4190df8f6f4fdb5cdb90ea49753980a08a6e14385ffdd89b22ad19ef698"}, "downloads": -1, "filename": "django-phantom-pdf-0.1.tar.gz", "has_sig": false, "md5_digest": "1f68d0ef93c62a0ace87bfc8755efed9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6042, "upload_time": "2014-02-23T18:17:39", "upload_time_iso_8601": "2014-02-23T18:17:39.949693Z", "url": "https://files.pythonhosted.org/packages/11/7e/d3d3db79801d1bf28d724a71f6a88a797f5fea638ab0fcd6334eab614f77/django-phantom-pdf-0.1.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "4f19df3ea87499b91447bdd393cba2eb", "sha256": "54237e55c728765623c33f9d8c394653d2bbc48d6ed4cbfa8481610a5eab21a6"}, "downloads": -1, "filename": "django-phantom-pdf-0.3.tar.gz", "has_sig": false, "md5_digest": "4f19df3ea87499b91447bdd393cba2eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8202, "upload_time": "2014-11-13T21:17:17", "upload_time_iso_8601": "2014-11-13T21:17:17.307832Z", "url": "https://files.pythonhosted.org/packages/3c/eb/5c536d1d650032db2dffd6fa1a7c7c4b877fd2a5b02bd0fcbd77e096d1d3/django-phantom-pdf-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4f19df3ea87499b91447bdd393cba2eb", "sha256": "54237e55c728765623c33f9d8c394653d2bbc48d6ed4cbfa8481610a5eab21a6"}, "downloads": -1, "filename": "django-phantom-pdf-0.3.tar.gz", "has_sig": false, "md5_digest": "4f19df3ea87499b91447bdd393cba2eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8202, "upload_time": "2014-11-13T21:17:17", "upload_time_iso_8601": "2014-11-13T21:17:17.307832Z", "url": "https://files.pythonhosted.org/packages/3c/eb/5c536d1d650032db2dffd6fa1a7c7c4b877fd2a5b02bd0fcbd77e096d1d3/django-phantom-pdf-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:03 2020"}