{"info": {"author": "Thomas Yager-Madden", "author_email": "thomas@yager-madden.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Environment :: Web Environment", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Database :: Front-Ends", "Topic :: Software Development :: Libraries", "Topic :: Utilities"], "description": "\n# sqla-raw\n\nI've copy-pasted this enough times that it seemed worth packaging. Really not much more than a single method (`raw.db.result`) to submit SQL to a database using a SQLAlchemy engine connection, and get results as a list of dictionaries, with each dict keyed by result set column names.\n\n## Installation\n\n`pipenv install sqla-raw[pg]`\n\n## Usage\n\nConfigure your database connection string by setting `$DATABASE_URL` in your environment.\n\n```python\n>>> from raw import db\n>>> x = db.result('select version()');\n>>> x\n[{'version': 'PostgreSQL 10.10 on x86_64-apple-darwin14.5.0, compiled by Apple LLVM version 7.0.0 (clang-700.1.76), 64-bit'}]\n```\n\nBecause it's SQLAlchemy, you can use named parameters in your SQL string with colon-prepended `:key` format, and assign values in `kwargs`.\n\nAlso, by setting optional parameter `jinja=True`, you can use Jinja2 templating syntax to interpolate the query, if desired. (It uses a `SandboxedEnvironment`, but avoid this option with untrusted inputs, for obvious reasons.)\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tym-xqo/sqla-raw", "keywords": "", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "sqla-raw", "package_url": "https://pypi.org/project/sqla-raw/", "platform": "", "project_url": "https://pypi.org/project/sqla-raw/", "project_urls": {"Homepage": "https://github.com/tym-xqo/sqla-raw"}, "release_url": "https://pypi.org/project/sqla-raw/0.0.2/", "requires_dist": ["jinja2", "sqlalchemy", "PyMySQL ; extra == 'mysql'", "psycopg2 ; extra == 'pg'"], "requires_python": ">=3.6.0", "summary": "A tiny library for submitting raw SQL via SQLAlchemy", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>sqla-raw</h1>\n<p>I've copy-pasted this enough times that it seemed worth packaging. Really not much more than a single method (<code>raw.db.result</code>) to submit SQL to a database using a SQLAlchemy engine connection, and get results as a list of dictionaries, with each dict keyed by result set column names.</p>\n<h2>Installation</h2>\n<p><code>pipenv install sqla-raw[pg]</code></p>\n<h2>Usage</h2>\n<p>Configure your database connection string by setting <code>$DATABASE_URL</code> in your environment.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">raw</span> <span class=\"kn\">import</span> <span class=\"n\">db</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">(</span><span class=\"s1\">'select version()'</span><span class=\"p\">);</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">x</span>\n<span class=\"p\">[{</span><span class=\"s1\">'version'</span><span class=\"p\">:</span> <span class=\"s1\">'PostgreSQL 10.10 on x86_64-apple-darwin14.5.0, compiled by Apple LLVM version 7.0.0 (clang-700.1.76), 64-bit'</span><span class=\"p\">}]</span>\n</pre>\n<p>Because it's SQLAlchemy, you can use named parameters in your SQL string with colon-prepended <code>:key</code> format, and assign values in <code>kwargs</code>.</p>\n<p>Also, by setting optional parameter <code>jinja=True</code>, you can use Jinja2 templating syntax to interpolate the query, if desired. (It uses a <code>SandboxedEnvironment</code>, but avoid this option with untrusted inputs, for obvious reasons.)</p>\n\n          </div>"}, "last_serial": 6988710, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ffa72cc7f4beb6cd65b38b771df087d4", "sha256": "f3302736d686240d353b8be0e17925876caed32eff49c046db9bbe01d13e38bb"}, "downloads": -1, "filename": "sqla-raw-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ffa72cc7f4beb6cd65b38b771df087d4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 3005, "upload_time": "2020-04-09T18:28:00", "upload_time_iso_8601": "2020-04-09T18:28:00.791902Z", "url": "https://files.pythonhosted.org/packages/53/c3/11938294eeaabed4b7feeeb3c909e1a8b875c15dec63effffb1979be7dcd/sqla-raw-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "e1d912fe2ece69420cb4201a7def6b2d", "sha256": "28d989cfd40c547129a11e84d8889fb2bd598e7bd1d56eb92c06de1c4720fc73"}, "downloads": -1, "filename": "sqla_raw-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e1d912fe2ece69420cb4201a7def6b2d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 3639, "upload_time": "2020-04-09T19:28:17", "upload_time_iso_8601": "2020-04-09T19:28:17.140140Z", "url": "https://files.pythonhosted.org/packages/b9/3e/9bb241cc36039f098c601b472776f2c22f354a3aefdf0c3be6aa6fcf23dd/sqla_raw-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2600a4a9d9ac9d55a124469446ba6ec", "sha256": "778e5b34cfc11267554df7c094adc9554ceaa01a55e71b13bea0be0bc74b5b27"}, "downloads": -1, "filename": "sqla-raw-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c2600a4a9d9ac9d55a124469446ba6ec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 3650, "upload_time": "2020-04-09T19:28:18", "upload_time_iso_8601": "2020-04-09T19:28:18.475570Z", "url": "https://files.pythonhosted.org/packages/b5/27/b4420f32891faa9dcc0acc2c9196995e2296d4d014008012a25a2b1e3312/sqla-raw-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e1d912fe2ece69420cb4201a7def6b2d", "sha256": "28d989cfd40c547129a11e84d8889fb2bd598e7bd1d56eb92c06de1c4720fc73"}, "downloads": -1, "filename": "sqla_raw-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e1d912fe2ece69420cb4201a7def6b2d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 3639, "upload_time": "2020-04-09T19:28:17", "upload_time_iso_8601": "2020-04-09T19:28:17.140140Z", "url": "https://files.pythonhosted.org/packages/b9/3e/9bb241cc36039f098c601b472776f2c22f354a3aefdf0c3be6aa6fcf23dd/sqla_raw-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2600a4a9d9ac9d55a124469446ba6ec", "sha256": "778e5b34cfc11267554df7c094adc9554ceaa01a55e71b13bea0be0bc74b5b27"}, "downloads": -1, "filename": "sqla-raw-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c2600a4a9d9ac9d55a124469446ba6ec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 3650, "upload_time": "2020-04-09T19:28:18", "upload_time_iso_8601": "2020-04-09T19:28:18.475570Z", "url": "https://files.pythonhosted.org/packages/b5/27/b4420f32891faa9dcc0acc2c9196995e2296d4d014008012a25a2b1e3312/sqla-raw-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:49 2020"}