{"info": {"author": "Simon Willison, Jacob Kaplan-Moss, Tim Martin", "author_email": "tim.martin@airsupply.org.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP"], "description": "django-shorturls\n================\n\n.. image:: https://travis-ci.org/bfirsh/django-shorturls.svg?branch=master\n    :target: https://travis-ci.org/bfirsh/django-shorturls\n.. image:: https://badge.fury.io/py/django-shorturls.svg\n    :target: http://badge.fury.io/py/django-shorturls\n\nA custom URL shortening app for Django, including easy ``rev=canonical``\nsupport.\n\nMost code was originally by Simon Willison; see\nhttps://simonwillison.net/2009/Apr/11/revcanonical/ for details. Improved\nslightly and packaged by Jacob Kaplan-Moss. Currently maintained by\nBen Firshman.\n\nPatches welcome: http://github.com/bfirsh/django-shorturls\n\nUsage\n=====\n\nSo, you want to host your own short URLs on your Django site:\n\n1. In your settings, define a set of prefixes for short URLs:\n\n   .. code-block:: python\n   \n        SHORTEN_MODELS = {\n            'A': 'myapp.animal',\n            'V': 'myapp.vegetable',\n            'M': 'myapp.mineral'\n        }\n\n   The keys are string prefixes; they can be any string, actually,\n   but since we're going for short a single character is probably good.\n   \n   Values are the (hopefully-familiar) ``\"<app-name>.<model-class>\"`` used\n   by Django to identify a model. Remember: ``app-name`` is the\n   (case-sensitive) last bit of your app's name in ``INSTALLED_APPS``, and\n   ``<model-class>`` is your model class's name, lowercased.\n   \n   Make sure your models have a ``get_absolute_url()`` method defined.\n    \n2. Wire up the redirect view by adding to your URLconf:\n\n   .. code-block:: python\n   \n        ('^short/', include('shorturls.urls'))\n        \n3. If you'd like to quickly link to shortened URLs in your templates, stick\n   ``\"shorturls\"`` in ``INSTALLED_APPS``, and then in your templates do:\n   \n   .. code-block:: html+django\n   \n        {% load shorturl %}\n        <a href=\"{% shorturl object %}\">...</a>\n        \n   (where ``object`` is a model instance).\n  \n   Alternatively:\n  \n   .. code-block:: html+django\n   \n        {% load shorturl %}\n        {% revcanonical object %}\n        \n   This generates the whole ``<link rev=\"canonical\" href=\"...\">`` tag for\n   you.\n            \nThat's it.\n\nIf you'd like more control, keep reading.\n\nSettings\n========\n\nAvailable settings are:\n\n``SHORTEN_MODELS``\n    You've seen this one.\n    \n``SHORT_BASE_URL``\n    If defined, the ``shorturl`` and ``revcanonical`` template tags will\n    prefix generated URLs with this value. Use this if you've got a shorter\n    domain name you'd like to use for small URLs.\n    \n    For example, given ``SHORT_BASE_URL = 'http://exm.pl/'``, ``{% shorturl\n    obj %}`` would return something like ``http://exm.pl/AbCd``.\n\n``SHORTEN_FULL_BASE_URL``\n    The domain to redirect to when redirecting away from the small URL.\n    Again, you'll use this if your short URL base and your \"real\" site\n    differ.\n    \n    If not defined, the redirect view will try to guess the proper domain by\n    consulting the ``django.contrib.sites`` framework, if installed, or the\n    requested domain, if not.\n\n\n``SHORTURLS_DEFAULT_CONVERTER``\n    The converter that is used to translate between short URLs and model IDs.\n    Defaults to the built in base 62 conversion.\n\n    Available converters:\n\n    - ``shorturls.baseconv.base62`` Base 62 encoding.\n    - ``shorturls.baseconv.base32`` `Douglas Crockford's base 32`_.\n    - ``shorturls.baseconv.hexconv`` Hex encoding.\n    - ``shorturls.baseconv.bin`` Binary encoding, because why not.\n\n.. _Douglas Crockford's base 32: http://www.crockford.com/wrmg/base32.html", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/airsupply-solutions/django-shorturls", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "airsupply-django-shorturls", "package_url": "https://pypi.org/project/airsupply-django-shorturls/", "platform": "", "project_url": "https://pypi.org/project/airsupply-django-shorturls/", "project_urls": {"Homepage": "https://github.com/airsupply-solutions/django-shorturls"}, "release_url": "https://pypi.org/project/airsupply-django-shorturls/2.0.1/", "requires_dist": null, "requires_python": "", "summary": "A URL shortening app for Django (branched version maintained by Airsupply).", "version": "2.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-shorturls\">\n<h2>django-shorturls</h2>\n<a href=\"https://travis-ci.org/bfirsh/django-shorturls\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/bfirsh/django-shorturls.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2b8b3cf0f6ed3488288936d93e8ad8dd06f7c0db/68747470733a2f2f7472617669732d63692e6f72672f6266697273682f646a616e676f2d73686f727475726c732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://badge.fury.io/py/django-shorturls\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/django-shorturls.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cbcedb261b7bbc46008ebb3fb9c6f1f2ec1f8f01/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d73686f727475726c732e737667\"></a>\n<p>A custom URL shortening app for Django, including easy <tt>rev=canonical</tt>\nsupport.</p>\n<p>Most code was originally by Simon Willison; see\n<a href=\"https://simonwillison.net/2009/Apr/11/revcanonical/\" rel=\"nofollow\">https://simonwillison.net/2009/Apr/11/revcanonical/</a> for details. Improved\nslightly and packaged by Jacob Kaplan-Moss. Currently maintained by\nBen Firshman.</p>\n<p>Patches welcome: <a href=\"http://github.com/bfirsh/django-shorturls\" rel=\"nofollow\">http://github.com/bfirsh/django-shorturls</a></p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>So, you want to host your own short URLs on your Django site:</p>\n<ol>\n<li><p>In your settings, define a set of prefixes for short URLs:</p>\n<pre><span class=\"n\">SHORTEN_MODELS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'A'</span><span class=\"p\">:</span> <span class=\"s1\">'myapp.animal'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'V'</span><span class=\"p\">:</span> <span class=\"s1\">'myapp.vegetable'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'M'</span><span class=\"p\">:</span> <span class=\"s1\">'myapp.mineral'</span>\n<span class=\"p\">}</span>\n</pre>\n<p>The keys are string prefixes; they can be any string, actually,\nbut since we\u2019re going for short a single character is probably good.</p>\n<p>Values are the (hopefully-familiar) <tt><span class=\"pre\">\"&lt;app-name&gt;.&lt;model-class&gt;\"</span></tt> used\nby Django to identify a model. Remember: <tt><span class=\"pre\">app-name</span></tt> is the\n(case-sensitive) last bit of your app\u2019s name in <tt>INSTALLED_APPS</tt>, and\n<tt><span class=\"pre\">&lt;model-class&gt;</span></tt> is your model class\u2019s name, lowercased.</p>\n<p>Make sure your models have a <tt>get_absolute_url()</tt> method defined.</p>\n</li>\n<li><p>Wire up the redirect view by adding to your URLconf:</p>\n<pre><span class=\"p\">(</span><span class=\"s1\">'^short/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'shorturls.urls'</span><span class=\"p\">))</span>\n</pre>\n</li>\n<li><p>If you\u2019d like to quickly link to shortened URLs in your templates, stick\n<tt>\"shorturls\"</tt> in <tt>INSTALLED_APPS</tt>, and then in your templates do:</p>\n<pre><span class=\"cp\">{%</span> <span class=\"k\">load</span> <span class=\"nv\">shorturl</span> <span class=\"cp\">%}</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"</span><span class=\"cp\">{%</span> <span class=\"k\">shorturl</span> <span class=\"nv\">object</span> <span class=\"cp\">%}</span><span class=\"s\">\"</span><span class=\"p\">&gt;</span>...<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n</pre>\n<p>(where <tt>object</tt> is a model instance).</p>\n<p>Alternatively:</p>\n<pre><span class=\"cp\">{%</span> <span class=\"k\">load</span> <span class=\"nv\">shorturl</span> <span class=\"cp\">%}</span>\n<span class=\"cp\">{%</span> <span class=\"k\">revcanonical</span> <span class=\"nv\">object</span> <span class=\"cp\">%}</span>\n</pre>\n<p>This generates the whole <tt>&lt;link <span class=\"pre\">rev=\"canonical\"</span> <span class=\"pre\">href=\"...\"&gt;</span></tt> tag for\nyou.</p>\n</li>\n</ol>\n<p>That\u2019s it.</p>\n<p>If you\u2019d like more control, keep reading.</p>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p>Available settings are:</p>\n<dl>\n<dt><tt>SHORTEN_MODELS</tt></dt>\n<dd>You\u2019ve seen this one.</dd>\n<dt><tt>SHORT_BASE_URL</tt></dt>\n<dd><p>If defined, the <tt>shorturl</tt> and <tt>revcanonical</tt> template tags will\nprefix generated URLs with this value. Use this if you\u2019ve got a shorter\ndomain name you\u2019d like to use for small URLs.</p>\n<p>For example, given <tt>SHORT_BASE_URL = <span class=\"pre\">'http://exm.pl/'</span></tt>, <tt>{% shorturl\nobj %}</tt> would return something like <tt><span class=\"pre\">http://exm.pl/AbCd</span></tt>.</p>\n</dd>\n<dt><tt>SHORTEN_FULL_BASE_URL</tt></dt>\n<dd><p>The domain to redirect to when redirecting away from the small URL.\nAgain, you\u2019ll use this if your short URL base and your \u201creal\u201d site\ndiffer.</p>\n<p>If not defined, the redirect view will try to guess the proper domain by\nconsulting the <tt>django.contrib.sites</tt> framework, if installed, or the\nrequested domain, if not.</p>\n</dd>\n<dt><tt>SHORTURLS_DEFAULT_CONVERTER</tt></dt>\n<dd><p>The converter that is used to translate between short URLs and model IDs.\nDefaults to the built in base 62 conversion.</p>\n<p>Available converters:</p>\n<ul>\n<li><tt>shorturls.baseconv.base62</tt> Base 62 encoding.</li>\n<li><tt>shorturls.baseconv.base32</tt> <a href=\"http://www.crockford.com/wrmg/base32.html\" rel=\"nofollow\">Douglas Crockford\u2019s base 32</a>.</li>\n<li><tt>shorturls.baseconv.hexconv</tt> Hex encoding.</li>\n<li><tt>shorturls.baseconv.bin</tt> Binary encoding, because why not.</li>\n</ul>\n</dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 6647155, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "161cc975525f3361ea80954d72fe1b4d", "sha256": "67289894c626478b8cb404303cf371ecd9c53c45398c4951d26221c0c6119dbd"}, "downloads": -1, "filename": "airsupply-django-shorturls-2.0.0.tar.gz", "has_sig": false, "md5_digest": "161cc975525f3361ea80954d72fe1b4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7344, "upload_time": "2019-12-26T10:30:10", "upload_time_iso_8601": "2019-12-26T10:30:10.794487Z", "url": "https://files.pythonhosted.org/packages/dd/30/81d2155f32146cb708e362ed0b4e16fae1984d317726595f2cd35f10e23d/airsupply-django-shorturls-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "5cea01a2c71659dd325be364f668fe42", "sha256": "a5495e1de6a56b340f40f28b1b7b433fe8866027a36e5165d55ffe0953f66db0"}, "downloads": -1, "filename": "airsupply-django-shorturls-2.0.1.tar.gz", "has_sig": false, "md5_digest": "5cea01a2c71659dd325be364f668fe42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8799, "upload_time": "2020-02-17T15:53:06", "upload_time_iso_8601": "2020-02-17T15:53:06.204755Z", "url": "https://files.pythonhosted.org/packages/d0/53/69a15346be80a2f2254a22ff6ded11fbf17ac6b9e3eec84400399ea7f585/airsupply-django-shorturls-2.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5cea01a2c71659dd325be364f668fe42", "sha256": "a5495e1de6a56b340f40f28b1b7b433fe8866027a36e5165d55ffe0953f66db0"}, "downloads": -1, "filename": "airsupply-django-shorturls-2.0.1.tar.gz", "has_sig": false, "md5_digest": "5cea01a2c71659dd325be364f668fe42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8799, "upload_time": "2020-02-17T15:53:06", "upload_time_iso_8601": "2020-02-17T15:53:06.204755Z", "url": "https://files.pythonhosted.org/packages/d0/53/69a15346be80a2f2254a22ff6ded11fbf17ac6b9e3eec84400399ea7f585/airsupply-django-shorturls-2.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:26 2020"}