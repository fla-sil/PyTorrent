{"info": {"author": "Kevin Weiss, Sebastian Meiling", "author_email": "weiss.kevin604@gmail.com, s@mlng.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "PHiLIP PAL (PHiLIP Protocol Abstraction Layer)\n================================\n\n## Description\n\nA set of python modules that abstract away and standardize shell based command for bare metal memory map access.\nPHiLIP PAL is used to interface to a memory map specified from a csv or by the device.\nIt handles the parsing of offsets, sizes, etc. of the device.\n\nTo use this interface a memory must be provided, by default the package contains the PHiLIP memory map for all the versions.\nIf a development version of PHiLIP is used and a memory map has not been released, the memory map can be scanned from the device.\n\nPHiLIP PAL provides a philip_shell which developers can use for manual tests and interacting with PHiLIP.\nFor automated scripts, a Phil() class is provided.\n\nFor the API check the docstring of [philip_shell.py](IF/philip_pal/philip_pal/philip_shell.py) or [philip_if.py](IF/philip_pal/philip_pal/philip_if.py)\n\n### PHiLIP PAL Installation\nTo interface to PHiLIP first install the philip_pal for python3.\n\n`sudo pip3 install philip_pal`\n\n### Running PHiLIP PAL Shell\nFirst connected PHiLIP to the computer so a serial port connection is available.\n\nThis script handles interfacing to the PHiLIP device.  It parses data and\nexposes from the PhilipExtIf class to be run in a shell.\n\nThe pip installation installs a script that can be run with `philip_shell`\n\nThe purpose of this script is allow easy setup and manual usage of PHiLIP.\n\nUsage\n-----\n\n```\nusage: philip_shell.py  [-h]\n                        [--loglevel {debug,info,warning,error,fatal,critical}]\n                        [--port PORT]\n                        [--filter-data]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --loglevel {debug,info,warning,error,fatal,critical}\n                        Python logger log level (default: warning)\n  --port, -p\n                        Specify the serial port\n  --data_only, -do\n                        Filters data from philip responses to only display\n                        what is needed (default: False)\n```\n\nUpon starting the shell use the `help` command to see what functionality is available.\n\nSee the main page for more getting started and examples.\n\n### Running PHiLIP PAL from CLI\nBesides the full PHiLIP PAL Shell there is also CLI mode for simple one-shot\naccess to PHiLIP interface functions. It allows to reset the PHiLIP MCU and\nthe connected DUT.\n\nAfter connecting PHiLIP simply run `python3 -m philip_pal --help` to get the\nfollowing full usage description:\n\n```\nusage: python3 -m philip_pal [-h] [--verbose] [--dut_reset] [--reset] [port]\n\npositional arguments:\n  port         PHiLIP serial port\n\noptional arguments:\n  -h, --help   show this help message and exit\n  --verbose    Enable more output\n  --dut_reset  Reset device-under-test (DUT)\n  --reset      Reset PHiLIP MCU\n```\n\nTo get output use `--verbose`, otherwise commands will silently be executed.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/riot-appstore/PHiLIP", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "philip-pal", "package_url": "https://pypi.org/project/philip-pal/", "platform": "any", "project_url": "https://pypi.org/project/philip-pal/", "project_urls": {"Homepage": "https://github.com/riot-appstore/PHiLIP"}, "release_url": "https://pypi.org/project/philip-pal/1.2.0/", "requires_dist": null, "requires_python": ">=3.4.*", "summary": "Protocol abstraction and parser for PHiLIP", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PHiLIP PAL (PHiLIP Protocol Abstraction Layer)</h1>\n<h2>Description</h2>\n<p>A set of python modules that abstract away and standardize shell based command for bare metal memory map access.\nPHiLIP PAL is used to interface to a memory map specified from a csv or by the device.\nIt handles the parsing of offsets, sizes, etc. of the device.</p>\n<p>To use this interface a memory must be provided, by default the package contains the PHiLIP memory map for all the versions.\nIf a development version of PHiLIP is used and a memory map has not been released, the memory map can be scanned from the device.</p>\n<p>PHiLIP PAL provides a philip_shell which developers can use for manual tests and interacting with PHiLIP.\nFor automated scripts, a Phil() class is provided.</p>\n<p>For the API check the docstring of <a href=\"IF/philip_pal/philip_pal/philip_shell.py\" rel=\"nofollow\">philip_shell.py</a> or <a href=\"IF/philip_pal/philip_pal/philip_if.py\" rel=\"nofollow\">philip_if.py</a></p>\n<h3>PHiLIP PAL Installation</h3>\n<p>To interface to PHiLIP first install the philip_pal for python3.</p>\n<p><code>sudo pip3 install philip_pal</code></p>\n<h3>Running PHiLIP PAL Shell</h3>\n<p>First connected PHiLIP to the computer so a serial port connection is available.</p>\n<p>This script handles interfacing to the PHiLIP device.  It parses data and\nexposes from the PhilipExtIf class to be run in a shell.</p>\n<p>The pip installation installs a script that can be run with <code>philip_shell</code></p>\n<p>The purpose of this script is allow easy setup and manual usage of PHiLIP.</p>\n<h2>Usage</h2>\n<pre><code>usage: philip_shell.py  [-h]\n                        [--loglevel {debug,info,warning,error,fatal,critical}]\n                        [--port PORT]\n                        [--filter-data]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --loglevel {debug,info,warning,error,fatal,critical}\n                        Python logger log level (default: warning)\n  --port, -p\n                        Specify the serial port\n  --data_only, -do\n                        Filters data from philip responses to only display\n                        what is needed (default: False)\n</code></pre>\n<p>Upon starting the shell use the <code>help</code> command to see what functionality is available.</p>\n<p>See the main page for more getting started and examples.</p>\n<h3>Running PHiLIP PAL from CLI</h3>\n<p>Besides the full PHiLIP PAL Shell there is also CLI mode for simple one-shot\naccess to PHiLIP interface functions. It allows to reset the PHiLIP MCU and\nthe connected DUT.</p>\n<p>After connecting PHiLIP simply run <code>python3 -m philip_pal --help</code> to get the\nfollowing full usage description:</p>\n<pre><code>usage: python3 -m philip_pal [-h] [--verbose] [--dut_reset] [--reset] [port]\n\npositional arguments:\n  port         PHiLIP serial port\n\noptional arguments:\n  -h, --help   show this help message and exit\n  --verbose    Enable more output\n  --dut_reset  Reset device-under-test (DUT)\n  --reset      Reset PHiLIP MCU\n</code></pre>\n<p>To get output use <code>--verbose</code>, otherwise commands will silently be executed.</p>\n\n          </div>"}, "last_serial": 7059950, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "496184d95c4afa4d8d539da4eddf0965", "sha256": "11589b5c6c2b7c00184a798dadcf633cd856030f6b01dde2a210ed6cdd641c4a"}, "downloads": -1, "filename": "philip_pal-0.0.1.tar.gz", "has_sig": false, "md5_digest": "496184d95c4afa4d8d539da4eddf0965", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4.*", "size": 17943, "upload_time": "2019-04-23T08:46:40", "upload_time_iso_8601": "2019-04-23T08:46:40.773754Z", "url": "https://files.pythonhosted.org/packages/b7/f1/a9fb8d7d20628646bb8783b566a4426d859dde5e61441a01260e9799c7ea/philip_pal-0.0.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "8af61594cd8ec41428d1162b581e0ea0", "sha256": "0f6cd31417c4e1f99adc38c99fc452d82aea3e28d862c5bd513cb4c6d388f16f"}, "downloads": -1, "filename": "philip_pal-1.0.0.tar.gz", "has_sig": false, "md5_digest": "8af61594cd8ec41428d1162b581e0ea0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4.*", "size": 16534, "upload_time": "2019-05-08T08:15:52", "upload_time_iso_8601": "2019-05-08T08:15:52.423621Z", "url": "https://files.pythonhosted.org/packages/f8/9e/7deaa7ed897e1519e1815122a059fff78e91a0c1f3911b1fd532cb3b73a2/philip_pal-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "d2348e38af326d2a60727685e8eb6053", "sha256": "a0f8330829dd68491e2871c512199a228d17d11c222419e59c978b8674c38342"}, "downloads": -1, "filename": "philip_pal-1.1.0.tar.gz", "has_sig": false, "md5_digest": "d2348e38af326d2a60727685e8eb6053", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4.*", "size": 17178, "upload_time": "2019-06-14T09:11:34", "upload_time_iso_8601": "2019-06-14T09:11:34.984022Z", "url": "https://files.pythonhosted.org/packages/04/f5/611f49e150ef9a8055e404ad1ac2706e9b826d6c99924d8d19151ac28519/philip_pal-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "7892c59c81a8dc49b0742d1bc9eccb2a", "sha256": "3f5d25bd42fafda65f49b06dfe227195f9d41d4eee5be41f45718d98c4b00950"}, "downloads": -1, "filename": "philip_pal-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7892c59c81a8dc49b0742d1bc9eccb2a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4.*", "size": 35415, "upload_time": "2020-04-20T13:12:05", "upload_time_iso_8601": "2020-04-20T13:12:05.925048Z", "url": "https://files.pythonhosted.org/packages/ab/10/54d4a24a7134f2b69ce93505e0c6017cce4b357dccbf8327c68c1f81b11e/philip_pal-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca4c36b892b2930fa8aab2cf32f5f349", "sha256": "44a2f1792277b177971c13a3c9392b8cab85fcb5d79fd4c63232934529f4ce30"}, "downloads": -1, "filename": "philip_pal-1.1.1.tar.gz", "has_sig": false, "md5_digest": "ca4c36b892b2930fa8aab2cf32f5f349", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4.*", "size": 17759, "upload_time": "2019-08-23T17:19:28", "upload_time_iso_8601": "2019-08-23T17:19:28.669316Z", "url": "https://files.pythonhosted.org/packages/32/8f/b245ef1cf789385f83c0f1b786d2fd22e6d7949918d78503785ce6c61531/philip_pal-1.1.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "25768902b435fee9bcb99f6aee3ce79f", "sha256": "e081da3b4833e829c21e99bd97d18f54eaa78bb9e87625bb32f83b5c06fa5009"}, "downloads": -1, "filename": "philip_pal-1.2.0-py3.6.egg", "has_sig": false, "md5_digest": "25768902b435fee9bcb99f6aee3ce79f", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.4.*", "size": 54828, "upload_time": "2020-04-06T12:49:07", "upload_time_iso_8601": "2020-04-06T12:49:07.169001Z", "url": "https://files.pythonhosted.org/packages/c4/c6/cd6308d9d8570a63b9919f54da64ee3d7a08c5c22fff4caaf868a7901e61/philip_pal-1.2.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6200e160dd837f25695438d143f8c6f", "sha256": "f8e13bca6928ab0a87925fa71637798ff6ef65cec189555f5bf9331875bc568e"}, "downloads": -1, "filename": "philip_pal-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b6200e160dd837f25695438d143f8c6f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4.*", "size": 35392, "upload_time": "2020-04-20T13:12:07", "upload_time_iso_8601": "2020-04-20T13:12:07.395850Z", "url": "https://files.pythonhosted.org/packages/82/e4/e690bced373375a79fb640bf3dd023ffb355094a7b554982e1d28e26418d/philip_pal-1.2.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "25768902b435fee9bcb99f6aee3ce79f", "sha256": "e081da3b4833e829c21e99bd97d18f54eaa78bb9e87625bb32f83b5c06fa5009"}, "downloads": -1, "filename": "philip_pal-1.2.0-py3.6.egg", "has_sig": false, "md5_digest": "25768902b435fee9bcb99f6aee3ce79f", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.4.*", "size": 54828, "upload_time": "2020-04-06T12:49:07", "upload_time_iso_8601": "2020-04-06T12:49:07.169001Z", "url": "https://files.pythonhosted.org/packages/c4/c6/cd6308d9d8570a63b9919f54da64ee3d7a08c5c22fff4caaf868a7901e61/philip_pal-1.2.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6200e160dd837f25695438d143f8c6f", "sha256": "f8e13bca6928ab0a87925fa71637798ff6ef65cec189555f5bf9331875bc568e"}, "downloads": -1, "filename": "philip_pal-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b6200e160dd837f25695438d143f8c6f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4.*", "size": 35392, "upload_time": "2020-04-20T13:12:07", "upload_time_iso_8601": "2020-04-20T13:12:07.395850Z", "url": "https://files.pythonhosted.org/packages/82/e4/e690bced373375a79fb640bf3dd023ffb355094a7b554982e1d28e26418d/philip_pal-1.2.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:55:31 2020"}