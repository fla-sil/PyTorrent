{"info": {"author": "Val L33", "author_email": "val@neekware.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Utilities"], "description": "django-emailmgr\n================\n\nDjango Email Manager (emailmgr) is an application that helps with post-registration email management\".\n``You can associate multiple email addresses to a single Django User.``\n\nThis application comes into the picture only after a user has been created, activated\nand logged in.\n\nIf your requirements is for email management prior to user registration please take a \nlook at ``django-registration`` or ``django-email-confirmation``.\n\nThis application was inspired by bitbucket.org's email management system as well as \nthe mentioned applications.\n\n\nCurrent Features:\n_________________\nAssumption:\n    * - Django user has been created \n        * - Either via proper registration and activation or via the admin interface or scripts\n    * - This application first looks for its templates in: EMAIL_MGR_TEMPLATE_PATH, then\n        it looks for <template_dir>/emailmgr/\n        * - This way, projects can place the required templates at a location of their choice\n            relative to the <tempalate_dir> of course\n    * - Three templates are found in the template directory as stated above\n        * - email subject template - emailmgr_activation_subject.txt\n            * - extra context: current_site\n        * - email message body template - emailmgr_activation_message.txt\n            * - extra context: current_site, activate_url & user\n        * - email list & manipulation template - emailmgr_email_list.html\n            * - extra context: emails_list and add_email_form\n                * - email_list includes all emails for this users\n                    * - sorted by: \n                        1. primary - set directly via django or by emailmgr\n                        2. activated - confirmed emails and can be set primary\n                        3. not activated but activation email sent\n                        5. not activated and activation email not sent\n                * - add_email_form is a form for adding a new email address to a user\n\n1. This app latches on the ``post_save`` signals for (user) and execute the following:\n    A. Creates an email address object with the following attributes\n        * - email = user.email (if not blank)\n        * - is_active = True\n        * - is_primary = True\n        * - is_activation_sent = Don't care\n        * - identifier = a random string (used for activation)\n        * - Note: user login is not required\n        * - Note: email is only created if user has a valid email address\n        * - Note: this email is automatically considered as primary and activation is skipped\n\n2. Latch on the ``post_delete`` signals on (user) and execute the following:\n    A. Deletes all email addresses associated with the (just) deleted user\n    \n3. Provides URL to:\n    A. Adds an email address to the logged in user's account:\n        * - http://example.com/email/add/, \n        * - Email address is created and associated with the logged in user\n        * - Email address remains inactive and cannot be made primary\n        * - User is redirected to http://example.com/email/list/\n        * - ``email_list`` and ``email_form`` are passed into the template\n        \n    B. Deletes an email address from a user account\n        * - http://example.com/email/delete/<identifier>/, \n        * - Existing email address with the above identifier is deleted\n        * - Primary email address cannot be delete\n        * - Once the email is deleted, user is redirected to http://example.com/email/list/\n        \n    C. Sends activation link for a newly added email address (sendto = user's primary email address)\n        * - http://example.com/email/send_activation/<identifier>/, \n        * - An activation email is sent to the logged in user's primary address\n        * - Note: all emails remain inactive unless activated\n        * - Once the email is sent, user is redirected to http://example.com/email/list/\n\n    D. Activates an email address when user clicks on an activation link\n        * - http://example.com/email/activate/<identifier>/,\n        * - Note: link was emailed to user's primary email address\n        * - Matched email will be activated (then eligible to be promoted to primary)\n        * - Once the email is activated, user is redirected to http://example.com/email/list/\n\n    E. Makes an activated email address the primary email\n        * - http://example.com/email/make_primary/<identifier>/,\n        * - Only activated email addresses can be promoted to be the primary email address\n        * - User.email is set to the newly promoted primary email address\n        * - Note: Only one email address can be set to primary\n        * - Once the email is made primary, user is redirected to http://example.com/email/list/\n\n\n4. More to come ... patches & enhancements are welcomed (http://github.com/un33k/django-emailmgr)\n\n\nUsage\n=====\n\nA. Install django-emailmgr:\n    * _ Make sure you have python 2.6+ and can install from pypi\n        1. easy_install django-emailmgr\n        2. pip install django-emailmgr\n        3. git clone http://github.com/un33k/django-emailmgr\n            a. cd django-emailmgr\n            b. run python setup.py\n        4. wget https://github.com/un33k/django-emailmgr/zipball/master\n            a. unzip the downloaded file\n            b. cd into django-emailmgr directory\n            c. run python setup.py\n\n    * _ Stick ``\"emailmgr\"`` in ``INSTALLED_APPS``, right after all other Django specific Apps\n    * _ Follow the instruction in the ``Current Features`` at the top of this file for usage.\n    * _ Use the templates in test directory as an example to create your own templates\n    * _ Include this application's urls or create your own urls for this application\n    * _ Run syncdb and enjoy\n\nToDo\n=====\nclean up README\nadd more goodies", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/un33k/django-emailmgr", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-emailmgr", "package_url": "https://pypi.org/project/django-emailmgr/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-emailmgr/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/un33k/django-emailmgr"}, "release_url": "https://pypi.org/project/django-emailmgr/0.9/", "requires_dist": null, "requires_python": null, "summary": "An email manager for Django user", "version": "0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            django-emailmgr<br>================<br><br>Django Email Manager (emailmgr) is an application that helps with post-registration email management\".<br>``You can associate multiple email addresses to a single Django User.``<br><br>This application comes into the picture only after a user has been created, activated<br>and logged in.<br><br>If your requirements is for email management prior to user registration please take a <br>look at ``django-registration`` or ``django-email-confirmation``.<br><br>This application was inspired by bitbucket.org's email management system as well as <br>the mentioned applications.<br><br><br>Current Features:<br>_________________<br>Assumption:<br>    * - Django user has been created <br>        * - Either via proper registration and activation or via the admin interface or scripts<br>    * - This application first looks for its templates in: EMAIL_MGR_TEMPLATE_PATH, then<br>        it looks for &lt;template_dir&gt;/emailmgr/<br>        * - This way, projects can place the required templates at a location of their choice<br>            relative to the &lt;tempalate_dir&gt; of course<br>    * - Three templates are found in the template directory as stated above<br>        * - email subject template - emailmgr_activation_subject.txt<br>            * - extra context: current_site<br>        * - email message body template - emailmgr_activation_message.txt<br>            * - extra context: current_site, activate_url &amp; user<br>        * - email list &amp; manipulation template - emailmgr_email_list.html<br>            * - extra context: emails_list and add_email_form<br>                * - email_list includes all emails for this users<br>                    * - sorted by: <br>                        1. primary - set directly via django or by emailmgr<br>                        2. activated - confirmed emails and can be set primary<br>                        3. not activated but activation email sent<br>                        5. not activated and activation email not sent<br>                * - add_email_form is a form for adding a new email address to a user<br><br>1. This app latches on the ``post_save`` signals for (user) and execute the following:<br>    A. Creates an email address object with the following attributes<br>        * - email = user.email (if not blank)<br>        * - is_active = True<br>        * - is_primary = True<br>        * - is_activation_sent = Don't care<br>        * - identifier = a random string (used for activation)<br>        * - Note: user login is not required<br>        * - Note: email is only created if user has a valid email address<br>        * - Note: this email is automatically considered as primary and activation is skipped<br><br>2. Latch on the ``post_delete`` signals on (user) and execute the following:<br>    A. Deletes all email addresses associated with the (just) deleted user<br>    <br>3. Provides URL to:<br>    A. Adds an email address to the logged in user's account:<br>        * - http://example.com/email/add/, <br>        * - Email address is created and associated with the logged in user<br>        * - Email address remains inactive and cannot be made primary<br>        * - User is redirected to http://example.com/email/list/<br>        * - ``email_list`` and ``email_form`` are passed into the template<br>        <br>    B. Deletes an email address from a user account<br>        * - http://example.com/email/delete/&lt;identifier&gt;/, <br>        * - Existing email address with the above identifier is deleted<br>        * - Primary email address cannot be delete<br>        * - Once the email is deleted, user is redirected to http://example.com/email/list/<br>        <br>    C. Sends activation link for a newly added email address (sendto = user's primary email address)<br>        * - http://example.com/email/send_activation/&lt;identifier&gt;/, <br>        * - An activation email is sent to the logged in user's primary address<br>        * - Note: all emails remain inactive unless activated<br>        * - Once the email is sent, user is redirected to http://example.com/email/list/<br><br>    D. Activates an email address when user clicks on an activation link<br>        * - http://example.com/email/activate/&lt;identifier&gt;/,<br>        * - Note: link was emailed to user's primary email address<br>        * - Matched email will be activated (then eligible to be promoted to primary)<br>        * - Once the email is activated, user is redirected to http://example.com/email/list/<br><br>    E. Makes an activated email address the primary email<br>        * - http://example.com/email/make_primary/&lt;identifier&gt;/,<br>        * - Only activated email addresses can be promoted to be the primary email address<br>        * - User.email is set to the newly promoted primary email address<br>        * - Note: Only one email address can be set to primary<br>        * - Once the email is made primary, user is redirected to http://example.com/email/list/<br><br><br>4. More to come ... patches &amp; enhancements are welcomed (http://github.com/un33k/django-emailmgr)<br><br><br>Usage<br>=====<br><br>A. Install django-emailmgr:<br>    * _ Make sure you have python 2.6+ and can install from pypi<br>        1. easy_install django-emailmgr<br>        2. pip install django-emailmgr<br>        3. git clone http://github.com/un33k/django-emailmgr<br>            a. cd django-emailmgr<br>            b. run python setup.py<br>        4. wget https://github.com/un33k/django-emailmgr/zipball/master<br>            a. unzip the downloaded file<br>            b. cd into django-emailmgr directory<br>            c. run python setup.py<br><br>    * _ Stick ``\"emailmgr\"`` in ``INSTALLED_APPS``, right after all other Django specific Apps<br>    * _ Follow the instruction in the ``Current Features`` at the top of this file for usage.<br>    * _ Use the templates in test directory as an example to create your own templates<br>    * _ Include this application's urls or create your own urls for this application<br>    * _ Run syncdb and enjoy<br><br>ToDo<br>=====<br>clean up README<br>add more goodies\n          </div>"}, "last_serial": 789558, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "199f1b3155463504979c4ac4d40bc5fd", "sha256": "66eb3f99774db0df873e38de325ab828f19fb2a68d218a2082b6a4822759f3aa"}, "downloads": -1, "filename": "django-emailmgr-0.1.tar.gz", "has_sig": false, "md5_digest": "199f1b3155463504979c4ac4d40bc5fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6519, "upload_time": "2011-12-02T05:11:14", "upload_time_iso_8601": "2011-12-02T05:11:14.830950Z", "url": "https://files.pythonhosted.org/packages/fc/59/e5b2fadf3d3c51b124c8c96364f1ae3ef68800cb828478dc1038e8223ad7/django-emailmgr-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "11aad15ddcc89ba4aa40c73fdbea6838", "sha256": "88f2b585e17703696a2a65db42b2658cbdf1b7512e993a41d76cf9dbb29ab94f"}, "downloads": -1, "filename": "django-emailmgr-0.2.tar.gz", "has_sig": false, "md5_digest": "11aad15ddcc89ba4aa40c73fdbea6838", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6650, "upload_time": "2011-12-03T02:26:09", "upload_time_iso_8601": "2011-12-03T02:26:09.606267Z", "url": "https://files.pythonhosted.org/packages/5d/32/0076b260684f4b13e43db6d8efe91a02958e0137d310a42dd6948eefd6c8/django-emailmgr-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "a68454a5e035aee07d1d8b41b8f61791", "sha256": "2f0dff6466a5adc46c1412767dde6ca76f552e63c7f51a8187f74f4910c80d44"}, "downloads": -1, "filename": "django-emailmgr-0.3.tar.gz", "has_sig": false, "md5_digest": "a68454a5e035aee07d1d8b41b8f61791", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6657, "upload_time": "2011-12-03T02:33:27", "upload_time_iso_8601": "2011-12-03T02:33:27.762967Z", "url": "https://files.pythonhosted.org/packages/a0/b2/0df00d4819d5dff8423db7284d0ea6510a07f5bb4010059f59cee8ea4cb6/django-emailmgr-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "0ccba31ac31b63af676eff8d2bf45fdb", "sha256": "63909e576323a73d0028efdc4071dd1fd448338657df80544e80fef13ac95118"}, "downloads": -1, "filename": "django-emailmgr-0.4.tar.gz", "has_sig": false, "md5_digest": "0ccba31ac31b63af676eff8d2bf45fdb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6893, "upload_time": "2011-12-04T04:07:03", "upload_time_iso_8601": "2011-12-04T04:07:03.909544Z", "url": "https://files.pythonhosted.org/packages/0d/3b/e90c9e0f7088a83cee4306bfc3d62755c941f00ca616fa24b8e79f4c5d4e/django-emailmgr-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "9f53d21c00ec421fc0b6d8f42dd99b0b", "sha256": "04ff57da55e6f09629229daf485c43c39843e982e58608ec65a1db40f64ac4fe"}, "downloads": -1, "filename": "django-emailmgr-0.5.tar.gz", "has_sig": false, "md5_digest": "9f53d21c00ec421fc0b6d8f42dd99b0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7501, "upload_time": "2011-12-06T04:14:10", "upload_time_iso_8601": "2011-12-06T04:14:10.883226Z", "url": "https://files.pythonhosted.org/packages/dc/77/3e601d37846aeac36b2293745b2b363cb13ab4d31cd1bb64bbaa19a0b6b1/django-emailmgr-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "115a035d381c3f4e309f6487216d44c3", "sha256": "f7bcb21360afe06290616a87296b43ff99081e8bd39c948df308d21984627f72"}, "downloads": -1, "filename": "django-emailmgr-0.6.tar.gz", "has_sig": false, "md5_digest": "115a035d381c3f4e309f6487216d44c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7131, "upload_time": "2011-12-06T05:50:38", "upload_time_iso_8601": "2011-12-06T05:50:38.360913Z", "url": "https://files.pythonhosted.org/packages/ec/78/4c1f910f9785f7f47b93f2b281698c35e322b6a4ce0760a87a908e70dbbd/django-emailmgr-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "6ef2a9bfd25852e21348b47a3a547279", "sha256": "44300682f0888de6c552c268b0ddd97cfbf5ee0c5ce724d0a568704cd03988ae"}, "downloads": -1, "filename": "django-emailmgr-0.7.tar.gz", "has_sig": false, "md5_digest": "6ef2a9bfd25852e21348b47a3a547279", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7869, "upload_time": "2011-12-08T21:21:16", "upload_time_iso_8601": "2011-12-08T21:21:16.604095Z", "url": "https://files.pythonhosted.org/packages/4d/70/d45cfa1661397ae6ab255b2505158b2d18ffc1922fd3d25f191c3a69e270/django-emailmgr-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "584cc34ed2bf496db146543cd6a3c744", "sha256": "b4ce219a11d6c1c5247d9f4f4f80c5f7f0a44035aa83eeff86ce25554177132e"}, "downloads": -1, "filename": "django-emailmgr-0.8.tar.gz", "has_sig": false, "md5_digest": "584cc34ed2bf496db146543cd6a3c744", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8666, "upload_time": "2011-12-08T21:47:59", "upload_time_iso_8601": "2011-12-08T21:47:59.044099Z", "url": "https://files.pythonhosted.org/packages/c7/3c/7e1afb2728c0c677ff6f58d196849fc56839124400b1399857407a64139c/django-emailmgr-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "70ec82310eea25e65f787620b3e81d67", "sha256": "4e969d4c3460e49301e12e8d04456ddf91bd42ec9f922dcd540a1ac480e072d2"}, "downloads": -1, "filename": "django-emailmgr-0.9.tar.gz", "has_sig": false, "md5_digest": "70ec82310eea25e65f787620b3e81d67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8656, "upload_time": "2011-12-08T21:58:47", "upload_time_iso_8601": "2011-12-08T21:58:47.618939Z", "url": "https://files.pythonhosted.org/packages/e9/9c/7943372ba805f5ab278553e6ec36c3aa139bbcd10f75bfd1db40f1e848f4/django-emailmgr-0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "70ec82310eea25e65f787620b3e81d67", "sha256": "4e969d4c3460e49301e12e8d04456ddf91bd42ec9f922dcd540a1ac480e072d2"}, "downloads": -1, "filename": "django-emailmgr-0.9.tar.gz", "has_sig": false, "md5_digest": "70ec82310eea25e65f787620b3e81d67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8656, "upload_time": "2011-12-08T21:58:47", "upload_time_iso_8601": "2011-12-08T21:58:47.618939Z", "url": "https://files.pythonhosted.org/packages/e9/9c/7943372ba805f5ab278553e6ec36c3aa139bbcd10f75bfd1db40f1e848f4/django-emailmgr-0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:23 2020"}