{"info": {"author": "Anders Goncalves da Silva", "author_email": "andersgs@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "## mask-plasmid: Create a quick BED file from an assembled genome\n\n[![Build Status](https://travis-ci.org/andersgs/mask_plasmid.svg?branch=master)](https://travis-ci.org/andersgs/mask_plasmid)\n\n## Background\n\nWhen building phylogenetic trees with microbial genomic data, it is essential to\nget as close as possible to the clonal frame.\n\nA common technique for identifying the clonal frame is to map reads to a reference\ngenome, and then filter out any sites that are not present in all the samples of\ninterest.\n\nIn general, plasmids should not be part of the clonal frame. While theoretically\nit is possible they are part of the clonal frame, with short read data it is\nhard to say if the plasmids are all the same. More importantly, however, it is\nquite impossible to say that the plasmid(s) and the chromosomes have been\nvertically inherited from the most recent common ancestor of a sample.\n\nThus, it is generally recommended that plasmids be removed from the analyses.\n\nThe problem arises in small read data when it is not quite possible to say with\ncertainty if a read belongs in the plasmid or in the chromosomes. Sometimes plasmids\nget inserted in chromosomes, sometimes reads should map to a plasmid but erroneously\nmap to the chromosome because the plasmid was not included in the analysis.\nThus, in the context of mapping reads to a reference to identify potential variants and\nthe clonal frame, the ambiguous reads (i.e., that could either map on the chromosome or\non a plasmid) should be removed from the pool of potential reads used to identify variant sites.\n\nIf one removes the plasmids from the reference dataset before attempting to map the\nreads then it is not possible to identify ambiguous reads. Thus, a better strategy\nmight be to keep the plasmids in the reference dataset, map all the reads, identify\nvariable sites, and then mask the plasmid sites.\n\nThis can be achieved using [Snippy 4](https://github.com/tseemann/snippy) by using the\n`--mask` option and giving it a BED file.\n\n## What does this tool do?\n\nThis tool will produce a BED file with every locus in a Genbank file, which can\nbe easily edited and then used to `--mask` plasmids when using `Snippy 4`.\n\n### Installation\n\n```\npip install mask-plasmid\n```\n\n### Running\n\n```\nmask-plasmid <my_gb.gbk[.gz]> > plasmids.bed\n```\n\n## Development\n\n### Pushing to Pypi\n\nThe following command will:\n\n- run tests\n- clean up the current branch\n- bump the version\n- generate the distributions\n- clean up the current branch\n- tag the commit with the version\n- push to github\n- push to pypi\n\n```\ngit commit -a -m <message>\npipenv run inv deploy <new_version_number> [<patch|minor|major>]\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/andersgs/mask_plasmid", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "mask-plasmid", "package_url": "https://pypi.org/project/mask-plasmid/", "platform": "", "project_url": "https://pypi.org/project/mask-plasmid/", "project_urls": {"Homepage": "https://github.com/andersgs/mask_plasmid"}, "release_url": "https://pypi.org/project/mask-plasmid/0.1.8/", "requires_dist": ["biopython (>=1.72)", "click (>=7)"], "requires_python": ">=3.6", "summary": "Configurable retrying.", "version": "0.1.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>mask-plasmid: Create a quick BED file from an assembled genome</h2>\n<p><a href=\"https://travis-ci.org/andersgs/mask_plasmid\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/17b0ad2f48af46bbfece6c008cdb32b5e4bd79b1/68747470733a2f2f7472617669732d63692e6f72672f616e6465727367732f6d61736b5f706c61736d69642e7376673f6272616e63683d6d6173746572\"></a></p>\n<h2>Background</h2>\n<p>When building phylogenetic trees with microbial genomic data, it is essential to\nget as close as possible to the clonal frame.</p>\n<p>A common technique for identifying the clonal frame is to map reads to a reference\ngenome, and then filter out any sites that are not present in all the samples of\ninterest.</p>\n<p>In general, plasmids should not be part of the clonal frame. While theoretically\nit is possible they are part of the clonal frame, with short read data it is\nhard to say if the plasmids are all the same. More importantly, however, it is\nquite impossible to say that the plasmid(s) and the chromosomes have been\nvertically inherited from the most recent common ancestor of a sample.</p>\n<p>Thus, it is generally recommended that plasmids be removed from the analyses.</p>\n<p>The problem arises in small read data when it is not quite possible to say with\ncertainty if a read belongs in the plasmid or in the chromosomes. Sometimes plasmids\nget inserted in chromosomes, sometimes reads should map to a plasmid but erroneously\nmap to the chromosome because the plasmid was not included in the analysis.\nThus, in the context of mapping reads to a reference to identify potential variants and\nthe clonal frame, the ambiguous reads (i.e., that could either map on the chromosome or\non a plasmid) should be removed from the pool of potential reads used to identify variant sites.</p>\n<p>If one removes the plasmids from the reference dataset before attempting to map the\nreads then it is not possible to identify ambiguous reads. Thus, a better strategy\nmight be to keep the plasmids in the reference dataset, map all the reads, identify\nvariable sites, and then mask the plasmid sites.</p>\n<p>This can be achieved using <a href=\"https://github.com/tseemann/snippy\" rel=\"nofollow\">Snippy 4</a> by using the\n<code>--mask</code> option and giving it a BED file.</p>\n<h2>What does this tool do?</h2>\n<p>This tool will produce a BED file with every locus in a Genbank file, which can\nbe easily edited and then used to <code>--mask</code> plasmids when using <code>Snippy 4</code>.</p>\n<h3>Installation</h3>\n<pre><code>pip install mask-plasmid\n</code></pre>\n<h3>Running</h3>\n<pre><code>mask-plasmid &lt;my_gb.gbk[.gz]&gt; &gt; plasmids.bed\n</code></pre>\n<h2>Development</h2>\n<h3>Pushing to Pypi</h3>\n<p>The following command will:</p>\n<ul>\n<li>run tests</li>\n<li>clean up the current branch</li>\n<li>bump the version</li>\n<li>generate the distributions</li>\n<li>clean up the current branch</li>\n<li>tag the commit with the version</li>\n<li>push to github</li>\n<li>push to pypi</li>\n</ul>\n<pre><code>git commit -a -m &lt;message&gt;\npipenv run inv deploy &lt;new_version_number&gt; [&lt;patch|minor|major&gt;]\n</code></pre>\n\n          </div>"}, "last_serial": 4451482, "releases": {"0.1.7": [{"comment_text": "", "digests": {"md5": "380ad396825b8b65be41090c8c7e7f57", "sha256": "ffd41e57a88ae99571c469aaafcce97c5f6f486a99dc9db4947f4bd31b2973c7"}, "downloads": -1, "filename": "mask_plasmid-0.1.7.macosx-10.13-x86_64.tar.gz", "has_sig": false, "md5_digest": "380ad396825b8b65be41090c8c7e7f57", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3455, "upload_time": "2018-11-05T04:16:35", "upload_time_iso_8601": "2018-11-05T04:16:35.029020Z", "url": "https://files.pythonhosted.org/packages/6b/1e/cd5e54f3004e667091f86a06163bd4b7efd2f5ed0ec691623f6d418f9474/mask_plasmid-0.1.7.macosx-10.13-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "392853def2e84b36c005c41830a68c34", "sha256": "0c87c8396ceec05aa78b98de68fc28be5e946c41d15089f737c3cafc9414ed14"}, "downloads": -1, "filename": "mask_plasmid-0.1.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "392853def2e84b36c005c41830a68c34", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 16525, "upload_time": "2018-11-05T04:16:33", "upload_time_iso_8601": "2018-11-05T04:16:33.482990Z", "url": "https://files.pythonhosted.org/packages/15/9f/89882f62b78080246239dd51678521ce82006697966baa549fc04c1cb295/mask_plasmid-0.1.7-py2.py3-none-any.whl", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "fa69d9b509c9546ba15251d9ac148e00", "sha256": "c2fad3c92416d06beaca793c020f6fcd2b0b311337b226adaf1a120c33a89791"}, "downloads": -1, "filename": "mask_plasmid-0.1.8.macosx-10.13-x86_64.tar.gz", "has_sig": false, "md5_digest": "fa69d9b509c9546ba15251d9ac148e00", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3460, "upload_time": "2018-11-05T04:20:32", "upload_time_iso_8601": "2018-11-05T04:20:32.217953Z", "url": "https://files.pythonhosted.org/packages/a9/47/78cbd974ed8fbcbeb5a76e50d10c4b31a6a0e0efcbd9d93cc3fcbdaf26ef/mask_plasmid-0.1.8.macosx-10.13-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "45b6a3cb2a38d15616d0efa2f803023a", "sha256": "35e453dc1ce459382bbc71a3ba545495039ef7d02a6befb6e33d62b51dc70683"}, "downloads": -1, "filename": "mask_plasmid-0.1.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "45b6a3cb2a38d15616d0efa2f803023a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 16527, "upload_time": "2018-11-05T04:20:31", "upload_time_iso_8601": "2018-11-05T04:20:31.076290Z", "url": "https://files.pythonhosted.org/packages/60/f5/1f94b89b8665d195b3b29b29b7284554032ed732c659adb34ee5f4cd820e/mask_plasmid-0.1.8-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fa69d9b509c9546ba15251d9ac148e00", "sha256": "c2fad3c92416d06beaca793c020f6fcd2b0b311337b226adaf1a120c33a89791"}, "downloads": -1, "filename": "mask_plasmid-0.1.8.macosx-10.13-x86_64.tar.gz", "has_sig": false, "md5_digest": "fa69d9b509c9546ba15251d9ac148e00", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3460, "upload_time": "2018-11-05T04:20:32", "upload_time_iso_8601": "2018-11-05T04:20:32.217953Z", "url": "https://files.pythonhosted.org/packages/a9/47/78cbd974ed8fbcbeb5a76e50d10c4b31a6a0e0efcbd9d93cc3fcbdaf26ef/mask_plasmid-0.1.8.macosx-10.13-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "45b6a3cb2a38d15616d0efa2f803023a", "sha256": "35e453dc1ce459382bbc71a3ba545495039ef7d02a6befb6e33d62b51dc70683"}, "downloads": -1, "filename": "mask_plasmid-0.1.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "45b6a3cb2a38d15616d0efa2f803023a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 16527, "upload_time": "2018-11-05T04:20:31", "upload_time_iso_8601": "2018-11-05T04:20:31.076290Z", "url": "https://files.pythonhosted.org/packages/60/f5/1f94b89b8665d195b3b29b29b7284554032ed732c659adb34ee5f4cd820e/mask_plasmid-0.1.8-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:57:31 2020"}