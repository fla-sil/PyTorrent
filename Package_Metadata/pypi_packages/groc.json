{"info": {"author": "Sangeeta Jadoonanan", "author_email": "sjbitcode@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "# Groc\n\n*Streamline your purchase history*\n\nGroc is a Python CLI designed to help you keep track of purchases. You can enter data manually or via csv, and view various purchase stats.\n\nInstalling \u2728\n--------------\nInstall and update groc using pip:\n```\npip install groc\n```\nGroc officially supports Python 3.7.\n\n\nUsage\n--------------\n```\ngroc [COMMAND] [flags]\n```\nSee also `groc --help`.\n\n\n\nCommands\n--------------\n**init** \ud83d\udd2e\n\nCreate a groc database in user's home directory. If a database already exists, the command will abort.\n\nTo see detailed output, use the `--verbose` flag.\n```\ngroc init\n```\n\n**add** \ud83d\udcdd\n\nAdd a purchase to the groc database manually or by reading in a file or directory.\n\nTo enter purchase data manually, use the flags `--date`, `--total`, `--store`, `--description`.\nThe `--date` flag is optional and can be omitted _(the current date will be used)_.\nThe `--description` flag is optional and can be omitted.\n\nTo enter purchases via file or directory, use the `--source` flag provided with the path. Only csv files are currently supported.\n\nAdding a purchase that already exists will abort the action, unless the `--ignore-duplicate` flag is passed; this can be especially useful when adding purchases from a file\nor multiple files.\n```\ngroc add --date 2019-01-01 --total 20.00 --store \"Awesome Cakes\" --description \"birthday cake\"\n\ngroc add --source ./my-purchases/january.csv\n\ngroc add --source ./my-purchases/ --ignore-duplicate\n```\n\n**delete** \ud83d\uddd1\n\nDelete a purchase by id by passing the `--id`, `-i` flag. Multiple id flags can be passed.\n\nPassing the flag `--dry-run` will output purchases to be deleted without actually deleting it.\n\nTo see complete purchase details of a purchase, use the `--verbose` flag.\n```\ngroc delete --id 2 --dry-run\n```\n\n**breakdown** \ud83d\udcca\n\nProvides a breakdown of purchases for the current month and year categorized by month.\n\nTarget specific months by passing one or multiple month flags like `--month`, `-m` or years like `--year`, `-y`.\n\nTo see extended stats, use the `--verbose`.\n```\ngroc breakdown\n\ngroc breakdown --month=01 --month=03 --year=2019\n```\n\n**list** \ud83d\udd0d\n\nLists the latest 50 purchases by default, unless otherwise specified by the `--limit` flag.\n\nView purchases for a specific month by passing in `--month`, `-m` flag, optionally with a year with the `--year`, `-y` flag.\nTo see all purchases of a month, pass the `--all`, `-a` flag.\n\nTo see detailed output, such as purchase id, use the `--verbose` flag.\n```\ngroc list --limit 10\n\ngroc list -m 02 --all\n```\n\n**reset** \ud83d\udebd\n\nReset a groc database by deleting all entries. The database and schema will not be deleted, so this does not require an init from the user.\n\nPassing the `--dry-run` flag will output the purchase count to be reset.\n```\ngroc reset --verbose\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sjbitcode/groc", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "groc", "package_url": "https://pypi.org/project/groc/", "platform": "", "project_url": "https://pypi.org/project/groc/", "project_urls": {"Homepage": "https://github.com/sjbitcode/groc"}, "release_url": "https://pypi.org/project/groc/0.1.3/", "requires_dist": null, "requires_python": "", "summary": "Streamline your purchase history", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Groc</h1>\n<p><em>Streamline your purchase history</em></p>\n<p>Groc is a Python CLI designed to help you keep track of purchases. You can enter data manually or via csv, and view various purchase stats.</p>\n<h2>Installing \u2728</h2>\n<p>Install and update groc using pip:</p>\n<pre><code>pip install groc\n</code></pre>\n<p>Groc officially supports Python 3.7.</p>\n<h2>Usage</h2>\n<pre><code>groc [COMMAND] [flags]\n</code></pre>\n<p>See also <code>groc --help</code>.</p>\n<h2>Commands</h2>\n<p><strong>init</strong> \ud83d\udd2e</p>\n<p>Create a groc database in user's home directory. If a database already exists, the command will abort.</p>\n<p>To see detailed output, use the <code>--verbose</code> flag.</p>\n<pre><code>groc init\n</code></pre>\n<p><strong>add</strong> \ud83d\udcdd</p>\n<p>Add a purchase to the groc database manually or by reading in a file or directory.</p>\n<p>To enter purchase data manually, use the flags <code>--date</code>, <code>--total</code>, <code>--store</code>, <code>--description</code>.\nThe <code>--date</code> flag is optional and can be omitted <em>(the current date will be used)</em>.\nThe <code>--description</code> flag is optional and can be omitted.</p>\n<p>To enter purchases via file or directory, use the <code>--source</code> flag provided with the path. Only csv files are currently supported.</p>\n<p>Adding a purchase that already exists will abort the action, unless the <code>--ignore-duplicate</code> flag is passed; this can be especially useful when adding purchases from a file\nor multiple files.</p>\n<pre><code>groc add --date 2019-01-01 --total 20.00 --store \"Awesome Cakes\" --description \"birthday cake\"\n\ngroc add --source ./my-purchases/january.csv\n\ngroc add --source ./my-purchases/ --ignore-duplicate\n</code></pre>\n<p><strong>delete</strong> \ud83d\uddd1</p>\n<p>Delete a purchase by id by passing the <code>--id</code>, <code>-i</code> flag. Multiple id flags can be passed.</p>\n<p>Passing the flag <code>--dry-run</code> will output purchases to be deleted without actually deleting it.</p>\n<p>To see complete purchase details of a purchase, use the <code>--verbose</code> flag.</p>\n<pre><code>groc delete --id 2 --dry-run\n</code></pre>\n<p><strong>breakdown</strong> \ud83d\udcca</p>\n<p>Provides a breakdown of purchases for the current month and year categorized by month.</p>\n<p>Target specific months by passing one or multiple month flags like <code>--month</code>, <code>-m</code> or years like <code>--year</code>, <code>-y</code>.</p>\n<p>To see extended stats, use the <code>--verbose</code>.</p>\n<pre><code>groc breakdown\n\ngroc breakdown --month=01 --month=03 --year=2019\n</code></pre>\n<p><strong>list</strong> \ud83d\udd0d</p>\n<p>Lists the latest 50 purchases by default, unless otherwise specified by the <code>--limit</code> flag.</p>\n<p>View purchases for a specific month by passing in <code>--month</code>, <code>-m</code> flag, optionally with a year with the <code>--year</code>, <code>-y</code> flag.\nTo see all purchases of a month, pass the <code>--all</code>, <code>-a</code> flag.</p>\n<p>To see detailed output, such as purchase id, use the <code>--verbose</code> flag.</p>\n<pre><code>groc list --limit 10\n\ngroc list -m 02 --all\n</code></pre>\n<p><strong>reset</strong> \ud83d\udebd</p>\n<p>Reset a groc database by deleting all entries. The database and schema will not be deleted, so this does not require an init from the user.</p>\n<p>Passing the <code>--dry-run</code> flag will output the purchase count to be reset.</p>\n<pre><code>groc reset --verbose\n</code></pre>\n\n          </div>"}, "last_serial": 5426459, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e0d8e79a1950bd1bc91f36f9f8c88dba", "sha256": "cf48fc6edb242d74b7f7f8aa22cb2cabe50bf7265d93d7b50f417c73662f7456"}, "downloads": -1, "filename": "groc-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e0d8e79a1950bd1bc91f36f9f8c88dba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15719, "upload_time": "2019-06-20T01:46:22", "upload_time_iso_8601": "2019-06-20T01:46:22.118615Z", "url": "https://files.pythonhosted.org/packages/09/17/bf7781335df96aa718d7c3ebe4488c0e4112da45394be7942c648d2cc536/groc-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3cf3bca16ac3f0146d42820ce2ee7e52", "sha256": "adf701cf121f208d318313ff64308c810e397ee7c6e964fbb1cddfbe0e098d18"}, "downloads": -1, "filename": "groc-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3cf3bca16ac3f0146d42820ce2ee7e52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14129, "upload_time": "2019-06-20T01:46:24", "upload_time_iso_8601": "2019-06-20T01:46:24.532507Z", "url": "https://files.pythonhosted.org/packages/23/24/94f7a7ce1047e2d5993720c0b1dd18de9aa4ca029d6c4c1e842b12114438/groc-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "e747011341a665fbed73fda27363b61f", "sha256": "a134d9b4ed3de3e36ced2f455a5206818b06d22d3d51fc578e477437cc6ba008"}, "downloads": -1, "filename": "groc-0.0.2.tar.gz", "has_sig": false, "md5_digest": "e747011341a665fbed73fda27363b61f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14210, "upload_time": "2019-06-20T07:07:14", "upload_time_iso_8601": "2019-06-20T07:07:14.872853Z", "url": "https://files.pythonhosted.org/packages/30/87/909e9faf9aa7d43f84864318d29b00870e941043e8c2b193c58823d8918d/groc-0.0.2.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "3271522393d082a24982520ac3597044", "sha256": "1736f96bd9b77f1d76bde8b8e5da9b65d693eec876ad086a7536513cf4b64f96"}, "downloads": -1, "filename": "groc-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3271522393d082a24982520ac3597044", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15936, "upload_time": "2019-06-20T14:48:40", "upload_time_iso_8601": "2019-06-20T14:48:40.628702Z", "url": "https://files.pythonhosted.org/packages/b8/1c/598721ea111bf8781f8312a6a26e9e140801370b2f2f36e4a164572ca7a0/groc-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "55a6693acdc09201fe48b03c8f7613ff", "sha256": "3744dbfe0fb0ea1abb0b36855d0be1fd78f6a393e86cf839436bc864d55e20d8"}, "downloads": -1, "filename": "groc-0.1.2.tar.gz", "has_sig": false, "md5_digest": "55a6693acdc09201fe48b03c8f7613ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14250, "upload_time": "2019-06-20T14:48:42", "upload_time_iso_8601": "2019-06-20T14:48:42.333406Z", "url": "https://files.pythonhosted.org/packages/0a/b4/8169ed38f1f9bcdc1c1df597157e7cad8a3651a43c209ac8de397c58c7a9/groc-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "56723c58f908cd24dfe7c89208a4b509", "sha256": "e9e09398375dd83256e0f77763a60def7b58bbf2bf0a9e312dcd379c28329131"}, "downloads": -1, "filename": "groc-0.1.3.tar.gz", "has_sig": false, "md5_digest": "56723c58f908cd24dfe7c89208a4b509", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14473, "upload_time": "2019-06-20T15:39:37", "upload_time_iso_8601": "2019-06-20T15:39:37.917237Z", "url": "https://files.pythonhosted.org/packages/08/cf/41201c94b8f0e624599d6e4d6d20e5bd1b953d3244b46071083faf12a61c/groc-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "56723c58f908cd24dfe7c89208a4b509", "sha256": "e9e09398375dd83256e0f77763a60def7b58bbf2bf0a9e312dcd379c28329131"}, "downloads": -1, "filename": "groc-0.1.3.tar.gz", "has_sig": false, "md5_digest": "56723c58f908cd24dfe7c89208a4b509", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14473, "upload_time": "2019-06-20T15:39:37", "upload_time_iso_8601": "2019-06-20T15:39:37.917237Z", "url": "https://files.pythonhosted.org/packages/08/cf/41201c94b8f0e624599d6e4d6d20e5bd1b953d3244b46071083faf12a61c/groc-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:09 2020"}