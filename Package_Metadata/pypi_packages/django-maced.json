{"info": {"author": "Keith Hostetler", "author_email": "khostetl@nd.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "[![Downloads](https://img.shields.io/pypi/dw/django-maced.svg)](https://pypi.python.org/pypi/django-maced)\r\n[![Version](https://img.shields.io/pypi/v/django-maced.svg)](https://pypi.python.org/pypi/django-maced)\r\n[![License](https://img.shields.io/pypi/l/django-maced.svg)](https://pypi.python.org/pypi/django-maced)\r\n[![Python](https://img.shields.io/pypi/pyversions/django-maced.svg)](https://pypi.python.org/pypi/django-maced)\r\n\r\n<img src=maced_green.png width=300 />\r\n\r\nDjango app designed to help with easy database record manipulation/creation through a frontend interface. It is called \r\nMACED for Merge Add Clone Edit Delete. If you want to report any bugs, you can use the github issue tracker. If you \r\nhave comments, please email me at khostetl@nd.edu.\r\n\r\n# Requirements\r\n\r\n* Python 2.7 only.\r\n* Django >=? (I am using 1.8.6 and 1.9.1))\r\n* django-bootstrap3 >= ? (I am using 6.2.2)\r\n* jQuery >= ? (I am using 1.12.0)\r\n\r\n# Notes\r\n\r\nThis django app adds font-awesome 4.4.0 when using maced items. If you are using a different version of font-awesome,\r\ndo one of the following:\r\n\r\n* Use 4.4.0\r\n* Change your local copy of django-maced to use your version (replace in modal.html and container.html)\r\n* Don't do anything. This may not actually cause any problems for you depending on the situation.\r\n\r\nI do plan on fixing this situation at some point, but considering the rarity of the problem, it is pretty low priority.\r\n\r\n# Recommendations\r\n\r\nUse bootstrap3 theme for bolder buttons. Just include this on your page:\r\n```html\r\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap-theme.min.css\">\r\n```\r\n\r\n# Installation\r\n\r\nInstall the latest release using pip:\r\n\r\n`pip install django-maced`\r\n\r\nDevelopment version can installed using `pip install git+https://github.com/Macainian/Django-Maced.git`, though be\r\nwarned that I don't guarantee anything about the development version. Sometimes it is completely broken because I am\r\nin the middle of major code changes and swapping from one machine to another.\r\n\r\n# Usage example\r\n\r\nMust be used with a class based view. There is probably a workaround for function based views though.\r\nThe following example assumes there exists a django app named example_app with urls for this maced object (more on this \r\nlater). There should also be a model called Example with fields of name and description. The example also assumes there \r\nis a url named login that goes to the login page.\r\n\r\nIn the view do:\r\n```python\r\nfrom maced.utils.maced_creator import add_item_to_context, finalize_context_for_items\r\nfrom website.apps.example_app.models import Example\r\n\r\n\r\nclass SomeView(TemplateView):\r\n    template_name = \"blah/something.html\"\r\n    \r\n    def get_context_data(self, **kwargs):\r\n        context = super(self.__class__, self).get_context_data(**kwargs)\r\n        \r\n        example_field_list = [\r\n            {\"name\": \"name\"},\r\n            {\"name\": \"description\"},\r\n        ]\r\n        \r\n        add_item_to_context(\r\n            context=context, item_name=\"example\", item_html_name=\"Example\", item_model=Example,\r\n            item_name_field_name=\"name\", field_list=example_field_list, name_of_app_with_url=\"example_app\"\r\n            current_item_id=0\r\n        )\r\n        \r\n        finalize_context_for_items(context, login_url=reverse(\"login\"))\r\n        \r\n        return context\r\n```\r\n\r\nIn the urls for example_app:\r\n```python\r\nfrom django.conf.urls import url\r\n\r\nfrom maced.views.function_based.maced_view import maced_view\r\n\r\nfrom website.apps.example_app.models import Example\r\n\r\nurlpatterns = [\r\n    url(r\"^maced_example/$\", maced_view, name=\"example_app.maced_example\",\r\n        kwargs={\"item_model\": Example}),\r\n]\r\n```\r\n\r\nIn the template for \"something.html\" at the top:\r\n```html\r\n<script>\r\n    var maced_data = {{ maced_data|safe }};\r\n</script>\r\n\r\n<script src=\"{% static 'maced/js/maced.js' %}\"></script>\r\n```\r\n\r\nIn the template where you want the maced object to appear:\r\n```html\r\n    <table class=\"table table-striped\">\r\n        {{ example_item|safe }}\r\n    </table>\r\n\r\n    {{ maced_modals|safe }}\r\n```\r\n\r\nBe sure that the modals are outside of any tables.\r\n\r\nAnd that's it. Just that small amount of code and you have access to merging, adding, cloning, editing, and deleting \r\nrecords from you database with an easy-to-use dropdown/button/popup system. Note that many of the names from above were \r\nactually specific names that must be followed. Also note that there are some assumptions made about these items such as\r\nthe name field on a model being unique.\r\n\r\n# Special Notes and Tips\r\n\r\n## Example 1 (Handling cases when you may or may not have an object on the page to pull previous info from)\r\nSo first let's look at the HARD way to handle cases where we have an object that we don't know if it is None or not.\r\n\r\n```python\r\nexample_field_list = [\r\n    {\"name\": \"name\"}\r\n]\r\n\r\nif example_parent is None:\r\n    example_id = 0\r\nelse:\r\n    example_id = get_current_item_id(example_parent, \"example\")  # This function comes with django-maced\r\n\r\nadd_item_to_context(\r\n    context=context, item_name=\"example\", item_html_name=\"Example\", item_model=Example,\r\n    item_name_field_name=\"name\", field_list=example_field_list, name_of_app_with_url=\"example_app\",\r\n    current_item_id=example_id\r\n)\r\n\r\nfinalize_context_for_items(context, login_url=reverse(\"login\"))\r\n```\r\n\r\nNow that is nice and all, but it can be bulky and tedious for a page where you have many items, because you would have\r\nto check for None each time so that you could send it properly to get_current_item_id(). Well it turns out that\r\nget_current_item_id() actually allows you to pass a None object and will default to 0 if it is None. So just pass it in\r\nas is. Let's try that:\r\n\r\n```python\r\nexample_field_list = [\r\n    {\"name\": \"name\"}\r\n]\r\nadd_item_to_context(\r\n    context=context, item_name=\"example\", item_html_name=\"Example\", item_model=Example,\r\n    item_name_field_name=\"name\", field_list=example_field_list, name_of_app_with_url=\"example_app\",\r\n    current_item_id=get_current_item_id(example_parent, \"example\")\r\n)\r\n\r\nfinalize_context_for_items(context, login_url=reverse(\"login\"))\r\n```\r\n\r\nThere much better. Now let's move on to making a separate function for when you have several items. I usually make a\r\nseparate function called add_maced_items() and pass context and the parent_object (could be None). This is especially\r\nhelpful if you have a CreateView and an EditView since you will likely be using all of the same maced items. CreateView\r\nwill pass None, but EditView will pass an instance; both will be handled. Let's look at Example 2.\r\n\r\n## Example 2 (making a separate function to keep things cleaner in your get_context_data() and making items in a concise way)\r\n\r\n```python\r\ndef add_maced_items(context, example_parent):\r\n    app_name = \"example_app\"\r\n\r\n    item_name = \"example\"\r\n    field_list = [\r\n        {\"name\": \"name\"}\r\n    ]\r\n    add_item_to_context(\r\n        context=context, item_name=item_name, item_html_name=\"Example\", item_model=Example,\r\n        item_name_field_name=\"name\", field_list=field_list, name_of_app_with_url=app_name,\r\n        current_item_id=get_current_item_id(example_parent, item_name)\r\n    )\r\n\r\n    item_name = \"example2\"\r\n    field_list = [\r\n        {\"name\": \"name\"}\r\n        {\"color\": \"color\"}\r\n    ]\r\n    add_item_to_context(\r\n        context=context, item_name=item_name, item_html_name=\"Example2\", item_model=Example2,\r\n        item_name_field_name=\"name\", field_list=field_list, name_of_app_with_url=app_name,\r\n        current_item_id=get_current_item_id(example_parent, item_name)\r\n    )\r\n\r\n    finalize_context_for_items(context, login_url=reverse(\"login\"))\r\n```\r\n\r\nI know that this is pretty basic concepts in this example, but if you have a ton of items, doing it this way will speed\r\nup the process a lot. Copy-Paste-Edit. The less you have to edit the better right? :)\r\n\r\n## Example 3 (selects for other objects)\r\n\r\nNext let's look at getting select options for selects of type \"object\" so we can get connected with other objects in the\r\ndatabase. For this example let's assume we have a model called House which has a field called door that is a model\r\ncalled Door which has a field called handle that is a model called Handle.\r\n\r\n```python\r\ndef add_maced_items(context, house):\r\n    app_name = \"building_app\"\r\n\r\n    item_name = \"door\"\r\n    field_list = [\r\n        {\"name\": \"name\"},\r\n        {\"name\": \"handle\", \"type\": \"select\", \"select-type\": \"object\",\r\n         \"options\": [(handle.id, handle.name) for handle in Handle.objects.all()]},\r\n    ]\r\n    add_item_to_context(\r\n        context=context, item_name=item_name, item_html_name=\"Door\", item_model=Door,\r\n        item_name_field_name=\"name\", field_list=field_list, name_of_app_with_url=app_name,\r\n        current_item_id=get_current_item_id(house, item_name)\r\n    )\r\n\r\n    finalize_context_for_items(context, login_url=reverse(\"login\"))\r\n```\r\n\r\nUsually I would put \"[(handle.id, handle.name) for handle in Handle.objects.all()]\" in a function just to make it look\r\nnicer. Lastly, we will look at model inheritance with maced items.\r\n\r\n## Example 4 (handling models that have inheritance where you will be working from an instance of the base model but don't know if the sub-model will exist or not)\r\n\r\nFor this example we will use a model called Subject which is the base model. Then we will assume we have several models\r\nthat inherent from this model, but we will only talk about one in this example; Clergy. A clergyman belongs to a church\r\nand thus has a denomination. So we will also use a model called Denomination. So a Clergy is a Subject that has a\r\nDenomination, while the other sub-models do not have a Denomination. Also remember that we DON'T know if the subject we\r\nare sending in is None or not and whether or not it is a clergyman.\r\n\r\nWith that we can now look at an example:\r\n\r\n```python\r\ndef add_maced_items(context, subject):\r\n    app_name = \"example_app\"\r\n\r\n    item_name = \"denomination\"\r\n    denomination_field_list = [\r\n        {\"name\": \"name\"},\r\n    ]\r\n    try:\r\n        denomination_id = get_current_item_id(subject.clergy, item_name)\r\n    except AttributeError:\r\n        denomination_id = 0\r\n    add_item_to_context(\r\n        context=context, item_name=item_name, item_html_name=\"Denomination\", item_model=Denomination,\r\n        item_name_field_name=\"name\", field_list=denomination_field_list, name_of_app_with_url=app_name,\r\n        current_item_id=denomination_id\r\n    )\r\n\r\n    finalize_context_for_items(context, login_url=reverse(\"login\"))\r\n```\r\n\r\nAnd that is it. Just a simple try-except on AttributeError. This will now allow you to still use get_current_item_id\r\nwhile not worrying about what is None and what isn't.\r\n\r\n# Special Thanks\r\n* Xaralis: Wrote the original version of merge_model_objects() found here: https://djangosnippets.org/snippets/2283/\r\n* Tyomklz: Made the logos for django-maced", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Macainian/Django-Maced", "keywords": null, "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "django-maced", "package_url": "https://pypi.org/project/django-maced/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-maced/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/Macainian/Django-Maced"}, "release_url": "https://pypi.org/project/django-maced/0.4.32/", "requires_dist": null, "requires_python": null, "summary": "Django app designed to help with easy database record manipulation/creation through a frontend interface. It is called Maced for Merge Add Clone Edit Delete.", "version": "0.4.32", "yanked": false, "html_description": "<div class=\"project-description\">\n            [![Downloads](https://img.shields.io/pypi/dw/django-maced.svg)](https://pypi.python.org/pypi/django-maced)\n<br>[![Version](https://img.shields.io/pypi/v/django-maced.svg)](https://pypi.python.org/pypi/django-maced)\n<br>[![License](https://img.shields.io/pypi/l/django-maced.svg)](https://pypi.python.org/pypi/django-maced)\n<br>[![Python](https://img.shields.io/pypi/pyversions/django-maced.svg)](https://pypi.python.org/pypi/django-maced)\n<br>\n<br>&lt;img src=maced_green.png width=300 /&gt;\n<br>\n<br>Django app designed to help with easy database record manipulation/creation through a frontend interface. It is called \n<br>MACED for Merge Add Clone Edit Delete. If you want to report any bugs, you can use the github issue tracker. If you \n<br>have comments, please email me at khostetl@nd.edu.\n<br>\n<br># Requirements\n<br>\n<br>* Python 2.7 only.\n<br>* Django &gt;=? (I am using 1.8.6 and 1.9.1))\n<br>* django-bootstrap3 &gt;= ? (I am using 6.2.2)\n<br>* jQuery &gt;= ? (I am using 1.12.0)\n<br>\n<br># Notes\n<br>\n<br>This django app adds font-awesome 4.4.0 when using maced items. If you are using a different version of font-awesome,\n<br>do one of the following:\n<br>\n<br>* Use 4.4.0\n<br>* Change your local copy of django-maced to use your version (replace in modal.html and container.html)\n<br>* Don't do anything. This may not actually cause any problems for you depending on the situation.\n<br>\n<br>I do plan on fixing this situation at some point, but considering the rarity of the problem, it is pretty low priority.\n<br>\n<br># Recommendations\n<br>\n<br>Use bootstrap3 theme for bolder buttons. Just include this on your page:\n<br>```html\n<br>&lt;link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap-theme.min.css\"&gt;\n<br>```\n<br>\n<br># Installation\n<br>\n<br>Install the latest release using pip:\n<br>\n<br>`pip install django-maced`\n<br>\n<br>Development version can installed using `pip install git+https://github.com/Macainian/Django-Maced.git`, though be\n<br>warned that I don't guarantee anything about the development version. Sometimes it is completely broken because I am\n<br>in the middle of major code changes and swapping from one machine to another.\n<br>\n<br># Usage example\n<br>\n<br>Must be used with a class based view. There is probably a workaround for function based views though.\n<br>The following example assumes there exists a django app named example_app with urls for this maced object (more on this \n<br>later). There should also be a model called Example with fields of name and description. The example also assumes there \n<br>is a url named login that goes to the login page.\n<br>\n<br>In the view do:\n<br>```python\n<br>from maced.utils.maced_creator import add_item_to_context, finalize_context_for_items\n<br>from website.apps.example_app.models import Example\n<br>\n<br>\n<br>class SomeView(TemplateView):\n<br>    template_name = \"blah/something.html\"\n<br>    \n<br>    def get_context_data(self, **kwargs):\n<br>        context = super(self.__class__, self).get_context_data(**kwargs)\n<br>        \n<br>        example_field_list = [\n<br>            {\"name\": \"name\"},\n<br>            {\"name\": \"description\"},\n<br>        ]\n<br>        \n<br>        add_item_to_context(\n<br>            context=context, item_name=\"example\", item_html_name=\"Example\", item_model=Example,\n<br>            item_name_field_name=\"name\", field_list=example_field_list, name_of_app_with_url=\"example_app\"\n<br>            current_item_id=0\n<br>        )\n<br>        \n<br>        finalize_context_for_items(context, login_url=reverse(\"login\"))\n<br>        \n<br>        return context\n<br>```\n<br>\n<br>In the urls for example_app:\n<br>```python\n<br>from django.conf.urls import url\n<br>\n<br>from maced.views.function_based.maced_view import maced_view\n<br>\n<br>from website.apps.example_app.models import Example\n<br>\n<br>urlpatterns = [\n<br>    url(r\"^maced_example/$\", maced_view, name=\"example_app.maced_example\",\n<br>        kwargs={\"item_model\": Example}),\n<br>]\n<br>```\n<br>\n<br>In the template for \"something.html\" at the top:\n<br>```html\n<br>&lt;script&gt;\n<br>    var maced_data = {{ maced_data|safe }};\n<br>&lt;/script&gt;\n<br>\n<br>&lt;script src=\"{% static 'maced/js/maced.js' %}\"&gt;&lt;/script&gt;\n<br>```\n<br>\n<br>In the template where you want the maced object to appear:\n<br>```html\n<br>    &lt;table class=\"table table-striped\"&gt;\n<br>        {{ example_item|safe }}\n<br>    &lt;/table&gt;\n<br>\n<br>    {{ maced_modals|safe }}\n<br>```\n<br>\n<br>Be sure that the modals are outside of any tables.\n<br>\n<br>And that's it. Just that small amount of code and you have access to merging, adding, cloning, editing, and deleting \n<br>records from you database with an easy-to-use dropdown/button/popup system. Note that many of the names from above were \n<br>actually specific names that must be followed. Also note that there are some assumptions made about these items such as\n<br>the name field on a model being unique.\n<br>\n<br># Special Notes and Tips\n<br>\n<br>## Example 1 (Handling cases when you may or may not have an object on the page to pull previous info from)\n<br>So first let's look at the HARD way to handle cases where we have an object that we don't know if it is None or not.\n<br>\n<br>```python\n<br>example_field_list = [\n<br>    {\"name\": \"name\"}\n<br>]\n<br>\n<br>if example_parent is None:\n<br>    example_id = 0\n<br>else:\n<br>    example_id = get_current_item_id(example_parent, \"example\")  # This function comes with django-maced\n<br>\n<br>add_item_to_context(\n<br>    context=context, item_name=\"example\", item_html_name=\"Example\", item_model=Example,\n<br>    item_name_field_name=\"name\", field_list=example_field_list, name_of_app_with_url=\"example_app\",\n<br>    current_item_id=example_id\n<br>)\n<br>\n<br>finalize_context_for_items(context, login_url=reverse(\"login\"))\n<br>```\n<br>\n<br>Now that is nice and all, but it can be bulky and tedious for a page where you have many items, because you would have\n<br>to check for None each time so that you could send it properly to get_current_item_id(). Well it turns out that\n<br>get_current_item_id() actually allows you to pass a None object and will default to 0 if it is None. So just pass it in\n<br>as is. Let's try that:\n<br>\n<br>```python\n<br>example_field_list = [\n<br>    {\"name\": \"name\"}\n<br>]\n<br>add_item_to_context(\n<br>    context=context, item_name=\"example\", item_html_name=\"Example\", item_model=Example,\n<br>    item_name_field_name=\"name\", field_list=example_field_list, name_of_app_with_url=\"example_app\",\n<br>    current_item_id=get_current_item_id(example_parent, \"example\")\n<br>)\n<br>\n<br>finalize_context_for_items(context, login_url=reverse(\"login\"))\n<br>```\n<br>\n<br>There much better. Now let's move on to making a separate function for when you have several items. I usually make a\n<br>separate function called add_maced_items() and pass context and the parent_object (could be None). This is especially\n<br>helpful if you have a CreateView and an EditView since you will likely be using all of the same maced items. CreateView\n<br>will pass None, but EditView will pass an instance; both will be handled. Let's look at Example 2.\n<br>\n<br>## Example 2 (making a separate function to keep things cleaner in your get_context_data() and making items in a concise way)\n<br>\n<br>```python\n<br>def add_maced_items(context, example_parent):\n<br>    app_name = \"example_app\"\n<br>\n<br>    item_name = \"example\"\n<br>    field_list = [\n<br>        {\"name\": \"name\"}\n<br>    ]\n<br>    add_item_to_context(\n<br>        context=context, item_name=item_name, item_html_name=\"Example\", item_model=Example,\n<br>        item_name_field_name=\"name\", field_list=field_list, name_of_app_with_url=app_name,\n<br>        current_item_id=get_current_item_id(example_parent, item_name)\n<br>    )\n<br>\n<br>    item_name = \"example2\"\n<br>    field_list = [\n<br>        {\"name\": \"name\"}\n<br>        {\"color\": \"color\"}\n<br>    ]\n<br>    add_item_to_context(\n<br>        context=context, item_name=item_name, item_html_name=\"Example2\", item_model=Example2,\n<br>        item_name_field_name=\"name\", field_list=field_list, name_of_app_with_url=app_name,\n<br>        current_item_id=get_current_item_id(example_parent, item_name)\n<br>    )\n<br>\n<br>    finalize_context_for_items(context, login_url=reverse(\"login\"))\n<br>```\n<br>\n<br>I know that this is pretty basic concepts in this example, but if you have a ton of items, doing it this way will speed\n<br>up the process a lot. Copy-Paste-Edit. The less you have to edit the better right? :)\n<br>\n<br>## Example 3 (selects for other objects)\n<br>\n<br>Next let's look at getting select options for selects of type \"object\" so we can get connected with other objects in the\n<br>database. For this example let's assume we have a model called House which has a field called door that is a model\n<br>called Door which has a field called handle that is a model called Handle.\n<br>\n<br>```python\n<br>def add_maced_items(context, house):\n<br>    app_name = \"building_app\"\n<br>\n<br>    item_name = \"door\"\n<br>    field_list = [\n<br>        {\"name\": \"name\"},\n<br>        {\"name\": \"handle\", \"type\": \"select\", \"select-type\": \"object\",\n<br>         \"options\": [(handle.id, handle.name) for handle in Handle.objects.all()]},\n<br>    ]\n<br>    add_item_to_context(\n<br>        context=context, item_name=item_name, item_html_name=\"Door\", item_model=Door,\n<br>        item_name_field_name=\"name\", field_list=field_list, name_of_app_with_url=app_name,\n<br>        current_item_id=get_current_item_id(house, item_name)\n<br>    )\n<br>\n<br>    finalize_context_for_items(context, login_url=reverse(\"login\"))\n<br>```\n<br>\n<br>Usually I would put \"[(handle.id, handle.name) for handle in Handle.objects.all()]\" in a function just to make it look\n<br>nicer. Lastly, we will look at model inheritance with maced items.\n<br>\n<br>## Example 4 (handling models that have inheritance where you will be working from an instance of the base model but don't know if the sub-model will exist or not)\n<br>\n<br>For this example we will use a model called Subject which is the base model. Then we will assume we have several models\n<br>that inherent from this model, but we will only talk about one in this example; Clergy. A clergyman belongs to a church\n<br>and thus has a denomination. So we will also use a model called Denomination. So a Clergy is a Subject that has a\n<br>Denomination, while the other sub-models do not have a Denomination. Also remember that we DON'T know if the subject we\n<br>are sending in is None or not and whether or not it is a clergyman.\n<br>\n<br>With that we can now look at an example:\n<br>\n<br>```python\n<br>def add_maced_items(context, subject):\n<br>    app_name = \"example_app\"\n<br>\n<br>    item_name = \"denomination\"\n<br>    denomination_field_list = [\n<br>        {\"name\": \"name\"},\n<br>    ]\n<br>    try:\n<br>        denomination_id = get_current_item_id(subject.clergy, item_name)\n<br>    except AttributeError:\n<br>        denomination_id = 0\n<br>    add_item_to_context(\n<br>        context=context, item_name=item_name, item_html_name=\"Denomination\", item_model=Denomination,\n<br>        item_name_field_name=\"name\", field_list=denomination_field_list, name_of_app_with_url=app_name,\n<br>        current_item_id=denomination_id\n<br>    )\n<br>\n<br>    finalize_context_for_items(context, login_url=reverse(\"login\"))\n<br>```\n<br>\n<br>And that is it. Just a simple try-except on AttributeError. This will now allow you to still use get_current_item_id\n<br>while not worrying about what is None and what isn't.\n<br>\n<br># Special Thanks\n<br>* Xaralis: Wrote the original version of merge_model_objects() found here: https://djangosnippets.org/snippets/2283/\n<br>* Tyomklz: Made the logos for django-maced\n          </div>"}, "last_serial": 2563705, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2071b5c28819e959d7bd5a77adbda38f", "sha256": "3dcc8bfce7b38e72cd69df25f1e4bbad72ec67a20f83983adb82f5d6eaadb774"}, "downloads": -1, "filename": "django-maced-0.1.0.zip", "has_sig": false, "md5_digest": "2071b5c28819e959d7bd5a77adbda38f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12592, "upload_time": "2016-01-25T18:42:32", "upload_time_iso_8601": "2016-01-25T18:42:32.139241Z", "url": "https://files.pythonhosted.org/packages/6a/e7/d7ea29d6a9d3d1921014e6a882eaa6482994264c7f85e0d81bdcb002da0f/django-maced-0.1.0.zip", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ff5a8336dbdf06cd6a1785d14ad196bb", "sha256": "9d55c9b5cd6873c5e58c110de481ba92a333bca8ac9f6c7a24083fe2c7c51eaf"}, "downloads": -1, "filename": "django-maced-0.1.1.zip", "has_sig": false, "md5_digest": "ff5a8336dbdf06cd6a1785d14ad196bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12548, "upload_time": "2016-01-25T19:28:07", "upload_time_iso_8601": "2016-01-25T19:28:07.134757Z", "url": "https://files.pythonhosted.org/packages/da/ee/17917e71eb754d4aef88143db3318c8854eb2d9fcf4dedf8b1e5b87e0b86/django-maced-0.1.1.zip", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "61ceaddd38738e76935302aeb2e078e6", "sha256": "1ba44d939c0f6b3a8ee02f7a65b2dd5189afb92076ae4cf5d2469ce197c80938"}, "downloads": -1, "filename": "django-maced-0.1.2.zip", "has_sig": false, "md5_digest": "61ceaddd38738e76935302aeb2e078e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12552, "upload_time": "2016-01-25T19:35:24", "upload_time_iso_8601": "2016-01-25T19:35:24.689172Z", "url": "https://files.pythonhosted.org/packages/44/6f/3104163c344bfa22c1a41b06f80ac65591326f378840f395b97baadf8ecf/django-maced-0.1.2.zip", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "7a59bc0a24d6381e3eadbd4bf5894dd1", "sha256": "561b0cf7d7ea1e5b22da2a450075c9b20a117540ab522e74c4ee0d24165b262a"}, "downloads": -1, "filename": "django-maced-0.1.3.zip", "has_sig": false, "md5_digest": "7a59bc0a24d6381e3eadbd4bf5894dd1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19537, "upload_time": "2016-01-25T19:43:38", "upload_time_iso_8601": "2016-01-25T19:43:38.279912Z", "url": "https://files.pythonhosted.org/packages/87/19/11745c0576ce235e24449285c00ef9e4bfd25732d21ba4de465af64e4114/django-maced-0.1.3.zip", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "e3ab97e1583cdcf957358ea350b96108", "sha256": "664c8e8f226566be82891b730705eeaa23e53493fdb0d0aa2ecd6ccac17b8254"}, "downloads": -1, "filename": "django-maced-0.1.4.zip", "has_sig": false, "md5_digest": "e3ab97e1583cdcf957358ea350b96108", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20241, "upload_time": "2016-01-25T20:31:26", "upload_time_iso_8601": "2016-01-25T20:31:26.837324Z", "url": "https://files.pythonhosted.org/packages/fe/31/91ac6eef6c3a8e8a2e400c554f5e42787ab0a774a3ba3095ede54344026d/django-maced-0.1.4.zip", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "23df068a6ff4614892c748a351ce3d50", "sha256": "a67b1a5b52e783df9173454b94f89cf0bc43600b3e1e27f5a72a4d980c3ebce6"}, "downloads": -1, "filename": "django-maced-0.1.5.zip", "has_sig": false, "md5_digest": "23df068a6ff4614892c748a351ce3d50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20318, "upload_time": "2016-01-25T20:42:18", "upload_time_iso_8601": "2016-01-25T20:42:18.998175Z", "url": "https://files.pythonhosted.org/packages/32/af/946e49c218aec52c4456dcf8ac57cba10be4a840406d87ed10b13ca71737/django-maced-0.1.5.zip", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "cc6adc91f5650252c47e6bc248189666", "sha256": "86140779e4feaa8610dbbb7b7b654c42e40d287c046126380479ac15b5103069"}, "downloads": -1, "filename": "django-maced-0.1.6.zip", "has_sig": false, "md5_digest": "cc6adc91f5650252c47e6bc248189666", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20347, "upload_time": "2016-01-25T22:39:03", "upload_time_iso_8601": "2016-01-25T22:39:03.777562Z", "url": "https://files.pythonhosted.org/packages/16/bf/a72a13901396a9e1cf21f53b62f52a076da5aa91d2e890b99d6a2a4a93cc/django-maced-0.1.6.zip", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "7e85f2c7dba4aaec370d7fd10703298b", "sha256": "9b4d3e9e637573c8c127a5a1e5a1d6471fa9c945a069a963b4cc90b124f40d4c"}, "downloads": -1, "filename": "django-maced-0.1.7.zip", "has_sig": false, "md5_digest": "7e85f2c7dba4aaec370d7fd10703298b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20352, "upload_time": "2016-01-25T22:43:26", "upload_time_iso_8601": "2016-01-25T22:43:26.487099Z", "url": "https://files.pythonhosted.org/packages/90/fa/5cf018aceec2f5455be63d01769fd257e277ae3323a2ccc2b89e413ae366/django-maced-0.1.7.zip", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "fc4268eec2a539125e4a7d5b1de799d6", "sha256": "570017e2f22d01efda40f4d263cbfc2ba102462b439bdfa14159026686a8a024"}, "downloads": -1, "filename": "django-maced-0.2.4.zip", "has_sig": false, "md5_digest": "fc4268eec2a539125e4a7d5b1de799d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24229, "upload_time": "2016-01-27T19:32:13", "upload_time_iso_8601": "2016-01-27T19:32:13.755840Z", "url": "https://files.pythonhosted.org/packages/f0/5d/6752b89895ed3dfa25d9e0d9e3dec82f3ebf03ae3731c92ccb4cc9d1b716/django-maced-0.2.4.zip", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "0e26a6b429a6b2b1e49726ac29e64e75", "sha256": "ee4ef23bb7b45713bf0d46d21faaf303395e326422746297d77d2930998bbb8b"}, "downloads": -1, "filename": "django-maced-0.2.9.zip", "has_sig": false, "md5_digest": "0e26a6b429a6b2b1e49726ac29e64e75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27153, "upload_time": "2016-01-29T16:38:44", "upload_time_iso_8601": "2016-01-29T16:38:44.989081Z", "url": "https://files.pythonhosted.org/packages/d7/e8/39efc07e70d33d240358b6ce1583155ad2f1400939a2f941b0531db9d629/django-maced-0.2.9.zip", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "428d42962b313234c49429844b8a8832", "sha256": "56395acfc9091c13bb029d7281699644505d921ef3517f78334d946d8b99f165"}, "downloads": -1, "filename": "django-maced-0.3.0.zip", "has_sig": false, "md5_digest": "428d42962b313234c49429844b8a8832", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27472, "upload_time": "2016-01-29T22:55:17", "upload_time_iso_8601": "2016-01-29T22:55:17.562254Z", "url": "https://files.pythonhosted.org/packages/fb/45/7b688fe7b4d24a4ebd91f6ecbeac1a774f620eeee71b1474efd2afc81a70/django-maced-0.3.0.zip", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "b1dceec1a6d789c356a5a27529079fdd", "sha256": "98f21e634de3acdc0ef7b2df2207d007e56d6ff4b4c62a04b885a5d41a1438f7"}, "downloads": -1, "filename": "django-maced-0.3.1.zip", "has_sig": false, "md5_digest": "b1dceec1a6d789c356a5a27529079fdd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27593, "upload_time": "2016-02-01T18:06:34", "upload_time_iso_8601": "2016-02-01T18:06:34.523241Z", "url": "https://files.pythonhosted.org/packages/b1/05/a96cd75df8b3450ce6960bb92d344ca70cd9146a504fda9ef847200ce581/django-maced-0.3.1.zip", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "93b4e679d51f821dd1908ccf2ddc266d", "sha256": "2d5fa95a9a95f44af3c974f71f47d8276e3de5c6b7d4375086f457b7fea573b4"}, "downloads": -1, "filename": "django-maced-0.3.2.zip", "has_sig": false, "md5_digest": "93b4e679d51f821dd1908ccf2ddc266d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28694, "upload_time": "2016-02-02T00:04:24", "upload_time_iso_8601": "2016-02-02T00:04:24.401595Z", "url": "https://files.pythonhosted.org/packages/16/d1/b22e0cfabcb271930686bce930b4bc3219d321d1ec8fee6ef89105dfa55e/django-maced-0.3.2.zip", "yanked": false}], "0.3.7": [{"comment_text": "", "digests": {"md5": "6cea868ed43e079f42a7bfd808a063aa", "sha256": "cb0a8c21239ffc20ba539c52b69ba6f0c9e629cc0f93ade2cd90599030211d30"}, "downloads": -1, "filename": "django-maced-0.3.7.zip", "has_sig": false, "md5_digest": "6cea868ed43e079f42a7bfd808a063aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30799, "upload_time": "2016-02-05T04:54:57", "upload_time_iso_8601": "2016-02-05T04:54:57.889663Z", "url": "https://files.pythonhosted.org/packages/27/f2/a7da1fc4926d839637e987ea05149949bfa3b2893461481689f2f52c03b0/django-maced-0.3.7.zip", "yanked": false}], "0.3.8": [{"comment_text": "", "digests": {"md5": "e8424bc8368452ddb483efceae8f96d1", "sha256": "62e28350633898592047fa2971566488ff88be538fa965592cf56e7b5ad78b6e"}, "downloads": -1, "filename": "django-maced-0.3.8.zip", "has_sig": false, "md5_digest": "e8424bc8368452ddb483efceae8f96d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31439, "upload_time": "2016-02-08T03:30:11", "upload_time_iso_8601": "2016-02-08T03:30:11.631543Z", "url": "https://files.pythonhosted.org/packages/e0/a1/e8881fba93c00cea743a3db7cadcae641400a477687f9d2cecc24d38922a/django-maced-0.3.8.zip", "yanked": false}], "0.3.9": [{"comment_text": "", "digests": {"md5": "b23cf365e7f23e0501b24e66ad3ebe43", "sha256": "5edf18b56780fc2c3decb3b483cbc4cf01f0726220ea709009f3cd844fa603f1"}, "downloads": -1, "filename": "django-maced-0.3.9.zip", "has_sig": false, "md5_digest": "b23cf365e7f23e0501b24e66ad3ebe43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31506, "upload_time": "2016-02-08T09:11:53", "upload_time_iso_8601": "2016-02-08T09:11:53.033866Z", "url": "https://files.pythonhosted.org/packages/c0/19/e20818fd3189e3fcead6bac0a6b1a8fd6cd22689eb4b02650eb3ef3697dd/django-maced-0.3.9.zip", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "0c0d0a05c4036710291834c6a49f9095", "sha256": "f36552ae940737368591abaa9e2d5e2e0932ef6d7c0d388438c12b50760ba6d8"}, "downloads": -1, "filename": "django-maced-0.4.0.zip", "has_sig": false, "md5_digest": "0c0d0a05c4036710291834c6a49f9095", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31737, "upload_time": "2016-02-10T10:48:37", "upload_time_iso_8601": "2016-02-10T10:48:37.182779Z", "url": "https://files.pythonhosted.org/packages/39/e0/591f6734f9bdf973510c16e1ad56d68d1319b1e1f8a372aef65ec16a8d69/django-maced-0.4.0.zip", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "662afac8ebce19af03e1b3603c6ae4cd", "sha256": "b0fbc8db4735f13bf7e35b49e1230d16ef665d1236b15f0f0a3c547fae96de51"}, "downloads": -1, "filename": "django-maced-0.4.1.zip", "has_sig": false, "md5_digest": "662afac8ebce19af03e1b3603c6ae4cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34957, "upload_time": "2016-02-12T13:15:45", "upload_time_iso_8601": "2016-02-12T13:15:45.390181Z", "url": "https://files.pythonhosted.org/packages/10/35/0966a621231d350550edab17bc38e2af69454372072e22236e40f4cae711/django-maced-0.4.1.zip", "yanked": false}], "0.4.10": [{"comment_text": "", "digests": {"md5": "b2084ec127137a7c4cd2e173d58dad03", "sha256": "6b0e68164917b0ebd5218ab4d58a8a32982f8e46523181c34a734042df4e03f5"}, "downloads": -1, "filename": "django-maced-0.4.10.zip", "has_sig": false, "md5_digest": "b2084ec127137a7c4cd2e173d58dad03", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40244, "upload_time": "2016-10-03T00:06:10", "upload_time_iso_8601": "2016-10-03T00:06:10.450838Z", "url": "https://files.pythonhosted.org/packages/ef/b1/8958cba315fc459228c9e3a4b9ee7c79f82672feb8224a417417490beaa1/django-maced-0.4.10.zip", "yanked": false}], "0.4.11": [{"comment_text": "", "digests": {"md5": "94cf620f1e5a5a3bc12c9a9efbd54414", "sha256": "678d0cdfad9d7d75fc547b5a9cc189cdbd7f3f1868111bc9dd20ef156046ce77"}, "downloads": -1, "filename": "django-maced-0.4.11.zip", "has_sig": false, "md5_digest": "94cf620f1e5a5a3bc12c9a9efbd54414", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40257, "upload_time": "2016-10-03T00:41:15", "upload_time_iso_8601": "2016-10-03T00:41:15.536852Z", "url": "https://files.pythonhosted.org/packages/2d/9b/a212215f8fba23a00ee71e3c42ef5eec380b06bf9197cca438843d0160e0/django-maced-0.4.11.zip", "yanked": false}], "0.4.12": [{"comment_text": "", "digests": {"md5": "a0b98a1934b5b98edc80f23dd508057f", "sha256": "a1bd175b7bbfb4b10b0b607cfdddf5cbc1a049da414e10462b78d9e729dac1cf"}, "downloads": -1, "filename": "django-maced-0.4.12.zip", "has_sig": false, "md5_digest": "a0b98a1934b5b98edc80f23dd508057f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40277, "upload_time": "2016-10-03T01:50:05", "upload_time_iso_8601": "2016-10-03T01:50:05.721495Z", "url": "https://files.pythonhosted.org/packages/05/f7/21e247791cba9d81e61d708edf82b8bd8f39b3b82864b8d2c3fa7f62c463/django-maced-0.4.12.zip", "yanked": false}], "0.4.13": [{"comment_text": "", "digests": {"md5": "4d54387ce336afc06e063c177d06eae1", "sha256": "4b55bd867107ff9da7b5f15b308432764f5af315c99ba61b1eed4befd5057011"}, "downloads": -1, "filename": "django-maced-0.4.13.zip", "has_sig": false, "md5_digest": "4d54387ce336afc06e063c177d06eae1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40281, "upload_time": "2016-10-03T01:55:03", "upload_time_iso_8601": "2016-10-03T01:55:03.311986Z", "url": "https://files.pythonhosted.org/packages/6b/f3/bf3fc9aaaf8bfb9105e72a31e619877a298b5ae77f8a2871d18bf6f95a5b/django-maced-0.4.13.zip", "yanked": false}], "0.4.14": [{"comment_text": "", "digests": {"md5": "f34e976496f4725be5b27178b0dc349d", "sha256": "d523de3dfb195cb8f01a588d047abdd831205b0e92c84151a10dedd5a6807e4d"}, "downloads": -1, "filename": "django-maced-0.4.14.tar.gz", "has_sig": false, "md5_digest": "f34e976496f4725be5b27178b0dc349d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30840, "upload_time": "2016-10-03T18:43:54", "upload_time_iso_8601": "2016-10-03T18:43:54.412430Z", "url": "https://files.pythonhosted.org/packages/71/f7/3ad1668ffe4739537ec7bad43522b3c347238d5c5df5f7b5ad213fa7daf2/django-maced-0.4.14.tar.gz", "yanked": false}], "0.4.15": [{"comment_text": "", "digests": {"md5": "fadb0d0012d7f2f3368ce2dfadfa465a", "sha256": "900aae1aac81578f30de7839dd6a232ad0d1d9e27bad1d868439006b0c8c852c"}, "downloads": -1, "filename": "django-maced-0.4.15.tar.gz", "has_sig": false, "md5_digest": "fadb0d0012d7f2f3368ce2dfadfa465a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31003, "upload_time": "2016-10-03T20:45:21", "upload_time_iso_8601": "2016-10-03T20:45:21.057628Z", "url": "https://files.pythonhosted.org/packages/ad/51/2b5cbbb3aa805e8a945286172fce7fa97faa19d16ea5c2125546f87cadd1/django-maced-0.4.15.tar.gz", "yanked": false}], "0.4.16": [{"comment_text": "", "digests": {"md5": "cd700750e3474ef193b2deab5f915dc0", "sha256": "622b7a0bfbb426a6986837b834c142d6f0f380ba7610bc8fac74b314d43912de"}, "downloads": -1, "filename": "django-maced-0.4.16.tar.gz", "has_sig": false, "md5_digest": "cd700750e3474ef193b2deab5f915dc0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30945, "upload_time": "2016-10-04T17:02:00", "upload_time_iso_8601": "2016-10-04T17:02:00.086419Z", "url": "https://files.pythonhosted.org/packages/58/17/c53a6ec861bdf2c2b09ebb42a0b0b1f7cdbaefd73f03a9dfc7bf6673d2ca/django-maced-0.4.16.tar.gz", "yanked": false}], "0.4.17": [{"comment_text": "", "digests": {"md5": "23eb1bc0daf47f3198d8d5486ca7574e", "sha256": "11157d6097c21cf4bbe96937be0f9c99730003991d75ac4cdddead0e12dd2585"}, "downloads": -1, "filename": "django-maced-0.4.17.zip", "has_sig": false, "md5_digest": "23eb1bc0daf47f3198d8d5486ca7574e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40504, "upload_time": "2016-10-05T04:08:18", "upload_time_iso_8601": "2016-10-05T04:08:18.512454Z", "url": "https://files.pythonhosted.org/packages/b3/10/5835048f6b9944e59e44f2e25c53e5105939e5a4049d37502429aacf8dba/django-maced-0.4.17.zip", "yanked": false}], "0.4.18": [{"comment_text": "", "digests": {"md5": "af781f19317c351bd0394cbfbeb0e7ad", "sha256": "9960fe56aceab2568fddf7b958e81bb7c7b05eacfb282753d26e2122e44e5949"}, "downloads": -1, "filename": "django-maced-0.4.18.zip", "has_sig": false, "md5_digest": "af781f19317c351bd0394cbfbeb0e7ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40517, "upload_time": "2016-10-07T03:18:43", "upload_time_iso_8601": "2016-10-07T03:18:43.916213Z", "url": "https://files.pythonhosted.org/packages/81/cb/5b0e91b517f8205a8a56e1f83a602fc630b305d5dd95acda65645a3d9e69/django-maced-0.4.18.zip", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "82247e65676a590a646bd030fb5d6e7b", "sha256": "5419a1ae8c2f1980ff6c0988b1f407d3597f982812b8f03744aecf7036c84b58"}, "downloads": -1, "filename": "django-maced-0.4.2.zip", "has_sig": false, "md5_digest": "82247e65676a590a646bd030fb5d6e7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35801, "upload_time": "2016-02-15T12:41:45", "upload_time_iso_8601": "2016-02-15T12:41:45.733363Z", "url": "https://files.pythonhosted.org/packages/5f/9a/e427579270e563ff21f6f317d9b2c18aa44bd45c70b9680991d8403b43fe/django-maced-0.4.2.zip", "yanked": false}], "0.4.25": [{"comment_text": "", "digests": {"md5": "a933c5b49f13082b62be56fd96c71247", "sha256": "c2a16e46f17dcd1abe39c97e5078acceff73f304052542a2ed6157cf44b73c6c"}, "downloads": -1, "filename": "django-maced-0.4.25.zip", "has_sig": false, "md5_digest": "a933c5b49f13082b62be56fd96c71247", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40864, "upload_time": "2016-11-04T08:03:38", "upload_time_iso_8601": "2016-11-04T08:03:38.573421Z", "url": "https://files.pythonhosted.org/packages/50/7f/14d49a3533eb63591304f7c85a7a43b380b089c393576fdcdb497c09712e/django-maced-0.4.25.zip", "yanked": false}], "0.4.26": [{"comment_text": "", "digests": {"md5": "ec4692eff1a8baf7379deff8a95406da", "sha256": "d94a0b5de2f42bfd3ef325754bfb215c0d8c552342c2d3e0757f067f956c753a"}, "downloads": -1, "filename": "django-maced-0.4.26.zip", "has_sig": false, "md5_digest": "ec4692eff1a8baf7379deff8a95406da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40895, "upload_time": "2016-11-04T08:22:42", "upload_time_iso_8601": "2016-11-04T08:22:42.381259Z", "url": "https://files.pythonhosted.org/packages/41/78/09e02b844a8d4a43ccd8877429b77fef176e923d25fc063734ec30602c73/django-maced-0.4.26.zip", "yanked": false}], "0.4.27": [{"comment_text": "", "digests": {"md5": "66e7a671161b7be093cbcc08dc1c6f6c", "sha256": "a71e4240e280b278613dbe840fd0a50fddc8a904cd4e46438a793d607a8f0f22"}, "downloads": -1, "filename": "django-maced-0.4.27.zip", "has_sig": false, "md5_digest": "66e7a671161b7be093cbcc08dc1c6f6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40891, "upload_time": "2016-11-04T08:28:17", "upload_time_iso_8601": "2016-11-04T08:28:17.391917Z", "url": "https://files.pythonhosted.org/packages/0a/bf/5eb95cac1939c023edba18f687d293903772224c6984376400c340072346/django-maced-0.4.27.zip", "yanked": false}], "0.4.28": [{"comment_text": "", "digests": {"md5": "ba7c9acad9b87aef162a5ebf38a23c7b", "sha256": "7ba9cb91c8d3deded449dc15b4402f596f0c48a4906ccb47a6a0c7348220e1da"}, "downloads": -1, "filename": "django-maced-0.4.28.zip", "has_sig": false, "md5_digest": "ba7c9acad9b87aef162a5ebf38a23c7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40893, "upload_time": "2016-11-04T09:32:10", "upload_time_iso_8601": "2016-11-04T09:32:10.366258Z", "url": "https://files.pythonhosted.org/packages/9b/3c/9d55c005ffc5e1ff2694d5117f430ad2429ad90c3f0048a49f0c26e2ab9e/django-maced-0.4.28.zip", "yanked": false}], "0.4.29": [{"comment_text": "", "digests": {"md5": "b07c53bfe03bc548d897592a51511e7e", "sha256": "fb4b032450029de0a6bc0de6e1e9f6ee96d10040b8e0b38565405996a28d02f1"}, "downloads": -1, "filename": "django-maced-0.4.29.zip", "has_sig": false, "md5_digest": "b07c53bfe03bc548d897592a51511e7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40979, "upload_time": "2016-11-05T05:56:41", "upload_time_iso_8601": "2016-11-05T05:56:41.180642Z", "url": "https://files.pythonhosted.org/packages/66/75/ef46292db7a74cfdcea28665f05c5d886a07b6009b118cceb19e2148cf40/django-maced-0.4.29.zip", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "c29c6df4b508f7d648ca1fc4d4ffe154", "sha256": "33cf44d7981e0744bdd9d300414204d3ad03552ca93800dc1b5179ea1f2dda82"}, "downloads": -1, "filename": "django-maced-0.4.3.zip", "has_sig": false, "md5_digest": "c29c6df4b508f7d648ca1fc4d4ffe154", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35907, "upload_time": "2016-02-15T23:28:01", "upload_time_iso_8601": "2016-02-15T23:28:01.618849Z", "url": "https://files.pythonhosted.org/packages/fc/03/7a702f9271d6e857a40f144a9296fdd1584ca054028b3f4267daf039f154/django-maced-0.4.3.zip", "yanked": false}], "0.4.30": [{"comment_text": "", "digests": {"md5": "4ce1e41730610dbd7c73550cdee6c8da", "sha256": "7a0198ea2e63bdf472bfe796dad707b54304ddd7802703b91869c9270e3a4573"}, "downloads": -1, "filename": "django-maced-0.4.30.zip", "has_sig": false, "md5_digest": "4ce1e41730610dbd7c73550cdee6c8da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40984, "upload_time": "2016-11-05T07:23:11", "upload_time_iso_8601": "2016-11-05T07:23:11.783560Z", "url": "https://files.pythonhosted.org/packages/89/64/df231926e4bd0e082f4d113030c23d985c4f1e874e03db65752d4e465d4a/django-maced-0.4.30.zip", "yanked": false}], "0.4.31": [{"comment_text": "", "digests": {"md5": "75e3206ff5eec79db8db3a8d33ec8112", "sha256": "55d86e95036a1766c8ed9c88f62f32095db306002bfa8598701cf07acee056e7"}, "downloads": -1, "filename": "django-maced-0.4.31.zip", "has_sig": false, "md5_digest": "75e3206ff5eec79db8db3a8d33ec8112", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41218, "upload_time": "2016-12-20T08:28:23", "upload_time_iso_8601": "2016-12-20T08:28:23.698877Z", "url": "https://files.pythonhosted.org/packages/ba/25/9fb1c907ab4976abe2a7884a01cb55b6231cfcdfa14c63e60e458ebf981a/django-maced-0.4.31.zip", "yanked": false}], "0.4.32": [{"comment_text": "", "digests": {"md5": "4a2332e594a8877f9550b4386b99b49c", "sha256": "9145a4163419376d9398e1a1612993b1398259f09748b04fe13ce7f7fe409369"}, "downloads": -1, "filename": "django-maced-0.4.32.zip", "has_sig": false, "md5_digest": "4a2332e594a8877f9550b4386b99b49c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41233, "upload_time": "2017-01-10T04:00:06", "upload_time_iso_8601": "2017-01-10T04:00:06.281583Z", "url": "https://files.pythonhosted.org/packages/4e/76/e2016ad50806cb2b7c4c2bef107bc94dc8eb1e4fddd30c328f0c089bfa94/django-maced-0.4.32.zip", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "e572d1864f4386504f01b722b43f703d", "sha256": "e7e966fdc3daf5c7f86d454f84421ae6a3d8f41fe0108f2ed9fbc88765b342d7"}, "downloads": -1, "filename": "django-maced-0.4.4.zip", "has_sig": false, "md5_digest": "e572d1864f4386504f01b722b43f703d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37711, "upload_time": "2016-02-18T00:08:13", "upload_time_iso_8601": "2016-02-18T00:08:13.538096Z", "url": "https://files.pythonhosted.org/packages/53/22/57e108bab85bc0497d0b9e046eca96572394ace318a5606058cfdb86db50/django-maced-0.4.4.zip", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "4a73f686b3a462aaae103dc1b7031e21", "sha256": "f966315af1abac522298d9a96e78cc64fb1001df35a7648d916daf2710979b78"}, "downloads": -1, "filename": "django-maced-0.4.5.zip", "has_sig": false, "md5_digest": "4a73f686b3a462aaae103dc1b7031e21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39197, "upload_time": "2016-03-02T18:29:35", "upload_time_iso_8601": "2016-03-02T18:29:35.039003Z", "url": "https://files.pythonhosted.org/packages/d2/07/974d0378d9f54762a4471d847e775f7f606dd2c1896e01e358d57f18e281/django-maced-0.4.5.zip", "yanked": false}], "0.4.6": [{"comment_text": "", "digests": {"md5": "5b05212702e9671bf80fe85c15df148e", "sha256": "c9af2ed5402e392b2e5b6e9d64527d74856173db3da3bc76b15fea1ab5d53fc2"}, "downloads": -1, "filename": "django-maced-0.4.6.zip", "has_sig": false, "md5_digest": "5b05212702e9671bf80fe85c15df148e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39748, "upload_time": "2016-03-07T03:31:58", "upload_time_iso_8601": "2016-03-07T03:31:58.689519Z", "url": "https://files.pythonhosted.org/packages/1f/1e/d57edd292c75e943e65b453618adaafeaae9ba4442b4e354b2ef31e5041d/django-maced-0.4.6.zip", "yanked": false}], "0.4.7": [{"comment_text": "", "digests": {"md5": "fb5c12b260710c1e48ece16c87746ab8", "sha256": "2c153fa6df345cfc81a1645428ea52306277717e1b16348941134cc8d3099473"}, "downloads": -1, "filename": "django-maced-0.4.7.zip", "has_sig": false, "md5_digest": "fb5c12b260710c1e48ece16c87746ab8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39995, "upload_time": "2016-08-22T19:05:45", "upload_time_iso_8601": "2016-08-22T19:05:45.885932Z", "url": "https://files.pythonhosted.org/packages/96/9f/18cb2159bd3d1aaa741801fd36286120eab199c7f31a077573990491ae63/django-maced-0.4.7.zip", "yanked": false}], "0.4.8": [{"comment_text": "", "digests": {"md5": "e823cbb5816482cb9f80f592fbb5bdd8", "sha256": "00bce175671d8a234ec519c070139237c4e7fd4f8f3ac7cddd65dbfa74b06ef0"}, "downloads": -1, "filename": "django-maced-0.4.8.zip", "has_sig": false, "md5_digest": "e823cbb5816482cb9f80f592fbb5bdd8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40141, "upload_time": "2016-10-02T23:27:11", "upload_time_iso_8601": "2016-10-02T23:27:11.362635Z", "url": "https://files.pythonhosted.org/packages/fd/ce/8ecea2c9d70df5554f3ad7d9b2214db0a5c0767294fefce93744633fa0fb/django-maced-0.4.8.zip", "yanked": false}], "0.4.9": [{"comment_text": "", "digests": {"md5": "32ef22eee4c98f6dafaab3f120ab0d59", "sha256": "94a14e6f5286a8bf0598ae689874abc7811b59784e68034226033a6d12e09209"}, "downloads": -1, "filename": "django-maced-0.4.9.zip", "has_sig": false, "md5_digest": "32ef22eee4c98f6dafaab3f120ab0d59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40161, "upload_time": "2016-10-03T00:02:08", "upload_time_iso_8601": "2016-10-03T00:02:08.596905Z", "url": "https://files.pythonhosted.org/packages/13/f2/1e37fc91285629298dc6edc79f840f5dc3bcc56fb2f7c77ac45c33d64a67/django-maced-0.4.9.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4a2332e594a8877f9550b4386b99b49c", "sha256": "9145a4163419376d9398e1a1612993b1398259f09748b04fe13ce7f7fe409369"}, "downloads": -1, "filename": "django-maced-0.4.32.zip", "has_sig": false, "md5_digest": "4a2332e594a8877f9550b4386b99b49c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41233, "upload_time": "2017-01-10T04:00:06", "upload_time_iso_8601": "2017-01-10T04:00:06.281583Z", "url": "https://files.pythonhosted.org/packages/4e/76/e2016ad50806cb2b7c4c2bef107bc94dc8eb1e4fddd30c328f0c089bfa94/django-maced-0.4.32.zip", "yanked": false}], "timestamp": "Fri May  8 00:35:14 2020"}