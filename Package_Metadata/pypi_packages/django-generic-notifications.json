{"info": {"author": "Kevin Renskers", "author_email": "info@mixedcase.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "========\nOverview\n========\n\n**A Django app that can handle multiple ways of showing different notification types. It's all based on multiple input\ntypes and output backends.**\n\n\nNotifications\n=============\nA notification could be anything:\n\n- you have received a private message on a forum\n- there is a new comment on your blog\n- someone liked your profile or article\n- a new post was created in a thread you follow\n- someone answered your poll\n- you have a new friend request or follower\n\nAs far as this project is concerned, a notification is nothing more but an (optional) subject, text body, and a list of\nreceivers.\n\nBackends\n========\nThere are multiple output backends. Some possible examples are:\n\n- email\n- sms message\n- iPhone push notification\n- notification center\n\nAt this moment only two email backends are provided.\n\nNotification types\n==================\nA notification type is the glue between a message (input) and one or more possible backends (output). For example, you\nmight want to send all account related messages to email only, but notifications about new private messages could go to\nemail, iPhone push messages, Django's own messages app, you name it.\n\nEach notification type can specify its allowed backend(s), and each user can specify his preferred output backend(s).\nEach notification will then figure out what backend to use based on this information.\n\nSettings\n========\nSome backends will need extra information from the user, for example a phone number or email address.\n\nUsers can also select which notification types they're interested in, and what possible backends they would like to\nreceive the message on.\n\nQueue\n=====\nMost notification backends can't process in real time, instead adding them to a queue. At this moment, this is based on\na simple database model and a manage.py script which can be used from your cron.\n\nIn the future celery tasks should be added too.\n\nInstallation\n============\nSee `INSTALL.rst`\n\nUsage\n=====\nSee `USAGE.rst` for examples", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kevinrenskers/django-generic-notifications", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-generic-notifications", "package_url": "https://pypi.org/project/django-generic-notifications/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-generic-notifications/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/kevinrenskers/django-generic-notifications"}, "release_url": "https://pypi.org/project/django-generic-notifications/0.2.2/", "requires_dist": null, "requires_python": null, "summary": "Generic notification system for Django, with multiple input types and output backends", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>A Django app that can handle multiple ways of showing different notification types. It\u2019s all based on multiple input\ntypes and output backends.</strong></p>\n<div id=\"notifications\">\n<h2>Notifications</h2>\n<p>A notification could be anything:</p>\n<ul>\n<li>you have received a private message on a forum</li>\n<li>there is a new comment on your blog</li>\n<li>someone liked your profile or article</li>\n<li>a new post was created in a thread you follow</li>\n<li>someone answered your poll</li>\n<li>you have a new friend request or follower</li>\n</ul>\n<p>As far as this project is concerned, a notification is nothing more but an (optional) subject, text body, and a list of\nreceivers.</p>\n</div>\n<div id=\"backends\">\n<h2>Backends</h2>\n<p>There are multiple output backends. Some possible examples are:</p>\n<ul>\n<li>email</li>\n<li>sms message</li>\n<li>iPhone push notification</li>\n<li>notification center</li>\n</ul>\n<p>At this moment only two email backends are provided.</p>\n</div>\n<div id=\"notification-types\">\n<h2>Notification types</h2>\n<p>A notification type is the glue between a message (input) and one or more possible backends (output). For example, you\nmight want to send all account related messages to email only, but notifications about new private messages could go to\nemail, iPhone push messages, Django\u2019s own messages app, you name it.</p>\n<p>Each notification type can specify its allowed backend(s), and each user can specify his preferred output backend(s).\nEach notification will then figure out what backend to use based on this information.</p>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p>Some backends will need extra information from the user, for example a phone number or email address.</p>\n<p>Users can also select which notification types they\u2019re interested in, and what possible backends they would like to\nreceive the message on.</p>\n</div>\n<div id=\"queue\">\n<h2>Queue</h2>\n<p>Most notification backends can\u2019t process in real time, instead adding them to a queue. At this moment, this is based on\na simple database model and a manage.py script which can be used from your cron.</p>\n<p>In the future celery tasks should be added too.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>See <cite>INSTALL.rst</cite></p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>See <cite>USAGE.rst</cite> for examples</p>\n</div>\n\n          </div>"}, "last_serial": 789735, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "fd9f79820b0284fa1d6ed2a3a624a6ae", "sha256": "157da2b75edeb394b063662c3f44d9ce1bf5292e6bee9f81276da7e655d51865"}, "downloads": -1, "filename": "django-generic-notifications-0.2.1.tar.gz", "has_sig": false, "md5_digest": "fd9f79820b0284fa1d6ed2a3a624a6ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6583, "upload_time": "2012-02-05T13:58:29", "upload_time_iso_8601": "2012-02-05T13:58:29.732427Z", "url": "https://files.pythonhosted.org/packages/51/d0/b2d5e4d2835bd72091fb25e92e543e9bae8c750da90faf036983e4b9b914/django-generic-notifications-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "e0d125ffa45c1a5a4138634a0482f9cd", "sha256": "78170173a4db2bba90405d4ecdaad8d60c4ecfdbec3f38466b9008f477494bd2"}, "downloads": -1, "filename": "django-generic-notifications-0.2.2.tar.gz", "has_sig": false, "md5_digest": "e0d125ffa45c1a5a4138634a0482f9cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6637, "upload_time": "2012-02-05T14:14:40", "upload_time_iso_8601": "2012-02-05T14:14:40.977793Z", "url": "https://files.pythonhosted.org/packages/e6/97/62c70b8226b189a3629e0102a817feb464f1bb5ffb087bbaa41407421fb5/django-generic-notifications-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e0d125ffa45c1a5a4138634a0482f9cd", "sha256": "78170173a4db2bba90405d4ecdaad8d60c4ecfdbec3f38466b9008f477494bd2"}, "downloads": -1, "filename": "django-generic-notifications-0.2.2.tar.gz", "has_sig": false, "md5_digest": "e0d125ffa45c1a5a4138634a0482f9cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6637, "upload_time": "2012-02-05T14:14:40", "upload_time_iso_8601": "2012-02-05T14:14:40.977793Z", "url": "https://files.pythonhosted.org/packages/e6/97/62c70b8226b189a3629e0102a817feb464f1bb5ffb087bbaa41407421fb5/django-generic-notifications-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:54 2020"}