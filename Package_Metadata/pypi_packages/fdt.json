{"info": {"author": "Martin Olejar", "author_email": "martin.olejar@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering", "Topic :: Software Development :: Embedded Systems", "Topic :: Utilities"], "description": "# Flattened Device Tree Python Module \n\n[![Build Status](https://travis-ci.org/molejar/pyFDT.svg?branch=master)](https://travis-ci.org/molejar/pyFDT)\n[![Coverage Status](https://coveralls.io/repos/github/molejar/pyFDT/badge.svg)](https://coveralls.io/github/molejar/pyFDT)\n[![PyPI Status](https://img.shields.io/pypi/v/fdt.svg)](https://pypi.python.org/pypi/fdt)\n[![Python Version](https://img.shields.io/pypi/pyversions/fdt.svg)](https://www.python.org)\n\nThis python module is usable for manipulation with [Device Tree Data](https://www.devicetree.org/) and primary was \ncreated for [i.MX Smart-Boot Tool](https://github.com/molejar/imxsb)\n\n> Some parts in this module have been inspired from: https://github.com/superna9999/pyfdt project.\n\n## Installation\n\n```bash\npip install fdt\n```\n\nTo install the latest version from master branch execute in shell following command:\n\n```bash\npip install -U https://github.com/molejar/pyFDT/archive/master.zip\n```\n\nIn case of development, install it from cloned sources:\n\n```bash\ngit clone https://github.com/molejar/pyFDT.git\ncd pyFDT\npip install -U -e .\n```\n\n**NOTE:** You may run into a permissions issues running these commands. Here are a few options how to fix it:\n\n1. Run with `sudo` to install `fdt` and dependencies globally\n2. Specify the `--user` option to install locally into your home directory (export \"~/.local/bin\" into PATH variable if haven't).\n3. Run the command in a [virtualenv](https://virtualenv.pypa.io/en/latest/) local to a specific project working set.\n\n## Usage\n\n**fdt** module has intuitive and self describing API, what is presented in following example. Many of general requirements \nfor manipulation with FDT Nodes, Properties and dts/dtb files are already implemented.\n\n```python\n  import fdt\n\n  #-----------------------------------------------\n  # convert *.dtb to *.dts\n  # ----------------------------------------------\n  with open(\"example.dtb\", \"rb\") as f:\n      dtb_data = f.read()\n\n  dt1 = fdt.parse_dtb(dtb_data)\n\n  with open(\"example.dts\", \"w\") as f:\n      f.write(dt1.to_dts())\n\n  #-----------------------------------------------\n  # convert *.dts to *.dtb\n  # ----------------------------------------------\n  with open(\"example.dts\", \"r\") as f:\n      dts_text = f.read()\n\n  dt2 = fdt.parse_dts(dts_text)\n\n  with open(\"example.dtb\", \"wb\") as f:\n      f.write(dt2.to_dtb(version=17))\n\n  #-----------------------------------------------\n  # Add Property and Node into dt2\n  # ----------------------------------------------\n  node = fdt.Node('test_node')\n  node.append(fdt.Property('basic_property'))\n  node.append(fdt.PropStrings('string_property', 'value1', 'value2'))\n  node.append(fdt.PropWords('words_property', 0x1000, 0x80000000))\n  node.append(fdt.PropBytes('bytes_property', data=[0, 200, 12]))\n  dt2.add_item(node)\n\n  #-----------------------------------------------\n  # merge dt2 into dt1\n  # ----------------------------------------------\n  dt1.merge(dt2)\n\n  with open(\"merged.dtb\", \"wb\") as f:\n      f.write(dt1.to_dtb(version=17))\n\n  #-----------------------------------------------\n  # diff two fdt objects\n  # ----------------------------------------------\n  out = fdt.diff(dt1, dt2)\n\n  print(out[0]) # same in dt1 and dt2\n  print(out[1]) # specific for dt1\n  print(out[2]) # specific for dt2\n```\n\n## [ pydtc ] Tool\n\nThe python device tree converter **pydtc** is a tool for conversion *.dts to *.dtb and vice versa. Is distributed\ntogether with **fdt** module. This tool can be in some cases used as replacement of [device tree compiler](https://git.kernel.org/pub/scm/utils/dtc/dtc.git).  \n\n```bash\n  $ pydtc -h\n\nusage: pydtc [-h] [-v] {pack,unpack,merge,diff} ...\n\nFlat Device Tree (FDT) tool for manipulation with *.dtb and *.dts files\n\npositional arguments:\n  {pack,unpack,merge,diff}\n    pack                Pack *.dts into binary blob (*.dtb)\n    unpack              Unpack *.dtb into readable format (*.dts)\n    merge               Merge more files in *.dtb or *.dts format\n    diff                Compare two files in *.dtb or *.dts format\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         show program's version number and exit\n\n```\n\n#### $ pydtc unpack [-h] [-s TAB_SIZE] [-o DTS_FILE] dtb_file\n\nUnpack Device Tree from binary blob *.dtb into readable text file *.dts\n\n**dtb_file** - Single DTB file with `dtb` extension\n\n##### optional arguments:\n* **-h, --help** - Show this help message and exit\n* **-s TAB_SIZE** - Tabulator Size\n* **-o DTS_FILE** - Output path/file name (*.dts)\n\n##### Example:\n\n```bash\npydtc unpack test.dtb\n\nDTS saved as: test.dts\n```\n\n#### $ pydtc pack [-h] [-v VERSION] [-l LC_VERSION] [-c CPU_ID] [-p] [-o DTB_FILE] dts_file\n\n\nPack Device Tree from readable text file *.dts into binary blob *.dtb\n\n**dts_file** - Single DTS file as *.dts\n\n##### optional arguments:\n* **-h, --help** - Show this help message and exit\n* **-v VERSION** - DTB Version\n* **-l LC_VERSION** - DTB Last Compatible Version\n* **-c CPU_ID** - Boot CPU ID\n* **-p** - Update phandle\n* **-o DTB_FILE** - Output path/file name (*.dtb)\n\n##### Example:\n\n``` bash\npydtc pack -v 17 test.dts\n\nDTB saved as: test.dtb\n```\n\n#### $ pydtc merge [-h] [-t {auto,dts,dtb}] [-s TAB_SIZE] out_file in_files [in_files ...]\n\n\nMerge two and more *.dtb or *.dts files into one *.dts file\n\n**out_file** - The output file name with *.dts extension <br>\n**in_files** - Two or more input files with *.dtb or *.dts extension\n\n##### optional arguments:\n* **-h, --help** - Show this help message and exit\n* **-t {auto,dts,dtb}** - Input file type: 'auto', 'dts', 'dtb' (default: auto)\n* **-s TAB_SIZE** - Tabulator Size\n\n##### Example:\n\n```bash\npydtc merge out.dts test1.dtb test2.dtb\n\nOutput saved as: out.dts\n```\n\n#### $ pydtc diff [-h] [-t {auto,dts,dtb}] [-o OUT_DIR] in_file1 in_file2\n\nCompare two dtb/dts files and generate 3 dts files (same in 1 and 2, specific for 1, specific for 2)\n\n**in_file1** - Input file 1 <br>\n**in_file2** - Input file 2\n\n##### optional arguments:\n* **-h, --help** - Show this help message and exit\n* **-t {auto,dts,dtb}** - Input file type: 'auto', 'dts', 'dtb' (default: auto)\n* **-o OUT_DIR** - Output directory (default: diff_out)\n\n##### Example:\n\n```bash\npydtc diff test1.dtb test2.dtb\n\nOutput saved into: diff_out\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/molejar/pyFDT", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "fdt", "package_url": "https://pypi.org/project/fdt/", "platform": "", "project_url": "https://pypi.org/project/fdt/", "project_urls": {"Homepage": "https://github.com/molejar/pyFDT"}, "release_url": "https://pypi.org/project/fdt/0.2.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Flattened Device Tree Python Module", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Flattened Device Tree Python Module</h1>\n<p><a href=\"https://travis-ci.org/molejar/pyFDT\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ad13e20047a74492fdc9cea1b8abf683fa761bf3/68747470733a2f2f7472617669732d63692e6f72672f6d6f6c656a61722f70794644542e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/molejar/pyFDT\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f29852edc79d9e6f379d5ea60f354fe7dba1eda4/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d6f6c656a61722f70794644542f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/fdt\" rel=\"nofollow\"><img alt=\"PyPI Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/26e81f52e8ed7b590375ddd2169888c87a387bd0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6664742e737667\"></a>\n<a href=\"https://www.python.org\" rel=\"nofollow\"><img alt=\"Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b2593d6e4db2ba527dea40c6e25ccd8325305dc7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6664742e737667\"></a></p>\n<p>This python module is usable for manipulation with <a href=\"https://www.devicetree.org/\" rel=\"nofollow\">Device Tree Data</a> and primary was\ncreated for <a href=\"https://github.com/molejar/imxsb\" rel=\"nofollow\">i.MX Smart-Boot Tool</a></p>\n<blockquote>\n<p>Some parts in this module have been inspired from: <a href=\"https://github.com/superna9999/pyfdt\" rel=\"nofollow\">https://github.com/superna9999/pyfdt</a> project.</p>\n</blockquote>\n<h2>Installation</h2>\n<pre>pip install fdt\n</pre>\n<p>To install the latest version from master branch execute in shell following command:</p>\n<pre>pip install -U https://github.com/molejar/pyFDT/archive/master.zip\n</pre>\n<p>In case of development, install it from cloned sources:</p>\n<pre>git clone https://github.com/molejar/pyFDT.git\n<span class=\"nb\">cd</span> pyFDT\npip install -U -e .\n</pre>\n<p><strong>NOTE:</strong> You may run into a permissions issues running these commands. Here are a few options how to fix it:</p>\n<ol>\n<li>Run with <code>sudo</code> to install <code>fdt</code> and dependencies globally</li>\n<li>Specify the <code>--user</code> option to install locally into your home directory (export \"~/.local/bin\" into PATH variable if haven't).</li>\n<li>Run the command in a <a href=\"https://virtualenv.pypa.io/en/latest/\" rel=\"nofollow\">virtualenv</a> local to a specific project working set.</li>\n</ol>\n<h2>Usage</h2>\n<p><strong>fdt</strong> module has intuitive and self describing API, what is presented in following example. Many of general requirements\nfor manipulation with FDT Nodes, Properties and dts/dtb files are already implemented.</p>\n<pre>  <span class=\"kn\">import</span> <span class=\"nn\">fdt</span>\n\n  <span class=\"c1\">#-----------------------------------------------</span>\n  <span class=\"c1\"># convert *.dtb to *.dts</span>\n  <span class=\"c1\"># ----------------------------------------------</span>\n  <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"example.dtb\"</span><span class=\"p\">,</span> <span class=\"s2\">\"rb\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n      <span class=\"n\">dtb_data</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n  <span class=\"n\">dt1</span> <span class=\"o\">=</span> <span class=\"n\">fdt</span><span class=\"o\">.</span><span class=\"n\">parse_dtb</span><span class=\"p\">(</span><span class=\"n\">dtb_data</span><span class=\"p\">)</span>\n\n  <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"example.dts\"</span><span class=\"p\">,</span> <span class=\"s2\">\"w\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n      <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">dt1</span><span class=\"o\">.</span><span class=\"n\">to_dts</span><span class=\"p\">())</span>\n\n  <span class=\"c1\">#-----------------------------------------------</span>\n  <span class=\"c1\"># convert *.dts to *.dtb</span>\n  <span class=\"c1\"># ----------------------------------------------</span>\n  <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"example.dts\"</span><span class=\"p\">,</span> <span class=\"s2\">\"r\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n      <span class=\"n\">dts_text</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n  <span class=\"n\">dt2</span> <span class=\"o\">=</span> <span class=\"n\">fdt</span><span class=\"o\">.</span><span class=\"n\">parse_dts</span><span class=\"p\">(</span><span class=\"n\">dts_text</span><span class=\"p\">)</span>\n\n  <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"example.dtb\"</span><span class=\"p\">,</span> <span class=\"s2\">\"wb\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n      <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">dt2</span><span class=\"o\">.</span><span class=\"n\">to_dtb</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"o\">=</span><span class=\"mi\">17</span><span class=\"p\">))</span>\n\n  <span class=\"c1\">#-----------------------------------------------</span>\n  <span class=\"c1\"># Add Property and Node into dt2</span>\n  <span class=\"c1\"># ----------------------------------------------</span>\n  <span class=\"n\">node</span> <span class=\"o\">=</span> <span class=\"n\">fdt</span><span class=\"o\">.</span><span class=\"n\">Node</span><span class=\"p\">(</span><span class=\"s1\">'test_node'</span><span class=\"p\">)</span>\n  <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">fdt</span><span class=\"o\">.</span><span class=\"n\">Property</span><span class=\"p\">(</span><span class=\"s1\">'basic_property'</span><span class=\"p\">))</span>\n  <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">fdt</span><span class=\"o\">.</span><span class=\"n\">PropStrings</span><span class=\"p\">(</span><span class=\"s1\">'string_property'</span><span class=\"p\">,</span> <span class=\"s1\">'value1'</span><span class=\"p\">,</span> <span class=\"s1\">'value2'</span><span class=\"p\">))</span>\n  <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">fdt</span><span class=\"o\">.</span><span class=\"n\">PropWords</span><span class=\"p\">(</span><span class=\"s1\">'words_property'</span><span class=\"p\">,</span> <span class=\"mh\">0x1000</span><span class=\"p\">,</span> <span class=\"mh\">0x80000000</span><span class=\"p\">))</span>\n  <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">fdt</span><span class=\"o\">.</span><span class=\"n\">PropBytes</span><span class=\"p\">(</span><span class=\"s1\">'bytes_property'</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">]))</span>\n  <span class=\"n\">dt2</span><span class=\"o\">.</span><span class=\"n\">add_item</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">)</span>\n\n  <span class=\"c1\">#-----------------------------------------------</span>\n  <span class=\"c1\"># merge dt2 into dt1</span>\n  <span class=\"c1\"># ----------------------------------------------</span>\n  <span class=\"n\">dt1</span><span class=\"o\">.</span><span class=\"n\">merge</span><span class=\"p\">(</span><span class=\"n\">dt2</span><span class=\"p\">)</span>\n\n  <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"merged.dtb\"</span><span class=\"p\">,</span> <span class=\"s2\">\"wb\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n      <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">dt1</span><span class=\"o\">.</span><span class=\"n\">to_dtb</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"o\">=</span><span class=\"mi\">17</span><span class=\"p\">))</span>\n\n  <span class=\"c1\">#-----------------------------------------------</span>\n  <span class=\"c1\"># diff two fdt objects</span>\n  <span class=\"c1\"># ----------------------------------------------</span>\n  <span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"n\">fdt</span><span class=\"o\">.</span><span class=\"n\">diff</span><span class=\"p\">(</span><span class=\"n\">dt1</span><span class=\"p\">,</span> <span class=\"n\">dt2</span><span class=\"p\">)</span>\n\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"c1\"># same in dt1 and dt2</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"c1\"># specific for dt1</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span> <span class=\"c1\"># specific for dt2</span>\n</pre>\n<h2>[ pydtc ] Tool</h2>\n<p>The python device tree converter <strong>pydtc</strong> is a tool for conversion *.dts to *.dtb and vice versa. Is distributed\ntogether with <strong>fdt</strong> module. This tool can be in some cases used as replacement of <a href=\"https://git.kernel.org/pub/scm/utils/dtc/dtc.git\" rel=\"nofollow\">device tree compiler</a>.</p>\n<pre>  $ pydtc -h\n\nusage: pydtc <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>-v<span class=\"o\">]</span> <span class=\"o\">{</span>pack,unpack,merge,diff<span class=\"o\">}</span> ...\n\nFlat Device Tree <span class=\"o\">(</span>FDT<span class=\"o\">)</span> tool <span class=\"k\">for</span> manipulation with *.dtb and *.dts files\n\npositional arguments:\n  <span class=\"o\">{</span>pack,unpack,merge,diff<span class=\"o\">}</span>\n    pack                Pack *.dts into binary blob <span class=\"o\">(</span>*.dtb<span class=\"o\">)</span>\n    unpack              Unpack *.dtb into readable format <span class=\"o\">(</span>*.dts<span class=\"o\">)</span>\n    merge               Merge more files in *.dtb or *.dts format\n    diff                Compare two files in *.dtb or *.dts format\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -v, --version         show program<span class=\"err\">'</span>s version number and <span class=\"nb\">exit</span>\n</pre>\n<h4>$ pydtc unpack [-h] [-s TAB_SIZE] [-o DTS_FILE] dtb_file</h4>\n<p>Unpack Device Tree from binary blob *.dtb into readable text file *.dts</p>\n<p><strong>dtb_file</strong> - Single DTB file with <code>dtb</code> extension</p>\n<h5>optional arguments:</h5>\n<ul>\n<li><strong>-h, --help</strong> - Show this help message and exit</li>\n<li><strong>-s TAB_SIZE</strong> - Tabulator Size</li>\n<li><strong>-o DTS_FILE</strong> - Output path/file name (*.dts)</li>\n</ul>\n<h5>Example:</h5>\n<pre>pydtc unpack test.dtb\n\nDTS saved as: test.dts\n</pre>\n<h4>$ pydtc pack [-h] [-v VERSION] [-l LC_VERSION] [-c CPU_ID] [-p] [-o DTB_FILE] dts_file</h4>\n<p>Pack Device Tree from readable text file *.dts into binary blob *.dtb</p>\n<p><strong>dts_file</strong> - Single DTS file as *.dts</p>\n<h5>optional arguments:</h5>\n<ul>\n<li><strong>-h, --help</strong> - Show this help message and exit</li>\n<li><strong>-v VERSION</strong> - DTB Version</li>\n<li><strong>-l LC_VERSION</strong> - DTB Last Compatible Version</li>\n<li><strong>-c CPU_ID</strong> - Boot CPU ID</li>\n<li><strong>-p</strong> - Update phandle</li>\n<li><strong>-o DTB_FILE</strong> - Output path/file name (*.dtb)</li>\n</ul>\n<h5>Example:</h5>\n<pre>pydtc pack -v <span class=\"m\">17</span> test.dts\n\nDTB saved as: test.dtb\n</pre>\n<h4>$ pydtc merge [-h] [-t {auto,dts,dtb}] [-s TAB_SIZE] out_file in_files [in_files ...]</h4>\n<p>Merge two and more *.dtb or *.dts files into one *.dts file</p>\n<p><strong>out_file</strong> - The output file name with *.dts extension <br>\n<strong>in_files</strong> - Two or more input files with *.dtb or *.dts extension</p>\n<h5>optional arguments:</h5>\n<ul>\n<li><strong>-h, --help</strong> - Show this help message and exit</li>\n<li><strong>-t {auto,dts,dtb}</strong> - Input file type: 'auto', 'dts', 'dtb' (default: auto)</li>\n<li><strong>-s TAB_SIZE</strong> - Tabulator Size</li>\n</ul>\n<h5>Example:</h5>\n<pre>pydtc merge out.dts test1.dtb test2.dtb\n\nOutput saved as: out.dts\n</pre>\n<h4>$ pydtc diff [-h] [-t {auto,dts,dtb}] [-o OUT_DIR] in_file1 in_file2</h4>\n<p>Compare two dtb/dts files and generate 3 dts files (same in 1 and 2, specific for 1, specific for 2)</p>\n<p><strong>in_file1</strong> - Input file 1 <br>\n<strong>in_file2</strong> - Input file 2</p>\n<h5>optional arguments:</h5>\n<ul>\n<li><strong>-h, --help</strong> - Show this help message and exit</li>\n<li><strong>-t {auto,dts,dtb}</strong> - Input file type: 'auto', 'dts', 'dtb' (default: auto)</li>\n<li><strong>-o OUT_DIR</strong> - Output directory (default: diff_out)</li>\n</ul>\n<h5>Example:</h5>\n<pre>pydtc diff test1.dtb test2.dtb\n\nOutput saved into: diff_out\n</pre>\n\n          </div>"}, "last_serial": 6177969, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b41f0a7f20d9677985057af850b0b812", "sha256": "7d153b4a0992ac1184aa2b86959e49d737b8464b1a153bdf590a0d151e0a7ee2"}, "downloads": -1, "filename": "fdt-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b41f0a7f20d9677985057af850b0b812", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 15959, "upload_time": "2018-04-14T23:36:57", "upload_time_iso_8601": "2018-04-14T23:36:57.197092Z", "url": "https://files.pythonhosted.org/packages/4b/e4/a5f7fa7612d09a0f04e1a5b6c898e18544e74f92446c5b27ce206b4c6dff/fdt-0.1.0-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "708f68aff66cad674ab976c33742602c", "sha256": "56ecd2b0b173ca7684b93f4131eb5f3aa9f09bd165927cadeb14971910d917b0"}, "downloads": -1, "filename": "fdt-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "708f68aff66cad674ab976c33742602c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 20304, "upload_time": "2018-04-15T18:54:42", "upload_time_iso_8601": "2018-04-15T18:54:42.587617Z", "url": "https://files.pythonhosted.org/packages/af/e6/ab3b2acddecc81e24862295a016bbc33c4478a5fd448fdf136aba8932f92/fdt-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a05445ab4af87e2259f32b8de0a4b61", "sha256": "9b67d902a901cd534478648e2ddfcbcd24298bd1a96e21ff284af8fa6cce3aea"}, "downloads": -1, "filename": "fdt-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1a05445ab4af87e2259f32b8de0a4b61", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 15114, "upload_time": "2018-04-15T22:34:59", "upload_time_iso_8601": "2018-04-15T22:34:59.812755Z", "url": "https://files.pythonhosted.org/packages/7f/f0/6f27319088eed4ccfb8823b6c2b6860b528c3ee00983fc1af2827a2c83bf/fdt-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "8a7f43038045283f13c3f0f307e4bf62", "sha256": "a5b39e9bb427ac3a3a77e3a5be8b4648d7088ddcaddb9aebf37f7d023565fbd8"}, "downloads": -1, "filename": "fdt-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8a7f43038045283f13c3f0f307e4bf62", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20978, "upload_time": "2018-05-08T19:23:19", "upload_time_iso_8601": "2018-05-08T19:23:19.797371Z", "url": "https://files.pythonhosted.org/packages/14/60/62fbe27ce6540bbd69b20172b0e10b1409367d3fd7ed5cceeac72f7ed0d3/fdt-0.1.2-py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "e9fdbc5bbfa2069749861810a2a1378f", "sha256": "d0a406155c1aada34f0baa7d44296540000e800b5a73411572f3423a3af0a947"}, "downloads": -1, "filename": "fdt-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e9fdbc5bbfa2069749861810a2a1378f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 22220, "upload_time": "2019-11-21T23:24:46", "upload_time_iso_8601": "2019-11-21T23:24:46.886058Z", "url": "https://files.pythonhosted.org/packages/d6/d3/a9bf8bc20ddace74371afcf07b430f559d109372e1c2a25c133fe5fd4656/fdt-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a91daa36b3216f54feeac74ea8e5a475", "sha256": "b675139346946115513e27b5eed9aa882628ab74ed500bd5e25e122ee0afa2f6"}, "downloads": -1, "filename": "fdt-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a91daa36b3216f54feeac74ea8e5a475", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18132, "upload_time": "2019-11-21T23:24:48", "upload_time_iso_8601": "2019-11-21T23:24:48.373362Z", "url": "https://files.pythonhosted.org/packages/0e/44/7d3ff9e79f7ae7ac72c15d8bb60622d6997b17a9b9240ec939a7169dcc4c/fdt-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e9fdbc5bbfa2069749861810a2a1378f", "sha256": "d0a406155c1aada34f0baa7d44296540000e800b5a73411572f3423a3af0a947"}, "downloads": -1, "filename": "fdt-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e9fdbc5bbfa2069749861810a2a1378f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 22220, "upload_time": "2019-11-21T23:24:46", "upload_time_iso_8601": "2019-11-21T23:24:46.886058Z", "url": "https://files.pythonhosted.org/packages/d6/d3/a9bf8bc20ddace74371afcf07b430f559d109372e1c2a25c133fe5fd4656/fdt-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a91daa36b3216f54feeac74ea8e5a475", "sha256": "b675139346946115513e27b5eed9aa882628ab74ed500bd5e25e122ee0afa2f6"}, "downloads": -1, "filename": "fdt-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a91daa36b3216f54feeac74ea8e5a475", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18132, "upload_time": "2019-11-21T23:24:48", "upload_time_iso_8601": "2019-11-21T23:24:48.373362Z", "url": "https://files.pythonhosted.org/packages/0e/44/7d3ff9e79f7ae7ac72c15d8bb60622d6997b17a9b9240ec939a7169dcc4c/fdt-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:08 2020"}