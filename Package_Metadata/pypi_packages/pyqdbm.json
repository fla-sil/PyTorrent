{"info": {"author": "HIRANO Yoshitaka", "author_email": "yo@hirano.cc", "bugtrack_url": null, "classifiers": [], "description": "This requires QDBM C Library (http://fallabs.com/qdbm/index.html)\n\nExample code:\n\nfrom qdbm import depot\n\ndb = depot.open(\"test.db\", \"n\") # depot.open(FILENAME, FLAG)\n\ndb[\"apple\"] = \"red\"       # add data\ndb[\"lemon\"] = \"black\"\ndb[\"orange\"] = \"orange\"\n\ndb[\"lemon\"] = \"yellow\"    # update data\n\nprint db[\"lemon\"]   # get value that key is \"lemon\"\n\nprint db.get(\"orange\", \"unknown\")  # get data with default value (returns orange)\n\nprint db.get(\"melon\", \"unknown\")   # get data with default value (returns unknown)\n\nprint db.keys()               # get list of keys (Python2), get iterator of keys (Python3)\n\nprint db.listkeys()           # get list of keys (Python3)\n\nfor k in db.iterkeys():       # get iterator of keys (Python2)\n    print k\n\nfor k in db.keys():           # get iterator of keys (Python3)\n    print k\n\nfor k, v in db.iteritems():   # get iterator of (key, value) (Python2)\n    print k, v\n\nfor k, v in db.items():       # get iterator of (key, value) (Python3)\n    print k, v\n\nfor v in db.itervalues():     # get iterator of values (Python2)\n    print v\n\nfor v in db.values():         # get iterator of values (Python3)\n    print v\n\ndb.close()                    # close database object\n\nFlags:\n  r: Read Only\n\n  w: Read / Write\n\n  c: Read / Write (create if not exists)\n\n  n: Read / Write (always create new file)", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.hirano.cc/pyqdbm", "keywords": "QDBM", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyqdbm", "package_url": "https://pypi.org/project/pyqdbm/", "platform": "", "project_url": "https://pypi.org/project/pyqdbm/", "project_urls": {"Homepage": "https://www.hirano.cc/pyqdbm"}, "release_url": "https://pypi.org/project/pyqdbm/0.9.6/", "requires_dist": null, "requires_python": "", "summary": "Python binding for QDBM Database", "version": "0.9.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This requires QDBM C Library (<a href=\"http://fallabs.com/qdbm/index.html\" rel=\"nofollow\">http://fallabs.com/qdbm/index.html</a>)</p>\n<p>Example code:</p>\n<p>from qdbm import depot</p>\n<p>db = depot.open(\u201ctest.db\u201d, \u201cn\u201d) # depot.open(FILENAME, FLAG)</p>\n<p>db[\u201capple\u201d] = \u201cred\u201d       # add data\ndb[\u201clemon\u201d] = \u201cblack\u201d\ndb[\u201corange\u201d] = \u201corange\u201d</p>\n<p>db[\u201clemon\u201d] = \u201cyellow\u201d    # update data</p>\n<p>print db[\u201clemon\u201d]   # get value that key is \u201clemon\u201d</p>\n<p>print db.get(\u201corange\u201d, \u201cunknown\u201d)  # get data with default value (returns orange)</p>\n<p>print db.get(\u201cmelon\u201d, \u201cunknown\u201d)   # get data with default value (returns unknown)</p>\n<p>print db.keys()               # get list of keys (Python2), get iterator of keys (Python3)</p>\n<p>print db.listkeys()           # get list of keys (Python3)</p>\n<dl>\n<dt>for k in db.iterkeys():       # get iterator of keys (Python2)</dt>\n<dd>print k</dd>\n<dt>for k in db.keys():           # get iterator of keys (Python3)</dt>\n<dd>print k</dd>\n<dt>for k, v in db.iteritems():   # get iterator of (key, value) (Python2)</dt>\n<dd>print k, v</dd>\n<dt>for k, v in db.items():       # get iterator of (key, value) (Python3)</dt>\n<dd>print k, v</dd>\n<dt>for v in db.itervalues():     # get iterator of values (Python2)</dt>\n<dd>print v</dd>\n<dt>for v in db.values():         # get iterator of values (Python3)</dt>\n<dd>print v</dd>\n</dl>\n<p>db.close()                    # close database object</p>\n<dl>\n<dt>Flags:</dt>\n<dd><p>r: Read Only</p>\n<p>w: Read / Write</p>\n<p>c: Read / Write (create if not exists)</p>\n<p>n: Read / Write (always create new file)</p>\n</dd>\n</dl>\n\n          </div>"}, "last_serial": 3823208, "releases": {"0.9.5": [{"comment_text": "", "digests": {"md5": "70566888f30fc9cea560870500c30d2d", "sha256": "b48414051e337f1edf2844cea5c07004a961b6dd9cf0be7c5d3ae5f11b6471d6"}, "downloads": -1, "filename": "pyqdbm-0.9.5.tar.gz", "has_sig": false, "md5_digest": "70566888f30fc9cea560870500c30d2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5559, "upload_time": "2017-11-30T14:08:27", "upload_time_iso_8601": "2017-11-30T14:08:27.637827Z", "url": "https://files.pythonhosted.org/packages/64/70/56c4cb4a11d63a7c2166f9d875b58d38a205a478819906b8f92e154a1d33/pyqdbm-0.9.5.tar.gz", "yanked": false}], "0.9.6": [{"comment_text": "", "digests": {"md5": "a6d1cb469c46499b1d1d216beac6e2d9", "sha256": "710d5f4d7fa8fd5b197ced65bb43b173c53ad53bfa1adaa82809b5205200e7c2"}, "downloads": -1, "filename": "pyqdbm-0.9.6.tar.gz", "has_sig": false, "md5_digest": "a6d1cb469c46499b1d1d216beac6e2d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7045, "upload_time": "2018-05-01T08:43:44", "upload_time_iso_8601": "2018-05-01T08:43:44.213831Z", "url": "https://files.pythonhosted.org/packages/26/41/9b27bde24af27dc5e3c95ec7468f8f2c0649ff6eb6dd6c125e4c2125ccbb/pyqdbm-0.9.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a6d1cb469c46499b1d1d216beac6e2d9", "sha256": "710d5f4d7fa8fd5b197ced65bb43b173c53ad53bfa1adaa82809b5205200e7c2"}, "downloads": -1, "filename": "pyqdbm-0.9.6.tar.gz", "has_sig": false, "md5_digest": "a6d1cb469c46499b1d1d216beac6e2d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7045, "upload_time": "2018-05-01T08:43:44", "upload_time_iso_8601": "2018-05-01T08:43:44.213831Z", "url": "https://files.pythonhosted.org/packages/26/41/9b27bde24af27dc5e3c95ec7468f8f2c0649ff6eb6dd6c125e4c2125ccbb/pyqdbm-0.9.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:52 2020"}