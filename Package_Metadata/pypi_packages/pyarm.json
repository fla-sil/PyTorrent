{"info": {"author": "Jeremie DECOCK", "author_email": "jd.jdhp@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Education", "Intended Audience :: End Users/Desktop", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.0", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Physics", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "======\nPyArm_\n======\n\nCopyright (c) 2010,2015 Jeremie DECOCK (http://www.jdhp.org)\n\n\n* Web site: http://www.jdhp.org/projects_en.html#pyarm\n* Online documentation: http://pyarm.readthedocs.org\n* Source code: https://github.com/jeremiedecock/pyarm\n* Issue tracker: https://github.com/jeremiedecock/pyarm/issues\n* PyArm on PyPI: https://pypi.python.org/pypi/pyarm\n\n\nDescription\n===========\n\nPyarm_ is a physics simulator which provides an anthropomorphic arm model\nfor experiments on human like motor control.\n\nThe arm model is described in the following technical report (written in\nFrench): http://download.tuxfamily.org/jdhp/pdf/pyarm.pdf .\n\nPyarm has been used at the `Institute for Intelligent Systems and Robotics`_\nfor experiments on adaptive systems. These experiments are described in the\nfollowing academic paper *Learning cost-efficient control policies with XCSF:\ngeneralization capabilities and further improvement* by Didier Marin, J\u00e9r\u00e9mie\nDecock, Lionel Rigoux and Olivier Sigaud. This scientific contribution has been\npublished in the *Proceedings of the 13th annual conference on Genetic and\nevolutionary computation (GECCO'11)*, the main international conference on\ngenetic and evolutionary computation.\n\n.. The following section briefly describe these experiments.\n.. \n.. The full description of these expriments can be downloaded ...\nThis paper can be downloaded on\n`www.jdhp.org <http://www.jdhp.org/articles_en.html#XCSF>`__.\n\n.. ...\n.. ---\n.. \n.. Mettre ici une partie des slides... The goal ... (schema du bras +\n.. sch\u00e9ma avec l\u00e9gende du bras dans pyarm) - forearm - shoulder - elbow -\n.. end point effector - target - mussles - ...\n.. \n.. First step: the learning phase. Optimal trajectories for several random\n.. targets are computed by our solver (QOPS). These trajectories are slow\n.. to compute (several minutes per trajectory). Thus this solver cannot be\n.. used for real time control of robots... Therefore we will try to use\n.. machine learning technics to create a real time controller learned from\n.. QOPS solver.\n.. \n.. A set of optimal trajectories for several random targets are computed by\n.. our solver (QOPS). These trajectories are played and learned by our\n.. adaptive controler/system/machine learning system (XCSF)\n.. \n.. image des trajectoires apprises\n.. \n.. Second step: the generalisation test adaptive system learned several ...\n.. we check whether it's capable to generalize what it learned to other\n.. targets\n.. \n.. image des trajectoires jou\u00e9es\n.. \n.. graph des r\u00e9sultats\n.. \n.. conclusion: ok\n\n\nDependencies\n============\n\n-  Python >= 2.5\n-  Numpy_\n-  Matplotlib_ >= 0.98.1\n\n.. -  ffmpeg2theora (screencast) [optional]\n.. -  PIL (screencast) [optional]\n\nNote:\n\n    If you use ``pip`` to install PyArm, Numpy and Matplotlib will be\n    automatically downloaded and installed (see the following install_\n    section).\n\n\n.. _install:\n\nInstallation\n============\n\nGnu/Linux\n---------\n\nYou can install, upgrade, uninstall PyArm with these commands (in a\nterminal)::\n\n    pip install --pre pyarm\n    pip install --upgrade pyarm\n    pip uninstall pyarm\n\nOr, if you have downloaded the PyArm source code::\n\n    python3 setup.py install\n\n.. There's also a package for Debian/Ubuntu::\n.. \n..     sudo apt-get install pyarm\n\nWindows\n-------\n\nNote:\n\n    The following installation procedure has been tested to work with Python\n    3.4 under Windows 7.\n    It should also work with recent Windows systems.\n\nYou can install, upgrade, uninstall PyArm with these commands (in a\n`command prompt`_)::\n\n    py -m pip install --pre pyarm\n    py -m pip install --upgrade pyarm\n    py -m pip uninstall pyarm\n\nOr, if you have downloaded the PyArm source code::\n\n    py setup.py install\n\nMacOSX\n-------\n\nNote:\n\n    The following installation procedure has been tested to work with Python\n    3.4 under MacOSX 10.6 (*Snow Leopard*).\n    It should also work with recent MacOSX systems.\n\nYou can install, upgrade, uninstall PyArm with these commands (in a\nterminal)::\n\n    pip install --pre pyarm\n    pip install --upgrade pyarm\n    pip uninstall pyarm\n\nOr, if you have downloaded the PyArm source code::\n\n    python3 setup.py install\n\n\nDocumentation\n=============\n\n.. PyArm documentation is available on the following page:\n.. \n..     http://pyarm.rtfd.org/\n\n- Online Documentation: http://pyarm.readthedocs.org\n- API Documentation: http://pyarm.readthedocs.org/en/latest/api.html\n\n\nRun pyarm\n=========\n\nTo run Pyarm, simply type in a terminal::\n\n    pyarm\n\n\nUsage example\n=============\n\nUse the following command to run simulations with graphs and logs using\nthe *Mitrovic* muscle model described in the `technical report`_ and a\n*sigmoid* controler::\n\n    pyarm -f -l -m mitrovic -d 0.005 -A sigmoid\n\nThe following command run a simulation with the *sagittal* arm model and\nthe *kambara* muscle model using a *sigmoid* controller::\n\n    pyarm -a sagittal -m kambara -d 0.005 -A sigmoid\n\n\nHelp\n====\n\nA comprehensive list of available options is printed with the following\ncommand::\n\n    pyarm -h\n\n\nBug reports\n===========\n\nTo search for bugs or report them, please use the PyArm Bug Tracker at:\n\n    https://github.com/jeremiedecock/pyarm/issues\n\n\nLicense\n=======\n\nThe ``PyArm`` library is provided under the terms and conditions of the\n`MIT License`_.\n\n\n.. _Pyarm: http://www.jdhp.org/projects_en.html#pyarm\n.. _MIT License: http://opensource.org/licenses/MIT\n.. _technical report: http://download.tuxfamily.org/jdhp/pdf/pyarm.pdf\n.. _Institute for Intelligent Systems and Robotics: http://www.isir.upmc.fr/\n.. _Numpy: http://www.numpy.org/\n.. _Matplotlib: http://matplotlib.org/", "description_content_type": null, "docs_url": null, "download_url": "http://www.jdhp.org/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.jdhp.org/", "keywords": "robotics simultion library", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "pyarm", "package_url": "https://pypi.org/project/pyarm/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyarm/", "project_urls": {"Download": "http://www.jdhp.org/", "Homepage": "http://www.jdhp.org/"}, "release_url": "https://pypi.org/project/pyarm/1.1.dev1/", "requires_dist": null, "requires_python": null, "summary": "A robotic arm model and simulator.", "version": "1.1.dev1", "yanked": false, "html_description": "<div class=\"project-description\">\n            ======<br>PyArm_<br>======<br><br>Copyright (c) 2010,2015 Jeremie DECOCK (http://www.jdhp.org)<br><br><br>* Web site: http://www.jdhp.org/projects_en.html#pyarm<br>* Online documentation: http://pyarm.readthedocs.org<br>* Source code: https://github.com/jeremiedecock/pyarm<br>* Issue tracker: https://github.com/jeremiedecock/pyarm/issues<br>* PyArm on PyPI: https://pypi.python.org/pypi/pyarm<br><br><br>Description<br>===========<br><br>Pyarm_ is a physics simulator which provides an anthropomorphic arm model<br>for experiments on human like motor control.<br><br>The arm model is described in the following technical report (written in<br>French): http://download.tuxfamily.org/jdhp/pdf/pyarm.pdf .<br><br>Pyarm has been used at the `Institute for Intelligent Systems and Robotics`_<br>for experiments on adaptive systems. These experiments are described in the<br>following academic paper *Learning cost-efficient control policies with XCSF:<br>generalization capabilities and further improvement* by Didier Marin, J\u00e9r\u00e9mie<br>Decock, Lionel Rigoux and Olivier Sigaud. This scientific contribution has been<br>published in the *Proceedings of the 13th annual conference on Genetic and<br>evolutionary computation (GECCO'11)*, the main international conference on<br>genetic and evolutionary computation.<br><br>.. The following section briefly describe these experiments.<br>.. <br>.. The full description of these expriments can be downloaded ...<br>This paper can be downloaded on<br>`www.jdhp.org &lt;http://www.jdhp.org/articles_en.html#XCSF&gt;`__.<br><br>.. ...<br>.. ---<br>.. <br>.. Mettre ici une partie des slides... The goal ... (schema du bras +<br>.. sch\u00e9ma avec l\u00e9gende du bras dans pyarm) - forearm - shoulder - elbow -<br>.. end point effector - target - mussles - ...<br>.. <br>.. First step: the learning phase. Optimal trajectories for several random<br>.. targets are computed by our solver (QOPS). These trajectories are slow<br>.. to compute (several minutes per trajectory). Thus this solver cannot be<br>.. used for real time control of robots... Therefore we will try to use<br>.. machine learning technics to create a real time controller learned from<br>.. QOPS solver.<br>.. <br>.. A set of optimal trajectories for several random targets are computed by<br>.. our solver (QOPS). These trajectories are played and learned by our<br>.. adaptive controler/system/machine learning system (XCSF)<br>.. <br>.. image des trajectoires apprises<br>.. <br>.. Second step: the generalisation test adaptive system learned several ...<br>.. we check whether it's capable to generalize what it learned to other<br>.. targets<br>.. <br>.. image des trajectoires jou\u00e9es<br>.. <br>.. graph des r\u00e9sultats<br>.. <br>.. conclusion: ok<br><br><br>Dependencies<br>============<br><br>-  Python &gt;= 2.5<br>-  Numpy_<br>-  Matplotlib_ &gt;= 0.98.1<br><br>.. -  ffmpeg2theora (screencast) [optional]<br>.. -  PIL (screencast) [optional]<br><br>Note:<br><br>    If you use ``pip`` to install PyArm, Numpy and Matplotlib will be<br>    automatically downloaded and installed (see the following install_<br>    section).<br><br><br>.. _install:<br><br>Installation<br>============<br><br>Gnu/Linux<br>---------<br><br>You can install, upgrade, uninstall PyArm with these commands (in a<br>terminal)::<br><br>    pip install --pre pyarm<br>    pip install --upgrade pyarm<br>    pip uninstall pyarm<br><br>Or, if you have downloaded the PyArm source code::<br><br>    python3 setup.py install<br><br>.. There's also a package for Debian/Ubuntu::<br>.. <br>..     sudo apt-get install pyarm<br><br>Windows<br>-------<br><br>Note:<br><br>    The following installation procedure has been tested to work with Python<br>    3.4 under Windows 7.<br>    It should also work with recent Windows systems.<br><br>You can install, upgrade, uninstall PyArm with these commands (in a<br>`command prompt`_)::<br><br>    py -m pip install --pre pyarm<br>    py -m pip install --upgrade pyarm<br>    py -m pip uninstall pyarm<br><br>Or, if you have downloaded the PyArm source code::<br><br>    py setup.py install<br><br>MacOSX<br>-------<br><br>Note:<br><br>    The following installation procedure has been tested to work with Python<br>    3.4 under MacOSX 10.6 (*Snow Leopard*).<br>    It should also work with recent MacOSX systems.<br><br>You can install, upgrade, uninstall PyArm with these commands (in a<br>terminal)::<br><br>    pip install --pre pyarm<br>    pip install --upgrade pyarm<br>    pip uninstall pyarm<br><br>Or, if you have downloaded the PyArm source code::<br><br>    python3 setup.py install<br><br><br>Documentation<br>=============<br><br>.. PyArm documentation is available on the following page:<br>.. <br>..     http://pyarm.rtfd.org/<br><br>- Online Documentation: http://pyarm.readthedocs.org<br>- API Documentation: http://pyarm.readthedocs.org/en/latest/api.html<br><br><br>Run pyarm<br>=========<br><br>To run Pyarm, simply type in a terminal::<br><br>    pyarm<br><br><br>Usage example<br>=============<br><br>Use the following command to run simulations with graphs and logs using<br>the *Mitrovic* muscle model described in the `technical report`_ and a<br>*sigmoid* controler::<br><br>    pyarm -f -l -m mitrovic -d 0.005 -A sigmoid<br><br>The following command run a simulation with the *sagittal* arm model and<br>the *kambara* muscle model using a *sigmoid* controller::<br><br>    pyarm -a sagittal -m kambara -d 0.005 -A sigmoid<br><br><br>Help<br>====<br><br>A comprehensive list of available options is printed with the following<br>command::<br><br>    pyarm -h<br><br><br>Bug reports<br>===========<br><br>To search for bugs or report them, please use the PyArm Bug Tracker at:<br><br>    https://github.com/jeremiedecock/pyarm/issues<br><br><br>License<br>=======<br><br>The ``PyArm`` library is provided under the terms and conditions of the<br>`MIT License`_.<br><br><br>.. _Pyarm: http://www.jdhp.org/projects_en.html#pyarm<br>.. _MIT License: http://opensource.org/licenses/MIT<br>.. _technical report: http://download.tuxfamily.org/jdhp/pdf/pyarm.pdf<br>.. _Institute for Intelligent Systems and Robotics: http://www.isir.upmc.fr/<br>.. _Numpy: http://www.numpy.org/<br>.. _Matplotlib: http://matplotlib.org/\n          </div>"}, "last_serial": 1705040, "releases": {"1.1.dev0": [{"comment_text": "", "digests": {"md5": "7006360c7c4f96e94edfb1ee27c17af4", "sha256": "993d31fd05a174c79065d2dfba3221039571743ac7b393fbca5fb85a5c7cc8d6"}, "downloads": -1, "filename": "pyarm-1.1.dev0.tar.gz", "has_sig": false, "md5_digest": "7006360c7c4f96e94edfb1ee27c17af4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27484, "upload_time": "2015-09-02T14:55:54", "upload_time_iso_8601": "2015-09-02T14:55:54.622290Z", "url": "https://files.pythonhosted.org/packages/33/cb/aabb1ace8400ac52508c480bce4dde5e6a0699e4005bcf685fc3dcd7865a/pyarm-1.1.dev0.tar.gz", "yanked": false}], "1.1.dev1": [{"comment_text": "", "digests": {"md5": "5ed6dd21ecce8deabee635dc9f9282ef", "sha256": "8353595d04ac980e7a1ef5969058fd1f801ee6cc48a6be82be5900d879597dc1"}, "downloads": -1, "filename": "pyarm-1.1.dev1.tar.gz", "has_sig": false, "md5_digest": "5ed6dd21ecce8deabee635dc9f9282ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27486, "upload_time": "2015-09-02T15:10:13", "upload_time_iso_8601": "2015-09-02T15:10:13.485712Z", "url": "https://files.pythonhosted.org/packages/4b/db/033959c5cf977642daaf6ad6db91276a65cbaed32fdb0d02d16987cc89a6/pyarm-1.1.dev1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5ed6dd21ecce8deabee635dc9f9282ef", "sha256": "8353595d04ac980e7a1ef5969058fd1f801ee6cc48a6be82be5900d879597dc1"}, "downloads": -1, "filename": "pyarm-1.1.dev1.tar.gz", "has_sig": false, "md5_digest": "5ed6dd21ecce8deabee635dc9f9282ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27486, "upload_time": "2015-09-02T15:10:13", "upload_time_iso_8601": "2015-09-02T15:10:13.485712Z", "url": "https://files.pythonhosted.org/packages/4b/db/033959c5cf977642daaf6ad6db91276a65cbaed32fdb0d02d16987cc89a6/pyarm-1.1.dev1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:20 2020"}