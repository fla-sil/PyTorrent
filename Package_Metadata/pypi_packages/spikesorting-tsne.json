{"info": {"author": "George Dimitriadis", "author_email": "gdimitri@hotmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Visualization"], "description": "This is the repository for the python part of the conda python package that allows running the results of automated spike sorting algorithms through the t-SNE algorithm obtaining a 2D or 3D embedding of the spikes. \t\t\t\t\t\tAlthough this package offers some functionality dedicated to spikesorting the t-SNE part of it is kept separate and can be run with any matrix of samples x features.\t\t\t\t\t\tThe package is split into two parts. The python part (in this repo) has the following functionality:\t\t\t\t\t\t1. It has the main function through which the whole algorithm is called.\t\t\t\t\t\t2. The main function wraps the C++ executable (Barnes_Hut.exe) and calls it appropriately.\t\t\t\t\t\t3. It uses numba gpu to create the spike (or any other sample matrix) distances.\t\t\t\t\t\t4. It offers functions that operate on the result of the kilosort spikesorting algorithm to create the required samples (spikes) x features (template distances) matrix for t-SNE to run on.\t\t\t\t\t\t5. It offers functions that allow the user to split a dataset of spikes that is too lrage for the algorithm to sub groups that can be seperately run and then recombined (uses information generated by ythe kilosort algorithm)\t\t\t\t\t\tThe C++ part (which generates the Barnes_Hut.exe executable) can be found [here](https://github.com/georgedimitriadis/spikesorting_tsne_bhpart).\t\t\t\t\t\tMore detailed documentation can be found in the [Github Pages](https://georgedimitriadis.github.io/spikesorting_tsne/) of this repo.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/georgedimitriadis/spikesorting_tsne", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "spikesorting-tsne", "package_url": "https://pypi.org/project/spikesorting-tsne/", "platform": "", "project_url": "https://pypi.org/project/spikesorting-tsne/", "project_urls": {"C++ code repository": "https://github.com/georgedimitriadis/spikesorting_tsne_bhpart", "Documentation": "https://georgedimitriadis.github.io/spikesorting_tsne/", "Homepage": "https://github.com/georgedimitriadis/spikesorting_tsne", "Python code repository": "https://github.com/georgedimitriadis/spikesorting_tsne"}, "release_url": "https://pypi.org/project/spikesorting-tsne/1.0.20/", "requires_dist": null, "requires_python": ">=3.5", "summary": "T-sne with burnes hut and cuda extension (with python wrappers and python code for spike sorting)", "version": "1.0.20", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is the repository for the python part of the conda python package that allows running the results of automated spike sorting algorithms through the t-SNE algorithm obtaining a 2D or 3D embedding of the spikes. \t\t\t\t\t\tAlthough this package offers some functionality dedicated to spikesorting the t-SNE part of it is kept separate and can be run with any matrix of samples x features.\t\t\t\t\t\tThe package is split into two parts. The python part (in this repo) has the following functionality:\t\t\t\t\t\t1. It has the main function through which the whole algorithm is called.\t\t\t\t\t\t2. The main function wraps the C++ executable (Barnes_Hut.exe) and calls it appropriately.\t\t\t\t\t\t3. It uses numba gpu to create the spike (or any other sample matrix) distances.\t\t\t\t\t\t4. It offers functions that operate on the result of the kilosort spikesorting algorithm to create the required samples (spikes) x features (template distances) matrix for t-SNE to run on.\t\t\t\t\t\t5. It offers functions that allow the user to split a dataset of spikes that is too lrage for the algorithm to sub groups that can be seperately run and then recombined (uses information generated by ythe kilosort algorithm)\t\t\t\t\t\tThe C++ part (which generates the Barnes_Hut.exe executable) can be found <a href=\"https://github.com/georgedimitriadis/spikesorting_tsne_bhpart\" rel=\"nofollow\">here</a>.\t\t\t\t\t\tMore detailed documentation can be found in the <a href=\"https://georgedimitriadis.github.io/spikesorting_tsne/\" rel=\"nofollow\">Github Pages</a> of this repo.</p>\n\n          </div>"}, "last_serial": 4108960, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "a8e3feb17fd253e473c5e65c508b6fe4", "sha256": "c1a47cb2114adeb3db8e8938c2b0c486c5498b9de1faf1a54df1fe7b0cb08ea2"}, "downloads": -1, "filename": "spikesorting_tsne-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a8e3feb17fd253e473c5e65c508b6fe4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 17663, "upload_time": "2018-05-14T09:07:53", "upload_time_iso_8601": "2018-05-14T09:07:53.045069Z", "url": "https://files.pythonhosted.org/packages/33/f9/fed897e3fcf657b8e40d116aaf3e4a64029e0cc072e0d444133414256264/spikesorting_tsne-1.0.0.tar.gz", "yanked": false}], "1.0.10": [{"comment_text": "", "digests": {"md5": "cafa071d35779fcd14ea8dd937883ebe", "sha256": "e7fcc9b5a80f371696d9b07e347613e72650faf1d3bdace3fbf18aad58a7a197"}, "downloads": -1, "filename": "spikesorting_tsne-1.0.10.tar.gz", "has_sig": false, "md5_digest": "cafa071d35779fcd14ea8dd937883ebe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 19771, "upload_time": "2018-06-27T13:45:08", "upload_time_iso_8601": "2018-06-27T13:45:08.088607Z", "url": "https://files.pythonhosted.org/packages/bc/6a/de590fc4b454a843f43a4854e3fa347811c62cda266d64499e3815b23d47/spikesorting_tsne-1.0.10.tar.gz", "yanked": false}], "1.0.20": [{"comment_text": "", "digests": {"md5": "ff699eb372e5f25076304ff5cfe0a03d", "sha256": "b86c1416fcb02ff104bebcef40feed83da44bcceb84807b71508a3e6a442f259"}, "downloads": -1, "filename": "spikesorting_tsne-1.0.20.tar.gz", "has_sig": false, "md5_digest": "ff699eb372e5f25076304ff5cfe0a03d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 19830, "upload_time": "2018-07-27T14:22:10", "upload_time_iso_8601": "2018-07-27T14:22:10.378182Z", "url": "https://files.pythonhosted.org/packages/38/f1/727623ddc56cf04b67c0d3e9130bee1b68972c9de3f6c794694f0610d474/spikesorting_tsne-1.0.20.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ff699eb372e5f25076304ff5cfe0a03d", "sha256": "b86c1416fcb02ff104bebcef40feed83da44bcceb84807b71508a3e6a442f259"}, "downloads": -1, "filename": "spikesorting_tsne-1.0.20.tar.gz", "has_sig": false, "md5_digest": "ff699eb372e5f25076304ff5cfe0a03d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 19830, "upload_time": "2018-07-27T14:22:10", "upload_time_iso_8601": "2018-07-27T14:22:10.378182Z", "url": "https://files.pythonhosted.org/packages/38/f1/727623ddc56cf04b67c0d3e9130bee1b68972c9de3f6c794694f0610d474/spikesorting_tsne-1.0.20.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:51 2020"}