{"info": {"author": "Kevin Wurster", "author_email": "wursterk@gmail.com", "bugtrack_url": null, "classifiers": [], "description": ".. code-block:: console\n\n                _ ___                   _ _\n       ____ _  (_)__ \\ ____ ___________(_|_)\n      / __ `/ / /__/ // __ `/ ___/ ___/ / /\n     / /_/ / / // __// /_/ (__  ) /__/ / /\n     \\__, /_/ //____/\\__,_/____/\\___/_/_/\n    /____/___/\n\n\n.. image:: https://travis-ci.org/geowurster/gj2ascii.svg?branch=master\n    :target: https://travis-ci.org/geowurster/gj2ascii\n\n\n.. image:: https://coveralls.io/repos/geowurster/gj2ascii/badge.svg?branch=master\n    :target: https://coveralls.io/r/geowurster/gj2ascii\n\nRender spatial vector data as ASCII or emoji with Python on the commandline.\n\n.. image:: https://raw.githubusercontent.com/geowurster/gj2ascii/master/images/emoji-land-cover-80w.png\n    :target: https://github.com/geowurster/gj2ascii/blob/master/images/emoji-land-cover-80w.png\n    :width: 574\n    :height: 563\n\n\nWhy?\n====\n\nA `tweet <https://twitter.com/vtcraghead/status/575370039701929984>`__ made it seem like an interesting exercise but\nthe ``gj2ascii`` commandline utility has been very useful for previewing multiple files and the API has proven to be\nuseful for debugging complex geoprocessing operations.\n\n\nDefault Behavior\n================\n\nThe overall goal of this utility is to provide easy access to ASCII representations\nof vector geometries and overlapping layers.\n\n1. When rendering a single layer an ASCII character is used.\n2. When rendering multiple layers colors are used with a randomly assigned character underneath and a transparent fill.\n\nThere are only ``7`` colors (black is not used for auto-assignment) so if more than 7 layers\nare given the ``--char`` flag must be used for each of them to manually assign a character,\nemoji, or color.\n\n\nEmoji Example\n=============\n\nThe emoji screenshot was generated by downloading the ``GeoTIFF`` version of the\n`MODIS Landcover dataset <http://glcf.umd.edu/data/lc/>`_, resampling to ``25%``\nof its original, size converted to a vector with `gdal_polygonize.py <http://www.gdal.org/gdal_polygonize.html>`_,\nand `split <http://gis.stackexchange.com/questions/25709/splitting-shapefile-into-separate-shapefiles-for-each-feature-using-qgis-gdal-sa>`_\ninto one ``ESRI Shapefile`` per class with `QGIS <qgis.org>`_, before executing the following\ncommand:\n\n.. code-block:: console\n\n    $ gj2ascii \\\n        --bbox -130 9 -61.5 77 \\\n        --width 80 \\\n        0.geojson -c ' ' \\\n        1.geojson -c :christmas_tree: \\\n        2.geojson -c :evergreen_tree: \\\n        3.geojson -c :maple_leaf: \\\n        4.geojson -c :maple_leaf: \\\n        5.geojson -c :deciduous_tree: \\\n        6.geojson -c :herb: \\\n        7.geojson -c :herb: \\\n        8.geojson -c :herb: \\\n        9.geojson -c :herb: \\\n        10.geojson -c :ear_of_rice: \\\n        11.geojson -c :turtle: \\\n        12.geojson -c :tractor: \\\n        13.geojson -c :house_building: \\\n        14.geojson -c :leaf_fluttering_in_wind: \\\n        15.geojson -c :snowflake: \\\n        16.geojson -c :black_medium_square:\n\nThe same data can be rendered with ASCII characters instead:\n\n.. code-block:: console\n\n    $ gj2ascii \\\n        --bbox -130 9 -61.5 77 \\\n        --width 80 \\\n        0.shp -c ' ' \\\n        1.shp -c \\# \\\n        2.shp -c \\^ \\\n        3.shp -c + \\\n        4.shp -c \\& \\\n        5.shp -c \\$ \\\n        6.shp -c \\% \\\n        7.shp -c \\: \\\n        8.shp -c P \\\n        9.shp -c - \\\n        10.shp -c \\\" \\\n        11.shp -c 0 \\\n        12.shp -c = \\\n        13.shp -c N \\\n        14.shp -c \\@ \\\n        15.shp -c \\* \\\n        16.shp -c O\n\n\n.. image:: https://raw.githubusercontent.com/geowurster/gj2ascii/master/images/ascii-land-cover-80w.png\n    :target: https://github.com/geowurster/gj2ascii/tree/master/images/ascii-land-cover-80w.png\n    :width: 566\n    :height: 553\n\n\nOther Examples\n==============\n\nSee the `examples directory <https://github.com/geowurster/gj2ascii/tree/master/examples>`__ for more information and\nmore complex examples but the following are a good place to get started.  Some of the examples include output that\nwould be colored if run on the commandline or in Python but RST cannot render the ANSI codes.\n\nRender two layers, one read from stin and one read directly from a file, across 20 pixels while explicitly specifying\na character and color for each layer and background fill, and zooming in on an area of interest.\n\n.. code-block:: console\n\n    $ cat sample-data/polygons.geojson | gj2ascii - \\\n        sample-data/lines.geojson \\\n        --bbox sample-data/small-aoi-polygon-line.geojson \\\n        --width 20 \\\n        --char ^=red \\\n        --char -=blue \\\n        --fill .=green\n    . . . . . . - . . . . . . . . . ^ ^ ^ ^\n    . . . . . - . . . . . . . . . . . ^ ^ ^\n    . . . . - . . . . . . . . . . . . . - -\n    . . . . - . . . . . . . . - - - - - . ^\n    ^ ^ . - . . . . . . . . . . . . . . . .\n    ^ ^ - . . . . . . . . . . . . . . . . .\n    ^ - ^ . . . . . . . . . . . . . . . . .\n    ^ - . . . . . . . . . . . . . . . . . .\n    - ^ . . . . . . - . . . . . ^ . . . . .\n    . - . . . . . . - - . . . ^ ^ . . . . .\n    . . - . . . . . - . - . ^ ^ ^ . . . . .\n    . . . - . . . . - . . - ^ ^ ^ . . . . .\n    . . . . - . . - . . ^ ^ - ^ ^ . . . . .\n    . . . . . - . - . ^ ^ ^ ^ - ^ . . . . .\n    . . . . . . - - ^ ^ ^ ^ ^ ^ - . . . . .\n\n\n\nRender individual features across 10 pixels and display the attributes for two\nfields, ``COUNTYFP`` and ``NAME``.\n\n.. code-block:: console\n\n    $ gj2ascii sample-data/WV.geojson \\\n        --iterate \\\n        --properties COUNTYFP,NAME \\\n        --width 10\n\n    +----------+---------+\n    | COUNTYFP |     001 |\n    | NAME     | Barbour |\n    +----------+---------+\n\n                + + +\n      +   + + + + + + +\n      + + + + + + + + +\n    + + + + + + + + +\n    + + + + + + + + + +\n        + + + + + + +\n            + + + +\n            + + + +\n\n    Press enter for the next geometry or ^C/^D or 'q' to quit...\n\nRecreate the first example with the Python API\n----------------------------------------------\n\nThere are two ways to recreate the first example with the Python API.  If the user does not care about which characters\nare assigned to which color, use this one:\n\n.. code-block:: python\n\n    import fiona as fio\n    import gj2ascii\n    with fio.open('sample-data/polygons.geojson') as poly, \\\n            fio.open('sample-data/lines.geojson') as lines, \\\n            fio.open('sample-data/small-aoi-polygon-line.geojson') as bbox:\n        layermap = [\n            (poly, 'red'),\n            (lines, 'blue')\n        ]\n        print(gj2ascii.style_multiple(layermap, 20, fill='green', bbox=bbox.bounds))\n    0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 2 2 2\n    0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 2 2 2\n    0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1\n    0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 2\n    2 2 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    2 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    2 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    1 2 0 0 0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0\n    0 1 0 0 0 0 0 0 1 1 0 0 0 2 2 0 0 0 0 0\n    0 0 1 0 0 0 0 0 1 0 1 0 2 2 2 0 0 0 0 0\n    0 0 0 1 0 0 0 0 1 0 0 1 2 2 2 0 0 0 0 0\n    0 0 0 0 1 0 0 1 0 0 2 2 1 2 2 0 0 0 0 0\n    0 0 0 0 0 1 0 1 0 2 2 2 2 1 2 0 0 0 0 0\n    0 0 0 0 0 0 1 1 2 2 2 2 2 2 1 0 0 0 0 0\n\n\nIf the user cares about which character is assigned to which layer, use this one:\n\n.. code-block:: python\n\n    import fiona as fio\n    import gj2ascii\n\n    with fio.open('sample-data/polygons.geojson') as poly, \\\n            fio.open('sample-data/lines.geojson') as lines, \\\n            fio.open('sample-data/small-aoi-polygon-line.geojson') as bbox:\n\n        # Render each layer individually with the same bbox and width\n        # The fill will be assigned in the next step but must be a single space here\n        rendered_layers = [\n            gj2ascii.render(poly, 20, char='^', fill=' ', bbox=bbox.bounds),\n            gj2ascii.render(lines, 20, char='-', fill=' ', bbox=bbox.bounds)\n        ]\n\n        # Overlay the rendered layers into one stack\n        stacked = gj2ascii.stack(rendered_layers, fill='.')\n\n        # Apply the colors and print\n        colormap = {\n            '^': 'red',\n            '-': 'blue',\n            '.': 'green'\n        }\n        print(gj2ascii.style(stacked, colormap))\n    . . . . . . - . . . . . . . . . ^ ^ ^ ^\n    . . . . . - . . . . . . . . . . . ^ ^ ^\n    . . . . - . . . . . . . . . . . . . - -\n    . . . . - . . . . . . . . - - - - - . ^\n    ^ ^ . - . . . . . . . . . . . . . . . .\n    ^ ^ - . . . . . . . . . . . . . . . . .\n    ^ - ^ . . . . . . . . . . . . . . . . .\n    ^ - . . . . . . . . . . . . . . . . . .\n    - ^ . . . . . . - . . . . . ^ . . . . .\n    . - . . . . . . - - . . . ^ ^ . . . . .\n    . . - . . . . . - . - . ^ ^ ^ . . . . .\n    . . . - . . . . - . . - ^ ^ ^ . . . . .\n    . . . . - . . - . . ^ ^ - ^ ^ . . . . .\n    . . . . . - . - . ^ ^ ^ ^ - ^ . . . . .\n    . . . . . . - - ^ ^ ^ ^ ^ ^ - . . . . .\n\nPaginating through features:\n\n.. code-block:: python\n\n    import fiona as fio\n    import gj2ascii\n\n    with fio.open('sample-data/WV.geojson') as src:\n        for feature in gj2ascii.paginate(src, 10, properties=['COUNTYFP', 'NAME']):\n            print(feature)\n    +----------+---------+\n    | COUNTYFP |     001 |\n    | NAME     | Barbour |\n    +----------+---------+\n\n                + + +\n      +   + + + + + + +\n      + + + + + + + + +\n    + + + + + + + + +\n    + + + + + + + + + +\n        + + + + + + +\n            + + + +\n            + + + +\n\n\nInstallation\n============\n\nVia pip:\n\n.. code-block:: console\n\n    $ pip install gj2ascii --upgrade\n\nFrom master branch:\n\n.. code-block:: console\n\n    $ git clone https://github.com/geowurster/gj2ascii.git\n    $ cd gj2ascii\n    $ python setup.py install\n\nTo enable emoji:\n\n.. code-block:: console\n\n    $ pip install gj2ascii[emoji]\n\n\nDependencies\n------------\n\nThe dependencies are pretty heavy for a utility like this and may require some\nextra work to get everything installed.  All dependencies should install on their\nown but there are a few potentially problematic packages.  Manually installing\nthe following might help:\n\n* `Rasterio <https://github.com/mapbox/rasterio#installation>`__\n* `Fiona <https://github.com/toblerity/fiona#installation>`__\n* `Shapely <https://github.com/toblerity/shapely#installing-shapely>`__\n\nSome Linux distributions require an additional step before installing rasterio:\n``apt-get install python-numpy-dev libgdal1h libgdal-dev``.\n\n\nDeveloping\n==========\n\n.. code-block:: console\n\n    $ git clone https://github.com/geowurster/gj2ascii.git\n    $ cd gj2ascii\n    $ virtualenv venv\n    $ source venv/bin/activate\n    $ pip install -e .[all]\n    $ py.test gj2ascii --cov gj2ascii --cov-report term-missing\n\n\nLicense\n=======\n\nSee ``LICENSE.txt``.\n", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/geowurster/gj2ascii", "keywords": null, "license": "New BSD License", "maintainer": null, "maintainer_email": null, "name": "gj2ascii", "package_url": "https://pypi.org/project/gj2ascii/", "platform": null, "project_url": "https://pypi.org/project/gj2ascii/", "project_urls": {"Homepage": "https://github.com/geowurster/gj2ascii"}, "release_url": "https://pypi.org/project/gj2ascii/0.4.1/", "requires_dist": null, "requires_python": null, "summary": "Render GeoJSON as ASCII on the commandline.", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <pre><span class=\"go\">            _ ___                   _ _\n   ____ _  (_)__ \\ ____ ___________(_|_)\n  / __ `/ / /__/ // __ `/ ___/ ___/ / /\n / /_/ / / // __// /_/ (__  ) /__/ / /\n \\__, /_/ //____/\\__,_/____/\\___/_/_/\n/____/___/</span>\n</pre>\n<a href=\"https://travis-ci.org/geowurster/gj2ascii\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/geowurster/gj2ascii.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3b83bc995d585acebe4e0e789d8c570d44e26661/68747470733a2f2f7472617669732d63692e6f72672f67656f777572737465722f676a3261736369692e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/geowurster/gj2ascii\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/geowurster/gj2ascii/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca634e0f34861e5ffe6c4dc892787d1f850b29f2/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f67656f777572737465722f676a3261736369692f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<p>Render spatial vector data as ASCII or emoji with Python on the commandline.</p>\n<a href=\"https://github.com/geowurster/gj2ascii/blob/master/images/emoji-land-cover-80w.png\" rel=\"nofollow\"><img alt=\"https://raw.githubusercontent.com/geowurster/gj2ascii/master/images/emoji-land-cover-80w.png\" height=\"563\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dc71ce0776955b706959deabffd24a28d3a65397/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f67656f777572737465722f676a3261736369692f6d61737465722f696d616765732f656d6f6a692d6c616e642d636f7665722d3830772e706e67\" width=\"574\"></a>\n<div id=\"why\">\n<h2>Why?</h2>\n<p>A <a href=\"https://twitter.com/vtcraghead/status/575370039701929984\" rel=\"nofollow\">tweet</a> made it seem like an interesting exercise but\nthe <tt>gj2ascii</tt> commandline utility has been very useful for previewing multiple files and the API has proven to be\nuseful for debugging complex geoprocessing operations.</p>\n</div>\n<div id=\"default-behavior\">\n<h2>Default Behavior</h2>\n<p>The overall goal of this utility is to provide easy access to ASCII representations\nof vector geometries and overlapping layers.</p>\n<ol>\n<li>When rendering a single layer an ASCII character is used.</li>\n<li>When rendering multiple layers colors are used with a randomly assigned character underneath and a transparent fill.</li>\n</ol>\n<p>There are only <tt>7</tt> colors (black is not used for auto-assignment) so if more than 7 layers\nare given the <tt><span class=\"pre\">--char</span></tt> flag must be used for each of them to manually assign a character,\nemoji, or color.</p>\n</div>\n<div id=\"emoji-example\">\n<h2>Emoji Example</h2>\n<p>The emoji screenshot was generated by downloading the <tt>GeoTIFF</tt> version of the\n<a href=\"http://glcf.umd.edu/data/lc/\" rel=\"nofollow\">MODIS Landcover dataset</a>, resampling to <tt>25%</tt>\nof its original, size converted to a vector with <a href=\"http://www.gdal.org/gdal_polygonize.html\" rel=\"nofollow\">gdal_polygonize.py</a>,\nand <a href=\"http://gis.stackexchange.com/questions/25709/splitting-shapefile-into-separate-shapefiles-for-each-feature-using-qgis-gdal-sa\" rel=\"nofollow\">split</a>\ninto one <tt>ESRI Shapefile</tt> per class with <a href=\"qgis.org\" rel=\"nofollow\">QGIS</a>, before executing the following\ncommand:</p>\n<pre><span class=\"gp\">$</span> gj2ascii <span class=\"se\">\\\n</span>    --bbox -130 <span class=\"m\">9</span> -61.5 <span class=\"m\">77</span> <span class=\"se\">\\\n</span>    --width <span class=\"m\">80</span> <span class=\"se\">\\\n</span>    <span class=\"m\">0</span>.geojson -c <span class=\"s1\">' '</span> <span class=\"se\">\\\n</span>    <span class=\"m\">1</span>.geojson -c :christmas_tree: <span class=\"se\">\\\n</span>    <span class=\"m\">2</span>.geojson -c :evergreen_tree: <span class=\"se\">\\\n</span>    <span class=\"m\">3</span>.geojson -c :maple_leaf: <span class=\"se\">\\\n</span>    <span class=\"m\">4</span>.geojson -c :maple_leaf: <span class=\"se\">\\\n</span>    <span class=\"m\">5</span>.geojson -c :deciduous_tree: <span class=\"se\">\\\n</span>    <span class=\"m\">6</span>.geojson -c :herb: <span class=\"se\">\\\n</span>    <span class=\"m\">7</span>.geojson -c :herb: <span class=\"se\">\\\n</span>    <span class=\"m\">8</span>.geojson -c :herb: <span class=\"se\">\\\n</span>    <span class=\"m\">9</span>.geojson -c :herb: <span class=\"se\">\\\n</span>    <span class=\"m\">10</span>.geojson -c :ear_of_rice: <span class=\"se\">\\\n</span>    <span class=\"m\">11</span>.geojson -c :turtle: <span class=\"se\">\\\n</span>    <span class=\"m\">12</span>.geojson -c :tractor: <span class=\"se\">\\\n</span>    <span class=\"m\">13</span>.geojson -c :house_building: <span class=\"se\">\\\n</span>    <span class=\"m\">14</span>.geojson -c :leaf_fluttering_in_wind: <span class=\"se\">\\\n</span>    <span class=\"m\">15</span>.geojson -c :snowflake: <span class=\"se\">\\\n</span>    <span class=\"m\">16</span>.geojson -c :black_medium_square:\n</pre>\n<p>The same data can be rendered with ASCII characters instead:</p>\n<pre><span class=\"gp\">$</span> gj2ascii <span class=\"se\">\\\n</span>    --bbox -130 <span class=\"m\">9</span> -61.5 <span class=\"m\">77</span> <span class=\"se\">\\\n</span>    --width <span class=\"m\">80</span> <span class=\"se\">\\\n</span>    <span class=\"m\">0</span>.shp -c <span class=\"s1\">' '</span> <span class=\"se\">\\\n</span>    <span class=\"m\">1</span>.shp -c <span class=\"se\">\\#</span> <span class=\"se\">\\\n</span>    <span class=\"m\">2</span>.shp -c <span class=\"se\">\\^</span> <span class=\"se\">\\\n</span>    <span class=\"m\">3</span>.shp -c + <span class=\"se\">\\\n</span>    <span class=\"m\">4</span>.shp -c <span class=\"se\">\\&amp;</span> <span class=\"se\">\\\n</span>    <span class=\"m\">5</span>.shp -c <span class=\"se\">\\$</span> <span class=\"se\">\\\n</span>    <span class=\"m\">6</span>.shp -c <span class=\"se\">\\%</span> <span class=\"se\">\\\n</span>    <span class=\"m\">7</span>.shp -c <span class=\"se\">\\:</span> <span class=\"se\">\\\n</span>    <span class=\"m\">8</span>.shp -c P <span class=\"se\">\\\n</span>    <span class=\"m\">9</span>.shp -c - <span class=\"se\">\\\n</span>    <span class=\"m\">10</span>.shp -c <span class=\"se\">\\\"</span> <span class=\"se\">\\\n</span>    <span class=\"m\">11</span>.shp -c <span class=\"m\">0</span> <span class=\"se\">\\\n</span>    <span class=\"m\">12</span>.shp -c <span class=\"o\">=</span> <span class=\"se\">\\\n</span>    <span class=\"m\">13</span>.shp -c N <span class=\"se\">\\\n</span>    <span class=\"m\">14</span>.shp -c <span class=\"se\">\\@</span> <span class=\"se\">\\\n</span>    <span class=\"m\">15</span>.shp -c <span class=\"se\">\\*</span> <span class=\"se\">\\\n</span>    <span class=\"m\">16</span>.shp -c O\n</pre>\n<a href=\"https://github.com/geowurster/gj2ascii/tree/master/images/ascii-land-cover-80w.png\" rel=\"nofollow\"><img alt=\"https://raw.githubusercontent.com/geowurster/gj2ascii/master/images/ascii-land-cover-80w.png\" height=\"553\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/469ec11994e4f121556e0fe217fcb93bf73dcf14/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f67656f777572737465722f676a3261736369692f6d61737465722f696d616765732f61736369692d6c616e642d636f7665722d3830772e706e67\" width=\"566\"></a>\n</div>\n<div id=\"other-examples\">\n<h2>Other Examples</h2>\n<p>See the <a href=\"https://github.com/geowurster/gj2ascii/tree/master/examples\" rel=\"nofollow\">examples directory</a> for more information and\nmore complex examples but the following are a good place to get started.  Some of the examples include output that\nwould be colored if run on the commandline or in Python but RST cannot render the ANSI codes.</p>\n<p>Render two layers, one read from stin and one read directly from a file, across 20 pixels while explicitly specifying\na character and color for each layer and background fill, and zooming in on an area of interest.</p>\n<pre><span class=\"gp\">$</span> cat sample-data/polygons.geojson <span class=\"p\">|</span> gj2ascii - <span class=\"se\">\\\n</span>    sample-data/lines.geojson <span class=\"se\">\\\n</span>    --bbox sample-data/small-aoi-polygon-line.geojson <span class=\"se\">\\\n</span>    --width <span class=\"m\">20</span> <span class=\"se\">\\\n</span>    --char ^<span class=\"o\">=</span>red <span class=\"se\">\\\n</span>    --char -<span class=\"o\">=</span>blue <span class=\"se\">\\\n</span>    --fill .<span class=\"o\">=</span>green\n<span class=\"go\">. . . . . . - . . . . . . . . . ^ ^ ^ ^\n. . . . . - . . . . . . . . . . . ^ ^ ^\n. . . . - . . . . . . . . . . . . . - -\n. . . . - . . . . . . . . - - - - - . ^\n^ ^ . - . . . . . . . . . . . . . . . .\n^ ^ - . . . . . . . . . . . . . . . . .\n^ - ^ . . . . . . . . . . . . . . . . .\n^ - . . . . . . . . . . . . . . . . . .\n- ^ . . . . . . - . . . . . ^ . . . . .\n. - . . . . . . - - . . . ^ ^ . . . . .\n. . - . . . . . - . - . ^ ^ ^ . . . . .\n. . . - . . . . - . . - ^ ^ ^ . . . . .\n. . . . - . . - . . ^ ^ - ^ ^ . . . . .\n. . . . . - . - . ^ ^ ^ ^ - ^ . . . . .\n. . . . . . - - ^ ^ ^ ^ ^ ^ - . . . . .</span>\n</pre>\n<p>Render individual features across 10 pixels and display the attributes for two\nfields, <tt>COUNTYFP</tt> and <tt>NAME</tt>.</p>\n<pre><span class=\"gp\">$</span> gj2ascii sample-data/WV.geojson <span class=\"se\">\\\n</span>    --iterate <span class=\"se\">\\\n</span>    --properties COUNTYFP,NAME <span class=\"se\">\\\n</span>    --width <span class=\"m\">10</span>\n<span class=\"go\">\n+----------+---------+\n| COUNTYFP |     001 |\n| NAME     | Barbour |\n+----------+---------+\n\n            + + +\n  +   + + + + + + +\n  + + + + + + + + +\n+ + + + + + + + +\n+ + + + + + + + + +\n    + + + + + + +\n        + + + +\n        + + + +\n\nPress enter for the next geometry or ^C/^D or 'q' to quit...</span>\n</pre>\n<div id=\"recreate-the-first-example-with-the-python-api\">\n<h3>Recreate the first example with the Python API</h3>\n<p>There are two ways to recreate the first example with the Python API.  If the user does not care about which characters\nare assigned to which color, use this one:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fiona</span> <span class=\"k\">as</span> <span class=\"nn\">fio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">gj2ascii</span>\n<span class=\"k\">with</span> <span class=\"n\">fio</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'sample-data/polygons.geojson'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">poly</span><span class=\"p\">,</span> \\\n        <span class=\"n\">fio</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'sample-data/lines.geojson'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">lines</span><span class=\"p\">,</span> \\\n        <span class=\"n\">fio</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'sample-data/small-aoi-polygon-line.geojson'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">bbox</span><span class=\"p\">:</span>\n    <span class=\"n\">layermap</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"n\">poly</span><span class=\"p\">,</span> <span class=\"s1\">'red'</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">,</span> <span class=\"s1\">'blue'</span><span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">gj2ascii</span><span class=\"o\">.</span><span class=\"n\">style_multiple</span><span class=\"p\">(</span><span class=\"n\">layermap</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s1\">'green'</span><span class=\"p\">,</span> <span class=\"n\">bbox</span><span class=\"o\">=</span><span class=\"n\">bbox</span><span class=\"o\">.</span><span class=\"n\">bounds</span><span class=\"p\">))</span>\n<span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">2</span> <span class=\"mi\">2</span> <span class=\"mi\">2</span> <span class=\"mi\">2</span>\n<span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">2</span> <span class=\"mi\">2</span> <span class=\"mi\">2</span>\n<span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">1</span>\n<span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">1</span> <span class=\"mi\">1</span> <span class=\"mi\">1</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"mi\">2</span>\n<span class=\"mi\">2</span> <span class=\"mi\">2</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span>\n<span class=\"mi\">2</span> <span class=\"mi\">2</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span>\n<span class=\"mi\">2</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span>\n<span class=\"mi\">2</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span>\n<span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">2</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span>\n<span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">2</span> <span class=\"mi\">2</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span>\n<span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"mi\">2</span> <span class=\"mi\">2</span> <span class=\"mi\">2</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span>\n<span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"mi\">2</span> <span class=\"mi\">2</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span>\n<span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">2</span> <span class=\"mi\">2</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"mi\">2</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span>\n<span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"mi\">2</span> <span class=\"mi\">2</span> <span class=\"mi\">2</span> <span class=\"mi\">2</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span>\n<span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"mi\">2</span> <span class=\"mi\">2</span> <span class=\"mi\">2</span> <span class=\"mi\">2</span> <span class=\"mi\">2</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span>\n</pre>\n<p>If the user cares about which character is assigned to which layer, use this one:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fiona</span> <span class=\"k\">as</span> <span class=\"nn\">fio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">gj2ascii</span>\n\n<span class=\"k\">with</span> <span class=\"n\">fio</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'sample-data/polygons.geojson'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">poly</span><span class=\"p\">,</span> \\\n        <span class=\"n\">fio</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'sample-data/lines.geojson'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">lines</span><span class=\"p\">,</span> \\\n        <span class=\"n\">fio</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'sample-data/small-aoi-polygon-line.geojson'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">bbox</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># Render each layer individually with the same bbox and width</span>\n    <span class=\"c1\"># The fill will be assigned in the next step but must be a single space here</span>\n    <span class=\"n\">rendered_layers</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">gj2ascii</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">poly</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">char</span><span class=\"o\">=</span><span class=\"s1\">'^'</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s1\">' '</span><span class=\"p\">,</span> <span class=\"n\">bbox</span><span class=\"o\">=</span><span class=\"n\">bbox</span><span class=\"o\">.</span><span class=\"n\">bounds</span><span class=\"p\">),</span>\n        <span class=\"n\">gj2ascii</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">char</span><span class=\"o\">=</span><span class=\"s1\">'-'</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s1\">' '</span><span class=\"p\">,</span> <span class=\"n\">bbox</span><span class=\"o\">=</span><span class=\"n\">bbox</span><span class=\"o\">.</span><span class=\"n\">bounds</span><span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"c1\"># Overlay the rendered layers into one stack</span>\n    <span class=\"n\">stacked</span> <span class=\"o\">=</span> <span class=\"n\">gj2ascii</span><span class=\"o\">.</span><span class=\"n\">stack</span><span class=\"p\">(</span><span class=\"n\">rendered_layers</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s1\">'.'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Apply the colors and print</span>\n    <span class=\"n\">colormap</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'^'</span><span class=\"p\">:</span> <span class=\"s1\">'red'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'-'</span><span class=\"p\">:</span> <span class=\"s1\">'blue'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'.'</span><span class=\"p\">:</span> <span class=\"s1\">'green'</span>\n    <span class=\"p\">}</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">gj2ascii</span><span class=\"o\">.</span><span class=\"n\">style</span><span class=\"p\">(</span><span class=\"n\">stacked</span><span class=\"p\">,</span> <span class=\"n\">colormap</span><span class=\"p\">))</span>\n<span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">-</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">^</span> <span class=\"o\">^</span> <span class=\"o\">^</span> <span class=\"o\">^</span>\n<span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">-</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">^</span> <span class=\"o\">^</span> <span class=\"o\">^</span>\n<span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">-</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">-</span> <span class=\"o\">-</span>\n<span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">-</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">-</span> <span class=\"o\">-</span> <span class=\"o\">-</span> <span class=\"o\">-</span> <span class=\"o\">-</span> <span class=\"o\">.</span> <span class=\"o\">^</span>\n<span class=\"o\">^</span> <span class=\"o\">^</span> <span class=\"o\">.</span> <span class=\"o\">-</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span>\n<span class=\"o\">^</span> <span class=\"o\">^</span> <span class=\"o\">-</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span>\n<span class=\"o\">^</span> <span class=\"o\">-</span> <span class=\"o\">^</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span>\n<span class=\"o\">^</span> <span class=\"o\">-</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span>\n<span class=\"o\">-</span> <span class=\"o\">^</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">-</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">^</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span>\n<span class=\"o\">.</span> <span class=\"o\">-</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">-</span> <span class=\"o\">-</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">^</span> <span class=\"o\">^</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span>\n<span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">-</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">-</span> <span class=\"o\">.</span> <span class=\"o\">-</span> <span class=\"o\">.</span> <span class=\"o\">^</span> <span class=\"o\">^</span> <span class=\"o\">^</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span>\n<span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">-</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">-</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">-</span> <span class=\"o\">^</span> <span class=\"o\">^</span> <span class=\"o\">^</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span>\n<span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">-</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">-</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">^</span> <span class=\"o\">^</span> <span class=\"o\">-</span> <span class=\"o\">^</span> <span class=\"o\">^</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span>\n<span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">-</span> <span class=\"o\">.</span> <span class=\"o\">-</span> <span class=\"o\">.</span> <span class=\"o\">^</span> <span class=\"o\">^</span> <span class=\"o\">^</span> <span class=\"o\">^</span> <span class=\"o\">-</span> <span class=\"o\">^</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span>\n<span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">-</span> <span class=\"o\">-</span> <span class=\"o\">^</span> <span class=\"o\">^</span> <span class=\"o\">^</span> <span class=\"o\">^</span> <span class=\"o\">^</span> <span class=\"o\">^</span> <span class=\"o\">-</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span> <span class=\"o\">.</span>\n</pre>\n<p>Paginating through features:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fiona</span> <span class=\"k\">as</span> <span class=\"nn\">fio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">gj2ascii</span>\n\n<span class=\"k\">with</span> <span class=\"n\">fio</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'sample-data/WV.geojson'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">src</span><span class=\"p\">:</span>\n    <span class=\"k\">for</span> <span class=\"n\">feature</span> <span class=\"ow\">in</span> <span class=\"n\">gj2ascii</span><span class=\"o\">.</span><span class=\"n\">paginate</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">properties</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'COUNTYFP'</span><span class=\"p\">,</span> <span class=\"s1\">'NAME'</span><span class=\"p\">]):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">feature</span><span class=\"p\">)</span>\n<span class=\"o\">+----------+---------+</span>\n<span class=\"o\">|</span> <span class=\"n\">COUNTYFP</span> <span class=\"o\">|</span>     <span class=\"mi\">001</span> <span class=\"o\">|</span>\n<span class=\"o\">|</span> <span class=\"n\">NAME</span>     <span class=\"o\">|</span> <span class=\"n\">Barbour</span> <span class=\"o\">|</span>\n<span class=\"o\">+----------+---------+</span>\n\n            <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span>\n  <span class=\"o\">+</span>   <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span>\n  <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span>\n<span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span>\n<span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span>\n    <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span>\n        <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span>\n        <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"o\">+</span>\n</pre>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Via pip:</p>\n<pre><span class=\"gp\">$</span> pip install gj2ascii --upgrade\n</pre>\n<p>From master branch:</p>\n<pre><span class=\"gp\">$</span> git clone https://github.com/geowurster/gj2ascii.git\n<span class=\"gp\">$</span> <span class=\"nb\">cd</span> gj2ascii\n<span class=\"gp\">$</span> python setup.py install\n</pre>\n<p>To enable emoji:</p>\n<pre><span class=\"gp\">$</span> pip install gj2ascii<span class=\"o\">[</span>emoji<span class=\"o\">]</span>\n</pre>\n<div id=\"dependencies\">\n<h3>Dependencies</h3>\n<p>The dependencies are pretty heavy for a utility like this and may require some\nextra work to get everything installed.  All dependencies should install on their\nown but there are a few potentially problematic packages.  Manually installing\nthe following might help:</p>\n<ul>\n<li><a href=\"https://github.com/mapbox/rasterio#installation\" rel=\"nofollow\">Rasterio</a></li>\n<li><a href=\"https://github.com/toblerity/fiona#installation\" rel=\"nofollow\">Fiona</a></li>\n<li><a href=\"https://github.com/toblerity/shapely#installing-shapely\" rel=\"nofollow\">Shapely</a></li>\n</ul>\n<p>Some Linux distributions require an additional step before installing rasterio:\n<tt><span class=\"pre\">apt-get</span> install <span class=\"pre\">python-numpy-dev</span> libgdal1h <span class=\"pre\">libgdal-dev</span></tt>.</p>\n</div>\n</div>\n<div id=\"developing\">\n<h2>Developing</h2>\n<pre><span class=\"gp\">$</span> git clone https://github.com/geowurster/gj2ascii.git\n<span class=\"gp\">$</span> <span class=\"nb\">cd</span> gj2ascii\n<span class=\"gp\">$</span> virtualenv venv\n<span class=\"gp\">$</span> <span class=\"nb\">source</span> venv/bin/activate\n<span class=\"gp\">$</span> pip install -e .<span class=\"o\">[</span>all<span class=\"o\">]</span>\n<span class=\"gp\">$</span> py.test gj2ascii --cov gj2ascii --cov-report term-missing\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>See <tt>LICENSE.txt</tt>.</p>\n</div>\n\n          </div>"}, "last_serial": 1575502, "releases": {"0.1": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "3210852a833ca6dc0061aecc1cc16840", "sha256": "34714e6846fa59c545625561bf2da7fce72ebff56401101dae42f4c18774b9cc"}, "downloads": -1, "filename": "gj2ascii-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3210852a833ca6dc0061aecc1cc16840", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4586, "upload_time": "2015-03-11T00:23:12", "upload_time_iso_8601": "2015-03-11T00:23:12.278149Z", "url": "https://files.pythonhosted.org/packages/c0/39/fa6a17138fb482d2db3f5617598cee1752fce6389d8d003c5acfb5e2ef11/gj2ascii-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "33312e00a7fdbcd1a413f75a9294e7bf", "sha256": "f7ac1347ead3e188c56c2d27f0327917b009ff3793e2fe9d45682aecfbb80dc2"}, "downloads": -1, "filename": "gj2ascii-0.1.2.tar.gz", "has_sig": false, "md5_digest": "33312e00a7fdbcd1a413f75a9294e7bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4778, "upload_time": "2015-03-11T00:24:49", "upload_time_iso_8601": "2015-03-11T00:24:49.184727Z", "url": "https://files.pythonhosted.org/packages/7a/f9/40b5fa18689bd9528732e0cd7852331565471548ccf2bd94d3ca41af8e24/gj2ascii-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "8b285753fff5a9b5da27dcecca835b73", "sha256": "843ceda860770d293a8b8ab211a78ac1fe572d640d65c60e8881b775419d7610"}, "downloads": -1, "filename": "gj2ascii-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8b285753fff5a9b5da27dcecca835b73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5060, "upload_time": "2015-03-11T05:58:59", "upload_time_iso_8601": "2015-03-11T05:58:59.124548Z", "url": "https://files.pythonhosted.org/packages/27/9d/f7ea6fbf1428588a78c67676aaaa26ba115a7517bb1f8620b4fd0f6a368a/gj2ascii-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "b5fd7704eb21b2c9daaccc56a0b3f241", "sha256": "5349ad597d3576725d47a8b2b1020a57c7a2c936a2cb1a8a875cd506279304a1"}, "downloads": -1, "filename": "gj2ascii-0.3.0.tar.gz", "has_sig": false, "md5_digest": "b5fd7704eb21b2c9daaccc56a0b3f241", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10201, "upload_time": "2015-03-13T04:44:51", "upload_time_iso_8601": "2015-03-13T04:44:51.438147Z", "url": "https://files.pythonhosted.org/packages/4b/cb/d13bac6e88d6f9fd68b97872bae976b578f531fe6d23731da9d746191197/gj2ascii-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "3f320f0009f41430bca37c7f9eaed077", "sha256": "4b292f6b2692f6cb40305b95ef058f78ee0e6a4e0c84b14449499b31f8f74ced"}, "downloads": -1, "filename": "gj2ascii-0.3.1.tar.gz", "has_sig": false, "md5_digest": "3f320f0009f41430bca37c7f9eaed077", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10361, "upload_time": "2015-03-13T05:05:09", "upload_time_iso_8601": "2015-03-13T05:05:09.378093Z", "url": "https://files.pythonhosted.org/packages/a2/2d/207aa7acdb3da1b5d598f14a5bc4be2733fcef2ab41a823791cb2679e92a/gj2ascii-0.3.1.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "4c3e359ae242d9ea93d931d9d631584c", "sha256": "5e541a66620a962beac4119c5c6fdf0d3e8871c54720e9519fe00f3027adf62c"}, "downloads": -1, "filename": "gj2ascii-0.4.tar.gz", "has_sig": false, "md5_digest": "4c3e359ae242d9ea93d931d9d631584c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25386, "upload_time": "2015-06-02T04:38:33", "upload_time_iso_8601": "2015-06-02T04:38:33.732328Z", "url": "https://files.pythonhosted.org/packages/54/da/2bfa2354f4c45355551b8f396d3789937a38421bc21c27d12c23cc74c85a/gj2ascii-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "887274b006171a18da25fba003430983", "sha256": "65c865410aecd6e4698a120b47531171ee4bc89a511c301c770393f4884ffe8e"}, "downloads": -1, "filename": "gj2ascii-0.4.1.tar.gz", "has_sig": false, "md5_digest": "887274b006171a18da25fba003430983", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25401, "upload_time": "2015-06-02T17:11:05", "upload_time_iso_8601": "2015-06-02T17:11:05.175990Z", "url": "https://files.pythonhosted.org/packages/12/bb/7ba7b05bf43b334d5a2b7f84844279f377456512adba7634585f3d97e13e/gj2ascii-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "887274b006171a18da25fba003430983", "sha256": "65c865410aecd6e4698a120b47531171ee4bc89a511c301c770393f4884ffe8e"}, "downloads": -1, "filename": "gj2ascii-0.4.1.tar.gz", "has_sig": false, "md5_digest": "887274b006171a18da25fba003430983", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25401, "upload_time": "2015-06-02T17:11:05", "upload_time_iso_8601": "2015-06-02T17:11:05.175990Z", "url": "https://files.pythonhosted.org/packages/12/bb/7ba7b05bf43b334d5a2b7f84844279f377456512adba7634585f3d97e13e/gj2ascii-0.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:42 2020"}