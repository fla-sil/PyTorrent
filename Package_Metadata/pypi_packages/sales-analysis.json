{"info": {"author": "Joseph Moorhouse", "author_email": "", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3.7"], "description": "# sales_analysis: web application to view sales data\n\n## What is it?\n\nsales_analysis is a lightweight tool for viewig sales data in web browser. **Note: The input data must be in the same format, as the `.csv` files in `sales_analysis/data_pipeline/data`** \n\n## Where to get it?\n\nThe package can be installed by running \n\n```\npip install sales_analysis\n```\n\n## Dependancies\n\n* [Pandas](https://github.com/pandas-dev/pandas/tree/v1.0.3)\n* [Flask](https://flask.palletsprojects.com/en/1.1.x/quickstart/)\n* [pytest](https://docs.pytest.org/en/latest/)\n\n## License\n\nBSD 3\n\n## How to run the app\n\nAfter successfully installing `sales_analysis`. The app may be run without any modification to `sales_analysis/data_pipeline/data`. However, this will execute the sample data provided. In order to change the default behaviour, the data in `sales_analysis/data_pipeline/data` must be replaced with new data. **Note: It is imperative that this folder contains data formatted in the same way as provided**. \n\nOnce the data has been imported, then follow the steps below.\n\n1. Open a terminal and enter `python` to launch an interactive python session.\n```\n> python\nPython 3.7.7 (default, Mar 23 2020, 16:19:08) [MSC v.1916 64 bit (AMD64)] :: Anaconda, Inc. on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>>\n```\n\n2. Then enter the following\n```\n>>> from sales_analysis import sales_app\n>>> app.run()\n```\n\nThis will output the following.\n\n```\n* Serving Flask app \"sales_analysis\" (lazy loading)\n* Environment: production\n  WARNING: This is a development server. Do not use it in a production deployment.\n  Use a production WSGI server instead.\n* Debug mode: off\n* Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n```\n\n3. Then copy and paste `http://127.0.0.1:5000/` into a browser. The default page will return the message below\n\n> ## Not Found\n\nThe requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.\n\n4. Add a valid date to the url. For example, add `2019-08-02` to the url i.e. `http://127.0.0.1:5000/2019-08-02`. This will output the following in the browser.\n\n```python \n{\"customers\":10.0,\n \"discount_rate_avg\":0.12950211356271726,\n \"items\":3082.0,\n \"order_total_avg\":1341449.559055637,\n \"total_discount_amount\":20061245.64408109}\n```\n\nIf an incorrectly formatted date is passed, the server will raise an error. For example, if `2019-08` is passed, the following error is raised.\n\n```\nValueError: time data '2019-08' does not match format '%Y-%m-%d'\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jbmoorhouse/sales_analysis", "keywords": "", "license": "Type license() to see the full license text", "maintainer": "", "maintainer_email": "", "name": "sales-analysis", "package_url": "https://pypi.org/project/sales-analysis/", "platform": "", "project_url": "https://pypi.org/project/sales-analysis/", "project_urls": {"Homepage": "https://github.com/jbmoorhouse/sales_analysis"}, "release_url": "https://pypi.org/project/sales-analysis/0.4/", "requires_dist": ["flask (>=1.1.1)", "pytest (>=5.2)", "pandas (>=1.0.0)", "pytest-flask (>=1.0.0)"], "requires_python": ">=3.7", "summary": "A sales analysis package for an imaginary e-shop", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>sales_analysis: web application to view sales data</h1>\n<h2>What is it?</h2>\n<p>sales_analysis is a lightweight tool for viewig sales data in web browser. <strong>Note: The input data must be in the same format, as the <code>.csv</code> files in <code>sales_analysis/data_pipeline/data</code></strong></p>\n<h2>Where to get it?</h2>\n<p>The package can be installed by running</p>\n<pre><code>pip install sales_analysis\n</code></pre>\n<h2>Dependancies</h2>\n<ul>\n<li><a href=\"https://github.com/pandas-dev/pandas/tree/v1.0.3\" rel=\"nofollow\">Pandas</a></li>\n<li><a href=\"https://flask.palletsprojects.com/en/1.1.x/quickstart/\" rel=\"nofollow\">Flask</a></li>\n<li><a href=\"https://docs.pytest.org/en/latest/\" rel=\"nofollow\">pytest</a></li>\n</ul>\n<h2>License</h2>\n<p>BSD 3</p>\n<h2>How to run the app</h2>\n<p>After successfully installing <code>sales_analysis</code>. The app may be run without any modification to <code>sales_analysis/data_pipeline/data</code>. However, this will execute the sample data provided. In order to change the default behaviour, the data in <code>sales_analysis/data_pipeline/data</code> must be replaced with new data. <strong>Note: It is imperative that this folder contains data formatted in the same way as provided</strong>.</p>\n<p>Once the data has been imported, then follow the steps below.</p>\n<ol>\n<li>Open a terminal and enter <code>python</code> to launch an interactive python session.</li>\n</ol>\n<pre><code>&gt; python\nPython 3.7.7 (default, Mar 23 2020, 16:19:08) [MSC v.1916 64 bit (AMD64)] :: Anaconda, Inc. on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt;\n</code></pre>\n<ol>\n<li>Then enter the following</li>\n</ol>\n<pre><code>&gt;&gt;&gt; from sales_analysis import sales_app\n&gt;&gt;&gt; app.run()\n</code></pre>\n<p>This will output the following.</p>\n<pre><code>* Serving Flask app \"sales_analysis\" (lazy loading)\n* Environment: production\n  WARNING: This is a development server. Do not use it in a production deployment.\n  Use a production WSGI server instead.\n* Debug mode: off\n* Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n</code></pre>\n<ol>\n<li>Then copy and paste <code>http://127.0.0.1:5000/</code> into a browser. The default page will return the message below</li>\n</ol>\n<blockquote>\n<h2>Not Found</h2>\n</blockquote>\n<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>\n<ol>\n<li>Add a valid date to the url. For example, add <code>2019-08-02</code> to the url i.e. <code>http://127.0.0.1:5000/2019-08-02</code>. This will output the following in the browser.</li>\n</ol>\n<pre><span class=\"p\">{</span><span class=\"s2\">\"customers\"</span><span class=\"p\">:</span><span class=\"mf\">10.0</span><span class=\"p\">,</span>\n <span class=\"s2\">\"discount_rate_avg\"</span><span class=\"p\">:</span><span class=\"mf\">0.12950211356271726</span><span class=\"p\">,</span>\n <span class=\"s2\">\"items\"</span><span class=\"p\">:</span><span class=\"mf\">3082.0</span><span class=\"p\">,</span>\n <span class=\"s2\">\"order_total_avg\"</span><span class=\"p\">:</span><span class=\"mf\">1341449.559055637</span><span class=\"p\">,</span>\n <span class=\"s2\">\"total_discount_amount\"</span><span class=\"p\">:</span><span class=\"mf\">20061245.64408109</span><span class=\"p\">}</span>\n</pre>\n<p>If an incorrectly formatted date is passed, the server will raise an error. For example, if <code>2019-08</code> is passed, the following error is raised.</p>\n<pre><code>ValueError: time data '2019-08' does not match format '%Y-%m-%d'\n</code></pre>\n\n          </div>"}, "last_serial": 6978678, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "30d6b3f658fe68784d7c6a9ff418836f", "sha256": "647f6de5617c942f0f0fe03b8cfdc7e138ab9c278b20ff14ca7c63789a364fc4"}, "downloads": -1, "filename": "sales_analysis-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "30d6b3f658fe68784d7c6a9ff418836f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 9859, "upload_time": "2020-04-08T11:58:03", "upload_time_iso_8601": "2020-04-08T11:58:03.283029Z", "url": "https://files.pythonhosted.org/packages/1f/cc/08f0ac687f6b5c9babccd987efe7c96ecb7e3cb2c4d3c95b270c00f24010/sales_analysis-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c616d823b5a15b11ebf6e260f69eec6", "sha256": "5511d162a5b4ffa5e6153ff7d451825d50cd1bf4dc794bbfc006a47e50551840"}, "downloads": -1, "filename": "sales-analysis-0.1.tar.gz", "has_sig": false, "md5_digest": "9c616d823b5a15b11ebf6e260f69eec6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 7047, "upload_time": "2020-04-08T11:58:43", "upload_time_iso_8601": "2020-04-08T11:58:43.799876Z", "url": "https://files.pythonhosted.org/packages/39/7d/b46cf25980b2cdc3e7ef6fd47bd6536c409132c882afcaa2b8aacc484a23/sales-analysis-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "80b9281919c2169c47ce5ea8f3dd32cc", "sha256": "f8e12ce7e5abab7fe92214926d95e55b36be1ed181d62ce8413ca49fa78c2615"}, "downloads": -1, "filename": "sales_analysis-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "80b9281919c2169c47ce5ea8f3dd32cc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 10046, "upload_time": "2020-04-08T14:46:30", "upload_time_iso_8601": "2020-04-08T14:46:30.657602Z", "url": "https://files.pythonhosted.org/packages/71/94/283b8c61eafebdf70435d085078a1adc9f637f60c4fec73b7d151db5cf1a/sales_analysis-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4cc1b926a6ad3323fa4234a06da7154c", "sha256": "4e10d769bc31461ca73ff3998e68990cdd4f34f9f046b4c986cb0bd8a9119abe"}, "downloads": -1, "filename": "sales-analysis-0.2.tar.gz", "has_sig": false, "md5_digest": "4cc1b926a6ad3323fa4234a06da7154c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 7171, "upload_time": "2020-04-08T14:46:57", "upload_time_iso_8601": "2020-04-08T14:46:57.087137Z", "url": "https://files.pythonhosted.org/packages/38/e7/b86b4d34921662209bc7e81106f046a9dbccac2100133f8ec60c290529e0/sales-analysis-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "9a7b921d759a727f99f8f7bd741814fc", "sha256": "fa81fb5a5c21542920f137dca8892be64512cafeed5286a933fe75bbe2569837"}, "downloads": -1, "filename": "sales_analysis-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9a7b921d759a727f99f8f7bd741814fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 10046, "upload_time": "2020-04-08T15:10:22", "upload_time_iso_8601": "2020-04-08T15:10:22.962780Z", "url": "https://files.pythonhosted.org/packages/b5/40/f9ae8502367f74f72432eee39b4095913e179429113995d6eaa84be5fa71/sales_analysis-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8abf478a0c0d6df2ae84c44a88aa4b6c", "sha256": "b8e67c04e5ee84d89478d06795c939497a96ac4f694c41b03d8d4334fb5c7446"}, "downloads": -1, "filename": "sales-analysis-0.3.tar.gz", "has_sig": false, "md5_digest": "8abf478a0c0d6df2ae84c44a88aa4b6c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 7174, "upload_time": "2020-04-08T15:10:49", "upload_time_iso_8601": "2020-04-08T15:10:49.801020Z", "url": "https://files.pythonhosted.org/packages/bd/85/7aa19bf4574fc90852458071f818ea1b8eb219fd8cddf50384d63ce538b5/sales-analysis-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "2775d64ca1c216726091f0bc42d23bca", "sha256": "55b761b78067b815814bcb0775e33e18adc6e99d4ffb4e5dbe015b43e2b0a530"}, "downloads": -1, "filename": "sales_analysis-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "2775d64ca1c216726091f0bc42d23bca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 216824, "upload_time": "2020-04-08T15:33:15", "upload_time_iso_8601": "2020-04-08T15:33:15.702518Z", "url": "https://files.pythonhosted.org/packages/b3/cf/be6052a8f3ae763f67e8350bf58693b5feb171cfd4475c7898a931dcf6d4/sales_analysis-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4efee8615ac7576ac2b34a4f424ad363", "sha256": "f38b1b623f212181764092f85591d7c0c4f41840737a0ef0a733ac3748d8db56"}, "downloads": -1, "filename": "sales-analysis-0.4.tar.gz", "has_sig": false, "md5_digest": "4efee8615ac7576ac2b34a4f424ad363", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 215375, "upload_time": "2020-04-08T15:33:17", "upload_time_iso_8601": "2020-04-08T15:33:17.307005Z", "url": "https://files.pythonhosted.org/packages/29/f8/e248880f5add0f292e7eb6b5a6f207cff0b7eb27341bbfb82366f4764e1b/sales-analysis-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2775d64ca1c216726091f0bc42d23bca", "sha256": "55b761b78067b815814bcb0775e33e18adc6e99d4ffb4e5dbe015b43e2b0a530"}, "downloads": -1, "filename": "sales_analysis-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "2775d64ca1c216726091f0bc42d23bca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 216824, "upload_time": "2020-04-08T15:33:15", "upload_time_iso_8601": "2020-04-08T15:33:15.702518Z", "url": "https://files.pythonhosted.org/packages/b3/cf/be6052a8f3ae763f67e8350bf58693b5feb171cfd4475c7898a931dcf6d4/sales_analysis-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4efee8615ac7576ac2b34a4f424ad363", "sha256": "f38b1b623f212181764092f85591d7c0c4f41840737a0ef0a733ac3748d8db56"}, "downloads": -1, "filename": "sales-analysis-0.4.tar.gz", "has_sig": false, "md5_digest": "4efee8615ac7576ac2b34a4f424ad363", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 215375, "upload_time": "2020-04-08T15:33:17", "upload_time_iso_8601": "2020-04-08T15:33:17.307005Z", "url": "https://files.pythonhosted.org/packages/29/f8/e248880f5add0f292e7eb6b5a6f207cff0b7eb27341bbfb82366f4764e1b/sales-analysis-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:10 2020"}