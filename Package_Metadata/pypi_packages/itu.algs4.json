{"info": {"author": "Algorithms group at ITU Copenhagen", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "# Algs4 library for Python 3\n\n`itu.algs4` is a Python 3 port of the Java code in [Algorithms, 4th Edition](https://algs4.cs.princeton.edu/home/).\n\n[![Build Status](https://github.com/itu-algorithms/itu.algs4/workflows/check/badge.svg)](https://github.com/itu-algorithms/itu.algs4/actions)\n\n## Target audience\n\n`itu.algs4` is intended for instructors and students who wish to follow the textbook [Algorithms, 4th Edition](https://algs4.cs.princeton.edu/home/) by Sedgewick and Wayne.\nIt was first created in 2018 by teaching assistants and instructors at [ITU Copenhagen](https://algorithms.itu.dk), where the introductory course on Algorithms and Data Structures is taught bilingually in Java and Python 3.\n\n## Installation\n\nThis library requires a functioning Python 3 environment, for example the one provided by [Anaconda](https://www.anaconda.com/distribution/).\n\nSome optional visual and auditory features depend on the [numpy](http://numpy.org) and [pygame](https://pygame.org) packages. These features are not used in the ITU course, and you shouldn\u2019t spend extra time on installing those packages unless you already have them or want to play around with the those parts on your own. \n\n### With pip\n\nIf you have previously installed this package under its old name, we recommend you remove it with\n```bash\npip uninstall algs4 algs4_python\n```\nThen you can install `itu.algs4` simply with\n```bash\npip install itu.algs4\n```\nIf you have already installed `itu.algs4` and want to upgrade to a new version, run:\n```bash\npip install itu.algs4 --upgrade\n```\nTo test that you have installed the library correctly, run this command:\n```bash\npython -c 'from itu.algs4.stdlib import stdio; stdio.write(\"Hello World!\")'\n```\nIt should greet you. If an error message appears instead, the library is not installed correctly.\n\n### Alternative: With pip and git\n\nIf git is available, the following command will install the library in your Python environment:\n\n```bash\npip install git+https://github.com/itu-algorithms/itu.algs4\n```\n\n### Alternative: With pip and zip\n\nTo install this library without git:\n\n1. Download and unzip the repository.\n2. Open a command prompt or terminal and navigate to the downloaded folder. There should be the file `setup.py`.\n3. Use the command `pip3 install .` to install the package (this will also work for updating the package, when a newer version is available).  If your Python installation is system-wide, use `sudo pip3 install .`\n\n### Alternative: Step-by-step guide for Windows\n\nTo install the Python package `itu.algs4`:\n\n- Download the repository by pressing the green \"Clone or download\" button, and pressing \"Download ZIP\".\n- Extract the content of the zip to your Desktop (you can delete the folder after installing the package).\n- Open the \"Command Prompt\" by pressing \"Windows + R\", type \"cmd\" in the window that appears, and press \"OK\".\n- If you saved the folder on the Desktop you should be able to navigate to the folder by typing \"cd Desktop\\itu.algs4-master\".\n```\nC:\\Users\\user>cd Desktop\\itu.algs4-master\n```\n- When in the correct folder, type `pip install .` to install the package. \n```\nC:\\Users\\user\\Desktop\\itu.algs4-master>pip install .\n```\n- After this, the package should be installed correctly and you can delete the folder from your Desktop.\n\n## Package structure\n\nThe Python package `itu.algs4` has a hierarchical structure with seven sub-packages:\n\n- [itu.algs4.fundamentals](itu/algs4/fundamentals)\n- [itu.algs4.sorting](itu/algs4/sorting)\n- [itu.algs4.searching](itu/algs4/searching)\n- [itu.algs4.graphs](itu/algs4/graphs)\n- [itu.algs4.strings](itu/algs4/strings)\n- [itu.algs4.stdlib](itu/algs4/stdlib)\n- [itu.algs4.errors](itu/algs4/errors)\n\nWhile deep nesting of packages is normally [discouraged](https://www.python.org/dev/peps/pep-0423/#avoid-deep-nesting) in Python, an important design goal of `itu.algs4` was to mirror the structure of the original Java code.\nThe first five packages correspond to the first five chapters of [Algorithms, 4th Edition](https://algs4.cs.princeton.edu/home/). The `stdlib` package is based on the one from the related book [Introduction to Programming in Python](https://introcs.cs.princeton.edu/python/). The package `errors` contains some exception classes.\n\nAll filenames and package names have been written in lower_case style with underscores instead of the CamelCase style of the Java version. For example `EdgeWeightedDigraph.java` has been renamed to `edge_weighted_digraph.py`. Class names still use CamelCase though, which is consistent with naming conventions in Python.\n\n## Examples\n\nThe directory [examples/](examples) contains examples, some of which are\ndescribed here.\n\n### Hello World\nA simple program, stored as a file [hello_world.py](examples/hello_world.py), looks like this:\n```python\nfrom itu.algs4.stdlib import stdio\n\nstdio.write(\"Hello World!\\n\")\n```\nIt can be run with the command `python hello_world.py`.\n\n### Sort numbers\nA slightly more interesting example is\n[sort-numbers.py](examples/sort-numbers.py):\n```python\nfrom itu.algs4.sorting import merge\nfrom itu.algs4.stdlib import stdio\n\n\"\"\"\nReads a list of integers from standard input.\nThen prints it in sorted order.\n\"\"\"\nL = stdio.readAllInts()\n\nmerge.sort(L)\n\nif len(L) > 0:\n    stdio.write(L[0])\nfor i in range(1, len(L)):\n    stdio.write(\" \")\n    stdio.write(L[i])\nstdio.writeln()\n```\nThis code uses the convenient function `stdio.readAllInts()` to read the\nintegers (separated by whitespaces) from the standard input and put them in the\narray `L`. It then sorts the elements of the array. Finally, it outputs the\nsorted list -- the code to do so is somewhat less elegant to get the whitespace\nexactly right. (Of course, advanced Python users know more concise ways to\nproduce the same output: `print(\" \".join(map(str, L)))`)\n\n### Import classes\nYou can import classes, such as the class EdgeWeightedDigraph, with\n```python\nfrom itu.algs4.graphs.edge_weighted_digraph import EdgeWeightedDigraph\n```\n\n\n## Documentation\n\nYou can use Python's built-in `help` function on any package, sub-package, public class, or function to get a description of what it contains or does. This documentation should also show up in your IDE of choice.\nFor example `help(itu.algs4)` yields the following:\n\n```\nHelp on package itu.algs4 in itu:\n\nNAME\n    itu.algs4\n\nPACKAGE CONTENTS\n    errors (package)\n    fundamentals (package)\n    graphs (package)\n    searching (package)\n    sorting (package)\n    stdlib (package)\n    strings (package)\n\nFILE\n    (built-in)\n```\n\n## Development\n\n`itu.algs4` has known bugs and has not been tested systematically. We are open to pull requests, and in particular, we appreciate the contribution of high-quality test cases, bug-fixes, and coding style improvements. For more information, see the [CONTRIBUTING.md](CONTRIBUTING.md) file.\n\n## Contributors\n\n- Andreas Holck H\u00f8eg-Petersen\n- Anton M\u00f8lbjerg Eskildsen\n- Frederik Haagensen\n- Holger Dell\n- Martino Secchi\n- Morten Keller Gr\u00f8ftehauge\n- Morten Tychsen Clausen\n- Nina Mesing Stausholm Nielsen\n- Otto Stadel Clausen\n- Riko Jacob\n- Thore Husfeldt\n- Viktor Shamal Andersen\n\n## License\n\nThis project is licensed under the GPLv3 License - see the [LICENSE](LICENSE) file for details\n\n## Links to other projects\n\n- [algs4](https://github.com/kevin-wayne/algs4/) is the original Java implementation by Sedgewick and Wayne.\n- The textbook [Introduction to Programming in Python](https://introcs.cs.princeton.edu/python/) by Sedgewick, Wayne, and Dondero has a somewhat different approach from [Algorithms, 4th Edition](https://algs4.cs.princeton.edu/home/), and is therefore not suitable for a bilingual course. Nevertheless, our code in [itu/algs4/stdlib/](itu/algs4/stdlib/) is largely based on the [source code](https://introcs.cs.princeton.edu/python/code/) associated with that book.\n- [pyalgs](https://github.com/chen0040/pyalgs) is a Python port of `algs4` that uses a more idiomatic Python coding style. In contrast, our port tries to stay as close to the original Java library and the course book\u2019s Java implementations as possible, so that it can be used with less friction in a bilingual course.\n- [Scala-Algorithms](https://github.com/garyaiki/Scala-Algorithms) is a Scala port of `algs4`.\n- [Algs4Net](https://github.com/nguyenqthai/Algs4Net) is a .NET port of `algs4`.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/itu-algorithms/itu.algs4/", "keywords": "", "license": "GNU General Public License v3 (GPLv3)", "maintainer": "", "maintainer_email": "", "name": "itu.algs4", "package_url": "https://pypi.org/project/itu.algs4/", "platform": "any", "project_url": "https://pypi.org/project/itu.algs4/", "project_urls": {"Homepage": "https://github.com/itu-algorithms/itu.algs4/"}, "release_url": "https://pypi.org/project/itu.algs4/0.2.4/", "requires_dist": ["numpy ; extra == 'audio'", "flake8 ; extra == 'dev'", "black ; extra == 'dev'", "isort ; extra == 'dev'", "pytest ; extra == 'dev'", "pytest-cov ; extra == 'dev'", "coveralls ; extra == 'dev'", "mypy ; extra == 'dev'", "pygame ; extra == 'visual'"], "requires_python": "", "summary": "Python 3 port of the Java code in \"Algorithms, 4th Edition\" by Sedgewick and Wayne", "version": "0.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Algs4 library for Python 3</h1>\n<p><code>itu.algs4</code> is a Python 3 port of the Java code in <a href=\"https://algs4.cs.princeton.edu/home/\" rel=\"nofollow\">Algorithms, 4th Edition</a>.</p>\n<p><a href=\"https://github.com/itu-algorithms/itu.algs4/actions\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ce69c7134c41735da1f27a87c1f3f35482d1e28/68747470733a2f2f6769746875622e636f6d2f6974752d616c676f726974686d732f6974752e616c6773342f776f726b666c6f77732f636865636b2f62616467652e737667\"></a></p>\n<h2>Target audience</h2>\n<p><code>itu.algs4</code> is intended for instructors and students who wish to follow the textbook <a href=\"https://algs4.cs.princeton.edu/home/\" rel=\"nofollow\">Algorithms, 4th Edition</a> by Sedgewick and Wayne.\nIt was first created in 2018 by teaching assistants and instructors at <a href=\"https://algorithms.itu.dk\" rel=\"nofollow\">ITU Copenhagen</a>, where the introductory course on Algorithms and Data Structures is taught bilingually in Java and Python 3.</p>\n<h2>Installation</h2>\n<p>This library requires a functioning Python 3 environment, for example the one provided by <a href=\"https://www.anaconda.com/distribution/\" rel=\"nofollow\">Anaconda</a>.</p>\n<p>Some optional visual and auditory features depend on the <a href=\"http://numpy.org\" rel=\"nofollow\">numpy</a> and <a href=\"https://pygame.org\" rel=\"nofollow\">pygame</a> packages. These features are not used in the ITU course, and you shouldn\u2019t spend extra time on installing those packages unless you already have them or want to play around with the those parts on your own.</p>\n<h3>With pip</h3>\n<p>If you have previously installed this package under its old name, we recommend you remove it with</p>\n<pre>pip uninstall algs4 algs4_python\n</pre>\n<p>Then you can install <code>itu.algs4</code> simply with</p>\n<pre>pip install itu.algs4\n</pre>\n<p>If you have already installed <code>itu.algs4</code> and want to upgrade to a new version, run:</p>\n<pre>pip install itu.algs4 --upgrade\n</pre>\n<p>To test that you have installed the library correctly, run this command:</p>\n<pre>python -c <span class=\"s1\">'from itu.algs4.stdlib import stdio; stdio.write(\"Hello World!\")'</span>\n</pre>\n<p>It should greet you. If an error message appears instead, the library is not installed correctly.</p>\n<h3>Alternative: With pip and git</h3>\n<p>If git is available, the following command will install the library in your Python environment:</p>\n<pre>pip install git+https://github.com/itu-algorithms/itu.algs4\n</pre>\n<h3>Alternative: With pip and zip</h3>\n<p>To install this library without git:</p>\n<ol>\n<li>Download and unzip the repository.</li>\n<li>Open a command prompt or terminal and navigate to the downloaded folder. There should be the file <code>setup.py</code>.</li>\n<li>Use the command <code>pip3 install .</code> to install the package (this will also work for updating the package, when a newer version is available).  If your Python installation is system-wide, use <code>sudo pip3 install .</code></li>\n</ol>\n<h3>Alternative: Step-by-step guide for Windows</h3>\n<p>To install the Python package <code>itu.algs4</code>:</p>\n<ul>\n<li>Download the repository by pressing the green \"Clone or download\" button, and pressing \"Download ZIP\".</li>\n<li>Extract the content of the zip to your Desktop (you can delete the folder after installing the package).</li>\n<li>Open the \"Command Prompt\" by pressing \"Windows + R\", type \"cmd\" in the window that appears, and press \"OK\".</li>\n<li>If you saved the folder on the Desktop you should be able to navigate to the folder by typing \"cd Desktop\\itu.algs4-master\".</li>\n</ul>\n<pre><code>C:\\Users\\user&gt;cd Desktop\\itu.algs4-master\n</code></pre>\n<ul>\n<li>When in the correct folder, type <code>pip install .</code> to install the package.</li>\n</ul>\n<pre><code>C:\\Users\\user\\Desktop\\itu.algs4-master&gt;pip install .\n</code></pre>\n<ul>\n<li>After this, the package should be installed correctly and you can delete the folder from your Desktop.</li>\n</ul>\n<h2>Package structure</h2>\n<p>The Python package <code>itu.algs4</code> has a hierarchical structure with seven sub-packages:</p>\n<ul>\n<li><a href=\"itu/algs4/fundamentals\" rel=\"nofollow\">itu.algs4.fundamentals</a></li>\n<li><a href=\"itu/algs4/sorting\" rel=\"nofollow\">itu.algs4.sorting</a></li>\n<li><a href=\"itu/algs4/searching\" rel=\"nofollow\">itu.algs4.searching</a></li>\n<li><a href=\"itu/algs4/graphs\" rel=\"nofollow\">itu.algs4.graphs</a></li>\n<li><a href=\"itu/algs4/strings\" rel=\"nofollow\">itu.algs4.strings</a></li>\n<li><a href=\"itu/algs4/stdlib\" rel=\"nofollow\">itu.algs4.stdlib</a></li>\n<li><a href=\"itu/algs4/errors\" rel=\"nofollow\">itu.algs4.errors</a></li>\n</ul>\n<p>While deep nesting of packages is normally <a href=\"https://www.python.org/dev/peps/pep-0423/#avoid-deep-nesting\" rel=\"nofollow\">discouraged</a> in Python, an important design goal of <code>itu.algs4</code> was to mirror the structure of the original Java code.\nThe first five packages correspond to the first five chapters of <a href=\"https://algs4.cs.princeton.edu/home/\" rel=\"nofollow\">Algorithms, 4th Edition</a>. The <code>stdlib</code> package is based on the one from the related book <a href=\"https://introcs.cs.princeton.edu/python/\" rel=\"nofollow\">Introduction to Programming in Python</a>. The package <code>errors</code> contains some exception classes.</p>\n<p>All filenames and package names have been written in lower_case style with underscores instead of the CamelCase style of the Java version. For example <code>EdgeWeightedDigraph.java</code> has been renamed to <code>edge_weighted_digraph.py</code>. Class names still use CamelCase though, which is consistent with naming conventions in Python.</p>\n<h2>Examples</h2>\n<p>The directory <a href=\"examples\" rel=\"nofollow\">examples/</a> contains examples, some of which are\ndescribed here.</p>\n<h3>Hello World</h3>\n<p>A simple program, stored as a file <a href=\"examples/hello_world.py\" rel=\"nofollow\">hello_world.py</a>, looks like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">itu.algs4.stdlib</span> <span class=\"kn\">import</span> <span class=\"n\">stdio</span>\n\n<span class=\"n\">stdio</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">\"Hello World!</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n<p>It can be run with the command <code>python hello_world.py</code>.</p>\n<h3>Sort numbers</h3>\n<p>A slightly more interesting example is\n<a href=\"examples/sort-numbers.py\" rel=\"nofollow\">sort-numbers.py</a>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">itu.algs4.sorting</span> <span class=\"kn\">import</span> <span class=\"n\">merge</span>\n<span class=\"kn\">from</span> <span class=\"nn\">itu.algs4.stdlib</span> <span class=\"kn\">import</span> <span class=\"n\">stdio</span>\n\n<span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">Reads a list of integers from standard input.</span>\n<span class=\"sd\">Then prints it in sorted order.</span>\n<span class=\"sd\">\"\"\"</span>\n<span class=\"n\">L</span> <span class=\"o\">=</span> <span class=\"n\">stdio</span><span class=\"o\">.</span><span class=\"n\">readAllInts</span><span class=\"p\">()</span>\n\n<span class=\"n\">merge</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n    <span class=\"n\">stdio</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">)):</span>\n    <span class=\"n\">stdio</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">\" \"</span><span class=\"p\">)</span>\n    <span class=\"n\">stdio</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span>\n<span class=\"n\">stdio</span><span class=\"o\">.</span><span class=\"n\">writeln</span><span class=\"p\">()</span>\n</pre>\n<p>This code uses the convenient function <code>stdio.readAllInts()</code> to read the\nintegers (separated by whitespaces) from the standard input and put them in the\narray <code>L</code>. It then sorts the elements of the array. Finally, it outputs the\nsorted list -- the code to do so is somewhat less elegant to get the whitespace\nexactly right. (Of course, advanced Python users know more concise ways to\nproduce the same output: <code>print(\" \".join(map(str, L)))</code>)</p>\n<h3>Import classes</h3>\n<p>You can import classes, such as the class EdgeWeightedDigraph, with</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">itu.algs4.graphs.edge_weighted_digraph</span> <span class=\"kn\">import</span> <span class=\"n\">EdgeWeightedDigraph</span>\n</pre>\n<h2>Documentation</h2>\n<p>You can use Python's built-in <code>help</code> function on any package, sub-package, public class, or function to get a description of what it contains or does. This documentation should also show up in your IDE of choice.\nFor example <code>help(itu.algs4)</code> yields the following:</p>\n<pre><code>Help on package itu.algs4 in itu:\n\nNAME\n    itu.algs4\n\nPACKAGE CONTENTS\n    errors (package)\n    fundamentals (package)\n    graphs (package)\n    searching (package)\n    sorting (package)\n    stdlib (package)\n    strings (package)\n\nFILE\n    (built-in)\n</code></pre>\n<h2>Development</h2>\n<p><code>itu.algs4</code> has known bugs and has not been tested systematically. We are open to pull requests, and in particular, we appreciate the contribution of high-quality test cases, bug-fixes, and coding style improvements. For more information, see the <a href=\"CONTRIBUTING.md\" rel=\"nofollow\">CONTRIBUTING.md</a> file.</p>\n<h2>Contributors</h2>\n<ul>\n<li>Andreas Holck H\u00f8eg-Petersen</li>\n<li>Anton M\u00f8lbjerg Eskildsen</li>\n<li>Frederik Haagensen</li>\n<li>Holger Dell</li>\n<li>Martino Secchi</li>\n<li>Morten Keller Gr\u00f8ftehauge</li>\n<li>Morten Tychsen Clausen</li>\n<li>Nina Mesing Stausholm Nielsen</li>\n<li>Otto Stadel Clausen</li>\n<li>Riko Jacob</li>\n<li>Thore Husfeldt</li>\n<li>Viktor Shamal Andersen</li>\n</ul>\n<h2>License</h2>\n<p>This project is licensed under the GPLv3 License - see the <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> file for details</p>\n<h2>Links to other projects</h2>\n<ul>\n<li><a href=\"https://github.com/kevin-wayne/algs4/\" rel=\"nofollow\">algs4</a> is the original Java implementation by Sedgewick and Wayne.</li>\n<li>The textbook <a href=\"https://introcs.cs.princeton.edu/python/\" rel=\"nofollow\">Introduction to Programming in Python</a> by Sedgewick, Wayne, and Dondero has a somewhat different approach from <a href=\"https://algs4.cs.princeton.edu/home/\" rel=\"nofollow\">Algorithms, 4th Edition</a>, and is therefore not suitable for a bilingual course. Nevertheless, our code in <a href=\"itu/algs4/stdlib/\" rel=\"nofollow\">itu/algs4/stdlib/</a> is largely based on the <a href=\"https://introcs.cs.princeton.edu/python/code/\" rel=\"nofollow\">source code</a> associated with that book.</li>\n<li><a href=\"https://github.com/chen0040/pyalgs\" rel=\"nofollow\">pyalgs</a> is a Python port of <code>algs4</code> that uses a more idiomatic Python coding style. In contrast, our port tries to stay as close to the original Java library and the course book\u2019s Java implementations as possible, so that it can be used with less friction in a bilingual course.</li>\n<li><a href=\"https://github.com/garyaiki/Scala-Algorithms\" rel=\"nofollow\">Scala-Algorithms</a> is a Scala port of <code>algs4</code>.</li>\n<li><a href=\"https://github.com/nguyenqthai/Algs4Net\" rel=\"nofollow\">Algs4Net</a> is a .NET port of <code>algs4</code>.</li>\n</ul>\n\n          </div>"}, "last_serial": 6743300, "releases": {"0.2.2": [{"comment_text": "", "digests": {"md5": "779597df7c00bd31f7f826919ceee250", "sha256": "75cf2103557293d1230562e4ff913465b08cd8efa8728750e33e974b74186d43"}, "downloads": -1, "filename": "itu.algs4-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "779597df7c00bd31f7f826919ceee250", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 161109, "upload_time": "2020-01-12T18:17:34", "upload_time_iso_8601": "2020-01-12T18:17:34.411123Z", "url": "https://files.pythonhosted.org/packages/86/25/096ffa19edcab8554ebb9bba9fa30522d782f41f5b859735a15d0d805cf0/itu.algs4-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2043dce62f07e77aeb37eff49ca103a2", "sha256": "4deafba2ccd7cc535f1666e57dfbf3ac79bb41eda035ba87455868057146ebed"}, "downloads": -1, "filename": "itu.algs4-0.2.2.tar.gz", "has_sig": false, "md5_digest": "2043dce62f07e77aeb37eff49ca103a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 89350, "upload_time": "2020-01-12T18:17:42", "upload_time_iso_8601": "2020-01-12T18:17:42.070470Z", "url": "https://files.pythonhosted.org/packages/5b/2a/b137f484c6fee8cdee336d64c72142462baf85b2a62ae30bbb09f013b190/itu.algs4-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "68b4734081f1cbd1ec776424538be276", "sha256": "3d2195e2251e55bd22759684257778ad7716c940bfab51b219eff67908433dea"}, "downloads": -1, "filename": "itu.algs4-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "68b4734081f1cbd1ec776424538be276", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 161210, "upload_time": "2020-01-13T10:39:05", "upload_time_iso_8601": "2020-01-13T10:39:05.506159Z", "url": "https://files.pythonhosted.org/packages/4a/6b/1e67e895452291cf26ce720c236cb459dc8bb1f2b149b4d2e5609f9219ce/itu.algs4-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "75c1ea00921c34530b40f44f0013acfd", "sha256": "d95cb8455b49ded7293a849645ed380da88b835bed754ca1f13564f925ad424d"}, "downloads": -1, "filename": "itu.algs4-0.2.3.tar.gz", "has_sig": false, "md5_digest": "75c1ea00921c34530b40f44f0013acfd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 89782, "upload_time": "2020-01-13T10:39:07", "upload_time_iso_8601": "2020-01-13T10:39:07.855323Z", "url": "https://files.pythonhosted.org/packages/df/87/a48711538dd0aa598824761aa66bf2297a0f19fce26cf129c9daf7dd21ac/itu.algs4-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "0ec0c8b02ea5fdcaa6d8698090be3bc8", "sha256": "e13ce8d0910f39dbe5d03924903b27733672dd5a0f8abd3489bc318c7825bba0"}, "downloads": -1, "filename": "itu.algs4-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "0ec0c8b02ea5fdcaa6d8698090be3bc8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 161208, "upload_time": "2020-03-03T20:29:42", "upload_time_iso_8601": "2020-03-03T20:29:42.564406Z", "url": "https://files.pythonhosted.org/packages/e3/ff/00b07385e986b51133c5ade2f6abd1d9f31b2a806ab8e943c422aae1abda/itu.algs4-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7db5b4dc68b4cc291e10a70ecd0c584d", "sha256": "cc449f1b0d7a08d6cca8fc35eb5b6e47ddc95df3da74e4abaddb0039a1e59124"}, "downloads": -1, "filename": "itu.algs4-0.2.4.tar.gz", "has_sig": false, "md5_digest": "7db5b4dc68b4cc291e10a70ecd0c584d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 89653, "upload_time": "2020-03-03T20:29:43", "upload_time_iso_8601": "2020-03-03T20:29:43.663607Z", "url": "https://files.pythonhosted.org/packages/61/b1/9025bcabd8a5d7fa1bfa2aa6a0adbd0c04627cf8f1bac4fa55437b5acb0c/itu.algs4-0.2.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0ec0c8b02ea5fdcaa6d8698090be3bc8", "sha256": "e13ce8d0910f39dbe5d03924903b27733672dd5a0f8abd3489bc318c7825bba0"}, "downloads": -1, "filename": "itu.algs4-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "0ec0c8b02ea5fdcaa6d8698090be3bc8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 161208, "upload_time": "2020-03-03T20:29:42", "upload_time_iso_8601": "2020-03-03T20:29:42.564406Z", "url": "https://files.pythonhosted.org/packages/e3/ff/00b07385e986b51133c5ade2f6abd1d9f31b2a806ab8e943c422aae1abda/itu.algs4-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7db5b4dc68b4cc291e10a70ecd0c584d", "sha256": "cc449f1b0d7a08d6cca8fc35eb5b6e47ddc95df3da74e4abaddb0039a1e59124"}, "downloads": -1, "filename": "itu.algs4-0.2.4.tar.gz", "has_sig": false, "md5_digest": "7db5b4dc68b4cc291e10a70ecd0c584d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 89653, "upload_time": "2020-03-03T20:29:43", "upload_time_iso_8601": "2020-03-03T20:29:43.663607Z", "url": "https://files.pythonhosted.org/packages/61/b1/9025bcabd8a5d7fa1bfa2aa6a0adbd0c04627cf8f1bac4fa55437b5acb0c/itu.algs4-0.2.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:35 2020"}