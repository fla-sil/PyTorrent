{"info": {"author": "kardaj", "author_email": "bensalemhsn@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2"], "description": "# WeeklyCalendar\n\nA simple library to deal with weekly opening hours and other recurrent weekly events\n\n## Usage\nMethods will either return a Boolean or datetime based intervals.\n```python\nfrom weekly_calendar import WeeklyCalendar\nfrom datetime import datetime, timedelta\n\nnow = datetime.now()\ntypical_week = WeeklyCalendar(resolution_in_minutes=60)\n# typical_week is mapped into a bitmap with a bit representing one hour\nassert typical_week.is_idle(now)\ntypical_week.add_busy_interval(now, now + timedelta(hours=3))\n# the date doens't really matter, only the day of the week does\nassert typical_week.is_busy(now)\nbusy_intervals = typical_week.get_busy_intervals(now, now + timedelta(hours=5))\n# The result is a list of intervals (start_time, end_time)\nidle_intervals = typical_week.get_idle_intervals(now, now + timedelta(hours=5))\n# The result is a list of intervals (start_time, end_time)\n```\n\nYou can also do union and intersection of different `WeeklyCalendar` objects:\n\n```python\nfrom weekly_calendar import WeeklyCalendar\n\ntw_60 = WeeklyCalendar(resolution_in_minutes=60)\ntw_30 = WeeklyCalendar(resolution_in_minutes=30)\n# resulting objects will have the lowest resolution\ntw_union = tw_30 + tw_60\ntw_intersection = tw_30 * tw_60\n```\nYou can change resolution of an existing `WeeklyCalendar` object:\n```python\nfrom weekly_calendar import WeeklyCalendar\n\ntw_60 = WeeklyCalendar(resolution_in_minutes=60)\ntw_60_to_30 = tw_60.copy(resolution_in_minutes=30)\n```\nYour `WeeklyCalendar` object is serializable:\n```python\nfrom weekly_calendar import WeeklyCalendar\n\ntw = WeeklyCalendar()\nstr_repr = tw.dumps()\ntw_loaded = WeeklyCalendar.loads(str_repr)\n# checks equal resolution, bitmap, and extra parameters\nassert tw == tw_loaded\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kardaj/weekly-calendar", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "weekly-calendar", "package_url": "https://pypi.org/project/weekly-calendar/", "platform": "", "project_url": "https://pypi.org/project/weekly-calendar/", "project_urls": {"Homepage": "https://github.com/kardaj/weekly-calendar"}, "release_url": "https://pypi.org/project/weekly-calendar/0.1.2/", "requires_dist": ["pytz", "tzlocal"], "requires_python": "", "summary": "A simple library to deal with weekly opening hours and other recurrent weekly events", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>WeeklyCalendar</h1>\n<p>A simple library to deal with weekly opening hours and other recurrent weekly events</p>\n<h2>Usage</h2>\n<p>Methods will either return a Boolean or datetime based intervals.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">weekly_calendar</span> <span class=\"kn\">import</span> <span class=\"n\">WeeklyCalendar</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span><span class=\"p\">,</span> <span class=\"n\">timedelta</span>\n\n<span class=\"n\">now</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span>\n<span class=\"n\">typical_week</span> <span class=\"o\">=</span> <span class=\"n\">WeeklyCalendar</span><span class=\"p\">(</span><span class=\"n\">resolution_in_minutes</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">)</span>\n<span class=\"c1\"># typical_week is mapped into a bitmap with a bit representing one hour</span>\n<span class=\"k\">assert</span> <span class=\"n\">typical_week</span><span class=\"o\">.</span><span class=\"n\">is_idle</span><span class=\"p\">(</span><span class=\"n\">now</span><span class=\"p\">)</span>\n<span class=\"n\">typical_week</span><span class=\"o\">.</span><span class=\"n\">add_busy_interval</span><span class=\"p\">(</span><span class=\"n\">now</span><span class=\"p\">,</span> <span class=\"n\">now</span> <span class=\"o\">+</span> <span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">hours</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"c1\"># the date doens't really matter, only the day of the week does</span>\n<span class=\"k\">assert</span> <span class=\"n\">typical_week</span><span class=\"o\">.</span><span class=\"n\">is_busy</span><span class=\"p\">(</span><span class=\"n\">now</span><span class=\"p\">)</span>\n<span class=\"n\">busy_intervals</span> <span class=\"o\">=</span> <span class=\"n\">typical_week</span><span class=\"o\">.</span><span class=\"n\">get_busy_intervals</span><span class=\"p\">(</span><span class=\"n\">now</span><span class=\"p\">,</span> <span class=\"n\">now</span> <span class=\"o\">+</span> <span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">hours</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">))</span>\n<span class=\"c1\"># The result is a list of intervals (start_time, end_time)</span>\n<span class=\"n\">idle_intervals</span> <span class=\"o\">=</span> <span class=\"n\">typical_week</span><span class=\"o\">.</span><span class=\"n\">get_idle_intervals</span><span class=\"p\">(</span><span class=\"n\">now</span><span class=\"p\">,</span> <span class=\"n\">now</span> <span class=\"o\">+</span> <span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">hours</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">))</span>\n<span class=\"c1\"># The result is a list of intervals (start_time, end_time)</span>\n</pre>\n<p>You can also do union and intersection of different <code>WeeklyCalendar</code> objects:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">weekly_calendar</span> <span class=\"kn\">import</span> <span class=\"n\">WeeklyCalendar</span>\n\n<span class=\"n\">tw_60</span> <span class=\"o\">=</span> <span class=\"n\">WeeklyCalendar</span><span class=\"p\">(</span><span class=\"n\">resolution_in_minutes</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">)</span>\n<span class=\"n\">tw_30</span> <span class=\"o\">=</span> <span class=\"n\">WeeklyCalendar</span><span class=\"p\">(</span><span class=\"n\">resolution_in_minutes</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">)</span>\n<span class=\"c1\"># resulting objects will have the lowest resolution</span>\n<span class=\"n\">tw_union</span> <span class=\"o\">=</span> <span class=\"n\">tw_30</span> <span class=\"o\">+</span> <span class=\"n\">tw_60</span>\n<span class=\"n\">tw_intersection</span> <span class=\"o\">=</span> <span class=\"n\">tw_30</span> <span class=\"o\">*</span> <span class=\"n\">tw_60</span>\n</pre>\n<p>You can change resolution of an existing <code>WeeklyCalendar</code> object:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">weekly_calendar</span> <span class=\"kn\">import</span> <span class=\"n\">WeeklyCalendar</span>\n\n<span class=\"n\">tw_60</span> <span class=\"o\">=</span> <span class=\"n\">WeeklyCalendar</span><span class=\"p\">(</span><span class=\"n\">resolution_in_minutes</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">)</span>\n<span class=\"n\">tw_60_to_30</span> <span class=\"o\">=</span> <span class=\"n\">tw_60</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"n\">resolution_in_minutes</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">)</span>\n</pre>\n<p>Your <code>WeeklyCalendar</code> object is serializable:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">weekly_calendar</span> <span class=\"kn\">import</span> <span class=\"n\">WeeklyCalendar</span>\n\n<span class=\"n\">tw</span> <span class=\"o\">=</span> <span class=\"n\">WeeklyCalendar</span><span class=\"p\">()</span>\n<span class=\"n\">str_repr</span> <span class=\"o\">=</span> <span class=\"n\">tw</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">()</span>\n<span class=\"n\">tw_loaded</span> <span class=\"o\">=</span> <span class=\"n\">WeeklyCalendar</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">str_repr</span><span class=\"p\">)</span>\n<span class=\"c1\"># checks equal resolution, bitmap, and extra parameters</span>\n<span class=\"k\">assert</span> <span class=\"n\">tw</span> <span class=\"o\">==</span> <span class=\"n\">tw_loaded</span>\n</pre>\n\n          </div>"}, "last_serial": 4367644, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "654f2765f78f6cea7879e8254cfb3e75", "sha256": "8669ebcd9f46b0cd7659bccf3ed65d21ee2a549871c3ad1ff6b7b380ea8838f3"}, "downloads": -1, "filename": "weekly_calendar-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "654f2765f78f6cea7879e8254cfb3e75", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4104, "upload_time": "2018-10-06T12:25:08", "upload_time_iso_8601": "2018-10-06T12:25:08.454384Z", "url": "https://files.pythonhosted.org/packages/05/e4/d4320649995a54a0e595aa7558221858fb6ee378a3765f00663bba0efea1/weekly_calendar-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "61a79e7cf80a60d3e9c2665a81b7a707", "sha256": "aa69fb3bd2d0ace494e68124a7efc1bd2e1c8e3e5366dda50b9cdbf93e2b9a63"}, "downloads": -1, "filename": "weekly-calendar-0.1.0.tar.gz", "has_sig": false, "md5_digest": "61a79e7cf80a60d3e9c2665a81b7a707", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3786, "upload_time": "2018-10-06T12:25:09", "upload_time_iso_8601": "2018-10-06T12:25:09.796670Z", "url": "https://files.pythonhosted.org/packages/2a/e9/a8ab32691dbb85b26975905fed5568a08f18d55d1489b27c013a57f56b71/weekly-calendar-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "99513f636603f04a5c613ef8645ce751", "sha256": "713f5a72fa6bb726ccc65e58d376981d4d9eab14b2c54c72c31d7f503078c31d"}, "downloads": -1, "filename": "weekly_calendar-0.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "99513f636603f04a5c613ef8645ce751", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4157, "upload_time": "2018-10-12T08:02:14", "upload_time_iso_8601": "2018-10-12T08:02:14.910648Z", "url": "https://files.pythonhosted.org/packages/56/02/f1565c6742cd3583c3b7f8e050be15101fc1429a69d8bbf131bb726a61b7/weekly_calendar-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d50e617a3b7a46e74fa6689592880d69", "sha256": "68cba81af9dd25c8dba1506d77aca9273db7fd12390618d4a9514391364cee2e"}, "downloads": -1, "filename": "weekly-calendar-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d50e617a3b7a46e74fa6689592880d69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3832, "upload_time": "2018-10-12T08:02:15", "upload_time_iso_8601": "2018-10-12T08:02:15.876371Z", "url": "https://files.pythonhosted.org/packages/76/5c/c8f0d0dd41b29fe21a4d2155790c449cc986d4e3acd48376adf42412f375/weekly-calendar-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "70525e3e2379a50a529326e60f16a324", "sha256": "1c55c99949b2af5559c5cd0573635182977efef89fa6fd479b979adcd914304e"}, "downloads": -1, "filename": "weekly_calendar-0.1.2-py2-none-any.whl", "has_sig": false, "md5_digest": "70525e3e2379a50a529326e60f16a324", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4985, "upload_time": "2018-10-12T08:16:00", "upload_time_iso_8601": "2018-10-12T08:16:00.013542Z", "url": "https://files.pythonhosted.org/packages/5a/29/cb5484f45ac2a65e410abc6fba920853fc37d3a52cc843ed8d5efe6d9cc0/weekly_calendar-0.1.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94cdce53ff5fdfa3cc26fd85932d30d3", "sha256": "828c0d5b73b467550cb36e357af61ca05d6c53315c290a7f4253b29a40918e9f"}, "downloads": -1, "filename": "weekly-calendar-0.1.2.tar.gz", "has_sig": false, "md5_digest": "94cdce53ff5fdfa3cc26fd85932d30d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3830, "upload_time": "2018-10-12T08:16:02", "upload_time_iso_8601": "2018-10-12T08:16:02.233218Z", "url": "https://files.pythonhosted.org/packages/ed/b7/57ccf71984e1045c9bc80d2a49b1fa4c9b3f34b706ebdc8cca09a9547408/weekly-calendar-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "70525e3e2379a50a529326e60f16a324", "sha256": "1c55c99949b2af5559c5cd0573635182977efef89fa6fd479b979adcd914304e"}, "downloads": -1, "filename": "weekly_calendar-0.1.2-py2-none-any.whl", "has_sig": false, "md5_digest": "70525e3e2379a50a529326e60f16a324", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4985, "upload_time": "2018-10-12T08:16:00", "upload_time_iso_8601": "2018-10-12T08:16:00.013542Z", "url": "https://files.pythonhosted.org/packages/5a/29/cb5484f45ac2a65e410abc6fba920853fc37d3a52cc843ed8d5efe6d9cc0/weekly_calendar-0.1.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94cdce53ff5fdfa3cc26fd85932d30d3", "sha256": "828c0d5b73b467550cb36e357af61ca05d6c53315c290a7f4253b29a40918e9f"}, "downloads": -1, "filename": "weekly-calendar-0.1.2.tar.gz", "has_sig": false, "md5_digest": "94cdce53ff5fdfa3cc26fd85932d30d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3830, "upload_time": "2018-10-12T08:16:02", "upload_time_iso_8601": "2018-10-12T08:16:02.233218Z", "url": "https://files.pythonhosted.org/packages/ed/b7/57ccf71984e1045c9bc80d2a49b1fa4c9b3f34b706ebdc8cca09a9547408/weekly-calendar-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:30:26 2020"}