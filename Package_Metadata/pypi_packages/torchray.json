{"info": {"author": "Andrea Vedaldi", "author_email": "vedaldi@fb.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Software Development", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# TorchRay\n\nThe *TorchRay* package implements several visualization methods for deep\nconvolutional neural networks using PyTorch. In this release, TorchRay focuses\non *attribution*, namely the problem of determining which part of the input,\nusually an image, is responsible for the value computed by a neural network.\n\n*TorchRay* is research oriented: in addition to implementing well known\ntechniques form the literature, it provides code for reproducing results that\nappear in several papers, in order to support *reproducible research*.\n\n*TorchRay* was initially developed to support the paper:\n\n* *Understanding deep networks via extremal perturbations and smooth masks.*\n  Fong, Patrick, Vedaldi.\n  Proceedings of the International Conference on Computer Vision (ICCV), 2019.\n\n## Examples\n\nThe package contains several usage examples in the\n[`examples`](https://github.com/facebookresearch/TorchRay/tree/master/examples)\nsubdirectory.\n\nHere is a complete example for using GradCAM:\n\n```python\nfrom torchray.attribution.grad_cam import grad_cam\nfrom torchray.benchmark import get_example_data, plot_example\n\n# Obtain example data.\nmodel, x, category_id, _ = get_example_data()\n\n# Grad-CAM backprop.\nsaliency = grad_cam(model, x, category_id, saliency_layer='features.29')\n\n# Plots.\nplot_example(x, saliency, 'grad-cam backprop', category_id)\n```\n\n## Requirements\n\nTorchRay requires:\n\n* Python 3.6 or greater\n* pytorch 1.1.0 or greater\n* matplotlib\n\nFor benchmarking, it also requires:\n\n* torchvision 0.3.0 or greater\n* pycocotools\n* mongodb (suggested)\n* pymongod (suggested)\n\nOn Linux/macOS, using conda you can install\n\n```bash\nwhile read requirement; do conda install \\\n-c defaults -c pytorch -c conda-forge --yes $requirement; done <<EOF\npytorch>=1.1.0\npycocotools\ntorchvision>=0.3.0\nmongodb\npymongo\nEOF\n```\n\n## Installing TorchRay\n\nUsing `pip`:\n\n```shell\npip install torchray\n```\n\nFrom source:\n\n```shell\npython setup.py install\n```\n\nor\n\n```shell\npip install .\n```\n\n## Full documentation\n\nThe full documentation can be found\n[here](https://facebookresearch.github.io/TorchRay).\n\n## Changes\n\nSee the [CHANGELOG](CHANGELOG.md).\n\n## Join the TorchRay community\n\n* Website: https://github.com/facebookresearch/TorchRay\n\nSee the [CONTRIBUTING](CONTRIBUTING.md) file for how to help out.\n\n## The team\n\nTorchRay has been primarily developed by Ruth C. Fong and Andrea Vedaldi.\n\n## License\n\nTorchRay is CC-BY-NC licensed, as found in the [LICENSE](LICENSE) file.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/ruthcfong/TorchRay/archive/v1.0.0.2.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/facebookresearch/TorchRay", "keywords": "", "license": "Creative Commons Attribution-Noncommercial 4.0 International", "maintainer": "", "maintainer_email": "", "name": "torchray", "package_url": "https://pypi.org/project/torchray/", "platform": "", "project_url": "https://pypi.org/project/torchray/", "project_urls": {"Download": "https://github.com/ruthcfong/TorchRay/archive/v1.0.0.2.tar.gz", "Homepage": "https://github.com/facebookresearch/TorchRay"}, "release_url": "https://pypi.org/project/torchray/1.0.0.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "TorchRay is a PyTorch library of visualization methods for convnets.", "version": "1.0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>TorchRay</h1>\n<p>The <em>TorchRay</em> package implements several visualization methods for deep\nconvolutional neural networks using PyTorch. In this release, TorchRay focuses\non <em>attribution</em>, namely the problem of determining which part of the input,\nusually an image, is responsible for the value computed by a neural network.</p>\n<p><em>TorchRay</em> is research oriented: in addition to implementing well known\ntechniques form the literature, it provides code for reproducing results that\nappear in several papers, in order to support <em>reproducible research</em>.</p>\n<p><em>TorchRay</em> was initially developed to support the paper:</p>\n<ul>\n<li><em>Understanding deep networks via extremal perturbations and smooth masks.</em>\nFong, Patrick, Vedaldi.\nProceedings of the International Conference on Computer Vision (ICCV), 2019.</li>\n</ul>\n<h2>Examples</h2>\n<p>The package contains several usage examples in the\n<a href=\"https://github.com/facebookresearch/TorchRay/tree/master/examples\" rel=\"nofollow\"><code>examples</code></a>\nsubdirectory.</p>\n<p>Here is a complete example for using GradCAM:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">torchray.attribution.grad_cam</span> <span class=\"kn\">import</span> <span class=\"n\">grad_cam</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torchray.benchmark</span> <span class=\"kn\">import</span> <span class=\"n\">get_example_data</span><span class=\"p\">,</span> <span class=\"n\">plot_example</span>\n\n<span class=\"c1\"># Obtain example data.</span>\n<span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">category_id</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">get_example_data</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Grad-CAM backprop.</span>\n<span class=\"n\">saliency</span> <span class=\"o\">=</span> <span class=\"n\">grad_cam</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">category_id</span><span class=\"p\">,</span> <span class=\"n\">saliency_layer</span><span class=\"o\">=</span><span class=\"s1\">'features.29'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Plots.</span>\n<span class=\"n\">plot_example</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">saliency</span><span class=\"p\">,</span> <span class=\"s1\">'grad-cam backprop'</span><span class=\"p\">,</span> <span class=\"n\">category_id</span><span class=\"p\">)</span>\n</pre>\n<h2>Requirements</h2>\n<p>TorchRay requires:</p>\n<ul>\n<li>Python 3.6 or greater</li>\n<li>pytorch 1.1.0 or greater</li>\n<li>matplotlib</li>\n</ul>\n<p>For benchmarking, it also requires:</p>\n<ul>\n<li>torchvision 0.3.0 or greater</li>\n<li>pycocotools</li>\n<li>mongodb (suggested)</li>\n<li>pymongod (suggested)</li>\n</ul>\n<p>On Linux/macOS, using conda you can install</p>\n<pre><span class=\"k\">while</span> <span class=\"nb\">read</span> requirement<span class=\"p\">;</span> <span class=\"k\">do</span> conda install <span class=\"se\">\\</span>\n-c defaults -c pytorch -c conda-forge --yes <span class=\"nv\">$requirement</span><span class=\"p\">;</span> <span class=\"k\">done</span> <span class=\"s\">&lt;&lt;EOF</span>\n<span class=\"s\">pytorch&gt;=1.1.0</span>\n<span class=\"s\">pycocotools</span>\n<span class=\"s\">torchvision&gt;=0.3.0</span>\n<span class=\"s\">mongodb</span>\n<span class=\"s\">pymongo</span>\n<span class=\"s\">EOF</span>\n</pre>\n<h2>Installing TorchRay</h2>\n<p>Using <code>pip</code>:</p>\n<pre>pip install torchray\n</pre>\n<p>From source:</p>\n<pre>python setup.py install\n</pre>\n<p>or</p>\n<pre>pip install .\n</pre>\n<h2>Full documentation</h2>\n<p>The full documentation can be found\n<a href=\"https://facebookresearch.github.io/TorchRay\" rel=\"nofollow\">here</a>.</p>\n<h2>Changes</h2>\n<p>See the <a href=\"CHANGELOG.md\" rel=\"nofollow\">CHANGELOG</a>.</p>\n<h2>Join the TorchRay community</h2>\n<ul>\n<li>Website: <a href=\"https://github.com/facebookresearch/TorchRay\" rel=\"nofollow\">https://github.com/facebookresearch/TorchRay</a></li>\n</ul>\n<p>See the <a href=\"CONTRIBUTING.md\" rel=\"nofollow\">CONTRIBUTING</a> file for how to help out.</p>\n<h2>The team</h2>\n<p>TorchRay has been primarily developed by Ruth C. Fong and Andrea Vedaldi.</p>\n<h2>License</h2>\n<p>TorchRay is CC-BY-NC licensed, as found in the <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> file.</p>\n\n          </div>"}, "last_serial": 6096155, "releases": {"1.0.0.1": [{"comment_text": "", "digests": {"md5": "07783e16fe4a08f58234e49a2e197917", "sha256": "e8aab43d512a6ceb19010d9c601db140019515d1a7e5339c83772008f0ef9801"}, "downloads": -1, "filename": "torchray-1.0.0.1.tar.gz", "has_sig": false, "md5_digest": "07783e16fe4a08f58234e49a2e197917", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 377194, "upload_time": "2019-10-28T09:12:03", "upload_time_iso_8601": "2019-10-28T09:12:03.901708Z", "url": "https://files.pythonhosted.org/packages/8c/d9/e95a395017db657dbf53e5923f88eb089b6ccc8186cc60567a4f867e6c22/torchray-1.0.0.1.tar.gz", "yanked": false}], "1.0.0.2": [{"comment_text": "", "digests": {"md5": "8f2872d149778fa877703dd2e0df736f", "sha256": "9bc9ae99c8d0587a9ddf99c17a330585660c59a6fd131b9354c40355955f27d6"}, "downloads": -1, "filename": "torchray-1.0.0.2.tar.gz", "has_sig": false, "md5_digest": "8f2872d149778fa877703dd2e0df736f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 376152, "upload_time": "2019-11-07T22:17:50", "upload_time_iso_8601": "2019-11-07T22:17:50.370781Z", "url": "https://files.pythonhosted.org/packages/6b/3e/339cd7a0866b0ec501f7507b89d293e1515d4b1e308eeaed0fd75e7d2614/torchray-1.0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8f2872d149778fa877703dd2e0df736f", "sha256": "9bc9ae99c8d0587a9ddf99c17a330585660c59a6fd131b9354c40355955f27d6"}, "downloads": -1, "filename": "torchray-1.0.0.2.tar.gz", "has_sig": false, "md5_digest": "8f2872d149778fa877703dd2e0df736f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 376152, "upload_time": "2019-11-07T22:17:50", "upload_time_iso_8601": "2019-11-07T22:17:50.370781Z", "url": "https://files.pythonhosted.org/packages/6b/3e/339cd7a0866b0ec501f7507b89d293e1515d4b1e308eeaed0fd75e7d2614/torchray-1.0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:50:13 2020"}