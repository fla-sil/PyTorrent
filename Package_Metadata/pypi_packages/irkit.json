{"info": {"author": "OGURA_Daiki", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "# IRKit api interface for python\n\n## What is IRKit?\n\nThat is kind of a learning remote control system which has HTTP API interface.\n\nDetails is http://getirkit.com/\n\n\n## install\n\n```bash\n$ pip install irkit\n```\n\n\n## Command Usage\n\n```\nusage: irkit [-h] {local,internet} ...\n\nIRKit CLI Client for Python. v0.0.1 See also http://getirkit.com/#IRKit-\nDevice-API\n\npositional arguments:\n  {local,internet}  sub-command help\n    local           api for locals.\n    internet        api for internets.\n\noptional arguments:\n  -h, --help        show this help message and exit\n\n```\n\nLocal API:\n\n```\nusage: irkit local [-h] [--host] [-k] [-r] [--save signal-name] [-l]\n                   [-s signal-info] [-v]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --host                show irkit host\n  -k, --keys            get a client token.\n  -r, --retrieve        retrieve a signal\n  --save signal-name    you should appoint a name. save retrieved signal to\n                        ~/.config/irkit-py/signal.json with name\n  -l, --list            list of stored signals\n  -s signal-info, --send signal-info\n                        send a signal. that excepted as json response or\n                        raw_data or key name of store\n  -v, --verbose         put verbose logs\n```\n\nInternet API:\n\n```\nusage: irkit internet [-h] [-r] [-s signal-info] [--save signal-name]\n                      [-c CLIENT_KEY] [-d DEVICE_ID] [-v]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -r, --retrieve        retrieve a signal\n  -s signal-info, --send signal-info\n                        send a signal. that excepted as json response or\n                        raw_data or key name of store\n  --save signal-name    you should appoint a name. save retrieved signal to\n                        ~/.config/irkit-py/signal.json with name\n  -c CLIENT_KEY, --client-key CLIENT_KEY\n                        client key\n  -d DEVICE_ID, --device-id DEVICE_ID\n                        device id\n  -v, --verbose         put verbose logs\n```\n\n\n### Example\n\ncopy and paste style\n\n```bash\n## you must send signal to IRKit before\n$ irkit local --retrieve\n{\"freq\": 38, \"data\": [... ...], \"format\": \"raw\"}\n\n## copy and paste the json\n$ irkit local --send '{\"freq\": 38, \"data\": [... ...], \"format\": \"raw\"}'\n```\n\nstore with key\n\n```bash\n$ irkit local --retrieve --save toggle-room-light\n{\"freq\": 38, \"data\": [... ...], \"format\": \"raw\"}\n\n$ cat ~/.config/irkit-py/signal.json\n{\"freq\": 38, \"data\": [... ...], \"format\": \"raw\"}\n\n$ irkit local --send movie-room-toggle\n```\n\n\n#### Internet API\n\nThen you want to send internet API, you need to appoint device_id or client_key or both.\n\n```bash\n## retrieve needs client key\n$ irkit internet --retrieve --client-key YOUR_CLIENT_KEY\n\n## send needs client key and device id\n$ irkit internet --send '{\"freq\": 38, \"data\": [... ...], \"format\": \"raw\"}' \\\n  -c 0A9B3FFB240444A2BA70A9835BFE4F89 \\\n  --device-id 6B08F5EA443E4983864908B4AFF897AA\n```\n\nThis tool haven't follow client-key and device-key smart integration (it can only get {*see --key option*}).\nIt'll be implemented next version (and I welcome to your contlibute!).\n\n\n## as Library\n\nYou can also use as api.\nDocument is now writing... but `main.py` will help you to understand API interfaces.\n\n\n## Support Versions\n\n- 2.7\n\n- 3.6 (might unstable)\n\n\n## Bug report or request or something\n\nGitHub issue is opend ;)\n\nhttps://github.com/hachibeeDI/IRKit/issues\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hachibeeDI/IRKit", "keywords": "irkit", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "irkit", "package_url": "https://pypi.org/project/irkit/", "platform": "", "project_url": "https://pypi.org/project/irkit/", "project_urls": {"Homepage": "https://github.com/hachibeeDI/IRKit"}, "release_url": "https://pypi.org/project/irkit/0.0.5/", "requires_dist": null, "requires_python": "", "summary": "Command line toolkit IRKIt HTTP api", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            # IRKit api interface for python<br><br>## What is IRKit?<br><br>That is kind of a learning remote control system which has HTTP API interface.<br><br>Details is http://getirkit.com/<br><br><br>## install<br><br>```bash<br>$ pip install irkit<br>```<br><br><br>## Command Usage<br><br>```<br>usage: irkit [-h] {local,internet} ...<br><br>IRKit CLI Client for Python. v0.0.1 See also http://getirkit.com/#IRKit-<br>Device-API<br><br>positional arguments:<br>  {local,internet}  sub-command help<br>    local           api for locals.<br>    internet        api for internets.<br><br>optional arguments:<br>  -h, --help        show this help message and exit<br><br>```<br><br>Local API:<br><br>```<br>usage: irkit local [-h] [--host] [-k] [-r] [--save signal-name] [-l]<br>                   [-s signal-info] [-v]<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  --host                show irkit host<br>  -k, --keys            get a client token.<br>  -r, --retrieve        retrieve a signal<br>  --save signal-name    you should appoint a name. save retrieved signal to<br>                        ~/.config/irkit-py/signal.json with name<br>  -l, --list            list of stored signals<br>  -s signal-info, --send signal-info<br>                        send a signal. that excepted as json response or<br>                        raw_data or key name of store<br>  -v, --verbose         put verbose logs<br>```<br><br>Internet API:<br><br>```<br>usage: irkit internet [-h] [-r] [-s signal-info] [--save signal-name]<br>                      [-c CLIENT_KEY] [-d DEVICE_ID] [-v]<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  -r, --retrieve        retrieve a signal<br>  -s signal-info, --send signal-info<br>                        send a signal. that excepted as json response or<br>                        raw_data or key name of store<br>  --save signal-name    you should appoint a name. save retrieved signal to<br>                        ~/.config/irkit-py/signal.json with name<br>  -c CLIENT_KEY, --client-key CLIENT_KEY<br>                        client key<br>  -d DEVICE_ID, --device-id DEVICE_ID<br>                        device id<br>  -v, --verbose         put verbose logs<br>```<br><br><br>### Example<br><br>copy and paste style<br><br>```bash<br>## you must send signal to IRKit before<br>$ irkit local --retrieve<br>{\"freq\": 38, \"data\": [... ...], \"format\": \"raw\"}<br><br>## copy and paste the json<br>$ irkit local --send '{\"freq\": 38, \"data\": [... ...], \"format\": \"raw\"}'<br>```<br><br>store with key<br><br>```bash<br>$ irkit local --retrieve --save toggle-room-light<br>{\"freq\": 38, \"data\": [... ...], \"format\": \"raw\"}<br><br>$ cat ~/.config/irkit-py/signal.json<br>{\"freq\": 38, \"data\": [... ...], \"format\": \"raw\"}<br><br>$ irkit local --send movie-room-toggle<br>```<br><br><br>#### Internet API<br><br>Then you want to send internet API, you need to appoint device_id or client_key or both.<br><br>```bash<br>## retrieve needs client key<br>$ irkit internet --retrieve --client-key YOUR_CLIENT_KEY<br><br>## send needs client key and device id<br>$ irkit internet --send '{\"freq\": 38, \"data\": [... ...], \"format\": \"raw\"}' \\<br>  -c 0A9B3FFB240444A2BA70A9835BFE4F89 \\<br>  --device-id 6B08F5EA443E4983864908B4AFF897AA<br>```<br><br>This tool haven't follow client-key and device-key smart integration (it can only get {*see --key option*}).<br>It'll be implemented next version (and I welcome to your contlibute!).<br><br><br>## as Library<br><br>You can also use as api.<br>Document is now writing... but `main.py` will help you to understand API interfaces.<br><br><br>## Support Versions<br><br>- 2.7<br><br>- 3.6 (might unstable)<br><br><br>## Bug report or request or something<br><br>GitHub issue is opend ;)<br><br>https://github.com/hachibeeDI/IRKit/issues<br>\n          </div>"}, "last_serial": 2557956, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "0728934516d709194c8f2b4693195f1b", "sha256": "85a72e4277c1e6d8e7ecff405844032b4f34cda1f01791c034e0f6359ee36984"}, "downloads": -1, "filename": "irkit-0.0.3.tar.gz", "has_sig": false, "md5_digest": "0728934516d709194c8f2b4693195f1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21446, "upload_time": "2016-07-28T14:31:15", "upload_time_iso_8601": "2016-07-28T14:31:15.588955Z", "url": "https://files.pythonhosted.org/packages/b4/79/100060bc432e0f2b3a5e2b5fb0999c9cb894dd8ea0a51acab543da8d58bb/irkit-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "5243afb612be5b98c632814fc2406d8e", "sha256": "31bd9317ea560ec7e2f78f7d7629a2d57d20214ad6ece9a6b390779499a8df55"}, "downloads": -1, "filename": "irkit-0.0.4.tar.gz", "has_sig": false, "md5_digest": "5243afb612be5b98c632814fc2406d8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22255, "upload_time": "2016-08-06T03:30:29", "upload_time_iso_8601": "2016-08-06T03:30:29.331348Z", "url": "https://files.pythonhosted.org/packages/04/99/11ce526d34dae85cf493ff4d09367a58cafe90e2ca52f93f1077761f660b/irkit-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "ba45b815e686e20cf7f6472992d197dc", "sha256": "4b9aa29117c835dc445a37a4671b6aab9e432210fe9c24a6a2e18890f7eebdd1"}, "downloads": -1, "filename": "irkit-0.0.5.tar.gz", "has_sig": false, "md5_digest": "ba45b815e686e20cf7f6472992d197dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22839, "upload_time": "2017-01-06T15:50:23", "upload_time_iso_8601": "2017-01-06T15:50:23.511854Z", "url": "https://files.pythonhosted.org/packages/32/1a/e5a1bf47c143a8eb981608a651a4b4eaeff85b777c177405480a9e1535e3/irkit-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ba45b815e686e20cf7f6472992d197dc", "sha256": "4b9aa29117c835dc445a37a4671b6aab9e432210fe9c24a6a2e18890f7eebdd1"}, "downloads": -1, "filename": "irkit-0.0.5.tar.gz", "has_sig": false, "md5_digest": "ba45b815e686e20cf7f6472992d197dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22839, "upload_time": "2017-01-06T15:50:23", "upload_time_iso_8601": "2017-01-06T15:50:23.511854Z", "url": "https://files.pythonhosted.org/packages/32/1a/e5a1bf47c143a8eb981608a651a4b4eaeff85b777c177405480a9e1535e3/irkit-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:16 2020"}