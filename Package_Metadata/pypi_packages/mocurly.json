{"info": {"author": "Yoriyasu Yano", "author_email": "yoriy@captricity.com", "bugtrack_url": null, "classifiers": [], "description": "mocurly\n=======\n\n|Build Status| |Coverage Status| |Documentation Status|\n\nMocurly is a library that mocks the recurly python client so that you\ncan easily write tests for applications that use the recurly python\nclient.\n\nFull documentation is available at\n`readthedocs <http://mocurly.readthedocs.org/en/latest/>`__.\n\nOverview\n========\n\nMocurly acts as a mock backend for the recurly client, allowing you to\nuse the recurly python client AS IS. This means that all your code that\nuses the recurly python client and targets recurly objects will all work\nas you would expect. Best of all: you can use the recurly python client\nto setup the test environment!\n\nFor example, suppose you had a simple function in your app that lists\nall the users in recurly, and counts them:\n\n.. code:: python\n\n    import recurly\n    recurly.API_KEY = 'foo'\n    recurly.SUBDOMAIN = 'bar'\n\n    def count_recurly_accounts():\n        return len(recurly.Account.all())\n\nWith mocurly, you can test the above code like so:\n\n.. code:: python\n\n    import recurly\n    recurly.API_KEY = 'foo'\n    recurly.SUBDOMAIN = 'bar'\n    from mocurly import mocurly\n    from count_module import count_recurly_accounts\n\n    @mocurly\n    def test_count_recurly_accounts():\n        for i in range(10):\n            recurly.Account(account_code=str(i)).save()\n        assert count_recurly_accounts() == 10\n\nWithin the decorator context, all calls to recurly are captured by\nmocurly, which keeps the state in memory for the duration of the\ncontext. No actual web calls are made, allowing you to test your recurly\ncode without worrying about existing context or internet connections.\n\nUsage\n=====\n\nYou can use mocurly as a decorator, context manager, or manually.\n\nDecorator\n---------\n\n.. code:: python\n\n    @mocurly\n    def test_count_recurly_accounts():\n        for i in range(10):\n            recurly.Account(account_code=str(i)).save()\n        assert count_recurly_accounts() == 10\n\nContext Manager\n---------------\n\n.. code:: python\n\n    def test_count_recurly_accounts():\n        with mocurly():\n            for i in range(10):\n                recurly.Account(account_code=str(i)).save()\n            assert count_recurly_accounts() == 10\n\nManual\n------\n\n.. code:: python\n\n    def test_count_recurly_accounts():\n        mocurly_ = mocurly()\n        mocurly_.start()\n\n        for i in range(10):\n            recurly.Account(account_code=str(i)).save()\n        assert count_recurly_accounts() == 10\n\n        mocurly_.stop()\n\nInstall\n=======\n\n.. code:: shell\n\n    $ pip install mocurly\n\n.. |Build Status| image:: https://travis-ci.org/Captricity/mocurly.svg?branch=master\n   :target: https://travis-ci.org/Captricity/mocurly\n.. |Coverage Status| image:: https://coveralls.io/repos/Captricity/mocurly/badge.png?branch=master\n   :target: https://coveralls.io/r/Captricity/mocurly?branch=master\n.. |Documentation Status| image:: https://readthedocs.org/projects/mocurly/badge/?version=latest\n   :target: https://readthedocs.org/projects/mocurly/?badge=latest", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/Captricity/mocurly/tarball/v0.2.3", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Captricity/mocurly", "keywords": "testing", "license": "", "maintainer": "", "maintainer_email": "", "name": "mocurly", "package_url": "https://pypi.org/project/mocurly/", "platform": "", "project_url": "https://pypi.org/project/mocurly/", "project_urls": {"Download": "https://github.com/Captricity/mocurly/tarball/v0.2.3", "Homepage": "https://github.com/Captricity/mocurly"}, "release_url": "https://pypi.org/project/mocurly/0.2.3/", "requires_dist": null, "requires_python": "", "summary": "A library that allows your python tests to easily mock out the recurly library", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"mocurly\">\n<h2>mocurly</h2>\n<p><a href=\"https://travis-ci.org/Captricity/mocurly\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f638d96a989c13c96aa13349736901c541b9913e/68747470733a2f2f7472617669732d63692e6f72672f436170747269636974792f6d6f6375726c792e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/r/Captricity/mocurly?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/063b40f8334aa62b64bdfe38515d3b1d0ffd7729/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f436170747269636974792f6d6f6375726c792f62616467652e706e673f6272616e63683d6d6173746572\"></a> <a href=\"https://readthedocs.org/projects/mocurly/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/92d0166ea3d59cc8ef578d7b6b33ab8c3c4257b0/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6d6f6375726c792f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<p>Mocurly is a library that mocks the recurly python client so that you\ncan easily write tests for applications that use the recurly python\nclient.</p>\n<p>Full documentation is available at\n<a href=\"http://mocurly.readthedocs.org/en/latest/\" rel=\"nofollow\">readthedocs</a>.</p>\n</div>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>Mocurly acts as a mock backend for the recurly client, allowing you to\nuse the recurly python client AS IS. This means that all your code that\nuses the recurly python client and targets recurly objects will all work\nas you would expect. Best of all: you can use the recurly python client\nto setup the test environment!</p>\n<p>For example, suppose you had a simple function in your app that lists\nall the users in recurly, and counts them:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">recurly</span>\n<span class=\"n\">recurly</span><span class=\"o\">.</span><span class=\"n\">API_KEY</span> <span class=\"o\">=</span> <span class=\"s1\">'foo'</span>\n<span class=\"n\">recurly</span><span class=\"o\">.</span><span class=\"n\">SUBDOMAIN</span> <span class=\"o\">=</span> <span class=\"s1\">'bar'</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">count_recurly_accounts</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">recurly</span><span class=\"o\">.</span><span class=\"n\">Account</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">())</span>\n</pre>\n<p>With mocurly, you can test the above code like so:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">recurly</span>\n<span class=\"n\">recurly</span><span class=\"o\">.</span><span class=\"n\">API_KEY</span> <span class=\"o\">=</span> <span class=\"s1\">'foo'</span>\n<span class=\"n\">recurly</span><span class=\"o\">.</span><span class=\"n\">SUBDOMAIN</span> <span class=\"o\">=</span> <span class=\"s1\">'bar'</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mocurly</span> <span class=\"kn\">import</span> <span class=\"n\">mocurly</span>\n<span class=\"kn\">from</span> <span class=\"nn\">count_module</span> <span class=\"kn\">import</span> <span class=\"n\">count_recurly_accounts</span>\n\n<span class=\"nd\">@mocurly</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_count_recurly_accounts</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n        <span class=\"n\">recurly</span><span class=\"o\">.</span><span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"n\">account_code</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n    <span class=\"k\">assert</span> <span class=\"n\">count_recurly_accounts</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">10</span>\n</pre>\n<p>Within the decorator context, all calls to recurly are captured by\nmocurly, which keeps the state in memory for the duration of the\ncontext. No actual web calls are made, allowing you to test your recurly\ncode without worrying about existing context or internet connections.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>You can use mocurly as a decorator, context manager, or manually.</p>\n<div id=\"decorator\">\n<h3>Decorator</h3>\n<pre><span class=\"nd\">@mocurly</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_count_recurly_accounts</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n        <span class=\"n\">recurly</span><span class=\"o\">.</span><span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"n\">account_code</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n    <span class=\"k\">assert</span> <span class=\"n\">count_recurly_accounts</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">10</span>\n</pre>\n</div>\n<div id=\"context-manager\">\n<h3>Context Manager</h3>\n<pre><span class=\"k\">def</span> <span class=\"nf\">test_count_recurly_accounts</span><span class=\"p\">():</span>\n    <span class=\"k\">with</span> <span class=\"n\">mocurly</span><span class=\"p\">():</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n            <span class=\"n\">recurly</span><span class=\"o\">.</span><span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"n\">account_code</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n        <span class=\"k\">assert</span> <span class=\"n\">count_recurly_accounts</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">10</span>\n</pre>\n</div>\n<div id=\"manual\">\n<h3>Manual</h3>\n<pre><span class=\"k\">def</span> <span class=\"nf\">test_count_recurly_accounts</span><span class=\"p\">():</span>\n    <span class=\"n\">mocurly_</span> <span class=\"o\">=</span> <span class=\"n\">mocurly</span><span class=\"p\">()</span>\n    <span class=\"n\">mocurly_</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n        <span class=\"n\">recurly</span><span class=\"o\">.</span><span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"n\">account_code</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n    <span class=\"k\">assert</span> <span class=\"n\">count_recurly_accounts</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">10</span>\n\n    <span class=\"n\">mocurly_</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>$ pip install mocurly\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3851334, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "1b46cad642d5f22ee7ed754b91f37c64", "sha256": "9e24e28e3526f07abdf909922fb075c71dd944b3fb4f0ba6d715026558ac8886"}, "downloads": -1, "filename": "mocurly-0.1.tar.gz", "has_sig": false, "md5_digest": "1b46cad642d5f22ee7ed754b91f37c64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14861, "upload_time": "2014-09-04T08:02:07", "upload_time_iso_8601": "2014-09-04T08:02:07.697051Z", "url": "https://files.pythonhosted.org/packages/37/98/1b9484f41d0bbd982ed506a28c81d33c1e210a9eccca08021d118551ef38/mocurly-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "d8299d7cbb0a4b57c6408303a68dd7e7", "sha256": "a9915fe292223d1b3ec3a4fc048f4ce2dfccd4924ac183af399b25f385027169"}, "downloads": -1, "filename": "mocurly-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d8299d7cbb0a4b57c6408303a68dd7e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17667, "upload_time": "2014-09-20T10:03:59", "upload_time_iso_8601": "2014-09-20T10:03:59.453011Z", "url": "https://files.pythonhosted.org/packages/de/d6/11cc3bc6ddb2a486931aa8adeb321ae484176597a3be8447d5e79542b1c9/mocurly-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "41612ce30af3afc8a89899d4a3e5c260", "sha256": "f4cc505b8bcc59b9b4f47948b311993eedf3cb471daec695f26f2e3b73618b77"}, "downloads": -1, "filename": "mocurly-0.1.2.tar.gz", "has_sig": false, "md5_digest": "41612ce30af3afc8a89899d4a3e5c260", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17799, "upload_time": "2014-09-23T21:42:48", "upload_time_iso_8601": "2014-09-23T21:42:48.813782Z", "url": "https://files.pythonhosted.org/packages/54/ff/536b3b4af30301c573f8210ee4ac3f582c94a11467c7472f3143a05d0797/mocurly-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "d1c32a154d08a8d78345d68abafe4e86", "sha256": "e6813f39db8149c40395a3bc71fb788c69d68557c22dd4ca5c716b4b7ecb160d"}, "downloads": -1, "filename": "mocurly-0.1.3.tar.gz", "has_sig": false, "md5_digest": "d1c32a154d08a8d78345d68abafe4e86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17855, "upload_time": "2014-10-01T03:21:19", "upload_time_iso_8601": "2014-10-01T03:21:19.993058Z", "url": "https://files.pythonhosted.org/packages/e6/3c/3184b4c873022db0e24723dd20d5b6a4bae8d1b986a004af2f9fe73bcd02/mocurly-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "f3d628fcc3083a4729ae1cdcbc6ee9bc", "sha256": "e22d6c49c0794d1157b9b51458a0fb7ea8a960f697b1e30d21e891e34c5d1d9d"}, "downloads": -1, "filename": "mocurly-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f3d628fcc3083a4729ae1cdcbc6ee9bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19198, "upload_time": "2015-06-09T01:42:44", "upload_time_iso_8601": "2015-06-09T01:42:44.012502Z", "url": "https://files.pythonhosted.org/packages/bb/cc/06d6a57b725db7a3bb5fbca52b2fd5ed62a3f72f3966ffa5cd2384a26c55/mocurly-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "d9de0e820ea2d24accebf86092e341b5", "sha256": "6ebc9558b0e2b964c1c294f0e880a3a8b96b13786e3fab9e7d06d878a7e1607d"}, "downloads": -1, "filename": "mocurly-0.2.1.tar.gz", "has_sig": false, "md5_digest": "d9de0e820ea2d24accebf86092e341b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19285, "upload_time": "2015-10-29T18:47:10", "upload_time_iso_8601": "2015-10-29T18:47:10.810317Z", "url": "https://files.pythonhosted.org/packages/cc/06/9c432b245f7b4666e6aecf6337c705d182ccb4c127671ba6777a79d02777/mocurly-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "cef48409c9d954386d7eff428b5f9929", "sha256": "b0dcad0c4e300c275cd98b15d7729127f290c18688bf79cd176e735cb730c864"}, "downloads": -1, "filename": "mocurly-0.2.2.tar.gz", "has_sig": false, "md5_digest": "cef48409c9d954386d7eff428b5f9929", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20232, "upload_time": "2015-12-01T17:19:49", "upload_time_iso_8601": "2015-12-01T17:19:49.753694Z", "url": "https://files.pythonhosted.org/packages/8d/d0/d0549f6aa2fc429afc047f700cafcd6a372af292d2130122999b4afb2551/mocurly-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "0785a21d9775749ac16dc4f9b78d0be2", "sha256": "a90687e4d983193495d4766f205827bcca974cafd3e0c7786eed329b515df955"}, "downloads": -1, "filename": "mocurly-0.2.3.tar.gz", "has_sig": false, "md5_digest": "0785a21d9775749ac16dc4f9b78d0be2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20024, "upload_time": "2018-05-10T18:11:52", "upload_time_iso_8601": "2018-05-10T18:11:52.089212Z", "url": "https://files.pythonhosted.org/packages/f5/21/6983d37bdc9698b370523521364ba2125f24124ff97070a8fbee00f8f8db/mocurly-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0785a21d9775749ac16dc4f9b78d0be2", "sha256": "a90687e4d983193495d4766f205827bcca974cafd3e0c7786eed329b515df955"}, "downloads": -1, "filename": "mocurly-0.2.3.tar.gz", "has_sig": false, "md5_digest": "0785a21d9775749ac16dc4f9b78d0be2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20024, "upload_time": "2018-05-10T18:11:52", "upload_time_iso_8601": "2018-05-10T18:11:52.089212Z", "url": "https://files.pythonhosted.org/packages/f5/21/6983d37bdc9698b370523521364ba2125f24124ff97070a8fbee00f8f8db/mocurly-0.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:59 2020"}