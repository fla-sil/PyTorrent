{"info": {"author": "Liam Buchanan", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# Supervisor Event Listeners\r\nA small collection of supervisor event listeners that weren't available in the awesome [superlance](https://github.com/Supervisor/superlance).\r\n\r\n## fseventwatcher\r\n```shell\r\n$ fseventwatcher --help\r\nusage: fseventwatcher [-h] [-p [PROGRAM [PROGRAM ...]]] [-a] -f PATH\r\n                      [PATH ...] [-r]\r\n                      [--watched-events [{moved,created,deleted,modified} [{moved,created,deleted,modified} ...]]]\r\n                      [--dither DITHER_MAX]\r\n\r\nSupervisor TICK event listener which restarts processes if file system changes\r\noccur between ticks.\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -p [PROGRAM [PROGRAM ...]], --programs [PROGRAM [PROGRAM ...]]\r\n                        Supervisor process name/s to be restarted if in\r\n                        RUNNING state.\r\n  -a, --any-program     Restart any supervisor processes in RUNNING state.\r\n  -f PATH [PATH ...], --paths PATH [PATH ...]\r\n                        Path to watch for file system events.\r\n  -r, --recursive       Watch path/s recursively.\r\n  --watched-events [{moved,created,deleted,modified} [{moved,created,deleted,modified} ...]]\r\n                        Specify which file system events to watch, by default\r\n                        all events will be watched.\r\n  --dither DITHER_MAX   Add dither before restarting processes. Specify\r\n                        maximum time to dither in seconds.\r\n```\r\n\r\n## eventexec\r\n```shell\r\n$ eventexec --help\r\nusage: eventexec [-h] -e COMMAND [-p [PROGRAM [PROGRAM ...]]] [-a]\r\n                 [--dither DITHER_MAX]\r\n\r\nSupervisor event listener which executes a command when events are received\r\nand optionally restarts processes on non-zero exit status.\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -e COMMAND, --execute COMMAND\r\n                        Command or script to execute on supervisor events.\r\n  -p [PROGRAM [PROGRAM ...]], --restart-programs [PROGRAM [PROGRAM ...]]\r\n                        Supervisor process name/s to be restarted on non-zero\r\n                        exit status if in RUNNING state.\r\n  -a, --restart-any-program\r\n                        Restart any supervisor processes in RUNNING state on\r\n                        non-zero exit status.\r\n  --dither DITHER_MAX   Add dither before restarting processes. Specify\r\n                        maximum time to dither in seconds.\r\n```\r\n\r\n## processrestarter\r\n```shell\r\nprocessrestarter --help\r\nusage: processrestarter [-h] [-p [PROGRAM [PROGRAM ...]]] [-a]\r\n                        [--dither DITHER_MAX]\r\n\r\nSupervisor event listener which restarts processes on TICK events.\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -p [PROGRAM [PROGRAM ...]], --programs [PROGRAM [PROGRAM ...]]\r\n                        Supervisor process name/s to be restarted if in\r\n                        RUNNING state.\r\n  -a, --any-program     Restart any supervisor processes in RUNNING state.\r\n  --dither DITHER_MAX   Add dither before restarting processes. Specify\r\n                        maximum time to dither in seconds.\r\n```", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PlotWatt/supervisor-event-listeners", "keywords": "supervisor", "license": "", "maintainer": "", "maintainer_email": "", "name": "supervisor-event-listeners", "package_url": "https://pypi.org/project/supervisor-event-listeners/", "platform": "", "project_url": "https://pypi.org/project/supervisor-event-listeners/", "project_urls": {"Homepage": "https://github.com/PlotWatt/supervisor-event-listeners"}, "release_url": "https://pypi.org/project/supervisor-event-listeners/0.1/", "requires_dist": null, "requires_python": null, "summary": "A small collection of supervisor event listeners.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Supervisor Event Listeners\n<br>A small collection of supervisor event listeners that weren't available in the awesome [superlance](https://github.com/Supervisor/superlance).\n<br>\n<br>## fseventwatcher\n<br>```shell\n<br>$ fseventwatcher --help\n<br>usage: fseventwatcher [-h] [-p [PROGRAM [PROGRAM ...]]] [-a] -f PATH\n<br>                      [PATH ...] [-r]\n<br>                      [--watched-events [{moved,created,deleted,modified} [{moved,created,deleted,modified} ...]]]\n<br>                      [--dither DITHER_MAX]\n<br>\n<br>Supervisor TICK event listener which restarts processes if file system changes\n<br>occur between ticks.\n<br>\n<br>optional arguments:\n<br>  -h, --help            show this help message and exit\n<br>  -p [PROGRAM [PROGRAM ...]], --programs [PROGRAM [PROGRAM ...]]\n<br>                        Supervisor process name/s to be restarted if in\n<br>                        RUNNING state.\n<br>  -a, --any-program     Restart any supervisor processes in RUNNING state.\n<br>  -f PATH [PATH ...], --paths PATH [PATH ...]\n<br>                        Path to watch for file system events.\n<br>  -r, --recursive       Watch path/s recursively.\n<br>  --watched-events [{moved,created,deleted,modified} [{moved,created,deleted,modified} ...]]\n<br>                        Specify which file system events to watch, by default\n<br>                        all events will be watched.\n<br>  --dither DITHER_MAX   Add dither before restarting processes. Specify\n<br>                        maximum time to dither in seconds.\n<br>```\n<br>\n<br>## eventexec\n<br>```shell\n<br>$ eventexec --help\n<br>usage: eventexec [-h] -e COMMAND [-p [PROGRAM [PROGRAM ...]]] [-a]\n<br>                 [--dither DITHER_MAX]\n<br>\n<br>Supervisor event listener which executes a command when events are received\n<br>and optionally restarts processes on non-zero exit status.\n<br>\n<br>optional arguments:\n<br>  -h, --help            show this help message and exit\n<br>  -e COMMAND, --execute COMMAND\n<br>                        Command or script to execute on supervisor events.\n<br>  -p [PROGRAM [PROGRAM ...]], --restart-programs [PROGRAM [PROGRAM ...]]\n<br>                        Supervisor process name/s to be restarted on non-zero\n<br>                        exit status if in RUNNING state.\n<br>  -a, --restart-any-program\n<br>                        Restart any supervisor processes in RUNNING state on\n<br>                        non-zero exit status.\n<br>  --dither DITHER_MAX   Add dither before restarting processes. Specify\n<br>                        maximum time to dither in seconds.\n<br>```\n<br>\n<br>## processrestarter\n<br>```shell\n<br>processrestarter --help\n<br>usage: processrestarter [-h] [-p [PROGRAM [PROGRAM ...]]] [-a]\n<br>                        [--dither DITHER_MAX]\n<br>\n<br>Supervisor event listener which restarts processes on TICK events.\n<br>\n<br>optional arguments:\n<br>  -h, --help            show this help message and exit\n<br>  -p [PROGRAM [PROGRAM ...]], --programs [PROGRAM [PROGRAM ...]]\n<br>                        Supervisor process name/s to be restarted if in\n<br>                        RUNNING state.\n<br>  -a, --any-program     Restart any supervisor processes in RUNNING state.\n<br>  --dither DITHER_MAX   Add dither before restarting processes. Specify\n<br>                        maximum time to dither in seconds.\n<br>```\n          </div>"}, "last_serial": 2294739, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d38a72a317988fabca35ff895e19eff8", "sha256": "ab8ea6b358af29fa9dc7393625fffb80ea71d9dbefc697fa5b00486cd8844d88"}, "downloads": -1, "filename": "supervisor_event_listeners-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "d38a72a317988fabca35ff895e19eff8", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 7100, "upload_time": "2016-08-22T02:32:01", "upload_time_iso_8601": "2016-08-22T02:32:01.420194Z", "url": "https://files.pythonhosted.org/packages/a0/7d/dbedefad97ac999acd1edc03c3c5af7ace784993abedc69130db9e296c3d/supervisor_event_listeners-0.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f56d63baca98a1d835db394f5c59f167", "sha256": "26ef6c519e0ceadda8df8b8f0f25cf12187a1225843b7d4266603977501cbf51"}, "downloads": -1, "filename": "supervisor-event-listeners-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f56d63baca98a1d835db394f5c59f167", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3887, "upload_time": "2016-08-22T02:32:03", "upload_time_iso_8601": "2016-08-22T02:32:03.557216Z", "url": "https://files.pythonhosted.org/packages/5f/61/7ab8f690aa3ea55dee598eccae0f9c65f4f6cc179a5ca1f2e2804b4f6274/supervisor-event-listeners-0.0.1.tar.gz", "yanked": false}], "0.1": []}, "urls": [], "timestamp": "Fri May  8 03:00:07 2020"}