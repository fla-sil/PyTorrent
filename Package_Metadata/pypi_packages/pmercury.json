{"info": {"author": "Blake Anderson", "author_email": "blake.anderson@cisco.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Programming Language :: Python :: 3 :: Only", "Topic :: Security", "Topic :: System :: Networking :: Monitoring"], "description": "# pmercury\n\npmercury provides a Python reference implementation for network fingerprinting and advanced analysis techniques. As an example, the code can generate a TLS fingerprint given a network interface or packet capture file, and then leverage the provided fingerprint database to perform process identification.\n\nThere are four distinct (but related) components:\n\n* protocols/&ast;.pyx - A Python libraries providing APIs for fingerprint generation and inferencing\n* pmercury - A wrapper around protocols/&ast;.pyx that can process pcaps or listen to a network interface\n* ../src/python-inference/&ast; - A Cython port of protocols/tls.pyx that can be called from C++14 or higher code (and is used to perform process inference in mercury)\n* ../resources/fingerprint_db.json.gz - The star of the show; a detailed database associating billions of network and endpoint observations\n\n## Installation\n\npmercury depends on libpcap-dev:\n\n```bash\nsudo apt-get install libpcap-dev\n```\n\nOn Linux and Python 3.6 and 3.7, install pmercury with pip:\n\n```bash\npip3 install pmercury\n```\n\nTo build cython extensions:\n\n```bash\npython setup.py build_ext --inplace\n```\n\nTo install pmercury:\n\n```bash\npython setup.py install\n```\n\n## pmercury\n\npmercury is designed to highlight the functionality of the protocol classes and to provide a simple interface into the fingerprint database.\n\n\n### Dependencies\n\npmercury requires Python 3.6+ along with the following packages:\n\n```bash\npip3 install pyasn\npip3 install hpack\npip3 install pypcap\npip3 install pyyaml\npip3 install cryptography\n\npip3 install pyasn hpack pypcap pyyaml cryptography\n```\n\npip3 can be installed with 'sudo apt install python3-pip\u2019 on debian/ubuntu, or the equivalent command for your OS.\n\n### Usage\n\n```bash\n./pmercury [OPTIONS] [INPUT] [OUTPUT]\n\nINPUT\n   [-c or --capture] capture_interface          # live packet capture\n   [-r or --read] read_file_name                # read packets from file\n   [-d or --fp_db] fingerprint_database         # fingerprint database file (if you are not using the default)\n\nOUTPUT\n   [-f or --fingerprint] fingerprint_file_name  # write fingerprints to file (stdout is the default)\n\nOPTIONS\n   [-l or --lookup]                             # return database entry for a double quoted fingerprint string\n   [-n or --num-procs]                          # return the top-n most probable processes\n   [-s or --sslkeylogfile]                      # filename of sslkeylog output for decryption\n\nFLAGS\n   [-a or --analysis]                           # perform process identification\n   [-w or --human-readable]                     # return human readable fingerprint string\n   [-g or --group-flows]                        # aggregate packet-based fingerprints to flow-based\n   [-e or --endpoint]                           # aggregate packet-based fingerprints to endpoint-based\n   [-x or --experimental]                       # turns on all experimental features\n   [-h or --help]                               # help text\n```\n\nThe input can be either a list of packet capture files or a network interface.\n\nA default fingerprint database is supplied in the resources directory. Updating the repository is currently the only way to get the latest generated database. If you specify your own database, there may be some problems if the formatting is not as expected. Please raise an issue if this is an important use case for you.\n\nThe -a switch tells pmercury to perform inferencing on each observed ClientHello packet. The results are comprised of a 4-tuple specifying the name of the process (process) and a score representing the confidence of the algorithm in selecting that process (score).\n\n### Examples\n\nLooking up a fingerprint string in the database:\n\n```bash\n~/ $: ./pmercury -l \"(0301)(c014c01300390035002fc00ac00900380032000a001300050004)((0000)(000a0006000400170018)(000b00020100)(0017)(ff01))\" | jq .\n{\n  \"str_repr\": \"(0301)(c014c01300390035002fc00ac00900380032000a001300050004)((0000)(000a0006000400170018)(000b00020100)(0017)(ff01))\",\n  \"first_seen\": \"2019-07-22\",\n  \"last_seen\": \"2019-07-25\",\n  \"max_implementation_date\": \"2015-09\",\n  \"min_implementation_date\": \"1999-01\",\n  \"total_count\": 2,\n  \"process_info\": [\n    ...\n```\n\nPerforming process identification:\n\n```bash\n~/ $: ./pmercury -r ../test/data/top_100_fingerprints.pcap -a | jq .\n{\n  \"src_ip\": \"10.0.2.15\",\n  \"dst_ip\": \"172.217.7.228\",\n  \"src_port\": 37582,\n  \"dst_port\": 443,\n  \"protocol\": 6,\n  \"server_name\": \"www.google.com\",\n  \"timestamp\": \"2019-08-06 13:45:51.157055\",\n  \"fingerprints\": {\n    \"tls\": \"(0303)(c02c...)((0000)...)\"\n  }\n  \"analysis\": {\n    \"process\": \"Microsoft Office (WinNT)\",\n    \"score\": 0.9811716395\n  }\n}\n{\n  ...\n```\n\n### Experimental Features\n\nTLS client fingerprint extraction and process identification is relatively mature. The following are additional pmercury features that either have less thought put into their development, undergone less testing, and/or do not have associated fingerprint databases:\n\n* TLS decryption and fingerprint extraction - Currently decrypts TLS sessions when supplied a file in [NSS Key Log Format](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/Key_Log_Format) and extracts the internal HTTP/1.x and HTTP/2 requests and responses.\n* TLS server certificate extraction - Currently extracts metadata from the first certificate; no associated auxiliary data.\n* SSH server/client fingerprint extraction - Currently extracts metadata from the initial two messages from an SSH client or server.\n\nThese features can be turned on by invoking the **-x** option.\n\nTo perform decryption with HTTP/2 data extraction:\n\n```bash\n~/ $: ./pmercury -r ../test/data/test_decrypt.pcap -s ../test/data/sslkeylogfile.log -w -x\n{\n  \"src_ip\": \"10.0.2.15\",\n  \"dst_ip\": \"216.58.194.163\",\n  \"src_port\": 46362,\n  \"dst_port\": 443,\n  \"protocol\": 6,\n  \"event_start\": \"2019-09-04 16:03:52.933118\",\n  \"fingerprints\": {\n    \"tls_decrypt_h2\": \"(3a6d6574686f643a20474554)...\"\n  },\n  \"tls_decrypt_h2\": [\n    {\":method\": \"GET\"},\n    {\":authority\": \"clientservices.googleapis.com\"},\n    {\":scheme\": \"https\"},\n    {\":path\": \"/chrome-variations/seed?osname=linux&channel=beta&milestone=76\"},\n    {\"if-none-match\": \"314f8267d4516ba24ac54575521acebdbe10d2ec\"},\n    {\"a-im\": \"x-bm,gzip\"},\n    {\"sec-fetch-site\": \"none\"},\n    {\"user-agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.80 Safari/537.36\"},\n    {\"accept-encoding\": \"gzip, deflate, br\"}\n  ]\n}\n```\n\n\n## protocols/tls.py\n\ntls.py is designed to be a relatively self-contained Python library that provides a rich set of features w.r.t. TLS fingerprinting. The goal is for this library to be as easy as possible to integrate into any Python3 program. Please raise issues if it there are any awkward integration points.\n\n### Dependencies\n\ntls.py requires Python 3.6 along with the following packages:\n\n```bash\nsudo pip3 install numpy\nsudo pip3 install pyasn\n```\n\n### Useful Functions\n\nThe TLS class can be instantiated with the following:\n\n```python\ntls = TLS(database)\n```\n\ntls.py has the ability to extract a fingerprint string from the TCP data associated with a ClientHello. This function will return the fingerprint string and server_name. If the exact fingerprint string was not present in the database, this function will attempt to find and return an approximate match:\n\n```python\ndef fingerprint(self, data):\n    ...\n    return protocol_type, fp_str_, approx_str_, server_name\n```\n\nProcess identification is also handled, and is implemented with the help of lru_cache to improve performance. The function takes a fingerprint string, approximate fingerprint string which can be None, SNI, destination address, destination port, and an optional integer specifying the number of potential processes to return. This function return a dictionary with the inferred process, score, malware indicator, probability of malware, and an optional list of probable processes (probable_processes):\n\n```python\ndef proc_identify(self, fp_str_, context_, dest_addr, dest_port, list_procs=0):\n    server_name = None\n    if context_ != None and 'server_name' in context_:\n        server_name = context_['server_name']\n    # fingerprint approximate matching if necessary\n    ...\n\n    return self.identify(fp_str_, server_name, dest_addr, dest_port, list_procs)\n```\n\n\n## protocols/&ast;.py\nOther supported protocols in varying stages of development include:\n* TCP fingerprint extraction - Currently only based on TCP options; no fingerprint database.\n* TLS server fingerprint extraction - Currently only based on ServerHello; no fingerprint database.\n* HTTP/1.x client fingerprint extraction - Currently extracts all headers from the HTTP/1.x request; no fingerprint database.\n* HTTP/1.x server fingerprint extraction - Currently extracts all headers from the HTTP/1.x response; no fingerprint database.\n* DHCP - Currently extracts DHCP options and contextual data; no fingerprint database\n\n\n## Cython C++ Inferface\n\n\n## Fingerprint Database\n\nThe fingerprint database is a gzipped, 1 JSON object per line file. Each fingerprint contains the following metadata:\n\n```javascript\n{\n  \"str_repr\": \"(0303)(003d...)((0000)...)\", // String representation of the fingerprint\n  \"first_seen\": \"2018-06-05\",               // Date the fingerprint was first observed\n  \"last_seen\": \"2019-08-10\",                // Date the fingerprint was last observed\n  \"max_implementation_date\": \"2008-08\",     // Maximum RFC date that is associated with parameters in the fingerprint\n  \"min_implementation_date\": \"2002-06\",     // Minimum RFC date that is associated with parameters in the fingerprint\n  \"total_count\": 123,                       // Total number of sessions observed using this fingerprint\n  \"process_info\": [                         // Top-10 most common processes using this fingerprint\n    ...\n  ]\n}\n```\n\nEach process object contains some metadata along with objects that represent the destinations the process was observed contacting. The destination information is represented as equivalence classes, e.g., IP addresses are generalized to autonomous systems. For this open source version, the destination information is computed from the top-100 most popular destinations per process.\n\n```javascript\n{\n  \"process\": \"nmap.exe\",         // Name of the process\n  \"sha256\": \"F78 ... 99B\",       // SHA-256 hash of the process executable\n  \"count\": 10,                   // Total number of sessions observed using this process/fingerprint pair\n  \"classes_ip_as\": {             // Autonomous system equivalence class for IP addresses\n    \"109:Cisco_Systems\": 6,\n    ...\n  }\n  \"classes_hostname_tlds\": {     // Top level domain equivalence class for server name indication\n    \"com\": 9,\n    ...\n  }\n  \"classes_hostname_domains\": {  // Domain name equivalence class for server name indication\n    \"cisco.com\": 6,\n    ...\n  }\n  \"classes_port_applications\": { // Port application equivalence class for port number\n    \"https\": 9,\n    ...\n  }\n  \"os_info\": {                   // Top-5 most common operating systems observed with this process/fingerprint pair\n    \"(WinNT)...(10.0.17134)\": 8, // (OS)(OS Edition)(OS Version) -> number of sessions\n    ...\n  }\n}\n```\n\n\n## Acknowledgments\n\nThis product includes GeoLite2 data created by MaxMind, available from [https://www.maxmind.com](https://www.maxmind.com).\n\nWe make use of Mozilla's [Public Suffix List](https://publicsuffix.org/list/) which is subject to the terms of the [Mozilla Public License, v. 2.0](https://mozilla.org/MPL/2.0/).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cisco/mercury/", "keywords": "tls fingerprinting network traffic analysis", "license": "", "maintainer": "", "maintainer_email": "", "name": "pmercury", "package_url": "https://pypi.org/project/pmercury/", "platform": "", "project_url": "https://pypi.org/project/pmercury/", "project_urls": {"Homepage": "https://github.com/cisco/mercury/"}, "release_url": "https://pypi.org/project/pmercury/0.5.0.26/", "requires_dist": ["cryptography", "hpack", "pyasn", "pypcap", "pyyaml"], "requires_python": ">=3.6.0", "summary": "Python tool for network (TLS, etc.) fingerprinting", "version": "0.5.0.26", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pmercury</h1>\n<p>pmercury provides a Python reference implementation for network fingerprinting and advanced analysis techniques. As an example, the code can generate a TLS fingerprint given a network interface or packet capture file, and then leverage the provided fingerprint database to perform process identification.</p>\n<p>There are four distinct (but related) components:</p>\n<ul>\n<li>protocols/*.pyx - A Python libraries providing APIs for fingerprint generation and inferencing</li>\n<li>pmercury - A wrapper around protocols/*.pyx that can process pcaps or listen to a network interface</li>\n<li>../src/python-inference/* - A Cython port of protocols/tls.pyx that can be called from C++14 or higher code (and is used to perform process inference in mercury)</li>\n<li>../resources/fingerprint_db.json.gz - The star of the show; a detailed database associating billions of network and endpoint observations</li>\n</ul>\n<h2>Installation</h2>\n<p>pmercury depends on libpcap-dev:</p>\n<pre>sudo apt-get install libpcap-dev\n</pre>\n<p>On Linux and Python 3.6 and 3.7, install pmercury with pip:</p>\n<pre>pip3 install pmercury\n</pre>\n<p>To build cython extensions:</p>\n<pre>python setup.py build_ext --inplace\n</pre>\n<p>To install pmercury:</p>\n<pre>python setup.py install\n</pre>\n<h2>pmercury</h2>\n<p>pmercury is designed to highlight the functionality of the protocol classes and to provide a simple interface into the fingerprint database.</p>\n<h3>Dependencies</h3>\n<p>pmercury requires Python 3.6+ along with the following packages:</p>\n<pre>pip3 install pyasn\npip3 install hpack\npip3 install pypcap\npip3 install pyyaml\npip3 install cryptography\n\npip3 install pyasn hpack pypcap pyyaml cryptography\n</pre>\n<p>pip3 can be installed with 'sudo apt install python3-pip\u2019 on debian/ubuntu, or the equivalent command for your OS.</p>\n<h3>Usage</h3>\n<pre>./pmercury <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> <span class=\"o\">[</span>INPUT<span class=\"o\">]</span> <span class=\"o\">[</span>OUTPUT<span class=\"o\">]</span>\n\nINPUT\n   <span class=\"o\">[</span>-c or --capture<span class=\"o\">]</span> capture_interface          <span class=\"c1\"># live packet capture</span>\n   <span class=\"o\">[</span>-r or --read<span class=\"o\">]</span> read_file_name                <span class=\"c1\"># read packets from file</span>\n   <span class=\"o\">[</span>-d or --fp_db<span class=\"o\">]</span> fingerprint_database         <span class=\"c1\"># fingerprint database file (if you are not using the default)</span>\n\nOUTPUT\n   <span class=\"o\">[</span>-f or --fingerprint<span class=\"o\">]</span> fingerprint_file_name  <span class=\"c1\"># write fingerprints to file (stdout is the default)</span>\n\nOPTIONS\n   <span class=\"o\">[</span>-l or --lookup<span class=\"o\">]</span>                             <span class=\"c1\"># return database entry for a double quoted fingerprint string</span>\n   <span class=\"o\">[</span>-n or --num-procs<span class=\"o\">]</span>                          <span class=\"c1\"># return the top-n most probable processes</span>\n   <span class=\"o\">[</span>-s or --sslkeylogfile<span class=\"o\">]</span>                      <span class=\"c1\"># filename of sslkeylog output for decryption</span>\n\nFLAGS\n   <span class=\"o\">[</span>-a or --analysis<span class=\"o\">]</span>                           <span class=\"c1\"># perform process identification</span>\n   <span class=\"o\">[</span>-w or --human-readable<span class=\"o\">]</span>                     <span class=\"c1\"># return human readable fingerprint string</span>\n   <span class=\"o\">[</span>-g or --group-flows<span class=\"o\">]</span>                        <span class=\"c1\"># aggregate packet-based fingerprints to flow-based</span>\n   <span class=\"o\">[</span>-e or --endpoint<span class=\"o\">]</span>                           <span class=\"c1\"># aggregate packet-based fingerprints to endpoint-based</span>\n   <span class=\"o\">[</span>-x or --experimental<span class=\"o\">]</span>                       <span class=\"c1\"># turns on all experimental features</span>\n   <span class=\"o\">[</span>-h or --help<span class=\"o\">]</span>                               <span class=\"c1\"># help text</span>\n</pre>\n<p>The input can be either a list of packet capture files or a network interface.</p>\n<p>A default fingerprint database is supplied in the resources directory. Updating the repository is currently the only way to get the latest generated database. If you specify your own database, there may be some problems if the formatting is not as expected. Please raise an issue if this is an important use case for you.</p>\n<p>The -a switch tells pmercury to perform inferencing on each observed ClientHello packet. The results are comprised of a 4-tuple specifying the name of the process (process) and a score representing the confidence of the algorithm in selecting that process (score).</p>\n<h3>Examples</h3>\n<p>Looking up a fingerprint string in the database:</p>\n<pre>~/ $: ./pmercury -l <span class=\"s2\">\"(0301)(c014c01300390035002fc00ac00900380032000a001300050004)((0000)(000a0006000400170018)(000b00020100)(0017)(ff01))\"</span> <span class=\"p\">|</span> jq .\n<span class=\"o\">{</span>\n  <span class=\"s2\">\"str_repr\"</span>: <span class=\"s2\">\"(0301)(c014c01300390035002fc00ac00900380032000a001300050004)((0000)(000a0006000400170018)(000b00020100)(0017)(ff01))\"</span>,\n  <span class=\"s2\">\"first_seen\"</span>: <span class=\"s2\">\"2019-07-22\"</span>,\n  <span class=\"s2\">\"last_seen\"</span>: <span class=\"s2\">\"2019-07-25\"</span>,\n  <span class=\"s2\">\"max_implementation_date\"</span>: <span class=\"s2\">\"2015-09\"</span>,\n  <span class=\"s2\">\"min_implementation_date\"</span>: <span class=\"s2\">\"1999-01\"</span>,\n  <span class=\"s2\">\"total_count\"</span>: <span class=\"m\">2</span>,\n  <span class=\"s2\">\"process_info\"</span>: <span class=\"o\">[</span>\n    ...\n</pre>\n<p>Performing process identification:</p>\n<pre>~/ $: ./pmercury -r ../test/data/top_100_fingerprints.pcap -a <span class=\"p\">|</span> jq .\n<span class=\"o\">{</span>\n  <span class=\"s2\">\"src_ip\"</span>: <span class=\"s2\">\"10.0.2.15\"</span>,\n  <span class=\"s2\">\"dst_ip\"</span>: <span class=\"s2\">\"172.217.7.228\"</span>,\n  <span class=\"s2\">\"src_port\"</span>: <span class=\"m\">37582</span>,\n  <span class=\"s2\">\"dst_port\"</span>: <span class=\"m\">443</span>,\n  <span class=\"s2\">\"protocol\"</span>: <span class=\"m\">6</span>,\n  <span class=\"s2\">\"server_name\"</span>: <span class=\"s2\">\"www.google.com\"</span>,\n  <span class=\"s2\">\"timestamp\"</span>: <span class=\"s2\">\"2019-08-06 13:45:51.157055\"</span>,\n  <span class=\"s2\">\"fingerprints\"</span>: <span class=\"o\">{</span>\n    <span class=\"s2\">\"tls\"</span>: <span class=\"s2\">\"(0303)(c02c...)((0000)...)\"</span>\n  <span class=\"o\">}</span>\n  <span class=\"s2\">\"analysis\"</span>: <span class=\"o\">{</span>\n    <span class=\"s2\">\"process\"</span>: <span class=\"s2\">\"Microsoft Office (WinNT)\"</span>,\n    <span class=\"s2\">\"score\"</span>: <span class=\"m\">0</span>.9811716395\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n<span class=\"o\">{</span>\n  ...\n</pre>\n<h3>Experimental Features</h3>\n<p>TLS client fingerprint extraction and process identification is relatively mature. The following are additional pmercury features that either have less thought put into their development, undergone less testing, and/or do not have associated fingerprint databases:</p>\n<ul>\n<li>TLS decryption and fingerprint extraction - Currently decrypts TLS sessions when supplied a file in <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/Key_Log_Format\" rel=\"nofollow\">NSS Key Log Format</a> and extracts the internal HTTP/1.x and HTTP/2 requests and responses.</li>\n<li>TLS server certificate extraction - Currently extracts metadata from the first certificate; no associated auxiliary data.</li>\n<li>SSH server/client fingerprint extraction - Currently extracts metadata from the initial two messages from an SSH client or server.</li>\n</ul>\n<p>These features can be turned on by invoking the <strong>-x</strong> option.</p>\n<p>To perform decryption with HTTP/2 data extraction:</p>\n<pre>~/ $: ./pmercury -r ../test/data/test_decrypt.pcap -s ../test/data/sslkeylogfile.log -w -x\n<span class=\"o\">{</span>\n  <span class=\"s2\">\"src_ip\"</span>: <span class=\"s2\">\"10.0.2.15\"</span>,\n  <span class=\"s2\">\"dst_ip\"</span>: <span class=\"s2\">\"216.58.194.163\"</span>,\n  <span class=\"s2\">\"src_port\"</span>: <span class=\"m\">46362</span>,\n  <span class=\"s2\">\"dst_port\"</span>: <span class=\"m\">443</span>,\n  <span class=\"s2\">\"protocol\"</span>: <span class=\"m\">6</span>,\n  <span class=\"s2\">\"event_start\"</span>: <span class=\"s2\">\"2019-09-04 16:03:52.933118\"</span>,\n  <span class=\"s2\">\"fingerprints\"</span>: <span class=\"o\">{</span>\n    <span class=\"s2\">\"tls_decrypt_h2\"</span>: <span class=\"s2\">\"(3a6d6574686f643a20474554)...\"</span>\n  <span class=\"o\">}</span>,\n  <span class=\"s2\">\"tls_decrypt_h2\"</span>: <span class=\"o\">[</span>\n    <span class=\"o\">{</span><span class=\"s2\">\":method\"</span>: <span class=\"s2\">\"GET\"</span><span class=\"o\">}</span>,\n    <span class=\"o\">{</span><span class=\"s2\">\":authority\"</span>: <span class=\"s2\">\"clientservices.googleapis.com\"</span><span class=\"o\">}</span>,\n    <span class=\"o\">{</span><span class=\"s2\">\":scheme\"</span>: <span class=\"s2\">\"https\"</span><span class=\"o\">}</span>,\n    <span class=\"o\">{</span><span class=\"s2\">\":path\"</span>: <span class=\"s2\">\"/chrome-variations/seed?osname=linux&amp;channel=beta&amp;milestone=76\"</span><span class=\"o\">}</span>,\n    <span class=\"o\">{</span><span class=\"s2\">\"if-none-match\"</span>: <span class=\"s2\">\"314f8267d4516ba24ac54575521acebdbe10d2ec\"</span><span class=\"o\">}</span>,\n    <span class=\"o\">{</span><span class=\"s2\">\"a-im\"</span>: <span class=\"s2\">\"x-bm,gzip\"</span><span class=\"o\">}</span>,\n    <span class=\"o\">{</span><span class=\"s2\">\"sec-fetch-site\"</span>: <span class=\"s2\">\"none\"</span><span class=\"o\">}</span>,\n    <span class=\"o\">{</span><span class=\"s2\">\"user-agent\"</span>: <span class=\"s2\">\"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.80 Safari/537.36\"</span><span class=\"o\">}</span>,\n    <span class=\"o\">{</span><span class=\"s2\">\"accept-encoding\"</span>: <span class=\"s2\">\"gzip, deflate, br\"</span><span class=\"o\">}</span>\n  <span class=\"o\">]</span>\n<span class=\"o\">}</span>\n</pre>\n<h2>protocols/tls.py</h2>\n<p>tls.py is designed to be a relatively self-contained Python library that provides a rich set of features w.r.t. TLS fingerprinting. The goal is for this library to be as easy as possible to integrate into any Python3 program. Please raise issues if it there are any awkward integration points.</p>\n<h3>Dependencies</h3>\n<p>tls.py requires Python 3.6 along with the following packages:</p>\n<pre>sudo pip3 install numpy\nsudo pip3 install pyasn\n</pre>\n<h3>Useful Functions</h3>\n<p>The TLS class can be instantiated with the following:</p>\n<pre><span class=\"n\">tls</span> <span class=\"o\">=</span> <span class=\"n\">TLS</span><span class=\"p\">(</span><span class=\"n\">database</span><span class=\"p\">)</span>\n</pre>\n<p>tls.py has the ability to extract a fingerprint string from the TCP data associated with a ClientHello. This function will return the fingerprint string and server_name. If the exact fingerprint string was not present in the database, this function will attempt to find and return an approximate match:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">fingerprint</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n    <span class=\"k\">return</span> <span class=\"n\">protocol_type</span><span class=\"p\">,</span> <span class=\"n\">fp_str_</span><span class=\"p\">,</span> <span class=\"n\">approx_str_</span><span class=\"p\">,</span> <span class=\"n\">server_name</span>\n</pre>\n<p>Process identification is also handled, and is implemented with the help of lru_cache to improve performance. The function takes a fingerprint string, approximate fingerprint string which can be None, SNI, destination address, destination port, and an optional integer specifying the number of potential processes to return. This function return a dictionary with the inferred process, score, malware indicator, probability of malware, and an optional list of probable processes (probable_processes):</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">proc_identify</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">fp_str_</span><span class=\"p\">,</span> <span class=\"n\">context_</span><span class=\"p\">,</span> <span class=\"n\">dest_addr</span><span class=\"p\">,</span> <span class=\"n\">dest_port</span><span class=\"p\">,</span> <span class=\"n\">list_procs</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n    <span class=\"n\">server_name</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"k\">if</span> <span class=\"n\">context_</span> <span class=\"o\">!=</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"s1\">'server_name'</span> <span class=\"ow\">in</span> <span class=\"n\">context_</span><span class=\"p\">:</span>\n        <span class=\"n\">server_name</span> <span class=\"o\">=</span> <span class=\"n\">context_</span><span class=\"p\">[</span><span class=\"s1\">'server_name'</span><span class=\"p\">]</span>\n    <span class=\"c1\"># fingerprint approximate matching if necessary</span>\n    <span class=\"o\">...</span>\n\n    <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">identify</span><span class=\"p\">(</span><span class=\"n\">fp_str_</span><span class=\"p\">,</span> <span class=\"n\">server_name</span><span class=\"p\">,</span> <span class=\"n\">dest_addr</span><span class=\"p\">,</span> <span class=\"n\">dest_port</span><span class=\"p\">,</span> <span class=\"n\">list_procs</span><span class=\"p\">)</span>\n</pre>\n<h2>protocols/*.py</h2>\n<p>Other supported protocols in varying stages of development include:</p>\n<ul>\n<li>TCP fingerprint extraction - Currently only based on TCP options; no fingerprint database.</li>\n<li>TLS server fingerprint extraction - Currently only based on ServerHello; no fingerprint database.</li>\n<li>HTTP/1.x client fingerprint extraction - Currently extracts all headers from the HTTP/1.x request; no fingerprint database.</li>\n<li>HTTP/1.x server fingerprint extraction - Currently extracts all headers from the HTTP/1.x response; no fingerprint database.</li>\n<li>DHCP - Currently extracts DHCP options and contextual data; no fingerprint database</li>\n</ul>\n<h2>Cython C++ Inferface</h2>\n<h2>Fingerprint Database</h2>\n<p>The fingerprint database is a gzipped, 1 JSON object per line file. Each fingerprint contains the following metadata:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"s2\">\"str_repr\"</span><span class=\"o\">:</span> <span class=\"s2\">\"(0303)(003d...)((0000)...)\"</span><span class=\"p\">,</span> <span class=\"c1\">// String representation of the fingerprint</span>\n  <span class=\"s2\">\"first_seen\"</span><span class=\"o\">:</span> <span class=\"s2\">\"2018-06-05\"</span><span class=\"p\">,</span>               <span class=\"c1\">// Date the fingerprint was first observed</span>\n  <span class=\"s2\">\"last_seen\"</span><span class=\"o\">:</span> <span class=\"s2\">\"2019-08-10\"</span><span class=\"p\">,</span>                <span class=\"c1\">// Date the fingerprint was last observed</span>\n  <span class=\"s2\">\"max_implementation_date\"</span><span class=\"o\">:</span> <span class=\"s2\">\"2008-08\"</span><span class=\"p\">,</span>     <span class=\"c1\">// Maximum RFC date that is associated with parameters in the fingerprint</span>\n  <span class=\"s2\">\"min_implementation_date\"</span><span class=\"o\">:</span> <span class=\"s2\">\"2002-06\"</span><span class=\"p\">,</span>     <span class=\"c1\">// Minimum RFC date that is associated with parameters in the fingerprint</span>\n  <span class=\"s2\">\"total_count\"</span><span class=\"o\">:</span> <span class=\"mi\">123</span><span class=\"p\">,</span>                       <span class=\"c1\">// Total number of sessions observed using this fingerprint</span>\n  <span class=\"s2\">\"process_info\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>                         <span class=\"c1\">// Top-10 most common processes using this fingerprint</span>\n    <span class=\"p\">...</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Each process object contains some metadata along with objects that represent the destinations the process was observed contacting. The destination information is represented as equivalence classes, e.g., IP addresses are generalized to autonomous systems. For this open source version, the destination information is computed from the top-100 most popular destinations per process.</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"s2\">\"process\"</span><span class=\"o\">:</span> <span class=\"s2\">\"nmap.exe\"</span><span class=\"p\">,</span>         <span class=\"c1\">// Name of the process</span>\n  <span class=\"s2\">\"sha256\"</span><span class=\"o\">:</span> <span class=\"s2\">\"F78 ... 99B\"</span><span class=\"p\">,</span>       <span class=\"c1\">// SHA-256 hash of the process executable</span>\n  <span class=\"s2\">\"count\"</span><span class=\"o\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>                   <span class=\"c1\">// Total number of sessions observed using this process/fingerprint pair</span>\n  <span class=\"s2\">\"classes_ip_as\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>             <span class=\"c1\">// Autonomous system equivalence class for IP addresses</span>\n    <span class=\"s2\">\"109:Cisco_Systems\"</span><span class=\"o\">:</span> <span class=\"mi\">6</span><span class=\"p\">,</span>\n    <span class=\"p\">...</span>\n  <span class=\"p\">}</span>\n  <span class=\"s2\">\"classes_hostname_tlds\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>     <span class=\"c1\">// Top level domain equivalence class for server name indication</span>\n    <span class=\"s2\">\"com\"</span><span class=\"o\">:</span> <span class=\"mi\">9</span><span class=\"p\">,</span>\n    <span class=\"p\">...</span>\n  <span class=\"p\">}</span>\n  <span class=\"s2\">\"classes_hostname_domains\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>  <span class=\"c1\">// Domain name equivalence class for server name indication</span>\n    <span class=\"s2\">\"cisco.com\"</span><span class=\"o\">:</span> <span class=\"mi\">6</span><span class=\"p\">,</span>\n    <span class=\"p\">...</span>\n  <span class=\"p\">}</span>\n  <span class=\"s2\">\"classes_port_applications\"</span><span class=\"o\">:</span> <span class=\"p\">{</span> <span class=\"c1\">// Port application equivalence class for port number</span>\n    <span class=\"s2\">\"https\"</span><span class=\"o\">:</span> <span class=\"mi\">9</span><span class=\"p\">,</span>\n    <span class=\"p\">...</span>\n  <span class=\"p\">}</span>\n  <span class=\"s2\">\"os_info\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>                   <span class=\"c1\">// Top-5 most common operating systems observed with this process/fingerprint pair</span>\n    <span class=\"s2\">\"(WinNT)...(10.0.17134)\"</span><span class=\"o\">:</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"c1\">// (OS)(OS Edition)(OS Version) -&gt; number of sessions</span>\n    <span class=\"p\">...</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<h2>Acknowledgments</h2>\n<p>This product includes GeoLite2 data created by MaxMind, available from <a href=\"https://www.maxmind.com\" rel=\"nofollow\">https://www.maxmind.com</a>.</p>\n<p>We make use of Mozilla's <a href=\"https://publicsuffix.org/list/\" rel=\"nofollow\">Public Suffix List</a> which is subject to the terms of the <a href=\"https://mozilla.org/MPL/2.0/\" rel=\"nofollow\">Mozilla Public License, v. 2.0</a>.</p>\n\n          </div>"}, "last_serial": 6961420, "releases": {"0.1.0.0": [{"comment_text": "", "digests": {"md5": "bbf7b40bb61919cda73004ff77e03dd1", "sha256": "2abf12b2c922edcebd464b3f1a40f228e8a5d2a9f6de87e50dbf8e4aadd0a287"}, "downloads": -1, "filename": "pmercury-0.1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bbf7b40bb61919cda73004ff77e03dd1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7405388, "upload_time": "2019-09-23T16:31:53", "upload_time_iso_8601": "2019-09-23T16:31:53.150790Z", "url": "https://files.pythonhosted.org/packages/c5/aa/bc948582d7bb22c00a804f27da3a4016e966e804fbe1fe7a5cade4b89de1/pmercury-0.1.0.0-py3-none-any.whl", "yanked": false}], "0.1.1.0": [{"comment_text": "", "digests": {"md5": "1d1cdc12c9bb69860c3a7bdcb0269282", "sha256": "827d92463a1cce51897cbcc4a73be365940ffa652d4139cc68b9235fea9bbdbc"}, "downloads": -1, "filename": "pmercury-0.1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1d1cdc12c9bb69860c3a7bdcb0269282", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7442009, "upload_time": "2019-09-27T17:16:12", "upload_time_iso_8601": "2019-09-27T17:16:12.826155Z", "url": "https://files.pythonhosted.org/packages/9a/e0/a0a79252e1bdf628ec73497db94cc4b638800526d2fb7612f435058c2389/pmercury-0.1.1.0-py3-none-any.whl", "yanked": false}], "0.1.3.1": [{"comment_text": "", "digests": {"md5": "90debb2cbfa834845eb7142696d52b8f", "sha256": "0920191c1193148d3862aea88a28922237f05646713f1a75e1d806762ca6f798"}, "downloads": -1, "filename": "pmercury-0.1.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "90debb2cbfa834845eb7142696d52b8f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7508048, "upload_time": "2019-10-02T13:53:54", "upload_time_iso_8601": "2019-10-02T13:53:54.850786Z", "url": "https://files.pythonhosted.org/packages/e3/f4/a3a64d42a8a2a20cc08370def8765295a529eb10aa13344a99e125d0a205/pmercury-0.1.3.1-py3-none-any.whl", "yanked": false}], "0.2.0.1": [{"comment_text": "", "digests": {"md5": "ecfe175b6f16ae41338ee7ac265b87b0", "sha256": "aa6796c8054830a3586f49c3928856a5688c08b592c9c02245198fea20bda07c"}, "downloads": -1, "filename": "pmercury-0.2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ecfe175b6f16ae41338ee7ac265b87b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7550811, "upload_time": "2019-10-12T22:48:12", "upload_time_iso_8601": "2019-10-12T22:48:12.091350Z", "url": "https://files.pythonhosted.org/packages/4c/9e/c5e09529637dea68f4a11c01d96cae51d0d2168b54c06a0d1de6edd3d062/pmercury-0.2.0.1-py3-none-any.whl", "yanked": false}], "0.2.1.2": [{"comment_text": "", "digests": {"md5": "696219a90bc3761e2f4cb0f2664e46ad", "sha256": "3e856a527162cb6e4f06ac4267c35f97b836e84a31f9ec58d04e7a681396fc9f"}, "downloads": -1, "filename": "pmercury-0.2.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "696219a90bc3761e2f4cb0f2664e46ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7627615, "upload_time": "2019-10-18T17:56:09", "upload_time_iso_8601": "2019-10-18T17:56:09.007807Z", "url": "https://files.pythonhosted.org/packages/f5/32/9c6b22d04d6d238718de82d6128e7aca30e9e55c413718fd11d5410a9ff6/pmercury-0.2.1.2-py3-none-any.whl", "yanked": false}], "0.2.1.3": [{"comment_text": "", "digests": {"md5": "adb6a7ed788602db6c263f9cbe9d94e5", "sha256": "5237c790eaad974f3bfae011dde251bf8ec563855a8667a47f20d524548a0883"}, "downloads": -1, "filename": "pmercury-0.2.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "adb6a7ed788602db6c263f9cbe9d94e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7660490, "upload_time": "2019-10-21T06:45:24", "upload_time_iso_8601": "2019-10-21T06:45:24.821244Z", "url": "https://files.pythonhosted.org/packages/6a/8f/e5f3f4f068d61d22574d7c95383c8348519b6b7c77c1432739733fc53b30/pmercury-0.2.1.3-py3-none-any.whl", "yanked": false}], "0.4.0.14": [{"comment_text": "", "digests": {"md5": "7431fb479a6a00584d7c052c5870c09f", "sha256": "0ecba75cd2a81ff8278b66ca5c6a9eb56f8002a20358a418fa719f931a4ab06d"}, "downloads": -1, "filename": "pmercury-0.4.0.14-cp36-cp36m-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "7431fb479a6a00584d7c052c5870c09f", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.6.0", "size": 7261208, "upload_time": "2020-01-08T14:52:03", "upload_time_iso_8601": "2020-01-08T14:52:03.969065Z", "url": "https://files.pythonhosted.org/packages/c6/85/d08057d370cd40b22ed7d5ffc2ebcd8b73e74fd361515510616f6f75596f/pmercury-0.4.0.14-cp36-cp36m-manylinux2014_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08a6650eca4f31621d5a80ebff5443b5", "sha256": "cde944703facab8a1617e3a30f8e5c6b66a83d353b7d312729d3c06ae3686868"}, "downloads": -1, "filename": "pmercury-0.4.0.14-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "08a6650eca4f31621d5a80ebff5443b5", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.6.0", "size": 5936963, "upload_time": "2020-01-08T14:52:16", "upload_time_iso_8601": "2020-01-08T14:52:16.159674Z", "url": "https://files.pythonhosted.org/packages/44/cf/6f3bedb9b493fcf72f044b3bebde45f6f95365ee402130740886e1d9a282/pmercury-0.4.0.14-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd0b31abe108022c681857f9e9879936", "sha256": "375f52b8984c0a4880f089384a53bcc415b6cb9458f714c8a6e012f8e7e8452d"}, "downloads": -1, "filename": "pmercury-0.4.0.14-cp37-cp37m-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "cd0b31abe108022c681857f9e9879936", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6.0", "size": 7270136, "upload_time": "2020-01-08T14:52:30", "upload_time_iso_8601": "2020-01-08T14:52:30.482424Z", "url": "https://files.pythonhosted.org/packages/99/cc/95f6fa1177c3a73bf165cb821137e163c8a45862618d6f0f5375a0980cd5/pmercury-0.4.0.14-cp37-cp37m-manylinux2014_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "252bc54d4389bc8813d0e43d7de85d1c", "sha256": "9a8ab1932e922bd8e655acde7630a97071996b3fd7c141edbfa652b639b62f29"}, "downloads": -1, "filename": "pmercury-0.4.0.14-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "252bc54d4389bc8813d0e43d7de85d1c", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6.0", "size": 5938525, "upload_time": "2020-01-08T14:52:42", "upload_time_iso_8601": "2020-01-08T14:52:42.828395Z", "url": "https://files.pythonhosted.org/packages/da/2f/490d3e055aa1a3dc22b5e6b8a87bae5564ef732e742058188529e5c8cdd7/pmercury-0.4.0.14-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "48ce0a5d56167ebc0ee9bc2455af8ffa", "sha256": "bd50ffd43b9161f8187b04aead31f97f6fcb04bdefe71ccf172d4d3bd7e08660"}, "downloads": -1, "filename": "pmercury-0.4.0.14-cp38-cp38-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "48ce0a5d56167ebc0ee9bc2455af8ffa", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.6.0", "size": 7594598, "upload_time": "2020-01-08T14:52:57", "upload_time_iso_8601": "2020-01-08T14:52:57.669235Z", "url": "https://files.pythonhosted.org/packages/6a/74/1c89d0ad7494db4555786a7b867995666b44c2691483f59193cac1d6772d/pmercury-0.4.0.14-cp38-cp38-manylinux2014_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b7e9c93a1785bb8aca25c2a05d406d8", "sha256": "8c59860d653e5b0df89af736c15783843c2d00884e31b5e201a911543a3fd6f1"}, "downloads": -1, "filename": "pmercury-0.4.0.14-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "2b7e9c93a1785bb8aca25c2a05d406d8", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.6.0", "size": 5905342, "upload_time": "2020-01-08T14:53:10", "upload_time_iso_8601": "2020-01-08T14:53:10.198829Z", "url": "https://files.pythonhosted.org/packages/72/74/e1b2856f6da04e2adaf9a1edadddd301b4a896bfeff1319bd2542aa4498d/pmercury-0.4.0.14-cp38-cp38-win_amd64.whl", "yanked": false}], "0.4.2.15": [{"comment_text": "", "digests": {"md5": "4ebac846db886a0c0f940a6b460f69e7", "sha256": "b06d1f9a7b1af694f93ab977453e91dff80fbc44eb563cd3fc1919a8dd9fa995"}, "downloads": -1, "filename": "pmercury-0.4.2.15-cp36-cp36m-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "4ebac846db886a0c0f940a6b460f69e7", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.6.0", "size": 6493732, "upload_time": "2020-01-13T21:35:29", "upload_time_iso_8601": "2020-01-13T21:35:29.823358Z", "url": "https://files.pythonhosted.org/packages/f8/35/593f12938c7a5662229b5a3ce2756e2456f7cbe685328139fb1c266c5efc/pmercury-0.4.2.15-cp36-cp36m-manylinux2014_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "815cb3d83f5490d38a92aa58fa4a2b14", "sha256": "598a24444df6df41389f39896db7558e093cbb794183b564d0000c91ba646c4a"}, "downloads": -1, "filename": "pmercury-0.4.2.15-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "815cb3d83f5490d38a92aa58fa4a2b14", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.6.0", "size": 9806743, "upload_time": "2020-01-13T21:35:36", "upload_time_iso_8601": "2020-01-13T21:35:36.713951Z", "url": "https://files.pythonhosted.org/packages/07/ba/0c9ad42c0b6b2361e5edfd0564b12ae25534d54c80ed8a6fb75426830e95/pmercury-0.4.2.15-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "665b17d2c80e83fed9e4745b3d3d51e1", "sha256": "3afb4dfc15561582113ec01b77a0601f0871c83c6f88d33de9e159d8456bf321"}, "downloads": -1, "filename": "pmercury-0.4.2.15-cp37-cp37m-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "665b17d2c80e83fed9e4745b3d3d51e1", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6.0", "size": 6493717, "upload_time": "2020-01-13T21:35:42", "upload_time_iso_8601": "2020-01-13T21:35:42.534783Z", "url": "https://files.pythonhosted.org/packages/ec/e2/1a14be89d67329f883ff9995944cc9ab1ae9c464f9b2ababe10b65d6c4f8/pmercury-0.4.2.15-cp37-cp37m-manylinux2014_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b9f20b743b5c8b062d801efce1e3a563", "sha256": "29e1242c607c04b34268849dc7a92fc65b0302f4f290a185a237ebfe0e86aeab"}, "downloads": -1, "filename": "pmercury-0.4.2.15-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "b9f20b743b5c8b062d801efce1e3a563", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6.0", "size": 9808387, "upload_time": "2020-01-13T21:35:48", "upload_time_iso_8601": "2020-01-13T21:35:48.545505Z", "url": "https://files.pythonhosted.org/packages/03/e5/5609dc6f642419e398d9a37ff510d99c64afe727435985d5b79d31e7d12c/pmercury-0.4.2.15-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5e7069fcd07180f66a4669a59000511", "sha256": "75c05bc82a4068b328b2b749c1e88916e2833b3bd1b07b1420ac0d03b9e362a8"}, "downloads": -1, "filename": "pmercury-0.4.2.15-cp38-cp38-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "b5e7069fcd07180f66a4669a59000511", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.6.0", "size": 6818260, "upload_time": "2020-01-13T21:35:53", "upload_time_iso_8601": "2020-01-13T21:35:53.989328Z", "url": "https://files.pythonhosted.org/packages/c9/39/1d8346953d4ec422de8178af54536394493ad9dd6275f4ac7ca3eb8d6852/pmercury-0.4.2.15-cp38-cp38-manylinux2014_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17b2f9facbe6e31f8125ae0964f29d38", "sha256": "b76523d26108b01d72c577be44b485971ad047d8d5df5304564685cebc17e5af"}, "downloads": -1, "filename": "pmercury-0.4.2.15-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "17b2f9facbe6e31f8125ae0964f29d38", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.6.0", "size": 9775039, "upload_time": "2020-01-13T21:36:00", "upload_time_iso_8601": "2020-01-13T21:36:00.521540Z", "url": "https://files.pythonhosted.org/packages/7b/5c/f8096719ca107cf1394d370345fa3bd65c9a2d8bada44814006ec4a36384/pmercury-0.4.2.15-cp38-cp38-win_amd64.whl", "yanked": false}], "0.4.3.16": [{"comment_text": "", "digests": {"md5": "b1dcb563d7541b0d2b271015665584f0", "sha256": "dced245f9c75221432c85a82c054d16f76be1cccf7721284c221f5adb3df97a9"}, "downloads": -1, "filename": "pmercury-0.4.3.16-cp36-cp36m-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "b1dcb563d7541b0d2b271015665584f0", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.6.0", "size": 6485193, "upload_time": "2020-01-30T18:56:26", "upload_time_iso_8601": "2020-01-30T18:56:26.856566Z", "url": "https://files.pythonhosted.org/packages/00/62/969f8582146096c55be60eb66aa703273ff77a31f897b00d407b717cec80/pmercury-0.4.3.16-cp36-cp36m-manylinux2014_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3789c7ff1d8dd93707f5afeeae32003e", "sha256": "322994e272aaef13dc1394f734aa21768228573970ebb6c5f5fb5514dfb7b0fa"}, "downloads": -1, "filename": "pmercury-0.4.3.16-cp37-cp37m-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "3789c7ff1d8dd93707f5afeeae32003e", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6.0", "size": 6493033, "upload_time": "2020-01-30T18:56:29", "upload_time_iso_8601": "2020-01-30T18:56:29.841037Z", "url": "https://files.pythonhosted.org/packages/1c/3e/4bbdf781dda76ec39c2d6e8a820a102ce069c216216d5998e131bc0b5b52/pmercury-0.4.3.16-cp37-cp37m-manylinux2014_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4830b489aec1a498abecefd71b2bee89", "sha256": "132fd56c7e817ff8154d732bead13cf582bcc317c1838d2fa3da697b4cc80bfe"}, "downloads": -1, "filename": "pmercury-0.4.3.16-cp38-cp38-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "4830b489aec1a498abecefd71b2bee89", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.6.0", "size": 6819284, "upload_time": "2020-01-30T18:56:32", "upload_time_iso_8601": "2020-01-30T18:56:32.668359Z", "url": "https://files.pythonhosted.org/packages/2b/9b/ea911491ea46f91a5774f02a8472361e8ee724672b7830a934e22d0754ea/pmercury-0.4.3.16-cp38-cp38-manylinux2014_x86_64.whl", "yanked": false}], "0.5.0.26": [{"comment_text": "", "digests": {"md5": "cf5b5fbf4feb3795349769457dfc19b5", "sha256": "bba91de26acceb498c7cc1244e8ea42ad6b9a46f2f4908f2538cef4acdaa664b"}, "downloads": -1, "filename": "pmercury-0.5.0.26-py3-none-any.whl", "has_sig": false, "md5_digest": "cf5b5fbf4feb3795349769457dfc19b5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 7098280, "upload_time": "2020-04-06T12:56:50", "upload_time_iso_8601": "2020-04-06T12:56:50.246622Z", "url": "https://files.pythonhosted.org/packages/9d/10/978782aa966cdca2f23ec91326adebd1beed0bf1f37a819e256304825e7d/pmercury-0.5.0.26-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cf5b5fbf4feb3795349769457dfc19b5", "sha256": "bba91de26acceb498c7cc1244e8ea42ad6b9a46f2f4908f2538cef4acdaa664b"}, "downloads": -1, "filename": "pmercury-0.5.0.26-py3-none-any.whl", "has_sig": false, "md5_digest": "cf5b5fbf4feb3795349769457dfc19b5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 7098280, "upload_time": "2020-04-06T12:56:50", "upload_time_iso_8601": "2020-04-06T12:56:50.246622Z", "url": "https://files.pythonhosted.org/packages/9d/10/978782aa966cdca2f23ec91326adebd1beed0bf1f37a819e256304825e7d/pmercury-0.5.0.26-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:52:18 2020"}